[{"category": "", "categoryclass": "", "imagename": "722d520a78239c0d31ed86e93f423f0a.jpeg", "infoid": 1010059, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u8def\u900f\u793e)-\u7279\u65af\u62c9\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u57c3\u9686\u00b7\u9a6c\u65af\u514b\u5468\u4e09\u5728Twitter\u4e0a\u53d1\u5e16\u79f0\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u5236\u9020\u79fb\u52a8\u5206\u5b50\u6253\u5370\u673a\uff0c\u4ee5\u5e2e\u52a9\u751f\u4ea7\u7531\u5fb7\u56fdCureVac\u6b63\u5728\u5f00\u53d1\u7684\u6f5c\u5728\u65b0\u51a0\u80ba\u708e\u75ab\u82d7\u3002\n\u672a\u4e0a\u5e02\u7684\u5fb7\u56fd\u516c\u53f8CureVac\u8868\u793a\uff0c\u5b83\u6b63\u5728\u5f00\u53d1\u88ab\u79f0\u4e3a\u6253\u5370\u673a\u7684\u4fbf\u643a\u5f0f\u3001\u81ea\u52a8\u5316\u7684mRNA\u751f\u4ea7\u88c5\u7f6e\uff0c\u9a6c\u65af\u514b\u5c06\u5176\u63cf\u8ff0\u4e3a\u201cRNA\u5fae\u578b\u5de5\u5382\u201d\u3002\n\u5b83\u4eec\u88ab\u8bbe\u8ba1\u6210\u88ab\u8fd0\u5f80\u504f\u8fdc\u5730\u533a\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u53ef\u4ee5\u6839\u636e\u8f93\u5165\u673a\u5668\u7684\u914d\u65b9\u5927\u91cf\u751f\u4ea7\u5176\u5019\u9009\u75ab\u82d7\u548c\u5176\u4ed6\u57fa\u4e8emRNA\u7684\u7597\u6cd5\u3002\n\u4f46\u5bf9\u4e8e\u7acb\u5373\u5927\u6d41\u884c\u7684\u4f7f\u7528-\u5982\u679c\u5176\u5019\u9009\u75ab\u82d7\u83b7\u5f97\u5e02\u573a\u6279\u51c6-\u5b83\u5728\u5fb7\u56fd\u62e5\u6709\u83b7\u5f97\u76d1\u7ba1\u6279\u51c6\u7684\u751f\u4ea7\u5730\u70b9\uff0c\u6709\u80fd\u529b\u751f\u4ea7\u6570\u4ebf\u5242\u3002\n\u8be5\u516c\u53f8\u603b\u90e8\u8bbe\u5728\u56fe\u5bbe\u6839\uff0c\u5f97\u5230\u6bd4\u5c14\u548c\u6885\u6797\u8fbe\u00b7\u76d6\u8328\u57fa\u91d1\u4f1a(Bill&amp\uff1bMelinda Gates Foundation)\u7684\u652f\u6301\uff0c\u662f\u6240\u8c13\u4fe1\u4f7fRNA\u65b9\u6cd5\u7684\u5148\u9a71\uff0cBioNTech\u53ca\u5176\u5408\u4f5c\u4f19\u4f34\u8f89\u745e(Pfizer)\u548c\u73b0\u4ee3\u5236\u836f(Modelna)\u4e5f\u5728\u8ffd\u6c42\u8fd9\u4e00\u65b9\u6cd5\u3002\nRNA\u5206\u5b50\u662f\u5355\u94fe\u7684\uff0c\u7531\u4e8e\u5176\u91cd\u590d\u51fa\u73b0\u7684\u5206\u5b50\u6a21\u5f0f\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u76f8\u5bf9\u7b80\u5355\u7684\u751f\u5316\u8fc7\u7a0b\u4e2d\u751f\u4ea7\uff0c\u800c\u4e0d\u9700\u8981\u751f\u4ea7\u5927\u591a\u6570\u5176\u4ed6\u751f\u7269\u6280\u672f\u836f\u7269\u6240\u9700\u7684\u8f6c\u57fa\u56e0\u6d3b\u7ec6\u80de\u3002\nCureVac\u8fd8\u5728\u5efa\u8bbe\u4e00\u4e2a\u65b0\u7684\u56fa\u5b9a\u5730\u70b9\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4f7f\u5176\u4ea7\u91cf\u589e\u52a010\u500d\uff0c\u8fbe\u5230\u6570\u5341\u4ebf\u5242\u3002\n\u9a6c\u65af\u514b\u5468\u4e09\u6df1\u591c\u5728Twitter\u4e0a\u8868\u793a\uff0c\u8fd9\u4e9b\u201c\u5fae\u578b\u5de5\u5382\u201d\u5c06\u5efa\u5728\u5fb7\u56fd\u7684\u7279\u65af\u62c9\u00b7\u683c\u7f57\u66fc\u81ea\u52a8\u5316(Tesla Grohmann Automation)\u3002\n\u7279\u65af\u62c9\u57282016\u5e74\u6536\u8d2d\u4e86\u5f00\u53d1\u7535\u6c60\u548c\u71c3\u6599\u7535\u6c60\u81ea\u52a8\u5316\u5236\u9020\u7cfb\u7edf\u7684\u516c\u53f8\uff0c\u4ee5\u6269\u5927\u751f\u4ea7\u3002\n\u4e00\u4f4d\u719f\u6089CureVac\u7684\u4eba\u58eb\u8868\u793a\uff0cCureVac\u4e00\u76f4\u5728\u4e0e\u7279\u65af\u62c9\u00b7\u683c\u7f57\u66fc(Tesla Grohmann)\u5408\u4f5c\u5f00\u53d1\u79fb\u52a8\u6253\u5370\u673a\u6280\u672f\u3002\n\u9a6c\u65af\u514b\u6ca1\u6709\u8be6\u7ec6\u8bf4\u660e\u4ed6\u7684\u8ba1\u5212\u3002\u8bb0\u8005\u65e0\u6cd5\u7acb\u5373\u8054\u7cfb\u5230\u7279\u65af\u62c9\u548cCureVac\u7f6e\u8bc4\u3002\n\u9a6c\u65af\u514b\u4ee5\u5728Twitter\u4e0a\u5373\u5174\u5ba3\u5e03\u800c\u95fb\u540d\uff0c\u4ed6\u66fe\u57283\u6708\u4efd\u8868\u793a\uff0c\u7279\u65af\u62c9\u6709\u989d\u5916\u7684FDA\u6279\u51c6\u7684\u547c\u5438\u673a\uff0c\u53ef\u4ee5\u514d\u8d39\u8fd0\u5f80\u8fd9\u5bb6\u7535\u52a8\u6c7d\u8f66\u5236\u9020\u5546\u4ea4\u4ed8\u7684\u5730\u533a\u5185\u7684\u533b\u9662\u3002", "note_en": "(Reuters) - Tesla Inc is building mobile molecule printers to help make the potential COVID-19 vaccine being developed by CureVac in Germany, the electric-car maker\u2019s Chief Executive Officer, Elon Musk, tweeted on Wednesday.\n  CureVac, an unlisted German company, has said it is developing portable, automated mRNA production units that it calls printers and which Musk described as \u201cRNA microfactories\u201d.\n They are being designed to be shipped to remote locations, where they can churn out its vaccine candidate and other mRNA-based therapies depending on the recipe fed into the machine.\n But for the immediate pandemic use - should its vaccine candidate win market approval \u2013 it has production sites with regulatory approval in Germany with a capacity to produce hundreds of millions of doses.\n The company, based in Tuebingen and backed by the Bill &amp; Melinda Gates Foundation, is a pioneer of the so-called messenger RNA approach, which is also pursued by BioNTech and its partner Pfizer as well as Moderna.\n RNA molecules are single-stranded, and thanks to their recurring molecular pattern, they can be produced in a relatively simple biochemical process that do not require genetically modified living cells, which are needed to produce most other biotech drugs.\n CureVac is also building a new stationary site that could increase its output tenfold to billions of doses.\n The \u201cmicrofactories\u201d would be built at Tesla Grohmann Automation in Germany, Musk said in a Twitter thread late on Wednesday night.\n Tesla acquired the company that develops automated manufacturing systems for batteries and fuel cells in 2016 to expand its production.\n CureVac has been working with Tesla Grohmann to develop the mobile printer technology, a person familiar with CureVac said.\n Musk did not elaborate on his plans. Tesla and CureVac were not immediately available to comment.\n Musk, who is known to make impromptu announcements on Twitter, had in March said that Tesla has extra FDA-approved ventilators that can be shipped free of cost to hospitals within regions where the electric-car maker delivers.", "posttime": "2020-07-06 12:15:45", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7279\u65af\u62c9,\u6253\u5370,\u5f00\u53d1,\u75ab\u82d7,molecule", "title": "\u7279\u65af\u62c9\u5c06\u4e3a\u76d6\u8328\u652f\u6301\u7684\u75ab\u82d7\u5f00\u53d1\u5546\u5236\u9020\u5206\u5b50\u6253\u5370\u673a", "title_en": "Tesla to Make Molecule Printers for Gates-Backed Vaccine Developer", "transed": 1, "url": "https://www.reuters.com/article/us-health-coronavirus-tesla-idUSKBN243168", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u6253\u5370", "\u5f00\u53d1", "\u75ab\u82d7", "molecule"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010058, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5efa\u884c\u793e\u533a\u81f4\u529b\u4e8e\u6253\u51fb\u6b67\u89c6\u3001\u79cd\u65cf\u4e3b\u4e49\u548c\u4e0d\u5e73\u7b49\u3002\u6211\u4eec\u7533\u660e\u6211\u4eec\u5bf9\u201c\u9ed1\u4eba\u751f\u547d\u4e5f\u662f\u547d\u201d\u8fd0\u52a8\u7684\u652f\u6301\u548c\u91cd\u8981\u6027\uff0c\u5e76\u7533\u660e\u7ed3\u675f\u9488\u5bf9\u6709\u8272\u4eba\u79cd\u7684\u66b4\u529b\u884c\u4e3a\u3002\u6211\u4eec\u8fd8\u575a\u5b9a\u4e0d\u79fb\u5730\u575a\u6301\u516c\u5e73\u3001\u5305\u5bb9\u548c\u591a\u6837\u6027\u662f\u79d1\u5b66\u548c\u8ba1\u7b97\u751f\u7269\u5b66\u8fdb\u6b65\u7684\u6838\u5fc3\u6307\u5bfc\u539f\u5219\u3002\u4f5c\u4e3a\u4e00\u4e2a\u793e\u533a\uff0c\u6211\u4eec\u627f\u8bfa\u5728\u79ef\u6781\u53cd\u5bf9\u79cd\u65cf\u4e3b\u4e49\u548c\u91c7\u7528\u516c\u5e73\u7684\u79d1\u5b66\u5b9e\u8df5\u65b9\u9762\u53d1\u6325\u5e26\u5934\u4f5c\u7528\u3002\n\u6211\u4eec\u7684\u7814\u7a76\u4eba\u5458\u6765\u81ea\u4e94\u4e2a\u5b66\u9662\u7684\u5341\u51e0\u4e2a\u5b66\u672f\u90e8\u95e8\uff0c\u4ed6\u4eec\u4ee3\u8868\u4e86\u8ba1\u7b97\u751f\u7269\u5b66\u7684\u6838\u5fc3\u5b66\u79d1\uff0c\u5305\u62ec\u5206\u5b50\u548c\u7ec6\u80de\u751f\u7269\u5b66\u3001\u96c6\u6210\u751f\u7269\u5b66\u3001\u690d\u7269\u548c\u5fae\u751f\u7269[\u2026]\u3002", "note_en": "The CCB community is committed to fighting discrimination, racism, and inequality. We affirm our support for and the importance of the Black Lives Matter movement and putting an end to violence against people of color. We also firmly adhere to the guiding principle that equity, inclusivity, and diversity are central to the progress of science and computational biology. We, as a community, commit to taking a leading role in being actively anti-racist and employing equitable science practices.\n Drawn from more than a dozen academic departments across five colleges, our investigators represent the core disciplines of computational biology, including molecular and cell biology, integrated biology, plant and microbial [\u2026]", "posttime": "2020-07-06 11:56:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u751f\u7269\u5b66,computational", "title": "\u8ba1\u7b97\u751f\u7269\u5b66\u4e2d\u5fc3", "title_en": "Center for Computational Biology", "transed": 1, "url": "https://ccb.berkeley.edu/", "via": "", "real_tags": ["\u751f\u7269\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "df03c0951cc9d8f78d9c6d62d4c03556.png", "infoid": 1010057, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7248\u672c1\uff1a\u63a5\u6536\u65f6\u95f4\uff1a2020\u5e746\u670830\u65e5/\u6279\u51c6\u65f6\u95f4\uff1a2020\u5e747\u67083\u65e5/\u5728\u7ebf\u65f6\u95f4\uff1a2020\u5e747\u67083\u65e5(\u4e2d\u6b27\u6807\u51c6\u65f6\u95f408\uff1a52\uff1a22)\u3002\n\u65b0\u51a0\u80ba\u708e\uff0c\u95e8\u8bca\u60a3\u8005-\u65e9\u671f\u98ce\u9669-\u950c\u52a0\u5c0f\u5242\u91cf\u7f9f\u6c2f\u55b9\u548c\u963f\u5947\u9709\u7d20\u5206\u5c42\u6cbb\u7597\uff1a\u4e00\u9879\u56de\u987e\u6027\u75c5\u4f8b\u7cfb\u5217\u7814\u7a76\u30022020\u5e74\uff0c2020070025\u9884\u5370\u672c(doi\uff1a10.20944/preprints202007.0025.v1)\u3002\u65b0\u51a0\u80ba\u708e\u95e8\u8bca\u60a3\u8005\u65e9\u671f\u4f7f\u7528\u950c\u52a0\u5c0f\u5242\u91cf\u7f9f\u6c2f\u55b9\u548c\u963f\u5947\u9709\u7d20\u7684\u98ce\u9669\u5206\u5c42\u6cbb\u7597\uff1a\u4e00\u9879\u56de\u987e\u6027\u75c5\u4f8b\u7cfb\u5217\u7814\u7a76\u30022020\u5e74\uff0c2020070025\u9884\u5370\u672c(doi\uff1a10.20944/preprints202007.0025.v1)\u3002\n\u65b0\u51a0\u80ba\u708e\uff0c\u95e8\u8bca\u60a3\u8005-\u65e9\u671f\u98ce\u9669-\u950c\u52a0\u5c0f\u5242\u91cf\u7f9f\u6c2f\u55b9\u548c\u963f\u5947\u9709\u7d20\u5206\u5c42\u6cbb\u7597\uff1a\u4e00\u9879\u56de\u987e\u6027\u75c5\u4f8b\u7cfb\u5217\u7814\u7a76\u30022020\u5e74\uff0c2020070025\u9884\u5370\u672c(doi\uff1a10.20944/preprints202007.0025.v1)\u3002\u65b0\u51a0\u80ba\u708e\u95e8\u8bca\u60a3\u8005\u65e9\u671f\u4f7f\u7528\u950c\u52a0\u5c0f\u5242\u91cf\u7f9f\u6c2f\u55b9\u548c\u963f\u5947\u9709\u7d20\u7684\u98ce\u9669\u5206\u5c42\u6cbb\u7597\uff1a\u4e00\u9879\u56de\u987e\u6027\u75c5\u4f8b\u7cfb\u5217\u7814\u7a76\u30022020\u5e74\uff0c2020070025\u9884\u5370\u672c(doi\uff1a10.20944/preprints202007.0025.v1)\u3002\n\u76ee\u7684\uff1a\u63cf\u8ff02019\u5e74(\u65b0\u51a0\u80ba\u708e)\u51a0\u72b6\u75c5\u6bd2\u75c5\u60a3\u8005\u65e9\u671f\u5e94\u7528\u950c\u3001\u5c0f\u5242\u91cf\u7f9f\u6c2f\u55b9\u548c\u963f\u5947\u9709\u7d20\u4e09\u8054\u7597\u6cd5(\u4e09\u8054\u7597\u6cd5)\u540e\u7684\u95e8\u8bca\u8f6c\u5f52\u3002\u8bbe\u8ba1\uff1a\u56de\u987e\u6027\u75c5\u4f8b\u7cfb\u5217\u7814\u7a76\u3002\u5355\u4f4d\uff1a\u5168\u79d1\u533b\u5b66\u3002\u5bf9\u8c61\uff1a2020\u5e74\u7ecf\u5b9e\u9a8c\u5ba4\u786e\u8bca\u7684\u4e25\u91cd\u6025\u6027\u547c\u5438\u7efc\u5408\u5f81\u51a0\u72b6\u75c5\u6bd22\u578b\u611f\u67d3\u7684\u65b0\u51a0\u80ba\u708e\u60a3\u800514 1\u4f8b\u3002\u4e3b\u8981\u89c2\u5bdf\u6307\u6807\uff1a\u5371\u9669\u5206\u5c42\u6cbb\u7597\u51b3\u7b56\u3001\u4f4f\u9662\u7387\u548c\u5168\u6b7b\u56e0\u6b7b\u4ea1\u7387\u3002\u7ed3\u679c\uff1a3 35\u4f8b\u805a\u5408\u9176\u94fe\u53cd\u5e94\u9633\u6027\u7684\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u4e2d\uff0c12 7\u4f8b\u63a5\u53d7\u4e86\u4e09\u8054\u7597\u6cd5\u6cbb\u7597\u3002127\u4eba\u4e2d\u6709104\u4eba\u7b26\u5408\u89c4\u5b9a\u7684\u98ce\u9669\u5206\u5c42\u6807\u51c6\uff0c\u5e76\u5305\u62ec\u5728\u5206\u6790\u4e2d\u3002\u6b64\u5916\uff0c\u6cbb\u7597\u7ec4\u7eb3\u516537\u4f8b\u7ecfIgG\u8bd5\u9a8c\u8bc1\u5b9e\u7684\u7ecf\u6cbb\u7597\u4e14\u7b26\u5408\u6761\u4ef6\u7684\u60a3\u8005(\u603bN=141\u4f8b)\u3002335\u540d\u60a3\u8005\u4e2d\u6709208\u540d\u4e0d\u7b26\u5408\u98ce\u9669\u5206\u5c42\u6807\u51c6\uff0c\u6ca1\u6709\u63a5\u53d7\u6cbb\u7597\u3002141\u4f8b\u60a3\u8005(\u4e2d\u4f4d\u5e74\u9f8458\u5c81\uff0cIQR 40~60\u5c81\uff0c73%\u7537\u6027)\u5728\u75c7\u72b6\u8d77\u75c54d(IQR3~6\uff0c\u9002\u7528\u4e8eN=66/141)\u540e\u670d\u7528\u4e09\u8054\u7597\u6cd5\u5904\u65b9\uff0c\u7597\u7a0b5d\u3002\u4ee5\u540c\u4e00\u793e\u533a3 77\u4f8b\u786e\u8bca\u7684\u65b0\u51a0\u80ba\u708e\u60a3\u8005\u7684\u72ec\u7acb\u516c\u5171\u53c2\u8003\u8d44\u6599\u4f5c\u4e3a\u5bf9\u7167\u3002\u4f4f\u96624\u4f8b(2.8%)\uff0c\u660e\u663e\u5c11\u4e8e\u672a\u7ecf\u6cbb\u7597\u768458\u4f8b(15.4%)(P&lt\uff1b0.001)(\u4f18\u52bf\u6bd40.16\uff0c95%CI0.0 6~0.5)\u3002\u56e0\u6b64\uff0c\u63a5\u53d7\u6cbb\u7597\u7684\u60a3\u8005\u4f4f\u9662\u7684\u51e0\u7387\u6bd4\u672a\u6cbb\u7597\u7ec4\u4f4e84%\u3002\u6cbb\u7597\u7ec4\u6b7b\u4ea11\u4f8b(0.7%)\uff0c\u672a\u6cbb\u7597\u7ec4\u6b7b\u4ea113\u4f8b(3.5%)(\u4f18\u52bf\u6bd40.2\uff0c95%\u53ef\u4fe1\u533a\u95f40.03-1.5\uff1bp=0.16)\u3002\u6ca1\u6709\u5fc3\u810f\u526f\u4f5c\u7528\u3002\u7ed3\u8bba\uff1a\u65b0\u51a0\u80ba\u708e\u95e8\u8bca\u60a3\u8005\u5728\u75c7\u72b6\u51fa\u73b0\u540e\u5c3d\u65e9\u8fdb\u884c\u57fa\u4e8e\u98ce\u9669\u5206\u5c42\u7684\u6cbb\u7597\uff0c\u91c7\u7528\u950c\u548c\u5c0f\u5242\u91cf\u7f9f\u6c2f\u55b9\u8054\u5408\u5e94\u7528\u7684\u4e09\u8054\u7597\u6cd5\uff0c\u4f4f\u9662\u65f6\u95f4\u660e\u663e\u51cf\u5c11\uff0c\u5168\u56e0\u6b7b\u4ea1\u4eba\u6570\u51cf\u5c115\u500d\u3002\n\u8fd9\u662f\u4e00\u7bc7\u6839\u636e\u77e5\u8bc6\u5171\u4eab\u7f72\u540d\u8bb8\u53ef\u8bc1\u5206\u53d1\u7684\u5f00\u653e\u83b7\u53d6\u6587\u7ae0\uff0c\u5141\u8bb8\u5728\u4efb\u4f55\u5a92\u4f53\u4e0a\u4e0d\u53d7\u9650\u5236\u5730\u4f7f\u7528\u3001\u5206\u53d1\u548c\u590d\u5236\uff0c\u524d\u63d0\u662f\u6b63\u786e\u5f15\u7528\u4e86\u539f\u59cb\u4f5c\u54c1\u3002\n\u6536\u5230\u65f6\u95f4\uff1a2020\u5e747\u67084\u65e5\u8bc4\u8bba\u8005\uff1aBob O&39\uff1bHara(\u5355\u51fb\u67e5\u770bPublons\u4e2a\u4eba\u8d44\u6599\uff1a)\u8be5\u8bc4\u8bba\u8005\u5df2\u58f0\u660e\u4e0d\u5b58\u5728\u5229\u76ca\u51b2\u7a81\u3002\n\u8bc4\u8bba\uff1a\u8fd9\u9879\u5de5\u4f5c\u7684\u4e3b\u8981\u95ee\u9898\u662f\u63a7\u5236\u7ec4\u7684\u4eba\u53e3\u7edf\u8ba1\u6570\u636e\u6ca1\u6709\u4e0a\u62a5\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u77e5\u9053\u4ed6\u4eec\u662f\u5426\u76f8\u4f3c\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u77e5\u9053\u7ed3\u679c\u7684\u5dee\u5f02\u662f\u56e0\u4e3a\u6cbb\u7597\u7684\u539f\u56e0\uff0c\u8fd8\u662f\u56e0\u4e3a\u7fa4\u4f53\u7684\u4eba\u53e3\u7ed3\u6784\u800c\u9884\u671f\u5230\u7684\u3002\u66f4\u5fae\u5999\u7684\u4e00\u70b9\u662f\uff0c\u62a5\u544a\u7684\u6cbb\u7597\u7ec4\u7684\u5e74\u9f84\u7279\u5f81\u662f\u4e0d\u53ef\u80fd\u7684\u3002A\u7ec4\u7684\u5e74\u9f84\u4e3a60\u5c81\uff0c\u6cbb\u7597\u7ec4\u4e2d\u51e0\u4e4e\u6709\u4e00\u534a\u7684\u4eba\u5c5e\u4e8e\u8fd9\u4e00\u7ec4\u3002\u4f46\u662f\u636e\u62a5\u9053\u667a\u5546\u572840-60\u4e4b\u95f4\uff0c\u6240\u4ee5\u6cbb\u7597\u7ec4\u4e2d\u53ea\u670925%\u7684\u4eba\u5e74\u9f84\u5728&60\u5c81\u3002\u6211\u5e0c\u671b\u8fd9\u662f\u7531\u4e8e\u8fc7\u5ea6\u820d\u5165\uff0c\u6216\u8005\u662f\u53ef\u4ee5\u7ea0\u6b63\u7684\u7c7b\u4f3c\u9519\u8bef\u3002\n+\u56de\u590d\u6b64\u8bc4\u8bba\n\u6536\u5230\u65f6\u95f4\uff1a2020\u5e747\u67085\u65e5\u8bc4\u8bba\u8005\uff1a\u8bc4\u8bba\u8005\u5e03\u83b1\u6069\u00b7\u970d\u6797\u6c83\u65af(Brian Hollingworth)\u5ba3\u5e03\u6ca1\u6709\u5229\u76ca\u51b2\u7a81\u3002\n\u8bc4\u8bba\uff1a\u8fd9\u7bc7\u8bba\u6587\u975e\u5e38\u51fa\u8272\uff0c\u636e\u6211\u8fd9\u4e2a\u4ec5\u4ec5\u662f\u5de5\u7a0b\u5e08\u7684\u4eba\u6240\u80fd\u5224\u65ad\uff0c\u5b83\u662f\u6709\u6839\u636e\u7684\uff0c\u8fdb\u884c\u5f97\u5f88\u4e25\u8c28\uff0c\u800c\u4e14\u5448\u73b0\u5f97\u5f88\u6e05\u695a\u3002\u4f5c\u8005\u4eec\u7406\u5e94\u5f52\u529f\u4e8e\u4e00\u9879\u53ef\u9760\u800c\u6709\u7528\u7684\u7814\u7a76\uff0c\u8fd9\u9879\u7814\u7a76\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53cd\u9a73\u4e86\u4e00\u5927\u7fa4\u5f3a\u5927\u7684\u81ea\u79c1\u8005\u548c\u7ec4\u7ec7\u7684\u6124\u4e16\u5ac9\u4fd7\u7684\u52aa\u529b\uff0c\u5728\u6211\u770b\u6765\uff0c\u8fd9\u4e9b\u4eba\u628a\u81ea\u5df1\u7684\u5229\u76ca\u7f6e\u4e8e\u6210\u5343\u4e0a\u4e07\u65b0\u51a0\u80ba\u708e\u53d7\u5bb3\u8005\u7684\u75db\u82e6\u548c\u60b2\u5267\u4e4b\u4e0a\u30029~10\u6210\u719f\u3002\n+\u56de\u590d\u6b64\u8bc4\u8bba\u3002\n\u6536\u5230\u65f6\u95f4\uff1a2020\u5e747\u67085\u65e5\u8bc4\u8bba\u8005\uff1aEDIGEZIR B\u6208\u9ea6\u65af\u8bc4\u8bba\u8005\u58f0\u660e\u6ca1\u6709\u5229\u76ca\u51b2\u7a81\u3002\n\u70b9\u8bc4\uff1ao Present artigo refor\u00e7a a s\u00edntese de que a HCQ tem a\u00e7\u00e3o na redu\u00e7\u00e3o da Replica\u00e7\u00e3o Virus\uff0cSeu Uso no tratamento das artrites\uff0ca princ\u00edPio era entendido comendido comendido\u6f5c\u5728\u7684\u653e\u5927\u5668dos efeito\u6297\u708eRios dos corticoides no corpo Humano\u3002\u963f\u5c14\u8d21\u5185\u5206\u6ccc\u5b66\uff0c\u4e3b\u8981\u662f\u6700\u8fd1\u7684dementement e demheimento de que a droga sozinha sem Associa\u00e7\u00e3o com corticoide\uff0cagia efetivamente na redu\u00e7\u00e3o dos efeitos inflamat\u00f3rios de algumas artrites(\u4ee5\u4e0b\u7b80\u79f0Efetivamente na redu\u00e7\u00e3o dos efeitos flamat\u00f3rios de algumas artrites)\u3002\u65b0\u51a0\u80ba\u708e\u6700\u8fd1\u60a3\u4e0a\u4e86\u4e00\u573a\u5927\u6d41\u884c\u75c5\uff0c\u4ed6\u8bf4\uff1a\u201c\u6211\u7684\u75c5\u4e0d\u662f\u5f88\u4e25\u91cd\uff0c\u800c\u662f\u4e00\u573a\u5927\u6d41\u884c\uff0c\u6211\u4eec\u7684\u75c5\u662f\u7531\u6211\u4eec\u81ea\u5df1\u6765\u505a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a\u5b83\u4ecb\u7ecd\u7ed9\u6211\u4eec\u3002\u201d(\u6ce8\uff1a\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u4ec0\u4e48\uff1f)\u3002Siddiqui\u535a\u58eb\uff0cQue tornou f\u00e1cel o entenension to Clinico fases da doen\u00e7a em curso\uff0cleando de immediato a clucclus\u00e3o de que o que o tratamento das fas iniciais hcq\uff0czinc\uff0cazitromicina e corticoides reduziam drasticamente a evu\u00e7\u00e3o da doen\u00e7ente a evu\u00e7\u00e3o da doen\u00e7ente a evu\u00e7\u00e3o o da doen\u00e7ente\u3002Por outro lado\uff0ccom a Copy\u00e7\u00e3o virus reduzida pelo efeito comprovado da HCQ\uff0cProblemas menors ocoreriam na troca gas alveoles\uff0creduzindo a essessidade de entuba\u00e7\u00e3o e mesmo se assim o fossem\uff0chaveria suffendente troca gas osa nos Pulm\u00e1es\u3002Desta form a quero deixa aqui meus elogios ao Ilustres Colegas Scholz\uff0cM.\uff1bDerwand\uff0cR.\uff1bZelenko\uff0cV\uff0cque tanto lutaram Nessa Guera pol\u00edtica que Pela Primeira vez\uff0cGra\u00e7as M\u00eddias Sociais\uff0ca Industria Farmac\u00eautica perde sua hegeonia em imor Medica\u00e7\u00f3es caras\uff0ce muitas sem Devica\uff1bUma coisa n\u00f3s sabemos\uff0ca HCQ tem 0 anos de USO no mundo sem nenhum relato de Danos ao usu\u00e1rio essitado.\u3002\n+\u56de\u590d\u6b64\u8bc4\u8bba\u3002\n\u6570\u5b66\u65b9\u7a0b\u5f0f\u53ef\u4ee5LaTeX\u683c\u5f0f\\\\[.\\\\]\u6216$$.$$\u6216MathML\u683c\u5f0f&lt\uff1bMATH&gt\uff1b.&lt\uff1b/MATH&gt\uff1b\u952e\u5165\u3002\u5c1d\u8bd5LaTeX\u6216MathML\u793a\u4f8b\u3002\n\u8bf7\u5728\u6b64\u5904\u8f93\u5165\u6216\u7c98\u8d34\u56fe\u50cf\u7684URL(\u8bf7\u4ec5\u4f7f\u7528\u6307\u5411jpg/jpeg\u3001png\u548cgif\u56fe\u50cf\u7684\u94fe\u63a5)\uff1a\n\u952e\u5165\u4f5c\u8005\u59d3\u540d\u6216\u5173\u952e\u5b57\u4ee5\u7b5b\u9009\u6b64\u7ec4\u4e2d\u7684\u5f15\u7528\u5217\u8868(\u60a8\u53ef\u4ee5\u5728\u201c\u53c2\u8003\u4e66\u76ee\u201d\u4e0b\u6dfb\u52a0\u65b0\u5f15\u7528)\uff1a\nWikify\u7f16\u8f91\u5668\u662f\u4e00\u4e2a\u7528\u4e8e\u7ef4\u57fa\u6837\u5f0f\u6807\u8bb0\u7684\u7b80\u5355\u7f16\u8f91\u5668\u3002\u5b83\u662fMDPI\u4e8e2014\u5e74\u4e3a\u672c\u8bba\u575b\u64b0\u5199\u7684\u3002\u6807\u8bb0\u7684\u5448\u73b0\u57fa\u4e8eWiky.php\uff0c\u5e76\u8fdb\u884c\u4e86\u4e00\u4e9b\u8c03\u6574\u3002\u6570\u5b66\u65b9\u7a0b\u5f0f\u7684\u6e32\u67d3\u662f\u4f7f\u7528MathJax\u5b8c\u6210\u7684\u3002\u8bf7\u5411\u6211\u4eec\u53d1\u9001\u6d88\u606f\u4ee5\u83b7\u5f97\u652f\u6301\u6216\u62a5\u544a\u9519\u8bef\u3002\n\u8bf7\u7533\u62a5\u60a8\u4e0e\u8fd9\u4efd\u62a5\u7eb8\u53ef\u80fd\u5b58\u5728\u7684\u4efb\u4f55\u5229\u76ca\u51b2\u7a81\uff0c\u65e0\u8bba\u662f\u8d22\u52a1\u4e0a\u7684\u8fd8\u662f\u5176\u4ed6\u65b9\u9762\u7684\u3002\n\u6211\u5e0c\u671b\u6211\u5bf9Publons[\u8fd9\u662f\u4ec0\u4e48\uff1f]\u7684\u8bc4\u8bba\u5f97\u5230\u8ba4\u53ef\u3002\u5728\u8fd9\u91cc\u94fe\u63a5\u4f60\u7684\u8d26\u6237\uff0c\u6211\u63a5\u53d7\u4ee5\u4e0b\u6761\u4ef6\uff1a\u8bc4\u8bba\u5fc5\u987b\u9075\u5faa\u4e13\u4e1a\u8bdd\u8bed\u7684\u6807\u51c6\uff0c\u5e76\u4e14\u5e94\u8be5\u96c6\u4e2d\u5728\u6587\u7ae0\u7684\u79d1\u5b66\u5185\u5bb9\u4e0a\u3002\u4e0d\u5141\u8bb8\u4f7f\u7528\u4fae\u8fb1\u6027\u6216\u5192\u72af\u6027\u7684\u8bed\u8a00\u3001\u4eba\u8eab\u653b\u51fb\u548c\u79bb\u9898\u8a00\u8bba\u3002\u8bc4\u8bba\u5fc5\u987b\u7528\u82f1\u8bed\u4e66\u5199\u3002\u9884\u5370\u672c\u4fdd\u7559\u5220\u9664\u8bc4\u8bba\u7684\u6743\u5229\uff0c\u6055\u4e0d\u53e6\u884c\u901a\u77e5\u3002\u53d1\u8868\u8bc4\u8bba\u7684\u8bfb\u8005\u6709\u4e49\u52a1\u7533\u62a5\u4efb\u4f55\u76f8\u4e92\u7ade\u4e89\u7684\u5229\u76ca\uff0c\u65e0\u8bba\u662f\u8d22\u52a1\u5229\u76ca\u8fd8\u662f\u5176\u4ed6\u5229\u76ca\u3002\n\u6211\u4eec\u9f13\u52b1\u5e7f\u5927\u8bfb\u8005\u7684\u8bc4\u8bba\u548c\u53cd\u9988\u3002\u8bf7\u53c2\u9605\u8bc4\u8bba\u6807\u51c6\u548c\u6211\u4eec\u7684\u591a\u6837\u6027\u58f0\u660e\u3002\n\u7559\u4e0b\u516c\u5f00\u8bc4\u8bba\u5411\u4f5c\u8005\u53d1\u9001\u79c1\u4eba\u8bc4\u8bba", "note_en": "Version 1: Received: 30 June 2020 / Approved: 3 July 2020 / Online: 3 July 2020 (08:52:22 CEST)\n Scholz, M.; Derwand, R.; Zelenko, V. COVID-19 Outpatients \u2013 Early Risk-Stratified Treatment with Zinc Plus Low Dose Hydroxychloroquine and Azithromycin: A Retrospective Case Series Study.  Preprints  2020, 2020070025 (doi: 10.20944/preprints202007.0025.v1).  Scholz, M.; Derwand, R.; Zelenko, V. COVID-19 Outpatients &amp;ndash; Early Risk-Stratified Treatment with Zinc Plus Low Dose Hydroxychloroquine and Azithromycin: A Retrospective Case Series Study. Preprints 2020, 2020070025 (doi: 10.20944/preprints202007.0025.v1).\n Scholz, M.; Derwand, R.; Zelenko, V. COVID-19 Outpatients \u2013 Early Risk-Stratified Treatment with Zinc Plus Low Dose Hydroxychloroquine and Azithromycin: A Retrospective Case Series Study.  Preprints  2020, 2020070025 (doi: 10.20944/preprints202007.0025.v1).  Scholz, M.; Derwand, R.; Zelenko, V. COVID-19 Outpatients &amp;ndash; Early Risk-Stratified Treatment with Zinc Plus Low Dose Hydroxychloroquine and Azithromycin: A Retrospective Case Series Study. Preprints 2020, 2020070025 (doi: 10.20944/preprints202007.0025.v1).\n  Objective: To describe outcomes of patients with coronavirus disease 2019 (COVID-19) in the outpatient setting after early treatment with zinc, low dose hydroxychloroquine, and azithromycin (the triple therapy) dependent on risk stratification.  Design: Retrospective case series study.  Setting: General practice.  Participants: 141 COVID-19 patients with laboratory confirmed severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) infections in the year 2020.  Main Outcome Measures: Risk-stratified treatment decision, rate of hospitalization and all-cause death.  Results: Of 335 positively PCR-tested COVID-19 patients, 127 were treated with the triple therapy. 104 of 127 met the defined risk stratification criteria and were included in the analysis. In addition, 37 treated and eligible patients who were confirmed by IgG tests were included in the treatment group (total N=141). 208 of the 335 patients did not meet the risk stratification criteria and were not treated. After 4 days (median, IQR 3-6, available for N=66/141) of onset of symptoms, 141 patients (median age 58 years, IQR 40-60; 73% male) got a prescription for the triple therapy for 5 days. Independent public reference data from 377 confirmed COVID-19 patients of the same community were used as untreated control. 4 of 141 treated patients (2.8%) were hospitalized, which was significantly less (p&lt;0.001) compared with 58 of 377 untreated patients (15.4%) (odds ratio 0.16, 95% CI 0.06-0.5). Therefore, the odds of hospitalization of treated patients were 84% less than in the untreated group. One patient (0.7%) died in the treatment group versus 13 patients (3.5%) in the untreated group (odds ratio 0.2, 95% CI 0.03-1.5; p=0.16). There were no cardiac side effects.  Conclusions: Risk stratification-based treatment of COVID-19 outpatients as early as possible after symptom onset with the used triple therapy, including the combination of zinc with low dose hydroxychloroquine, was associated with significantly less hospitalizations and 5 times less all-cause deaths.\n   This is an open access article distributed under the  Creative Commons Attribution License which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.\n    Received: 4 July 2020  Commenter:   Bob O&#39;Hara(Click to see Publons profile:   ) The commenter has declared there is no conflict of interests.\n Comment: The main problem with this work is that the demographics of the control group are not reported, so we have no idea if they are similar. This them means that we have no idea if the differences in outcomes are because of the treatment, or if they would be expected because of the demographies of the groups.  A subtler point is that the reported age profile of the treatment group is impossible. Group A is aged &gt;60 years, and almost half of the treatment group was in that group. But the IQR was reported as 40-60, so only 25% of the treatment group had an age &gt;60. I hope this was due to excessive rounding, or a similar error that can be corrected.\n + Respond to this comment\n Received: 5 July 2020  Commenter: Brian Hollingworth The commenter has declared there is no conflict of interests.\n Comment: The paper is excellent and, as far as I, a mere engineer, am able to judge, it is well-founded, has been rigorously conducted and is clearly presented. The authors should justifiably take credit for a solid usable study, one that goes quite some way to counter the cynical efforts of a large and powerful body of self-interested persons and organisations who, in my humble opinion, have placed their own gain above the misery and tragedy of thousands of Covid-19 victims. Well done.\n + Respond to this comment\n Received: 5 July 2020  Commenter: EDIGEZIR B GOMES The commenter has declared there is no conflict of interests.\n Comment: O presente artigo refor\u00e7a a s\u00edntese de que a HCQ tem a\u00e7\u00e3o na redu\u00e7\u00e3o da replica\u00e7\u00e3o viral, Seu uso no tratamento das artrites, a princ\u00edpio era entendido como potencial amplificador dos efeito anti-inflamat\u00f3rios dos corticoides no corpo humano. Alguns endocrinologistas, mais recentemente demonstravam conhecimento de que a droga sozinha sem associa\u00e7\u00e3o com corticoide, agia efetivamente na redu\u00e7\u00e3o dos efeitos inflamat\u00f3rios de algumas artrites. E s\u00f3 mais recentemente como a pandemia do Covid-19, \u00e9 que seu uso como antivir\u00f3tico foi introduzido. Essa sequencia cl\u00ednica, fora espelhada pelo Dr. Siddiqui, que tornou f\u00e1cil o entendimento clinico das fases da doen\u00e7a em curso, levando de imediato a conclus\u00e3o de que o tratamento das fases iniciais com HCQ, Zinc , Azitromicina e corticoides reduziam drasticamente a evolu\u00e7\u00e3o da doen\u00e7a para fases mais tardias onde praticamento o sistema imunol\u00f3gico perderia para a tempestade citot\u00f3xica. Por outro lado, com a replica\u00e7\u00e3o viral reduzida pelo efeito comprovado da HCQ, problemas menores ocorreriam na troca gasosa alveolar, reduzindo a necessidade de entuba\u00e7\u00e3o e mesmo se assim o fossem, haveria suficiente troca gasosa nos pulm\u00f5es.  Desta forma quero deixa aqui meus elogios ao Ilustres colegas Scholz, M.; Derwand, R.; Zelenko, V, que tanto lutaram nessa guerra pol\u00edtica que pela primeira vez, gra\u00e7as as M\u00eddias Sociais , a Industria Farmac\u00eautica perde sua hegemonia em impor medica\u00e7\u00f5es caras , e muitas vezes sem devido seguimento dos efeitos colaterais. Uma coisa n\u00f3s sabemos, a HCQ tem 0 anos de uso no mundo sem nenhum relato de danos ao usu\u00e1rio necessitado.\n + Respond to this comment\n Mathematical equations can be typed in either LaTeX formats \\\\[ ... \\\\] or $$ ... $$, or MathML format &lt;math&gt; ... &lt;/math&gt;. Try the  LaTeX or  MathML example.\n   Please enter or paste the URL to the image here (please only use links to jpg/jpeg, png and gif images):\n Type author name or keywords to filter the list of references in this group (you can add a new citation under Bibliography):\n Wikify editor is a simple editor for wiki-style mark-up. It was written by MDPI for Sciforum in 2014. The rendering of the mark-up is based on  Wiky.php with some tweaks. Rendering of mathematical equations is done with  MathJax. Please  send us a message for support or for reporting bugs.\n Please declare any conflicts of interest you may have with this paper, financial or otherwise.\n     I want to get recognition for my comment on  Publons   [ what\u2019s this?].  Link your accounts here   I accept the following conditions:  Comments must follow the standards of professional discourse and should focus on the scientific content of the article. Insulting or offensive language, personal attacks and off-topic remarks will not be permitted. Comments must be written in English.  Preprints reserves the right to remove comments without notice. Readers who post comments are obliged to declare any competing interests, financial or otherwise.\n We encourage comments and feedback from a broad range of readers. See  criteria for comments and our  diversity statement.\n Leave a public comment  Send a private comment to the author(s)", "posttime": "2020-07-06 11:37:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65b0\u51a0,zinc,de", "title": "\u950c\u52a0\u5c0f\u5242\u91cf\u7f9f\u6c2f\u55b9\u3001\u963f\u5947\u9709\u7d20\u6cbb\u7597\u65b0\u51a0\u80ba\u708e", "title_en": "Covid-19 Treatment with Zinc Plus Low Dose Hydroxychloroquine and Azithromycin", "transed": 1, "url": "https://www.preprints.org/manuscript/202007.0025/v1", "via": "", "real_tags": ["\u65b0\u51a0", "zinc", "de"]}, {"category": "", "categoryclass": "", "imagename": "f8c4fa988907bc2f0d5aa0515ef6860c.png", "infoid": 1010056, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "BGP\u662f\u652f\u6301Internet\u7684\u4f17\u591a\u534f\u8bae\u4e4b\u4e00\u3002\u4f60\u5f88\u6709\u53ef\u80fd\u542c\u8bf4\u8fc7\u5b83\uff0c\u5373\u4f7f\u4f60\u4e0d\u5728\u8ba1\u7b97\u673a\u7f51\u7edc\u9886\u57df\u6216\u5468\u56f4\u5de5\u4f5c\u3002\u5982\u679c\u60a8\u4e0d\u719f\u6089\uff0c\u6211\u5c06\u5c1d\u8bd5\u63d0\u4f9b\u4e00\u4e9b\u7b80\u77ed\u7684\u80cc\u666f\u77e5\u8bc6\uff1a\n\u5728\u6700\u540e\u4e00\u4e2a\u8981\u70b9\u4e0a\u5c55\u5f00\uff0c\u7531\u4e8eBGP\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u5f88\u96be\u51c6\u786e\u603b\u7ed3\u5b83\u662f\u5982\u4f55/\u5728\u54ea\u91cc\u4f7f\u7528\u7684\u3002\u5404\u4e2aIETF\u5de5\u4f5c\u7ec4\u7ee7\u7eed\u4e3a90\u5e74\u4ee3\u521d\u5f62\u6210\u7684\u534f\u8bae\u53d1\u5e03\u4e0eBGP\u76f8\u5173\u7684RFC\u3002\u968f\u7740BGP\u9886\u57df\u548c\u5e94\u7528\u8303\u56f4\u7684\u6269\u5927\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u8ddf\u4e0a\u5f62\u52bf\u7684\u8f6f\u4ef6\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u63d0\u4f9b\u6211\u4f7f\u7528BGP\u7684\u4e00\u4e9b\u4e2a\u4eba\u7ecf\u9a8c\u548c\u5386\u53f2\uff0c\u5e76\u4ecb\u7ecd\u4e00\u4e2a\u65b0\u7684BGP\u5e93CoreBGP\uff0c\u8be5\u5e93\u53ef\u7528\u4e8e\u6784\u5efa\u4e0b\u4e00\u4ee3\u652f\u6301BGP\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n2010\u5e7410\u6708\uff0c\u6211\u7b2c\u4e00\u6b21\u53c2\u52a0\u5728\u4f50\u6cbb\u4e9a\u5dde\u4e9a\u7279\u5170\u5927\u4e3e\u884c\u7684NANOG\u4f1a\u8bae\uff0c\u539f\u56e0\u662f\u6211\u5728\u5de5\u4f5c\u4e2d\u610f\u5916\u9677\u5165\u7f51\u7edc\u8fd0\u8425\u5de5\u7a0b\u5e08\u7684\u804c\u4f4d\u3002\u5f53\u65f6\u6211\u5728\u4e00\u5bb6\u4e2d\u7b49\u89c4\u6a21\u7684\u4e3b\u673a\u63d0\u4f9b\u5546\u5de5\u4f5c\uff0c\u5bf9BGP\u5f88\u611f\u5174\u8da3\u3002\u636e\u7ef4\u57fa\u767e\u79d1(Wikpedia)\u62a5\u9053\uff0c\u4e00\u5230\u4e9a\u7279\u5170\u5927\uff0c\u6211\u5c31\u4f9d\u7a00\u8bb0\u5f97\u6709\u4e9b\u56f0\u60d1\uff0c\u56e0\u4e3a\u6211\u544a\u8bc9\u4e00\u540d\u51fa\u79df\u8f66\u53f8\u673a\uff0c\u6211\u9700\u8981\u4e0b\u8f66\u7684\u9152\u5e97\u5728\u6843\u6811\u8857(Peachtree St.)\u3002\u540e\u6765\u6211\u4e86\u89e3\u5230\uff0c\u4e9a\u7279\u5170\u5927\u670971\u6761\u8857\u9053\u7684\u540d\u5b57\u91cc\u6709\u4e00\u4e2a\u201c\u6843\u6811\u201d(Peachtree)\u7684\u53d8\u4f53\u3002\n\u6700\u7ec8\uff0c\u6211\u5230\u8fbe\u4e86\u6211\u9700\u8981\u53bb\u7684\u5730\u65b9\uff0c\u6211\u53c2\u52a0\u7684\u7b2c\u4e00\u4e2a\u6f14\u8bb2\u662f\u83f2\u5229\u666e\u00b7\u53f2\u5bc6\u65af(Philip Smith)\u6240\u8457\u7684\u4e92\u8054\u7f51\u670d\u52a1\u63d0\u4f9b\u5546\u7684BGP\u6280\u672f\u3002\u5728\u6df1\u5165\u4e86\u89e3ISP\u4f7f\u7528\u7684\u6280\u672f\u4e4b\u524d\uff0cPhilip\u5148\u4ece\u57fa\u7840\u5f00\u59cb\u3002\u5728\u8fd9\u6b21\u6f14\u8bb2\u4e2d\uff0c\u5f88\u591a\u706f\u6ce1\u90fd\u4e3a\u6211\u7184\u706d\u4e86\u3002\u6211\u8fd8\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u5176\u4ed6\u7684BGP\u6f14\u793a\u6db5\u76d6\u5982\u6b64\u5e7f\u6cdb\u7684\u4fe1\u606f\uff0c\u4f46\u4ecd\u7136\u4ee5\u521d\u5b66\u8005\u53cb\u597d\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u5bf9\u4efb\u4f55\u4e13\u5bb6\u6765\u8bf4\u90fd\u662f\u6709\u7528\u7684\uff0c\u800c\u4e14\u975e\u5e38\u6709\u8da3\u3002\n\u5feb\u8fdb10\u5e74\u540e\uff0c\u6211\u5728\u8fd0\u8425\u4f7f\u7528BGP\u7684\u7f51\u7edc\u65b9\u9762\u83b7\u5f97\u4e86\u76f8\u5f53\u591a\u7684\u7ecf\u9a8c\u3002\u6700\u8fd1\u51e0\u5e74\uff0c\u6211\u8f6c\u5411\u4e86\u8f6f\u4ef6\u5de5\u7a0b\uff0c\u5728\u90a3\u91cc\u6211\u6709\u673a\u4f1a\u5b9e\u73b0\u5404\u79cd\u652f\u6301BGP\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u5b9e\u73b0\u7f51\u7edc\u53ef\u89c2\u5bdf\u6027\u3001\u6570\u636e\u5206\u6790\u548cSDN\u76ee\u7684\u3002\n\u6bcf\u6b21\u6211\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u652f\u6301BGP\u7684\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u6211\u90fd\u5fc5\u987b\u56de\u7b54\u4ee5\u4e0b\u95ee\u9898--\u54ea\u4e2a\u73b0\u6709\u7684BGP\u5b9e\u73b0\u5e94\u8be5\u662f\u5b83\u7684\u57fa\u7840\uff1f\n\u5728\u4e3a\u6570\u4e0d\u591a\u7684\u5f00\u653e\u6e90\u7801BGP\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eb2\u8eab\u4f53\u9a8c\u8fc7\u4f7f\u7528\u4ee5\u4e0b\u5404\u9879\u7684\u9879\u76ee\uff1a\n\u9e1f\u724c\u5728\u9700\u8981\u4e30\u5bcc\u7684\u653f\u7b56\u8bed\u8a00\u7684\u5730\u65b9\u5927\u653e\u5f02\u5f69\u3002GoBGP\u6709\u4e00\u4e2a\u529f\u80fd\u4e30\u5bcc\u7684GRPC API\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u5e93\u5d4c\u5165\u3002OpenDayLight\u7684BGP\u5b9e\u65bd\u662f\u66f4\u5927\u7684SDN\u63a7\u5236\u5668\u89e3\u51b3\u65b9\u6848\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u5e7f\u6cdb\u652f\u6301BGP-LS\u3002Quagga\u53ef\u4ee5\u53ef\u9760\u5730\u4ea7\u751fMRT\u8f6c\u50a8\uff0c\u5e76\u4e14\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u5c3d\u7ba1\u6211\u76f8\u4fe1FRRouting\u73b0\u5728\u88ab\u8ba4\u4e3a\u662f\u5b83\u7684\u7ee7\u4efb\u8005\u3002\n\u8fd9\u4e9b\u90fd\u662f\u6210\u719f\u7684\u3001\u6210\u719f\u7684\u5b9e\u73b0\u3002\u5176\u4e2d\u4e00\u4e9b\u5df2\u5728\u5927\u578bISP\u3001\u4e91\u63d0\u4f9b\u5546\u548c\u4e92\u8054\u7f51\u4ea4\u6362\u70b9\u6295\u5165\u751f\u4ea7\u3002\u5b83\u4eec\u662f\u4e13\u95e8\u6784\u5efa\u7684\uff0c\u5e76\u8fdb\u884c\u5404\u79cd\u6743\u8861\u4ee5\u9002\u5e94\u5176\u7528\u4f8b(\u7f16\u7a0b\u8bed\u8a00\u3001\u7ebf\u7a0b\u6a21\u578b\u3001\u6570\u636e\u7ed3\u6784\u3001\u5e94\u7528\u7f16\u7a0b\u63a5\u53e3\u7b49\u2026)\u3002\u3002\n\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u6784\u5efa\u7684\u4e1c\u897f\u4e0e\u8fd9\u4e9b\u5e7f\u6cdb\u4f7f\u7528\u7684\u5b9e\u73b0\u7684\u4e3b\u8981\u7528\u4f8b\u4e0d\u4e00\u81f4\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5982\u679c\u6211\u4eec\u9009\u62e9\u56f4\u7ed5\u5b83\u4eec\u5efa\u7acb\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u88ab\u6700\u7ec8\u5e26\u6765\u8d1f\u62c5\u7684\u51b3\u5b9a\u6240\u675f\u7f1a\u3002\u5728\u6211\u4eec\u81ea\u5df1\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u4ea4\u6362\u8def\u7531\u8868\uff0c\u6216\u8005\u6dfb\u52a0\u65b0\u7684NLRI\u90fd\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u3002\u5373\u4f7f\u4e00\u4e2a\u5b9e\u73b0\u6253\u7b97\u4ee5\u5e93\u7684\u5f62\u5f0f\u5d4c\u5165\uff0c\u5b83\u4ecd\u7136\u4f1a\u8ba9\u6211\u4eec\u9677\u5165\u8d44\u6e90\u6d88\u8017\u7684\u56f0\u5883\u3002\u663e\u7136\u9700\u8981\u63d2\u5165\u6216\u6302\u94a9\u5230BGP FSM\u7684\u7279\u5b9a\u90e8\u5206\uff0c\u800c\u4e0d\u9700\u8981\u7ee7\u627f\u8fdb\u5165\u6210\u719f\u7684BGP\u5b88\u62a4\u8fdb\u7a0b\u7684\u51b3\u7b56\u3002\n\u5728\u7b2c27\u5c4aIEEE\u56fd\u9645\u7f51\u7edc\u534f\u8bae\u4f1a\u8bae(ICNP)\u4e0a\uff0c\u5362\u4e07\u5929\u4e3b\u6559\u5927\u5b66\u7684\u4e00\u4e2a\u5c0f\u7ec4\u63d0\u4ea4\u4e86\u4e00\u7bc7\u5173\u4e8e\u63d2\u4ef6\u5316\u8def\u7531\u534f\u8bae\u6848\u4f8b\u7684\u8bba\u6587\uff1a\n\u6458\u8981\u8def\u7531\u534f\u8bae(\u5982BGP\u548cOSPF)\u662fInternet\u670d\u52a1\u63d0\u4f9b\u5546(ISP)\u7f51\u7edc\u7684\u5173\u952e\u7ec4\u4ef6\u3002\u8fd9\u4e9b\u534f\u8bae\u548c\u8fd0\u8425\u5546\u7684\u8981\u6c42\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d1\u5c55\uff0c\u4f46\u7f51\u7edc\u8fd0\u8425\u5546\u901a\u5e38\u9700\u8981\u5f88\u591a\u5e74\u624d\u80fd\u8bf4\u670d\u4ed6\u4eec\u7684\u4e0d\u540c\u8def\u7531\u5668\u4f9b\u5e94\u5546\u548cIETF\u6269\u5c55\u8def\u7531\u534f\u8bae\u3002\u4e00\u4e9b\u7f51\u7edc\u8fd0\u8425\u5546\uff0c\u7279\u522b\u662f\u5728\u4f01\u4e1a\u548c\u6570\u636e\u4e2d\u5fc3\uff0c\u5df2\u7ecf\u91c7\u7528\u4e86\u96c6\u4e2d\u63a7\u5236\u7684\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(SDN)\uff0c\u4ee5\u4f7f\u5176\u66f4\u52a0\u7075\u6d3b\u3002\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5b9e\u73b0\u8def\u7531\u534f\u8bae\u7684\u65b9\u6cd5\uff0c\u4f7f\u7f51\u7edc\u8fd0\u8425\u5546\u80fd\u591f\u5728\u521b\u65b0\u7684\u540c\u65f6\u4ecd\u7136\u4f7f\u7528\u5206\u5e03\u5f0f\u8def\u7531\u534f\u8bae\uff0c\u4ece\u800c\u4fdd\u6301\u4e86\u4e0e\u96c6\u4e2d\u5f0f\u8def\u7531\u65b9\u6cd5\u76f8\u6bd4\u7684\u6240\u6709\u4f18\u52bf\u3002\u6211\u4eec\u4f7f\u7528\u80fd\u591f\u6267\u884c\u63d2\u4ef6\u7684\u865a\u62df\u673a\u6765\u6269\u5c55\u8def\u7531\u534f\u8bae\u3002\u8fd9\u4e9b\u63d2\u4ef6\u901a\u8fc7\u7b80\u5355\u7684API\u6269\u5c55\u534f\u8bae\u6216\u4fee\u6539\u5176\u5e95\u5c42\u7b97\u6cd5\uff0c\u4ee5\u6ee1\u8db3\u8fd0\u8425\u5546\u7684\u7279\u5b9a\u9700\u6c42\u3002\u6211\u4eec\u4fee\u6539\u4e86FRRouting\u63d0\u4f9b\u7684OSPF\u548cBGP\u5b9e\u73b0\uff0c\u5e76\u901a\u8fc7\u51e0\u4e2a\u7528\u4f8b\u6f14\u793a\u4e86\u6211\u4eec\u65b9\u6cd5\u7684\u9002\u7528\u6027\u3002\n\u5728\u4ed6\u4eec\u7684\u8bba\u6587\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u63d2\u5165\u524d\u9762\u63d0\u5230\u7684\u5f00\u6e90BGP\u5b9e\u73b0FRRouting\u7684\u65b9\u6cd5\u3002\u63d2\u4ef6\u5b58\u5728\u4e8e\u51fd\u6570\u7ea7\u522b\uff0c\u6216\u8005\u5728\u8c03\u7528\u4e4b\u524d(PRE)\u3001\u4f5c\u4e3a\u66ff\u6362(REPLACE)\u6216\u8005\u5c31\u5728\u8fd4\u56de\u4e4b\u524d(POST)\u3002\u4ed6\u4eec\u7684BGP\u63d2\u4ef6\u4e3b\u8981\u5173\u6ce8\u6d88\u606f\u7684\u63a5\u6536\uff0c\u5e76\u5728\u4e0d\u4e45\u4e4b\u540e\u505a\u51fa\u51b3\u5b9a\uff1a\nBGP\u5b88\u62a4\u8fdb\u7a0b\u4e5f\u8fdb\u884c\u4e86\u7c7b\u4f3c\u7684\u6269\u5c55\u3002\u6211\u4eec\u5728\u4ece\u90bb\u5c45\u63a5\u6536BGP\u6d88\u606f\u7684\u51fd\u6570\u3001\u8fc7\u6ee4\u5668\u548c\u51b3\u7b56\u8fc7\u7a0b\u5185\u90e8\u6dfb\u52a0\u63d2\u5165\u70b9\u3002\u6211\u4eec\u8fd8\u5411uBPF VM\u6267\u884c\u7684\u63d2\u4ef6\u516c\u5f00\u7279\u5b9a\u51fd\u6570\u3002\n\u901a\u8fc7\u5229\u7528\u94fe\u63a5\u5230FRRouting\u534f\u8bae\u5b9e\u73b0\u7684\u7528\u6237\u7a7a\u95f4eBPF VM(UBPF)\uff0c\u4ed6\u4eec\u5bf9\u63d2\u4ef6\u6c99\u7bb1\u91c7\u53d6\u4e86\u4e00\u79cd\u806a\u660e\u7684\u65b9\u6cd5\u3002\u6bcf\u4e2a\u63d2\u4ef6\u7f16\u8bd1\u6210eBPF\u5b57\u8282\u7801\uff0c\u5e76\u5728\u6240\u8ff0VM\u5185\u8fd0\u884c\u3002\u53ef\u4ee5\u52a0\u8f7d\u548c\u5378\u8f7d\u63d2\u4ef6\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u4e3b\u8981\u534f\u8bae\u5b9e\u73b0\u3002\u4f7f\u7528eBPF VM\u8fd8\u5141\u8bb8\u4ed6\u4eec\u5229\u7528\u6240\u6709\u5148\u524d\u5b58\u5728\u7684Linux\u5185\u6838\u5de5\u5177\u3002\n\u6211\u53d1\u73b0\u8fd9\u79cd\u65b9\u6cd5\u5f88\u9f13\u821e\u4eba\u5fc3\uff0c\u4f46\u4ecd\u7136\u4e0e\u6211\u7684\u7528\u4f8b\u4e0d\u592a\u5339\u914d\uff1a\n\u63d2\u4ef6\u4f3c\u4e4e\u662f\u56f4\u7ed5\u201c\u4f20\u5165\u201d\u4e8b\u4ef6\u6216\u6d88\u606f\u6784\u5efa\u7684\u3002\u5982\u679c\u6211\u60f3\u8981\u5411\u5bf9\u7b49\u8bbe\u5907\u6ce8\u5165\u66f4\u65b0\u6d88\u606f\uff0c\u800c\u4e0d\u7ba1FRRouting\u60f3\u8981\u53d1\u9001\u4ec0\u4e48\uff0c\u8be5\u600e\u4e48\u529e\uff1f\nFRRouting\u5728\u6784\u5efa\u65f6\u5e76\u6ca1\u6709\u8003\u8651\u5230\u8fd9\u4e2a\u63d2\u4ef6\u6a21\u578b\u3002\u5bf9FRRouting\u7684\u66f4\u6539/\u66f4\u65b0\u5c06\u5bfc\u81f4VM\u94a9\u70b9\u7684\u7ef4\u62a4\u96be\u9898\u3002\neBPF\u5b57\u8282\u7801\u901a\u5e38\u4eceC\u7f16\u8bd1\u800c\u6765\uff0c\u4e0e\u66f4\u73b0\u4ee3\u7684\u8bed\u8a00\u76f8\u6bd4\uff0c\u7f16\u5199C\u53ef\u80fd\u4f1a\u5f88\u8017\u65f6\u3002\n\u8fd9\u79cd\u7ecf\u9a8c\u548c\u7814\u7a76\u4f7f\u6211\u521b\u5efa\u4e86CoreBGP\uff0c\u8fd9\u662f\u4e00\u4e2aBGP\u5e93\uff0c\u6211\u53ef\u4ee5\u5728\u652f\u6301BGP\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u91cd\u7528\u5b83\u3002\nCoreBGP\u662f\u7528GO\u7f16\u5199\u7684BGP\u5e93\uff0c\u5b83\u4f7f\u7528\u4e8b\u4ef6\u9a71\u52a8\u7684\u53ef\u63d2\u62d4\u6a21\u578b\u5b9e\u73b0BGP FSM\u3002\u5b83\u516c\u5f00\u4e86\u4e00\u4e2aAPI\uff0c\u4f7f\u7528\u6237\u80fd\u591f\uff1a\nCoreBGP\u4e0d\u89e3\u7801\u66f4\u65b0\u6d88\u606f(\u9664\u4e86\u62a5\u5934\u9a8c\u8bc1)\u3001\u7ba1\u7406\u8def\u7531\u8868\u6216\u53d1\u9001\u81ea\u5df1\u7684\u66f4\u65b0\u6d88\u606f\u3002\u8fd9\u4e9b\u8d23\u4efb\u90fd\u5411\u4e0b\u4f20\u9012\u7ed9\u7528\u6237\u3002\u56e0\u6b64\uff0c\u76ee\u6807\u7528\u6237\u662f\u5e0c\u671b\u627f\u62c5\u8be5\u8d23\u4efb\u7684\u4eba\u3002\n//Plugin\u662fBGP\u5bf9\u7aef\u63d2\u4ef6\u3002\u5f53\u5bf9\u7b49\u65b9\u7684FSM\u5728\u53d1\u9001Open\u6d88\u606f\u4e4b\u524d//\u5904\u4e8e\u8fde\u63a5\u72b6\u6001\u65f6\uff0c\u7c7b\u578b\u63d2\u4ef6\u63a5\u53e3{//GetCapability\u88ab\u6fc0\u53d1\u3002\u8fd4\u56de\u7684\u529f\u80fd\u5305\u542b\u5728\u53d1\u9001\u7ed9\u5bf9\u7b49\u4f53\u7684//Open\u6d88\u606f\u4e2d\u3002GetCapability(Peer*PeerConfig)[]*Capability//\u5728OpenSent\u72b6\u6001\u4e0b\uff0c\u5f53\u6536\u5230\u5bf9\u7aef//\u7684Open\u6d88\u606f\u65f6\uff0c\u4f1a\u89e6\u53d1OnOpenMessage\u3002\u8fd4\u56de\u975eNIL\u901a\u77e5\u5c06\u5bfc\u81f4\u5c06\u5176\u53d1\u9001\u5230//\u5bf9\u7b49\u65b9\uff0c\u5e76\u4e14FSM\u5c06\u8f6c\u6362\u5230\u7a7a\u95f2\u72b6\u6001\u3002/\u6839\u636eRFC5492\uff0cBGP\u626c\u58f0\u5668\u5e94\u4ec5\u5728\u7f3a\u5c11\u6240\u9700\u529f\u80fd//\u65f6\u53d1\u9001\u901a\u77e5\uff1b\u5e94//\u5ffd\u7565\u672a\u77e5\u6216\u4e0d\u652f\u6301\u7684\u529f\u80fd\u3002OnOpenMessage(Peer*PeerConfig\uff0cCapability[]*Capability)*Notification//Onestablished\u5728\u5bf9\u7b49\u65b9\u7684FSM\u8f6c\u6362\u5230ESTABLISHED//\u72b6\u6001\u65f6\u89e6\u53d1\u3002\u5f53\u4ece\u5bf9\u7b49\u4f53\u63a5\u6536\u5230Update//\u6d88\u606f\u65f6\uff0c\u5c06\u89e6\u53d1\u8fd4\u56de\u7684UpdateMessageHandler\u3002/\u63d0\u4f9b\u7684\u7f16\u5199\u5668\u53ef\u7528\u4e8e\u5728//FSM\u5f53\u524d\u5df2\u5efa\u7acb\u72b6\u6001\u7684\u751f\u5b58\u671f\u5185\u5411\u5bf9\u7b49\u65b9\u53d1\u9001\u66f4\u65b0\u6d88\u606f\u3002\u4e00\u65e6OnClose()\u6fc0\u53d1\uff0c\u5c31\u5e94\u8be5//\u4e22\u5f03\u5b83\u3002Onestabled(Peer*PeerConfig\uff0cWriter UpdateMessageWriter)UpdateMessageHandler//OnClose\u5728\u5bf9\u7b49\u65b9\u7684FSM\u4eceESTABLISHED//\u72b6\u6001\u8f6c\u6362\u51fa\u6765\u65f6\u89e6\u53d1\u3002OnClose(Peer*PeerConfig)}\n\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u63d2\u4ef6\uff0c\u5b83\u5728\u5bf9\u7b49\u70b9\u8fdb\u5165/\u79bb\u5f00\u5df2\u5efa\u7acb\u72b6\u6001\u4ee5\u53ca\u63a5\u6536\u5230\u66f4\u65b0\u6d88\u606f\u65f6\u8fdb\u884c\u8bb0\u5f55\uff1a\ntype plugin struct{}func(p*plugin)GetCapability(c*corebp.PeerConfig)[]*corebp.Capability{caps\uff1a=make([]*corebp.Capability\uff0c0)return caps}func(p*plugin)OnOpenMessage(Peer*coregp.PeerConfig\uff0cCapability[]*corebackgp.Capability)*coregp.Notification{return nil}func(p*plugin)OnOpenMessage(Peer*corebgp.PeerConfig\uff0cCapability[]*corebp.Capability)*coregp.Notification{return nil}func(p*plugin)\u3002Println(&#34\uff1bPeer establed&#34\uff1b)//\u53d1\u9001\u808b\u9aa8\u672b\u5c3e\u7f16\u5199\u5668\u3002WriteUpdate([]byte{0\uff0c0\uff0c0\uff0c0})return p.handleUpdate}func(p*plugin)OnClose(Peer*coregp.PeerConfig){log.\u3002Println(&#34\uff1bPeer Closed&#34\uff1b)}func(p*plugin)handleUpdate(Peer*coregp.PeerConfig\uff0cu[]byte)*corebp.Notification{log.\u3002Printf(&#34\uff1b\u83b7\u53d6len\u7684\u66f4\u65b0\u6d88\u606f\uff1a%d&#34\uff1b\uff0clen(U))\u8fd4\u56de\u7a7a}\u3002\n\u63d2\u4ef6\u5728\u6dfb\u52a0\u5230\u7ba1\u7406\u5176\u751f\u5b58\u671f\u7684\u670d\u52a1\u5668\u65f6\u4f1a\u9644\u52a0\u5230\u5bf9\u7b49\u65b9\uff1a\n\u8def\u7531\u5668ID\uff1a=\u7f51\u7edc\u3002ParseIP(&#34\uff1b192.0.2.1&#34\uff1b)srv\uff0c\u9519\u8bef\uff1a=corebgp\u3002\u5982\u679cerr\uff01=nil{log.\u3002Fatalf(&#34\uff1b\u6784\u9020\u670d\u52a1\u5668\u65f6\u51fa\u9519\uff1a%v&#34\uff1b\uff0cerr)}p\uff1a=&amp\uff1bplugin{}err=srv\u3002AddPeer(&amp\uff1bcorebgp.PeerConfig{IP\uff1aNET.\u3002\u89e3\u6790IP(&#34\uff1b198.51.100.10&#34\uff1b)\uff0c\u672c\u5730\u670d\u52a1\u5668\uff1a65001\uff0c\u8fdc\u7a0b\u670d\u52a1\u5668\uff1a65010\uff0c}\uff0cp)\u5982\u679c\u9519\u8bef\uff01=\u65e0{log.\u3002Fatalf(&#34\uff1b\u6dfb\u52a0\u5bf9\u7b49\u65b9\u65f6\u51fa\u9519\uff1a%v&#34\uff1b\uff0c\u9519\u8bef)}\u3002\nCoreBGP\u8db3\u591f\u7075\u6d3b\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u6210\u719f\u7684BGP\u5b88\u62a4\u8fdb\u7a0b\u7684\u57fa\u7840\u3002\u76f8\u53cd\uff0c\u5b83\u4e5f\u9002\u5408\u7b80\u5355\u5730\u8bb0\u5f55\u66f4\u65b0\u6d88\u606f\u7684\u7528\u4f8b\uff0c\u5982\u4e0a\u9762\u7684\u793a\u4f8b\u6240\u6697\u793a\u7684\u90a3\u6837\u3002\n\u6709\u5173\u66f4\u591a\u793a\u4f8b\uff0c\u8bf7\u67e5\u770b\u793a\u4f8b\u76ee\u5f55\u548cpkg.go.dev\u4ee5\u83b7\u53d6\u5b8c\u6574\u7684API\u3002CoreBGP\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u5728GitHub\u4e0a\u83b7\u5f97\u3002\u8bf7\u8bd5\u4e00\u8bd5\uff0c\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u8d21\u732e\u81ea\u5df1\u7684\u529b\u91cf\uff01", "note_en": "BGP is one of many protocols that powers the Internet. Chances are you have heard of it, even if you don\u2019t work in or around the computer networking space. If you aren\u2019t familiar, I\u2019ll try to provide some quick background:\n  Expanding on that last bullet point, it\u2019s difficult to summarize exactly how/where BGP is used due to its flexibility and extensibility. Various  IETF Working Groups continue to publish BGP-related RFCs for a protocol that took shape in the early 90s. As the BGP landscape and application widens, we need software that enables us to keep up.\n In this post I\u2019ll provide some of my personal experience and history working with BGP, and introduce a new BGP library,  CoreBGP, which can be used to build the next generation of BGP-enabled applications.\n  In October of 2010 I attended my first  NANOG meeting in Atlanta, GA after accidentally falling into the position of Network Operations Engineer at work. I worked for a modest-sized hosting provider at the time, and was intrigued with BGP. Upon arriving in Atlanta, I vaguely remember some confusion after telling a cab driver that the hotel I needed to be dropped at was on Peachtree St. I later learned that there are 71 streets in Atlanta with a variant of \u201cPeachtree\u201d in their name, according to  Wikpedia.\n I got where I needed to go, eventually, and the first talk I attended was  BGP techniques for Internet Service Providers by  Philip Smith. Philip started with the basics before getting into the techniques used at ISPs. So many light bulbs went off for me during this talk. I have yet to see any other BGP presentation cover such a breadth of information but still do it in a way that is beginner-friendly, useful as a refresher for any expert, and just downright interesting.\n Fast-forward 10 years and I\u2019ve gained a fair share of experience operating networks that use BGP. In more recent years I\u2019ve shifted to software engineering where I\u2019ve had the opportunity to implement various BGP-enabled applications for network observability, data analytics, and SDN purposes.\n Each time I started a new BGP-enabled app, I had to answer the following question \u2013 which existing BGP implementation should be its foundation?\n  Of the handful of open source BGP implementations out there, I\u2019ve had hands-on experience with projects making use of:\n  BIRD shines where a  rich policy language is needed. GoBGP has a  feature-rich gRPC API, and can be embedded as a library. OpenDaylight\u2019s BGP implementation is part of a larger SDN controller solution and has extensive support for  BGP-LS. Quagga can reliably produce  MRT dumps and has been around a long time, though I believe  FRRouting is now considered its successor.\n These are all mature, established implementations. Some of them are in production at large ISPs,  Cloud Providers, and  Internet Exchange Points. They are purpose-built and make various tradeoffs to suit their use cases (programming language, threading model, data structures, API, etc\u2026).\n But what if we are building something that doesn\u2019t line up with the primary use cases of these widely used implementations? We may be locked in to decisions that are ultimately burdensome if we choose to build around them. Swapping in our own data structures for routing tables, or adding a new NLRI is non-trivial. Even if an implementation is intended to be embedded as library, it can still back us into a corner with resource consumption. There\u2019s clearly a need to plug in or hook into specific parts of the BGP FSM, without inheriting decisions that went into a full-blown BGP daemon.\n At the 27th IEEE International Conference On Network Protocols (ICNP), a group from the Universit\u00e9 catholique de Louvain presented a paper on  The Case for Pluginized Routing Protocols:\n Abstract\u2014Routing protocols such as BGP and OSPF are key components of Internet Service Provider (ISP) networks. These protocols and the operator\u2019s requirements evolve over time, but it often takes many years for network operators to convince their different router vendors and the IETF to extend routing protocols. Some network operators, notably in enterprise and datacenters have adopted Software Defined Networking (SDN) with its centralised control to be more agile. We propose a new approach to implement routing protocols that enables network operators to innovate while still using distributed routing protocols and thus keeping all their benefits compared to centralised routing approaches. We extend a routing protocol with a virtual machine that is capable of executing plugins. These plugins extend the protocol or modify its underlying algorithms through a simple API to meet the specific requirements of operators. We modify the OSPF and BGP implementations provided by FRRouting and demonstrate the applicability of our approach with several use cases.\n In their paper they present a method for plugging into a previously mentioned open-source BGP implementation, FRRouting. Plugins exist at a function level, either prior to invocation (PRE), as a replacement (REPLACE), or just before returning (POST). Much of their BGP plugin focus is around the reception of messages, and decisions made shortly after:\n The BGP daemon is also extended similarly. We add insertion points on functions receiving BGP messages from neighbours, on filters and inside the decision process. We also expose specific functions to the plugins that are executed by the uBPF VM.\n They take a clever approach with plugin sandboxing by leveraging a user space eBPF VM ( uBPF) linked to the FRRouting protocol implementation. Each plugin compiles to eBPF bytecode and runs inside of said VM. Plugins can be loaded and unloaded without impacting the primary protocol implementation. Using an eBPF VM also allowed them to utilise all the pre-existing Linux Kernel tooling.\n I found this approach inspiring, but still not quite a match for my use cases:\n Plugins appear to be built around \u201cincoming\u201d events, or messages. What if I want to inject an UPDATE message to a peer irrespective of what FRRouting wants to send?\n FRRouting was not built with this plugin model in mind. Changes/Updates to FRRouting will result in a maintenance headache for the VM hook points.\n eBPF bytecode is typically compiled from C. Writing C can be time-consuming in comparison to more modern languages.\n This experience and research led me to create CoreBGP, a BGP library that I could re-use across my BGP-enabled applications.\n  CoreBGP is a BGP library written in Go that implements the BGP FSM with an event-driven, pluggable model. It exposes an API that empowers the user to:\n  CoreBGP does not decode UPDATE messages (besides header validation), manage a routing table, or send its own UPDATE messages. These responsibilities are all passed down to the user. Therefore, the intended user is someone who wants that responsibility.\n  // Plugin is a BGP peer plugin.  type Plugin  interface {\t // GetCapabilities is fired when a peer&#39;s FSM is in the Connect state prior \t // to sending an Open message. The returned capabilities are included in the \t // Open message sent to the peer. \t GetCapabilities(peer  *PeerConfig) [] *Capability\t // OnOpenMessage is fired when an Open message is received from a peer \t // during the OpenSent state. Returning a non-nil Notification will cause it \t // to be sent to the peer and the FSM will transition to the Idle state. \t // \t // Per RFC5492 a BGP speaker should only send a Notification if a required \t // capability is missing; unknown or unsupported capabilities should be \t // ignored. \t OnOpenMessage(peer  *PeerConfig, capabilities [] *Capability)  *Notification\t // OnEstablished is fired when a peer&#39;s FSM transitions to the Established \t // state. The returned UpdateMessageHandler will be fired when an Update \t // message is received from the peer. \t // \t // The provided writer can be used to send Update messages to the peer for \t // the lifetime of the FSM&#39;s current, established state. It should be \t // discarded once OnClose() fires. \t OnEstablished(peer  *PeerConfig, writer UpdateMessageWriter) UpdateMessageHandler\t // OnClose is fired when a peer&#39;s FSM transitions out of the Established \t // state. \t OnClose(peer  *PeerConfig)}\n Here\u2019s an example Plugin that logs when a peer enters/leaves an established state and when an UPDATE message is received:\n type plugin  struct{} func (p  *plugin)  GetCapabilities(c  *corebgp.PeerConfig) [] *corebgp.Capability {\tcaps  :=  make([] *corebgp.Capability,  0)\t return caps} func (p  *plugin)  OnOpenMessage(peer  *corebgp.PeerConfig, capabilities [] *corebgp.Capability)  *corebgp.Notification {\t return  nil} func (p  *plugin)  OnEstablished(peer  *corebgp.PeerConfig, writer corebgp.UpdateMessageWriter) corebgp.UpdateMessageHandler {\tlog. Println( &#34;peer established&#34;)\t // send End-of-Rib \twriter. WriteUpdate([] byte{ 0,  0,  0,  0})\t return p.handleUpdate} func (p  *plugin)  OnClose(peer  *corebgp.PeerConfig) {\tlog. Println( &#34;peer closed&#34;)} func (p  *plugin)  handleUpdate(peer  *corebgp.PeerConfig, u [] byte)  *corebgp.Notification {\tlog. Printf( &#34;got update message of len: %d&#34;,  len(u))\t return  nil}\n Plugins are attached to peers when they are added to the Server, which manages their lifetime:\n routerID  := net. ParseIP( &#34;192.0.2.1&#34;)srv, err  := corebgp. NewServer(routerID) if err  !=  nil { log. Fatalf( &#34;error constructing server: %v&#34;, err)}p  :=  &amp;plugin{}err = srv. AddPeer( &amp;corebgp.PeerConfig{ IP: net. ParseIP( &#34;198.51.100.10&#34;), LocalAS:  65001, RemoteAS:  65010,}, p) if err  !=  nil { log. Fatalf( &#34;error adding peer: %v&#34;, err)}\n CoreBGP is flexible enough to function as the foundation for a full-blown BGP daemon. Conversely, it can also fit into a use case for simply logging UPDATE messages, as hinted at in the above example.\n For more examples check out the  examples directory and  pkg.go.dev for the complete API. CoreBGP is open-source and available on  GitHub. Please try it out, report bugs, and contribute!", "posttime": "2020-07-06 11:18:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "bgp,plugging", "title": "\u6838\u5fc3BGP-\u63d2\u5165BGP", "title_en": "CoreBGP \u2013 Plugging in to BGP", "transed": 1, "url": "https://www.jordanwhited.com/posts/corebgp-plugging-in-to-bgp/", "via": "", "real_tags": ["bgp", "plugging"]}, {"category": "", "categoryclass": "", "imagename": "e7a4aa34d01246cf3c636533ba7b8f99.jpg", "infoid": 1010055, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2017\u5e7411\u6708\uff0c\u8c37\u6b4c\u4ef7\u503c950\u4ebf\u7f8e\u5143\u7684\u5e7f\u544a\u90e8\u95e8\u8d1f\u8d23\u4eba\u65af\u91cc\u8fbe\u5c14\u00b7\u62c9\u9a6c\u65af\u74e6\u7c73(Sridhar Ramaswamy)\u5728YouTube\u89c6\u9891\u4e0a\u53d1\u73b0\u5927\u516c\u53f8\u5e7f\u544a\u5c06\u513f\u7ae5\u7f6e\u4e8e\u53ef\u7591\u5883\u5730\u7684\u4e11\u95fb\u540e\u79bb\u5f00\u4e86\u516c\u53f8\u3002\u62c9\u9a6c\u65af\u74e6\u7c73\u544a\u8bc9\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\uff0c\u5728\u90a3\u6b21\u4e8b\u4ef6\u53d1\u751f\u540e\u4e0d\u4e45\uff0c\u4ed6\u51b3\u5b9a\u5728\u4ed6\u7684\u751f\u6d3b\u4e2d\u505a\u4e00\u4e9b\u4e0d\u540c\u7684\u4e8b\u60c5-\u56e0\u4e3a\u5e7f\u544a\u652f\u6301\u7684\u6a21\u5f0f\u6709\u5c40\u9650\u6027\u3002\n\u8fd9\u7bc7\u62a5\u9053\u6700\u521d\u51fa\u73b0\u5728Ars Technica\u4e0a\uff0c\u8fd9\u662f\u4e00\u4e2a\u503c\u5f97\u4fe1\u8d56\u7684\u6280\u672f\u65b0\u95fb\u3001\u6280\u672f\u653f\u7b56\u5206\u6790\u3001\u8bc4\u8bba\u7b49\u6765\u6e90\u3002ARS\u7684\u6240\u6709\u8005\u662f\u201c\u8fde\u7ebf\u201d\u7684\u6bcd\u516c\u53f8\u5eb7\u6cf0\u7eb3\u4ed5(Cond\u00e9Nast)\u3002\nRamaswamy\u7684\u521d\u521b\u516c\u53f8Neeva\u662f\u4e0e\u4f17\u4e0d\u540c\u7684\uff0c\u867d\u7136\u5b83\u4e5f\u662f\u4e00\u4e2a\u641c\u7d22\u5f15\u64ce\uff0c\u4f46\u5b83\u8bd5\u56fe\u901a\u8fc7\u5b8c\u5168\u907f\u5f00\u5e7f\u544a\u6765\u89c4\u907f\u8c37\u6b4c\u7684\u4e00\u4e9b\u95ee\u9898\u3002Ramaswamy\u8868\u793a\uff0c\u65b0\u5f15\u64ce\u4e0d\u4f1a\u663e\u793a\u5e7f\u544a\uff0c\u4e5f\u4e0d\u4f1a\u6536\u96c6\u7528\u6237\u6570\u636e\u6216\u4ece\u4e2d\u83b7\u5229\uff0c\u800c\u662f\u4f1a\u5411\u7528\u6237\u6536\u53d6\u8ba2\u9605\u8d39\u3002\n\u5c3c\u74e6\u7684\u65b9\u6cd5\u9075\u5faa\u4e86\u4e00\u6761\u53e4\u8001\u7684\u8001\u751f\u5e38\u8c08\uff1a\u5982\u679c\u4f60\u82b1\u94b1\u4e70\u4e1c\u897f\uff0c\u4f60\u5c31\u662f\u987e\u5ba2\uff0c\u4f46\u5982\u679c\u4f60\u514d\u8d39\u83b7\u5f97\uff0c\u4f60\u5c31\u662f\u4e00\u79cd\u4ea7\u54c1\u3002\u8fd9\u5f88\u53ef\u80fd\u5f88\u96be\u5411\u516c\u4f17\u63a8\u9500\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u5f00\u59cb\u671f\u5f85\u514d\u8d39\u7684\u670d\u52a1\uff0c\u800c\u4e14\u901a\u5e38\u4e0d\u592a\u5173\u5fc3\u9690\u79c1\u65b9\u9762\u7684\u95ee\u9898\u3002\u5373\u4f7f\u6211\u4eec\u6325\u821e\u7740\u83b7\u53d6\u5e02\u573a\u7684\u56f0\u96be\uff0c\u5176\u4ed6\u5173\u6ce8\u9690\u79c1\u7684\u73a9\u5bb6\u4e5f\u5bf9Neeva&#39\uff1b\u7684\u505a\u6cd5\u8868\u793a\u4e86\u6781\u5927\u7684\u6000\u7591\u3002\n\u641c\u7d22\u5f15\u64ceDuckDuckGo\u53ef\u80fd\u662f\u8c37\u6b4c\u6700\u77e5\u540d\u7684\u6ce8\u91cd\u9690\u79c1\u7684\u7ade\u4e89\u5bf9\u624b\u3002DuckDuckGo\u63d0\u4f9b\u5e7f\u544a\u670d\u52a1\uff0c\u4f46\u5e76\u4e0d\u5355\u72ec\u8ddf\u8e2a\u7528\u6237\u3002\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u52a0\u5e03\u91cc\u57c3\u5c14\u00b7\u6e29\u4f2f\u683c(Gabriel Weinberg)\u8868\u793a\uff0c\u8fd9\u4e9b\u5e7f\u544a\u662f\u5b9e\u9645\u9700\u8981\u3002\u4ed6\u8bf4\uff0c\u5982\u679c\u4f60\u60f3\u7528\u6700\u5927\u7684\u5f71\u54cd\u529b\u5e2e\u52a9\u6700\u591a\u7684\u4eba\u4fdd\u62a4\u9690\u79c1\uff0c\u4f60\u5c31\u5fc5\u987b\u662f\u514d\u8d39\u7684\uff0c\u56e0\u4e3a\u8c37\u6b4c\u5c06\u6c38\u8fdc\u514d\u8d39\u3002\n\u7136\u800c\uff0cDuckDuckGo\u53ef\u80fd\u4e0d\u662f\u4e0eNeeva\u6700\u76f8\u5173\u7684\u6bd4\u8f83\u3002\u65b0\u7684\u641c\u7d22\u5f15\u64ce\u8ba1\u5212\u6210\u4e3a\u4e8c\u7ebf\u63d0\u4f9b\u5546\uff0c\u516c\u5f00\u7ed3\u679c\u6765\u81ea\u5fc5\u5e94(Bing)\u3001Weather.com\u3001Intrinio\u548c\u82f9\u679c(Apple)\u3002\u5b83\u8fd8\u8ba1\u5212\u4e3a\u7528\u6237\u63d0\u4f9b\u94fe\u63a5Google G Suite\u3001Microsoft Office365\u548cDropbox\u7b49\u4e91\u8d26\u6237\u7684\u80fd\u529b\u3002\u9664\u4e86\u76f4\u63a5\u4ece\u8fd9\u4e9b\u79c1\u4eba\u6765\u6e90\u63d0\u4f9b\u641c\u7d22\u7ed3\u679c\u5916\uff0cNeeva\u8fd8\u5c06\u5728\u5efa\u7acb\u4e2a\u4eba\u8d44\u6599\u65f6\u5305\u62ec\u8fd9\u4e9b\u6570\u636e\uff0c\u4ee5\u4fbf\u4e3a\u6bcf\u4e2a\u7528\u6237\u4e2a\u6027\u5316\u641c\u7d22\u7ed3\u679c\u3002\nStartPage\u66f4\u7c7b\u4f3c\u4e8eNeeva\u63d0\u51fa\u7684\u6a21\u578b\u3002\u50cfNeeva\u4e00\u6837\uff0cStartpage\u4ece\u5916\u90e8\u83b7\u53d6\u641c\u7d22\u7ed3\u679c-\u5728\u5b83\u7684\u60c5\u51b5\u4e0b\uff0c\u76f4\u63a5\u6765\u81ea\u8c37\u6b4c\u3002\u4e0eNeeva\u4e0d\u540c\u7684\u662f\uff0cStartpage\u4ecd\u7136\u663e\u793a\u8c37\u6b4c\u5e7f\u544a\uff0c\u5e76\u6536\u53d6\u6536\u76ca\u7684\u4e00\u90e8\u5206\u3002\u4f46\u5b83\u4e0d\u4f1a\u8bd5\u56fe\u4e3a\u7528\u6237\u4e2a\u6027\u5316\u5730\u663e\u793a\u8fd9\u4e9b\u5e7f\u544a--\u6ca1\u6709\u5efa\u7acb\u4e2a\u4eba\u8d44\u6599\uff0c\u7528\u6237\u6f5c\u5728\u7684\u8bc6\u522b\u4fe1\u606f\u4e5f\u4f1a\u4ece\u4f20\u9012\u7ed9\u8c37\u6b4c\u7684\u67e5\u8be2\u4e2d\u5265\u79bb\u3002\nStartPage\u9996\u5e2d\u6267\u884c\u5b98\u7f57\u4f2f\u7279\u00b7E\u00b7G\u00b7\u8d1d\u6069\u65af\u5728Neeva&#39\uff1b\u63a8\u51fa\u540e\u4e0d\u4e45\u5c31\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u8054\u7cfb\u4e86Ars\u3002\u4ed6\u5bf9\u5c3c\u74e6\u7684\u6a21\u5f0f\u8868\u793a\u6781\u5ea6\u6000\u7591--\u4ed6\u5c06\u4e0e\u79c1\u4eba\u6570\u636e\u3001\u4e2a\u4eba\u8d44\u6599\u5efa\u7acb\u548c\u957f\u671f\u6570\u636e\u4fdd\u7559\u7684\u8054\u7cfb\u63cf\u8ff0\u4e3a\u9ed1\u5ba2\u7684\u68a6\u60f3\u548c\u7528\u6237\u7684\u5669\u68a6\u3002\u4ed6\u5bf9\u5c3c\u74e6\u7684\u5b9e\u9645\u9690\u79c1\u653f\u7b56\u8868\u8fbe\u4e86\u540c\u6837\u5f3a\u70c8\u7684\u89c2\u70b9\uff0c\u79f0\u5176\u4e3a\u4e00\u4e2a\u7b11\u8bdd\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u7b11\u8bdd\u3002\u4ed6\u8bf4\uff0c\u8425\u9500\u4fe1\u606f\u51e0\u4e4e\u53ef\u4ee5\u8981\u6c42\u4efb\u4f55\u4e1c\u897f\uff0c\u4f46\u4e0d\u662f\u9690\u79c1\u3002\n\u6211\u4eec\u5e94\u8be5\u6ce8\u610f\u5230\uff0cNeeva\u7684\u7f51\u7ad9\u4e0a\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u90e8\u5206\u4f3c\u4e4e\u89e3\u51b3\u4e86\u9690\u79c1\u95ee\u9898--\u6570\u5b57\u6743\u5229\u6cd5\u6848(Digital Bill Of Rights)\u51fa\u73b0\u5728\u8be5\u516c\u53f8\u7684\u201c\u5173\u4e8e\u201d(About)\u9875\u9762\u7684\u663e\u8457\u4f4d\u7f6e\uff0c\u800c\u5b98\u65b9\u9690\u79c1\u653f\u7b56\u5219\u4ece\u6bcf\u4e2a\u9875\u9762\u7684\u9875\u811a\u94fe\u63a5\u5f97\u66f4\u4e3a\u4e25\u8c28\u3002\n\u5c3c\u74e6\u7684\u6570\u5b57\u6743\u5229\u6cd5\u6848\u4f3c\u4e4e\u5c31\u662f\u5176\u4e2d\u63d0\u5230\u7684\u90a3\u79cd\u8425\u9500\u4fe1\u606f\u3002\u5b83\u5bf9\u7528\u6237\u7684\u9690\u79c1\u6743\u3001\u5bf9\u6570\u636e\u6536\u96c6\u7684\u63a7\u5236\u3001\u6570\u636e\u4f7f\u7528\u7684\u900f\u660e\u5ea6\u4ee5\u53ca\u7528\u6237\u5bf9\u81ea\u5df1\u6570\u636e\u7684\u6240\u6709\u6743\u505a\u51fa\u4e86\u5d07\u9ad8\u7684\u58f0\u660e\u3002\u5b83\u8fdb\u4e00\u6b65\u5ba3\u5e03\uff0c\u516c\u53f8\u603b\u4f53\u4e0a\u5e94\u8be5\u5c0a\u91cd\u8fd9\u4e9b\u6743\u5229-\u4f46\u5b83\u6ca1\u6709\u5c31Neeva\u662f\u5426\u6216\u5982\u4f55\u5c0a\u91cd\u8fd9\u4e9b\u6743\u5229\u505a\u51fa\u76f4\u63a5\u627f\u8bfa\u3002\u8fd9\u4e00\u9875\u4e0a\u6700\u63a5\u8fd1\u5177\u4f53\u653f\u7b56\u58f0\u660e\u7684\u662f\u5e95\u90e8\u7684\u4e00\u884c\u8bdd\uff0c\u4e0a\u9762\u5199\u7740\uff0c\u6211\u4eec\u5c3c\u74e6\u652f\u6301[\u8fd9\u4e9b\u4ef7\u503c\u89c2]\uff0c\u4e0e\u4f60\u4eec\u7ad9\u5728\u4e00\u8d77\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5c3c\u74e6\u7684\u9690\u79c1\u653f\u7b56\u662f\u4e00\u4efd\u6807\u51c6\u7684\u6cd5\u5f8b\u6587\u4ef6\uff0c\u8bfb\u8d77\u6765\u5c31\u50cf\u662f\u4e00\u4efd\u6cd5\u5f8b\u6587\u4ef6\u3002\u5b83\u4e5f\u66f4\u52a0\u5177\u4f53\uff0c\u5e76\u5217\u51fa\u4e86\u4e00\u4e9b\u4ee4\u4eba\u4e0d\u5b89\u7684\u7ec6\u8282\uff0c\u8fd9\u4e9b\u7ec6\u8282\u542c\u8d77\u6765\u4e0e\u5c3c\u74e6\u7684\u6570\u5b57\u6743\u5229\u6cd5\u6848\u4e2d\u8868\u8fbe\u7684\u5d07\u9ad8\u7406\u60f3\u80cc\u9053\u800c\u9a70\u3002\u4e00\u4e2a\u540d\u4e3a\u201c\u5411\u7b2c\u4e09\u65b9\u62ab\u9732\u4f60\u7684\u4fe1\u606f\u201d\u7684\u680f\u76ee\u751a\u81f3\u4f3c\u4e4e\u81ea\u76f8\u77db\u76fe\u3002\nNeeva\u5728\u8fd9\u4e00\u8282\u7684\u5f00\u573a\u767d\u8bf4\uff0c\u9664\u4e86\u4ee5\u4e0b\u5fc5\u8981\u7684\u60c5\u51b5\u5916\uff0c\u5b83\u4e0d\u4f1a\u4e0e\u7b2c\u4e09\u65b9\u5171\u4eab\u3001\u62ab\u9732\u6216\u51fa\u552e\u60a8\u7684\u4e2a\u4eba\u4fe1\u606f-\u4f46\u8fd9\u4e9b\u5fc5\u8981\u7684\u60c5\u51b5\u5305\u62ec\u9644\u5c5e\u516c\u53f8\uff0c\u5e76\u975e\u5e38\u76f4\u622a\u4e86\u5f53\u5730\u58f0\u660e\uff0cNeeva\u53ef\u80fd\u4f1a\u4e0e\u6211\u4eec\u7684\u9644\u5c5e\u516c\u53f8\u5171\u4eab\u4e2a\u4eba\u4fe1\u606f\u3002\n\u867d\u7136\u670d\u52a1\u63d0\u4f9b\u5546\u548c\u5e7f\u544a\u5408\u4f5c\u4f19\u4f34\u8fd9\u4e24\u4e2a\u90e8\u5206\u53d7\u5230\u4f7f\u7528\u9650\u5236\u7684\u9650\u5236\uff0c\u4f46\u5bf9\u4e0e\u9644\u5c5e\u516c\u53f8\u5171\u4eab\u7684\u6570\u636e\u6ca1\u6709\u8fd9\u6837\u7684\u9650\u5236\u3002\u8be5\u6587\u4ef6\u4e5f\u6ca1\u6709\u5177\u4f53\u5b9a\u4e49\u201c\u9644\u5c5e\u516c\u53f8\u201d\u4e00\u8bcd\u53ef\u80fd\u6307\u7684\u662f\u8c01\u6216\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u3002\n\u66f4\u5177\u5b89\u5168\u610f\u8bc6\u7684\u7528\u6237\u4e5f\u5e94\u8be5\u77e5\u9053Neeva\u7684\u6570\u636e\u4fdd\u7559\u653f\u7b56\uff0c\u5b83\u7b80\u5355\u5730\u58f0\u660e\uff0c\u53ea\u8981\u60a8\u4f7f\u7528\u6211\u4eec\u7684\u670d\u52a1\uff0c\u6216\u8005\u6839\u636e\u9700\u8981\u5b9e\u73b0\u6536\u96c6\u8fd9\u4e9b\u4fe1\u606f\u7684\u76ee\u7684\uff0c\u6211\u4eec\u5c31\u4f1a\u6309\u7167\u672c\u9690\u79c1\u653f\u7b56\u4e2d\u7684\u63cf\u8ff0\u5b58\u50a8\u6211\u4eec\u6536\u5230\u7684\u4e2a\u4eba\u4fe1\u606f\u3002\u2026\u3002[\u5305\u62ec\u8ffd\u6c42]\u5408\u6cd5\u7684\u5546\u4e1a\u76ee\u7684\u3002\n\u8003\u8651\u5230\u6570\u636e\u6536\u96c6\u53ef\u80fd\u5305\u62ec\u4e0e\u7528\u6237\u7684\u4e3b\u8981\u8c37\u6b4c\u6216\u5fae\u8f6f\u7535\u5b50\u90ae\u4ef6\u8d26\u6237\u7684\u76f4\u63a5\u8fde\u63a5\uff0c\u8fd9\u53ef\u80fd\u76f8\u5f53\u4e8e\u771f\u6b63\u4ee4\u4eba\u4e0d\u5b89\u7684\u4e2a\u4eba\u6570\u636e\u91cf-\u8fd9\u4e9b\u6570\u636e\u73b0\u5728\u5f88\u5bb9\u6613\u53d7\u5230Neeva\u670d\u52a1\u7684\u5371\u5bb3\uff0c\u4ee5\u53caNeeva\u81ea\u5df1\u4f7f\u7528\u6216\u51fa\u552e(\u7279\u522b\u662f\u5728\u6536\u8d2d\u6216\u5408\u5e76\u7684\u60c5\u51b5\u4e0b)\u3002\nNeeva\u76ee\u524d\u5904\u4e8e\u6709\u9650\u7684Beta\u6d4b\u8bd5\u9636\u6bb5\uff0c\u4e0d\u80fd\u7528\u4e8e\u4e00\u822c\u7528\u9014\u3002\u611f\u5174\u8da3\u7684\u6f5c\u5728\u7528\u6237\u53ef\u4ee5\u52a0\u5165\u7b49\u5f85\u540d\u5355\uff0c\u6210\u4e3a\u65e9\u671f\u6d4b\u8bd5\u8005\u3002\n\ud83d\udc41\u5927\u8111\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6709\u7528\u6a21\u578b\u5417\uff1f\u53e6\u5916\uff1a\u83b7\u53d6\u6700\u65b0\u7684\u4eba\u5de5\u667a\u80fd\u65b0\u95fb\u3002\n\ud83d\udcbb\u4f7f\u7528\u6211\u4eecGear\u56e2\u961f\u6700\u559c\u6b22\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3001\u952e\u76d8\u3001\u66ff\u4ee3\u6253\u5b57\u8bbe\u5907\u548c\u964d\u566a\u8033\u673a\u5347\u7ea7\u60a8\u7684\u5de5\u4f5c\u6e38\u620f", "note_en": "In November 2017, Sridhar Ramaswamy\u2014the head of Google&#39;s  $95 billion advertising arm\u2014left the company after a scandal concerning advertisements for major corporations found on YouTube videos that put children in questionable  situations. Ramaswamy told  The New York Times that shortly after that incident, he decided that he needed to do something different in his life\u2014because &#34;an ad-supported model had limitations.&#34;\n This story originally appeared on  Ars Technica, a trusted source for technology news, tech policy analysis, reviews, and more. Ars is owned by WIRED&#39;s parent company, Cond\u00e9 Nast.\n Ramaswamy&#39;s startup company,  Neeva, is that &#34;something different&#34;\u2014and though it, too, is a search engine, it seeks to sidestep some of  Google&#39;s problems by avoiding the ads altogether. Ramaswamy says that the new engine won&#39;t show ads and won&#39;t collect or profit from user data\u2014instead, it will charge its users a subscription fee.\n  Neeva&#39;s approach follows an old truism that says if you pay for something, you&#39;re a customer\u2014but if you get it for free, you&#39;re a product. That&#39;s likely to be a difficult sell to a public that has come to expect &#34;free&#34; services and doesn&#39;t often care very much about privacy aspects. Even if we hand-wave the difficulty of acquiring a market, other privacy-focused players are expressing significant doubt about Neeva&#39;s approach.\n Search engine  DuckDuckGo is probably the  best-known privacy-focused Google competitor. DuckDuckGo serves ads but doesn&#39;t track its users individually. Its CEO, Gabriel Weinberg, says the ads are a practical necessity. &#34;If you want the most impact to help the most people with privacy, you have to be free,&#34; he said, &#34;because Google will be free forever.&#34;\n However, DuckDuckGo may not be the most relevant comparison to Neeva. The new search engine is planned to be a second-tier provider, with public results sourced from Bing, Weather.com, Intrinio, and Apple. It also plans to offer its users the ability to link cloud accounts such as Google G Suite, Microsoft Office 365, and Dropbox. In addition to providing search results directly from these private sources, Neeva will include that data in building a profile to personalize search results for each user.\n  Startpage is a closer analogue to Neeva&#39;s proposed model. Like Neeva, Startpage sources search results externally\u2014in its case, directly from Google. Unlike Neeva, Startpage still shows Google ads and collects a cut of the proceeds. But it shows those ads without attempting to personalize them for the user\u2014no profile is built, and the user&#39;s potentially identifying information is stripped from the queries passed along to Google as well.\n  Startpage CEO Robert E. G. Beens reached out to Ars by email shortly after Neeva&#39;s launch. He expressed extreme skepticism about Neeva&#39;s model\u2014he describes the connections to private data, personal profile building, and long-term data retention as &#34;a hacker&#39;s dream, and a user&#39;s nightmare.&#34; He expressed equally strong opinions about Neeva&#39;s actual privacy policy, calling it &#34;a joke\u2014and not a funny one,&#34; after remarking that &#34;marketing messages can claim almost anything, but a privacy policy has legal status.&#34;\n We should note that there are two different sections of Neeva&#39;s site that appear to address privacy concerns\u2014 a Digital Bill of Rights prominently featured in the company&#39;s About page, and the official  Privacy Policy, linked more austerely from the footer of each page.\n Neeva&#39;s Digital Bill of Rights appears to be just the sort of marketing message Beens alluded to. It makes lofty statements about users&#39; rights to privacy, controls on data collection, data usage transparency, and user ownership of their own data. It further declares that companies in general should respect those rights\u2014but it makes no outright promises about whether or how Neeva will respect them. The closest thing to a concrete statement of policy on the page is a line at the bottom stating, &#34;We at Neeva stand by [these values], in solidarity with you.&#34;\n  Neeva&#39;s Privacy Policy, in contrast, is a standard legal document, and it reads like one. It&#39;s also much more concrete and lays out some troubling details that sound opposed to the lofty ideals expressed in Neeva&#39;s Digital Bill of Rights. A section titled &#34;Disclosing Your Information to Third Parties&#34; even seems to contradict itself.\n  Neeva opens that section by saying it does not share, disclose, or sell your personal information with third parties &#34;outside of the necessary cases below&#34;\u2014but those necessary cases include &#34;Affiliates,&#34; with the very brusque statement that Neeva &#34;may share personal information with our affiliated companies.&#34;\n Although the &#34;Service Providers&#34; and &#34;Advertising Partners&#34; subsections are hedged with usage limitations, there are no such limits given for data shared with affiliates. The document also provides no concrete definition of who the term affiliates might refer to or in what context.\n More security-conscious users should also be aware of Neeva&#39;s data-retention policy, which simply states,&#34;We store the personal information we receive as described in this Privacy Policy for as long as you use our Services or as necessary to fulfill the purposes for which it was collected \u2026 [including pursuit of] legitimate business purposes.&#34;\n  Given that the data collection may include direct connection to a user&#39;s primary Google or Microsoft email account, this might amount to a truly unsettling volume of personal data\u2014data that is now vulnerable to compromise of Neeva&#39;s services, as well as use or sale (particularly in the case of acquisition or merger) by Neeva itself.\n Neeva is currently in limited beta testing and is not available for general use. Interested potential users can join a  waiting list to become an early tester.\n    \ud83d\udc41 Is the brain a  useful model for AI? Plus:  Get the latest AI news\n \ud83d\udcbb Upgrade your work game with our Gear team\u2019s  favorite laptops,  keyboards,  typing alternatives, and  noise-canceling headphones", "posttime": "2020-07-06 11:18:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "testing,neeva", "title": "\u4e00\u5bb6Startup\u6b63\u5728\u6d4b\u8bd5\u641c\u7d22\u5f15\u64ce\u7684\u8ba2\u9605\u6a21\u5f0f", "title_en": "A Startup Is Testing the Subscription Model for Search Engines", "transed": 1, "url": "https://www.wired.com/story/a-startup-is-testing-the-subscription-model-for-search-engines/", "via": "", "real_tags": ["testing", "neeva"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010054, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53ef\u9760\u3001\u53ef\u6269\u5c55\u3001\u53ef\u7ef4\u62a4\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u53ef\u9760\u6027\u610f\u5473\u7740\u5373\u4f7f\u5728\u4e8b\u60c5\u51fa\u9519\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u80fd\u7ee7\u7eed\u6b63\u5e38\u5de5\u4f5c\u3002\u5e38\u89c1\u6545\u969c\u548c\u9884\u9632\u63aa\u65bd\u5305\u62ec\uff1a\u786c\u4ef6\u6545\u969c\uff1a\u786c\u76d8\u5d29\u6e83\u3001\u65ad\u7535\u3001\u7f51\u7edc\u914d\u7f6e\u4e0d\u6b63\u786e\u3001\u2026\u3002\u53ea\u8981\u6211\u4eec\u80fd\u5c06\u5907\u4efd\u5feb\u901f\u6062\u590d\u5230\u65b0\u8ba1\u7b97\u673a\u4e0a\uff0c\u505c\u673a\u65f6\u95f4\u5c31\u4e0d\u4f1a\u81f4\u547d\u3002\n\u53ef\u4f38\u7f29\u6027\u63cf\u8ff0\u4e86\u7cfb\u7edf\u5904\u7406\u589e\u52a0\u7684\u8d1f\u8f7d\u7684\u80fd\u529b\u3002\u63cf\u8ff0\u6027\u80fd\uff1a\u5f53\u60a8\u589e\u52a0\u8d1f\u8f7d\u53c2\u6570\u65f6\uff0c\u5982\u679c\u5e0c\u671b\u4fdd\u6301\u6027\u80fd\u4e0d\u53d8\uff0c\u60a8\u4f1a\u589e\u52a0\u591a\u5c11\u8d44\u6e90\uff1f\n\u53ef\u7ef4\u62a4\u6027\u4fa7\u91cd\u4e8e3\u4e2a\u8bbe\u8ba1\u539f\u5219\uff1a\u7b80\u5355\u6027\uff1a\u4f7f\u65b0\u5de5\u7a0b\u5e08\u66f4\u5bb9\u6613\u7406\u89e3\u7cfb\u7edf\u3002\u63d0\u4f9b\u826f\u597d\u7684\u62bd\u8c61\u5c42\uff0c\u5141\u8bb8\u6211\u4eec\u5c06\u5927\u578b\u7cfb\u7edf\u7684\u5404\u4e2a\u90e8\u5206\u63d0\u53d6\u5230\u5b9a\u4e49\u826f\u597d\u7684\u3001\u53ef\u91cd\u7528\u7684\u7ec4\u4ef6\u4e2d\u3002\n\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u3002\u6570\u636e\u6700\u521d\u88ab\u8868\u793a\u4e3a\u4e00\u68f5\u5927\u6811\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u9002\u5408\u8868\u793a\u591a\u5bf9\u591a\u5173\u7cfb\u6a21\u578b\uff0c\u56e0\u6b64\u5173\u7cfb\u6a21\u578b\u5e94\u8fd0\u800c\u751f\u3002\n\u7136\u800c\uff0c\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u5f88\u597d\u5730\u9002\u5e94\u5173\u7cfb\u6a21\u578b\uff0c\u975e\u5173\u7cfbNoSQL\u5e94\u8fd0\u800c\u751f\uff1a\n\u5b58\u50a8\u548c\u68c0\u7d22\u3002\u4e3a\u6570\u636e\u5e93\u63d0\u4f9b\u52a8\u529b\u7684\u6570\u636e\u7ed3\u6784\uff1a\u6563\u5217\u7d22\u5f15\uff1a\u57fa\u672c\u4e0a\u662f\u952e-\u503c\u5bf9\uff0c\u5176\u4e2d\u6bcf\u4e2a\u952e\u90fd\u6620\u5c04\u5230\u6570\u636e\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u5b57\u8282\u504f\u79fb\u91cf\u3002\n\u5c3d\u7ba1\u5b83\u5f88\u5bb9\u6613\u7406\u89e3\u548c\u5b9e\u73b0\uff0c\u4f46\u5b83\u6709\u5185\u5b58\u9650\u5236\uff0c\u5373\u54c8\u5e0c\u8868\u5fc5\u987b\u653e\u5728\u5185\u5b58\u4e2d\u3002\u6b64\u5916\uff0c\u8303\u56f4\u67e5\u8be2\u6548\u7387\u4e0d\u9ad8\uff0c\u56e0\u4e3a\u6563\u5217\u952e\u6ca1\u6709\u653e\u5728\u4e00\u8d77\u3002\n\u6392\u5e8f\u5b57\u7b26\u4e32\u8868(SSTable)\u548c\u65e5\u5fd7\u7ed3\u6784\u5316\u5408\u5e76\u6811(LSM-Trees)\uff1a\u8868\u8fd8\u53ef\u4ee5\u62c6\u5206\u6210\u66f4\u5c0f\u7684\u6bb5\uff0c\u5e76\u4e14\u5408\u5e76\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5b83\u662f\u6392\u5e8f\u7684\u3002\n\u5728\u78c1\u76d8\u4e0a\u7ef4\u62a4\u6392\u5e8f\u7ed3\u6784\u662f\u53ef\u80fd\u7684\uff0c\u5c3d\u7ba1\u5c06\u5176\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6811\u6570\u636e\u7ed3\u6784\uff0c\u5982\u7ea2\u9ed1\u6811\u6216AVL\u6811(Memtable)\u3002\n\u5982\u679c\u6570\u636e\u5e93\u5d29\u6e83\uff0cMemtable\u53ef\u80fd\u4f1a\u4e22\u5931\uff0c\u5c3d\u7ba1\u6211\u4eec\u53ef\u4ee5\u6839\u636eLSM\u6811\u7d22\u5f15\u7ed3\u6784\u4e3a\u5176\u4fdd\u7559\u5355\u72ec\u7684\u65e5\u5fd7\u3002\nB\u6811\uff1a\u4e0eSSTables\u4e00\u6837\uff0cB\u6811\u4fdd\u7559\u6309\u952e\u6392\u5e8f\u7684\u952e-\u503c\u5bf9\uff0c\u4ece\u800c\u5141\u8bb8\u9ad8\u6548\u7684\u952e\u503c\u67e5\u627e\u548c\u8303\u56f4\u67e5\u8be2\u3002\nB\u6811\u4e0d\u662f\u5c06\u6570\u636e\u5e93\u62c6\u5206\u6210\u53ef\u53d8\u5927\u5c0f\u7684\u6bb5\u5e76\u59cb\u7ec8\u6309\u987a\u5e8f\u5199\u5165\uff0c\u800c\u662f\u5c06\u5176\u62c6\u5206\u6210\u56fa\u5b9a\u5927\u5c0f\u7684\u5757/\u9875\uff0c\u5e76\u4e14\u4e00\u6b21\u8bfb/\u5199\u4e00\u9875\u3002\n\u6bcf\u6b21\u4fee\u6539\u90fd\u9996\u5148\u5199\u5165\u9884\u5199\u65e5\u5fd7(WAL)\uff0c\u4ee5\u4fbf\u7d22\u5f15\u5728\u5d29\u6e83\u540e\u53ef\u4ee5\u6062\u590d\u5230\u4e00\u81f4\u72b6\u6001\u3002\n\u4e8b\u52a1\u5904\u7406\u8fd8\u662f\u5206\u6790\uff1f\u57fa\u672c\u6570\u636e\u5e93\u8bbf\u95ee\u6a21\u5f0f\u7c7b\u4f3c\u4e8e\u5904\u7406\u4e1a\u52a1\u4e8b\u52a1(\u521b\u5efa\u3001\u8bfb\u53d6\u3001\u66f4\u65b0\u3001\u5220\u9664\u8bb0\u5f55)\uff0c\u79f0\u4e3a\u8054\u673a\u4e8b\u52a1\u5904\u7406(OLTP)\u3002\n\u7531\u4e8eOLTP\u5bf9\u4e1a\u52a1\u8fd0\u8425\u81f3\u5173\u91cd\u8981\uff0c\u56e0\u6b64\u9884\u8ba1OLTP\u5c06\u9ad8\u5ea6\u53ef\u7528\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e0d\u613f\u8ba9\u4e1a\u52a1\u5206\u6790\u5e08\u8fd0\u884c\u5373\u5e2d\u5206\u6790\u67e5\u8be2\u3002\n\u6570\u636e\u4ed3\u5e93\u662f\u5206\u6790\u5e08\u53ef\u4ee5\u5728\u4e0d\u5f71\u54cdOLTP\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\u67e5\u8be2\u7684\u5355\u72ec\u6570\u636e\u5e93\u3002\u4eceOLTP\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u6570\u636e\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u4fbf\u4e8e\u5206\u6790\u7684\u6a21\u5f0f\uff0c\u8fdb\u884c\u6e05\u7406\uff0c\u7136\u540e\u52a0\u8f7d\u5230\u6570\u636e\u4ed3\u5e93\u4e2d\u3002\n\u4f7f\u7528\u5355\u72ec\u6570\u636e\u4ed3\u5e93\u7684\u4e00\u5927\u4f18\u52bf\u662f\u6570\u636e\u4ed3\u5e93\u53ef\u4ee5\u9488\u5bf9\u5206\u6790\u8bbf\u95ee\u6a21\u5f0f\u8fdb\u884c\u4f18\u5316\u3002\n\u9762\u5411\u5217\u7684\u5b58\u50a8\uff1a\u5728\u5927\u591a\u6570OLTP\u6570\u636e\u5e93\u4e2d\uff0c\u5b58\u50a8\u662f\u4ee5\u9762\u5411\u884c\u7684\u65b9\u5f0f\u5e03\u5c40\u7684\uff1a\u8868\u4e2d\u4e00\u884c\u4e2d\u7684\u6240\u6709\u503c\u90fd\u662f\u76f8\u90bb\u5b58\u50a8\u7684\u3002\u5728\u9762\u5411\u5217\u7684\u5b58\u50a8\u4e2d\uff0c\u6765\u81ea\u6bcf\u5217\u7684\u6240\u6709\u503c\u90fd\u5b58\u50a8\u5728\u4e00\u8d77\u3002\n\u56e0\u4e3a\u6bcf\u5217\u7684\u503c\u5e8f\u5217\u901a\u5e38\u770b\u8d77\u6765\u662f\u91cd\u590d\u7684(\u4e0d\u540c\u7684\u503c\u5f88\u5c0f)\uff0c\u6240\u4ee5\u5b83\u4eec\u901a\u5e38\u5f88\u9002\u5408\u538b\u7f29\u3002\n\u805a\u5408\uff1a\u7531\u4e8e\u6570\u636e\u4ed3\u5e93\u67e5\u8be2\u901a\u5e38\u6d89\u53ca\u805a\u5408\u51fd\u6570\uff0c\u5982COUNT\u3001SUM\u3001AVG\u3001MIN\u6216MAX\uff0c\u6211\u4eec\u53ef\u4ee5\u7f13\u5b58\u8fd9\u4e9b\u5e38\u7528\u7684\u805a\u5408\u503c\u3002\n\u521b\u5efa\u6b64\u7c7b\u7f13\u5b58\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u5b9e\u4f53\u5316\u89c6\u56fe\uff0c\u800c\u6570\u636e\u7acb\u65b9\u4f53\u662f\u4e00\u4e2a\u7279\u4f8b\u3002\n\u7f16\u7801\u548c\u8fdb\u5316\u3002\u7528\u4e8e\u7f16\u7801\u6570\u636e\u7684\u683c\u5f0f\u3002\u8bb8\u591a\u8bed\u8a00\u90fd\u5185\u7f6e\u4e86\u5c06\u5185\u5b58\u4e2d\u7684\u5bf9\u8c61\u7f16\u7801\u4e3a\u5b57\u8282\u5e8f\u5217\u7684\u652f\u6301\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5e76\u6ca1\u6709\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u662f\u7279\u5b9a\u4e8e\u8bed\u8a00\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u663e\u793a\u51fa\u826f\u597d\u7684\u6027\u80fd\u3002\nJSON\u3001XML\u5e7f\u4e3a\u4eba\u77e5\uff0c\u7531\u4e8e\u5b83\u4eec\u7b80\u5355\u3001\u53ef\u88ab\u591a\u79cd\u8bed\u8a00\u4f7f\u7528\u5e76\u5177\u6709\u5bf9Web\u6d4f\u89c8\u5668\u7684\u5185\u7f6e\u652f\u6301\u800c\u53d7\u5230\u652f\u6301\u3002\u4f46\u662f\uff0c\u5173\u4e8e\u6570\u5b57\u7684\u7f16\u7801\u6709\u5f88\u591a\u4e0d\u660e\u786e\u4e4b\u5904\uff0c\u800c\u4e14\u5b83\u4eec\u4e5f\u4e0d\u652f\u6301\u4e8c\u8fdb\u5236\u7f16\u7801(\u7d27\u51d1\u3001\u9ad8\u6548\u7684\u7f16\u7801)\u3002\u56e0\u6b64\u51fa\u73b0\u4e86MessagePack\u3001BSON\u3001BJSON\u7b49\u3002\nThrift\u548cProtocol Buffers\u662f\u4e8c\u8fdb\u5236\u7f16\u7801\u5e93\uff0c\u9700\u8981\u4efb\u4f55\u5df2\u7f16\u7801\u6570\u636e\u7684\u6a21\u5f0f\uff0c\u8fd9\u662f\u660e\u786e\u5b9a\u4e49\u7684\u5411\u524d\u548c\u5411\u540e\u517c\u5bb9\u8bed\u4e49\u3002\u5b83\u4eec\u9644\u5e26\u4e00\u4e2a\u4ee3\u7801\u751f\u6210\u5de5\u5177\uff0c\u53ef\u4ee5\u751f\u6210\u4ee5\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0\u6a21\u5f0f\u7684\u7c7b\u3002\n\u8fd8\u6709\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7f16\u7801\u5e93Avro\uff0c\u53ef\u4ee5\u5f88\u597d\u5730\u5904\u7406\u5927\u578b\u6587\u4ef6\uff0c\u5c31\u50cfHadoop\u7684\u7528\u4f8b\u4e00\u6837\u3002\n\u6570\u636e\u6d41\u7684\u6a21\u5f0f(\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b)\u3002\u6570\u636e\u5e93\uff1a\u5199\u5165\u6570\u636e\u5e93\u7684\u8fdb\u7a0b\u5bf9\u6570\u636e\u8fdb\u884c\u7f16\u7801\uff0c\u4ece\u6570\u636e\u5e93\u8bfb\u53d6\u7684\u8fdb\u7a0b\u5bf9\u6570\u636e\u8fdb\u884c\u89e3\u7801\u3002\n\u5bf9\u670d\u52a1\u3001REST\u548cRPC\u7684\u8c03\u7528(GRPC)\uff1a\u5ba2\u6237\u7aef\u5bf9\u8bf7\u6c42\u8fdb\u884c\u7f16\u7801\uff0c\u670d\u52a1\u5668\u5bf9\u8bf7\u6c42\u8fdb\u884c\u89e3\u7801\u5e76\u5bf9\u54cd\u5e94\u8fdb\u884c\u7f16\u7801\uff0c\u5ba2\u6237\u7aef\u6700\u7ec8\u5bf9\u54cd\u5e94\u8fdb\u884c\u89e3\u7801\u3002\n\u5f02\u6b65\u6d88\u606f\u4f20\u9012(RabbitMQ\u3001Apache Kafka)\uff1a\u8282\u70b9\u76f8\u4e92\u53d1\u9001\u6d88\u606f\uff0c\u6d88\u606f\u7531\u53d1\u9001\u65b9\u7f16\u7801\uff0c\u63a5\u6536\u65b9\u89e3\u7801\u3002\nii.\u590d\u5236\u3001\u5206\u533a/\u5206\u7247\u3001\u4e8b\u52a1\uff0c\u4ee5\u53ca\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u4e00\u81f4\u6027\u548c\u4e00\u81f4\u6027\u7684\u610f\u4e49\u3002\n\u590d\u5236\u3002\u57fa\u4e8e\u5f15\u5bfc\u8005\u7684\u590d\u5236\uff1a\u5de5\u4f5c\u6d41\uff1a\u5ba2\u6237\u7aef\u5fc5\u987b\u5411\u5f15\u5bfc\u8005\u53d1\u9001\u5199\u8bf7\u6c42\uff0c\u4f46\u53ef\u4ee5\u5411\u5f15\u5bfc\u8005\u548c\u8ddf\u968f\u8005\u53d1\u9001\u8bfb\u8bf7\u6c42\u3002\n\u5728\u9886\u5bfc\u8005\u5c06\u6570\u636e\u5199\u5165\u5176\u672c\u5730\u5b58\u50a8\u4e4b\u540e\uff0c\u5b83\u4f1a\u5c06\u66f4\u6539\u53d1\u9001\u7ed9\u6240\u6709\u8ddf\u968f\u8005\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u76f8\u5e94\u5730\u81ea\u6211\u5e94\u7528\u3002\n\u590d\u5236\u7cfb\u7edf\u7684\u4e00\u4e2a\u91cd\u8981\u7ec6\u8282\u662f\u590d\u5236\u662f\u540c\u6b65\u8fdb\u884c\u8fd8\u662f\u5f02\u6b65\u8fdb\u884c\u3002\u5373\u4f7f\u540c\u6b65\u590d\u5236\u7684\u4f18\u70b9\u662f\u8ddf\u968f\u8005\u4fdd\u8bc1\u5177\u6709\u6700\u65b0\u7684\u6570\u636e\uff0c\u4f46\u662f\u5982\u679c\u540c\u6b65\u8ddf\u968f\u8005\u6ca1\u6709\u54cd\u5e94\uff0c\u5219\u65e0\u6cd5\u5904\u7406\u5199\u5165\uff0c\u56e0\u6b64\u5f15\u5bfc\u8005\u5fc5\u987b\u963b\u6b62\u6240\u6709\u5199\u5165\u5e76\u7b49\u5f85\uff0c\u76f4\u5230\u518d\u6b21\u6709\u4e00\u4e2a\u53ef\u7528\u3002\n\u8ba9\u6240\u6709\u8ddf\u968f\u8005\u4fdd\u6301\u540c\u6b65\u662f\u4e0d\u5207\u5b9e\u9645\u7684\uff0c\u56e0\u6b64\u57fa\u4e8e\u9886\u5bfc\u8005\u7684\u590d\u5236\u901a\u5e38\u88ab\u914d\u7f6e\u4e3a\u5b8c\u5168\u5f02\u6b65\u7684\u3002\n\u6709\u65f6\uff0c\u60a8\u9700\u8981\u8bbe\u7f6e\u65b0\u7684\u8ddf\u968f\u8005\u4ee5\u589e\u52a0\u526f\u672c\u6570\u91cf\uff0c\u6216\u66ff\u6362\u51fa\u73b0\u6545\u969c\u7684\u8282\u70b9\u3002\u8fd9\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u9886\u5bfc\u8005\u6570\u636e\u5e93\u7684\u4e00\u81f4\u5feb\u7167\u5728\u4e0d\u505c\u673a\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u3002\n\u5982\u679c\u8ddf\u968f\u8005\u5012\u4e0b\uff0c\u5b83\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4ece\u4ece\u9886\u5bfc\u8005\u90a3\u91cc\u6536\u5230\u7684\u65e5\u5fd7\u4e2d\u6062\u590d\u8fc7\u6765\u3002\u7a0d\u540e\uff0c\u5f53\u5b83\u80fd\u591f\u518d\u6b21\u4e0e\u9886\u5bfc\u8005\u4ea4\u8c08\u65f6\uff0c\u5b83\u53ef\u4ee5\u8bf7\u6c42\u6240\u6709\u4e22\u5931\u7684\u6570\u636e\u5e76\u8d76\u4e0a\u9886\u5bfc\u8005\u3002\n\u5982\u679c\u9886\u5bfc\u8005\u5012\u4e0b\uff0c\u4e00\u79cd\u53ef\u80fd\u7684\u65b9\u6cd5\u662f\u6545\u969c\u8f6c\u79fb\uff1a\u9700\u8981\u4f7f\u7528\u4e00\u81f4\u7b97\u6cd5\u5c06\u5176\u4e2d\u4e00\u4e2a\u8ddf\u968f\u8005\u63d0\u5347\u4e3a\u65b0\u9886\u5bfc\u8005\uff0c\u5ba2\u6237\u7aef\u548c\u8ddf\u968f\u8005\u9700\u8981\u914d\u7f6e\u4e3a\u4e0e\u65b0\u9886\u5bfc\u8005\u5bf9\u8bdd\u3002\u7136\u800c\uff0c\u6545\u969c\u8f6c\u79fb\u4e5f\u53ef\u80fd\u51fa\u9519(\u4e24\u4e2a\u9886\u5bfc\u8005\uff0c\u5728\u9886\u5bfc\u8005\u88ab\u5ba3\u5e03\u6b7b\u4ea1\u4e4b\u524d\u9009\u62e9\u6b63\u786e\u7684\u8d85\u65f6\uff0c\u2026)\u3002\u56e0\u4e3a\u8fd9\u4e9b\u95ee\u9898\u6ca1\u6709\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u590d\u5236\u65e5\u5fd7\u7684\u4e0d\u540c\u5b9e\u73b0\uff1a\u57fa\u4e8e\u8bed\u53e5\u7684\u590d\u5236\uff1a\u9886\u5bfc\u8005\u8bb0\u5f55\u5176\u6267\u884c\u7684\u6bcf\u4e2a\u5199\u8bf7\u6c42\uff0c\u5e76\u5c06\u8be5\u8bed\u53e5\u65e5\u5fd7\u53d1\u9001\u7ed9\u5176\u8ddf\u968f\u8005\u3002\u5c3d\u7ba1\u770b\u8d77\u6765\u5408\u7406\uff0c\u4f46\u975e\u786e\u5b9a\u6027\u51fd\u6570(\u5982now())\u83b7\u53d6\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\u53ef\u80fd\u4f1a\u5728\u6bcf\u4e2a\u526f\u672c\u4e0a\u751f\u6210\u4e0d\u540c\u7684\u503c\u3002\n\u9884\u5199\u65e5\u5fd7(WAL)\u4f20\u9001\uff1a\u7c7b\u4f3c\u4e8eB-tree\u7684\u65b9\u6cd5\uff0c\u5373\u6bcf\u4e2a\u4fee\u6539\u90fd\u9996\u5148\u5199\u5165WAL\uff0c\u9664\u4e86\u5c06\u65e5\u5fd7\u5199\u5165\u78c1\u76d8\u4e4b\u5916\uff0c\u9886\u5bfc\u8005\u8fd8\u5c06\u65e5\u5fd7\u53d1\u9001\u7ed9\u5176\u8ffd\u968f\u8005\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u6784\u5efa\u4e0e\u9886\u5bfc\u8005\u4e0a\u53d1\u73b0\u7684\u5b8c\u5168\u76f8\u540c\u7684\u6570\u636e\u7ed3\u6784\u7684\u526f\u672c\u3002\n\u903b\u8f91\u65e5\u5fd7\u590d\u5236\uff1a\u5141\u8bb8\u4f7f\u7528\u4e0d\u540c\u7684\u65e5\u5fd7\u683c\u5f0f\u5c06\u590d\u5236\u65e5\u5fd7\u4e0e\u5b58\u50a8\u5f15\u64ce\u89e3\u8026\u3002\n\u57fa\u4e8e\u89e6\u53d1\u5668\u7684\u590d\u5236\uff1a\u6ce8\u518c\u89e6\u53d1\u5668\u53ea\u590d\u5236\u6570\u636e\u7684\u5b50\u96c6\uff0c\u6216\u8005\u4ece\u4e00\u79cd\u6570\u636e\u5e93\u590d\u5236\u5230\u53e6\u4e00\u79cd\u6570\u636e\u5e93\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\n\u590d\u5236\u5ef6\u8fdf\uff1a\u5982\u679c\u7528\u6237\u5728\u5199\u5165\u540e\u4e0d\u4e45\u67e5\u770b\u6570\u636e\uff0c\u5219\u65b0\u6570\u636e\u53ef\u80fd\u5c1a\u672a\u5230\u8fbe\u590d\u5236\u526f\u672c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u5199\u540e\u8bfb\u4e00\u81f4\u6027\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u4ece\u9886\u5bfc\u8005\u5904\u8bfb\u53d6\uff0c\u4ee5\u4fbf\u7528\u6237\u59cb\u7ec8\u770b\u5230\u4ed6\u4eec\u7684\u6700\u65b0\u66f4\u6539\u3002\n\u5982\u679c\u7528\u6237\u4ece\u4e0d\u540c\u7684\u526f\u672c\u8fdb\u884c\u591a\u6b21\u8bfb\u53d6\uff0c\u5e76\u4e14\u526f\u672c\u4e4b\u95f4\u5b58\u5728\u6ede\u540e\uff0c\u5219\u4ed6\u4eec\u53ef\u80fd\u770b\u4e0d\u5230\u6b63\u786e\u7684\u6570\u636e\u3002\u5355\u8c03\u8bfb\u53d6\u901a\u8fc7\u786e\u4fdd\u6bcf\u4e2a\u7528\u6237\u59cb\u7ec8\u4ece\u540c\u4e00\u526f\u672c\u8fdb\u884c\u8bfb\u53d6\u6765\u4fdd\u8bc1\u4e0d\u4f1a\u53d1\u751f\u6b64\u7c7b\u5f02\u5e38\u3002\n\u5982\u679c\u4e00\u4e9b\u8ffd\u968f\u8005\u7684\u590d\u5236\u901f\u5ea6\u6bd4\u5176\u4ed6\u4eba\u6162\uff0c\u89c2\u5bdf\u8005\u53ef\u80fd\u4f1a\u5728\u770b\u5230\u95ee\u9898\u4e4b\u524d\u5c31\u770b\u5230\u7b54\u6848\u3002\u9632\u6b62\u6b64\u7c7b\u5f02\u5e38\u9700\u8981\u4e00\u81f4\u7684\u524d\u7f00\u8bfb\u53d6\uff0c\u4ee5\u4fbf\u5982\u679c\u5199\u5165\u5e8f\u5217\u6309\u7279\u5b9a\u987a\u5e8f\u53d1\u751f\uff0c\u5219\u8bfb\u53d6\u8fd9\u4e9b\u5199\u5165\u7684\u4efb\u4f55\u4eba\u90fd\u5c06\u770b\u5230\u5b83\u4eec\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u51fa\u73b0\u3002\n\u591a\u9886\u5bfc\u8005\u590d\u5236\uff1a\u4f7f\u7528\u6848\u4f8b\uff1a\u591a\u6570\u636e\u4e2d\u5fc3\u8fd0\u8425\uff1a\u6bcf\u4e2a\u6570\u636e\u4e2d\u5fc3\u90fd\u6709\u81ea\u5df1\u7684\u9886\u5bfc\u8005\u3002\u5c3d\u7ba1\u53ef\u80fd\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u6570\u636e\u4e2d\u5fc3\u540c\u65f6\u4fee\u6539\u76f8\u540c\u7684\u6570\u636e\uff0c\u5e76\u4e14\u5fc5\u987b\u89e3\u51b3\u8fd9\u4e9b\u5199\u5165\u51b2\u7a81\uff0c\u4f46\u8fd9\u53ef\u4ee5\u63d0\u9ad8\u6570\u636e\u4e2d\u5fc3\u7684\u6027\u80fd\u548c\u5bf9\u6570\u636e\u4e2d\u5fc3\u4e2d\u65ad\u7684\u5bb9\u5fcd\u5ea6\u3002\n\u5177\u6709\u79bb\u7ebf\u64cd\u4f5c\u7684\u5ba2\u6237\u7aef\uff1a\u6bcf\u4e2a\u5ba2\u6237\u7aef\u90fd\u6709\u4e00\u4e2a\u5145\u5f53\u5f15\u5bfc\u8005\u7684\u672c\u5730\u6570\u636e\u5e93\uff0c\u5e76\u4e14\u60a8\u6240\u6709\u5ba2\u6237\u7aef\u4e0a\u7684\u526f\u672c\u4e4b\u95f4\u6709\u4e00\u4e2a\u5f02\u6b65\u591a\u5f15\u5bfc\u8005\u590d\u5236\u8fc7\u7a0b(\u540c\u6b65)\u3002\n\u5b9e\u65f6\u534f\u4f5c\u7f16\u8f91\uff1a\u5f53\u4e00\u4e2a\u7528\u6237\u7f16\u8f91\u6587\u6863\u65f6\uff0c\u66f4\u6539\u5c06\u7acb\u5373\u5e94\u7528\u4e8e\u5176\u672c\u5730\u526f\u672c\uff0c\u5e76\u5f02\u6b65\u590d\u5236\u5230\u670d\u52a1\u5668\u548c\u6b63\u5728\u7f16\u8f91\u540c\u4e00\u6587\u6863\u7684\u4efb\u4f55\u5176\u4ed6\u7528\u6237\u3002\n\u5904\u7406\u5199\u5165\u51b2\u7a81\uff1a\u5199\u5165\u51b2\u7a81\u53ef\u80fd\u662f\u7531\u4e24\u4e2a\u9886\u5bfc\u8005\u540c\u65f6\u66f4\u65b0\u540c\u4e00\u8bb0\u5f55\u5f15\u8d77\u7684\u3002\u5728\u5355\u5f15\u5934\u65b9\u6848\u4e2d\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u53d1\u751f\u7684\uff0c\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u5f15\u5934\u5c06\u7b49\u5f85\u7b2c\u4e00\u6b21\u5199\u5165\u6216\u4e2d\u6b62\u5b83\u3002\u5728\u591a\u5f15\u5934\u7684\u60c5\u51b5\u4e0b\uff0c\u4e24\u6b21\u5199\u5165\u90fd\u662f\u6210\u529f\u7684\uff0c\u5e76\u4e14\u53ea\u80fd\u5728\u7a0d\u540e\u7684\u65f6\u95f4\u70b9\u5f02\u6b65\u68c0\u6d4b\u51b2\u7a81\u3002\n\u5904\u7406\u591a\u5f15\u5bfc\u5668\u5199\u5165\u51b2\u7a81\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\u901a\u8fc7\u786e\u4fdd\u6240\u6709\u5199\u5165\u90fd\u901a\u8fc7\u540c\u4e00\u6307\u5b9a\u5f15\u5bfc\u5668\u6765\u907f\u514d\u51b2\u7a81\u3002\n\u7531\u4e8e\u5728\u591a\u5f15\u5934\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u5b9a\u4e49\u7684\u5199\u5165\u987a\u5e8f\uff0c\u56e0\u6b64\u4e0d\u6e05\u695a\u6240\u6709\u526f\u672c\u4e2d\u7684\u6700\u7ec8\u503c\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\u6536\u655b\u5230\u6700\u7ec8\u503c\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u5305\u62ec\u4e3a\u6bcf\u4e2a\u5199\u5165\u63d0\u4f9b\u552f\u4e00\u7684ID\uff0c\u5e76\u9009\u62e9ID\u6700\u9ad8\u7684\u4e00\u4e2a\u4f5c\u4e3a\u83b7\u80dc\u8005\uff0c\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5c06\u503c\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u2026\u3002\n\u62d3\u6251\uff1a\u5c06\u5199\u5165\u4ece\u4e00\u4e2a\u8282\u70b9\u4f20\u64ad\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u901a\u4fe1\u8def\u5f84\u3002\u6700\u5e38\u89c1\u7684\u62d3\u6251\u662fAll-to-All\uff0c\u5373\u6bcf\u4e2a\u9886\u5bfc\u8005\u5c06\u5176\u5199\u5165\u5185\u5bb9\u53d1\u9001\u7ed9\u5176\u4ed6\u6bcf\u4e2a\u9886\u5bfc\u8005\u3002\u5176\u4ed6\u6d41\u884c\u7684\u62d3\u6251\u662f\u73af\u5f62\u62d3\u6251\u548c\u661f\u5f62\u62d3\u6251\u3002\n\u73af\u5f62\u62d3\u6251\u548c\u661f\u5f62\u62d3\u6251\u7684\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u53d1\u751f\u6545\u969c\uff0c\u8def\u5f84\u5c31\u4f1a\u4e2d\u65ad\uff0c\u4ece\u800c\u5bfc\u81f4\u4e00\u4e9b\u8282\u70b9\u65e0\u6cd5\u8fde\u63a5\u5230\u5176\u4ed6\u8282\u70b9\u3002\n\u5c3d\u7ba1All-to-All\u62d3\u6251\u907f\u514d\u4e86\u5355\u70b9\u6545\u969c\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u5373\u67d0\u4e9b\u590d\u5236\u901f\u5ea6\u66f4\u5feb\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u8986\u76d6\u5176\u4ed6\u590d\u5236\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u7248\u672c\u77e2\u91cf\u7684\u6280\u672f\u6765\u6b63\u786e\u5730\u5bf9\u8fd9\u4e9b\u4e8b\u4ef6\u8fdb\u884c\u6392\u5e8f\u3002\n\u65e0\u9886\u5bfc\u590d\u5236\uff1a\u5ba2\u6237\u7aef\u5199\u5165\u591a\u4e2a\u526f\u672c\uff0c\u6216\u8005\u534f\u8c03\u5668\u8282\u70b9\u4ee3\u8868\u5ba2\u6237\u7aef\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u65e0\u5f15\u7ebf\u590d\u5236\u4e2d\u4e0d\u5b58\u5728\u6545\u969c\u5207\u6362\u3002\u5982\u679c\u8282\u70b9\u51fa\u73b0\u6545\u969c\uff0c\u5ba2\u6237\u7aef\u5c06\u5e76\u884c\u5199\u5165\u6240\u6709\u53ef\u7528\u7684\u526f\u672c\uff0c\u9a8c\u8bc1\u5b83\u4eec\u662f\u5426\u6210\u529f\uff0c\u5e76\u7b80\u5355\u5730\u5ffd\u7565\u4e00\u4e2a\u4e0d\u53ef\u7528\u7684\u526f\u672c\u3002\u8bfb\u8bf7\u6c42\u4e5f\u4f1a\u5e76\u884c\u53d1\u9001\u5230\u591a\u4e2a\u8282\u70b9\uff0c\u4ee5\u907f\u514d\u8fc7\u65f6\u7684\u503c\u3002\n\u4e3a\u4e86\u786e\u4fdd\u5c06\u6240\u6709\u6700\u65b0\u6570\u636e\u590d\u5236\u5230\u6bcf\u4e2a\u526f\u672c\uff0c\u4e24\u79cd\u5e38\u7528\u7684\u673a\u5236\u662f\u8bfb\u53d6\u4fee\u590d(\u5e76\u884c\u5411\u591a\u4e2a\u8282\u70b9\u53d1\u51fa\u8bf7\u6c42\uff0c\u5e76\u4f7f\u7528\u7248\u672c\u63a7\u5236\u68c0\u6d4b\u8fc7\u65f6\u7684\u503c)\u3001\u53cd\u71b5\u5904\u7406(\u4e0d\u65ad\u67e5\u627e\u526f\u672c\u4e4b\u95f4\u7684\u6570\u636e\u5dee\u5f02\u5e76\u5c06\u4efb\u4f55\u4e22\u5931\u7684\u6570\u636e\u4ece\u4e00\u4e2a\u526f\u672c\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u526f\u672c\u7684\u540e\u53f0\u8fdb\u7a0b)\u3002\n\u5982\u679c\u6709n\u4e2a\u526f\u672c\uff0c\u5219\u5fc5\u987b\u7531w\u4e2a\u8282\u70b9\u786e\u8ba4\u6bcf\u4e2a\u5199\u5165\u624d\u80fd\u88ab\u89c6\u4e3a\u6210\u529f\uff0c\u5e76\u4e14\u6211\u4eec\u5fc5\u987b\u4e3a\u6bcf\u4e2a\u8bfb\u53d6\u67e5\u8be2\u81f3\u5c11r\u4e2a\u8282\u70b9\uff0c\u53ea\u8981w+r&gt\uff1bn\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u8bfb\u53d6\u65f6\u83b7\u5f97\u6700\u65b0\u7684\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u4e2d\u8bfb\u53d6\u7684r\u4e2a\u8282\u70b9\u4e2d\u81f3\u5c11\u5fc5\u987b\u6709\u4e00\u4e2a\u662f\u6700\u65b0\u7684\u3002\u4f46\u662f\uff0c\u5f53\u8fd4\u56de\u8fc7\u65f6\u503c\u65f6\uff0c\u4ecd\u7136\u5b58\u5728\u8fb9\u7f18\u60c5\u51b5\uff1a\n\u5bf9\u4e8e\u591a\u6570\u636e\u4e2d\u5fc3\u64cd\u4f5c\uff0c\u4e00\u4e9b\u65e0\u9886\u5bfc\u590d\u5236\u7684\u5b9e\u73b0\u5c06\u5ba2\u6237\u7aef\u548c\u6570\u636e\u5e93\u8282\u70b9\u4e4b\u95f4\u7684\u6240\u6709\u901a\u4fe1\u4fdd\u6301\u5728\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u672c\u5730\uff0c\u56e0\u6b64n\u63cf\u8ff0\u4e86\u4e00\u4e2a\u6570\u636e\u4e2d\u5fc3\u5185\u7684\u526f\u672c\u6570\u91cf\u3002\u8de8\u6570\u636e\u4e2d\u5fc3\u590d\u5236\u7684\u5de5\u4f5c\u539f\u7406\u7c7b\u4f3c\u4e8e\u591a\u5f15\u7ebf\u590d\u5236\u3002\n\u5904\u7406\u5e76\u53d1\u5199\u5165\u51b2\u7a81\uff1a\u6700\u540e\u4e00\u6b21\u5199\u5165\u83b7\u80dc\uff1a\u4e3a\u6bcf\u4e2a\u5199\u5165\u9644\u52a0\u4e00\u4e2a\u65f6\u95f4\u6233\uff0c\u9009\u62e9\u6700\u5927\u7684\u65f6\u95f4\u6233\u4f5c\u4e3a\u6700\u65b0\u7684\uff0c\u5e76\u4e22\u5f03\u65f6\u95f4\u6233\u8f83\u4f4e\u7684\u6240\u6709\u5199\u5165\u3002\n\u7248\u672c\u5411\u91cf\uff1a\u5bf9\u4e8e\u5355\u4e2a\u590d\u5236\u54c1\uff0c\u7b97\u6cd5\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a\u670d\u52a1\u5668\u4e3a\u6bcf\u4e2a\u5bc6\u94a5\u7ef4\u62a4\u4e00\u4e2a\u7248\u672c\u53f7\uff0c\u6bcf\u6b21\u5199\u5165\u8be5\u5bc6\u94a5\u65f6\u589e\u52a0\u7248\u672c\u53f7\uff0c\u5e76\u5c06\u65b0\u7248\u672c\u53f7\u4e0e\u5199\u5165\u7684\u503c\u4e00\u8d77\u5b58\u50a8\u3002\n\u5ba2\u6237\u7aef\u5fc5\u987b\u5728\u5199\u5165\u4e4b\u524d\u8bfb\u53d6\u5bc6\u94a5\u3002\u5f53\u5ba2\u6237\u7aef\u5199\u5165\u5bc6\u94a5\u65f6\uff0c\u5b83\u5fc5\u987b\u5305\u62ec\u524d\u4e00\u6b21\u8bfb\u53d6\u7684\u7248\u672c\u53f7\uff0c\u5e76\u4e14\u5fc5\u987b\u5c06\u5b83\u5728\u524d\u4e00\u6b21\u8bfb\u53d6\u4e2d\u6536\u5230\u7684\u6240\u6709\u503c\u5408\u5e76\u5728\u4e00\u8d77\u3002\n\u5f53\u670d\u52a1\u5668\u63a5\u6536\u5230\u5177\u6709\u7279\u5b9a\u7248\u672c\u53f7\u7684\u5199\u5165\u65f6\uff0c\u5b83\u53ef\u4ee5\u8986\u76d6\u5177\u6709\u8be5\u7248\u672c\u53f7\u6216\u66f4\u4f4e\u7248\u672c\u53f7\u7684\u6240\u6709\u503c\uff0c\u4f46\u5b83\u5fc5\u987b\u4fdd\u7559\u5177\u6709\u66f4\u9ad8\u7248\u672c\u53f7\u7684\u6240\u6709\u503c\u3002\n\u5bf9\u4e8e\u591a\u4e2a\u590d\u5236\u526f\u672c\uff1a\u6bcf\u4e2a\u590d\u5236\u526f\u672c\u5728\u5904\u7406\u5199\u5165\u65f6\u4f1a\u9012\u589e\u5176\u81ea\u5df1\u7684\u7248\u672c\u53f7\uff0c\u5e76\u4e14\u8fd8\u4f1a\u8ddf\u8e2a\u5b83\u4ece\u6240\u6709\u5176\u4ed6\u590d\u5236\u526f\u672c\u770b\u5230\u7684\u7248\u672c\u53f7\u3002\n\u5206\u533a/\u5206\u7247\u3002\u5206\u533a\u7684\u4e3b\u8981\u539f\u56e0\u662f\u53ef\u4f38\u7f29\u6027\uff1a\u5206\u533a\u53ef\u4ee5\u5206\u5e03\u5728\u8bb8\u591a\u8282\u70b9\u3001\u78c1\u76d8\u7b49\u4e0a\u3002\n\u5b83\u901a\u5e38\u4e0e\u590d\u5236\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u4fbf\u5c06\u6bcf\u4e2a\u5206\u533a\u7684\u526f\u672c\u5b58\u50a8\u5728\u591a\u4e2a\u8282\u70b9\u4e0a\u3002\n\u5206\u533a\u7684\u76ee\u6807\u662f\u8de8\u8282\u70b9\u5747\u5300\u5206\u5e03\u6570\u636e\u548c\u67e5\u8be2\u8d1f\u8f7d\u3002\n\u952e\u503c\u6570\u636e\u7684\u5206\u533a\u3002\u5206\u533a\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u5c06\u8fde\u7eed\u8303\u56f4\u7684\u952e\u5206\u914d\u7ed9\u6bcf\u4e2a\u5206\u533a\u3002\u7136\u800c\uff0c\u7f3a\u70b9\u662f\u67d0\u4e9b\u6a21\u5f0f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9ad8\u8d1f\u8f7d\u3002\n\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u6563\u5217\u51fd\u6570\u6765\u786e\u5b9a\u7ed9\u5b9a\u952e\u7684\u5206\u533a\u3002\u7f3a\u70b9\u662f\u65e0\u6cd5\u9ad8\u6548\u5730\u6267\u884c\u8303\u56f4\u67e5\u8be2\uff0c\u56e0\u4e3a\u76f8\u90bb\u952e\u73b0\u5728\u5206\u6563\u5728\u6240\u6709\u5206\u533a\u4e2d\u3002\n\u5206\u533a\u548c\u8f85\u52a9\u7d22\u5f15\u3002\u5982\u679c\u6d89\u53ca\u4e8c\u7ea7\u7d22\u5f15\uff0c\u5206\u533a\u5c31\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u4e3a\u5b83\u4eec\u5e76\u4e0d\u552f\u4e00\u5730\u6807\u8bc6\u8bb0\u5f55\uff0c\u800c\u662f\u4e00\u79cd\u641c\u7d22\u7279\u5b9a\u503c\u7684\u5339\u914d\u9879\u7684\u65b9\u5f0f\u3002\n\u4f7f\u7528\u57fa\u4e8e\u6587\u6863\u7684\u5206\u533a\uff0c\u6bcf\u4e2a\u5206\u533a\u7ef4\u62a4\u5176\u81ea\u5df1\u7684\u8f85\u52a9\u7d22\u5f15\uff0c\u4ec5\u8986\u76d6\u8be5\u5206\u533a\u4e2d\u7684\u6587\u6863\u3002\u56e0\u4e3a\u5b83\u4e0d\u5173\u5fc3\u5176\u4ed6\u5206\u533a\uff0c\u6240\u4ee5\u8bfb\u53d6\u5b83\u7684\u5f00\u9500\u53ef\u80fd\u76f8\u5f53\u9ad8\uff0c\u56e0\u4e3a\u9700\u8981\u67e5\u8be2\u6240\u6709\u5206\u533a\u5e76\u805a\u5408\u6240\u6709\u5185\u5bb9\u4ee5\u83b7\u5f97\u66f4\u51c6\u786e\u7684\u7ed3\u679c\u3002\n\u4f7f\u7528\u57fa\u4e8e\u672f\u8bed\u7684\u5206\u533a\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u5206\u533a\u90fd\u6709\u81ea\u5df1\u7684\u4e8c\u7ea7\u7d22\u5f15\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u8986\u76d6\u6240\u6709\u5206\u533a\u4e2d\u6570\u636e\u7684\u5168\u5c40\u7d22\u5f15\u3002\u8fd9\u53ef\u4ee5\u63d0\u9ad8\u8bfb\u53d6\u6548\u7387\uff0c\u800c\u4e0d\u662f\u5728\u6240\u6709\u5206\u533a\u4e0a\u8fdb\u884c\u5206\u6563/\u805a\u96c6\u3002\u7f3a\u70b9\u662f\u5199\u5165\u73b0\u5728\u53d8\u5f97\u66f4\u6162\u3001\u66f4\u590d\u6742\uff0c\u56e0\u4e3a\u5bf9\u5355\u4e2a\u6587\u6863\u7684\u5199\u5165\u73b0\u5728\u53ef\u80fd\u4f1a\u5f71\u54cd\u7d22\u5f15\u7684\u591a\u4e2a\u5206\u533a\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4eec\u589e\u52a0\u8282\u70b9\u548c\u8ba1\u7b97\u673a\uff0c\u4ece\u800c\u91cd\u65b0\u5e73\u8861\u5206\u533a\u3002\u5f53\u8282\u70b9\u6570N\u53d1\u751f\u53d8\u5316\u65f6\uff0cMoD-N\u65b9\u6cd5\u662f\u6709\u95ee\u9898\u7684\uff0c\u5927\u591a\u6570\u5bc6\u94a5\u4e5f\u9700\u8981\u79fb\u52a8\u3002\n\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\u521b\u5efa\u6bd4\u8282\u70b9\u6570\u91cf\u591a\u5f97\u591a\u7684\u5206\u533a\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u8282\u70b9\u5206\u914d\u591a\u4e2a\u5206\u533a\u3002\u5982\u679c\u6dfb\u52a0\u65b0\u8282\u70b9\uff0c\u5b83\u53ef\u4ee5\u4ece\u6bcf\u4e2a\u73b0\u6709\u8282\u70b9\u7a83\u53d6\u51e0\u4e2a\u5206\u533a\u3002\n\u518d\u5e73\u8861\u53ef\u4ee5\u81ea\u52a8\u5b8c\u6210\uff0c\u4e0d\u8fc7\u8ba9\u4eba\u53c2\u4e0e\u8fdb\u6765\u4ee5\u5e2e\u52a9\u9632\u6b62\u64cd\u4f5c\u610f\u5916\u5e76\u4e0d\u4f1a\u6709\u4ec0\u4e48\u574f\u5904\u3002\n\u8bf7\u6c42\u8def\u7531/\u670d\u52a1\u53d1\u73b0\u3002\u5728\u5206\u533a\u548c\u91cd\u65b0\u5e73\u8861\u4e4b\u540e\uff0c\u5ba2\u6237\u7aef\u5982\u4f55\u77e5\u9053\u8981\u8fde\u63a5\u5230\u54ea\u4e2a\u8282\u70b9\uff1f\u5982\u679c\u9700\u8981\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e\u4efb\u4f55\u8282\u70b9\u901a\u4fe1\uff0c\u5e76\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u9002\u5f53\u7684\u8282\u70b9\u3002\n\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e0e\u786e\u5b9a\u5e94\u8be5\u5904\u7406\u8be5\u8bf7\u6c42\u7684\u8282\u70b9\u7684\u8def\u7531\u5c42\u8fdb\u884c\u901a\u4fe1\uff0c\u5e76\u76f8\u5e94\u5730\u8f6c\u53d1\u8be5\u8bf7\u6c42\u3002\n\u4ea4\u6613\u8bb0\u5f55\u3002\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u548c\u8010\u4e45\u6027(\u9178)\u3002\u7531\u4e8e\u4e8b\u52a1\u901a\u5e38\u7531\u591a\u4e2a\u8bed\u53e5\u7ec4\u6210\uff0c\u539f\u5b50\u6027\u4fdd\u8bc1\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u88ab\u89c6\u4e3a\u5355\u4e2a\u201c\u5355\u5143\u201d\uff0c\u8981\u4e48\u5b8c\u5168\u6210\u529f\uff0c\u8981\u4e48\u5b8c\u5168\u5931\u8d25\u3002\n\u4e00\u81f4\u6027\u786e\u4fdd\u4e8b\u52a1\u53ea\u80fd\u5c06\u6570\u636e\u5e93\u4ece\u4e00\u79cd\u6709\u6548\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u72b6\u6001\uff0c\u540c\u65f6\u7ef4\u62a4\u6570\u636e\u5e93\u4e0d\u53d8\u91cf\u3002\n\u6301\u4e45\u6027\u4fdd\u8bc1\u4e86\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u5373\u4f7f\u5728\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\u7684\u60c5\u51b5\u4e0b\u4e5f\u4f1a\u4fdd\u6301\u63d0\u4ea4\u72b6\u6001\u3002\n\u5f31\u9694\u79bb\u7ea7\u522b\u3002\u6570\u636e\u5e93\u901a\u8fc7\u63d0\u4f9b\u4e8b\u52a1\u9694\u79bb(\u5c24\u5176\u662f\u53ef\u5e8f\u5217\u5316\u9694\u79bb)\u5411\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u9690\u85cf\u5e76\u53d1\u95ee\u9898\uff0c\u65b9\u6cd5\u662f\u786e\u4fdd\u4e8b\u52a1\u5177\u6709\u4e0e\u4e32\u884c\u8fd0\u884c\u76f8\u540c\u7684\u6548\u679c\uff0c\u4e00\u6b21\u4e00\u4e2a\uff0c\u4e0d\u5e26\u4efb\u4f55\u5e76\u53d1\u3002\n\u5728\u5b9e\u8df5\u4e2d\uff0c\u53ef\u5e8f\u5217\u5316\u9694\u79bb\u6709\u6027\u80fd\u4ee3\u4ef7\uff0c\u8bb8\u591a\u6570\u636e\u5e93\u4e0d\u60f3\u4e3a\u6b64\u4ed8\u51fa\u4ee3\u4ef7\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u4f7f\u7528\u8f83\u5f31\u7684\u9694\u79bb\u7ea7\u522b\u3002\n\u5feb\u7167\u9694\u79bb\u6216\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236(MVCC)\u3002\u6bcf\u4e2a\u4e8b\u52a1\u4ece\u6570\u636e\u5e93\u7684\u4e00\u81f4\u5feb\u7167\u8bfb\u53d6\u3002\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u4f1a\u67e5\u770b\u4ece\u5176\u542f\u52a8\u65f6\u5f00\u59cb\u7684\u6700\u65b0\u6570\u636e\u3002\n\u9632\u6b62\u4e22\u5931\u66f4\u65b0\u3002\u5982\u679c\u4e24\u4e2a\u4e8b\u52a1\u540c\u65f6\u4fee\u6539\u8be5\u503c\uff0c\u5219\u53ef\u80fd\u53d1\u751f\u66f4\u65b0\u4e22\u5931\uff0c\u5373\u4e00\u4e2a\u4fee\u6539\u4e22\u5931\u3002\n\u9632\u6b62\u5199\u504f\u5dee\u548c\u5e7b\u8c61\u3002\u5199\u504f\u5dee\u662f\u4e22\u5931\u66f4\u65b0\u7684\u6cdb\u5316\u3002\u5f53\u4e24\u4e2a\u4e8b\u52a1\u66f4\u65b0\u4e00\u4e9b\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u76f8\u540c\u7684\u5bf9\u8c61\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n\u5f53\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u7684\u5199\u5165\u66f4\u6539\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u641c\u7d22\u67e5\u8be2\u7684\u7ed3\u679c\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u5e7b\u5f71\u3002\n\u7531\u4e8e\u6d89\u53ca\u591a\u4e2a\u5bf9\u8c61\uff0c\u539f\u5b50\u5355\u5bf9\u8c61\u6216\u5feb\u7167\u9694\u79bb\u5199\u5165\u6ca1\u6709\u5e2e\u52a9\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u963b\u6b62\u6709\u6548\u7684\u51b2\u7a81\u5e76\u53d1\u5199\u5165\u3002\n\u53ef\u5e8f\u5217\u5316\u9694\u79bb\u7684\u5b9e\u73b0\u3002\u5b9e\u9645\u7684\u4e32\u884c\u6267\u884c\u3002\u907f\u514d\u5e76\u53d1\u95ee\u9898\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u5728\u5355\u4e2a\u7ebf\u7a0b\u4e0a\u6309\u4e32\u884c\u987a\u5e8f\u4e00\u6b21\u53ea\u6267\u884c\u4e00\u4e2a\u4e8b\u52a1\u3002\n\u6574\u4e2a\u4e8b\u52a1\u4f5c\u4e3a\u5b58\u50a8\u8fc7\u7a0b\u63d0\u4ea4\uff0c\u56e0\u4e3a\u6570\u636e\u5fc5\u987b\u5c0f\u800c\u5feb\u3002\n\u4e24\u76f8\u9501\u5b9a(2PL)\u30022PL\u6709\u975e\u5e38\u5f3a\u70c8\u7684\u8981\u6c42\uff0c\u5199\u5165\u8005\u4e0d\u4ec5\u963b\u6b62\u5199\u5165\u8005\uff0c\u8bfb\u8005\u4e5f\u963b\u6b62\u5199\u5165\u8005\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\u6700\u5927\u7684\u7f3a\u70b9\u662f\u6027\u80fd\uff0c\u56e0\u4e3a\u5b83\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u5f97\u4e0d\u591a\u3002\n\u53ef\u5e8f\u5217\u5316\u5feb\u7167\u9694\u79bb(SSI)\u3002\u7531\u4e8e\u4e32\u884c\u9694\u79bb\u4e0d\u80fd\u5f88\u597d\u5730\u6269\u5c55\uff0c2PL\u4e5f\u4e0d\u80fd\u5f88\u597d\u5730\u6267\u884c\uff0c\u56e0\u6b64SSI\u5f88\u6709\u524d\u9014\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u5b8c\u5168\u7684\u53ef\u5e8f\u5217\u5316\uff0c\u5e76\u4e14\u4e0e\u5feb\u7167\u9694\u79bb\u76f8\u6bd4\u6027\u80fd\u635f\u5931\u5f88\u5c0f\u3002\n\u5b83\u5141\u8bb8\u4e8b\u52a1\u5728\u4e0d\u963b\u585e\u7684\u60c5\u51b5\u4e0b\u7ee7\u7eed\u8fdb\u884c\u3002\u5f53\u4e8b\u52a1\u60f3\u8981\u63d0\u4ea4\u65f6\uff0c\u4f1a\u68c0\u67e5\u8be5\u4e8b\u52a1\uff0c\u5982\u679c\u6267\u884c\u4e0d\u53ef\u5e8f\u5217\u5316\uff0c\u5219\u4e2d\u6b62\u8be5\u4e8b\u52a1\u3002\n\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u53ef\u80fd\u51fa\u9519\u7684\u4e8b\u60c5\u3002\u90e8\u5206\u6545\u969c\u662f\u6307\u7cfb\u7edf\u7684\u67d0\u4e9b\u90e8\u5206\u4ee5\u67d0\u79cd\u4e0d\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u635f\u574f\uff0c\u5c3d\u7ba1\u5176\u4f59\u90e8\u5206\u5de5\u4f5c\u6b63\u5e38\u3002\u7531\u4e8e\u90e8\u5206\u6545\u969c\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u5373\u60a8\u7684\u89e3\u51b3\u65b9\u6848\u6709\u65f6\u53ef\u80fd\u4f1a\u4e0d\u53ef\u9884\u6d4b\u5730\u5931\u8d25\uff0c\u56e0\u6b64\u5b83\u5f88\u96be\u5904\u7406\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\n\u4e0d\u53ef\u9760\u7684\u7f51\u7edc\u3002\u7f51\u7edc\u8bf7\u6c42\u53ef\u80fd\u4f1a\u51fa\u73b0\u5f88\u591a\u95ee\u9898\uff0c\u4f8b\u5982\u60a8\u7684\u8bf7\u6c42\u53ef\u80fd\u5df2\u4e22\u5931\u3001\u5728\u961f\u5217\u4e2d\u7b49\u5f85\u3001\u8fdc\u7a0b\u8282\u70b9\u53ef\u80fd\u5df2\u5931\u8d25\u3001\u54cd\u5e94\u5df2\u4e22\u5931\u3001\u5ef6\u8fdf\u7b49\u7b49\u3002\n\u8d85\u65f6\u901a\u5e38\u662f\u68c0\u6d4b\u6545\u969c\u7684\u597d\u65b9\u6cd5\u3002\u7cfb\u7edf\u53ef\u4ee5\u6839\u636e\u89c2\u5bdf\u5230\u7684\u54cd\u5e94\u65f6\u95f4\u5206\u5e03\u81ea\u52a8\u8c03\u6574\u8d85\u65f6\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u914d\u7f6e\u7684\u6052\u5b9a\u8d85\u65f6\u3002\n\u4e0d\u53ef\u9760\u7684\u949f\u3002\u65f6\u95f4\u662f\u68d8\u624b\u7684\uff0c\u56e0\u4e3a\u901a\u4fe1\u4e0d\u662f\u5373\u65f6\u7684\uff0c\u6d88\u606f\u4ece\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u9700\u8981\u65f6\u95f4\uff0c\u800c\u4e14\u7531\u4e8e\u6d89\u53ca\u591a\u53f0\u673a\u5668\u7684\u7f51\u7edc\u4e2d\u7684\u5ef6\u8fdf\u53d8\u91cf\uff0c\u5f88\u96be\u786e\u5b9a\u64cd\u4f5c\u7684\u987a\u5e8f\u3002\n\u73b0\u4ee3\u8ba1\u7b97\u673a\u81f3\u5c11\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u65f6\u949f\uff1a\u4e00\u5929\u4e2d\u7684\u65f6\u95f4\u65f6\u949f\uff0c\u901a\u5e38\u4e0e\u7f51\u7edc\u65f6\u95f4\u534f\u8bae(NTP)\u540c\u6b65\uff0c\u8fd9\u610f\u5473\u7740\u6765\u81ea\u4e00\u53f0\u673a\u5668\u7684\u65f6\u95f4\u6233(\u7406\u60f3\u60c5\u51b5\u4e0b)\u610f\u5473\u7740\u4e0e\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\u7684\u65f6\u95f4\u6233\u76f8\u540c\u3002\n\u5355\u8c03\u65f6\u949f\u9002\u7528\u4e8e\u6d4b\u91cf\u6301\u7eed\u65f6\u95f4\uff0c\u4f8b\u5982\u8d85\u65f6\u6216\u670d\u52a1\u7684\u54cd\u5e94\u65f6\u95f4\u3002\n\u4e3a\u4e86\u6709\u7528\uff0c\u9700\u8981\u6839\u636eNTP\u8bbe\u7f6e\u4e00\u5929\u4e2d\u7684\u65f6\u95f4\u65f6\u949f\uff0c\u5c3d\u7ba1\u8fd9\u4e0d\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u8ba1\u7b97\u673a\u4e2d\u7684\u77f3\u82f1\u949f\u90a3\u6837\u53ef\u9760\u3002\n..", "note_en": "Reliable, scalable, maintainable applications. Reliability means continuing to work correctly, even when things go wrong. Common faults and preventions include: Hardware faults: hard disks crash, blackout, incorrect network configuration,\u2026 As long as we can restore a backup onto a new machine quickly, the downtime is not fatal.\n Scalability describes a system\u2019s ability to cope with increased load. Describing performance: When you increase a load parameter, how much do you increase the resources if you want to keep performance unchanged?\n Maintainability focuses on 3 design principles: Simplicity: make it easy for new engineers to understand the system. Provide good abstraction layers that allow us to extract parts of a large system into well-defined, reusable components.\n Data models and query languages. Data started out being represented as one big tree, though it wasn\u2019t good for representing many-to-many relationships models, so the relational model was invented.\n However, some applications didn\u2019t fit well into the relational model, non-relational NoSQL was born:\n Storage and retrieval. Data structres that power your database: Hash indexes: Basically key-value pairs where each key is mapped to a byte offset in the data file.\n  Even though it\u2019s easy to understand and implement, it has memory constrains that the hash table must fit in memory. Also range queries are not efficient since hashed keys are not put next to each other.\n Sorted String Table (SSTable) and Log-Structured Merge-Tree (LSM-trees): The table can also be split into smaller segments and merging is simple as it is sorted.\n Maintaining a sorted structure on disk is possible, though keeping it in memory is easy as we can use a tree data structure such as Red-Black trees or AVL trees (memtable).\n If the database crashes, memtable might be lost though we can keep a separate log for it, inspired by LSM-tree indexing structure.\n B-trees: Like SSTables, B-trees keep key-value pairs sorted by key, which allows efficient key-value lookups and range queries.\n Instead of breaking down the database into variable-size segments and always writing sequentially, B-trees break into fixed-size blocks/pages and reading/writing one page at a time.\n Every modification is first written to a write-ahead log (WAL) so that the index can be restored to a consistent state after a crash.\n Transactional processing or analytic? The basic database access pattern is similar to processing business transaction (create, read, update, delete record), as known as online transaction processing (OLTP).\n Since OLTP are expected to be highly available as they\u2019re critical to the operation of the business, they\u2019re reluctant to let business analysts run ad-hoc analytic queries.\n A data warehouse is a separate database that analysts can query without affecting OLTP operations. Data is extracted from OLTP databases, transformed into an analysis-friendly schema, cleaned up, and then loaded into the data warehouse.\n A big advantage of using a separate data warehouse is that the data warehouse can be optimized for analytic access patterns.\n Column-oriented storage: In most OLTP databases, storage is laid out in a row-oriented fashion: all the values from one row of a table are stored next to each other. In the column-oriented storage, all the values are stored from each column together instead.\n Since the sequences of values for each column are often look repetitive (distinct values are small), they often lend themselves well to compression.\n Aggregation: Since data warehouse queries often involve an aggregate function, such as COUNT, SUM, AVG, MIN or MAX, we can cache these aggregated values that are used often.\n One way of creating such a cache is a materialized view, while data cube is a special case.\n Encoding and evolution. Formats for encoding data. Many languages come with built-in support for encoding in-memory objects to byte sequences though they are not used because it\u2019s language-specific and don\u2019t show good performance.\n JSON, XML are widely known, supported due to the fact that they are simple, can be used by many languages and have built-in support for web browser. However, there are a lot of ambiguity around the encoding of numbers and they also don\u2019t support binary encoding (compact, efficient encoding). Hence the development of MessagePack, BSON, BJSON, and so on.\n Thrift and Protocol Buffers are binary encoding libraries that require a schema for any data that is encoded, that is clearly defined forward and backward compatibility semantics. They come with a code generation tool that produces classes that implement the schema in various programming languages.\n There\u2019s is also a binary encoding library Avro that is good for processing large files as in Hadoop\u2019s use cases.\n Modes of data flow (from one process to anther). Databases: the process writing to the database encodes the data, and the process reading from the database decodes it.\n Calls to services, REST and RPC (gRPC): client encodes a request, server decodes the request and encodes a response, and client finally decodes the response.\n Asynchronous message-passing (RabbitMQ, Apache Kafka): nodes send each other messages that are encoded by the sender and decoded by the recipient.\n II. Replication, partitioning/sharding, transactions, and what it means to achieve consistency and consensus in a distributed system.\n Replication. Leader-based replication: Workflow: Client must send write request to the leader though can send read request to both leader and followers.\n After the leader writes data to its local storage, it sends the changes to all of its followers so that they can self apply accordingly.\n An important detail of a replicated system is whether the replication happens synchronously or asynchronously. Even though the advantage of synchronous replication is that followers is that the follower is guaranteed to have an up-to-date data, if the synchronous follower doesn\u2019t respond, the write cannot be processed, thus the leader must block all writes and wait until one is available again.\n It is impractical for all followers to be synchronous so leader-based replication is often configured to be completely asynchronous.\n From time to time, you need to set up new followers to increase the number of replicas, or to replace failed nodes. This can usually be done without downtime by maintaining a consistent snapshot of the leader\u2019s database.\n If the follower goes down, it can recover quite easily from its logs that it has received from the leader. Later when it\u2019s able to talk to the leader again, it can request all the missing data and catch up to the leader.\n If the leader goes down, a possible approach is failover: one of the followers needs to be promoted to be the new leader using a consensus algorithm, clients and followers need to be configured to talk to the new leader. However, failover can go wrong as well (two leaders, choosing the right timeout before the leader is declared dead,\u2026) as there are no easy solutions to these.\n Different implementation of replication logs: Statement-based replication: the leader logs every write request that it executes, and sends that statement log to its followers. Even though it seems reasonable, non-deterministic function, such as NOW() to get current date and time, is likely to generate a different value on each replica.\n Write-ahead log (WAL) shipping: similar to B-tree\u2019s approach where every modification is first written to a WAL, besides writing the log to disk, the leader also sends it to its followers so that they can build a copy of the exact same data structures as found on the leader.\n Logical log replication: allow the replication log to be decoupled from the storage engine by using different log formats.\n Trigger-based replication: register a trigger to only replicate subset of the data, or from one kind of database to another and so on.\n Replication lags: If the user view the data shortly after making the write, new data may have not yet reach the replica. In this case, we need read-after-write consistency, meaning we can read from the leader first, so that user always see their latest changes.\n If a user makes several reads from different replicas and there\u2019s lagging among replicas, they might not see the correct data. Monotonic reads guarantee that this kind of anomaly does not happen by making sure that each user always makes their reads from the same replica.\n If some followers are replicated slower than others, an observer may see the answer before they see the question. Preventing this kind of anomaly requires consistent prefix reads so that if a sequence of writes happens in a certain order, then anyone reading those writes will see them appear in the same order.\n Multi-leader replication: Use cases: Multi-datacenter operation: each datacenter has its own leader. This can improve perfomance, tolerance of datacenter outages though same data may be concurrently modified in two different datacenters, and those write conflicts must be resolved.\n Client with offline operation: every client has a local database that acts as a leader, and there is an asynchronous multi-leader replication process (sync) between the replicas on all of your clients.\n Real-time collaborative editing: when one user edits a document, the changes are instantly applied to their local replica and asynchronously replicated to the server and any other users who are editing the same document.\n Handling write conflicts: A write conflict can be caused by two leaders concurrently updating the same record. In a single-leader scenario, it can\u2019t happen since the second leader will wait for the first write or abort it. In a multi-leader one, both writes are successful and the conflict can only be detected asynchronously at later point in time.\n The simplest way for dealing with multi-leader write conflicts is to avoid them by making sure all writes go through the same designated leader.\n Since there is no defined ordering of writes in a multi-leader database, it\u2019s unclear what the final value should be in all replicas. A number of ways to converge to the final value include giving each writes a unique ID and picking one with the highest ID as the winner, somehow merging values together,\u2026\n Topologies: communication paths along which writes are propagated from one node to another. The most general topology is all-to-all where every leader sends its writes to every other leader. Other popular ones are circular and star topology.\n A problem with circular and star topologies is that if one node fails, the path is broken, resulting in some nodes are not connected others.\n Even though all-to-all topologies avoid a single point of failure, they can also have issues that some replications are faster and can overtake others. A technique called version vectors can be used to order these events correctly.\n Leaderless replication: client writes to several replicas or a coordinator node does this on behalf of the client. A failover does not exist in a leaderless replication. If a node is down, client writes to all available replicas in parallel, verify if they\u2019re successful and simply ignore the one unavailable replica. Read requests are also sent to several nodes in parallel to avoid stale values.\n To ensure all up-to-date data is copied to every replica, two often used mechanisms are read repair (make requests to several nodes in parallel and detect stale values using versioning), anti-entropy process (background process that constantly looks for differences in the data between replicas and copies any missing data from one replica to another).\n If there are n replicas, every write must be confirmed by w nodes to be considered successful, and we must query at least r nodes for each read, as long as w + r &gt; n, we expect to get an up-to-date value when reading, because at least one of the r nodes we\u2019re reading from must be up-to-date. However, there\u2019re still edge cases when stale values are return:\n For multi-datacenter operation, some implementation of leaderless replication keeps all communication between clients and database nodes local to one datacenter, so n describes the number of replicas within one datacenter. Cross-datacenter replication works similarly to multi-leader replication.\n Handling concurrent write conflicts: Last write wins: attach a timestamp to each write, pick the biggest timestamp as the most \u2018recent\u2019, and discard any writes with a lower timestamp.\n Version vectors: For a singple replica, the algorithm works as follow: A server maintains a version number for every key, increments the version number every time that key is written, and stores the new version number along with the value written.\n A client must read a key before writing. When a client writes a key, it must include the version number from the prior read, and it must merge together all values that it received in the prior read.\n When the server receives a write with a particular version number, it can overwrite all values with that version number or below but it must keep all values with a higher version number.\n For multiple replicas: Each replica increments its own version number when processing a write, and also keeps track of the version numbers it has seen from all of the other replicas.\n Partitioning/sharding. The main reason for partitioning is scalability: partitions can be distributed across many nodes, disks, and so on.\n It is usually combined with replication so that copies of each partitions are stored on multiple nodes.\n The goal of partitioning is to spread the data and query load evenly across nodes.\n Partitioning of key-value data. One way of partitioning is to assign a continuous range of keys to each partition. However, the downside is that certain patterns can lead to high load.\n Another way is to use a hash function to determine the partition for a given key. A downside is the ability to efficiently do range queries as adjacent keys are now scattered across all partitions.\n Partitioning and secondary indexes. Partitioning becomes more complicated if secondary indexes are involved since they don\u2019t identify records uniquely but rather, it\u2019s a way of searching for occurrences of a particular value.\n  With document-based partitioning, each partition maintains its own secondary indexes covering only the documents in that partition. Since it doesn\u2019t care about other partitions, reading from it can be quite expensive since one need to query all partitions and aggregate everything for more exact results.\n With term-based partitioning, rather than each partition having its own secondary index, we can construct a global index that covers data in all partitions. This can make reads more efficient rather than doing scatter/gather over all partitions. The downside is that writes are now slower and more complicated, because a write to a single document may now affect multiple partitions of the index.\n Rebalancing partitions as we increase our nodes and machines over time. Mod N approach is problematic when the number of nodes N changes, most of the keys need to be moved as well.\n A simple solution is to create many more partitions than there are nodes, and assign several partitions to each node. If a new node is added, it can steal a few partitions from every existing node.\n Rebalancing can be done automatically, though it won\u2019t hurt to have a human in the loop to help prevent operational surprises.\n Request routing/service discovery. After the partitioning and rebalancing, how does the client know which node to connection to? Client can talk to any node and forward the request to the appropriate node if needed.\n Client can talk to a routing tier that determines the node that should handle the request and forwards it accordingly.\n Transactions. Atomicity, Consistency, Isolation and Durability (ACID). Since transactions are often composed of multiple statements, atomicity guarantees that each transaction is treated as a single \u201cunit\u201d, which either succeeds completely, or fails completely.\n Consistency ensures that a transaction can only bring the database from one valid state to another, maintaining database invariants.\n  Durability guarantees that once a transaction has been committed, it will remain committed even in the case of a system failure.\n Weak isolation levels. Database hides concurrency issues from application developers by providing transaction isolation, especially serializable isolation, by guaranteeing that have transactions the same effect as if they ran serially, one at a time without any concurrency.\n In practice, serializable isolation has a performance cost and many databases don\u2019t want to pay that price. Instead, they use weaker levels of isolation.\n  Snapshot isolation or Multiversion Concurrency Control (MVCC). Each transaction read from a consistent snapshot of the database. Each transaction sees the latest data from the time it starts.\n Preventing lost update. Lost update can occur if two transations modify the value concurrently that one modification is lost.\n Preventing write skew and phantoms. Write skew is a generalization of lost update. It happens when two transaction update  some of the same objects, not just the same object.\n Phantom happens while a write in one transaction change the result of a search query in another transaction.\n Since multiple objects are involved, atomic single-object or snapshot isolation write doesn\u2019t help as it doesn\u2019t prevent valid conflicting concurrent writes.\n Implementation of serializable isolation. Actual serial execution. The best way to avoid concurrency issue is to execute only one transaction at a time, in serial order, on a single thread.\n The entire transaction is submitted as a stored procedure as the data must be small and fast.\n Two-phase locking (2PL). 2PL has really strong requirements where writers don\u2019t just block writers, readers also block writers and vice versa.\n The big downside is performance as it hasn\u2019t used a lot in practice.\n Serializable snapshot isolation (SSI). As serial isolation doesn\u2019t scale well and 2PL doesn\u2019t perform well, SSI is promising since it provides full serializability and has only a small performance penalty compared to snapshot isolation.\n It allows transactions to proceed without blocking. When a transaction wants to commit, it is checked, and aborted if the execution was not serializable.\n Things that may go wrong in a distributed system. A partial failure is when there are some parts of the system that are broken in some unpredictable ways even though the rest are working fine. And since partial failures are non-deterministic in a sense that your solution might sometimes unpredictably fail, it distributed systems hard to work with.\n Unreliable networks. There are many things could go wrong with a networking request such as your request may have been lost, be waiting in a queue, the remote node may have failed, the response has been lost, delayed, and so on.\n  Timeout is normally a good way to detect a fault. Rather than using a configured constant timeouts, system can automatically adjust timeouts according to the observed response time distribution.\n Unreliable clocks. Time is tricky since communication is not instantaneous, it takes time for a message to travel from one point to another, and because of variable delayed in network with multiple machines are involved, it\u2019s hard to determine the order of operations.\n Modern computers have at least two different kinds of clock: A time-of-day clock, which are usually synchronized with Network Time Protocol (NTP), which means that a timestamp from one machine (ideally) means the same as a timestamp on another machine.\n A monotonic clock is suitable for measuring a duration such as a timeout or a service\u2019s response time.\n Time-of-day clocks need to be set according to an NTP in order to be useful though this isn\u2019t as reliable as we hope as he quartz clock in a computer is\n......", "posttime": "2020-07-06 11:17:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u7a0b\u5e8f,designing,\u5199\u5165", "title": "\u6458\u8981\uff1a\u8bbe\u8ba1\u6570\u636e\u5bc6\u96c6\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f5c\u8005\uff1aMartin Kleppmann", "title_en": "Summary: Designing Data-Intensive Applications by Martin Kleppmann", "transed": 1, "url": "https://hoanhan101.github.io/2020/07/05/design-data-intensive-apps", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u7a0b\u5e8f", "designing", "\u5199\u5165"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010051, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e745\u6708\uff0c\u6211\u51b3\u5b9a\u5f00\u59cb\u627e\u4e00\u4efd\u65b0\u5de5\u4f5c\uff0c\u5e76\u4ece\u53c2\u52a0Triplebyte\u7684\u6d4b\u9a8c\u5f00\u59cb\u3002\u901a\u8fc7\u8fd9\u4e00\u5173\u540e\uff0c\u6211\u5728\u63a5\u4e0b\u6765\u7684\u4e09\u4e2a\u6708\u91cc\u7ecf\u5386\u4e86\u4ed6\u4eec\u5269\u4e0b\u7684\u8fc7\u7a0b\uff0c\u4ece\u4e24\u4e2a\u5c0f\u65f6\u7684\u8fdc\u7a0b\u9762\u8bd5\u4e00\u76f4\u5230\u4e0e\u6211\u9009\u62e9\u7684\u516c\u53f8\u7684\u6700\u7ec8\u8c08\u5224\u3002\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4ed6\u4eec\u90fd\u975e\u5e38\u80fd\u5e72\u548c\u4e50\u4e8e\u52a9\u4eba\uff0c\u6700\u540e\u6211\u53ea\u80fd\u5bf9\u4ed6\u4eec\u8bf4\u4e9b\u597d\u8bdd\u3002\u4ed6\u4eec\u8ba9\u6574\u4e2a\u8fc7\u7a0b\u975e\u5e38\u987a\u5229\uff0c\u56de\u7b54\u4e86\u6211\u6240\u6709\u7684\u95ee\u9898\uff0c\u5e76\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u7ed9\u4e86\u6211\u5f88\u591a\u5efa\u8bae\uff0c\u4ed6\u4eec\u7684\u7b5b\u9009\u8fc7\u7a0b\u4e0d\u4ec5\u4ece\u6211\u7684\u89d2\u5ea6\u6765\u770b\u5f88\u68d2\uff0c\u800c\u4e14\u8ba9\u6211\u5bf9\u4ed6\u4eec\u6240\u6709\u5019\u9009\u4eba\u7684\u8d28\u91cf\u90fd\u6709\u4fe1\u5fc3\u3002\n\u7136\u540e\uff0c\u4e00\u4e2a\u591a\u6708\u524d\uff0c\u6211\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5ba3\u5e03\u5373\u5c06\u63a8\u51faTriplebyte\u65b0\u7684\u516c\u5f00\u8d44\u6599\u3002\u6211\u89c9\u5f97\u8fd9\u662f\u4e2a\u4e0d\u9519\u7684\u4e3b\u610f\uff0c\u5e76\u8bb0\u4e0b\u4e0b\u6b21\u6211\u5f00\u59cb\u627e\u5de5\u4f5c\u65f6\u5e94\u8be5\u6253\u5f00\u6211\u7684\u3002\u7136\u540e\u6709\u4eba\u5728\u9ed1\u5ba2\u65b0\u95fb\u4e0a\u53d1\u5e03\u4e86\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u6307\u51fa\u7535\u5b50\u90ae\u4ef6\u4e2d\u95f4\u9690\u85cf\u7740\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8fd9\u4e9b\u65b0\u7684\u4e2a\u4eba\u8d44\u6599\u5c06\u88ab\u9009\u62e9\u9000\u51fa\uff0c\u9664\u975e\u6211\u5728\u4e0b\u5468\u5173\u95ed\u5b83\uff0c\u5426\u5219\u6211\u7684\u4e2a\u4eba\u8d44\u6599\u5c06\u4f1a\u516c\u4e4b\u4e8e\u4f17\u3002\u8fd9\u5f15\u8d77\u4e86\u8f69\u7136\u5927\u6ce2\uff0cTriplebyte\u9996\u5e2d\u6267\u884c\u5b98\u963f\u8499\u5b8c\u5168\u66f2\u89e3\u4e86\u8fd9\u4e00\u70b9\uff0c\u4ed6\u53d1\u5e03\u4e86\u4e00\u7cfb\u5217\u717d\u52a8\u6027\u7684\u8bc4\u8bba\uff0c\u8bef\u89e3\u4e86\u4eba\u4eec\u5728\u6d88\u5931\u4e4b\u524d\u7684\u4e0d\u5b89\u4e4b\u5904\u3002\u51e0\u5929\u540e\uff0c\u4ed6\u5e26\u7740\u4e00\u5c01\u975e\u5e38\u62b1\u6b49\u7684\u7535\u5b50\u90ae\u4ef6\u56de\u6765\uff0c\u89e3\u91ca\u8bf4\u4ed6\u4eec\u7ec8\u7a76\u4e0d\u4f1a\u5b9e\u65bd\u8fd9\u9879\u8ba1\u5212\uff0c\u5c3d\u7ba1\u4eba\u4eec\u7684\u53cd\u5e94\u8912\u8d2c\u4e0d\u4e00\uff0c\u5f88\u591a\u4eba\u62c5\u5fc3\u8fd9\u4e2a\u60f3\u6cd5\u6839\u672c\u5c31\u6ca1\u6709\u88ab\u8003\u8651\u8fc7\u3002\n\u5728\u8fd9\u4e00\u5207\u4e2d\uff0c\u6211\u901a\u8fc7Triplebyte\u9690\u79c1\u4e2d\u5fc3\u63d0\u4ea4\u4e86\u4e0b\u8f7d\u6211\u7684\u6570\u636e\u7684\u8bf7\u6c42\u3002(\u6211\u8003\u8651\u8fc7\u5220\u9664\u6211\u7684\u8d26\u6237\uff0c\u4f46\u51b3\u5b9a\u5728\u4e8b\u60c5\u5e73\u606f\u4e4b\u524d\uff0c\u6682\u4e14\u4e0d\u8003\u8651\u4ed6\u4eec\u3002)\u3002\u5728\u901a\u8fc7\u70b9\u51fb\u7535\u5b50\u90ae\u4ef6\u94fe\u63a5\u6279\u51c6\u8bf7\u6c42\u540e\uff0c\u6211\u88ab\u544a\u77e5\u53ef\u80fd\u9700\u898130\u5929\u624d\u80fd\u5b8c\u6210\u6211\u7684\u8bf7\u6c42\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u7b49\u5f85\u3002\u51e0\u4e2a\u661f\u671f\u8fc7\u53bb\u4e86\uff0c\u6211\u8ba4\u4e3a\u7a81\u7136\u6d8c\u5165\u7684\u8bf7\u6c42\u4e00\u5b9a\u8ba9\u8d1f\u8d23\u4ece\u5b58\u50a8\u6570\u636e\u7684\u6240\u6709\u7cfb\u7edf\u6536\u96c6\u6570\u636e\u7684\u4eba\u4e0d\u582a\u91cd\u8d1f\u3002\n\u7136\u540e\uff0c\u5728\u6211\u7b2c\u4e00\u6b21\u63d0\u4ea4\u8bf7\u6c4236\u5929\u540e\uff0c\u6211\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u901a\u77e5\u6211\u6211\u7684\u6570\u636e\u73b0\u5728\u53ef\u4ee5\u4e0b\u8f7d\u4e86\u3002\u6211\u70b9\u51fb\u4e86\u7535\u5b50\u90ae\u4ef6\u4e2d\u7684\u94fe\u63a5\uff0c\u7136\u540e\u662f\u4e0b\u4e00\u9875\u7684\u53e6\u4e00\u4e2a\u94fe\u63a5\uff0c\u6700\u540e\u6211\u5f97\u5230\u4e86-\u3002\n\u5947\u602a\u7684\u662f\uff0c\u6211\u60f3\uff0c\u5bf9\u4e8e\u8fd9\u4e48\u5c11\u7684\u6570\u636e\u6765\u8bf4\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u975e\u5e38\u957f\u7684\u65f6\u95f4\u3002(\u5b9e\u9645\u4e0a\uff0c\u6bcf\u5929\u53ea\u670981\u4e2a\u5b57\u8282\u591a\u4e00\u70b9\uff0c\u5c3d\u7ba1\u6211\u610f\u8bc6\u5230\u8fd9\u662f\u4e00\u4e2a\u611a\u8822\u7684\u6307\u6807\u3002)\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u77e5\u9053\u4ed6\u4eec\u6ca1\u6709\u5728\u6211\u80cc\u540e\u6536\u96c6\u5927\u91cf\u5173\u4e8e\u6211\u7684\u6570\u636e\uff0c\u6211\u8fd8\u662f\u677e\u4e86\u4e00\u53e3\u6c14\u3002\u6d4f\u89c8\u4e00\u4e0b\u7f29\u5c0f\u7684\u6570\u636e\uff0c\u4ed6\u4eec\u4f3c\u4e4e\u53ea\u6709\u6211\u7684\u5730\u5740\uff0c\u6211\u7ed9\u4ed6\u4eec\u7684\u4e00\u4e9b\u5173\u4e8e\u6211\u8fc7\u53bb\u7684\u5de5\u4f5c\u548c\u9996\u9009\u8bed\u8a00\u7684\u4fe1\u606f\uff0c\u4ee5\u53ca\u51e0\u4e2a\u6700\u8fd1\u7684IP\u5730\u5740\u3002\u4ed6\u4eec\u4f3c\u4e4e\u6839\u672c\u6ca1\u6709\u628a\u6211\u627e\u5de5\u4f5c\u7684\u4efb\u4f55\u4fe1\u606f\u544a\u8bc9\u4ed6\u4eec\u3002\n\u7136\u540e\uff0c\u6211\u5728JSON\u67e5\u770b\u5668\u4e2d\u6253\u5f00\u8be5\u6587\u4ef6\uff0c\u5e76\u9010\u6e10\u610f\u8bc6\u5230\uff1a\u8fd9\u5e76\u4e0d\u662f\u4ed6\u4eec\u62e5\u6709\u7684\u5168\u90e8\u4fe1\u606f\u3002\u8fd9\u751a\u81f3\u4e0d\u662f\u4ed6\u4eec\u613f\u610f\u627f\u8ba4\u81ea\u5df1\u62e5\u6709\u7684\u6240\u6709\u4fe1\u606f-\u5b83\u9057\u6f0f\u4e86\u4e00\u4e9b\u660e\u663e\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u6559\u80b2\u548c\u5de5\u4f5c\u7ecf\u5386\u5bf9\u8c61\u4e0a\u7684\u6587\u5b57\u63cf\u8ff0\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5728\u6211\u7684\u4e2a\u4eba\u8d44\u6599\u9875\u9762\u4e0a\u7684\u663e\u773c\u4f4d\u7f6e\u663e\u793a\u51fa\u6765\u3002\u636e\u6211\u6240\u77e5\uff0c\u6211\u5f97\u5230\u7684\u53ea\u662f\u4e00\u79cd\u8349\u7387\u7684\u5c1d\u8bd5\uff0c\u8bd5\u56fe\u8ba9\u5b83\u770b\u8d77\u6765\u50cf\u662f\u4ed6\u4eec\u7ed9\u4e86\u6211\u60f3\u8981\u7684\u4e1c\u897f\u3002\n\u8fd9\u5f15\u53d1\u4e86\u6211\u5bf9Triplebyte\u7684\u4e25\u91cd\u62c5\u5fe7\uff0c\u751a\u81f3\u6bd4\u4ed6\u4eec\u9ed8\u8ba4\u516c\u5f00\u4e2a\u4eba\u8d44\u6599\u7684\u8ba1\u5212\u66f4\u4ee4\u4eba\u62c5\u5fe7\uff0c\u800c\u8fd9\u4e00\u5207\u90fd\u662f\u7531\u4ed6\u4eec\u53d1\u8d77\u7684\u3002\u8fd9\u5f88\u53ef\u80fd\u662f\u7531\u4e8e\u8fc7\u4e8e\u70ed\u60c5\u7684\u5929\u771f\u800c\u751f\u7684\uff0c\u5728\u53d7\u5230\u516c\u4f17\u8bc4\u8bba\u540e\u5f88\u5feb\u5c31\u88ab\u64a4\u9500\u4e86\u3002\u7136\u800c\uff0c\u5728\u90a3\u6b21\u60e8\u8d25\u4e4b\u540e\uff0c\u6211\u672c\u4ee5\u4e3a\u4ed6\u4eec\u4f1a\u52a0\u500d\u52aa\u529b\uff0c\u786e\u4fdd\u4ed6\u4eec\u8ba4\u771f\u5bf9\u5f85\u9690\u79c1\u3002\u4ed6\u4eec\u5728\u7ed9\u6211\u53d1\u9001\u8fd9\u4e9b\u6570\u636e\u4e4b\u524d\u6709\u4e00\u4e2a\u591a\u6708\u7684\u65f6\u95f4\u6765\u4fee\u590d\u7cfb\u7edf\u7684\u4efb\u4f55\u95ee\u9898\uff0c\u76f8\u53cd\uff0c\u4ed6\u4eec\u7ed9\u6211\u53d1\u9001\u4e86\u4e00\u4e9b\u8349\u7387\u7684\u5c1d\u8bd5\uff0c\u4e5f\u8bb8\u662f\u4e3a\u4e86\u8ba9\u6211\u95fb\u4e00\u95fb\u6211\u7684\u6570\u636e\u3002\nTriplebyte(\u5c31\u50cf\u4ed6\u4eec\u5728\u9690\u79c1\u4e2d\u5fc3\u89e3\u91ca\u7684\u90a3\u6837)\u201c\u975e\u5e38\u5173\u5fc3\u4f60\u7684\u4e2a\u4eba\u4fe1\u606f\u662f\u5982\u4f55\u88ab\u4f7f\u7528\u548c\u5171\u4eab\u7684\u201d\uff0c\u4f46\u663e\u7136\u4e0d\u8db3\u4ee5\u5728\u4f60\u63d0\u51fa\u8981\u6c42\u65f6\u771f\u6b63\u6295\u5165\u7cbe\u529b\u53bb\u6b63\u786e\u5904\u7406\u8fd9\u4e9b\u4fe1\u606f\u3002\n(\u6211\u5df2\u7ecf\u7ed9\u4ed6\u4eec\u53d1\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u8be2\u95ee\u5176\u4f59\u7684\u6570\u636e\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u5f53\u6211\u5f97\u5230\u56de\u5e94\u65f6\uff0c\u6211\u4f1a\u66f4\u65b0\u8fd9\u7bc7\u5e16\u5b50\u3002\u7531\u4e8e\u73b0\u5728\u662f\u5468\u672b\uff0c\u6211\u53ef\u80fd\u8981\u8fc7\u51e0\u5929\u624d\u80fd\u6536\u5230\u56de\u97f3\u3002)\u3002\n\u00a9\u7248\u6743\u6240\u67092013-2020 Wolfgang Faust\u00b7\u4ee3\u7801\u7247\u6bb5\u516c\u5171\u9886\u57df/CC0\u00b7\u6240\u6709\u5176\u4ed6\u5185\u5bb9\u7531Hugo\u652f\u6301\u7684CC-by-SA\u00b7\u57fa\u4e8eStart Bootstrap\u7684\u6e05\u6d01\u535a\u5ba2\u4e3b\u9898", "note_en": "In May of last year I decided to start looking for a new job, and started by taking  Triplebyte\u2019s quiz. Having passed that, I spent the next three months going through the rest of their process, from a  two-hour remote interview all the way through to final negotiations with the company whose offer I selected. Throughout the process they were extremely competent and helpful, and at the end of it all I had only good things to say about them. They made the whole process go extremely smoothly, answered all the questions I had and gave me a ton of advice on the whole process, and their screening process was not only great from the my perspective but also gave me confidence in the quality of all their candidates.\n Then, a little over a month ago, I got an email announcing the upcoming launch of Triplebyte\u2019s new public profiles. I thought they were was a neat idea, and made a note that I should turn mine on next time I started a job hunt. Then someone  posted the email on Hacker News, pointing out that buried in the middle of the email was the fact that these new profiles were going to be opt- out, and unless I turned it off in the next week my profile would become public. This understandably caused an uproar, which the Triplebyte CEO Ammon  completely misinterpreted, posting a series of  inflammatory comments that  misunderstood what people were upset about before vanishing. A few days later he came back with a very apologetic email explaining that they weren\u2019t going to go through with it after all, though it received  mixed reactions, with a lot of people being concerned that the idea had been considered at all.\n In the midst of all this, I submitted a request through the  Triplebyte privacy center to download my data. (I considered deleting my account, but decided to give them the benefit of the doubt until things settled down.) After approving the request by clicking an email link, I was informed that it might take up to 30 days to complete my request, so I settled down to wait. As the weeks passed, I thought that the sudden influx of requests must have overwhelmed whoever was responsible for gathering the data from all the systems it was stored in.\n Then, 36 days after I first submitted the request, I got an email informing me that my data was now ready to be downloaded. I clicked the link in the email, and then another link on the next page, and finally I got\u2014\n  Odd, I thought,  that seems like an awfully long time for so little data. (It\u2019s just over 81 bytes per day, in fact, though I realize that\u2019s a silly metric.) Still, I was relieved to know that they hadn\u2019t been gathering reams of data about me behind my back. Scanning over the minified data, it looked like all they had was my address, some information I\u2019d given them about my past jobs and preferred languages, and a couple of recent IP addresses. Seemingly they hadn\u2019t even kept any information at all about my job search with them.\n Then I opened up the file in a JSON viewer and gradually realized:  this was not all the information they had. It wasn\u2019t even all of the information they were  willing to admit they had\u2014it was missing some obvious things, like the text descriptions on the  education and  work experience objects, which were prominently displayed on my profile page. As far as I can tell, all I got was a sloppy attempt at making it look at a casual glance like they\u2019d given me what I asked for.\n This raises serious concerns for me about Triplebyte, even more so than their plan to make profiles public by default, which started this all. That may well have been born of overenthusiastic na\u00efvit\u00e9, and was quickly rescinded after being exposed to public comment. After that fiasco, though, I would have expected them to double down on making sure that they were taking privacy seriously. They had over a month before sending me this data to fix any issues with the system, and instead they sent me some slapdash attempt at maybe giving me a whiff of my data.\n Triplebyte (as they explain in their privacy center) \u201ccare deeply about how your personal information is used and shared,\u201d but apparently not enough to actually put effort into getting it right when you ask for it.\n (I\u2019ve sent them an email asking what happened to the rest of the data, and will update this post when I get a response. As it\u2019s the weekend I may not hear back for a few days.)\n    \u00a9opyright 2013\u20132020 Wolfgang Faust\t\t\t\t\t\t\u2022\t\t\t\t\t\tCode snippets  Public Domain/CC0\t\t\t\t\t\t\u2022 All other content  CC-BY-SA  \t\t\t\t\t\tPowered by  Hugo\t\t\t\t\t\t\u2022 Theme based on\t\t\t\t\t\t Clean Blog\t\t\t\t\t\tby Start Bootstrap", "posttime": "2020-07-06 11:16:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0b\u8f7d,\u6570\u636e,data", "title": "Triplebyte\u6570\u636e\u4e0b\u8f7d\u4e0d\u4f1a\u4e3a\u60a8\u63d0\u4f9b\u6240\u6709\u6570\u636e", "title_en": "The Triplebyte data download doesn\u2019t give you all your data", "transed": 1, "url": "https://www.linestarve.com/blog/post/triplebyte-data-download/", "via": "", "real_tags": ["\u4e0b\u8f7d", "\u6570\u636e", "data"]}, {"category": "", "categoryclass": "", "imagename": "8e22f9619a6ca74eef9c47c449199d1e.jpeg", "infoid": 1010050, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Elements\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u7ec6\u7c92\u5ea6\u3001\u4e0e\u5206\u8fa8\u7387\u65e0\u5173\u7684\u6a21\u5757\u5316GUI\u5e93\u3002Elements\u5728\u8bbe\u8ba1\u65f6\u7262\u8bb0\u4ee5\u4e0b\u8981\u6c42\uff1a\n\u5b83\u5e94\u8be5\u53ef\u4ee5\u5728\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\uff0c\u5e76\u4e14\u5e94\u8be5\u80fd\u591f\u5f88\u597d\u5730\u4e0e\u5176\u4ed6GUI\u5e93\u548c\u6846\u67b6\u914d\u5408\u4f7f\u7528\u3002\n\u7b2c\u4e8c\u4e2a\u8981\u6c42\u7684\u63a8\u8bba\u662f\uff0c\u5b83\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5f00\u53d1\u63d2\u4ef6\u3002\u5b83\u4e0d\u5e94\u8be5\u62e5\u6709\u4e8b\u4ef6\u5faa\u73af\uff0c\u5e76\u4e14\u5e94\u8be5\u80fd\u591f\u4e0e\u63d2\u4ef6\u4e3b\u673a(\u5982VST\u548cAU)\u4e2d\u7684\u7ec4\u4ef6\u5171\u5b58\u3002\n\u5b83\u5e94\u8be5\u6709\u4e00\u4e2a\u4f7f\u7528\u73b0\u4ee3C++\u7684\u58f0\u660e\u6027API\u3002\u58f0\u660e\u6027C++\u4ee3\u7801\u544a\u8bc9\u60a8\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u5982\u4f55(\u547d\u4ee4\u6027)\u3002GUI\u5e94\u8be5\u7528C++\u4ee3\u7801\u58f0\u660e\u3002\n\u5143\u7d20\uff0c\u662f\u6781\u5176\u8f7b\u91cf\u7ea7\u7684\u2026\u3002\u800c\u4e14\u662f\u6a21\u5757\u5316\u7684\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5f3a\u8c03\u91cd\u7528\u7684\u8bf4\u660e\u6027\u63a5\u53e3\u6765\u7ec4\u5408\u975e\u5e38\u7ec6\u7c92\u5ea6\u7684\u3001\u8f7b\u91cf\u7ea7\u7684\u201c\u5143\u7d20\u201d\uff0c\u4ee5\u5f62\u6210\u6df1\u5c42\u7684\u5143\u7d20\u5c42\u6b21\u7ed3\u6784\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5143\u7d20\u4ecd\u5728\u4e0d\u65ad\u53d8\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u79bb\u7248\u672c1.0\u8d8a\u6765\u8d8a\u8fd1\u3002API\u548c\u4ee3\u7801\u4ecd\u5728\u4e0d\u65ad\u53d8\u5316\uff0c\u56e0\u6b64\uff0c\u5143\u7d20\u8fd8\u6ca1\u6709\u505a\u597d\u751f\u4ea7\u51c6\u5907\u3002\u4f46\u8fd9\u4e0d\u5e94\u963b\u6b62\u60a8\u73b0\u5728\u4f7f\u7528\u5143\u7d20\uff01\u5b83\u5df2\u7ecf\u662f\u4e00\u79cd\u975e\u5e38\u53ef\u7528\u7684\u5f62\u5f0f\uff0c\u5f53\u62a5\u544a\u548c\u4fee\u590d\u9519\u8bef\u65f6\uff0c\u66f4\u591a\u7684\u4eba\u4f7f\u7528\u5b83\u6700\u7ec8\u4f1a\u4f7f\u5b83\u53d8\u5f97\u66f4\u5065\u58ee\u3002API\u548c\u53ef\u7528\u6027\u5f88\u91cd\u8981\uff0c\u6211\u975e\u5e38\u6b22\u8fce\u60a8\u7684\u5efa\u8bae\u548c\u8d21\u732e\u3002\u563f\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff01\u5982\u679c\u4f60\u559c\u6b22\u5143\u7d20\u80cc\u540e\u7684\u8bbe\u8ba1\u3001\u6982\u5ff5\u548c\u60f3\u6cd5\uff0c\u6211\u975e\u5e38\u6b22\u8fce\u5408\u4f5c\u3002\n2020\u5e746\u670822\u65e5\uff1a\u53d6\u6d88\u5bf9Boost\u7684\u4f9d\u8d56\u3002\u8fd9\u9700\u8981\u4f7f\u7528\u989d\u5916\u7684\u53c2\u6570\u5bf9\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u4e00\u4e9bAPI\u66f4\u6539\u3002\u8bf7\u53c2\u89c1\u793a\u4f8b\u3002\n2020\u5e745\u670826\u65e5\uff1a\u4ecb\u7ecd\u827a\u672f\u5bb62D CanvasLibrary\u3002Artist\u5e93\u5c06\u6700\u7ec8\u53d6\u4ee3Element\u7684\u4e8c\u7ef4\u753b\u5e03\u5b9e\u73b0\u3002\n\u4e54\u5c14\u572880\u5e74\u4ee3\u8fdb\u5165\u7535\u5b50\u548c\u7f16\u7a0b\u9886\u57df\uff0c\u56e0\u4e3a\u4ed6\u7684\u521d\u604b\u97f3\u4e50\u51e0\u4e4e\u6240\u6709\u7684\u4e1c\u897f\u90fd\u5728\u7535\u5b50\u5316\u548c\u6570\u5b57\u5316\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u4ed6\u5c31\u5236\u9020\u81ea\u5df1\u7684\u5409\u4ed6\u3001\u6548\u679c\u76d2\u548c\u5408\u6210\u5668\u3002\u4ed6\u559c\u6b22\u5f39\u5931\u771f\u7684\u6447\u6eda\u5409\u4ed6\uff0c\u5728\u5bb6\u91cc\u7684\u5f55\u97f3\u68da\u91cc\u521b\u4f5c\u548c\u5236\u4f5c\u81ea\u5df1\u7684\u97f3\u4e50\u3002\n\u4e54\u5c14\u00b7\u5fb7\u00b7\u53e4\u5179\u66fc(Joel De Guzman)\u662fCycfiResearch\u7684\u9996\u5e2d\u67b6\u6784\u5e08\u548c\u5de5\u7a0b\u5e08\uff0c\u4e5f\u662fCiereConsulting\u7684\u987e\u95ee\u3002\u4ed6\u662f\u4e00\u540d\u4e13\u95e8\u7814\u7a76\u9ad8\u7ea7C++\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u4e5f\u662f\u5f00\u653e\u6e90\u7801\u7684\u5021\u5bfc\u8005\u3002\u4ed6\u64b0\u5199\u4e86\u8bb8\u591a\u975e\u5e38\u6210\u529f\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u5982Boost.spirity\u3001Boost.Phoenix\u548cBoost.Fusion\u3002\u8fd9\u4e9b\u5e93\u90fd\u662fBoost Library\u7684\u4e00\u90e8\u5206\uff0cBoost Library\u662f\u4e00\u4e2a\u5907\u53d7\u5c0a\u656c\u3001\u7ecf\u8fc7\u540c\u884c\u8bc4\u5ba1\u3001\u5f00\u653e\u6e90\u7801\u7684\u534f\u4f5c\u5f00\u53d1\u9879\u76ee\u3002", "note_en": "Elements is a lightweight, fine-grained, resolution independent, modular GUI library. Elements is designed with these requirements in mind:\n It should be usable in any application and should play well with other GUIlibraries and frameworks.\n Corollary to the second requirement is that it can also be used to developplugins. It should not own the event loop and should be able to co-existwith components within a plugin host such as VST and AU.\n   It should have a declarative API using modern C++. Declarative C++ codetells you  what rather than  how (imperative). The GUI should bedeclared in C++ code.\n Elements, is extremely lightweight\u2026 and modular. You compose veryfine-grained, flyweight \u201celements\u201d to form deep element hierarchies using adeclarative interface with heavy emphasis on reuse.\n  Please take note that Elements is still very much in flux as we are inchingcloser towards a version 1.0 release. The API and code is still undergoingcontinuous changes, and for that matter, Elements is not yet &#34;productionready&#34;. But that should not prevent you from using Elements now! It isalready in a very usable form, and more people using it will ultimately makeit more robust when bugs are reported and fixed. API and usability mattersand I very much welcome suggestions and contributions. Hey, this is an opensource project! If you like the design, concepts and ideas behind Elements, Ivery much welcome collaboration.\n  22 June 2020: Removed dependency on Boost. This requires some API changes tothe  app with additional arguments. See examples.\n 26 May 2020: Introducing the  Artist 2D CanvasLibrary. The Artist library willeventually replace Element&#39;s 2d canvas implementation.\n     Joel got into electronics and programming in the 80s because almosteverything in music, his first love, is becoming electronic and digital.Since then, he builds his own guitars, effect boxes and synths. He enjoysplaying distortion-laden rock guitar, composes and produces his own music inhis home studio.\n Joel de Guzman is the principal architect and engineer at  CycfiResearch and a consultant at  CiereConsulting. He is a software engineer specializing inadvanced C++ and an advocate of Open Source. He has authored a number ofhighly successful Open Source projects such as Boost.Spirit, Boost.Phoenix and Boost.Fusion. These libraries are all part ofthe  Boost Libraries, a well respected,peer-reviewed, Open Source, collaborative development effort.", "posttime": "2020-07-06 10:23:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "c++", "title": "\u5143\u7d20C++GUI\u5e93", "title_en": "Elements C++ GUI Library", "transed": 1, "url": "https://github.com/cycfi/elements", "via": "", "real_tags": ["c++"]}, {"category": "", "categoryclass": "", "imagename": "be9806c1f47f28c8b95391d16c495a26.png", "infoid": 1010049, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba1\u7b97\u548c\u6bd4\u8f83\u4f60\u5b9e\u9645\u80fd\u62ff\u5230\u591a\u5c11\u94b1\u3002\u901a\u8fc7\u5c06\u516c\u53f8\u589e\u957f\u3001\u6536\u76ca\u7b49\u56e0\u7d20\u8003\u8651\u5728\u5185\uff0c\u4e86\u89e3\u60a8\u63d0\u4f9b\u7684\u670d\u52a1\u7684\u5168\u90e8\u4ef7\u503c\u3002", "note_en": "Calculate and compare how much you'll actually get paid. Understand the complete value of your offer by factoring in company growth, benefits, and more.", "posttime": "2020-07-06 10:04:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u85aa\u916c,compensation,\u62ff\u5230", "title": "4\u5e74\u85aa\u916c\u65b9\u6848\u6bd4\u8f83", "title_en": "4 Year Compensation Packages Comparison", "transed": 1, "url": "https://www.levels.fyi/calculator/?co=Facebook&bs=160000&sg=350000&sbone=20000&bp=10&gr=10&co-2=Square&bs-2=145000&sg-2=275000&gr-2=48", "via": "", "real_tags": ["\u85aa\u916c", "\u62ff\u5230"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010045, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e00\u90e8\u5206\u53ef\u80fd\u53ea\u662f\u6211\u7684\u8ffd\u9010\uff0c\u4f46\u6211\u89c9\u5f97\u5373\u4f7f\u662f\u4e00\u5bb6\u521d\u521b\u91cf\u5316\u57fa\u91d1\u4e5f\u9700\u8981\u4e00\u4e2a\u8ba1\u7b97\u96c6\u7fa4\u3002\u6211\u751a\u81f3\u66fe\u7ecf\u542c\u8fc7\u4e00\u4e2a\u7b11\u8bdd\uff0c\u8bf4\u4efb\u4f55\u6709\u81ea\u5c0a\u7684Quant\u90fd\u5e94\u8be5\u80fd\u591f\u6269\u5c55\u4ed6\u4eec\u7684\u8ba1\u7b97\u9700\u6c42\uff0c\u4ee5\u586b\u6ee1\u4efb\u610f\u6570\u91cf\u7684\u670d\u52a1\u5668\u3002\u6211\u521a\u521a\u6784\u5efa\u7684\u96c6\u7fa4\u662f\u4e00\u4e2a\u4f4e\u9884\u7b97\u7684\u65e7\u96c6\u7fa4\uff0c\u7531\u4e00\u5806\u6742\u4e71\u65e0\u7ae0\u7684\u5269\u4f59\u548c\u7ffb\u65b0\u7684\u670d\u52a1\u5668\u7ec4\u6210\uff0c\u5e76\u4e0eeBay\u4e0a\u7684\u90e8\u5206\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u4f46\u6211\u5bf9\u6b64\u611f\u5230\u975e\u5e38\u81ea\u8c6a\uff01\n\u65b0\u670d\u52a1\u5668\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u800c\u5b9e\u9645\u7684CPU\u6210\u672c\u53ea\u5360\u6210\u672c\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u8fd9\u4e9b\u670d\u52a1\u5668\u662f\u4e3a\u4e0d\u80fd\u5bb9\u5fcd\u505c\u673a\u7684\u4f7f\u7528\u60c5\u5f62\u800c\u8bbe\u8ba1\u7684\uff0c\u7ba1\u7406\u5458\u5728\u8fdc\u7a0b\uff0c\u6240\u6709\u786c\u4ef6\u751a\u81f3\u8f6f\u4ef6\u90fd\u5fc5\u987b\u7531\u67d0\u4e9b\u7b7e\u8ba2\u6602\u8d35\u5408\u540c\u7684\u516c\u53f8\u63d0\u4f9b\u652f\u6301\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6211\u7684\u96c6\u7fa4\u53ea\u8bbe\u8ba1\u7528\u4e8e\u7814\u7a76\u3002\u505c\u673a\u662f\u53ef\u4ee5\u7684\uff0c\u53ea\u8981\u6ca1\u6709\u6570\u636e\u4e22\u5931\uff0c\u5e76\u4e14\u6211\u53ef\u4ee5\u8f7b\u677e\u5730\u91cd\u65b0\u542f\u52a8\u548c\u8fd0\u884c\u3002\u56e0\u6b64\uff0c\u6211\u7684\u91cd\u70b9\u53ea\u662f\u5728\u6709\u9650\u7684\u9884\u7b97\u4e0b\u6700\u5927\u5316\u6027\u80fd\u3002\u6211\u6b63\u5728\u9488\u5bf9\u6bcf\u7f8e\u5143\u7684\u8ba1\u7b97\u8fdb\u884c\u4f18\u5316\u3002(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u6211\u53d1\u73b0PassMark CPU\u6807\u8bb0\u53ef\u4ee5\u51c6\u786e\u5730\u53cd\u6620\u6bcf\u4e2aCPU\u5904\u7406\u6211\u7684\u5de5\u4f5c\u8d1f\u8f7d\u7684\u80fd\u529b\u3002)\u3002\u8d2d\u4e70\u7ffb\u65b0\u7684\u4f01\u4e1a\u7ea7\u8bbe\u5907\u6709\u4e00\u79cd\u803b\u8fb1\uff0c\u6211\u4e0d\u660e\u767d\u3002\u4e09\u5e74\u524d\u552e\u4ef725000\u7f8e\u5143\u7684\u57fa\u672c\u8ba1\u7b97\u670d\u52a1\u5668\u73b0\u5728\u53ea\u9700250\u4e07\u7f8e\u5143\uff0c\u5728metservers.com\u6216stalliontek.com\u7b49\u7f51\u7ad9\u8fdb\u884c\u7ffb\u65b0\u3002\u8fd9\u4e24\u5bb6\u516c\u53f8\u4e5f\u90fd\u63d0\u4f9b\u4fdd\u4fee\u3002\u66f4\u597d\u7684\u662f\uff0c\u8fd9\u4e9b\u662f\u5df2\u7ecf\u5b58\u5728\u7684\u771f\u6b63\u7684\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u7acb\u5373\u53d1\u8d27\u7ed9\u60a8\uff0c\u800c\u4e0d\u662f\u56e0\u4e3a\u4e16\u754c\u8303\u56f4\u5185\u7684\u5185\u5b58\u77ed\u7f3a\u7b49\u95ee\u9898\u800c\u7b49\u5f85\u6570\u6708\u7684\u65b0\u670d\u52a1\u5668\u3002\u65b0\u7684Mellanox 100GbE InfiniBand\u5361\u6bcf\u5f20\u552e\u4ef7795\u7f8e\u5143\uff0c\u4f46\u5728\u6613\u8da3\u4e0a\uff0c56GbE\u5361\u6bcf\u5f2040\u7f8e\u5143\u5c31\u53ef\u4ee5\u4e70\u5230\u3002\n\u5185\u5b58\u786e\u5b9e\u4f1a\u63a8\u9ad8\u670d\u52a1\u5668\u7684\u6210\u672c\uff0c\u4f7f\u4ef7\u683c\u7ffb\u4e00\u756a\u6216\u4e09\u500d\u3002\u6211\u4e0d\u8ba4\u4e3a\u5728RAM\u4e0a\u52a0\u8f7d\u5728\u89c4\u6a21\u4e0a\u662f\u5212\u7b97\u7684\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u63a8\u8350NVMe\u9a71\u52a8\u5668\u4f5c\u4e3a\u4e00\u79cd\u8d1f\u62c5\u5f97\u8d77\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u7ffb\u65b0\u7684Dell R630\u670d\u52a1\u5668\u7684\u5178\u578bRAM\u4e3aDDR4-2133\uff0c\u5e26\u5bbd\u4e3a136 Gbps\u3002\u4e09\u661f970 EVO Plus 2TB NVMe\u786c\u76d8\u7684\u8bfb\u53d6\u901f\u5ea6\u4e3a28Gbps\u3002\u6709\u4e86\u6b63\u786e\u7684\u8f6f\u4ef6\uff0c\u65e7\u7684InfiniBand\u5361\u53ef\u4ee5\u901a\u8fc7\u540c\u65f6\u8bfb\u53d6\u7fa4\u96c6\u4e2d\u5176\u4ed62-3\u4e2a\u673a\u76d2\u4e0a\u7684NVMe\u9a71\u52a8\u5668\u6765\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u517656Gbps\u7684\u5e26\u5bbd\u3002\u5bf9\u4e8e\u6211\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u8fd9\u8db3\u591f\u63a5\u8fd1RAM\u901f\u5ea6\uff0cI/O\u4e0d\u518d\u662f\u74f6\u9888\uff0c\u6211\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u53ea\u5b8c\u6210\u8ba1\u7b97\u3002\n\u6211\u8fd8\u9009\u62e9\u4e86\u96f6\u552eNVMe\u786c\u76d8\u3002\u5b83\u4eec\u7684\u6210\u672c\u8fdc\u8fdc\u4f4e\u4e8e\u4f01\u4e1a\u7ea7NVMe\u9a71\u52a8\u5668\uff0c\u5e76\u4e14\u901f\u5ea6(PCIe Gen 3.0 x4)\u4e0e\u9664\u6700\u65b0\u4f01\u4e1a\u7ea7\u9a71\u52a8\u5668\u4e4b\u5916\u7684\u6240\u6709\u4f01\u4e1a\u7ea7\u9a71\u52a8\u5668\u76f8\u540c\u3002\u4f01\u4e1a\u7ea7\u9a71\u52a8\u5668\u7684\u4f18\u52bf\u5728\u4e8e\u5bff\u547d\u66f4\u957f\uff0c\u4ee5\u6570\u767e\u6216\u6570\u5343TB\u7684\u5199\u5165\u6765\u8861\u91cf)\u3002\u4f46\u662f\u6211\u503e\u5411\u4e8e\u8bfb\u7684\u6bd4\u5199\u7684\u591a\u5f97\u591a\u3002\u53e6\u4e00\u4e2a\u4f18\u52bf\u662f\u4e00\u4e9b\u4f01\u4e1a\u786c\u76d8\u662f\u53cc\u7aef\u53e3\u7684\u3002\u8fd9\u662f\u4e00\u9879\u9ad8\u53ef\u7528\u6027\u529f\u80fd\uff0c\u5141\u8bb8\u4e24\u53f0\u4e3b\u673a\u8bbf\u95ee\u540c\u4e00\u9a71\u52a8\u5668\uff0c\u5728\u4e3b\u673a\u53d1\u751f\u6545\u969c\u65f6\u4fdd\u6301\u8fde\u63a5\u3002\u4f46\u6b63\u5982\u6211\u5df2\u7ecf\u8bf4\u8fc7\u7684\uff0c\u6211\u4e0d\u9700\u8981\u6602\u8d35\u7684\u9ad8\u53ef\u7528\u6027\u529f\u80fd\u3002\n\u62e5\u6709\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u7b80\u5316\u4e86\u7fa4\u96c6\u4e0a\u7684\u7f16\u7801\u3002\u5b83\u8ba9\u4eba\u611f\u89c9\u5c31\u50cf\u5728\u4e00\u53f0\u5927\u673a\u5668\u4e0a\u5de5\u4f5c\u4e00\u6837\u3002\u6bcf\u4e2a\u4f5c\u4e1a\u90fd\u4f7f\u7528\u4f20\u7edf\u7684POSIX\u7cfb\u7edf\u8c03\u7528\u8bfb\u53d6\u548c\u5199\u5165\u672c\u5730\u6302\u8f7d\u7684\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\u3002\n\u5728\u641c\u7d22\u4e86\u6587\u4ef6\u7cfb\u7edf\u8bc4\u8bba\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528MooseFS\u4f5c\u4e3a\u6211\u7684\u5065\u58ee\u5b58\u50a8\u3002\u5b83\u5f88\u5bb9\u6613\u914d\u7f6e\u3002\u5b83\u53ef\u4ee5\u5904\u7406\u6211\u6536\u96c6\u7684\u5404\u79cd\u5927\u5c0f\u7684\u9a71\u52a8\u5668\uff0c\u5e76\u4e14\u5bf9\u9a71\u52a8\u5668\u751a\u81f3\u6574\u4e2a\u670d\u52a1\u5668\u7684\u6545\u969c\u90fd\u5f88\u5065\u58ee\u3002\u5b83\u8fd8\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u76d1\u63a7\u5de5\u5177\u3002\u6211\u5df2\u5c06\u5176\u8bbe\u7f6e\u4e3a\u5c06\u6bcf\u4e2a\u6570\u636e\u5757\u7684\u4e00\u4e2a\u526f\u672c\u5b58\u50a8\u5728SSD\u4e0a\uff0c\u5e76\u5c06\u590d\u5236\u7684\u5757\u5b58\u50a8\u5728\u5e38\u89c4\u65cb\u8f6c\u78c1\u76d8\u4e0a\u3002\u5ba2\u6237\u7aef\u914d\u7f6e\u4e3a\u9996\u9009SSD\u5757\u670d\u52a1\u5668\uff0c\u8fd9\u4f7f\u5f97\u8bfb\u53d6\u901f\u5ea6\u76f8\u5f53\u5feb\u3002\u6ce8\u610f\uff1a\u5757\u670d\u52a1\u5668\u6807\u7b7e\u9002\u7528\u4e8e\u6574\u4e2a\u670d\u52a1\u5668\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u60f3\u660e\u786e\u786e\u5b9a\u4eceSSD\u8bfb\u53d6\u7684\u4f18\u5148\u987a\u5e8f\uff0c\u8bf7\u4e0d\u8981\u5728\u4e00\u53f0\u670d\u52a1\u5668\u4e2d\u6df7\u5408\u4f7f\u7528SSD\u548cHDD\u3002\n\u6211\u8003\u8651\u8fc7\u652f\u4ed8MooseFS Pro\u7684\u8d39\u7528\uff0c\u4f46\u89c9\u5f97\u592a\u8d35\u4e86\u3002\u5bf9\u4e8e\u7248\u672c3.x\u548c4.x\u768420TB\u7ec8\u8eab\u8bb8\u53ef\uff0c\u62a5\u4ef7\u4e3a1,620\u7f8e\u5143\uff0c\u5982\u679c\u662f\u975e\u5546\u4e1a\u7528\u9014\uff0c\u62a5\u4ef7\u4e3a810\u7f8e\u5143\u3002\u83b7\u5f97Pro\u8bb8\u53ef\u8bc1\u7684\u4e3b\u8981\u4e24\u4e2a\u597d\u5904\u662f\uff1a1)\u83b7\u5f97\u591a\u4e2a\u5728\u7ebf\u4e3b\u670d\u52a1\u5668\u7684\u9ad8\u53ef\u7528\u6027\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5143\u65e5\u5fd7\u8bb0\u5f55\u5668\uff1b2)\u83b7\u5f97\u64e6\u9664\u7f16\u7801\uff0c\u4ee5\u4fbf\u66f4\u6709\u6548\u5730\u4f7f\u7528\u5b58\u50a8\u7a7a\u95f4\u3002\u6211\u5bf9\u64e6\u9664\u7f16\u7801\u5f88\u611f\u5174\u8da3\uff0c\u4f46\u5bf9\u4e8e\u6162\u901f\u5b58\u50a8\uff0c\u5927\u78c1\u76d8\u771f\u7684\u5f88\u4fbf\u5b9c\u3002\u56e0\u6b64\uff0c\u5b58\u50a8\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u4e2a\u5b8c\u6574\u526f\u672c\u5e76\u4e0d\u662f\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u4e8b\u3002\n\u4e3a\u4e86\u63d0\u9ad8\u901f\u5ea6\uff0c\u6211\u9009\u62e9\u4e86\u5e26NVMe\u9a71\u52a8\u5668\u7684BeeGFS\u3002BeeGFS\u652f\u6301\u5e26InfiniBand\u7684RDMA(\u8fdc\u7a0b\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee)\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u5728\u4e0d\u6d89\u53caCPU\u7684\u60c5\u51b5\u4e0b\u5728\u673a\u7bb1\u4e4b\u95f4\u79fb\u52a8\u6570\u636e\u3002\u5b83\u975e\u5e38\u5feb\u3002\u5b83\u4e5f\u76f8\u5bf9\u5bb9\u6613\u914d\u7f6e\u3002\u6211\u628a\u5b83\u5f53\u4f5c\u6613\u5931\u6027\u5b58\u50a8\u5668\u6765\u5bf9\u5f85\uff0c\u800c\u4e14\u6211\u6ca1\u6709\u8bbe\u7f6e\u201c\u4f19\u4f34\u955c\u50cf\u201d\u3002\u56e0\u4e3a\u5982\u679c\u6211\u7684\u786c\u4ef6\u51fa\u73b0\u6545\u969c\uff0c\u6211\u4f1a\u4e22\u5931\u6570\u636e\uff0c\u6240\u4ee5\u6211\u7ecf\u5e38\u4e0e\u5065\u58ee\u7684\u5b58\u50a8\u8fdb\u884crsynch\u3002\u6211\u5f88\u5931\u671b\u5730\u53d1\u73b0\uff0c\u5373\u4f7f\u662fPro BeeGFS\u4e5f\u4e0d\u652f\u6301\u64e6\u9664\u7f16\u7801\u3002\u4e0e\u8fd9\u4e9b\u6602\u8d35\u7684NVMe\u9a71\u52a8\u5668\u4e00\u8d77\u4f7f\u7528\u4f1a\u66f4\u6709\u610f\u4e49\u3002H\n\u5bf9\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u975e\u5e38\u590d\u6742\uff0c\u800c\u4e14\u4f9d\u8d56\u4e8e\u5de5\u4f5c\u8d1f\u8f7d\u3002\u4f46\u4e00\u5207\u90fd\u5982\u6211\u6240\u613f\u3002\u6211\u7684\u96c6\u7fa4\u57fa\u672c\u4e0a\u662f\u8d85\u805a\u5408\u7684\uff0c\u5728\u6bcf\u53f0\u670d\u52a1\u5668\u4e0a\u7ec4\u5408\u4e86CPU\u548c\u5b58\u50a8\u3002\u4f46\u662f\uff0c\u6211\u786e\u5b9e\u6709\u4e00\u4e9b\u4ec5\u4f5c\u4e3a\u5ba2\u6237\u7aef/CPU\u7684\u670d\u52a1\u5668\u3002\u5b83\u4eec\u7684\u529f\u7387\u8f83\u5c0f\uff0c\u6240\u4ee5\u6211\u4e00\u76f4\u5173\u95ed\u5b83\u4eec\u7684\u7535\u6e90\uff0c\u76f4\u5230\u9700\u8981\uff0c\u4ee5\u8282\u7701\u80fd\u6e90\u3002\u6211\u5728eBay\u4e0a\u4e70\u4e86\u4e00\u4e2aAPC AP7911A\u673a\u67b6\u5f0fPDU\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u63a7\u5236\u4e0d\u540c\u7aef\u53e3\u7684\u7535\u6e90\u3002\n\u6784\u5efa\u96c6\u7fa4\u975e\u5e38\u6709\u8da3\uff0c\u4ee5\u524d\u7f13\u6162\u7684\u8fc7\u7a0b\u73b0\u5728\u5feb\u5f97\u4ee4\u4eba\u5174\u594b\u3002\u4f46\u6211\u73b0\u5728\u6025\u4e8e\u5f00\u59cb\u771f\u6b63\u7684\u7814\u7a76\uff0c\u4e0d\u8981\u518d\u80e1\u4e71\u6446\u5f04\u57fa\u7840\u8bbe\u65bd\u4e86\u3002\n\u4f5c\u4e3a\u975eHPC\u4eba\u5458\uff0c\u4e86\u89e3InfiniBand\u5e76\u83b7\u5f97\u7f51\u7edc\u529f\u80fd\u662f\u6784\u5efa\u7fa4\u96c6\u6700\u56f0\u96be\u7684\u90e8\u5206\u3002\u6211\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u5927\u91cf\u9605\u8bfb\u548c\u53cd\u590d\u8bd5\u9a8c\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u8ba4\u4e3a\u6709\u5fc5\u8981\u53d1\u5e03\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8bf4\u660e\u6700\u7ec8\u5bf9\u6211\u8d77\u4f5c\u7528\u7684\u662f\u4ec0\u4e48\u3002\u6211\u4e0d\u8ba4\u4e3a\u6211\u80fd\u4ece\u6211\u7684InfiniBand\u7f51\u7edc\u4e2d\u83b7\u5f97\u6240\u6709\u53ef\u80fd\u7684\u4e1c\u897f\uff0c\u4f46\u6211\u4ecd\u7136\u5bf9\u6b64\u611f\u5230\u975e\u5e38\u6ee1\u610f\u3002\n\u6211\u7528\u7684\u662f79DJ3 Mellanox ConnectX-3 CX353A FDR InfiniBand+56GbE/40GbE\u5355QSFP+RDMA\u5361\u3002\u6211\u5728eBay\u4e0a\u8ba2\u8d2d\u7684\u6700\u65b0\u6b3e\u662f35\u7f8e\u5143\u4e00\u4ef6\u3002\u6211\u76f8\u4fe1PCIe\u901a\u9053\u65e0\u6cd5\u5904\u7406\u53cc\u7aef\u53e3\u5361\u7684\u5168\u90e8\u5e26\u5bbd\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u7ee7\u7eed\u4f7f\u7528\u66f4\u7b80\u5355\u7684\u5355\u7aef\u53e3\u5361/\u8bbe\u7f6e\u3002\u6211\u786e\u5b9e\u4e0d\u5f97\u4e0d\u4e3a\u6211\u7684\u51e0\u53f0\u9ad8\u8c03PCIe\u7535\u8111\u8ba2\u8d2d\u66f4\u6362\u652f\u67b6\u3002\n\u6211\u7528\u7684\u662fMellanox MC2207130-0A1 1.5M IB FDR QSFP\u94dc\u7f06\uff0c\u6bcf\u6839\u5927\u7ea620\u7f8e\u5143\u3002\u5149\u7ea4\u7535\u7f06\u66f4\u9002\u5408\u957f\u8ddd\u79bb\u4f7f\u7528\uff0c\u4f46\u8fd9\u4e9b\u65e0\u6e90\u7535\u7f06\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\n\u6709\u4e24\u4e2a\u4ea4\u6362\u673a\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002\u7b2c\u4e00\u4e2a\u662f\u5c0f\u578b\u975e\u7ba1\u7406\u578b\u4ea4\u6362\u673aMellanox SX6005\u3002\u5b83\u4f7f\u7528\u7684\u4ef7\u683c\u7ea6\u4e3a90\u7f8e\u5143\uff1a\n\u5982\u679c\u60a8\u6709\u591a\u53f0\u4ea4\u6362\u673a\uff0c\u60a8\u53ef\u4ee5\u7528\u83ca\u82b1\u94fe\u5c06\u5b83\u4eec\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u5728\u5b83\u4eec\u4e4b\u95f4\u94fa\u8bbe\u591a\u6761\u7535\u7f06\uff0c\u8fd9\u5c06\u51cf\u5c11\u4ea4\u6362\u673a\u4e4b\u95f4\u7684\u74f6\u9888\u3002\u4e0d\u9700\u8981\u7279\u6b8a\u914d\u7f6e\uff0c\u53ea\u9700\u63d2\u4e0a\u591a\u6839\u7535\u7f06\uff0c\u5c31\u80fd\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5206\u6563\u8d1f\u8f7d\u3002\nInfiniBand\u7f51\u7edc\u9700\u8981\u6b63\u597d\u6709\u4e00\u4e2a\u5b50\u7f51\u7ba1\u7406\u5668\u3002\u7ba1\u7406\u578b\u4ea4\u6362\u673a\u53ef\u4ee5\u63d0\u4f9b\u6b64\u670d\u52a1\uff0c\u4f46\u9700\u8981\u5728\u914d\u7f6e\u754c\u9762\u4e2d\u542f\u7528\u3002\u975e\u6258\u7ba1\u4ea4\u6362\u673a\u65e0\u6cd5\u63d0\u4f9b\u6b64\u670d\u52a1\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u9700\u8981\u5728\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u5b50\u7f51\u7ba1\u7406\u5668\u3002\u5728CentOS 7\u4e0a\u5b89\u88c5\u5f88\u7b80\u5355\uff1a\n\u6211\u5728\u96c6\u7fa4\u4e0a\u4f7f\u7528CentOS7\uff0c\u56e0\u4e3a\u76ee\u524dMooseFS\u548cBeeGFS\u90fd\u4e0d\u652f\u6301CentOS8\u3002\u5f53\u6211\u7b2c\u4e00\u6b21\u4f7f\u7528Ubuntu\u65f6\uff0c\u8ba9InfiniBand\u5de5\u4f5c\u8981\u56f0\u96be\u5f97\u591a\u3002\u4e3a\u4e86\u8ba9BeeGFS\u6b63\u5e38\u5de5\u4f5c\uff0c\u6211\u8fd8\u4e0d\u5f97\u4e0d\u5bf9\u5176\u5185\u6838\u8fdb\u884c\u964d\u7ea7\u3002\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u4e48\u9ebb\u70e6\u662f\u503c\u5f97\u7684\uff0cCentOS7\u8fd0\u884c\u5f97\u5f88\u597d\u3002\n#install Packagesyum groupinstall&#34\uff1bInfiniband support#yum install net-tools mstflint InfiniBand-Diags iperf#Disable Firewallsystemctl status Firewalldsystemctl stop Firewalldsystemctl Disable Firewalld#Disable SELINUXNano/etc/selinux/config#set\uff0c\u7136\u540erebootSELINUX=DISABLED#\u542f\u52a8RDMA\u670d\u52a1ystemctl start\u3002\n#\u68c0\u67e5\u8bbe\u5907\u7684PCI\u5730\u5740spci|GREP Mellanox#04\uff1a00.0\u7f51\u7edc\u63a7\u5236\u5668\uff1aMellanox Technologies MT27500\u7cfb\u5217[ConnectX-3]#so&#34\uff1b04\uff1a00.0&#34\uff1b\u662f\u5730\u5740\u3002\n\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528PCI\u5730\u5740\u67e5\u627e\u5361\u7684PSID\uff0c\u5e76\u8bb0\u4e0b\u5f53\u524d\u56fa\u4ef6\u7248\u672c\uff1a\n#\u8bc6\u522b\u9002\u914d\u5361\u7684PSID(\u8f93\u51fa\u7684\u6700\u540e\u4e00\u884c)mstflint-d 04\uff1a00.0 q#\u955c\u50cf\u7c7b\u578b\uff1afs2#\u56fa\u4ef6\u7248\u672c\uff1a2.32.5100#\u56fa\u4ef6\u53d1\u5e03\u65e5\u671f\uff1a3.9.2014#ROM\u4fe1\u606f\uff1atype=pxe version=3.4.306 proto=IB#\u8bbe\u5907ID\uff1a4099#\u63cf\u8ff0\uff1a\u8282\u70b9\u7aef\u53e31\u7aef\u53e32\u7cfb\u7edf\u955c\u50cf#GUID\uff1ae41d2d0300b2bdc0 e41d2d0\u3002\n#\u4eceMellanox\u7f51\u7ad9\u4e0b\u8f7d\u4e0e\u60a8\u7684\u5361PSID:http://www.mellanox.com/page/firmware_table_dell?mtag=oem_firmware_downloadAdaptersDell\u76f8\u5339\u914d\u7684\u56fa\u4ef6BIN\u6587\u4ef6EMC ConnectX-3 Firmware Download Center2.42.5000079DJ3DEL1100001019http://www.mellanox.com/downloads/firmware/fw-ConnectX3-rel-2_42_5000-079DJ3-FlexBoot-3.4.752.bin.zip\u3002\n\u56e0\u6b64\uff0c\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230079DJ3\u5361\u7684\u6700\u65b0\u9a71\u52a8\u7a0b\u5e8f\u3002\u4e0b\u8f7d\u5e76\u89e3\u538b\u7f29\u5b83\u3002\u63a5\u4e0b\u6765\uff0c\u5c06\u65b0\u56fa\u4ef6\u523b\u5f55\u5230\u5361\u4e2d\uff1a\n#\u5c06\u56fa\u4ef6\u70e7\u5f55\u5230lspci\u8bbe\u5907idmstflint-d 04\uff1a00.0-i/root/fw-ConnectX3-rel-2_42_5000-079DJ3-FlexBoot-3.4.752.bin b#ctX3-rel-2_42_5000-079DJ3-FlexBoot-3.4.752.bin b#\u95ea\u5b58\u4e0a\u7684\u5f53\u524d\u56fa\u4ef6\u7248\u672c\uff1a2.32.5100#\u65b0\u56fa\u4ef6\u7248\u672c\uff1a2.42.5000#\u5728\u6ca1\u6709\u7b7e\u540d\u7684\u60c5\u51b5\u4e0b\u70e7\u5f55fs2\u56fa\u4ef6\u6620\u50cf-OK#\u6062\u590d\u7b7e\u540d-OK\u91cd\u65b0\u542f\u52a8#\u67e5\u8be2\u8bbe\u5907\u53c2\u6570\u4ee5\u9a8c\u8bc1\u65b0\u914d\u7f6emstconfig-d 04\uff1a00.0 q\n\u4e00\u4ef6\u5f88\u9177\u7684\u4e8b\u60c5\u662f\u4f60\u53ef\u4ee5\u7ed9\u4f60\u7684InfiniBand\u5361\u4e00\u4e2aIP\u5730\u5740\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7InfiniBand\u534f\u8bae\u53d1\u9001IP\u6570\u636e\u5305\u3002\u8fd9\u6837\u505a\u6548\u7387\u4e0d\u9ad8\uff0c\u4f46\u4e0e\u901a\u5e38\u76841GbE\u7aef\u53e3\u76f8\u6bd4\uff0c\u901f\u5ea6\u4ecd\u7136\u5feb\u5f97\u79bb\u8c31\u3002\n#config ib0Nano/etc/sysconfig/network-scripts/ifcfg-ib0DEVICE=ib0TYPE=infinibandBOOTPROTO=staticIPADDR=10.10.10.101NETMASK=255.255.255.0NETWORK=10.10.10.0BROADCAST=10.10.10.255ONBOOT=yesNM_CONTROLLED=no#\u7136\u540e\u91cd\u65b0\u542f\u52a8\u7f51\u7edc\u6216\u6574\u4e2a\u8ba1\u7b97\u673aystemctl\u91cd\u65b0\u542f\u52a8\u7f51\u7edc#\u9a8c\u8bc1\u65b0\u56fa\u4ef6\u5df2\u6210\u529f\u70e7\u5f55\uff1aifconfigethtool-ib0#\u6216ethtool ib0#\u9a71\u52a8\u7a0b\u5e8f\uff1aib_ipoib#\u7248\u672c\uff1a1.0.0#\u56fa\u4ef6-\u7248\u672c\uff1a2.42.5000#\u6269\u5c55-ROM-\u7248\u672c\uff1a#bus-info\uff1a0000\uff1a04\uff1a00.0#Supports-Statistics\uff1ayes#support-\u3002test\uff1ano#support-eeprom-access\uff1ano#support-register-dump\uff1ano#support-priv-flag\uff1ano#\u9a8c\u8bc1\u9a71\u52a8\u7a0b\u5e8f\u548cConnectX-3\u662f\u5426\u5904\u4e8e\u5347\u7ea7\u72b6\u6001\u3002\n#\u5728\u4e00\u53f0\u670d\u52a1\u5668(10.10.10.101)\u4e0a\u6d4b\u8bd5InfiniBand RDMA#\uff0c\u5728\u53e6\u4e00\u53f0\u670d\u52a1\u5668(\u5ba2\u6237\u7aef)\u4e0a\u8fd0\u884c\uff1aRDMA_SERVER#\u3002\u8fd0\u884c\uff1ardma_client-s 10.10.10.101#rdma_client\uff1astart#rdma_client\uff1aend 0#InfiniBand performance test#on server runib_send_bw-d mlx4_0-i 1-F--report_GBits#on client runib_send_bw-d mlx4_0--i 1-F--report_GBits 10.10.10.101#Bytes#Iterations BW Peak[GB/sec]BW Average[GB\u3002\u6211&#39\uff1b#\u7528\u53e6\u4e00\u4e2a\u76d2\u5b50\u6d4b\u8bd5\u4ee5\u592a\u7f51\u901f\u5ea6#\u9996\u5148\u542f\u52a8\u4fa6\u542c\u670d\u52a1\u5668\uff1aiperf-s#\uff0c\u7136\u540e\u7784\u51c6\u670d\u52a1\u5668\u8fd0\u884cTestperf-c 10.10.10.101iperf-c 10.10.10.101-P 2#--#Client\u8fde\u63a5\u523010.10.10.101\uff0ctcp\u7aef\u53e35001#tcp\u7a97\u53e3\u5927\u5c0f\uff1a314KByte(default)#--#[5]\u672c\u573010.10.10.102\u7aef\u53e342002\u4e0e10.10.10.101\u7aef\u53e35001#[3]\u672c\u573010.10.10.102\u7aef\u53e342000\u4e0e10.10.10\u8fde\u63a5\u3002.101\u7aef\u53e35001#[ID]\u95f4\u9694\u4f20\u8f93\u5e26\u5bbd#[5]0.0-10.0\u79d216.4 GB#14.1 GB/\u79d2#[3]0.0-10.0\u79d216.3 GB 14.0 GB/\u79d2#[SUM]0.0-10.0\u79d232.7 GB/\u79d228.1 GB/\u79d2#\u5ef6\u8fdfTESTB_READ_LATIB_WRITE_LAT 10.10.10.101#\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\u7684\u53e6\u4e00\u4e2aRDMA\u6d4b\u8bd5\uff0c\u8fd0\u884c&#34\uff1b\u5728\u5ba2\u6237\u7aef\u4e0a\uff0c\u8fd0\u884cudaddy-s 10.10.10.101&#34\uff1b#udaddy\uff1a\u542f\u52a8\u5ba2\u6237\u7aef#udaddy\uff1a\u6b63\u5728\u8fde\u63a5#\u542f\u52a8\u6570\u636e\u4f20\u8f93#\u63a5\u6536\u6570\u636e\u4f20\u8f93#\u6570\u636e\u4f20\u8f93\u5b8c\u6210#\u6d4b\u8bd5\u5b8c\u6210#\u8fd4\u56de\u72b6\u60010", "note_en": "This part might just be me cargo-culting, but I feel like even a startup quant fund needs a compute cluster. I once even heard a joke that any self-respecting quant should be able expand their computational needs to fill an arbitrarily large number of servers. The cluster I\u2019ve just built is a low-budget clunker, made of a motley bunch of leftover and refurbished servers, linked together with parts off eBay. But I\u2019m very proud of it!\n   New servers cost a fortune, and only a small fraction of the cost is for the actual CPU. These servers are designed for use cases that cannot tolerate downtime, where the administrators are remote, and where all the hardware and even software must be supported by some company with expensive contracts. In contrast, my cluster is designed only for research. Downtime is ok, as long as no data gets lost and I get get back up and running easily. So, my focus is only on maximizing performance given a limited budget. I\u2019m optimizing for compute per dollar. (Incidentally, I\u2019ve found the  PassMark CPU mark to accurately reflect how well each CPU can handle my workload.)  There is a stigma around buying refurbished enterprise grade equipment that I don\u2019t understand. Basic compute servers that cost $25k three years ago now cost only $2.5k, refurbished at places like  metservers.com or  stalliontek.com. Both of these companies provide warranties, too. Even better, these are real servers that already exist and can be shipped to you immediately, rather than waiting months for new ones due to things like worldwide memory shortages. New  Mellanox 100GbE infiniband cards cost $795 each, but on  eBay 56GbE cards can be bought for $40 each.\n    Memory can really drive up the cost of a server, doubling or tripling the price. I don\u2019t think loading up on RAM is cost-effective at scale. Instead, I recommend NVMe drives as an affordable alternative. Typical RAM for a refurbished Dell R630 server would be DDR4-2133, which has bandwidth of 136Gbps. The Samsung 970 EVO Plus 2TB NVMe drive has a read speed of 28Gbps. With the right software, an old infiniband card can max out its 56Gbps bandwidth by reading simultaneously from NVMe drives on only 2-3 other boxes in the cluster. For my workload, this is close enough to RAM speed that I/O ceases to be a bottleneck, and I can focus on just getting the computations done.\n  I have also chosen to go with retail NVMe drives. They cost far less than enterprise NVMe drives, and they have the same speed (PCIe Gen 3.0 x4) as all but the very newest enterprise drives. The advantage of enterprise drives is the longer lifetime, measured in hundreds or thousands of Terabytes written). But I tend to read far more than I write. Another advantage is that some enterprise drives are dual-port. This is a high-availability feature that allows two hosts to access the same drive, keeping it connected in case of host failure. But as I\u2019ve said, I don\u2019t need expensive high-availability features.\n  Having a distributed filesystem simplifies coding on a cluster. It makes it feel almost like just working on one big machine. Each job reads and writes to a shared filesystem that is mounted locally, using traditional posix system calls.\n  After searching out  filesystem reviews, I decided to use  MooseFS for my robust storage. It is easy to configure. It can handle my collection of drives of all sizes, and is robust to the failure of a drive, or even an entire server. It also has a nice browser-based monitoring tool. I have set it up to store one copy of each data chunk on an SSD, and the replicated chunk on a regular spinning disk. The clients are configured to prefer SSD chunkservers, which makes reading reasonably fast. Note: chunkserver labels apply to the whole server, so don\u2019t mix SSDs and HDDs in one server if you want to explicitly prioritize reading from SSDs.\n I considered paying for MooseFS Pro, but decided it was too expensive. For a 20TB lifetime license for versions 3.x and 4.x, I was quoted $1,620, or $810 if it was for non-commercial use. The main two benefits of getting a Pro license are 1) getting the high-availability of multiple online master servers instead of just metaloggers, and 2) getting erasure coding for more efficient use of storage space. The erasure coding is interesting to me, but for slow storage, big disks are really cheap. So, storing multiple full copies of a file isn\u2019t such a big deal.\n For serious speed, I\u2019ve chosen  BeeGFS with NVMe drives. BeeGFS supports RDMA (remote direct memory access) with infiniband, so it can move data between boxes without involving the CPUs. It is very fast. It is also relatively easy to configure. I am treating this sort of like volatile storage, and I have not set up \u201cbuddy mirrors.\u201d Since I will lose data if my hardware fails, I frequently rsync with the robust storage. I was disappointed to find out that even Pro BeeGFS doesn\u2019t support erasure coding. It would make more sense to use with these expensive NVMe drives. However, erasure coding also slows down both reading and writing. So, I\u2019m ok with giving up robustness in order to have one blazing fast filesystem.\n  Benchmarking a distributed filesystem is complicated and workload-dependent. But everything is working as I hoped. My cluster is mostly hyperconverged, with CPU and storage combined in each server. However, I do have some servers that are clients/CPU only. They are less powerful, so I keep them powered off until needed, to conserve energy. I got an APC AP7911A rack-mount PDU on eBay, so controlling power to the different ports is easy.\n  Building a cluster has been a lot of fun, and previously slow processes are now excitingly fast. But I\u2019m anxious to begin real research now, and stop messing around with infrastructure.\n  As a non-HPC guy, learning about infiniband, and getting the network functioning was the hardest part of building the cluster. It took me a long time, and lots of reading and trial-and-error. For that reason, I think it\u2019s worth posting detailed instructions on what eventually worked for me. I don\u2019t believe I\u2019m getting all that is possible out of my infiniband network, but I\u2019m still very pleased with it.\n  I went with 79DJ3 Mellanox ConnectX-3 CX353A FDR InfiniBand + 56GbE/ 40GbE Single QSFP+ RDMA cards. The most recent ones I ordered on eBay were $35 each. I believe the PCIe lanes cannot handle the full bandwidth of the dual-port cards, which is why I stayed with the simpler single-port card/setup. I did have to order replacement brackets for a couple of my high-profile-PCIe computers.\n   I went with Mellanox MC2207130-0A1 1.5M IB FDR QSFP copper cables for about $20 each. Fiber optic cables are better for long distances, but these passive cables have worked perfectly.\n   There are two switches that will work. The first is a small unmanaged switch, the Mellanox SX6005. It runs about $90 used:\n    If you have more than one switch involved, you can daisy chain them together. You can even run multiple cables between them, which will reduce the bottleneck between the switches. No special configuration is necessary, just plug in multiple cables, and it will spread the load among them to some degree.\n  There needs to be exactly one subnet manager for the infiniband network. The managed switch can provide this service, but you need to enable it in the configuration interface. The unmanaged switch cannot provide this service. In that case, you need to run a subnet manager on one server.  It is trivial to install on CentOS 7:\n   I\u2019m using CentOS 7 on my cluster, because at this time neither MooseFS nor BeeGFS supports CentOS 8. When I first played around with Ubuntu, it was much more difficult to get infiniband working. And I also had to downgrade its kernel to get BeeGFS working. I don\u2019t think it is worth all that hassle, and CentOS 7 is working great.\n # install packagesyum groupinstall &#34;Infiniband Support&#34;yum install net-tools mstflint infiniband-diags iperf# disable firewallsystemctl status firewalldsystemctl stop firewalldsystemctl disable firewalld# disable SELINUXnano /etc/selinux/config# set, then rebootSELINUX=disabled# start the RDMA servicesystemctl start rdmasystemctl enable rdma\n   # Check the device\u2019s PCI addresslspci | grep Mellanox# 04:00.0 Network controller: Mellanox Technologies MT27500 Family [ConnectX-3]# so &#34;04:00.0&#34; is the address\n Next, use the PCI address to find the card\u2019s PSID, and note the current firmware version:\n # Identify the adapter card&#39;s PSID (last line of the output)mstflint -d 04:00.0 q#Image type: FS2#FW Version: 2.32.5100#FW Release Date: 3.9.2014#Rom Info: type=PXE version=3.4.306 proto=IB#Device ID: 4099#Description: Node Port1 Port2 Sys image#GUIDs: e41d2d0300b2bdc0 e41d2d0300b2bdc1 e41d2d0300b2bdc2 e41d2d0300b2bdc3 #MACs: e41d2db2bdc1 e41d2db2bdc2#VSD: #PSID: DEL1100001019\n  # Download the firmware BIN file from the Mellanox website that matches your card&#39;s PSID:http://www.mellanox.com/page/firmware_table_dell?mtag=oem_firmware_downloadAdaptersDell EMC ConnectX-3 Firmware Download Center2.42.5000079DJ3DEL1100001019http://www.mellanox.com/downloads/firmware/fw-ConnectX3-rel-2_42_5000-079DJ3-FlexBoot-3.4.752.bin.zip\n So, the latest driver for the 079DJ3 card can be found  here. Download and unzip it. Next, burn the new firmware into the card:\n # burn firmware to lspci device idmstflint -d 04:00.0 -i /root/fw-ConnectX3-rel-2_42_5000-079DJ3-FlexBoot-3.4.752.bin b#ctX3-rel-2_42_5000-079DJ3-FlexBoot-3.4.752.bin b# Current FW version on flash: 2.32.5100# New FW version: 2.42.5000#Burning FS2 FW image without signatures - OK #Restoring signature - OKreboot# Query the device\u2019s parameters to validate the new configurationmstconfig -d 04:00.0 q\n  One cool thing is that you can give your infiniband card an IP address. You can send IP packets over the infiniband protocol. It isn\u2019t efficient to do that, but it is still crazy fast compared with the usual 1GbE ports.\n # config ib0nano /etc/sysconfig/network-scripts/ifcfg-ib0DEVICE=ib0TYPE=infinibandBOOTPROTO=staticIPADDR=10.10.10.101NETMASK=255.255.255.0NETWORK=10.10.10.0BROADCAST=10.10.10.255ONBOOT=yesNM_CONTROLLED=no# then restart the network or the whole machinesystemctl restart network# Validate new firmware burned successfully:ifconfigethtool -i ib0 # or ethtool ib0#driver: ib_ipoib#version: 1.0.0#firmware-version: 2.42.5000#expansion-rom-version: #bus-info: 0000:04:00.0#supports-statistics: yes#supports-test: no#supports-eeprom-access: no#supports-register-dump: no#supports-priv-flags: no# Verify drivers and ConnectX-3 are upibstatibstatus\n  # test infiniband RDMA# on one server (10.10.10.101), run:rdma_server# on another server (the client), run:rdma_client -s 10.10.10.101#rdma_client: start#rdma_client: end 0# infiniband performance test# on the server runib_send_bw -d mlx4_0 -i 1 -F --report_gbits# on the client runib_send_bw -d mlx4_0 -i 1 -F --report_gbits 10.10.10.101# #bytes #iterations BW peak[Gb/sec] BW average[Gb/sec] MsgRate[Mpps]# 65536 1000 37.70 37.70 \t\t 0.071910# Sadly, not 56Gbps. I&#39;ll keep working on this.# test ethernet speed with another box# first start a listening server:iperf -s# then aim at the server to run the testiperf -c 10.10.10.101iperf -c 10.10.10.101 -P 2#------------------------------------------------------------#Client connecting to 10.10.10.101, TCP port 5001#TCP window size: 314 KByte (default)#------------------------------------------------------------#[ 5] local 10.10.10.102 port 42002 connected with 10.10.10.101 port 5001#[ 3] local 10.10.10.102 port 42000 connected with 10.10.10.101 port 5001#[ ID] Interval Transfer Bandwidth#[ 5] 0.0-10.0 sec 16.4 GBytes 14.1 Gbits/sec#[ 3] 0.0-10.0 sec 16.3 GBytes 14.0 Gbits/sec#[SUM] 0.0-10.0 sec 32.7 GBytes 28.1 Gbits/sec# latency testib_read_latib_write_lat 10.10.10.101# another RDMA teston one server, run &#34;udaddy&#34;on the client, run &#34;udaddy -s 10.10.10.101&#34;#udaddy: starting client#udaddy: connecting#initiating data transfers#receiving data transfers#data transfers complete#test complete#return status 0", "posttime": "2020-07-06 09:44:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a77\u4eba,man,\u670d\u52a1\u5668", "title": "\u7a77\u4eba\u7684\u96c6\u7fa4", "title_en": "Poor Man's Cluster", "transed": 1, "url": "http://www.regressionist.com/2020/07/05/poor-mans-cluster/", "via": "", "real_tags": ["\u7a77\u4eba", "man", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "8ac4c2f6652664af7d953a278eedd2c0.jpg", "infoid": 1010044, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8425\u9500\u8005\uff0c\u5c24\u5176\u662f\u54c1\u724c\u8425\u9500\u8005\uff1a\u4f60\u4eec\u4e2d\u592a\u591a\u4eba\u5df2\u7ecf\u5931\u53bb\u4e86\u5173\u4e8e\u4f60\u4eec\u5728\u793e\u4f1a\u4e2d\u626e\u6f14\u7684\u5173\u952e\u89d2\u8272\u7684\u5267\u672c\u3002\u867d\u7136\u5173\u4e8e\u201c\u4e00\u8d77\u5ea6\u8fc7\u96be\u5173\u201d\u7684\u5584\u610f\u7535\u89c6\u5e7f\u544a\u5f88\u4e0d\u9519\uff0c\u4f46\u5b83\u4eec\u4e0d\u662f\u7ed3\u6784\u6027\u7684\u89e3\u51b3\u65b9\u6848\u3002\u73b0\u5728\u662f\u65f6\u5019\u91cd\u65b0\u601d\u8003\u8425\u9500\u8005\u3001\u5a92\u4f53\u516c\u53f8(\u800c\u4e0d\u662f\u201c\u5185\u5bb9\u521b\u4f5c\u8005\u201d\uff0c\u5c3c\u514b)\u548c\u89c2\u4f17\u4e4b\u95f4\u7684\u5173\u7cfb\u4e86\u3002\n\u6240\u4ee5\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u8fd9\u4ef6\u4e8b\u3002\u62ff\u8d77\u4f60\u6700\u559c\u6b22\u7684\u996e\u6599\uff0c\u8ddf\u7740\u8bfb\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5343\u5b57\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecd\u4e00\u70b9\u5a92\u4f53\u7406\u8bba--\u6211\u5e0c\u671b\u8fd9\u5c06\u5f00\u542f\u4e00\u573a\u6709\u8da3\u7684\u5bf9\u8bdd\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u60f3\u8981TL\uff1aDR\u603b\u7ed3\u7684\u4eba\u6765\u8bf4\uff0c\u73b0\u5728\u662f\u65f6\u5019\u56de\u5230\u8425\u9500\u8005\u8fc7\u53bb\u975e\u5e38\u64c5\u957f\u7684\u5de5\u4f5c\u4e0a\u4e86\uff1a\u51b3\u5b9a\u5438\u5f15\u53d7\u4f17\u7684\u9002\u5f53\u80cc\u666f\u3002\u73b0\u5728\u662f\u65f6\u5019\u653e\u5f03\u4f60\u4eec\u5927\u591a\u6570\u4eba\u5df2\u7ecf\u517b\u6210\u7684\u4e60\u60ef\u4e86\uff1a\u8ba9\u673a\u5668\u4e3a\u4f60\u4eec\u9009\u62e9\u89c2\u4f17\u3002\u591a\u4e8f\u4e86\u5c06\u5927\u89c4\u6a21\u5e7f\u544a\u5b9a\u5411\u4e0e\u9ad8\u8d28\u91cf\u7f16\u8f91\u4ea7\u54c1\u878d\u5408\u5728\u4e00\u8d77\u7684\u65b0\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u8fdb\u5165\u8fd9\u4e2a\u65b0\u7684\u89d2\u8272\uff0c\u800c\u4e0d\u4f1a\u727a\u7272Facebook\u3001\u8c37\u6b4c\u3001Twitter\u7b49\u516c\u53f8\u53ca\u5176\u540c\u7c7b\u63d0\u4f9b\u7684\u8986\u76d6\u8303\u56f4\u3001\u7cbe\u786e\u5ea6\u548c\u5b9a\u5411\u3002\u4e3a\u4e86\u7406\u89e3\u5176\u4e2d\u7684\u539f\u56e0\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u5386\u53f2\u3002\n\u5982\u679c\u4f60\u56de\u60f3\u4e00\u4e0b\u6211\u5728\u5a92\u4f53\u4e0a\u5b9a\u671f\u64b0\u6587\u65f6(\u5927\u7ea62003-2015\u5e74)\u7684\u8fd9\u4e2a\u7f51\u7ad9\uff0c\u4f60\u4f1a\u8bb0\u5f97\u6211\u5217\u51fa\u4e86\u51e0\u4e2a\u5173\u4e8e\u5a92\u4f53\u4e1a\u52a1\u8fd0\u4f5c\u7684\u57fa\u672c\u539f\u5219\u3002\u5b83\u7531\u4e09\u4e2a\u6838\u5fc3\u90e8\u5206\u7ec4\u6210\uff1a\u793e\u8bba(\u5a92\u4f53\u516c\u53f8\u7684\u5185\u5bb9)\u3001\u53d7\u4f17(\u5173\u6ce8\u5185\u5bb9\u7684\u4eba)\u548c\u5e02\u573a\u8425\u9500\u4eba\u5458(\u5e0c\u671b\u5728\u793e\u8bba\u4e0a\u4e0b\u6587\u4e2d\u5438\u5f15\u89c2\u4f17\u6ce8\u610f\u529b\u7684\u5546\u4e1a\u6f14\u5458)\u3002\u5f53\u7136\uff0c\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u7b2c\u56db\u4e2a\u7ec4\u4ef6\u4f7f\u8fd9\u4e09\u4e2a\u7ec4\u4ef6\u90fd\u9eef\u7136\u5931\u8272\uff1a\u4e92\u8054\u7f51\u5e73\u53f0\u3002\n\u5728\u4e3b\u8981\u7684\u4e92\u8054\u7f51\u5e73\u53f0\u89e3\u6784\u5a92\u4f53\u4e1a\u52a1\u4e4b\u524d\uff0c\u8fd9\u4e09\u4e2a\u539f\u59cb\u7ec4\u6210\u90e8\u5206\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e86\u6211\u4eec\u6240\u8bf4\u7684\u5a92\u4f53\u4ea7\u54c1(\u6211\u4ecd\u7136\u504f\u7231\u201c\u51fa\u7248\u201d\uff0c\u4f46\u8bb8\u591a\u4eba\u542c\u5230\u8fd9\u4e2a\u8bcd\u65f6\u53ea\u4f1a\u60f3\u5230\u5370\u5237)\u3002\u5370\u5237\u3001\u7535\u89c6\u8282\u76ee\u548c\u65e9\u671f\u7684\u7f51\u7ad9\u90fd\u662f\u7f16\u8f91\u3001\u89c2\u4f17\u548c\u8425\u9500\u4eba\u5458\u4e4b\u95f4\u5546\u4e1a\u5173\u7cfb\u7684\u5bb9\u5668\u3002\u5a92\u4f53\u516c\u53f8\u627f\u62c5\u4e86\u521b\u5efa\u548c\u5206\u53d1\u5a92\u4f53\u4ea7\u54c1\u7684\u8d22\u52a1\u98ce\u9669\uff0c\u5982\u679c\u6210\u529f\uff0c\u8425\u9500\u8005\u5c06\u4ed8\u8d39\u5728\u5a92\u4f53\u4ea7\u54c1\u5185\u6295\u653e\u5e7f\u544a\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u89c2\u4f17\u8fd8\u4e3a\u793e\u8bba\u652f\u4ed8\u4e86\u8ba2\u9605\u8d39\u3002\u4f46\u5bf9\u4e8e\u5927\u591a\u6570\u5a92\u4f53\u516c\u53f8\u6765\u8bf4\uff0c\u5e7f\u544a\u652f\u6301\u5bf9\u4e8e\u7a81\u7834\u76c8\u5229\u95e8\u69db\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u9879\u4e1a\u52a1\u53d6\u5f97\u6210\u529f\u81f3\u5173\u91cd\u8981\u3002\n\u5546\u4e1a\u4ea4\u6613\u7684\u5a92\u4f53-\u4ea7\u54c1-\u5bb9\u5668\u6a21\u5f0f\u7684\u4e00\u4e2a\u5173\u952e\u56e0\u7d20\u662f\u4e0a\u4e0b\u6587\u5f88\u91cd\u8981\u3002\u5a92\u4f53\u4ea7\u54c1\u521b\u9020\u4e86\u53d7\u4f17\u53c2\u4e0e\u7684\u80cc\u666f\uff0c\u5982\u679c\u8425\u9500\u8005\u63d0\u4f9b\u4e0e\u8be5\u80cc\u666f\u4e00\u81f4\u7684\u4fe1\u606f\uff0c\u53d7\u4f17\u81ea\u7136\u4f1a\u66f4\u5bb9\u6613\u63a5\u53d7\u5e7f\u544a\u5546\u7684\u4fe1\u606f\u3002\u53ef\u4ee5\u8bf4\uff0c\u968f\u7740\u5927\u91cf\u5e73\u53f0\u4e0a\u53d7\u4f17\u8d2d\u4e70\u7684\u589e\u52a0\uff0c\u4e0a\u4e0b\u6587\u5df2\u7ecf\u4e22\u5931\uff0c\u6574\u4e2a\u5a92\u4f53\u751f\u6001\u7cfb\u7edf(\u4ee5\u53ca\u6574\u4e2a\u793e\u4f1a)\u51e0\u4e4e\u90fd\u6709\u4e0d\u53ef\u4f30\u91cf\u7684\u8d1f\u9762\u5f71\u54cd\u3002\u7a0d\u540e\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u70b9\u3002\n\u540c\u65f6\uff0c\u5728\u5e73\u53f0\u95ee\u4e16\u524d\u7684\u65e5\u5b50\u91cc\uff0c\u5206\u53d1\u5f88\u91cd\u8981\uff0c\u4f46\u4e5f\u662f\u5e38\u6001\u3002\u5927\u591a\u6570\u5a92\u4f53\u516c\u53f8\u901a\u8fc7\u6536\u8d2d\u5e7f\u64ad\u8bb8\u53ef\u8bc1\u6216\u6709\u7ebf\u7535\u89c6\u7f51\u7edc(\u7535\u89c6)\u6216\u5370\u5237\u53d1\u884c\u7f51\u7edc(\u5982\u679c\u60a8\u662f\u4e00\u5bb6\u6742\u5fd7\u6216\u62a5\u7eb8\u516c\u53f8)\u6765\u6574\u5408\u5206\u9500\u3002\u5982\u679c\u4f60\u662f\u4e00\u5bb6\u5a92\u4f53\u521d\u521b\u516c\u53f8\uff0c\u4f60\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u5206\u9500\u7f51\u7edc\u83b7\u5f97\u76f8\u5bf9\u53ef\u9884\u6d4b\u7684\u79df\u91d1-\u901a\u5e38\u4e0d\u9700\u8981\u9884\u5148\u82b1\u8d39\u4efb\u4f55\u8d44\u91d1\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u521b\u529e\u201c\u8fde\u7ebf\u201d\u6742\u5fd7\u65f6\uff0c\u6211\u4eec\u540c\u610f\u5c06\u65b0\u6742\u5fd7\u8d5a\u53d6\u7684\u6536\u5165\u4e0e\u6211\u4eec\u7684\u5206\u9500\u4ee3\u7406\u5206\u6210\uff0c\u4ece\u800c\u83b7\u5f97\u62a5\u644a\u5206\u9500\u3002\n\u6211\u628a\u8fd9\u79cd\u8001\u5f0f\u6a21\u5f0f\u79f0\u4e3a\u201c\u5305\u88c5\u5546\u54c1\u5a92\u4f53\u201d\u300215\u5e74\u524d\uff0c\u6211\u6ce8\u610f\u5230\u201cPGM\u201d\u6b63\u5728\u8ba9\u4f4d\u4e8e\u4e00\u79cd\u65b0\u7684\u6a21\u5f0f\uff0c\u6211\u79f0\u4e4b\u4e3a\u201c\u5bf9\u8bdd\u5a92\u4f53\u201d(Conversational Media\uff0c\u7b80\u79f0CM)\u3002\u5f53\u7136\uff0cCM\u662f\u201c\u793e\u4ea4\u5a92\u4f53\u201d-Twitter\u3001Facebook\u3001YouTube-\u7684\u524d\u8eab\uff0c\u5f53\u6211\u5927\u58f0\u601d\u8003\u8fd9\u4e00\u65b0\u73b0\u8c61\u65f6\uff0c\u6211\u6ce8\u610f\u5230\u4e86\u5b83\u4e0e\u5305\u88c5\u5546\u54c1\u5a92\u4f53\u4e4b\u95f4\u7684\u51e0\u4e2a\u5173\u952e\u533a\u522b\u3002\u6211\u9884\u6d4b\uff0c\u7f16\u8f91\u3001\u53d7\u4f17\u548c\u5e02\u573a\u8425\u9500\u7684\u7ecf\u6d4e\u5b66\u90fd\u5c06\u53d1\u751f\u5de8\u5927\u53d8\u5316\u3002\u5728\u5f88\u591a\u65b9\u9762\u6211\u90fd\u8bf4\u5bf9\u4e86\u3002\u4f46\u5728\u5176\u4ed6\u51e0\u4e2a\u6848\u4f8b\u4e2d\uff0c\u6211\u5927\u9519\u7279\u9519\u3002\u4ee5\u4e0b\u662f\u51e0\u4e2a\u5173\u952e\u70b9\u7684\u603b\u7ed3\uff1a\n\u7f16\u8f91\u6a21\u5f0f\u5c06\u4ece\u201c\u542c\u5199\u201d\u6f14\u53d8\u4e3a\u201c\u5bf9\u8bdd\u5f0f\u201d\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u53d7\u4f17--\u4ee5\u53ca\u901a\u8fc7\u6570\u636e\u5bf9\u53d7\u4f17\u7684\u4e86\u89e3--\u6210\u4e3a\u7f16\u8f91\u521b\u4f5c\u7684\u6838\u5fc3\u9a71\u52a8\u529b\u3002\n\u53d1\u884c\u5c06\u53d8\u5f97\u8fd1\u4e4e\u514d\u8d39\uff0c\u6d88\u9664\u4e3b\u8981\u5a92\u4f53\u516c\u53f8\u7684\u5bfb\u79df\u5784\u65ad\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u5199\u9053\uff1a\u201c\u57fa\u4e8e\u5206\u9500\u63a7\u5236\u7684\u7ecf\u6d4e\u5dee\u5f02\u5316-\u57fa\u4e8ePGM\u7684\u5546\u4e1a\u6a21\u5f0f\u7684\u6838\u5fc3-\u5728\u57fa\u4e8eCM\u7684\u670d\u52a1\u4e2d\u662f\u65e0\u5173\u7d27\u8981\u7684\u3002\u201d\n\u5728\u7f51\u4e0a\uff0c\u51fa\u7248\u7269\u53d8\u5f97\u66f4\u50cf\u4e00\u9879\u670d\u52a1\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u4ea7\u54c1\u3002\u6211\u6ce8\u610f\u5230\uff0c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4ecd\u662f\u5957\u88c5\u4ea7\u54c1\u7684\u8f6f\u4ef6\u4e5f\u6b63\u671d\u7740\u8fd9\u4e2a\u65b9\u5411\u53d1\u5c55\u3002\u8fd9\u610f\u5473\u7740\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5a92\u4f53\u5c06\u6709\u4e0d\u540c\u7684\u7ecf\u6d4e\u5b66\u548c\u4e0d\u540c\u7684\u5e7f\u544a\u6a21\u5f0f(\u5f53\u65f6\u6211\u79f0\u4e4b\u4e3a\u201c\u539f\u751f\u5e7f\u544a\u201d)\u3002\n\u6211\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u5341\u5e74\u91cc\uff0c\u6211\u7684\u7b2c\u4e00\u4e2a\u548c\u7b2c\u4e09\u4e2a\u9884\u6d4b\u76f8\u5bf9\u6b63\u786e\uff0c\u4f46\u6211\u5b8c\u5168\u6ca1\u6709\u8003\u8651\u5230\u5206\u914d\u5c06\u5982\u4f55\u8fdb\u884c\u3002\u6211\u7b80\u76f4\u65e0\u6cd5\u60f3\u8c61Facebook\u3001\u8c37\u6b4c\u548c\u5176\u4ed6\u516c\u53f8\u4f1a\u5982\u4f55\u5229\u7528\u4ed6\u4eec\u65b0\u83b7\u5f97\u7684\u5bf9\u89c2\u4f17\u6ce8\u610f\u529b\u7684\u63a7\u5236\u3002\u57282006\u5e74\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5199\u9053\uff1a\n\u201c\u2026\u3002\u627e\u5230\u89c4\u6a21\u5e9e\u5927\u7684\u5bf9\u8bdd\u5a92\u4f53\u516c\u53f8(\u9664\u4e86\u8c37\u6b4c\u4e4b\u5916)\u662f\u4e00\u4e2a\u76f8\u5f53\u56f0\u96be\u7684\u641c\u7d22\u2026\u3002\u76ee\u524d\u8fd8\u4e0d\u6e05\u695aCM\u516c\u53f8\u662f\u5426\u4f1a\u6210\u719f\u4e3a\u50cf\u65f6\u4ee3\u534e\u7eb3\u90a3\u6837\u7684\u5927\u578b\u4f01\u4e1a\u96c6\u56e2\u3002\n\u55ef\uff0c\u73b0\u5728\u80af\u5b9a\u5f88\u6e05\u695a\u4e86\u3002Facebook\u3001\u8c37\u6b4c\u548c\u4ed6\u4eec\u7684\u540c\u884c\u662f\u4e16\u754c\u4e0a\u6700\u5f3a\u5927\u3001\u8d44\u672c\u6700\u5145\u88d5\u7684\u516c\u53f8\u4e4b\u4e00\uff0c\u4ed6\u4eec\u4e4b\u6240\u4ee5\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u662f\u56e0\u4e3a\u4ed6\u4eec\u505a\u5f97\u975e\u5e38\u597d\uff1a\u5438\u5f15\u4e86\u6211\u4eec\u6570\u5341\u4ebf\u4eba\u7684\u6ce8\u610f\u529b\u3002\u8fd9\u8ba9\u4ed6\u4eec\u51e0\u4e4e\u5784\u65ad\u4e86\u6570\u5b57\u5206\u9500\uff0c\u5e76\u5229\u7528\u8fd9\u4e00\u4f18\u52bf\u5f62\u6210\u4e86\u6570\u5b57\u5e7f\u544a\u7684\u8fd1\u4e4e\u5784\u65ad\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u6280\u672f\u5e73\u53f0\u5df2\u7ecf\u6d88\u9664\u4e86\u51fa\u7248\u5546\u4f5c\u4e3a\u53d7\u4f17\u5174\u8da3\u548c\u53c2\u4e0e\u5ea6\u4ee3\u7406\u7684\u4f20\u7edf\u89d2\u8272\u3002\u6211\u8fc7\u53bb\u8ba4\u4e3a\u8fd9\u4e00\u8d8b\u52bf\u610f\u5473\u7740\u9ad8\u8d28\u91cf\u72ec\u7acb\u5a92\u4f53\u54c1\u724c\u7684\u7ec8\u7ed3-\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u57282013\u5e74\u51fa\u552eFederated\u540e\u6ca1\u6709\u521b\u529e\u4e00\u4e2a\u5a92\u4f53\u54c1\u724c\u7684\u539f\u56e0\u3002\u4f46\u5a92\u4f53\u6a21\u5f0f\u603b\u662f\u5728\u53d1\u5c55\uff0c\u6211\u73b0\u5728\u770b\u5230\u4e86\u4e00\u6761\u65b0\u7684\u524d\u8fdb\u9053\u8def\u3002\u8981\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u56de\u987e\u6211\u4eec\u4eca\u5929\u6240\u5904\u7684\u4f4d\u7f6e\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u7814\u7a76\u5957\u5229\u884c\u4e3a\u3002\n\u5982\u679c\u6211\u8981\u5199\u201c\u641c\u7d22\u201d\u7684\u7eed\u96c6\uff0c\u53ea\u5173\u6ce8\u6570\u5b57\u5a92\u4f53\u6a21\u5f0f\u5728\u8fc7\u53bb15\u5e74\u91cc\u53d1\u751f\u4e86\u600e\u6837\u7684\u53d8\u5316\uff0c\u6211\u5f88\u53ef\u80fd\u4f1a\u628a\u5b83\u547d\u540d\u4e3a\u201cThe ARB\u201d\u3002\n\u8fd9\u4e0d\u4f1a\u662f\u4e00\u4e2a\u6f02\u4eae\u7684\u6545\u4e8b\u3002\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u89c2\u4f17\u5957\u5229\u5df2\u7ecf\u6210\u4e3a\u6570\u5b57\u5a92\u4f53\u4e1a\u52a1\u7684\u4e3b\u5bfc\u6a21\u5f0f\u3002\u8fd9\u662f\u4e00\u79cd\u53ef\u6015\u7684\u5546\u4e1a\u884c\u4e3a\uff0c\u5b83\u4fb5\u8680\u4e86\u4fe1\u4efb\uff0c\u8d2c\u4f4e\u4e86\u5a92\u4f53\u54c1\u724c\u7684\u4ef7\u503c\uff0c\u51b2\u6de1\u4e86\u8425\u9500\u7684\u91cd\u8981\u6027\u3002\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u6709\u70b9\u5938\u5f20\uff0c\u4f46\u662f\u89c1\u9b3c\uff0c\u4f60\u73b0\u5728\u8fd8\u5728\u770b\u4e66\uff0c\u6240\u4ee5\u628a\u4f60\u7684\u676f\u5b50\u5012\u6ee1\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002\n\u5b57\u5178\u5bf9\u5957\u5229\u7684\u5b9a\u4e49\u662f\u201c\u4e3a\u4e86\u5229\u7528\u540c\u4e00\u8d44\u4ea7\u7684\u4e0d\u540c\u4ef7\u683c\uff0c\u5728\u4e0d\u540c\u7684\u5e02\u573a\u6216\u4ee5\u884d\u751f\u5de5\u5177\u7684\u5f62\u5f0f\u540c\u65f6\u4e70\u5165\u548c\u5356\u51fa\u8bc1\u5238\u3001\u8d27\u5e01\u6216\u5546\u54c1\u3002\u201d\n\u5728\u5a92\u4f53\u9886\u57df\uff0c\u88ab\u5957\u5229\u7684\u8d44\u4ea7\u662f\u89c2\u4f17\u6ce8\u610f\u529b\u3002\u5957\u5229\u8005\u662f\u51fa\u7248\u5546\u3002\u4ed6\u4eec\u7684\u63a8\u52a8\u8005\u662f\u4e3b\u8981\u7684\u6280\u672f\u5e73\u53f0\uff0c\u8fd9\u662f\u7531\u5e7f\u544a\u5546\u7684\u7f8e\u5143\u63a8\u52a8\u7684\u3002\n\u8fd9\u662f\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u3002\u50cfBuzzfeed\u6216Cheddar\u8fd9\u6837\u7684\u5927\u578b\u51fa\u7248\u5546\u5c06\u4e00\u767e\u4e07\u7f8e\u5143\u7684\u5e7f\u544a\u4ea4\u6613\u5356\u7ed9\u4e86\u8425\u9500\u54c1\u724c\u3002\u5a92\u4f53\u516c\u53f8\u4fdd\u8bc1\uff0c\u8425\u9500\u8005\u7684\u4fe1\u606f\u5c06\u6536\u96c6\u4e00\u5b9a\u6570\u91cf\u7684\u89c2\u4f17\u5370\u8c61\u6216\u6d4f\u89c8\u91cf\uff0c\u5e76\u5411\u8425\u9500\u8005\u6536\u53d6\u201c\u5343\u4eba\u6210\u672c\u201d\u3002(\u88ab\u79f0\u4e3a\u201cCPM\u201d\u7684\u5343\u4eba\u6210\u672c\u5b9a\u4ef7\u8303\u56f4\u5f88\u5e7f\uff0c\u4ece\u51e0\u5206\u94b1\u5230\u201c\u9ad8\u7ea7\u201d\u5b89\u7f6e\u768425-40\u7f8e\u5143\u4e0d\u7b49)\u3002\u5229\u7528\u5305\u88c5\u5546\u54c1\u5a92\u4f53\u6a21\u5f0f\uff0c\u51fa\u7248\u5546\u53ef\u80fd\u4f1a\u5728\u5176\u201c\u62e5\u6709\u548c\u8fd0\u8425\u201d\u7684\u8d44\u4ea7\u4e0a\u5b9e\u73b0\u8fd9\u4e9b\u5370\u8c61\uff0c\u4f46\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u8fd9\u6837\u505a\u5df2\u7ecf\u79ef\u7d2f\u4e86\u5f88\u5927\u7684\u7f3a\u70b9\u3002\u524d\u4e09\u540d\uff1a\n\u5f88\u8d35\u7684\u3002\u5728\u5a92\u4f53\u516c\u53f8\u81ea\u5df1\u7684\u8d44\u4ea7\u4e0a\u83b7\u53d6\u5e76\u7559\u4f4f\u53d7\u4f17\uff0c\u5f80\u5f80\u6bd4\u5728Facebook\u6216\u8c37\u6b4c\u7b49\u5927\u89c4\u6a21\u5e73\u53f0\u4e0a\u627e\u5230\u540c\u6837\u7684\u53d7\u4f17\u7684\u6210\u672c\u8981\u9ad8\u5f97\u591a\u3002\n\u5b83\u7f3a\u4e4f\u590d\u6742\u7684\u76ee\u6807\u5b9a\u4f4d\u3002\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u8425\u9500\u4eba\u5458\u5df2\u7ecf\u4e60\u60ef\u4e86\u5927\u578b\u5e73\u53f0\u6570\u636e\u4e30\u5bcc\u7684\u7cbe\u786e\u5ea6\u3002\u4ed6\u4eec\u4e0d\u60f3\u4e3a\u4efb\u4f55\u4e00\u4e2a\u8001\u7684Buzzfeed\u6216Cheddar\u7528\u6237\u4ed8\u8d39\u3002\u4ed6\u4eec\u5e0c\u671b\u4ed6\u4eec\u7684\u4fe1\u606f\u51c6\u786e\u5730\u8fbe\u5230\u4ed6\u4eec\u6307\u5b9a\u7684\u76ee\u6807\uff0c\u800c\u5927\u591a\u6570\u51fa\u7248\u5546\u65e2\u6ca1\u6709\u6280\u672f\u4e5f\u6ca1\u6709\u53d7\u4f17\u89c4\u6a21\u6765\u6ee1\u8db3\u73b0\u4ee3\u8425\u9500\u8005\u5bf9\u6570\u636e\u9a71\u52a8\u7684\u9700\u6c42\u3002\n\u5b83\u8feb\u4f7f\u8425\u9500\u8005\u505a\u989d\u5916\u7684\u5de5\u4f5c\u3002\u6211\u4e0d\u662f\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u4e0d\u4f1a\u662f\u6700\u540e\u4e00\u4e2a\u6ce8\u610f\u5230\u8425\u9500\u4eba\u5458\u548c\u7ecf\u7eaa\u516c\u53f8\u4e0d\u559c\u6b22\u505a\u989d\u5916\u5de5\u4f5c\u7684\u4eba\u3002\u867d\u7136\u8bb8\u591a\u8f83\u5927\u7684\u51fa\u7248\u5546\u90fd\u5728\u81ea\u5df1\u62e5\u6709\u548c\u8fd0\u8425\u7684\u6e20\u9053\u4e0a\u6784\u5efa\u4e86\u9ad8\u8d28\u91cf\u7684\u5e7f\u544a\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u8425\u9500\u4eba\u5458\u8ba4\u4e3a\u8fd9\u4e9bPoint\u89e3\u51b3\u65b9\u6848\u53ea\u662f\u4ed6\u4eec\u5fc5\u987b\u7ba1\u7406\u3001\u5206\u6790\u548c\u62a5\u544a\u7684\u53c8\u4e00\u4e2a\u6e20\u9053\u3002\u6bd5\u7adf\uff0c\u8d2d\u4e70Facebook\u8981\u5bb9\u6613\u5f97\u591a\u3002\n\u7531\u4e8e\u6240\u6709\u8fd9\u4e00\u5207\uff0c\u51fa\u7248\u5546\u5df2\u7ecf\u6210\u4e3aFacebook\u3001\u8c37\u6b4c\u548c\u5176\u4ed6\u7f51\u7edc\u7684\u53d7\u4f17\u4e70\u5bb6\u3002\u6709\u8fdb\u53d6\u5fc3\u7684\u51fa\u7248\u5546\u5f00\u59cb\u5c06\u81ea\u5df1\u7684\u5185\u5bb9\u4e0e\u8d5e\u52a9\u5546\u7684\u8425\u9500\u4fe1\u606f\u6253\u5305\u5728\u4e00\u8d77\uff0c\u7136\u540e\u4ed6\u4eec\u5f00\u59cb\u5fd9\u4e8e\u5728Twitter\u3001Facebook\u548cYouTube\u7b49\u7f51\u7ad9\u4e0a\u5411\u89c2\u4f17\u63a8\u5e7f\u8fd9\u4e00\u6346\u7ed1\u5305\u3002\n\u8fd9\u5c31\u662f\u201c\u827a\u672f\u201d\u7684\u7528\u6b66\u4e4b\u5730\uff1a\u51fa\u7248\u5546\u5c06\u5411\u8425\u9500\u8005\u6536\u53d615\u7f8e\u5143\u7684CPM\uff0c\u4f46\u5728Facebook\u4e0a\u4ee57\u7f8e\u5143\u7684\u4ef7\u683c\u83b7\u5f97\u53d7\u4f17\uff0c\u6bcf1000\u6b21\u5370\u8c61\u5c31\u80fd\u83b7\u5f978\u7f8e\u5143\u7684\u5229\u6da6\u3002\n\u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c\u4e3a\u4ec0\u4e48\u5e73\u53f0\u6216\u8425\u9500\u4eba\u5458\u4e0d\u505c\u6b62\u8fd9\u79cd\u505a\u6cd5\uff0c\u4f60\u95ee\u5f97\u5bf9\u3002\u4f46\u8003\u8651\u5230\u7ecf\u6d4e\u8bf1\u56e0\uff0c\u4e8b\u60c5\u5c31\u4f1a\u53d8\u5f97\u66f4\u6e05\u695a\u4e00\u4e9b\u3002\u8fd9\u4e9b\u5e73\u53f0\u5168\u5929\u90fd\u5728\u505a\u7684\u4e8b\u60c5\u6b63\u5728\u83b7\u5f97\u62a5\u916c\uff1a\u6309\u89c4\u6a21\u63d0\u4f9b\u7cbe\u786e\u7684\u89c2\u4f17\u5370\u8c61\u3002\u5bf9\u4e8e\u5e73\u53f0\u800c\u8a00\uff0c\u5a92\u4f53\u54c1\u724c\u53ea\u662f\u7a7f\u7740\u4e0d\u540c\u8863\u670d\u7684\u5e7f\u544a\u5546\uff0c\u591a\u5e74\u6765\uff0cFacebook\u548c\u8c37\u6b4c\u751a\u81f3\u901a\u8fc7\u5404\u81ea\u7684\u5e7f\u544a\u6280\u672f\u7cfb\u7edf\u76f4\u63a5\u8fde\u63a5\u5404\u65b9\uff0c\u4e3a\u5957\u5229\u63d0\u4f9b\u4e86\u4fbf\u5229\u3002\n\u597d\u5427\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5e73\u53f0\u662f\u4e3a\u4e86\u4ee3\u8868\u5a92\u4f53\u516c\u53f8\u5411\u8425\u9500\u8005\u63d0\u4f9b\u53d7\u4f17\u800c\u83b7\u5f97\u62a5\u916c\u7684\uff0c\u4f46\u662f\u8425\u9500\u8005\u5230\u5e95\u4e3a\u4ec0\u4e48\u8981\u5fcd\u53d7\u88ab\u6b3a\u9a97\u5462\uff1f\u96be\u9053\u4ed6\u4eec\u4e0d\u80fd\u76f4\u63a5\u5411Facebook\u652f\u4ed8\u540c\u6837\u76847\u7f8e\u5143CPM\uff0c\u53bb\u6389\u4e2d\u95f4\u4eba\uff0c\u7701\u4e0b8\u7f8e\u5143\u7684\u4ef7\u5dee\u5417\uff1f\n\u55ef\uff0c\u4ed6\u4eec\u786e\u5b9e\u53ef\u4ee5\uff0c\u800c\u4e14\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5f53\u6d89\u53ca\u5230\u5728Facebook\u6216Google\u4e0a\u8d2d\u4e70\u53d7\u4f17\u65f6\uff0c\u8fd9\u6b63\u662f\u4ed6\u4eec\u6240\u505a\u7684\u3002\u4f46\u662f\uff0c\u8fd8\u8bb0\u5f97\u6211\u5728\u672c\u6587\u5f00\u5934\u5bf9\u4e0a\u4e0b\u6587\u7684\u8bc4\u8bba\u5417\uff1f\u4e00\u4e9b\u8425\u9500\u4eba\u5458\u4ecd\u7136\u76f8\u4fe1\uff0c\u5a92\u4f53\u54c1\u724c\u7684\u80cc\u666f\u53ef\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u7684\u4fe1\u606f\u8868\u73b0\u5f97\u66f4\u597d\uff0c\u4ed6\u4eec\u8fd9\u6837\u8ba4\u4e3a\u662f\u6b63\u786e\u7684\u3002\u56e0\u6b64\uff0c\u4ed6\u4eec\u4f1a\u82b1\u66f4\u591a\u7684\u94b1\uff0c\u8ba9\u4ed6\u4eec\u7684\u4fe1\u606f\u4e0e\u4ed6\u4eec\u8ba4\u4e3a\u662f\u9ad8\u8d28\u91cf\u7684\u793e\u8bba\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u5982\u679c\u5a92\u4f53\u54c1\u724c\u80fd\u4e3a\u4ed6\u4eec\u8d62\u5f97\u53d7\u4f17\uff0c\u90a3\u5c31\u66f4\u597d\u4e86--\u8fd9\u5c31\u51cf\u5c11\u4e86\u8425\u9500\u8005\u8981\u505a\u7684\u5de5\u4f5c\u3002\n\u4f46\u8ba9\u6211\u6f84\u6e05\u4e00\u4e0b\uff1a\u5957\u5229\u5f88\u7cdf\u7cd5\u3002\u5957\u5229\u53ea\u6709\u5728\u4fe1\u606f\u4e0d\u5b8c\u5168\u7684\u5e02\u573a\u4e2d\u624d\u6709\u5229\u53ef\u56fe\u3002\u5728\u65b0\u751f\u6001\u7cfb\u7edf\u7684\u65e9\u671f\u9636\u6bb5\uff0c\u5f53\u5a92\u4f53\u4e70\u5bb6\u4e0d\u592a\u719f\u6089\u5e7f\u544a\u6280\u672f\u7684\u5de5\u4f5c\u539f\u7406\u65f6\uff0c\u8fd9\u901a\u5e38\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6218\u7565\u3002\u968f\u7740\u8fd9\u4e9b\u4e70\u5bb6\u53d8\u5f97\u66f4\u806a\u660e\uff0c\u4ed6\u4eec\u5f00\u59cb\u6324\u538b\u5a92\u4f53\u516c\u53f8\u7684\u5229\u6da6\u7387\uff0c\u8ba9\u5185\u5bb9\u548c\u4e0a\u4e0b\u6587\u8d2c\u503c\uff0c\u5e76\u8d8a\u6765\u8d8a\u63a5\u8fd1\u4ed6\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece\u5e73\u53f0\u83b7\u5f97\u7684\u4ef7\u683c\u3002Demand Media\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u5341\u5e74\u524d\uff0c\u8fd9\u5bb6\u516c\u53f8\u6210\u529f\u5730\u5c06\u81ea\u5df1\u7f6e\u8eab\u4e8e\u8c37\u6b4c\u7684\u641c\u7d22\u7b97\u6cd5\u548c\u5e7f\u544a\u5546\u5e0c\u671b\u4e0e\u7279\u5b9a\u4e3b\u9898\u76f8\u5173\u7684\u5185\u5bb9\u4e4b\u95f4\u3002Demand\u56f4\u7ed5\u6d41\u884c\u7684\u8c37\u6b4c\u641c\u7d22\u521b\u5efa\u4e86\u5bf9\u5e7f\u544a\u5546\u53cb\u597d\u7684\u201c\u5185\u5bb9\u519c\u573a\u201d\uff0c\u4ece\u800c\u5b9e\u73b0\u4e8610\u4ebf\u7f8e\u5143\u7684\u9996\u6b21\u516c\u5f00\u52df\u80a1(IPO)\u3002\u4f46\u5e7f\u544a\u5546\u53d1\u73b0\u4e86\u5176\u4e2d\u7684\u5965\u5999\uff0cDemand\u4e00\u5ea6\u4ef7\u503c10\u4ebf\u7f8e\u5143\u7684\u4f30\u503c\u5728\u8fc7\u53bb\u4e94\u5e74\u91cc\u4e0b\u964d\u4e8620\u500d\u4ee5\u4e0a\u3002\u793e\u4ea4\u5a92\u4f53\u4e0a\u66fe\u7ecf\u96c4\u5fc3\u52c3\u52c3\u7684\u5957\u5229\u8005\u4e5f\u906d\u9047\u4e86\u7c7b\u4f3c\u7684\u547d\u8fd0\u3002\u5207\u8fbe\u3001Vivie\u3001BuzzFeed\u548c\u8bb8\u591a\u5176\u4ed6\u516c\u53f8\u90fd\u73a9\u8fc7\u8fd9\u4e2a\u6e38\u620f\uff0c\u4f46\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5e02\u573a\u5c06\u6839\u9664\u4e00\u79cd\u4efb\u610f\u884c\u4e3a\u3002(\u5207\u8fbe\u5728ARB\u88ab\u53d1\u73b0\u4e4b\u524d\u5c31\u8db3\u591f\u806a\u660e\u5730\u51fa\u552e-\u4f46\u5b83\u7684\u4f30\u503c\u53ea\u6709\u540c\u884c\u66fe\u7ecf\u62e5\u6709\u7684\u5929\u4ef7\u4f30\u503c\u7684\u4e00\u5c0f\u90e8\u5206)\u3002\n\u4f46\u7b49\u7b49\uff0c\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee-\u5a92\u4f53\u516c\u53f8\u4e0d\u662f\u5728\u589e\u52a0\u771f\u6b63\u7684\u4ef7\u503c\u5417\uff1f\u90a3\u4e48\u4f7f\u8425\u9500\u8005\u7684\u4fe1\u606f\u66f4\u76f8\u5173\u3001\u66f4\u5438\u5f15\u4eba\u7684\u8bed\u5883\u53c8\u5982\u4f55\u5462\uff1f\u8fd9\u96be\u9053\u4e0d\u503c\u94b1\u5417\uff1f\n\u5f53\u7136\u662f\u8fd9\u6837\uff0c\u4f46\u8fd9\u5c31\u662f\u5e73\u53f0\u5e7f\u544a\u8d2d\u4e70\u7f3a\u4e4f\u900f\u660e\u5ea6\u7684\u539f\u56e0\u6240\u5728\u3002\u89c2\u4f17\u8d2d\u4e70\u662f\u5728\u4e0d\u900f\u660e\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u7684-\u5404\u5927\u5e73\u53f0\u90fd\u5728\u6df1\u5ea6\u6295\u8d44\uff0c\u4ee5\u786e\u4fdd\u6ca1\u6709\u4eba\u771f\u6b63\u7406\u89e3\u6ce8\u610f\u529b\u662f\u5982\u4f55\u5b9a\u4ef7\u7684\u3002\u8fd9\u610f\u5473\u7740\u5a92\u4f53\u516c\u53f8\u5728Facebook\u6216\u8c37\u6b4c\u4e0a\u8d2d\u4e70\u53d7\u4f17\u5c06\u6c38\u8fdc\u5904\u4e8e\u4fe1\u606f\u52a3\u52bf-\u8ba9\u4ed6\u4eec\u9762\u4e34\u4e00\u79cd\u65b0\u578b\u7684\u5957\u5229\uff0c\u4e00\u79cd\u7531\u5e73\u53f0\u81ea\u5df1\u7684\u7b97\u6cd5\u6267\u884c\u7684\u5957\u5229\uff0c\u5e76\u4f7f\u5e73\u53f0\u7684\u5229\u6da6\u53d7\u76ca\u3002\u540c\u6837\uff0c\u5957\u5229\u5728\u5177\u6709\u4e0d\u5bf9\u79f0\u4fe1\u606f\u7279\u5f81\u7684\u5e02\u573a\u4e2d\u6548\u679c\u6700\u597d-\u4fe1\u606f\u4e0d\u5bf9\u79f0\u662f\u5e73\u53f0\u8fd0\u4f5c\u65b9\u5f0f\u7684\u4e00\u90e8\u5206\u3002\u5728\u8fc7\u53bb\u4e94\u5e74\u5de6\u53f3\u7684\u65f6\u95f4\u91cc\uff0c\u5927\u591a\u6570\u4e3b\u8981\u5a92\u4f53\u516c\u53f8\u90fd\u5f00\u59cb\u610f\u8bc6\u5230\uff0c\u4ed6\u4eec\u624d\u662f\u88ab\u73a9\u5f04\u7684\u4eba\u3002\n\u5e73\u53f0\u4e0a\u7684\u89c2\u4f17\u5957\u5229\u5177\u6709\u66f4\u5177\u7834\u574f\u6027\u7684\u5c5e\u6027\u3002\u56e0\u4e3a\u5a92\u4f53\u4e70\u5bb6\u5df2\u7ecf\u5c06\u4ed6\u4eec\u7684\u53d7\u4f17\u83b7\u53d6\u5916\u5305\u7ed9\u4e86\u5a92\u4f53\u516c\u53f8\u6216\u5e73\u53f0\u672c\u8eab\uff0c\u8425\u9500\u8005\u53d8\u5f97\u4e0e\u5176\u53d7\u4f17\u7684\u4e0a\u4e0b\u6587\u8131\u8282\u3002\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u5370\u8c61\u6563\u5e03\u5728\u6570\u767e\u4e07\u4e2a\u5fae\u5c0f\u7684\u5185\u5bb9\u5305\u4e2d\uff0c\u6240\u6709\u8fd9\u4e9b\u5185\u5bb9\u90fd\u6d88\u5931\u5728\u51e0\u4e4e\u6240\u6709\u53ef\u4ee5\u60f3\u8c61\u5230\u7684\u8bdd\u9898\u7684\u65e0\u4f11\u6b62\u5e16\u5b50\u7684\u6d77\u6d0b\u4e2d\u3002\u5c06\u6240\u6709\u54c1\u724c\u51dd\u805a\u5728\u4e00\u8d77\u7684\u80cc\u666f\u548c\u610f\u4e49\u5df2\u7ecf\u4e27\u5931\u3002\u5a92\u4f53\u516c\u53f8\u5728\u5229\u6da6\u7387\u4e0d\u65ad\u4e0b\u964d\u7684\u538b\u529b\u4e0b\uff0c\u5c06\u5077\u5de5\u51cf\u6599\uff0c\u8d2d\u4e70\u201c\u5783\u573e\u6d41\u91cf\u201d\uff0c\u751a\u81f3\u66f4\u7cdf\uff0c\u5236\u9020\u5783\u573e\u5185\u5bb9\uff0c\u6311\u9017\u6216\u8bf1\u9a97\u89c2\u4f17\u8fdb\u884c\u865a\u5047\u63a5\u89e6\u3002\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u5305\u88c5\u7bb1\u5f97\u5230\u4e86\u68c0\u67e5\uff0c\u89c2\u4f17\u5f97\u5230\u4e86\u670d\u52a1\uff0c\u5370\u8c61\u5f97\u5230\u4e86\u8bb0\u5f55\u3002\u4f46\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u793e\u8bba\u5185\u5bb9\u4f1a\u6076\u5316\uff0c\u54c1\u724c\u548c\u53d7\u4f17\u4e4b\u95f4\u7684\u6df1\u5c42\u5173\u7cfb\u4f1a\u51cf\u5f31\uff0c\u5a92\u4f53\u751f\u6001\u7cfb\u7edf\u5f00\u59cb\u5d29\u6e83\u3002\n\u55ef\uff0c\u5728\u91cd\u65b0\u8ba1\u7968\u65f6\uff0c\u6211\u4eec\u6b63\u5728\u63a2\u7d22\u524d\u8fdb\u7684\u9053\u8def\uff0c\u901a\u8fc7\u6211\u4eec\u672c\u6708\u5728Twitter\u4e0a\u63a8\u51fa\u7684\u5168\u65b0\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u3002\u6211\u4eec\u79f0\u5b83\u4e3a\u201c\u5b9e\u65f6\u53d9\u8ff0\u201d\uff0c\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684\u4e0b\u4e00\u671f\u6587\u7ae0\u4e2d(\u6bd5\u7adf\uff0c\u6211\u5728\u8fd9\u91cc\u5199\u4e862500\u5b57)\uff0c\u6211\u5c06\u66f4\u591a\u5730\u89e3\u91ca\u5b83\u80cc\u540e\u7684\u7406\u8bba\u3002\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u5728\u5e7f\u544a\u65f6\u4ee3\u7684\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u6211\u4eec\u6b63\u5728\u505a\u4ec0\u4e48\u7684\u5185\u5bb9(\u5509\uff0c\u4ed8\u8d39\u5899)\uff0c\u6216\u8005\u5728\u5f17\u96f7\u5fb7\u7684\u535a\u5ba2\u4e0a\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u6211\u4eec\u6b63\u5728\u505a\u4ec0\u4e48\u7684\u5185\u5bb9\u3002\u8c22\u8c22\u4f60\u7684\u5149\u4e34\uff0c\u6211\u671f\u5f85\u7740\u8fd9\u6b21\u8c08\u8bdd\uff0c\u6211\u5e0c\u671b\u8fd9\u80fd\u5f15\u53d1\u7075\u611f\u3002", "note_en": "Marketers \u2013 especially brand marketers: Too many of you have lost the script regarding the critical role you play in society. And while well-intentioned TV spots about \u201cgetting through this together\u201d are nice, they aren\u2019t a structural solution. It\u2019s time to rethink the relationship between marketers, media companies (not \u201ccontent creators,\u201d ick), and the audience.\n So let\u2019s talk about it. Grab your favorite beverage and read along. I\u2019m heading into a bit of media theory for the next couple thousand words \u2013 I hope this will start an interesting conversation.\n For those of you who want a  TL:DR summary, here it is: It\u2019s time to get back to the work marketers used to be really good at: Deciding on the appropriate context in which to engage your audience. And it\u2019s time to pull back from a habit most of you have fallen into: Letting the machines choose your audience for you. Thanks to new approaches which fuse at-scale ad targeting with high-quality editorial product, you can step into this renewed role without sacrificing the reach, precision, and targeting afforded by the likes of Facebook, Google, Twitter, and their kin. To understand how, let\u2019s review some history.\n   If you read this site back when I wrote regularly on media (roughly 2003-2015), you\u2019ll recall I laid out several basic tenets about how the media business works. It\u2019s comprised of three core components: Editorial (the media company\u2019s content), Audience (people who give their attention to the content), and Marketer (commercial actors who desire the Audience\u2019s attention in the context of the Editorial). Of course, in the past ten years, a fourth component has eclipsed all three: The Internet Platform.\n Before the major Internet platforms deconstructed the media business, the three original components came together in what we\u2019ll call a media product (I\u2019m still partial to \u201cpublication,\u201d but many think only of print when they hear that word). Print, television shows, and early web sites all served as vessels for a commercial relationship between\u00a0 Editorial, Audience, and Marketer. The media company took the financial risk of creating and distributing the media product, and if successful, the marketer paid to run advertising inside the media product. In some cases, the audience also paid a subscription fee for the editorial. But for most media companies, advertising support was crucial to chin the bar of profitability and make a go of it as a business.\n A critical element of the media-product-as-vessel model for commercial transactions was that  context matters. The media product created context for audience engagement, and if the marketer offered messaging that aligned with that context, it stood to reason that the audience would be more receptive to the advertiser\u2019s message. Suffice to say that with the rise of audience buying on massive platforms,  context has been lost, with nearly incalculable downsides across the media ecosystem (and society at large). More on that later on.\n Meanwhile, back in those pre-platform days, distribution was important, but it was also a constant. Most media companies consolidated distribution by acquiring broadcast licenses or cable networks (for television) or print distribution networks (if you were a magazine or newspaper company). And if you were a media startup, you could leverage those distribution networks for a relatively predictable rent \u2013 often without spending any capital up front. When we started  Wired, for example, we secured newsstand distribution by agreeing to split the revenue earned by our nascent magazine with our distribution agent.\n I call this old-school model \u201c Packaged Goods Media.\u201d Fifteen years ago I noted that \u201cPGM\u201d was giving way to a new model, which I termed \u201cConversational Media,\u201d or CM. CM, of course, was the precursor to \u201csocial media\u201d \u2013 Twitter, Facebook, YouTube \u2013 and as I thought out loud about this new phenomenon, I noted several crucial distinctions between it and Packaged Goods Media. I predicted that the economics of Editorial, Audience, and Marketing were all going to change dramatically. In many ways I was spot on. But in several others, I was dead wrong. Here\u2019s a summary of a few key points:\n Editorial models would evolve from \u201cdictation\u201d to \u201cconversational,\u201d where the audience \u2013 and knowledge of the audience through data \u2013 became a central driver of editorial creation.\n Distribution would become nearly free, obviating the rent-seeking monopolies held by major media companies. In fact, I wrote: \u201ceconomic differentiation based on the control of distribution \u2013 the very heart of PGM-based business models \u2013 is irrelevant in CM-based services.\u201d\n Online, publications become more like a service, rather than a product. I noted that software, which was still largely a packaged product, was also heading in this direction. That means media will have different economics and different advertising models over time (I called them \u201cnative advertising\u201d at the time).\n I\u2019d argue that over the next ten years I got the first and third predictions relatively right, but I entirely whiffed on how distribution would play out. I simply failed to imagine how Facebook, Google, and others would leverage their newfound control of audience attention. In  one piece from 2006, I wrote:\n \u201c\u2026finding massively scaled Conversational Media companies [besides Google] is a rather difficult search \u2026 it\u2019s unclear whether CM companies will mature into massive conglomerates like Time Warner.\u201d\n Well, it\u2019s certainly clear now. Facebook, Google, and their peers are among the most powerful and well-capitalized companies in the world, and they got that way by doing one thing very well: Capturing the attention of billions of us. That gives them a near monopoly on digital distribution, which they\u2019ve leveraged into a near monopoly on digital advertising. In the process, these tech platforms have eliminated the traditional role of publishers as a proxy for audience interest and engagement. I used to believe this trend spelled the end of high-quality independent media brands \u2013 indeed, it\u2019s why I didn\u2019t start a media brand after selling Federated back in 2013. But media models are always evolving, and I now see a new way forward. To understand that, we must first review where we stand today. And to do that, we must examine arbitrage.\n   If I were writing a sequel to \u201c The Search\u201d focused solely on how digital media models have shifted in the past 15 years,\u00a0 I\u2019d probably title it \u201cThe Arb.\u201d\n It would not be a pretty story. In the past ten years, audience arbitrage has become a dominant model of the digital media business. It\u2019s an awful business practice that erodes trust, devalues media brands, and dilutes the importance of marketing. What follows is a bit of a rant, but hell, you\u2019re still reading at this point, so refill your glass, and let\u2019s get to it.\n The dictionary definition of arbitrage is \u201cthe simultaneous buying and selling of securities, currency, or commodities in different markets or in derivative forms in order to take advantage of differing prices for the same asset.\u201d\n In media, the asset being arbitraged is audience attention. The arbitrageurs are publishers. Their enablers are the major tech platforms, fueled by dollars from advertisers.\n Here\u2019s how it works. A big publisher like Buzzfeed or Cheddar sells a million-dollar advertising deal to a marketing brand. The media company guarantees the marketer\u2019s message will collect a certain number of audience impressions or views, charging the marketer a \u201ccost per thousand\u201d for those impressions. (Known as \u201cCPM,\u201d cost per thousand pricing ranges widely, from a few pennies to $25-40 for \u201cpremium\u201d placements). Utilizing a Packaged Goods media model, the publisher might fulfill those impressions on its \u201cowned and operated\u201d properties, but over the past ten years, doing so\u00a0 has accrued significant drawbacks. The top three:\n It\u2019s  expensive. Acquiring and retaining audiences on a media company\u2019s own property is often far more costly than finding those same audiences on an at-scale platform like Facebook or Google.\n It lacks  sophisticated targeting. In the past decade, marketers have grown accustomed to the data-rich precision of large platforms. They don\u2019t want to pay for just any old Buzzfeed or Cheddar audience member. They want their messaging to reach exactly the target they specify, and most publishers don\u2019t have either the technology or the audience scale to fulfill the data-driven demands of modern marketers.\n It forces  extra work on the marketer. I am not the first, nor will I be the last to note that marketers and agencies don\u2019t like to do extra work. While plenty of larger publishers have built high-quality advertising solutions on their owned and operated channels, marketers view these point solutions as\u00a0 just one more channel they have to manage, analyze, and report on. It\u2019s just So Much Easier to buy Facebook, after all.\n Because of all this and more,  publishers have become audience buyers on Facebook, Google, and other networks. Enterprising publishers began packaging their own content with marketing messages from their sponsors, then they got busy promoting that bundle to audiences on Twitter, Facebook, and Youtube, among others.\n This is where \u201cthe arb\u201d comes in: The publisher will charge the marketer, say, a $15 CPM, but acquire their audiences on Facebook for $7, clearing an $8 profit on every thousand impressions.\n You might ask why the platforms or the marketers don\u2019t put a stop to this practice, and you\u2019d be right to ask. But consider the economic incentives, and things get a bit more clear. The platforms are getting paid for what they do all day long: the delivery of precise audience impressions at scale. As far as platforms are concerned, the media brands are just advertisers in different dress.\u00a0 Over the years, Facebook and Google have even accommodated the arbitrage by connecting all parties directly through their advertising technology systems.\n OK, so the platforms get paid to deliver audiences to marketers on behalf of media companies, but why on earth do the  marketers put up with being arb\u2019d? Couldn\u2019t they just pay the same $7 CPM directly to Facebook, eliminate the middle man, and save the $8 spread?\n Well, indeed they can, and in most cases when it comes to buying audience on Facebook or Google, that\u2019s exactly what they do. But remember my comments about  context way up toward the top of this article? Some marketers still believe that the context of a media brand can help their messaging perform better, and they\u2019re not wrong in that belief.\u00a0 So they\u2019ll pay a bit more to have their messaging associated with what they believe is quality editorial. And if that media brand does the work of acquiring that audience for them, so much the better \u2013 that\u2019s less work for the marketer to do.\n But let me be clear: arbitrage sucks. Arbitrage is only lucrative in markets with imperfect information. It\u2019s usually a great strategy in the early stages of a new ecosystem, when media buyers are less familiar with how advertising technology works. As those buyers get smarter, they start to squeeze the media company\u2019s margins, devaluing content and context, and pressing ever closer to the price they could get directly from the platform. A good example is Demand Media \u2013 a company that, a decade ago, managed to insert itself between Google\u2019s search algorithms and an advertiser\u2019s desire to be associated with content around a particular topic. Demand pulled off a billion-dollar IPO based on creating advertiser-friendly \u201ccontent farms\u201d around popular Google searches. But advertisers figured out the arb, and Demand\u2019s once billion-dollar valuation fell more than twenty fold in the past five years.\u00a0 A similar fate has befallen the once high-flying arbitrageurs\u00a0 of social media. Cheddar, Vice, BuzzFeed, and many others all played the game, but over time, markets will root out an arb. (Cheddar was smart enough to sell before its arb was uncovered \u2013 but it sold at a fraction of the sky-high valuations its peers once held).\n But wait, one might ask \u2013 aren\u2019t the media companies adding true value? What about that context, which makes a marketer\u2019s message more relevant and engaging? Isn\u2019t that worth something?\n It certainly is, but this is where the lack of transparency around ad buying on platforms comes into play. Audience buying is cloaked in opacity \u2013 the major platforms are deeply invested in making sure no one truly understands how attention is priced. That means a media company buying audience on Facebook or Google will always be at an informational disadvantage \u2013 exposing them to a new kind of arbitrage, one executed by the platform\u2019s own algorithms and benefiting the platform\u2019s bottom line. Again, arbitrage works best in markets with asymmetric information features \u2013 and informational asymmetry is built into how Platforms operate. Over the past five or so years, most major media companies have come to realize they\u2019re the ones being gamed.\n Audience arbitrage on platforms has even more destructive attributes. Because media buyers have outsourced their audience acquisition to either the media company or the platform itself, the marketer becomes disconnected from the context of its audience. Millions of impressions are scattered across millions of tiny content bundles, all of which are lost in a sea of endless posts on nearly every imaginable topic. The context and meaning that holds all brands together is lost.\u00a0 Media companies, pressed by ever-thinning margins, will cut corners, buying \u201cjunk traffic\u201d or worse, creating junk content that titillates or tricks audiences into false engagement. On the surface, boxes get checked, audiences get served, impressions get logged. But over time, editorial content deteriorates, deep relationships between brands and audiences attenuate, and the media ecosystem begins to fail.\n  Well, at The Recount we\u2019re exploring a way forward, through a brand new partnership we\u2019re launching on Twitter this month. We\u2019re calling it \u201cReal-Time Recount,\u201d and in the next installment of this post (I\u2019m pushing 2500 words here, after all), I\u2019ll explain more about the theory of the case behind it. For now, you can read more about what we\u2019re doing in this  Ad Age piece (paywalled, alas), or over on  Fred\u2019s blog. Thanks for coming along, and I look forward to the conversation I hope this will spark.", "posttime": "2020-07-06 09:25:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bed\u5883,context,\u5a92\u4f53", "title": "\u8425\u9500\u8005\u5df2\u7ecf\u653e\u5f03\u4e86\u8bed\u5883\uff0c\u6211\u4eec\u7684\u56fd\u5bb6\u8bdd\u8bed\u6b63\u5728\u53d7\u82e6", "title_en": "Marketers Have Given Up on Context, and Our National Discourse Is Suffering", "transed": 1, "url": "https://battellemedia.com/archives/2020/06/marketers-have-given-up-on-context-and-our-national-discourse-is-suffering", "via": "", "real_tags": ["\u8bed\u5883", "context", "\u5a92\u4f53"]}, {"category": "", "categoryclass": "", "imagename": "600cb0527cc2dbb7bef0a884fde76dbb.jpg", "infoid": 1010043, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u96c6\u4f53\u5996\u9b54\u5316\u5165\u4fb5\u6211\u4eec\u7684\u6587\u5316", "note_en": "Collective demonization invades our culture", "posttime": "2020-07-06 08:48:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u82cf\u8054,soviet,\u5996\u9b54\u5316", "title": "\u7f8e\u56fd\u7684\u82cf\u8054\u5fc3\u6001", "title_en": "The American Soviet Mentality", "transed": 1, "url": "https://www.tabletmag.com/sections/news/articles/american-soviet-mentality", "via": "", "real_tags": ["\u7f8e\u56fd", "\u82cf\u8054", "soviet", "\u5996\u9b54\u5316"]}, {"category": "", "categoryclass": "", "imagename": "1556e925c616150c018b7910c7500497.jpg", "infoid": 1010042, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u5f00\u59cb\u505a\u4e00\u4e9b\u975e\u5e38\u6709\u610f\u4e49\u7684\u4e8b\u60c5\u3002\u6211\u662f\u89d2\u5f62\u5f0f\u5e93\u7684\u7ef4\u62a4\u4eba\uff0c\u8fd9\u662f\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u89d2\u5f62\u5f0f\u5e93\u3002\u6211\u63d0\u4ea4\u4e86\u5f88\u591a\u4ee3\u7801\uff0c\u73b0\u5728\u8fd9\u4e2a\u5e93\u670933\u4e2a\u8d21\u732e\u8005\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u8d21\u732e\u8005\u4e2d\u81f3\u5c11\u6709\u4e94\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4ed6\u4eec\u7b2c\u4e00\u6b21\u5411\u5f00\u6e90\u5e93\u505a\u51fa\u8d21\u732e\u3002\n\u6211\u771f\u7684\u5f88\u52aa\u529b\u5730\u5c1d\u8bd5\u8ba9\u5b83\u5f88\u5bb9\u6613\u8d21\u732e\u7ed9\u68f1\u89d2\u5206\u660e\u7684\u4eba\u3002\u6211\u653e\u5f03\u4e86\u5f00\u653e\u6e90\u7801\u9879\u76ee\u7ef4\u62a4\u4eba\u5458\u505a\u7684\u6240\u6709\u5e38\u89c1\u4e8b\u60c5\uff0c\u4ee5\u53ca\u4e00\u4e9b\u65e0\u5173\u7d27\u8981\u7684\u5e38\u89c1\u4e8b\u60c5\u2026\u2026\u3002\n\u6dfb\u52a0\u4e00\u4e2agithook(\u4f7f\u7528ghooks)\u6765\u8fd0\u884c\u6d4b\u8bd5\u5e76\u4f7f\u7528eslint\u68c0\u67e5\u7f16\u7801\u6807\u51c6\uff0c\u8fd9\u6837\u4eba\u4eec\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u5728\u516c\u5173\u4e0a\u6765\u56de\u5954\u6ce2\u800c\u611f\u5230\u6cae\u4e27\u3002\n\u6211\u751a\u81f3\u5f55\u4e86\u5f55\u50cf\u5e26\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8bbe\u7f6e\u3002\u4f46\u6211\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u662f\uff0c\u4ecd\u7136\u7f3a\u5c11\u4e00\u4e9b\u4e1c\u897f\u3002\n\u51e0\u4e2a\u6708\u524d\uff0c\u5f62\u6001\u5404\u5f02\u7684Koen Weyn\u6536\u5230\u4e86Koen Weyn\u7684\u62c9\u8bf7\u6c42\uff0c\u4ed6\u60f3\u4fee\u590d\u8be5\u9879\u76ee\u7684\u4e00\u4e9bIE8\u517c\u5bb9\u6027\u95ee\u9898\u3002\u4ed6\u63d0\u4ea4\u4e86\u4e00\u4efd\u5f88\u597d\u7684\u516c\u5173(Pull Request)\uff0c\u6211\u4eec\u5bf9\u5b83\u8fdb\u884c\u4e86\u4e00\u4e9b\u8fed\u4ee3\uff0c\u7136\u540e\u5b83\u5c31\u88ab\u5408\u5e76\u4e86\u3002\u4ed6\u5411\u6211\u63d0\u5230\uff0c\u8fd9\u662f\u4ed6\u7b2c\u4e00\u6b21\u63d0\u51faGitHub\u62c9\u53d6\u8bf7\u6c42\u3002\u90a3\u662f\u4e00\u6b21\u6109\u5feb\u7684\u7ecf\u5386\u3002\u6210\u4e3a\u67d0\u4eba\u9996\u6b21\u516c\u5f00\u6e90\u7801\u8d21\u732e\u7684\u4e00\u90e8\u5206\u662f\u5f88\u9177\u7684\u3002\n\u76f4\u5230\u51e0\u4e2a\u6708\u540e\uff0c\u6211\u624d\u6709\u4e86\u4e00\u4e2a\u60f3\u6cd5\u3002\u5728\u5f00\u53d1\u4e00\u4e2a\u65b0\u7279\u6027TDD(\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1)\u7684\u8fc7\u7a0b\u4e2d(\u5e76\u4e14\u975e\u5e38\u559c\u6b22\u5b83)\uff0c\u6211\u5b8c\u6210\u4e86\u6d4b\u8bd5\uff0c\u5e76\u51c6\u5907\u5f00\u59cb\u5b9e\u73b0\u3002\u7136\u540e\u6211\u6709\u4e86\u4e00\u4e2a\u60f3\u6cd5\uff1a\u201c\u4e3a\u4ec0\u4e48\u6211\u4e0d\u8ba9\u522b\u4eba\u6765\u505a\u8fd9\u4ef6\u4e8b\u5462\uff1f\u6211\u5f88\u6e05\u695a\u6211\u4f1a\u600e\u4e48\u505a\u3002\u6211\u53ef\u4ee5\u505a\u4e9b\u624b\u628a\u624b\u7684\u5de5\u4f5c\uff0c\u5e2e\u52a9\u522b\u4eba\u7b2c\u4e00\u6b21\u4e3a\u5f00\u6e90\u505a\u8d21\u732e\u3002\u201c\u3002\n\u5c0f\u5207\u7ebf\u2026\u3002\u6211\u662f\u4e24\u4e2a\u5b69\u5b50\u7684\u5e78\u798f\u7236\u4eb2\u3002\u5f53\u6211\u548c\u5b69\u5b50\u4eec\u4e00\u8d77\u6559\u4e66\u6216\u73a9\u800d\u65f6\uff0c\u6709\u65f6\u6211\u4e0d\u5f97\u4e0d\u8ba9\u6211\u7684\u5973\u513f\u7ed9\u5979\u7684\u5f1f\u5f1f\u4e00\u4e2a\u56de\u7b54\u95ee\u9898\u7684\u673a\u4f1a\u3002\u5f88\u591a\u4eba\u90fd\u6e34\u671b\u53d6\u60a6\u548c\u5e2e\u52a9\u6211\u4eec\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u628a\u7403\u6254\u7ed9\u513f\u5b50\u65f6\uff0c\u5982\u679c\u6211\u4e0d\u8ba9\u5973\u513f\u8ba9\u5979\u7684\u5c0f\u5f1f\u5f1f\u56de\u7b54\uff0c\u5979\u5c31\u4f1a\u8bf4\u51fa\u7b54\u6848\uff0c\u800c\u4ed6\u4f1a\u6709\u66f4\u96be\u7684\u65f6\u95f4\u5b66\u4e60/\u611f\u89c9\u5230\u56de\u7b54\u7684\u6ee1\u8db3\u611f\u3002\u6211\u60f3\u6709\u65f6\u5019\u6211\u4eec\u6210\u5e74\u4eba\u4e5f\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\n\u56e0\u6b64\uff0c\u6211\u51b3\u5b9a\u63d0\u4ea4\u6d4b\u8bd5\uff0c\u4f46\u662f\u8df3\u8fc7\u4e86(\u8fd9\u6837\u6784\u5efa\u5c31\u4e0d\u4f1a\u5931\u8d25)(\u4f7f\u7528Mocha\u4e2d\u7684description be.skip)\uff0c\u7136\u540e\u6211\u5c06\u5b83\u4eec\u5411\u4e0a\u63a8\uff0c\u5e76\u5728\u95ee\u9898\u4e2d\u6dfb\u52a0\u4e86\u4ee5\u4e0b\u6ce8\u91ca\uff1a\n\u5c3d\u91cf\u8ba9\u5b83\u53d8\u5f97\u7b80\u5355\u3002\u51c6\u786e\u5730\u8bf4\u51fa\u4ee3\u7801\u9700\u8981\u653e\u5230\u54ea\u91cc\uff0c\u5e76\u63a8\u8350\u4e00\u79cd\u597d\u7684\u65b9\u6cd5\u3002\n\u7b2c\u4e00\u6b21\u8fdb\u5165\u5f00\u6e90\u9886\u57df\u6700\u56f0\u96be\u7684\u90e8\u5206\u4e0d\u662f\u7279\u6027\u7684\u5b9e\u73b0\uff0c\u800c\u662f\u5f04\u6e05\u695a\u5982\u4f55\u771f\u6b63\u8d21\u732e\u4ee3\u7801\u3002\n\u6240\u4ee5\u6211\u51c6\u786e\u5730\u89e3\u91ca\u4e86\u5728\u8fd9\u4e2a\u95ee\u9898\u4e0a\u5e94\u8be5\u600e\u4e48\u505a\uff0c\u7136\u540e\u6211\u5728Twitter\uff0cGitter\u548cSlake\u4e0a\u731b\u70c8\u62a8\u51fb\u4e86\u5b83\uff1a\n\u6211\u53ea\u4f1a\u63a5\u53d7\u4e00\u4e2a\u516c\u5173\u4e3a\u8fd9\u4e00\u4e2a\u8c01\u4ece\u6765\u6ca1\u6709\u8d21\u732e\u8fc7\u5f00\u653e\u6e90\u7801\u4e4b\u524d\u3002\u4f7f\u7528\u8bf4\u660e\uff1ahttps://t.co/UnhqsHnvta\u3002\n-\u80af\u7279\u00b7C\u00b7\u591a\u5179\ud83d\udce1(@kentcdodds)2015\u5e746\u670812\u65e5\u3002\n\u6ca1\u8fc7\u591a\u4e45\uff0c\u6211\u5c31\u6709\u51e0\u4e2a\u4eba\u5728\u6240\u6709\u4e09\u79cd\u5a92\u4f53\u4e0a\u627e\u5230\u6211\uff0c\u8be2\u95ee\u4ed6\u4eec\u662f\u5426\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u3002\u6709\u4e86\u8fd9\u4e2a\u516c\u5173\uff0cStephen Bluck\u7ec8\u4e8e\u8fc8\u51fa\u4e86\u8fdb\u519b\u5f00\u6e90\u793e\u533a\u7684\u7b2c\u4e00\u6b65\u3002\n\u611f\u89c9\u68d2\u6781\u4e86\uff01\u6240\u4ee5\u6211\u5bfb\u627e\u673a\u4f1a\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002\u6211\u5df2\u7ecf\u6709\u4e09\u6b21\u8fd9\u6837\u505a\u7684\u673a\u4f1a\u4e86\uff0c\u6bcf\u6b21\u5bf9\u6211\u548c\u8d21\u732e\u8005\u6765\u8bf4\u90fd\u662f\u503c\u5f97\u7684\u3002\u8be5\u9879\u76ee\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u4ec5\u9650\u9996\u6b21\u4f7f\u7528\u7684\u6807\u7b7e\u3002\u611f\u8c22\u9053\u683c\u62c9\u65af\u00b7\u6885\u68ee\u3001\u5fb7\u4e07\u00b7\u8d1d\u7279\u5c14\u548c\u5e03\u83b1\u6069\u00b7\u9a6c\u5207\u65af\u57fa\u63a5\u53d7\u6311\u6218\u3002\u5bf9\u4e8e\u90a3\u4e9b\u8fd8\u6ca1\u6709\u673a\u4f1a\u7684\u4eba\u6765\u8bf4\uff0c\u522b\u62c5\u5fc3\uff0c\u2026\u80af\u5b9a\u8fd8\u4f1a\u6709\u66f4\u591a\u3002\n\u73b0\u5728\uff0c\u5982\u679c\u6211\u81ea\u5df1\u52a8\u624b\u7684\u8bdd\uff0c\u6211\u80fd\u4e0d\u80fd\u66f4\u5feb\u5730\u5b8c\u6210\u8fd9\u4ef6\u4e8b\uff0c\u7136\u540e\u7ee7\u7eed\u6211\u7684\u5de5\u4f5c\u5462\uff1f\u5f53\u7136\u4e86\u3002\u4f46\u8fd9\u5e76\u4e0d\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u6e90\u8d21\u732e\u8005\u7684\u5168\u90e8\u610f\u4e49\u6240\u5728\u3002\u4ea4\u4ed8\u5e2e\u52a9\u4ed6\u4eba\u7684\u597d\u8f6f\u4ef6\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\uff0c\u4f46\u4e5f\u8981\u610f\u8bc6\u5230\uff0c\u6709\u5f88\u591a\u4eba\u53ea\u662f\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u5f00\u59cb\u3002\n\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u53ef\u80fd\u4f1a\u95ee\u81ea\u5df1\uff0c\u201c\u5982\u679c\u6211(\u548c\u5176\u4ed6lib\u7528\u6237)\u4e0d\u60f3\u7b49\u4e0a\u51e0\u5929\u624d\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\u600e\u4e48\u529e\uff1f\u201d\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u4eba\u4eec\u90fd\u5f88\u60f3\u8bd5\u4e00\u8bd5\u3002\u5728\u77ed\u77ed\u51e0\u4e2a\u5c0f\u65f6\u5185\uff0c\u81f3\u5c11\u63d0\u4ea4\u4e86\u4e00\u4efd\u516c\u5173(\u6709\u65f6\u662f\u51e0\u4efd)\uff0c\u7136\u540e\u8fdb\u884c\u8fed\u4ee3\u548c\u5408\u5e76\u3002\n\u6211\u56de\u60f3\u8d77\u6211\u7b2c\u4e00\u6b21\u62c9\u8f66\u7684\u8981\u6c42\uff0c\u6ca1\u4ec0\u4e48\u4e86\u4e0d\u8d77\u7684\u3002\u5b83\u771f\u7684\u5f88\u5c0f\u3002\u6211\u5b66\u4f1a\u4e86\u5982\u4f55\u4f7f\u7528Git\u548cGitHub\u3002\u8fd9\u7ed9\u4e86\u6211\u4e00\u4e2a\u673a\u4f1a\uff0c\u8ba9\u6211\u660e\u767d\u8d21\u732e\u662f\u4ec0\u4e48\u611f\u89c9\uff0c\u8fd9\u662f\u4e00\u79cd\u6709\u4ef7\u503c\u7684\u611f\u89c9\u3002\u4f5c\u4e3a\u5f00\u6e90\u9879\u76ee\u7684\u7ef4\u62a4\u8005\uff0c\u6211\u4eec\u6709\u80fd\u529b\u5e2e\u52a9\u521d\u6765\u4e4d\u5230\u7684\u4eba\u7b2c\u4e00\u6b21\u611f\u53d7\u5230\u8fd9\u4e00\u70b9\uff0c\u5e76\u505a\u51fa\u8d21\u732e\u3002\u90a3\uff0c\u6211\u4eec\u505a\u5427!\u3002\n\u5982\u679c\u60a8\u662f\u5f00\u653e\u6e90\u7801\u9879\u76ee\u7ef4\u62a4\u4eba\u5458\uff0c\u4e0d\u59a8\u5c1d\u8bd5\u4e00\u4e0b\u3002\u5c06\u6807\u7b7eFirst-Timers-Only\u6dfb\u52a0\u5230\u60a8\u7684\u9879\u76ee\u4e2d\uff0c\u4ee5\u4fbf\u4eba\u4eec\u53ef\u4ee5\u5728\u6b64\u5904\u627e\u5230\u5b83\u3002\u60a8\u8fd8\u53ef\u4ee5\u8003\u8651\u5f15\u7528makeapullrequest.com\u3002\u6211\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u5bf9\u5f00\u6e90\u793e\u533a\u7684\u65b0\u6765\u8005\u66f4\u52a0\u53cb\u597d\u3002\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u77e5\u9053\uff0c\u4f60\u53ef\u80fd\u4f1a\u627e\u5230\u8fd9\u4e2a\u9879\u76ee\u7684\u65b0\u7684\u4e3b\u8981\u8d21\u732e\u8005\uff0c\u751a\u81f3\u662f\u4e00\u4e2a\u65b0\u7684\u7ec8\u751f\u670b\u53cb\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u4eec\u6295\u5165\u5f00\u6e90\u7684\u4eba\u8d8a\u591a\u8d8a\u597d\u3002\u901a\u8fc7\u8fd9\u6837\u7684\u5f00\u653e\uff0c\u6211\u4eec\u6b63\u5728\u5e2e\u52a9\u201c\u628a\u5584\u826f\u5e26\u56de\u5f00\u6e90\u201d\u3002", "note_en": "I&#39;ve started doing something recently that&#39;s been really rewarding. I&#39;m themaintainer of  angular-formly afairly popular library for forms with  AngularJS. I&#39;vecommitted a lot of code and the library has 33 contributorsright now. For at least five of these contributors, it was their first timecontributing to an open source library.\n I&#39;ve tried really hard to make it easy to contribute to angular-formly. I&#39;vedone all of the common things an open source project maintainer does and someless common things...\n Add a githook (using  ghooks) that runs the tests andchecks coding standards with  eslint so people don&#39;t havethe frustration of going back and forth on the PR.\n I&#39;ve even recorded screencaststo demonstrate how to get things setup. But what I didn&#39;t realize was that therewas still something missing...\n  A few months back, angular-formly got a pull request from Koen Weyn who wanted to fix some IE8compatibility issues with the project. He submitted a good PR( pull request), weiterated on it a little bit, and it got merged. He mentioned to me that it washis first ever GitHub pull request. That was a neat experience. It was cool tobe a part of someone\u2019s first ever open source code contribution.\n It wasn\u2019t until a few months later that I had an idea. While developing a new feature doingTDD( Test Driven Development)all the way (and loving it), I finished the tests and was about ready to starton the implementation. Then I had a thought: \u201cWhy don\u2019t I let someone else workon this? I know exactly what I\u2019d do. I could do some hand-holding and helpsomeone contribute to open source for the first time.\u201d\n Small tangent\u2026 I\u2019m a happy father of two. When teaching or playing with my kids,sometimes I have to ask my daughter to give her brother a chance to answer aquestion. Many people are eager to please and help out. So when I throw out asoft-ball to my son, if I don\u2019t ask my daughter to let her little brotheranswer, she\u2019ll spout out the answer and he\u2019ll have a harder timelearning/feeling the satisfaction of answering. I think that sometimes we adultscan behave the same way.\n So I decided to commit the tests, but skipped (so the build wouldn\u2019t fail)(using  describe.skip from  Mocha), then I pushed them upand added this commentto the issue:\n  Make it as is easy as possible. Say exactly where the code needs to go andrecommend a good approach.\n The hard part of getting into open source for the first time isn\u2019t theimplementation of a feature, but figuring out how to actually contribute code.\n So I explain exactly what to do in the issue, and then I blasted it out on Twitter, Gitter, and Slack:\n I will only accept a PR for this one from someone who has never contributed to open source before. Instructions:  https://t.co/UnhqsHnvta\n\u2014 Kent C. Dodds \ud83d\udce1 (@kentcdodds)  June 12, 2015\n It wasn\u2019t long before I had several people reach out to me on all three mediumsasking if they could take a swing at it. Finally with this PR, Stephen Bluck took his first step into the opensource community.\n It felt awesome! So I looked for opportunities to do this some more. I\u2019ve hadthe chance to do this three more timesand it\u2019s been rewarding for both me and the contributor each time. The projectnow has a first-timers-onlylabel for this purpose. Shoutouts go to Douglas Mason, Devan Beitel, and Brian Macheski for taking up the challenge. Forthose of you who haven\u2019t had a chance yet, don\u2019t worry, there\u2019s definitely moreto come\u2026\n  Now, could I have finished it quicker and moved on my way if I\u2019d just done itmyself? Of course. But that\u2019s not what it\u2019s all about as an open sourcecontributor. It\u2019s fun delivering good software that helps other people, but alsorealize that there are tons of people out there who just don\u2019t know where to getstarted.\n Some of you may be asking yourself, \u201cwhat if I (and other lib users) don\u2019t wantto wait days for the feature?\u201d From my experience, people are eager to try itout. At least one PR (sometimes several) is submitted, iterated on, and mergedwithin a matter of a few hours.\n I\u2019ve thought back on my first pull request.It was nothing spectacular. It was really small. I learned how to use git andGitHub. It gave me an opportunity to figure out what contributing feels like.That\u2019s a rewarding feeling. As open source project maintainers, we are empoweredwith the ability to help newcomers feel this for the first time and contributeback. Let\u2019s do it!\n   If you are an open source project maintainer, give this a shot. Add the label first-timers-only to your project so people can find it here.You might also consider referencing makeapullrequest.com. I think that we can be morefriendly to newcomers in the open source community. You never know, you may finda new main contributor to the project or even a new life-long friend. Eitherway, the more people we get into open source the better. And by being open likethis, we\u2019re helping\u201c Bring Kindness back to Open Source.\u201d", "posttime": "2020-07-06 08:48:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ec5\u9650,timers,\u5f00\u6e90", "title": "\u4ec5\u9650\u65b0\u624b", "title_en": "First Timers Only", "transed": 1, "url": "https://kentcdodds.com/blog/first-timers-only", "via": "", "real_tags": ["\u4ec5\u9650", "timers", "\u5f00\u6e90"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010041, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u5411JavaScript\u5f00\u53d1\u4eba\u5458\u4ecb\u7ecdRust\u8bed\u8a00\u7cfb\u5217\u6587\u7ae0\u7684\u7b2c\u4e09\u90e8\u5206\u3002\u4ee5\u4e0b\u662f\u8fc7\u53bb\u7684\u7ae0\u8282\uff1a\nfn main(){let Income=100\uff1blet Tax=Calculate_Tax(Income)\uff1bprintln\uff01(&#34\uff1b{}&34\uff1b\uff0cTax)\uff1b}FN Calculate_Tax(Income\uff1aI32)-&gt\uff1bI32{\u8fd4\u8fd8\u6536\u5165*90/100\uff1b}\u3002\n\u4e0a\u9762\u53ef\u80fd\u770b\u5230\u7684\u552f\u4e00\u533a\u522b\u662f\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u6ce8\u91ca\u3002\n\u53ef\u4ee5\u8df3\u8fc7return\u5173\u952e\u5b57\uff0c\u5728\u6ca1\u6709\u663e\u5f0f\u8fd4\u56de\u7684\u60c5\u51b5\u4e0b\u770b\u5230\u4ee3\u7801\u662f\u5f88\u5e38\u89c1\u7684\u3002\u5982\u679c\u8981\u9690\u5f0f\u8fd4\u56de\uff0c\u8bf7\u786e\u4fdd\u4ece\u8be5\u884c\u4e2d\u5220\u9664\u5206\u53f7\u3002\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u91cd\u6784\u4e3a\uff1a\nfn main(){let Income=100\uff1blet Tax=Calculate_Tax(Income)\uff1bprintln\uff01(&#34\uff1b{}&34\uff1b\uff0cTax)\uff1b}FN Calculate_Tax(Income\uff1aI32)-&gt\uff1bI32{-\u8fd4\u8fd8\u6536\u5165*90/100\uff1b+\u6536\u5165*90/100}\u3002\n\u7bad\u5934\u51fd\u6570\u662f\u73b0\u4ee3JavaScript\u4e2d\u7684\u4e00\u4e2a\u6d41\u884c\u7279\u6027-\u5b83\u4eec\u5141\u8bb8\u6211\u4eec\u4ee5\u7b80\u6d01\u7684\u65b9\u5f0f\u7f16\u5199\u51fd\u6570\u4ee3\u7801\u3002\n\u9508\u83cc\u4e5f\u6709\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u5b83\u4eec\u88ab\u79f0\u4e3a\u201c\u95ed\u5408\u201d\u3002\u8fd9\u4e2a\u540d\u79f0\u53ef\u80fd\u6709\u70b9\u6df7\u4e71\uff0c\u9700\u8981\u4e60\u60ef\uff0c\u56e0\u4e3a\u5728JavaScript\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u51fd\u6570\u548c\u7bad\u5934\u51fd\u6570\u521b\u5efa\u95ed\u5305\u3002\n//\u9508\u5b57Add=|a\uff1aI32\uff0cb\uff1aI32|-&gt\uff1bI32{a+b}\uff1badd(1\uff0c2)\uff1b//3\n//JavaScript let add=(a\uff0cb)=&gt\uff1b{let sum=a+b\uff1breturn sum\uff1b}\uff1badd(1\uff0c2)\uff1b//3\u3002\n//\u9508\u5355Add=|a\uff1aI32\uff0cb\uff1aI32|-&gt\uff1bI32{let sum=a+b\uff1breturn sum\uff1b}\uff1badd(1\uff0c2)\uff1b//3\u3002\n\u95ed\u5305\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u7c7b\u578b\u6ce8\u91ca\uff0c\u4f46\u4e3a\u4e86\u6e05\u695a\u8d77\u89c1\uff0c\u6211\u5728\u8fd9\u91cc\u6dfb\u52a0\u4e86\u5b83\u4eec\u3002\nfn main(){let Income=100\uff1blet Tax=Calculate_Tax(Income)\uff1bprintln\uff01(&#34\uff1b{}&34\uff1b\uff0cTax)\uff1b}FN Calculate_Tax(Income\uff1aI32)-&gt\uff1bI32{If Income&lt\uff1b10{Return 0\uff1b}Else If Income&gt\uff1b=10&amp\uff1b&amp\uff1bIncome&lt\uff1b50{Return 20\uff1b}Else{Return 50\uff1b}}\u3002\nfn main(){\u8bbemut count=0\uff1bWhile count&lt\uff1b10{println\uff01(&#34\uff1b{}&#34\uff1b\uff0ccount)\uff1bcount+=1\uff1b}}\u3002\nRust\u4e2d\u4e0d\u5b58\u5728Normal for\u5faa\u73af\uff0c\u6211\u4eec\u9700\u8981\u5728\u5faa\u73af\u4e2d\u4f7f\u7528WHILE\u6216FOR..\u3002for..in\u5faa\u73af\u7c7b\u4f3c\u4e8eJavaScript\u4e2d\u7684for..\u5faa\u73af\uff0c\u5b83\u4eec\u5728\u8fed\u4ee3\u5668\u4e0a\u5faa\u73af\u3002\nfn main(){\u8bbeNumbers=[1\uff0c2\uff0c3\uff0c4\uff0c5]\uff1b\u5bf9\u4e8e\u6570\u5b57\u4e2d\u7684n\u3002iter(){println\uff01(&#34\uff1b{}&#34\uff1b\uff0cn)\uff1b}}\u3002\n\u6ce8\u610f\uff0c\u6211\u4eec\u4e0d\u662f\u76f4\u63a5\u5728\u6570\u7ec4\u4e0a\u8fed\u4ee3\uff0c\u800c\u662f\u4f7f\u7528\u6570\u7ec4\u7684ITER\u65b9\u6cd5\u3002\n\u5728JavaScript\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u50cfmap/filter/duce/etc\u8fd9\u6837\u7684\u6570\u7ec4\u65b9\u6cd5\u4ee3\u66fffor\u5faa\u73af\u6765\u5bf9\u6570\u7ec4\u6267\u884c\u8ba1\u7b97\u6216\u8f6c\u6362\u3002\n\u4f8b\u5982\uff0c\u8fd9\u91cc\u6211\u4eec\u83b7\u53d6\u4e00\u4e2a\u6570\u5b57\u6570\u7ec4\uff0c\u5c06\u5176\u52a0\u500d\uff0c\u7136\u540e\u8fc7\u6ee4\u51fa\u5c0f\u4e8e10\u7684\u5143\u7d20\uff1a\n\u51fd\u6570main(){\u8bbeNumbers=[1\uff0c2\uff0c3\uff0c4\uff0c5]\uff1b\u8bbeDouble=(N)=&gt\uff1bn*2\uff1b\u8bbe\u5c0f\u4e8e_ten=(N)=&gt\uff1bn&lt\uff1b10\uff1b\u8bbeResult=Numbers\u3002\u8d34\u56fe(\u53cc\u500d)\u3002\u8fc7\u6ee4\u5668(\u5c0f\u4e8e_10)\uff1b\u63a7\u5236\u53f0\u3002log(\u7ed3\u679c)\uff1b//[2\uff0c4\uff0c6\uff0c8]}\u3002\n\u5728Rust\u4e2d\uff0c\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5bf9\u5411\u91cf\u4f7f\u7528map/filter/etc\uff0c\u9700\u8981\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n\u6700\u540e\uff0c\u4f7f\u7528Collect\u3001Find\u3001SUM\u7b49\u4f7f\u7528\u8005\u5c06\u8fed\u4ee3\u5668\u8f6c\u6362\u56de\u5411\u91cf\u3002\nfn main(){let number=vec\uff01[1\uff0c2\uff0c3\uff0c4\uff0c5]\uff1blet Double=|n\uff1a&amp\uff1bI32|-&gt\uff1bI32{n*2}\uff1blet less_10=|n\uff1a&amp\uff1bI32|-&gt\uff1bbool{*n&lt\uff1b10}\uff1blet result\uff1aVEC&lt\uff1bI32&gt\uff1b=Numbers\u3002ITER()\u3002\u8d34\u56fe(\u53cc\u500d)\u3002\u8fc7\u6ee4\u5668(\u5c0f\u4e8e_10)\u3002Collect()\uff1bprintln\uff01(&#34\uff1b{\uff1a\uff1f}&#34\uff1b\uff0cresult)\uff1b//[2\uff0c4\uff0c6\uff0c8]}\u3002\n\u60a8\u5e94\u8be5\u80fd\u591f\u7406\u89e3\u4e0a\u9762\u7684\u5927\u90e8\u5206\u4ee3\u7801\uff0c\u4f46\u662f\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u4ee5\u4e0b\u51e0\u70b9\uff1a\n&amp\uff1b\u662f\u5f15\u7528\u64cd\u4f5c\u7b26\uff0c*\u662f\u53d6\u6d88\u5f15\u7528\u64cd\u4f5c\u7b26\u3002ITER\u65b9\u6cd5\u4e0d\u662f\u590d\u5236\u5411\u91cf\u4e2d\u7684\u5143\u7d20\uff0c\u800c\u662f\u5c06\u5b83\u4eec\u4f5c\u4e3a\u5f15\u7528\u4f20\u9012\u7ed9\u94fe\u4e2d\u7684\u4e0b\u4e00\u4e2a\u9002\u914d\u5668\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5728\u5730\u56fe\u7684\u95ed\u5408\u90e8\u5206\u4f7f\u7528&amp\uff1bI32(\u53cc\u7cbe\u5ea6)\u3002\u8fd9\u4e2a\u95ed\u5305\u8fd4\u56deI32\uff0c\u4f46\u662fFilter\u4f7f\u7528\u5f15\u7528\u8c03\u7528\u5b83\u7684\u95ed\u5305(\u5c0f\u4e8e_10)\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u6211\u4eec\u9700\u8981\u518d\u6b21\u4f7f\u7528&amp\uff1bI32\u7684\u539f\u56e0\u3002\u8981\u53d6\u6d88\u5f15\u7528\u53c2\u6570\uff0c\u6211\u4eec\u4f7f\u7528*\u8fd0\u7b97\u7b26\u3002\u6211\u4eec\u5c06\u5728\u4ee5\u540e\u7684\u7ae0\u8282\u4e2d\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u8fd9\u4e00\u70b9\u3002\n\u5bf9\u4e8eVec&lt\uff1bI32&gt\uff1b\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u8fd8\u6ca1\u6709\u5411\u53d8\u91cf\u6dfb\u52a0\u7c7b\u578b\u6ce8\u91ca\uff0c\u56e0\u4e3aRust\u53ef\u4ee5\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\uff0c\u4f46\u662f\u5bf9\u4e8eCollect\uff0c\u6211\u4eec\u9700\u8981\u660e\u786e\u5730\u544a\u8bc9Rust\u6211\u4eec\u9700\u8981Vec&lt\uff1bI32&gt\uff1b\u8f93\u51fa\u3002\n\u9664\u4e86map\u548cfilter\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u8fed\u4ee3\u5668\u4e2d\u4f7f\u7528\u5927\u91cf\u5176\u4ed6\u6709\u7528\u7684\u9002\u914d\u5668\u3002\n\u5728Github\u3001Twitter\u6216LinkedIn\u4e0a\u627e\u5230\u6211\u3002\u8bf7\u968f\u65f6\u901a\u8fc7sheshbabu[at]gmail.com\u4e0e\u6211\u8054\u7cfb", "note_en": "This is the third part in a series about introducing the Rust language to JavaScript developers. Here are the past chapters:\n    fn  main ( )  {  let income  =  100 ;  let tax  =  calculate_tax (income ) ;  println! ( &#34;{}&#34; , tax ) ; } fn  calculate_tax (income : i32 )  -&gt; i32  {  return income  *  90  /  100 ; }\n The only difference you might see above is the type annotations for arguments and return values.\n The  return keyword can be skipped and it\u2019s very common to see code without an explicit return. If you\u2019re returning implicitly, make sure to remove the semicolon from that line. The above function can be refactored as:\n fn main() { let income = 100; let tax = calculate_tax(income); println!(&#34;{}&#34;, tax);}fn calculate_tax(income: i32) -&gt; i32 { - return income * 90 / 100; + income * 90 / 100}\n  Arrow functions are a popular feature in modern JavaScript - they allow us to write functional code in a concise way.\n Rust has something similar and they are called \u201cClosures\u201d. The name might be a bit confusing and would require getting used to because in JavaScript, closures can be created using both normal and arrow functions.\n          // Rust let add  =   |a : i32 , b : i32 |  -&gt; i32  { a  + b  } ; add ( 1 ,  2 ) ;  // 3\n  // JavaScript let add  =  (a , b )  = &gt;  {  let sum  = a  + b ;  return sum ; } ; add ( 1 ,  2 ) ;  // 3\n // Rust let add  =   |a : i32 , b : i32 |  -&gt; i32  {  let sum  = a  + b ;  return sum ; } ; add ( 1 ,  2 ) ;  // 3\n  Closures don\u2019t need the type annotations most of the time, but I\u2019ve added them here for clarity.\n  fn  main ( )  {  let income  =  100 ;  let tax  =  calculate_tax (income ) ;  println! ( &#34;{}&#34; , tax ) ; } fn  calculate_tax (income : i32 )  -&gt; i32  {  if income  &lt;  10  {  return  0 ;  }  else  if income  &gt;=  10  &amp;&amp; income  &lt;  50  {  return  20 ;  }  else  {  return  50 ;  } }\n   fn  main ( )  {  let  mut count  =  0 ;  while count  &lt;  10  {  println! ( &#34;{}&#34; , count ) ; count  +=  1 ;  } }\n Normal  for loops don\u2019t exist in Rust, we need to use  while or  for..in loops.  for..in loops are similar to the  for..of loops in JavaScript and they loop over an iterator.\n fn  main ( )  {  let numbers  =  [ 1 ,  2 ,  3 ,  4 ,  5 ] ;  for n  in numbers . iter ( )  {  println! ( &#34;{}&#34; , n ) ;  } }\n Notice that we\u2019re not iterating directly over the array but instead using the  iter method of the array.\n    In JavaScript, we can use array methods like map/filter/reduce/etc instead of  for loops to perform calculations or transformations on an array.\n For example, here we take an array of numbers, double them and filter out the elements that are less than 10:\n function  main ( )  {  let numbers  =  [ 1 ,  2 ,  3 ,  4 ,  5 ] ;  let double  =  (n )  = &gt; n  *  2 ;  let less_than_ten  =  (n )  = &gt; n  &lt;  10 ;  let result  = numbers . map (double ) . filter (less_than_ten ) ; console . log (result ) ;  // [2, 4, 6, 8] }\n In Rust, we can\u2019t directly use map/filter/etc over vectors, we need to follow these steps:\n Finally convert the iterator back to a vector using  consumers such as  collect,  find,  sum etc\n  fn  main ( )  {  let numbers  =  vec! [ 1 ,  2 ,  3 ,  4 ,  5 ] ;  let double  =   |n :  &amp;i32 |  -&gt; i32  { n  *  2  } ;  let less_than_10  =   |n :  &amp;i32 |  -&gt; bool  {  *n  &lt;  10  } ;  let result : Vec &lt;i32 &gt;  = numbers . iter ( ) . map (double ) . filter (less_than_10 ) . collect ( ) ;  println! ( &#34;{:?}&#34; , result ) ;  // [2, 4, 6, 8] }\n You should be able to understand most of the code above but you might notice few things off here:\n  The  &amp; is the reference operator and the  * is the dereference operator. The  iter method instead of copying the elements in the vector, it passes them as references to the next adapter in the chain. This is why we use  &amp;i32 in the map\u2019s closure (double). This closure returns  i32 but  filter calls its closure (less_than_10) with reference so that\u2019s why we need to use  &amp;i32 again. To dereference the argument, we use the  * operator. We\u2019ll cover this in more detail in future chapters.\n Regarding  Vec&lt;i32&gt;, so far we haven\u2019t added type annotations to variables as Rust can infer the types automatically, but for  collect, we need to be explicitly tell Rust that we expect a  Vec&lt;i32&gt; output.\n Aside from map and filter, there are ton of other  useful adapters that we can use in iterators.\n Find me in  Github ,  Twitter  or  LinkedIn .  Feel free to contact me at sheshbabu [at] gmail.com", "posttime": "2020-07-06 08:29:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,\u5f00\u53d1,rust,javascript", "title": "\u9762\u5411JavaScript\u5f00\u53d1\u4eba\u5458\u7684Rust-\u51fd\u6570\u548c\u63a7\u5236\u6d41", "title_en": "Rust for JavaScript Developers \u2013 Functions and Control Flow", "transed": 1, "url": "http://www.sheshbabu.com/posts/rust-for-javascript-developers-functions-and-control-flow/", "via": "", "real_tags": ["java", "\u5f00\u53d1", "rust"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1010040, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u73b0\u5728\u5199\u4e00\u672c\u5173\u4e8e\u5e94\u7528\u5bc6\u7801\u5b66\u7684\u4e66\u5df2\u7ecf\u6709\u4e00\u5e74\u534a\u7684\u65f6\u95f4\u4e86\uff0c\u6211\u7684\u65c5\u7a0b\u5373\u5c06\u7ed3\u675f\uff0c\u56e0\u4e3a\u6211\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u96c4\u5fc3\u52c3\u52c3\u7684\u7ae0\u8282\u8981\u5199\uff1a\u4e0b\u4e00\u4ee3\u5bc6\u7801\u5b66(\u6211\u5c06\u7528\u8fd9\u4e00\u7ae0\u6765\u8c08\u8bba\u5c06\u53d8\u5f97\u8d8a\u6765\u8d8a\u5b9e\u7528\u7684\u5bc6\u7801\u5b66\uff1a\u540e\u91cf\u5b50\u5bc6\u7801\u5b66\u3001\u540c\u6001\u52a0\u5bc6\u3001\u591a\u65b9\u8ba1\u7b97\u548cZK-snarks)\u3002\n\u6211\u88ab\u95ee\u8fc7\u5f88\u591a\u6b21\uff0c\u4e3a\u4ec0\u4e48\u8981\u5199\u4e00\u672c\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u65b0\u4e66\uff1f\u6211\u4e3a\u4ec0\u4e48\u8981\u8bfb\u4f60\u7684\u4e66\uff1f\u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f60\u5fc5\u987b\u660e\u767d\u8fd9\u4e00\u5207\u662f\u4ece\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u7684\u2026\u3002\n\u4eca\u5929\uff0c\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u51e0\u4e4e\u4efb\u4f55\u4e1c\u897f\uff0c\u4f60\u53ea\u9700\u5728\u8c37\u6b4c\u4e0a\u641c\u7d22\u5373\u53ef\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u5bc6\u7801\u5b66\u6765\u8bf4\uff0c\u8d44\u6e90\u53ef\u80fd\u76f8\u5f53\u532e\u4e4f\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u6b63\u5728\u5bfb\u627e\u7684\u662f\u4ec0\u4e48\u3002\n\u6709\u4e00\u5929\uff0c\u4e3a\u4e86\u4e0a\u8bfe\uff0c\u6211\u4e0d\u5f97\u4e0d\u5b9e\u65bd\u4e00\u9879\u5dee\u5206\u529f\u7387\u5206\u6790\u653b\u51fb\u3002\u6211\u5f53\u65f6\u6b63\u7528\u5934\u649e\u5899\uff0c\u8bd5\u56fe\u5f04\u6e05\u695a\u4fdd\u7f57\u00b7\u79d1\u5f7b\u7684\u767d\u76ae\u4e66\u60f3\u8981\u8bf4\u4ec0\u4e48\uff0c\u4f46\u627e\u4e0d\u5230\u4e00\u4e2a\u5f88\u597d\u7684\u8d44\u6e90\u6765\u5f88\u597d\u5730\u89e3\u91ca\u5b83\u3002\u6240\u4ee5\u6211\u53c8\u649e\u4e86\u4e00\u4e0b\u5934\uff0c\u6700\u7ec8\u5f97\u5230\u4e86\u5b83\u3002\u7136\u540e\u6211\u60f3\u6211\u53ef\u4ee5\u5e2e\u52a9\u522b\u4eba\u3002\u6240\u4ee5\u6211\u753b\u4e86\u4e00\u4e9b\u56fe\u8868\uff0c\u628a\u5b83\u4eec\u5236\u4f5c\u6210\u52a8\u753b\uff0c\u7136\u540e\u8bb0\u5f55\u4e0b\u81ea\u5df1\u6b63\u5728\u770b\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u4e2a\u5f55\u50cf\u5e26\u3002\n\u6559\u80b2\u7684\u7b2c\u4e00\u6b65\u8db3\u4ee5\u8ba9\u6211\u60f3\u8981\u505a\u66f4\u591a\uff0c\u6211\u5f00\u59cb\u5236\u4f5c\u66f4\u591a\u8fd9\u6837\u7684\u89c6\u9891\uff0c\u5e76\u5f00\u59cb\u5728\u8fd9\u4e2a\u535a\u5ba2\u4e0a\u5199\u66f4\u591a\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u6587\u7ae0(\u73b0\u5728\u603b\u5171\u6709500\u591a\u7bc7\u6587\u7ae0)\u3002\n\u6211\u5f88\u65e9\u5c31\u610f\u8bc6\u5230\u56fe\u8868\u5bf9\u7406\u89e3\u590d\u6742\u7684\u6982\u5ff5\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u5947\u602a\u7684\u662f\uff0c\u8be5\u9886\u57df\u7684\u5927\u591a\u6570\u8d44\u6e90\u90fd\u56de\u907f\u5b83\u4eec\u3002\u4f8b\u5982\uff0c\u5bc6\u7801\u5b66\u4e2d\u4efb\u4f55\u60f3\u5230AES-CBC\u7684\u4eba\u90fd\u4f1a\u76f4\u63a5\u60f3\u5230\u7ef4\u57fa\u767e\u79d1\u56fe\u8868\uff1a\n\u6240\u4ee5\u6211\u5728\u8fd9\u91cc\uff0c\u8bd5\u56fe\u89e3\u91ca\u6211\u6240\u5b66\u5230\u7684\u4e00\u5207\uff0c\u52aa\u529b\u601d\u8003\u4ec0\u4e48\u6837\u7684\u7b80\u5355\u56fe\u8868\u53ef\u4ee5\u8f7b\u677e\u5730\u4f20\u8fbe\u8fd9\u4e9b\u590d\u6742\u7684\u6982\u5ff5\u3002\u8fd9\u5c31\u662f\u6211\u5f00\u59cb\u8003\u8651\u5199\u4e00\u672c\u4e66\u7684\u65f6\u5019\uff0c\u5728\u66fc\u5b81\u51fa\u7248\u793e\u4e0e\u6211\u7b7e\u7ea6\u51fa\u7248\u4e4b\u524d\uff0c\u5df2\u7ecf\u6709\u5f88\u591a\u5e74\u4e86\u3002\n\u7531\u4e8e\u957f\u671f\u7684\u7231\u597d\uff0c\u6211\u6ca1\u6709\u5f00\u59cb\u5bc6\u7801\u5b66\u3002\u6211\u8bfb\u5b8c\u4e86\u7406\u8bba\u6570\u5b66\u5b66\u58eb\u5b66\u4f4d\uff0c\u4e0d\u77e5\u9053\u4e0b\u4e00\u6b65\u8981\u505a\u4ec0\u4e48\u3002\u6211\u4e00\u751f\u90fd\u5728\u7f16\u7a0b\uff0c\u6211\u60f3\u628a\u4e24\u8005\u8c03\u548c\u8d77\u6765\u3002\u81ea\u7136\u800c\u7136\uff0c\u6211\u5bf9\u5bc6\u7801\u5b66\u4ea7\u751f\u4e86\u597d\u5947\uff0c\u56e0\u4e3a\u5b83\u4f3c\u4e4e\u4e24\u5168\u5176\u7f8e\uff0c\u4e8e\u662f\u5f00\u59cb\u9605\u8bfb\u6211\u53ef\u4ee5\u652f\u914d\u7684\u4e0d\u540c\u4e66\u7c4d\u3002\u6211\u5f88\u5feb\u53d1\u73b0\u4e86\u6211\u751f\u6d3b\u7684\u4f7f\u547d\u3002\n\u4e0d\u8fc7\uff0c\u6709\u4e9b\u4e8b\u60c5\u8ba9\u6211\u5f88\u607c\u706b\u3002\u7279\u522b\u662f\u4ece\u5386\u53f2\u5f00\u59cb\u7684\u5197\u957f\u7684\u4ecb\u7ecd\u3002\u6211\u53ea\u5bf9\u6280\u672f\u7ec6\u8282\u611f\u5174\u8da3\uff0c\u800c\u4e14\u4e00\u76f4\u90fd\u662f\u8fd9\u6837\u3002\u6211\u5bf9\u81ea\u5df1\u53d1\u8a93\uff0c\u5982\u679c\u6211\u5199\u4e00\u672c\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u4e66\uff0c\u6211\u5c31\u4e0d\u4f1a\u5199\u4e00\u884c\u5173\u4e8e\u7ef4\u683c\u6d85\u5c14\u5bc6\u7801\u3001\u51ef\u6492\u5bc6\u7801\u548c\u5176\u4ed6\u5bc6\u7801\u7684\u6587\u7ae0\u3002\n\u56e0\u6b64\uff0c\u5728\u7533\u8bf7\u4e86\u6ce2\u5c14\u591a\u5927\u5b66\u7684\u5bc6\u7801\u5b66\u7855\u58eb\u5b66\u4f4d\u5e76\u83b7\u5f97\u4e86\u8be5\u5b66\u79d1\u7684\u5b66\u4f4d\u540e\uff0c\u6211\u8ba4\u4e3a\u6211\u5df2\u7ecf\u4e3a\u8fd9\u4e2a\u4e16\u754c\u505a\u597d\u4e86\u51c6\u5907\u3002\u6211\u6240\u77e5\u9053\u7684\u5f88\u5c11\u3002\u6211\u8ba4\u4e3a\u975e\u5e38\u5b9e\u7528\u7684\u5b66\u4f4d\u5b9e\u9645\u4e0a\u7f3a\u4e4f\u5173\u4e8e\u6211\u5373\u5c06\u653b\u51fb\u7684\u73b0\u5b9e\u4e16\u754c\u534f\u8bae\u7684\u5f88\u591a\u4e1c\u897f\u3002\u6211\u82b1\u4e86\u4e00\u4e2a\u5b66\u671f\u7684\u65f6\u95f4\u5b66\u4e60\u692d\u5706\u66f2\u7ebf\u7684\u6570\u5b66\uff0c\u4f46\u5bf9\u5b83\u4eec\u5982\u4f55\u7528\u4e8e\u5bc6\u7801\u7b97\u6cd5\u4e00\u65e0\u6240\u77e5\u3002\u6211\u5df2\u7ecf\u4e86\u89e3\u4e86LFSR\uff0cElGamal\uff0cDes\u548c\u4e00\u7cfb\u5217\u5176\u4ed6\u5bc6\u7801\u539f\u8bed\u3002\n\u56e0\u6b64\uff0c\u5f53\u6211\u521a\u8fdb\u5165\u8fd9\u4e2a\u884c\u4e1a\u65f6(\u5728Matasano/NCC Group)\uff0c\u6211\u7684\u7b2c\u4e00\u4efd\u5de5\u4f5c\u662f\u5ba1\u6838OpenSS\u3002\u8fd9\u662f\u600e\u4e48\u56de\u4e8b\uff1f\u6211\u8bb0\u5f97\u6bcf\u5929\u56de\u5bb6\u65f6\u90fd\u5934\u75bc\u5f97\u5389\u5bb3\u3002\u771f\u4ed6\u5988\u7684\u662f\u4e2a\u56fe\u4e66\u9986\u3002\u5f53\u65f6\u6211\u6839\u672c\u4e0d\u77e5\u9053\u591a\u5e74\u540e\u6211\u4f1a\u6210\u4e3aTLS 1.3\u7684\u5408\u8457\u8005\u3002\n\u4f46\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u5df2\u7ecf\u5728\u60f3\uff1a\u8fd9\u662f\u6211\u5728\u5b66\u6821\u5e94\u8be5\u5b66\u5230\u7684\u77e5\u8bc6\uff0c\u6211\u73b0\u5728\u5b66\u5230\u7684\u77e5\u8bc6\u5bf9\u6211\u8fdb\u5165\u73b0\u5b9e\u4e16\u754c\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u6bd5\u7adf\u6211\u73b0\u5728\u662f\u4e00\u540d\u4e13\u95e8\u4ece\u4e8b\u5bc6\u7801\u6280\u672f\u7684\u5b89\u5168\u4ece\u4e1a\u8005\uff0c\u6211\u6b63\u5728\u5ba1\u67e5\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5bc6\u7801\u5e94\u7528\u7a0b\u5e8f\uff0c\u6211\u6b63\u5728\u505a\u4eba\u4eec\u5728\u5b8c\u6210\u5bc6\u7801\u5b66\u4f4d\u540e\u5e0c\u671b\u4ed6\u4eec\u62e5\u6709\u7684\u5de5\u4f5c\uff0c\u6211\u5b9e\u73b0\u3001\u9a8c\u8bc1\u3001\u4f7f\u7528\u548c\u5efa\u8bae\u4f7f\u7528\u4ec0\u4e48\u5bc6\u7801\u7b97\u6cd5\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u662f\u6211\u6b63\u5728\u5199\u7684\u8fd9\u672c\u4e66\u7684\u7b2c\u4e00\u4e2a\u8bfb\u8005\uff0c\u8fd9\u662f\u6211\u4f1a\u5199\u7ed9\u6211\u8fc7\u53bb\u7684\u81ea\u5df1\u7684\uff0c\u4e3a\u4e86\u8ba9\u6211\u4e3a\u73b0\u5b9e\u4e16\u754c\u505a\u597d\u51c6\u5907\u3002\n\u6211\u7684\u54a8\u8be2\u5de5\u4f5c\u8ba9\u6211\u5ba1\u6838\u4e86\u8bb8\u591a\u73b0\u5b9e\u4e16\u754c\u7684\u5bc6\u7801\u5e94\u7528\u7a0b\u5e8f\uff0c\u6bd4\u5982OpenSSL\uff0c\u8c37\u6b4c\u7684\u52a0\u5bc6\u5907\u4efd\u7cfb\u7edf\uff0cCloudflare\u7684TLS 1.3\u5b9e\u73b0\uff0cWe\u2018s Encrypt\u7684\u8bc1\u4e66\u6388\u6743\u534f\u8bae\uff0cZCash\u7684Saving\u534f\u8bae\uff0cNuCypher\u7684\u95e8\u9650\u4ee3\u7406\u91cd\u65b0\u52a0\u5bc6\u65b9\u6848\uff0c\u4ee5\u53ca\u51e0\u5341\u4e2a\u548c\u51e0\u5341\u4e2a\u5176\u4ed6\u73b0\u5b9e\u4e16\u754c\u7684\u5bc6\u7801\u5e94\u7528\u7a0b\u5e8f\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4e0d\u80fd\u516c\u5f00\u63d0\u53ca\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u3002\n\u5728\u6211\u5de5\u4f5c\u7684\u65e9\u671f\uff0c\u6211\u7684\u4efb\u52a1\u662f\u5ba1\u8ba1\u4e00\u5bb6\u6211\u65e0\u6cd5\u547d\u540d\u7684\u5927\u516c\u53f8\u7684\u81ea\u5b9a\u4e49\u5b89\u5168\u4f20\u8f93\u534f\u8bae\u3002\u7ed3\u679c\u53d1\u73b0\uff0c\u4ed6\u4eec\u5fd8\u4e86\u7b7e\u7f72\u4e34\u65f6\u5bc6\u94a5\uff0c\u8fd9\u5b8c\u5168\u7834\u574f\u4e86\u6574\u4e2a\u534f\u8bae\u3002\u4efb\u4f55\u6709\u5b89\u5168\u4f20\u8f93\u534f\u8bae\u7ecf\u9a8c\u7684\u4eba\u90fd\u4f1a\u72af\u4e00\u4e2a\u65b0\u624b\u9519\u8bef\uff0c\u4f46\u90a3\u4e9b\u8ba4\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u8bd5\u9a8c\u8fc7\u8db3\u591f\u591a\u7684\u4eba\u6765\u4f7f\u7528\u4ed6\u4eec\u81ea\u5df1\u7684\u5bc6\u7801\u7684\u4eba\u5ffd\u7565\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u6211\u8bb0\u5f97\u5728\u5408\u7ea6\u7ed3\u675f\u65f6\u89e3\u91ca\u4e86\u8fd9\u4e2a\u6f0f\u6d1e\uff0c\u6574\u4e2a\u623f\u95f4\u7684\u5de5\u7a0b\u5e08\u90fd\u6c89\u9ed8\u4e86\u6574\u657430\u79d2\u3002\n\u5728\u6211\u7684\u804c\u4e1a\u751f\u6daf\u4e2d\uff0c\u8fd9\u4e2a\u6545\u4e8b\u91cd\u590d\u4e86\u5f88\u591a\u6b21\u3002\u6709\u4e00\u6b21\uff0c\u5728\u4e3a\u53e6\u4e00\u4e2a\u5ba2\u6237\u5ba1\u6838\u52a0\u5bc6\u8d27\u5e01\u65f6\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4ece\u73b0\u6709\u7684\u4ea4\u6613\u4e2d\u4f2a\u9020\u4ea4\u6613\u3002\u67e5\u770b\u53e6\u4e00\u4e2a\u5ba2\u6237\u7684TLS\u5b9e\u73b0\u65f6\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u4e9b\u5fae\u5999\u7684\u65b9\u6cd5\u6765\u7834\u574fRSA\u5b9e\u73b0\uff0c\u7136\u540e\u5b83\u53d8\u6210\u4e86\u4e00\u672c\u767d\u76ae\u4e66(RSA\u7684\u53d1\u660e\u8005\u4e4b\u4e00)\uff0c\u5bfc\u81f4\u4e86\u6570\u5341\u4e2aCVE\u3002\u6700\u8fd1\uff0c\u4f5c\u4e3a\u6211\u5199\u4e66\u7684\u4e00\u90e8\u5206\uff0c\u6211\u5728\u9605\u8bfb\u6709\u5173Matrix\u7684\u6587\u7ae0\u65f6\uff0c\u610f\u8bc6\u5230\u4ed6\u4eec\u7684\u8eab\u4efd\u9a8c\u8bc1\u534f\u8bae\u5b8c\u5168\u88ab\u7834\u574f\uff0c\u5bfc\u81f4\u4ed6\u4eec\u7684\u7ec8\u7aef\u5b8c\u5168\u5d29\u6e83-\n\u5728\u4f7f\u7528\u5bc6\u7801\u5b66\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5931\u8d25\u7684\u4e8b\u60c5\u592a\u591a\u4e86\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u77e5\u9053\u6211\u5fc5\u987b\u4e3a\u6b64\u5199\u70b9\u4ec0\u4e48\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u7684\u4e66\u91cc\u6709\u5f88\u591a\u8fd9\u6837\u7684\u8f76\u4e8b\u3002\n\u4f5c\u4e3a\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4f1a\u7528\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u68c0\u67e5\u5bc6\u7801\u5e93\u548c\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u53d1\u73b0\u4e86\u9519\u8bef(\u4f8b\u5982\uff0cGolang\u7684\u6807\u51c6\u5e93\u4e2d\u7684CVE-2016-3959)\uff0c\u6211\u7814\u7a76\u4e86\u5e93\u53ef\u4ee5\u6b3a\u9a97\u60a8\u6ee5\u7528\u5b83\u4eec\u7684\u65b9\u6cd5(\u4f8b\u5982\uff0c\u8bf7\u53c2\u9605\u6211\u7684\u8bba\u6587How to Backdoor Diffie-Hellman)\uff0c\u6211\u8fd8\u5efa\u8bae\u4f7f\u7528\u54ea\u4e9b\u5e93\u3002\u5f00\u53d1\u4eba\u5458\u6c38\u8fdc\u4e0d\u77e5\u9053\u8981\u4f7f\u7528\u54ea\u4e2a\u5e93\uff0c\u800c\u6211\u603b\u662f\u53d1\u73b0\u7b54\u6848\u5f88\u68d8\u624b\u3002\n\u6211\u63a5\u7740\u53d1\u660e\u4e86DISCO\u534f\u8bae\uff0c\u5e76\u7528\u4e0d\u52301,000\u884c\u4ee3\u7801\u7528\u51e0\u79cd\u8bed\u8a00\u7f16\u5199\u4e86\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684\u5bc6\u7801\u5e93\u3002DISCO\u53ea\u4f9d\u8d56\u4e8e\u4e24\u4e2a\u5bc6\u7801\u539f\u8bed\uff1aSHA-3\u548ccurve25519\u7684\u6392\u5217\u3002\u662f\u7684\uff0c\u5f00\u53d1\u4eba\u5458\u57281000\u884c\u4ee3\u7801\u4e2d\u53ea\u9700\u8981\u8fd9\u4e24\u4e2a\u5143\u7d20\u5c31\u53ef\u4ee5\u8fdb\u884c\u4efb\u4f55\u7c7b\u578b\u7684\u8ba4\u8bc1\u5bc6\u94a5\u4ea4\u6362\u3001\u7b7e\u540d\u3001\u52a0\u5bc6\u3001MAC\u3001\u6563\u5217\u3001\u5bc6\u94a5\u6d3e\u751f\u7b49\u3002\u8fd9\u8ba9\u6211\u5bf9\u4e00\u4e2a\u597d\u7684\u5bc6\u7801\u5e93\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u6709\u4e86\u4e00\u4e2a\u72ec\u7279\u7684\u89c6\u89d2\u3002\n\u6211\u5e0c\u671b\u6211\u7684\u4e66\u5305\u542b\u8fd9\u4e9b\u5b9e\u7528\u7684\u89c1\u89e3\uff0c\u56e0\u6b64\uff0c\u81ea\u7136\u5730\uff0c\u4e0d\u540c\u7684\u7ae0\u8282\u5305\u542b\u5982\u4f55\u4f7f\u7528\u5907\u53d7\u5c0a\u656c\u7684\u5bc6\u7801\u5e93\u5728\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u4e2d\u8fdb\u884c\u52a0\u5bc6\u7684\u793a\u4f8b\u3002\n\u5f53\u6211\u5728\u9ed1\u5e3d\u5b66\u9662(Black Hat)\u8fdb\u884c\u5e74\u5ea6\u5bc6\u7801\u5b66\u57f9\u8bad\u65f6\uff0c\u4e00\u4e2a\u5b66\u751f\u6765\u627e\u6211\uff0c\u95ee\u6211\u662f\u5426\u53ef\u4ee5\u63a8\u8350\u4e00\u672c\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u597d\u4e66\u6216\u5728\u7ebf\u8bfe\u7a0b\u3002\u6211\u8bb0\u5f97\u6211\u66fe\u5efa\u8bae\u90a3\u540d\u5b66\u751f\u9605\u8bfbCoursera\u4e0a\u7684Boneh&amp\uff1bShoup\u548cBoneh\u7684\u5bc6\u7801\u5b66I\u7684\u90a3\u672c\u4e66\u3002\n\u8fd9\u540d\u5b66\u751f\u544a\u8bc9\u6211\uff1a\u201c\u554a\uff0c\u6211\u8bd5\u8fc7\u4e86\uff0c\u592a\u7406\u8bba\u5316\u4e86\uff01\u201d\u8fd9\u4e2a\u7b54\u6848\u8ba9\u6211\u5370\u8c61\u6df1\u523b\u3002\u8d77\u521d\u6211\u4e0d\u540c\u610f\uff0c\u4f46\u6162\u6162\u5730\u610f\u8bc6\u5230\u4ed6\u4eec\u662f\u5bf9\u7684\u3002\u8fd9\u4e9b\u8d44\u6e90\u4e2d\u7684\u5927\u90e8\u5206\u90fd\u662f\u76f8\u5f53\u91cd\u7684\u6570\u5b66\u77e5\u8bc6\uff0c\u800c\u4e14\u5927\u591a\u6570\u4e0e\u5bc6\u7801\u5b66\u4ea4\u4e92\u7684\u5f00\u53d1\u4eba\u5458\u90fd\u4e0d\u60f3\u5904\u7406\u6570\u5b66\u3002\u2028\u4ed6\u4eec\u8fd8\u6709\u4ec0\u4e48\uff1f\u5f53\u65f6\u53e6\u5916\u4e24\u4e2a\u9887\u53d7\u5c0a\u656c\u7684\u8d44\u6e90\u662f\u201c\u5e94\u7528\u5bc6\u7801\u5b66\u201d\u548c\u201c\u5bc6\u7801\u5de5\u7a0b\u201d(\u90fd\u6765\u81ea\u65bd\u5948\u5c14)\u3002\u4f46\u8fd9\u4e24\u672c\u4e66\u5f00\u59cb\u53d8\u5f97\u76f8\u5f53\u8fc7\u65f6\u3002\u201c\u5e94\u7528\u5bc6\u7801\u5b66\u201d\u82b1\u4e864\u7ae0\u65f6\u95f4\u3002\u6709\u6574\u6574\u4e00\u7ae0\u662f\u5173\u4e8e\u5bc6\u7801\u64cd\u4f5c\u6a21\u5f0f\u7684\uff0c\u4f46\u6ca1\u6709\u4e00\u7ae0\u662f\u5173\u4e8e\u8ba4\u8bc1\u52a0\u5bc6\u7684\u3002\u5bc6\u7801\u5de5\u7a0b\u53ea\u63d0\u5230\u4e86\u692d\u5706\u66f2\u7ebf\u5bc6\u7801(\u5728\u811a\u6ce8\u4e2d)\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u7684\u8bb8\u591a\u89c6\u9891\u6216\u535a\u5ba2\u5e16\u5b50\u6b63\u5728\u6210\u4e3a\u4e00\u4e9b\u5bc6\u7801\u5b66\u6982\u5ff5\u7684\u5f88\u597d\u7684\u4e3b\u8981\u53c2\u8003\u8d44\u6599\u3002\n\u6e10\u6e10\u5730\uff0c\u6211\u7684\u8bb8\u591a\u5b66\u751f\u5f00\u59cb\u5bf9\u52a0\u5bc6\u8d27\u5e01\u611f\u5174\u8da3\uff0c\u5c31\u8fd9\u4e2a\u4e3b\u9898\u63d0\u51fa\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u95ee\u9898\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u5f00\u59cb\u5ba1\u6838\u8d8a\u6765\u8d8a\u591a\u7684\u52a0\u5bc6\u8d27\u5e01\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u7ec8\u4e8e\u8f6c\u5230Facebook\u7684\u4e00\u4efd\u5de5\u4f5c\u6765\u7814\u7a76Libra.CryptoCurrency\u73b0\u5728\u662f\u6700\u70ed\u95e8\u7684\u5de5\u4f5c\u9886\u57df\u4e4b\u4e00\uff0c\u5b83\u6df7\u5408\u4e86\u8bb8\u591a\u975e\u5e38\u6709\u8da3\u7684\u5bc6\u7801\u539f\u8bed\uff0c\u8fd9\u4e9b\u539f\u8bed\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u6ca1\u6709\u89c1\u8fc7\u73b0\u5b9e\u4e16\u754c\u7684\u7528\u4f8b(\u96f6\u77e5\u8bc6\u8bc1\u660e\u3001\u805a\u5408\u7b7e\u540d\u3001\u95e8\u9650\u5bc6\u7801\u5b66\u3001\u591a\u65b9\u8ba1\u7b97\u3001\u5171\u8bc6\u534f\u8bae\u3001\u5bc6\u7801\u7d2f\u52a0\u5668\u3002\u6e05\u5355\u4e0d\u80dc\u679a\u4e3e)\n\u6211\u77e5\u9053\u6211\u53ef\u4ee5\u5199\u4e00\u4e9b\u4e1c\u897f\u544a\u8bc9\u5b66\u751f\u3001\u5f00\u53d1\u4eba\u5458\u3001\u987e\u95ee\u548c\u5176\u4ed6\u4eba\u2026\u2026\u3002\u73b0\u4ee3\u5e94\u7528\u5bc6\u7801\u5b66\u7684\u5168\u90e8\u5185\u5bb9\u3002\n\u8fd9\u5c06\u662f\u4e00\u672c\u516c\u5f0f\u5f88\u5c11\uff0c\u4f46\u5145\u6ee1\u4e86\u5f88\u591a\u56fe\u8868\u7684\u4e66\u3002\n\u8fd9\u5c06\u662f\u4e00\u672c\u51e0\u4e4e\u6ca1\u6709\u5386\u53f2\u7684\u4e66\uff0c\u4f46\u5145\u6ee1\u4e86\u5173\u4e8e\u5bc6\u7801\u5931\u8d25\u7684\u73b0\u4ee3\u6545\u4e8b\uff0c\u6211\u4eb2\u773c\u76ee\u7779\u4e86\u8fd9\u4e9b\u6545\u4e8b\u3002\n\u8fd9\u5c06\u662f\u4e00\u672c\u51e0\u4e4e\u6ca1\u6709\u5173\u4e8e\u9057\u7559\u7b97\u6cd5\u7684\u4e66\uff0c\u4f46\u5145\u6ee1\u4e86\u6211\u4e2a\u4eba\u770b\u5230\u7684\u89c4\u6a21\u5316\u4f7f\u7528\u7684\u5bc6\u7801\u5b66\uff1aTLS\u3001\u566a\u58f0\u534f\u8bae\u6846\u67b6\u3001Wireguard\u3001\u4fe1\u53f7\u534f\u8bae\u3001\u52a0\u5bc6\u8d27\u5e01\u3001HSM\u3001\u95e8\u9650\u5bc6\u7801\u672f\u7b49\u7b49\u3002\n\u8fd9\u5c06\u662f\u4e00\u672c\u51e0\u4e4e\u6ca1\u6709\u7406\u8bba\u5bc6\u7801\u5b66\u7684\u4e66\uff0c\u4f46\u5145\u6ee1\u4e86\u53ef\u80fd\u53d8\u5f97\u76f8\u5173\u7684\u4e1c\u897f\uff1a\u5bc6\u7801\u8ba4\u8bc1\u5bc6\u94a5\u4ea4\u6362\u3001\u96f6\u77e5\u8bc6\u8bc1\u660e\u3001\u540e\u91cf\u5b50\u5bc6\u7801\u5b66\u7b49\u7b49\u3002\n2018\u5e74\uff0c\u5f53\u66fc\u5b81\u51fa\u7248\u516c\u53f8(Manning Publications)\u8054\u7cfb\u6211\uff0c\u95ee\u6211\u662f\u5426\u60f3\u4e3a\u4ed6\u4eec\u5199\u4e00\u672c\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u4e66\u65f6\uff0c\u6211\u5df2\u7ecf\u77e5\u9053\u4e86\u7b54\u6848\u3002\u6211\u5df2\u7ecf\u77e5\u9053\u6211\u60f3\u5199\u4ec0\u4e48\u4e86\u3002\n\u5de7\u5408\u7684\u662f\uff0c\u4ed6\u4eec\u6709\u4e00\u7cfb\u5217\u771f\u5b9e\u4e16\u754c\u7684\u4e66\uff0c\u6240\u4ee5\u6211\u5f88\u81ea\u7136\u5730\u5efa\u8bae\u6211\u7684\u4e66\u5ef6\u957f\u4e00\u4e0b\u3002\n\u6211\u5e0c\u671b\u8fd9\u672c\u4e66\u662f\u5173\u4e8e\u5e94\u7528\u5bc6\u7801\u5b66\u7684\u6700\u597d\u7684\u4e66\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4f60\u6709\u4ec0\u4e48\u53cd\u9988\u610f\u89c1\uff0c\u8bf7\u5bc4\u7ed9\u6211\uff1a)", "note_en": "I\u2019ve now been writing a book on  applied cryptography for a year and a half.I\u2019m nearing the end of my journey, as I have one last ambitious chapter left to write: next-generation cryptography (a chapter that I\u2019ll use to talk about cryptography that will become more and more practical: post-quantum cryptography, homomorphic encryption, multi-party computation, and zk-SNARKs).\n I\u2019ve been asked multiple times  why write a new book about cryptography? and  why should I read your book?.To answer this, you have to understand when it all started\u2026\n  Today if you want to learn about almost anything, you just google it.Yet, for cryptography, and depending on what you&#39;re looking for, resources can be quite lacking.\n One day for a class, I had to implement a  differential power analysis attack.I was banging my head against the wall trying to figure out what Paul Kocher\u2019s white paper was trying to say, and couldn\u2019t find a good resource that explained it well.So I banged my head a bit more, and finally I got it.And then I thought I would help others.So I drew some diagrams, animated them, and recorded myself going over them.That was  my first screencast.\n This first step in education was enough to make me want to do more.I started making more of these videos, and started writing more articles about cryptography on this blog (totaling now more than 500 articles).\n  I realized early that diagrams were extremely helpful to understand complicated concepts, and that strangely most resources in the field shied away from them.For example, anyone in cryptography who thinks about AES-CBC would directly think of the wikipedia diagram:\n  So here I was, trying to explain everything I was learning, and thinking hard about what sort of simple diagrams could easily convey these complex ideas.That\u2019s when I started thinking about a book, years and years before  Manning Publications would reach out to me with a book deal.\n  I hadn\u2019t started cryptography due to a long-life passion.I had finished a bachelor in theoretical mathematics and didn\u2019t know what was next for me.I had also been programming all my life, and I wanted to reconcile the two.Naturally, I got curious about cryptography, which seemed to have the best of both world, and started reading the different books at my disposal.I quickly discovered my life&#39;s calling.\n Some things were annoying me though. In particular, the long introductions that would start with history.I was only interested in the technicalities, and always had been.I swore to myself, if I ever wrote a book about cryptography, I would not write a single line on Vigen\u00e8re ciphers, Caesar ciphers, and others.\n And so after applying to the masters of Cryptography at the university of Bordeaux, and obtaining a degree in the subject, I thought I was ready for the world.Little did I know.What I thought was a very applied degree actually lacked a lot on the real world protocols I was about to attack.I had spent a semester learning about the mathematics of elliptic curves, but nothing about how they were used in cryptographic algorithms.I had learned about LFSR, and ElGamal, and DES, and a series of other cryptographic primitives that I would never see again.\n So when I started in the industry (at Matasano/NCC Group), my first gig was to audit OpenSSL.How boy did it hurt my brain.I remember coming back home every day with a strong headache.What a clusterfuck of a library.I had no idea at the time that I would years later become a co-author of TLS 1.3.\n  But at that point I was already thinking: this is what I should have learned in school.The knowledge I\u2019m getting now is what would have been useful to prepare me for the real world.After all, I was now a security practitioner specialized in cryptography.I was reviewing real-world cryptographic applications.I was doing the job that one would wish they had after finishing a cryptography degree.I implemented, verified, used, and advised on what cryptographic algorithms to use.\n This is the reason I\u2019m the first reader of the book I\u2019m writing.This is what I would have wrote to my past self in order to prepare me for the real world.\n  My consulting job led me to audit many real world cryptographic applications like the  OpenSSL, the  encrypted backup system of Google, the  TLS 1.3 implementation of Cloudflare, the  certificate authority protocol of Let\u2019s Encrypt, the  sapling protocol of Zcash, the  threshold proxy re-encryption scheme of NuCypher and dozens and dozens of other real-world cryptographic applications that I unfortunately cannot mention publicly.\n Early in my job, I was tasked to audit the custom secure transport protocol from a big corporation that I can\u2019t name.It turns out that they had forgotten to sign ephemeral keys, which completely broke the whole protocol.A rookie mistake from anyone with some experience with secure transport protocols, but something that was missed by people who thought they were experimented enough to roll their own crypto.I remember explaining the vulnerability at the end of the engagement, and a room full of engineers turning silent for a good 30 seconds.\n This story repeated itself many times during my career.There was this time where while auditing a cryptocurrency for another client, I found a way to forge transactions from already existing ones.Looking at TLS implementations for another client, I found some subtle ways to break an RSA implementation, which in turned transformed into a white paper (with one of the inventor of RSA) leading to  a dozens of CVEs.More recently, reading about Matrix as part of writing my book, I realized that their authentication protocol was completely broken,  leading to a complete break of their end-to-end encryption.\n  There\u2019s so many things that can fail in the use of cryptography.At that point, I knew I had to write something about it.This is why my book contains many of these anecdotes.\n As part of the job, I would review cryptography libraries and applications in a multitude of programming languages.I discovered bugs (for example  CVE-2016-3959 in Golang\u2019s standard library), I researched ways that libraries could fool you into misusing them (for example see my paper  How to Backdoor Diffie-Hellman), and I advised on what libraries to use.Developers never knew what library to use, and I always found the answer to be tricky.\n I went on to invent the  disco protocol, and wrote a fully-featured cryptographic library in less than 1,000 lines of code in several languages.Disco only relied on two cryptographic primitives: the permutation of SHA-3 and curve25519.Yes, from only these two things in 1,000 lines of code a developer could do any type of authenticated key exchange, signatures, encryption, MACs, hashing, key derivation, etc.This gave me a unique perspective as to what a good cryptographic library was supposed to be.\n I wanted my book to contain these kind of practical insights.So naturally, the different chapters contain examples on how to do crypto in different programming languages, using well-respected cryptographic libraries.\n  As I was giving  one of my annual cryptography training at Black Hat, one student came to me and asked me if I could recommend a good book or online course on cryptography.I remember advising the student to read  the book from Boneh &amp; Shoup and  Cryptography I from Boneh on Coursera.\n The student told me \u201c Ah, I tried, it\u2019s too theoretical!\u201d.This answer stayed with me.I disagreed at first, but slowly realized that they were right.Most of these resources are pretty heavy in math, and most developers that interact with cryptography don\u2019t want to deal with math.\u2028What else was there for them?The other two somewhat respected resources at the time were Applied Cryptography and Cryptography Engineering (both from Schneier).But these books were starting to be quite outdated.Applied Cryptography spent 4 chapters on block ciphers, with a whole chapter on cipher modes of operation but none on authenticated encryption.Cryptography Engineering had a single mention of elliptic curve cryptography (in a footnote).\n On the other hand, many of my videos or blog posts were becoming good primary references for some cryptographic concepts.\n  Gradually, many of my students started becoming interested in cryptocurrencies, asking more and more questions on the subject.At the same time, I started to audit more and more cryptocurrency applications.I finally moved to a job at Facebook to work on Libra.Cryptocurrency was now one of the hottest field to work on, mixing a multitude of extremely interesting cryptographic primitives that so far had seen no real-world use case (zero knowledge proofs, aggregated signatures, threshold cryptography, multi-party computations, consensus protocols, cryptographic accumulators, ... the list goes on)\n  I knew I could write something that would tell students, developers, consultants, and others... what modern applied cryptography was all about.\n  This was going to be a book with very little formulas, but filled with many diagrams.\n This was going to be a book with little history, but filled with modern stories about cryptographic failures that I had witnessed for real.\n This was going to be a book with little about legacy algorithms, but filled with cryptography that I&#39;ve personally seen being used at scale: TLS, the Noise protocol framework, Wireguard, the Signal protocol, cryptocurrencies, HSMs, threshold cryptography, and so on.\n This was going to be a book with little theoretical cryptography, but filled with what could become relevant: password-authentication key exchanges, zero-knowledge proofs, post-quantum cryptography, and so on.\n  When  Manning Publications reached out to me in 2018, asking if I wanted to write a book on cryptography for them, I already knew the answer.I already knew what I wanted to write about.\n Coincidentally, they had a series of real-world book, and so naturally I suggested that my book extend it.\n   I want this to be the best book on applied cryptography.For this reason, if you have any feedback to give, please send it my way :)", "posttime": "2020-07-06 08:10:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5bc6\u7801,\u5bc6\u7801\u5b66,book", "title": "\u6211\u4e3a\u4ec0\u4e48\u8981\u5199\u4e00\u672c\u5173\u4e8e\u5bc6\u7801\u5b66\u7684\u4e66", "title_en": "Why I\u2019m Writing a Book on Cryptography", "transed": 1, "url": "https://www.cryptologie.net/article/504/why-im-writing-a-book-on-cryptography/", "via": "", "real_tags": ["\u5bc6\u7801", "\u5bc6\u7801\u5b66", "book"]}]
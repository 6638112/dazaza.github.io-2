[{"category": "", "categoryclass": "", "imagename": "037bafef14a7df5150548b800b102b52.png", "infoid": 1012944, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u8005Lev Aronsky(@levaronsky)*\u867d\u7136QEMU\u4e00\u5f00\u59cb\u662f\u4e00\u4e2a\u4eff\u771f\u786c\u4ef6\u7684\u5e73\u53f0(\u7279\u522b\u662f\u4e3b\u673aCPU\u4e0d\u652f\u6301\u7684\u67b6\u6784)\uff0c\u4f46\u540e\u6765\u7684\u7248\u672c\u83b7\u5f97\u4e86\u4f7f\u7528\u786c\u4ef6\u8f85\u52a9\u865a\u62df\u5316\u6267\u884c\u4ee3\u7801\u7684\u80fd\u529b\u3002\u8fd9\u53ef\u4ee5\u5e26\u6765\u5de8\u5927\u7684\u6027\u80fd\u4f18\u52bf\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u6267\u884c\u7684\u64cd\u4f5c\u7801\u90fd\u662f\u7531CPU\u76f4\u63a5\u6267\u884c\u7684\uff0c\u800c\u4e0d\u662f\u88ab\u7ffb\u8bd1\u6210\u8bb8\u591a\u6a21\u62df\u539f\u59cb\u64cd\u4f5c\u7801\u884c\u4e3a\u7684\u672c\u5730\u64cd\u4f5c\u7801\u3002\n\u4f7f\u7528\u865a\u62df\u5316\u9700\u8981\u652f\u6301\u6267\u884c\u4f53\u7cfb\u7ed3\u6784\u7684\u4e3b\u673aCPU\u3002\u5728\u57fa\u4e8eIntel\u7684\u673a\u5668\u4e0a(\u6bd4\u5982\u6211\u4eec\u7528\u6765\u5728QEMU\u4e0a\u5f00\u53d1iOS\u7684\u673a\u5668)\uff0c\u865a\u62df\u5316x86/x64\u4ee5\u5916\u7684\u67b6\u6784\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u56e0\u6b64\uff0c\u5728QEMU\u4e0a\u8fd0\u884ciOS(\u4e00\u79cdARM64\u64cd\u4f5c\u7cfb\u7edf)\u65f6\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528\u5e38\u89c4\u4eff\u771f\u3002\u8d77\u521d\uff0c\u8868\u6f14\u662f\u7ef0\u7ef0\u6709\u4f59\u7684\u3002\u4f46\u662f\uff0c\u968f\u7740\u6211\u4eec\u5728QEMU\u4e0a\u6267\u884cIOS\u7684\u52aa\u529b\u7684\u53d1\u5c55\uff0c\u4ee5\u53ca\u64cd\u4f5c\u7cfb\u7edf\u7684\u66f4\u591a\u90e8\u5206\u7684\u6210\u529f\u542f\u52a8\uff0c\u6211\u4eec\u5f00\u59cb\u6ce8\u610f\u5230\u6027\u80fd\u7684\u4e0b\u964d\u3002\n\u73b0\u4ee3ARM\u82af\u7247\u652f\u6301\u786c\u4ef6\u8f85\u52a9\u865a\u62df\u5316\uff0c\u7c7b\u4f3c\u4e8e\u5176x86bretheren\u3002\u5982\u679c\u6211\u4eec\u8981\u5728\u57fa\u4e8eARM\u7684\u7cfb\u7edf\u4e0a\u8fd0\u884c\u6211\u4eec\u7684QEMU\u7248\u672c\uff0c\u5e94\u8be5\u53ef\u4ee5\u5229\u7528\u5e95\u5c42CPU\u7684\u865a\u62df\u5316\u529f\u80fd\u6765\u5b9e\u73b0\u8fd1\u4e4e\u672c\u673a\u7684\u6027\u80fd\u3002\u8fd9\u7bc7\u6587\u7ae0\u8bb0\u5f55\u4e86\u6211\u4eec\u5fc5\u987b\u514b\u670d\u7684\u6311\u6218\uff0c\u4ee5\u4fbf\u4f7f\u7528\u786c\u4ef6\u8f85\u52a9\u865a\u62df\u5316\u5728QEMU\u4e0a\u6210\u529f\u5f15\u5bfc\u6211\u4eec\u7684iOS\u7cfb\u7edf\u3002\n\u5f53\u4ece\u57fa\u4e8e\u82f1\u7279\u5c14\u7684\u7b14\u8bb0\u672c\u7535\u8111\u8f6c\u5411\u57fa\u4e8eARM\u7684\u7cfb\u7edf\u8fdb\u884c\u5f00\u53d1\u65f6\uff0c\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u9009\u62e9\u54ea\u79cd\u5e73\u53f0\u3002\u6211\u4eec\u5e94\u8be5\u5728\u4e91\u4e2d\u4f7f\u7528ARM\u670d\u52a1\u5668\u5417\uff1f\u57fa\u4e8eARM\u7684\u5f00\u53d1\u677f\uff1f\u5f00\u53d1\u4eba\u5458\u53cb\u597d\u7684Android\u624b\u673a\uff1f\u6bcf\u79cd\u9009\u62e9\u4f3c\u4e4e\u90fd\u6709\u81ea\u5df1\u7684\u4f18\u52bf\u3002\nARM\u670d\u52a1\u5668\u5f88\u5bb9\u6613\u6210\u4e3a\u5176\u4e2d\u529f\u80fd\u6700\u5f3a\u5927\u7684--\u4f46\u662f\u57fa\u4e8eARM\u7684\u4e13\u7528\u670d\u52a1\u5668\u7684\u9009\u62e9\u662f\u6709\u9650\u7684\uff0c\u5b83\u4eec\u5e76\u4e0d\u4fbf\u5b9c\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u786e\u5b9a\u6211\u4eec\u662f\u5426\u80fd\u83b7\u5f97\u6240\u9700\u7684\u8bbf\u95ee\u7ea7\u522b(\u6211\u4eec\u7684\u5047\u8bbe\u662f\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u5185\u6838)\u3002\u8d2d\u4e70\u7269\u7406\u670d\u52a1\u5668\u662f\u6211\u4eec\u77ed\u6682\u8003\u8651\u7684\u4e00\u4e2a\u9009\u62e9\uff0c\u4f46\u968f\u7740\u4ef7\u683c\u5728\u6570\u5343\u7f8e\u5143\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u5feb\u5c31\u88ab\u629b\u5f03\u4e86\u3002\n\u4e8c\u624bAndroid\u624b\u673a\u662f\u53e6\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u4f46\u5373\u4f7f\u662f\u5bf9\u5f00\u53d1\u8005\u53cb\u597d\u7684\u624b\u673a\u4e5f\u53ef\u80fd\u5f88\u96be\u4f7f\u7528\u3002\u4f7f\u7528Android\u800c\u4e0d\u662f\u901a\u7528Linux\u53ef\u80fd\u662f\u4e00\u4e2a\u9650\u5236\u56e0\u7d20\uff0c\u800c\u8981\u627e\u5230\u4e00\u6b3e\u6709\u8db3\u591fRAM\u5728\u6210\u719f\u7684Android\u73af\u5883\u4e2d\u5e76\u884c\u6267\u884ciOS\u7684\u624b\u673a\uff0c\u6211\u4eec\u5c06\u9700\u8981\u4f7f\u7528\u4e00\u6b3e\u6700\u65b0\u7684\u624b\u673a\uff0c\u8fd9\u5c06\u662f\u4e00\u6b3e\u4e0d\u4fbf\u5b9c\u7684\u624b\u673a\u3002\n\u57fa\u4e8eARM\u7684\u5f00\u53d1\u677f\u770b\u8d77\u6765\u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u5b83\u53ef\u4ee5\u8ba9\u6211\u4eec\u4ee5\u66ff\u4ee3\u4ea7\u54c1\u4ef7\u683c\u7684\u4e00\u5c0f\u90e8\u5206\u6765\u5f00\u53d1\u548c\u5f00\u53d1\u6211\u4eec\u7684\u4ee3\u7801\u3002\u4e3a\u4e86\u83b7\u5f97\u5bf9\u5185\u6838\u5f00\u53d1\u300164\u4f4dARM SOC\u548c\u4e0d\u5c11\u4e8e4 GB RAM\u7684\u826f\u597d\u552e\u540e\u652f\u6301\uff0c\u6211\u4eec\u9009\u62e9\u4e86Pine Rock64\u4f5c\u4e3a\u6211\u4eec\u7684\u8bd5\u9a8c\u5e8a\uff1a\n\u4e3b\u677f\u914d\u5907\u4e86\u4e00\u4e2aARM64CPU(\u57fa\u4e8eCortex-A53\u7684RK3328)\uff0c\u4ee5\u53ca4 GB\u7684RAM\u3002\u8fd9\u4e2a\u9009\u62e9\u4f3c\u4e4e\u975e\u5e38\u9002\u5408\u6211\u4eec\u7684\u76ee\u7684\uff1a\u5728\u6a21\u62dfiPhone\u65f6\uff0c\u6211\u4eec\u6210\u529f\u5730\u4f7f\u7528\u4e86Cortex-A53\u4f5c\u4e3a\u6211\u4eec\u7684CPU\uff0c\u867d\u71364 GB\u7684RAM\u5e76\u4e0d\u7406\u60f3(\u6211\u4eec\u901a\u5e38\u4f7f\u75286 GB\u7684\u4e13\u95e8\u7528\u4e8eQEMU\u7684RAM\u6765\u8fd0\u884c\u6211\u4eec\u7684\u6a21\u62df)\uff0c\u4f46\u6211\u4eec\u7684\u6d4b\u8bd5\u8868\u660e\uff0c\u4f7f\u7528\u8f83\u5c11\u7684RAM(\u4f8b\u5982\uff0c2 GB)\u5728\u8fd9\u4e00\u70b9\u4e0a\u6ca1\u6709\u660e\u663e\u7684\u5f71\u54cd\u3002\n\u4e00\u65e6\u6211\u4eec\u7684\u4e3b\u677f\u542f\u52a8\u5e76\u8fd0\u884c\u6700\u65b0\u7248\u672c\u7684Armbian\uff0c\u5c31\u5230\u4e86\u6211\u4eec\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u8fd0\u884cQEMU\u7684\u65f6\u5019\u4e86\uff0c\u540c\u65f6\u4f7f\u7528\u786c\u4ef6\u8f85\u52a9\u7684CPU\u865a\u62df\u5316\u6765\u4ee3\u66ff\u4eff\u771f\u3002\u7406\u8bba\u4e0a\uff0c\u7528\u6237\u53ea\u9700\u5c06-enable-kvm\u5f00\u5173\u6dfb\u52a0\u5230\u547d\u4ee4\u884c\u2026\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u5e76\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u3002\u5f53QEMU\u542f\u52a8\u6210\u529f\u65f6\uff0ciOS\u65e0\u6cd5\u542f\u52a8\u3002\u5728\u5f15\u5bfc\u65f6\u9644\u52a0gdb\u8ba9\u6211\u4eec\u4e00\u5f00\u59cb\u53ef\u4ee5\u770b\u5230\u6b63\u786e\u6267\u884c\u7684\u6307\u4ee4\uff0c\u4f46\u662f\u7ee7\u7eed\u4e4b\u540e\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\u81ea\u5df1\u9677\u5165\u4e86\u4e00\u4e2a\u4f4d\u4e8e0xfffffff0070a0200\u7684\u65e0\u9650\u5faa\u73af\u4e2d\u3002\u57fa\u4e8e\u5185\u6838\u7b26\u53f7\uff0c\u5b83\u662f\u4e2d\u65ad/\u5f02\u5e38\u5904\u7406\u7684\u77e2\u91cf\u4e4b\u4e00\u3002\u8fbe\u5230\u8be5\u4ee3\u7801\u91cf\u4e4b\u524d\u5c31\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ecd\u7136\u6ca1\u6709\u8fbe\u5230\u53ef\u4ee5\u66f4\u4f18\u96c5\u5730\u5904\u7406\u5b83\u7684\u7a0b\u5ea6(\u4f8b\u5982\u8f6c\u50a8\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u5185\u5bb9\uff0c\u81f3\u5c11\u7ed3\u5408\u4e86\u67d0\u79cd\u7c7b\u578b\u7684\u95ee\u9898\u63cf\u8ff0)\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ecd\u7136\u6ca1\u6709\u8fbe\u5230\u53ef\u4ee5\u66f4\u4f18\u96c5\u5730\u5904\u7406\u5b83\u7684\u7a0b\u5ea6(\u4f8b\u5982\uff0c\u8f6c\u50a8\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u5185\u5bb9\uff0c\u4ee5\u53ca\u81f3\u5c11\u67d0\u79cd\u7c7b\u578b\u7684\u95ee\u9898\u63cf\u8ff0)\u3002\u6211\u4eec\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u4e00\u6b65\u4e00\u6b65\u5730\u5b8c\u6210\u5185\u6838\u7684\u65e9\u671f\u521d\u59cb\u5316\uff0c\u4e00\u6761\u63a5\u4e00\u6761\u6307\u4ee4\uff0c\u76f4\u5230\u8df3\u8f6c\u5230\u5f02\u5e38\u5411\u91cf\u3002\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u5f53\u7b2c\u4e00\u6b21\u52a0\u8f7d\u5185\u6838\u65f6\uff0cMMU\u8fd8\u6ca1\u6709\u542f\u7528\uff0c\u5e76\u4e14\u4ee3\u7801\u88ab\u6620\u5c04\u5230\u7269\u7406\u5730\u5740(\u6267\u884c\u4ece0x470a5098\u5f00\u59cb)\u3002\u53ea\u6709\u5728\u7a0d\u540e\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\uff0c\u624d\u4f1a\u542f\u7528MMU(\u4e00\u65e6\u9875\u8868\u521d\u59cb\u5316)\uff0c\u5e76\u4e14\u5730\u5740\u4f1a\u5207\u6362\u5230\u719f\u6089\u7684\u5185\u6838\u6a21\u5f0f(\u8f83\u9ad8\u7684\u4f4d\u8bbe\u7f6e\u4e3a1)\u3002\u4f46\u662f\uff0c\u5728Ghidra\u7b49\u53cd\u6c47\u7f16\u7a0b\u5e8f\u4e2d\u67e5\u770b\u5185\u6838\u6620\u50cf\u65f6\uff0c\u6240\u6709\u4ee3\u7801\u90fd\u6620\u5c04\u5230\u5185\u6838\u5730\u5740\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u6b63\u5728\u68c0\u67e5\u7684\u521d\u59cb\u5316\u4ee3\u7801\u53ef\u4ee5\u57280xfffffff0070a5098\u627e\u5230\u3002\n\u67d0\u4e9b\u521d\u59cb\u5316\u4ee3\u7801\u5305\u542b\u591a\u6b21\u6267\u884c\u7684\u5faa\u73af\u3002\u4e3a\u4e86\u4f7f\u540e\u7eed\u6267\u884c\u66f4\u6709\u6548\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4ee5\u8f83\u5c0f\u95f4\u9694\u8bbe\u7f6e\u7684\u65ad\u70b9\u3002\u8fd9\u8ba9\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u800c\u4e0d\u662f\u9010\u4e2a\u904d\u5386\u6bcf\u4e2a\u6307\u4ee4\u548c\u5faa\u73af\u3002\u4f7f\u7528\u6b64\u6280\u672f\uff0c\u6211\u4eec\u5f88\u5feb\u53d1\u73b0\u5730\u57400x470a72e4\u51fa\u73b0\u5f02\u5e38\uff1a\n0x470a72d4 MSR VBAR_EL1\uff0cx00x470a72d8 movz x0\uff0c0x593d0x470a72dc movz x1\uff0c0x3454\uff0cLSL 160x470a72e0 or r x0\uff0cx0\uff0cx10x470a72e4=&gt\uff1bMSR sctlr_el1\uff0cx00x470a72e8 isb0x470a72e8\u3002\n\u5982\u6211\u4eec\u6240\u89c1\uff0c\u5728\u4e0a\u8ff0\u5730\u5740\uff0c\u503c0x3454593d\u5199\u5165SCTLR_EL1\u5bc4\u5b58\u5668\u3002\u6839\u636eARM DDI 0487\uff0cD13.2.113\uff0c\u8fd9\u662f\u7cfb\u7edf\u63a7\u5236\u5bc4\u5b58\u5668\uff0c\u63d0\u4f9bEL0\u548cEL1\u7684\u7cfb\u7edf\u9876\u7ea7\u63a7\u5236\u3002\u5176\u7b2c\u4e00\u4f4d\u7528\u4e8e\u901a\u8fc7MMU\u542f\u7528\u5730\u5740\u8f6c\u6362\u3002\u7531\u4e8e\u5728\u6267\u884c\u6b64\u6307\u4ee4\u65f6\u53d1\u751f\u5f02\u5e38(\u5e76\u4e14\u5728\u5bc4\u5b58\u5668\u7684new\u503c\u4e2d\u8bbe\u7f6e\u4e86\u4f4d0)\uff0c\u56e0\u6b64\u5730\u5740\u8f6c\u6362\u914d\u7f6e\u662f\u7acb\u5373\u8003\u8651\u7684\u3002\n\u6709\u51e0\u4e2a\u5bc4\u5b58\u5668\u7528\u4e8e\u914d\u7f6eMMU\uff0c\u5373TCR_EL1\u3001TTBR1_EL1\u548cMAIR_EL1\u3002\u6211\u4eec\u68c0\u67e5\u4e86\u5b58\u50a8\u5728\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\uff0c\u4ee5\u4fbf\u542f\u7528MMU\u3002\u4e00\u4e2a\u7279\u522b\u7a81\u51fa\u7684\u5b57\u6bb5\u662fTCR_EL1.TG1\uff0c\u5b83\u6307\u793aTTBR1_EL1\u7684\u7c92\u5ea6\u5927\u5c0f\u3002OuriOS\u5185\u6838\u7684\u521d\u59cb\u5316\u4ee3\u7801\u5c06TCR_EL1.TG1\u7684\u503c\u8bbe\u7f6e\u4e3a0b01(\u8be5\u5b57\u6bb5\u4ee5\u4f4d31\uff1a30\u5b58\u50a8\uff0c\u5199\u51650x470a7244\u5904\u7684TCR_EL1\u7684\u503c\u4e3a0x000000226519a519)\u3002\u503c0b01\u5bf9\u5e94\u4e8e16KB\u7684\u9897\u7c92\u5927\u5c0f\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5355\u6b65\u6267\u884c\u4f4d\u4e8e0x470a7244\u7684MSR\u6307\u4ee4\u4e4b\u540e\uff0c\u68c0\u67e5TCR_EL1\u7684\u503c\u53d1\u73b0\u4e86\u4e00\u4e2a\u7565\u6709\u4e0d\u540c\u7684\u503c0x00000022a519a519-\u9897\u7c92\u5927\u5c0f\u8bfb\u51fa\u4e3a0b10(4KB)\uff01\u8fd9\u6e05\u695a\u5730\u8bf4\u660e\u4e86\u542f\u7528MMU\u65f6\u51fa\u73b0\u5f02\u5e38\u7684\u539f\u56e0\uff1a\u521d\u59cb\u5316\u4ee3\u7801\u8bbe\u7f6e\u7684\u9875\u8868\u8bbe\u8ba1\u4e3a16KB\u7684\u7c92\u5ea6INMIND\uff0c\u800c\u542f\u7528MMU\u65f6\u5b58\u50a8\u5728TCR_EL1\u4e2d\u7684\u5b9e\u9645\u7c92\u5ea6\u8bbe\u7f6e\u4e3a4KB\u3002MMU\u9519\u8bef\u5730\u5904\u7406\u9875\u9762\u6761\u76ee\uff0c\u5728\u542f\u7528MMU\u540e\u7acb\u5373\u53d1\u751f\u9875\u9762\u6545\u969c\u3002\u4f46\u662f\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u8bd5\u56fe\u8bbe\u7f6e\u768416KB\u9897\u7c92\u7684\u503c\u4e0d\u6210\u7acb\u5462\uff1f\n\u5982\u679c\u503c\u88ab\u7f16\u7a0b\u4e3a\u4fdd\u7559\u503c\u6216\u5c1a\u672a\u5b9e\u73b0\u7684\u5927\u5c0f\uff0c\u5219\u786c\u4ef6\u5c06\u5bf9\u5f85\u8be5\u5b57\u6bb5\uff0c\u5c31\u597d\u50cf\u5b83\u5df2\u88ab\u7f16\u7a0b\u4e3a\u5b9e\u73b0\u5b9a\u4e49\u7684\u5927\u5c0f\u9009\u62e9\uff0c\u8be5\u5b9e\u73b0\u5b9a\u4e49\u7684\u5927\u5c0f\u5df2\u9488\u5bf9\u9664\u4ece\u8be5\u5bc4\u5b58\u5668\u8bfb\u56de\u7684\u503c\u4e4b\u5916\u7684\u6240\u6709\u76ee\u7684\u800c\u5b9e\u73b0\u3002\u7531\u5b9e\u73b0\u5b9a\u4e49\u8bfb\u56de\u7684\u503c\u662f\u7f16\u7a0b\u7684\u503c\u8fd8\u662f\u5bf9\u5e94\u4e8e\u6240\u9009\u5927\u5c0f\u7684\u503c\u3002\n\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0cTCR_EL1.TG\u5728\u5c1d\u8bd5\u5c06\u5176\u8bbe\u7f6e\u4e3a0b01\u540e\u88ab\u8bfb\u56de\u4e3a0b10\u3002\u8fd9\u8868\u660e\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u8bfb\u56de\u503c\u662f\u4e0e\u6240\u9009\u7684\u7c92\u5927\u5c0f\u76f8\u5bf9\u5e94\u7684\u503c(\u56e0\u4e3a\u5b83\u4e0d\u662f\u6211\u4eec\u7f16\u7a0b\u7684\u503c)\uff0c\u5e76\u4e1416KB\u5927\u5c0f\u5c1a\u672a\u5728\u6211\u4eec\u7684CPU\u4e2d\u5b9e\u73b0\u3002\u6211\u4eec\u53ef\u4ee5\u501f\u52a9ID_AA64MMFR0_EL1\u5bc4\u5b58\u5668(AArch64\u5185\u5b58\u6a21\u578b\u529f\u80fd\u5bc4\u5b58\u56680)\u9a8c\u8bc1\u8fd9\u4e00\u5047\u8bbe\u3002\u5176\u5b57\u6bb5TGran16(\u4f4d23\uff1a20)\u7528\u4e8e\u6307\u793a\u652f\u630116KB\u5185\u5b58\u8f6c\u6362\u533a\u5757\u5927\u5c0f\uff1a\u5f53\u4f4d\u5168\u90e8\u8bbe\u7f6e\u4e3a0\u65f6\uff0c\u4e0d\u652f\u6301\u8be5\u533a\u5757\u5927\u5c0f\u3002\u8bfb\u53d6\u6211\u4eec\u7684Rock64\u5f00\u53d1\u677f\u4e0a\u7684\u5bc4\u5b58\u5668\u7684\u503c\u8fd4\u56de0x00001122-\u56e0\u6b64\uff0c\u4f4d23\uff1a20\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u5e76\u4e14\u6211\u4eec\u7684CPU\u6ca1\u6709\u5b9e\u73b016KB\u7684\u533a\u5757\u5927\u5c0f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u901a\u8fc7\u53c2\u8003ARM DDI 0500(ARM Cortex-A53 MPCore\u5904\u7406\u5668\u6280\u672f\u53c2\u8003\u624b\u518c)\u4e2d\u76844.2.1\u8282\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u52300x00001122\u7684\u503c\u662f\u7ecf\u8fc7\u8bbe\u8ba1\u7684-\u5373\uff0cCortex-A53\u5185\u6838\u6ca1\u6709\u5b9e\u73b016KB\u7684\u9897\u7c92\u5927\u5c0f\u3002\u6709\u8da3\u7684\u662f\uff0cQEMU\u4e2d\u7684Cortex-A53\u5b9e\u73b0\u5ffd\u7565\u4e86\u8fd9\u4e00\u70b9\uff0c\u5b9e\u73b0\u4e8616KB\u7684\u7c92\u5ea6(ID_AA64MMFR0_EL1\u7684\u503c\u4e3a0x00001122\uff0c\u4e0e\u53c2\u8003\u624b\u518c\u76f8\u7b26\uff0c\u4f46\u5c06TCR_EL1.TG\u8bbe\u7f6e\u4e3a0b01\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c)\u3002\n\u8981\u7ee7\u7eed\u8fd9\u4e2a\u9879\u76ee\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u9009\u62e9\u3002\u6211\u4eec\u66fe\u77ed\u6682\u8003\u8651\u8fc7\u4e3aiOS\u5185\u6838\u6253\u8865\u4e01\uff0c\u4f7f\u5176\u4f7f\u75284KB\u621664KB\u9875\u9762\uff0cCortex-A53\u90fd\u652f\u6301\u8fd9\u4e24\u79cd\u9875\u9762\u3002\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u5feb\u5c31\u88ab\u653e\u5f03\u4e86\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u4ed8\u51fa\u5f88\u5927\u7684\u52aa\u529b\uff0c\u800c\u5176\u6210\u529f\u7684\u53ef\u80fd\u6027\u4e5f\u662f\u503c\u5f97\u6000\u7591\u7684\u3002\u867d\u7136\u6784\u5efa\u5177\u6709\u4e0d\u540c\u9875\u9762\u5927\u5c0f\u7684\u521d\u59cb\u9875\u9762\u8868\u5e94\u8be5\u662f\u53ef\u884c\u7684\uff0c\u4f46\u6211\u4eec\u5fc5\u987b\u627e\u5230\u5185\u6838\u4ee3\u7801\u4e2d\u64cd\u4f5c\u9875\u9762\u8868\u7684\u6240\u6709\u4f4d\u7f6e\uff0c\u5e76\u76f8\u5e94\u5730\u66f4\u65b0\u5b83\u4eec-\u8fd9\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u5b8c\u6210\u7684\u58ee\u4e3e\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u6539\u7528\u652f\u630116KB\u9875\u9762\u7684ARM\u5185\u6838\u3002\u8fd9\u8ba9\u6211\u4eec\u53c8\u56de\u5230\u4e86\u786c\u4ef6(ARM\u670d\u52a1\u5668\u3001\u5f00\u53d1\u677f\u3001\u624b\u673a)\u7684\u9009\u62e9\u4e0a\uff0c\u8fd8\u6709\u4e00\u4e2a\u8981\u5b8c\u6210\u7684\u8981\u6c42\uff1a\u6211\u4eec\u8981\u67e5\u9605\u9a71\u52a8\u6240\u9009\u786c\u4ef6\u7684\u5185\u6838\u7684\u6280\u672f\u53c2\u8003\u624b\u518c\uff0c\u5e76\u9a8c\u8bc1iOS\u5185\u6838\u6240\u4f7f\u7528\u7684\u7c92\u5ea6\u5927\u5c0f\u662f\u5426\u53d7\u652f\u6301\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5927\u591a\u6570\u9884\u7b97\u5f00\u53d1\u677f\u4f7f\u7528\u8f83\u65e7\u7684ARM\u5185\u6838(Cortex-A53\u6216Cortex-A72)\uff0c\u4e0d\u652f\u6301\u6240\u9700\u7684\u7c92\u5ea6\u5927\u5c0f\u3002\u6211\u4eec\u53d1\u73b0\u6709\u4e00\u5757\u4e3b\u677f\u7684\u5185\u6838\u5177\u6709\u6240\u9700\u7684\u652f\u6301-\u4f46\u5b83\u53ea\u67091 GB\u7684RAM\u3002\u5927\u591a\u6570Android\u624b\u673a\u4e5f\u4e0d\u7b26\u5408\u6211\u4eec\u7684\u8981\u6c42--\u6211\u4eec\u9700\u8981\u4e00\u6b3e\u914d\u5907\u6700\u65b0\u82af\u7247\u7ec4\u7684\u73b0\u4ee3\u624b\u673a\uff0c\u6240\u6709\u4ee5\u524d\u4f7f\u7528\u624b\u673a\u6240\u9762\u4e34\u7684\u6311\u6218\u4ecd\u7136\u5b58\u5728\u3002\n\u6211\u4eec\u9009\u62e9\u5207\u6362\u5230\u57fa\u4e8e\u4e91\u7684ARM\u670d\u52a1\u5668\u8fdb\u884c\u521d\u59cb\u5f00\u53d1\u3002\u5982\u679c\u6982\u5ff5\u9a8c\u8bc1\u6210\u529f\uff0c\u5185\u6838\u4e2d\u7684\u6240\u6709\u6f5c\u5728\u95ee\u9898\u90fd\u89e3\u51b3\u4e86\uff0c\u6211\u4eec\u4f1a\u8003\u8651\u8d2d\u4e70\u66f4\u6602\u8d35\u7684\u5f00\u53d1\u677f\u6216\u626c\u58f0\u5668\u3002\u6211\u4eec\u7684\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u662f\u5728\u4e9a\u9a6c\u900aAWS\u4e0a\u8fdb\u884c\u7684\uff0c\u4f46\u6211\u4eec\u5f88\u5feb\u53d1\u73b0\u4ed6\u4eec\u7684Graviton\u5185\u6838\u4e0d\u652f\u630116KB\u9875\u9762(\u5373\u5c06\u53d1\u5e03\u7684Graviton 2\u5185\u6838\u57fa\u4e8eARM Neoverse N1\uff0c\u6709\u5fc5\u8981\u7684\u652f\u6301--\u4f46\u5f53\u65f6\u8fd8\u6ca1\u6709\u4e0a\u5e02)\u3002\u6211\u4eec\u6700\u7ec8\u4e0ePacket\u5408\u4f5c\uff0c\u5b83\u6709\u4e24\u79cd\u4e0d\u540c\u7684ARM\u4ea7\u54c1\uff0c\u4e00\u4e2a\u57fa\u4e8eCavium ThunderX CN8890\uff0c\u53e6\u4e00\u4e2a\u57fa\u4e8eAmpere eMAG8180\uff0c\u4ef7\u683c\u5177\u6709\u7ade\u4e89\u529b\u3002\n\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u57fa\u4e8eCavium\u7684\u670d\u52a1\u5668\uff0c\u5e76\u57280x470a72e4\u6210\u529f\u901a\u8fc7\u4e86\u521d\u59cb\u6545\u969c\u70b9(\u6210\u529f\u542f\u7528\u4e86MMU\uff0c\u5e76\u4e14\u6267\u884c\u7ee7\u7eed\u5230\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u6ca1\u6709\u4efb\u4f55\u5f02\u5e38)\u3002\n\u6211\u4eec\u7684\u5feb\u4e50\u662f\u77ed\u6682\u7684\u3002\u4ec5\u4ec5\u51e0\u6761\u6307\u4ee4\u4e4b\u540e\uff0c\u57280x470a72f4\u5904\uff0c\u6211\u4eec\u9047\u5230\u4e86\u53e6\u4e00\u6761\u6307\u4ee4\uff0c\u8be5\u6307\u4ee4\u5931\u8d25\u4e86\uff0c\u5e76\u5c06\u6211\u4eec\u653e\u5165\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f(\u6839\u636e\u72b6\u6001\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u6211\u4eec\u547d\u4e2d\u4e86INVALID\u6307\u4ee4)\uff1a\n0x470a72ec movz x0\uff0c00x470a72f0 MSR tpidr_el1\uff0cx00x470a72f4==&gt\uff1bmRS x12\uff0cs3_0_c15_c4_00x470a72f8\u6216x12\uff0cx12\uff0c0x8000x470a72fc\u6216x12\uff0cx12\uff0c0x100000000000\u3002\n\u8fd9\u6761\u770b\u8d77\u6765\u5f88\u795e\u79d8\u7684MRS\u6307\u4ee4\u8bd5\u56fe\u8bfb\u53d6\u4e13\u7528\u5bc4\u5b58\u5668\u7684\u503c\u3002\u867d\u7136\u8bb8\u591a\u7279\u6b8a\u5bc4\u5b58\u5668\u90fd\u6709\u5b9a\u4e49\u7684\u540d\u79f0(\u5e76\u76f8\u5e94\u5730\u5728\u53cd\u6c47\u7f16\u7a0b\u5e8f\u4e2d\u663e\u793a-\u6240\u6709\u4e0a\u8ff0\u5bc4\u5b58\u5668\uff0c\u5982SCTLR_EL1\uff0c\u90fd\u662f\u6b64\u7c7b\u7279\u6b8a\u5bc4\u5b58\u5668\u7684\u793a\u4f8b)\uff0c\u4f46\u6709\u4e9b\u5bc4\u5b58\u5668\u4e0d\u662f\u7531ARM\u5b9a\u4e49\u7684\uff0c\u800c\u662f\u7279\u5b9a\u4e8e\u5b9e\u73b0\u7684\u3002\u5bf9\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u8bbf\u95ee\u662f\u7528\u51e0\u4e2a\u5b57\u6bb5(op0\u3001op1\u3001CRM\u3001CRN\u548cop2)\u7f16\u7801\u7684\uff0c\u8fd9\u4e9b\u5b57\u6bb5\u7684\u7ec4\u5408\u5bf9\u4e8e\u6bcf\u4e2a\u7cfb\u7edf\u5bc4\u5b58\u5668\u662f\u552f\u4e00\u7684\u3002\n\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u67e5\u627e\u8fd9\u4e2a\u5b57\u6bb5\u7ec4\u5408\u4f1a\u53d1\u73b0\u5b83\u662f\u4e00\u4e2a\u7279\u5b9a\u4e8eApple\u7684\u7279\u6b8a\u5bc4\u5b58\u5668(\u5b83\u5728XNUsource\u4e2d\u663e\u793a\u4e3aARM64_REG_HID4\uff0c\u5728pExpert/pExpert/arm64/arm64_common.h\u4e2d\u5b9a\u4e49)\u3002\u867d\u7136\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u7528\u9014\u4e0d\u6e05\u695a\uff0c\u4f46\u6211\u4eec\u5728QEMU\u4ee3\u7801\u4e2d\u5904\u7406\u4e86\u5b83(\u4ee5\u53ca\u5176\u4ed6Apple\u7279\u5b9a\u7684\u5bc4\u5b58\u5668)\uff0c\u53ea\u9700\u5b58\u50a8\u5199\u5165\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u4efb\u4f55\u503c\uff0c\u7136\u540e\u6309\u539f\u6837\u8bfb\u56de\u5b83\u4eec\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5904\u7406\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u4ee3\u7801\u4ecd\u7136\u5b58\u5728-\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u4f1a\u6267\u884c\uff0c\u4e3a\u4ec0\u4e48\u6211\u4eec\u4f1a\u9047\u5230\u65e0\u6548\u6307\u4ee4\u5462\uff1f\u6839\u672c\u539f\u56e0\u5728\u4e8eQEMU\u7684\u7b80\u5316\u3002\u867d\u7136QEMU\u7684\u5927\u90e8\u5206\u4ee3\u7801\u4e0e\u5ba2\u6237CPU\u7684\u57fa\u7840\u65e0\u5173(\u65e0\u8bba\u5b83\u662f\u5728\u8f6f\u4ef6\u4e2d\u6a21\u62df\u7684\uff0c\u8fd8\u662f\u5728\u786c\u4ef6\u4e2d\u865a\u62df\u5316\u7684)\uff0c\u4f46\u67d0\u4e9b\u529f\u80fd\u9700\u8981\u4e0d\u540c\u7684\u5b9e\u73b0\u3002\u7279\u6b8a\u5bc4\u5b58\u5668\u7684\u5904\u7406\u5c31\u662f\u8fd9\u6837\u7684\u7279\u5f81\u4e4b\u4e00\u3002\n\u5f53\u6ca1\u6709\u4f7f\u7528KVM\u65f6(\u5e76\u4e14\u6a21\u62df\u4e86CPU\u4f53\u7cfb\u7ed3\u6784)\uff0c\u5b9e\u73b0MSR\u548cMRS\u6307\u4ee4\u7684\u4ee3\u7801\u4f7f\u7528\u56de\u8c03\u6765\u652f\u6301\u4e00\u7cfb\u5217\u7279\u6b8a\u5bc4\u5b58\u5668(target/arm/Translate-a64.c)\uff1a\n/*mRS-\u4ece\u7cfb\u7edf\u5bc4\u5b58\u5668\u79fb\u51fa*msr(\u5bc4\u5b58\u5668)-\u79fb\u5230\u7cfb\u7edf\u5bc4\u5b58\u5668*SYS*SYSL*\u8fd9\u4e9b\u5728&#39\uff1bREAD&#39\uff1b\u548c&#39\uff1bWRITE&#39\uff1b*\u7248\u672c\u4e2d\u57fa\u672c\u4e0a\u662f\u76f8\u540c\u7684\uff0c\u4f46op0\u5b57\u6bb5\u5404\u4e0d\u76f8\u540c\u3002*/static void handle_sys(DisasContext*s\uff0cuint32_t insn\uff0cbool is read\uff0cunsign int op0\uff0cunsign int op1\uff0cunsign int op2\uff0cunsign int crn\uff0cunsign int CRM\uff0cunsign int rt){const ARMCPRegInfo*ri\uff1bTCGv_i64 TCG_RT\uff1bri=get_arm_cp_reginfo(s-&gt\uff1bcp_regs\uff0cENCODE_AA64_cp_rt){const ARMCPRegInfo*ri\uff1bTCGv_i64 TCG_RT\uff1bri=get_arm_cp_reginfo(s-&gt\uff1bcp_regs\uff0cENCODE_AA64_CP_\u3002/*...*/if(Isread){if(ri-&gt\uff1btype&amp\uff1barm_CP_const){tcg_gen_movi_i64(tcg_rt\uff0cri-&gt\uff1bsetvalue)\uff1b}if(ri-&gt\uff1breadfn){TCGv_ptr tmpptr\uff1btmpptr=tcg_const_ptr(Ri)\uff1bgen_helper_get_cp_reg64(tcg_rt\uff0cTcg_temp_free_ptr(Tmpptr)\uff1b}Else{tcg_gen_ld_i64(tcg_rt\uff0ccpu_env\uff0cri-&gt\uff1bfieldoffset)\uff1b}}Else{if(ri-&gt\uff1btype&amp\uff1barm_CP_const){/*\u5982\u679c\u8bbf\u95ee\u6743\u9650\u672a\u7981\u6b62\uff0c\u89c6\u4e3aWI*/Return\uff1b}Else if(ri-&&gt;\uff1bwritefn){TCGv_ptr tmppt\u3002Gen_helper_set_cp_reg64(cpu_env\uff0ctmpptr\uff0ctcg_rt)\uff1btcg_temp_free_ptr(Tmpptr)\uff1b}\u5426\u5219{tcg_gen_st_i64(tcg_rt\uff0ccpu_env\uff0cri-&gt\uff1bfieldoffset)\uff1b}/*...*/}\u3002\nDisasContext\u7ed3\u6784\u7684cp_regs\u5305\u542b\u4eff\u771fCPU\u7684\u5404\u79cd\u534f\u5904\u7406\u5668(\u7279\u6b8a)\u5bc4\u5b58\u5668\u7684\u63cf\u8ff0\u7b26\u3002\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u552f\u4e00\u6807\u8bc6\u5bc4\u5b58\u5668\u7684op0\u3001op1\u3001CRM\u3001CRN\u548cop2\u5b57\u6bb5\u6765\u68c0\u7d22ARMCPRegInfo\u7c7b\u578b\u7684\u63cf\u8ff0\u7b26\u3002\u63cf\u8ff0\u7b26\u7ed3\u6784\u53ef\u4ee5\u5305\u542b\u7528\u4e8e\u8bbf\u95ee\u63a7\u5236(\u8bbf\u95eefn\uff0c\u672a\u5728\u7247\u6bb5\u4e2d\u663e\u793a)\u3001\u5199\u5165(Write Efn)\u548c\u8bfb\u53d6(Readfn)\u5bc4\u5b58\u5668\u7684\u56de\u8c03\u51fd\u6570\u3002\u867d\u7136\u6240\u6709\u6807\u51c6\u7684\u7279\u6b8a\u5bc4\u5b58\u5668\u90fd\u662f\u7531QEMU\u4e2d\u7684\u5404\u79cd\u6838\u5fc3\u5b9e\u73b0\u9884\u5b9a\u4e49\u7684\uff0c\u4f46\u662f\u5728\u4eff\u771f\u671f\u95f4\u6dfb\u52a0\u5bf9\u65b0\u7684\u7279\u6b8a\u5bc4\u5b58\u5668\u7684\u652f\u6301\u5c31\u50cf\u7f16\u5199\u51e0\u4e2a\u56de\u8c03\u51fd\u6570\u5e76\u5c06\u65b0\u7684\u63cf\u8ff0\u7b26\u6dfb\u52a0\u5230CPU\u7684cp_regs\u5b57\u6bb5\u4e00\u6837\u7b80\u5355\u3002\n\u5bf9\u4e8eKVM\uff0c\u5176\u5b9e\u73b0\u6709\u5f88\u5927\u7684\u4e0d\u540c-\u4f46\u5728\u6df1\u5165\u7814\u7a76\u5b83\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u865a\u62df\u5316\u548c\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u6709\u4e00\u4e2a\u57fa\u672c\u7684\u4e86\u89e3\u3002\n\u786c\u4ef6\u8f85\u52a9\u865a\u62df\u5316\u80cc\u540e\u7684\u60f3\u6cd5\u975e\u5e38\u7b80\u5355\uff1a\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u76f4\u63a5\u5728\u4e3b\u673aCPU\u4e0a\u6267\u884c\u4ee3\u7801\uff0c\u4f46\u8981\u963b\u6b62\u5b83\u8bbf\u95ee\u4e0d\u5c5e\u4e8e\u5b83\u7684\u8d44\u6e90\u3002\u5185\u6838\u4ee3\u7801\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u5b83\u662f\u4e07\u80fd\u7684-\u5b83\u53ef\u4ee5\u91cd\u65b0\u914d\u7f6e\u654f\u611f\u7684\u5bc4\u5b58\u5668\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b8c\u5168\u8bbf\u95ee\u6240\u6709\u53ef\u7528\u5185\u5b58\uff1a\u6211\u4eec\u5982\u4f55\u907f\u514d\u5e76\u884c\u6267\u884c\u7684\u4e24\u4e2a\u5185\u6838\u4e4b\u95f4\u7684\u51b2\u7a81\uff1f\u8be5\u95ee\u9898\u901a\u8fc7\u9650\u5236\u5728CPU\u4e0a\u7684\u865a\u62df\u73af\u5883\u4e2d\u6267\u884c\u7684\u4ee3\u7801\u7684\u6743\u9650\u6765\u89e3\u51b3\u3002\u57fa\u672c\u4e0a\uff0c\u67d0\u4e9b\u672c\u8d28\u4e0a\u88ab\u8ba4\u4e3a\u662f\u654f\u611f\u7684\u6307\u4ee4(\u4f8b\u5982\uff0c\u53ef\u4ee5\u914d\u7f6e\u91cd\u8981\u7cfb\u7edf\u5bc4\u5b58\u5668\u7684\u6307\u4ee4)\u4f1a\u4e2d\u65ad\u865a\u62df\u5316\u4ee3\u7801\u7684\u6b63\u5e38\u6267\u884c\uff0c\u5e76\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u4e3b\u673a\uff0c\u5728\u4e3b\u673a\u4e2d\uff0c\u8d1f\u8d23\u865a\u62df\u673a\u7684\u8f6f\u4ef6(\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f)\u53ef\u4ee5\u68c0\u67e5\u6307\u4ee4\uff0c\u5e76\u5728\u4e0d\u5f71\u54cd\u4e3b\u673a\u7684\u60c5\u51b5\u4e0b\u4eff\u771f\u5176\u6548\u679c\u3002\u8fd9\u4e9b\u5230\u4e3b\u673a\u7684\u8df3\u8f6c\u901a\u5e38\u79f0\u4e3aVM\u51fa\u53e3\u3002\u5e76\u4e14\u5f53\u4ee3\u7801\u5728\u6b64\u865a\u62df\u5316\u6a21\u5f0f\u4e0b\u6267\u884c\u65f6\n\u5728QEMU/KVM\u4e16\u754c\u4e2d\uff0cKVM\u627f\u62c5\u8d77\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u7684\u4f4e\u7ea7\u804c\u8d23\uff1a\u5b83\u914d\u7f6e\u865a\u62dfCPU\uff0c\u5728\u8fd9\u4e9bCPU\u4e0a\u8c03\u5ea6\u4ee3\u7801\u6267\u884c\uff0c\u5e76\u5728\u5404\u79cdVM\u9000\u51fa\u53d1\u751f\u65f6\u5bf9\u5176\u8fdb\u884c\u521d\u6b65\u5904\u7406\u3002\u5f53\u53d1\u751fKVM\u81ea\u5df1\u65e0\u6cd5\u5904\u7406\u7684\u51fa\u53e3\u65f6(\u4f8b\u5982\u4e0eKVM\u4e0d\u77e5\u9053\u7684\u6a21\u62df\u8bbe\u5907\u7684\u901a\u4fe1)\uff0cKVM\u4f1a\u5c06\u5904\u7406\u8f6c\u79fb\u5230QEMU\u3002\u5c06\u5bf9QEMU\u7684\u8fd9\u4e9b\u4f20\u8f93\u4fdd\u6301\u5728\u6700\u4f4e\u9650\u5ea6\u80cc\u540e\u7684\u539f\u56e0\u662f\u6027\u80fd\uff1aVM\u9000\u51fa\u5df2\u7ecf\u662f\u975e\u5e38\u6602\u8d35\u7684\u64cd\u4f5c(\u865a\u62dfCPU\u53ca\u5176\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u5fc5\u987b\u4fdd\u5b58\u5e76\u7a0d\u540e\u6062\u590d\uff0c\u800c\u5bfc\u81f4\u9000\u51fa\u7684\u6307\u4ee4\u7684\u4eff\u771f\u672c\u8eab\u53ef\u80fd\u662f\u4e00\u4e2a\u6f2b\u957f\u7684\u8fc7\u7a0b)\u3002\u6dfb\u52a0\u4eceKVM(\u5185\u6838\u6a21\u5f0f)\u5230QEMU(\u7528\u6237\u6a21\u5f0f)\u7684\u4f20\u8f93\u4f1a\u8fdb\u4e00\u6b65\u51cf\u6162\u6267\u884c\u901f\u5ea6\u3002\n\u90a3\u4e48\uff0c\u5f53\u542f\u7528KVM\u65f6\uff0cQEMU\u5982\u4f55\u5904\u7406\u7279\u6b8a\u5bc4\u5b58\u5668\u5462\uff1f\u5728\u4f7f\u7528\u786c\u4ef6\u865a\u62df\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u6307\u4ee4\u76f4\u63a5\u5728CPU\u4e0a\u6267\u884c\u3002\u5f53\u8bbf\u95ee\u4e3b\u673a\u5904\u7406\u5668\u672a\u77e5\u7684\u7279\u6b8a\u5bc4\u5b58\u5668\u65f6(\u5c31\u50cf\u5728\u975eApple CPU\u4e0a\u8fd0\u884c\u65f6Apple\u4e13\u7528\u5bc4\u5b58\u5668\u7684\u60c5\u51b5\u4e00\u6837)\uff0c\u5c31\u4f1a\u5f15\u53d1\u5f02\u5e38\uff0c\u5e76\u53d1\u751fVM\u9000\u51fa\u3002\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5fc5\u987b\u5728\u6062\u590d\u6765\u5bbe\u6267\u884c\u4e4b\u524d\u5904\u7406\u8bbf\u95ee\u3002KVM\u5e94\u5982\u4f55\u5904\u7406\u6b64\u95ee\u9898\uff1f\n\u8ba9\u6211\u4eec\u4ece\u68c0\u67e5arch/arm64/kvm/handleexit.c\u4e2d\u8d1f\u8d23\u5904\u7406VM\u9000\u51fa\u7684HANDLE_EXIT\u51fd\u6570\u5f00\u59cb\uff1a\nInt HANDLE_EXIT(struct KVM_vCPU*vCPU\uff0cstruct KVM_RUN*RUN\uff0cINT EXCEPTION_INDEX){/*...*/EXCEPTION_INDEX=ARM_EXCEPTION_CODE(EXCEPTION_INDEX)\uff1b\u5f00\u5173(EXCEPTION_INDEX){/*...*/case ARM_EXCEPTION_TRAP\uff1a\u8fd4\u56deHANDLE_TRAP_EXCEPTIONS(vCPU\uff0cRUN)\uff1b/*...*/}}\u3002\n\u5f53\u53d1\u751f\u9000\u51fa\u65f6\uff0cKVM\u68c0\u67e5CPU\u7684\u72b6\u6001\u5bc4\u5b58\u5668\uff0c\u4ee5\u627e\u51fa\u5bfc\u81f4\u9000\u51fa\u7684\u539f\u56e0\u3002\u5f53\u5b83\u786e\u5b9a\u5f02\u5e38\u662f\u7531\u9677\u9631\u5f15\u8d77\u7684(\u8fd9\u662f\u8bbf\u95ee\u4e0d\u53d7\u652f\u6301\u7684\u7279\u6b8a\u5bc4\u5b58\u5668\u7684\u60c5\u51b5)\u65f6\uff0c\u5b83\u4f1a\u8c03\u7528HANDLE_TRAP_EXCEPTIONS\u51fd\u6570\uff1a\nSTATIC INT HANDLE_TRAP_EXCEPTIONS(struct kvm_vcpu*vCPU\uff0cstruct kvm_run*run){int\u5df2\u5904\u7406\uff1b/**\u53c2\u89c1ARM B1.14.1\uff1a&#34\uff1bHyp Traps on Instructions*\uff0c\u8fd9\u4e9b\u6307\u4ee4\u672a\u901a\u8fc7\u5176\u6761\u4ef6\u4ee3\u7801\u68c0\u67e5&#34\uff1b*/if(\uff01KVM_CONDITION_VALID(VCPU)){KVM_SKIP_INTR(vCPU\uff0cKVM_vCPU_TRAP_IL_is32bit(VCPU))\uff1bHANDLED=1\uff1b}ELSE{EXIT_HANDLE_FN EXIT_HANDLER\uff1bEXIT_HANDLER=KVM_GET_EXIT_HANDLER(VCPU)\uff1bHANDLED=EXIT_HANDLER(vCPU\uff0cRUN)\uff1b}\u8fd4\u56deHANDLED\uff1b}\u3002\n\u8be5\u51fd\u6570\u53cd\u8fc7\u6765\u68c0\u7d22\u5904\u7406\u7a0b\u5e8f\u51fd\u6570\u5e76\u6267\u884c\u5b83\u3002\u5904\u7406\u7a0b\u5e8f\u51fd\u6570\u901a\u8fc7KVM_GET_EXIT_HANDLER\u68c0\u7d22\uff1a\nSTATIC EXIT_HANDLE_FN KVM_GET_EXIT_HANDLER(struct KVM_vCPU*vCPU){u32 HSR=KVM_vCPU_GET_HSR(VCPU)\uff1bu8 HSR_EC=ESR_ELX_EC(HSR)\uff1bRETURN ARM_EXIT_HANDLES[HSR_EC]\uff1b}\n\u5f53\u7531\u4e8e\u4e0d\u652f\u6301\u7684\u7279\u6b8a\u5bc4\u5b58\u5668\u800c\u53d1\u751f\u9677\u9631\u65f6\uff0c\u8fd4\u56de\u7684\u5904\u7406\u7a0b\u5e8f\u662fkvm_handle_sys_reg\uff0c\u6765\u81eaarch/arm64/kvm/sys_regs.c\uff1a\nInt kvm_handle_sys_reg(struct kvm_vcpu*vcpu\uff0cstruct kvm_run*run){struct sys_reg_params params\uff1bunsign long esr=kvm_vcpu_get_hsr(VCPU)\uff1bint rt=kvm_vcpu_sys_get_rt(VCPU)\uff1bint ret\uff1btrace_kvm_handle_sys_reg(ESR)\uff1bparams\u3002Is_aarch32=false\uff1bparams\u3002IS_32bit=FALSE\uff1b\u53c2\u6570\u3002Op0=(ESR&&gt;\uff1b&gt\uff1b20)&amp\uff1b3\uff1b\u53c2\u6570\u3002Op1=(ESR&&gt;\uff1b&gt\uff1b14)&amp\uff1b0x7\uff1b\u53c2\u6570\u3002CRN=(ESR&&gt;\uff1b&&gt;10)&amp\uff1b0xf\uff1b\u53c2\u6570\u3002CRM=(ESR&&gt;\uff1b&gt\uff1b1)&amp\uff1b0xf\uff1b\u53c2\u6570\u3002Op2=(ESR&&gt;\uff1b&gt\uff1b17)&amp\uff1b0x7\uff1b\u53c2\u6570\u3002Regval=vcpu_get_reg(vcpu\uff0crt)\uff1bparams\u3002Is_write=\uff01(ESR&amp\uff1b1)\uff1bret=\u4eff\u771f\u7cfb\u7edf_\u6ce8\u518c(vCPU\uff0c&amp\uff1b\n.", "note_en": "By  Lev Aronsky ( @levaronsky)   *   While QEMU started out as a platform for emulating hardware (especiallyarchitectures not supported by the host CPU), later versions gained the abilityto execute code using hardware-assisted virtualization. This can yieldsubstantial performance benefits, since most executed opcodes are performeddirectly by the CPU, instead of being translated into a number of nativeopcodes that simulate the behavior of the original one.\n Using virtualization requires a host CPU that supports the executingarchitecture. On an Intel-based machine (such as those we used for developingour iOS on QEMU project), virtualizing an architecture other than x86/x64would be impossible. Therefore, when running iOS (an arm64 OS) on QEMU, we\u2019d beusing regular emulation. At first, the performance was more than adequate. Butas our efforts to execute iOS on QEMU developed, and more parts of theoperating system were brought up successfully, we started noticing degradedperformance.\n Modern ARM chips support hardware-assisted virtualization, similar to their x86bretheren. If we were to run our version of QEMU on an ARM-based system, itshould be possible to harness the virtualization capabilites of the underlyingCPU in order to achieve near-native performance. This post documents thechallenges we had to overcome in order to successfully boot our iOS system onQEMU using hardware-assisted virtualization.\n  When moving away from an Intel-based laptop to an ARM-based system fordevelopment, the first question was, which platform to choose. Should we use anARM server in the cloud? An ARM-based development board? A developer-friendlyAndroid phone? Each of the options seemed to have its advantages.\n An ARM server would easily be the most powerful of the bunch - but theselection of ARM-based dedicated servers is limited, they aren\u2019t cheap, and weweren\u2019t sure we\u2019d get the level of access we\u2019d need (our assumption was thatrecompiling the kernel would be required). Buying a physical server is anoption we entertained for a short while, but with prices in the thousands ofdollars, the idea was quickly discarded.\n A used Android phone was another good candidate, but even developer-friendlyphones might be difficult to work with. Using Android instead of ageneral-purpose Linux could be a limiting factor - and finding a phone withenough RAM to execute iOS in parallel with a full-blown Android environmentwould require us to go with a recent phone, which would not be cheap.\n An ARM-based development board looked like a good choice, that would let ustest and develop our code at a fraction of the price of the alternatives.Looking for good aftermarket support for kernel development, 64-bit ARM SOCs,and no less than 4GB of RAM, we chose Pine Rock64 as our testbed:\n  The board comes with an arm64 CPU (Cortex-A53-based RK3328), as well as 4GB ofRAM. The choice seemed perfect for our purpose: when emulating an iPhone, wesuccessfully used Cortex-A53 as our CPU, and while 4GB of RAM wasn\u2019t ideal(we\u2019d usually run our emulation with 6GB of RAM dedicated to QEMU), our testsindicated that using less RAM (for example, 2GB) had no significant impact atthis point.\n   Once our board was up and running the latest version of Armbian, it was timefor our first attempt to run QEMU while using hardware-assisted virtualizationof the CPU in place of emulation. In theory, one simply has to add the -enable-kvm switch to the command line\u2026\n Unfortunately, it wasn\u2019t that easy. While QEMU launched successfully, iOSwouldn\u2019t boot. Attaching gdb on boot let us see the instructions we executingcorrectly at first, but upon continuing, we\u2019d quickly find ourselves in aninfinite loop located at  0xfffffff0070a0200. Based on the kernel symbols, itwas one of the vectors for interrupt/exception handling. Reaching that codemeant an exception occured early on, and the operating system still hasn\u2019treached a point where it could be handled more gracefully (such as dumpingregisters and memory content, combined with at least some sort of the issuedescription). We had no choice but to step through the early initializationof the kernel, one instruction after the other, until the jump to the exceptionvector occured.\n  At this point, it\u2019s important to note, that when the kernel is loaded for thefirst time, the MMU isn\u2019t enabled yet, and the code is mapped to physicaladdresses (the execution begins at  0x470a5098). It is only later during theinitialization that the MMU is enabled (once the page tables are initialized),and the addresses switch to the familiar kernel mode (with higher bits set to1). When looking at the kernel image in a disassembler such as Ghidra, however,all code is mapped to kernel addresses. Therefore, the initialization code wewere inspecting could be found at  0xfffffff0070a5098.\n Some of the initialization code contains loops that execute many times. Inorder to make following the execution more effective, we used breakpoints thatwe set at small intervals. This let us continue the execution, instead ofstepping through each instruction and loop. Using this technique, we quicklyfound out the exception occured at the address  0x470a72e4:\n 0x470a72d4 msr vbar_el1, x00x470a72d8 movz x0, 0x593d0x470a72dc movz x1, 0x3454, lsl 160x470a72e0 orr x0, x0, x10x470a72e4 ==&gt; msr sctlr_el1, x00x470a72e8 isb0x470a72ec movz x0, 00x470a72f0 msr tpidr_el1, x0\n As we can see, at the mentioned address, the value  0x3454593d is written intothe  SCTLR_EL1 register. As per ARM DDI 0487, D13.2.113, this is the systemcontrol register, that provides a top level control of the system at EL0 andEL1. Its first bit is used to enable address translation via the MMU. Since theexception happens when executing this instruction (and bit 0 is set in the newvalue for the register), the address translation configuration was an immediatesuspect.\n There are several registers used to configure the MMU - namely,  TCR_EL1, TTBR1_EL1, and  MAIR_EL1. We inspected the values stored in those registersprior to enabling the MMU. One field that stood out was  TCR_EL1.TG1, thatindicates the granule size for the  TTBR1_EL1. The initialization code of ouriOS kernel sets the value of  TCR_EL1.TG1 to  0b01 (the field is stored inbits 31:30, and the value written to  TCR_EL1 at  0x470a7244 is 0x000000226519a519). The value of  0b01 corresponds to a granule size of16KB.\n Notably, after stepping through the  msr instruction at  0x470a7244,inspecting the value of  TCR_EL1 revealed a slightly different value of 0x00000022a519a519 - the granule size was read out as  0b10 (4KB)! This madethe reason for an exception upon enabling the MMU clear: while the page tablesset up by the initalization code were designed with a 16KB granule size inmind, the actual granule size stored in  TCR_EL1 when enabling the MMU was setto 4KB. The MMU treated the page entries incorrectly, and a page fault occuredimmediately upon enabling the MMU. But why would the value we attempted to set,that of a 16KB granule, wouldn\u2019t stick?\n  If the value is programmed to either a reserved value, or a size that has not been implemented, then the hardware will treat the field as if it has been programmed to an IMPLEMENTATION DEFINED choice of the sizes that has been implemented for all purposes other than the value read back from this register.It is IMPLEMENTATION DEFINED whether the value read back is the value programmed or the value that corresponds to the size chosen.\n In our case,  TCR_EL1.TG is read back as  0b10 after attempting to set it to 0b01. This indicates that in our case, the read back value is one thatcorresponds to the granule size chosen (since it\u2019s not the value weprogrammed), and that the 16KB size has not been implemented in our CPU. We canverify this assumption with the help of the  ID_AA64MMFR0_EL1 register(AArch64 Memory Model Feature Register 0). Its field TGran16 (at bits 23:20)is used to indicate support for 16KB memory translation granule size: when thebits are all set to 0, the granule size is  not supported. Reading the valueof the register on our Rock64 developer board returns the value of 0x00001122 - thus, bits 23:20 are set to zero, and our CPU doesn\u2019t implementthe 16KB granule size. In fact, by referring to section 4.2.1 in ARM DDI 0500(ARM Cortex-A53 MPCore Processor Technical Reference Manual), we can see thatthe value of  0x00001122 is there by design - i.e., Cortex-A53 cores do notimplement the 16KB granule size. Interestingly, the Cortex-A53 implementationin QEMU ignores this, and implements the 16KB granule size (the value of ID_AA64MMFR0_EL1 is  0x00001122, matching the reference manual, but setting TCR_EL1.TG to  0b01 works as intended).\n We had several options for the continuation of the project. We brieflyconsidered patching the iOS kernel to use 4KB or 64KB pages, both supported byCortex-A53. This idea was quickly dropped, as it requires a lot of effort,while its probability of success is questionable. While building the initialpage table with different page sizes should be doable, we\u2019d have to find allthe places in the kernel code that manipulate the page table, and update themaccordingly - not an easy feat to accomplish.\n We, therefore, had to switch to an ARM core that supports 16KB pages. Thisbrought us back to the choice of a hardware (ARM server, development board, ora phone), with one more requirement to fullfil: we\u2019d look up the technicalreference manual of the core powering the chosen hardware, and verify thegranule size used by the iOS kernel is supported.\n Unfortunately, most budget development boards use older ARM cores (eitherCortex-A53 or Cortex-A72), with no support for the required granule size. Wefound one board with a core that had the required support - but it only had1GB of RAM. Most Android phones woulnd\u2019t fit our bill either - we\u2019d need amodern phone with a recent chipset, and all the prior challenges of workingwith a phone would still exist.\n We chose to switch to a cloud-based ARM server for initial development. Upona successful proof-of-concept, with all the potential kinks in the kernelironed out, we\u2019d consider getting a more expensive development board or aphone. Our first attempt was with Amazon AWS, but we quickly found out theirGraviton cores don\u2019t work with 16KB pages (the upcoming Graviton 2 cores arebased on ARM Neoverse N1, with the required support - but they weren\u2019tavailable at the time). We ended up working with Packet, that has 2 differentARM offerings, one based on Cavium ThunderX CN8890 and the other on Ampere eMAG8180, at competitive prices.\n We began working with the Cavium-based server, and successfully passed theinitial point of failure at  0x470a72e4 (the MMU was enabled successfully, andthe execution continued to the following instruction without exceptions).\n  Our joy was short-lived. Just several instructions later, at  0x470a72f4, weencountered another instruction that failed and dropped us into the exceptionhandler (based on the value of the status register, we hit an invalidinstruction):\n 0x470a72ec movz x0, 00x470a72f0 msr tpidr_el1, x00x470a72f4 ==&gt; mrs x12, s3_0_c15_c4_00x470a72f8 orr x12, x12, 0x8000x470a72fc orr x12, x12, 0x100000000000\n This cryptically looking  mrs instruction attempts to read the value of aspecial-purpose register. While many special registers have defined names (andare displayed accordingly in disassemblers - all the aforementioned registers,like  SCTLR_EL1, are examples of such special registers) - some are notdefined by ARM, and are specific to an implementation. Access to thoseregisters is encoded with several fields (op0, op1, CRm, CRn, and op2) - thecombination of which is unique for each system register.\n In our case, looking up this combination of fields revealed that it is aspecial register specific to Apple (it appears as  ARM64_REG_HID4 in XNUsources, defined in  pexpert/pexpert/arm64/arm64_common.h). While the purposeof this register is unclear, we dealt with it (as well as other Apple-specificregisters) in our QEMU code, by simply storing whatever values were writteninto those registers, and reading them back as-is. In fact, the code that dealtwith those registers was still present - why wouldn\u2019t it execute, and why werewe experiencing an invalid instruction instead? The root cause is in QEMU\u2019simplementation. While most of QEMU\u2019s code is indifferent to the underpinningsof the guest\u2019s CPU (whether it\u2019s emulated in software, or virtualized inhardware), certain features require different implementations. Handling ofspecial registers is one such feature.\n When KVM is not in use (and the CPU architecture is emulated), the code thatimplements the  msr and  mrs instructions uses callbacks in order to supporta range of special registers ( target/arm/translate-a64.c):\n /* MRS - move from system register * MSR (register) - move to system register * SYS * SYSL * These are all essentially the same insn in &#39;read&#39; and &#39;write&#39; * versions, with varying op0 fields. */ static  void  handle_sys ( DisasContext  * s ,  uint32_t  insn ,  bool  isread ,  unsigned  int  op0 ,  unsigned  int  op1 ,  unsigned  int  op2 ,  unsigned  int  crn ,  unsigned  int  crm ,  unsigned  int  rt ) {  const  ARMCPRegInfo  * ri ;  TCGv_i64  tcg_rt ;  ri  =  get_arm_cp_reginfo ( s -&gt; cp_regs ,  ENCODE_AA64_CP_REG ( CP_REG_ARM64_SYSREG_CP ,  crn ,  crm ,  op0 ,  op1 ,  op2 ));  /* ... */  if  ( isread )  {  if  ( ri -&gt; type  &amp;  ARM_CP_CONST )  {  tcg_gen_movi_i64 ( tcg_rt ,  ri -&gt; resetvalue );  }  else  if  ( ri -&gt; readfn )  {  TCGv_ptr  tmpptr ;  tmpptr  =  tcg_const_ptr ( ri );  gen_helper_get_cp_reg64 ( tcg_rt ,  cpu_env ,  tmpptr );  tcg_temp_free_ptr ( tmpptr );  }  else  {  tcg_gen_ld_i64 ( tcg_rt ,  cpu_env ,  ri -&gt; fieldoffset );  }  }  else  {  if  ( ri -&gt; type  &amp;  ARM_CP_CONST )  {  /* If not forbidden by access permissions, treat as WI */  return ;  }  else  if  ( ri -&gt; writefn )  {  TCGv_ptr  tmpptr ;  tmpptr  =  tcg_const_ptr ( ri );  gen_helper_set_cp_reg64 ( cpu_env ,  tmpptr ,  tcg_rt );  tcg_temp_free_ptr ( tmpptr );  }  else  {  tcg_gen_st_i64 ( tcg_rt ,  cpu_env ,  ri -&gt; fieldoffset );  }  }  /* ... */ }\n The  cp_regs of the  DisasContext struct contains descriptors of variouscoprocessor (special) registers for the emulated CPU. A descriptor of type ARMCPRegInfo can be retrieved by using the op0, op1, CRm, CRn, and op2fields, that uniqeuly identify the register. The descriptor struct may containcallback functions for access control ( accessfn, not shown in the snippet),writing ( writefn), and reading ( readfn) of the register. While all thestandard special registers are pre-defined by the various core implementationsin QEMU, adding support for new special registers during emulation is as simpleas writing a couple of callback functions, and adding the new descriptors tothe  cp_regs field of the CPU.\n With KVM, the implementation differs considerably - but prior to diving intoit, we need a basic understanding of virtualization and hypervisors.\n  The idea behind hardware-assisted virtualization is quite simple: we want to beable to execute code directly on the host CPU, but to sandbox it from accessingresources that do not belong to it. A good example would be kernel code. Itis, in theory, ommnipotent - it can reconfigure sensitive registers, and hasfull access to all available memory: how can we avoid conflicts between twokernels executing in parallel? The issue is solved by limiting the privelegesof code execuing in a virtual environment on the CPU. Basically, certaininstructions, considered sensitive in their nature (such as instructions thatcan configure important system registers), interrupt the normal execution ofthe virtualized code, and control is returned to the host, where the softwareresponsible for the virtual machine (the hypervisor) can inspect theinstruction, and emulate its effects without affecting the host. These jumpsto the host are commonly called  VM exits. And when code is executed in thisvirtualizaion mode, it is said that it runs on a virtual CPU. Not all VM exitsare necessary (and the virtual CPU can be configured to either raise thoseexits, or handle them internally), and some aspects of the virtual CPUbehavior have to be set up correctly (such as memory translation). Thehypervisor is responsible for all of the above.\n In the QEMU/KVM world, KVM takes upon itself the low-level responsibilities ofa hypervisor: it configures the virtual CPUs, schedules execution of code onthose CPUs, and takes initial care of various VM exits as they happen. When anexit happens that KVM cannot handle on its own (such as communication with anemulated device, that KVM is not aware of), KVM transfers the handling up toQEMU. The reason behind keeping those transfers to QEMU to a minimum isperformance: VM exits are already pretty expensive operations (the state ofthe virtual CPU and its registers must be saved and later restored, and theemulation of the instruction that caused the exit can be a lengthy process inits own right). Adding a transfer from KVM (kernel mode) to QEMU (user mode)slows down the execution ever further.\n  So how does QEMU handle special registers, when KVM is enabled?. With hardwarevirtualization in use, the instructions are executed directly on the CPU. Whena special register, unknown to the host processor (as is the case withApple-specific registers, when running on a non-Apple CPU), is accessed, anexception is raised, and a VM exit occurs. The hypervisor has to handle theaccess prior to resuming the guest\u2019s execution. How should KVM handle this?\n Let\u2019s start with examining the  handle_exit function in arch/arm64/kvm/handle_exit.c, that\u2019s responsible for handling VM exits:\n int  handle_exit ( struct  kvm_vcpu  * vcpu ,  struct  kvm_run  * run ,  int  exception_index ) {  /* ... */  exception_index  =  ARM_EXCEPTION_CODE ( exception_index );  switch  ( exception_index )  {  /* ... */  case  ARM_EXCEPTION_TRAP :  return  handle_trap_exceptions ( vcpu ,  run );  /* ... */  } }\n When an exit occurs, KVM checks the CPU\u2019s status register in order to find outwhat cause the exit. When it determines the exception was caused by a trap (asis the case with access to unsupported special registers), it calls the handle_trap_exceptions function:\n static  int  handle_trap_exceptions ( struct  kvm_vcpu  * vcpu ,  struct  kvm_run  * run ) {  int  handled ;  /* * See ARM ARM B1.14.1: &#34;Hyp traps on instructions * that fail their condition code check&#34; */  if  ( ! kvm_condition_valid ( vcpu ))  {  kvm_skip_instr ( vcpu ,  kvm_vcpu_trap_il_is32bit ( vcpu ));  handled  =  1 ;  }  else  {  exit_handle_fn  exit_handler ;  exit_handler  =  kvm_get_exit_handler ( vcpu );  handled  =  exit_handler ( vcpu ,  run );  }  return  handled ; }\n This function, in turn, retrieves a handler function and executes it. Thehandler function is retrieved via  kvm_get_exit_handler:\n static  exit_handle_fn  kvm_get_exit_handler ( struct  kvm_vcpu  * vcpu ) {  u32  hsr  =  kvm_vcpu_get_hsr ( vcpu );  u8  hsr_ec  =  ESR_ELx_EC ( hsr );  return  arm_exit_handlers [ hsr_ec ]; }\n When the trap occurs due to an unsupported special register, the returnedhandler is  kvm_handle_sys_reg, from  arch/arm64/kvm/sys_regs.c:\n int  kvm_handle_sys_reg ( struct  kvm_vcpu  * vcpu ,  struct  kvm_run  * run ) {  struct  sys_reg_params  params ;  unsigned  long  esr  =  kvm_vcpu_get_hsr ( vcpu );  int  Rt  =  kvm_vcpu_sys_get_rt ( vcpu );  int  ret ;  trace_kvm_handle_sys_reg ( esr );  params . is_aarch32  =  false ;  params . is_32bit  =  false ;  params . Op0  =  ( esr  &gt;&gt;  20 )  &amp;  3 ;  params . Op1  =  ( esr  &gt;&gt;  14 )  &amp;  0x7 ;  params . CRn  =  ( esr  &gt;&gt;  10 )  &amp;  0xf ;  params . CRm  =  ( esr  &gt;&gt;  1 )  &amp;  0xf ;  params . Op2  =  ( esr  &gt;&gt;  17 )  &amp;  0x7 ;  params . regval  =  vcpu_get_reg ( vcpu ,  Rt );  params . is_write  =  ! ( esr  &amp;  1 );  ret  =  emulate_sys_reg ( vcpu ,  &amp;\n......", "posttime": "2020-07-20 07:07:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u865a\u62df\u5316,ios,\u786c\u4ef6,\u5bc4\u5b58\u5668", "title": "\u5229\u7528\u786c\u4ef6\u865a\u62df\u5316(KVM)\u52a0\u901fQEMU\u4e0a\u7684IOS", "title_en": "Accelerating iOS on QEMU with hardware virtualization (KVM)", "transed": 1, "url": "https://alephsecurity.com/2020/07/19/xnu-qemu-kvm/", "via": "", "real_tags": ["\u865a\u62df\u5316", "ios", "\u786c\u4ef6", "\u5bc4\u5b58\u5668"]}, {"category": "", "categoryclass": "", "imagename": "8070009d229f31f83663fd5dbca8efc4.jpg", "infoid": 1012943, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5047\u8bbe\u6211\u4eec\u8981\u9884\u6d4b\u6211\u4eec\u7684\u670b\u53cb\u8d3e\u65af\u6c40\u4f1a\u559c\u6b22\u54ea\u4e9b\u5c0f\u8bf4\u3002\u6211\u4eec\u6709\u4e00\u5f20\u5979\u6700\u8fd1\u8bfb\u8fc7\u7684\u51e0\u672c\u5c0f\u8bf4\u7684\u6e05\u5355\uff0c\u4ee5\u53ca\u5979\u662f\u5426\u559c\u6b22\u6bcf\u4e00\u672c\u3002\u5bf9\u4e8e\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u6807\u51c6\u7684\u6709\u76d1\u7763\u7684\u673a\u5668\u5b66\u4e60\u8303\u5f0f\u5c06\u5305\u62ec\u6bd4\u8f83\u6b63\u9762\u4f8b\u5b50(\u5979\u559c\u6b22\u7684\u5c0f\u8bf4)\u548c\u8d1f\u9762\u4f8b\u5b50(\u5979\u4e0d\u559c\u6b22\u7684\u5c0f\u8bf4)\u7684\u7279\u5f81\uff0c\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u7cfb\u7edf\u6765\u9884\u6d4b\u672a\u6765\u5c1a\u672a\u89c1\u8fc7\u7684\u5c0f\u8bf4\u4f1a\u53d7\u5230\u6b63\u9762\u8fd8\u662f\u8d1f\u9762\u7684\u6b22\u8fce\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u534a\u76d1\u7763\u8303\u5f0f\u4e0d\u4ec5\u5305\u62ec\u4f7f\u7528\u8d3e\u65af\u6c40\u8bfb\u8fc7\u7684\u5c0f\u8bf4\uff0c\u4e5f\u5305\u62ec\u5979\u6ca1\u6709\u8bfb\u8fc7\u7684\u5c0f\u8bf4\uff0c\u4ee5\u51c6\u5907\u5bf9\u5979\u7684\u504f\u597d\u505a\u51fa\u9884\u6d4b\u3002\u6ca1\u6709\u6807\u7b7e\u7684\u4f8b\u5b50(\u5373\u6211\u4eec\u4e0d\u77e5\u9053\u8d3e\u65af\u6c40\u611f\u89c9\u7684\u5c0f\u8bf4)\u6bd4\u6709\u6807\u7b7e\u7684\u4f8b\u5b50(\u5373\u6b63\u9762\u548c\u8d1f\u9762\u7684)\u8981\u591a\u5f97\u591a\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u672a\u6807\u8bb0\u7684\u6570\u636e\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5f97\u5230\u6709\u6548\u7684\u5229\u7528\u3002\n\u4e3a\u4e86\u5f00\u59cb\u7406\u89e3\u672a\u6807\u8bb0\u7684\u6570\u636e\u5982\u4f55\u5e2e\u52a9\u6211\u4eec\u5f00\u53d1\u9884\u6d4b\u6807\u7b7e\u7684\u6a21\u578b\uff0c\u8bf7\u8003\u8651\u4e0b\u9762\u7684\u6f2b\u753b\u3002\u5047\u8bbe\u6211\u4eec\u6709\u51e0\u4e2a\u6b63\u6570\u636e\u70b9(\u4e0b\u9762\u7528\u7eff\u8272\u8868\u793a)\u548c\u51e0\u4e2a\u8d1f\u6570\u636e\u70b9(\u7528\u7ea2\u8272\u8868\u793a)\u3002\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5047\u8bbe\u6bcf\u4e2a\u6570\u636e\u70b9\u7531\u4e24\u4e2a\u529f\u80fd\u63cf\u8ff0\u3002\u5f53\u6211\u4eec\u5f62\u6210\u4e00\u4e2a\u6a21\u578b\u6765\u9884\u6d4b\u5176\u4ed6\u6570\u636e\u70b9\u662f\u5426\u4e3a\u6b63\u6216\u8d1f\u65f6\uff0c\u8fd9\u5c31\u50cf\u5c06\u7279\u5f81\u5e73\u9762\u5212\u5206\u4e3a\u4e24\u4e2a\u533a\u57df\uff0c\u5176\u4e2d\u4e00\u4e2a\u533a\u57df\u7684\u70b9\u88ab\u9884\u6d4b\u4e3a\u6b63\uff0c\u800c\u53e6\u4e00\u4e2a\u533a\u57df\u7684\u70b9\u88ab\u9884\u6d4b\u4e3a\u8d1f\u3002\u6839\u636e\u6211\u4eec\u662f\u5426\u77e5\u9053\u672a\u6807\u8bb0\u7684\u6570\u636e\u70b9(\u4ee5\u7070\u8272\u8868\u793a)\u4f4d\u4e8e\u4f55\u5904\uff0c\u6211\u4eec\u5bf9\u5982\u4f55\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u51b3\u5b9a\u53ef\u80fd\u4f1a\u6709\u5f88\u5927\u4e0d\u540c\u3002\n\u6b63-\u65e0\u6807\u8bb0\u5b66\u4e60\u662f\u534a\u76d1\u7763\u5b66\u4e60\u7684\u4e00\u4e2a\u91cd\u8981\u5b50\u8303\u5f0f\uff0c\u5176\u4e2d\u552f\u4e00\u53ef\u7528\u7684\u5df2\u6807\u8bb0\u6570\u636e\u70b9\u662f\u6b63\u7684\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u53ea\u77e5\u9053\u8d3e\u65af\u6c40\u6700\u559c\u6b22\u7684\u5c0f\u8bf4\u3002(\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u5979\u4e3a\u4ec0\u4e48\u8981\u8c08\u8bba\u90a3\u4e9b\u5979\u4e0d\u559c\u6b22\u7684\u5462\uff1f)\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6807\u51c6\u7684\u6709\u76d1\u7763\u673a\u5668\u5b66\u4e60\u8303\u4f8b\u5c06\u4f1a\u8fd0\u6c14\u4e0d\u4f73\uff0c\u56e0\u4e3a\u4efb\u4f55\u6807\u51c6\u6a21\u578b\u7684\u7b97\u6cd5\u90fd\u9700\u8981\u8bad\u7ec3\u6b63\u4f8b\u548c\u53cd\u4f8b\u3002\u4f46\u662f\uff0c\u518d\u8bf4\u4e00\u6b21\uff0c\u5c3d\u7ba1\u6ca1\u6709\u6807\u7b7e\u7684\u6570\u636e\u70b9\u5f88\u6a21\u7cca\uff0c\u4f46\u5982\u679c\u6211\u4eec\u806a\u660e\u5730\u4f7f\u7528\u5b83\u4eec\uff0c\u5728\u8fd9\u91cc\u53ef\u80fd\u4f1a\u6709\u5e2e\u52a9\u3002\n\u8003\u8651\u4e00\u4e0b\u4e0b\u9762\u8fd9\u5e45\u65b0\u6f2b\u753b\u3002\u6211\u4eec\u6709\u4e00\u4e9b\u79ef\u6781\u7684\u6570\u636e\u70b9(\u4e0b\u9762\u7684\u7eff\u8272\u56fe\u793a)\uff0c\u4f46\u6ca1\u6709\u8d1f\u9762\u7684\u3002\u6211\u4eec\u5fc5\u987b\u5c06\u7279\u5f81\u5e73\u9762\u5212\u5206\u4e3a\u4e24\u4e2a\u533a\u57df\uff0c\u5176\u4e2d\u4e00\u4e2a\u533a\u57df\u4e2d\u7684\u70b9\u88ab\u9884\u6d4b\u4e3a\u6b63\uff0c\u800c\u53e6\u4e00\u4e2a\u533a\u57df\u4e2d\u7684\u70b9\u88ab\u9884\u6d4b\u4e3a\u8d1f\u3002\u5982\u679c\u6211\u4eec\u77e5\u9053\u672a\u6807\u8bb0\u7684\u6570\u636e\u70b9\u5728\u54ea\u91cc\uff0c\u90a3\u4e48\u6211\u4eec\u5173\u4e8e\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u51b3\u5b9a\u5c06\u4f1a\u975e\u5e38\u4e0d\u540c\uff01\n\u4eba\u4eec\u5bf9\u5f00\u53d1\u89e3\u51b3PU\u5b66\u4e60\u95ee\u9898\u7684\u65b9\u6cd5\u975e\u5e38\u611f\u5174\u8da3\u3002\u7531\u4e8e\u6807\u51c6\u673a\u5668\u5b66\u4e60\u95ee\u9898(\u5176\u4e2d\u5927\u91cf\u7684\u6b63\u8d1f\u6570\u636e\u70b9\u53ef\u4ee5\u7528\u6765\u8bad\u7ec3\u6a21\u578b)\u662f\u4e00\u4e2a\u63a2\u7d22\u5f97\u5f88\u597d\u7684\u9886\u57df\uff0c\u6709\u5f88\u591a\u89e3\u51b3\u65b9\u6cd5\uff0c\u6240\u4ee5\u5927\u591a\u6570PU\u5b66\u4e60\u65b9\u6cd5\u90fd\u6d89\u53ca\u5230\u5bf9\u6807\u51c6\u65b9\u6cd5\u7684\u5de7\u5999\u9002\u5e94\u3002\n\u4ee5\u4e0b\u662f\u51e0\u79cd\u6280\u672f\u7684\u5feb\u901f\u603b\u7ed3\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u5c06\u5728\u7a0d\u540e\u8fdb\u884c\u5b9e\u9a8c\u5e94\u7528\u3002\n\u6216\u8bb8\u89e3\u51b3PU\u95ee\u9898\u6700\u660e\u663e\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a\u5c06\u6b63\u6570\u636e\u70b9\u548c\u672a\u6807\u8bb0\u6570\u636e\u70b9\u5206\u522b\u89c6\u4e3a\u6b63\u6570\u636e\u70b9\u548c\u8d1f\u6570\u636e\u70b9\u3002\u5bf9\u6570\u636e\u8bad\u7ec3\u6807\u51c6\u5206\u7c7b\u5668\u6a21\u578b\u3002\u5206\u7c7b\u5668\u5c06\u4e3a\u6bcf\u4e2a\u6570\u636e\u70b9\u5206\u914d\u4e00\u4e2a\u5206\u6570\uff0c\u79ef\u6781\u7684\u5206\u6570\u901a\u5e38\u9ad8\u4e8e\u6d88\u6781\u7684\u5206\u6570\u3002\u5728\u672a\u6807\u8bb0\u7684\u6570\u636e\u70b9(\u4e34\u65f6\u6807\u8bb0\u4e3a\u8d1f\u6570)\u4e2d\uff0c\u5206\u6570\u6700\u9ad8\u7684\u6570\u636e\u70b9\u6700\u6709\u53ef\u80fd\u662f\u6b63\u6570\u3002\nElkan\u548cNoto\u5728\u201c\u4ec5\u4ece\u79ef\u6781\u7684\u548c\u672a\u6807\u8bb0\u7684\u6570\u636e\u4e2d\u5b66\u4e60\u5206\u7c7b\u5668\u201d(2008\u5e74)\u4e2d\u63a2\u7d22\u4e86\u8fd9\u79cd\u6700\u5e7c\u7a1a\u7684\u65b9\u6cd5\uff0c\u5e76\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u662f\u5408\u7406\u7684\u3002\u8fd9\u7bc7\u8bba\u6587\u7684\u4e2d\u5fc3\u7ed3\u679c\u662f\uff0c\u5728\u67d0\u4e9b\u57fa\u672c\u4f46\u5bf9\u4e8e\u73b0\u5b9e\u76ee\u7684\u53ef\u80fd\u7565\u6709\u4e0d\u5408\u7406\u7684\u5047\u8bbe\u4e0b\uff0c\u5bf9\u6b63\u6570\u636e\u548c\u672a\u6807\u8bb0\u6570\u636e\u8bad\u7ec3\u7684\u6807\u51c6\u5206\u7c7b\u5668\u5e94\u8be5\u7ed9\u51fa\u7684\u5206\u6570\u5e94\u8be5\u4e0e\u5b83\u5728\u5bf9\u6b63\u6570\u636e\u548c\u8d1f\u6570\u636e\u8fdb\u884c\u9002\u5f53\u8bad\u7ec3\u65f6\u7ed9\u51fa\u7684\u5206\u6570\u6210\u6b63\u6bd4\u3002\n\u6b63\u5982\u4f5c\u8005\u6240\u6307\u51fa\u7684\uff0c\u201c\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c(\u5047\u8bbe\u6b63\u786e\u8bad\u7ec3\u7684)\u5206\u7c7b\u5668\u4ec5\u7528\u4e8e\u6839\u636e\u6837\u672c\u5c5e\u4e8e[\u9633\u6027]\u7684\u6982\u7387\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528[\u5bf9\u9633\u6027\u548c\u672a\u6807\u8bb0\u6570\u636e\u8fdb\u884c\u8bad\u7ec3]\u7684\u5206\u7c7b\u5668\u3002\u201d\n\u5bf9\u4e8e\u7ed9\u5b9a\u7684PU\u95ee\u9898\uff0c\u4e00\u79cd\u76f8\u5173\u4f46\u66f4\u590d\u6742\u7684\u65b9\u6cd5\u6d89\u53ca\u88c5\u888b\u7684\u53d8\u4f53\uff1a\n\u901a\u8fc7\u5c06\u6240\u6709\u6b63\u6570\u636e\u70b9\u4e0e\u6765\u81ea\u672a\u6807\u8bb0\u70b9\u7684\u968f\u673a\u6837\u672c\u8fdb\u884c\u66ff\u6362\u6765\u521b\u5efa\u8bad\u7ec3\u96c6\u3002\n\u4ece\u8fd9\u4e2a\u201cBootstrap\u201d\u6837\u672c\u6784\u5efa\u5206\u7c7b\u5668\uff0c\u5c06\u6b63\u6570\u636e\u70b9\u548c\u672a\u6807\u8bb0\u6570\u636e\u70b9\u5206\u522b\u89c6\u4e3a\u6b63\u6570\u636e\u70b9\u548c\u8d1f\u6570\u636e\u70b9\u3002\n\u5c06\u5206\u7c7b\u5668\u5e94\u7528\u4e8e\u968f\u673a\u6837\u672c\u4e2d\u672a\u5305\u62ec\u7684\u4efb\u4f55\u672a\u6807\u8bb0\u6570\u636e\u70b9(\u4ee5\u4e0b\u79f0\u4e3aOOB(\u201c\u888b\u5b50\u5916\u201d)\u70b9)\uff0c\u5e76\u8bb0\u5f55\u5b83\u4eec\u7684\u5206\u6570\u3002\n\u91cd\u590d\u4e0a\u8ff0\u4e09\u4e2a\u6b65\u9aa4\u591a\u6b21\uff0c\u6700\u540e\u5c06\u6536\u5230\u7684OOB\u5206\u6570\u7684\u5e73\u5747\u503c\u5206\u914d\u7ed9\u6bcf\u4e2a\u70b9\u3002\n\u63cf\u8ff0\u8fd9\u79cd\u65b9\u6cd5\u7684\u4e00\u7bc7\u8bba\u6587\u662fMordelet\u548cVert\u7684A BagingSVM to Learning from Positive and Unlabed Example(2013)\u3002\u6839\u636e\u4f5c\u8005\u7684\u8bf4\u6cd5\uff0c\u201c\u8be5\u65b9\u6cd5\u53ef\u4ee5\u4e0e\u6700\u5148\u8fdb\u7684PU\u5b66\u4e60\u65b9\u6cd5\u76f8\u5ab2\u7f8e\uff0c\u751a\u81f3\u4f18\u4e8e\u6700\u5148\u8fdb\u7684\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5f53\u6b63\u4f8b\u7684\u6570\u91cf\u6709\u9650\uff0c\u800c\u672a\u6807\u8bb0\u7684\u793a\u4f8b\u4e2d\u7684\u53cd\u4f8b\u7684\u6bd4\u4f8b\u5f88\u5c0f\u65f6\uff0c\u5c24\u5176\u662f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u65b9\u6cd5\u7684\u6027\u80fd\u53ef\u4ee5\u4e0e\u6700\u5148\u8fdb\u7684PU\u5b66\u4e60\u65b9\u6cd5\u76f8\u5ab2\u7f8e\uff0c\u751a\u81f3\u4f18\u4e8e\u6700\u5148\u8fdb\u7684\u65b9\u6cd5\u3002\u5efa\u8bae\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u6bd4\u6700\u5148\u8fdb\u7684\u65b9\u6cd5\u8fd0\u884c\u5f97\u5feb\u5f97\u591a\uff0c\u7279\u522b\u662f\u5f53\u672a\u6807\u8bb0\u7684\u793a\u4f8b\u96c6\u5408\u5f88\u5927\u65f6\u3002\u201c\u3002\n\u5404\u79cd\u5404\u6837\u7684PU\u5b66\u4e60\u7b56\u7565\u90fd\u5c5e\u4e8e\u201c\u4e24\u6b65\u6cd5\u201d\u7684\u4e00\u822c\u8303\u7574\u3002\u5728Kaboutari\u3001Bagherzadeh\u548cKheradmand\u6240\u8457\u7684\u201c\u6587\u672c\u5206\u7c7b\u4e2d\u6b63\u9762\u65e0\u6807\u7b7e\u5b66\u4e60\u7684\u4e24\u6b65\u6280\u672f\u8bc4\u4f30\u201d(2014)\u4e2d\uff0c\u5bf9\u8fd9\u4e9b\u6280\u672f\u8fdb\u884c\u4e86\u4e0d\u9519\u7684\u4ecb\u7ecd\u3002\n\u8bc6\u522b\u53ef\u4ee5\u786e\u4fe1\u5730\u6807\u8bb0\u4e3a\u9634\u6027\u7684\u672a\u6807\u8bb0\u6570\u636e\u70b9\u7684\u5b50\u96c6\u3002(\u4e0a\u8ff0\u8bba\u6587\u7684\u4f5c\u8005\u79f0\u8fd9\u4e9b\u89c2\u70b9\u4e3a\u201c\u53ef\u9760\u7684\u8d1f\u9762\u56e0\u7d20\u201d\u3002)\u3002\n\u4f7f\u7528\u6b63\u6570\u636e\u70b9\u548c\u8d1f\u6570\u636e\u70b9\u8bad\u7ec3\u6807\u51c6\u5206\u7c7b\u5668\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u4e8e\u5176\u4f59\u672a\u6807\u8bb0\u7684\u70b9\u3002\n\u901a\u5e38\uff0c\u7b2c\u4e8c\u6b65\u7684\u7ed3\u679c\u7528\u4e8e\u8fd4\u56de\u7b2c\u4e00\u6b65\u5e76\u8fed\u4ee3\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u201c\u5982\u679c[\u53ef\u9760\u5426\u5b9a]\u96c6\u5408\u5305\u542b\u5927\u591a\u6570\u5426\u5b9a\u6587\u6863\u5e76\u4e14\u8db3\u591f\u5927\uff0c\u5219\u5b66\u4e60\u7b97\u6cd5\u2026\u3002\u5de5\u4f5c\u975e\u5e38\u597d\uff0c\u5c06\u80fd\u591f\u5efa\u7acb\u4e00\u4e2a\u826f\u597d\u7684\u5206\u7c7b\u5668\u3002\u4f46\u901a\u5e38\u662f\u5728\u6b65\u9aa41\u2026\u4e2d\u6807\u8bc6\u7684\u4e00\u7ec4\u975e\u5e38\u5c0f\u7684\u8d1f\u9762\u6587\u6863\u3002\u7136\u540e\uff0c\u5b66\u4e60\u7b97\u6cd5\u53cd\u590d\u8fd0\u884c\uff0c\u76f4\u5230\u6536\u655b\u6216\u6ee1\u8db3\u67d0\u79cd\u505c\u6b62\u6807\u51c6\u3002\u201c\u3002\nShubham Jain\u5728\u6700\u8fd1\u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u201c\u4f2a\u6807\u7b7e\u7b80\u4ecb\uff1a\u4e00\u79cd\u534a\u76d1\u7763\u5b66\u4e60\u6280\u672f\u201d\u4e2d\u63d0\u51fa\u4e86\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u4f46\u5176\u4e2d\u7684\u7ec6\u8282\u5e76\u4e0d\u662f\u4e13\u95e8\u9488\u5bf9PU\u95ee\u9898\u7684\u3002\n\u8fd9\u91cc\u503c\u5f97\u4e00\u63d0\u7684\u662f\u6700\u540e\u4e00\u4e2a\u5f00\u53d1\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u4f1a\u5305\u62ec\u5728\u6211\u4eec\u4e0b\u9762\u7684\u5b9e\u9a8c\u4e2d\uff0c\u5b83\u662fLi\u548c\u534e\u5728\u201c\u8d70\u5411\u5e76\u884c\u6570\u636e\u6316\u6398\u7684\u6b63\u5411\u65e0\u6807\u7b7e\u5b66\u4e60\uff1a\u968f\u673a\u68ee\u6797\u6846\u67b6\u201d(2014)\u4e2d\u4ecb\u7ecd\u7684\u4e00\u79cd\u7b97\u6cd5\u3002\n\u901a\u8fc7\u5bf9\u5408\u6210\u6570\u636e\u96c6\u2026\u548c\u771f\u5b9e\u6570\u636e\u96c6UCi\u7684\u5b9e\u9a8c\uff0c\u63d0\u51fa\u7684\u6846\u67b6\u79f0\u4e3aPURF(\u6b63\u65e0\u6807\u8bb0\u968f\u673a\u68ee\u6797)\uff0c\u80fd\u591f\u4ece\u6b63\u7684\u548c\u672a\u6807\u8bb0\u7684\u5b9e\u4f8b\u4e2d\u5b66\u4e60\uff0c\u5e76\u4e14\u901a\u8fc7\u5e76\u884c\u8ba1\u7b97\u83b7\u5f97\u4e0e\u7531\u5168\u6807\u8bb0\u6570\u636e\u8bad\u7ec3\u7684RF\u76f8\u5f53\u7684\u5206\u7c7b\u6027\u80fd\uff0c\u5e76\u4e14\u5728\u5408\u6210\u7684\u548c\u771f\u5b9e\u7684UCi\u6570\u636e\u96c6\u4e0a\u90fd\u80fd\u83b7\u5f97\u4e0e\u5b8c\u5168\u6807\u8bb0\u7684\u6570\u636e\u8bad\u7ec3\u7684RF\u76f8\u5f53\u7684\u5206\u7c7b\u6027\u80fd\u3002\u8be5\u6846\u67b6\u5c06\u5305\u62ec\u5e7f\u6cdb\u4f7f\u7528\u7684PU\u4fe1\u606f\u589e\u76ca(PURF-IG)\u548c\u65b0\u5f00\u53d1\u7684PU\u57fa\u5c3c\u6307\u6570(PURF-GI)\u5728\u5185\u7684PU\u5b66\u4e60\u6280\u672f\u4e0e\u53ef\u6269\u5c55\u7684\u5e76\u884c\u8ba1\u7b97\u7b97\u6cd5(\u5373RF)\u76f8\u7ed3\u5408\u3002\u201c\n\u6b64\u5916\uff0c\u4f5c\u8005\u62a5\u544a\u8bf4\u4ed6\u4eec\u5df2\u7ecf\u201c\u57fa\u4e8eSCRICKIT-LEARN\u5305\u7528Python\u5b9e\u73b0\u4e86PURF\u201d\uff0c\u6240\u4ee5\u5982\u679c\u4ee3\u7801\u5728\u67d0\u4e2a\u65f6\u5019\u53ef\u4ee5\u516c\u5f00\u4f7f\u7528\uff0c\u5b83\u53ef\u80fd\u662f\u4e00\u4e2a\u5f88\u6709\u524d\u9014\u7684\u5de5\u5177\u3002\n\u5728\u4e0b\u9762\u7684\u6240\u6709\u4ee3\u7801\u4e2d\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u718a\u732b\u6570\u636e\u5e27X\u7684\u7279\u6027\u548c\u4e00\u4e2a\u718a\u732b\u7cfb\u5217y\u7684\u76ee\u6807(1\u8868\u793a\u6b63\u9762\uff0c0\u8868\u793a\u5176\u4f59\u7684)\u3002\n#\u4e3alatery_orig=y.copy()\u4fdd\u6301\u539f\u59cb\u76ee\u6807\u7684\u5b89\u5168#\u53d6\u6d88\u4e00\u5b9a\u6570\u91cf\u7684\u6570\u636e\u70b9\u7684\u6807\u7b7eshidden_size=#\u5728\u6b64\u5904\u8f93\u5165\u6570\u5b57#y.loc[np\u968f\u673a\u9009\u62e9(y[y==1].index\uff0cReplace=false\uff0csize=HIDDEN_SIZE)]=0\u3002\n\u5f97\u5230\u7684\u6570\u636e\u96c6\u662f\u6211\u4eec\u5c06\u7528\u6765\u6839\u636e\u524d\u9762\u6982\u8ff0\u7684\u65b9\u6cd5\u6784\u5efa\u6a21\u578b\u7684\u6570\u636e\u96c6\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u786e\u5b9a\u4ed6\u4eec\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u6210\u529f\u5730\u8bc6\u522b\u51fa\u6211\u4eec\u5bf9\u4ed6\u4eec\u9690\u85cf\u7684\u79ef\u6781\u56e0\u7d20\u6765\u5224\u65ad\u4ed6\u4eec\u7684\u6709\u6548\u6027\u3002\n\u4ecesklearn.ensemble\u5bfc\u5165RandomForestSorfierrf=RandomForest\u5206\u7c7b\u5668(FORN_ESTIMATERS=1000\uff0cFOR#1000\u68f5\u6811\uff1aFRON_JOBS=-1\u6811\uff0c#\u4f7f\u7528\u6240\u6709CPU\u6838\u5fc3)rf.fit(X\uff0cy)\u3002\nResults=pd.DataFrame({PROUT&39\uff1bTRUE&39\uff1bTRUSE\uff1aY_ORIG\uff0c)\uff1aY_orig\uff0c\uff1a#True Labels\uff1b&#39\uff1bLabel\uff1aY\uff0c\uff1aY\uff0c#\u663e\u793a\u7ed9\u6a21\u578b\u7684#\u4e2a\u6807\u7b7e\uff1aOutput_Std&39\uff1b\uff1arf.Forect_Proba(X)[\uff1a\uff0c1]\u548c#Random Forest\u7684\u5206\u6570\u3002\uff0c&#39\uff1b\u6807\u7b7e&#39\uff1b\uff0c&#39\uff1bOUTPUT_STD&#39\uff1b])\u3002\n\u4e3a\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u5c06\u5176\u4ed6\u65b9\u6cd5\u7684\u8f93\u51fa\u5b58\u50a8\u5728\u76f8\u540c\u7684\u6570\u636e\u5e27\u4e2d\u3002\n\u8ddf\u8e2a\u6b63\u6570\u636e\u70b9\u548c\u672a\u6807\u8bb0\u6570\u636e\u70b9\u7684\u6307\u6570\u975e\u5e38\u65b9\u4fbf\uff1a\n\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u636e\u70b9\uff0c\u6211\u4eec\u8fd8\u5c06\u8bb0\u5f55\u5b83\u88abOOB\u7684\u6b21\u6570\uff0c\u4ee5\u53ca\u5b83\u6536\u5230\u7684OOB\u5206\u6570\u7684\u603b\u548c\uff1a\nNum_OOB=pd.DataFrame(np.zeros(Shape=Y.Shape)\uff0cindex=y.index)sum_OOB=pd.DataFrame(np.zeros(Shape=Y.Shape)\uff0cindex=y.index)\u3002\nFor_in range(N_Stiators)\uff1a*#\u83b7\u53d6\u672c\u8f6e\u672a\u6807\u7b7e\u70b9\u7684\u5f15\u5bfc\u6837\u672c#ib=np\u968f\u673a\u9009\u62e9(Iu\uff0cReplace=True\uff0csize=len(Ip))#\u67e5\u627e\u672c\u8f6e\u7684OOB\u6570\u636e\u70b9i_oob=list(set(IU)-set(Ib))#\u83b7\u53d6\u8bad\u7ec3\u6570\u636e(\u6240\u6709\u6b63\u503c\u548c\u672a\u6807\u7b7e\u70b9\u7684\u5f15\u5bfc#\u6837\u672c)\u5e76\u6784\u5efa\u6811\uff1axB=X[y&\u30020].append(y.loc[ib])*stistiator.fit(xB\uff0cyb)*#\u8bb0\u5f55\u672c\u8f6e\u7684OOB\u5206\u6570\uff1a\uff1asum_oob.loc[I_OOB\uff0c0]+=stistiator.Forect_Proba(X.loc[I_OOB])[\uff1a\uff0c1]Num_oob.loc[I_OOB\uff0c0]+=1\u3002\nPU\u6253\u5305\u65b9\u6cd5\u662f\u5982\u6b64\u4f18\u96c5(\u6b63\u5982\u6211\u4eec\u5c06\u770b\u5230\u7684\u90a3\u6837\uff0c\u529f\u80fd\u4e5f\u975e\u5e38\u5f3a\u5927)\uff0c\u56e0\u6b64\u6211\u51b3\u5b9a\u521b\u5efa\u4e00\u4e2a\u5229\u7528\u5e76\u884c\u5316\u7684\u66f4\u7528\u6237\u53cb\u597d\u7684\u5b9e\u73b0\u3002\u6211\u7684\u5b9e\u73b0\u76f8\u5f53\u7b80\u5355\u5730\u6539\u7f16\u81eaSCRKIT-LEARN\u4e2d\u7684BaggingTyfier\u3002\u4ee3\u7801\u53ef\u4ee5\u5728\u8fd9\u91cc\u63d0\u4f9b\u7684bagingPU.py\u6587\u4ef6\u4e2d\u627e\u5230\u3002\u4f7f\u7528\u6211\u7684\u5b9e\u73b0\uff0c\u4e0a\u9762\u7684\u6240\u6709\u4ee3\u7801\u90fd\u53ef\u4ee5\u66ff\u6362\u4e3a\u4ee5\u4e0b\u4ee3\u7801\uff1a\nFrom bagingPU import BaggingSorfierPUbc=BaggingClassfierPU(\u6570\u636e\u51b3\u7b56\u6811\u5206\u7c7b\u5668()\uff0cn_\u4f30\u8ba1\u5668=1000\uff0cn_job=-1\uff0cmax_Samples=sum(Y)#\u6bcf\u4e2a\u8bad\u7ec3\u6837\u672c\u5c06\u88ab\u5e73\u8861)bc.fit(X\uff0cy)Results[&#39\uff1boutput_Bag&#39\uff1b]=bc.ob_Decision_Function_[\uff1a\uff0c1]\uff0cbc.fit(X\uff0cy)Results[&#39\uff1boutput_Bag&#39\uff1b]=bc.ob_Decision_Function_[\uff1a\uff0c1]\u3002\n\u5728\u4e00\u53f0\u67094\u4e2a\u5185\u6838\u7684\u673a\u5668\u4e0a\uff0c\u8fd9\u4e2a\u65b0\u7684\u4ee3\u7801\u7247\u6bb5\u8fd0\u884c\u65f6\u95f4\u5927\u7ea6\u662f\u4ee5\u524d\u7684\u56db\u5206\u4e4b\u4e00\u3002\n\u5728\u4e24\u6b65\u65b9\u6cd5\u4e2d\uff0c\u6570\u636e\u70b9\u5c06\u5e26\u6709\u4e09\u4e2a\u6307\u5b9a\u4e4b\u4e00(\u6b63\u3001\u672a\u6807\u8bb0\u6216\u8d1f)\uff0c\u5e76\u4e14\u8bb8\u591a\u70b9\u5c06\u5728\u6b64\u8fc7\u7a0b\u4e2d\u91cd\u65b0\u6307\u5b9a\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u76ee\u6807\u5411\u91cf\uff0c1\u8868\u793a\u6b63\u5411\u91cf\uff0c-1\u8868\u793a\u672a\u6807\u8bb0\u5411\u91cf\uff0c0\u8868\u793a\u201c\u53ef\u9760\u7684\u8d1f\u503c\u201d\u3002\n\u5f53\u7136\uff0c\u4e00\u5f00\u59cb\u5c31\u6ca1\u6709\u53ef\u9760\u7684\u8d1f\u9762\u56e0\u7d20\u3002\u5bf9\u4e8e\u6b65\u9aa41\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u524d\u9762\u7684\u5206\u6570\uff1a\n\u8ba9\u6211\u4eec\u627e\u51fa\u7ed9\u4e88\u5df2\u77e5\u6b63\u6570\u636e\u70b9\u7684\u5206\u6570\u8303\u56f4\uff1a\n\u6b65\u9aa41\uff1a\u5982\u679c\u4efb\u4f55\u672a\u6807\u8bb0\u7684\u70b9\u5f97\u5206\u4f4e\u4e8e\u6240\u6709\u5df2\u77e5\u7684\u6b63\u503c\uff0c\u5219\u5c06\u5176\u6807\u8bb0\u4e3a\u8d1f\u503c\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u5b83\u7684\u5f97\u5206\u9ad8\u4e8e\u6240\u6709\u5df2\u77e5\u7684\u79ef\u6781\u56e0\u7d20\uff0c\u6211\u4eec\u4e0d\u59a8\u7ed9\u5b83\u8d34\u4e0a\u79ef\u6781\u7684\u6807\u7b7e\u3002\nIp_new=ys[(ys&lt\uff1b0)&amp\uff1b(pred&&gt;\uff1b=range_P[1])].indexiN_new=ys[(ys&lt\uff1b0)&amp\uff1b(pred&lt\uff1b=range_P[0])].indexys.loc[IP_new]=1ys.loc[in_new]=0\u3002\n\u6211\u4eec\u5c06\u628a\u81ea\u5df1\u9650\u5236\u5728\u6700\u591a10\u6b21\u8fed\u4ee3\u3002\u8fd9\u662f\u4e00\u4e2a\u6b66\u65ad\u7684\u9009\u62e9\uff0c\u4f46\u5982\u679c\u6211\u4eec\u53ea\u662f\u7b49\u5f85\u5b83\u505c\u6b62\u5bfb\u627e\u548c\u6807\u8bb0\u65b0\u7684\u8d1f\u7247\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002(\u6b64\u5916\uff0c\u6b63\u5982\u524d\u9762\u63d0\u5230\u7684\u548c\u6211\u4eec\u5c06\u5728\u5b9e\u9a8c\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u5c06\u6211\u4eec\u81ea\u5df1\u9650\u5236\u5728\u5355\u4e2a\u8fed\u4ee3\u4e2d\u751a\u81f3\u53ef\u80fd\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002)\u3002\n\u5bf9\u4e8eI in Range(10)\uff1a\u5982\u679c\u6b65\u9aa41\u6ca1\u6709\u627e\u5230\u65b0\u6807\u7b7e\uff0c\u5982\u679c\u6b65\u9aa41\u6ca1\u6709\u627e\u5230\u65b0\u6807\u7b7e\uff0c\u5219\u5982\u679clen(Ip_New)+len(In_New)==0\u4e14i&gt\uff1b0\uff1a0\uff1a0\uff0c\u5219\u91cd\u65b0\u6253\u5370(\u6b65\u9aa41\u6807\u8bb0\u4e3a%d\u4e2a\u65b0\u6b63\u7247\u548c%d\u4e2a\u65b0\u8d1f\u7247\u3002&#39\uff1b\u6b65\u9aa41\u6807\u8bb0\u4e3a%d\u4e2a\u65b0\u6b63\u7247\u548c%d\u4e2a\u65b0\u8d1f\u7247\u3002&#39\uff1bn#39\uff1bn#3%(len(Ip_New)\uff0clen(In_New)\u3002&#39\uff1b\uff0cend=&#39\uff1b&#39\uff1b)#\u91cd\u65b0\u8bad\u7ec3\u65b0\u6807\u7b7e\u5e76\u83b7\u5f97\u65b0\u5206\u6570\uff1arf2.fit(X\uff0cys)\uff1brepred=rf2.Forect_Proba(X)[\uff1a\uff0c-1]#\u67e5\u627e\u7ed9\u4e88\u6b63\u6570\u636e\u70b9\u7684\u5206\u6570\u8303\u56f4\uff1aRange_P=[min(pred*(ys&gt\uff1b0))\uff0cmax(pred*(ys&gt\uff1b0))]\uff1b#\u91cd\u590d\u6b65\u9aa41\uff1aIP_\u3002(prd&gt\uff1b=range_P[1])].index=in_new=ys[(ys&lt\uff1b0)&amp\uff1b(pred&lt\uff1b=range_P[0])].index=ys.loc[IP_new]=1\uff1bys.loc[in_new]=0\u3002\n\u4f5c\u4e3a\u4e0e\u5176\u4ed6\u65b9\u6cd5\u6bd4\u8f83\u7684\u7b2c\u56db\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u4e09\u79cd\u4e3b\u8981\u65b9\u6cd5\u5206\u914d\u7ed9\u6bcf\u4e2a\u6570\u636e\u70b9\u7684\u5e73\u5747\u5206\u6570\u3002\n\u5728\u6b64\u4e4b\u540e\uff0c\u6211\u4eec\u51c6\u5907\u6bd4\u8f83\u4e0d\u540c\u65b9\u6cd5\u7684\u8868\u73b0-\u5373\u4ed6\u4eec\u80fd\u591a\u597d\u5730\u8bc6\u522b\u9690\u85cf\u7684\u79ef\u6781\u56e0\u7d20\u3002\n\u6211\u4eec\u5c06\u901a\u8fc7\u5c06\u4e0a\u9762\u5f00\u53d1\u7684\u4e00\u4e9b\u65b9\u6cd5\u5e94\u7528\u4e8e\u51e0\u4e2a\u4eba\u5de5\u6570\u636e\u96c6\u6765\u6d4b\u8bd5\u5b83\u4eec\u3002\u5728\u63a5\u4e0b\u6765\u7684\u5e16\u5b50\u4e2d\uff0c\u6211\u5c06\u5c55\u793a\u4f7f\u7528\u67d0\u4e00\u5b9e\u9645\u6570\u636e\u96c6\u65f6\u7684\u7ed3\u679c\u3002\n\u8fd9\u4e2a\u5b9e\u9a8c\u7684\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u5728\u8fd9\u4e2aGitHub\u94fe\u63a5\u4e0a\u627e\u5230\u3002\u4e00\u4e9b\u4e0d\u592a\u6709\u8da3\u7684\u4ee3\u7801\uff0c\u7279\u522b\u662f\u7528\u4e8e\u751f\u6210\u56fe\u5f62\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u5305\u542b\u5728\u672c\u6587\u4e2d\u3002\n\u4ecesklearn.dataSets\u5bfc\u5165Make_Circle X\uff0cy=Make_Circle(n_Samples=6000\uff0cNoise=0.1\uff0cShuffle=True\uff0cfactor=.65)X=pd.DataFrame(X\uff0cColumns=[&#39\uff1bFeature 1&#39\uff1b\uff0c&#39\uff1bFeature 2&#39\uff1b])y=pd.Series(Y)\u3002\n-\u6240\u4ee5\u4e09\u5206\u4e4b\u4e00\u7684\u9633\u6027\u5c06\u88ab\u53d6\u6d88\u6807\u8bb0\u3002\u4ea7\u751f\u7684\u6570\u636e\u96c6\u5728\u8fd9\u91cc\u53ef\u89c6\u5316\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4eba\u5de5\u6570\u636e\u7531\u4e24\u4e2a\u70b9\u7684\u540c\u5fc3\u5706\u533a\u57df\u7ec4\u6210\uff0c\u6b63\u503c\u533a\u57df\u7ec4\u6210\u6700\u91cc\u9762\u7684\u533a\u57df\u3002\n\u4e3a\u4e86\u6d4b\u8bd5\u5404\u79cd\u5b66\u4e60PU\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u8fd0\u884c\u524d\u9762\u5217\u51fa\u7684\u6240\u6709\u4ee3\u7801\u3002\u4e0b\u9762\u7684\u56fe\u8868\u663e\u793a\u4e86\u901a\u8fc7\u4f7f\u7528\u6807\u51c6\u5206\u7c7b\u5668\u548c\u4f7f\u7528PU\u6253\u5305\u65b9\u6cd5\u5206\u914d\u7ed9\u65e0\u6807\u7b7e\u70b9\u7684\u5206\u6570\u3002\n\u5728\u89c6\u89c9\u5c42\u9762\u4e0a\uff0c\u8fd9\u4e24\u79cd\u65b9\u6cd5\u4e4b\u95f4\u4f3c\u4e4e\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\uff0c\u9664\u4e86PU\u88c5\u888b\u6bd4\u6807\u51c6\u5206\u7c7b\u5668\u5206\u914d\u7684\u5206\u6570\u8303\u56f4\u66f4\u5e7f\u3002\nPU\u88c5\u888b\u7684\u4e24\u79cd\u4e0d\u540c\u5b9e\u73b0\u663e\u7136\u6267\u884c\u8d77\u6765\u51e0\u4e4e\u76f8\u540c\u3002\u8fd9\u5728\u968f\u540e\u7684\u6240\u6709\u5b9e\u9a8c\u4e2d\u90fd\u662f\u5982\u6b64(\u5982\u4e0b\u6240\u8ff0)\uff0c\u8fd9\u8868\u660e\u8fd9\u4e24\u4e2a\u5b9e\u73b0\u5b9e\u9645\u4e0a\u662f\u76f8\u540c\u7684-\u6b63\u5982\u9884\u671f\u7684\u90a3\u6837\uff01\u552f\u4e00\u771f\u6b63\u7684\u533a\u522b\u662f\uff0c\u6211\u7684\u6539\u7f16\u81eaSCRKIT\u7684\u5e76\u884c\u7248\u672c-\u5b66\u4e60\u901f\u5ea6\u8981\u5feb\u5f97\u591a\u3002\n\u4e0b\u9762\u7684\u56fe\u8868\u76f4\u89c2\u5730\u5c55\u793a\u4e86\u4e24\u6b65\u6cd5\u3002\u5728\u5de6\u4fa7\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u54ea\u4e9b\u6570\u636e\u70b9\u5728\u7b2c\u4e00\u6b65\u4e2d\u88ab\u6807\u8bb0\u4e3a\u201c\u53ef\u9760\u8d1f\u7247\u201d\u3002\u8bf7\u6ce8\u610f\uff0c\u76f8\u5f53\u6570\u91cf\u7684\u9884\u671f\u8d1f\u7247\u7acb\u5373\u88ab\u91cd\u65b0\u6807\u8bb0\u4e3a\u201c\u53ef\u9760\u8d1f\u7247\u201d\u3002\u53f3\u4fa7\u7684\u56fe\u8868\u663e\u793a\u4e86\u5728\u4e24\u6b65\u8fc7\u7a0b\u7684\u51e0\u6b21\u8fed\u4ee3\u4e4b\u540e\u5206\u914d\u7ed9\u672a\u6807\u8bb0\u70b9\u7684\u5206\u6570\u3002\n\u4ece\u89c6\u89c9\u4e0a\u770b\uff0c\u6211\u7684\u4e24\u6b65\u65b9\u6cd5\u7684\u8f93\u51fa\u4f3c\u4e4e\u4e0e\u6807\u51c6\u5206\u7c7b\u5668\u5dee\u522b\u5f88\u5c0f\u3002\n\u8ba9\u6211\u4eec\u66f4\u4ed4\u7ec6\u5730\u770b\u770b\u8fd9\u4e09\u79cd\u4e3b\u8981\u65b9\u6cd5\u7684\u6027\u80fd\uff0c\u6839\u636e\u5b83\u4eec\u8bc6\u522b\u9690\u85cf\u5728\u672a\u6807\u8bb0\u7684\u70b9\u4e2d\u7684\u79ef\u6781\u56e0\u7d20\u7684\u80fd\u529b\u6765\u5224\u65ad\u6bcf\u79cd\u65b9\u6cd5\u7684\u6027\u80fd\u3002\u4ee5\u4e0b\u662f\u76f4\u89c2\u7684\u6458\u8981\uff1a\n\u65e0\u8bba\u6211\u4eec\u4f7f\u7528\u54ea\u79cd\u65b9\u6cd5\uff0c\u5982\u679c\u6211\u4eec\u53ea\u9009\u62e9500\u4e2a\u201c\u6700\u597d\u201d\u7684\u65e0\u6807\u8bb0\u70b9--\u4e5f\u5c31\u662f\u5f97\u5206\u6700\u9ad8\u7684\u70b9--\u7ed3\u679c\u53d1\u73b0\uff0c\u5176\u4e2d90%\u4ee5\u4e0a\u5b9e\u9645\u4e0a\u662f\u9690\u85cf\u7684\u79ef\u6781\u56e0\u7d20\uff0c\u867d\u7136\u8fd9\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u8868\u73b0\u5927\u81f4\u76f8\u540c\uff0c\u4f46PU\u88c5\u888b\u65b9\u6cd5\u7684\u8868\u73b0\u660e\u663e\u843d\u540e\u4e8e\u5176\u4ed6\u65b9\u6cd5\u3002\u8fd9\u4e0d\u5e94\u8be5\u592a\u4ee4\u4eba\u60ca\u8bb6\uff1b\u6b63\u5982\u524d\u9762\u6240\u5f15\u7528\u7684\uff0c\u201c\u5f53\u6b63\u9762\u793a\u4f8b\u7684\u6570\u91cf\u6709\u9650\u65f6\u201d\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5de5\u4f5c\u5f97\u7279\u522b\u597d\uff0c\u4f46\u8fd9\u91cc\u7684\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002\n\u8fd9\u683790%\u7684\u9633\u6027\u90fd\u4e0d\u4f1a\u88ab\u8d34\u4e0a\u6807\u7b7e\u3002\u65b0\u7684\u6570\u636e\u96c6\u5728\u8fd9\u91cc\u53ef\u89c6\u5316\u3002\n\u5728\u8fd0\u884c\u6240\u6709\u4e0e\u524d\u9762\u76f8\u540c\u7684\u4ee3\u7801\u4e4b\u540e\uff0c\u4e0b\u9762\u7684\u56fe\u8868\u53ef\u89c6\u5316\u4e86\u7531\u4e09\u79cd\u4e3b\u8981\u65b9\u6cd5\u4e2d\u7684\u6bcf\u4e00\u79cd\u65b9\u6cd5\u5206\u914d\u7684\u5206\u6570\u3002\u7531\u6b64\u770b\u6765\uff0cPU\u5957\u888b\u4f3c\u4e4e\u6bd4\u5176\u4ed6\u65b9\u6cd5\u505a\u5f97\u66f4\u597d\u3002\n\u6b63\u5982\u627f\u8bfa\u7684\u90a3\u6837\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cPU\u5957\u888b\u80af\u5b9a\u6bd4\u5176\u4ed6\u4e24\u79cd\u65b9\u6cd5\u6027\u80fd\u66f4\u597d\u3002\u8ba9\u6211\u4eec\u8bd5\u7740\u8d70\u5230\u66f4\u6781\u7aef\u7684\u5730\u65b9\u3002\n\u4e0b\u4e00\u6b21\u5b9e\u9a8c\u7684\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u5728\u8fd9\u4e2aGitHub\u94fe\u63a5\u4e0a\u627e\u5230\u3002\u8981\u521b\u5efa\u6211\u4eec\u7684\u201c\u6708\u7403\u201d\u6570\u636e\u96c6\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\u4ecesklearn.DataSets\u5bfc\u5165make_moonsX\uff0cy=make_moons(n_Samples=6000\uff0cNoise=0.1\uff0cShuffle=True)X=pd.DataFrame(X\uff0cColumns=[&#39\uff1bFeature 1&#39\uff1b\uff0c&#39\uff1bFeature 2&#39\uff1b])y=pd.Series(Y)\u3002\n\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u6570\u636e\u96c6\u7684\u53ef\u89c6\u5316\uff0c\u53bb\u6389\u4e861000\u4e2a\u6b63\u503c\u4e2d\u7684\u6807\u7b7e\u3002\n\u7531\u6807\u51c6\u5206\u7c7b\u5668\u548cPU\u88c5\u888b\u7ed9\u4e88\u672a\u6807\u8bb0\u6570\u636e\u70b9\u7684\u5206\u6570\u5982\u4e0b\u6240\u793a\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u7684\u65b9\u6cd5\u5728\u8bc6\u522b\u9690\u85cf\u7684\u79ef\u6781\u56e0\u7d20\u7684\u80fd\u529b\u4e0a\u4f3c\u4e4e\u975e\u5e38\u76f8\u4f3c\u3002\n\u7531\u4e8e90%\u7684\u9633\u6027\u6ca1\u6709\u6807\u8bb0\uff0c\u4e0b\u9762\u662f\u5206\u6570\u53ef\u89c6\u5316\u548c\u6027\u80fd\u6bd4\u8f83\u3002\n\u6b64\u5b9e\u9a8c\u7684\u5b8c\u6574\u4ee3\u7801\u53ef\u901a\u8fc7\u6b64\u94fe\u63a5\u83b7\u5f97\u3002\u8981\u521b\u5efa\u6211\u4eec\u7684\u201cBLOBS\u201d\u6570\u636e\u96c6\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\nFrom sklearn.datets.Samples_Generator\u5bfc\u5165make_bloobs X\uff0cy=make_bloobs(n_sample=6000\uff0ccenter=[[1\uff0c5]\uff0c[5\uff0c1]\uff0c[0\uff0c0]\uff0c[6\uff0c6]])X=pd\u3002DataFrame(X\uff0cColumns=[&#39\uff1bFeature 1&#39\uff1b\uff0c&#39\uff1bFeature 2&#39\uff1b])#\u5c06\u539f\u59cb\u6807\u7b7e\u4ece[0\uff0c1\uff0c2\uff0c3]\u8f6c\u6362\u4e3a\u4ec5[0\uff0c1]y=(y&gt\uff1b1)\u3002Astype(Int)y=pd\u3002\u7cfb\u5217(Y)\u3002\n\u4e0b\u9762\u662f\u6700\u540e\u4e00\u4e2a\u4eba\u9020\u6570\u636e\u96c6\uff0c\u53bb\u6389\u4e861000\u4e2a\u9633\u6027\u7684\u6807\u7b7e\u3002\n\u4e0b\u9762\u76f4\u89c2\u5730\u663e\u793a\u4e86\u4e09\u79cd\u4e3b\u8981\u65b9\u6cd5\u7ed9\u51fa\u7684\u5206\u6570\uff0c\u7136\u540e\u662f\u6027\u80fd\u6bd4\u8f83\u3002\n\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u7531\u4e8e\u53ea\u9690\u85cf\u4e86\u4e09\u5206\u4e4b\u4e00\u7684\u79ef\u6781\u56e0\u7d20\uff0cPU\u88c5\u888b\u65b9\u6cd5\u6709\u70b9\u843d\u540e\u4e8e\u5176\u4ed6\u65b9\u6cd5\u3002\n\u7531\u4e8e90%\u7684\u9633\u6027\u6ca1\u6709\u6807\u8bb0\uff0c\u4e0b\u9762\u662f\u5206\u6570\u53ef\u89c6\u5316\u548c\u6027\u80fd\u6bd4\u8f83\u3002\n\u5bf9\u4e8e\u6211\u4eec\u6700\u7ec8\u5b9e\u9a8c\u7684\u8fd9\u4e2a\u6700\u6781\u7aef\u7684\u7248\u672c\uff0c99%\u7684\u79ef\u6781\u56e0\u7d20\u90fd\u88ab\u9690\u85cf\u4e86\uff0c\u8ba9\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e9b\u65b0\u7684\u4e1c\u897f\u3002\u6211\u4eec\u5c06\u8fd0\u884c\u901a\u5e38\u7684\u4e09\u79cd\u4e3b\u8981\u65b9\u6cd5\uff0c\u4f46\u662f\u9664\u4e86\u901a\u5e38\u7684\u51b3\u7b56\u6811\u5b9e\u73b0\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u5c06\u5c1d\u8bd5\u4f7f\u7528\u652f\u6301\u5411\u91cf\u673a(\u4e5f\u79f0\u4e3aSVM\uff0c\u6216\u8005\u5728\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u7684skLearning\u5b9e\u73b0\u4e2d\u7279\u522b\u662fSVC)\u4f5c\u4e3a\u5e95\u5c42\u5206\u7c7b\u5668\u8fdb\u884cPU\u6253\u5305\u3002\n\u4ee5\u4e0b\u662f\u4e09\u79cd\u5e38\u7528\u65b9\u6cd5\u548c\u65b0\u65b9\u6cd5\u5206\u914d\u7684\u5206\u6570\u7684\u53ef\u89c6\u5316\u3002\n\u4f7f\u7528\u652f\u6301\u5411\u91cf\u673a\u800c\u4e0d\u662f\u6811\u6728(\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u5c31\u50cf\u8bba\u6587\u4e2dPU\u88c5\u888b\u65b9\u6cd5\u6240\u57fa\u4e8e\u7684\u90a3\u6837)\u4f3c\u4e4e\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u6700\u597d\u7684\u3002\u4e3a\u4e86\u786e\u5b9a\uff0c\u8ba9\u6211\u4eec\u4ed4\u7ec6\u770b\u770b\u3002\u4ee5\u4e0b\u662f\u5e38\u7528\u7684\u4e09\u79cd\u65b9\u6cd5\u7684\u6bd4\u8f83\u6027\u80fd\uff1a\nPU\u88c5\u888b(\u4f7f\u7528\u51b3\u7b56\u6811)\u4e0e\u5176\u4ed6\u65b9\u6cd5\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u6bd4\u8f83\u4e00\u4e0b\u57fa\u4e8e\u6811\u548c\u57fa\u4e8e\u652f\u6301\u5411\u91cf\u673a\u7684PU\u88c5\u888b\u3002\n\u5728\u8fd9\u4e2a\u4f7f\u7528\u73a9\u5177\u6570\u636e\u96c6\u7684\u5b9e\u9a8c\u4e2d\uff0c\u7531\u4e8e\u7edd\u5927\u591a\u6570\u9633\u6027\u7ed3\u679c\u9690\u85cf\u5728\u672a\u6807\u8bb0\u7684\u70b9\u4e2d\uff0c\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b\u5668\u7684PU\u888b\u5316\u662f\u660e\u663e\u7684\u8d62\u5bb6\u3002", "note_en": "Suppose we want to predict which novels our friend Justine will enjoy. We have a list of the handful of novels she has read recently, along with whether or not she enjoyed each one. The standard supervised machine learning paradigm for a problem like this would involve comparing the features of the positive examples (novels she enjoyed) with the features of the negative examples (novels she did not enjoy), to devise a system for predicting whether future as-yet-unseen novels will be received positively or negatively.\n On the other hand, the  semi-supervised paradigm would involve using not only novels Justine has read, but those she hasn\u2019t read, to prepare to make predictions about her preferences. There are far more unlabeled examples (i.e. novels that we don\u2019t know Justine\u2019s feeling about) than labeled (i.e. positive and negative) ones. Surprisingly, in situations like this, the unlabeled data can actually be put to effective use.\n To begin to understand how unlabeled data can help us develop a model for predicting labels, consider the following caricature. Suppose we have a few positive data points (illustrated in green below) and a few negative data points (illustrated in red). For simplicity, let\u2019s say each data point is described by two features. When we form a model for predicting whether other data points will be positive or negative, it\u2019s like dividing the feature plane into two regions, where points are predicted to be positive in one region and negative in the other. Our decision about how to do this could be very different depending on whether we know where unlabeled data points (illustrated in gray) lie.\n   Positive-unlabeled learning is an important subparadigm of semi-supervised learning, where the only labeled data points available are positive. For example, suppose we only know about Justine\u2019s favorite novels. (Why would she talk about the ones she didn\u2019t enjoy, anyway?)\n The standard supervised machine learning paradigm would be out of luck in this situation, because any standard model\u2019s algorithm requires both positive and negative examples to train. But again, despite their ambiguity, unlabeled data points can be helpful here if we\u2019re clever about how to use them.\n Consider the following new caricature. We have a few positive data points (illustrated in green below), but no negatives. We must divide the feature plane into two regions, where points are predicted to be positive in one region and negative in the other. Our decision about how to do this will be very different indeed if we know where unlabeled data points lie!\n   There has been a great deal of interest in developing approaches to PU learning problems. Since standard machine learning problems (in which a large number of positive and negative data points can be used to train a model) are a well-explored field with many solution methods, most approaches to PU learning involve clever adaptations of standard methods.\n Following is a quick summary of a few techniques, most of which will be applied experimentally later.\n  Perhaps the most obvious approach to a PU problem is as follows: treat the positive and unlabeled data points as positives and negatives, respectively. Train a standard classifier model on the data. The classifier will assign a score to each data point, with positives generally scored higher than negatives. Among the unlabeled data points (temporarily labeled as negatives), the ones with the highest scores should be most likely to be positives.\n This na\u00efvest of approaches is explored and somewhat justified in   Learning classifiers from only positive and unlabeled data (2008) by Elkan and Noto. The central result of that paper is that, under certain assumptions that are basic but probably slightly unreasonable for real-life purposes, a standard classifier trained on positive and unlabeled data should give scores that are proportional to the scores it would give if it were properly trained on positive and negative data.\n As the authors note, \u201cThis means that if the [hypothetically properly trained] classifier is only used to rank examples according to the chance that they belong to [the positives], then the classifier [trained on positive and unlabeled data] can be used directly instead.\u201d\n  A related but more sophisticated approach to a given PU problem involves a variation on  bagging:\n Create a training set by combining all positive data points with a random sample from the unlabeled points, with replacement.\n Build a classifier from this \u201cbootstrap\u201d sample, treating positive and unlabeled data points as positives and negatives, respectively.\n Apply the classifier to whatever unlabeled data points were not included in the random sample \u2013 hereafter called OOB (\u201cout of bag\u201d) points \u2013 and record their scores.\n Repeat the three steps above many times and finally assign to each point the average of the OOB scores it has received.\n One paper describing this approach is   A bagging SVM to learn from positive and unlabeled examples (2013) by Mordelet and Vert. According to the authors, \u201cthe method can match and even outperform the performance of state-of-the-art methods for PU learning, particularly when the number of positive examples is limited and the fraction of negatives among the unlabeled examples is small. The proposed method can also run considerably faster than state-of-the-art methods, particularly when the set of unlabeled examples is large.\u201d\n  A wide variety of PU learning strategies fall into the general category of\u00a0 \u201ctwo-step approaches.\u201d One decent introduction to these is given in   An Evaluation of Two-Step Techniques for Positive-Unlabeled Learning in Text Classification (2014) by Kaboutari, Bagherzadeh, and Kheradmand.\n  Identify a subset of the unlabeled data points that can be confidently labeled as negatives. (The authors of the paper above call these points \u201creliable negatives.\u201d)\n Use the positive and negative data points to train a standard classifier and apply it to the remaining unlabeled points.\n Typically, the results of the second step are used in order to return to the first step and iterate. As the authors above state, \u201cIf the [reliable negative] set contains mostly negative documents and is sufficiently large, a learning algorithm\u2026 works very well and will be able to build a good classifier. But often a very small set of negative documents identified in step 1\u2026 then a learning algorithm iteratively runs till it converges or some stopping criterion is met.\u201d\n A similar approach is laid out by Shubham Jain in the recent blog post  Introduction to Pseudo-Labelling : A Semi-Supervised learning technique, but the details there are not specifically aimed at PU problems.\n  One last development worth mentioning here, although it will not be included in our experiments below, is an algorithm introduced in   Towards Positive Unlabeled Learning for Parallel Data Mining: A Random Forest Framework (2014) by Li and Hua.\n According to the authors, \u201cThe proposed framework, termed PURF (Positive Unlabeled Random Forest), is able to learn from positive and unlabeled instances and achieve comparable classification performance with RF trained by fully labeled data through parallel computing according to experiments on both synthetic and real-world UCI datasets\u2026 This framework combines PU learning techniques including widely used PU information gain (PURF-IG) and newly developed PU Gini index (PURF-GI) with an extendable parallel computing algorithm (i.e. RF).\u201d\n Furthermore, the authors report that they have \u201cimplemented PURF with Python based on the scikit-learn package,\u201d so if the code is made publically available at some point, it may be a promising tool.\n     In all code below, it is assumed that we have a  pandas dataframe X of features, and a pandas series y of targets (with 1 for positives and 0 for the rest).\n  # Keep the original targets safe for latery_orig = y.copy()# Unlabel a certain number of data pointshidden_size = ### ENTER A NUMBER HERE ###y.loc[ np.random.choice( y[y == 1].index, replace = False, size = hidden_size )] = 0\n The resulting data set is what we will use to build models based on the approaches outlined before. Afterwards, we can judge their effectiveness by determining how well they manage to identify the positives we have hidden from them.\n   from sklearn.ensemble import RandomForestClassifierrf = RandomForestClassifier(\u00a0 \u00a0 n_estimators = 1000,\u00a0 # 1000 trees\u00a0 \u00a0 n_jobs = -1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Use all CPU cores)rf.fit(X, y)\n  results = pd.DataFrame({\u00a0 \u00a0 &#39;truth&#39;\u00a0 \u00a0 \u00a0 : y_orig,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # True labels\u00a0 \u00a0 &#39;label&#39;\u00a0 \u00a0 \u00a0 : y,\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0# Labels shown to models\u00a0 \u00a0 &#39;output_std&#39; : rf.predict_proba(X)[:,1]\u00a0 \u00a0# Random forest&#39;s scores}, columns = [&#39;truth&#39;, &#39;label&#39;, &#39;output_std&#39;])\n For convenience, we\u2019ll store the outputs of the other approaches in this same dataframe.\n     It is convenient to keep track of the indices of positive and unlabeled data points:\n  For each data point, we\u2019ll also record how many times it has been OOB, and the sum of the OOB scores it receives:\n num_oob = pd.DataFrame(np.zeros(shape = y.shape), index = y.index)sum_oob = pd.DataFrame(np.zeros(shape = y.shape), index = y.index)\n  for _ in range(n_estimators):\u00a0 \u00a0 # Get a bootstrap sample of unlabeled points for this round\u00a0 \u00a0 ib = np.random.choice(iU, replace = True, size = len(iP)) # Find the OOB data points for this round\u00a0 \u00a0 i_oob = list(set(iU) - set(ib)) # Get the training data (ALL positives and the bootstrap # sample of unlabeled points) and build the tree\u00a0 \u00a0 Xb = X[y &gt; 0].append(X.loc[ib])\u00a0 \u00a0 yb = y[y &gt; 0].append(y.loc[ib])\u00a0 \u00a0 estimator.fit(Xb, yb)\u00a0 \u00a0\u00a0# Record the OOB scores from this round\u00a0 \u00a0 sum_oob.loc[i_oob, 0] += estimator.predict_proba(X.loc[i_oob])[:,1]\u00a0 \u00a0 num_oob.loc[i_oob, 0] += 1\n     The PU bagging approach is so elegant (and powerful, as we will see) that I decided to create a more user-friendly implementation of it that takes advantage of parallelization. My implementation is a fairly straightforward adaptation of the  BaggingClassifier from scikit-learn. The code can be found in the baggingPU.py file available  here.\u00a0Using my implementation, all of the code above could be replaced with the following:\n from baggingPU import BaggingClassifierPUbc = BaggingClassifierPU(\u00a0 \u00a0 DecisionTreeClassifier(), n_estimators = 1000, n_jobs = -1, max_samples = sum(y) # Each training sample will be balanced)bc.fit(X, y)results[&#39;output_bag&#39;] = bc.oob_decision_function_[:,1]\n On a machine with 4 cores, this new code snippet runs in roughly one quarter the previous time.\n  During a two-step approach, data points will carry one of three designations (positive, unlabeled, or negative), and many of the points will be re-designated along the way. So we begin by creating a new target vector, with 1 for positive, -1 for unlabeled, and 0 for \u201creliable negative.\u201d\n  Of course, there are no reliable negatives to start with. For step 1, we\u2019ll use the scores from before:\n  Let\u2019s find the range of scores given to the known positive data points:\n  Step 1: If any unlabeled point has a score below all known positives, label it negative. On the other hand, if its score is above all known positives, we might as well label it positive.\n iP_new = ys[(ys &lt; 0) &amp; (pred &gt;= range_P[1])].indexiN_new = ys[(ys &lt; 0) &amp; (pred &lt;= range_P[0])].indexys.loc[iP_new] = 1ys.loc[iN_new] = 0\n   We will limit ourselves to 10 iterations at the most. It\u2019s an arbitrary choice, but this approach can take a very long time if we simply wait for it to stop finding and labeling new negatives. (Besides, as mentioned earlier and as we will see experimentally, it might even be good enough to limit ourselves to a single iteration.)\n for i in range(10):\u00a0 \u00a0 # If step 1 didn&#39;t find new labels, we&#39;re done\u00a0 \u00a0 if len(iP_new) + len(iN_new) == 0 and i &gt; 0:\u00a0 \u00a0 \u00a0 \u00a0 break\u00a0 \u00a0\u00a0print(\u00a0 \u00a0 \u00a0 \u00a0 &#39;Step 1 labeled %d new positives and %d new negatives.&#39;\u00a0\u00a0 \u00a0 \u00a0 \u00a0 % (len(iP_new), len(iN_new))\u00a0 \u00a0 )\u00a0 \u00a0 print(&#39;Doing step 2... &#39;, end = &#39;&#39;)\u00a0 \u00a0 # Retrain on new labels and get new scores\u00a0 \u00a0 rf2.fit(X, ys)\u00a0 \u00a0 pred = rf2.predict_proba(X)[:,-1]\u00a0 \u00a0 # Find the range of scores given to positive data points\u00a0 \u00a0 range_P = [min(pred * (ys &gt; 0)), max(pred * (ys &gt; 0))]\u00a0 \u00a0 # Repeat step 1\u00a0 \u00a0 iP_new = ys[(ys &lt; 0) &amp; (pred &gt;= range_P[1])].index\u00a0 \u00a0 iN_new = ys[(ys &lt; 0) &amp; (pred &lt;= range_P[0])].index\u00a0 \u00a0 ys.loc[iP_new] = 1\u00a0 \u00a0 ys.loc[iN_new] = 0\n     As a sort of fourth approach to compare to the rest, we can calculate the average score that the three main approaches assign to each data point.\n  After this, we are prepared the compare the performance of the different approaches\u00a0\u2013 that is, how well they can identify the hidden positives.\n  We will test drive some of the approaches developed above by applying them to a few artificial data sets. In a subsequent post, I will show the results when a certain real-life data set is used instead.\n  The complete code for this experiment is available at  this github link. Some of the less interesting code, especially for producing graphs, is not included in this post.\n  from sklearn.datasets import make_circlesX, y = make_circles( n_samples = 6000, noise = 0.1, shuffle = True, factor = .65)X = pd.DataFrame(X, columns = [&#39;feature1&#39;, &#39;feature2&#39;])y = pd.Series(y)\n      \u2013 so one third of the positives will be unlabeled. The resulting data set is visualized here. We can see that the artificial data consists of two concentric circular regions of points, with the positives comprising the innermost region.\n To test the various approaches to PU learning, we\u2019ll run all the code\u00a0previously listed. The graphs below visualize the scores that are assigned to unlabeled points by using a standard classifier, and by using a PU bagging approach.\n  On a visual level, there appears to be little difference between the approaches, except that PU bagging assigns a wider range of scores than the standard classifier does.\n The two different implementations of PU bagging apparently perform almost identically. This continues to be true in all subsequent experiments (described below), indicating that the two implementations are in fact the same \u2013 as intended!\u00a0\u2013 and the only real difference is that my parallelized version adapted from scikit-learn is much faster.\n The next graphs visualize the two-step approach. On the left, we can see which data points are marked as \u201creliable negatives\u201d in the first pass through step 1. Note that a considerable number of the intended negatives are immediately relabeled as such. The graph on the right shows the scores that are assigned to unlabeled points after several iterations of the two-step process.\n  Visually, the output of my two-step method seems to differ very little from the standard classifier.\n Let\u2019s take a more careful look at the performance of these three main approaches, judging each one by its ability to identify the positives we have hidden among the unlabeled points. Here is a visual summary:\n  No matter what approach we use, if we select only the 500 \u201cbest\u201d unlabeled points \u2013 that is, those with the highest scores \u2013 it turns out that over 90% of them are actually hidden positives.\u00a0The three different approaches perform at roughly the same level, but the performance of the PU bagging approach is noticeably behind the others. This shouldn\u2019t be too surprising; as quoted earlier, this approach works particularly well \u201cwhen the number of positive examples is limited,\u201d which is not the case here.\n     so that 90% of the positives will be unlabeled. The new data set is visualized here.\n After running all the same code as before, the following graphs visualize the scores that are assigned by each of the three main approaches. Judging by this, PU bagging seems to have done a better job than the other methods.\n    As promised, PU bagging definitively outperforms the other two approaches in this situation. Let\u2019s trying going to a further extreme.\n         The complete code for the next experiment is available at  this github link.\u00a0To create our \u201cmoons\u201d data set:\n from sklearn.datasets import make_moonsX, y = make_moons(n_samples = 6000, noise = 0.1, shuffle = True)X = pd.DataFrame(X, columns = [&#39;feature1&#39;, &#39;feature2&#39;])y = pd.Series(y)\n    Here is a visualization of this second data set, with the labels removed from 1000 of the positives.\n The scores given to unlabeled data points by a standard classifier and by PU bagging are shown below.\n       In this case, the different approaches seem pretty similar in their ability to identify the hidden positives.\n  With 90% of the positives unlabeled, here are the score visualizations and the performance comparison.\n        The complete code for this experiment is available at  this link.\u00a0To create our \u201cblobs\u201d data set:\n from  sklearn.datasets.samples_generator  import  make_blobs X ,  y  =  make_blobs (  n_samples  =  6000 ,  centers  =  [[ 1 , 5 ],  [ 5 , 1 ],  [ 0 , 0 ],  [ 6 , 6 ]] )  X  =  pd . DataFrame( X,  columns  = [ &#39;feature1&#39;,  &#39;feature2&#39;])# Convert the original labels from [0,1,2,3] to just [0,1] y  =  ( y  &gt;  1 ) . astype ( int )  y  =  pd . Series ( y )\n    Here is a look at this last artificial data set, with labels removed from 1000 positives.\n The scores given by the three main approaches are visualized below, followed by the performance comparisons.\n   As before, with only one third of positives hidden, the PU bagging approach lags a bit behind the others.\n  With 90% of the positives unlabeled, here are the score visualizations and the performance comparison.\n     For this most extreme version of our final experiment, with 99% of the positives hidden, let\u2019s try something new. We\u2019ll run the usual three main methods, but we\u2019ll also try PU bagging using  support vector machines (also known as SVM, or specifically SVC in the  sklearn implementation we\u2019re using) as the underlying classifier, in addition to the usual decision tree implementation.\n Here are the visualizations of the scores assigned by the three usual approaches and the new one.\n  Using SVM instead of trees (as done, incidentally, in the paper the PU bagging approach is based on) seems to be best by a wide margin. To make sure, let\u2019s take a closer look. Here are the comparative performances of the usual three methods:\n  There is a huge difference between PU bagging (with decision trees) and other approaches. Now let\u2019s compare tree- and SVM-based PU bagging.\n  In this experiment with a toy data set, and with the vast majority of positives hidden among the unlabeled points, PU bagging of SVM classifiers is the clear winner.", "posttime": "2020-07-20 06:23:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6807\u7b7e,unlabeled,\u6570\u636e", "title": "\u6b63\u9762-\u65e0\u6807\u7b7e\u5b66\u4e60(2017)", "title_en": "Positive-unlabeled learning (2017)", "transed": 1, "url": "https://roywrightme.wordpress.com/2017/11/16/positive-unlabeled-learning/", "via": "", "real_tags": ["\u6807\u7b7e", "unlabeled", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1012942, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\uff0c\u8de8\u804c\u80fd\u3001\u6388\u6743\u7684\u4ea7\u54c1\u56e2\u961f\u7684\u76ee\u7684\u662f\u5171\u540c\u52aa\u529b\u89e3\u51b3\u96be\u9898\u3002\n\u7136\u800c\uff0c\u5728\u5982\u6b64\u591a\u7684\u516c\u53f8\u4e2d\uff0c\u6bcf\u4e2a\u7ecf\u7406-\u5de5\u7a0b\u5e08\u7ecf\u7406\u3001\u8bbe\u8ba1\u5e08\u7ecf\u7406\u548c\u4ea7\u54c1\u7ecf\u7406-\u90fd\u4f1a\u521b\u5efa\u81ea\u5df1\u7684\u7ec4\u7ec7\u76ee\u6807\uff0c\u7136\u540e\u8fd9\u4e9b\u76ee\u6807\u4f1a\u5c42\u5c42\u4f20\u9012\u7ed9\u4ed6\u4eec\u7684\u5458\u5de5\u3002\n\u867d\u7136\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u662f\u5408\u7406\u7684\uff0c\u800c\u4e14\u5bf9\u516c\u53f8\u5176\u4ed6\u90e8\u95e8\u6765\u8bf4\u4e0d\u4e00\u5b9a\u662f\u95ee\u9898\uff0c\u4f46\u5b9e\u9645\u4e0a\u8fd9\u610f\u5473\u7740\u8fd9\u4e9b\u5458\u5de5-\u5f53\u4e0e\u4ea7\u54c1\u56e2\u961f\u4e2d\u8de8\u804c\u80fd\u7684\u540c\u4e8b\u4e00\u8d77\u5de5\u4f5c\u65f6-\u90fd\u5728\u4e3a\u81ea\u5df1\u7684\u76ee\u6807\u800c\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u56e2\u961f\u76ee\u6807\u800c\u534f\u540c\u5de5\u4f5c\u3002\n\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5728\u8bb8\u591a\u516c\u53f8\u4e2d\uff0c\u8fd8\u6709\u989d\u5916\u7684\u590d\u6742\u6027\u548c\u7a00\u91ca\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8fd8\u8bd5\u56fe\u5b9e\u73b0\u4e2a\u4eba\u76ee\u6807\uff0c\u6240\u4ee5\u5de5\u7a0b\u5e08\u4e0d\u4ec5\u4ece\u5979\u7684\u7ecf\u7406\u90a3\u91cc\u7ee7\u627f\u4e86\u8fd9\u4e9b\u76ee\u6807\uff0c\u800c\u4e14\u5979\u8fd8\u5fc5\u987b\u4e3a\u81ea\u5df1\u7684\u4e2a\u4eba\u76ee\u6807\u800c\u52aa\u529b\u3002\n\u6700\u540e\uff0c\u4e5f\u662f\u771f\u6b63\u7684\u95ee\u9898\u6839\u6e90\uff0c\u6211\u770b\u5230\u7684\u7edd\u5927\u591a\u6570\u516c\u53f8\u90fd\u5728\u52aa\u529b\u4eceOKR\u4e2d\u83b7\u5f97\u4efb\u4f55\u4ef7\u503c\uff0c\u5728\u884c\u52a8\u4e2d\u5f88\u5927\u7a0b\u5ea6\u4e0a\u7f3a\u4e4f\u9886\u5bfc\u529b\u7684\u4f5c\u7528\u3002\n\u4ed6\u4eec\u771f\u7684\u8ba4\u4e3a\u8fd9\u4e2a\u60f3\u6cd5\u662f\u8ba9\u56e2\u961f\u786e\u5b9a\u4e00\u7ec4\u76ee\u6807\uff0c\u7136\u540e\u8ba9\u4ed6\u4eec\u8ffd\u6c42\u8fd9\u4e9b\u76ee\u6807\uff0c\u6211\u4eec\u5c06\u770b\u5230\u6211\u4eec\u5728\u5b63\u5ea6\u672b\u7684\u60c5\u51b5\u3002\n\u4ed6\u4eec\u8ba4\u4e3a\u8d4b\u4e88\u4ea7\u54c1\u56e2\u961f\u6743\u529b\uff0c\u7279\u522b\u662f\u8fd9\u79cd\u6280\u672f\uff0c\u662f\u5173\u4e8e\u66f4\u5c11\u7684\u7ba1\u7406\u3002\u4f46\u5b9e\u9645\u4e0a\u5b83\u662f\u5173\u4e8e\u66f4\u597d\u7684\u7ba1\u7406\u3002\n\u96be\u602a\u8fd9\u4e48\u591a\u516c\u53f8\u4ece\u8fd9\u9879\u6280\u672f\u4e2d\u83b7\u5f97\u7684\u4ef7\u503c\u5982\u6b64\u4e4b\u5c11\uff1f\n\u5927\u591a\u6570\u9886\u5148\u7684\u79d1\u6280\u4ea7\u54c1\u516c\u53f8\u90fd\u4f7f\u7528OKR\u6280\u672f\u6216\u5176\u4e2d\u4e00\u79cd\u53d8\u4f53\uff0c\u8fd9\u5df2\u7ecf\u4e0d\u662f\u4ec0\u4e48\u79d8\u5bc6\u4e86\u3002\u8fd9\u4e9b\u516c\u53f8\u53d6\u5f97\u4e86\u591a\u5927\u7684\u6210\u529f\u4e5f\u4e0d\u662f\u4ec0\u4e48\u79d8\u5bc6\u3002\n\u90a3\u4e9b\u6210\u529f\u7684\u516c\u53f8\u5e76\u4e0d\u662f\u56e0\u4e3a\u4ed6\u4eec\u4f7f\u7528OKR\u800c\u6210\u529f\uff0c\u4ed6\u4eec\u4f7f\u7528OKR\u662f\u56e0\u4e3a\u5b83\u7684\u8bbe\u8ba1\u662f\u4e3a\u4e86\u5229\u7528\u6388\u6743\u7684\u4ea7\u54c1\u56e2\u961f\u6a21\u5f0f\u3002\n\u6b63\u5982\u6211\u7528\u591a\u5e74\u7684\u6587\u7ae0\u548c\u6f14\u8bb2\u8bd5\u56fe\u9610\u660e\u7684\u90a3\u6837\uff0c\u6388\u6743\u7684\u4ea7\u54c1\u56e2\u961f\u6a21\u5f0f\u662f\u5efa\u7acb\u548c\u8fd0\u8425\u6280\u672f\u4ea7\u54c1\u7ec4\u7ec7\u7684\u4e00\u79cd\u6839\u672c\u4e0d\u540c\u7684\u65b9\u6cd5\u3002\n\u60a8\u4e0d\u80fd\u8ba9\u60a8\u7684\u65e7\u7ec4\u7ec7\u57fa\u4e8e\u529f\u80fd\u56e2\u961f\u3001\u8def\u7ebf\u56fe\u548c\u88ab\u52a8\u7684\u7ecf\u7406\uff0c\u7136\u540e\u8986\u76d6\u6765\u81ea\u5b8c\u5168\u4e0d\u540c\u6587\u5316\u7684\u6280\u672f\uff0c\u5e76\u671f\u671b\u8fd9\u4f1a\u594f\u6548\u6216\u6539\u53d8\u4efb\u4f55\u4e8b\u60c5\u3002\n\u56e0\u6b64\uff0c\u5c31\u771f\u6b63\u83b7\u5f97OKR\u7684\u597d\u5904\u800c\u8a00\uff0c\u6709\u4e09\u4e2a\u5173\u952e\u7684\u5148\u51b3\u6761\u4ef6\uff1a\n\u9886\u5bfc\u8005\u9700\u8981\u633a\u8eab\u800c\u51fa\uff0c\u5c3d\u81ea\u5df1\u7684\u4e00\u4efd\u529b\u91cf\uff0c\u5c06\u4ea7\u54c1\u6218\u7565\u8f6c\u5316\u4e3a\u884c\u52a8\u3002\n\u8fd9\u662f\u9700\u8981\u66f4\u591a\u8ba8\u8bba\u7684\u7b2c\u4e09\u4e2a\u9879\u76ee\uff0c\u56e0\u6b64\u5728\u5373\u5c06\u53d1\u8868\u7684\u5173\u4e8e\u56e2\u961f\u76ee\u6807\u7684\u7cfb\u5217\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u9886\u5bfc\u529b\u5728\u6709\u6548\u56e2\u961f\u76ee\u6807\u4e2d\u7684\u4f5c\u7528\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u9886\u5bfc\u8005\u5982\u4f55\u901a\u8fc7\u4e0e\u56e2\u961f\u5171\u4eab\u4ed6\u4eec\u5e0c\u671b\u56e2\u961f\u5728\u8ffd\u6c42\u4ed6\u4eec\u88ab\u8981\u6c42\u89e3\u51b3\u7684\u95ee\u9898\u65f6\u7684\u96c4\u5fc3\u58ee\u5fd7\u6765\u7ba1\u7406\u98ce\u9669\u7ec4\u5408\u3002\n\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u5230\uff0c\u6709\u65f6\u8fd9\u4e0d\u662f\u5173\u4e8e\u96c4\u5fc3\u58ee\u5fd7\u7684\u6c34\u5e73\uff0c\u800c\u662f\u6211\u4eec\u9700\u8981\u5076\u5c14\u505a\u51fa\u6240\u8c13\u7684\u9ad8\u5ea6\u8bda\u4fe1\u627f\u8bfa\uff0c\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u8fd9\u4e9b\u627f\u8bfa\u662f\u5982\u4f55\u5236\u5b9a\u548c\u7ba1\u7406\u7684\u3002\n\u5173\u4e8e\u56e2\u961f\u76ee\u6807\u7684\u4e00\u4e2a\u5e38\u89c1\u8bef\u89e3\u662f\uff0c\u53ea\u6709\u4e00\u4e2a\u4ea7\u54c1\u56e2\u961f\u5e94\u8be5\u81f4\u529b\u4e8e\u7279\u5b9a\u7684\u95ee\u9898\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u5f88\u591a\u6700\u597d\u7684\u5de5\u4f5c\u9700\u8981\u56e2\u961f\u4e4b\u95f4\u7684\u534f\u4f5c\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u51e0\u79cd\u91cd\u8981\u7684\u534f\u4f5c\u5f62\u5f0f\u3002\n\u4e0e\u4efb\u4f55\u4ee5\u6280\u672f\u4e3a\u57fa\u7840\u7684\u8270\u96be\u52aa\u529b\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u79ef\u6781\u7ba1\u7406\u8fd9\u9879\u5de5\u4f5c\uff0c\u59cb\u7ec8\u7262\u8bb0\u901a\u8fc7\u6559\u7ec3\u548c\u4ec6\u4eba\u9886\u5bfc\u8fdb\u884c\u7ba1\u7406\uff0c\u800c\u4e0d\u662f\u5012\u9000\u5230\u6307\u6325\u548c\u63a7\u5236\u5f0f\u7ba1\u7406\uff0c\u4ece\u800c\u5931\u53bb\u6388\u6743\u7684\u597d\u5904\u3002\n\u4f34\u968f\u7740\u6388\u6743\u800c\u6765\u7684\u662f\u8d23\u4efb\uff0c\u6211\u4eec\u9700\u8981\u8ba8\u8bba\u8fd9\u5728\u5b9e\u8df5\u4e2d\u610f\u5473\u7740\u4ec0\u4e48\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u5c06\u603b\u7ed3\u51fa\u4ece\u56e2\u961f\u76ee\u6807\u4e2d\u83b7\u5f97\u771f\u6b63\u4ef7\u503c\u7684\u6700\u91cd\u8981\u7684\u51e0\u70b9\u3002\n\u7279\u522b\u611f\u8c22\u514b\u91cc\u65af\u8482\u5a1c\u00b7\u6c83\u7279\u514b(Christina Wodtke)\u548c\u83f2\u5229\u666e\u00b7\u5361\u65af\u7279\u7f57(Felipe Castro)\u5ba1\u9605\u4e86\u672c\u6587\u7684\u8349\u6848\u3002", "note_en": "After many years of being a very vocal advocate for the OKR (Objectives and Key Results) technique, in the majority of companies I meet, I have stopped recommending the practice.\n That\u2019s because, in so many companies, even though conceptually the technique is simple and sound, it ends up proving a waste of time and effort, and yields little if any results.\n How can something so conceptually simple have such a hard time being applied in practice?\n The short answer is that most companies are not set up to effectively apply this technique.\n   If the company is still using   feature teams , as most unfortunately are, then the OKR technique is going to be a cultural mismatch, and almost certainly prove a waste of time and effort.\n The OKR technique came from companies that had empowered product teams in their DNA.\u00a0 OKR\u2019s are first and foremost   an empowerment technique .\n The main idea is to give product teams real problems to solve, and then to give the teams the space to solve them.\n Yet the telltale sign of mismatch out there is that companies think they can \u201ccheck the empowerment box\u201d by giving the team objectives, yet still continue to tell them the solutions they are supposed to deliver \u2013 nearly always in the form of a roadmap of features and projects with expected release dates.\n  The second issue is that the purpose of a cross-functional, empowered product team is to work together to solve hard problems.\n Yet, in so many companies, each manager \u2013 the manager of engineers, the manager of designers and the manager of product managers \u2013 creates their own   organizational  objectives, which are then cascaded down to their employees.\n While this may sound reasonable, and is not necessarily a problem for other parts of the company, in practice this means that these employees \u2013 when working with their cross-functional colleagues in a product team \u2013 are all working on   their own  objectives, rather than working collaboratively on the   team  objectives.\n To make matters even worse, in many companies, there\u2019s an additional level of complexity and dilution because they also try to implement   individual  objectives, so not only does the engineer inherit the objectives from her manager, but she also has to work on her own personal objectives.\n  And finally, and really the root of the problem, is that in the vast majority of companies I see that are struggling to get any value out of OKR\u2019s, the role of leadership is largely missing in action.\n They literally think that the idea is to let teams identify a set of objectives, and then let them pursue those objectives, and we\u2019ll see where we are at the end of the quarter.\n They think that empowered product teams, and this technique especially, is about   less  management.\u00a0 But it\u2019s actually about   better  management.\n It is really any wonder why so many companies get so little value from this technique?\n It\u2019s no secret that most of the leading tech product companies use the OKR technique, or one of the variants.\u00a0 And it\u2019s also no secret how much success these companies have had.\n  Those successful companies aren\u2019t successful   because  they use OKR\u2019s.\u00a0 They use OKR\u2019s because it is designed to leverage the   empowered product team  model.\n And as I have tried to make clear with years of articles and talks, the empowered product team model is a fundamentally different approach to building and running a tech-product organization.\n You can\u2019t take your old organization based on feature teams, roadmaps and passive managers, then overlay a technique from a radically different culture, and expect that will work or change anything.\n So in terms of actually getting the   benefits  of OKR\u2019s, there are three critical prerequisites:\n Leaders need to step up and do their part to turn product strategy into action\n   It is the third item that needs much more discussion, so in the upcoming series of articles on team objectives, we\u2019ll discuss the role of leadership in effective team objectives.\n   Next, we\u2019ll discuss how leaders manage a portfolio of risk by sharing with teams how    ambitious  they would like them to be as they pursue the problems they\u2019ve been asked to solve.\n It\u2019s critical to note that sometimes it\u2019s not about the level of ambition, but rather, we need to occasionally make what\u2019s called a    high-integrity commitment,  and we need to discuss how these are made and managed.\n One of the common misconceptions about team objectives is that only a single product team should work on a specific problem.\u00a0 On the contrary, much of our best work requires    collaboration  between teams, and there are several important forms of collaboration we\u2019ll discuss.\n As with any difficult technology-based endeavor, we need to actively    manage  this work, always being mindful to manage by coaching and servant leadership, and not to regress to command and control style management, and lose the benefits of empowerment.\n Along with empowerment comes    accountability , and we need to discuss what this means in practice.\n Finally, we\u2019ll   summarize with the most important points to getting the real value out of team objectives.\n Special thanks for Christina Wodtke and Felipe Castro for reviewing a draft of this article.", "posttime": "2020-07-20 06:21:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "work,\u56e2\u961f", "title": "\u4e3a\u4ec0\u4e48OKR\u5728\u60a8\u7684\u516c\u53f8\u53ef\u80fd\u4e0d\u8d77\u4f5c\u7528", "title_en": "Why OKRs might not work at your company", "transed": 1, "url": "https://svpg.com/team-objectives-overview/", "via": "", "real_tags": ["work", "\u56e2\u961f"]}, {"category": "", "categoryclass": "", "imagename": "647d09af5d0e9f511a719231256fe586.jpg", "infoid": 1012941, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u7f51\u7ad9\u5141\u8bb8\u7528\u6237\u4e0a\u4f20\u4ed6\u4eec\u7684DNA\u6863\u6848\u6570\u636e\uff0c\u4ee5\u8ffd\u8e2a\u4ed6\u4eec\u7684\u5bb6\u8c31\u548c\u7956\u5148\u30022018\u5e74\uff0c\u5728\u6267\u6cd5\u90e8\u95e8\u5728\u6ca1\u6709\u4e8b\u5148\u544a\u77e5\u516c\u53f8\u7684\u60c5\u51b5\u4e0b\uff0c\u5229\u7528\u8be5\u7f51\u7ad9\u5c06\u4e00\u540d\u8fde\u73af\u8c0b\u6740\u6848\u5acc\u7591\u4eba\u7684DNA\u4e0e\u7f51\u7ad9\u6570\u636e\u5e93\u4e2d100\u591a\u4e07\u4efdDNA\u6863\u6848\u8fdb\u884c\u5339\u914d\u540e\uff0c\u8be5\u7f51\u7ad9\u4e00\u591c\u6210\u540d\u3002\nGedMatch\u5411\u5176\u7528\u6237\u53d1\u5e03\u4e86\u9690\u79c1\u8b66\u544a\uff0c\u5e76\u52a0\u5165\u4e86\u65b0\u7684\u63a7\u5236\u63aa\u65bd\uff0c\u5141\u8bb8\u7528\u6237\u9009\u62e9\u5c06\u5176DNA\u5305\u62ec\u5728\u8b66\u65b9\u641c\u7d22\u4e2d\u3002\n\u4f46\u7528\u6237\u5468\u65e5\u62a5\u544a\u79f0\uff0c\u8fd9\u4e9b\u8bbe\u7f6e\u5728\u672a\u7ecf\u4ed6\u4eec\u8bb8\u53ef\u7684\u60c5\u51b5\u4e0b\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4ed6\u4eec\u7684DNA\u6863\u6848\u88ab\u63d0\u4f9b\u7ed9\u6267\u6cd5\u90e8\u95e8\u8fdb\u884c\u641c\u7d22\u3002\nGEDMatch\u53d1\u751f\u4e86\u4e00\u8d77\u4e25\u91cd\u7684\u9690\u79c1\u6cc4\u9732\u4e8b\u4ef6\u3002\u4f3c\u4e4e\u6240\u6709\u7684\u5de5\u5177\u5305\uff0c\u4e0d\u7ba1\u7528\u6237\u7684\u559c\u597d\uff0c\u90fd\u5df2\u7ecf\u88ab\u9009\u62e9\u53c2\u4e0e\u6267\u6cd5\u5339\u914d\u3002\u6211\u5df2\u7ecf\u5728Facebook\u4e0a\u7ed9\u7ef4\u7f57\u6839\u53d1\u4e86\u4fe1\u606f\uff0c\u63d0\u9192\u4ed6\u4eec\u6ce8\u610f\u8fd9\u4e2a\u95ee\u9898\u3002\u8be5\u7f51\u7ad9\u73b0\u5728\u4f3c\u4e4e\u5b8c\u5168\u5173\u95ed\u4e86\u3002#\u9057\u4f20\u5bb6\u8c31pic.twitter.com/RzhEXEVa7s\u3002\n\u7528\u6237\u79f0\u8fd9\u662f\u201c\u4fb5\u72af\u9690\u79c1\u201d\u3002\u4f46\u5f53\u8bb0\u8005\u8054\u7cfb\u5230\u8be5\u516c\u53f8\u65f6\uff0c\u8be5\u516c\u53f8\u7684\u6240\u6709\u8005\u4ee5\u6b63\u5728\u8fdb\u884c\u7684\u8c03\u67e5\u4e3a\u7531\uff0c\u62d2\u7edd\u900f\u9732\u8fd9\u4e2a\u95ee\u9898\u662f\u7531\u9519\u8bef\u8fd8\u662f\u5b89\u5168\u6f0f\u6d1e\u9020\u6210\u7684\u3002\nVerogen\u9996\u5e2d\u6267\u884c\u5b98\u5e03\u96f7\u7279\u00b7\u5a01\u5ec9\u59c6\u65af(Brett Williams)\u8868\u793a\uff1a\u201c\u6211\u4eec\u610f\u8bc6\u5230\u4e86\u6709\u5173GedMatch\u7684\u95ee\u9898\uff0c\u7528\u6237\u6743\u9650\u8bbe\u7f6e\u4e0d\u6b63\u786e\u3002\u201dVerogen\u4e8e2019\u5e74\u6536\u8d2d\u4e86GedMatch\u3002\u201c\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1b\u4f46\u662f\uff0c\u4f5c\u4e3a\u9884\u9632\u63aa\u65bd\uff0c\u6211\u4eec\u5728\u8c03\u67e5\u9519\u8bef\u7684\u5b9e\u9645\u539f\u56e0\u65f6\u5df2\u7ecf\u5173\u95ed\u4e86\u7f51\u7ad9\u3002\u201d\u4e00\u65e6\u6211\u4eec\u4e86\u89e3\u4e86\u539f\u56e0\uff0c\u6211\u4eec\u5c06\u53d1\u5e03\u4e00\u4efd\u66f4\u6b63\u5f0f\u7684\u58f0\u660e\u3002\u201c\u4ed6\u8bf4\u3002\nDNA\u56fe\u8c31\u5206\u6790\u516c\u53f8\u8d8a\u6765\u8d8a\u53d7\u5230\u7528\u6237\u7684\u6b22\u8fce\uff0c\u4ed6\u4eec\u8bd5\u56fe\u901a\u8fc7\u53d1\u73b0\u65b0\u7684\u548c\u7956\u5148\u7684\u5bb6\u5ead\u6210\u5458\u6765\u4e86\u89e3\u4ed6\u4eec\u7684\u6587\u5316\u548c\u79cd\u65cf\u80cc\u666f\u3002\u4f46\u6267\u6cd5\u90e8\u95e8\u8d8a\u6765\u8d8a\u591a\u5730\u63a8\u52a8\u8bbf\u95ee\u57fa\u56e0\u6570\u636e\u5e93\uff0c\u8bd5\u56fe\u4ece\u72af\u7f6a\u73b0\u573a\u9057\u7559\u7684DNA\u4e2d\u7834\u83b7\u72af\u7f6a\u3002\n\u5f53\u88ab\u95ee\u53caVerogen\u6216GedMatch\u5728\u8fc7\u53bb\u4e00\u5929\u662f\u5426\u6536\u5230\u4efb\u4f55\u6267\u6cd5\u90e8\u95e8\u8981\u6c42\u63d0\u4f9b\u7528\u6237\u6570\u636e\u7684\u8bf7\u6c42\u65f6\uff0c\u5a01\u5ec9\u59c6\u65af\u4e0d\u613f\u900f\u9732\uff0c\u4e5f\u4e0d\u613f\u900f\u9732\u8fd9\u4e24\u5bb6\u516c\u53f8\u662f\u5426\u505a\u51fa\u4e86\u56de\u5e94\u3002\nGedMatch\u6ca1\u6709\u516c\u5e03\u6267\u6cd5\u90e8\u95e8\u5bfb\u6c42\u8bbf\u95ee\u8be5\u516c\u53f8\u6570\u636e\u7684\u9891\u7387\u3002\u5b83\u7684\u7ade\u4e89\u5bf9\u624b\uff0c\u598223andMe\u548cAncestry.com\uff0c\u5df2\u7ecf\u53d1\u5e03\u4e86\u8fd9\u4e9b\u6240\u8c13\u7684\u900f\u660e\u5ea6\u62a5\u544a\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0cAncestry.com\u900f\u9732\uff0c\u5b83\u62d2\u7edd\u4e86\u5dde\u5916\u7684\u8b66\u65b9\u902e\u6355\u4ee4\uff0c\u8fd9\u8868\u660e\u8b66\u65b9\u4ecd\u5728\u7ee7\u7eed\u4f7f\u7528DNA\u56fe\u8c31\u548c\u5206\u6790\u7f51\u7ad9\u83b7\u53d6\u4fe1\u606f\u3002\n\u52a0\u5dde\u5927\u5b66\u6234\u7ef4\u65af\u5206\u6821\u6cd5\u5b66\u9662(University of California\uff0cDavis School of Law)\u6cd5\u5b66\u6559\u6388\u4f0a\u4e3d\u838e\u767d\u00b7\u4e54(Elizabeth Joh)\u544a\u8bc9TechCrunch\uff1a\u201c\u627f\u8ba4\u4e00\u4e2a\u95ee\u9898\u662f\u4e00\u4e2a\u5f00\u59cb\uff0c\u4f46\u5982\u679c\u2018\u89e3\u51b3\u65b9\u6848\u2019\u610f\u5473\u7740\u7b80\u5355\u5730\u7ea0\u6b63\u9519\u8bef\uff0c\u90a3\u4e48\u8fd8\u6709\u5f88\u591a\u95ee\u9898\u9700\u8981\u89e3\u51b3\u3002\u201d\n\u201c\u4f8b\u5982\uff0cGedMatch\u662f\u5426\u77e5\u9053\u662f\u5426\u6709\u6267\u6cd5\u673a\u6784\u8bbf\u95ee\u4e86\u8fd9\u4e9b\u6807\u8bb0\u4e0d\u5f53\u7684\u7528\u6237\uff1f\u4ed6\u4eec\u662f\u5426\u4f1a\u900f\u9732\u6b64\u6b21\u5165\u4fb5\u7684\u8fdb\u4e00\u6b65\u7ec6\u8282\uff1f\u5f53\u7136\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662fGedMatch\u7684\u95ee\u9898\uff1a\u5728\u4e00\u4e2a\u516c\u6c11\u81ea\u7531\u7684\u65b0\u9886\u57df\uff0c\u57fa\u56e0\u8c31\u7cfb\u6570\u636e\u5e93\u4e2d\u7684\u9690\u79c1\u6cc4\u9732\u4e8b\u4ef6\u7a81\u663e\u4e86\u5bf9\u6700\u654f\u611f\u4fe1\u606f\u7684\u76d1\u7ba1\u4fdd\u969c\u4e25\u91cd\u4e0d\u8db3\u3002\u201c\u8fd9\u91cc\u4e00\u56e2\u7cdf\u3002\u201d", "note_en": "The site, which lets users upload their DNA profile data to trace their family tree and ancestors, rose to overnight fame in 2018 after law enforcement used the site to match the DNA  from a serial murder suspect against the site\u2019s million-plus DNA profiles in the site\u2019s database without first telling the company.\n Gedmatch issued  a privacy warning to its users and put in new controls to  allow users to opt-in for their DNA to be included in police searches.\n But users reported Sunday that those settings had changed without their permission, and that their DNA profiles were made available to law enforcement searches.\n There&#39;s been a major privacy breach at  GEDmatch  . It appears that all kits, regardless of user preferences, have been opted in to law enforcement matching. I&#39;ve messaged Verogen on Facebook to alert them to the problem. The site now seems to be down completely.  #geneticgenealogy  pic.twitter.com/RZhEXEVa7s\n Users called it a \u201cprivacy breach.\u201d But when reached, the company\u2019s owner declined to say if the issue was caused by an error or a security breach, citing an ongoing investigation.\n \u201cWe are aware of the issue regarding Gedmatch, where user permissions were not set correctly,\u201d said Brett Williams, chief executive of Verogen, which acquired Gedmatch in 2019. \u201cWe have resolved that issue; however, as a precaution, we have taken the site down while we are investigating the actual cause of the error. Once we understand the cause, we will be issuing a more formal statement,\u201d he said.\n DNA profiling and analysis companies are increasingly popular with users trying to understand their cultural and ethnic backgrounds by discovering new and ancestral family members. But law enforcement are increasingly pushing for access to genetic databases to try to solve crimes from DNA left at crime scenes.\n Williams would not say, when asked, if Verogen or Gedmatch have received any law enforcement requests for user data in the past day, or if either company has responded.\n Gedmatch does not publish how frequently law enforcement seeks access to the company\u2019s data. Its rivals, like 23andMe and Ancestry.com, have already published these so-called transparency reports. Earlier this year Ancestry.com revealed that it  rejected an out-of-state police warrant, indicating that police continue are still using DNA profiling and analysis sites for information.\n \u201cThe acknowledgement of an issue is a start, but if a \u2018resolution\u2019 means simply correcting the error, there are many questions that remain,\u201d Elizabeth Joh, a professor of law at University of California, Davis School of Law, told TechCrunch.\n \u201cFor instance, does Gedmatch know whether any law enforcement agencies accessed these improperly tagged users? Will they disclose any further details of the breach? And of course, this isn\u2019t simply Gedmatch\u2019s problem: a privacy breach in a genetic genealogy database underscores the woefully inadequate regulatory safeguards for the most sensitive of information, in a novel arena for civil liberties,\u201d she said. \u201cIt\u2019s a mess.\u201d", "posttime": "2020-07-20 06:00:52", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8b66\u65b9,investigating", "title": "\nGedMatch\u5728\u5411\u8b66\u65b9\u63d0\u4f9b\u7528\u6237DNA\u6570\u636e\u540e\u8fdb\u884c\u8c03\u67e5", "title_en": "\n\t\t\t\tGedmatch investigating after user DNA data made available to police\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/19/gedmatch-investigating-dna-profile-law-enforcement/", "via": "", "real_tags": ["\u8b66\u65b9"]}, {"category": "", "categoryclass": "", "imagename": "e113636a761397328865bd16daeb89ae.png", "infoid": 1012939, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8def\u900f\u6cd5\u5170\u514b\u798f8\u670823\u65e5\u7535-\u5fb7\u56fd\u8f6f\u4ef6\u516c\u53f8TeamViewer(TMV.DE)\u5468\u4e09\u8868\u793a\uff0c\u5df2\u540c\u610f\u6536\u8d2d\u540c\u884cUbimax\uff0c\u4ee5\u6269\u5927\u5176\u5728\u589e\u5f3a\u73b0\u5b9e\u548c\u7269\u8054\u7f51\u9886\u57df\u7684\u670d\u52a1.\u3002\n\u8fd9\u7b14\u4ea4\u6613\u5bf9\u8fd9\u5bb6\u589e\u5f3a\u73b0\u5b9e\u8f6f\u4ef6\u548c\u53ef\u7a7f\u6234\u8ba1\u7b97\u8bbe\u5907\u5236\u9020\u5546\u7684\u4f30\u503c\u4e3a1.365\u4ebf\u6b27\u5143(1.5612\u4ebf\u7f8e\u5143)\uff0c\u5c06\u4ee5\u73b0\u91d1\u548c\u80a1\u7968\u652f\u4ed8\u3002\u8fd9\u7b14\u4ea4\u6613\u9884\u8ba1\u5c06\u5728\u7b2c\u4e09\u5b63\u5ea6\u5b8c\u6210\u3002", "note_en": "FRANKFURT (Reuters) - German software company Teamviewer (  TMV.DE) has agreed to acquire peer Ubimax to expand its offering in augmented reality and internet of things, it said on Wednesday.\n The transaction values the maker of augmented reality software and wearable computing devices at 136.5 million euros ($156.12 million), which will be paid in cash and shares. The deal is expected to close in the third quarter.", "posttime": "2020-07-20 05:59:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8f6f\u4ef6,\u53ef\u7a7f\u6234,\u6536\u8d2d,agreed", "title": "TeamViewer\u5df2\u540c\u610f\u4ee51.365\u4ebf\u6b27\u5143\u6536\u8d2d\u5236\u9020AR\u8f6f\u4ef6\u548c\u53ef\u7a7f\u6234\u8ba1\u7b97\u8bbe\u5907\u7684Ubimax", "title_en": "Teamviewer has agreed to acquire Ubimax, which makes AR software and wearable computing devices, for \u20ac136.5M", "transed": 1, "url": "https://www.reuters.com/article/us-ubimax-m-a-teamviewer/teamviewer-buy-augmented-reality-firm-ubimax-idUSKCN24G1MF", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u53ef\u7a7f\u6234", "\u6536\u8d2d", "agreed"]}, {"category": "", "categoryclass": "", "imagename": "53064cb214234d766fd1b5e9538515d3.jpeg", "infoid": 1012937, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u5229\u8482\u838e\u00b7\u6258\u9a6c\u65af(Litisha Thomas)\u901a\u8fc7\u516b\u5366\u78e8\u574a\u542c\u8bf4\u5979\u5de5\u4f5c\u4e8611\u5e74\u7684\u5173\u95e8\u7684\u5c71\u59c6\u4ff1\u4e50\u90e8(Sam\u2018s Club)\u53ef\u80fd\u4f1a\u5728\u5979\u6240\u5728\u7684\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u519c\u6751\u6751\u5e84\u91cd\u65b0\u5f00\u4e1a\u65f6\uff0c\u5979\u7acb\u5373\u8df3\u5230\u4e00\u4e2a\u4e92\u8054\u7f51\u62db\u8058\u677f\u4e0a\uff0c\u770b\u770b\u662f\u5426\u6709\u62db\u8058\u4eba\u5458\u3002\u662f\u7684\uff0c\u4f46\u8fd9\u4e0d\u662f\u5e38\u89c4\u7684\u91cd\u65b0\u5f00\u653e\u3002\n\u4ee5\u6c83\u5c14\u739b(Walmart Inc.)\u521b\u59cb\u4eba\u7684\u540d\u5b57\u547d\u540d\u7684\u6298\u6263\u8d2d\u7269\u4ff1\u4e50\u90e8\u5c71\u59c6\u4ff1\u4e50\u90e8(Sam\u2018s Club)\u6b63\u5728\u6539\u53d8\u5176\u7ecf\u8425\u65b9\u5f0f\u3002\u8fd9\u5bb6\u96f6\u552e\u5de8\u5934\u7684\u5b50\u516c\u53f8\u5c062019\u5e744\u6708\u91cd\u65b0\u5f00\u653e\u7684\u6574\u5ea7\u5927\u697c\u6539\u9020\u6210\u4e86\u4e00\u4e2a\u7535\u5b50\u5546\u52a1\u5c65\u884c\u4e2d\u5fc3\uff0c...", "note_en": "When Litisha Thomas heard through the gossip mill that the shuttered Sam\u2019s Club where she\u2019d worked for 11 years might be reopening in her rural North Carolina hamlet, she immediately jumped on an internet job board to see if it was hiring. It was, but this wasn\u2019t a conventional reopening.\n  Sam\u2019s Club, the discount shopping club named for the founder of Walmart Inc., was changing how it does business. The retail giant\u2019s subsidiary converted the entire building, which reopened in April 2019, into an e-commerce fulfillment center,...", "posttime": "2020-07-20 05:36:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "stores,\u62db\u8058", "title": "\u96f6\u552e\u5e97\u6b63\u5728\u8f6c\u53d8\u4e3a\u7535\u5b50\u5546\u52a1\u5b9e\u65bd\u4e2d\u5fc3", "title_en": "Retail stores are turning into e-commerce fulfillment centers", "transed": 1, "url": "https://www.wsj.com/articles/the-next-phase-of-the-retail-apocalypse-stores-reborn-as-e-commerce-warehouses-11595044859", "via": "", "real_tags": ["stores", "\u62db\u8058"]}, {"category": "", "categoryclass": "", "imagename": "d3021b53f4498ef7489cddfaa2d189bb.png", "infoid": 1012935, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8870\u8001\u8868\u578b\uff0c\u5982\u5065\u5eb7\u72b6\u51b5\u826f\u597d\u7684\u5e74\u6570(\u5065\u5eb7\u8de8\u5ea6)\u3001\u603b\u5bff\u547d(\u5bff\u547d)\uff0c\u4ee5\u53ca\u6d3b\u5230\u7279\u522b\u9ad8\u9f84(\u957f\u5bff)\uff0c\u90fd\u662f\u6211\u4eec\u90fd\u611f\u5174\u8da3\u7684\uff0c\u4f46\u9700\u8981\u975e\u5e38\u5927\u7684\u6837\u672c\u91cf\u6765\u8fdb\u884c\u9057\u4f20\u5b66\u7814\u7a76\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5c06\u73b0\u6709\u7684\u5168\u57fa\u56e0\u7ec4\u8303\u56f4\u5185\u5173\u4e8e\u5065\u5eb7\u8de8\u5ea6\u3001\u53cc\u4eb2\u5bff\u547d\u548c\u5bff\u547d\u7684\u6c47\u603b\u7edf\u8ba1\u6570\u636e\u7ed3\u5408\u5728\u4e00\u4e2a\u591a\u53d8\u91cf\u6846\u67b6\u4e2d\uff0c\u589e\u52a0\u7edf\u8ba1\u80fd\u529b\uff0c\u5e76\u786e\u5b9a\u5f71\u54cd\u6240\u6709\u4e09\u79cd\u8868\u578b\u768410\u4e2a\u57fa\u56e0\u7ec4\u4f4d\u70b9\uff0c\u5176\u4e2d5\u4e2a(\u63a5\u8fd1FOXO3\u3001SLC4A7\u3001LINC02513\u3001ZW10\u548cFGD6)\u4ee5\u524d\u5728\u5168\u57fa\u56e0\u7ec4\u610f\u4e49\u4e0a\u5c1a\u672a\u62a5\u9053\u3002\u8fd910\u4e2a\u57fa\u56e0\u5ea7\u4e2d\u7684\u5927\u591a\u6570\u4e0e\u5fc3\u8840\u7ba1\u75be\u75c5\u6709\u5173\uff0c\u6709\u4e9b\u4f1a\u5f71\u54cd\u5df2\u77e5\u7684\u57fa\u56e0\u8868\u8fbe\uff0c\u8fd9\u4e9b\u57fa\u56e0\u7684\u6d3b\u6027\u4f1a\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\u800c\u6539\u53d8\u3002\u6211\u4eec\u603b\u5171\u6d89\u53ca78\u4e2a\u57fa\u56e0\uff0c\u5e76\u53d1\u73b0\u8fd9\u4e9b\u57fa\u56e0\u5728\u5148\u524d\u5728\u6a21\u5f0f\u751f\u7269\u4e2d\u5f3a\u8c03\u7684\u8870\u8001\u9014\u5f84\u4e2d\u5f97\u5230\u4e86\u4e30\u5bcc\uff0c\u4f8b\u5982\u5bf9DNA\u635f\u4f24\u3001\u51cb\u4ea1\u548c\u52a8\u6001\u5e73\u8861\u7684\u53cd\u5e94\u3002\u6700\u540e\uff0c\u6211\u4eec\u786e\u5b9a\u4e86\u4e00\u4e2a\u503c\u5f97\u8fdb\u4e00\u6b65\u7814\u7a76\u7684\u9014\u5f84\uff1a\u8840\u7ea2\u7d20\u4ee3\u8c22\u3002\n\u4eba\u7c7b\u8870\u8001\u7684\u7279\u70b9\u662f\u7ef4\u6301\u4f53\u5185\u5e73\u8861\u7684\u80fd\u529b\u9010\u6e10\u4e0b\u964d\uff0c\u5bfc\u81f4\u4e0e\u5e74\u9f84\u76f8\u5173\u7684\u75be\u75c5\u7684\u53d1\u75c5\uff0c\u5e76\u6700\u7ec8\u5bfc\u81f4\u6b7b\u4ea1\u3002\u7136\u800c\uff0c\u4e2a\u4f53\u4e4b\u95f4\u6709\u5f88\u5927\u7684\u5dee\u5f02\uff0c\u6709\u4e9b\u4eba\u5f88\u65e9\u5c31\u60a3\u4e0a\u4e86\u6162\u6027\u75c5\uff0c\u572860\u5c81\u4e4b\u524d\u5c31\u53bb\u4e16\u4e86\uff0c\u800c\u53e6\u4e00\u4e9b\u4eba\u5219\u80fd\u6d3b\u5230\u4e0d\u540c\u5bfb\u5e38\u7684\u9ad8\u9f84\uff0c\u901a\u5e38\u76f4\u5230\u751f\u547d\u7684\u6700\u540e\u51e0\u5e74\u90fd\u6ca1\u6709\u75be\u75c51\u3002\u5065\u5eb7\u957f\u5bff\u662f\u7531\u8bb8\u591a\u4e0d\u540c\u7684\u56e0\u7d20\u51b3\u5b9a\u7684\uff0c\u5305\u62ec\u751f\u6d3b\u65b9\u5f0f\u3001\u73af\u5883\u3001\u57fa\u56e0\u548c\u7eaf\u7cb9\u7684\u673a\u4f1a\u3002\u6700\u8fd1\u7684\u4f30\u8ba1\u8868\u660e\uff0c\u4eba\u7c7b\u5bff\u547d(\u5373\u6d3b\u7740\u7684\u5e74\u6570)\u548c\u5065\u5eb7\u8de8\u5ea6(\u5065\u5eb7\u65e0\u75c5\u751f\u6d3b\u7684\u5e74\u9650)\u7684\u57fa\u56e0\u6210\u5206\u53ea\u670910%2\uff0c3\u5de6\u53f3\uff0c\u8fd9\u4f7f\u5f97\u5bf9\u8fd9\u4e9b\u7279\u5f81\u7684\u57fa\u56e0\u7814\u7a76\u5177\u6709\u6311\u6218\u6027\uff0c\u56e0\u4e3a\u9664\u975e\u6837\u672c\u91cf\u5f88\u5927\uff0c\u5426\u5219\u566a\u97f3\u5f80\u5f80\u4f1a\u63a9\u76d6\u5f71\u54cd\u3002\n\u7136\u800c\uff0c\u6709\u4e86\u8db3\u591f\u5927\u7684\u6837\u672c\uff0c\u5bf9\u8870\u8001\u7279\u5f81\u7684\u5168\u57fa\u56e0\u7ec4\u5173\u8054\u7814\u7a76(GWAS)\u5c31\u6709\u53ef\u80fd\u8bc6\u522b\u53c2\u4e0e\u4eba\u7c7b\u8870\u8001\u8fc7\u7a0b\u7684\u57fa\u56e0\u548c\u9014\u5f84\u3002GWAS\u8bd5\u56fe\u786e\u5b9a\u4e0e\u5065\u5eb7\u5bff\u547d3\u30014\u3001(\u53cc\u4eb2)\u5bff\u547d5\u30016\u30017\u548c\u8d85\u9ad8\u9f84(\u901a\u5e38\u79f0\u4e3a\u957f\u5bff)8\u30019\u76f8\u5173\u7684\u4f4d\u70b9\u548c\u9014\u5f84\uff0c\u7ed3\u679c\u4e4b\u95f4\u6709\u4e00\u4e9b\u91cd\u53e0\u3002\u76f8\u5173\u6027\u72b6\u7684\u591a\u53d8\u91cf\u5206\u6790\u63d0\u4f9b\u4e86\u589e\u52a0\u529b\u91cf\u7684\u524d\u666f\uff0c\u7279\u522b\u662f\u5728\u6837\u672c\u4e0d\u91cd\u53e0\u7684\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u53ef\u80fd\u80fd\u591f\u8bc6\u522b\u5f71\u54cd\u5171\u540c\u6f5c\u5728\u8870\u8001\u8fc7\u7a0b\u7684\u53d8\u91cf\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u8bc4\u4f30\u4e86\u5df2\u53d1\u8868\u7684\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u8870\u8001\u8868\u578b\u7684GWAS\u4e4b\u95f4\u7684\u57fa\u56e0\u91cd\u53e0\u7a0b\u5ea6-\u5065\u5eb7\u8de8\u5ea6\u3001\u53cc\u4eb2\u5bff\u547d\u548c\u5bff\u547d(\u5b9a\u4e49\u4e3a\u6d3b\u523090%\u4ee5\u4e0a\u7684\u5e74\u9f84)-\u5e76\u8fdb\u884c\u591a\u53d8\u91cf\u835f\u8403\u5206\u6790\uff0c\u4ee5\u786e\u5b9a\u4e0e\u5065\u5eb7\u8001\u9f84\u5316\u76f8\u5173\u7684\u9057\u4f20\u53d8\u5f02\u3002\u968f\u540e\uff0c\u6211\u4eec\u63cf\u8ff0\u4e86\u5f71\u54cd\u6240\u6709\u8fd9\u4e09\u4e2a\u8870\u8001\u6027\u72b6\u7684\u57fa\u56e0\u5ea7\u7684\u6027\u522b\u548c\u5e74\u9f84\u7279\u5f02\u6027\u6548\u5e94\uff0c\u5e76\u67e5\u627e\u4e86\u4e0e\u5e74\u9f84\u76f8\u5173\u7684\u8868\u578b\u548c\u75be\u75c5\u7684\u76f8\u5173\u62a5\u9053\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u8fd9\u4e9b\u4f4d\u70b9\u4e0a\u89c2\u5bdf\u5230\u7684\u4fe1\u53f7\u4e0e\u7279\u5b9a\u57fa\u56e0\u7684\u8868\u8fbe\u8054\u7cfb\u8d77\u6765\uff0c\u5305\u62ec\u76ee\u524d\u5728\u6a21\u5f0f\u751f\u7269\u4e2d\u7814\u7a76\u7684\u4e00\u4e9b\u57fa\u56e0\uff0c\u5e76\u786e\u5b9a\u4e0e\u5065\u5eb7\u8870\u8001\u6709\u5173\u7684\u9014\u5f84\u3002\n\u6211\u4eec\u63a2\u7d22\u4e86\u4e09\u4e2a\u516c\u5171\u7684\u3001\u6b27\u6d32\u8840\u7edf\u7684GWAS\u7684\u91cd\u53e0\u8870\u8001\u7279\u5f81\uff1a\u5065\u5eb7\u8de8\u5ea6(N\u2009=\u2009300,477\u4eba\uff0c28.3%\u4e0d\u518d\u5065\u5eb7)\uff0c\u7236\u6bcd\u5bff\u547d(N\u2009=\u20091,012,240\u4e2a\u7236\u6bcd\uff0c60%\u6b7b\u4ea1)\u548c\u957f\u5bff(N\u4f8b\u2009=\u200911,262\uff1bN\u5bf9\u7167\u2009=\u200925,483)\u3002\u5c3d\u7ba1\u5728\u5e74\u9f84\u4eba\u53e3\u7edf\u8ba1\u3001\u6027\u72b6\u5b9a\u4e49\u548c\u7814\u7a76\u8bbe\u8ba1\u4e0a\u5b58\u5728\u5dee\u5f02\uff0c\u4f46\u8fd9\u4e9b\u6027\u72b6\u8868\u73b0\u51fa\u663e\u8457\u7684\u9057\u4f20\u76f8\u5173\u6027(P\u2009&lt\uff1b\u20095\u2009\u00d7\u200910-8)\u3002\u4eb2\u672c\u5bff\u547d\u4e0e\u5065\u5eb7\u5bff\u547d(r g\u2009=\u20090.70\uff1bSE\u2009=\u20090.0 4)\u548c\u5bff\u547d(r g\u2009=\u20090.81\uff1bSE\u2009=\u20090.0 8)\u6709\u5f88\u5f3a\u7684\u76f8\u5173\u6027\uff0c\u800c\u5065\u5eb7\u5bff\u547d\u548c\u5bff\u547d\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u8f83\u5f31(r g\u2009=\u20090.5 1\uff1bSE\u2009=\u20090.0 9)(\u56fe1a)\u3002\u6211\u4eec\u5728UK Biobank\u4e2d\u5bf9\u53cc\u4eb2\u5bff\u547d\u8fdb\u884c\u4e86\u5e74\u9f84\u5206\u5c42\u7684GWAS\uff0c\u4ee5\u8bc4\u4f30\u8fd9\u4e9b\u6027\u72b6\u4e4b\u95f4\u7684\u9057\u4f20\u76f8\u5173\u6027\u662f\u5426\u4e0e\u5e74\u9f84\u6709\u5173\uff0c\u4f46\u6211\u4eec\u7684\u7ed3\u679c\u663e\u793a\uff0c\u5065\u5eb7\u8de8\u5ea6/\u5bff\u547d\u4e0e\u5e74\u9f84\u5206\u5c42\u7684\u53cc\u4eb2\u5bff\u547d\u533a\u95f4\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u6ca1\u6709\u660e\u663e\u7684\u8d8b\u52bf(\u56fe1b)\u3002\n\u4eba\u7c7b\u8870\u8001\u7814\u7a76\u4e4b\u95f4\u7684\u6210\u5bf9\u9057\u4f20\u76f8\u5173\u6027\u3002\u5e74\u9f84\u5206\u5c42\u53cc\u4eb2\u5bff\u547d\u4e0e\u5065\u5eb7\u5bff\u547d\u548c\u5bff\u547d\u7684\u9057\u4f20\u76f8\u5173\u6027\u3002C\u8870\u8001\u6027\u72b6\u4e0e\u53d1\u80b2\u3001\u884c\u4e3a\u548c\u75be\u75c5\u76f8\u5173\u6027\u72b6\u7684\u9057\u4f20\u76f8\u5173\u6027(Rg)\u3002\u7c97\u4f53\u662f\u5177\u6709\u5f02\u8d28\u76f8\u5173\u6027\u7684\u6027\u72b6(Phet\u2009&lt\uff1b\u2009005)\u3002\u5728\u6d4b\u8bd5\u768427\u4e2a\u6027\u72b6\u4e2d\uff0c\u8fd9\u91cc\u663e\u793a\u4e8617\u4e2a\u6027\u72b6\uff0c\u5b83\u4eec\u81f3\u5c11\u6709\u4e00\u4e2a\u663e\u8457\u7684\u9057\u4f20\u76f8\u5173\u6027(FDR\u2009&lt\uff1b\u20095%)\u4e0e\u5065\u5eb7\u5bff\u547d\u3001\u53cc\u4eb2\u5bff\u547d\u6216\u957f\u5bff\u6709\u5173\u3002\u6839\u636e17\u4e2a\u6027\u72b6\u4e0e\u6240\u6709\u88ab\u6d4b\u6027\u72b6(\u517130\u4e2a)\u7684\u9057\u4f20\u76f8\u5173\u6027\uff0c\u5229\u7528\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\u5bf9\u5176\u8fdb\u884c\u805a\u7c7b\u3002\u6709\u5173\u76f8\u5173\u6027\u7684\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u53c2\u9605\u8865\u5145\u6570\u636e1\uff1b\u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u6210\u5bf9\u76f8\u5173\u7684SNP\u6570\u91cf\uff0c\u8bf7\u53c2\u9605\u8865\u5145\u88681\u3002\u7a7a\u767d\u6b63\u65b9\u5f62\u8868\u793a\u672a\u901a\u8fc7\u591a\u6b21\u7684\u76f8\u5173\u6027\n\u66fc\u54c8\u987f\u66f2\u7ebf\u56fe\u663e\u793a\u2212\u5728y\u8f74\u4e0a\u7684\u6807\u79f0\u5f3a\u5ea6log10(P\u503c)(\u53cc\u9762)\u4e0eSNP\u5728x\u8f74\u4e0a\u7684\u67d3\u8272\u4f53\u4f4d\u7f6e\u76f8\u5bf9\u5e94\uff0c\u5176\u4e2d\u65e0\u6548\u5047\u8bbe\u4e0e\u5065\u5eb7\u5bff\u547d\u3001\u53cc\u4eb2\u5bff\u547d\u548c\u957f\u5bff\u65e0\u5173\u3002\u7ea2\u7ebf\u4ee3\u8868\u5168\u57fa\u56e0\u7ec4\u610f\u4e49\u9608\u503c(5\u2009\u00d7\u200910-8)\u3002\u6ce8\u89e3\u7684\u662f\u8ddd\u79bb\u6bcf\u4e2a\u4f4d\u70b9\u7684\u524d\u5bfcSNP\u6700\u8fd1\u7684\u57fa\u56e0(\u7ea2\u8272)\u3002\u4e3a\u4fbf\u4e8e\u8fa8\u8ba4\uff0cy\u8f74\u7684\u4e0a\u9650\u4e3a5\u2009\u00d7\u200910\u221230\uff1b\u901a\u8fc7\u6b64\u4e0a\u9650\u7684SNP\u8868\u793a\u4e3a\u4e09\u89d2\u5f62\uff1aLpa\uff0cP\u2009=\u20093.8\u2009\u00d7\u200910\u221230\uff0cApoE\uff0cP\u2009=\u20099.6\u2009\u00d7\u200910\u2212127\u3002\n\u5728\u8fbe\u5230\u5168\u57fa\u56e0\u7ec4\u610f\u4e49\u768424\u4e2a\u591a\u53d8\u91cfGWAS\u57fa\u56e0\u5ea7\u4e2d\uff0c\u670921\u4e2a\u5728\u4e09\u4e2a\u7814\u7a76\u6570\u636e\u96c6\u4e2d\u5177\u6709\u65b9\u5411\u6027\u4e00\u81f4\u7684\u6548\u5e94\uff0c18\u4e2a\u5728\u4e24\u4e2a\u6216\u66f4\u591a\u6570\u636e\u96c6\u4e2d\u5177\u6709\u540d\u4e49\u4e0a\u7684\u663e\u8457\u6027(P\u2009&lt\uff1b\u20090.05)(\u8865\u5145\u56fe1)\u3002\u5728GWAS\u76ee\u5f55\u548cPhenoScanner\u4e2d\u67e5\u627e\u94c5SNP\u548c\u63a5\u8fd1\u7684\u66ff\u4ee3\u57fa\u56e0\u8868\u660e\uff0c\u5065\u5eb7\u8de8\u5ea6\u7279\u5b9a\u7684\u57fa\u56e0\u5ea7(\u5373\u4ec5\u5728\u5065\u5eb7\u8de8\u5ea6\u6570\u636e\u96c6\u4e2d\u7684P\u2009&lt\uff1b\u20090.05)\u4e3b\u8981\u4e0e\u76ae\u80a4\u764c\u548c\u4ee3\u8c22\u7279\u5f81\u6709\u5173\uff0c\u800c\u7236\u6bcd\u7684\u5bff\u547d\u7279\u5b9a\u7684\u57fa\u56e0\u5ea7\u4e0e\u5438\u70df\u548c\u5192\u9669\u884c\u4e3a\u6709\u5173(\u8865\u5145\u6570\u636e3)\u3002\u4e0e\u8fd9\u4e9b\u8868\u578b\u7684\u5173\u8054\u8868\u660e\uff0c\u8fd9\u4e9b\u53d8\u5f02\u4f1a\u5f71\u54cd(\u5bfc\u81f4)\u73af\u5883\u66b4\u9732\u7684\u884c\u4e3a\uff0c\u56e0\u6b64\u5f88\u53ef\u80fd\u6355\u6349\u5230\u5916\u5728\u7684\u8870\u8001\u8fc7\u7a0b\u3002\u7531\u4e8e\u6211\u4eec\u4e3b\u8981\u5bf9\u5f71\u54cd\u5185\u5728\u8870\u8001\u8fc7\u7a0b\u7684\u9057\u4f20\u53d8\u5f02\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u8fd9\u9879\u7814\u7a76\u7684\u5176\u4f59\u90e8\u5206\u96c6\u4e2d\u5728\u6240\u6709\u4e09\u4e2a\u6570\u636e\u96c6\u4e2d\u8fbe\u5230\u540d\u4e49\u610f\u4e49\u7684\u9057\u4f20\u53d8\u5f02\u4e0a\uff0c\u8fd9\u4e9b\u53d8\u5f02\u4e0d\u592a\u53ef\u80fd\u4e0e\u7814\u7a76\u6216\u7279\u5b9a\u4eba\u7fa4\u7684\u66b4\u9732\u76f8\u5173\u3002\n\u5728\u6240\u6709\u4e09\u4e2aGWAS\u6570\u636e\u96c6\u4e2d\uff0c\u670910\u4e2a\u4f4d\u70b9\u8fbe\u5230\u540d\u4e49\u663e\u8457\u6027(P\u2009&lt\uff1b\u20090.0 5)(\u88681)\u3002\u5176\u4e2d\u4e94\u4e2a\u7279\u522b\u4ee4\u4eba\u611f\u5174\u8da3\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u4efb\u4f55\u5355\u4e2a\u6570\u636e\u96c6\u4e2d\u90fd\u4e0d\u5305\u542b\u5168\u57fa\u56e0\u7ec4\u663e\u7740\u7684SNP\u3002\u8fd9\u4e9b\u4f4d\u70b9\u7684\u524d\u5bfc\u591a\u53d8\u91cfSNP\u5305\u62ecrs2643826(\u6700\u8fd1\u57fa\u56e0SLC4A7)\u3001rs17499404(LINC02513)\u3001rs1159806(FOXO3)\u3001rs61905747(ZW10)\u548crs12830425(FGD6)(\u8865\u5145\u56fe2-6)\u3002FOXO_3\u9644\u8fd1\u7684\u9886\u5148\u5355\u6838\u82f7\u9178\u591a\u6001\u6027\u4e0e\u957f\u5bff\u7814\u7a7613\u4e2d\u5df2\u77e5\u7684\u5019\u9009\u5355\u6838\u82f7\u9178\u591a\u6001\u6027rs2802292\u5904\u4e8e\u4e2d\u5ea6\u8fde\u9501\u4e0d\u5e73\u8861(r2\u2009&gt\uff1b\u2009.4)\u3002\u8003\u8651\u5230\u4e00\u4e9b\u4f4d\u70b9\u7684P\u503c\u63a5\u8fd1\u5168\u57fa\u56e0\u7ec4\u663e\u8457\u6027\u9608\u503c(\u5373SLC4A7\u548cLINC02513)\uff0c\u6709\u5fc5\u8981\u5728\u6211\u4eec\u5c1a\u672a\u83b7\u5f97\u7684\u5927\u7684\u72ec\u7acb\u961f\u5217\u4e2d\u590d\u5236\u8fd9\u4e9b\u4f4d\u70b9\u3002\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528Timmers\u7b49\u4eba\u7684\u6027\u522b\u7279\u5b9a\u7684\u7236\u6bcdGWAS\u6c47\u603b\u7edf\u8ba1\u6570\u636e\uff0c\u6d4b\u8bd5\u4e86\u611f\u5174\u8da3\u7684\u4f4d\u70b9\u662f\u5426\u6309\u6027\u522b\u5bf9\u7236\u6bcd\u7684\u5bff\u547d\u663e\u793a\u51fa\u4e0d\u540c\u7684\u5f71\u54cd\u30027.\u6211\u4eec\u53d1\u73b0\u8f7d\u8102\u86cb\u767dE\u03b54\u7b49\u4f4d\u57fa\u56e0(\u03b2Parents\u2009=\u20090.08\uff0c\u03b2Mothers\u2009=\u20090.13\uff0cP Diff\u2009=\u20091.5\u2009\u00d7\u200910-6)\u5b58\u5728\u6027\u522b\u4e8c\u6001\u73b0\u8c61\uff0c\u800cLINC02513\u3001SLC4A7\u3001LPA\u3001TOX3\u548cFOXO_3\u9644\u8fd1\u7684\u94c5SNP\u6ca1\u6709\u6027\u522b\u4e8c\u6001\u73b0\u8c61(&lt\uff1b20%\u7684\u5dee\u5f02\u6216P Diff\u2009&gt\uff1b\u2009\u4e3a0.50)\u3002\u5bf9\u4e8e\u5176\u4f59\u7684\u57fa\u56e0\u5ea7\uff0c\u5728CDKN2B-AS1\u3001ZW10\u3001FGD6\u548cLDLR\u9644\u8fd1\uff0c\u6548\u5e94\u5927\u5c0f\u70b9\u4f30\u8ba1\u53ef\u80fd\u4f1a\u6709\u8d85\u8fc720%\u7684\u5dee\u5f02\uff0c\u4f46\u6211\u4eec\u9700\u8981\u66f4\u5927\u7684\u6837\u672c\u91cf\u624d\u80fd\u6709\u628a\u63e1\u5730\u68c0\u6d4b\u5230\u8fd9\u79cd\u5dee\u5f02(\u8865\u5145\u56fe7\u4e2d)\u3002\n\u5728\u6211\u4eec\u7684\u5e74\u9f84\u5206\u5c42\u7684\u53cc\u4eb2\u5bff\u547dGWAS\u4e2d\u67e5\u627e\u76f8\u540c\u7684SNPs\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u9664\u4e86APOE\u548cSLC4A7\u5916\uff0c\u6240\u6709\u7684\u57fa\u56e0\u5ea7\u7684\u6709\u6548\u5927\u5c0f\u90fd\u968f\u7740\u53cc\u4eb2\u7684\u5e74\u9f84\u800c\u5448\u73b0\u4e0b\u964d\u7684\u8d8b\u52bf\u3002\u8fd9\u4e00\u8d8b\u52bf\u5bf9\u8f7d\u8102\u86cb\u767dE\u4f4d\u70b9\u6709\u663e\u8457\u610f\u4e49(P\u8c03\u6574\u540e\u7684\u2009=\u20090.0 1)\uff0c\u4eb2\u672c\u5b58\u6d3b\u7387\u6bcf\u589e\u52a010\u5e74\uff0c\u03b54\u7b49\u4f4d\u57fa\u56e0\u7684\u6548\u5e94\u5927\u5c0f\u589e\u52a032%(2 5-39%)\u3002\u867d\u7136\u6211\u4eec\u65e0\u6cd5\u786e\u8ba4\u5176\u4f59\u57fa\u56e0\u5ea7\u7684\u8d8b\u52bf\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\uff0c\u603b\u4f53\u6765\u8bf4\uff0c\u8fd99\u4e2a\u57fa\u56e0\u5ea7\u7684\u4fdd\u62a4\u7b49\u4f4d\u57fa\u56e0\u7684\u5e73\u5747\u6548\u5e94\u6bcf\u589e\u52a010\u5e74\u4eb2\u672c\u5b58\u6d3b\u7387\u5c31\u4f1a\u964d\u4f4e24%(13-34%\uff1bP\u8c03\u6574\u540e\u7684\u2009=\u20091\u2009\u00d7\u200910-4)(\u8865\u5145\u56fe8)\u3002\n\u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u8fd9\u4e9b\u611f\u5174\u8da3\u7684\u57fa\u56e0\u5ea7\u4ee5\u524d\u66fe\u5728\u5168\u57fa\u56e0\u7ec4\u663e\u7740\u6c34\u5e73\u4e0a\u4e0e\u51e0\u79cd\u5e74\u9f84\u76f8\u5173\u7684\u75be\u75c5\u548c/\u6216\u8868\u578b\u76f8\u5173\u3002\u5927\u591a\u6570\u57fa\u56e0\u5ea7\u7684\u5ef6\u957f\u5bff\u547d\u7b49\u4f4d\u57fa\u56e0\u4e0e\u5fc3\u8840\u7ba1\u75be\u75c5\u8868\u578b\u7684\u51cf\u5c11\u6709\u5173\uff0c\u5305\u62ec\u672c\u7814\u7a76\u4e2d\u53d1\u73b0\u7684\u8870\u8001\u57fa\u56e0\u5ea7SLC4A7\u3001FGD6\u548cLINC02513\u9644\u8fd1\u7684SNP\u3002\u6709\u8da3\u7684\u662f\uff0cFOXO3\u9644\u8fd1\u7684\u4fdd\u62a4\u6027\u53d8\u5f02\u4e0e\u4ee3\u8c22\u7efc\u5408\u5f81\u7684\u51cf\u5c11\u6709\u5173\uff0c\u4f46\u4e5f\u4e0e\u8ba4\u77e5\u80fd\u529b\u7684\u964d\u4f4e\u6709\u5173\u3002APOE\u3001FOXO3\u548cFGD6\u9644\u8fd1\u7684\u5ef6\u957f\u5bff\u547d\u7684SNP\u90fd\u4e0e\u9ec4\u6591\u53d8\u6027\u7684\u589e\u52a0\u6709\u5173(\u8865\u5145\u56fe9\uff1b\u8865\u5145\u6570\u636e3)\u3002\n\u7528\u57fa\u56e0\u8868\u8fbe\u6570\u91cf\u6027\u72b6\u4f4d\u70b9(EQTL)\u8bc4\u4f30\u5171\u5b9a\u4f4d\u611f\u5174\u8da3\u7684\u4f4d\u70b9\uff0c\u6211\u4eec\u53d1\u73b010\u4e2a\u4f4d\u70b9\u4e2d\u67098\u4e2a\u662f\u987a\u5f0f\u4f5c\u7528eQTL\u5171\u5b9a\u4f4d\u7684\u6709\u529b\u8bc1\u636e(FDR SMR\u2009&lt\uff1b\u20095%\uff1bP Heidi\u2009&gt\uff1b\u20091%\uff1b\u89c1\u201c\u65b9\u6cd5\u201d)\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5f3a\u8c03\u4e8627\u4e2a\u72ec\u7279\u7684\u57fa\u56e0\uff0c\u4f5c\u7528\u4e8e32\u4e2a\u7ec4\u7ec7\uff0c\u7279\u522b\u662f\u5168\u8840(12\u4e2a\u57fa\u56e0)\u548c\u80eb\u795e\u7ecf(7\u4e2a\u57fa\u56e0)(\u8865\u5145\u6570\u636e5)\u3002\u5728\u8840\u6db2\u4e2d\uff0cBCL3\u548cCKM(\u63a5\u8fd1APOE)\u3001CTC-510F12.2\u3001ILF3\u3001KANK2\u548cPDE4A(\u9760\u8fd1LDLR)\u3001USP28\u548cANKK1(\u63a5\u8fd1ZW10)\u548cCDKN2B\u7684\u9ad8\u8868\u8fbe\u6c34\u5e73\u4e0eIn\n\u6700\u540e\uff0c\u5bf950\u6761\u6807\u5fd7\u6027\u57fa\u56e0\u548c7,350\u6761\u751f\u7269\u8fc7\u7a0b\u9014\u5f84\u4e2d\u7684\u987a\u5f0f\u548c\u53cd\u5f0f\u4f5c\u7528\u57fa\u56e0\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6211\u4eec\u53d1\u73b0\u57287\u4e2a\u6807\u5fd7\u6027\u57fa\u56e0\u96c6\u5408\u548c32\u4e2a\u751f\u7269\u5b66\u8fc7\u7a0b\u4e2d\u663e\u8457\u5bcc\u96c6(P\u8c03\u6574\u540e\u7684\u2009&lt\uff1b\u20090.05)\u3002\u5bcc\u96c6\u7a0b\u5ea6\u6700\u9ad8\u7684\u6807\u5fd7\u6027\u57fa\u56e0\u7ec4\u5305\u62ec\u8840\u7ea2\u7d20\u4ee3\u8c22\u3001\u7f3a\u6c27\u548c\u65e9\u671f\u96cc\u6fc0\u7d20\u53cd\u5e94(\u56fe3)\u3002\u4e30\u5bcc\u7684\u751f\u7269\u9014\u5f84\u53ef\u5206\u4e3a\u6d89\u53ca\u51cb\u4ea1\u4fe1\u53f7\u3001\u5316\u5b66\u52a8\u6001\u5e73\u8861\u3001\u7ea2\u7ec6\u80de\u548c\u9ad3\u6837\u7ec6\u80de\u53d1\u80b2\u7b49\u7c7b\u522b(\u8865\u5145\u56fe10\uff1b\u8865\u5145\u6570\u636e7)\u3002\nN\u611f\u5174\u8da3\u7684\u57fa\u56e0\u6570\u91cf\u4e0eeQTL\u53ef\u7528\u7684\u57fa\u56e0\u96c6\u5408\u4e2d\u7684\u57fa\u56e0\u603b\u6570\u4e4b\u6bd4\u3002\u6d53\u7f29\u8d85\u51e0\u4f55\u68c0\u9a8c\u7684\u6807\u79f0P\u503c(\u5bf9\u716724,670\u4e2a\u80cc\u666f\u57fa\u56e0)\u3002P bonf Bonferroni-\u6821\u6b63P\u503c\uff0c\u7528\u4e8e\u6d4b\u8bd5\u4e03\u6761\u6807\u5fd7\u6027\u901a\u8def(\u81f3\u5c11\u5305\u542b\u4e09\u4e2a\u57fa\u56e0)\u3002\u8be5\u56fe\u663e\u793a\u4e86x\u8f74\u4e0a\u7684\u5355\u4e2a\u57fa\u56e0\u548cy\u8f74\u4e0a\u5217\u51fa\u7684\u6807\u8bb0\u8def\u5f84\uff0c\u4e0e\u8868\u4e2d\u7684\u987a\u5e8f\u4e00\u81f4\u3002\u65b9\u5757\u8868\u793a\u57fa\u56e0\u96c6\u4e2d\u5b58\u5728\u4e00\u4e2a\u57fa\u56e0\u3002\n\u6211\u4eec\u5047\u8bbe\u8840\u7ea2\u7d20\u4ee3\u8c22\u548c\u5316\u5b66\u52a8\u6001\u5e73\u8861\u5bf9\u5065\u5eb7\u5bff\u547d\u3001\u53cc\u4eb2\u5bff\u547d\u548c\u5bff\u547d\u7684\u5f71\u54cd\u53ef\u80fd\u662f\u901a\u8fc7\u94c1\u7684\u751f\u7269\u53ef\u5229\u7528\u6027\u6765\u4ecb\u5bfc\u7684\uff0c\u5e76\u4f7f\u7528GWAS\u7684MR\u5bf9\u94c1\u76f8\u5173\u6027\u72b6\u7684\u6c47\u603b\u7edf\u8ba1\u6570\u636e(\u5373\u8840\u6e05\u94c1\u3001\u5bf9\u6570\u94c1\u86cb\u767d\u548c\u8f6c\u94c1\u86cb\u767d(\u9971\u548c\u767e\u5206\u6bd4\u548c\u7edd\u5bf9\u6c34\u5e73))\u4e0e\u6211\u4eec\u7684GWAS\u7ed3\u679c\u8fdb\u884c\u4e86\u5bf9\u6bd4\uff0c\u5bf9\u8fd9\u4e00\u5047\u8bbe\u8fdb\u884c\u4e86\u7814\u7a76\u3002\u5728\u5355\u53d8\u91cfMR\u6846\u67b6\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u8840\u6e05\u94c1(FDR\u2009&lt\uff1b\u20095%)\u5b58\u5728\u56e0\u679c\u6548\u5e94\u7684\u8bc1\u636e\uff0c\u8fd9\u4f3c\u4e4e\u4e0eMR\u7684\u5047\u8bbe\u4e00\u81f4\uff0c\u5bf9\u5f02\u5e38\u503c\u5177\u6709\u9c81\u68d2\u6027(\u8865\u5145\u56fe11\uff1b\u8865\u5145\u88682\u548c3)\u3002\u6211\u4eec\u8fd8\u53d1\u73b0\u4e86\u8f6c\u94c1\u86cb\u767d\u9971\u548c\u6548\u5e94\u7684\u4e00\u4e9b\u8bc1\u636e\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u5173\u8054\u4e3b\u8981\u662f\u7531\u4f17\u6240\u5468\u77e5\u7684\u9057\u4f20\u6027\u8840\u8272\u7d20\u6c89\u7740\u75c7\u4f4d\u70b9\u9a71\u52a8\u7684\uff0c\u5e76\u663e\u793a\u51fa\u8fdd\u53cd\u591a\u6548\u6027\u5047\u8bbe(\u5373\u975e\u96f6MR-Egger\u622a\u8ddd)\u7684\u8bc1\u636e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u591a\u53d8\u91cfMR\u5206\u6790\u4e2d\u6d4b\u8bd5\u4e86\u6240\u6709\u94c1\u7279\u5f81\u4f5c\u4e3a\u66b4\u9732\u7684\u540c\u65f6\uff0c\u4ee5\u6211\u4eec\u7684GWAS\u4e3a\u7ed3\u679c\uff0c\u53d1\u73b0\u4e86\u8840\u6e05\u94c1\u3001\u8f6c\u94c1\u86cb\u767d\u6c34\u5e73\u548c\u8f6c\u94c1\u86cb\u767d\u9971\u548c\u5ea6\u7684\u56e0\u679c\u6548\u5e94(FDR\u2009&lt\uff1b\u20095%\uff1b\u03b2Intercept\u2009=\u20090.0012\uff1b95%CI\uff1a\u22120.0005\u81f30.0029)\u7684\u66f4\u53ef\u9760\u8bc1\u636e\u3002\u8fd9\u4e9b\u6548\u5e94\u5e76\u4e0d\u53ea\u7531\u4e00\u4e2a\u57fa\u56e0\u4f4d\u70b9\u9a71\u52a8\uff0c\u5305\u62ec\u9057\u4f20\u6027\u8840\u8272\u7d20\u6c89\u7740\u75c7\u57fa\u56e0\u5ea7\uff0c\u6b63\u5982\u7559\u4e00\u6cd5\u5206\u6790\u6240\u8bc1\u5b9e\u7684\u90a3\u6837(\u8865\u5145\u6570\u636e8)\u3002\u5c3d\u7ba1\u56e0\u679c\u6548\u5e94\u7684\u5355\u4f4d\u5728\u4e0d\u540c\u7684\u66b4\u9732\u4e2d\u662f\u4e00\u81f4\u7684(\u5e76\u4e14\u4e0eP\u503c\u76f8\u5173)\uff0c\u4f46\u5b83\u4eec\u5f88\u96be\u89e3\u91ca\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5bf9\u4e2a\u4f53\u6210\u5206\u6027\u72b6\uff1a\u5065\u5eb7\u8de8\u5ea6\u3001\u53cc\u4eb2\u5bff\u547d\u548c\u5bff\u547d\u91cd\u590d\u4e86\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u8ba4\u8bc6\u5230\u6709\u6548\u6837\u672c\u91cf\u7684\u51cf\u5c11\u53ef\u80fd\u4f1a\u4ea7\u751f\u52a8\u529b\u4e0d\u8db3\u7684\u6548\u5e94\u5927\u5c0f\u4f30\u8ba1\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u4f30\u8ba1\u7ed9\u51fa\u4e86\u4ee5\u53ef\u6d4b\u91cf\u5355\u4f4d\u8868\u793a\u7684\u5f71\u54cd\u7684\u65b9\u5411\u548c\u5927\u5c0f(\u88683)\u3002\u591a\u53d8\u91cfMR\u6548\u5e94\u7684\u5927\u5c0f\u4f3c\u4e4e\u6bd4\u5355\u53d8\u91cfMR\u7684\u5927\u5c0f\u66f4\u5927\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u52a8\u6001\u5e73\u8861\uff0c\u5373\uff0c\u4e00\u4e2a\u66b4\u9732\u4e2d\u7684\u53d8\u5316\u901a\u5e38\u88ab\u53e6\u4e00\u4e2a\u66b4\u9732\u4e2d\u7684\u53d8\u5316\u7f13\u51b2\u3002\u4f8b\u5982\uff0c\u5f53\u91d1\u5c5e\u4e0e\u8f6c\u94c1\u86cb\u767d\u7ed3\u5408\u65f6\uff0c\u8840\u6e05\u94c1\u7684\u6c27\u5316\u635f\u4f24\u53ef\u4ee5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5f97\u5230\u9632\u6b62\u3002\n\u516c\u4f17\u53ef\u83b7\u5f97\u7684\u5065\u5eb7\u5bff\u547d\u3001\u53cc\u4eb2\u5bff\u547d\u548c\u957f\u5bff\u4e4b\u95f4\u7684\u9057\u4f20\u76f8\u5173\u6027\u63ed\u793a\u4e86\u8fd9\u4e9b\u7279\u5f81\u5171\u4eab\u5176\u6f5c\u5728\u9057\u4f20\u5b66\u768450%\u6216\u66f4\u591a\u3002\u5bf9GWAS\u6c47\u603b\u7edf\u8ba1\u6570\u636e\u8fdb\u884c\u591a\u53d8\u91cf\u835f\u8403\u5206\u6790\uff0c\u6211\u4eec\u7a81\u51fa\u4e86\u5f71\u54cd\u4e00\u4e2a\u6216\u591a\u4e2a\u6027\u72b6\u768424\u4e2a\u57fa\u56e0\u7ec4\u533a\u57df\u3002\u6709\u5341\u4e2a\u533a\u57df\u7279\u522b\u4ee4\u4eba\u611f\u5174\u8da3\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u6240\u6709\u4e09\u4e2a\u8870\u8001\u7279\u5f81\u76f8\u5173\u8054\uff0c\u56e0\u6b64\u6709\u53ef\u80fd\u6355\u6349\u5230\u5185\u5728\u7684\u8870\u8001\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u5916\u90e8\u7684\u8870\u8001\u6765\u6e90\u3002\u5728\u4efb\u4f55\u4e2a\u4f53\u6570\u636e\u96c6\u4e2d\uff0c\u5305\u62ecFOXO3\u9644\u8fd1\u7684\u533a\u57df\uff0c\u5176\u4e2d\u4e94\u4e2a\u611f\u5174\u8da3\u7684\u4f4d\u70b9\u5728\u5168\u57fa\u56e0\u7ec4\u663e\u8457\u6c34\u5e73\u4e0a\u90fd\u6ca1\u6709\u5173\u8054\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8be5\u533a\u57df\u53ea\u5728\u5019\u9009\u57fa\u56e0\u5173\u8054\u7814\u7a76\u4e2d\u5f97\u5230\u4e86\u5f3a\u8c03(\u5728\u8428\u5c3c\u65af\u7b49\u4eba\u4e2d\u8fdb\u884c\u4e86\u7efc\u8ff0)\u300215)\u800c\u4e14\u4ece\u672a\u5728\u5168\u57fa\u56e0\u7ec4\u8303\u56f4\u5185\u5177\u6709\u91cd\u8981\u610f\u4e49\u3002\u5174\u8da3\u4f4d\u70b9\u5bf9\u7537\u6027\u548c\u5973\u6027\u5bff\u547d\u7684\u5f71\u54cd\u5927\u81f4\u76f8\u540c\uff0c\u5c3d\u7ba1\u4e0e\u8001\u5e74(80\u5c81)\u76f8\u6bd4\uff0c\u4e2d\u5e74(40-60\u5c81)\u5bf9\u751f\u5b58\u7684\u5f71\u54cd\u53ef\u80fd\u7565\u5f3a\u4e00\u4e9b\u3002\u8f7d\u8102\u86cb\u767dE\u03b54\u7b49\u4f4d\u57fa\u56e0\u5728\u8fd9\u65b9\u9762\u662f\u4f8b\u5916\u7684\uff0c\u56e0\u4e3a\u5b83\u5728\u5973\u6027\u4e2d\u7684\u4f5c\u7528\u66f4\u5f3a\uff0c\u5e76\u4e14\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\u800c\u589e\u52a0\uff0c\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u4e0e\u963f\u5c14\u8328\u6d77\u9ed8\u75c516\u6709\u4f17\u6240\u5468\u77e5\u7684\u8054\u7cfb\u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u611f\u5174\u8da3\u7684\u57fa\u56e0\u4f4d\u70b9\u4e0e28\u4e2a\u987a\u5f0f\u57fa\u56e0\u548c50\u4e2a\u53cd\u5f0f\u57fa\u56e0\u7684\u8868\u8fbe\u662f\u5171\u540c\u5b9a\u4f4d\u7684\uff0c\u5176\u4e2d\u4e00\u4e9b\u5df2\u77e5\u4f1a\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\u800c\u51fa\u73b0\u5dee\u5f02\u8868\u8fbe\u3002\u6700\u540e\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u4e9b\u57fa\u56e0\u5bcc\u96c6\u4e867\u7ec4\u6807\u5fd7\u6027\u57fa\u56e0(\u7279\u522b\u662f\u8840\u7ea2\u7d20\u4ee3\u8c22)\u548c32\u6761\u5f88\u5927\u7a0b\u5ea6\u4e0a\u91cd\u53e0\u7684\u751f\u7269\u9014\u5f84(\u5305\u62ec\u51cb\u4ea1\u548c\u7a33\u6001)\uff0c\u5e76\u4e14\u4e0e\u7a81\u51fa\u663e\u793a\u7684\u9014\u5f84\u4e00\u81f4\uff0c\u6211\u4eec\u5728MR\u6846\u67b6\u4e2d\u53d1\u73b0\u4e86\u5065\u5eb7\u751f\u6d3b\u4e2d\u94c1\u6c34\u5e73\u7684\u56e0\u679c\u4f5c\u7528\u3002\n\u5bf9\u78c1\u5171\u632f\u7ed3\u679c\u7684\u89e3\u91ca\u5e94\u8c28\u614e\u5904\u7406\uff0c\u5e94\u7528\u65b9\u6cd5\u7684\u900f\u660e\u5ea6\u4ee5\u53ca\u654f\u611f\u6027\u5206\u6790\u3002", "note_en": "Ageing phenotypes, such as years lived in good health (healthspan), total years lived (lifespan), and survival until an exceptional old age (longevity), are of interest to us all but require exceptionally large sample sizes to study genetically. Here we combine existing genome-wide association summary statistics for healthspan,\u00a0parental lifespan, and longevity in a multivariate framework, increasing statistical power, and identify 10 genomic loci which influence all three phenotypes, of which five (near  FOXO3,  SLC4A7,  LINC02513,  ZW10, and  FGD6) have not been reported previously at genome-wide significance. The majority of these 10 loci are associated with cardiovascular disease and some affect the expression of genes known to change their\u00a0activity with age. In total, we implicate 78 genes, and find these to be enriched for ageing pathways previously highlighted in model organisms, such as the response to DNA damage, apoptosis, and homeostasis. Finally, we identify a pathway worthy of further study: haem metabolism.\n     Human ageing is characterised by a progressive decline in the ability to maintain homeostasis, leading to the onset of age-related diseases and eventually death. However, there is much variation between individuals, with some experiencing chronic disease early on and dying before age 60, while others being able to reach an exceptional old age, often free of disease until the last few years of life  1. A long and healthy life is determined by many different factors, including lifestyle, environment, genetics, and pure chance. Recent estimates suggest the genetic components of both human lifespan (i.e. the number of years lived) and healthspan (the number of years lived in good health free of morbidities) are only around 10%  2, 3, which makes genetic studies of these traits challenging, as noise tends to obscure effects unless sample sizes are large.\n However, with sufficiently large samples, genome-wide association studies (GWAS) of\u00a0ageing traits have the potential to identify genes and pathways involved in the human ageing process. GWAS have attempted to identify loci and pathways related to healthspan  3, 4, (parental) lifespan  5, 6, 7 and survival to exceptional old age (often called longevity)  8, 9, with some overlap between findings. Multivariate analyses of correlated traits offers the prospect of increased power  10, especially where samples do not overlap, and\u00a0may be able to identify variants influencing a common underlying ageing process.\n Here, we assess the degree of genetic overlap between published GWAS of three different kinds of ageing phenotypes\u2014healthspan, parental lifespan, and longevity (defined as survival to an age above the 90th percentile)\u2014and perform a multivariate meta-analysis to identify genetic variants related to healthy ageing. We subsequently characterise the sex- and age-specific effects of loci which affect all three ageing\u00a0traits and look up reported associations with age-related phenotypes and diseases. Finally, we link the observed signal in these loci to the expression of specific genes, including some that are currently studied in model organisms, and identify pathways involved in healthy ageing.\n We explored three public, European-ancestry GWAS of overlapping ageing traits: healthspan ( N\u2009=\u2009300,477 individuals, 28.3% no longer healthy), parental lifespan ( N\u2009=\u20091,012,240 parents, 60% deceased), and longevity ( N cases\u2009=\u200911,262;  N controls\u2009=\u200925,483). The traits show substantial genetic correlations ( P\u2009&lt;\u20095\u2009\u00d7\u200910 \u20138) despite differences in age demographics, trait definition, and study design. Parental lifespan correlates strongly with both healthspan ( r g\u2009=\u20090.70; SE\u2009=\u20090.04) and longevity ( r g\u2009=\u20090.81; SE\u2009=\u20090.08), while healthspan and longevity show a weaker correlation with each other ( r g\u2009=\u20090.51; SE\u2009=\u20090.09) (Fig.\u00a0 1a). We performed an age-stratified GWAS of parental lifespan in UK Biobank to assess whether the genetic correlations between the traits are age-dependent, but our results showed no clear trend in the correlations between healthspan/longevity and age-stratified\u00a0parental lifespan bands (Fig.\u00a0 1b).\n a Pairwise genetic correlation between human ageing studies.  b Genetic correlations of age-stratified parental lifespan against healthspan and longevity.  c Genetic correlations ( r g) of ageing\u00a0traits with traits related to development, behaviour, and disease. In bold are traits with heterogeneous correlations ( P het\u2009&lt;\u20090.05). Displayed here are 17 traits which have at least one significant (FDR\u2009&lt;\u20095%) genetic correlation with healthspan,\u00a0parental lifespan, or longevity, out of the 27 traits tested. The 17 traits are clustered by Euclidean distance based on their genetic correlation with all tested traits (30 in total). See Supplementary Data\u00a0 1 for a full list of correlations and Supplementary Table\u00a0 1 for the number of SNPs used to calculate each pairwise correlation. Blank squares represent correlations which did not pass multiple testing correction. Note that fewer correlations with longevity will pass this threshold due to the smaller sample size of this GWAS. Error bars represent 95% confidence intervals of the correlation estimates. COPD: chronic obstructive pulmonary disease.\n We next tested whether differences in ageing\u00a0trait genetics could be explained by differences in genetic correlations with 27 other traits (Supplementary Table\u00a0 1). We find all three ageing traits show similar correlations ( P\u2009&lt;\u20090.05/81;  P het\u2009&gt;\u20090.05) with coronary artery disease (range healthspan  r g \u22120.69; SE\u2009=\u20090.07 to parental\u00a0lifespan  r g \u22120.49; SE\u2009=\u20090.10), stroke (range\u00a0parental lifespan  r g\u2009=\u2009\u22120.56; SE\u2009=\u20090.11 to healthspan  r g\u2009=\u2009\u22120.47; SE\u2009=\u20090.06), chronic obstructive pulmonary disease (range healthspan  r g\u2009=\u2009\u22120.45; SE\u2009=\u20090.04 to\u00a0parental lifespan  r g\u2009=\u2009\u22120.26; SE\u2009=\u20090.07), and years of schooling (range longevity  r g\u2009=\u20090.24; SE\u2009=\u20090.04 to healthspan  r g\u2009=\u20090.34; SE\u2009=\u20090.03). However, we also find evidence for differences in correlations across the traits ( P het\u2009&lt;\u20090.05): healthspan correlated more strongly with metabolic traits (such as type 2 diabetes) than the other studies, and showed negative genetic correlations with depression and cancers, especially melanoma ( r g\u2009=\u2009\u22120.25; SE\u2009=\u20090.05), which were not observed in the other datasets. Conversely, parental lifespan correlated uniquely with alcohol intake ( r g\u2009=\u2009\u22120.18; SE\u2009=\u20090.06) and longevity showed a unique correlation with Alzheimer\u2019s disease ( r g\u2009=\u2009\u22120.43; SE\u2009=\u20090.11). (Fig.\u00a0 1c; Supplementary Data\u00a0 1).\n  Given the correlations amongst the traits, a combined MANOVA offers the prospect of increased power. We therefore performed a meta-analysis of GWAS of healthspan, parental lifespan, and longevity, which identified 24 loci at genome-wide significance ( P\u2009&lt;\u20095\u2009\u00d7\u200910 \u22128) (Fig.\u00a0 2; Supplementary Data\u00a0 2; Full summary statistics at  https://doi.org/10.7488/ds/2793). The combined statistics had an LD-score regression intercept of 1.064 (SE 0.009). This suggests limited inflation due to population stratification or relatedness and, in line with some previous studies  11, 12, we did not adjust our statistics for this intercept. The  APOE locus contained the most significant multivariate SNP ( P\u2009&lt;\u20091\u2009\u00d7\u200910 \u2013126), associated with an average increase in\u00a0parental lifespan of 12.7 months per allele (95% CI: 11.4\u201314.0) and an increased odds ratio of reaching longevity of 1.66 (1.56\u20131.77). However, noting that &lt;2% of the healthspan study sample experienced Alzheimer\u2019s disease, the same allele was associated with an average healthspan increase of only around 50 days (2\u201398).\n Manhattan plot showing the nominal strength of association \u2212log 10( P value) (two-sided) on the  y-axis against the chromosomal position of SNPs on the  x-axis, where the null hypothesis is no association with healthspan, parental lifespan, and longevity. The red line represents the genome-wide significance threshold (5\u2009\u00d7\u200910 \u20138). Annotated are the nearest gene(s) to the lead SNP (in red) of each locus. The  y-axis has been capped at 5\u2009\u00d7\u200910 \u221230 to aid legibility; SNPs passing this cap are represented as triangles:  LPA,  P\u2009=\u20093.8\u2009\u00d7\u200910 \u221230,  APOE,  P\u2009=\u20099.6\u2009\u00d7\u200910 \u2212127.\n Twenty one of the 24 multivariate GWAS loci reaching genome-wide significance had directionally consistent effects in the three studied datasets and 18 were nominally significant ( P\u2009&lt;\u20090.05) in two or more datasets (Supplementary Fig.\u00a0 1). A look-up of the lead SNPs and close proxies in the GWAS catalog and PhenoScanner showed that healthspan-specific loci (i.e.  P\u2009&lt;\u20090.05 only in the healthspan dataset) were mostly associated with skin cancers and metabolic traits, while\u00a0parental lifespan-specific loci were associated with smoking and risk taking (Supplementary Data\u00a0 3). Associations with these phenotypes suggests these variants influence (behaviours leading to) environmental exposures and thus likely capture extrinsic ageing processes. As we were primarily interested in genetic variation influencing the intrinsic ageing process, we focused the remainder of this study on genetic variants reaching nominal significance in all three datasets, which are less likely to be associated to study- or population-specific exposures.\n Ten loci reached nominal significance ( P\u2009&lt;\u20090.05) in all three GWAS datasets (Table\u00a0 1). Five of these are of particular interest as they contain no genome-wide significant SNPs in any individual dataset. The lead multivariate SNP of these loci include rs2643826 (nearest gene  SLC4A7), rs17499404 ( LINC02513), rs1159806 ( FOXO3), rs61905747 ( ZW10), and rs12830425 ( FGD6) (Supplementary Figs.\u00a0 2\u2013 6). The lead SNP near  FOXO3 is in moderate linkage disequilibrium (LD) ( r 2\u2009&gt;\u20090.4) with rs2802292, a well-known candidate SNP from longevity studies  13. Given that some of the loci show  P values near the genome-wide significance threshold (i.e.  SLC4A7 and  LINC02513), replication of these loci in large independent cohorts, which were not yet available to us, is warranted.\n   We next tested whether loci of interest displayed varying effects on parental\u00a0lifespan by sex, using sex-specific parental GWAS summary statistics from Timmers et al.  7. We find evidence of sexual dimorphism for the ApoE \u03b54 allele ( \u03b2 fathers\u2009=\u20090.08,  \u03b2 mothers\u2009=\u20090.13,  P diff\u2009=\u20091.5\u2009\u00d7\u200910 \u20136) and evidence of no sexual dimorphism for lead SNPs near  LINC02513,  SLC4A7,  LPA,  TOX3, and  FOXO3 (&lt;20% difference or  P diff\u2009&gt;\u20090.50). For the remaining loci, near  CDKN2B-AS1,  ZW10,  FGD6 and  LDLR, effect size point estimates may differ by more than 20%, but we would need a larger sample size to be able to detect this difference with confidence (Supplementary Fig.\u00a0 7).\n Looking up the same SNPs in our age-stratified parental lifespan GWAS, we find that all loci, except  APOE and  SLC4A7, show a downward trend in effect size with parental age. This trend is significant for the  APOE locus ( P adjusted\u2009=\u20090.01), with the effect size of the \u03b54 allele increasing by 32% (25\u201339%) for every 10-year increase in parental survival. While we are underpowered to confirm the trends for the remaining loci, we find that, collectively, the average effect of the protective alleles of these nine loci decreases by 24% (13\u201334%;  P adjusted\u2009=\u20091\u2009\u00d7\u200910 \u20134) for every 10-year increase in parental survival (Supplementary Fig.\u00a0 8).\n We also found that the\u00a0loci of interest had previously been associated at a genome-wide significant level with several age-related diseases and/or phenotypes. The life-extending allele of the majority of the\u00a0loci is associated with a reduction in cardiovascular disease phenotypes, including SNPs near the ageing loci  SLC4A7,  FGD6, and  LINC02513 discovered in this study. Interestingly, protective variants near  FOXO3 are associated with a reduction in metabolic syndrome, but also with\u00a0a reduction in cognitive ability. Life-extending SNPs near  APOE,  FOXO3 and  FGD6 are all associated with increased measures of macular degeneration (Supplementary Fig.\u00a0 9; Supplementary Data\u00a0 3).\n  Assessing the loci of interest for colocalisation with gene expression quantitative trait loci (eQTL), we find strong evidence (FDR SMR\u2009&lt;\u20095%;  P HEIDI\u2009&gt;\u20091%; see \u201cMethods\u201d) of  cis-acting eQTL colocalisation for eight out of 10 loci. In total, we highlight 27 unique genes acting across 32 tissues, especially whole blood (12 genes) and the tibial nerve (7 genes) (Supplementary Data\u00a0 5). In blood, higher expression levels of  BCL3 and  CKM (near  APOE);  CTC-510F12.2,  ILF3, KANK2 and  PDE4A (near  LDLR);  USP28 and  ANKK1 (near  ZW10); and  CDKN2B are linked to an increase in multivariate ageing traits\u00a0(i.e. improved\u00a0survival), while the opposite is true for  EXOC3L2 (near  APOE),  TTC12 (near  ZW10), and  FOXO3. For the multivariate signal near  SLC4A7 we find colocalisation with expression\u00a0of  NEK10 (liver); for the signal near  LPA we find colocalisation with expression of\u00a0 SLC22A1/A3 (multiple tissues) and  MAP3K4 (pituitary); and for the signal near  FGD6 we find colocalisation with expression of\u00a0 FGD6 itself (adipose/arterial). Including  trans-acting eQTL from blood, while keeping the same thresholds for colocalisation, we additionally discover higher expression levels of  FOXO3B colocalises with the life-extending signal near  FOXO3. When we include genes which could not be tested for heterogeneity ( N eQTL\u2009&lt;\u20093), we identify one additional  cis-acting and 49 additional  trans-acting genes (of which 10 colocalise with the signal near  LINC02513) (Table\u00a0 2; Supplementary Data\u00a0 5).\n  To determine the age-related expression of the identified  cis- and  trans-acting genes, we performed a look-up in the dataset of Peters et al.  14. This large dataset contains the associations of genes with age in whole blood, so we limited ourselves to the  cis- and  trans-acting genes identified in the whole-blood datasets. We found that  FOXO3 expression is increased with age in this dataset, which is in line with the life-extending variant decreasing expression (Supplementary Data\u00a0 6). Moreover, one  cis- ( ILF3) and two  trans-acting genes ( E2F2 and  PDZK1IP1) in the  LDLR locus show a similar effect (i.e. increased or decreased expression with age combined with the life-extending variant decreasing or increasing expression, respectively). The most interesting, however, seems to be the  LINC02513 locus, which showed multiple  trans-acting genes to be strongly downregulated with age, while the lead life-extending variant increases expression.  LEF1,  CCR7, and  ABLIM1 even belong to the most significantly affected genes in the whole transcriptomic dataset. This indicates that this long intergenic non-protein coding RNA may serve as a master regulator of age-related transcription in whole blood.\n Finally, testing the full list of  cis- and  trans-acting genes for gene set enrichment in 50 hallmark and 7350 biological process pathways, we find significant enrichment ( P adjusted\u2009&lt;\u20090.05) in seven hallmark gene sets and 32 biological processes. The hallmark gene sets with the strongest enrichment include haem metabolism, hypoxia, and early oestrogen response (Fig.\u00a0 3). Enriched biological pathways cluster into categories involving apoptotic signalling, chemical homeostasis, and development of erythrocytes and myeloid cells, among others (Supplementary Fig.\u00a0 10; Supplementary Data\u00a0 7).\n N number of genes of interest vs. total number of genes in the gene set for which eQTL are available.  P Nominal  P value of the hypergeometric test for enrichment (against 24,670 background genes).  P bonf Bonferroni-corrected  P value for testing seven hallmark pathways (containing at least three genes). The figure shows individual genes on the  x-axis and hallmark pathways are listed on the  y-axis, matching the order of the table. Squares represent the presence of a gene in the gene set.\n  We hypothesised that the effect of haem metabolism and chemical homeostasis on healthspan,\u00a0parental lifespan, and longevity may be mediated through the bioavailability of iron and investigated this hypothesis using MR of GWAS summary statistics of iron-related traits, i.e., serum iron, log ferritin, and transferrin (percentage saturation and absolute levels), against our GWAS results. In a univariate MR framework, we find evidence of a causal effect for serum iron (FDR\u2009&lt;\u20095%), which appears to be consistent with the MR assumptions and is robust to outliers (Supplementary Fig.\u00a0 11; Supplementary Tables\u00a0 2 and  3). We also find some evidence for an effect of transferrin saturation. However, this association is primarily driven by the well-known hereditary haemochromatosis locus and shows evidence of violating the pleiotropy assumption (i.e. non-zero MR-Egger intercept). We therefore tested all iron traits as exposures simultaneously in a multivariate MR analysis, with our GWAS as the outcome, finding more reliable evidence for causal effects (FDR\u2009&lt;\u20095%;  \u03b2 intercept\u2009=\u20090.0012; 95% CI\u00a0\u22120.0005 to\u00a00.0029) of serum iron, transferrin levels, and transferrin saturation. These effects are not driven by only one of the loci, including the hereditary haemochromatosis locus, as confirmed by leave-one-out analyses (Supplementary Data\u00a0 8). Although the units of the causal effects are consistent across exposures (and pertinent for  P values), they are difficult to interpret. We therefore repeated the procedure for the individual component traits: healthspan,\u00a0parental lifespan, and longevity, recognising the reduction in effective sample size was likely to yield underpowered effect size estimates, although these give a sense of direction and magnitude of the effect in measurable units (Table\u00a0 3). The multivariate MR effect sizes appear larger than those of the univariate MR, likely due to homeostasis, i.e., variation in one exposure is normally buffered by another. For example, oxidative damage from serum iron may largely be prevented when the metal is bound to transferrin.\n Genetic correlations between publicly available healthspan, parental lifespan, and longevity GWAS reveal these traits share 50% or more of their underlying genetics. Performing a multivariate meta-analysis on the GWAS summary statistics, we highlight 24 genomic regions influencing one or more of the traits. Ten regions are of particular interest as they associate with all three ageing traits and are as such likely candidates to capture intrinsic ageing processes, rather than extrinsic sources of ageing. Five of the loci of interest are not associated at a genome-wide significant level in any individual dataset, including the region near  FOXO3, which has thus far only been highlighted in candidate gene association studies (reviewed in Sanese et al.  15) and never at genome-wide significance. The effects of loci of interest on male and female lifespan are largely the same, although their effect on survival may be slightly stronger in middle age (40\u201360\u00a0years) compared to old age (&gt;80\u00a0years). The ApoE \u03b54 allele is exceptional in this regard, as its effect is stronger in females and increases with age, likely due to its well-known link to Alzheimer\u2019s disease  16. We find these loci of interest colocalise with the expression of 28  cis-genes and 50  trans-genes, some of which are known to become differentially expressed with increasing age. Lastly, we find these genes are enriched for seven hallmark gene sets (particularly haem metabolism) and 32 largely overlapping biological pathways (including apoptosis and homeostasis), and in line with the highlighted pathways, we find a causal role for iron levels in healthy life in a MR framework.\n Interpretation of MR results should be treated with some caution and transparency of the applied method as well as a sensitivity analysis are necessary  17. In summary, we used an inverse-variance weighted approach in a two-sample MR setting using independent GWAS summary statistics to provide corroboration for the haem metabolism fi\n......", "posttime": "2020-07-20 05:13:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7814\u7a76,iron,\u57fa\u56e0", "title": "\u5bf9100\u591a\u4e07\u4eba\u7684\u7814\u7a76\u53d1\u73b0\u5bff\u547d\u4e0e\u8840\u94c1\u6c34\u5e73\u6709\u5173", "title_en": "Study of over 1m people finds association between lifespan and blood iron levels", "transed": 1, "url": "https://www.nature.com/articles/s41467-020-17312-3", "via": "", "real_tags": ["\u7814\u7a76", "iron", "\u57fa\u56e0"]}, {"category": "", "categoryclass": "", "imagename": "454c451c3250c46a87dc959bbf761ae5.gif", "infoid": 1012932, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Caption Health\u662f\u4e00\u5bb6\u4e3a\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u5f00\u53d1\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6\u7684\u516c\u53f8\uff0c\u8be5\u516c\u53f8\u901a\u8fc7B\u80a1\u53d1\u884c\u7b79\u96c6\u4e865300\u4e07\u7f8e\u5143\u3002\nCaption Health\u5e0c\u671b\u4f7f\u7528\u5176\u8f6f\u4ef6\u4e3a\u6bcf\u4e00\u4f4d\u60a3\u8005\u68c0\u67e5\u63d0\u4f9b\u4e13\u4e1a\u8bca\u65ad\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5b57\u5e55\u4eba\u5de5\u667a\u80fd\u8ba9\u6ca1\u6709\u63a5\u53d7\u8fc7\u4e13\u95e8\u57f9\u8bad\u7684\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u8fdb\u884c\u8d85\u58f0\u6ce2\u68c0\u67e5\uff0c\u5e76\u83b7\u5f97\u8bca\u65ad\u8d28\u91cf\u7684\u56fe\u50cf\u3002\n\u6839\u636e\u8be5\u516c\u53f8\u7f51\u7ad9\u7684\u8bf4\u6cd5\uff0c\u6807\u9898AI\u80cc\u540e\u7684\u60f3\u6cd5\u662f\uff0c\u8d85\u58f0\u6ce2\u5bf9\u4e8e\u8bca\u65ad\u5fc3\u810f\u529f\u80fd\u5f88\u91cd\u8981\uff0c\u4f46\u9700\u8981\u5177\u6709\u201c\u4e13\u5bb6\u773c\u5149\u201d\u7684\u536b\u751f\u4fdd\u5065\u4e13\u4e1a\u4eba\u5458\u624d\u80fd\u8fdb\u884c\u3002\u5b57\u5e55AI\u4e3a\u8d85\u58f0\u6ce2\u63d0\u4f9b\u6307\u5bfc\uff0c\u5e76\u6355\u6349\u6700\u597d\u7684\u56fe\u50cf\uff0c\u4f7f\u66f4\u591a\u7684\u60a3\u8005\u80fd\u591f\u63a5\u89e6\u5230\u8fd9\u4e9b\u56fe\u50cf\u3002\n\u6839\u636e\u8be5\u516c\u53f8\u7684\u4e00\u4efd\u58f0\u660e\uff0c\u65b0\u7684\u8d44\u91d1\u5c06\u7528\u4e8e\u6539\u5584\u8be5\u516c\u53f8\u7684\u4eba\u5de5\u667a\u80fd\u5e73\u53f0\uff0c\u5efa\u7acb\u65b0\u7684\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\uff0c\u5e76\u6269\u5927\u5176\u5546\u4e1a\u8fd0\u8425\u3002\nCaption Health\u9996\u5e2d\u6267\u884c\u5b98Charles Cadieu\u5728\u58f0\u660e\u4e2d\u8bf4\uff1a\u201c\u8fd9\u7b14\u8d44\u91d1\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u6269\u5927\u4e0e\u9886\u5148\u7684\u7814\u7a76\u673a\u6784\u3001\u5730\u533a\u536b\u751f\u7cfb\u7edf\u548c\u5176\u4ed6\u63d0\u4f9b\u5546\u7684\u5408\u4f5c\uff0c\u65b9\u6cd5\u662f\u5728\u9700\u8981\u7684\u65f6\u5019\u968f\u65f6\u968f\u5730\u63d0\u4f9b\u8d85\u58f0\u6ce2-\u8de8\u90e8\u95e8\uff0c\u533b\u9662\u5185\u5916\uff0c\u201dCaption Health\u9996\u5e2d\u6267\u884c\u5b98\u67e5\u5c14\u65af\u00b7\u5361\u8fea\u6b27(Charles Cadieu)\u5728\u58f0\u660e\u4e2d\u8bf4\u3002\u4f5c\u4e3a\u4e16\u754c\u4e0a\u7b2c\u4e00\u9879\u4e5f\u662f\u552f\u4e00\u4e00\u9879\u4eba\u5de5\u667a\u80fd\u5f15\u5bfc\u7684\u8d85\u58f0\u6ce2\u6280\u672f\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u4f7f\u6240\u6709\u4e34\u5e8a\u533b\u751f-\u65e0\u8bba\u4ee5\u524d\u7684\u7ecf\u9a8c\u5982\u4f55-\u90fd\u80fd\u6355\u83b7\u8bca\u65ad\u8d28\u91cf\u7684\u8d85\u58f0\u6ce2\u3002\u201c\u3002\nB\u8f6e\u7531DCVC\u7275\u5934\u3002\u73b0\u6709\u6295\u8d44\u8005Khosla Ventures\u4e5f\u53c2\u4e0e\u5176\u4e2d\uff0c\u65b0\u6295\u8d44\u8005Atlantic Bridge\u548cEdwards Lifesciences\u4e5f\u53c2\u4e0e\u5176\u4e2d\u3002\n\u6839\u636eCaption Health\u7684\u7f51\u7ad9\uff0c\u8be5\u516c\u53f8\u7684\u5408\u4f5c\u4f19\u4f34\u5305\u62ec\u897f\u5317\u533b\u5b66\u516c\u53f8\u3001Alina Health\u516c\u53f8\u3001\u660e\u5c3c\u963f\u6ce2\u5229\u65af\u5fc3\u810f\u7814\u7a76\u6240\u548c\u7231\u5fb7\u534e\u5179\u516c\u53f8\u3002", "note_en": "Caption Health, a company that develops artificial intelligence software for health care providers, has raised $53 million in a Series B.\n Caption Health wants to use its software to make specialty diagnostics accessible for every patient exam. Specifically, Caption AI lets health care providers who don\u2019t have specialized training perform ultrasounds and get diagnostic-quality images.\n  The idea behind Caption AI is that ultrasounds are important for diagnosing cardiac function, but require health care professionals with an \u201cexpert eye\u201d to perform them, per the company\u2019s website. Caption AI provides guidance for ultrasounds and captures the best images, making them accessible to more patients.\n The new funding will be used to improve the company\u2019s AI platform, create new partnerships and grow its commercial operations, according to a statement from the company.\n \u201cThis capital will enable us to scale our collaborations with leading research institutions, regional health systems and other providers by making ultrasound available where and when it is needed\u2014across departments, inside and outside the hospital,\u201d Caption Health CEO Charles Cadieu said in statement. \u201cAs the world\u2019s first and only AI-guided ultrasound technology, our goal is to enable all clinicians\u2013regardless of prior experience\u2014to capture diagnostic-quality ultrasounds.\u201d\n The Series B round was led by  DCVC. Existing investor  Khosla Ventures also participated, as did new investors  Atlantic Bridge and  Edwards Lifesciences.\n The company counts Northwestern Medicine, Alina Health, the Minneapolis Heart Institute, and Edwards among its partners, according to Caption Health\u2019s website.", "posttime": "2020-07-20 04:50:51", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4eba\u5de5\u667a\u80fd,\u8bca\u65ad,health", "title": "\u63cf\u8ff0\uff1aHealth\u4e3a\u5176\u4eba\u5de5\u667a\u80fd\u5f15\u5bfc\u7684\u6280\u672f\u7cfb\u5217\u7b79\u96c6\u4e865300\u4e07\u7f8e\u5143\uff0c\u8be5\u6280\u672f\u5141\u8bb8\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u5728\u6ca1\u6709\u4e13\u95e8\u57f9\u8bad\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8bca\u65ad\u6027\u8d28\u91cf\u7684\u8d85\u58f0\u626b\u63cf", "title_en": "Caption Health raises $53M Series B for its AI-guided tech that lets health care providers take diagnostic-quality ultrasound scans without specialized training", "transed": 1, "url": "https://news.crunchbase.com/news/caption-health-raises-53m-series-b/", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u8bca\u65ad", "health"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1012930, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u5230\u5bfc\u822a\u8df3\u8dc3\u6765\u641c\u7d22\u73bb\u5c14-\u8303\u52d2\u6587\u5b9a\u7406\u6307\u51fa\uff0c\u5f53\u7edf\u8ba1\u529b\u5b66\u548c\u7ecf\u5178\u529b\u5b66\u4e00\u81f4\u5e94\u7528\u65f6\uff0c\u78c1\u5316\u5f3a\u5ea6\u7684\u70ed\u5e73\u5747\u603b\u662f\u4e3a\u96f6\u3002[1]\u8fd9\u4f7f\u5f97\u56fa\u4f53\u4e2d\u7684\u78c1\u6027\u53ea\u662f\u4e00\u79cd\u91cf\u5b50\u529b\u5b66\u6548\u5e94\uff0c\u8fd9\u610f\u5473\u7740\u7ecf\u5178\u7269\u7406\u4e0d\u80fd\u89e3\u91ca\u6297\u78c1\u6027\u3002\n\u4eca\u5929\u6240\u8bf4\u7684\u73bb\u5c14-\u8303\u5217\u6587\u5b9a\u7406\u662f\u5c3c\u5c14\u65af\u00b7\u73bb\u5c141911\u5e74\u5728\u4ed6\u7684\u535a\u58eb\u8bba\u6587[2]\u4e2d\u53d1\u73b0\u7684\uff0c\u540e\u6765\u4ea8\u5fb7\u91cc\u5361\u00b7\u7ea6\u7ff0\u5a1c\u00b7\u8303\u00b7\u5217\u6587\u57281919\u5e74\u7684\u535a\u58eb\u8bba\u6587\u4e2d\u91cd\u65b0\u53d1\u73b0\u4e86\u8fd9\u4e00\u5b9a\u7406\u3002[3]1932\u5e74\uff0c\u8303\u00b7\u5f17\u83b1\u514b\u5728\u4ed6\u5199\u7684\u4e00\u672c\u5173\u4e8e\u7535\u78c1\u5316\u7387\u7684\u4e66\u4e2d\u5bf9\u73bb\u5c14\u7684\u521d\u59cb\u5b9a\u7406\u8fdb\u884c\u4e86\u5f62\u5f0f\u5316\u548c\u6269\u5c55\u3002[4]\u3002\n\u8fd9\u4e00\u53d1\u73b0\u7684\u610f\u4e49\u5728\u4e8e\uff0c\u7ecf\u5178\u7269\u7406\u4e0d\u8003\u8651\u987a\u78c1\u3001\u6297\u78c1\u548c\u94c1\u78c1\u7b49\u73b0\u8c61\uff0c\u56e0\u6b64\u9700\u8981\u91cf\u5b50\u7269\u7406\u6765\u89e3\u91ca\u78c1\u4e8b\u4ef6\u3002[5]\u8fd9\u4e00\u7ed3\u679c\uff0c\u4e5f\u8bb8\u662f\u6709\u53f2\u4ee5\u6765\u6700\u5177\u901a\u8d27\u7d27\u7f29\u8272\u5f69\u7684\u51fa\u7248\u7269\uff0c[6]\u53ef\u80fd\u5bf9\u73bb\u5c14\u57281913\u5e74\u53d1\u5c55\u51fa\u51c6\u7ecf\u5178\u6c22\u539f\u5b50\u7406\u8bba\u505a\u51fa\u4e86\u8d21\u732e\u3002\n\u73bb\u5c14-\u8303\u5217\u6587\u5b9a\u7406\u9002\u7528\u4e8e\u4e0d\u80fd\u65cb\u8f6c\u7684\u5b64\u7acb\u7cfb\u7edf\u3002\u5982\u679c\u5141\u8bb8\u5b64\u7acb\u7cfb\u7edf\u5728\u5916\u52a0\u78c1\u573a\u7684\u4f5c\u7528\u4e0b\u65cb\u8f6c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b9a\u7406\u5c31\u4e0d\u9002\u7528\u4e86\u3002[7]\u6b64\u5916\uff0c\u5982\u679c\u5728\u7ed9\u5b9a\u7684\u6e29\u5ea6\u548c\u573a\u4e2d\u53ea\u6709\u4e00\u79cd\u70ed\u5e73\u8861\u72b6\u6001\uff0c\u5e76\u4e14\u5728\u65bd\u52a0\u78c1\u573a\u4e4b\u540e\u5141\u8bb8\u7cfb\u7edf\u6062\u590d\u5e73\u8861\uff0c\u5219\u4e0d\u4f1a\u6709\u78c1\u5316\u3002\n\u901a\u8fc7\u9ea6\u514b\u65af\u97e6-\u73bb\u5c14\u5179\u66fc\u7edf\u8ba1\u9884\u6d4b\u7cfb\u7edf\u5c06\u5904\u4e8e\u7ed9\u5b9a\u8fd0\u52a8\u72b6\u6001\u7684\u6982\u7387\u4e0e\u2061(\u2212U/k BT){\\DisplayStyle\\EXP(-U/k_{\\TEXT{B}\u6210\u6b63\u6bd4\uff0c\u5176\u4e2dU{\\DisplayStyle U}\u662f\u7cfb\u7edf\u7684\u80fd\u91cf\uff0ck B{\\DisplayStyle K_{\\TEXT{B}}\u662f\u73bb\u5c14\u5179\u66fc\u5e38\u6570\uff0cT{\\DisplayStyle T}\u662f\u7edd\u5bf9\u6e29\u5ea6\u3002\u6b64\u80fd\u91cf\u7b49\u4e8e\u8d28\u91cf\u4e3am{\\displaystyle m}\u3001\u901f\u5ea6\u4e3av{\\displaystyle v}\u7684\u7c92\u5b50\u7684\u52a8\u80fd(mv2/2){\\displaystyle(mv^{2}/2)}\u548c\u52bf\u80fd\u3002[7]\u3002\n\u78c1\u573a\u5bf9\u52bf\u80fd\u6ca1\u6709\u8d21\u732e\u3002\u5177\u6709\u7535\u8377q{\\displaystyle q}\u548c\u901f\u5ea6v{\\displaystyle\\mathbf{v}}\u7684\u7c92\u5b50\u4e0a\u7684\u6d1b\u4ed1\u5179\u529b\u4e3a\u3002\nF=q(E+v\u00d7B)\uff0c{\\displaystyle\\mathbf{F}=q\\Left(\\mathbf{E}+\\mathbf{v}\\Times\\mathbf{B}\\right)\uff0c}\u3002\n\u5176\u4e2dE{\\displaystyle\\mathbf{E}}\u662f\u7535\u573a\uff0cB{\\displaystyle\\mathbf{B}}\u662f\u78c1\u901a\u5bc6\u5ea6\u3002\u5b8c\u6210\u529f\u7684\u901f\u7387\u662fF_\u22c5_v=Q_E_\u22c5_v{\\DisplayStyle\\Mathbf{F}\\cdot\\mathbf{v}=q\\mathbf{E}\\cdot\\mathbf{v}}\uff0c\u5e76\u4e14\u4e0d\u4f9d\u8d56\u4e8eB{\\displaystyle\\mathbf{B}}\u3002\u56e0\u6b64\uff0c\u80fd\u91cf\u4e0d\u4f9d\u8d56\u4e8e\u78c1\u573a\uff0c\u56e0\u6b64\u8fd0\u52a8\u7684\u5206\u5e03\u4e5f\u4e0d\u4f9d\u8d56\u4e8e\u78c1\u573a\u3002[7]\n\u5728\u96f6\u573a\u4e2d\uff0c\u7531\u4e8e\u7cfb\u7edf\u4e0d\u80fd\u65cb\u8f6c\uff0c\u5e26\u7535\u7c92\u5b50\u4e0d\u4f1a\u6709\u51c0\u8fd0\u52a8\u3002\u56e0\u6b64\uff0c\u5e73\u5747\u78c1\u77e9\u5c06\u4e3a\u96f6\u3002\u7531\u4e8e\u8fd0\u52a8\u7684\u5206\u5e03\u4e0d\u4f9d\u8d56\u4e8e\u78c1\u573a\uff0c\u6240\u4ee5\u70ed\u5e73\u8861\u529b\u77e9\u5728\u4efb\u4f55\u78c1\u573a\u4e2d\u90fd\u4fdd\u6301\u4e3a\u96f6\u3002[7]\u3002\n\u4e3a\u4e86\u964d\u4f4e\u8bc1\u660e\u7684\u590d\u6742\u6027\uff0c\u5c06\u91c7\u7528N{\\\u663e\u793a\u98ce\u683cN}\u4e2a\u7535\u5b50\u7684\u7cfb\u7edf\u3002\n\u8fd9\u662f\u6070\u5f53\u7684\uff0c\u56e0\u4e3a\u56fa\u4f53\u4e2d\u7684\u5927\u90e8\u5206\u78c1\u6027\u662f\u7531\u7535\u5b50\u643a\u5e26\u7684\uff0c\u800c\u4e14\u8bc1\u660e\u5f88\u5bb9\u6613\u63a8\u5e7f\u5230\u4e00\u79cd\u4ee5\u4e0a\u7684\u5e26\u7535\u7c92\u5b50\u3002\n\u6bcf\u4e2a\u7535\u5b50\u90fd\u6709\u4e00\u4e2a\u8d1f\u7535\u8377e{\\displaystyle e}\u548c\u8d28\u91cfme{\\displaystyle m_{\\text{e}\u3002\n\u5982\u679c\u5b83\u7684\u4f4d\u7f6e\u662fr{\\displaystyle\\mathbf{r}}\uff0c\u901f\u5ea6\u662fv{\\displaystyle\\mathbf{v}}\uff0c\u5219\u5b83\u4ea7\u751f\u7535\u6d41j=ev{\\displaystyle\\mathbf{j}=e\\mathbf{v}}\u548c\u78c1\u77e9[5]\u3002\n\u03bc=1 2cr\u00d7j=e2cr\u00d7v.\u3002{\\displaystyle\\mathbf{\\mu}={\\frac{1}{2c}}\\mathbf{r}\\Times\\mathbf{j}={\\frac{e}{2c}}\\mathbf{r}\\Times\\mathbf{v}\u3002}\u3002\n\u4e0a\u8ff0\u65b9\u7a0b\u8868\u660e\uff0c\u78c1\u77e9\u662f\u901f\u5ea6\u5750\u6807\u7684\u7ebf\u6027\u51fd\u6570\uff0c\u56e0\u6b64\u7ed9\u5b9a\u65b9\u5411\u7684\u603b\u78c1\u77e9\u4e00\u5b9a\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u7ebf\u6027\u51fd\u6570\u3002\n\u03bc=\u2211i=1 N a i\u22c5r\u00b7i\uff0c{\\DisplayStyle\\\u00b5=\\SUM_{i=1}^{N}\\mathbf{a}_{i}\\cdot{\\dot{\\mathbf{r}_{i}\uff0c}\n\u5176\u4e2d\uff0c\u70b9\u8868\u793a\u65f6\u95f4\u5bfc\u6570\uff0ci{\\displaystyle\\mathbf{a}_{i}}\u662f\u53d6\u51b3\u4e8e\u4f4d\u7f6e\u5750\u6807{ri\uff0ci=1\u2026}\u7684\u77e2\u91cf\u7cfb\u6570\u3002N}{\\displaystyle\\{\\mathbf{r}_{i}\uff0ci=1\\ldots N\\}}\u3002[5]\u3002\nMaxwell-Boltzmann\u7edf\u8ba1\u7ed9\u51fa\u7b2cn\u4e2a\u7c92\u5b50\u5177\u6709\u52a8\u91cfpn{\\displaystyle\\mathbf{p}_{n}}\u548c\u5750\u6807rn{\\displaystyle\\mathbf{r}_{n}}\u7684\u6982\u7387\u4e3a\u3002\nD P\u221dEXP\u2061[\u2212H(p 1\uff0c\u2026\u3002\uff0cp N\uff1br 1\uff0c\u2026\u3002\uff0cr N)k B T]d p 1\uff0c\u2026\u3002\uff0cd p N d r 1\uff0c\u2026\u3002\uff0cd r N\uff0c{\\displaystyle DP\\proto\\exp{\\left[-{\\frac{{\\mathcal{H}}(\\mathbf{p}_{1}\uff0c\\ldots\uff0c\\mathbf{p}_{N}\uff1b\\mathbf{r}_{1}\uff0c\\ldots\uff0c\\mathbf{r}_{N})}{k_{\\text{B}}T}}\\right]}d\\mathbf{p}_{1}\uff0c\\ldot\uff0cd\\mathbf{p}_{N}d\\mathbf{r}_{1}\uff0c\\ldots\uff0cd\\mathbf{r}_{N}\uff0c}\u3002\n\u4efb\u610f\u51fd\u6570f(p1\uff0c\u2026)\u7684\u70ed\u5e73\u5747\u3002\uff0cp N\uff1br 1\uff0c\u2026\u3002\uff0cr N){\\displaystyle f(\\mathbf{p}_{1}\uff0c\\ldots\uff0c\\mathbf{p}_{N}\uff1b\\mathbf{r}_{1}\uff0c\\ldots\uff0c\\mathbf{r}_{N})}\u3002\n\u27e8f\u27e9=\u222bf d P\u222bd P.\u3002{\\displaystyle\\langle f\\rangle={\\frac{\\int fdp}{\\int dp}}\u3002}\u3002\nH=1 2m e\u2211i=1N(p i\u2212e c A i)2+e\u03d5(Q)\uff0c{\\displaystyle{\\mathcal{H}}={\\frac{1}{2m_{\\text{e}\\sum_{i=1}^{N}\\Left(\\mathbf{p}_{i}-{\\frac{e}{c}}\\mathbf{A}_{i}\\right)^{2}+e\\phi(\\mathbf{q})\uff0c}\u3002\n\u5176\u4e2dAi{\\displaystyle\\mathbf{A}_{i}}\u662f\u78c1\u77e2\u91cf\u52bf\uff0c\u03d5(Q){\\displaystyle\\\u03c6(\\mathbf{q})}\u662f\u7535\u6807\u91cf\u52bf\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7c92\u5b50\uff0c\u52a8\u91cfpi{\\displaystyle\\mathbf{p}_{i}}\u548c\u4f4d\u7f6eri{\\displaystyle\\mathbf{r}_{i}}\u7684\u5206\u91cf\u7531\u54c8\u5bc6\u987f\u529b\u5b66\u65b9\u7a0b\u8054\u7cfb\u8d77\u6765\uff1a\nP\u00b7i=\u2212\u2202H/\u2202r r\u00b7i=\u2202H/\u2202p i\u3002{\\displaystyle{\\BEGIN{ALIGNED}{\\dot{\\mathbf{p}_{i}&amp\uff1b=-\\Partial{\\mathcal{H}}/\\Partial\\mathbf{r}_{i}\\\\{\\dot{\\mathbf{r}_{i}&amp\uff1b=\\Partial{\\mathcal{H}}/\\Partial\\mathbf{p}_{i}\n\u8303\u5f17\u83b1\u514b\uff0cJ.H.(1932)\u3002\u7535\u6781\u5316\u7387\u548c\u78c1\u6781\u5316\u7387\u7406\u8bba\u3002\u514b\u62c9\u4f26\u767b\u51fa\u7248\u793e\u3002ISBN\u7535\u8bdd\uff1a0-19-851243-0\u3002\n\u8303\u5f17\u83b1\u514b\uff0cJ.H.(1992)\u3002\u91cf\u5b50\u529b\u5b66\uff1a\u7406\u89e3\u78c1\u5b66\u7684\u5173\u952e(\u8bfa\u8d1d\u5c14\u6f14\u8bb2\uff0c1977\u5e7412\u67088\u65e5)\u3002\u5728Lundqvist\u4e2d\uff0cStig(\u7f16\u8f91)\u30021971\u5e74\u81f31980\u5e74\u8bfa\u8d1d\u5c14\u7269\u7406\u5b66\u8bb2\u5ea7\u3002\u4e16\u754c\u79d1\u5b66\u5956\u3002ISBN\u7535\u8bdd\uff1a981-02-0726-3\u3002", "note_en": "Jump to navigation  Jump to search  The  Bohr\u2013van Leeuwen theorem states that when  statistical mechanics and  classical mechanics are applied consistently, the  thermal average of the  magnetization is always zero.  [1] This makes magnetism in solids solely a  quantum mechanical effect and means that classical physics cannot account for  diamagnetism.\n   What is today known as the Bohr\u2013van Leeuwen theorem was discovered by  Niels Bohr in 1911 in his doctoral dissertation  [2] and was later rediscovered by  Hendrika Johanna van Leeuwen in her doctoral thesis in 1919.  [3] In 1932,  van Vleck formalized and expanded upon Bohr&#39;s initial theorem in a book he wrote on electric and magnetic susceptibilities.  [4]\n The significance of this discovery is that classical physics does not allow for such things as  paramagnetism,  diamagnetism and  ferromagnetism and thus  quantum physics are needed to explain the magnetic events.  [5] This result, &#34;perhaps the most deflationary publication of all time,&#34;  [6] may have contributed to Bohr&#39;s development of a quasi-classical  theory of the hydrogen atom in 1913.\n    The Bohr\u2013van Leeuwen theorem applies to an isolated system that cannot rotate. If the isolated system is allowed to rotate in response to an externally applied magnetic field, then this theorem does not apply.  [7] If, in addition, there is only one state of  thermal equilibrium in a given temperature and field, and the system is allowed time to return to equilibrium after a field is applied, then there will be no magnetization.\n The probability that the system will be in a given state of motion is predicted by  Maxwell\u2013Boltzmann statistics to be proportional to            exp  \u2061  (  \u2212  U    /     k    B    T  )    {\\displaystyle \\exp(-U/k_{\\text{B}}T)}  , where            U    {\\displaystyle U}   is the energy of the system,              k    B      {\\displaystyle k_{\\text{B}}}   is the  Boltzmann constant, and            T    {\\displaystyle T}   is the  absolute temperature. This energy is equal to the  kinetic energy            (  m    v    2      /   2  )    {\\displaystyle (mv^{2}/2)}   for a particle with mass            m    {\\displaystyle m}   and speed            v    {\\displaystyle v}   and the  potential energy.  [7]\n The magnetic field does not contribute to the potential energy. The  Lorentz force on a particle with  charge            q    {\\displaystyle q}   and  velocity              v     {\\displaystyle \\mathbf {v} }   is\n F   =  q    (      E   +    v   \u00d7    B    )   ,    {\\displaystyle \\mathbf {F} =q\\left(\\mathbf {E} +\\mathbf {v} \\times \\mathbf {B} \\right),}\n where              E     {\\displaystyle \\mathbf {E} }   is the  electric field and              B     {\\displaystyle \\mathbf {B} }   is the  magnetic flux density. The rate of  work done is              F   \u22c5    v   =  q    E   \u22c5    v     {\\displaystyle \\mathbf {F} \\cdot \\mathbf {v} =q\\mathbf {E} \\cdot \\mathbf {v} }   and does not depend on              B     {\\displaystyle \\mathbf {B} }  . Therefore, the energy does not depend on the magnetic field, so the distribution of motions does not depend on the magnetic field.  [7]\n In zero field, there will be no net motion of charged particles because the system is not able to rotate. There will therefore be an average magnetic moment of zero. Since the distribution of motions does not depend on the magnetic field, the moment in thermal equilibrium remains zero in any magnetic field.  [7]\n  So as to lower the complexity of the proof, a system with            N    {\\displaystyle N}   electrons will be used.\n This is appropriate, since most of the magnetism in a solid is carried by electrons, and the proof is easily generalized to more than one type of charged particle.\n Each electron has a negative charge            e    {\\displaystyle e}   and mass              m    e      {\\displaystyle m_{\\text{e}}}  .\n If its position is              r     {\\displaystyle \\mathbf {r} }   and velocity is              v     {\\displaystyle \\mathbf {v} }  , it produces a  current              j   =  e    v     {\\displaystyle \\mathbf {j} =e\\mathbf {v} }   and a  magnetic moment  [5]\n \u03bc   =      1    2  c       r   \u00d7    j   =      e    2  c       r   \u00d7    v   .    {\\displaystyle \\mathbf {\\mu } ={\\frac {1}{2c}}\\mathbf {r} \\times \\mathbf {j} ={\\frac {e}{2c}}\\mathbf {r} \\times \\mathbf {v} .}\n The above equation shows that the magnetic moment is a linear function of the velocity coordinates, so the total magnetic moment in a given direction must be a linear function of the form\n \u03bc  =    \u2211    i  =  1     N        a     i    \u22c5            r   \u02d9       i    ,    {\\displaystyle \\mu =\\sum _{i=1}^{N}\\mathbf {a} _{i}\\cdot {\\dot {\\mathbf {r} }}_{i},}\n where the dot represents a time derivative and                a     i      {\\displaystyle \\mathbf {a} _{i}}   are vector coefficients depending on the position coordinates            {      r     i    ,  i  =  1  \u2026  N  }    {\\displaystyle \\{\\mathbf {r} _{i},i=1\\ldots N\\}}  .  [5]\n Maxwell\u2013Boltzmann statistics gives the probability that the nth particle has momentum                p     n      {\\displaystyle \\mathbf {p} _{n}}   and coordinate                r     n      {\\displaystyle \\mathbf {r} _{n}}   as\n d  P  \u221d  exp  \u2061      [    \u2212            H    (      p     1    ,  \u2026  ,      p     N    ;      r     1    ,  \u2026  ,      r     N    )       k    B    T      ]    d      p     1    ,  \u2026  ,  d      p     N    d      r     1    ,  \u2026  ,  d      r     N    ,    {\\displaystyle dP\\propto \\exp {\\left[-{\\frac {{\\mathcal {H}}(\\mathbf {p} _{1},\\ldots ,\\mathbf {p} _{N};\\mathbf {r} _{1},\\ldots ,\\mathbf {r} _{N})}{k_{\\text{B}}T}}\\right]}d\\mathbf {p} _{1},\\ldots ,d\\mathbf {p} _{N}d\\mathbf {r} _{1},\\ldots ,d\\mathbf {r} _{N},}\n  The thermal average of any function            f  (      p     1    ,  \u2026  ,      p     N    ;      r     1    ,  \u2026  ,      r     N    )    {\\displaystyle f(\\mathbf {p} _{1},\\ldots ,\\mathbf {p} _{N};\\mathbf {r} _{1},\\ldots ,\\mathbf {r} _{N})}   of these  generalized coordinates is then\n \u27e8  f  \u27e9  =        \u222b  f  d  P     \u222b  d  P     .    {\\displaystyle \\langle f\\rangle ={\\frac {\\int fdP}{\\int dP}}.}\n  H    =      1    2    m    e         \u2211    i  =  1     N        (        p     i    \u2212      e  c        A     i     )     2    +  e  \u03d5  (    q   )  ,    {\\displaystyle {\\mathcal {H}}={\\frac {1}{2m_{\\text{e}}}}\\sum _{i=1}^{N}\\left(\\mathbf {p} _{i}-{\\frac {e}{c}}\\mathbf {A} _{i}\\right)^{2}+e\\phi (\\mathbf {q} ),}\n where                A     i      {\\displaystyle \\mathbf {A} _{i}}   is the  magnetic vector potential and            \u03d5  (    q   )    {\\displaystyle \\phi (\\mathbf {q} )}   is the  electric scalar potential. For each particle the components of the momentum                p     i      {\\displaystyle \\mathbf {p} _{i}}   and position                r     i      {\\displaystyle \\mathbf {r} _{i}}   are related by the equations of  Hamiltonian mechanics:\n p   \u02d9       i         =  \u2212  \u2202      H      /   \u2202      r     i                    r   \u02d9       i         =  \u2202      H      /   \u2202      p     i    .        {\\displaystyle {\\begin{aligned}{\\dot {\\mathbf {p} }}_{i}&amp;=-\\partial {\\mathcal {H}}/\\partial \\mathbf {r} _{i}\\\\{\\dot {\\mathbf {r} }}_{i}&amp;=\\partial {\\mathcal {H}}/\\partial \\mathbf {p} _{i}.\\end{aligned}}}\n  r   \u02d9       i    \u221d      p     i    ,    {\\displaystyle {\\dot {\\mathbf {r} }}_{i}\\propto \\mathbf {p} _{i},}\n so the moment            \u03bc    {\\displaystyle \\mu }   is a linear function of the momenta                p     i      {\\displaystyle \\mathbf {p} _{i}}  .  [5]\n  \u27e8  \u03bc  \u27e9  =        \u222b  \u03bc  d  P     \u222b  d  P     ,    {\\displaystyle \\langle \\mu \\rangle ={\\frac {\\int \\mu dP}{\\int dP}},}\n       The Bohr\u2013van Leeuwen theorem is useful in several applications including  plasma physics, &#34;All these references base their discussion of the Bohr\u2013van Leeuwen theorem on Niels Bohr&#39;s physical model, in which perfectly reflecting walls are necessary to provide the currents that cancel the net contribution from the interior of an element of plasma, and result in zero net diamagnetism for the plasma element.&#34;  [8]\n Diamagnetism of a purely classical nature occurs in plasmas but is a consequence of thermal disequilibrium, such as a gradient in plasma density.  Electromechanics and  electrical engineering also see practical benefit from the Bohr\u2013van Leeuwen theorem.\n    ^   John Hasbrouck van Vleck stated the Bohr\u2013van Leeuwen theorem as &#34;At any finite temperature, and in all finite applied electrical or magnetical fields, the net magnetization of a collection of electrons in thermal equilibrium vanishes identically.&#34; (van Vleck, 1932)\n ^   Bohr, Niehls (1972) [originally published as &#34;Studier over Metallernes Elektrontheori&#34;, K\u00f8benhavns Universitet (1911)]. &#34;The Doctor&#39;s Dissertation (Text and Translation)&#34;. In Rosenfeld, L.; Nielsen, J. Rud (eds.).  Early Works (1905-1911). Niels Bohr Collected Works.  1.  Elsevier. pp.\u00a0163, 165\u2013393.  doi: 10.1016/S1876-0503(08)70015-X.  ISBN\u00a0  978-0-7204-1801-9.\n ^   van Leeuwen, Hendrika Johanna (1921).  &#34;Probl\u00e8mes de la th\u00e9orie \u00e9lectronique du magn\u00e9tisme&#34;.   Journal de Physique et le Radium.  2 (12): 361\u2013377.\n ^   van Vleck, J. H. (1932).  The theory of electric and magnetic susceptibilities.  Clarendon Press.  ISBN\u00a0  0-19-851243-0.\n  ^    van Vleck, J. H. (1992). &#34;Quantum mechanics: The key to understanding magnetism (Nobel lecture, 8 December 1977)&#34;. In Lundqvist, Stig (ed.).   Nobel Lectures in Physics 1971-1980.  World Scientific.  ISBN\u00a0  981-02-0726-3.", "posttime": "2020-07-20 04:06:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u78c1\u4f53,exist,displaystyle", "title": "\u78c1\u4f53\u5728\u7ecf\u5178\u529b\u5b66\u4e0b\u662f\u4e0d\u53ef\u80fd\u5b58\u5728\u7684\u3002", "title_en": "Magnets cannot exist under classical mechanics", "transed": 1, "url": "https://en.wikipedia.org/wiki/Bohr%E2%80%93van_Leeuwen_theorem", "via": "", "real_tags": ["\u78c1\u4f53", "exist"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1012929, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "1998\u5e74\uff0c\u4e07\u7ef4\u7f51\u7684\u53d1\u660e\u8005\u8482\u59c6\u00b7\u4f2f\u7eb3\u65af\u00b7\u674e(Tim Berners-Lee)\u63d0\u51fa\u4e86\u6700\u5c0f\u529f\u8017\u539f\u5219\uff1a\n\u8ba1\u7b97\u673a\u79d1\u5b66\u572820\u4e16\u7eaa60\u5e74\u4ee3\u523080\u5e74\u4ee3\u82b1\u8d39\u4e86\u5927\u91cf\u7684\u7cbe\u529b\u6765\u5236\u9020\u5c3d\u53ef\u80fd\u5f3a\u5927\u7684\u8bed\u8a00\u3002\u5982\u4eca\uff0c\u6211\u4eec\u5fc5\u987b\u610f\u8bc6\u5230\u9009\u62e9\u6700\u6709\u529b\u7684\u89e3\u51b3\u65b9\u6848\u800c\u4e0d\u662f\u6700\u5f31\u7684\u89e3\u51b3\u65b9\u6848\u7684\u539f\u56e0\u3002\n\u5728\u8bed\u8a00\u7684\u8ba1\u7b97\u80fd\u529b\u548c\u786e\u5b9a\u8be5\u8bed\u8a00\u4e2d\u7684\u7a0b\u5e8f\u6b63\u5728\u505a\u4ec0\u4e48\u7684\u80fd\u529b\u4e4b\u95f4\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6743\u8861\u3002\n\u7528\u529f\u80fd\u8f83\u5f31\u7684\u8bed\u8a00\u8868\u8fbe\u7ea6\u675f\u3001\u5173\u7cfb\u548c\u5904\u7406\u6307\u4ee4\u53ef\u4ee5\u63d0\u9ad8\u4fe1\u606f\u91cd\u7528\u7684\u7075\u6d3b\u6027\uff1a\u8bed\u8a00\u529f\u80fd\u8d8a\u5f31\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u8bed\u8a00\u5b58\u50a8\u7684\u6570\u636e\u5c31\u8d8a\u591a\u3002\n\u4e8b\u5b9e\u4e0a\uff0cBerners-Lee\u57fa\u4e8e\u4ee5\u4e0b\u89c4\u5219\u9009\u62e9\u4e0d\u8ba9HTML\u6210\u4e3a\u771f\u6b63\u7684\u8bed\u8a00\uff1a\n\u6211\u9009\u62e9HTML\u4e0d\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u56e0\u4e3a\u6211\u60f3\u8ba9\u4e0d\u540c\u7684\u7a0b\u5e8f\u7528\u5b83\u505a\u4e0d\u540c\u7684\u4e8b\u60c5\uff1a\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8868\u793a\u5b83\u3001\u63d0\u53d6\u76ee\u5f55\u3001\u7d22\u5f15\u5b83\uff0c\u7b49\u7b49\u3002\n\u867d\u7136\u6700\u4f4e\u529f\u8017\u89c4\u5219\u9488\u5bf9\u7684\u662f\u7f16\u7a0b\u8bed\u8a00\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u8bed\u8a00\u7279\u6027\uff0c\u4f46\u6211\u8ba4\u4e3a\u540c\u6837\u7684\u60f3\u6cd5\u4ecd\u7136\u9002\u7528\u3002\u4ee3\u7801\u7684\u529f\u80fd\u8d8a\u5f31\uff0c\u5c31\u8d8a\u5bb9\u6613\u63a8\u7406\u3002\n\u56e0\u6b64\uff0c\u6709\u8da3\u7684\u662f\uff0c\u6709\u4eba\u8bf4\u50cf.filter\u3001.map\u548c.duce\u8fd9\u6837\u7684\u51fd\u6570\u6570\u7ec4\u51fd\u6570\u6bd4\u5b83\u4eec\u7c97\u7cd9\u7684for\u5faa\u73af\u66ff\u4ee3\u51fd\u6570\u66f4\u5f3a\u5927\u3002\u6211\u4f1a\u8bf4\u76f8\u53cd\u7684\u8bdd\uff1a\u4ed6\u4eec\u7684\u529b\u91cf\u8981\u5c0f\u5f97\u591a\uff0c\u8fd9\u624d\u662f\u5173\u952e\u6240\u5728\u3002\n\u6beb\u65e0\u7591\u95ee\uff0c\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u7684\u4eba\u53ef\u80fd\u6307\u7684\u662f\u5b83\u4eec\u7684\u603b\u4f53\u80fd\u529b(\u4f8b\u5982\uff0c\u80fd\u591f\u8c03\u7528array.map(...).filter(...))\uff0c\u6216\u901a\u8fc7\u5e76\u884c\u5904\u7406\u542f\u7528\u7684\u80fd\u529b\uff0c\u6216\u901a\u8fc7\u5c06\u56de\u8c03\u8d4b\u503c\u7ed9\u4e00\u7ea7\u51fd\u6570\u53d8\u91cf\u6240\u63d0\u4f9b\u7684\u80fd\u529b\u3002\n\u4f46\u6211\u60f3\u8bf7\u5927\u5bb6\u6ce8\u610f\uff0c\u4ece\u8bbe\u8ba1\u4e0a\u770b\uff0c\u8fd9\u4e9b\u529f\u80fd\u5728\u5355\u72ec\u8003\u8651\u65f6\u7684\u529f\u7387\u5b9e\u9645\u4e0a\u662f\u5f88\u4f4e\u7684\u3002\n\u4e0b\u9762\u662f\u6211\u5236\u4f5c\u7684\u4e00\u4e2a\u56fe\u8868\uff0c\u5b83\u7c97\u7565\u5730\u5bf9\u5e38\u89c1\u7684javascript\u6570\u7ec4\u51fd\u6570\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u4ece\u529f\u80fd\u6700\u5f3a\u7684(for\u5faa\u73af)\u5230\u529f\u80fd\u6700\u5f31\u7684(.some/.each)\u3002\n\u5728\u89e3\u91ca\u6211\u6240\u8bf4\u7684\u5f3a\u5927\u662f\u4ec0\u4e48\u610f\u601d\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u7b80\u8981\u56de\u987e\u4e00\u4e0b\u4e0d\u540c\u65b9\u6cd5\u7684\u5b9e\u9645\u7528\u9014\uff1a\nFor-loop\uff1a\u8fed\u4ee3\u4ee3\u7801\u5757\uff0c\u901a\u5e38\u662f\u4e3a\u4e86\u5728\u5faa\u73af\u5185\u4ea7\u751f\u526f\u4f5c\u7528(\u6bd4\u5982\u8ffd\u52a0\u5230\u6570\u7ec4\u4e2d)\u3002\n.forEach\uff1a\u8fed\u4ee3\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5e76\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u5bf9\u8be5\u5143\u7d20\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002\u518d\u8bf4\u4e00\u6b21\uff0c\u901a\u5e38\u662f\u4e3a\u4e86\u5728\u67d0\u4e9b\u65f6\u5019\u4ea7\u751f\u526f\u4f5c\u7528\u3002\n.duce\uff1a\u4ece\u5de6\u5230\u53f3\u8fed\u4ee3\u6570\u7ec4\u4ee5\u7d2f\u52a0\u4e00\u4e9b\u503c\uff0c\u53ef\u80fd\u5728\u5f00\u59cb\u65f6\u663e\u5f0f\u521d\u59cb\u5316\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u83b7\u53d6\u5f53\u524d\u6570\u7ec4\u9879\u5e76\u8fd4\u56de\u7d2f\u52a0\u5668\u7684\u65b0\u503c(\u76f4\u5230\u6211\u4eec\u5728\u672b\u5c3e\u8fd4\u56de\u6700\u7ec8\u503c)\u3002\n.map\uff1a\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u539f\u59cb\u9879\uff0c\u6839\u636e\u8981\u653e\u7f6e\u5728\u8f93\u51fa\u6570\u7ec4\u7684\u76f8\u5e94\u7d22\u5f15\u4e2d\u7684\u539f\u59cb\u9879\u8fd4\u56de\u4e00\u4e2a\u65b0\u9879\n.filter\uff1a\u4ece\u5de6\u5230\u53f3\uff0c\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u9879\uff0c\u5982\u679c\u5b83\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\uff0c\u5219\u5c06\u5176\u5305\u542b\u5728\u8f93\u51fa\u6570\u7ec4\u4e2d\u3002\n.Every\uff1a\u5982\u679c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\uff0c\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002\n.some\uff1a\u5982\u679c\u6570\u7ec4\u4e2d\u7684\u4efb\u4f55\u9879\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\uff0c\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002\n\u8fd9\u7bc7\u5e16\u5b50\u66f4\u591a\u7684\u662f\u5173\u4e8e\u9009\u62e9\u4f7f\u7528\u54ea\u4e00\u4e2a\uff0c\u800c\u4e0d\u662f\u89e3\u91ca\u6bcf\u4e00\u4e2a\u90fd\u505a\u4e86\u4ec0\u4e48\u3002\u6709\u5173\u5f88\u597d\u7684\u53c2\u8003\u8d44\u6599\uff0c\u8bf7\u53c2\u9605\u6b64\u5904\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u662f\u5728\u6a21\u4eff\u8482\u59c6\u00b7\u4f2f\u7eb3\u65af-\u674e(Tim Berners-Lee)\u7684\u9020\u5e01\u6cd5\uff0c\u4f46\u5f53\u6211\u8bf4\u5f3a\u5927\u7684\u65f6\u5019\uff0c\u6211\u771f\u7684\u662f\u6307\u7075\u6d3b\u7684\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u6b64\u529f\u80fd\u53ef\u4ee5\u6ee1\u8db3\u591a\u5c11\u4e2a\u7528\u4f8b\uff1f\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u5c06\u51fd\u6570A\u5b9a\u4e49\u4e3a\u6bd4\u51fd\u6570B\u66f4\u5f3a\u5927\uff0c\u5982\u679c\u5b83\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u672f\u8bed\u5b9e\u73b0\u51fd\u6570B\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u505a\u51fd\u6570B\u53ef\u4ee5\u505a\u7684\u5176\u4ed6\u4e8b\u60c5\u3002*\u3002\n\u8fd9\u610f\u5473\u7740\u6839\u636e\u6211\u7684\u5b9a\u4e49(\u6211\u5e76\u4e0d\u5ba3\u79f0\u5b83\u662f\u901a\u7528\u7684)\uff0cfor\u5faa\u73af\u6bd4.forEach\u66f4\u5f3a\u5927\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u901a\u8fc7for\u5faa\u73af\u5b9e\u73b0.forEach\u3002\u4f8b\u5982\uff1a\nConst forEach=(array\uff0ccallback)=&gt\uff1b{for(i=0\uff1bi&lt\uff1barray.length\uff1bi++){callback(array[i])}}for Each([1\uff0c2\uff0c3]\uff0ca=&gt\uff1bconsole.log(A))&gt\uff1b1&gt\uff1b2&gt\uff1b3[1\uff0c2\uff0c3].forEach(a=&gt\uff1bconsole.log(A))&gt\uff1b1&gt\uff1b2\u3002\nConst Reduce=(array\uff0ccallback\uff0cinitialValue)=&gt\uff1b{let result=initialValue array.forEach((Item)=&gt\uff1b{result=callback(result\uff0citem)})return result}duce([1\uff0c2\uff0c3]\uff0c(acc\uff0ccurr)=&gt\uff1bacc+curr\uff0c0)&gt\uff1b6[1\uff0c2\uff0c3].duce((acc\uff0ccurr)=&gt\uff1bacc+curr\uff0c0)&\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u7684\u4e00\u4e9b\u5b9a\u5236\u4e0d\u50cfECMAScript\u90a3\u6837\u5904\u7406\u672a\u5b9a\u4e49\u7684\u503c\uff0c\u4f46\u662f\u60a8\u53ef\u4ee5\u7406\u89e3\u5176\u4e2d\u7684\u610f\u601d\u3002\n\u4e3a\u4ec0\u4e48\u4e0d\u5bf9\u6240\u6709\u4e1c\u897f\u90fd\u4f7f\u7528for\u5faa\u73af\u5462\uff1f\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u4f4f\u4e00\u79cd\u8fed\u4ee3\u6570\u7ec4\u9879\u7684\u65b9\u6cd5\u3002\u8fd9\u4e0e\u4f60\u4e0d\u4f7f\u7528\u624b\u69b4\u5f39\u6740\u6b7b\u868a\u5b50\u7684\u539f\u56e0\u662f\u4e00\u6837\u7684\uff1a\u624b\u69b4\u5f39\u662f\u975e\u6cd5\u7684\uff0c\u9ed1\u5e02\u5546\u54c1\u88ab\u6807\u4e0a\u6807\u7b7e\uff0c\u4ee5\u8865\u8d34\u5c0f\u8d29\u627f\u62c5\u7684\u98ce\u9669\u3002\n\u8bf4\u5b9e\u5728\u7684\uff1a\u9009\u62e9\u529f\u80fd\u6700\u5f31\u7684\u5de5\u5177\u6709\u5f88\u591a\u539f\u56e0\uff0c\u4f46\u5bf9\u6211\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u539f\u56e0\u662f\uff1a1)\u51cf\u5c11\u51fa\u9519\u7684\u673a\u4f1a2)\u5bb9\u6613\u88ab\u522b\u4eba\u7406\u89e3\u3002\n\u5bf9\u4e8e\u4ecd\u80fd\u5b8c\u6210\u5de5\u4f5c\u7684\u4f5c\u4e1a\u6765\u8bf4\uff0c\u529f\u80fd\u6700\u5f31\u7684\u5de5\u5177\u5c31\u662f\u51fa\u9519\u51e0\u7387\u6700\u5c0f\u7684\u5de5\u5177\u3002\u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u6709\u4e00\u4e2a\u6570\u5b57\u6570\u7ec4\uff0c\u5e76\u4e14\u5e0c\u671b\u8fd4\u56de\u6570\u7ec4\u4e2d\u6bcf\u9879\u52a0\u500d\u7684\u7ed3\u679c\uff1a\nConst myArray=[1\uff0c2\uff0c3]//with`.map`result tWithMap=myArray.map(Item=&gt\uff1bItem*2)&gt\uff1b[2\uff0c4\uff0c6]//For(i=0\uff1bi&lt\uff1bmyArray.length-1\uff1bi++){result tWithLoop.ush(array[i]*2)}ResultWithLoop&gt\uff1b[2\uff0c4\uff0c6]for(i=0\uff1bi&lt\uff1bmyArray.length-1\uff1bi++){result tWithLoop.ush(array[i]*2)}result tWithLoop&gt\uff1b[2\uff0c2\u3002\n\u563f\uff0c\u89c1\u9b3c\u7684\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u6211\u7684ResultWithLoop\u7f3a\u5c11\u4e00\u4e2a\u9879\u76ee\uff1f\u6211\u4ece\u96f6\u5f00\u59cb\u7d22\u5f15\uff0c\u6bcf\u6b21\u53ea\u9012\u589e\u4e00\u4e2a\uff0c\u5e76\u4e14\u901a\u8fc7\u786e\u4fdd\u4e0d\u5305\u62ec\u7d22\u5f15myArray.length\u5904\u7684\u5143\u7d20\u6765\u786e\u4fdd\u4e0d\u4f1a\u51fa\u73b0\u8d8a\u754c\u9519\u8bef\u3002\n\u54e6\uff0c\u7b49\u7b49\uff0c\u6211\u7684for\u5faa\u73af\u4e2d\u7684&lt\uff1b\u5e94\u8be5\u662f&lt\uff1b=(\u6216\u8005\u6211\u53ef\u4ee5\u4ecemyArray.length-1\u4e2d\u5220\u9664-1)\u3002\u662f\u6211\u7684\u9519\u3002\nFor-\u5faa\u73af\u592a\u5f3a\u5927\u4e86\uff0c\u6839\u672c\u4e0d\u5173\u5fc3\u60a8\u5b9e\u9645\u4f7f\u7528\u5b83\u7684\u76ee\u7684\u3002\u4e5f\u8bb8\u4f60\u771f\u7684\u60f3\u6392\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5b83\u600e\u4e48\u4f1a\u77e5\u9053\u5462\uff1f\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5f88\u65e9\u5c31\u53d1\u73b0\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u65e0\u8bba\u4f60\u662f\u9519\u8fc7\u4e86\u4e00\u4e2a=\uff0c\u8fd8\u662f\u9519\u8fc7\u4e86\u4e00\u4e2a\u624b\u69b4\u5f39\u522b\u9488\uff0c\u6709\u65f6\u5f53\u4f60\u610f\u8bc6\u5230\u81ea\u5df1\u7684\u9519\u8bef\u65f6\uff0c\u5df2\u7ecf\u592a\u665a\u4e86\u3002\n.map\u5728\u8fd9\u91cc\u662f\u5408\u9002\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u9690\u85cf\u4e86\u5728\u5217\u8868\u4e2d\u5faa\u73af\u6bcf\u4e2a\u9879\u7684\u63a7\u5236\u6d41\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u4e0d\u53ef\u80fd\u51fa\u9519\u3002\u4f7f\u7528.map\u65f6\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u7ed3\u679c\u4e2d\u7684\u5143\u7d20\u4e0e\u539f\u59cbmap\u4e00\u6837\u591a\uff0c\u5e76\u4e14\u8f93\u51fa\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u8f93\u5165\u6570\u7ec4\u4e2d\u76f8\u5e94\u5143\u7d20\u7684\u51fd\u6570**\u3002\n\u5c06\u4e0a\u9762\u7684for-loop\u65b9\u6cd5\u548c.map\u65b9\u6cd5\u8fdb\u884c\u6bd4\u8f83\uff0c\u4f5c\u4e3a\u9605\u8bfb\u5668\uff0c\u54ea\u79cd\u65b9\u6cd5\u66f4\u5bb9\u6613\u89e3\u6790\uff1f\u5982\u679c\u60a8\u53ea\u719f\u6089for-\u5faa\u73af\uff0c\u90a3\u4e48\u60a8\u4f1a\u9009\u62e9\u5b83\uff0c\u4f46\u662f\u8003\u8651\u5230.map\u5728\u5f53\u4eca\u7f16\u7a0b\u8bed\u8a00\u4e2d\u65e0\u5904\u4e0d\u5728\uff0c\u73b0\u5728\u53ef\u80fd\u662f\u5b66\u4e60\u5b83\u7684\u65f6\u5019\u4e86\u3002\u5bf9\u4e8e\u719f\u6089\u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u4eba\u6765\u8bf4\uff0c.map\u65b9\u6cd5\u8981\u5bb9\u6613\u5f97\u591a\uff1a\n\u60a8\u4e0d\u9700\u8981\u901a\u8bfb\u5982\u4f55\u5728for\u5faa\u73af\u4e2d\u64cd\u4f5ci\u53d8\u91cf\uff0c\u56e0\u4e3a\u8fd9\u662f\u62bd\u8c61\u51fa\u6765\u7684\u3002\n\u60a8\u4e0d\u5fc5\u62c5\u5fc3\u539f\u59cb\u53d8\u91cf\u662f\u5426\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u53d1\u751f\u53d8\u5f02\u3002\n\u751a\u81f3\u4e0d\u9700\u8981\u67e5\u770b\u4f20\u9012\u7ed9.map\u7684\u56de\u8c03\u51fd\u6570\uff0c\u60a8\u5c31\u53ef\u4ee5\u5f88\u6e05\u695a\u5730\u77e5\u9053\u5e94\u8be5\u4ece\u7ed3\u679c\u4e2d\u5f97\u5230\u4ec0\u4e48\u3002\u5bf9\u4e8efor-\u5faa\u73af\u5c31\u4e0d\u80fd\u8fd9\u4e48\u8bf4\u4e86\u3002\n\u540c\u6837\uff0c\u5047\u8bbe\u6211\u6709\u4e00\u7cfb\u5217\u6c34\u679c\uff0c\u6211\u60f3\u77e5\u9053\u5b83\u662f\u5426\u5305\u542b\u82f9\u679c\u3002\u4e0b\u9762\u662f\u51e0\u79cd\u65b9\u6cd5\uff1a\nConst Fruits=[&#39\uff1b\u6a59\u5b50\uff0c&#39\uff1b\u68a8\uff1b\uff0c&#39\uff1bApple&39\uff1b\uff0c&39\uff1bApple&39\uff1b\uff0c&39\uff1bPach&39\uff1b]Const hasAppleViaFilter=Fruits(Fruits=&#39\uff1bApple&39\uff1b).Length&gt\uff1b0&gt\uff1btrueconst\u6709AppleViaFind=Fruits(\u3002Trueconst\u6709AppleViaSome=\u6c34\u679c\u3002\u4e00\u4e9b(\u6c34\u679c=\u6c34\u679c=#39\uff1b\u82f9\u679c)&gt\uff1btrue\u3002\n\u6bcf\u79cd\u65b9\u6cd5\u90fd\u6309\u529f\u7387\u9012\u51cf\u6392\u5e8f\u3002\u6ce8\u610f\u5230\u4e86\u5417\uff1f\u6709\u4e9b\u662f\u6700\u597d\u770b\u7684\uff1f\u4e00\u65e6\u60a8\u770b\u5230\uff0c\u60a8\u5c31\u77e5\u9053hasAppleViaSome\u5c06\u88ab\u8d4b\u4e88\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8fd9\u662f\u57fa\u4e8e\u56de\u8c03FORUE=&gt\uff1bFUILE=&&#39\uff1bApple&#39\uff1b\u3002\u5728\u7b5b\u9009\u5668\u65b9\u6cd5\u4e2d\uff0c\u60a8\u9700\u8981\u8bb0\u4f4f\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u6211\u4eec\u6b63\u5728\u4f7f\u7528\u539f\u59cb\u6570\u7ec4\u7684\u7ed3\u679c\u5b50\u96c6\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u6211\u4eec\u91cd\u65b0\u68c0\u67e5\u5b83\u7684\u957f\u5ea6\uff0c\u5e76\u4e0e\u96f6\u8fdb\u884c\u6bd4\u8f83\u3002\u5728\u8fc7\u6ee4\u5668\u65b9\u6cd5\u4e2d\uff0c\u60a8\u9700\u8981\u8bb0\u4f4f\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u6211\u4eec\u6b63\u5728\u7528\u539f\u59cb\u6570\u7ec4\u7684\u7ed3\u679c\u5b50\u96c6\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u7136\u540e\u6211\u4eec\u91cd\u65b0\u68c0\u67e5\u5b83\u7684\u957f\u5ea6\uff0c\u5e76\u5c06\u5176\u4e0e\u96f6\u8fdb\u884c\u6bd4\u8f83\u3002\u53ea\u6709\u5728\u89e3\u6790\u4e86\u6240\u6709\u8fd9\u4e9b\u4e4b\u540e\uff0c\u60a8\u624d\u4f1a\u610f\u8bc6\u5230\u5b9e\u9645\u7684\u9690\u5f0f\u610f\u56fe\uff0c\u8fd9\u6070\u597d\u4e0e.Some\u65b9\u6cd5\u7684\u663e\u5f0f\u610f\u56fe\u76f8\u540c\u3002\n\u8fd9\u4e9b\u53ea\u662f\u4e00\u4e9b\u5c0f\u793a\u4f8b\uff0c\u4f46\u662f\u5f53\u60a8\u6709\u4e00\u4e2a\u5185\u90e8\u5305\u542b\u5927\u91cf\u4ee3\u7801\u7684\u6bdb\u8338\u8338\u7684\u5927\u578b\u56de\u8c03\u65f6\uff0c\u8bfb\u8005\u53ef\u4ee5\u770b\u5230\u5b83\u4ecd\u7136\u53ea\u662f\u4e00\u4e2a\u5bf9.ome\u7684\u8c03\u7528\uff0c\u5e76\u4e14\u53ef\u4ee5\u653e\u5fc3\uff0c\u56de\u8c03\u6240\u505a\u7684\u4e00\u5207\u90fd\u662f\u8fd4\u56detrue\u6216false\u3002\u8fd9\u6821\u51c6\u4e86\u8bfb\u8005\u7684\u9884\u671f\uff0c\u5e76\u4f7f\u5176\u66f4\u5bb9\u6613\u5904\u7406\u56de\u8c03\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\nConst hasAppleViaContrivedSome=Fruits\u3002Some(Fruits=&gt\uff1b{If(Typpeof\u6c34\u679c\uff01==&#39\uff1bString&#39\uff1b){return false}If(Fruits=&#39\uff1bPar&39\uff1b){Return False}If(Fruits=&#39\uff1b\u6a59\u8272&39\uff1b){Return False}If(Fruits=&#39\uff1b\u7981\u679c&#39\uff1b){Return False}If(Fruits=&#39\uff1bString&#39\uff1b){Return False}If(\u6c34\u679c.substring(1\u3002}\u8fd4\u56deFALSE})\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u6709\u4eba\u770b\u5230\u4f60\u7684\u4ee3\u7801\uff0c\u770b\u5230\u4e00\u4e2a\u5f3a\u5927\u7684\u51fd\u6570\u7528\u6765\u6267\u884c\u50cf\u8c03\u7528\u8fd9\u6837\u7410\u788e\u7684\u4e8b\u60c5\u65f6\uff0c\u4ed6\u4eec\u4f1a\u6bd4\u4ed6\u4eec\u5728\u4f60\u901a\u5e38\u653e\u82cd\u8747\u62cd\u7684\u5730\u65b9\u5076\u7136\u53d1\u73b0\u624b\u69b4\u5f39\u7684\u65f6\u5019\u66f4\u56f0\u60d1\u3002\n\u50cfHaskell\u8fd9\u6837\u7684\u6838\u5fc3\u51fd\u6570\u5f0f\u8bed\u8a00\u4e0d\u5141\u8bb8\u5728\u51fd\u6570\u4e2d\u51fa\u73b0\u526f\u4f5c\u7528\uff0c\u8fd9\u610f\u5473\u7740\u5728.map\u4e2d\u5904\u7406\u9879\u7684\u987a\u5e8f\u5bf9\u8f93\u51fa\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u5e76\u884c\u8fd0\u884c\u56de\u8c03\u8c03\u7528\u6765\u63d0\u9ad8\u6548\u7387\u3002\u5bf9\u4e8ejavascript\u5219\u4e0d\u662f\u8fd9\u6837\uff1a\u5728\u6240\u6709\u4e0a\u8ff0\u51fd\u6570\u4e2d\uff0c\u8bed\u8a00\u90fd\u5141\u8bb8\u526f\u4f5c\u7528\u3002\n\u90a3\u4e48\uff0c\u5728\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u7684\u56de\u8c03\u4e2d\u9690\u85cf\u4e00\u4e9b\u526f\u4f5c\u7528\u6709\u4ec0\u4e48\u5bb3\u5904\u5462\uff1f\u5047\u8bbe\u60a8\u6b63\u5728\u68c0\u67e5\u6211\u4eec\u7684\u6c34\u679c\u5217\u8868\u4e2d\u662f\u5426\u6709\u82f9\u679c\uff0c\u4f46\u662f\u60a8\u8fd8\u60f3\u5c06\u9047\u5230\u7684\u4efb\u4f55\u6a59\u5b50\u7684\u7d22\u5f15\u9644\u52a0\u5230orangeIndexs\u6570\u7ec4\u4e2d\u3002\u60a8\u53ef\u80fd\u4f1a\u5fcd\u4e0d\u4f4f\u8fd9\u6837\u505a\uff1a\n\u5e38\u91cf\u6c34\u679c=[&#39\uff1b\u6a59\u5b50\uff0c&#39\uff1b\u68a8&#39\uff1b\uff0c&#39\uff1b\u82f9\u679c&#39\uff1b\uff0c&#39\uff1b\u82f9\u679c&#39\uff1b\uff0c&#39\uff1b\u6843\u5b50&#39\uff1b]\u8ba9orangeIndex=[]const\u6709\u82f9\u679c=\u6c34\u679c\u3002\u4e00\u4e9b((\u6c34\u679c\uff0c\u7d22\u5f15)=&gt\uff1b{if(\u6c34\u679c\u7c7b\u578b\uff01==#39\uff1b\u5b57\u7b26\u4e32&#39\uff1b){return false}if(\u6c34\u679c=&#39}){return false}if(\u6c34\u679c=&#39\uff1b){return false}if(\u6c34\u679c=&#39\u3002\u6a59\u8272){orangeIndexes.ush(Index)//\u5982\u679c(\u6c34\u679c=#39\uff1b\u7981\u679c){\u8fd4\u56de\u5047}if(\u6c34\u679c=#39\uff1b\u82f9\u679c&#39\uff1b){\u8fd4\u56de\u771f}\u8fd4\u56de\u5047}\uff0c\u5219\u67d0\u4e9b\u7a81\u53d8\u80af\u5b9a\u4e0d\u4f1a\u4f24\u5bb3\u8fd4\u56de\u5047}\u5982\u679c(\u6c34\u679c=#39\uff1b\u82f9\u679c&#39\uff1b){\u8fd4\u56de\u771f}\u8fd4\u56de\u5047})\u5982\u679c(\u6c34\u679c=#39\uff1b\u82f9\u679c&#39\uff1b){\u8fd4\u56de\u771f}\u8fd4\u56de\u5047}\u5982\u679c(\u6c34\u679c=#39\uff1b\u82f9\u679c&#39\uff1b){\u8fd4\u56de\u771f}\u8fd4\u56de\u5047}[0]\u3002\n\u4e0d\u662f\u7684\u3002\u8fd9\u771f\u7684\u5f88\u7cdf\u7cd5\u3002\u901a\u8fc7\u6539\u53d8\u8c03\u7528\u4e2d\u7684\u53d8\u91cf\uff0c\u6211\u4eec\u8bef\u5bfc\u8bfb\u8005\u8ba4\u4e3a\u56de\u8c03\u7b26\u5408\u6839\u636e\u7ed3\u679c\u8fd4\u56deTRUE\u6216FALSE\u7684\u9884\u671f\u884c\u4e3a\uff0c\u800c\u5b9e\u9645\u4e0a\u5b83\u76f4\u63a5\u5904\u7406\u56de\u8c03\u8303\u56f4\u4e4b\u5916\u7684\u53d8\u91cf\u3002\u5f80\u597d\u4e86\u8bf4\uff0c\u8fd9\u8bc1\u660e\u662f\u6682\u65f6\u7684\u6df7\u4e71\uff0c\u5f80\u574f\u4e86\u8bf4\uff0c\u5b83\u524a\u5f31\u4e86\u8bfb\u8005\u7684\u4fe1\u4efb\uff0c\u5373\u4ed6\u4eec\u9047\u5230\u7684\u4e0b\u4e00\u4e2a\u4f4e\u529f\u8017\u529f\u80fd\u5c06\u540d\u526f\u5176\u5b9e\u3002\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u6709\u4e24\u4e2a\u9009\u62e9\uff1a1)\u5207\u6362\u5230\u66f4\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u505c\u6b62\u5bf9\u4f60\u7684\u8bfb\u8005\u6492\u8c0e2)\u627e\u5230\u4e00\u79cd\u66f4\u5e72\u51c0\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u4f60\u60f3\u8981\u7684\u884c\u4e3a\nConst Fruits=[&#39\uff1b\u6a59\u5b50\uff0c&#39\uff1b\u68a8&#39\uff1b\uff0c&#39\uff1b\u82f9\u679c&#39\uff1b\uff0c&#39\uff1b\u82f9\u679c&#39\uff1b\uff0c&#39\uff1b\u6843&#39\uff1b]\u8ba9\u6a59\u8272\u6307\u6570=[]\u8ba9\u82f9\u679c=\u5047\u6c34\u679c\u3002for Each((\u6c34\u679c\uff0c\u7d22\u5f15)=&gt\uff1b{if(\u6c34\u679c\u7c7b\u578b\uff01==&#39\uff1b\u5b57\u7b26\u4e32&#39\uff1b){return}if(\u6c34\u679c=&){return}if(\u6c34\u679c=&\u3002){orangeIndexes.ush(Index)return}if(\u6c34\u679c=#39\uff1b\u7981\u679c&#39\uff1b){return}if(\u6c34\u679c=#39\uff1b\u82f9\u679c&#39\uff1b){hasApple=true return}})\u662f\u5426\u6709Apple&gt\uff1btrue orangeIndex&gt\uff1b[0]\u3002\n\u5e38\u91cf\u6c34\u679c=[&#39\uff1b\u6a59\u5b50\uff0c&#39\uff1b\u68a8\uff1b\uff0c&#39\uff1b\u82f9\u679c\uff1b\uff0c#39\uff1b\u82f9\u679c\uff0c#39\uff1b\u82f9\u679c\uff0c\u6843\u5b50]\u5e38\u91cf\u6a59\u8272\u6307\u6570=\u6c34\u679c\u3002Reduce((acc\uff0ccurr\uff0cindex)=&gt\uff1bcurr=&39\uff1b\u6a59\u8272&39\uff1b\uff1fAcc.contat(Index)\uff1aACC\uff0c[])const\u6709Apple=Fruits\u3002\u6709\u4e9b(Fruit=&gt\uff1bFruit=&gt\uff1bFruits=&gt\uff1bApple&39\uff1b)\u6709Apple&gt\uff1btrue ororangeIndex&gt\uff1b[0]\u3002\n\u6211\u5e76\u4e0d\u662f\u8bf4\u9009\u98792\u6bd4\u9009\u98791\u66f4\u597d\u3002\u6709\u65f6\uff0c\u5c3d\u7ba1\u5b83\u662f\u6b63\u786e\u7684\uff0c\u4f46\u51fd\u6570\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u53ea\u662f\u6bd4\u53ef\u53d8\u66ff\u4ee3\u65b9\u6848\u66f4\u96be\u9605\u8bfb\uff0c\u7279\u522b\u662f\u5728\u975e\u7c7b\u578b\u5316\u8bed\u8a00\u4e2d\u3002\n\u6211\u8981\u8bf4\u7684\u662f\uff0c\u9009\u98791\u548c\u9009\u98792\u90fd\u5927\u5927\u4f18\u4e8e\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u534a\u529f\u80fd\u534a\u53d8\u5f02\u4ee3\u7801\uff1a\u8fd9\u91cc\u7684\u91cd\u8981\u6536\u83b7\u662f\uff0c\u4ece.duce\u5230.\u4e00\u4e9b\u56de\u8c03\u51fd\u6570\u7684\u526f\u4f5c\u7528\u4fb5\u8680\u4e86\u8fd9\u4e9b\u51fd\u6570\u4f20\u8fbe\u4f5c\u8005\u610f\u56fe\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u800c\u4e14\u6bd4\u90a3\u7bc7\u5173\u4e8e\u868a\u5b50\u5b63\u8282\u5bb6\u7528\u624b\u69b4\u5f39\u7206\u70b8\u7684\u65b0\u95fb\u6587\u7ae0\u66f4\u96be\u9605\u8bfb\u3002\n\u5728\u505a\u4e86\u61d2\u4eba\u548c\u61d2\u4eba\u4e4b\u540e\uff0c\u6211\u82b1\u4e86\u76f8\u5f53\u591a\u7684\u65f6\u95f4\u5728\u56f4\u68cb\u4e16\u754c\u91cc\uff0c\u90a3\u91cc\u6ca1\u6709\u5730\u56fe\uff0c\u6ca1\u6709\u8fc7\u6ee4\u5668\uff0c\u4e5f\u6ca1\u6709\u51cf\u5c11\u3002\u867d\u7136\u6211\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u5bf9for\u5faa\u73af\u8fdb\u884c\u4e86\u76f8\u5f53\u591a\u7684\u5206\u6790\uff0c\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5f3a\u5236\u4f7f\u7528for\u5faa\u73af\u7684\u8bed\u8a00\u6709\u4e00\u4e9b\u597d\u5904\uff1a\n1)\u5b66\u4e60\u4e00\u4e2a\u63a7\u5236\u7ed3\u6784\u6bd4\u5b66\u4e60\u672c\u6587\u4e2d\u7684\u6240\u6709\u4e0d\u540c\u51fd\u6570\u66f4\u5bb9\u66132)\u5f53\u901f\u5ea6\u5f88\u91cd\u8981\u65f6\uff0c\u5177\u6709\u53ef\u53d8\u526f\u4f5c\u7528\u7684for\u5faa\u73af\u53ef\u80fd\u6bd4\u66ff\u4ee3\u51fd\u6570\u66f4\u5feb3)\u5728\u7c7b\u578b\u5316\u8bed\u8a00\u4e2d\uff0cmap/filter/duce\u9700\u8981\u6cdb\u578b\u7c7b\u578b\uff0c\u8fd9\u4f7f\u5f97\u7c7b\u578b\u7cfb\u7edf\u66f4\u590d\u6742\uff0c\u8fd9\u610f\u5473\u7740\u7f16\u8bd1\u65f6\u95f4\u66f4\u6162\uff0c\u5b66\u4e60\u66f2\u7ebf\u66f4\u9661\u3002\n\u8bdd\u867d\u5982\u6b64\uff0c\u54e6\uff0c\u6211\u7684\u5929\u54ea\uff0c\u6211\u8feb\u4e0d\u53ca\u5f85\u5730\u60f3\u77e5\u9053Go\u5f15\u5165\u4e86\u6cdb\u578b\uff0c\u6211\u4e0d\u518d\u9700\u8981\u7f16\u5199for\u5faa\u73af\u6765\u68c0\u67e5\u4e00\u7ec4\u6c34\u679c\u662f\u5426\u5305\u542b\u4e00\u4e2a\u82f9\u679c\u3002\n\u5982\u679c\u60a8\u6709\u5e78\u4f7f\u7528\u4e00\u79cd\u652f\u6301\u8fc7\u6ee4/\u6620\u5c04/\u8fd8\u539f\u548c\u597d\u53cb\u7684\u8bed\u8a00\uff0c\u90a3\u5c31\u4f7f\u7528\u5b83\u4eec\u5427\uff01\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u975e\u7c7b\u578b\u5316\u8bed\u8a00\uff0c\u6709\u65f6\u9700\u8981\u5224\u65ad\u8c03\u7528\u6765\u5728\u516c\u5f00\u5e95\u5c42\u7c7b\u578b\u7684\u53ef\u53d8\u65b9\u6cd5\u548c\u66f4\u96be\u89e3\u6790\u7684\u51fd\u6570\u65b9\u6cd5\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9(\u4f8b\u5982.duce vs.forEach)\u3002\n\u4f46\u662f\uff0c\u65e0\u8bba\u4f60\u662f\u5728\u5199\u4ee3\u7801\u8fd8\u662f\u5728\u6355\u6740\u868a\u5b50\uff0c\u5982\u679c\u4f60\u80fd\u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u5b66\u5230\u4ec0\u4e48\uff0c\u90a3\u5c31\u4e00\u5b9a\u8981\u95ee\u95ee\u81ea\u5df1\uff1a\n\u524d\u9762\u6211\u8bf4\u8fc7\uff0c\u6211\u60f3\u5173\u6ce8\u5355\u4e2a\u9635\u5217\u51fd\u6570\u662f\u5982\u4f55\u4f4e\u529f\u8017\u7684\uff0c\u5373\u4f7f\u5b83\u4eec\u7684\u7ec4\u5408\u88ab\u8bc1\u660e\u662f\u9ad8\u529f\u8017\u7684\u3002\u8fd9\u5c31\u56de\u907f\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u662f\u5426\u6709\u4e00\u4e9b\u65f6\u5019\uff0c\u6570\u7ec4\u51fd\u6570\u7684\u7ec4\u5408\u88ab\u8bc1\u660e\u8fc7\u4e8e\u5f3a\u5927\uff0c\u963b\u788d\u800c\u4e0d\u662f\u5e2e\u52a9\u8bfb\u8005\u7406\u89e3\uff1f\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5927\u81f4\u6a21\u62df\u4e86\u6211\u9047\u5230\u7684\u771f\u5b9e\u60c5\u51b5\uff1a\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u7cfb\u7edf\uff0c\u5b83\u901a\u8fc7product Click\u6a21\u578b\u8ddf\u8e2a\u67d0\u4e2a\u7f51\u7ad9\u4e0a\u7684\u4ea7\u54c1\u70b9\u51fb\u60c5\u51b5\uff0c\u8be5\u6a21\u578b\u5f15\u7528\u8be5\u4ea7\u54c1\u548c\u70b9\u51fb\u8be5\u4ea7\u54c1\u7684\u5ba2\u6237\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728\u7ed9\u5b9a\u4e00\u7ec4ductClick ID\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u4ea7\u54c1\u548c\u5ba2\u6237\u7684\u5bf9\u8c61\u6570\u7ec4(\u4e0d\u9700\u8981\u5305\u62ec\u5355\u51fb\u5bf9\u8c61\u672c\u8eab)\u3002\u6211\u4eec\u8fd8\u5fc5\u987b\u8df3\u8fc7\u4efb\u4f55\u65e0\u6cd5\u627e\u5230\u5ba2\u6237/\u4ea7\u54c1\u7684\u70b9\u51fb\u3002\nFetchProductClick\uff1a(products ClickId\uff1aNumber)=&gt\uff1bProductClick|nullfetchProduct\uff1a(ductClick\uff1aProductClick)=&gt\uff1bProduct|nullfetchCustomer\uff1a(products Click\uff1aProductClick)=&gt\uff1bCustomer|null\u3002\n\u8ba9\u6211\u4eec\u4e5f\u5047\u8bbe\u8fd9\u4e9b\u51fd\u6570\u7684\u8fd0\u884c\u6210\u672c\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u6dfb\u52a0\u6279\u91cf\u83b7\u53d6\u6570\u636e\u7684\u51fd\u6570\u7684\u95ee\u9898\u5df2\u7ecf\u79ef\u538b\u5f97\u5f88\u4e25\u91cd\uff0c\u6211\u4eec\u73b0\u5728\u6ca1\u6709\u65f6\u95f4\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\nConst fetchProductClickInfo=ductClickIds=&gt\uff1b{let Results=[]products tIds.forEach(ductClickId=&gt\uff1b{const products tClick=fetchProductClick(Products TClickId)if(products tClick=null){return}const product=fetchProduct(Products TClick)if(product==null){return}const Customer=fetchCustomer(Products TClickId)if(product==null){return}const Customer=fetchCustomer(DuctClickId)if(product==null){return}const Customer=fetchCustomer(DuctClickId)\u3002\n\u6bcf\u5f53\u627e\u4e0d\u5230\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u90fd\u4f1a\u5229\u7528\u63d0\u524d\u8fd4\u56de\uff0c\u6700\u540e\uff0c\u5982\u679c\u6211\u4eec\u6709\u4ea7\u54c1\u548c\u5ba2\u6237\uff0c\u6211\u4eec\u4f1a\u5c06\u5b83\u4eec\u653e\u5165\u7ed3\u679c\u6570\u7ec4\u4e2d\u3002\n\u60a8\u53ef\u80fd\u4f1a\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528.duce\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u4f1a\u964d\u4f4e\u53ef\u8bfb\u6027\uff0c\u6211\u540c\u610f\u8fd9\u4e00\u70b9\u3002\u4f46\u4e3a\u4ec0\u4e48\u8981\u6b62\u6b65\u4e8eReduce\u5462\uff1f\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5408\u6210.map\u548c.filter\u6765\u5b9e\u73b0\u76f8\u540c\u7684\u884c\u4e3a\uff0c\u5982\u4e0b\u6240\u793a\uff1a\nConst fetchProductClickInfo=ProductClickIds=&gt\uff1bProductClickIds.map(products ClickId=&gt\uff1bfetchProductClick(Products TClickId)).filter(products Click=&gt\uff1bproducts Click\uff01==null).map(ductClick=&gt\uff1b({ProductClick\uff0cproduct\uff1afetchProduct(ProductClick)\uff0c}).filter(products ClickInfo\u3002\n\u597d\u7684\uff0c\u8fd9\u4e0d\u4ec5\u6bd4\u4f7f\u7528.forEach\u5faa\u73af\u7684\u793a\u4f8b\u66f4\u96be\u9605\u8bfb\uff0c\u800c\u4e14\u5b9e\u9645\u4e0a\u5f15\u5165\u4e86\u4e0e\u9700\u6c42\u65e0\u5173\u7684\u590d\u6742\u6027\u3002\u5bf9\u4e8e\u6211\u4eec\u83b7\u53d6\u7684\u6bcf\u4e2a\u5bf9\u8c61\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5b83\uff0c\u6211\u4eec\u9700\u8981\u505c\u6b62\u8be5\u8fdb\u7a0b\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a.map\u540e\u9762\u5fc5\u987b\u8ddf\u4e00\u4e2a.filter\uff0c\u4ee5\u68c0\u67e5\u7a7a\u503c\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5728\u6570\u7ec4\u4e2d\u91cd\u65b0\u5faa\u73af\u7684\u6b21\u6570\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u9700\u8981\u7684\u6b21\u6570\u3002\n\u6211\u4eec\u4e0d\u5e0c\u671b\u5728\u540c\u4e00\u4e2a.map\u56de\u8c03\u4e2d\u540c\u65f6\u83b7\u53d6\u4ea7\u54c1\u548c\u5ba2\u6237\uff0c\u4ee5\u9632\u4ea7\u54c1\u4e3a\u7a7a\uff0c\u8fd9\u4f1a\u4f7f\u83b7\u53d6\u5ba2\u6237(\u4e00\u4e2a\u6602\u8d35\u7684\u64cd\u4f5c)\u53d8\u5f97\u591a\u4f59\u3002\n\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5c3d\u7ba1\u6211\u4eec\u4e0d\u60f3\u5c06\u4ea7\u54c1\u5305\u62ec\u5728\u6700\u7ec8\u7ed3\u679c\u4e2d\u5355\u51fb\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u9700\u8981\u5c06\u5176\u8d2f\u7a7f\u7b2c\u4e8c\u4e2a.map\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u83b7\u53d6\u7b2c\u4e09\u4e2a.map\u4e2d\u7684\u5ba2\u6237\u3002\u771f\u8ba9\u4eba\u5934\u75bc\uff01\n\u8fd9\u91cc\u8981\u5438\u53d6\u7684\u6559\u8bad\u662f\uff0c\u5c3d\u7ba1\u4e00\u4e9b\u5355\u72ec\u7684\u529f\u80fd\u53ef\u80fd\u662f\u4f4e\u529f\u8017\u7684\uff0c\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u4e9b\u529f\u80fd\u7684\u7ec4\u5408\u672c\u8eab\u5c31\u662f\u4f4e\u529f\u8017\u7684\u3002\u5982\u679c\u6240\u9700\u7684\u884c\u4e3a\u9700\u8981\u4e00\u4e9b\u9ad8\u6027\u80fd\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4ed4\u7ec6\u8003\u8651\u54ea\u79cd\u65b9\u6cd5\u5f15\u5165\u7684\u5916\u90e8\u590d\u6742\u6027\u6700\u5c0f\u3002\u4ec5\u4ec5\u56e0\u4e3a\u60a8\u66f4\u719f\u6089.map\u548c.filter\u800c\u4e0d\u662f\u53ef\u6015\u7684.duce\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u60a8\u5e94\u8be5\u5728.duce\u66f4\u5408\u9002\u7684\u65f6\u5019\u4f7f\u7528\u5b83\u4eec(\u751a\u81f3\u662ffor\u5faa\u73af)\u3002\n\u6839\u636e\u6211\u7684\u4e2a\u4eba\u7ecf\u9a8c\uff0c\u5728\u6bd4\u8f83\u8fd9\u4e9b\u65b9\u6cd5\u65f6\uff0c\u6027\u80fd\u4ece\u6765\u4e0d\u662f\u4ec0\u4e48\u5927\u95ee\u9898\uff0c\u6b63\u5982\u6211\u53d1\u73b0\u7684\u90a3\u6837\uff1a1)\u5728\u524d\u7aef\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5f88\u5c11\u5904\u7406\u5927\u578b\u6570\u7ec4\uff1b2)\u5728\u50cfReaction\u8fd9\u6837\u7684\u6846\u67b6\u4e2d\uff0c\u901f\u5ea6\u6162\u901a\u5e38\u6765\u81ea\u4e8e\u5728\u6bcf\u6b21\u6e32\u67d3\u53ea\u9700\u8981\u6267\u884c\u4e00\u6b21\u64cd\u4f5c\u65f6\u4e0d\u5fc5\u8981\u5730\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u610f\u5473\u7740useMemo\u6302\u94a9\u6bd4\u66f4\u6539\u5904\u7406\u6570\u636e\u7684\u65b9\u5f0f\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u4f46\u662f\u5728javascript\u4e2d\uff0c\u6709\u5f88\u591a\u65f6\u5019\u6027\u80fd\u786e\u5b9e\u5f88\u91cd\u8981\u3002\u56e0\u6b64\uff0c\u6211\u4f7f\u7528Benchmark.js\u8fdb\u884c\u4e86\u4e00\u4e9b\u57fa\u51c6\u6d4b\u8bd5\uff0c\u6bd4\u8f83\u4e86\u4e0d\u540c\u65b9\u6cd5\u5728\u6267\u884c\u5730\u56fe\u64cd\u4f5c\u65f6\u7684\u8868\u73b0\uff1a\n\u5bf9\u4e8e\u6309\u5347\u5e8f\u6392\u5217\u76841000\u4e2a\u6570\u5b57\u7684\u6570\u7ec4\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u9012\u589e\u9879\u76ee\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a\nMAP x 386,175\u6b21/\u79d2\u00b113.96%(91\u6b21\u91c7\u6837)\u5bf9\u4e8e\u6bcf\u4e2a\u5728\u4f4dx 193,596\u6b21/\u79d2\u00b10.78%(92\u6b21\u91c7\u6837)\u5faa\u73afx 190,224\u6b21/\u79d2\u00b10.36%(96\u6b21\u91c7\u6837)\u5bf9\u4e8e\u6bcf\u4e2a\u5728\u4f4dx 444,796\u6b21/\u79d2\u00b10.61%(93\u6b21\u91c7\u6837)\u5bf9\u4e8e\u6bcf\u4e2a\u5728\u4f4dx 805,311\u6b21/\u79d2\u00b119.99%(\u3002\n\u5982\u679c\u4e0d\u8003\u8651\u5c31\u5730\u7a81\u53d8\uff0c\u90a3\u4e48\u5bf9\u4e8e\u7b80\u5355\u7684\u8f6c\u6362(\u5982\u9012\u589e\u6570\u5b57)\uff0c.map\u8981\u8fdc\u8fdc\u4f18\u4e8e\u66ff\u4ee3\u65b9\u6848\u3002\u5982\u679c\u60a8\u5141\u8bb8\u539f\u59cb\u6570\u7ec4\u7684\u5c31\u5730\u7a81\u53d8\uff0c\u5219forEach\u5c06\u5206\u5f97\u4e00\u676f\u7fb9\uff0c\u5176\u901f\u5ea6\u5927\u7ea6\u662f.map\u548c\u5c31\u5730for\u5faa\u73af\u7684\u4e24\u500d\u3002\n\u5bf9\u4e8e\u5305\u542b1000\u4e2a\u5bf9\u8c61\u7684\u6570\u7ec4\uff0c\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\u5408\u5e76\u4e00\u4e2a\u952e/\u503c\u5bf9\uff0c\u6211\u4eec\u5f97\u5230\uff1a\nMAP x 48,774\u6b21/\u79d2\u00b111.75%(86\u6b21\u91c7\u6837)\u5bf9\u4e8e\u6bcf\u4e2a\u73af\u8def\u51cf\u5c11x 215\u6b21/\u79d2\u00b12.39%(83\u6b21\u91c7\u6837)x 45,489\u6b21/\u79d2\u00b12.12%(92\u6b21\u91c7\u6837)\u5bf9\u4e8e\u73af\u8defx 48,263\u6b21/\u79d2\u00b14.41%(93\u6b21\u91c7\u6837)\u5bf9\u4e8e\u6bcf\u4e2a\u5c31\u5730x 3,440\u6b21/\u79d2\u00b10.69%(90\u6b21\u91c7\u6837)\u5bf9\u4e8e\u73af\u8def\u5728\u4f4dx 3,430\u6b21/\u79d2\u00b11.31%(91\u6b21\u8fd0\u884c\u3002\n\u56e0\u6b64\uff0c\u5f53\u8f6c\u6362\u9700\u8981\u521b\u5efa\u65b0\u5bf9\u8c61\u65f6(\u4f8b\u5982\uff0c\u5c06\u952e/\u503c\u5bf9\u5408\u5e76\u5230\u5bf9\u8c61\u4e2d\u65f6)\uff0c\u4e00\u5207\u90fd\u4f1a\u8f83\u6162\uff0c\u4f46for\u5faa\u73af\u662f\u6700\u5feb\u7684\u3002\u5c31\u5730.forEach\u548c\u3002\n.", "note_en": "In  1998, Tim Berners-Lee, inventor of the World Wide Web, coined  the Principle of Least Power:\n Computer Science in the 1960s to 80s spent a lot of effort making languages which were as powerful as possible. Nowadays we have to appreciate the reasons for picking not the most powerful solution but the least powerful.\n  There is an important tradeoff between the computational power of a language and the ability to determine what a program in that language is doing\n Expressing constraints, relationships and processing instructions in less powerful languages increases the flexibility with which information can be reused: the less powerful the language, the more you can do with the data stored in that language.\n In fact, Berners-Lee chose not to make HTML a bona-fide language on the basis of this rule:\n I chose HTML not to be a programming language because I wanted different programs to do different things with it: present it differently, extract tables of contents, index it, and so on.\n Though the Rule of Least Power targeted programming languages themselves, rather than language features, I think the same ideas still apply. The less powerful your code is, the easier it is to reason about.\n  It&#39;s therefore interesting that  some people say say that the &#39;functional&#39; array functions like  .filter,  .map, and  .reduce are  powerful compared to their crude for-loop alternatives. I would say the opposite: they are far less powerful, and that&#39;s the  point.\n No doubt, the people calling these functions &#39;powerful&#39; are probably referring to their power in aggregate (for example being able to call  array.map(...).filter(...)), or the power enabled through parallel processing, or the power afforded by assigning callbacks to first-class function variables.\n But I want to bring your attention to how the power of these functions when considered individually is in fact low, by design.\n Here is a diagram I whipped up that crudely orders the common javascript array functions, going from the most powerful (a for-loop) to the least powerful ( .some/ .every).\n   Before explaining what I mean by powerful, here&#39;s a quick recap of what the different approaches are actually for:\n for-loop: iterate through a chunk of code, typically for the sake of creating side effects inside the loop (like appending to an array)\n .forEach: iterate through each element in an array, and in each iteration do something with that element. Again, typically for the sake of creating a side effect at some point.\n  .reduce: from left-to-right, iterate through an array to accumulate some value, potentially initialized explicitly at the start, where in each iteration we take the current array item and return the new value of the accumulator (until we return the final value at the end)\n .map: for each original item in the array, return a new item as a function of the original item to be placed in the corresponding index of the output array\n .filter: from left-to-right, for each item in the array, include it in the output array if it satisfies some condition\n  .every: return true if every item in the array satisfies some condition, otherwise return false.\n .some: return true if any item in the array satisfies some condition, otherwise return false.\n This post is less about explaining what each one does and more about picking which one to use. For a good reference see  here\n  I&#39;m piggybacking off Tim Berners-Lee&#39;s coinage here, but when I say &#39;powerful&#39;, I really mean &#39;flexible&#39;. As in,  how many use cases can this function satisfy? Specifically, I&#39;m defining function A as being more powerful than function B if it can implement function B in its own terms, and do other stuff too that function B can&#39;t.*\n Which means by my definition (which I&#39;m not claiming to be universal) a for-loop is more powerful than  .forEach because you can implement  .forEach via a for-loop. For example:\n const forEach = (array, callback) =&gt; { for (i = 0; i &lt; array.length; i++) { callback(array[i]) }}forEach([1,2,3], a =&gt; console.log(a))&gt; 1&gt; 2&gt; 3[1,2,3].forEach(a =&gt; console.log(a))&gt; 1&gt; 2&gt; 3\n   const reduce = (array, callback, initialValue) =&gt; { let result = initialValue array.forEach((item) =&gt; { result = callback(result, item) }) return result}reduce([1,2,3], (acc, curr) =&gt; acc + curr, 0)&gt; 6[1,2,3].reduce((acc, curr) =&gt; acc + curr, 0)&gt; 6\n   Notably, our custom  some doesn&#39;t handle undefined values as well as the ECMASCript one, but you get the idea.\n  Why not just use a for-loop for everything? That way we only need to remember one approach to iterating through an array&#39;s items. The reason is the same reason you don&#39;t use a grenade to kill a mosquito: grenades are illegal and black market goods are marked up to subsidise the risk taken on by the vendor.\n For real though: there are various reasons to pick the least powerful tool, but to me the two most important reasons are: 1) reducing the chance of errors 2) easy comprehension by others\n  The least powerful tool for the job that can  still do the job is the one that leaves the least chance for errors. Consider the situation where I have an array of numbers and I want to return the result of doubling each item in the array:\n const myArray = [1,2,3]// with `.map`resultWithMap = myArray.map(item =&gt; item * 2)&gt; [2,4,6]// with a for-looplet resultWithLoop = []for (i = 0; i &lt; myArray.length-1; i++) { resultWithLoop.push(array[i] * 2)}resultWithLoop&gt; [2,4]\n Hey, what the hell? Why is my  resultWithLoop missing an item? I started my index at zero, I only incremented one at a time, and I&#39;m ensuring I don&#39;t have an out of bounds error by ensuring I don&#39;t include the element at index  myArray.length.\n Oh wait, that  &lt; in my for-loop should be a  &lt;= (or I could remove the  -1 from  myArray.length-1). My mistake.\n The for-loop is too powerful to care about what you&#39;re actually using it for. Maybe you actually did want to exclude the final element, how could it know? Luckily we caught this one early, but whether you&#39;re missing an  = or missing a grenade pin, sometimes by the time you realise your mistake, it&#39;s already too late.\n The reason  .map is the appropriate choice here is because it is an abstraction that hides the control flow of looping through each item in a list, meaning it&#39;s impossible for you to get it wrong. When you use  .map, you are guaranteed that the result will have as many elements as the original map, and that each element in the output array is a function only of the corresponding element in the input array**.\n  comparing the for-loop approach and the  .map approach above, which is easier to parse as a reader? If you&#39;re only familiar with for-loops, you&#39;ll pick that, but given the ubiquity of  .map in programming languages today, it&#39;s probably time to learn it. For those familiar with both, the  .map approach is far easier to read:\n You don&#39;t need to read through how the  i variable is manipulated in the for-loop, because that&#39;s abstracted away.\n  You don&#39;t need to worry about whether your original variable is being mutated in each iteration.\n Without even looking at the callback function passed to  .map you know a great deal about what to expect from the result. The same cannot be said of the for-loop.\n Likewise, say I have an array of fruits and I want to know if it contains any apples. Here&#39;s a few approaches:\n const fruits = [&#39;orange&#39;, &#39;pear&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;peach&#39;]const hasAppleViaFilter = fruits.filter(fruit =&gt; fruit === &#39;apple&#39;).length &gt; 0&gt; trueconst hasAppleViaFind = fruits.find(fruit =&gt; fruit === &#39;apple&#39;) !== undefined&gt; trueconst hasAppleViaSome = fruits.some(fruit =&gt; fruit === &#39;apple&#39;)&gt; true\n Each approach is ordered by decreasing power. Notice that  .some is the easiest on the eyes? As soon as you see  .some you know that  hasAppleViaSome will be assigned a boolean value, based on the callback  fruit =&gt; fruit === &#39;apple&#39;. In the filter approach, you need to mentally store the fact that we&#39;re creating an array with a subset of the original array&#39;s fruits, and then we&#39;re checking the length of it, and comparing with zero. Only once you parse all of that do you realise the actual implicit intention, which happens to be the same as the  explicit intention of the  .some method.\n These are just small examples, but when you have a big hairy callback with heaps of code inside, the reader can see that it&#39;s still just a call to  .some and can rest assured that all the callback will do is return true or false. This calibrates the expectations of the reader and makes it easier to process what  is happening inside the callback.\n const hasAppleViaContrivedSome = fruits.some(fruit =&gt; { if (typeof fruit !== &#39;string&#39;) { return false } if (fruit === &#39;pear&#39;) { return false } if (fruit === &#39;orange&#39;) { return false } if (fruit === &#39;forbidden fruit&#39;) { return false } if (fruit.substring(1, 4) === &#39;pple&#39;) { return fruit === &#39;apple&#39; } return false})\n On the other hand, when somebody comes across your code and sees a powerful function used to perform something as trivial as a  .some call, they&#39;re going to be more confused than the time they stumbled upon a grenade in the place you usually keep the fly swatter.\n  Hardcore functional languages like Haskell will not allow side effects inside a function, meaning the order in which you process items in a  .map makes no difference to the output, and so you can boost efficiency by running the callback calls in parallel. This is not true of javascript: side effects are permitted by the language in all the abovementioned functions.\n So what&#39;s the harm in sneaking some side effects into a callback to one of these functions? Say you&#39;re checking if we have an apple in our list of fruits, but you want to also append the index of any oranges you come across to an  orangeIndexes array. You might be tempted to do this:\n const fruits = [&#39;orange&#39;, &#39;pear&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;peach&#39;]let orangeIndexes = []const hasApple = fruits.some((fruit, index) =&gt; { if (typeof fruit !== &#39;string&#39;) { return false } if (fruit === &#39;pear&#39;) { return false } if (fruit === &#39;orange&#39;) { orangeIndexes.push(index) // surely some mutation can&#39;t hurt return false } if (fruit === &#39;forbidden fruit&#39;) { return false } if (fruit === &#39;apple&#39;) { return true } return false})hasApple&gt; trueorangeIndexes&gt; [0]\n No. This is  really bad. By mutating a variable inside our  .some call, we&#39;re misleading the reader into thinking that the callback conforms to the expected behaviour of simply returning true or false based on the fruit, when in fact it&#39;s directly messing with variables outside the scope of the callback. At best this proves momentarily confusing, at worst it weakens the reader&#39;s trust that the next &#39;low-power&#39; function they encounter will be true to its name.\n When in this situation, you have two choices: 1) switch to a more powerful function and stop lying to your reader 2) find a cleaner way to achieve the desired behaviour\n  const fruits = [&#39;orange&#39;, &#39;pear&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;peach&#39;]let orangeIndexes = []let hasApple = falsefruits.forEach((fruit, index) =&gt; { if (typeof fruit !== &#39;string&#39;) { return } if (fruit === &#39;pear&#39;) { return } if (fruit === &#39;orange&#39;) { orangeIndexes.push(index) return } if (fruit === &#39;forbidden fruit&#39;) { return } if (fruit === &#39;apple&#39;) { hasApple = true return }})hasApple&gt; trueorangeIndexes&gt; [0]\n   const fruits = [&#39;orange&#39;, &#39;pear&#39;, &#39;apple&#39;, &#39;apple&#39;, &#39;peach&#39;]const orangeIndexes = fruits.reduce( (acc, curr, index) =&gt; curr === &#39;orange&#39; ? acc.concat(index) : acc, [])const hasApple = fruits.some(fruit =&gt; fruit === &#39;apple&#39;)hasApple&gt; trueorangeIndexes&gt; [0]\n I&#39;m not saying option 2 is better than option 1. Sometimes, for all its correctness, a functional solution can simply be much harder to read than a mutative alternative, particularly in non-typed languages.\n What I&#39;m saying is that both option 1 and 2 are vastly superior to the half-functional half-mutative code we started with: the important take away here is that from  .reduce down to  .some, side effects in callbacks erode the expressive power of these functions to communicate the writer&#39;s intent and make for more difficult reading than that news article about the domestic grenade explosion in mosquito season.\n  Having made  lazygit and  lazydocker, I&#39;ve spent quite a lot of time in the world of Go, where there are no maps, filters, or reduces. Although I&#39;ve panned the for-loop a fair bit in this post, it&#39;s worth noting that a language mandating for-loops has some advantages:\n 1) it&#39;s easier to learn one control structure than all the different functions in this post 2) when speed matters, for-loops with mutative side effects can be faster than functional alternatives 3) in a typed language, map/filter/reduce require generic types, which makes for a more complex type system meaning slower compile times and a steeper learning curve.\n Having said all that, oh my god I cannot wait until Go  introduces generics and I no longer need to write a for-loop to check if an array of fruits contains an apple.\n  If you have the luxury of using a language which does support filter/map/reduce and friends, use them!\n If you&#39;re in a non-typed language, sometimes a judgement call is required to pick between a mutative approach that exposes the underlying types and a functional approach which is harder to parse (e.g.  .reduce vs  .forEach).\n But whether you&#39;re writing code or hunting mosquitoes, if there&#39;s anything to take away from this post, its to always ask yourself:\n    Earlier I said that I wanted to focus on how individual array functions are low-power, even if their composition proves high-power. This begs the question: are there times when a composition of array functions proves too powerful and hinders rather than helps the reader&#39;s comprehension?\n Here&#39;s an example that roughly mimics a real situation I&#39;ve encountered: say we have a system which keeps track of product clicks on a website via a productClick model, which references the product and the customer who clicked on it. We want a function, which when given an array of productClick ids, returns an array of objects containing the product and the customer (no need for the click object itself to be included). We must also skip any clicks whose customer/product cannot be found.\n  fetchProductClick: (productClickId: number) =&gt; ProductClick | nullfetchProduct: (productClick: ProductClick) =&gt; Product | nullfetchCustomer: (productClick: ProductClick) =&gt; Customer | null\n And let&#39;s also assume these functions are somewhat expensive to run, but that the ticket for adding functions for bulk fetching of data is deep in the backlog and we don&#39;t have time to address that right now.\n  const fetchProductClickInfo = productClickIds =&gt; { let results = [] productIds.forEach(productClickId =&gt; { const productClick = fetchProductClick(productClickId) if (productClick === null) { return } const product = fetchProduct(productClick) if (product === null) { return } const customer = fetchCustomer(productClick) if (customer === null) { return } results.push({ product, customer, }) }) return results}\n We&#39;re making use of an early return whenever an object isn&#39;t found, and at the end if we have the product and the customer we chuck them into the result array.\n You might say that we could do the same thing with a  .reduce without it being any less readable, and I would agree. But why stop at reduce? You can also achieve the same behaviour by composing  .map and  .filter like so:\n const fetchProductClickInfo = productClickIds =&gt; productClickIds .map(productClickId =&gt; fetchProductClick(productClickId)) .filter(productClick =&gt; productClick !== null) .map(productClick =&gt; ({ productClick, product: fetchProduct(productClick), })) .filter(productClickInfo =&gt; productClickInfo.product !== null) .map(productClickInfo =&gt; ({ product: productClickInfo.product, customer: fetchCustomer(productClickInfo.productClick), })) .filter(productClickInfo =&gt; productInfo.customer !== null)\n Okay so not only is this harder to read than the example with the  .forEach loop, it&#39;s actually introducing complexity that has nothing to do with the requirements. For every object we fetch we need to stop the process if we didn&#39;t find it, meaning every  .map must be followed by a  .filter checking for a null value. This means we&#39;re looping through the array far more than necessary.\n We don&#39;t want to fetch both the product and the customer in the same  .map callback in case the product is  null, which would make fetching the customer (an expensive operation) redundant.\n What&#39;s more, despite the fact that we don&#39;t want to include the productClick in the final result, we still need to thread it through the second  .map so that we can use it to fetch the customer in the third  .map. What a headache!\n The lesson to take away here is that although some individual functions could be low-power, that doesn&#39;t mean a composition of those functions is itself low-power. And if the required behaviour calls for something high-power, you need to think carefully about which approach introduces the least amount of extrinsic complexity. Just because you&#39;re more familiar with  .map and  .filter than that scary  .reduce does not mean you should use them when a  .reduce is more appropriate (or even a for-loop).\n  In my personal experience, performance has never been a big deal when comparing these approaches, as I&#39;ve found: 1) in a frontend application you&#39;re rarely dealing with large arrays 2) in a framework like React, slowness typically comes from unnecessarily performing some operation with each render when it only needs to be done once, meaning the  useMemo hook is a better solution than changing how you process the data.\n But there are plenty of times when performance does matter in javascript. So I&#39;ve used  Benchmark.js to  do some benchmarks comparing how different approaches perform when doing a  map operation:\n For an array of 1000 numbers in ascending order, incrementing the item in each iteration, here are the results:\n map x 386,175 ops/sec \u00b113.96% (91 runs sampled)reduce x 257 ops/sec \u00b11.34% (85 runs sampled)forEach x 193,596 ops/sec \u00b10.78% (92 runs sampled)for-loop x 190,224 ops/sec \u00b10.36% (96 runs sampled)for-loop in-place x 444,796 ops/sec \u00b10.61% (93 runs sampled)forEach in-place x 805,311 ops/sec \u00b119.99% (92 runs sampled)Fastest is forEach in-place\n If in-place mutation is off the table,  .map is by far superior to the alternatives for simple transformations like incrementing numbers. If you allow for in-place mutation of the original array, forEach takes the cake, being roughly twice as fast as both  .map and the in-place for loop.\n For an array of 1000 objects, merging a key/value pair in each iteration, we get:\n map x 48,774 ops/sec \u00b111.75% (86 runs sampled)reduce x 215 ops/sec \u00b12.39% (83 runs sampled)forEach x 45,489 ops/sec \u00b12.12% (92 runs sampled)for-loop x 48,263 ops/sec \u00b14.41% (93 runs sampled)forEach in-place x 3,440 ops/sec \u00b10.69% (90 runs sampled)for-loop in-place x 3,430 ops/sec \u00b11.31% (91 runs sampled)Fastest is for-loop\n So when the transformation requires creating a new object e.g. when merging a key/value pair into an object, everything is slower, but the for-loop is the fastest. The in-place  .forEach and \n......", "posttime": "2020-07-20 04:05:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u7ec4,functions,\u51fd\u6570", "title": "\u6570\u7ec4\u51fd\u6570\u4e0e\u6700\u5c0f\u529f\u7387\u6cd5\u5219", "title_en": "Array Functions and the Rule of Least Power", "transed": 1, "url": "https://jesseduffield.com/array-functions-and-the-rule-of-least-power/", "via": "", "real_tags": ["\u6570\u7ec4", "functions", "\u51fd\u6570"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1012927, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Airbnb\u5728\u6301\u7eed\u7684\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u4e2d\u63a8\u51fa\u4e86\u4e00\u79cd\u72ec\u7279\u7684\u65b9\u5f0f\u6765\u652f\u6301\u4e3b\u673a\uff0c\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u63a5\u53d7\u5b83\u3002\n\u636e\u201c\u4eca\u65e5\u7f8e\u56fd\u201d\u62a5\u9053\uff0cAirbnb\u6700\u8fd1\u5411\u5ba2\u4eba\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\uff0c\u8981\u6c42\u4ed6\u4eec\u5411\u8fc7\u53bb\u7684\u4e3b\u4eba\u53d1\u9001\u201c\u5584\u610f\u5361\u7247\u201d\u3002\u8fd9\u4e9b\u5361\u7247\u57fa\u672c\u4e0a\u662f\u4e00\u5f20\u6570\u5b57\u8bc4\u8bba\u5361\uff0c\u5ba2\u4eba\u53ef\u4ee5\u5728\u4e0a\u9762\u5199\u4e0b\u9f13\u52b1\u7684\u4fe1\u606f\uff0c\u5e76\u53ef\u4ee5\u9009\u62e9\u5411\u4e3b\u4eba\u6dfb\u52a0\u91d1\u94b1\u6350\u6b3e\u3002\n\u8fd9\u573a\u7535\u5b50\u90ae\u4ef6\u8fd0\u52a8\u662f\u4e3a\u4e86\u5e94\u5bf9\u4eba\u4eec\u5446\u5728\u5bb6\u91cc\u6297\u51fb\u51a0\u72b6\u75c5\u6bd2\u4f20\u64ad\u65f6\u4e1c\u9053\u4e3b\u4e0d\u5f97\u4e0d\u5fcd\u53d7\u7684\u56f0\u96be\u3002\u53d1\u7ed9\u5ba2\u4eba\u7684\u7535\u5b50\u90ae\u4ef6\u5199\u9053\uff0c\u201c\u548c\u6211\u4eec\u6240\u6709\u4eba\u4e00\u6837\uff0cAirbnb\u4e0a\u7684\u4e3b\u4eba\u4e5f\u53d7\u5230\u65b0\u51a0\u80ba\u708e\u7684\u5f71\u54cd\uff0c\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u65e0\u6cd5\u6b22\u8fce\u5ba2\u4eba\u3002\u73b0\u5728\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4f38\u51fa\u63f4\u624b\uff0c\u76f8\u4e92\u652f\u6301--\u5373\u4f7f\u662f\u5728\u5f88\u5c0f\u7684\u65b9\u9762\uff0c\u201c\u201d\u4eca\u65e5\u7f8e\u56fd\u201c\u62a5\u9053\u8bf4\u3002\nAirbnb\u7f51\u7ad9\u4e0a\u7684\u8bf4\u660e\u8bf4\uff0c\u5ba2\u4eba\u53ef\u4ee5\u70b9\u51fb\u7535\u5b50\u90ae\u4ef6\u201c\u53d1\u9001\u4e00\u5f20\u597d\u5fc3\u5361\u201d\uff0c\u5e76\u5411\u4e3b\u4eba\u5c55\u793a\u4ed6\u4eec\u8fc7\u53bb\u7ed9\u8fc7\u7684\u56db\u4e94\u661f\u3002\u7136\u540e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u9009\u62e9\u5361\u7247\u8bbe\u8ba1\uff0c\u5199\u4e00\u6761\u6d88\u606f\uff0c\u5e76\u9009\u62e9\u662f\u5426\u5411\u4ed6\u4eec\u7684\u4e3b\u673a\u6dfb\u52a0\u6350\u6b3e\u3002\u5f53\u7136\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u5bf9\u8fd9\u4e2a\u60f3\u6cd5\u611f\u5230\u6ee1\u610f\u3002\n\u636e\u201c\u4eca\u65e5\u7f8e\u56fd\u201d\u62a5\u9053\uff0c\u63a8\u7279\u4e0a\u7684\u4e00\u4e9b\u4eba\u5bf9\u5411\u623f\u4e1c\u6350\u6b3e\u7684\u60f3\u6cd5\u63d0\u51fa\u4e86\u5f02\u8bae\uff0c\u5c3d\u7ba1\u53d1\u751f\u4e86\u5371\u673a\uff0c\u4f46\u5176\u4e2d\u4e00\u4e9b\u4eba\u7684\u7ecf\u6d4e\u72b6\u51b5\u53ef\u80fd\u66f4\u5bcc\u88d5\u3002\u201c\u6211\u4e3a\u4ec0\u4e48\u8981\u6350\u7ed9\u6211\u7684\u4e3b\u4eba\u5462\uff1f\u6211\u751a\u81f3\u4e70\u4e0d\u8d77\u4e00\u5957\u623f\u5b50\uff0c\u201c\u4e00\u540d\u7528\u6237\u5199\u9053\u3002\u4e00\u4e9b\u4eba\u8fd8\u8ba4\u4e3a\uff0c\u5ba2\u4eba\u5728\u5165\u4f4f\u5f88\u957f\u65f6\u95f4\u540e\u4ecd\u6709\u8d23\u4efb\u652f\u6301\u623f\u4e1c\uff0c\u7406\u7531\u662f\u4ed6\u4eec\u652f\u4ed8\u4e86\u5165\u4f4f\u623f\u4e1c\u623f\u95f4\u7684\u8d39\u7528\uff0c\u5c31\u91d1\u94b1\u8865\u507f\u800c\u8a00\uff0c\u5e94\u8be5\u8db3\u591f\u4e86\u3002\u636e\u201c\u5546\u4e1a\u5185\u5e55\u201d(Business Insider)\u62a5\u9053\uff0c\u53e6\u4e00\u4e9b\u4eba\u5219\u5c06\u8fd9\u4e00\u60f3\u6cd5\u6bd4\u4f5c\u5411\u623f\u4e1c\u652f\u4ed8\u989d\u5916\u7684\u79df\u91d1\uff0c\u53ea\u662f\u4e3a\u4e86\u793a\u597d\u3002\n\u767b\u5f55\u53d1\u9001~\u597d\u5fc3\u5361~\u7ed9*\u68c0\u67e5\u7b14\u8bb0*\u62e5\u6709\u591a\u5904\u623f\u4ea7\u7684\u4eba\uff1f\n\u5177\u4f53\u8c08\u5230\u8fd9\u4f4d\u4e3b\u6301\u4eba\u65f6\uff0c\u5979\u8ba9\u5979\u7684\u670b\u53cb\u6765\u89c1\u6211\u4eec&\u6211\u5b9e\u9645\u4e0a\u4ece\u672a\u542c\u5230\u8fc7\u5979\u7684\u6d88\u606f\u3002\u6211\u7684\u610f\u601d\u662f\u5f88\u597d\uff0c\u4f46\u662f\u4f5c\u4e3a\u4e00\u4efd\u5de5\u4f5c\uff0c\u8fd9\u5c31\u50cf\u5370\u949e\u7968\u4e00\u6837\u3002\n-\u91d1\u4f2f\u5229\u91d1\u4f2f\u5229\ud83c\udf39(@kimberley homer)2020\u5e747\u670814\u65e5\n\u6709\u5f88\u591a\u4e0eCOVID\u76f8\u5173\u7684\u5947\u602a\u7684\u4f01\u4e1a\u8425\u9500\u7b56\u7565\uff0c\u4f46Airbnb\u5efa\u8bae\u6211\u5411\u4e00\u4f4d\u4e0d\u5c51\u4e8e\u8ba9\u6211\u4ed8\u94b1\u6362\u53d6\u5728\u4ed6\u4eec\u9152\u5e97\u8fc7\u591c\u7684\u4e1a\u4e3b\u5bc4\u4e00\u5f20\u5584\u610f\u5361\uff0c\u5373\u4f7f\u6309\u7167\u8fd9\u4e9b\u8d8a\u6765\u8d8a\u5947\u602a\u7684\u6807\u51c6\uff0c\u4e5f\u662f\u5f88\u5947\u602a\u7684\u3002\n-\u53f2\u8482\u6587\u00b7\u6000\u7279(@notstevenWhite)2020\u5e747\u67081\u65e5\u3002\n\u53e6\u4e00\u4f4d\u7528\u6237\u4e5f\u6307\u51fa\u4e86\u8fd9\u4e2a\u4ee4\u4eba\u62c5\u5fe7\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4ed6\u7ecf\u5386\u4e86\u4e00\u4e9b\u6765\u81ea\u4e1c\u9053\u4e3b\u7684\u53ef\u7591\u884c\u4e3a\u3002\u636e\u201c\u4eca\u65e5\u7f8e\u56fd\u201d\u62a5\u9053\uff0c\u8fd9\u4f4d\u7528\u6237\u5199\u9053\uff1a\u201cAirbnb\u8ba9\u6211\u5bc4\u4e00\u5f20\u597d\u5fc3\u5361\u7ed9\u4e3b\u4eba\uff0c\u4ed6\u8ba9\u6211\u7684\u5973\u6027\u670b\u53cb\u611f\u5230\u975e\u5e38\u4e0d\u8212\u670d\uff0c\u5979\u4eec\u4e0d\u60f3\u5728\u516c\u5bd3\u91cc\u5355\u72ec\u5446\u4e00\u5206\u949f\uff0c\u4ee5\u9632\u4ed6\u56de\u6765\u3002\u201d\n\u5c11\u6570\u7528\u6237\u8868\u793a\uff0c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u4e2a\u60f3\u6cd5\u662f\u8054\u7cfb\u548c\u5efa\u7acb\u4eba\u9645\u5173\u7cfb\u7684\u597d\u65b9\u6cd5\u3002Airbnb\u4e3a\u8fd9\u4e00\u5021\u8bae\u8fdb\u884c\u4e86\u8fa9\u62a4\uff0c\u79f0\u5176\u201c\u672c\u7740\u91cd\u65b0\u5efa\u7acb\u8054\u7cfb\u7684\u7cbe\u795e\u201d\u3002Airbnb\u53d1\u8a00\u4eba\u672c\u00b7\u5e03\u83b1\u7279(Ben Breit)\u5bf9\u201c\u4eca\u65e5\u7f8e\u56fd\u201d\u8868\u793a\uff1a\u201c\u5728\u8fd9\u6bb5\u5145\u6ee1\u6311\u6218\u7684\u65f6\u671f\uff0c\u6211\u4eec\u542c\u5230\u8bb8\u591a\u5ba2\u4eba\u8868\u793a\u6709\u5174\u8da3\u652f\u6301\u8fc7\u53bb\u7684\u4e1c\u9053\u4e3b\uff0c\u5e76\u4e0e\u4ed6\u4eec\u91cd\u65b0\u5efa\u7acb\u8054\u7cfb\u2026\u2026\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u9879\u65b0\u529f\u80fd\uff0c\u5141\u8bb8\u5ba2\u4eba\u5411\u90a3\u4e9b\u63d0\u4f9b\u51fa\u8272\u6b3e\u5f85\u7684\u4e3b\u4eba\u53d1\u9001\u5e26\u6709\u652f\u6301\u548c\u9f13\u52b1\u4fe1\u606f\u7684\u865a\u62df\u5361\u7247\u3002\u5982\u679c\u5ba2\u4eba\u613f\u610f\uff0c\u4ed6\u4eec\u53ef\u4ee5\u9009\u62e9\u589e\u52a0\u81ea\u613f\u6350\u6b3e\u3002\u201c\u3002\n\u81ea\u51a0\u72b6\u75c5\u6bd2\u5371\u673a\u5f00\u59cb\u4ee5\u6765\uff0cAirbnb\u4e00\u76f4\u4e0e\u4e1c\u9053\u4e3b\u9677\u5165\u56f0\u5883\uff0c\u56e0\u4e3a\u8be5\u516c\u53f8\u544a\u8bc9\u4e1c\u9053\u4e3b\u9000\u8fd8\u56e0\u75ab\u60c5\u800c\u9700\u8981\u53d6\u6d88\u65c5\u884c\u7684\u5ba2\u4eba\u3002\u636e\u201c\u4eca\u65e5\u7f8e\u56fd\u201d\u62a5\u9053\uff0c\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u5e03\u83b1\u6069\u00b7\u5207\u65af\u57fa\u5728\u63a5\u53d7\u201c\u4eca\u65e5\u7f8e\u56fd\u201d\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u8be5\u516c\u53f8\u57283\u6708\u4efd\u82b1\u8d39\u4e862.5\u4ebf\u7f8e\u5143\uff0c\u8bd5\u56fe\u8865\u507f\u623f\u4e1c\u7684\u53d6\u6d88\u8d39\u7528\uff0c\u5916\u52a01700\u4e07\u7f8e\u5143\u7684Airbnb\u8d85\u7ea7\u4e3b\u673a\u57fa\u91d1\uff0c\u5c3d\u7ba1\u8be5\u7f51\u7ad9\u62a5\u544a\u4e8610\u4ebf\u7f8e\u5143\u7684\u53d6\u6d88\u3002\n\u53d1\u4e00\u5c01\u597d\u542c\u7684\u77ed\u4fe1\u5f53\u7136\u662f\u9f13\u52b1\u8fc7\u53bb\u7684\u4e1c\u9053\u4e3b\u7684\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u4ed6\u4eec\u5728\u65c5\u884c\u4e2d\u7ed9\u4f60\u5e26\u6765\u4e86\u6781\u597d\u7684\u4f53\u9a8c\uff0c\u5c3d\u7ba1\u4e5f\u8bb8\u5bc4\u989d\u5916\u7684\u94b1\u5bf9\u4e8eAirbnb\u4e0a\u7684\u8bb8\u591a\u7528\u6237\u6765\u8bf4\u53ef\u80fd\u6709\u70b9\u7275\u5f3a\u3002*\u6839\u636e\u300a\u4eca\u65e5\u7f8e\u56fd\u300b\u7684\u62a5\u9053\uff0c\u4e1c\u9053\u4e3b\u4e0d\u5fc5\u4fdd\u7559\u8fd9\u7b14\u6350\u6b3e\uff0c\u53ef\u4ee5\u628a\u5b83\u6350\u7ed9\u6148\u5584\u673a\u6784\u3002\n\u5982\u679c\u60a8\u901a\u8fc7\u672c\u6587\u4e2d\u63a8\u8350\u7684\u94fe\u63a5\u8d2d\u4e70\u4ea7\u54c1\uff0cMicrosoft\u53ef\u80fd\u4f1a\u83b7\u5f97\u4f1a\u5458\u4f63\u91d1\u3002", "note_en": "Airbnb has launched a unique way to support hosts during the ongoing  coronavirus crisis, but not everyone is embracing it.\n        According to   USA Today , Airbnb recently sent out emails to guests asking them to send \u201ckindness cards\u201d to their past hosts. The cards are basically a digital comment card that guests can write an encouraging message on, with the option to add a monetary contribution to their host.\n   The email campaign is in response to hardships that hosts have had to endure while people are staying at home to combat the spread of coronavirus. The email to guests reads, \u201cLike all of us, hosts on Airbnb are impacted by COVID-19, and many of them are unable to welcome guests. Now more than ever, it\u2019s important to reach out and support one another\u2014even in small ways,\u201d  USA Today reported.\n  Instructions on the Airbnb  website say that guests can click on the email to \u201cSend a Kindness Card,\u201d and be shown hosts that they\u2019ve given four or five stars to in the past. Then, they can choose a card design, write a message, and choose whether or not to add a donation to their host. Of course, not everyone is happy with the idea.\n  According to  USA Today, some people on Twitter have taken issue with the idea of donating money to hosts, some of whom may be more well-off financially, despite the crisis. \u201cWhy would I donate to my host? I can&#39;t even afford one house,\u201d one user  wrote. Some have  also argued that it isn\u2019t past guests\u2019 responsibility to support hosts long after their stays, citing the fact that they paid to stay in their host\u2019s rooms and houses should be enough in terms of monetary compensation. Others liken the idea to paying extra rent to landlords just to be nice, according to   Business Insider.\n  Logging on to send a ~kindness card~ to people who *checks notes* own multiple properties?\n Talking specifically about this host, she had her friend meet us &amp; I never actually heard from her. I mean fine, but as a job it\u2019s like printing money.\n \u2014 Kimberley\ud83c\udf39 (@kimberleyhomer)  July 14, 2020\n  There&#39;s a lot of weird COVID-related corporate marketing strategies, but Airbnb&#39;s suggestion that I send a &#34;kindness card&#34; to a property owner who deigned to let me pay them money in exchange for sleeping at their property is weird even by these increasingly weird standards.\n\u2014 Steven White (@notstevenwhite)  July 1, 2020\n  Another user also pointed out the concerning issue, having experienced some questionable conduct from hosts. \u201cAirbnb asked me to send a &#39;kindness card&#39; to the host who made my female friends so uncomfortable they didn\u2019t want to spend a minute alone inside the apartment in case he came back,\u201d the user wrote,  USA Today reported.\n  A handful of users have expressed that they thought the idea was a good way to connect and form interpersonal relationships. Airbnb defended the initiative by saying it is \u201cin the spirit of rekindling connections.\u201d Airbnb spokesperson Ben Breit said to  USA Today, \u201cDuring this challenging time we heard from many guests who were interested in supporting and reconnecting with past hosts...We developed a new feature that allows guests to send virtual cards with messages of support and encouragement to hosts who provided excellent hospitality. If they wish, guests have the option to add a voluntary financial contribution.\u201d\n  Airbnb has been in hot water with hosts since the coronavirus crisis began, since the company told hosts to refund guests who needed to cancel their trips due to the pandemic. According to  USA Today, the company spent $250 million in March to try to reimburse hosts for their cancellations plus a $17 million fund for Airbnb  Superhosts, though the site reported $1 billion in cancellations, CEO Brian Chesky told  USA Today.\n  Sending a nice note is certainly an easy way to encourage past hosts who have given you an excellent experience while traveling, though perhaps sending extra money may be a bit of a stretch for many users on Airbnb.\u00a0 According to  USA Today, the hosts do not have to keep the donation, and can put it towards a charity instead.\n  Microsoft may earn an Affiliate Commission if you purchase something through recommended links in this article.", "posttime": "2020-07-20 03:38:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "criticized,\u5ba2\u4eba", "title": "Airbnb\u56e0\u8981\u6c42\u5ba2\u6237\u5411\u8fc7\u53bb\u7684\u4e1c\u9053\u4e3b\u6350\u6b3e\u800c\u53d7\u5230\u6279\u8bc4", "title_en": "Airbnb Criticized For Asking Its Customers To Donate to Their Past Hosts", "transed": 1, "url": "https://www.msn.com/en-us/travel/news/airbnb-faces-backlash-after-asking-people-to-donate-to-hosts-with-kindness-cards/ar-BB16MjyK", "via": "", "real_tags": ["\u5ba2\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "0de2b4bb206b074b4c97c055a9b9e90e.jpg", "infoid": 1012926, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GitHub\u662f\u5168\u7403\u9886\u5148\u7684\u8f6f\u4ef6\u5f00\u53d1\u5e73\u53f0\uff0c\u53bb\u5e74\u57282019\u5e74\u7684Github\u5b87\u5b99\u5927\u4f1a\u4e0a\u516c\u5e03\u4e86\u5c06\u5176\u6240\u6709\u5f00\u6e90\u8f6f\u4ef6\u6570\u636e\u5b58\u50a8\u5728\u5317\u6781\u91d1\u5e93\u7684\u8ba1\u5212\uff0c\u4f5c\u4e3a\u5176\u6863\u6848\u8ba1\u5212\u7684\u4e00\u90e8\u5206\u3002\u73b0\u5728\uff0c\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u5df2\u7ecf\u5b8c\u6210\uff0c\u786e\u4fdd\u5373\u4f7f\u6587\u660e\u5728\u672a\u67651000\u5e74\u5185\u5d29\u6e83\uff0c\u5b50\u5b59\u540e\u4ee3\u4e5f\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\u3002\nGitHub Inc.\u3002\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u5c06\u5176\u7f51\u7ad9\u4e0a\u5b58\u50a8\u7684\u6240\u6709\u5f00\u6e90\u8f6f\u4ef6\u4ee3\u7801\u7684\u526f\u672c\u4ea4\u4ed8\u7ed9\u5317\u6781\u4e16\u754c\u6863\u6848\u9986\u7684\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u8fd9\u662f\u4e00\u4e2a\u57cb\u5728\u5317\u6781\u5c71\u8109\u62f1\u9876250\u7c73\u6df1\u7684\u975e\u5e38\u957f\u671f\u7684\u6863\u6848\u8bbe\u65bd\u3002\n2020\u5e742\u67082\u65e5\uff0cGitHub\u62cd\u6444\u4e86\u8be5\u7f51\u7ad9\u4e0a\u6240\u6709\u6d3b\u8dc3\u7684\u516c\u5171\u5b58\u50a8\u5e93\u7684\u5feb\u7167\u3002\u5728\u8ba1\u7b97\u673a\u672f\u8bed\u4e2d\uff0c\u5feb\u7167\u6307\u7684\u662f\u5728\u7279\u5b9a\u65f6\u95f4\u70b9\u6355\u83b7\u7684\u7cfb\u7edf\u526f\u672c\u3002\u6240\u4ee5\uff0c\u662f\u7684\uff0cGithub\u6b63\u5728\u5b58\u6863\u5b83\u6240\u6709\u7684\u5f00\u6e90\u4ee3\u7801\uff0c\u5c31\u50cf\u4f60\u5907\u4efd\u78c1\u76d8\u9a71\u52a8\u5668\u7684\u65b9\u5f0f\u4e00\u6837\uff0c\u4ee5\u786e\u4fdd\u4f60\u7684\u6587\u4ef6\u66f4\u5b89\u5168\u5730\u4f9b\u672a\u6765\u4f7f\u7528\u3002\u8fd9\u4e9b\u6570\u636e\u5b58\u50a8\u5728\u4e00\u4e2a\u540d\u4e3aGitHub\u5317\u6781\u4ee3\u7801\u5e93\u7684\u6863\u6848\u9986\u4e2d\uff0c\u5b83\u8bf4\u8fd9\u4e2a\u6863\u6848\u5e93\u5df2\u7ecf\u5efa\u6210\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u5343\u5e74\u3002\nGitHub\u6218\u7565\u9879\u76ee\u4e3b\u4efb\u6731\u8389\u5a05\u00b7\u6885\u7279\u5361\u592b(Julia Metcalf)\u8bf4\uff1a\u201c\u5bc6\u7801\u964d\u843d\u5728\u65af\u74e6\u5c14\u5df4\u7279\u7fa4\u5c9b\u4e0a\u4e00\u4e2a\u62e5\u6709\u6570\u5343\u4eba\u7684\u5c0f\u9547\u6717\u4f0a\u5c14\u6bd4\u6069\uff0c\u5728\u90a3\u91cc\uff0c\u6211\u4eec\u7684\u7bb1\u5b50\u88ab\u5f53\u5730\u7684\u4e00\u5bb6\u7269\u6d41\u516c\u53f8\u8fce\u63a5\uff0c\u5e76\u88ab\u5e26\u5230\u4e2d\u7ea7\u5b89\u5168\u4ed3\u5e93\u8fc7\u591c\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\uff0c\u5b83\u524d\u5f80\u4f4d\u4e8e\u5c71\u4e0a\u7684\u9000\u5f79\u7164\u77ff\uff0c\u7136\u540e\u524d\u5f80\u6570\u767e\u7c73\u6c38\u4e45\u51bb\u571f\u6df1\u5904\u7684\u4e00\u4e2a\u623f\u95f4\uff0c\u4ee3\u7801\u73b0\u5728\u9a7b\u624e\u5728\u90a3\u91cc\uff0c\u5b8c\u6210\u4e86\u4ed6\u4eec\u5c06\u4e16\u754c\u4e0a\u7684\u5f00\u653e\u6e90\u7801\u4fdd\u5b58\u4e861000\u591a\u5e74\u7684\u4f7f\u547d\u201c\u3002\n\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0cGitHub\u8868\u793a\uff0c\u4ed6\u4eec\u4e0e\u4e00\u5bb6\u540d\u4e3aPiql\u7684\u957f\u671f\u6570\u636e\u5b58\u50a8\u516c\u53f8\u5408\u4f5c\u5f00\u5c55\u4e86\u8fd9\u9879\u884c\u52a8\uff0c\u8be5\u516c\u53f8\u590d\u5236\u4e86\u5176\u6d3b\u8dc3\u7684\u516c\u5171\u5b58\u50a8\u5e93\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u5e76\u5c0621TB\u7684\u6570\u636e\u5199\u5165186\u5377\u786c\u5316\u7684\u7f29\u5fae\u80f6\u7247\u3002\u7f29\u5fae\u80f6\u7247\u968f\u540e\u88ab\u8fd0\u5f80\u4f4d\u4e8e\u5317\u6781\u5708\u5185\u7684\u632a\u5a01\u65af\u74e6\u5c14\u5df4\u7279\u5c9b\uff0c\u5e76\u88ab\u8fd0\u9001\u5230250\u7c73\u6df1\u7684\u5c71\u8109\u5185\u7684\u4e00\u4e2a\u9000\u5f79\u7164\u77ff\uff0c\u90a3\u91cc\u73b0\u5728\u662f\u5317\u6781\u4e16\u754c\u6863\u6848\u9986\u7684\u6240\u5728\u5730\u3002", "note_en": "Github, the world&#39;s leading software development platform last year at Github Universe 2019 revealed its plan to store all of its open-source software data in an Arctic vault as part of its Archive Program. Now the code-hosting platform is done making sure that the future generations can access them even if the civilization collapses within the next 1,000 years.\n GitHub Inc. said that it has delivered a copy of all of the open-source software code stored on its website to a data repository at the  Arctic World Archive, which is a very long-term archival facility buried 250 meters deep in the vault of an Arctic mountain.\n  On February 2, 2020, GitHub took a snapshot of all active public repositories on the site. In computer terms, snapshot refers to the copy of a system captured at a particular point in time. So yeah, Github is archiving all of its open-source code, just how you back up a disk drive to ensure your files are more secure for future use. The data is stored in an archive called the  GitHub Arctic Code Vault, which it says has been built to last for a thousand years.\n Julia Metcalf, the director of strategic programs at GitHub said - \u201cThe code landed in Longyearbyen, a town of a few thousand people on Svalbard, where our boxes were met by a local logistics company and taken into intermediate secure storage overnight. The next morning, it traveled to the decommissioned coal mine set in the mountain, and then to a chamber deep inside hundreds of meters of permafrost, where the code now resides fulfilling their mission of preserving the world\u2019s open-source code for over 1,000 years\u201d.\n  In the  blog post, GitHub said that they carried out the operation in partnership with a long-term data storage company called Piql, which copied the entire contents of its active public repositories and wrote that 21 terabytes of data to 186 reels of hardened microfilm. The microfilm was then shipped to the island of Svalbard in Norway, which is located inside the Arctic Circle, and transported to a decommissioned coal mine set within a mountain 250 meters deep and that\u2019s now home to the Arctic World Archive.", "posttime": "2020-07-20 03:37:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,github,\u4ee3\u7801,\u5317\u6781,arctic", "title": "GitHub\u5c0621TB\u5f00\u6e90\u4ee3\u7801\u57cb\u85cf\u5728\u5317\u6781\u91d1\u5e931k\u5e74", "title_en": "GitHub buries 21 TB open-source code in Arctic vault for 1k years", "transed": 1, "url": "https://gizmeek.com/github-the-world-s-largest-open-source-software-site-buries-21-tb-open-source-code-in-arctic-vault-for-1-000-years", "via": "", "real_tags": ["\u5f00\u6e90", "github", "\u4ee3\u7801", "\u5317\u6781", "arctic"]}, {"category": "", "categoryclass": "", "imagename": "9e910ad7e362cbe64b17d347f7a19c4e.jpg", "infoid": 1012925, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b89\u88c5\u548c\u521b\u5efa\u6570\u636e\u5e93\u96c6\u7fa4\u540e\uff0cPostgreSQL\u5c06\u53ea\u5728localhost\u4e0a\u5217\u51fa\u3002\u4e0d\u5141\u8bb8\u8fdc\u7a0b\u8bbf\u95ee\u3002\n[postgres@postgres-lab~]$netstat-lptnu|grep post(\u4e0d\u662f\u6240\u6709\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u8bc6\u522b\uff0c\u4e0d\u4f1a\u663e\u793a\u975e\u62e5\u6709\u7684\u8fdb\u7a0b\u4fe1\u606f\uff0c\u60a8\u5fc5\u987b\u662froot\u7528\u6237\u624d\u80fd\u770b\u5230\u6240\u6709\u8fdb\u7a0b\u4fe1\u606f\u3002)tcp 0 0 127.0.0.1\uff1a5432 0.0.0.0\uff1a*LISTEN 1977/\u90ae\u5c40\u5c40\u957ftcp6 0 0\uff1a\uff1a1\uff1a5432\uff1a*LISTEN 1977/Postmaster\u3002\n[postgres@postgres-lab~]$ps AUX|grep postgres1977 0.0 2.5 286388 14864\uff1fSS Jun28 0\uff1a02/usr/pgsql-12/bin/postmaster-D/postgresql/datapostgres 1979 0.0 0.2 140768 1360\uff1f\u515a\u536b\u519b6\u670828\u65e50\uff1a00Postgres\uff1a\u4f10\u6728\u673aPostgres 19810.0 0.5 286504 3028\uff1f\u515a\u536b\u519b6\u670828\u65e50\uff1a00Postgres\uff1a\u68cb\u5b50\u6307\u9488Postgres 1982 0.0 0.2 286388 1696\u5e74\uff1fSS Jun280\uff1a03 Postgres\uff1a\u80cc\u666f\u4f5c\u5bb6Postgres 1983 0.0 0.9 286388 5676\uff1fSS Jun280\uff1a03 Postgres\uff1aWalWriter Postgres 19840.0 0.4 286924 2688\uff1fSS Jun28 0\uff1a02 postgres\uff1a\u81ea\u52a8\u771f\u7a7a\u53d1\u5c04\u5668\u3002\n[postgres@postgres-lab~]$cd/postgresql/data/[postgres@postgres-lab data]$ls-lah postgresql.conf-rw\u30021 Postgres Postgres 26K Jun 28 21\uff1a44 postgresql.conf\u3002\n\u5c06postgresql.conf\u53c2\u6570LISTEN_ADDRESS\u66f4\u6539\u4e3a\u60a8\u7684\u670d\u52a1\u5668IP\u6216*\u4ee5\u4fa6\u542c\u670d\u52a1\u5668\u4e0a\u6240\u6709\u53ef\u7528\u7684IP\uff1a\n[postgres@postgres-\u5b9e\u9a8c\u5ba4\u6570\u636e]$vi postgresql.conf##----##\u8fde\u63a5\u548c\u8eab\u4efd\u9a8c\u8bc1##\u3002---##-\u8fde\u63a5\u8bbe\u7f6e-LISTEN_ADDRESS=&#39\uff1b*&#39\uff1b##\u8981\u4fa6\u542c\u7684IP\u5730\u5740\uff1b##\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5730\u5740\u5217\u8868\uff1b##\u9ed8\u8ba4\u4e3a&#39\uff1blocalhost&#39\uff1b\uff1b\u5168\u90e8\u4f7f\u7528&#39\uff1b*&#39\uff1b\n\u91cd\u65b0\u542f\u52a8PostgreSQL\u4ee5\u5e94\u7528\u66f4\u6539-\u60a8\u53ef\u4ee5\u4f7f\u7528root os\u7528\u6237\u670d\u52a1\u4e2d\u7684systemctl\u6216Postgres os\u7528\u6237\u4e2d\u7684pg_ctl-D PGDATA\u91cd\u65b0\u542f\u52a8\u6765\u6267\u884c\u6b64\u64cd\u4f5c\uff1a\n[postgres@postgres-lab~]$netstat-lptnu|grep post(\u4e0d\u662f\u6240\u6709\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u8bc6\u522b\uff0c\u4e0d\u4f1a\u663e\u793a\u975e\u62e5\u6709\u7684\u8fdb\u7a0b\u4fe1\u606f\uff0c\u60a8\u5fc5\u987b\u662froot\u7528\u6237\u624d\u80fd\u770b\u5230\u6240\u6709\u8fdb\u7a0b\u4fe1\u606f\u3002)tcp 0 0 0.0.0.0\uff1a5432 0.0.0.0\uff1a*Listen 30161/\u90ae\u5c40\u5c40\u957ftcp6 0 0\uff1a5432\uff1a*Listen 30161/\u90ae\u5c40\u5c40\u957f\n\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e2d\u63d0\u4f9b\u4fe1\u606f\uff0c\u4ece\u54ea\u4e2a\u5730\u5740\u5230\u54ea\u4e2a\u6570\u636e\u5e93\uff0c\u54ea\u4e2a\u7528\u6237\uff0c\u901a\u8fc7\u6211\u4eec\u5141\u8bb8\u7684\u8fde\u63a5\u65b9\u5f0f\u3002\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u63d0\u4f9b\u8fde\u63a5\u7c7b\u578b\u3002\n\u6b64\u6587\u4ef6\u4e0epostgresql.conf\u4f4d\u4e8e\u540c\u4e00\u4f4d\u7f6e(\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728postgresql.conf\u4e2d\u8bbe\u7f6epg_hba\u53c2\u6570\u6765\u66f4\u6539\u6b64\u884c\u4e3a)\uff1a\n[postgres@postgres-lab~]$cd/postgres/data/[postgres@postgres-lab data]$vi pg_hba.conf##type\u6570\u636e\u5e93\u7528\u6237\u5730\u5740\u65b9\u6cd5##&#34\uff1blocal&#34\uff1b\u4ec5\u9002\u7528\u4e8eUnix\u57df\u5957\u63a5\u5b57\u8fde\u63a5\u672c\u5730\u6240\u6709\u4fe1\u4efb#IPv4\u672c\u5730\u8fde\u63a5\uff1a\u4e3b\u673a\u6240\u6709127.0.0.1/32\u4fe1\u4efb#IPv6\u672c\u5730\u8fde\u63a5\uff1a\u4e3b\u673a\u6240\u6709\uff1a\uff1a1/128\u4fe1\u4efb\u3002\n\u5bf9\u4e8eDATABASE\uff0c\u5982\u679c\u6570\u636e\u5e93\u540d\u5e94\u8be5\u4e0e\u6b63\u5728\u8fde\u63a5\u7684\u7528\u6237\u540d\u76f8\u540c\uff0c\u5219\u53ef\u4ee5\u6307\u5b9a\u6570\u636e\u5e93\u540d\u6216\u4f7f\u7528\u7279\u6b8a\u503csameuser\u3002\n\u4f7f\u7528USER\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9aUSER\u6216ROLE-\u89d2\u8272\u540d\u79f0\u524d\u9762\u5e94\u8be5\u6709+\u53f7\u3002\n\u4f7f\u7528Method\u5b57\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5176\u4e2d\u4e00\u79cd\u8eab\u4efd\u9a8c\u8bc1\u65b9\u6cd5-\u6700\u91cd\u8981\u7684\u662f\uff1a\nTrust-\u5141\u8bb8\u65e0\u5bc6\u7801\u8fde\u63a5-\u4e3a\u6765\u81ea\u6570\u636e\u5e93\u670d\u52a1\u5668\u672c\u8eab\u7684\u672c\u5730\u8fde\u63a5\u8bbe\u7f6e\u7684moslty\u3002\n\u5bc6\u7801-\u83b7\u53d6\u7eaf\u5bc6\u7801\u540e\u5141\u8bb8\u8fde\u63a5-\u4e0d\u8981\u5728\u4e0d\u53d7\u4fe1\u4efb\u7684\u7f51\u7edc\u4e2d\u4f7f\u7528-\u66f4\u597d-&&gt;\u4e0d\u8981\u4f7f\u7528\u6b64\u9009\u9879\n\u5982\u679c\u60a8\u4e0d\u60f3\u5728\u6b64\u521b\u5efa\u4efb\u4f55\u9650\u5236\uff0c\u5219\u53ef\u4ee5\u5728\u6570\u636e\u5e93\u548c\u7528\u6237\u5b57\u6bb5\u4e2d\u6307\u5b9a\u7279\u6b8a\u7684\u5355\u8bcdALL\u3002\n\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u7528\u540d\u4e3aauth-options\u7684\u9644\u52a0\u5b57\u6bb5\u6765\u6307\u5b9a\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\uff0c\u7528\u4e8ehostssl\u8fde\u63a5\u7c7b\u578b\u3002\u8fd9\u4e2a\u8bdd\u9898\u5c06\u5728\u53e6\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8ba8\u8bba\u3002\n\u793a\u4f8bPG_HBA\u8bb0\u5f55-\u5141\u8bb8\u6240\u6709\u7528\u6237\u4ece\u6240\u6709IP\u5730\u5740\u8fde\u63a5\u5230\u4efb\u4f55\u6570\u636e\u5e93-\u4ec5\u4f7f\u7528\u5bc6\u7801\u3002\n\u9ed8\u8ba4URI\u8bed\u6cd5-\u60a8\u53ef\u4ee5\u8fd9\u6837\u8fde\u63a5\uff1apsql postgreSQL\uff1a//user\uff1apasswd@host\uff1a5432/dbame\u6216\u4f7f\u7528\u66f4\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a\u4f7f\u7528\u53c2\u6570\u4e2d\u63d0\u4f9b\u7684\u8fde\u63a5\u8be6\u7ec6\u4fe1\u606f\u4ecepsql\u8fde\u63a5\u5230\u8fdc\u7a0b\u6570\u636e\u5e93(\u5bf9\u4e8e\u6765\u81ea0.0.0.0/0\u7684\u8fde\u63a5\uff0c\u7531\u4e8epg_hba.conf\u4e2d\u7684MD5\u65b9\u6cd5\uff0c\u5b83\u5c06\u8981\u6c42\u8f93\u5165\u5bc6\u7801)\uff1a\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570-U\u6307\u5b9a\u4e0e\u6211\u4eec\u5f53\u524d\u4f7f\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u540d\u4e0d\u540c\u7684\u7528\u6237\u540d\u3002\n\u6b64\u5916\uff0c\u6240\u6709\u8fd9\u4e9b\u53c2\u6570\u90fd\u53ef\u4ee5\u4eceshell\u53d8\u91cf\u4e2d\u83b7\u53d6\uff0c\u8fd9\u4e9b\u53d8\u91cf\u7684\u540d\u79f0\u662f\u81ea\u63cf\u8ff0\u7684-\u5982\u679c\u6211\u4eec\u8bbe\u7f6e\u4e86\u6240\u6709\u8fd9\u4e9b\u53d8\u91cf\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528\u7b80\u5355\u7684psql\u547d\u4ee4\u8fdb\u884c\u8fde\u63a5\uff1a\nPostgres=##select version()\uff1bX86_64-PC-linux-gnu\u4e0a\u7684-PostgreSQL12.3\u7248\uff0c\u7f16\u8bd1\uff1aGCC(GCC)8.3.1 20191121(\u7ea2\u5e3d8.3.1-5)\uff0c64\u4f4d(1\u884c)\u3002\nPostgres=##\\Conninfo\u60a8\u5df2\u4f5c\u4e3a\u7528\u6237&#34\uff1bpostgres&#34\uff1b\u8fde\u63a5\u5230\u4e3b\u673a&#34\uff1b10.128.0.2&#34\uff1b\u7aef\u53e3&#34\uff1b5432&#34\uff1b\u4e0a\u7684\u6570\u636e\u5e93&#34\uff1bpostgres&#34\uff1b\u3002\n[postgres@postgres-lab~]$psql-c&#34\uff1bSELECT CURRENT_TIME&#34\uff1b-f CREATE_USER.sql-c&#34\uff1bSELECT CURRENT_TIME&#34\uff1bCURRENT_TIME-14\uff1a14\uff1a26.922453+00(1\u884c)CREATE ROLECREATE ROLECREATE ROLE CURRENT_TIME\u3002\nPostgres=##\\\uff1f\u5e38\u89c4\\\u7248\u6743\u663e\u793aPostgreSQL\u4f7f\u7528\u548c\u5206\u53d1\u6761\u6b3e\\\u4ea4\u53c9\u8868\u89c6\u56fe[\u5217]\u6267\u884c\u67e5\u8be2\u5e76\u5728\u4ea4\u53c9\u8868\u4e2d\u663e\u793a\u7ed3\u679c\\errVerbose\u6700\u5927\u9650\u5ea6\u5730\u663e\u793a\u6700\u65b0\u9519\u8bef\u6d88\u606f\\g[\u6587\u4ef6]\u6216\uff1bEXECUTE QUERY(\u5e76\u5c06\u7ed3\u679c\u53d1\u9001\u5230\u6587\u4ef6\u6216|\u7ba1\u9053)\\gdesc\u63cf\u8ff0\u67e5\u8be2\u7ed3\u679c\uff0c\u800c\u4e0d\u6267\u884c\\gexec EXECUTE QUERY\uff0c\u7136\u540e\u6267\u884c\u5176\u7ed3\u679c\u96c6[\u524d\u7f00]\u4e2d\u7684\u6bcf\u4e2a\u503c\u6267\u884c\u67e5\u8be2\u5e76\u5c06\u7ed3\u679c\u5b58\u50a8\u5728psql\u53d8\u91cf\\gx[file]\u4e2d\uff0c\u4f46\u5f3a\u5236\u6269\u5c55\u8f93\u51fa\u6a21\u5f0f\\q\u9000\u51fapsql\\watch[sec]\u6bcf\u79d2\u6267\u884c\u67e5\u8be2\u67e5\u8be2\u7f13\u51b2\u533a\\e[file][line]\u4f7f\u7528\u5916\u90e8\u7f16\u8f91\u5668\u7f16\u8f91\u67e5\u8be2\u7f13\u51b2\u533a(\u6216\u6587\u4ef6)\\ef[FUNCNAME[line]]\u4f7f\u7528\u5916\u90e8\u7f16\u8f91\u5668\u7f16\u8f91\u51fd\u6570\u5b9a\u4e49\\ev[VIEWNAME[line]]\u4f7f\u7528\u5916\u90e8\u7f16\u8f91\u5668\u7f16\u8f91\u89c6\u56fe\u5b9a\u4e49\\p\u663e\u793a\u67e5\u8be2\u7f13\u51b2\u533a\u7684\u5185\u5bb9\\r\u91cd\u7f6e(\u6e05\u9664)\u67e5\u8be2\u7f13\u51b2\u533a\\s[file]\u663e\u793a\u5386\u53f2\u8bb0\u5f55\u6216\u5c06\u5176\u4fdd\u5b58\u5230\u6587\u4ef6\\w file\u5c06\u67e5\u8be2\u7f13\u51b2\u533a\u5199\u5165\u6587\u4ef6\u3002\nPostgres-##\\h SELECTCommand\uff1aSELECTDescription\uff1a\u4ece\u8868\u6216\u89c6\u56fe\u4e2d\u68c0\u7d22\u884c\u8bed\u6cd5\uff1a[WITH[RECURSIVE]WITH_QUERY[\uff0c...]]SELECT[ALL|DISTINCT[ON(Expression[\uff0c...])]][*|Expression[[as]output_name][\uff0c...]][FROM_Item[\uff0c...]][WHERE\u6761\u4ef6][GROUP BY GROUPING_ELEMENT[\uff0c...]][HAVING CONDITION[\uff0c...]][Window WINDOW_NAME AS(WINDOW_DEFINITION)[\uff0c...]][...]\u3002\nPostgres-##\\h UPDATECommand\uff1aUPDATE\u63cf\u8ff0\uff1a\u66f4\u65b0\u8868\u7684\u884c\u8bed\u6cd5\uff1a[WITH[RECURSIVE]WITH_QUERY[\uff0c...]UPDATE[ONLY]TABLE_NAME[*][[AS]\u522b\u540d]SET{COLUMN_NAME={\u8868\u8fbe\u5f0f|DEFAULT}|(COLUMN_NAME[\uff0c...])=[ROW]({EXPRESS|DEFAULT}[\uff0c...])|(COLUMN_NAME[\uff0c...])=(\u5b50\u9009)}[\uff0c...]\u3002\u3002\nPostgres-##\\h ALTER SYSTEM\u547d\u4ee4\uff1aALTER SYSTEMD\u63cf\u8ff0\uff1a\u66f4\u6539\u670d\u52a1\u5668\u914d\u7f6e\u53c2\u6570\u8bed\u6cd5\uff1aALTER SYSTEM SET CONFIGURATION_PARAMETER{TO|=}{VALUE|&#39\uff1bVALUE&#39\uff1b|DEFAULT}ALTER SYSTEM RESET CONFIGURATION_PARAMETER ALTER SYSTEM RESET ALLURL\uff1ahttps://www.postgresql.org/docs/12/sql-altersystem.html\u3002\n\u4f7f\u7528.pgpass\u6587\u4ef6\u4fdd\u5b58\u5bc6\u7801\uff0c\u4fbf\u4e8e\u4e0ePostgreSQL\u6570\u636e\u5e93\u670d\u52a1\u5668\u8fde\u63a5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5ba2\u6237\u7aef\u5728\u60a8\u7684\u4e3b\u76ee\u5f55\u4e2d\u67e5\u627e.pgpass\u3002\u6b64\u6587\u4ef6\u5728Linux\u4e0a\u5e94\u8be5\u5177\u67090600\u6743\u9650\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eshell\u53d8\u91cfPGPASSFILE\u6765\u66f4\u6539.pgpass\u7684\u4f4d\u7f6e\u3002\u793a\u4f8b.pgpass\u53ef\u80fd\u5982\u4e0b\u6240\u793a-\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u4e0d\u540c\u7684\u8fde\u63a5\u5728\u5176\u4e2d\u6dfb\u52a0\u591a\u884c\uff1a\n\u4e0b\u9762\u7684.pgpass\u4e3a\u7528\u6237postgres\u8bbe\u7f6e\u5bc6\u7801postgres12345\uff0c\u4ee5\u4fbf\u7528\u6237postgres\u5728\u8fde\u63a5\u5230\u7aef\u53e35432\u4e0a\u7684\u4e3b\u673apostgres-lab\u65f6\u8fde\u63a5\u5230\u6570\u636e\u5e93postgres\u3002\u4fdd\u5b58.pgpass\u540e\uff0c\u6211\u4eec\u65e0\u9700\u63d0\u4f9b\u5bc6\u7801\u5373\u53ef\u8fde\u63a5\u5230\u6570\u636e\u5e93\uff1a\n\u670d\u52a1\u6587\u4ef6\u5141\u8bb8\u6211\u4eec\u4fdd\u5b58\u8fde\u63a5\u63cf\u8ff0\u5e76\u6309\u7b80\u5355\u540d\u79f0\u8c03\u7528\u5b83\u4eec\u3002\u670d\u52a1\u6587\u4ef6\u53ef\u4ee5\u6253\u5f00\uff1a\nPostgreSQL\u5ba2\u6237\u7aef\u59cb\u7ec8\u9996\u5148\u67e5\u627e\u8986\u76d6\u7cfb\u7edf\u4e00\u7ea7\u7684\u4e0a\u7ea7\u670d\u52a1\u6587\u4ef6\u3002\u670d\u52a1\u6587\u4ef6\u4e2d\u7684\u793a\u4f8b\u8bb0\u5f55\u5982\u4e0b\u6240\u793a\uff1a\n\u4fdd\u5b58\u670d\u52a1\u6587\u4ef6\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8fde\u63a5psql(\u5bc6\u7801\u5c06\u6765\u81ea.pgpass)\uff1a\n\u8bbe\u7f6e\u4e4b\u540e\uff0c\u8bb0\u5f97\u91cd\u65b0\u52a0\u8f7dPostgreSQL\u670d\u52a1\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u65e5\u5fd7\u6587\u4ef6\u4f4d\u4e8e$PGDATA/log\u76ee\u5f55\u4e2d-\u5728\u6211\u4eec\u7684\u793a\u4f8b\u914d\u7f6e\u4e2d\uff0c\u8be5\u76ee\u5f55\u5c06\u4e3a\uff1a\n[postgres@postgres-lab~]$ls-lah/postgresql/data/log/tal24Kdrwx\u30022 Postgres Postgres 162 7\u67083\u65e500\uff1a00.drwx\u300220Postgres Postgres 4.0K 7\u67083\u65e500\uff1a00.-RW\u30021 Postgres Postgres 153 Jul 3 10\uff1a07 postgresql-Fri.log-rw\u30021 Postgres Postgres 0 6\u670829 00\uff1a00 postgreSQL-Mon.log-rw\u30021 Postgres Postgres 186 Jun 28 21\uff1a46 postgreSQL-Sun.log-rw\u30021 Postgres Postgres 4.7K 7\u67082\u65e517\uff1a00 PostgreSQL-Thu.log-rw\u30021 Postgres Postgres 72 Jun 30 19\uff1a46 postgresql-Tue.log-rw\u30021 Postgres Postgres 0 7\u67081\u65e500\uff1a00 PostgreSQL-Wed.log", "note_en": "By default after instalation and creting database cluster PostgreSQL will listner only on localhost. No remote access will be allowed.\n    [postgres@postgres-lab ~ ]$ netstat -lptnu | grep post (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all. )tcp  0  0 127.0.0.1:5432 0.0.0.0:* LISTEN 1977/postmaster tcp6  0  0 ::1:5432 :::* LISTEN 1977/postmaster\n   [postgres@postgres-lab ~ ]$ ps aux | grep postgrespostgres  1977 0.0 2.5  286388  14864 ? Ss Jun28 0:02 /usr/pgsql-12/bin/postmaster -D /postgresql/datapostgres  1979 0.0 0.2  140768  1360 ? Ss Jun28 0:00 postgres: logger postgres  1981 0.0 0.5  286504  3028 ? Ss Jun28 0:00 postgres: checkpointer postgres  1982 0.0 0.2  286388  1696 ? Ss Jun28 0:03 postgres: background writer postgres  1983 0.0 0.9  286388  5676 ? Ss Jun28 0:03 postgres: walwriter postgres  1984 0.0 0.4  286924  2688 ? Ss Jun28 0:02 postgres: autovacuum launcher\n  [postgres@postgres-lab ~ ]$ cd /postgresql/data/ [postgres@postgres-lab data ]$ ls -lah postgresql.conf-rw-------.  1 postgres postgres 26K Jun  28 21:44 postgresql.conf\n Change in  postgresql.conf parameter  listen_addresses to your server IP or  * to listen on all IP\u2019s available on server:\n [postgres@postgres-lab data ]$ vi postgresql.conf ##------------------------------------------------------------------------------ ## CONNECTIONS AND AUTHENTICATION ##------------------------------------------------------------------------------ ## - Connection Settings -listen_addresses  =  &#39;*&#39;  ## what IP address(es) to listen on;  ## comma-separated list of addresses;  ## defaults to &#39;localhost&#39;; use &#39;*&#39; for all\n Restart PostgreSQL to apply changes - you can do that with  systemctl from  root os user service or with  pg_ctl -D PGDATA restart from  postgres os user:\n   [postgres@postgres-lab ~ ]$ netstat -lptnu | grep post (Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all. )tcp  0  0 0.0.0.0:5432 0.0.0.0:* LISTEN 30161/postmaster tcp6  0  0 :::5432 :::* LISTEN 30161/postmaster\n   We can provide in it information from which  ADDRESS to which  DATABASE on which  USER by what  METHOD we allow connecting. Additionaly we have to provide  TYPE of connection.\n This file resides in same place where  postgresql.conf(we can alter this behavior by setting  pg_hba parameter in  postgresql.conf):\n [postgres@postgres-lab ~ ]$ cd /postgresql/data/ [postgres@postgres-lab data ]$ vi pg_hba.conf ## TYPE DATABASE USER ADDRESS METHOD ## &#34;local&#34; is for Unix domain socket connections onlylocal all all trust ## IPv4 local connections:host all all 127.0.0.1/32 trust ## IPv6 local connections:host all all ::1/128 trust\n   With  DATABASE we can specify database name or use special value  sameuser if database name should be same as name of user that is connecting.\n With  USER we can specify user or role - role name should be preceded by  + sign.\n   With  METHOD field we can set one of authentication methods - most important ones are:\n trust - allow connection without password - moslty set for local connections from database server itself\n   password - allow connection after getting plain password - DO NOT USE in untrusted networks - better -&gt; never use this option\n In  DATABASE and  USER fields you can specify special word  all if you don\u2019t want to create any restrictions here.\n There can be situation when we must use additional field named  auth-options for specyfying details for example for  hostssl connection type. This topic will be covered in another post.\n Sample pg_hba record - allow all users connect to any DB from all IP addresses - only with password\n          Default URI syntax - you can connect like this:  psql postgresql://user:passwd@host:5432/dbame or by more common method: Connect to remote database from  psql with connections details provided in parameters(it will ask for password because of  md5 method in  pg_hba.conf for connections from  0.0.0.0/0):\n  We can also use parameter  -U to specify username different than OS username we currently are using.\n Also all this parameters can be taken from shell variables which names are self descriptive - if we set all of them we can just use plain  psql command to connect:\n         postgres = ## select version(); version -------------------------------------------------------------------------------------------------------- PostgreSQL 12.3 on x86_64-pc-linux-gnu, compiled by gcc  (GCC ) 8.3.1  20191121  (Red Hat 8.3.1-5 ), 64-bit ( 1 row )\n  postgres = ## \\conninfoYou are connected to database  &#34;postgres&#34; as user  &#34;postgres&#34; on host  &#34;10.128.0.2&#34; at port  &#34;5432&#34;.\n       [postgres@postgres-lab ~ ]$ psql -c  &#34;select current_time&#34; -f create_user.sql -c  &#34;select current_time&#34; current_time -------------------- 14:14:26.922453+00 ( 1 row )CREATE ROLECREATE ROLECREATE ROLE current_time -------------------- 14:14:26.926545+00 ( 1 row )\n    postgres = ## \\?General  \\copyright show PostgreSQL usage and distribution terms  \\crosstabview  [COLUMNS ] execute query and display results in crosstab  \\errverbose show most recent error message at maximum verbosity  \\g  [FILE ] or ; execute query  (and send results to file or |pipe )  \\gdesc describe result of query, without executing it  \\gexec execute query,  then execute each value in its result  \\gset  [PREFIX ] execute query and store results in psql variables  \\gx  [FILE ] as  \\g, but forces expanded output mode  \\q quit psql  \\watch  [SEC ] execute query every SEC seconds Query Buffer  \\e  [FILE ]  [LINE ] edit the query buffer  (or file ) with external editor  \\ef  [FUNCNAME  [LINE ] ] edit  function definition with external editor  \\ev  [VIEWNAME  [LINE ] ] edit view definition with external editor  \\p show the contents of the query buffer  \\r reset  (clear ) the query buffer  \\s  [FILE ] display history or save it to file  \\w FILE write query buffer to file\n    postgres-##  \\h SELECTCommand: SELECTDescription: retrieve rows from a table or viewSyntax: [ WITH  [ RECURSIVE  ] with_query  [, ... ]  ]SELECT  [ ALL | DISTINCT  [ ON  ( expression  [, ... ]  )  ]  ]  [ * | expression  [  [ AS  ] output_name  ]  [, ... ]  ]  [ FROM from_item  [, ... ]  ]  [ WHERE condition  ]  [ GROUP BY grouping_element  [, ... ]  ]  [ HAVING condition  [, ... ]  ]  [ WINDOW window_name AS  ( window_definition  )  [, ... ]  ]  [... ]\n postgres-##  \\h UPDATECommand: UPDATEDescription: update rows of a tableSyntax: [ WITH  [ RECURSIVE  ] with_query  [, ... ]  ]UPDATE  [ ONLY  ] table_name  [ *  ]  [  [ AS  ] alias  ] SET  { column_name  =  { expression | DEFAULT  } |  ( column_name  [, ... ]  )  =  [ ROW  ]  (  { expression | DEFAULT  }  [, ... ]  ) |  ( column_name  [, ... ]  )  =  ( sub-SELECT  )  }  [, ... ]  [ FROM from_item  [, ... ]  ]  [ WHERE condition | WHERE CURRENT OF cursor_name  ]  [ RETURNING * | output_expression  [  [ AS  ] output_name  ]  [, ... ]  ]URL: https://www.postgresql.org/docs/12/sql-update.html\n postgres-##  \\h ALTER SYSTEMCommand: ALTER SYSTEMDescription: change a server configuration parameterSyntax:ALTER SYSTEM SET configuration_parameter  { TO |  =  }  { value |  &#39;value&#39; | DEFAULT  }ALTER SYSTEM RESET configuration_parameterALTER SYSTEM RESET ALLURL: https://www.postgresql.org/docs/12/sql-altersystem.html\n     .pgpass file is used to keep passwords for easy of connection with PostgreSQL database servers. By default client looks for  .pgpass in your home directory. This file should on Linux has got  0600 permissions.\n We can change location of  .pgpass by setting shell variable  PGPASSFILE. Sample  .pgpass can look like - of course we can add multiple lines in it for diffrent connections:\n  Below  .pgpass sets password  postgres12345, for user  postgres to database  postgres when connecting to host  postgres-lab on port  5432. After saving  .pgpass we can connect to our database without providing password:\n   Service files allows us to save connection descriptions and call them by simple name. Service file can be on:\n  PostgreSQL client always look first for suer level service file, which overrides system level one. Sample record in service file will look like:\n  After saving service file we can connect with  psql like this(password will come from  .pgpass):\n       After setting it remember to reload PostgreSQL server. Logfile by default is located in  $PGDATA/log directory - in our example configuration that will be:\n [postgres@postgres-lab ~ ]$ ls -lah /postgresql/data/log/total 24Kdrwx------.  2 postgres postgres  162 Jul  3 00:00 .drwx------.  20 postgres postgres 4.0K Jul  3 00:00 ..-rw-------.  1 postgres postgres  153 Jul  3 10:07 postgresql-Fri.log-rw-------.  1 postgres postgres  0 Jun  29 00:00 postgresql-Mon.log-rw-------.  1 postgres postgres  186 Jun  28 21:46 postgresql-Sun.log-rw-------.  1 postgres postgres 4.7K Jul  2 17:00 postgresql-Thu.log-rw-------.  1 postgres postgres  72 Jun  30 19:46 postgresql-Tue.log-rw-------.  1 postgres postgres  0 Jul  1 00:00 postgresql-Wed.log", "posttime": "2020-07-20 03:36:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,psql,quickstart", "title": "PostgreSQL\u5feb\u901f\u5165\u95e8\u6307\u5357-\u8fde\u63a5\u3001\u8fdc\u7a0b\u8bbf\u95ee\u3001psql CLI\u7b49", "title_en": "PostgreSQL quickstart guide \u2013 connecting, remote access, psql CLI and more", "transed": 1, "url": "https://knowledgepill.it/posts/postgresql-basics-guide/", "via": "", "real_tags": ["psql"]}, {"category": "", "categoryclass": "", "imagename": "8ef3b49afff846e6c33fce7eb30a66ce.jpg", "infoid": 1012924, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5979\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u201c\u5404\u4f4d\uff0c\u6211\u662f\u4e00\u4e2a\u53c8\u4e00\u4e2a\u88ab\u52a8\u7684(\u5484\u5484\u903c\u4eba\u7684)\uff0c\u8f7b\u63cf\u6de1\u5199\u7684\uff0c\u4e0d\u4e13\u4e1a\u7684\u56de\u5e94\uff0c\u800c\u4e0d\u662f\u544a\u8bc9\u6bcf\u4e2a\u4eba\u6211\u7684\u516c\u53f8\u5728\u8fd9\u4e2a\u7535\u5546\u5e73\u53f0\u4e0a\u6709\u591a\u4e48\u72d7\u5c4e\u7684\u7ecf\u5386\uff0c\u201d\u5979\u5728\u63a8\u7279\u4e0a\u5199\u9053\u3002\n\u867d\u7136\u542b\u7cca\u5176\u8f9e\uff0c\u4f46\u5979\u5708\u5b50\u91cc\u7684\u4eba\u90fd\u77e5\u9053\u5979\u5728\u8bf4\u4ec0\u4e48\u3002\u67e5\u97e6\u65af\u5728\u8fc7\u53bb\u7684\u4e94\u4e2a\u6708\u91cc\u4e00\u76f4\u5728\u521d\u521b\u7535\u5546\u5e73\u53f0Elliot\u4e0a\u5efa\u7acb\u5979\u7684\u5728\u7ebf\u5e02\u573aShop Latinx\u3002\u5728\u90a3\u51e0\u4e2a\u6708\u91cc\uff0c\u5979\u5728\u591a\u4e2a\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u4e0a\u5927\u8086\u5ba3\u4f20\u516c\u53f8\u3002\u53cd\u8fc7\u6765\uff0cShop Latinx\u88ab\u7528\u4e8e\u6709\u5173\u57c3\u5229\u5965\u7279\u7684\u8425\u9500\u6750\u6599\uff1b\u67e5\u97e6\u65af\u8bf4\uff0c\u5979\u751a\u81f3\u88ab\u8981\u6c42\u8c08\u8bba\u5979\u5728\u57c3\u5229\u5965\u7279\u6295\u8d44\u8005Torch Capital\u7684\u7ecf\u5386\u3002\n\u67e5\u97e6\u65af\u544a\u8bc9\u201c\u73b0\u4ee3\u96f6\u552e\u201d\uff1a\u201c\u6211\u89c9\u5f97\u8fd9\u5c06\u662f\u4e00\u6b21\u975e\u5e38\u68d2\u7684\u4f53\u9a8c\u548c\u4f19\u4f34\u5173\u7cfb\uff0c\u5bf9\u6211\u4eec\u53cc\u65b9\u90fd\u6709\u597d\u5904\u3002\u201d\u76f8\u53cd\uff0c\u5979\u53d1\u73b0\u81ea\u5df1\u8d8a\u6765\u8d8a\u5bf9\u8fd9\u4e9b\u9650\u5236\u611f\u5230\u6cae\u4e27-\u5904\u7406\u4e00\u4e9b\u5c0f\u7684\u6280\u672f\u95ee\u9898\uff0c\u5979\u8bf4\u516c\u53f8\u9700\u8981\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u624d\u80fd\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5982\u679c\u4e0d\u662f\u5b8c\u5168\u65e0\u89c6\u8fd9\u4e9b\u8bf7\u6c42\u7684\u8bdd\u3002\n\u5728\u67e5\u97e6\u65af\u53d1\u51fa\u8fd9\u6761\u63a8\u6587\u7684\u7b2c\u4e8c\u5929\uff0c\u57c3\u5229\u5965\u7279\u7684\u521b\u59cb\u4eba\u585e\u5c14\u5409\u5965\u00b7\u7ef4\u62c9\u65af\u8bfa(Sergio Villase\u00f1or)\u7528\u4e00\u6761\u540d\u4e3a\u201c\u521b\u59cb\u4eba\u8bfe\uff1a\u4ec0\u4e48\u65f6\u5019\u89e3\u96c7\u5ba2\u6237\u201d\u7684\u5e16\u5b50\u56de\u5e94\u3002\u4ed6\u516c\u5e03\u4e86\u4ed6\u3001\u67e5\u97e6\u65af\u548c\u53e6\u4e00\u4f4dShop Latinx\u8054\u5408\u521b\u59cb\u4eba\u4e4b\u95f4\u53d1\u9001\u7684\u8d22\u52a1\u6587\u4ef6\u548c\u7535\u5b50\u90ae\u4ef6\u3002\u4ed6\u5305\u62ec\u5bf9\u516c\u53f8\u6536\u5165\u7684\u4e2a\u4eba\u548c\u8d22\u52a1\u6307\u63a7\uff0c\u58f0\u79f0\u5df2\u7ecf\u4e3a\u5979\u7684\u7b14\u8bb0\u672c\u7535\u8111\u652f\u4ed8\u4e86\u8d39\u7528\uff0c\u5e76\u5c06\u5979\u7684\u73b0\u91d1\u6c47\u7ed9\u4e86\u5979\uff0c\u4ee5\u5e2e\u52a9\u5979\u5408\u5e76\u3002\u5b83\u7684\u7ed3\u8bba\u662f\uff1a\u201c\u4f5c\u4e3a\u4e00\u4e2a\u62c9\u4e01\u88d4\uff0c\u7ec8\u6b62\u4e00\u4e2a\u652f\u6301\u6211\u7684\u79cd\u65cf\u793e\u533a\u7684\u5ba2\u6237\u662f\u4e0d\u5e78\u7684\u3002\u201d\n\u8fd9\u662f\u4e00\u6b21\u5947\u602a\u7684\u78e8\u96be\uff0c\u5728\u7f51\u4e0a\u7684\u516c\u5f00\u73af\u5883\u4e0b\u53d8\u5f97\u4e11\u964b\u8d77\u6765\u3002\u66f4\u5947\u602a\u7684\u662f\uff0c\u57c3\u5229\u5965\u7279\u751a\u81f3\u8fd8\u6ca1\u6709\u4e0a\u5e02\uff0cLatinx\u5546\u5e97\u662f\u5b83\u7684\u6d4b\u8bd5\u7248\u4e4b\u4e00\u3002\u5728\u4ed6\u5e94\u8be5\u63a8\u51fa\u4ed6\u7684\u7535\u5546\u5e73\u53f0\u7684\u4e09\u5468\u524d\uff0c\u7ef4\u62c9\u65af\u8bfa\u5df2\u7ecf\u51b3\u5b9a\u8ba9\u4e00\u4f4d\u65e9\u671f\u91c7\u7528\u8005\u4f7f\u7528BLAST\u3002\n\u8fd9\u4e5f\u8bb8\u662f\u5373\u5c06\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u9884\u5146\u3002Villase\u00f1or\u548c\u4ed6\u7684\u521b\u59cb\u4eba\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u7092\u4f5c\u4ed6\u4eec\u5373\u5c06\u63a8\u51fa\u7684\u5e73\u53f0\u3002\u7136\u800c\uff0c\u8fd9\u4e00\u53d1\u5e03\u4ece\u672a\u53d1\u751f\uff0c\u56e0\u4e3a\u636e\u6d88\u606f\u4eba\u58eb\u900f\u9732\uff0c\u5c3d\u7ba1\u5728\u7f51\u4e0a\u3001\u884c\u4e1a\u56e2\u4f53\u548c\u5df2\u7ecf\u7b7e\u7ea6\u7684\u5546\u5bb6\u4e2d\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u6325\u624b\u548c\u7d22\u8d54\uff0c\u4f46\u8be5\u5e73\u53f0\u4f3c\u4e4e\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u672a\u7ecf\u6d4b\u8bd5\u3002\u57c3\u5229\u5965\u7279\u7684\u5ba3\u4f20\u662f\uff0c\u5c06\u6210\u4e3a\u53cdShopify-\u4e00\u4e2a\u4e13\u6ce8\u4e8e\u65e5\u76ca\u5168\u7403\u5316\u4e16\u754c\u4e2d\u7684\u5c0f\u4f01\u4e1a\u7684\u56fd\u9645\u7535\u5b50\u5546\u52a1\u5e73\u53f0\u3002\u4f46\u7ade\u4e89\u683c\u5c40\u5df2\u7ecf\u6324\u6ee1\u4e86\u50cfBigCommerce\uff0cWooCommerce\u548cMagento\u8fd9\u6837\u7684\u5de8\u5934\u63d0\u4f9b\u7c7b\u4f3c\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u5c3d\u7ba1\u89c4\u6a21\u5f88\u5c0f\uff0c\u4f46\u57c3\u5229\u5965\u7279\u4ee3\u8868\u7740\u7535\u5b50\u5546\u52a1\u9886\u57df\u7684\u4e00\u4e2a\u91cd\u8981\u8f6c\u53d8\u3002\u8fd9\u662f\u4e00\u5bb6\u540e\u7aef\u516c\u53f8\uff0c\u8bd5\u56fe\u5c06\u81ea\u5df1\u6253\u9020\u6210\u65f6\u9ae6\u3001\u65f6\u5c1a\u548c\u4e0e\u65f6\u4ff1\u8fdb\u7684\u54c1\u724c\u3002Magento\u662f\u4e00\u4e2a\u4e0d\u53ef\u77e5\u8bba\u7684\u5e73\u53f0\uff0c\u9664\u4e86\u5de5\u7a0b\u5e08\u548c\u5f00\u53d1\u4eba\u5458\u4e4b\u5916\uff0c\u6bcf\u4e2a\u4eba\u4f3c\u4e4e\u90fd\u770b\u4e0d\u5230\u5b83\uff0c\u800c\u57c3\u5229\u5965\u7279\u5219\u4e58\u7740\u8425\u9500\u7b2c\u4e00\u3001\u4ea7\u54c1\u7b2c\u4e8c\u7684\u76f4\u63a5\u9762\u5411\u6d88\u8d39\u8005\u7684\u6d6a\u6f6e\u3002\u57c3\u5229\u5965\u7279\u7684\u95ee\u9898\u4f3c\u4e4e\u662f\uff0c\u4ea7\u54c1\u4ece\u6765\u6ca1\u6709\u5b8c\u5168\u5230\u8fbe\u5b83\u6240\u8bf4\u7684\u5e94\u8be5\u5230\u8fbe\u7684\u5730\u65b9\u3002\n\u4f46\u81f3\u5c11\u5728\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0c\u6e38\u51fb\u961f\u7684\u7ade\u9009\u6d3b\u52a8\u594f\u6548\u4e86\u3002\u7531\u4e8e\u5728\u7cbe\u76ca\u5962\u4f88\u54c1(Lean Luxe)\u7b49\u884c\u4e1a\u901a\u8baf\u4e0a\u6295\u653e\u5e7f\u544a\uff0cTwitter\u4e0a\u65e0\u6570\u5173\u4e8e\u5fd9\u788c\u548c\u521b\u4e1a\u7684\u5e16\u5b50(\u4ee5\u53ca\u76f8\u5f53\u591a\u7684\u5728\u7ebf\u4e89\u5435)\uff0c\u5546\u4e1a\u884c\u4e1a\u6ce8\u610f\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u66f4\u591a\u7684\u6295\u8d44\u8005\u5f00\u59cb\u5f00\u652f\u7968\uff0c\u7535\u5b50\u5546\u52a1\u4e13\u4e1a\u4eba\u58eb\u7684\u5174\u8da3\u4e5f\u88ab\u6fc0\u8d77\u4e86\u3002\n\u57c3\u5229\u5965\u7279\u7684\u53d1\u5e03\u65e5\u671f\u5b9a\u57286\u670818\u65e5\u3002\u5f53\u8fd9\u4e00\u5929\u5230\u6765\u65f6\uff0c\u7531\u4e8e\u8be5\u516c\u53f8\u58f0\u79f0\u5176\u57fa\u7840\u8bbe\u65bd\u906d\u5230\u62d2\u7edd\u670d\u52a1\u653b\u51fb\uff0c\u63ed\u5e55\u6d3b\u52a8\u9047\u5230\u4e86\u4e00\u4e9b\u969c\u788d\u3002\u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u4f5c\u4e3a\u5bf9\u636e\u79f0\u7684\u88ad\u51fb\u7684\u56de\u5e94\uff0cVillase\u00f1or\u89e3\u96c7\u4e86\u8be5\u516c\u53f8\u7684\u5927\u591a\u6570\u5de5\u7a0b\u5e08-\u5176\u4e2d\u8bb8\u591a\u4eba\u4e0eAndela\u516c\u53f8\u7b7e\u8ba2\u4e86\u5408\u540c\uff0cAndela\u516c\u53f8\u5728\u975e\u6d32\u96c7\u4f63\u7a0b\u5e8f\u5458\uff0c\u5305\u62ec\u5728\u5c3c\u65e5\u5229\u4e9a\u3001\u52a0\u7eb3\u548c\u80af\u5c3c\u4e9a\u3002(\u7ef4\u62c9\u65af\u8bfa\u5bf9\u6b64\u63d0\u51fa\u5f02\u8bae\uff0c\u79f0\u5de5\u7a0b\u5e08\u7684\u5408\u540c\u5728\u5f53\u5929\u7ed3\u675f\uff0c\u4ed6\u6b63\u5728\u62db\u8058\u5168\u804c\u5458\u5de5\u3002)\u3002\u7136\u540e\u4ed6\u5728\u63a8\u7279\u4e0a\u5ba3\u5e03\uff0c\u57c3\u5229\u5965\u7279\u7684\u53d1\u5e03\u5c06\u63a8\u8fdf\u523012\u670825\u65e5\u3002\u51e0\u5929\u540e\uff0c\u4ed6\u5c06\u5ba3\u5e03\u8f9e\u53bb\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u4e00\u804c\u300224\u5c0f\u65f6\u540e\uff0c\u4ed6\u7684\u53e6\u5916\u4e24\u4f4d\u8054\u5408\u521b\u59cb\u4eba\u9a6c\u5c14\u79d1\u00b7\u9a6c\u5170\u8fea\u5179(Marco Marandiz)\u548c\u514b\u83b1\u987f\u00b7\u94b1\u4f2f\u65af(Clayton Chambers)\u5ba3\u5e03\u516c\u53f8\u5c06\u5b8c\u5168\u5173\u95ed\u3002\n\u7ef4\u62c9\u65af\u8bfa\u968f\u540e\u66f4\u6539\u4e86\u4ed6\u7684\u63a8\u7279\u8d26\u53f7\uff0c\u4ed6\u548c\u57c3\u5229\u5965\u7279\u7684\u63a8\u6587\u90fd\u88ab\u5220\u9664\u4e86\u3002Marandiz\u548cChambers\u5728Twitter\u4e0a\u53d1\u5e16\u79f0\uff0c\u4ed6\u4eec\u4e0d\u518d\u4e0e\u8be5\u516c\u53f8\u6709\u5173\u8054\u3002Marandiz\u62d2\u7edd\u5bf9\u672c\u6587\u53d1\u8868\u8bc4\u8bba\uff0c\u94b1\u4f2f\u65af\u6ca1\u6709\u56de\u590d\u8bb0\u8005\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u7ef4\u62c9\u65af\u8bfa\u4e00\u76f4\u8bd5\u56fe\u4fdd\u6301\u4f4e\u8c03\u3002\u5728\u73b0\u4ee3\u96f6\u552e(Modern Retail)\u770b\u5230\u7684\u4e00\u6b21\u79c1\u4eba\u4e0d\u548c\u8c10\u804a\u5929\u4e2d\uff0c\u7b2c\u4e09\u65b9\u5f00\u53d1\u5546\u5bf9\u8fd9\u4e00\u7ed3\u679c\u8868\u793a\u96be\u4ee5\u7f6e\u4fe1\uff1b\u8bb8\u591a\u4eba\u5931\u671b\u5730\u5f97\u77e5\u57c3\u5229\u5965\u7279\u5173\u95ed\u7684\u6d88\u606f\u662f\u901a\u8fc7Twitter\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u5185\u90e8\u7f51\u7edc\u3002\u4e00\u4f4d\u4f1a\u5458\u5199\u9053\uff1a\u201c\u8fd9\u4e9b\u5bb6\u4f19\u53ef\u80fd\u8bf4\u5bf9\u4e86\u4ec0\u4e48\uff0c\u628a\u4ea7\u54c1\u4e2d\u7684\u5783\u573e\u63a8\u9500\u51fa\u53bb\uff0c\u7136\u540e\u62ff\u7740\u6295\u8d44\u8005\u7684\u94b1\u5f80\u4e0b\u7838\u3002\u201d\u5f53\u88ab\u95ee\u53ca\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u65f6\uff0c\u7ef4\u62c9\u65af\u8bfa\u7b80\u5355\u5730\u8bf4\u4ed6\u592a\u75b2\u60eb\u4e86\uff1b\u201c\u5f53\u6211\u5f00\u59cb\u4f7f\u7528\u57c3\u5229\u5965\u7279\u65f6\uff0c\u6211\u5df2\u7ecf\u7b4b\u75b2\u529b\u5c3d\u4e86\uff0c\u201d\u4ed6\u5728\u4e0d\u548c\u8c10\u4e2d\u5199\u9053\u3002\u201c\u6211\u53ea\u662f\u7d2f\u4e86\u3002\u201d\n\u73b0\u5728\uff0c\u51e0\u5929\u540e\uff0c\u7ef4\u62c9\u65af\u8bfa\u544a\u8bc9\u201c\u73b0\u4ee3\u96f6\u552e\u201d\uff0c\u8fd9\u573a\u79c0\u8fd8\u6ca1\u6709\u7ed3\u675f\u3002\u201c\u6211\u4eec\u6b63\u5728\u7528\u65b0\u540d\u79f0\u5bf9\u516c\u53f8\u8fdb\u884c\u8d44\u672c\u91cd\u7ec4\uff0c\u201d\u4ed6\u8bf4\uff0c\u5e76\u8865\u5145\u8bf4\u7ec6\u8282\u4ecd\u5728\u5236\u5b9a\u4e2d.\u3002\u4ed6\u662f\u8463\u4e8b\u4f1a\u4e2d\u552f\u4e00\u7684\u6210\u5458\u3002\u4ed6\u8bf4\uff0c\u516c\u53f8\u73b0\u5728\u53ea\u6709\u4ed6\u548c\u4e00\u4e2a\u7531\u4e94\u540d\u5de5\u7a0b\u5e08\u7ec4\u6210\u7684\u56e2\u961f\u8bd5\u56fe\u6536\u62fe\u6b8b\u5c40\u3002\u4ed6\u8bf4\uff0c\u4e0b\u53f0\u662f\u6574\u4f53\u6218\u7565\u7684\u4e00\u90e8\u5206\u3002\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u5c06\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u786e\u5b9a\u4e00\u4e2a\u53d1\u5e03\u65e5\u671f--\u90a3\u65f6\u6211\u4eec\u89c9\u5f97\u5e73\u53f0\u662f\u5b89\u5168\u7684\u3002\u201d\u201c\u6211\u4ecd\u5c06\u677e\u6563\u5730\u53c2\u4e0e\u5176\u4e2d\u3002\u201d\n\u57c3\u5229\u5965\u7279\u4ece\u5907\u53d7\u8d5e\u8a89\u7684\u521d\u521b\u516c\u53f8\u8f6c\u53d8\u4e3a\u201c\u5165\u9a7b\u5373\u6b7b\u201d\uff0c\u8fd9\u4e00\u8f6c\u53d8\u662f\u663e\u800c\u6613\u89c1\u7684--\u7279\u522b\u662f\u8003\u8651\u5230\u5176\u521b\u59cb\u4eba\u559c\u6b22\u5728\u7f51\u4e0a\u53d1\u8868\u9648\u8bcd\u6ee5\u8c03\u7684\u521b\u59cb\u4eba\u8a00\u8bba\u30026\u67089\u65e5\uff0c\u7ef4\u62c9\u65af\u5c3c\u5965\u5c14\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\n\u4ed6\u662f\u7ec8\u6781\u7f51\u7edc\u8fd0\u8425\u5546\u548c\u7092\u4f5c\u8fbe\u4eba\u3002\u4ed6\u548c\u4ed6\u6700\u8fd1\u7684\u8054\u5408\u521b\u59cb\u4eba\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u620f\u5f04\u4ed6\u4eec\u65b0\u516c\u53f8\u7684\u6210\u7acb\u3002\u4ed6\u4eec\u5728\u63a8\u7279\u4e0a\u53d1\u63a8\u6587\uff0c\u53d1\u5e03\u89c6\u9891\uff0c\u4e3e\u529e\u8c6a\u534e\u665a\u5bb4\u548c\u5f02\u56fd\u60c5\u8c03\u7684\u5ea6\u5047-\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u4e3a\u4e86\u8ba9\u66f4\u591a\u7684\u4eba\u8c08\u8bba\u57c3\u5229\u5965\u7279\u3002\u4ed6\u4eec\u8fd8\u7279\u522b\u5173\u6ce8\u66f4\u5c0f\u3001\u66f4\u591a\u6837\u5316\u7684\u54c1\u724c-\u58f0\u79f0\u4e3a\u7ecf\u5e38\u88ab\u5ffd\u89c6\u7684\u516c\u53f8\u63d0\u4f9b\u7535\u5b50\u5546\u52a1\u652f\u6301\u3002\u8fd9\u5c31\u662f\u5438\u5f15\u4e86\u4e00\u5927\u6279\u5386\u6765\u611f\u89c9\u88ab\u5ffd\u89c6\u7684\u884c\u4e1a\u8fd0\u8425\u5546\u548c\u4f01\u4e1a\u5bb6\u7684\u539f\u56e0\uff1b\u4e00\u4e2a\u540e\u7aef\u7535\u5b50\u5546\u52a1\u5e73\u53f0\u7a81\u7136\u6709\u4e86\u54c1\u724c\u4f20\u9053\u8005\u3002\u63a8\u4ecb\u7684\u91cd\u70b9\u662f\u591a\u6837\u6027\u548c\u884c\u4e1a\u7f3a\u9677\u3002\u8fd9\u80af\u5b9a\u5f15\u8d77\u4e86\u5171\u9e23\uff0c\u81f3\u5c11\u6709\u4e00\u6bb5\u65f6\u95f4\u662f\u8fd9\u6837\u3002\n\u636e\u516b\u4f4d\u4eb2\u8eab\u4e86\u89e3\u8be5\u4e1a\u52a1\u7684\u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u57c3\u5229\u5965\u7279\u7684\u5174\u8870\u53ef\u4ee5\u8ffd\u6eaf\u5230\u5176\u6267\u884c\u957f\u7684\u53cd\u590d\u65e0\u5e38\u7684\u6447\u6446\u3002\u7ef4\u62c9\u65af\u8bfa\u53bb\u5e74\u82b1\u4e86\u4e00\u5e74\u7684\u65f6\u95f4\u8bd5\u56fe\u5efa\u7acb\u548c\u5ba3\u4f20\u4ed6\u7684\u5e73\u53f0\uff0c\u7279\u522b\u662f\u5bfb\u627e\u591a\u6837\u5316\u548c\u53d7\u6b22\u8fce\u7684\u54c1\u724c\u5e03\u9053\u8005\u3002\u4f46\u8be5\u5e73\u53f0\u4ece\u672a\u5b8c\u6210\uff0c\u4e5f\u4e0d\u50cf\u5b83\u58f0\u79f0\u7684\u90a3\u6837\u56fd\u9645\u5316\uff1b\u4f8b\u5982\uff0c\u5b83\u4fc3\u8fdb\u4e86\u901a\u8fc7Strip\u7684\u652f\u4ed8\uff0c\u8fd9\u53ea\u572833\u4e2a\u56fd\u5bb6\u5f97\u5230\u652f\u6301\u3002(Villase\u00f1or\u8868\u793a\uff0c\u5b83\u6b63\u5728\u52aa\u529b\u589e\u52a0\u652f\u4ed8\u9009\u9879\uff0c\u5e76\u63d0\u4f9b\u94b1\u5305\u529f\u80fd\uff0c\u8ba9Strip\u4e0d\u7ecf\u8425\u7684\u56fd\u5bb6\u7684\u5546\u5bb6\u53ef\u4ee5\u8fde\u63a5\u4ed6\u4eec\u7684\u94f6\u884c\u8d26\u6237\uff0c\u76f4\u63a5\u4ece\u57c3\u5229\u5965\u7279\u83b7\u5f97\u4ed8\u6b3e\u3002)\u3002\n\u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u7ef4\u62c9\u65af\u8bfa\u5229\u7528\u4ed6\u7684\u9b45\u529b\u548c\u9b45\u529b\u5728\u7f51\u7edc\u793e\u4ea4\u5708\u4e2d\u8ba8\u597d\u81ea\u5df1\uff0c\u5e76\u5229\u7528\u8fd9\u4e9b\u65b0\u7684\u5173\u7cfb\u53d6\u5f97\u4e86\u804c\u4e1a\u8fdb\u5c55\u3002\u901a\u8fc7\u8fd9\u4e00\u70b9\uff0c\u4ed6\u83b7\u5f97\u4e86\u6295\u8d44\u8d44\u91d1\u548c\u5546\u4e1a\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\uff0c\u8fd9\u6709\u52a9\u4e8e\u63a8\u52a8\u4ed6\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u7684\u8ffd\u968f\u8005\u548c\u4e13\u4e1a\u5f71\u54cd\u529b\u3002\u201c\u770b\u5230\u6709\u4eba\u5f97\u5230\u8fd9\u4e48\u591a\u4eba\u6e34\u671b\u7684\u673a\u4f1a--\u6240\u6709\u7684\u8d44\u91d1\uff0c\u7136\u540e\u53c8\u628a\u5b83\u641e\u7838\uff0c\u6211\u611f\u5230\u975e\u5e38\u9707\u60ca\uff0c\u201d\u603b\u90e8\u4f4d\u4e8e\u62c9\u4e01\u7f8e\u6d32\u7684Mod Food Snacks\u516c\u53f8\u521b\u59cb\u4eba\u5b89\u5fb7\u91cc\u4e9a\u00b7\u57c3\u5c14\u5357\u5fb7\u65af(Andrea Hern\u00e1ndez)\u8bf4\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u8be5\u516c\u53f8\u66fe\u88ab\u9080\u8bf7\u4f7f\u7528\u57c3\u5229\u5965\u7279\u3002\n\u5927\u591a\u6570\u4eba\u90fd\u88ab\u7ef4\u62c9\u65af\u8bfa\u7684\u9b45\u529b\u548c\u5e72\u52b2\u6240\u5438\u5f15\uff0c\u4f46\u7ecf\u5e38\u5bf9\u53d1\u73b0\u9634\u6697\u9762\u611f\u5230\u6cae\u4e27\u3002\u5982\u679c\u6f5c\u5728\u7684\u5546\u4e1a\u4f19\u4f34\u7ed9\u4e86\u4ed6\u4e00\u4e2a\u4ed6\u4e0d\u559c\u6b22\u7684\u7b54\u6848\uff0c\u4ed6\u4f1a\u6253\u7535\u8bdd\u7ed9\u4ed6\u4eec\uff0c\u751f\u6c14\uff0c\u6216\u8005\u5728Twitter\u4e0a\u731b\u70c8\u62a8\u51fb\u4ed6\u4eec\u7684\u56de\u590d\u3002\u4e00\u4f4d\u66fe\u4e0e\u8be5\u5e73\u53f0\u6709\u4e1a\u52a1\u5f80\u6765\u7684\u4eba\u58eb\u8868\u793a\uff1a\u201c\u8fd9\u662f\u6027\u683c\u4e0a\u7684\u8fd9\u4e9b\u66b4\u529b\u8f6c\u53d8\u3002\u201d\u7ef4\u62c9\u65af\u8bfa\u7684\u9776\u5b50\u4e0a\u7684\u4eba\u7ecf\u5e38\u4e0d\u5f97\u4e0d\u7ed9\u8054\u5408\u521b\u59cb\u4eba\u6216\u6295\u8d44\u8005\u53d1\u4fe1\u606f\uff0c\u8ba9\u4ed6\u505c\u4e0b\u6765\u3002\u8be5\u6d88\u606f\u4eba\u58eb\u79f0\uff0c\u201c\u8fd9\u5f88\u5413\u4eba.\u201d\n\u5728\u7ef4\u62c9\u65af\u8bfa\u773c\u91cc\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u662f\u4e3a\u4e86\u5f15\u8d77\u4eba\u4eec\u7684\u6ce8\u610f\u3002\u201c\u6211\u4eec\u7684\u63a8\u7279\u5f62\u8c61\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u662f\u975e\u5e38\u6545\u610f\u7684\u3002\u201d\u6709\u5f88\u591a\u7ade\u4e89\u5bf9\u624b\uff0c\u4ed6\u4eec\u90fd\u6709\u5f88\u5927\u7684\u5e02\u573a\u4efd\u989d\u3002\u5728\u4ed6\u770b\u6765\uff0c\u4e3a\u641c\u7d22\u548c\u793e\u4ea4\u5a92\u4f53\u8425\u9500\u4ed8\u8d39\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u201c\u6211\u4eec\u5728\u865a\u5f20\u58f0\u52bf\u5730\u9886\u5148\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u8fd9\u4f1a\u8ba9\u6211\u4eec\u5236\u9020\u4e00\u4e9b\u566a\u97f3\uff0c\u5f15\u8d77\u4eba\u4eec\u7684\u6ce8\u610f\u3002\u201d\n\u5b83\u662f\u600e\u4e48\u5230\u8fd9\u91cc\u7684\uff1f\u57c3\u5229\u5965\u7279\u6210\u7acb\u4e8e2017\u5e74(\u5c3d\u7ba1\u5b83\u5728\u8fc7\u53bb\u4e00\u5e74\u91cc\u624d\u771f\u6b63\u5438\u5f15\u4e86\u4e1a\u754c\u7684\u6ce8\u610f)\uff0c\u4f5c\u4e3a\u4e00\u6b3e\u201c\u4e13\u6709\u7684\u5168\u65b9\u4f4d\u6e20\u9053\u8f9b\u8fea\u52a0\u8f6f\u4ef6\uff0c\u5546\u5bb6\u53ea\u9700\u70b9\u51fb\u4e00\u4e0b\u6309\u94ae\u5c31\u53ef\u4ee5\u8fdb\u884c\u8de8\u5883\u9500\u552e\u201d\uff0c\u57c3\u5229\u5965\u7279\u5bf9\u5947\u602a\u7684\u3001\u51c6\u6cd5\u5f8b\u7684\u6ce5\u6f6d\u5e76\u4e0d\u964c\u751f\u3002\u4f8b\u5982\uff0c2019\u5e74(\u5f53\u65f6Villase\u00f1or\u6b63\u5728\u8fdb\u884c\u6700\u65b0\u7684\u91cd\u65b0\u53d1\u5e03)\uff0c\u57c3\u5229\u5965\u7279\u8d77\u8bc9\u4e86\u4e00\u4f4d\u540d\u53eb\u5fb7\u91cc\u514b\u00b7\u8f9b(Derek Sine)\u7684\u65e9\u671f\u5546\u4e1a\u5408\u4f5c\u4f19\u4f34\uff0c\u79f0\u5176\u975e\u6cd5\u4f7f\u7528\u57c3\u5229\u5965\u7279\u5546\u6807\u5e76\u63d0\u51fa\u6b3a\u8bc8\u6027\u7d22\u8d54\u3002\u5728\u591a\u6b21\u6cd5\u5f8b\u8fa9\u8bba\u4e2d\uff0cSine\u58f0\u79f0\u81ea\u5df1\u662f\u8054\u5408\u521b\u59cb\u4eba\u3002\n2018\u5e74\uff0c\u8be5\u516c\u53f8\u5ba3\u5e03\u4e86\u4e00\u9879\u4ef7\u503c300\u4e07\u7f8e\u5143\u7684\u79cd\u5b50\u52df\u96c6\u8ba1\u5212\uff0c\u4ee5\u53ca\u4e00\u6279\u65b0\u7684\u9ad8\u7ba1\uff0c\u5305\u62ecLea Solimene\u3001Joey span jers\u548cHass Johnson\u3002(\u4eca\u5929\uff0c\u8fd9\u4e9b\u4eba\u90fd\u6ca1\u6709\u5728\u4ed6\u4eec\u7684LinkedIn\u4e2a\u4eba\u8d44\u6599\u4e2d\u5217\u51fa\u57c3\u5229\u5965\u7279\uff0c\u4e5f\u6ca1\u6709\u4eba\u56de\u5e94\u672c\u6587\u7684\u7f6e\u8bc4\u8bf7\u6c42\u3002)\u3002\u5f53\u65f6\u7684\u65b0\u95fb\u7a3f\u4e0d\u592a\u5173\u6ce8\u54c1\u724c\u63a8\u5e7f\uff0c\u800c\u66f4\u591a\u5730\u5173\u6ce8\u5b83\u63d0\u4f9b\u7684\u4e00\u7cfb\u5217\u5de5\u5177\uff0c\u5305\u62ec\u201c\u6570\u636e\u7ba1\u7406\u3001\u5168\u7403\u53d1\u8d27\u9009\u9879\u3001\u7ffb\u8bd1\uff0c\u4ee5\u53ca\u8fde\u63a5\u6570\u5341\u4ebf\u65b0\u6d88\u8d39\u8005\u6240\u9700\u7684\u6240\u6709\u5de5\u5177\u3002\u201d\n\u4e00\u5e74\u591a\u8fc7\u53bb\u4e86\uff0c\u57c3\u5229\u5965\u7279\u4ece\u672a\u53d1\u5c04\u8fc7\u3002\u7ef4\u62c9\u65af\u8bfa\u8bf4\uff0c\u8be5\u516c\u53f8\u5373\u5c06\u7b7e\u7f72\u9996\u8f6e\u6761\u6b3e\u8bf4\u660e\u4e66\uff0c\u4f46\u56e2\u961f\u201c\u611f\u89c9\u4ea7\u54c1\u4e0d\u4f1a\u53ef\u6301\u7eed\u201d\u3002\u4ed6\u51b3\u5b9a\u5c06\u6700\u521d\u7684\u4e1a\u52a1\u4ece\u201c\u76ee\u5f55\u7ecf\u7406\u201d\u8f6c\u53d8\u4e3a\u5168\u65b0\u7684\u54c1\u724c\u3002\u4ed6\u8bf4\uff0c\u5f53\u65f6\u7684\u56e2\u961f\u201c\u4e0d\u7b26\u5408\u5de5\u7a0b\u9700\u8981\u201d\u3002\n\u7136\u540e\uff0c\u57282019\u5e74\u672b\uff0cMarandiz\u548cChambers\u88ab\u5ba3\u5e03\u4e3a\u8054\u5408\u521b\u59cb\u4eba\uff0c\u540c\u65f6\u8fd8\u8fdb\u884c\u4e86\u65b0\u4e00\u8f6e\u878d\u8d44\u548c\u66f4\u52a0\u4ee5\u6d88\u8d39\u8005\u4e3a\u91cd\u70b9\u7684\u8f6c\u5411\u3002\u5728\u53bb\u5e741\u6708\u7684\u4e00\u4efd\u6cd5\u5ead\u6587\u4ef6\u4e2d\uff0c\u7ef4\u62c9\u65af\u8bfa\u8868\u793a\uff0c\u8be5\u516c\u53f8\u201c\u81ea\u6210\u7acb\u4ee5\u6765\u4ece\u6295\u8d44\u8005\u90a3\u91cc\u7b79\u96c6\u4e86\u8d85\u8fc7370\u4e07\u7f8e\u5143--\u8fd8\u6709160\u4e07\u7f8e\u5143\u60ac\u800c\u672a\u51b3\u3002\u201d\u5728\u540c\u4e00\u4efd\u6587\u4ef6\u4e2d\uff0c\u4ed6\u58f0\u79f0\u5728\u8425\u9500\u4e0a\u82b1\u8d39\u4e8680\u4e07\u7f8e\u5143\uff0c\u4ece600\u5bb6\u7f8e\u56fd\u5546\u5bb6\u90a3\u91cc\u83b7\u5f97\u4e861\u4e07\u7f8e\u5143\u7684\u201c\u4fc3\u8fdb\u5168\u7f8e\u9500\u552e\u7684\u51c0\u6536\u5165\u201d\u3002\u4eca\u5e742\u6708\uff0c\u57c3\u5229\u5965\u7279\u544a\u8bc9Morning Brew\uff0c\u5b83\u7684\u6d4b\u8bd5\u7248\u8ba1\u5212\u4e2d\u67091500\u591a\u4e2a\u5546\u5bb6\u3002(\u5728\u8bc9\u8bbc\u4e2d\uff0cSine\u58f0\u79f0\uff0c2\u6708\u4efd\u53ea\u670945\u5bb6\u5546\u5bb6\u4e0e\u57c3\u5229\u5965\u7279\u7684IP\u5730\u5740\u6709\u5173\u8054\uff1b\u7ef4\u62c9\u65af\u8bfa\u544a\u8bc9\u73b0\u4ee3\u96f6\u552e\uff0c\u8be5\u516c\u53f8\u7684CRM\u5728\u8fc7\u53bb30\u5929\u5185\u8bb0\u5f55\u4e862972\u540d\u7528\u6237\uff0c\u4ed6\u79f0\u8fd9\u662f\u201c\u901a\u8fc7\u6211\u4eec\u7684Typeform\u83b7\u5f97\u7684\u5408\u683c\u7ebf\u7d22\u201d\u3002)\u3002\n\u5c3d\u7ba1\u58f0\u79f0\u81ea2017\u5e74\u4ee5\u6765\u4e00\u76f4\u5728\u5efa\u8bbe\u8be5\u5e73\u53f0\uff0c\u4f46\u6240\u6709\u4eba\u90fd\u5728\u5173\u6ce8\u8fd9\u6b3e\u4ea7\u54c1\u7684\u53d1\u5e03\uff0c\u4f46\u76f4\u5230\u53bb\u5e74\uff0c\u5404\u54c1\u724c\u624d\u5f00\u59cb\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\u3002\u5728\u6700\u65b0\u7684\u8fed\u4ee3\u4e2d\uff0cElliot\u5c06\u81ea\u5df1\u6807\u699c\u4e3a\u4e00\u4e2a\u4e0d\u9700\u8981\u4ee3\u7801\u7684\u540e\u7aef\u89e3\u51b3\u65b9\u6848\uff0c\u4e13\u6ce8\u4e8e\u4e2d\u5c0f\u578b\u56fd\u9645\u54c1\u724c\uff0c\u800cShopify\u7b49\u8f83\u5927\u7684\u53c2\u4e0e\u8005\u5f80\u5f80\u5ffd\u89c6\u4e86\u8fd9\u4e00\u70b9\u3002\u67e5\u97e6\u65af\u66fe\u8bd5\u56fe\u5728Shopify\u4e0a\u5efa\u7acb\u5979\u7684\u7f51\u7ad9\uff0c\u4f46\u53d1\u73b0\u5b83\u592a\u590d\u6742\u4e86\uff0c\u65e0\u6cd5\u6ee1\u8db3\u5979\u7684\u9700\u6c42\u3002\u4e00\u5f00\u59cb\u662f\u63a8\u7279\u4e0a\u7684DM\u8c08\u8bdd\uff0c\u6700\u540e\u7ef4\u62c9\u65af\u8bfa\u627f\u8bfa\u5728\u51e0\u5929\u5185\u5efa\u7acbShoplatinx\uff0c\u4ee5\u8bc1\u660e\u4ed6\u7684\u65b0\u516c\u53f8\u80fd\u505a\u4ec0\u4e48\u3002\n\u867d\u7136\u8be5\u7f51\u7ad9\u786e\u5b9e\u5efa\u6210\u4e86\uff0c\u4f46\u5b83\u5b58\u5728\u8bb8\u591a\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u67e5\u97e6\u65af\u5e0c\u671b\u83dc\u5355\u680f\u4f4d\u4e8e\u7f51\u7ad9\u7684\u5de6\u4fa7\uff0c\u800c\u4e0d\u662f\u53f3\u4fa7\u3002\u57c3\u5229\u5965\u7279\u56e2\u961f\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u624d\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u67e5\u97e6\u65af\u8bf4\uff1a\u201c(\u7ef4\u62c9\u65af\u8bfa)\u4f1a\u8bf4\u4ed6\u6b63\u5728\u505a\u8fd9\u4ef6\u4e8b\uff0c\u5b83\u6b63\u5728\u751f\u4ea7\u4e2d\uff0c\u7136\u540e\u5c31\u4f1a\u53d8\u6210\u5e7d\u7075\u3002\u201d\n\u5728\u6b64\u671f\u95f4\uff0c\u57c3\u5229\u5965\u7279\u4e00\u76f4\u5728\u4e3a6\u6708\u4efd\u7684\u76db\u5927\u53d1\u5e03\u505a\u51c6\u5907\u3002\u53bb\u5e7412\u6708\uff0c\u5b83\u5ba3\u5e03\u4e86\u4e00\u9879\u6bd4\u8d5b\uff0c\u5c06\u6d3e\u9063\u4e00\u5bb6\u5e78\u8fd0\u7684\u516c\u53f8\u524d\u5f80\u6469\u6d1b\u54e5\uff0c\u5728\u6492\u54c8\u62c9\u7684\u4e00\u5ea7\u57ce\u5821\u91cc\u54c1\u9152\u548c\u7528\u9910\uff0c\u201c\u7814\u4e60\u4f60\u7684DTC\u54c1\u724c\u201d\u3002(\u88ab\u9009\u4e2d\u3001\u624e\u6839\u7684\u516c\u53f8\u4f7f\u7528Shopify\u4f5c\u4e3a\u5176DTC\u7535\u5546\u5e73\u53f0\u3002)\u3002\u4eca\u5e742\u6708\u548c3\u6708\uff0c\u57c3\u5229\u5965\u7279\u4e0e\u4e3b\u8981\u7684\u7535\u5b50\u5546\u52a1\u9886\u8896\u5728\u7ebd\u7ea6\u548c\u65e7\u91d1\u5c71\u7684\u8c6a\u534e\u9910\u5385\u4e3e\u529e\u4e86\u201cDTC Drop\u665a\u5bb4\u201d\u3002\u7ef4\u62c9\u65af\u8bfa\u4ecd\u7136\u76f8\u4fe1\u8fd9\u4e9b\u90fd\u662f\u660e\u667a\u4e4b\u4e3e\u3002\u4ed6\u4f30\u8ba1\uff0c\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u6d3b\u52a8\u6bcf\u9879\u6d3b\u52a8\u7684\u6210\u672c\u9ad8\u8fbe6\u4e07\u7f8e\u5143\uff0c\u800c\u8fd9\u4e09\u9879\u6d3b\u52a8\u52a0\u8d77\u6765\u7684\u6210\u672c\u4e0d\u52304\u4e07\u7f8e\u5143\u3002\u201c\u4ed6\u4eec\u4ea7\u751f\u4e86\u9ad8\u8d28\u91cf\u7684\u4f01\u4e1a\u7ebf\u7d22\uff0c\u201d\u4ed6\u8bf4\u3002\n\u5728\u516d\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0c\u7ef4\u62c9\u65af\u8bfa(Villase\u00f1or)\u3001\u9a6c\u5170\u8fea\u65af(Marandiz)\u548c\u94b1\u4f2f\u65af(Chambers)\u4e09\u4eba\u8bd5\u56fe\u56f4\u7ed5\u540e\u7aef\u7535\u5b50\u5546\u52a1\u89e3\u51b3\u65b9\u6848\u5efa\u7acb\u793e\u4f1a\u58f0\u671b\u3002\u4ed6\u4eec\u62cd\u6444\u4e86\u81ea\u5df1\u4e3a\u6295\u8d44\u8005\u4f1a\u8bae\u505a\u51c6\u5907\uff0c\u5f00\u8f66\uff0c\u716e\u5496\u5561-\u8bd5\u56fe\u64ad\u653e\u65f6\u5c1a\u7248\u7684\u54c1\u724c\u900f\u660e\u5ea6\u30022\u670813\u65e5\u7684\u4e00\u6bb5\u89c6\u9891\u8bb0\u5f55\u4e86\u57c3\u5229\u5965\u7279\u56e2\u961f\u8d70\u51fa\u529e\u516c\u5ba4\u53bb\u5403\u70b9\u4e1c\u897f\uff1b\u4e24\u5929\u524d\u7684\u53e6\u4e00\u6bb5\u89c6\u9891\u663e\u793a\uff0c\u94b1\u4f2f\u65af\u5750\u5728\u529e\u516c\u6905\u4e0a\u8c08\u8bba\u5ea6\u5047\u548c\u51fa\u5dee\u56de\u6765\u7684\u4e8b\u60c5\u3002\u201c\u91cc\u7a0b\u7891\u611f\u89c9\u66f4\u5927\uff0c\u201d\u4ed6\u8bf4\uff0c\u4f3c\u4e4e\u662f\u4e0d\u5047\u601d\u7d22\u7684\uff0c\u4e0e\u4ed6\u4e4b\u524d\u8c08\u8bba\u7684\u65e0\u5173\u3002\n\u5c3d\u7ba1\u5927\u5f20\u65d7\u9f13\uff0c\u4f46\u6700\u7ec8\u4ea7\u54c1\u4ece\u672a\u5b9e\u73b0\u3002\u67e5\u97e6\u65af\u7ee7\u7eed\u8bd5\u56fe\u4e3a\u5979\u7684\u5e02\u573a\u4fee\u590d\u529f\u80fd\u3002\u5979\u8bf4\uff0c\u539f\u56e0\u5f88\u591a\uff0c\u4ece\u65e0\u6cd5\u5c06\u65b0\u4ea7\u54c1\u52a0\u8f7d\u5230\u5979\u7684\u7f51\u7ad9\uff0c\u5230\u5ba2\u6237\u5730\u5740\u81ea\u52a8\u586b\u5199\u5bfc\u81f4\u4ed6\u4eec\u65e0\u6cd5\u5b8c\u6210\u8ba2\u5355\u7684\u6545\u969c\u3002\n\u5176\u4ed6\u6f5c\u5728\u5ba2\u6237\u4e5f\u5bf9\u516c\u53f8\u7684\u53d1\u5c55\u611f\u5230\u56f0\u60d1\u3002\u4f8b\u5982\uff0c\u57c3\u5c14\u5357\u5fb7\u65af\u65e0\u6cd5\u4f7f\u7528\u57c3\u5229\u5965\u7279\uff0c\u56e0\u4e3a\u5b83\u53ea\u5141\u8bb8\u901a\u8fc7\u6761\u7eb9\u4ed8\u6b3e\uff0c\u8fd9\u4e0e\u5979\u7684\u7956\u56fd\u6d2a\u90fd\u62c9\u65af\u4e0d\u517c\u5bb9\u3002\u8be5\u516c\u53f8\u6b63\u5728\u5bfb\u627e\u56fd\u9645\u5408\u4f5c\u4f19\u4f34\uff0c\u5c3d\u7ba1\u4f7f\u7528\u7684\u652f\u4ed8\u89e3\u51b3\u65b9\u6848\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u56fd\u9645\u5316\u3002\u5979\u7ecf\u5e38\u95ee\u4ed6\u4eec\u4ec0\u4e48\u65f6\u5019\u624d\u80fd\u652f\u6301\u5979\u7684\u7f51\u7ad9\uff0c\u7ef4\u62c9\u65af\u8bfa\u4f1a\u8bf4\uff0c\u516c\u53f8\u53ea\u662f\u5728\u7b49\u5f85\u6279\u51c6\u3002\u8be5\u516c\u53f8\u5728\u63a8\u7279\u4e0a\u53cd\u590d\u544a\u8bc9\u5979\uff0c\u6dfb\u52a0\u65b0\u7684\u652f\u4ed8\u89e3\u51b3\u65b9\u6848\u5df2\u8fdb\u5165\u6700\u540e\u9636\u6bb5\uff0c\u201c\u4f46\u8fd9\u4ece\u672a\u53d1\u751f\u8fc7\uff0c\u201d\u5979\u8bf4\u3002\n\u7ef4\u62c9\u65af\u8bfa\u73b0\u5728\u8868\u793a\uff0c6\u670818\u65e5\u7684\u7ad9\u53f0\u672c\u4e0d\u5e94\u8be5\u662f\u5b8c\u7f8e\u7684\u3002\u4ed6\u8868\u793a\uff1a\u201c\u6211\u4eec\u660e\u767d\uff0c\u5728\u53d1\u5e03\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u63a8\u51fa\u6211\u4eec\u7684(\u6700\u4f4e\u53ef\u884c\u4ea7\u54c1)\u3002\u201d\u8be5\u516c\u53f8\u201c\u5df2\u7ecf\u5728\u4e3a10\u670818\u65e5\u7684\u53d1\u5e03\u91cd\u5efa\u6211\u4eec\u7684\u65b0\u5e73\u53f0\u201d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6839\u636eVillase\u00f1or\u7684\u8bf4\u6cd5\uff0c\u8be5\u516c\u53f8\u53ea\u662f\u8bd5\u56fe\u4e3a\u590f\u5b63\u51c6\u5907\u4e00\u6b3e\u57fa\u672c\u7684\u4ea7\u54c1\uff0c\u800c\u4e0d\u662f\u51e0\u4e2a\u6708\u6765\u627f\u8bfa\u7684\u5b8c\u6574\u7248\u672c\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u57c3\u5229\u5965\u7279\u7684\u57fa\u7840\u8bbe\u65bd\u6709\u4e00\u4e2a\u81f4\u547d\u7684\u7f3a\u9677\uff0c\u5f71\u54cd\u7740\u5b83\u7684\u6240\u6709\u5ba2\u6237\uff1a\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff0c\u5b83\u7684\u6e90\u4ee3\u7801\u663e\u793a\u4e86\u6bcf\u7b14\u8d2d\u4e70\u7684\u5ba2\u6237\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u8bb8\u591a\u7f51\u5e97\u8981\u4e48\u4e0b\u7ebf\uff0c\u8981\u4e48\u4e00\u76f4\u5728\u4e89\u5148\u6050\u540e\u5730\u8fc1\u79fb\u5230\u65b0\u7684\u5e73\u53f0\u3002\n\u57c3\u5229\u5965\u7279\u627f\u8ba4\u4e86\u8fd9\u4e2a\u9519\u8bef\u3002\u201c\u6211\u4eec\u786e\u5b9e\u66dd\u5149\u4e86\u4e00\u4e2a\u672c\u4e0d\u5e94\u8be5\u66dd\u5149\u7684API\uff0c\u201d\u7ef4\u62c9\u65af\u8bfa\u8bf4\u3002\u8fd9\u662f\u7531\u4e8e\u5728\u56e2\u961f\u201c\u8d2c\u4f4e\u4e86\u6211\u4eec\u4ee3\u7801\u7684\u4e24\u4e2a\u90e8\u5206\u201d\u65f6\u53d1\u751f\u7684\u4e00\u4e2a\u5de5\u7a0b\u9519\u8bef\u3002\n\u67e5\u97e6\u65af\u8bf4\uff1a\u201c\u5728\u4eca\u5e74\u5e74\u521d\uff0c\u6211\u4f1a\u6709\u6700\u4e25\u91cd\u7684\u7126\u8651\u3002\u201d\u201c\u8fd9\u4e0d\u80fd\u5f88\u597d\u5730\u53cd\u6620\u6211\u7684\u4e1a\u52a1\u3002\u201d\n\u65e2\u7136\u5c18\u57c3\u843d\u5b9a\uff0c\u95ee\u9898\u4ecd\u7136\u591a\u4e8e\u7b54\u6848\u3002\u7b2c\u4e09\u65b9\u5f00\u53d1\u4eba\u5458\u548c\u524d\u5458\u5de5\u611f\u5230\u9707\u60ca\uff0c\u8bb8\u591a\u4eba\u901a\u8fc7\u793e\u4ea4\u5a92\u4f53\u5e16\u5b50\u4e86\u89e3\u5230\u4e00\u5bb6\u516c\u53f8\u4f3c\u4e4e\u6b63\u5728\u6d88\u4ea1\u3002\n\u67e5\u97e6\u65af\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u65f6\u95f4\u5728\u4e00\u4e2a\u672a\u7ecf\u6d4b\u8bd5\u7684\u5e73\u53f0\u4e0a\u5efa\u7acb\u4e86\u81ea\u5df1\u7684\u4e1a\u52a1\uff0c\u73b0\u5728\u5979\u628a\u81ea\u5df1\u7684\u4e1a\u52a1\u653e\u5728\u4e86Shopify\u4e0a\u3002\u67e5\u97e6\u65af\u8bf4\uff1a\u201c\u6211\u611f\u5230\u975e\u5e38\u5c34\u5c2c\u3002\u201d\u201c\u6211\u62e5\u62a4\u4ed6\u4eec--\u6211\u8ba9\u4ed6\u4eec\u8fdb\u5165\u6211\u7684\u793e\u533a\u3002\u201d", "note_en": "\u201cY\u2019all, I am one more passive [aggressive], gaslighting, unprofessional response away from telling everyone what a shit experience I\u2019m having on this e-commerce platform my company is on,\u201d she tweeted.\n While cryptic, those within her circle knew what she was talking about. Chavez had spent the last five months building her online marketplace, Shop Latinx, on the startup e-commerce platform Elliot. During those months, she hyped the company on multiple social media platforms. In turn, Shop Latinx was used in marketing materials about Elliot; Chavez said she had even been asked to speak about her experience with Elliot investors Torch Capital.\n  \u201cI felt like this would be a very dope experience and partnership that would benefit both of us,\u201d Chavez told Modern Retail. Instead, she found herself increasingly frustrated by the limitations \u2014 dealing with small technical problems that she said the company would take months to fix, if not completely ignore the requests.\n A day after Chavez sent the tweet, Elliot\u2019s founder, Sergio Villase\u00f1or, responded with a thread called: \u201cFounder Lesson: When to Fire a Customer.\u201d He posted financial documents and emails sent between him, Chavez and another Shop Latinx co-founder. He included personal and financial allegations about the company\u2019s revenue, claiming to have paid for her laptop and wiring her cash to help her incorporate. It concluded: \u201cAs a Latino, it\u2019s unfortunate to terminate a customer that supports a community I\u2019m racially bound to.\u201d\n It was a strange ordeal, made ugly by the online public setting. Even stranger was the fact that Elliot had not even gone to market yet, and Shop Latinx was one of its beta testers. Three weeks before he was supposed to unveil his e-commerce platform, Villase\u00f1or had decided to put an early adopter on blast.\n This was perhaps a harbinger of what was to come. Villase\u00f1or and his founders spent months hyping their soon-to-launch platform. The launch, however, never happened, as the platform, according to sources, seemed largely untested despite much handwaving and claims made online, in industry groups and to the merchants already signed on. Elliot, the pitch went, was going to be the anti-Shopify \u2014 an international e-commerce platform that focused on smaller businesses in an increasingly globalized world. But the competitive landscape was already crowded with giants like BigCommerce, WooCommerce and Magento offering similar solutions.\n Despite being small, Elliot represented an important shift in the e-commerce space. It was a back-end company trying to brand itself as hip, current and with the times. Where Magento was an agnostic platform that seemed invisible to everyone but the engineers and developers, Elliot was riding the direct to consumer wave of marketing coming first and product being second. The problem for Elliot, it seemed, was that product never quite got to where it said it should be.\n  But for at least a few months, the guerilla campaigning worked. Thanks to advertising placements in industry newsletters like Lean Luxe, myriad Twitter threads about hustling and entrepreneurship (as well as quite a few online spats), the commerce industry took notice, more investors began writing checks, and e-commerce professionals\u2019 interests were getting piqued.\n Elliot\u2019s launch date was set for June 18. When the day came, due to what the company claimed was a denial of service attack on its infrastructure, the unveiling hit some snags. In response to the alleged attack, sources said Villase\u00f1or fired most of the company\u2019s engineers \u2014 many of whom were on contract with the company Andela, which hires coders in Africa, including in Nigeria, Ghana and Kenya. (Villase\u00f1or contested this, saying that the engineers\u2019 contracts ended that day and he was in the process of hiring full-time staff.) He then announced on Twitter that Elliot\u2019s launch would be pushed until December 25. A few days later, he would announce that he was stepping down as CEO of the company. And 24 hours after that, his two other co-founders, Marco Marandiz and Clayton Chambers, announced that the company would shut down completely.\n Villase\u00f1or then changed his Twitter handle and both his and Elliot\u2019s tweets were scrubbed. Marandiz and Chambers posted on Twitter that they are no longer associated with the company. Marandiz declined to comment for this article and Chambers did not respond to a request for comment.\n Meanwhile, Villase\u00f1or has tried to keep a low profile. In a private Discord chat viewed by Modern Retail, third-party developers expressed disbelief at the outcome; Many were disappointed to learn the news about Elliot\u2019s closing via Twitter, not via internal networks. \u201cThese guys may be on to something, market the shit out of product and then dip with the investor money,\u201d wrote one member. When asked what happened, Villase\u00f1or simply said he was too exhausted; \u201cI was burnt out when I started Elliot,\u201d he wrote on the Discord. \u201cI just got tired.\u201d\n Now, a few days later, Villase\u00f1or told Modern Retail the show isn\u2019t over. \u201cWe are recapitalizing the company under a new name,\u201d he said, adding that the details are still being worked out. He is the only member of the board. The company is now just him and a team of five engineers trying to pick back up the pieces, he said. Stepping down, he said, was part of the overall strategy. \u201cWe will set out a launch date later in the year \u2014 when we feel the platform is secure,\u201d he said. \u201cI will still be loosely involved.\u201d\n Elliot\u2019s shift from heralded startup to Dead On Arrival was stark \u2014 especially given its founder\u2019s proclivity for platitudinous online founder-speak. On June 9, Villase\u00f1or tweeted:\n    He was the ultimate online operator and hype man. He and his most recent co-founders had spent months teasing the launch of their new company. They tweeted, posted videos and hosted luxurious dinners and exotic getaways \u2014 all to get more people talking about Elliot. They also focused specifically on smaller, more diverse brands \u2014 claiming to offer e-commerce support for companies that are often overlooked. This was what helped attract a slew of industry operators and entrepreneurs who have historically felt ignored; a back-end e-commerce platform suddenly had brand evangelists. The pitch focused on diversity and industry shortcomings. And it certainly resonated, at least for a while.\n According to eight sources with personal knowledge of the business, Elliot\u2019s rise and fall could be traced back to the capricious swings of its chief executive. Villase\u00f1or spent the last year trying to build and hype his platform, specifically seeking out diverse and popular brand evangelists. But the platform was never finished, and not as international as it claimed to be; it facilitated payments through Stripe, for example, which is only supported in 33 countries. (Villase\u00f1or said that it is working to add payment options and that it offers a wallet feature where merchants in countries that Stripe doesn\u2019t operate can connect their bank accounts to receive payments directly from Elliot.)\n Villase\u00f1or used his charm and charisma to ingratiate himself in online social circles, sources said, and leveraged those new relationships to make professional inroads. Through this, he landed investment dollars and business partnerships, which helped propel his social media following and professional clout. \u201cIt\u2019s very appalling to me to see someone get the opportunity that so many people crave \u2014 all that funding, and then blow it up,\u201d said Andrea Hern\u00e1ndez, founder of Mood Food Snacks, a Latin America-based company that was courted to use Elliot earlier this year.\n Most people were drawn in by Villase\u00f1or\u2019s magnetism and drive, but were often dismayed to find a darker side. If a potential business partner gave him an answer he didn\u2019t like, he would call them, angry, or take to Twitter to blast their replies. \u201cIt was these violent switches in personality,\u201d said one person who had done business with the platform. People in Villase\u00f1or\u2019s crosshairs would often have to message co-founders or investors to get him to stop. \u201cIt\u2019s scary,\u201d the source said.\n In Villase\u00f1or\u2019s eyes, the idea was to get people\u2019s attention. \u201cOur Twitter persona,\u201d he said, \u201cwas very intentional.\u201d There were a lot of competitors, and they all had serious marketshare. It didn\u2019t make sense in his eyes to pay for search and social media marketing. \u201cWe were leading with bravado,\u201d he said. \u201cThat would allow us to make some noise and get attention.\u201d\n How did it get here? Founded in 2017 (although it really only captured industry attention in the past year) as a \u201cproprietary Omnichannel syndication software that is enabling merchants to sell cross border with a click of a button,\u201d Elliot is no stranger to odd, quasi-legal quagmires. For example, in 2019 (when Villase\u00f1or was in the midst of its latest relaunch) Elliot sued an early business partner named Derek Sine for allegedly illegally using the Elliot trademark and making fraudulent claims. In multiple legal back-and-forths, Sine claimed to be a co-founder.\n In 2018, the company announced a $3 million seed rounding along with a new set of executives, including Lea Solimene, Joey Spanjers and Hass Johnson. (Today, none of these people list Elliot on their LinkedIn profiles and none responded to requests for comment for this article.) The press release at the time focused less on the branding and more on the set of tools it provided including \u201cdata management, global shipping options, translations, and all the tools needed to connect to billions of new consumers.\u201d\n Over a year went by, and Elliot never launched. Villase\u00f1or said that company was about to sign a Series A term sheet, but the team \u201cdidn\u2019t feel like the product would be sustainable.\u201d He decided to pivot the original business away from being a \u201ccatalog manager,\u201d and rebrand entirely. The team at the time \u201cdidn\u2019t fit the engineering needs,\u201d he said.\n Then, in late 2019, Marandiz and Chambers were announced as co-founders, along with a new round of funding and a more consumer-focused pivot. In a court document from last January, Villase\u00f1or said the company \u201craised over $3.7 million from investors since its origination \u2014 with $1.6 million pending.\u201d In that same document, he claimed to have spent $800,000 on marketing, generating $10,000 in \u201cnet revenue facilitating sales throughout the United States,\u201d from 600 U.S.-based merchants. In February, Elliot  told Morning Brew that it had over 1,500 merchants in its beta program. (In the lawsuit, Sine alleged that in February there were only 45 merchants affiliated with Elliot\u2019s IP address; Villase\u00f1or told Modern Retail the company\u2019s CRM recorded 2,972 users within the last 30 days, which he described as \u201ca qualified lead that comes through our typeform.\u201d)\n All eyes on the launch Despite claiming to have been building the platform since 2017, only in the last year have brands began to test it out. Elliot, in its latest iteration, billed itself as a no-code-required back-end solution that focused on small-to-medium-sized international brands often overlooked by bigger players like Shopify. Chavez had tried to build her website on Shopify but found it too complex for what she needed. What began as a Twitter DM conversation, concluded with Villase\u00f1or promising to build Shoplatinx in a matter of days as a way to prove out what his new company could do.\n While the site did get built, it had many problems. For example, Chavez wanted the menu bar on the left-hand side of the website rather than the right. It took many months for the Elliot team to fix that. \u201c[Villase\u00f1or] would say he\u2019s working on it, it\u2019s in production,\u201d said Chavez, \u201cand then would ghost.\u201d\n All the while, Elliot was preparing for its big June launch. In December, it announced a contest that would send one lucky company to Morocco to \u201cworkshop your DTC brand\u201d while being wined and dined in a Saharan chateau. (The company chosen, Rooted, uses Shopify as its DTC e-commerce platform.) In February and March Elliot hosted \u201cDTC Drop Dinners,\u201d with key e-commerce leaders at swanky New York and San Francisco restaurants. Villase\u00f1or still believes these to be smart moves. Email marketing campaigns, he estimated, cost as much as $60,000 a campaign, and all three of these events combined cost less than $40,000. \u201cThey generated quality enterprise leads,\u201d he said.\n Over the course of six months, the trio \u2014 Villase\u00f1or, Marandiz and Chambers \u2014 tried to build a social cachet surrounding a back-end e-commerce solution. They filmed themselves preparing for investor meetings, driving in cars, making coffee \u2014 an attempt to broadcast a hip version of brand transparency. One video, from February 13, follows the Elliot team walking out of their office going to get a bite to eat; another from two days earlier shows Chambers sitting in an office chair talking about coming back from vacation and business. \u201cThe milestones feel bigger,\u201d he says, seemingly unprompted and unrelated to what he was talking about earlier.\n Despite the fanfare, the final product never materialized. Chavez continued to try and get features fixed for her marketplace. It was everything from not being able to load new products to her website, she said, to a glitch with customer\u2019s addresses auto-filling causing them to not complete orders.\n Other potential clients too felt mystified by the company\u2019s development. Hern\u00e1ndez was unable to use Elliot, for example, because it only allowed for payments via Stripe, which isn\u2019t compatible with her home country of Honduras. The company was seeking out international partners, despite using a payments solution that wasn\u2019t truly international. She frequently asked when they would be able to support her site, and Villase\u00f1or would say that the company was just waiting on an approval. The company repeatedly told her on Twitter that it was in the final phases of adding new payment solutions, \u201cbut it never happened,\u201d she said.\n Villase\u00f1or now says that the platform wasn\u2019t supposed to be perfect on June 18. \u201cWe understood that going into launch we would be launching our [minimum viable product],\u201d he said. The company was \u201calready in the process of rebuilding our new platform for an October 18 launch.\u201d Which is to say that, according to Villase\u00f1or, the company was just trying to have a barebones product ready for summer, not the full version that had been promised for months.\n Meanwhile, Elliot\u2019s very infrastructure had one fatal flaw affecting all its clients: for a period of time its source code showed the customer information for every purchase made. As a result, many online stores went either offline or have been scrambling to migrate to a new platform.\n Elliot admits to this error. \u201cWe did have an API exposed that shouldn\u2019t have been, said Villase\u00f1or. It was due to an engineering error that happened while the team \u201cdepreciated two parts of our code.\u201d\n \u201cIn the beginning of the year, I would have the worst anxiety,\u201d said Chavez. \u201cIt was a poor reflection of my business.\u201d\n Now that the dust has settled, there are still more questions than answers. Third-party developers and former employees felt whiplash, many learning of a company\u2019s seeming demise over social media posts.\n Chavez, who spent months building her business on an untested platform is now putting her business on Shopify. \u201cI feel the worst embarrassment,\u201d said Chavez. \u201cI championed them \u2014 I let them in my community.\u201d", "posttime": "2020-07-20 03:14:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5546,platform", "title": "\u7535\u5546\u5e73\u53f0\u57c3\u5229\u5965\u7279\u662f\u5982\u4f55\u8dcc\u56de\u5730\u7403\u7684", "title_en": "How e-commerce platform Elliot fell back down to Earth", "transed": 1, "url": "https://www.modernretail.co/startups/how-e-commerce-platform-elliot-fell-back-down-to-earth/", "via": "", "real_tags": ["\u7535\u5546", "platform"]}, {"category": "", "categoryclass": "", "imagename": "8806e4dfcc36cb5543e2a5d05a3e8c88.jpg", "infoid": 1012922, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u53d1\u8868\u539f\u8457\u7684\u6742\u5fd7\u59d4\u6258\u8fdb\u884c\u7684\u4e00\u7bc7\u8bc4\u8bba\uff0c2020\u5e743\u6708\u7684\u4e00\u7bc7\u8bba\u6587\u5f15\u53d1\u4e86\u957f\u8fbe\u6570\u6708\u7684\u5173\u4e8e\u7f9f\u6c2f\u55b9\u662f\u5426\u6709\u6548\u6cbb\u7597\u65b0\u51a0\u80ba\u708e\u7684\u6124\u6012\u8fa9\u8bba\uff0c\u8be5\u8bba\u6587\u5b58\u5728\u201c\u4e25\u91cd\u7684\u65b9\u6cd5\u5b66\u7f3a\u9677\u201d\uff0c\u201c\u4e0d\u80fd\u8bc1\u660e\u5173\u4e8e\u7f9f\u6c2f\u55b9\u5bf9\u65b0\u51a0\u80ba\u708e\u7597\u6548\u7684\u6df1\u8fdc\u7ed3\u8bba\u662f\u5408\u7406\u7684\u201d\u3002\n\u8377\u5170\u83b1\u987f\u5927\u5b66\u533b\u5b66\u4e2d\u5fc3\u7684Frits Rosendaal\u53d1\u8868\u4e86\u8fd9\u4e9b\u8bc4\u8bba\uff0c\u8fd9\u662f\u56fd\u9645\u6297\u83cc\u7d20\u5316\u7597\u534f\u4f1a(ISAC)\u59d4\u6258\u8fdb\u884c\u7684\u4e00\u9879\u5ba1\u67e5\u7684\u4e00\u90e8\u5206\uff0cISAC\u4e0eElsiever\u4e00\u8d77\u51fa\u7248\u4e86\u8fd9\u672c\u6742\u5fd7\u3002ISAC\u57284\u6708\u4efd\u53d1\u5e03\u4e86\u4e00\u4efd\u5173\u4e8e\u8fd9\u7bc7\u8bba\u6587\u7684\u58f0\u660e\uff0c\u8bf4\u5b83\u201c\u6ca1\u6709\u8fbe\u5230[\u56fd\u9645\u6297\u83cc\u5316\u7597\u534f\u4f1a]\u9884\u671f\u7684\u6807\u51c6\u3002\u201d\n\u5728\u65b9\u6cd5\u4e0a\u5b58\u5728\u91cd\u5927\u7f3a\u9677\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5373\u4f7f\u4e0d\u662f\u5b8c\u5168\u7f3a\u4e4f\u4fe1\u606f\uff0c\u4e5f\u51e0\u4e4e\u662f\u4e00\u65e0\u6240\u77e5\u3002\u56e0\u6b64\uff0c\u62a5\u544a\u7684\u8bed\u6c14\u5c06\u6b64\u4f5c\u4e3a\u7f9f\u57fa\u6c2f\u55b9\u7597\u6548\u7684\u8bc1\u636e\uff0c\u751a\u81f3\u63a8\u8350\u4f7f\u7528\uff0c\u4e0d\u4ec5\u6beb\u65e0\u6839\u636e\uff0c\u800c\u4e14\u8feb\u4e0d\u53ca\u5f85\u5730\u8981\u6c42\u5bf9\u65b0\u51a0\u80ba\u708e\u8fdb\u884c\u6cbb\u7597\uff0c\u518d\u52a0\u4e0a\u7f9f\u57fa\u6c2f\u55b9\u6f5c\u5728\u7684\u4e25\u91cd\u526f\u4f5c\u7528\uff0c\u5b8c\u5168\u662f\u4e0d\u8d1f\u8d23\u4efb\u7684\u3002\n\u8fd9\u662f\u4e00\u4efd\u4fe1\u606f\u91cf\u4e0d\u5927\u7684\u624b\u7a3f\uff0c\u5728\u65b9\u6cd5\u8bba\u4e0a\u5b58\u5728\u4e25\u91cd\u7f3a\u9677\u3002\u8fd9\u4e9b\u7ed3\u679c\u5e76\u4e0d\u80fd\u8bc1\u660e\u5173\u4e8e\u7f9f\u6c2f\u55b9\u5bf9\u65b0\u51a0\u80ba\u708e\u7597\u6548\u7684\u6df1\u8fdc\u7ed3\u8bba\u662f\u6b63\u786e\u7684\uff0c\u5728\u8fd9\u4f4d\u8bc4\u8bba\u5bb6\u770b\u6765\uff0c\u4e5f\u5b8c\u5168\u4e0d\u80fd\u8bc1\u660e\u4efb\u4f55\u7ed3\u8bba\u662f\u6b63\u786e\u7684\u3002\n\u5728\u8be5\u6742\u5fd7\u7684\u53e6\u4e00\u7bc7\u8bc4\u8bba\u4e2d\uff0c\u8377\u5170Radbouumc\u7684Heiman Wertheim\u548c\u540c\u4e8b\u5f97\u51fa\u7ed3\u8bba\uff1a\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c(\u7f9f\u57fa)\u6c2f\u55b9\u7684\u6709\u6548\u6027\u7f3a\u4e4f\u5f3a\u6709\u529b\u7684\u4e34\u5e8a\u8bc1\u636e\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e0e\u963f\u5947\u9709\u7d20\u8054\u5408\u4f7f\u7528\u4e86\u3002Gautret\u7b49\u4eba\u7684\u8bba\u6587\u3002\u5f15\u8d77\u4e86\u5f88\u591a\u5173\u6ce8\uff0c\u5e76\u5728\u6ca1\u6709\u9002\u5f53\u8bc1\u636e\u8bc1\u660e\u5176\u7597\u6548\u7684\u60c5\u51b5\u4e0b\u4fc3\u6210\u4e86\u5bf9\u8be5\u836f\u7269\u7684\u9700\u6c42\u3002Gautret\u7b49\u4eba\u7684\u7814\u7a76\u3002\u663e\u793a\u4e86\u91cd\u8981\u7684\u65b9\u6cd5\u95ee\u9898\uff0c\u6ca1\u6709\u63d0\u4f9b\u6709\u6548\u6027\u7684\u5efa\u8bae\u3002\u7f3a\u4e4f\u65b0\u51a0\u80ba\u708e\u7684\u7814\u7a76\u5bf9\u8c61\u548c\u5bfb\u627e\u6cbb\u7597\u7684\u5f3a\u70c8\u52a8\u673a\u4e0d\u662f\u95ee\u9898\uff0c\u4f46\u9700\u8981\u9ad8\u8d28\u91cf\u7684\u7814\u7a76\u3002\u56fd\u9645\u6297\u83cc\u5316\u7597\u534f\u4f1a\u5728\u4ed6\u4eec\u7684\u671f\u520a\u4e0a\u53d1\u8868\u4e86\u4e00\u7bc7\u8bba\u6587\u7684\u5b98\u65b9\u58f0\u660e\uff0c\u8bf4\u5b83\u6ca1\u6709\u8fbe\u5230\u4ed6\u4eec\u7684\u6807\u51c6[54]\u3002\u4ed6\u4eec\u8868\u793a\uff0c\u201c\u901a\u8fc7\u5feb\u901f\u53d1\u5e03\u65b0\u6570\u636e\u6765\u5e2e\u52a9\u79d1\u5b66\u754c\u662f\u5f88\u91cd\u8981\u7684\uff0c\u8fd9\u4e0d\u80fd\u4ee5\u51cf\u5c11\u79d1\u5b66\u5ba1\u67e5\u548c\u6700\u4f73\u5b9e\u8df5\u4e3a\u4ee3\u4ef7\u201d\u3002\u8fd9\u7bc7\u8bba\u6587\u7684\u4f5c\u8005\u5b8c\u5168\u540c\u610f\u8fd9\u4e00\u89c2\u70b9\u3002\n\u5728\u4e00\u7bc7\u793e\u8bba\u4e2d\uff0cISAC\u7684\u4e00\u7fa4\u9ad8\u7ea7\u5b98\u5458\u89e3\u91ca\u4e86\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u9009\u62e9\u4e0d\u64a4\u56de\u8fd9\u7bc7\u8bba\u6587\uff1a\n\u4e3a\u4e86\u5c3d\u91cf\u51cf\u5c11\u6f5c\u5728\u7684\u504f\u89c1\uff0c\u7531\u4e8e\u5176\u4e2d\u4e00\u4f4d\u4f5c\u8005\u662f\u8be5\u6742\u5fd7\u7684\u4e3b\u7f16\uff0c\u7f16\u8f91\u5904\u7406/\u540c\u884c\u5ba1\u67e5\u88ab\u59d4\u6258\u7ed9\u4e00\u540d\u526f\u4e3b\u7f16\u3002\u6b64\u5916\uff0c\u5728\u8bba\u6587\u53d1\u8868\u540e\uff0cISAC\u5b89\u6392\u4e86\u4e00\u6b21\u989d\u5916\u7684\u72ec\u7acb\u540c\u884c\u5ba1\u67e5\uff0c\u4ee5\u786e\u5b9a\u5bf9\u8bba\u6587\u7814\u7a76\u5185\u5bb9\u7684\u62c5\u5fe7\u662f\u5426\u6709\u4ef7\u503c\u3002\n\u7ecf\u8fc7\u5185\u90e8\u548c\u5916\u90e8(\u53d1\u8868\u540e)\u7684\u5ba1\u67e5\uff0c\u5173\u4e8e\u8bba\u6587\u65b9\u6cd5\u7684\u4e00\u4e9b\u62c5\u5fe7\u5f97\u5230\u8bc1\u5b9e[6]\u3002\u56e0\u6b64\uff0cISAC\u6267\u884c\u59d4\u5458\u4f1a\u4e0e\u7231\u601d\u552f\u5c14\u516c\u53f8\u5408\u4f5c\uff0c\u8ba8\u8bba\u4e86\u5173\u4e8e\u5982\u4f55\u8fdb\u884c\u7684\u5404\u79cd\u9009\u62e9\u3002\u5c3d\u7ba1\u65b9\u6cd5\u4e0a\u5b58\u5728\u7f3a\u9677\uff0c\u6211\u4eec\u8fd8\u662f\u9009\u62e9\u4e0d\u64a4\u56deGautret\u7b49\u4eba\u7684\u51fa\u7248\u7269[3]\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u9664\u4e86\u5728\u5927\u6d41\u884c\u6700\u4e25\u91cd\u7684\u65f6\u5019\u5171\u4eab\u89c2\u6d4b\u6570\u636e\u7684\u91cd\u8981\u6027\u4e4b\u5916\uff0c\u8fd8\u5e94\u8be5\u4ee5\u516c\u5f00\u548c\u900f\u660e\u7684\u65b9\u5f0f\u5c31\u8be5\u8bba\u6587\u7684\u53d1\u73b0\u8fdb\u884c\u5f3a\u6709\u529b\u7684\u516c\u5171\u79d1\u5b66\u8fa9\u8bba\u3002\n\u5728\u53d1\u8868\u4e4b\u524d\uff0c\u4f5c\u8005\u88ab\u9080\u8bf7\u5728\u6742\u5fd7\u5185\u5bf9\u8fd9\u7bc7\u793e\u8bba\u548cMachiels\u7b49\u4eba\u7684\u8bc4\u8bba\u505a\u51fa\u56de\u5e94\u3002[2]\u548cRosendaal[6]\u3002\u5728\u53d1\u8868\u65f6\uff0c\u5df2\u7ecf\u5728\u63d0\u4ea4\u4eba\u7684\u673a\u6784\u7f51\u7ad9\u4e0a\u5f20\u8d34\u4e86\u7b54\u590d\uff0c\u76ee\u524d\u6b63\u5728IJAA\u8fdb\u884c\u5ba1\u67e5\u3002\n\u8fd8\u6709\u5176\u4ed6\u5173\u4e8e\u7f9f\u6c2f\u55b9\u548c\u65b0\u51a0\u80ba\u708e\u7684\u7814\u7a76\uff0c\u5176\u4e2d\u4e00\u4e9b\u5df2\u7ecf\u53d7\u5230\u4e86\u4ed4\u7ec6\u7684\u5ba1\u67e5\u3002\u6700\u8fd1\uff0c\u5e95\u7279\u5f8b\u4ea8\u5229\u00b7\u798f\u7279\u533b\u9662\u7684\u4e00\u4e2a\u7814\u7a76\u5c0f\u7ec4\u58f0\u79f0\uff0c\u4ed6\u4eec\u7684\u53d1\u73b0\u8868\u660e\u8fd9\u79cd\u836f\u7269\u662f\u6709\u6548\u7684\u3002\u7136\u800c\uff0c\u6b63\u5982STAT\u7684\u9a6c\u4fee\u00b7\u8d6b\u73c0(Matthew Herper)\u6240\u6307\u51fa\u7684\u90a3\u6837\uff1a\n\u5f15\u53d1\u6700\u65b0\u4e89\u8bae\u7684\u8fd9\u9879\u7814\u7a76\u7edd\u4e0d\u662f\u968f\u673a\u7684\u3002\u5916\u90e8\u4e13\u5bb6\u6307\u51fa\uff0c\u8fd9\u4e0d\u4ec5\u6ca1\u6709\u968f\u673a\u8fdb\u884c\uff0c\u800c\u4e14\u63a5\u53d7\u7f9f\u6c2f\u55b9\u6cbb\u7597\u7684\u60a3\u8005\u4e5f\u66f4\u6709\u53ef\u80fd\u670d\u7528\u7c7b\u56fa\u9187\uff0c\u8fd9\u4f3c\u4e4e\u5bf9\u60a3\u6709\u65b0\u51a0\u80ba\u708e\u7684\u91cd\u75c5\u60a3\u8005\u6709\u5e2e\u52a9\u3002\u8fd9\u5f88\u53ef\u80fd\u5f71\u54cd\u4e86\u4ea8\u5229\u00b7\u798f\u7279\u7814\u7a76\u7684\u4e2d\u5fc3\u53d1\u73b0\uff1a\u5728\u533b\u9662\u63a5\u53d7\u7f9f\u57fa\u6c2f\u55b9\u6cbb\u7597\u7684\u60a3\u8005\u6b7b\u4ea1\u7387\u964d\u4f4e\u4e8650%\u3002\n\u5c31\u50cf\u201c\u9000\u7f29\u624b\u8868\u201d\u4e00\u6837\uff1f\u60a8\u53ef\u4ee5\u514d\u7a0e\u6350\u6b3e\u6765\u652f\u6301\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u5728Twitter\u4e0a\u5173\u6ce8\u6211\u4eec\uff0c\u5728Facebook\u4e0a\u50cf\u6211\u4eec\u4e00\u6837\u5173\u6ce8\u6211\u4eec\uff0c\u5c06\u6211\u4eec\u6dfb\u52a0\u5230\u60a8\u7684\u5728\u7ebfRSS\u9605\u8bfb\u5668\u4e2d\uff0c\u6216\u8005\u8ba2\u9605\u6211\u4eec\u7684\u6bcf\u65e5\u6458\u8981\u3002\u5982\u679c\u4f60\u53d1\u73b0\u4e86\u6211\u4eec\u6570\u636e\u5e93\u4e2d\u6ca1\u6709\u7684\u64a4\u56de\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u8ba9\u6211\u4eec\u77e5\u9053\u3002\u5982\u9700\u610f\u89c1\u6216\u53cd\u9988\uff0c\u8bf7\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3team@Retractionwatch.com\u3002", "note_en": "A  March 2020 paper that set off months of angry debates about whether hydroxychloroquine is effective in treating COVID-19 has \u201cgross methodological shortcomings\u201d that \u201cdo not justify the far-reaching conclusions about the efficacy of hydroxychloroquine in Covid-19,\u201d according to a review commissioned by the journal that published the original work.\n The comments, by  Frits Rosendaal, of Leiden University Medical Center in the Netherlands, came as part of a review commissioned by International Society of Antimicrobial Chemotherapy (ISAC), which publishes the journal  along with Elsiever. ISAC had  issued a statement about the paper in April, saying it \u201cdoes not meet the [International Society of Antimicrobial Chemotherapy\u2019s] expected standard.\u201d\n   suffers from major methodological shortcomings which make it nearly if not completely uninformative. Hence, the tone of the report, in presenting this as evidence of an effect of hydroxychloroquine and even recommending its use, is not only unfounded, but, given the desperate demand for a treatment for Covid-19, coupled with the potentially serious side-effects of hydroxychloroquine, fully irresponsible.\n  This is a non-informative manuscript with gross methodological shortcomings. The results do not justify the far-reaching conclusions about the efficacy of hydroxychloroquine in Covid-19, and in the view of this reviewer do not justify any conclusion at all.\n In  another commentary in the journal,  Heiman Wertheim and colleagues at Radboudumc in the Netherlands conclude:\n To date, robust clinical evidence of the efficacy of (hydroxy)chloroquine is lacking, let alone the combination with azithromycin. The paper by Gautret et al. raised a lot of attention and contributed to a demand for the drug without the appropriate evidence of its benefit. The study by Gautret et al. showed important methodological issues and does not provide a suggestion of effectiveness. A lack of COVID-19 study subjects and a strong motivation to find a treatment is not an issue, but good quality studies are needed. The International Society of Antimicrobial Chemotherapy provided an official statement on the paper in their journal that it did not meet their standard  [54]. They stated that \u2018it is important to help the scientific community by publishing new data fast, this cannot be at the cost of reducing scientific scrutiny and best practices\u2019. The authors of this paper fully agree.\n In an  editorial, a group of ISAC\u2019s senior officers explained the process, and why they chose not to retract the paper:\n To minimize potential bias, as one of the authors is the Editor in Chief of the journal, the editorial handling / peer review was delegated to an Associate Editor. Furthermore, after publication ISAC arranged an additional independent peer review to ascertain whether concerns about the research content of the paper had merit.\n After internal and external (post-publication) review, some of the concerns regarding the paper\u2019s methodology were substantiated  [6]. Consequently, the ISAC Executive Committee, in collaboration with Elsevier, discussed a variety of options in regard to how to proceed. Despite the flaws in methodology, we have elected not to withdraw the publication by Gautret et al  [3]. We believe, in addition to the importance of sharing observational data at the height of a pandemic, a robust public scientific debate about the paper\u2019s findings in an open and transparent fashion should be made available.\n Prior to publication, the authors were invited to respond within the journal to this editorial and the reviews by Machiels et al.  [2] and Rosendaal  [6]. At time of publication, a response has been posted on the authors\u2019 institutional website and is currently under review in IJAA.\n  There have been other studies of hydroxychloroquine and COVID-19, a number of which have  come under scrutiny. Most recently, a team at Henry Ford Hospital in Detroit claimed that their findings showed the drug was effective. However, as  Matthew Herper at STAT noted:\n The study that sparked the latest controversy was anything but randomized. Not only was it not randomized, outside experts noted, but patients who received hydroxychloroquine were also more likely to get steroids, which appear to help very sick patients with Covid-19. That is likely to have influenced the central finding of the Henry Ford study: that death rates were 50% lower among patients in hospitals treated with hydroxychloroquine.\n Like Retraction Watch? You can make a\u00a0  tax-deductible contribution to support our work , follow us\u00a0  on Twitter , like us\u00a0  on Facebook , add us to your\u00a0  RSS reader , or subscribe to our\u00a0  daily digest . If you find a retraction that\u2019s\u00a0  not in our database , you can\u00a0  let us know here . For comments or feedback, email us at team@retractionwatch.com.", "posttime": "2020-07-20 03:13:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f9f\u57fa,hydroxychloroquine,\u8bba\u6587", "title": "\u201c\u4e0d\u8d1f\u8d23\u4efb\u7684\u201d\u7f9f\u57fa\u6c2f\u55b9\u7814\u7a76\u4e0d\u4f1a\u64a4\u56de", "title_en": "\u201cIrresponsible\u201d hydroxychloroquine study is not being retracted", "transed": 1, "url": "https://retractionwatch.com/2020/07/19/french-hydroxychloroquine-study-has-major-methodological-shortcomings-and-is-fully-irresponsible-says-review-but-is-not-being-retracted/#more-120038", "via": "", "real_tags": ["\u7f9f\u57fa", "\u8bba\u6587"]}]
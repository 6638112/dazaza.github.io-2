[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1074537, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ed6\u4eec\u901a\u8fc7\u5728\u4e00\u4e2a\u6269\u5c55\u5e95\u5ea7\u4e0a\u5207\u6362\u5f7c\u6b64\u76f8\u90bb\u7684\u4e24\u8f86\u81ea\u884c\u8f66\u7684\u4e8c\u7ef4\u7801\u626b\u63cf\u7801\uff0c\u7136\u540e\u7b49\u5f85\u4e00\u4e2a\u6beb\u65e0\u6212\u5907\u7684\u9a91\u8f66\u4eba\u5c1d\u8bd5\u7528\u667a\u80fd\u624b\u673a\u5e94\u7528\u7a0b\u5e8f\u89e3\u9501\u4e00\u8f86\u81ea\u884c\u8f66\uff0c\u4ece\u800c\u7a83\u53d6\u82b1\u65d7\u7684\u81ea\u884c\u8f66\u3002\n\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e0d\u9002\u7528\u4e8e\u9a91\u624b\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528\u5207\u6362\u4ee3\u7801\u91ca\u653e\u9644\u8fd1\u7684\u82b1\u65d7\u81ea\u884c\u8f66\uff0c\u5c0f\u5077\u5728\u90a3\u91cc\u7b49\u5f85\uff0c\u8df3\u4e0a\u81ea\u884c\u8f66\uff0c\u7136\u540e\u9a91\u8d70\u3002\n\u4ed6\u4eec\u5927\u6982\u662f\u7528\u76f8\u673a\u3001\u6253\u5370\u673a\u548c\u8d34\u7eb8\u6765\u4ea4\u6362\u81ea\u884c\u8f66\u4e0a\u7684\u4ee3\u7801\u3002\u636e\u63a8\u6d4b\uff0c\u53d7\u5bb3\u4eba\u56e0\u672a\u5f52\u8fd8\u88ab\u76d7\u81ea\u884c\u8f66\u800c\u88ab\u8d77\u8bc9\u3002\n\u8fd9\u4e2a\u6545\u4e8b\u662f\u53bb\u5e74\u7684\uff0c\u4f46\u6211\u4ee5\u524d\u6ca1\u770b\u8fc7\u3002\u94fe\u63a5\u4e0a\u6709\u4e00\u6bb5\u76d7\u7a83\u89c6\u9891\u3002", "note_en": "They\u2019re stealing Citi Bikes by switching the QR scan codes on two bicycles near each other at a docking station, then waiting for an unsuspecting cyclist to try to unlock a bike with his or her smartphone app.\n The app doesn\u2019t work for the rider but does free up the nearby Citi Bike with the switched code, where a thief is waiting, jumps on the bicycle and rides off.\n Presumably they\u2019re using camera, printers, and stickers to swap the codes on the bikes. And presumably the victim is charged for not returning the stolen bicycle.\n This story is from last year, but I hadn\u2019t seen it before. There\u2019s a video of one theft at the link.", "posttime": "2022-02-22 02:46:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8c\u7ef4\u7801,bicycles,\u81ea\u884c\u8f66", "title": "\u901a\u8fc7\u4ea4\u6362\u4e8c\u7ef4\u7801\u5077\u81ea\u884c\u8f66", "title_en": "Stealing Bicycles by Swapping QR Codes", "transed": 1, "url": "https://www.schneier.com/blog/archives/2022/02/stealing-bicycles-by-swapping-qr-codes.html", "via": "", "real_tags": ["\u4e8c\u7ef4\u7801", "bicycles", "\u81ea\u884c\u8f66"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074536, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u6e90\u8f6f\u4ef6\u65e0\u5904\u4e0d\u5728\u3002\u5b83\u5df2\u7ecf\u6210\u4e3a\u6280\u672f\u521b\u65b0\u65e0\u4e0e\u4f26\u6bd4\u7684\u9a71\u52a8\u529b\uff0c\u56e0\u4e3a\u4f7f\u7528\u5b83\u7684\u7ec4\u7ec7\u6ca1\u6709&#39\uff1b\u6211\u4eec\u4e0d\u5fc5\u91cd\u65b0\u53d1\u660e\u901a\u7528\u8f6f\u4ef6\u7ec4\u4ef6\u3002\n\u7136\u800c\uff0c\u5f00\u6e90\u8f6f\u4ef6\u7684\u65e0\u5904\u4e0d\u5728\u4e5f\u5e26\u6765\u4e86\u5de8\u5927\u7684\u5b89\u5168\u98ce\u9669\uff0c\u56e0\u4e3a\u5b83\u4e3a\uff08\u6709\u610f\u6216\u65e0\u610f\u5730\uff09\u5411\u5f00\u6e90\u8f6f\u4ef6\u4ea7\u54c1\u7684\u6d88\u8d39\u8005\u5f15\u5165\u6f0f\u6d1e\u6253\u5f00\u4e86\u5927\u95e8\u3002\u6700\u8fd1\u5728\u5e7f\u6cdb\u4f7f\u7528\u7684Log4j\u4ee3\u7801\u5e93\u4e2d\u89e3\u51b3\u4e3b\u8981\u6f0f\u6d1e\u7684\u7ade\u8d5b\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u5927\u7684\u8ff9\u8c61\uff0c\u8868\u660e\u5fc5\u987b\u89e3\u51b3\u5f00\u6e90\u8f6f\u4ef6\u73af\u5883\u4e2d\u7684\u98ce\u9669\u3002\n\u5bf9\u7f51\u7edc\u7f6a\u72af\u7684\u5f00\u6e90\u547c\u5401\u5f00\u6e90\u653b\u51fb\u65b9\u6cd5\u5bf9\u574f\u4eba\u5f88\u6709\u5438\u5f15\u529b\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5e7f\u6cdb\u4e14\u9ad8\u6548\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u65b9\u6cd5\u6765\u6df7\u6dc6\u5bf9\u5f00\u653e\u6e90\u4ee3\u7801\u9879\u76ee\u6240\u505a\u7684\u6076\u610f\u66f4\u6539\uff0c\u5e76\u4e14\u5ba1\u67e5\u4ee3\u7801\u7684\u5b89\u5168\u6027\u5f71\u54cd\u7684\u4e25\u683c\u7a0b\u5ea6\u5728\u5404\u4e2a\u9879\u76ee\u4e2d\u53ef\u80fd\u5b58\u5728\u5f88\u5927\u5dee\u5f02\u3002\u5982\u679c\u6ca1\u6709\u4e25\u683c\u7684\u63a7\u5236\u63aa\u65bd\u6765\u68c0\u6d4b\u8fd9\u4e9b\u6076\u610f\u66f4\u6539\uff0c\u5b83\u4eec\u53ef\u80fd\u4f1a\u5728&#39\uff1b\u6211\u4eec\u5df2\u7ecf\u5728\u591a\u5bb6\u516c\u53f8\u7684\u8f6f\u4ef6\u4e2d\u53d1\u5e03\u548c\u4f7f\u7528\u3002\n\u5bf9\u5f00\u653e\u6e90\u4ee3\u7801\u7684\u653b\u51fb\u53ef\u80fd\u5728\u5927\u5c0f\u548c\u5f71\u54cd\u7684\u5b9e\u4f53\u4e0a\u6709\u6240\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u53bb\u5e747\u6708\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u4e86\u4e5d\u4e2a\u5f71\u54cd\u4e09\u4e2a\u5f00\u6e90\u9879\u76ee\u7684\u6f0f\u6d1e\u2014\u2014EspoCRM\u3001Pimcore\u548cAkaunting\u2014\u2014\u4e2d\u5c0f\u578b\u4f01\u4e1a\u7ecf\u5e38\u5229\u7528\u8fd9\u4e9b\u6f0f\u6d1e\u3002\u4ec0\u4e48&#39\uff1b\u6b64\u5916\uff0c2017\u5e74Equifax\u6570\u636e\u6cc4\u9732\u4e8b\u4ef6\u5f71\u54cd\u4e861.47\u4ebf\u4eba\u7684\u4e2a\u4eba\u6570\u636e\uff0c\u539f\u56e0\u662f\u8be5\u7ec4\u7ec7\u5b58\u5728\u6f0f\u6d1e#39\uff1bs\u7684\u5f00\u6e90\u4ee3\u7801\u662f\u4e00\u4e2a\u660e\u786e\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u4e86\u6f0f\u6d1e\u5982\u4f55\u88ab\u574f\u4eba\u5229\u7528\uff0c\u5e76\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7834\u574f\u6027\u5f71\u54cd\u3002\n\u6c38\u4e0d\u653e\u5f03CISA\u66fe\u8868\u793a\uff0c\u6570\u4ebf\u53f0\u8bbe\u5907\u53ef\u80fd\u53d7\u5230Log4j\u6f0f\u6d1e\u7684\u5f71\u54cd\u3002\u9274\u4e8e\u8fd9\u8d77\u4e8b\u4ef6\u7684\u4e25\u91cd\u6027\uff0c\u8bb8\u591a\u4f01\u4e1a\u53ef\u80fd\u6b63\u5728\u5206\u6790\u662f\u5426\u5728\u672a\u6765\u7684\u5f00\u53d1\u4e2d\u5229\u7528\u5f00\u653e\u6e90\u4ee3\u7801\u3002\u7136\u800c\uff0c\u5b8c\u5168\u653e\u5f03\u5f00\u6e90\u4e0d\u662f&#39\uff1b\u8fd9\u4e0d\u73b0\u5b9e\u3002\u6240\u6709\u73b0\u4ee3\u8f6f\u4ef6\u90fd\u662f\u7528\u5f00\u6e90\u7ec4\u4ef6\u6784\u5efa\u7684\uff0c\u800c\u5728\u6ca1\u6709\u5f00\u6e90\u7684\u60c5\u51b5\u4e0b\u91cd\u5efa\u8fd9\u4e9b\u7ec4\u4ef6\u5c06\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u548c\u91d1\u94b1\u6295\u8d44\uff0c\u4ee5\u751f\u4ea7\u54ea\u6015\u662f\u8f83\u5c0f\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5168\u740360%\u4ee5\u4e0a\u7684\u7f51\u7ad9\u8fd0\u884c\u5728Apache\u548cNginx\u670d\u52a1\u5668\u4e0a\uff0c\u636e\u62a5\u9053\uff0c90%\u7684IT\u9886\u5bfc\u8005\u5b9a\u671f\u4f7f\u7528\u4f01\u4e1a\u5f00\u6e90\u4ee3\u7801\u3002\n\u6d4b\u8bd5\u548c\u4fdd\u62a4\u60a8\u7684\u8f6f\u4ef6\uff0c\u800c\u4e0d\u662f\u907f\u514d\u5f00\u6e90\uff0c\u4e00\u4e2a\u66f4\u73b0\u5b9e\u7684\u65b9\u6cd5\u662f\u5b89\u5168\u548c\u8f6f\u4ef6\u56e2\u961f\u5171\u540c\u5f00\u53d1\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u548c\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u7b56\u7565\u548c\u6d41\u7a0b\u3002\u7ec4\u7ec7\u5e94\u5c06\u5176\u89c6\u4e3a\u4e00\u4e2a\u7531\u4e09\u90e8\u5206\u7ec4\u6210\u7684\u8fc7\u7a0b\u3002\u5b83\u9700\u8981\u626b\u63cf\u548c\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5efa\u7acb\u4e00\u4e2a\u660e\u786e\u7684\u6d41\u7a0b\uff0c\u5728\u6f0f\u6d1e\u51fa\u73b0\u65f6\u89e3\u51b3\u548c\u4fee\u590d\u6f0f\u6d1e\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5185\u90e8\u653f\u7b56\uff0c\u5728\u5176\u4e2d\u4e3a\u89e3\u51b3\u5b89\u5168\u95ee\u9898\u5236\u5b9a\u89c4\u5219\u3002\n\u5f53\u6d89\u53ca\u5230\u4f7f\u7528\u5de5\u5177\u6d4b\u8bd5\u5f00\u6e90\u73af\u5883\u7684\u5f39\u6027\u65f6\uff0c\u9759\u6001\u4ee3\u7801\u5206\u6790\u662f\u5f88\u597d\u7684\u7b2c\u4e00\u6b65\u3002\u4e0d\u8fc7\uff0c\u7ec4\u7ec7\u5fc5\u987b\u8bb0\u4f4f\uff0c\u8fd9\u53ea\u662f\u6d4b\u8bd5\u7684\u7b2c\u4e00\u5c42\u3002\u9759\u6001\u5206\u6790\u662f\u6307\u5728\u5b9e\u9645\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u6216\u7a0b\u5e8f\u4e0a\u7ebf\u4e4b\u524d\u5206\u6790\u6e90\u4ee3\u7801\uff0c\u5e76\u89e3\u51b3\u4efb\u4f55\u53d1\u73b0\u7684\u6f0f\u6d1e\u3002\u7136\u800c\uff0c\u9759\u6001\u5206\u6790\u65e0\u6cd5\u68c0\u6d4b\u5230\u6240\u6709\u53ef\u80fd\u5d4c\u5165\u5230\u5f00\u6e90\u4ee3\u7801\u4e2d\u7684\u6076\u610f\u5a01\u80c1\u3002\u4e0b\u4e00\u6b65\u5e94\u8be5\u662f\u5728\u6c99\u7bb1\u73af\u5883\u4e2d\u8fdb\u884c\u989d\u5916\u7684\u6d4b\u8bd5\u3002\u4e25\u683c\u7684\u4ee3\u7801\u5ba1\u67e5\u3001\u52a8\u6001\u4ee3\u7801\u5206\u6790\u548c\u5355\u5143\u6d4b\u8bd5\u662f\u53ef\u4ee5\u5229\u7528\u7684\u5176\u4ed6\u65b9\u6cd5\u3002\uff08\u52a8\u6001\u5206\u6790\u662f\u6307\u5728\u8f6f\u4ef6\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u65f6\u5bf9\u5176\u8fdb\u884c\u68c0\u67e5\uff0c\u4ee5\u8bc6\u522b\u6f0f\u6d1e\u3002\uff09\n\u626b\u63cf\u5b8c\u6210\u540e\uff0c\u7ec4\u7ec7\u5fc5\u987b\u6709\u4e00\u4e2a\u660e\u786e\u7684\u6d41\u7a0b\u6765\u89e3\u51b3\u4efb\u4f55\u53d1\u73b0\u7684\u6f0f\u6d1e\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u6b63\u8d76\u4e0a\u53d1\u5e03\u622a\u6b62\u65e5\u671f\uff0c\u6216\u8005\u8f6f\u4ef6\u8865\u4e01\u53ef\u80fd\u9700\u8981\u91cd\u6784\u6574\u4e2a\u7a0b\u5e8f\uff0c\u5e76\u5bf9\u65f6\u95f4\u7ebf\u9020\u6210\u538b\u529b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5e94\u8be5\u5e2e\u52a9\u5f00\u53d1\u8005\u89e3\u51b3\u4fdd\u62a4\u7ec4\u7ec7\u7684\u8270\u96be\u9009\u62e9#39\uff1b\u901a\u8fc7\u7ed9\u51fa\u89e3\u51b3\u6f0f\u6d1e\u548c\u7f13\u89e3\u95ee\u9898\u7684\u660e\u786e\u4e0b\u4e00\u6b65\u63aa\u65bd\uff0c\u63d0\u5347\u5b89\u5168\u6027\u3002\n\u653f\u7b56\u53d8\u66f4\u6b65\u9aa4\u5e94\u521b\u5efa\u4e00\u4e2a\u8bb0\u5f55\u5728\u6848\u7684\u8ba1\u5212\uff0c\u8bf4\u660e\u5982\u4f55\u5236\u5b9a\u6240\u6709\u51b3\u7b56\uff0c\u4ee5\u53ca\u54ea\u4e9b\u5229\u76ca\u76f8\u5173\u8005\u5e94\u53c2\u4e0e\u6574\u4e2a\u8fc7\u7a0b\u3002\u6b64\u5916\uff0c\u7ec4\u7ec7\u53ef\u4ee5\u5bf9\u5176\u5f00\u6e90\u7ec4\u4ef6\u5b9e\u65bd\u591a\u79cd\u63a7\u5236\uff0c\u4f8b\u5982\u8ba4\u8bc1\u548c\u8ba4\u53ef\u8ba1\u5212\u3002\u7136\u800c\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u5c06\u589e\u52a0\u989d\u5916\u7684\u95f4\u63a5\u6210\u672c\uff0c\u5e76\u51cf\u7f13\u5f00\u6e90\u9879\u76ee\u7684\u5f00\u53d1\u3002\n\u4fdd\u62a4\u5f00\u653e\u6e90\u4ee3\u7801\u514d\u53d7\u672a\u6765\u7684\u653b\u51fb\u6574\u4e2a\u884c\u4e1a\u90fd\u6ce8\u610f\u5230\u9700\u8981\u8fdb\u4e00\u6b65\u4fdd\u62a4\u5f00\u653e\u6e90\u4ee3\u7801\u3002Linux\u57fa\u91d1\u4f1a\u4e8e\u5341\u6708\u5ba3\u5e03\uff0c\u5b83\u4e0e\u5176\u4ed6\u884c\u4e1a\u9886\u8896\u4e00\u8d77\u52df\u96c6\u4e861000\u4e07\u7f8e\u5143\uff0c\u4ee5\u8bc6\u522b\u548c\u4fee\u590d\u5f00\u6e90\u8f6f\u4ef6\u4e2d\u7684\u7f51\u7edc\u5b89\u5168\u6f0f\u6d1e\uff0c\u5e76\u5f00\u53d1\u6539\u8fdb\u7684\u5de5\u5177\u3001\u57f9\u8bad\u3001\u7814\u7a76\u548c\u6f0f\u6d1e\u62ab\u9732\u5b9e\u8df5\u3002\u9664\u4e86\u5728\u5168\u884c\u4e1a\u8303\u56f4\u5185\u52aa\u529b\u4fdd\u62a4\u57fa\u4e8e\u5f00\u653e\u6e90\u4ee3\u7801\u6784\u5efa\u7684\u8f6f\u4ef6\u514d\u53d7\u7f51\u7edc\u5a01\u80c1\u4e4b\u5916\uff0c\u5404\u7ec4\u7ec7\u8fd8\u5fc5\u987b\u5bf9\u5176\u9632\u5fa1\u6218\u7565\u91c7\u53d6\u5185\u90e8\u79ef\u6781\u4e3b\u52a8\u7684\u65b9\u6cd5\u3002\u8fd9\u5e94\u8be5\u5305\u62ec\u4e3a\u4ed6\u4eec\u81ea\u5df1\u7684\u4ee3\u7801\u548c\u4ed6\u4eec\u6240\u4f9d\u8d56\u7684\u5f00\u6e90\u4ee3\u7801\u5b9e\u73b0\u6d4b\u8bd5\u548c\u63a7\u5236\u8fc7\u7a0b\u3002\u7ec4\u7ec7\u8fd8\u5fc5\u987b\u5236\u5b9a\u5185\u90e8\u653f\u7b56\u548c\u6307\u5bfc\u65b9\u9488\uff0c\u8bc6\u522b\u4f7f\u7528\u5f00\u6e90\u8f6f\u4ef6\u7684\u98ce\u9669\uff0c\u5e76\u786e\u5b9a\u7528\u4e8e\u7ba1\u7406\u8be5\u98ce\u9669\u7684\u63a7\u5236\u63aa\u65bd\u3002\u8fd9\u6837\u505a\u5c06\u4f7f\u4ed6\u4eec\u80fd\u591f\u7ee7\u7eed\u5229\u7528\u5f00\u6e90\u4ee3\u7801\u7684\u597d\u5904\uff0c\u540c\u65f6\u521b\u9020\u4e00\u4e2a\u80fd\u591f\u62b5\u5fa1\u672a\u6765\u653b\u51fb\u7684\u73af\u5883\u3002\n\u4e86\u89e3\u6700\u65b0\u7684\u7f51\u7edc\u5b89\u5168\u5a01\u80c1\u3001\u65b0\u53d1\u73b0\u7684\u6f0f\u6d1e\u3001\u6570\u636e\u6cc4\u9732\u4fe1\u606f\u548c\u65b0\u5174\u8d8b\u52bf\u3002\u6bcf\u5929\u6216\u6bcf\u5468\u53d1\u9001\u5230\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u6536\u4ef6\u7bb1\u3002\n\u8ba2\u9605", "note_en": "Open source software is ubiquitous. It has become an unequaled driver of technological innovation because organizations that use it don&#39;t have to reinvent the wheel for common software components.\n  However, the ubiquity of  open source software also presents a significant security risk, as it opens the door for vulnerabilities to be introduced (intentionally or inadvertently) to the consumers of open source software products. The recent race to address major vulnerabilities in the widely used Log4j code library is the biggest sign yet that risks within the open source software environment must be addressed.\n The Open Source Appeal for Cybercriminals The open source attack method is appealing to bad actors because it can be widespread and highly effective. Attackers can use various methods to obfuscate malicious changes contributed to open source projects, and the rigor in reviewing code for security implications can vary widely across projects. Without stringent controls in place to detect these malicious changes, they may go unnoticed until after they&#39;ve been distributed and included in software across numerous companies.\n Attacks on open source code can vary in size and the entities they affect. For example, last July, researchers found  nine vulnerabilities affecting three open source projects \u2014 EspoCRM, Pimcore, and Akaunting \u2014 which are frequently leveraged by small and midsize businesses. What&#39;s more, the 2017 Equifax data breach, which affected the personal data of  147 million people as a result of a vulnerability in the organization&#39;s open source code, is a clear example of how vulnerabilities can be exploited by bad actors and create damaging effects throughout.\n   Never Going to Give You Up  CISA has said that hundreds of millions of devices were likely  affected by the Log4j vulnerability. Given the magnitude of this incident, many enterprises are likely analyzing whether to leverage open source code for future developments. However, forgoing open source altogether isn&#39;t realistic. All modern software is built from open source components, and rebuilding those components without open source would require massive investments in time and money to produce even minor applications. Over  60% of websites worldwide run on Apache and Nginx servers, and  90% of IT leaders reportedly use enterprise open source code regularly.\n Testing and Protecting Your Software Instead of avoiding open source, a more realistic approach is for security and software teams to work together to develop policies and a process for testing applications and software components. Organizations should think about this as a three-part process. It requires scanning and testing code, establishing a clear-cut process for addressing and fixing vulnerabilities as they arise, and creating an internal policy in which rules are set for addressing security issues.\n When it comes to testing the resilience of your open source environment with tools, static code analysis is a good first step. Still, organizations must remember that this is only the first layer of testing. Static analysis refers to analyzing the source code before the actual software application or program goes live and addressing any discovered vulnerabilities. However, static analysis cannot detect all malicious threats that could be embedded in open source code. Additional testing in a sandbox environment should be the next step. Stringent code reviews, dynamic code analysis, and unit testing are other methods that can be leveraged. (Dynamic analysis refers to examining the software program while it&#39;s currently running to identify vulnerabilities.)\n  After scanning is complete, organizations must have a clear process to address any discovered vulnerabilities. Developers may be finding themselves against a release deadline, or the software patch may require refactoring the entire program and put a strain on timelines. This process should help developers address tough choices to protect the organization&#39;s security by giving clear next steps for addressing vulnerabilities and mitigating issues.\n The policy-change step should create a documented plan for how all decisions will be made moving forward and which stakeholders should be involved throughout the process. Additionally, organizations can implement multiple controls for their open source components, such as certification and accreditation programs. However, remember that this will add additional overhead costs and slow down the development of open source projects.\n  Defending Open Source Against Future Attacks The industry at large is taking note of the need to further protect open source code. The Linux Foundation announced in October it  raised $10 million alongside other industry leaders to identify and fix cybersecurity vulnerabilities in open source software and develop improved tooling, training, research, and vulnerability disclosure practices. In addition to industrywide efforts to protect software built on open source code against cyber threats, organizations must also take an internal proactive approach to their defense strategy. This should include implementing testing and control procedures for both their own code and the open source code on which they rely. Organizations must also develop internal policies and guidelines that recognize the risks from using open source software and identify the controls to be used to manage that risk. Doing so will allow them to continue leveraging the benefits of open source code while creating an environment that is resilient against future attacks.\n  Keep up with the latest cybersecurity threats, newly-discovered vulnerabilities, data breach information, and emerging trends. Delivered daily or weekly right to your email inbox.\n Subscribe", "posttime": "2022-02-22 02:44:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u4ee3\u7801,\u6e90\u4ee3\u7801,source,\u6f0f\u6d1e", "title": "\u5f00\u6e90\u4ee3\u7801\uff1a\u4e0b\u4e00\u6ce2\u4e3b\u8981\u7684\u7f51\u7edc\u653b\u51fb", "title_en": "Open Source Code: The Next Major Wave of Cyberattacks", "transed": 1, "url": "https://www.darkreading.com/vulnerabilities-threats/open-source-code-the-next-major-wave-of-cyberattacks", "via": "", "real_tags": ["\u5f00\u6e90", "\u4ee3\u7801", "\u6e90\u4ee3\u7801", "source", "\u6f0f\u6d1e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074535, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Nix\u662f\u4e00\u4e2a\u8f6f\u4ef6\u5305\u7ba1\u7406\u5668\uff0c\u53ef\u4ee5\u8ba9\u60a8\u5bf9\u8f6f\u4ef6\u4f9d\u8d56\u5173\u7cfb\u548c\u6784\u5efa\u8fc7\u7a0b\u6709\u4e00\u4e2a\u66f4\u786e\u5b9a\u7684\u89c6\u56fe\u3002\u5176\u6700\u5927\u7684\u7f3a\u70b9\u4e4b\u4e00\u662f\uff0c\u5173\u4e8e\u4f7f\u7528Nix\u7684\u9879\u76ee\u5e94\u8be5\u5982\u4f55\u534f\u540c\u5de5\u4f5c\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ea6\u5b9a\u3002\u5b83&#39\uff1b\u8fd9\u5c31\u50cf\u6709\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\uff0c\u4f46\u4e5f\u5fc5\u987b\u914d\u7f6e\u7cfb\u7edf\u6765\u8fd0\u884c\u81ea\u5df1\u7684\u8f6f\u4ef6\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u4ece\u9879\u76ee\u4e2d\u590d\u5236\u4e00\u4e2aNixOS\u6a21\u5757#39\uff1bs git repo\uff0c\u7f16\u5199\u81ea\u5df1\u7684\u6216\u66f4\u591a\u3002\u4e0e\u6b64\u76f8\u53cd\uff0cNixflakes\u5b9a\u4e49\u4e86\u4e00\u7ec4\u7ea6\u5b9a\uff0c\u7528\u4e8e\u5982\u4f55\u6784\u5efa\u3001\u8fd0\u884c\u3001\u96c6\u6210\u548c\u90e8\u7f72\u8f6f\u4ef6\uff0c\u800c\u65e0\u9700\u4f9d\u8d56\u5916\u90e8\u5de5\u5177\uff08\u5982Niv\u6216Lorri\uff09\u6765\u5e2e\u52a9\u60a8\u4ee5\u8f7b\u677e\u7684\u65b9\u5f0f\u5b8c\u6210\u57fa\u672c\u4efb\u52a1\u3002\n\u8fd9\u5c06\u662f\u4e00\u7cfb\u5217\u7684\u5e16\u5b50\uff0c\u5b83\u4eec\u5c06\u5efa\u7acb\u5728\u5f7c\u6b64\u7684\u57fa\u7840\u4e0a\u3002\u8fd9\u7bc7\u5e16\u5b50\u5c06\u4ecb\u7ecdNix flakes\uff0c\u5e76\u4f5c\u4e3a&#34\uff1b\u6211\u4e3a\u4ec0\u4e48\u8981\u5728\u4e4e&#34; Style\u6982\u8ff0\u4e86\u5982\u4f55\u4f7f\u7528\u8584\u7247\uff0c\u800c\u65e0\u9700\u592a\u591a\u7ec6\u8282\u3002\u5176\u4e2d\u5927\u591a\u6570\u4eba\u4f1a\u5f97\u5230\u5355\u72ec\u7684\u5e16\u5b50\uff08\u6709\u4e9b\u5e16\u5b50\u4e0d\u6b62\u4e00\u4e2a\uff09\u3002\n\u5728\u6211\u770b\u6765\uff0c\u4ee5\u4e0b\u662f\u4f60\u5e94\u8be5\u5173\u5fc3\u5c3c\u514b\u65af\u7684\u4e00\u4e9b\u91cd\u8981\u539f\u56e0\uff1a\n\u8fdb\u5165Nix\u6700\u8ba9\u4eba\u607c\u706b\u7684\u5730\u65b9\u4e4b\u4e00\u662f\u8bbe\u7f6e\u9879\u76ee\uff1b\u8fd9\u4e0d\u5b8c\u5168\u662f\u4e00\u95e8\u6709\u5b9a\u4e49\u7684\u79d1\u5b66\u3002Nix\u914d\u7f6e\u5f80\u5f80\u4f1a\u6709\u673a\u5730\u589e\u957f\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709&#39\uff1b\u6211\u4e0d\u80fd\u542f\u52a8\u8fd9\u4e2a\u9879\u76ee\u3002Nix flakes\u901a\u8fc7\u505a\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\u6765\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\n\u5b9a\u4e49\u4e00\u7247\u96ea\u82b1\u3002\u4ee5\u5c3c\u514b\u65af\u4e3a\u4e2d\u5fc3&#34\uff1b\u67a2\u7ebd\u548c#34\uff1b\u4e3a\u4e86\u4f60\u7684\u9879\u76ee&#39\uff1b\u7684\u4f9d\u8d56\u9879\u3001\u516c\u5f00\u7684\u8f6f\u4ef6\u5305\u3001NixOS\u914d\u7f6e\u6a21\u5757\u7b49\u7b49\u3002\n\u63d0\u4f9b\u4e00\u7ec4\u6a21\u677f\uff0c\u4ee5\u4fbf\u8f7b\u677e\u542f\u52a8\u9879\u76ee\u3002\u60f3\u8c61\u4e00\u4e0b\u7c7b\u4f3c\u4e8e\u7ea6\u66fc\u7684\u4e1c\u897f\uff0c\u4f46\u5b83\u76f4\u63a5\u5185\u7f6e\u4e8e\u5c3c\u514b\u65af\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728flake\u4e2d\u5b9a\u4e49\u81ea\u5df1\u7684\u6a21\u677f\u3002\u5c3c\u514b\u65af\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5c06\u7528\u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u6765\u5e2e\u52a9\u89e3\u91ca\u5b83\uff0c\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u7528Go\u6a21\u677f\u505a\u4e00\u4e2aGo\u9879\u76ee\u3002\u9996\u5148\uff0c\u60a8\u9700\u8981\u5728\u60a8\u7684\u673a\u5668\u4e0a\u542f\u7528Blenix\u8584\u7247\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fNixOS\uff0c\u8bf7\u5c06\u5176\u6dfb\u52a0\u5230\u60a8\u7684\u914d\u7f6e\u4e2d\u3002nix\u6587\u4ef6\uff1a\n\u5982\u679c\u4f60\u4e0d\u5728NixOS\u4e0a\uff0c\u4f60\u9700\u8981\u7f16\u8f91~/\u3002config/nix/nix\u3002Conver/etc/nix/nix\u3002conf\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u884c\uff1a\n&lt\uff1b\u739b\u62c9&gt\uff1b\u60a8\u53ef\u80fd\u9700\u8981\u5728\u6b64\u5904\u91cd\u65b0\u542f\u52a8Nix\u5b88\u62a4\u8fdb\u7a0b\uff0c\u4f46\u5982\u679c\u60a8\u4e0d\u786e\u5b9aNix\u662f\u5982\u4f55\u5728\u975eNixOS\u673a\u5668\u4e0a\u8bbe\u7f6e\u7684\uff0c\u8bf7\u968f\u65f6\u5b8c\u5168\u91cd\u65b0\u542f\u52a8\u8ba1\u7b97\u673a\u3002\n\u73b0\u5728\u8f6c\u5230\u4e00\u4e2a\u4e34\u65f6\u6587\u4ef6\u5939\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5e76\u4ece\u6a21\u677f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8584\u7247\uff1a\n{description=&#34\uff1b\u4e00\u4e2a\u7b80\u5355\u7684Go\u5305&#34\uff1b#Nixpkgs/NixOS\u7248\u672c\u8981\u4f7f\u7528\u3002inputs.Nixpkgs.url=&#34\uff1bNixpkgs/NixOS-21.11&#34\uff1b#outputs={self\uff0cNixpkgs}\uff1a\u8ba9#\u751f\u6210\u4e00\u4e2a\u7528\u6237\u53cb\u597d\u7684\u7248\u672c\u53f7\u3002\u7248\u672c=\u5185\u7f6e\u3002\u5b50\u5b57\u7b26\u4e320 8 self\u3002\u6700\u540e\u4fee\u6539\u65e5\u671f\u8981\u652f\u6301\u7684\u7cfb\u7edf\u7c7b\u578b\u3002supportedSystems=[&#34\uff1bx86_64-linux&#34\uff1b&#34\uff1bx86_64-darwin&#34\uff1b&#34\uff1baarch64-linux&#34\uff1b&#34\uff1baarch64-darwin&#34\uff1b]\u5e2e\u52a9\u51fd\u6570\u751f\u6210\u5c5e\u6027\u96c6#39\uff1b{x86_64-linux=f&#34\uff1bx86_64-linux&#34\uff1b\u2026}&#39;.  forAllSystems=nixpkgs\u3002lib\u3002genAttrs\u652f\u6301\u7684\u7cfb\u7edf\u5df2\u4e3a\u53d7\u652f\u6301\u7684\u7cfb\u7edf\u7c7b\u578b\u5b9e\u4f8b\u5316NIXPKG\u3002nixpkgsFor=forAllSystems\uff08\u7cfb\u7edf\uff1aimport nixpkgs{inherit system\uff1b}\uff09\uff1b\u5728{#\u4e2d\u4e3a\u6240\u9009\u7cfb\u7edf\u7c7b\u578b\u63d0\u4f9b\u4e00\u4e9b\u4e8c\u8fdb\u5236\u8f6f\u4ef6\u5305\u3002\u8f6f\u4ef6\u5305=forAllSystems\uff08\u7cfb\u7edf\uff1alet pkgs=nixpkgsFor.${system}\uff1b\u5728{go hello=pkgs.buildGoModule{pname=&#34\uff1bgo hello&#34\uff1b#inherit version\uff1b#\u5728&#39\uff1bnix develop&#39\uff1b\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981nix store\u4e2d\u7684\u6e90\u4ee3\u7801\u6811\u7684\u526f\u672c\u3002src=./.#\u6b64\u54c8\u5e0c\u9501\u5b9a\u6b64\u5305\u7684\u4f9d\u8d56\u9879\u3002\u8fd9\u662f#\u5fc5\u8981\u7684\uff0c\u56e0\u4e3ago\u9700\u8981\u7f51\u7edc\u8bbf\u95ee\u624d\u80fd\u89e3\u51b3#VCS\u3002\u8bf7\u53c2\u9605https://www.tweag.io/blog/2021-03-04-gomod2nix/\u5173\u4e8e#\u7ec6\u8282\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5047sha256\u6784\u5efa\uff0c\u5e76\u4f9d\u8d56\u539f\u751fGo#\u673a\u5236\u6765\u544a\u8bc9\u60a8\u54c8\u5e0c\u5e94\u8be5\u662f\u4ec0\u4e48\uff0c\u6216\u8005\u786e\u5b9a\u5b83\u5e94\u8be5\u662f\u4ec0\u4e48#34\uff1b\u5e26\u5916&#34\uff1b\u4f7f\u7528\u5176\u4ed6\u5de5\u5177\uff08\u5982gomod2nix\uff09\u3002#\u9996\u5148\uff0c\u5efa\u8bae\u8bbe\u7f6e\u6b64\u503c\uff0c\u4f46\u5fc5\u987b\u8bb0\u4f4f\uff0c\u5f53\u4f9d\u8d56\u9879\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8981\u4f7f\u7528\u6b64\u54c8\u5e0c\u503c#vendorSha256=pkgs\u3002lib\u3002\u5047\u836f256\uff1b\u4f9b\u5e94\u5546HA256=#34\uff1bsha256-pQpattmS9VmO3ZIQUFn66az8GSmB4IvYhTTCFn6SUmo=&&#39\uff1bnix build&#39\uff1b\u3002\u5982\u679c#flake\u53ea\u63d0\u4f9b\u4e00\u4e2a\u5305\uff0c\u6216\u8005\u6709\u4e00\u4e2a\u6e05\u6670\u7684#34\uff1b\u4e3b\u8981\u7684&#34\uff1b#\u5305\u88f9defaultPackage=forAllSystems\uff08system:self.packages.${system}.go hello\uff09\uff1b}\uff1b}\n\u8fd9\u5b9a\u4e49\u4e86macOS\u548cLinux\u4e0a\u652f\u6301\u7684\u7528\u4e8e64\u4f4dx86\u5904\u7406\u5668\u548c64\u4f4dARM\u5904\u7406\u5668\u7684\u5355Go\u5305\u3002\n&lt\uff1b\u739b\u62c9&gt\uff1b\u5728\u5b9e\u8df5\u4e2d\uff0c\u8fd9\u4e2a\u4ef7\u5dee\u5e94\u8be5\u8986\u76d6\u6240\u6709\u7684\u4e3b\u8981\u76ee\u6807&#39\uff1b\u6211\u4eec\u9700\u8981\u5173\u6ce8\u672c\u5730\u5f00\u53d1\u548c\u4e91\u90e8\u7f72\u3002\n{description=&#34\uff1b\u4e00\u4e2a\u7b80\u5355\u7684Go\u5305&#34\uff1binputs.nixpkgs.url=&#34\uff1bnixpkgs/nixos-21.11&#34\uff1boutputs={self\uff0cnixpkgs}:{packages={\u2026}\uff1bdefaultPackage={\u2026}\uff1b}\uff1b}\n&lt\uff1b\u5361\u8fea&gt\uff1b\u6ce8\u610f\uff1a\u5728\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\uff08\u4ee5\u53ca\u7cfb\u5217\u6587\u7ae0\uff09\u4e2d\uff0c\u5f53\u6211\u63d0\u5230A&#34\uff1b\u8584\u7247\u8f93\u51fa&#34\uff1b\uff0c\u6211\u6307\u7684\u662f\u4f60\u7684\u96ea\u82b1\u7684\u8f93\u51fa\u5c5e\u6027\u4e2d\u7684\u4e00\u4e2a\u5c5e\u6027\u3002\u5c3c\u514b\u65af\u3002\u4e0e#34\u76f8\u540c\uff1b\u8584\u7247\u8f93\u5165&#34\uff1b\u53c2\u8003\u96ea\u82b1\u7684\u8f93\u5165\u5c5e\u6027\u3002\u5c3c\u514b\u65af\u3002\n\u5f53\u60a8\u65e9\u4e9b\u65f6\u5019\u8fd0\u884cnix build\u65f6\uff0c\u5b83\u9ed8\u8ba4\u4e3a\u5728defaultPackage\u4e2d\u6784\u5efa\u5305\u3002\u60a8\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u6784\u5efago hello\u5305\uff1a\n\u6807\u51c6\u7684\u9ed8\u8ba4\u8f6f\u4ef6\u5305\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6784\u5efa\u8f6f\u4ef6\uff0c\u800c\u65e0\u9700\u9605\u8bfb\u8981\u6784\u5efa\u7684\u6587\u4ef6\u7684\u6587\u6863\u3002nix build\u53ea\u4f1a\u8d77\u4f5c\u7528\u2122\ufe0f.\n\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u5c06\u5305\u516c\u5f00\u4e3a\u5e94\u7528\u7a0b\u5e8f\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u7b80\u5316\u4e0a\u8ff0nix\u6784\u5efa\u548c\u6d4b\u8bd5/result/bin/go hello\u5faa\u73af\u5230\u4e00\u4e2anix run\u547d\u4ee4\u4e2d\u3002\u6253\u5f00\u8584\u7247\u3002\u5173\u95ed\u4f60\u6700\u559c\u6b22\u7684\u7f16\u8f91\u5668\uff0c\u8ba9&#39\uff1bs\u5c06go hello\u914d\u7f6e\u4e3a\u9ed8\u8ba4\u5e94\u7528\u7a0b\u5e8f\uff1a\n&lt\uff1b\u739b\u62c9&gt\uff1bURL\u8def\u5f84\u7684\u989d\u5916\u90e8\u5206\u662f\u7528\u6765\u505a\u4ec0\u4e48\u7684\uff1f\u90a3\u662fgitbranch\u5417\uff1f\n&lt\uff1b\u5361\u8fea&gt\uff1b\u662f\u7684\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8be5\u8bed\u6cd5\u8bbe\u7f6eNix\u5e94\u8be5\u4ece\u4e2d\u6784\u5efa\u7684git\u5206\u652f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u4f7f\u7528\u9ed8\u8ba4\u5206\u652f\uff08\u901a\u5e38\u4e3amain\uff09\uff0c\u4f46\u6709\u65f6\u9700\u8981\u6307\u5b9a\u5206\u652f\u6216\u76f4\u63a5\u63d0\u4ea4\u3002\n\u5c3c\u514b\u65af\u548c#39\uff1bs\u7684\u8d85\u80fd\u529b\u662f\u4ee5\u58f0\u660e\u65b9\u5f0f\u7ba1\u7406\u9879\u76ee\u7684\u5f00\u53d1\u73af\u5883\u7684\u80fd\u529b\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u786e\u4fdd\u9879\u76ee\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u5728\u4f7f\u7528\u76f8\u540c\u7684\u5de5\u5177\u3002\n&lt\uff1b\u5361\u8fea&gt\uff1b\u6211\u5728\u6211\u6240\u6709\u7684\u9879\u76ee\u4e2d\u90fd\u4f7f\u7528\u4e86\u5b83\uff0c\u4ee5\u81f3\u4e8e\u5f53\u6211\u5728\u9879\u76ee\u6587\u4ef6\u5939\u4e4b\u5916\u65f6\uff0c\u6211\u6ca1\u6709\u4efb\u4f55\u53ef\u7528\u7684\u5f00\u53d1\u5de5\u5177\u3002\nFlakes\u80fd\u591f\u4f7f\u7528devShell flake\u8f93\u51fa\u6307\u5b9a\u8fd9\u4e00\u70b9\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u52a0\u5230\u4f60\u7684\u8584\u7247\u4e0a\u3002\u5c3c\u514b\u65af\uff1a\u7528\u8fd9\u4e2a\uff1a\n#defaultApp devShell=forAllSystems\uff08\u7cfb\u7edf\uff1alet pkgs=nixpkgsFor.${system}\uff1b\u5728pkgs.mkShell\u4e2d{buildInputs=with pkgs\uff1b[go gopls goimports go tools]\uff1b}\uff09\uff1b\n&lt\uff1b\u739b\u62c9&gt\uff1b\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u57fa\u672c\u7684GO\u5f00\u53d1\u73af\u5883\u3002\u5b83\u5305\u62ec\u6807\u51c6\u5de5\u5177\uff0c\u5982\u8bed\u8a00\u670d\u52a1\u5668\u3001\u7528\u4e8e\u66f4\u597d\u683c\u5f0f\u5316\u7684goimports\u548c\u7c7b\u4f3cstaticcheck\u7684\u5de5\u5177\u3002\u5982\u679c\u4f60\u5728\u5de5\u4f5c\u4e2d\u5b9a\u671f\u4f7f\u7528\u9759\u6001\u68c0\u67e5\uff0c\u5982\u679c\u4f60\u89c9\u5f97\u591a\u7c73\u5c3c\u514b\u6709\u7528\u7684\u8bdd\uff0c\u8bf7\u8003\u8651\u628a\u5b83\u6254\u6389\u51e0\u4e2a\u6708\u3002\u8fd9\u6709\u52a9\u4e8e\u9879\u76ee\u66f4\u52a0\u81ea\u6211\u7ef4\u6301\u3002\n\u7136\u540e\u968f\u5fc3\u6240\u6b32\u5730\u653b\u51fb\u4f60\u7684\u9879\u76ee\u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e2agit\u56de\u8d2d\u53d1\u9001\u7ed9\u670b\u53cb\uff0c\u4ed6\u4eec\u4e5f\u4f1a\u6709\u76f8\u540c\u7684\u8bbe\u7f6e\u3002\n\u73b0\u5728\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u6295\u5165\u3002\u7247\u72b6\u8f93\u5165\u5141\u8bb8\u60a8\u5c06\u5916\u90e8\u4f9d\u8d56\u9879\u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u3002\u4f8b\u5982\uff0c\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u770b\u770bnixpkgs\u8f93\u5165\uff1a\n\u8fd9\u5b9a\u4e49\u4e86\u5e94\u7528\u4e8e\u9879\u76ee\u7684NIXPKG\u7684\u7248\u672c\u3002\u8be5\u6a21\u677f\u9ed8\u8ba4\u4e3aNixOS 21.11&#39\uff1bs\u7248\u672c\u7684nixpkgs\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5347\u7ea7\u4e3anixos\u4e0d\u7a33\u5b9a\uff0c\u65b9\u6cd5\u662f\u5c06\u5176\u66f4\u6539\u4e3a\uff1a\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8fd0\u884cnix flake update\uff0c\u7136\u540e\u8fd0\u884cnix develope\uff0c\u770b\u770b\u6211\u4eec\u8fd0\u884c\u7684\u662f\u4e00\u4e2a\u66f4\u65b0\u7248\u672c\u7684Go\uff1a\n$nix flake update\u8b66\u544a\uff1a\u6b63\u5728\u66f4\u65b0\u9501\u6587\u4ef6&#39/home/cadey/tmp/gohello/flake\u3002\u9501&#39\uff1b\uff1a\u2022\u66f4\u65b0\u8f93\u5165&#39\uff1b\u5c3c\u514b\u65af\u5e15\u514b\u65af&#39\uff1b\uff1a&#39;github:NixOS/nixpkgs/77aa71f66fd05d9e7b7d1c084865d703a8008ab7\u548c#39\uff1b(2022-01-19)  \u2192 &#39;github:NixOS/nixpkgs/2128d0aa28edef51fd8fef38b132ffc0155595df&#39\uff1b\uff082022-02-16\uff09$nix\u5f00\u53d1[[\u53d7\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4]\uff1a~/tmp/gohello]$go\u7248\u672cgo\u7248\u672cgo1\u300217.7 linux/amd64\n\u8fd9\u8fd8\u5141\u8bb8\u60a8\u5f15\u5165\u5176\u4ed6Nix flakes\u9879\u76ee\uff0c\u4f8b\u5982my CSS framework Xess\uff1a\n&lt\uff1b\u5361\u8fea&gt\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u60a8\u4f7f\u7528Nix flakes\u62c9\u5165\u53e6\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u5b83\u5c06\u8be5\u9879\u76ee\u89c6\u4e3a\u4e00\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u5b87\u5b99\uff0c\u5e76\u4e14\u53ea\u4e0e\u8be5flake\u7684\u8f93\u51fa\u4ea4\u4e92\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u62c9\u5165\u81ea\u5df1\u7248\u672c\u7684nixpkgs\uff0c\u5b83\u62e5\u6709\u7684\u6bcf\u4e2a\u4f9d\u8d56\u9879\u90fd\u53ef\u4ee5\u62c9\u5165\u81ea\u5df1\u7248\u672c\u7684nixpkgs\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u901a\u8fc7\u5236\u4f5cXess\u548c#39\uff1bnixpkgs\u7684\u8f93\u5165\u9075\u5faa\u6211\u4eec\u81ea\u5df1\u7684\u8f93\u5165\uff0c\u6211\u4eec\u8bf4&#34\uff1b\u6211\u77e5\u9053\u8fd9\u53ef\u80fd\u4e0d\u517c\u5bb9\uff0c\u4f46\u8bf7\u6539\u7528\u8fd9\u4e2a\u7248\u672c\u7684nixpkgs&#34\uff1b\u3002\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u6709\u5f88\u591a\u6295\u5165\u7684\u5927\u578b\u9879\u76ee\uff08\u4f8b\u5982\uff0c\u6709\u592a\u591a\u4e00\u6b21\u6027\u9879\u76ee\u7684\u4eba\u8fdb\u884c\u7684nixos configs\u56de\u8d2d\uff09\u66f4\u5feb\u5730\u8bc4\u4f30\u548c\u6784\u5efa\u3002Nixflakes\u786e\u5b9e\u6709\u4e00\u4e2a\u7f13\u5b58\u7684\u8ba1\u7b97\u5668\uff0c\u4f46\u5b83\u4ecd\u7136\u6709\u52a9\u4e8e\u4ece\u4e00\u5f00\u59cb\u5c31\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u3002\n\u6216\u8005\u4efb\u4f55\u4f60\u60f3\u8981\u7684\uff01\u4e00\u4e2a\u6709\u7528\u7684\u5e93\u662fflake utils\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u60a8\u7b80\u5316flake\u3002nix\u548c\u6446\u8131\u90a3\u4e9b\u4e11\u964b\u7684forAllSystems\u548cnixpkgsFor flake\u4e2d\u7684\u51fd\u6570\u3002\u7981\u6b62\u9ed8\u8ba4\u4f7f\u7528\u6b64\u5e16\u5b50\u3002\u6709\u5173\u4f7f\u7528\u6b64\u5e93\u7684\u8584\u7247\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u89c1\u6b64\u8584\u7247\u3002\u4f4f\u5728#xeserv\u7684IRCbot\u7684nix\u3002\n\u901a\u5e38\uff0c\u60a8\u9700\u8981\u5728Nix\u5b88\u62a4\u8fdb\u7a0b\u4e2d\u542f\u7528Nix\u8584\u7247\u6765\u5229\u7528\u5b83\u4eec\u3002\u5f53\u4f60\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u65f6\uff0c\u8fd9\u5f88\u597d\uff0c\u4f46\u6709\u65f6\u4f60&#39\uff1b\u6211\u4eec\u9700\u8981\u5728\u4e0d\u542f\u7528\u96ea\u82b1\u7684\u60c5\u51b5\u4e0b\u4e3a\u4eba\u4eec\u63d0\u4f9b\u670d\u52a1\u3002\u5f53\u9700\u8981\u5c06Nix flakes\u9879\u76ee\u4e2d\u7684\u4e00\u4e2a\u9879\u76ee\u8f6c\u6362\u4e3a\u672a\u542f\u7528flakes\u7684\u9879\u76ee\u65f6\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u6709\u4e00\u4e2a\u540d\u4e3aflake compat\u7684\u56fe\u4e66\u9986\u53ef\u4ee5\u8ba9\u8fd9\u4e00\u5207\u53d8\u5f97\u7b80\u5355\u3002\n\uff08\u5bfc\u5165\uff08\u8ba9lock=builtins.fromJSON\uff08builtins.readFile./flake.lock\uff09\uff1b\u5728fetchTarball{url=&#34\uff1bhttps://github.com/edolstra/flake-compat/archive/${lock.nodes.flake compat.locked.rev}\u3002\u7126\u6cb9gz&#34\uff1b\uff1bsha256=\u9501\u3002\u8282\u70b9\u3002\u7247\u72b6\u540c\u80de\u3002\u9501\u4e0a\u4e86\u3002narHash\uff1b}\uff09{src=./\uff1b}\uff09\u3002defaultNix\n\uff08\u5bfc\u5165\uff08\u8ba9lock=builtins.fromJSON\uff08builtins.readFile./flake.lock\uff09\uff1b\u5728fetchTarball{url=&#34\uff1bhttps://github.com/edolstra/flake-compat/archive/${lock.nodes.flake compat.locked.rev}\u3002\u7126\u6cb9gz&#34\uff1b\uff1bsha256=\u9501\u3002\u8282\u70b9\u3002\u7247\u72b6\u540c\u80de\u3002\u9501\u4e0a\u4e86\u3002narHash\uff1b}\uff09{src=./\uff1b}\uff09\u3002shellNix\nNix flakes\u672c\u673a\u652f\u6301\u5c06\u79c1\u6709git\u5b58\u50a8\u5e93\u4f5c\u4e3a\u8f93\u5165\u3002\u8fd9\u5728\u5c1d\u8bd5\u6784\u5efa\u4f60\u4e0d\u9700\u8981\u7684\u8f6f\u4ef6\u65f6\u5f88\u6709\u7528\uff1bI don\u2019\u6211\u4e0d\u60f3\u5bf9\u5916\u5f00\u653e\u3002\u8981\u4f7f\u7528\u79c1\u4eba\u56de\u8d2d\uff0c\u60a8\u7684flake\u8f93\u5165URL\u5e94\u8be5\u5982\u4e0b\u6240\u793a\uff1a\n&lt\uff1b\u5361\u8fea&gt\uff1b\u6211&#39\uff1b\u6211\u5f88\u786e\u5b9a\u4f60\u53ef\u4ee5\u5728flakes\u4e4b\u5916\u4f7f\u7528\u79c1\u4ebagit\u56de\u8d2d\u534f\u8bae\uff0c\u4f46\u6211\u4e00\u76f4\u4e0d\u6e05\u695a\u4f60\u6700\u7ec8\u4f1a\u600e\u4e48\u505a\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u6700\u5927\u7684\u95ee\u9898\u662f\u5b83\u53ef\u4ee5\u8ba9\u4f60\u628aNixOS\u6a21\u5757\u5d4c\u5165\u5230\u8584\u7247\u4e2d\u3002\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u5728\u5b9a\u4e49\u8f6f\u4ef6\u7684\u4f4d\u7f6e\u65c1\u8fb9\u5b9a\u4e49\u8f6f\u4ef6\u7684\u7cfb\u7edf\u914d\u7f6e\uff0c\u4ece\u800c\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\u53d1\u8d27\u3002\u4f7f\u7528\u5b83\uff0c\u4f60\u53ef\u4ee5\u628a\u5b89\u88c5\u8f6f\u4ef6\u53d8\u6210\u5c06\u5176\u6dfb\u52a0\u5230\u7cfb\u7edf\u4e2d\u7684\u4e00\u4ef6\u4e8b&#39\uff1bs flake\uff0c\u6dfb\u52a0\u6a21\u5757\uff0c\u7136\u540e\u542f\u7528\u8981\u542f\u7528\u7684\u8bbe\u7f6e\u3002\n\u5c3c\u514b\u677e\u6a21\u5757\u3002bot={config\uff0clib\uff0c\u2026}{options.within.services.mara-bot.enable=lib.mkEnableOption&#34\uff1benable-mara-bot&#34\uff1bconfig=lib.mkIf-config.within.services.mara-bot.enable{users.groups.mara-bot={}\uff1b\u7528\u6237\u3002\u7528\u6237\u3002mara bot={createHome=true\uff1bisSystemUser=true\uff1bhome=&#34\uff1b/var/lib/mara bot&#34\uff1bgroup=&#34\uff1bmara bot&#34\uff1b}\uff1b\u7cfb\u7edf\u5316\u3002\u670d\u52a1\u3002mara bot={wantedBy=[&#34\uff1b\u591a\u7528\u6237\u3002target&#34\uff1b]\uff1b\u73af\u5883RUST_LOG=&#34\uff1b\u5854http=debug\uff0cinfo&#34\uff1b\uff1bunitConfig\u3002ConditionPathExists=&#34/var/lib/mara bot/config\u3002\u4e9a\u9a6c\u5c14&#34\uff1b\uff1bserviceConfig={User=&#34\uff1bmara bot&#34\uff1bGroup=&#34\uff1bmara bot&#34\uff1bRestart=&#34\uff1balways&#34\uff1bWorkingDirectory=&#34\uff1b/var/lib/mara bot&#34\uff1bExecStart=&#34\uff1b${self.defaultPackage.&#/\u5bbe/\u9a6c\u62c9&#34\uff1b}\uff1b}\uff1b}\uff1b}\uff1b}\uff1b\n\u8fd9\u91cc\u6700\u91cd\u8981\u7684\u90e8\u5206\u662f\u8d77\u70b9\u3002\u5b83\u6307\u5411\u6e56\u5916&#39\uff1bs\u7684\u9ed8\u8ba4\u5305\uff08\u5e0c\u671b\u5728\u5176\u4e2d\u5b9a\u4e49bot&#39\uff1b\u7684\u4ee3\u7801\uff09\uff0c\u7136\u540e\u7531systemd\u7ba1\u7406\u3002\n\u6211\u8ba1\u5212\u7528\u5b83\u6765\u5f7b\u5e95\u7b80\u5316\u6211\u7684nixos\u914d\u7f6e\u56de\u8d2d\u534f\u8bae\u3002\u73b0\u5728\uff0c\u5b83\u6709\u5f88\u591a\u7279\u5b9a\u4e8e\u9879\u76ee\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6211\u80fd\u5c06\u8fd9\u4e9b\u4ee3\u7801\u8f6c\u79fb\u5230\u76f8\u5173\u7684\u9879\u76ee\u4e2d\uff0c\u6211\u53ef\u4ee5\u4ecemyconfigs repo\u7684\u6838\u5fc3\u4e2d\u5220\u9664\u5f88\u591a\u4ee3\u7801\u3002\n\u6700\u540e\uff0cNix flakes\u901a\u8fc7\u5728\u6784\u5efa\u6b65\u9aa4\u5d4c\u5165\u7cfb\u7edf\uff0c\u8ba9\u60a8\u53ef\u4ee5\u770b\u5230\u7cfb\u7edf\u7684\u914d\u7f6e\u7248\u672c\u3002\u901a\u5e38\uff0cNixOS\u5141\u8bb8\u60a8\u901a\u8fc7NixOS\u7248\u672c\u2014\u2014json\u67e5\u770b\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\u60a8\u6709NixOS\u7248\u672c\u548cnixpkgs\u54c8\u5e0c\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740&#39\uff1b\u4f46\u662f\uff0c\u6211\u4e0d\u80fd\u544a\u8bc9\u4f60\u6b63\u5728\u8fd0\u884c\u4ec0\u4e48\u914d\u7f6e\u6216\u5173\u4e8e\u5b83\u7684\u4efb\u4f55\u4e8b\u60c5\u3002\u4f46\u662f\uff0c\u4f7f\u7528flakesyou\u53ef\u4ee5\u5c06\u914d\u7f6e\u7684git\u54c8\u5e0c\u5d4c\u5165\u5230\u7cfb\u7edf\u914d\u7f6e\u4e2d\uff1a\n\u4ee5\u4e0a\u6bcf\u4e00\u4e2a\u4e3b\u9898\u90fd\u6709\u5f88\u591a\u5185\u5bb9\u8981\u8ba8\u8bba\u3002\u6211&#39\uff1b\u6211\u53ea\u662f\u5bf9\u5b83\u4eec\u505a\u4e86\u4e00\u4e2a\u975e\u5e38\u9ad8\u5c42\u6b21\u7684\u6982\u8ff0\uff0c\u540c\u65f6\u6211\u4e86\u89e3\u4e86\u66f4\u591a\u4fe1\u606f\uff0c\u5e76\u901a\u8fc7myNixOS\u914d\u7f6e\u96f6\u788e\u5730\u8fc1\u79fb\u5230\u4e86\u8584\u7247\u4e0a\u3002\u8fd9\u4e5f\u7ed9\u4e86\u6211\u4e00\u4e2a\u673a\u4f1a\u6765\u6e05\u7406\u4e1c\u897f\uff0c\u4ece\u6211\u7684\u5c3c\u514b\u677e\u914d\u7f6e\u4e2d\u5480\u56bc\u51fa\u5f88\u591a\u8102\u80aa\u3002\u51c6\u5907\u597d\u540e\u4f1a\u6709\u66f4\u591a\u3002\n\u672c\u6587\u53d1\u5e03\u5728M02 21 2022\u4e0a\u3002\u81ea\u516c\u5e03\u4ee5\u6765\uff0c\u4e8b\u5b9e\u548c\u60c5\u51b5\u53ef\u80fd\u53d1\u751f\u4e86\u53d8\u5316\u3002\u5982\u679c\u6709\u95ee\u9898\u6216\u4e0d\u6e05\u695a\u7684\u5730\u65b9\uff0c\u8bf7\u5728\u4e0b\u7ed3\u8bba\u4e4b\u524d\u8054\u7cfb\u6211\u3002", "note_en": "Nix is a package manager that lets you have a more deterministic view of yoursoftware dependencies and build processes. One if its biggest weaknesses out ofthe box is that there are very few conventions on how projects using Nix shouldwork together. It&#39;s like having a build system but also having to configuresystems to run software yourself. This could mean copying a NixOS module out ofthe project&#39;s git repo, writing your own or more. In contrast to this,  Nixflakes define a set of conventions for howsoftware can be build, run, integrated and deployed without having to rely onexternal tools such as  Niv or Lorri to help you do basic tasks in atimely manner.\n This is going to be a series of posts that will build on eachother. This postwill be an introduction to Nix flakes and serve as a &#34;why should I care?&#34; styleoverview of what you can do with flakes without going into too much detail. Mostof these will get separate posts (some more than one post).\n In my opinion, here are some of the big reasons you should care about Nixflakes:\n   One of the big annoying parts about getting into Nix is that setting up projectsisn&#39;t totally a defined science. Nix configurations just tend to groworganically and can easily become weird or difficult to understand for peoplethat didn&#39;t start the project. Nix flakes helps fix this by doing a few things:\n Defining a  flake.nix as the central &#34;hub&#34; for your project&#39;s dependencies,exposed packages, NixOS configuration modules  andmore.\n Shipping a  set of templates so that youcan get projects started easily. Think something like Yeoman but built directly into Nix. You can also defineyour own templates in your  flake.nix.\n As an example that we will use for the rest of this post to help explain it,let&#39;s make a Go project with their Go template. First you will need to enableNix flakes on your machine. If you are using NixOS, add this to your configuration.nix file:\n   If you are not on NixOS, you will need to either edit  ~/.config/nix/nix.confor  /etc/nix/nix.conf and add the following line to it:\n  &lt; Mara&gt; You may need to restart the Nix daemon here, but if you are unsure how Nix wasset up on that non-NixOS machine feel free to totally restart yourcomputer.\n Now go to a temporary folder and run these commands to make a folder and createa new flake from a template:\n     {  description = &#34;A simple Go package&#34;;   # Nixpkgs / NixOS version to use.  inputs.nixpkgs.url = &#34;nixpkgs/nixos-21.11&#34;;   outputs = { self, nixpkgs }:  let   # Generate a user-friendly version number.  version = builtins.substring 0 8 self.lastModifiedDate;   # System types to support.  supportedSystems = [ &#34;x86_64-linux&#34; &#34;x86_64-darwin&#34; &#34;aarch64-linux&#34; &#34;aarch64-darwin&#34; ];   # Helper function to generate an attrset &#39;{ x86_64-linux = f &#34;x86_64-linux&#34;; ... }&#39;.  forAllSystems = nixpkgs.lib.genAttrs supportedSystems;   # Nixpkgs instantiated for supported system types.  nixpkgsFor = forAllSystems (system: import nixpkgs { inherit system; });   in  {   # Provide some binary packages for selected system types.  packages = forAllSystems (system:  let  pkgs = nixpkgsFor.${system};  in  {  go-hello = pkgs.buildGoModule {  pname = &#34;go-hello&#34;;  inherit version;  # In &#39;nix develop&#39;, we don&#39;t need a copy of the source tree  # in the Nix store.  src = ./.;   # This hash locks the dependencies of this package. It is  # necessary because of how Go requires network access to resolve  # VCS. See https://www.tweag.io/blog/2021-03-04-gomod2nix/ for  # details. Normally one can build with a fake sha256 and rely on native Go  # mechanisms to tell you what the hash should be or determine what  # it should be &#34;out-of-band&#34; with other tooling (eg. gomod2nix).  # To begin with it is recommended to set this, but one must  # remeber to bump this hash when your dependencies change.  #vendorSha256 = pkgs.lib.fakeSha256;   vendorSha256 = &#34;sha256-pQpattmS9VmO3ZIQUFn66az8GSmB4IvYhTTCFn6SUmo=&#34;;  };  });   # The default package for &#39;nix build&#39;. This makes sense if the  # flake provides only one package or there is a clear &#34;main&#34;  # package.  defaultPackage = forAllSystems (system: self.packages.${system}.go-hello);  }; }\n This defines a single Go package that is supported on macOS and Linux for 64 bitx86 processors and 64 bit ARM processors.\n &lt; Mara&gt; In practice this spread should cover all of the main targets you&#39;ll need tocare about for local development and clouddeployment.\n       {  description = &#34;A simple Go package&#34;;    inputs.nixpkgs.url = &#34;nixpkgs/nixos-21.11&#34;;    outputs = { self, nixpkgs }: {  packages = { ... };  defaultPackage = { ... };  }; }\n &lt; Cadey&gt; A note: in the rest of this article (and series of articles), when I refer to a&#34;flake output&#34;, I am referring to an attribute in the  outputs attribute ofyour  flake.nix. Ditto with &#34;flake input&#34; referring to the  inputs attributeof your  flake.nix.\n When you ran  nix build earlier, it defaulted to building the package in defaultPackage. You can also build the  go-hello package by running thiscommand:\n    A standard default package means that you can more easily build software withouthaving to read documentation on what file to build.  nix build will Just Work\u2122\ufe0f.\n  Additionally, you can expose a package as an application. This allows you tosimplify that above  nix build and  ./result/bin/go-hello cycle into a single nix run command. Open  flake.nix in your favorite editor and let&#39;s configure go-hello to be the default app:\n      &lt; Mara&gt; What is that extra part of the URL path for? Is that a gitbranch?\n &lt; Cadey&gt; Yes, you can use that syntax to set the git branch that Nix should build from.By default it will use the default branch (typically  main), but sometimes youneed to specify a branch or commit directly.\n  One of Nix&#39;s superpowers is the ability to declaratively manage the developmentenvironment for a project so that you can be sure that everyone working on theproject is using the same tools.\n &lt; Cadey&gt; I use this with all of my projects to the point that when I am outside of aproject folder I do not have any development toolsavailable.\n Flakes has the ability to specify this using the  devShell flake output. Youcan add it to your  flake.nix using this:\n # after defaultApp  devShell = forAllSystems (system:  let pkgs = nixpkgsFor.${system};  in pkgs.mkShell {  buildInputs = with pkgs; [ go gopls goimports go-tools ];  });\n &lt; Mara&gt; I consider this to be a basic Go development environment. It includes standardtools such as the language server,  goimports for better formatting and toolslike  staticcheck. If you use staticcheckregularly at work, please consider throwing  Dominik a couple bucksa month if you find it useful. It helps the project be moreself-sustaining.\n   And then hack at your project all you want. You can send this git repo to afriend and they will have the same setup.\n  Now let&#39;s talk about inputs. Flake inputs let you add external dependencies to aproject. As an example, let&#39;s look at the  nixpkgs input:\n  This defines the release of nixpkgs that should be used for the project. Thistemplate defaults to NixOS 21.11&#39;s version of nixpkgs, however we can upgrade itto nixos-unstable by changing it to this:\n  Then we can run  nix flake update and then  nix develop and see that we arerunning a newer version of Go:\n $ nix flake update warning: updating lock file &#39;/home/cadey/tmp/gohello/flake.lock&#39;: \u2022 Updated input &#39;nixpkgs&#39;:  &#39;github:NixOS/nixpkgs/77aa71f66fd05d9e7b7d1c084865d703a8008ab7&#39; (2022-01-19)  \u2192 &#39;github:NixOS/nixpkgs/2128d0aa28edef51fd8fef38b132ffc0155595df&#39; (2022-02-16)   $ nix develop  [ [email\u00a0protected]:~/tmp/gohello]$ go version go version go1.17.7 linux/amd64\n This also lets you pull in other Nix flakes projects, such as my CSS framework Xess:\n   &lt; Cadey&gt; By default when you pull in another project with Nix flakes, it treats thatproject as an entirely separate universe and only interacts with the outputs ofthat flake. This means it pulls in its own version of nixpkgs, each dependencyit has can pull in that own version of nixpkgs and vice versa ad infinitum. Bymaking Xess&#39; nixpkgs input follows our own one, we are saying &#34;I understand thismay be incompatible, but please use this version of nixpkgs instead&#34;. This canhelp larger projects with many inputs (such as a nixos configs repo made bysomeone with too many throwaway side projects) evaluate and build faster. Nixflakes does have a cached evaluator, but still it helps to avoid the problem inthe first place.\n Or anything you want! A useful library to pull in is flake-utils, that can help yousimplify your  flake.nix and get rid of those ugly  forAllSystems and nixpkgsFor functions in the  flake.nix that this post used by default. For anexample of a flake that uses this library, see  this flake.nix from the IRCbot that lives in   #xeserv.\n   Normally you need to enable Nix flakes in your Nix daemon to take advantage ofthem. This is great for when you can do that, but sometimes you&#39;ll need to makethings work for people without flakes enabled. This could happen when needing tograft in a Nix flakes project to one without flakes enabled. There is a librarycalled  flake-compat that makes thiseasy.\n    (import (  let  lock = builtins.fromJSON (builtins.readFile ./flake.lock);  in fetchTarball {  url = &#34;https://github.com/edolstra/flake-compat/archive/${lock.nodes.flake-compat.locked.rev}.tar.gz&#34;;  sha256 = lock.nodes.flake-compat.locked.narHash; } ) {  src = ./.; }).defaultNix\n  (import (  let  lock = builtins.fromJSON (builtins.readFile ./flake.lock);  in fetchTarball {  url = &#34;https://github.com/edolstra/flake-compat/archive/${lock.nodes.flake-compat.locked.rev}.tar.gz&#34;;  sha256 = lock.nodes.flake-compat.locked.narHash; } ) {  src = ./.; }).shellNix\n   Nix flakes has native support for private git repositories as inputs. This canbe useful when trying to build software you don&#39;t want to release as open to theworld. To use a private repo, your flake input URL should look something likethis:\n  &lt; Cadey&gt; I&#39;m pretty sure you could use private git repos outside of flakes, however itwas never really clear to me  how you end up doingit.\n  The biggest ticket item for me is that it lets you embed NixOS modules in flakesthemselves. This lets you define the system configuration for software rightnext to where the software is defined, thus shipping it as a unit. Using thisyou can make installing software a matter of adding it to your system&#39;s flake,adding the module and then enabling the settings you want to enable.\n  nixosModules.bot = { config, lib, ... }: {  options.within.services.mara-bot.enable =  lib.mkEnableOption &#34;enable Mara bot&#34;;   config = lib.mkIf config.within.services.mara-bot.enable {  users.groups.mara-bot = { };   users.users.mara-bot = {  createHome = true;  isSystemUser = true;  home = &#34;/var/lib/mara-bot&#34;;  group = &#34;mara-bot&#34;;  };   systemd.services.mara-bot = {  wantedBy = [ &#34;multi-user.target&#34; ];  environment.RUST_LOG = &#34;tower_http=debug,info&#34;;  unitConfig.ConditionPathExists = &#34;/var/lib/mara-bot/config.yaml&#34;;  serviceConfig = {  User = &#34;mara-bot&#34;;  Group = &#34;mara-bot&#34;;  Restart = &#34;always&#34;;  WorkingDirectory = &#34;/var/lib/mara-bot&#34;;  ExecStart = &#34;${self.defaultPackage.&#34;${system}&#34;}/bin/mara&#34;;  };  };  }; };\n The key important part here is the  ExecStart line. It points back to theflake&#39;s default package (which is hopefully where the bot&#39;s code is defined),and then has systemd manage that.\n I plan to use this to radically simplify my nixos-configs repo. Right now it hasa lot of code that is very project-specific and if I can move that into theprojects in question, I can eliminate a lot of code out of the core of myconfigs repo.\n  Finally, Nix flakes lets you see the configuration version of a system byembedding it at the build step. Normally NixOS lets you see the followinginformation with  nixos-version --json:\n  You have the NixOS version and the nixpkgs hash. That doesn&#39;t tell you whatconfiguration you are running or anything about it though. However with flakesyou can embed the git hash of your configuration into the system config:\n       There is a lot more to get into with each of these topics. I&#39;m only reallygiving a very high level overview on them while I learn more and migrate over myNixOS configurations to flakes piecemeal. This has also given me theopportunity to clean things up and chew out a lot of the fat from my NixOSconfigurations. More to come when it is ready.\n   This article was posted on M02 21 2022. Facts and circumstances may have changed since publication. Please  contact me before jumping to conclusions if something seems wrong or unclear.", "posttime": "2022-02-22 02:35:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c3c\u514b\u65af,flakes,nix", "title": "\u5c3c\u514b\u65af\u00b7\u5f17\u83b1\u514b\u65af\uff1a\u5bfc\u8a00", "title_en": "Nix Flakes: An Introduction", "transed": 1, "url": "https://christine.website/blog/nix-flakes-1-2022-02-21", "via": "", "real_tags": ["\u5c3c\u514b\u65af", "flakes", "nix"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074534, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7b2c\u4e00\u6b21\u82b1\u4e86\u51e0\u5929\u65f6\u95f4\u73a9Bootloader\u3002\u8fd9\u7bc7\u6587\u7ae0\u6784\u5efa\u4e86\u4e00\u4e2a\u5e26\u6709\u51e0\u4e2a\u952e\u76d8\u5feb\u6377\u952e\u7684\u6587\u672c\u7f16\u8f91\u5668\u3002\u6211&#39\uff1b\u6211\u5c06\u4e8e1\u670827\u65e5\u5728HackerNights\u8fdb\u884c\u4e00\u6b21\u57fa\u4e8e\u8fd9\u9879\u5de5\u4f5c\u7684\u865a\u62df\u6f14\u8bb2\u3002\n\u80af\u5b9a\u6709\u5f88\u591a\u6f0f\u6d1e\u3002\u4f46\u5b83&#39\uff1bIt\u2019\u5f88\u96be\u627e\u5230\u5f15\u5bfc\u7a0b\u5e8f\u7f16\u7a0b\u7684\u4e2d\u95f4\u8d44\u6e90\uff0c\u6240\u4ee5\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u53ef\u80fd\u4f1a\u6709\u7528\u3002\n\u5982\u679c\u4f60\u5df2\u7ecf\u4e86\u89e3\u4e86\u57fa\u7840\u77e5\u8bc6\u548c\u4e2d\u7ea7\u8bfe\u7a0b\uff0c\u5e76\u4e14\u53ea\u60f3\u8981\u4e00\u4e2a\u4e2d\u7ea7+\u6559\u7a0b\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u8bd5\u8bd5\u8fd9\u4e2a\u3002\u975e\u5e38\u597d\u3002\n\u8fd9\u7bc7\u5e16\u5b50\u4e0a\u7684\u4ee3\u7801\u53ef\u4ee5\u5728Github\u4e0a\u627e\u5230\uff0c\u4f46\u662f\u5b83&#39\uff1b\u8fd9\u6bd4\u6211\u5e73\u5e38\u7684\u8ba1\u5212\u66f4\u50cf\u827e\u59c6\u65af\u3002\n\u5b89\u88c5qemu\uff08\u5728macOS\u6216Linux\u4e0a\uff09\u3001nasm\u5e76\u590d\u5236snake\u3002\u4ece\u90a3\u7bc7\u535a\u6587\u4e2d\u4e0b\u8f7d\u6e90\u4ee3\u7801\u5230\u78c1\u76d8\u3002\n$cat snake\u3002asm[\u4f4d16]\uff1bPragma\uff0c\u544a\u8bc9\u6c47\u7f16\u7a0b\u5e8f\u6211\u4eec\uff1b\u5904\u4e8e16\u4f4d\u6a21\u5f0f\uff08\u8fd9\u662f\u4ece\u8f6f\u76d8\u5f15\u5bfc\u65f6\u7684x86\u72b6\u6001\uff09\u3002[org 0x7C00]\uff1b\u5e03\u62c9\u683c\u9a6c\uff0c\u544a\u8bc9\u88c5\u914d\u5de5\uff1b\u4ee3\u7801\u5c06\u88ab\u52a0\u8f7d\u3002mov bl\uff0c1\uff1b\u8815\u866b\u7684\u8d77\u59cb\u65b9\u5411\u3002\u63090xa000\uff1b\u5c06VRAM\u7684\u5730\u5740\u52a0\u8f7d\u5230es\u4e2d\u3002\u6d41\u884c\u97f3\u4e50\u6e38\u620f\uff1amov si\uff0c320*100+160\uff1b\u8815\u866b&#39\uff1bs\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4e2d\u5fc3\u4f4d\u7f6e\uff1b\u5c4f\u5e55\u8bbe\u7f6e\u89c6\u9891\u6a21\u5f0f\u3002\u6a21\u5f0f13h\u662fVGA\uff08\u6bcf\u50cf\u7d201\u5b57\u8282\uff0c\u5b9e\u9645\u989c\u8272\u5b58\u50a8\u5728\u8c03\u8272\u677f\u4e2d\uff09\uff0c\u603b\u5927\u5c0f\u4e3a320x200\u3002\u91cd\u65b0\u542f\u52a8\u65f6\uff1b\u8fd9\u4e5f\u4f1a\u6e05\u9664\u5c4f\u5e55\u3002mov ax\uff0c0x0013 int 0x10\uff1b\u753b\u8fb9\u754c\u3002\u6211\u4eec\u5047\u8bbe\u9ed8\u8ba4\u8c03\u8272\u677f\u5bf9\u6211\u4eec\u6709\u7528\uff1b\u6211\u4eec\u8fd8\u5047\u8bbe\u4ece\u5e95\u90e8\u5f00\u59cb\u7ed8\u52362176\u4e2a\u50cf\u7d20\uff1b\u73af\u7ed5\u5e76\u6700\u7ec8\u7ed8\u5236\u4e0a\u4e0b\u8fb9\u6846\u3002mov di\uff0c320*199 mov cx\uff0c2176 repdraw_\u5faa\u73af\uff1astosb\uff1b\u7ed9\u67d0\u4eba\u753b\u53f3\u8fb9\u6846\uff1b\u7ed8\u5236\u5de6\u8fb9\u6846\u6dfb\u52a0di\uff0c318 jnc\u7ed8\u5236_\u5faa\u73af\uff1b\u6ce8\u610f\u5728\u4e2d\u95f4\u7684\u8df3\u8dc3\uff1b\u7ed9\u67d0\u4eba\u6307\u793a\u3002\u6e38\u620f_\u5faa\u73af\uff1a\uff1b\u6211\u4eec\u4ece\u7aef\u53e30x60\u8bfb\u53d6\u952e\u76d8\u8f93\u5165\u3002\u8fd9\u4e5f\u4f1a\u4ece\u4e2d\u8bfb\u53d6\u5b57\u8282\uff1b\u9f20\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728al\u4e2d\u5904\u7406[up\uff080x48\uff09\u3001left\uff080x4b\uff09\u3001right\uff080x4d\uff09\u3001down\uff080x50\uff09]\u30010x60 cmp al\u30010x48 jb kb_handle_end cmp al\u30010x50 ja kb_handle_end\uff1b\u5728\u672b\u7aef\uff0cbx\u5305\u542b\u504f\u79fb\u4f4d\u79fb\uff08+1\uff0c-1\uff0c+320\uff0c-320\uff09\uff1b\u57fa\u4e8e\u6309\u4e0b/\u91ca\u653e\u7684\u952e\u76d8\u952e\u3002\u6211\u6253\u8d4c\u6709\u51e0\u4e2a\u5b57\u8282\uff1b\u6839\u636e\u4e0a\u9762\u7684\u8fb9\u754c\u68c0\u67e5\uff0c\u5728\u8fd9\u91cc\u522e\u80e1\u5b50\u3002aaa cbw dec ax dec ax jc kb_handle sub al\uff0c2 imul ax\uff0cax\uff0cbyte-0x50kb_handle:mov bx\uff0caxkb_handle_end:add si\uff0cbx\uff1b\u539f\u59cb\u4ee3\u7801\u4f7f\u7528set PALLTE\u547d\u4ee4\uff0810h/0bh\uff09\u7b49\u5f85\uff1b\u5782\u76f4\u56de\u7a0b\u3002\u4eca\u5929&#39\uff1b\u7136\u800c\uff0c\u7f8e\u56fd\u7684\u8ba1\u7b97\u673a\u901f\u5ea6\u592a\u5feb\uff0c\u6240\u4ee5\uff1b\u6211\u4eec\u7528int 15h 86h\u4ee3\u66ff\u3002\u8fd9\u4e5f\u4f1a\u51cf\u5c11\u51e0\u4e2a\u5b57\u8282\uff1b\u6ce8\uff1a\u4f60&#39\uff1b\u5982\u679c\u4f60\u5728\u865a\u62df\u673a\u4e0a\u8fd0\u884c\uff0c\u4f60\u5fc5\u987b\u8c03\u6574cx+dx\uff1b\u673a\u5668vs\u771f\u6b63\u7684\u786c\u4ef6\u3002\u968f\u610f\u7684\u6d4b\u8bd5\u4f3c\u4e4e\u8868\u660e\u865a\u62df\u673a\uff1b\u7b49\u5f85\u65f6\u95f4\u6bd4\u7269\u7406\u786c\u4ef6\u957f\u7ea63-4\u500d\u3002mov ah\uff0c0x86 mov dh\uff0c0xef int 0x15\uff1b\u7ed8\u5236\u8717\u6746\u5e76\u68c0\u67e5\u662f\u5426\u4e0e\u5947\u5076\u6821\u9a8c\u76f8\u51b2\u7a81\uff1b\uff08\u5076\u6570\u5947\u5076=\u78b0\u649e\uff09\u3002mov-ah\uff0c0x45-xor[es:si]\uff0cah\uff1b\u56de\u5230\u6e38\u620f\u4e3b\u5faa\u73af\u3002jpo game_loop\uff1b\u6211\u4eec\u649e\u5230\u4e86\u5899\u6216\u866b\u5b50\u3002\u91cd\u65b0\u5f00\u59cb\u6e38\u620f\u3002jmp\u91cd\u542f\u6e38\u620f\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u75280dw 0xaa55\u586b\u5145\u6247\u533a\u7684\u5176\u4f59\u90e8\u5206\uff1b\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u672b\u5c3e\u7684\u5f15\u5bfc\u7b7e\u540d\n\u6211&#39\uff1b\u6211\u4e0d\u4f1a\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8fbe\u5230\u90a3\u79cd\u590d\u6742\u7a0b\u5ea6\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83&#39\uff1b\u8fd9\u662f\u5de8\u5927\u7684\u52a8\u529b\u3002\n\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u662f\u6c47\u7f16\u7f16\u7a0b\u548cBIOS API\u7684\u6df7\u5408\u4f53\uff0c\u7528\u4e8eI/O\uff1b\u6211\u4eec\u6b63\u5728\u8003\u8651\u4f60\u5df2\u7ecf\u77e5\u9053\u7684\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u3002\u73b0\u5728\u4f60\u8981\u505a\u7684\u5c31\u662f\u5b66\u4e60API\u3002\nhello world\u5f15\u5bfc\u7a0b\u5e8f\u5df2\u7ecf\u88ab\u8be6\u7ec6\u89e3\u91ca\u8fc7\uff08\u53c2\u89c1\u8fd9\u91cc\u3001\u8fd9\u91cc\u548c\u8fd9\u91cc\uff09soI won&#39\uff1b\u4e0d\u8981\u9010\u884c\u6df1\u5165\u592a\u591a\u3002\n\u4f60\u597d\u300216\u4f4d\uff1b\u544a\u8bc9NASM\u8fd9\u662f16\u4f4d\u4ee3\u7801\u7ec4\u7ec70x7c00\uff1b\u544a\u8bc9NASM\u5f00\u59cb\u8f93\u51fa\u504f\u79fb\u91cf0x7c00boot\u5904\u7684\u5185\u5bb9\uff1amov si\uff0c\u60a8\u597d\uff1b\u5c06si\u5bc4\u5b58\u5668\u6307\u5411hello\u6807\u7b7e\u5185\u5b58\u4f4d\u7f6emov ah\uff0c0x0e\uff1b0x0e\u8868\u793a&#39\uff1b\u4ee5TTY\u6a21\u5f0f\u5199\u5165\u5b57\u7b26&#39\uff1b\u3002\u56de\u8def\uff1alodsb\u6216al\uff0cal\uff1bal=0\u5417\uff1fjz\u6682\u505c\uff1b\u5982\u679c\uff08al==0\uff09\u8df3\u8f6c\u5230\u505c\u6b62\u6807\u7b7eint 0x10\uff1b\u8fd0\u884cBIOS\u4e2d\u65ad0x10-\u89c6\u9891\u670d\u52a1jmp\u3002loophalt:cli\uff1b\u6e05\u9664\u4e2d\u65ad\u6807\u5fd7hlt\uff1b\u505c\u6b62\u6267\u884c\u4f60\u597d\uff1adb&#34\uff1b\u4f60\u597d\uff0c\u4e16\u754c&#34;,0\u6b21510-\uff08$-$$\uff09\u5206\u8d1d0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\n\u4f46\u9664\u4e86\u6587\u4e66\u8bbe\u7f6e\uff0816\u4f4d\u6c47\u7f16\uff0c\u7a0b\u5e8f\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u586b\u5145\u5230512\u5b57\u8282\uff09\u4e4b\u5916\uff0c\u552f\u4e00\u771f\u6b63\u7684\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8fymagic\u662fint 0x10\uff0c\u4e00\u4e2aBIOS\u4e2d\u65ad\u3002\nBIOS\u4e2d\u65ad\u662fAPI\u8c03\u7528\u3002\u5c31\u50cfuserland\u7a0b\u5e8f\u4e2d\u7684\u7cfb\u7edf\u8c03\u7528\u4e00\u6837\uff0c\u5b83\u4eec\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u5bc4\u5b58\u5668\u7ea6\u5b9a\u548c\u7f16\u53f7\u6765\u8c03\u7528API\u5bb6\u65cf\u3002\n\u5f53\u4f60\u7f16\u5199\u5f15\u5bfc\u7a0b\u5e8f\u65f6\uff0c\u4f60&#39\uff1b\u9996\u5148\uff0c\u6211\u4f1a\u82b1\u5927\u90e8\u5206\u65f6\u95f4\u6765\u7406\u89e3\u5404\u79cdBIOS API\u7684\u884c\u4e3a\u3002\n\u6211\u4eec&#39\uff1b\u672c\u6587\u5c06\u8ba8\u8bba\u952e\u76d8\u7cfb\u5217\uff08\u6b64\u5904\u4e3a\u6587\u6863\uff09\u548c\u663e\u793a\u5668\u7cfb\u5217\uff08\u6b64\u5904\u4e3a\u6587\u6863\uff09\u3002\n\u6211\u4eec\u5728\u4e0a\u9762\u8c03\u7528\u7684\u5c06\u5b57\u7b26\u5199\u5165\u663e\u793a\u7684\u7279\u5b9a\u51fd\u6570\u662fINT10\uff0c\u4f8b\u59820x10\u662f\u8c03\u7528int\u5173\u952e\u5b57\u7684\u53c2\u6570\uff08\u4f8b\u5982int 0x10\uff09\u3002E\u662f0x10\u7cfb\u5217\u4e2d\u7684\u7279\u5b9a\u529f\u80fd\u3002\u5728\u8c03\u7528int\u4e4b\u524d\uff0cE\u88ab\u5199\u5165AH\u5bc4\u5b58\u5668\u3002\u8981\u5199\u5165\u7684ASCII\u7801\u88ab\u653e\u5165AL\u5bc4\u5b58\u5668\u3002\n\u65e2\u7136\u8f93\u51fa\u6709\u4e86\u4e00\u4e9b\u610f\u4e49\uff0c\u90a3\u5c31\u8ba9&#39\uff1b\u6211\u4eec\u505a\u8f93\u5165\u3002\u5728\u952e\u76d8\u670d\u52a1\u6587\u6863\u4e2d\uff0c\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230INT 16,0\u63d0\u4f9b\u4e86\u4e00\u79cd\u963b\u6b62\u7528\u6237\u8f93\u5165\u7684\u65b9\u6cd5\u3002\u6839\u636e\u8be5\u9875\u9762\uff0c\u5f53\u4e2d\u65ad\u8fd4\u56de\u65f6\uff0cASCI\u5b57\u7b26\u5c06\u5728AL\u4e2d\u3002\n\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u8fd0\u884c\u4e4b\u524d\uff0c\u4f1a\u663e\u793a\u4e00\u4e9b\u6587\u672c\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528INT0x10,0\u6e05\u9664\u5c4f\u5e55\u3002\n\u7531\u4e8edisplay\u51fd\u6570\u4eceinputfunction\u8f93\u51fa\u5230\u7684\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u4e2a\u4e2d\u65ad\u4e4b\u540e\u8c03\u7528\u5b83\u4eec\u3002\u628a\u8fd9\u4e2a\u5faa\u73af\u8d77\u6765\uff0c\u6211\u4eec\u5c31\u62e5\u6709\u4e86\u8fd9\u4e2a\u4e16\u754c#39\uff1b\u4ed6\u662f\u6700\u5dee\u7684\u7f16\u8f91\u3002\n$cat ioloop\u3002asmbits 16org 0x7c00main:\uff1b\uff1b\u6e05\u9664\u5c4f\u5e55mov ah\uff0c0x00 mov al\uff0c0x03 int 0x10\u3002\u5faa\u73af\uff1a\uff1b\uff1b\u8bfb\u53d6\u5b57\u7b26mov ah\uff0c0 int 0x16\uff1b\uff1b\u6253\u5370\u5b57\u7b26mov ah\uff0c0x0e int 0x10 jmp\u3002\u5faa\u73af\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u91cc\u7684\u4e3b\u6807\u7b7e\uff08\u5982hello.asm\u4e2d\u7684\u5f15\u5bfc\u6807\u7b7e\uff09\u53ea\u662f\u4e3a\u4e86\u5e2e\u52a9\u8bfb\u8005\u3002\u8fd9\u4e0d\u662fBIOS\u4f7f\u7528\u7684\u4e1c\u897f\u3002\nbits 16org 0x7c00jmp\u4e3b\u6e05\u9664\u5c4f\u5e55\uff1a\uff1b\uff1b\u6e05\u9664\u5c4f\u5e55mov ah\u30010x00 mov al\u30010x03 int 0x10 retmain\uff1a\u8c03\u7528\u6e05\u9664\u5c4f\u5e55\u3002\u5faa\u73af\uff1a\uff1b\uff1b\u8bfb\u53d6\u5b57\u7b26mov ah\uff0c0 int 0x16\uff1b\uff1b\u6253\u5370\u5b57\u7b26mov ah\uff0c0x0e int 0x10 jmp\u3002\u5faa\u73af\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\n\u4f4d16org 0x7c00jmp main%\u5b8fcls 0\uff1b\u96f6\u662f\u53c2\u6570mov-ah\u30010x00-mov-al\u30010x03-int\u30010x10%endmacromain:cls\u7684\u6570\u91cf\u3002\u5faa\u73af\uff1a\uff1b\uff1b\u8bfb\u53d6\u5b57\u7b26mov ah\uff0c0 int 0x16\uff1b\uff1b\u6253\u5370\u5b57\u7b26mov ah\uff0c0x0e int 0x10 jmp\u3002\u5faa\u73af\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\nnasm\u5b8f\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u5728\u5b83\u4eec\u524d\u9762\u52a0%%\u6765\u7f16\u5199\u5b8f\u5b89\u5168\u6807\u7b7e\uff0c\u5982\u679c\u5b8f\u4e2d\u6709\u6761\u4ef6\u6216\u5faa\u73af\uff0c\u8fd9\u5f88\u6709\u7528\u3002\n\u6211\u731c\u5b8f\u7684\u597d\u5904\u662f\u4f60&#39\uff1bWe\u2019\u6211\u4eec\u6ca1\u6709\u7528\u5b8c\u978b\u9489\u3002\u51fd\u6570\u8c03\u7528\u7684\u597d\u5904\u662f&#39\uff1b\u4e0d\u8981\u5728\u4f7f\u7528\u5b8f\u7684\u6bcf\u4e2a\u5730\u65b9\u91cd\u590d\u4ee3\u7801\u3002\u751f\u6210\u7684\u4ee3\u7801\u91cf\u6700\u7ec8\u5728\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u4e2d\u53d8\u5f97\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u4ee3\u7801\u5fc5\u987b\u9002\u5408512\u5b57\u8282\u3002\n\u8bfb\u53d6ASCII\u5b57\u7b26\u5e76\u4e0d\u50cf\u6211\u4eec\u4e0a\u9762\u770b\u5230\u7684\u90a3\u6837\u590d\u6742\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u6784\u5efa\u50cfctrl-a\u8fd9\u6837\u7684\u8bfb\u7ebf\u5f0f\u5feb\u6377\u952e\uff0c\u4ee5\u4fbf\u8df3\u5230\u884c\u7684\u5f00\u5934\uff0c\u90a3\u53c8\u662f\u4ec0\u4e48\u5462\uff1f\n\u6211\u4eec\u53ef\u4ee5\u50cf\u4e0a\u9762\u90a3\u6837\u4f7f\u7528INT 16,0\u3002\u4f46\u662f\uff0c\u5185\u5b58\u4e2d\u6709\u4e00\u90e8\u5206\u5305\u542b\u6309\u4e0b\u7684\u5b57\u7b26\u548c\u6309\u4e0b\u7684\u63a7\u5236\u5b57\u7b26\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u8bfb\u53d6\u8be5\u51fd\u6570\u8c03\u7528\u7684\u7ed3\u679c\u3002\n\u6839\u636e\u8be5\u5b58\u50a8\u533a\u57df\uff08\u6b64\u5904\u6216\u6b64\u5904\uff09\u7684\u6587\u6863\uff0c\u6211\u4eec\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u5b8f\u6765\u8bfb\u53d6\u6309\u4e0b\u7684\u5b57\u7b26\uff1a\n%\u5b8fmov_\u5c06\u5b57\u7b26_\u8bfb\u51651 mov eax\uff0c[0x041a]\u6dfb\u52a0eax\uff0c0x03fe\uff1b\u4ece0x0400\u5230sizeof\uff08uint16\uff09\u7684\u504f\u79fb\u91cf\uff08\u56e0\u4e3a\u78c1\u5934\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u63d2\u69fd\uff0c\u800c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a/\u5f53\u524d\u63d2\u69fd\uff09\u548ceax\u30010xFFFF mov%1\u3001[eax]\u548c%1\u30010xFF%endmacro\n%\u5b8fmov_\u5c06\\u ctrl_flag_\u8bfb\u51651 mov%1\u3001[0x0417]\u548c%1\u30010x04\uff1b\u83b7\u53d6\u7b2c\u4e09\u4f4d\uff1a%1&amp\uff1b0b0100%endmacro\n\u6700\u540e\u6211\u4eec&#39\uff1b\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u4e9b\u6e38\u6807API\uff0c\u8fd9\u4e9bAPI\u5141\u8bb8\u6211\u4eec\u5904\u7406\u65b0\u7684\u884c\u3001\u884c\u7684\u7b2c\u4e00\u5217\u4e0a\u7684\u9000\u683c\u548cctrl-a\uff08\u8df3\u8f6c\u5230\u884c\u7684\u5f00\u59cb\uff09\u3002\n%\u5b8f\u83b7\u53d6\u4f4d\u7f6e0 mov ah\uff0c0x03 int 0x10%endmacro%\u5b8f\u8bbe\u7f6e\u4f4d\u7f6e0 mov ah\uff0c0x02 int 0x10%endmacro\n\u4f46\u662f\u6709&#39\uff1b\u6211\u7684goto_end of_line\u51fd\u6570\u6709\u70b9\u95ee\u9898\u3002\u6709\u65f6\u5b83\u53ef\u4ee5\u5de5\u4f5c\uff0c\u6709\u65f6\u5b83\u53ea\u662f\u5728\u5c4f\u5e55\u4e0a\u65e0\u9650\u5faa\u73af\u5730\u8df3\u8f6c\u3002\u90e8\u5206\u95ee\u9898\u5728\u4e8e\u7f16\u8f91\u8bb0\u5fc6\u5c31\u662f\u89c6\u9891\u5361\u3002\u5149\u6807\u4f4d\u7f6e\u53ea\u5b58\u50a8\u5728\u90a3\u91cc\uff0c\u800c\u4e0d\u662f\u50cf\u5728\u9ad8\u7ea7\u73af\u5883/\u8bed\u8a00\u4e2d\u90a3\u6837\u4ee5\u67d0\u79cd\u7a0b\u5e8f\u72b6\u6001\u5b58\u50a8\u3002\n\u8f6c\u5230\u7b2c\u4e8c\u884c\uff1a\uff1b\uff1b\u83b7\u53d6\u5f53\u524d\u5b57\u7b26mov-ah\uff0c0x08 int 0x10\uff1b\uff1b\u8fed\u4ee3\uff0c\u76f4\u5230\u5b57\u7b26\u4e3anull cmp al\uff0c0 jz\u3002done inc dl set_position jmp goto_end_\u7ebf\u3002\u5b8c\u6210\uff1aret\n%\u5b8f\u8bfb\u53d6_\u5b57\u7b260\uff1b\uff1b\u8bfb\u53d6\u5b57\u7b26mov ah\uff0c0 int 0x16%endmacro%macro print_\u5b57\u7b261 mov ax\uff0c%1 mov ah\uff0c0x0e int 0x10%endmacro\n%\u5b8f\u83b7\u53d6\u4f4d\u7f6e0 mov ah\uff0c0x03 int 0x10%endmacro%\u5b8f\u8bbe\u7f6e\u4f4d\u7f6e0 mov ah\uff0c0x02 int 0x10%endmacrogoto_end_\u7ebf\uff1a\uff1b\uff1b\u83b7\u53d6\u5f53\u524d\u5b57\u7b26mov-ah\uff0c0x08 int 0x10\uff1b\uff1b\u8fed\u4ee3\uff0c\u76f4\u5230\u5b57\u7b26\u4e3anull cmp al\uff0c0 jz\u3002done inc dl set_position jmp goto_end_\u7ebf\u3002\u5b8c\u6210\uff1aret\n%\u5b8fmov_\u5c06\\u ctrl_flag_\u8bfb\u51651 mov%1\u3001[0x0417]\u548c%1\u30010x04\uff1b\u83b7\u53d6\u7b2c\u4e09\u4f4d\uff1a%1&amp\uff1b0b0100%endmacro%macro mov_read_character_\u4e3a1 mov eax\uff0c[0x041a]add eax\uff0c0x03fe\uff1b\u4ece0x0400\u5230sizeof\uff08uint16\uff09\u7684\u504f\u79fb\u91cf\uff08\u56e0\u4e3a\u78c1\u5934\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u63d2\u69fd\uff0c\u800c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a/\u5f53\u524d\u63d2\u69fd\uff09\u548ceax\u30010xFFFF mov%1\u3001[eax]\u548c%1\u30010xFF%endmacro\n\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u542f\u52a8\u7f16\u8f91\u5668\u5faa\u73af\uff0c\u5728\u90a3\u91cc\u7b49\u5f85\u6309\u952e\u5e76\u5904\u7406\u5b83\u3002\n\u5510&#39\uff1b\u5982\u679c\u6309\u4e0b\u7684\u952e\u662f\u7bad\u5934\u952e\uff0c\u5219\u4e0d\u80fd\u6253\u5370ASCII\u5783\u573e\u3002\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\uff08\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u7f16\u8f91\u884c\u4e3a\uff0c\u4f46\u6211\u4eec\u7684\u7f16\u8f91\u884c\u4e3a\u5f88\u597d\u3002\uff09\n;; \u5ffd\u7565\u7bad\u5934\u952ecmp ah\uff0c0x4b\uff1b\u5de6jz\u3002\u5b8c\u6210cmp ah\uff0c0x50\uff1b\u4e0bjz\u3002\u5b8c\u6210cmp ah\uff0c0x4d\uff1b\u5bf9\uff0cjz\u3002\u5b8c\u6210cmp\u554a\uff0c0x48\uff1b\u4e0ajz\u3002\u5b8c\u6210\n;; \u624b\u67c4\u9000\u683ccmp al\uff0c0x08 jz\u3002is_backspace cmp al\uff0c0x7F\uff1b\u9002\u7528\u4e8emac\u952e\u76d8jnz\u3002\u9000\u683c\u5b8c\u6210\u3002\u662f\u9000\u683c\uff1a\u83b7\u5f97\u4f4d\u7f6e\n\u5426\u5219\uff0c\u5982\u679c\u4e0d\u662f\u5728\u884c\u9996\u6309backspace\uff0c\u53ea\u9700\u7528ASCII 0\u8986\u76d6\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff08\u4ee3\u78010\u800c\u4e0d\u662f\u6570\u5b570\uff09\u3002\n\u5426\u5219\u4f60&#39\uff1byou\u2019\u4f60\u5728\u961f\u4f0d\u7684\u5f00\u5934\uff0c\u4f60\u9700\u8981\u8df3\u5230\u524d\u4e00\u884c\u7684\u672b\u5c3e\u3002\n.\u5728_\u884c\u7684_\u5f00\u59cb_\u5904\u9000\u683c_:\uff1b\u9012\u51cf\u884c\u8bbe\u7f6e\u4f4d\u7f6e\u8c03\u7528\u8f6c\u5230\u884c\u7684\u7ed3\u675f\u3002\u8986\u76d6\u5b57\u7b26\uff1amov al\uff0c0 mov ah\uff0c0x0a int 0x10 jmp\u3002\u5b8c\u6210\u3002\u5b8c\u6210\\u\u9000\u683c\uff1a\n\u63a5\u4e0b\u6765\u6211\u4eec\u5904\u7406\u56de\u8f66\u952e\u3002\u8fd9\u4f1a\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u884c\uff0c\u5e76\u5c06\u5217\u8bbe\u7f6e\u56de\u96f6\u3002\n;; \u53e5\u67c4\u5c06mov_read_character_\u8f93\u5165ax cmp al\uff0c0x0d jnz\u3002\u5b8c\u6210\u8f93\u5165\u83b7\u53d6\u4f4d\u7f6e\u6709\u9650\u516c\u53f8dh\uff1b\u589e\u91cf\u884cmov dl\uff0c0\uff1b\u91cd\u7f6e\u5217\u8bbe\u7f6e\u4f4d\u7f6ejmp\u3002\u5b8c\u6210\u3002\u5b8c\u6210\u8f93\u5165\uff1a\n;; \u63a7\u5236ctrl-\u5feb\u6377\u952e\uff1b\uff1b\u9009\u4e2dctrl\u952emov_read_ctrl_flag_\u8fdb\u5165ax jz\u3002ctrl_not_set\uff1b\uff1b\u53e5\u67c4ctrl\u2014\u2014\u5c06\u5b57\u7b26\u79fb\u52a8\u5230ax cmp al\u4e2d\u7684\u5feb\u6377\u65b9\u5f0f\uff0c1\uff1b\u7531\u4e8ectlr\u7684\u67d0\u4e9b\u539f\u56e0\uff0c\u8fd9\u4e9b\u662f\u4ecea-z jnz\u504f\u79fb\u7684\u3002\u800c\u4e0d\u662f\uff1b\uff1b\u91cd\u7f6e\u5217mov dl\uff0c0\u8bbe\u7f6e\u4f4d\u7f6ejmp\u3002\u5b8c\u6210\u3002\u975e\u63a7\u5236a\uff1a\n;; \u5c06ctrl-e\u5feb\u6377\u952emov_read_character_\u79fb\u52a8\u5230ax cmp al\uff0c5 jnz\u4e2d\u3002\u4e0d\u6309ctrl\u952e\u8c03\u7528jmp\u884c\u7684goto_end_\u3002\u5b8c\u6210\u3002\u4e0d\u662f\uff1ajmp\u3002\u5b8c\u6210\u3002ctrl\\u\u672a\u8bbe\u7f6e\uff1a\n\u6700\u540e\uff0c\u5982\u679c\u8fd9\u4e9b\u60c5\u51b5\u90fd\u4e0d\u6ee1\u8db3\uff0c\u53ea\u9700\u6253\u5370\u6309\u4e0b\u7684\u5b57\u7b26\u5e76\u8fd4\u56de\u5373\u53ef\u3002\n\u4e3b\u64ad\uff1acls\u3002\u5faa\u73af\uff1a\u8c03\u7528\u7f16\u8f91\u5668_action jmp\u3002\u5faa\u73af\u65f6\u95f4510-\uff08$-$$\uff09db 0\uff1b\u7528zeroesdw 0xaa55\u586b\u5145\u5269\u4f59\u7684510\u5b57\u8282\uff1bmagic bootloader magic-\u6807\u8bb0\u8fd9\u4e2a512\u5b57\u8282\u7684\u6247\u533a\u53ef\u5f15\u5bfc\uff01\n\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u6211\u7b2c\u4e00\u6b21\u63a2\u7d22bootloader\u57fa\u7840\u77e5\u8bc6\u7684\u65b0\u5e16\u5b50\uff01\u53d1\u73b0BIOS API\u5e76\u82b1\u4e00\u4e9b\u65f6\u95f4\u5728\u6c47\u7f16\u4e2d\u7f16\u5199\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u751f\u6210\u6216\u6a21\u62df\u5b83\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002https://t.co/7iP6Nib620\u7167\u7247\u3002\u5541\u557ecom/xSyG1IXgEB\n-\u83f2\u5c14\u00b7\u4f0a\u987f\uff08@Phil_Eaton\uff092022\u5e741\u670823\u65e5", "note_en": "I spent a few days playing around with bootloaders for the firsttime. This post builds up to a text editor with a few keyboardshortcuts. I&#39;ll be giving a virtual talk based on this work at  HackerNights on Jan 27.\n There are a definitely bugs. But it&#39;s hard to find intermediateresources for bootloader programming so maybe parts of this will beuseful.\n If you already know the basics and the intermediates and just want afantastic intermediate+ tutorial, maybe try this. Itis very good.\n The code on this post is available on Github, but it&#39;s more of amess than my usual project.\n   Install qemu (on macOS or Linux), nasm, and copy the  snake.asmsource code to disk from that blog post.\n $ cat snake.asm [bits 16] ; Pragma, tells the assembler that we ; are in 16 bit mode (which is the state ; of x86 when booting from a floppy). [org 0x7C00] ; Pragma, tell the assembler where the ; code will be loaded. mov bl, 1 ; Starting direction for the worm. push 0xa000 ; Load address of VRAM into es. pop esrestart_game: mov si, 320*100+160 ; worm&#39;s starting position, center of ; screen ; Set video mode. Mode 13h is VGA (1 byte per pixel with the actual ; color stored in a palette), 320x200 total size. When restarting, ; this also clears the screen. mov ax, 0x0013 int 0x10 ; Draw borders. We assume the default palette will work for us. ; We also assume that starting at the bottom and drawing 2176 pixels ; wraps around and ends up drawing the top + bottom borders. mov di, 320*199 mov cx, 2176 repdraw_loop: stosb ; draw right border stosb ; draw left border add di, 318 jnc draw_loop ; notice the jump in the middle of the ; rep stosb instruction.game_loop: ; We read the keyboard input from port 0x60. This also reads bytes from ; the mouse, so we need to only handle [up (0x48), left (0x4b), ; right (0x4d), down (0x50)] in al, 0x60 cmp al, 0x48 jb kb_handle_end cmp al, 0x50 ja kb_handle_end ; At the end bx contains offset displacement (+1, -1, +320, -320) ; based on pressed/released keypad key. I bet there are a few bytes ; to shave around here given the bounds check above. aaa cbw dec ax dec ax jc kb_handle sub al, 2 imul ax, ax, byte -0x50kb_handle: mov bx, axkb_handle_end: add si, bx ; The original code used set pallete command (10h/0bh) to wait for ; the vertical retrace. Today&#39;s computers are however too fast, so ; we use int 15h 86h instead. This also shaves a few bytes. ; Note: you&#39;ll have to tweak cx+dx if you are running this on a virtual ; machine vs real hardware. Casual testing seems to show that virtual machines ; wait ~3-4x longer than physical hardware. mov ah, 0x86 mov dh, 0xef int 0x15 ; Draw worm and check for collision with parity ; (even parity=collision). mov ah, 0x45 xor [es:si], ah ; Go back to the main game loop. jpo game_loop ; We hit a wall or the worm. Restart the game. jmp restart_gameTIMES 510 - ($ - $$) db 0 ; Fill the rest of sector with 0dw 0xaa55 ; Boot signature at the end of bootloader\n     I&#39;m not going to get anywhere near that level of sophistication inthis post but I think it&#39;s great motivation.\n  Bootloaders are a mix of assembly programming and BIOS APIs forI/O. Since you&#39;re thinking about bootloaders you already know assemblybasics. Now all you have to do is learn the APIs.\n The hello world bootloader has been explained in detail (see here, here,and  here) soI won&#39;t go into too much line-by-line depth.\n  $ cat hello.asmbits 16 ; tell NASM this is 16 bit codeorg 0x7c00 ; tell NASM to start outputting stuff at offset 0x7c00boot: mov si,hello ; point si register to hello label memory location mov ah,0x0e ; 0x0e means &#39;Write Character in TTY mode&#39;.loop: lodsb or al,al ; is al == 0 ? jz halt ; if (al == 0) jump to halt label int 0x10 ; runs BIOS interrupt 0x10 - Video Services jmp .loophalt: cli ; clear interrupt flag hlt ; halt executionhello: db &#34;Hello world!&#34;,0times 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n  But aside from clerical settings (16-bit assembly, where the programexists in memory, padding to 512 bytes) the only real bootloader-ymagic in there is  int 0x10, a BIOS interrupt.\n  BIOS interrupts are API calls. Just like syscalls in userland programsthey have a specific register convention and number to call for thefamily of APIs.\n When you write bootloader programs you&#39;ll spend most of your time atfirst trying to understand the behavior of the various BIOS APIs.\n The two families we&#39;ll deal with in this post are the keyboard family(documentation  here) andthe display family (documentation here).\n       The specific function we called above to write a character to thedisplay is  INT10,E. The  0x10is the argument that you call the  int keyword with(e.g.  int 0x10). And the  E is the specificfunction within the  0x10 family. The  E iswritten into the  AH register beforecalling  int. The ASCII code to be written is placed inthe  AL register.\n Now that output makes some sense, let&#39;s do input. In the  keyboard servicesdocumentation you maynotice that  INT 16,0provides a way to block for user input. According to that page theASCII character will be in  AL when the interrupt returns.\n  You may have noticed some text gets displayed before our programruns. We can use  INT0x10,0 to clear thescreen.\n   Since the display function reads from the same register the inputfunction outputs to, we can just call both interrupts after eachother. Wrap this in a loop and we have the world&#39;s worst editor.\n $ cat ioloop.asmbits 16org 0x7c00main: ;; Clear screen mov ah, 0x00 mov al, 0x03 int 0x10.loop: ;; Read character mov ah, 0 int 0x16 ;; Print character mov ah, 0x0e int 0x10 jmp .looptimes 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n By the way, the  main label here (like the  boot label above in  hello.asm) is only to help the reader. It is not something the BIOS uses.\n         bits 16org 0x7c00jmp mainclear_screen: ;; Clear screen mov ah, 0x00 mov al, 0x03 int 0x10 retmain: call clear_screen.loop: ;; Read character mov ah, 0 int 0x16 ;; Print character mov ah, 0x0e int 0x10 jmp .looptimes 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n  bits 16org 0x7c00jmp main%macro cls 0 ; Zero is the number of arguments mov ah, 0x00 mov al, 0x03 int 0x10%endmacromain: cls.loop: ;; Read character mov ah, 0 int 0x16 ;; Print character mov ah, 0x0e int 0x10 jmp .looptimes 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n And nasm macros even have a way to write macro-safe labels byprefixing them with  %% which is useful if you haveconditions or loops within a macro.\n The benefit of a macro I guess is that you&#39;re not using up thestack. The benefit of a function call is that you&#39;re not duplicatingcode every place you use a macro. The amount of generated codeeventually becomes important in bootloaders because the code mustfit into 512 bytes.\n   Reading ASCII characters is not complicated as we saw above. But whatif we want to build Readline style shortcuts like ctrl-a for jumpingto the start of the line?\n Using INT 16,0 as we do above is fine. But rather than solely readingfrom the result of that function call, there is a section of memorythat contains both the character pressed and control characterspressed.\n Based on documentation for this memory area (found here or here),we can build a macro for reading the pressed character:\n %macro mov_read_character_into 1 mov eax, [0x041a] add eax, 0x03fe ; Offset from 0x0400 - sizeof(uint16) (since head points to next free slot, not last/current slot) and eax, 0xFFFF mov %1, [eax] and %1, 0xFF%endmacro\n  %macro mov_read_ctrl_flag_into 1 mov %1, [0x0417] and %1, 0x04 ; Grab 3rd bit: %1 &amp; 0b0100%endmacro\n  Lastly we&#39;ll use some cursor APIs that that allow us to handlenewlines, backspace on the first column of a line, and ctrl-a (jump tobeginning of line).\n %macro get_position 0 mov ah, 0x03 int 0x10%endmacro%macro set_position 0 mov ah, 0x02 int 0x10%endmacro\n But there&#39;s something buggy about my  goto_end_of_linefunction. Sometimes it works and sometimes it just jumps all over thescreen in an infinite loop. Part of the problem is that the editormemory is the video card. The cursor location is only stored there andnot in some program state like you might do in a high-levelenvironment/language.\n goto_end_of_line:;; Get current character mov ah, 0x08 int 0x10;; Iterate until the character is null cmp al, 0 jz .done inc dl set_position jmp goto_end_of_line.done: ret\n        %macro read_character 0 ;; Read character mov ah, 0 int 0x16%endmacro%macro print_character 1 mov ax, %1 mov ah, 0x0e int 0x10%endmacro\n  %macro get_position 0 mov ah, 0x03 int 0x10%endmacro%macro set_position 0 mov ah, 0x02 int 0x10%endmacrogoto_end_of_line:;; Get current character mov ah, 0x08 int 0x10;; Iterate until the character is null cmp al, 0 jz .done inc dl set_position jmp goto_end_of_line.done: ret\n  %macro mov_read_ctrl_flag_into 1 mov %1, [0x0417] and %1, 0x04 ; Grab 3rd bit: %1 &amp; 0b0100%endmacro%macro mov_read_character_into 1 mov eax, [0x041a] add eax, 0x03fe ; Offset from 0x0400 - sizeof(uint16) (since head points to next free slot, not last/current slot) and eax, 0xFFFF mov %1, [eax] and %1, 0xFF%endmacro\n Now we can start the editor loop where we wait for a keypress andhandle it.\n  Don&#39;t print ASCII garbage if the key pressed is an arrow key. Just donothing. (This isn&#39;t good editor behavior in general but ours is alimited one.)\n ;; Ignore arrow keys cmp ah, 0x4b ; Left jz .done cmp ah, 0x50 ; Down jz .done cmp ah, 0x4d ; Right jz .done cmp ah, 0x48 ; Up jz .done\n  ;; Handle backspace cmp al, 0x08 jz .is_backspace cmp al, 0x7F ; For mac keyboards jnz .done_backspace.is_backspace: get_position\n   Otherwise if backspace is pressed not at the beginning of the line,just overwrite the last character with the ASCII 0 (the code 0 not thedigit 0).\n  Otherwise you&#39;re at the beginning of the line and you need to jump tothe end of the previous line.\n .backspace_at_start_of_line: dec dh ; Decrement row set_position call goto_end_of_line.overwrite_character: mov al, 0 mov ah, 0x0a int 0x10 jmp .done.done_backspace:\n Next we handle the Enter key. This should move the cursor onto thenext line and set the column back to zero.\n ;; Handle enter mov_read_character_into ax cmp al, 0x0d jnz .done_enter get_position inc dh ; Increment line mov dl, 0 ; Reset column set_position jmp .done.done_enter:\n  ;; Handle ctrl- shortcuts;; Check ctrl key mov_read_ctrl_flag_into ax jz .ctrl_not_set;; Handle ctrl-a shortcut mov_read_character_into ax cmp al, 1 ; For some reason with ctlr, these are offset from a-z jnz .not_ctrl_a;; Reset column mov dl, 0 set_position jmp .done.not_ctrl_a:\n  ;; Handle ctrl-e shortcut mov_read_character_into ax cmp al, 5 jnz .not_ctrl_e call goto_end_of_line jmp .done.not_ctrl_e: jmp .done.ctrl_not_set:\n Finally if none of these cases are met, just print the pressed character and return.\n   main: cls.loop: call editor_action jmp .looptimes 510 - ($-$$) db 0 ; pad remaining 510 bytes with zeroesdw 0xaa55 ; magic bootloader magic - marks this 512 byte sector bootable!\n     I wrote a new post on my first time exploring bootloader basics! Neat to discover the BIOS APIs and spend some time actually coding in assembly versus just generating or emulating it. https://t.co/7iP6Nib620  pic.twitter.com/xSyG1IXgEB\n\u2014 Phil Eaton (@phil_eaton)  January 23, 2022", "posttime": "2022-02-22 02:26:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,bootloader,mov", "title": "\u5f15\u5bfc\u7a0b\u5e8f\u57fa\u7840", "title_en": "Bootloader Basics", "transed": 1, "url": "https://notes.eatonphil.com/bootloader-basics.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "mov"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074533, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u51b3\u5b9a\u5199\u4e00\u7bc7\u6211\u5728\u8fc7\u53bb\u4e09\u5e74\u91cc\u88ab\u8feb\u719f\u6089\u7684\u9ad8\u5c42\u7efc\u8ff0\uff1a\u7f8e\u56fd\u653f\u5e9c\u6fc0\u52b1\u7684\u7a0e\u6536\u6700\u5c0f\u5316\u65b9\u6cd5\uff08\u622a\u81f32022\u5e74\uff09\u3002\n\u8fd9\u4e2a\u535a\u5ba2\u53ef\u80fd\u5bf9\u90a3\u4e9b\u4e0d\u719f\u6089\u8fd9\u4e9b\u7a0e\u6536\u51cf\u514d\uff0c\u6709\u80fd\u529b\u6bcf\u5e74\u8282\u7701\u6570\u4e07\u7f8e\u5143\uff0c\u5e76\u4e14\u60f3\u8981\u907f\u7a0e\u7684\u4eba\u6700\u6709\u5e2e\u52a9\u3002\u6211\u60f3\u8c61\u4e2d\u7684\u4eba\u53e3\u7edf\u8ba1\u6570\u636e\u663e\u793a\uff0c\u8fd9\u662f\u4e00\u4f4d\u79d1\u6280\u5de5\u4f5c\u8005\u6216\u91d1\u878d\u884c\u4e1a\u7684\u4eba\u58eb\u3002\u5047\u8bbe\u4f60\u572820\u5c81\u51fa\u5934\u5c31\u5f00\u59cb\u9000\u4f11\uff0c\u90a3\u4e48\u6bcf\u5e74\u7684\u50a8\u84c4\u662f\u590d\u5408\u7684\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u6570\u5341\u4e07\u4eba\u3002\u514d\u8d23\u58f0\u660e\uff1a\u8fd9\u4e0d\u662f\u8d22\u52a1\u5efa\u8bae\uff0c\u4f60\u5e94\u8be5\u81ea\u5df1\u505a\u7814\u7a76\u3002\u4f60\u81ea\u5df1\u60f3\u60f3\u3002\u6211\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u6fc0\u52b1\u63aa\u65bd\u6781\u5176\u590d\u6742\uff0c\u4ee4\u4eba\u56f0\u60d1\uff0c\u4f46\u7a0e\u6536\u8282\u7ea6\u8db3\u4ee5\u8ba9\u5b83\u4eec\u8131\u9896\u800c\u51fa\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u4eba\u5728\u5e74\u6536\u516520\u4e07\u7f8e\u5143\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u907f\u514d\u8fb9\u9645\u7a0e\u7387\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u907f\u514d32%\u7684\u8054\u90a6\u7a0e\u3002\n\u6211\u5c06\u8ba8\u8bba4\u4e2a\u5e38\u89c1\u4e14\u76f8\u5bf9\u5bb9\u6613\u5f00\u7acb\u7684\u8d26\u6237\uff1aHSA\u3001401K\u3001IRA\u3001529\n\u8d38\u6613\u3002\u662f\u201c\u4f20\u7edf\u201d\u7684\u7f29\u5199\u3002\u7a0e\u524d\uff1a\u8fdb\u5165\u8d26\u6237\u7684\u94b1\u6ca1\u6709\u7eb3\u7a0e\uff0c\u5373\u6ca1\u6709\u6240\u5f97\u7a0e\n\u7a0e\u540e\uff1a\u8d26\u6237\u4e2d\u7684\u6536\u76ca\u5728\u4ece\u8d26\u6237\u4e2d\u63d0\u53d6\u65f6\u4e0d\u5f81\u7a0e\uff0c\u5373\u6ca1\u6709\u8d44\u672c\u6536\u76ca\n\u975e\u7a0e\u540e\u514d\u7a0e\u7684\u6295\u8d44\u6309\u4e2a\u4eba#39\u5f81\u7a0e\uff1b\u63d0\u53d6\u65f6\u7684\u6240\u5f97\u7a0e\u7a0e\u7387\u3002\u5982\u679c\u4f60\u771f\u7684\u9000\u4f11\u4e86\uff0c\u4f60\u5927\u6982\u6ca1\u6709\u5176\u4ed6\u6536\u5165\u6765\u6e90\uff0c\u6240\u4ee5\u8fd9\u4e9b\u63d0\u6b3e\u5c06\u662f\u4f60\u552f\u4e00\u7684\u6536\u5165\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u53ea\u8981\u94b1\u5728\u7a0e\u6536\u4f18\u60e0\u8d26\u6237\u4e2d\uff0c\u4efb\u4f55\u6536\u76ca\u90fd\u662f\u514d\u7a0e\u7684\u3002\u53ea\u6709\u5f53\u4f60\u5f00\u59cb\u53d6\u6b3e\u65f6\uff0c\u5728\u5c1d\u8bd5\u4e4b\u524d\u53ef\u80fd\u4f1a\u6d89\u53ca\u7a0e\u6536/\u793c\u7269\u3002\n\u5bf9\u4e8e\u9000\u4f11\u8d26\u6237\uff08401K\uff0cIRA\uff09\uff0c\u5728\u60a8\u8fbe\u5230&#34\u4e4b\u524d\u63d0\u524d\u652f\u53d6\u8d39\u7528\uff1b\u9000\u4f11\u5e74\u9f84&#34\u5c81\uff1b\uff08\u4e00\u822c\u8d85\u8fc760\u5c81\uff0c\u4f46\u8fd9\u53ef\u80fd\u4f1a\u589e\u52a0\uff09\n\u4e00\u4e2a\u4eba\u53ea\u80fd\u6709\u4e00\u79cd401K\u548c\u4e00\u79cdIRA\uff08\u4f20\u7edf\u6216\u7f57\u65af\uff0c\u4ee5\u53ca\uff09\nHSA\u662f\u5065\u5eb7\u50a8\u84c4\u8d26\u6237\u7684\u7f29\u5199\u3002\u8be5\u8d26\u6237\u7684\u9884\u671f\u7528\u9014\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7a0e\u524d\u8d26\u6237\uff0c\u53ea\u5141\u8bb8\u5728\u533b\u7597\u4fdd\u5065\u76f8\u5173\u9879\u76ee\u4e0a\u82b1\u94b1\u3002\u7136\u800c\uff0c\u4e0d\u50a8\u84c4\u800c\u6295\u8d44\u53ef\u80fd\u4f1a\u66f4\u597d\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u6240\u77e5\u9053\u7684\u6280\u672f\u4e0a\u6700\u6709\u5229\u7684\u7a0e\u6536\u4f18\u60e0\u8d26\u6237\uff0c\u56e0\u4e3a\u5b83\u5728\u7a0e\u524d\u548c\u7a0e\u540e\u90fd\u662f\u514d\u7a0e\u7684\u3002\u4e00\u65e6\u8d26\u6237\u6240\u6709\u8005\u5e74\u6ee165\u5c81\uff0c\u5b83\u5c31\u53d8\u6210\u4e86\u4f60\u62e5\u6709\u7684\u666e\u901a\u9000\u4f11\u8d26\u6237\uff0c\u4f60\u53ef\u4ee5\u4ece\u4e2d\u63d0\u53d6\u8d44\u91d1\u3002\n\u53ea\u6709\u5f53\u4f60\u6709\u4e00\u4e2a\u9ad8\u514d\u8d54\u989d\u7684\u5065\u5eb7\u8ba1\u5212\uff08HDHP\uff0c\u987e\u540d\u601d\u4e49\uff0c\u662f\u4e00\u4e2a\u9ad8\u514d\u8d54\u989d\u7684\u8ba1\u5212\uff0c\u800c\u4e0d\u662fPPO\u8ba1\u5212\uff09\u65f6\uff0c\u4f60\u624d\u80fd\u6253\u5f00\u8fd9\u4e2a\u9875\u9762\u3002\u5982\u679c\u4f6020\u591a\u5c81\uff0c\u6ca1\u6709\u5bb6\u5c5e\uff0c\u8eab\u4f53\u5065\u5eb7\uff0c\u90a3\u4e48\u8fd9\u53ef\u80fd\u662f\u4e2a\u597d\u4e3b\u610f\u3002\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8ba1\u7b97PPO\u8d26\u6237\u548cHDHP\u4e4b\u95f4\u7684\u76c8\u4e8f\u5e73\u8861\u70b9\uff0c\u4e00\u65e6\u4f60\u8fbe\u5230HDHP\u7684\u514d\u8d54\u989d\uff0c\u8fd9\u4e9b\u8d26\u6237\u4f3c\u4e4e\u662f\u7b49\u4ef7\u7684\u3002\u622a\u81f32022\u5e74\uff0c\u4e00\u4e2a\u4eba\u53ea\u80fd\u8d21\u732e3650\u7f8e\u5143\uff0c\u56e0\u6b64\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u8d26\u6237\u3002\n401K\u56e0\u4e3a\u67d0\u79cd\u88ab\u4e0a\u5e1d\u629b\u5f03\u7684\u539f\u56e0\u800c\u4e0e\u5de5\u4f5c\u8054\u7cfb\u5728\u4e00\u8d77\u3002\u52302022\u5e74\uff0c\u4e00\u4e2a\u4eba\u6bcf\u5e74\u53ef\u4ee5\u6350\u6b3e20500\u7f8e\u5143\u3002\u6b64\u5916\uff0c\u5bf9\u4e8e\u4f20\u7edf\u7684401K\uff0c\u53ef\u4ee5\u7f34\u7eb3\u989d\u5916\u7684\u7a0e\u540e\uff08\u5373\u975e\u7a0e\u524d\uff0940500\u7f8e\u5143\u3002\u8fd9\u6837\u505a\u7684\u4e3b\u8981\u539f\u56e0\u662f\u5de8\u578b\u540e\u95e8401K\uff0c\u5e76\u975e\u6240\u6709\u8ba1\u5212\u90fd\u5141\u8bb8\u3002\u6211\u7684\u96c7\u4e3b\u4f7f\u7528Empower Retirement\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u5b83\u4e0d\u5141\u8bb8\u5de8\u578b\u540e\u95e8\u3002\u5728\u6700\u4f4e\u5e74\u9f8455\u5c81\u4e4b\u524d\u4e0d\u5141\u8bb8\u8bbf\u95ee\uff0c\u5c3d\u7ba1\u5b58\u5728\u4e00\u4e9b\u4e3b\u8981\u7684\u6613\u4e8e\u901a\u8fc7\u8c37\u6b4c\u641c\u7d22\u7684\u4f8b\u5916\u60c5\u51b5\uff0c\u5982\u5b9e\u8d28\u4e0a\u5e73\u7b49\u7684\u5b9a\u671f\u4ed8\u6b3e\uff08SEPP\uff09\u4f8b\u5916\u3002\u5982\u679c/\u5f53\u4f60\u79bb\u804c\u65f6\uff0c\u4f60\u53ef\u4ee5\uff08\u6216\u8bb8\u5e94\u8be5\uff09\u5c06\u8fd9\u7b14\u94b1\u8f6c\u5165\u4e2a\u4eba\u9000\u4f11\u8d26\u6237\u3002\n\u5982\u679c\u4f60\u8d5a\u4e86\u516d\u4f4d\u6570\uff0c\u4f60\u5f88\u53ef\u80fd\u65e0\u6cd5\u76f4\u63a5\u5411\u4efb\u4f55\u4e2a\u4eba\u9000\u4f11\u8d26\u6237\u6350\u6b3e\u3002\u7136\u800c\uff0c\u540e\u95e8\u7f57\u65af\u5171\u548c\u519b\u5141\u8bb8\u6350\u6b3e\u3002\u8fd9\u4e2a\u540e\u95e8\u7c7b\u4f3c\u4e8e401K\u7684\u5de8\u578b\u540e\u95e8\uff0c\u4f46\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\u30022022\u5e74\u7231\u5c14\u5170\u5171\u548c\u519b\u6700\u9ad8\u6350\u6b3e\u4e3a6000\u7f8e\u5143\uff0c\u56e0\u6b64\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u8d26\u6237\u3002IRA\u5728\u6700\u4f4e\u5e74\u9f8459.5\u5c81\u4e4b\u524d\u4e0d\u5141\u8bb8\u8bbf\u95ee\uff0c\u5c3d\u7ba1\u5b58\u5728\u4e00\u4e9b\u4e3b\u8981\u7684\u6613\u4e8e\u8c37\u6b4c\u641c\u7d22\u7684\u4f8b\u5916\u60c5\u51b5\uff0c\u4f8b\u5982\u5b9e\u8d28\u4e0a\u5e73\u7b49\u7684\u5b9a\u671f\u4ed8\u6b3e\uff08SEPP\uff09\u4f8b\u5916\u3002\n\u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u6ce8\u610f\u4e8b\u9879\u662f\uff0c\u4f60\u53ef\u4ee5\u968f\u65f6\u5c06\u4f20\u7edf\u7684\u4e2a\u4eba\u9000\u4f11\u8d26\u6237\u8f6c\u6362\u6210\u7f57\u65af\u4e2a\u4eba\u9000\u4f11\u8d26\u6237\uff0c\u8f6c\u6362\u540e\u7684\u91d1\u989d\u4f5c\u4e3a\u6536\u5165\u8ba1\u7b97\u3002\u5f53\u4f60\u5c06\u4f20\u7edf\u4e2a\u4eba\u9000\u4f11\u8d26\u6237\u8f6c\u6362\u4e3a\u7f57\u65af\u4e2a\u4eba\u9000\u4f11\u8d26\u6237\u65f6\uff0c\u4f60\u5c06\u5bf9\u4f20\u7edf\u4e2a\u4eba\u9000\u4f11\u8d26\u6237\u4e2d\u7684\u4efb\u4f55\u6b3e\u9879\u6b20\u7a0e\uff0c\u800c\u8fd9\u4e9b\u6b3e\u9879\u5728\u4f60\u63d0\u53d6\u65f6\u672c\u5e94\u7eb3\u7a0e\u3002\u8fd9\u5305\u62ec\u60a8\u5bf9\u8be5\u8d26\u6237\u7684\u53ef\u6263\u7a0e\u4f9b\u6b3e\uff0c\u4ee5\u53ca\u591a\u5e74\u6765\u79ef\u7d2f\u7684\u9012\u5ef6\u6240\u5f97\u7a0e\u3002\u8fd9\u7b14\u94b1\u5c06\u5728\u4f60\u8fdb\u884c\u8f6c\u6362\u7684\u90a3\u4e00\u5e74\u4f5c\u4e3a\u6536\u5165\u5f81\u7a0e\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u5728\u6536\u5165\u5f88\u5c11\u751a\u81f3\u6ca1\u6709\u6536\u5165\u7684\u4e00\u5e74\u5185\uff08\u4f8b\u5982\uff0c\u5728\u957f\u671f\u7ade\u4e1a\u7981\u6b62\u671f\u95f4\u6216\u521b\u529e\u81ea\u5df1\u7684\u516c\u53f8\u65f6\uff09\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362\u3002\n\u6b64\u8d26\u6237\u4ec5\u9002\u7528\u4e8e\u60a8\u7684\u5bb6\u5ead\u6210\u5458\u5c06\u6765\u4e0a\u5b66\u7684\u60c5\u51b5\u3002\u8fd9\u53ef\u80fd\u5305\u62ec\u672a\u51fa\u751f\u7684\u5b69\u5b50\uff08\u5c3d\u7ba1\u4eba\u4eec\u5e94\u8be5\u4ed4\u7ec6\u7814\u7a76\u7a0e\u6536\u7684\u5f71\u54cd\uff09\u3002\u4f9b\u6b3e\u53ef\u4ee5\u4ece\u5dde\u6240\u5f97\u7a0e\u4e2d\u6263\u9664\uff08\u4f8b\u5982\uff0c\u5728\u4f0a\u5229\u8bfa\u4f0a\u5dde\uff0c\u4f9b\u6b3e\u53ef\u5bfc\u81f4\u9ad8\u8fbe500\u7f8e\u5143\u7684\u9000\u7a0e\uff09\n\u53ea\u8981\u4f60\u628a\u94b1\u82b1\u5728&#34\uff1b\u6559\u80b2\u6210\u672c#34\uff1b\n\u4eba\u4eec\u666e\u904d\u5b58\u5728\u4e00\u79cd\u8bef\u89e3\uff0c\u8ba4\u4e3aETF\u4e25\u683c\u6765\u8bf4\u6bd4\u5171\u540c\u57fa\u91d1\u66f4\u597d/\u66f4\u4fbf\u5b9c\u3002\u4e00\u4e9b\u5171\u540c\u57fa\u91d1\u7684\u597d\u5904\uff1a\u4e0d\u5fc5\u62c5\u5fc3\u6267\u884c\uff08\u5f53\u7136\uff0c\u4f60\u53ea\u80fd\u5728EOD\u6267\u884c\uff09\n\u6709\u4e00\u79cd\u8bef\u89e3\u8ba4\u4e3a\uff0c\u5171\u540c\u57fa\u91d1\u4e5f\u603b\u662f\u6709\u66f4\u591a\u7684\u7a0e\u6536\uff0c\u4f46\u50cf\u5148\u950b\u8fd9\u6837\u7684\u516c\u53f8\u4f7f\u7528&#34\uff1b\u5fc3\u8df3#34\uff1b\u51cf\u5c11\u5171\u540c\u57fa\u91d1\u7a0e\u6536\u7684\u4ea4\u6613\uff08\u5f53\u7136\uff0c\u4ed6\u4eec\u4e0d\u80fd\u907f\u514d\u6240\u6709\u7a0e\u6536\uff09\u3002Vanguard\u65d7\u4e0b\u6709\u8bb8\u591a\u57fa\u91d1\uff0c\u65e2\u6709\u5171\u540c\u57fa\u91d1\u7c7b\u522b\uff0c\u4e5f\u6709ETF\u7c7b\u522b\uff0c\u5c31\u9000\u4f11\u8d26\u6237\u800c\u8a00\uff0cETF\u548c\u5171\u540c\u57fa\u91d1\u7684\u5173\u7cfb\u975e\u5e38\u5bc6\u5207\uff0c\u800c\u9000\u4f11\u8d26\u6237\u4e0d\u5fc5\u5904\u7406\u8fd9\u4e9b\u7a0e\u8d39\u3002\nVTSAX\u662f\u4e00\u4e2a&#34\uff1b\u65e8\u5728\u4e3a\u6295\u8d44\u8005\u63d0\u4f9b\u6574\u4e2a\u7f8e\u56fd\u80a1\u5e02\u7684\u655e\u53e3\uff1b\u3002\u4e0b\u56fe\u63cf\u8ff0\u4e86\u540c\u4e00\u57fa\u91d1\u7684\u4e0d\u540c\u7c7b\u522b\u3002\u5982\u679c\u4f60\u6709&#34\uff1b\u673a\u6784\u548c#34\uff1b\u5728\u8d44\u91d1\u5c42\u9762\uff08\u5373500\u4e07\u7f8e\u5143\uff09\uff0c\u5171\u540c\u57fa\u91d1\u5b9e\u9645\u4e0a\u6bd4ETF\u4fbf\u5b9c\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6709500\u4e07\u7f8e\u5143\u7684\u6295\u8d44\uff0c\u4f60\u5e94\u8be5\u53ea\u505a\u673a\u6784\u5c42\u9762\u7684\u6295\u8d44\u3002\u6700\u4f4e\u6536\u8d39\u7684\u5171\u540c\u57fa\u91d1\u662fVTSAX\uff0c\u6bcf\u5e74\u6536\u8d394\u4e2a\u57fa\u70b9\uff0c\u800c\u540c\u7b49\u7684ETF VTI\u6bcf\u5e74\u6536\u8d393\u4e2a\u57fa\u70b9\u3002\u5982\u679c\u4f60\u6709100\u4e07\u7f8e\u5143\uff0c\u8fd9\u5c06\u662f\u4e00\u5e74\u989d\u5916\u7684100\u7f8e\u5143\u8d39\u7528\uff0c\u56e0\u6b64\u8fd9\u5c06\u662f\u6ef4\u704c\u548c\u989d\u5916\u7684bp\u8d39\u7528\u4e4b\u95f4\u7684\u6743\u8861\u3002\u4eba\u4eec\u8fd8\u5e94\u8be5\u8bb0\u4f4f\u4ea4\u6613\u4ea7\u54c1\u7684\u7a0e\u6536\u6548\u7387\uff08\u4f8b\u5982\uff0c\u503a\u5238\u7684\u7a0e\u6536\u6548\u7387\u4e0d\u9ad8\uff09\u3002\n\u8fd9\u662f\u5bf9\u8fd9\u4e9b\u9000\u4f11\u8d26\u6237\u7684\u6982\u8ff0\u3002\u6211\u65e0\u6cd5\u6df1\u5165\u8ba8\u8bba\u4efb\u4f55\u6982\u5ff5\uff0c\u56e0\u4e3a\u5185\u5bb9\u592a\u591a\uff0c\u4f46\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002\n\u5982\u679c\u4f60\u770b\u5230\u6211\u6240\u8bf4\u7684\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u8bf7\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u6211\u4f1a\u6539\u6b63\u7684\u3002\u4e0d\u8981\u7ed9\u6211\u53d1\u90ae\u4ef6\u8be2\u95ee\u6295\u8d44\u5efa\u8bae\uff0c\u6211\u4e0d\u4f1a\u56de\u7b54\u3002", "note_en": "I have decided to write a high level overview I was forced to become familiar with over the past 3 years:   US government incentivized ways to minimize taxes (as of 2022).\n  This blog will probably be most helpful to someone who is unfamiliar with these tax deductions, has the ability to save a couple tens of thousands a year, and wants to avoid taxes. My imagined demographic reading this is a tech worker or someone in the financial industries. The savings per year compound and can have an effect in the low hundreds of thousands by retirement assuming you start in early 20s.    DISCLAIMER: This is not financial advice and you should do your own research. Think for yourself.   I personally think these incentives are extremely convoluted and confusing, but the tax savings are great enough to bare with them. For example, if one can avoid the marginal tax rate while making $200k a year, one avoids 32% in federal taxes.\n  There are 4 accounts that are common and relatively easy to open that I will discuss:  HSA, 401K, IRA, 529\n       Trad. is short for Traditional.  Pre-Tax: The money going into an account has not been taxed, i.e. no income tax\n  Post-Tax: The gains in the account are not taxed when withdrawn from the account, i.e. no capital gains\n      Investments that are not post-tax free are taxed at and add to an individual&#39;s income tax rate at the time of withdrawal. If you are truly retired, you presumably have no other source of income, so these withdrawals would be your only income.\n   Some things to note:  As long as the money is in the tax-advantaged account, any gains will be tax free. It is only when you start withdrawing that there may be tax/gift implications before attempting.\n  For the retirements accounts (401K, IRA) early withdrawal fees before you reach &#34;retirement age&#34; (generally over 60, although this will likely increase)\n    One can only have one type of 401K and one type of IRA (either traditional or Roth, and )\n    HSA is short for Health Savings Account. The intended purposes of this account is actually as a pre-tax account that is only allowed to spend money on healthcare related items. However, one might be better served by simply not saving it and instead, investing, because  this is technically the most tax advantaged account  that I know of as it is both pre-tax and post-tax free. Once the owner of the account reaches age 65, it becomes like a regular retirement account that you own, and you can withdraw money out of it.\n  One can only open this if you have an High Deductible Health Plan (HDHP, as hinted at by the name, a plan with a high deductible as opposed to a PPO plan). If you are in your 20s with no dependents and are healthy, then it might be a good idea.   One can calculate the breakeven point between a PPO account and a HDHP pretty easily, and once you hit the deductible for the HDHP, these accounts seem to be equivalent. As of 2022, one can only contribute $3650, so it is not a huge account though.\n    401Ks are attached to employment for some god-forsaken reason. As of 2022, one can contribute $20,500 per year.   In addition, for a traditional 401K, one can contribute an additional after-tax (i.e. not pre-tax) $40,500. The primary reason to do this is the  mega-backdoor 401K , which not all plans allow. My employer uses Empower Retirement, which does not allow the mega-backdoor unfortunately.   \tNo access until minimum age 55, although there are major easily Google-able exceptions such as the Substantially Equal Periodic Payment (SEPP) exception. If/when you leave your employment, you can (and maybe should) transfer this money into an IRA.\n    If you make six-figures, you likely cannot directly contribute to any IRA. However, the  backdoor Roth IRA allows contributions. This backdoor is analogous to the mega-backdoor for the 401K, but is accessible by everyone. The 2022 IRA max contribution is $6000, so it is not a huge account.   \tIRAs do not allow access until minimum age 59.5, although there are major easily Google-able exceptions such as the Substantially Equal Periodic Payment (SEPP) exception.\n  Another important note is that you can convert pieces of a traditional IRA into a Roth IRA at any time with the converted amount counting as income.   When you convert a traditional IRA to a Roth IRA, you will owe taxes on any money in the traditional IRA that would have been taxed when you withdrew it. That includes the tax-deductible contributions you made to the account as well as the tax-deferred earnings that have built up in it over the years. That money will be taxed as income in the year you make the conversion.   Ideally, you would make this conversion in a year when you have little to no income (for example, during a long non-compete or when starting your own company).\n    This is account is only applicable if you have a family member going to school in the future.   This can include unborn children (although one should pore over the tax implications).  Contributions can be state income tax-deductible (e.g. in Illinois, contributions lead to a tax reimbursement up to $500)\n  Money can come out tax free at any time as long as you spend it on &#34;educational costs&#34;\n    There is a common misconception that ETFs are strictly better/cheaper than mutual funds. Some mutual fund benefits:  One does not need to worry about execution (granted, you can only execute at EOD)\n  There is a misconception that mutual funds also always have more taxes, but firms like   Vanguard uses &#34;heartbeat&#34; trades to reduce taxes on mutual funds (granted,   they can&#39;t avoid all taxes). Vanguard has many funds with both mutual fund classes and an ETF class, and for the purposes of a retirement account that does not have to deal with these taxes, ETFs and mutual funds are very close.\n    VTSAX is a fund that is &#34;designed to provide investors with exposure to the entire U.S. equity market&#34;. The below image depicts the different classes of the same fund.          One can see that if you have &#34;institutional&#34; level money (ie $5M), the mutual fund is actually cheaper than the ETF, so if you have $5M invested, you should just do the institutional level. The mutual fund with the lowest minimum is VTSAX, which has 4 basis points of fees a year, while the equivalent ETF VTI has 3 basis points of fees a year. If you have 1 million dollars, this will be an additional $100 of fees a year, so it will be a trade-off between DRIP and the extra bp in fees.     One should keep in mind the tax efficiency of the products traded as well (e.g. bonds are not very tax efficient).\n    This was a broad overview of these retirement accounts. I could not go over any concept in depth because there is simply too much to cover, but this should be a good point to start from.\n  If you see any error in what I said, please email and I will correct it. Do not email me asking for investment advice, I will not answer.", "posttime": "2022-02-22 02:22:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f18\u60e0,advantaged,\u8d26\u6237", "title": "\u7a0e\u6536\u4f18\u60e0\u8d26\u6237", "title_en": "Tax Advantaged Accounts", "transed": 1, "url": "https://andrewucho.com/posts/20220220_Taxes.html", "via": "", "real_tags": ["\u4f18\u60e0", "\u8d26\u6237"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074532, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5e74\u524d\uff0c\u82f1\u7279\u5c14\u5ba3\u5e03\u4e86\u5176XPU\u8ba1\u5212\uff0c\u901a\u8fc7\u4e13\u95e8\u7684\u4f53\u7cfb\u7ed3\u6784\u5b9e\u73b0\u8ba1\u7b97\u7845\u7684\u591a\u6837\u5316\u3002\u6700\u8fd1\uff0c\u82f1\u7279\u5c14\u5728\u52a0\u901f\u8ba1\u7b97\u7cfb\u7edf\u548c\u56fe\u5f62\uff08AXG\uff09\u4e1a\u52a1\u90e8\u95e8\u5185\u6210\u7acb\u4e86\u4e00\u4e2a\u65b0\u7684\u5b9a\u5236\u8ba1\u7b97\u7ec4\uff0c\u76ee\u6807\u662f\u6784\u5efa\u9488\u5bf9\u5ba2\u6237\u5de5\u4f5c\u8d1f\u8f7d\u4f18\u5316\u7684\u5b9a\u5236\u7845\u5e73\u53f0\u3002\u5728\u672c\u5468\u5373\u5c06\u4e3e\u884c\u76842022\u5e74IEEE\u56fd\u9645\u56fa\u6001\u7535\u8def\u5927\u4f1a\uff08ISSCC\uff09\u4e0a\uff0c\u8be5\u516c\u53f8\u53d1\u5e03\u4e86\u7b2c\u4e00\u4ee3\u533a\u5757\u94fe\u52a0\u901f\u5668ASIC BonanzaMine\u3002\u6574\u4e2a\u7cfb\u7edf\u5305\u542b300\u4e2aBonanzaMine ASIC\uff0c\u636e\u8bf4\u57283600\u74e6\u65f6\u53ef\u4ee5\u8fbe\u523040 THash/s\u3002\n\u82f1\u7279\u5c14\u5c06\u6240\u6709\u5fc5\u8981\u7684\u7ec4\u4ef6\u6574\u5408\u5230\u4e00\u53f0\u72ec\u7acb\u7684\u8ba1\u7b97\u673a\u4e2d\uff0c\u79f0\u4e3aBonanza Mine System\uff0c\u5b83\u770b\u8d77\u6765\u4e0e\u5176\u4ed6\u5927\u591a\u6570\u77ff\u5de5\u975e\u5e38\u76f8\u4f3c\u3002\u6bcf\u4e2a\u7cfb\u7edf\u5305\u542b\u56db\u4e2a\u54c8\u5e0c\u677f\u3001\u4e00\u4e2aIntel FPGA\u63a7\u5236\u5355\u5143\u3001\u56db\u4e2a\u98ce\u6247\u548c\u4e00\u4e2a\u53ef\u7f16\u7a0b\u7535\u6e90\u3002\u4e0b\u9762\u7684\u7167\u7247\u662f\u5b8c\u6574\u7684\u53c2\u8003\u7cfb\u7edf\u3002\u56db\u5757\u677f\u4f4d\u4e8e\u98ce\u6247\u540e\u9762\uff0c\u800c\u63a7\u5236\u5355\u5143\u662f\u9876\u90e8\u7684\u7ec4\u4ef6\uff0c\u7535\u6e90\u5355\u5143\u5782\u76f4\u5b89\u88c5\u5728\u5de6\u4fa7\u3002\n\u7cfb\u7edf\u7684\u4e0a\u90e8\u5305\u542b\u4e00\u4e2a\u63a7\u5236\u5355\u5143\uff0c\u5b83\u662f\u4e00\u4e2aIntel FPGA\uff0c\u5e26\u6709\u4e00\u4e2a\u786c\u81c2cortex\u5185\u6838\uff0c\u6258\u7ba1\u6316\u6398\u5b88\u62a4\u8fdb\u7a0b\u3002\u5b83\u534f\u8c03\u6316\u6398\u5de5\u4f5c\u8d1f\u8f7d\u7684\u90e8\u7f72\uff0c\u5bf9PLL\u8fdb\u884c\u7f16\u7a0b\uff0c\u5e76\u9a8c\u8bc1\u7ed3\u679c\u3002\u901a\u8fc7\u4ee5\u592a\u7f51\u94fe\u8def\u4e0e\u91c7\u77ff\u6c60\u8fdb\u884c\u901a\u4fe1\u3002\u4e0e\u6240\u6709\u5355\u4e2aBonanzaMine ASIC\u7684\u901a\u4fe1\u901a\u8fc7UART\u548cI2C\u94fe\u8def\u5b8c\u6210\uff0c\u8fd9\u4e9b\u94fe\u8def\u8fde\u63a5\u5230\u6bcf\u4e2a\u6563\u5217\u677f\u3002\n\u6bcf\u4e2a\u7535\u8def\u677f\u5305\u542b75\u4e2aBonanzaMine ASIC\uff0c\u7ec4\u6210\u4e00\u4e2a25\u6df1\u7535\u538b\u5806\u6808\u3002\u5355\u4e2aBonanzaMine\u82af\u7247\u901a\u8fc710Mb/s UART\u4e32\u884c\u94fe\u8def\u83ca\u82b1\u94fe\u8fde\u63a5\uff0c\u8be5\u4e32\u884c\u94fe\u8def\u8fd4\u56de\u63a7\u5236\u5355\u5143\uff0c\u7528\u4e8e\u91c7\u77ff\u6709\u6548\u8f7d\u8377/\u5de5\u4f5c\u8d1f\u8f7d\u901a\u4fe1\u3002\u6bcf\u4e2a\u7535\u8def\u677f\u4e0a\u8fd8\u6709\u4e00\u4e2aMCU\uff0c\u7528\u4e8e\u76d1\u6d4b\u6e29\u5ea6\u548c\u7535\u538b\u3002\n\u5bf9\u4e8eASIC\u82af\u7247\u7684\u529f\u7387\u4f20\u8f93\uff0c\u4f7f\u7528\u4e86\u7535\u538b\u53e0\u52a0\u3002\u8fd9\u5145\u5206\u5229\u7528\u4e86\u6240\u6709ASIC\u8868\u73b0\u51fa\u9ad8\u5ea6\u4e00\u81f4\u7684\u6807\u79f0\u7535\u538b\u548c\u7535\u6d41\u7279\u6027\u8fd9\u4e00\u4e8b\u5b9e\u3002\u6bcf\u4e2a\u7535\u8def\u677f\u5185\u768475\u4e2a\u5bcc\u77ffASIC\u88ab\u7ec4\u7ec7\u621025\u4e2a\u6df1\u7684\u5806\u6808\uff0c\u6bcf\u4e09\u4e2aASIC\u90fd\u6709\u4e00\u4e2a\u7ec4\u5408\u7684\u5806\u6808\u7535\u538b\u3002\u8fd9\u5141\u8bb88.875 V\u7684\u8f93\u5165\u7535\u538b\u5728\u6bcf\u4e2a\u7ec4\u5408\u7684ASIC\u7ec4\u4e2d\u5206\u4e3a355 mV\u3002\u82f1\u7279\u5c14\u8868\u793a\uff0c\u8fd9\u5c06\u4f7f\u91c7\u77ff\u6548\u7387\u63d0\u9ad85%\uff0c\u5e76\u6539\u5584IR\u4e0b\u964d\u635f\u5931\u3002\nBonanzaMine\u6a21\u5177\u7684\u5c3a\u5bf8\u4e3a4.14\u00d73.42\u6beb\u7c73\u621614.16\u6beb\u7c73\u00b2\uff0c\u91c7\u75287\u7eb3\u7c73\u5de5\u827a\u5236\u9020\uff08\u82f1\u7279\u5c14\u672a\u62ab\u9732\u4ed6\u4eec\u4f7f\u7528\u76847\u7eb3\u7c73\u6750\u6599\uff09\u3002\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u6709300\u4e2a\uff0c\u53734248\u5e73\u65b9\u6beb\u7c73\u7684\u7845\u3002\u5b83\u9488\u5bf9\u6bd4\u7279\u5e01\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u8fd9\u610f\u5473\u7740ASIC\u7684\u57fa\u672c\u6784\u5efa\u5757\u662f\u53ccSHA256\u54c8\u5e0c\u5f15\u64ce\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u5f15\u64ce\uff0c\u82f1\u7279\u5c14\u8bbe\u8ba1\u4e86\u4e00\u4e2a120\u8f6e\u5b8c\u5168\u5c55\u5f00\u7684SHA256\u6570\u636e\u8def\u5f84\u3002\u901a\u8fc7\u5229\u7528\u51e0\u79cd\u6bd4\u7279\u5e01\u7279\u5b9a\u7684\u4f18\u5316\uff08\u4f8b\u5982\uff0c\u9759\u6001\u5b57\u6bb5\u7684\u9884\u8ba1\u7b97\u3001\u8fed\u4ee3\u5f00\u59cb\u65f6\u95f4\u548c\u63d0\u524d\u7ec8\u6b62\uff09\uff0c\u636e\u8bf4\u53ef\u4ee5\u6d88\u96648\u8f6e\uff0c\u4ece\u800c\u5c06\u5f15\u64ce\u9762\u79ef\u51cf\u5c11\u7ea68%\u3002\u6b64\u5916\uff0c\u4e3a\u4e86\u964d\u4f4e\u529f\u8017\uff0cSHA256\u6570\u636e\u8def\u5f84\u4e2d\u7684\u6240\u6709\u89e6\u53d1\u5668\u4e5f\u88ab\u4f7f\u7528\u7535\u5e73\u654f\u611f\u9501\u5b58\u5668\u7684\u57fa\u4e8e3\u76f8\u9501\u5b58\u5668\u7684\u65f6\u949f\u53d6\u4ee3\u3002\u636e\u8bf4\u8fd9\u5c06\u5bfc\u81f4\u987a\u5e8f\u548c\u65f6\u949f\u529f\u7387\u6700\u591a\u51cf\u5c1150%\u3002\u4e3a\u4e86\u8fdb\u4e00\u6b65\u8282\u7701\u80fd\u6e90\uff0c\u8fd8\u4f7f\u7528\u4e86\u5b9e\u73b0\u4e24\u4e2a\u5e76\u884c\u8c03\u5ea6\u5668\u6570\u636e\u8def\u5f84\u7684\u534a\u9891\u8c03\u5ea6\u5668\u3002\u636e\u8bf4\u8fd9\u80fd\u63d0\u9ad810%\u7684\u80fd\u6e90\u6548\u7387\u3002\n\u6bcf\u4e2aBonanzaMine\u6a21\u5177\u4e2d\u96c6\u6210\u4e86258\u53f0\u91c7\u77ff\u53d1\u52a8\u673a\u3002\u5728\u7cfb\u7edf\u63a7\u5236\u5668\u4e0a\u8ba1\u7b97\u51e0\u4e2a\u9884\u8ba1\u7b97\u7684\u4e2d\u95f4\uff08\u4ee5\u53ca\u9012\u589e\u7684\u5f00\u59cb\u65f6\u95f4\uff09\u6563\u5217\uff0c\u4ece\u800c\u6d88\u9664\u6316\u6398\u5f15\u64ce\u7684\u56db\u8f6e\u8ba1\u7b97\u3002\u4e2d\u95f4\u6563\u5217\u503c\u88ab\u53d1\u9001\u5230\u5404\u4e2a\u5f15\u64ce\uff0c\u4ee5\u5f3a\u5236\u5bf9\u6240\u67092e32\u6f5c\u5728nonce\u8fdb\u884c\u53cc\u6563\u5217\u641c\u7d22\uff0c\u6839\u636e2e224\u5171\u4eab\u76ee\u6807\u641c\u7d22\u9ec4\u91d1nonce\u3002\u5f53\u4e00\u4e2a\u5f15\u64ce\u78b0\u5230\u4e00\u4e2a\u9ec4\u91d1\u65f6\u523b\u65f6\uff0c\u5b83\u4f1a\u88ab\u62a5\u544a\u56de\u63a7\u5236\u4e2d\u5fc3\u8fdb\u884c\u9a8c\u8bc1\u3002\u6b64\u65f6\u9700\u8981\u8fdb\u884c\u4e24\u8f6e\u989d\u5916\u7684\u54c8\u5e0c\u8fd0\u7b97\uff0c\u4ee5\u4e0e\u5757\u76ee\u6807\u8fdb\u884c\u6bd4\u8f83\u3002258\u4e2a\u5f15\u64ce\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u4f7f\u7528\u5019\u9009Merkle root\u7684\u552f\u4e00\u54c8\u5e0c\u503c\u8fdb\u884c\u7f16\u7a0b\uff0c\u6bcf\u4e2a\u677f\u4e0a\u540c\u65f6\u5904\u740619350\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u7cfb\u7edf\u7ea7\u540c\u65f6\u8fd0\u884c77400\u4e2a\u5de5\u4f5c\u8d1f\u8f7d\u3002\n\u82f1\u7279\u5c14\u8868\u793a\uff0c\u8fd9\u4e9b\u5f15\u64ce\u5360\u636e\u4e86\u82af\u7247\u9762\u79ef\u768490%\u3002\u53e6\u591610%\u7528\u4e8e\u6a21\u5177\u4e0b\u90e8\u7684\u201c\u69fd\u53e3\u201d\uff0c\u5176\u4e2d\u5305\u542bPLL\u3001\u4f20\u611f\u5668\u548cGPIO\u3002\u5355\u4e2a\u91c7\u77ff\u53d1\u52a8\u673a\u7684\u5de5\u4f5c\u7535\u538b\u4ec5\u4e3a355 mV\u3002\u7f3a\u53e3\u533a\u57df\u5728750 mV\u4e0b\u5de5\u4f5c\u3002BonanzaMine\u5728355 mV\u7535\u538b\u4e0b\u7684\u53ef\u9760\u5de5\u4f5c\u9891\u7387\u4e3a1.35-1.6 GHz\u3002\n\u867d\u7136\u82f1\u7279\u5c14\u76ee\u524d\u5c55\u793a\u4e86\u4e00\u4e2a\u76f8\u5bf9\u8f83\u5927\u7684\u7cfb\u7edf\uff0c\u4f46\u4f7f\u7528\u5c0f\u578b\u82af\u7247\u65e0\u7591\u4e3a\u5c0f\u578b\u7cfb\u7edf\uff08\u201c\u8ff7\u4f60\u77ff\u5de5\u201d\uff09\u63d0\u4f9b\u4e86\u53ef\u80fd\u6027\uff0c\u8fd9\u662f\u4e00\u4e2a\u76ee\u524d\u7f3a\u4e4f\u7ade\u4e89\u4ea7\u54c1\u7684\u7ec6\u5206\u5e02\u573a\u3002\n\u57281.35-1.6 GHz\u7684\u9891\u7387\u4e0b\uff0c\u787c\u80fa\u57287.5 W\u7684\u5e73\u5747\u529f\u7387\u4e0b\u4ea7\u751f116 GHash/s\u5230137 GHash/s\u7684\u80fd\u91cf\u3002\u8fd9\u76f8\u5f53\u4e8e54.8 J/THash\u3002\u82f1\u7279\u5c14\u8868\u793a\uff0c\u5728\u7cfb\u7edf\u5c42\u9762\u4e0a\uff0c\u8fd9\u53f0\u62e5\u6709300\u53f0Bonanzamine\u7684\u4e13\u7528\u8ba1\u7b97\u673a\u57283600\u74e6\u7684\u529f\u7387\u4e0b\u663e\u793a\u4e8640 THash/s\uff0c\u5c3d\u7ba1\u8be5\u7cfb\u7edf\u53ef\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u7684\u901f\u7387\u3002\u5728\u4ed6\u4eec\u7684\u6f14\u8bb2\u4e2d\uff0c\u82f1\u7279\u5c14\u5c06\u5bcc\u77ff\u4e0e\u6124\u6012\u7684\u514b\u62c9\u514b\u548c\u8fe6\u5357\u963f\u74e6\u9686A9\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u572847.7\u6b21/\u79d2\u65f6\uff0c\u535a\u5357\u624e\u660e\u7cfb\u7edf\u663e\u793a\u8fbe\u523055\u6b21/\u79d2\uff0c\u800cBitfury Clarke\u572856\u6b21/\u79d2\u65f6\u8fbe\u523040\u6b21/\u79d2\uff0c\u800c\u8fe6\u5357\u963f\u74e6\u9686A9\u572858\u6b21/\u79d2\u65f6\u8fbe\u523030\u6b21/\u79d2\u3002\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u6b21\u6280\u672f\u6f14\u793a\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u4ea7\u54c1\u53d1\u5e03\uff0c\u6240\u4ee5\u6ca1\u6709\u63d0\u4f9b\u5b9a\u4ef7\u6216\u53ef\u7528\u6027\u4fe1\u606f\u3002\u7136\u800c\uff0c\u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u5728\u82f1\u7279\u5c14\u7f51\u7ad9\u4e0a\u53d1\u8868\u7684\u4e00\u7bc7\u8bc4\u8bba\u6587\u7ae0\u4e2d\uff0cAGX\u96c6\u56e2\u7684\u9ad8\u7ea7\u526f\u603b\u88c1\u517c\u603b\u7ecf\u7406\u62c9\u8d3e\u00b7\u79d1\u675c\u91cc\u8bf4\uff0c\u4ed6\u8bf4\uff1a\u201c\u6211\u4eec\u7684\u533a\u5757\u94fe\u52a0\u901f\u5668\u5c06\u4e8e\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u53d1\u8d27\u3002\u6211\u4eec\u76f4\u63a5\u4e0e\u5206\u4eab\u6211\u4eec\u53ef\u6301\u7eed\u53d1\u5c55\u76ee\u6807\u7684\u5ba2\u6237\u63a5\u89e6\u3002\u533a\u5757Argo\u533a\u5757\u94fe\uff08\u4ee5\u524d\u79f0\u4e3aSquare\uff09GRIID Infrastructure\u662f\u6211\u4eec\u5373\u5c06\u63a8\u51fa\u7684\u4ea7\u54c1\u7684\u9996\u6279\u5ba2\u6237\u4e4b\u4e00\u3002\u8fd9\u79cd\u67b6\u6784\u662f\u5728\u4e00\u5c0f\u5757\u7845\u4e0a\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u5bf9\u5f53\u524d\u4ea7\u54c1\u7684\u4f9b\u5e94\u5f71\u54cd\u6700\u5c0f\u3002\"", "note_en": "A few years ago Intel announced its XPU effort which entails the diversification of their compute silicon through specialized architectures. More recently Intel formed a new Custom Compute Group within the Accelerated Computing Systems and Graphics (AXG) business unit with the objective of building custom silicon platforms optimized for customers\u2019 workloads. At the 2022 IEEE International Solid-State Circuits Conference (ISSCC) which is taking place virtually this week, the company unveiled BonanzaMine, its first-generation blockchain accelerator ASIC effort. The full system incorporates 300 BonanzaMine ASICs and is said to achieve 40 THash/s at 3600 Watts.\n  Intel incorporates all the necessary components into a single self-contained computer called the Bonanza Mine System which looks fairly similar to most other miners out there. Each system incorporates four hash boards, an Intel FPGA control unit, four fans, and a programmable power supply. The photo below is that of the complete reference system. The four boards are behind the fans while the control unit is the component at the top and the power unit is sitting vertically attached to the left.\n    The upper portion of the system contains the control unit which is an Intel FPGA with a hard ARM cortex core that hosts the mining daemon. It orchestrates the deployment of mining workloads, programs the PLLs, and verify results. Communication with mining pools is done over the Ethernet link. Communication with all the individual BonanzaMine ASICs is done via UART and I2C links which go to each of the individual hash boards.\n Each board incorporates 75 BonanzaMine ASICs organized as a 25-deep voltage stack. The individual BonanzaMine chips are daisy-chained with a 10Mb/s UART serial link that goes back to the control unit for mining payload/workload communication. There is also an MCU on each board for the monitoring of thermal and voltage.\n  For the power delivery to the ASICs die voltage stacking is utilized. This is taking advantage of the fact that all the ASICs exhibit highly uniform nominal voltage and current characteristics. The 75 BonanzaMine ASICS within each board is organized as a 25-deep stack with every three ASICS each being ganged stack voltage. That allows an input voltage of 8.875 V to be divided into 355 mV across each ganged ASICs group. Intel says this provides a 5% improvement in mining efficiency as well as improves IR drop losses.\n   The BonanzaMine die is 4.14\u00d73.42 mm in size or 14.16 mm\u00b2 and is fabricated on a 7-nanometer process (Intel did not disclose whose 7 nm they are using). With 300 of them in a system, that\u2019s 4,248 mm\u00b2 of silicon. It is optimized for Bitcoin which means the ASIC basic building block is the double SHA256 hash engines. For those engines, Intel designed a 120-round fully unrolled SHA256 datapath. By leveraging several Bitcoin-specific optimizations (e.g., pre-compute of static fields, iterate start nonce, and early termination), 8 rounds are said to be eliminated, reducing the engine area by around 8%. Additionally, to reduce power, all flip-flops in the SHA256 datapath were also replaced by 3-phase latch-based clocking using level-sensitive latches. This is said to result in up to a 50% reduction in sequential and clocking power. To further save on energy, a half-frequency scheduler that implements two parallel scheduler datapaths was also utilized. This is said to provide 10% higher energy efficiency.\n    There are 258 mining engines integrated into each BonanzaMine die. Several precomputed intermediate (as well as incremented start nonce) hashes are computed at the system controller, eliminating four compute rounds from the mining engines. The intermediate hash values are sent to individual engines to brute-force double-hash search across all 2e32 potential nonces for a golden nonce based on a 2e224 share target. When an engine hits on a golden nonce, it is reported back to control for verification. Two additional rounds of hashing are necessary at that point to compare to the block target. With each of the 258 engines programmed with a unique hash value from candidate Merkle root, there are 19,350 simultaneous workloads processed per board and 77,400 workloads operating simultaneously at the system level.\n  Intel says the engines account for 90% of the die area. The other 10% is for the lower portion of the die, \u2018the notch\u2019, which incorporates the PLL, sensors, and GPIO. The individual mining engines operate at just 355 mV. The notch area operates at 750 mV. The BonanzaMine has shown reliable operations of 1.35-1.6 GHz at 355 mV.\n  While Intel currently demonstrated a relatively large system, the use of small chips certainly opens up the possibility for smaller systems (\u2018mini-miners\u2019), a market segment that currently lacks competitive products.\n At 1.35-1.6 GHz, the BonanzaMine generates 116 GHash/s to 137 GHash/s at an average power of 7.5 W. This works out to 54.8 J/THash. At the system level, with 300 BonanzaMines, Intel says the specialized computer demonstrates 40 THash/s at 3600 Watts, although the system can achieve higher rates. At their presentation, Intel compared the BonanzaMines to the Bitfury Clarke and Canaan Avalon A9. At 47.7 TH/s, the BonanzaMines System is shown achieving 55 J/TH whereas the Bitfury Clarke achieves 40 THash/s at 56 J/TH while the Canaan Avalon A9 does 30 TH/s at 58 J/TH.\n Because this was a technical presentation and not an actual product announcement, no pricing or availability information was provided. However, earlier this month, in an  opinion piece published on the Intel website, Raja Koduri, SVP and GM of AGX Group, said \u201cOur blockchain accelerator will ship later this year. We are engaged directly with customers that share our sustainability goals. Argo Blockchain, BLOCK (formerly known as Square) and GRIID Infrastructure are among our first customers for this upcoming product. This architecture is implemented on a tiny piece of silicon so that it has minimal impact to the supply of current products.\u201d", "posttime": "2022-02-22 02:19:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u7279\u5c14,\u6bd4\u7279\u5e01,\u63a8\u51fa,unveils", "title": "\u82f1\u7279\u5c14\u63a8\u51faBonanzaMine\uff0c\u4e00\u6b3e\u6bd4\u7279\u5e01\u52a0\u901f\u5668ASIC\u2014\u2014WikiChip Fuse", "title_en": "Intel Unveils BonanzaMine, a Bitcoin Accelerator ASIC \u00e2\u20ac\u201c WikiChip Fuse", "transed": 1, "url": "https://fuse.wikichip.org/news/6603/intel-unveils-bonanzamine-a-bitcoin-accelerator-asic/", "via": "", "real_tags": ["\u82f1\u7279\u5c14", "\u6bd4\u7279\u5e01", "\u63a8\u51fa", "unveils"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074531, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "mold 1.1\u662f\u9ad8\u6027\u80fd\u8fde\u63a5\u5668\u7684\u65b0\u7248\u672c\u3002\u5b83\u5305\u542b\u4e00\u4e9b\u65b0\u7684\u4e3b\u8981\u529f\u80fd\u548c\u5404\u79cd\u9519\u8bef\u4fee\u590d\u3002\n\u4ece\u8fd9\u4e2a\u7248\u672c\u5f00\u59cb\uff0c\u6211\u4eec\u4e0d\u4ec5\u5206\u53d1\u6e90\u4ee3\u7801\uff0c\u8fd8\u5206\u53d1Linux\u7684\u9884\u7f16\u8bd1\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u5728\u9875\u9762\u5e95\u90e8\u4e0b\u8f7d\u5305\u542bmold\u53ef\u6267\u884c\u6587\u4ef6\u7684tar\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u5c06tar\u6587\u4ef6\u7684\u5185\u5bb9\u590d\u5236\u5230/usr/local\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u5176\u5b8c\u6574\u8def\u5f84\uff0c\u5728\u4e0d\u5b89\u88c5\u7684\u60c5\u51b5\u4e0b\u76f4\u63a5\u4f7f\u7528\u3002\n\u589e\u52a0\u4e86\u672c\u5730LTO\uff08\u94fe\u8def\u65f6\u95f4\u4f18\u5316\uff09\u652f\u6301\u3002\u7528\u4e8e\u8c03\u7528ld\u7684\u6a21\u5177\u3002bfd\u6216ld\u3002lld\uff0c\u5982\u679c\u9047\u5230GCC IR\uff08\u4e2d\u95f4\u8868\u793a\uff09\u6587\u4ef6\u6216LLVM IR\u6587\u4ef6\u5206\u522b\u5c06\u4efb\u52a1\u59d4\u6258\u7ed9\u652f\u6301LTO\u7684\u94fe\u63a5\u5668\u3002\u73b0\u5728\uff0cmold\u76f4\u63a5\u5904\u7406IR\u6587\u4ef6\u3002\u6b64\u529f\u80fd\u662f\u4f7f\u7528\u94fe\u63a5\u5668\u63d2\u4ef6API\u5b9e\u73b0\u7684\uff0cGNU ld\u548cGNU gold\u4e5f\u4f7f\u7528\u8be5API\u3002\u8bf7\u6ce8\u610f\uff0c\u6dfb\u52a0LTO\u652f\u6301\u662f\u4e3a\u4e86\u5b8c\u6574\u6027\uff0c\u800c\u4e0d\u662f\u901f\u5ea6\u3002mold\u53ea\u6bd4LTO\u6784\u5efa\u7684\u5176\u4ed6\u94fe\u63a5\u5668\u7a0d\u5fae\u5feb\u4e00\u70b9\uff0c\u56e0\u4e3a\u4e0d\u662f\u94fe\u63a5\u800c\u662f\u4ee3\u7801\u4f18\u5316\u5360\u4e3b\u5bfc\u5730\u4f4d\u3002\uff08\u516c\u5143\u524d46995\u5e74\uff09\nRISC-V\uff08RV64\uff09\u73b0\u5728\u88ab\u652f\u6301\u4f5c\u4e3a\u4e3b\u673a\u548c\u76ee\u6807\u5e73\u53f0\u3002mold\u53ef\u4ee5\u8fde\u63a5\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5927\u578b\u7a0b\u5e8f\uff0c\u4f8b\u5982mold\u672c\u8eab\u6216RISC-V\u7684LLVM Clang\uff08e76f7c0\uff09\n\u652f\u6301-emit relocs\u9009\u9879\u3002\u5982\u679c\u63d0\u4f9b\u4e86\u8be5\u9009\u9879\uff0cmold\u4f1a\u5c06\u91cd\u5b9a\u4f4d\u8282\u4ece\u8f93\u5165\u6587\u4ef6\u590d\u5236\u5230\u8f93\u51fa\u6587\u4ef6\u3002\u8fd9\u4e2a\u529f\u80fd\u88ab\u4e00\u4e9b\u94fe\u63a5\u540e\u4e8c\u8fdb\u5236\u4f18\u5316\u6216\u5206\u6790\u5de5\u5177\u4f7f\u7528\uff0c\u6bd4\u5982Facebook&#39\uff1b\u8fd9\u662f\u87ba\u6813\u3002\uff082007\u5e742\u670826\u65e5\uff09\nmold\u83b7\u5f97\u4e86--shuffle\u533a\u6bb5\u9009\u9879\u3002\u5982\u679c\u7ed9\u51fa\u4e86\u8be5\u9009\u9879\uff0c\u94fe\u63a5\u5668\u4f1a\u968f\u673a\u8c03\u6574\u8f93\u5165\u90e8\u5206\u7684\u987a\u5e8f\uff0c\u7136\u540e\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u56fa\u5b9a\u5b83\u4eec\u7684\u5730\u5740\u3002\u6b64\u529f\u80fd\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5f88\u6709\u7528\u3002\u9996\u5148\uff0c\u5b83\u53ef\u4ee5\u7528\u4f5cASLR\uff08\u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\u5316\uff09\u7684\u4e00\u79cd\u5f3a\u5927\u5f62\u5f0f\u3002\u5176\u6b21\uff0c\u5f53\u60a8\u5bf9\u5176\u4ed6\u4e00\u4e9b\u7a0b\u5e8f\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u4ee5\u83b7\u5f97\u66f4\u53ef\u9760\u7684\u57fa\u51c6\u6570\u5b57\u65f6\uff0c\u53ef\u4ee5\u542f\u7528\u5b83\uff0c\u56e0\u4e3a\u5373\u4f7f\u662f\u76f8\u540c\u7684\u673a\u5668\u4ee3\u7801\uff0c\u5982\u679c\u5b83\u4eec\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5e03\u5c40\u4e0d\u540c\uff0c\u5176\u6027\u80fd\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u4f60\u8981\u786e\u4fdd\u4f60\u5f97\u5230\u4e86\u597d\u7684/\u574f\u7684\u57fa\u51c6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u5de7\u5408\uff0c\u901a\u8fc7\u6d17\u724c\u8f93\u5165\u90e8\u5206\u3002\uff087e91897\uff09\n\u6dfb\u52a0\u4e86--print dependencies\u548c--print dependencies=full\u9009\u9879\u3002\u5b83\u4eec\u4ee5CSV\u683c\u5f0f\u6253\u5370\u8f93\u5165\u6587\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ed6\u4eec\u6253\u5370\u51fa\u5173\u4e8e\u54ea\u4e2a\u6587\u4ef6\u7684\u4fe1\u606f\u53d6\u51b3\u4e8e\u4f7f\u7528\u54ea\u4e2a\u7b26\u53f7\u7684\u6587\u4ef6\u3002\u6211\u4eec\u6dfb\u52a0\u8fd9\u4e2a\u7279\u6027\u65f6\u8003\u8651\u4e86\u51e0\u4e2a\u7528\u4f8b\u3002\u9996\u5148\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u5206\u6790\u4e3a\u4ec0\u4e48\u67d0\u4e2a\u5bf9\u8c61\u6587\u4ef6\u88ab\u4ece\u5b58\u6863\u4e2d\u53d6\u51fa\u5e76\u94fe\u63a5\u5230\u8f93\u51fa\u6587\u4ef6\u3002\u7b2c\u4e8c\uff0c\u5f53\u60a8\u60f3\u8981\u6d88\u9664\u5bf9\u67d0\u4e2a\u5e93\u7684\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\u65f6\uff0c\u4f7f\u7528\u6b64\u529f\u80fd\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u627e\u5230\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9e\u9a8c\u6027\u7279\u5f81\uff0c\u53ef\u80fd\u4f1a\u5728\u6a21\u5177\u7684\u7279\u5f81\u7248\u672c\u4e2d\u66f4\u6539\u6216\u5220\u9664\u3002\uff08a1287c2\uff09\n\u73b0\u5728\uff0cPT_GNU_RELRO\u6bb5\u4e0e\u4e0b\u4e00\u9875\u8fb9\u754c\u5bf9\u9f50\u3002\u4e4b\u524d\uff0cmold\u6ca1\u6709&#39\uff1bt\u5411\u4e0a\u5bf9\u9f50\uff0c\u8fd0\u884c\u65f6\u52a0\u8f7d\u7a0b\u5e8f\u5411\u4e0b\u5bf9\u9f50\uff0c\u56e0\u6b64\u6700\u540e\u4e00\u4e2a\u90e8\u5206\u9875\u9762\u5c06\u4e0d\u53d7RELRO\u673a\u5236\u7684\u4fdd\u62a4\u3002\u73b0\u5728\uff0c\u6574\u4e2aRELRO\u6bb5\u4fdd\u8bc1\u5728\u8fd0\u884c\u65f6\u662f\u53ea\u8bfb\u7684\u3002\uff080a0f9b3\uff09\n\u8fd9\u4e2a\u5f97\u5230\u4e86\u3002\u5982\u679c\u73b0\u5728\u7ed9\u51fa-z\uff0cplt\u6bb5\u73b0\u5728\u7531RELRO\u4fdd\u62a4\u3002\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u5199\u5165\u3002\u5f97\u5230\u4e86\u3002\u53ea\u6709\u5728\u8fdb\u7a0b\u542f\u52a8\u65f6\u89e3\u51b3\u4e86\u6240\u6709\u7b26\u53f7\uff0cplt\u624d\u4f1a\u5728\u8fdb\u7a0b\u542f\u52a8\u671f\u95f4\u53d1\u751f\u3002\uff0873159e2\uff09\n\u4e4b\u524d\uff0cmold\u62a5\u544a\u4e86\u4e00\u4e2a\u9519\u8bef\uff0c\u5982\u679c\u4f7f\u7528\u65e7\u7684GCC\uff08\u4f7f\u7528-fgnu unique\uff09\u521b\u5efa\u7684\u5bf9\u8c61\u6587\u4ef6\u4e0e\u4f7f\u7528\u65b0\u7684GCC\u6216Clang\uff08\u4f7f\u7528-fno gnu unique\uff09\u521b\u5efa\u7684\u5bf9\u8c61\u6587\u4ef6\u6df7\u5408\uff08#324\uff09\u3002\u73b0\u5728\uff0cmold\u63a5\u53d7\u8fd9\u6837\u7684\u8f93\u5165\u6587\u4ef6\u3002\uff08e65c5d2\uff09\n\u9709\u83cc\u4ea7\u751f\u3002symtab section\u73b0\u5728\u5305\u542bsection\u7b26\u53f7\u548c\u4ece\u8f93\u5165\u5171\u4eab\u5bf9\u8c61\u6587\u4ef6\u6d3e\u751f\u7684\u7b26\u53f7\u3002\uff08e4c03c2\uff0c1550b5a\uff09\n\u6a21\u5177\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u73b0\u5728\u53ef\u4ee5\u5728valgrind\u4e0b\u8fd0\u884c\u3002\u4e4b\u524d\uff0cvalgrind\u5728\u542f\u52a8\u65f6\u7531\u4e8e\u65ad\u8a00\u5931\u8d25\u800c\u4e2d\u6b62\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709&#39\uff1bI don\u2019\u6211\u4e0d\u6307\u671b\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u540c\u65f6\u5177\u6709\u8fd9\u4e24\u79cd\u529f\u80fd\u3002bss\u548c\u3002dynbss\u90e8\u5206\u3002\u9709\u83cc\u4ea7\u751f\u3002dynbss\u5305\u542b\u590d\u5236\u91cd\u65b0\u5b9a\u4f4d\u7684\u7b26\u53f7\u3002\u8be5\u90e8\u5206\u5df2\u91cd\u547d\u540d\u3002copyrel\u89e3\u51b3valgrind\u548c#39\uff1b\u8fd9\u662f\u4e2a\u95ee\u9898\u3002\uff080f8bf23\uff09", "note_en": "mold 1.1 is a new release of the high-performance linker. It contains a few new major features and various bug fixes.\n Starting from this release, we distribute not only source but pre-compiled binaries for Linux. You can download a tar file containing  mold executable at the bottom of the page. You can copy the contents of the tar file to  /usr/local or just use without installation by directly specifying its full path.\n  Native LTO (link-time optimization) support has been added. mold used to invoke  ld.bfd or  ld.lld if it encountered a GCC IR (intermediate representation) file or an LLVM IR file to delegate the task to the LTO-capable linkers, respectively. Now, mold handles IR files directly. This feature is implemented using the linker plugin API which is also used by GNU ld and GNU gold. Note that the LTO support has been added for completeness and not for speed. mold is only marginally faster than the other linkers for LTO builds because not linking but code optimization dominates. (  46995bc)\n RISC-V (RV64) is now supported as both host and target platforms. mold can link real-world large programs such as mold itself or LLVM Clang for RISC-V. (  e76f7c0)\n The  -emit-relocs option is supported. If the option is given, mold copies relocation sections from input files to an output file. This feature is used by some post-link binary optimization or analysis tools such as Facebook&#39;s Bolt. (  26fe71d)\n mold gained the  --shuffle-sections option. If the option is given, the linker randomly shuffle the order of input sections before fixing their addresses in the virtual address space. This feature is useful in some situations. First, it can be used as a strong form of ASLR (address space layout randomization). Second, you can enable it when you are benchmarking some other program to get more reliable benchmark numbers, because even the same machine code can vary in performance if they are laid out differently in the virtual address space. You want to make sure that you got good/bad benchmark numbers not by coincidence by shuffling input sections. (  7e91897)\n The  --print-dependencies and  --print-dependencies=full options were added. They print out dependencies between input files in the CSV format. That is, they print out the information as to which file depends on which file to use which symbol. We added this feature with a few use cases in mind. First, you can use this to analyze why some object file was pulled out from an archive and got linked to an output file. Second, when you want to eliminate all dependencies to some library, you can find all of them very easy with this feature. Note that this is an experimental feature and may change or removed in feature releases of mold. (  a1287c2)\n  A  PT_GNU_RELRO segment is now aligned up to the next page boundary. Previously, mold didn&#39;t align it up, and the runtime loader align it  down, so the last partial page would not be protected by the RELRO mechanism. Now, the entire RELRO segment is guaranteed to be read-only at runtime. (  0a0f9b3)\n The  .got.plt section is now protected by RELRO if  -z now is given. This is possible because writes to  .got.plt happen only during process startup if all symbols are resolved on process startup. (  73159e2)\n Previously, mold reported an error if object files created with old GCC (with  -fgnu-unique) are mixed with ones created with newer GCC or Clang (with  -fno-gnu-unique) ( #324). Now, mold accepts such input files. (  e65c5d2)\n  mold-generated  .symtab section now contains section symbols and symbols derived from input shared object files. (  e4c03c2,   1550b5a)\n mold-generated executables can now run under valgrind. Previously, valgrind aborted on startup due to an assertion failure because it didn&#39;t expect for an executable to have both  .bss and  .dynbss sections. mold generated  .dynbss to contain copy-relocated symbols. The section has been renamed  .copyrel to workaround the valgrind&#39;s issue. (  0f8bf23)", "posttime": "2022-02-22 02:17:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6a21\u5177,mold,\u6587\u4ef6", "title": "\u6a21\u51771.1", "title_en": "Mold 1.1", "transed": 1, "url": "https://github.com/rui314/mold/releases/tag/v1.1", "via": "", "real_tags": ["\u6a21\u5177", "mold", "\u6587\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074530, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u6269\u5c55\u5c06\u7f29\u7565\u56fe\u66ff\u6362\u4e3a\u89c6\u9891\u4e2d\u7684\u4e00\u4e2a\u5e27\uff0c\u6709\u6548\u5730\u6d88\u9664\u4e86\u4efb\u4f55\u70b9\u51fb\u8bf1\u9975\uff0c\u540c\u65f6\u4ecd\u7136\u663e\u793a\u9ad8\u8d28\u91cf\u7684\u7f29\u7565\u56fe\uff0c\u8fd9\u6837\u60a8\u4ecd\u7136\u53ef\u4ee5\u5f88\u597d\u5730\u4e86\u89e3\u89c6\u9891\u7684\u5185\u5bb9\u3002\u5b83\u8fd8\u53ef\u4ee5\u4fee\u6539\u6807\u9898\u4ee5\u505c\u6b62\u90e8\u5206\u6216\u5168\u90e8\u5927\u5199\u6807\u9898\u3002\u5b83\u5728Youtube\u4e0a\u65e0\u5904\u4e0d\u5728\uff0c\u5305\u62ec\u4e3b\u9875\u3001\u8d8b\u52bf\u9875\u9762\u3001\u8ba2\u9605\u9875\u9762\u548c\u9891\u9053\u9875\u9762\u3002\u8fd8\u6709\u624b\u673a\u3002\u901a\u8fc7\u5355\u51fb\u53f3\u4e0a\u89d2\u7684\u6269\u5c55\u56fe\u6807\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6269\u5c55\u7684\u6240\u6709\u529f\u80fd\u3002\u5982\u679c\u6253\u5f00youtube\u9009\u9879\u5361\uff0c\u5219\u65e0\u9700\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\uff0c\u60a8\u53ef\u4ee5\u7acb\u5373\u770b\u5230\u4e0d\u540c\u9009\u9879\u7684\u6548\u679c\u3002\u8fd9\u4e2a\u6269\u5c55\u53ef\u80fd\u4f1a\u5e2e\u52a9\u90a3\u4e9b\u5bf9Youtube\u4e0a\u763e\u7684\u4eba\u6216\u4efb\u4f55\u4e0d\u4e0a\u763e\u7684\u4eba&#39\uff1b\u6211\u4e0d\u60f3\u5728\u5bfb\u627e\u9ad8\u8d28\u91cf\u5185\u5bb9\u7684\u540c\u65f6\u88ab\u6d6e\u534e\u7684\u7f29\u7565\u56fe\u548c\u5168\u5927\u5199\u6807\u9898\u5206\u6563\u6ce8\u610f\u529b\u3002\u6e90\u4ee3\u7801\uff1ahttps://github.com/pietervanheijningen/clickbait-remover-for-youtubeChrome\u7248\u672c\uff1ahttps://chrome.google.com/webstore/detail/clickbait-remover-for-you/omoinegiohhgbikclijaniebjpkeopip", "note_en": "This extension replaces thumbnails with a frame from the video, effectively removing any clickbait while still showing a high quality thumbnail so you can still get a good idea of what the video is about. It can also modify titles to stop partial or all caps titles.  It works everywhere on Youtube including the homepage, trending page, subscription page and channel pages. And also on mobile.  All functionality of the extension is customizable by clicking the extension icon on the top right, you can see the effect that different options have right away if you have a youtube tab open, no need to reload the page.  This extension might help people who have a Youtube addiction or anyone who just doesn&#39;t want to be distracted by flashy thumbnails and all caps titles while trying to find some quality content.  Source code:  https://github.com/pietervanheijningen/clickbait-remover-for-youtube Chrome version:  https://chrome.google.com/webstore/detail/clickbait-remover-for-you/omoinegiohhgbikclijaniebjpkeopip", "posttime": "2022-02-22 02:16:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "youtube,remover", "title": "Clickbait remover for YouTube\uff1a\u4e00\u4e2a\u89c4\u8303\u5316\u89c6\u9891\u5217\u8868\u7684FF\u63d2\u4ef6", "title_en": "Clickbait remover for YouTube: a FF addon to normalize video lists", "transed": 1, "url": "https://addons.mozilla.org/en-US/firefox/addon/clickbait-remover-for-youtube/", "via": "", "real_tags": ["youtube", "remover"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074528, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "[1]  .  2016.  . \u7b2c12\u5c4aUSENIX\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u3002USENIX\uff0c265\u2013283\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[2]   2018.  . \u73b0\u573a\u53ef\u7f16\u7a0b\u903b\u8f91\u548c\u5e94\u7528\u56fd\u9645\u4f1a\u8bae\u8bb0\u5f55\u3002IEEE\uff0c411-418\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[5]  .  2016.  . \u5728\u300a\u56fd\u9645\u673a\u5668\u5b66\u4e60\u4f1a\u8bae\u8bb0\u5f55\u300b\u4e0a\u53d1\u8868\u3002173\u2013 182.   \u8c37\u6b4c\u5b66\u8005\n[6]  .  2017.  . \u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217ACM/SIGDA\u56fd\u9645\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u3002ACM\uff0c55-64\u5c81\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[7]  .  2012.  . \u5728\u73b0\u573a\u53ef\u7f16\u7a0b\u5b9a\u5236\u8ba1\u7b97\u673a\u5e74\u5ea6\u56fd\u9645\u7814\u8ba8\u4f1a\u4e0a\u53d1\u8868\u3002IEEE\uff0c93-96\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[8]  .  2017.  . \u5728IEEE\u56fd\u9645\u7535\u8def\u4e0e\u7cfb\u7edf\u7814\u8ba8\u4f1a\uff08ISCAS\uff09\u4e0a\uff0c1\u2013 4.   \u8c37\u6b4c\u5b66\u8005\n[9]  .  2014.  . \u5728\u8ba1\u7b97\u673a\u524d\u6cbf\u7684ACM\u4f1a\u8bae\u8bb0\u5f55\u4e2d\u3002ACM\uff0c3\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[10]  .  2018.  . \u5728USENIX\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u4e0a\uff0c578\u2013 594.   \u8c37\u6b4c\u5b66\u8005\n[11]  .  2019.  . \u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217ACM/SIGDA\u56fd\u9645\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u3002ACM\uff0c73-82\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[12]  .  2020.  . \u57282020\u5e74IEEE\u9ad8\u6027\u80fd\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u56fd\u9645\u7814\u8ba8\u4f1a\u4e0a\u53d1\u8868\u3002IEEE\uff0c220-233\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[13]  .  2014.  . \u5728\u73b0\u573a\u53ef\u7f16\u7a0b\u5b9a\u5236\u8ba1\u7b97\u673a\u5e74\u5ea6\u56fd\u9645\u7814\u8ba8\u4f1a\u4e0a\u53d1\u8868\u3002IEEE\uff0c9-16\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[14]  .  2014.  . \u73b0\u573a\u53ef\u7f16\u7a0b\u6280\u672f\u56fd\u9645\u4f1a\u8bae\u8bb0\u5f55\u3002IEEE\uff0c330-333\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[15] Daniel Firestone\u3001Andrew Putnam\u3001Sambrama Mundkur\u3001Derek Chiou\u3001Alireza Dabagh\u3001Mike Andrewatha\u3001Hari Angepat\u3001Vivek Bhanu\u3001Adrian Caulfield\u3001Eric Chung\u3001Harish Kumar Chandrappa\u3001Somesh Chaturmohta\u3001Matt Humphrey\u3001Jack Lavier\u3001Norman Lam\u3001Fengfen Liu\u3001Kalin Ovtcharov\u3001Jitu Padhey\u3001Gautham Popuri\u3001Shachar Raindel\u3001Tejas Sapre\u3001Mark Shaw\u3001\uff0cGabriel Silva\u3001Madhan Sivakumar\u3001Nisheeth Srivastava\u3001Anshuman Verma\u3001Qasim Zuhair\u3001Deepak Bansal\u3001Doug Burger\u3001Kushagra Vaid\u3001David A.Maltz\u548cAlbert Greenberg\u30022018.  . \u5728USENIX\u7f51\u7edc\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u4e0a\u53d1\u8868\u3002\u4e4c\u585e\u5c3c\u514b\u65af\uff0c51-66\u5c81\u3002\u8c37\u6b4c\u5b66\u8005\n[16] Jeremy Fowers\u3001Kalin Ovtcharov\u3001Michael Papamichael\u3001Todd Massengill\u3001Liu Ming\u3001Daniel Lo\u3001Shlomi Alkay\u3001Michael Haselman\u3001Logan Adams\u3001Mahdi Ghandi\u3001Stephen Heil\u3001Prerak Patel\u3001Adam Sapek\u3001Gabriel Weisz\u3001Lisa Woods\u3001Sitaram Lanka\u3001Steven K.Reinhardt\u3001Adrian M.Caulfield\u3001Eric S.Chung\u548cDoug Burger\u30022018.  . \u300a\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u56fd\u9645\u5e74\u4f1a\u8bba\u6587\u96c6\u300b\u3002IEEE\uff0c1-14\u3002\u8c37\u6b4c\u5b66\u8005\n[17]  .  2017.  .   IEEE\u96c6\u6210\u7535\u8def\u548c\u7cfb\u7edf\u7684\u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1\u5b66\u62a537,1\uff082017\uff09\uff0c35\u201347\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[18]  .  2019.  .   \u5173\u4e8e\u53ef\u91cd\u6784\u6280\u672f\u548c\u7cfb\u7edf\u7684ACM\u4ea4\u661312\uff0c1\uff082019\uff09\uff0c2\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[19]  .  2020.  . 2020\u5e74ACM/IEEE\u7b2c47\u5c4a\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784\u56fd\u9645\u5e74\u4f1a\u8bba\u6587\u96c6\u3002IEEE\uff0c982-995\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[20] \u5b8b\u6c49\u3001\u5eb7\u4fca\u9f99\u3001\u6bdb\u60e0\u5b50\u3001\u80e1\u4e00\u9e23\u3001\u674e\u65b0\u7acb\u3001\u674e\u7389\u658c\u3001\u8c22\u4e1c\u4eae\u3001\u7f57\u7ea2\u3001\u5b8b\u5c27\u3001\u738b\u5b87\u3001\u6768\u534e\u5fe0\u548c\u5a01\u5ec9\u00b7J\u00b7\u6234\u5229\u30022017.  . \u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217ACM/SIGDA\u56fd\u9645\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u3002ACM\uff0c75-84\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[21]  .  2016.  . \u5728IEEE\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u6a21\u5f0f\u8bc6\u522b\u4f1a\u8bae\u8bb0\u5f55\u4e2d\u3002IEEE\uff0c770-778\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[23]  .  2019.  . 2019\u5e74IEEE\u5b9e\u65f6\u4e0e\u5d4c\u5165\u5f0f\u6280\u672f\u4e0e\u5e94\u7528\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u300229\u2013 41.  \u5185\u653f\u90e8\uff1ahttps://doi.org/10.1109/RTAS.2019.00011\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[25]  .  2019.  . 2019\u5e74IEEE\u5b9e\u65f6\u7cfb\u7edf\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u3002326\u2013 338.  \u5185\u653f\u90e8\uff1ahttps://doi.org/10.1109/RTSS46320.2019.00037\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[26]  .  2018.  . \u5728\u300a\u7b2c13\u5c4a\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u7814\u8ba8\u4f1a\u8bba\u6587\u96c6\u300b\u4e2d\u3002107\u2013 127.   \u8c37\u6b4c\u5b66\u8005\n[27]\u5965\u5229\u5f17\u00b7\u514b\u8bfa\u5fb7\u5c14\u3001\u4fdd\u7f57\u00b7R\u00b7\u6839\u65af\u52d2\u548c\u96f7\u7eb3\u00b7G\u00b7\u65af\u5e15\u83b1\u514b\u30022017.\u865a\u62df\u5316\u53ef\u91cd\u6784\u786c\u4ef6\uff0c\u5728\u4e91\u67b6\u6784\u4e2d\u63d0\u4f9b\u53ef\u6269\u5c55\u6027\u3002\u53c2\u52a0\u56fd\u9645\u7535\u8def\u3001\u7535\u5b50\u548c\u5fae\u7535\u5b50\u8fdb\u5c55\u4f1a\u8bae\uff08CENICS\uff09\u300233\u201338.   \u8c37\u6b4c\u5b66\u8005\n[28]  .  2013.  . \u5728\u300a\u7b2c16\u5c4a\u8bbe\u8ba1\u3001\u81ea\u52a8\u5316\u4e0e\u5de5\u7a0b\u5b66\u62a5\u300b\uff1b\u6b27\u6d32\u6d4b\u8bd5\u4f1a\u8bae\u548c\u5c55\u89c8\u3002\u8c37\u6b4c\u5b66\u8005\n[29]  .  2020.  .   IEEE Micro 40\uff0c2\uff082020\uff09\uff0c8\u201316\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[30]  .  2019.  . 2019\u5e74IEEE\u7b2c27\u5c4a\u73b0\u573a\u53ef\u7f16\u7a0b\u5b9a\u5236\u8ba1\u7b97\u673a\u56fd\u9645\u5e74\u4f1a\u8bba\u6587\u96c6\u3002IEEE\uff0c199\u2013207\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[34]  .  2016.  . \u5728IEEE\u70ed\u82af\u7247\u7814\u8ba8\u4f1a\u4e0a\u53d1\u8868\u3002IEEE\u3002\u8c37\u6b4c\u5b66\u8005\n[36]\u5b89\u5fb7\u9c81\u00b7\u666e\u7279\u5357\u3001\u963f\u5fb7\u91cc\u5b89\u00b7M\u00b7\u8003\u5c14\u83f2\u5c14\u5fb7\u3001\u57c3\u91cc\u514b\u00b7S\u00b7\u949f\u3001\u5fb7\u91cc\u514b\u00b7\u90b1\u3001\u51ef\u666e\u7f57\u65af\u00b7\u5eb7\u65af\u5766\u4e01\u5c3c\u5fb7\u65af\u3001\u7ea6\u7ff0\u00b7\u5fb7\u59c6\u3001\u54c8\u8fea\u00b7\u57c3\u65af\u8fc8\u4f0a\u5c14\u624e\u5fb7\u3001\u6770\u91cc\u7c73\u00b7\u798f\u6c83\u65af\u3001\u6208\u76ae\u00b7\u666e\u62c9\u5c1a\u65af\u00b7\u6208\u5e15\u5c14\u3001\u626c\u00b7\u683c\u96f7\u3001\u8fc8\u514b\u5c14\u00b7\u54c8\u585e\u5c14\u66fc\u3001\u65af\u79d1\u7279\u00b7\u8c6a\u514b\u3001\u65af\u8482\u82ac\u00b7\u6d77\u5c14\u3001\u963f\u7c73\u5c14\u00b7\u970d\u5c14\u9a6c\u8482\u3001\u6731\u6768\u00b7\u91d1\u3001\u897f\u5854\u5170\u5361\u3001\u8a79\u59c6\u65af\u00b7\u62c9\u9c81\u65af\u3001\u57c3\u91cc\u514b\u00b7\u5f7c\u5f97\u68ee\u3001\u897f\u8499\u00b7\u6ce2\u666e\u3001\u4e9a\u4f26\u00b7\u53f2\u5bc6\u65af\u3001\u6770\u68ee\u00b7\u901a\u3001\u83f2\u5229\u666e\u00b7\u4f0a\u8096\u3001\uff0c\u8fd8\u6709\u9053\u683c\u6c49\u5821\u30022014.  .   SIGARCH\u8ba1\u7b97\u673a\u67b6\u6784\u65b0\u95fb42,3\uff082014\uff09\uff0c13-24\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986\n[37]  .  2020.  . \u7b2c57\u5c4aACM/IEEE\u8bbe\u8ba1\u81ea\u52a8\u5316\u4f1a\u8bae\u8bba\u6587\u96c6\u30021\u2013 6.  \u5185\u653f\u90e8\uff1ahttps://doi.org/10.1109/DAC18072.2020.9218652\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[38]  .  2018.  . \u7b2c28\u5c4a\u73b0\u573a\u53ef\u7f16\u7a0b\u903b\u8f91\u4e0e\u5e94\u7528\u56fd\u9645\u4f1a\u8bae\u8bb0\u5f55\u3002IEEE\uff0c89-897\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[40]  .  2016.  . \u5728IEEE\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u6a21\u5f0f\u8bc6\u522b\u4f1a\u8bae\u8bb0\u5f55\u4e2d\u3002IEEE\uff0c2818\u20132826\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[41]  .  2018.  . \u73b0\u573a\u53ef\u7f16\u7a0b\u903b\u8f91\u548c\u5e94\u7528\u56fd\u9645\u4f1a\u8bae\u8bb0\u5f55\u3002IEEE\uff0c131-138\u3002\u8c37\u6b4c\u5b66\u8005\u4ea4\u53c9\u53c2\u8003\n[44]  .  2019.  .   IEEE\u96c6\u6210\u7535\u8def\u548c\u7cfb\u7edf\u7684\u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1\u5b66\u62a539,10\uff082019\uff09\uff0c2668\u20132681\u3002\u8c37\u6b4c\u5b66\u8005\n[45]  .  2018.  .   IEEE\u96c6\u6210\u7535\u8def\u548c\u7cfb\u7edf\u7684\u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1\u5b66\u62a538\uff0c11\uff082018\uff09\uff0c2072\u20132085\u3002\u8c37\u6b4c\u5b66\u8005\n[46]  .  2018.  . \u5728\u300a\u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1\u56fd\u9645\u4f1a\u8bae\u8bb0\u5f55\u300b\u4e0a\u53d1\u8868\u3002ACM\uff0c56\u5c81\u3002\u8c37\u6b4c\u5b66\u8005\u6570\u5b57\u56fe\u4e66\u9986", "note_en": "[1]  .  2016.  . In   Proceedings of the 12th USENIX Symposium on Operating Systems Design and Implementation. USENIX,  265\u2013 283.   Google Scholar    Digital Library\n [2]   2018.  . In   Proceedings of the International Conference on Field Programmable Logic and Applications. IEEE,  411\u2013 418.   Google Scholar    Cross Ref\n   [5]  .  2016.  . In   Proceedings of the International Conference on Machine Learning.  173\u2013 182.   Google Scholar\n [6]  .  2017.  . In   Proceedings of the ACM/SIGDA International Symposium on Field-Programmable Gate Arrays. ACM,  55\u2013 64.   Google Scholar    Digital Library\n [7]  .  2012.  . In   Proceedings of the Annual International Symposium on Field-Programmable Custom Computing Machines. IEEE,  93\u2013 96.   Google Scholar    Digital Library\n [8]  .  2017.  . In   IEEE International Symposium on Circuits and Systems (ISCAS).  ,  1\u2013 4.   Google Scholar\n [9]  .  2014.  . In   Proceedings of the ACM Conference on Computing Frontiers. ACM,  3.   Google Scholar    Digital Library\n [10]  .  2018.  . In   Proceedings of the USENIX Symposium on Operating Systems Design and Implementation.  ,  578\u2013 594.   Google Scholar\n [11]  .  2019.  . In   Proceedings of the ACM/SIGDA International Symposium on Field-Programmable Gate Arrays. ACM,  73\u2013 82.   Google Scholar    Digital Library\n [12]  .  2020.  . In   Proceedings of the 2020 IEEE International Symposium on High Performance Computer Architecture. IEEE,  220\u2013 233.   Google Scholar    Cross Ref\n [13]  .  2014.  . In   Proceedings of the Annual International Symposium on Field-Programmable Custom Computing Machines. IEEE,  9\u2013 16.   Google Scholar    Cross Ref\n [14]  .  2014.  . In   Proceedings of the International Conference on Field-Programmable Technology. IEEE,  330\u2013 333.   Google Scholar    Cross Ref\n [15]  Daniel Firestone, Andrew Putnam, Sambhrama Mundkur, Derek Chiou, Alireza Dabagh, Mike Andrewartha, Hari Angepat, Vivek Bhanu, Adrian Caulfield, Eric Chung, Harish Kumar Chandrappa, Somesh Chaturmohta, Matt Humphrey, Jack Lavier, Norman Lam, Fengfen Liu, Kalin Ovtcharov, Jitu Padhye, Gautham Popuri, Shachar Raindel, Tejas Sapre, Mark Shaw, Gabriel Silva, Madhan Sivakumar, Nisheeth Srivastava, Anshuman Verma, Qasim Zuhair, Deepak Bansal, Doug Burger, Kushagra Vaid, David A. Maltz, and Albert Greenberg.  2018.  . In   Proceedings of the USENIX Symposium on Networked Systems Design and Implementation. USENIX,  51\u2013 66.   Google Scholar\n [16]  Jeremy Fowers, Kalin Ovtcharov, Michael Papamichael, Todd Massengill, Ming Liu, Daniel Lo, Shlomi Alkalay, Michael Haselman, Logan Adams, Mahdi Ghandi, Stephen Heil, Prerak Patel, Adam Sapek, Gabriel Weisz, Lisa Woods, Sitaram Lanka, Steven K. Reinhardt, Adrian M. Caulfield, Eric S. Chung, and Doug Burger.  2018.  . In   Proceedings of the Annual International Symposium on Computer Architecture. IEEE,  1\u2013 14.   Google Scholar\n [17]  .  2017.  .   IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems  37,  1 ( 2017),  35\u2013 47.   Google Scholar    Cross Ref\n [18]  .  2019.  .   ACM Transactions on Reconfigurable Technology and Systems  12,  1 ( 2019),  2.   Google Scholar    Digital Library\n [19]  .  2020.  . In   Proceedings of the 2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture. IEEE,  982\u2013 995.   Google Scholar    Digital Library\n [20]  Song Han, Junlong Kang, Huizi Mao, Yiming Hu, Xin Li, Yubin Li, Dongliang Xie, Hong Luo, Song Yao, Yu Wang, Huazhong Yang, and William J. Dally.  2017.  . In   Proceedings of the ACM/SIGDA International Symposium on Field-Programmable Gate Arrays. ACM,  75\u2013 84.   Google Scholar    Digital Library\n [21]  .  2016.  . In   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. IEEE,  770\u2013 778.   Google Scholar    Cross Ref\n  [23]  .  2019.  . In   Proceedings of the 2019 IEEE Real-Time and Embedded Technology and Applications Symposium.  29\u2013 41.  DOI:  https://doi.org/10.1109/RTAS.2019.00011   Google Scholar    Cross Ref\n  [25]  .  2019.  . In   Proceedings of the 2019 IEEE Real-Time Systems Symposium.  326\u2013 338.  DOI:  https://doi.org/10.1109/RTSS46320.2019.00037   Google Scholar    Cross Ref\n [26]  .  2018.  . In   Proceedings of the 13th  \\(\\lbrace\\)USENIX \\(\\rbrace\\) Symposium on Operating Systems Design and Implementation.  107\u2013 127.   Google Scholar\n [27]  Oliver Knodel, Paul R. Genssler, and Rainer G. Spallek. 2017. Virtualizing reconfigurable hardware to provide scalability in cloud architectures. In  International Conference on Advances in Circuits, Electronics and Micro-electronics (CENICS). 33\u201338.   Google Scholar\n [28]  .  2013.  . In   Proceedings of the 16th Design, Automation &amp; Test in Europe Conference and Exhibition.   Google Scholar\n [29]  .  2020.  .   IEEE Micro  40,  2 ( 2020),  8\u2013 16.   Google Scholar    Cross Ref\n [30]  .  2019.  . In   Proceedings of the 2019 IEEE 27th Annual International Symposium on Field-Programmable Custom Computing Machines. IEEE,  199\u2013 207.   Google Scholar    Cross Ref\n    [34]  .  2016.  . In   Proceedings of the IEEE Hot Chips Symposium. IEEE.   Google Scholar\n  [36]  Andrew Putnam, Adrian M. Caulfield, Eric S. Chung, Derek Chiou, Kypros Constantinides, John Demme, Hadi Esmaeilzadeh, Jeremy Fowers, Gopi Prashanth Gopal, Jan Gray, Michael Haselman, Scott Hauck, Stephen Heil, Amir Hormati, Joo-Young Kim, Sitaram Lanka, James Larus, Eric Peterson, Simon Pope, Aaron Smith, Jason Thong, Phillip Yi Xiao, and Doug Burger.  2014.  .   SIGARCH Computer Architecture News  42,  3 ( 2014),  13\u2013 24.   Google Scholar    Digital Library\n [37]  .  2020.  . In   Proceedings of the 57th ACM/IEEE Design Automation Conference.  1\u2013 6.  DOI:  https://doi.org/10.1109/DAC18072.2020.9218652   Google Scholar    Cross Ref\n [38]  .  2018.  . In   Proceedings of the 28th International Conference on Field Programmable Logic and Applications. IEEE,  89\u2013 897.   Google Scholar    Cross Ref\n  [40]  .  2016.  . In   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. IEEE,  2818\u2013 2826.   Google Scholar    Cross Ref\n [41]  .  2018.  . In   Proceedings of the International Conference on Field Programmable Logic and Applications. IEEE,  131\u2013 138.   Google Scholar    Cross Ref\n   [44]  .  2019.  .   IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 39, 10 ( 2019), 2668\u20132681.   Google Scholar\n [45]  .  2018.  .   IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 38, 11 ( 2018), 2072\u20132085.   Google Scholar\n [46]  .  2018.  . In   Proceedings of the International Conference on Computer-Aided Design. ACM,  56.   Google Scholar    Digital Library", "posttime": "2022-02-22 02:07:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u865a\u62df\u5316,\u4e91\u4e2d,fpga,\u56fd\u9645", "title": "\u4e00\u4e2a\u7528\u4e8e\u4e91\u4e2d\u901a\u7528DNN\u7684\u7edf\u4e00FPGA\u865a\u62df\u5316\u6846\u67b6", "title_en": "A Unified FPGA Virtualization Framework for General-Purpose DNN in the Cloud", "transed": 1, "url": "https://dl.acm.org/doi/10.1145/3480170", "via": "", "real_tags": ["\u865a\u62df\u5316", "\u4e91\u4e2d", "fpga", "\u56fd\u9645"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074527, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6a21\u7cca\u5316\u662f\u5728\u8f6f\u4ef6\u7a0b\u5e8f\u4e2d\u53d1\u73b0\u5b89\u5168\u6f0f\u6d1e\u6700\u5e7f\u6cdb\u3001\u6700\u6210\u529f\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002Fuzzing\u5de5\u5177\u4f1a\u81ea\u52a8\u968f\u673a\u751f\u6210\u7a0b\u5e8f\u7684\u8f93\u5165\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f\uff0c\u76f4\u5230\u7a0b\u5e8f\u5d29\u6e83\u3002\u8fd9\u4e9b\u5d29\u6e83\u901a\u5e38\u8868\u793a\u5b58\u5728\u53ef\u88ab\u653b\u51fb\u8005\u5229\u7528\u7684\u5b89\u5168\u6f0f\u6d1e\u3002\n\u4f46\u662f\uff0c\u60f3\u8981\u5229\u7528\u8be5\u7a0b\u5e8f\u8fdb\u884c\u653b\u51fb\u7684\u653b\u51fb\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6a21\u7cca\u6280\u672f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u80fd\u5426\u4f7f\u6211\u4eec\u7684\u7a0b\u5e8f\u96be\u4ee5\u6a21\u7cca\u5316\uff0c\u4ece\u800c\u4f7f\u653b\u51fb\u8005\u65e0\u6cd5\u68c0\u6d4b\u5230\u6211\u4eec\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u9690\u85cf\u6f0f\u6d1e\uff1f\u4e3a\u4e86\u627e\u5230\u7b54\u6848\uff0c\u672c\u6587\u7684\u4f5c\u8005\u5f00\u53d1\u4e86\u4e00\u4e9b\u7b56\u7565\uff0c\u4f7f\u5f97\u6a21\u7cca\u5316\u7a0b\u5e8f\u53d8\u5f97\u56f0\u96be\u3002\u4ed6\u4eec\u786e\u5b9a\u4e86\u73b0\u6709\u6a21\u7cca\u5316\u5de5\u5177\u6210\u529f\u5de5\u4f5c\u6240\u4f9d\u8d56\u7684\u4e00\u4e9b\u5047\u8bbe\uff0c\u7136\u540e\u5f00\u53d1\u4e86\u4e00\u4e2a\u5de5\u5177AntiFuzz\uff0c\u53ef\u7528\u4e8e\u4fee\u6539\u76ee\u6807\u7a0b\u5e8f\u5e76\u963b\u6b62\u6a21\u7cca\u5316\u3002\u4e00\u4e9b\u5047\u8bbe\u548c\u5bf9\u7b56\u5305\u62ec\uff1a\n\u6a21\u7cca\u7a0b\u5e8f\u8bd5\u56fe\u5229\u7528\u8986\u76d6\u7387\u4fe1\u606f\u751f\u6210\u53ef\u4ee5\u8de8\u8d8a\u7a0b\u5e8f\u4ee3\u7801\u6240\u6709\u90e8\u5206\u7684\u8f93\u5165\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u80fd\u8ba9\u6211\u4eec\u7684\u7a0b\u5e8f\u8fd4\u56de\u865a\u5047\u7684\u8986\u76d6\u4fe1\u606f\uff0c\u6a21\u7cca\u5316\u5c06\u53d7\u5230\u6781\u5927\u7684\u963b\u788d\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0cAntiFuzz\u4e3a\u7a0b\u5e8f\u7684\u6bcf\u4e2a\u8f93\u5165\u8fd4\u56de\u4e0d\u540c\u7684\u865a\u5047\u8986\u76d6\u4fe1\u606f\u3002\n\u6a21\u7cca\u7a0b\u5e8f\u76d1\u63a7\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u68c0\u6d4b\u7a0b\u5e8f\u5d29\u6e83\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0cAntiFuzz\u5411\u64cd\u4f5c\u7cfb\u7edf\u53d1\u9001\u865a\u5047\u7684\u5d29\u6e83\u4fe1\u53f7\u3002\n\u6a21\u7cca\u7a0b\u5e8f\u9700\u8981\u6bcf\u79d2\u6267\u884c\u591a\u6b21\u7a0b\u5e8f\u624d\u80fd\u6709\u6548\u8fd0\u884c\u3002\u7531\u4e8efuzzers\u751f\u6210\u7684\u5927\u591a\u6570\u8f93\u5165\u90fd\u662f\u9519\u8bef\u7684\uff0c\u56e0\u6b64\u5f53\u53cd\u6a21\u7cca\u7a0b\u5e8f\u68c0\u6d4b\u5230\u8fd9\u4e9b\u8f93\u5165\u65f6\uff0c\u5b83\u4f1a\u51cf\u6162\u7a0b\u5e8f\u7684\u901f\u5ea6\u3002\u867d\u7136\u6b63\u5e38\u7528\u6237\u4e0d\u4f1a\u6ce8\u610f\u5230\u8fd9\u79cd\u51cf\u901f\uff0c\u4f46\u5b83\u4f1a\u4e25\u91cd\u963b\u788dfuzzer\u7684\u9ad8\u6548\u8fd0\u884c\u3002\n\u4e3a\u4e86\u770b\u770b\u4ed6\u4eec\u7684\u65b9\u6cd5\u662f\u5426\u771f\u7684\u6709\u6548\uff0c\u4f5c\u8005\u4f7f\u7528\u4e86\u56db\u79cd\u4e0d\u540c\u7684\u6700\u5148\u8fdb\u7684\u6a21\u7cca\u5668\u6765\u6a21\u7cca\u4e00\u7ec4\u5305\u542b\u51e0\u4e2abug\u7684\u76ee\u6807\u7a0b\u5e8f\u3002\u4ed6\u4eec\u7684\u7ed3\u679c\u8868\u660e\uff0c\u5728\u91c7\u53d6\u6240\u6709\u5e94\u5bf9\u63aa\u65bd\u65f6\uff0cAntiFuzz\u6210\u529f\u5730\u963b\u6b62\u4e86\u4e4b\u524d\u68c0\u6d4b\u5230\u7684\u6240\u6709\u6f0f\u6d1e\u7684\u68c0\u6d4b\u3002\n\u6211\u559c\u6b22\u4ed6\u4eec\u963b\u6b62\u6a21\u7cca\u5316\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u7ed3\u5408\u4e86\u591a\u79cd\u63aa\u65bd\u3002\u7136\u800c\uff0c\u901a\u8fc7\u4f7f\u516c\u5f00\u90e8\u7f72\u548c\u53ef\u8bbf\u95ee\u7684\u7a0b\u5e8f\u7248\u672c\u62b5\u6297\u6a21\u7cca\u5316\uff0c\u8fd9\u5c06\u4f7f\u6a21\u7cca\u5316\u64cd\u4f5c\u4ec5\u9650\u4e8e\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\uff0c\u4ece\u800c\u59a8\u788d\u540c\u6837\u4f9d\u8d56\u6a21\u7cca\u5316\u7684\u5b89\u5168\u7814\u7a76\u4eba\u5458\u548c\u767d\u5e3d\u9ed1\u5ba2\u68c0\u6d4b\u5b89\u5168\u6f0f\u6d1e\u3002\nGulerantifuzzz2019 Emre G\u00fcler\u3001Cornelius Aschermann\u3001Ali Abbasi\u548cThorsten Holz:&#34\uff1b\u53cd\u6a21\u7cca\uff1a\u963b\u788d\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6a21\u7cca\u5ba1\u8ba1\uff1b\u30022019\u5e74USENIX\u5b89\u5168\u7814\u8ba8\u4f1a\u3002\n\u8ba1\u7b97\u673a\u5b89\u5168\u4e2d\u7684\u4e00\u79cd\u901a\u7528\u9632\u5fa1\u7b56\u7565\u662f\u589e\u52a0\u6210\u529f\u653b\u51fb\u7684\u8ba1\u7b97\u8d44\u6e90\u548c\u4eba\u529b\u6210\u672c\u3002\u5728\u4e8c\u8fdb\u5236\u5b89\u5168\u9886\u57df\uff0c\u8fd9\u901a\u5e38\u662f\u901a\u8fc7\u4f7f\u7528\u6a21\u7cca\u5904\u7406\u65b9\u6cd5\u6765\u963b\u6b62\u9006\u5411\u5de5\u7a0b\u548c\u641c\u7d22\u8f6f\u4ef6\u6f0f\u6d1e\u6765\u5b9e\u73b0\u7684\u3002\u7136\u800c\uff0c\u6700\u8fd1\u5728\u81ea\u52a8\u9519\u8bef\u67e5\u627e\u65b9\u9762\u7684\u8d8b\u52bf\u6539\u53d8\u4e86\u64cd\u4f5c\u65b9\u5f0f\u3002\u5982\u4eca\uff0c\u901a\u8fc7\u5404\u79cd\u6a21\u7cca\u5de5\u5177\u53d1\u73b0bug\u662f\u5f88\u5e38\u89c1\u7684\u3002\u7531\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u81ea\u52a8\u5316\u548c\u5bf9\u66f4\u597d\u7684\u6a21\u7cca\u7b56\u7565\u7684\u7814\u7a76\uff0c\u5bf9\u6570\u767e\u4e2a\u76ee\u6807\u8fdb\u884c\u5927\u89c4\u6a21\u3001\u62d6\u7f51\u5f0f\u6a21\u7cca\u53d8\u5f97\u53ef\u884c\u3002\u6b63\u5982\u6211\u4eec\u6240\u5c55\u793a\u7684\uff0c\u5f53\u524d\u7684\u6a21\u7cca\u5904\u7406\u6280\u672f\u65e8\u5728\u589e\u52a0\u4eba\u7c7b\u7406\u89e3\u7684\u6210\u672c\uff0c\u5bf9\u51cf\u7f13\u6a21\u7cca\u5316\u51e0\u4e4e\u6ca1\u6709\u4f5c\u7528\u3002\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u51e0\u79cd\u6280\u672f\uff0c\u4ee5\u4fdd\u62a4\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\u4e0d\u53d7\u57fa\u4e8e\u6a21\u7cca\u3001\u7b26\u53f7/\u534f\u540c\u6267\u884c\u548c\u6c61\u67d3\u8f85\u52a9\u6a21\u7cca\uff08\u901a\u5e38\u79f0\u4e3a\u6df7\u5408\u6a21\u7cca\uff09\u7684\u81ea\u52a8\u7f3a\u9677\u53d1\u73b0\u65b9\u6cd5\u7684\u5206\u6790\u7684\u5f71\u54cd\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u5bf9\u7f3a\u9677\u53d1\u73b0\u5de5\u5177\u7684\u57fa\u672c\u5047\u8bbe\u8fdb\u884c\u7cfb\u7edf\u5206\u6790\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u5047\u8bbe\u5236\u5b9a\u4e00\u822c\u5bf9\u7b56\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u6280\u672f\u4e0d\u662f\u9488\u5bf9\u6a21\u7cca\u5de5\u5177\u7684\u7279\u5b9a\u5b9e\u73b0\u800c\u8bbe\u8ba1\u7684\uff0c\u800c\u662f\u9488\u5bf9bug\u67e5\u627e\u5de5\u5177\u5fc5\u987b\u4f9d\u8d56\u7684\u4e00\u822c\u5047\u8bbe\u3002\u6211\u4eec\u7684\u8bc4\u4f30\u8868\u660e\uff0c\u8fd9\u4e9b\u6280\u672f\u6709\u6548\u5730\u963b\u6b62\u4e86\u6a21\u7cca\u5ba1\u8ba1\uff0c\u540c\u65f6\u5e26\u6765\u4e86\u5fae\u4e0d\u8db3\u9053\u7684\u6027\u80fd\u5f00\u9500\u3002\u6b63\u5982\u6a21\u7cca\u5904\u7406\u6280\u672f\u589e\u52a0\u4e86\u53d1\u73b0\u6f0f\u6d1e\u6240\u9700\u7684\u4eba\u529b\uff0c\u6211\u4eec\u7684\u6280\u672f\u4e5f\u4f7f\u5f97\u57fa\u4e8e\u6a21\u7cca\u5904\u7406\u7684\u81ea\u52a8\u5316\u65b9\u6cd5\u65e0\u6548\u3002", "note_en": "Fuzzing is one of the most widely used and successful methods of finding security vulnerabilities in software programs. Fuzzing tools automatically and randomly generates input to a program, and run the program using these inputs until it crashes. These crashes usually indicate the presence of a security vulnerability that can be exploited by an attacker.\n  But fuzzing can also be used by attackers who want to exploit the program. Can we therefore make our program difficult to fuzz so an attacker can not detect any hidden vulnerability in our program? To find out, the authors of this paper developed strategies that make fuzzing a program difficult. They identified some assumptions that existing fuzzing tools depend on to work successfully then developed a tool, AntiFuzz, that can be used to modify the target program and impede fuzzing. Some assumptions and counter-measures include:\n  Fuzzers try to generate inputs that can transverse all parts of the program code using coverage information. Hence, if we can make our program return false coverage information, fuzzing would be significantly impeded. To achieve this, AntiFuzz returns different, fake coverage information for each input to the program.\n  Fuzzers monitor the operating system in order to detect program crashes. To counter this, AntiFuzz sends fake crash signals to the operating systems.\n  Fuzzers need to execute the program many times per second in order to operate efficiently. Since most of the input generated by the fuzzers is malformed, AntiFuzz slows the program down when it detects such inputs.\tWhile this slowdown would not be noticed by a normal user, it can significantly impede the efficient operation of the fuzzer.\n  To see if their approach actually worked, the authors used four different state-of-the-art fuzzers to fuzz a set of target programs which contained several bugs. Their results show that AntiFuzz successfully prevented the detection of all bugs previously detected when all the counter-measures were applied.\n  I love their approach to impeding fuzzing because it combines multiple measures. However, by making the publicly deployed and accessible version of a program resistant to fuzzing, this would restrict the fuzzing operation to only the program developers, impeding the detection of security vulnerabilities by security researchers and white hat hackers who also rely on fuzzing.\n GulerAntifuzz2019 Emre G\u00fcler, Cornelius Aschermann, Ali Abbasi, and Thorsten Holz: &#34; AntiFuzz: Impeding Fuzzing Audits of Binary Executables&#34;.  2019 USENIX Security Symposium.\n A general defense strategy in computer security is to increase the cost of successful attacks in both computational resources as well as human time. In the area of binary security, this is commonly done by using obfuscation methods to hinder reverse engineering and the search for software vulnerabilities. However, recent trends in automated bug finding changed the modus operandi. Nowadays it is very common for bugs to be found by various fuzzing tools. Due to ever-increasing amounts of automation and research on better fuzzing strategies, large-scale, dragnet-style fuzzing of many hundreds of targets becomes viable. As we show, current obfuscation techniques are aimed at increasing the cost of human understanding and do little to slow down fuzzing.\n  In this paper, we introduce several techniques to protect a binary executable against an analysis with automated bug f inding approaches that are based on fuzzing, symbolic/concolic execution, and taint-assisted fuzzing (commonly known as hybrid fuzzing). More specifically, we perform a systematic analysis of the fundamental assumptions of bug finding tools and develop general countermeasures for each assumption. Note that these techniques are not designed to target specific implementations of fuzzing tools, but address general assumptions that bug finding tools necessarily depend on. Our evaluation demonstrates that these techniques effectively impede fuzzing audits, while introducing a negligible performance overhead. Just as obfuscation techniques increase the amount of human labor needed to find a vulnerability, our techniques render automated fuzzing-based approaches futile.", "posttime": "2022-02-22 02:05:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8c\u8fdb\u5236,impeding,\u7a0b\u5e8f", "title": "\u53cd\u6a21\u7cca\uff1a\u963b\u788d\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6a21\u7cca\u5ba1\u8ba1", "title_en": "AntiFuzz: Impeding Fuzzing Audits of Binary Executables", "transed": 1, "url": "https://neverworkintheory.org/2022/02/21/antifuzz.html", "via": "", "real_tags": ["\u4e8c\u8fdb\u5236", "impeding", "\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074526, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GCC/gcov\u4ee3\u7801\u8986\u76d6\u7387\u6570\u636e\u4ece\u5b9e\u9645\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u63d0\u53d6\uff0c\u65e0\u9700\u6587\u4ef6\u7cfb\u7edf\u3001\u64cd\u4f5c\u7cfb\u7edf\u6216\u6807\u51c6C\u5e93\u3002\n\u6709\u5173\u6982\u8ff0\uff0c\u8bf7\u53c2\u9605repo\u4e2d\u7684PDF\u5e7b\u706f\u7247\u6587\u4ef6\uff0c\u6709\u5173\u5d4c\u5165\u5f0f\u7cfb\u7edf\u81ea\u5b9a\u4e49\u9009\u9879\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605github wiki\u3002\u53e6\u8bf7\u53c2\u89c1repo\u4e2d\u7684\u7b80\u5355Linux\u53ef\u7f16\u8bd1\u793a\u4f8b\u3002\n#\u5305\u62ec&#34\uff1bgcov_\u516c\u5171\u3002h&#34\uff1b\u2026//\u5e0c\u671b\u5c3d\u65e9\u8c03\u7528\u5b83\uff0c//\u4f46\u5728//\u8bbe\u7f6e\u9677\u9631\u8868\u548c\u7cfb\u7edf\u5185\u5bb9\u4e4b\u524d\u65e0\u6cd5\u8c03\u7528\u5b83//\u53ef\u80fd\u5e76\u975e\u6240\u6709\u7cfb\u7edf\u90fd\u9700\u8981\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u542f\u52a8\u4ee3\u7801_gcov_call_constructors\uff08\uff09\uff1b\u2026\u6848\u4f8b9://\u6211\u7684\u7cfb\u7edf\u4e2d\u7684\u547d\u4ee4_gcov_exit\uff08\uff09\uff1b//\u8f6c\u50a8\u6570\u636e\u4e2d\u65ad\uff1b\u2026", "note_en": "GCC/gcov code coverage data extraction from the actual embedded system, without requiring a file system, or an operating system, or standard C libraries.\n See the PDF slide file in the repo for an overview, and see the github wiki for more information about customization options for your embedded system. Also see the simple Linux-compilable example in the repo.\n  #include &#34;gcov_public.h&#34;\u2026\u00a0 \u00a0 \u00a0 \u00a0 // want this as early as possible,\u00a0 \u00a0 \u00a0 \u00a0 // but cannot call this until after\u00a0 \u00a0 \u00a0 \u00a0 // the trap table and system stuff are set up // may not be needed in all systems, depending on startup code\u00a0 \u00a0 \u00a0 \u00a0 __gcov_call_constructors();\u2026\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 case 9: // a command in my system\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 __gcov_exit(); // dumps the data break;\u2026", "posttime": "2022-02-22 02:04:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,gcc,gcov", "title": "\u4ece\u76ee\u6807\u4e2d\u63d0\u53d6GCC/gcov\u4ee3\u7801\u8986\u76d6\u7387\u6570\u636e\uff0c\u65e0\u9700FS\u3001OS\u6216Libc", "title_en": "GCC/gcov code coverage data extraction from the target, without FS, OS, or Libc", "transed": 1, "url": "https://github.com/nasa-jpl/embedded-gcov", "via": "", "real_tags": ["\u4ee3\u7801", "gcc", "gcov"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074525, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u4f9d\u8d56\u60a8\u7684\u652f\u6301\uff1a\u672c\u7f51\u7ad9\u4e3b\u8981\u7531\u5e7f\u544a\u652f\u6301\u3002\u5728\u8fc7\u53bb\u768416\u5e74\u91cc\uff0c\u5e7f\u544a\u8ba9\u8fd9\u4e2a\u7f51\u7ad9\u5f97\u4ee5\u7ef4\u6301\u3002\u6211\u4eec\u5c3d\u6700\u5927\u52aa\u529b\u786e\u4fdd\u53ea\u663e\u793a\u5e72\u51c0\u3001\u76f8\u5173\u7684\u5e7f\u544a\uff0c\u5f53\u53d1\u73b0\u4efb\u4f55\u6076\u610f\u5e7f\u544a\u65f6\uff0c\u6211\u4eec\u4f1a\u5c3d\u5feb\u5c06\u5176\u5220\u9664\u3002\u5982\u679c\u60a8\u60f3\u67e5\u770b\u6ca1\u6709\u5e7f\u544a\u7684\u7f51\u7ad9\uff0c\u540c\u65f6\u4ecd\u7136\u652f\u6301\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u8bf7\u8003\u8651\u6211\u4eec\u7684\u5e7f\u544a\u514d\u8d39PuroNox\u6ea2\u4ef7\u3002\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8d1d\u5b9d\u8003\u8651\u5c0f\u8d39\u3002\u867d\u7136PostgreSQL\u901a\u8fc7\u5176TOAST\u5b58\u50a8\u652f\u6301\u538b\u7f29\uff0c\u5e76\u4e14\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u4e2d\u4e3a\u5176\u5efa\u7acb\u4e86LZ4\u538b\u7f29\u652f\u6301\uff0c\u4ee5\u53ca\u538b\u7f29WAL\u3001\u5907\u4efd\u538b\u7f29\u548c\u5176\u4ed6\u7528\u9014\uff0c\u4f46PostgreSQL\u5f00\u53d1\u4eba\u5458\u6b63\u51c6\u5907\u901a\u8fc7Zstd\u652f\u6301\u8fdb\u4e00\u6b65\u6269\u5c55\u5176\u538b\u7f29\u80fd\u529b\u3002", "note_en": "We Rely On Your Support: This site is primarily supported by advertisements.  Ads are what have allowed this site to be maintained for the past 16 years. We do our best to ensure only clean, relevant ads are shown, when any nasty ads are detected, we work to remove them ASAP. If you would like to view the site without ads while still supporting our work,  please consider  our ad-free Phoronix Premium. You can also consider  a tip via PayPal.   While PostgreSQL has supported compression with its TOAST storage and over the past year has built-up LZ4 compression support for it along with compressing the WAL, backup compression, and other usage, PostgreSQL developers are preparing to further extend their compression capabiities with Zstd support.\r   This week started a  discussion among PostgreSQL developers for adding Zstd as a supported compression algorithm by this widely-used, open-source database server.\r   That discussion turned out favorably and already with  PostgreSQL Git there is now support for building PostgreSQL with Zstd included.\r    While this adds the  --with-zstd build-time option and goes ahead and allows building with the Zstd compression library, at the moment this doesn&#39;t enable any actual usage of Zstd within PostgreSQL. Follow-up commits are expected soon to begin allowing PostgreSQL to take advantage of the speed Zstandard compression capabilities.\r   By the time PostgreSQL 15 rolls out it looks like it will have Zstd support buttoned up to complement all the LZ4 possibilities found currently with PostgreSQL 14. It&#39;s great seeing all the adoption around Zstd thanks to its good compression ratio while delivering very speedy decompression (and compression) for this dual licensed (BSD and GPLv2) Facebook-baced project.", "posttime": "2022-02-22 02:03:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,\u7814\u7a76,begins,\u5e7f\u544a", "title": "PostgreSQL\u5f00\u59cb\u7814\u7a76Zstd\u538b\u7f29\u652f\u6301", "title_en": "PostgreSQL Begins Working on Zstd Compression Support", "transed": 1, "url": "https://www.phoronix.com/scan.php?page=news_item&px=PostgreSQL-ZStd-Start", "via": "", "real_tags": ["\u7814\u7a76", "begins", "\u5e7f\u544a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074524, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u591a\u5c11\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u79bb\u5f00\u4e00\u4e2a\u9879\u76ee\u624d\u80fd\u4f7f\u5f00\u53d1\u505c\u6b62\uff1f\u8fd9\u4e2a\u6570\u5b57\u5c31\u662f\u516c\u8f66\u7cfb\u6570\u3002\u5df4\u58eb\u56e0\u7d20\u80cc\u540e\u4ee4\u4eba\u6bdb\u9aa8\u609a\u7136\u7684\u542b\u4e49\u662f\uff0c\u9700\u8981\u88ab\u5df4\u58eb\u649e\u5230\u624d\u80fd\u505c\u6b62\u5f00\u53d1\u7684\u5f00\u53d1\u5546\u6570\u91cf\uff08\u4f46\u8003\u8651\u5230\u4f1a\u5458\u4e2d\u4e86\u5f69\u7968\uff0c\u901a\u5e38\u4f1a\u66f4\u8f7b\u677e\uff0c\u800c\u4e0d\u662f\u4efb\u4f55\u4e86\u89e3\u7edf\u8ba1\u6570\u636e\u7684\u4eba\u90fd\u4f1a\u771f\u6b63\u4e2d\u5f69\u7968\uff09\u3002\n34\u5c81\uff1b\u603b\u7ebf\u7cfb\u6570&#34\uff1b\u662f\u5728\u9879\u76ee\u56e0\u7f3a\u4e4f\u77e5\u8bc6\u6216\u79f0\u804c\u4eba\u5458\u800c\u6682\u505c\u4e4b\u524d\uff0c\u5fc5\u987b\u7a81\u7136\u4ece\u9879\u76ee\u4e2d\u6d88\u5931\u7684\u56e2\u961f\u6210\u5458\u7684\u6700\u5c0f\u6570\u91cf\u3002\n\u63a8\u8bba\uff1a\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u9009\u62e9\u901a\u7528\u6846\u67b6\uff08\u53c2\u89c1\uff1aRails\u548c\u5f00\u53d1\u8005\u7f51\u7edc\u6548\u5e94\u4e0a\u5e02\uff09\n\u8ba9\u6350\u6b3e\u53d8\u5f97\u5bb9\u6613\u3002\u8bb8\u591a\u4fc3\u8fdb\u5f00\u6e90\u9879\u76ee\u53d1\u5c55\u7684\u5efa\u8bae\u90fd\u53ef\u4ee5\u5e94\u7528\u4e8e\u7b80\u5316\u5185\u90e8\u9879\u76ee\u7684\u5165\u804c\u3002\n\u5b83&#39\uff1b\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u5230\uff0c\u8bb8\u591a\u5458\u5de5\u6b63\u5728\u89e3\u51b3\u964d\u4f4e\u516c\u4ea4\u8f66\u7cfb\u6570\u7684\u95ee\u9898\uff08\u6b63\u786e\u6216\u9519\u8bef\uff09\u3002\u8fd9\u91cc&#39\uff1b\u6709\u4e00\u4e9b\u504f\u89c1\u9700\u8981\u7ea0\u6b63\uff1a\n\u5f00\u53d1\u4eba\u5458\u503e\u5411\u4e8e\u4f7f\u7528\u65b0\u7684\u3001\u4ee4\u4eba\u5174\u594b\u7684\u6846\u67b6\u6765\u57f9\u517b\u4ed6\u4eec\u7684\u6280\u80fd\u548c\u586b\u5145\u4ed6\u4eec\u7684\u7b80\u5386\u3002\u5bfb\u627e\u673a\u4f1a\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u5728\u67b6\u6784\u9009\u62e9\u4e4b\u5916\u6210\u957f\u3002\n\u5f00\u53d1\u4eba\u5458\u4e0d\u559c\u6b22\u7f16\u5199\u6587\u6863\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6ca1\u6709\u6839\u636e\u6587\u6863\u8fdb\u884c\u8bc4\u4f30\u3002\u4f7f\u6c9f\u901a\u6210\u4e3a\u5de5\u7a0b\u6587\u5316\u7684\u4e00\u9879\u91cd\u8981\u539f\u5219\u3002\n\u5f00\u53d1\u4eba\u5458\u5bf9\u5bc6\u96c6\u7684\u4ee3\u7801\u5ba1\u67e5\u6709\u504f\u89c1\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u51cf\u6162\u66f4\u6539\u7684\u901f\u5ea6\uff0c\u5e76\u4e14\u5f00\u53d1\u4eba\u5458\u4f1a\u6839\u636e\u66f4\u6539\u8fdb\u884c\u8bc4\u4f30\uff08\u6269\u5c55\u6765\u8bf4\uff0c\u5c31\u662f\u4ed6\u4eec\u7684\u901f\u5ea6\uff09\u3002\u4fdd\u6301\u9ad8\u5ea6\u4e00\u81f4\u3002\n\u5f00\u53d1\u4eba\u5458\u503e\u5411\u4e8e\u81ea\u52a8\u5316\u3002\u8fd9\u901a\u5e38\u662f\u597d\u7684\uff0c\u4f46\u8fc7\u5ea6\u4f18\u5316\u4f1a\u5bfc\u81f4\u8106\u5f31\u7684\u7cfb\u7edf\u3002\u81ea\u52a8\u5316\u53ef\u80fd\u662f\u4e00\u4e2a\u8d1f\u62c5\uff08\u96c6\u6210\u6d4b\u8bd5\u592a\u957f\uff09", "note_en": "How many software developers would have to leave a project to make development come to a halt? That number is the  bus factor. The macabre meaning behind the  bus factor is the number of developers that would need to get hit by a bus to halt development (but it&#39;s often lighter to think about members winning the lottery, not that anyone who knows about statistics would actually play the lottery).\n The &#34;bus factor&#34; is the minimum number of team members that have to suddenly disappear from a project before the project stalls due to lack of knowledgeable or competent personnel.\n  Corollary: pick common frameworks if you can (see:  Getting to Market with Rails and  Developer Network Effects)\n  Make it dead easy to contribute. Many of the suggestions to grow your open source project can be applied to making onboarding easier for internal projects.\n It&#39;s important to note that many employees are solving to reduce bus factor (rightly or wrongly). Here&#39;s some biases to correct for:\n Developers are biased towards new and exciting frameworks to build their skills and pad their resume. Look for opportunities to let developers grow that are outside architecture choices.\n Developers are biased against writing documentation because they are not evaluated on documentation. Make communication a key tenet of engineering culture.\n Developers are biased against intensive code reviews because they slow velocity of changes, and developers are evaluated on changes (and by extension, their velocity). Keep the bar high and consistent.\n Developers are biased towards automation. This is generally good, but over-optimization can lead fragile systems. Automation can be a burden ( your integration tests are too long)", "posttime": "2022-02-22 02:01:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u8f6f\u4ef6,\u8f6f\u4ef6\u5f00\u53d1,bus,\u5f00\u53d1\u4eba\u5458", "title": "\u589e\u52a0\u8f6f\u4ef6\u5f00\u53d1\u56e2\u961f\u4e2d\u7684\u603b\u7ebf\u56e0\u7d20", "title_en": "Increasing Bus Factor in Software Development Teams", "transed": 1, "url": "https://matt-rickard.com/reducing-bus-factor/", "via": "", "real_tags": ["\u5f00\u53d1", "\u8f6f\u4ef6", "\u8f6f\u4ef6\u5f00\u53d1", "bus", "\u5f00\u53d1\u4eba\u5458"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074522, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "12\u6708\uff0c43\u5c81\u7684\u535a\u58eb\u7814\u7a76\u4eba\u5458\u5c3c\u5a1c\u00b7\u7b80\u00b7\u5e15\u7279\u5c14\u6234\u4e0a\u8033\u673a\uff0c\u8fdb\u5165\u6885\u5854\u7684\u865a\u62df\u4e16\u754c\uff0c\u770b\u770b\u90a3\u5929\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u201c\u5728\u90a3\u91cc\u7684\u51e0\u79d2\u949f\u5185\uff0c\u6211\u8eab\u8fb9\u5c31\u6709\u4e09\u4e2a\u5316\u8eab\uff0c\u201d\u5979\u8bf4\u3002\u201c\u7a81\u7136\u4ed6\u4eec\u5f00\u59cb\u81ea\u62cd\u2026\u2026\u4e00\u5f00\u59cb\u6211\u770b\u4e0d\u51fa\u4ed6\u4eec\u5728\u6478\u963f\u51e1\u8fbe\u7684\u4e0a\u8eab\u2026\u2026\u4ed6\u4eec\u5728\u5bf9\u6211\u558a\u9053\uff0c\u2018\u4e0d\u8981\u5047\u88c5\u4f60\u4e0d\u559c\u6b22\uff0c\u8fd9\u5c31\u662f\u4f60\u6765\u7684\u76ee\u7684\u3002\u2019\u201d\n\u4e8b\u4ef6\u53d1\u751f\u5728metaverse\uff0c\u8fd9\u662f\u4e00\u4e2a\u901a\u8fc7\u53ef\u7a7f\u6234\u6280\u672f\u8fdb\u5165\u7684\u6c89\u6d78\u5f0f\u865a\u62df\u4e16\u754c\uff0c\u79d1\u6280\u56e2\u4f53\u5e0c\u671b\u6211\u4eec\u5728\u672a\u6765\u82b1\u66f4\u591a\u7684\u65f6\u95f4\u5728\u5176\u4e2d\uff0c\u65e0\u8bba\u662f\u73a9\u8fd8\u662f\u5de5\u4f5c\uff0c\u90fd\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\n\u7136\u800c\uff0c\u5728\u5c31\u4e1a\u6cd5\u65b9\u9762\uff0c\u5c1a\u4e0d\u6e05\u695a\u4ec0\u4e48\u6837\u7684\u53c2\u4e0e\u89c4\u5219\u9002\u7528\u4e8e\u666e\u904d\u7684\u6570\u5b57\u9886\u57df\u3002\u5728\u5143\u5b87\u5b99\u4e2d\u4ec0\u4e48\u7b97\u9a9a\u6270\uff1f\u5316\u8eab\u4f1a\u53d7\u5230\u6b67\u89c6\u5417\uff0c\u6216\u8005\u66f4\u7cdf\uff1f\u56fd\u5bb6\u7acb\u6cd5\u4f1a\u4fdd\u62a4\u5458\u5de5\uff0c\u8fd8\u662f\u5728metaverse\u5de5\u4f5c\u9700\u8981\u4e00\u672c\u65b0\u7684\u89c4\u5219\u624b\u518c\uff1f\n\u7531\u4e8eCVID2019\u51a0\u72b6\u75c5\u6bd2\u75be\u75c5\uff0c\u5168\u7403\u52b3\u52a8\u529b\u5df2\u7ecf\u4e60\u60ef\u4e8e\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u800c\u516c\u53f8\u5df2\u7ecf\u5f00\u59cb\u5728\u5de5\u4f5c\u573a\u6240\u8fdb\u884c\u865a\u62df\u73b0\u5b9e\u5b9e\u9a8c\u3002\u4f8b\u5982\uff0c\u5e0c\u5c14\u987f\u9152\u5e97\u96c6\u56e2\uff08Hilton hotel group\uff09\u5c31\u5229\u7528\u5b83\u6765\u57f9\u8bad\u5458\u5de5\u5982\u4f55\u5904\u7406\u5ba2\u4eba\u3002\u53bb\u5e74\uff0c\u5fae\u8f6f\uff08Microsoft\uff09\u5f00\u59cb\u63a8\u51fa\u4e00\u9879\u8ba1\u5212\uff0c\u4f7f\u5458\u5de5\u80fd\u591f\u4ee5\u5316\u8eab\u7684\u8eab\u4efd\u51fa\u73b0\u5728\u5176\u56e2\u961f\u534f\u4f5c\u8f6f\u4ef6\u4e2d\uff0c\u8fd9\u662f\u5b83\u5411\u6df7\u5408\u5de5\u4f5c\u7684\u7269\u7406\u4e16\u754c\u548c\u6570\u5b57\u4e16\u754c\u8fc8\u51fa\u7684\u7b2c\u4e00\u6b65\u3002\n\u4f46metaverse\u5c06\u6df7\u5408\u5de5\u4f5c\u63a8\u8fdb\u4e86\u4e00\u6b65\uff0c\u5e26\u6765\u4e86\u4e00\u7cfb\u5217\u68d8\u624b\u7684\u5c31\u4e1a\u6cd5\u95ee\u9898\u3002\u8fd9\u4e9b\u6311\u6218\u4ece\u5b9e\u9645\u6311\u6218\uff08\u5982\u5458\u5de5\u5982\u4f55\u83b7\u5f97\u62a5\u916c\uff09\u5230\u66f4\u5177\u54f2\u7406\u7684\u6311\u6218\uff08\u5982\u5316\u8eab\u662f\u5426\u5177\u6709\u6cd5\u5f8b\u8eab\u4efd\uff09\u3002\u897f\u8499\u65af\u5f8b\u5e08\u4e8b\u52a1\u6240\uff08Simmons&amp\uff1b\u897f\u8499\u65af\u3002\n\u5de5\u4f5c\u7684\u7269\u8d28\u4e16\u754c\u7531\u56fd\u5bb6\u6cd5\u5f8b\u6846\u67b6\u7ba1\u7406\u3002\u4f8b\u5982\uff0c\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\uff0c\u5de5\u4eba\u53ef\u4ee5\u5728\u6ca1\u6709\u901a\u77e5\u7684\u60c5\u51b5\u4e0b\u88ab\u89e3\u96c7\uff0c\u800c\u5728\u8377\u5170\uff0c\u6ca1\u6709\u6cd5\u9662\u6216\u8377\u5170\u804c\u4e1a\u4ecb\u7ecd\u6240\u7684\u6279\u51c6\uff0c\u901a\u5e38\u4e0d\u80fd\u89e3\u96c7\u5458\u5de5\u3002\u7136\u800c\uff0c\u5728metaverse\u4e2d\uff0c\u9002\u7528\u7684\u56fd\u5bb6\u5c31\u4e1a\u6cd5\u5e76\u4e0d\u660e\u663e\u3002\nGowling WLG\u7684\u5408\u4f19\u4eba\u4e54\u7eb3\u68ee\u00b7\u5f20\u4f2f\u4f26\uff08Jonathan Chamberlain\uff09\u8bf4\uff1a\u201c\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0cmetaverse\u53ea\u662f\u53e6\u4e00\u4e2a\u5e73\u53f0\u3002\u65e0\u8bba\u5e73\u53f0\u662f\u4ec0\u4e48\uff0c\u96c7\u4f63\u5173\u7cfb\u7684\u57fa\u672c\u539f\u5219\u90fd\u662f\u6b63\u786e\u7684\u3002\u201d\u3002\u201c\u53ef\u4ee5\u8bf4\uff0c\u5728\u56e2\u961f\u548cZoom\u7684\u65f6\u4ee3\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u5df2\u7ecf\u8fdb\u5165\u4e86\u8fd9\u4e2a\u65f6\u4ee3\u3002\n\u201c\u4f46\u76f4\u5230\u6700\u8fd1\uff0c\u96c7\u4f63\u5173\u7cfb\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8fd8\u662f\u5730\u57df\u56fa\u5b9a\u7684\u2026\u2026\u96c7\u4f63\u6cd5\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4ecd\u7136\u662f\u9488\u5bf9\u5177\u4f53\u56fd\u5bb6\u6216\u5dde\u7684\u3002\u5373\u4f7f\u4f60\u6216\u4f60\u7684\u8001\u677f\u60f3\u9000\u51fa\u4f60\u56fd\u5bb6\u7684\u6cd5\u5b9a\u5c31\u4e1a\u4fdd\u62a4\u5236\u5ea6\uff0c\u4f60\u901a\u5e38\u4e5f\u4e0d\u80fd\u9009\u62e9\u9000\u51fa\u3002\u201d\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd8\u6ca1\u6709\u4eba\u51b3\u5b9a\uff0c\u5bf9\u4e8e\u5206\u6563\u7684\u6570\u5b57\u5de5\u4f5c\u533a\uff0c\u5e94\u8be5\u91c7\u7528\u4ec0\u4e48\u6837\u7684\u6cd5\u5f8b\u6846\u67b6\u3002\u5728\u8fd9\u4e2a\u5de5\u4f5c\u533a\u4e2d\uff0c\u5de5\u4f5c\u4eba\u5458\u53ef\u80fd\u662f\u6d41\u52a8\u7684\uff0c\u5728\u5730\u7406\u4e0a\u5f7c\u6b64\u4e4b\u95f4\u4ee5\u53ca\u4ed6\u4eec\u5de5\u4f5c\u7684\u516c\u53f8\u4e4b\u95f4\u53ef\u80fd\u4e0d\u5b58\u5728\u8054\u7cfb\u3002\n\u7ebd\u66fc\u8bf4\uff1a\u201cmetaverse\u6ca1\u6709\u56fd\u754c\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u2018\u4e0e\u4f5c\u54c1\u6709\u66f4\u5927\u8054\u7cfb\u7684\u53f8\u6cd5\u7ba1\u8f96\u533a\u5728\u54ea\u91cc\uff1f\u2019\u201d\u3002\u201c\u8fd9\u53ef\u80fd\u662f\u62e5\u6709\u5e73\u53f0\u7684\u516c\u53f8\u6240\u5728\u56fd\u7684\u6cd5\u5f8b\u2026\u2026\u53ef\u80fd\u662f\u670d\u52a1\u5668\u6240\u5728\u56fd\u7684\u6cd5\u5f8b\uff0c\u4e5f\u53ef\u80fd\u662f\u5458\u5de5\u6240\u5728\u56fd\u7684\u6cd5\u5f8b\u2026\u2026\u6ca1\u6709\u4eba\u5c31\u6b64\u8fbe\u6210\u534f\u8bae\u3002\u201d\n\u8003\u8651\u5230Meta\u7b49\u516c\u53f8\u5e0c\u671b\u6536\u96c6\u548c\u8d5a\u94b1\u7684\u4e2a\u4eba\u6570\u636e\u7684\u89c4\u6a21\uff0c\u5458\u5de5\u53c2\u4e0emetaverse\u4e5f\u63d0\u51fa\u4e86\u6709\u5173\u9690\u79c1\u548c\u6570\u636e\u5b89\u5168\u7684\u91cd\u8981\u95ee\u9898\u3002\n\u82f1\u56fd\u300a\u91d1\u878d\u65f6\u62a5\u300b1\u6708\u4efd\u7684\u4e00\u9879\u8c03\u67e5\u5206\u6790\u4e86Meta\u5411\u7f8e\u56fd\u4e13\u5229\u5546\u6807\u5c40\u63d0\u4ea4\u7684\u6570\u767e\u4efd\u7533\u8bf7\u3002\u867d\u7136\u8fd9\u4e9b\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u9879\u6280\u672f\u5c06\u88ab\u5f00\u53d1\u51fa\u6765\uff0c\u4f46\u5b83\u5f3a\u8c03\u4e86Meta\u6536\u96c6\u5927\u91cf\u751f\u7269\u7279\u5f81\u6570\u636e\u7684\u8ba1\u5212\uff0c\u4ece\u773c\u775b\u62bd\u6410\u5230\u9f3b\u5b50\u8737\u7f29\u548c\u8eab\u4f53\u8fd0\u52a8\u3002\u8fd9\u4e9b\u6570\u636e\u5c06\u6709\u52a9\u4e8e\u8be5\u516c\u53f8\u786e\u4fdd\u4ed6\u4eec\u6784\u5efa\u7684\u6570\u5b57\u73af\u5883\u662f\u73b0\u5b9e\u7684\uff0c\u4f46\u5b83\u4e5f\u63ed\u793a\u4e86\u5176\u8ba1\u5212\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u5229\u7528metaverse\uff0c\u5305\u62ec\u4f7f\u7528\u6df1\u5ea6\u4e2a\u4eba\u6570\u636e\u4ee5\u66f4\u6709\u9488\u5bf9\u6027\u7684\u65b9\u5f0f\u9500\u552e\u5e7f\u544a\u3002\n\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\uff0c\u5728\u82f1\u56fd\u548c\u6b27\u6d32\uff0c\u300a\u901a\u7528\u6570\u636e\u4fdd\u62a4\u6761\u4f8b\u300b\uff08GDPR\uff09\u89c4\u5b9a\u4e86\u96c7\u4e3b\u53ef\u4ee5\u6536\u96c6\u548c\u5b58\u50a8\u7684\u5458\u5de5\u4fe1\u606f\uff0c\u5305\u62ec\u533b\u7597\u548c\u4e2a\u4eba\u8bb0\u5f55\u4ee5\u53ca\u8bc4\u4f30\u7b49\u4fe1\u606f\u3002\u56e0\u6b64\uff0c\u60f3\u8981\u5360\u9886Meta\u7684\u516c\u53f8\u5c06\u4e0d\u5f97\u4e0d\u8003\u8651\u5982\u4f55\u4fdd\u62a4\u5de5\u4eba\u7684\u6570\u636e\uff0c\u540c\u65f6\u8981\u6c42\u4ed6\u4eec\u53c2\u4e0e\u865a\u62df\u4e16\u754c\u3002\n\u7f8e\u56fd\u667a\u5e93\u5927\u897f\u6d0b\u7406\u4e8b\u4f1a\uff08Atlantic Council\uff09\u7684\u6280\u672f\u5f8b\u5e08\u517c\u7814\u7a76\u5458\u5e03\u91cc\u5766\u00b7\u6d77\u52d2\uff08Brittan Heller\uff09\u57282020\u5e74\u53d1\u8868\u7684\u4e00\u7bc7\u8ba8\u8bba\u8bba\u6587\u4e2d\u5199\u9053\uff1a\u201c\u73b0\u6709\u6cd5\u5f8b\u65e0\u6cd5\u89e3\u91ca\u6c89\u6d78\u5f0f\u6280\u672f\u6b63\u5728\u521b\u9020\u7684\u65b0\u8303\u5f0f\u3002\u201d\u3002\u201c\u8fd9\u9879\u65b0\u6280\u672f\u5f15\u53d1\u7684\u8bb8\u591a\u95ee\u9898\u4f7f\u6211\u4eec\u8d85\u8d8a\u4e86\u5f53\u524d\u7684\u6cd5\u5f8b\u8fb9\u754c\uff1a\u5982\u4f55\u6536\u96c6\u7528\u6237\u6570\u636e\u626b\u63cf\uff1f\u4fe1\u606f\u5982\u4f55\u5b58\u50a8\uff1f\u4fe1\u606f\u591a\u4e45\u66f4\u65b0\u4e00\u6b21\uff1f\u6570\u636e\u4fdd\u7559\u591a\u957f\u65f6\u95f4\uff1f\u201d\n\u5e15\u7279\u5c14\uff0c\u5979\u5728Meta\u4e2d\u88ab\u79f0\u4e3a\u6027\u4fb5\u72af\uff0c\u5979\u662f\u96f7\u4e01\u5927\u5b66\u7684\u535a\u58eb\u7814\u7a76\u4eba\u5458\uff0c\u7814\u7a76\u4f53\u9a8c\u8fd9\u4e9b\u8eab\u4e34\u5176\u5883\u3001\u865a\u62df\u4e16\u754c\u7684\u201c\u5fc3\u7406\u548c\u751f\u7406\u5f71\u54cd\u201d\u3002\u5979\u6bd4\u5927\u591a\u6570\u4eba\u66f4\u6e05\u695a\u8fdd\u53cd\u6570\u5b57\u4e92\u52a8\u7684\u611f\u89c9\u3002\n\u201c\u5728\u865a\u62df\u7a7a\u95f4\u4e2d\uff0c\u4eba\u4eec\u7684\u884c\u4e3a\u65b9\u5f0f\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\uff0c\u201d\u5979\u8bf4\uff0c\u8fd9\u7ed9metaverse\u5de5\u4f5c\u573a\u6240\u7684\u884c\u4e3a\u76d1\u7ba1\u5e26\u6765\u4e86\u6f5c\u5728\u95ee\u9898\u3002\u201c\u6211\u6536\u5230\u7684\u56de\u590d\uff08\u5173\u4e8e\u5979\u7684\u7ecf\u5386\u7684\u535a\u5ba2\uff09\u8868\u660e\uff0c\u6709\u4eba\u8ba4\u4e3a\u8fd9\u79cd\u884c\u4e3a\u5728\u865a\u62df\u73af\u5883\u4e2d\u662f\u5408\u9002\u7684\u3002\u201d\n\u4fdd\u62a4\u5458\u5de5\u514d\u53d7\u9a9a\u6270\u548c\u6b67\u89c6\u7684\u6cd5\u5f8b\u4e5f\u6ca1\u6709\u6e05\u6670\u5730\u6620\u5c04\u5230\u7528\u6237\u8fdb\u884c\u6570\u5b57\u5316\u64cd\u4f5c\u7684\u4e16\u754c\u3002\u8ba9\u4e00\u4e2a\u5934\u50cf\u5bf9\u9a9a\u6270\u7b49\u884c\u4e3a\u8d1f\u8d23\u610f\u5473\u7740\u8d4b\u4e88\u5b83\u4e00\u4e2a\u6cd5\u5f8b\u89d2\u8272\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u88ab\u8d77\u8bc9\u6216\u8d77\u8bc9\u3002\n\u201c\u6700\u8fd1\u6709\u62a5\u9053\u79f0metaverse\u4e2d\u5b58\u5728\u6027\u9a9a\u6270\u2026\u2026\u8fd9\u5c31\u5f15\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u4e00\u4e2a\u6570\u5b57\u751f\u7269\u662f\u5426\u53ef\u4ee5\u62e5\u6709\u6743\u5229\uff0c\u5982\u679c\u53ef\u4ee5\uff0c\u73b0\u6709\u7684\u9a9a\u6270\u4fdd\u62a4\u662f\u5426\u5ef6\u4f38\u5230\u8be5\u5316\u8eab\uff1f\u201d\u7ebd\u66fc\u95ee\u9053\u3002\n\u82f1\u56fd\u73b0\u884c\u6cd5\u5f8b\u8fd8\u7981\u6b62\u5de5\u4eba\u56e0\u6027\u522b\u3001\u5b97\u6559\u548c\u79cd\u65cf\u7b49\u4e5d\u4e2a\u53d7\u4fdd\u62a4\u7684\u7279\u5f81\u800c\u53d7\u5230\u6b67\u89c6\u3002\u4f46\u5728\u4e00\u4e2a\u4eba\u4eec\u53ef\u4ee5\u968f\u5fc3\u6240\u6b32\u5730\u5c55\u793a\u81ea\u5df1\u7684\u4e16\u754c\u91cc\uff0c\u5305\u62ec\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u7684\u52a8\u7269\u6216\u673a\u5668\u4eba\uff0c\u8fd9\u6837\u7684\u6cd5\u5f8b\u4ecd\u7136\u9002\u7528\u5417\uff1f\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u81ea\u6211\u8868\u73b0\u7684\u95ee\u9898\u5728\u6cd5\u5f8b\u4e0a\u548c\u9053\u5fb7\u4e0a\u90fd\u5f88\u56f0\u96be\u3002\u5f20\u4f2f\u4f26\u8bf4\uff1a\u201c\u5982\u679c\u6211\u60f3\u4ee5\u4e00\u4e2a\u5e74\u8f7b\u7684\u9ed1\u4eba\u5973\u6027\u7684\u8eab\u4efd\u51fa\u73b0\u5728metaverse\u4e2d\uff0c\u90a3\u8be5\u600e\u4e48\u529e\uff1f\u6211\u80fd\u505a\u5230\u5417\uff1f\u96c7\u4e3b\u4f1a\u8bf4\u4f60\u7684\u5934\u50cf\u5fc5\u987b\u4e0e\u4f60\u76f8\u4f3c\u5417\uff1f\u6211\u4eec\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u83b7\u5f97\u8a00\u8bba\u81ea\u7531\uff1f\u201d\n\u5728\u53bb\u5e74\u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0cMeta\u5199\u9053\uff0c\u201cmetaverse\u4e0d\u4f1a\u7531\u4e00\u5bb6\u516c\u53f8\u4e00\u591c\u4e4b\u95f4\u5efa\u6210\u3002\u201d\u5b83\u8865\u5145\u9053\uff0c\u201c\u8fd9\u4e9b\u4ea7\u54c1\u4e2d\u7684\u8bb8\u591a\u5c06\u5728\u672a\u676510-15\u5e74\u5185\u5b8c\u5168\u5b9e\u73b0\u3002\u201d\u4f46Meta\u521b\u59cb\u4eba\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c\uff08Mark Zuckerberg\uff09\u627f\u8bfa\u5728\u672a\u6765\u5341\u5e74\u6bcf\u5e74\u5728metaverse\u4e0a\u82b1\u8d39100\u4ebf\u7f8e\u5143\uff0c\u800c\u5176\u4ed6\u5927\u578b\u79d1\u6280\u96c6\u56e2\u4e5f\u5728\u7d27\u968f\u5176\u540e\u3002\n\u5fae\u8f6f\u8868\u793a\uff0c\u4eca\u5e741\u6708\uff0c\u5fae\u8f6f\u540c\u610f\u4ee5750\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u6536\u8d2d\u6e38\u620f\u516c\u53f8Activision\uff0c\u65e8\u5728\u201c\u4e3ametaverse\u63d0\u4f9b\u6784\u5efa\u5e73\u53f0\u201d\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5fae\u8f6f\u9996\u5e2d\u6267\u884c\u5b98\u8428\u8482\u4e9a\u00b7\u7eb3\u5fb7\u62c9\uff08Satya Nadella\uff09\u6700\u8fd1\u5728\u63a5\u53d7\u82f1\u56fd\u300a\u91d1\u878d\u65f6\u62a5\u300b\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u201c\u4f60\u548c\u6211\u5f88\u5feb\u5c31\u4f1a\u5750\u5728\u4f1a\u8bae\u5ba4\u7684\u684c\u5b50\u4e0a\uff0c\u770b\u5230\u6211\u4eec\u7684\u5934\u50cf\u6216\u5168\u606f\u56fe\uff0c\u751a\u81f3\u662f\u5e26\u6709\u73af\u7ed5\u97f3\u9891\u76842D\u8868\u9762\u3002\u201d\nMeta\u7684\u535a\u5ba2\u627f\u8ba4\uff0c\u5bf9\u8fd9\u9879\u6280\u672f\u7684\u7b49\u5f85\u201c\u8ba9\u6211\u4eec\u8fd9\u4e9b\u6025\u4e8e\u6295\u5165\u5176\u4e2d\u7684\u4eba\u611f\u5230\u6cae\u4e27\uff0c\u5b83\u7ed9\u4e86\u6211\u4eec\u65f6\u95f4\u53bb\u95ee\u4e00\u4e9b\u5173\u4e8e\u5982\u4f55\u5efa\u9020\u5b83\u4eec\u7684\u96be\u9898\u3002\u201d\u9884\u8ba1\u5c45\u4f4f\u5728metaverse\u7684\u5de5\u4eba\u53ef\u80fd\u4f1a\u4e3a\u6b64\u611f\u5230\u9ad8\u5174\u3002\n\u00a92022\u91d1\u878d\u65f6\u62a5\u6709\u9650\u516c\u53f8\u3002\u4fdd\u7559\u6240\u6709\u6743\u5229\uff0c\u4e0d\u5f97\u4ee5\u4efb\u4f55\u65b9\u5f0f\u91cd\u65b0\u5206\u53d1\u3001\u590d\u5236\u6216\u4fee\u6539\u3002", "note_en": "In December, 43-year-old doctoral researcher Nina Jane Patel put on a headset and entered Meta\u2019s virtual world to see what was happening that day. \u201cWithin seconds of being there, there were three avatars near me,\u201d she says. \u201cSuddenly they were taking selfies... I couldn\u2019t see at first that they were groping the avatar\u2019s upper body... They were yelling at me, \u2018Don\u2019t pretend you don\u2019t like it, this is what you came for.\u2019\u201d\n The incident took place in the metaverse, an immersive virtual world accessed via wearable technology in which tech groups expect us to spend a far greater proportion of time in the future, both playing and, crucially, working.\n When it comes to employment laws, however, it is unclear what rules of engagement apply in a universal digital realm. What counts as harassment in the metaverse? Can an avatar be discriminated against, or worse? Will national legislation protect employees or does working in the metaverse require a new rule book altogether?\n  The global workforce has grown far more accustomed to working remotely in the past two years because of the COVID-19 pandemic, and companies have already started experimenting with virtual reality in the workplace. Hilton hotel group, for example, uses it to train staff on how to handle guests. And last year Microsoft, in its first step toward blending the physical and digital worlds of work, began rolling out a plan to enable workers to appear on its Teams collaboration software as avatars.\n But the metaverse takes hybrid working a step further and brings with it a host of thorny employment law issues. These range from practical challenges, such as how employees are paid, to more philosophical ones, like whether avatars have a legal identity. \u201cThe legal conundrums are about as diverse as the possibilities of the metaverse itself,\u201d says Jonathan Newman, managing associate at law firm Simmons &amp; Simmons.\n The physical world of work is regulated by national legal frameworks. In California, for example, workers can be fired with no notice, while in Holland, employees generally cannot be sacked without approval from the court or Dutch employment agency. In the metaverse, however, the national employment law that applies is not immediately obvious.\n    \u201cIn one sense, the metaverse is just another platform. And the fundamental tenets of an employment relationship hold true regardless of platform,\u201d says Jonathan Chamberlain, a partner at Gowling WLG. \u201cArguably, in the era of Teams and Zoom, many of us are already in it.\n \u201cBut the employment relationship has until relatively recently been largely geographically fixed... employment law is still largely country or state specific. You often cannot opt out of your country\u2019s statutory employment protection regime even if you\u2014or your boss\u2014wanted to.\u201d\n So far, no one has decided what legal framework should apply to a decentralized digital workspace in which workers may be itinerant and geographically disconnected from each other and the company they work for.\n \u201cThere are no national boundaries in the metaverse, so the first question is, \u2018Where is the jurisdiction with the greater connection to the work?\u2019\u201d says Newman. \u201cIt could be the law of the country where the company owning the platform is... it could be the law of the country where the servers are based, or where the employee is... no one has reached an agreement on that.\u201d\n Worker participation in the metaverse also raises important questions about privacy and data security, given the scale of personal data that companies such as Meta expect to gather and monetize.\n A Financial Times investigation in January analyzed hundreds of Meta\u2019s applications to the US Patent and Trademark Office. While these do not mean the tech will be built, it highlighted Meta\u2019s plans to harvest a vast array of biometric data\u2014from eye twitches to nose scrunches and body movements. Such data will help the company ensure the digital environments they build are realistic, but it also revealed the extent of its plans to cash in on the metaverse, including using deeply personal data to sell ads in more targeted ways.\n In the physical world, in the UK and Europe, the General Data Protection Regulation (GDPR) governs what information employers can and cannot collect and store about their workers, including medical and personal records as well as things such as appraisals. As a result, companies that want to occupy the metaverse will have to consider how to protect workers\u2019 data while requiring them to participate in a virtual world.\n \u201cExisting laws do not account for new paradigms being created in immersive technology,\u201d writes Brittan Heller, a technology lawyer and fellow at US-based think-tank Atlantic Council in a discussion paper published in 2020. \u201cMany questions prompted by the new technology bring us beyond current frontiers of the law: How are scans of user data collected? How is the information stored? How often is the information updated? How long is data retained?\u201d\n     Patel, who was subjected to what she called a sexual assault in the metaverse, is a doctoral researcher at the University of Reading studying the \u201cpsychological and physiological impact\u201d of experiencing these immersive, virtual worlds. She knows better than most how violating a digital interaction can feel.\n \u201cIn the virtual space it seems to be acceptable to behave in a way that people would not in real life,\u201d she says, creating potential issues for policing conduct in a metaverse workplace. \u201cThe comments I\u2019ve received in response [to a blog about her experience] show that there are people who think this behavior is appropriate in virtual environments.\u201d\n Nor do the laws that protect employees from harassment and discrimination map neatly on to a world in which users operate digitally. Holding an avatar accountable for acts such as harassment would mean attributing a legal persona to it so it could be sued or prosecuted.\n \u201cRecently there have been reports of sexual harassment in the metaverse... which begs the question whether a digital being can have rights, and if so, do the existing protections for harassment extend to that avatar?\u201d asks Newman.\n Current UK laws also prevent workers from being discriminated against on the basis of nine protected characteristics, including sex, religion, and race. But do such laws still apply in a world where people can present themselves as anything they like, including in some cases animals or robots?\n Issues of self-expression could prove legally and ethically difficult. Chamberlain says: \u201cWhat if I wanted to present myself in the metaverse as a young black woman? Should I be able to do that? Are employers going to say your avatar has to bear resemblance to you? And to what extent would we be allowed freedom of expression?\u201d\n  In a blog post last year, Meta wrote that the \u201cmetaverse won\u2019t be built overnight by a single company.\u201d It added, \u201cMany of these products will only be fully realized in the next 10-15 years.\u201d But Meta founder Mark Zuckerberg has pledged to spend $10 billion\u00a0a year over the next decade on the metaverse, while other big tech groups are snapping at his heels.\n Microsoft agreed to buy gaming company Activision in January in a $75 billion\u00a0deal intended to \u201cprovide building blocks for the metaverse,\u201d according to the company. Indeed, speaking to the Financial Times recently, Microsoft\u2019s chief executive,\u00a0Satya Nadella, said: \u201cYou and I will be sitting on a conference room table soon with either our avatars or our holograms or even 2D surfaces with surround audio.\u201d\n Meta\u2019s blog acknowledged that the wait for the technology is \u201cfrustrating for those of us eager to dive right in, it gives us time to ask the difficult questions about how they should be built.\u201d Workers expected to inhabit the metaverse might be glad of that.\n \u00a9 2022 The Financial Times Ltd.  All rights reserved Not to be redistributed, copied, or modified in any way.", "posttime": "2022-02-22 01:22:34", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u573a\u6240,law,metaverse", "title": "Metaverse vs.\u5c31\u4e1a\u6cd5\uff1a\u865a\u62df\u5de5\u4f5c\u573a\u6240\u7684\u73b0\u5b9e", "title_en": "Metaverse vs. employment law: The reality of the virtual workplace", "transed": 1, "url": "https://arstechnica.com/tech-policy/2022/02/metaverse-vs-employment-law-the-reality-of-the-virtual-workplace/", "via": "", "real_tags": ["\u573a\u6240", "law", "metaverse"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074521, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60e0\u666e\u3001\u8054\u60f3\u3001\u5b8f\u7881\u548c\u534e\u7855\u6709\u671b\u6210\u4e3a\u9996\u6279\u53d1\u5e03\u6e38\u620fChromebook\u7684\u516c\u53f8\u4e4b\u4e00\u3002Chromium Gerrit\u4e2d\u7684\u4ee3\u7801\u53d8\u5316\u8868\u660e\uff0c\u4f9b\u5e94\u5546\u6b63\u5728\u5f00\u53d1\u652f\u6301Steam\u7684Chrome OS\u8bbe\u5907\u3002\n2020\u5e741\u6708\uff0c\u8c37\u6b4c\u8868\u793a\u5c06\u4e3aChromebooks\u5e26\u6765\u52a8\u529b\uff0c\u8be5\u8ba1\u5212\u53ef\u80fd\u5f00\u59cb\u6210\u5f62\u30029to5Google\u5728\u5468\u516d\u53d1\u73b0\u4e86\u4e00\u4e2a\u4ee3\u7801\u53d8\u5316\uff0c\u663e\u793a\u4e86\u652f\u6301Steam\u7684Chromebook\u578b\u53f7\u5217\u8868\uff1a\n\u8c37\u6b4c\u8fc7\u53bb\u66fe\u544a\u8bc9Ars Technica\uff0c\u5728Chromium Gerrit\u4e2d\u8fdb\u884c\u4e86\u5927\u91cf\u5b9e\u9a8c\uff0c\u56e0\u6b64\u5f53\u53d8\u5316\u51b2\u51fb\u6d88\u8d39\u8005\u65f6\uff0c\u60c5\u51b5\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0a\u4e2a\u6708\uff0cChromium Gerrit\u8fd8\u5c55\u793a\u4e86\u5bf9Chromebook\u7684RGB\u952e\u76d8\u652f\u6301\u7684\u5de5\u4f5c\uff0c\u8fd9\u662f\u6e38\u620fChromebook\u5373\u5c06\u95ee\u4e16\u7684\u53e6\u4e00\u4e2a\u8ff9\u8c61\u3002\nChromebook\u4f3c\u4e4e\u9700\u8981\u4e00\u4e9b\u975e\u5e38\u7ed3\u5b9e\u7684\u89c4\u683c\u624d\u80fd\u8fd0\u884c\u3002\u76ee\u524d\uff0c\u9884\u671f\u7684\u6700\u4f4e\u89c4\u683c\u5305\u62ecIntel\u7b2c11\u4ee3i5 CPU\u548c8GB RAM\u3002\u6b63\u59829to5Google\u6240\u6307\u51fa\u7684\uff0c\u63a5\u4e0b\u6765\u53ef\u80fd\u8fd8\u4f1a\u6709\u5176\u4ed6Chromebook\u52a0\u5165\u8be5\u5217\u8868\uff0c\u5c24\u5176\u662f\u56e0\u4e3a\u6211\u4eec\u5c1a\u672a\u542c\u5230\u8c37\u6b4c\u3001Steam\u6216\u4efb\u4f55\u7b14\u8bb0\u672c\u7535\u8111\u516c\u53f8\u7684\u6b63\u5f0f\u786e\u8ba4\u3002\u8be5\u51fa\u7248\u7269\u6307\u51fa\uff0cChromium Gerrit\u94fe\u63a5\u663e\u793a\u82f1\u7279\u5c14\u7b2c10\u4ee3\u548cAMD CPU\u6d4b\u8bd5\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u6709&#39\uff1b\u6ca1\u6709\u5173\u4e8e\u57fa\u4e8eArm\u82af\u7247\u7684\u7ec6\u8282\u3002\u867d\u7136\u6ca1\u6709\u914d\u5907Nvidia\u4e13\u7528GPU\u7684Chromebook\uff0c\u4f469to5Google\u6307\u51fa\uff0cNvidia\u5458\u5de5\u5bf9Chromium Gerrit\u7684\u8d21\u732e\u5c06&#34\uff1b\u4ec5\u7531Steam\u4f7f\u7528\u7684\u865a\u62df\u673a\u4f7f\u7528&#34;\nNvidia\u4e00\u76f4\u5728\u4e0e\u8054\u53d1\u79d1\u6280\u5408\u4f5c\uff0c\u8054\u53d1\u79d1\u6280\u662fChromebook\u4e2d\u8bb8\u591a\u57fa\u4e8eArm\u7684SoC\u7684\u5236\u9020\u5546\uff0c\u8be5\u516c\u53f8\u7684\u53c2\u8003\u5e73\u53f0\u652f\u6301Chrome\u3001Nvidia SDK\u548cLinux\u3002\u8be5\u516c\u53f8\u627f\u8bfa\u5c06\u63d0\u4f9b\u5149\u7ebf\u8ffd\u8e2a\u548cNvidia&#39\uff1b\u5c06DLS\u5347\u7ea7\u5230\u57fa\u4e8eArm\u7684\u82af\u7247\uff0c\u5e76\u5728\u8054\u53d1\u79d1Kompanio 1200\u82af\u7247\u4e0a\u6f14\u793a\u4e86\u8fd9\u7c7b\u529f\u80fd\uff0c\u9884\u8ba1\u8be5\u82af\u7247\u5c06\u5728Chromebook\u4e0a\u4e0a\u5e02\u3002\u81ea\u4ece\u6211\u4eec&#39\uff1b\u8bf4\u5230\u7b2c\u4e00\u6b3e\u914d\u5907Nvidia\u4e13\u7528\u663e\u5361\u7684Chrome OS\u8bbe\u5907\uff0c\u6211\u4eec&#39\uff1b\u6211\u9884\u8ba1\u90a3\u4e9b\u6e38\u620fChromebook\u7684\u4ef7\u683c\u4e5f\u4f1a\u66f4\u9ad8\u3002\nChromium Gerrit\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u7684Chromebook\u578b\u53f7\u5df2\u7ecf\u76f8\u5f53\u6602\u8d35\u4e86\u3002\u5b8f\u7881&#39\uff1b\u4f8b\u5982\uff0cs Chromebook 515\u76ee\u524d\u8d77\u4ef7\u4e3a650\u7f8e\u5143\uff0c\u800c\u534e\u7855Chromebook Flip CX5\u7684i5\u552e\u4ef7\u4e3a830\u7f8e\u5143\u3002\u60e0\u666e&#39\uff1bs c640 G2 Chromebook\u7684\u8d77\u4ef7\u4e3a489\u7f8e\u5143\uff0ci5\u7684\u8d77\u4ef7\u4e3a1254\u7f8e\u5143\u3002\n\u968f\u7740\u8c37\u6b4c\u4f53\u80b2\u573a\uff08Google Stadia\uff09\u7684\u817e\u98de\uff0c\u770b\u5230\u8c37\u6b4c\uff08Google&#39\uff1b\u8fd9\u662f\u5438\u5f15PC\u73a9\u5bb6\u7684\u4e0b\u4e00\u6b21\u5c1d\u8bd5\u3002", "note_en": "HP, Lenovo, Acer, and Asus are expected to be among the first companies to release gaming Chromebooks. A  code change in the Chromium Gerrit suggests the vendors are working on Chrome OS devices that will support Steam.\n In January 2020, Google said it would bring Steam to Chromebooks, and the plan may be starting to take shape.\u00a0 9to5Google\u00a0spotted a code change on Saturday showing a list of what appears to be Chromebook models that will support Steam:\n  Google has told Ars Technica in the past that a lot of experimentation happens in the Chromium Gerrit, so things can look different by the time changes hit consumers.\n That said, last month, the Chromium Gerrit also showed work on  RGB keyboard support for Chromebooks, another sign that gaming Chromebooks could be coming.\n  It appears Chromebooks will require some pretty beefy specs to run Steam.\u00a0Currently, expected minimum specs include an Intel 11th-Gen i5 CPU and 8GB of RAM.\u00a0As noted by 9to5Google, there may be other Chromebooks added to the list down the line, especially since we have yet to hear official confirmation from Google, Steam, or any laptop companies. The publication pointed to a  Chromium Gerrit link showing Intel 10th-Gen and AMD CPU testing.\n    Interestingly, there&#39;s no detail on Arm-based chips.\u00a0Although there are no Chromebooks with dedicated Nvidia GPUs, 9to5Google noted Chromium Gerrit contributions from Nvidia employees that it said would &#34;be used exclusively by the virtual machine that will be used by Steam.&#34;\n Nvidia has been working with MediaTek, the maker of many Arm-based SoCs found in Chromebooks, on a reference platform supporting Chromium, Nvidia SDKs, and Linux. The company has promised to bring capabilities like ray tracing and Nvidia&#39;s\u00a0DLSS to Arm-based chips and has  demoed such features working on the\u00a0MediaTek Kompanio 1200 chip expected to land in Chromebooks. Since we&#39;re talking about the first Chrome OS devices with dedicated Nvidia graphics cards, we&#39;d expect those gaming Chromebooks to command a higher price tag, too.\n The Chromebook models detailed in the Chromium Gerrit are pretty pricey already.\u00a0Acer&#39;s Chromebook 515, for example, currently starts at $650, while the Asus Chromebook Flip CX5 can be found for\u00a0 $830 with an i5. HP&#39;s c640 G2 Chromebook starts at $489 but goes up to  $1,254 for an i5.\n With  Google Stadia flailing, it will be interesting to see Google&#39;s next attempt at attracting PC gamers.", "posttime": "2022-02-22 01:20:35", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "chrome,\u8054\u60f3,lenovo,chromebook", "title": "\u60e0\u666e\u548c\u8054\u60f3Chromebook\u9884\u8ba1\u5c06\u652f\u6301Steam", "title_en": "HP and Lenovo Chromebooks expected to support Steam", "transed": 1, "url": "https://arstechnica.com/gadgets/2022/02/hp-and-lenovo-chromebooks-expected-to-support-steam/", "via": "", "real_tags": ["chrome", "\u8054\u60f3", "lenovo"]}]
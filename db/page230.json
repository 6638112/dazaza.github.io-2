[{"category": "", "categoryclass": "", "imagename": "f7f52ce31475f44dce659e2d9a3ec6ba.jpg", "infoid": 1033642, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u7f8e\u56fd\u603b\u7edf\u5927\u9009\u8fdb\u5165\u5c3e\u58f0\uff0c\u793e\u4ea4\u5a92\u4f53\u4e0a\u865a\u5047\u6216\u8bef\u5bfc\u6027\u7684\u5e16\u5b50\u6b63\u5728\u75af\u4f20\u3002\n\u4e00\u4e9b\u9009\u7968\u88ab\u7279\u6717\u666e\u603b\u7edf\u6216\u4ed6\u7684\u56e2\u961f\u653e\u5927\u4e86\uff0c\u4ed6\u4eec\u8d28\u7591\u6295\u7968\u7684\u5b8c\u6574\u6027\uff0c\u56e0\u4e3a\u4e00\u4e9b\u5173\u952e\u5dde\u7684\u65b0\u8ba1\u7968\u7ed3\u679c\u503e\u5411\u4e8e\u4ed6\u7684\u7ade\u4e89\u5bf9\u624b\u4e54\u00b7\u62dc\u767b(Joe Biden)\u3002\n\u63a8\u7279\u4e0a\u75af\u4f20\u6b7b\u8005\u5728\u5173\u952e\u7684\u5bc6\u6b47\u6839\u5dde\u6295\u7968\uff0c\u7279\u6717\u666e\u9886\u5bfc\u7684\u672a\u7ecf\u8bc1\u5b9e\u7684\u9009\u6c11\u6b3a\u8bc8\u6307\u63a7\u66f4\u662f\u96ea\u4e0a\u52a0\u971c\u3002\n\u5bc6\u6b47\u6839\u5dde\u5f53\u5c40\u8fdb\u884c\u4e86\u56de\u51fb\uff0c\u79f0\u8fd9\u4e9b\u8c23\u8a00\u662f\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u6307\u51fa\u6b7b\u8005\u7684\u9009\u7968\u662f\u4e0d\u4f1a\u88ab\u63a5\u53d7\u7684\u3002\n\u8fd9\u4e9b\u75c5\u6bd2\u5f0f\u7684\u63a8\u6587\u88ab\u8ba4\u4e3a\u662f\u90a3\u4e9b\u6295\u4e86\u7f3a\u5e2d\u7968\u7684\u4eba\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u51fa\u751f\u5728\u4e16\u7eaa\u4e4b\u4ea4\uff0c\u5df2\u7ecf\u53bb\u4e16\u3002\n\u5e16\u5b50\u4e2d\u7684\u4e00\u540d\u7537\u5b50\u4f3c\u4e4e\u4e0e\u4ed6\u5df2\u6545\u7684\u7236\u4eb2\u6df7\u5728\u4e00\u8d77\u3002\u6839\u636ePolitiFact\u7f51\u7ad9\u7684\u8bf4\u6cd5\uff0c\u8fd9\u4e24\u540d\u7537\u5b50\u7684\u59d3\u540d\u548c\u5730\u5740\u90fd\u76f8\u540c\u3002\u5bc6\u6b47\u6839\u5dde\u7684\u5730\u65b9\u5b98\u5458\u544a\u8bc9\u8be5\u7f51\u7ad9\uff0c\u5728\u5b98\u65b9\u6295\u7968\u7cfb\u7edf\u4e2d\uff0c\u513f\u5b50\u7684\u9009\u7968\u88ab\u9519\u8bef\u5730\u5f52\u4e8e\u7236\u4eb2\u3002\n\u6211\u4eec\u8fd8\u89c1\u8fc7\u5176\u4ed6\u4e2a\u522b\u6848\u4f8b\uff0c\u79f0\u6b7b\u8005\u6295\u7968--\u5927\u591a\u6570\u4e5f\u662f\u7531\u540c\u540d\u5bb6\u5ead\u6210\u5458\u6216\u6280\u672f\u6545\u969c\u9020\u6210\u7684\uff0c\u6bd4\u5982\u9009\u6c11\u5982\u679c\u6700\u521d\u5728\u7f51\u4e0a\u627e\u4e0d\u5230\u81ea\u5df1\u7684\u9009\u6c11\u767b\u8bb0\u8bb0\u5f55\uff0c\u5c31\u4f1a\u88ab\u6307\u793a\u8f93\u5165\u4e00\u4e2a\u865a\u62df\u7684\u51fa\u751f\u65e5\u671f(\u8bd1\u8005\u6ce8\uff1a\u539f\u6587\u4e3a\u201c\u5047\u51fa\u751f\u65e5\u671f\u201d--\u8bd1\u8005\u6ce8)\uff0c\u8fd9\u7c7b\u4e8b\u4ef6\u5927\u591a\u4e5f\u662f\u7531\u540c\u540d\u7684\u5bb6\u5ead\u6210\u5458\u6216\u6280\u672f\u6545\u969c\u9020\u6210\u7684\uff0c\u6bd4\u5982\u9009\u6c11\u88ab\u8981\u6c42\u8f93\u5165\u4e00\u4e2a\u865a\u62df\u7684\u51fa\u751f\u65e5\u671f\uff0c\u5982\u679c\u4ed6\u4eec\u6700\u521d\u5728\u7f51\u4e0a\u627e\u4e0d\u5230\u9009\u6c11\u767b\u8bb0\u8bb0\u5f55\u7684\u8bdd\u3002\n\u6709\u5f71\u54cd\u529b\u7684\u62a5\u9053\u4e5f\u91cd\u590d\u4e86\u8fd9\u4e9b\u8c23\u8a00\uff0c\u5305\u62ec\u603b\u7edf\u7684\u513f\u5b50\u5c0f\u5510--\u5f53\u7136\uff0c\u4ed6\u548c\u4ed6\u7684\u7236\u4eb2\u540c\u540d--\u4ee5\u53ca\u82f1\u56fd\u9000\u6b27\u515a\u9886\u8896\u5948\u6770\u5c14\u00b7\u6cd5\u62c9\u5947(Nigel Farage)\u3002\n\u63a8\u6587\u79f0\uff0c\u8be5\u5dde\u4eb2\u5171\u548c\u515a\u5730\u533a\u6709\u4e00\u4e2a\u8ba1\u5212\uff0c\u901a\u8fc7\u5206\u53d1\u590f\u76ae\u7b14(\u6c38\u4e45\u8bb0\u53f7\u7b14)\u8ba9\u4eba\u4eec\u586b\u5199\u9009\u7968\u6765\u6253\u6298\u9009\u7968\u3002\n\u5728\u4e00\u6bb5\u5e7f\u4e3a\u6d41\u4f20\u7684\u89c6\u9891\u4e2d\uff0c\u4e00\u540d\u5973\u5b50\u63cf\u8ff0\u4e86\u6295\u7968\u673a\u5e94\u8be5\u65e0\u6cd5\u8bfb\u53d6\u6807\u6709\u8fd9\u79cd\u7b14\u7684\u9009\u7968\u3002\n\u6444\u50cf\u673a\u540e\u9762\u7684\u4eba\u8bf4\uff0c\u9009\u7968\u6ca1\u6709\u88ab\u7edf\u8ba1\u51fa\u6765\uff0c\u4eba\u4eec\u88ab\u8feb\u4f7f\u7528\u590f\u76ae\u7b14\u6765\u6b6a\u66f2\u9009\u7968\u603b\u6570\u3002\n\u8fd9\u5bfc\u81f4\u793e\u4ea4\u5a92\u4f53\u4e0a\u7684\u6d3b\u52a8\u6fc0\u589e\uff0c\u9009\u6c11\u6b3a\u8bc8\u7684\u8bf4\u6cd5\u4ee5\u53ca\u7279\u6717\u666e\u652f\u6301\u8005\u7684\u5927\u91cf\u9009\u7968\u88ab\u5ba3\u5e03\u65e0\u6548\u3002\n\u7f8e\u56fd\u6709\u7ebf\u7535\u89c6\u65b0\u95fb\u7f51\u62a5\u9053\uff0c\u4e00\u7fa4\u805a\u96c6\u5728\u4e9a\u5229\u6851\u90a3\u5dde\u9a6c\u91cc\u79d1\u5e15\u53bf\u7684\u6297\u8bae\u8005\u5bf9\u793e\u4ea4\u5a92\u4f53\u4e0a\u5c16\u9510\u7684\u9519\u8bef\u4fe1\u606f\u5927\u558a\u5927\u53eb\u3002\n\u4e9a\u5229\u6851\u90a3\u5dde\u56fd\u52a1\u537f\u51ef\u8482\u00b7\u970d\u5e03\u65af(Katie Hobbs)\u5728\u63a8\u7279\u4e0a\u8bc1\u5b9e\uff0c\u5982\u679c\u4f60\u4eb2\u81ea\u6295\u7968\uff0c\u4f60\u7684\u9009\u7968\u5c06\u88ab\u8ba1\u7b97\u5728\u5185\uff0c\u65e0\u8bba\u4f60\u7528\u4ec0\u4e48\u7b14(\u5373\u4f7f\u662f\u590f\u76ae)\uff01\n\u91cd\u8981\u63d0\u793a\uff1a\u5982\u679c\u60a8\u4eb2\u81ea\u8fdb\u884c\u5e38\u89c4\u6295\u7968\uff0c\u5219\u65e0\u8bba\u60a8\u4f7f\u7528\u54ea\u79cd\u7b14(\u5373\u4f7f\u662f\u9510\u7b14)\uff0c\u60a8\u7684\u9009\u7968\u90fd\u4f1a\u88ab\u8ba1\u7b97\u5728\u5185\uff011/\u3002\n-\u79d8\u4e66\u51ef\u8482\u00b7\u970d\u5e03\u65af(@SecretHobbs)2020\u5e7411\u67084\u65e5\n\u970d\u5e03\u65af\u5973\u58eb\u540e\u6765\u544a\u8bc9CNN\uff0c\u5373\u4f7f\u673a\u5668\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u65e0\u6cd5\u8bfb\u53d6\u5b83\u4eec\uff0c\u4e00\u4e2a\u6807\u8bb0\u6d41\u5230\u4e86\u53e6\u4e00\u8fb9\uff0c\u6211\u4eec\u4e5f\u6709\u529e\u6cd5\u8ba1\u7b97\u5b83\u4eec\u7684\u6570\u91cf\u3002\u4ed6\u4eec\u5c06\u88ab\u8ba1\u7b97\u5728\u5185\u3002\u8bf4\u8fd9\u662f\u4f7f\u5171\u548c\u515a\u9009\u7968\u65e0\u6548\u7684\u9634\u8c0b\u662f\u5b8c\u5168\u6ca1\u6709\u9053\u7406\u7684\u3002\n\u4e00\u5f20\u5bc6\u6b47\u6839\u5dde\u9009\u4e3e\u4e4b\u591c\u7684\u6295\u7968\u5730\u56fe\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u75af\u4f20\u3002\u5730\u56fe\u663e\u793a\uff0c\u4e54\u00b7\u62dc\u767b(Joe Biden)\u7684\u9009\u7968\u7a81\u7136\u589e\u52a0\u4e86\u7ea613\u4e07\u5f20\uff0c\u800c\u7279\u6717\u666e\u4e00\u5f20\u90fd\u6ca1\u6709\u3002\n\u56fd\u5bb6\u5f53\u5c40\u4f1a\u7acb\u5373\u5728\u8ba1\u7968\u4e2d\u589e\u52a0\u4e00\u5927\u5757\u9009\u7968\uff0c\u8fd9\u662f\u53f8\u7a7a\u89c1\u60ef\u7684\u4e8b\u60c5\u3002\n\u4f46\u793e\u4ea4\u5a92\u4f53\u7528\u6237\u8d28\u7591\uff0c\u4e3a\u4ec0\u4e48\u7279\u6717\u666e\u5728\u8fd9\u4e00\u6b21\u7684\u66f4\u65b0\u4e2d\u6ca1\u6709\u589e\u52a0\u4efb\u4f55\u9009\u7968\u3002\n\u89e3\u91ca\u5f88\u7b80\u5355--\u8fd9\u662f\u4e00\u4e2a\u6570\u636e\u8f93\u5165\u9519\u8bef\uff0c\u540e\u6765\u88ab\u7ea0\u6b63\u4e86\u3002\n\u5236\u4f5c\u8fd9\u5f20\u5730\u56fe\u7684\u9009\u4e3e\u76d1\u7763\u7f51\u7ad9Decision Desk\u8868\u793a\uff1a\u6211\u4eec\u6444\u53d6\u4e86\u2026\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u7531\u5dde\u653f\u5e9c\u521b\u5efa\u7684\u6587\u4ef6\u4e2d\u7684\u4e00\u4e2a\u7b80\u5355\u9519\u8bef\u3002\u8be5\u5dde\u6ce8\u610f\u5230\u4e86\u8fd9\u4e2a\u9519\u8bef\uff0c\u5e76\u66f4\u65b0\u4e86\u8ba1\u6570\u3002\n\u8fd9\u4f4d\u53d1\u8a00\u4eba\u8865\u5145\u8bf4\uff1a\u8fd9\u7c7b\u4e8b\u60c5\u53ef\u80fd\u4f1a\u5728\u9009\u4e3e\u4e4b\u591c\u53d1\u751f\uff0c\u6211\u4eec\u9884\u8ba1\u5bc6\u6b47\u6839\u5dde\u7684\u5176\u4ed6\u8ba1\u7968\u5458\u4e5f\u4f1a\u7ecf\u5386\u8fd9\u79cd\u9519\u8bef\uff0c\u5e76\u50cf\u6211\u4eec\u4e00\u6837\u5b9e\u65f6\u66f4\u6b63\u3002\n\u63a8\u7279\u5728\u5f15\u53d1\u6000\u7591\u7684\u63a8\u6587\u4e0a\u8d34\u4e0a\u4e86\u6807\u7b7e\uff0c\u79f0\uff1a\u8fd9\u6761\u63a8\u6587\u4e2d\u5206\u4eab\u7684\u90e8\u5206\u6216\u5168\u90e8\u5185\u5bb9\u5b58\u5728\u4e89\u8bae\uff0c\u53ef\u80fd\u5728\u9009\u4e3e\u6216\u5176\u4ed6\u516c\u6c11\u7a0b\u5e8f\u65b9\u9762\u5177\u6709\u8bef\u5bfc\u6027\u3002\n\u9a6c\u7279\u00b7\u9ea6\u8003\u7ef4\u4e9a\u514b(Matt Mackowiak)\u5220\u9664\u4e86\u8fd9\u6761\u63a8\u6587\u5e76\u9053\u6b49--\u5c3d\u7ba1\u8fd9\u5f20\u7167\u7247\u4ecd\u5728\u5176\u4ed6\u5730\u65b9\u88ab\u5e7f\u6cdb\u5206\u4eab\u3002\u9a6c\u7279\u00b7\u9ea6\u8003\u7ef4\u4e9a\u514b\u7684\u5e16\u5b50\u88ab\u7279\u6717\u666e\u8f6c\u8f7d\u3002\n\u8fd9\u6761\u63a8\u7279\u662f\u88ab\u8bda\u5b9e\u5730\u62cd\u6444\u548c\u5206\u4eab\u7684\u3002\u6211\u73b0\u5728\u4e86\u89e3\u5230\uff0c\u53c2\u8003\u7684MI\u66f4\u65b0\u662f\u4e00\u4e2a\u53bf\u7684\u6253\u5b57\u9519\u8bef\u3002\u6211\u5df2\u7ecf\u5220\u9664\u4e86\u539f\u6765\u7684\u63a8\u6587\u3002Pic.twitter.com/NXQINWDbEH\u3002\n-\u9a6c\u7279\u00b7\u9a6c\u79d1\u7ef4\u4e9a\u514b(@MattMackowiak)2020\u5e7411\u67084\u65e5\u3002\n\u5468\u4e09\u51cc\u6668\uff0c\u4eb2\u7279\u6717\u666e\u9634\u8c0b\u8bbaQAnon\u7684\u652f\u6301\u8005\u63a8\u52a8\u4e86\u8fd9\u5f20\u5730\u56fe\uff0c\u4fdd\u5b88\u6d3e\u5f71\u54cd\u529b\u4eba\u58eb\u5728\u7f51\u4e0a\u5411\u66f4\u5e7f\u6cdb\u7684\u53d7\u4f17\u63a8\u4ecb\u4e86\u8fd9\u5f20\u5730\u56fe\u3002\n\u5f53\u6211\u4eec\u8054\u7cfb\u5bc6\u6b47\u6839\u5dde\u9009\u4e3e\u5c40\u65f6\uff0c\u4ed6\u4eec\u8868\u793a\u5bf9\u6570\u636e\u5dee\u5f02\u4e0d\u4e88\u7f6e\u8bc4\uff0c\u4f46\u8868\u793a\u7ed3\u679c\u8fd8\u5904\u4e8e\u975e\u5b98\u65b9\u9636\u6bb5\uff0c\u5e76\u4e0d\u662f\u6700\u7ec8\u8ba1\u7968\u7ed3\u679c\u3002\n\u5a01\u65af\u5eb7\u661f\u5dde\u6295\u7968\u7684\u4eba\u6bd4\u767b\u8bb0\u7684\u4eba\u591a\uff0c\u8fd9\u4e00\u8bf4\u6cd5\u5e7f\u4e3a\u6d41\u4f20\u3002\n\u4e00\u540d\u7528\u6237\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff1a\u7a81\u5982\u5176\u6765\u7684\u662f\uff1a\u5a01\u65af\u5eb7\u661f\u5dde\u7684\u9009\u7968\u6bd4\u767b\u8bb0\u6295\u7968\u7684\u4eba\u8fd8\u591a\u3002\u767b\u8bb0\u9009\u6c11\u603b\u6570\uff1a312.9\u4e07\u4eba\u3002\u603b\u7968\u6570\uff1a3239,920\u7968\u3002\u8fd9\u662f\u6b3a\u8bc8\u7684\u76f4\u63a5\u8bc1\u636e\u3002\n\u7136\u800c\uff0c\u8fd9\u4e00\u767b\u8bb0\u9009\u6c11\u4eba\u6570\u5df2\u7ecf\u8fc7\u65f6--\u622a\u81f311\u67081\u65e5\u7684\u6700\u65b0\u6570\u5b57\u662f3684726\u4eba\u3002\n\u8fd9\u6761\u63a8\u6587\u73b0\u5728\u5df2\u88ab\u5220\u9664\uff0c\u4f46Facebook\u548cTwitter\u4e0a\u7684\u4eba\u4eec\u4ecd\u5728\u5206\u4eab\u8fd9\u6761\u63a8\u6587\u7684\u622a\u56fe\u3002\n\u8be5\u5dde\u8fd8\u5141\u8bb8\u4eba\u4eec\u5728\u9009\u4e3e\u65e5\u767b\u8bb0\u6295\u7968\uff0c\u8fd9\u610f\u5473\u7740\u767b\u8bb0\u9009\u6c11\u7684\u603b\u6570\u53ef\u80fd\u6bd4\u76ee\u524d\u62a5\u9053\u7684\u6570\u5b57\u8fd8\u8981\u9ad8\u3002", "note_en": "As the US presidential race goes down to the wire, false or misleading posts on social media are going viral.\n Some have been amplified by President Trump or his team, who are calling into question the integrity of the vote as newly counted ballots in some key states lean towards his rival, Joe Biden.\n    Viral tweets alleged that dead people were casting votes in the key state of Michigan, adding to a Trump-led chorus of unproven &#34;voter fraud&#34; claims.\n Michigan authorities have hit back, calling the rumours &#34;misinformation&#34; - and noting that votes from dead people are rejected.\n The viral tweets supposedly identified people who had cast an absentee ballot despite being born at the turn of the century and having passed away.\n  One of the men in the posts seems to have been mixed up with his father, now deceased. The men had the same name and address,  according to the Politifact website. Local officials in Michigan told the site that the son&#39;s ballot was erroneously attributed to the father on the official voting system.\n We&#39;ve seen other isolated cases of allegations of &#34;dead people&#34; voting - most also explained by family members with the same name, or technical hitches, such as voters being instructed to enter a dummy date of birth if they can&#39;t initially find their voter registration record online.\n The rumours have been repeated by influential accounts, including those of the president&#39;s son Don Jr - who of course also shares a name with his father - and Brexit Party leader Nigel Farage.\n    Tweets alleged there was a scheme to discount votes in pro-Republican parts of the state by distributing Sharpie pens - permanent markers - for people to fill in their ballots.\n In one widely circulated video, a woman describes how voting machines supposedly can&#39;t read ballots marked with this type of pen.\n The person behind the camera says votes aren&#39;t being counted and that people are being forced to use Sharpie pens to skew the vote total.\n This led to a surge of activity on social media, claims of voter fraud and that large numbers of votes from Trump supporters were being invalidated.\n  CNN reported that a group of protesters that gathered in Maricopa County in Arizona were &#34;shouting about the sharpie social media misinformation.&#34;\n   The Arizona secretary of state, Katie Hobbs, confirmed on Twitter that if you voted in person &#34;your ballot will be counted, no matter what kind of pen you used (even a Sharpie)!&#34;.\n IMPORTANT: If you voted a regular ballot in-person, your ballot will be counted, no matter what kind of pen you used (even a Sharpie)! 1/\n\u2014 Secretary Katie Hobbs (@SecretaryHobbs)  November 4, 2020\n Ms Hobbs later told CNN &#34;even if the machines can&#39;t read them for some reason, a marker bled through to the other side, we have ways to count them. They&#39;re going to be counted. There is absolutely no merit to saying that this was some conspiracy to invalidate Republican ballots.&#34;\n   A map of voting in Michigan from the election night - which shows a sudden increase of around 130,000 votes for Joe Biden, but none for Mr Trump - has gone viral on social media.\n   It&#39;s commonplace that state authorities will add a big chunk of votes to a tally at once.\n But social media users were questioning why Mr Trump didn&#39;t have any votes added to his tally in this particular update.\n The explanation is simple - it was a data entry error that was later corrected.\n Decision Desk, the election monitoring website which created the map, said: &#34;It was a simple error from a file created by the state that we ingested\u2026 the state noticed the error and produced an updated count.&#34;\n  The spokesperson added: &#34;This sort of thing can happen on election night and we expect other vote tabulators in Michigan experienced this error and corrected in real-time like we did.&#34;\n Twitter has added labels to the tweets that raised suspicions, saying: &#34;Some or all of the content shared in this tweet is disputed and might be misleading about an election or other civic process.&#34;\n Matt Mackowiak, the user whose post was picked up by Mr Trump, has deleted the tweet and apologised - although the image remains widely shared elsewhere.\n This tweet was taken and share honestly. I have now learned the MI update referenced was a typo in one county.  I have deleted the original tweet.  pic.twitter.com/NXQINWDbEH\n\u2014 Matt Mackowiak (@MattMackowiak)  November 4, 2020\n In the early hours of Wednesday, the map was propelled by supporters of the pro-Trump conspiracy theory QAnon and to a wider audience by conservative influencers online.\n When we contacted Michigan&#39;s Bureau of Elections, they said they didn&#39;t have a comment on the data discrepancy, but said the results were at this stage &#34;unofficial&#34; and not the final count.\n   There have been widespread false claims that more people in Wisconsin voted than were registered.\n A user tweeted: &#34;BREAKING: Wisconsin has more votes than people who are registered to vote. Total number of registered voters: 3,129,000. Total number of votes cast: 3,239,920. This is direct evidence of fraud.&#34;\n  However, this number of registered voters is outdated - the  latest figure as of 1 November is 3,684,726.\n That tweet has now been deleted, but people on Facebook and Twitter continue to share a screenshot of the post.\n  The state also allows people to register to vote on election day itself, which means the overall number of registered voters could be even higher than the current reported figure.", "posttime": "2020-11-07 11:22:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u58f0\u660e,checking,\u9009\u7968", "title": "\u5bf9\u6295\u7968\u58f0\u660e\u7684\u4e8b\u5b9e\u6838\u67e5\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u75af\u4f20", "title_en": "Fact Checking on Vote Claims Going Viral on Social Media", "transed": 1, "url": "https://www.bbc.com/news/election-us-2020-54811410", "via": "", "real_tags": ["\u58f0\u660e", "checking", "\u9009\u7968"]}, {"category": "", "categoryclass": "", "imagename": "bc524a9753c8453bbced6fe244e0df47.png", "infoid": 1033641, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f1\u7279\u5c14\u8feb\u5207\u9700\u8981\u79ef\u6781\u7684\u6d88\u606f\uff0c\u4ed6\u4eec\u6b63\u5728\u505a\u901a\u5e38\u7684\u6700\u540e\u4e00\u5206\u949f\u7684\u6e38\u620f\uff0c\u8bd5\u56fe\u52aa\u529b\u65cb\u8f6c\u3002\u8fd9\u4e00\u6b21\uff0c\u4ed6\u4eec\u5ba3\u5e03\u4e86\u706b\u7bad\u6e56\uff0cSemiAccurate\u53ef\u4ee5\u544a\u8bc9\u4f60\u5b83\u662f\u4e00\u53ea\u72d7\u3002\n\u8ba9\u6211\u4eec\u5148\u4ece\u574f\u5904\u5f00\u59cb\uff0c\u7136\u540e\u518d\u5230\u771f\u6b63\u7684\u574f\u5904\uff0c\u7136\u540e\u624d\u662f\u4e00\u7ebf\u5e0c\u671b\u3002\u82f1\u7279\u5c14\u5728CPU\u5e02\u573a\u4e0a\u88ab\u6253\u5f97\u50cf\u9f13\u4e00\u6837\u300210\u7eb3\u7c73\u7684\u6536\u76ca\u7387\u5728\u7ecf\u6d4e\u4e0a\u4ecd\u7136\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u800c\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u53ef\u884c\uff0c\u4ed6\u4eec\u7684\u558a\u58f0--\u201c\u8fd9\u6bd4\u9884\u671f\u7684\u8981\u597d\u201d\u548c\u201c\u4ea7\u91cf\u6b63\u5728\u5feb\u901f\u6539\u5584\u201d--\u4f3c\u4e4e\u603b\u662f\u5ffd\u7565\u4e86\u57fa\u51c6\u7ebf\u3002SemiAccurate\u77e5\u9053\u7684\u6570\u5b57\u4ecd\u7136\u4ee4\u4eba\u9707\u60ca\u5730\u7cdf\u7cd5\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u82f1\u7279\u5c14\u6545\u610f\u5c0610\u7eb3\u7c73\u6676\u5706\u7684\u8d77\u59cb\u91cf\u9650\u5236\u5728\u5fae\u4e0d\u8db3\u9053\u7684\u6570\u5b57\u4e0a\u3002\n\u5f53\u82f1\u7279\u5c14\u8ba9\u5a92\u4f53\u63d0\u95ee\u65f6\uff0c\u8fd9\u6837\u7684\u4e8b\u60c5\u5f80\u5f80\u4f1a\u6d6e\u51fa\u6c34\u9762\u3002\u6309\u7167\u4ed6\u4eec\u7684\u60ef\u4f8b\uff0c\u82f1\u7279\u5c14\u5728\u665a\u4e0a7\u70b933\u5206\uff0c\u4e5f\u5c31\u662f\u7981\u8fd0\u89e3\u9664\u524d13\u5c0f\u65f627\u5206\u949f\uff0c\u53d1\u9001\u4e86\u4e00\u4efd\u672a\u7ecf\u5ba3\u5e03\u7684\u201c\u7b80\u62a5\u201d\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u51e0\u4e2a\u6d3b\u6cfc\u7684\u8981\u70b9\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u9519\u8fc7\u5b83\uff0c\u76f4\u5230\u6700\u540e\u4e00\u79d2\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u6ca1\u6709\u65f6\u95f4\u53bb\u601d\u8003\u8fd9\u90e8\u5206\u6709\u591a\u7cdf\u7cd5\uff0c\u66f4\u4e0d\u7528\u8bf4\u63d0\u51fa\u95ee\u9898\u4e86\u3002\u4efb\u4f55\u88ab\u8be2\u95ee\u7684\u95ee\u9898\u90fd\u5c06\u5728\u897f\u6d77\u5cb8\u7684\u8425\u4e1a\u65f6\u95f4\u7ed3\u675f\u540e\u53d1\u9001\uff0c\u8fd9\u6837\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5728\u622a\u6b62\u65e5\u671f\u524d\u51e0\u5206\u949f\u5f97\u5230\u7b54\u590d\u3002\u8fd9\u79cd\u6545\u610f\u4f46\u8c8c\u4f3c\u53ef\u4ee5\u5426\u8ba4\u7684\u50f5\u786c\u95ee\u9898\u662f\u4e00\u4e2a\u660e\u786e\u7684\u4fe1\u53f7\uff0c\u8868\u660e\u8be5\u4ea7\u54c1\u662f\u4e00\u53ea\u72d7\uff0c\u76f8\u4fe1\u6211\u4eec\uff0c\u8fd9\u4e00\u53ea\u5c31\u662f\u72d7\u3002\u80ae\u810f\u7684\u79fb\u52a8\u82f1\u7279\u5c14\u3002\n\u73b0\u5728\u5230\u4e86\u771f\u6b63\u7cdf\u7cd5\u7684\u5730\u65b9\uff0c\u706b\u7bad\u6e56\u7684\u8fd9\u4e00\u90e8\u5206\u548c\u201c\u65b0\u7684\u201d\u67cf\u6811\u6e7e\u6838\u5fc3\u3002\u6211\u4eec\u627f\u8ba4\uff0c\u5f53\u6211\u4eec\u8bf4\u82f1\u7279\u5c14\u6c38\u8fdc\u4e0d\u4f1a\u5c0610\u7eb3\u7c73\u67b6\u6784\u79fb\u690d\u523014\u7eb3\u7c73\u5236\u7a0b\u65f6\uff0c\u6211\u4eec\u627f\u8ba4\u6211\u4eec\u9519\u4e86\uff0c\u56e0\u4e3a\u8fd9\u6b63\u662f\u706b\u7bad/\u8d5b\u666e\u62c9\u65af\u7684\u672c\u8d28\uff0c\u62ff\u4e0b\u51b0\u6e56\u5e76\u652f\u6301\u5b83\u3002\u6b64\u5916\uff0cXe GPU\u7684\u540e\u7aef\u7aef\u53e3\u4e5f\u4f1a\u7ed9\u5b83\u4eec\u5e26\u6765\u5f88\u597d\u7684\u6548\u679c\u3002\n\u6211\u4eec\u5e94\u8be5\u8bf4\u7684\u662f\uff0c\u82f1\u7279\u5c14\u6c38\u8fdc\u4e0d\u4f1a\u611a\u8822\u5230\u628a\u4e00\u4e2a10\u7eb3\u7c73\u7684\u67b6\u6784\u79fb\u690d\u523014\u7eb3\u7c73\u7684\u5de5\u827a\uff0c\u800c\u8fd9\u4e2a\u67b6\u6784\u5728\u8bbe\u8ba1\u4e0a\u5e76\u6ca1\u6709\u8003\u8651\u5230\u5de5\u827a\u7684\u53ef\u79fb\u690d\u6027\u3002\u5b83\u592a\u5927\u4e86\uff0c\u6548\u7387\u592a\u4f4e\uff0c\u6839\u672c\u65e0\u6cd5\u4e0e\u4ece\u4e00\u5f00\u59cb\u5c31\u8bbe\u8ba1\u548c\u8c03\u6574\u4e3a14\u7eb3\u7c73\u7684IP\u5757\u7ade\u4e89\u3002\u4e00\u5bb6\u516c\u53f8\u5c06\u9700\u8981\u4e0d\u987e\u4e00\u5207\uff0c\u4e25\u91cd\u5730\u9677\u5165\u56f0\u5883\uff0c\u4ee5\u81f3\u4e8e\u5728\u8fd9\u4e2a\u6e2f\u53e3\u4e0a\u82b1\u8d39\u6570\u5343\u4e07\u7f8e\u5143\uff0c\u53ea\u4e0d\u8fc7\u662f\u4e3a\u4e86\u62a2\u5360\u5934\u6761\uff0c\u6700\u7ec8\u4f1a\u88ab\u6253\u5f97\u9f3b\u9752\u8138\u80bf\uff0c\u8fd9\u662f\u503c\u5f97\u7684\u3002\u8fd9\u662f\u6211\u4eec\u5e94\u8be5\u8bf4\u7684\uff0c\u4f46\u6211\u4eec\u5728\u8fd9\u4e00\u70b9\u4e0a\u4e5f\u662f\u9519\u7684\uff0c\u82f1\u7279\u5c14\uff0c\u8fd9\u4f3c\u4e4e\u662f\u611a\u8822\u7684\u3002\n\u706b\u7bad/\u67cf\u6811\u4e3a\u4f55\u5982\u6b64\u7cdf\u7cd5\uff1f\u5982\u679c\u4f60\u770b\u4e00\u4e0b\u73b0\u4ee3CPU\u5728\u4e0d\u540c\u8fdb\u7a0b\u4e0a\u7684\u5e03\u5c40\uff0c\u6838\u5fc3\u533a\u4e0d\u4f1a\u56e0\u4e3a\u7f29\u5c0f\u800c\u4e0b\u964d\u592a\u591a\u3002\u66f4\u5bbd\u7684\u6570\u636e\u8def\u5f84\u3001\u50cfAVX-512\u548cVNNI\u8fd9\u6837\u7684ISA\uff0c\u4ee5\u53ca\u50cf\u589e\u52a0\u7684\u7f13\u5b58\u8fd9\u6837\u7684\u5176\u4ed6\u81a8\u80c0\uff0c\u4f7f\u6838\u5fc3\u533a\u57df\u589e\u957f\u5230\u63a5\u8fd1\u65e7\u8fdb\u7a0b\u4e0a\u7684\u6c34\u5e73\u3002\u60a8\u53ef\u4ee5\u83b7\u5f97\u66f4\u591a\u529f\u80fd\u548c\u66f4\u9ad8\u7684\u6838\u5fc3IPC\uff0c\u4f46\u4e0d\u662f\u66f4\u5c0f\u3002\n\u516c\u53f8\u4e0d\u4f1a\u540e\u9000\uff0c\u56e0\u4e3a\u6838\u5fc3\u662f\u4e3a\u6d41\u7a0b\u8bbe\u8ba1\u7684\u3002\u5b83\u7684\u6548\u7387\u548c\u67b6\u6784\u57fa\u4e8e\u4ece\u8bbe\u8ba1\u5f00\u59cb\u5c31\u5c06\u4f7f\u7528\u7684\u6676\u4f53\u7ba1\uff0c\u7f13\u5b58\u7684\u5927\u5c0f\u4e5f\u57fa\u4e8e\u5de5\u827a\uff0c\u67b6\u6784\u7684\u8bb8\u591a\u6536\u76ca\u90fd\u5f52\u529f\u4e8e\u589e\u52a0\u7684\u6676\u4f53\u7ba1\u6570\u91cf\u3002\u5982\u679c\u4f60\u628aCPU\u653e\u56de\u540e\u7aef\uff0c\u4f60\u5c31\u4f1a\u5931\u53bb\u8fd9\u4e9b\u65b0\u6676\u4f53\u7ba1\u7684\u6548\u7387\uff0c\u56e0\u6b64\u80fd\u6e90\u6d88\u8017\u4f1a\u4e0a\u5347\uff0c\u65f6\u949f\u4e5f\u53ef\u80fd\u4f1a\u4e0b\u964d\u3002\u5185\u6838\u7684\u5927\u5c0f\u662f\u65e7\u5185\u6838\u7684\u4e24\u500d\uff0c\u6216\u8005\u81f3\u5c11\u6bd4\u65e7\u5de5\u827a\u4e2d\u7684\u65e7\u5185\u6838\u5927\u5f97\u591a\uff0c\u6240\u4ee5\u6210\u672c\u4e5f\u4f1a\u4e0a\u5347\u3002\u4f60\u53ef\u4ee5\u628a\u6838\u5fc3\u7684\u4e00\u5c0f\u5757\u5207\u4e0b\u6765\uff0c\u964d\u4f4e\u6027\u80fd\uff0c\u6216\u8005\u5728\u9762\u79ef\u548c\u6210\u672c\u4e0a\u5403\u6389\u5b83\u3002\u652f\u6301\u4e0d\u662f\u4e3a\u53ef\u79fb\u690d\u6027\u800c\u8bbe\u8ba1\u7684\u8bbe\u8ba1\u4e0d\u662f\u4e00\u4e2a\u8f93\u8d62\u7684\u547d\u9898\uff0c\u800c\u662f\u4e00\u4e2a\u8f93\u8d62\u7684\u547d\u9898\u3002\u4f46\u82f1\u7279\u5c14\u4e0d\u987e\u4e00\u5207\uff0c\u6240\u4ee5\u2026\u3002\n\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u66f4\u57fa\u672c\u7684\u5916\u5356\u3002\u82f1\u7279\u5c14\u4e0d\u80fd\u751f\u4ea710\u7eb3\u7c73\u7684\u8bbe\u5907\uff0c\u826f\u7387\u4ecd\u7136\u4e0d\u5728\u90a3\u91cc\uff0cRocket/Cypress\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u4e2a\u95ea\u4eae\u4f8b\u5b50\u3002\u82f1\u7279\u5c14\u768410\u7eb3\u7c73\u5236\u7a0b\u4e0d\u9002\u5408\u9ad8\u6027\u80fd\u3001\u9ad8\u529f\u7387\u8bbe\u5907\u3002\u6211\u4eec\u8fd8\u4e0d\u80fd\u89e3\u91ca\u7ec6\u8282\uff0c\u8fd9\u9700\u8981\u4e00\u4e9b\u6316\u6398\uff0c\u4f46\u5982\u679c\u82f1\u7279\u5c14\u9700\u8981\u4e00\u6b3e10\u7eb3\u7c73\u7684\u5149\u73af\u4ea7\u54c1\uff0c\u8fd9\u5c31\u662f\u5b83\u3002\u706b\u7bad\u6e56\u4f4d\u4e8e14\u6d77\u91cc\u3002\n\u6700\u540e\uff0c\u5b83\u8868\u660eSemiAccurate\u5173\u4e8e\u4ee4\u4eba\u9707\u60ca\u7684\u4f4e10\u7eb3\u7c73\u6676\u5706\u8d77\u59cb\u4ea7\u80fd\u7684\u8bf4\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u6211\u4eec\u5df2\u7ecf\u8bf4\u4e86\u4e00\u5e74\u591a\uff0c\u82f1\u7279\u5c14\u6545\u610f\u8bef\u5bfc\u4efb\u4f55\u6b63\u5728\u542c\u4ed6\u4eec10\u7eb3\u7c73\u4ea7\u80fd\u7684\u4eba\uff0cRocket/Cypress\u518d\u6b21\u6210\u4e3a\u6211\u4eec\u4e00\u76f4\u5728\u8c08\u8bba\u7684\u6570\u5b57\u7684\u95ea\u8000\u4f8b\u5b50\u3002\u82f1\u7279\u5c14\u6ca1\u670910\u7eb3\u7c73\u7684\u4ea7\u80fd\uff0c\u5c31\u8fd9\u6837\uff0c\u4ed6\u4eec\u7684\u6676\u5706\u5f00\u5de5\u603b\u6570\u8fdc\u8fdc\u4e0d\u5230\u4e00\u4e2a\u5b8c\u5168\u73b0\u4ee3\u5316\u7684\u6676\u5706\u5382\u7684\u4ef7\u503c\uff0c\u4f46\u4ed6\u4eec\u628a\u5b83\u5206\u6563\u5728\u4e09\u4e2a\u7f51\u7ad9\u4e0a\u8bef\u5bfc\u4e86\u65b9\u5411\u3002\u6ca1\u6709\u4eba\u5bf9\u6b64\u63d0\u51fa\u6b63\u786e\u7684\u95ee\u9898\uff0c\u800c\u8fd9\u6b63\u662f\u82f1\u7279\u5c14\u60f3\u8981\u7684\u3002\n\u56e0\u6b64\uff0cBackport\u662f\u4e00\u79cd\u5b64\u6ce8\u4e00\u63b7\u7684\u5c1d\u8bd5\uff0c\u76ee\u7684\u662f\u4ece\u4e00\u4e2a\u7cdf\u7cd5\u5f97\u4ee4\u4eba\u9707\u60ca\u7684\u60f3\u6cd5\u53d8\u6210\u5934\u6761\u65b0\u95fb\u300210\u7eb3\u7c73\u7684\u4ea7\u91cf\u5728\u7ecf\u6d4e\u4e0a\u662f\u4e0d\u53ef\u884c\u7684\uff0c10\u7eb3\u7c73\u6676\u5706\u7684\u8d77\u6b65\u51e0\u4e4e\u4e0d\u5b58\u5728\uff0c10\u7eb3\u7c73\u4e0d\u9002\u5408\u9ad8\u6027\u80fd\u7684\u4ea7\u54c1\uff0c\u82f1\u7279\u5c14\u6b63\u5728\u5c3d\u6700\u5927\u52aa\u529b\u5173\u95ed\u8fd9\u4e2a\u8bdd\u9898\u4e0a\u6700\u6e29\u548c\u7684\u95ee\u9898\u3002\u4ed6\u4eec\u60f3\u8981\u4ee4\u4eba\u9ad8\u5174\u7684\u5934\u6761\u65b0\u95fb\u6765\u8f6c\u79fb\u4eba\u4eec\u5bf9AMD\u62e5\u6709\u4ed6\u4eec\u60f3\u8981\u7684\u4ea7\u54c1\u7684\u4e8b\u5b9e\u7684\u6ce8\u610f\u529b\uff0c\u5e76\u5229\u7528\u8fd9\u4e9b\u4ea7\u54c1\u5728\u5e02\u573a\u4e0a\u51fb\u8d25\u82f1\u7279\u5c14\u3002\u51e0\u4e2a\u5b63\u5ea6\u524d\uff0c\u65af\u6cf0\u897f\u00b7\u62c9\u65af\u8d21(Stacy Rasgon)\u95ee\u82f1\u7279\u5c14\u7ba1\u7406\u5c42\uff0c\u4ed6\u4eec\u4ec0\u4e48\u65f6\u5019\u4f1a\u4ece14\u7eb3\u7c73\u751f\u4ea7\u8fc7\u6e21\u523010\u7eb3\u7c73\u751f\u4ea7\uff0c\u4ed6\u4eec\u56de\u907f\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u4f60\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e86\uff0c\u4ed6\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u8d85\u8fc714\u7eb3\u7c73\u768410\u7eb3\u7c73\u7684\u4ea7\u91cf\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u3002\n\u8fd9\u573a\u707e\u96be\u73b0\u5728\u6b63\u88ab\u82f1\u7279\u5c14(Intel)\u5927\u8086\u5ba3\u626c\uff0c\u5c3d\u7ba1\u662f\u7528\u4ee3\u7801\uff0c\u4f46\u4ed6\u4eec\u4eca\u5929\u5728\u8c08\u8bba\u4ec0\u4e48\u5462\uff1f\u706b\u7bad\u6e56\u662f\u51b0\u6e56\u768414\u6d77\u91cc\u540e\u6e2f\uff0c\u4f7f\u7528\u67cf\u6811\u6e7e\u6838\u5fc3\u3002\u8981\u70b9\u5305\u62ec\u9ad8\u8fbe8C/16T\u3001DDR4/3200\u3001PCIe Gen 4\u3001Xe GPU\u3001\u65b0\u5a92\u4f53\u7f16\u7801\u5668\u3001USB 3.2 Gen 2\u3001\u9ad8\u8fbe3\u4e2a4K\u663e\u793a\u5668\u548cVNNI\u3002\u542c\u8d77\u6765\u4e0d\u9519\uff0c\u5bf9\u5427\uff1f\u5f53\u7136\uff0c\u9664\u975e\u4f60\u95ee\u4e9b\u95ee\u9898\u3002\n\u8ba9\u6211\u4eec\u4ece\u6838\u5fc3\u5f00\u59cb\u3002\u82f1\u7279\u5c14\u79f0\u5176\u4e3aIPC\u6539\u8fdb\u540e\u7684\u201c\u65b0\u201d\uff0c\u4f46\u8fd9\u53ea\u662f\u4e00\u5e74\u591a\u7684\u65e7Ice\u5185\u6838\u540e\u7f6e\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u4ed6\u4eec\u662f\u5bf9\u7684\uff0c\u4f46\u4efb\u4f55\u7406\u667a\u7684\u89c2\u5bdf\u8005\u90fd\u4e0d\u4f1a\u79f0\u8fd9\u662f\u65b0\u7684\uff0c\u9664\u975e\u4ed6\u4eec\u5728\u6280\u672f\u4e0a\u6ca1\u6709\u610f\u8bc6\u5230\uff0c\u4e5f\u6ca1\u6709\u7ed9\u4ed6\u4eec\u63d0\u51fa\u95ee\u9898\u7684\u673a\u4f1a\u3002\u82f1\u7279\u5c14\u6240\u8bf4\u768420\u6761PCIe4\u901a\u9053\u201c\u5141\u8bb8\u56fa\u6001\u786c\u76d8\u548c\u72ec\u7acb\u663e\u5361\u76f4\u63a5\u8fde\u63a5CPU\u201d\u663e\u793a\u4e86\u4ed6\u4eec\u76ee\u524d\u7684\u7ebf\u8def\u6709\u591a\u7cdf\u7cd5\uff0c\u56e0\u4e3a\u4f60\u73b0\u5728\u4e0d\u80fd\u8fd9\u4e48\u505a\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0cAMD\u591a\u5e74\u6765\u4e00\u76f4\u5c0624\u4f5c\u4e3a\u6807\u51c6\u914d\u7f6e\uff0c\u6240\u4ee5\u6700\u597d\u7684\u60c5\u51b5\u662f\u82f1\u7279\u5c14\u4ecd\u7136\u8fdc\u8fdc\u843d\u540e\u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u6ca1\u6709\u7ec6\u5206CPU\u548c\u82af\u7247\u7ec4\u4e0a\u7684\u6570\u91cf\uff0c\u4ee5\u53ca\u82af\u7247\u7ec4\u8fde\u63a5\u6240\u9700\u7684\u6570\u91cf\uff0c\u53ea\u662f\u542b\u7cca\u7684\u63aa\u8f9e\uff0c\u6697\u793a\u5b83\u4eec\u90fd\u76f4\u63a5\u5728CPU\u4e0a\u3002\u8003\u8651\u5230\u82f1\u7279\u5c14\u6700\u8fd1\u5728\u4fe1\u606f\u4e0a\u7684\u8bda\u5b9e\uff0c\u5728\u4f60\u770b\u5230\u771f\u6b63\u7684\u89c4\u683c\u4e4b\u524d\uff0c\u4e0d\u8981\u76f8\u4fe1\u5b83\u3002\u5141\u8bb8\u63d0\u51fa\u771f\u6b63\u7684\u95ee\u9898\u5c06\u4f1a\u6f84\u6e05\u8fd9\u4e00\u70b9\uff0c\u4f46\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u82f1\u7279\u5c14\u4e0d\u987e\u4e00\u5207\u5730\u907f\u514d\u8fd9\u79cd\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5\u3002\n\u65b0\u7684\u5185\u5b58\u63a7\u5236\u5668\u5c06\u8d76\u4e0a\u82f1\u7279\u5c14\u7684AMD\uff0c\u665a\u4e86\u4e00\u5e74\uff0c\u4f46\u8fd9\u6bd4\u4ee5\u524d\u8981\u597d\uff0c\u65b0\u7684USB 3.2\u7b2c\u4e8c\u4ee3\u63a7\u5236\u5668\u4e5f\u662f\u5982\u6b64\u3002\u5a92\u4f53\u7f16\u7801\u5668\u548c\u589e\u52a0\u7684\u663e\u793a\u5206\u8fa8\u7387\u548c\u8f93\u51fa\u90fd\u5f88\u4e0d\u9519\uff0c\u4f46\u51e0\u4e4e\u8d76\u4e0d\u4e0aAMD\u7684\u4e0a\u4e00\u4ee3\u4ea7\u54c1\u3002\u522b\u5fd8\u4e86\uff0c\u706b\u7bad\u6e56\u4e0d\u662f2020\u5e74\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u662f\u4e00\u6b3e2021\u5e74\u7b2c\u4e00\u5b63\u5ea6\u7684\u8bbe\u5907\uff0c\u5e94\u8be5\u5728AMD\u66f4\u65b0\u7684APU\u4e0a\u5e02\u524d\u4e00\u4e24\u4e2a\u6708\u53d1\u5e03\u3002\u795d\u4f60\u597d\u8fd0\uff0c\u51fb\u8d25\u90a3\u4e9b\u540e\u7aef\u4e3a14\u7eb3\u7c73\u7684Zen 3\u6838\u5fc3\u8bbe\u5907\u3002\n\u7136\u540e\u6211\u4eec\u6765\u770b\u6700\u540e\u4e00\u70b9\uff0c\u88ab\u5439\u5618\u4e3a10\u7eb3\u7c73\u6676\u4f53\u7ba1\u8bbe\u8ba1\u7684Xe\u56fe\u5f62\u3002\u5b83\u88ab\u53cd\u5411\u4f20\u8f93\u523014\u7eb3\u7c73\uff0c\u8fd9\u6837\u624d\u80fd\u53d6\u5f97\u80dc\u5229\uff0c\u5bf9\u5417\uff1f\u8fd8\u8bb0\u5f97\u6211\u4eec\u4e0a\u9762\u8bf4\u8fc7\u7684\u540e\u7aef\u7aef\u53e3\u8017\u7535\u3001\u81c3\u80bf\u548c\u901f\u5ea6\u6162\u7684\u95ee\u9898\u5417\uff1f\u82f1\u7279\u5c14\u58f0\u79f0\u706b\u7bad\u7248\u7684GPU\u7684\u6027\u80fd\u6bd4Gen 9\u663e\u5361\u9ad8\u51fa50%\uff01\u54c7!\u3002\u5bf9\u5417\uff1f\u8fd8\u8bb0\u5f97\u90a3\u6bb5\u4e0d\u60f3\u88ab\u95ee\u5230\u7684\u95ee\u9898\u5417\uff1f\nSemiAccurate\u4f1a\u95ee\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a\u201c\u8001\u864e\u6e56\u768410\u7eb3\u7c73Xe\u6bd4\u540c\u6837\u7684Gen 9\u90e8\u4ef6\u5feb2\u500d\u3002\u201d\u4e3a\u4ec0\u4e48\u4f60\u8ba4\u4e3a\u8fd9\u662f\u4e00\u573a\u80dc\u5229\uff0c\u800c\u4e0d\u662f\u4e00\u573a\u8bd5\u56fe\u5206\u6563\u6ce8\u610f\u529b\u7684\u718a\u718a\u707e\u96be\uff1f\u8bf7\u8bb0\u4f4f\uff0c\u6211\u4eec\u53ef\u80fd\u5f97\u4e0d\u5230\u7b54\u590d\uff0c\u4f46\u6211\u4eec\u4f1a\u95ee\uff0c\u4f46\u53ef\u80fd\u4f1a\u7528\u4e00\u79cd\u4e0d\u90a3\u4e48\u53cb\u597d\u7684\u65b9\u5f0f\u3002\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u4e0e10\u7eb3\u7c73\u4e0a\u7684\u76f8\u540c\u67b6\u6784\u76f8\u6bd4\uff0c\u540e\u5411\u7aef\u53e3\u7684\u9762\u79ef\u3001\u6548\u7387\u548c\u539f\u59cb\u6027\u80fd\u635f\u5931\u90fd\u8fbe\u5230\u4e86\u4e24\u4f4d\u6570\u3002\u6ca1\u6709\u82af\u7247\u9762\u79ef\u7684\u6570\u5b57\uff0c\u4f60\u4e0d\u80fd\u8bf4\u82f1\u7279\u5c14\u70e7\u6389\u4e86\u591a\u5c11\u9762\u79ef\u6765\u83b7\u5f97\u8fd9\u4e2a\u635f\u5931\uff0c\u4f46\u6211\u4eec\u4f1a\u5192\u9669\u8bf4\uff0c\u5b83\u6bd410\u7eb3\u7c73\u7684\u7b49\u6548\u82af\u7247\u8981\u5927\u5f97\u591a\u3002\n\u7136\u540e\u6211\u4eec\u6765\u5230\u6838\u5fc3\uff0c\u5168\u90e8\u516b\u4e2a\u6838\u5fc3\u3002\u76ee\u524d\u6700\u9876\u7aef\u768414\u7eb3\u7c73\u90e8\u5206\uff0c10900K\uff0c\u670910\u4e2a\u5185\u6838\uff0c\u8fd0\u884c\u5728\u76f8\u540c\u7684125W TDP\u4e0a\u3002\u5982\u679c\u4f60\u8fd8\u8bb0\u5f97\uff0c\u51b0\u82af\u7684IPC\u6bd414\u7eb3\u7c73\u7684\u589e\u52a0\u4e8618%\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u5b57\uff0c\u76f4\u5230\u4f60\u610f\u8bc6\u5230\u8fd9\u662f\u76f8\u5bf9\u4e8e2015\u5e74\u7684\u51b0\u82af\uff0c\u800c\u52a0\u519c\u6e56\u4e00\u4ee3\u5728\u5386\u53f2\u8bfe\u4e0a\u88ab\u7701\u7565\u4e86\u3002\u4f60\u4e0d\u77e5\u9053AMD\u7684Zen 3\u5185\u6838\u6bd4\u53bb\u5e74\u7684Zen 2\u63d0\u5347\u4e8619%\u3002\u4f46\u5982\u679c\u4f60\u5728\u5199\u4f5c\u4e4b\u524d\u6ca1\u6709\u65f6\u95f4\u601d\u8003\u6216\u63d0\u95ee\uff0c18%\u7684\u6027\u80fd\u63d0\u5347\u4f3c\u4e4e\u76f8\u5f53\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\n\u7136\u540e\u6211\u4eec\u6765\u8ba1\u7b97\u4e00\u4e0b\uff0c\u8fd9\u53ef\u80fd\u4e0d\u662fSemiAccurate\u7684\u5f3a\u9879\uff0c\u4f46\u6211\u4eec\u786e\u5b9e\u8ba4\u4e3a14\u7eb3\u7c7310900K\u768410\u4e2a\u6838\u5fc3\u6bd4\u706b\u7bad\u6e56\u90e8\u5206\u76848\u4e2a\u6838\u5fc3\u591a25%\u3002\u4e8b\u60c5\u53d8\u5f97\u68d8\u624b\u7684\u5730\u65b9\u662f\uff0c25%\u770b\u8d77\u6765\u786e\u5b9e\u6bd418%\u66f4\u5927\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u706b\u7bad\u7684CPU\u6027\u80fd\u9ad8\u8fbe10900K\uff0c\u90a3\u4e48\u5b83\u7684CPU\u6027\u80fd\u53ef\u80fd\u4f1a\u9886\u5148\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u5047\u8bbe\u3002\u8003\u8651\u5230\u540e\u7aef\u53e3\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\uff0c\u589e\u52a0\u80fd\u6e90\u6d88\u8017\uff0c\u4ee5\u53ca\u6240\u6709\u8fd9\u4e9b\uff0c\u8fd9\u4e0d\u592a\u53ef\u80fd\u53d1\u751f\uff0c\u4f46\u5b83\u662f\u53ef\u80fd\u53d1\u751f\u7684\u3002\u518d\u4e00\u6b21\uff0c\u82f1\u7279\u5c14\u8c08\u5230\u4e86\u67b6\u6784\u589e\u5f3a\u548cIPC\uff0c\u4f46\u5947\u602a\u7684\u662f\u5ffd\u7565\u4e86\u4efb\u4f55\u5173\u4e8e\u5b9e\u9645CPU\u6027\u80fd\u7684\u8ba8\u8bba\u3002\u4ed6\u4eec\u786e\u5b9e\u8c08\u5230\u4e86GPU\u7684\u6027\u80fd\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u63a8\u65ad\u51fa\u4f60\u4f1a\u600e\u4e48\u505a\u3002\u6211\u4eec\u5c06\u518d\u6b21\u5192\u9669\u8bf4\uff0c\u57fa\u4e8e\u6211\u4eec\u4e0a\u9762\u8ba8\u8bba\u7684\u539f\u56e0\uff0c\u706b\u7bad\u961f\u5c06\u5728\u5927\u591a\u6570\u57fa\u51c6\u4e0a\u8f93\u7ed9\u76ee\u524d\u7684\u90e8\u5206\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u5141\u8bb8\u63d0\u95ee\uff0c\u7ec6\u8282\u5c31\u4f1a\u516c\u4e4b\u4e8e\u4f17\uff0c\u6709\u6ca1\u6709\u4eba\u518d\u4e00\u6b21\u731c\u6d4b\u4e3a\u4ec0\u4e48\u62ab\u9732\u683c\u5f0f\u4f1a\u6392\u9664\u8fd9\u4e9b\u7ec6\u8282\uff1f\n\u6700\u540e\u4f46\u5e76\u975e\u6700\u4e0d\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u8fd9\u662f\u5bf9\u72c2\u70ed\u8005\u7684\u53c8\u4e00\u6b21\u731b\u70c8\u62a8\u51fb\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e00\u53f0Rocket Lake CPU\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u4e3b\u677f\uff0c\u5b83\u4e0e\u82f1\u7279\u5c14\u5df2\u7ecf\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u4e0d\u517c\u5bb9\uff0c\u800c\u4e14\u8003\u8651\u5230Rocket\u7684\u7834\u89e3\u6027\u8d28\uff0c\u5b83\u4e0d\u592a\u53ef\u80fd\u4e0e\u540e\u6765\u53d1\u5e03\u7684\u4efb\u4f55\u4e1c\u897f\u517c\u5bb9\u3002\u540c\u6837\u7684\u8463\u4e8b\u4f1a\uff0cAMD\u73b0\u5728\u6709\u591a\u5c11\u4ee3\u4eba\uff0c\u6211\u4eec\u5fd8\u4e86\u662f\u4e09\u4ee3\u8fd8\u662f\u56db\u4ee3\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u5982\u679c\u4f60\u6295\u8d44\u4e86\u4e00\u4e2a\u65b0\u7684\u8bbe\u5907\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u901f\u5ea6\u8f83\u6162\u7684\u90e8\u4ef6\u3002\u7b49\u7b49\uff0c\u8fd9\u53ef\u4e0d\u5999\u3002\n\u5982\u679c\u4f60\u8ba4\u4e3a\u706b\u7bad\u6e56\u548c\u67cf\u6811\u6e7e\u6ca1\u6709\u4ec0\u4e48\u597d\u4e1c\u897f\uff0c\u90a3\u4f60\u5c31\u9519\u4e86\uff0c\u6709\u4e00\u4ef6\u4e8b\u82f1\u7279\u5c14\u505a\u5f97\u771f\u7684\u5f88\u5bf9\uff0c\u90a3\u5c31\u662f\u62ab\u9732\u3002\u5373\u4f7f\u662f\u5728\u6700\u7edd\u671b\u7684\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u4e5f\u4f1a\u62ff\u51fa\u81ea\u5df1\u7684\u7cfb\u7edf\u89c4\u683c\uff0c\u4ee5\u4e00\u79cd\u53ef\u91cd\u73b0\u7684\u65b9\u5f0f\u8bb0\u5f55\u4e8b\u60c5\uff0c\u5e76\u4ee5\u6b63\u786e\u7684\u7406\u7531\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u3002\u5e72\u5f97\u597d\uff0c\u82f1\u7279\u5c14\uff0cAMD\u53ef\u4ee5\u5411\u4f60\u5b66\u4e60\uff0c\u4f46\u4ed6\u4eec\u4e0d\u4f1a\u3002\u4f46\u4e0d\u8981\u8ba9\u5b83\u963b\u6b62\u4f60\u5728\u672a\u6765\u505a\u6b63\u786e\u7684\u4e8b\u60c5\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e86\u4ec0\u4e48\u5462\uff1f\u7edd\u671b\u8868\u73b0\u51fa\u6765\uff0c\u6570\u767e\u4e07\u4eba\u6d6a\u8d39\u5728\u5236\u9020\u52a3\u8d28\u4ea7\u54c1\u4e0a\uff0c\u767b\u4e0a\u4e86\u5934\u6761\u3002\u5373\u4f7f\u5728\u90a3\u65f6\uff0c\u82f1\u7279\u5c14\u4e5f\u4e0d\u5f97\u4e0d\u5728\u53d1\u5e03\u65f6\u95f4\u4e0a\u505a\u51fa\u6700\u5351\u9119\u7684\u60ca\u4eba\u4e4b\u4e3e\uff0c\u56e0\u4e3a\u5373\u4f7f\u4ed6\u4eec\u5c3d\u4e86\u6700\u5927\u52aa\u529b\u4e5f\u7ecf\u4e0d\u8d77\u6700\u4f4e\u9650\u5ea6\u7684\u5ba1\u67e5\u3002\u540e\u7aef\u53e3\u53ea\u662f\u4e00\u4e2a\u7edd\u671b\u7684\u574f\u4e3b\u610f\uff0c\u56e0\u4e3a\u82f1\u7279\u5c1410\u7eb3\u7c73\u5236\u7a0b\u6839\u672c\u4e0d\u8d77\u4f5c\u7528\uff0c\u800c\u4e14\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u8d77\u4f5c\u7528\u3002\u4eca\u5e74\u6ca1\u6709\u4ea7\u80fd\uff0c\u6ca1\u6709\u51fa\u8def\uff0c\u4e5f\u7edd\u5bf9\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u5bf9\u6297AMD\u7684\u3002\u6216\u8005\u662f\u4e0b\u4e00\u4e2a\u3002\u6216\u80052022\u5e74\uff0c\u8fd9\u771f\u7684\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u60c5\u51b5\u3002\u706b\u7bad\u6e56\u4e0d\u4f1a\u5c06\u6307\u9488\u5411\u524d\u79fb\u52a8\uff0c\u4f46\u53ef\u80fd\u4f1a\u5c06\u5176\u5411\u540e\u79fb\u52a8\uff0c\u8fd9\u662f\u82f1\u7279\u5c14\u81ea\u5df1\u9020\u6210\u7684\u4e00\u957f\u4e32\u4f24\u53e3\u4e2d\u7684\u53e6\u4e00\u4e2a\u3002\u8bf7\u522b\u518d\u6316\u4e86\uff0c\u8fd9\u592a\u75db\u4e86\u3002S|A\u3002\n\u4ee5\u4e0b\u4e24\u4e2a\u9009\u9879\u5361\u53ef\u66f4\u6539\u4e0b\u9762\u7684\u5185\u5bb9\u3002\u67e5\u7406\u00b7\u5fb7\u6885\u5c14\u5efa\u662fStone Arch Networking Services\u548cSemiAccurate.com\u7684\u521b\u59cb\u4eba\u3002SemiAccurate.com\u662f\u4e00\u4e2a\u6280\u672f\u65b0\u95fb\u7f51\u7ad9\uff0c\u5185\u5bb9\u6d89\u53ca\u786c\u4ef6\u8bbe\u8ba1\u3001\u8f6f\u4ef6\u9009\u62e9\u3001\u5b9a\u5236\u3001\u5b89\u5168\u548c\u7ef4\u62a4\uff0c\u6bcf\u6708\u6d4f\u89c8\u91cf\u8d85\u8fc7100\u4e07\u6b21\u3002\u4ed6\u662f\u4e13\u95e8\u7814\u7a76\u534a\u5bfc\u4f53\u3001\u7cfb\u7edf\u548c\u7f51\u7edc\u67b6\u6784\u7684\u6280\u672f\u4e13\u5bb6\u548c\u5206\u6790\u5e08\u3002\u4f5c\u4e3aSemiAccurate.com\u7684\u9996\u5e2d\u64b0\u7a3f\u4eba\uff0c\u4ed6\u7ecf\u5e38\u5c31\u6280\u672f\u95ee\u9898\u548c\u957f\u671f\u5f15\u9886\u7684\u884c\u4e1a\u8d8b\u52bf\u5411\u4f5c\u5bb6\u3001\u5206\u6790\u5e08\u548c\u884c\u4e1a\u9ad8\u7ba1\u63d0\u4f9b\u5efa\u8bae\u3002\u67e5\u7406\u4e5f\u53ef\u4ee5\u901a\u8fc7Guidepoint\u548cMosaic\u83b7\u5f97\u3002FullyAccurate", "note_en": "Intel is desperate for positive news and they are doing the usual last-minute games to try and spin hard. This time around they are announcing Rocket Lake which SemiAccurate can tell you is a dog.\n Lets start out with the bad before we get to the really bad followed by a glimmer of hope. Intel is getting beaten like a drum in the CPU market. Yields on 10nm are still not economically viable and never will be, their cries of, \u201cit is better than expected\u201d and, \u201cyields are improving fast\u201d seem to always omit the baseline. The numbers SemiAccurate knows are still startling bad which is why Intel is intentionally limiting 10nm wafer starts to a paltry number.\n Things like this tend to come out when Intel lets the press ask questions so as is their norm they sent an unannounced \u2018briefing\u2019 deck, nothing more than a few chirpy bullet points really, at 7:33pm, 13 hours and 27 minutes before the embargo lift. The intent is obviously to have as many people as possible miss it until the last second so they don\u2019t have time to think about how bad this part is much less ask questions. Any that are asked will be sent in after business hours on the west coast so they might get a response a few minutes before the deadline. This intentional but plausibly deniable stiff-arming of questions is a sure sign the product is a dog, and trust us this one is. Sleazy moves Intel.\n Now on to the really bad, this Rocket Lake part and the \u2018new\u2019 Cypress Cove core. We will admit we were wrong when we said that Intel would never backport a 10nm architecture to a 14nm process because that is exactly what Rocket/Cypress is, take Ice Lake and backport it. Also backport the Xe GPUs and slap them on for good measure.\n   What we should have said is that Intel would never be dumb enough to backport a 10nm architecture that was not designed with process portability in mind to a 14nm process. It would be too big, too inefficient, and simply not competitive with IP blocks designed and tuned for 14nm from the start. A company would need to be desperate and have their backs to the wall so badly that flushing tens of millions of dollars on this port for nothing more than a headline grab and an eventual black eye is worth it. That\u2019s what we should have said but we would have been wrong there too, Intel it seems _IS_ that dumb.\n Why is Rocket/Cypress so bad? If you look at the layout of modern CPUs on differing processes, the core area doesn\u2019t go down much with a shrink. Wider datapaths, ISAs like AVX-512 and VNNI, and other bloats like increased caches grow the core area to something close to what it was on the older process. You get more features and higher core IPC but not a smaller one.\n Companies don\u2019t backport because a core is designed for a process. It\u2019s efficiency and architecture is based on the transistors that it will use from the design start, caches are sized based on the process too, and a lot of the architectural gains are due to the added transistor counts. If you backport a CPU you lose the efficiency of these new transistors so the energy use goes up and the clocks likely go down as well. Cores take up 2x the size, or at least a lot more than the older core did on the older process, so costs go up too. You can either cut out bits of the core and lose performance or eat it on area and therefor cost. Backporting a design not made for portability isn\u2019t a lose/lose proposition, it is a lose/lose/lose/lose proposition. But Intel is desperate so\u2026\n On top of this there are a few more fundamental takeaways. Intel can\u2019t make 10nm devices, yield still isn\u2019t there and Rocket/Cypress is a shining example of the problem. Intel\u2019s 10nm process is unsuitable for high performance, high power devices. We can\u2019t explain the details yet, it will take some digging, but if Intel needed a 10nm halo product, this would be it. Rocket Lake is 14nm.\n Lastly it shows SemiAccurate was right about the stunningly low 10nm wafer start capacity, we have been saying for over a year that Intel is intentionally misleading anyone listening about their 10nm capacity, Rocket/Cypress is again a shining example of the numbers we have been talking about. Intel doesn\u2019t have 10nm capacity, period, their total wafer starts are far less than a full modern fab worth but they spread it across three sites to misdirect. No one asks the right questions about this which is what Intel wants.\n So the backport is a desperate attempt to spin a headline from a shatteringly bad idea. 10nm yields are not economically viable, 10nm wafer starts are barely extant, 10nm is unsuited for high performance products, and Intel is doing their damnedest to shut down even the tamest questions on the topic. They want happy headlines to distract from the fact that AMD has the product they want and is using them to beat Intel into the ground in the market. Several quarters ago Stacy Rasgon asked Intel management when they would cross over from 14nm to 10nm production and they dodged the question. Now you know why, they never will exceed 14nm production with 10nm, ever.\n   With this disaster now being shouted about by Intel, albeit in code, what are they talking about today? Rocket Lake is the 14nm backport of Ice Lake and uses the Cypress Cove core. The bullet points are up to 8C/16T, DDR4/3200, PCIe Gen 4, Xe GPU, new media encoders, USB 3.2 Gen 2, up to 3 4K monitors, and VNNI. Sounds good right? Sure until you ask some questions.\n Lets start out with the core. Intel calls it \u201cnew\u201d with IPC improvement but it is just the year plus old Ice core backported. Technically they are right but no sane observer would call that new unless they were technically unaware and not given the chance to ask questions. The 20 PCIe4 lanes which Intel says, \u201cAllows both SSD and Discrete Graphics Direct CPU Attach\u201d shows just how bad their current line is because you can\u2019t do that now.\n That said AMD has been offering 24 as standard for years now so best case Intel is still way behind. That said they don\u2019t break down how many are on the CPU and how many are on the chipset, plus how many are needed for the chipset connection, just vague wording that implies they are all directly on the CPU. Given Intel\u2019s honesty in messaging of late, don\u2019t believe it until you see the real specs. Allowing real questions would clear this up but for some reason Intel is desperate to avoid that eventuality.\n The new memory controller will catch Intel up to AMD, a year late but that is better than before, as will the new USB 3.2 Gen 2 controllers. The media encoders and added display resolutions and outputs are nice but barely catch up to AMD\u2019s last gen part. Don\u2019t forget Rocket Lake is not a 2020 part, it is a Q1 2021 device that should be out a month or two before AMD\u2019s updated APUs hit. Good luck beating those Zen 3 cored devices with a 14nm backport.\n Then we come to the last bit, the vaunted Xe graphics designed for 10nm transistors. It is backported to 14nm so onward to victory, right? Remember what we said above about backports being power hungry, bloated, and slow? Well Intel is claiming that the GPU in Rocket has 50% more performance than Gen 9 graphics! Wow! Right? Remember that bit about not wanting questions asked?\n The first one SemiAccurate would ask would be along the lines of, \u201cXe on 10nm in Tiger Lake guise is 2x faster than that same Gen 9 part. Why do you spin this as a win rather than a flaming disaster wrapped in a distraction attempt?\u201d We probably wouldn\u2019t get an answer mind you but we would ask but probably in a less friendly way. As you can see the area, efficiency, and raw performance losses of backporting lost double digit performance versus the same architecture on 10nm. Without die area figures you can\u2019t tell how much area Intel burnt to get this loss but we will go out on a limb and say it is substantially larger than the 10nm equivalent.\n Then we come to the cores, all eight of them. The current top 14nm part, the 10900K, has 10 cores and runs at the same 125W TDP. If you recall that  Ice core has a 18% IPC increase over the 14nm cores which is a great number until you realize that is against a 2015 core and the Cannon Lake generation was omitted from the history lesson. And you don\u2019t know that  AMD\u2019s Zen 3 core is a 19% uplift from last year\u2019s Zen 2. But if you don\u2019t have time to think or ask questions before you write, that performance increase of 18% seems pretty darn impressive.\n Then we come to the math which may not be SemiAccurate\u2019s strong point but we do think that the 14nm 10900K\u2019s 10 cores are 25% more than the 8 cores in the Rocket Lake part. Where things get tricky is that 25% does indeed seem like a bigger number than 18%. Actually Rocket may have the lead in CPU performance if, and it is a big if, it clocks as high as the 10900K. Given how badly a backport hobbles performance, increases energy use, and all of that, this is unlikely but it could happen. Then again Intel talks about architectural enhancements and IPC but curiously omits any talk of actual CPU performance. They do talk about GPU performance so infer what you will. We will again go out on a limb and say that Rocket will lose to the current parts on most benchmarks for the reasons we discussed above. The details would come out if questions were allowed though, once again any guesses why the disclosure format precluded them?\n Last but not least is another kick in the teeth to enthusiasts. If you want a Rocket Lake CPU you will need a new motherboard, it isn\u2019t compatible with anything Intel has done and given the hacky nature of Rocket, it is unlikely to be compatible with anything that come out later. How many generations is AMD on for the same boards now, is it three or four, we forget. Either way if you invest in a new setup you get a slower part. Wait, that\u2019s not good.\n If you think there is nothing good about Rocket Lake and Cypress Cove you would be wrong, there is one thing that Intel is doing really right, disclosure. Even for the most desperate bullet point regurgitation they put out their system specs, documented things in a way that is recreatable, and did the right thing for the right reasons. Well done Intel, AMD could learn from you but they won\u2019t. Don\u2019t let it stop you from doing the right thing in the future though.\n So in the end what do we have? Desperation on display and millions squandered to make an inferior product for grabbing headlines. Even then Intel had to pull the sleaziest of stuns with the release timing because even their best efforts won\u2019t stand up to minimal scrutiny. The backport is just a bad idea borne of desperation because the Intel 10nm process simply doesn\u2019t work and never will. There is no capacity, no way out, and absolutely nothing to counter AMD with this year. Or next. Or 2022, it really is that dire of a situation. Rocket Lake will do nothing to move the needle forward but could move it back, another in the long line of Intel\u2019s self-inflicted wounds. Please stop digging, this is getting too painful. S|A\n The following two tabs change content below.  Charlie Demerjian is the founder of Stone Arch Networking Services and SemiAccurate.com. SemiAccurate.com is a technology news site; addressing hardware design, software selection, customization, securing and maintenance, with over one million views per month. He is a technologist and analyst specializing in semiconductors, system and network architecture. As head writer of SemiAccurate.com, he regularly advises writers, analysts, and industry executives on technical matters and long lead industry trends. Charlie is also available through   Guidepoint and   Mosaic.   FullyAccurate", "posttime": "2020-11-07 11:21:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u706b\u7bad,\u82f1\u7279\u5c14,palpable", "title": "\u82f1\u7279\u5c14\u5728\u706b\u7bad\u6e56\u4e0a\u8868\u73b0\u51fa\u660e\u663e\u7684\u7edd\u671b", "title_en": "Intel\u2019s palpable desperation on display with Rocket Lake", "transed": 1, "url": "https://semiaccurate.com/2020/10/29/intels-palpable-desperation-on-display-with-rocket-lake/", "via": "", "real_tags": ["\u706b\u7bad", "\u82f1\u7279\u5c14", "palpable"]}, {"category": "", "categoryclass": "", "imagename": "4908ad1a9118dac7e46094bc1f8b509a.jpg", "infoid": 1033640, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u94f6\u6cb3\u7cfb\u5b87\u5b99\u548c\u592a\u9633\u7d2b\u5916\u7ebf\u8f90\u5c04\u3001\u6781\u7aef\u771f\u7a7a\u3001\u6e29\u5ea6\u6ce2\u52a8\uff1a\u5728\u592a\u7a7a\u4e2d\u66b4\u9732\u5728\u8fd9\u4e9b\u6311\u6218\u4e0b\u7684\u5fae\u751f\u7269\u5982\u4f55\u751f\u5b58\uff1f\u7ef4\u4e5f\u7eb3\u5927\u5b66\u7684\u4e00\u4e2a\u56f4\u7ed5\u7a7a\u95f4\u751f\u7269\u5316\u5b66\u5c0f\u7ec4\u7684\u56fd\u9645\u56e2\u961f\u8c03\u67e5\u4e86\u5728\u592a\u7a7a\u5b58\u6d3b\u7684\u5fae\u751f\u7269\u5982\u4f55\u5728\u4ece\u4e00\u4e2a\u5929\u4f53\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5929\u4f53\u7684\u8fc7\u7a0b\u4e2d\u5b58\u6d3b\u4e0b\u6765\u3002\u4ed6\u4eec\u7684\u7814\u7a76\u52a0\u6df1\u4e86\u5bf9\u5916\u5c42\u7a7a\u95f4\u5fae\u751f\u7269\u751f\u5b58\u7684\u5206\u5b50\u673a\u5236\u7684\u7406\u89e3\u3002\u8fd9\u9879\u7814\u7a76\u7ed3\u679c\u53d1\u8868\u5728\u5f71\u54cd\u529b\u5f88\u5927\u7684\u671f\u520a\u201c\u5fae\u751f\u7269\u7ec4\u201d(Microbiome)\u4e0a\u3002\u81ea\u4ece\u592a\u7a7a\u63a2\u7d22\u5f00\u59cb\u4ee5\u6765\uff0c\u4eba\u7c7b\u5c31\u4e00\u76f4\u5bf9\u5916\u5c42\u7a7a\u95f4\u7684\u9646\u5730\u751f\u547d\u7684\u751f\u5b58\u7740\u8ff7\u3002\u5916\u5c42\u7a7a\u95f4\u5bf9\u4efb\u4f55\u5f62\u5f0f\u7684\u751f\u547d\u90fd\u662f\u4e0d\u5229\u7684\u73af\u5883\uff0c\u4f46\u4e00\u4e9b\u6781\u5177\u62b5\u6297\u529b\u7684\u5fae\u751f\u7269\u53ef\u4ee5\u5b58\u6d3b\u3002\u8fd9\u4e9b\u6781\u7aef\u7ec6\u83cc\u53ef\u80fd\u4f1a\u5728\u884c\u661f\u4e4b\u95f4\u8fc1\u5f99\uff0c\u5e76\u5728\u5b87\u5b99\u4e2d\u5206\u5e03\u751f\u547d\uff0c\u8fd9\u662f\u7cbe\u5b50\u5b66\u5047\u8bf4\u6216\u661f\u9645\u751f\u547d\u8f6c\u79fb\u7684\u57fa\u7840\u3002\u6781\u7aef\u7ec6\u83cc\u8010\u8f90\u5c04\u7403\u83cc\u8010\u53d7\u5916\u592a\u7a7a\u7684\u5267\u70c8\u5f71\u54cd\uff1a\u94f6\u6cb3\u7cfb\u5b87\u5b99\u548c\u592a\u9633\u7d2b\u5916\u7ebf\u8f90\u5c04\u3001\u6781\u7aef\u771f\u7a7a\u3001\u6e29\u5ea6\u6ce2\u52a8\u3001\u5e72\u71e5\u3001\u51bb\u7ed3\u548c\u5fae\u91cd\u529b\u3002\u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76\u4ece\u5206\u5b50\u6c34\u5e73\u4e0a\u8003\u5bdf\u4e86\u5916\u5c42\u7a7a\u95f4\u5bf9\u8fd9\u79cd\u72ec\u7279\u5fae\u751f\u7269\u7684\u5f71\u54cd\u3002\u5728\u4e39\u6ce2\u6ce2\u592a\u7a7a\u4efb\u52a1\u671f\u95f4\uff0c\u5728\u56fd\u9645\u7a7a\u95f4\u7ad9\u5916\u66b4\u9732\u4e86\u4e00\u5e74\u7684\u8fd1\u5730\u8f68\u9053(LEO)\u540e\uff0c\u7814\u7a76\u53d1\u73b0\uff0c\u8010\u8f90\u5c04\u675c\u6c0f\u83cc\u9003\u8131\u4e86\u5f62\u6001\u635f\u4f24\uff0c\u5e76\u4ea7\u751f\u4e86\u5927\u91cf\u7684\u5916\u819c\u56ca\u6ce1\u3002\u4e00\u79cd\u591a\u65b9\u9762\u7684\u86cb\u767d\u8d28\u548c\u57fa\u56e0\u7ec4\u53cd\u5e94\u88ab\u542f\u52a8\uff0c\u4ee5\u7f13\u89e3\u7ec6\u80de\u538b\u529b\uff0c\u5e2e\u52a9\u7ec6\u83cc\u4fee\u590dDNA\u635f\u4f24\uff0c\u5e76\u9632\u5fa1\u6d3b\u6027\u6c27\u7269\u79cd\u3002\u4f5c\u4e3a\u5bf9\u7a7a\u95f4\u66b4\u9732\u7684\u56de\u5e94\uff0c\u6f5c\u5728\u7684\u8fd0\u8f93\u548c\u80fd\u91cf\u72b6\u6001\u7684\u8fc7\u7a0b\u53d1\u751f\u4e86\u53d8\u5316\u3002D.Radiodurans\u4f7f\u7528\u539f\u59cb\u538b\u529b\u5206\u5b50\u591a\u80fa\u8150\u80fa\u4f5c\u4e3a\u4ece\u592a\u7a7a\u66b4\u9732\u518d\u751f\u671f\u95f4\u7684\u6d3b\u6027\u6c27\u6e05\u9664\u5242\u3002\u8fd9\u4e9b\u8c03\u67e5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u751f\u547d\u5728\u5730\u7403\u4e4b\u5916\u751f\u5b58\u7684\u673a\u5236\u548c\u8fc7\u7a0b\uff0c\u6269\u5927\u6211\u4eec\u5bf9\u5982\u4f55\u5728\u6076\u52a3\u7684\u5916\u5c42\u7a7a\u95f4\u73af\u5883\u4e2d\u751f\u5b58\u548c\u9002\u5e94\u7684\u8ba4\u8bc6\u3002\u7ef4\u4e5f\u7eb3\u5927\u5b66\u7a7a\u95f4\u751f\u7269\u5316\u5b66\u5c0f\u7ec4\u7ec4\u957f\u3001\u8be5\u7814\u7a76\u7684\u901a\u8baf\u4f5c\u8005Tetana Milojevic\u8bf4\uff0c\u7814\u7a76\u7ed3\u679c\u8868\u660e\uff0c\u7531\u4e8e\u5176\u9ad8\u6548\u7684\u5206\u5b50\u53cd\u5e94\u7cfb\u7edf\uff0c\u8010\u8f90\u5c04D\u83cc\u6709\u53ef\u80fd\u5728\u72ee\u5b50\u5ea7\u4e2d\u5b58\u6d3b\u66f4\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u5e76\u8868\u660e\u5177\u6709\u8fd9\u79cd\u80fd\u529b\u7684\u751f\u7269\u4f53\u53ef\u4ee5\u8d70\u5f97\u66f4\u8fdc\uff0c\u8d70\u5f97\u66f4\u8fdc\u3002\u7c73\u6d1b\u8036\u7ef4\u5947\u662f\u7ef4\u4e5f\u7eb3\u5927\u5b66\u7a7a\u95f4\u751f\u7269\u5316\u5b66\u5c0f\u7ec4\u7684\u8d1f\u8d23\u4eba\uff0c\u4e5f\u662f\u8fd9\u9879\u7814\u7a76\u7684\u901a\u8baf\u4f5c\u8005\u3002\u7814\u7a76\u4eba\u5458\u4e0e\u6765\u81ea\u4e1c\u4eac\u836f\u5b66\u548c\u751f\u547d\u79d1\u5b66\u5927\u5b66(\u65e5\u672c)\u3001\u5fb7\u56fd\u822a\u7a7a\u822a\u5929\u4e2d\u5fc3(\u5fb7\u56fd\u822a\u5929\u4e2d\u5fc3\uff0c\u79d1\u9686)\u3001\u7ef4\u4e5f\u7eb3\u5927\u5b66\u7ef4\u4e5f\u7eb3\u4ee3\u8c22\u7ec4\u5b66\u4e2d\u5fc3(ViMe)\u548c\u683c\u62c9\u8328\u533b\u79d1\u5927\u5b66\u5fae\u751f\u7269\u7ec4\u7814\u7a76\u4e2d\u5fc3\u7684\u540c\u4e8b\u4eec\u4e00\u8d77\uff0c\u56de\u7b54\u4e86\u6781\u7aef\u5fae\u751f\u7269\u80fd\u591f\u5fcd\u53d7\u591a\u5927\u7a0b\u5ea6\u7684\u6781\u7aef\u7a7a\u95f4\u6761\u4ef6\u7684\u95ee\u9898\u3002\u5fae\u751f\u7269\u7ec4\u53d1\u8868\u4e8e\uff1aD.K\u00f6lbl\uff0cE.Rabbow\uff0cP.Rettberg\uff0cM.Mora\uff0cC.Moissl-Eichinger\uff0cW.Weckwerth\uff0cA.Yamagishi\uff0cT.Milojevic&34\uff1b\u5728Tanpopo\u4efb\u52a1\u4e2d\u66b4\u9732\u5728\u56fd\u9645\u7a7a\u95f4\u7ad9\u5916\u4e00\u5e74\u540e\u7684\u8010\u8f90\u5c04\u7403\u83cc\u5206\u5b50\u8c31\u7cfb\u3002", "note_en": "Galactic cosmic and solar UV radiation, extreme vacuum, temperature fluctuations: how can microbes exposed to these challenges in space survive? An international team around Space Biochemistry group at the University of Vienna investigated how the space-surviving microbes could physically survive the transfer from one celestial body to another. Their study provides a deeper understanding of molecular mechanisms of microbial survivability in outer space. The results are published in the high-impact journal &#34;Microbiome&#34;.   Since the dawn of space exploration, humankind has been fascinated by survival of terrestrial life in outer space. Outer space is a hostile environment for any form of life, but some extraordinarily resistant microorganisms can survive. Such extremophiles may migrate between planets and distribute life across the Universe, underlying the panspermia hypothesis or interplanetary transfer of life.   The extremophilic bacterium Deinococcus radiodurans withstands the drastic influence of outer space: galactic cosmic and solar UV radiation, extreme vacuum, temperature fluctuations, desiccation, freezing, and microgravity. A recent study examined the influence of outer space on this unique microbe on a molecular level. After 1 year of exposure to low Earth orbit (LEO) outside the International Space Station during the Tanpopo space Mission, researches found that D. radiodurans escaped morphological damage and produced numerous outer membrane vesicles. A multifaceted protein and genomic responses were initiated to alleviate cell stress, helping the bacteria to repair DNA damage and defend against reactive oxygen species. Processes underlying transport and energy status were altered in response to space exposure. D. radiodurans used a primordial stress molecule polyamine putrescine as a reactive oxygen species scavenger during regeneration from space exposure.   &#34;These investigations help us to understand the mechanisms and processes through which life can exist beyond Earth, expanding our knowledge how to survive and adapt in the hostile environment of outer space. The results suggest that survival of D. radiodurans in LEO for a longer period is possible due to its efficient molecular response system and indicate that even longer, farther journeys are achievable for organisms with such capabilities&#34; says Tetyana Milojevic, a head of Space Biochemistry group at the University of Vienna and a corresponding author of the study.   Together with the colleagues from Tokyo University of Pharmacy and Life Science (Japan), Research Group Astrobiology at German Aerospace Center (DLR, Cologne), Vienna Metabolomics Centre (ViMe) at the University of Vienna and Center for Microbiome Research at Medical University Graz, researches answered the question not only till which extend but how extremophilic microbes can tolerate drastic space conditions.    Publication in &#34;Microbiome&#34;: D. K\u00f6lbl, E. Rabbow, P. Rettberg, M. Mora, C. Moissl-Eichinger, W. Weckwerth, A. Yamagishi, T. Milojevic &#34;Molecular repertoire of Deinococcus radiodurans after 1 year of exposure outside the International Space Station within the Tanpopo mission.&#34; Microbiome 8, 150 (2020).", "posttime": "2020-11-07 11:21:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u592a\u7a7a,\u7ec6\u83cc,bacteria,\u7814\u7a76", "title": "\u6781\u7aef\u7ec6\u83cc\u5982\u4f55\u5728\u592a\u7a7a\u4e2d\u5b58\u6d3b\u4e00\u5e74", "title_en": "How extremophilic bacteria survive in space for one year", "transed": 1, "url": "https://medienportal.univie.ac.at/presse/aktuelle-pressemeldungen/detailansicht/artikel/microbial-space-travel-on-a-molecular-scale/", "via": "", "real_tags": ["\u592a\u7a7a", "\u7ec6\u83cc", "bacteria", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "69519f94129caa63d81ae5b02d843a26.jpeg", "infoid": 1033639, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u9879\u76ee\u662f\u4e00\u4e2a\u5f15\u64ce\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u521b\u5efa/\u6d4b\u8bd5\u5b9e\u65f6\u7269\u7406\u5149\u7ebf\u8ddf\u8e2a\u7cfb\u7edf\u4e2d\u7684\u65b0\u7740\u8272\u5668\u3002\u5176\u4e3b\u8981\u601d\u60f3\u662f\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u9884\u5b9a\u4e49\u7684\u73af\u5883\u4e2d\u4f7f\u7528\u7f51\u683c\u3001\u6750\u8d28\u3001\u706f\u5149\u548c\u7eb9\u7406\u7b49\u8d44\u6e90\u6d4b\u8bd5\u81ea\u5df1\u7684\u79ef\u5206\u5668\u3002Vulkan\u7ba1\u9053\u662f\u4ee5\u7740\u8272\u5668\u7684\u5f62\u5f0f\u62bd\u8c61\u51fa\u6765\u7684\uff0c\u7528\u6237\u552f\u4e00\u5173\u5fc3\u7684\u5c31\u662f\u63d0\u4f9b\u4ed6\u4eec\u81ea\u5df1\u7684\u573a\u666f\u63cf\u8ff0\uff0c\u6216\u8005\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u573a\u666f\u63cf\u8ff0\u3002\n\u5bf9\u4e8e\u7740\u8272\u5668\u7f16\u8bd1\uff0c\u60a8\u5c06\u9700\u8981\u4eceShell\u7ea7\u522b\u83b7\u5f97\u7684python\u548cglslc\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5728C\uff1a/VulkanSDK/x.x/bin32/glslc.exe\u4e2d\u627e\u5230glslc\u3002\n\u573a\u666f\u63cf\u8ff0\u548c\u8d44\u6e90\u53d6\u81eaGLSL-PathTracer\u9879\u76ee[4]\u3002\u53ef\u4ee5\u4eceLINK\u4e0b\u8f7d\u6574\u4e2a\u6570\u636e\u96c6\u3002\n\u4e0b\u8f7dAssets\u6587\u4ef6\u5939\u5e76\u5c06\u5176\u653e\u5728PBRVulkan/sets/Scenes/\u4e2d\u3002\u6587\u4ef6\u5939\u7ed3\u6784\u5fc5\u987b\u5982\u4e0b\u6240\u793a\uff1a", "note_en": "This project is an engine where you can create/test new shaders in real-time physically based ray tracing system. The main idea is that users can test their own integrators in predefined environment with assets like: meshes, materials, lights and textures. The Vulkan pipeline is abstracted in a shaders form and the only concern for a user is providing either their own scene description or using already existing one.\n    For shaders compliation you will need  python and  glslc available form the shell level.  glslc can be found for instance in  C:/VulkanSDK/x.x.x.x/Bin32/glslc.exe.\n      The scene description and assets are taken from  GLSL-PathTracer project [4]. The whole dataset can be downloaded from  link.\n Download the assets folder and place it in  PBRVulkan/Assets/Scenes/. The folder strucutre has to be as follows:", "posttime": "2020-11-07 11:21:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c04\u7ebf,tracer,\u7740\u8272\u5668", "title": "\u4f0f\u5c14\u574e\u7684\u5c04\u7ebf\u8ffd\u8e2a\u8005\u6c99\u76d2(Ray Tracer Sandbox)", "title_en": "Ray Tracer Sandbox in Vulkan", "transed": 1, "url": "https://github.com/Zielon/PBRVulkan", "via": "", "real_tags": ["\u5c04\u7ebf", "tracer", "\u7740\u8272\u5668"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033638, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u60f3\u8981\u5ba3\u5e03\u4e00\u4e2a\u91cd\u8981\u7684\u6d88\u606f\uff0c\u5173\u4e8ePyMC\u7684\u53d1\u5c55\u65b9\u5411\uff0c\u6211\u4eec\u662f\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\uff0c\u4ee5\u53ca\u6211\u4eec\u9009\u62e9\u8fd9\u4e2a\u65b9\u5411\u7684\u539f\u56e0\u662f\u4ec0\u4e48\u3002\nTL\uff1bDR\uff1a\u57fa\u4e8eTheano\u7684PyMC3\u548c\u65b0\u7684JAX\u540e\u7aef\u662f\u672a\u6765\u7684\u8d8b\u52bf\uff0c\u57fa\u4e8eTensorFlow\u6982\u7387\u7684PyMC4\u5c06\u4e0d\u4f1a\u8fdb\u4e00\u6b65\u5f00\u53d1\u3002\n2017\u5e74\uff0cTheano\u7684\u539f\u8457\u4f5c\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u5c06\u505c\u6b62\u5f00\u53d1\u4ed6\u4eec\u7684\u4f18\u79c0\u56fe\u4e66\u9986\u3002\u8fd9\u8ba9\u4f9d\u8d56Theano\u4f5c\u4e3a\u5176\u8ba1\u7b97\u540e\u7aef\u7684PyMC3\u9677\u5165\u4e86\u56f0\u5883\uff0c\u5e76\u4fc3\u4f7f\u6211\u4eec\u5f00\u59cb\u5f00\u53d1\u57fa\u4e8eTensorFlow\u7684PyMC4\u3002\u901a\u8fc7\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u5728TF\u4e2d\u6784\u5efa\u4ea4\u4e92\u5f0f\u6982\u7387\u7f16\u7a0b\u5e93\u5e76\u4e0d\u50cf\u6211\u4eec\u60f3\u8c61\u7684\u90a3\u4e48\u5bb9\u6613(\u4e0b\u9762\u5c06\u8be6\u7ec6\u4ecb\u7ecd)\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u4e3a\u4e86\u5ef6\u957fPyMC3\u7684\u4f7f\u7528\u5bff\u547d\uff0c\u6211\u4eec\u4ece\u7531Theano-PyMC\u4e3b\u6301\u7684Mila\u56e2\u961f\u624b\u4e2d\u63a5\u7ba1\u4e86Theano\u7684\u7ef4\u62a4\u5de5\u4f5c\u3002\u4f7f\u7528Theano\u4ee3\u7801\u5e93\uff0c\u6211\u4eec\u610f\u8bc6\u5230\u6211\u4eec\u9700\u8981\u7684\u4e00\u5207\u90fd\u5df2\u7ecf\u5b58\u5728\u3002\u6b64\u5916\uff0c\u6211\u4eec\u770b\u5230\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u6709\u524d\u9014\u7684\u65b9\u5f0f\u6269\u5c55\u4ee3\u7801\u5e93\uff0c\u4f8b\u5982\u901a\u8fc7\u6dfb\u52a0\u5bf9\u65b0\u7684\u6267\u884c\u540e\u7aef(\u5982JAX)\u7684\u652f\u6301\u3002\n\u8fd9\u4e2a\u60f3\u6cd5\u662f\u8fd9\u6837\u7684\uff1aTheano\u6784\u5efa\u4e86\u4e00\u4e2a\u9759\u6001\u7684\u8fd0\u7b97\u56fe(\u201cOps\u201d)\uff0c\u4ee5\u4fbf\u6309\u987a\u5e8f\u6267\u884c\u3002\u8fd9\u79cd\u56fe\u8868\u7ed3\u6784\u975e\u5e38\u6709\u7528\uff0c\u539f\u56e0\u6709\u5f88\u591a\uff1a\u60a8\u53ef\u4ee5\u901a\u8fc7\u878d\u5408\u8ba1\u7b97\u6765\u8fdb\u884c\u4f18\u5316\uff0c\u6216\u8005\u7528\u6570\u503c\u4e0a\u66f4\u7a33\u5b9a\u7684\u66ff\u4ee3\u65b9\u6848\u66ff\u6362\u67d0\u4e9b\u64cd\u4f5c\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u60a8\u53ef\u4ee5\u83b7\u53d6\u8be5\u56fe\u5e76\u5c06\u5176\u7f16\u8bd1\u5230\u4e0d\u540c\u7684\u6267\u884c\u540e\u7aef\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cTheano\u652f\u6301\u4e24\u4e2a\u6267\u884c\u540e\u7aef(\u5373Ops\u7684\u5b9e\u73b0)\uff1aPython\u548cC\u3002\n\u53ef\u4ee5\u7406\u89e3\uff0cPython\u540e\u7aef\u901f\u5ea6\u5f88\u6162\uff0c\u56e0\u4e3a\u5b83\u4e3b\u8981\u4f7f\u7528\u94fe\u63a5\u5728\u4e00\u8d77\u7684NumPy\u51fd\u6570\u6765\u8fd0\u884c\u60a8\u7684\u56fe\u5f62\u3002\u56e0\u6b64\uff0c\u5c31\u901f\u5ea6\u800c\u8a00\uff0cTheano\u4f9d\u8d56\u4e8e\u5b83\u7684C\u540e\u7aef(\u4e3b\u8981\u662f\u7528CPython\u5b9e\u73b0\u7684)\u3002\u7ecf\u8fc7\u56fe\u5f62\u8f6c\u6362\u548c\u7b80\u5316\u540e\uff0c\u751f\u6210\u7684\u64cd\u4f5c\u88ab\u7f16\u8bd1\u6210\u5b83\u4eec\u76f8\u5e94\u7684C\u7c7b\u4f3c\u7269\uff0c\u7136\u540e\u751f\u6210\u7684C\u6e90\u4ee3\u7801\u6587\u4ef6\u88ab\u7f16\u8bd1\u5230\u4e00\u4e2a\u5171\u4eab\u5e93\u4e2d\uff0c\u7136\u540e\u7531Python\u8c03\u7528\u8be5\u5171\u4eab\u5e93\u3002\n\u867d\u7136\u8fd9\u662f\u76f8\u5f53\u5feb\u7684\uff0c\u4f46\u7ef4\u62a4\u8fd9\u4e2aC\u540e\u7aef\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u8d1f\u62c5\u3002\u7136\u800c\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5207\u65ad\u4e86Theano\u5728\u7f16\u8bd1\u6280\u672f(\u4f8b\u5982XLA)\u548c\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784(\u4f8b\u5982TPU)\u65b9\u9762\u7684\u6240\u6709\u4ee4\u4eba\u60ca\u53f9\u7684\u53d1\u5c55\uff0c\u56e0\u4e3a\u6211\u4eec\u4e5f\u5fc5\u987b\u4e3a\u8fd9\u4e9b\u6280\u672f\u624b\u5199C\u4ee3\u7801\u3002\n\u8fd9\u4e2a\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u88ab\u8bc1\u660e\u662f\u76f8\u5bf9\u7b80\u5355\u7684\uff1a\u5c06Theano\u56fe\u7f16\u8bd1\u6210\u5176\u4ed6\u73b0\u4ee3\u5f20\u91cf\u8ba1\u7b97\u5e93\u3002\u6211\u4eec\u53ea\u9700\u8981\u4e3a\u6bcf\u4e2aTheano Ops\u63d0\u4f9bJAX\u5b9e\u73b0\u3002\u7531\u4e8eJAX\u4e0eNumPy/SciPy\u5171\u4eab\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\u7684API\uff0c\u8fd9\u88ab\u8bc1\u660e\u662f\u51fa\u4eba\u610f\u6599\u7684\u7b80\u5355\uff0c\u6211\u4eec\u5728\u51e0\u5929\u5185\u5c31\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684\u539f\u578b\u3002\n\u76ee\u524d\uff0c\u5927\u591a\u6570PyMC3\u578b\u53f7\u5df2\u7ecf\u4f7f\u7528\u6211\u4eec\u7684\u575a\u679c\u91c7\u6837\u5668\u548cSMC\u91c7\u6837\u5668\u4e0eTheano-PyMC\u5f53\u524d\u7684\u4e3b\u5206\u652f\u673a\u6784\u914d\u5408\u4f7f\u7528\u3002\u5728\u6211\u4eec\u5bf9\u5c0f\u578b\u6a21\u578b\u7684\u6709\u9650\u5b9e\u9a8c\u4e2d\uff0cC\u540e\u7aef\u4ecd\u7136\u6bd4JAX\u540e\u7aef\u5feb\u4e00\u70b9\uff0c\u4f46\u6211\u4eec\u9884\u8ba1\u6027\u80fd\u4f1a\u6709\u8fdb\u4e00\u6b65\u7684\u63d0\u9ad8\u3002\u4e3a\u4e86\u5145\u5206\u5229\u7528JAX\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u91c7\u6837\u51fd\u6570\u8f6c\u6362\u4e3aJAX-jittable\u51fd\u6570\u3002\n\u8fd9\u5c31\u662f\u4e8b\u60c5\u53d8\u5f97\u771f\u6b63\u6709\u8da3\u7684\u5730\u65b9\u3002\u6211\u4eec\u9996\u5148\u4f7f\u7528Theano\u4e2d\u65b0\u7684JAX\u94fe\u63a5\u5668\u5c06\u4e00\u4e2aPyMC3\u6a21\u578b\u7f16\u8bd1\u6210JAX\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u751f\u6210\u7684JAX\u56fe(\u6b64\u65f6\u4e0d\u518d\u5b58\u5728\u7279\u5b9a\u4e8eTheano\u6216PyMC3\u7684\u4ee3\u7801\uff0c\u53ea\u6709\u4e00\u4e2a\u8ba1\u7b97\u6a21\u578b\u5bf9\u6570\u7684JAX\u51fd\u6570)\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9TFP\u548cNumPyro\u4e2d\u7684\u5176\u4ed6MCMC\u91c7\u6837\u5668\u7684\u73b0\u6709JAX\u5b9e\u73b0\u3002\n\u7ed3\u679c\u662f\uff1a\u91c7\u6837\u5668\u548c\u6a21\u578b\u4e00\u8d77\u88ab\u5b8c\u5168\u7f16\u8bd1\u6210\u4e00\u4e2a\u7edf\u4e00\u7684JAX\u56fe\uff0c\u53ef\u4ee5\u5728CPU\u3001GPU\u6216TPU\u4e0a\u6267\u884c\u3002\u8fd9\u4e9b\u7b2c\u4e00\u6b21\u5b9e\u9a8c\u7684\u901f\u5ea6\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\uff0c\u5b8c\u5168\u8ba9\u6211\u4eec\u7684\u57fa\u4e8ePython\u7684\u91c7\u6837\u5668\u5927\u5403\u4e00\u60ca\u3002\n\u6709\u4e86\u5c06Theano\u56fe\u7f16\u8bd1\u6210JAX\u7684\u80fd\u529b\uff0c\u4ee5\u53ca\u57fa\u4e8eJAX\u7684MCMC\u91c7\u6837\u5668\u7684\u53ef\u7528\u6027\uff0c\u6211\u4eec\u6b63\u5904\u4e8e\u5bf9PyMC3\u7684\u91cd\u5927\u8f6c\u53d8\u7684\u98ce\u53e3\u6d6a\u5c16\u3002\u5728\u4e0d\u5bf9PyMC3\u4ee3\u7801\u5e93\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u540e\u7aef\u5207\u6362\u5230JAX\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8eJAX\u7684\u5916\u90e8\u91c7\u6837\u5668\u5bf9\u4ece\u5c0f\u5230\u5927\u7684\u6a21\u578b\u8fdb\u884c\u95ea\u7535\u822c\u7684\u91c7\u6837\u3002\n\u6700\u9177\u7684\u90e8\u5206\u662f\uff0c\u4f5c\u4e3a\u7528\u6237\uff0c\u60a8\u4e0d\u9700\u8981\u66f4\u6539\u73b0\u6709\u7684PyMC3\u6a21\u578b\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u5728\u73b0\u4ee3\u540e\u7aef\u3001\u73b0\u4ee3\u786c\u4ef6\u548cJAX\u91c7\u6837\u5668\u4e0a\u8fd0\u884c\u6a21\u578b\uff0c\u5e76\u514d\u8d39\u83b7\u5f97\u60ca\u4eba\u7684\u52a0\u901f\u3002\n\u6b64\u5916\uff0c\u968f\u7740PyTorch\u548cTF\u4e13\u6ce8\u4e8e\u52a8\u6001\u56fe\u5f62\uff0c\u76ee\u524d\u5728Python\u4e2d\u8fd8\u6ca1\u6709\u5176\u4ed6\u597d\u7684\u9759\u6001\u56fe\u5f62\u5e93\u3002\u7136\u800c\uff0c\u4e0e\u52a8\u6001\u56fe\u5f62\u76f8\u6bd4\uff0c\u9759\u6001\u56fe\u5f62\u6709\u5f88\u591a\u4f18\u70b9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u76f8\u4fe1Theano\u5c06\u4f1a\u6709\u4e00\u4e2a\u5149\u660e\u7684\u672a\u6765\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6210\u719f\u7684\u3001\u5f3a\u5927\u7684\u5e93\uff0c\u5b83\u5177\u6709\u53ef\u8bbf\u95ee\u7684\u56fe\u5f62\u8868\u793a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u6709\u8da3\u7684\u65b9\u5f0f\u8fdb\u884c\u4fee\u6539\uff0c\u5e76\u5728\u5404\u79cd\u73b0\u4ee3\u540e\u7aef\u4e0a\u6267\u884c\u3002\n\u57fa\u4e8eTensorFlow\u7684PyMC4\u5c06\u4e0d\u4f1a\u8fdb\u4e00\u6b65\u5f00\u53d1\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u548c\u503c\u5f97\u7684\u5b9e\u9a8c\uff0c\u8ba9\u6211\u4eec\u5b66\u5230\u4e86\u5f88\u591a\uff0c\u4f46\u4e3b\u8981\u7684\u969c\u788d\u662fTensorFlow\u7684\u6e34\u671b\u6a21\u5f0f\uff0c\u4ee5\u53ca\u5404\u79cd\u6211\u4eec\u81ea\u5df1\u65e0\u6cd5\u89e3\u51b3\u7684\u6280\u672f\u95ee\u9898\u3002\u5728\u6982\u7387\u7f16\u7a0b\u4e2d\uff0c\u62e5\u6709\u4e00\u4e2a\u53ef\u4ee5\u7f16\u8bd1\u548c\u4fee\u6539\u7684\u5168\u5c40\u72b6\u6001\u9759\u6001\u56fe\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u4f18\u52bf\uff0c\u6b63\u5982\u6211\u4eec\u5728\u4e0a\u9762\u6240\u89e3\u91ca\u7684\uff1bTheano\u5c31\u662f\u8fd9\u65b9\u9762\u7684\u5b8c\u7f8e\u5e93\u3002\n\u5728\u63a2\u7d22PyMC4\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u8981\u5bf9\u7528\u6237\u548c\u5f00\u53d1\u4eba\u5458\u8868\u793a\u611f\u8c22\u3002\u7279\u522b\u662f\u5bf9\u6240\u6709GSOC\u7684\u5b66\u751f\uff0c\u4ed6\u4eec\u4e3a\u8fd9\u4e9b\u5e93\u8d21\u732e\u4e86\u7279\u6027\u548c\u9519\u8bef\u4fee\u590d\uff0c\u5e76\u63a2\u7d22\u4e86\u5728\u529f\u80fd\u5efa\u6a21\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u505a\u4e9b\u4ec0\u4e48\u3002\u6211\u4eec\u4e5f\u8981\u611f\u8c22Rif A.Sauous\u548cTensorFlow Probability\u56e2\u961f\uff0c\u4ed6\u4eec\u8d5e\u52a9\u4e86\u6211\u4eec\u4e24\u6b21\u5f00\u53d1\u8005\u5cf0\u4f1a\uff0c\u5e76\u8fdb\u884c\u4e86\u8bb8\u591a\u5bcc\u6709\u6210\u6548\u7684\u8ba8\u8bba\u3002\u6211\u4eec\u76f8\u4fe1\uff0c\u8fd9\u4e9b\u52aa\u529b\u4e0d\u4f1a\u767d\u8d39\uff0c\u8fd9\u4e3a\u6211\u4eec\u5efa\u8bbe\u66f4\u597d\u7684PPL\u63d0\u4f9b\u4e86\u542f\u793a\u3002\u6211\u4eec\u671f\u5f85\u7740\u5c06\u8fd9\u4e9b\u60f3\u6cd5\u878d\u5165\u5230\u672a\u6765\u7248\u672c\u7684PyMC3\u4e2d\u3002\n\u5bf9\u4e8ePyMC3\u548cTheano\u6765\u8bf4\uff0c\u8fd9\u771f\u7684\u662f\u4e00\u4e2a\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\u3002\u5982\u679c\u4f60\u60f3\u4ea7\u751f\u5f71\u54cd\uff0c\u73b0\u5728\u662f\u53c2\u4e0e\u8fdb\u6765\u7684\u6700\u4f73\u65f6\u673a\u3002\u4f60\u53ef\u4ee5\u5728Theano\u548cPyMC3\u4e0a\u67e5\u770b\u5bb9\u6613\u6458\u5230\u7684\u6c34\u679c\u3002\u6211\u4eec\u671f\u5f85\u7740\u60a8\u7684\u62c9\u5f0f\u8bf7\u6c42\u3002\n\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u8d1d\u53f6\u65af\u5efa\u6a21\u65b9\u9762\u7684\u4e13\u4e1a\u5e2e\u52a9\uff0c\u6211\u4eec\u6700\u8fd1\u63a8\u51fa\u4e86\u4e00\u9879PyMC3\u54a8\u8be2\u670d\u52a1\uff0c\u8bf7\u8054\u7cfbthomas.wiecki@pymc-labs.io\u3002", "note_en": "In this post we\u2019d like to make a major announcement about where PyMC is headed, how we got here, and what our reasons for this direction are.\n TL;DR: PyMC3 on Theano with the new JAX backend is the future, PyMC4 based on TensorFlow Probability will not be developed further.\n In 2017, the original authors of Theano annou nced that they would stop development of their excellent library. This left PyMC3, which relies on Theano as its computational backend, in a difficult position and prompted us to start work on PyMC4 which is based on TensorFlow instead. Through this process, we learned that building an interactive probabilistic programming library in TF was not as easy as we thought (more on that below).\n In parallel to this, in an effort to extend the life of PyMC3, we took over maintenance of Theano from the Mila team, hosted under  Theano-PyMC. Working with the Theano code base, we realized that everything we needed was already present. Moreover, we saw that we could extend the code base in promising ways, such as by adding support for new execution backends like JAX.\n Here is the idea: Theano builds up a static computational graph of operations (\u201cOps\u201d) to perform in sequence. This graph structure is very useful for many reasons: you can do optimizations by fusing computations or replace certain operations with alternatives that are numerically more stable. Critically, you can then take that graph and compile it to different execution backends. By default, Theano supports two execution backends (i.e. implementations for Ops): Python and C.\n The Python backend is understandably slow as it just runs your graph using mostly NumPy functions chained together. Thus for speed, Theano relies on its C backend (mostly implemented in CPython). After graph transformation and simplification, the resulting Ops get compiled into their appropriate C analogues and then the resulting C-source files are compiled to a shared library, which is then called by Python.\n While this is quite fast, maintaining this C-backend is quite a burden. More importantly, however, it cuts Theano off from all the amazing developments in compiler technology (e.g. XLA) and processor architecture (e.g. TPUs) as we would have to hand-write C-code for those too.\n The solution to this problem turned out to be relatively straightforward: compile the Theano graph to other modern tensor computation libraries. We just need to provide JAX implementations for each Theano Ops. Since JAX shares almost an identical API with NumPy/SciPy this turned out to be surprisingly simple, and we had a working prototype within a few days.\n Currently, most PyMC3 models already work with the current master branch of Theano-PyMC using our NUTS and SMC samplers. In our limited experiments on small models, the C-backend is still a bit faster than the JAX one, but we anticipate further improvements in performance. To take full advantage of JAX, we need to convert the sampling functions into JAX-jittable functions as well.\n  This is where things become really interesting. We first compile a PyMC3 model to JAX using the new JAX linker in Theano. We can then take the resulting JAX-graph (at this point there is no more Theano or PyMC3 specific code present, just a JAX function that computes a logp of a model) and pass it to existing JAX implementations of other MCMC samplers found in TFP and NumPyro.\n The result:   the sampler and model are together fully compiled into a unified JAX graph that can be executed on CPU, GPU, or TPU. The speed in these first experiments is incredible and totally blows our Python-based samplers out of the water.\n  With the ability to compile Theano graphs to JAX and the availability of JAX-based MCMC samplers, we are at the cusp of a major transformation of PyMC3. Without any changes to the PyMC3 code base, we can switch our backend to JAX and use external JAX-based samplers for lightning-fast sampling of small-to-huge models.\n The coolest part is that you, as a user, won\u2019t have to change anything on your existing PyMC3 model code in order to run your models on a modern backend, modern hardware, and JAX-ified samplers, and get amazing speed-ups for free.\n In addition, with PyTorch and TF being focused on dynamic graphs, there is currently no other good static graph library in Python. Static graphs, however, have many advantages over dynamic graphs. We thus believe that Theano will have a bright future ahead of itself as a mature, powerful library with an accessible graph representation that can be modified in all kinds of interesting ways and executed on various modern backends.\n  PyMC4, which is based on TensorFlow, will not be developed further. It was a very interesting and worthwhile experiment that let us learn a lot, but the main obstacle was TensorFlow\u2019s eager mode, along with a variety of technical issues that we could not resolve ourselves. In probabilistic programming, having a static graph of the global state which you can compile and modify is a great strength, as we explained above; Theano is the perfect library for this.\n We would like to express our gratitude to users and developers during our exploration of PyMC4. Especially to all GSoC students who contributed features and bug fixes to the libraries, and explored what could be done in a functional modeling approach. We also would like to thank Rif A. Saurous and the Tensorflow Probability Team, who sponsored us two developer summits, with many fruitful discussions. We believe that these efforts will not be lost and it provides us insight to building a better PPL. We are looking forward to incorporating these ideas into future versions of PyMC3.\n  This is a really exciting time for PyMC3 and Theano. If you want to have an impact, this is the perfect time to get involved. You can check out the low-hanging fruit on the Theano and PyMC3 repos. We look forward to your pull requests.\n If you are looking for professional help with Bayesian modeling, we recently launched a PyMC3 consultancy, get in touch at  thomas.wiecki@pymc-labs.io.", "posttime": "2020-11-07 11:21:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "theano", "title": "\u76ae\u59c6\u5361\u8bfa\uff1a\u6cf0\u4e9a\u8bfa\u5df2\u6b7b\uff0c\u6cf0\u4e9a\u8bfa\u4e07\u5c81", "title_en": "PyMC: Theano Is Dead, Long Live Theano", "transed": 1, "url": "https://pymc-devs.medium.com/the-future-of-pymc3-or-theano-is-dead-long-live-theano-d8005f8a0e9b", "via": "", "real_tags": ["theano"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033637, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5141\u8bb8\u514d\u8d39\u590d\u5236\u672c\u6750\u6599\u7684\u5168\u90e8\u6216\u90e8\u5206\u5185\u5bb9\uff0c\u524d\u63d0\u662f\u590d\u5236\u4e0d\u662f\u4e3a\u4e86\u76f4\u63a5\u5546\u4e1a\u5229\u76ca\u800c\u5236\u4f5c\u6216\u5206\u53d1\uff0cACM\u7248\u6743\u58f0\u660e\u548c\u51fa\u7248\u7269\u7684\u6807\u9898\u53ca\u5176\u65e5\u671f\u51fa\u73b0\uff0c\u5e76\u901a\u77e5\u590d\u5236\u662f\u7ecf\u8ba1\u7b97\u673a\u68b0\u534f\u4f1a\u8bb8\u53ef\u7684\u3002\u4ee5\u5176\u4ed6\u65b9\u5f0f\u590d\u5236\u6216\u91cd\u65b0\u53d1\u5e03\uff0c\u9700\u8981\u4ed8\u8d39\u548c/\u6216\u7279\u5b9a\u8bb8\u53ef\u3002HOPL-II/4/93/MA\uff0c\u7f8e\u56fd\u00a91993ACM 0-89791-571-2/93/0004/0069...$1.5\u3002\n\u5927\u591a\u6570\u60f3\u6cd5\u90fd\u6765\u81ea\u4e4b\u524d\u7684\u60f3\u6cd5\u300260\u5e74\u4ee3\uff0c\u7279\u522b\u662f\u5728ARPA\u793e\u533a\uff0c\u901a\u8fc7\u4ea4\u4e92\u5f0f\u5206\u65f6\u8ba1\u7b97\u673a\u3001\u56fe\u5f62\u5c4f\u5e55\u548c\u5b9a\u70b9\u8bbe\u5907\uff0c\u5f15\u53d1\u4e86\u4e00\u7cfb\u5217\u5173\u4e8e\u4eba\u673a\u5171\u751f\u7684\u6982\u5ff5\u3002\u9ad8\u7ea7\u8ba1\u7b97\u673a\u8bed\u8a00\u88ab\u53d1\u660e\u6765\u6a21\u62df\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u5982\u70bc\u6cb9\u5382\u548c\u534a\u667a\u80fd\u884c\u4e3a\u3002\u73b0\u4ee3\u4e2a\u4eba\u8ba1\u7b97\u3001\u91cd\u53e0\u7684\u7a97\u53e3\u754c\u9762\u548c\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u7684\u8303\u5f0f\u8f6c\u53d8\uff0c\u6765\u81ea\u4e8e\u5c0660\u5e74\u4ee3\u7684\u5de5\u4f5c\u89c6\u4e3a\u6bd4\u65e7\u7684\u4e1c\u897f\u66f4\u597d\u7684\u4e1c\u897f\u3002\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u5f0f\uff1a\u8fdb\u884c\u5927\u578b\u673a\u8ba1\u7b97\uff1b\u8ba9\u6700\u7ec8\u7528\u6237\u8c03\u7528\u529f\u80fd\uff1b\u8ba9\u6570\u636e\u7ed3\u6784\u53d8\u5f97\u66f4\u52a0\u62bd\u8c61\u3002\u76f8\u53cd\uff0c\u8ba1\u7b97\u91cf/\u7f8e\u5143/\u4f53\u79ef\u5448\u6307\u6570\u7ea7\u589e\u957f\u7684\u524d\u666f\u8981\u6c42\u5c0660\u5e74\u4ee3\u89c6\u4e3a\u51e0\u4e4e\u662f\u4e00\u4e2a\u65b0\u4e8b\u7269\uff0c\u5e76\u627e\u51fa\u771f\u6b63\u7684\u65b0\u4e8b\u7269\u53ef\u80fd\u662f\u4ec0\u4e48\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u7528\u624b\u6301\u7684\u52a8\u6001\u8ba1\u7b97\u673a\u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5728\u5171\u4eab\u5927\u578b\u673a\u4e0a\u662f\u4e0d\u53ef\u80fd\u5b9e\u73b0\u7684\uff1b\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u6f5c\u5728\u7528\u6237\u610f\u5473\u7740\u7528\u6237\u754c\u9762\u5fc5\u987b\u6210\u4e3a\u8499\u53f0\u68ad\u5229(Montessori)\u548c\u5e03\u9c81\u7eb3(Bruner)\u90a3\u6837\u7684\u5b66\u4e60\u73af\u5883\uff1b\u5927\u8303\u56f4\u3001\u4f4e\u590d\u6742\u6027\u548c\u7ec8\u7aef\u7528\u6237\u8bc6\u5b57\u7684\u9700\u6c42\u5c06\u8981\u6c42\u6570\u636e\u548c\u63a7\u5236\u7ed3\u6784\u88ab\u5e9f\u9664\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u4e00\u79cd\u66f4\u5177\u751f\u7269\u6027\u7684\u65b9\u6848\uff0c\u5373\u53d7\u4fdd\u62a4\u7684\u901a\u7528\u7ec6\u80de\u53ea\u901a\u8fc7\u80fd\u591f\u6a21\u4eff\u4efb\u4f55\u6240\u9700\u884c\u4e3a\u7684\u6d88\u606f\u8fdb\u884c\u4ea4\u4e92\u3002\n\u65e9\u671f\u7684Smalltalk\u662f\u7b2c\u4e00\u4e2a\u5b8c\u5168\u5b9e\u73b0\u8fd9\u4e9b\u65b0\u89c2\u70b9\u7684\u4eba\uff0c\u56e0\u4e3a\u5b83\u7684\u8bb8\u591a\u524d\u8f88\u5728\u786c\u4ef6\u3001\u8bed\u8a00\u548c\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u65b9\u9762\u90fd\u662f\u8fd9\u6837\u505a\u7684\u3002\u5b83\u6210\u4e3a\u65b0\u8ba1\u7b97\u7684\u5178\u8303\uff0c\u90e8\u5206\u539f\u56e0\u662f\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u5c1d\u8bd5\u4fe1\u4ef0\u7ed3\u6784\u7684\u8d28\u7684\u8f6c\u53d8-\u4e00\u79cd\u65b0\u7684\u5e93\u6069\u8303\u5f0f\uff0c\u5176\u7cbe\u795e\u4e0e\u5370\u5237\u673a\u7684\u53d1\u660e\u76f8\u540c-\u56e0\u6b64\u91c7\u53d6\u4e86\u975e\u5e38\u6781\u7aef\u7684\u7acb\u573a\uff0c\u51e0\u4e4e\u8feb\u4f7f\u8fd9\u4e9b\u65b0\u98ce\u683c\u88ab\u53d1\u660e\u51fa\u6765\u3002\n-SketchPad\u3001Joss\u3001LISP\u548cSIMULA\uff0c60\u5e74\u4ee3\u7684\u56db\u5927\u7f16\u7a0b\u6982\u5ff5\u3002\n\u6211\u662f\u572835000\u82f1\u5c3a\u9ad8\u7a7a\u7684\u98de\u673a\u4e0a\u5199\u8fd9\u7bc7\u7b80\u4ecb\u7684\u3002\u6211\u817f\u4e0a\u653e\u7740\u4e00\u53f0\u91cd\u8fbe5\u78c5\u7684\u7b14\u8bb0\u672c\u7535\u8111--1992\u5e74\u7684\u4e34\u65f6\u52a8\u6001\u7b14\u8bb0\u672c\u7535\u8111\uff0c\u5230\u5e74\u5e95\u5b83\u7684\u552e\u4ef7\u8fd8\u4e0d\u5230700\u7f8e\u5143\u3002\u5b83\u6709\u4e00\u4e2a\u6241\u5e73\u3001\u6e05\u6670\u3001\u9ad8\u5206\u8fa8\u7387\u7684\u4f4d\u56fe\u5c4f\u5e55\uff0c\u91cd\u53e0\u7684\u7a97\u53e3\uff0c\u56fe\u6807\uff0c\u4e00\u4e2a\u5b9a\u70b9\u8bbe\u5907\uff0c\u76f8\u5f53\u5927\u7684\u5b58\u50a8\u548c\u8ba1\u7b97\u80fd\u529b\uff0c\u5b83\u6700\u597d\u7684\u8f6f\u4ef6\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u5b83\u5185\u7f6e\u4e86\u5148\u8fdb\u7684\u7f51\u7edc\uff0c\u800c\u4e14\u5df2\u7ecf\u6709\u4e86\u65e0\u7ebf\u7f51\u7edc\u7684\u9009\u9879\u3002Smalltalk\u5728\u8fd9\u4e2a\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u662f\u6211\u76ee\u524d\u4e0e\u513f\u7ae5\u4e00\u8d77\u5de5\u4f5c\u65f6\u4f7f\u7528\u7684\u4e3b\u8981\u7cfb\u7edf\u4e4b\u4e00\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u52a8\u6001\u535a\u514b(\u5728\u6570\u91cf\u4e0a)\uff0c\u800c\u5728\u67d0\u4e9b\u65b9\u9762(\u5728\u8d28\u91cf\u4e0a)\u8fd8\u4e0d\u662f\u5f88\u5230\u4f4d\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u57fa\u672c\u4e0a\u5c31\u662f60\u5e74\u4ee3\u672b\u7684\u60f3\u6cd5\u3002\nSmalltalk\u662fARPA\u4ee5\u53ca\u540e\u6765\u7684\u65bd\u4e50\u5e15\u6d1b\u963f\u5c14\u6258\u7814\u7a76\u4e2d\u5fc3(Xerox Parc)\u8fd9\u4e00\u66f4\u5927\u8ffd\u6c42\u7684\u4e00\u90e8\u5206\uff0c\u6211\u79f0\u4e4b\u4e3a\u4e2a\u4eba\u8ba1\u7b97\u673a\u3002\u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u592a\u591a\u6765\u81ea\u7814\u7a76\u754c\u7684\u4eba\u53c2\u4e0e\uff0c\u56e0\u6b64\u4e3a\u60f3\u6cd5\u51c6\u786e\u5206\u914d\u4fe1\u7528\u662f\u4e00\u4ef6\u975e\u5e38\u56f0\u96be\u7684\u4e8b\u60c5\u3002\u76f8\u53cd\uff0c\u6b63\u5982\u9c8d\u52c3\u00b7\u5df4\u987f(Bob Barton)\u559c\u6b22\u5f15\u7528\u6b4c\u5fb7(Goethe)\u7684\u8bdd\u90a3\u6837\uff0c\u6211\u4eec\u5e94\u8be5\u5206\u4eab\u53d1\u73b0\u7684\u5174\u594b\uff0c\u800c\u4e0d\u662f\u5f92\u52b3\u5730\u8bd5\u56fe\u58f0\u79f0\u62e5\u6709\u4f18\u5148\u6743\u3002\n\u6211\u5c06\u8bd5\u56fe\u5c55\u793a\u5927\u591a\u6570\u5f71\u54cd\u6765\u81ea\u54ea\u91cc\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u5728\u65b0\u7684\u4e2a\u4eba\u8ba1\u7b97\u673a\u9690\u55bb\u5f62\u6210\u7684\u78c1\u573a\u4e2d\u8f6c\u53d8\u7684\u3002\u6b63\u662f\u5148\u9a71\u4eec\u7684\u6001\u5ea6\u548c\u4f1f\u5927\u7684\u60f3\u6cd5\u5e2e\u52a9Smalltalk\u95ee\u4e16\u3002\u5f53\u65f6\u6211\u6700\u94a6\u4f69\u7684\u8bb8\u591a\u4eba--\u6bd4\u5982\u4f0a\u4e07\u00b7\u8428\u745f\u5170(Ivan Sutherland)\u3001\u9a6c\u6587\u00b7\u660e\u65af\u57fa(Marvin Minsky)\u3001\u897f\u6469\u00b7\u5e15\u666e\u7279(Seymour Papert)\u3001\u6208\u767b\u00b7\u6469\u5c14(Gordon Moore)\u3001\u9c8d\u52c3\u00b7\u5df4\u987f(Bob Barton)\u3001\u6234\u592b\u00b7\u57c3\u6587\u65af(Dave Evans\u3002\u72ed\u9698\u7684\u5934\u8111\u8bd5\u56fe\u5f62\u6210\u5b97\u6559\uff0c\u4f1f\u5927\u7684\u5934\u8111\u53ea\u662f\u60f3\u8981\u66f4\u597d\u7684\u4e0a\u5c71\u8def\u7ebf\u3002\u725b\u987f\u8bf4\uff0c\u4ed6\u7ad9\u5728\u5de8\u4eba\u7684\u80a9\u8180\u4e0a\u770b\u5f97\u66f4\u8fdc\uff0c\u800c\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u7ecf\u5e38\u7ad9\u5728\u5f7c\u6b64\u7684\u811a\u8dbe\u4e0a\u3002\u8fd1\u89c6\u4ecd\u7136\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u6709\u5de8\u4eba\u53ef\u4ee5\u7ad9\u5728\u4ed6\u4eec\u7684\u80a9\u8180\u4e0a--\u8fdc\u89c6\u6bd4\u6d1e\u5bdf\u66f4\u597d--\u4f46\u5982\u679c\u6234\u4e0a\u5bf9\u7f8e\u5b66\u548c\u6279\u8bc4\u9ad8\u5ea6\u654f\u611f\u7684\u773c\u955c\uff0c\u8fd1\u89c6\u7684\u95ee\u9898\u5c31\u53ef\u4ee5\u6700\u5c0f\u5316\u3002\n\u7f16\u7a0b\u8bed\u8a00\u53ef\u4ee5\u6309\u591a\u79cd\u65b9\u5f0f\u5206\u7c7b\uff1a\u547d\u4ee4\u5f0f\u8bed\u8a00\u3001\u5e94\u7528\u578b\u8bed\u8a00\u3001\u57fa\u4e8e\u903b\u8f91\u7684\u8bed\u8a00\u3001\u9762\u5411\u95ee\u9898\u7684\u8bed\u8a00\u7b49\u7b49\u3002\u4f46\u5b83\u4eec\u4f3c\u4e4e\u90fd\u4e0d\u662f\u7279\u6027\u7684\u96c6\u5408\u4f53\uff0c\u5c31\u662f\u529f\u80fd\u7684\u96c6\u5408\u4f53\u3002\nSmallTalk\u7684\u8bbe\u8ba1--\u4ee5\u53ca\u5b83\u7684\u5b58\u5728--\u6e90\u4e8e\u8fd9\u6837\u4e00\u79cd\u89c1\u89e3\uff0c\u5373\u6211\u4eec\u6240\u80fd\u63cf\u8ff0\u7684\u4e00\u5207\u90fd\u53ef\u4ee5\u7531\u4e00\u79cd\u884c\u4e3a\u6784\u5efa\u5757\u7684\u9012\u5f52\u7ec4\u5408\u6765\u8868\u793a\uff0c\u8fd9\u79cd\u884c\u4e3a\u6784\u5efa\u5757\u5c06\u72b6\u6001\u548c\u6d41\u7a0b\u7684\u7ec4\u5408\u9690\u85cf\u5728\u5176\u5185\u90e8\uff0c\u5e76\u4e14\u53ea\u80fd\u901a\u8fc7\u6d88\u606f\u4ea4\u6362\u6765\u5904\u7406\u3002\u4ece\u54f2\u5b66\u4e0a\u8bb2\uff0cSmalltalk\u7684\u7269\u4ef6\u4e0e\u83b1\u5e03\u5c3c\u8328(Leibniz)\u7684\u5355\u5b50\u4ee5\u53ca20\u4e16\u7eaa\u7269\u7406\u548c\u751f\u7269\u5b66\u7684\u6982\u5ff5\u6709\u8bb8\u591a\u76f8\u4f3c\u4e4b\u5904\u3002\u5b83\u5236\u9020\u7269\u54c1\u7684\u65b9\u5f0f\u76f8\u5f53\u67cf\u62c9\u56fe\u5f0f\u7684\uff0c\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e9b\u7269\u54c1\u662f\u6982\u5ff5\u7684\u7406\u60f3\u5316--\u601d\u60f3--\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u7406\u60f3\u5316\u7684\u6982\u5ff5\u4e2d\u521b\u9020\u51fa\u5404\u79cd\u8868\u73b0\u5f62\u5f0f\u3002\u5982\u679c\u8ba4\u4e3a\u89c2\u5ff5\u672c\u8eab\u5c31\u662f(\u89c2\u5ff5-\u89c2\u5ff5)\u7684\u8868\u73b0\uff0c\u800c\u89c2\u5ff5-\u89c2\u5ff5\u662f\u4e00\u79cd--\u8868\u73b0--\u89c2\u5ff5--\u4e5f\u5c31\u662f--\u5b83\u672c\u8eab\u5c31\u662f\u4e00\u79cd--\u8fd9\u6837\u7684\u7cfb\u7edf\u662f\u5b8c\u5168\u81ea\u6211\u63cf\u8ff0\u7684--\u90a3\u4e48\u67cf\u62c9\u56fe\u5c31\u4f1a\u628a\u5b83\u5f53\u4f5c\u4e00\u4e2a\u6781\u5176\u6076\u4f5c\u5267\u7684\u7b11\u8bdd\u6765\u6b23\u8d4f[\u67cf\u62c9\u56fe]\u3002\n\u5728\u8ba1\u7b97\u673a\u672f\u8bed\u4e2d\uff0cSmalltalk\u662f\u5bf9\u8ba1\u7b97\u673a\u672c\u8eab\u6982\u5ff5\u7684\u9012\u5f52\u3002\u6bcf\u4e2aSmalltalk\u5bf9\u8c61\u90fd\u662f\u5bf9\u8ba1\u7b97\u673a\u5168\u90e8\u53ef\u80fd\u6027\u7684\u9012\u5f52\uff0c\u800c\u4e0d\u662f\u628a\u8ba1\u7b97\u673a\u4e1c\u897f\u5206\u6210\u4e0d\u540c\u4e8e\u6574\u4f53\u7684\u4e1c\u897f--\u6bd4\u5982\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5e38\u89c1\u7684\u6570\u636e\u7ed3\u6784\u3001\u8fc7\u7a0b\u548c\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u5b83\u7684\u8bed\u4e49\u6709\u70b9\u50cf\u6210\u5343\u4e0a\u4e07\u53f0\u8ba1\u7b97\u673a\u901a\u8fc7\u4e00\u4e2a\u975e\u5e38\u5feb\u7684\u7f51\u7edc\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u56e0\u6b64\uff0c\u5177\u4f53\u8868\u793a\u7684\u95ee\u9898\u51e0\u4e4e\u53ef\u4ee5\u65e0\u9650\u671f\u5730\u63a8\u8fdf\uff0c\u56e0\u4e3a\u6211\u4eec\u4e3b\u8981\u5173\u5fc3\u7684\u662f\u8ba1\u7b97\u673a\u7684\u884c\u4e3a\u662f\u5426\u6070\u5f53\uff0c\u53ea\u6709\u5728\u7ed3\u679c\u5173\u95ed\u6216\u8fd4\u56de\u5f97\u592a\u6162\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u624d\u4f1a\u5bf9\u7279\u5b9a\u7684\u7b56\u7565\u611f\u5174\u8da3\u3002\n\u5c3d\u7ba1Smalltalk\u786e\u5b9e\u6709\u9ad8\u8d35\u7684\u7956\u5148\uff0c\u4f46\u5b83\u7684\u8d21\u732e\u662f\u4e00\u79cd\u65b0\u7684\u8bbe\u8ba1\u8303\u5f0f--\u6211\u79f0\u4e4b\u4e3a\u9762\u5411\u5bf9\u8c61--\u5b83\u89e3\u51b3\u4e86\u4e13\u4e1a\u7a0b\u5e8f\u5458\u7684\u5927\u95ee\u9898\uff0c\u5e76\u4e3a\u65b0\u624b\u7528\u6237\u63d0\u4f9b\u4e86\u5c0f\u95ee\u9898\u7684\u53ef\u80fd\u3002\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u662f\u4e00\u6b21\u6210\u529f\u7684\u5c1d\u8bd5\uff0c\u5b83\u4ece\u8d28\u91cf\u4e0a\u63d0\u9ad8\u4e86\u5bf9\u7845\u7206\u70b8\u5e26\u6765\u7684\u8d8a\u6765\u8d8a\u590d\u6742\u7684\u52a8\u6001\u7cfb\u7edf\u548c\u7528\u6237\u5173\u7cfb\u5efa\u6a21\u7684\u6548\u7387\u3002\n\u5728\u8fd9\u6bb5\u5386\u53f2\u4e2d\uff0c\u6211\u5c06\u52aa\u529b\u5fe0\u5b9e\u4e8e\u6c49\u660e\u7684\u8981\u6c42\uff0c\u56e0\u4e3a\u970d\u5e03\u65af\u7684\u89c2\u5bdf\u7f13\u548c\u4e86\u8fd9\u4e00\u8981\u6c42\u3002\u6211\u4e4b\u524d\u8bd5\u56fe\u5199\u5173\u4e8eSmalltalk\u7684\u6587\u7ae0\u65f6\u9047\u5230\u8fc7\u56f0\u96be\uff0c\u56e0\u4e3a\u6211\u7684\u60c5\u611f\u6295\u5165\u4e00\u76f4\u96c6\u4e2d\u5728\u5c06\u4e2a\u4eba\u7535\u8111\u4f5c\u4e3a\u4eba\u7c7b\u89e6\u89d2\u7684\u653e\u5927\u5668\uff0c\u800c\u4e0d\u662f\u7f16\u7a0b\u7cfb\u7edf\u8bbe\u8ba1\u4e0a\uff0c\u800c\u6211\u4eec\u8fd8\u6ca1\u6709\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u867d\u7136\u6211\u662fSmalltalk\u7684\u53d1\u8d77\u4eba\u548c\u6700\u521d\u7684\u8bbe\u8ba1\u8005\uff0c\u4f46\u5b83\u4e00\u76f4\u66f4\u5c5e\u4e8e\u90a3\u4e9b\u8ba9\u5b83\u6210\u529f\u5e76\u8ba9\u5b83\u8d70\u51fa\u5bb6\u95e8\u7684\u4eba\uff0c\u7279\u522b\u662f\u4e39\u00b7\u82f1\u6208\u5c14\u65af\u548c\u963f\u9edb\u5c14\u00b7\u6208\u5fb7\u5821\u3002\u6bcf\u4e00\u4f4dLRGER\u90fd\u4ee5\u6df1\u523b\u800c\u975e\u51e1\u7684\u65b9\u5f0f\u4e3a\u8fd9\u4e2a\u9879\u76ee\u505a\u51fa\u4e86\u8d21\u732e\uff0c\u6211\u5e0c\u671b\u6709\u8db3\u591f\u7684\u7bc7\u5e45\u6765\u516c\u5e73\u5730\u5bf9\u5f85\u4ed6\u4eec\u3002\u4f46\u6211\u60f3\u6211\u4eec\u90fd\u4f1a\u540c\u610f\uff0c\u5728Smalltalk\u7684\u5927\u90e8\u5206\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0cDan\u662f\u6838\u5fc3\u4eba\u7269\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u7f16\u7a0b\u662f\u4e00\u95e8\u5b9e\u7528\u7684\u827a\u672f\uff0c\u771f\u6b63\u7684\u4e1c\u897f\u662f\u5728\u5176\u4e2d\u6784\u5efa\u7684\uff0c\u56e0\u6b64\u5fc5\u987b\u5b58\u5728\u771f\u6b63\u7684\u5b9e\u73b0\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4eca\u5929\u4f7f\u7528\u7684\u8bed\u8a00\u5373\u4f7f\u4e0d\u662f\u5927\u591a\u6570\uff0c\u4e5f\u6709\u5f88\u591a\uff0c\u4e0d\u662f\u56e0\u4e3a\u5b83\u4eec\u6709\u4efb\u4f55\u771f\u6b63\u7684\u4f18\u70b9\uff0c\u800c\u662f\u56e0\u4e3a\u5b83\u4eec\u5b58\u5728\u4e8e\u4e00\u53f0\u6216\u591a\u53f0\u673a\u5668\u4e0a\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u5f15\u5bfc\uff0c\u7b49\u7b49\u3002\u4f46Dan\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u4f1f\u5927\u7684\u5b9e\u73b0\u8005\uff0c\u968f\u7740Smalltalk\u8fdb\u5165\u5b9e\u9645\u4e16\u754c\uff0c\u4ed6\u4e5f\u6210\u4e3a\u4e86\u8d8a\u6765\u8d8a\u591a\u7684\u8bbe\u8ba1\u8005\uff0c\u4e0d\u4ec5\u662f\u8bed\u8a00\u7684\u8bbe\u8ba1\u8005\uff0c\u4e5f\u662f\u7528\u6237\u754c\u9762\u7684\u8bbe\u8ba1\u8005\u3002\n\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u96c6\u4e2d\u5173\u6ce8\u5bfc\u81f4Smalltalk-72\u7684\u4e8b\u4ef6\uff0c\u4ee5\u53ca\u5b83\u5411\u73b0\u4ee3\u5f62\u5f0fSmalltalk-76\u7684\u8fc7\u6e21\u3002\u5927\u591a\u6570\u60f3\u6cd5\u90fd\u662f\u5728\u8fd9\u91cc\u4ea7\u751f\u7684\uff0c\u800c\u8bb8\u591aOOP\u7684\u65e9\u671f\u9636\u6bb5\u5728\u51e0\u4e4e\u4e0d\u53ef\u80fd\u627e\u5230\u7684\u53c2\u8003\u6587\u732e\u4e2d\u8bb0\u5f55\u5f97\u5f88\u5c11\u3002\n\u8fd9\u6bb5\u5386\u53f2\u592a\u957f\u4e86\uff0c\u4f46\u4ee4\u6211\u60ca\u8bb6\u7684\u662f\uff0c\u6709\u90a3\u4e48\u591a\u6709\u5f71\u54cd\u529b\u7684\u4eba\u548c\u5236\u5ea6\u53ea\u51fa\u73b0\u5728\u9634\u5f71\u4e2d\uff0c\u6216\u8005\u6839\u672c\u5c31\u6ca1\u6709\u3002\u5f88\u62b1\u6b49\uff0c\u6211\u4e0d\u80fd\u8bf4\u66f4\u591a\u5173\u4e8e\u9c8d\u52c3\u00b7\u5df4\u5c14\u6cfd\u3001\u9c8d\u52c3\u00b7\u5df4\u987f\u3001\u4e39\u5c3c\u00b7\u9c8d\u52c3\u7f57\u3001\u53f2\u8482\u592b\u00b7\u5361\u5c14\u3001\u97e6\u65af\u00b7\u514b\u62c9\u514b\u3001\u82ad\u82ad\u62c9\u00b7\u591a\u4f0a\u5947\u3001\u5f7c\u5f97\u00b7\u591a\u4f0a\u5947\u3001\u6bd4\u5c14\u00b7\u675c\u74e6\u5c14\u3001\u9c8d\u52c3\u00b7\u5f17\u83b1\u683c\u3001\u52b3\u62c9\u00b7\u53e4\u5c14\u5fb7\u3001\u5e03\u9c81\u65af\u00b7\u970d\u6069\u3001\u5df4\u7279\u52d2\u00b7\u5170\u666e\u68ee\u3001\u6234\u592b\u00b7\u5229\u5fb7\u5c14\u3001\u5a01\u5ec9\u00b7\u7ebd\u66fc\u3001\u6bd4\u5c14\u00b7\u5e15\u514b\u65af\u987f\u3001\u7279\u91cc\u683c\u592b\u00b7\u96f7\u65af\u8003\u683c\u3001\u6234\u592b\u00b7\u7f57\u5e03\u68ee\u3001\u9053\u683c\u00b7\u7f57\u65af\u3001\u4fdd\u7f57\u00b7\u7f57\u592b\u7eb3\u3001\u9c8d\u52c3\u00b7\u65af\u666e\u7f57\u5c14\u3001\u4e39\u00b7\u65af\u6e29\u54c8\u54c8\u5c14\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u6211\u5ffd\u7565\u4e86\u8bb8\u591a\u6211\u8ba8\u538c\u7684\u7cfb\u7edf\u7684\u8bbe\u8ba1\uff0c\u4f46\u8fd9\u4ea7\u751f\u4e86\u76f8\u5f53\u6709\u7528\u7684\u60f3\u6cd5\u548c\u6001\u5ea6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u975e\u5e38\u8ba4\u771f\u5730\u76f8\u4fe1\u5386\u53f2\uff0c\u800c\u5e94\u8be5\u8ba4\u4e3a\u8fd9\u662f\u6f14\u5458\u5728\u79bb\u5f00\u821e\u53f0\u5f88\u4e45\u4e4b\u540e\u624d\u505a\u51fa\u7684\u65e0\u529b\u7684\u624b\u52bf\u3002\n\u611f\u8c22\u4f17\u591a\u8bc4\u5ba1\u5458\u5fcd\u53d7\u4e86\u4ed6\u4eec\u4e0d\u5f97\u4e0d\u8bc4\u8bba\u7684\u8bb8\u591a\u8349\u7a3f\u3002\u7279\u522b\u611f\u8c22\u8fc8\u514b\u00b7\u9a6c\u5965\u5c3c\u5982\u6b64\u6e29\u548c\u5730\u5e2e\u52a9\u6211\uff0c\u8ba9\u6211\u5f88\u597d\u5730\u542c\u53d6\u4e86\u4ed6\u7684\u5efa\u8bae\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u6781\u5927\u5730\u6539\u8fdb\u4e86\u8fd9\u7bc7\u6587\u7ae0--\u4e5f\u8981\u611f\u8c22\u6211\u7684\u8001\u670b\u53cb\u8ba9\u00b7\u8428\u7c73\u7279(Jean Sammet)\uff0c\u4ed6\u786e\u5b9e\u5413\u574f\u4e86\u6211\uff0c\u8ba9\u6211\u5199\u5b8c\u4e86\u8fd9\u7bc7\u6587\u7ae0--\u6211\u4e0d\u60f3\u77e5\u9053\u5982\u679c\u6211\u8fdf\u5230\u4e86\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u96ea\u8389\u00b7\u9ea6\u514b\u6d1b\u592b\u6797\u548c\u91d1\u00b7\u7f57\u65af\u5728\u6536\u96c6\u6240\u6709\u6750\u6599\u65b9\u9762\u5e2e\u4e86\u5927\u5fd9\u3002\n\u867d\u7136\u9762\u5411\u5bf9\u8c61\n\u65e0\u8bba\u662f\u4ece\u5185\u90e8\u8fd8\u662f\u5916\u90e8\uff0c\u65b0\u60f3\u6cd5\u90fd\u4f1a\u7ecf\u5386\u63a5\u53d7\u7684\u9636\u6bb5\u3002\u5728\u5185\u90e8\uff0c\u8fd9\u4e2a\u5e8f\u5217\u4ece\u51e0\u4e4e\u770b\u4e0d\u5230\u4e00\u4e2a\u6a21\u5f0f\u51e0\u6b21\uff0c\u7136\u540e\u6ce8\u610f\u5230\u5b83\uff0c\u4f46\u6ca1\u6709\u610f\u8bc6\u5230\u5b83\u7684\u5b87\u5b99\u610f\u4e49\uff0c\u7136\u540e\u5728\u51e0\u4e2a\u9886\u57df\u64cd\u4f5c\u5730\u4f7f\u7528\u5b83\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u5927\u65cb\u8f6c\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u6210\u4e3a\u4e00\u79cd\u65b0\u7684\u601d\u7ef4\u65b9\u5f0f\u7684\u4e2d\u5fc3\uff0c\u6700\u540e\uff0c\u5b83\u53d8\u6210\u4e86\u5b83\u6700\u521d\u8131\u79bb\u7684\u90a3\u79cd\u50f5\u5316\u7684\u5b97\u6559\u3002\u6b63\u5982\u53d4\u672c\u534e\u6240\u6307\u51fa\u7684\uff0c\u4ece\u5916\u90e8\u6765\u770b\uff0c\u8fd9\u4e2a\u65b0\u60f3\u6cd5\u9996\u5148\u88ab\u6307\u8d23\u4e3a\u75af\u5b50\u7684\u4f5c\u54c1\uff0c\u51e0\u5e74\u540e\u5b83\u88ab\u8ba4\u4e3a\u662f\u663e\u800c\u6613\u89c1\u548c\u5e73\u51e1\u7684\uff0c\u6700\u540e\u6700\u521d\u7684\u6279\u8bc4\u8005\u5c06\u58f0\u79f0\u5b83\u662f\u53d1\u660e\u7684\u3002\n\u548c\u821e\u53f0\u4e00\u6837\uff0c1961\u5e74\u5728\u7a7a\u519b\u5f53\u7a0b\u5e8f\u5458\u7684\u65f6\u5019\uff0c\u6211\u51e0\u4e4e\u770b\u4e0d\u5230\u8fd9\u4e2a\u60f3\u6cd5\u3002\u7b2c\u4e00\u4e2a\u662f\u5728Burroughs 220\u4e0a\uff0c\u4ee5\u4e00\u79cd\u5c06\u6587\u4ef6\u4ece\u4e00\u4e2a\u7a7a\u519b\u8bad\u7ec3\u53f8\u4ee4\u90e8\u8bbe\u65bd\u4f20\u8f93\u5230\u53e6\u4e00\u4e2a\u7a7a\u519b\u8bad\u7ec3\u53f8\u4ee4\u90e8\u8bbe\u65bd\u7684\u5f62\u5f0f\u3002\u5f53\u65f6\u8fd8\u6ca1\u6709\u6807\u51c6\u7684\u64cd\u4f5c\u7cfb\u7edf\u6216\u6587\u4ef6\u683c\u5f0f\uff0c\u6240\u4ee5\u4e00\u4e9b(\u76f4\u5230\u4eca\u5929\u8fd8\u4e0d\u4e3a\u4eba\u6240\u77e5\u7684)\u8bbe\u8ba1\u5e08\u51b3\u5b9a\u5de7\u5999\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u628a\u6bcf\u4e2a\u6587\u4ef6\u5206\u6210\u4e09\u4e2a\u90e8\u5206\u3002\u7b2c\u4e09\u90e8\u5206\u662f\u4efb\u610f\u5927\u5c0f\u548c\u683c\u5f0f\u7684\u6240\u6709\u5b9e\u9645\u6570\u636e\u8bb0\u5f55\u3002\u7b2c\u4e8c\u90e8\u5206\u5305\u542b\u77e5\u9053\u5982\u4f55\u83b7\u53d6\u8bb0\u5f55\u548c\u5b57\u6bb5\u4ee5\u590d\u5236\u548c\u66f4\u65b0\u7b2c\u4e09\u90e8\u5206\u7684B220\u8fc7\u7a0b\u3002\u7b2c\u4e00\u90e8\u5206\u662f\u6307\u5411\u7b2c\u4e8c\u90e8\u5206\u4e2d\u8fc7\u7a0b\u5165\u53e3\u70b9\u7684\u6570\u7ec4\u6216\u76f8\u5bf9\u6307\u9488(\u521d\u59cb\u6307\u9488\u4ee5\u6807\u51c6\u987a\u5e8f\u8868\u793a\u6807\u51c6\u542b\u4e49)\u3002\u4e0d\u7528\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f1f\u5927\u7684\u60f3\u6cd5\uff0c\u5e76\u5728\u540e\u6765\u7684\u8bb8\u591a\u7cfb\u7edf\u4e2d\u4f7f\u7528\uff0c\u76f4\u5230\u5f3a\u5236\u4f7f\u7528COBOL\u5c06\u5176\u8d76\u5c3d\u6740\u7edd\u3002\n\u7b2c\u4e8c\u6b21\u51e0\u4e4e\u770b\u4e0d\u5230\u8fd9\u4e2a\u60f3\u6cd5\u53d1\u751f\u5728\u7a0d\u665a\u4e00\u70b9\u7684\u65f6\u5019\uff0c\u5f53\u65f6ATC\u51b3\u5b9a\u7528B5000\u53d6\u4ee3220\u3002\u5f53\u65f6\u6211\u5e76\u6ca1\u6709\u771f\u6b63\u6b23\u8d4f\u5b83\uff0c\u4f46\u6211\u786e\u5b9e\u6ce8\u610f\u5230\u4e86\u5b83\u7684\u5206\u6bb5\u5b58\u50a8\u7cfb\u7edf\u3001HLL\u7f16\u8bd1\u548c\u5b57\u8282\u7f16\u7801\u6267\u884c\u7684\u6548\u7387\u3001\u5b50\u4f8b\u7a0b\u8c03\u7528\u548c\u591a\u8fdb\u7a0b\u5207\u6362\u7684\u81ea\u52a8\u673a\u5236\u3001\u5171\u4eab\u7684\u7eaf\u4ee3\u7801\u3001\u5b83\u7684\u4fdd\u62a4\u673a\u5236\u7b49\u7b49\u3002\u800c\u4e14\uff0c\u6211\u770b\u5230\u5bf9\u5b83\u7684Program Reference Table\u7684\u8bbf\u95ee\u7b26\u5408220\u6587\u4ef6\u7cfb\u7edf\u4e3a\u6a21\u5757\u63d0\u4f9b\u7a0b\u5e8f\u63a5\u53e3\u7684\u65b9\u6848\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u5728\u8fd9\u53f0\u673a\u5668\u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u4e0d\u662fOOP\u7684\u60f3\u6cd5\uff0c\u800c\u662f\u5bf9HLL\u7ffb\u8bd1\u548c\u8bc4\u4f30\u7684\u4e00\u4e9b\u89c1\u89e3\u3002[Barton\uff0c1961][Burroughs\uff0c1961]\u3002\n\u4ece\u7a7a\u519b\u6bd5\u4e1a\u540e\uff0c\u6211\u5728\u5927\u5b66\u7684\u5176\u4f59\u90e8\u5206\u4e00\u76f4\u5728\u4e3a\u56fd\u5bb6\u5927\u6c14\u7814\u7a76\u4e2d\u5fc3(National Center for\u5927\u6c14Research)\u7f16\u5199\u5927\u91cf\u5929\u6c14\u6570\u636e\u7684\u68c0\u7d22\u7cfb\u7edf\u3002\u603b\u7684\u6765\u8bf4\uff0c\u6211\u5bf9\u6a21\u62df\u5f88\u611f\u5174\u8da3--\u5c24\u5176\u662f\u4e00\u53f0\u673a\u5668\u5bf9\u53e6\u4e00\u53f0\u673a\u5668\u7684\u6a21\u62df--\u4f46\u9664\u4e86\u5728CDC 6600\u4e0a\u505a\u4e00\u7ef4\u7248\u672c\u7684\u4f4d\u573a\u5757\u4f20\u8f93(Bitblt)\u6765\u6a21\u62df\u5404\u79cd\u673a\u5668\u7684\u5b57\u957f\u5916\uff0c\u6211\u7684\u5927\u90e8\u5206\u6ce8\u610f\u529b\u90fd\u88ab\u5b66\u6821\u5206\u6563\u4e86\u6ce8\u610f\u529b\uff0c\u6216\u8005\u6211\u5e94\u8be5\u8bf4\u662f\u5b66\u6821\u7684\u5267\u9662\u3002\u5728\u5947\u4f69\u74e6\u7011\u5e03\u5e2e\u52a9\u8c03\u8bd56600\u65f6\uff0c\u6211\u8bfb\u5230\u4e86\u6208\u767b\u00b7\u6469\u5c14(Gordon Moore)\u7684\u4e00\u7bc7\u6587\u7ae0\uff0c\u6587\u7ae0\u9884\u6d4b\uff0c\u82af\u7247\u4e0a\u96c6\u6210\u7684\u7845\u5c06\u5728\u672a\u6765\u8bb8\u591a\u5e74\u5185\u5728\u5bc6\u5ea6\u548c\u6210\u672c\u65b9\u9762\u6210\u500d\u63d0\u9ad8[\u6469\u5c1465]\u30021965\u5e74\u7684\u90a3\u4e2a\u65f6\u5019\uff0c\u7ad9\u5728\u623f\u95f4\u5927\u5c0f\u7684\u6c1f\u5229\u6602\u51b7\u5374\u768410MIP6600\u65c1\u8fb9\uff0c\u4ed6\u4ee4\u4eba\u9707\u60ca\u7684\u9884\u6d4b\u51e0\u4e4e\u6ca1\u6709\u6295\u5c04\u5230\u6211\u7684\u89c6\u91ce\u4e2d\u3002\n\u7531\u4e8e\u4e00\u8fde\u4e32\u7684\u4fa5\u5e78\uff0c\u6211\u6700\u7ec8\u57281966\u5e74\u79cb\u5929\u5c31\u8bfb\u4e8e\u72b9\u4ed6\u5927\u5b66(University Of Utah)\u7684\u7814\u7a76\u751f\u9662\uff0c\u5bf9\u6b64\u4e00\u65e0\u6240\u77e5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4ece\u672a\u542c\u8bf4\u8fc7ARPA\u6216\u5176\u9879\u76ee\uff0c\u4e5f\u4ece\u672a\u542c\u8bf4\u8fc7\u72b9\u4ed6\u5dde\u5728\u8fd9\u4e2a\u793e\u533a\u7684\u4e3b\u8981\u76ee\u6807\u662f\u89e3\u51b33D\u56fe\u5f62\u4e2d\u7684\u9690\u85cf\u7ebf\u95ee\u9898\uff0c\u76f4\u5230\u6211\u771f\u6b63\u8d70\u8fdb\u6234\u592b\u00b7\u57c3\u6587\u65af(Dave Evans)\u7684\u529e\u516c\u5ba4\uff0c\u5bfb\u627e\u4e00\u4efd\u5de5\u4f5c\u548c\u4e00\u5f20\u529e\u516c\u684c\u3002\u6234\u592b\u7684\u684c\u5b50\u4e0a\u653e\u7740\u4e00\u53e0\u4e00\u82f1\u5c3a\u9ad8\u7684\u68d5\u8272\u5c01\u9762\u6587\u4ef6\uff0c\u4ed6\u9012\u7ed9\u6211\u5176\u4e2d\u4e00\u4efd\uff1a\u62ff\u7740\u8fd9\u4e2a\u770b\u4e00\u770b\u3002\n\u6bcf\u4e2a\u65b0\u6765\u7684\u4eba\u90fd\u6709\u4e00\u4e2a\u3002\u4e66\u540d\u662f\u300a\u753b\u677f\uff1a\u4eba\u673a\u56fe\u5f62\u4ea4\u6d41\u7cfb\u7edf\u300b(\u8428\u745f\u5170\u51fa\u7248\u793e\uff0c1963)\u3002\u5b83\u80fd\u505a\u7684\u4e8b\u60c5\u662f\u76f8\u5f53\u4e86\u4e0d\u8d77\u7684\uff0c\u5bf9\u6211\u6240\u9047\u5230\u7684\u4efb\u4f55\u4e00\u53f0\u8ba1\u7b97\u673a\u7684\u4f7f\u7528\u90fd\u662f\u5b8c\u5168\u964c\u751f\u7684\u3002\u6700\u5bb9\u6613\u7406\u89e3\u7684\u4e09\u4e2a\u5927\u6982\u5ff5\u662f\uff1a\u5b83\u662f\u73b0\u4ee3\u4ea4\u4e92\u5f0f\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u53d1\u660e\uff1b\u901a\u8fc7\u7ed8\u5236\u53ef\u4ee5\u751f\u6210\u5b9e\u4f8b\u56fe\u5f62\u7684\u6bcd\u7248\u56fe\u7eb8\u6765\u63cf\u8ff0\u4e8b\u7269\uff1b\u63a7\u5236\u548c\u52a8\u6001\u7531\u540c\u6837\u4ee5\u56fe\u5f62\u5f62\u5f0f\u63d0\u4f9b\u7684\u7ea6\u675f\u6765\u63d0\u4f9b\uff0c\u8fd9\u4e9b\u7ea6\u675f\u53ef\u4ee5\u5e94\u7528\u4e8e\u6bcd\u7248\u4ee5\u5f62\u6210\u76f8\u4e92\u5173\u8054\u7684\u90e8\u5206\u3002\u5b83\u7684\u6570\u636e\u7ed3\u6784\u5f88\u96be\u7406\u89e3--\u552f\u4e00\u4e0d\u592a\u719f\u6089\u7684\u7ed3\u6784\u662f\u5d4c\u5165\u6307\u5411\u8fc7\u7a0b\u7684\u6307\u9488\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2a\u79f0\u4e3a\u53cd\u5411\u7d22\u5f15\u7684\u8fc7\u7a0b\u8df3\u8f6c\u5230\u4f8b\u7a0b\uff0c\u6bd4\u5982220\u6587\u4ef6\u7cfb\u7edf[Ross\uff0c1961]\u3002\u5b83\u662f\u7b2c\u4e00\u4e2a\u62e5\u6709\u88c1\u526a\u548c\u7f29\u653e\u529f\u80fd\u7684\u7a97\u53e3--\u5728\u65b9\u5706\u7ea61/3\u82f1\u91cc\u7684\u865a\u62df\u5e8a\u5355\u4e0a\u753b\u51fa\u4e86\u4e00\u4e2a\u8349\u56fe\uff01\u3002\n\u6211\u8f6c\u4e86\u8f6c\u5934\uff0c\u627e\u5230\u4e86\u6211\u7684\u529e\u516c\u684c\u3002\u4e0a\u9762\u6709\u4e00\u5806\u5f55\u50cf\u5e26\u548c\u6e05\u5355\uff0c\u8fd8\u6709\u4e00\u5f20\u7eb8\u6761\uff1a\u8fd9\u662f1108\u7684\u963f\u5c14\u6208\u5c14\u3002\u8fd9\u4e0d\u7ba1\u7528\u3002\u666e\u83b1\n\u6700\u540e\uff0c\u6211\u548c\u53e6\u4e00\u540d\u7814\u7a76\u751f\u5728\u5927\u5385\u91cc80\u82f1\u5c3a\u7684\u5730\u65b9\u6253\u5f00\u4e86\u5217\u51fa\u7684\u7a0b\u5e8f\uff0c\u7136\u540e\u722c\u8fc7\u5b83\uff0c\u5411\u5bf9\u65b9\u5927\u58f0\u558a\u51fa\u4e86\u81ea\u5df1\u7684\u53d1\u73b0\u3002\u6700\u5947\u602a\u7684\u90e8\u5206\u662f\u5b58\u50a8\u5206\u914d\u5668\uff0c\u5b83\u4e0d\u50cfALGOL\u90a3\u6837\u9075\u5b88\u5806\u6808\u89c4\u5219\u3002\u51e0\u5929\u540e\uff0c\u8fd9\u63d0\u4f9b\u4e86\u7ebf\u7d22\u3002Simula\u5206\u914d\u7684\u662f\u4e0eSketchpad\u5b9e\u4f8b\u975e\u5e38\u76f8\u4f3c\u7684\u7ed3\u6784\u3002\u6709\u4e00\u4e9b\u63cf\u8ff0\u5c31\u50cf\u5927\u5e08\u4e00\u6837\uff0c\u4ed6\u4eec\u53ef\u4ee5\u521b\u5efa\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5b9e\u4f53\u3002Sketchpad\u6240\u79f0\u7684\u4e3b\u673a\u548c\u5b9e\u4f8b\uff0cSimula\u5c06\u5176\u79f0\u4e3a\u6d3b\u52a8\u548c\u6d41\u7a0b\u3002\u6b64\u5916\uff0cSimula\u662f\u4e00\u79cd\u7528\u4e8e\u63a7\u5236\u7c7b\u4f3c\u753b\u677f\u7684\u5bf9\u8c61\u7684\u8fc7\u7a0b\u6027\u8bed\u8a00\uff0c\u56e0\u6b64\u6bd4\u7ea6\u675f\u5177\u6709\u66f4\u5927\u7684\u7075\u6d3b\u6027(\u5c3d\u7ba1\u5728\u4f18\u96c5\u4e0a\u6709\u4e00\u4e9b\u4ee3\u4ef7)[Nygaard\uff0c1966\uff0cNygaard\uff0c1983]\u3002\n\u8fd9\u662f\u4e00\u90e8\u8f70\u52a8\u4e00\u65f6\u7684\u7535\u5f71\uff0c\u4ece\u90a3\u4ee5\u540e\u6211\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\u6211\u8ba4\u4e3a\uff0c\u8fd9\u90e8\u70ed\u95e8\u5f71\u7247\u4e4b\u6240\u4ee5\u6709\u5982\u6b64\u5927\u7684\u5f71\u54cd\u529b\uff0c\u662f\u56e0\u4e3a\u6211\u5df2\u7ecf\u4ee5\u4e0d\u540c\u7684\u5f62\u5f0f\u591a\u6b21\u770b\u5230\u4e86\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u4ee5\u81f3\u4e8e\u6700\u7ec8\u7684\u8ba4\u53ef\u662f\u5982\u6b64\u7b3c\u7edf\uff0c\u4ee5\u81f3\u4e8e\u6709\u4e00\u79cd\u987f\u609f\u7684\u6027\u8d28\u3002\u6211\u7684\u6570\u5b66\u4e13\u4e1a\u96c6\u4e2d\u5728\u62bd\u8c61\u4ee3\u6570\u4e0a\uff0c\u5b83\u4eec\u7684\u51e0\u4e2a\u8fd0\u7b97\u4e00\u822c\u9002\u7528\u4e8e\u8bb8\u591a\u7ed3\u6784\u3002\u6211\u7684\u751f\u7269\u5b66\u4e13\u4e1a\u4e13\u6ce8\u4e8e\u7ec6\u80de\u65b0\u9648\u4ee3\u8c22\u548c\u66f4\u5927\u89c4\u6a21\u7684\u5f62\u6001\u53d1\u751f\uff0c\u5b83\u7684\u6982\u5ff5\u662f\u63a7\u5236\u590d\u6742\u8fc7\u7a0b\u7684\u7b80\u5355\u673a\u5236\uff0c\u4ee5\u53ca\u4e00\u79cd\u80fd\u591f\u5206\u5316\u4e3a\u6240\u6709\u9700\u8981\u7684\u79ef\u6728\u7684\u79ef\u6728\u3002220\u6587\u4ef6\u7cfb\u7edf\u3001B5000\u3001Sketchpad\uff0c\u6700\u540e\u662fSimula\uff0c\u90fd\u5c06\u76f8\u540c\u7684\u7406\u5ff5\u7528\u4e8e\u4e0d\u540c\u7684\u76ee\u7684\u3002B5000\u7684\u4e3b\u8981\u8bbe\u8ba1\u8005\u3001\u72b9\u4ed6\u5dde\u6559\u6388\u9c8d\u52c3\u00b7\u5df4\u987f(Bob Barton)\u51e0\u5929\u524d\u5728\u4ed6\u7684\u4e00\u6b21\u6f14\u8bb2\u4e2d\u8bf4\uff1a\u9012\u5f52\u8bbe\u8ba1\u7684\u57fa\u672c\u539f\u5219\u662f\u4f7f\u5404\u4e2a\u90e8\u5206\u5177\u6709\u4e0e\u6574\u4f53\u76f8\u540c\u7684\u80fd\u529b\u3002\u6211\u7b2c\u4e00\u6b21\u628a\u6574\u4f53\u770b\u4f5c\u662f\u6574\u53f0\u8ba1\u7b97\u673a\uff0c\u5e76\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u6709\u4eba\u8981\u628a\u5b83\u5206\u6210\u66f4\u5f31\u7684\u4e1c\u897f\uff0c\u79f0\u4e3a\u6570\u636e\u7ed3\u6784\u548c\u8fc7\u7a0b\u3002\u4e3a\u4ec0\u4e48\u4e0d\u628a\u5b83\u5206\u6210\u51e0\u53f0\u5c0f\u7535\u8111\u5462\uff1f\u56e0\u4e3a\u5206\u65f6\u6280\u672f\u5f00\u59cb\u5174\u8d77\u4e86\u3002\u4f46\u4e0d\u662f\u51e0\u5341\u4e2a\u3002\u4e3a\u4ec0\u4e48\u4e0d\u662f\u6210\u5343\u4e0a\u4e07\u4e2a\uff0c\u6bcf\u4e2a\u90fd\u6a21\u62df\u4e00\u4e2a\u6709\u7528\u7684\u7ed3\u6784\u5462\uff1f\n\u6211\u56de\u60f3\u8d77\u83b1\u5e03\u5c3c\u8328(Leibniz)\u7684\u5355\u8c03\u6d3e\uff0c\u67cf\u62c9\u56fe(Plato)\u7684\u81ea\u7136\u5206\u5272\u8bba\uff0c\u4ee5\u53ca\u5176\u4ed6\u89e3\u6790\u590d\u6742\u6027\u7684\u5c1d\u8bd5\u3002\u5f53\u7136\uff0c\u54f2\u5b66\u662f\u5173\u4e8e\u89c2\u70b9\u7684\uff0c\u5de5\u7a0b\u5b66\u662f\u5173\u4e8e\u884c\u52a8\u7684\uff0c\u79d1\u5b66\u662f\u4ecb\u4e8e\u4e24\u8005\u4e4b\u95f4\u7684\u5feb\u4e50\u5a92\u4ecb\u3002\u53ef\u4ee5\u6beb\u4e0d\u5938\u5f20\u5730\u8bf4\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u7684\u5927\u90e8\u5206\u60f3\u6cd5\u90fd\u690d\u6839\u4e8e\u897f\u7a46\u62c9\uff0c\u4f46\u5e76\u4e0d\u662f\u4e3a\u4e86\u6539\u8fdb\u5b83\u3002\u8fd9\u662f\u4e00\u79cd\u5168\u65b0\u7684\u8ba1\u7b97\u7ed3\u6784\u65b9\u5f0f\u7684\u627f\u8bfa\uff0c\u5438\u5f15\u4e86\u6211\u7684\u60f3\u8c61\u529b\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8981\u7406\u89e3\u5982\u4f55\u8fd0\u7528\u8fd9\u4e9b\u89c1\u89e3\u5e76\u8bbe\u8ba1\u51fa\u6709\u6548\u7684\u673a\u5236\u6765\u6267\u884c\u5b83\u4eec\uff0c\u9700\u8981\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u3002\n\u6234\u592b\u00b7\u57c3\u6587\u65af(Dave Evans)\u4e0d\u592a\u76f8\u4fe1\u7814\u7a76\u751f\u9662\u662f\u4e00\u4e2a\u673a\u6784\u3002\u4e0eARPA\u7684\u8bb8\u591a\u627f\u5305\u5546\u4e00\u6837\uff0c\u4ed6\u5e0c\u671b\u4ed6\u7684\u5b66\u751f\u505a\u7684\u662f\u5b9e\u5b9e\u5728\u5728\u7684\u4e8b\u60c5\uff0c\u4ed6\u4eec\u5e94\u8be5\u5c3d\u5feb\u8bfb\u5b8c\u7814\u7a76\u751f\uff1b\u4ed6\u4eec\u7684\u8bba\u6587\u5e94\u8be5\u63d0\u9ad8\u6700\u5148\u8fdb\u7684\u6c34\u5e73\u3002\u6234\u592b\u7ecf\u5e38\u7ed9\u4ed6\u7684\u5b66\u751f\u627e\u54a8\u8be2\u5de5\u4f5c\uff0c1967\u5e74\u521d\uff0c\u4ed6\u628a\u6211\u4ecb\u7ecd\u7ed9\u4e86\u57c3\u5fb7\u00b7\u94b1\u5fb7\u5c14(Ed Cheadle)\uff0c\u4ed6\u662f\u5f53\u5730\u4e00\u5bb6\u822a\u7a7a\u822a\u5929\u516c\u53f8\u7684\u53cb\u597d\u786c\u4ef6\u5929\u624d\uff0c\u5f53\u65f6\u6b63\u5728\u7814\u53d1\u4e00\u53f0\u5c0f\u578b\u673a\u5668\u3002\u8fd9\u5e76\u4e0d\u662f\u7b2c\u4e00\u53f0\u4e2a\u4eba\u7535\u8111--\u90a3\u662f\u97e6\u65af\u00b7\u514b\u62c9\u514b\u7684LINC--\u4f46\u57c3\u5fb7\u60f3\u8ba9\u975e\u8ba1\u7b97\u673a\u4e13\u4e1a\u4eba\u58eb\u4f7f\u7528\u5b83\uff0c\u7279\u522b\u662f\u4ed6\u60f3\u7528\u4e00\u79cd\u66f4\u9ad8\u7ea7\u7684\u8bed\u8a00\u6765\u7f16\u7a0b\uff0c\u6bd4\u5982BASIC\u3002\u6211\u8bf4\uff0c\u4e54\u65af\u600e\u4e48\u529e\uff1f\u4ed6\u8bf4\uff1a\u5f53\u7136\uff0c\u4e0d\u7ba1\u4f60\u600e\u4e48\u60f3\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6109\u5feb\u7684\u5408\u4f5c\u7684\u5f00\u59cb\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3aFLEX\u673a\u5668\u3002\u968f\u7740\u8bbe\u8ba1\u7684\u6df1\u5165\uff0c\u6211\u4eec\u610f\u8bc6\u5230\u6211\u4eec\u60f3\u8981\u52a8\u6001\u6a21\u62df\u548c\u6269\u5c55\uff0c\u8fd9\u4e24\u79cd\u8bed\u8a00Joss(\u6216\u8005\u6211\u6240\u77e5\u9053\u7684\u4efb\u4f55\u73b0\u6709\u8bed\u8a00)\u90fd\u4e0d\u662f\u7279\u522b\u64c5\u957f\u3002\u8fd9\u53f0\u673a\u5668\u5bf9\u897f\u7a46\u62c9\u6765\u8bf4\u592a\u5c0f\u4e86\uff0c\u6240\u4ee5\u51fa\u4e86\u95ee\u9898\u3002\u4e54\u65af\u7684\u7f8e\u4e3d\u4e4b\u5904\u5728\u4e8e\u3002\n.", "note_en": "Permission to copy without fee all or part of this material is\t granted provided that the copies are not made or distributed for\t direct commercial advantage, the ACM copyright notice and the\t title of the publication and its date appear, and notice is given\t that copying is by permission of the Association for Computing\t Machinery. To copy otherwise, or to republish, requires a fee\t and/or specific permission. \t HOPL-II/4/93/MA, USA\t \u00a9 1993 ACM 0-89791-571-2/93/0004/0069...$1.50\n    Most ideas come from previous ideas. The sixties, particularly in the ARPA\t\tcommunity, gave rise to a host of notions about &#34;human-computer symbiosis&#34;\t\tthrough interactive time-shared computers, graphics screens and pointing \t\tdevices. Advanced computer languages were invented to simulate complex systems\t\tsuch as oil refineries and semi-intelligent behavior. The soon-to-follow paradigm\t\tshift of modern personal computing, overlapping window interfaces, and \t\tobject-oriented design came from seeing the work of the sixties as something\t\tmore than a &#34;better old thing.&#34; This is, more than a better way: to do mainframe\t\tcomputing; for end-users to invoke functionality; to make data structures more\t\tabstract. Instead the promise of exponential growth in computing/$/volume\t\tdemanded that the sixties be regarded as &#34; almost a new thing&#34; and to find out\t\twhat the actual &#34;new things&#34; might be. For example, one would compute with a\t\thandheld &#34;Dynabook&#34; in a way that would not be possible on a shared mainframe;\t\tmillions of potential users meant that the user interface would have to\t\tbecome a learning environment along the lines of Montessori and Bruner; and\t\tneeds for large scope, reduction in complexity, and end-user literacy would \t\trequire that data and control structures be done away with in favor of a more\t\tbiological scheme of protected universal cells interacting only through messages\t\tthat could mimic any desired behavior.\n  Early Smalltalk was the first complete realization of these new points of view\t\tas parented by its many predecessors in hardware, language and user interface\t\tdesign. It became the exemplar of the new computing, in part, because we were\t\tactually trying for a qualitative shift in belief structures\u2014a new Kuhnian paradigm\t\tin the same spirit as the invention of the printing press\u2014and thus took \t\thighly extreme positions which almost forced these new styles to be invented.\n      \u2014To SKETCHPAD, JOSS, LISP, and SIMULA, the 4 great programming conceptions of the sixties\n    I&#39;m writing this introduction in an airplane at 35,000 feet. On my lap is a five pound\t\tnotebook computer\u20141992&#39;s &#34;Interim Dynabook&#34;\u2014by the end of the year it sold for under $700. It\t\thas a flat, crisp, high-resolution bitmap screen, overlapping windows, icons, a pointing device,\t\tconsiderable storage and computing capacity, and its best software is object-oriented. It has\t\tadvanced networking built-in and there are already options for wireless networking.\t\tSmalltalk runs on this system, and is one of the main systems I use for my current work with\t\tchildren. In some ways this is more than a Dynabook (quantitatively), and some ways not\t\tquite there yet (qualitatively). All in all, pretty much what was in mind during the late sixties.\n  Smalltalk was part of this larger pursuit of ARPA, and later of Xerox PARC, that I called  personal\t\tcomputing. There were so many people involved in each stage from the research communities\t\tthat the accurate allocation of credit for ideas is intractably difficult. Instead, as Bob Barton\t\tliked to quote Goethe, we should &#34;share in the excitement of discovery without vain attempts\t\tto claim priority.&#34;\n  I will try to show where most of the influences came from and how they were transformed \t\tin the magnetic field formed by the new personal computing metaphor. It was the  attitudes as \t\twell as the great ideas of the pioneers that helped Smalltalk get invented. Many of the people I\t\tadmired most at this time\u2014such as Ivan Sutherland, Marvin Minsky, Seymour Papert, Gordon\t\tMoore, Bob Barton, Dave Evans, Butler Lampson, Jerome Bruner, and others\u2014seemed to have\t\ta splendid sense that their creations, though wonderful by relative standards, were not near to\t\tthe absolute thresholds that had to be crossed. Small minds try to form religions, the great ones\t\tjust want better routes up the mountain. Where Newton said he saw further by standing on the \t\tshoulders of giants, computer scientists all too often stand on each other&#39;s toes. Myopia is\t\tstill a problem where there are giants&#39; shoulders to stand on\u2014&#34;outsight&#34; is better than\t\tinsight\u2014but it can be minimized by using glasses whose lenses are highly sensitive to \t\testhetics and criticism.\n  Programming languages can be categorized in a number of ways: imperative, applicative, \t\tlogic-based, problem-oriented, etc. But they all seem to be either an &#34;agglutination of features&#34;\t\tor a &#34;crystallization of style.&#34; COBOL, PL/1, Ada, etc., belong to the first kind; LISP, APL\u2014\t\tand Smalltalk\u2014are the second kind. It is probably not an accident that the agglutinative languages\t\tall seem to have been instigated by committees, and the crystallization languages by a single person.\n  Smalltalk&#39;s design\u2014and existence\u2014is due to the insight that everything we can describe can be\t\trepresented by the recursive composition of a single kind of behavioral building block that hides its\t\tcombination of state and process inside itself and can be dealt with only through the exchange of\t\tmessages. Philosophically, Smalltalk&#39;s objects have much in common with the monads of Leibniz and\t\tthe notions of 20th century physics and biology. Its way of making objects is quite Platonic in that\t\tsome of them act as idealizations of concepts\u2014 Ideas\u2014from which  manifestations can be created. That\t\tthe Ideas are themselves manifestations (of the Idea-Idea) and that the Idea-Idea is  a-kind-of\t\tManifestation-Idea\u2014which is a-kind-of itself, so that the system is completely self-describing\u2014\t\twould have been appreciated by Plato as an extremely practical joke [Plato].\n  In computer terms, Smalltalk is a recursion on the notion of computer itself. Instead of dividing\t\t&#34;computer stuff&#34; into things each less strong than the whole\u2014like data structures, procedures, and\t\tfunctions which are the usual paraphernalia of programming languages\u2014each Smalltalk object is a\t\trecursion on the entire possibilities of the computer. Thus its semantics are a bit like having thousands\t\tand thousands of computers all hooked together by a very fast network. Questions of concrete representation\t\tcan thus be postponed almost indefinitely because we are mainly concerned that the computers\t\tbehave appropriately, and are interested in particular strategies only if the results are off or\t\tcome back too slowly.\n  Though it has noble ancestors indeed, Smalltalk&#39;s contribution is a new design paradigm\u2014which I\t\tcalled  object-oriented\u2014for attacking large problems of the professional programmer, and making\t\tsmall ones possible for the novice user. Object-oriented design is a successful attempt to qualitatively\t\timprove the efficiency of modeling the ever more complex dynamic systems and user relationships\t\tmade possible by the silicon explosion.\n      In this history I will try to be true to Hamming&#39;s request as moderated by Hobbes&#39; observation. I\t\thave had difficulty in previous attempts to write about Smalltalk because my emotional involvement\t\thas always been centered on personal computing as an amplifier for human reach\u2014rather than \t\tprogramming system design\u2014and we haven&#39;t got there yet. Though I was the instigator and original\t\tdesigner of Smalltalk, it has always belonged more to the people who make it work and got it out the\t\tdoor, especially Dan Ingalls and Adele Goldberg. Each of the LRGers contributed in deep and remarkable\t\tways to the project, and I wish there was enough space to do them all justice. But I think all of\t\tus would agree that for most of the development of Smalltalk, Dan was the central figure.\t\tProgramming is at heart a practical art in which real things are built, and a real implementation thus\t\thas to exist. In fact many if not most languages are in use today not because they have any real merits\t\tbut because of their existence on one or more machines, their ability to be bootstrapped, etc. But Dan\t\twas far more than a great implementer, he also became more and more of the designer, not just of the\t\tlanguage but also of the user interface as Smalltalk moved into the practical world.\n  Here, I will try to center focus on the events leading up to Smalltalk-72 and its transition to its\t\tmodern form as Smalltalk-76. Most of the ideas occurred here, and many of the earliest stages of OOP\t\tare poorly documented in references almost impossible to find.\n  This history is too long, but I was amazed at how many people and systems that had an influence\t\tappear only as shadows or not at all. I am sorry not to be able to say more about Bob Balzer, Bob \t\tBarton, Danny Bobrow, Steve Carr, Wes Clark, Barbara Deutsch, Peter Deutsch, Bill Duvall, Bob\t\tFlegal, Laura Gould, Bruce Horn, Butler Lampson, Dave Liddle, William Newman, Bill Paxton,\t\tTrygve Reenskaug, Dave Robson, Doug Ross, Paul Rovner, Bob Sproull, Dan Swinehart, Bert\t\tSutherland, Bob Taylor, Warren Teitelman, Bonnie Tennenbaum, Chuck Thacker, and John Warnock.\t\tWorse, I have omitted to mention many systems whose design I detested, but that generated considerable\t\tuseful ideas and attitudes in reaction. In other words &#34;histories&#34; should not be believed very\t\tseriously but considered as &#34;FEEBLE GESTURES OFF&#34; done long after the actors have departed the stage.\n  Thanks to the numerous reviewers for enduring the many drafts they had to comment on. Special\t\tthanks to Mike Mahoney for helping so gently that I heeded his suggestions and so well that they\t\tgreatly improved this essay\u2014and to Jean Sammet, an old old friend, who quite literally frightened\t\tme into finishing it\u2014I did not want to find out what would happen if I were late. Sherri McLoughlin\t\tand Kim Rose were of great help in getting all the materials together.\n    Though OOP came from many motivations, two were central. The large scale one was to find a better\t\tmodule scheme for complex systems involving hiding of details, and the small scale one was to\t\tfind a more flexible version of assignment, and then to try to eliminate it altogether. As with most\t\tnew ideas, it originally happened in isolated fits and starts.\n  New ideas go through stages of acceptance, both from within and without. From within, the\t\tsequence moves from &#34;barely seeing&#34; a pattern several times, then noting it but not perceiving its\t\t&#34;cosmic&#34; significance, then using it operationally in several areas, then comes a &#34;grand rotation&#34; in\t\twhich the pattern becomes the center of a new way of thinking, and finally, it turns into the same\t\tkind of inflexible religion that it originally broke away from. From without, as Schopenhauer noted,\t\tthe new idea is first denounced as the work of the insane, in a few years it is considered obvious and\t\tmundane, and finally the original denouncers will claim to have invented it.\n  True to the stages, I &#34;barely saw&#34; the idea several times ca. 1961 while a programmer in the Air \t\t  \t\tForce. The first was on the Burroughs 220 in the form of a style for\t\ttransporting files from one Air Training Command installation to\t\tanother. There were no standard operating systems or file formats\t\tback then, so some (to this day unknown) designer decided to\t\tfinesse the problem by taking each file and dividing it into three\t\tparts. The third part was all of the actual data records of arbitrary\t\tsize and format. The second part contained the B220 procedures\t\tthat knew how to get at records and fields to copy and update the\t\tthird part. And the first part was an array or relative pointers \t\tinto entry points of the procedures in the second part (the initial pointers\t\twere in a standard order representing standard meanings).\t\tNeedless to say, this was a great idea, and was used in many subsequent systems until the enforced\t\tuse of COBOL drove it out of existence.\n  The second barely-seeing of the idea came just a little later when ATC decided to replace the 220\t\twith a B5000. I didn&#39;t have the perspective to really appreciate it at the time, but I did take note of its\t\tsegmented storage system, its efficiency of HLL compilation and byte-coded execution, its automatic\t\tmechanisms for subroutine calling and multiprocess switching, its pure code for sharing, its protection\t\tmechanisms, etc. And, I saw that the access to its Program Reference Table corresponded to the\t\t220 file system scheme of providing a procedural interface to a module. However, my big hit from\t\tthis machine at this time was not the OOP idea, but some insights into HLL translation and evaluation.\t\t[Barton, 1961] [Burroughs, 1961]\n  After the Air Force, I worked my way through the rest of college by programming mostly retrieval\t\t  \t\tsystems for large collections of weather data for the National \t\tCenter for Atmospheric Research. I got interested in simulation\t\tin general\u2014particularly of one machine by another\u2014but aside\t\tfrom doing a one-dimensional version of a bit-field block transfer\t\t(bitblt) on a CDC 6600 to simulate word sizes of various\t\tmachines, most of my attention was distracted by school, or I \t\tshould say the theatre at school. While in Chippewa Falls helping\t\tto debug the 6600, I read an article by Gordon Moore which\t\tpredicted that integrated silicon on chips was going to exponentially\t\timprove in density and cost over many years [Moore 65].\t\tAt the time in 1965, standing next to the room-sized freon-cooled\t\t10 MIP 6600, his astounding predictions had little projection\t\tinto my horizons.\n    Through a series of flukes, I wound up in graduate school at the University of Utah in the Fall of\t\t1966, &#34;knowing nothing.&#34; That is to say, I had never heard of ARPA or its projects, or that Utah&#39;s main\t\tgoal in this community was to solve the &#34;hidden line&#34; problem in 3D graphics, until I actually\t\twalked into Dave Evans&#39; office looking for a job and a desk. On Dave&#39;s desk was a foot-high stack of\t\tbrown covered documents, one of which he handed to me: &#34;Take this and read it.&#34;\n  Every newcomer got one. The title was &#34;Sketchpad: A man-machine graphical communication \t\tsystem&#34; [Sutherland, 1963]. What it could do was quite remarkable, and completely foreign to any use of\t\ta computer I had ever encountered. The three big ideas that were easiest to grapple with were: it was\t\tthe invention of modern interactive computer graphics; things were described by making a &#34;master\t\tdrawing&#34; that could produce &#34;instance drawings&#34;; control and dynamics were supplied by\t\t&#34;constraints,&#34; also in graphical form, that could be applied to the masters to shape an inter-related parts.\t\tIts data structures were hard to understand\u2014the only vaguely familiar construct was the embedding\t\tof pointers to procedures and using a process called reverse indexing to jump through them to \t\troutines, like the 220 file system [Ross, 1961]. It was the first to have clipping and zooming \t\twindows\u2014one &#34;sketched&#34; on a virtual sheet about 1/3 mile square!\n     Head whirling, I found my desk. On it was a pile of tapes and listings, and a note: &#34;This is the\t\tAlgol for the 1108. It doesn&#39;t work. Please make it work.&#34; The latest graduate student gets the latest\t\tdirty task.\n  The documentation was incomprehensible. Supposedly, this was the Case-Western Reserve 1107\t\tAlgol\u2014but it had been doctored to make a language called Simula; the documentation read like\t\tNorwegian transliterated into English, which in fact it was. There were uses of words like  activity and\t\t process that didn&#39;t seem to coincide with normal English usage.\n  Finally, another graduate student and I unrolled the program listing 80 feet down the hall and\t\tcrawled over it yelling discoveries to each other. The weirdest part was the storage allocator, which\t\tdid not obey a stack discipline as was usual for Algol. A few days later, that provided the clue. What\t\tSimula was allocating were structures very much like the instances of Sketchpad. There were descriptions\t\tthat acted like masters and they could create instances, each of which was an independent entity.\t\tWhat Sketchpad called masters and instances, Simula called activities and processes. Moreover,\t\tSimula was a procedural language for controlling Sketchpad-like objects, thus having considerably\t\tmore flexibility than constraints (though at some cost in elegance) [Nygaard, 1966, Nygaard, 1983].\n  This was the big hit, and I&#39;ve not been the same since. I think the reason the hit had such impact\t\twas that I had seen the idea enough times in enough different forms that the final recognition was in\t\tsuch general terms to have the quality of an epiphany. My math major had centered on abstract algebras\t\twith their few operations generally applying to many structures. My biology major had focused\t\ton both cell metabolism and larger scale morphogenesis with its notions of simple mechanisms \t\tcontrolling complex processes and one kind of building block able to differentiate into all needed building\t\tblocks. The 220 file system, the B5000, Sketchpad, and finally Simula, all used the same idea\t\tfor different purposes. Bob Barton, the main designer of the B5000 and a professor at Utah had said in\t\tone of his talks a few days earlier: &#34;The basic principle of recursive design is to make the parts have\t\tthe same power as the whole.&#34; For the first time I thought of the whole as the entire computer and\t\twondered why anyone would want to divide it up into weaker things called data structures and\t\tprocedures. Why not divide it up into little computers, as time sharing was starting to? But not in\t\tdozens. Why not thousands of them, each simulating a useful structure?\n  I recalled the monads of Leibniz, the &#34;dividing nature at its joints&#34; discourse of Plato, and other\t\tattempts to parse complexity. Of course, philosophy is about opinion and engineering is about deeds,\t\twith science the happy medium somewhere in between. It is not too much of an exaggeration to say\t\tthat most of my ideas from then on took their roots from Simula\u2014but not as an attempt to improve\t\tit. It was the promise of an entirely new way to structure computations that took my fancy. As it\t\tturned out, it would take quite a few years to understand how to use the insights and to devise\t\tefficient mechanisms to execute them.\n       Dave Evans was not a great believer in graduate school\t\tas an institution. As with many of the ARPA &#34;contractors&#34;\t\the wanted his students to be doing &#34;real things&#34;; they\t\tshould move through graduate school as quickly as possible;\t\tand their theses should advance the state of the art.\t\tDave would often get consulting jobs for his students, and\t\tin early 1967, he introduced me to Ed Cheadle, a friendly\t\thardware genius at a local aerospace company who was\t\tworking on a &#34;little machine.&#34; It was not the first personal\t\tcomputer\u2014that was the LINC of Wes Clark\u2014but Ed wanted\t\tit for noncomputer professionals, in particular, he wanted\t\tto program it in a higher level language, like BASIC. I\t\tsaid; &#34;What about JOSS? It&#39;s nicer.&#34; He said: &#34;Sure, whatever\t\tyou think,&#34; and that was the start of a very pleasant\t\tcollaboration we called the FLEX machine. As we got deeper into the design, we realized that we wanted\t\tto dynamically  simulate and  extend, neither of which JOSS (or any existing language that I knew of)\t\twas particularly good at. The machine was too small for Simula, so that was out. The beauty of JOSS\t\twas\n......", "posttime": "2020-11-07 11:20:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65e9\u671f,history,\u8ba1\u7b97\u673a", "title": "Smalltalk\u7684\u65e9\u671f\u5386\u53f2", "title_en": "The Early History of Smalltalk", "transed": 1, "url": "http://worrydream.com/EarlyHistoryOfSmalltalk/", "via": "", "real_tags": ["\u65e9\u671f", "history", "\u8ba1\u7b97\u673a"]}, {"category": "", "categoryclass": "", "imagename": "4a53450c1c93d5813e5d24243bc2a9df.jpg", "infoid": 1033636, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6055\u6211\u76f4\u8a00\uff0c\u65b0\u897f\u5170\u6700\u65f6\u9ae6\u7684\u6db2\u4f53\u51fa\u53e3\u4ea7\u54c1\u8fdc\u6bd4\u8461\u8404\u9152\u751c\u7f8e\u3002\u9ea6\u5362\u5361\u8702\u871c\u53d6\u81ea\u5f53\u5730\u704c\u6728\u7684\u82b1\u871c\uff0c\u81ea80\u5e74\u4ee3\u521d\u5f53\u5730\u4e00\u4f4d\u79d1\u5b66\u5bb6\u9996\u6b21\u8bc1\u5b9e\u5b83\u5177\u6709\u72ec\u7279\u7684\u6297\u83cc\u7279\u6027\u4ee5\u6765\uff0c\u4e00\u76f4\u6fc0\u8d77\u4e86\u6ce8\u91cd\u5065\u5eb7\u7684\u9274\u8d4f\u5bb6\u7684\u70ed\u60c5\u3002\u73b0\u5728\uff0c\u8fd9\u79cd\u6d41\u884c\u7684\u751c\u5473\u5242\u5728\u7f8e\u56fd\u627e\u5230\u4e86\u4e3b\u6d41\u5438\u5f15\u529b\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u79cd\u6bd4\u56fd\u5185\u540c\u884c\u66f4\u53ef\u53e3\u7684\u66ff\u4ee3\u54c1\u3002\n\u5341\u5e74\u524d\uff0c\u9ea6\u5362\u5361\u884c\u4e1a\u8fd0\u9001\u7684\u8702\u871c\u4ef7\u503c\u7ea6\u4e3a4000\u4e07\u7f8e\u5143\uff0c\u52302017\u5e74\uff0c\u8fd9\u4e2a\u6570\u5b57\u5df2\u7ecf\u81a8\u80c0\u52302.7\u4ebf\u7f8e\u5143\u3002\u5c3d\u7ba1\u8fd9\u80a1\u70ed\u6f6e\u4ee4\u4eba\u60ca\u8bb6\uff0c\u4f46\u9ea6\u5362\u5361\u7684\u8d77\u6e90\u5c31\u66f4\u4e0d\u53ef\u80fd\u4e86\u3002\n\u897f\u65b9\u8702\u79cd\u662f\u5546\u4e1a\u8702\u871c\u751f\u4ea7\u6240\u5fc5\u9700\u7684\uff0c\u5373\u610f\u5927\u5229\u871c\u8702\uff0c\u5b83\u4e0d\u662f\u65b0\u897f\u5170\u539f\u4ea7\u7684\u871c\u8702\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79cd\u5efa\u9020\u7fa4\u4f53\u7684\u6606\u866b\u76f4\u52301839\u5e74\u624d\u88ab\u5f15\u5165\u5357\u534a\u7403\u3002\u4ed6\u4eec\u7684\u5230\u6765\uff0c\u4ee5\u53ca\u968f\u540e\u6574\u4e2a\u884c\u4e1a\u7684\u53d1\u5c55\uff0c\u90fd\u8981\u5f52\u529f\u4e8e\u739b\u4e3d\u00b7\u90a6\u6bd4(Mary Bumby)\u7684\u6311\u5254\u7ba1\u7406\u3002\u739b\u4e3d\u00b7\u90a6\u6bd4\u662f\u4e00\u540d\u82f1\u56fd\u517b\u8702\u4eba\uff0c\u4e5f\u662f\u4e00\u540d\u536b\u7406\u516c\u4f1a\u4f20\u6559\u58eb\u7684\u59b9\u59b9\u3002\n\u82f1\u56fd\u517b\u8702\u4eba\u739b\u4e3d\u00b7\u90a6\u6bd4(Mary Bumby)\u662f\u4e00\u540d\u536b\u7406\u516c\u4f1a\u4f20\u6559\u58eb\u7684\u59b9\u59b9\uff0c\u5979\u7684\u4e00\u4e1d\u4e0d\u82df\u7684\u7ba1\u7406\u5de5\u4f5c\u4f7f\u871c\u8702\u5f97\u4ee5\u62b5\u8fbe\u65b0\u897f\u5170\u3002\n\u300a\u66fc\u52aa\u5361\uff1a\u975e\u51e1\u8702\u871c\u7684\u4f20\u8bb0\u300b\u4e00\u4e66\u7684\u4f5c\u8005\u514b\u91cc\u592b\u00b7\u51af\u00b7\u4f0a\u987f\u89e3\u91ca\u8bf4\uff1a\u201c\u5979\u4ece\u82f1\u56fd\u8fdc\u9053\u800c\u6765\uff0c\u5386\u65f66\u4e2a\u6708\uff0c\u6210\u529f\u5730\u4fdd\u4f4f\u4e86\u5979\u7684\u4e24\u53ea\u8702\u7bb1(\u7f16\u7ec7\u7684\u7bee\u5b50)\u871c\u8702\u7684\u751f\u547d\u3002\u201d(\u514b\u91cc\u592b\u00b7\u51af\u00b7\u4f0a\u987f\u662f\u201c\u66fc\u52aa\u5361\uff1a\u975e\u51e1\u8702\u871c\u7684\u4f20\u8bb0\u201d\u7684\u4f5c\u8005\u3002)\u3002\u201c\u8fd9\u53ef\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0c\u56e0\u4e3a\u6bd4\u8d77\u6211\u4eec\u73b0\u5728\u6240\u77e5\u9053\u7684\u53ef\u79fb\u52a8\u6846\u67b6\u8bbe\u5907\u4e2d\u7684\u8702\u7bb1\uff0c\u540a\u88c5\u8702\u7bb1\u7684\u7ef4\u62a4\u548c\u5b58\u6d3b\u96be\u5ea6\u8981\u5927\u5f97\u591a\u3002\u201d\nBumby\u5728\u4efb\u52a1\u5468\u56f4\u7684\u4f4e\u6d3c\u7530\u91ce\u4e0a\u5efa\u7acb\u4e86\u5979\u7684\u517b\u8702\u573a\uff0c\u6cbf\u7740\u5317\u5c9b\u7684\u4e1c\u5cb8\uff0c\u90a3\u91cc\u6709\u8302\u76db\u7684\u9ea6\u5362\u5361\u704c\u6728\u4e1b\u3002\u56e0\u6b64\uff0c\u6709\u5f3a\u6709\u529b\u7684\u8bc1\u636e\u652f\u6301\u65b0\u897f\u5170\u751f\u4ea7\u7684\u7b2c\u4e00\u6279\u8702\u871c\u5c5e\u4e8e\u9ea6\u5362\u5361\u8702\u871c\u54c1\u79cd\u3002\u6839\u636e\u51af\u00b7\u4f0a\u987f(Von Eaton)\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u5b83\u53ef\u80fd\u662f\u57281840\u5e742\u6708\u7b7e\u7f72\u7684\u5a01\u5766\u5409\u6761\u7ea6(Treaty Of Waitangi)\u4e0a\u4f7f\u7528\u7684\uff0c\u8be5\u6761\u7ea6\u5efa\u7acb\u4e86\u897f\u65b9\u5b9a\u5c45\u8005\u548c\u5f53\u5730\u6bdb\u5229\u4eba\u90e8\u843d\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\n\u5c3d\u7ba1\u5177\u6709\u91cd\u8981\u7684\u5386\u53f2\u610f\u4e49\uff0c\u4f46\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u4e16\u7eaa\u91cc\uff0c\u9ea6\u5362\u5361\u8702\u871c\u5e76\u6ca1\u6709\u58f0\u540d\u72fc\u85c9\u3002\u572820\u4e16\u7eaa\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u8fd9\u79cd\u4ea7\u54c1\u90fd\u88ab\u5ffd\u89c6\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u91ce\u82b1\u884d\u751f\u7684\u66ff\u4ee3\u54c1\u3002\u56fd\u9645\u5e02\u573a\u672a\u80fd\u5b9e\u73b0\u3002\u8fd9\u79cd\u60c5\u51b5\u57281980\u5e74\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5f53\u65f6\u65b0\u897f\u5170\u8457\u540d\u751f\u7269\u5316\u5b66\u5bb6\u5f7c\u5f97\u00b7\u83ab\u5170(Peter Molan)\u535a\u58eb\u8bc1\u5b9e\uff0c\u8fd9\u79cd\u690d\u7269\u4ea7\u751f\u7684\u82b1\u871c\u5177\u6709\u72ec\u7279\u7684\u6297\u83cc\u7279\u6027\u3002(\u5728\u6bdb\u5229\u4eba\u7684\u4f20\u7edf\u533b\u5b66\u4e2d\uff0c\u4eba\u4eec\u5df2\u7ecf\u77e5\u9053\u5b83\u7684\u6cbb\u6108\u7279\u6027\u3002)\u3002\n\u51af\u00b7\u4f0a\u987f\u8bf4\uff1a\u201c\u6240\u6709\u8702\u871c\u7a00\u91ca\u540e\u90fd\u4f1a\u4ea7\u751f\u8fc7\u6c27\u5316\u6c22\u3002\u201d\u7136\u800c\uff0c\u53ea\u6709\u9ea6\u5362\u5361\u8702\u871c\u8fd8\u542b\u6709\u8fd9\u4e9b\u989d\u5916\u7684\u7269\u8d28\uff0c\u53ef\u4ee5\u6740\u6b7b\u6162\u6027\u4f24\u53e3\u3001\u5e8a\u75ae\u548c\u817f\u90e8\u6e83\u75a1\u4e2d\u5e38\u89c1\u7684\u6297\u751f\u7d20\u8010\u836f\u6027\u7ec6\u83cc\u3002\u56e0\u4e3a\u8fd9\u4e00\u7279\u5f81\u662f\u53ef\u4ee5\u91cf\u5316\u7684\uff0c\u6240\u4ee5\u5f88\u5feb\u5c31\u6210\u7acb\u4e86\u4e00\u4e2a\u8ba4\u8bc1\u7814\u7a76\u5c0f\u7ec4\u6765\u8861\u91cf\u540e\u6765\u88ab\u79f0\u4e3a\u201c\u72ec\u7279\u7684\u66fc\u52aa\u5361\u56e0\u7d20\u201d\u7684\u4e1c\u897f\u3002\u4eca\u5929\uff0c\u201cUMF\u201d\u662f\u8bb8\u591a\u9ea6\u5362\u5361\u6807\u7b7e\u4e0a\u7684\u663e\u8457\u5546\u6807\uff0c\u5c31\u50cf\u4f60\u5728\u9632\u6652\u971c\u74f6\u5b50\u4e0a\u770b\u5230\u7684\u9632\u6652\u7b49\u7ea7\u4e00\u6837\u3002\n\u5eb7\u7ef4\u5854(Comvita)\u7684\u9996\u5e2d\u6267\u884c\u5b98\u65af\u79d1\u7279\u00b7\u5e93\u5c14\u7279(Scott Coulter)\u89e3\u91ca\u8bf4\uff1a\u201c\u533b\u7528\u7ea7\u522b\u7684\u706d\u83cc\u9ea6\u5362\u5361\u8702\u871c\u542b\u670910+(\u7ecf\u8ba4\u8bc1\u7684UMF)\u6216\u66f4\u9ad8\u8bc4\u7ea7\u7684\u9ea6\u5362\u5361\u8702\u871c\u3002\u201d\u5eb7\u7ef4\u5854\u662f\u8be5\u6807\u7b7e\u6807\u51c6\u7684\u5148\u9a71\u3002\u5b83\u6240\u542b\u7684\u5316\u5408\u7269\u4e3a\u9ea6\u5362\u5361\u7684\u4f24\u53e3\u6108\u5408\u3001\u7c89\u523a\u548c\u75a4\u75d5\u63d0\u4f9b\u4e86\u72ec\u7279\u7684\u5c40\u90e8\u652f\u6301\u3002\u201c\u3002\n\u5c3d\u7ba1\u56fd\u5185\u9700\u6c42\u548c\u4ef7\u683c\u90fd\u5728\u98d9\u5347\uff0c\u4f46\u9ea6\u5362\u5361\u8702\u871c\u76f4\u52301991\u5e74\u624d\u5728\u56fd\u9645\u4e0a\u5f15\u8d77\u8f70\u52a8\u3002\u65b0\u897f\u5170\u5168\u56fd\u517b\u8702\u4eba\u534f\u4f1a\u8058\u8bf7\u7684\u8425\u9500\u4e13\u5bb6\u6bd4\u5c14\u00b7\u5f17\u6d1b\u4f0a\u5fb7(Bill Floyd)\u521b\u9020\u4e86UMF\u8fd9\u4e2a\u8bcd\uff0c\u5e76\u5728\u5408\u9002\u7684\u65f6\u673a\u5411\u7f8e\u56fd\u5a92\u4f53\u505a\u4e86\u5e7f\u544a\uff0c\u5f53\u65f6\u53e6\u7c7b\u5065\u5eb7\u548c\u517b\u751f\u4e60\u60ef\u6b63\u5728\u6d41\u884c\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u5b83\u5728\u7f8e\u56fd\u4e00\u76f4\u662f\u4e00\u79cd\u72c2\u70ed\u7684\u5546\u54c1\u3002\n\u8fd1\u5e74\u6765\uff0c\u968f\u7740\u683c\u6e29\u59ae\u4e1d\u00b7\u5e15\u7279\u6d1b(Gwyneth Paltrow)\u3001\u5965\u5179\u535a\u58eb(Dr.Oz)\u548c\u8bfa\u74e6\u514b\u00b7\u5fb7\u7ea6\u79d1\u7ef4\u5947(Novak Djokovic)\u7b49\u540d\u4eba\u5bf9\u5176\u987a\u52bf\u7597\u6cd5\u7684\u7f8e\u5fb7\u5927\u52a0\u8d5e\u626c\uff0c\u9ea6\u5362\u5361\u5df2\u7ecf\u6253\u5165\u4e3b\u6d41\u3002\u8be5\u56fd\u6700\u6709\u624d\u534e\u7684\u53a8\u5e08\u4e5f\u5728\u5c3d\u81ea\u5df1\u7684\u4e00\u4efd\u529b\uff0c\u5c55\u793a\u8fd9\u79cd\u8702\u871c\u72ec\u7279\u7684\u5473\u9053\u548c\u8d28\u5730\u3002\n\u829d\u52a0\u54e5Alinea\u9910\u5385\u7684\u884c\u653f\u4e3b\u53a8\u8fc8\u514b\u00b7\u5df4\u683c\u5c14(Mike Bagale)\u8bf4\uff1a\u201c\u6211\u7279\u522b\u559c\u6b22\u5b83\uff0c\u56e0\u4e3a\u5b83\u6709\u4e00\u79cd\u5976\u6cb9\u5473\u66f4\u6d53\u3001\u66f4\u6613\u6405\u62cc\u7684\u5473\u9053\uff0c\u201d\u829d\u52a0\u54e5Alinea\u9910\u5385\u7684\u884c\u653f\u4e3b\u53a8\u8fc8\u514b\u00b7\u5df4\u683c\u5c14(Mike Bagale)\u8bf4\u3002Bagale\u7ecf\u8425\u7740\u7f8e\u56fd\u6700\u5177\u5b9e\u9a8c\u6027\u7684\u53a8\u623f\u4e4b\u4e00\uff0c\u5b83\u662f\u54c1\u5473\u7684\u5f15\u9886\u8005\uff0c\u5851\u9020\u7740\u672a\u6765\u7684\u9910\u996e\u8d8b\u52bf\u3002\u5728\u6700\u8fd1\u7684\u4e00\u4efd\u83dc\u5355\u4e0a\uff0c\u4ed6\u628a\u9ea6\u5362\u5361\u8702\u871c\u505a\u6210\u4e86\u4e00\u79cd\u5de7\u5999\u7684\u86cb\u767d\u9165\u997c\uff0c\u914d\u4e0a\u5145\u6c14\u7684\u5c71\u7f8a\u5976\u916a\u3002\u8fd9\u9053\u751c\u70b9\u751c\u7f8e\u53ef\u53e3\uff0c\u4ee5\u51b7\u51bb\u5e72\u71e5\u7684\u8702\u871c\u4e3a\u7279\u8272\uff0c\u4f5c\u4e3a\u88c5\u9970\u54c1\u3002\n\u867d\u7136\u4ed6\u7684\u51c6\u5907\u7a81\u51fa\u4e86\u9ea6\u5362\u5361\u7565\u5e26\u6ce5\u571f\u5473\uff0c\u6709\u65f6\u8fd8\u6709\u8584\u8377\u5473\uff0c\u4f46\u5df4\u683c\u83b1\u6700\u521d\u662f\u88ab\u5b83\u7684\u6574\u4f53\u597d\u5904\u6240\u5438\u5f15\u3002\u201c\u9ea6\u5362\u5361\u662f\u4e00\u79cd\u591a\u7528\u9014\u7684\u7cd6\u66ff\u4ee3\u54c1\uff0c\u8840\u7cd6\u6307\u6570\u8f83\u4f4e\uff0c\u201d\u4ed6\u8bf4\u3002\u201c\u5b83\u4e0d\u4f1a\u50cf\u767d\u7cd6\u90a3\u6837\u7acb\u5373\u5347\u9ad8\u4f60\u7684\u8840\u7cd6\u6c34\u5e73\u3002\u201d\n\u56de\u5230\u5b83\u7684\u53d1\u6e90\u5730\uff0c\u9ea6\u5362\u5361\u7684\u5f71\u54cd\u529b\u73b0\u5728\u65e0\u5904\u4e0d\u5728--\u7279\u522b\u662f\u5728\u57ce\u5e02\u4e2d\u5fc3\u5965\u514b\u5170\u3002\u5496\u5561\u5e97\u548c\u9e21\u5c3e\u9152\u9152\u5427\u6b63\u5728\u5c06\u5176\u5236\u4f5c\u6210\u5404\u79cd\u53e3\u5473\u7684\u83dc\u8c31\u3002\u4f46\u5b83\u7684\u9ad8\u77e5\u540d\u5ea6\u4e5f\u5f15\u53d1\u4e86\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u4e89\u8bae\uff1a\u6fb3\u5927\u5229\u4e9a\u7684\u751f\u4ea7\u5546\u4e00\u76f4\u8bd5\u56fe\u4ece\u8fd9\u4e00\u8d8b\u52bf\u4e2d\u83b7\u5229\uff0c\u56f4\u7ed5\u8c01\u53ef\u4ee5\u62e5\u6709\u8fd9\u4e2a\u672f\u8bed\u7684\u6597\u4e89\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u5e93\u5c14\u7279\u8bf4\uff1a\u201c\u82f1\u56fd\u5546\u6807\u6ce8\u518c\u5c40\u548c\u65b0\u897f\u5170\u77e5\u8bc6\u4ea7\u6743\u5c40\u90fd\u8ba4\u5b9a\u2018manuka\u2019\u8fd9\u4e2a\u8bcd\u662f\u6bdb\u5229\u8bed\u3002\u201d\u201c\u5c31\u50cf\u9999\u69df\u4e00\u6837--\u4eba\u4eec\u53ea\u80fd\u8ba4\u51fa\u9999\u69df\u6765\u81ea\u6cd5\u56fd\u7684\u67d0\u4e2a\u5730\u533a--\u9ea6\u5362\u5361\u8702\u871c\u53ea\u80fd\u6765\u81ea\u65b0\u897f\u5170\u3002\u201d\n\u4ed6\u662f\u5bf9\u7684--\u76ee\u524d\u662f\u8fd9\u6837\u3002\u7136\u800c\uff0c\u6fb3\u5927\u5229\u4e9a\u6b63\u5728\u6311\u62182017\u5e74\u82f1\u56fd\u7684\u88c1\u51b3\uff0c\u5c3d\u7ba1\u8fd9\u79cd\u690d\u7269\u5728\u6fb3\u5927\u5229\u4e9a\u88ab\u5f53\u5730\u4eba\u79f0\u4e3a\u201c\u679c\u51bb\u704c\u6728\u201d\u6216\u201c\u8482\u6811\u201d\u3002\u4e00\u7f50UMF 50(\u6700\u9ad8\u7b49\u7ea7)\u5728\u7f8e\u56fd\u6742\u8d27\u5e97\u7684\u8d27\u67b6\u4e0a\u53ef\u4ee5\u5356\u5230200\u7f8e\u5143\u4ee5\u4e0a\uff0c\u5c40\u5916\u4eba\u6e34\u671b\u5c1d\u5230\u8fd9\u4e00\u6ecb\u5473\u3002\u7136\u800c\uff0c\u6839\u636e\u76ee\u524d\u7684\u9884\u6d4b\uff0c\u5230\u4e0b\u4e2a\u5341\u5e74\u672b\uff0c\u65b0\u897f\u5170\u7684\u51fa\u53e3\u989d\u4ecd\u5c06\u8fbe\u523010\u4ebf\u7f8e\u5143\u3002\u7531\u4e8e\u5eb7\u7ef4\u5854(Comvita)\u7b49\u5f53\u5730\u751f\u4ea7\u5546\u91c7\u53d6\u4e86\u53ef\u6301\u7eed\u7684\u3001\u6709\u673a\u7684\u65b9\u5f0f\u6765\u7ef4\u62a4\u8702\u5de2\uff0c\u8702\u7fa4\u6b63\u5728\u84ec\u52c3\u53d1\u5c55\u3002\n\u7f8e\u56fd\u6700\u7545\u9500\u7684\u51fa\u53e3\u4ea7\u54c1\uff0c\u4e16\u754c\u4e0a\u6700\u62a2\u624b\u7684\u751c\u5473\u5242\uff1a\u5168\u90e8\u51fa\u81ea19\u4e16\u7eaa\u521d\u739b\u4e3d\u00b7\u90a6\u6bd4\u7684\u4e24\u4e2a\u624b\u5de5\u7f16\u7ec7\u7684\u8702\u7bee\u3002\u5373\u4f7f\u5979\u5bf9\u8702\u871c\u7684\u4f20\u5947\u822c\u7684\u70ed\u7231\uff0c\u5979\u4e5f\u4e0d\u592a\u53ef\u80fd\u60f3\u8c61\u5230\u4e00\u4e2a\u5982\u6b64\u751c\u871c\u7684\u6545\u4e8b\u3002\n\u5728\u5965\u514b\u5170\uff0c\u6570\u5341\u5bb6\u4f9b\u5e94\u5546\u4e13\u95e8\u9500\u552e\u5f53\u5730\u519c\u4ea7\u54c1\u3002\u6765\u770b\u770b\u8702\u871c\u5546\u5e97--\u5e15\u5185\u5c14\u9644\u8fd1\u7684\u4e00\u5bb6\u89c4\u6a21\u5e9e\u5927\u7684\u5546\u5bb6\u3002\u5728\u57ce\u5e02\u5357\u90e8\u7684\u5965\u5185\u4ea8\u52a0(Onehunga)\uff0c\u871c\u7cd6\u548c\u8349\u836f\u65b0\u897f\u5170\u63d0\u4f9b\u79cd\u7c7b\u7e41\u591a\u7684\u9ea6\u5362\u5361\u8702\u871c\uff0c\u65e2\u6709\u98df\u7528\u7684\uff0c\u4e5f\u6709\u533b\u7528\u7684\u3002\u4f60\u8fd8\u4f1a\u5728\u56fd\u9645\u673a\u573a\u7684\u514d\u7a0e\u5e97\u627e\u5230\u5927\u91cf\u7684\u9009\u62e9\uff0c\u5c31\u5728\u4f60\u5230\u8fbe\u767b\u673a\u53e3\u4e4b\u524d\u3002Experience Comvita\u9760\u8fd1\u65b0\u897f\u5170\u5f6d\u52a0\u7f57\u4e9a\u7684\u8bb8\u591a\u5730\u70ed\u666f\u70b9\uff0c\u7ecf\u8425\u7740\u8be5\u56fd\u6700\u5927\u7684\u4e13\u95e8\u7684\u9ea6\u5362\u5361\u8702\u871c\u6e38\u5ba2\u4e2d\u5fc3\u3002\u5728\u8fd9\u91cc\u4f60\u53ef\u4ee5\u627e\u5230\u6bcf\u65e5\u6e38\u89c8\u3001\u54c1\u5c1d\u548c\u865a\u62df\u73b0\u5b9e\u4f53\u9a8c\u3002\u8fd8\u6709\u4e00\u5bb6\u5496\u5561\u9986\uff0c\u5c06\u9ea6\u5362\u5361\u878d\u5165\u6570\u5341\u79cd\u65b0\u9c9c\u51c6\u5907\u7684\u98df\u7269\u548c\u996e\u6599\u4e2d\u3002", "note_en": "With all due respect to sauvignon blanc drinkers, New Zealand\u2019s trendiest liquid export is something far sweeter than wine. Derived from the nectar of a native bush (  leptospermum scoparium ), manuka honey has stirred enthusiasm among health-conscious connoisseurs since the early \u201980s, when a local scientist first confirmed that it possesses unique,  antimicrobial properties. Now,\u00a0the on-trend sweetener is finding\u00a0mainstream appeal in the United States as a slightly more savory alternative to its domestic counterparts.\n The manuka industry was shipping\u00a0around $40 million worth of honey a decade ago, and by 2017 that number had swelled to $270 million. As surprising as that boom has been, manuka\u2019s origins are even more unlikely.\n The western species of bee necessary for commercial honey production,  Apis mellifera,\u00a0is not native to New Zealand. In fact, the colony-building insects weren\u2019t introduced to the Southern Hemisphere until 1839. Their arrival, along with the subsequent development of an entire industry, is owed to the fastidious stewardship of Mary Bumby\u2014an English beekeeper and sister of a Methodist missionary.\n The\u00a0bees arrival in New Zealand\u00a0is thanks\u00a0to the fastidious stewardship of Mary Bumby\u2014an English beekeeper and sister of a Methodist missionary.\n \u201cShe managed to keep alive her two skeps [woven baskets] of honey bees on a six-month voyage all the way from England,\u201d explains Cliff Von Eaton, author of   Manuka: The Biography of an Extraordinary Honey . \u201cThat was no mean feat, since skep beehives are much more difficult to maintain and keep alive than hives in the movable frame equipment we know today.\u201d\n Bumby established her apiary in the low-lying fields surrounding the mission,  along the eastern shore of the North Island , where manuka bushes flourished. There\u2019s strong evidence to support, then, that the first honey produced in New Zealand was of the manuka variety. According to Von Eaton\u2019s historical records, it may\u00a0have been served at the signing of the Treaty of Waitangi in February of 1840\u2014which established relations between Western settlers and the native Maori tribes.\n  Despite its historical significance, manuka honey failed to gain notoriety over the subsequent century. Throughout most of the 1900s, the product was ignored in favor of wildflower-derived alternatives. An international market failed to materialize. This changed in 1980, when Dr. Peter Molan\u2014a noted New Zealand biochemist\u2014confirmed\u00a0the antibacterial properties\u00a0unique to the nectar produced from this particular plant. (Its healing properties had already been known in\u00a0traditional Maori medicine.)\n \u201cAll honey produces hydrogen peroxide when diluted,\u201d says Von Eaton. \u201cOnly manuka honey, however, also contains those extra substances that allow it to kill antibiotic-resistant bacteria commonly found in chronic wounds, bed sores and leg ulcers.\u201d Because this characteristic is quantifiable, a certifying\u00a0group was soon set up to measure what became known as \u201cUnique Manuka Factor.\u201d Today, \u201cUMF\u201d is a prominent trademark on many a manuka label, not unlike the SPF rating you read on sunscreen lotion bottles.\n \u201cMedical-grade, sterilized manuka honey consists of manuka with a 10+ [certified UMF] or higher rating,\u201d explains Scott Coulter, CEO of Comvita, the popular brand that helped pioneer the labeling standard. \u201c It contains the compounds that provide manuka\u2019s unique topical support for wound healing, acne and scars.\u201d\n Although domestic demand was soaring\u2014along with pricing\u2014manuka honey didn\u2019t become an international sensation until 1991. Bill Floyd, a marketing specialist hired by the National Beekeepers\u2019 Association of New Zealand,\u00a0  coined the term UMF \u00a0and advertised it to U.S. media at just the right moment, when alternative health and wellness routines were finding fashion. It\u2019s been something of a cult commodity in the States\u00a0ever since.\n In recent years, manuka has broken into the mainstream as celebrities like   Gwyneth Paltrow ,    Dr. Oz,  and   Novak Djokovic  broadcast praise of its homeopathic virtues. The country\u2019s most talented chefs are also doing their part to showcase the honey\u2019s singular flavor and texture profile.\n \u201cI am especially keen on it because it has somewhat of a creamier, whipped consistency, and it\u2019s also easy to whip,\u201d notes Mike Bagale, executive chef at Alinea in Chicago. Running one of the\u00a0most experimental kitchens in the country, Bagale is\u00a0a tastemaker, shaping future\u00a0dining trends. On a recent menu, he rendered manuka honey\u00a0into an artful meringue, alongside aerated goat cheese. The sweet and savory dessert featured the\u00a0honey in freeze-dried form, as garnish.\n Although his preparation highlights manuka\u2019s slightly earthy, sometimes minty flavor profile, Bagale was initially drawn in by its holistic benefits. \u201cManuka is a versatile sugar substitute that\u2019s lower on the glycemic index,\u201d he says. \u201cIt won\u2019t spike your blood sugar levels immediately in the way white sugar does.\u201d\n   Back in its region of origin, manuka\u2019s influence is now ubiquitous\u2014particularly in the urban hub of Auckland. Coffee shops and cocktail bars are working it into full-flavored recipes. But its heightened visibility has led to some unintended controversy: Australian producers have been trying to cash in on the trend and a battle is underway\u00a0over who can own the term. \u201c Both the UK Trade Mark Registry and the Intellectual Property Office of New Zealand decided the term \u2018  manuka\u2019  is a Maori word,\u201d Coulter says. \u201cJust like champagne\u2014which can only be recognized as from a certain area of France\u2014manuka honey can only come from New Zealand.\u201d\n He\u2019s right\u2014for now. Australia is challenging the 2017 U.K. ruling, however, despite the fact that the plant is known locally Down Under as \u201cjelly bush\u201d or \u201cti-tree.\u201d A jar of UMF 50 (the highest grade) can fetch upwards of $200 on U.S.\u00a0grocery shelves, and outsiders are hungry for a taste of that action. According to current projections, however, New Zealand exports should still reach $1 billion by the end of the next decade. Thanks to a sustainable,\u00a0  organic approach  to hive maintenance by local producers such as Comvita, colonies are thriving.\n The country\u2019s most bankable export, the world\u2019s most sought-after sweetener: all out of Mary Bumby\u2019s two handwoven bee baskets in the early 19th century. Even with her legendary devotion to honey, it\u2019s\u00a0likely she\u00a0never could have envisioned a story so sweet.\n In Auckland, dozens of purveyors specialize in\u00a0selling the local produce. Check out the    Honey Store  \u2014an expansive merchant in the Parnell neighborhood. In Onehunga, on the south side of the city,    Honey &amp; Herbs NZ   offers a wide range of manuka honeys, both in edible and medical-grade varieties. You\u2019ll also find a massive selection at the   duty-free shop in the international airport,\u00a0before you reach your departure gate. Close to New Zealand\u2019s many geothermal attractions in Paengaroa,    Experience Comvita   operates the country\u2019s largest dedicated manuka honey visitors center. Here you\u2019ll find daily tours, tastings, and a virtual reality experience. There\u2019s also a caf\u00e9, incorporating manuka into dozens of forms of freshly prepared food and drink.", "posttime": "2020-11-07 11:20:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5362\u5361,story,\u8702\u871c", "title": "\u300a\u9ea6\u5362\u5361\u7684\u8352\u91ce\u6545\u4e8b\u300b\uff0c\u300a\u4e16\u754c\u4e0a\u6700\u4ee4\u4eba\u5782\u6d8e\u7684\u8702\u871c\u300b(2018)", "title_en": "The Wild Story of Manuka, the World\u2019s Most Coveted Honey(2018)", "transed": 1, "url": "https://www.afar.com/magazine/the-wild-story-of-manuka-the-worlds-most-coveted-honey", "via": "", "real_tags": ["\u5362\u5361", "story", "\u8702\u871c"]}, {"category": "", "categoryclass": "", "imagename": "eca63d7e55fb5d5772331cb0d981376a.png", "infoid": 1033635, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u542c\u8d77\u6765\u8033\u719f\u5417\uff1f\u4f60\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u5173\u5fc3\u4f60\u7684\u5458\u5de5\uff0c\u4f46\u4ed6\u4eec\u4f3c\u4e4e\u4e0d\u6ee1\u3001\u4e0d\u5feb\u4e50\uff0c\u5de5\u4f5c\u6548\u7387\u4e5f\u4e0d\u5982\u5f80\u5e38\u3002\u4f60\u7684\u5165\u4f4f\u4f3c\u4e4e\u4e0d\u53d7\u6b22\u8fce\u3002\u800c\u4e14\u4f3c\u4e4e\u6ca1\u6709\u4eba\u613f\u610f\u63a5\u53d7\u4f60\u5bf9\u4ed6\u4eec\u5de5\u4f5c\u7684\u6240\u6709\u4f1f\u5927\u53cd\u9988\u3002\u5230\u5e95\u600e\u4e48\u56de\u4e8b\uff1f\u597d\u5427\uff0c\u6211\u4eec\u4e0d\u60f3\u544a\u8bc9\u4f60\uff0c\u4f46\u4f60\u53ef\u80fd\u662f\u4e2a\u5c0f\u7ecf\u7406\u3002\n\u867d\u7136\u5fae\u89c2\u7ba1\u7406\u53ef\u80fd\u611f\u89c9\u50cf\u662f\u5584\u610f\u7684\u989d\u5916\u52aa\u529b-\u8fd9\u662f\u8ba9\u4f60\u7684\u56e2\u961f\u8d70\u4e0a\u6b63\u8f68\u7684\u6700\u4f73\u65b9\u5f0f-\u4f46\u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u4e2a\u5267\u6bd2\u7684\u5de5\u4f5c\u573a\u6240\u95ee\u9898\uff0c\u5f0a\u5927\u4e8e\u5229\u3002\n\u5fae\u89c2\u7ba1\u7406\uff0c\u5728\u4f01\u4e1a\u4e2d\u4f7f\u7528\u65f6\uff0c\u662f\u4e00\u79cd\u7ba1\u7406\u8005(\u6216\u4efb\u4f55\u8d1f\u8d23\u9886\u5bfc\u4ed6\u4eba\u7684\u4eba)\u8fc7\u5ea6\u63a7\u5236\u5de5\u4f5c\u6216\u6d41\u7a0b\u7684\u60c5\u51b5\u3002\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u8fd9\u79cd\u53cd\u5e94\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u6050\u60e7\u548c\u5bf9\u6743\u529b\u7684\u6e34\u671b\u5171\u540c\u9a71\u52a8\u7684\u3002\n\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u7684\u5e73\u9762\u8bbe\u8ba1\u5e08\u4e3d\u838e(Lisa)\u6b63\u5728\u4e3a\u516c\u53f8\u505a\u4e00\u4e2a\u65b0\u7684Facebook\u5e7f\u544a\u3002\u5982\u679c\u4f60\u662f\u4e00\u540d\u5fae\u89c2\u7ba1\u7406\u8005\uff0c\u4f60\u4f1a\u8981\u6c42\u4e0d\u65ad\u66f4\u65b0\u4fe1\u606f\uff0c\u8981\u6c42\u53c2\u52a0\u5173\u4e8eFacebook\u5e7f\u544a\u7684\u6bcf\u4e00\u6b21\u4f1a\u8bae\uff0c\u8981\u6c42\u6bcf\u4e00\u5c01\u76f8\u5173\u7535\u5b50\u90ae\u4ef6\u90fd\u88ab\u6284\u9001\uff0c\u53ef\u80fd\u8fd8\u4f1a\u5b9a\u671f\u53bb\u4e3d\u838e\u7684\u529e\u516c\u684c(\u6216\u8005\u5b89\u6392\u5b9a\u671f\u7684\u89c6\u9891\u901a\u8bdd)\uff0c\u770b\u770b\u4efb\u52a1\u8fdb\u5c55\u5982\u4f55\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u4f60\u8fd8\u4f1a\u63d0\u51fa\u5f88\u591a\u5efa\u8bae\uff0c\u63d0\u4f9b\u672a\u7ecf\u8bf7\u6c42\u7684\u8bbe\u8ba1\u5efa\u8bae\uff0c\u751a\u81f3\u53ef\u80fd\u5c1d\u8bd5\u81ea\u5df1\u8bbe\u8ba1\u5e7f\u544a\u3002\u5982\u679c\u4f60\u66fe\u7ecf\u63a5\u53d7\u8fc7\u8fd9\u79cd\u5fae\u89c2\u7ba1\u7406\uff0c\u4f60\u5b8c\u5168\u77e5\u9053\u8fd9\u79cd\u611f\u89c9\u6709\u591a\u7cdf\u7cd5\u3002\n\u8fd8\u4e0d\u786e\u5b9a\u4f60\u81ea\u5df1\u662f\u4e0d\u662f\u4e00\u4e2a\u5fae\u89c2\u7ba1\u7406\u8005\uff1f\u4ee5\u4e0b\u662f\u4e00\u4e9b\u660e\u786e\u7684\u7ba1\u7406\u8005\u6240\u505a\u548c\u6240\u8bf4\u7684\u4e8b\u60c5\uff0c\u5b83\u4eec\u8ba9\u4ed6\u4eec\u8fdb\u5165\u4e86\u5fae\u89c2\u7ba1\u7406\u8005\u7684\u9886\u57df\u3002\n\u5728\u5c06\u4efb\u4f55\u5de5\u4f5c\u6807\u8bb0\u4e3a\u5b8c\u6210\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u7ecf\u770b\u8fc7\u5b83\uff0c\u8fdb\u884c\u4e86\u7f16\u8f91\uff0c\u5e76\u6700\u7ec8\u63d0\u4f9b\u4e86\u60a8\u7684\u6279\u51c6\u3002\u5fae\u89c2\u7ba1\u7406\u8005\u4e0d\u80fd\u5fcd\u53d7\u8ba9\u4ed6\u4eec\u7684\u56e2\u961f\u5b8c\u5168\u63a7\u5236\u548c\u62e5\u6709\u4ed6\u4eec\u5de5\u4f5c\u7684\u60f3\u6cd5\uff0c\u6b63\u5982\u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\u3002\n\u8c08\u8bdd\u4e0d\u53ef\u80fd\u5728\u4f60\u4e0d\u77e5\u60c5\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\uff0c\u4e00\u60f3\u5230\u4e0e\u5de5\u4f5c\u6709\u5173\u7684\u7535\u5b50\u90ae\u4ef6\u548c\u901a\u4fe1\u88ab\u6392\u9664\u5728\u5916\uff0c\u4f60\u5c31\u4f1a\u611f\u5230\u7126\u8651\u3002\u4f60\u89c9\u5f97\u6709\u5fc5\u8981\u968f\u65f6\u77e5\u9053\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u5e76\u76f8\u4fe1\u6240\u6709\u4e0e\u4f60\u5de5\u4f5c\u76f8\u5173\u7684\u7535\u5b50\u90ae\u4ef6\u6216\u6240\u6709Slack\u9891\u9053\u7684\u4e00\u90e8\u5206\u90fd\u4f1a\u88ab\u6284\u9001\uff0c\u8fd9\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\n\u4e54\u5e0c12\u70b903\u5206\u51fa\u53bb\u5403\u5348\u996d\uff0c\u4f46\u73b0\u5728\u5df2\u7ecf1\u70b927\u5206\u4e86\uff0c\u4f60\u8fd8\u6ca1\u6709\u770b\u5230\u4ed6\u56de\u6765\u3002\u6216\u8005\uff0c\u7279\u857e\u838e\u5728\u5bb6\u5de5\u4f5c\uff0c\u4f60\u6ce8\u610f\u5230\u5979\u82b1\u4e86\u5341\u591a\u5206\u949f\u624d\u56de\u590d\u4f60\u6700\u65b0\u7684Slack\u6d88\u606f\u3002\u5982\u679c\u4f60\u65f6\u65f6\u523b\u523b\u90fd\u5728\u62c5\u5fc3\u4f60\u7684\u5458\u5de5\u5728\u54ea\u91cc\uff0c\u6216\u8005\u5f53\u4ed6\u4eec\u6ca1\u6709\u7acb\u5373\u56de\u590d\u4f60\u7684\u4fe1\u606f\u65f6\uff0c\u4f60\u4f1a\u611f\u5230\u6cae\u4e27\uff0c\u90a3\u4e48\u4f60\u5f88\u6709\u53ef\u80fd(\u81f3\u5c11\u6709\u4e00\u4e9b)\u6709\u5fae\u89c2\u7ba1\u7406\u8005\u7684\u503e\u5411\u3002\n\u5982\u679c\u4f60\u5728\u6587\u6848\u7684\u5de5\u4f5c\u4e2d\u53d1\u73b0\u8bed\u6cd5\u9519\u8bef\u800c\u5174\u594b\uff0c\u6216\u8005\u559c\u6b22\u5728\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u4e2d\u4fee\u590d\u4ee3\u7801\u7684\u611f\u89c9\uff0c\u4f60\u53ef\u80fd\u4f1a\u8003\u8651\u4f60\u662f\u5426\u8fd8\u6709\u5176\u4ed6\u7684\u5fae\u89c2\u7ba1\u7406\u7d20\u8d28\u3002\n\u4e16\u754c\u5404\u5730\u7684\u6bcf\u4e00\u4f4d\u5fae\u89c2\u7ba1\u7406\u8005\u90fd\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u60f3\u628a\u67d0\u4ef6\u4e8b\u505a\u597d\uff0c\u90a3\u5c31\u81ea\u5df1\u52a8\u624b\u5427\u3002\u201d\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u662f\u56e2\u961f\u6210\u5458\u505a\u4efb\u4f55\u5de5\u4f5c\u7684\u6700\u4f73\u4eba\u9009\uff0c\u9000\u4e00\u6b65\u60f3\u60f3\u8fd9\u662f\u4e0d\u662f\u771f\u7684--\u6216\u8005\u8fd9\u662f\u5426\u7ed9\u4f60\u7684\u5458\u5de5\u5e26\u6765\u4e86\u6210\u957f\u7684\u673a\u4f1a\u3002\n\u5fae\u89c2\u7ba1\u7406\u8005\u559c\u6b22\u5f3a\u8c03\u548c\u6267\u7740\u4e8e\u9879\u76ee\u7684\u6bcf\u4e00\u4e2a\u5fae\u5c0f\u7ec6\u8282\u3002\u4ed6\u4eec\u82b1\u4e86\u5b9d\u8d35\u7684\u65f6\u95f4\u91cd\u65b0\u8003\u8651\u989c\u8272\u9009\u62e9\uff0c\u800c\u4e0d\u662f\u76f8\u4fe1\u4ed6\u4eec\u7684\u56e2\u961f\u4f1a\u63d0\u4ea4\u9ad8\u8d28\u91cf\u7684\u4f5c\u54c1\u3002\u7ecf\u7406\u5e94\u8be5\u626e\u6f14\u56e2\u961f\u9886\u5bfc\u8005\u3001\u5927\u578b\u51b3\u7b56\u8005\u548c\u9879\u76ee\u603b\u76d1\u7763\u5458\u7684\u89d2\u8272\uff0c\u800c\u4e0d\u662f\u5256\u6790\u6bcf\u9879\u4efb\u52a1\u7684\u6bcf\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\u3002\n\u5982\u679c\u4f60\u610f\u8bc6\u5230\u81ea\u5df1\u5728\u5fae\u89c2\u7ba1\u7406\u65b9\u9762\u6709\u7f6a\uff0c\u4f60\u53ef\u80fd\u5df2\u7ecf\u8ba4\u8bc6\u5230\u4e86\u8fd9\u662f\u4e00\u79cd\u6709\u5bb3\u7684\u3001\u6f5c\u5728\u6709\u6bd2\u7684\u5de5\u4f5c\u573a\u6240\u884c\u4e3a\u7684\u8bb8\u591a\u539f\u56e0\u3002\u8ba9\u6211\u4eec\u4ed4\u7ec6\u770b\u770b\u5176\u4e2d\u7684\u4e00\u4e9b\u5173\u952e\u539f\u56e0\u3002\n\u5229\u90a6\u89e3\u51b3\u65b9\u6848\u516c\u53f8\u8fdb\u884c\u7684\u4e00\u9879\u8c03\u67e5\u663e\u793a\uff0c85%\u7684\u53d7\u8bbf\u8005\u8ba4\u4e3a\uff0c\u7531\u4e8e\u7ecf\u5386\u4e86\u5fae\u89c2\u7ba1\u7406\uff0c\u4ed6\u4eec\u7684\u58eb\u6c14\u53d7\u5230\u4e86\u8d1f\u9762\u5f71\u54cd\u3002\u8be5\u8c03\u67e5\u53d1\u8868\u5728\u54c8\u91cc\u00b7\u94b1\u4f2f\u65af(Harry Chambers)\u7684\u8457\u4f5c\u300a\u6211\u7684\u8def\u6216\u9ad8\u901f\u516c\u8def\u300b(My Way Or The Highway)\u4e0a\u3002\u5982\u679c\u4f60\u81ea\u5df1\u66fe\u7ecf\u88ab\u5fae\u89c2\u7ba1\u7406\u8fc7\uff0c\u4f60\u4f1a\u4ece\u7b2c\u4e00\u624b\u7684\u7ecf\u9a8c\u4e2d\u77e5\u9053\u8fd9\u662f\u771f\u7684\u3002\n\u53d7\u5230\u5fae\u89c2\u7ba1\u7406\u7684\u5458\u5de5\u4f1a\u5931\u53bb\u81ea\u4e3b\u611f\uff0c\u8fd9\u4f1a\u964d\u4f4e\u4ed6\u4eec\u8d70\u5f97\u66f4\u8fdc\u7684\u52a8\u529b\u548c\u6b32\u671b\u3002\u5f53\u4ed6\u4eec\u89c9\u5f97\u4ed6\u4eec\u6240\u505a\u7684\u4efb\u4f55\u5de5\u4f5c\u90fd\u4f1a\u53d7\u5230\u9ad8\u5ea6\u6279\u8bc4\u3001\u7f16\u8f91\u6216\u8d28\u7591\u65f6\uff0c\u4ed6\u4eec\u4e00\u5f00\u59cb\u5c31\u4e0d\u592a\u613f\u610f\u6295\u5165\u7cbe\u529b\u3002\n\u5229\u90a6\u89e3\u51b3\u65b9\u6848\u516c\u53f8\u8fdb\u884c\u7684\u540c\u4e00\u9879\u8c03\u67e5\u53d1\u73b0\uff0c79%\u7684\u53c2\u4e0e\u8005\u7ecf\u5386\u8fc7\u5fae\u89c2\u7ba1\u7406\uff0c69%\u7684\u4eba\u56e0\u6b64\u8003\u8651\u6362\u5de5\u4f5c\u3002\u6beb\u65e0\u7591\u95ee\uff1a\u4eba\u4eec\u4e0d\u559c\u6b22\u88ab\u5fae\u89c2\u7ba1\u7406\u3002\u4e0b\u4e00\u6b21\uff0c\u5f53\u4f60\u60f3\u5728\u5458\u5de5\u7684\u529e\u516c\u684c\u4e0a\u5f98\u5f8a\uff0c\u8be2\u95ee\u4e00\u4e2a\u5c0f\u9879\u76ee\u7684\u6700\u65b0\u8fdb\u5c55\u65f6\uff0c\u8003\u8651\u4e00\u4e0b\u662f\u5426\u503c\u5f97\u7834\u574f\u4f60\u4e0e\u90a3\u4e2a\u4eba\u7684\u5173\u7cfb\u3002\n\u6839\u636e\u67ef\u6797\u65af\u548c\u67ef\u6797\u65af\u7684\u4e00\u9879\u7814\u7a76\uff0c\u53d7\u5230\u5fae\u89c2\u7ba1\u7406\u7684\u5458\u5de5\u7ecf\u5386\u804c\u4e1a\u5026\u6020\u7684\u53ef\u80fd\u6027\u662f\u666e\u901a\u4eba\u7684\u4e09\u500d\u3002\u5fae\u89c2\u7ba1\u7406\u4e0d\u4ec5\u4f1a\u76f4\u63a5\u5bfc\u81f4\u4f60\u7684\u5458\u5de5\u7cbe\u75b2\u529b\u7aed\uff0c\u4ed6\u4eec\u5fc5\u987b\u4e0d\u65ad\u52aa\u529b\u5de5\u4f5c\u624d\u80fd\u8ba9\u4f60\u5f00\u5fc3\uff0c\u800c\u4e14\u8fd8\u4f1a\u8ba9\u4f60\u81ea\u5df1\u7cbe\u75b2\u529b\u7aed\u3002\u5f53\u4f60\u603b\u662f\u7ea0\u7ed3\u4e8e\u5fae\u5c0f\u7684\u7ec6\u8282\uff0c\u68c0\u67e5\u4f60\u7684\u56e2\u961f\u6210\u5458\uff0c\u62c5\u5fc3\u4f60\u53ef\u80fd\u9700\u8981\u6216\u53ef\u80fd\u4e0d\u9700\u8981\u53c2\u52a0\u7684\u4f1a\u8bae\u65f6\uff0c\u4f60\u6b63\u5728\u6d6a\u8d39\u5b9d\u8d35\u7684\u80fd\u91cf\uff0c\u8fd9\u4e9b\u80fd\u91cf\u672c\u53ef\u4ee5\u7528\u5728\u66f4\u6709\u6548\u7387\u7684\u65b9\u5f0f\u4e0a\u3002\n\u5f53\u4eba\u4eec\u88ab\u4e25\u683c\u7684\u89c4\u5219\u7981\u9522\u65f6\uff0c\u521b\u9020\u548c\u521b\u65b0\u7684\u673a\u4f1a\u5c31\u4e0d\u591a\u4e86\u3002\u5982\u679c\u4f60\u4e0d\u65ad\u7ea0\u6b63\u5458\u5de5\u7684\u6240\u4f5c\u6240\u4e3a\uff0c\u50cf\u8001\u9e70\u4e00\u6837\u76ef\u7740\u4ed6\u4eec\u770b\uff0c\u4ed6\u4eec\u4f1a\u975e\u5e38\u5bb3\u6015\u8d8a\u754c\uff0c\u505a\u4e00\u4e9b\u4f1a\u62db\u81f4\u8d1f\u9762\u53cd\u5e94\u7684\u4e8b\u60c5\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u6c38\u8fdc\u4e0d\u4f1a\u5c1d\u8bd5\u4efb\u4f55\u539f\u521b\u7684\u4e1c\u897f\u3002\n\u5f53\u5458\u5de5\u53d1\u73b0\u65e0\u8bba\u4ed6\u4eec\u591a\u4e48\u52aa\u529b\u5730\u5de5\u4f5c\uff0c\u4ed6\u4eec\u7684\u5de5\u4f5c\u603b\u662f\u4f1a\u88ab\u4ed6\u4eec\u7684(\u5fae)\u7ecf\u7406\u7f16\u8f91\u548c\u6539\u53d8\uff0c\u4ed6\u4eec\u5c31\u4f1a\u4f9d\u8d56\u8fd9\u4e2a\u4eba\u3002\u5f53\u4f60\u8868\u73b0\u5f97\u597d\u50cf\u6ca1\u6709\u4f60\u7684\u6295\u5165\u5c31\u4ec0\u4e48\u90fd\u505a\u4e0d\u4e86\u7684\u65f6\u5019\uff0c\u4f60\u7684\u5458\u5de5\u5c31\u4f1a\u5f00\u59cb\u5931\u53bb\u4fe1\u5fc3\uff0c\u611f\u89c9\u597d\u50cf\u6ca1\u6709\u4f60\u4ed6\u4eec\u771f\u7684\u4ec0\u4e48\u90fd\u505a\u4e0d\u4e86\u3002\u6b64\u5916\uff0c\u6839\u636eGreat Place to Work\u7684\u7814\u7a76\uff0c\u5343\u79a7\u4e00\u4ee3\u6b63\u5728\u5bfb\u627e\u7684\u9886\u5bfc\u8005\u662f\u201c\u5206\u4eab\u5458\u5de5\u7684\u6700\u5927\u5229\u76ca\uff0c\u7279\u522b\u662f\u5728\u4ed6\u4eec\u7684\u957f\u671f\u589e\u957f\u65b9\u9762\u201d\u7684\u9886\u5bfc\u8005\uff0c\u800c\u4e0d\u662f\u90a3\u4e9b\u7528\u4f9d\u8d56\u5173\u7cfb\u963b\u788d\u5458\u5de5\u6210\u957f\u7684\u9886\u5bfc\u8005\u3002\n\u6839\u636e\u4eba\u529b\u8d44\u6e90\u673a\u6784Accountemps\u8fdb\u884c\u7684\u4e00\u9879\u7814\u7a76\uff0c\u8d85\u8fc755%\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u5fae\u89c2\u7ba1\u7406\u635f\u5bb3\u4e86\u4ed6\u4eec\u7684\u751f\u4ea7\u529b\u3002\u5f53\u5fae\u89c2\u7ba1\u7406\u4eba\u5458\u5728\u9879\u76ee\u7684\u6bcf\u4e2a\u9636\u6bb5\u4e0d\u65ad\u5730\u8981\u6c42\u7b7e\u5230\u548c\u7f16\u8f91\u65f6\uff0c\u4ed6\u4eec\u4f1a\u9020\u6210\u4e00\u4e2a\u74f6\u9888\uff0c\u4ece\u800c\u51cf\u6162\u6d41\u7a0b\u548c\u8fdb\u5ea6\u3002\n\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4f01\u4e1a\u8f6c\u5411\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u7ecf\u7406\u4eec\u7ecf\u5e38\u6c42\u52a9\u4e8e\u5fae\u89c2\u7ba1\u7406\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u4fdd\u6301\u529e\u516c\u5ba4\u53ef\u89c1\u6027\u548c\u53ef\u63a7\u6027\u7684\u4e00\u79cd\u624b\u6bb5\u3002\u5728\u5bb6\u5de5\u4f5c\u6709\u5f88\u591a\u597d\u5904\uff0c\u6bd4\u5982\u53ef\u4ee5\u7075\u6d3b\u5730\u7ba1\u7406\u81ea\u5df1\u7684\u65f6\u95f4\uff0c\u4e0d\u9700\u8981\u8001\u677f\u603b\u662f\u7167\u770b\u7740\u4f60\uff0c\u8fd8\u6709\u4e00\u4e2a\u5b89\u9759\u7684\u73af\u5883\uff0c\u8ba9\u4f60\u53ef\u4ee5\u4e0d\u53d7\u5e72\u6270\u5730\u5de5\u4f5c\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4f4d\u5fae\u89c2\u7ba1\u7406\u8005\u4f5c\u4e3a\u8001\u677f\uff0c\u8fd9\u4e9b\u4f18\u52bf\u5c31\u4f1a\u88ab\u629b\u8bf8\u8111\u540e\u3002\n\u867d\u7136\u5728\u8fdc\u7a0b\u5de5\u4f5c\u60c5\u51b5\u4e0b\u5f88\u96be\u8ffd\u8e2a\u8d23\u4efb\uff0c\u4f46\u6211\u4eec\u5173\u4e8e\u8fdc\u7a0b\u7ba1\u7406\u7684\u5e16\u5b50\u89e3\u91ca\u8bf4\uff0c\u201c\u8fdc\u7a0b\u56e2\u961f\u9886\u5bfc\u5fc5\u987b\u5411\u5458\u5de5\u8868\u660e\uff0c\u4ed6\u4eec\u4fe1\u4efb\u4ed6\u4eec\u7684\u4e1a\u7ee9\u3001\u751f\u4ea7\u529b\u548c\u5224\u65ad\u529b\u3002\u201d\n\u8fdc\u7a0b\u9886\u5bfc\u8005\u9700\u8981\u4fc3\u8fdb\u5f00\u653e\u548c\u6d41\u7545\u7684\u6c9f\u901a\u7b56\u7565\uff0c\u5728\u9002\u5f53\u7684\u60c5\u51b5\u4e0b\u8ba9\u4ed6\u4eec\u7684\u56e2\u961f\u53c2\u4e0e\u51b3\u7b56\uff0c\u5e76\u6839\u636e\u9700\u8981\u63d0\u4f9b\u5efa\u8bbe\u6027\u7684\u6307\u5bfc\uff0c\u800c\u4e0d\u662f\u5fae\u89c2\u7ba1\u7406\u3002\n\u90a3\u4e48\uff0c\u4f60\u5df2\u7ecf\u5728\u81ea\u5df1\u8eab\u4e0a\u53d1\u73b0\u4e86\u4e00\u4e9b\u5fae\u89c2\u7ba1\u7406\u8005\u7684\u4e60\u60ef--\u73b0\u5728\u600e\u4e48\u529e\uff1f\u601d\u8003\u5e76\u9075\u5faa\u4ee5\u4e0b\u7ea0\u6b63\u8fd9\u79cd\u884c\u4e3a\u7684\u63d0\u793a\u548c\u7b56\u7565\u3002\n\u8d23\u4efb\u533a\uff0c\u6216\u79f0AORS\uff0c\u201c\u662f\u6355\u6349\u516c\u53f8\u5185\u90e8\u8d23\u4efb\u5206\u914d\u7684\u4e00\u79cd\u65b9\u5f0f\u201d\u3002\u6709\u4e86AORS\uff0c\u8d23\u4efb\u548c\u6743\u529b\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u6210\u5458\u4e4b\u95f4\u5206\u914d\uff0c\u800c\u4e0d\u662f\u5206\u914d\u7ed9\u4f60\u3002\n\u5b83\u4eec\u53ef\u4ee5\u5e2e\u52a9\u4f60\u6709\u6548\u5730\u59d4\u6d3e\u8d23\u4efb\uff0c\u628a\u4efb\u52a1\u548c\u8981\u6c42\u4ece\u4f60\u7684\u9910\u684c\u4e0a\u79fb\u8d70\u3002AORS\u4e0d\u662f\u5047\u8bbe\u60a8\u662f\u6279\u51c6\u4efb\u52a1\u6216\u5185\u5bb9\u7684\u4eba\uff0c\u800c\u662f\u786e\u4fdd\u7ec4\u7ec7\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u68c0\u67e5\u5e76\u51c6\u786e\u5730\u77e5\u9053\u8981\u8054\u7cfb\u56e2\u961f\u4e2d\u7684\u54ea\u4e9b\u4eba\u3002\n\u65e0\u6570\u7684\u4f1a\u8bae\u548c\u66f4\u65b0\u8bf7\u6c42\u8ba9\u60a8\u548c\u60a8\u7684\u56e2\u961f\u90fd\u7b4b\u75b2\u529b\u5c3d\u3002\u901a\u8fc7\u4f7f\u7528\u8bf8\u5982Wrike\u6216Basecamp\u4e4b\u7c7b\u7684\u5de5\u5177\uff0c\u60a8\u53ef\u4ee5\u5728\u65e0\u9700\u5e72\u9884\u6216\u76f4\u63a5\u4e0e\u4efb\u4f55\u4eba\u6c9f\u901a\u7684\u60c5\u51b5\u4e0b\u76d1\u63a7\u9879\u76ee\u7684\u72b6\u6001\uff0c\u4ece\u800c\u6ee1\u8db3\u60a8\u4e0d\u65ad\u7b7e\u5165\u7684\u613f\u671b\u3002\n\u60a8\u5c06\u80fd\u591f\u770b\u5230\u6587\u4ef6\u4f55\u65f6\u4e0a\u8f7d\uff0c\u4ee5\u53ca\u4e0e\u9879\u76ee\u6216\u4efb\u52a1\u76f8\u5173\u7684\u5176\u4ed6\u8ba8\u8bba\u4f55\u65f6\u53d1\u751f\uff0c\u800c\u4e0d\u4f1a\u6ee1\u8db3\u60a8\u5bf9\u5bc6\u96c6\u3001\u91cd\u590d\u66f4\u65b0\u7684\u9700\u6c42\u3002\u5982\u679c\u60a8\u7684\u56e2\u961f\u4f7f\u7528\u591a\u4e2a\u5de5\u5177\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Unito\u5c06\u66f4\u65b0\u96c6\u4e2d\u5230\u60a8\u9009\u62e9\u7684\u5de5\u5177\u4e2d\u3002\n\u8fd9\u65e0\u7591\u4f1a\u8ba9\u4f60\u7684\u56e2\u961f\u611f\u89c9\u66f4\u53ef\u4fe1\u3001\u66f4\u81ea\u4e3b\uff0c\u540c\u65f6\u5e2e\u52a9\u4f60\u63a7\u5236\u4f60\u7684\u5fae\u89c2\u7ba1\u7406\u503e\u5411\u3002\n\u867d\u7136\u7406\u8bba\u4e0a\u542c\u8d77\u6765\u5f88\u6709\u8da3\uff0c\u4f46\u8d1f\u8d23\u6bcf\u4e00\u4e2a\u9879\u76ee\u5e76\u4e0d\u662f\u5728\u6d6a\u8d39\u4f60\u7684\u65f6\u95f4\u3002\u8fdb\u5165\uff1a\u745e\u5947\u56fe\u3002\nRACI\u56fe\u8868(\u6216\u77e9\u9635)\u662f\u4e00\u79cd\u5e2e\u52a9\u9879\u76ee\u7ecf\u7406\u89c4\u5212\u9879\u76ee\u4e2d\u6bcf\u4e2a\u4eba\u7684\u89d2\u8272\u548c\u804c\u8d23\u7684\u5de5\u5177\u3002RACI\u4ee3\u8868\u8d1f\u8d23\u4efb\u3001\u8d1f\u8d23\u3001\u54a8\u8be2\u548c\u77e5\u60c5\uff0c\u56fe\u8868\u7684\u6bcf\u4e00\u90e8\u5206\u90fd\u6db5\u76d6\u4e86\u5176\u4e2d\u4e00\u4e2a\u9886\u57df\u3002\u4f5c\u4e3a\u4e00\u540d\u7ecf\u7406\uff0c\u5728\u5927\u591a\u6570\u9879\u76ee\u4e2d\uff0c\u4f60\u4e0d\u9700\u8981\u8d1f\u8d23\u6216\u8d1f\u8d23\u3002\u76f8\u53cd\uff0c\u4f60\u7684\u804c\u8d23\u901a\u5e38\u5c5e\u4e8e\u201c\u77e5\u60c5\u7684\u201d\u7c7b\u522b\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u4e86\u89e3\u9879\u76ee\u7684\u91cd\u5927\u66f4\u65b0\uff0c\u4f46\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u54a8\u8be2\u3001\u8d1f\u8d23\u6216\u8d1f\u8d23\u3002\n\u5fae\u89c2\u7ba1\u7406\u4eba\u5458\u5bf9\u65f6\u95f4\u548c\u65f6\u949f\u90fd\u5f88\u6267\u7740\u3002\u5982\u679c\u5458\u5de5\u7684Slack\u56fe\u6807\u957f\u65f6\u95f4\u663e\u793a\u4ed6\u4eec\u5904\u4e8e\u7a7a\u95f2\u6216\u4e0d\u6d3b\u52a8\u72b6\u6001\uff0c\u5fae\u89c2\u7ba1\u7406\u4eba\u5458\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\u3002\n\u4f5c\u4e3a\u4e00\u540d\u7ecf\u7406\uff0c\u4f60\u5fc5\u987b\u95ee\u95ee\u81ea\u5df1\uff1a\u5de5\u4f5c\u5b8c\u6210\u4e86\u5417\uff1f\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u6ca1\u6709\u7406\u7531\u76ee\u4e0d\u8f6c\u775b\u5730\u76ef\u7740\u65f6\u949f\u6216\u5bc6\u5207\u8ddf\u8e2a\u5458\u5de5\u7684\u5de5\u4f5c\u65f6\u95f4\u3002\u5982\u679c\u4f60\u9700\u8981\u4e00\u4e9b\u5e2e\u52a9\u6765\u6539\u53d8\u4f60\u7684\u601d\u7ef4\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5f02\u6b65\u901a\u4fe1\u65b9\u6cd5\u3002\n\u540c\u6b65\u901a\u4fe1\u662f\u5b9e\u65f6\u5b8c\u6210\u7684\u901a\u4fe1\uff0c\u4f8b\u5982\u7535\u8bdd\u3001\u4e00\u5bf9\u4e00\u4f1a\u8bae\u3001\u89c6\u9891\u4f1a\u8bae\u6216\u9762\u5bf9\u9762\u5bf9\u8bdd\u3002\u7136\u800c\uff0c\u5f02\u6b65\u901a\u4fe1\u5141\u8bb8\u5728\u53d1\u9001\u6d88\u606f\u548c\u63a5\u6536\u54cd\u5e94\u4e4b\u95f4\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u3002\u8fd9\u4e9b\u683c\u5f0f\u5305\u62ec\u7535\u5b50\u90ae\u4ef6\u3001\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u4e2d\u7684\u4efb\u52a1\u548c\u6587\u6863\u4e2d\u7684\u6ce8\u91ca\u3002\n\u8fd9\u51cf\u8f7b\u4e86\u4f60\u7684\u56e2\u961f\u7acb\u5373\u505a\u51fa\u53cd\u5e94\u7684\u538b\u529b\uff0c\u5e76\u6709\u52a9\u4e8e\u7ba1\u7406\u4f60\u90a3\u4e00\u7aef\u7684\u671f\u671b\u3002\n\u6b63\u5982\u4f60\u73b0\u5728\u6240\u77e5\u9053\u7684\uff0c\u5fae\u89c2\u7ba1\u7406\u53ef\u80fd\u4f1a\u7ed9\u4f60\u7684\u516c\u53f8\u3001\u4f60\u7684\u56e2\u961f\u548c\u4f60\u81ea\u5df1\u5e26\u6765\u707e\u96be\u6027\u7684\u540e\u679c\u3002\u6709\u4e86\u4e0a\u9762\u7684\u6280\u5de7\u548c\u5de5\u5177\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0\u81ea\u5df1\u7684\u5fae\u89c2\u7ba1\u7406\u503e\u5411\uff0c\u5e76\u5728\u5b83\u4eec\u5931\u63a7\u4e4b\u524d\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002", "note_en": "Does this sound familiar? You\u2019re more involved with your employees than ever, yet they seem disgruntled, unhappy, and less productive than usual. Your check-ins seem to go unappreciated. And no one seems receptive to all of your great feedback on their work. What\u2019s going on? Well, we hate to break it to you, but you might be a micromanager.\n While micromanagement might feel like good-natured extra diligence \u2014\u00a0and the best way to keep your team on track \u2014\u00a0it\u2019s actually a highly toxic workplace issue that will do more harm than good.\n    Micromanagement, when used in the context of a business, is a situation in which  managers (or anyone responsible for leading other people) are overly controlling of work or processes.  Researchers have found that this response is largely driven by a mix of fear and a desire for power.\n For example, say your graphic designer Lisa is working on a new Facebook ad for the business. If you\u2019re a micromanager, you\u2019d ask for constant updates, ask to be in every meeting regarding the Facebook ad, ask to be cc\u2019d on every relevant email, and probably make regular trips over to Lisa\u2019s desk (or schedule regular video calls) to see how the task is progressing. At that point, you\u2019d also make numerous suggestions, provide unsolicited design advice, and might even take a stab at designing the ad yourself. If you\u2019ve ever been on the receiving end of this kind of micromanagement, you know exactly how bad this feels.\n  Still not sure if you\u2019re a micromanager yourself? Here are some clear things managers do and say that land them in micromanager territory.\n  Before any work gets marked complete, you make sure that you\u2019ve seen it, made your edits, and finally provided your approval. Micromanagers can\u2019t stand the thought of letting their team have complete control and ownership over their work, which is \u2014 as you might have guessed \u2014 a problem.\n  Conversations cannot be happening without your knowledge, and you feel anxious at the thought of being left out of work-related emails and correspondence. You feel a need to know what is happening at all times, and believe that being cc\u2019d on all emails, or a part of all Slack channels related to your work, is the best way to go about this.\n  Josh stepped out for lunch at 12:03, but it\u2019s now 1:27 and you haven\u2019t seen him return. Or, Teresa is working from home and you noticed that she\u2019s taken more than ten minutes to respond to your latest Slack message. If you stress about where your employees are at every moment of the day, or find yourself getting frustrated when they don\u2019t immediately respond to your messages, there\u2019s a good chance you have (at least some) micromanager tendencies.\n  If you get a thrill from finding grammar mistakes in your copywriter\u2019s work, or love the feeling of fixing code in your software developer\u2019s work, you might want to consider whether you have other micromanager qualities as well.\n  \u201cIf you want something done properly, do it yourself,\u201d said every micromanager everywhere. If you think that you\u2019re the best person to do any job your team members are doing, take a step back and consider if this is true \u2014 or if this gives your employees the opportunity for growth.\n  Micromanagers love to stress and obsess over every tiny detail of a project. They\u2019re spending valuable time reconsidering color choice, rather than trusting their team to submit quality work. A manager is meant to act as a team leader, large decision maker, and general overseer of projects \u2014\u00a0not dissect every component of every task.\n  If you realize you\u2019re guilty of micromanaging, you\u2019ve probably already recognized many of the reasons why this is a harmful, and potentially toxic, workplace behaviour. Let\u2019s take a closer look at some of these key reasons.\n  A survey conducted by Trinity Solutions and published in author Harry Chambers\u2019 book  My Way or the Highway showed that   85 percent of respondents  felt that their morale was negatively impacted due to experiencing micromanagement. If you\u2019ve ever been micromanaged yourself, you know this to be true from firsthand experience.\n Employees who are micromanaged lose a sense of autonomy, which results in decreased motivation and desire to go the extra mile. When they feel as if any work they do is going to be highly criticized, edited, or questioned, there\u2019s less of an inclination to put effort in in the first place.\n  The same survey conducted by  Trinity Solutions discovered that 79 percent of participants had experienced micromanagement, and  69 percent considered changing jobs because of it. There\u2019s no question: people don\u2019t like to be micromanaged. The next time you\u2019re thinking of hovering over an employee\u2019s desk to ask for yet another update on a small project, consider whether it\u2019s worth damaging your relationship with that person.\n  According to  a study by Collins and Collins, employees who are micromanaged are  three times more likely to experience burnout. Micromanagement directly causes burnout not only in your employees who have to constantly work hard to keep you happy, but in yourself. When you\u2019re constantly obsessing over minute details, checking up on your team members, and worrying about meetings you may or may not need to be in, you\u2019re wasting precious energy that could be used in much more productive ways.\n  When people are boxed in by strict rules, there\u2019s not a lot of opportunity for creativity and innovation. If you are constantly correcting everything your employees do and watching them like a hawk, they\u2019ll be so afraid to step out of line and do something that elicits a negative response that they\u2019ll never attempt anything original.\n  When employees find that no matter how hard they work, their work will always be edited and changed by their (micro)manager, they become dependent on this person. When you act as if nothing can be done without your input, your staff will start to lose confidence and feel as if they truly can\u2019t do anything without you. And, according to research by  Great Place to Work, millennials are looking for leaders who \u201cshare the best interests of employees, particularly in their long-term growth,\u201d\u00a0 \u2014 not leaders who block employee growth with dependent relationships.\n  According to a study conducted by staffing agency Accountemps, more than  55 percent of respondents said that micromanagement hurt their productivity. When micromanagers are constantly requiring check-ins and edits at every phase of the project, they create a bottleneck that slows down processes and progress.\n  With more and more businesses shifting to working remotely, managers often resort to micromanaging things as a means of retaining levels of visibility and control they had in the office. Many of the benefits of working from home include things like the flexibility to manage your own time, not having a boss always looking over your shoulder, and a quiet environment where you can work undisturbed. If you have a micromanager as a boss, however, these advantages get thrown out the window.\n Although accountability can be difficult to track with remote work situations,  our post on remote management explains, \u201ca remote team leader must show their employees that they trust in their performance, productivity, and judgement.\u201d\n Instead of micromanaging, remote leaders need to facilitate open and flowing  communications tactics, involve their team in decision making where appropriate, and provide constructive coaching as needed.\n  So you\u2019ve identified some micromanager habits in yourself\u00a0\u2014\u00a0now what? Reflect on and follow the below tips and strategies for fixing this behavior.\n  Areas of Responsibility, or AoRs, \u201care a way of capturing the distribution of responsibility within your company.\u201d With AoRs, responsibilities and authority can be split between different members rather than being distributed to you.\n They help you delegate responsibility effectively, removing tasks and requests from your plate. Instead of assuming that you\u2019re the one who will be approving a task or piece of content, AoRs ensure that everybody in the organization can check and know exactly who on the team to reach out to.\n  Countless meetings and requests for updates exhaust both you  and your team. Fight your desire for constant check-ins by using a tool such as  Wrike or  Basecamp where you can monitor the status of a project without having to interfere or directly communicate with anyone.\n You\u2019ll be able to see when files are uploaded and other discussions related to the project or task take place, without feeding your need for intense, repetitive updates. And if your team uses multiple tools, you can  use Unito to centralize updates into your tool of choice.\n This will undoubtedly help your team feel much more trusted and autonomous, while helping you keep your micromanagement tendencies at bay.\n  While it might sound fun in theory, being in charge of every project isn\u2019t a valuable use of your time. Enter:  the RACI chart.\n A RACI chart (or matrix) is a tool that helps the project manager map out roles and responsibilities of everyone involved in a project. RACI stands for Responsible, Accountable, Consulted, and Informed, with each section of the chart covering one of these areas. As a manager, you will not need to be accountable or responsible in the context of most projects. Instead, your responsibilities will usually fall under the \u2018Informed\u2019 category. You can be kept in the loop regarding major updates to the project, but don\u2019t need to be consulted, responsible, or accountable in these cases.\n  Micromanagers are sticklers for time and watching the clock. If an employee\u2019s Slack icon shows them as idle or inactive for long periods of time, a micromanager is going to notice.\n As a manager, you have to ask yourself: Is the work getting done? If so, there\u2019s truly no reason to be eagle-eyeing the clock or tracking your employee\u2019s hours closely. If you need some help changing your mindset with this, consider using asynchronous communication methods.\n Synchronous communication is correspondence done in real-time, such as phone,  one on one meetings, video conference, or in-person conversations. Asynchronous communication, however, allows for time to pass in between the sending of the message and the receiving of a response. These formats include email, tasks within project management tools, and comments within documents.\n This takes the pressure off of your team to respond right away, and helps manage expectations on your end.\n  As you now know, micromanagement can have disastrous results for your company, your team, and yourself. With the techniques and tools above, you can identify micromanaging tendencies in yourself and find solutions before they get out of control.", "posttime": "2020-11-07 11:20:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8868\u660e,signs", "title": "\u6709\u8ff9\u8c61\u8868\u660e\u4f60\u53ef\u80fd\u662f\u4e00\u540d\u5fae\u89c2\u7ba1\u7406\u8005", "title_en": "Signs you might be a micromanager", "transed": 1, "url": "https://unito.io/blog/micromanagement-signs/", "via": "", "real_tags": ["\u8868\u660e", "signs"]}, {"category": "", "categoryclass": "", "imagename": "f7f2caa96921446fe0226e178a3094dc.png", "infoid": 1033634, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u5f97\u5230\u4e86\u4e00\u4efdDevOps\u7684\u5de5\u4f5c\uff0c\u4e3b\u8981\u662f\u5728Go\u4e2d\u5b8c\u5168\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u4e00\u4e2a\u65b0\u7684\u540e\u7aef\u7cfb\u7edf\u3002\u8fd9\u662f\u6211\u4ece\u6ca1\u6709\u5728\u751f\u4ea7\u4e2d\u5b9e\u9645\u4f7f\u7528\u8fc7\uff0c\u4e3b\u8981\u662f\u4ece\u4e2a\u4eba\u9879\u76ee\u4e2d\u4e86\u89e3\u5230\u7684\u3002\n\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u51b3\u5b9a\u7b80\u5355\u5730\u575a\u6301\u4f7f\u7528Go\u7684Http\u5e93\u548c\u4e00\u4e2a\u7b80\u5355\u7684\u8def\u7531\u5e93\u200a-MUX\u3002\n\u8bb0\u5f55\u200a-\u200a\u6211\u60f3\u8981\u4e00\u4e9b\u89e3\u51b3\u65b9\u6848\uff0c\u53ef\u4ee5\u6253\u5370\u5173\u4e8e\u6bcf\u4e2a\u8bf7\u6c42\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u4e3b\u4f53\u53c2\u6570\u3001\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c\u7b49(\u7528\u4e8e\u8c03\u8bd5\u76ee\u7684)\u3002\n\u66f4\u597d\u7684\u9519\u8bef\u5904\u7406\u200a-\u200a\u6211\u5e0c\u671b\u9519\u8bef\u4ecd\u7136\u662f\u5e26\u6709\u9519\u8bef\u6d88\u606f\u548c\u4ee3\u7801\u7684JSON\u54cd\u5e94\u3002\n\u6211\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u6211\u81ea\u5df1\u5b9e\u73b0\u4e0a\u8ff0\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4e3a\u6bcf\u4e2a\u95ee\u9898\u4f7f\u7528\u4e0d\u540c\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u6216\u8005\u9009\u62e9\u4e00\u4e2a\u5df2\u7ecf\u5b8c\u6210\u4e86\u5927\u90e8\u5206(\u5982\u679c\u4e0d\u662f\u5168\u90e8)\u8fd9\u4e9b\u4e8b\u60c5\u7684Web\u6846\u67b6\u3002\n\u6211\u6700\u7ec8\u51b3\u5b9a\u4f7f\u7528Echo web\u6846\u67b6\u3002\u6709\u8fd120000\u4f4dGitHub\u660e\u661f\uff0c\u4e00\u4e2a\u76f8\u5f53\u6d3b\u8dc3\u7684\u793e\u533a\uff0c\u4ee5\u53ca\u5f88\u68d2\u7684\u6587\u6863\uff0c\u6211\u8ba4\u4e3a\u5b83\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u4f5c\u5de5\u5177\u3002\n\u6211\u8fd8\u53d1\u73b0\uff0c\u5728\u4f7f\u7528ECHO\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u65f6(\u4e3b\u8981\u662f\u5728\u89e3\u6790json\u6b63\u6587\u3001\u7f16\u5199\u9519\u8bef\u548c\u624b\u52a8\u8bbe\u7f6e\u6807\u9898\u65f6)\uff0c\u6837\u677f\u6587\u4ef6\u4f1a\u5c11\u4e00\u4e9b\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002\n\u4f46\u662f\uff0c\u5f53\u60a8\u7684\u7aef\u70b9\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u65f6\uff0c\u5c31\u4f1a\u6ce8\u610f\u5230\u751f\u4ea7\u7387\u7684\u771f\u6b63\u5dee\u5f02\u3002\u60a8\u7ecf\u5e38\u4f1a\u9047\u5230\u9700\u8981\u9a8c\u8bc1\u67d0\u4e9bJSON\u5b57\u6bb5\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u60a8\u4f1a\u60f3\u8981\u6709\u610f\u4e49\u7684\u9519\u8bef\u6d88\u606f\u6765\u63cf\u8ff0\u9519\u8bef\u6240\u5728\u3002\u5982\u679c\u60a8\u60f3\u5728\u6ca1\u6709\u4efb\u4f55\u5e93\u7684\u60c5\u51b5\u4e0b\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u60a8\u7684\u4ee3\u7801\u5c06\u5f88\u5feb\u53d8\u5f97\u66f4\u96be\u9605\u8bfb\uff1a\nGo Web\u6846\u67b6(\u6216Go\u4e00\u822c)\u4e0d\u5f3a\u5236\u4efb\u4f55\u7279\u5b9a\u7684\u6587\u4ef6\u7ed3\u6784\u3002\u5982\u679c\u4f60\u66fe\u7ecf\u4f7f\u7528\u8fc7\u50cfASP.NET/ASP.NET Core\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u6211\u8bf4\u7684\u662f\u4ec0\u4e48\uff0c\u5f53\u6211\u8bf4\u4e00\u4e9b\u6846\u67b6\u7ed3\u6784\u7d27\u51d1\uff0c\u8bb8\u591a\u4e8b\u60c5\u90fd\u662f\u6309\u7167\u7ea6\u5b9a\u800c\u4e0d\u662f\u663e\u5f0f\u6307\u5b9a\u7684\u65f6\u5019\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u6211\u5728\u8bf4\u4ec0\u4e48\u3002\n\u5173\u4e8e\u56f4\u68cb\u7684\u4e8b\u60c5\u662f\uff0c\u5b83\u771f\u7684\u5f88\u5bb9\u6613\u8df3\u8fc7\u5b66\u4e60\u7ed3\u6784\u5316\u4f60\u7684\u4ee3\u7801\uff0c\u4f7f\u5b83\u5f88\u96be\u9605\u8bfb\u548c\u7ef4\u62a4\u6df7\u4e71\u3002\u5982\u679c\u4f60\u4ecd\u7136\u4e0d\u77e5\u9053\u6211\u5728\u8bf4\u4ec0\u4e48\uff0c\u4e0b\u9762\u662f\u6211\u524d\u6bb5\u65f6\u95f4\u5199\u7684\u4e00\u4e2a(\u574f\u7684)\u56f4\u68cb\u7ec8\u70b9\u7684\u4f8b\u5b50\uff1a\n\u4f60\u660e\u767d\u6211\u7684\u610f\u601d\u5417\uff1f\u5f88\u53ef\u80fd\u5728\u6dfb\u52a0\u4e86\u6240\u6709CreateUser\u548cCreateAgency\u65b9\u6cd5\u4e4b\u540e\uff0c\u66f4\u597d\u7684\u65b9\u6cd5\u603b\u5171\u5c06\u5305\u542b\u66f4\u591a\u884c\uff0c\u4f46\u2026\u9664\u5916\u3002\u4ee5\u540e\u7406\u89e3\u3001\u91cd\u7528\u3001\u8c03\u8bd5\u548c\u4fee\u6539\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u5bb9\u6613\u5f97\u591a\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u53ea\u6709\u4e00\u4e2a\u76ee\u7684\u3002\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u67e5\u770b\u4ee5\u4e0b\u8d44\u6e90\u4ee5\u83b7\u5f97\u826f\u597d\u7684\u4ee3\u7801\u7ed3\u6784\uff1a\nHttps://github.com/bxcodec/go-clean-arch\u200a-\u200aalso\u4e00\u4e2arest API\u793a\u4f8b\uff0c\u4f46\u66f4\u4e25\u683c\u5730\u9075\u5faa\u6e05\u6d01\u67b6\u6784\u7684\u6982\u5ff5\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6982\u5ff5\u5f88\u7b80\u5355\u3002\u60a8\u5e94\u8be5\u5c06\u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u7684\u4ee3\u7801\u4e0e\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u672c\u8eab\u5206\u5f00\uff0c\u5b9e\u9645\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u672c\u8eab\u4e5f\u5e94\u8be5\u4e0e\u4f20\u8f93/\u7aef\u70b9\u903b\u8f91(\u5728\u672c\u4f8b\u4e2d\u662fHTTP\u7aef\u70b9)\u5206\u5f00\u3002\n\u5f53\u6211\u7b2c\u4e00\u6b21\u5f00\u59cb\u4f7f\u7528Go\u7f16\u7a0b\u65f6\uff0c\u6211\u5e0c\u671b\u5c3d\u53ef\u80fd\u5c11\u5730\u4f7f\u7528\u5e93\uff0c\u6240\u4ee5\u6211\u5f53\u7136\u9009\u62e9\u4e86\u4f7f\u7528\u6570\u636e\u5e93/SQL\u5305(\u4e0ePostgres\u4e00\u8d77)\u3002\u867d\u7136\u4f53\u9a8c\u8fd8\u53ef\u4ee5\uff0c\u4f46\u5728\u67e5\u8be2\u6570\u636e\u65f6\uff0c\u6211\u9047\u5230\u4e86\u76f8\u5f53\u591a\u7684\u6837\u677f\uff0c\u7279\u522b\u662f\u5fc5\u987b\u4f7f\u7528\u626b\u63cf\u8bed\u6cd5\u3002\u8fd9\u4f7f\u6211\u6709\u4e86\u4ee5\u4e0b\u4e24\u4e2a\u9009\u9879\uff1a\nSQLX-\u200a\u662f\u4e00\u4e2a\u5efa\u7acb\u5728\u6570\u636e\u5e93/SQL\u4e4b\u4e0a\u7684\u8f7b\u91cf\u7ea7\u5305\u88c5\u5668\uff0c\u5b83\u5e26\u6709\u4e00\u4e9b\u6269\u5c55\uff0c\u53ef\u4ee5\u4f7f\u67e5\u8be2\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u3002\nGORM-SQLGO\u7684\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04(Object-Relational Map\uff0c\u200a)\u5e93\uff0c\u5b83\u6839\u636e\u56f4\u68cb\u6a21\u578b\u751f\u6210SQL\u6a21\u578b\u548c\u67e5\u8be2\u3002\n\u6211\u4e0d\u8ba4\u4e3a\u6709\u4e00\u4e2a\u660e\u786e\u7684\u66f4\u597d\u7684\u5e93\uff0c\u5f52\u6839\u7ed3\u5e95\uff0c\u5b83\u53d6\u51b3\u4e8e\u7528\u4f8b\u548c\u504f\u597d\u3002\nGORM\u53ef\u80fd\u4f1a\u8ba9\u60a8\u7684\u751f\u6d3b\u66f4\u8f7b\u677e\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u7ecf\u5e38\u5fd8\u8bb0\u5728\u66f4\u6539\u6570\u636e\u5e93\u4e4b\u540e\u5411\u67e5\u8be2\u6dfb\u52a0\u5b57\u6bb5(\u56e0\u4e3a\u5728GORM\u4e2d\u60a8\u6839\u672c\u4e0d\u9700\u8981\u8fd9\u6837\u505a)\u3002\n\u53e6\u4e00\u65b9\u9762\uff0cSQLX\u66f4\u591a\u5730\u4ee5SQL\u4e3a\u4e2d\u5fc3\uff0c\u5b83\u66f4\u50cf\u662f\u7f16\u5199Go\u4ee3\u7801\u6765\u4e0eSQL\u4ea4\u4e92\uff0c\u800c\u4e0d\u662fGORM\u4eceGo\u4ee3\u7801\u751f\u6210SQL\u7684\u65b9\u6cd5\u3002\u5982\u679c\u4f60\u559c\u6b22\u5b8c\u5168\u63a7\u5236\u4f60\u7684SQL\uff0c\u800c\u4e0d\u9700\u8981\u5b66\u4e60\u65b0\u7684GORM\u8bed\u6cd5\uff0c\u90a3\u5c31\u597d\u4e86\u3002\n\u6211\u9047\u5230\u7684\u6311\u6218\u4e4b\u4e00\u662f\u4e3a\u751f\u4ea7\u914d\u7f6e\u9879\u76ee\u3002\u5f00\u53d1\u73af\u5883\u548c\u751f\u4ea7\u73af\u5883\u4e4b\u95f4\u603b\u662f\u6709\u4e00\u4e9b\u4e0d\u540c\u4e4b\u5904\uff0c\u6bd4\u5982\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u5728\u54ea\u4e2a\u7aef\u53e3\u4e0a\u8fd0\u884c\u3001\u6570\u636e\u5e93\u7684\u4e3b\u673a\u548c\u51ed\u636e\u7b49\u7b49\u3002\n\u6211\u89c1\u8fc7\u4eba\u4eec\u901a\u8fc7JSON\u3001YAML\uff0c\u751a\u81f3\u662fGOG.go\u6587\u4ef6\u6765\u914d\u7f6e\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u53d8\u91cf\u3002\u6211\u4e2a\u4eba\u53d1\u73b0env\u6587\u4ef6\u5de5\u4f5c\u5f97\u6700\u597d\uff0c\u5c24\u5176\u662f\u4f7f\u7528docker-compose\uff1a\n\u6211\u901a\u5e38\u5c06\u8fd9\u4e9b\u529f\u80fd\u4e0e\u4ee5\u4e0b\u5b9e\u7528\u529f\u80fd\u7ed3\u5408\u4f7f\u7528\uff1a\u6784\u5efaDocker\u955c\u50cf\u4e5f\u975e\u5e38\u5bb9\u6613\uff1a\n\u6211\u8111\u6d77\u4e2d\u8fd8\u6d6e\u73b0\u51fa\u4e00\u4e9b\u6211\u8ba4\u4e3a\u4e0d\u503c\u5f97\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u680f\u76ee\u4e2d\u4f7f\u7528\u7684\u4e1c\u897f\uff1a", "note_en": "I recently got a DevOps job that mostly involves writing a new backend system in Go completely from scratch. Here&#39;s what I learned having never actually used it in production, knowing it mostly just from personal projects.\n  At the start, we decided to try simply sticking with Go&#39;s http library and a simple routing library\u200a-   mux.\n  Logging\u200a - \u200aI wanted some solution that would print information about each request, including body params, auth tokens, etc. (for debugging purposes).\n Better error handling\u200a - \u200aI wanted the errors to still be JSON responses with an error message and code.\n I had two options; implement solutions to the above problems myself, use different 3rd party libraries for each problem, or pick a web framework that already does most (if not all) of these things.\n I eventually decided to use the Echo web framework. With almost 20k GitHub stars, a pretty active community, and great documentation I thought it was a great tool for the job.\n  I also found there to be a little less boilerplate when it comes to writing the apps in  echo (mainly when parsing a json body, writing errors, and manually setting headers), leading to improved code readability.\n  However the real difference in productivity will be noticed when you have slightly more complex endpoints. You&#39;ll often run into cases where you need to validate certain JSON fields, and you&#39;ll want meaningful error messages describing what&#39;s wrong. If you want to do that without any library, your code will quickly become much harder to read:\n   Go web frameworks (or go in general) don&#39;t enforce any particular file structure. If you ever used something like ASP.NET/ASP.NET Core, you&#39;ll know what I&#39;m talking about when I say that some frameworks are tightly structured and many things are done implicitly by convention rather than explicitly specified.\n The thing about Go is that it&#39;s really easy to skip learning about structuring your code and make it a hard to read+maintain mess. If you still don&#39;t know what I&#39;m talking about, here&#39;s an example of a ( bad) Go endpoint I wrote a while back:\n  Do you see what I mean? It&#39;s quite likely that the in total the &#34;better&#34; way will contain more lines in total after adding all the  CreateUser and  CreateAgency methods, but\u2026 It will be much easier to understand, reuse, debug, and modify later on as each method will have a single purpose.If you haven&#39;t already, I highly recommend you have a look at the following resources for a good code structure:\n https://github.com/bxcodec/go-clean-arch\u200a-\u200aalso a REST API example, but more strictly following the &#34;Clean Architecture&#34; concepts\n In general, the concept is simple. You should separate the code that communicates with the database from the actual application logic itself, which should also stay separate from the transport/endpoint logic (in this example the HTTP endpoints).\n  When I first started programming in Go, I wanted to use the least libraries possible, so of course I opted in for using the  database/sql package (with Postgres). Although the experience was OK, I came across quite a lot of boilerplate when querying data, especially having to use the Scan syntax.This lead me to the following 2 options:\n sqlx  - \u200aa lightweight wrapper on top of  database/sql with some extensions that will make querying much easier.\n gorm  - \u200aan ORM (Object-Relational Mapping) library for Go, which generates SQL models and queries based on your Go models.\n I don&#39;t think there&#39;s a clear &#34;better&#34; library, in the end it comes down to the use case and preference.\n gorm will probably make your life easier, especially if you often forget to add fields to queries after altering the database (because in gorm you won&#39;t have to do that at all).\n sqlx on the other hand is much more SQL centric, it&#39;s more like writing Go code to interface with SQL rather than gorm &#39;s approach of generating SQL from Go code. It&#39;s nice if you prefer to have total control over your SQL and not having to learn new syntax of GORM.\n  One of the challenges I came across was configuring the project for production. There are always some differences between the dev and prod environments, such as what port the app should run on, the host and credentials for the database, and etc.\n I&#39;ve seen people configure their app variables via JSON, YAML, or even gitignored\u00a0.go files. I personally found env files to work the best, especially with docker-compose:\n I usually combine these with the following utility functions: Building the Docker image is also extremely easy in Go.:\n  There are also a few other things that came to my mind that I didn&#39;t consider worth their own sections:", "posttime": "2020-11-07 11:20:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u5230,lessons", "title": "\u6295\u4ea7--\u5b66\u5230\u7684\u6559\u8bad", "title_en": "Go in Production \u2013 Lessons Learned", "transed": 1, "url": "https://tdom.dev/go-in-production", "via": "", "real_tags": ["\u5b66\u5230", "lessons"]}, {"category": "", "categoryclass": "", "imagename": "b57e1b882526da8c9b51e36e42f5842f.png", "infoid": 1033633, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u9690\u5f62\u7684\u60c5\u62a5\u673a\u6784\u3002\u4ed6\u4eec\u626b\u63cf\u901a\u8fc7\u7f51\u7edc\u7684\u6bcf\u4e2a\u6570\u636e\u5305\uff0c\u5bfb\u627e\u4ed6\u4eec\u6240\u77e5\u9053\u7684\u6570\u4e07\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u7f51\u7edc\u653b\u51fb\u4e2d\u4efb\u4f55\u4e00\u79cd\u7684\u8ff9\u8c61\u3002\n\u968f\u7740\u7f51\u901f\u7684\u4e0d\u65ad\u63d0\u9ad8\uff0c\u901a\u8fc7\u7684\u6570\u636e\u91cf\u4e5f\u5728\u4e0d\u65ad\u589e\u52a0\u3002\u4e3a\u4e86\u8ddf\u4e0a\u5f62\u52bf\uff0c\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\u5df2\u7ecf\u6210\u957f\u4e3a\u5de8\u5927\u7684\u673a\u67b6\u548c\u6210\u5806\u7684\u670d\u52a1\u5668\uff0c\u8fd9\u63a8\u9ad8\u4e86\u4f9d\u8d56\u5b83\u4eec\u63d0\u4f9b\u4fdd\u62a4\u7684\u7ec4\u7ec7\u7684\u80fd\u6e90\u6210\u672c\u3002\n\u8fd9\u4e00\u5207\u5373\u5c06\u6539\u53d8\u3002\u5361\u5185\u57fa\u6885\u9686\u5927\u5b66(Carnegie Mellon University)CyLab\u7684\u7814\u7a76\u4eba\u5458\u5f00\u53d1\u51fa\u4e86\u6709\u53f2\u4ee5\u6765\u6700\u5feb\u7684\u5f00\u6e90\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf--\u4f7f\u7528\u4e00\u53f0\u670d\u52a1\u5668\u5c31\u80fd\u8fbe\u5230\u6bcf\u79d2100\u5343\u5146\u6bd4\u7279\u7684\u901f\u5ea6\u3002\nCyLab\u7684\u8d3e\u65af\u6c40\u00b7\u96ea\u8389(Justine Sherry)\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u9662(School Of Computer Science)\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\u7684\u52a9\u7406\u6559\u6388\uff0c\u5979\u8bf4\uff1a\u201c\u4ee5\u524d\u6709100-700\u4e2a\u5904\u7406\u5668\u6838\u5fc3\u548c\u4e00\u6574\u67b6\u673a\u5668\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\u914d\u7f6e5\u4e2a\u5904\u7406\u5668\u6838\u5fc3\u3002\u201d\n\u7814\u7a76\u4eba\u5458\u5728\u672c\u5468\u7684USENIX\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u7814\u8ba8\u4f1a\u4e0a\u5c55\u793a\u4e86\u4ed6\u4eec\u7684\u5de5\u4f5c\u3002\n\u6211\u4eec\u521b\u9020\u4e86\u4e00\u53f0\u62ab\u8428\u76d2\u5927\u5c0f\u7684\u673a\u5668\u6765\u5b8c\u6210\u4e00\u6574\u95f4\u670d\u52a1\u751f\u7684\u5de5\u4f5c\u3002\n\u8d3e\u65af\u6c40\u00b7\u96ea\u8389\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\u52a9\u7406\u6559\u6388\u3002\n\u7814\u7a76\u4eba\u5458\u6210\u529f\u7684\u5173\u952e\u662f\u4f7f\u7528\u4e86\u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217(FPGA)\uff0c\u8fd9\u662f\u4e00\u79cd\u96c6\u6210\u7535\u8def\uff0c\u7528\u6237\u53ef\u4ee5\u4e3a\u5176\u7f16\u5199\u4ee3\u7801\u5e76\u8fdb\u884c\u5b9a\u5236\uff0c\u56e0\u6b64\u662f\u201c\u73b0\u573a\u53ef\u7f16\u7a0b\u7684\u201d\u3002\u7814\u7a76\u4eba\u5458\u5bf9\u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217(FPGA)\u8fdb\u884c\u4e86\u7f16\u7a0b\uff0c\u4f7f\u5176\u4e13\u4e3a\u5165\u4fb5\u68c0\u6d4b\u5de5\u4f5c\u91cf\u8eab\u5b9a\u505a\uff0c\u5e76\u5199\u9053\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u4e0d\u80fd\u5728\u4f20\u7edf\u5904\u7406\u5668\u4e0a\u8fd0\u884c\uff0c\u800c\u4e14\u901f\u5ea6\u8981\u5feb\u5f97\u591a\u3002\nSherry\u8bf4\uff0c\u5f53\u88ab\u653e\u5165\u7f51\u7edc\u65f6\uff0c\u5e73\u574795%\u7684\u6570\u636e\u5305\u7531FPGA\u81ea\u5df1\u5904\u7406\uff0c\u800c\u5176\u4f595%\u7684\u6570\u636e\u5305\u5728\u53d8\u5f97\u4e0d\u582a\u91cd\u8d1f\u65f6\u88ab\u4f20\u9012\u7ed9\u4e2d\u592e\u5904\u7406\u5668\uff0c\u56e0\u6b64\u4ed6\u4eec\u7684\u7cfb\u7edf\u9700\u8981\u4e94\u4e2a\u5904\u7406\u5668\u5185\u6838\u3002\n\u96ea\u8389\u8bf4\uff1a\u201c\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u7531\u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217(FPGA)\u5b8c\u6210\u7684\uff0c\u4f46\u4e5f\u6709\u4e00\u90e8\u5206\u5de5\u4f5c\u662f\u7531\u5904\u7406\u5668\u5b8c\u6210\u7684\u3002\u201d\n\u8282\u80fd\u7684\u7ed3\u679c\u662f\u5de8\u5927\u7684\uff1a\u4ed6\u4eec\u7684\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\u4f7f\u7528\u4e00\u4e2aFPGA\u6bd4\u6267\u884c\u76f8\u540c\u5de5\u4f5c\u7684\u6570\u767e\u4e2a\u5904\u7406\u6838\u5fc3\u4f7f\u7528\u7684\u7535\u529b\u5c1138\u500d\u3002\n\u5c31\u50cf\u4f60\u7684\u7535\u8d39\u8fc7\u53bb\u662f100\u7f8e\u5143\uff0c\u73b0\u5728\u662f3\u7f8e\u5143\u3002\n\u8d3e\u65af\u6c40\u00b7\u96ea\u8389\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u7cfb\u52a9\u7406\u6559\u6388\u3002\n\u201c\u5c31\u50cf\u4f60\u7684\u7535\u8d39\u8fc7\u53bb\u662f100\u7f8e\u5143\uff0c\u73b0\u5728\u662f3\u7f8e\u5143\uff0c\u201d\u96ea\u8389\u8bf4\u3002\u201c\u6211\u4eec\u521b\u9020\u4e86\u4e00\u53f0\u62ab\u8428\u76d2\u5927\u5c0f\u7684\u673a\u5668\uff0c\u6765\u5b8c\u6210\u4e00\u6574\u95f4\u670d\u52a1\u751f\u7684\u5de5\u4f5c\u3002\u201d", "note_en": "Intrusion detection systems are the invisible intelligence agencies in computer networks. They scan every packet of data that is passed through the network, looking for signs of any one of the tens of thousands of different types of cyberattacks they\u2019re aware of.\n As Internet speeds continue to increase, so too does the amount of data that passes through. To keep up, intrusion detection systems have grown into giant racks and stacks of servers, driving energy costs up for organizations that rely on them for protection.\n That\u2019s all about to change. Researchers in Carnegie Mellon University\u2019s CyLab have developed the fastest-ever open-source intrusion detection system\u2014one that achieves speeds of 100 gigabits per second using a single server.\n \u201cWhat was previously possible with 100-700 processor cores and a whole rack of machines, we can now do with five processor cores in a single server,\u201d says CyLab\u2019s  Justine Sherry, an assistant professor in the  Computer Science Department (CSD) in the  School of Computer Science.\n The researchers are presenting  their work at this week\u2019s  USENIX Symposium on Operating Systems Design and Implementation.\n  We created one pizza box-sized machine to do the work of a whole room of servers.\n   Justine Sherry,  Assistant Professor, Computer Science Department\n  Key to the researchers\u2019 success is the use of a field-programmable gate array (FPGA), an integrated circuit for which users can write code and customize, hence \u201cfield-programmable.\u201d The researchers programmed the FPGA to be tailored for the sole job of intrusion detection and wrote that algorithms which can\u2019t run on traditional processors and are significantly faster.\n When placed in a network, Sherry says that an average of 95 percent of data packets are processed by the FPGA on its own, while the other five percent are passed on to central processing units when it becomes overwhelmed, hence the necessity of five processor cores in their system.\n \u201cThe FPGA does most of the work, but some of it still goes to the processors,\u201d Sherry says.\n The result in energy-savings is enormous: their intrusion detection system uses 38 times less power using an FPGA than hundreds of processing cores would in performing the same work.\n  It\u2019s like your electricity bill used to be $100, and now it\u2019s $3.\n   Justine Sherry,  Assistant Professor, Computer Science Department\n  \u201cIt\u2019s like your electricity bill used to be $100, and now it\u2019s $3,\u201d says Sherry. \u201cWe created one pizza box-sized machine to do the work of a whole room of servers.\u201d", "posttime": "2020-11-07 11:19:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u5165\u4fb5,open,fpga", "title": "\u5feb\u901f\u5f00\u6e90\u5165\u4fb5\u68c0\u6d4b", "title_en": "Fast open-source intrusion detection", "transed": 1, "url": "https://www.cylab.cmu.edu/news/2020/11/05-intrusion.html", "via": "", "real_tags": ["\u5f00\u6e90", "\u5165\u4fb5", "open", "fpga"]}, {"category": "", "categoryclass": "", "imagename": "1c73dcb4e8eef769e2d2e29f3add898a.png", "infoid": 1033632, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u4e92\u52a8\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528Commodore 64 Basic\u6784\u5efa\u4e00\u4e2a\u7a81\u56f4\u6e38\u620f\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u7f16\u7a0b\u6280\u5de7\uff0c\u4f46\u5b83\u6709\u76f8\u5f53\u6df1\u539a\u7684\u7406\u8bba\u80cc\u666f\u3002\u542c\u6211\u89e3\u91ca\u3002\n\u6211\u76f8\u4fe1\uff0c\u5f53\u7f16\u7a0b\u6bd4\u6211\u4eec\u4f7f\u7528\u7684\u7279\u5b9a\u7f16\u7a0b\u8bed\u8a00\u66f4\u91cd\u8981\u65f6\uff0c\u6211\u4eec\u5982\u4f55\u4e0e\u7f16\u7a0b\u73af\u5883\u4ea4\u4e92\u3002\n\u8fd9\u4ece\u6765\u6ca1\u6709\u88ab\u5e7f\u6cdb\u7814\u7a76\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u8fc7\u53bb\u7684\u7cfb\u7edf\u4e2d\u5b66\u5230\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f\uff0c\u5305\u62ec\u51c6\u5c0664 Basic\u3002\n\u6211\u4eec\u5e94\u8be5\u56de\u987e\u5386\u53f2\uff0c\u91cd\u73b0\u8fc7\u53bb\u7684\u7f16\u7a0b\u7ecf\u9a8c\uff0c\u4ee5\u4fbf\u5411\u4ed6\u4eec\u5b66\u4e60\uff0c\u9075\u5faa\u79d1\u5b66\u53f2\u5b66\u5bb6\u5f20\u590f\u7855(Hasok Chang)\u6240\u79f0\u7684\u5b8c\u5168\u79d1\u5b66\u7684\u65b9\u6cd5\u3002\n\u4ec5\u4ec5\u9605\u8bfb\u6709\u5173\u4e92\u52a8\u7684\u5185\u5bb9\u662f\u4e0d\u591f\u7684\u3002\u8981\u4e86\u89e3\u4e92\u52a8\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u4f60\u9700\u8981\u4eb2\u8eab\u4f53\u9a8c\uff0c\u81f3\u5c11\u662f\u5728\u6709\u9650\u7684\u5f62\u5f0f\u4e0b\u3002\u8fd9\u6700\u597d\u662f\u7528\u4e00\u7bc7\u4e92\u52a8\u7684\u6587\u7ae0\u6765\u5b8c\u6210\u3002\n\u8fd9\u662f\u4e00\u7bc7\u4ea4\u4e92\u5f0f\u6587\u7ae0\uff0c\u8bb0\u5f55\u4e86Commodore 64 Basic\u7f16\u7a0b\u7684\u4e00\u4e9b\u6709\u8da3\u65b9\u9762\u3002\u4e0d\u8fc7\uff0c\u6211\u5e76\u4e0d\u662f\u8981\u521b\u9020\u4e00\u4e2a\u7cbe\u786e\u7684\u51c6\u5c0664\u6a21\u62df\u5668\u3002\u91cd\u70b9\u662f\u5c55\u793a\u4e00\u4e9b\u6211\u4eec\u53ef\u4ee5\u5728\u672a\u6765\u7684\u7f16\u7a0b\u7cfb\u7edf\u4e2d\u5b66\u4e60\u7684\u4e1c\u897f\u3002\n\u6211\u4eec\u5c06\u4eceHello World\u793a\u4f8b\u5f00\u59cb\uff0c\u770b\u770b\u4e8b\u60c5\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u7136\u540e\u6211\u4eec\u5c06\u6784\u5efa\u4e00\u4e2a\u5c0f\u578b\u7a81\u56f4\u6e38\u620f\u3002\u8fd9\u8bf4\u660e\u4e86\u5165\u95e8\u662f\u591a\u4e48\u5bb9\u6613\uff0c\u73af\u5883\u5982\u4f55\u652f\u6301\u5b66\u4e60\uff0c\u4ee5\u53caCommmodore 64\u57fa\u672c\u4ea4\u4e92\u6a21\u5f0f\u5982\u4f55\u8ba9\u6211\u4eec\u4ee5\u4e00\u79cd\u4e0e\u73b0\u4ee3\u7f16\u7a0b\u73af\u5883\u622a\u7136\u4e0d\u540c\u7684\u65b9\u5f0f\u9010\u6b65\u6784\u5efa\u7a0b\u5e8f\u3002\n\u5f53\u51c6\u5c0664\u542f\u52a8\u65f6\uff0c\u4e00\u4e2a\u6765\u81eaBasic\u7684\u6b22\u8fce\u5c4f\u5e55\u7b49\u5f85\u7740\u4f60\u3002\u5373\u4f7f\u60a8\u53ea\u60f3\u4f7f\u7528\u5b83\u6765\u73a9\u6e38\u620f\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4ece\u7f16\u7a0b\u73af\u5883\u5f00\u59cb\u3002\u8fd9\u544a\u8bc9\u60a8\uff0c\u60a8\u4e5f\u53ef\u4ee5\u6210\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458\uff0c\u60a8\u5f53\u7136\u4e0d\u9700\u8981\u4e0b\u8f7d\u5343\u5146\u5b57\u8282\u7684\u5de5\u5177\uff0c\u4e5f\u4e0d\u9700\u8981\u7b49\u5f85\u6570\u5c0f\u65f6\u624d\u80fd\u5b89\u88c5XCode\u6216Visual Studio\u3002\n\u8ba9\u6211\u4eec\u9075\u5faa\u4f20\u7edf\uff0c\u8ba9Basic\u4e3a\u6211\u4eec\u95ee\u597d\u4e16\u754c\u3002\u8981\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u8bf7\u952e\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u6216\u8005\u5982\u679c\u60a8\u5f88\u61d2\uff0c\u53ea\u9700\u5355\u51fb\u8be5\u6309\u94ae\u5373\u53ef\u3002\n\u5bf9\u4e8e\u4e00\u4e2a\u73b0\u4ee3\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u4ece\u542f\u52a8\u673a\u5668\u5230\u6253\u5370Hello world\u6240\u9700\u7684\u65f6\u95f4\u662f\u5982\u6b64\u4e4b\u5c11\uff0c\u8fd9\u662f\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u60a8\u4e0d\u4ec5\u53ef\u4ee5\u4ece\u7f16\u7a0b\u73af\u5883\u5f00\u59cb\uff0c\u8fd8\u4e0d\u9700\u8981\u7f16\u5199\u4efb\u4f55\u7c7b\u3001\u9759\u6001\u65b9\u6cd5\u548c\u7f16\u8bd1\u7a0b\u5e8f\u3002\n\u663e\u800c\u6613\u89c1\u7684\u4e0b\u4e00\u6b65\u662f\u5728\u65e0\u9650\u5faa\u73af\u4e2d\u6253\u5370Hello world\u3002\u4ee5\u524d\uff0c\u6211\u4eec\u8f93\u5165\u4e00\u4e2a\u547d\u4ee4\u5e76\u7531Basic\u6267\u884c\u5b83\uff0c\u4f46\u73b0\u5728\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5728\u4ee3\u7801\u524d\u52a0\u4e0a\u884c\u53f7\uff1a\n\u8fd9\u53c8\u662f\u4e00\u79cd\u5de7\u5999\u7684\u505a\u6cd5\u3002Basic\u4f1a\u4fdd\u5b58\u7a0b\u5e8f\u7684\u884c\u5217\u8868\uff0c\u5f53\u60a8\u952e\u5165\u4ee5\u6570\u5b57\u5f00\u5934\u7684\u884c\u65f6\uff0c\u5b83\u4f1a\u5c06\u5176\u63d2\u5165\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u63d0\u793a\u7b26\u6765\u8fd0\u884c\u547d\u4ee4\u548c\u7f16\u8f91\u7a0b\u5e8f\u3002\u8981\u73b0\u5728\u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u53ea\u9700\u952e\u5165run\uff1a\n\u5982\u679c\u60a8\u8fd0\u884c\u7684\u7a0b\u5e8f\u5e26\u6709\u7c7b\u4f3c\u8fd9\u6837\u7684\u65e0\u9650\u5faa\u73af\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Ctrl+C\u6216Command+C\u6765\u505c\u6b62\u5b83\u3002\u5982\u679c\u60a8\u60f3\u8981\u67e5\u770b\u60a8\u8f93\u5165\u7684\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u8f93\u5165list\u547d\u4ee4\u3002\n\u5728Basic\u4e2d\uff0c\u53ea\u9700\u51e0\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8bb8\u591a\u5de7\u5999\u7684\u6280\u5de7\u3002\u8fd9\u79cd\u5165\u95e8\u7684\u7b80\u4fbf\u6027\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u6709\u8da3\u7684\u7f16\u7a0b\u73af\u5883\u3002\u5982\u679c\u4f60\u5728\u7535\u8111\u6742\u5fd7\u4e0a\u53d1\u73b0\u4e86\u6709\u8da3\u7684\u9ed1\u5ba2\u653b\u51fb\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u8f93\u5165\u63a7\u5236\u53f0\uff0c\u7136\u540e\u9a6c\u4e0a\u8fd0\u884c\u5b83\u3002\n\u4f60\u5fc5\u987b\u4ece\u7eb8\u8d28\u6742\u5fd7\u4e0a\u590d\u5236\u4ee3\u7801\u8fd9\u4e00\u4e8b\u5b9e\u542c\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u4f46\u5b83\u5177\u6709\u6559\u80b2\u610f\u4e49\u3002\u5b83\u4f7f\u53ef\u4ee5\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5206\u53d1\u7684\u6837\u672c\u4fdd\u6301\u5728\u76f8\u5f53\u5c0f\u7684\u8303\u56f4\u5185\uff0c\u5e76\u4e14\u8ba9\u60a8\u5728\u8f93\u5165\u4ee3\u7801\u65f6\u8003\u8651\u4ee3\u7801\u3002\n\u8981\u4eb2\u81ea\u4f53\u9a8c\u8fd9\u4e00\u70b9\uff0c\u60a8\u5e94\u8be5\u5c1d\u8bd5\u5728\u63a7\u5236\u53f0\u4e2d\u8f93\u5165\u4ee5\u4e0b\u4e09\u884c\u7a0b\u5e8f\uff01\u5b83\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8457\u540d\u7684\u8ff7\u5bab\u3002\u8fd9\u4f9d\u8d56\u4e8e\u7279\u6b8a\u7684\u51c6\u5c06\u5b57\u7b26\u4ee3\u7801\uff1a147\u6e05\u9664\u5c4f\u5e55\uff0c205\u548c206\u662f\u53cd\u659c\u6760\u548c\u6a2a\u8de8\u6574\u4e2a\u5b57\u7b26\u5927\u5c0f\u7684\u659c\u6760\u3002\n\u8981\u6253\u9020\u6211\u4eec\u7684\u7a81\u56f4\u6e38\u620f\uff0c\u6211\u4eec\u53ef\u4ee5\u5faa\u5e8f\u6e10\u8fdb\u3002\u8fd9\u662f\u7f16\u7a0b\u73af\u5883\u7684\u53e6\u4e00\u4e2a\u5f88\u597d\u7684\u7279\u6027\u3002\u6211\u4eec\u60f3\u521b\u9020\u4e00\u4e2a\u4ece\u5899\u4e0a\u5f39\u8d77\u7684\u7403\uff0c\u4f46\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2a\u5411\u53f3\u79fb\u52a8\u7684\u7403\u5f00\u59cb\u5427\u3002\n\u6211\u4eec\u53ea\u4f1a\u505a\u5f88\u5c11\u7684\u89c4\u5212\u3002\u7528\u6e38\u620f\u72b6\u6001\u521d\u59cb\u5316\u53d8\u91cf\u7684\u4ee3\u7801\u4ece\u7b2c1000\u884c\u5f00\u59cb\uff0c\u5904\u7406\u7403\u79fb\u52a8\u7684\u4ee3\u7801\u4ece2000\u5f00\u59cb\u3002\u6211\u4eec\u8fd8\u5c06\u9996\u5148\u6e05\u9664\u5c4f\u5e55\u5e76\u4f7f\u7528DELETE\u5220\u9664\u6240\u6709\u5148\u524d\u7684\u8ff7\u5bab\u548cHello World\u4ee3\u7801\u3002\n\u6253\u5370CHR$(147)\uff1b\u5220\u96641000REM\u72b6\u6001\u521d\u59cb\u53161010X=02000 REM\u7403\u79fb\u52a82010 Pke X CHR$(32)2020 X=X+12030 Pke X CHR$(209)2040Goto 2000Run\u3002\n\u8981\u5728\u7279\u5b9a\u4f4d\u7f6e\u7ed8\u5236\u4e00\u4e2a\u7403\uff0c\u6211\u4eec\u4f7f\u7528poke\uff0c\u5b83\u5c06\u4e00\u4e2a\u503c\u5199\u5165\u5185\u5b58\u4f4d\u7f6e\u3002\u8fd9\u91cc\uff0c\u4ee3\u8868\u5c4f\u5e55\u7684\u5185\u5b58\u90e8\u5206\u4ece\u504f\u79fb\u91cf0\u5f00\u59cb\u3002\u6211\u4eec\u9996\u5148\u4f7f\u7528\u7a7a\u683c(\u5b57\u7b26\u4ee3\u780132)\u64e6\u9664\u524d\u4e00\u4e2a\u7403\uff0c\u7136\u540e\u753b\u4e00\u4e2a\u7403(\u5b57\u7b26\u4ee3\u7801209)\u3002\n\u8981\u8ba9\u7403\u4ece\u5899\u4e0a\u5f39\u8d77\uff0c\u6211\u4eec\u9700\u8981\u68c0\u67e5\u5b83\u4f55\u65f6\u5230\u8fbe\u5c4f\u5e55\u4e00\u4fa7\uff0c\u5e76\u53cd\u8f6c\u5b83\u79fb\u52a8\u7684\u65b9\u5411\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u6301\u66f4\u591a\u7684\u72b6\u6001\u3002\u6211\u4eec\u4f7f\u7528\u53d8\u91cfX\u6765\u4fdd\u6301X\u5750\u6807\u3002\u73b0\u5728\uff0c\u6211\u4eec\u4e3aY\u5750\u6807\u6dfb\u52a0Y\uff0c\u5e76\u4e3a\u65b9\u5411(+1\u6216-1)\u6dfb\u52a0DX\u3001DY\u3002\u4e3a\u4e86\u6e05\u695a\u5730\u770b\u5230\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u8ba9\u6211\u4eec\u9996\u5148\u6e05\u9664\u5c4f\u5e55\u5e76\u5217\u51fa\u6211\u4eec\u5f53\u524d\u7684\u4ee3\u7801\u3002\n\u6211\u4eec\u7d27\u8ddf\u5728\u521d\u59cb\u5316\u4ee3\u7801\u4e2d\u7684\u7f16\u8f91\u4e4b\u540e\uff0c\u5728\u7403\u79fb\u52a8\u4ee3\u7801\u4e2d\u8fdb\u884c\u7f16\u8f91(\u4ece\u7b2c2000\u884c\u5f00\u59cb)\uff0c\u4ee5\u68c0\u67e5\u4e0e\u5c4f\u5e55\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u51b2\u7a81\uff1a\n2010Poke((Y*40)+X)CHR$(32)2020 X=X+DX2030 Y=Y+DY2040\u5982\u679cX=40\uff0c\u5219DX=-12050\u5982\u679cX=40\uff0c\u5219X=382060\uff1b\u5982\u679cX&lt\uff1b0\uff0c\u5219DX=12070\u5982\u679cX&lt\uff1b0\uff0c\u5219X=12200 Pke((Y*40)+X)CHR$(209)2210\u8f6c\u81f32000Run\u3002\n\u6211\u4eec\u77e5\u9053\u9700\u8981\u4e3a\u9876\u90e8\u548c\u5e95\u90e8\u6dfb\u52a0\u652f\u7968\uff0c\u6240\u4ee5\u6211\u4eec\u4fdd\u7559\u4e86\u4e00\u4e9b\u7a7a\u884c\u3002\u68c0\u67e5\u4ee3\u7801\u57282070\u7ed3\u675f\uff0c\u62bd\u7403\u57282200\u884c\u3002\u6211\u4eec\u53ea\u9700\u8981\u586b\u4e0a\u5269\u4e0b\u7684\u652f\u7968\uff1a\n2080\u5e74\u5982\u679cY=25\uff0c\u5219DY=-12090\uff1b\u5982\u679cY=25\uff0c\u5219Y=232100\uff1b\u5982\u679cY&lt\uff1b0\uff0c\u5219DY=12110\uff1b\u5982\u679cY&lt\uff1b0\uff0c\u5219Y=2Run\u3002\n\u4e3a\u4ec0\u4e48\u7403\u8fd8\u5728\u4ece\u5de6\u5411\u53f3\u518d\u5411\u540e\u79fb\u52a8\uff1f\u6211\u4eec\u6dfb\u52a0\u4e86\u6821\u9a8c\u7801\uff0c\u4f46\u5fd8\u4e86\u66f4\u6539DY\u3002\u8fd9\u5f88\u5bb9\u6613\u4fee\u590d\uff1a\n\u8fd9\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\uff0c\u4e00\u4e2a\u4ece\u5899\u4e0a\u5f39\u8d77\u7684\u7403\uff01\u4f46\u8ba9\u6211\u53cd\u601d\u4e00\u4e0b\u6211\u4eec\u662f\u5982\u4f55\u521b\u5efa\u8fd9\u4e2a\u9879\u76ee\u7684\u3002\u6211\u4eec\u4ece\u4e00\u4e2a\u79fb\u52a8\u7684\u7403\u5f00\u59cb\uff0c\u7136\u540e\u5206\u4e24\u6b65\u589e\u52a0\u5f39\u8df3\u3002Commodore 64 Basic\u7684\u7f16\u7a0b\u6a21\u578b\u4f7f\u8fd9\u4e00\u70b9\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002\n\u8fd9\u53d6\u51b3\u4e8e\u4e24\u4ef6\u4e8b\u3002\u9996\u5148\uff0c\u7531\u4e8e\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u6027\u547d\u4ee4\u5217\u8868\uff0c\u5bfb\u5740(\u4f7f\u7528\u884c\u53f7)\u4f7f\u7f16\u8f91\u7a0b\u5e8f\u6bd4\u7f16\u8f91\u7531\u590d\u6742\u7684\u7ec4\u5408\u8868\u8fbe\u5f0f\u7ec4\u6210\u7684\u7a0b\u5e8f\u8981\u5bb9\u6613\u5f97\u591a\u3002\u6211\u4eec\u5fc5\u987b\u806a\u660e\u5730\u5904\u7406\u884c\u53f7\uff0c\u624d\u80fd\u6709\u7a7a\u95f4\u63d2\u5165\u4ee3\u7801\uff0c\u4f46\u8fd9\u53ea\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u4ee3\u4ef7\u3002\u5176\u6b21\uff0c\u63a7\u5236\u53f0\u7684\u53cc\u91cd\u7528\u9014(\u65e2\u662f\u7f16\u8f91\u5668\u53c8\u662fREPL)\u610f\u5473\u7740\u4ea4\u4e92\u975e\u5e38\u7b80\u5355\u3002\n\u8fd9\u6b3e\u6e38\u620f\u673a\u8fd8\u6709\u66f4\u591a\u7684\u529f\u80fd\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u8fd0\u884c\u4e00\u6b21\u6027\u6d4b\u8bd5\uff0c\u6bd4\u5982Print(Y*40)+X\u6765\u6d4b\u8bd5\u60a8\u7684\u8ba1\u7b97\u3002\u60a8\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u72b6\u6001\uff0c\u7136\u540e\u8df3\u5230\u7a0b\u5e8f\u4e2d\u95f4\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u7403\u79fb\u52a8\u5230\u53f3\u4e0b\u89d2\uff0c\u5e76\u901a\u8fc7\u8df3\u8fc7\u521d\u59cb\u5316\u4ee3\u7801\u8ba9\u7a0b\u5e8f\u4ece\u90a3\u91cc\u8fd0\u884c\uff1a\n\u5728\u6211\u4eec\u628a\u8fd9\u4e2a\u7a0b\u5e8f\u53d8\u6210\u4e00\u4e2a\u771f\u6b63\u7684\u6e38\u620f\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5f04\u6e05\u695a\u5982\u4f55\u5904\u7406\u6765\u81ea\u952e\u76d8\u7684\u8f93\u5165\u3002\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cfK$\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528GET$K$\u4ece\u7f13\u51b2\u533a\u8bfb\u53d6\u5bc6\u94a5\u3002\u5982\u679c\u7f13\u51b2\u533a\u4e2d\u6ca1\u6709\u952e\uff0c\u8fd9\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u7b49\u5f85\u952e\u7684\u5faa\u73af\u3002\u5728\u5b9e\u9645\u7a0b\u5e8f\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7b2c10-50\u884c\u6267\u884c\u6b64\u64cd\u4f5c\uff1a\n\u6253\u5370\u5b8c\u5b57\u7b26\u7684PETSCII\u4ee3\u7801\u540e\uff0c\u6211\u4eec\u663e\u5f0f\u5730\u505c\u6b62\u7a0b\u5e8f\uff0c\u8fd9\u6837\u5b83\u5c31\u4e0d\u4f1a\u7ee7\u7eed\u8fdb\u5165\u6211\u4eec\u7684\u7403\u5f39\u8df3\u4ee3\u7801\u3002\u73b0\u5728\u5c1d\u8bd5\u4f7f\u7528Run\u547d\u4ee4\u91cd\u590d\u8fd0\u884c\u8be5\u7a0b\u5e8f\uff0c\u4ee5\u83b7\u53d6\u5411\u4e0a\u548c\u5411\u4e0b\u7bad\u5934\u7684\u5173\u952e\u4ee3\u7801\uff01\u89e3\u91ca\u5668\u4e0d\u652f\u6301\u6240\u6709\u952e\uff0c\u4f46\u5b83\u53ef\u4ee5\u5904\u7406\u7bad\u5934\u3001\u7a7a\u683c\u548c\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002\n\u6211\u4eec\u9700\u8981\u5411\u4e0a\u952e(145)\u548c\u5411\u4e0b\u952e(17)\u7684\u5bc6\u94a5\u4ee3\u7801\u3002\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5220\u9664\u6211\u4eec\u7684\u6d4b\u8bd5\u4ee3\u7801\uff1a\n\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86\u5982\u4f55\u5904\u7406\u8f93\u5165\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6e38\u620f\u4e2d\u6dfb\u52a0\u4e00\u628a\u6868\u4e86\u3002\u5b83\u5c06\u4f4d\u4e8e\u5c4f\u5e55\u7684\u5de6\u4fa7\uff0c\u5e76\u4f7f\u7528\u5411\u4e0a\u952e\u548c\u5411\u4e0b\u952e\u8fdb\u884c\u79fb\u52a8\u3002\u6211\u4eec\u53ef\u4ee5\u72ec\u7acb\u4e8e\u5230\u76ee\u524d\u4e3a\u6b62\u5df2\u7ecf\u7f16\u5199\u7684\u6240\u6709\u4ee3\u7801\u6765\u7f16\u5199\u4ee3\u7801\uff0c\u5728\u521d\u59cb\u5316\u4ee3\u7801\u4e2d\u6dfb\u52a01050\u884c\uff0c\u5e76\u57282500\u5904\u5f00\u59cb\u5212\u6868\u79fb\u52a8\u4ee3\u7801\u3002\n\u903b\u8f91\u5f88\u7b80\u5355\u3002\u6211\u4eec\u8bfb\u53d6\u4e00\u628a\u94a5\u5319\u5e76\u5f97\u5230\u5b83\u7684\u4ee3\u7801\u3002\u5982\u679c\u952e\u5411\u4e0a\u6216\u5411\u4e0b\uff0c\u6211\u4eec\u4f1a\u9012\u589e\u6216\u9012\u51cf\u7403\u62cd\u7684\u4f4d\u7f6e\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528POKE\u7ed8\u5236\u5212\u6868\uff0c\u8fd8\u5728\u524d\u540e\u753b\u4e86\u4e00\u4e2a\u7a7a\u683c\u6765\u64e6\u9664\u4e4b\u524d\u7684\u72b6\u6001\u3002\u4eff\u771f\u5668\u4e0d\u652f\u6301\u5faa\u73af\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u7ed8\u52365\u4e2a\u7ad6\u7ebf\u5b57\u7b26\u3002\n1050P=102500 REM\u79fb\u52a8A\u7403\u62cd2510 K=02530\uff0c\u5982\u679cK$&lt\uff1b&&gt;34\uff1b&#34\uff1b&#34\uff1b\u5219\u83b7\u5f97$2540 K\uff1b\uff1b&#34\uff1b&#34\uff1b\uff1b2520 K=02530\uff0c\u5982\u679cK$&lt\uff1b&gt\uff1b&#34\uff1b&#34\uff1b\u5219\u83b7\u5f97$2540\uff1b\u5219K=Asc(K$)2550\u5982\u679cK=145\uff0c\u5219P=P-12560\u5982\u679cK=17\uff0c\u5219P=P+12570 poke((P-1)*40)chr$(32)2571 poke((P+0)*40)chr$(182)2572 poke((P+1)*40)chr$(182)2573 poke((P+2)*40)chr$(182)2574 poke((P+3)*40)chr\u3002\n\u65e0\u8bba\u60a8\u662f\u5426\u9075\u5faa\u4e86\u524d\u9762\u7684\u7ae0\u8282\uff0c\u60a8\u90fd\u53ef\u4ee5\u8fd0\u884c\u6b64\u547d\u4ee4\u3002\u5982\u679c\u60a8\u8fd9\u6837\u505a\u4e86\uff0c\u8f93\u5165run\u5c06\u542f\u52a8\u5f39\u8df3\u7403\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u624b\u52a8\u521d\u59cb\u5316P\u5e76\u76f4\u63a5\u8df3\u5230\u7403\u62cd\u5904\u7406\u4ee3\u7801\u3002\n\u4e3a\u4e86\u5c3d\u5feb\u8ba9\u67d0\u4e9b\u4e1c\u897f\u8fd0\u884c\uff0c\u6211\u4eec\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u68c0\u67e5\u4ee5\u786e\u4fddPATE\u4e0d\u4f1a\u5728\u5c4f\u5e55\u4e4b\u5916\u8fd0\u884c\u3002\u5982\u679c\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u7a0b\u5e8f\u4f1a\u7acb\u5373\u505c\u6b62\uff0c\u60a8\u9700\u8981\u4f7f\u7528Ctrl+C\u7ec4\u5408\u952e\u7ec8\u6b62\u5b83\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u4e0d\u5728\u5f00\u59cb/\u7ed3\u675f\u4f4d\u7f6e\u65f6\u5728\u6868\u5468\u56f4\u753b\u7a7a\u683c\uff0c\u5e76\u786e\u4fddP\u57280\u523020\u4e4b\u95f4\u3002\u6211\u4eec\u975e\u5e38\u660e\u667a\u5730\u4f7f\u752810\u7684\u500d\u6570\u4f5c\u4e3a\u884c\u53f7\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u7a7a\u95f4\u57282560\u52302570\u4e4b\u95f4\u63d2\u5165\u6b64\u4ee3\u7801\u3002\n\u5982\u679cP&&gt;0\uff0c\u5219\u6233((P-1)*40)chr$(32)2576\u5982\u679cP&lt\uff1b20\uff0c\u5219\u6233((P+5)*40)chr$(32)2561\u5982\u679cP&&gt;0\uff0c\u5219P=02562\uff1b\u5982\u679cP&lt\uff1b20\uff0c\u5219P=20GOTO 2500\u3002\n\u6211\u4eec\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u72ec\u7acb\u6784\u5efa\u4e86\u6e38\u620f\u7684\u4e24\u4e2a\u90e8\u5206\u3002\u5f39\u8df3\u7403\u7684\u4ee3\u7801\u57282000\u52302500\u884c\u4e4b\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165run\u6216goto 2000\u6765\u542f\u52a8\u5b83\u3002\u5728\u90a3\u4e4b\u540e\uff0c\u5212\u677f\u7684\u4ee3\u7801\u5c31\u5f00\u59cb\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GOTO 2500\u6765\u8fd0\u884c\u5b83\u3002\u6700\u540e\u4e00\u6b65\u662f\u628a\u8fd9\u4e24\u4e2a\u90e8\u5206\u8fde\u63a5\u8d77\u6765\uff01\u5982\u679c\u60a8\u8df3\u8fc7\u4e86\u672c\u6559\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u4e0b\u5185\u5bb9\u53ef\u8ba9\u60a8\u91cd\u65b0\u52a0\u8f7d\u6240\u6709\u4ee3\u7801\u3002\n\u73b0\u5728\u8fd0\u884cList\u65f6\uff0c\u6574\u4e2a\u4ee3\u7801\u592a\u957f\uff0c\u65e0\u6cd5\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002\u5982\u679c\u60a8\u60f3\u67e5\u770b\u5b83\uff0c\u5219\u9700\u8981\u8fd0\u884clist-2500\u6765\u67e5\u770b\u7b2c2500\u884c\u4e4b\u524d\u7684\u6240\u6709\u5185\u5bb9\uff0c\u6216\u8005\u8fd0\u884clist 2500\u6765\u67e5\u770b2500\u884c\u4e4b\u540e\u7684\u6240\u6709\u5185\u5bb9\u3002\n\u8981\u94fe\u63a5\u8fd9\u4e24\u4e2a\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u8fdb\u884c\u51e0\u6b21\u7f16\u8f91\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u6e05\u9664\u521d\u59cb\u5316\u4ee3\u7801\u672b\u5c3e\u7684\u5c4f\u5e55\uff0c\u5e76\u66f4\u65b0\u5f39\u8df3\uff0c\u4f7f\u7403\u4fdd\u6301\u5728\u7403\u62cd\u7684\u53f3\u4fa7\u3002\u5176\u6b21\uff0c\u6211\u4eec\u5c06\u628a\u8fd9\u4e24\u4e2a\u90e8\u5206\u8054\u7cfb\u8d77\u6765\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u901a\u8fc7\u4ece\u7403\u79fb\u52a8\u4ee3\u7801\u7684\u672b\u5c3e\u5220\u9664GoTo 2000\u6765\u5408\u5e76\u8fd9\u4e24\u4e2a\u5faa\u73af\u3002\u53ea\u6709\u5728\u66f4\u65b0\u4e862580\u7ebf\u4e0a\u7684\u7403\u62cd\u4e4b\u540e\uff0c\u6211\u4eec\u624d\u4f1a\u8df3\u52302000\u7ebf\u3002\n\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u4e00\u573a\u6bd4\u8d5b\uff0c\u4f46\u6211\u4eec\u9057\u6f0f\u4e86\u6700\u540e\u4e00\u4e2a\u5173\u952e\u90e8\u5206\u3002\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u68c0\u67e5\uff0c\u4ee5\u68c0\u6d4b\u7403\u5728\u4ece\u5c4f\u5e55\u5de6\u4fa7\u53cd\u5f39\u65f6\u6ca1\u6709\u51fb\u4e2d\u7403\u62cd\u3002\u6211\u4eec\u57282030\u548c2040\u884c\u4e4b\u95f4\u63d2\u5165\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u5728\u66f4\u65b0\u7403\u4f4d\u7f6e\u4e4b\u540e\u3002\n2031\u5e74\u5982\u679c(X=0)\u548c(Y&lt\uff1bP)\uff0c\u5219\u8f6c\u523030002032 IF(X=0)\u548c(Y&&gt;\uff1b(P+4))\uff0c\u7136\u540e\u8f6c\u523030003000 STOPRUN\u3002\n\u5f53\u7403\u5728\u7403\u62cd\u4e0b\u65b9\u6216\u4e0a\u65b9\u65f6\uff0c\u4ee3\u7801\u8df3\u8f6c\u52303000\u884c\uff0c\u8be5\u884c\u4f7f\u7528STOP\u547d\u4ee4\u7ec8\u6b62\u7a0b\u5e8f\u3002\u4e3a\u4e86\u8ba9\u6e38\u620f\u66f4\u597d\u770b\u4e00\u4e9b\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6f02\u4eae\u7684\u6e38\u620f\u7ed3\u675f\u6548\u679c\u6765\u4ee3\u66ff\u5b83\u3002\u5982\u679c\u4f60\u6b63\u5728\u8f93\u5165\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u6700\u540e\u8fd0\u884cGoTo 3000\uff0c\u5728\u4ee3\u7801\u4e0a\u53ea\u8c03\u8bd5\u6e38\u620f\uff0c\u800c\u4e0d\u5fc5\u73a9\u6e38\u620f\u3002\n3000REM\u6e38\u620fOVER3010\u6253\u5370\u514b\u6717$(147)\uff1b3020S=03030 S=S+13040\u6253\u5370\u6e38\u620f\u7ed3\u675f##34\uff1b3050\u5982\u679cS&lt\uff1b25\uff0c\u5219\u8f6c\u523030303060\u6253\u5370\u514b\u6717$(147)\u8fd0\u884c\u3002\n\u5c31\u662f\u8fd9\u6837\uff01\u5982\u679c\u60a8\u9075\u5faa\u4e86\u672c\u6587\u7684\u5404\u4e2a\u6b65\u9aa4\uff0c\u90a3\u4e48\u73b0\u5728\u60a8\u5df2\u7ecf\u7528\u4e0d\u523050\u884c\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684Breakout\u6e38\u620f\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u7684\u662f\u8ba9\u4f60\u4f53\u9a8c\u7f16\u7a0b\u8fc7\u7a0b\u7684\u611f\u89c9\uff0c\u4f46\u662f\u5982\u679c\u4f60\u8df3\u8fc7\u4e00\u4e9b\u90e8\u5206\uff0c\u4f60\u53ef\u80fd\u4f1a\u6b3a\u9a97\u5e76\u52a0\u8f7d\u4e0b\u9762\u7684\u6574\u4e2a\u6e38\u620f\u3002\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u4f7f\u7528Run\u8fd0\u884c\u5b83\uff0c\u6216\u4f7f\u7528List\u67e5\u770b\u5b8c\u6574\u4ee3\u7801\u3002\n\u6211\u5728\u5f00\u59cb\u8fd9\u7bc7\u6587\u7ae0\u65f6\u63d0\u51fa\uff0c\u6211\u4eec\u5982\u4f55\u4e0e\u7f16\u7a0b\u73af\u5883\u4ea4\u4e92\u6bd4\u4f7f\u7528\u7684\u8bed\u8a00\u66f4\u91cd\u8981\u3002\u8ba1\u7b97\u673a\u79d1\u5b66\u975e\u5e38\u64c5\u957f\u8c08\u8bba\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f46\u5b83\u4f20\u7edf\u4e0a\u5f88\u5c11\u8c08\u53ca\u4ea4\u4e92\u3002\n\u672c\u6587\u7684\u91cd\u70b9\u662f\u6307\u51fa\u4e0eCommodore 64 Basic\u4ea4\u4e92\u7684\u4e00\u4e9b\u6709\u8da3\u7684\u65b9\u9762\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u73af\u5883\uff0c\u4f46\u6709\u4e00\u4e9b\u5b9d\u8d35\u7684\u7ecf\u9a8c\u6559\u8bad\uff1a\n\u5f00\u59cb\u7f16\u7a0b\u5f88\u5bb9\u6613\u3002\u7cfb\u7edf\u5f15\u5bfc\u8fdb\u5165\u7f16\u7a0b\u73af\u5883\uff0c\u4f7f\u5176\u6210\u4e3a\u4e0e\u673a\u5668\u4ea4\u4e92\u7684\u4e3b\u8981\u65b9\u5f0f\u3002\u4ece\u78c1\u5e26\u52a0\u8f7d\u5e76\u8fd0\u884c\u6e38\u620f\u6d89\u53ca\u5230\u4e0e\u7f16\u7a0b\u76f8\u540c\u7684\u4ea4\u4e92\u3002\n\u8fd9\u5f88\u5bb9\u6613\u5b66\u3002\u8bb8\u591a\u7a0b\u5e8f\u5728\u7eb8\u8d28\u6742\u5fd7\u4e0a\u4ee5\u4ee3\u7801\u6e05\u5355\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u8fd9\u53ef\u80fd\u662f\u5076\u7136\u7684\u7f8e\u5fb7\uff0c\u4f46\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u5f88\u77ed\uff0c\u4f60\u53ef\u4ee5\u5728\u590d\u5236\u7684\u8fc7\u7a0b\u4e2d\u5b66\u4e60\u3002\n\u53ea\u6709\u4e00\u79cd\u4e92\u52a8\u3002\u60a8\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e2d\u952e\u5165\u547d\u4ee4\uff0c\u4f46\u8fd9\u65e2\u662f\u7acb\u5373\u8fd0\u884c\u547d\u4ee4\u7684\u4e00\u79cd\u65b9\u5f0f(REPL)\uff0c\u4e5f\u662f\u6784\u5efa\u7a0b\u5e8f(\u7f16\u8f91\u5668)\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\n\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u7b80\u5355\u800c\u7075\u6d3b\u7684\u5de5\u4f5c\u7a7a\u95f4\u3002\u6211\u4eec\u72ec\u7acb\u521b\u5efa\u4e86\u6e38\u620f\u7684\u4e24\u4e2a\u90e8\u5206\uff0c\u7136\u540e\u901a\u8fc7\u7f16\u8f91\u4e24\u4e2aGoTo\u5c06\u5b83\u4eec\u8fde\u63a5\u5728\u4e00\u8d77\u3002\u5b83\u4eec\u4e5f\u5f88\u5bb9\u6613\u72ec\u7acb\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728REPL\u6a21\u5f0f\u4e0b\u8bbe\u7f6e\u53d8\u91cf\uff0c\u5e76\u76f4\u63a5\u8df3\u5230\u4ee3\u7801\u4e2d\u95f4\u3002\n\u9ed1\u5ba2\u8bbf\u95ee\u989d\u5916\u529f\u80fd\u3002\u6211\u53ea\u662f\u90e8\u5206\u6f14\u793a\u4e86\u8fd9\u4e00\u70b9\uff0c\u4f46\u662fPOKE(\u548cSYS)\u8ba9\u60a8\u53ef\u4ee5\u8bbf\u95ee\u7cfb\u7edf\u7684\u8bb8\u591a\u989d\u5916\u529f\u80fd\u3002\u5e38\u89c1\u7684\u4e8b\u60c5\u5f88\u7b80\u5355\uff0c\u4f46\u597d\u5947\u7684\u9ed1\u5ba2\u4f1a\u5f97\u5230\u5956\u52b1\u3002\n\u6211\u5e76\u4e0d\u662f\u5efa\u8bae\u6211\u4eec\u6254\u6389\u4f7f\u7528Visual Studio Code\u7684\u6253\u5b57\u7a3f\u6216\u4f7f\u7528Eclipse\u7684Java\u6253\u5b57\u7a3f\uff0c\u800c\u662f\u56de\u5230Commodore 64\u548cBasic\u3002\u7136\u800c\uff0c\u73b0\u4ee3\u7f16\u7a0b\u73af\u5883\uff0c\u5373\u4f7f\u4f7f\u7528REPL\u6216\u5b9e\u65f6\u91cd\u8f7d\uff0c\u4e5f\u80af\u5b9a\u53ef\u4ee5\u5b66\u5230\u4e00\u4e9b\u6280\u5de7\u3002\n\u4e5f\u8bb8\u6700\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u8bed\u8a00\u5e94\u8be5\u4e0e\u7f16\u7a0b\u4ea4\u4e92\u4e00\u8d77\u8bbe\u8ba1\u3002\u4f8b\u5982\uff0cBASIC\u4e2d\u7684\u884c\u53f7\u4e0d\u4ec5\u4ec5\u662f\u7a77\u4eba\u7684\u5faa\u73af\u3002\u5b83\u4eec\u5141\u8bb8\u4e0e\u7cfb\u7edf\u8fdb\u884c\u8bb8\u591a\u6709\u8da3\u7684\u4ea4\u4e92\u3002\n\u672c\u6587\u8fd8\u8bd5\u56fe\u63d0\u51fa\u4e00\u4e2a\u65b9\u6cd5\u8bba\u89c2\u70b9\u3002\u4e00\u79cd\u5929\u771f\u7684\u89c2\u70b9\u8ba4\u4e3a\uff0c\u79d1\u5b66\u662f\u4e00\u9879\u8fdb\u6b65\u7684\u4e8b\u4e1a\uff0c\u662f\u4e00\u70b9\u4e00\u70b9\u5730\u9010\u6b65\u63d0\u9ad8\u6211\u4eec\u7684\u77e5\u8bc6\u3002\u6b63\u5982\u5386\u53f2\u5b66\u5bb6\u548c\u79d1\u5b66\u54f2\u5b66\u5bb6\u6307\u51fa\u7684\u90a3\u6837\uff0c\u5b9e\u9645\u7684\u79d1\u5b66\u8981\u590d\u6742\u5f97\u591a\u3002\n\u79d1\u5b66\u4e2d\u7684\u591a\u5143\u5316\u610f\u5473\u7740\u6709\u65f6\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u88ab\u63a5\u53d7\u4f46\u76f8\u4e92\u77db\u76fe\u7684\u7406\u8bba\uff0c\u8fd9\u4e9b\u7406\u8bba\u4ecd\u7136\u53ef\u4ee5\u6709\u6548\u5730\u4ea4\u6d41\u601d\u60f3\u3002\u79d1\u5b66\u9769\u547d\u610f\u5473\u7740\uff0c\u6709\u65f6\uff0c\u57fa\u672c\u5047\u8bbe\u7684\u9769\u547d\u6027\u8f6c\u53d8\u4f1a\u4f7f\u8fc7\u53bb\u7684\u77e5\u8bc6\u5931\u6548\u3002\n\u5c3d\u7ba1\u6211\u4eec\u6709\u65f6\u4e0d\u613f\u79f0\u8ba1\u7b97\u673a\u79d1\u5b66\u4e3a\u4e00\u95e8\u79d1\u5b66\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u76f8\u4fe1\u5176\u76f4\u622a\u4e86\u5f53\u7684\u8fdb\u6b65\u672c\u8d28\u8fd9\u4e00\u5929\u771f\u7684\u60f3\u6cd5\u3002\u8fd9\u79cd\u89c2\u70b9\u6697\u793a\uff0c\u6211\u4eec\u73b0\u5728\u7684\u77e5\u8bc6\u56ca\u62ec\u4e86\u8fc7\u53bb\u6240\u6709\u597d\u7684\u60f3\u6cd5\uff0c\u800c\u88ab\u9057\u5fd8\u7684\u60f3\u6cd5\u5219\u56e0\u4e3a\u5b83\u4eec\u6839\u672c\u5c31\u4e0d\u597d\u800c\u4e22\u5931\u4e86\u3002\u7269\u7406\u7b49\u79d1\u5b66\u5e76\u975e\u5982\u6b64\uff0c\u8ba1\u7b97\u673a\u79d1\u5b66\u66f4\u662f\u5982\u6b64\u3002\n\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u5982\u679c\u6211\u4eec\u627f\u8ba4\u8fc7\u53bb\u7684\u79d1\u5b66\u601d\u60f3\u53ef\u80fd\u6709\u67d0\u4e9b\u4e1c\u897f\u4e22\u5931\u4e86\uff0c\u90a3\u4e48\u5c31\u6709\u5fc5\u8981\u91cd\u5efa\u8fd9\u4e9b\u601d\u60f3\uff0c\u628a\u5b83\u4eec\u653e\u5728\u73b0\u4ee3\u7684\u80cc\u666f\u4e0b\uff0c\u770b\u770b\u5b83\u4eec\u5982\u4f55\u4e3a\u5f53\u524d\u7684\u53d1\u5c55\u505a\u51fa\u8d21\u732e\u3002\u79d1\u5b66\u53f2\u5b66\u5bb6\u5f20\u590f\u7855(Hasok Chang)\u79f0\u8fd9\u79cd\u65b9\u6cd5\u4e3a\u4e92\u8865\u79d1\u5b66\u3002\n\u4e92\u8865\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u6b63\u662f\u6211\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u60f3\u8981\u505a\u7684\u3002\u6211\u8ba4\u4e3a\uff0c\u5173\u4e8e\u5982\u4f55\u4e0e\u7f16\u7a0b\u73af\u5883\u4ea4\u4e92\u7684\u6709\u8da3\u60f3\u6cd5\u5df2\u7ecf\u4e22\u5931\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u7f16\u7a0b\u7814\u7a76\u53d8\u5f97\u5982\u6b64\u4e13\u6ce8\u4e8e\u8bed\u8a00(\u53ef\u80fd\u662f\u5728ALGOL\u7684\u5f71\u54cd\u4e0b)\u3002\u8fd9\u7bc7\u6587\u7ae0\u8bd5\u56fe\u91cd\u73b0\u4e00\u4e9b\u6709\u8da3\u7684\u8fc7\u53bb\u7684\u60f3\u6cd5\u3002\u6211\u9009\u62e9\u4ece\u51c6\u5c0664 Basic\u5f00\u59cb\u662f\u4e00\u4e2a\u76f8\u5f53\u52a1\u5b9e\u7684\u9009\u62e9\u3002\u8fc7\u53bb\u8fd8\u6709\u66f4\u6709\u8da3\u7684\u7f16\u7a0b\u7cfb\u7edf\uff0c\u4f46\u8fd9\u4e00\u4e2a\u76f8\u5bf9\u5bb9\u6613\u91cd\u73b0\u3002\n\u8c08\u8bba\u7f16\u7a0b\u4ea4\u4e92\u4e5f\u6bd4\u8c08\u8bba\u7f16\u7a0b\u8bed\u8a00\u66f4\u96be\uff0c\u56e0\u4e3a\u4e00\u79cd\u8bed\u8a00\u5f88\u5bb9\u6613\u5728\u7eb8\u8d28\u62a5\u7eb8\u4e0a\u8fdb\u884c\u6b63\u5f0f\u63cf\u8ff0\u3002\u8981\u7406\u89e3\u4e92\u52a8\uff0c\u4f60\u9700\u8981\u4f53\u9a8c\u5b83\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u7bc7\u6587\u7ae0\u662f\u4ea4\u4e92\u5f0f\u7684\uff0c\u4e5f\u662f\u6211\u9f13\u52b1\u8bfb\u8005\u73a9\u5f04\u73af\u5883\u7684\u539f\u56e0\uff0c\u81f3\u5c11\u662f\u901a\u8fc7\u590d\u5236\u4e00\u4e9b\u4ee3\u7801\u6765\u5b9e\u73b0\u7684\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6539\u53d8\u6211\u4eec\u8c08\u8bba\u7684\u5185\u5bb9\u548c\u8c08\u8bba\u5b83\u7684\u65b9\u5f0f\uff0c\u56e0\u4e3a\u5a92\u4ecb\u5c31\u662f\u4fe1\u606f\u3002", "note_en": "In this interactive article, we will build a breakout game using Commodore 64 BASIC in the browser. This is a fun programming hack, but it has quite profound theoretical background. Let me explain.\n  I believe that  how we interact with a programming environment when programming is more important than the specific programming language that we are using.\n  This has never been widely studied and we have interesting things to learn from past systems, including Commodore 64 BASIC.\n  We should look at the history and recreate past programming experiences in order to learn from them, following a method that a historian of science, Hasok Chang, calls  complemetary science.\n  Reading about interactions is not enough. To get a sense of how the interaction worked, you need to experience it yourself, at least in a limited form. This is best done with an interactive article.\n  This is an interactive article that documents some of the interesting aspects of programming Commodore 64 BASIC. I&#39;m not trying to create an accurate Commodore 64 simulator though. The point is to show a few things that we can learn from for future programming systems.\n  We will start with a Hello World example to see how things work and then we&#39;ll build a small Breakout game. This illustrates how easy it is to get started, how the environment supports learning and how the Commmodore 64 BASIC mode of interaction lets us gradually build a program in a way that is quite different from modern programming environments.\n        When Commodore 64 starts, a welcome screen from BASIC awaits you. Even if you want to use it to just play games, you start with a programming environment. This tells you that you too can become a programmer and you certainly do not need to download gigabytes of tools and wait hours for your XCode or Visual Studio to install.\n  Let&#39;s follow the tradition and tell BASIC to say hello world for us. To do this, type the following command, or if you are lazy, just click the button.\n       To a modern programmer, it is amazing how little it takes to get from booting the machine to printing hello world. Not only you start in the programming environment but you also do not need to write any classes, static methods and compile the program.\n  The obvious next thing is to print hello world in an infinite loop. Previously, we entered a single command and BASIC executed it, but now we need to create a program. To do this, we prefix code with line numbers:\n    This is again ingenious. BASIC keeps a list of lines of your program and when you type a line starting with number, it inserts it into the right location. You can use the same prompt for running commands and editing your program. To run the program now, just type RUN:\n       If you run a program with an infinite loop like this one, you can stop it using Ctrl+C or Command+C. If you want to see the program that you entered, you can type the LIST command.\n          There is a lot of clever hacks that you can do in BASIC with a few lines of code. This ease of getting started contributes to what makes it a fun programming environment. If you found an interesting hack in a computer magazine, you could type it into the console and run it straight away.\n  The fact that you had to copy code from a paper magazine sounds like a hassle, but it has an educational quality. It keeps the samples that can be distributed in this way reasonably small and it makes you think about the code as you are typing it.\n  To experience this yourself, you should try typing the following three-line program to the console! It generates a famous maze. This relies on special Commodore character codes: 147 clears the screen, 205 and 206 are backslash and slash crossing the full character size.\n            To build our Breakout game, we can proceed gradually. This is yet another nice feature of the programming environment. We want to create a ball that bounces off the wall, but let&#39;s start with a ball that just moves to the right.\n  We will do only a tiny bit of planning. Code that initializes variables with the game state starts at line 1000 and code that handles ball movement will start at 2000. We will also first clear the screen and use DELETE to remove all the previous maze and Hello World code.\n  PRINT CHR$(147);DELETE 1000 REM STATE INITIALIZATION 1010 X=02000 REM BALL MOVEMENT2010 POKE X CHR$(32)2020 X=X+12030 POKE X CHR$(209)2040 GOTO 2000RUN\n  To draw a ball at a specific location, we use POKE which writes a value to a memory location. Here, the part of memory representing a screen starts at offset 0. We first erase the previous ball using a space (character code 32) and then draw a ball (character code 209).\n          To make the ball bounce off the walls, we need to check when it gets to the side of the screen and reverse the direction in which it moves. To do this, we need to keep more state. We were using the varibale X to keep the X coordinate. Now we add Y for the Y coordinate and also DX, DY for the direction (+1 or -1). To see our code clearly, let&#39;s first clear the screen and LIST our current code.\n    We immediately follow the edits in initialization code with edits in the ball movement code, starting at line 2000, to check for collisions with the left side and the right side of the screen:\n 2010 POKE ((Y*40)+X) CHR$(32)2020 X=X+DX2030 Y=Y+DY2040 IF X=40 THEN DX=-12050 IF X=40 THEN X=382060 IF X&lt;0 THEN DX=12070 IF X&lt;0 THEN X=12200 POKE ((Y*40)+X) CHR$(209)2210 GOTO 2000RUN\n        We knew that we will need to add checks for the top and the bottom side, so we left some empty lines. The checking code ends at 2070 and ball drawing is on line 2200. We just need to inser the remaining checks:\n  2080 IF Y=25 THEN DY=-12090 IF Y=25 THEN Y=232100 IF Y&lt;0 THEN DY=12110 IF Y&lt;0 THEN Y=2RUN\n        Why is the ball still moving just from left to right and back? We added the checking code, but forgot to change DY. This is easy to fix:\n          This is what we wanted, a ball that bounces off the walls! But let me reflect on how we created the program. We started with a moving ball and then added bouncing in two steps. The programming model of Commodore 64 BASIC makes this very easy.\n  This relies on two things. First, as the code is a simple imperative list of commands, the addressing (using line numbers) makes editing the program much easier than if it consisted of complex composed expressions. We had to be clever about line numbers to have space for inserting code, but this is a small price to pay. Second, the dual use of the console, as both an editor and a REPL, means that the interaction is kept quite simple.\n  There is even more to the console. You can use it to run one off tests, like  PRINT (Y*40)+X to test your calculation. You can also modify the state directly and then jump into the middle of a program. For example, we can move the ball to the right bottom corner and let the program run from there by jumping over the initialization code:\n            Before we can turn the program into an actual game, we need to figure out how to handle input from keyboard. If you have a string variable  K$, you can use  GET$ K$ to read a key from a buffer. This will return an empty string if there is no key in the buffer, so we need to write a loop waiting for a key. We can do this on lines 10-50, before the start of our actual program:\n       After printing the PETSCII code of the character, we explicitly stop the program, so that it does not continue into our ball bouncing code. Try running the program now using the  RUN command repeatedly to get key codes for up and down arrows! The interpreter does not support all keys, but it handles arrows, space and alphanumeric characters.\n  We will need the key code for the up key (145) and the down key (17). Now that we know this, we can delete our test code:\n         Now that we figured out how to handle input, we can add a paddle to our game. It will be on the left side of the screen and will move using up and down keys. We can write the code independently of all that we have written so far, adding a line 1050 to the initialization code and starting the paddle moving code at 2500.\n  The logic is quite simple. We read a key and get its code. If the key is up or down, we increment or decrement the position of the paddle. We then draw the paddle using  POKE, also drawing a space before and after to erase a previous state. The emulator does not support  FOR loops, so we just draw 5 vertical bar characters one after the other.\n  1050 P=102500 REM MOVING A PADDLE 2510 K$=&#34;&#34;2520 K=02530 GET$ K$2540 IF K$&lt;&gt;&#34;&#34; THEN K=ASC(K$)2550 IF K=145 THEN P=P-12560 IF K=17 THEN P=P+12570 POKE ((P-1)*40) CHR$(32)2571 POKE ((P+0)*40) CHR$(182)2572 POKE ((P+1)*40) CHR$(182)2573 POKE ((P+2)*40) CHR$(182)2574 POKE ((P+3)*40) CHR$(182)2575 POKE ((P+4)*40) CHR$(182)2576 POKE ((P+5)*40) CHR$(32)2580 GOTO 2500\n  You can run this regardless of whether you followed the previous sections. If you did, typing  RUN would start the bouncing ball, so instead, we initialize P manually and jump directly to the paddle handling code.\n         To get something running as soon as possible, we did not add any checks to make sure that the paddle does not run outside of the screen. If this happens, the program right now stops and you need to kill it using Ctrl+C. To fix this, we need to draw spaces around the paddle only when it is not at the start/end and ensure that P is between 0 and 20. We were wise enough to use multiples of 10 as our line numbers, so we have space to insert this code between 2560 and 2570.\n  2570 IF P&gt;0 THEN POKE ((P-1)*40) CHR$(32)2576 IF P&lt;20 THEN POKE ((P+5)*40) CHR$(32)2561 IF P&gt;0 THEN P=02562 IF P&lt;20 THEN P=20GOTO 2500\n          We built two parts of the game largely independently. The code for the bouncing ball is between lines 2000 and 2500 and we can start it by typing  RUN or  GOTO 2000. The code for the paddle starts after that and we can run it using  GOTO 2500. The last step is to connect the two parts! If you skipped a part of the tutorial, the following lets you reload all the code.\n     The whole code is now too long to fit on a screen when you run  LIST. If you want to see it, you need to run  LIST -2500 to see everything before line 2500 or  LIST 2500- to see everything after.\n  To link the two parts, we need to make a couple of edits. First, we&#39;ll clear the screen at the end of the initialization code and update the bouncing so that the ball keeps on the right of the paddle. Second, we&#39;ll connect the two parts. To do this, we merge the two loops by removing  GOTO 2000 from the end of the ball movement code. We&#39;ll jump to line 2000 only after also updating the paddle on line 2580.\n          This looks like a game, but we are missing one last crucial bit. We need to add a check to detect when the ball does not hit the paddle while bouncing off the left side of the screen. We insert this between lines 2030 and 2040, i.e just after we update the ball location.\n  2031 IF (X=0) AND (Y&lt;P) THEN GOTO 30002032 IF (X=0) AND (Y&gt;(P+4)) THEN GOTO 30003000 STOPRUN\n        When the ball is below or above the paddle, the code jumps to line 3000 which uses the  STOP command to terminate the program. To make the game a bit nicer, we replace this with a nice GAME OVER effect. If you are typing this, you can also run  GOTO 3000 at the end to debug just the game over code, without having to play the game.\n  3000 REM GAME OVER3010 PRINT CHR$(147);3020 S=03030 S=S+13040 PRINT &#34; GAME OVER&#34;3050 IF S&lt;25 THEN GOTO 30303060 PRINT CHR$(147)RUN\n          That&#39;s it! If you followed the individual steps of the article, you now created a simple Breakout game in a bit less than 50 lines of code. The point of the article was to let you experience how the process of programming feels, but if you skipped over some parts, you can cheat and load the whole game below. After doing this, use  RUN to run it or  LIST to see the full code.\n        I started this article by suggesting that  how we interact with a programming environment is more important than the language that is used. Computer science is very good for talking about programming languages, but it has traditionally said little about interacting.\n  The point of this article is to point out some of the interesting aspects of interacting with Commodore 64 BASIC. This is a very simple environment, but there are some valuable lessons:\n  It is easy to start programming. The system boots into a programming environment, making that the primary way of interacting with the machine. Loading a game from a tape and running it involves the same kind of interactions as programming.\n  It is easy to learn. The fact that many programs were available as code listings in paper magazines may be an accidental virtue, but it means that they are short and that you learn as you copy them.\n  There is just one kind of interaction. You type commands into a console, but this works both as a way of running commands immediately (REPL) and as a way of constructing a program (editor).\n  You get a simple yet flexible workspace. We created two parts of the game independently and then connected them by editing two GOTOs. They are also easy to test independently, because we can set variables in the REPL mode and jump direclty into the middle of our code.\n  Hacker access to extra features. I only partly demonstrated this, but  POKE (and  SYS) give you access to many extra features of the system. The common things are simple, but curious hackers get a reward.\n  I&#39;m not suggesting we should throw away our TypeScript with Visual Studio Code or Java with Eclipse and go back to Commodore 64 and BASIC. However, modern programming environments, even with REPL or live reloading, can certainly learn a few tricks.\n  Perhaps the most important point is that the language should be co-designed with the programming interactions. For example, line numbers in BASIC are not just poor man&#39;s loops. They enable many of the interesting interactions with the system.\n    This article also tries to make a methodological point. A naive view of science is that it is a progressive enterprise that gradually improves our knowledge bit by bit. As historians and philosophers of science pointed out, actual science is much more complicated.\n  Pluralism in science means that there can sometimes be multiple accepted, but mutually inconsistent theories, which can still productively exchange ideas. Scientific revolutions mean that sometimes, revolutionary shift in the basic assumptions invalidates past knowledge.\n  Although we are sometimes reluctant to call computer science a science, we nevertheless believe in the naive idea of its straightforward progressive nature. This view implies that our present knowledge encompasses all the good ideas from the past and forgotten ideas were lost because they were simply not good. This is not true for sciences like physics and much less so for computer science.\n  What does this mean? If we accept that there might be something to past scientific ideas that were lost, it becomes worthwhile to reconstruct those ideas, bring them into a modern context and see how they can contribute to current developments. Historian of science, Hasok Chang, calls this approach  complementary science.\n  Complementary computer science is exactly what I tried to do in this article. I believe that interesting ideas on how to interact with a programming environment have been lost, largely because programming research became so focused on  languages (possibly under the influence of Algol). This article is an attempt to recreate some of the interesting past ideas. My choice of starting with Commodore 64 BASIC is a fairly pragmatic one. There are more interesting past programming systems, but this one was relatively easy to recreate.\n  Talking about programming interactions is also harder than talking about programming languages, because a language can easily be described formally in a printed paper. To make sense of an interaction, you need to experience it. This is why this article is interactive and why I encourage the reader to play with the environment, at least by copying some of the code.\n  In other words, we need to change both what we talk about and how we talk about it, because  the medium is the message.", "posttime": "2020-11-07 11:19:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u7a0b,programming,ways,\u4ee3\u7801", "title": "\u8ff7\u5931\u7684\u7f16\u7a0b\u65b9\u6cd5\uff1aCommodore 64 Basic", "title_en": "The Lost Ways of Programming: Commodore 64 Basic", "transed": 1, "url": "http://tomasp.net/commodore64/", "via": "", "real_tags": ["\u7f16\u7a0b", "ways", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "533a24c43b1b8f013a37d686acc45575.jpg", "infoid": 1033631, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u7b2c\u4e00\u7bc7\u6587\u7ae0\u4e2d\u5b9a\u4e49cgroup\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u5e2e\u52a9\u8fdb\u884c\u8d44\u6e90\u7ba1\u7406\u548c\u6027\u80fd\u8c03\u4f18\uff0c\u8fd9\u662f\u4ecb\u7ecdcgroup\u548c\u8d44\u6e90\u7ba1\u7406\u7684\u7531\u56db\u90e8\u5206\u7ec4\u6210\u7684\u7cfb\u5217\u6587\u7ae0\u7684\u5f00\u59cb\u3002\n\u6240\u4ee5\u4f60\u4e00\u5b9a\u542c\u8bf4\u8fc7\u8fd9\u79cd\u53ebcgroup\u7684\u4e1c\u897f\uff0c\u800c\u4e14\u4f60\u6709\u5174\u8da3\u4e86\u89e3\u66f4\u591a\u3002\u4e5f\u8bb8\u4f60\u662f\u5728\u542c\u4e00\u4e2a\u5173\u4e8e\u96c6\u88c5\u7bb1\u5316\u7684\u6f14\u8bb2\u65f6\u542c\u5230\u6709\u4eba\u63d0\u5230\u5b83\u7684\u3002\u4e5f\u8bb8\u60a8\u6b63\u5728\u7814\u7a76Linux\u6027\u80fd\u8c03\u4f18\uff0c\u6216\u8005\u60a8\u53ea\u662f\u78b0\u5de7\u5728\u67d0\u4e00\u5929\u904d\u5386\u6587\u4ef6\u7cfb\u7edf\u65f6\u53d1\u73b0\u4e86/sys/fs/cgroup\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u60a8\u90fd\u60f3\u66f4\u591a\u5730\u4e86\u89e3\u5185\u6838\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u7684\u8fd9\u4e00\u529f\u80fd\u3002\u6240\u4ee5\uff0c\u5750\u4e0b\u6765\uff0c\u62ff\u70b9\u7206\u7c73\u82b1\uff0c\u51c6\u5907(\u5e0c\u671b)\u5b66\u5230\u4e00\u4e9b\u4f60\u4ee5\u524d\u53ef\u80fd\u4e0d\u77e5\u9053\u7684\u4e1c\u897f\u3002\n\u97e6\u4f2f\u65af\u7279\u8bcd\u5178\u5c06\u7fa4\u7ec4\u5b9a\u4e49\u4e3a\u2026\u2026\u3002\u5f00\u4e2a\u73a9\u7b11\u3002\u6211\u603b\u662f\u8ba8\u538c\u542c\u90a3\u4e9b\u4ece\u65e0\u804a\u7684\u5b57\u5178\u5b9a\u4e49\u5f00\u59cb\u7684\u6f14\u8bb2\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u5c06\u5c1d\u8bd5\u5c06cgroup\u7684\u6280\u672f\u5b9a\u4e49\u63d0\u70bc\u6210\u4e00\u4e9b\u6613\u4e8e\u7406\u89e3\u7684\u4e1c\u897f\u3002\nCgroup\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u8bdd\u9898\u3002\u6211\u628a\u8fd9\u4e2a\u8ba8\u8bba\u5206\u6210\u56db\u4e2a\u90e8\u5206\u3002\u7b2c\u4e00\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6db5\u76d6\u4e86\u7fa4\u7ec4\u7684\u57fa\u672c\u6982\u5ff5\u3002\u7b2c\u4e8c\u90e8\u5206\u66f4\u6df1\u5165\u5730\u7814\u7a76\u4e86CPUShare\u3002\u7b2c\u4e09\u90e8\u5206\u540d\u4e3a\u300a\u8270\u96be\u5730\u505acgroup\u300b\uff0c\u4ecb\u7ecd\u4e86cgroup\u7684\u7ba1\u7406\u4efb\u52a1\u3002\u6700\u540e\uff0c\u7b2c\u56db\u90e8\u5206\u4ecb\u7ecd\u4e86\u7531systemd\u7ba1\u7406\u7684cgroup\u3002\n\u60a8\u53ef\u80fd\u77e5\u9053\uff0c\u4e5f\u53ef\u80fd\u4e0d\u77e5\u9053\uff0cLinux\u5185\u6838\u8d1f\u8d23\u7cfb\u7edf\u4e0a\u6240\u6709\u786c\u4ef6\u7684\u53ef\u9760\u4ea4\u4e92\u3002\u8fd9\u610f\u5473\u7740\uff0c\u9664\u4e86\u4f7f\u64cd\u4f5c\u7cfb\u7edf(OS)\u80fd\u591f\u7406\u89e3\u786c\u4ef6\u7684\u4ee3\u7801(\u9a71\u52a8\u7a0b\u5e8f)\u4f4d\u4e4b\u5916\uff0c\u5b83\u8fd8\u5bf9\u7279\u5b9a\u7a0b\u5e8f\u53ef\u4ee5\u4ece\u7cfb\u7edf\u8981\u6c42\u7684\u8d44\u6e90\u6570\u91cf\u8bbe\u7f6e\u4e86\u9650\u5236\u3002\u5f53\u8c08\u5230\u7cfb\u7edf\u5fc5\u987b\u5728\u8ba1\u7b97\u673a\u53ef\u80fd\u6267\u884c\u7684\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u5212\u5206\u7684\u5185\u5b58\u91cf(RAM)\u65f6\uff0c\u8fd9\u662f\u6700\u5bb9\u6613\u7406\u89e3\u7684\u3002\u5728\u5176\u6700\u57fa\u672c\u7684\u5f62\u5f0f\u4e2d\uff0cLinux\u7cfb\u7edf\u88ab\u5141\u8bb8\u4e0d\u53d7\u9650\u5236\u5730\u8fd0\u884c\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u90fd\u80fd\u5f88\u597d\u5730\u534f\u540c\u5de5\u4f5c\uff0c\u8fd9\u5bf9\u4e8e\u4e00\u822c\u8ba1\u7b97\u6765\u8bf4\u662f\u975e\u5e38\u597d\u7684\u3002\u4f46\u662f\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\u5b58\u5728\u9519\u8bef\uff0c\u5e76\u4e14\u5f00\u59cb\u6d88\u8017\u6240\u6709\u53ef\u7528\u5185\u5b58\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u5185\u6838\u6709\u4e00\u4e2a\u540d\u4e3a\u5185\u5b58\u4e0d\u8db3(OOM)\u6740\u624b\u7684\u5de5\u5177\u3002\u5b83\u7684\u5de5\u4f5c\u662f\u6682\u505c\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4fbf\u91ca\u653e\u8db3\u591f\u7684RAM\uff0c\u4ee5\u4fbf\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u7ee7\u7eed\u8fd0\u884c\u800c\u4e0d\u4f1a\u5d29\u6e83\u3002\n\u4f60\u4f1a\u8bf4\uff0c\u8fd9\u592a\u68d2\u4e86\uff0c\u4f46\u8fd9\u548cCgroup\u6709\u4ec0\u4e48\u5173\u7cfb\u5462\uff1f\u5728\u4f60\u7684\u7cfb\u7edf\u5d29\u6e83\u4e4b\u524d\uff0cOOM\u8fc7\u7a0b\u5c31\u50cf\u662f\u6700\u540e\u4e00\u9053\u9632\u7ebf\u3002\u5b83\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u6709\u7528\u7684\uff0c\u4f46\u7531\u4e8e\u5185\u6838\u53ef\u4ee5\u63a7\u5236\u54ea\u4e9b\u8fdb\u7a0b\u5fc5\u987b\u5728OOM\u4e2d\u5b58\u6d3b\u4e0b\u6765\uff0c\u5b83\u8fd8\u53ef\u4ee5\u786e\u5b9a\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e00\u5f00\u59cb\u5c31\u4e0d\u80fd\u6d88\u8017\u592a\u591aRAM\u3002\n\u56e0\u6b64\uff0cCgroup\u662f\u5185\u6838\u4e2d\u5185\u7f6e\u7684\u5de5\u5177\uff0c\u5141\u8bb8\u7ba1\u7406\u5458\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4efb\u4f55\u8fdb\u7a0b\u8bbe\u7f6e\u8d44\u6e90\u5229\u7528\u7387\u9650\u5236\u3002\u4e00\u822c\u800c\u8a00\uff0ccgroup\u63a7\u5236\uff1a\n\u8fd9\u4e9b\u7f51\u7edc\u5206\u7ec4\u88ab\u6807\u8bc6\u4e3a\u76f8\u540c\u7c7b\u578b\uff0c\u4ee5\u4fbf\u53e6\u4e00\u5e94\u7528\u53ef\u4ee5\u5b9e\u65bd\u7f51\u7edc\u6d41\u91cf\u89c4\u5219\u3002\n\u9664\u4e86\u8fd9\u4e9b\uff0c\u8fd8\u6709\u66f4\u591a\u65b9\u9762\uff0c\u4f46\u8fd9\u4e9b\u662f\u5927\u591a\u6570\u7ba1\u7406\u5458\u5173\u5fc3\u7684\u4e3b\u8981\u7c7b\u522b\u3002\n\u63a7\u5236\u7ec4(Cgroup)\u662f\u4e00\u79cdLinux\u5185\u6838\u673a\u5236\uff0c\u7528\u4e8e\u5bf9\u8d44\u6e90\u8fdb\u884c\u7ec6\u7c92\u5ea6\u63a7\u5236\u3002Cgroup\u6700\u521d\u662f\u7531\u8c37\u6b4c\u5de5\u7a0b\u5e08\u57282006\u5e74\u63d0\u51fa\u7684\uff0c\u5927\u7ea6\u57282007\u5e74\u5de6\u53f3\u6700\u7ec8\u5e76\u5165\u4e86Linux\u5185\u6838\u3002\u867d\u7136\u76ee\u524d\u6709\u4e24\u4e2a\u7248\u672c\u7684cgroup\uff0c\u4f46\u5927\u591a\u6570\u53d1\u884c\u7248\u548c\u673a\u5236\u90fd\u4f7f\u7528\u7248\u672c1\uff0c\u56e0\u4e3a\u5b83\u4ece2.6.24\u5f00\u59cb\u5c31\u5728\u5185\u6838\u4e2d\u3002\u5c31\u50cf\u4e3b\u7ebf\u5185\u6838\u4e2d\u6dfb\u52a0\u7684\u5927\u591a\u6570\u4e1c\u897f\u4e00\u6837\uff0c\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u5f88\u9ad8\u7684\u91c7\u7528\u7387\u3002\u7248\u672c2\u5ef6\u7eed\u4e86\u8fd9\u4e00\u8d8b\u52bf\uff0c\u5df2\u7ecf\u5b58\u5728\u4e86\u8fd1\u4e94\u5e74\uff0c\u4f46\u4ecd\u672a\u5f97\u5230\u5e7f\u6cdb\u90e8\u7f72\u3002\n\u56f0\u6270cgroup\u91c7\u7528\u7684\u4e00\u4e2a\u95ee\u9898\u662f\u5bf9\u5b83\u7684\u5b58\u5728\u53ca\u5176\u5728\u73b0\u4ee3Linux\u7cfb\u7edf\u4e2d\u7684\u4f5c\u7528\u7f3a\u4e4f\u4e86\u89e3\u3002\u4f4e\u610f\u8bc6\u548c\u4f4e\u91c7\u7528\u7387\u901a\u5e38\u610f\u5473\u7740\u4e0e\u5185\u6838\u63a5\u53e3\u7684\u4ea4\u4e92\u662f\u7b28\u91cd\u7684\u3001\u4ee4\u4eba\u8d39\u89e3\u7684\uff0c\u6216\u8005\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5b8c\u5168\u624b\u52a8\u7684\u8fc7\u7a0b\u3002\u6700\u521d\uff0ccgroup\u5c31\u662f\u8fd9\u6837\u7684\u60c5\u51b5\u3002\u5f53\u7136\uff0c\u521b\u5efa\u4e00\u6b21\u6027\u56e2\u4f53\u5e76\u4e0d\u96be\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8981\u6a21\u62dfcgroup\u5de5\u5177\u5f00\u53d1\u4e4b\u524d\u7684\u65e9\u671f\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u7ec4\u76ee\u5f55\uff0c\u6302\u8f7dcgroup\u6587\u4ef6\u7cfb\u7edf\uff0c\u7136\u540e\u5f00\u59cb\u624b\u52a8\u914d\u7f6e\u6240\u6709\u5185\u5bb9\u3002\u4f46\u5728\u6211\u4eec\u5f00\u59cb\u8ba8\u8bba\u8fd9\u4e00\u5207\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u6765\u8c08\u8c08\u4e3a\u4ec0\u4e48Cgroup\u5728\u5f53\u4eca\u7684Linux\u751f\u6001\u7cfb\u7edf\u4e2d\u81f3\u5173\u91cd\u8981\u3002\nCgroup\u6709\u56db\u4e2a\u5f7c\u6b64\u5bc6\u5207\u76f8\u5173\u7684\u4e3b\u8981\u7279\u6027\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u5728\u73b0\u4ee3\u7cfb\u7edf\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u7279\u522b\u662f\u5f53\u60a8\u8fd0\u884c\u7684\u662f\u96c6\u88c5\u7bb1\u5316\u7684\u5de5\u4f5c\u8d1f\u8f7d\u65f6\u3002\n\u5982\u524d\u6240\u8ff0\uff0ccgroup\u5141\u8bb8\u7ba1\u7406\u5458\u786e\u4fdd\u7cfb\u7edf\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\u4fdd\u6301\u5728CPU\u3001RAM\u3001\u5757\u8bbe\u5907I/O\u548c\u8bbe\u5907\u7ec4\u7684\u67d0\u4e9b\u53ef\u63a5\u53d7\u8fb9\u754c\u5185\u3002\n\u6ce8\u610f\uff1a\u8bbe\u5907\u7ec4cgroup\u53ef\u80fd\u662f\u7cfb\u7edf\u5168\u9762\u5b89\u5168\u7b56\u7565\u4e2d\u7684\u5173\u952e\u7ec4\u4ef6\u3002\u8bbe\u5907\u7ec4\u5305\u62ec\u63a7\u5236\u8bfb\u53d6\u3001\u5199\u5165\u548cmKNOD\u64cd\u4f5c\u7684\u6743\u9650\u3002\u8bfb/\u5199\u64cd\u4f5c\u975e\u5e38\u7b80\u5355\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u82b1\u70b9\u65f6\u95f4\u6765\u770b\u770bLinux\u7cfb\u7edf\u4e2d\u7684mnowd\u529f\u80fd\u3002Mnowd\u6700\u521d\u7684\u8bbe\u8ba1\u76ee\u7684\u662f\u586b\u5145/dev/\u4e2d\u663e\u793a\u7684\u6240\u6709\u5185\u5bb9\u3002\u8fd9\u4e9b\u8bbe\u5907\u5305\u62ec\u786c\u76d8\u9a71\u52a8\u5668\u3001Arduino\u3001ESP8266\u5fae\u63a7\u5236\u5668\u7b49\u8bbe\u5907\u7684USB\u63a5\u53e3\uff0c\u6216\u8005\u7cfb\u7edf\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u5176\u4ed6\u8bbe\u5907\u3002\u5927\u591a\u6570\u73b0\u4ee3Linux\u7cfb\u7edf\u4f7f\u7528udev\u6765\u7528\u5185\u6838\u68c0\u6d4b\u5230\u7684\u4e1c\u897f\u81ea\u52a8\u586b\u5145\u8fd9\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u3002\u6b64\u5916\uff0c\u901a\u8fc7\u521b\u5efa\u547d\u540d\u7ba1\u9053\uff0cumnowd\u8fd8\u5141\u8bb8\u591a\u4e2a\u7a0b\u5e8f\u76f8\u4e92\u901a\u4fe1\u3002\u8fd9\u4e2a\u6982\u5ff5\u8d85\u51fa\u4e86\u672c\u89e3\u91ca\u7684\u8303\u56f4\uff0c\u4f46\u53ea\u8981\u7406\u89e3\u8fd9\u4e00\u70b9\u5c31\u8db3\u591f\u4e86\uff0c\u8fd9\u6709\u52a9\u4e8e\u5c06\u4fe1\u606f\u4ece\u4e00\u4e2a\u7a0b\u5e8f\u4f20\u9012\u5230\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u5728\u53d7\u63a7\u73af\u5883\u4e2d\u7684mculd\u662f\u7ba1\u7406\u5458\u5e94\u8be5\u5bc6\u5207\u5173\u6ce8\u7684\u9650\u5236\u3002\n\u4f18\u5148\u5316\u4e0e\u8d44\u6e90\u9650\u5236\u7565\u6709\u4e0d\u540c\uff0c\u56e0\u4e3a\u60a8\u4e0d\u4e00\u5b9a\u8981\u9650\u5236\u8fdb\u7a0b\u3002\u76f8\u53cd\uff0c\u60a8\u53ea\u662f\u8bf4\u65e0\u8bba\u6709\u591a\u5c11\u8d44\u6e90\u53ef\u7528\uff0c\u8fdb\u7a0bX\u5728\u7cfb\u7edf\u4e0a\u7684\u65f6\u95f4\u603b\u662f\u6bd4\u8fdb\u7a0bY\u591a\u3002\n\u7531\u4e8e\u989d\u5916\u7684\u8d44\u6e90\u5229\u7528\uff0c\u5bf9\u4e8e\u5927\u591a\u6570Linux\u4f01\u4e1a\u7248\u672c\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5173\u95ed\u8bb0\u5e10\uff0c\u4f46\u4e3a\u7279\u5b9a\u7684\u6811\u6253\u5f00\u8d44\u6e90\u5229\u7528\u771f\u7684\u5f88\u6709\u5e2e\u52a9(\u7a0d\u540e\u5c06\u5bf9\u6b64\u8fdb\u884c\u66f4\u591a\u4ecb\u7ecd)\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u54ea\u4e2acgroup\u4e2d\u7684\u54ea\u4e9b\u8fdb\u7a0b\u6b63\u5728\u6d88\u8017\u54ea\u4e9b\u7c7b\u578b\u6216\u8d44\u6e90\u3002\n\u5728\u7fa4\u7ec4\u91cc\u6709\u4e00\u5bb6\u53eb\u505a\u51b0\u67dc\u7684\u8bbe\u65bd\u3002\u867d\u7136\u5bf9\u6b64\u529f\u80fd\u7684\u6df1\u5165\u7406\u89e3\u8d85\u51fa\u4e86\u672c\u6587\u7684\u8303\u56f4\uff0c\u4f46\u60a8\u53ef\u4ee5\u5c06Freezer\u770b\u4f5c\u662f\u62cd\u6444\u7279\u5b9a\u8fdb\u7a0b\u7684\u5feb\u7167\u5e76\u79fb\u52a8\u5b83\u7684\u80fd\u529b\u3002\u6709\u5173\u66f4\u6df1\u5165\u7684\u7406\u89e3\uff0c\u8bf7\u53c2\u9605\u5185\u6838\u6587\u6863\u3002\n\u597d\u5427\uff0c\u90a3\u4e48\u8fd9\u4e00\u5207\u610f\u5473\u7740\u4ec0\u4e48\u5462\uff1f\u55ef\uff0c\u4ece\u7cfb\u7edf\u7ba1\u7406\u5458\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u610f\u5473\u7740\u51e0\u4ef6\u4e8b\u3002\n\u9996\u5148\uff0c\u5373\u4f7f\u4e0d\u6df1\u5165\u7814\u7a76\u5bb9\u5668\u6280\u672f\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ed4\u7ec6\u7ba1\u7406\u5de5\u4f5c\u8d1f\u8f7d\u7c7b\u578b\u3001\u5e94\u7528\u7a0b\u5e8f\u548c\u5b83\u4eec\u6240\u9700\u7684\u8d44\u6e90\uff0c\u5728\u5355\u4e2a\u670d\u52a1\u5668\u4e0a\u5b9e\u73b0\u66f4\u9ad8\u7684\u5bc6\u5ea6\u3002\n\u5176\u6b21\uff0c\u5b83\u5927\u5927\u589e\u5f3a\u4e86\u4f60\u7684\u5b89\u5168\u59ff\u6001\u3002\u867d\u7136\u5178\u578b\u7684Linux\u5b89\u88c5\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528cgroup\uff0c\u4f46\u5b83\u4e0d\u4f1a\u5bf9\u8fdb\u7a0b\u65bd\u52a0\u4efb\u4f55\u9650\u5236\u3002\u5982\u679c\u60a8\u613f\u610f\uff0c\u60a8\u53ef\u4ee5\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65bd\u52a0\u9650\u5236\u3002\u60a8\u8fd8\u53ef\u4ee5\u9650\u5236\u7279\u5b9a\u7528\u6237\u3001\u7ec4\u6216\u8fdb\u7a0b\u5bf9\u7279\u5b9a\u8bbe\u5907\u7684\u8bbf\u95ee\uff0c\u8fd9\u8fdb\u4e00\u6b65\u6709\u52a9\u4e8e\u9501\u5b9a\u7cfb\u7edf\u3002\n\u6700\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7cgroup\u8fdb\u884c\u5927\u91cf\u7684\u6027\u80fd\u8c03\u4f18\u3002\u4e0eTuned\u7ed3\u5408\u4f7f\u7528\uff0c\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u9488\u5bf9\u60a8\u7684\u4e2a\u4eba\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u8c03\u6574\u7684\u73af\u5883\u3002\u65e0\u8bba\u662f\u5728\u89c4\u6a21\u4e0a\uff0c\u8fd8\u662f\u5728\u5bf9\u5ef6\u8fdf\u654f\u611f\u7684\u73af\u5883\u4e2d\uff0c\u8fd9\u4e9b\u8c03\u6574\u53ef\u80fd\u610f\u5473\u7740\u662f\u5426\u6ee1\u8db3\u60a8\u7684\u670d\u52a1\u7ea7\u522b\u534f\u8bae(SLA)\u3002\n\u51fa\u4e8e\u672c\u8ba8\u8bba\u7684\u76ee\u7684\uff0c\u6211\u4eec\u8ba8\u8bba\u7684\u662fcgroup V1\u3002\u867d\u7136\u7248\u672c2\u5728Red Hat Enterprise Linux 8(RHEL 8)\u4e2d\u53ef\u7528\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u662f\u7981\u7528\u7684\u3002\u5927\u591a\u6570\u5bb9\u5668\u6280\u672f(\u5982Kubernetes\u3001OpenShift\u3001Docker\u7b49)\u4ecd\u7136\u4f9d\u8d56\u4e8ecgroup\u7248\u672c1\u3002\n\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7cgroup\u662f\u4e00\u79cd\u63a7\u5236\u5185\u6838\u4e2d\u67d0\u4e9b\u5b50\u7cfb\u7edf\u7684\u673a\u5236\u3002\u8fd9\u4e9b\u5b50\u7cfb\u7edf(\u5982\u8bbe\u5907\u3001CPU\u3001RAM\u3001\u7f51\u7edc\u8bbf\u95ee\u7b49)\u5728cgroup\u672f\u8bed\u4e2d\u79f0\u4e3a\u63a7\u5236\u5668\u3002\n\u6bcf\u79cd\u7c7b\u578b\u7684\u63a7\u5236\u5668(CPU\u3001blkio\u3001\u5185\u5b58\u7b49)\u3002\u88ab\u7ec6\u5206\u4e3a\u6811\u72b6\u7ed3\u6784\u3002\u6bcf\u6839\u6811\u679d\u6216\u6811\u53f6\u90fd\u6709\u81ea\u5df1\u7684\u91cd\u91cf\u6216\u9650\u5236\u3002\u63a7\u5236\u7ec4\u6709\u591a\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684\u8fdb\u7a0b\uff0c\u4ece\u800c\u4f7f\u8d44\u6e90\u5229\u7528\u7387\u53d8\u5f97\u7cbe\u7ec6\u4e14\u6613\u4e8e\u5fae\u8c03\u3002\n\u6ce8\u610f\uff1a\u6bcf\u4e2a\u5b50\u4ee3\u90fd\u4f1a\u7ee7\u627f\uff0c\u5e76\u53d7\u5230\u7236\u4ee3cgroup\u4e0a\u8bbe\u7f6e\u7684\u9650\u5236\u7684\u9650\u5236\u3002\n\u5728\u4e0a\u56fe\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5728\u5185\u5b58\u3001\u78c1\u76d8I/O\u548cCPU\u63a7\u5236\u7ec4\u4e2d\u53ef\u4ee5\u4f7f\u7528PID1\u3002Cgroup\u662f\u6309\u8d44\u6e90\u7c7b\u578b\u521b\u5efa\u7684\uff0c\u5e76\u4e14\u5f7c\u6b64\u4e4b\u95f4\u6ca1\u6709\u5173\u8054\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u62e5\u6709\u4e00\u4e2a\u4e0e\u6240\u6709\u63a7\u5236\u5668\u76f8\u5173\u8054\u7684\u6570\u636e\u5e93\u7ec4\uff0c\u4f46\u8fd9\u4e9b\u7ec4\u662f\u5355\u72ec\u5904\u7406\u7684\u3002\u4e0eGID\u7c7b\u4f3c\uff0c\u8fd9\u4e9b\u7ec4\u5728\u521b\u5efa\u65f6\u4f1a\u88ab\u5206\u914d\u4e00\u4e2a\u6570\u5b57\u503c\uff0c\u800c\u4e0d\u662f\u53cb\u597d\u540d\u79f0\u3002\u5728\u5e55\u540e\uff0c\u5185\u6838\u4f7f\u7528\u8fd9\u4e9b\u503c\u6765\u786e\u5b9a\u8d44\u6e90\u5206\u914d\u3002\u6362\u4e00\u79cd\u65b9\u5f0f\u8003\u8651\uff0c\u5047\u8bbe\u6bcf\u4e2acgroup\u540d\u79f0\u5728\u9644\u52a0\u5230\u63a7\u5236\u5668\u540e\u90fd\u88ab\u91cd\u547d\u540d\u4e3a\u63a7\u5236\u5668\u7684\u540d\u79f0\u52a0\u4e0a\u60a8\u9009\u62e9\u7684\u540d\u79f0\u3002\u56e0\u6b64\uff0c\u5185\u5b58\u63a7\u5236\u5668\u4e2d\u540d\u4e3aDATABASE\u7684\u7ec4\u5b9e\u9645\u4e0a\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u5185\u5b58\u6570\u636e\u5e93\u3002\u56e0\u6b64\uff0c\u4e0e\u63a7\u5236\u5668CPU\u76f8\u5173\u8054\u7684\u6570\u636e\u5e93\u7ec4\u6ca1\u6709\u5173\u7cfb\uff0c\u56e0\u4e3a\u53cb\u597d\u540d\u79f0\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662fCPU-DATABASE\u3002\n\u6ce8\u610f\uff1a\u8fd9\u662f\u4e00\u4e2a\u7c97\u7565\u7684\u7b80\u5316\uff0c\u5982\u679c\u60a8\u60f3\u8981\u4e86\u89e3\u5e95\u5c42\u7684cgroup\u4ee3\u7801\uff0c\u5728\u6280\u672f\u4e0a\u662f\u4e0d\u51c6\u786e\u7684\u3002\u4ee5\u4e0a\u89e3\u91ca\u662f\u4e3a\u4e86\u6f84\u6e05\u7406\u89e3\u3002\n\u73b0\u5728\uff0c\u60a8\u5df2\u7ecf\u4e86\u89e3\u4e86\u4ec0\u4e48\u662fcgroup\uff0c\u4ee5\u53ca\u5b83\u4eec\u53ef\u4ee5\u5982\u4f55\u5e2e\u52a9\u60a8\u8fdb\u884c\u6027\u80fd\u8c03\u4f18\u548c\u5b89\u5168\u6027\u3002\u60a8\u8fd8\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3Cgroup\u5982\u4f55\u4e0e\u63a7\u5236\u5668\u4ea4\u4e92\u3002\n\u672c\u6587\u4e0d\u662f\u5bf9cgroup\u4e2d\u5b58\u5728\u7684\u6240\u6709\u63a7\u5236\u5668\u7c7b\u578b\u7684\u7ec6\u5206\u3002\u8fd9\u79cd\u89c4\u6a21\u7684\u4e8b\u60c5\u9700\u8981\u4e00\u6574\u672c\u4e66\u624d\u80fd\u89e3\u91ca\u6e05\u695a\u3002\u5728\u4e0b\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecdCPUShares\uff0c\u56e0\u4e3a\u5b83\u4eec\u76f8\u5bf9\u590d\u6742\uff0c\u5e76\u4e14\u5728\u7cfb\u7edf\u7684\u6574\u4f53\u5065\u5eb7\u4e2d\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\u3002\u5176\u4ed6\u63a7\u5236\u5668\u7684\u529f\u80fd\u7c7b\u4f3c\u3002\u56e0\u6b64\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u4eceCPU\u63a7\u5236\u5668\u4e2d\u5438\u53d6\u7ecf\u9a8c\u6559\u8bad\uff0c\u5e76\u5c06\u5176\u5e94\u7528\u4e8e\u5927\u591a\u6570\u5269\u4f59\u7684cgroup\u63a7\u5236\u5668\u3002\n\u4e0d\u8981\u5fd8\u8bb0\uff0c\u5728\u7b2c\u4e09\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76\u7ba1\u7406\u4efb\u52a1\uff0c\u5728\u7b2c\u56db\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u5c06\u603b\u7ed3system d\u5982\u4f55\u4e0ecgroup\u4ea4\u4e92\u3002\n[\u5bb9\u5668\u5165\u95e8\uff1f\u770b\u770b\u8fd9\u95e8\u514d\u8d39\u7684\u8bfe\u7a0b\u5427\u3002\u90e8\u7f72\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\uff1a\u6280\u672f\u6982\u8ff0\u3002]", "note_en": "Defining cgroups and how they help with resource management and performance tuning in this first article kicking off a four-part series covering cgroups and resource management.\n So you&#39;ve heard of this thing called cgroups, and you are interested in finding out more. Perhaps you caught mention of it while listening to a talk about containerization. Maybe you were looking into Linux performance tuning, or perhaps you just happened to be traversing your file system one day and discovered  /sys/fs/cgroups. Either way, you want to learn more about this functionality that has been baked into the kernel for quite some time. So sit back, grab some popcorn, and prepare to (hopefully) learn something you may not have known before.\n  Webster&#39;s dictionary defines  cgroups as... Just kidding.\u00a0I always hated listening to talks that started with boring dictionary definitions. Instead, I am going to attempt to distill the technical definition of cgroups down into something easy to understand.\n Cgroups are a huge topic. I&#39;ve broken this discussion down into a four-part series. Part one, this article, covers the fundamental concepts of cgroups. Part two examines CPUShare in greater depth. Part three, entitled &#34;Doing cgroups the hardway,&#34; looks at cgroup administrative tasks. Finally, part four covers cgroups as managed by systemd.\n As you may or may not know, the Linux kernel is responsible for all of the hardware interacting reliably on a system. That means, aside from just the bits of code (drivers) that enable the operating system (OS) to understand the hardware, it also sets limits on how many resources a particular program can demand from the system. This is most easily understood when talking about the amount of memory (RAM) a system has to divide up amongst all of the applications your computer may execute. In its most basic form, a Linux system is allowed to run most applications without restriction. This can be great for general computing if all applications play nicely together. But what happens if there is a bug in a program, and it starts to consume all of the available memory? The kernel has a facility called the Out Of Memory (OOM) Killer. Its job is to halt applications in order to free up enough RAM so that the OS may continue to function without crashing.\n That&#39;s great, you say, but what does this have to do with cgroups? Well, the OOM process acts as a last line of defense before your system comes crashing down around you. It&#39;s useful to a point, but since the kernel can control which processes must survive the OOM, it can also determine which applications cannot consume too much RAM in the first place.\n Cgroups are, therefore, a facility built into the kernel that allow the administrator to set resource utilization limits on any process on the\u00a0system. In general, cgroups control:\n Which network packets are identified as the same type so that another application can enforce network traffic rules.\n There are more facets than just these, but those are the major categories that most administrators care about.\n  Control groups (cgroups) are a Linux kernel mechanism for fine-grained control of resources. Originally put forward by Google engineers in 2006, cgroups were eventually merged into the Linux kernel around 2007. While there are currently two versions of cgroups, most distributions and mechanisms use version 1, as it has been in the kernel since 2.6.24. Like with most things added into the mainline kernel, there was not a huge adoption rate at first. Version 2 continues this trend, having been around for almost half a decade but still not widely deployed.\n One issue plaguing cgroup adoption is the lack of knowledge of its existence and its part in the modern Linux system. Low awareness and adoption often mean that the interaction with a kernel interface is clunky, convoluted, or just downright a manual process. Such was the case with cgroups initially. Sure, it&#39;s not that hard to create one-off cgroups. For example, if you wanted to simulate the early days before the tooling around cgroups was developed, you could create a bunch of directories, mount the  cgroup filesystem and start configuring everything by hand. But before we get to all that, let&#39;s talk a little bit about  why cgroups are vital in today&#39;s Linux ecosystem.\n  Cgroups have four main features closely related to each other that make them very important in a modern system, especially if you are running a containerized workload.\n  As touched upon earlier, cgroups allow an administrator to ensure that programs running on the system stay within certain acceptable boundaries for CPU, RAM, block device I/O, and device groups.\n NOTE: The device groups CGroup\u00a0can be a key component in your system&#39;s comprehensive security strategy.\u00a0Device groups include controlling permissions for read, write, and  mknod operations. The read/write operations are fairly self-explanatory, so let&#39;s take a moment to look at the  mknod functionality in a Linux system.   mknod was initially designed to populate all of the things that show up in  /dev/. These are things like hard drives, USB interfaces for devices such as the Arduino, ESP8266 microcontrollers, or other devices that might exist on a system. Most modern Linux systems use  udev to automatically populate this virtual filesystem with things detected by the kernel.\u00a0 mknod also allows multiple programs to communicate with each other by creating a named pipe.\u00a0This concept is beyond the scope of this explanation, but it is sufficient to understand that this facilitates passing information from one program to another. Regardless, the  mknod in a controlled environment is something that an administrator should look closely at restricting.\n  Prioritization is slightly different than resource limiting because you are not restricting processes necessarily. Instead, you are merely saying that regardless of how many resources are available, process  X will always have more time on the system than process  Y.\n  While accounting is turned off by default for most enterprise versions of Linux due to additional resource utilization, it can be really helpful to turn on resource utilization for a particular tree (more on this later). You can thus see what processes inside of which cgroup are consuming which types or resources.\n  There is a facility in cgroups called  freezer. While a deep understanding of this functionality is outside the scope of this article, you can think of freezer as the ability to take a snapshot of a particular process and move it. See the  Kernel Documentation for a deeper understanding.\n Okay, so what does this all mean? Well, from a system administrator&#39;s perspective, it means several things.\n First, even without delving into container technology, it means that you can achieve greater density on a single server by carefully managing the type of workload, the applications, and the resources that they require.\n Second, it enhances your security posture quite a bit. While a typical Linux installation uses cgroups by default, it does not put any restrictions upon processes. You can impose restrictions by default if you so choose. You can also restrict access to specific devices for specific users, groups, or processes, which further helps to lock down a system.\n Finally, you can do a significant amount of performance tuning through cgroups. That, in combination with  tuned, means that you can create an environment specifically adjusted for your individual workloads. At scale, or in a latency-sensitive environment, these adjustments can mean the difference between meeting or missing your Service Level Agreements (SLAs).\n  For the purposes of this discussion, we are talking about  cgroups V1. While version 2 is available in Red Hat Enterprise Linux 8 (RHEL 8), it is disabled by default. Most container technologies such as Kubernetes, OpenShift, Docker, and so on still rely on cgroups version 1.\n We have already discussed that cgroups are a mechanism for controlling certain subsystems in the kernel. These subsystems, such as devices, CPU, RAM, network access, and so on, are called  controllers in the cgroup terminology.\n Each type of controller ( cpu,  blkio,  memory, etc.) is subdivided into a tree-like structure. Each branch or leaf has its own weights or limits. A control group has multiple processes associated with it, making resource utilization granular and easy to fine-tune.\n NOTE: Each child inherits and is restricted by the limits set on the parent cgroup.\n  In the diagram above, you can see that it is possible to have  PID 1 in  memory,  disk i/o, and  cpu control groups. The cgroups are created per resource type and have no association with each other. That means you could have a  database group associated with all of the controllers, but the groups are treated independently. Like GIDs, these groups are assigned a numeric value upon creation and not a friendly name. Under the hood, the kernel uses these values to determine resource allocation. To think of it another way, assume that each cgroup name, once attached to a controller, is renamed to the name of the controller plus the name of your choosing. So a group called  database in the  memory controller can actually be thought to be  memory-database. Thus, there is no relation to a  database group associated with the controller  cpu as the friendly name can be thought of as  cpu-database.\n NOTE: This is a gross simplification and is NOT technically accurate should you be looking to get involved with the underlying cgroup code. The above explanation is meant for clarity of understanding.\n  So now you have an idea of what cgroups are and how they might help you with performance tuning and security. You also have a better understanding of how cgroups interact with controllers.\n This article is not a breakdown of all the controller types that exist in cgroups. Something on that scale would take an entire book to explain properly. In the next article, I look at CPUShares due to their relative complexity and the importance they play in the overall health of a system. The other controllers function similarly. Therefore, you should be able to take the lessons learned from the CPU controller and apply them to most of the remaining cgroup controllers.\n Don&#39;t forget that in part three we&#39;ll examine administrative tasks and in part four we&#39;ll wrap up with how systemd interacts with cgroups.\n [ Getting started with containers? Check out this free course.  Deploying containerized applications: A technical overview. ]", "posttime": "2020-11-07 11:18:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,\u7cfb\u7edf\u7ba1\u7406\u5458,sysadmin,cgroup", "title": "Linux\u7cfb\u7edf\u7ba1\u7406\u5458\u5bf9cgroup\u7684\u4ecb\u7ecd", "title_en": "A Linux sysadmin's introduction to cgroups", "transed": 1, "url": "https://www.redhat.com/sysadmin/cgroups-part-one", "via": "", "real_tags": ["linux", "\u7cfb\u7edf\u7ba1\u7406\u5458", "sysadmin", "cgroup"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033630, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u4e00\u4e2a\u65b0\u7684\u8bc1\u4e66\u9881\u53d1\u673a\u6784(CA)\u51fa\u73b0\u65f6\uff0c\u5b83\u9762\u4e34\u7740\u4e00\u4e2a\u96be\u9898\uff1a\u4e3a\u4e86\u5bf9\u4eba\u4eec\u6709\u7528\uff0c\u5b83\u9700\u8981\u5b83\u7684\u6839\u8bc1\u4e66\u5f97\u5230\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf(OS)\u548c\u6d4f\u89c8\u5668\u7684\u4fe1\u4efb\u3002\u7136\u800c\uff0c\u64cd\u4f5c\u7cfb\u7edf\u548c\u6d4f\u89c8\u5668\u53ef\u80fd\u9700\u8981\u6570\u5e74\u65f6\u95f4\u624d\u80fd\u63a5\u53d7\u65b0\u7684\u6839\u8bc1\u4e66\uff0c\u800c\u4eba\u4eec\u5c06\u8bbe\u5907\u5347\u7ea7\u5230\u5305\u542b\u8be5\u66f4\u6539\u7684\u8f83\u65b0\u7248\u672c\u53ef\u80fd\u9700\u8981\u66f4\u957f\u65f6\u95f4\u3002\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u65b0\u7684CA\u901a\u5e38\u4f1a\u8981\u6c42\u73b0\u6709\u7684\u3001\u53d7\u4fe1\u4efb\u7684CA\u8fdb\u884c\u4ea4\u53c9\u7b7e\u540d\uff0c\u4ee5\u4f7f\u5176\u8fc5\u901f\u5f97\u5230\u8bb8\u591a\u8bbe\u5907\u7684\u4fe1\u4efb\u3002\n\u4e94\u5e74\u524d\uff0c\u5f53\u6211\u4eec\u63a8\u51fa\u52a0\u5bc6\u8f6f\u4ef6\u65f6\uff0c\u6211\u4eec\u5c31\u662f\u8fd9\u4e48\u505a\u7684\u3002\u6211\u4eec\u5f97\u5230\u4e86IdenTrust\u7684\u4ea4\u53c9\u7b7e\u540d\u3002\u4ed6\u4eec\u7684\u201cDST Root X3\u201d\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u6240\u6709\u4e3b\u8981\u7684\u8f6f\u4ef6\u5e73\u53f0\u90fd\u5df2\u7ecf\u4fe1\u4efb\u5b83\u4e86\uff1aWindows\u3001Firefox\u3001MacOS\u3001Android\u3001iOS\u548c\u5404\u79cdLinux\u53d1\u884c\u7248\u3002\u8fd9\u79cd\u4ea4\u53c9\u7b7e\u540d\u4f7f\u6211\u4eec\u80fd\u591f\u7acb\u5373\u5f00\u59cb\u9881\u53d1\u8bc1\u4e66\uff0c\u5e76\u8ba9\u5b83\u4eec\u5bf9\u5f88\u591a\u4eba\u6709\u7528\u3002\u5982\u679c\u6ca1\u6709IdenTrust\uff0c\u8ba9\u6211\u4eec\u52a0\u5bc6\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\uff0c\u6211\u4eec\u611f\u8c22\u4ed6\u4eec\u7684\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u3002\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u53d1\u5e03\u4e86\u81ea\u5df1\u7684\u6839\u8bc1\u4e66(\u201cISRG Root X1\u201d)\uff0c\u5e76\u7533\u8bf7\u5f97\u5230\u5404\u5927\u8f6f\u4ef6\u5e73\u53f0\u7684\u4fe1\u4efb\u3002\n\u73b0\u5728\uff0c\u8fd9\u4e9b\u8f6f\u4ef6\u5e73\u53f0\u591a\u5e74\u6765\u4e00\u76f4\u4fe1\u4efb\u6211\u4eec\u7684\u6839\u8bc1\u4e66\u3002\u6211\u4eec\u8d56\u4ee5\u6210\u529f\u7684DST Root X3\u6839\u8bc1\u4e66\u5c06\u4e8e2021\u5e749\u67081\u65e5\u5230\u671f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u5df2\u7ecf\u51c6\u5907\u597d\u72ec\u7acb\uff0c\u5b8c\u5168\u4f9d\u9760\u6211\u4eec\u81ea\u5df1\u7684\u6839\u8bc1\u4e66\u3002\n\u7136\u800c\uff0c\u8fd9\u786e\u5b9e\u5e26\u6765\u4e86\u4e00\u4e9b\u517c\u5bb9\u6027\u95ee\u9898\u3002\u4e00\u4e9b\u81ea2016\u5e74\u4ee5\u6765\u5c31\u6ca1\u6709\u66f4\u65b0\u7684\u8f6f\u4ef6(\u5927\u6982\u662f\u5728\u6211\u4eec\u7684\u6839\u88ab\u8bb8\u591a\u6839\u7a0b\u5e8f\u63a5\u53d7\u7684\u65f6\u5019)\u4ecd\u7136\u4e0d\u4fe1\u4efb\u6211\u4eec\u7684\u6839\u8bc1\u4e66\uff0cISRG Root X1\u3002\u6700\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u5305\u62ec7.1.1\u4e4b\u524d\u7684Android\u7248\u672c\u3002\u8fd9\u610f\u5473\u7740\u90a3\u4e9b\u8f83\u8001\u7248\u672c\u7684Android\u5c06\u4e0d\u518d\u4fe1\u4efb\u7531We\u2018s Encrypt\u9881\u53d1\u7684\u8bc1\u4e66\u3002\n\u5b89\u5353\u7684\u64cd\u4f5c\u7cfb\u7edf\u66f4\u65b0\u95ee\u9898\u7531\u6765\u5df2\u4e45\u4e14\u5e7f\u4e3a\u4eba\u77e5\u3002\u4e16\u754c\u4e0a\u6709\u5f88\u591a\u5b89\u5353\u8bbe\u5907\u90fd\u5728\u8fd0\u884c\u8fc7\u65f6\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002\u539f\u56e0\u5f88\u590d\u6742\uff0c\u4e5f\u5f88\u96be\u4fee\u590d\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u90e8\u624b\u673a\uff0c\u5236\u9020\u5546\u548c\u79fb\u52a8\u8fd0\u8425\u5546\u901a\u5e38\u90fd\u4f1a\u5728\u6700\u7ec8\u7528\u6237\u6536\u5230\u5b89\u5353\u6838\u5fc3\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u524d\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u3002\u5f53\u5b89\u5353\u7cfb\u7edf\u6709\u66f4\u65b0\u65f6\uff0c\u5236\u9020\u5546\u548c\u79fb\u52a8\u8fd0\u8425\u5546\u90fd\u5fc5\u987b\u5728\u53d1\u5e03\u4e4b\u524d\u5c06\u8fd9\u4e9b\u66f4\u6539\u5408\u5e76\u5230\u4ed6\u4eec\u7684\u5b9a\u5236\u7248\u672c\u4e2d\u3002\u901a\u5e38\uff0c\u5236\u9020\u5546\u4f1a\u8ba4\u4e3a\u8fd9\u4e0d\u503c\u5f97\u82b1\u8fd9\u4e48\u5927\u529b\u6c14\u3002\u5176\u7ed3\u679c\u5bf9\u8d2d\u4e70\u8fd9\u4e9b\u8bbe\u5907\u7684\u4eba\u6765\u8bf4\u662f\u4e0d\u597d\u7684\uff1a\u8bb8\u591a\u4eba\u88ab\u56f0\u5728\u8fc7\u65f6\u591a\u5e74\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u3002\n\u8c37\u6b4c\u4e0d\u518d\u5728\u5176\u5206\u53d1\u4eea\u8868\u677f\u4e0a\u63d0\u4f9b\u7248\u672c\u53f7\uff0c\u4f46\u4f60\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8f7dAndroid Studio\u83b7\u5f97\u4e00\u4e9b\u6570\u636e\u3002\u4ee5\u4e0b\u662f\u622a\u81f32020\u5e749\u6708\u7684\u6570\u636e\uff1a\n\u76ee\u524d\uff0c66.2%\u7684\u5b89\u5353\u8bbe\u5907\u8fd0\u884c7.1\u6216\u4ee5\u4e0a\u7248\u672c\u3002\u5269\u4e0b\u768433.8%\u7684\u5b89\u5353\u8bbe\u5907\u6700\u7ec8\u4f1a\u5728\u7528\u6237\u8bbf\u95ee\u5e26\u6709\u8ba9\u6211\u4eec\u52a0\u5bc6\u8bc1\u4e66\u7684\u7f51\u7ad9\u65f6\u5f00\u59cb\u6536\u5230\u8bc1\u4e66\u9519\u8bef\u3002\u5728\u6211\u4eec\u4e0e\u5927\u578b\u96c6\u6210\u5546\u7684\u6c9f\u901a\u4e2d\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u7ea6\u5360\u5176\u7f51\u7ad9\u6d41\u91cf\u76841-5%\u3002\u5e0c\u671b\u5230\u660e\u5e74DST Root X3\u5230\u671f\u65f6\uff0c\u8fd9\u4e9b\u6570\u5b57\u4f1a\u66f4\u4f4e\uff0c\u4f46\u53d8\u5316\u53ef\u80fd\u4e0d\u4f1a\u5f88\u5927\u3002\n\u6211\u4eec\u80fd\u4e3a\u6b64\u505a\u4e9b\u4ec0\u4e48\u5462\uff1f\u55ef\uff0c\u867d\u7136\u6211\u4eec\u5f88\u4e50\u610f\u6539\u5584Android\u7684\u66f4\u65b0\u60c5\u51b5\uff0c\u4f46\u6211\u4eec\u5728\u8fd9\u65b9\u9762\u80fd\u505a\u7684\u5e76\u4e0d\u591a\u3002\u6211\u4eec\u4e5f\u4e70\u4e0d\u8d77\u4e00\u90e8\u65b0\u624b\u673a\u3002\u6211\u4eec\u80fd\u518d\u8981\u4e00\u4e2a\u4ea4\u53c9\u7b7e\u540d\u5417\uff1f\u6211\u4eec\u5df2\u7ecf\u63a2\u7d22\u8fc7\u8fd9\u4e2a\u9009\u9879\uff0c\u4f46\u4f3c\u4e4e\u4e0d\u592a\u53ef\u80fd\u3002\u5bf9\u4e8eCA\u6765\u8bf4\uff0c\u4ea4\u53c9\u7b7e\u7f72\u53e6\u4e00\u4e2aCA\u7684\u8bc1\u4e66\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u98ce\u9669\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8981\u5bf9CA\u6240\u505a\u7684\u4e00\u5207\u8d1f\u8d23\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4ea4\u53c9\u7b7e\u540d\u7684\u63a5\u6536\u8005\u5fc5\u987b\u9075\u5faa\u4ea4\u53c9\u7b7e\u540dCA\u89c4\u5b9a\u7684\u6240\u6709\u7a0b\u5e8f\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u80fd\u591f\u81ea\u7acb\u662f\u5f88\u91cd\u8981\u7684\u3002\u6b64\u5916\uff0c\u5b89\u5353\u7cfb\u7edf\u7684\u66f4\u65b0\u95ee\u9898\u4f3c\u4e4e\u5e76\u6ca1\u6709\u6d88\u5931\u3002\u5982\u679c\u6211\u4eec\u627f\u8bfa\u652f\u6301\u65e7\u7684Android\u7248\u672c\uff0c\u6211\u4eec\u5c31\u4f1a\u65e0\u9650\u671f\u5730\u5bfb\u6c42\u5176\u4ed6CA\u7684\u4ea4\u53c9\u7b7e\u540d\u3002\n\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u675f\u7f1a\u3002\u6211\u4eec\u81f4\u529b\u4e8e\u8ba9\u5730\u7403\u4e0a\u7684\u6bcf\u4e2a\u4eba\u90fd\u62e5\u6709\u5b89\u5168\u548c\u5c0a\u91cd\u9690\u79c1\u7684\u901a\u4fe1\u3002\u6211\u4eec\u77e5\u9053\uff0c\u53d7Android\u66f4\u65b0\u95ee\u9898\u5f71\u54cd\u6700\u5927\u7684\u662f\u90a3\u4e9b\u6211\u4eec\u6700\u60f3\u5e2e\u52a9\u7684\u4eba--\u90a3\u4e9b\u53ef\u80fd\u65e0\u6cd5\u6bcf\u56db\u5e74\u4e70\u4e00\u90e8\u65b0\u624b\u673a\u7684\u4eba\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728ISRG Root X1\u5230\u671f\u4e4b\u524d\uff0c\u6211\u4eec\u9884\u8ba1Android\u7684\u4f7f\u7528\u6570\u5b57\u4e0d\u4f1a\u6709\u592a\u5927\u53d8\u5316\u3002\u901a\u8fc7\u63d0\u9ad8\u4eba\u4eec\u5bf9\u8fd9\u4e00\u53d8\u5316\u7684\u8ba4\u8bc6\uff0c\u6211\u4eec\u5e0c\u671b\u5e2e\u52a9\u6211\u4eec\u7684\u793e\u4f1a\u627e\u5230\u6700\u4f73\u7684\u524d\u8fdb\u9053\u8def\u3002\n\u4ece2021\u5e741\u670811\u65e5\u8d77\uff0c\u6211\u4eec\u8ba1\u5212\u5bf9API\u8fdb\u884c\u66f4\u6539\uff0c\u4ee5\u4fbfACME\u5ba2\u6237\u7aef\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u63d0\u4f9b\u901a\u5411ISRG Root X1\u7684\u8bc1\u4e66\u94fe\u3002\u4f46\u662f\uff0c\u4e5f\u53ef\u4ee5\u4e3a\u901a\u5f80DST Root X3\u5e76\u63d0\u4f9b\u66f4\u5e7f\u6cdb\u517c\u5bb9\u6027\u7684\u540c\u4e00\u8bc1\u4e66\u63d0\u4f9b\u5907\u7528\u8bc1\u4e66\u94fe\u3002\u8fd9\u662f\u901a\u8fc7ACME\u7684\u201c\u66ff\u4ee3\u201d\u94fe\u63a5\u5173\u7cfb\u5b9e\u73b0\u7684\u3002Certbot\u4ece1.6.0\u7248\u5f00\u59cb\u652f\u6301\u8fd9\u4e00\u529f\u80fd\u3002\u5982\u679c\u60a8\u4f7f\u7528\u4e0d\u540c\u7684ACME\u5ba2\u6237\u7aef\uff0c\u8bf7\u67e5\u770b\u60a8\u7684\u5ba2\u6237\u7aef\u7684\u6587\u6863\uff0c\u4ee5\u786e\u5b9a\u662f\u5426\u652f\u6301\u201c\u5907\u7528\u201d\u94fe\u63a5\u5173\u7cfb\u3002\n\u5c06\u4f1a\u6709\u7f51\u7ad9\u6240\u6709\u8005\u6536\u5230\u7528\u6237\u7684\u6295\u8bc9\uff0c\u6211\u4eec\u5bf9\u6b64\u8868\u793a\u540c\u60c5\uff0c\u8fd9\u662f\u4e0d\u7406\u60f3\u7684\u3002\u6211\u4eec\u6b63\u5728\u52aa\u529b\u63d0\u9192\u7f51\u7ad9\u6240\u6709\u8005\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u8ba1\u5212\u548c\u51c6\u5907\u4e86\u3002\u6211\u4eec\u9f13\u52b1\u7ad9\u70b9\u6240\u6709\u8005\u90e8\u7f72\u4e34\u65f6\u4fee\u590d\u7a0b\u5e8f(\u5207\u6362\u5230\u5907\u7528\u8bc1\u4e66\u94fe)\u4ee5\u4fdd\u6301\u60a8\u7684\u7ad9\u70b9\u6b63\u5e38\u8fd0\u884c\uff0c\u540c\u65f6\u8bc4\u4f30\u60a8\u7684\u957f\u671f\u89e3\u51b3\u65b9\u6848\u9700\u8981\u4ec0\u4e48\uff1a\u60a8\u662f\u5426\u9700\u8981\u8fd0\u884c\u6a2a\u5e45\uff0c\u8981\u6c42\u4f7f\u7528\u8f83\u65e7\u64cd\u4f5c\u7cfb\u7edf\u7684Android\u7528\u6237\u5b89\u88c5Firefox\uff0c\u505c\u6b62\u652f\u6301\u8f83\u65e7\u7684Android\u7248\u672c\uff0c\u5bf9\u4e8e\u8f83\u65e7\u7684Android\u7248\u672c\u91cd\u65b0\u4f7f\u7528HTTP\uff0c\u6216\u8005\u5207\u6362\u5230\u5b89\u88c5\u5728\u8fd9\u4e9b\u8f83\u65e7\u7248\u672c\u4e0a\u7684CA\u3002\n\u60a8\u7684\u4e3b\u673a\u63d0\u4f9b\u5546\u53ef\u80fd\u4f1a\u57282021\u5e749\u6708\u4e4b\u524d\u4e3aDST Root X3\u63d0\u4f9b\u670d\u52a1\uff0c\u6216\u8005\u4ed6\u4eec\u53ef\u80fd\u4f1a\u51b3\u5b9a\u57282021\u5e741\u670811\u65e5\u4e4b\u540e\u5207\u6362\u5230\u901a\u5411ISRG Root X1\u7684\u8bc1\u4e66\u94fe\u3002\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u4e0e\u4ed6\u4eec\u8054\u7cfb\uff01\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u8f83\u65e7\u7248\u672c\u7684Android\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5b89\u88c5Firefox Mobile\uff0c\u5728\u64b0\u5199\u672c\u6587\u65f6\u5b83\u652f\u6301Android 5.0\u53ca\u66f4\u9ad8\u7248\u672c\u3002\n\u4e3a\u4ec0\u4e48\u5b89\u88c5Firefox\u4f1a\u6709\u5e2e\u52a9\uff1f\u5bf9\u4e8eAndroid\u624b\u673a\u7684\u5185\u7f6e\u6d4f\u89c8\u5668\uff0c\u53d7\u4fe1\u4efb\u7684\u6839\u8bc1\u4e66\u5217\u8868\u6765\u81ea\u64cd\u4f5c\u7cfb\u7edf--\u5728\u8fd9\u4e9b\u8f83\u65e7\u7684\u624b\u673a\u4e0a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u8fc7\u65f6\u3002\u7136\u800c\uff0cFirefox\u76ee\u524d\u5728\u6d4f\u89c8\u5668\u4e2d\u662f\u72ec\u4e00\u65e0\u4e8c\u7684-\u5b83\u9644\u5e26\u4e86\u81ea\u5df1\u7684\u53d7\u4fe1\u4efb\u6839\u8bc1\u4e66\u5217\u8868\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u5b89\u88c5\u4e86\u6700\u65b0Firefox\u7248\u672c\u7684\u7528\u6237\u90fd\u53ef\u4ee5\u83b7\u5f97\u6700\u65b0\u7684\u53ef\u4fe1\u8bc1\u4e66\u9881\u53d1\u673a\u6784\u5217\u8868\uff0c\u5373\u4f7f\u4ed6\u4eec\u7684\u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u8fc7\u65f6\u3002\n\u6211\u4eec\u611f\u8c22\u60a8\u73b0\u5728\u548c\u591a\u5e74\u6765\u7684\u7406\u89e3\u548c\u652f\u6301\uff0c\u56e0\u4e3a\u6211\u4eec\u4f5c\u4e3aCA\u4e0d\u65ad\u53d1\u5c55\u58ee\u5927\uff0c\u786e\u4fdd\u4e16\u754c\u5404\u5730\u7684\u4eba\u4eec\u90fd\u80fd\u83b7\u5f97\u52a0\u5bc6\u3002\u6211\u4eec\u5c06\u901a\u8fc7\u6211\u4eec\u7684\u793e\u533a\u8bba\u575b\u5e16\u5b50\u63d0\u4f9b\u5173\u4e8e\u8fd9\u79cd\u6839\u8fc1\u79fb\u5982\u4f55\u5f71\u54cdAndroid\u8bbe\u5907\u7684\u4efb\u4f55\u672a\u6765\u66f4\u65b0\u3002\u5982\u679c\u60a8\u5bf9\u8fd9\u4e00\u53d8\u5316\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u6211\u4eec\u7684\u793e\u533a\u968f\u65f6\u51c6\u5907\u4e3a\u60a8\u63d0\u4f9b\u5e2e\u52a9\uff1aCommunity ity.letscrypt.org\u3002\n\u6211\u4eec\u4f9d\u9760\u652f\u6301\u8005\u7684\u8d21\u732e\u6765\u63d0\u4f9b\u6211\u4eec\u7684\u670d\u52a1\u3002\u5982\u679c\u60a8\u7684\u516c\u53f8\u6216\u7ec4\u7ec7\u60f3\u8981\u8d5e\u52a9We\u2018s Encryption\uff0c\u8bf7\u7ed9\u6211\u4eec\u53d1\u7535\u5b50\u90ae\u4ef6\uff0c\u5730\u5740\u662fSUPSONSY@letscrypt.org\u3002\u5982\u679c\u5728\u4f60\u7684\u80fd\u529b\u8303\u56f4\u5185\uff0c\u6211\u4eec\u8981\u6c42\u4f60\u505a\u51fa\u4e2a\u4eba\u8d21\u732e\u3002", "note_en": "When a new Certificate Authority (CA) comes on the scene, it faces a conundrum: In order to be useful to people, it needs its root certificate to be trusted by a wide variety of operating systems (OSes) and browsers. However, it can take years for the OSes and browsers to accept the new root certificate, and even longer for people to upgrade their devices to the newer versions that include that change. The common solution: a new CA will often ask an existing, trusted CA for a cross-signature, to quickly get it into being trusted by lots of devices.\n Five years ago, when Let\u2019s Encrypt launched, that\u2019s exactly what we did.  We got a cross-signature from IdenTrust. Their \u201cDST Root X3\u201d had been around for a long time, and all the major software platforms trusted it already: Windows, Firefox, macOS, Android, iOS, and a variety of Linux distributions. That cross-signature allowed us to start issuing certificates right away, and have them be useful to a lot of people. Without IdenTrust, Let\u2019s Encrypt may have never happened and we are grateful to them for their partnership. Meanwhile, we issued our own root certificate (\u201cISRG Root X1\u201d) and applied for it to be trusted by the major software platforms.\n Now, those software platforms have trusted our root certificate for years. And the DST Root X3 root certificate that we relied on to get us off the ground is going to expire - on September 1, 2021. Fortunately, we\u2019re ready to stand on our own, and rely solely on our own root certificate.\n However, this does introduce some compatibility woes. Some software that hasn\u2019t been updated since 2016 (approximately when our root was accepted to many root programs) still doesn\u2019t trust our root certificate, ISRG Root X1. Most notably, this includes versions of Android prior to 7.1.1. That means those older versions of Android will no longer trust certificates issued by Let\u2019s Encrypt.\n Android has a long-standing and well known issue with operating system updates. There are  lots of Android devices in the world running out-of-date operating systems. The causes are complex and hard to fix: for each phone, the core Android operating system is commonly modified by both the manufacturer and a mobile carrier before an end-user receives it. When there\u2019s an update to Android, both the manufacturer and the mobile carrier have to incorporate those changes into their customized version before sending it out. Often manufacturers decide that\u2019s not worth the effort. The result is bad for the people who buy these devices: many are stuck on operating systems that are years out of date.\n Google no longer provides version numbers on its  Distribution Dashboard, but you can still get some data by downloading  Android Studio. Here\u2019s what the numbers looked like as of September 2020:\n  Currently, 66.2% of Android devices are running version 7.1 or above. The remaining 33.8% of Android devices will eventually start getting certificate errors when users visit sites that have a Let\u2019s Encrypt certificate. In our communications with large integrators, we have found that this represents around 1-5% of traffic to their sites. Hopefully these numbers will be lower by the time DST Root X3 expires next year, but the change may not be very significant.\n What can we do about this? Well, while we\u2019d love to improve the Android update situation, there\u2019s not much we can do there. We also can\u2019t afford to buy the world a new phone. Can we get another cross-signature? We\u2019ve explored this option and it seems unlikely. It\u2019s a big risk for a CA to cross-sign another CA\u2019s certificate, since they become responsible for everything that CA does. That also means the recipient of the cross-signature has to follow all the procedures laid out by the cross-signing CA. It\u2019s important for us to be able to stand on our own. Also, the Android update problem doesn\u2019t seem to be going away. If we commit ourselves to supporting old Android versions, we would commit ourselves to seeking cross-signatures from other CAs indefinitely.\n It\u2019s quite a bind. We\u2019re committed to everybody on the planet having secure and privacy-respecting communications. And we know that the people most affected by the Android update problem are those we most want to help - people who may not be able to buy a new phone every four years. Unfortunately, we don\u2019t expect the Android usage numbers to change much prior to ISRG Root X1\u2019s expiration. By raising awareness of this change now, we hope to help our community to find the best path forward.\n  As of January 11, 2021,  we\u2019re planning to make a change to our API so that ACME clients will, by default, serve a certificate chain that leads to ISRG Root X1. However, it will also be possible to serve an alternate certificate chain for the same certificate that leads to DST Root X3 and offers broader compatibility. This is implemented via the  ACME \u201calternate\u201d link relation. This is  supported by Certbot from version 1.6.0 onwards. If you use a different ACME client, please check your client\u2019s documentation to see if the \u201calternate\u201d link relation is supported.\n There will be site owners that receive complaints from users and we are empathetic to that being not ideal. We\u2019re working hard to alert site owners so you can plan and prepare. We encourage site owners to deploy a temporary fix (switching to the alternate certificate chain) to keep your site working while you evaluate what you need for a long-term solution: whether you need to run a banner asking your Android users on older OSes to install Firefox, stop supporting older Android versions, drop back to HTTP for older Android versions, or switch to a CA that is installed on those older versions.\n  Your hosting provider may be serving the DST Root X3 until September 2021, or they may decide to switch to the certificate chain that leads to ISRG Root X1 after January 11, 2021. Please contact them if you have any questions!\n  If you\u2019re on an older version of Android, we recommend you  install Firefox Mobile, which supports Android 5.0 and above as of the time of writing.\n Why does installing Firefox help? For an Android phone\u2019s built-in browser, the list of trusted root certificates comes from the operating system - which is out of date on these older phones. However, Firefox is currently unique among browsers - it ships with its own list of trusted root certificates. So anyone who installs the latest Firefox version gets the benefit of an up-to-date list of trusted certificate authorities, even if their operating system is out of date.\n We appreciate your understanding and support both now and over the years as we continue to grow as a CA, making sure people everywhere have access to encryption. We will provide any future updates on how this root transition affects Android devices via  our community forum post. Our community is always ready to help should you have any questions about this change:  community.letsencrypt.org.\n We depend on contributions from our supporters in order to provide our services. If your company or organization would like to  sponsor Let\u2019s Encrypt please email us at  sponsor@letsencrypt.org. We ask that you make an  individual contribution if it is within your means.", "posttime": "2020-11-07 11:18:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u81ea\u7acb,standing,android", "title": "\u81ea\u7acb\u81ea\u7acb", "title_en": "Standing on our own two feet", "transed": 1, "url": "https://letsencrypt.org/2020/11/06/own-two-feet.html", "via": "", "real_tags": ["\u81ea\u7acb", "standing", "android"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033629, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u4e45\u524d\uff0c\u6211\u5728\u4e00\u4e2a\u9879\u76ee\u4e2d\u5de5\u4f5c\uff0c\u611f\u89c9\u6280\u672f\u503a\u52a1\u7684\u5b9a\u65f6\u70b8\u5f39\u6b63\u5728\u6211\u4eec\u9762\u524d\u7206\u70b8\u3002\u6211\u4eec\u4e0d\u80fd\u56e0\u4e3aWhossitz\u800c\u91cd\u6784\u72c2\u6b22\uff0c\u5f53\u6211\u4eec\u95ee\u5230Whatsitz\u65f6\uff0c\u6ca1\u6709\u4eba\u77e5\u9053Whatsitz\u4ee5\u53ca\u5b83\u5230\u5e95\u662f\u5982\u4f55\u4e0e\u72c2\u6b22\u4e00\u8d77\u5de5\u4f5c\u7684\uff0c\u5f53\u7136\u4e5f\u6ca1\u6709\u5bf9\u5b83\u7684\u6d4b\u8bd5\u3002\u5f53\u6211\u4eec\u901a\u77e5\u7ba1\u7406\u5c42\u65f6\uff0c\u4ed6\u4eec\u56de\u7b54\u8bf4\uff1a\u201c\u6211\u4eec\u73b0\u5728\u7684\u60c5\u51b5\u662f\u8fb9\u98de\u8fb9\u9020\u98de\u673a\uff0c\u5982\u679c\u4e0d\u505a\u5927\u7684\u6539\u5199\uff0c\u6211\u4eec\u73b0\u5728\u600e\u4e48\u80fd\u628a\u8fd9\u4ef6\u4e8b\u505a\u51fa\u6765\u5462\uff1f\u201d\u5f88\u660e\u663e\uff0c\u6280\u672f\u503a\u52a1\u662f\u5982\u4f55\u79ef\u7d2f\u8d77\u6765\u7684\u3002\n\u8fd9\u8ba9\u6211\u5f00\u59cb\u4e86\u63a2\u7d22\u6280\u672f\u503a\u52a1\u6982\u5ff5\u7684\u72c2\u6b22\u3002\u6211\u77e5\u9053\u6280\u672f\u503a\u52a1\u662f\u4ec0\u4e48\uff0c\u6216\u8005\u66f4\u786e\u5207\u5730\u8bf4\uff0c\u5b83\u662f\u4ec0\u4e48\u611f\u89c9\uff0c\u4f46\u6211\u6ca1\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u6cd5\u6765\u89e3\u91ca\u5b83\uff0c\u8fd9\u4e0d\u662f\u7eaf\u7cb9\u4e3b\u89c2\u7684\u3002\u201c\u4ee3\u7801\u7684\u5473\u9053\u201d\u5f88\u80fd\u8bf4\u660e\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u201c\u6211\u4e0d\u559c\u6b22\u7684\u4ee3\u7801\u201d\u662f\u6280\u672f\u503a\u52a1\u7684\u6807\u51c6\uff0c\u90a3\u4e48\u6bcf\u6b21\u4f60\u96c7\u4f63\u4e00\u4e2a\u6709\u8fdc\u89c1\u7684\u65b0\u5458\u5de5\u65f6\uff0c\u4f60\u5c31\u662f\u5728\u91cd\u6784\u6574\u4e2a\u9879\u76ee\u3002\n\u7ecf\u8fc7\u4e00\u756a\u641c\u7d22\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u627e\u5230\u4e86\u6c83\u5fb7\u00b7\u574e\u5b81\u5b89(Ward Cunningham)\u7684\u8fd9\u6bb5\u89c6\u9891\uff0c\u4ed6\u662f\u4e00\u4f4d\u8f6f\u4ef6\u7a0b\u5e8f\u5458\uff0c\u6700\u521d\u521b\u9020\u4e86\u201c\u6280\u672f\u503a\u52a1\u201d\u8fd9\u4e2a\u8bcd\uff0c\u4ed6\u5728\u89c6\u9891\u4e2d\u5bf9\u8fd9\u4e2a\u6982\u5ff5\u505a\u4e86\u8fdb\u4e00\u6b65\u7684\u89e3\u91ca(\u2026\u3002\n\u201c\u5982\u679c\u4f60\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\u5f00\u53d1\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u53ea\u589e\u52a0\u529f\u80fd\uff0c\u4f46\u4ece\u6765\u4e0d\u91cd\u65b0\u7ec4\u7ec7\uff0c\u4ee5\u53cd\u6620\u4f60\u5bf9\u8fd9\u4e9b\u529f\u80fd\u7684\u7406\u89e3\uff0c\u90a3\u4e48\u6700\u7ec8\u8fd9\u4e2a\u7a0b\u5e8f\u6839\u672c\u5c31\u4e0d\u5305\u542b\u4efb\u4f55\u7406\u89e3\uff0c\u6240\u6709\u7684\u52aa\u529b\u90fd\u4f1a\u82b1\u8d39\u8d8a\u6765\u8d8a\u957f\u7684\u65f6\u95f4\u3002\u201d\n\u6211\u559c\u6b22\u8fd9\u6837\u7684\u5b9a\u4e49\uff0c\u5373\u95ee\u9898\u5728\u4e8e\u201c\u4ece\u672a\u91cd\u65b0\u7ec4\u7ec7(\u4ee3\u7801)\u4ee5\u53cd\u6620\u60a8\u7684\u7406\u89e3\u3002\u201d\u5728\u4e00\u4e2a\u8d70\u8d70\u505c\u505c\u7684\u4ea7\u54c1\u5468\u671f\u4e2d\uff0c\u8fd9\u79cd\u7406\u89e3\u7684\u4e27\u5931\u5f00\u59cb\u4ea7\u751f\u4e00\u4e9b\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u5177\u6709\u5b57\u9762\u4e0a\u548c\u6bd4\u55bb\u610f\u4e49\u4e0a\u7684\u6210\u672c\u3002\u4e00\u79cd\u666e\u904d\u7684\u8ff7\u60d1\u611f\u5c42\u51fa\u4e0d\u7a77\u3002\u5f00\u53d1\u4eba\u5458\u7684\u7ecf\u6d4e\u6548\u76ca\u5f88\u5bb9\u6613\u91cf\u5316\uff1b\u8981\u4e48\u4f60\u653e\u6162\u901f\u5ea6\uff0c\u5728\u6bcf\u6b21\u4e3b\u8981\u8fed\u4ee3\u540e\u96c7\u4eba\u91cd\u6784\u548c\u8bb0\u5f55\u4ee3\u7801\uff0c\u8981\u4e48\u4ed8\u94b1\u7ed9\u6bcf\u4e2a\u5728\u9879\u76ee\u4e0a\u5de5\u4f5c\u5230\u6700\u540e\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u8ba9\u4ed6\u4eec\u76ef\u7740\u4ee3\u7801\u770b\u51e0\u4e2a\u5c0f\u65f6\uff0c\u7136\u540e\u60f3\u77e5\u9053\u5230\u5e95\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u8ba9\u4eba\u76ee\u77aa\u53e3\u5446\u5730\u76ef\u7740\u4ee3\u7801\u5e93\u5316\u5408\u7269\u3002\u5728\u7ec4\u7ec7\u4e0a\uff0c\u4f60\u7684\u62a5\u916c\u662f\u901f\u5ea6\u548c\u6d41\u52a8\u7387\uff1b\u6709\u624d\u534e\u7684\u4eba\u5728\u51e0\u8f6e\u5e9f\u8bdd\u540e\u5c31\u4f1a\u79bb\u5f00\u3002\n\u77e5\u8bc6\u7ba1\u7406\u5728\u7ec4\u7ec7\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u4f46\u5b83\u4eec\u5f88\u5c11\u7ecf\u5386\u91cd\u7ec4\u4ee5\u53cd\u6620\u5f53\u524d\u7406\u89e3\u7684\u5173\u952e\u6b65\u9aa4\u3002\u9700\u8981\u8bc1\u636e\u5417\uff1f\u770b\u770b\u79bb\u4f60\u6700\u8fd1\u7684\u516c\u53f8\u7ef4\u57fa\u767e\u79d1\u5427\u3002\u6211\u51e0\u4e4e\u53ef\u4ee5\u4fdd\u8bc1\u5b83\u662f\u4e00\u56e2\u7cdf\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u516c\u53f8\u6c38\u8fdc\u4e0d\u5e94\u8be5\u6709\u7ef4\u57fa\u3002\u6210\u529f\u7684\u7ef4\u57fa\u767e\u79d1\uff0c\u6bd4\u5982\u7ef4\u57fa\u767e\u79d1\uff0c\u662f\u7531\u4e00\u652f\u7f16\u8f91\u5927\u519b\u63d0\u4f9b\u652f\u6301\u7684\uff0c\u5927\u591a\u6570\u7ec4\u7ec7\u6c38\u8fdc\u4e0d\u4f1a\u4f18\u5148\u8003\u8651\u90a3\u4e48\u591a\u65f6\u95f4\u6216\u5185\u5bb9\u7b56\u7565\u3002\u7ba1\u7406\u4e0d\u5584\u7684\u77e5\u8bc6\u7ed9\u7ec4\u7ec7\u7559\u4e0b\u4e86\u91d1\u9c7c\u822c\u7684\u8bb0\u5fc6\u3002\u6211\u4e0d\u80fd\u544a\u8bc9\u4f60\u6211\u53c2\u52a0\u8fc7\u591a\u5c11\u6b21\u65b0\u4ea7\u54c1\u8ba1\u5212\u4f1a\u8bae\uff0c\u6ca1\u6709\u4eba\u8bb0\u5f97\u4e24\u4e2a\u5b63\u5ea6\u524d\u5173\u4e8e\u540c\u4e00\u4ef6\u4e8b\u7684\u4f1a\u8bae\u3002\u8fd9\u5c31\u50cf\u571f\u62e8\u9f20\u8282\uff0c\u4f46\u4f60\u5374\u4e00\u904d\u53c8\u4e00\u904d\u5730\u5f00\u7740\u540c\u6837\u7684\u4f1a\u8bae\u3002\n\u6211\u559c\u6b22\u574e\u5b81\u5b89\u57fa\u4e8e\u7406\u89e3\u7684\u6280\u672f\u503a\u52a1\u89c2\u70b9\u7684\u4e00\u70b9\u662f\uff0c\u5b83\u4e3a\u5fc5\u8981\u65f6\u7684\u5927\u89c4\u6a21\u91cd\u6784\u7559\u51fa\u4e86\u7406\u7531\u3002\u5982\u679c\u4e00\u4e2a\u4ea7\u54c1\u4e2d\u6709\u8db3\u591f\u591a\u7684\u7ec4\u7ec7\u4eba\u5458\u53d8\u52a8\u6216\u8db3\u591f\u591a\u7684\u7279\u6027\uff0c\u90a3\u4e48\u91cd\u5199\u53ef\u80fd\u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u8fd9\u6837\u60a8\u7684\u56e2\u961f\u624d\u80fd\u5bf9\u4ee3\u7801\u6709\u4e00\u4e2a\u96c6\u4f53\u7684\u7406\u89e3\u3002\u4f60\u4e0d\u80fd\u6307\u671b\u4eba\u4eec\u5728\u5306\u5fd9\u7684\u4ee3\u7801\u3001\u96be\u4ee5\u7406\u89e3\u7684\u9700\u6c42\u548c\u4e0d\u518d\u5728\u90a3\u91cc\u5de5\u4f5c\u7684\u4eba\u521b\u9020\u7684\u6377\u5f84\u8fbe\u5230\u9876\u5cf0\u7684\u60c5\u51b5\u4e0b\u9ad8\u6548\u5de5\u4f5c\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u4f60\u7684\u6280\u672f\u503a\u52a1\u6c14\u7403\u5df2\u7ecf\u7834\u88c2\uff0c\u4f60\u62e5\u6709\u4e86\u4e00\u9879\u6709\u6bd2\u8d44\u4ea7\uff0c\u662f\u65f6\u5019\u4e70\u5355\u4e86\u3002\u6216\u8bb8\uff0c\u901a\u8fc7\u4e00\u4e9b\u516c\u8ba4\u7684\u539f\u5219\uff0c\u4f60\u53ef\u4ee5\u627e\u5230\u6b3a\u9a97\u71b5\u6216\u5efa\u7acb\u6280\u672f\u4fe1\u7528\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u7d2f\u79ef\u503a\u52a1\u6216\u65e0\u4f11\u6b62\u5730\u8ffd\u9010\u65b0\u7684\u95ea\u4eae\u4e4b\u7269\u3002", "note_en": "Some time back, I was working on a project where it felt like the timebomb of technical debt was exploding in our faces. We couldn\u2019t refactor the whoositz because of the whatsitz and when we asked about the whatsitz no one knew about the whatsitz and how it exactly worked with the whoositz and there certainly weren\u2019t tests for it. When we notified management they replied, \u201c We\u2019re in a build the plane while flying situation, how can we get this out now without doing a big rewrite?\u201d It was pretty clear how the technical debt had amassed.\n This launched me on a bender exploring the concept of  technical debt. I knew what technical debt was, or rather  what it felt like, but I didn\u2019t have a great way of explaining it that wasn\u2019t purely subjective. \u201cCode smells\u201d are a great tell, but if \u201cCode I don\u2019t like\u201d is the bar to qualify as technical debt, you\u2019ll be refactoring the entire project every time you hire a new employee who has big opinions.\n After some searching, I was pleased to find this short video by Ward Cunningham, the software programmer who originally coined the phrase \u201ctechnical debt\u201d, where he explains the concept a bit further\u2026\n \u201cIf you develop a program for a long period of time by only adding features but never reorganizing it to reflect your understanding of those features, then eventually that program simply does not contain any understanding and all efforts to work on it take longer and longer.\u201d\n I like this definition that the problem lies in \u201cnever reorganizing [the code] to reflect your understanding.\u201d In a go-go-go product cycle, that loss of understanding begins to create problems that have literal and figurative costs. A general sense of confusion builds and builds. The developer economics are fairly simple to quantify; either you slow down and pay someone to refactor and document the code after every major iteration, or you pay every developer who works on the project until the end of time to stare at the code for a few hours and wonder what the hell is going on. That dumbfounded staring at the codebase compounds over time. Organizationally, you pay in velocity and turnover; talented people are going to leave after a few rounds of bullshit.\n Knowledge management is so important in organizations, but they rarely undergo that critical step of reorganizing to reflect the current understanding. Need evidence? Take a look at your nearest corporate wiki.  I can almost guarantee it\u2019s a mess because most companies should never have wikis. Successful wikis, like Wikipedia, are powered by an army of editors and most organizations will never prioritize that much time or content strategy. Poorly managed knowledge leaves organizations with the memory of goldfish. I can\u2019t tell you how many new product initiative meetings I\u2019ve been in where no one remembers the meeting about the exact same thing from two quarters ago. It\u2019s like Groundhog\u2019s Day, but you\u2019re having the same meetings over and over.\n One thing I like about Cunningham\u2019s understanding-based view of technical debt is that it leaves room to justify a big refactor when necessary. If there\u2019s been enough organizational turnover or enough feature creep in a product, then maybe doing a rewrite is the best option so your team has a collective understanding of the code. You can\u2019t expect people to be productive in something that was a culmination of rushed code, poorly understood requirements, and shortcuts made by people who no longer work there. At that point your technical debt balloon has popped, you are in possession of a toxic asset, and it\u2019s time to pay the piper. And perhaps, with some agreed upon  principles, you can find ways to  cheat entropy or build  technical credit instead of accruing debt or endlessly chasing the new shiny.", "posttime": "2020-11-07 11:18:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7406\u89e3,debt,\u503a\u52a1", "title": "\u6280\u672f\u503a\u52a1\u662f\u4e00\u79cd\u7f3a\u4e4f\u7406\u89e3\u7684\u884c\u4e3a", "title_en": "Technical debt as a lack of understanding", "transed": 1, "url": "https://daverupert.com/2020/11/technical-debt-as-a-lack-of-understanding/", "via": "", "real_tags": ["\u7406\u89e3", "debt", "\u503a\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033628, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u897f\u96c5\u56fe\u8b66\u5bdf\u5c40(SPD)\u6700\u8fd1\u516c\u5e03\u7684\u8bb0\u5f55\uff0c\u4e00\u540d\u4e3aSPD\u5de5\u4f5c\u7684\u4fa6\u63a2\u6ce8\u518c\u5e76\u4f7f\u7528\u4e86\u9762\u90e8\u8bc6\u522b\u5e94\u7528Clearview AI\uff0c\u8fd9\u4f3c\u4e4e\u8fdd\u53cd\u4e86\u897f\u96c5\u56fe\u5e02\u7684\u76d1\u7763\u6761\u4f8b\u3002\nClearview AI\u662f\u4e00\u5bb6\u9762\u90e8\u8bc6\u522b\u521d\u521b\u516c\u53f8\uff0c\u8be5\u516c\u53f8\u57282020\u5e74\u521d\u9677\u5165\u4e86\u4e89\u8bae\u4e4b\u4e2d\uff0c\u5f53\u65f6\u6709\u6d88\u606f\u79f0\uff0c\u8be5\u516c\u53f8\u5f00\u53d1\u4e86\u4e00\u6b3e\u5e94\u7528\uff0c\u5ba3\u4f20\u80fd\u591f\u5c06\u4e0a\u4f20\u7684\u56fe\u50cf\u4e0e\u4ece\u4e92\u8054\u7f51\u548c\u793e\u4ea4\u5a92\u4f53\u7f51\u7ad9\u4e0a\u6293\u53d6\u7684\u6570\u5341\u4ebf\u5f20\u7167\u7247\u8fdb\u884c\u5339\u914d\u3002\u8bb0\u8005\u4eec\u8fd8\u53d1\u73b0\uff0c\u8fd9\u5bb6\u521b\u4e1a\u516c\u53f8\u7684\u521b\u59cb\u4eba\u970d\u6069\u00b7\u987f(Hoan Ton)\u4e0e\u67e5\u514b\u00b7\u7ea6\u7ff0\u900a(Chuck Johnson)\u548c\u8fc8\u514b\u00b7\u5207\u5c14\u8bfa\u7ef4\u5947(Mike Cernovich)\u7b49\u6781\u53f3\u7ffc\u4eba\u7269\u4e4b\u95f4\u6709\u660e\u786e\u7684\u8054\u7cfb\u3002\n\u516c\u5e03\u7684\u7535\u5b50\u90ae\u4ef6\u663e\u793a\uff0c\u6839\u636e\u4eca\u5e74\u590f\u5929\u83b7\u5f97\u7684\u4e00\u4efd\u5de5\u4f5c\u4eba\u5458\u540d\u518c\uff0c\u5357\u533a\u5165\u5ba4\u76d7\u7a83\u5c0f\u7ec4\u7684\u4fa6\u63a2\u5c3c\u514b\u00b7\u5361\u7279\u65af(Nick Kartes)\u57282019\u5e749\u6708\u4f7f\u7528\u4ed6\u7684\u201c@seattle.gov\u201d\u5de5\u4f5c\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u6ce8\u518c\u4e86Clearview\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8be5\u670d\u52a1\u53d1\u9001\u7684\u901a\u77e5\u770b\u5230\uff0c\u4ed6\u767b\u5f55\u8be5\u670d\u52a1\u7684\u6b21\u6570\u8d85\u8fc730\u6b21\uff0c\u6700\u8fd1\u4e00\u6b21\u662f\u57282020\u5e744\u670822\u65e5\u3002\u5bf9\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\u4e2d\u5217\u51fa\u7684IP\u5730\u5740\u8fd0\u884cWHOIS\u67e5\u8be2\uff0c\u53d1\u73b0\u7528\u4e8e\u767b\u5f55\u5361\u7279\u65af\u4fa6\u63a2\u8d26\u6237\u7684\u8bbe\u5907\u8fde\u63a5\u5230\u4e86\u897f\u96c5\u56fe\u5e02\u7684\u7f51\u7edc\u3002\n2019\u5e749\u6708\uff0c\u5361\u7279\u65af\u8b66\u63a2\u4e3b\u52a8\u8054\u7cfb\u8be5\u516c\u53f8\uff0c\u8981\u6c42\u5bf9\u65b9\u7535\u8bdd\u4fdd\u8bc1\u4ed6\u6240\u5728\u516c\u53f8\u548c\u9879\u76ee\u7684\u5b89\u5168\uff0c\u7136\u540e\u5728\u4ed6\u7684\u300a\u897f\u5317\u5730\u533a\u7684\u591a\u4e2a\u5173\u7cfb\u7f51\u300b\u4e2d\u4e3a\u8be5\u4ea7\u54c1\u4ee3\u8a00\u3002\u4ed6\u81ea\u8c6a\u5730\u627f\u8ba4\uff0c\u4ed6\u4e0b\u8f7d\u4e86\u8fd9\u6b3e\u5e94\u7528\u5230\u4ed6\u7684\u624b\u673a\u4e0a\uff0c\u5e76\u201c\u8fdb\u884c\u4e86\u4e00\u4e9b\u8bd5\u9a8c\u201d\uff0c\u8fd9\u8868\u660e\u4ed6\u7684\u641c\u7d22\u83b7\u5f97\u4e86\u201c\u5de8\u5927\u7684\u6210\u529f\u201d\u3002\u4ece\u8fd9\u4e9b\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u5c1a\u4e0d\u6e05\u695a\u4ed6\u7684\u201c\u5b9e\u9a8c\u201d\u662f\u5426\u6d89\u53ca\u793e\u6c11\u515a\u7684\u4efb\u4f55\u79ef\u6781\u8c03\u67e5\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4ed6\u5728\u4f26\u6566\u91d1\u878d\u57ce\u7684\u7f51\u7edc\u4e0a\u4f7f\u7528Clearview\u7684\u8d26\u53f7\u4e0e\u4e00\u4e2a\u4f26\u6566\u91d1\u878d\u57ce\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u76f8\u5173\u8054\u3002\n\u65e0\u8bba\u5982\u4f55\uff0cClearview AI\u663e\u7136\u7b26\u5408\u201c\u76d1\u89c6\u6280\u672f\u201d\u7684\u6807\u51c6\uff0c\u5728\u8be5\u6761\u4f8b\u4e2d\uff0c\u201c\u76d1\u89c6\u201d\u7684\u5b9a\u4e49\u662f\u201c\u4ee5\u4e00\u79cd\u5408\u7406\u5730\u53ef\u80fd\u5f15\u8d77\u5bf9\u516c\u6c11\u81ea\u7531\u3001\u8a00\u8bba\u6216\u7ed3\u793e\u81ea\u7531\u3001\u79cd\u65cf\u516c\u5e73\u6216\u793e\u4f1a\u6b63\u4e49\u7684\u62c5\u5fe7\u7684\u65b9\u5f0f\uff0c\u89c2\u5bdf\u6216\u5206\u6790\u53ef\u8bc6\u522b\u7684\u4e2a\u4eba\u7684\u884c\u52a8\u3001\u884c\u4e3a\u6216\u884c\u52a8\u3002\u201d\n\u56e0\u6b64\uff0c\u9884\u8ba1\u793e\u7f72\u5728\u83b7\u53d6\u548c\u90e8\u7f72\u8fd9\u7c7b\u6280\u672f\u4e4b\u524d\uff0c\u5e94\u8be5\u5df2\u7ecf\u901a\u8fc7\u4e86\u6761\u4f8b\u4e2d\u6982\u8ff0\u7684\u7a0b\u5e8f\u3002\u8fd9\u4e00\u8fc7\u7a0b\u5305\u62ec\u83b7\u5f97\u5e02\u8bae\u4f1a\u7684\u6279\u51c6\uff0c\u586b\u5199\u4e00\u4efd\u76d1\u7763\u5f71\u54cd\u62a5\u544a(SIR)\uff0c\u4ee5\u53ca\u8fdb\u884c\u793e\u533a\u5916\u5c55\u3002Clearview AI\u7684SIR\u6ca1\u6709\u5728\u76d1\u7763\u6761\u4f8b\u7684\u7f51\u7ad9\u4e0a\u5217\u51fa\uff0c\u5feb\u901f\u641c\u7d22\u4e5f\u6ca1\u6709\u627e\u5230\u5e02\u8bae\u4f1a\u7684\u6279\u51c6\u6216\u793e\u6c11\u515a\u7684\u793e\u533a\u5916\u5c55\u5c1d\u8bd5\u3002\n\u8fd9\u9075\u5faa\u4e86\u4e00\u79cd\u65e2\u5b9a\u7684\u6a21\u5f0f\uff0c\u8fd9\u4e00\u6a21\u5f0f\u5728\u4eca\u5e74\u590f\u5929\u5f97\u5230\u4e86\u7a81\u663e\uff0c\u897f\u96c5\u56fe\u8b66\u65b9\u7ecf\u5e38\u70ab\u8000\u8fd9\u9879\u6cd5\u5f8b\u3002\u636e\u300a\u5357\u897f\u96c5\u56fe\u7fe1\u7fe0\u62a5\u300b\u62a5\u9053\uff0c\u5305\u62ec\u897f\u96c5\u56fe\u8b66\u5b98\u5de5\u4f1a\u4e3b\u5e2d\u8fc8\u514b\u00b7\u7d22\u5170\u5728\u5185\u7684\u8b66\u5bdf\u5c06\u4ed6\u4eec\u7684\u9009\u6c11\u767b\u8bb0\u5730\u5740\u5217\u4e3a\u8b66\u533a\uff0c\u8fd9\u65e2\u8fdd\u53cd\u4e86\u9009\u4e3e\u6cd5\uff0c\u4e5f\u8fdd\u53cd\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684\u8b66\u5bdf\u624b\u518c(\u5458\u5de5\u4e0d\u5f97\u56e0\u4e2a\u4eba\u539f\u56e0\u4f7f\u7528\u8b66\u5bdf\u5c40\u7684\u90ae\u5bc4\u5730\u5740)\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5361\u7279\u65af\u4fa6\u63a2\u672c\u4eba\u81ea2016\u5e74\u4ee5\u6765\u4e00\u76f4\u88abOPA\u6307\u63a7\u4e3a\u201c\u5f55\u50cf\u548c\u5f55\u97f3\u201d\uff0c\u5c3d\u7ba1\u5df2\u7ed3\u6848\u7684\u6848\u4ef6\u6458\u8981\u5e76\u672a\u5217\u5728OPA\u7f51\u7ad9\u4e0a\u3002", "note_en": "According to  records recently released by the Seattle Police Department (SPD), a detective working for SPD signed up for and used facial recognition app Clearview AI, which appears to be in violation of the City of Seattle\u2019s  Surveillance Ordinance.\n Clearview AI is a facial recognition startup which landed itself in the midst of  controversy in early 2020 when it was revealed that the company created an app which advertised the ability to match uploaded images to billions of pictures scraped from the internet and social media websites. Journalists also found  well-documented ties between the startup\u2019s founder Hoan Ton-That and far-right figures like Chuck Johnson and Mike Cernovich.\n Released emails indicate that Nick Kartes, a detective on the South Precinct Burglary unit according to a staff roster obtained this summer, signed up for Clearview in September 2019 using his \u201c@seattle.gov\u201d work email address.\n  We can see through notifications sent by the service that he logged into the service over 30 times, as recently as April 22, 2020. Running WHOIS queries on IP addresses listed in these emails  reveals that the devices used to log into Detective Kartes\u2019 account were connected to the City of Seattle network.\n  In September 2019, Detective Kartes reached out to the company to request a phone call for assurances about the \u201csecurity of the company and program\u201d before advocating for the product among his \u201cmany connections in the Northwest region\u201d. He proudly admits that he downloaded the app to his phone and \u201c[did] some experimenting with it\u201d, indicating that his searches were met with \u201cgreat success\u201d. From the emails, it is not clear whether his \u201cexperimenting\u201d involved any active SPD investigations, but we can see that he used Clearview on the City network with an account associated with a City email address.\n  Regardless, Clearview AI clearly fits the criteria for \u201csurveillance technology\u201d, where \u201csurveillance\u201d is defined in  the ordinance as \u201cto observe or analyze the movements, behavior, or actions of identifiable individuals in a manner that is reasonably likely to raise concerns about civil liberties, freedom of speech or association, racial equity or social justice.\u201d\n As such, the SPD is expected to have gone through the process outlined in the ordinance before acquiring and deploying such technology. The process involves getting City Council approval, filling out a Surveillance Impact Report (SIR), and conducting community outreach. No SIR for Clearview AI is listed on the  Surveillance Ordinance website and a quick search did not turn up City Council approval or community outreach attempts by SPD.\n This follows an established pattern, highlighted this summer, where Seattle police regularly flaunt the law. The South Seattle Emerald  reported that cops including Seattle Police Officer Guild chief Mike Solan listed their voter registration address as the police precinct, a violation of both election law and their own  police manual (\u201cEmployees Shall Not Use a Department Mailing Address for Personal Reasons\u201d). It is worth noting that Detective Kartes himself has a sustained OPA allegation for \u201cVideo and Audio Recording\u201d from 2016, although the Closed Case Summary is not listed on  the OPA website.", "posttime": "2020-11-07 11:18:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "caught", "title": "\u8b66\u65b9\u4f7f\u7528Clearview AI\u88ab\u6293\u83b7\uff0c\u53ef\u80fd\u8fdd\u53cd\u76d1\u63a7\u6761\u4f8b", "title_en": "Police Caught Using Clearview AI, Potentially Violating Surveillance Ordinance", "transed": 1, "url": "https://bridgeburners.noblogs.org/post/2020/11/05/seattle-police-caught-using-clearview-ai-potentially-violating-surveillance-ordinance/", "via": "", "real_tags": ["caught"]}]
[{"category": "", "categoryclass": "", "imagename": "f309c571dea2dc17ab0ff44d65b1e678.jpg", "infoid": 1012225, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u7ebf\u4fdd\u9669\u7ecf\u7eaa\u516c\u53f8GoHealth\u5468\u4e09\u9996\u6b21\u516c\u5f00\u52df\u96c6\u8d44\u91d19.14\u4ebf\u7f8e\u5143\uff0c\u8fdc\u9ad8\u4e8e\u9884\u671f\u3002\u8be5\u516c\u53f8\u4e13\u6ce8\u4e8e\u9500\u552eMedicare Advantage\u8ba1\u5212\uff0c\u5176\u80a1\u7968\u5b9a\u4ef7\u4e3a\u6bcf\u80a121\u7f8e\u5143\uff0c\u9ad8\u4e8e18\u81f320\u7f8e\u5143\u7684\u9884\u671f\u533a\u95f4\u3002\u8be5\u516c\u53f8\u5c06\u51fa\u552e4350\u4e07\u80a1\u666e\u901a\u80a1\u3002\n\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u829d\u52a0\u54e5\u7684\u516c\u53f8\u81ea2001\u5e74\u6210\u7acb\u4ee5\u6765\u4e00\u76f4\u5728\u7a33\u6b65\u589e\u957f\uff0c\u5f53\u65f6\u8054\u5408\u521b\u59cb\u4eba\u514b\u6797\u7279\u00b7\u743c\u65af(Clint Jones)\u548c\u5e03\u5170\u767b\u00b7\u514b\u9c81\u5179(Brandon Cruz)\u7684\u4e00\u4f4d\u7ecf\u7eaa\u4eba\u627e\u5230\u4e86\u4ed6\u4eec\uff0c\u5411\u4ed6\u4eec\u51fa\u552e\u4e2a\u4eba\u4fdd\u9669\u5355\u3002\n\u201c\u6211\u4eec\u5f53\u65f6\u6b63\u5728\u6211\u4eec\u7684\u623f\u5b50\u91cc\u5de5\u4f5c\u3002\u90fd\u662f\u7eb8\u8d28\u7684\u3002\u6211\u4eec\u5728\u95ee\u4e3a\u4ec0\u4e48\u4e0d\u5728\u7f51\u4e0a\u53d1\u5e03\uff0c\u201c\u540c\u65f6\u4e5f\u662fGoHealth\u9996\u5e2d\u6218\u7565\u5b98\u7684\u514b\u9c81\u5179\u5728\u63a5\u53d7\u7535\u8bdd\u91c7\u8bbf\u65f6\u8bf4\u3002\n\u9996\u5148\uff0c\u4ed6\u4eec\u5f00\u59cb\u5f00\u53d1\u8f6f\u4ef6\uff0c\u6700\u7ec8\u521b\u5efa\u4e86\u81ea\u5df1\u7684\u673a\u6784\u3002\u8be5\u516c\u53f8\u901a\u8fc7\u9500\u552e\u5e73\u4ef7\u533b\u7597\u6cd5\u6848\u901a\u8fc7\u540e\u521b\u5efa\u7684\u4e2a\u4eba\u8ba1\u5212\u8fc5\u901f\u589e\u957f\uff0c\u4f46\u5728\u8fc7\u53bb\u56db\u5e74\u4e2d\uff0cGoHealth\u5df2\u5c06\u91cd\u70b9\u8f6c\u5411\u9500\u552e\u8054\u90a6\u533b\u7597\u4fdd\u9669\u4f18\u52bf\u8ba1\u5212\u3002\n\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6218\u7565\u529e\u516c\u5ba4\u5e03\u5170\u767b\u00b7\u514b\u9c81\u5179(Brandon Cruz)\u5728\u63a5\u53d7\u7535\u8bdd\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u201c\u6211\u4eec\u4e00\u5ea6\u662fACA\u8ba1\u5212\u7684\u6700\u5927\u53c2\u4e0e\u8005\u3002\u201d\u201c2016\u5e74\u521d\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u8f6c\u5411\u8054\u90a6\u533b\u7597\u4fdd\u9669\uff0c\u4ece\u90a3\u4ee5\u540e\u6211\u4eec\u4e00\u76f4\u5168\u529b\u4ee5\u8d74\u3002\u201d\n\u636e\u8def\u900f\u793e(Reuters)\u62a5\u9053\uff0c\u53bb\u5e74\uff0c\u8be5\u516c\u53f8\u88ab\u79c1\u52df\u80a1\u6743\u516c\u53f8Centerbridge Partners\u6536\u8d2d\uff0c\u4ea4\u6613\u5bf9\u8be5\u516c\u53f8\u7684\u4f30\u503c\u7ea6\u4e3a15\u4ebf\u7f8e\u5143\u3002\u6b64\u6b21IPO\u5c06\u4f7f\u8be5\u516c\u53f8\u4f30\u503c\u8d85\u8fc760\u4ebf\u7f8e\u5143\u3002\n\u8be5\u516c\u53f8\u80a1\u7968\u76ee\u524d\u5728\u7eb3\u65af\u8fbe\u514b\u6302\u724c\u4ea4\u6613\uff0c\u4ee3\u7801\u4e3a\u201cGOCO\u201d\u3002\u8be5\u80a1\u5f00\u76d8\u5f3a\u52b2\uff0c\u62a5\u6bcf\u80a125\u7f8e\u5143\uff0c\u4f46\u6536\u76d8\u65f6\u8dcc\u81f3\u7565\u9ad8\u4e8e19\u7f8e\u5143\u3002\n\u514b\u9c81\u5179\u8868\u793a\uff0c\u4e0a\u5e02\u7684\u90e8\u5206\u76ee\u6807\u662f\u5728\u5ba2\u6237\u4e2d\u5efa\u7acb\u66f4\u5f3a\u7684\u54c1\u724c\u8ba4\u77e5\u5ea6\u3002\u8be5\u516c\u53f8\u8ba1\u5212\u5c06\u90e8\u5206\u6536\u76ca\u7528\u4e8e\u8fdb\u4e00\u6b65\u589e\u957f\u3002\n\u4ed6\u8868\u793a\uff1a\u201c\u5c31\u5e76\u8d2d\u800c\u8a00\uff0c\u6211\u4eec\u6ca1\u6709\u4efb\u4f55\u5177\u4f53\u76ee\u6807\uff0c\u4f46\u5982\u679c\u51fa\u73b0\u4efb\u4f55\u6218\u7565\u6027\u60c5\u51b5\uff0c\u6211\u4eec\u5c06\u5bc6\u5207\u5173\u6ce8\u3002\u201d\n\u5728\u622a\u81f36\u670830\u65e5\u7684\u5b63\u5ea6\uff0c\u8be5\u516c\u53f8\u9884\u8ba1\u8425\u6536\u57281.18\u4ebf\u7f8e\u5143\u81f31.3\u4ebf\u7f8e\u5143\u4e4b\u95f4\uff0c\u6309\u4e2d\u95f4\u4ef7\u8ba1\u7b97\uff0c\u8f83\u53bb\u5e74\u589e\u957f66%\u3002\u4f46\u8be5\u516c\u53f8\u7684\u62db\u80a1\u8bf4\u660e\u4e66\u663e\u793a\uff0c\u8be5\u516c\u53f8\u9884\u8ba1\u51c0\u4e8f\u635f\u57281000\u4e07\u81f32600\u4e07\u7f8e\u5143\u4e4b\u95f4\uff0c\u800c2019\u5e74\u7b2c\u4e8c\u5b63\u5ea6\u7684\u51c0\u6536\u76ca\u4e3a1530\u4e07\u7f8e\u5143\u3002\n2019\u5e74\u5168\u5e74\uff0c\u8be5\u516c\u53f8\u62a5\u544a\u51c0\u6536\u5165\u4e3a5.395\u4ebf\u7f8e\u5143\uff0c\u51c0\u6536\u5165\u4e3a3050\u4e07\u7f8e\u5143\u3002\n\u4e00\u4e2a\u6f5c\u5728\u7684\u98ce\u9669\u662f\uff0cGoHealth\u7684\u5f88\u5927\u4e00\u90e8\u5206\u6536\u5165\u6765\u81ea\u5c11\u6570\u51e0\u5bb6\u4fdd\u9669\u516c\u53f8\u30022020\u5e74\u7b2c\u4e00\u5b63\u5ea6\uff0cHumana\u548cAnhim\u62e5\u6709\u7684\u8fd0\u8425\u5546\u5206\u522b\u5360\u5176\u51c0\u6536\u5165\u768442%\u548c32%\u3002\nGoHealth\u662f\u672c\u6708\u8df3\u5165\u80a1\u5e02\u7684\u51e0\u5bb6\u516c\u53f8\u4e4b\u4e00\uff0c\u81ea\u75ab\u60c5\u5f00\u59cb\u4ee5\u6765\uff0c\u80a1\u5e02\u4e00\u76f4\u5728\u6500\u5347\u3002\n\u201c\u50cf\u8bb8\u591a\u516c\u53f8\u4e00\u6837\uff0c\u5f53\u5927\u6d41\u884c\u5f00\u59cb\u8513\u5ef6\uff0c\u60c5\u51b5\u53d8\u5f97\u4e0d\u786e\u5b9a\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e86\u3002\u6211\u4eec\u6309\u4e0b\u4e86\u6682\u505c\u6309\u94ae\uff0c\u201c\u514b\u9c81\u5179\u8bf4\u3002\u201c\u7136\u540e\uff0c\u5b83\u5f00\u59cb\u53d8\u5f97\u6709\u70b9\u5f00\u653e\u4e86\u3002\u201d\nGoHealth\u7684\u9996\u6b21\u516c\u5f00\u52df\u80a1(IPO)\u9884\u8ba1\u5c06\u4e8e\u5468\u4e94\u7ed3\u675f\u3002\u9ad8\u76db(Goldman Sachs)\u3001\u7f8e\u56fd\u94f6\u884c\u8bc1\u5238(BofA Securities)\u548c\u6469\u6839\u58eb\u4e39\u5229(Morgan Stanley)\u62c5\u4efb\u7ba1\u7406\u7c3f\u8bb0\u884c\u3002", "note_en": "Online insurance broker GoHealth raised $914 million in its public debut on Wednesday, well above expectations. The company, which focuses on selling Medicare Advantage plans,  priced its stock at $21 per share, above its estimated range of $18 to $20. The company is selling 43.5 million shares of its common stock.\n The Chicago-based company has been growing steadily since it was founded in 2001, when co-founders Clint Jones and Brandon Cruz were approached by an agent selling them individual insurance policies.\n   \u201cWe were working out of our house. It was all paper-based. We were asking why it wasn\u2019t online,\u201d Cruz, who is also GoHealth\u2019s chief strategy officer, said in a phone interview.\n First, they started building software, before eventually creating their own agency. The company grew quickly by selling individual plans created with the passage of the Affordable Care Act, but in the last four years, GoHealth has shifted its focus to selling Medicare Advantage plans.\n \u201cWe were the largest enroller of ACA plans back in the day at one point,\u201d Co-founder and Chief Strategy Office Brandon Cruz said in a phone interview. \u201cIn early 2016, we shifted our focus to Medicare, and we\u2019ve been all in on Medicare ever since.\u201d\n Last year, it was acquired by private equity firm Centerbridge Partners, in a deal that valued the company around $1.5 billion,  according to Reuters. The IPO would give the company a valuation above $6 billion.\n The company\u2019s stock is now listed on Nasdaq as \u201cGOCO.\u201d It opened strong at $25 per share, but dipped to just over $19 per share by market close.\n Cruz said part of the goal with going public was to build a stronger brand recognition with customers. The company plans to use part of the proceeds to further its growth.\n \u201cWe don\u2019t have any specific objectives as far as M&amp;A, but we\u2019ll keep our eye open if anything strategic comes along,\u201d he said.\n For the quarter ending in June 30, the company expects revenues between $118 million and $130 million, up 66% from last year at the midpoint. But the company also expects a net loss between $10 million and $26 million, compared to net income of $15.3 million during the second quarter of 2019,  according to its prospectus.\n For the full year of 2019, the company reported net revenues of $539.5 million and a net income of $30.5 million.\n One potential risk is that GoHealth derives a large portion of its revenue from a handful of insurance carriers. For the first quarter of 2020, carriers owned by Humana and Anthem accounted for 42% and 32% of its net revenues, respectively.\n GoHealth is one of several companies jumping into the stock market this month, which has climbed since the beginning of the pandemic.\n \u201cLike many companies, we were in the process already when the pandemic started taking hold and things became uncertain. We hit the pause button,\u201d Cruz said. \u201cThen it started to open up a little bit.\u201d\n GoHealth\u2019s initial public offering is expected to close on Friday. Goldman Sachs, BofA Securities and Morgan Stanley acted as managing bookrunners.", "posttime": "2020-07-16 13:53:23", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "ipo,share", "title": "GoHealth\u662f\u4e00\u5bb6\u5141\u8bb8\u7528\u6237\u8d2d\u4e70\u533b\u7597\u4fdd\u9669\u8ba1\u5212\u7684\u5728\u7ebf\u95e8\u6237\u7f51\u7ad9\uff0c\u5728\u7eb3\u65af\u8fbe\u514b\u9996\u6b21\u516c\u5f00\u52df\u80a1(IPO)\u5b9a\u4ef7\u4e3a21\u7f8e\u5143\u540e\uff0c\u6536\u76d8\u4ef7\u4e3a\u6bcf\u80a119\u7f8e\u5143\uff0c\u7b79\u8d449.14\u4ebf\u7f8e\u5143", "title_en": "GoHealth, an online portal that lets users buy health insurance plans, closes at ~$19/share, after pricing at $21/share, raising $914M in its Nasdaq IPO", "transed": 1, "url": "https://medcitynews.com/2020/07/online-insurance-broker-gohealth-goes-public-for-914-million/", "via": "", "real_tags": ["ipo", "share"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1012224, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e9\u57282019\u5e74\u672b\uff0c\u6211\u5c31\u89e3\u5256\u4e86\u4e00\u53f0Reolink B800 IP\u6444\u50cf\u5934\uff0c\u4ee5\u6f14\u793a\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u7684\u5404\u4e2a\u90e8\u5206\u3002\u5b9e\u9645\u4e0a\uff0c\u5b83\u7684\u786c\u4ef6\u76f8\u5f53\u4e0d\u9519-\u5b83\u6709\u4e00\u4e2a4K\u89c6\u9891\u4f20\u611f\u5668\uff0c\u4e00\u4e2a\u9ea6\u514b\u98ce\uff0c\u4ee5\u592a\u7f51\u4f9b\u7535\uff0c\u540d\u4e49\u4e0a\u662f\u9632\u6c34\u7684\u3002\u662f\u7684\uff0c\u5b83\u8fd0\u884c\u7684\u662fLinux\u3002\n\u5b83\u662f\u7531\u516d\u4e2a\u6444\u50cf\u5934\u548c\u4e00\u4e2aNVR(\u4e5f\u4e3a\u6444\u50cf\u5934\u4f9b\u7535\u7684\u4e13\u7528\u5f55\u50cf\u76d2)\u7ec4\u6210\u7684\u201c\u5957\u4ef6\u201d\u3002\u4e0d\u5e78\u7684\u662f\uff0cNVR\u76f8\u5f53\u8d2b\u4e4f\uff1a\u5b83\u663e\u7136\u662f\u4e00\u4e2a\u652f\u63014K\u6444\u50cf\u5934\u7684\u73b0\u6709\u673a\u578b\uff0c\u5b83\u5f88\u96be\u540c\u65f6\u652f\u6301\u4e00\u4e2a\u4ee5\u4e0a\u7684\u89c2\u4f17\u3002\n\u7136\u800c\uff0c\u6211\u4e70\u4e86\u8fd9\u4e9b\u6444\u50cf\u5934\uff0c\u56e0\u4e3a\u6211\u76f8\u4fe1\u5b83\u4eec\u652f\u6301\u5f00\u653e\u6807\u51c6\uff0c\u5982ONVIF\uff0c\u6240\u4ee5\u6211\u5c31\u628aNVR\u6362\u6210\u5728\u6211\u7684\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684Blue Iris\u526f\u672c\u3002\u5f53\u65f6\uff0cReolink\u7684\u652f\u6301\u9875\u9762\u6e05\u695a\u5730\u8868\u660e\uff0c\u4ed6\u4eec\u6240\u6709\u7684\u975e\u7535\u6c60\u4f9b\u7535\u7684\u6444\u50cf\u5934\u90fd\u652f\u6301RTSP\u3002\u5b89\u88c5\u7cfb\u7edf\u540e\uff0c\u5f88\u660e\u663e\uff0c\u8fd9\u4e9b\u6444\u50cf\u5934\u5b9e\u9645\u4e0a\u5e76\u4e0d\u652f\u6301RTSP-\u5b83\u4eec\u4e0a\u552f\u4e00\u6253\u5f00\u7684\u7aef\u53e3\u662f\u7aef\u53e39000\u3002\u7136\u540e\uff0c\u5c31\u5728\u6211\u7684\u8fd4\u56de\u7a97\u53e3\u4e4b\u5916\uff0cReolink\u66f4\u65b0\u4e86\u4ed6\u4eec\u7684\u652f\u6301\u9875\u9762\uff0c\u8bf4\u4ed6\u4eec\u7684\u652f\u6301\u9875\u9762\u4e0a\u6ca1\u6709RTSP\u3002\u7136\u540e\uff0c\u5c31\u5728\u6211\u7684\u8fd4\u56de\u7a97\u53e3\u4e4b\u5916\uff0cReolink\u66f4\u65b0\u4e86\u4ed6\u4eec\u7684\u652f\u6301\u9875\u9762\uff0c\u8bf4\u4ed6\u4eec\u7684\u652f\u6301\u9875\u9762\u4e0a\u6ca1\u6709RTSP-\u5b83\u4eec\u552f\u4e00\u6253\u5f00\u7684\u7aef\u53e3\u662f9000\u7aef\u53e3\u3002\u7136\u540e\uff0c\u5c31\u5728\u6211\u8fd4\u56de\u7684\u7a97\u53e3\u4e4b\u5916\uff0cReolink\u66f4\u65b0\u4e86\u4ed6\u4eec\u7684\u652f\u6301\u9875\u9762\uff0c\u8bf4\u3002\n\u5047\u5230\u6211\u51b3\u5b9a\u6309\u4e0b\u6444\u50cf\u673a\uff0c\u53cd\u5411\u5de5\u7a0b\u534f\u8bae\uff0c\u5e76\u7f16\u5199\u6211\u81ea\u5df1\u7684\u8f6f\u4ef6\u6765\u83b7\u5f97\u89c6\u9891\u6d41\u3002\u6700\u7ec8\u7ed3\u679c\u662f\u4e00\u6b3e\u540d\u4e3aNeolink\u7684\u65b0\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5b83\u5141\u8bb8Blue Iris\u3001Shinobi\u6216\u5176\u4ed6NVR\u8f6f\u4ef6\u4ece\u672a\u7ecf\u4fee\u6539\u7684Reolink\u6444\u50cf\u673a\u63a5\u6536\u89c6\u9891\u3002\n\u4f5c\u4e3a\u7b2c\u4e00\u6b65\uff0c\u6211\u542f\u52a8\u4e86Wireshark\u5e76\u6355\u83b7\u4e86\u6444\u50cf\u5934\u4e0e\u5176\u5b98\u65b9Reolink PC\u5ba2\u6237\u7aef1\u4e4b\u95f4\u7684\u6d41\u91cf\u3002\n\u6211\u552f\u4e00\u60f3\u5230\u7684\u662f\u5728\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5f00\u5934\u51fa\u73b0\u4e00\u4e2a\u540c\u6b65\u5b570xf0debc0a\u3002(\u5728\u5c0f\u7aef\uff0c\u8fd9\u662f0x0abcdef0\u3002)\u6211\u968f\u673a\u5e94\u53d8\u5730\u641c\u7d22\u4e86\u4e00\u4e0b\u8fd9\u4e2a\uff0c\u5b9e\u9645\u4e0a\u5728GitHub\u4e0a\u627e\u5230\u4e86\u4e00\u4e2a2015\u5e74\u7684\u9879\u76ee\uff0c\u5b83\u8bd5\u56fe\u4eceSwann\u76f8\u673a\u68c0\u7d22\u6570\u636e\uff01\u5feb\u901f\u6d4f\u89c8\u4e00\u4e0b\u4ee3\u7801\u5c31\u4f1a\u53d1\u73b0\uff0c\u5c3d\u7ba1\u5b83\u4eec\u5171\u4eab\u540c\u6b65\u5b57\u548c\u6570\u636e\u5305\u5934\uff0c\u4f46\u6211\u7684\u76f8\u673a\u548c\u8fd9\u4e9b\u8001\u5f0f\u76f8\u673a\u7684\u534f\u8bae\u975e\u5e38\u4e0d\u540c\u3002\u6709\u6548\u8d1f\u8f7d\u3002\u7531\u4e8e\u4e00\u4e9b\u6709\u95ee\u9898\u7684\u6307\u9488\u64cd\u4f5c\uff0c\u4ee3\u7801\u751a\u81f3\u65e0\u6cd5\u8fd0\u884c\u3002\u662f\u65f6\u5019\u63d0\u53d6\u6211\u80fd\u63d0\u53d6\u7684\u5185\u5bb9\u4e86-\u6807\u9898\u5e03\u5c40\u662f\u6b63\u786e\u7684-\u7136\u540e\u7ee7\u7eed\u524d\u8fdb\u3002\n\u603b\u662f\uff0c\u603b\u662f\u82b1\u65f6\u95f4\u5f00\u53d1\u8c03\u8bd5\u6216\u5206\u6790\u5de5\u5177\u3002\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u8fd9\u6837\u7684\u5de5\u5177\u53ef\u4ee5\u7acb\u5373\u4e3a\u60a8\u7684\u65f6\u95f4\u6295\u8d44\u5e26\u67654\u500d\u6216\u66f4\u591a\u7684\u56de\u62a5\u3002\u6839\u636e\u6211\u6240\u77e5\u9053\u7684\uff0c\u6211\u80fd\u591f\u4f7f\u7528Mika\u975e\u5e38\u68d2\u7684\u6559\u7a0b\u4e3aWireshark\u7f16\u5199\u4e00\u4e2a\u201c\u767d\u5ddd\u201d\u534f\u8bae\u89e3\u6790\u5668\u3002\u8fd9\u65e2\u7b80\u5355\u53c8\u6709\u8da3\uff1aWireshark\u5141\u8bb8\u60a8\u7528Lua\u7f16\u5199\u89e3\u6790\u5668(\u514d\u8d23\u58f0\u660e\uff1a\u60a8\u5bf9\u4e50\u8da3\u7684\u5b9a\u4e49\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c)\u3002\u73b0\u5728Wireshark\u53ef\u4ee5\u5411\u6211\u663e\u793a\u8d1f\u8f7d\u957f\u5ea6\u548c\u6d88\u606fID\u3002\u867d\u7136\u4e0d\u591a\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f00\u59cb\u3002\n\u4e3a\u4e86\u5f04\u6e05\u695a\u534f\u8bae\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u52a0\u5bc6\u548c/\u6216\u6a21\u7cca\u5904\u7406\uff0c\u6211\u8ba1\u5212\u5bf9\u56fa\u4ef6\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u3002\u6211\u975e\u5e38\u786e\u4fe1\u5e95\u5c42\u89c6\u9891\u4f7f\u7528\u7684\u662f\u4f17\u6240\u5468\u77e5\u7684\u534f\u8bae(\u7279\u522b\u662f\u56e0\u4e3a\u6444\u50cf\u673a\u4f3c\u4e4e\u6709\u4e13\u7528\u7684\u89c6\u9891\u7f16\u7801\u786c\u4ef6)\u3002\u56e0\u6b64\uff0c\u6211\u8981\u505a\u7684\u201c\u6240\u6709\u201d\u5de5\u4f5c\u5c31\u662f\u5bf9\u534f\u8bae\u7684\u5176\u4f59\u90e8\u5206\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u3002\n\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u8fd9\u6b3e\u76f8\u673a\u4e3a\u4ec0\u4e48\u4e0d\u652f\u6301RTSP\u548c/\u6216ONVIF\u662f\u5f88\u81ea\u7136\u7684\u3002\u6bd5\u7adf\uff0c\u5f88\u591a\u5176\u4ed6\u7684Reolink\u76f8\u673a\u90fd\u652f\u6301\u3002\u56e0\u4e3a\u6211\u60f3\u8ba9\u4ed6\u4eec\u76f8\u4fe1\uff0c\u6211\u4f1a\u63d0\u51fa\u8fd9\u6837\u4e00\u79cd\u53ef\u80fd\u6027\uff0cReolink\u5728\u8fd9\u6b3e\u76f8\u673a\u4e0a\u7684\u5b58\u50a8\u7a7a\u95f4\u5df2\u7ecf\u7528\u5b8c\uff0c\u4e0d\u5f97\u4e0d\u524a\u51cf\u4e00\u4e9b\u529f\u80fd\u3002\n\u6bd5\u7adf\uff0c\u4e00\u575716MB\u7684\u95ea\u5b58\u82af\u7247\u8981\u591a\u82b1\u6574\u6574\u4e24\u6bdb\u94b1\uff0c\u8fd9\u53ea\u662f\u4e00\u79cd\u8282\u7ea6\u6210\u672c\u7684\u63aa\u65bd\uff0c\u7edd\u5bf9\u4e0d\u662f\u5382\u5546\u9501\u5b9a\u7684\uff0c\u55ef\uff1f\n\u597d\u7684\u3002\u7531\u4e8e\u534f\u8bae\u4e0d\u80fd\u7acb\u5373\u8bbf\u95ee\uff0c\u662f\u65f6\u5019\u6253\u5f00\u8fd9\u4e2a\u6444\u50cf\u5934\u4e86\u3002\u6211\u4e4b\u524d\u62c6\u89e3\u6444\u50cf\u5934\u7684\u65f6\u5019\u5df2\u7ecf\u8868\u660e\uff0c\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u5c0f\u7684Linux\u7cfb\u7edf\uff0c\u5b83\u4f7f\u7528\u7684\u662fSPI\u6216FLASH-BOG\u6807\u51c6\u3002\u6211\u60f3\u5c1d\u8bd5\u4e00\u4e0b\u6211\u524d\u6bb5\u65f6\u95f4\u5728\u6dd8\u5b9d\u4e0a\u53d1\u73b0\u5e76\u8ba2\u8d2d\u7684\u4e00\u4e2a\u975e\u5e38\u6574\u6d01\u7684\u5c0fSOIC\u63d2\u5ea7\u3002\u6211\u628a\u95ea\u5149\u706f\u62c6\u5f00\uff0c\u710a\u63a5\u5728\u4e00\u4e2a\u63d2\u5ea7\u4e0a\uff0c\u800c\u4e0d\u662f\u50cf\u4ee5\u524d\u90a3\u6837\uff0c\u6211\u5728\u6dd8\u5b9d\u4e0a\u53d1\u73b0\u5e76\u8ba2\u8d2d\u4e86\u4e00\u4e2a\u975e\u5e38\u6f02\u4eae\u7684\u5c0fSOIC\u63d2\u5ea7\uff0c\u4e8e\u662f\u6211\u628a\u95ea\u5149\u706f\u62c6\u5f00\uff0c\u710a\u63a5\u5728\u4e00\u4e2a\u63d2\u5ea7\u4e0a\u3002\n\u76f8\u673a\u73b0\u5728\u88ab\u6c38\u4e45\u5730\u4fdd\u62a4\u4e86-\u6211\u65e0\u6cd5\u505a\u4efb\u4f55\u4e8b\u60c5\u6765\u628a\u5b83\u780c\u6210\u7816\u5757(\u6211\u603b\u662f\u53ef\u4ee5\u7528\u95ea\u5b58\u5237\u65b0\u5b83)\uff0cReolink\u4e5f\u65e0\u6cd5\u963b\u6b62\u6211\u5728\u5b83\u4e0a\u8fd0\u884c\u6211\u81ea\u5df1\u7684\u4ee3\u7801(\u56e0\u4e3a\u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u6211\u53ef\u4ee5\u63a7\u5236\u6267\u884c\u7684\u7b2c\u4e00\u6761\u6307\u4ee4)\u3002\n\u73b0\u5728\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u95ea\u5b58\u63d2\u5165\u63d2\u5ea7\uff0c\u6211\u5c06\u5176\u503e\u5012\uff0c\u5e76\u4f7f\u7528binwald\u68c0\u67e5\u5e03\u5c40\u3002\u8fd9\u662f\u95ea\u5b58\u5e03\u5c40-\u5de5\u7a0b\u5e08\u503e\u5411\u4e8e\u9009\u62e9\u7684\u6f02\u4eae\u7684\u5706\u5f62\u5b57\u8282\u504f\u79fb\u91cf\u30023Bootloader\u3001Linux uImage\u3001squashfs rootfs\u548cJFFS2\u6c38\u4e45\u5206\u533a\u3002\n\u5341\u8fdb\u5236\u5341\u516d\u8fdb\u5236DESCRIPTION--67266 0x106C2 ecos RTOS\u5b57\u7b26\u4e32\u53c2\u80031769472 0x1B0000 uImage\u6807\u59343604480 0x370000 Squashfs\u6587\u4ef6\u7cfb\u7edf\uff0c\u5c0f\u5b57\u8282\u5e8f7798784 0x770000 JFFS2\u6587\u4ef6\u7cfb\u7edf\uff0c\u5c0f\u5b57\u8282\u5e8f\u3002\n\u8fd9\u4e5f\u4e0e\u8fd9\u5f20\u7531\u4e00\u4e2a\u540d\u4e3aBinVis\u7684\u6574\u6d01\u7684\u5c0f\u5de5\u5177\u5236\u4f5c\u7684Flash\u56fe\u50cf\u7684\u53ef\u89c6\u5316\u6548\u679c\u5f88\u597d\u5730\u543b\u5408\u3002\n\u6211\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\u662f\u627e\u5230\u5b9e\u9645\u7684\u76f8\u673a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u5b83\u5f88\u5bb9\u6613\u627e\u5230\uff1b\u5b83\u4f4d\u4e8e\u81ea\u5df1\u7684\u76ee\u5f55/mnt/app/dvr\u4e2d\u3002DVR\u4e8c\u8fdb\u5236\u6587\u4ef6\u8fd8\u6709\u4e00\u4e2a\u9644\u5e26\u7684dvr.xml\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002\u8fc7\u4e86\u4e00\u4f1a\u513f\uff0c&amp\uff1bmldr\u679c\u7136\u6709\u4e86\u795e\u5947\u7684\u5355\u8bcdONVIF\u548cRTSP\uff01\n\u6211\u6000\u7591\u8fd9\u4e9b\u4ec5\u4ec5\u662f\u6307\u793a\u8f6f\u4ef6\u542f\u7528\u54ea\u4e9b\u529f\u80fd\u7684\u529f\u80fd\u6807\u5fd7\u3002\u5982\u679c\u6211\u53ea\u5c06\u8fd9\u4e9b0\u66f4\u6539\u4e3a1\uff0c\u4f1a\u600e\u4e48\u6837\uff1f\n\u91cd\u65b0\u6784\u5efarootfs\u5e76\u4e0d\u50cf\u89e3\u538b\u5b83\u90a3\u4e48\u5bb9\u6613\uff0c\u4f46\u6211\u901a\u8fc7\u53cd\u590d\u8bd5\u9a8c\u62fc\u51d1\u51fa\u4e86\u4e00\u4e2a\u547d\u4ee4\uff0c\u6211\u5e0c\u671b\u5f97\u5230\u4e0ebinwalk\u62a5\u544a\u7684\u683c\u5f0f\u5b8c\u5168\u76f8\u540c\u7684squashfs\u683c\u5f0f\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u786e\u5b9a\u80a1\u7968\u5185\u6838\u4f1a\u6302\u8f7d\u5b83\u3002\u56e0\u4e3a\u6211\u57fa\u672c\u4e0a\u662f\u5728\u76f2\u76ee\u5730\u8fd0\u884c\uff0c\u6ca1\u6709UART\u63a7\u5236\u53f0\uff0c\u6240\u4ee5\u6211\u4e0d\u60f3\u6709\u4efb\u4f55\u9ebb\u70e6\u3002\n$mksquashfs new-squashfs-root/new-squashfs.img-comp xz-b 262144-all-root-noappend$dd if=new-squashfs.img of=pwned.bin bs=1 Seek=$((0x370000))conv=notrunc$flashrom-p ft2232_spi\uff1atype=2232h\uff0cport=A-w pwned.bin\u3002\n\u5509\uff0c\u4e8b\u60c5\u4e0d\u662f\u8fd9\u4e48\u5bb9\u6613\u7684\u3002\u6444\u50cf\u673a\u8868\u73b0\u51fa\u660e\u663e\u7684\u7f3a\u4e4f\u884c\u4e3a\u6539\u9769\uff1a\u6ca1\u6709\u65b0\u7684\u7aef\u53e3\u5f00\u653e\uff0c\u4ec0\u4e48\u90fd\u6ca1\u6709\u3002\n\u4e3a\u4e86\u8fdb\u884c\u6bd4\u8f83\uff0c\u6211\u4e0b\u8f7d\u5e76\u89e3\u538b\u4e86\u53e6\u4e00\u53f0\u652f\u6301RTSP\u7684Reolink\u76f8\u673a\u7684\u56fa\u4ef6\u66f4\u65b0\u3002\u90a3\u53f0\u76f8\u673a\u7684DVR\u4e8c\u8fdb\u5236\u6587\u4ef6\u63a5\u8fd18\u5146\u5b57\u8282\uff0c\u800c\u6211\u7684\u53d7\u5bb3\u8005\u7684DVR\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ea\u67093\u4e2a\u591a\u4e00\u70b9\u3002\u663e\u7136\uff0c\u5de5\u7a0b\u5e08\u4eec\u7f16\u8bd1\u51fa\u4e86\u4e0d\u9700\u8981\u7684\u4f4d\u3002\n\u597d\u7684\u3002\u5982\u679cReolink\u5df2\u7ecf\u628a\u989d\u5916\u7684\u529f\u80fd\u7f16\u8bd1\u51fa\u6765\u4e86\uff0c\u90a3\u4e48\u76f8\u673a\u81f3\u5c11\u80fd\u505a\u7684\u5c31\u662f\u7ed9\u6211\u4e00\u4e2a\u5916\u58f3\u3002\u5f53\u6211\u5728\u8fd9\u91cc\u7684\u65f6\u5019\uff0c\u6211\u51b3\u5b9a\u505a\u4e00\u4e9b\uff0c\u55ef\uff0c\u989d\u5916\u7684\u4fee\u6539\u3002\n\u5feb\u901f\u6d4f\u89c8\u4e00\u4e0bGoogle\u5e76\u6ca1\u6709\u7ed9\u51fa\u6211\u6b63\u5728\u5bfb\u627e\u7684\u5de5\u5177\u7684\u9884\u6784\u5efa\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u76f8\u53cd\uff0c\u6211\u7b7e\u51fa\u4e86\u4e00\u4e2a\u6700\u65b0\u7684Buildroot\u526f\u672c\uff0c\u5e76\u5feb\u901f\u5c06\u5176\u8bbe\u7f6e\u4e3a\u4f7f\u7528\u9759\u6001\u94fe\u63a5\u7684\u57fa\u51c6MIPS\u914d\u7f6e\uff0c\u7136\u540e\u8981\u4e86gdbserver\u3001\u5e26\u6709\u6240\u6709\u8865\u4e01\u7684busybox\u548cstrace\u7684\u526f\u672c\uff1a\n30\u5206\u949f\u540e\uff0c\u6211\u62ff\u5230\u4e86\u6211\u7684\u5de5\u5177\u3002\u5728binwald\u89e3\u538b\u7f29\u7684rootfs\u6811\u4e2d\uff0c/etc/init.d\u4e2d\u6709\u51e0\u79cd\u5e38\u89c1\u7684\u542f\u52a8\u811a\u672c\u3002\u5c06\u6211\u7cbe\u5fc3\u8bbe\u8ba1\u7684Busybox\u590d\u5236\u5230/bin\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a\u540d\u4e3atelnetd\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u6211\u5728\u5176\u4e2d\u4e00\u4e2a\u542f\u52a8\u811a\u672c\u4e2d\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u4e00\u884c\uff1a\n\u6211\u6253\u7b97\u4ece\u56fa\u4ef6\u7684\u9759\u6001\u5206\u6790\u5f00\u59cb\uff0c\u9996\u5148\u5bf9\u52a0\u5bc6\u65b9\u6848\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\u3002\u5982\u679c\u6211\u88ab\u5361\u4f4f\u4e86\uff0c\u6211\u53ef\u4ee5\u5728\u76f8\u673a\u4e8c\u8fdb\u5236\u6587\u4ef6\u6267\u884c\u65f6\u5bf9\u5176\u8fdb\u884c\u8be2\u95ee\u3002\n\u4e00\u65e6\u6211\u53ef\u4ee5\u64a4\u9500\u52a0\u5bc6\uff0c\u6211\u5c31\u53ef\u4ee5\u770b\u5230\u5b9e\u9645\u7684\u534f\u8bae\u662f\u4ec0\u4e48\u6837\u5b50\u3002\n\u4f20\u7edf\u7684\u7231\u597d\u8005\u9759\u6001\u5206\u6790\u5de5\u5177IDA\u514d\u8d39\u7248\u5728\u8fd9\u91cc\u4e0d\u662f\u5f88\u597d\uff0c\u56e0\u4e3a\u6211\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u662fMIPS\u7684\uff0c\u800c\u514d\u8d39\u7684IDA\u62d2\u7edd\u53cd\u6c47\u7f16\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662fGhidra\uff0c\u8fd9\u662fNSA\u53d1\u5e03\u7684\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u5f00\u6e90\u9006\u5411\u5de5\u7a0b\u5957\u4ef6\u3002\u73b0\u5728\uff0c\u901a\u5e38\u8bf4\u201c\u6211\u8fd0\u884c\u4e86NSA\u7ed9\u6211\u7684\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u201d\u4f1a\u8ba9\u4f60\u7b11\u51fa\u623f\u95f4\u3002\u4f46\u662fGhidra\u5df2\u7ecf\u5f00\u6e90\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u5b89\u88c5\u5b83\u662f\u5408\u7406\u7684\u5b89\u5168\u7684\u3002\u4f46\u662fGhidra\u5df2\u7ecf\u5f00\u6e90\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u5b89\u88c5\u5b83\u662f\u5408\u7406\u7684\u5b89\u5168\u7684\u3002\u73b0\u5728\uff0c\u901a\u5e38\u8bf4\u201c\u6211\u8fd0\u884c\u4e86NSA\u7ed9\u6211\u7684\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u201d\u4f1a\u8ba9\u4f60\u7b11\u51fa\u623f\u95f4\u3002\u4f46\u662fGhidra\u5df2\u7ecf\u5f00\u6e90\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u5b89\u88c5\u5b83\u662f\u5408\u7406\u7684\u5b89\u5168\u7684\u3002\nGhidra\u5f88\u68d2\u3002\u8bf4\u771f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f60\u5fc5\u987b\u652f\u4ed810000\u7f8e\u5143\u7684\u8f6f\u4ef6\uff0c\u5b83\u5e94\u8be5\u662f\u4f60\u8fdb\u884c\u9006\u5411\u5de5\u7a0b\u5de5\u4f5c\u7684\u9996\u9009\u3002\u9664\u4e86\u53cd\u6c47\u7f16\u548c\u5206\u6790\u5668\uff0cGhidra\u8fd8\u5305\u62ec\u4e00\u4e2a\u53cd\u7f16\u8bd1\u5668\uff0c\u5b83\u53ef\u4ee5\u6253\u5370\u4f2aC\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u8ba9\u4f60\u5728MIPS\u6c47\u7f16\u4e2d\u6316\u6398\u3002\u5f53\u4f60\u7528\u7c7b\u578b\u4fe1\u606f\u548c\u540d\u79f0\u6ce8\u91ca\u51fd\u6570\u53c2\u6570\u65f6\uff0c\u5b83\u8fd8\u4f1a\u5b9e\u65f6\u91cd\u65b0\u5206\u6790\u3002\u8fd9\u4e9b\u529f\u80fd\u5f88\u5bb9\u6613\u5c06\u6211\u82b1\u5728\u9006\u5411\u5de5\u7a0b\u4e0a\u7684\u65f6\u95f4\u51cf\u5c11\u4e00\u534a\u3002\n\u56e0\u6b64\uff0c\u5e26\u7740\u5409\u9640\u7f57\u548c\u4ee5\u524d\u4ece\u672a\u505a\u8fc7\u4efb\u4f55\u53cd\u5411\u5de5\u7a0b\u7684\u865a\u5047\u81ea\u4fe1\uff0c\u6211\u53bb\u4e86\u767d\u5ddd\u53cc\u661f\u6d1e\u7a74\u63a2\u9669\u3002\n\u5927\u591a\u6570\u53cd\u5411\u5de5\u7a0b\u5e08\u4ece\u68c0\u67e5\u672a\u77e5\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u4e32\u5f00\u59cb\u662f\u6709\u539f\u56e0\u7684-\u8fd9\u662f\u4e00\u79cd\u6709\u6548\u7684\u6280\u672f\u3002\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\uff0c\u68c0\u67e5\u684c\u9762\u5ba2\u6237\u673a\u548c\u56fa\u4ef6\u670d\u52a1\u5668\u4e2d\u7684\u5b57\u7b26\u4e32\u4f1a\u4ea7\u751f\u8c03\u8bd5\u6253\u5370\u8bed\u53e5\u3001\u51fd\u6570\u540d(Ghidra\u81ea\u52a8\u6ce8\u91ca)\u548c\u5176\u4ed6\u51e0\u4e2a\u5947\u602a\u7684\u5b57\u7b26\u4e32\uff0c\u7a0d\u540e\u6211\u5c06\u8ba8\u8bba\u8fd9\u4e9b\u5185\u5bb9\u3002\u8fd9\u4e24\u4e2a\u4ee3\u7801\u5e93\u663e\u7136\u90fd\u662f\u56f4\u7ed5\u4e00\u4e2a\u5171\u4eab\u7684\u4e13\u6709\u201cBCSDK\u201d\u5e93\u6784\u5efa\u7684\u3002\n\u55ef\uff0c\u8fd9\u91cc\u6ca1\u6709RSA\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u7c7b\u4f3c\u4e8e\u201c\u771f\u6b63\u201d\u52a0\u5bc6\u7684\u4e1c\u897f\uff0c\u9664\u4e86AES\u3002(\u800c\u4e14\u6211\u53ef\u4ee5\u5f88\u5feb\u627e\u5230\u5d4c\u5165\u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55AES\u5bc6\u94a5\u3002)\u3002\n\u8fd9\u4e0d\u662f\u51fd\u6570\u540d\uff0c\u6211\u70b9\u51fb\u4e86find-reference\u5e76\u8bfb\u53d6\u4e86\u4f7f\u7528\u5b83\u7684\u4ee3\u7801\u3002\n\u53ea\u9700\u4e00\u79d2\u949f\u5c31\u80fd\u7406\u89e3\u8fd9\u91cc\u662f\u600e\u4e48\u56de\u4e8b\uff1a\u201c\u52a0\u5bc6\u201d\u65b9\u6848\u5f88\u7b80\u5355\uff1a\n\u592a\u68d2\u4e86\uff0c\u67e5\u7406\uff0c\u4f60\u7684\u201c\u8bbe\u8ba1\u201d\u4e00\u76f4\u90fd\u662f\u5728\u8fd9\u4e2a\u534f\u8bae\u91cc\u6c38\u4e45\u7f16\u7801\u7684\u3002\u5b69\u5b50\u4eec\uff0c\u4e0d\u8981\u73a9\u4f60\u4eec\u81ea\u5df1\u7684\u5bc6\u7801\u3002\n\u4e0d\u5e78\u7684\u662f\uff0cCharlie Scrmbler\u53ea\u80fd\u4eceUDP\u51fd\u6570\u8c03\u7528(\u53c2\u89c1Ghidra\u7a97\u53e3\u5e95\u90e8\u7684\u4ea4\u53c9\u5f15\u7528)\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u662f\u6211\u7684\u9e3d\u5b50\uff1b\u6211\u7684\u76f8\u673a\u4f7f\u7528\u7684\u662fTCP.\u6b64\u65f6\u6211\u4e0d\u77e5\u9053\u5176\u4ed6\u54ea\u4e9b\u201c\u52a0\u5bc6\u201d\u51fd\u6570\u9002\u5408\u6211\u7684\u76f8\u673a\uff0c\u6240\u4ee5\u662f\u65f6\u5019\u62ff\u51fa\u6211\u7684\u4e0b\u4e00\u4e2a\u6b66\u5668\u4e86\u3002\n\u5728\u7b49\u5f85shell\u8bbf\u95ee\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u7684\u4e0b\u4e00\u6b65\u662f\u9644\u52a0\u4e00\u4e2a\u8c03\u8bd5\u5668\uff0c\u5e76\u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\u7684gdbserver\u548cstrace\u5de5\u5177\u4ece\u6211\u7684\u5de5\u4f5c\u7ad9\u8fdc\u7a0b\u63a7\u5236DVR\u7a0b\u5e8f\u3002\u6211\u7684Busybox\u5305\u62ec\u4e00\u4e2aFTP\u670d\u52a1\u5668\u548c\u4e00\u4e2aTCP\u5305\u88c5\u5668\uff1a\n\u4f7f\u7528\u6b64\u8bbe\u7f6e\uff0c\u6211\u53ef\u4ee5\u5c06\u4efb\u4f55\u6211\u60f3\u8981\u7684\u5de5\u5177\u63a8\u9001\u5230\u76f8\u673a\u6587\u4ef6\u7cfb\u7edf\uff0c\u5373\u4f7f\u6211\u6ca1\u6709\u5c06\u5b83\u4eec\u6253\u5305\u5230\u56fa\u4ef6\u4e2d\u3002\u5728\u53d8\u5f97\u975e\u5e38\u4e4f\u5473\u4e4b\u524d\uff0c\u6211\u624b\u52a8\u5b8c\u6210\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u5927\u7ea6\u4e24\u6b21\u3002\u8fd9\u662f\u4e00\u79cd\u53ef\u4ee5\u4f7f\u7528Expect\u81ea\u52a8\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u5373Tcl(\uff01)\u3002\u4f2a\u88c5\u6210\u63a7\u5236\u53f0\u7528\u6237\u7684\u7a0b\u5e8f\u3002\u6211\u7f16\u5199\u4e86\u8fd9\u4e9b\u4ea4\u4e92\u7684\u811a\u672c\uff0c\u4ece\u800c\u5c06\u8fde\u63a5\u3001\u5de5\u5177\u63a8\u9001\u548cGDB\u8bbe\u7f6e\u7b80\u5316\u4e3a\uff1a\n\u6b64\u8bbe\u7f6e\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u6211\u53ef\u4ee5\u5c06\u6211\u60f3\u8981\u5728\u542f\u52a8\u65f6\u8fd0\u884c\u7684\u4efb\u4f55gdb\u547d\u4ee4\u7c98\u8d34\u5728\u811a\u672c\u7684\u672b\u5c3e\uff0c\u800c\u4e0d\u662f\u7f16\u5199\u4e13\u7528\u7684gdb\u811a\u672c\u3002\u8fd9\u4e9b\u52a8\u6001printf\u547d\u4ee4\u53ea\u9700\u5728\u76f8\u673a\u547d\u4e2d\u65ad\u70b9\u65f6\u5728gdb\u63a7\u5236\u53f0\u4e2d\u6253\u5370\uff0c\u6709\u52a9\u4e8e\u5728\u4e0d\u505c\u6b62\u76f8\u673a\u7684\u60c5\u51b5\u4e0b\u4e86\u89e3\u6b63\u5728\u8c03\u7528\u54ea\u4e9b\u51fd\u6570\uff1a\n\u5728\u8fde\u63a5\u5e76\u505c\u6b62DVR\u5b88\u62a4\u7a0b\u5e8f\u540e\uff0c\u6444\u50cf\u673a\u7acb\u5373\u5d29\u6e83\u5e76\u91cd\u7f6e\u3002\u7ecf\u8fc7\u5feb\u901f\u8c03\u67e5\uff0c\u6444\u50cf\u673a\u5728/dev/watchdog\u5904\u542f\u7528\u4e86\u770b\u95e8\u72d7-\u8fd9\u662f\u5d4c\u5165\u5f0f\u8bbe\u5907\u975e\u5e38\u5e38\u89c1\u7684\u8bbe\u7f6e\u3002\u6211\u5728\u8fd9\u4e2a\u8f6f\u4ef6\u4e0a\u505a\u5fc3\u5185\u76f4\u89c6\u624b\u672f-\u6211\u4e0d\u9700\u8981\u4e00\u4e9b2\u4f4d\u5916\u56f4\u8bbe\u5907\u5728\u65c1\u8fb9\u5f98\u5f8a\uff0c\u5e76\u7528AED\u51fb\u4e2d\u5b83\uff01\n\u5728\u547d\u4e2d\u65ad\u70b9\u4e4b\u540e\uff0c\u6211\u77e5\u9053\u6211\u6b63\u5728\u5904\u7406\u7684\u662f\u54ea\u4e2a\u52a0\u5bc6\u51fd\u6570\uff1aNets_XmlEncryption\u3002\u8fd9\u7acb\u5373\u662f\u4e2a\u597d\u6d88\u606f\uff0c\u56e0\u4e3a\u5728\u5f04\u6e05\u695a\u52a0\u5bc6\u4e4b\u540e\uff0c\u6211\u53ef\u80fd\u6b63\u5728\u5904\u7406\u5f88\u597d\u7684\u666e\u901aXML\uff0c\u800c\u4e0d\u662f\u4e00\u4e9b\u75af\u72c2\u7684\u534a\u751f\u4e0d\u719f\u7684C\u7ed3\u6784\u3002\n\u6211\u67e5\u770b\u4e86Ghidra\u4e2d\u6709\u95ee\u9898\u7684\u53cd\u7f16\u8bd1\u51fd\u6570\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u4e86\u6ce8\u91ca\u3002Sure\u770b\u8d77\u6765\u786e\u5b9e\u5f88\u719f\u6089&amp\uff1bmldr\u3002\n\u5728\u91cd\u65b0\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5b66\u5230\u4efb\u4f55\u5de5\u7a0b\u5b66\u7684\u7ecf\u9a8c\u6559\u8bad\uff0c\u67e5\u7406\u7684\u5f71\u54cd\u4ecd\u7136\u5b58\u5728\uff01\u8fd9\u662f\u67e5\u7406\u52a0\u5bc6\u673a\u91cd\u65b0\u6295\u5165\u4f7f\u7528\uff0c\u4f46\u6ca1\u6709\u6df7\u5408\u6b65\u9aa4\uff0c\u800c\u4e14\u5bc6\u94a5\u66f4\u77ed\u3002\n\u5f88\u597d\uff0c\u4e0d\u7ba1\u600e\u6837\u3002\u5728\u6211\u7684Wireshark\u5206\u6790\u5668\u4e2d\u5b9e\u73b0\u52a0\u6270\u5668\u5e76\u6ca1\u6709\u82b1\u592a\u957f\u65f6\u95f4-\u5c3d\u7ba1\u6211\u66fe\u77ed\u6682\u5730\u88ab\u4e0d\u540c\u6d88\u606f\u7c7b\u578b\u7684\u4e0d\u540c\u957f\u5ea6\u7684\u6807\u9898\u641e\u7cca\u6d82\u4e86\u3002\u4e00\u65e6\u5b9e\u73b0\uff0c\u6211\u5c31\u4f1a\u770b\u5230\u8fd9\u6837\u4e00\u4e2a\u58ee\u89c2\u7684\u666f\u8c61\uff1a\n\u6211\u4e0d\u4f1a\u7528\u8840\u6dcb\u6dcb\u7684\u7ec6\u8282\u8ba9\u4f60\u611f\u5230\u538c\u70e6\uff0c\u4f46\u6211\u4f1a\u603b\u7ed3\u4e00\u4e0b\u6211\u7684\u53d1\u73b0\u3002\u767d\u5ddd\u534f\u8bae\u591a\u5e74\u6765\u5df2\u7ecf\u7ecf\u5386\u4e86\u51e0\u6b21\u8fed\u4ee3\u3002\u6700\u53e4\u8001\u7684\u534f\u8bae\u4f3c\u4e4e\u662f\u57fa\u4e8eUDP\u7684\uff0c\u4f7f\u7528\u7684\u662f\u540d\u4e3aTUTK\u7684\u4e13\u6709SDK\uff0c\u5728GitHub\u4e0a\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u627e\u5230\u5b83\u7684\u975e\u6cd5\u526f\u672c\u3002\u8fd9\u4e2a\u534f\u8bae\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528\uff0c\u751a\u81f3\u4e0d\u5b58\u5728\u4e8e\u76f8\u673a\u4ee3\u7801\u4e2d\u3002\n\u4e0b\u4e00\u4e2a\u53d8\u4f53\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7eaf\u6587\u672c\u201c\u7ed3\u6784\u5305\u201d\uff0c\u5b83\u7531\u4e00\u4e2a\u6807\u9898\u548c\u4e00\u4e2a\u7531\u6807\u9898\u4e2d\u7684\u6d88\u606fID\u6307\u5b9a\u7684\u6b63\u6587\u7ec4\u6210\u3002\u8fd9\u4e2a\u201c\u4f20\u7edf\u53d8\u4f53\u201d\u5728B800\u4e0a\u77ed\u6682\u4f7f\u7528\uff0c\u4ee5\u4fbf\u4e24\u4e2a\u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u534f\u5546\u5347\u7ea7\u5230\u201c\u73b0\u4ee3\u53d8\u4f53\u201d\uff0c\u8fd9\u662f\u60a8\u5728\u4e0a\u9762\u770b\u5230\u7684\u57fa\u4e8eXML\u7684\u52a0\u6270\u65b9\u6848\u3002\n\u6700\u91cd\u8981\u7684\u662f\uff0c\u73b0\u4ee3\u62a5\u6587\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u5177\u6709\u6709\u6548\u8f7d\u8377\u3002\u7279\u5b9a\u7684XML\u62a5\u6587\u5c06\u6574\u4e2a\u62a5\u6587ID\u5207\u6362\u5230\u201c\u4e8c\u8fdb\u5236\u6a21\u5f0f\u201d\uff0c\u5728\u540e\u7eed\u7684\u62a5\u6587\u4e2d\u63d0\u4f9b\u539f\u59cb\u6570\u636e\u6d41\u3002\u5f53\u5ba2\u6237\u7aef\u53d1\u9001\u89c6\u9891\u542f\u52a8\u547d\u4ee4\u65f6\uff0c\u6444\u50cf\u673a\u7528\u5305\u542b\u539f\u59cbH.265\u89c6\u9891\u7684\u4e8c\u8fdb\u5236\u6d41\u8fdb\u884c\u56de\u590d\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u6709\u6548\u8f7d\u8377\u4e5f\u53ef\u4ee5\u662f\u66f4\u52a0\u52a0\u5bc6\u7684XML\uff0c\u4e0e\u4e3bXML\u5206\u5f00\u3002\n\u4e00\u65e6\u6211\u7684Wireshark\u5206\u6790\u5668\u5f00\u59cb\u5de5\u4f5c\uff0c\u5c31\u5230\u4e86\u7f16\u5199\u65b0\u5ba2\u6237\u7aef\u7684\u65f6\u5019\u4e86\u3002\u6211\u5e0c\u671b\u6211\u7684\u8f6f\u4ef6\u662f\u5feb\u901f\u3001\u9ad8\u7ea7\u548c\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u5b83\u5c06\u662f\u5b89\u5168\u7cfb\u7edf\u8bbe\u7f6e\u7684\u4e00\u90e8\u5206\u3002\n\u55ef\uff0c\u4e0d\u5b8c\u5168\u662f\u3002Neolink\u662f\u4e00\u4e2a\u5b8c\u5168\u4ece\u5934\u5f00\u59cb\u7684\u65b0\u5ba2\u6237\u7aef\u3002\u5b83\u548c\u6444\u50cf\u673a\u4f7f\u7528\u76f8\u540c\u7684\u767e\u5ddd\u534f\u8bae\uff0c\u5b83\u63d0\u53d6\u89c6\u9891\u5e76\u901a\u8fc7RTSP\u5c06\u5176\u8f6c\u53d1\u5230\u53e6\u4e00\u4e2a\u771f\u6b63\u7684NVR\u5ba2\u6237\u7aef\uff0c\u5982Blue Iris\u3002\u89e3\u6790\u4ee3\u7801\u6709\u70b9\u6bdb\u8338\u8338\u76844\uff0c\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u5f88\u7b80\u5355\u3002\n\u4ee5\u4e0b\u662f\u5ba2\u6237\u7aef\u76ee\u524d\u6240\u80fd\u505a\u7684\u5168\u90e8\u5185\u5bb9\u3002\u5982\u679c\u60a8\u60f3\u67e5\u770b\u6e90\u4ee3\u7801\uff0c\u5219\u975e\u5e38\u5bb9\u6613\u9605\u8bfb\u3002\n\u53d1\u9001\u65e7\u7248\u767b\u5f55\u6d88\u606f\uff0c\u8ba9\u76f8\u673a\u201c\u5347\u7ea7\u201d\u5230\u73b0\u4ee3\u4fe1\u606f\u3002\u6ce8\u610f\uff1a\u5bc6\u7801\u4f7f\u7528\u7eafMD5\u52a0\u5bc6\uff0c\u8fd9\u662f\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u8bbe\u8ba1\u9009\u62e9\u3002\u4f7f\u7528\u4e0d\u5728\u5f69\u8679\u8868\u4e2d\u7684\u5bc6\u7801\uff01\n\u8ba9start_video=BC\uff1a\uff1anew_from_xml(BcMeta{msg_id\uff1aMSG_ID_VIDEO\uff0cCLIENT_IDX\uff1a0\uff0cENCRYPTED\uff1aTRUE\uff0cclass\uff1a0x6414\uff0c}\uff0cBcXml{PREVIEW\uff1aSOME(Preview{version\uff1axml_ver()\uff0cchannel_id\uff1a0\uff0cHandle\uff1a0\uff0cstream_type\uff1a&#34\uff1b\u4e3b\u6d41&#34\uff1b.to_string()\uff0c})\uff0c..\u3002default\uff1a\uff1adefault()})\uff1bsub_Video.send(Start_Video)\uff1f\uff1b\nLOOP{let msg=sub_Video.rx.recv_timeout(self.rx_timeout)\uff1f\uff1b\u5982\u679c\u8ba9BcBody\uff1a\uff1aModern nMsg(Modern nMsg{BINARY\uff1aSOME(BINARY)\uff0c..\u3002})=msg.body{data_out.write_all(binary.as_Slice())\uff1f\uff1b}}\u3002\n\u5bf9\u4e8e\u7a0b\u5e8f\u7684\u8fd9\u4e00\u90e8\u5206\uff0c\u6211\u9009\u62e9\u4e86GStreamer\uff0c\u5b83\u9644\u5e26\u4e86\u4e00\u4e2aRTSP\u670d\u52a1\u5668\u3002GStreamer\u975e\u5e38\u590d\u6742\u3002\u4f46\u662f\uff0c\u4ed6\u4eec\u7684\u793a\u4f8b\u975e\u5e38\u68d2\uff1b\u4ed6\u4eec\u751a\u81f3\u7528Rust\u63d0\u4f9b\u4e86\u4e00\u4e2a\u793a\u4f8bRTSP\u670d\u52a1\u5668\uff01\n\u4ece\u7a0b\u5e8f\u7684\u4efb\u610f\u90e8\u5206\u9988\u9001GStreamer\u6570\u636e\u7684\u4e00\u822c\u65b9\u6cd5\u662f\u4f7f\u7528\u4e00\u4e2a\u540d\u4e3aappsr.\u7684\u5757\uff0c\u8fd9\u4f7f\u60a8\u53ef\u4ee5\u5728GStreamer\u9700\u8981\u6570\u636e\u65f6\u83b7\u5f97\u56de\u8c03\uff0c\u6216\u8005\u53ea\u8981\u6709\u6570\u636e\u5c31\u63a8\u9001\u6570\u636e\u5e76\u8ba9GStreamer\u5904\u7406\u8c03\u5ea6\u3002\u540e\u4e00\u79cd\u65b9\u6cd5\u662f\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u6444\u50cf\u673a\u4e0d\u4f1a\u7b49\u5f85\u4fe1\u53f7\u6765\u53d1\u9001\u89c6\u9891\u6570\u636e\u3002\n\u5173\u952e\u65f6\u523b\u5230\u6765\u4e86&amp\uff1bmldr Blue Iris\u53ef\u4ee5\u8fde\u63a5\u5230\u6211\u7684RTSP\u670d\u52a1\u5668\u5e76\u5b9e\u9645\u663e\u793a\u89c6\u9891\u5417\uff1f\n\u6211\u5df2\u7ecf\u5bf9Neolink\u8fdb\u884c\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684\u6d78\u6ce1\u6d4b\u8bd5\uff0c\u6211\u8ba4\u4e3a\u5b83\u76f8\u5f53\u7a33\u5b9a\u3002\u4e0b\u4e00\u6b65\uff0c\u6211\u5c06\u628a\u5b83\u6253\u5305\u6210\u4e00\u4e2a\u771f\u6b63\u7684Windows\u670d\u52a1(\u800c\u4e0d\u662f\u547d\u4ee4\u884c\u7a0b\u5e8f)\uff0c\u4ee5\u4fbf\u5728\u6211\u7684\u670d\u52a1\u5668\u4e0a\u4e0eBlue Iris\u4e00\u8d77\u8fd0\u884c\u3002\u53bb\u770b\u770b\u5427\uff0c\u81ea\u5df1\u4e0b\u8f7d\u5427\uff01\n\u6211\u4e5f\u6709\u5174\u8da3\u8ba9Neolink\u4e0e\u5176\u4ed6\u201c\u4ec5\u9650NVR\u201d\u7684Reolink\u6444\u50cf\u5934\u4e00\u8d77\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u6444\u50cf\u5934\u76f8\u5f53\u5c11\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u8fd8\u6ca1\u6709\u8d2d\u4e70\u4efb\u4f55\u5176\u4ed6\u786c\u4ef6\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u6709\u8fd9\u6837\u7684\u6444\u50cf\u5934\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6d4b\u8bd5\u5b83\u4e86\u3002\u53ef\u80fd\u5f00\u7bb1\u5373\u7528\u3002\u7aef\u53e3\u626b\u63cf\u4f60\u7684\u6444\u50cf\u5934\uff01\u5982\u679c\u4ed6\u4eec\u6709\u53ef\u7528\u76849000\u7aef\u53e3\uff0c\u4ed6\u4eec\u5f88\u6709\u53ef\u80fd\u4f7f\u7528\u767d\u5ddd\u534f\u8bae\u3002\n\u8fd9\u4e2a\u9879\u76ee\u662f\u5bf9\u9006\u5411\u5de5\u7a0b\u7684\u4e00\u4e2a\u201c\u6070\u5230\u597d\u5904\u201d\u7684\u4ecb\u7ecd\u3002\u50cf\u8fd9\u6837\u7684\u4f4e\u5b89\u5168\u7cfb\u7edf\u53ef\u4ee5\u8ba9\u4f60\u5728\u4e0d\u79ef\u6781\u8bd5\u56fe\u963b\u6320\u9006\u5411\u5de5\u7a0b\u7684\u60c5\u51b5\u4e0b\u81ea\u5b66\u539f\u7406\u3002\u6211\u81ea\u5b66\u4e86\u5f88\u591a\uff0c\u6211\u5e0c\u671b\u5b83\u80fd\u4e3a\u62e5\u6709\u8fd9\u4e9b\u76f8\u673a\u7684\u4eba\u63d0\u4f9b\u5f88\u5927\u7684\u4ef7\u503c\u3002\n\u6700\u540e\uff0c\u4e00\u4e9b\u65e0\u803b\u7684\u81ea\u6211\u63a8\u9500\uff1a\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u5b9e\u9645\u4e0a\u662f\u76f8\u5f53\u5e73\u6613\u8fd1\u4eba\u7684\uff01\u5982\u679c\u4f60\u60f3\u5b66\u4e60\u5982\u4f55\u505a\u8fd9\u7c7b\u4e8b\u60c5\uff0c\u4f60\u53ef\u80fd\u4f1a\u5bf9\u6211\u7684Mastering Embedded Linux\u7cfb\u5217\u611f\u5174\u8da3\uff0c\u8be5\u7cfb\u5217\u65e8\u5728\u5e2e\u52a9\u4f60\u6210\u4e3a\u9ed1\u5ba2\u653b\u51fb\u4f4e\u6210\u672c\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u7684\u4e13\u5bb6\uff0c\u5c31\u50cf\u8fd9\u53f0\u76f8\u673a\u4e00\u6837\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u53ef\u4ee5\u8ba2\u9605\u6211\u7684\u535a\u5ba2\u66f4\u65b0\uff0c\u6216\u8005\u5728\u4e0b\u9762\u7559\u4e0b\u8bc4\u8bba\u3002\u8c22\u8c22\u9605\u8bfb\uff01\nReolink\u652f\u6301\u8bba\u575b\u603b\u662f\u58f0\u79f0\u4ed6\u4eec\u7684\u9875\u9762\u662f\u201c8\u5c0f\u65f6\u524d\u66f4\u65b0\u7684\u201d\u3002\u8fd9\u663e\u7136\u662f\u65e0\u7a3d\u4e4b\u8c08\u3002\u5b83\u4eec\u786e\u5b9e\u66f4\u65b0\u5f97\u76f8\u5f53\u9891\u7e41\uff0c\u4f46\u4e0d\u662f\u7ecf\u5e38\u66f4\u65b0\u3002\u21a9\ufe0e\u3002\n\u8fd9\u6b63\u662f\u5b89\u5168\u5f15\u5bfc\u65b9\u6848\u7684\u8981\u70b9\uff0c\u5728\u8fd9\u79cd\u65b9\u6848\u4e2d\uff0c\u4e0d\u53d8\u7684\u5f15\u5bfcROM\u6839\u636e\u4e0d\u53d8\u7684\u52a0\u5bc6\u5bc6\u94a5\u9a8c\u8bc1\u4ee3\u7801\uff0c\u9632\u6b62\u7be1\u6539\u3002\u4e0d\u7528\u8bf4\uff0c\u8fd9\u6b3e\u76f8\u673a\u6ca1\u6709\u5b9e\u73b0\u8fd9\u6837\u7684\u7ec6\u5fae\u4e4b\u5904\u3002\u21a9\ufe0e\u3002\nbinwald\u8fd8\u4f1a\u51fa\u73b0\u4e00\u5927\u5806\u8bef\u62a5\uff0c\u5f88\u5bb9\u6613\u88ab\u5ffd\u7565\uff0c\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u5f88\u597d\u7684\u820d\u5165\u504f\u79fb\u91cf\u3002\u21a9\ufe0e\u3002\n\u662f\u7684\uff0c\u6211\u662f\u4e00\u53ea\u81ea\u8c6a\u7684\u5bc6\u897f\u897f\u6bd4\u5dde\u7acb\u5927\u5b66\u6597\u725b\u72ac\u3002\u4f60\u4e5f\u53ef\u4ee5\u53c2\u52a0\uff0c\u6210\u4e3a\u4e00\u540d\u8ba1\u7b97\u673a\u5de5\u7a0b\u5e08\uff01\u21a9\ufe0e", "note_en": "Way back in  late 2019, I dissected a Reolink B800 IP camera to demonstrate the various parts of an embedded Linux system.It\u2019s fairly nice hardware, actually\u2014it has a 4K video sensor, a microphone, power over Ethernet, and is nominally waterproof.And yes, it runs Linux.\n  It came in a \u201ckit\u201d of six cameras and an NVR (a dedicated recording box that also powers the cameras).Unfortunately, the NVR is pretty anemic: it\u2019s clearly an existing model with slight changes to support 4K cameras, and it struggles to support more than one viewer at a time.\n However, I bought these cameras because I believed they supported open standards such as ONVIF, so I\u2019d just swap the NVR for a copy of Blue Iris running on my server.At the time, the Reolink support page clearly indicated that all of their non-battery-powered cameras supported RTSP.After the system was installed, it became apparent that the cameras did not in fact support RTSP\u2014the only port open on them was port 9000.Then, barely outside my return window, Reolink updated their support page to say that the cameras would only work with their 8-channel NVR or proprietary viewer apps.\n  Bogus enough that I decided to pwn the camera, reverse engineer the protocol, and write my own software to get the video stream.The end result is a  new piece of open-source software called Neolink, which allows Blue Iris, Shinobi, or other NVR software to receive video from  unmodified Reolink cameras.\n   As a first step, I fired up Wireshark and captured traffic between the camera and its official  Reolink PC client  1.\n  The only thing that jumped out to me was the appearance of a sync word at the beginning of each packet,  0xf0debc0a.(In  little endian, this is  0x0abcdef0.)On a lark, I Googled this, and actually found a  project on GitHub from 2015 which was attempting to retrieve data from Swann cameras!A quick look at the code told me that although they share the sync word and packet header, the protocols for my camera and these older cameras were very different.The payload appeared to be encrypted in my captures.Furthermore, the code wouldn\u2019t even run due to some questionable pointer juggling.Time to extract what I could\u2014the header layout was correct\u2014and move on.\n  Always, always spend time developing debug or analysis tools. In my experience, such tools immediately pay back your time investment by a factor of 4 or more.With what I knew, I was able to write a \u201cBaichuan\u201d protocol dissector for Wireshark using  Mika\u2019s awesome tutorial.This was easy and fun: Wireshark lets you write dissectors in Lua ( disclaimer: your definition of fun may vary).Now Wireshark could show me the payload lengths and message IDs.Not much, but it was a start.\n  In order to figure out whatever encryption and/or obfuscation the protocol was using, I planned to reverse engineer the firmware.I felt pretty confident that the underlying video was using a well-known protocol (especially since the camera seemed to have dedicated video encoding hardware).So \u201call\u201d I\u2019d have to do is reverse engineer the rest of the protocol.\n   As a quick aside, it\u2019s natural to wonder why this camera doesn\u2019t support RTSP and/or ONVIF.After all,  plenty of other Reolink cameras do.Because I\u2019d like to give them the benefit of the doubt, I\u2019ll propose the possibility that Reolink ran out of storage on this camera and had to axe some features.\n After all, a 16MB flash chip would cost a whole 20 cents extra.This is just a cost-saving measure and definitely not vendor lock-in, hmmm?\n  Right, onward.With the protocol not immediately accessible, it was time to crack this camera open.My  previous disassembly of the camera has already indicated that it uses SPI NOR flash\u2014bog standard for a small Linux system like this.I was wanting to try out a really neat little SOIC socket I had discovered and ordered on Taobao a little while back.I desoldered the flash and soldered on a socket instead.\n  The camera was now pwned, permanently\u2014there was nothing I could do to brick it (I could always just reflash it with  flashrom) and there was nothing Reolink could do to stop me from running my own code on it (since I had control of the first instruction executed, if need be  2).\n  With the flash now conveniently socketed, I dumped it and used  binwalk to inspect the layout.Here\u2019s the flash layout\u2014the nice round byte offsets that engineers tend to pick.  3Bootloader, Linux uImage, squashfs rootfs, and JFFS2 persistent partition.\n DECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------67266 0x106C2 eCos RTOS string reference1769472 0x1B0000 uImage header3604480 0x370000 Squashfs filesystem, little endian7798784 0x770000 JFFS2 filesystem, little endian\n This also lines up nicely with this visualization of the flash image, made by  a neat little tool called BinVis.\n    My first order of business was to find the actual camera binary.It was pretty easy to find; it\u2019s sitting in its own directory at  /mnt/app/dvr.The  dvr binary also had an accompanying  dvr.xml, which looked like a configuration file.A little grepping later, and&amp;mldr sure enough, here were the magic words  ONVIF and  RTSP!\n  I suspected these were simply feature flags dictating to the software which features to enable.What if I just changed these zeros to ones?\n  Rebuilding the rootfs wasn\u2019t quite as easy as extracting it, but I cobbled together a command through trial and error.I wanted to get the squashfs format exactly the same as the one reported by binwalk, so that I could be sure that the stock kernel would mount it.Since I was mostly flying blind without a UART console, I didn\u2019t want any trouble.\n $ mksquashfs new-squashfs-root/ new-squashfs.img -comp xz -b 262144 -all-root -noappend$ dd if=new-squashfs.img of=pwned.bin bs=1 seek=$((0x370000)) conv=notrunc$ flashrom -p ft2232_spi:type=2232H,port=A -w pwned.bin\n Alas, it was not to be this easy.The camera exhibited a remarkable lack of behavioral reform: no new ports opened, nothing.\n For comparison, I downloaded and unpacked a firmware update for a different Reolink camera that did support RTSP.The  dvr binary for that camera was nearly 8 megabytes, while my victim\u2019s was only a little over 3.Clearly, the engineers compiled out the unneeded bits.\n  Fine.If Reolink has compiled the extra functionality out, then the least the camera could do is give me a shell.While I was here, I decided I\u2019d make some, ahem, extra modifications.\n A quick Google did not yield prebuilt binaries of the tools I was looking for.Instead, I checked out a fresh copy of Buildroot and quickly set it up for a baseline MIPS configuration with static linking, then asked for copies of  gdbserver,  busybox with all the fixin\u2019s, and  strace:\n  Thirty minutes later, I had my tools.In the rootfs tree that  binwalk had extracted, there\u2019s the usual assortment of startup scripts in  /etc/init.d.With my tricked-out Busybox copied to  /bin, and a symlink created named  telnetd, I added an extra line to one of the startup scripts:\n       What to do with my newfound power?I planned to start with a static analysis of the firmware, first reverse engineering the encryption scheme.If I got stuck, I could interrogate the camera binary as it executed.\n Once I could undo the encryption, I\u2019d be able to see what the actual protocol was like.\n  The traditional hobbyist tool for static analysis,  IDA free edition, is no good here, because my binary is for MIPS, which the free IDA refuses to disassemble.Instead, the tool of choice is  Ghidra, an astoundingly good open-source reverse engineering suite released by the NSA.Now, normally saying \u201cI ran a binary the NSA gave me\u201d will get you laughed out of the room.But Ghidra has been open source for a while now, so I feel reasonably safe installing it from the Arch Linux repository.\n  Ghidra is awesome.Seriously, this is a piece of software you\u2019d have to pay $10000 for, and it should be your go-to for reverse engineering work.In addition to the disassembler and analyzer, Ghidra also includes a decompiler, which prints pseudo-C code instead of leaving you digging through MIPS assembly.It also re-analyzes in realtime as you annotate function arguments with type information and names.These features easily cut my time spent reverse engineering in half.\n So, armed with Ghidra and a false sense of confidence stemming from never having done any reverse engineering before, I went spelunking in the Baichuan binaries.\n  There\u2019s a reason most reverse engineers start by examining the strings in an unknown binary\u2014it\u2019s a technique that works.In my case, checking for strings in the desktop client and the firmware\u2019s server yielded debug print statements, function names (which Ghidra automatically annotated), and a couple other oddball strings that I\u2019ll talk about in a minute.Both codebases were clearly built around a shared proprietary \u201cBCSDK\u201d library.\n   Well, no RSA here, or anything resembling \u201creal\u201d encryption, except AES.(And I could find any AES keys embedded in the app in short order.)\n   That\u2019s not a function name.I hit find-references and read the code that uses it.\n    It only takes a second to understand what\u2019s going on here: the \u201cencryption\u201d scheme is simply:\n   Bravo, Charlie, your \u201cdesign\u201d is permanently encoded in this protocol for all time.Don\u2019t roll your own crypto, kids.\n Unfortunately, the Charlie Scrambler is only called from UDP functions (see the cross-reference at the bottom of the Ghidra window).This meant it wasn\u2019t my pigeon; my camera uses TCP.At this point I had no idea which of the other \u201cencryption\u201d functions were the right one for my camera, so it was time to bring out my next weapon.\n  With my shell access waiting, my next move was to attach a debugger and control the dvr program remotely from my workstation using my cross-compiled  gdbserver and  strace tools.My Busybox included an FTP server and a TCP wrapper:\n  With this setup I could push whatever tools I wanted to the camera filesystem, even though I hadn\u2019t packed them into the firmware.I went through this process manually about twice before it became really tedious.This is the kind of thing it\u2019s possible to automate with  expect, a Tcl (!) program that pretends to be a console user.I  scripted these interactions, which reduced the connect, tool push, and gdb setup to a simple:\n  An added benefit of this setup is that I could stick whatever gdb commands I wanted to run at startup at the end of the script, instead of writing a dedicated GDB script.These  dynamic printf commands simply print in the GDB console when the camera hits a breakpoint, helpful for knowing which functions are being called without halting the camera:\n   After attaching and halting the dvr daemon, the camera promptly crashed and reset.After some quick investigation, the camera had a watchdog enabled at  /dev/watchdog\u2014a very common setup for embedded devices.I was doing open heart surgery on this software\u2014I didn\u2019t need some two-bit peripheral wandering by and hitting it with an AED!\n     After my breakpoint was hit, I knew which encryption function I was dealing with:  Nets_XmlEncryption.This was immediately good news, because after figuring out the encryption, I was likely dealing with nice ordinary XML, not some crazy half-baked bag of C  structs.\n I took a look at the decompiled function in question in Ghidra, annotating as I went.Sure did look familiar&amp;mldr\n  No engineering lessons had been learned during the redesign, and the influence of Charlie was alive and well!Here is the Charlie Scrambler back in force, but without the mixing step, and with a shorter key.\n Fine, whatever.Implementing the Scrambler in my Wireshark dissector didn\u2019t take very long\u2014although I was briefly baffled by a header of  varying length depending on the message type.Once implemented, I was greeted with this glorious sight:\n   I won\u2019t bore you with the gory details, but I\u2019ll summarize my findings.The Baichuan protocol has had several iterations over the years.The very oldest seem to be UDP-based, using a proprietary SDK called TUTK, illicit copies of which can conveniently be found on GitHub.This is no longer used; it\u2019s not even present in the camera code.\n The next variant is indeed a plaintext \u201cbag of structs\u201d, which consists of a header and a body specified by a message ID in the header.This \u201clegacy variant\u201d is briefly used on the B800 so that both clients can negotiate an upgrade to the \u201cmodern variant,\u201d which is the scrambled XML-based scheme you see above.\n On top of this, modern messages can optionally have a payload.A certain XML message switches the entire message ID into \u201cbinary mode,\u201d which supplies a raw data stream in subsequent messages.When the client sends a video-start command, the camera replies with a binary stream containing raw H.265 video.On top of  that, the payload can also be  more encrypted XML, separate from the main XML for some reason.\n   Once my Wireshark dissector was humming along, it was time to write a new client.I wanted my software to be fast, high-level, and correct, since it would be part of a security system setup.\n   Well, not exactly.Neolink is a new client completely from scratch.It speaks the same Baichuan protocol as the camera, and it extracts the video and forwards it to another real NVR client like Blue Iris over RTSP.The parsing code is somewhat hairy  4, but other than that, it\u2019s straightforward.\n  Here\u2019s all the client is capable of right now.It\u2019s pretty easy to read if you want to  look at the source.\n Send a legacy login message to get the camera to \u201cupgrade\u201d to modern messages.Note: this uses plain MD5 encryption for your password, another, um, interesting design choice.Use a password that isn\u2019t in a rainbow table!\n let  start_video   =  Bc::new_from_xml(   BcMeta  {   msg_id:  MSG_ID_VIDEO,   client_idx:  0,   encrypted:  true,   class:  0x6414,   },   BcXml  {   preview:  Some(Preview  {   version:  xml_ver(),   channel_id:  0,   handle:  0,   stream_type:  &#34;mainStream&#34;.to_string(),   }),   .. Default::default()   });   sub_video.send(start_video) ?;\n  loop  {    let  msg   =  sub_video.rx.recv_timeout(self.rx_timeout) ?;    if   let  BcBody::ModernMsg(ModernMsg  {  binary:  Some(binary),  ..  })   =  msg.body  {   data_out.write_all(binary.as_slice()) ?;   }  }\n  For this part of the program I reached for Gstreamer, which ships with an RTSP server.Gstreamer is&amp;mldr complex.However, their examples are fantastic; they even provided a  sample RTSP server  in Rust!\n The general approach for feeding Gstreamer data from an arbitrary part of your program is to use a  block called an  appsrc.This lets you get a callback whenever Gstreamer wants data, or alternatively just push data whenever you have some and let Gstreamer handle scheduling it.The latter approach is the one I went with here, since the camera doesn\u2019t wait for a signal to send video data.\n    The moment of truth arrived&amp;mldr could Blue Iris connect to my RTSP server and actually display the video?\n    I\u2019ve been soak-testing Neolink for a while now and I think it\u2019s pretty stable.Going forward I\u2019m packaging it up as a real Windows service (not a command line program) to run alongside Blue Iris on my server. Go look at it and download it for yourself!\n I\u2019m also interested in getting Neolink working with other \u201cNVR only\u201d Reolink cameras, of which there are quite a few.So far I haven\u2019t purchased any other hardware, so if you have one of these cameras, please get in touch so we can test it.It might Just Work out of the box.Port scan your cameras!If they have port 9000 available, chances are good that they speak the Baichuan protocol.\n This project was a \u201cjust right\u201d intro to reverse engineering.Low-security systems like these let you teach yourself the principles without actively trying to thwart reverse engineering.I taught myself a lot, and I hope it provides a lot of value for folks who own these cameras.\n Finally, some shameless self-promotion: embedded Linux systems are actually pretty approachable!If you\u2019d like to learn how to do this kind of thing, you might be interested in my  Mastering Embedded Linux series, designed to help you become an expert in hacking low-cost embedded Linux systems just like this camera.\n If you enjoyed this, you can  subscribe to my blog updates, or leave a comment below.Thanks for reading!\n The Reolink support forums always claim that their pages were \u201cupdated 8 hours ago.\u201d This is obvious nonsense. They do update fairly frequently, but not constantly.  \u21a9\ufe0e\n This is exactly the point of secure boot schemes, where the immutable boot ROM validates code against immutable encryption keys, preventing tampering.Needless to say, this camera does  not implement such niceties.  \u21a9\ufe0e\n binwalk also turns up a bunch of false positives, which are easy to ignore because they don\u2019t have nice round offsets.  \u21a9\ufe0e\n  Yes, I\u2019m a proud  Mississippi State University bulldog.You too can attend and become a computer engineer!  \u21a9\ufe0e", "posttime": "2020-07-16 13:30:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u76f8\u673a,\u9006\u5411,engineering", "title": "\u9006\u5411\u8bbe\u8ba1\u76f8\u673a\u534f\u8bae\u4ee5\u83b7\u53d6\u4e50\u8da3\u548c\u5229\u6da6", "title_en": "Reverse engineering a camera protocol for fun and profit", "transed": 1, "url": "https://www.thirtythreeforty.net/posts/2020/05/hacking-reolink-cameras-for-fun-and-profit/", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u76f8\u673a", "\u9006\u5411"]}, {"category": "", "categoryclass": "", "imagename": "aa435021429b8b3d2be7559af785abc1.jpg", "infoid": 1012223, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u4e00\u9879\u5173\u4e8e\u4f53\u529b\u6d3b\u52a8\u548c\u5927\u8111\u5065\u5eb7\u7684\u65b0\u7814\u7a76\uff0c\u953b\u70bc\u53ef\u80fd\u4f1a\u4ee5\u4ee4\u4eba\u60ca\u8bb6\u7684\u65b9\u5f0f\u5e2e\u52a9\u6539\u53d8\u953b\u70bc\u8005\u7684\u5927\u8111\u3002\u8fd9\u9879\u5305\u62ec\u8001\u9f20\u548c\u4eba\u5728\u5185\u7684\u7814\u7a76\u53d1\u73b0\uff0c\u953b\u70bc\u4f1a\u4fc3\u4f7f\u809d\u810f\u6392\u51fa\u4e00\u79cd\u9c9c\u4e3a\u4eba\u77e5\u7684\u86cb\u767d\u8d28\uff0c\u800c\u901a\u8fc7\u5316\u5b66\u624b\u6bb5\u63d0\u9ad8\u53d8\u5f62\u7684\u8001\u5e74\u52a8\u7269\u4e2d\u8fd9\u79cd\u86cb\u767d\u8d28\u7684\u6c34\u5e73\uff0c\u53ef\u4ee5\u6062\u590d\u5b83\u4eec\u7684\u5927\u8111\u548c\u8bb0\u5fc6\u529b\u3002\u8fd9\u4e9b\u53d1\u73b0\u63d0\u51fa\u4e86\u4e00\u4e2a\u6311\u8845\u6027\u7684\u95ee\u9898\uff0c\u5373\u6709\u671d\u4e00\u65e5\u953b\u70bc\u5bf9\u5927\u8111\u7684\u597d\u5904\u662f\u5426\u4f1a\u4ee5\u80f6\u56ca\u6216\u6ce8\u5c04\u5668\u7684\u5f62\u5f0f\u51fa\u73b0-\u672c\u8d28\u4e0a\u662f\u201c\u836f\u4e38\u953b\u70bc\u201d\u3002\n\u5f53\u7136\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u76f8\u5f53\u591a\u7684\u8bc1\u636e\u8868\u660e\uff0c\u4f53\u529b\u6d3b\u52a8\u53ef\u4ee5\u4fdd\u62a4\u5927\u8111\u548c\u601d\u7ef4\u4e0d\u53d7\u8870\u8001\u6240\u5e26\u6765\u7684\u4e00\u4e9b\u8870\u9000\u7684\u5f71\u54cd\u3002\u5728\u8fc7\u53bb\u7684\u556e\u9f7f\u52a8\u7269\u7814\u7a76\u4e2d\uff0c\u5728\u8f6e\u5b50\u6216\u8dd1\u6b65\u673a\u4e0a\u8dd1\u6b65\u7684\u52a8\u7269\u6bd4\u4e45\u5750\u4e0d\u52a8\u7684\u8001\u9f20\u6216\u5927\u9f20\u4ea7\u751f\u66f4\u591a\u65b0\u7684\u795e\u7ecf\u5143\uff0c\u5b66\u4e60\u548c\u8bb0\u5fc6\u66f4\u597d\u3002\u540c\u6837\uff0c\u4e3a\u4e86\u79d1\u5b66\u800c\u6563\u6b65\u7684\u8001\u5e74\u4eba\u5927\u8111\u4e2d\u4e0e\u8bb0\u5fc6\u76f8\u5173\u7684\u90e8\u5206\u589e\u52a0\u4e86\u7ec4\u7ec7\u4f53\u79ef\u3002\u5373\u4f7f\u5728\u5e74\u8f7b\u4eba\u4e2d\uff0c\u90a3\u4e9b\u6bd4\u540c\u9f84\u4eba\u66f4\u5065\u5eb7\u7684\u4eba\u5728\u8ba4\u77e5\u6d4b\u8bd5\u4e2d\u7684\u8868\u73b0\u4e5f\u5f80\u5f80\u66f4\u597d\u3002\n\u4f46\u662f\uff0c\u5173\u4e8e\u8fd0\u52a8\u5982\u4f55\u5728\u7ec6\u80de\u6c34\u5e73\u4e0a\u91cd\u5851\u5927\u8111\u548c\u6539\u53d8\u5176\u529f\u80fd\uff0c\u8bb8\u591a\u95ee\u9898\u4ecd\u7136\u6ca1\u6709\u5f97\u5230\u56de\u7b54\u3002\u5927\u591a\u6570\u7814\u7a76\u4eba\u5458\u6000\u7591\uff0c\u5728\u8fd0\u52a8\u8fc7\u7a0b\u4e2d\u548c\u4e4b\u540e\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u5230\u5927\u8111\u5185\u90e8\u548c\u8eab\u4f53\u5176\u4ed6\u90e8\u4f4d\u91ca\u653e\u51fa\u4e00\u7cfb\u5217\u7269\u8d28\u3002\u8fd9\u4e9b\u7269\u8d28\u76f8\u4e92\u4f5c\u7528\u5e76\u5f15\u53d1\u5176\u4ed6\u751f\u5316\u53cd\u5e94\uff0c\u6700\u7ec8\u6539\u53d8\u5927\u8111\u7684\u5916\u89c2\u548c\u5de5\u4f5c\u65b9\u5f0f\u3002\u4f46\u8fd9\u4e9b\u7269\u8d28\u662f\u4ec0\u4e48\uff0c\u5b83\u4eec\u6765\u81ea\u54ea\u91cc\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u76f8\u9047\u548c\u6df7\u5408\u7684\uff0c\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u3002\n\u56e0\u6b64\uff0c\u5728\u672c\u6708\u53d1\u8868\u5728\u201c\u79d1\u5b66\u201d\u6742\u5fd7\u4e0a\u7684\u8fd9\u9879\u65b0\u7814\u7a76\u4e2d\uff0c\u52a0\u5dde\u5927\u5b66\u65e7\u91d1\u5c71\u5206\u6821\u548c\u5176\u4ed6\u673a\u6784\u7684\u7814\u7a76\u4eba\u5458\u51b3\u5b9a\u6df1\u5165\u7814\u7a76\u8001\u9f20\u7684\u5927\u8111\u548c\u8840\u6db2\u3002\u5728\u540c\u4e00\u5b9e\u9a8c\u5ba4\u8fc7\u53bb\u7684\u7814\u7a76\u4e2d\uff0c\u79d1\u5b66\u5bb6\u4eec\u66fe\u5c06\u5e7c\u9f20\u7684\u8840\u6db2\u6ce8\u5165\u5e74\u957f\u7684\u8001\u9f20\uff0c\u5e76\u53d1\u73b0\u8001\u5e74\u52a8\u7269\u7684\u601d\u7ef4\u6709\u6240\u6539\u5584\u3002\u52a0\u5dde\u5927\u5b66\u65e7\u91d1\u5c71\u5206\u6821\u7684\u6559\u6388\u7d22\u5c14\u00b7\u7ef4\u5c14\u8fbe(Saul Villeda)\u8bf4\uff0c\u8fd9\u5c31\u50cf\u662f\u201c\u901a\u8fc7\u8840\u6db2\u4f20\u9012\u5bf9\u9752\u6625\u7684\u8bb0\u5fc6\u201d\uff0c\u4ed6\u4e0e\u540c\u4e8b\u963f\u62c9\u5a1c\u00b7\u970d\u6d1b\u7ef4\u8328(Alana Horowitz)\u3001\u8303\u96ea\u83b1(\u97f3\u8bd1)\u7b49\u4eba\u4e00\u8d77\u8fdb\u884c\u4e86\u8fd9\u9879\u7814\u7a76\u3002\n\u7136\u800c\uff0c\u8fd9\u4e9b\u597d\u5904\u662f\u6350\u732e\u52a8\u7269\u5e74\u9f84\u8f83\u5c0f\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u5b83\u4eec\u7684\u8fd0\u52a8\u4e60\u60ef\u3002\u79d1\u5b66\u5bb6\u4eec\u6000\u7591\uff0c\u65e0\u8bba\u52a8\u7269\u7684\u5e74\u9f84\u662f\u591a\u5c11\uff0c\u8fd0\u52a8\u90fd\u4f1a\u5728\u8840\u6db2\u4e2d\u5f15\u53d1\u989d\u5916\u7684\u53d8\u5316\uff0c\u8fd9\u4e9b\u53d8\u5316\u53ef\u80fd\u662f\u53ef\u4ee5\u8f6c\u79fb\u7684\u3002\n\u56e0\u6b64\uff0c\u4f5c\u4e3a\u8fd9\u9879\u65b0\u7814\u7a76\u7684\u7b2c\u4e00\u6b65\uff0c\u4ed6\u4eec\u8ba9\u5e7c\u9f20\u548c\u8001\u5e74\u9f20\u90fd\u8dd1\u4e86\u516d\u5468\uff0c\u7136\u540e\u628a\u4e24\u7ec4\u5c0f\u9f20\u7684\u8840\u6db2\u90fd\u8f93\u5165\u5230\u5e74\u957f\u7684\u4e45\u5750\u4e0d\u52a8\u7684\u52a8\u7269\u4f53\u5185\u3002\u4e4b\u540e\uff0c\u90a3\u4e9b\u5e74\u957f\u7684\u8001\u9f20\u5728\u8ba4\u77e5\u6d4b\u8bd5\u4e2d\u7684\u8868\u73b0\u6bd4\u540c\u7b49\u5e74\u957f\u7684\u5bf9\u7167\u7ec4\u8981\u597d\uff0c\u65e0\u8bba\u5b83\u4eec\u7684\u8f93\u8840\u6765\u81ea\u5e74\u8f7b\u7684\u8dd1\u6b65\u8005\u8fd8\u662f\u5e74\u957f\u7684\u8dd1\u6b65\u8005\u3002\u4ed6\u4eec\u8fd8\u663e\u793a\uff0c\u5728\u4ed6\u4eec\u7684\u5927\u8111\u8bb0\u5fc6\u4e2d\u5fc3\u4ea7\u751f\u65b0\u795e\u7ecf\u5143\u7684\u6570\u91cf\u6fc0\u589e\u3002\u91cd\u8981\u7684\u662f\u6350\u8d60\u8005\u7684\u6d3b\u52a8\uff0c\u800c\u4e0d\u662f\u4ed6\u4eec\u7684\u5e74\u9f84\u3002\n\u611f\u5174\u8da3\u7684\u662f\uff0c\u79d1\u5b66\u5bb6\u4eec\u63a5\u4e0b\u6765\u7740\u624b\u627e\u51fa\u953b\u70bc\u8005\u8840\u6db2\u4e2d\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u5229\u7528\u7cbe\u5bc6\u7684\u8d28\u8c31\u548c\u5176\u4ed6\u6280\u672f\uff0c\u4ed6\u4eec\u5728\u5954\u8dd1\u7684\u52a8\u7269\u7684\u8840\u6db2\u4e2d\u5206\u79bb\u5e76\u8ba1\u6570\u4e86\u5404\u79cd\u86cb\u767d\u8d28\uff0c\u8fd9\u4e9b\u86cb\u767d\u8d28\u5728\u4e0d\u6d3b\u52a8\u7684\u5c0f\u9f20\u7684\u8840\u6db2\u4e2d\u6ca1\u6709\u7c7b\u4f3c\u7684\u4e30\u5bcc\u3002\n\u7136\u540e\uff0c\u4ed6\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u4e86\u4e00\u79cd\u5f88\u5c11\u88ab\u7814\u7a76\u7684\u86cb\u767d\u8d28GPLD1\u4e0a(\u5b83\u7684\u5b66\u540d\u5f88\u957f\uff0c\u5f88\u96be\u53d1\u97f3)\u3002\u4f17\u6240\u5468\u77e5\uff0c\u8fd9\u79cd\u7565\u663e\u795e\u79d8\u7684\u86cb\u767d\u8d28\u4e3b\u8981\u5728\u809d\u810f\u4e2d\u4ea7\u751f\uff0c\u800c\u809d\u810f\u901a\u5e38\u88ab\u8ba4\u4e3a\u4e0e\u5927\u8111\u6ca1\u6709\u592a\u5927\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u4f46\u8fd0\u52a8\u540e\u86cb\u767d\u8d28\u6c34\u5e73\u5df2\u7ecf\u8db3\u591f\u9ad8\uff0c\u8db3\u4ee5\u8bc1\u660e\u66f4\u591a\u7684\u7814\u7a76\u662f\u5408\u7406\u7684\u3002\n\u56e0\u6b64\uff0c\u7814\u7a76\u4eba\u5458\u73b0\u5728\u5229\u7528\u57fa\u56e0\u5de5\u7a0b\u6765\u653e\u5927\u8001\u5e74\u3001\u4e0d\u6d3b\u52a8\u7684\u5c0f\u9f20\u809d\u810f\u4e2dGPLD1\u7684\u91ca\u653e\u3002\u4e4b\u540e\uff0c\u8fd9\u4e9b\u52a8\u7269\u5728\u5b66\u4e60\u548c\u8bb0\u5fc6\u6d4b\u8bd5\u4e2d\u7684\u8868\u73b0\u51e0\u4e4e\u548c\u5c0f\u9f20\u4e00\u6837\uff0c\u5b83\u4eec\u7684\u5927\u8111\u4e2d\u5145\u6ee1\u4e86\u6bd4\u5176\u4ed6\u8001\u5e74\u5c0f\u9f20\u591a\u5f97\u591a\u7684\u65b0\u751f\u795e\u7ecf\u5143\u3002\u5b9e\u9645\u4e0a\uff0c\u4ed6\u4eec\u5728\u6ca1\u6709\u5b9e\u9645\u953b\u70bc\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u4e86\u953b\u70bc\u5bf9\u5927\u8111\u7684\u597d\u5904\u3002\n\u4e3a\u4e86\u786e\u4fdd\u8fd9\u79cd\u53cd\u5e94\u4e0d\u662f\u7eaf\u7cb9\u4ee5\u556e\u9f7f\u52a8\u7269\u4e3a\u57fa\u7840\uff0c\u79d1\u5b66\u5bb6\u4eec\u8fd8\u68c0\u67e5\u4e86\u4ece\u8001\u5e74\u4eba\u8eab\u4e0a\u63d0\u53d6\u7684\u8840\u6db2\u3002\u4e60\u60ef\u6b65\u884c\u953b\u70bc\u7684\u8001\u5e74\u7537\u6027\u548c\u5973\u6027\u7684\u8840\u6db2\u4e2dGPLD1\u7684\u6c34\u5e73\u6bd4\u90a3\u4e9b\u4e0d\u6b65\u884c\u7684\u4eba\u9ad8\u3002\n\u7ef4\u5c14\u8fbe\u535a\u58eb\u8bf4\uff0c\u8fd9\u4e9b\u53d1\u73b0\u7684\u7efc\u5408\u7ed3\u679c\u4f3c\u4e4e\u662f\uff0c\u8fd0\u52a8\u6539\u5584\u4e86\u5927\u8111\u5065\u5eb7\uff0c\u90e8\u5206\u539f\u56e0\u662f\u4fc3\u4f7f\u809d\u810f\u6392\u51fa\u989d\u5916\u6570\u91cf\u7684GPLD1\uff0c\u5c3d\u7ba1\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u8fd9\u79cd\u86cb\u767d\u8d28\u662f\u5982\u4f55\u6539\u53d8\u5927\u8111\u7684\u3002Villeda\u535a\u58eb\u8bf4\uff0c\u79d1\u5b66\u5bb6\u968f\u540e\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u8fd9\u79cd\u86cb\u767d\u8d28\u53ef\u80fd\u4e0d\u4f1a\u7a81\u7834\u8840\u8111\u5c4f\u969c\uff0c\u76f4\u63a5\u4f5c\u7528\u4e8e\u5927\u8111\u3002\u76f8\u53cd\uff0c\u5b83\u53ef\u80fd\u4f1a\u523a\u6fc0\u8eab\u4f53\u5176\u4ed6\u7ec4\u7ec7\u548c\u7ec6\u80de\u7684\u6539\u53d8\u3002\u8fd9\u4e9b\u7ec4\u7ec7\u53cd\u8fc7\u6765\u4ea7\u751f\u66f4\u591a\u7684\u86cb\u767d\u8d28\uff0c\u8fd9\u4e9b\u86cb\u767d\u8d28\u5bf9\u5176\u4ed6\u7ec4\u7ec7\u4ea7\u751f\u5f71\u54cd\uff0c\u6700\u7ec8\u5bfc\u81f4\u5927\u8111\u672c\u8eab\u7684\u795e\u7ecf\u9012\u8d28\u3001\u57fa\u56e0\u548c\u7ec6\u80de\u53d1\u751f\u76f4\u63a5\u53d8\u5316\uff0c\u4ece\u800c\u652f\u6301\u8ba4\u77e5\u80fd\u529b\u7684\u6539\u5584\u3002\n\u7ef4\u83b1\u8fbe\u535a\u58eb\u8ba4\u4e3a\uff0c\u5982\u679c\u8fdb\u4e00\u6b65\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u5206\u79bb\u51fa\u6765\u7684GPLD1\u6709\u52a9\u4e8e\u542f\u52a8\u8fd9\u79cd\u5206\u5b50\u94fe\u5f0f\u53cd\u5e94\uff0c\u90a3\u4e48\u81f3\u5c11\u53ef\u4ee5\u60f3\u8c61\uff0c\u6ce8\u5c04\u8fd9\u79cd\u7269\u8d28\u53ef\u80fd\u4f1a\u4e3a\u90a3\u4e9b\u8fc7\u4e8e\u865a\u5f31\u6216\u6b8b\u75be\u800c\u65e0\u6cd5\u8fdb\u884c\u5e38\u89c4\u4f53\u80b2\u6d3b\u52a8\u7684\u4eba\u63d0\u4f9b\u953b\u70bc\u7684\u5927\u8111\u597d\u5904\u3002\n\u7136\u800c\uff0c\u8fd9\u4e2a\u5b9e\u9a8c\u4e3b\u8981\u6d89\u53ca\u8001\u9f20\uff0c\u800c\u4e0d\u662f\u4eba\uff0c\u5e76\u4e14\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u4efb\u4f55\u5173\u4e8e\u989d\u5916\u7684GPLD1\u7684\u7cfb\u7edf\u6548\u5e94\u7684\u4fe1\u606f\uff0c\u8fd9\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53ef\u80fd\u662f\u4e0d\u53d7\u6b22\u8fce\u7684\u3002\u66f4\u6839\u672c\u7684\u662f\uff0c\u8fd9\u4e9b\u53d1\u73b0\u7a81\u663e\u4e86\u8fd0\u52a8\u5bf9\u5168\u8eab\u7684\u666e\u904d\u3001\u9519\u7efc\u590d\u6742\u7684\u5f71\u54cd\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u809d\u810f\u5728\u953b\u70bc\u540e\u4ee5\u67d0\u79cd\u65b9\u5f0f\u6539\u53d8\u4e86\u5934\u8111\u548c\u5927\u8111\u3002\u76ee\u524d\uff0c\u8fd8\u4e0d\u53ef\u80fd\u77e5\u9053GPLD1\u8fd0\u52a8\u836f\u4e38\u662f\u5426\u4f1a\u53d1\u751f\u76f8\u540c\u7684\u540c\u6b65\u4ea4\u7ec7\u8fc7\u7a0b\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5b83\u662f\u5426\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u8fd0\u52a8\u836f\u4e38\u3002\nVilleda\u535a\u58eb\u5f88\u5feb\u540c\u610f\uff0c\u836f\u7269GPLD1\u5373\u4f7f\u5bf9\u5927\u8111\u5065\u5eb7\u6709\u6548\uff0c\u201c\u4e5f\u4e0d\u80fd\u6982\u62ec\u953b\u70bc\u7684\u597d\u5904\u3002\u201d\u4ed6\u6307\u51fa\uff0c\u4e0d\u4f1a\u6709\u901a\u5e38\u7684\u8102\u80aa\u71c3\u70e7\u3001\u808c\u8089\u751f\u957f\u6216\u5fc3\u8840\u7ba1\u6539\u5584\u3002\u4f46\u4ed6\u5e0c\u671b\uff0c\u5982\u679c\u672a\u6765\u5728\u4ed6\u7684\u5b9e\u9a8c\u5ba4\u5bf9\u52a8\u7269\u548c\u4eba\u8fdb\u884c\u7684\u5b9e\u9a8c\u663e\u793a\u51fa\u4e00\u81f4\u7684\u7ed3\u679c\uff0c\u8fd9\u79cd\u7269\u8d28\u6700\u7ec8\u53ef\u80fd\u4f1a\u5e2e\u52a9\u90a3\u4e9b\u53d1\u73b0\u884c\u52a8\u56f0\u96be\u7684\u4eba\u66f4\u597d\u5730\u601d\u8003\u3002", "note_en": "Exercise may help change exercisers\u2019 brains in surprising ways, according to a new study of physical activity and brain health. The study, which included both mice and people, found that exercise prompts the liver to pump out a little-known protein, and that chemically upping the levels of that protein in out-of-shape, elderly animals rejuvenates their brains and memories. The findings raise provocative questions about whether the brain benefits of exercise might someday be available in a capsule or syringe form \u2014 essentially \u201cexercise in a pill.\u201d\n We already have considerable evidence, of course, that physical activity protects brains and minds from some of the declines that otherwise accompany aging. In past rodent studies, animals that ran on wheels or treadmills produced more new neurons and learned and remembered better than sedentary mice or rats. Similarly, older people who took up walking for the sake of science added tissue volume in portions of their brains associated with memory. Even  among younger people, those who were more fit than their peers tended to perform better on cognitive tests.\n But many questions remain unanswered about how, at a cellular level, exercise remodels the brain and alters its function. Most researchers suspect that the process involves the release of a cascade of substances inside the brain and elsewhere in the body during and after exercise. These substances interact and ignite other biochemical reactions that ultimately change how the brain looks and works. But what the substances are, where they originate and how they meet and mingle has remained unclear.\n So, for the  new study, which was published this month in Science, researchers at the University of California, San Francisco, and other institutions decided to look inside the minds and bloodstreams of mice. In  past research from the same lab, the scientists had infused blood from young mice into older ones and seen improvements in the aging animals\u2019 thinking. It was like \u201ctransferring a memory of youth through blood,\u201d says Saul Villeda, a professor at U.C.S.F., who conducted the study with his colleagues Alana Horowitz, Xuelai Fan and others.\n Those benefits were a result of the donor animals\u2019 young age, though, not their exercise habits. The scientists suspected that exercise would spark additional changes in the bloodstream that might be transferable, whatever an animal\u2019s years.\n So, as a first step in the new study, they had both young and elderly mice run for six weeks, then transfused blood from both groups into elderly, sedentary animals. Afterward, those aged mice performed better on cognitive tests than equally elderly controls, whether their transfusions had come from young runners or old. They also showed spikes in the creation of new neurons in their brains\u2019 memory centers. It was the donors\u2019 activity that had mattered, not their age.\n Intrigued, the scientists next set out to find what differed in the exercisers\u2019 blood. Using sophisticated mass spectrometry and other techniques, they separated out and enumerated various proteins in the running animals\u2019 blood that were not seen in similar profusion in blood from inactive mice.\n They then zeroed in on one little-studied protein known as GPLD1 (its scientific name is long and unpronounceable). The slightly mysterious protein is known to be produced mostly in the liver, an organ not usually thought to have much interplay with the brain. But levels of the protein were elevated enough after exercise to justify more investigation.\n So, the researchers now employed genetic engineering to amplify the release of GPLD1 from the livers of old, inactive mice. Afterward, those animals performed almost like young mice on tests of learning and memory, and their brains teemed with far more newborn neurons than in other old mice. In effect, they gained the brain benefits of exercise without the effort of actually exercising.\n To ensure that this reaction was not purely rodent-based, the scientists also checked blood drawn from elderly people. The older men and women who habitually walked for exercise showed higher levels of GPLD1 in their bloodstreams than those who did not.\n The combined upshot of these findings seems to be that exercise improves brain health in part by prompting the liver to pump out extra amounts of GPLD1, Dr. Villeda says, although it is not yet clear how the protein then changes the brain. Subsequent experiments by the scientists showed that the protein probably does not breach the blood-brain barrier and act directly on the brain, Dr. Villeda says. Instead, it is likely to incite alterations in other tissues and cells elsewhere in the body. These tissues, in turn, produce yet more proteins that have effects on other tissues that eventually lead to direct changes to the neurotransmitters, genes and cells in the brain itself that undergird cognitive improvements.\n Dr. Villeda believes that if further experiments show that GPLD1, in isolation, helps to initiate this molecular chain reaction, then it is at least conceivable that infusions of the substance might offer the brain benefits of exercise to people who are too frail or disabled for regular physical activity.\n This experiment principally involved mice, though, not people, and does not tell us anything about the systemic effects of extra GPLD1, which in high amounts might be undesirable. More fundamentally, the findings highlight the pervasive, intricate, whole-body effects of exercise, with the liver, in this case, somehow changing minds and brains after workouts. At the moment, it is impossible to know if the same synchronized, interwoven processes all would occur in response to a GPLD1 exercise pill and, if not, whether it could be considered an exercise pill at all.\n Dr. Villeda is quick to agree that pharmaceutical GPLD1, even if effective for brain health, \u201cwould not recapitulate the benefits of exercise.\u201d There would be none of the usual fat burning, muscle building or cardiovascular improvements, he points out. But he hopes that, if future experiments in his lab with animals and people show consistent results, the substance might eventually help people who find moving difficult to think better.", "posttime": "2020-07-16 13:29:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fd0\u52a8,bolster,\u5927\u8111", "title": "\u8fd0\u52a8\u53ef\u4ee5\u5f3a\u5065\u5927\u8111", "title_en": "Exercise May Bolster the Brain", "transed": 1, "url": "https://www.nytimes.com/2020/07/15/well/move/how-exercise-may-bolster-the-brain.html", "via": "", "real_tags": ["\u8fd0\u52a8", "bolster", "\u5927\u8111"]}, {"category": "", "categoryclass": "", "imagename": "b157a508023f5abb96f6a155cacfbba2.jpeg", "infoid": 1012221, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b98\u5458\u4eec\u5468\u4e09\u8bf4\uff0c\u5728\u6587\u56fe\u62c9\u53bf\u4e00\u4e2a\u519c\u573a\u5de5\u4eba\u4f4f\u5b85\u533a\u7206\u53d1\u75ab\u60c5\u540e\uff0c\u6587\u56fe\u62c9\u53bf\u8fd15000\u4f8b\u51a0\u72b6\u75c5\u6bd2\u9633\u6027\u75c5\u4f8b\u4e2d\uff0c\u519c\u573a\u5de5\u4eba\u5360\u4e867%\u3002\n\u62c9\u65af\u5e03\u91cc\u8428\u65af\u522b\u5885(Villa Las Brisas)\u662f\u4e00\u4e2a\u4e3a\u519c\u4e1a\u96c7\u4e3b\u63d0\u4f9b\u5de5\u4eba\u4e34\u65f6\u4f4f\u623f\u7684\u4f4f\u5b85\u533a\uff0c\u636e\u53bf\u516c\u5171\u536b\u751f\u603b\u76d1\u91cc\u6208\u00b7\u5df4\u5c14\u52a0\u65af(Rigo Vargas)\u5728\u5723\u4fdd\u62c9\u519c\u4e1a\u5229\u83ab\u5c3c\u62c9\u516c\u53f8(Limoneira Co.)\u4e3e\u884c\u7684\u5a92\u4f53\u5439\u98ce\u4f1a\u4e0a\u8bf4\uff0c\u5728\u75ab\u60c5\u7206\u53d1\u4e4b\u524d\uff0c\u8fd9\u4e9b\u5fc5\u9700\u54c1\u5de5\u4eba\u5360\u8be5\u53bf\u75c5\u4f8b\u603b\u6570\u76842%\u3002\n\u81ea\u90a3\u4ee5\u540e\uff0c204\u540d\u519c\u4e1a\u5de5\u4eba\u7684\u68c0\u6d4b\u5448\u9633\u6027\u3002\u5df4\u5c14\u52a0\u65af\u8bf4\uff0c\u8fd9204\u4eba\u4e2d\u67097\u4eba\u4f4f\u5728\u4e00\u5bb6\u75c7\u72b6\u8f7b\u5fae\u7684\u9152\u5e97\u91cc\uff0c\u9884\u8ba1\u660e\u5929\u5c31\u4f1a\u51fa\u9662\u3002\u7531\u4e8e\u6301\u7eed\u7684\u75c7\u72b6\uff0c\u53ea\u6709\u4e00\u4eba\u5c06\u7ee7\u7eed\u63a5\u53d7\u6cbb\u7597\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4e2a\u4eba\u5c06\u7ee7\u7eed\u63a5\u53d7\u6cbb\u7597\uff0c\u76f4\u5230\u4ed6\u4eec\u8fde\u7eed\u4e09\u5929\u6ca1\u6709\u75c7\u72b6\u3002\n\u201cCOVID\u5728\u6587\u56fe\u62c9\u53bf\u7316\u7357\uff0c\u5c31\u50cf\u5728\u8bb8\u591a\u5176\u4ed6\u53bf\u548c\u6211\u4eec\u56fd\u5bb6\u4e00\u6837\uff0c\u201d\u74e6\u5c14\u52a0\u65af\u8bf4\u3002\n\u53bf\u519c\u4e1a\u4e13\u5458\u57c3\u5fb7\u00b7\u5a01\u5ec9\u59c6\u65af(Ed Williams)\u8868\u793a\uff0c\u4ed6\u7684\u56e2\u961f\u5df2\u7ecf\u4e0e\u5176\u4ed6\u90e8\u95e8\u548c\u7ec4\u7ec7\u5408\u4f5c\uff0c\u5982\u519c\u573a\u5de5\u4eba\u8d44\u6e90\u8ba1\u5212\u548cLogrando Bienestar\uff0c\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u76844.3\u4e07\u540d\u519c\u573a\u5de5\u4eba\u4e86\u89e3\u60c5\u51b5\u3002\n\u5a01\u5ec9\u59c6\u65af\u7684\u529e\u516c\u5ba4\u5df2\u7ecf\u5411\u519c\u573a\u53d1\u653e\u4e86100\u4e07\u4e2a\u53e3\u7f69\uff1b\u53bf\u5b98\u5458\u7528\u897f\u73ed\u7259\u8bed\u548c\u82f1\u8bed\u53d1\u9001\u4e86\u63cf\u8ff0\u65b0\u51a0\u80ba\u708e\u75c7\u72b6\u7684\u4f20\u5355\uff1b\u519c\u6c11\u8d44\u6e90\u9879\u76ee\u4e0eInd\u00edgena 94.1FM\u7535\u53f0\u5408\u4f5c\uff0c\u63a5\u89e6\u5230\u8bf4\u7c73\u514b\u7279\u79d1\u8bed\u7684\u539f\u4f4f\u6c11\u3002\n\u6839\u636e\u6d1b\u6749\u77f6\u65f6\u62a5\u7684\u8ffd\u8e2a\u6570\u636e\uff0c\u8be5\u53bf\u5171\u67094787\u4f8b\u786e\u8bca\u75c5\u4f8b\uff0c\u5176\u4e2d56\u4f8b\u4e0e\u51a0\u72b6\u75c5\u6bd2\u76f8\u5173\u7684\u6b7b\u4ea1\u3002\u6587\u56fe\u62c9\u53bf\u6700\u8fd1\u5ba3\u5e03\u91cd\u75c7\u76d1\u62a4\u75c5\u623f\u548c\u6025\u8bca\u5ba4\u5df2\u6ee1\u8d1f\u8377\uff0c\u88ab\u5217\u5165\u5dde\u957f\u7684\u89c2\u5bdf\u540d\u5355\u3002\n\u74e6\u5c14\u52a0\u65af\u7684\u7236\u4eb2\u66fe\u5728\u5229\u83ab\u5c3c\u62c9\u91c7\u6458\u6a59\u5b50\u3001\u9cc4\u68a8\u548c\u67e0\u6aac\uff0c\u4ed6\u8bf4\uff0c\u8be5\u53bf\u7684\u6570\u5b57\u4ee4\u4eba\u8b66\u9192\u3002", "note_en": "Farmworkers account for 7% of the nearly 5,000 positive coronavirus cases in Ventura County after an outbreak at a farmworkers housing complex, officials said Wednesday.\n Before an  outbreak at the Villa Las Brisas, a housing complex that provides agricultural employers with temporary housing for their workers, these essential workers made up 2% of the county\u2019s overall case count, according to Rigo Vargas, county director of public health, during a media briefing at the agricultural Limoneira Co. in Santa Paula.\n Since then, 204 agricultural workers have tested positive. Seven of those 204 are housed in a hotel under care with mild symptoms and are expected to be released tomorrow, Vargas said. Only one person will remain under care because of their ongoing symptoms. That person will remain under care until they are symptom-free for three consecutive days, he said.\n \u201cCOVID is rampant in Ventura County as in many other counties and in our nation,\u201d Vargas said.\n  County Agricultural Commissioner Ed Williams said his team has collaborated with other departments and organizations, such as the farmworker resource program and Logrando Bienestar, to help keep their 43,000  farmworkers informed.\n Williams\u2019 office has issued 1 million masks to farming sites; county officials have sent flyers describing COVID-19 symptoms in Spanish and English; and the farmers resource program partnered with Radio Ind\u00edgena 94.1 FM to reach indigenous people who speak Mixteco.\n The county has a total of 4,787 confirmed cases with 56 coronavirus-related deaths, according to the Los Angeles Times  tracker. Ventura County, which recently announced intensive care units and emergency rooms were at  full capacity, is listed on the governor\u2019s  watchlist.\n Vargas, whose father used to pick oranges, avocados and lemons at Limoneira, said the county\u2019s numbers were sobering.", "posttime": "2020-07-16 13:28:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75c5\u4f8b,county,\u5de5\u4eba", "title": "\u6587\u56fe\u62c9\u53bf\u519c\u573a\u5de5\u4eba\u4e2dCovid\u9633\u6027\u75c5\u4f8b\u589e\u52a0", "title_en": "Ventura County sees increase in number of positive Covid cases among farmworkers", "transed": 1, "url": "https://www.latimes.com/california/story/2020-07-15/ventura-county-sees-increase-in-number-of-positive-coronavirus-cases-among-farmworkers", "via": "", "real_tags": ["\u75c5\u4f8b", "county", "\u5de5\u4eba"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1012219, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u6211\u5f88\u5174\u594b\u5730\u5ba3\u5e03Snorkel AI\u7684\u79d8\u5bc6\u53d1\u5c04\uff012019\u5e74\u4ece\u65af\u5766\u798fAI\u5b9e\u9a8c\u5ba4\u5265\u79bb\u51fa\u6765\u7684Snorkel AI\u6210\u7acb\u4e8e\u4e24\u4e2a\u7b80\u5355\u7684\u524d\u63d0\uff1a\u9996\u5148\uff0c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u5b66\u4e60\u7684\u6807\u7b7e\u8bad\u7ec3\u6570\u636e\u8d8a\u6765\u8d8a\u591a\u5730\u51b3\u5b9a\u7740AI\u5e94\u7528\u7684\u6210\u8d25\u3002\u7b2c\u4e8c\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5f97\u6bd4\u5b8c\u5168\u624b\u5de5\u6807\u6ce8\u8fd9\u4e9b\u6570\u636e\u597d\u5f97\u591a\u3002\n\u5728\u65af\u5766\u798f\u4eba\u5de5\u667a\u80fd\u5b9e\u9a8c\u5ba4\uff0cSnorkel AI\u521b\u59cb\u56e2\u961f\u82b1\u4e86\u56db\u5e74\u591a\u7684\u65f6\u95f4\u5f00\u53d1\u65b0\u7684\u7a0b\u5e8f\u6027\u65b9\u6cd5\u6765\u6807\u8bb0\u3001\u6269\u5145\u3001\u7ed3\u6784\u5316\u548c\u7ba1\u7406\u8fd9\u4e9b\u8bad\u7ec3\u6570\u636e\u3002\u6211\u4eec\u6709\u5e78\u4e0e\u4e00\u4e9b\u4e16\u754c\u9886\u5148\u7684\u7ec4\u7ec7(\u5982Google\u3001Intel\u3001Apple\u3001Stanford Medicine)\u4e00\u8d77\u5f00\u53d1\u548c\u90e8\u7f72\u4e86\u6211\u4eec\u7684\u6280\u672f\u7684\u65e9\u671f\u7248\u672c\uff0c\u5bfc\u81f4\u6211\u4eec\u7684\u53d1\u73b0\u53d1\u8868\u4e86\u8d85\u8fc736\u7bc7\u540c\u884c\u8bc4\u8bae\u7684\u51fa\u7248\u7269\uff1b\u5728\u5f31\u76d1\u7763\u5efa\u6a21\u3001\u6570\u636e\u589e\u5f3a\u3001\u591a\u4efb\u52a1\u5b66\u4e60\u7b49\u65b9\u9762\u7684\u521b\u65b0\uff1b\u5c06\u6211\u4eec\u7684\u6280\u672f\u7eb3\u5165\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u8bfe\u7a0b\uff1b\u4ee5\u53ca\u5728\u60a8\u53ef\u80fd\u5728\u8fc7\u53bb\u51e0\u4e2a\u5c0f\u65f6\u5185\u4e0e\u4e4b\u4e92\u52a8\u7684\u6d41\u884c\u4ea7\u54c1\u548c\u7cfb\u7edf\u4e2d\u7684\u90e8\u7f72\u3002\n\u901a\u8fc7\u6240\u6709\u8fd9\u4e9b\u5b66\u672f\u4fee\u4fee\u8865\u8865\u548c\u884c\u4e1a\u63a2\u7d22\uff0c\u6211\u4eec\u8ba4\u8bc6\u5230\u4e24\u4ef6\u4e8b\uff1a\u9996\u5148\uff0c\u901a\u8fc7\u7f16\u7a0b\u800c\u4e0d\u662f\u624b\u52a8\u6807\u8bb0\u548c\u6784\u5efa\u8bad\u7ec3\u6570\u636e\u7684\u6982\u5ff5\u5177\u6709\u53d8\u9769\u6f5c\u529b\uff0c\u53ef\u4ee5\u4f7f\u673a\u5668\u5b66\u4e60\u66f4\u8fed\u4ee3\u3001\u66f4\u53ef\u5ba1\u8ba1\u3001\u90e8\u7f72\u66f4\u5feb\uff0c\u6700\u7ec8\u66f4\u5b9e\u7528\u3002\u5176\u6b21\uff0c\u8fd9\u4e9b\u60f3\u6cd5\u4e0d\u4ec5\u6539\u53d8\u4e86\u4f60\u7ed9\u8bad\u7ec3\u6570\u636e\u8d34\u4e0a\u6807\u7b7e\u7684\u65b9\u5f0f\uff0c\u800c\u4e14\u6539\u53d8\u4e86ML\u6574\u4e2a\u751f\u547d\u5468\u671f\u548c\u7ba1\u9053\u7684\u5f88\u591a\u65b9\u9762\uff1a\u5982\u4f55\u6ce8\u5165\u77e5\u8bc6\u548c\u53cd\u9988\uff1b\u5982\u4f55\u6784\u5efa\u3001\u8bad\u7ec3\u3001\u7248\u672c\u5316\u548c\u76d1\u63a7\u6a21\u578b\uff1b\u5982\u4f55\u8fed\u4ee3\u5f00\u53d1\u6574\u4e2a\u7ba1\u9053\uff1b\u4ee5\u53ca\u5982\u4f55\u5c06\u4efb\u4f55ML\u90e8\u7f72\u4e2d\u7684\u5168\u5957\u5229\u76ca\u76f8\u5173\u8005(\u4ece\u4e3b\u9898\u4e13\u5bb6\u5230ML\u5de5\u7a0b\u5e08)\u5408\u5e76\u5230\u6d41\u7a0b\u4e2d\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u770b\u5230\uff0c\u8fd9\u79cd\u5411\u7a0b\u5e8f\u5316\u57f9\u8bad\u6570\u636e\u7684\u8f6c\u53d8\u9700\u8981\u5bf9\u6574\u4e2aML\u5f00\u53d1\u548c\u90e8\u7f72\u8fc7\u7a0b\u8fdb\u884c\u81ea\u4e0a\u800c\u4e0b\u7684\u91cd\u5199\u3002\u5728\u4e00\u4e9b\u4ee4\u4eba\u60ca\u53f9\u7684\u6295\u8d44\u8005(Greylock\u3001GV\u3001In-Q-tel\u548c\u5176\u4ed6\u516c\u53f8)\u548c\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u65e9\u671f\u5ba2\u6237\u7684\u652f\u6301\u4e0b\uff0c\u6211\u4eec\u53bb\u5e74\u4e00\u76f4\u5728\u505a\u8fd9\u4ef6\u4e8b\uff1a\u6784\u5efa\u548c\u90e8\u7f72Snorkel Flow\uff0c\u8fd9\u662f\u4e00\u4e2a\u652f\u6301ML\u6d41\u7a0b\u7684\u65b0\u613f\u666f\u7684\u7aef\u5230\u7aef\u5e73\u53f0\u3002\nSnorkel flow\u9996\u5148\u4e5f\u662f\u6700\u91cd\u8981\u7684\u52a8\u673a\u662f\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u610f\u8bc6\u5230\uff0c\u8bad\u7ec3\u6570\u636e\u5df2\u7ecf\u6210\u4e3a\u8bb8\u591aML\u7ba1\u9053\u548cAI\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684\u5173\u952e\u74f6\u9888\u3002\n\u4eca\u5929\u7684ML\u6210\u529f\u901a\u5e38\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u9690\u85cf\u7684\u6210\u672c\uff1a\u5927\u91cf\u7684\u624b\u5de5\u6807\u6ce8\u7684\u8bad\u7ec3\u6570\u636e\u96c6\u3002\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4eba\u5de5\u667a\u80fd\u548cML\u5411\u5f3a\u5927\u4f46\u9700\u8981\u6570\u636e\u7684\u8868\u793a\u5b66\u4e60\u6a21\u578b\u7684\u7ed3\u6784\u6027\u8f6c\u53d8\u3002\u8fd9\u4e9b\u6a21\u578b-\u901a\u5e38\u662f\u6df1\u5ea6\u5b66\u4e60\u67b6\u6784-\u4e0d\u4ec5\u5728\u907f\u514d\u529f\u80fd\u5de5\u7a0b\u548c\u5b9a\u5236\u6a21\u578b\u8bbe\u8ba1\u7b49\u4f20\u7edf\u624b\u52a8\u5f00\u53d1\u4efb\u52a1\u65b9\u9762\u66f4\u52a0\u5f3a\u5927\uff0c\u800c\u4e14\u5728\u5f00\u653e\u6e90\u7801\u4e2d\u4e5f\u4ece\u672a\u50cf\u73b0\u5728\u8fd9\u6837\u5bb9\u6613\u8bbf\u95ee\u3002\u7136\u800c\uff0c\u6ca1\u6709\u514d\u8d39\u7684\u5348\u9910\uff1a\u8fd9\u4e9b\u6a21\u578b\u975e\u5e38\u590d\u6742\uff0c\u6709\u6570\u5343\u4e07\u5230\u6570\u4ebf\u4e2a\u53c2\u6570\uff0c\u5b83\u4eec\u9700\u8981\u5927\u91cf\u7684\u6807\u7b7e\u8bad\u7ec3\u6570\u636e\u96c6\u6765\u5b66\u4e60\u3002\u548c,\u3002\u9664\u4e86\u5728\u6807\u7b7e\u81ea\u7136\u662f\u73b0\u6709\u8fc7\u7a0b\u7684\u6d3e\u751f\u7684\u7279\u6b8a\u573a\u666f\u4e4b\u5916\uff0c\u8fd9\u4e9b\u8bad\u7ec3\u6570\u636e\u96c6\u9700\u8981\u624b\u52a8\u6807\u6ce8\u3002\nML\u7684\u624b\u5de5\u6807\u8bb0\u8bad\u7ec3\u6570\u636e\u63a5\u53e3\u5df2\u7ecf\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u8fdb\u6b65\uff0c\u4f46\u4e5f\u88ab\u8352\u8c2c\u5730\u6253\u7834\u4e86\u3002\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a\u4e00\u5bb6\u94f6\u884c\u7684\u6cd5\u5f8b\u5206\u6790\u5e08\u60f3\u8981\u8bad\u7ec3\u4e00\u4e2a\u5408\u540c\u5206\u7c7b\u6a21\u578b\uff0c\u5e76\u60f3\u8981\u7ed9ML\u6a21\u578b\u6ce8\u5165\u4e00\u4e2a\u7b80\u5355\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5\uff1a\u5982\u679c\u6807\u9898\u4e2d\u6709\u201c\u96c7\u4f63\u201d\uff0c\u90a3\u4e48\u5408\u540c\u5c31\u5e94\u8be5\u88ab\u8d34\u4e0a\u201c\u96c7\u4f63\u5408\u540c\u201d\u7684\u6807\u7b7e\u3002\u5f88\u7b80\u5355\uff0c\u5bf9\u5427\uff1f\u4f46\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u4ec5\u901a\u8fc7\u6807\u8bb0\u5355\u4e2a\u6570\u636e\u70b9\u5c06\u6b64\u7279\u5b9a\u7279\u5f81\u4f20\u9012\u7ed9\u673a\u5668\u5b66\u4e60\u6a21\u578b\u53ef\u80fd\u9700\u8981\u6570\u5343\u4e2a\u793a\u4f8b(\u5927\u81f4\u4e0e\u7279\u5f81\u7a7a\u95f4\u7684\u7a00\u758f\u6027\u6210\u53cd\u6bd4)\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u8bf4\uff0c\u8fd9\u5c31\u50cf\u73a920\u4e2a\u95ee\u9898\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u76f4\u63a5\u4ea4\u6d41\u7b54\u6848-\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5e9e\u5927\u7684\u95ee\u7b54\u5e93\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u5728\u5176\u4ed6\u65b9\u9762\u5b8c\u5168\u4e0d\u5207\u5b9e\u9645\u3002\n\u624b\u52a8\u6807\u8bb0\u57f9\u8bad\u6570\u636e\u7684\u6210\u672c\u9ad8\u5f97\u4ee4\u4eba\u671b\u800c\u5374\u6b65\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\u548c\u9690\u79c1\u7684\u60c5\u51b5\u4e0b\u3002\u5efa\u7acb\u8bad\u7ec3\u6570\u636e\u96c6\u901a\u5e38\u9700\u8981\u5927\u91cf\u7684\u4eba\u5de5\u6807\u8bb0\u5458\uff0c\u82b1\u8d39\u5de8\u5927\u7684\u6210\u672c\u548c\u65f6\u95f4\u3002\u4f8b\u5982\uff0cML\u5f53\u524d\u7206\u70b8\u6027\u8fdb\u6b65\u80cc\u540e\u7684\u57fa\u7840\u9879\u76ee\u4e4b\u4e00ImageNet\u82b1\u4e86\u4e24\u5e74\u591a\u7684\u65f6\u95f4\u521b\u5efa\u3002\u7136\u800c\uff0c\u7ed9\u732b\u3001\u72d7\u3001\u505c\u8f66\u6807\u5fd7\u548c\u884c\u4eba\u8d34\u4e0a\u6807\u7b7e\u662f\u4e00\u56de\u4e8b\uff1b\u6807\u8bb0\u533b\u7597\u56fe\u50cf\u3001\u6cd5\u5f8b\u548c\u91d1\u878d\u5408\u540c\u3001\u653f\u5e9c\u6587\u6863\u3001\u7528\u6237\u6570\u636e\u548c\u7f51\u7edc\u6570\u636e\u7b49\u6570\u636e\u9700\u8981\u4e25\u683c\u7684\u9690\u79c1\u4fdd\u62a4\u548c\u4e3b\u9898\u4e13\u5bb6\u6807\u7b7e\u5668\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5bf9\u4e8e\u91d1\u878d\u670d\u52a1\u3001\u653f\u5e9c\u3001\u7535\u4fe1\u3001\u4fdd\u9669\u3001\u533b\u7597\u4fdd\u5065\u7b49\u884c\u4e1a\u6765\u8bf4\uff0c\u521b\u5efa\u57f9\u8bad\u6570\u636e(\u5ef6\u4f38\u5230\u4f7f\u7528ML)\u8981\u4e48\u662f\u4e00\u9879\u975e\u5e38\u6602\u8d35\u7684\u5185\u90e8\u6d3b\u52a8-\u6216\u8005\u66f4\u591a\u65f6\u5019\uff0c\u8fd9\u9879\u6d3b\u52a8\u6839\u672c\u4e0d\u53ef\u884c\uff0c\u66f4\u4e0d\u7528\u8bf4\u5b9e\u7528\u4e86\u3002\n\u5bf9\u4e8e\u624b\u5de5\u6807\u8bb0\u7684\u6570\u636e\uff0c\u8fed\u4ee3\u5f00\u53d1\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4ece\u5de5\u7a0b\u548c\u6570\u636e\u79d1\u5b66\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u624b\u52a8\u6807\u8bb0\u8bad\u7ec3\u6570\u636e\u4ece\u6839\u672c\u4e0a\u6253\u7834\u4e86\u5feb\u901f\u8fed\u4ee3\u7684\u80fd\u529b\uff0c\u8fd9\u5728\u8f93\u5165\u6570\u636e\u3001\u8f93\u51fa\u76ee\u6807\u548c\u6ce8\u91ca\u6a21\u5f0f\u4e00\u76f4\u5728\u53d8\u5316\u7684\u73b0\u5b9e\u4e16\u754c\u8bbe\u7f6e\u4e2d\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\u3002\u4ece\u4e1a\u52a1\u89d2\u5ea6\u6765\u770b\uff0c\u57f9\u8bad\u6570\u636e\u662f\u4e00\u9879\u6602\u8d35\u7684\u8d44\u4ea7\uff0c\u4e0d\u80fd\u8de8\u9879\u76ee\u91cd\u590d\u4f7f\u7528\uff0c\u7ecf\u5e38\u4f1a\u56e0\u4e3a\u4e0d\u65ad\u53d8\u5316\u7684\u6761\u4ef6\u6216\u4e1a\u52a1\u76ee\u6807\u800c\u5728\u4e00\u591c\u4e4b\u95f4\u8d2c\u503c\u5230\u4e00\u6587\u4e0d\u503c\uff0c\u8fd9\u5e26\u6765\u4e86\u8d8a\u6765\u8d8a\u5927\u7684\u98ce\u9669-\u4ece\u4e0eCOVID\u76f8\u5173\u7684\u5ef6\u8fdf\u5230\u504f\u5dee\u95ee\u9898\u3002\n\u4f7f\u7528Snorkel flow\uff0c\u7528\u6237\u4e0d\u9700\u8981\u624b\u52a8\u6807\u8bb0\u4efb\u4f55\u8bad\u7ec3\u6570\u636e\uff0c\u800c\u662f\u5f00\u53d1\u6807\u8bb0\u3001\u6269\u5145\u548c\u6784\u5efa\u8bad\u7ec3\u6570\u636e\u7684\u7f16\u7a0b\u64cd\u4f5c\u7b26\uff0c\u4ee5\u9a71\u52a8ML\u5f00\u53d1\u8fc7\u7a0b\u3002\n\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u6807\u8bb0\u548c\u6784\u5efa\u8bad\u7ec3\u6570\u636e\u3002\u4f7f\u7528Snorkel Flow\uff0c\u5176\u60f3\u6cd5\u662f\u901a\u8fc7\u7f16\u7a0b\u64cd\u4f5c\u7b26(\u5982\u6807\u7b7e\u51fd\u6570)\u76f4\u63a5\u4ea4\u6d41\u8be5\u9886\u57df\u77e5\u8bc6\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u7684\u6cd5\u5f8b\u5206\u6790\u5458\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u6807\u7b7e\u51fd\u6570\uff0c\u5982\u679c\u6807\u9898\u4e2d\u6709\u201c\u96c7\u4f63\u201d\u4e00\u8bcd\uff0c\u5219\u5c06\u6587\u6863\u6807\u8bb0\u4e3a\u201c\u96c7\u4f63\u5408\u540c\u201d\uff0c\u5426\u5219\u5c31\u653e\u5f03\uff1b\u6216\u8005\uff0c\u4f9d\u8d56\u4e8e\u5185\u90e8\u77e5\u8bc6\u5e93\u3001\u6a21\u578b\u3001\u9057\u7559\u542f\u53d1\u5f0f\u7b49\u7b49\u7684\u4e00\u7cfb\u5217\u66f4\u590d\u6742\u548c\u66f4\u5f3a\u5927\u7684\u6807\u7b7e\u529f\u80fd\u3002\u8fd9\u79cd\u4f7f\u7528\u6570\u636e\u5bf9ML\u8fdb\u884c\u6709\u6548\u7f16\u7a0b\u7684\u65b9\u6cd5\u7b80\u5355\u3001\u76f4\u63a5\u3001\u53ef\u89e3\u91ca\u3001\u53ef\u4fee\u6539\uff0c\u5e76\u4e14\u4e0e\u6240\u4f7f\u7528\u7684\u6a21\u578b\u65e0\u5173(\u8fd9\u5728\u5bd2\u6b66\u7eaa\u529f\u80fd\u5f3a\u5927\u7684\u65b0\u5f00\u6e90\u6a21\u578b\u4f53\u7cfb\u7ed3\u6784\u4e0d\u65ad\u6d8c\u73b0\u7684\u60c5\u51b5\u4e0b\u5c24\u4e3a\u91cd\u8981)\u3002\n\u89c4\u5219\u7684\u76f4\u63a5\u6027\u4e0eML\u7684\u7075\u6d3b\u6027\u3002\u57fa\u4e8e\u89c4\u5219\u7684\u7cfb\u7edf\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u5de5\u4e1a\u4e2d\u7528\u4e8e\u67d0\u4e9b\u4efb\u52a1-\u4f5c\u4e3a\u8f93\u5165\uff0c\u5355\u4e2a\u89c4\u5219\u5177\u6709\u76f4\u63a5\u548c\u53ef\u89e3\u91ca\u7684\u53ef\u53d6\u5c5e\u6027\u3002\u7136\u800c\uff0c\u89c4\u5219\u4e5f\u53ef\u80fd\u662f\u8106\u5f31\u7684\uff0c\u5e76\u4e14\u7f3a\u4e4fML\u65b9\u6cd5\u7684\u5065\u58ee\u6027\u3001\u7075\u6d3b\u6027\u548c\u7edd\u5bf9\u80fd\u529b\u3002\u4f7f\u7528Snorkel Flow\uff0c\u60a8\u53ef\u4ee5\u4e24\u5168\u5176\u7f8e\uff1a\u4f5c\u4e3a\u8f93\u5165\u7684\u662f\u89c4\u5219(\u548c\u5176\u4ed6\u53ef\u89e3\u91ca\u7684\u8d44\u6e90)\uff0c\u800c\u4f5c\u4e3a\u8f93\u51fa\u7684\u662f\u8d85\u8d8a\u8fd9\u4e9b\u89c4\u5219\u7684\u5f3a\u5927\u7684ML\u6a21\u578b\u3002\n\u4e00\u4e2a\u66f4\u5f3a\u5927\u4f46\u66f4\u5f31\u7684\u76d1\u7763\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u8fd9\u79cd\u7a0b\u5e8f\u6027\u76d1\u7763\u5728\u51e0\u4e2a\u8f6c\u578b\u65b9\u9762\u90fd\u6709\u4f18\u52bf\uff0c\u4f46\u5b83\u4e5f\u66f4\u52a0\u6df7\u4e71\uff0c\u5e76\u63d0\u51fa\u4e86\u6839\u672c\u6027\u7684\u65b0\u7684\u6280\u672f\u6311\u6218\u3002\u7528\u6237\u7f16\u5199\u7684\u6807\u7b7e\u51fd\u6570\u548c\u5176\u4ed6\u7f16\u7a0b\u8fd0\u7b97\u7b26\u5c06\u5177\u6709\u4e0d\u540c\u7684\u672a\u77e5\u7cbe\u5ea6\u548c\u4e13\u4e1a\u9886\u57df\uff0c\u5f7c\u6b64\u91cd\u53e0\u548c\u4e0d\u4e00\u81f4\uff0c\u5e76\u4e14\u53ef\u80fd\u4ee5\u7ea0\u7ed3\u548c\u672a\u77e5\u7684\u65b9\u5f0f\u76f8\u5173\u3002\u5728\u56db\u5e74\u591a\u7684\u7814\u7a76\u4e2d\uff0c\u6211\u4eec\u4e13\u6ce8\u4e8e\u8fd9\u4e9b\u95ee\u9898\u7684\u7b97\u6cd5\u548c\u7cfb\u7edf\u89e3\u51b3\u65b9\u6848\uff0c\u4ece\u7ecf\u9a8c\u548c\u7406\u8bba\u4e0a\u8868\u660e\uff0c\u901a\u8fc7\u6b63\u786e\u7684\u6280\u672f\uff0c\u8fd9\u4e9b\u6df1\u5c42\u6b21\u7684\u6280\u672f\u6311\u6218\u662f\u53ef\u4ee5\u514b\u670d\u7684\u3002\u7ed3\u679c\u662f\uff1a\u8bad\u7ec3\u6570\u636e\u4e0e\u624b\u6807\u6570\u636e\u4e00\u6837\u597d\u6216\u66f4\u597d\uff0c\u521b\u5efa\u548c\u7ef4\u62a4\u8d77\u6765\u4e5f\u66f4\u52a0\u5b9e\u7528\u3002\n\u6807\u7b7e\u4e4b\u5916\uff1a\u6570\u636e\u589e\u5f3a\u3001\u5207\u7247\u3001\u76d1\u63a7\u7b49\u3002\u5728\u9ad8\u6027\u80fd\u751f\u4ea7ML\u4e2d\uff0c\u8bad\u7ec3\u6570\u636e\u4e0d\u4ec5\u4ec5\u662f\u6807\u6ce8\u3002\u4f8b\u5982\uff0c\u6570\u636e\u589e\u5f3a\u662f\u4e00\u79cd\u57fa\u77f3\u6280\u672f\uff0c\u5176\u4e2d\u4f7f\u7528\u6570\u636e\u7684\u53d8\u6362\u526f\u672c(\u4f8b\u5982\uff0c\u65cb\u8f6c\u6216\u6a21\u7cca\u56fe\u50cf)\u6765\u6269\u5c55\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u5927\u5c0f\uff0c\u5e76\u4f7f\u6240\u5f97\u5230\u7684\u6a21\u578b\u66f4\u7a33\u5065\u3002\u5c06\u8bad\u7ec3\u6570\u636e\u96c6\u5206\u5272\u6216\u7ed3\u6784\u5316\u4e3a\u6216\u591a\u6216\u5c11\u91cd\u8981\u548c\u56f0\u96be\u7684\u5b50\u96c6\u4e5f\u662f\u7ba1\u7406\u751f\u4ea7ML\u7684\u5173\u952e\u90e8\u5206\u3002\u6700\u540e\uff0c\u5728\u4efb\u4f55\u751f\u4ea7\u7ea7ML\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u4e0d\u4ec5\u76d1\u89c6\u548c\u8c03\u6574\u6a21\u578b\uff0c\u800c\u4e14\u76d1\u89c6\u548c\u8c03\u6574\u901a\u77e5\u5b83\u4eec\u7684\u8bad\u7ec3\u6570\u636e\u4e5f\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u591a\u5e74\u6765\u4e00\u76f4\u662f\u6211\u4eec\u7814\u7a76\u548c\u90e8\u7f72\u7684\u4e3b\u9898\uff0c\u73b0\u5728\u6211\u4eec\u7684\u7aef\u5230\u7aef\u673a\u5668\u5b66\u4e60\u5e73\u53f0Snorkel Flow\u627e\u5230\u4e86\u4e00\u4e2a\u96c6\u4e2d\u7684\u5bb6\uff0c\u7528\u4e8eAI\u5e94\u7528\u5f00\u53d1\u3002\n\u901a\u8fc7\u591a\u5e74\u7684\u90e8\u7f72\u7ecf\u9a8c\uff0c\u6211\u4eec\u8ba4\u8bc6\u5230\u8fd9\u79cd\u65b0\u7684\u7f16\u7a0b\u65b9\u6cd5\u4e0d\u4ec5\u4ec5\u662f\u8bad\u7ec3\u6570\u636e-\u5b83\u6539\u53d8\u4e86\u6784\u5efa\u3001\u90e8\u7f72\u3001\u76d1\u89c6\u548c\u7ef4\u62a4ML\u9a71\u52a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u65b9\u5f0f\u3002\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u6784\u5efa\u652f\u6301ML\uff1aSnorkel flow\u7684\u8fd9\u79cd\u65b0\u65b9\u6cd5\u7684\u7aef\u5230\u7aef\u5e73\u53f0\u3002\n\u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3\u7684ML\u5f00\u53d1\u8fc7\u7a0b\u3002Snorkel Flow\u4f7f\u7528\u6237\u80fd\u591f\u901a\u8fc7\u8fed\u4ee3\u548c\u7f16\u7a0b\u6807\u8bb0\u3001\u6269\u5145\u548c\u6784\u5efa\u8bad\u7ec3\u6570\u636e\u6765\u63a8\u52a8\u5f00\u53d1\u548c\u90e8\u7f72ML\u652f\u6301\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7aef\u5230\u7aef\u6d41\u7a0b\u3002\u7528\u6237\u4ece\u5f00\u53d1\u7f16\u7a0b\u8fd0\u7b97\u7b26\u5f00\u59cb\uff0c\u8303\u56f4\u4ece\u5728\u6309\u94aeUI\u4e2d\u5f00\u53d1\u7684\u7b80\u5355\u6807\u7b7e\u529f\u80fd(\u4f8b\u5982\uff0c\u8868\u8fbe\u89c4\u5219\u6216\u8bd5\u63a2\u6cd5)\u5230\u5e26\u6765\u4e0d\u540c\u4fe1\u53f7\u6e90\u7684\u590d\u6742\u81ea\u5b9a\u4e49\u8fd0\u7b97\u7b26(\u4f8b\u5982\uff0c\u73b0\u6709\u6a21\u578b\u3001\u6807\u7b7e\u3001\u77e5\u8bc6\u5e93\u7b49)\u3002\u901a\u8fc7Python SDK\u3002Snorkel Flow\u81ea\u52a8\u6e05\u7406\u548c\u7ba1\u7406\u8fd9\u4e9b\u64cd\u4f5c\u5458\u7684\u8f93\u51fa-\u8fd8\u96c6\u6210\u4efb\u4f55\u624b\u5de5\u6807\u8bb0\u7684\u6570\u636e\u6216\u5176\u4ed6\u4fe1\u53f7\u6e90(\u5982\u679c\u53ef\u7528)-\u7136\u540e\u4f7f\u7528\u5b83\u6765\u57f9\u8bad\u6700\u5148\u8fdb\u7684\u6a21\u578b\uff0c\u65e0\u8bba\u662f\u6309\u4e0b\u6309\u94ae\u8fd8\u662f\u901a\u8fc7SDK\u3002\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64\u9875\u9762\u3002\n\u4e00\u4e2a\u8fed\u4ee3\u7684\u3001\u53ef\u64cd\u4f5c\u7684\u5f00\u53d1\u548c\u76d1\u63a7\u5faa\u73af\u3002Snorkel Flow\u80cc\u540e\u7684\u4e00\u4e2a\u5173\u952e\u8bbe\u8ba1\u539f\u5219\u662f\uff0c\u6210\u529f\u7684ML\u5f00\u53d1\u6d41\u7a0b\u5fc5\u987b\u4ece\u6839\u672c\u4e0a\u662f\u4eba\u5728\u73af\u8def\u4e2d-\u6309\u94ae\u81ea\u52a8\u5316\u89e3\u51b3\u65b9\u6848\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u6839\u672c\u4e0d\u8d77\u4f5c\u7528-\u4f46\u8fd9\u4e9b\u73af\u8def\u5e94\u8be5\u5728\u6bcf\u4e2a\u8f6c\u5f2f\u65f6\u4e3a\u7528\u6237\u63d0\u4f9b\u660e\u786e\u7684\u3001\u53ef\u64cd\u4f5c\u7684\u6307\u5bfc\u3002\u5728\u6f5c\u6c34\u6c34\u6d41\u4e2d\uff0c\u76d1\u6d4b\u548c\u5206\u6790\u6307\u5bfc\u7528\u6237\u5feb\u901f\u8bc6\u522b\u548c\u7ea0\u6b63\u5176\u8bad\u7ec3\u6570\u636e\u548c\u6a21\u578b\u4e2d\u7684\u9519\u8bef\u6a21\u5f0f\u3002\u51c0\u6548\u679c\uff1a\u4eba\u5de5\u667a\u80fd\u662f\u4e00\u4e2a\u8fed\u4ee3\u7684\u5f00\u53d1\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u53d7\u6570\u636e\u7ea6\u675f\u7684\u4e00\u6b21\u6027\u7ec3\u4e60\u3002\n\u6784\u5efa\u548c\u90e8\u7f72\u7aef\u5230\u7aefAI\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6a21\u578b\u3002\u5176\u4e2d\u4e00\u4e2a\u5173\u952e\u539f\u5219\u662fSnorkel\u6d41\uff0c\u5373ML\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u5b8c\u5168\u662f\u5173\u4e8e\u6570\u636e\u7684-\u4e0d\u4ec5\u662f\u8bad\u7ec3\u6570\u636e\uff0c\u800c\u4e14\u662f\u56f4\u7ed5\u7ec4\u6210\u4efb\u4f55\u5b9e\u9645\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\u7684ML\u6a21\u578b\u7684\u5404\u79cd\u9884\u5904\u7406\u5668\u3001\u540e\u5904\u7406\u5668\u3001\u8fde\u63a5\u5668\u548c\u6574\u4f53\u5de5\u4f5c\u6d41\u3002Snorkel Flow\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u73af\u5883\uff0c\u7528\u4e8e\u6784\u5efa\u8fd9\u4e9b\u5b8c\u6574\u7684\u6570\u636e\u5de5\u4f5c\u6d41\uff0c\u5e76\u53ea\u9700\u6309\u4e00\u4e0b\u6309\u94ae\u5373\u53ef\u5c06\u5176\u90e8\u7f72\u4e3aAPI\u3002\n\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u4f18\u5148\u7684\u5e73\u53f0\uff0c\u5b8c\u5168\u662f\u5173\u4e8e\u8de8\u804c\u80fd\u56e2\u961f\u7684\u3002\u6210\u529f\u7684\u4eba\u5de5\u667a\u80fd\u89e3\u51b3\u65b9\u6848\u9700\u8981\u8de8\u56e2\u961f\u548c\u89d2\u8272\u7684\u534f\u4f5c-\u4ece\u4e3b\u9898\u4e13\u5bb6\u7684\u77e5\u8bc6\u548c\u76ee\u6807\u5230\u673a\u5668\u5b66\u4e60\u5de5\u7a0b\u5e08\u7684\u90e8\u7f72\u7ba1\u9053\u3002Snorkel Flow\u7684\u6784\u5efa\u65e2\u662f\u5f00\u53d1\u4eba\u5458\u4f18\u5148\u7684(\u5728\u6bcf\u4e2a\u9636\u6bb5\u90fd\u5177\u6709\u5b8c\u5168\u7684SDK\u548cCLI\u8bbf\u95ee\u6743\u9650\u548c\u53ef\u914d\u7f6e\u6027)\uff0c\u53c8\u53ef\u4ee5\u6388\u6743\u5e76\u660e\u786e\u5305\u542b\u5176\u4ed6\u5173\u952e\u89d2\u8272\uff0c\u4ee5\u53ca\u7528\u4e8e\u96c6\u6210\u4e3b\u9898\u4e13\u5bb6\u3001\u4e1a\u52a1\u5229\u76ca\u76f8\u5173\u8005\u548c\u5176\u4ed6\u4eba\u5458\u7684\u6309\u94ae\u5f0fUI\u548c\u7279\u5b9a\u7684\u6258\u7ba1\u5de5\u4f5c\u6d41\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u901a\u8fc7Snorkel Flow\u6240\u5efa\u7acb\u7684\u4e00\u5207\u5b8c\u5168\u4f9d\u8d56\u4e8e\u4e0e\u4e00\u4e9b\u4ee4\u4eba\u60ca\u53f9\u7684\u65e9\u671f\u5ba2\u6237(\u5305\u62ec\u51e0\u5bb6\u7f8e\u56fd\u9876\u7ea7\u94f6\u884c\u3001\u653f\u5e9c\u673a\u6784\u548c\u5176\u4ed6\u5927\u578b\u4f01\u4e1a)\u3001\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u9876\u7ea7\u6295\u8d44\u8005(Greylock\u3001GV\u3001In-Q-tel\u7b49)\u7684\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\uff0c\u4ee5\u53ca\u6765\u81ea\u8c37\u6b4c\u3001Facebook\u3001NVIDIA\u7b49\u5730\u7684\u771f\u6b63\u5343\u8f7d\u96be\u9022\u7684\u5de5\u7a0b\u5e08\u56e2\u961f\uff0c\u4ee5\u53ca\u6765\u81ea\u65af\u5766\u798f\u5927\u5b66\u3001\u534e\u76db\u987f\u5927\u5b66\u3001\u5e03\u6717\u5927\u5b66\u3001\u5a01\u65af\u5eb7\u661f\u5dde\u7b49\u5730\u7684\u5b66\u8005\u3002\n\u5c55\u671b\u672a\u6765\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u80fd\u7ee7\u7eed\u4e0e\u6765\u81ea\u91d1\u878d\u3001\u653f\u5e9c\u3001\u7535\u4fe1\u3001\u4fdd\u9669\u548c\u533b\u7597\u4fdd\u5065\u7b49\u9886\u57df\u7684\u4e00\u6279\u6700\u4f18\u79c0\u7684\u56e2\u961f\u548c\u7ec4\u7ec7\u5408\u4f5c\uff0c\u5728\u5e2e\u52a9\u6211\u4eec\u53d1\u5c55\u5e73\u53f0\u7684\u540c\u65f6\u63d0\u4f9b\u5feb\u901f\u7684\u5e95\u7ebf\u4ef7\u503c\u3002\u5982\u679c\u60a8\u6709\u5174\u8da3\u6210\u4e3a\u8fd9\u4e9b\u65e9\u671f\u5408\u4f5c\u4f19\u4f34\u4e2d\u7684\u4e00\u5458\uff0c\u8bf7\u5728\u6b64\u5904\u8054\u7cfb\u3002\n\u5f53\u7136\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u8bf4\uff1a\u201c\u6211\u4eec\u6b63\u5728\u62db\u8058\uff01\u201d\u6211\u4eec\u7684\u516c\u53f8\u771f\u7684\u4f1a\u8bbe\u5728\u5e15\u6d1b\u963f\u5c14\u6258\u5417\uff1f\u5982\u679c\u60a8\u6709\u5174\u8da3\u6210\u4e3a\u4e00\u4e2a\u9ad8\u6280\u672f\u3001\u4e16\u754c\u7ea7\u56e2\u961f\u7684\u4e00\u5458\uff0c\u6210\u4e3aML\u3001\u6570\u636e\u548c\u7cfb\u7edf\u7684\u65b0\u4ea4\u53c9\u70b9\u7684\u524d\u6cbf\u5148\u950b\uff0c\u5e76\u5bf9\u73b0\u5b9e\u4e16\u754c\u4ea7\u751f\u91cd\u5927\u800c\u76f4\u63a5\u7684\u5f71\u54cd\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u62db\u8058\u9875\u9762\u3002\n\u6211\u4eec\u975e\u5e38\u5174\u594b\u5730\u5ba3\u5e03\u8fd8\u6709\u66f4\u591a\u5373\u5c06\u5230\u6765\u7684\u6d88\u606f--\u540c\u65f6\uff0c\u656c\u8bf7\u5173\u6ce8\uff01", "note_en": "Today I\u2019m excited to announce Snorkel AI\u2019s launch out of stealth!\r Snorkel AI, which spun out of the Stanford AI Lab in 2019, was founded on two simple premises: first, that the labeled  training data machine learning models learn from is increasingly what determines the success or failure of AI applications.\r And second, that we can do much better than labeling this data entirely by hand.\n  At the Stanford AI lab, the Snorkel AI founding team spent over four years developing new  programmatic approaches to labeling, augmenting, structuring, and managing this training data.\r We were fortunate to develop and deploy early versions of our technology with some of the world\u2019s leading organizations like  Google,  Intel,  Apple,  Stanford Medicine, resulting in  over thirty-six peer-reviewed publications on our findings; innovations in weak supervision modeling, data augmentation, multi-task learning, and more; inclusion in university computer science curriculums; and deployments in popular products and systems that you\u2019ve likely interacted with in the last few hours.\n  Through all this academic tinkering and industry spelunking, we realized two things: first, that this concept of labeling and building training data programmatically, rather than by hand, had transformational potential to make machine learning more iterative, auditable, faster to deploy, and ultimately, more practical.\r And second, that these ideas changed not just how you label training data, but so much of the entire lifecycle and pipeline of ML: how knowledge and feedback is injected; how models are constructed, trained, versioned, and monitored; how entire pipelines are developed iteratively; and how the full set of stakeholders in any ML deployment, from subject matter experts to ML engineers, are incorporated into the process.\n  In other words, we saw that this shift to programmatic training data required a top-to-bottom rewrite of the entire ML development and deployment process.\r With the support of some amazing investors (Greylock, GV, In-Q-Tel, and others) and incredible early customers, we\u2019ve spent the last year doing just this: building and deploying  Snorkel Flow, an end-to-end platform to support this new vision of the ML process.\n    Snorkel Flow was motivated first and foremost by a growing realization that training data had become the key bottleneck in much of ML pipeline and AI application development.\n    Today\u2019s ML successes often rest on a hidden cost: massive, hand-labeled training datasets.\r In the last decade, we\u2019ve seen a tectonic shift in AI and ML towards powerful but data-hungry representation learning models.\r These models\u2014often deep learning architectures\u2014are not only more powerful at obviating traditionally manual development tasks like feature engineering and bespoke model design, but also have never been more accessible in the open source.\r However, there\u2019s no such thing as a free lunch: these models are highly complex, with tens to hundreds of millions of parameters, and they require massive labeled training datasets to learn from.\r And, other than in special scenarios where labels are naturally derivative of existing processes, these training datasets need to be labeled by hand.\n  The hand-labeled training data interface to ML has enabled tremendous progress, but is also ridiculously broken.\r Consider a simple example: a legal analyst at a bank wants to train a contract classification model, and wants to inject a simple heuristic into the ML model: that if \u201cemployment\u201d is in the title, the contract should be labeled as an \u201cEmployment contract.\u201d\r Simple, right?\r Not so.\r Theoretically, to communicate this specific feature to a machine learning model via only labeling individual data points could require thousands of examples (roughly, inversely proportional to the sparsity of the feature space).\r From this perspective, it\u2019s like playing 20 questions rather than just communicating the answer directly\u2014fine if you have a massive question-answer bank, but otherwise wholly impractical.\n  Manually labeling training data is prohibitively expensive\u2013especially when expertise and privacy are required.\r Building training datasets often requires  armies of human labelers at massive cost and time expense.\r For example, ImageNet\u2014one of the foundational projects behind ML\u2019s current explosive progress\u2014took  over two years to create.\r However, labeling cats, dogs, stop signs, and pedestrians is one thing; labeling data like medical images, legal and financial contracts, government documents, user data, and network data requires  stringent privacy protections and  subject matter expert labelers.\r This means for sectors like financial services, government, telecommunications, insurance, healthcare, and more, creating training data (and by extension, using ML) is either a hugely expensive on-premise activity\u2014or more often, one that is just not feasible to tackle, let alone practical.\n  Iterative development is not possible with hand-labeled data.\r From an engineering and data science perspective, manually labeled training data fundamentally breaks the ability to quickly iterate, which is absolutely essential in real world settings where input data, output goals, and annotation schema change all the time.\r From a business perspective, training data is an expensive asset that can\u2019t be reused across projects, can often depreciate to worthless overnight due to changing conditions or business goals, and that presents growing risks\u2014everything from  COVID-related delays to  issues of bias.\n    With Snorkel Flow, rather than needing to hand-label any training data, users develop  programmatic operators that label, augment, and build training data to drive the ML development process.\n    Programmatically labeling and building training data.\r With Snorkel Flow, the idea is to instead communicate this domain knowledge directly via a programmatic operator like a  labeling function.\r For example, our legal analyst could write a labeling function that labels documents as \u201cEmployment contracts\u201d if the word \u201cemployment\u201d is in the title, and otherwise abstains; or, a range of more complex and powerful labeling functions relying on internal knowlegebases, models, legacy heuristics, and more.\r This approach of effectively programming ML with data is simple, direct, interpretable, modifiable, and agnostic to the model used (which is especially important given the ongoing Cambrian explosion of powerful new open source model architectures).\n  The directness of rules with the flexibility of ML.\r Rule-based systems have long been used in industry for certain tasks\u2014as an input, individual rules have the desirable property of being direct and interpretable.\r However, rules can also be brittle, and lack the robustness, flexibility, and sheer power of ML approaches.\r With Snorkel Flow, you get the best of both worlds: rules (and other interpretable resources) as inputs, and powerful ML models that generalize beyond these rules as the output.\n    A more powerful yet weaker supervision.\r At the same time that this programmatic supervision is advantageous in several transformational ways, it is also messier and raises fundamental new technical challenges.\r The labeling functions and other programmatic operators that users write will have varying unknown accuracies and expertise areas, will overlap and disagree with each other, and may be correlated in tangled and unknown ways.\r We focused on the algorithmic and systems solutions to these issues over  four-plus years of research, showing both empirically and theoretically that with the right techniques, these deep technical challenges can be overcome.\r The result: training data that is as good as or better than hand-labeled data, and immensely more practical to create and maintain.\n  Beyond labeling: data augmentation, slicing, monitoring, and more.\r In high-performance production ML, training data is about a lot more than labeling.\r For example, data augmentation is a cornerstone technique wherein transformed copies of data (e.g. rotated or blurred images) are used to expand the sizes of training datasets, and make resulting models more robust.\r Slicing or structuring training datasets into more or less important and difficult subsets is also a critical part of managing production ML. \r Finally, monitoring and adapting not just models but also the training data that informs them is a critical necessity in any production-grade ML application.\r All of these operations have been the subject of our research and deployments for years, and now find a centralized home in our end-to-end machine learning platform for AI application development, Snorkel Flow.\n    Through years of deployment experience, we realized that this new programmatic approach is not just about training data\u2014it transforms the entire way one builds, deploys, monitors, and maintains ML-driven applications.\r Over the last year we have been building the end-to-end platform supporting this new approach to ML: Snorkel Flow.\n    An ML development process centered around the data.\r Snorkel Flow enables users to drive the end-to-end process of developing and deploying ML-powered applications by iteratively and programmatically labeling, augmenting, and building training data.\r Users start by developing programmatic operators, ranging from simple labeling functions developed in a push-button UI (e.g. expressing rules or heuristics), to complex custom operators bringing diverse sources of signal to bear (e.g. existing models, labels, knowledge bases, etc.) via the Python SDK. \r Snorkel Flow automatically cleans and manages the output of these operators\u2013also integrating any hand-labeled data or other sources of signal if available\u2013and then uses this to train state-of-the-art models, either push-button or via SDK.\r For more details, see  this page.\n  An iterative, actionable development and monitoring loop.\r A key design principle behind Snorkel Flow is that successful ML development processes must be fundamentally human-in-the-loop\u2013push button automagic solutions simply do not work in the real world\u2013but that these loops should give users clear, actionable guidance at each turn.\r In Snorkel Flow, monitoring and analysis guides users to rapidly identify and correct error modes in their training data and models.\r The net effect: AI as an iterative development process, rather than a one-and-done exercise bound by the data.\n  Building and deploying end-to-end AI applications, beyond just models.\r One of the key principles is Snorkel Flow is that ML application development is all about the data\u2014and not just the training data, but the various pre-processors, post-processors, connectors, and overall workflows around the ML models that make up any real production application.\r Snorkel Flow provides an end-to-end environment for building these full data workflows, and deploying them as APIs with the push of a button.\n  A developer-first platform that is all about cross-functional teams.\r Successful AI solutions require collaboration across teams and roles- from the subject matter expert\u2019s knowledge and objectives to the machine learning engineer\u2019s deployment pipeline.\r Snorkel Flow is built to be both developer-first\u2014with full SDK and CLI access and configurability at every stage\u2014as well as empowering and explicitly including other key roles, with push-button UIs and specific managed workflows for integrating subject matter experts, business stakeholders, and others.\n    What we\u2019ve built with Snorkel Flow so far has been entirely dependent on partnerships with some amazing early customers (including several top US banks, government agencies, and other large enterprises), an incredible group of top-tier investors (Greylock, GV, In-Q-Tel, and others) who have actively supported us the whole way, and a truly once-in-a-lifetime team of engineers from places like Google, Facebook, NVIDIA, etc. and academics from places like Stanford, UW, Brown, Wisconsin, etc.\n  Moving forward, we are excited to continue partnering with a select set of the best teams and organizations from sectors like  finance, government, telecommunications, insurance, and healthcare to deliver rapid bottom-line value while also helping us evolve our platform. If you are interested in being one of these early partners, please  reach out here.\n  And, of course, could our company really be based in Palo Alto if we didn\u2019t say the following: \u201cWe\u2019re hiring!\u201d?\r Please check out our  jobs page if you\u2019re interested in being part of a highly technical, world-class team at the cutting-edge vanguard of a new intersection of ML, data, and systems with significant and immediate real-world impact.\n  There\u2019s a lot more coming that we are very excited to announce\u2014in the meantime, stay tuned!", "posttime": "2020-07-16 13:07:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,ai,\u6570\u636e", "title": "Snorkel AI\uff1a\u5728ML\u5f00\u53d1\u4e2d\u5c06\u6570\u636e\u653e\u5728\u9996\u4f4d", "title_en": "Snorkel AI: Putting Data First in ML Development", "transed": 1, "url": "https://www.snorkel.ai/07-14-2020-snorkel-ai-launch.html", "via": "", "real_tags": ["\u5f00\u53d1", "ai", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1012218, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u5de5\u5177\u8ba1\u7b97\u74f6\u76d6\u7684\u87ba\u7eb9\u89c4\u683c\uff0c\u4ee5\u4fbf\u5728\u8bf8\u5982Fusion 360\u4e4b\u7c7b\u7684CAD\u7a0b\u5e8f\u4e2d\u5efa\u6a21\u3002\n\u8fd9\u9002\u7528\u4e8e\u7b26\u5408ASTM D2911(\u4e5f\u79f0\u4e3aGPI&34\uff1b\u6216SPI&34\uff1b\u87ba\u7eb9\u9970\u9762)\u7684\u74f6\u5b50\u3002\n(\u867d\u7136ASTM\u5bf9\u8fd9\u79cd\u89c4\u683c\u6536\u53d660\u7f8e\u5143\u7684\u8d39\u7528\uff0c\u4f46\u91cd\u8981\u90e8\u4ef6\u53ef\u4ee5\u5728\u7f51\u4e0a\u514d\u8d39\u627e\u5230\u3002)\u3002\n\u8fd9\u5047\u8bbe\u60a8\u6b63\u5728\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u5177\u6709\u4e09\u89d2\u5f62\u6a2a\u622a\u9762\u7684\u87ba\u65cb\uff0c\u7136\u540e\u7528\u5706\u67f1\u5b54\u5207\u65ad\u4e09\u89d2\u5f62\u7684\u5c16\u7aef\u6765\u5bf9\u87ba\u7eb9\u8fdb\u884c\u5efa\u6a21\u3002", "note_en": "This tool calculates the thread specifications of bottle caps for modelling in CAD programs such as Fusion 360.\n  This is intended for use with bottles that conform to  ASTM D2911,\ralso known as &#34;GPI&#34; or &#34;SPI&#34; thread finishes.\n  (While ASTM charges $60 for the spec, the important parts can be found  freely online.)\n  This assumes that you are modelling the thread by creating a coil with a triangular cross section, then\rcutting the tip of the triangle off with a cylindrical hole.", "posttime": "2020-07-16 12:46:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u87ba\u7eb9,cap", "title": "\u74f6\u76d6\u87ba\u7eb9\u8ba1\u7b97\u5668", "title_en": "Bottle Cap Thread Calculator", "transed": 1, "url": "https://www.noupoi.net/bottle-cap-thread-calculator.html", "via": "", "real_tags": ["\u87ba\u7eb9", "cap"]}, {"category": "", "categoryclass": "", "imagename": "305cdbb53843a0a150153d13d5e0f10f.jpg", "infoid": 1012217, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76f8\u4fe1\u6211\uff0c\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u6211\u660e\u767d\u6211\u5e94\u8be5\u53d8\u5f97\u66f4\u5f3a\u58ee\u3002\u662f\u7684\uff0c\u6211\u662f\u4e00\u4e2a\u6709\u6c27\u91ce\u517d(\u6216\u8005\uff0c\u5982\u679c\u4f60\u559c\u6b22\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6709\u6c27\u4e0a\u763e\u8005)\uff0c\u4f46\u6211\u5e76\u4e0d\u662f\u5fd8\u8bb0\u4e86\u62e5\u6709\u9002\u91cf\u808c\u8089\u7684\u597d\u5904\u3002\u5f53\u6211\u6f14\u594f\u201c\u770b\uff0c\u4f60\u78b0\u5230\u5929\u82b1\u677f\u4e86\uff01\u201d\u5f53\u6211\u548c\u621118\u4e2a\u6708\u5927\u7684\u5973\u513f\u73a9\u6e38\u620f\u65f6\uff0c\u6211\u5b81\u613f\u5728\u6211\u4e0d\u5f97\u4e0d\u627f\u8ba4\u7238\u7238\u4e0d\u80fd\u518d\u5bf9\u5979\u65bd\u52a0\u519b\u4e8b\u538b\u529b\u4e4b\u524d\uff0c\u8ba9\u5979\u611f\u5230\u65e0\u804a\u3002\u6211\u5e0c\u671b20\u5e74\u540e\uff0c\u6211\u4ecd\u7136\u80fd\u591f\u5728\u6ca1\u6709\u5e2e\u52a9\u7684\u60c5\u51b5\u4e0b\u628a\u81ea\u5df1\u4ece\u6276\u624b\u6905\u4e0a\u63a8\u8d77\u6765\u3002\n\u4f46\u662f\u5728\u201c\u5e94\u8be5\u201d\u548c\u201c\u505a\u201d\u4e4b\u95f4\u662f\u6709\u5dee\u8ddd\u7684\u3002\u8fd9\u4e00\u5dee\u8ddd\u662f\u516c\u5171\u536b\u751f\u9886\u57df\u6700\u4ee4\u4eba\u70e6\u607c\u7684\u8c1c\u56e2\u4e4b\u4e00\uff0c\u5373\u4f7f\u50cf\u6211\u8fd9\u6837\u6574\u5929\u544a\u8bc9\u522b\u4eba\u4ed6\u4eec\u5e94\u8be5\u505a\u4ec0\u4e48\u7684\u4eba\uff0c\u4e5f\u4e0d\u80fd\u5e78\u514d\u4e8e\u6b64\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6211\u603b\u662f\u6e34\u671b\u63d0\u9192\u4eba\u4eec\u4ec0\u4e48\u662f\u5371\u9669\u7684-\u4e24\u7bc7\u65b0\u7684\u8bba\u6587\u4e3a\u529b\u91cf\u8bad\u7ec3\u7684\u597d\u5904\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4ee4\u4eba\u5927\u5f00\u773c\u754c\u7684\u89c1\u89e3\uff0c\u5373\u4f7f\u662f\u5bf9\u90a3\u4e9b\u7ecf\u5e38\u6253\u7834\u6709\u6c27\u8fd0\u52a8\u6307\u5357\u7684\u4eba\u6765\u8bf4\u4e5f\u662f\u5982\u6b64\u3002\n\u9996\u5148\uff0c\u5370\u7b2c\u5b89\u7eb3\u5927\u5b66\u7684\u4e00\u4e2a\u7814\u7a76\u5c0f\u7ec4\u5229\u7528\u56fd\u5bb6\u5065\u5eb7\u548c\u8425\u517b\u68c0\u67e5\u8c03\u67e5\u7684\u6570\u636e\uff0c\u5bf9\u529b\u91cf\u3001\u808c\u8089\u8d28\u91cf\u548c\u6b7b\u4ea1\u7387\u4e4b\u95f4\u7684\u8054\u7cfb\u8fdb\u884c\u4e86\u5206\u6790\u3002\u8bbe\u8ba1\u975e\u5e38\u7b80\u5355\uff1a\u4ed6\u4eec\u8bc4\u4f30\u4e864440\u540d50\u5c81\u621650\u5c81\u4ee5\u4e0a\u7684\u6210\u5e74\u4eba\uff0c\u8fd9\u4e9b\u4eba\u57281999\u5e74\u81f32002\u5e74\u95f4\u63a5\u53d7\u4e86\u529b\u91cf\u548c\u808c\u8089\u8d28\u91cf\u7684\u8bc4\u4f30\u3002\u7814\u7a76\u4eba\u5458\u57282011\u5e74\u8fdb\u884c\u4e86\u68c0\u67e5\uff0c\u770b\u770b\u8c01\u6b7b\u4e86\u3002\n\u5728\u808c\u8089\u8d28\u91cf\u65b9\u9762\uff0c\u4ed6\u4eec\u4f7f\u7528DEXA\u626b\u63cf\u4eea\u786e\u5b9a23%\u7684\u53d7\u8bd5\u8005\u7b26\u5408\u4e00\u79cd\u201c\u4f4e\u808c\u8089\u8d28\u91cf\u201d\u7684\u5b9a\u4e49\uff0c\u624b\u81c2\u548c\u817f\u90e8\u7684\u603b\u808c\u8089\u52a0\u8d77\u6765\u4e0d\u523043.5\u78c5(\u7537\u6027)\u621633\u78c5(\u5973\u6027)\u3002\u5728\u529b\u91cf\u65b9\u9762\uff0c\u4ed6\u4eec\u4f7f\u7528\u4e86\u4e00\u79cd\u6d4b\u91cf\u819d\u76d6\u4f38\u5c55\u808c(\u4f7f\u4f60\u4f38\u76f4\u819d\u76d6\u7684\u808c\u8089)\u6700\u5927\u529b\u91cf\u7684\u8bbe\u5907\uff0c\u53d1\u73b019%\u7684\u53d7\u8bd5\u8005\u808c\u8089\u529b\u91cf\u8f83\u4f4e\u3002\n\u8fd9\u9879\u53d1\u8868\u5728\u300a\u8fd0\u52a8\u4e0e\u953b\u70bc\u533b\u5b66\u4e0e\u79d1\u5b66\u300b\u4e0a\u7684\u7814\u7a76\u7ed3\u679c\u53d1\u73b0\uff0c\u5728\u968f\u8bbf\u671f\u5185\uff0c\u808c\u8089\u529b\u91cf\u4e0d\u8db3\u7684\u4eba\u6b7b\u4ea1\u7684\u53ef\u80fd\u6027\u662f\u808c\u8089\u529b\u91cf\u6b63\u5e38\u7684\u4eba\u7684\u4e24\u500d\u591a\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u808c\u8089\u8d28\u91cf\u4f4e\u4f3c\u4e4e\u6ca1\u6709\u90a3\u4e48\u91cd\u8981\u3002\n\u7ed3\u679c\u5982\u4e0b\u6240\u793a\u3002LMM\u4ee3\u8868\u4f4e\u808c\u8089\u8d28\u91cf\uff0cLMS\u4ee3\u8868\u4f4e\u808c\u8089\u529b\u91cf\uff1a\n\u524d\u9762\u53f3\u4fa7\u7684\u53c2\u7167\u7ec4\u662f\u90a3\u4e9b\u6ca1\u6709\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u7684\u53c2\u7167\u7ec4\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u90a3\u4e9b\u540c\u65f6\u60a3\u6709\u8fd9\u4e24\u79cd\u75be\u75c5\u7684\u4eba\u5728\u7814\u7a76\u671f\u95f4\u6b7b\u4ea1\u7684\u53ef\u80fd\u6027\u662f2.66\u500d\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u808c\u8089\u8d28\u91cf\u4f4e\u4f46\u529b\u91cf\u6b63\u5e38\u4f3c\u4e4e\u5e76\u4e0d\u662f\u4e00\u4ef6\u574f\u4e8b\u3002\n\u8fd9\u91cc\u7684\u7559\u8a00\u5417\uff1f\u529f\u80fd\u6bd4\u4f60\u7684\u957f\u76f8\u66f4\u91cd\u8981\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u8ba9\u4f60\u7684\u808c\u8089\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\u800c\u6d88\u878d\uff1b\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6700\u7ec8\u4e0d\u5f97\u4e0d\u5728\u67d0\u4e2a\u65f6\u5019\u4f4f\u9662\uff0c\u62e5\u6709\u4e00\u4e2a\u826f\u597d\u7684\u808c\u8089\u50a8\u5907\u53ef\u80fd\u662f\u5f88\u91cd\u8981\u7684\u3002\u4f46\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e9b\u52aa\u529b\u589e\u52a0\u808c\u8089\uff0c\u4f46\u575a\u6301\u901a\u8fc7\u5408\u7406\u6570\u91cf\u7684\u5f15\u4f53\u5411\u4e0a\u548c\u5176\u4ed6\u529b\u91cf\u7ec3\u4e60\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e2a\u597d\u6d88\u606f\u3002\n\u53e6\u4e00\u9879\u7814\u7a76\u9488\u5bf9\u7684\u662f\u8fd9\u6837\u4e00\u79cd\u770b\u6cd5\uff0c\u5373\u529b\u91cf\u8bad\u7ec3\u662f\u516c\u5171\u536b\u751f\u6307\u5357\u4e2d\u7684\u4e8b\u540e\u8003\u8651\u3002\u6211\u4eec\u5927\u591a\u6570\u4eba\u90fd\u8bb0\u5f97\uff0c\u6211\u4eec\u5e94\u8be5\u6bcf\u5468\u81f3\u5c11\u8fdb\u884c150\u5206\u949f\u7684\u9002\u5ea6\u8fd0\u52a8\u621675\u5206\u949f\u7684\u5267\u70c8\u8fd0\u52a8\u3002\u5927\u91cf\u6570\u636e\u652f\u6301\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u5bf9\u5065\u5eb7\u6709\u76ca\u7684\u5f71\u54cd\u3002\n\u4f46\u6307\u5357\u8fd8\u5efa\u8bae\u6bcf\u5468\u81f3\u5c11\u505a\u4e24\u6b21\u201c\u589e\u5f3a\u4f53\u529b\u7684\u953b\u70bc\u201d--\u8fd9\u4e00\u6761\u6b3e\u7ecf\u5e38\u88ab\u9057\u5fd8\uff0c\u5176\u597d\u5904\u901a\u5e38\u88ab\u6846\u5b9a\u5728\u907f\u514d\u865a\u5f31\u548c\u63d0\u9ad8\u751f\u6d3b\u8d28\u91cf\u65b9\u9762\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u5ef6\u957f\u3002\n\u6fb3\u5927\u5229\u4e9a\u7684\u7814\u7a76\u4eba\u5458\u5206\u6790\u4e86\u82f1\u683c\u5170\u548c\u82cf\u683c\u51708\u4e07\u540d\u6210\u5e74\u4eba\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u4eba\u4ece20\u4e16\u7eaa90\u5e74\u4ee3\u5f00\u59cb\u5b8c\u6210\u4e86\u5173\u4e8e\u4ed6\u4eec\u8eab\u4f53\u6d3b\u52a8\u6a21\u5f0f\u7684\u8c03\u67e5\u3002\u603b\u4f53\u7ed3\u679c\u662f\uff0c\u90a3\u4e9b\u62a5\u544a\u8fdb\u884c\u8fc7\u4efb\u4f55\u529b\u91cf\u8bad\u7ec3\u7684\u4eba\u5728\u7814\u7a76\u671f\u95f4\u6b7b\u4ea1\u7684\u53ef\u80fd\u6027\u964d\u4f4e\u4e8623%\uff0c\u6b7b\u4e8e\u764c\u75c7\u7684\u53ef\u80fd\u6027\u964d\u4f4e\u4e8631%\u3002\u901a\u8fc7\u6bcf\u5468\u4e24\u6b21\u529b\u91cf\u8bad\u7ec3\u6765\u8fbe\u5230\u6307\u5bfc\u65b9\u9488\uff0c\u4f1a\u5e26\u6765\u4e00\u4e9b\u989d\u5916\u7684\u597d\u5904\u3002\n\u4e00\u4e2a\u6709\u8da3\u7684\u7ec6\u8282(\u5bf9\u6211\u6765\u8bf4\uff0c\u4e5f\u662f\u4ee4\u4eba\u653e\u5fc3\u7684)\uff1a\u5728\u5065\u8eab\u623f\u8fdb\u884c\u529b\u91cf\u8bad\u7ec3\u548c\u505a\u4f53\u91cd\u953b\u70bc\u4f3c\u4e4e\u53ef\u4ee5\u5e26\u6765\u5927\u81f4\u76f8\u540c\u7684\u597d\u5904\u3002\u6240\u4ee5\u4f60\u4e0d\u4e00\u5b9a\u9700\u8981\u4e3e\u8d77\u5927\u91cf\u7684\u94c1\u3002\n\u5728\u8fd9\u4e2a\u7279\u5b9a\u7684\u961f\u5217\u4e2d\uff0c\u53ea\u6ee1\u8db3\u529b\u91cf\u8bad\u7ec3\u6307\u5357\u7684\u597d\u5904\u4f3c\u4e4e\u5927\u81f4\u76f8\u5f53\u4e8e\u53ea\u6ee1\u8db3\u6709\u6c27\u8bad\u7ec3\u6307\u5357-\u81f3\u5c11\u5728\u603b\u4f53\u6b7b\u4ea1\u7387\u65b9\u9762\u662f\u8fd9\u6837\u3002\u7136\u800c\uff0c\u529b\u91cf\u8bad\u7ec3\u5e76\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u9884\u9632\u5fc3\u810f\u75c5\u7684\u4fdd\u62a4\u3002\u6709\u4e00\u4e9b\u8bc1\u636e\u8868\u660e\uff0c\u529b\u91cf\u8bad\u7ec3\u53ef\u80fd\u4f1a\u964d\u4f4e\u8840\u538b\uff0c\u4f46\u4f1a\u589e\u52a0\u52a8\u8109\u50f5\u786c\uff0c\u6709\u6548\u5730\u62b5\u6d88\u4e86\u5bf9\u5fc3\u810f\u7684\u597d\u5904\u3002\u8fd9\u9879\u7814\u7a76\u4e0d\u80fd\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u7814\u7a76\u7ed3\u679c\u786e\u5b9e\u8868\u660e\uff0c\u5b8c\u5168\u653e\u5f03\u6709\u6c27\u8fd0\u52a8\u53ef\u80fd\u5e76\u4e0d\u662f\u6700\u4f73\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6240\u6709\u7ed3\u679c\u4e2d\u6700\u597d\u7684-\u5728\u7814\u7a76\u671f\u95f4\u6b7b\u4ea1\u98ce\u9669\u964d\u4f4e\u4e8629%-\u5f52\u529f\u4e8e\u90a3\u4e9b\u540c\u65f6\u6ee1\u8db3\u6709\u6c27\u548c\u529b\u91cf\u8bad\u7ec3\u6307\u5357\u7684\u4eba\u3002\n\u6240\u4ee5\uff0c\u603b\u800c\u8a00\u4e4b\uff0c\u529b\u91cf\u8bad\u7ec3\u5bf9\u4f60\u6709\u597d\u5904\u3002\u8fd9\u771f\u7684\u544a\u8bc9\u4e86\u4f60\u4ec0\u4e48\u4f60\u4e0d\u77e5\u9053\u7684\u4e8b\u5417\uff1f\u4e5f\u8bb8\u4e0d\u662f\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u8dd1\u6b65\u8005\u63a5\u53d7\u81ea\u52a8\u5728\u7ebf\u5efa\u8bae\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u907f\u514d\u53d7\u4f24\u7684\u7814\u7a76\u3002\u8fd9\u4e2a\u5efa\u8bae\u4f3c\u4e4e\u663e\u800c\u6613\u89c1\u5f97\u4ee4\u4eba\u75db\u82e6\uff1a\u503e\u542c\u4f60\u7684\u8eab\u4f53\uff0c\u4e0d\u8981\u592a\u7a81\u7136\u5730\u589e\u52a0\u901f\u5ea6\u548c\u97f3\u91cf\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u4f46\u5b83\u8d77\u4f5c\u7528\u4e86\u3002\u53d7\u4f24\u4eba\u6570\u51cf\u5c11\u4e8613.1%\u3002\u8fd9\u6216\u591a\u6216\u5c11\u5c31\u662f\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u6240\u5e0c\u671b\u7684\uff0c\u5bf9\u6211\u4eec\u6240\u6709\u4eba\u6765\u8bf4\uff1a\u5728\u65b0\u8bc1\u636e\u7684\u652f\u6301\u4e0b\uff0c\u5bf9\u4e00\u4e9b\u663e\u800c\u6613\u89c1\u7684\u4e8b\u60c5\u7684\u63d0\u9192\uff0c\u5c06\u5e2e\u52a9\u6211\u7ee7\u7eed\u505a\u6211\u77e5\u9053\u6211\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\u3002\n\u5728Twitter\u6216Facebook\u4e0a\u8ba8\u8bba\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6ce8\u518c\u6c57\u6c34\u79d1\u5b66\u7535\u5b50\u90ae\u4ef6\u65f6\u4e8b\u901a\u8baf\uff0c\u770b\u770b\u6211\u5373\u5c06\u51fa\u7248\u7684\u4e66\u201c\u5fcd\u8010\uff1a\u5927\u8111\u3001\u8eab\u4f53\u548c\u4eba\u7c7b\u8868\u73b0\u7684\u5947\u602a\u5f39\u6027\u6781\u9650\u201d(Ensture\uff1aMind\uff0cBody\uff0cand the Currary Elastic Limits of Human Performance)\u3002\n\u6211\u4eec\u6fc0\u52b1\u8bfb\u8005\u8d70\u51fa\u56fd\u95e8\u7684\u4f7f\u547d\u4ece\u672a\u50cf\u73b0\u5728\u8fd9\u6837\u91cd\u8981\u3002\u8fd1\u5e74\u6765\uff0c\u5916\u90e8\u5728\u7ebf\u62a5\u9053\u4e86\u4e00\u9879\u7a81\u7834\u6027\u7684\u7814\u7a76\uff0c\u5c06\u81ea\u7136\u754c\u4e2d\u7684\u65f6\u95f4\u4e0e\u6539\u5584\u5fc3\u7406\u548c\u8eab\u4f53\u5065\u5eb7\u8054\u7cfb\u8d77\u6765\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u5411\u60a8\u901a\u62a5\u7f8e\u56fd\u516c\u5171\u571f\u5730\u9762\u4e34\u7684\u524d\u6240\u672a\u6709\u7684\u5a01\u80c1\u3002\u6211\u4eec\u4e25\u8c28\u7684\u62a5\u9053\u6709\u52a9\u4e8e\u5f15\u53d1\u5173\u4e8e\u5065\u5eb7\u3001\u65c5\u884c\u548c\u5192\u9669\u7684\u91cd\u8981\u8fa9\u8bba\uff0c\u5b83\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e86\u901a\u5f80\u65b0\u7684\u6237\u5916\u6fc0\u60c5\u7684\u901a\u9053\u3002\u6237\u5916\u65f6\u95f4\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5e2e\u52a9\u60a8\u5145\u5206\u5229\u7528\u8fd9\u6bb5\u65f6\u95f4\u3002\u5411\u5916\u90e8\u5728\u7ebf\u6350\u6b3e\u53ea\u9700\u51e0\u5206\u949f\uff0c\u5c06\u786e\u4fdd\u6211\u4eec\u80fd\u591f\u7ee7\u7eed\u63d0\u4f9b\u50cf\u60a8\u8fd9\u6837\u7684\u8bfb\u8005\u6240\u4f9d\u8d56\u7684\u5f00\u521b\u6027\u3001\u4fe1\u606f\u91cf\u5927\u7684\u65b0\u95fb\u3002\u6211\u4eec\u5e0c\u671b\u60a8\u80fd\u652f\u6301\u6211\u4eec\u3002\u8c22\u8c22\u3002\n\u4e3a\u5916\u90e8\u2192\u505a\u51fa\u8d21\u732e\u3002\n\u4e3b\u56fe\uff1aStudio Firma/Stocksy\u5f53\u4f60\u4f7f\u7528\u6211\u4eec\u6545\u4e8b\u4e2d\u7684\u96f6\u552e\u94fe\u63a5\u8d2d\u4e70\u4e1c\u897f\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u8d5a\u53d6\u5c11\u91cf\u4f63\u91d1\u3002\u5916\u90e8\u4e0d\u63a5\u53d7\u7f16\u8f91\u8bbe\u5907\u5ba1\u67e5\u7684\u8d39\u7528\u3002\u9605\u8bfb\u6709\u5173\u6211\u4eec\u653f\u7b56\u7684\u66f4\u591a\u4fe1\u606f\u3002\n\u60a8\u73b0\u5728\u5df2\u8ba2\u9605\u201c\u5929\u5929\u79fb\u52a8\u201d\uff0c\u6211\u4eec\u4e0d\u4f1a\u4ee5\u4efb\u4f55\u7406\u7531\u4e0e\u4efb\u4f55\u4eba\u5171\u4eab\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u3002\u5728\u6211\u4eec\u7684\u65f6\u4e8b\u901a\u8baf\u6ce8\u518c\u9875\u9762\u4e0a\u53ef\u4ee5\u627e\u5230\u66f4\u591a\u65f6\u4e8b\u901a\u8baf\u3002\n\u672c\u7f51\u7ad9\u53d7reCAPTCHA\u4fdd\u62a4\uff0c\u9002\u7528\u8c37\u6b4c\u9690\u79c1\u653f\u7b56\u548c\u670d\u52a1\u6761\u6b3e\u3002", "note_en": "Trust me, I understand\u2014in theory\u2014that I should be stronger. Yes, I\u2019m an aerobic beast (or an aerobic addict, if you prefer), but I\u2019m not oblivious to the benefits of having a reasonable amount of muscle. When I play the \u201clook, you\u2019re touching the ceiling!\u201d game with my 18-month-old, I\u2019d prefer that she get bored before I have to admit that Daddy can\u2019t military-press her anymore. And I\u2019m hoping that 20 years from now I\u2019ll still be able to push myself out of an armchair without help.\n But there\u2019s a gap between \u201cshould\u201d and \u201cdo.\u201d This gap is one of the most vexing riddles in public health, and even people like me, who spend their days telling other people what they should be doing, aren\u2019t immune to it. For that reason, I\u2019m always eager for reminders of what\u2019s at stake\u2014and two new papers offer some eye-opening insights into the benefits of strength training, even for people who consistently blow the aerobic exercise guidelines out of the water.\n The first is an analysis of the link between strength, muscle mass, and mortality, from a team at Indiana University using data from the National Health and Nutrition Examination Survey. The design was pretty straightforward: They assessed 4,440 adults ages 50 or up who had their strength and muscle mass assessed between 1999 and 2002. The researchers checked back in 2011 to see who had died.\n For muscle mass, they used a DEXA scanner to determine that 23 percent of the subjects met  one definition of \u201clow muscle mass,\u201d with total muscle in the arms and legs adding up to less than 43.5 pounds in men or 33 pounds in women. For strength, they used a device that measures maximum force of the knee extensors (the muscles that allow you to straighten your knee) and found that 19 percent of the subjects had low muscle strength.\n The results, published in   Medicine and Science in Sports and Exercise, found that those with low muscle strength were more than twice as likely to have died during the follow-up period than those with normal muscle strength. In contrast, having low muscle mass didn\u2019t seem to matter as much.\n Here\u2019s what the results look like. LMM is low muscle mass, and LMS is low muscle strength:\n  The reference group, on the right side in the front, is those without either condition. In comparison, those with both conditions were 2.66 times as likely to die during the study. Having low muscle mass but normal strength, on the other hand, didn\u2019t seem to be such a bad thing.\n The message here? Function matters more than what you look like. That doesn\u2019t mean you can afford to let your muscle melt away as you age; having a good reserve of muscle mass  may be important, for example, if you end up having to spend time in the hospital at some point. But it\u2019s good news for those of us who struggle to put on muscle but persist in slogging through a reasonable number of pull-ups and other strength exercises.\n The other study took aim at the perception that strength training is an afterthought in public health guidelines. Most of us remember that we\u2019re supposed to get at least 150 minutes of moderate exercise or 75 minutes of vigorous exercise per week. Reams of data support the beneficial health effects of hitting this goal.\n But the guidelines also suggest doing \u201cstrength-promoting exercise\u201d at least twice a week\u2014a clause that\u2019s often forgotten and the benefits of which are usually framed in terms of avoiding frailty and improving quality of life, rather than actually extending it.\n Researchers in Australia analyzed data from 80,000 adults in England and Scotland who completed surveys about their physical activity patterns starting in the 1990s. The  headline result was that those who reported doing  any strength training were 23 percent less likely to die during the study period and 31 percent less likely to die of cancer. Meeting the guidelines by strength training twice a week offered a little extra benefit.\n One interesting (and, for me, reassuring) detail: Strength training in a gym and doing bodyweight exercises seemed to confer roughly equivalent benefits. So you don\u2019t necessarily need to heave around large quantities of iron.\n In this particular cohort, the benefits of meeting only the strength-training guidelines seemed to be roughly equivalent to meeting only the aerobic-training guidelines\u2014at least in terms of overall mortality. However, strength training didn\u2019t confer any protection against heart disease. There\u2019s some evidence that strength training may reduce blood pressure but increase artery stiffness, effectively canceling out the heart benefits. This study can\u2019t answer that question, but the findings do suggest that ditching aerobic exercise entirely may not be optimal. And indeed, the best outcomes of all\u2014a 29 percent reduction in mortality risk during the study\u2014accrued to those who met both the aerobic and strength-training guidelines.\n So, in summary, strength training is good for you. Does that really tell you anything you didn\u2019t know? Perhaps not.\n That said, a few months ago,  I wrote about a study in which runners received automated online advice to help them avoid injuries. The advice seemed painfully obvious: Listen to your body, don\u2019t increase pace and volume too suddenly, and so on. But it worked. Injuries were reduced by 13.1 percent. That\u2019s more or less what I\u2019m hoping for by writing this piece, for all of us: that a reminder of something obvious, bolstered by fresh evidence, will help me continue to do what I know I should.\n Discuss this post on   Twitter  or   Facebook , sign up for the Sweat Science   email newsletter , and check out my forthcoming book,   Endure: Mind, Body, and the Curiously Elastic Limits of Human Performance .\n Our mission to inspire readers to get outside has never been more critical. In recent years, Outside Online has reported on groundbreaking research linking time in nature to improved mental and physical health, and we\u2019ve kept you informed about the unprecedented threats to America\u2019s public lands. Our rigorous coverage helps spark important debates about wellness and travel and adventure, and it provides readers an accessible gateway to new outdoor passions. Time outside is essential\u2014and we can help you make the most of it. Making a financial contribution to Outside Online only takes a few minutes and will ensure we can continue supplying the trailblazing, informative journalism that readers like you depend on. We hope you\u2019ll support us. Thank you.\n Contribute to Outside  \u2192\n    Lead Photo: Studio Firma/Stocksy When you buy something using the retail links in our stories, we may earn a small commission.  Outside does not accept money for editorial gear reviews.  Read more about our policy.\n You are now subscribed to  Move Every Day We will not share your email with anyone for any reason. Find more newsletters on our  newsletter sign-up page.\n This site is protected by reCAPTCHA and the Google  Privacy Policy and  Terms of Service apply.", "posttime": "2020-07-16 12:45:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6b7b\u4ea1,death,\u808c\u8089", "title": "\u4e3a\u4e86\u5ef6\u7f13\u6b7b\u4ea1\uff0c\u4e3e\u91cd", "title_en": "To Delay Death, Lift Weights", "transed": 1, "url": "https://www.outsideonline.com/2263346/delay-death-lift-weights", "via": "", "real_tags": ["\u6b7b\u4ea1", "death", "\u808c\u8089"]}, {"category": "", "categoryclass": "", "imagename": "76a3f575da956df060035fc8e7fbef0d.png", "infoid": 1012216, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u5386\u53f2\u4e0a\u770b\uff0cGitHub\u53d1\u5e03\u4e86\u5bf9\u5f71\u54cd\u670d\u52a1\u53ef\u7528\u6027\u7684\u91cd\u5927\u4e8b\u4ef6\u7684\u4e8b\u540e\u8bc4\u4f30\u3002\u65e0\u8bba\u6211\u4eec\u662f\u5206\u4eab\u57fa\u7840\u8bbe\u65bd\u7684\u65b0\u6295\u8d44\uff0c\u8fd8\u662f\u8be6\u7ec6\u8bf4\u660e\u73b0\u573a\u505c\u673a\u65f6\u95f4\uff0c\u6211\u4eec\u90fd\u76f8\u4fe1\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u884c\u4e1a\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u76f8\u4e92\u5b66\u4e60\u6765\u5171\u540c\u6210\u957f\u3002\u8fd9\u4e2a\u6708\uff0c\u6211\u4eec\u5f88\u5174\u594b\u5730\u4ecb\u7ecdGitHub\u53ef\u7528\u6027\u62a5\u544a\u3002\n\u5728\u6bcf\u4e2a\u6708\u7684\u7b2c\u4e00\u4e2a\u661f\u671f\u4e09\uff0c\u6211\u4eec\u5c06\u53d1\u5e03\u4e00\u4efd\u62a5\u544a\uff0c\u4ecb\u7ecdGitHub\u7684\u53ef\u7528\u6027\uff0c\u5305\u62ec\u53ef\u80fd\u53d1\u751f\u7684\u4efb\u4f55\u4e8b\u4ef6\u7684\u63cf\u8ff0\uff0c\u5e76\u5411\u60a8\u901a\u62a5\u6211\u4eec\u662f\u5982\u4f55\u53d1\u5c55\u6211\u4eec\u7684\u5de5\u7a0b\u7cfb\u7edf\u548c\u5b9e\u8df5\u4ee5\u5e94\u5bf9\u7684\u3002\u60a8\u5e94\u8be5\u9884\u6599\u5230\u8fd9\u4e9b\u66f4\u65b0\u5c06\u5305\u62ec\u6240\u53d1\u751f\u4e8b\u4ef6\u7684\u6458\u8981\uff0c\u4ee5\u53ca\u6211\u4eec\u8ba4\u4e3a\u53d1\u751f\u7684\u4e8b\u4ef6\u7684\u6280\u672f\u89e3\u91ca\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u5305\u542b\u53ef\u5e2e\u52a9\u4e16\u754c\u5404\u5730\u7684\u5de5\u7a0b\u5e08\u4e86\u89e3\u5982\u4f55\u5927\u89c4\u6a21\u6539\u8fdb\u4ea7\u54c1\u8fd0\u8425\u7684\u4fe1\u606f\u3002\n\u53ef\u7528\u6027\u548c\u6027\u80fd\u662f\u4e00\u9879\u6838\u5fc3\u529f\u80fd\uff0c\u5305\u62ecGitHub\u5982\u4f55\u5e94\u5bf9\u670d\u52a1\u4e2d\u65ad\u3002\u6211\u4eec\u81f4\u529b\u4e8e\u8bbe\u8ba1\u5177\u6709\u9ad8\u5ea6\u53ef\u7528\u6027\u548c\u5bb9\u9519\u80fd\u529b\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u6bcf\u6708\u66f4\u65b0\u4e2d\u7684\u5927\u90e8\u5206\u5c06\u56de\u987eGitHub 99%\u53ef\u7528\u7684\u65f6\u95f4\u6bb5\u3002\u5f53\u4e8b\u60c5\u6ca1\u6709\u6309\u8ba1\u5212\u8fdb\u884c\u65f6\uff0c\u4e0e\u5176\u7b49\u5f85\u5206\u4eab\u5173\u4e8e\u7279\u522b\u6709\u8da3\u7684\u4e8b\u4ef6\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u60f3\u8981\u63cf\u8ff0\u6240\u6709\u53ef\u80fd\u5f71\u54cd\u4f60\u7684\u4e8b\u4ef6\u3002\u6211\u4eec\u5e0c\u671b\u901a\u8fc7\u589e\u52a0\u6211\u4eec\u7684\u900f\u660e\u5ea6\u548c\u5206\u4eab\u6211\u4eec\u6240\u5b66\u5230\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u5728\u72b6\u6001\u9875\u9762\u4e0a\u62a5\u544a\u51e0\u5206\u949f\u7684\u505c\u673a\u65f6\u95f4\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4ece\u6211\u4eec\u7684\u7ecf\u9a8c\u4e2d\u5b66\u5230\u4e1c\u897f\u3002\u5728GitHub\uff0c\u6211\u4eec\u975e\u5e38\u91cd\u89c6\u60a8\u5bf9\u6211\u4eec\u7684\u4fe1\u4efb\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u662f\u4e00\u79cd\u5e2e\u52a9\u60a8\u8ffd\u7a76\u6211\u4eec\u7684\u8d23\u4efb\uff0c\u8ba9\u6211\u4eec\u4e0d\u65ad\u6539\u8fdb\u6211\u4eec\u7684\u8fd0\u8425\u4ee5\u53ca\u6211\u4eec\u7684\u4ea7\u54c1\u529f\u80fd\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\n\u57285\u6708\u548c6\u6708\uff0c\u6211\u4eec\u7ecf\u5386\u4e86\u56db\u8d77\u622a\u7136\u4e0d\u540c\u7684\u4e8b\u4ef6\uff0c\u5bfc\u81f4GitHub.com\u7f3a\u4e4f\u53ef\u7528\u6027\u6216\u670d\u52a1\u964d\u7ea7\u3002\n\u5728\u4e8b\u4ef6\u671f\u95f4\uff0c\u5171\u4eab\u6570\u636e\u5e93\u8868\u7684\u81ea\u52a8\u9012\u589eID\u5217\u8d85\u8fc7\u4e86MySQL Integer\u7c7b\u578b(rails int(11))\u53ef\u4ee5\u8868\u793a\u7684\u5927\u5c0f\uff1a2147483647\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u5728\u5217\u4e2d\u63d2\u5165\u66f4\u5927\u7684\u6574\u6570\u65f6\uff0c\u6570\u636e\u5e93\u62d2\u7edd\u4e86\u8be5\u503c\uff0c\u5e76\u4e14Rails\u5f15\u53d1\u4e86ActiveModel\uff1a\uff1aRangeError\uff0c\u8fd9\u5bfc\u81f4\u6211\u4eec\u7684API\u7aef\u70b9\u51fa\u73b0500\u3002\n\u8fd9\u5f71\u54cd\u4e86\u4f9d\u8d56\u83b7\u53d6\u5b89\u88c5\u4ee4\u724c\u7684GitHub\u5e94\u7528\u7a0b\u5e8f\u3002\u5728\u5185\u90e8\u53d7\u5f71\u54cd\u6700\u5927\u7684GitHub\u5e94\u7528\u7a0b\u5e8f\u5305\u62ecActions\u3001Pages\u548cDependabot\u3002\nGitHub\u7684\u76d1\u63a7\u7cfb\u7edf\u76ee\u524d\u4f1a\u5728\u8868\u8fbe\u5230\u6240\u7528\u4e3b\u952e\u5927\u5c0f\u768470%\u65f6\u53d1\u51fa\u8b66\u62a5\u3002\u6211\u4eec\u73b0\u5728\u6b63\u5728\u6269\u5c55\u6211\u4eec\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u4ee5\u5305\u62ec\u9488\u5bf9int/bigint\u5916\u952e\u4e0d\u5339\u914d\u7684Linter\u3002\n\u5728\u8ba1\u5212\u7ef4\u62a4\u64cd\u4f5c(\u6545\u969c\u8f6c\u79fbMySQL\u4e3b\u5b9e\u4f8b)\u671f\u95f4\uff0c\u6211\u4eec\u5728\u65b0\u5347\u7ea7\u7684MySQL\u4e3b\u670d\u52a1\u5668\u4e0a\u7684mysqld\u8fdb\u7a0b\u4e2d\u9047\u5230\u4e86\u4e00\u6b21\u65b0\u7684\u5d29\u6e83\u3002\u4e3a\u4e86\u51cf\u8f7b\u5d29\u6e83\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u624b\u52a8\u5c06\u6d41\u91cf\u91cd\u5b9a\u5411\u56de\u539f\u6765\u7684\u4e3b\u670d\u52a1\u5668\u3002\u4f46\u662f\uff0c\u5d29\u6e83\u7684MySQL\u4e3b\u6570\u636e\u5e93\u5df2\u7ecf\u4e3a\u5927\u7ea66\u79d2\u7684\u5199\u5165\u6d41\u91cf\u63d0\u4f9b\u4e86\u670d\u52a1\u3002\u6b64\u65f6\uff0c\u4ece\u65b0\u7684\u4e3b\u8282\u70b9\u5f00\u59cb\u6062\u590d\u590d\u5236\u526f\u672c\uff0c\u5927\u7ea6\u9700\u8981\u56db\u4e2a\u5c0f\u65f6\uff0c\u7fa4\u96c6\u91cd\u65b0\u914d\u7f6e\u8fd8\u9700\u8981\u4e00\u4e2a\u5c0f\u65f6\u624d\u80fd\u91cd\u65b0\u542f\u7528\u5168\u90e8\u8bfb\u53d6\u5bb9\u91cf\u3002\u5728\u5927\u7ea6\u4e94\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u5185\uff0c\u7528\u6237\u53ef\u80fd\u5728\u5199\u5165\u53d7\u5f71\u54cd\u7684\u6570\u636e\u5e93\u7fa4\u96c6\u7684\u6570\u636e\u5728Web\u754c\u9762\u548cAPI\u4e2d\u53ef\u89c1\u4e4b\u524d\u89c2\u5bdf\u5230\u5ef6\u8fdf\u3002\n\u6211\u4eec\u5df2\u7ecf\u8fdb\u884c\u4e86\u591a\u6b21\u5185\u90e8\u6bd4\u8d5b\u65e5\u6f14\u4e60\uff0c\u4ee5\u786e\u4fdd\u5bf9\u7c7b\u4f3c\u62d3\u6251\u4e0d\u4e00\u81f4\u6709\u66f4\u9ad8\u7a0b\u5ea6\u7684\u51c6\u5907\uff0c\u5e76\u5c06\u7ee7\u7eed\u4f7f\u7528\u6211\u4eec\u7684\u81ea\u52a8\u6545\u969c\u8f6c\u79fb\u7cfb\u7edf\uff0c\u4ee5\u51cf\u5c11\u6062\u590d\u65f6\u95f4\u3002\n\u5bf9\u7528\u4e8eUI\u6539\u8fdb\u7684\u66f4\u597d\u7684Instrument A/B\u5b9e\u9a8c\u7684\u66f4\u6539\u5f15\u5165\u4e86\u5bf9\u7531\u5355\u72ec\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u7279\u5b9a\u7684\u3001\u52a8\u6001\u751f\u6210\u7684\u6587\u4ef6\u7684\u5b58\u5728\u7684\u672a\u77e5\u4f9d\u8d56\u3002\n\u5728\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u671f\u95f4\uff0c\u7531\u4e8e\u4e0a\u6e38\u5e94\u7528\u7a0b\u5e8f\u9650\u5236\u8f83\u9ad8\u7684\u68c0\u7d22\u7387\uff0c\u5728\u76f8\u5f53\u5927\u6bd4\u4f8b\u7684\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u4e0a\u65e0\u6cd5\u751f\u6210\u6587\u4ef6\u3002\u8fd9\u4f1a\u5bfc\u81f4\u5b9e\u9a8c\u4e2d\u6ce8\u518c\u7684\u4e00\u5b9a\u767e\u5206\u6bd4\u7684\u7528\u6237\u51fa\u73b0\u7ad9\u70b9\u8303\u56f4\u7684\u5e94\u7528\u7a0b\u5e8f\u9519\u8bef\u3002\u5728\u68c0\u6d4b\u5230\u540e\uff0c\u6211\u4eec\u80fd\u591f\u7981\u7528\u5bf9\u6b64\u6587\u4ef6\u7684\u8981\u6c42\uff0c\u4ece\u800c\u6062\u590d\u4e86\u5bf9\u6240\u6709\u7528\u6237\u7684\u670d\u52a1\u3002\n\u4e0b\u4e00\u6b65\uff0cA/B\u548c\u591a\u53d8\u91cf\u5b9e\u9a8c\u7684\u914d\u7f6e\u5c06\u5728\u5185\u90e8\u7f13\u5b58\uff0c\u4ee5\u786e\u4fdd\u4f9d\u8d56\u9879\u7684\u6210\u529f\u4f20\u64ad\u3002\n\u4f5c\u4e3a\u7ef4\u62a4\u7684\u4e00\u90e8\u5206\uff0c\u6570\u636e\u5e93\u56e2\u961f\u57286\u670822\u65e5\u661f\u671f\u4e00\u63a8\u51fa\u4e86\u66f4\u65b0\u7248\u672c\u7684ProxySQL\u3002\u4e00\u5468\u540e\uff0c\u6211\u4eec\u7684\u4e00\u4e2a\u4e3b\u6570\u636e\u5e93\u96c6\u7fa4\u4e0a\u7684\u4e3b\u8981MySQL\u8282\u70b9\u51fa\u73b0\u6545\u969c\uff0c\u5e76\u88ab\u4e00\u53f0\u65b0\u4e3b\u673a\u81ea\u52a8\u66ff\u6362\u3002\u5728\u51e0\u79d2\u949f\u5185\uff0c\u65b0\u5347\u7ea7\u7684\u4e3b\u8282\u70b9\u5d29\u6e83\u3002Orchestrator\u7684\u9632\u6446\u52a8\u673a\u5236\u963b\u6b62\u4e86\u540e\u7eed\u7684\u81ea\u52a8\u6545\u969c\u8f6c\u79fb\u3002\u5728\u6211\u4eec\u624b\u52a8\u6062\u590d\u670d\u52a1\u4e4b\u540e\uff0c\u65b0\u7684\u4e3b\u8282\u70b9\u53d8\u5f97CPU\u532e\u4e4f\u5e76\u518d\u6b21\u5d29\u6e83\u3002\u4e00\u4e2a\u65b0\u7684\u521d\u9009\u5f97\u5230\u4e86\u63a8\u5e7f\uff0c\u4e0d\u4e45\u4e4b\u540e\u4e5f\u5d29\u6e83\u4e86\u3002\u4e3a\u4e86\u6062\u590d\uff0c\u6211\u4eec\u56de\u6eda\u5230\u4ee5\u524d\u7248\u672c\u7684ProxySQL\uff0c\u5e76\u7981\u7528\u4e86\u5e94\u7528\u7a0b\u5e8f\u4e2d\u9700\u8981\u65b0ProxySQL\u7248\u672c\u7684\u66f4\u6539\u3002\u5b8c\u6210\u6b64\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u4f7f\u4e3b\u8282\u70b9\u5d29\u6e83\u7684\u60c5\u51b5\u4e0b\u5141\u8bb8\u5728\u4e3b\u8282\u70b9\u4e0a\u8fdb\u884c\u5199\u5165\u3002\n\u6211\u4eec\u6b63\u5728\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u65e5\u5fd7\u3001MySQL\u6838\u5fc3\u8f6c\u50a8\u548c\u6211\u4eec\u7684\u5185\u90e8\u9065\u6d4b\uff0c\u4f5c\u4e3a\u7ee7\u7eed\u8c03\u67e5CPU\u532e\u4e4f\u95ee\u9898\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u907f\u514d\u672a\u6765\u51fa\u73b0\u7c7b\u4f3c\u7684\u6545\u969c\u6a21\u5f0f\u3002\n\u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\uff0c\u6211\u4eec\u7ee7\u7eed\u5728\u53ef\u9760\u6027\u65b9\u9762\u6295\u5165\u5de8\u8d44\u3002\u6211\u4eec\u5c06\u8fd9\u91cc\u8ba8\u8bba\u7684\u6bcf\u4e00\u8d77\u4e8b\u4ef6\u89c6\u4e3a\u5b66\u4e60\u548c\u6210\u957f\u7684\u5b9d\u8d35\u673a\u4f1a\u3002\u6211\u4eec\u7684\u7cfb\u7edf\u548c\u6d41\u7a0b\u5728\u8fd9\u4e9b\u7ecf\u9a8c\u7684\u57fa\u7840\u4e0a\u7ee7\u7eed\u53d1\u5c55\uff0c\u6211\u4eec\u671f\u5f85\u7740\u5728\u672a\u6765\u7684\u66f4\u65b0\u4e2d\u5206\u4eab\u6211\u4eec\u7684\u8fdb\u5c55\u3002\n\u8bf7\u5173\u6ce8\u6211\u4eec\u7684\u72b6\u6001\u9875\u9762\u4ee5\u83b7\u53d6\u5b9e\u65f6\u66f4\u65b0\uff0c\u5e76\u5173\u6ce8\u6211\u4eec\u7684\u535a\u5ba2\u4ee5\u83b7\u53d6\u4e0b\u4e2a\u6708\u7684\u53ef\u7528\u6027\u62a5\u544a\u3002", "note_en": "Historically, GitHub has published post-incident reviews for major incidents that impact service availability. Whether we\u2019re sharing new investments to infrastructure or detailing site downtimes, our belief is that we can collectively grow as an industry by learning from one another. This month, we\u2019re excited to introduce the GitHub Availability Report.\n  On the first Wednesday of each month, we\u2019ll publish a report describing GitHub\u2019s availability, including a description of any incidents that may have occurred and update you on how we are evolving our engineering systems and practices in response. You should expect these updates to include a summary of what happened, as well as a technical explanation for incidents where we believe the occurrence was novel and contains information that helps engineers around the world learn how to improve product operations at scale.\n  Availability and performance are a core feature, including how GitHub responds to service disruptions. We strive to engineer systems that are highly available and fault-tolerant and we expect that most of these monthly updates will recap periods of time where GitHub was &gt;99% available. When things don\u2019t go as planned, rather than waiting to share information about particularly interesting incidents, we want to describe all of the events that may impact you. Our hope is that by increasing our transparency and sharing what we\u2019ve learned, rather than simply reporting minutes of downtime on a status page, everyone can learn from our experiences. At GitHub, we take the trust you place in us very seriously, and we hope this is a way for you to help hold us accountable for continuously improving our operational excellence as well as our product functionality.\n  In May and June, we experienced four distinct incidents resulting in a lack of availability or degraded service for GitHub.com.\n  During the incident, a shared database table\u2019s auto-incrementing ID column exceeded the size that can be represented by the MySQL Integer type (Rails int(11)): 2147483647. When we attempted to insert larger integers into the column, the database rejected the value and Rails raised an ActiveModel::RangeError, which resulted in 500s from our API endpoint.\n This impacted GitHub apps that rely on getting installation tokens. The top affected GitHub apps internally included Actions, Pages, and Dependabot.\n GitHub\u2019s monitoring systems currently alert when tables hit 70% of the primary key size used. We are now extending our test frameworks to include a linter in place for int / bigint foreign key mismatches.\n  During a planned maintenance operation (failing over a MySQL primary instance) we experienced a novel crash in the mysqld process on the newly promoted MySQL primary server. To mitigate the impact of the crash, we manually redirected traffic back to the original primary. However, the crashed MySQL primary had already served approximately six seconds of write traffic. At this point, a restore of replicas from the new primary was initiated which took approximately four hours with a further hour for cluster reconfiguration to re-enable full read capacity. For a period of approximately five hours, users may have observed delays before data written to the affected database cluster were visible in the web interface and API.\n We\u2019ve run multiple internal gameday exercises in response to ensure a higher degree of preparedness for similar topology inconsistencies and will continue to exercise our automated failover systems to reduce recovery time.\n  Changes to better instrument A/B experimentation for UI improvements introduced an unknown dependency on the presence of a specific, dynamically generated file that is served by a separate application.\n During an application deployment, the file failed to be generated on a significant proportion of the application deployments due to a high retrieval rate being rate limited by the upstream application. This resulted in site-wide application errors for a percentage of users enrolled in the experiment. Upon detection, we were able to disable the requirement on this file which restored service to all users.\n Going forward, configuration for A/B and multivariate experiments will be cached internally to ensure successful propagation of dependencies.\n  As part of maintenance, the database team rolled out an updated version of ProxySQL on Monday, June 22. A week later, the primary MySQL node on one of our main database clusters failed and was replaced automatically by a new host. Within seconds, the newly promoted primary crashed.  Orchestrator\u2019s anti-flapping mechanism prevented a subsequent automatic failover. After we recovered service manually, the new primary became CPU starved and crashed again. A new primary was promoted which also crashed shortly thereafter. To recover, we rolled back to the previous version of ProxySQL and disabled a change in our application that had required the new ProxySQL version. When this completed, we were able to allow writes on the primary node without it crashing.\n We are analyzing application logs, MySQL core dumps, and our internal telemetry as part of continued investigation into the CPU starvation issue to avoid similar failure modes going forward.\n  As an organization we continue to invest heavily in reliability. We treat each incident discussed here as an invaluable opportunity from which to learn and grow. Our systems and processes continue to evolve based on these learnings and we look forward to sharing our progress in future updates.\n Please follow our  status page for real time updates and watch our blog for next month\u2019s availability report.", "posttime": "2020-07-16 12:24:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "github,\u53ef\u7528\u6027,availability,\u5e94\u7528\u7a0b\u5e8f", "title": "GitHub\u53ef\u7528\u6027\u62a5\u544a", "title_en": "The GitHub Availability Report", "transed": 1, "url": "https://github.blog/2020-07-08-introducing-the-github-availability-report/", "via": "", "real_tags": ["github", "\u53ef\u7528\u6027", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "a243a56501ec6e37bbc01ee65564fbcd.jpg", "infoid": 1012214, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u5f20\u65b0\u7684\u65e9\u671f\u5b87\u5b99\u5730\u56fe\u5f3a\u5316\u4e86\u5929\u6587\u5b66\u4e2d\u4e00\u4e2a\u957f\u671f\u5b58\u5728\u7684\u96be\u9898\uff0c\u5373\u5b87\u5b99\u81a8\u80c0\u7684\u901f\u5ea6\u6709\u591a\u5feb\u3002\u8fd9\u4e9b\u6570\u636e\u662f\u7528\u667a\u5229\u963f\u5854\u5361\u9a6c\u6c99\u6f20\u7684\u671b\u8fdc\u955c\u6536\u96c6\u7684\uff0c\u652f\u6301\u4e86\u4e4b\u524d\u5bf9\u5b87\u5b99\u5e74\u9f84\u3001\u51e0\u4f55\u5f62\u72b6\u548c\u6f14\u5316\u7684\u4f30\u8ba1\u3002\u4f46\u8fd9\u4e00\u53d1\u73b0\u4e0e\u6d4b\u91cf\u661f\u7cfb\u76f8\u4e92\u5206\u79bb\u7684\u901f\u5ea6\u76f8\u51b2\u7a81\uff0c\u5e76\u9884\u6d4b\u5b87\u5b99\u7684\u6269\u5f20\u901f\u5ea6\u5e94\u8be5\u6bd4\u76ee\u524d\u89c2\u5bdf\u5230\u7684\u8981\u6162\u5f97\u591a\u3002\n\u963f\u5854\u5361\u9a6c\u5b87\u5b99\u5b66\u671b\u8fdc\u955c(ACT)\u7ed8\u5236\u4e86\u5b87\u5b99\u5fae\u6ce2\u80cc\u666f(CMB)\uff0c\u5373\u5927\u7206\u70b8\u7684\u8f90\u5c04\u201c\u4f59\u8f89\u201d\u3002\u8fd9\u4e9b\u53d1\u73b0\u57fa\u4e8e2013\u5e74\u81f32016\u5e74\u6536\u96c6\u7684\u6570\u636e\uff0c\u4e8e7\u670815\u65e5\u4ee5\u4e24\u4efd\u9884\u5370\u672c\u53d1\u5e03\u5728arxiv\u5b58\u50a8\u5e93\u4e0a\u3002\nCMB\u8f90\u5c04\u6765\u81ea\u7a7a\u95f4\u7684\u5404\u4e2a\u65b9\u5411\uff0c\u4f46\u5e76\u4e0d\u662f\u5b8c\u5168\u5747\u5300\u7684\uff1a\u5b83\u5728\u5929\u7a7a\u4e2d\u7684\u53d8\u5316\u8868\u660e\uff0c\u65e9\u671f\u5b87\u5b99\u7684\u4e0d\u540c\u533a\u57df\u5728\u6e29\u5ea6\u4e0a\u7565\u6709\u4e0d\u540c\uff0c\u76f8\u5dee\u4e0d\u52300.03\u5f00\u5c14\u6587\u3002\u5728\u8fc7\u53bb\u7684\u4e8c\u5341\u5e74\u91cc\uff0c\u5b87\u5b99\u5b66\u5bb6\u4f7f\u7528\u8fd9\u4e9b\u5fae\u5c0f\u7684\u53d8\u5316-\u8fde\u540c\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u6807\u51c6\u6a21\u578b\u7684\u65e2\u5b9a\u7406\u8bba-\u6765\u8ba1\u7b97\u5b87\u5b99\u7ed3\u6784\u548c\u6f14\u5316\u7684\u4e00\u4e9b\u5173\u952e\u7279\u5f81\uff0c\u5305\u62ec\u5b83\u7684\u5e74\u9f84\u548c\u7269\u8d28\u5bc6\u5ea6\u3002\n\u5b87\u5b99\u5b66\u5bb6\u8fd8\u4f7f\u7528\u8fd9\u4e9b\u53d8\u5316\u6765\u9884\u6d4b\u5b87\u5b99\u76ee\u524d\u7684\u81a8\u80c0\u901f\u5ea6\uff0c\u8fd9\u4e00\u6d4b\u91cf\u65b9\u6cd5\u88ab\u79f0\u4e3a\u54c8\u52c3\u5e38\u6570\uff0c\u4ee5\u7f8e\u56fd\u5929\u6587\u5b66\u5bb6\u57c3\u5fb7\u6e29\u00b7\u54c8\u52c3\u7684\u540d\u5b57\u547d\u540d\u3002\u6b27\u6d32\u822a\u5929\u5c40\u7684\u666e\u6717\u514b\u671b\u8fdc\u955c\u4ee5\u524d\u6240\u672a\u6709\u7684\u7cbe\u5ea6\u7ed8\u5236\u4e86\u4ece2009\u5e74\u52302013\u5e74\u7684\u6574\u4e2aCMB\u5929\u7a7a\uff0c\u8fd9\u4e9b\u6570\u636e\u88ab\u8ba4\u4e3a\u662fCMB\u5b87\u5b99\u5b66\u7684\u9ec4\u91d1\u6807\u51c6\u3002ACT\u7684\u6570\u636e\u73b0\u5728\u8bc1\u660e\u4e86\u666e\u6717\u514b\u7684\u53d1\u73b0\u662f\u6b63\u786e\u7684\uff0c\u5e76\u4e3a\u54c8\u52c3\u5e38\u6570\u4ea7\u751f\u4e86\u975e\u5e38\u76f8\u4f3c\u7684\u503c\u3002\n\u4f46\u8fd9\u4e24\u4e2a\u7ed3\u679c\u90fd\u4e0d\u80fd\u4e0e\u4f7f\u7528\u4e0d\u540c\u6280\u672f\u76f4\u63a5\u6d4b\u91cf\u54c8\u52c3\u5e38\u6570\u76f8\u5339\u914d-\u8fd9\u79cd\u5dee\u5f02\u5df2\u6210\u4e3a\u4f17\u6240\u5468\u77e5\u7684\u54c8\u52c3\u5e38\u6570\u5f20\u529b\u3002\u5929\u6587\u5b66\u5bb6\u4f7f\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u6052\u661f\u548c\u8d85\u65b0\u661f\u7206\u70b8(\u7edf\u79f0\u4e3a\u6807\u51c6\u8721\u70db)\u7684\u4eae\u5ea6\u6765\u8ba1\u7b97\u81a8\u80c0\u7387\uff0c\u4ed6\u4eec\u53d1\u73b0\u661f\u7cfb\u76f8\u4e92\u51b2\u79bb\u7684\u901f\u5ea6\u5927\u7ea6\u6bd4cmb\u5730\u56fe\u9884\u6d4b\u7684\u901f\u5ea6\u5feb10%\u3002\n\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u66fe\u5e0c\u671b\uff0c\u968f\u7740\u6280\u672f\u53d8\u5f97\u66f4\u52a0\u7cbe\u786e\uff0c\u5dee\u8ddd\u5c06\u4f1a\u7f29\u5c0f\u3002\u76f8\u53cd\uff0c\u7f29\u5c0f\u6bcf\u79cd\u7c7b\u578b\u7814\u7a76\u7684\u8bef\u5dee\u680f\u53ea\u4f1a\u4f7f\u4e0d\u4e00\u81f4\u53d8\u5f97\u66f4\u52a0\u660e\u663e\u3002\n\u9886\u5bfc\u6570\u636e\u5206\u6790\u7684\u82f1\u56fd\u5361\u8fea\u592b\u5927\u5b66\u5b87\u5b99\u5b66\u5bb6Erminia Calabrese\u8bf4\uff0cACT\u662f\u7b2c\u4e00\u4e2a\u53ef\u80fd\u6311\u6218\u666e\u6717\u514b\u7ed3\u679c\u7684CMB\u5730\u9762\u5b9e\u9a8c\u3002\u8be5\u671b\u8fdc\u955c\u7684\u8bbe\u8ba1\u548c\u4f4d\u7f6e\u76f8\u5bf9\u9760\u8fd1\u8d64\u9053\uff0c\u4f7f\u5176\u80fd\u591f\u6bd4\u5176\u4ed6\u9646\u57fa\u6216\u6c14\u7403\u8f7d\u671b\u8fdc\u955c\u7ed8\u5236\u51fa\u66f4\u591aCMB\u5929\u7a7a\u7684\u5730\u56fe\uff0c\u540e\u8005\u901a\u5e38\u9650\u4e8e\u8f83\u5c0f\u7684\u533a\u57df\u3002\n\u5361\u62c9\u5e03\u96f7\u65af\u8bf4\uff0c\u5728\u5927\u5c3a\u5ea6\u4e0a\u7ed8\u5236\u5929\u7a7a\u56fe\u5bf9\u4e8e\u8ba1\u7b97\u5b87\u5b99\u81a8\u80c0\u7684\u5173\u952e\u53c2\u6570\u81f3\u5173\u91cd\u8981\u3002\u65b0\u6cfd\u897f\u5dde\u666e\u6797\u65af\u987f\u5927\u5b66(Princeton University)\u9996\u5e2d\u7814\u7a76\u5458\u82cf\u73ca\u5a1c\u00b7\u65af\u5854\u683c\u65af(Suzanne Staggs)\u8868\u793a\uff0cACT\u7684\u53e6\u4e00\u4e2a\u4f18\u52bf\u662f\uff0c\u7531\u4e8e2013\u5e74\u7684\u5347\u7ea7\uff0c\u5b83\u5bf9CMB\u8f90\u5c04\u7684\u504f\u632f\u8fdb\u884c\u4e86\u7cbe\u786e\u6d4b\u91cf\u3002\u504f\u632f\u6570\u636e\u63ed\u793a\u4e86\u524d\u666f\u4e2d\u7684\u661f\u7cfb\u5982\u4f55\u5f71\u54cdCMB\u7684\u4f20\u64ad\uff0c\u5e76\u6709\u52a9\u4e8e\u4f7f\u5b87\u5b99\u5b66\u6d4b\u91cf\u66f4\u52a0\u7cbe\u786e\u3002\n\u5361\u62c9\u5e03\u96f7\u65af\u8bf4\uff1a\u201c\u6211\u4eec\u7b2c\u4e00\u6b21\u6709\u4e86\u4e24\u4e2a\u72ec\u7acb\u6d4b\u91cf\u7684\u6570\u636e\u96c6\uff0c\u5e76\u4e14\u6709\u8db3\u591f\u7684\u7cbe\u5ea6\u8fdb\u884c\u6bd4\u8f83\u3002\u201d\u5979\u4e5f\u662f\u666e\u6717\u514b\u56e2\u961f\u7684\u6210\u5458\uff0c\u5979\u8bf4\uff0c\u53d1\u73b0\u4e24\u4e2a\u5b9e\u9a8c\u7684\u54c8\u52c3\u5e38\u6570\u9884\u6d4b\u5f7c\u6b64\u7684\u8bef\u5dee\u57280.3%\u4ee5\u5185\uff0c\u8fd9\u8ba9\u5979\u677e\u4e86\u4e00\u53e3\u6c14\u3002\n\u666e\u6797\u65af\u987f\u5927\u5b66\u7684\u7406\u8bba\u7269\u7406\u5b66\u5bb6\u4fdd\u7f57\u00b7\u65af\u5766\u54c8\u7279(Paul Steinhardt)\u8bf4\uff0cACT\u548c\u666e\u6717\u514b\u5c31\u54c8\u52c3\u5e38\u6570\u8fbe\u6210\u7684\u534f\u8bae\u662f\u201c\u4e00\u4e2a\u771f\u6b63\u91cd\u8981\u7684\u91cc\u7a0b\u7891\u201d\u3002\u201c\u65b0\u6570\u636e\u7684\u8d28\u91cf\u53ca\u5176\u5206\u6790\u7ed9\u6211\u7559\u4e0b\u4e86\u975e\u5e38\u6df1\u523b\u7684\u5370\u8c61\uff0c\u201d\u4ed6\u8865\u5145\u9053\u3002\n\u4f0a\u5229\u8bfa\u4f0a\u5dde\u829d\u52a0\u54e5\u5927\u5b66\u7684\u5929\u6587\u5b66\u5bb6\u6e29\u8fea\u00b7\u5f17\u91cc\u5fb7\u66fc(Wendy Freedman)\u662f\u6807\u51c6\u8721\u70db\u7684\u5148\u9a71\uff0c\u5979\u8bf4\uff1a\u201c\u6709\u72ec\u7acb\u7684\u68c0\u67e5\u603b\u662f\u5f88\u597d\u7684\uff0c\u6211\u8ba4\u4e3a\u8fd9\u771f\u7684\u63d0\u4f9b\u4e86\u5b83\u3002\u201d\u4e9a\u5f53\u00b7\u91cc\u65af(Adam Riess)\u662f\u9a6c\u91cc\u5170\u5dde\u5df4\u5c14\u7684\u6469\u7ea6\u7ff0\u00b7\u970d\u666e\u91d1\u65af\u5927\u5b66(Johns Hopkins University)\u7684\u5929\u6587\u5b66\u5bb6\uff0c\u4ed6\u9886\u5bfc\u4e86\u8bb8\u591a\u5173\u4e8e\u6807\u51c6\u8721\u70db\u7684\u5c16\u7aef\u5de5\u4f5c\u3002\u4ed6\u8868\u793a\uff0cACT\u6570\u636e\u7684\u4e00\u81f4\u201c\u4ee4\u4eba\u653e\u5fc3\u201d\uff0c\u201c\u8bc1\u660e\u4e86\u5b9e\u9a8c\u8005\u5de5\u4f5c\u7684\u8d28\u91cf\u548c\u7ec6\u5fc3\u201d\u3002\n\u4f46\u662f\u54c8\u52c3\u671b\u8fdc\u955c\u4e0a\u7684\u5f20\u529b\u4ecd\u7136\u662f\u6052\u5b9a\u7684\u3002\u7531\u51e0\u4e2a\u56e2\u961f\u5f00\u53d1\u7684\u65b0\u6280\u672f\uff0c\u5305\u62ec\u5f17\u91cc\u5fb7\u66fc\u9886\u5bfc\u7684\u4e00\u4e2a\u56e2\u961f\uff0c\u53ef\u4ee5\u5e2e\u52a9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u65af\u5766\u54c8\u7279\u76f8\u4fe1\uff0c\u968f\u7740\u5b9e\u9a8c\u8005\u5b8c\u5584\u4ed6\u4eec\u7684\u65b9\u6cd5\uff0c\u6d4b\u91cf\u7ed3\u679c\u6700\u7ec8\u4f1a\u6536\u655b\u3002\n\u4f46\u662f\u91cc\u65af\u8bf4\uff0c\u4e5f\u8bb8\u662f\u5b87\u5b99\u5b66\u7684\u6807\u51c6\u6a21\u578b\u53ef\u80fd\u662f\u9519\u8bef\u7684\u3002\u201c\u6211\u7684\u76f4\u89c9\u662f\uff0c\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u6b63\u5728\u53d1\u751f\u3002\u201d", "note_en": "A new map of the early Universe has reinforced a long-running conundrum in astronomy over how fast the cosmos is expanding. The data \u2014 collected using a telescope in Chile\u2019s Atacama Desert \u2014 back up previous estimates of the Universe\u2019s age, geometry and evolution. But the findings clash with measurements of how fast galaxies are flying apart from each other, and predict that the Universe should be expanding at a significantly slower pace than is currently observed.\n The Atacama Cosmology Telescope (ACT) mapped the cosmic microwave background (CMB), the radiation \u2018afterglow\u2019 of the Big Bang. The findings, based on data collected between 2013 and 2016, were posted on 15 July in  two preprints on the arXiv repository.\n  CMB radiation comes from all directions of space, but it is not perfectly uniform: its variations across the sky reveal that different regions of the early Universe differed slightly in temperature, by less than 0.03 kelvin. Over the past two decades, cosmologists have used those minute variations \u2014 together with an established theory they call the standard model \u2014 to calculate some of the key features of the Universe\u2019s structure and evolution, including its age and the density of matter.\n Cosmologists also use the variations to predict the rate at which the Universe is currently expanding, a measure known as the Hubble constant after the US astronomer Edwin Hubble. The European Space Agency\u2019s Planck telescope  mapped the entire CMB sky from 2009 to 2013 with unprecedented precision, and that data is considered the gold standard of CMB cosmology. The ACT data now vindicate Planck\u2019s findings and produce a very similar value for the Hubble constant.\n But neither result matches direct measurements of the Hubble constant made using different techniques \u2014 a discrepancy that has become known as the Hubble-constant tension. Astronomers who use the brightness of particular types of stars and supernova explosions, collectively called standard candles, to calculate the expansion rate find that galaxies rush away from each other at a rate roughly 10% faster than the CMB maps predict.\n Many researchers had hoped that, as techniques became more accurate, the gap would shrink. Instead, narrowing error bars for each type of study have only made the inconsistency more significant.\n  The ACT is the first ground-based CMB experiment that could have challenged Planck\u2019s results, says Erminia Calabrese, a cosmologist at Cardiff University, UK, who led the analysis of the data. The telescope\u2019s design and location, relatively close to the equator, enables it to map more of the CMB sky than other ground-based or balloon-borne telescopes, which have typically been limited to smaller regions.\n Mapping the sky on a large scale is crucial for calculating the key parameters of cosmic expansion, Calabrese says. Another strength of ACT was that it made precise measurements of the polarization of the CMB radiation, thanks to an upgrade in 2013, says principal investigator Suzanne Staggs of Princeton University in New Jersey. Polarization data reveal how galaxies in the foreground affect the propagation of the CMB, and help to make the cosmological measurements more precise.\n \u201cFor the first time we have two data sets measured independently and with enough precision to make a comparison,\u201d Calabrese says. Having also been a member of the Planck team, she says it was a relief to find out that the two experiments\u2019 Hubble-constant predictions agreed to within 0.3% of one another.\n  This agreement between ACT and Planck on the Hubble constant is \u201ca truly major milestone\u201d, says Paul Steinhardt, a theoretical physicist at Princeton University. \u201cI am very impressed by the quality of the new data and their analysis,\u201d he adds.\n \u201cIt\u2019s always good to have independent checks, and I think this really provides it,\u201d says Wendy Freedman, an astronomer at the University of Chicago in Illinois and a standard-candle pioneer. Adam Riess, an astronomer at Johns Hopkins University in Baltimore, Maryland, who has led much of the cutting-edge work on standard candles says that the ACT data\u2019s agreement is \u201creassuring\u201d, and \u201ca testament to the quality of the experimenters\u2019 work and carefulness\u201d.\n But the tension on the Hubble constant remains. New techniques developed by several teams,  including one led by Freedman, could help to solve it. Steinhardt believes that the measurements will eventually converge as experimentalists perfect their methods.\n But Riess says that perhaps it is cosmology\u2019s standard model that could be wrong instead. \u201cMy gut feeling is that there\u2019s something interesting going on.\u201d", "posttime": "2020-07-16 12:03:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u52a0\u6df1,universe,\u5b87\u5b99", "title": "\u6700\u65b0\u6570\u636e\u52a0\u6df1\u4e86\u5b87\u5b99\u6269\u5f20\u7684\u8c1c\u56e2", "title_en": "Mystery over Universe\u2019s expansion deepens with fresh data", "transed": 1, "url": "https://www.nature.com/articles/d41586-020-02126-6", "via": "", "real_tags": ["\u52a0\u6df1", "universe", "\u5b87\u5b99"]}, {"category": "", "categoryclass": "", "imagename": "ab8adbe377260a0fec1e5c4090b297f7.jpg", "infoid": 1012213, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d26\u6237\u52ab\u6301\u653b\u51fb\u4e86\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u4e0a\u4e00\u4e9b\u6700\u77e5\u540d\u7684\u7528\u6237\uff0c\u5305\u62ec\u9886\u5148\u7684\u52a0\u5bc6\u8d27\u5e01\u7f51\u7ad9\uff0c\u4f46\u4e5f\u8bf1\u9a97\u4e86\u51e0\u4e2a\u540d\u4eba\u8d26\u6237\uff0c\u7279\u522b\u662f\u6bd4\u5c14\u00b7\u76d6\u8328\u3001\u6770\u592b\u00b7\u8d1d\u4f50\u65af\u3001\u57c3\u9686\u00b7\u9a6c\u65af\u514b\u548c\u6c11\u4e3b\u515a\u603b\u7edf\u5019\u9009\u4eba\u4e54\u00b7\u62dc\u767b\u3002\n\u5f53\u8bb0\u8005\u8054\u7cfb\u5230Twitter\u53d1\u8a00\u4eba\u65f6\uff0c\u4ed6\u6ca1\u6709\u5bf9\u8fd9\u4e9b\u8bf4\u6cd5\u53d1\u8868\u8bc4\u8bba\u3002Twitter\u540e\u6765\u5728\u4e00\u7cfb\u5217\u63a8\u6587\u4e2d\u8bc1\u5b9e\uff0c\u8fd9\u6b21\u653b\u51fb\u662f\u7531\u201c\u4e00\u4e9b\u4eba\u534f\u540c\u53d1\u52a8\u7684\u793e\u4f1a\u5de5\u7a0b\u653b\u51fb\u9020\u6210\u7684\uff0c\u8fd9\u4e9b\u4eba\u6210\u529f\u5730\u5c06\u6211\u4eec\u7684\u4e00\u4e9b\u5458\u5de5\u4f5c\u4e3a\u76ee\u6807\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5185\u90e8\u7cfb\u7edf\u548c\u5de5\u5177\u3002\u201d\n\u4e00\u540d\u53c2\u4e0e\u5730\u4e0b\u9ed1\u5ba2\u6d3b\u52a8\u7684\u4eba\u58eb\u544a\u8bc9TechCrunch\uff0c\u4e00\u540d\u540d\u4e3a\u201cKirk\u201d\u7684\u9ed1\u5ba2-\u5f88\u53ef\u80fd\u4e0d\u662f\u4ed6\u4eec\u7684\u771f\u540d-\u901a\u8fc7\u8bbf\u95ee\u4e00\u4e2a\u5185\u90e8Twitter\u5de5\u5177\uff0c\u5728\u51e0\u4e2a\u5c0f\u65f6\u5185\u5c31\u83b7\u5f97\u4e86\u8d85\u8fc710\u4e07\u7f8e\u5143\u7684\u6536\u5165\uff0c\u4ed6\u4eec\u7528\u8fd9\u4e2a\u5de5\u5177\u63a7\u5236\u4e86\u6d41\u884c\u7684Twitter\u8d26\u6237\u3002\u9ed1\u5ba2\u4f7f\u7528\u8be5\u5de5\u5177\u91cd\u7f6e\u53d7\u5f71\u54cd\u8d26\u6237\u7684\u76f8\u5173\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4f7f\u6240\u6709\u8005\u66f4\u96be\u91cd\u65b0\u83b7\u5f97\u63a7\u5236\u6743\u3002\u8fd9\u540d\u9ed1\u5ba2\u968f\u540e\u53d1\u8d77\u4e86\u4e00\u573a\u52a0\u5bc6\u8d27\u5e01\u9a97\u5c40\uff0c\u58f0\u79f0\u53d7\u5bb3\u8005\u6c47\u51fa\u7684\u4efb\u4f55\u8d44\u91d1\u201c\u90fd\u4f1a\u88ab\u52a0\u500d\u9000\u56de\u201d\u3002\n\u8fd9\u4f4d\u77e5\u60c5\u4eba\u58eb\u544a\u8bc9TechCrunch\uff0c\u67ef\u514b\u4e00\u5f00\u59cb\u662f\u901a\u8fc7\u51fa\u552e\u865a\u8363\u7684Twitter\u8d26\u6237\u7684\u8bbf\u95ee\u6743\u5f00\u59cb\u7684\uff0c\u6bd4\u5982\u7b80\u77ed\u3001\u7b80\u5355\u548c\u53ef\u8bc6\u522b\u7684\u7528\u6237\u540d\u3002\u8fd9\u662f\u4e00\u7b14\u5927\u751f\u610f\uff0c\u5982\u679c\u4e0d\u662f\u4ecd\u7136\u662f\u975e\u6cd5\u7684\u8bdd\u3002\u4e00\u4e2a\u88ab\u76d7\u7684\u7528\u6237\u540d\u6216\u793e\u4ea4\u5a92\u4f53\u8d26\u53f7\u53ef\u80fd\u4f1a\u5356\u5230\u51e0\u767e\u7f8e\u5143\u6216\u6570\u5343\u7f8e\u5143\u4e0d\u7b49\u3002\n\u636e\u8bf4\u67ef\u514b\u5df2\u7ecf\u8054\u7cfb\u4e86OGUsers\u4e0a\u4e00\u540d\u201c\u503c\u5f97\u4fe1\u8d56\u201d\u7684\u6210\u5458\uff0cOGUsers\u662f\u4e00\u4e2a\u5f88\u53d7\u9ed1\u5ba2\u653b\u51fb\u7684\u793e\u4ea4\u5a92\u4f53\u8d26\u53f7\u4ea4\u6613\u5458\u6b22\u8fce\u7684\u8bba\u575b\u3002\u67ef\u514b\u9700\u8981\u8fd9\u4f4d\u503c\u5f97\u4fe1\u8d56\u7684\u6210\u5458\u6765\u5e2e\u52a9\u51fa\u552e\u88ab\u76d7\u7684\u865a\u8363\u7528\u6237\u540d\u3002\n\u5728\u4e0eTechCrunch\u5206\u4eab\u7684\u51e0\u5f20\u4e0d\u548c\u8c10\u804a\u5929\u7684\u622a\u56fe\u4e2d\uff0c\u67ef\u514b\u8bf4\uff1a\u201c\u7ed9\u6211\u53d1@\u2018s\u548cBTC\u2019s\u201d\uff0c\u6307\u7684\u662fTwitter\u7528\u6237\u540d\u548c\u52a0\u5bc6\u8d27\u5e01\u3002\u201c\u6211\u4f1a\u628a\u4f60\u7684\u72d7\u5c4e\u89e3\u51b3\u6389\uff0c\u201d\u4ed6\u8bf4\uff0c\u4ed6\u6307\u7684\u662f\u52ab\u6301Twitter\u8d26\u6237\u3002\n\u4f46\u5f53\u5929\u665a\u4e9b\u65f6\u5019\uff0c\u67ef\u514b\u201c\u5f00\u59cb\u5bf9\u4e00\u5207\u8fdb\u884c\u9ed1\u5ba2\u653b\u51fb\u201d\uff0c\u8be5\u4eba\u58eb\u544a\u8bc9TechCrunch\u3002\n\u67ef\u514b\u636e\u79f0\u8bbf\u95ee\u4e86Twitter\u7f51\u7edc\u4e0a\u7684\u4e00\u4e2a\u5185\u90e8\u5de5\u5177\uff0c\u8fd9\u4f7f\u5f97\u4ed6\u4eec\u80fd\u591f\u6709\u6548\u5730\u63a7\u5236\u7528\u6237\u7684\u8d26\u6237\u3002\u4e0eTechCrunch\u5206\u4eab\u7684\u5c4f\u5e55\u622a\u56fe\u663e\u793a\u4e86\u660e\u663e\u7684\u7ba1\u7406\u5de5\u5177\u3002(Twitter\u6b63\u5728\u5220\u9664\u63a8\u6587\uff0c\u5e76\u6682\u505c\u5206\u4eab\u8be5\u5de5\u5177\u622a\u56fe\u7684\u7528\u6237\u3002)\n\u8be5\u5de5\u5177\u4f3c\u4e4e\u5141\u8bb8\u7528\u6237-\u8868\u9762\u4e0a\u662fTwitter\u5458\u5de5-\u63a7\u5236\u5bf9\u7528\u6237\u8d26\u6237\u7684\u8bbf\u95ee\uff0c\u5305\u62ec\u66f4\u6539\u4e0e\u8be5\u8d26\u6237\u5173\u8054\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u751a\u81f3\u5b8c\u5168\u6682\u505c\u7528\u6237\u3002(\u6211\u4eec\u5df2\u7ecf\u7f16\u8f91\u4e86\u5c4f\u5e55\u622a\u56fe\u4e2d\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u56e0\u4e3a\u5b83\u4f3c\u4e4e\u4ee3\u8868\u4e86\u4e00\u4e2a\u771f\u5b9e\u7684\u7528\u6237\u3002)\u3002\n\u8be5\u4eba\u58eb\u6ca1\u6709\u5177\u4f53\u8bf4\u660e\u67ef\u514b\u662f\u5982\u4f55\u83b7\u5f97\u8bbf\u95eeTwitter\u5185\u90e8\u5de5\u5177\u7684\uff0c\u4f46\u5047\u8bbeTwitter\u5458\u5de5\u7684\u516c\u53f8\u8d26\u6237\u88ab\u52ab\u6301\u3002\u6709\u4e86\u88ab\u52ab\u6301\u7684\u5458\u5de5\u8d26\u6237\uff0c\u67ef\u514b\u5c31\u53ef\u4ee5\u8fdb\u5165\u516c\u53f8\u7684\u5185\u90e8\u7f51\u7edc\u3002\u8fd9\u4f4d\u77e5\u60c5\u4eba\u58eb\u8fd8\u8868\u793a\uff0cTwitter\u5458\u5de5\u4e0d\u592a\u53ef\u80fd\u53c2\u4e0e\u8d26\u6237\u63a5\u7ba1\u3002\n\u8fd9\u4f4d\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u4f5c\u4e3a\u4ed6\u4eec\u9ed1\u5ba2\u6d3b\u52a8\u7684\u4e00\u90e8\u5206\uff0c\u67ef\u514b\u9996\u5148\u7784\u51c6\u4e86@binance\uff0c\u7136\u540e\u5f88\u5feb\u8f6c\u79fb\u5230\u4e86\u6d41\u884c\u7684\u52a0\u5bc6\u8d27\u5e01\u8d26\u6237\u3002\u8fd9\u4f4d\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u67ef\u514b\u5728\u4e00\u4e2a\u5c0f\u65f6\u5185\u8d5a\u7684\u94b1\u6bd4\u5356\u7528\u6237\u540d\u8fd8\u591a\u3002\n\u4e3a\u4e86\u83b7\u5f97\u5bf9\u8be5\u5e73\u53f0\u7684\u63a7\u5236\uff0cTwitter\u77ed\u6682\u6682\u505c\u4e86\u4e00\u4e9b\u8d26\u6237\u64cd\u4f5c-\u5e76\u963b\u6b62\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u7528\u6237\u53d1\u5e03\u63a8\u6587-\u8fd9\u663e\u7136\u662f\u4e3a\u4e86\u963b\u6b62\u8d26\u6237\u52ab\u6301\u3002Twitter\u540e\u6765\u5728\u63a8\u7279\u4e0a\u5199\u9053\uff0c\u5b83\u201c\u6b63\u5728\u52aa\u529b\u8ba9\u4e8b\u60c5\u5c3d\u5feb\u6062\u590d\u6b63\u5e38\u3002\u201d", "note_en": "The account hijacks hit some of the most prominent users on the social media platform, including leading cryptocurrency sites, but also ensnared several celebrity accounts, notably Bill Gates, Jeff Bezos, Elon Musk and Democratic presidential hopeful Joe Biden.\n  A Twitter spokesperson, when reached, did not comment on the claims. Twitter later confirmed in  a series of tweets that the attack was caused by \u201ca coordinated social engineering attack by people who successfully targeted some of our employees with access to internal systems and tools.\u201d\n A person involved in the underground hacking scene told TechCrunch that a hacker, who goes by the handle \u201cKirk\u201d \u2014 likely not their real name \u2014 generated over $100,000 in the matter of hours by gaining access to an internal Twitter tool, which they used to take control of popular Twitter accounts. The hacker used the tool to reset the associated email addresses of affected accounts to make it more difficult for the owner to regain control. The hacker then  pushed a cryptocurrency scam that claimed whatever funds a victim sent \u201cwill be sent back doubled.\u201d\n The person told TechCrunch that Kirk had started out by selling access to vanity Twitter accounts, such as usernames that are short, simple and recognizable. It\u2019s  big business, if not still illegal. A stolen username or social media handle can go for anywhere between a few hundred dollars or thousands.\n Kirk is said to have contacted a \u201ctrusted\u201d member on OGUsers, a forum  popular with traders of hacked social media handles. Kirk needed the trusted member to help sell stolen vanity usernames.\n In several screenshots of a Discord chat shared with TechCrunch, Kirk said: \u201cSend me @\u2019s and BTC,\u201d referring to Twitter usernames and cryptocurrency. \u201cAnd I\u2019ll get ur shit done,\u201d he said, referring to hijacking Twitter accounts.\n But then later in the day, Kirk \u201cstarted hacking everything,\u201d the person told TechCrunch.\n Kirk allegedly had access to an internal tool on Twitter\u2019s network, which allowed them to effectively take control of a user\u2019s account. A screenshot shared with TechCrunch shows the apparent admin tool. (Twitter is  removing tweets and suspending users that share screenshots of the tool.)\n  The tool appears to allow users \u2014 ostensibly Twitter employees \u2014 to control access to a user\u2019s account, including changing the email associated with the account and even suspending the user altogether. (We\u2019ve redacted details from the screenshot, as it appears to represent a real user.)\n The person did not say exactly how Kirk got access to Twitter\u2019s internal tools, but hypothesized that a Twitter employee\u2019s corporate account was hijacked. With a hijacked employee account, Kirk could make their way into the company\u2019s internal network. The person also said it was unlikely that a Twitter employee was involved with the account takeovers.\n As part of their hacking campaign, Kirk targeted  @binance first, the person said, then quickly moved to popular cryptocurrency accounts. The person said Kirk made more money in an hour than selling usernames.\n To gain control of the platform, Twitter  briefly suspended some account actions \u2014 as well as prevented verified users from tweeting \u2014 in an apparent effort to stem the account hijacks. Twitter  later tweeted it \u201cwas working to get things back to normal as quickly as possible.\u201d", "posttime": "2020-07-16 11:04:08", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9ed1\u5ba2,\u63a8\u7279,\u5229\u7528,twitter", "title": "\n\u4e00\u540d\u9ed1\u5ba2\u5229\u7528\u63a8\u7279\u81ea\u5df1\u7684\u201c\u7ba1\u7406\u201d\u5de5\u5177\u4f20\u64ad\u52a0\u5bc6\u8d27\u5e01\u8bc8\u9a97", "title_en": "\n\t\t\t\tA hacker used Twitter\u2019s own \u2018admin\u2019 tool to spread cryptocurrency scam\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/07/15/twitter-hacker-admin-scam/", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u63a8\u7279", "\u5229\u7528", "twitter"]}, {"category": "", "categoryclass": "", "imagename": "5c871acc2108aff0bda9401a84ac8377.png", "infoid": 1012212, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OKD4\u5728\u6211\u4eec\u7684CI\u7cfb\u7edf\u5b8c\u6210OCP\u6d4b\u8bd5\u540e\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u591c\u95f4\u7248\u672c\u3002\u6bcf\u9694\u4e24\u5468\uff0c\u6211\u4eec\u5c06\u6bcf\u665a\u63a8\u51fa\u4e00\u4e2a\u7a33\u5b9a\u7684\u53d1\u884c\u6d41\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u53ef\u4ee5\u5728\u4e0d\u5207\u6362\u9891\u9053\u7684\u60c5\u51b5\u4e0b\u83b7\u5f97\u6700\u65b0\u548c\u7ecf\u8fc7\u6d4b\u8bd5\u7684\u4ee3\u7801\u7684\u66f4\u65b0\u3002\n\u5982\u679c\u60a8\u5df2\u7ecf\u5728\u4f7f\u7528OKD\uff0c\u8bf7\u53c2\u52a0\u8fd9\u4e2a\u5173\u4e8eOKD\u91c7\u7528\u7387\u7684\u77ed\u77ed5\u5206\u949f\u7684\u8c03\u67e5\uff0c\u5e2e\u52a9OKD-WG\u63a8\u52a8\u6211\u4eec\u7684\u8def\u7ebf\u56fe\uff0c\u66f4\u597d\u5730\u4e86\u89e3\u60a8\u5728OKD\u4e0a\u90e8\u7f72\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff01\n\u8bf7\u82b1\u70b9\u65f6\u95f4\u8bbf\u95eeOKD.io\u793e\u533a\u7ad9\u70b9\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\uff0c\u67e5\u770b\u6211\u4eec\u6b63\u5728\u4e0e\u4e4b\u5408\u4f5c\u7684\u5173\u952e\u4e0a\u6e38\u9879\u76ee\uff0c\u4e86\u89e3\u6709\u5173\u6211\u4eec\u7684\u6700\u7ec8\u7528\u6237\u53ca\u5176\u5de5\u4f5c\u8d1f\u8f7d\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u5e76\u67e5\u627e\u6700\u65b0\u7684\u8d44\u6e90\u94fe\u63a5\u3002\nOKD\u5de5\u4f5c\u7ec4\u6bcf\u4e24\u5468\u4e3e\u884c\u4e00\u6b21\u4f1a\u8bae\uff0c\u8ba8\u8bba\u53d1\u5c55\u548c\u4e0b\u4e00\u6b65\u884c\u52a8\u3002\u4f1a\u8bae\u65e5\u7a0b\u548c\u5730\u70b9\u5728OpenShift/\u793e\u533a\u8d44\u6e90\u5e93\u4e2d\u8fdb\u884c\u8ddf\u8e2a\u3002\nOpenShift Commons\u6709590\u591a\u4e2a\u6210\u5458\u7ec4\u7ec7\u53c2\u4e0e\uff0c\u662f\u793e\u533a\u5728OpenShift\u4e0a\u8fdb\u884c\u534f\u4f5c\u548c\u5408\u4f5c\u7684\u5730\u65b9\u3002OpenShift Commons\u5411\u6240\u6709\u793e\u533a\u53c2\u4e0e\u8005\u5f00\u653e\uff1a\u7528\u6237\u3001\u8fd0\u8425\u5546\u3001\u4f01\u4e1a\u3001\u521d\u521b\u4f01\u4e1a\u3001\u975e\u8425\u5229\u7ec4\u7ec7\u3001\u6559\u80b2\u673a\u6784\u3001\u5408\u4f5c\u4f19\u4f34\u548c\u670d\u52a1\u63d0\u4f9b\u5546\u3002", "note_en": "Today, the OKD-WG is pleased to announce the General Availability of OKD4, the community distribution of Red Hat OpenShift Kubernetes platform. With today\u2019s GA release of OKD4, Red Hat continues its commitment to open source and open collaboration with the Kubernetes and other Cloud Native communities.\n   In April 2012, Red Hat first released Origin as the open source upstream project of OpenShift. We had little inkling of the phenomenal trajectory of cloud-native technology that was to come. From the rise of containers, the birth of OCI and Fedora CoreOS, and now the  CNCF\u2019s incubation of Operator Framework, it has been an amazing ride. OKD4 wouldn\u2019t be possible without all these incredible innovative technologies and their communities.\n During the 3.x release timeframe, OKD has been a stable basis for OpenShift Container Platform, acting as an upstream distribution based on community-driven components - CentOS and Project Atomic to name a few. With the advent of the  Universal Base Image, relations between OKD and OCP has changed - from &#34;upstream-downstream&#34; to what we call &#34;sibling distributions.&#34; Images are built using RHEL7 base and can be distributed simultaneously for OKD and OCP, with no rebuild necessary. This enables both distributions to get updated code earlier, including security fixes from RHEL7, and provides a stable base for Red Hat Enterprise Linux.\n OpenShift 4.x heavily focuses on high availability, observability and seamless upgrades. With the OKD 4 release, the community is not only getting easy access to these features, but also the ability to affect the direction of the platform (via  enhancements process) and a community space for experimentation, discussion and knowledge sharing. The Operators pattern used throughout the design of OKD 4 is allowing users to maintain clusters efficiently over their lifetime.\n  OKD4 uses  Fedora CoreOS as a base OS for the nodes. It enables the cluster with recent security fixes, new features (like cgroups v2 support) and updated software. OKD4 is using the same images as the corresponding OpenShift Container Platform release. As a result, the community can participate in the development and can modify any part of the cluster in order to achieve specific goals.\n The cluster still has the same features as in OKD3 - it can be installed in the user environment, configured to user liking and updated.\n    As a community distribution it does not require a pull secret from  https://openshift.com/try. All OKD4 images are available without additional authentication. The base OS image for OKD4 is available at  https://getfedora.org/en/coreos/download/. However some optional operators from  operatorhub.io require a pull secret, so by default OKD4 installs a source with community operators only. See  FAQ for more information.\n OCP is an opinionated Kubernetes distribution with a heavy focus on high availability and production workloads. This puts restrictions on cluster configuration - for instance, single master installations are not supported. OKD4, however, allows users to install single master clusters - for development or stage environments. These clusters cannot be upgraded to later versions, though.\n OKD4 creates a new nightly release after OCP tests are completed by our CI system. Every two weeks we&#39;ll promote a nightly to a stable release stream, so users can get updates to latest and tested code without switching channels.\n         If you are already using OKD, take this short 5 minute survey on  OKD Adoption and help the OKD-WG drive our road map and better understand the workloads you are deploying on OKD!\n   Please take a moment to visit the  OKD.io community site to download the latest release, check out the key upstream projects that we are collaborating with, find out more about our end users and their workloads and find the latest resource links.\n The  OKD Working Group meets bi-weekly to discuss the development and next steps. The meeting schedule and location are tracked in the openshift/community repo.\n    With 590 + member organizations participating, OpenShift Commons is the place where the community goes to collaborate and work together on OpenShift. OpenShift Commons is open to all community participants: users, operators, enterprises, startups, non-profits, educational institutions, partners, and service providers.", "posttime": "2020-07-16 11:02:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "okd4,okd", "title": "OKD4\u73b0\u5df2\u6b63\u5f0f\u4e0a\u5e02", "title_en": "OKD4 is now Generally Available", "transed": 1, "url": "https://www.openshift.com/blog/okd4-is-now-generally-available", "via": "", "real_tags": ["okd4", "okd"]}, {"category": "", "categoryclass": "", "imagename": "bfd18ef586fc8ea37b0fca8b9e18d626.jpg", "infoid": 1012211, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5927\u591a\u6570\u6750\u6599\u7684\u5b8f\u89c2\u6027\u8d28\u6765\u81ea\u5176\u5fae\u89c2\u7ed3\u6784\u3002\u4f8b\u5982\uff0c\u94a2\u68d2\u662f\u575a\u786c\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u539f\u5b50\u5f62\u6210\u4e86\u91cd\u590d\u7684\u7ed3\u6676\u56fe\u6848\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4fdd\u6301\u9759\u6b62\u3002\u5f53\u4f60\u628a\u811a\u6d78\u5165\u6e56\u4e2d\u65f6\uff0c\u6c34\u4f1a\u5728\u4f60\u7684\u811a\u5468\u56f4\u5206\u5f00\uff0c\u56e0\u4e3a\u6db2\u4f53\u6ca1\u6709\u8fd9\u79cd\u7ed3\u6784\uff1b\u5b83\u4eec\u7684\u5206\u5b50\u662f\u968f\u673a\u79fb\u52a8\u7684\u3002\n\u7136\u540e\u662f\u73bb\u7483\uff0c\u4e00\u79cd\u5947\u602a\u7684\u4e2d\u95f4\u7269\u8d28\uff0c\u51e0\u5341\u5e74\u6765\u4e00\u76f4\u56f0\u6270\u7740\u7269\u7406\u5b66\u5bb6\u3002\u7ed9\u73bb\u7483\u4e2d\u7684\u5206\u5b50\u62cd\u4e00\u5f20\u5feb\u7167\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u4f1a\u50cf\u6db2\u4f53\u4e00\u6837\u65e0\u5e8f\uff0c\u4f46\u5927\u591a\u6570\u5206\u5b50\u51e0\u4e4e\u4e0d\u4f1a\u79fb\u52a8\uff0c\u4f7f\u6750\u6599\u53d8\u5f97\u50cf\u56fa\u4f53\u4e00\u6837\u575a\u786c\u3002\n\u73bb\u7483\u662f\u901a\u8fc7\u51b7\u5374\u67d0\u4e9b\u6db2\u4f53\u800c\u5f62\u6210\u7684\u3002\u4f46\u662f\uff0c\u4e3a\u4ec0\u4e48\u6db2\u4f53\u4e2d\u7684\u5206\u5b50\u5728\u4e00\u5b9a\u7684\u6e29\u5ea6\u4e0b\u4f1a\u5982\u6b64\u663e\u8457\u5730\u51cf\u901f\uff0c\u800c\u5b83\u4eec\u7684\u7ed3\u6784\u6392\u5217\u6ca1\u6709\u660e\u663e\u7684\u76f8\u5e94\u53d8\u5316-\u8fd9\u4e00\u73b0\u8c61\u88ab\u79f0\u4e3a\u73bb\u7483\u5316\u8f6c\u53d8-\u662f\u4e00\u4e2a\u4e3b\u8981\u7684\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002\n\u73b0\u5728\uff0c\u8c37\u6b4c\u65d7\u4e0b\u7684\u4eba\u5de5\u667a\u80fd\u516c\u53f8DeepMind\u7684\u7814\u7a76\u4eba\u5458\u5229\u7528\u4eba\u5de5\u667a\u80fd\u6765\u7814\u7a76\u73bb\u7483\u4e2d\u7684\u5206\u5b50\u5728\u53d8\u786c\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002DeepMind\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u80fd\u591f\u9884\u6d4b\u5206\u5b50\u5982\u4f55\u5728\u6781\u957f\u7684\u65f6\u95f4\u5c3a\u5ea6\u4e0a\u79fb\u52a8\uff0c\u53ea\u4f7f\u7528\u5b83\u4eec\u5728\u67d0\u4e2a\u65f6\u523b\u7684\u7269\u7406\u6392\u5217\u7684\u201c\u5feb\u7167\u201d\u3002\u6839\u636eDeepMind\u7684\u7ef4\u514b\u591a\u00b7\u5df4\u666e\u65af\u7279\u7684\u8bf4\u6cd5\uff0c\u5c3d\u7ba1\u73bb\u7483\u7684\u5fae\u89c2\u7ed3\u6784\u770b\u8d77\u6765\u6ca1\u6709\u4ec0\u4e48\u7279\u70b9\uff0c\u201c\u4f46\u8fd9\u4e2a\u7ed3\u6784\u53ef\u80fd\u6bd4\u4eba\u4eec\u60f3\u8c61\u7684\u66f4\u80fd\u9884\u6d4b\u52a8\u6001\u3002\u201d\n\u5728\u6089\u5c3c\u5927\u5b66\u7814\u7a76\u73bb\u7483\u8f6c\u53d8\u7684\u5f7c\u5f97\u00b7\u54c8\u7f57\u97e6\u5c14(Peter Harrowell)\u5bf9\u6b64\u8868\u793a\u8d5e\u540c\u3002\u4ed6\u8bf4\uff0c\u8fd9\u9879\u65b0\u7814\u7a76\u6bd4\u4ee5\u5f80\u5728\u73bb\u7483\u4e2d\u7684\u7814\u7a76\u201c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u66f4\u6709\u529b\u7684\u7406\u7531\u201d\uff0c\u201c\u7ed3\u6784\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5bf9\u52a8\u6001\u8fdb\u884c\u4e86\u7f16\u7801\u201d\uff0c\u56e0\u6b64\u73bb\u7483\u6bd5\u7adf\u4e0d\u50cf\u6db2\u4f53\u90a3\u6837\u65e0\u5e8f\u3002\n\u4e3a\u4e86\u7406\u89e3\u662f\u4ec0\u4e48\u5fae\u89c2\u53d8\u5316\u5bfc\u81f4\u4e86\u73bb\u7483\u8f6c\u53d8\uff0c\u7269\u7406\u5b66\u5bb6\u9700\u8981\u5c06\u4e24\u79cd\u6570\u636e\u8054\u7cfb\u8d77\u6765\uff1a\u73bb\u7483\u4e2d\u7684\u5206\u5b50\u662f\u5982\u4f55\u5728\u7a7a\u95f4\u4e2d\u6392\u5217\u7684\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55(\u7f13\u6162)\u968f\u7740\u65f6\u95f4\u79fb\u52a8\u7684\u3002\u5c06\u8fd9\u4e9b\u8054\u7cfb\u8d77\u6765\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u4e0e\u4e00\u4e2a\u88ab\u79f0\u4e3a\u52a8\u6001\u503e\u5411\u6027\u7684\u91cf\u8054\u7cfb\u8d77\u6765\uff1a\u4e00\u7ec4\u5206\u5b50\u5728\u672a\u6765\u7684\u67d0\u4e2a\u7279\u5b9a\u65f6\u95f4\u53ef\u80fd\u5df2\u7ecf\u79fb\u52a8\u4e86\u591a\u5c11\uff0c\u8003\u8651\u5230\u5b83\u4eec\u76ee\u524d\u7684\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u8fdb\u5316\u91cf\u6765\u81ea\u4e8e\u4f7f\u7528\u725b\u987f\u5b9a\u5f8b\u8ba1\u7b97\u5206\u5b50\u7684\u8f68\u8ff9\uff0c\u4ece\u8bb8\u591a\u4e0d\u540c\u7684\u968f\u673a\u521d\u59cb\u901f\u5ea6\u5f00\u59cb\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u5e73\u5747\u5728\u4e00\u8d77\u3002\n\u901a\u8fc7\u6a21\u62df\u8fd9\u4e9b\u5206\u5b50\u52a8\u529b\u5b66\uff0c\u8ba1\u7b97\u673a\u53ef\u4ee5\u751f\u6210\u6570\u5343\u4e2a\u73bb\u7483\u5206\u5b50\u7684\u201c\u503e\u5411\u56fe\u201d--\u4f46\u4ec5\u9650\u4e8e\u4e07\u4ebf\u5206\u4e4b\u4e00\u79d2\u7684\u65f6\u95f4\u5c3a\u5ea6\u3002\u6839\u636e\u5b9a\u4e49\uff0c\u73bb\u7483\u4e2d\u7684\u5206\u5b50\u8fd0\u52a8\u6781\u5176\u7f13\u6162\u3002\u6cd5\u56fd\u5df4\u9ece\u9ad8\u7b49\u7814\u7a76\u9662\u7684\u51dd\u805a\u6001\u7269\u7406\u5b66\u5bb6\u6731\u5229\u5965\u00b7\u6bd4\u7f57\u91cc(Giulio Biroli)\u8bf4\uff0c\u8ba1\u7b97\u5b83\u4eec\u5728\u51e0\u79d2\u6216\u66f4\u957f\u65f6\u95f4\u5185\u7684\u503e\u5411\u6027\u201c\u5bf9\u4e8e\u666e\u901a\u8ba1\u7b97\u673a\u6765\u8bf4\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u592a\u591a\u7684\u65f6\u95f4\u201d\u3002\n\u6bd4\u7f57\u91cc\u8bf4\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u4ec5\u4ec5\u5728\u8fd9\u4e9b\u6a21\u62df\u4e0a\u8f6c\u52a8\u66f2\u67c4\u5e76\u4e0d\u80fd\u8ba9\u7269\u7406\u5b66\u5bb6\u6709\u592a\u591a\u7684\u6d1e\u5bdf\u529b\uff0c\u4e86\u89e3\u4ec0\u4e48\u7ed3\u6784\u7279\u5f81(\u5982\u679c\u6709\u7684\u8bdd)\u53ef\u80fd\u5bfc\u81f4\u73bb\u7483\u4e2d\u7684\u5206\u5b50\u503e\u5411\u3002\nDeepMind\u7684\u7814\u7a76\u4eba\u5458\u5f00\u59cb\u8bad\u7ec3\u4eba\u5de5\u667a\u80fd\u7cfb\u7edf\uff0c\u5728\u6ca1\u6709\u5b9e\u9645\u8fd0\u884c\u6a21\u62df\u7684\u60c5\u51b5\u4e0b\u9884\u6d4b\u73bb\u7483\u4e2d\u7684\u503e\u5411\u6027\uff0c\u5e76\u8bd5\u56fe\u7406\u89e3\u8fd9\u4e9b\u503e\u5411\u6027\u662f\u4ece\u54ea\u91cc\u6765\u7684\u3002\u4ed6\u4eec\u4f7f\u7528\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\uff0c\u8fd9\u79cd\u7f51\u7edc\u4ee5\u56fe\u5f62-\u7531\u7ebf\u8fde\u63a5\u7684\u8282\u70b9\u96c6\u5408-\u4f5c\u4e3a\u8f93\u5165\u3002\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u5206\u5b50\u5728\u73bb\u7483\u4e2d\u7684\u4e09\u7ef4\u4f4d\u7f6e\uff1b\u8282\u70b9\u4e4b\u95f4\u7684\u7ebf\u6761\u8868\u793a\u5206\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002Bapst\u8bf4\uff0c\u7531\u4e8e\u795e\u7ecf\u7f51\u7edc\u901a\u8fc7\u6539\u53d8\u81ea\u5df1\u7684\u7ed3\u6784\u6765\u201c\u5b66\u4e60\u201d\u4ee5\u53cd\u6620\u5176\u8f93\u5165\u7684\u7ed3\u6784\uff0c\u201c\u56fe\u5f62\u795e\u7ecf\u7f51\u7edc\u975e\u5e38\u9002\u5408\u8868\u793a\u7c92\u5b50\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u3002\u201d\nBapst\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u9996\u5148\u4f7f\u7528\u6a21\u62df\u7684\u7ed3\u679c\u6765\u8bad\u7ec3\u4ed6\u4eec\u7684\u4eba\u5de5\u667a\u80fd\u7cfb\u7edf\uff1a\u4ed6\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u75314096\u4e2a\u5206\u5b50\u7ec4\u6210\u7684\u865a\u62df\u73bb\u7483\u7acb\u65b9\u4f53\uff0c\u57fa\u4e8e400\u4e2a\u72ec\u7279\u7684\u8d77\u59cb\u4f4d\u7f6e\u6a21\u62df\u4e86\u5206\u5b50\u5728\u4e0d\u540c\u6e29\u5ea6\u4e0b\u7684\u6f14\u5316\uff0c\u5e76\u8ba1\u7b97\u4e86\u6bcf\u79cd\u60c5\u51b5\u4e0b\u7c92\u5b50\u7684\u503e\u5411\u6027\u3002\u5728\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u4ee5\u51c6\u786e\u9884\u6d4b\u8fd9\u4e9b\u503e\u5411\u4e4b\u540e\uff0c\u7814\u7a76\u4eba\u5458\u63a5\u4e0b\u6765\u5c06400\u4e2a\u4ee5\u524d\u770b\u4e0d\u89c1\u7684\u7c92\u5b50\u6784\u578b-\u73bb\u7483\u5206\u5b50\u6784\u578b\u7684\u201c\u5feb\u7167\u201d-\u8f93\u5165\u5230\u8bad\u7ec3\u8fc7\u7684\u7f51\u7edc\u4e2d\u3002\n\u4ec5\u4f7f\u7528\u8fd9\u4e9b\u7ed3\u6784\u5feb\u7167\uff0c\u795e\u7ecf\u7f51\u7edc\u5c31\u4ee5\u524d\u6240\u672a\u6709\u7684\u7cbe\u5ea6\u9884\u6d4b\u4e86\u5206\u5b50\u5728\u4e0d\u540c\u6e29\u5ea6\u4e0b\u7684\u503e\u5411\u6027\uff0c\u6bd4\u4e4b\u524d\u6700\u5148\u8fdb\u7684\u673a\u5668\u5b66\u4e60\u9884\u6d4b\u65b9\u6cd5\u66f4\u8fdc\u5730\u9884\u6d4b\u4e86\u672a\u6765463\u500d\u3002\n\u6839\u636eBiroli\u7684\u8bf4\u6cd5\uff0cDeepMind\u795e\u7ecf\u7f51\u7edc\u4ec5\u4ec5\u57fa\u4e8e\u5206\u5b50\u5f53\u524d\u7ed3\u6784\u7684\u5feb\u7167\u6765\u9884\u6d4b\u5206\u5b50\u672a\u6765\u7684\u8fd0\u52a8\u7684\u80fd\u529b\uff0c\u4e3a\u63a2\u7d22\u773c\u955c\u7684\u52a8\u529b\u5b66\u63d0\u4f9b\u4e86\u4e00\u79cd\u5f3a\u5927\u7684\u65b0\u65b9\u6cd5\uff0c\u6f5c\u5728\u7684\u5176\u4ed6\u6750\u6599\u4e5f\u662f\u5982\u6b64\u3002\n\u4f46\u662f\uff0c\u4e3a\u4e86\u505a\u51fa\u9884\u6d4b\uff0c\u7f51\u7edc\u5728\u8fd9\u4e9b\u5feb\u7167\u4e2d\u68c0\u6d4b\u5230\u4e86\u4ec0\u4e48\u6a21\u5f0f\u5462\uff1f\u8be5\u7cfb\u7edf\u4e0d\u80fd\u8f7b\u6613\u5730\u8fdb\u884c\u53cd\u5411\u5de5\u7a0b\uff0c\u4ee5\u786e\u5b9a\u5b83\u5728\u8bad\u7ec3\u671f\u95f4\u5b66\u5230\u4e86\u4ec0\u4e48-\u8fd9\u662f\u8bd5\u56fe\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u8fdb\u884c\u79d1\u5b66\u7814\u7a76\u7684\u4e00\u4e2a\u5e38\u89c1\u95ee\u9898\u3002\u4f46\u5728\u8fd9\u8d77\u6848\u4ef6\u4e2d\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u4e9b\u7ebf\u7d22\u3002\n\u6839\u636e\u56e2\u961f\u6210\u5458Agnieszka Grabska-Barwinska\u7684\u8bf4\u6cd5\uff0c\u56fe\u5f62\u795e\u7ecf\u7f51\u7edc\u5b66\u4f1a\u4e86\u7f16\u7801\u4e00\u79cd\u7269\u7406\u5b66\u5bb6\u79f0\u4e4b\u4e3a\u5173\u8054\u957f\u5ea6\u7684\u6a21\u5f0f\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u968f\u7740DeepMind\u7684\u56fe\u5f62\u795e\u7ecf\u7f51\u7edc\u81ea\u6211\u91cd\u7ec4\u4ee5\u53cd\u6620\u8bad\u7ec3\u6570\u636e\uff0c\u5b83\u5f00\u59cb\u5448\u73b0\u4ee5\u4e0b\u8d8b\u52bf\uff1a\u5f53\u9884\u6d4b\u8f83\u9ad8\u6e29\u5ea6\u4e0b\u7684\u503e\u5411\u65f6(\u5206\u5b50\u8fd0\u52a8\u770b\u8d77\u6765\u66f4\u50cf\u6db2\u4f53\u800c\u4e0d\u662f\u56fa\u4f53)\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7684\u9884\u6d4b\uff0c\u7f51\u7edc\u4f9d\u8d56\u4e8e\u6765\u81ea\u56fe\u5f62\u4e2d\u4e24\u4e09\u4e2a\u8fde\u63a5\u4e4b\u5916\u7684\u76f8\u90bb\u8282\u70b9\u7684\u4fe1\u606f\u3002\u4f46\u5728\u63a5\u8fd1\u73bb\u7483\u5316\u8f6c\u53d8\u7684\u8f83\u4f4e\u6e29\u5ea6\u4e0b\uff0c\u8fd9\u4e2a\u6570\u5b57-\u5173\u8054\u957f\u5ea6-\u589e\u52a0\u52305\u3002\nDeepMind\u56e2\u961f\u7684\u7269\u7406\u5b66\u5bb6\u6258\u9a6c\u65af\u00b7\u51ef\u514b(Thomas Keck)\u8bf4\uff0c\u201c\u6211\u4eec\u770b\u5230\uff0c\u968f\u7740\u6211\u4eec\u964d\u4f4e\u6e29\u5ea6\uff0c\u7f51\u7edc\u4ece\u8d8a\u6765\u8d8a\u5927\u7684\u7c92\u5b50\u90bb\u57df\u4e2d\u63d0\u53d6\u4fe1\u606f\u3002\u201d\u201c\u5728\u8fd9\u4e9b\u4e0d\u540c\u7684\u6e29\u5ea6\u4e0b\uff0c\u73bb\u7483\u5728\u8089\u773c\u770b\u6765\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\u4f46\u968f\u7740\u6211\u4eec\u7684\u8d70\u4e0b\u5761\u8def\uff0c\u7535\u89c6\u7f51\u770b\u5230\u4e86\u4e00\u4e9b\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u201c\u3002\n\u589e\u52a0\u7684\u5173\u8054\u957f\u5ea6\u662f\u76f8\u53d8\u7684\u6807\u5fd7\uff0c\u5728\u76f8\u53d8\u4e2d\uff0c\u7c92\u5b50\u4ece\u65e0\u5e8f\u6392\u5217\u5230\u6709\u5e8f\u6392\u5217\u6216\u4ece\u6709\u5e8f\u6392\u5217\u5230\u65e0\u5e8f\u6392\u5217\u3002\u4f8b\u5982\uff0c\u5f53\u4e00\u5757\u94c1\u4e2d\u7684\u539f\u5b50\u96c6\u4f53\u6392\u5217\uff0c\u4ece\u800c\u4f7f\u94c1\u5757\u78c1\u5316\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u5f53\u5757\u4f53\u63a5\u8fd1\u8fd9\u4e00\u8f6c\u53d8\u65f6\uff0c\u6bcf\u4e2a\u539f\u5b50\u5bf9\u5757\u4f53\u4e2d\u7684\u539f\u5b50\u7684\u5f71\u54cd\u8d8a\u6765\u8d8a\u5927\u3002\n\u5bf9\u4e8e\u6bd4\u7f57\u91cc\u8fd9\u6837\u7684\u7269\u7406\u5b66\u5bb6\u6765\u8bf4\uff0c\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u5173\u8054\u957f\u5ea6\u5e76\u5c06\u5176\u7eb3\u5165\u9884\u6d4b\u7684\u80fd\u529b\u8868\u660e\uff0c\u5728\u73bb\u7483\u8f6c\u53d8\u671f\u95f4\uff0c\u73bb\u7483\u7ed3\u6784\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e9b\u9690\u85cf\u7684\u79e9\u5e8f\u6b63\u5728\u53d1\u5c55\u3002\u83b1\u65af\u5927\u5b66\u7684\u73bb\u7483\u4e13\u5bb6\u5f7c\u5f97\u00b7\u6c83\u6797\u65af(Peter Wolynes)\u8bf4\uff0c\u673a\u5668\u5b66\u4e60\u5230\u7684\u5173\u8054\u957f\u5ea6\u63d0\u4f9b\u4e86\u8bc1\u636e\uff0c\u8868\u660e\u6750\u6599\u53d8\u5f97\u73bb\u7483\u5316\u65f6\u201c\u63a5\u8fd1\u70ed\u529b\u5b66\u76f8\u53d8\u201d\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u901a\u8fc7\u795e\u7ecf\u7f51\u7edc\u83b7\u5f97\u7684\u77e5\u8bc6\u5e76\u4e0d\u5bb9\u6613\u8f6c\u5316\u4e3a\u65b0\u7684\u65b9\u7a0b\u3002\u201c\u6211\u4eec\u4e0d\u80fd\u8bf4\uff0c\u2018\u54e6\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u7684\u7f51\u7edc\u6b63\u5728\u7814\u7a76\u8fd9\u79cd\u76f8\u5173\u6027\uff0c\u6211\u53ef\u4ee5\u7ed9\u4f60\u4e00\u4e2a\u516c\u5f0f\uff0c\u2019\u201dDeepMind\u79d1\u5b66\u56e2\u961f\u8d1f\u8d23\u4eba\u666e\u4ec0\u7c73\u7279\u00b7\u79d1\u5229(Pushmet Kohli)\u8bf4\u3002\u5bf9\u4e8e\u4e00\u4e9b\u73bb\u7483\u7269\u7406\u5b66\u5bb6\u6765\u8bf4\uff0c\u8fd9\u4e2a\u8b66\u544a\u9650\u5236\u4e86\u56fe\u5f62\u795e\u7ecf\u7f51\u7edc\u7684\u7528\u5904\u3002\u201c\u8fd9\u80fd\u7528\u4eba\u7c7b\u7684\u8bdd\u6765\u89e3\u91ca\u5417\uff1f\u201d\u6c83\u6797\u65af\u8bf4\u3002\u201c\u8fd9\u662f\u4ed6\u4eec\u6ca1\u6709\u505a\u7684\u3002\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4ed6\u4eec\u5c06\u6765\u4e0d\u80fd\u8fd9\u4e48\u505a\u3002\u201c", "note_en": "Most materials derive their macroscopic properties from their microscopic structure. A steel rod is hard, for instance, because its atoms form a repeating crystalline pattern that remains static over time. Water parts around your foot when you dip it into a lake because fluids don\u2019t have that structure; their molecules move around randomly.\n Then there\u2019s glass, a strange in-between substance that has puzzled physicists for decades. Take a snapshot of the molecules in glass, and they\u2019ll appear disordered just like a liquid\u2019s. But most of the molecules barely move, making the material rigid like a solid.\n Glass is formed by cooling certain liquids. But why the molecules in the liquid slow down so dramatically at a certain temperature, with no obvious corresponding change in their structural arrangement \u2014 a phenomenon known as the glass transition \u2014 is  a major open question.\n Now, researchers at DeepMind, a Google-owned artificial intelligence company, have  used AI to study what\u2019s happening to the molecules in glass as it hardens. DeepMind\u2019s artificial neural network was able to predict how the molecules move over extremely long timescales, using only a \u201csnapshot\u201d of their physical arrangement at one moment in time. According to DeepMind\u2019s Victor Bapst, even though the microscopic structure of a glass appears featureless, \u201cthe structure is maybe more predictive of the dynamics than people thought.\u201d\n Peter Harrowell, who studies the glass transition at the University of Sydney, agrees. He said the new work \u201cmakes a stronger case\u201d than ever before that in glass, \u201cstructure somehow encodes for the dynamics,\u201d and so glass isn\u2019t as disordered as a liquid after all.\n  To understand what microscopic changes cause the glass transition, physicists need to relate two kinds of data: how the molecules in a glass are arranged in space, and how they (slowly) move over time. One way to link these is with a quantity called dynamic propensity: how much a set of molecules is likely to have moved by some specific time in the future, given their current positions. This evolving quantity comes from calculating the molecules\u2019 trajectories using Newton\u2019s laws, starting with many different random initial velocities and then averaging the outcomes together.\n By simulating these molecular dynamics, computers can generate \u201cpropensity maps\u201d for thousands of glass molecules \u2014 but only on timescales of trillionths of a second. And molecules in glass, by definition, move extremely slowly. Computing their propensity to a horizon of seconds or more is \u201cjust impossible [for] normal computers because it takes too much time,\u201d said  Giulio Biroli, a condensed matter physicist at the \u00c9cole Normale Sup\u00e9rieure in France.\n  What\u2019s more, Biroli said, merely turning the crank on these simulations doesn\u2019t produce much insight for physicists about what structural features, if any, could be causing the molecular propensities in glass.\n DeepMind\u2019s researchers set out to train an AI system to predict propensities in glass without actually running the simulations, and to try to understand where these propensities come from. They used a special kind of artificial neural network that takes graphs \u2014 collections of nodes connected by lines \u2014 as input. Each node in the graph represents a molecule\u2019s three-dimensional position in the glass; lines between nodes represent how far apart molecules are from each other. Since neural networks \u201clearn\u201d by changing their own structure to reflect the structure of their inputs, \u201cthe graph neural network is very well suited to represent particles\u2019 interaction,\u201d Bapst said.\n Bapst and his colleagues first used the results of simulations to train their AI system: They created a virtual cube of glass comprising 4,096 molecules, simulated the evolution of the molecules based on 400 unique starting positions at various temperatures, and computed the particles\u2019 propensities in each case. After training the neural network to accurately predict these propensities, the researchers next fed 400 previously unseen particle configurations \u2014 \u201csnapshots\u201d of the glass molecules\u2019 configurations \u2014 into the trained network.\n Using only these structural snapshots, the neural network predicted the molecules\u2019 propensities at different temperatures with unprecedented accuracy, reaching 463 times further into the future than the previous state-of-the-art machine learning prediction method.\n  According to Biroli, the DeepMind neural network\u2019s ability to predict molecules\u2019 future movements based on a mere snapshot of their current structure provides a powerful new way to explore the dynamics of glasses, and potentially other materials as well.\n But what pattern did the network detect in those snapshots in order to make its predictions? The system can\u2019t be easily reverse-engineered to determine what it learned to pay attention to during training \u2014 a common problem for researchers  trying to use AI to do science. But in this case they found some clues.\n According to Agnieszka Grabska-Barwinska, a member of the team, the graph neural network learned to encode a pattern that physicists call correlation length. That is, as DeepMind\u2019s graph neural network restructured itself to reflect the training data, it came to exhibit the following tendency: When predicting propensities at higher temperatures (where molecular movement looks more liquid-like than solid), for each node\u2019s prediction the network depended on information from neighboring nodes two or three connections away in the graph. But at lower temperatures closer to the glass transition, that number \u2014 the correlation length \u2014 increased to five.\n \u201cWe see that the network extracts, as we lower the temperature, information from larger and larger neighborhoods\u201d of particles, said Thomas Keck, a physicist on the DeepMind team. \u201cAt these different temperatures, the glass looks, to the naked eye, just identical. But the network sees something different as we go down.\u201d\n Increased correlation length is  a hallmark of phase transitions, in which particles transition from a disordered to an ordered arrangement or vice versa. It happens, for instance, when atoms in a block of iron collectively align so that the block becomes magnetized. As the block approaches this transition, each atom influences atoms farther and farther away in the block.\n  To physicists like Biroli, the neural network\u2019s ability to learn about correlation length and factor it into its predictions suggests that some hidden order must be developing in the structure of glass during the glass transition.  Peter Wolynes, a glass expert at Rice University, said that the correlation length learned by the machine provides evidence that materials \u201capproach a thermodynamic phase transition\u201d as they become glassy.\n Still, the knowledge gained by the neural network doesn\u2019t easily translate into new equations. \u201cWe cannot say, \u2018Oh, actually our network is looking at this correlation that I can give you a formula for,\u2019\u201d said Pushmeet Kohli, who heads DeepMind\u2019s science team. To some glass physicists, this caveat limits how useful the graph neural network might be. \u201cCan this be explained in human terms?\u201d said Wolynes. \u201cThat they did not do. That doesn\u2019t mean they cannot do it in the future.\u201d", "posttime": "2020-07-16 11:01:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ed3\u6784,secret,\u73bb\u7483", "title": "\u4e3a\u4ec0\u4e48\u73bb\u7483\u662f\u50f5\u786c\u7684\uff1f\u5176\u79d8\u5bc6\u7ed3\u6784\u7684\u8ff9\u8c61\u6d6e\u51fa\u6c34\u9762", "title_en": "Why Is Glass Rigid? Signs of Its Secret Structure Emerge", "transed": 1, "url": "https://www.quantamagazine.org/why-is-glass-rigid-signs-of-its-secret-structure-emerge-20200707/", "via": "", "real_tags": ["\u7ed3\u6784", "secret", "\u73bb\u7483"]}, {"category": "", "categoryclass": "", "imagename": "639957bdf92678be95ba8d7307f27486.png", "infoid": 1012209, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5218\u6613\u65af\u00b7\u53f2\u5bc6\u65af\uff0c2020\u5e747\u670810\u65e5\u6211\u6700\u8fd1\u5199\u4e86\u4e00\u7bc7\u5173\u4e8e\u80f6\u56ca\u7f51\u7edc\u7684\u5168\u6982\u7387\u7248\u672c\u7684\u8bba\u6587\u3002\u5728\u8bd5\u56fe\u8ba9\u8fd9\u7c7b\u6a21\u578b\u53d1\u6325\u4f5c\u7528\u65f6\uff0c\u6211\u53d1\u73b0\u80f6\u56ca\u7f51\u7edc\u80cc\u540e\u7684\u60f3\u6cd5\u5b58\u5728\u4e00\u4e9b\u6709\u8da3\u7684\u6982\u5ff5\u6027\u95ee\u9898\u3002\u5176\u4e2d\u4e00\u4e9b\u95ee\u9898\u672c\u8d28\u4e0a\u6709\u70b9\u54f2\u5b66\u6027\u8d28\uff0c\u6211\u8fd8\u6ca1\u6709\u60f3\u51fa\u4e00\u4e2a\u597d\u529e\u6cd5\u6765\u628a\u5b83\u4eec\u56fa\u5b9a\u5728ML\u4f1a\u8bae\u8bba\u6587\u4e2d\u3002\u4f46\u6211\u8ba4\u4e3a\uff0c\u5f53\u6211\u4eec\u8bbe\u8ba1\u65b0\u7684\u6982\u7387\u89c6\u89c9\u6a21\u578b\u65f6\uff0c\u5b83\u4eec\u53ef\u4ee5\u4e3a\u7814\u7a76\u63d0\u4f9b\u4fe1\u606f(\u5b83\u4eec\u975e\u5e38\u6709\u8da3)\uff0c\u6240\u4ee5\u6211\u8bd5\u7740\u5728\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e9b\u89c1\u89e3\u3002\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u662f\u6211\u8bba\u6587\u7684\u914d\u5957\u6587\u7ae0\uff1aiStart\u4ece\u9ad8\u5c42\u6b21\u7684\u751f\u6210\u6027\u6982\u7387\u89e3\u91ca\u4e2d\u4ecb\u7ecd\u80f6\u56ca\uff0c\u7136\u540e\u6df1\u5165\u8ba8\u8bba\u6211\u53d1\u73b0\u7684\u6982\u5ff5\u6027\u95ee\u9898\u3002\u6211\u5c06\u5728\u5468\u4e94(7\u670817\u65e5)\u5728ICML\u7684\u9762\u5411\u5bf9\u8c61\u5b66\u4e60\u7814\u8ba8\u4f1a\u4e0a\u53d1\u8868\u8fd9\u7bc7\u8bba\u6587\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u60f3\u804a\u5929\u7684\u8bdd\u8bf7\u4e00\u5b9a\u8981\u8fc7\u6765\u3002\n\u80f6\u56ca\u7f51\u7edc\u7684\u76ee\u6807\u662f\u663e\u5f0f\u5730\u8868\u793a\u5bf9\u8c61\u53ca\u5176\u5b9e\u4f8b\u5316\u53c2\u6570\uff0c\u5982\u4f4d\u7f6e\u3001\u5927\u5c0f\u7b49\u3002\u5f53\u6211\u4eec\u8bf4\u6211\u4eec\u60f3\u8981\u8868\u73b0\u7269\u4f53\u65f6\uff0c\u6211\u4eec\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u6bd5\u7adf\uff0c\u6b63\u5e38\u7684\u795e\u7ecf\u7f51\u7edc\u5fc5\u987b\u6709\u4e00\u4e9b\u5bf9\u8c61\u7684\u8868\u793a\uff0c\u624d\u80fd\u5bf9\u5b83\u4eec\u8fdb\u884c\u5206\u7c7b\u3002\u5e7f\u4e49\u5730\u8bf4\uff0c\u5377\u79ef\u7f51\u7edc\u5b66\u4e60\u5728\u56fe\u50cf\u4e0a\u626b\u63cf\u7684\u7279\u5f81\u68c0\u6d4b\u5668\uff0c\u800c\u66f4\u62bd\u8c61\u7684\u7279\u5f81\u68c0\u6d4b\u5668\u5904\u7406\u8f83\u65e9\u7684\u7279\u5f81\u68c0\u6d4b\u5668\u7684\u8f93\u51fa\u3002\u4f46\u662f\uff0c\u867d\u7136CNN\u4e2d\u7684\u7279\u5f81\u68c0\u6d4b\u5668\u5bf9\u5e94\u4e8e\u5bf9\u8c61\uff0c\u4f46\u662f\u4fe1\u606f\u662f\u6309\u4f4d\u7f6e\u7f16\u7801\u7684-\u5373\uff0c\u5173\u4e8e\u4ec0\u4e48\u5bf9\u8c61\u7684\u4fe1\u606f\u88ab\u7f16\u7801\u5728\u54ea\u4e9b\u5355\u5143\u662f\u6d3b\u52a8\u7684\uff0c\u5e76\u4e14\u5173\u4e8e\u8be5\u5bf9\u8c61\u4f4d\u7f6e\u7684\u4fe1\u606f\u4e5f\u88ab\u7279\u5f81\u5730\u56fe\u4e2d\u8be5\u5355\u5143\u88ab\u6fc0\u6d3b\u7684\u4f4d\u7f6e\u7f16\u7801\u3002\u76f8\u53cd\uff0c\u201c\u901f\u7387\u7f16\u7801\u201d\u795e\u7ecf\u5143\u5c06\u53ea\u7528\u4f4d\u7f6e\u7f16\u7801\u5bf9\u8c61\u8eab\u4efd\uff0c\u5e76\u901a\u8fc7\u6570\u5b57\u5411\u91cf\u8868\u793a\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u5982\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u8981\u4ece\u4f4d\u7f6e\u7684\u201c\u4f4d\u7f6e\u7f16\u7801\u201d\u8868\u793a\u79fb\u52a8\u5230\u201c\u901f\u7387\u7f16\u7801\u201d\u8868\u793a\uff0c\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u8de8\u6fc0\u6d3b\u56fe\u7684\u7a7a\u95f4\u7ef4\u5ea6\u83b7\u53d6Arg-max\u3002\n\u56e0\u6b64\uff0c\u901a\u8fc7\u663e\u5f0f\u5730\u8868\u793a\u5bf9\u8c61\uff0c\u6211\u4eec\u7684\u610f\u601d\u662f\u62e5\u6709\u4e00\u4e2a\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u53ef\u4ee5\u653e\u7f6e\u4ee3\u7801\u5bf9\u8c61\u6807\u8bc6\uff0c\u4f46\u662f\u901f\u7387\u4ee3\u7801\u53ef\u4ee5\u653e\u7f6e\u5176\u4ed6\u4fe1\u606f\uff0c\u5982\u5bf9\u8c61\u4f4d\u7f6e\u3001\u65b9\u5411\u3001\u989c\u8272\u7b49\u7b49\u3002\u8fd8\u6709\u5176\u4ed6\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u6a21\u578b\u3002\u5178\u578b\u7684\u4f8b\u5b50\u5305\u62ec\u51fa\u5e2d\u3001\u63a8\u65ad\u3001\u91cd\u590d\u548c\u83ab\u5948\uff0c\u5b83\u4eec\u8868\u793a\u56fa\u5b9a\u6570\u91cf\u7684\u53ef\u4ea4\u6362\u201c\u5bf9\u8c61\u69fd\u201d1\u4e2d\u7684\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u53c2\u6570\u3002\u9664\u4e86\u901f\u7387\u7f16\u7801\u4fe1\u606f\u4e4b\u5916\uff0c\u5c01\u88c5\u6280\u672f\u6355\u6349\u7ec4\u5408\u6027\u7684\u6982\u5ff5-\u5373\uff0c\u66f4\u590d\u6742\u7684\u5bf9\u8c61\u7531\u66f4\u7b80\u5355\u7684\u5bf9\u8c61\u7684\u51e0\u4f55\u6392\u5217\u7ec4\u6210\u3002\u50cfAir\u548cMonet\u8fd9\u6837\u7684\u6a21\u578b\u6ca1\u6709\u8fd9\u4e2a\u529f\u80fd-\u5b83\u4eec\u76f4\u63a5\u4ece\u50cf\u7d20\u6620\u5c04\u5230\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u7528\u66f4\u7b80\u5355\u7684\u5bf9\u8c61\u6784\u5efa\u5bf9\u8c61\u3002\n\u4ece\u4e00\u7ec4\u66f4\u7b80\u5355\u7684\u7ec4\u4ef6\u4e2d\u5efa\u9020\u7269\u4f53\u7684\u753b\u9762\u4e0e\u4e0a\u56fe\u4e2d\u7684\u51e0\u4f55\u56fe\u5f62\u7684\u5fc3\u7406\u5b66\u6982\u5ff5\u76f8\u4f3c(\u5f88\u53ef\u80fd\u6700\u521d\u76f4\u63a5\u53d7\u5230\u4e86\u8fd9\u79cd\u6982\u5ff5\u7684\u542f\u53d1)\uff0c\u5176\u60f3\u6cd5\u662f\u5927\u8111\u53ef\u4ee5\u8bc6\u522b\u4e00\u7ec4\u5728\u5404\u79cd\u65b9\u5411\u4e0a\u90fd\u53ef\u4ee5\u8bc6\u522b\u7684\u7b80\u5355\u7269\u4f53(\u5de6\u4fa7\u7684\u51e0\u4f55\u56fe\u5f62)\uff0c\u800c\u7269\u4f53\u662f\u901a\u8fc7\u8bc6\u522b\u8fd9\u4e9b\u5f62\u72b6\u7684\u6392\u5217\u6765\u8bc6\u522b\u7684\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u7684\u6a21\u578b\u4e2d\u6709\u4ee3\u8868\u5b9e\u4f8b\u5316\u53c2\u6570\u7684\u201c\u69fd\u201d\uff0c\u6bd4\u5982\u5de6\u8fb9\u5bf9\u8c61\u7684\u59ff\u52bf\u3001\u53d8\u5f62\u548c\u5b58\u5728\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e\u8fd9\u4e9b\u5b9e\u4f8b\u5316\u53c2\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\u6765\u8bc6\u522b\u53f3\u8fb9\u7684\u5bf9\u8c61\u3002\u5728\u9ad8\u7ea7\u672f\u8bed\u4e2d\uff0c\u7c7b\u4f3c\u4e8e\u201c\u5f53\u5bf9\u8c615\u548c\u5bf9\u8c613\u5b58\u5728\u65f6\uff0c\u676f\u5b50\u5c31\u5b58\u5728\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u5b9e\u4f8b\u5316\u53c2\u6570\u548c\u76f8\u4e92\u4e4b\u95f4\u7684\u5173\u7cfb\u201d\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002\u6211\u6ca1\u6709\u8d44\u683c\u8bc4\u8bba\u8fd9\u4e00\u7406\u8bba\u5728\u751f\u7269\u5b66\u4e0a\u7684\u5408\u7406\u6027\uff0c\u4f46\u5176\u60f3\u6cd5\u662f\uff0c\u4e0e\u6b63\u5e38CNN\u4e2d\u7684\u7279\u5f81\u68c0\u6d4b\u5668\u76f8\u6bd4\uff0c\u9ad8\u7ea7\u7f16\u7801\u8868\u793a\u53ef\u80fd\u8981\u9ad8\u6548\u5f97\u591a\u3002\n\u4e3a\u4e86\u66f4\u5177\u4f53\u5730\u8bf4\u660e\u6211\u4eec\u671f\u671b\u627e\u5230\u4ec0\u4e48\u5173\u7cfb\uff0c\u6211\u4eec\u9700\u8981\u7a0d\u5fae\u8c08\u4e00\u4e0b\u59ff\u52bf\u3002\u6211\u4eec\u7279\u522b\u60f3\u7528\u5c01\u88c5\u7f51\u7edc\u6355\u83b7\u7684\u8f83\u4f4e\u7ea7\u522b\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u53c2\u6570\u662f\u4eff\u5c04\u59ff\u52bf\u3002\u6211\u6240\u8bf4\u7684\u59ff\u52bf\u7684\u610f\u601d\u662f\uff0c\u4e3a\u4e86\u8868\u793a\u4e00\u4e2a\u7269\u4f53\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4ece\u67d0\u4e2a\u7279\u5b9a\u53c2\u8003\u4f4d\u7f6e\u7684\u53d8\u6362\u6765\u63cf\u8ff0\u5b83\u3002\u6240\u6709\u7684\u4f4d\u7f6e\u5750\u6807\u5b9e\u9645\u4e0a\u53ea\u662f\u63cf\u8ff0\u53d8\u6362-\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u63cf\u8ff0\u76f8\u5bf9\u4e8e\u7ed9\u5b9a\u5750\u6807\u7684\u4efb\u610f\u53c2\u8003\u70b9(\u539f\u70b9)\u5230\u8fbe\u7279\u6b8a\u4f4d\u7f6e\u7684\u5e73\u79fb\u3002\u4eff\u5c04\u59ff\u6001\u662f\u53c2\u8003\u5750\u6807\u7cfb\u7684\u4eff\u5c04\u53d8\u6362\uff0c\u5728\u4e8c\u7ef4\u4e2d\u67096\u4e2a\u81ea\u7531\u5ea6\u3002\n\u4eff\u5c04\u53d8\u6362\u5305\u62ec\u65cb\u8f6c\u3001\u7f29\u653e\u3001\u5e73\u79fb\u548c\u526a\u5207\u3002\u8fd8\u6709\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61\u53d8\u6362\u4e0d\u80fd\u7528\u4eff\u5c04\u53d8\u6362\u6765\u8868\u793a\uff1a\u53d8\u5f62\u3001\u989c\u8272\u548c\u7eb9\u7406\u7684\u53d8\u5316\u7b49\u7b49\u3002\u5f53\u7136\uff0c\u6211\u4eec\u5bf9\u4e8e\u4e24\u4e2a\u5bf9\u8c61\u662f\u201c\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u901a\u8fc7\u53d8\u6362\u76f8\u5173\u201d\u548c\u201c\u4e24\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u201d\u7684\u6982\u5ff5\u53d6\u51b3\u4e8e\u4ec0\u4e48\u662f\u201c\u4eff\u5c04\u53d8\u6362\u201d\u3002\u5f53\u4e24\u4e2a\u5bf9\u8c61\u662f\u201c\u76f8\u540c\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u53d8\u6362\u8054\u7cfb\u5728\u4e00\u8d77\u201d\u548c\u201c\u4e24\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u201d\u65f6\uff0c\u6211\u4eec\u7684\u6982\u5ff5\u53d6\u51b3\u4e8e\n\u6211\u4eec\u53ef\u80fd\u5bf9\u6b64\u611f\u5230\u5174\u594b\u7684\u539f\u56e0\u662f\uff0c\u6211\u4eec\u6709\u4e00\u79cd\u65e2\u4e0d\u968f\u4f4d\u7f6e\u53d8\u5316\u53c8\u7ebf\u6027\u7684\u5173\u7cfb\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6211\u4eec\u80fd\u6b63\u786e\u5730\u6355\u6349\u5230\u5b83\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6709\u5947\u5999\u7684\u6982\u62ec\uff1b\u5982\u679c\u6211\u4eec\u80fd\u591f\u5b66\u4e60\u63cf\u8ff0\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5bf9\u8c61\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u73b0\u5728\u4e5f\u77e5\u9053\u5982\u4f55\u5728\u4efb\u4f55\u4eff\u5c04\u4f4d\u7f6e\u4e0a\u63cf\u8ff0\u5b83\uff01\u5728\u5b9e\u8df5\u4e2d\uff0c\u5c06\u5229\u7528\u8fd9\u4e00\u76f4\u89c9\u7684\u6a21\u578b\u5f62\u5f0f\u5316\u88ab\u8bc1\u660e\u662f\u76f8\u5f53\u5177\u6709\u6311\u6218\u6027\u7684\uff0c\u4f46\u73b0\u5728\u6211\u4eec\u63cf\u8ff0\u4e00\u4e0b\u6211\u4eec\u8bd5\u56fe\u8fd9\u6837\u505a\u7684\u5c1d\u8bd5\u3002\n\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4e00\u8282\u4e2d\u753b\u7684\u5173\u4e8e\u5bf9\u8c61\u53ca\u5176\u5173\u7cfb\u7684\u56fe\u7247\u6709\u4e00\u79cd\u751f\u6210\u6027\u7684\u5473\u9053-\u4e00\u65e6\u6211\u4eec\u77e5\u9053\u4e86\u9876\u7ea7\u5bf9\u8c61\u7684\u59ff\u52bf\u4ee5\u53ca\u5b83\u662f\u5426\u5b58\u5728\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5982\u4f55\u5b89\u6392\u7ec4\u6210\u5b83\u7684\u6240\u6709\u4f4e\u7ea7\u5bf9\u8c61\u3002\u8fd9\u4e9b\u5efa\u8bae\u628a\u8fd9\u5199\u6210\u4e00\u4e2a\u751f\u6210\u6a21\u578b\uff0c\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u7528\u7ed9\u5b9a\u7684\u7236\u6bcd\u59ff\u52bf\u4e0a\u7684\u513f\u7ae5\u59ff\u52bf\u4e0a\u7684\u6761\u4ef6\u5206\u5e03\u6765\u63cf\u8ff0\u8be5\u6a21\u578b(\u5bf9\u4e8e\u5728\u573a\u7b49\u60c5\u51b5\u4e5f\u662f\u5982\u6b64)\u3002\u6709\u8da3\u7684\u662f\uff0c\u5927\u591a\u6570\u6211\u89c9\u5f97\u6700\u53d7\u5173\u6ce8\u7684\u80f6\u56ca\u8bba\u6587\uff0c\u4e5f\u5c31\u662f\u90a3\u4e9b\u5efa\u7acb\u5728Sabour\u7b49\u4eba\u7684\u52a8\u6001\u8def\u7531\u8bba\u6587\u4e0a\u7684\u8bba\u6587\uff0c\u90fd\u662f\u6709\u9274\u522b\u529b\u7684\uff0c\u57fa\u4e8e\u8bd5\u56fe\u5c06\u805a\u7c7b\u7b97\u6cd5\u4f5c\u4e3a\u4e00\u79cd\u65b0\u9896\u7684\u3001\u4e0d\u5bfb\u5e38\u7684\u6fc0\u6d3b\u51fd\u6570\u3002\u5e0c\u671b\u5728\u6211\u4eec\u8fdb\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u770b\u5230\u60a8\u5982\u4f55\u4ece\u751f\u6210\u6027\u7684\u89c2\u70b9\u51fa\u53d1\u6765\u5b9e\u73b0\u8fd9\u79cd\u805a\u7c7b\u7b97\u6cd5\u3002\n\u8fd9\u4e2a\u751f\u6210\u6027\u6a21\u578b\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u5462\uff1f\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e9b\u7b26\u53f7\u53ef\u80fd\u4f1a\u6709\u5e2e\u52a9\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u7ec4\u9ad8\u7ea7\u5bf9\u8c61(\u7531\u7d22\u5f15)\u548c\u4e00\u7ec4\u7b80\u5355\u5bf9\u8c61(\u7531\u7d22\u5f15)\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u60f3\u8c61\u8fd9\u4e9b\u5c31\u662f\u524d\u9762\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u7684JON\u56fe\u4e2d\u7684\u5bf9\u8c61-\u5de6\u8fb9\u7684\u7b80\u5355\u5bf9\u8c61\u7531\u7d22\u5f15\uff0c\u53f3\u8fb9\u7684\u590d\u6742\u5bf9\u8c61\u7531\u7d22\u5f15\u3002\u6839\u636e\u56fe\u5f62\u6a21\u578b\u4e2d\u7684\u672f\u8bed\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u590d\u6742\u5bf9\u8c61\u63cf\u8ff0\u4e3a\u201c\u7236\u5bf9\u8c61\u201d\uff0c\u5c06\u7ec4\u6210\u5b83\u4eec\u7684\u7b80\u5355\u5bf9\u8c61\u63cf\u8ff0\u4e3a\u8be5\u7236\u5bf9\u8c61\u7684\u201c\u5b50\u5bf9\u8c61\u201d\u3002\n\u6211\u4eec\u77e5\u9053\u6211\u4eec\u5e0c\u671b\u9ad8\u7ea7\u5bf9\u8c61\u6709\u4e00\u4e2a\u59ff\u52bf(\u5bf9\u4e8e\u7236\u5bf9\u8c61\uff0c\u5bf9\u4e8e\u54ea\u4e2a\u7236\u5bf9\u8c61)\u3002\u6211\u4eec\u53ef\u80fd\u8fd8\u9700\u8981\u5305\u542bavariable\uff0c\u5b83\u544a\u8bc9\u6211\u4eec\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u662f\u5426\u5b58\u5728-\u8ba9\u6211\u4eec\u79f0\u5176\u4e3aAvariable\u3002(\u5982\u679c\u5c06\u5176\u79f0\u4e3a\u201c\u201d\u8868\u793a\u5b58\u5728\uff0c\u90a3\u4f1a\u5f88\u597d\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u6982\u7387\u548c\u7236\u6bcd\u4e5f\u662f\u4ee5p\u5f00\u5934\u7684)\u3002\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\uff0c\u5f53\u5bf9\u4e00\u4e2a\u573a\u666f\u8fdb\u884c\u91c7\u6837\u65f6\uff0c\u6211\u4eec\u4ece\u67d0\u4e2a\u4efb\u610f\u7684\u5148\u9a8c\u5206\u5e03\u4e2d\u968f\u673a\u51b3\u5b9a\u6211\u4eec\u7684\u9ad8\u7ea7\u5bf9\u8c61\u7684\u8fd9\u4e9b\u5c5e\u6027--\u4f8b\u5982\uff0c\n\u6ce8\u610f\uff0c\u6211\u4eec\u753b\u7684\u662f\u4ee5\u5355\u4f4d\u77e9\u9635\u4e3a\u4e2d\u5fc3\u7684\u5206\u5e03\uff0c\u800c\u4e0d\u662f\u96f6-\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u201c\u9ed8\u8ba4\u201d\u4f4d\u7f6e\u662f\u5bf9\u8c61\u7684\u89c4\u8303\u65b9\u5411\u3002\u662f\u8868\u793a\u5bf9\u8c61\u59ff\u52bf\u7684\u4eff\u5c04\u77e9\u9635\u30025\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u524d\u63d0\uff0c\u5305\u62ec\u7236\u5bf9\u8c61\u4e4b\u95f4\u6216\u7c7b\u4f3c\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u4f46\u8fd9\u5728\u6982\u5ff5\u4e0a\u6682\u65f6\u53ef\u4ee5\u4e86\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5982\u4f55\u786e\u5b9a\u5b69\u5b50\u4eec\u7684\u59ff\u52bf\u5462\uff1f\u5f53\u7136\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053\u7269\u4f53\u5c5e\u4e8e\u7236\u6bcd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u7684\u59ff\u52bf\u5e94\u8be5\u4ee5\u76f8\u5e94\u7684\u76f8\u5bf9\u59ff\u52bf\u8f6c\u6362\u6210\u7684\u7236\u6bcd\u59ff\u52bf\u4e3a\u4e2d\u5fc3\uff0c\u8fd9\u662f\u6211\u4eec\u524d\u9762\u7684\u8bba\u8bc1\u3002\u4f46\u662f\u6211\u4eec\u5982\u4f55\u51b3\u5b9a\u4e00\u4e2a\u7b80\u5355\u7684\u7269\u4f53\u5c5e\u4e8e\u54ea\u4e2a\u7236\u6bcd\u5462\uff1f\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u5728\u6a21\u578b\u4e2d\u8bbe\u7f6e\u56fa\u5b9a\u6570\u91cf\u7684\u5bf9\u8c61\u201c\u69fd\u201d\uff0c\u5e76\u8ba9\u6bcf\u4e2a\u5bf9\u8c61\u9009\u62e9\u5b83\u6240\u5c5e\u7684\u7236\u9879\u3002\u6216\u8bb8\u53ef\u4ee5\u5141\u8bb8\u5b50\u9879\u6216\u7236\u9879\u5728\u540c\u4e00\u56fe\u50cf\u4e2d\u91cd\u590d\u591a\u6b21\uff0c\u4f46\u8fd9\u4f1a\u4f7f\u4e8b\u60c5\u53d8\u5f97\u975e\u5e38\u590d\u6742\u3002\u5bf9\u4e8e\u56fa\u5b9a\u6570\u91cf\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u7b80\u5355\u7684\u5bf9\u8c61\u4e00\u4e2a\u7f16\u7801\u7684\u9009\u62e9\u53d8\u91cf\uff1b\u4e00\u4e2a\u53ef\u4ee5\u53d6\u503c\u7684\u5206\u7c7b\u53d8\u91cf\u3002\u663e\u7136\uff0c\u7b80\u5355\u5bf9\u8c61\u53ea\u80fd\u662f\u5b9e\u9645\u5b58\u5728\u7684\u7236\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u4e00\u4e9b\u989d\u5916\u7684\u53c2\u6570\u6765\u8868\u793a\u7236\u5bf9\u8c61\u89e3\u91ca\u8be5\u5b50\u5bf9\u8c61\u7684\u5148\u9a8c\u6982\u7387\u3002\n\u4e00\u65e6\u6211\u4eec\u77e5\u9053\u54ea\u4e2a\u590d\u6742\u5bf9\u8c61\u5bf9\u7b80\u5355\u5bf9\u8c61\u8d1f\u8d23\uff0c\u5b83\u7684\u59ff\u52bf\u5c31\u5e94\u8be5\u4ee5\u7236\u5bf9\u8c61\u7684\u59ff\u52bf\u4e3a\u4e2d\u5fc3\uff0c\u901a\u8fc7\u76f8\u5e94\u7684\u7236\u5b50\u76f8\u5bf9\u59ff\u52bf\u8fdb\u884c\u8f6c\u6362\uff1b\n\u6211\u4eec\u8fd8\u9700\u8981\u628a\u5206\u5e03\u653e\u5728\u5b83\u7684\u5b58\u5728\u4e4b\u4e0a\u3002\u4eb2\u548c\u529b\u53c2\u6570\u5728\u8fd9\u91cc\u53ef\u4ee5\u8d77\u5230\u53cc\u91cd\u4f5c\u7528-\u3002\n\u8fd9\u4e2a\u7b80\u5355\u7684\u8349\u56fe\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u6709\u70b9\u50cf\u9ad8\u65af\u6df7\u5408\u7684\u6a21\u578b\uff0c\u7236\u6bcd\u626e\u6f14\u805a\u7c7b\u5747\u503c\u7684\u89d2\u8272\uff0c\u5b69\u5b50\u626e\u6f14\u70b9\u7684\u89d2\u8272\uff0c\u53ea\u662f\u6bcf\u4e2a\u70b9\u6709\u5355\u72ec\u7684\u53d8\u6362\u53c2\u6570\u3002\u8fd9\u4e5f\u662f(\u67d0\u79cd\u7a0b\u5ea6\u4e0a)\u5728EMrouting\u7684\u80f6\u56ca\u8bba\u6587\u4e2d\u4f7f\u7528\u7684\u4e00\u4e2a\u6a21\u578b\uff0c\u5c3d\u7ba1\u5728\u90a3\u7bc7\u8bba\u6587\u4e2d\u6ca1\u6709\u660e\u786e\u5730\u5199\u51fa\u6765\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u63a8\u5bfcEM\u8fc7\u7a0b\uff0c\u63a8\u5bfc\u51fa\u4ee5\u5b69\u5b50\u7684\u59ff\u6001\u548c\u5b58\u5728\u4e3a\u6761\u4ef6\u7684\u7236\u6bcd\u59ff\u6001\u548c\u5b58\u5728\u7684\u6700\u5927\u4f3c\u7136\u89e3\uff0c\u5c31\u53ef\u4ee5\u4ece\u8be5\u6a21\u578b\u4e2d\u7075\u6d3b\u5730\u63a8\u5bfc\u51fa\u4e0e\u672c\u6587\u63d0\u51fa\u7684EM\u8def\u7531\u7b97\u6cd5\u7c7b\u4f3c\u7684\u7b97\u6cd5\u3002\u5e7f\u4e49\u5730\u8bf4\uff0cEM\u5e03\u7ebf\u8bba\u6587\u4f7f\u7528\u8fd9\u4e2a\u8fc7\u7a0b\u4f5c\u4e3a\u5c42\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\uff0c\u4f46\u8fd9\u5e76\u4e0d\u5bf9\u5e94\u4e8e\u4efb\u4f55\u5168\u5c40\u751f\u6210\u6a21\u578b\u3002\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u6b64\u6a21\u578b\u6269\u5c55\u5230\u5bf9\u8c61\u7684\u987a\u5e8f\u5c42\u6b21\u7ed3\u6784\uff0c\u7b2c\u4e00\u7ea7\u5bf9\u8c61\u7531\u7b80\u5355\u5bf9\u8c61\u7ec4\u6210\uff0c\u7b2c\u4e8c\u7ea7\u5bf9\u8c61\u7531\u7b2c\u4e00\u7ea7\u5bf9\u8c61\u7ec4\u6210\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u76f8\u5f53\u660e\u663e\u7684\u95ee\u9898\u662f\uff0c\u6211\u4eec\u5f88\u5c11\u770b\u5230\u7269\u4f53\u7684\u76f4\u63a5\u59ff\u52bf\u4f5c\u4e3a\u8f93\u5165-\u76f8\u53cd\uff0c\u6211\u4eec\u770b\u5230\u7684\u662f\u4e00\u4e2a\u7528\u50cf\u7d20\u6570\u7ec4\u8868\u793a\u7684\u573a\u666f\u3002\u6240\u4ee5\u6211\u4eec\u7684\u6a21\u578b\u9700\u8981\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8fde\u63a5\u5230\u50cf\u7d20\u7a7a\u95f4\uff0c\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u5bf9\u5b83\u505a\u4efb\u4f55\u4e8b\u60c5\u3002\n\u5728\u8fd9\u91cc\uff0c\u56fe\u7247\u53d8\u5f97\u6709\u70b9\u96be\u770b\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u8ba8\u8bba\u4e86\u51e0\u4e2a\u95ee\u9898-\u9996\u5148\uff0c\u6211\u4eec\u5e0c\u671b\u5f3a\u5236\u6a21\u578b\u5c06\u59ff\u52bf\u548c\u5916\u89c2\u7684\u5176\u4ed6\u65b9\u9762\u5206\u5f00\uff0c\u4f46\u81f3\u5c11\u5bf9\u4e8e\u6807\u51c6\u7684\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u6765\u8bf4\uff0c\u5f88\u96be\u6b63\u786e\u63a8\u65ad\u59ff\u52bf6\u3002\u5176\u6b21\uff0cIfour\u6a21\u578b\u662f\u7075\u6d3b\u7684\uff0c\u7136\u540e\u6211\u4eec\u5f15\u5165\u4e86\u4f7f\u7528\u59ff\u52bf\u89e3\u91ca\u53d8\u5316\u548c\u4f7f\u7528\u5176\u4f59\u6a21\u578b\u6f5c\u5728\u7a7a\u95f4\u4e4b\u95f4\u7684\u53ef\u8bc6\u522b\u6027\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u7ed9\u6700\u4f4e\u7ea7\u522b\u7684\u5bf9\u8c61\u4e00\u4e2aVAE\u6837\u5f0f\u8bbe\u7f6e\uff0c\u8fd9\u6837\u4ed6\u4eec\u65e2\u6709\u59ff\u52bf\u53d8\u91cf\uff0c\u53c8\u6709\u6f5c\u5728\u7684\u5916\u89c2\u4ee3\u7801\uff0c\u90a3\u4e48\u6a21\u578b\u53ef\u80fd\u4f1a\u5b66\u4f1a\u603b\u662f\u5c06\u59ff\u52bf\u8bbe\u7f6e\u4e3a\u4efb\u610f\u503c\uff0c\u5e76\u7528\u6f5c\u5728\u4ee3\u7801\u89e3\u91ca\u6240\u6709\u7684\u89c6\u89c9\u53d8\u5316\u3002\u901a\u8fc7\u8db3\u591f\u4ed4\u7ec6\u7684\u8bbe\u8ba1\u6216\u8bb8\u53ef\u4ee5\u7ed5\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u5728\u63a2\u7d22\u8fd9\u79cd\u6a21\u578b\u65f6\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u7b80\u5355\u5730\u4f7f\u6a21\u677f\u6a21\u578b\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002\u6700\u7b80\u5355\u53ef\u80fd\u7684\u505a\u6cd5\u662f\u5c06\u6bcf\u4e2a\u6700\u4f4e\u7ea7\u522b\u7684\u201c\u90e8\u5206\u201d\u4e0e\u4e00\u4e2a\u5c0f\u7684\u3001\u56fa\u5b9a\u7684\u56fe\u50cf\u6a21\u677f\u76f8\u5173\u8054\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6a21\u578b\u88ab\u8feb\u4f7f\u7528\u59ff\u6001\u53d8\u91cf\u6765\u4fee\u6539\u90e8\u4ef6\u7684\u5916\u89c2\u3002\u4e3a\u4e86\u7ed8\u5236\u56fe\u50cf\uff0c\u6211\u4eec\u6839\u636e\u80f6\u56ca\u7684\u59ff\u6001\u53d8\u91cf\u5bf9\u6bcf\u4e2a\u9762\u7247\u8fdb\u884c\u53d8\u6362\uff0c\u5e76\u4f7f\u7528Alpha\u5408\u6210\u5c06\u5b83\u4eec\u5408\u6210\u4e3a\u6700\u7ec8\u56fe\u50cf(\u5982\u679c\u9762\u7247\u7684Presence\u53d8\u91cf\u4e3a\u5f00\u7684\u8bdd)\u3002\n\u518d\u8bf4\u4e00\u6b21\uff0c\u8fd9\u4e2a\u6a21\u578b\u662f\u975e\u5e38\u6709\u9650\u5236\u6027\u7684\uff0c\u4e0d\u592a\u53ef\u80fd\u771f\u6b63\u6269\u5c55\u5230\u73b0\u5b9e\u7684\u6570\u636e\u3002\u7136\u800c\uff0c\u5373\u4f7f\u8fd9\u6837\uff0c\u6211\u4eec\u4e5f\u53d1\u73b0\u8fd9\u79cd\u6a21\u5f0f\u7684\u8fd0\u4f5c\u65b9\u5f0f\u5b58\u5728\u4e00\u4e9b\u7f3a\u9677\u3002\n\u4f46\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u8fd9\u81f3\u5c11\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u4ee5\u4f7f\u7528\u7684\u6a21\u578b\u3002\u4f7f\u7528\u6700\u4f4e\u7ea7\u522b\u5bf9\u8c61\u7684\u6a21\u677f\u6a21\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u5199\u4e0b\u6574\u4e2a\u6a21\u578b\u7684\u8054\u5408\u6982\u7387\u3002\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u8054\u5408\u6982\u7387\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u4e2a\u53d8\u5206\u4e0b\u9650\uff0c\u5e76\u4ee5\u6b64\u4e3a\u76ee\u6807\u6765\u8bad\u7ec3\u4e00\u4e2a\u4e0d\u5bf9\u79f0\u53c2\u8003\u7f51\u7edc\uff0c\u5b83\u5c06\u7ed9\u6211\u4eec\u5728\u4ee5\u56fe\u50cf\u4e3a\u6761\u4ef6\u7684\u6f5c\u53d8\u91cf\u4e0a\u7684\u540e\u9a8c\u7ed3\u679c\uff0c\u7c7b\u4f3c\u4e8eVAE\u7f16\u7801\u5668\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u7528\u6982\u7387\u7f16\u7a0b\u8bed\u8a00Pyro\u5b9e\u73b0\u4e86\u6211\u4eec\u7684\u6a21\u578b\u3002\u8fd9\u91cc\u6211\u7565\u8fc7\u4e86\u51e0\u4e2a\u91cd\u8981\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u7279\u522b\u662f\u6211\u4eec\u5982\u4f55\u5904\u7406\u6a21\u578b\u4e2d\u7684\u79bb\u6563\u53d8\u91cf\u548c\u7f16\u7801\u5668\u4e2d\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u4f46\u6211\u4e0d\u60f3\u9677\u5165\u6bd4\u6211\u5df2\u7ecf\u505a\u8fc7\u7684\u66f4\u591a\u7ec6\u8282\u7684\u6ce5\u6f6d-\u5982\u679c\u60a8\u611f\u5174\u8da3\uff0c\u60a8\u53ef\u4ee5\u53c2\u8003\u672c\u6587\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u3002\n\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8bad\u7ec3\u8fd9\u79cd\u6a21\u5f0f\u3002\u5728\u6211\u4eec\u7684\u8bba\u6587\u4e2d\uff0c\u6211\u4eec\u63a2\u7d22\u4e86\u65e0\u76d1\u7763\u8bad\u7ec3\uff0c\u5c3d\u7ba1\u539f\u5219\u4e0a\u6211\u4eec\u53ef\u4ee5\u7814\u7a76\u5176\u4ed6\u8303\u5f0f\uff1b\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u613f\u610f\u5728\u9876\u7ea7\u5bf9\u8c61\u548c\u6807\u7b7e\u4e4b\u95f4\u5f3a\u5236\u663e\u5f0f\u5173\u8054\uff0c\u4f60\u53ef\u4ee5\u8ba9\u8fd9\u79cd\u4e8b\u60c5\u505a\u534a\u76d1\u7763\u5b66\u4e60\u6216\u7c7b\u4f3c\u7684\u4e8b\u60c5\u3002\n\u56de\u60f3\u4e00\u4e0b\uff0c\u80f6\u56ca\u7f51\u7edc\u7684\u76ee\u6807\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4e5f\u662f\u8bc4\u4f30\u5b83\u4eec\u7684\u5b9e\u9a8c\u6807\u51c6\uff0c\u662f\u5bf9\u672a\u89c1\u7684\u89c2\u70b9\u6216\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u770b\u4e0d\u5230\u7684\u6570\u636e\u7684\u8f6c\u6362\u7684\u6982\u62ec\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u8fd9\u80cc\u540e\u7684\u903b\u8f91\u662f\uff0c\u7ed9\u5b9a\u5b66\u4e60\u7684\u5bf9\u8c61-\u5b50\u53d8\u6362\u77e9\u9635\uff0c\u90e8\u5206\u7684\u59ff\u52bf\u548c\u5bf9\u8c61\u7684\u59ff\u52bf\u4e4b\u95f4\u7684\u5173\u7cfb\u7684\u7ebf\u6027\u5173\u7cfb\u3002\n\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5bf9\u6211\u4eec\u7684\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u5728MNIST\u548cAffnist\u4e0a\u83b7\u5f97\u4e86\u4e0e\u5176\u4ed6\u975e\u76d1\u7763\u80f6\u56ca\u65b9\u6cd5\u76f8\u5f53\u7684\u6027\u80fd\uff0cMNIST\u548cAffnist\u662f\u4e00\u4e2a\u7531MNIST\u548cAFNIST\u7ec4\u6210\u7684\u6570\u636e\u96c6\uff0c\u5176\u4e2dMNIST\u7531\u6e29\u548c\u53d8\u6362\u6269\u5c55\u800c\u6210\u3002\n\u8868\uff1a\u5bf9\u6b63\u5e38MNIST\u8bad\u7ec3\u7684\u6a21\u578b\u7684\u6f5c\u4f0f\u671f\u5206\u7c7b\u7ed3\u679c\uff0c\u663e\u793a\u4e86\u5bf9\u65cb\u8f6c\u548c\u4eff\u5c04\u53d8\u6362\u7684\u6982\u62ec(Affnist)\u3002\u8868\u793a\u4ec5\u57fa\u4e8e\u9876\u7ea7\u5b58\u5728\u7684\u5206\u7c7b\uff0c\u4e5f\u8868\u793a\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u59ff\u52bf\u3002VAE\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u57fa\u7ebf\uff0c\u7528\u4e8e\u663e\u793a\u975e\u59ff\u52bf\u611f\u77e5\u6a21\u578b\u7684\u6267\u884c\u60c5\u51b5\u3002\u4e5f\u8bb8\u4f60\u53ef\u4ee5\u901a\u8fc7\u6446\u5f04VAE\u62f1\u95e8\uff0c\u5728\u539f\u59cb\u6570\u5b57\u65b9\u9762\u505a\u5f97\u66f4\u597d\u4e00\u4e9b\u3002\u4f46\u8d8b\u52bf\u662f\u660e\u786e\u7684\u3002\n\u7136\u800c\uff0c\u4eb2\u548c\u4e3b\u4e49\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u5bf9\u65b0\u89c2\u70b9\u6cdb\u5316\u7684\u4e00\u4e2a\u5f88\u5f3a\u7684\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u5b83\u53ea\u5305\u542b\u5927\u7ea620\u5ea6\u7684\u65cb\u8f6c\uff0c\u4ee5\u53ca\u7c7b\u4f3c\u7684\u6bd4\u4f8b\u548c\u526a\u5207\u4e0a\u7684\u5fae\u5c0f\u53d8\u5316\u3002\u4f46\u539f\u5219\u4e0a\uff0c\u6211\u4eec\u8fd9\u91cc\u7684\u751f\u6210\u6a21\u578b\u53ef\u4ee5\u8868\u8fbe\u5b83\u5728\u4efb\u4f55\u4eff\u5c04\u53d8\u6362\u4e2d\u5b66\u5230\u7684\u4efb\u4f55\u5bf9\u8c61\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u8fd8\u6d4b\u8bd5\u65cb\u8f6c\u5230180\u5ea6\u7684\u539f\u56e0\u3002\u5f53\u7136\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u9884\u8ba1\u6027\u80fd\u4f1a\u6709\u6240\u4e0b\u964d\uff0c\u5c24\u5176\u662f\u56e0\u4e3a\u4e00\u4e9bMNIST\u6570\u5b57\u5728\u8fd9\u6b21\u65cb\u8f6c\u65f6\u53d8\u5f97\u5f88\u96be\u533a\u5206(6\u548c9\u662f\u5f7c\u6b64\u7684\u8fd1\u4eff\u5c04\u53d8\u6362)\u3002\n\u4f46\u6211\u4eec\u4e0d\u4e00\u5b9a\u8981\u671f\u671b\u6211\u4eec\u7684\u6a21\u578b\u5728\u8fd9\u6b21\u6d4b\u8bd5\u4e2d\u4f1a\u6cdb\u5316\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u7684\u662f\u644a\u9500(\u795e\u7ecf\u7f16\u7801\u5668)\u63a8\u7406\uff0c\u6240\u4ee5\u5373\u4f7f\u751f\u6210\u6a21\u578b\u6cdb\u5316\uff0c\u6211\u4eec\u7684\u7f16\u7801\u8fc7\u7a0b\u4e5f\u53ef\u80fd\u4e0d\u9002\u7528\u4e8e\u5206\u5e03\u5916\u7684\u6570\u636e\u3002\u6d4b\u8bd5\u8fd9\u662f\u5426\u662f\u552f\u4e00\u539f\u56e0\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u770b\u770b\u5f53\u6211\u4eec\u7528\u8fd9\u79cd\u589e\u52a0\u7684\u6570\u636e\u8bad\u7ec3\u6a21\u578b\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u5982\u679c\u80f6\u56ca\u5c06\u5e2e\u52a9\u6211\u4eec\u6982\u62ec\u4e3a\u770b\u4e0d\u89c1\u7684\u8f6c\u53d8\uff0c\u6211\u4eec\u5e94\u8be5\u671f\u5f85\u5b83\u4eec\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9\uff0c\u5982\u679c\u6211\u4eec\u5728\u8bad\u7ec3\u96c6\u4e2d\u6709\u8fd9\u4e9b\u8f6c\u53d8\u7684\u8bdd\u3002\n\u7136\u800c\uff0c\u6709\u8da3\u7684\u662f\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u771f\u6b63\u770b\u5230\u8fd9\u4e00\u70b9\u3002\u8fd9\u662f\u5f53\u6211\u4eec\u589e\u52a0\u65cb\u8f6c\u5ea6\u65f6\uff0c\u57fa\u4e8e\u589e\u52a0\u7684\u6570\u636e\u8bad\u7ec3\u7684\u6a21\u578b\u7684\u6027\u80fd\u56fe\u8868\uff1b\n\u4e3a\u4e86\u9a8c\u8bc1\u8fd9\u4e0d\u662f\u7279\u5b9a\u4e8e\u6211\u4eec\u7684\u5b9e\u9a8c\u8bbe\u7f6e\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u5806\u53e0\u5f0f\u80f6\u56ca\u81ea\u52a8\u7f16\u7801\u5668\u8fdb\u884c\u4e86\u8fd9\u4e2a\u5b9e\u9a8c\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0e\u6211\u4eec\u7684\u5de5\u4f5c\u5bc6\u5207\u76f8\u5173\u7684\u80f6\u56ca\u914d\u65b9\uff0c\u5c3d\u7ba1\u6ca1\u6709\u660e\u786e\u7684\u6982\u7387\u3002\u6211\u4eec\u770b\u5230\u4e86\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u8bc1\u636e\uff0c\u8868\u660e\u8fd9\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u6a21\u578b\u7684\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u6211\u4eec\u5177\u4f53\u5b9e\u65bd\u7684\u95ee\u9898\u3002\n\u6b63\u5982\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7684\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7684\u6a21\u578b\u548cSCAE\u770b\u8d77\u6765\u90fd\u4e0d\u662f\u7279\u522b\u597d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53ef\u89c6\u5316\u6a21\u578b\u5bf9\u65b9\u5411\u6709\u5f88\u5927\u5dee\u5f02\u7684\u56fe\u50cf\u7684\u91cd\u5efa\u6765\u611f\u53d7\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\uff1b\n\u5982\u524d\u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8be5\u6a21\u578b\u5bf9\u56fe\u50cf\u7684\u76f8\u5e94\u90e8\u5206\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u6a21\u677f\uff0c\u4f46\u5bf9\u4e8e\u65b9\u5411\u5dee\u5f02\u8f83\u5927\u7684\u56fe\u50cf\uff0c\u5b83\u5bf9\u4e0d\u540c\u7684\u90e8\u5206\u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u6a21\u677f\u30027\u4e2a\u3002\n\u5f53\u7136\uff0c\u8fd9\u6253\u7834\u4e86\u5173\u4e8e\u5bf9\u8c61\u662f\u5982\u4f55\u7ec4\u6210\u7684\u5047\u8bbe\uff0c\u8fd9\u5e94\u8be5\u9996\u5148\u5bfc\u81f4\u80f6\u56ca\u7684\u8868\u73b0\u4f18\u52bf\uff01\u6211\u4eec\u5047\u8bbe\u53d8\u6362\u7684\u5bf9\u8c61\u5c06\u88ab\u8868\u793a\u4e3a\u4e00\u7ec4\u53d8\u6362\u7684\u90e8\u5206\uff0c\u4f46\u8fd9\u4e00\u5047\u8bbe\u6ca1\u6709\u5f97\u5230\u5c0a\u91cd\uff0c\u76f8\u53cd\uff0c\u6211\u4eec\u7528\u4e0d\u540c\u7684\u90e8\u5206\u6765\u8868\u793a\u5bf9\u8c61\u7684\u53d8\u6362\u3002\u8fd9\u610f\u5473\u7740\u56fe\u50cf\u7684\u65cb\u8f6c\u7248\u672c\u4e0d\u80fd\u8868\u793a\u4e3a\u89c4\u8303\u65b9\u5411\u7684\u8f6c\u6362\u7248\u672c\u3002\n\u5728\u6211\u89e3\u51b3\u5176\u4e2d\u4e00\u4e9b\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u60f3\u5feb\u901f\u5730\u8bc1\u660e\u6211\u6240\u8ba8\u8bba\u7684\u5b9e\u9a8c\u662f\u5728\u57fa\u4e8eMNIST\u7684\u6570\u636e\u96c6\u7684\u201c\u73a9\u5177\u201d\u8bbe\u7f6e\u4e2d\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u516c\u5e73\u7684\u6279\u8bc4-MNIST\u662f\u4e00\u4e2a\u4e0d\u5207\u5b9e\u9645\u7684\u5bb9\u6613\u7684\u6570\u636e\u96c6\uff0c\u5173\u4e8e\u5b83\u7684\u7ed3\u8bba\u901a\u5e38\u4e0d\u4f1a\u8f6c\u79fb\u5230\u5176\u4ed6\u60c5\u51b5\u3002\u8bdd\u867d\u5982\u6b64\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u8c08\u8bba\u7684\u662fMNIST\u4e0a\u7684\u4e00\u4e2a\u7279\u522b\u5931\u8d25\u3002MNIST\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u96c6\uff0c\u8fd9\u901a\u5e38\u662f\u4e00\u4e9b\u542c\u8d77\u6765\u5f88\u9177\u7684\u65b9\u6cd5\u65e0\u6cd5\u63a8\u5e7f\u7684\u539f\u56e0\uff0c\u4f46\u53ef\u4ee5\u80af\u5b9a\u7684\u662f\uff0c\u5b83\u5f88\u5bb9\u6613\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u5931\u8d25\u7684\u6a21\u62df\u66f4\u52a0\u4ee4\u4eba\u62c5\u5fe7\uff01\n\u6709\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4e9b\u95ee\u9898\u6709\u51e0\u4e2a\u53ef\u80fd\u7684\u539f\u56e0\u3002\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\u53ef\u8bc6\u522b\u6027\u3002\u8fd9\u4e2a\u6a21\u578b\u5b66\u4e60\u5230\u7684\u6a21\u677f\u6709\u4e00\u4e2a\u660e\u663e\u7684\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u5f88\u591a\u6a21\u677f\u5f7c\u6b64\u975e\u5e38\u76f8\u4f3c\u3002\u8fd9\u53ef\u80fd\u662f\u5bf9\u5b58\u5728\u4e8e\u56fe\u50cf\u4e2d\u7684\u6bcf\u79cd\u5bf9\u8c61\u4e2d\u53ea\u80fd\u6709\u4e00\u79cd\u7684\u9650\u5236\u7684\u53cd\u5e94-\u5728\u8fd9\u65b9\u9762\u4e0d\u90a3\u4e48\u5929\u771f(\u4f8b\u5982\uff0c\u5141\u8bb8\u91cd\u590d\u7684\u5bf9\u8c61\u6216\u5141\u8bb8\u4e00\u5b9a\u6570\u91cf\u7684\u5bf9\u8c61\u7684\u201c\u611f\u53d7\u573a\u201d)\u53ef\u80fd\u4f1a\u6539\u5584\u8fd9\u4e00\u70b9\u3002\n.", "note_en": "Lewis Smith, 10 Jul 2020  I\u2019ve recently written a  paper on a fullyprobabilistic version of capsule networks. While trying to get thiskind of model to work, I found some interesting conceptual issueswith the ideas underlying capsule networks. Some of these issuesare a bit philosophical in nature and I haven\u2019t thought of a goodway to pin them down in an ML conference paper. But I think theycould inform research when we design new probabilistic vision models(and they are very interesting), so I\u2019ve tried to give some insightinto them here. This blog post is a companion piece to my paper: Istart by introducing capsules from a generative probabilisticinterpretation in a high level way, and then dive into a discussionabout the conceptual issues I found. I will present the paper atthe  Object Oriented Learning workshop at ICML on Friday (July 17),so do drop by if you want to chat.\n   Capsule networks aim to explicitly represent  objects and theirinstantiation parameters, like position, size, and so on. What dowe mean when we say that we want to represent objects? After all,normal neural networks must have some representation of objects inorder to be able to classify them. Broadly speaking, convolutionnetworks learn feature detectors which are scanned over the image,with more abstract feature detectors working on the outputs ofearlier ones. There is a good visual overview and investigation of this in this Distill article.But while feature detectors in CNNs correspond to objects, theinformation is  place-coded - that is, information about  whatobjects are is encoded in which units are active,and information about that object position is also place coded by the location in a feature map where that unit is activated. In contrast, a \u2018rate-coded\u2019 neuron would have only theobject identity coded by place, and would represent attributes ofthe object like the position via a numerical vector. A simple way,for instance, to move from a \u2018place coded\u2019 to a \u2018rate coded\u2019representation of position is to take the arg-max across spatialdimensions of an activation map.\n  So by explicitly representing objects, we mean having a model whichmay place code object identity, but  rate codes other informationlike object position, orientation, colour and so on. There are othermodels that instantiate objects. Representative examples include Attend, Infer,Repeatand  MONet, which representinstantiation parameters of objects in a fixed number of exchangeable\u2018object slots\u2019  1. In addition to rate coding information, capsulestry to capture a notion of compositionality - that is, of morecomplex objects being composed of geometrical arrangements of simplerobjects. Models like AIR and MOnet don\u2019t have this - they mapdirectly from pixels to objects rather than building up objects outof simpler objects.\n The picture of building objects out of a set of simpler componentsis similar to (and quite possibly originally directly inspired by)the psychological concept of  geons, which are pictured above.The idea being that the brain can recognise a set of simple objects(the geons, on the left hand side) which are recognisable in a widevariety of orientations, and objects are recognised by recognisingarrangements of these shapes. For example, if we have \u2018slots\u2019 inour model that represent the instantiation parameters, like thepose, deformation, and presence of the objects on the left, thenwe can recognise the objects on the right in terms of relationsbetween these instantiation parameters. In high level terms, somethingalong the lines of \u2018a cup is present when object 5 and object 3 arepresent, and their instantiation parameters  and  standin relation  to one another\u2019. I am very much not qualified tocomment on the biological plausibility of this theory, but the ideawould be that compared to the feature detectors in normal CNNs, arate coded representation could be far more efficient.\n To be more concrete about what relation  we expect to find, weneed to talk a bit about pose. The instantiation parameter of theselower level objects we particularly want to capture with capsulenetworks is the affine pose. What I mean by the pose is that, torepresent the position of an object, we can describe it in terms of atransformation from some particular reference position. All positionco-ordinates are really just describing transformations - the Cartesian co-ordinate system describes the translation to get to aparticular position relative to an arbitrary reference point (theorigin) which is given co-ordinates . An affine pose is an affinetransformation froma reference co-ordinate frame, and has 6 degrees of freedom in 2D.\n Affine transformations include rotations, scalings, translationsand shear. There are other kinds of transformation of objects thataren\u2019t representable by an affine transform: deformations, changesin colour and texture, etc. Our notion of when two objects are\u2018the same object, related by a transformation\u2019 and \u2018two differentobjects\u2019 depends, of course, on what transformations we consider  2.If we allow very flexible transformations, like homeomorphisms, thenwe end up with a very broad notion of what \u2018the same object\u2019is.  3\n  Instead, we want to consider a restricted set of transformations,which will give us a weaker notion of equivalence between objects,but hopefully will have other representational advantages. Inparticular, we want to consider affine, or linear, transformationsof objects. Affine transformations are a tempting choice for acouple of reasons. Firstly, they can be represented as small matriceswith 6 degrees of freedom, and the application of the transformation as matrix multiplication,which is obviously convenient. Secondly, they have a physicalmotivation; consider a picture drawn on a flat wall. If we assumethat the wall is large enough that we can\u2019t see around it, so wecan discount effects from depth or objects behind the wall, andassume that lighting is constant, then any images taken of the wallby a camera at different positions are affine transformations ofeach other.  4 So affine transformations are related to the transformationsbetween images caused by changes in  perspective. This is why wemight think that this would be a useful equivalence between objectsfor computer vision, as it gives us a bias to represent an objectseen from two different camera angles as \u2018the same\u2019.\n Another reason to consider affine transformations is that they arean attractive candidate for the \u2018relation between objects\u2019 that wewant to use to build up a description of higher level objects outof lower level ones. If an object is a geometrical arrangement ofsimple objects, then we can describe our \u2018high level\u2019 object as alist of affine poses of the simple objects it contains. So, forinstance, we might say that a cup (in an arbitrary canonical position)consists of object 5 in pose  and object  in pose .If we now allow the high level object to also have a pose-baseddescription, then the relationship between the pose of the parentand the pose of the child is linear - if the pose of the parent is, then the corresponding pose of the child is  - firsttransform the object to its position in the canonical orientation(), then transform the whole thing by the pose of the parentobject , exploiting the fact that affine transforms can becomposed by multiplying matrices.\n  The reason we might be excited about this is that we havea relationship which is both  invariant to position and  linear, whichmeans that we can have fantastic generalisation if wecan capture it correctly; if we can learn the relationships that describe an object in one position, we now know how to describeit in any affine position as well! In practice, formalising a modelthat takes advantage of this intuition turns out to be fairlychallenging, but now we describe our attempt to do so.\n  The picture we drew in the section above about objects and theirrelationships has a  generative flavour to it - once we know thepose of a top level object and whether it is present, we know howto arrange all of the low level objects that make it up. Thissuggests writing this down as a  generative model, where we describethe model in terms of conditional distributions over child posesgiven parent poses (and similarly for presences, etc.). Interestingly,most of the capsule papers that I feel got the most attention,namely those building on  the dynamic routing paper by Sabour et.al, were discriminative, andbased around trying to use a clustering algorithm as a kind ofnovel, unusual activation function. Hopefully we will see how youmight get this kind of clustering algorithm out of a generative viewpointas we go.\n What should this generative model look like? It\u2019s probably helpfulto introduce some notation here. Let\u2019s say we have a set of highlevel objects, indexed by , and a set of simple objects, indexedby . For concreteness, you can imagine that these are the objectsin the geon diagram earlier in this post - the simple objects onthe left indexed by  and the complex objects on the right by . Going with terminologyfrom graphical models, we might also describe the complex objects as the \u2018parents\u2019and the simple objects that make them up as the \u2018children\u2019 of that parent.\n We know that we want the high level objects to have a pose  ( forparent,  for which parent). We probably also need to include avariable that tells us whether a particular object is present ornot - let\u2019s call that . (It would be nice to call it \u2018\u2019for presence, but unfortunately probabilityand parent also start with p). We can imagine that, when sampling a scene, we randomlydecide these properties of our high level objects from some arbitraryprior distribution - for example,\n Notice that we draw  from a distribution centred around theidentity matrix rather than zero - this is because we want the\u2018default\u2019 position to be the canonical orientation of the object. is the  affinematrixrepresenting the pose of the object.  5 In reality we maywant to put more detailed priors, including interactions betweenthe parent objects or similar, but this will do for now conceptually.\n Now, how do we determine the poses of the children? Of course, ifwe know that object  belongs to parent , then we know thatits pose should be centred on the parents pose  transformedby the corresponding relative pose , following our argumentearlier. But how do we decide which parent a simple object belongsto? One solution is to have a fixed number of object \u2018slots\u2019 inthe model, and have each object choose which parent it belongs to.It may be possible to allow children or parents to be repeatedmultiple times in the same image, but this complicates thingssignificantly. With fixed numbers of objects, we can give eachsimple object a selection  variable encoding this; a categoricalwhich can take the values . Clearly, a simpleobject can only be part of a parent object which is actually present,and we can introduce some extra parameters  to representthe prior probability that that child is explained by that parent\n Once we know which complex object is responsible for the simple object, its pose should be centred on the pose of the parent, transformed by the corresponding parent-child relative pose;\n And we also need to put a distribution over its presence. The affinity parameter can play a double role here - .\n This simple sketch gives us a model that kind of resembles a mixtureof Gaussians, with the parents playing the roles of the clustermeans and the children playing the roles of the points, only withseparate transformation parameters for each point. It\u2019s also a modelthat was (kind of) used in the  capsule paper on EMrouting, though in thatpaper it wasn\u2019t written out explicitly. But an algorithm similarto the EM routing algorithm presented in that paper can be derivedexplicitly from this model by deriving an EM procedure to infer themaximum likelihood solution for the parent poses and presencesconditioned on the child poses and presences. In broad terms, the EM routing paper uses this procedure as a non-linearity between layers, but this doesn\u2019t correspond to any  global generative model.\n We can also easily extend this model to a sequential hierarchy ofobjects, with level one objects made out of simple objects, level2 objects made out of level 1 objects, and so on. One fairly obviousproblem, though, is the fact that we are rarely presented with thedirect poses of objects as input - instead, we see a scene representedas an array of pixels. So our model needs to be somehow connectedto the pixel space in order for us to do anything with it.\n Here, the picture becomes slightly ugly. We run a few issues here - first, we want to force the model to separate pose and otheraspects of appearance, but at least for standard network architectures,it is difficult to correctly infer the pose   6. Secondly, ifour model is flexible, then we introduce identifiability issuesbetween explaining variations using pose and using the rest of themodels latent space. For instance, if we give the lowest levelobjects a VAE style setup, so that they have both a pose variableand a latent code for appearance, then the model may learn to alwaysset the pose to an arbitrary value and explain all visual variationwith the latent code. It may be possible to get around this problemwith careful enough design, but when exploring this kind of model,a simple fix is to simply make the template model very simple. Thesimplest possible thing to do is to associate every lowest level\u2018part\u2019 with a small, fixed image template. In this case the modelis forced to use the pose variable in order to modify the appearance of parts.To draw an image, we transform every patch by the pose variable ofthat capsule and composite them into the final image (if the patch\u2019spresence variable is on) using  alpha compositing.\n  Again, this model is extremely restrictive, and unlikely to reallyscale to realistic data. However, even with this, we find some flawswith the way this kind of model operates.\n But in any case, this gives us at least a model with which to work.With a template model for the lowest level objects, we can proceedto write down a joint probability for the entire model. Once wehave a joint probability, we can derive a variational lower bound,and proceed to use that as an objective for training an amortisedinference network which will give us our posterior over the latentvariables conditioned on an image, similar to a VAE encoder. Inpractice, we implement our model with the probabilistic programminglanguage  pyro. There are a few importantimplementation details that I\u2019m skipping over here, especially howwe deal with the discrete variables in the model and the architecturein the encoder, but I don\u2019t want to get any more bogged down in thedetails than I already have done - you can consult the paper formore details if you are interested.\n There are a few ways to train this kind of model. In our paper, weexplore unsupervised training, although in principle we could lookinto other paradigms; if you were willing to enforce an explicitassociation between top level objects and labels, for example, youcould get this kind of thing to do semi supervised learning orsimilar.\n  Recall that the aim of capsule networks, and largely the experimentalcriterion on which they are evaluated, is generalisation to unseenviewpoints, or transformations of data not seen during training. Asmentioned, the logic behind this is that the linearity of therelationship between the pose of a part and the pose of an object,given the learned object-child transformation matrices.\n We can evaluate our model in this setting, and we find that we getcomparable performance to other unsupervised capsule methods on MNISTand Affnist, a dataset consisting of MNIST augmented by mildtransformations.\n  Table: Classification results on latents for models trained on normalMNIST, showing generalisation to rotations and affine transformations(Affnist).  means classification based only the top levelpresences, and  means we are also allowed to use the pose.The VAE is a simple baseline to show how a non-pose-aware modelperforms. Probably you could do a bit better in terms of raw numbersby messing with the VAE arch. but the trend is clear.\n However,  Affnist isactually not a very strong test of generalisation to novel viewpoints,as it only contains rotation up to about 20 degrees, and similarlyminor shifts in scale and shear. But in principle, our generativemodel here can express any object that it has learnt in  any affinetransformation whatsoever, which is why we also test with rotations upto 180 degrees. Of course, at this point we would expect theperformance to fall off somewhat, not least because some MNIST digitsbecome difficult to distinguish at this rotation (6\u2019s and 9\u2019s are nearaffine transformations of each other.)\n But we shouldn\u2019t necessarily expect that our model willgeneralise in this test since we are using amortised (neural encoder) inference, soeven if the generative model generalises, our encoding procedure mightnot work on out of distribution data. One way to test if this is theonly cause is to see what happens when we  train the model on thiskind of augmented data. If capsules are going to help us generalise to unseen transforms, we should expect that they should also help if we have those transformations in the training set.\n Interestingly enough, though, we don\u2019t really see this. Here is a graph ofperformance for the model trained on augmented data as we increase the degree of rotation;\n  To check that this isn\u2019t specific to our experimental setting, we alsoperform this experiment with the  Stacked Capsule Autoencoder,a capsule formulation which is closely related to our work, though notexplicitly probabilistic. We see a similar effect, which we think isevidence that this is an issue with the broader model and not ourspecific implementation of it.\n As we can see, in this situation, neither our model or the SCAE looksparticularly good.We can get a feel for what\u2019s going on by visualising the model\u2019s reconstructions for images with a large difference in orientation;\n  As before, we can see that the model uses the same templates forcorresponding parts of images which are only translated by a smallamount, but for images with large differences in orientation it uses different templates for different parts.   7\n This, of course, breaks the assumption about how objects are composedthat should lead to the representational advantage of capsules in thefirst place! We assumed that a transformed object would be representedas a set of transformed parts, but this assumption is not respected,as instead we represent a transformation of the object with differentparts. This means that the rotated version of an image cannot berepresented as a transformed version of the canonical orientation.\n  Before I address some of these issues, I want to quickly justify thefact that the experiments I\u2019m discussing are in the \u2018toy\u2019 setting ofdatasets based on MNIST. Generally speaking, this is a very faircriticism - MNIST is an unrealistically easy dataset, and conclusionsmade on it often don\u2019t transfer to other situations. Having said that,I think that this is  not one of those cases. In particular, we aretalking about a particular  failure on MNIST. MNIST being a simpledataset is often a cause of cool-sounding methods that work on itfailing to generalise, but surely the fact that it is easy mean that ademonstration of failure is even more worrying!\n With this out of the way, I think there are a few possible causes ofthese issues. The first issues is identifiability. One obvious problemwith the templates learned by this model is that lots of them arevery similar to one another. This is potentially a reaction to therestriction that there can only be one of every kind of object presentin the image - being less naive about this (for example, allowingrepeated objects or allowing a certain number of objects \u2018perreceptive field\u2019) might improve this i\n......", "posttime": "2020-07-16 10:20:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u80f6\u56ca,network,\u6a21\u578b", "title": "\u80f6\u56ca\u7f51\u7edc\u662f\u4e2a\u597d\u4e3b\u610f\u5417\uff1f\u751f\u6210\u8bba\u89c6\u89d2", "title_en": "Are capsules network a good idea? A generative perspective", "transed": 1, "url": "https://oatml.cs.ox.ac.uk/blog/2020/07/10/are-capsules-a-good-idea-a-generative-perspective.html", "via": "", "real_tags": ["\u80f6\u56ca", "network", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "9b0b498e5e5a307ea112492ede5f96f7.jpeg", "infoid": 1012208, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u6708\u91cc\uff0c\u5b66\u4e60\u7684\u9700\u8981\uff0c\u6210\u529f\u7684\u51b2\u52a8\u5c06\u4e0d\u5f97\u4e0d\u63a8\u52a8\u4f60\u517b\u6210\u4e00\u4e2a\u666e\u904d\u8ba4\u53ef\u7684\u4e60\u60ef\uff1a\u9605\u8bfb\u3002\u4f60\u4eca\u5929\u5728\u8bfb\u4ec0\u4e48\uff1f\u4f60\u4eca\u5929\u5b66\u5230\u4e86\u4ec0\u4e48\u4f60\u4ee5\u524d\u4e0d\u77e5\u9053\u7684\uff1f\n\u4eca\u5929\u7684\u6587\u7ae0\u662f\u6211\u5728\u516d\u6708\u4e0b\u534a\u6708\u8bfb\u5230\u7684\u6587\u7ae0\u7684\u7cbe\u9009\uff01\u6587\u7ae0\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u9898\uff1a\n\u8f6f\u4ef6\u7684\u53ef\u91cd\u7528\u6027\u5e76\u4e0d\u603b\u662f\u5141\u8bb8\u60a8\u5c06\u4ee3\u7801\u6279\u91cf\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u4ee3\u7801\u4e2d\u3002\u5b83\u9700\u8981\u60a8\u8fdb\u884c\u8c03\u6574\u548c\u66f4\u6539\uff0c\u624d\u80fd\u4f7f\u5176\u5728\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6309\u9884\u671f\u5de5\u4f5c\u3002\u4e0e\u5176\u8bf4\u662f\u4e50\u9ad8\u79ef\u6728\uff0c\u4e0d\u5982\u8bf4\u662f\u5668\u5b98\u79fb\u690d\u3002\u5206\u4eab\u89c2\u70b9\u7684\u51c6\u786e\u63d2\u56fe\uff01(\uff1a\nfly.io\u7684\u6587\u7ae0\u771f\u7684\u5f88\u6709\u8da3\u3002\u5b83\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u9881\u53d1\u8bc1\u4e66\uff0c\u4ee5\u53ca\u5982\u4f55\u52a0\u5bc6\u9a8c\u8bc1\u60a8\u7684\u57df\u662f\u5426\u5c5e\u4e8e\u60a8\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u901a\u8fc7ACME\u534f\u8bae\u5b9e\u73b0\u7684\u3002\u6709\u8da3\u7684\u662f\uff0c\u4ed6\u4eec\u786e\u5b9e\u63d0\u4f9b\u514d\u8d39\u7684K8s\u7ea7\u670d\u52a1\uff0c\u4ef7\u683c\u76f8\u5f53\u4e8e\u4ed8\u8d39\u670d\u52a1\u768410\u7f8e\u5143/\u6708\u3002\u90a3\u592a\u50cf\u6837\u4e86\u3002\u4ed6\u4eec\u5bfb\u6c42\u4e0e\u8c37\u6b4c\u4e91(Google Cloud)\u3001\u4e9a\u9a6c\u900a\u7f51\u7edc\u670d\u52a1(Amazon Web Service)\u548cAzure\u7b49\u66f4\u5927\u7684\u53c2\u4e0e\u8005\u7ade\u4e89\u3002\n\u5982\u679c\u60a8\u542c\u8bf4\u8fc7Ansible\uff0c\u5b83\u5bfb\u6c42\u63d0\u4f9b\u76f8\u540c\u7684\u89d2\u8272\u914d\u7f6e\u7ba1\u7406\u3002\u5982\u679cAnsible\u5177\u6709VM\u53ef\u80fd\u6ca1\u6709\u7684\u4e0d\u540c\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u662fAnsible\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u66ff\u4ee3\u65b9\u6848\u3002\n\u6211\u770b\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u770b\u5230\u9ed1\u5ba2\u65b0\u95fb\u6d41\u4ee5\u4e0d\u540c\u7684\u683c\u5f0f\u51fa\u73b0\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u5982\u679c\u6709\u4e00\u4e2a\u5237\u65b0\u6309\u94ae\u800c\u4e0d\u662f\u624b\u52a8\u5237\u65b0\u6765\u83b7\u53d6\u66f4\u65b0\uff0c\u90a3\u4f1a\u66f4\u597d\u3002\n\u8fd9\u4e2a\u7f51\u7ad9\u5141\u8bb8\u4f60\u5b66\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u6709\u5f88\u597d\u7684\u89e3\u91ca\u548c\u7ec3\u4e60\uff0c\u53ef\u4ee5\u8ba9\u4f60\u4eb2\u624b\u52a8\u624b\u3002\u505a\u4e00\u4e2a\u8fb9\u505a\u8fb9\u5b66\u7684\u5021\u5bfc\u8005\u3002\u6211\u771f\u7684\u5f88\u559c\u6b22\u5b66\u4e60\u53d8\u5f97\u66f4\u5bb9\u6613\u7684\u65b9\u5f0f\uff0c\u8ba9\u4eba\u4eec\u66f4\u5bb9\u6613\u5b66\u4f1a\u4e00\u79cd\u54ac\u5408\u5927\u5c0f\u7684\u6280\u80fd\u3002\u4e0d\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u7528\u52fa\u5b50\u5582\u4eba\uff0c\u4f46\u6211\u4eec\u4e5f\u4e0d\u5e94\u8be5\u7ed9\u5a74\u513f\u5403\u4e94\u5206\u719f\u7684\u725b\u6392\u3002\u5728\u8fdb\u5165\u66f4\u9ad8\u5c42\u6b21\u7684\u80fd\u529b\u4e4b\u524d\uff0c\u4efb\u4f55\u4e8b\u60c5\u90fd\u9700\u8981\u4e00\u4e2a\u8fdb\u6b65\u548c\u4e00\u7cfb\u5217\u5b66\u4e60\u57fa\u672c\u6280\u80fd\u7684\u6b65\u9aa4\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0c\u5b83\u4f3c\u4e4e\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u548c\u9ad8\u5ea6\u53ef\u91cd\u7528\u7684\u9759\u6001\u7ad9\u70b9\uff0c\u7528\u4e8e\u5b66\u4e60\u4e00\u9879\u65b0\u6280\u80fd\u3002\u7edd\u5bf9\u662f\u6211\u4e0b\u4e00\u4e2a\u559c\u6b22\u7684\u9879\u76ee\u7684\u53c2\u8003\u8d44\u6599\u3002\n\u6b63\u5982\u6211\u6240\u8bf4\u7684\u4f5c\u4e3a\u6587\u4ef6\u670d\u52a1\u5668\u7684Nginx\uff0cNginx\u914d\u7f6e\u59cb\u7ec8\u662f\u901a\u8fc7\u547d\u4ee4\u884c\u548cCLI\u5b8c\u6210\u7684\u3002\u8fd9\u771f\u662f\u4ee4\u4eba\u60ca\u53f9\u7684UI\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6f02\u4eae\u7684\u6309\u94ae\u6765\u542f\u7528\u6216\u7981\u7528\u60a8\u7684nginx\u8bbe\u7f6e\u6765\u8fdb\u884c\u914d\u7f6e\u3002\u5bf9\u4f60\u81ea\u5df1\u7684\u9879\u76ee\u6765\u8bf4\u771f\u7684\u5f88\u6574\u6d01\u548c\u6709\u8da3\u3002\n\u5982\u679c\u60a8\u60f3\u8981\u521b\u5efa\u4e00\u4e2aWebRTC\u5e94\u7528\u7a0b\u5e8f\uff0c\u6709\u5f88\u591a\u67b6\u6784\u9700\u8981\u8003\u8651\u3002\u4f60\u53ef\u4ee5\u5728\u6211\u4e4b\u524d\u7684\u5e16\u5b50\u91cc\u8bfb\u5230\u66f4\u591a\u5173\u4e8e\u5b83\u4eec\u7684\u4fe1\u606f\u3002\u4e3a\u4e86\u8fdb\u884c\u6269\u5c55\uff0c\u60a8\u5fc5\u987b\u5c06\u9009\u62e9\u6027\u8f6c\u53d1\u5355\u5143\u89c6\u4e3a\u5c06\u60a8\u7684\u5a92\u4f53\u4ece\u60a8\u7684\u8bbe\u5907\u4f20\u8f93\u5230\u8fdc\u7a0b\u5bf9\u7b49\u70b9\u7684\u670d\u52a1\u5668\u3002\u6211\u7684\u4fe1\u5ff5\u4e4b\u4e00\u662f\u201c\u6c38\u8fdc\u4e0d\u8981\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50\u201d\u3002\u6211\u4eec\u6b63\u5904\u4e8e\u4e00\u4e2a\u6280\u672f\u65f6\u4ee3\uff0c\u5728\u8fd9\u4e2a\u65f6\u4ee3\uff0c\u8bb8\u591a\u5de8\u5934\u90fd\u8d70\u5728\u4e86\u4f60\u4eec\u4e4b\u524d\uff0c\u5e76\u4e14\u5df2\u7ecf\u521b\u9020\u4e86\u8bb8\u591a\u53ef\u7528\u7684\u5de5\u5177\u3002\u56e0\u6b64\uff0c\u5728\u53ef\u6269\u5c55\u6027\u65b9\u9762\uff0c\u786e\u5b9e\u6ca1\u6709\u4e00\u79cd\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u60a8\u89e3\u51b3\u6240\u6709\u6280\u672f\u6311\u6218\uff0c\u4f46\u4e86\u89e3\u6210\u529f\u4e14\u53ef\u6269\u5c55\u7684\u89c6\u9891\u547c\u53eb\u5e94\u7528\u7684\u7ec4\u4ef6\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u4e3a\u5176\u5404\u81ea\u7684\u7ec4\u4ef6\u786e\u5b9a\u5408\u9002\u7684\u5de5\u5177\u3002\n\u60a8\u5fc5\u987b\u9996\u5148\u8bc6\u522b\u87ba\u4e1d\uff0c\u4ee5\u4fbf\u8ba4\u8bc6\u5230\u9700\u8981\u87ba\u4e1d\u5200\u800c\u4e0d\u662f\u9524\u5b50\u3002\n\u6709\u8da3\u7684\u662f\uff0c\u4e16\u754c\u5404\u5730\u7684\u4eba\u4eec\u4e5f\u5728\u5c1d\u8bd5\u89e3\u51b3\u540c\u6837\u7684\u95ee\u9898\uff0c\u8fd9\u4e00\u6b21\uff0c\u4ed6\u80fd\u591f\u5206\u89e3\u4ed6\u7528\u4e8e\u89c6\u9891\u547c\u53eb\u5e94\u7528\u7684\u6574\u4e2a\u6280\u672f\u5806\u6808\u3002\u6211\u60f3\u77e5\u9053\u5b83\u662f\u5426\u6709\u80fd\u529b\u5904\u7406\u5176\u53ef\u4f38\u7f29\u6027\u95ee\u9898\uff1f\u4e5f\u662f\u3002\u4e0b\u9762\u662f\u4eba\u4eec\u4eb2\u5207\u5730\u4e0e\u6211\u5206\u4eab\u7684\u5927\u91cf\u5173\u4e8e\u89c6\u9891\u901a\u8bdd\u5e94\u7528\u7684\u6587\u7ae0\uff0c\u73b0\u5728\u6211\u6709\u8d23\u4efb\u66f4\u6df1\u5165\u5730\u7814\u7a76\u8fd9\u4e2a\u8bdd\u9898\uff0c\u5e76\u5f04\u6e05\u695a\u5b83\u7684\u610f\u4e49\u3002\n\u5f53\u4f60\u53d1\u73b0\u5f53\u524d\u6280\u672f\u7684\u4f18\u52bf\u65f6\uff0c\u4f60\u4f1a\u505a\u4ec0\u4e48\uff1f\u4f60\u9009\u62e9\u6d4b\u8bd5\u65b0\u6c34\u3002\n\u5f53\u8fd9\u5b9e\u9645\u4e0a\u635f\u5bb3\u4e86\u7528\u6237\u4f53\u9a8c\u65f6\uff0c\u4f60\u4e0d\u4f1a\u60f3\u8981\u201c\u5feb\u901f\u79fb\u52a8\u548c\u7834\u574f\u4e1c\u897f\u201d\u3002\n\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8f6f\u4ef6\u5de5\u7a0b\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u5de5\u7a0b\u5b9e\u8df5(\u8fd9\u662f\u7406\u6240\u5f53\u7136\u7684)\uff0c\u6211\u4eec\u9700\u8981\u5f00\u59cb\u6784\u5efa\u5065\u58ee\u7684\u3001\u6709\u5f39\u6027\u7684\u548c\u6301\u4e45\u7684\u7cfb\u7edf\uff0c\u5e76\u505c\u6b62\u5c06\u6211\u4eec\u9047\u5230\u7684\u4efb\u4f55\u4ee3\u7801\u7247\u6bb5\u4e22\u5f03\u5230\u6211\u4eec\u7684\u9879\u76ee\u4e2d\u3002\n\u806a\u660e\u5730\u4f7f\u7528\u4ee3\u7801\u3002\u8fd9\u5305\u62ec\u627e\u5230\u7b2c\u4e00\u4e2a\u9002\u5408\u60a8\u7684\u7528\u4f8b\u7684\u5e93\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u5e76\u8fdb\u884c\u7b80\u5355\u7684\u6bd4\u8f83\uff0c\u4ee5\u4e86\u89e3\u5b83\u4eec\u5404\u81ea\u7684\u4f18\u7f3a\u70b9\uff0c\u5e76\u6743\u8861\u60a8\u7684\u9009\u62e9\u3002\n\u5076\u7136\u53d1\u73b0\u4e86\u8fd9\u4e2a\u7b80\u5355\u7684\u5c0f\u73a9\u610f\u513f-\u4e00\u4e2a\u5168\u5c3a\u5bf8\u768450\u952e\u952e\u76d8\uff0c\u6709\u4e00\u4e2a\u7070\u8272\u7684\u5c4f\u5e55\uff0c\u5728\u4efb\u4f55\u4e00\u70b9\u90fd\u53ea\u80fd\u5305\u542b6\u884c\u5355\u8bcd\u3002\u8fd9\u4e2a\u5c0f\u5de5\u5177\u662f\u4e3a\u4e86\u4e13\u6ce8\u4e8e\u4e00\u4ef6\u4e8b\u800c\u521b\u5efa\u7684-\u6253\u5b57\u3002\u5bf9\u4e8e\u90a3\u4e9b\u9700\u8981\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\u7684\u4eba\u6765\u8bf4\uff0c\u4e5f\u8bb8\u8fd9\u6837\u7684\u5c0f\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u4f60\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u9664\u4e86\u751f\u4ea7\u529b\u4e4b\u5916\uff0c\u6211\u603b\u662f\u5728\u60f3\uff0c\u90a3\u4e9b\u521a\u521a\u5f00\u59cb\u82f1\u8bed\u6559\u80b2\u7684\u5b66\u751f\u662f\u5426\u4e5f\u80fd\u4ece\u8fd9\u6837\u4e00\u4e2a\u5c0f\u73a9\u610f\u513f\u5f00\u59cb\u3002\u7b80\u5355\u660e\u4e86\uff0c\u76f4\u622a\u4e86\u5f53\u3002\u5b83\u662f\u4e00\u4e2a\u952e\u76d8\uff0c\u4f60\u6240\u80fd\u505a\u7684\u5c31\u662f\u6253\u5b57\u5e76\u7406\u89e3\u6240\u5199\u7684\u5185\u5bb9\u3002\u4f46\u662f\uff0c\u5f53\u7136\uff0c\u82f1\u8bed\u4e0d\u4ec5\u4ec5\u662f\u628a\u5355\u8bcd\u4e32\u5728\u4e00\u8d77\uff0c\u90a3\u53ea\u662f\u8bb8\u591a\u5176\u4ed6\u57fa\u672c\u6280\u80fd\u7684\u7ed3\u679c\uff0c\u6bd4\u5982\u8bed\u6cd5\u548c\u7406\u89e3\u52a8\u8bcd\u3001\u540d\u8bcd\u3001\u4ee3\u8bcd\u7b49\u3002\nMapillary\u662f\u4e00\u5bb6\u5730\u7406\u7a7a\u95f4\u516c\u53f8\uff0c\u81f4\u529b\u4e8e\u521b\u5efa\u4e00\u4e2a\u5168\u7403\u8857\u9053\u7ea7\u522b\u7684\u56fe\u50cf\u6570\u636e\u96c6\uff0c\u4e0e\u8c37\u6b4c\u8857\u666f\u76f8\u6297\u8861\u3002\u5728\u8c37\u6b4c\u3001\u82f9\u679c\u548c\u5fae\u8f6f\u7b49\u6240\u6709\u8981\u6536\u8d2d\u7684\u516c\u53f8\u4e2d\uff0cFacebook\u663e\u7136\u662f\u6536\u8d2d\u5b83\u4eec\u7684\u4eba\u3002Facebook\u5b9e\u9645\u4e0a\u5df2\u7ecf\u79ef\u6781\u53c2\u4e0e\u4e86\u5730\u56fe\u9886\u57df\uff0c\u4e3aOpenStreetMap\u8d21\u732e\u4e86\u8d85\u8fc780\u4e07\u516c\u91cc\u7684mappred\u9053\u8def\u3002\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u4f17\u7b79\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u5efa\u7acb\u4e86\u4e00\u4e2a\u5730\u56fe\u7ed8\u5236\u7a0b\u5e8f\u793e\u533a\uff0c\u8d21\u732e\u548c\u7ef4\u62a4\u6709\u5173\u9053\u8def\u3001\u5c0f\u5f84\u3001\u5496\u5561\u9986\u3001\u706b\u8f66\u7ad9\u7b49\u7684\u6570\u636e\u3002\n\u6570\u636e\u5c31\u662f\u8d44\u4ea7\u3002\u5c31\u50cf\u6240\u6709\u7684\u4e8b\u60c5\u4e00\u6837\uff0c\u4e00\u65e6\u6211\u4eec\u5f00\u59cb\u628a\u6211\u4eec\u81ea\u5df1\u7684\u8bae\u7a0b\u653e\u5728\u4eba\u4eec\u7684\u6743\u5229(\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u9690\u79c1\u6743)\u4e4b\u4e0a\uff0c\u95ee\u9898\u5c31\u5f00\u59cb\u4e86\u3002\u867d\u7136\u6709\u6761\u6b3e\u8868\u660e\u4ed6\u4eec\u4ecd\u7136\u53ef\u4ee5\u9690\u59d3\u57cb\u540d\u7684\u65b9\u5f0f\u4ece\u4f60\u90a3\u91cc\u6536\u96c6\u6570\u636e\uff0c\u4f46\u6211\u60f3\u8fd9\u79cd\u4fb5\u72af\u6743\u5229\u7684\u884c\u4e3a\u4ecd\u7136\u6709\u6548\u3002\u5728\u6280\u672f\u9886\u57df\uff0c\u5728\u5f00\u59cb\u4ece\u7528\u6237\u90a3\u91cc\u6536\u96c6\u6570\u636e\u4e4b\u524d\uff0c\u4e00\u5207\u90fd\u5f88\u8f7b\u677e\u3002\u90a3\u5c31\u662f\u4f60\u8981\u9762\u5bf9\u4e00\u573a\u5168\u65b0\u7684\u6bd4\u8d5b\u7684\u65f6\u5019\u3002\u5728\u60a8\u9996\u5148\u6536\u96c6\u5ba2\u6237\u6570\u636e\u4e4b\u524d\uff0c\u60a8\u7684\u6574\u4e2a\u67b6\u6784\u662f\u5426\u8003\u8651\u4e86\u4e00\u6574\u5957\u5b89\u5168\u63aa\u65bd\uff1f\u5c31\u50cf\u8239\u4e00\u6837\uff0c\u5728\u4f60\u628a\u8239\u653e\u5165\u6c34\u4e2d\u4e4b\u524d\uff0c\u4f60\u4e0d\u80fd\u8ba9\u8239\u7684\u540e\u90e8\u6ca1\u6709\u5efa\u9020\u6216\u5b8c\u6210\u3002\n\u603b\u662f\u559c\u6b22\u542c\u5230\u4eba\u4eec\u6216\u7ec4\u7ec7\u96c6\u4e2d\u8d44\u6e90\u6765\u88c5\u5907\u548c\u57f9\u8bad\u4e2a\u4eba\uff0c\u4ee5\u5e94\u5bf9\u6311\u6218\u3002\u521b\u529e\u4e00\u5bb6\u516c\u53f8\u7edd\u5bf9\u662f\u4e00\u6bb5\u8270\u96be\u7684\u65f6\u671f\uff0c\u6211\u4eec\u5fc5\u987b\u6536\u96c6\u5c3d\u53ef\u80fd\u591a\u7684\u6709\u610f\u4e49\u7684\u77e5\u8bc6\u548c\u6280\u80fd\uff0c\u5426\u5219\u6211\u4eec\u5c06\u9762\u4e34\u8ba9\u516c\u53f8\u5012\u95ed\u7684\u98ce\u9669\u3002\u793e\u533a\u652f\u6301\u5bf9\u6211\u4eec\u4ea4\u6d41\u7ecf\u9a8c\u4e5f\u81f3\u5173\u91cd\u8981\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u6211\u4eec\u8981\u4ece\u5f7c\u6b64\u7684\u9519\u8bef\u4e2d\u5438\u53d6\u6559\u8bad\u3002\u5982\u679c\u4f60\u60f3\u5f00\u521b\u81ea\u5df1\u7684\u4e8b\u4e1a\uff0c\u8fd9\u7edd\u5bf9\u662f\u4e00\u4e2a\u9700\u8981\u8ba4\u771f\u601d\u8003\u7684\u95ee\u9898\u3002\n\u5c31\u50cf\u767b\u4e0a\u4e00\u5ea7\u5c71\u4e00\u6837\uff0c\u5f88\u96be\u6500\u767b\uff0c\u4f46\u53ea\u8981\u4e00\u6b21\u8dcc\u5012\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u81ea\u5df1\u53c8\u91cd\u65b0\u7ad9\u5728\u4e86\u5c71\u811a\u4e0b\u3002\u6700\u4e25\u91cd\u7684\uff0c\u53d7\u4f24\u548c\u4e27\u5931\u884c\u4e3a\u80fd\u529b\u3002\n\u7535\u62a5\u4e00\u76f4\u662f\u6211\u7684\u9996\u9009\uff0c\u539f\u56e0\u6709\u5f88\u591a\uff1a\u901f\u5ea6\u5feb\uff0c\u4f7f\u7528\u65b9\u4fbf\uff0c\u591a\u8bbe\u5907\u767b\u5f55\uff0cPIN\u4fe1\u606f\u529f\u80fd\uff0c\u6e38\u620f\uff0c\u673a\u5668\u4eba\u521b\u5efa\u548c\u6e38\u620f\u7684\u5e73\u53f0\u3002\u8fd9\u4e9b\u53ea\u662f\u7ec8\u7aef\u7528\u6237\u81ea\u5df1\u4f53\u9a8c\u5230\u7684\u989d\u5916\u597d\u5904\u3002\u5b89\u5168\u548c\u79d8\u5bc6\u9891\u9053\u4e5f\u4e3a\u66f4\u673a\u5bc6\u7684\u5bf9\u8bdd\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u843d\u5165\u8be1\u8ba1\u591a\u7aef\u7684\u4eba\u624b\u4e2d\uff0c\u6240\u6709\u5f3a\u5927\u7684\u5de5\u5177\u90fd\u53ef\u80fd\u662f\u707e\u96be\u6027\u7684\u3002\u56e0\u6b64\uff0c\u6211\u603b\u662f\u5728\u60f3\uff0c\u7535\u62a5\u662f\u5982\u4f55\u89e3\u51b3\u7528\u6237\u5229\u7528\u5982\u6b64\u5f3a\u5927\u7684\u5e73\u53f0\u5b9e\u73b0\u7834\u574f\u6027\u76ee\u6807\u7684\u95ee\u9898\u7684\u3002\u76f4\u5230\u4eca\u5929\uff0c\u8fd9\u4e2a\u95ee\u9898\u4f3c\u4e4e\u90fd\u6ca1\u6709\u7b54\u6848\u3002\n\u5f53\u6211\u4eec\u60f3\u8981\u6210\u957f\u65f6\uff0c\u6211\u4eec\u5f80\u5f80\u4f1a\u9009\u62e9\u907f\u5f00\u9762\u524d\u7684\u6311\u6218\uff0c\u5bfb\u627e\u66f4\u5bb9\u6613\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u56e0\u4e3a\u6211\u4eec\u611f\u5230\u529b\u4e0d\u4ece\u5fc3\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u4f60\u60f3\u5b66\u4e00\u95e8\u8bed\u8a00\uff0c\u6bd4\u5982\u8bf4\u97e9\u8bed\uff0c\u4e0d\u77e5\u4f55\u6545\uff0c\u4f60\u8bbe\u6cd5\u5f97\u5230\u4e86\u4e00\u4efd\u5141\u8bb8\u4f60\u8bf4\u97e9\u8bed\u7684\u5de5\u4f5c\uff0c\u4f46\u4f60\u9009\u62e9\u62d2\u7edd\u4e86\u8fd9\u4efd\u5de5\u4f5c\uff0c\u56e0\u4e3a\u4f60\u5bf9\u81ea\u5df1\u7684\u8bed\u8a00\u8fd8\u6ca1\u6709\u8db3\u591f\u7684\u4fe1\u5fc3\u3002\u56e0\u6b64\uff0c\u4f60\u9009\u62e9\u6bcf\u5929\u5728\u5bb6\u542c\u64ad\u5ba2\uff0c\u76f4\u5230\u4f60\u89c9\u5f97\u81ea\u5df1\u51c6\u5907\u597d\u4e86\u3002\u4f60\u77e5\u9053\u4ec0\u4e48\u53ef\u4ee5\u5e2e\u52a9\u4f60\u628a\u97e9\u8bed\u8bf4\u5f97\u66f4\u597d\u5417\uff1f\u5728\u4e00\u4efd\u7528\u97e9\u8bed\u5de5\u4f5c\u7684\u5de5\u4f5c\u4e2d\u3002\n\u8fd9\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u8d8b\u52bf\uff0c\u56e0\u4e3a\u5982\u679c\u8fd9\u4e9b\u51b3\u5b9a\u662f\u7531\u6050\u60e7\u5f15\u5bfc\u7684\uff0c\u6211\u4eec\u5c31\u4f1a\u505a\u51fa\u4e25\u91cd\u7684\u51b3\u5b9a\u3002\u6050\u60e7\u6709\u5b83\u81ea\u5df1\u7684\u65b9\u5f0f\u6765\u64cd\u7eb5\u6211\u4eec\u53bb\u5bfb\u627e\u66ff\u4ee3\u65b9\u6848\uff0c\u5c3d\u7ba1\u5b83\u6709\u76f8\u5f53\u4e00\u90e8\u5206\u7684\u56f0\u96be\u6765\u53d6\u4ee3\u771f\u5b9e\u7684\u4e1c\u897f\u672c\u8eab\u3002\u5982\u679c\u4f60\u60f3\u6210\u957f\u548c\u6210\u529f\u5462\uff1f\u522b\u65e0\u4ed6\u6cd5\uff0c\u53ea\u6709\u4e00\u6761\u8def\uff1a\u5931\u8d25\u524d\u884c\u3002\n\u5bf9\u6ca1\u6709Facebook\u7684\u751f\u6d3b\u5f88\u6709\u6d1e\u5bdf\u529b\uff0c\u6536\u96c6\u4f60\u7684\u4e2a\u4eba\u5185\u5bb9\u5e76\u70b9\u51fb\u4ed6\u4eec\u7684\u7f51\u7ad9\u3002\u8fd9\u662f\u6211\u8fd8\u88ab\u8bf4\u670d\u53bb\u505a\u7684\u4e8b\u60c5\uff0c\u4f46\u770b\u5230\u524d\u666f\u603b\u662f\u5f88\u6709\u8da3\u7684\u3002\u5c24\u5176\u662f\u90a3\u4e9b\u4e0e\u4f60\u7684\u622a\u7136\u4e0d\u540c\u7684\u3002\u6709\u4e00\u4ef6\u4e8b\u662f\u660e\u786e\u7684\uff1a\n\u6709\u4e00\u70b9\u662f\u660e\u786e\u7684\uff1a\u4ee3\u7801\u4e0d\u662f\u4ea7\u54c1\u3002\u8be5\u4ea7\u54c1\u5305\u542b\u4e86\u5b83\u7684\u53ef\u7528\u6027\u3002\u5229\u7528\u4ea7\u54c1\u7684\u8fc7\u7a0b\u3002\u6b64\u6d41\u7a0b\u662f\u5426\u6709\u52a9\u4e8e\u4e3a\u5ba2\u6237\u8282\u7701\u6210\u672c\u548c\u56e2\u961f\uff1f\u6700\u7ec8\uff0c\u5ba2\u6237\u5c06\u4e3a\u8282\u7701\u4ed6\u4eec\u65f6\u95f4\u7684\u89e3\u51b3\u65b9\u6848\u4e70\u5355\uff0c\u800c\u4e0d\u8003\u8651\u8be5\u6280\u672f\u7684\u8d77\u6e90\u3002\n\u5982\u679c\u60a8\u60f3\u8981\u7406\u89e3\u5f00\u6e90\u53ca\u5176\u4e0e\u5546\u4e1a\u8d5a\u94b1\u6a21\u5f0f\u4e4b\u95f4\u4ee4\u4eba\u56f0\u60d1\u7684\u77db\u76fe\uff0c\u7edd\u5bf9\u503c\u5f97\u4e00\u8bfb\u3002\n\u628a\u4eba\u9001\u5165\u592a\u7a7a\u5e76\u975e\u6613\u4e8b\u3002\u4eba\u4eec\u5e38\u5e38\u60f3\u77e5\u9053\u8f6f\u4ef6\u4e2d\u6709\u591a\u5c11\u4ee3\u7801\u3002\u5c24\u5176\u662f\u90a3\u4e9b\u8ba9\u706b\u7bad\u98de\u56de\u5730\u7403\u5e76\u5782\u76f4\u7740\u9646\u7684\u3002\u8bf7\u770b\u8fd9\u91cc\u7684\u89c6\u9891\uff01\n\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u65b9\u6cd5\u5f88\u7b80\u5355\uff1a\u5197\u4f59\u3002\u4ed6\u4eec\u67093\u4e2a\u5904\u7406\u5668\uff0c\u8d1f\u8d23\u4e0b\u4e00\u6b65\u884c\u52a8\u7684\u51b3\u7b56\u3002\u5982\u679c3\u4e2a\u5904\u7406\u5668\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4e0d\u540c\u610f\u4e0b\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5219\u4e0d\u4f1a\u6267\u884c\u8be5\u64cd\u4f5c\uff0c\u5e76\u5c06\u6839\u636e\u6700\u540e\u4e00\u4e2a\u5904\u7406\u5668\u7684\u5185\u5bb9\u7ee7\u7eed\u6267\u884c\u6b63\u786e\u7684\u547d\u4ee4\u3002\n\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\u662f\u5411\u670d\u52a1\u5668\u53d1\u9001\u5982\u6b64\u5de8\u5927\u4e14\u65e0\u76ee\u7684\u7684\u8bf7\u6c42\uff0c\u4f7f\u5f97\u670d\u52a1\u5668\u4e0d\u518d\u6709\u8db3\u591f\u7684\u8d44\u6e90\u6765\u5904\u7406\u5bf9\u8be5\u670d\u52a1\u7684\u5408\u6cd5\u8bf7\u6c42\u3002\u4f8b\u5982\uff0c\u4f60\u60f3\u8bbf\u95ee\u4e9a\u9a6c\u900a\u7f51\u7ad9\uff0c\u4f46\u662f\u56e0\u4e3a\u670d\u52a1\u5668\u4e0a\u6709\u592a\u591a\u7684\u8bf7\u6c42(\u7279\u522b\u662f\u65e0\u76ee\u7684\u7684\u8bf7\u6c42)\uff0c\u5b83\u4e0d\u518d\u6709\u80fd\u529b\u5904\u7406\u4f60\u5bf9\u7f51\u9875\u7684\u8bf7\u6c42\uff0c\u5e76\u5c06\u7f51\u7ad9\u8fd4\u56de\u7ed9\u4f60\u3002\u56e0\u6b64\uff0c\u60a8\u5c06\u770b\u5230\u4e00\u4e2a\u7a7a\u767d\u9875\u9762\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u6c38\u8fdc\u663e\u793a\u7684\u52a0\u8f7d\u56fe\u6807\u3002\u5b83\u5728\u7b49\u5f85\u60a8\u7684\u8bf7\u6c42\u5f97\u5230\u670d\u52a1\u5e76\u8fd4\u56de\u7ed9\u60a8\u3002\n\u8bf4\u5230\u8fd9\u91cc\uff0c\u5f53\u7136\u6709\u8bb8\u591a\u4f53\u7cfb\u7ed3\u6784\u548c\u5b89\u5168\u63aa\u65bd\u5df2\u8bbe\u7f6e\u5230\u4f4d\uff0c\u4ee5\u907f\u514dDDoS\u3002\u5982\u679c\u60a8\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u5b89\u5168\u53ef\u9760\u3001\u7ecf\u5f97\u8d77\u8003\u9a8c\u7684\u670d\u52a1\uff0c\u8fd9\u80af\u5b9a\u662f\u4e00\u4e2a\u503c\u5f97\u6df1\u5165\u7814\u7a76\u7684\u6709\u8da3\u8bdd\u9898\u3002\n\u9884\u6d4b\u4e00\u9879\u529f\u80fd\u4ece\u6784\u601d\u5230\u751f\u4ea7\u51c6\u5907\u9700\u8981\u591a\u957f\u65f6\u95f4\u4e00\u76f4\u662f\u6240\u6709\u5f00\u53d1\u4eba\u5458\u90fd\u4f1a\u9762\u4e34\u7684\u95ee\u9898\u3002\u4f30\u8ba1\u901a\u5e38\u662f\u56f0\u96be\u7684\uff0c\u56e0\u4e3a\u4eba\u4eec\u901a\u5e38\u4e0d\u77e5\u9053\u7279\u5f81\u7684\u590d\u6742\u6027\u3002\u4eba\u4eec\u53ef\u80fd\u9762\u4e34\u7684\u6280\u672f\u6311\u6218\u3002\u8981\u514b\u670d\u8fd9\u4e9b\u4e0d\u786e\u5b9a\u6027\uff0c\u901a\u5e38\u4e00\u79cd\u65b9\u6cd5\u662f\u8003\u8651\u4e00\u4e9b\u7ecf\u5e38\u88ab\u5ffd\u89c6\u7684\u5173\u952e\u56e0\u7d20\u3002\u5176\u4e2d\u4e4b\u4e00\u662f\u7b49\u5f85\u65f6\u95f4\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5f00\u53d1\u4eba\u5458\u901a\u5e38\u4f1a\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u7b49\u5f85\u9700\u6c42\u3001\u8fed\u4ee3\u53cd\u9988\uff0c\u751a\u81f3\u8ba9\u4ed6\u4eec\u7684\u8bc4\u5ba1\u5f97\u5230\u5ba1\u67e5\u548c\u6279\u51c6\u3002\n\u5728\u60a8\u7684\u8bc4\u4f30\u4e2d\uff0c\u59cb\u7ec8\u52aa\u529b\u6210\u4e3a\u6570\u636e\u9a71\u52a8\u7684\u3002\u67e5\u770b\u6574\u4e2a\u5f00\u53d1\u5468\u671f\u7684\u56e2\u961f\u5386\u53f2\u7edf\u8ba1\u6570\u636e\u3002\u786e\u5b9a\u60a8\u7684\u5f00\u59cb\u548c\u7ed3\u675f\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u5f00\u59cb\u6d4b\u91cf\u6240\u5f00\u53d1\u7684\u6bcf\u4e2a\u529f\u80fd\u7684\u6301\u7eed\u65f6\u95f4\u3002\u5f53\u60a8\u62e5\u6709\u6bcf\u4e2a\u529f\u80fd\u7684\u5e73\u5747\u6301\u7eed\u65f6\u95f4\u65f6\uff0c\u8bf7\u4f7f\u7528\u60a8\u6700\u521d\u4f30\u8ba1\u7684\u529f\u80fd\u5929\u6570\uff0c\u5e76\u6839\u636e\u60a8\u4e86\u89e3\u7684\u529f\u80fd\u7684\u590d\u6742\u7a0b\u5ea6\u6309\u6bd4\u4f8b\u8c03\u6574\u8be5\u6570\u5b57\uff0c\u4f7f\u5176\u63a5\u8fd1\u60a8\u7684\u5e73\u5747\u5929\u6570\u3002\u8fd9\u901a\u5e38\u6709\u52a9\u4e8e\u60a8\u66f4\u597d\u5730\u4f30\u8ba1\u5b8c\u6210\u5de5\u4f5c\u6240\u9700\u7684\u65f6\u95f4\u3002\n\u5c06\u6b64\u529f\u80fd\u53d1\u5e03\u51fa\u6765\u603b\u662f\u6709\u52a9\u4e8e\u4f30\u8ba1\u60a8\u7684\u56e2\u961f\u53ef\u4ee5\u9884\u671f\u7684\u541e\u5410\u91cf\u3002\u603b\u4f53\u800c\u8a00\uff0c\u5bfb\u6c42\u505a\u51fa\u6570\u636e\u9a71\u52a8\u7684\u51b3\u7b56\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u8bf7\u5f00\u59cb\u6d4b\u91cf\u548c\u6536\u96c6\u6570\u636e\uff01\n\u7c89\u8272\u8868\u660e\uff0c\u5bf9\u4e8e\u9009\u62e9\u7559\u4efb\u7684\u9ad8\u6280\u80fd\u5de5\u4eba\u6765\u8bf4\uff0c\u94b1\u5e76\u4e0d\u662f\u4e3b\u8981\u7684\u9a71\u52a8\u529b\u3002\u800c\u662f\u4e09\u4e2a\u56e0\u7d20\u7684\u7ed3\u5408\uff1a\u81ea\u6211\u6307\u5bfc\u7684\u80fd\u529b\uff0c\u5728\u5de5\u4f5c\u4e2d\u505a\u5f97\u66f4\u597d\uff0c\u4ee5\u53ca\u5728\u52aa\u529b\u4e2d\u6709\u76ee\u6807\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e00\u65e6\u4e00\u4e2a\u4eba\u7684\u57fa\u672c\u8d22\u52a1\u9700\u6c42\u5f97\u5230\u6ee1\u8db3\uff0c\u91d1\u94b1\u4f5c\u4e3a\u8861\u91cf\u5de5\u4f5c\u6ee1\u610f\u5ea6\u7684\u6807\u51c6\u5c31\u5f00\u59cb\u53d8\u5f97\u8d8a\u6765\u8d8a\u4e0d\u91cd\u8981\uff0c\u7279\u522b\u662f\u4e0e\u76ee\u6807\u3001\u81ea\u6211\u5b8c\u5584\u548c\u81ea\u6211\u6307\u5bfc\u76f8\u6bd4\u3002\n\u8fd9\u4e9b\u5e74\u6765\u6211\u9047\u5230\u7684\u6700\u597d\u7684\u5de5\u7a0b\u5e08\u90fd\u662f\u597d\u5947\u3001\u4e00\u4e1d\u4e0d\u82df\u7684\u95ee\u9898\u89e3\u51b3\u8005\u3002\n\u5bf9\u4e8e\u4e00\u4e9b\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u8fd9\u8868\u73b0\u4e3a\u5e0c\u671b\u4f18\u5316\u73b0\u6709\u7cfb\u7edf\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\uff0c\n\u8fd8\u6709\u4e00\u4e9b\u516c\u53f8\u5728\u521b\u5efa\u81ea\u52a8\u5316\u4ea7\u54c1\u65b9\u9762\u84ec\u52c3\u53d1\u5c55-\u786e\u4fdd\u4ea7\u54c1\u7684\u65b0\u7248\u672c\u7684\u65e0\u7f1d\u63a8\u51fa\u3002\n\u5bf9\u4e8e\u7ba1\u7406\u8005\u6765\u8bf4\uff0c\u8fd9\u610f\u5473\u7740\u5efa\u7acb\u4e00\u4e2a\u6709\u5229\u4e8e\u5b66\u4e60\u548c\u81ea\u6211\u6210\u957f\u7684\u7ed3\u6784\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5b83\u610f\u5473\u7740\u5c0a\u91cd\u8f6f\u4ef6\u5de5\u7a0b\u7684\u827a\u672f\uff0c\u5141\u8bb8\u5408\u7406\u7684\u8f6f\u4ef6\u5f00\u53d1\u65f6\u95f4\u6846\u67b6\uff0c\u800c\u4e0d\u662f\u541d\u556c\u8d28\u91cf\u3002\n\u7ecf\u7406\u5bf9\u56e2\u961f\u7684\u5177\u4f53\u7406\u89e3\uff0c\u4ee5\u53ca\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u7684\u603b\u4f53\u7406\u89e3\uff0c\u624d\u662f\u771f\u6b63\u8d77\u4f5c\u7528\u7684\u56e0\u7d20\u3002\n\u8fd9\u610f\u5473\u7740\u5de5\u7a0b\u5e08\u4eec\u53ef\u4ee5\u5728\u8fd9\u91cc\u6210\u957f\u548c\u5b8c\u5584\u4ed6\u4eec\u7684\u624b\u827a\uff0c\u5728\u6ee1\u8db3\u4ed6\u4eec\u5929\u751f\u7684\u597d\u5947\u5fc3\u7684\u540c\u65f6\u5c55\u793a\u4ed6\u4eec\u7684\u5927\u8111\u808c\u8089\u3002\n\u7531\u4e8e\u5f3a\u52b2\u7684\u589e\u957f\uff0c\u4e1a\u52a1\u7684\u9700\u6c42\u6b63\u5728\u8fc5\u901f\u53d8\u5316\u3002\u4ece\u73b0\u5728\u5f00\u59cb\u76846\u4e2a\u6708\u540e\uff0c\u4f60\u73b0\u5728\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u5c06\u4f1a\u800c\u4e14\u53ef\u80fd\u4f1a\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\u4e3a\u4e86\u8ba9\u4f60\u8ddf\u4e0a\u5feb\u901f\u6269\u5c55\u7684\u521b\u4e1a\u516c\u53f8\uff0c\u4f60\u4e5f\u5fc5\u987b\u548c\u516c\u53f8\u4e00\u6837\u5feb\uff0c\u5982\u679c\u4e0d\u662f\u6bd4\u516c\u53f8\u5feb\u7684\u8bdd\u3002\u90a3\u5c06\u662f\u5982\u9965\u4f3c\u6e34\u5730\u9605\u8bfb\uff0c\u5bfb\u627e\u673a\u4f1a\u5c06\u65b0\u6280\u80fd\u4ed8\u8bf8\u5b9e\u8df5\u3002\u5728\u4e00\u5bb6\u5904\u4e8e\u589e\u957f\u6a21\u5f0f\u7684\u521d\u521b\u516c\u53f8\u4e2d\uff0c\u673a\u4f1a\u603b\u662f\u6bd4\u4f60\u5e0c\u671b\u7684\u8981\u591a\u5f97\u591a\uff0c\u6240\u4ee5\u628a\u8fd9\u89c6\u4e3a\u6760\u6746\u7684\u4f18\u52bf\u3002\n\u59cb\u7ec8\u5982\u4e00\u5730\u77e5\u9053\u4f60\u8ba4\u4e3a\u56e2\u961f\u57286\u4e2a\u6708\u540e\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u4ece\u73b0\u5728\u5230\u90a3\u65f6\uff0c\u4f60\u5e0c\u671b\u770b\u5230\u4f60\u7684\u56e2\u961f\u89e3\u51b3\u7684\u95ee\u9898\u6709\u591a\u4e0d\u540c\uff0c\u6709\u54ea\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u95ee\u9898\u3002\u5982\u679c\u542f\u52a8\u662f\u53ef\u4f38\u7f29\u7684\uff0c\u90a3\u4e48\u4ee3\u7801\u5e93\u4e5f\u9700\u8981\u5728\u6e05\u6d01\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u65b9\u9762\u8fdb\u884c\u4f38\u7f29\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e00\u5bb6\u6210\u957f\u578b\u521d\u521b\u516c\u53f8\u6765\u8bf4\uff0c\u8fd9\u662f\u4e0d\u591f\u7684\u3002\u4f60\u9700\u8981\u627e\u5230\u90a3\u4e9b\u5728\u81ea\u5df1\u7684\u804c\u4e1a\u751f\u6daf\u4e2d\u81f3\u5c11\u9886\u5148\u4f602-3\u5e74\u7684\u5bfc\u5e08\u3002\n\u5f53\u4f60\u6709\u65f6\u95f4\u81ea\u6211\u8861\u91cf\u7684\u65f6\u5019\uff0c\u4f60\u8fd8\u5fc5\u987b\u57f9\u517b\u5728\u89d2\u843d\u91cc\u5bfb\u627e\u6f5c\u5728\u7684\u8981\u907f\u514d\u7684\u5751\u6d1e\u7684\u6280\u80fd\u3002\u201c\u3002\u521d\u521b\u4f01\u4e1a\u603b\u662f\u5982\u706b\u5982\u837c\uff0c\u770b\u5230\u548c\u9884\u89c1\u8fd9\u6837\u7684\u706b\u707e\u5f88\u91cd\u8981\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5b66\u4f1a\u4e3b\u52a8\u53cd\u5e94\uff0c\u800c\u4e0d\u662f\u88ab\u52a8\u53cd\u5e94\u3002", "note_en": "Over the month, the need to learn, the urge to succeed will have to propel you towards this one universally-approved habit: reading. What are you reading today? What have you learnt today that you did not know previously.\n  In today\u2019s article, its a curation of the articles i\u2019ve read on the second half of June! The articles are classified to the few topics:\n          Software reuseability does not always allow you to copy code wholesale to be placed into another. It requires you to make tweaks and alterations to get it to work as intended in another application. It\u2019s more of an organ transplant than a lego brick. An accurate illustration to share a point! (:\n    fly.io\u2019s article is really interesting. It goes into the mechanics of how certifications are issued, and how does Let\u2019s Encrypt verify your domain belongs to you. That is through the ACME protocol of course. Interstingly, they do provide free tier k8s services at $10/mth equivalent of paid services. Thats super decent. They seek to be competitive with the bigger players such as Google Cloud , Amazon Web Service and Azure.\n    If you heard about ansible, it seeks to serve the same role - configuration management. Maybe a good alternative to ansible if it has different dependences that VMs may not have for ansible.\n      Saw this and its interesting to see hacker news stream in a different format. It would be nice to have a refresh button instead of a manual refresh to get updates.\n    This website allows you to learn regex with good explanations with exercises that allows you to get your hands dirty. Being an advocate of learn by doing. I really like how learning has been made easier for people to pick up a skill in bite sizes. No we should not spoon feed people but neither do we give a medium rare steak to a baby. Everything requires a progress and a series of steps to learn the essential skills before proceeding to a higher level competency. Personally, this is a good example of what seems like a lightweight and highly reusable static site for learning a new skill. Definitely a reference for my next pet projects.\n    As i was talking about Nginx as a file server, Nginx configuration has always been done via the command line and CLI. This is really amazing to have a UI for you to do your configuration with nice buttons to enable or disable your nginx settings. Really neat and interesting for you to consider on your own project.\n    If you want to create a webRTC application, there are many architecture to consider. You can read up more about them in my previous post  here. In order to scale one, you have to consider the Selective Forwarding Unit as the server to transmit your media from your device to your remote peers. One of the beliefs I have is \u201cnever reinvent the wheel\u201d. We are in a technology era where many giants have gone before you and already created many tools available for use. So in the case of scalability, it is true that there is no one tool that helps you to address all the technical challenges, but knowing the components of a successful and scalable video call application allows you to then identify the right tools for its respective components.\n  You have to first identify the screw, in order to realize the need for a screw driver and not a hammer.\n     It is interesting to see how people across the world are also attempting to solve the same problem, and this time he was able to break down the entire technology stack he used for his video call application. I wonder if it is able to deal with its scalability issue? As well. Below are a TON of articles about video call application that people has so kindly shared with me and now it is my responsibility to delve deeper into this topic and make sense of it.\n  When you find the edge of current technology, what do you do? You choose to test new water.\n        You wouldnt want to \u201cmove fast and break things\u201d when it actually harms the user experience.\n  If we want software engineering to be considered an engineering practice (as it deserves)\u00a0we need to start building robust, resilient and long-lasting systems, and stop dropping any piece of code we come across into our project.\n    Use code smartly. And this includes finding alternatives to the first library you find that fits your use case and do a simple comparison to understand each of their pros and cons and weight your options.\n        Chanced upon this simple gadget - a full size 50 keys keyboard with a grey screen that is only about to contain 6 lines of words at any one point. This gadget was created as a way to focus on one thing - typing. For those that are in need for productivity, perhaps such a gadget can help you on that. Beyond productivity, i always wonder if students that are just starting out on their english education could start with such a gadget as well. Simple and straight to the point. It is a keyboard and all you can do is to type and make sense of what is written. But of course, english language goes beyond just stringing words together, that is only the outcome of many other fundamental skills such as grammar and understanding verbs, nouns, pronouns etc.\n  Mapillary is a geospatial company that strives to create a global street-level imagary dataset to rival Google Street View. Of all company to acquire such as Google, Apple and Microsoft, apparently facebook is the one to acquire them. Facebook actually has been actively involved in the mapping space, contributing over 800,000 kilometers of mappred roads to  OpenStreetMap. It is an opensource crowd funded application that builds a community of mappers that contributes and maintain data about roads, trails, cafes, railway stations and more.\n    Data is asset. As with all things, once we start to put our own agenda over the rights (privacy rights in this case) of people, thats where the problem starts. Although there are clause to indicate that they may still collect data from you in incognito mode, i guess this violation of rights still stands. In the realm of technology, its all chill and breezy until you start collecting data from users. That\u2019s when you are in for a whole new ball game. Does your entire architecture considered the suite of security measures before your collect your customers first data? Like a ship, you cannot just leave the back portion of the ship unbuilt or complete before you put the ship into waters.\n    Always love to hear people or organizations pooling in resources to equip and train individuals through challenges. Starting up a company is definitely a trying time and we have to gather as much meaningful knowledge and skills else we will risk bringing the company down. Community support is also crucial for us to exchange experiences and more importantly lessons from one another\u2019s mistakes. This will definitely be something one should put some serious thought if you wish to start your own\n  Like the ascend of a mountain, it\u2019s difficult to climb, but all it takes is a tumble and you find yourself at the foot of the mountain all over again. Worst, wounded and incapacitated\n    Telegram has always been my go to for numerous reasons: speed, ease of use, multi device login, PIN MESSAGE feature, games, platform for bot creation and games. These are just the perks experienced by an end user myself. The security and secret channel provides a nice option for more confidential conversations as well. All powerful tools can be disastrous if it lands onto the hands of scheming ones. So i always wonder how telegram seeks to address issues of users utilizing such a powerful platform for destructive goals. Till today, this question seems to be unanswered.\n    When we want to grow, more often than not, we choose skirt the challenge before us and find easier alternatives because we feel inadequate. Here\u2019s an example, if you want to learn a language, lets say korean, and somehow you managed to have a job offer that allows you to speak korean, but you choose to turn down that job because you dont feel confident enough in your language yet. So instead, you choose to listen to podcast at home everyday until you feel you are ready. You know what could have helped you to get better in korean? Working at a job in korean.\n  This is a common tendency as we make crippling decisions if these decisions are directed by fear. Fear has its own way to manipulate us to find alternatives with its fair share of difficulty to substitute the real thing itself. If you want to growth and succeed? There is no other way, but one way: fail forward.\n    Insightful to a life without Facebook collecting your personal content and clicks on their site. That is something that I\u2019m yet convinced to do but its always interesting to see perspectives. Especially those that differs drastically from yours. One thing is clear:\n      One thing is clear: the code is not the product. The product includes the usability of it. The process to utilize the product. Does this process help to save cost and team for clients? Ultimately, customers will pay for solutions that save them time, regardless of the origins of the technology.\n  Definitely worth a read if you wish to make sense of open source and its perplex contradiction to commercial money making models.\n    To get people into space is no easy feat. And one often wonders how much code goes into the software. Especially the ones that gets the rocket to fly back into earth and land vertically upright. Check out this video here!\n    To even do that, the way to do that is simple: redundancy. They have 3 processors that are making decisions on the next course of action. If any one of the 3 processors do not agree with the next action, that action will not be executed and will proceed to execute teh correct command based on what the last processor\n        Distributed denial-of-service is to spam one\u2019s server with such huge and purposeless requests that the servers no longer have sufficient resources to attend to the legitimate requests for the service. For example you want to go to Amazon website, but because the servers are so overwhelmed with requests (purposeless ones especially), it no longer has the ability to attend to your request for the web page and return you the site. As a reason, what you will see is a blank page with a loading icon that goes on forever. Its waiting for your request to be served and returned back to you.\n  With that spoken, of course there are many architecture and security measures set in place to avoid a DDoS. This will definitely be an interesting topic to delve into if you want to create a secure and reliable service that can stand under the test of fire.\n              Forecasting how long a feature will take from idea to production ready has always been an issue all developers will face. Estimations are often difficult because one usually does not know the complexity of the feature. The technical challenges one may face. To overcome these uncertainty, usually one approach is to consider some key factors which are often overlooked. One of them is wait time. More often than not, developers typically spend more time waiting for requirements, iteration feedbacks or even to get their review reviewed and approved.\n  In your estimation, always strive to be data driven. Look at team\u2019s historical statistics of your entire development cycle. Identify your start and end, so you can start measuring the duration of each of the features that are developed. When you have this average duration of each feature, use your initial estimated number of days for your feature and adjust that number towards your average day proportionally according to how complexity of the feature you understand it to be. This usually helps you to get a better estimate of the time required to get work done.\n  Getting this feature out always helps to estimate the amount of throughput you can expect from your team as well. Overall, seek to make data-driven decisions. In order to do that, start measuring and collecting data!\n    Pink suggests that money isn\u2019t the main driver for highly skilled workers who choose to stay in their jobs. But a combination of three factors: the ability to be self-directed, getting better at the job, and having a purpose in one\u2019s endeavors.\n  In other words, once a person\u2019s basic financial needs are met, money starts to become less and less relevant as a criterion for job satisfaction, especially compared to purpose, self-improvement and self-direction.\n  the best engineers I\u2019ve met through the years are curious, meticulous problem solvers.\n  For some engineers, that\u2019s expressed as a desire to optimize existing systems for better performance,\n  Still others thrive in creating automation\u00a0\u2014\u00a0ensuring the seamless roll-out of new versions of a product\n  For the manager, that means building a structure that facilitates learning and self-growth. Most importantly, it means respecting the art of software engineering, allowing for sensible timeframes for software development and not skimping on quality.\n  A manager\u2019s understanding of the team specifically, and of software engineering in general, is what really makes the difference.\n  It means a place where the engineers can grow and perfect their craft, flexing their brain muscle while keeping their natural curiosity satisfied.\n    The demands of the business is rapidly changing due to the strong growth. What you are doing now will and may be drastically different 6months from now. In order for you to keep with the fast scaling startup, you too have to scale just as fast, if not faster than the company as well. That will be reading voraciously, finding opportunities to put new skills into practice. In a startup in growth mode, there are always way more opportunity than what you wish you can do, so see that as an advantage for leverage.\n  Consistently have an idea where you see the team to be in 6 months time. How different and what are the different types of problems you want to see your team solving from now till then. If the startup is scaling, so does the code base need to scale both in cleanliness and maintainability. In a growth startup, however is not enough. You need to find mentors who are at least 2-3 years ahead of you in terms of their own career.\n  As you find time to self-scale yourself, you have to also develop the skill to look around corners for potential potholes to avoid. Startups are constantly on fire, and it\u2019s important to see and foresee such fires so you can learn to response proactively instead to react passively.", "posttime": "2020-07-16 10:19:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u60f3\u8981,ve,\u9700\u8981", "title": "\u60f3\u8981\u6539\u8fdb\u5417\uff1f\u4f60\u4e00\u5b9a\u8981\u8bfb\u4e00\u8bfb", "title_en": "Want to improve? You've got to read", "transed": 1, "url": "https://blog.phuaxueyong.com/post/2020-06-30-second-half-of-june/", "via": "", "real_tags": ["\u60f3\u8981", "ve", "\u9700\u8981"]}, {"category": "", "categoryclass": "", "imagename": "96e467023916fcf0f0aadd774bfcaafe.png", "infoid": 1012207, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u8f6f\u4ef6\u7cfb\u7edf\u6765\u8bf4\uff0c\u5bf9\u8fd0\u884c\u5728\u4e0d\u540c\u8fdb\u7a0b\u4e2d\u7684\u8f6f\u4ef6\u8fdb\u884c\u8fdc\u7a0b\u8c03\u7528\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u8fd9\u4e9b\u8fdb\u7a0b\u53ef\u80fd\u4f4d\u4e8e\u7f51\u7edc\u4e0a\u7684\u4e0d\u540c\u673a\u5668\u4e0a\u3002\u5185\u5b58\u4e2d\u8c03\u7528\u548c\u8fdc\u7a0b\u8c03\u7528\u4e4b\u95f4\u7684\u4e00\u5927\u533a\u522b\u662f\uff0c\u8fdc\u7a0b\u8c03\u7528\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u6216\u8005\u5728\u8fbe\u5230\u67d0\u4e2a\u8d85\u65f6\u9650\u5236\u4e4b\u524d\u6302\u8d77\u800c\u6ca1\u6709\u54cd\u5e94\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5982\u679c\u60a8\u6709\u8bb8\u591a\u547c\u53eb\u8005\u5728\u6ca1\u6709\u54cd\u5e94\u7684\u4f9b\u5e94\u5546\u4e0a\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u4f1a\u8017\u5c3d\u5173\u952e\u8d44\u6e90\uff0c\u4ece\u800c\u5bfc\u81f4\u8de8\u591a\u4e2a\u7cfb\u7edf\u7684\u7ea7\u8054\u6545\u969c\u3002\u8fc8\u514b\u5c14\u00b7\u5c3c\u52a0\u5fb7(Michael Nygard)\u5728\u4ed6\u7684\u4f18\u79c0\u8457\u4f5c\u201c\u53d1\u5e03\u5b83\u201d(Release It)\u4e2d\u666e\u53ca\u4e86\u65ad\u8def\u5668\u6a21\u5f0f\uff0c\u4ee5\u9632\u6b62\u8fd9\u79cd\u707e\u96be\u6027\u7684\u7ea7\u8054\u3002\n\u65ad\u8def\u5668\u80cc\u540e\u7684\u57fa\u672c\u601d\u60f3\u975e\u5e38\u7b80\u5355\u3002\u60a8\u5c06\u53d7\u4fdd\u62a4\u7684\u51fd\u6570\u8c03\u7528\u5305\u88c5\u5728\u76d1\u89c6\u6545\u969c\u7684\u65ad\u8def\u5668\u5bf9\u8c61\u4e2d\u3002\u4e00\u65e6\u6545\u969c\u8fbe\u5230\u67d0\u4e2a\u9608\u503c\uff0c\u65ad\u8def\u5668\u5c31\u4f1a\u8df3\u95f8\uff0c\u6240\u6709\u5bf9\u65ad\u8def\u5668\u7684\u8fdb\u4e00\u6b65\u8c03\u7528\u90fd\u4f1a\u8fd4\u56de\u9519\u8bef\uff0c\u800c\u6839\u672c\u4e0d\u4f1a\u8fdb\u884c\u53d7\u4fdd\u62a4\u7684\u8c03\u7528\u3002\u901a\u5e38\uff0c\u5982\u679c\u65ad\u8def\u5668\u8df3\u95f8\uff0c\u60a8\u8fd8\u9700\u8981\u67d0\u79cd\u7c7b\u578b\u7684\u76d1\u89c6\u5668\u8b66\u62a5\u3002\n\u65ad\u8def\u5668\u5b58\u50a8\u5757\uff0c\u521d\u59cb\u5316\u5404\u79cd\u53c2\u6570(\u9608\u503c\u3001\u8d85\u65f6\u548c\u76d1\u63a7)\uff0c\u5e76\u5c06\u65ad\u8def\u5668\u91cd\u7f6e\u4e3a\u95ed\u5408\u72b6\u6001\u3002\nAttr_Accessor\uff1aINVOCATION_TIMEOUT\uff0c\uff1aFAILURE_THRESHOLD\uff0c\uff1aMONITOR\u5b9a\u4e49\u521d\u59cb\u5316&amp\uff1bblock@Circuit=block@invocation_timeout=0.01@FAILURE_THRESHOLD=5@MONITOR=ACCEPT_MONITOR\u91cd\u7f6e\u3002\n\u5982\u679c\u7535\u8def\u95ed\u5408\uff0c\u5219\u8c03\u7528\u65ad\u8def\u5668\u5c06\u8c03\u7528\u5e95\u5c42\u5757\uff0c\u4f46\u5982\u679c\u7535\u8def\u65ad\u5f00\uff0c\u5219\u8fd4\u56de\u9519\u8bef\u3002\n\u5b9a\u4e49\u8c03\u7528\u53c2\u6570\u6848\u4f8b\u72b6\u6001\u6761\u4ef6\uff1aCLOSED BEGIN DO_CALL ARGS\u6551\u63f4\u8d85\u65f6\uff1a\uff1aERROR RECORD_FAILURE RAY$\uff01End When\uff1aOPEN\u7136\u540e\u5f15\u53d1\u65ad\u8def\u5668\uff1a\uff1aOPEN ELSE RAISE&#34\uff1bEND END\u5b9a\u4e49DO_CALL ARGS RESULT=TIMEOUT\uff1a\uff1aTIMEOUT(@INVOCATION_TIMEOUT)DO@Circuit\u3002\u8c03\u7528\u53c2\u6570END RESET RESET RETURN RESULT END\u3002\n\u5982\u679c\u8d85\u65f6\uff0c\u6211\u4eec\u4f1a\u9012\u589e\u5931\u8d25\u8ba1\u6570\u5668\uff0c\u6210\u529f\u7684\u8c03\u7528\u4f1a\u5c06\u5176\u91cd\u7f6e\u4e3a\u96f6\u3002\nDEF RECORD_FAILURE@FAILURE_COUNT+=1@monitor or.alert(\uff1aOPEN_CHECURE)\u5982\u679c\uff1aOPEN==\u72b6\u6001\u7ed3\u675fdef RESET@FAILURE_COUNT=0@monitor_.alert\uff1aRESET_CHECURE END\n\u8fd9\u4e2a\u7b80\u5355\u7684\u65ad\u8def\u5668\u907f\u514d\u5728\u7535\u8def\u6253\u5f00\u65f6\u8fdb\u884c\u53d7\u4fdd\u62a4\u7684\u8c03\u7528\uff0c\u4f46\u9700\u8981\u5916\u90e8\u5e72\u9884\u624d\u80fd\u5728\u60c5\u51b5\u6062\u590d\u6b63\u5e38\u65f6\u5c06\u5176\u91cd\u7f6e\u3002\u5bf9\u4e8e\u5efa\u7b51\u7269\u4e2d\u7684\u7535\u6c14\u65ad\u8def\u5668\uff0c\u8fd9\u662f\u4e00\u79cd\u5408\u7406\u7684\u65b9\u6cd5\uff0c\u4f46\u5bf9\u4e8e\u8f6f\u4ef6\u65ad\u8def\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u65ad\u8def\u5668\u672c\u8eab\u68c0\u6d4b\u5e95\u5c42\u547c\u53eb\u662f\u5426\u518d\u6b21\u5de5\u4f5c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u9002\u5f53\u7684\u95f4\u9694\u540e\u518d\u6b21\u5c1d\u8bd5\u53d7\u4fdd\u62a4\u7684\u8c03\u7528\uff0c\u5e76\u5728\u6210\u529f\u65f6\u91cd\u7f6e\u65ad\u8def\u5668\u6765\u5b9e\u73b0\u6b64\u81ea\u91cd\u7f6e\u884c\u4e3a\u3002\n\u521b\u5efa\u8fd9\u79cd\u65ad\u8def\u5668\u610f\u5473\u7740\u6dfb\u52a0\u5c1d\u8bd5\u91cd\u7f6e\u7684\u9608\u503c\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u53d8\u91cf\u6765\u4fdd\u5b58\u6700\u540e\u4e00\u4e2a\u9519\u8bef\u7684\u65f6\u95f4\u3002\n\u5b9a\u4e49\u521d\u59cb\u5316&amp\uff1bblock@Circuit=block@invocation_timeout=0.01@FAILURE_THRESHOLD=5@MONITOR=BreakerMonitor or.new@Reset_Timeout=0.1 RESET END def RESET@FAILURE_COUNT=0@LAST_FAILURE_TIME=nIL@monitor or.alert\uff1aRESET_CHECURE END\u3002\n\u73b0\u5728\u6709\u7b2c\u4e09\u79cd\u72b6\u6001\u5b58\u5728-\u534a\u5f00-\u8fd9\u610f\u5473\u7740\u7535\u8def\u51c6\u5907\u8fdb\u884c\u771f\u6b63\u7684\u547c\u53eb\u4f5c\u4e3a\u8bd5\u9a8c\uff0c\u770b\u770b\u95ee\u9898\u662f\u5426\u5f97\u5230\u89e3\u51b3\u3002\n\u5b9a\u4e49\u72b6\u6001\u5927\u5c0f\u5199WHEN(@FAILURE_COUNT&gt\uff1b=@FAILURE_THRESHOLD)&amp\uff1b&amp\uff1b(time.Now-@LAST_FAILURE_TIME)&gt\uff1b@Reset_Timeout\uff1aHalf_OPEN WHEN(@FAILURE_COUNT&gt\uff1b=@FAILURE_THRESHOLD)\uff1aOPEN ELSE\uff1a\u95ed\u5408\u7aef\u3002\n\u8981\u6c42\u5728\u534a\u5f00\u72b6\u6001\u4e0b\u8c03\u7528\u4f1a\u5bfc\u81f4\u5c1d\u8bd5\u8c03\u7528\uff0c\u5982\u679c\u8c03\u7528\u6210\u529f\u5c06\u91cd\u7f6e\u65ad\u8def\u5668\uff0c\u5426\u5219\u5c06\u91cd\u65b0\u542f\u52a8\u8d85\u65f6\u3002\n\u5b9a\u4e49\u8c03\u7528\u53c2\u6570\u6848\u4f8b\u72b6\u6001WHEN\uff1aCLOSED\uff0c\uff1aHARM_OPEN BEGIN DO_CALL ARGS\u6551\u63f4\u8d85\u65f6\uff1a\uff1aERROR RECORD_FAILURE RAY$\uff01\u7ed3\u675f\u65f6\u95f4\uff1aOPEN RAISE\u65ad\u8def\u5668\uff1a\uff1aOPEN\u5426\u5219RAISE&#34\uff1bREAD&#34\uff1bEND END\u5b9a\u4e49RECORD_FAILURE@FAILURE_COUNT+=1@LAST_FAILURE_TIME=time.Now@monitor or.alert(\uff1aOPEN_CRECTORE)IF\uff1aOPEN==STATE END\u3002\n\u6b64\u793a\u4f8b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8bf4\u660e\u6027\u793a\u4f8b\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u65ad\u8def\u5668\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd\u548c\u53c2\u6570\u5316\u3002\u5b83\u4eec\u901a\u5e38\u4f1a\u9488\u5bf9\u53d7\u4fdd\u62a4\u547c\u53eb\u53ef\u80fd\u5f15\u53d1\u7684\u4e00\u7cfb\u5217\u9519\u8bef(\u5982\u7f51\u7edc\u8fde\u63a5\u6545\u969c)\u63d0\u4f9b\u4fdd\u62a4\u3002\u5e76\u975e\u6240\u6709\u9519\u8bef\u90fd\u5e94\u8df3\u95f8\u7535\u8def\uff0c\u6709\u4e9b\u9519\u8bef\u5e94\u53cd\u6620\u6b63\u5e38\u6545\u969c\uff0c\u5e76\u4f5c\u4e3a\u5e38\u89c4\u903b\u8f91\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u5904\u7406\u3002\n\u5728\u901a\u4fe1\u91cf\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u8bb8\u591a\u547c\u53eb\u4ec5\u4ec5\u7b49\u5f85\u521d\u59cb\u8d85\u65f6\u7684\u95ee\u9898\u3002\u7531\u4e8e\u8fdc\u7a0b\u8c03\u7528\u901a\u5e38\u5f88\u6162\uff0c\u56e0\u6b64\u4f7f\u7528\u5c06\u6765\u5c06\u6bcf\u4e2a\u8c03\u7528\u653e\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e0a\u6216\u627f\u8bfa\u5728\u7ed3\u679c\u8fd4\u56de\u65f6\u5904\u7406\u7ed3\u679c\u901a\u5e38\u662f\u4e2a\u597d\u4e3b\u610f\u3002\u901a\u8fc7\u4ece\u7ebf\u7a0b\u6c60\u4e2d\u63d0\u53d6\u8fd9\u4e9b\u7ebf\u7a0b\uff0c\u60a8\u53ef\u4ee5\u5b89\u6392\u7ebf\u8def\u5728\u7ebf\u7a0b\u6c60\u8017\u5c3d\u65f6\u4e2d\u65ad\u3002\n\u8be5\u793a\u4f8b\u663e\u793a\u4e86\u89e6\u53d1\u65ad\u8def\u5668\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5-\u6210\u529f\u8c03\u7528\u65f6\u91cd\u7f6e\u7684\u8ba1\u6570\u3002\u4e00\u79cd\u66f4\u590d\u6742\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u8003\u8651\u9519\u8bef\u7684\u9891\u7387\uff0c\u6bd4\u5982\u8bf4\uff0c\u4e00\u65e6\u4f60\u83b7\u5f9750%\u7684\u5931\u8d25\u7387\uff0c\u5c31\u4f1a\u7eca\u5012\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u9519\u8bef\uff0c\u60a8\u53ef\u80fd\u4e5f\u6709\u4e0d\u540c\u7684\u9608\u503c\uff0c\u4f8b\u5982\uff0c\u8d85\u65f6\u7684\u9608\u503c\u4e3a10\uff0c\u8fde\u63a5\u5931\u8d25\u7684\u9608\u503c\u4e3a3\u3002\n\u6211\u5df2\u7ecf\u5c55\u793a\u7684\u793a\u4f8b\u662f\u7528\u4e8e\u540c\u6b65\u8c03\u7528\u7684\u65ad\u8def\u5668\uff0c\u4f46\u662f\u65ad\u8def\u5668\u5bf9\u4e8e\u5f02\u6b65\u901a\u4fe1\u4e5f\u5f88\u6709\u7528\u3002\u8fd9\u91cc\u7684\u4e00\u79cd\u5e38\u89c1\u6280\u672f\u662f\u5c06\u6240\u6709\u8bf7\u6c42\u653e\u5728\u4e00\u4e2a\u961f\u5217\u4e2d\uff0c\u4f9b\u5e94\u5546\u4ee5\u5176\u901f\u5ea6\u4f7f\u7528\u8be5\u961f\u5217-\u8fd9\u662f\u907f\u514d\u670d\u52a1\u5668\u8fc7\u8f7d\u7684\u6709\u7528\u6280\u672f\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u961f\u5217\u586b\u6ee1\u65f6\u7535\u8def\u4e2d\u65ad\u3002\n\u65ad\u8def\u5668\u672c\u8eab\u6709\u52a9\u4e8e\u51cf\u5c11\u53ef\u80fd\u5931\u8d25\u7684\u64cd\u4f5c\u4e2d\u5360\u7528\u7684\u8d44\u6e90\u3002\u60a8\u53ef\u4ee5\u907f\u514d\u7b49\u5f85\u5ba2\u6237\u7aef\u7684\u8d85\u65f6\uff0c\u4e2d\u65ad\u7684\u7535\u8def\u53ef\u4ee5\u907f\u514d\u7ed9\u9677\u5165\u56f0\u5883\u7684\u670d\u52a1\u5668\u5e26\u6765\u8d1f\u8f7d\u3002\u6211\u5728\u8fd9\u91cc\u8ba8\u8bba\u8fdc\u7a0b\u8c03\u7528\uff0c\u8fd9\u662f\u65ad\u8def\u5668\u7684\u5e38\u89c1\u60c5\u51b5\uff0c\u4f46\u5b83\u4eec\u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u60a8\u60f3\u8981\u4fdd\u62a4\u7cfb\u7edf\u7684\u5404\u90e8\u5206\u4e0d\u53d7\u5176\u4ed6\u90e8\u5206\u6545\u969c\u5f71\u54cd\u7684\u60c5\u51b5\u3002\n\u65ad\u8def\u5668\u662f\u4e00\u4e2a\u6709\u4ef7\u503c\u7684\u76d1\u63a7\u573a\u6240\u3002\u65ad\u8def\u5668\u72b6\u6001\u7684\u4efb\u4f55\u53d8\u5316\u90fd\u5e94\u8bb0\u5f55\u4e0b\u6765\uff0c\u65ad\u8def\u5668\u5e94\u663e\u793a\u5176\u72b6\u6001\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ee5\u4fbf\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u76d1\u63a7\u3002\u65ad\u8def\u5668\u7684\u884c\u4e3a\u901a\u5e38\u662f\u5bf9\u73af\u5883\u4e2d\u66f4\u6df1\u5c42\u6b21\u7684\u95ee\u9898\u53d1\u51fa\u8b66\u544a\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u6765\u6e90\u3002\u64cd\u4f5c\u4eba\u5458\u5e94\u80fd\u591f\u8df3\u95f8\u6216\u590d\u4f4d\u65ad\u8def\u5668\u3002\n\u65ad\u8def\u5668\u672c\u8eab\u662f\u6709\u4ef7\u503c\u7684\uff0c\u4f46\u4f7f\u7528\u5b83\u4eec\u7684\u5ba2\u6237\u9700\u8981\u5bf9\u65ad\u8def\u5668\u6545\u969c\u505a\u51fa\u53cd\u5e94\u3002\u4e0e\u4efb\u4f55\u8fdc\u7a0b\u8c03\u7528\u4e00\u6837\uff0c\u60a8\u9700\u8981\u8003\u8651\u5728\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u5982\u4f55\u5904\u7406\u3002\u60a8\u6b63\u5728\u6267\u884c\u7684\u64cd\u4f5c\u5931\u8d25\u4e86\u5417\uff0c\u6216\u8005\u60a8\u6709\u4ec0\u4e48\u89e3\u51b3\u529e\u6cd5\u5417\uff1f\u4fe1\u7528\u5361\u6388\u6743\u53ef\u4ee5\u653e\u5728\u961f\u5217\u4e2d\u7a0d\u540e\u5904\u7406\uff0c\u901a\u8fc7\u663e\u793a\u4e00\u4e9b\u8db3\u591f\u597d\u663e\u793a\u7684\u9648\u65e7\u6570\u636e\u53ef\u4ee5\u51cf\u8f7b\u65e0\u6cd5\u83b7\u53d6\u67d0\u4e9b\u6570\u636e\u7684\u95ee\u9898\u3002\nNetflix\u6280\u672f\u535a\u5ba2\u5305\u542b\u4e86\u8bb8\u591a\u6709\u7528\u7684\u4fe1\u606f\uff0c\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7\u5927\u91cf\u670d\u52a1\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u3002\u4ed6\u4eec\u7684\u4f9d\u8d56\u547d\u4ee4\u8c08\u5230\u4e86\u4f7f\u7528\u65ad\u8def\u5668\u548c\u7ebf\u7a0b\u6c60\u9650\u5236\u3002\nNetflix\u62e5\u6709\u5f00\u6e90\u7684hystrix\uff0c\u8fd9\u662f\u4e00\u4e2a\u5904\u7406\u5206\u5e03\u5f0f\u7cfb\u7edf\u5ef6\u8fdf\u548c\u5bb9\u9519\u7684\u590d\u6742\u5de5\u5177\u3002\u5b83\u5305\u62ec\u5177\u6709\u7ebf\u7a0b\u6c60\u9650\u5236\u7684\u65ad\u8def\u5668\u6a21\u5f0f\u7684\u5b9e\u73b0\nRuby\u3001Java\u3001Grails\u63d2\u4ef6\u3001C#\u3001AspectJ\u548cScala\u4e2d\u8fd8\u6709\u5176\u4ed6\u5f00\u653e\u6e90\u7801\u7684\u65ad\u8def\u5668\u6a21\u5f0f\u5b9e\u73b0", "note_en": "It&#39;s common for software systems to make remote calls to software running in different processes, probably on different machines across a network. One of the big differences between in-memory calls and remote calls is that remote calls can fail, or hang without a response until some timeout limit is reached. What&#39;s worse if you have many callers on a unresponsive supplier, then you can run out of critical resources leading to cascading failures across multiple systems. In his excellent book  Release It , Michael Nygard popularized the Circuit Breaker pattern to prevent this kind of catastrophic cascade.\n The basic idea behind the circuit breaker is very simple. You wrap a protected function call in a circuit breaker object, which monitors for failures. Once the failures reach a certain threshold, the circuit breaker trips, and all further calls to the circuit breaker return with an error, without the protected call being made at all. Usually you&#39;ll also want some kind of monitor alert if the circuit breaker trips.\n      The breaker stores the block, initializes various parameters (for thresholds, timeouts, and monitoring), and resets the breaker into its closed state.\n  attr_accessor :invocation_timeout, :failure_threshold, :monitor def initialize &amp;block @circuit = block @invocation_timeout = 0.01 @failure_threshold = 5 @monitor = acquire_monitor reset end\n Calling the circuit breaker will call the underlying block if the circuit is closed, but return an error if it&#39;s open\n   def call args case state when :closed begin do_call args rescue Timeout::Error record_failure raise $! end when :open then raise CircuitBreaker::Open else raise &#34;Unreachable Code&#34; end end def do_call args result = Timeout::timeout(@invocation_timeout) do @circuit.call args end reset return result end\n Should we get a timeout, we increment the failure counter, successful calls reset it back to zero.\n  def record_failure @failure_count += 1 @monitor.alert(:open_circuit) if :open == state end def reset @failure_count = 0 @monitor.alert :reset_circuit end\n    This simple circuit breaker avoids making the protected call when the circuit is open, but would need an external intervention to reset it when things are well again. This is a reasonable approach with electrical circuit breakers in buildings, but for software circuit breakers we can have the breaker itself detect if the underlying calls are working again. We can implement this self-resetting behavior by trying the protected call again after a suitable interval, and resetting the breaker should it succeed.\n   Creating this kind of breaker means adding a threshold for trying the reset and setting up a variable to hold the time of the last error.\n  def initialize &amp;block @circuit = block @invocation_timeout = 0.01 @failure_threshold = 5 @monitor = BreakerMonitor.new @reset_timeout = 0.1 reset end def reset @failure_count = 0 @last_failure_time = nil @monitor.alert :reset_circuit end\n There is now a third state present - half open - meaning the circuit is ready to make a real call as trial to see if the problem is fixed.\n  def state case when (@failure_count &gt;= @failure_threshold) &amp;&amp; (Time.now - @last_failure_time) &gt; @reset_timeout :half_open when (@failure_count &gt;= @failure_threshold) :open else :closed end end\n Asked to call in the half-open state results in a trial call, which will either reset the breaker if successful or restart the timeout if not.\n  def call args case state when :closed, :half_open begin do_call args rescue Timeout::Error record_failure raise $! end when :open raise CircuitBreaker::Open else raise &#34;Unreachable&#34; end end def record_failure @failure_count += 1 @last_failure_time = Time.now @monitor.alert(:open_circuit) if :open == state end\n This example is a simple explanatory one, in practice circuit breakers provide a good bit more features and parameterization. Often they will protect against a range of errors that protected call could raise, such as network connection failures. Not all errors should trip the circuit, some should reflect normal failures and be dealt with as part of regular logic.\n With lots of traffic, you can have problems with many calls just waiting for the initial timeout. Since remote calls are often slow, it&#39;s often a good idea to put each call on a different thread using a  future or promise to handle the results when they come back. By drawing these threads from a thread pool, you can arrange for the circuit to break when the thread pool is exhausted.\n The example shows a simple way to trip the breaker \u2014 a count that resets on a successful call. A more sophisticated approach might look at frequency of errors, tripping once you get, say, a 50% failure rate. You might also have different thresholds for different errors, such as a threshold of 10 for timeouts but 3 for connection failures.\n The example I&#39;ve shown is a circuit breaker for synchronous calls, but circuit breakers are also useful for asynchronous communications. A common technique here is to put all requests on a queue, which the supplier consumes at its speed - a useful technique to avoid overloading servers. In this case the circuit breaks when the queue fills up.\n On their own, circuit breakers help reduce resources tied up in operations which are likely to fail. You avoid waiting on timeouts for the client, and a broken circuit avoids putting load on a struggling server. I talk here about remote calls, which are a common case for circuit breakers, but they can be used in any situation where you want to protect parts of a system from failures in other parts.\n Circuit breakers are a valuable place for monitoring. Any change in breaker state should be logged and breakers should reveal details of their state for deeper monitoring. Breaker behavior is often a good source of warnings about deeper troubles in the environment. Operations staff should be able to trip or reset breakers.\n Breakers on their own are valuable, but clients using them need to react to breaker failures. As with any remote invocation you need to consider what to do in case of failure. Does it fail the operation you&#39;re carrying out, or are there workarounds you can do? A credit card authorization could be put on a queue to deal with later, failure to get some data may be mitigated by showing some stale data that&#39;s good enough to display.\n The netflix tech blog contains a lot of useful information on improving reliability of systems with lots of services.  Their Dependency Command talks about using circuit breakers and a thread pool limit.\n Netflix have open-sourced  Hystrix, a sophisticated tool for dealing with latency and fault tolerance for distributed systems. It includes an implementation of the circuit breaker pattern with the thread pool limit\n There are other open-source implementations of the circuit breaker pattern in  Ruby,  Java,  Grails Plugin,  C#,  AspectJ, and  Scala", "posttime": "2020-07-16 10:19:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65ad\u8def\u5668,circuit", "title": "\u65ad\u8def\u5668", "title_en": "Circuit Breaker", "transed": 1, "url": "https://martinfowler.com/bliki/CircuitBreaker.html", "via": "", "real_tags": ["\u65ad\u8def\u5668", "circuit"]}]
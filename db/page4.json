[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1075006, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0cpiet gpu\u671d\u7740\u5b9e\u73b0\u5176\u613f\u666f\u8fc8\u51fa\u4e86\u4e00\u5927\u6b65\uff0c\u5c06\u8def\u5f84\u88c1\u526a\u7684\u8ba1\u7b97\u4ece\u90e8\u5206\u5728CPU\u4e0a\u5b8c\u6210\u8f6c\u79fb\u5230\u5b8c\u5168\u5728gpu\u4e0a\u5b8c\u6210\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u89e3\u91ca\u4e86\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u8fd9\u662f\u4e00\u6bb5\u76f8\u5f53\u957f\u7684\u65c5\u7a0b\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c\u6211\u5728\u4e00\u5e74\u591a\u524d\u5c31\u5f00\u59cb\u8d77\u8349\u8fd9\u7bc7\u6587\u7ae0\u4e86\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u4e0d\u5f97\u4e0d\u60f3\u51fa\u4e00\u4e2a\u57fa\u672c\u7684\u65b0\u5e76\u884c\u7b97\u6cd5\u3002\u7ec8\u4e8e\u5b8c\u6210\u4e86\u3002\u6211\u8ba4\u4e3a\u526a\u8f91\u662fpiet gpu\u533a\u522b\u4e8e\u5176\u4ed62D\u6e32\u67d3\u5f15\u64ce\u7684\u6838\u5fc3\u3002\n\u526a\u88c1\u7684\u57fa\u672c\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u4f46\u5b83\u5bf9\u6574\u4e2a\u6210\u50cf\u6a21\u578b\u6709\u7740\u6df1\u8fdc\u7684\u5f71\u54cd\u3002\u9996\u5148\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u800c\u4e0d\u526a\u88c1\u7684\u7ed8\u56fe\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u7ebf\u6027\u7684\u5c42\u5e8f\u5217\u3002\u5b9e\u73b0\u7eaf\u77e2\u91cf\u526a\u8f91\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u4f46\u6211\u4f7f\u7528\u7684\u65b9\u6cd5\u5c06\u5176\u63a8\u5e7f\u5230\u6df7\u5408\uff0c\u4e0b\u4e00\u79cd\u662f\u6df7\u5408\u3002\n\u4f7f\u7528\u77e2\u91cf\u8def\u5f84\u8fdb\u884c\u526a\u88c1\u4f1a\u5f71\u54cd\u526a\u88c1\u8282\u70b9\u7684\u6240\u6709\u5b50\u5bf9\u8c61\u7684\u7ed8\u5236\u3002\u7ed8\u5236\u8def\u5f84\u5185\u7684\u70b9\uff0c\u800c\u4e0d\u7ed8\u5236\u8def\u5f84\u5916\u7684\u70b9\u3002\n\u5bf9\u4e8e\u7eaf\u77e2\u91cf\u8def\u5f84\u526a\u88c1\uff0c\u5e94\u7528\u4e8e\u6bcf\u4e2a\uff08\u53f6\uff09\u56fe\u5f62\u8282\u70b9\u7684\u6709\u6548\u526a\u88c1\u662f\u6811\u4e0a\u6240\u6709\u526a\u88c1\u8def\u5f84\u7684\u4ea4\u70b9\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u53ef\u884c\u7684\u5b9e\u73b0\u662f\u5728\u5411\u91cf\u7a7a\u95f4\u4e2d\u8fdb\u884c\u8def\u5f84\u76f8\u4ea4\u3002\u7136\u800c\uff0c\u5e03\u5c14\u8def\u5f84\u64cd\u4f5c\u5f88\u96be\u5b9e\u73b0\uff0c\u53ea\u6709CPU\u5b9e\u73b0\u662f\u5df2\u77e5\u7684\uff1b\u81f3\u5c11\u53ef\u4ee5\u8bf4\uff0c\u5c06\u5b83\u4eec\u8f6c\u79fb\u5230GPU\u662f\u56f0\u96be\u7684\u3002\n\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\uff08\u6297\u952f\u9f7f\uff09\u526a\u5207\u89c6\u4e3a\u6df7\u5408\u64cd\u4f5c\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u662fPorter-Duff\u201csource in\u201d\u5408\u6210\u64cd\u4f5c\u7b26\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u7247\u6bb5\u7684\u5b50\u7247\u6bb5\u6e32\u67d3\u5230\u4e00\u4e2a\u4e34\u65f6\u7684\u3001\u521d\u59cb\u6e05\u6670\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u7247\u6bb5\u906e\u7f69\u6e32\u67d3\u5230alpha\u901a\u9053\u4e2d\uff0c\u7136\u540e\u5728\u80cc\u666f\u4e0a\u5408\u6210\u4e34\u65f6\u7f13\u51b2\u533a\uff0calpha\u901a\u9053\u4e58\u4ee5\u906e\u7f69\u3002\u8fd9\u79cd\u65b9\u6cd5\u5b8c\u5168\u53ef\u4ee5\u5728GPU\u4e0a\u5b8c\u6210\uff0c\u6df7\u5408\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u63a8\u5e7f\u3002\n\u5939\u5b50\u53ef\u4ee5\u4efb\u610f\u5d4c\u5957\uff1b\u7247\u6bb5\u8282\u70b9\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u7247\u6bb5\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u5b8c\u6574\u76842D\u573a\u666f\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u68f5\u6811\uff0c\u5b83\u6df1\u523b\u5730\u5f71\u54cd\u7740\u7ed8\u753b\u7684\u65b9\u5f0f\u3002\n\u4e8c\u7ef4\u6e32\u67d3\u4e2d\u7684\u4e00\u79cd\u5e38\u89c1\u6280\u672f\u662f\u4e3a\u6bcf\u4e2a\u7ed8\u56fe\u64cd\u4f5c\u6307\u5b9a\u4e00\u4e2a\u8fb9\u754c\u6846\u3002\u8fb9\u754c\u6846\u662f\u4e00\u4e2a\u5c01\u95ed\u7684\u77e9\u5f62\uff08\u5e0c\u671b\u662f\u7d27\u5bc6\u7684\uff09\uff0c\u56e0\u6b64\u7ed8\u56fe\u64cd\u4f5c\u53ea\u5f71\u54cd\u77e9\u5f62\u5185\u7684\u50cf\u7d20\u3002\u5bf9\u4e8e\u6e32\u67d3\u76ee\u6807\u66f2\u9762\u7684\u4efb\u4f55\u5b50\u533a\u57df\uff0c\u53ef\u4ee5\u5ffd\u7565\u5176\u8fb9\u754c\u6846\u4e0d\u4e0e\u8be5\u8fb9\u754c\u6846\u76f8\u4ea4\u7684\u4efb\u4f55\u5bf9\u8c61\u3002Piet gpu\u5e7f\u6cdb\u4f7f\u7528\u8fb9\u754c\u6846\u6765\u7ec4\u7ec7\u5e76\u884c\u7ed8\u56fe\uff0c\u9996\u5148\u662f256x256\u50cf\u7d20\u7684\u5355\u5143\uff0c\u7136\u540e\u662f16x16\u50cf\u7d20\u7684\u5e73\u94fa\u3002\u8fb9\u754c\u6846\u5229\u7528\u4e86\u5927\u591a\u6570\u4e8c\u7ef4\u56fe\u5f62\u90fd\u662f\u7a00\u758f\u7684\u8fd9\u4e00\u4e8b\u5b9e\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7ed8\u5236\u5bf9\u8c61\u4e0d\u4f1a\u63a5\u89e6\u5927\u591a\u6570\u74f7\u7816\u3002\n\u5f53\u7136\uff0c\u8fb9\u754c\u6846\u4e0e\u526a\u88c1\u76f8\u4e92\u4f5c\u7528\u3002\u6811\u4e2d\u7684\u6bcf\u4e2a\u526a\u8f91\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u6839\u636e\u76f8\u5e94\u526a\u8f91\u8def\u5f84\u8ba1\u7b97\u7684\u8fb9\u754c\u6846\u3002\u7136\u540e\uff0c\u6811\u4e2d\u6240\u6709\u5b50\u4f53\u7684\u8fb9\u754c\u6846\u4e0e\u8be5\u8fb9\u754c\u6846\u76f8\u4ea4\u3002\u53e6\u4e00\u79cd\u63aa\u8f9e\u65b9\u5f0f\u662f\uff0c\u7ed8\u5236\u5bf9\u8c61\u7684\u526a\u88c1\u8fb9\u754c\u6846\u662f\u5bf9\u8c61\u81ea\u5df1\u7684\u8fb9\u754c\u6846\uff0c\u4e0e\u4ece\u8be5\u8282\u70b9\u5230\u6811\u6839\u7684\u8def\u5f84\u4e2d\u6240\u6709\u526a\u88c1\u8def\u5f84\u7684\u8fb9\u754c\u6846\u76f8\u4ea4\u3002\n\u8ba1\u7b97\u8fd9\u4e9b\u8fb9\u754c\u6846\u7684\u5de5\u4f5c\u91cf\u6bd4\u6e32\u67d3\u5bf9\u8c61\u5c11\uff0c\u4f46\u4e0d\u662f\u514d\u8d39\u7684\u3002\u7279\u522b\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u5728GPU\u800c\u4e0d\u662fCPU\u4e0a\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\n\u6bcf\u74e6\u4f18\u5316\u4f1a\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u6709\u8da3\u3002piet gpu\u6e32\u67d3\u7ba1\u9053\u88ab\u7ec4\u7ec7\u4e3a\u4e00\u7cfb\u5217\u9636\u6bb5\uff0c\u6700\u540e\u4e3a\u76ee\u6807\u4e2d\u7684\u6bcf\u4e2a16x16\u78c1\u8d34\u7f16\u5199\u6bcf\u4e2a\u78c1\u8d34\u547d\u4ee4\u5217\u8868\uff08\u6709\u65f6\u79f0\u4e3a\u201c\u78c1\u5e26\u201d\uff09\u3002\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u662f\u201c\u7cbe\u7ec6\u5149\u6805\u5316\u201d\uff0c\u5b83\u4e3a\u5e73\u94fa\u4e2d\u7684\u6240\u6709\u50cf\u7d20\u64ad\u653e\u8fd9\u4e9b\u547d\u4ee4\u3002\u74f7\u7816\u5185\u90e8\u6ca1\u6709\u63a7\u5236\u6d41\uff1b\u5bf9\u6240\u6709\u50cf\u7d20\u8ba1\u7b97\u6240\u6709\u547d\u4ee4\u3002\n\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u526a\u8f91\u6e32\u67d3\u5982\u4e0b\u3002\u7cbe\u7ec6\u5149\u6805\u5316\u5668\u4fdd\u6301\u4e00\u7cfb\u5217\u6bcf\u50cf\u7d20\u72b6\u6001\uff0c\u5c24\u5176\u662f\u5f53\u524d\u50cf\u7d20\u548c\u6df7\u5408\u5806\u6808\u3002\u5f53\u524d\u50cf\u7d20\u6700\u521d\u662f\u6e05\u6670\u7684\uff08alpha=0\uff09\u6216\u80cc\u666f\u8272\uff0c\u666e\u901a\u7ed8\u5236\u5bf9\u8c61\u88ab\u5408\u6210\u5230\u5176\u4e0a\uff08\u901a\u5e38\u4f7f\u7528Porter Duff\u201cover\u201d\uff09\u3002BeginClip\u64cd\u4f5c\u5c06\u5f53\u524d\u50cf\u7d20\u63a8\u9001\u5230\u6df7\u5408\u5806\u6808\u4e0a\u3002\u5c06\u6e32\u67d3\u7247\u6bb5\u7684\u5b50\u5bf9\u8c61\uff0c\u5e76\u5408\u6210\u5230\u5f53\u524d\u50cf\u7d20\u4e2d\u3002\u7136\u540e\uff0c\u5728\u5339\u914d\u7684\u7ed3\u675f\u526a\u8f91\u5904\uff0c\u526a\u8f91\u906e\u7f69\u88ab\u6e32\u67d3\u6210alpha\u906e\u7f69\uff0c\u8be5\u906e\u7f69\u4f7f\u7528\u201c\u6e90\u8f93\u5165\u201d\uff08\u57fa\u672c\u4e0a\u662f\u5c06alpha\u4e0e\u906e\u7f69\u76f8\u4e58\uff09\u4e0e\u5f53\u524d\u50cf\u7d20\u5408\u6210\uff0c\u7ed3\u679c\u4e0e\u6df7\u5408\u5806\u6808\u9876\u90e8\uff08\u5f39\u51fa\uff09\u5408\u6210\uff08Porter Duff\u201c\u7ed3\u675f\u201d\uff09\uff0c\u6210\u4e3a\u65b0\u7684\u5f53\u524d\u50cf\u7d20\u3002\n\u7136\u800c\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u4e00\u822c\u60c5\u51b5\u3002Piet gpu\u6e32\u67d3\u901a\u8fc716x16\u50cf\u7d20\u7684\u5206\u7247\u5de5\u4f5c\u3002\u7ba1\u9053\u4e2d\u7684\u65e9\u671f\u9636\u6bb5\u8ba1\u7b97\u5e73\u94fa\u4e2d\u5e94\u8be5\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u6700\u540e\u9636\u6bb5\uff08\u7cbe\u7ec6\u5149\u6805\u5316\uff09\u5bf9\u5e73\u94fa\u4e2d\u7684\u6240\u6709\u50cf\u7d20\u6267\u884c\u4e00\u7cfb\u5217\u7ed8\u5236\u64cd\u4f5c\u3002\u8fd9\u8ba9\u6211\u4eec\u6709\u673a\u4f1a\u8fdb\u884c\u4e00\u4e9b\u4f18\u5316\u3002\n\u7279\u522b\u662f\uff0c\u7f29\u653e\u5230\u5355\u4e2a\u5206\u5e45\u65f6\uff0c\u526a\u8f91\u8def\u5f84\u53ef\u80fd\u5904\u4e8e\u4e09\u79cd\u72b6\u6001\u4e4b\u4e00\uff1a\u96f6\u8986\u76d6\u3001\u90e8\u5206\u8986\u76d6\u6216\u5b8c\u5168\u8986\u76d6\u3002\u90e8\u5206\u8986\u76d6\u4ec5\u5728\u526a\u8f91\u8def\u5f84\u4e0e\u5e73\u94fa\u76f8\u4ea4\u65f6\u53d1\u751f\u3002\u5b8c\u5168\u8986\u76d6\u9002\u7528\u4e8e\u5b8c\u5168\u4f4d\u4e8e\u526a\u8f91\u8def\u5f84\u5185\u7684\u5206\u7247\uff0c\u96f6\u8986\u76d6\u9002\u7528\u4e8e\u526a\u8f91\u8def\u5f84\u5916\u7684\u5206\u7247\u3002\n\u906e\u7f69\u8ba1\u7b97\u548c\u5408\u6210\u53ea\u9700\u8981\u5bf9\u90e8\u5206\u8986\u76d6\u56fe\u5757\u8fdb\u884c\uff08\u4e0a\u56fe\u4e2d\u663e\u793a\u4e3a\u7070\u8272\uff09\u3002\u5176\u4ed6\u7684\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u6e32\u67d3\u3002\u96f6\u8986\u76d6\u5e73\u94fa\u6291\u5236\u5b50\u8282\u70b9\u7684\u6e32\u67d3\uff0c\u57fa\u672c\u4e0a\u662f\u4eceBeginClip\u5230\u76f8\u5e94\u7684EndClip\u3002\u5168\u8986\u76d6\u74f7\u7816\u57fa\u672c\u4e0a\u662f\u4e0d\u53ef\u64cd\u4f5c\u7684\uff1b\u4e0d\u9700\u8981\u6e32\u67d3\u906e\u7f69\uff0c\u5b50\u8282\u70b9\u7684\u6e32\u67d3\u5c31\u50cf\u6ca1\u6709\u526a\u8f91\u4e00\u6837\u6709\u6548\u3002\n\u4e0a\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0cCPU\u5bf9\u8fb9\u754c\u6846\u8fdb\u884c\u4e86\u8ba1\u7b97\u3002piet gpu\u7684\u4e00\u4e2a\u4e3b\u8981\u76ee\u6807\u662f\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u8ba1\u7b97\u8f6c\u79fb\u5230gpu\u3002\n\u57fa\u672c\u4efb\u52a1\u662f\u4e3a\u6bcf\u4e2a\u7ed8\u5236\u5bf9\u8c61\u6307\u5b9a\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c01\u95ed\u7247\u6bb5\u4ea4\u70b9\u7684\u8fb9\u6846\u77e9\u5f62\u3002\u573a\u666f\u7684\u7ebf\u6027\u5316\u8868\u793a\u5c06\u5305\u542bBeginClip\u5143\u7d20\u548cEndClip\u5143\u7d20\u3002BeginClip\u8fd8\u5c06\u5f15\u7528\u4e00\u6761\u8def\u5f84\uff0c\u8be5\u8def\u5f84\u6709\u4e00\u4e2a\u5173\u8054\u7684\u8fb9\u754c\u6846\u3002\nstack=[viewport_bbox]\u7528\u4e8e\u573a\u666f\u4e2d\u7684\u5143\u7d20\uff1a\u5982\u679c\u5143\u7d20\u662fBeginClip\uff08\u8def\u5f84\uff09\uff1astack\u3002push\uff08intersect\uff09\uff08stack.last\uff08\uff09\uff0cpath\uff09\u3002bbox\uff08\uff09\uff09\u5143\u7d20\u3002\u6709\u6548_bbox=\u5806\u6808\u3002\u6700\u540e\u4e00\u4e2a\uff08\uff09elif\u5143\u7d20\u662fEndClip:element\u3002\u6709\u6548_bbox=\u5806\u6808\u3002\u6700\u540e\u4e00\u4e2a\uff08\uff09\u5806\u6808\u3002pop\uff08\uff09\uff1a\u5143\u7d20\u3002effective_bbox=intersect\uff08stack.last\uff08\uff09\uff0c\u5143\u7d20\uff09\u3002bbox\uff08\uff09\uff09\n\u4f5c\u4e3a\u4e00\u79cd\u987a\u5e8f\u7b97\u6cd5\uff0c\u8fd9\u975e\u5e38\u7b80\u5355\uff0c\u51e0\u4e4e\u5fae\u4e0d\u8db3\u9053\u3002\u6709\u4e00\u5806\u8fb9\u754c\u6846\uff0c\u8be5\u5806\u6808\u7684\u5927\u5c0f\u4ee5\u6700\u5927\u5d4c\u5957\u6df1\u5ea6\u4e3a\u8fb9\u754c\u3002\u5904\u7406\u6bcf\u4e2a\u5143\u7d20\u7684\u6210\u672c\u4e5f\u662fO\uff081\uff09\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\uff0c\u4f60\u771f\u7684\uff0c\u771f\u7684\u4e0d\u60f3\u5728GPU\u4e0a\u8fd0\u884c\u987a\u5e8f\u7b97\u6cd5\u3002\n\u8fd9\u5c31\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u6709\u6ca1\u6709\u529e\u6cd5\u8ba9\u8fd9\u79cd\u7b97\u6cd5\u7684\u5e76\u884c\u7248\u672c\u5728\u5b9e\u9645\u7684GPU\u786c\u4ef6\u4e0a\u9ad8\u6548\u8fd0\u884c\uff1f\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u56f0\u6270\u4e86\u6211\u81f3\u5c11\u4e00\u5e74\u4e86\u3002\u6211\u5f88\u9ad8\u5174\u5730\u8bf4\uff0c\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u6211\u505a\u5230\u4e86\u3002\n\u6211\u7684\u89e3\u51b3\u65b9\u6848\u7684\u6838\u5fc3\u662f\u6211\u6240\u8bf4\u7684\u5806\u6808\u5e7a\u534a\u7fa4\uff0c\u5b83\u662f\u7814\u7a76\u5f97\u5f88\u597d\u7684\u62ec\u53f7\u5339\u914d\u95ee\u9898\u7684\u4e00\u4e2a\u53d8\u4f53\u3002\u6211\u5728\u535a\u5ba2\u4e2d\u63d0\u5230\u4e86\u300a\u91cd\u65b0\u8bbf\u95ee\u5806\u6808\u5e7a\u534a\u7fa4\u300b\u4e2d\u7684\u4e00\u4e2a\u65e9\u671f\u7248\u672c\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u505a\u4e86\u4e00\u4e2a\u6539\u8fdb\u7248\uff0c\u5cf0\u503c\u6027\u80fd\u51e0\u4e4e\u662f5\u500d\uff0c\u53ef\u79fb\u690d\u6027\u4e5f\u66f4\u597d\u3002\u6211\u4e0d\u6253\u7b97\u5728\u8fd9\u7bc7\u535a\u6587\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u6211\u53ea\u60f3\u8bf4\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u901a\u8fc7magic\u83b7\u5f97\uff0c\u5e76\u5c06\u91cd\u70b9\u653e\u57282D\u6e32\u67d3\u95ee\u9898\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u3002\n\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u4f7f\u7528\u62ec\u53f7\u5339\u914d\u7684\u7ed3\u679c\u6765\u8868\u793a\u4e24\u4ef6\u4e8b\u3002\u9996\u5148\uff0c\u6bcf\u4e2aEndClip\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4e0e\u76f8\u5e94BeginClip\u76f8\u540c\u7684\u8def\u5f84\u548c\u8fb9\u754c\u6846\u6570\u636e\u3002\u7279\u522b\u662f\uff0c\u8fd9\u8ba9\u6211\u4eec\u80fd\u591f\u5728\u7c97\u5149\u6805\u5316\u4e2d\u9ad8\u6548\u5730\u8fdb\u884c\u9010\u5757\u4f18\u5316\uff0c\u56e0\u4e3a\u8be5\u7740\u8272\u5668\u4e0d\u9700\u8981\u4fdd\u6301\u663e\u8457\u7684\u72b6\u6001\u3002\u5176\u6b21\uff0c\u5b83\u8ba1\u7b97\u6839\u8def\u5f84\u4e0a\u6240\u6709\u526a\u8f91\u8fb9\u754c\u6846\u7684\u4ea4\u70b9\u3002\u8c22\u5929\u8c22\u5730\uff0c\u77e9\u5f62\u4ea4\u96c6\u662f\u4e00\u4e2a\u5e7a\u534a\u7fa4\uff0c\u6240\u4ee5\u8fd9\u662f\u53ef\u80fd\u7684\n\u672c\u8282\u662f\u4e00\u4e2a\u53ef\u4ee5\u8df3\u8fc7\u7684\u7ec6\u8282\uff0c\u4f46\u5bf9\u4e8e\u7f16\u5199\u66f4\u9ad8\u7ea7GPU\u7b97\u6cd5\u7684\u4eba\u6765\u8bf4\u53ef\u80fd\u4f1a\u611f\u5174\u8da3\u3002\n\u6700\u521d\u7684piet gpu\u8bbe\u8ba1\u4f7f\u7528\u4e86\u4e00\u79cd\u201c\u7ed3\u6784\u9635\u5217\u201d\u65b9\u6cd5\u6765\u63cf\u8ff0\u573a\u666f\uff0c\u5c24\u5176\u662f\u4e00\u4e2a\u5e26\u6709\u56fa\u5b9a\u5927\u5c0f\u5143\u7d20\u7684\u5355\u4e00\u9635\u5217\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u5404\u79cd\u7ed8\u56fe\u5143\u7d20\u7c7b\u578b\u7684\u6807\u8bb0\u5e76\u96c6\uff0c\u5305\u62ec\u8def\u5f84\u6bb5\u3002\u5904\u7406\u8fd9\u4e2a\u6570\u7ec4\u57fa\u672c\u4e0a\u9700\u8981\u4e00\u4e2a\u5927\u7684switch\u8bed\u53e5\u6765\u5904\u7406\u8054\u5408\u4e2d\u7684\u53d8\u91cf\u3002\u6211\u66fe\u8003\u8651\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e0a\u505a\u4e00\u4e2a\u5806\u6808\u5e7a\u534a\u7fa4\uff0c\u4f46\u975e\u5e38\u62c5\u5fc3\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8ba1\u7b97\u5806\u6808\u5e7a\u534a\u7fa4\u7684\u6027\u80fd\u6210\u672c\u3002\u6211\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u975e\u5e38\u5feb\u901f\u7684\u5806\u6808monoid\u5b9e\u73b0\uff0c\u4f46\u5373\u4f7f\u5982\u6b64\uff0c\u6211\u8fd8\u662f\u4fee\u6539\u4e86\u67b6\u6784\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898\u4e86\u3002\n\u65b0\u7684\u4f53\u7cfb\u7ed3\u6784\uff08\u5728\u65b0\u5143\u7d20\u5904\u7406\u7ba1\u9053\u95ee\u9898\u4e2d\u6709\u8be6\u7ec6\u63cf\u8ff0\uff09\u66f4\u591a\u5730\u662f\u4e00\u79cd\u201c\u9635\u5217\u7ed3\u6784\u201d\u65b9\u6cd5\uff0c\u7531\u4e8e\u5176\u6027\u80fd\u4f18\u52bf\uff0c\u5728\u56fe\u5f62\u548c\u6e38\u620f\u4e16\u754c\u4e2d\u975e\u5e38\u6d41\u884c\u3002\u6bcf\u4e2a\u4e3b\u8981\u6570\u636e\u7c7b\u578b\u90fd\u6709\u81ea\u5df1\u7684\u6d41\u3002\u6b64\u5916\uff0c\u8be5\u7c7b\u578b\u7684\u5927\u90e8\u5206\u903b\u8f91\u90fd\u88ab\u8f6c\u79fb\u5230\u81ea\u5df1\u7684\u7740\u8272\u5668\u8c03\u5ea6\u4e2d\uff0c\u8be5\u8c03\u5ea6\u53ea\u5728\u8be5\u7c7b\u578b\u7684\u5bf9\u8c61\u4e0a\u5927\u91cf\u5de5\u4f5c\uff0c\u6ca1\u6709\u5927\u7684\u5f00\u5173\u8bed\u53e5\u3002\u4e3a\u4e86\u5c06\u8fd9\u4e9b\u6570\u636e\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u6570\u636e\u6d41\u4e2d\u4f7f\u7528\u4e00\u7ec4\u7d22\u5f15\uff0c\u8fd9\u4e9b\u7d22\u5f15\u662f\u4f7f\u7528\u8ba1\u6570\u7684\u524d\u7f00\u548c\u8ba1\u7b97\u7684\u3002\n\u5177\u4f53\u6765\u8bf4\uff0cdraw object stage\u6267\u884c\u6d41\u538b\u7f29\u5e76\u5199\u5165\u526a\u8f91\u6d41\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ec5\u5305\u542bBeginClip\u548cEndClip\u5bf9\u8c61\u7684\u6570\u7ec4\u3002\u526a\u8f91\u7d22\u5f15\u662f\u6307\u5411\u8be5\u6d41\u7684\u7d22\u5f15\u3002\u540c\u65f6\uff0c\u5b83\u4e3a\u6bcf\u4e2a\u7ed8\u5236\u5bf9\u8c61\u6307\u5b9a\u4e00\u4e2a\u526a\u8f91\u7d22\u5f15\u3002\u7531\u540c\u4e00\u526a\u8f91\u5305\u56f4\u7684\u4e00\u7cfb\u5217\u7ed8\u5236\u5bf9\u8c61\u90fd\u5177\u6709\u76f8\u540c\u7684\u526a\u8f91\u7d22\u5f15\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u201cclips\u201d\u6570\u7ec4\u8868\u793a\u7531draw object stage\u5199\u5165\u7684\u526a\u8f91\u6d41\u3002\u5c06\u573a\u666f\u7684\u4e0d\u540c\u90e8\u5206\u5173\u8054\u5728\u4e00\u8d77\u7684\u7bad\u5934\u4e5f\u4f1a\u5728\u201c\u7ed8\u5236\u5bf9\u8c61\u201d\u9636\u6bb5\u4f7f\u7528\u524d\u7f00sum\u8fdb\u884c\u8ba1\u7b97\u3002\n\u7136\u540e\uff0c\u526a\u8f91\u9636\u6bb5\u5bf9\u526a\u8f91\u6d41\u4e2d\u7684\u526a\u8f91\u8fdb\u884c\u62ec\u53f7\u5339\u914d\u548cbbox\u76f8\u4ea4\u3002\u5b8c\u6210\u540e\uff0c\u5c06\u4e3a\u526a\u8f91\u6d41\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u6307\u5b9a\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u4e0e\u8def\u5f84\u5904\u7406\u9636\u6bb5\u5df2\u8ba1\u7b97\u7684\u526a\u8f91\u8def\u5f84\u7684\u8fb9\u754c\u6846\u76f8\u4ea4\uff0c\u4ee5\u751f\u6210\u526a\u8f91\u8fb9\u754c\u6846\u3002\u5b83\u8fd8\u5c06EndClip\u4e2d\u7684\u8def\u5f84\u8bbe\u7f6e\u4e3a\u5f15\u7528\u4e0e\u76f8\u5e94BeginClip\u76f8\u540c\u7684\u8def\u5f84\u3002\n\u56e0\u6b64\uff0c\u526a\u8f91\u9636\u6bb5\u7684\u5de5\u4f5c\u4e0e\u573a\u666f\u4e2d\u526a\u8f91\u7684\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u800c\u4e0d\u662f\u4e0e\u5bf9\u8c61\u7684\u603b\u6570\u6210\u6b63\u6bd4\u3002\u8fd9\u9879\u5de5\u4f5c\u9700\u8981\u5927\u91cf\u7684\u526a\u8f91\u624d\u80fd\u5728\u4e2a\u4eba\u8d44\u6599\u4e2d\u5927\u91cf\u5c55\u793a\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u6d41\u538b\u7f29\u6280\u672f\uff0c\u8f6c\u5411\u4e86\u66f4\u7d27\u51d1\u7684\u8def\u5f84\u7f16\u7801\uff0c\u6211\u8ba1\u5212\u5c06\u5176\u5e94\u7528\u5230\u7ba1\u9053\u7684\u5176\u4ed6\u90e8\u5206\u3002\n\u526a\u8f91\u7684\u4e00\u4e2a\u5e94\u7528\u662f\u5728UI\u4e2d\u5b9a\u4e49\u6eda\u52a8\u89c6\u56fe\u7684\u89c6\u53e3\u3002\u8fd9\u53ef\u4ee5\u5728piet gpu\u4e2d\u8868\u793a\u4e3a\u526a\u8f91\u8282\u70b9\uff0c\u8f6c\u6362\u8282\u70b9\u4f5c\u4e3a\u76f4\u63a5\u5b50\u8282\u70b9\uff0c\u7136\u540e\u6eda\u52a8\u5185\u5bb9\u4f5c\u4e3a\u8f6c\u6362\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\u4e0etransform\u8282\u70b9\u5173\u8054\u7684\u5e73\u79fb\u63a7\u5236\u6eda\u52a8\u4f4d\u7f6e\uff08\u8fd9\u79cd\u67b6\u6784\u4e5f\u53ef\u4ee5\u8fdb\u884c\u7f29\u653e\uff09\u3002\npiet gpu\u7684\u4e00\u4e2a\u8bbe\u8ba1\u76ee\u6807\u662f\uff0c\u8fd9\u4e9b\u5185\u5bb9\u4e2d\u7684\u5927\u90e8\u5206\u53ef\u4ee5\u88ab\u7f16\u7801\u4e00\u6b21\u5e76\u4fdd\u7559\u4e0b\u6765\uff0c\u56e0\u6b64\uff0c\u4e00\u4e2a\u5177\u6709\u4e0d\u540c\u6eda\u52a8\u4f4d\u7f6e\u7684\u65b0\u573a\u666f\u53ef\u4ee5\u5728CPU\u7aef\u7528\u5f88\u5c11\u7684\u5de5\u4f5c\u91cd\u65b0\u7ec4\u88c5\u3002\u5728GPU\u65b9\u9762\uff0c\u8ba1\u7b97\u526a\u8f91\u8fb9\u754c\u6846\u9700\u8981\u76f8\u5f53\u5c0f\u7684\u5de5\u4f5c\u91cf\uff0c\u8fd9\u5c06\u80fd\u591f\u5728\u7ba1\u9053\u7684\u65e9\u671f\u5254\u9664\u5bf9\u8c61\uff0c\n\u663e\u7136\uff0c\u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u9002\u5ea6\u6eda\u52a8\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u8d44\u6e90\u90fd\u9a7b\u7559\u5728GPU\u4e0a\u662f\u53ef\u884c\u7684\u3002\u5bf9\u4e8e\u5de8\u5927\u7684\u6eda\u52a8\u7a97\u53e3\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u865a\u62df\u5316\uff0c\u5728\u5b83\u4eec\u6eda\u52a8\u8fdb\u51fa\u89c6\u56fe\u65f6\u4ea4\u6362\u8d44\u6e90\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u503c\u5f97\u63a2\u7d22\u7684\u65b9\u5411\uff0c\u56e0\u4e3a\u5e73\u6ed1\u6eda\u52a8\u4ecd\u7136\u662fUI\u5de5\u5177\u5305\u7684\u4e00\u4e2a\u6311\u6218\u3002\n\u8fd9\u9879\u5de5\u4f5c\u53ef\u80fd\u4e0e\u5927\u89c4\u6a21\u5e76\u884c\u77e2\u91cf\u56fe\u5f62\u6700\u4e3a\u76f8\u4f3c\u3002\u6211\u4eec\u90fd\u5c06\u573a\u666f\u8868\u793a\u4e3a\u4e00\u68f5\u6241\u5e73\u7684\u6811\uff0c\u5e76\u5141\u8bb8\u4efb\u610f\u5d4c\u5957\u6df1\u5ea6\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u7684\u6811\u7b97\u6cd5\u8981\u7b80\u5355\u5f97\u591a\uff1a\u5bf9\u4e8en\u4e2a\u5d4c\u5957\u6df1\u5ea6\uff0c\u4ed6\u4eec\u8fdb\u884cn\u6b21\u626b\u63cf\uff0c\u6bcf\u4e2a\u626b\u63cf\u5904\u7406\u4e00\u4e2a\u5d4c\u5957\u7ea7\u522b\u3002\u8fd9\u9879\u5de5\u4f5c\u4f7f\u7528\u4e86\u4e00\u79cd\u65b0\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e0d\u51cf\u901f\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4efb\u610f\u5d4c\u5957\u6df1\u5ea6\u3002\uff08\u4f8b\u5982\uff0c\u5de5\u4f5c\u7cfb\u6570\u4e0e\u6811\u7684\u6df1\u5ea6\u6210\u6bd4\u4f8b\u7684GPU\u6811\u7b97\u6cd5\u5e76\u4e0d\u7f55\u89c1\uff09\n\u5728\u66f4\u4f20\u7edf\u7684GPU\u6e32\u67d3\u5668\u4e2d\uff0c\u8fdb\u884c\u6df7\u5408\u7684\u4e00\u822c\u65b9\u6cd5\u662f\u5206\u914d\u4e00\u4e2a\u4e34\u65f6\u7eb9\u7406\uff0c\u6e32\u67d3\u5230\u8be5\u7eb9\u7406\u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u5728\u6e32\u67d3\u76ee\u6807\u4e2d\u7ed8\u5236\u4e00\u4e2a\u56db\u8fb9\u5f62\u8fdb\u884c\u5408\u6210\uff0c\u4ece\u4e2d\u95f4\u7eb9\u7406\u8fdb\u884c\u91c7\u6837\u3002GPU\u5bf9\u8fd9\u7c7b\u5de5\u4f5c\u8fdb\u884c\u4e86\u9ad8\u5ea6\u4f18\u5316\uff0c\u786c\u4ef6\u652f\u6301\u7eb9\u7406\u91c7\u6837\u548c\u201c\u5149\u6805\u8fd0\u7b97\u201d\u5408\u6210\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u5b83\u4e5f\u9700\u8981\u5230\u4e3b\u5185\u5b58\u7684\u6d41\u91cf\u3002\u6211\u76f8\u4fe1\u5b8c\u5168\u4e0d\u7528\u505a\u8fd9\u9879\u5de5\u4f5c\u4f1a\u66f4\u5feb\u3002\n\u8fd9\u91cc\u7684\u6280\u672f\u7c7b\u4f3c\u4e8e\u9a6c\u7279\u00b7\u57fa\u7279\uff08Matt Keeter\uff09\u5bf9\u590d\u6742\u5c01\u95ed\u5f62\u5f0f\u9690\u5f0f\u66f2\u9762\u7684\u5927\u89c4\u6a21\u5e76\u884c\u6e32\u67d3\u3002\u526a\u88c1\u57fa\u672c\u4e0a\u4e0e\u6784\u9020\u51e0\u4f55\uff08\u65e0\u8bba\u662f2D\u8fd8\u662f3D\uff09\u4e2d\u7684\u76f8\u4ea4\u76f8\u540c\uff0c\u8be5\u8bba\u6587\u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f\u6765\u4f18\u5316\u78c1\u5e26\uff0c\u5728\u6bcf\u4e2a\u533a\u57df\u7684\u57fa\u7840\u4e0a\u5229\u7528\u4ee3\u6570\u7b80\u5316\u3002\u8fd9\u4e9b\u6280\u672f\u66f4\u901a\u7528\uff0c\u800c\u8fd9\u9879\u5de5\u4f5c\u66f4\u4e13\u95e8\u7528\u4e8e2D\u6e32\u67d3\u4efb\u52a1\u3002\n\u73b0\u5728\u5df2\u7ecf\u5f88\u8fc7\u65f6\u4e86\uff0c\u4f46\u662f\u4e9a\u5f53\u00b7\u5170\u5229\u5173\u4e8e\u94ec\u5143\u7d20\u526a\u8f91\u7684\u535a\u6587\u5f88\u6709\u610f\u601d\u3002\u8ba8\u8bba\u7684\u4e3b\u8981\u95ee\u9898\u662f\u201c\u5408\u5e76\u5de5\u4ef6\u201d\uff0calpha\u901a\u9053\u5408\u6210\u526a\u88c1\u65b9\u6cd5\u6ca1\u6709\u5b8c\u5168\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u5b83\u4ecd\u7136\u662f\u6807\u51c6\u6280\u672f\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5b83\u6216\u591a\u6216\u5c11\u53d7\u5230W3C\u5408\u6210\u548c\u6df7\u5408\u89c4\u8303\u548cHTML\u753b\u5e03\u7ed8\u5236\u6a21\u578b\u7684\u5f3a\u5236\u3002\n\u60a8\u662f\u5426\u7ef4\u62a4\u4e86\u652f\u6301\u6709\u8da3\u526a\u8f91\u76842D\u6e32\u67d3\u5668\uff1f\u6709\u6ca1\u6709\u6211\u9519\u8fc7\u7684\u597d\u6587\u7ae0\uff1f\u8ba9\u6211\u77e5\u9053\uff0c\u6211\u5f88\u4e50\u610f\u6dfb\u52a0\u94fe\u63a5\u3002\n\u8fd9\u7bc7\u535a\u6587\u4e2d\u7f3a\u5c11\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u5c24\u5176\u662f\u6027\u80fd\u6570\u636e\u3002\u73b0\u5728\uff0c\u6211\u5728piet gpu\u7684\u91cd\u70b9\u662f\u4f7f\u67b6\u6784\u6b63\u786e\u3002\u611f\u89c9\u5c31\u50cf\u662f\u5728\u6c47\u5408\uff0c\u8bb8\u591a\u68d8\u624b\u7684\u95ee\u9898\u6b63\u5728\u5f97\u5230\u89e3\u51b3\u3002\n\u73b0\u5728\u526a\u8f91\u7684\u57fa\u7840\u8bbe\u65bd\u5df2\u7ecf\u5230\u4f4d\uff0c\u6df7\u5408\u5e94\u8be5\u76f8\u5bf9\u7b80\u5355\u3002\u9700\u8981\u505a\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u662f\u5728\u7cbe\u7ec6\u5149\u6805\u5316\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u6df7\u5408\u903b\u8f91\uff0c\u5f53\u7136\u8fd8\u6709\u901a\u8fc7\u7ba1\u9053\u8f93\u9001\u76f8\u5173\u5143\u6570\u636e\u3002\u518d\u52a0\u4e0a\u5f84\u5411\u6e10\u53d8\u548c\u626b\u63a0\u6e10\u53d8\uff0c\u662f\u652f\u6301\u4e0b\u4e00\u4e2a\u91cd\u5927\u91cc\u7a0b\u7891COLRv1\u8868\u60c5\u7b26\u53f7\u6240\u9700\u7684\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\u3002", "note_en": "Recently piet-gpu has taken a big step towards realizing its  vision, moving the computation of path clipping from partially being done on the CPU to entirely being done on the GPU.\n This post explains how that works. It\u2019s been quite a journey - I actually started a draft of this more than a year ago. Since then, I\u2019ve had to come up with a fundamental new parallel algorithm. It\u2019s finally done. I think clipping is very much at the heart of what makes piet-gpu different than other 2D rendering engines.\n  The basic idea of clipping is simple, but it has a profound impact on the overall imaging model. For one, it induces a  tree structure, while drawing without clipping can be seen as a linear sequence of layers. There are different ways of implementing pure vector clipping, but the one I\u2019ve gone with generalizes to  blending, which is next.\n Clipping with a vector path affects the drawing of all  child objects of the clip node. Points inside the path are drawn, and points outside the path are not.\n  For pure vector path clipping, the effective clip applied to each (leaf) drawing node is the intersection of all clip paths up the tree. Thus, one viable implementation is to do this path intersection in vector space. However, boolean path operations are tricky to implement, and only CPU implementations are known; moving them to the GPU would be difficult, to say the least.\n Rather, we treat (antialiased) clipping as a  blend operation \u2013 in fact, it is an instance of the the  Porter-Duff \u201csource in\u201d composition operator. Conceptually, the children of a clip are rendered into a temporary, intially clear buffer, the clip mask is rendered into an alpha channel, then the temporary buffer is composited on the background, the alpha channel multiplied by the mask. This approach can be done fully on the GPU, and the blending operations generalize.\n Clips can nest arbitrarily; a clip node can be the child of another clip node. Thus, a full 2D scene is effectively a  tree, which profoundly affects the way drawing is done.\n  A common technique in 2D rendering is to assign a  bounding box to each drawing operation. The bounding box is an enclosing rectangle (hopefully tight), so that drawing operations affect only pixels inside the rectangle. For rendering any subregion of the target surface, any objects whose bounding box does not intersect that bounding box may be ignored. Piet-gpu uses bounding boxes extensively to organize parallel drawing, first by 256x256 pixel bins, then 16x16 pixel tiles. Bounding boxes exploit the fact that most 2D drawing is  sparse, in that most draw objects don\u2019t touch most tiles.\n Bounding boxes of course interact with clipping. Each clip node in the tree has a bounding box, computed from the corresponding clip path. Then, the bounding boxes for all descendants in the tree is intersected with that bounding box. Another way of phrasing this is that the clipped bounding box for a draw object is the object\u2019s own bounding box intersected with the bounding boxes of all clip paths in the path from that node to the root of the tree.\n Computing these bounding boxes is less work than rendering the objects, but is not free. In particular, we\u2019d like to do that work on the GPU rather than the CPU.\n  Things get even more interesting with per-tile optimization. The piet-gpu rendering pipeline is organized as a series of stages, finally writing a per-tile command list (sometimes called \u201ctape\u201d) for each 16x16 tile in the target. The last stage is \u201cfine rasterization,\u201d which plays these commands for all pixels in the tile. Within a tile there is no control flow; all commands are evaluated for all pixels.\n In the general case, clip is rendered as follows. The fine rasterizer maintains a bunch of per-pixel state, notably a current pixel and a blend stack. The current pixel is initially clear (alpha = 0) or a background color, and ordinary draw objects are composited onto it (generally using  Porter-Duff \u201cover\u201d). A  BeginClip operation pushes the current pixel on a  blend stack. The children of the clip are rendered, compositing into the current pixel. Then, at a matching  EndClip, the clip mask is rendered into an alpha mask, that\u2019s composited with the current pixel using \u201csource in\u201d (basically multiplying the alpha with the mask), and that result is composited (Porter-Duff \u201cover\u201d) with the top of the blend stack (which is popped), becoming the new current pixel.\n Much of the time, we don\u2019t need the general case, however. Piet-gpu rendering works by 16x16 pixel tiles. Earlier stages in the pipeline computes what should happen within a tile, and the final stage (fine rasterization) performs a sequence of drawing operations for all pixels in the tile. This gives us the opportunity to do some optimization.\n In particular, zooming into a single tile, a clip path may be in one of 3 states: zero coverage, partial coverage, or full coverage. Partial coverage only happens with the clip path intersects the tile. Full coverage is for tiles entirely within the clip path, and zero coverage is for tiles outside the clip path.\n  The mask computation and compositing only needs to happen for the partial coverage tiles (shown as gray in the above figure). The others can be rendered much more efficiently. Zero coverage tiles suppress the rendering of child nodes, basically from the  BeginClip to the corresponding  EndClip. And full coverage tiles are basically a no-op; the mask need not be rendered, and child nodes are rendered as if there were no clip in effect.\n  A previous iteration had accounting of bounding boxes done by CPU. A major goal of piet-gpu is to move as much computation as possible to the GPU.\n The fundamental task is assigning to each draw object a bounding box rectangle that incorporates the intersection of all enclosing clips. A linearized representation of the scene will have a  BeginClip element and an  EndClip element. The  BeginClip will also reference a path, and that path has an associated bounding box.\n  stack  =  [ viewport_bbox ] for  element  in  scene :  if  element  is  BeginClip ( path ):  stack . push ( intersect ( stack . last (),  path . bbox ()))  element . effective_bbox  =  stack . last ()  elif  element  is  EndClip :  element . effective_bbox  =  stack . last ()  stack . pop ()  else :  element . effective_bbox  =  intersect ( stack . last (),  element . bbox ())\n As a sequential algorithm, this is very straightforward, almost trivial. There\u2019s a stack of bounding boxes, and the size of that stack is bounded by the maximum nesting depth. The cost to processing each element is O(1) as well. The only problem is, you really, really don\u2019t want to run a sequential algorithm on a GPU.\n That raises a question: is there a way to make a parallel version of this algorithm, one that runs efficiently on actual GPU hardware? That question has been a major obsession of mine for at least a year. And I am pleased to say, the answer is yes. I\u2019ve done it.\n The core of my solution is what I call the stack monoid, which is a variant on the well-studied parentheses matching problem. I blogged about an earlier version in  stack monoid revisited. Since then, I\u2019ve made an improved version, with almost 5x peak performance and better portability as well. I\u2019m not going to go into the details in this blog post, rather I will just say the solution is available by magic, and focus on the application to the 2D rendering problem.\n  Basically, we use the result of parentheses matching for two things. First, each  EndClip is able to access the same path and bounding box data as the corresponding  BeginClip. In particular, that lets us do the per-tile optimization in coarse rasterization efficiently, as that shader doesn\u2019t need to maintain significant state. Second, it computes the intersection of all clip bounding boxes on the path to the root. Rectangle intersection is, thankfully, a monoid, so it is possible\n  This section is a detail that can be skipped, but may be of interest to people writing fancier GPU algorithms.\n The  original piet-gpu design used an \u201carray of structures\u201d approach to scene description, in particular a single array with fixed size elements, each of which was a tagged union of various drawing element types, including path segments. Processing this array basically requires a large switch statement to deal with the variants in the union. I had contemplated doing a stack monoid over this array, but was very worried about the performance cost of computing the stack monoid for every element in this array. I now have a  very fast stack monoid implementation, but even so have reworked the architecture so this cannot be a problem.\n The new architecture (described in some detail in the  new element processing pipeline issue) is more of a \u201cstructure of arrays\u201d approach, which is extremely popular in the graphics and game world due to its performance advantage. Every major datatype gets its own stream. Further, as much of the logic for that type gets moved into its own shader dispatch, which works in bulk on only that type of object, with no big switch statement. To stitch these together, we use a bunch of indices into these streams, which are computed using prefix sum of the counts.\n  Specifically, the draw object stage does a stream compaction and writes a  clip stream, which is an array of just the  BeginClip and  EndClip objects. A clip index is an index into this stream. At the same time, it assigns a clip index to each draw object. A sequence of draw objects enclosed by the same clip all have the same clip index. In the above diagram, the \u201cclips\u201d array represents the clip stream written by the draw object stage. The arrows associating the different parts of the scene together are also computed in the draw object stage using prefix sum.\n The clip stage then does parenthesis matching and bbox intersection of the clips in the clip stream. When it\u2019s done, it assigns a bounding box to each object in the clip stream, intersecting the bounding boxes of the clip paths that have already been computed by the path processing stage, to produce clip bounding boxes. It also sets the path in  EndClip to refer to the same path as the corresponding  BeginClip.\n Thus, the work of the clip stage is proportional to the number of clips in the scene, not to the total number of objects. It would take an enormous number of clips for this work to show up to any significant amount in profiles. We used similar stream compaction techniques to move to a more compact  path encoding, and I plan to apply it to other parts of the pipeline as well.\n  One application of clipping is to define the viewport of a scrolled view in a UI. This can be represented in piet-gpu as a clip node with a transform node as a direct child, then the scrolled contents as children of the transform node. The translation associated with the transform node controls the scroll position (this architecture could do scaling as well).\n A design goal of piet-gpu is the most of these contents can be encoded  once and retained, so a new scene with a different scroll position could reassembled with very little work CPU-side. On the GPU side, there would be a fairly small amount of work to compute clip bounding boxes, which would be able to cull objects quite early in the pipeline,\n Obviously this approach will work for moderate scrolling, where it is practical to have all the resources resident on the GPU. For huge scrolled windows, some virtualization is needed, with resources swapped in and out as they scroll into and out of view. Even so, this is an appealing direction to explore, as smooth scrolling is still a challenge for UI toolkits.\n  This work is perhaps most similar to  Massively Parallel Vector Graphics. We both represent the scene as a flattened tree, and allow arbitrary nesting depth. However, their tree algorithm is much more simplistic: for a nesting depth of n, they do n scans, each addressing one level of nesting. This work uses a new algorithm that allows arbitrary nesting depth with no slowdown. (GPU tree algorithms with a work factor proportional to the depth of the tree are not unusual; for example)\n In a more traditional GPU renderer, the general way to do blends is to allocate a temporary texture, render into that, and then composite by drawing a quad into the render target, sampling from the intermediate texture. GPUs are very highly optimized for this sort of work, with hardware support for texture sampling and \u201craster ops\u201d for compositing, but even so it requires traffic to main memory. I believe it\u2019s faster not to have to do the work at all.\n The techniques here are similar to those in Matt Keeter\u2019s  Massively Parallel Rendering of Complex Closed-Form Implicit Surfaces. Clipping is basically the same as intersection in constructive geometry (whether 2D or 3D), and that paper uses similar techniques to optimize a tape, taking advantage of algebraic simplifications on a per-region basis. Those techniques are more general, while this work is more specialized to 2D rendering tasks.\n It\u2019s fairly dated by now, but Adam Langley\u2019s blog post on  clipping in Chromium makes for interesting reading. The main problem being discussed is \u201cconflation artifacts,\u201d which are not fully addressed by the alpha-channel compositing approach to clipping, but even so it remains the standard technique, largely because it\u2019s more or less mandated by the W3C  compositing and blending spec and the  HTML canvas drawing model.\n Do you maintain a 2D renderer with interesting clip support? Are there good writeups somewhere I\u2019ve missed? Let me know, and I\u2019ll be happy to add links.\n  There are some things missing from this blog post, notably performance numbers. Right now, my focus in piet-gpu is to get the architecture right. It feels like that\u2019s converging, many of the hard problems are being solved.\n Now that the infrastructure for clipping is in place, blending should be relatively straightforward. Most of what needs to happen is additional blending logic in the fine rasterization, plus of course plumbing the relevant metadata through the pipeline. That, plus radial and sweep gradients, are the two major pieces need to support  COLRv1 emoji, the next big milestone.", "posttime": "2022-02-25 23:08:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "piet,gpu,\u526a\u8f91", "title": "Piet GPU\u8fdb\u5ea6\uff1a\u526a\u8f91", "title_en": "Piet-GPU Progress: Clipping", "transed": 1, "url": "https://raphlinus.github.io/rust/graphics/gpu/2022/02/24/piet-gpu-clipping.html", "via": "", "real_tags": ["piet", "gpu", "\u526a\u8f91"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075005, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JLess\u5c06\u6f02\u4eae\u5730\u6253\u5370JSON\u5e76\u5e94\u7528\u8bed\u6cd5\u9ad8\u4eae\u663e\u793a\u3002\u5728\u63a2\u7d22\u5916\u90e8API\u6216\u8c03\u8bd5\u8bf7\u6c42\u6709\u6548\u8d1f\u8f7d\u65f6\u4f7f\u7528\u5b83\u3002\n\u5c55\u5f00\u548c\u6298\u53e0\u5bf9\u8c61\u548c\u6570\u7ec4\uff0c\u4ee5\u638c\u63e1JSON\u6587\u6863\u7684\u9ad8\u7ea7\u548c\u4f4e\u7ea7\u7ed3\u6784\u3002JLess\u6709\u4e00\u5927\u5957vim-Inspired\u547d\u4ee4\uff0c\u4f7f\u63a2\u7d22\u6570\u636e\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002\nJLess\u652f\u6301\u57fa\u4e8e\u5168\u6587\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u641c\u7d22\u3002\u5feb\u901f\u627e\u5230\u60a8\u9700\u8981\u7684\u6570\u636e&#39\uff1b\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u957f\u5b57\u7b26\u4e32\u4e2d\u7684\u503c\uff0c\u6216\u8005\u5728\u540c\u4e00\u5bf9\u8c61\u952e\u7684\u503c\u4e4b\u95f4\u8df3\u8f6c\u3002\n\u5982\u679c\u5b89\u88c5\u4e86Rust toolchain\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528cargo\u76f4\u63a5\u4ece\u6e90\u4ee3\u7801\u5b89\u88c5\uff1a", "note_en": "JLess will pretty print your JSON and apply syntax highlighting.Use it when exploring external APIs, or debugging request payloads.\n Expand and collapse Objects and Arrays to grasp the high- and low-levelstructure of a JSON document. JLess has a large suite of vim-inspiredcommands that make exploring data a breeze.\n JLess supports full text regular-expression based search. Quickly findthe data you&#39;re looking for in long String values, or jump betweenvalues for the same Object key.\n    If you have a Rust toolchain installed, you can also install directly from source using cargo:", "posttime": "2022-02-25 23:07:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u547d\u4ee4\u884c,command,json", "title": "Jless\u2013\u547d\u4ee4\u884cJSON\u67e5\u770b\u5668\uff08\u7528Rust\u7f16\u5199\uff09", "title_en": "Jless \u2013 a command-line JSON viewer (written in Rust)", "transed": 1, "url": "https://jless.io/", "via": "", "real_tags": ["rust", "\u547d\u4ee4\u884c", "command", "json"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075003, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u54e5\u5fb7\u5c14\u7684\u7b2c\u4e00\u4e2a\u4e0d\u5b8c\u5168\u6027\u5b9a\u7406\u6307\u51fa\uff0c\u6709\u4e9b\u6570\u5b66\u9648\u8ff0\u65e2\u4e0d\u80fd\u88ab\u8bc1\u660e\uff0c\u4e5f\u4e0d\u80fd\u88ab\u53cd\u9a73\u3002\u4ed6\u7684\u8bc1\u660e\u76f8\u5f53\u96be\u7406\u89e3\u2014\u2014\u5b83\u6d89\u53ca\u7d20\u6570\u3001\u56e0\u5f0f\u5206\u89e3\uff0c\u6240\u6709\u8fd9\u4e9b\u6570\u5b57\u7406\u8bba\u3002\u54e5\u5fb7\u5c14\u7684\u8bc1\u660e\u5fc5\u987b\u5f88\u590d\u6742\uff0c\u56e0\u4e3a\u57281931\u5e74\uff0c\u8ba1\u7b97\u673a\u7b97\u6cd5\u8fd8\u6ca1\u6709\u771f\u6b63\u88ab\u53d1\u660e\u51fa\u6765\u3002\n\u56fe\u7075\u673a\u76f4\u5230\u4e94\u5e74\u540e\u76841936\u5e74\u624d\u88ab\u53d1\u660e\u3002\u5f53\u8bc1\u660e\u505c\u987f\u95ee\u9898\u662f\u4e0d\u786e\u5b9a\u7684\u2014\u2014\u6ca1\u6709\u7a0b\u5e8f\u53ef\u4ee5\u51b3\u5b9a\u53e6\u4e00\u4e2a\u9879\u76ee\u662f\u5426\u4f1a\u5b8c\u6210\u2014\u2014\u54e5\u5fb7\u5c14\u7684\u5de5\u4f5c\u7ed9\u4e86\u4ed6\u7075\u611f\u3002\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u54e5\u5fb7\u5c14\u00b7\u514b\u5229\u5c14\u5728\u56fe\u7075\u4e4b\u524d\u5c31\u5f00\u59cb\u4e86\u6bd4\u8d5b\u3002\u4f46\u5728\u73b0\u4ee3\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5df2\u7ecf\u7406\u89e3\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u201d\u6982\u5ff5\u7684\u4eba\u6765\u8bf4\uff0c\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u7406\u89e3\u8fd9\u4e2a\u7406\u8bba\u8981\u5bb9\u6613\u5f97\u591a\u3002\u5148\u662f\u56fe\u7075\uff0c\u7136\u540e\u662f\u54e5\u5fb7\u5c14\u3002\n\u8fd9\u79cd\u7cbe\u82f1\u7684\u201c\u5143\u7f16\u7a0b\u201d\u6280\u672f\u4f7f\u7528\u7a0b\u5e8fwc\u6765\u544a\u8bc9\u60a8my_\u7a0b\u5e8f\u4e2d\u6709\u591a\u5c11\u884c\u4ee3\u7801\u3002sh\u811a\u672c\u3002\n\u4f60\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e0a\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5728\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u4e0a\u8fd0\u884c\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u77e5\u9053\u5728my_\u7a0b\u5e8f\u4e2d\u8ba1\u7b97\u4ee3\u7801\u884c\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u4e0a\u6d77\uff1a\n\u73b0\u5728\u60f3\u8c61\u4e00\u4e2a\u540d\u4e3abehave_\u7684\u811a\u672c\u3002sh.\u5f53\u4f60\u5728\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u4e0a\u8fd0\u884c\u5b83\u65f6\uff0c\u5b83\u4f1a\u8f93\u51fa\u4e0e\u8be5\u7a0b\u5e8f\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff1a\n\u8fd9\u53ef\u4ee5\u8f93\u51fa\u4efb\u4f55\u4e1c\u897f\uff0c\u53ea\u8981\u5b83\u4e0e\u8f93\u51fa\u4e0d\u540c/\u6211\u7684\u8bfe\u7a0b\u3002\u5618/\u6211\u7684\u8f93\u5165\u3002txt\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u5267\u672c\uff0c\u6096\u8bba\u3002\u5618\u6211\u7684\u5267\u672c\u3002sh\u7684\u884c\u4e3a\u4e0e\u8fd0\u884c\u6211\u7684_\u811a\u672c\u4e0d\u540c\u3002\u5618\u6211\u7684\u5267\u672c\u3002sh.\u90a3\u4e48\u5f53\u4f60\u8dd1\u6b65\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462/\u77db\u76fe\u7684\u4eba\u5618/\u77db\u76fe\u7684\u4eba\u5618\uff1f\u8fd9\u5728\u903b\u8f91\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4e00\u5b9a\u4e0d\u53ef\u80fd\u5199\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u5618\u3002\n\u8981\u8868\u73b0\u51fa\u4e0e\u5176\u4ed6\u811a\u672c\u4e0d\u540c\u7684\u884c\u4e3a\u4f3c\u4e4e\u5e76\u975e\u4e0d\u53ef\u80fd\u3002\u8fd9\u79cd\u5929\u771f\u7684\u505a\u6cd5\u4f1a\u5e26\u6765\u4ec0\u4e48\uff1f\n\u5f53\u4f60\u8dd1\u7684\u65f6\u5019/\u77db\u76fe\u7684\u4eba\u5618/\u77db\u76fe\u7684\u4ebash\uff0c\u811a\u672c\u53ea\u662f\u8fdb\u5165\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u8f93\u51fa\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6211\u7684\u5de5\u4f5c\u2014\u2014\u4ee3\u7801\u5728GitHub\u4e0a\u3002\u5b83\u4e4b\u6240\u4ee5\u5f88\u96be\u4e0e\u5176\u4ed6\u811a\u672c\u6709\u6240\u4e0d\u540c\uff0c\u662f\u56e0\u4e3a\u5f53\u5b83\u8fdb\u5165\u4e00\u4e2a\u957f\u800c\u5b89\u9759\u7684\u5faa\u73af\u65f6\uff0c\u4f60\u65e0\u6cd5\u5224\u65ad\u8fd9\u4e2a\u5faa\u73af\u662f\u5426\u771f\u7684\u662f\u65e0\u9650\u7684\u3002\n\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u811a\u672c\u6682\u505c\u3002\u5982\u679c\u80fd\u591f\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u4f1a\u505c\u6b62\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u7f16\u5199\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u5618\u3002\n\u6240\u4ee5\u5199\u505c\u987f\u80af\u5b9a\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u8fd9\u5c31\u662f\u505c\u6b62\u95ee\u9898\u7684\u4e0d\u53ef\u80fd\u6027\uff0c\u56fe\u7075\u57281936\u5e74\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\n\u4e00\u65e6\u4f60\u770b\u5230\u6839\u672c\u4e0d\u53ef\u80fd\u7684\u662f\u5199\u4f5c\uff0c\u4f60\u7684\u884c\u4e3a\u5c31\u4f1a\u4e0d\u540c\u3002\u5618\uff0c\u4f60\u53ef\u4ee5\u7a0d\u5fae\u6982\u62ec\u4e00\u4e0b\u505c\u987f\u95ee\u9898\uff0c\u8fd9\u5c31\u5f00\u59cb\u6709\u610f\u4e49\u4e86\u3002\n\u6709\u65f6\uff0c\u4f60\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e2a\u7a0b\u5e8f\u8fdb\u5165\u4e86\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u3002\u667a\u80fd\u7f16\u8bd1\u5668\u53ef\u4ee5\u53d1\u73b0\u4ee3\u7801\u7684\u67d0\u4e9b\u533a\u57df\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u5982\u679c\u9000\u51fa\u7a0b\u5e8f\u7684\u6240\u6709\u90e8\u5206\u90fd\u65e0\u6cd5\u8bbf\u95ee\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5fc5\u987b\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u3002\n\u4f60\u4e0d\u9700\u8981\u7406\u89e3\u6240\u6709\u7684\u7ec6\u8282\uff0c\u5728\u8fd9\u91cc\uff0c\u4f60\u53ea\u9700\u8981\u77e5\u9053\u6709\u53ef\u80fd\u56f4\u7ed5\u8fd9\u4e9b\u8bc1\u660e\u6784\u5efa\u4e00\u4e9b\u5de5\u5177\u3002\u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e9b\u8bc1\u636e\u3002\u6821\u6837\u6587\u4ef6\u683c\u5f0f\uff0c\u8fd8\u6709\u4e00\u4e2a\u68c0\u67e5\u6821\u6837\u7684\u4fdd\u8bc1\u811a\u672c\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u8dd1\u6b65\u65f6\uff1a\n\u5982\u679c\u5b83\u8fd4\u56deYES\uff0c\u8fd9\u610f\u5473\u7740/\u6211\u7684\u8bfe\u7a0b\u3002sh\u8fdb\u5165\u4e00\u4e2a\u6709\u9650\u7684\u5faa\u73af\u3002\u5982\u679c\u8bc1\u660e\u65e0\u6548\uff0c\u9a8c\u8bc1\u7a0b\u5e8f\u5c06\u8fd4\u56de\u5426\u3002\u9a8c\u8bc1\u811a\u672c\u672c\u8eab\u6c38\u8fdc\u4e0d\u4f1a\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u3002\n\u6211\u4eec\u9700\u8981\u7684\u53e6\u4e00\u4e2a\u5de5\u5177\u662f\u751f\u6210\u6240\u6709\u53ef\u80fd\u6587\u4ef6\u7684\u65b9\u6cd5\u3002\u5b83\u53ef\u4ee5\u975e\u5e38\u6162\uff0c\u8fd9\u5f88\u597d\u3002\u5047\u8bbe\u5b83\u901a\u8fc7\u5c06\u4e00\u4e2a\u5927\u6574\u6570\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u8868\u793a\u6765\u751f\u6210\u4e00\u4e2a\u6587\u4ef6\uff1a\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\u76ee\u6807\u811a\u672c\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u7684\u8bc1\u636e\u6765\u5c1d\u8bd5\u8868\u73b0\u51fa\u4e0e\u76ee\u6807\u811a\u672c\u4e0d\u540c\u7684\u884c\u4e3a\u3002\n#!/bin/bashi=0\uff0c\u4e3a\u771f\uff1b\u662f\u7684/\u751f\u6210_\u6587\u4ef6\u3002sh$i&gt/\u53ef\u80fd\u7684\u5982\u679c[[`./validate_-proof.sh./mably.proof$*`==&#34\uff1bYES&#34\uff1b]]\u5219\u8bc1\u660e\u7136\u540e#\u76ee\u6807\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u3002\u8ba9&#39\uff1bs\u7684\u884c\u4e3a\u4e0d\u540c\u9000\u51fa0 fi i=$\uff08\uff08i+1\uff09\uff09\u5b8c\u6210\n\u5982\u679c\u6709\u4efb\u4f55\u8bc1\u636e\u8868\u660e\u76ee\u6807\u811a\u672c\u8fdb\u5165\u4e86\u65e0\u9650\u671f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7a0b\u5e8f\u6700\u7ec8\u4f1a\u627e\u5230\u5b83\uff0c\u5e76\u505c\u6b62\u3002\u5982\u679c\u6ca1\u6709\u8bc1\u636e\uff0c\u90a3\u4e48\u5b83\u5c06\u6c38\u8fdc\u5faa\u73af\u5bfb\u627e\u8bc1\u636e\u3002\n\u5982\u679c\u6bcf\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u7684\u7a0b\u5e8f\u90fd\u6709\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u7684\u8bc1\u660e\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u662f\u5199\u4e86\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u6211\u4eec\u77e5\u9053\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u6211\u4eec\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u8bc1\u660e\u7cfb\u7edf\uff0c\u4e00\u5b9a\u6709\u4e00\u4e9b\u7a0b\u5e8f\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u6b62\uff0c\u4f46\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u6b62\u3002\u5fc5\u987b\u6709\u771f\u5b9e\u4f46\u65e0\u6cd5\u8bc1\u660e\u7684\u9648\u8ff0\uff0c\u8fd9\u662f\u54e5\u5fb7\u5c14\u57281931\u5e74\u8bc1\u660e\u7684\u3002\n\u54e5\u5fb7\u5c14\u7684\u4e0d\u5b8c\u5168\u6027\u5b9a\u7406\u662f\u6570\u5b66\u54f2\u5b66\u7684\u57fa\u7840\u3002\u5b83\u8868\u660e\u4e86\u6211\u4eec\u5bf9\u771f\u7406\u7684\u770b\u6cd5\u548c\u6211\u4eec\u5bf9\u8bc1\u636e\u7684\u770b\u6cd5\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u3002\u5b83\u5411\u6211\u4eec\u8868\u660e\uff0c\u771f\u7406\u7684\u7406\u8bba\u6982\u5ff5\u548c\u6211\u4eec\u6240\u77e5\u9053\u7684\u6570\u5b66\u9648\u8ff0\u7684\u5b9e\u9645\u96c6\u5408\u4e4b\u95f4\u603b\u662f\u5b58\u5728\u5dee\u5f02\u3002\n\u6211\u5e0c\u671b\u8fd9\u6b21\u5c55\u89c8\u5bf9\u4eba\u4eec\u6709\u6240\u5e2e\u52a9\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u5e94\u8be5\u628a\u54e5\u5fb7\u5c14\u6700\u521d\u57fa\u4e8e\u6570\u8bba\u7684\u8bc1\u660e\u4f5c\u4e3a\u5386\u53f2\u4e8b\u5b9e\u653e\u5728\u4e00\u8fb9\uff0c\u5c31\u50cf\u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u827e\u8428\u514b\u00b7\u725b\u987f\u6700\u521d\u7684\u5fae\u79ef\u5206\u7b26\u53f7\u4e00\u6837\u3002\u6211\u4eec\u5e94\u8be5\u627f\u8ba4\uff0c\u6570\u5b66\u8bc1\u660e\u548c\u8ba1\u7b97\u673a\u7b97\u6cd5\u7684\u6982\u5ff5\u662f\u76f8\u4e92\u4ea4\u7ec7\u5728\u4e00\u8d77\u7684\uff0c\u9996\u5148\u8981\u6559\u505c\u6b62\u7684\u95ee\u9898\uff0c\u5176\u6b21\u8981\u6559\u6570\u5b66\u8bc1\u660e\u7684\u4e0d\u5b8c\u6574\u6027\u3002", "note_en": "G\u00f6del\u2019s first incompleteness theorem states that there are mathematical statements thatcan neither be proven or disproven. His proof is fairly difficult tounderstand - it involves prime numbers, factorization, all this numbertheory. G\u00f6del\u2019s proof had to be complicated because in 1931, computeralgorithms hadn\u2019t really been invented.\n Turing machines would only be invented in 1936, five years later. WhenTuring proved the halting problem was undecidable - that there is noprogram that can decide whether another program will ever finish -G\u00f6del\u2019s work was an inspiration to him. Historically, G\u00f6del clearlycame before Turing. But in the modern day, for people who alreadyunderstand the concept of a \u201ccomputer program\u201d, it\u2019s a lot easier tounderstand the theory the other way around. Turing first, then G\u00f6del.\n    This elite \u201cmetaprogramming\u201d technique uses the program  wc to tell you how many lines ofcode there are in the  my_program.sh script.\n You can go even deeper into this running-programs-on-programs, and runa program on another program that\u2019s running on another program. Forexample, if you want to know how long it takes to count the lines ofcode in  my_program.sh:\n  Now imagine a script called  behave_differently.sh. When you run it onanother program, it outputs something different than that programdoes. For example:\n  This can output anything at all, as long as it is different from theoutput of  ./my_program.sh ./my_input.txt.\n   For any script,  paradox.sh my_script.sh behaves differently thanrunning  my_script.sh my_script.sh. So what happens when you run ./paradox.sh ./paradox.sh? It\u2019s a logical impossibility. It must beimpossible to write  behave_differently.sh.\n  It doesn\u2019t really seem impossible to behave differently than another script. What goeswrong with the naive approach?\n  When you run  ./paradox.sh ./paradox.sh, the script simply goes intoan infinite loop, outputting nothing. You can check my work - the codeis  on GitHub. The reason it is so hard tobehave differently from another script is that you can\u2019t tell, when itgoes into a long and silent loop, if that loop is really infinite or not.\n  If we had a script  halts.sh that could tell if a program would halt, we could use it to write  behaves_differently.sh.\n  So it must be impossible to write  halts.sh. There you go - that\u2019sthe impossibility of the halting problem, which Turing proved in 1936.\n  Once you see that the fundamental impossibility is writing behaves_differently.sh, it starts to make sense how you cangeneralize the halting problem a little bit.\n Sometimes, you can prove a program goes into an infinite loop. A smartcompiler can figure out that some areas of the code areunreachable. If all the parts of the program that exit areunreachable, then a program must go into an infinite loop.\n You don\u2019t need to understand all the details, here, you just need toknow that it\u2019s possible to build some tools around these proofs. Youcan represent these proofs in a  .proof file format, and there\u2019s avalidation script that checks the proof. So when we run:\n  If it returns  YES, that means that  ./my_program.sh goes into aninfinite loop. If the proof isn\u2019t valid, the validator returns NO. The validation script never goes into an infinite loop itself.\n The other tool we need is a way to generate all possible files. Itcan be super slow, that\u2019s fine. So let\u2019s say that this generates afile by converting a big integer to its binary representation:\n   We can try to behave differently from a target script by searching fora proof that it goes into an infinite loop.\n #!/bin/bashi=0while true; do ./generate_file.sh $i &gt; ./possible.proof if [[ `./validate_proof.sh ./possible.proof $*` == &#34;YES&#34; ]] then # The target goes into an infinite loop. Let&#39;s behave differently\texit 0 fi i=$(( i + 1 ))done\n If there is any proof of the target script going into an infiniteloop, then this program will eventually find it, and stop. If there isno proof, then it will loop forever searching for a proof.\n If every program that infinite loops has a proof that it infiniteloops, then we have just written  behave_differently.sh. We knowthat\u2019s not possible. So, no matter what proof system we use, theremust be some program that never terminates, but there is no proof thatit never terminates. There must be true but unprovable statements,which is what G\u00f6del proved in 1931.\n  G\u00f6del\u2019s incompleteness theorem is fundamental to the philosophyof mathematics. It demonstrates the mismatch between our ideas oftruth and our ideas of proof. It shows us that there will always be adifference between the theoretical idea of truth and the practical setof mathematical statements that we know are true.\n I hope that this exposition was helpful to people. Personally, I thinkwe should set aside G\u00f6del\u2019s original number-theory-based proof as anartifact of history, the way we no longer use Isaac Newton\u2019s originalnotation for calculus. We should accept that the concepts ofmathematical proof and computer algorithms are intertwined at theirheart, teach the halting problem first, and teach the incompletenessof mathematical proof second.", "posttime": "2022-02-25 22:50:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u5b8c\u5168\u6027,incompleteness,\u7a0b\u5e8f", "title": "Bash\u4e2d\u7684\u54e5\u5fb7\u5c14\u4e0d\u5b8c\u5168\u6027\u5b9a\u7406", "title_en": "G\u00f6del's Incompleteness Theorem in Bash", "transed": 1, "url": "https://lacker.io/math/2022/02/24/godels-incompleteness-in-bash.html", "via": "", "real_tags": ["\u4e0d\u5b8c\u5168\u6027", "\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075001, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6240\u4ee5\u4f60\u9700\u8981\u89e32x2\u2212 3 x=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2-3x=2 x 2\u2212    3x=2\u3002\u4f60\u8fd8\u8bb0\u5f97\u201c\u4e8c\u6b21\u578b\u201d\u8fd9\u4e2a\u8bcd\u548c\u7c7b\u4f3c\u4e8e4 a c\u7684\u4e1c\u897f\u5417\u2212  B2\\def\\A{\\red{A}}\\def\\b{\\blue{b}}\\def\\C{\\green{C}}\\sqrt{4ac-b^2}4 A C\u2212   b 2\u200b      \u2026 \u8fd8\u662f+B2\\def\\A{\\red{A}\\def\\b{\\blue{b}}\\def\\C{\\green{C}}+b^2+B2\uff1f\ud83d\ude28\n\u522b\u518d\u8bd5\u56fe\u8bb0\u4f4f\u4e8c\u6b21\u516c\u5f0f\u4e86\uff01\u5728\u8fd9\u4e2a\u4e92\u52a8\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u548c\u6211\u4e00\u8d77\u91cd\u65b0\u53d1\u73b0\u4e8c\u6b21\u516c\u5f0f\uff0c\u4f60\u518d\u4e5f\u4e0d\u7528\u8bb0\u4f4f\u5b83\u4e86\uff01\ud83d\udcaa\n\u9996\u5148\u8ba9\u6211\u4eec\u63d0\u9192\u81ea\u5df1\u4e8c\u6b21\u516c\u5f0f\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4e8c\u6b21\u65b9\u7a0b\u662f\u8fd9\u6837\u7684\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u7279\u5b9a\u5e38\u6570A\\def\\A{\\red{A}}\\def\\B{\\blue{B}\\def\\C{\\green{C}\\A\uff0cB\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}\\B\u548cC\\def\\green{A}\\def\\B}\\C}C}\uff1a\n\u4f8b\u5982\uff0c2x2\u2212 3 x=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2-3x=2 x 2\u2212    3 x=2\u662f\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\u3002\u5b83\u7684A\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\\A\uff0cB\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}\\B\u548cC\\def\\A{red A}\\def\\B{blue{C}\\C}\\C}\u7684\u503c\u662f\u4ec0\u4e48\uff1f\n\u5c0f\u5fc3\u8d1f\u53f7\u3002\u91cd\u65b0\u6392\u52172x2\u2212 3 x=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2-3x=2 x 2\u2212    3 x=2\u7684\u5f62\u5f0f\u4e3aA x 2+B x+C=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{A}x^2+\\blue{B}x+\\green{C}=0A x 2+Bx+C=0\u3002\u53ef\u4ee5\u901a\u8fc7\u4ece\u4e24\u4fa7\u51cf\u53bb2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2\u6765\u5b9e\u73b0\u3002\u4f60\u6700\u7ec8\u5f97\u5230\u4e862x2+\uff08\uff09\u2212 3\uff09x+\uff08\u2212 2\uff09=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{2}x^2+\\blue{3}x+\\green{-2}=02x2+\u2212 3\uff09x+\uff08\u2212 2 )  =    0  .\n\u201c\u89e3\u201d\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\u610f\u5473\u7740\u627e\u5230\u4f7f\u65b9\u7a0b\u4e24\u8fb9\u76f8\u7b49\u7684x\\def\\a{\\red{a}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\u7684\u503c\u3002x\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\u7684\u8fd9\u4e9b\u7279\u6b8a\u503c\u79f0\u4e3a\u6839\ud83e\udd55 \u65b9\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u518d\u8003\u8651\u6211\u4eec\u7684\u4e8c\u6b21\u65b9\u7a0b\uff0c2\u00d72\u2212 3\u500d\u2212 2=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{2}x^2-\\blue{3}x-\\green{2}=0 2 x 2\u2212     3\u500d\u2212     2  =    0  . \u54ea\u4e00\u4e2a\u4e0d\u662f\u6839\uff1f\n\u5b9e\u9645\u4e0a\uff0cx=\u2212  1 2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-\\tfrac{1}{2}x=\u2212           2        1 \u200b         \u662f\u4e00\u4e2a\u6839\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5165\u65b9\u7a0b\u4e2d\u770b\u5230\uff1a\n2x2\u2212 3\u500d\u2212 2     = 2 ( \u2212   1 2  ) 2 \u2212 3 ( \u2212   1 2 ) \u2212 2         = ( 2 \u00d7   1 4 ) +   3 2 \u2212 2         =   1 2 +   3 2 \u2212   4 2         =    1 + 3 \u2212 4 2=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}\\red{2}x^2-\\blue{3}x-\\green{2}&amp\uff1b=\\\u7ea2\u8272{2}\uff08\\tfrac12\uff09^2-\\blue{3}\uff08\\tfrac12\uff09-\\green{2}\\\\\\\\&amp\uff1b=\uff082\u6b21\\tfrac14\uff09+\\tfrac32-2\\\\&amp\uff1b=\\tfrac12+\\tfrac32-\\tfrac42\\\\\\&amp\uff1b=\\tfrac{1+3-4}2\\\\\\&amp\uff1b=0\\\\\\end{align*}2 x 2\u2212   3\u500d\u2212   2.\u200b             =   2 ( \u2212           2        1 \u200b      )        2.\u2212   3 ( \u2212           2        1 \u200b     )  \u2212   2      =  ( 2  \u00d7            4        1 \u200b     )  +            2        3 \u200b      \u2212  2      =            2        1 \u200b      +            2        3 \u200b      \u2212            2        4 \u200b          =            2        1 + 3 \u2212 4.\u200b          =  0\u200b\n\u5b9e\u9645\u4e0a\uff0cx=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2 x=2\u662f\u4e00\u4e2a\u6839\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5165\u65b9\u7a0b\u4e2d\u770b\u5230\uff1a\n2x2\u2212 3\u500d\u2212 2     = 2 ( 2  ) 2 \u2212 3 ( 2 ) \u2212 2         = ( 2 \u00d7 4 ) \u2212 6.\u2212 2         = 8 \u2212 8=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}\\red{2}x^2-\\blue{3}x-\\green{2}&amp\uff1b=\\\u7ea2\u8272{2}\uff082\uff09^2-\\\u84dd\u8272{3}\uff082\uff09\\\u7eff\u8272{2}\\\\\\&amp\uff1b=\uff082\u6b214\uff09-6-2\\\\\\&amp\uff1b=8-8\\\\\\&amp\uff1b=0\\\\\\end{align*}2 x 2\u2212   3\u500d\u2212   2.\u200b             =   2 ( 2  )        2  \u2212   3 ( 2 )  \u2212   2      =  ( 2  \u00d7  4 )  \u2212  6.\u2212  2      =  8  \u2212  8      =  0 \u200b\n\u901a\u8fc7\u5c06x\\def\\a{\\red{a}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\u7684\u503c\u63d2\u5165\u4e8c\u6b21\u65b9\u7a0b\uff0c\u53ef\u4ee5\u5feb\u901f\u68c0\u67e5\u8be5\u503c\u662f\u5426\u4e3a\u6839\u3002\u4e0a\u9762\uff0c\u63d2\u5165x=2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2 x=2\u6216x=\u2212  1 2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-\\tfrac12 x=\u2212           2        1 \u200b       \u7ed9\u51fa\u6709\u6548\u7684\u65b9\u7a0b0=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}0=0\uff0c\u56e0\u6b64\u5b83\u4eec\u90fd\u662f\u6839\u3002\u4f46\u63d2\u5165x=\u2212 2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-2 x=\u2212 2\u7ed9\u51fa\u4e86\u65e0\u6548\u7684\u7b49\u5f0f12=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}12=0 12=0\uff0c\u56e0\u6b64\u5b83\u4e0d\u662f\u6839\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5c1d\u8bd5x\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\u7684\u968f\u673a\u503c\u5e76\u4e0d\u662f\u627e\u5230\u6839\u7684\u6709\u6548\u65b9\u6cd5\uff01\n\u4e0e\u5176\u63d2\u5165\u968f\u673a\u731c\u6d4b\uff0c\u4e0d\u5982\u63d2\u5165\u5408\u7406\u7684\u731c\u6d4b\u3002\u8fd9\u5f20\u56fe\u8868\u662f\u5bfb\u627e\u5408\u7406\u731c\u6d4b\u7684\u6709\u7528\u5de5\u5177\u3002\uff08\u7a0d\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8be5\u56fe\u4e5f\u6709\u52a9\u4e8e\u63a8\u5bfc\u4e8c\u6b21\u516c\u5f0f\uff01\uff09\n\u8ba9\u6211\u4eec\u89e3\u53e6\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff1a\u2212 1 x 2\u2212 1 x+2=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2\\blue{-1}x+\\green{2}=0\u2212 1 x 2\u2212  1 x+2=0\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u628a\u6211\u4eec\u7684\u731c\u6d4b\u7ed8\u5236\u5728\u4e00\u4e2a\u56fe\u8868\u4e0a\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u91cc\uff0c\u6211\u4eec\u6b63\u5728\u7ed8\u5236y=\u2212 1 x 2\u2212 1 x+2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=\\red{-1}x^2\\blue{-1}x+\\green{2}y=\u2212 1 x 2\u2212  1 x+2\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2ax\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\uff0c\u5176\u4e2dy=0\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}y=0\uff0c\u56e0\u4e3a\u8fd9\u5c06\u89e3\u51b3\u6211\u4eec\u7684\u65b9\u7a0b\u3002\u6211\u4eec\u5df2\u7ecf\u731c\u4e86\u51e0\u6b21\u4e86\u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\\red{\u2718}     \u2718   \u6807\u5fd7\u3002\u6211\u4eec\u731c\u5230\u4e86\u4ec0\u4e48\uff1f\n\u4e0d\u5b8c\u5168\u662f\uff1a\u8fd9\u4e9b\u662fy\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y\u503c\u3002\u6211\u4eec\u505a\u4e86\u4e24\u6b21\u731c\u6d4b\uff0cx=0\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{green{C}}x=0x=0\u548cx=2\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}x=2x=2\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86y\\def\\A{red{A}}\\def\\B{blue{B}}\\def\\C{green{C}}y-\u503cy=2\\def\\A{red{A}\\def\\B{blue{B}\\def\\C{green{C}y=2\u548cy=\u2212 4\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4 y=\u2212 4.\u5bf9\u4e8ex=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0 x=0\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86y=2\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}y=2 y=2\uff1a\ny=\u2212 1 x 2\u2212 1 x+2=\u2212 1 ( 0  ) 2  \u2212 1\uff080\uff09+2=0+0+2=2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}y&amp\uff1b=\\\u7ea2\u8272{-1}x^2 \\\u84dd\u8272{-1}x+\\\u7eff\u8272{2}\\\\\\\\&amp\uff1b=\\\u7ea2\u8272{-1}\uff080\uff09^2\\\u84dd\u8272{-1}\uff080\uff09+\\\u7eff\u8272{2}\\\\\\&amp\uff1b=0+0+\\green{2}\\\\\\&amp\uff1b=2\\\\\\\u7ed3\u675f{align*}y\u200b             =   \u2212 1 x 2\u2212  1 x+2=\u2212 1 ( 0  )        2   \u2212  1 ( 0 )  +   2      =  0  +  0  +   2      =  2 \u200b\n\u540c\u6837\u5730\uff0c\u5bf9\u4e8e\u731c\u6d4bx=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2 x=2\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86y=\u2212 4\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4 y=\u2212 4  :\ny=\u2212 1 x 2\u2212 1 x+2=\u2212 1 ( 2  ) 2  \u2212 1 ( 2 ) + 2         = \u2212 4.\u2212 2 + 2         = \u2212 4\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}y&amp\uff1b=\\\u7ea2\u8272{-1}x^2 \\\u84dd\u8272{-1}x+\\\u7eff\u8272{2}\\\\\\\\&amp\uff1b=\\\u7ea2\u8272{-1}\uff082\uff09^2\\\u84dd\u8272{-1}\uff082\uff09+\\\u7eff\u8272{2}\\\\\\&amp\uff1b=-4-2+\\\u7eff\u8272{2}\\\\\\&amp\uff1b=-4\\\\\\\u7ed3\u675f{align*}y\u200b             =   \u2212 1 x 2\u2212  1 x+2=\u2212 1 ( 2  )        2   \u2212  1 ( 2 )  +   2      =  \u2212 4.\u2212  2  +   2      =  \u2212 4.\u200b\n\u8fd9\u4e24\u6b21\u731c\u6d4b\u90fd\u6ca1\u6709\u6210\u529f\uff1a\u4ed6\u4eec\u6ca1\u6709\u89e3\u51fa\u65b9\u7a0b\u5f0f\u2212 1 x 2\u2212 1 x+2=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2\\blue{-1}x+\\green{2}=0\u2212 1 x 2\u2212  1 x+2=0\u3002\u4e00\u4e2a\u6210\u529f\u7684\u731c\u6d4b\u2014\u2014\u4e5f\u5c31\u662f\u6839\u2014\u2014\u5728\u6211\u4eec\u7684\u56fe\u8868\u4e0a\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\n\u76f8\u53cd\u3002y\u8f74\u662fx=0\\def\\A{red{A}}\\def\\B{blue{B}}\\def\\C{green{C}}y\u8f74\u4e0a\u7684\u4e00\u7ec4\u70b9\uff0c\u5176\u4e2dx=0\\def\\A{red{A}\\def\\blue{B}\\def\\C{green{C}x=0\uff0c\u56e0\u6b64\u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\\red{\u2718}     \u2718   \u5728y\u8f74\u4e0a\uff0c\u731c\u6d4bx=0\\def\\A{red{A}\\def\\B{blue{B}}\\def\\C{green{C}}}y\u8f74\u4e0a\u7684x=0\\def\\A{red{A}\\def\\B{blue{B}\\def\\C{green{C}x=0\u3002\n\u6211\u4eec\u6b63\u5728\u52aa\u529b\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u2212 1 x 2\u2212 1 x+2=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2\\blue{-1}x+\\green{2}=0\u2212 1 x 2\u2212  1 x+2=0\u3002\u6211\u4eec\u6b63\u5728\u7b56\u5212y=\u2212 1 x 2\u2212 1 x+2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=\\red{-1}x^2\\blue{-1}x+\\green{2}y=\u2212 1 x 2\u2212  1 x+2\uff0c\u6240\u4ee5\u627e\u5230\u4e00\u4e2ay=0\\def\\a{\\red{a}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=0 y=0\u7684\u70b9\u5c31\u53ef\u4ee5\u89e3\u51b3\u6211\u4eec\u7684\u65b9\u7a0b\u3002\nx\u8f74\u662f\u4e00\u7ec4\u70b9\uff0c\u5176\u4e2dy=0\\def\\A{red{A}}\\def\\B{blue{B}}\\def\\C{green{C}}x\u8f74\u662f\u4e00\u7ec4\u70b9\uff0c\u5176\u4e2dy=0\\def\\A{red{A}\\def\\B{blue B}\\def\\C{green{C}y=0\u3002\u6240\u4ee5\u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\\red{\u2718}     \u2718   \u5728x\u8f74\u4e0a\uff0cx\u8f74\u662f\u65b9\u7a0b\u7684\u6839\u3002\n\u4f7f\u7528\u56fe\u8868\uff0c\u6211\u4eec\u9519\u8bef\u7684\u731c\u6d4b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u9009\u62e9\u66f4\u597d\u7684\u4e0b\u4e00\u4e2a\u731c\u6d4b\u3002\u8981\u4e86\u89e3\u539f\u56e0\uff0c\u8bf7\u7ed8\u5236y=\u2212 1 x 2\u2212 1 x+2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=\\red{-1}x^2\\blue{-1}x+\\green{2}y=\u2212 1 x 2\u2212  1 x+2\u8868\u793a\u5269\u4f59\u8303\u56f4\u2212 5.\u2264 \u5341\u3001\u2264 5\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}-5\\leq x\\leq 5\u2212 5.\u2264    \u5341\u3001\u2264    5.\u5b83\u770b\u8d77\u6765\u50cf\u4ee5\u4e0b\u54ea\u6761\u66f2\u7ebf\uff1f\uff08\u4f60\u53ef\u80fd\u60f3\u8981\u62ff\u7eb8\u548c\u94c5\u7b14\u3002\uff09\n\u8fd9\u4e0d\u662f\u66f2\u7ebfB\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold B}B\u3002\u4f8b\u5982\uff0c\u5c1d\u8bd5x=\u2212 3\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-3 x=\u2212 3.\u4f60\u5e94\u8be5\u4ece\u54ea\u91cc\u5f97\u5230y=\u2212 4\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4 y=\u2212 4.\u8fd9\u8fdc\u8fdc\u4e0d\u662f\u91cd\u70b9\uff08x=\u2212 3\uff0cy=4\uff09\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\uff08x=-3\uff0cy=4\uff09\uff08x=\u2212 3\uff0cy=4\uff09\u5728\u66f2\u7ebfB\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}}\\green{\\bold B}B\u4e0a\u3002\u5982\u679c\u4f60\u6b63\u786e\u5730\u7ed8\u5236\u4e86\u6240\u6709\u7684\u70b9\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u6cbf\u7740\u4e0a\u9762\u7684\u66f2\u7ebfC\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}C\u3002\n\u8fd9\u4e0d\u662f\u66f2\u7ebfA\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold A}A\u3002\u5c1d\u8bd5\u4f8b\u5982x=5\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=5 x=5\uff0c\u5728\u8fd9\u91cc\u60a8\u5e94\u8be5\u5f97\u5230y=\u2212 28\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-28 y=\u2212 28  . \u8fd9\u79bb\u70b9\u5f88\u8fdc\uff08x=5\uff0cy=\u2212 3\uff09\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\uff08x=5\uff0cy=-3\uff09\uff08x=5\uff0cy=\u2212 3\uff09\u5728\u66f2\u7ebfA\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold A}A\u4e0a\u3002\u5982\u679c\u4f60\u6b63\u786e\u5730\u7ed8\u5236\u4e86\u6240\u6709\u7684\u70b9\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u6cbf\u7740\u4e0a\u9762\u7684\u66f2\u7ebfC\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}C\u3002\n\u4e0d\uff0c\u8fd9\u662fC\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}}\\orange{C}C\u4e0ey\u8f74\u7684\u4ea4\u70b9\u3002\u6211\u4eec\u60f3\u8981C\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{C}C\u4e0ex\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}x\u8f74\u7684\u4ea4\u70b9\u3002\u8fd9\u4e9b\u4ea4\u53c9\u70b9\u4f4d\u4e8ex=\u2212 2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-2 x=\u2212 2\u548cx=1\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=1 x=1\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6839\uff0c\u4f46\u5728\uff08x=\u2212 2\uff0cy=0\uff09\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\uff08x=-2\uff0cy=0\uff09\uff08x=\u2212 2\uff0cy=0\uff09\u3002\n\u8bf7\u6ce8\u610f\uff0c\u66f2\u7ebfC\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}C\u9075\u5faa\u5012\u7f6e\u7684\u201c\u7897\u201d\u5f62\u72b6\ud83e\udd63. \u5982\u679c\u4f60\u518d\u753b\u4e00\u4e9b\u4e8c\u6b21\u66f2\u7ebf\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u90fd\u9075\u5faa\u7c7b\u4f3c\u7684\u201c\u7897\u201d\u6216\u201cU\u201d\u5f62\u3002\u5b83\u53ef\u4ee5\u7ffb\u8f6c\u8fc7\u6765\uff0c\u6216\u5411\u4e0a\u6216\u4fa7\u5411\u79fb\u52a8\uff0c\u6216\u6c34\u5e73\u6216\u5782\u76f4\u6324\u538b\u3002\u4f46\u5b83\u603b\u662f\u4e00\u4e2a\u201c\u7897\u201d\u5f62\uff0c\u53eb\u505a\u629b\u7269\u7ebf\u3002\n\u505a\u5f97\u597d\u3002D\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold D}D\u4e0d\u80fd\u662f\u4e8c\u6b21\u578b\uff0c\u56e0\u4e3a\u5b83\u6709\u4e00\u4e2a\u201cS\u201d\u5f62\u3002\n\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00}A\u6070\u597d\u662f\u98a0\u5012\u7684\uff09\u3002B\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{B}B\u4e5f\u53ef\u4ee5\u662f\u975e\u5e38\u62c9\u4f38\u7684\u629b\u7269\u7ebf\u7684\u4e00\u90e8\u5206\u3002\u4f46\u662f\u66f2\u7ebfD\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold D}D\u6709\u4e00\u4e2a\u201cS\u201d\u5f62\uff0c\u6240\u4ee5\u5b83\u4e0d\u53ef\u80fd\u662f\u4e8c\u6b21\u66f2\u7ebf\u3002\n\u77e5\u9053\u4e8c\u6b21\u66f2\u7ebf\u603b\u662f\u5f62\u6210\u201cU\u201d\u5f62\u6709\u52a9\u4e8e\u6211\u4eec\u505a\u51fa\u66f4\u597d\u7684\u731c\u6d4b\u3002\u5728\u4e0b\u9762\u7684\u4e8c\u6b21\u66f2\u7ebf\u56fe\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u505a\u4e86\u4e09\u4e2a\u731c\u6d4b\uff1a\n\u4e0d\uff0c\u8fd9\u4e0d\u884c\u3002\u53ea\u6709\u4e00\u4e2a\u201cU\u201d\u5f62\u53ef\u4ee5\u7a7f\u8fc7\u8fd9\u4e09\u4e2a\u70b9\uff0c\u800c\u552f\u4e00\u7684x\\def\\a{\\red{a}\\def\\B{\\blue{B}\\def\\C{\\green{C}}x-\u770b\u8d77\u6765\u53ef\u4ee5\u5de5\u4f5c\u7684\u503c\u662fx=2\\def\\a{\\red{a}\\def\\B{blue B}\\def\\C{green{C}x=2 x=2\uff1a\n\u6b63\u5f53\u53ea\u6709\u5411\u4e0a\u7684\u201cU\u201d\u5f62\u624d\u80fd\u7a7f\u8fc7\u8fd9\u4e09\u4e2a\u70b9\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u6240\u4ee5\uff0c\u56fe\u8868\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u505a\u51fa\u66f4\u597d\u7684\u731c\u6d4b\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u53ea\u662f\u5728\u731c\u6d4b\u3002\u8fd9\u4e5f\u6ca1\u6709\u6548\u7387\uff01\u76f8\u53cd\uff0c\u4e8c\u6b21\u516c\u5f0f\u5c06\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u6765\u627e\u5230\u4efb\u4f55\u4e8c\u6b21\u65b9\u7a0b\u7684\u6240\u6709\u6839\u3002\n\u8fd9\u786e\u5b9e\u6ee1\u8db3P\u00d7Q=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P\\times Q=0 P\u00d7Q=0\uff0c\u4f46\u8fd8\u6709\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff01\u4f8b\u5982\uff0cP=5\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P=5p=5\u548cQ=0\\def\\A{\\red{A}\\def\\blue{B}\\def\\C{\\green{C}Q=0\u3002\u4f60\u53ef\u4ee5\u628a\u6240\u6709\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u90fd\u5199\u5728\u4e00\u5f20\u5927\u8868\u683c\u91cc\uff0c\u8ba9\u5b83\u4eec\u5f62\u8c61\u5316\uff1a\n\u7ed3\u679c\u662f\u5728P=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{green{C}}P=0p=0\u5217\u548c\u6574\u4e2aQ=0\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}Q=0\u884c\u4e0a\u90fd\u662f\u96f6\u3002\u56e0\u6b64\uff0c\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u503c\u4e3a\u96f6\uff0c\u53e6\u4e00\u4e2a\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\u3002\n\u4f60\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff01\u4f46\u5b83\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4ec0\u4e48\uff1f\n\u4e0d\uff0c\u5b9e\u9645\u4e0a\u5c31\u50cf\u4e0a\u4e00\u4e2a\u7b49\u5f0f\u4e00\u6837\uff01\u6211\u4eec\u53ef\u4ee5\u8ba9P=x\u2212 L\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{P}=\\orange{x-L}P=x\u2212  L\u548cQ=x\u2212 R\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{Q}=\\pink{x-R}Q=x\u2212  R\u5982\u679cP=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{P}=0 P=0\uff0c\u90a3\u4e48x\u2212 L=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{x-L}=0 x\u2212  L=0\u3002\u5982\u679cQ=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{Q}=0 Q=0\uff0cx\u2212 R=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{x-R}=0 x\u2212  R=0\u3002\n\u4f60\u53ef\u4ee5\u7a0d\u5fae\u7b80\u5316\u4e00\u4e0b\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u3002\u91cd\u65b0\u5b89\u6392\u4e00\u4e0b\uff0c\u4f60\u4f1a\u5f97\u5230\u4ec0\u4e48\uff1f\n\u5c0f\u5fc3\u8d1f\u53f7\u3002\u4ee5x\u4e3a\u4f8b\u2212 R=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}}x-\\pink{R}=0 x\u2212     R=0\uff0c\u5c06R\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{R}R\u6dfb\u52a0\u5230\u4e24\u4fa7\u3002\u4f60\u5e94\u8be5\u5f97\u5230x=R\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\pink{R}x=R\u3002\n\u65b9\u7a0b\uff08x\u2212 L\uff09\uff08x\uff09\u2212 R=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\uff08x-L\uff09}\\pink{\uff08x-R\uff09}=0\uff08x\uff09\u2212  L\uff09\uff08x\uff09\u2212  R\uff09=0\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4e8c\u6b21\u66f2\u7ebf\uff01\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5982\u4f55\u201c\u4e58\u51fa\u201d\u62ec\u53f7\uff0c\u6bd4\u5982\uff1a\na=xb=\u2212 lc=xd=\u2212 R\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}A&amp\uff1b=x\\\\b&amp\uff1b=-\\\u6a59\u8272{L}\\\\c&amp\uff1b=x\\\\d&amp\uff1b=-\\\u7c89\u8272{R}\\\\\\\u7ed3\u675f{align*}a b c d\u200b             =  x=\u2212  L=x=\u2212  R\u200b\n(\u5341)\u2212 L\uff09\uff08x\uff09\u2212 R\uff09=x+x\uff08\u2212 R\uff09+\uff08\u2212 L\uff09x+\uff08\u2212 L\uff08\u2212 R\uff09=x2+\uff08\u2212 L\u2212 R\uff09x+L R=x2\u2212 \uff08L+R\uff09x+L R\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}\uff08x-\\orange{L}\uff09\uff08x-\\pink{R}\uff09&amp\uff1b=xx+x\uff08-\\pink{R}\uff09+\uff08\\orange{L}\uff09x+\uff08\\orange{L}\uff09\uff08\\pink{R}\uff09\\&amp\uff1b=x^2+\uff08\\orange{L}-\\pink{R}\uff09x+\\orange{L}\\pink{R}\\\\\\&amp\uff1b=x^2-\uff08\\orange{L}+\\pink{R}\uff09x+\\orange{L}\\pink{R}\\end{align*}\uff08x\uff09\u2212   L\uff09\uff08x\uff09\u2212   R\uff09\u200b             =  xx+x\uff08\u2212  R\uff09+\uff08\u2212  L\uff09x+\uff08\u2212  L\uff08\u2212  R\uff09=x2+\uff08\u2212  L\u2212   R\uff09x+L R=x2\u2212  \uff08L+R\uff09x+L-R\u200b\n\u6b63\u5f53\u5f53\u76f8\u4e58\u65f6\uff0c\u8d1f\u6570\u4f1a\u62b5\u6d88\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7cfb\u6570a\u2212 x\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}-x\u2212 \u4e24\u4e2a\u4e2d\u95f4\u672f\u8bed\u4e2d\u7684x\u3002\n\u4e0d\uff0c\u6bd4\u90a3\u7b80\u5355\uff01\u65e9\u4e9b\u65f6\u5019\uff0c\u60a8\u627e\u5230\u4e86\uff08x\uff09\u7684\u89e3\u51b3\u65b9\u6848\u2212 L\uff09\uff08x\uff09\u2212 R=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\uff08x-\\orange{L}\uff09\uff08x-\\pink{R}\uff09=0\uff08x\u2212     L\uff09\uff08x\uff09\u2212     R=0\u662fx=L\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\orange{L}x=L\u6216x=R\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{\\green{C}x=\\pink{R}x=R\u3002\u4f60\u53d1\u73b0\u4e86\uff08x\u2212 L\uff09\uff08x\uff09\u2212 R\uff09\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\uff08x-\\orange{L}\uff09\uff08x-\\pink{R}\uff09\uff08x\u2212     L\uff09\uff08x\uff09\u2212     R\uff09\u53ef\u4ee5\u91cd\u65b0\u6392\u5217\u4e3ax2\u2212 \uff08L+R\uff09x+L R\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}}x^2-\uff08\\orange{L}+\\pink{R}\uff09x+\\orange{L}\\pink{R}x2\u2212    \uff08\u5de6+\u53f3\uff09x+\u53f3\u3002\u91cd\u65b0\u6392\u5217\u4e00\u4e2a\u65b9\u7a0b\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u89e3\uff0c\u6240\u4ee5\u89e3\u4ecd\u7136\u662f\u4e00\u6837\u7684\uff1ax=L\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}}x=\\orange{L}x=L\u6216x=R\\def\\A{\\red{A}\\def\\B{blue B{B}\\C}\\C{green{C}x=\\R}\u3002\nx2\u2212 \uff08L+R\uff09x+L R=0 L 2\u2212 \uff08L+R\uff09L+L R=0 L 2\u2212 \uff08L2+RL\uff09+LR=0L2\u2212  L2\u2212 3.R+L R+L R+L L R+L R+L R+L R+L R+R+R+R+R+L+R+R+L+R+L+L+R+R+L+R+L+R+L+L+L+L+L+R+0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0{{{B}}}.......................................................................................................................................+\\pink{R}\\orange{L}\uff09+\\orange{L}\\pink{R}=0\\\\ orange{L}^2-\\orange{L}^2-\\pink{R}\\orange{L}+\\orange{L}\\pink{R}=0\\\\0=0\\end{align*}x2\u2212  \uff08L+R\uff09x+L R=0 L 2\u2212  \uff08L+R\uff09L+L R=0 L 2\u2212  \uff08L2+RL\uff09+LR=0L2\u2212    L2\u2212   RL+LR=0 0=0\u200b\na2+bx+C=0x2\u2212 \uff08L+R\uff09x+lr=0\\def\\A{red{A}}\\def\\B{blue{B}}\\def\\C{green{C}}\\begin{align*}\\red{A}x^2+\\blue{B}x+\\green{C}=0\\\\x^2-\uff08\\orange L{L}+\\pink{R}\uff09x+\\orange L{pink{R}=0\\end{A}\u2212  \uff08L+R\uff09x+L R=0\u200b\n\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff01\u4f46\u662f\u5b83\u7684\u503c\u662f\u4ec0\u4e48\u5462\n......", "note_en": "So you need to solve         2  x 2 \u2212 3 x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2 - 3x = 2    2  x        2  \u2212    3 x  =    2  . You remember the word \u2018quadratic\u2019 and something like           4 a c \u2212  b 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\sqrt{4ac - b^2}           4 a c  \u2212   b        2      \u200b      \u2026 or was it         +  b 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}+b^2    +  b        2  ? \ud83d\ude28\n Stop trying to memorize the quadratic formula! In this interactive tutorial, you\u2019ll   rediscover   the quadratic formula with me, and you\u2019ll never have to memorize it again! \ud83d\udcaa\n  First let\u2019s remind ourselves of the problem that the quadratic formula solves. A   quadratic equation   is one that looks like this, for some particular constants         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\A     A  ,         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\B     B   and         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\C     C  :\n  For example,         2  x 2 \u2212 3 x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2 - 3x = 2    2  x        2  \u2212    3 x  =    2   is a quadratic equation. What are its values of         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\A     A  ,         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\B     B   and         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\C     C  ?\n  Careful with the minus signs. Rearrange         2  x 2 \u2212 3 x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2 - 3x = 2    2  x        2  \u2212    3 x  =    2   into the form         A  x 2 + B x + C = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{A}x^2 + \\blue{B}x + \\green{C} = 0     A  x        2  +     B x  +     C  =    0  . You can do this by subtracting         2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2    2   from both sides. You end up with         2  x 2 +  ( \u2212 3 ) x +  ( \u2212 2 ) = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{2}x^2 +\\blue{(-3)}x + \\green{(-2)} = 0     2  x        2  +     ( \u2212 3 ) x  +     ( \u2212 2 )  =    0  .\n  \u2018Solving\u2019 a quadratic equation means finding the values of         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   that make the equation equal on both sides. These special values of         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   are called the   roots   \ud83e\udd55 of the equation. Consider again our quadratic equation,         2  x 2 \u2212 3 x \u2212 2 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{2}x^2 -\\blue{3}x - \\green{2} = 0     2  x        2  \u2212     3 x  \u2212     2  =    0  . Which of these is   not   a root?\n  Actually,         x = \u2212  1 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-\\tfrac{1}{2}    x  =    \u2212           2        1 \u200b         is   a root, as you can see by plugging it into the equation:\n 2  x 2 \u2212 3 x \u2212 2     = 2 ( \u2212   1 2  ) 2 \u2212 3 ( \u2212   1 2 ) \u2212 2         = ( 2 \u00d7   1 4 ) +   3 2 \u2212 2         =   1 2 +   3 2 \u2212   4 2         =    1 + 3 \u2212 4 2         = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*} \\red{2}x^2 -\\blue{3}x - \\green{2}&amp;= \\red{2}(-\\tfrac12)^2 -\\blue{3}(-\\tfrac12) - \\green{2} \\\\&amp;= (2 \\times \\tfrac14) +\\tfrac32 - 2 \\\\&amp;= \\tfrac12+\\tfrac32 - \\tfrac42 \\\\&amp;= \\tfrac{1+3-4}2 \\\\&amp;= 0 \\\\\\end{align*}              2  x        2  \u2212   3 x  \u2212   2             \u200b             =   2 ( \u2212           2        1 \u200b      )        2  \u2212   3 ( \u2212           2        1 \u200b     )  \u2212   2      =  ( 2  \u00d7            4        1 \u200b     )  +            2        3 \u200b      \u2212  2      =            2        1 \u200b      +            2        3 \u200b      \u2212            2        4 \u200b          =            2        1 + 3 \u2212 4 \u200b          =  0 \u200b\n Actually,         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2     is   a root, as you can see by plugging it into the equation:\n 2  x 2 \u2212 3 x \u2212 2     = 2 ( 2  ) 2 \u2212 3 ( 2 ) \u2212 2         = ( 2 \u00d7 4 ) \u2212 6 \u2212 2         = 8 \u2212 8         = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*} \\red{2}x^2 -\\blue{3}x - \\green{2}&amp;= \\red{2}(2)^2 -\\blue{3}(2) - \\green{2} \\\\&amp;= (2 \\times 4) -6 - 2 \\\\&amp;= 8-8 \\\\&amp;= 0 \\\\\\end{align*}              2  x        2  \u2212   3 x  \u2212   2          \u200b             =   2 ( 2  )        2  \u2212   3 ( 2 )  \u2212   2      =  ( 2  \u00d7  4 )  \u2212  6  \u2212  2      =  8  \u2212  8      =  0 \u200b\n By plugging a value of         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   into a quadratic equation, you can quickly   check   whether that value is a root. Above, plugging in         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2   or         x = \u2212  1 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-\\tfrac12    x  =    \u2212           2        1 \u200b       gives the valid equation         0 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}0=0    0  =    0  , so they are both roots. But plugging in         x = \u2212 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-2    x  =    \u2212 2   gives the invalid equation         12 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}12=0    12  =    0  , so it is not a root.\n Unfortunately, trying random values of         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   is not an efficient way to find the roots!\n      Instead of plugging in   random   guesses, we\u2019d rather plug in   sensible   guesses. The   graph   is a helpful tool for finding sensible guesses. (Later, we\u2019ll find that the graph is helpful for deriving the quadratic formula, too!)\n Let\u2019s solve another quadratic equation:          \u2212 1  x 2  \u2212 1 x + 2 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2 \\blue{-1}x + \\green{2} = 0     \u2212 1  x        2   \u2212  1 x  +     2  =    0  . As we go, we\u2019ll plot our guesses on a graph, like this:\n  Here, we\u2019re plotting         y =  \u2212 1  x 2  \u2212 1 x + 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y = \\red{-1}x^2 \\blue{-1}x + \\green{2}    y  =     \u2212 1  x        2   \u2212  1 x  +     2  . Our goal is to find an         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   where         y = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=0    y  =    0  , as this would solve our equation. We\u2019ve made a couple of guesses already at the         \u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\u2718}     \u2718   marks. What guesses have we made?\n  Not quite: those are the         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -values. We\u2019ve made two guesses,         x = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0    x  =    0   and         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2  , for which we calculated the         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -values         y = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=2    y  =    2   and         y = \u2212 4 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4    y  =    \u2212 4  . For         x = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0    x  =    0  , we calculated         y = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=2    y  =    2  :\n y     =  \u2212 1  x 2  \u2212 1 x + 2         =  \u2212 1 ( 0  ) 2  \u2212 1 ( 0 ) + 2         = 0 + 0 + 2         = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}y&amp;= \\red{-1}x^2 \\blue{-1}x + \\green{2} \\\\&amp;= \\red{-1}(0)^2 \\blue{-1}(0) + \\green{2} \\\\&amp;= 0 + 0 + \\green{2} \\\\&amp;= 2 \\\\\\end{align*}             y          \u200b             =   \u2212 1  x        2   \u2212  1 x  +   2      =   \u2212 1 ( 0  )        2   \u2212  1 ( 0 )  +   2      =  0  +  0  +   2      =  2 \u200b\n In the same way, for the guess         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2  , we calculated         y = \u2212 4 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4    y  =    \u2212 4  :\n y     =  \u2212 1  x 2  \u2212 1 x + 2         =  \u2212 1 ( 2  ) 2  \u2212 1 ( 2 ) + 2         = \u2212 4 \u2212 2 + 2         = \u2212 4 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}y&amp;= \\red{-1}x^2 \\blue{-1}x + \\green{2} \\\\&amp;= \\red{-1}(2)^2 \\blue{-1}(2) + \\green{2} \\\\&amp;= -4 - 2 + \\green{2} \\\\&amp;= -4 \\\\\\end{align*}             y          \u200b             =   \u2212 1  x        2   \u2212  1 x  +   2      =   \u2212 1 ( 2  )        2   \u2212  1 ( 2 )  +   2      =  \u2212 4  \u2212  2  +   2      =  \u2212 4 \u200b\n  These two guesses were unsuccessful: they did not solve the equation          \u2212 1  x 2  \u2212 1 x + 2 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2 \\blue{-1}x + \\green{2} = 0     \u2212 1  x        2   \u2212  1 x  +     2  =    0  . What would a successful guess \u2014 that is, a   root   \u2014 look like on our graph?\n  It\u2019s the other way around. The         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -axis line is the set of points where         x = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0    x  =    0  , so a         \u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\u2718}     \u2718   on the         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -axis would just be the guess         x = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0    x  =    0  .\n We\u2019re trying to solve          \u2212 1  x 2  \u2212 1 x + 2 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2 \\blue{-1}x + \\green{2}=0     \u2212 1  x        2   \u2212  1 x  +     2  =    0  . We\u2019re plotting         y =  \u2212 1  x 2  \u2212 1 x + 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y = \\red{-1}x^2 \\blue{-1}x + \\green{2}    y  =     \u2212 1  x        2   \u2212  1 x  +     2  , so finding a point where         y = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=0    y  =    0   would solve our equation.\n The         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x  -axis line is the set of points where         y = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=0    y  =    0  . So all         \u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\u2718}     \u2718   on the         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x  -axis are roots of our equation.\n Using the graph, our incorrect guesses can help us choose a better next guess. To see why, plot         y =  \u2212 1  x 2  \u2212 1 x + 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y = \\red{-1}x^2 \\blue{-1}x + \\green{2}    y  =     \u2212 1  x        2   \u2212  1 x  +     2   for the rest of the range         \u2212 5 \u2264 x \u2264 5 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}-5 \\leq x \\leq 5    \u2212 5  \u2264    x  \u2264    5  . Which of the following curves does it look like? (You might want to grab paper and pencil.)\n    It\u2019s not curve         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold B}     B  . Try for example         x = \u2212 3 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-3    x  =    \u2212 3  , where you should get         y = \u2212 4 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4    y  =    \u2212 4  . This is far from the point         ( x = \u2212 3 , y = 4 ) \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x=-3,y=4)    ( x  =    \u2212 3 ,  y  =    4 )   on curve         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold B}     B  . If you plot all points correctly, you\u2019ll find they follow curve         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}     C   above.\n It\u2019s not curve         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold A}     A  . Try for example         x = 5 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=5    x  =    5  , where you should get         y = \u2212 28 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-28    y  =    \u2212 28  . This is far from the point         ( x = 5 , y = \u2212 3 ) \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x=5, y=-3)    ( x  =    5 ,  y  =    \u2212 3 )   on curve         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold A}     A  . If you plot all points correctly, you\u2019ll find they follow curve         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}     C   above.\n   No, that\u2019s the intersection of         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{C}     C   with the         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -axis. We want the intersection of         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{C}     C   with the         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x  -axis. These intersections are at         x = \u2212 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-2    x  =    \u2212 2   and         x = 1 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=1    x  =    1  .\n That\u2019s one root, but there\u2019s another at         ( x = \u2212 2 , y = 0 ) \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x=-2, y=0)    ( x  =    \u2212 2 ,  y  =    0 )  .\n Notice that curve         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}     C   follows an upside-down \u2018bowl\u2019 shape \ud83e\udd63. If you plot some more quadratics, you\u2019ll find that they all follow a similar \u2018bowl\u2019 or \u2018U\u2019 shape. It can be flipped upside down, or shifted up or to the side, or squished horizontally or vertically. But it\u2019s always a \u2018bowl\u2019 shape, called a   parabola.\n      Well done.         D \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold D}     D   could not be a quadratic, because it has an \u2018S\u2019 shape.\n A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\\bold A}     A   and         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold C}     C   are both   parabolas   (\u2018bowl\u2019 shapes, where bowl         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\\bold A}     A   happens to be upside-down).         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{B}     B   could also be part of a very stretched parabola. But the curve         D \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold D}     D   has an \u2018S\u2019 shape, so it could not be quadratic.\n Knowing that a quadratic always forms a \u2018U\u2019 shape helps us make better guesses. In the following graph of some quadratic, we\u2019ve already made three guesses:\n    No, this could not work. Only a \u2018U\u2019 shape could fit through these three points, and the only         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x  -value that looks like it could work is         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2  :\n Right! Only an upwards \u2018U\u2019 shape could fit through these three points, like so:\n   So graphs help us make better guesses, but we\u2019re still just guessing. This is not efficient either! Instead, the   quadratic formula   will give us an efficient way to find   all   the roots of   any   quadratic equation.\n          This does satisfy         P \u00d7 Q = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P \\times Q=0    P  \u00d7    Q  =    0  , but there are more solutions! For example,         P = 5 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P=5    P  =    5   and         Q = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}Q=0    Q  =    0  . You can visualize all the possible solutions by writing them out in a big table:\n  The result is zero all down the         P = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P = 0    P  =    0   column and all along the         Q = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}Q = 0    Q  =    0   row. So as long as one of the values is zero, the other can be anything.\n    As you\u2019ll discover shortly, this is a quadratic equation! But what are its solutions?\n  No, it\u2019s actually just like the last equation! We can let         P =  x \u2212 L \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{P}=\\orange{x-L}     P  =     x  \u2212  L   and         Q =  x \u2212 R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{Q}=\\pink{x-R}     Q  =     x  \u2212  R  . If         P = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{P}=0     P  =    0  , then          x \u2212 L = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{x-L}=0     x  \u2212  L  =    0  . If         Q = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{Q} = 0     Q  =    0  ,          x \u2212 R = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{x-R}=0     x  \u2212  R  =    0  .\n  You can simplify those solutions a bit. With a bit of rearranging, what do you get?\n  Be careful with the minus signs. Take         x \u2212 R = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x-\\pink{R}=0    x  \u2212     R  =    0   and add         R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{R}     R   to both sides. You should get         x = R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\pink{R}    x  =     R  .\n     The equation          ( x \u2212 L )  ( x \u2212 R ) = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{(x-L)}\\pink{(x-R)}=0     ( x  \u2212  L )  ( x  \u2212  R )  =    0   is actually a quadratic! You might remember how to \u2018multiply out\u2019 brackets, like this:\n    a     = x    b     = \u2212 L    c     = x    d     = \u2212 R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}a &amp;= x \\\\b &amp;= -\\orange{L} \\\\c &amp;= x \\\\d &amp;= -\\pink{R} \\\\\\end{align*}             a    b    c    d \u200b             =  x      =  \u2212  L      =  x      =  \u2212  R \u200b\n  ( x \u2212 L ) ( x \u2212 R )     = x x + x ( \u2212 R ) + ( \u2212 L ) x + ( \u2212 L ) ( \u2212 R )         =  x 2 + ( \u2212 L \u2212 R ) x + L R         =  x 2 \u2212 ( L + R ) x + L R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}(x-\\orange{L})(x-\\pink{R}) &amp;= xx + x(-\\pink{R}) + (-\\orange{L})x + (-\\orange{L})(-\\pink{R}) \\\\&amp;= x^2 +(-\\orange{L} -\\pink{R})x + \\orange{L}\\pink{R} \\\\&amp;= x^2 -(\\orange{L}+\\pink{R})x + \\orange{L}\\pink{R}\\end{align*}             ( x  \u2212   L ) ( x  \u2212   R )       \u200b             =  xx  +  x ( \u2212  R )  +  ( \u2212  L ) x  +  ( \u2212  L ) ( \u2212  R )      =   x        2  +  ( \u2212  L  \u2212   R ) x  +   L  R      =   x        2  \u2212  (  L  +   R ) x  +   L  R \u200b\n Right. The negatives cancel when multiplying, and we can factor a         \u2212 x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}-x    \u2212 x   out of the two middle terms.\n     No, it\u2019s simpler than that! Earlier you found the solutions to         ( x \u2212 L ) ( x \u2212 R ) = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x-\\orange{L})(x-\\pink{R})=0    ( x  \u2212     L ) ( x  \u2212     R )  =    0   are         x = L \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\orange{L}    x  =     L   or         x = R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\pink{R}    x  =     R  . And you found that         ( x \u2212 L ) ( x \u2212 R ) \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x-\\orange{L})(x-\\pink{R})    ( x  \u2212     L ) ( x  \u2212     R )   can be rearranged as          x 2 \u2212 ( L + R ) x + L R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x^2-(\\orange{L}+\\pink{R})x+\\orange{L}\\pink{R}     x        2  \u2212    (  L  +     R ) x  +     L  R  . Rearranging an equation doesn\u2019t change its solutions, so the solutions are still the same:         x = L \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\orange{L}    x  =     L   or         x = R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\pink{R}    x  =     R  .\n  x 2 \u2212 ( L + R ) x + L R = 0      L 2 \u2212 ( L + R ) L + L R = 0      L 2 \u2212 (  L 2 + R L ) + L R = 0      L 2 \u2212  L 2 \u2212 R L + L R = 0     0 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}x^2-(\\orange{L}+\\pink{R})x+\\orange{L}\\pink{R} = 0 \\\\\\orange{L}^2-(\\orange{L}+\\pink{R})\\orange{L}+\\orange{L}\\pink{R} = 0 \\\\\\orange{L}^2-(\\orange{L}^2+\\pink{R}\\orange{L})+\\orange{L}\\pink{R} = 0 \\\\\\orange{L}^2-\\orange{L}^2-\\pink{R}\\orange{L}+\\orange{L}\\pink{R} = 0 \\\\0 = 0\\end{align*}              x        2  \u2212  (  L  +   R ) x  +   L  R  =  0      L        2  \u2212  (  L  +   R )  L  +   L  R  =  0      L        2  \u2212  (   L        2  +   R  L )  +   L  R  =  0      L        2  \u2212    L        2  \u2212   R  L  +   L  R  =  0    0  =  0 \u200b\n   A  x 2 + B x + C = 0      x 2 \u2212 ( L + R ) x + L R = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}\\red{A}x^2 + \\blue{B}x + \\green{C} = 0 \\\\x^2-(\\orange{L}+\\pink{R})x+\\orange{L}\\pink{R} = 0\\end{align*}              A  x        2  +   B x  +   C  =  0     x        2  \u2212  (  L  +   R ) x  +   L  R  =  0 \u200b\n Yes, it\u2019s a quadratic equation! But what are its values of         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{A}     A  ,         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\blue{B}     B  \n......", "posttime": "2022-02-25 22:37:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u516c\u5f0f,quadratic,def", "title": "\u4e8c\u6b21\u516c\u5f0f", "title_en": "The Quadratic Formula", "transed": 1, "url": "https://tigyog.app/lessons/d1aswpgezqw6/r/the-quadratic-formula-a-tutorial", "via": "", "real_tags": ["\u516c\u5f0f", "quadratic", "def"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075000, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6709\u65f6\u548c\u6211\u7684\u52a9\u7406\u7c73\u5170\u00b7\u5f7c\u5f97\u7f57\u7ef4\u5947\u5f00\u73a9\u7b11\u8bf4\uff0c\u4ed6\u4f7f\u7528RAR\u5e76\u4e0d\u610f\u5473\u7740\u4ed6\u5c06\u9a7e\u9a76rari\u3002\u6bd5\u7adf\uff0c\u4ed6\u4e0d\u559c\u6b22\u8bf4\u5531\ud83d\ude24. \u9664\u4e86\u7b11\u8bdd\uff0c\u5982\u679c\u4f60\u641c\u7d22&#34\uff1b\u6211\u5e94\u8be5\u4f7f\u7528RAR&#34\uff1b\u6216\u8005\u4f60\u6700\u559c\u6b22\u7684\u641c\u7d22\u5f15\u64ce\u4e0a\u7684\u7c7b\u4f3c\u77ed\u8bed\uff0c\u4f60&#39\uff1b\u6211\u4f1a\u770b\u5230\u50cf2007\u5e74\u5510&#39\uff1bt\u4f7f\u7528ZIP\uff0c\u4f7f\u7528RAR\u548c2011\u4e3a\u4ec0\u4e48RAR\u6bd4ZIP&amp\uff1b\u6700\u597d\u7684RAR\u8f6f\u4ef6\u3002\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5e94\u8be5&#39\uff1b\u6211\u4eec\u4e0d\u80fd\u7528RAR\u5417\uff1fKyle Cordes\u57282007\u5e74\u7684\u535a\u5ba2\u6587\u7ae0\u300a\u4e3a\u4ec0\u4e48\u6211\u4e0d\u4f7f\u7528RAR\u300b\u4e2d\u5df2\u7ecf\u63d0\u5230\u4e86\u975e\u514d\u8d39\u8bb8\u53ef\u548c\u4ee5Windows\u4e3a\u4e2d\u5fc3\u7684\u65b9\u9762\u3002\u8fd9\u4e9b\u539f\u56e0\u4ecd\u7136\u76f8\u5173\uff1brar\u548cUNRR\u7684\u5b98\u65b9\u7248\u672c\u4ecd\u7136\u662f\u975e\u514d\u8d39\u7684\u3002\u6709\u4e00\u4e2a\u975e\u5b98\u65b9\u7684UNRR\u662f\u514d\u8d39\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u4f46\u6ca1\u6709\u514d\u8d39\u7684\u5f00\u6e90rar\uff0c\u56e0\u4e3arar\u8bb8\u53ef\u8bc1\u7981\u6b62\u521b\u5efa\u4e00\u4e2a\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u8fc7\u53bb15\u5e74\u4e2d\u7684\u65b0\u60c5\u51b5\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4f7f\u7528RAR\u800c\u4e0d\u662f\u5f00\u653e\u5f52\u6863\u548c\u538b\u7f29\u683c\u5f0f\u7684\u89c2\u70b9\u65e9\u5df2\u8fc7\u65f6\u3002\n\u9996\u5148\uff0c7-Zip\u5b9e\u73b0\u4e86\u66f4\u597d\u7684\u538b\u7f29\u6bd4\uff0c\u4f46\u538b\u7f29\u901f\u5ea6\u6bd4RAR\u6162\u5f97\u591a\u3002\u7136\u800c\uff0c\u81ea2013\u5e74\u4ee5\u6765\uff0c\u8c37\u6b4c&#39\uff1bs Brotli\u548c\u81ea2015\u5e74\u4ee5\u6765\u7684Facebook&#39\uff1bszstandard\uff08Zstd\uff09\u662f\u4e24\u4e2a\u5f88\u597d\u7684\u6587\u4ef6\u538b\u7f29\u9009\u9879\u3002\u9664\u4e86\u6587\u4ef6\u538b\u7f29\uff0cBrotli\u5728HTTP\u538b\u7f29\u4e2d\u5f97\u5230\u4e86\u5f88\u597d\u7684\u652f\u6301\uff0c\u800cZstd\u5728OpenZFS\u4e2d\u4f7f\u7528\u3002\u5b83\u4eec\u5728\u901f\u5ea6\u548c\u5927\u5c0f\u65b9\u9762\u4e5f\u4e0eRAR\u76f8\u5f53\u6709\u7ade\u4e89\u529b\uff1aRAR\u5728100\u79d2\u5185\u5c06\u6587\u4ef6\u538b\u7f29\u5230318 MB\uff0cBrotli\u572852.3\u79d2\u5185\u83b7\u5f97322 MB\uff0c\u800cZstd\u572863\u79d2\u5185\u83b7\u5f97321 MB\uff08\u4f7f\u7528128 MB\u7a97\u53e3\u5927\u5c0f\u65f6\uff09\u3002\n\u6b64\u5916\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u968f\u7740\u5e26\u5bbd\u7684\u589e\u52a0\u548c\u5feb\u901f\u589e\u52a0\uff0c\u4ea7\u751f\u7684\u6587\u4ef6\u5927\u5c0f\u7684\u5fae\u5c0f\u5dee\u5f02\u65e0\u5173\u7d27\u8981\u3002\n\u6700\u540e\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u559c\u6b22CLI\u7684\u4eba\u6765\u8bf4\uff0cPeaZip\u662f\u4e00\u6b3e\u5916\u89c2\u4e0d\u9519\u7684\u57fa\u4e8eGUI\u7684\u8de8\u5e73\u53f0archiver\uff0c\u7531GNU LGPLv3\u6388\u6743\u3002\u60f3\u4e00\u60f37-Zip\uff0c\u4f46\u662f\u6709\u66f4\u597d\u7684\u56fe\u6807\u548c\u5bf9Brotli\u548cZstd\u7684\u652f\u6301\u3002", "note_en": "I sometimes joke with my TA  Milan Petrovi\u0107 that his usage of RAR does not imply that he will be driving a  rari. After all, he is not  Devito rapping^Wsinging Uh \ud83d\ude24. Jokes aside, if you search for &#34;should I use RAR&#34; or a similar phrase on your favorite search engine, you&#39;ll see articles like 2007  Don&#39;t Use ZIP, Use RAR and 2011  Why RAR Is Better Than ZIP &amp; The Best RAR Software Available.\n So, why shouldn&#39;t we use RAR? The non-free license and Windows-centric aspects have already been addressed by  Kyle Cordes in the 2007 blog post  Why I do not use RAR. These reasons are still relevant; the  official versions of  rar and  unrar are still non-free. There is an  unofficial unrar that is free and open-source software, but there is  no free and open-source rar as creating one is prohibited by the  RAR license.\n Let&#39;s address what else is new in the last 15 years and why the arguments for using RAR over open archiving and compression formats are long obsolete.\n First off,  7-Zip achieves a better compression ratio, but it is much slower to compress than RAR. However, since 2013  Google&#39;s Brotli and since 2015  Facebook&#39;s Zstandard (Zstd) are two good options for file compression. Aside from the file compression,  Brotli is well-supported in HTTP compression and  Zstd is used in OpenZFS. They are  quite competitive against RAR in terms of speed and size too: where RAR compresses a file to 318 MB in 100 seconds, Brotli gets 322 MB in 52.3 s, while Zstd gets 321 MB in 63 s (when 128 MB window size is used).\n Furthermore, the small differences in the resulting file size matter less over time as bandwidth is  increasing and increasing fast.\n Finally, for those who dislike CLI,  PeaZip is a good-looking  cross-platform  GUI-based  archiver  licensed under GNU LGPLv3. Think 7-Zip, but with nicer icons and support for Brotli and Zstd.", "posttime": "2022-02-25 22:35:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "don,rar", "title": "\u4e0d\u8981\u4f7f\u7528RAR", "title_en": "Don't Use RAR", "transed": 1, "url": "https://group.miletic.net/en/blog/2022-02-24-dont-use-rar/", "via": "", "real_tags": ["don", "rar"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074999, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u4efb\u4f55\u5b58\u50a8\u6570\u636e\u7684\u4eba\u6765\u8bf4\uff0c\u521b\u5efa\u5907\u4efd\u90fd\u662f\u4e00\u9879\u57fa\u672c\u9700\u8981\u3002\u5728\u4e13\u7528\u670d\u52a1\u5668\u3001Linux\u64cd\u4f5c\u7cfb\u7edf\u548crsync\u8f6f\u4ef6\u7684\u5e2e\u52a9\u4e0b\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7SSH\u8fde\u63a5\u5b89\u5168\u9ad8\u6548\u5730\u4ece\u4efb\u4f55\u8ba1\u7b97\u673a\u68c0\u7d22\u6570\u636e\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u5907\u4efd\u4e2d\u3002\u53e6\u4e00\u8fb9\u662f\u53e6\u4e00\u53f0Linux\u670d\u52a1\u5668\u3001Mac\u7535\u8111\u8fd8\u662fWindows\u7535\u8111\u90fd\u65e0\u5173\u7d27\u8981\u3002\u4f46\u662f\u4e00\u65e6\u4f60\u6709\u4e86\u8d85\u8fc7\u51e0\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u4f60\u5c31\u5fc5\u987b\u7cbe\u786e\u5730\u63a7\u5236\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u8be5\u811a\u672c\u5305\u542b\u4e00\u4e9b\u91cd\u8981\u5143\u7d20\uff0c\u5728\u5904\u7406\u5927\u91cf\u6570\u636e\u548c\u6162\u901f\u4e92\u8054\u7f51\u7ebf\u8def\u65f6\uff0c\u8fd9\u4e9b\u5143\u7d20\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\n\u5b83\u533a\u5206\u4e86TOSSH\u548cssh\uff0c\u5373\u670d\u52a1\u5668\u662f\u5426\u83b7\u53d6\u67d0\u4e9b\u5185\u5bb9\uff0c\u6216\u8005\u662f\u5426\u5c06\u67d0\u4e9b\u5185\u5bb9\u63a8\u9001\u5230\u5907\u4efd\u670d\u52a1\u5668\uff08TOSSH\uff09\u3002\u5982\u679c\u662fFROMSSH\uff0c\u5219\u8ba1\u7b97\u673a\u4e0a\u6ca1\u6709\u8981\u5907\u4efd\u7684\u8bbf\u95ee\u6570\u636e\u3002\u5230\u5907\u4efd\u7684\u8fde\u63a5\u51ed\u636e\u59cb\u7ec8\u662f\u52a0\u5bc6\u7279\u6d1b\u4f0a\u6728\u9a6c\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\uff0c\u56e0\u6b64\u5907\u4efd\u670d\u52a1\u5668\u6700\u597d\u81ea\u5df1\u83b7\u53d6\u6570\u636e\uff0c\u5373\u5b83\u662f\u8fde\u63a5\u5230\u8981\u5907\u4efd\u7684\u8ba1\u7b97\u673a\u7684\u51ed\u636e-&gt\uff1bfromsh\n\u5b83\u533a\u5206\u4e86\u7528\u6bcf\u4e2a\u6708\u7684\u5929\u6570\u8986\u76d6\u6587\u4ef6\u5939\uff0c\u6216\u521b\u5efa\u4ee5\u5b8c\u6574\u65e5\u671f\u4e3a\u540d\u79f0\u7684\u65b0\u6587\u4ef6\u5939-&gt\uff1b\u8499\u7279\u7f57\u5854\u7279\n\u5b83\u53ef\u4ee5\u68c0\u67e5\u8981\u5907\u4efd\u7684\u5377\u662f\u5426\u901a\u8fc7USB\u8fde\u63a5\u5230\u8ba1\u7b97\u673a-&gt\uff1bMOUNTPOINT\uff08\u6211\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u3002\uff09\n\u5b83\u53ef\u4ee5\u901a\u8fc7\u5907\u4efd\u8fc7\u7a0b\u7684\u65e5\u5fd7\u542f\u52a8\u90ae\u4ef6\u53d1\u9001\u3002\n\u5b83\u53ef\u4ee5\u5220\u9664\u6e90\u548c\u5907\u4efd\u4e2d\u4e0d\u518d\u5b58\u5728\u7684\u6587\u4ef6\u3002\n\u4f7f\u7528\u5b58\u50a8\u7684\u5bc6\u94a5\uff08\u4f7f\u7528SSH\u5bc6\u94a5\uff0c\u800c\u4e0d\u662f\u5bc6\u7801\uff01\uff09\u5907\u4efd\u670d\u52a1\u5668\u901a\u8fc7SSH\uff08\u4eceSSH\uff09\u62e8\u53f7\u8981\u5907\u4efd\u7684\u8ba1\u7b97\u673a\u3002\u5728\u90a3\u91cc\uff0c\u5b83\u5c06\u8981\u5907\u4efd\u7684\u5377\u4e0a\u7684\u6587\u4ef6\u4e0e\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u7684\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c\u6bd4\u8f83\uff0c\u8be5\u6587\u4ef6\u5939\u540d\u4e3a\u201clast\u201d\u3002\u7136\u540e\u6839\u636e\u5f53\u5929\u7684\u7f16\u53f7\uff08\u4f8b\u5982\u201c02\u201d\uff09\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\uff0c\u6240\u6709\u65b0\u7684\u6216\u66f4\u6539\u7684\u6587\u4ef6\u90fd\u5b58\u50a8\u5728\u5176\u4e2d\u3002\u5728\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\u4e0a\uff0c\u5728\u65b0\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u786c\u94fe\u63a5\uff0c\u4ee5\u4fbf\u8fd9\u4e9b\u6587\u4ef6\u90fd\u201c\u5b58\u5728\u201d\u5728\u65b0\u6587\u4ef6\u5939\u4e2d\u3002\u5220\u9664\u7684\u6587\u4ef6\u4e0d\u4f1a\u83b7\u5f97\u786c\u94fe\u63a5\u3002\u5982\u679c\u4e00\u5207\u5c31\u7eea\uff0c\u5219\u7b26\u53f7\u201clast\u201d\u73b0\u5728\u6307\u5411\u65b0\u6587\u4ef6\u5939\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u6708\u91cc\uff0c\u53ea\u9700\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u5939\uff08MONTHROTATE\uff09\u8986\u76d6\u5177\u6709\u76f8\u540c\u65e5\u6570\u7684\u65e7\u6587\u4ef6\u5939\u3002\u65e5\u671f\u548c\u6bcf\u4e2a\u4f20\u8f93\u7684\u6587\u4ef6\u90fd\u4f1a\u5199\u5165\u65e5\u5fd7\uff0c\u65e5\u5fd7\u4f1a\u4f5c\u4e3a\u989d\u5916\u6587\u4ef6\u521b\u5efa\uff0c\u6bcf\u6b21\u90fd\u4f1a\u88ab\u8986\u76d6\u3002\u6700\u540e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5c06\u4f5c\u4e3a\u90ae\u4ef6\u53d1\u9001\u3002\u5907\u4efd\u811a\u672c\u6bcf\u5929\u901a\u8fc7\u7279\u6b8a\u5907\u4efd\u7528\u6237\uff08\u6ca1\u6709sudo\u6743\u9650\uff09\u7684crontab\u542f\u52a8\u3002\n\u5982\u679crsync\u8fdb\u7a0b\u8017\u65f6\u8d85\u8fc724\u5c0f\u65f6\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8fdb\u7a0b\u4f1a\u91cd\u53e0\u548c\u7d2f\u79ef\uff08\u65b0\u8fdb\u7a0b\u542f\u52a8\u65f6\uff0c\u65e7\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\uff09\uff0c\u76f8\u4e92\u963b\u585e\uff0c\u4ec0\u4e48\u90fd\u4e0d\u8d77\u4f5c\u7528-&gt\uff1b\u56e0\u6b64\uff0c\u65b0\u6d41\u7a0b\u53ea\u6709\u5728\u524d\u4e00\u4e2a\u6d41\u7a0b\u5b8c\u6210\u540e\u624d\u80fd\u542f\u52a8\u3002\n\u5728\u5305\u542b\u8bb8\u591a\u6587\u4ef6\u7684\u5927\u5bb9\u91cf\u4e2d\uff0c\u65e5\u5fd7\u6587\u4ef6\u53d8\u5f97\u592a\u957f\uff0c\u65e0\u6cd5\u518d\u653e\u5165\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u56e0\u6b64\u7535\u5b50\u90ae\u4ef6\u5c06\u4e0d\u518d\u53d1\u9001-&gt\uff1b\u5bf9\u4e8e\u5927\u5bb9\u91cf\uff0c\u53ea\u5e94\u8bb0\u5f55\u9519\u8bef\u3002\n\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5219\u4ecd\u4f1a\u521b\u5efa\u6307\u5411\u65b0\u521b\u5efa\u6587\u4ef6\u5939\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u5f53\u524d\u6807\u8bb0\u4e3aname\u3002\u8fd9\u5bfc\u81f4\u4e0b\u4e00\u6b21\u5907\u4efd\u65f6\uff0c\u5b8c\u6574\u5907\u4efd\u4f1a\u518d\u6b21\u4f20\u8f93\u3002\u5bf9\u4e8e\u6570TB\u7684\u6570\u636e\uff0c\u901a\u8fc7\u4e92\u8054\u7f51\u4f20\u8f93\u6570\u636e\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u6708\u7684\u65f6\u95f4-&gt\uff1b\u53ea\u6709\u5728\u4e4b\u524d\u6ca1\u6709\u9519\u8bef\u65f6\u624d\u66f4\u6539\u7b26\u53f7\u94fe\u63a5\uff0c\u5426\u5219\u5c06\u7b26\u53f7\u94fe\u63a5\u4fdd\u7559\u5230\u6b63\u5e38\u6587\u4ef6\u5939\uff0c\u76f4\u5230\u518d\u6b21\u8fdb\u884c\u65e0\u9519\u8bef\u5907\u4efd\u3002\u7f3a\u70b9\uff1a\u5373\u4f7f\u624b\u52a8\u542f\u52a8\u811a\u672c\uff0c\u4e5f\u4e0d\u53ef\u80fd\u5728\u540c\u4e00\u5929\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5907\u4efd\u3002\n\u5907\u4efd\u670d\u52a1\u5668\u53ea\u9700\u8981\u5f88\u77ed\u7684\u65f6\u95f4\uff0c\u4f46\u53ef\u4ee5\u8fd0\u884c\u4e00\u6574\u5929-&gt\uff1b\u540c\u65f6\u4f7f\u7528\u5355\u72ec\u7684\u811a\u672c\u5173\u95ed\u670d\u52a1\u5668\uff0c\u4f46\u524d\u63d0\u662f\u5f53\u524d\u6ca1\u6709\u8fd0\u884c\u5907\u4efd\uff0c\u6216\u8005\u5f53\u524d\u6709\u4eba\u901a\u8fc7SSH\u767b\u5f55\u3002\u5c06\u6b64\u4efb\u52a1\u4e0e\u5907\u4efd\u7528\u6237\u5206\u5f00\uff0c\u5e76\u901a\u8fc7\u7ba1\u7406\u7528\u6237\u6216central/etc/crontab\u6267\u884c\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u6839\u6743\u9650\u3002\uff08\u8fd9\u4e0d\u662f\u672c\u535a\u5ba2\u7684\u4e00\u90e8\u5206\u3002\uff09\n\u4e3a\u4e86\u4fdd\u6301\u8ddf\u8e2a\uff0c\u4e00\u4e2a\u6587\u4ef6\u5b58\u50a8\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff0c\u4e00\u4e2a\u63a5\u4e00\u4e2a\uff0c\u6bcf\u4e2a\u6761\u76ee\u53ea\u6709\u51e0\u884c-&gt\uff1b\u6240\u6709\u65e5\u5fd7\n#!/bin/bash#\u907f\u514d\u4e0e\u5176\u4ed6rsync\u8fdb\u7a0b\u53d1\u751f\u51b2\u7a81#\u4f20\u9012\u7ed9\u811a\u672c\u7684\u5206\u949f\u6570#21h*60min=1260\u5206\u949f\u5206\u949f\u5206\u949f=1260#\u786e\u4fdd\u6ca1\u6709\u5176\u4ed6\u4eba\u5728\u4f7f\u7528rsync#on=$\uff08ps aux | grep-c rsync\uff09#\u5982\u679c\u6709\u4eba\u5728\u4f7f\u7528rsync#grep\u4e5f\u5728\u751f\u6210\u4e00\u4e2a\u6761\u76eeso-gt 1\u800c[$pro u on-gt 1]do sleep 60\u5206\u949f=$\uff08$minutes-1\uff09\uff09#\u5982\u679c[$minutes-lt 60]\uff0c\u5219\u7b2c\u4e8c\u5929\u65e0\u9700\u5f00\u59cb\uff1b\u7136\u540e\u9000\u51fa0 fi pro_on=$\uff08ps aux | grep-c rsync\uff09\u5b8c\u6210\n\u8fd9\u662f\u68c0\u67e5\u5176\u4ed6rsync\u8fdb\u7a0b\u662f\u5426\u6b63\u5728\u8fd0\u884c\u7684\u5757\u3002\u5b83\u6539\u7f16\u81ea\u4ee5\u4e0b\u4ee3\u7801\u201c\u8ba9\u60a8\u7684\u670d\u52a1\u5668\u6253\u76f9\u201d\uff1a\n\u5728\u7b2c\u4e00\u884c\u4e2d\uff0c\u4f60\u8bf4\u201cbash\u201d\u5e94\u8be5\u88ab\u59d4\u6258\u6267\u884c\u3002\n\u201c\u5206\u949f=1260\u201d\u610f\u5473\u7740\u8be5\u811a\u672c\u542f\u52a8\u7684\u5ef6\u8fdf\u65f6\u95f4\u6700\u591a\u5e94\u4e3a21\u5c0f\u65f6\u3002\u6b64\u540e\uff0c\u811a\u672c\u5c06\u4e0d\u4f1a\u6267\u884c\uff0c\u56e0\u4e3acron\u8fdb\u7a0b\u5c06\u5728\u4e0b\u4e00\u8f6e\u5907\u4efd\u4e2d\u542f\u52a8\u3002\n\u201cpro_on=$\uff08ps aux | grep-c rsync\uff09\u201d\uff0c\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u8fd9\u91cc\u662f\u201crsync\u201d\uff0cgrep\u547d\u4ee4\u672c\u8eab\u4e5f\u4f1a\u5728\u670d\u52a1\u5668\u4e0a\u751f\u6210\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u60a8\u5fc5\u987b\u4f7f\u7528\u201c\u5927\u4e8e1\u201d\u5373\u201c\u5927\u4e8e1\u201d\u7684\u539f\u56e0\u3002\n\u4e4b\u540e\uff0c\u5b83\u8fdb\u5165\u4e00\u4e2awhile\u5faa\u73af\uff0c\u6bcf\u8f6e\u4ee5\u201csleep 60\u201d\u4f11\u7720\u4e00\u5206\u949f\uff0c\u7136\u540e\u68c0\u67e5\u662f\u5426\u4ecd\u6709\u591a\u4e2agrep rsync\u8fdb\u7a0b\u5728\u8fd0\u884c\u3002\u7136\u540e\uff0c\u5206\u949f\u603b\u662f\u63091\u5012\u8ba1\u65f6\uff0c\u5982\u679c\u572821\u5c0f\u65f6\u7ed3\u675f\u4e4b\u524d\uff0c\u65f6\u95f4\u4e0d\u8db360\u5206\u949f\uff0c\u5219\u4e0d\u518d\u503c\u5f97\u8fd0\u884c\u811a\u672c\uff0c\u201c\u9000\u51fa0\u201d\u4e2d\u6b62\u3002\u4e4b\u540e\uff0ccron\u5c06\u5728\u7b2c\u4e8c\u5929\u7684\u5e38\u89c4\u65f6\u95f4\u91cd\u8bd5\u3002\u5f53\u53e6\u4e00\u4e2arsync\u8fdb\u7a0b\u9700\u8981\u8d85\u8fc720\u5c0f\u65f6\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n#\u4f7f\u7528rsync#\u672c\u5730\u6a21\u5f0f\u3001tossh\u6a21\u5f0f\u3001fromsh modeSOURCES=\uff08/Volumes/my#u volume/\uff09TARGET=&#34\u8fdb\u884c\u7b80\u5355\u5907\u4efd/srv/\u5907\u4efd\u5377&#34\uff1b#\u7528&#34\u7f16\u8f91\u6216\u8bc4\u8bba#&#34;MONTHROTATE=MONTHROTATE#\u4f7f\u7528DD\u800c\u4e0d\u662fyymmdrsyncconf=\uff08-delete--exclude=/Volumes/Raid/.DocumentRevisions-V100--exclude=/Volumes/Raid/.temporary items--exclude=/Volumes/Raid/.apdisc\uff09MAILREC=&#34\uff1b\u6211\u7684\u5bb6_mail@something.de&#34;SSHUSER=&#34\uff1blinux#U\u5907\u4efd\u7528\u6237&#34\uff1bfromsh=&#34\uff1blinux_backupuser@999.888.777.666&#34;#\u6258\u4ec0=&#34\uff1btossh\u670d\u52a1\u5668&#34\uff1bSSHPORT=22222\u652f\u67b6=34/\u5783\u573e\u7bb1/\u5c71&#34\uff1b\uff1bFGREP=&#34/bin/fgrep&#34\uff1b\uff1bSSH=&#34/usr/bin/ssh&#34\uff1bLN=&#34/\u5783\u573e\u7bb1/\u5783\u573e\u7bb1&#34\uff1b\uff1bECHO=&#34/bin/echo&#34\uff1b\uff1b\u65e5\u671f=&#34/\u94f6\u884c\u6807\u8bc6\u4ee3\u7801/\u65e5\u671f&#34\uff1b\uff1bRM=&#34/\u5783\u573e\u7bb1/rm&#34\uff1bDPKG=#34/usr/bin/dpkg&#34\uff1b\uff1bAWK=&#34/usr/bin/awk&#34\uff1b\uff1b\u90ae\u4ef6=&#34/usr/bin/mail&#34\uff1b\u5207\u5272=\u548c#34/usr/bin/cut&#34\uff1b\uff1bTR=&#34/usr/bin/tr&#34\uff1b\uff1bRSYNC=&#34/usr/bin/rsync&#34\uff1bLAST=&#34\uff1b\u6700\u540e&#34\uff1b\uff1bINC=&#34--link dest=$TARGET/$LAST&#34\uff1b\uff1bLS=&#34/\u5783\u573e\u7bb1/\u5783\u573e\u7bb1\u548c#34\uff1b\n\u6e90\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6e90\uff0c\u7531\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\u3002SOURCES\u5728\u672b\u5c3e\u6709\u4e00\u4e2a\u659c\u6760\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6bcf\u6b21\u751f\u6210\u6587\u4ef6\u5939/user/Volumes/Data_\u6587\u4ef6\u5939\u3002\n\u6e90\u5982\u679c\u6e90\u6587\u4ef6\u672b\u5c3e\u6709\u4e00\u4e2a\u201c/\u201d\uff0c\u5219\u53ea\u590d\u5236\u5185\u5bb9\uff0c\u800c\u4e0d\u590d\u5236\u6700\u540e\u6307\u5b9a\u7684\u6587\u4ef6\u5939\u3002\nSOURCES\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u7a0d\u540e\u5c06\u4f7f\u7528${SOURCES[@]}\u8bbf\u95ee\u5b83\u3002\u53ef\u4ee5\u7528\u7a7a\u683c\u5206\u9694\u591a\u4e2a\u6e90\u3002\u7136\u540e\uff0c\u65e5\u5fd7\u4e2d\u4f1a\u6709\u5355\u72ec\u7684\u8f93\u51fa\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6e90\u90fd\u4f1a\u5904\u7406\u4e00\u4e2a\u201cdo\u5faa\u73af\u201d\u3002\n\u76ee\u6807\u7684\u672b\u5c3e\u6ca1\u6709\u659c\u6760\uff0c\u5982\u679c\u7f3a\u5c11\u659c\u6760\uff0c\u5c06\u5728\u4ee5\u540e\u81ea\u52a8\u6dfb\u52a0\u659c\u6760\u3002\n\u201c\u5220\u9664\u201d\u8868\u793a\u5728\u6e90\u6587\u4ef6\u4e2d\u5220\u9664\u7684\u6587\u4ef6\u4e5f\u5728\u76ee\u6807\u6587\u4ef6\u4e2d\u5220\u9664\u3002\u4e00\u4e9b\u70b9\u6587\u4ef6\uff08.file\uff09\u6709\u65f6\uff0c\u4ece\u6e90\u5934\u4e0a\u63d0\u51fa\u9605\u8bfb\u95ee\u9898\uff0c\u4ee5\u4fbf\u6700\u597d\u5c06\u5176\u6392\u9664\u5728\u5916\u3002\u95ee\u9898\u662f\uff0c\u5b83\u4eec\u5728\u8bfb\u53d6\u8981\u590d\u5236\u7684\u6587\u4ef6\u548c\u590d\u5236\u8fc7\u7a0b\u4e4b\u95f4\u53d1\u751f\u53d8\u5316\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u9519\u8bef\u3002\u7531\u4e8eRSYNCCONF\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u653e\u7f6e\u66f4\u591arsyn\u6807\u5fd7\u3002\n\u7531\u4e8e\u5728\u4e00\u4e2a\u6708\u5185\uff0c\u603b\u662f\u5c06\u65e5\u671f\u6307\u5b9a\u4e3a\u6587\u4ef6\u5939\uff0c\u56e0\u6b64\u5728\u4e0b\u4e2a\u6708\u7684\u7b2c4\u5929\uff0c\u5e26\u6709\u65e5\u671f\u7f16\u53f7\uff08\u4f8b\u5982\u201c04\u201d\uff09\u7684\u76f8\u5e94\u6587\u4ef6\u5939\u5c06\u518d\u6b21\u88ab\u8986\u76d6\u3002\u5982\u679c\u4e0d\u9002\u7528\uff0c\u5219\u53ef\u4ee5\u5bf9\u5e26\u6709\u5b8c\u6574\u65e5\u671f\u7684\u6587\u4ef6\u5939\u4f7f\u7528\u8f83\u957f\u7684\u65e5\u671f\u3002\u60a8\u6bcf\u5929\u90fd\u4f1a\u6536\u5230\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5e94\u4e0d\u65f6\u5220\u9664\u65e7\u6587\u4ef6\u5939\u3002\n\u5220\u9664\u4f3c\u4e4e\u4e0d\u4f1a\u5220\u9664\u4ecd\u7136\u9700\u8981\u7684\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u786c\u94fe\u63a5\u3002\u8fd9\u4e9b\u94fe\u63a5\u53ef\u4ee5\u662f\u6307\u5411\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u4e2a\u94fe\u63a5\uff0c\u53ea\u8981\u786c\u94fe\u63a5\u4ecd\u7136\u5b58\u5728\uff08\u6765\u81ea\u53e6\u4e00\u4e2aday\u6587\u4ef6\u5939\uff09\uff0c\u6587\u4ef6\u5c31\u4e0d\u4f1a\u88ab\u5220\u9664\u3002\u65b0\u7684\u5907\u4efd\u5c06\u751f\u6210\u53e6\u4e00\u4e2a\u6307\u5411\u8be5\u6587\u4ef6\u7684\u65b0\u786c\u94fe\u63a5\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5982\u679c\u4f60\u8df3\u8fc7\u4e00\u5929\u4f3c\u4e4e\u4e0d\u6210\u95ee\u9898\u7684\u539f\u56e0\u3002\uff08\u81f3\u5c11\u6211\u662f\u8fd9\u6837\u7406\u89e3\u7684\uff0c\u4f46\u5728Linux\u201cls-la\u201d\u8f93\u51fa\u4e2d\uff0c\u6ca1\u6709\u770b\u5230\u8d85\u8fc7\u4e00\u4e2a\u786c\u94fe\u63a5\uff09\u3002\n\u4e3a\u4e86\u8ddf\u8e2a\u5e8f\u5217\uff0c\u6211\u5728\u811a\u672c\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u201c\u6240\u6709\u65e5\u5fd7\u201d\u6587\u4ef6\uff0c\u89c1\u4e0b\u6587\u3002\n\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u540e\u4e00\u4e2a\u5907\u4efd\u6587\u4ef6\u5939\u90fd\u6709\u201c\u6700\u540e\u4e00\u4e2a\u201d\u7684\u7b26\u53f7\u94fe\u63a5\u3002\u5e26\u6709\u201c\u6700\u540e\u4e00\u4e2a\u201d\u7684\u94fe\u63a5\u6587\u4ef6\u5939\u7528\u4e8e\u6bd4\u8f83\u65b0\u65e7\u6587\u4ef6\u3002\u53ea\u5c06\u65b0\u6587\u4ef6\u590d\u5236\u5230\u5907\u4efd\u4e2d\u3002\n\uff08Bash\u53d8\u91cf\u4e0d\u5fc5\u5927\u5199\uff0c\u8fd9\u53ea\u662f\u4f5c\u8005\u7684\u98ce\u683c\uff09\u3002\n\u901a\u8fc7MAILREC\u6307\u5b9a\u65e5\u5fd7\u90ae\u4ef6\u7684\u76ee\u6807\u5730\u5740\u3002\u6ce8\u610f\uff0c\u90ae\u4ef6\u5728\u539f\u59cb\u811a\u672c\u4e2d\u5305\u542b\u4fdd\u5b58\u6587\u4ef6\u7684\u5b8c\u6574\u5217\u8868\u3002\u8fd9\u53ef\u80fd\u662f\u51e0\u767eMB\uff0c\u7136\u540e\u5361\u5728\u90ae\u4ef6\u670d\u52a1\u5668\u4e2d\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u540e\u6765\u53ea\u5728\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5305\u542b\u9519\u8bef\uff08\u81f3\u5c11\u5bf9\u4e8e\u5927\u578b\u5907\u4efd\u662f\u8fd9\u6837\uff09\u3002\u89c1\u4e0b\u6587\u3002\n\u4ecessh\u6216TOSSH\uff0c\u6211\u4eec\u4ece\u8fd9\u91cc\u7684\u4e00\u4e2a\u6e90\u5907\u4efd\uff0c\u56e0\u6b64\u4ecessh\u3002\u53c2\u6570\u9700\u8981\u670d\u52a1\u5668\u8fde\u63a5\u3002FROMSSH\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u65e0\u6cd5\u8bbf\u95ee\u6b63\u5728\u5907\u4efd\u7684\u670d\u52a1\u5668\u4e0a\u7684\u5907\u4efd\u6570\u636e\u3002\u8fd9\u5bf9\u4e8e\u52a0\u5bc6\u7279\u6d1b\u4f0a\u6728\u9a6c\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u67e5\u627e\u8fd9\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u9996\u5148\u5bf9\u5907\u4efd\u8fdb\u884c\u52a0\u5bc6\u3002\n\u5355\u4e2a\u7a0b\u5e8f\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\uff0c\u8fd9\u662f\u4e00\u79cd\u6709\u8da3\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8c03\u7528\u811a\u672c\u7a0b\u5e8f\uff0c\u5e76\u786e\u4fdd\u5373\u4f7f\u6ca1\u6709\u5728path\u53d8\u91cf\u4e2d\u5217\u51fa\u5b83\u4eec\uff0c\u4e5f\u80fd\u627e\u5230\u5b83\u4eec\u3002\nLAST\u6307\u5b9a\u7b26\u53f7\u94fe\u63a5\u6587\u4ef6\u5939\u7684\u540d\u79f0\u201clast\u201d\u5219\u662f\u6307\u5411\u6700\u540e\u4e00\u6b21\u5907\u4efd\u7684sym\u94fe\u63a5\u3002\n\u56e0\u4e3a\u6211\u4ee5\u540e\u9700\u8981\u201cls\u201dlist\u547d\u4ee4\uff0c\u6240\u4ee5\u6211\u4e5f\u5c06\u5176\u4e0e\u5b8c\u6574\u8def\u5f84\u4e00\u8d77\u653e\u5165\u53d8\u91cf\u4e2d\u3002\u4f46\u662f\u201cls\u201d\u4e0d\u4ec5\u5728bin\u4e2d\u53ef\u7528\uff0c\u5728sbin\u4e2d\u4e5f\u53ef\u7528\uff0c\u6211\u4ecebin\u4e2d\u83b7\u53d6\u5b83\u3002\n\u6bcf\u6b21\u5907\u4efd\u540e\u90fd\u4f1a\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u65e5\u5fd7\u6587\u4ef6\uff0c\u7136\u540e\u518d\u6b21\u8986\u76d6\u3002\u5728\u4f60\u7684\u7535\u5b50\u90ae\u4ef6\u7a0b\u5e8f\u4e2d\uff0c\u4f60\u53ea\u5269\u4e0b\u6536\u96c6\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u9664\u4e86\u6ca1\u6709\u592a\u591a\u7684\u6587\u4ef6\uff0c\u800c\u4e14\u7531\u4e8e\u90ae\u4ef6\u7684\u5927\u5c0f\uff0c\u90ae\u4ef6\u6ca1\u6709\u53d1\u9001\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u5e0c\u671b\u6709\u4e00\u4e2a\u201c\u5168\u5929\u65e5\u5fd7\u6587\u4ef6\u201d\uff0c\u5217\u51fa\u6240\u6709\u5907\u4efd\uff0c\u6709\u9519\u8bef\uff0c\u4f46\u6ca1\u6709\u5b8c\u6574\u7684\u5907\u4efd\u6587\u4ef6\u5217\u8868\u3002\uff08\u8fdb\u4e00\u6b65\uff0c\u6211\u5173\u95ed\u4e86\u6587\u4ef6\u5217\u8868\uff1a\u9ed8\u8ba4\u4e3a\uff1aINC 2&gt\uff1b$log\uff0c\u800c\u4e0d\u662f2&gt\uff1b&gt\uff1b$1\uff0c\u7136\u540e\u5217\u51fa\u6b63\u5e38\u548c\u9519\u8bef\u8f93\u51fa\uff09\u3002\u8be5\u8bed\u53e5\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u201c\\n\u201d\u751f\u6210\u4e00\u4e2a\u65b0\u884c\uff0c\u5e76$*\u201c\u5305\u542b\u60a8\u4e3a\u51fd\u6570\u63d0\u4f9b\u7684\u6240\u6709\u53c2\u6570\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u5c06\u4f20\u9012\u65e5\u5fd7\u6587\u672c\uff0c\u7136\u540e\u6574\u4e2a\u8fc7\u7a0b\u5c06\u5728\u7ed3\u5c3e\u5904\u5199\u5165\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\u201d\uff0c\u5982\u679c\u5b83\u4e0d\u5b58\u5728\u4e5f\u4f1a\u88ab\u521b\u5efa\u3002\u201ce\u201d\u5f00\u5173\u4f7fecho\u8bc4\u4f30\u53cd\u659c\u6760\uff0c\u6ca1\u6709\u53cd\u659c\u6760\u5c31\u6ca1\u6709\u65ad\u7ebf\u3002\n\u6b64\u65f6\uff0c\u201c0\u7f8e\u5143\u201d\u5305\u542b\u811a\u672c\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u65e5\u5fd7\u6587\u4ef6\u7684\u547d\u540d\u4e0e\u811a\u672c\u52a0\u4e0a\u201clog\u201d\u7c7b\u4f3c\uff08\u4f8b\u5982\uff1abackup_script.sh.log\uff09\u3002\u4e4b\u540e\uff0c\u5b8c\u6574\u7684\u65e5\u671f/\u65f6\u95f4\u5c06\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5907\u4efd\u8fc7\u7a0b\u4f55\u65f6\u5f00\u59cb\u3002\u5728\u811a\u672c\u5b8c\u6210\u540e\uff0c\u6700\u540e\u8fd8\u6709\u4e00\u4e2a\u65e5\u671f/\u65f6\u95f4\u6761\u76ee\u3002\u4f60\u4f1a\u770b\u5230\u82b1\u4e86\u591a\u957f\u65f6\u95f4\u3002\n\u7531\u4e8e\u5176\u4ed6\u6587\u4ef6\u5939\u5df2\u9644\u52a0\u5230\u76ee\u6807\u6587\u4ef6\u5939\uff0c\u56e0\u6b64\u9700\u8981\u5728\u672b\u5c3e\u52a0\u659c\u6760\u3002\u5728\u8fd9\u91cc\uff0c\u5b83\u88ab\u786e\u4fdd\u6c38\u8fdc\u5b58\u5728\u3002\n#zazu\u68c0\u67e5\u4eca\u5929\u7684\u6570\u5b57\u662f\u5426\u4e0e#\u7b26\u53f7\u94fe\u63a5#34\u76f8\u540c\uff1b\u6700\u540e&#34\uff1b\u5230\u7f16\u53f7\u7684\u6587\u4ef6\u5939#\u4e00\u5929\u4e5f\u6ca1\u67092\u6b21\u5907\u4efd-\u7ed9\u51fa\u4e00\u4e2aERRORHEUTE=$\uff08$DATE+%d\uff09cd$TARGETLAST_\u7b26\u53f7\u94fe\u63a5=$\uff08$LS-l | grep^l | grep-o&#34\uff1b[0-9][0-9]$&#34\uff1b\uff09cd/home/sicherung/bin\n\u9996\u5148\uff0c\u5c06\u6708\u4efd\u7684\u65e5\u6570\u5199\u5165\u53d8\u91cf\u201c\u4eca\u65e5\u201d\uff1a01\u621602\u7b49\u3002\u7136\u540e\uff0c\u6211\u7528\u201ccd\u201d\u5c06\u5176\u66f4\u6539\u4e3a\u76ee\u6807\u76ee\u5f55\uff0c\u5e76\u7528\u201cls\u201d\u548c\u9009\u9879\u201cl\u201d\u641c\u7d22\u76ee\u6807\u76ee\u5f55\u4e2d\u662f\u5426\u6709\u884c\uff0c\u5b83\u7684\u5f00\u5934\u6709\u4e00\u4e2a\u201cl\u201d\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u3002\u7136\u540e\u6211\u5c06\u6700\u540e\u4e24\u4e2a\u6570\u5b57\u5355\u4f4d\uff08\u6587\u4ef6\u5939\u540d\u79f0\uff09\u653e\u5165\u53d8\u91cf\u201clast_symlink\u201d\u4e2d\u3002\u4e4b\u540e\uff0c\u6211\u5e26\u7740\u201ccd\u201d\u8fd4\u56de\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55\uff0c\u8fd9\u6837\u4ee5\u540e\u65e5\u5fd7\u6587\u4ef6\u4e5f\u4f1a\u5199\u5165\u5176\u4e2d\uff0c\u800c\u4e0d\u662f\u5199\u5165\u76ee\u6807\u76ee\u5f55\u3002\n\u5982\u679c[$HEUTE-ne$LAST_\u7b26\u53f7\u94fe\u63a5]\uff1b\u7136\u540e\u2026\u2026\u4ee3\u7801\u90e8\u52067a\u52307e\u5728\u8fd9\u91cc\u2026\u2026\u5426\u5219$ECHO&#34\uff1b\u7531\u4e8e\u4e00\u4e2a\u6708\u6ca1\u6709\u5907\u4efd\u6216\u53ea\u6709\u9519\u8bef\uff08\u8be5\u6708\u7684\u4eca\u5929\u548c\u6700\u540e\u4e00\u6b21\u5907\u4efd\u7684\u65e5\u671f\u5177\u6709\u76f8\u540c\u7684\u7f16\u53f7\uff09\uff0c\u4ece${TODAY}\u5f00\u59cb\u4fdd\u7559\u6700\u540e\u4e00\u6b21\u5907\u4efd\uff0c\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u7ed9\u6587\u4ef6\u5939\u52a0\u6ee1\u6c34\u3002\u4eca\u5929\u6ca1\u6709\u5907\u4efd\uff0c\u4e0b\u4e00\u6b21\u5907\u4efd\u662f\u660e\u5929&#34; &gt&gt\uff1b$LOG ERROR=1fi\n\u957f\u201c\u5982\u679c\u62ec\u53f7\u201d\uff1a\u8fd9\u91cc\u6211\u8bf4\uff0c\u5982\u679c\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u4e0e\u4eca\u5929\u65e5\u671f\u76f8\u540c\u7684\u65e5\u671f\uff0c\u90a3\u4e48\u81f3\u5c11\u4e00\u4e2a\u6708\u5185\uff0c\u6240\u6709\u4e8b\u60c5\u90fd\u4f1a\u51fa\u9519\u3002\u8981\u4e48\u4e00\u4e2a\u6708\u5185\u6ca1\u6709\u5907\u4efd\uff08Mac\u4e0a\u7684raid\u5df2\u5173\u95ed\uff09\uff0c\u8981\u4e48\u6240\u6709\u5907\u4efd\u90fd\u4ee5\u9519\u8bef\u7ed3\u675f\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u518d\u521b\u5efa\u5e26\u6709\u201clast\u201d\u7684\u7b26\u53f7\u94fe\u63a5\u3002\n\u56e0\u6b64\uff1a\u53ea\u6709\u5728\u60c5\u51b5\u5e76\u975e\u5982\u6b64\uff08\u201cne\u201d\uff09\u65f6\uff0c\u624d\u5f00\u59cb\u65b0\u7684\u5907\u4efd\uff0c\u5426\u5219\u4fdd\u7559\u5f53\u5929\u7684\u5b8c\u6574\u5907\u4efd\uff0c\u5e76\u5c1d\u8bd5\u5728\u7b2c\u4e8c\u5929\u8fdb\u884c\u65b0\u7684\u5907\u4efd\u3002\n\u6ce8\u610f\uff1a\u53ea\u6709\u5728\u5907\u4efd\u6210\u529f\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u4f1a\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u201clast\u201d\u7684\u65b0\u7b26\u53f7\u94fe\u63a5\u3002\u5426\u5219\uff0c\u60a8\u7684\u60c5\u51b5\u662f\uff0c\u7b26\u53f7\u94fe\u63a5\u548crsync\u4e0a\u51fa\u73b0\u4e86\u4e00\u4e2a\u635f\u574f\u7684\u5907\u4efd\u6216\u4e0d\u5b8c\u6574\u7684\u5907\u4efd\uff0c\u7136\u540e\u91cd\u65b0\u751f\u6210\u6574\u4ef6\u4e8b\uff0c\u5e76\u5bf9\u6574\u4e2a\u6570TB\u7684\u6570\u636e\u8fdb\u884c\u5907\u4efd\u3002\n\u518d\u5f80\u4e0b\u662f\u201celse\u201d\uff0c\u56e0\u6b64\u5728\u6807\u7b7e\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u9519\u8bef\uff0c\u5e76\u5c06\u5176\u5199\u5165\u65e5\u5fd7\uff0c\u5e76\u7ed9\u51fa\u89e3\u91ca\u3002\n\u5982\u679c\u2013\u201cz\u201d\u4e3a\u96f6\u88c5\u5165\u70b9\uff0c\u56e0\u6b64\u53d8\u91cf\u6587\u672c\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u201cz\u201d\u4ece\u4eca\u5929\u5f00\u59cb\u7684\u96f6\u4e2a\u6708\u65cb\u8f6c\u8868\u793a\u5b8c\u6574\u65e5\u671f\uff0c\u5426\u5219\u4ec5\u8868\u793a\u5f53\u5929\u7684\u6708\u6570\u201c$date+%d\u201d\u3002\u6574\u4e2a\u4e8b\u4ef6\u518d\u6b21\u5305\u542b\u5728\u5e26$sign\u7684\u62ec\u53f7\u4e2d\uff0c\u4ee5\u4fbf\u9996\u5148\u8ba1\u7b97\u62ec\u53f7\u5185\u5bb9\uff0c\u7136\u540e\u5c06\u65b0\u4fe1\u606f\u4f20\u9012\u7ed9\u53d8\u91cf\u201cTODAY\u201d\uff0c\u8fd9\u4e5f\u662f\u5728\u8fd9\u91cc\u5f62\u6210\u7684\u3002\u6700\u540e\uff0c\u6587\u4ef6\u5939\u88ab\u79f0\u4e3a\u201c01\u201d\u6216\u201c20220101\u201d\u3002\n\u5728\u8fd9\u91cc\uff0cSSH\u8bbf\u95ee\u90e8\u5206\uff08\u7a0d\u540e\u5728rsync\u547d\u4ee4\u4e2d\uff09\u88ab\u5199\u5165\u53d8\u91cf\u201cS\u201d\uff0c\u8be5\u53d8\u91cf\u4e5f\u662f\u901a\u8fc7\u8be5\u547d\u4ee4\u521b\u5efa\u7684\u3002\n\u6765\u6e90\u4e8e&#34${\u6765\u6e90[@]}&#34\uff1bdo#fromsh\u2013\u5982\u679c[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$fromsh&#34\uff1b]&amp&amp\uff1b[z&#34\uff1b$TOSSH&#34\uff1b]\uff1b\u7136\u540e\u662f$ECHO&#34$RSYNC-e\\&#34$S\\&#34-avR\\&#34$fromsh:$SOURCE\\&#34${RSYNCCONF[@]}$TARGET$TODAY$INC&#34&gt&gt$\u8bb0\u5f55#\u4ec5\u8bb0\u5f55\u9519\u8bef#34\uff1b2&gt&gt$\u65e5\u5fd7&#34\uff1b\u56e0\u4e3a\u8bb0\u5f55\u6240\u6709\u5907\u4efd\u7684\u6587\u4ef6\u4f1a\u4f7f\u90ae\u4ef6\u7a0b\u5e8f\u5d29\u6e83\uff0c\u6240\u4ee5\u539f\u59cb\u7684#34&gt&gt$\u65e5\u5fd7#2&gt&amp\uff1b1&#34; $RSYNC-e&#34$S&#34-avR\u548c#34$fromsh:\\&#34$\u8d44\u6599\u6765\u6e9034&#34; &#34;$ {RSYNCCONF[@]}&#34&#34;$\u76ee\u6807&#34$\u4eca\u5929$INC 2&gt&gt$\u5982\u679c[$\uff1f-ne 0]\u8bb0\u5f55\uff1b\u7136\u540e\u9519\u8bef=1 fi fi#TOSSH\u2013I&#39\uff1b\u5982\u679c[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$TOSSH&#34\uff1b]&amp&amp\uff1b[-z&#34\uff1b$fromsh&#34\uff1b]\uff1b\u7136\u540e\u662f$ECHO&#34$RSYNC-e\\&#34$S\\&#34-avR\\&#34$\u6765\u6e90\\&#34\uff1b${RSYNCCONF[@]}\\&#34$TOSSH:$TARGET$TODAY\\&#34$\u516c\u53f8&#34&gt&gt$\u65e5\u5fd7$RSYNC-e&#34$S&#34-avR\u548c#34$\u6765\u6e90&#34&#34;${RSYNCCONF[@]}&#34&#34;$\u6258\u4ec0\uff1a34\u5c81$\u76ee\u680734$\u4eca\u5929&#34$\u516c\u53f8&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u5982\u679c[$\uff1f-ne 0]\uff1b\u7136\u540e\u9519\u8bef=1 fi#\u672c\u5730\u5907\u4efd\u2013I&#39\uff1b\u5982\u679c[-z&#34\uff1b$S&#34\uff1b]\uff0c\u6211\u5c31\u4e0d\u7528\u8fd9\u91cc\u4e86\uff1b\u7136\u540e\u662f$ECHO&#34$RSYNC-avR\\&#34$\u8d44\u6599\u6765\u6e9034${RSYNCCONF[@]}$TARGET$TODAY$INC&#34&gt&gt$\u65e5\u5fd7$RSYNC-avR&#34$\u6765\u6e90&#34&#34;${RSYNCCONF[@]}&#34&#34;$\u76ee\u6807&#34$\u4eca\u5929$INC&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u5982\u679c[$\uff1f-ne 0]\uff1b\u7136\u540e\u9519\u8bef=1 fi fidone\n\u7b2c\u4e00\u4e2a\u5757\u53ea\u662f\u5c06\u5b8c\u6574\u7684rsync\u547d\u4ee4\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u6267\u884c\u4e86\u4ec0\u4e48\u3002\n\u7136\u540e\uff0c\u7b2c\u4e8c\u4e2a\u5757\u5b9e\u9645\u6267\u884crsync\uff0c\u5e76\u5c06rsync\u62a5\u544a\u7ed9\u201c\u6807\u51c6\u8f93\u51fa\u201d\u548c\u201c\u6807\u51c6\u9519\u8bef\u201d\u7684\u5185\u5bb9\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\uff1a&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u201c\u9519\u8bef\u201d2\u4e5f\u4f1a\u88ab\u53d1\u9001\u5230stdout&amp\uff1b1\u201c\uff0c\u56e0\u6b64\u4e5f\u4f1a\u5199\u5165\u6700\u540e\u7684\u65e5\u5fd7\u6587\u4ef6\u3002\u5bf9\u4e8e\u6211\u6765\u8bf4\uff0c\u5b83\u53ea\u662f\u201c2&gt\uff1b\u201d\uff0c\u56e0\u6b64\uff0c\u53ea\u8bb0\u5f55\u9519\u8bef\uff0c\u5426\u5219\u6587\u4ef6\u4f1a\u53d8\u5f97\u592a\u5927\uff0840TB\uff09\uff0c\u5e76\u8bb0\u5f55\u60a8\u4f20\u8f93\u7684\u6bcf\u4e2a\u6587\u4ef6\u3002\n\u5982\u679c\u4e0a\u4e00\u6b21\u64cd\u4f5c\u7684\u9000\u51fa\u72b6\u6001\u4e0d\u6210\u529f\uff08$\uff1f-ne 0\uff09\uff0c\u5219\u201cne\u201d\u4e0d\u7b49\u4e8e0=\u6210\u529f\uff0c\u5219\u53d8\u91cfERROR=1\u3002\u7136\u540e\uff0c\u8be5\u53d8\u91cf\u5728\u7535\u5b50\u90ae\u4ef6\u4e3b\u9898\u4e2d\u751f\u6210\u201cERROR\u201d\u4e00\u8bcd\u3002\n\u201c-e\u201d\u4ee3\u8868\u8fdc\u7a0b\uff0c\u60a8\u5fc5\u987b\u5728\u6b64\u5904\u6307\u5b9a\u534f\u8baeSSH\u3002\uff08-e\u3001-rsh=\u547d\u4ee4\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u8fdc\u7a0bshell\uff09\n\\\u201c$SOURCE\\\u201d\u662fdo\u5faa\u73af\u5c06\u5904\u7406\u7684\u76f8\u5e94\u6e90\u3002\n$INC\u94fe\u63a5\u76ee\u7684\u5730\uff0c\u6700\u540e\u7684sym link\u4ecd\u7136\u5728\u672b\u5c3e\u6307\u5b9a\u2013link dest=last\n\u811a\u672c\u4e2d\u8f6c\u4e49\u7684\u5185\u5bb9\u548c\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u90fd\u5f88\u6709\u8da3\u3002\n\u5f15\u7528\u5355\u201cx\u201d\u548c\u53cc\u201cy\u201d\u8868\u793a\u547d\u4ee4\u5e94\u8fde\u7eed\u89e3\u91ca\u3002\u89e6\u6478\u201c\u6587\u4ef61\u89e6\u6478\u201d\u6587\u4ef61\n\u5bf9\u4e8e\u53d8\u91cf\uff0c\u201c\u53cc\u5f15\u53f7\u201d\u610f\u5473\u7740\u53d8\u91cf\u7684\u5185\u5bb9\u5e94\u8be5\u5728\u8fd9\u91cc\uff0c\u800c\u56f4\u7ed5\u53d8\u91cf\u7684\u5355\u201c\u53d8\u91cf\u201d\u5f15\u53f7\u53ea\u6253\u5370\u53d8\u91cf\u540d=\u53d8\u91cf\n\u5982\u679c[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$TOSSH&#34\uff1b]&amp&amp\uff1b[-z&#34\uff1b$fromsh&#34\uff1b]\uff1b\u7136\u540e\u662f$ECHO&#34$SSH-p$SSHPORT-l$SSHUSER$TOSSH$LN-nsf$TARGET$TODAY$TARGET$LAST&#34&gt&gt$LOG$SSH-p$SSHPORT-l$SSHUSER$TOSSH&#34$LN-nsf\\&#34$\u76ee\u680734$\u4eca\u592934\u5c81$\u76ee\u680734$\u6700\u540e&#34&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u5982\u679c[$\uff1f-ne 0]\uff1b\u7136\u540e\u9519\u8bef=1 fifi\n\u5bf9\u4e8eTOSSH\uff0c\u7b26\u53f7\u94fe\u63a5\u8bbe\u7f6e\u5728\u672b\u5c3e\u3002\u4e0d\u9002\u7528\u4e8e\u6211\u3002\n##zazu\u6dfb\u52a0\u4e86[-z&#34\uff1b$ERROR&#34\uff1b]\uff0c\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u5219\u65e0\u7b26\u53f7\u94fe\u63a5\uff08[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$fromsh&#34\uff1b]&amp&amp\uff1b[-z&#34\uff1b$TOSSH&#34\uff1b]&amp&amp\uff1b[z&#34\uff1b$ERROR&#34\uff1b]\uff09|\uff08[-z&#34\uff1b$S&#34\uff1b]\uff09\uff1b\u7136\u540e\u662f$ECHO&#34$LN\u2014\u2014nsf$TARGET$TODAY$TARGET$LAST&#34&gt&gt$\u65e5\u5fd7$LN-nsf&#34$\u76ee\u6807&#34$\u4eca\u5929&#34$\u76ee\u6807&#34$\u6700\u540e&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u5982\u679c[$\uff1f-ne 0]\uff1b\u90a3\u4e48\u9519\u8bef=1fi\n\u8fd9\u91cc\u7684\u7b26\u53f7\u94fe\u63a5\u662f\u5728fromsh\u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u7684\u3002\u9996\u5148\u5c06\u547d\u4ee4\u5199\u5165\u65e5\u5fd7\uff0c\u7136\u540e\u4f7f\u7528$LN\u6267\u884c\uff0c\u8be5\u547d\u4ee4\u6307\u5411\u547d\u4ee4\u201cLN\u201d\u3002\u5982\u679c\u547d\u4ee4\u6253\u5370\u4e86\u4e00\u4e9b\u5185\u5bb9\uff0c\u5219\u5b83\u5c06\u4f4d\u4e8e\u65e5\u5fd7\u6587\u4ef6\u7684\u672b\u5c3e\u3002\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u5219\u9519\u8bef=1\u7528\u4e8e\u90ae\u4ef6\u4e3b\u9898\u3002\n\u5982\u679c\uff08[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$fromsh&#34\uff1b]&amp&amp\uff1b[-z&#34\uff1b$TOSSH&#34\uff1b]&amp&amp\uff1b[z&#34\uff1b$ERROR&#34\uff1b]\uff09|\uff08[-z&#34\uff1b$S&#34\uff1b]\uff09\uff1b\u7136\u540e\n\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5219\u4e0d\u4f1a\u5199\u5165\u4efb\u4f55\u7b26\u53f7\u94fe\u63a5\uff0c\u5373\u201clast\u201d\u4ecd\u5c06\u6307\u5411\u65e7\u7684\u5b8c\u6574\u5907\u4efd\u3002\u5426\u5219\uff0c\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u670d\u52a1\u5668\u5c06\u4ece\u4e00\u5f00\u59cb\u5c31\u8fdb\u884c\u5b8c\u6574\u5907\u4efd\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u9700\u8981\u4e00\u4e2a\u6708\u7684\u4f20\u8f93\u65f6\u95f4\uff0c\u9700\u8981\u5927\u91cf\u5907\u4efd\u3002\n\u5176\u4ed6$ECHO&#34\uff1b\u7531\u4e8e\u4e00\u4e2a\u6708\u6ca1\u6709\u5907\u4efd\u6216\u53ea\u6709\u9519\u8bef\uff08\u8be5\u6708\u7684\u4eca\u5929\u548c\u6700\u540e\u4e00\u6b21\u5907\u4efd\u7684\u65e5\u671f\u5177\u6709\u76f8\u540c\u7684\u7f16\u53f7\uff09\uff0c\u4ece${TODAY}\u5f00\u59cb\u4fdd\u7559\u6700\u540e\u4e00\u6b21\u5907\u4efd\uff0c\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u7ed9\u6587\u4ef6\u5939\u52a0\u6ee1\u6c34\u3002\u4eca\u5929\u6ca1\u6709\u5907\u4efd\uff0c\u4e0b\u4e00\u6b21\u5907\u4efd\u662f\u660e\u5929&#34; &gt&gt$\u65e5\u5fd7\u9519\u8bef=1 fi\n\u6ce8\u610f\uff1a\u201celse\u201d\u6307\u7684\u662f\u5982\u679c\u4eca\u5929\u4e0esymlink last\u7684\u5f53\u5929\u76f8\u540c\uff0c\u5219\u66f4\u5927\u7684if\u5faa\u73af\u3002\n\u5728\u5b9e\u9645\u8fc7\u7a0b\u7ed3\u675f\u65f6\uff0c\u5b8c\u6574\u7684\u65e5\u671f/\u65f6\u95f4\u4f1a\u518d\u6b21\u5199\u5165\u65e5\u5fd7\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u5907\u4efd\u82b1\u8d39\u4e86\u591a\u957f\u65f6\u95f4\u4ee5\u53ca\u4f55\u65f6\u5b8c\u6210\u3002\n\u5982\u679c[-n&#34\uff1b$MAILREC&#34\uff1b]\uff1b\u90a3\u4e48\u5982\u679c[$ERROR]\uff1b\u7136\u540e\u662f$MAIL-s&#34\uff1b\u9519\u8bef\u5907\u4efd$LOG&#34$MAILREC&lt$LOG#zazu all LOG all#logprint#34\uff1b\u9519\u8bef34&#34;$\uff08&lt\uff1b$LOG\uff09\u548c#34\uff1belse$MAIL-s&#34\uff1b\u5907\u4efd$LOG&#34$MAILREC&lt$LOG#zazu all LOG all#logprint#34$\uff08&lt\uff1b$LOG\uff09\u548c#34\uff1b\u83f2\u83f2\n\u5982\u679cMAILREC\u4e0d\u4e3a\u7a7a\uff08-n\uff09\uff0c\u5219\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u8bf7\u5728\u4e3b\u9898\u4e2d\u5199\u5165\u201c\u9519\u8bef\u5907\u4efd+\u65e5\u5fd7\u6587\u4ef6\u540d$log\u201d\uff0c\u5426\u5219\u53ea\u9700\u201c\u5907\u4efd+\u65e5\u5fd7\u6587\u4ef6\u540d\u201d$\u65e5\u5fd7\u5305\u542b\u65e5\u5fd7\u6587\u4ef6\u7684\u540d\u79f0&lt$LOG\u8bc4\u4f30\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u8be5\u6587\u4ef6\u4f4d\u4e8e$LOG\u4e2d\n\u5728\u4e0b\u9762\uff0c\u6211\u542f\u52a8\u811a\u672c\u5f00\u5934\u5b9a\u4e49\u7684\u51fd\u6570\u201call_logprint\u201d\u3002\u7136\u540e\u5c06\u53c2\u6570\u201cError____\\n\u201d\u52a0\u4e0a\u4e00\u884c\u672b\u5c3e\u201cError\\n\u201d\u4f20\u9012\u7ed9\u51fd\u6570\u7684echo\u547d\u4ee4\u3002\u4e0b\u5212\u7ebf\u53ea\u662f\u4e3a\u4e86\u8ba9\u60a8\u66f4\u597d\u5730\u770b\u5230\u9519\u8bef\u6587\u672c\u3002$\uff08&lt\uff1bLOG\uff09\u201c\u4ece\u65e5\u5fd7\u4e2d\u7684\u6587\u4ef6\u540d\u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\u53d8\u91cf\uff0c\u7136\u540e\u5c06\u5176\u5199\u5165bu\u811a\u672c\u7684\u201c\u5168\u5929\u540d\u79f0\u201d\u3002\u201csh.log\u201d\u6587\u4ef6\u3002\n\u5728\u201c\u6240\u6709\u65e5\u671f\u201d\u4e2d\uff0c\u53ea\u5217\u51fa\u4e86\u5355\u4e2a\u5907\u4efd\uff0c\u4ee5\u53ca\u9519\u8bef\u548c\u6709\u5173\u8fd0\u884c\u65f6\u5f00\u59cb\u3001\u8fd0\u884c\u65f6\u7ed3\u675f\u3001\u6267\u884c\u7684\u547d\u4ee4\u4ee5\u53ca\u53ef\u80fd\u901a\u8fc7\u6807\u51c6\u8f93\u51fa\u7684\u4fe1\u606f\u3002\n\u201cu\u201d\u4ee3\u8868\u7528\u6237\uff0c\u201cg\u201d\u4ee3\u8868\u56e2\u4f53\uff0c\u201ca\u201d\u4ee3\u8868\u6240\u6709\u4eba\u3002\n\u8981\u6bcf\u5929\u8fd0\u884c\u811a\u672c\uff0c\u9700\u8981\u5728crontab o\u4e2d\u8f93\u5165\u4e00\u4e2a\u6761\u76ee\n......", "note_en": "Creating backups is a basic necessity for anyone who stores data. With the help of a dedicated server, the Linux operating system and the rsync software, you can securely and efficiently retrieve data from any computer via an SSH connection and store it in a backup. It doesn\u2019t matter if there is another Linux server, a Mac or a Windows computer on the other side. But as soon as you have more than a few text files, you have to control the process precisely. This script contains some important elements, which are essential when dealing with large amounts of data and slow internet lines.\n    It distinguishes between TOSSH and FROMSSH, i.e. whether the server fetches something or whether you push something to the backup server (TOSSH). In case of FROMSSH there are no access data on the computer to be backed up. Connection credentials to the backup are always the first target of encryption trojans, so it is better that the backup server fetches the data itself, i.e. it is the one that connects to the computer to be backed up -&gt; FROMSSH\n It distinguishes between overwriting the folders with the day number every month or creating new folders with the full date as the name -&gt; MONTHROTATE\n It can check if a volume to be backed up is connected to the computer via USB -&gt; MOUNTPOINT (I\u2019m not using this.)\n It can initiate the sending of a mail with the log of the backup process.\n  It can delete files that no longer exist in the source also in the backup.\n  With a stored key (Use SSH keys and not passwords!) the backup server dials up the computer to be backed up via SSH (FROMSSH). There it compares the files on the volume to be backed up with what it has in the folder pointed to by the symlink with the name \u201elast\u201c. A new folder is then created from the number of the day (e.g. \u201e02\u201c) and all new or changed files are stored in it. On the already existing files a hardlink is created in the new folder, so that these are all \u201epresent\u201c in the new folder. Deleted files do not get a hardlink. If everything is ready, the symlink \u201elast\u201c is now directed to the new folder. In the next month then simply the old folder with the same day number is overwritten with the current folder (MONTHROTATE). The date and every single transferred file is written into the log, which is created as an extra file and overwritten every time. This info is then sent as a mail at the end. The backup script is started via crontab of the special backup user (who has no sudo rights) every day.\n  If a rsync process takes longer than 24 h then the processes overlap and accumulate (the old one is not ready when a new one starts), block each other and nothing works anymore. -&gt; A new process should therefore only start when the previous one is finished.\n In large volumes with many files, the log files become so long that they no longer fit into an email and the email is then no longer sent. -&gt; For large volumes only errors should be logged.\n If an error occurs then a symlink to the newly created folder with the current tag as name is created anyway. This leads to the fact that with the next backup the complete backup is transferred again. With several terabytes this can take a month of data transfer over the internet. -&gt; Only change the symlink if there was no error before, otherwise keep the symlink to the healthy folder until there is a backup without errors again. Disadvantage: A second backup on the same day is then not possible even with manual start of the script.\n The backup server is only needed for a short time, but runs the whole day. -&gt; Use a separate script to shut down the server in the meantime, but only if no backup is currently running or someone is currently logged in via SSH. Separate this task from the backup user and execute it via the administration user or the central /etc/crontab, since root rights are needed for this. (This is not part of this blog.)\n  To keep track, a file that stores all log entries, one after the other, with only a few lines per entry -&gt; all-log\n       #!/bin/bash# avoidng collisions with other rsync processes# the minutes passed to the script # 21h*60min = 1260\u00a0minutesminutes=1260# Make sure no one else is using rsyncpro_on=$(ps aux | grep -c rsync)# if someone is using rsync# grep is also producing one entry so -gt 1while [ $pro_on -gt 1 ] do sleep 60 minutes=$(($minutes - 1))# we are close to the next day no need to start if [ $minutes -lt 60 ] ; then exit 0 fi pro_on=$(ps aux | grep -c rsync)done\n This is the block to check if other rsync processes are running. It is adapted from the following code \u201eLetting your server take naps\u201c:\n   With the first line you say that the \u201ebash\u201c should be entrusted with the execution.\n \u201eminutes=1260\u201c means that the postponement of a start of this script should be maximum 21 hours. After that the script will not be executed, because the cron process will start already the next round of backup.\n \u201epro_on=$(ps aux | grep -c rsync)\u201c, processes that are running, here \u201ersync\u201c, the grep command itself also produces a process on the server itself, which is why you have to work with \u201e-gt 1\u201c i.e. \u201egreater than 1\u201c.\n After that it goes into a while loop which sleeps with \u201esleep 60\u201c for one minute each round and then checks if there is still more than one grep-rsync process running. The minutes are then always counted down by 1 and if one gets under 60 minutes until the 21 hours are over, then it is no longer worth running the script and \u201eexit 0\u201c aborts. After that cron will try again at the regular time on the next day. This case occurs when another rsync process needs more than 20 hours.\n  # Simple backup with rsync# local-mode, tossh-mode, fromssh-modeSOURCES=(/Volumes/my_volume/ )TARGET=&#34;/srv/backup_volume&#34;# edit or comment with &#34;#&#34;MONTHROTATE=monthrotate # use DD instead of YYMMDDRSYNCCONF=(--delete --exclude=/Volumes/Raid/.DocumentRevisions-V100--exclude=/Volumes/Raid/.TemporaryItems --exclude=/Volumes/Raid/.Trashes --exclude=/Volumes/Raid/.apdisc)MAILREC=&#34;my_home_mail@something.de&#34;SSHUSER=&#34;linux_backupuser&#34;FROMSSH=&#34;linux_backupuser@999.888.777.666&#34;#TOSSH=&#34;tossh-server&#34;SSHPORT=22222MOUNT=&#34;/bin/mount&#34;; FGREP=&#34;/bin/fgrep&#34;; SSH=&#34;/usr/bin/ssh&#34;LN=&#34;/bin/ln&#34;; ECHO=&#34;/bin/echo&#34;; DATE=&#34;/bin/date&#34;; RM=&#34;/bin/rm&#34;DPKG=&#34;/usr/bin/dpkg&#34;; AWK=&#34;/usr/bin/awk&#34;; MAIL=&#34;/usr/bin/mail&#34;CUT=&#34;/usr/bin/cut&#34;; TR=&#34;/usr/bin/tr&#34;; RSYNC=&#34;/usr/bin/rsync&#34;LAST=&#34;last&#34;; INC=&#34;--link-dest=$TARGET/$LAST&#34;; LS=&#34;/bin/ls&#34;\n  SOURCES is an array and can contain multiple sources, separated by a space. SOURCES has a slash at the end, so that the folders /user/Volumes/Data_Folder are not produced each time.\n    SOURCES If the SOURCE has a \u201e/\u201c at the end then only the content is copied but not the last specified folder.\n SOURCES is an array which will be accessed later with ${SOURCES[@]}. Multiple sources can be specified separated by spaces. There is then separate output in the log, because a \u201edo-loop\u201c is processed for each SOURCE.\n TARGET has no slash at the end, the slash is added later automatically if it is missing.\n   \u201e-delete\u201c means that files that are deleted in the source are also deleted on the target. Some point-files (.file) sometimes make reading problems from the source so that it is best to exclude them. The problem is that they change between the reading of the files to be copied and the copying process. This leads to an error. Since RSYNCCONF is an array, more rsyn flags can be placed here if there is a need.\n   Since in a month always the day is specified as folder, the respective folder with the day number e.g. \u201e04\u201c is overwritten again on the 4th of the next month. If this should not apply, then one can take long dates for the folder with the full date. You will get a new folder every day and you should then delete old ones from time to time.\n  Deleting does not seem to delete the files that are still needed as they are hardlinks. These can be multiple links to a file and as long as a hardlink still exists (from another day-folder) the file is not deleted. New backups will then produce another NEW hardlink to the file. That\u2019s why it doesn\u2019t seem to be a problem if you skip a day. (At least that\u2019s how I understood it, but don\u2019t see more than one hardlink, in Linux \u201els -la\u201c output).\n To track the sequence I added an \u201eall-log\u201c file to the script, see below.\n There is then the symbolic link of \u201elast\u201c to the last backup folder in each case. The linked folder with \u201elast\u201c is used for the comparison of old and new files. Only new files are copied to the backup.\n    (Bash variables do not have to be capitalized, this is just a style of the author here).\n Via MAILREC a destination address for the log mails is specified. Attention the mails contain in the original script the complete lister of the saved files. This can be a few hundred MB, which then get stuck in the mail server. That\u2019s why I later included only ERRORS in the log file (at least for the big backup). See below.\n FROMSSH or TOSSH, we are backing up from a source here, hence FROMSSH. The argument expects the server connection. FROMSSH is important because then there is no access data to the backup on the server being backed up. This is extremely important for encryption trojans, because they look for exactly that and then encrypt the backup first.\n   The individual programs are stored in variables, this is an interesting approach to call in the script programs and make sure that they are found even without being listed in the path variable.\n LAST specifies the name of the sym link folder. \u201elast\u201c is then the sym link to the last backup.\n  Because I need the \u201els\u201c list-command later I also put it with the full path into a variable. But \u201els\u201c is not only available in bin but also in sbin, here I get it from bin.\n   The log file is sent by email after each backup and then overwritten again. You are left with only the collected emails in your email programme, except there were not too many files and the emails were not sent due to the size. That\u2019s why I wanted to have an \u201eall-days-log-file\u201c listing all backups, with ERRORS but without the complete backup file lists. (Further down, I turned off the file list: Default-Out: $INC 2&gt;&gt; $LOG instead of 2&gt;&amp;1 which then lists normal and error output). The statement is a function, \u201e\\n\u201c produces a new line and \u201e$*\u201c contains all arguments you give to the function. Here you pass on the log text, then the whole thing is written to a new file at the end \u201e&gt;&gt;\u201c, which is also created if it doesn\u2019t exist. The \u201e-e\u201c switch causes echo to evaluate the backslash, without it there is no line break.\n   \u201e$0\u201c contains the name of the script at this point, so the log file is named like the script plus \u201e.log\u201c (example: backup_script.sh.log). After that the complete date/time is written into the log file. So you can see when the backup process started. At the end there is again a date/time entry, after the script is done. You will see how long it took.\n   Since other folders are attached to the destination folder, it needs a slash at the end. Here it is ensured that it is always there.\n  # zazu check whether today is the same number as the # symlink &#34;last&#34; to the numbered folder# also no 2 backups on one day - gives an ERRORHEUTE=$($DATE +%d)cd $TARGETLAST_SYMLINK=$($LS -l | grep ^l | grep -o &#34;[0-9][0-9]$&#34;)cd /home/sicherung/bin\n First the day number of the month is written into the variable \u201eTODAY\u201c: 01 or 02 etc.. Then I change with \u201ecd\u201c into the target directory and search there with \u201els\u201c and the option \u201e-l\u201c whether there is a line, which has a \u201el\u201c at the beginning, thus it is a symlink. Then I get the last two number units (folder name) into the variable \u201eLAST_SYMLINK\u201c. After that I return with \u201ecd\u201c to the directory where the scripts are located, so that later the log files are also written there and not in the target directory.\n  if [ $HEUTE -ne $LAST_SYMLINK ]; then\u2026 code parts 7a to 7e are here \u2026else $ECHO &#34;Since one month no backup or only with ERROR (todays day of the month and day of last backup have the same number), kept the last backup from day ${TODAY}, didn&#39;t overwirte the folder. No backup today, next backup is tomorrow.&#34; &gt;&gt;\u00a0$LOG ERROR=1fi\n Long \u201eif bracket\u201c: Here I say, if the symlink points to the same day number as today\u2019s date, then everything must have gone wrong for at least a month. Either there was no backup for a month (raid on Mac was off) or all backups ended with an error and that\u2019s why no symlink with \u201elast\u201c was created anymore.\n Therefore: Only if this is not the case( \u201e-ne\u201c), then start a new backup, otherwise keep the full backup for that day and try to make a new one the next day.\n Attention: A new symlink with \u201elast\u201c will only be created if the backup succeeds. Otherwise you have the case that a broken backup or an incomplete backup is at the symlink and rsync then makes the whole thing again and that for the whole many terabytes.\n Further down there is an \u201eelse\u201c, so in case of tag equality an error is generated and written into the log with an explanation.\n   If \u2013 \u201ez\u201c zero MOUNTPOINT, thus variable text is empty, make with \u201e-z\u201c zero MONTHROTATE from TODAY the full date otherwise only the month number of the day \u201e$Date +%d\u201c. The whole thing is again in a bracket with $ sign, so that first the bracket content is evaluated and then the new info can be passed to the variable \u201eTODAY\u201c, which is also formed here. At the end the folder is called e.g. \u201e01\u201c or \u201e20220101\u201c.\n   Here the SSH access part, which is later in the rsync command, is written into the variable \u201eS\u201c, which is also created with this command.\n  for SOURCE in &#34;${SOURCES[@]}&#34; do#FROMSSH \u2013 this I use here if [ &#34;$S&#34; ] &amp;&amp; [ &#34;$FROMSSH&#34; ] &amp;&amp; [ -z &#34;$TOSSH&#34; ]; then $ECHO &#34;$RSYNC -e \\&#34;$S\\&#34; -avR \\&#34;$FROMSSH:$SOURCE\\&#34; ${RSYNCCONF[@]} $TARGET$TODAY $INC&#34; &gt;&gt; $LOG# log only errors &#34;2&gt;&gt; $LOG&#34; since logging all files # backuped will crash the mailer, original &#34;&gt;&gt; $LOG # 2&gt;&amp;1&#34; $RSYNC -e &#34;$S&#34; -avR &#34;$FROMSSH:\\&#34;$SOURCE\\&#34;&#34; &#34;$ {RSYNCCONF[@]}&#34; &#34;$TARGET&#34;$TODAY $INC 2&gt;&gt; $LOG if [ $? -ne 0 ]; then ERROR=1 fi fi#TOSSH \u2013 I&#39;m not using here if [ &#34;$S&#34; ] &amp;&amp; [ &#34;$TOSSH&#34; ] &amp;&amp; [ -z &#34;$FROMSSH&#34; ]; then $ECHO &#34;$RSYNC -e \\&#34;$S\\&#34; -avR \\&#34;$SOURCE\\&#34; $ {RSYNCCONF[@]} \\&#34;$TOSSH:$TARGET$TODAY\\&#34; $INC &#34; &gt;&gt; $LOG $RSYNC -e &#34;$S&#34; -avR &#34;$SOURCE&#34; &#34;${RSYNCCONF[@]}&#34; &#34;$TOSSH:\\&#34;$TARGET\\&#34;$TODAY&#34; $INC &gt;&gt; $LOG 2&gt;&amp;1 if [ $? -ne 0 ]; then ERROR=1 fi fi#Local Backup \u2013 I&#39;m not using here if [ -z &#34;$S&#34; ]; then $ECHO &#34;$RSYNC -avR \\&#34;$SOURCE\\&#34; ${RSYNCCONF[@]} $TARGET$TODAY $INC&#34; &gt;&gt; $LOG $RSYNC -avR &#34;$SOURCE&#34; &#34;${RSYNCCONF[@]}&#34; &#34;$TARGET&#34;$TODAY $INC &gt;&gt; $LOG 2&gt;&amp;1 if [ $? -ne 0 ]; then ERROR=1 fi fidone\n   The first block just writes the complete rsync command to the log file, so you can see what was executed.\n The second block then actually executes rsync and writes what rsync reports to \u201estdout\u201c (standard out) and \u201estderr\u201c (standard error) to the log file: \u201e&gt;&gt; $LOG 2&gt;&amp;1\u201c Errors \u201e2\u201c are also routed to stdout \u201e&amp;1\u201c and thus also written to the log file at the end. With me it is only \u201e2&gt;&gt;\u201c, so log only Errors, otherwise the file becomes too large with 40TB and logging every single file you transfer.\n If the exit status of the last operation was not successful ($? -ne 0), so \u201e-ne\u201c not equal 0 = success, then the variable ERROR = 1. This variable then produces the word \u201eError\u201c in the subject of the email.\n  \u201e-e\u201c stands for remote and you have to specify a protocol, here SSH. (-e, \u2013rsh=COMMAND specify the remote shell to use)\n    \\\u201c$SOURCE\\\u201c\u201c is the respective SOURCE over which the do loop will process.\n   $INC the link destination, sym link on last is still specified at the end \u2013link-dest=last\n  It is interesting what is escaped \u201e\\\u201c in the script and what is in \u201equotes\u201c.\n Quoting single \u201ax\u2018 and double \u201ey\u201c means that a command should be interpreted contiguously.  touch \u201eFile 1 touch \u201aFile 1\n For variables, \u201c \u201c double quotes mean that the contents of the variable should be here, whereas single \u201a$variable\u2018 quotes around a variable only print the variable name = variable\n     if [ &#34;$S&#34; ] &amp;&amp; [ &#34;$TOSSH&#34; ] &amp;&amp; [ -z &#34;$FROMSSH&#34; ]; then $ECHO &#34;$SSH -p $SSHPORT -l $SSHUSER $TOSSH $LN -nsf $TARGET$TODAY $TARGET$LAST&#34; &gt;&gt; $LOG $SSH -p $SSHPORT -l $SSHUSER $TOSSH &#34;$LN -nsf \\&#34;$TARGET\\&#34;$TODAY \\&#34;$TARGET\\&#34;$LAST&#34; &gt;&gt; $LOG 2&gt;&amp;1 if [ $? -ne 0 ]; then ERROR=1 fifi\n In the case of TOSSH, the symlink is set here at the end. Does not apply to me.\n   ## zazu added [ -z &#34;$ERROR&#34; ], no symlink if error if ( [ &#34;$S&#34; ] &amp;&amp; [ &#34;$FROMSSH&#34; ] &amp;&amp; [ -z &#34;$TOSSH&#34; ] &amp;&amp; [ -z &#34;$ERROR&#34; ] ) || ( [ -z &#34;$S&#34; ] ); then $ECHO &#34;$LN -nsf $TARGET$TODAY $TARGET$LAST&#34; &gt;&gt; $LOG $LN -nsf &#34;$TARGET&#34;$TODAY &#34;$TARGET&#34;$LAST &gt;&gt; $LOG 2&gt;&amp;1 if [ $? -ne 0 ]; then ERROR=1 fi fi\n  Here the symlink is set in the case of FROMSSH. First the command is written into the log, then it is executed with $LN, which points to the command \u201eln\u201c. If the command prints something, it will be at the end of the log file. In case of errors ERROR=1 is used for the subject of the mail message.\n   if ( [ &#34;$S&#34; ] &amp;&amp; [ &#34;$FROMSSH&#34; ] &amp;&amp; [ -z &#34;$TOSSH&#34; ] &amp;&amp; [ -z &#34;$ERROR&#34; ] ) || ( [ -z &#34;$S&#34; ] ); then\n No symlink is written if an error took place, that is \u201elast\u201c will still point to the old complete backup. Otherwise the server makes the complete backup from the beginning in case of an error, which can mean a month transfer time with a big volume to backup.\n  else $ECHO &#34;Since one month no backup or only with ERROR (todays day of the month and day of last backup have the same number), kept the last backup from day ${TODAY}, didn&#39;t overwirte the folder. No backup today, next backup is tomorrow.&#34; &gt;&gt; $LOG ERROR=1 fi\n Attention: The \u201eelse\u201c refers to the larger if-loop if today\u2019s day is the same as the day at symlink-last.\n    At the end of the actual process, the full date/time is written to the log again, so you can see how long the backup took and when it finished.\n  if [ -n &#34;$MAILREC&#34; ]; then if [ $ERROR ];then $MAIL -s &#34;Error Backup $LOG&#34; $MAILREC &lt; $LOG# zazu all log all_logprint &#34;ERROR _ _ _ _ _ _ _ _ _ _ _ \\n&#34; &#34;$(&lt; $LOG)&#34; else $MAIL -s &#34;Backup $LOG&#34; $MAILREC &lt; $LOG#zazu all log all_logprint &#34;$(&lt; $LOG)&#34; fifi\n If MAILREC is not null (-n), then if ERROR write in the subject \u201eERROR backup + the name of the log file $LOG\u201c otherwise just \u201ebackup + the name of the log file\u201c. $LOG contains the name of the log file &lt; $LOG evaluates the content of the file which is in $LOG\n Below this I start the function \u201eall_logprint\u201c defined at the beginning of the script. Then pass to the echo command of the function the parameters \u201eError_ _ _\\n\u201c plus an end of line \u201e\\n\u201c. The underscores are just so you can see the ERROR text better. \u201e$(&lt;$LOG)\u201c gets the content of the file from the file whose name is in the log variable and then writes it to the \u201eall-days-name-of-the-bu-scriptes.sh.log\u201c file.\n     In the \u201eall-days\u201c the single backups are listed, only with the errors and the information about runtime start, runtime end, executed commands and possibly outputs via stdout.\n        \u201eu\u201c stands for the user, \u201eg\u201c for group and \u201ea\u201c for all.\n    To run the script every day you need to make an entry into crontab o\n......", "posttime": "2022-02-25 22:22:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ssh,rsync,\u5907\u4efd", "title": "\u4e00\u4e2a\u8fd1\u4e4e\u5b8c\u7f8e\u7684rsync over ssh\u5907\u4efd\u811a\u672c", "title_en": "An almost perfect rsync over ssh backup script", "transed": 1, "url": "https://blog.zazu.berlin/software/a-almost-perfect-rsync-over-ssh-backup-script.html", "via": "", "real_tags": ["ssh", "rsync", "\u5907\u4efd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074998, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OrioleDB\u662fPostgreSQL\u7684\u4e00\u4e2a\u65b0\u5b58\u50a8\u5f15\u64ce\uff0c\u4e3a\u4e16\u754c\u5e26\u6765\u4e86\u6570\u636e\u5e93\u5bb9\u91cf\u3001\u529f\u80fd\u548c\u6027\u80fd\u7684\u73b0\u4ee3\u65b9\u6cd5#39\uff1b\u6700\u53d7\u6b22\u8fce\u7684\u6570\u636e\u5e93\u5e73\u53f0\u3002\nOrioleDB\u5305\u542b\u4e00\u4e2a\u6269\u5c55\uff0c\u57fa\u4e8e\u521b\u65b0\u7684table accessmethod\u6846\u67b6\u548c\u5176\u4ed6\u6807\u51c6Postgres\u6269\u5c55\u63a5\u53e3\u3002\u901a\u8fc7\u6269\u5c55\u548c\u589e\u5f3a\u5f53\u524d\u7684\u8868\u8bbf\u95ee\u65b9\u6cd5\uff0cOrioleDB\u4e3a\u672a\u6765\u66f4\u5f3a\u5927\u7684\u5b58\u50a8\u6a21\u578b\u6253\u5f00\u4e86\u5927\u95e8\uff0c\u8fd9\u4e9b\u5b58\u50a8\u6a21\u578b\u9488\u5bf9\u4e91\u548c\u73b0\u4ee3\u786c\u4ef6\u67b6\u6784\u8fdb\u884c\u4e86\u4f18\u5316\u3002\n\u4e13\u4e3a\u73b0\u4ee3\u786c\u4ef6\u8bbe\u8ba1\u3002OrioleDB\u8bbe\u8ba1\u907f\u514d\u4e86\u5305\u542b\u6570\u5341\u4e2a\u548c\u6570\u767e\u4e2aCPU\u6838\u5fc3\u7684\u73b0\u4ee3\u670d\u52a1\u5668\u4e0a\u9057\u7559\u7684CPU\u74f6\u9888\uff0c\u4f18\u5316\u4e86SSD\u548cNVRAM\u7b49\u73b0\u4ee3\u5b58\u50a8\u6280\u672f\u7684\u4f7f\u7528\u3002\n\u51cf\u5c11\u4e86\u7ef4\u62a4\u9700\u6c42\u3002OrioleDB\u5b9e\u73b0\u4e86undo Log\u548cpage mergins\u7684\u6982\u5ff5\uff0c\u6d88\u9664\u4e86\u5bf9\u4e13\u7528\u5783\u573e\u6536\u96c6\u8fc7\u7a0b\u7684\u9700\u6c42\u3002\u6b64\u5916\uff0cOrioleDB\u5b9e\u73b0\u4e86\u9ed8\u8ba4\u768464\u4f4dtransactionidentifiers\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u4f17\u6240\u5468\u77e5\u4e14\u75db\u82e6\u7684\u73af\u7ed5\u95ee\u9898\u3002\n\u8bbe\u8ba1\u7528\u4e8e\u5206\u53d1\u3002OrioleDB\u5b9e\u73b0\u4e86\u4e00\u4e2a\u884c\u7ea7\u5199\u65e5\u5fd7\uff0c\u652f\u6301\u5e76\u884c\u5e94\u7528\u3002\u6b64\u65e5\u5fd7\u4f53\u7cfb\u7ed3\u6784\u9488\u5bf9\u57fa\u4e8e\u4e00\u81f4\u6027\u7684\u590d\u5236\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5141\u8bb8\u5b9e\u73b0\u4e3b\u52a8-\u4e3b\u52a8\u591a\u4e3b\u673a\u3002\n\u65e0\u7f13\u51b2\u533a\u6620\u5c04\u548c\u65e0\u9501\u9875\u9762\u8bfb\u53d6\u3002OrioleDBare\u4e2d\u7684\u5185\u5b58\u9875\u901a\u8fc7\u76f4\u63a5\u94fe\u63a5\u8fde\u63a5\u5230\u5b58\u50a8\u9875\u3002\u8fd9\u6d88\u9664\u4e86\u5bf9\u7f13\u51b2\u533a\u5185\u6620\u5c04\u53ca\u5176\u76f8\u5173\u74f6\u9888\u7684\u9700\u6c42\u3002\u6b64\u5916\uff0c\u5728OrioleDB\u5185\u5b58\u4e2d\uff0c\u9875\u9762\u8bfb\u53d6\u4e0d\u4f1a&#39\uff1b\u4e0d\u6d89\u53ca\u539f\u5b50\u64cd\u4f5c\u3002\u603b\u4e4b\uff0c\u8fd9\u4e9b\u8bbe\u8ba1\u51b3\u7b56\u5c06Postgres\u7684\u5782\u76f4\u53ef\u6269\u5c55\u6027\u63d0\u5347\u5230\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u6c34\u5e73\u3002\nMVCC\u57fa\u4e8e\u64a4\u9500\u65e5\u5fd7\u7684\u6982\u5ff5\u3002\u5728OrioleDB\u4e2d\uff0c\u5143\u7ec4\u7684\u65e7\u7248\u672c\u4e0d\u4f1a\u5728\u4e3b\u5b58\u50a8\u7cfb\u7edf\u4e2d\u5bfc\u81f4\u81a8\u80c0\uff0c\u800c\u662f\u88ab\u9010\u51fa\u5230\u5305\u542b\u64a4\u6d88\u94fe\u7684\u64a4\u6d88\u65e5\u5fd7\u4e2d\u3002\u9875\u9762\u7ea7\u64a4\u9500\u8bb0\u5f55\u5141\u8bb8\u7cfb\u7edf\u8f7b\u677e\u5730\u5c3d\u5feb\u56de\u6536\u88ab\u5220\u9664\u5143\u7ec4\u5360\u7528\u7684\u7a7a\u95f4\u3002\u4e0e\u4f69\u5947\u00b7\u6885\u91d1\u65af\u4e00\u8d77\uff0c\u8fd9\u4e9b\u673a\u5236\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6d88\u9664\u4e86\u81a8\u80c0\u3002\u4e5f\u4e0d\u9700\u8981\u4e13\u95e8\u6e05\u7406\u8868\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u7cfb\u7edf\u6027\u80fd\u6076\u5316\u548c\u6570\u636e\u5e93\u4e2d\u65ad\u7684\u4e00\u4e2a\u91cd\u8981\u800c\u5e38\u89c1\u7684\u539f\u56e0\u3002\n\u5199\u5165\u65f6\u590d\u5236\u68c0\u67e5\u70b9\u548c\u884c\u7ea7WAL\u3002OrioleDB\u5728\u5199\u68c0\u67e5\u70b9\u4e0a\u4f7f\u7528\u900f\u89c6\u529f\u80fd\uff0c\u53ef\u968f\u65f6\u63d0\u4f9b\u7ed3\u6784\u4e00\u81f4\u7684\u6570\u636e\u5feb\u7167\u3002\u8fd9\u5bf9\u73b0\u4ee3SSD\u975e\u5e38\u53cb\u597d\uff0c\u5e76\u5141\u8bb8\u8fdb\u884cRow\u7ea7\u522b\u7684WAL\u8bb0\u5f55\u3002\u53cd\u8fc7\u6765\uff0c\u884c\u7ea7WAL\u65e5\u5fd7\u8bb0\u5f55\u5f88\u5bb9\u6613\u5e76\u884c\u5316\uff08\u5b8c\u6210\uff09\u3001\u7d27\u51d1\uff0c\u5e76\u4e14\u9002\u5408\u6d3b\u52a8activemultimaster\uff08\u8ba1\u5212\uff09\u3002\nOrioleDB\u73b0\u5728\u5177\u6709\u516c\u5171alpha\u72b6\u6001\u3002\u5efa\u8bae\u7528\u4e8e\u5b9e\u9a8c\u3001\u6d4b\u8bd5\u3001\u57fa\u51c6\u6d4b\u8bd5\u7b49\uff0c\u4f46\u4e0d\u5efa\u8bae\u7528\u4e8e\u751f\u4ea7\u3002\u5982\u679c\u4f60\u5bf9OrioleDB&#39\u611f\u5174\u8da3\uff1bs\u7684\u751f\u4ea7\u6548\u76ca\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\u3002\n$git\u514b\u9686https://github.com/orioledb/orioledb$cd orioledb$make USE_PGXS=1$make USE_PGXS=1\u5b89\u88c5$make USE_PGXS=1\u5b89\u88c5\u68c0\u67e5\n\u5728\u5f00\u59cb\u4f7f\u7528OrioleDB\u4e4b\u524d\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u884c\u6dfb\u52a0\u5230postgresql\u3002conf\u662f\u5fc5\u9700\u7684\u3002\u6b64\u66f4\u6539\u9700\u8981\u91cd\u65b0\u542f\u52a8PostgreSQL\u6570\u636e\u5e93\u670d\u52a1\u5668\u3002\n\u5b8c\u6210\u4e0a\u8ff0\u6b65\u9aa4\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528OrioleDB&#39\uff1b\u8fd9\u662f\u684c\u5b50\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4f7f\u7528\u8bf4\u660e\u6587\u4ef6\u3002", "note_en": "OrioleDB is a new storage engine for PostgreSQL, bringing a modern approach todatabase capacity, capabilities and performance to the world&#39;s most-loveddatabase platform.\n OrioleDB consists of an extension, building on the innovative table accessmethod framework and other standard Postgres extension interfaces. By extendingand enhancing the current table access methods, OrioleDB opens the door toa future of more powerful storage models that are optimized for cloud andmodern hardware architectures.\n  Designed for modern hardware. OrioleDB design avoids legacy CPU bottleneckson modern servers containing dozens and hundreds CPU cores, providingoptimized usage of modern storage technologies such as SSD and NVRAM.\n Reduced maintenance needs. OrioleDB implements the concepts of undo logand page-mergins, eliminating the need for dedicated garbage collectionprocesses. Additionally, OrioleDB implements default 64-bit transactionidentifiers, thus eliminating the well-known and painful wraparound problem.\n Designed to be distributed. OrioleDB implements a row-level write-aheadlog with support for parallel apply. This log architecture is optimizedfor raft consensus-based replication allowing the implementation ofactive-active multimaster.\n  No buffer mapping and lock-less page reading. In-memory pages in OrioleDBare connected with direct links to the storage pages. This eliminates theneed for in-buffer mapping along with its related bottlenecks. Additionally,in OrioleDB in-memory page reading doesn&#39;t involve atomic operations.Together, these design decisions bring vertical scalability for Postgresto the whole new level.\n MVCC is based on the UNDO log concept. In OrioleDB, old versions of tuplesdo not cause bloat in the main storage system, but eviction into the undolog comprising undo chains. Page-level undo records allow the systemto easily reclaim space occupied by deleted tuples as soon as possible.Together with page-mergins, these mechanisms eliminate bloat in the majorityof cases. Dedicated VACUUMing of tables is not needed as well, removinga significant and common cause of system performance deterioration anddatabase outages.\n Copy-on-write checkpoints and row-level WAL. OrioleDB utilizescopy-on-write checkpoints, which provides a structurally consistent snapshotof data every moment of time. This is friendly for modern SSDs and allowsrow-level WAL logging. In turn, row-level WAL logging is easy toparallelize (done), compact and suitable for active-activemultimaster (planned).\n   OrioleDB now has public alpha status. It is recommended for experiments,testing, benchmarking, etc., but is not recommended for production usage.If you are interested in OrioleDB&#39;s benefits in production, please contact us.\n     $ git clone https://github.com/orioledb/orioledb $  cd orioledb $ make USE_PGXS=1 $ make USE_PGXS=1 install $ make USE_PGXS=1 installcheck\n Before starting working with OrioleDB, adding the following line to postgresql.conf is required. This change requires a restart ofthe PostgreSQL database server.\n    Once the above steps are complete, you can start using OrioleDB&#39;s tables.See  usage documentation for details.", "posttime": "2022-02-25 22:19:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,orioledb,solving", "title": "OrioleDB\u2013\u89e3\u51b3\u4e00\u4e9bPostgreSQL\u7684\u95ee\u9898", "title_en": "OrioleDB \u2013 solving some PostgreSQL wicked problems", "transed": 1, "url": "https://github.com/orioledb/orioledb", "via": "", "real_tags": ["orioledb", "solving"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074997, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6765\u81ea\u5211\u4e8b\u53f8\u6cd5\u7cfb\u7edf\u5de5\u4f5c\u548c\u751f\u6d3b\u4eba\u5458\u7684\u89c2\u70b9\u3002\u62a5\u540d\u9886\u53d6&#34\uff1b\u5185\u5fc3\u7684\u751f\u6d3b&#34\uff1b\u6bcf\u5468\u53d1\u90ae\u4ef6\u7ed9\u4f60\u3002\n\u4efb\u4f55\u56da\u72af\u90fd\u53ef\u4ee5\u544a\u8bc9\u4f60\uff0c\u76d1\u72f1\u91cc\u5b58\u5728\u7740\u4e00\u79cd\u7279\u6b8a\u7684\u7ecf\u6d4e\u3002\u5728\u6d89\u53ca\u4ece\u98df\u54c1\u5230\u5395\u7eb8\u7684\u4efb\u4f55\u4ea4\u6613\u4e2d\uff0c\u9999\u70df\u7b49\u7269\u54c1\u90fd\u53ef\u4ee5\u5145\u5f53\u7f8e\u5143\u949e\u7968\u3002\u4efb\u4f55\u60e9\u6559\u8bbe\u65bd\u7684\u7269\u54c1\u90fd\u77ed\u7f3a\uff0c\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u88ab\u5355\u72ec\u76d1\u7981\u7684\u4eba\u6765\u8bf4\uff0c\u60c5\u51b5\u5c24\u5176\u7cdf\u7cd5\u3002\n\u5728\u6211\u56e0\u76d7\u7a83\u7f6a\u88ab\u5224\u4e24\u5e74\u76d1\u7981\u671f\u95f4\uff0c\u6211\u5f00\u59cb\u5bf9\u7ebd\u7ea6\u6240\u8c13\u7684\u7279\u6b8a\u4f4f\u623f\u5355\u5143\uff08SHU\uff09\u7684\u4eba\u4eec\u5982\u4f55\u4e70\u5356\u5546\u54c1\u611f\u5174\u8da3\u30022019\u5e74\uff0c\u5728\u201c\u5b64\u72ec\u89c2\u5bdf\u201d\u7684\u62a5\u544a\u8d44\u52a9\u4e0b\uff0c\u6211\u91c7\u8bbf\u4e8615\u540d\u7ebd\u7ea6\u5dde\u56da\u72af\uff0c\u4ed6\u4eec\u5728\u76d1\u72f1\u91cc\u81f3\u5c11\u5446\u4e86\u4e00\u4e2a\u6708\u3002\u6211\u6ca1\u6709\u76f4\u63a5\u5f15\u8ff0\u6216\u6307\u8ba4\u6211\u91c7\u8bbf\u7684\u4eba\uff0c\u56e0\u4e3a\u8fd9\u79cd\u7ecf\u6d4e\u7684\u4e00\u90e8\u5206\u662f\u975e\u6cd5\u7684\u3002\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u6211\u5b66\u5230\u7684\u662f\uff0c\u56da\u7981\u5b55\u80b2\u4e86\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u521b\u9020\u529b\u5c55\u793a\u3002\n\u8981\u7406\u89e3\u76d1\u72f1\u7ecf\u6d4e\u5728\u6211\u4eec\u6240\u8bf4\u7684\u201c\u76d2\u5b50\u201d\u4e2d\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u4f60\u5fc5\u987b\u77e5\u9053\u76d1\u72f1\u7684\u5e03\u5c40\u3002\u5728\u8f9b\u8f9b\u3001\u683c\u6797\u6216\u6000\u4fc4\u660e\u5dde\u7b49\u7ebd\u7ea6\u5dde\u76d1\u72f1\u4e2d\uff0c\u5927\u591a\u6570\u4e0e\u4e16\u9694\u7edd\u7684\u4eba\u751f\u6d3b\u5728\u4e0e\u666e\u901a\u4eba\u7fa4\uff08GP\uff09\u9694\u79bb\u7684\u5de8\u5927\u7262\u623f\u91cc\u3002\u5728\u4e00\u4e2aSHU\u4e2d\uff0c\u53ef\u4ee5\u6709200\u4e2a\u5355\u5143\u5806\u53e0\u5728\u591a\u5c42\u9ad8\u7684\u5730\u65b9\u3002\u8fd9\u4e9b\u7ec6\u80de\u5f88\u5c11\u5927\u4e8e6\u82f1\u5c3a\u4e588\u82f1\u5c3a\uff0c\u800c\u4e14\u4e24\u4e2a\u7537\u4eba\u7ecf\u5e38\u5171\u7528\u5b83\u4eec\u3002\u5728\u51e0\u4e2a\u6708\u751a\u81f3\u51e0\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u76d2\u5b50\u91cc\u7684\u4eba\u6bcf\u5929\u88ab\u517323\u621624\u5c0f\u65f6\u3002\n\u4ece\u5916\u9762\u770b\u8700\u56fd\uff0c\u4f60\u770b\u4e0d\u5230\u7ec6\u80de\u672c\u8eab\uff0c\u800c\u662f\u9644\u52a0\u7684\u201c\u4f11\u95f2\u201d\u7b14\u3002rec pen\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5ba4\u5916\u7b3c\u5b50\uff0c\u901a\u8fc7\u95e8\u4e0e\u7535\u6c60\u76f8\u8fde\u3002\u5728\u5a31\u4e50\u65f6\u95f4\uff0c\u5f53\u95e8\u6253\u5f00\u65f6\uff0c\u56da\u72af\u4eec\u53ef\u4ee5\u8d70\u51fa\u76d1\u72f1\uff0c\u4f46\u4ed6\u4eec\u4ecd\u7136\u88ab\u91d1\u5c5e\u6805\u680f\u56f4\u4f4f\u3002\n\u8bb0\u5f55\u65f6\u95f4\u662f\u4e00\u4ef6\u5435\u95f9\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u4eba\u4eec\u4ece\u8700\u56fd\u7684\u4e00\u8fb9\u5230\u53e6\u4e00\u8fb9\u4e92\u76f8\u558a\u53eb\u3002\u6709\u4e9b\u4eba\u6bcf\u5929\u90fd\u5728\u804a\u5929\u3002\u5176\u4ed6\u4eba\u53ea\u662f\u4e3a\u4e86\u542c\u5230\u81ea\u5df1\u7684\u58f0\u97f3\u800c\u5927\u558a\u810f\u8bdd\u548c\u5a01\u80c1\u3002\u4ed6\u4eec\u7b80\u76f4\u662f\u70e6\u900f\u4e86\u3002\u5728\u5608\u6742\u58f0\u4e2d\uff0c\u4eba\u4eec\u5927\u58f0\u558a\u51fa\u4ed6\u4eec\u60f3\u5356\u6216\u4e70\u7684\u4e1c\u897f\u3002\u8fd9\u4e9b\u4fe1\u606f\u6709\u4ece\u4e00\u4e2a\u5355\u5143\u4e22\u5931\u5230\u4e0b\u4e00\u4e2a\u5355\u5143\u7684\u98ce\u9669\u3002\u4e3a\u4e86\u6539\u8fdb\u7c7b\u4f3c\u4e8e\u7535\u8bdd\u6e38\u620f\u7684\u529f\u80fd\uff0c\u4eba\u4eec\u62db\u52df\u4e2d\u4ecb\u8fdb\u884c\u4ea4\u6d41\u3002\n\u5c0f\u5356\u90e8\u5728\u5355\u72ec\u76d1\u7981\u4e2d\u53d7\u5230\u6781\u5927\u9650\u5236\u3002\u53ea\u6709\u5728\u51e0\u4e2a\u6708\u7684\u826f\u597d\u884c\u4e3a\u4e4b\u540e\uff0c\u8212\u56da\u624d\u80fd\u83b7\u5f97\u8d2d\u4e70\u98df\u7269\u7684\u7279\u6743\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u5b83\u4eec\u4e5f\u4ec5\u9650\u4e8e\u5c0f\u96f6\u98df\u3002\u5bf9\u4e8e\u76d2\u5b50\u91cc\u7684\u7edd\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u4ed6\u4eec\u552f\u4e00\u8d2d\u4e70\u7684\u98df\u54c1\u662f\u536b\u751f\u7528\u54c1\u548c\u90ae\u7968\u3002\n\u90ae\u7968\u662f\u76d2\u88c5\u8d27\u5e01\u7684\u4e00\u79cd\u4e3b\u8981\u5f62\u5f0f\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u5b83\u4eec\uff0c\u800c\u4e14\u5b83\u4eec\u4f53\u79ef\u5c0f\uff0c\u53ef\u9690\u85cf\uff0c\u6613\u4e8e\u8fd0\u8f93\u3002\u5355\u72ec\u76d1\u7981\u59d4\u5458\u4f1a\u6700\u503c\u5f97\u6ce8\u610f\u7684\u4ea7\u54c1\u662f\u70df\u8349\u3002\u4ece\u666e\u901a\u79d1\u533b\u751f\u7ecf\u5e38\u5438\u70df\uff0c\u5230\u88ab\u9694\u79bb\u548c\u7a7a\u624b\u72ec\u5904\uff0c\u8bb8\u591a\u56da\u72af\u5728\u62d8\u7559\u6240\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u201c\u8c01\u6709\u2018bacco\u2019\u201d\u3002\u56e0\u6b64\uff0c\u5377\u8f74\u7eb8\u3001\u706b\u67f4\u548c\u6253\u706b\u673a\u4e5f\u5f88\u6709\u4ef7\u503c\u3002\n\u6211\u91c7\u8bbf\u7684\u7537\u4eba\u544a\u8bc9\u6211\uff0c\u6700\u5e38\u89c1\u7684\u70df\u8349\u91cf\u662f\u4e00\u4e2a\u7a7a\u7cd6\u5305\u7684\u4ef7\u503c\u6216\u201cs.p.\u201d\u7537\u4eba\u4eec\u4ece\u65e9\u9910\u6258\u76d8\u4e2d\u53d6\u51fa\u5c0f\u7eb8\u888b\u3002\u5e73\u5747\u4ef7\u683c\u4e3a3\u52305\u7f8e\u5143\uff0c\u6216\u80056\u523010\u679a\u90ae\u7968\uff0c\u4e00\u652f\u6807\u51c6\u666e\u5c14\u7684\u70df\u8349\u8db3\u591f\u4e09\u652f\u9999\u70df\u3002\u4e00\u6574\u888b\u70df\u8349\u53ef\u4ee5\u88c530\u652f\u9999\u70df\uff0c\u5728GP\u7684\u5c0f\u5356\u90e8\u82b1\u8d39\u4e0d\u52304\u7f8e\u5143\u3002\u5728\u8700\u56fd\uff0c\u5982\u679c\u4f60\u80fd\u6210\u529f\u5730\u5c06\u70df\u8349\u5e26\u5165\u8be5\u90e8\u95e8\uff0c\u6f5c\u5728\u7684\u5229\u6da6\u7a7a\u95f4\u662f\u975e\u5e38\u5927\u7684\u3002\n\u8272\u60c5\u6742\u5fd7\u662f\u76d2\u5b50\u91cc\u7684\u53e6\u4e00\u79cd\u4e3b\u8981\u5546\u54c1\u3002\u6709\u4e9b\u95ee\u9898\u88ab\u5355\u72ec\u76d1\u7981\u7684\u65f6\u95f4\u6bd4\u5927\u591a\u6570\u56da\u72af\u90fd\u957f\u3002\u6495\u7834\u548c\u4e22\u5931\u7684\u4e66\u9875\uff0c\u770b\u8d77\u6765\u548c\u62ff\u7740\u5b83\u4eec\u7684\u4eba\u4e00\u6837\u60b2\u4f24\u3002\u867d\u7136\u4e00\u5bf9\u4e00\u7684\u4ea4\u6613\u662f\u83b7\u53d6\u65b0\u76ae\u80a4Mag\u7684\u5e38\u7528\u65b9\u6cd5\uff0c\u4f46\u5076\u5c14\u6709\u4eba\u4f1a\u82b110\u7f8e\u5143\u8d2d\u4e70\u4e00\u4e2a\u72b6\u6001\u975e\u5e38\u597d\u7684\u76ae\u80a4Mag\u3002\n\u5355\u72ec\u8fdb\u98df\u65f6\uff0c\u98df\u7269\u7684\u4efd\u91cf\u5f80\u5f80\u76f8\u5bf9\u8f83\u5c0f\u3002\u6211\u91c7\u8bbf\u7684\u5927\u591a\u6570\u7537\u6027\u8bf4\uff0c\u4ed6\u4eec\u6536\u5230\u7684\u76d2\u5b50\u91cc\u7684\u98df\u7269\u6bd4\u666e\u901a\u533b\u751f\u7684\u8981\u5c11\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u8bf4\u4ed6\u4eec\u5f97\u5230\u4e86\u4e00\u676f\u7c73\u996d\uff0c\u800c\u4e0d\u662f\u901a\u5e38\u7684\u4e24\u676f\u3002\u4e3a\u4e86\u751f\u5b58\uff0c\u4ed6\u4eec\u4ea4\u6362\u76d8\u5b50\u91cc\u7684\u98df\u7269\u3002\u4e00\u4e9b\u4eba\u6362\u6389\u4e86\u4ed6\u4eec\u4e0d\u559c\u6b22\u7684\u4e1c\u897f\uff1b\u5176\u4ed6\u4eba\u5219\u4ee5\u4ea4\u6362\u6765\u652f\u6301\u4ed6\u4eec\u7684\u5438\u70df\u4e60\u60ef\u3002\n\u8003\u8651\u5230\u5b64\u72ec\u56da\u7981\u4e2d\u7684\u65e0\u804a\u548c\u9965\u997f\u4e00\u6837\u5371\u9669\uff0c\u4e00\u4e9b\u4eba\u7528\u4ed6\u4eec\u4ea4\u6613\u7684\u4e1c\u897f\u5236\u4f5c\u4e86\u4e00\u79cd\u88ab\u79f0\u4e3a\u201c\u76d2\u5b50\u6d3e\u201d\u7684\u7cd6\u679c\u4e3a\u4e86\u51c6\u5907\u4e00\u4e2a\u76d2\u5f0f\u9985\u997c\uff0c\u4e00\u540d\u56da\u72af\u4ece\u4ed6\u6b63\u9910\u4e2d\u6536\u96c6\u767d\u9762\u5305\uff0c\u5e76\u5c06\u5207\u7247\u6363\u788e\uff0c\u76f4\u5230\u5b83\u4eec\u50cf\u9985\u997c\u76ae\u7684\u9762\u56e2\u3002\u4ed6\u4eec\u7528\u4ece\u9910\u76d8\u4e2d\u6536\u96c6\u7684\u7cd6\u679c\u586b\u6ee1\u201c\u5916\u58f3\u201d\uff0c\u7136\u540e\u628a\u6574\u4e2a\u4e1c\u897f\u538b\u5e73\u3002\u6709\u4e9b\u4eba\u7528\u82f9\u679c\u548c\u9999\u8549\u7247\uff0c\u4f46\u5e03\u6717\u5c3c\u3001\u86cb\u7cd5\u548c\u82f9\u679c\u9165\u7b49\u751c\u70b9\u5c24\u5176\u53d7\u6b22\u8fce\u3002\n\u65e0\u8bba\u4f60\u5728\u4e70\u5356\u4ec0\u4e48\uff0c\u4f60\u90fd\u5fc5\u987b\u5b66\u4f1a\u5982\u4f55\u201c\u9493\u9c7c\u201d\u4ee5\u53c2\u4e0e\u5b64\u72ec\u7684\u7ecf\u6d4e\u3002\u9493\u9c7c\u7ebf\u7531\u6495\u5f00\u7684\u5e8a\u5355\u3001\u6bdb\u5dfe\u548c\u8863\u670d\u7ec4\u6210\u3002\u6709\u4e86\u8db3\u591f\u8584\u7684\u5e8a\u5355\uff0c\u4f60\u53ef\u4ee5\u7528\u4e00\u5f20\u5dde\u653f\u5e9c\u53d1\u5e03\u7684\u5e8a\u5355\u6392\u6210\u5927\u7ea6100\u82f1\u5c3a\u957f\u7684\u7ebf\u3002\u9493\u9c7c\u65f6\uff0c\u4f60\u8981\u628a\u4f60\u8981\u5356\u7684\u4e1c\u897f\u548c\u4e00\u5757\u781d\u7801\uff08\u6bd4\u5982\u4e00\u5757\u80a5\u7682\uff09\u653e\u5728\u9493\u7ebf\u4e0a\u3002\u5f53\u4f60\u628a\u7ef3\u5b50\u671d\u4e70\u5bb6\u6254\u8fc7\u53bb\u65f6\uff0c\u91cd\u91cf\u4f1a\u4ea7\u751f\u6240\u9700\u7684\u52a8\u91cf\uff0c\u8ba9\u4f60\u7684\u7269\u54c1\u5728\u7a7a\u4e2d\u79fb\u52a8\uff0c\u843d\u5730\u540e\u5c06\u5176\u62d6\u5165\u6b63\u786e\u7684\u5355\u5143\u683c\u3002\n\u5f53\u7136\uff0c\u5546\u54c1\u53ef\u80fd\u4f1a\u4ece\u751f\u4ea7\u7ebf\u4e0a\u6389\u4e0b\u6765\uff0c\u6216\u843d\u5728\u65e0\u6cd5\u56de\u6536\u7684\u5730\u65b9\u3002\u5173\u4e8e\u76d7\u7a83\u7684\u6307\u63a7\u4f1a\u5f15\u53d1\u4e89\u8bba\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u77e5\u9053\u4f60\u53ef\u4ee5\u4fe1\u4efb\u8c01\u6765\u4f20\u9012\u4f60\u7684\u8d27\u7269\u3002\u5728\u6211\u7684\u62a5\u9053\u4e2d\uff0c\u6211\u542c\u8bf4\u4e00\u4e2a\u4eba\u5728\u5916\u9762\u6ca1\u6709\u4efb\u4f55\u5bb6\u5ead\u6210\u5458\u5e2e\u52a9\u4ed6\u652f\u4ed8\u536b\u751f\u7eb8\u7b49\u57fa\u672c\u8d39\u7528\u3002\u591a\u4e8f\u4e86\u4ed6\u7684\u7262\u623f\u7684\u4e2d\u5fc3\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4ed6\u826f\u597d\u7684\u76ee\u6807\u548c\u53ef\u4fe1\u5ea6\uff0c\u4ed6\u80fd\u591f\u901a\u8fc7\u4fdd\u62a4\u5176\u4ed6\u4eba\u7684\u7ebf\u8def\u6765\u517b\u6d3b\u81ea\u5df1\u3002\u4e00\u5f00\u59cb\u662f\u4e3a\u4e86\u6d88\u78e8\u65f6\u95f4\uff0c\u4f46\u6700\u7ec8\u4ed6\u53d8\u5f97\u975e\u5e38\u64c5\u957f\u3002\u4eba\u4eec\u4f1a\u7167\u987e\u4ed6\uff0c\u7ed9\u4ed6\u5bc4\u4e1c\u897f\u4ee5\u6362\u53d6\u4ed6\u7684\u5e2e\u52a9\u3002\n\u5f88\u96be\u5b8c\u5168\u63cf\u8ff0\u6355\u9c7c\u7684\u9650\u5236\u6761\u4ef6\u3002rec\u7b14\u53ea\u662f\u4e00\u4e2a\u5c0f\u7b3c\u5b50\uff0c\u4e24\u6761\u6760\u4e4b\u95f4\u7684\u8ddd\u79bb\u53ea\u6709\u51e0\u82f1\u5bf8\u3002\u5728\u680f\u6746\u8fc7\u7d27\uff0c\u65e0\u6cd5\u7528\u624b\u5939\u4f4f\u680f\u6746\u7684\u5355\u4f4d\uff0c\u4eba\u4eec\u4f1a\u7528\u201c\u77db\u201d\u6765\u6295\u63b7\u7ef3\u5b50\u3002\u77db\u662f\u5377\u5f97\u5f88\u7d27\u7684\u6742\u5fd7\u6216\u62a5\u7eb8\uff0c\u53ef\u4ee5\u5728\u7a7a\u4e2d\u6ed1\u52a8\u3002\u5b83\u7684\u4f5c\u7528\u548c\u781d\u7801\u4e00\u6837\u3002\u5bf9\u4e8e\u90a3\u4e9b\u8fd8\u4e0d\u64c5\u957f\u9493\u9c7c\u7684\u4eba\u6765\u8bf4\uff0c\u53ea\u9700\u5728\u51e0\u4e2a\u7ec6\u80de\u5185\u4e0e\u67d0\u4eba\u5efa\u7acb\u8054\u7cfb\uff0c\u53ef\u80fd\u9700\u8981\u51e0\u5341\u6b21\u5c1d\u8bd5\u3002\n\u4f46\u8fd9\u4e9b\u5c40\u9650\u6027\u4f7f\u56da\u72af\u7684\u719f\u7ec3\u7a0b\u5ea6\u66f4\u52a0\u5438\u5f15\u4eba\u3002\u6211\u91c7\u8bbf\u8fc7\u4e00\u4e2a\u4eba\uff0c\u4ed6\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5728\u4e09\u5c42\u7684\u4eba\u628a\u4e00\u6761\u7ebf\u5c04\u5230\u4e86\u5730\u4e0a\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4ef6\u7269\u54c1\u843d\u5728\u5730\u677f\u4e0a\uff0c\u6ed1\u5230\u4e86100\u591a\u82f1\u5c3a\u8fdc\u7684\u76ee\u6807\u95e8\u4e0b\u3002\n\u4eba\u7c7b\u7684\u751f\u5b58\u4e00\u76f4\u4f9d\u8d56\u4e8e\u6211\u4eec\u521b\u9020\u6027\u5408\u4f5c\u7684\u80fd\u529b\u3002\u5728\u50cf\u5355\u72ec\u76d1\u7981\u8fd9\u6837\u7684\u4e0d\u5229\u60c5\u51b5\u4e0b\uff0c\u4f60\u5fc5\u987b\u8df3\u51fa\u6846\u6846\u601d\u8003\u3002\u867d\u7136\u8fd9\u79cd\u7ecf\u6d4e\u662f\u7531\u975e\u5e38\u57fa\u672c\u7684\u5546\u54c1\u7ec4\u6210\u7684\uff0c\u8fd9\u4e9b\u5546\u54c1\u5728\u975e\u5e38\u7b80\u5355\u7684\u5de5\u5177\u7684\u5e2e\u52a9\u4e0b\u8fdb\u884c\u4ea4\u6362\uff0c\u4f46\u5b83\u76f8\u5f53\u590d\u6742\u3002\n\u5728\u5dde\u76d1\u72f1\u3001\u8054\u90a6\u76d1\u72f1\u548c\u5730\u65b9\u76d1\u72f1\u4e4b\u95f4\uff0c\u7f8e\u56fd\u5927\u7ea6\u6709230\u4e07\u4eba\u88ab\u76d1\u7981\u3002\u5e73\u5747\u800c\u8a00\uff0c\u8fd14%\u7684\u4eba\u88ab\u5355\u72ec\u76d1\u7981\u3002\u7262\u623f\u9152\u5427\u548c\u9493\u9c7c\u7ebf\u4f3c\u4e4e\u76f8\u9694\u4e00\u4e2a\u4e16\u754c\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u76f8\u5f53\u591a\u7684\u7f8e\u56fd\u4eba\u6765\u8bf4\uff0c\u5b83\u4eec\u662f\u65e5\u5e38\u751f\u6d3b\u7684\u4e00\u90e8\u5206\u3002\n24\u5c81\u7684\u9a6c\u4fee\u00b7\u963f\u624e\u8bfa\u5728\u7ebd\u7ea6\u7f57\u5207\u65af\u7279\u51fa\u751f\u5e76\u957f\u5927\u3002\u5728\u7ebd\u7ea6\u76d1\u72f1\u670d\u5211\u4e24\u5e74\u540e\uff0c\u4ed6\u6b63\u5728\u5e03\u6cd5\u7f57\u5dde\u7acb\u5b66\u9662\u5b8c\u6210\u57ce\u5e02\u89c4\u5212\u5b66\u58eb\u5b66\u4f4d\uff0c\u5e76\u5728\u90a3\u91cc\u53c2\u52a0\u6a44\u6984\u7403\u961f\u3002\u4ed6\u559c\u6b22\u953b\u70bc\u3001\u70f9\u996a\u548c\u7ec3\u4e60\u897f\u73ed\u7259\u8bed\u3002\u4ed6\u901a\u8fc7\u5355\u72ec\u76d1\u7981\u62a5\u544a\u9879\u76ee\u7684\u8d44\u52a9\u64b0\u5199\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002\n\u7ebd\u7ea6\u60e9\u6212\u548c\u793e\u533a\u76d1\u7763\u90e8\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u5728\u56de\u5e94\u6709\u5173\u8212\u7684\u56da\u72af\u901a\u8fc7\u201c\u6355\u9c7c\u201d\u83b7\u5f97\u7684\u98df\u7269\u548c\u4ea4\u6613\u7269\u54c1\u51cf\u5c11\u7684\u8bf4\u6cd5\u65f6\u5199\u9053\uff0c\u201c\u8212\u7684\u88ab\u76d1\u7981\u8005\u83b7\u5f97\u7684\u98df\u7269\u4e0e\u666e\u901a\u4eba\u7684\u98df\u7269\u76f8\u540c\u201d\uff0c\u4f46\u6709\u4e9b\u4eba\u6ca1\u6709\u201c\u5982\u679c\u53d1\u73b0\u4e2a\u4eba\u56e0\u4e22\u5f03\u98df\u7269\u800c\u6d6a\u8d39\u98df\u7269\uff0c\u5219\u5e94\u5c06\u5176\u653e\u5165\u7279\u6b8a\u7ba1\u7406\u9910\u4e2d\uff0c\u8be5\u9910\u4e2d\u5fc5\u987b\u4ecd\u6709\u8db3\u591f\u6570\u91cf\u7684\u6709\u76ca\u5065\u5eb7\u4e14\u8425\u517b\u4e30\u5bcc\u7684\u98df\u7269\u3002\u201d\u4ed6\u4eec\u8fd8\u8868\u793a\uff0c\u201c\u4e0d\u5141\u8bb8\u88ab\u76d1\u7981\u8005\u4e4b\u95f4\u4ee5\u8fd9\u79cd\u6216\u4efb\u4f55\u65b9\u5f0f\u4ea4\u6362\u672a\u7ecf\u6388\u6743\u7684\u7269\u54c1\u3002\u201d", "note_en": "Perspectives from those who work and live in the criminal justice system.  Sign up to receive &#34;Life Inside&#34; emailed to you every week.\n  Any prisoner can tell you that a peculiar economy exists behind bars. Items like cigarettes serve as dollar bills in transactions involving anything from food to toilet paper. Goods are in short supply in any correctional facility, but the circumstances are especially dire for those in solitary confinement.\n I became interested in how people in New York\u2019s so-called Special Housing Units (SHUs) buy and sell their goods while I was serving a two-year sentence for burglary. In 2019, armed with a reporting grant from Solitary Watch, I interviewed 15 New York state prisoners who had spent at least one month in a SHU. I did not directly quote or identify the men I interviewed because parts of this economy are illegal. But what I learned overall is that captivity breeds impressive displays of creativity.\n  To understand how the prison economy works in what we call \u201cthe box,\u201d you have to know how the SHU is laid out. In New York state prisons such as Sing-Sing, Greene or Wyoming, most people in isolation live in massive cell blocks separate from the general population (GP). In a SHU, there can be 200 cells stacked multiple tiers high. These cells are rarely larger than 6 feet by 8 feet, and two men often share them. For months \u2014 even years \u2014 people in the box are confined for 23 or 24 hours a day.\n Viewing the SHU from outside, you don\u2019t see the cells themselves, but rather the attached \u201crecreation\u201d pens. A rec pen is essentially an outdoor cage connected to a cell by a door. When the doors unlock for recreation time, prisoners can walk out into the pen, but they remain fenced in by metal bars.\n Rec time is a clamorous affair, as men shout to each other from one side of the SHU to the other. Some guys are having everyday conversations. Others scream obscenities and threats just to hear their own voices. They are literally bored out of their minds. Amid the cacophony, people call out what they are trying to sell or buy. These messages run the risk of getting lost from one cell to the next. To improve what resembles a game of Telephone, people enlist intermediaries to communicate.\n Commissary is extremely limited in solitary confinement. Only after many months of good behavior may a SHU prisoner gain the privilege to buy food. Even then, they are limited to small snacks. For the vast majority of people in the box, their only commissary purchases are hygiene products and stamps.\n Stamps are a major form of currency in the box because virtually everyone needs them, and they are small, concealable and easy to transport in any quantity. The most notable product missing from solitary confinement commissary is tobacco. Going straight from smoking regularly in GP to being isolated and empty-handed in solitary, many prisoners\u2019 first question at the rec pen is, \u201cWho\u2019s got the \u2018bacco?\u2019\u201d Accordingly, rolling papers, matches and lighters are valuable as well.\n The men I interviewed told me that the most common quantity of tobacco is an empty sugar packet\u2019s worth or an \u201cs.p.\u201d Guys harvest the small paper envelopes from their breakfast trays. With an average price of $3 to $5 \u2014 or six to 10 stamps \u2014 an s.p. of tobacco is enough for three cigarettes. An entire pouch of tobacco, which can fill about 30 cigarettes, costs less than $4 on commissary in GP. In the SHU, the potential margin for profit is very large if you can successfully carry tobacco into the unit.\n Pornographic magazines are another major commodity in the box. Some issues have been in solitary confinement for longer than most of the prisoners. Ripped and missing pages, they look about as sad as the men who hold them. Although trading one-for-one is the usual method for acquiring new skin mags, occasionally someone will pay $10 for one in very good condition.\n Food portions tend to be relatively small in solitary. Most of the men I interviewed said they received less food in the box than they did in GP. For example, they said they got one cup of rice instead of the usual two. To get by, they traded food off their trays. Some swapped out items they didn\u2019t like; others bartered to support their tobacco habit.\n    Given that boredom is just as dangerous as hunger in solitary confinement, some of the guys used what they traded to make a confection known as a \u201cbox pie.\u201d To prepare a box pie, a prisoner collects the white bread from his meals and pounds the slices together until they resemble the dough of a pie crust. They fill the \u201ccrust\u201d with sweets accumulated from dinner trays and press the whole thing flat. Some use apple and banana slices, but desserts such as brownies, cakes and apple crisp are especially sought-after fillings.\n Whatever you\u2019re buying or selling, you must learn how to \u201cfish\u201d to participate in the solitary economy. Fishing lines are made of ripped strips of sheets, towels and clothes. With thin enough strips, you can make about 100 feet of line out of a single state-issued bedsheet. To fish, you attach the item you\u2019re selling to the line along with a weight, such as a bar of soap. When you toss the line toward your buyer, the weight creates the momentum needed to carry your item through the air and drag it into the right cell after it lands.\n Of course, commodities can fall off the line or land in places where they can\u2019t be recovered. Arguments can ignite over accusations of theft, so you need to know who you can trust to pass on your goods. In my reporting, I heard about one guy who didn\u2019t have any family members on the outside to help him pay for basics like toilet paper. Thanks to his cell\u2019s central location and his good aim and trustworthiness, he was able to support himself by securing other people\u2019s lines. It started out as something he would do to pass the time, but he ended up getting really good at it. People would look out for him, sending him items in exchange for his help.\n It is difficult to fully describe the restrictive conditions in which fishing takes place. The rec pen is just a small cage, and the space between the bars is a matter of inches. In units where the bars are too tight to fit one\u2019s hand between them, people use a \u201cspear\u201d to throw the line. A spear is a magazine or newspaper rolled up so tight that it glides through the air. It serves the same purpose as a weight does. For those who are not yet adept at fishing, it can take dozens of tries just to connect to someone a few cells down.\n But the limitations make prisoners\u2019 proficiency all the more fascinating. One man I interviewed described a guy on the third tier shooting a line to the ground level. He said the item landed on the floor and slid underneath his target\u2019s door more than 100 feet away.\n Human survival has always depended on our ability to cooperate creatively. In adverse situations like solitary confinement, you literally have to think outside the box. While this economy is made up of very basic commodities that are exchanged with the help of very simple tools, it\u2019s quite complex.\n Between state and federal prisons and local jails, about 2.3 million people are incarcerated in the United States. On average, close to 4% of them are held in solitary confinement. Cell bars and fishing lines may seem a world away, but are in fact a part of daily life for a considerable number of Americans.\n Matthew Azzano, 24, was born and raised in Rochester, New York. After serving two years in New York prisons, he is completing a bachelor\u2019s degree in urban planning at Buffalo State College, where he also plays on the rugby team. He enjoys exercising, cooking and practicing Spanish. He reported for this essay through a grant from the   Solitary Confinement Reporting Project .\n In response to claims that prisoners in SHU were receiving less food and trading items by \u201cfishing,\u201d a spokesperson for the New York Department of Corrections and Community Supervision wrote that \u201cincarcerated individuals in SHU are provided the same type of meals available in general population\u201d but that some are \u201cplaced in a special management meal \u2014 which must still be sufficient in quantity of wholesome and nutritious food \u2014 if the individual is found to waste food by throwing it.\u201d They also stated that the \u201cexchange of unauthorized items between incarcerated individuals in this, or any manner, is not permitted.\u201d", "posttime": "2022-02-25 22:15:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76d1\u7981,economy,\u76d1\u72f1", "title": "\u5355\u72ec\u76d1\u7981\u7684\u5730\u4e0b\u7ecf\u6d4e", "title_en": "The underground economy of solitary confinement", "transed": 1, "url": "https://www.themarshallproject.org/2022/02/18/inside-the-underground-economy-of-solitary-confinement", "via": "", "real_tags": ["\u76d1\u7981", "economy", "\u76d1\u72f1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074996, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u65e9\u4e0a\uff0cPatreon\u6682\u505c\u4e86\u6211\u4eec\u7f51\u7ad9\u4e0a\u4e00\u4e2a\u540d\u4e3a\u201c\u6d3b\u7740\u56de\u6765\u201d\u7684\u7ec4\u7ec7\u7684\u9875\u9762\uff0c\u56e0\u4e3a\u5b83\u8fdd\u53cd\u4e86\u6211\u4eec\u7684\u653f\u7b56\u3002\u8be5\u7ec4\u7ec7\u7684\u7f51\u7ad9\u79f0\uff0c\u4ed6\u4eec\u5229\u7528\u6350\u6b3e\u8d44\u52a9\u548c\u57f9\u8bad\u519b\u4e8b\u4eba\u5458\u3002\u5177\u4f53\u800c\u8a00\uff0c\u4ed6\u4eec\u58f0\u79f0\u5c06\u6536\u5230\u7684\u8d44\u91d1\u7528\u4e8e\u4ee5\u4e0b\u7528\u9014\uff1a\n\u201c\u8fd9\u4e9b\u8d44\u91d1\u88ab\u7528\u4e8e\u2026\u20261500\u591a\u53f0\u5e73\u677f\u7535\u8111\uff0c\u4ee5\u53ca\u7528\u4e8e\u5188\u4e9a\u88c5\u7532\u70ae\u5175\u7684\u8f6f\u4ef6\u3001230\u67b6\u56db\u67b6\u76f4\u5347\u673a\u300145\u4e2a\u79fb\u52a8\u76d1\u63a7\u7cfb\u7edf\u2026\u2026\u548c60\u591a\u8f86\u519b\u7528\u8f66\u8f86\u3002\u201d\n\u201c\u8be5\u7ec4\u7ec7\u8fd8\u5f00\u59cb\u521b\u5efa\u548c\u5b9e\u65bd\u65b0\u7684\u6280\u672f\u89e3\u51b3\u65b9\u6848\u201d\uff0c\u5305\u62ec\u201c\u706b\u70ae\u6b66\u5668\u6a21\u578b\u201d\n\u201c\u57f9\u8bad\u4e86350\u540d\u72d9\u51fb\u624b\u30012000\u591a\u540d\u5de5\u5175\u548c3000\u591a\u540d\u67aa\u624b\uff0c\u76ee\u524d\u6b63\u5728\u8fdb\u884c\u65e0\u4eba\u673a\u64cd\u4f5c\u5458\u57f9\u8bad\u3002\u201d\n\u6211\u4eec\u4e0d\u5141\u8bb8Patreon\u88ab\u7528\u4e8e\u8d44\u52a9\u6b66\u5668\u6216\u519b\u4e8b\u6d3b\u52a8\u3002\u8fd9\u8fdd\u53cd\u4e86\u6211\u4eec\u7684\u653f\u7b56\uff0c\u56e0\u6b64\u6211\u4eec\u5220\u9664\u4e86\u8be5\u9875\u9762\u3002\u8d26\u6237\u4e2d\u7684\u6240\u6709\u5269\u4f59\u8d44\u91d1\u5c06\u9000\u8fd8\u7ed9\u51fa\u8d44\u4eba\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u4ecd\u5728\u5bfb\u6c42\u5e2e\u52a9\u7684\u4eba\uff0c\u4e4c\u514b\u5170\u8bb0\u8005\u63a8\u8350\u4e86\u51e0\u4e2a\u6148\u5584\u673a\u6784\u548c\u5e73\u53f0\uff0c\u8fd9\u4e9b\u673a\u6784\u548c\u5e73\u53f0\u5c06\u4ece\u6350\u8d60\u4e2d\u53d7\u76ca\uff0c\u6bd4\u5982\u4e4c\u514b\u5170\u7ea2\u5341\u5b57\u4f1a\u3001\u513f\u7ae5\u4e4b\u58f0\u548c\u590d\u5174\u4e4c\u514b\u5170\u58eb\u5175\u3002Patreon\u4e0a\u8fd8\u67093000\u591a\u540d\u4e4c\u514b\u5170\u521b\u4f5c\u8005\uff0c\u8fd8\u6709\u6570\u5343\u4eba\u4f7f\u7528\u5176\u4ed6\u5e73\u53f0\uff0c\u4ed6\u4eec\u5c06\u53d7\u76ca\u4e8e\u6211\u4eec\u7684\u652f\u6301\u3002\n\u6211\u4eec\u5bf9\u5165\u4fb5\u4e4c\u514b\u5170\u611f\u5230\u9707\u60ca\u548c\u5fc3\u788e\u3002\u548c\u4e16\u754c\u5404\u5730\u7684\u8bb8\u591a\u4eba\u4e00\u6837\uff0c\u6211\u4eec\u6b63\u5728\u5bc6\u5207\u5173\u6ce8\u8fd9\u573a\u60b2\u5267\uff0c\u5e76\u5e0c\u671b\u4e4c\u514b\u5170\u4eba\u6c11\u7684\u5b89\u5168\u53d7\u5230\u635f\u5bb3\u3002", "note_en": "This morning, Patreon suspended an organization\u2019s page from our site called \u201cCome Back Alive\u201d because it violated our policies. The website of the organization says they use contributions to finance and train military personnel. Specifically, they claim to use funds they received for the following:\n \u201cfunds were used for\u2026 more than 1,500 tablets with software for Gunnya-Armor artillerymen,   230 quadcopters,   45 mobile surveillance systems\u2026, and   more than 60 military vehicles.\u201d\n \u201c  The organization also initiates the creation and implementation of new technical solutions ,\u201d including  \u201c  models of artillery weapons. \u201d\n \u201ctrained 350 snipers  , more than 2,000 sappers and more than   3,000 gunners,   and training is being conducted to train UAV operators.\u201d\n We don\u2019t allow Patreon to be used for funding weapons or military activity. It is a   violation of our policies , and so we have removed the page. All remaining funds in the account will be refunded to contributors.\n For those still looking to help, Ukrainian journalists have recommended several charities and platforms that would benefit from donations, such as the   Ukrainian Red Cross Society ,   Voices of Children , and   Revived Soldiers Ukraine . There are also 3,000+ Ukrainian creators on Patreon \u2013 and thousands more using other platforms \u2013 who would benefit from our support.\n We are shocked and heartbroken at the invasion of Ukraine. Like so many around the world, we are watching this tragedy closely and wishing for the safety of the Ukrainian people in harm\u2019s way.", "posttime": "2022-02-25 22:14:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d3b\u7740,removal,\u4e4c\u514b\u5170", "title": "\u5173\u4e8e\u79fb\u9664\u201c\u6d3b\u7740\u56de\u6765\u201d\u7684\u95ee\u9898", "title_en": "On the removal of Come Back Alive", "transed": 1, "url": "https://blog.patreon.com/on-the-removal-of-come-back-alive", "via": "", "real_tags": ["\u6d3b\u7740", "removal", "\u4e4c\u514b\u5170"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074995, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Ink/Stitch\u65e8\u5728\u6210\u4e3a\u4e00\u4e2a\u5b8c\u5168\u57fa\u4e8e\u514d\u8d39\u5f00\u6e90\u8f6f\u4ef6\u7684\u6210\u719f\u7684\u8de8\u5e73\u53f0\u523a\u7ee3\u6570\u5b57\u5316\u5e73\u53f0\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u4e3a\u7231\u597d\u8005\u63d0\u4f9b\u53ef\u63a5\u8fd1\u6027\uff0c\u540c\u65f6\u4e5f\u4e3a\u4e13\u4e1a\u6570\u5b57\u5316\u4eea\u63d0\u4f9b\u6240\u9700\u7684\u7535\u6e90\u3002\n\u6211&#39\uff1b\u6211\u4ece\u65b0\u5e74\u5f00\u59cb[2019]\u5c31\u4e00\u76f4\u5728\u6211\u7684\u81ea\u7531\u6570\u5b57\u5316\u5de5\u4f5c\u4e2d\u4f7f\u7528\u58a8\u6c34/\u9488\u8ff9\u3002\u6700\u7ec8\uff0c\u6211\u8fdb\u5165Windows\u865a\u62df\u673a\u53ea\u662f\u4e3a\u4e86\u6000\u65e7\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u65e5\u5e38\u5de5\u4f5c\u3002\n\u4e70\u4e86\u8fd9\u53f0\u673a\u5668\u540e\uff0c\u6211\u5f00\u59cb\u7528\u5f88\u5c11\u751a\u81f3\u6ca1\u6709\u94b1\u6765\u523a\u7ee3\u2014\u2014\u5b83&#39\uff1b\u80fd\u627e\u5230\u4e00\u6b3e\u529f\u80fd\u5982\u6b64\u5f3a\u5927\u7684\u81ea\u7531\u8f6f\u4ef6\u771f\u662f\u592a\u68d2\u4e86\u3002\u975e\u5e38\u611f\u8c22\u4f60\u521b\u5efa\u4e86\u8fd9\u4e2a\u5f88\u68d2\u7684\u8f6f\u4ef6\uff01\uff01", "note_en": "Ink/Stitch aims to be a full-fledged, cross-platform embroidery digitizing platform based entirely on free, open-source software. Our goal is to be approachable for hobbyists while also providing the power needed by professional digitizers.\n   I&#39;ve been using Ink/Stitch exclusively in my freelance digitizing work since the beginning of the New Year [2019]. Finally made it possible for me to only go into my Windows VMs for nostalgia only and not a necessity for day to day work.\n I started embroidery with little to no money after buying the machine-- it&#39;s been amazing to find a free software with such amazing capabilities. Thank you so much for creating this wonderful software!!", "posttime": "2022-02-25 22:13:08", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u58a8\u6c34,ink,\u63d0\u4f9b", "title": "\u58a8\u6c34/\u7f1d\u7ebf", "title_en": "Ink/Stitch", "transed": 1, "url": "https://inkstitch.org/", "via": "", "real_tags": ["\u58a8\u6c34", "ink", "\u63d0\u4f9b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074994, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "ARJ\u662f\u4e00\u79cd\u6587\u4ef6\u5f52\u6863\u7a0b\u5e8f\uff0c\u53ef\u5c06\u6587\u4ef6\u538b\u7f29\u5230\u78c1\u76d8\u7a7a\u95f4\u4e2d\uff0c\u4ee5\u8282\u7701\u7a7a\u95f4", "note_en": "ARJ is a file archiver that compresses files into a disk space saving \rarchive. It is  fast,  reliable, and has a rich set of features \rwhich include  Windows 9x, Millenium, 2000, XP, Vista, and 7 long filename support, file version management, \r data damage protection, \rconfigurable command options,  multiple volume archives (archives that span \rremovable media) and much more.\r\r\r     ARJ32 3.20 supports Windows 7 and Windows 8 (32/64 bit).  ARJ32 3.20 and ARJ 2.86 downloads have been moved to new hosting.  Please visit our  Download page.      ARJ32 3.2x (for Win7/Vista/NT/2000/XP and Win9x/ME) is a separate product of ARJ Software.\u00a0\u00a0\rARJ 2.8x is the upgrade for ARJ 2.6x/2.7x.", "posttime": "2022-02-25 22:12:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,arj,\u6587\u4ef6", "title": "ARJ\u8f6f\u4ef6", "title_en": "ARJ Software", "transed": 1, "url": "http://www.arjsoftware.com/", "via": "", "real_tags": ["\u8f6f\u4ef6", "arj", "\u6587\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074993, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Oberon\u9879\u76ee\u662f\u4e00\u4e2a\u4ece\u5934\u5f00\u59cb\u7684\u5b8c\u6574\u684c\u9762\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u8bbe\u8ba1\u3002\u5b83\u7684\u7b80\u5355\u6027\u548c\u6e05\u6670\u6027\u4f7f\u4e00\u4e2a\u4eba\u80fd\u591f\u4e86\u89e3\u548c\u5b9e\u73b0\u6574\u4e2a\u7cfb\u7edf\uff0c\u540c\u65f6\u4ecd\u80fd\u63d0\u4f9b\u8db3\u591f\u7684\u80fd\u529b\uff0c\u4f7f\u5176\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u6709\u7528\u548c\u53ef\u7528\u3002\u672c\u7f51\u7ad9\u5305\u542b\u6709\u5173\u63a2\u7d22\u548c\u4f7f\u7528\u8be5\u7cfb\u7edf\u7684\u4fe1\u606f\u548c\u8d44\u6e90\u3002\u8be5\u9879\u76ee\u5728Oberon\u9879\u76ee\u4e2d\u6709\u8be6\u7ec6\u63cf\u8ff0\uff1a\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f16\u8bd1\u5668\u548c\u8ba1\u7b97\u673a\u7684\u8bbe\u8ba1\u2014\u2014\u7531\u8bbe\u8ba1\u5e08Niklaus Wirth\u548cJ\u00fcrg Gutknecht\u7f16\u5199\u3002\u8be5\u4e66\u7684\u7b2c\u4e8c\u7248\uff082013\u5e74\uff09\u548c\u6e90\u4ee3\u7801\u5728Wirth&#39\uff1bs\u7684\u7f51\u7ad9\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u63d0\u4f9b\u539f\u59cb\u6750\u6599\u7684\u94fe\u63a5\uff0c\u4ee5\u53ca\u672c\u5730ZippedCopy\uff0c\u5e76\u83b7\u5f97\u4f5c\u8005\u7684\u5584\u610f\u8bb8\u53ef\u3002", "note_en": "Project Oberon is a design for a complete desktop computersystem from scratch. \u00a0Its simplicity and clarity enables asingle person to know and implement the whole system, while stillproviding enough power to make it useful and usable in a productionenvironment. This website contains information and resources forexploring and using the system. \u00a0The project is fullydescribed in\u00a0 Project Oberon: The Design of an OperatingSystem, a Compiler, and a Computer\u00a0\u2014 written by thedesigners, Niklaus Wirth and J\u00fcrg Gutknecht. The second (2013)edition of the book and source code are published on\u00a0 Prof. Wirth&#39;s website.We provide links to the original material here, and local zippedcopies, with kind permission from the authors.", "posttime": "2022-02-25 22:12:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5965\u4f2f\u4f26,project,wirth", "title": "\u5965\u4f2f\u4f26\u8ba1\u5212", "title_en": "Project Oberon", "transed": 1, "url": "http://www.projectoberon.com", "via": "", "real_tags": ["\u5965\u4f2f\u4f26", "project", "wirth"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074992, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u572818\u4e16\u7eaa\uff0c\u4ed6\u5236\u5b9a\u4e86\u4eca\u5929\u7684\u8bae\u7a0b#39\uff1b\u67e5\u5c14\u65af\u00b7\u8fea\u5e03\u4e01\uff08Charles Dibdin\uff09\u662f\u7f8e\u56fd\u7684\u8d85\u7ea7\u5de8\u661f\uff0c\u4f46\u540e\u6765\u57fa\u672c\u4e0a\u88ab\u9057\u5fd8\u4e86\u3002\u970d\u8389\u00b7\u5a01\u5ec9\u59c6\u65af\u63a2\u7d22\u4e86\u4e00\u4e2a\u975e\u51e1\u7684\u804c\u4e1a\u751f\u6daf\u2014\u2014\u4ee5\u53ca\u540d\u58f0\u7684\u672c\u8d28\u3002\n\u60f3\u4e00\u60f3\u4e00\u4e2a\u5b9a\u4e49\u65f6\u4ee3\u3001\u5e7f\u53d7\u6b22\u8fce\u7684\u6d41\u884c\u6b4c\u661f\uff1a\u4f60\u5728\u753b\u5927\u536b\u00b7\u9c8d\u4f0a\u5417\uff1f\u738b\u5b50\u57c3\u5c14\u987f\u00b7\u7ea6\u7ff0\uff1f\u4e5f\u8bb8\u662f\u6cf0\u52d2\u00b7\u65af\u5a01\u592b\u7279\u3001Lady Gaga\u6216\u963f\u9edb\u5c14\uff1f\u8fd9\u4f4d\u72ec\u5531\u6b4c\u624b\u517c\u8bcd\u66f2\u4f5c\u8005\u662f\u6d41\u884c\u97f3\u4e50\u7684\u57fa\u77f3\uff0c\u4ed6\u7684\u4e2a\u6027\u4e0e\u4ed6\u4eec\u7684\u97f3\u4e50\u548c\u6b4c\u8bcd\u4e00\u6837\u5e7f\u4e3a\u4eba\u77e5\u3002\n\u7136\u800c\uff0c\u8fd9\u4e9b\u540d\u5b57\u4e2d\u6ca1\u6709\u4e00\u4e2a\u80fd\u8fbe\u5230\u82f1\u56fd\u7684\u7edf\u6cbb\u5730\u4f4d#39\uff1b\u82f1\u56fd\u7b2c\u4e00\u4f4d\u6d41\u884c\u97f3\u4e50\u660e\u661f\uff1a\u67e5\u5c14\u65af\u00b7\u8fea\u4e01\u3002\u5982\u679c\u540d\u5b57\u4e0d\u662f&#39\uff1b\u6211\u4e0d\u719f\u6089\uff0c\u90a3&#39\uff1b\u8fd9\u53ef\u80fd\u662f\u56e0\u4e3a\u4ed6\u6b7b\u4e8e1814\u5e74\u2014\u2014\u5c3d\u7ba1\u4f60\u53ef\u80fd\u4f1a\u8ba4\u51fa\u4ed6\u4f17\u591a\u822a\u6d77\u6b4c\u66f2\u4e2d\u7684\u4e00\u9996\uff0c\u6c64\u59c6\u00b7\u4fdd\u9f84\u7403\uff0c\u7ecf\u5e38\u51fa\u73b0\u5728\u82f1\u56fd&#39\uff1b\u5979\u53d7\u6b22\u8fce\u7684\u5e74\u5ea6\u53e4\u5178\u97f3\u4e50\u4f1a\uff0c\u821e\u4f1a\u7684\u6700\u540e\u4e00\u665a\u3002\n\u7136\u800c\uff0c\u5728\u4ed6\u81ea\u5df1\u7684\u4e00\u751f\u4e2d\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4ed6\u53bb\u4e16\u540e\u7684\u534a\u4e2a\u4e16\u7eaa\u91cc\u2014\u2014\u8fea\u5e03\u4e01\u5e76\u4e0d\u662f\u4e00\u4e2a\u8f70\u52a8\u4e00\u65f6\u7684\u5947\u8ff9\uff0c\u800c\u662f\u4e00\u4e2a\u591a\u4ea7\u3001\u6781\u4e3a\u8457\u540d\u7684\u4eba\u7269\u3002\u4ed6\u5728\u6b4c\u5267\u4e2d\u8868\u6f14\uff0c\u7136\u540e\u521b\u4f5c\u4e86\u81ea\u5df1\u7684\u6b4c\u5267\uff0c\u521b\u4f5c\u4e861000\u591a\u9996\u6b4c\u66f2\uff0c\u5728\u5168\u56fd\u5404\u5730\u5de1\u56de\u6f14\u51fa\u4e86\u5355\u4eba\u5267\uff0c\u5e76\u5f00\u529e\u4e86\u81ea\u5df1\u7684\u4f26\u6566\u5267\u9662\u3002\u4ed6\u5199\u4e86\u51e0\u90e8\u5c0f\u8bf4\u548c\u4e00\u90e8\u4e94\u5377\u7684\u620f\u5267\u53f2\u3002\u4ed6\u81ea\u5df1\u7684\u81ea\u4f20\u4e5f\u957f\u8fbe\u56db\u5377\u2014\u2014\u8fd9\u662f\u8be5\u65f6\u671f\u6700\u5927\u7684\u56de\u5fc6\u5f55\uff0c\u5f88\u597d\u5730\u4f53\u73b0\u4e86\u8fea\u4e01&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u81ea\u6211\u63a8\u9500\u5de5\u5177\u3002\n&#34;\u4ed6\u662f\u82f1\u56fd\u6709\u53f2\u4ee5\u6765\u6700\u5177\u7edf\u6cbb\u529b\u7684\u6b4c\u624b\u517c\u8bcd\u66f2\u4f5c\u8005\uff1b\u4eac\u90fd\u591a\u897f\u6c99\u5927\u5b66\u7684\u82f1\u56fd\u6587\u5b66\u6559\u6388\u6234\u7ef4\u00b7\u94b1\u5fb7\u52d2\u575a\u6301\u8ba4\u4e3a\uff0c\u4ed6\u8d1f\u8d23\u6700\u8fd1\u5f55\u5236\u4e86\u51e0\u9996\u8fea\u4e01&#39\uff1bs\u64ad\u653eCD\u548c\u6570\u5b57\u6d41\u5a92\u4f53&#34;\u8c01\u662f\u4f1f\u5927\u7684\u82f1\u56fd\u6b4c\u624b\u548c\u8bcd\u66f2\u4f5c\u8005\uff1f\u5927\u591a\u6570\u4eba\u4f1a\u9009\u62e9\u6d3b\u7740\u7684\u4eba\u6216\u6700\u8fd1\u53bb\u4e16\u7684\u4eba\u2014\u2014\u4f46\u5927\u591a\u6570\u4eba\uff08\u5728\u5404\u81ea\u7684\u65f6\u4ee3\uff09\u4f1a\u6709\u4e00\u4e9b\u7ade\u4e89\u3002\u6709\u4e86\u8fea\u4e01\uff0c\u4f60\u5c31\u6709\u4e86\u4e00\u4e2a\u6ca1\u6709\u660e\u663e\u5bf9\u624b\u7684\u4eba\u3002\u6ca1\u6709\u4eba\u80fd\u5c06\u4ed6\u7684\u8868\u6f14\u6280\u5de7\u3001\u97f3\u4e50\u5929\u8d4b\u3001\u4f5c\u8bcd\u6280\u5de7\u548c\u81ea\u6211\u5ba3\u4f20\u80fd\u529b\u878d\u4e3a\u4e00\u4f53\u3002\u90a3&#39\uff1b\u8fd9\u5c31\u662f\u4ed6\u771f\u6b63\u4e0e\u4f17\u4e0d\u540c\u7684\u5730\u65b9&#34;\n\u94b1\u5fb7\u52d2\u6700\u521d\u5bf9\u8fea\u5e03\u4e01\u7740\u8ff7\u662f\u56e0\u4e3a\uff0c\u4f5c\u4e3a\u4e00\u540d\u7814\u7a76\u6d6a\u6f2b\u4e3b\u4e49\u65f6\u4ee3\u7684\u5b66\u8005\uff0c\u4ed6\u7ecf\u5e38\u88ab\u8fea\u5e03\u4e01\u7eca\u5012&#39\uff1b\u5979\u5728\u62a5\u7eb8\u4e0a\u7684\u540d\u5b57\u3002\u8fea\u5e03\u4e01\u663e\u7136\u6709\u4e00\u79cd\u76f8\u5f53\u66b4\u8e81\u7684\u5929\u6027\uff0c\u7ecf\u5e38\u9677\u5165\u8d22\u52a1\u56f0\u5883\uff0c\u4e0e\u6279\u8bc4\u8005\u53d1\u751f\u6597\u4e89\uff0c\u5e76\u4e0e\u4f26\u6566\u620f\u5267\u754c\u7684\u5176\u4ed6\u4eba\u7269\u53d1\u751f\u620f\u5267\u6027\u7684\u4e89\u5435\u2014\u2014\u5305\u62ec\u5229\u7528\u8fea\u5e03\u4e01\u7684\u6234\u7ef4\u00b7\u52a0\u91cc\u514b&#39\uff1b17\u4e16\u7eaa60\u5e74\u4ee3\u548c17\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u8fea\u5e03\u4e01\u5e74\u8f7b\u65f6\uff0c\u4ed6\u5728\u5fb7\u9c81\u91cc\u5df7\u5267\u9662\u53d1\u6325\u4e86\u97f3\u4e50\u5929\u8d4b\u3002\n\u8fea\u4e01\u548c#39\uff1b\u4ed6\u7684\u540d\u58f0\u662f\u5f88\u96be\u5408\u4f5c\uff0c\u6700\u7ec8\u5bfc\u81f4\u4ed6\u4ece1787\u5e74\u5f00\u59cb\u4e3e\u529e\u5355\u4eba\u8868\u6f14\u3002\u4ed6\u628a\u8fd9\u4e9b\u521b\u65b0\u7684\u5de1\u56de\u6f14\u51fa\u79f0\u4e3a\u4ed6\u7684&#34\uff1b\u9910\u684c\u5a31\u4e50&#34\uff1b\uff0c\u8fd9\u662f\u5176\u4e2d\u7684\u4e00\u4e2a\u9009\u62e9\u2014\u2014\u9664\u4e86\u4e3a\u52a0\u91cc\u514b&#39\u5199\u7684\u4f5c\u54c1\u300a\u79a7\u5e74\u300b\uff1b1769\u5e74\u7684\u838e\u58eb\u6bd4\u4e9a\u97f3\u4e50\u8282\uff08bonanza Shakespeare festival\uff09\u2014\u2014\u6700\u8fd1\u7531Retrospect Opera\u8868\u6f14\u5e76\u5f55\u5236\uff0c\u7537\u4e2d\u97f3\u897f\u8499\u00b7\u5df4\u7279\u91cc\u65af\uff08Simon Butteriss\uff09\u5c06\u8fea\u4e01\u5e26\u56de\u4e86\u751f\u6d3b\u3002\n&#34;\u5f53\u7136\uff0c\u8fea\u5e03\u4e01\u548c\u8bb8\u591a\u5927\u4eba\u7269\u4e00\u6837\uff0c\u4e5f\u662f\u654c\u4eba\u3002\u90a3&#39\uff1b\u8fd9\u5c31\u662f\u4ed6\u6700\u7ec8\u4e0d\u5f97\u4e0d\u72ec\u81ea\u5de5\u4f5c\u7684\u539f\u56e0\uff1b\u5df4\u7279\u91cc\u65af\u7b11\u4e86&#34;\u8fd9\u662f\u4e00\u573a\u6597\u4e89\u2014\u2014\u4ed6\u5728\u5fb7\u9c81\u91cc\u5df7\uff08Drury Lane\uff09\u53d7\u5230\u4e86\u6b3e\u5f85\uff0c\u6240\u4ee5\u4e00\u5207\u90fd\u5f97\u81ea\u5df1\u505a&#34;\n\u7136\u800c\uff0c\u9910\u684c\u4e0a\u7684\u5a31\u4e50\u6d3b\u52a8\u5f88\u53d7\u6b22\u8fce\u3002\u8fea\u5e03\u4e01\u662f\u4e00\u4e2a\u8ff7\u4eba\u7684\u9976\u820c\u8005\uff0c\u4ed6\u4f1a\u626e\u6f14\u591a\u4e2a\u89d2\u8272\uff0c\u5c06\u559c\u5267\u6545\u4e8b\u4e0e\u94a2\u7434\u4e0a\u7684\u6b4c\u66f2\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u4f8b\u5982\uff0c\u5728\u4ed6\u6700\u6210\u529f\u7684\u4f5c\u54c1\u300aWags\u300b\u4e2d\uff0c\u8fea\u4e01\u865a\u6784\u4e86\u4f26\u6566\u90ca\u5916\u7684\u4e00\u5ea7\u522b\u5885\u2014\u2014a&#34\uff1b\u6b22\u4e50\u8425&#34\uff1b\u5728\u8fd9\u91cc\uff0c\u82f1\u56fd\u602a\u4eba\u5403\u559d\u3001\u8bb2\u7b11\u8bdd\u3001\u8bb2\u6545\u4e8b\u3001\u5531\u6b4c\u3002\u7b2c\u4e00\u6b21\u8868\u6f14\u662f\u57281790\u5e74\uff0cWags\u662f\u4ed6\u7684\u7b2c\u56db\u4e2a\u684c\u4e0a\u5a31\u4e50\u8282\u76ee\uff0c\u5e76\u89c2\u770b\u4e86Dibdin&#34\uff1b\u80fd\u591f\u6539\u8fdb\u4ed6\u7684\u4ea7\u54c1\uff0c\u4f7f\u5176\u5177\u6709\u8fd1\u4e4e\u5b8c\u7f8e\u7684\u5438\u5f15\u529b\uff0c&#34\uff1b\u94b1\u5fb7\u52d2\u8bf4\u3002Dibdin\u4ec5\u5728\u5176\u7b2c\u4e00\u4e2a\u4f26\u6566\u5b63\u5c31\u8868\u6f14\u4e86108\u6b21\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u768420\u5e74\u91cc\u5927\u91cf\u63a8\u51fa\u4e86\u65b0\u7684\u684c\u4e0a\u5a31\u4e50\u8282\u76ee\u3002\n&#34;\u5728\u5199\u4f5c\u4e2d\uff0c\u4ed6\u662f\u5982\u6b64\u7684\u6d3b\u8dc3\uff0c&#34\uff1b\u5f53\u88ab\u95ee\u53ca\u8fea\u5e03\u4e01\u7684\u5438\u5f15\u529b\u65f6\uff0c\u5df4\u7279\u91cc\u65af\u8bf4\uff1b\u8fd9\u662f\u5de5\u4f5c&#34;\u6211\u5728\u300a\u5409\u5c14\u4f2f\u7279\u548c\u6c99\u5229\u6587\u300b\u4e2d\u626e\u6f14\u8bf4\u5531\u90e8\u5206\uff0c\u5728\u6b4c\u5267\u4e2d\u626e\u6f14\u89d2\u8272\uff0c\u56e0\u4e3a\u6211\u89c9\u5f97\u4ed6\u66f4\u50cf\u4e00\u4e2a\u6f14\u5458\u800c\u4e0d\u662f\u4e00\u4e2a\u6b4c\u624b\uff0c\u4ed6\u7684\u4f5c\u54c1\u4e2d\u6709\u5982\u6b64\u591a\u7684\u620f\u5267\u6027\u548c\u559c\u5267\u6027\u5185\u5bb9\uff0c\u8fd9\u771f\u7684\u5438\u5f15\u4e86\u6211\u3002\u4ed6\u89c9\u5f97\u81ea\u5df1\u662f\u4e2a\u5fd7\u540c\u9053\u5408\u7684\u4eba&#34;\nButteriss\u627f\u8ba4Dibdin\u548c#39\uff1bs\u6b4c\u66f2&#39\uff1b\u4ed6\u8ba4\u4e3a\uff0cDibdin\u56f4\u7ed5\u7740\u8fd9\u4e9b\u4f5c\u54c1\u6240\u5199\u7684\u53d9\u4e8b\uff0c\u662f\u5b83\u4eec\u5f15\u4eba\u6ce8\u76ee\u7684\u539f\u56e0&#34;\u4ed6\u7b14\u4e0b\u7684\u4eba\u7269\u5199\u5f97\u5f88\u7cbe\u5f69\uff0c\u800c\u4e14&#39\uff1b\u8fd9\u4e00\u5207\u90fd\u662f\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5\u4ed6\u53ef\u4ee5\u626e\u6f14\u6240\u6709\u89d2\u8272\u2014\u2014\u8fd9\u6210\u4e86\u4e00\u4ef6\u975e\u5e38\u68d2\u7684\u4e8b\u60c5\u3002\u90a3\u91cc&#39\uff1b\u6709\u4e00\u9996\u6b4c\u53eb\u300a\u9a6c\u76d6\u7279\u00b7\u970d\u4f0a\u300b\uff0c\u4ed6\u5728\u6b4c\u4e2d\u540c\u65f6\u626e\u6f1410\u4e2a\u89d2\u8272\uff0c\u5f7c\u6b64\u4ea4\u8c08\u3002\u5b83&#39\uff1b\u8fd9\u771f\u7684\u5f88\u6709\u8da3\u2014\u2014\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u90e8\u4e03\u5206\u949f\u7684\u5c0f\u6b4c\u5267\uff0c\u771f\u7684&#34;\n\u5728\u4f26\u6566\u5b63\u4e4b\u5916\uff0c\u8fea\u4e01\u5728\u5168\u56fd\u5404\u5730\u5de1\u56de\u6f14\u51fa\uff0c\u8fd9\u662f\u53e6\u4e00\u9879\u521b\u65b0&#34;\u636e\u6211\u6240\u77e5\uff0c\u4ee5\u524d\u6ca1\u6709\u4eba\u8fd9\u6837\u505a\u8fc7\uff1a\uff08\u4ee5\u7537\u5f0f\u548c\u94a2\u7434\u7684\u8eab\u4efd\u5de1\u6f14\uff09\uff0c\u5728\u5404\u79cd\u5404\u6837\u7684\u573a\u5730\u6f14\u594f\uff0c&#34\uff1b\u94b1\u5fb7\u52d2\u8bf4&#34;\u516c\u5171\u5927\u5385\u3001\u79c1\u4eba\u573a\u6240\u3001\u4ff1\u4e50\u90e8\u2026\u2026\u4ed6\u751a\u81f3\u4e3a\u6444\u653f\u738b\u505a\u4e86\u4e00\u573a\u79c1\u4eba\u6f14\u51fa&#34;\n\u4f46Dibdin\u7684\u5173\u952e\u662f&#39\uff1b\u4ed6\u7684\u6210\u529f\u5728\u4e8e\u4ed6\u7684\u89d2\u8272\u3001\u6545\u4e8b\u548c\u6b4c\u66f2\u5177\u6709\u5e7f\u6cdb\u7684\u5438\u5f15\u529b\u2014\u2014\u5b83\u4eec\u4e0d\u662f&#39\uff1b\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e3a\u4e86\u4e0a\u5c42\u9636\u7ea7&#34;\u8fea\u5e03\u4e01\u559c\u6b22\u4ed6\u4e0e\u6743\u52bf\u4eba\u7269\u7684\u5173\u7cfb\uff1b\u4ed6\u4e3a\u738b\u5b50\u5949\u732e\u4e86\u4e00\u672c\u4e66&#34\uff1b\u94b1\u5fb7\u52d2\u8bf4\uff0c\u4f46\u4ed6\u8865\u5145\u8bf4\uff0c\u8fea\u4e01\u76f8\u4fe1\u4ed6\u53ef\u4ee5\u62db\u5f85\u4efb\u4f55\u4eba\uff1a&#34\uff1b\u4ed6\u6709\u4e00\u4e2a\u975e\u5e38\u5e7f\u6cdb\u7684\u89c2\u4f17\u7fa4\u4f53\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4ed6\u505a\u8282\u76ee\u7684\u5730\u65b9\u2014\u2014\u5927\u5b66\u57ce\uff0c\u4f60&#39\uff1bd\u6709\u77e5\u8bc6\u5206\u5b50\u3001\u5b66\u751f\u89c2\u4f17\uff0c\u4f46\u4e5f\u6709\u5317\u65b9\u5de5\u4e1a\u4e2d\u5fc3\u3002\u4ed6\u8bf4\u519c\u6c11\u4f1a\u6765\u53c2\u52a0\u4ed6\u7684\u8868\u6f14&#34; \u663e\u7136\uff0c\u4ed6\u603b\u662f\u559c\u6b22\u5728\u5229\u7269\u6d66\u8e22\u7403\uff0c\u4ed6\u7684\u5e7d\u9ed8\u611f\u5728\u90a3\u91cc\u8868\u73b0\u5f97\u7279\u522b\u597d\u3002\u548c\u8fea\u4e01&#39\uff1b\u8be5\u54c1\u724c\u7684\u559c\u5267\u65f6\u673a\u3001\u821e\u53f0\u8868\u6f14\u548c\u673a\u667a\u7684\u5373\u5174\u8868\u6f14\u90fd\u662f\u8be5\u54c1\u724c\u7684\u4e00\u90e8\u5206&#34;\u4ed6\u4e0a\u53f0\u65f6\u7684\u6837\u5b50\u5f88\u6109\u5feb&#34\uff1b\u4e0e\u4ed6\u540c\u65f6\u4ee3\u7684\u5267\u4f5c\u5bb6\u7ea6\u7ff0\u00b7O&#39\uff1b\u57fa\u592b&#34;\u4ed6\u5feb\u6d3b\u5730\u8dd1\u7740\uff0c\u8138\u4e0a\u51e0\u4e4e\u5e26\u7740\u7b11\uff0c\u5c31\u50cf\u4e00\u4e2a\u670b\u53cb\u6025\u5fd9\u8fdb\u6765\u544a\u8bc9\u4f60\u4e00\u4e2a\u597d\u6d88\u606f&#34;\n\u4f60\u751a\u81f3\u53ef\u4ee5\u770b\u5230\u8fea\u4e01&#39\uff1bs\u662f\u4e00\u79cd\u975e\u5e38\u65e9\u671f\u7684\u7ad9\u7acb\u5f62\u5f0f\uff1b\u6709\u4ed6\u548c\u9189\u9152\u7684\u8d28\u95ee\u8005\u4e89\u5435\u7684\u6545\u4e8b&#34;\u6211\u8ba4\u4e3a\u4ed6\u4e5f\u662f\u5355\u53e3\u76f8\u58f0\u5386\u53f2\u7684\u4e00\u90e8\u5206\uff1b\u94b1\u5fb7\u52d2\u8bf4\u30021795\u5e74\uff0c\u8fea\u5e03\u4e01\u5728\u4f26\u6566\u5f00\u529e\u4e86\u81ea\u5df1\u7684\u5c0f\u5267\u9662\u201c\u65e0\u82cf\u5947\u201d\uff0c\u4e3b\u6301\u4e86\u4ed6\u7684\u4e2a\u4eba\u8868\u6f14\uff0c\u8fd9\u4e5f\u662f\u5f53\u65f6\u8868\u6f14\u8005\u95fb\u6240\u672a\u95fb\u7684\u4e8b\u60c5&#34;\u8fd9\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u5267\u9662\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u4eba\u4eec\u60f3\u88ab\u770b\u5230\u7684\u5730\u65b9\uff1b\u5df4\u7279\u5229\u65af\u5efa\u8bae\u3002\n\u53e6\u4e00\u4e2a\u662f\u8fea\u4e01&#39\uff1b\u4ed6\u6700\u7cbe\u660e\u7684\u4e3e\u52a8\u662f\u5f00\u521b\u5546\u54c1\u5e02\u573a\uff1a\u4ed6\u4f1a\u5728\u6f14\u51fa\u4e2d\u51fa\u552e\u81ea\u5df1\u7684\u4e50\u8c31\u548c\u4e66\u7c4d\u3002\u4ed6\u7684\u81ea\u6211\u51fa\u7248\u65b9\u5f0f\u610f\u5473\u7740\u5b83&#39\uff1bIt\u2019\u5f88\u96be\u8bf4\u4ed6\u7684\u4e09\u90e8\u5c0f\u8bf4\u5230\u5e95\u6709\u591a\u53d7\u6b22\u8fce\uff0c\u5c3d\u7ba1\u6211\u4eec\u77e5\u9053\u5b83\u4eec\u51fa\u73b0\u5728\u4e0d\u6b62\u4e00\u4e2a\u7248\u672c\u4e2d\u3002\n\u66f4\u91cd\u8981\u7684\u662f\u6b4c\u66f2\u8868\uff0c\u5176\u4e2d\u5305\u62ec\u6b4c\u8bcd\u548c\u952e\u76d8\u4e50\u8c31\uff0c\u4ee5\u53ca\u4e00\u79cd\u5e7f\u6cdb\u6f14\u594f\u7684\u957f\u7b1b&#34;\u8fea\u5e03\u4e01\u548c#39\uff1b\u4ed6\u7684\u5929\u624d\u4e4b\u4e3e\u662f\u5f00\u59cb\u51fa\u7248\u4ed6\u81ea\u5df1\u7684\u97f3\u4e50\uff0c\u8fd9\u5728\u5f53\u65f6\u6839\u672c\u4e0d\u5e38\u89c1\uff1b\u94b1\u5fb7\u52d2\u6307\u51fa&#34;\u4ed6&#39\uff1bd\u6bcf\u4e2a\u4eba\u90fd\u8981\u7b7e\u540d\u2014\u2014\u4ed6\u5fc5\u987b&#39\uff1b\u6211\u53c2\u52a0\u4e86\u5927\u91cf\u7684\u7b7e\u7ea6\u4f1a\u8bae&#34;\n\u8fd9\u662f\u53e6\u4e00\u4e2a\u806a\u660e\u7684\u521b\u65b0\u2014\u2014\u4e0d\u4ec5\u8ba9\u89c2\u4f17\u6709\u673a\u4f1a\u62ff\u8d70\u4e00\u4e2a\u665a\u4e0a\u5916\u51fa\u65f6\u7b7e\u4e86\u540d\u7684\u7eaa\u5ff5\u54c1\uff0c\u8fd8\u8ba9\u89c2\u4f17\u53ef\u4ee5\u66f4\u5e7f\u6cdb\u5730\u542c\u5230\u4ed6\u7684\u66f2\u5b50\uff0c\u5728\u5bb6\u91cc\u6216\u9152\u9986\u91cc\u6f14\u5531\u3002\u4f5c\u4e3a\u4ed6\u7684\u6b4c\u66f2\u6570\u91cf\u548c\u5e7f\u6cdb\u6536\u96c6\u7684\u6307\u6807\uff0c\u5728\u535a\u5fb7\u83b1\u6069\u56fe\u4e66\u9986&#39\uff1b\u8fea\u5e03\u4e01\u6536\u96c6\u4e8618\u4e16\u7eaa\u540e\u671f\u6d41\u4f20\u4e0b\u6765\u7684\u65c1\u767d\u6c11\u8c23\uff0c\u5176\u4e2d324\u9996\u662f\u8fea\u5e03\u4e01\u521b\u4f5c\u7684\uff0c\u800c\u4ed6\u6700\u4eb2\u5bc6\u7684\u5bf9\u624b\u53ea\u670911\u9996\u3002\n\u8fd9\u5e76\u6ca1\u6709&#39\uff1bDon\u2019\u4e0d\u8981\u8003\u8651Dibdin\u7684\u7c89\u4e1d\u4eec\u81ea\u5df1\u53ef\u80fd\u4f1a\u5982\u4f55\u590d\u5236\u522b\u4eba#39\uff1bs\u5f97\u5206\u3002\u5f88\u5c11\u6709\u8fd9\u6837\u7684\u624b\u5199\u5206\u6570\u5e78\u5b58\u4e0b\u6765\uff0c\u4f46\u8fd9\u79cd\u505a\u6cd5\u5f88\u53ef\u80fd\u5f88\u666e\u904d\u2014\u2014\u6211\u4eec\u77e5\u9053\u8fd9\u53d1\u751f\u5728\u8fea\u4e01&#39\uff1b\u8fd9\u8981\u5f52\u529f\u4e8e\u4e00\u4f4d\u975e\u5e38\u5f15\u4eba\u6ce8\u76ee\u7684\u7c89\u4e1d\uff1a\u7b80\u00b7\u5965\u65af\u6c40\u3002\u5979\u7684\u5c0f\u578b\u97f3\u4e50\u6536\u85cf\u5305\u62ec\u8fea\u5e03\u4e01\u7684\u51e0\u90e8\u4f5c\u54c1\uff0c\u8fd9\u4e9b\u4f5c\u54c1\u662f\u5979\u4eb2\u624b\u590d\u5236\u7684\u3002\n\u5979&#39\uff1b\u4ed6\u4e0d\u662f\u552f\u4e00\u7684\u8fea\u4e01\u52a9\u624b\uff1a\u4ed6&#39\uff1b\u4eba\u4eec\u8fd8\u8ba4\u4e3a\u8fd9\u4e5f\u662f\u5409\u5c14\u4f2f\u7279\u548c\u6c99\u5229\u6587\u7684\u4e3b\u8981\u7075\u611f\u6765\u6e90&#34;\u8fea\u5e03\u4e01\u53d1\u660e\u4e86\u82f1\u56fd\u559c\u5267\u6b4c\u5267\uff0c\u540e\u6765\u4ed6\u4eec\u53c8\u53d1\u5c55\u4e86\u8fd9\u90e8\u6b4c\u5267\uff1b\u5df4\u7279\u91cc\u65af\u8bf4\u3002\n\u8fea\u4e01\u548c#39\uff1b\u5409\u5c14\u4f2f\u7279\u7684\u6b4c\u5267\u4e0d\u4ec5\u5728\u4ed6\u6709\u751f\u4e4b\u5e74\u5e7f\u53d7\u6b22\u8fce\uff0c\u800c\u4e14\u5728\u6574\u4e2a19\u4e16\u7eaa\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\u90fd\u975e\u5e38\u53d7\u6b22\u8fce\uff0c\u6211\u4eec\u77e5\u9053\u5409\u5c14\u4f2f\u7279\u7684\u6b4c\u5267\u300a\u8fea\u4e01\u4e0e39\u300b\uff1b\u4ed6\u5e74\u8f7b\u65f6\u5c31\u5f00\u59cb\u5de5\u4f5c\u4e86\u3002\u5df4\u7279\u91cc\u65af\u8ba4\u4e3a\u4ed6\u7684\u5f71\u54cd\u662f\u663e\u800c\u6613\u89c1\u7684&#34;[Gilbert]\u63d0\u5347\u4e86\u4ed6\u5728Dibdin\u7684HMS Pinafore\u4e2d\u52a0\u5165\u7684\u559c\u5267\u6d77\u519b\u8bed\u8a00\u3002\u6211\u60f3\u89c2\u4f17\u4f1a\u8ba4\u51fa\u8fd9\u662f\u4e00\u79cd\u656c\u610f\uff0c\u800c\u4e0d\u662f\u5077\u7a83&#34;\n\u8fea\u5e03\u4e01\u548c#39\uff1b\u94b1\u5fb7\u52d2\u8bf4\uff0c\u82f1\u56fd\u6700\u6210\u529f\u7684\u6b4c\u5267\u300a\u6c83\u7279\u66fc\u300b\uff081774\u5e74\uff09\u548c\u300a\u8d35\u683c\u4f1a\u300b\uff081775\u5e74\uff09\u5728\u82f1\u8bed\u4e16\u754c\u5404\u5730\u6f14\u51fa\uff0c\u4e4b\u540e\u5728\u82f1\u56fd\u7ee7\u7eed\u6f14\u51fa\u957f\u8fbe\u6570\u767e\u5e74&#34;\u8fd9\u662f\u96be\u4ee5\u7f6e\u4fe1\u7684\uff1a\u8fd9\u4e00\u65f6\u671f\u6ca1\u6709\u5176\u4ed6\u6b4c\u5267\u7684\u6765\u4e16\u5982\u6b64\u4e4b\u957f&#34;\n\u5df4\u7279\u91cc\u65af\u548c\u94b1\u5fb7\u52d2\u90fd\u5e0c\u671b\u770b\u5230\u4ed6\u7684\u5927\u578b\u6b4c\u5267\u91cd\u6f14\u2014\u2014\u4f46\u6211\u4eec\u4e0d\u518d\u62e5\u6709\u6700\u521d\u7684\u7ba1\u5f26\u4e50\u90e8\u5206\u3002\u90a3\u4e9b\u786e\u5b9e\u5b58\u5728\u7684\u4f5c\u54c1\uff0c\u6bd4\u5982\u300a\u6c83\u7279\u66fc\u300b\uff0c\u6765\u81ea19\u4e16\u7eaa\u4e2d\u671f\u7684\u4f5c\u54c1\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u5b83\u4eec\u4e0e\u539f\u4f5c\u6709\u591a\u63a5\u8fd1\u2014\u2014\u5c3d\u7ba1\u5b83\u4eec&#39\uff1b\u4ed6\u4eec\u53ef\u80fd\u5bf9\u81ea\u5df1\u611f\u5174\u8da3\u300219\u4e16\u7eaa40\u5e74\u4ee3\u2014\u2014\u8fea\u4e01\u4e4b\u540e\u7684\u51e0\u5341\u5e74&39\uff1b\u4ed6\u7684\u6b7b\u2014\u2014\u88ab\u8bc1\u660e\u662f\u4ed6\u9057\u4ea7\u7684\u5dc5\u5cf0\u65f6\u523b\u3002\u9664\u4e86\u4ed6\u7684\u6b4c\u5267\u4ecd\u5728\u4e0a\u6f14\u5916\uff0c\u4eba\u4eec\u5bf9\u4ed6\u7684\u6b4c\u66f2\u4e5f\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3\uff0c\u51fa\u7248\u4e86\u8bb8\u591a\u65b0\u7248\u672c\uff0c\u5305\u62ec\u67e5\u5c14\u65af\u00b7\u72c4\u66f4\u65af\uff08Charles Dickins\uff09\u7684\u4e00\u90e8\u96c4\u5fc3\u52c3\u52c3\u7684\u4f5c\u54c1\u96c6&#39\uff1b\u4ed6\u7684\u5cb3\u7236\u4e54\u6cbb\u00b7\u970d\u683c\u65af\u3002\n\u7136\u540e\u2026\u9010\u6e10\u6de1\u51fa\u76f8\u5bf9\u7684\u9ed8\u9ed8\u65e0\u95fb\u30021911\u5e74\uff0c\u6c83\u7279\u66fc\u7684\u4e00\u4e2a\u7248\u672c\u5728\u8003\u6587\u7279\u82b1\u56ed\u4e0a\u6f14\u3002\u53e6\u4e00\u90e8\u6b4c\u5267\u300a\u83b1\u6602\u5185\u5c14\u4e0e\u514b\u62c9\u4e3d\u838e\u300b\u4e8e1925\u5e74\u5728\u4f26\u6566\u6292\u60c5\u5267\u9662\u91cd\u6f14\u3002\u76f4\u5230\u4eca\u5929\uff0c\u4eba\u4eec\u8fd8\u5728\u7ee7\u7eed\u8bb0\u5f55\u6c64\u59c6\u00b7\u4fdd\u9f84\u7403\u2026\u2026\u4e0d\u8fc7\uff0c\u5b83&#39\uff1b\u8fd9\u4e0e\u82f1\u56fd\u76f8\u6bd4\u6025\u5267\u4e0b\u964d&#39\uff1b\u5979\u662f\u4e16\u754c\u4e0a\u6700\u591a\u4ea7\u3001\u6700\u53d7\u6b22\u8fce\u7684\u6b4c\u624b\u517c\u8bcd\u66f2\u4f5c\u8005\uff0c\u53ea\u56e0\u4e00\u9996\u66f2\u5b50\u800c\u88ab\u4eba\u94ed\u8bb0\u3002\n\u8fea\u4e01\u4e5f\u53ef\u4ee5&#39\uff1bs\u6765\u4e16\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u5bf9\u6211\u4eec\u8fd9\u4e2a\u65f6\u4ee3\u7684\u6d41\u884c\u6b4c\u661f\u7684\u58f0\u8a89\u6709\u4ec0\u4e48\u671f\u5f85\u2014\u2014\u6211\u4eec\u5bf9\u5927\u536b\u00b7\u9c8d\u4f0a\uff08David Bowie\uff09\u6216\u963f\u9edb\u5c14\uff08Adele\uff09\u7684\u6765\u4e16\u6709\u4ec0\u4e48\u671f\u5f85\uff1f\u4e5f\u8bb8\u5427\u3002\n&#34;\u5728\u4ed6\u6b7b\u540e\u6574\u6574\u4e00\u4ee3\u4eba\u7684\u65f6\u95f4\u91cc\uff0c\u8fea\u5e03\u4e01\u771f\u7684\u5f88\u6d41\u884c\uff0c\u4ed6\u7684\u5f88\u591a\u6b4c\u66f2\u90fd\u5f88\u51fa\u540d\uff0c&#34\uff1b\u94b1\u5fb7\u52d2\u6307\u51fa\u2014\u2014\u6b63\u5982\u6211\u4eec\u73b0\u5728\u770b\u5230\u768420\u4e16\u7eaa\u6700\u6d41\u884c\u7684\u97f3\u4e50&#34;\u5728\u5927\u7ea660\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u5f88\u591a\u82f1\u56fd\u4eba\u90fd\u4f1a\u77e5\u9053\u4e00\u4e9b\u8fea\u4e01\u6b4c\u66f2\u3002\u4f46\u5f53\u4ed6\u53bb\u4e1680\u5e74\u540e\uff0c\u4ed6&#39\uff1b\u6b63\u5728\u6d88\u9000\u3002\u65b0\u4e8b\u7269\u5c42\u51fa\u4e0d\u7a77\uff0c\u4e00\u4e9b\u65e7\u4e8b\u7269\u4e0d\u5f97\u4e0d\u88ab\u53d6\u4ee3&#34;\n\u5728Spotify\u7684\u65f6\u4ee3\uff0c\u6d41\u884c\u6b4c\u661f\u662f\u5426\u4f1a\u9762\u4e34\u8fd9\u6837\u7684\u547d\u8fd0\u8fd8\u6709\u5f85\u89c2\u5bdf\u3002\u4f46\u6b63\u5982\u8fea\u5e03\u4e01\u6240\u8bc1\u660e\u7684\u90a3\u6837\uff0c\u540d\u671b\u53ef\u4ee5\u662f\u4e00\u4e2a\u53d8\u5316\u65e0\u5e38\u7684\u60c5\u5987\u2014\u2014\u800c\u4e14&#39\uff1bIt\u2019\u4e0d\u80fd\u4fdd\u8bc1\u6210\u4e3a\u67d0\u4e2a\u65f6\u4ee3\u6700\u53d7\u6b22\u8fce\u7684\u4eba\u7269\u610f\u5473\u7740\u4f60&#39\uff1b\u6211\u4eec\u5c06\u5728\u53e6\u4e00\u4e2a\u4e16\u754c\u88ab\u94ed\u8bb0\u3002\n\u67e5\u5c14\u65af\u00b7\u8fea\u5e03\u4e01&#39\uff1b\u5728CD\u548c\u6d41\u5a92\u4f53\u5e73\u53f0\u4e0a\u53ef\u4ee5\u770b\u5230Wags\u3001Jubilee\u548cChristmas Gambols\uff1b\u56de\u987e\u6b4c\u5267\u3002\u7ec4\u7ec7\u3002\u82f1\u56fd\n\u5982\u679c\u4f60\u60f3\u5bf9\u8fd9\u4e2a\u6545\u4e8b\u6216\u4f60\u5728BBC\u6587\u5316\u4e0a\u770b\u5230\u7684\u4efb\u4f55\u4e1c\u897f\u53d1\u8868\u8bc4\u8bba\uff0c\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684Facebook\u9875\u9762\u6216\u5728Twitter\u4e0a\u7ed9\u6211\u4eec\u53d1\u6d88\u606f\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u4e2a\u6545\u4e8b\uff0c\u8bf7\u6ce8\u518cbbc\u5468\u520a\u3002com\u4e0a\u6709\u4e00\u4efd\u540d\u4e3a\u201c\u57fa\u672c\u6e05\u5355\u201d\u7684\u65f6\u4e8b\u901a\u8baf\u3002\u4eceBBC\u672a\u6765\u3001\u6587\u5316\u3001\u5de5\u4f5c\u751f\u6d3b\u548c\u65c5\u884c\u7cbe\u9009\u7684\u6545\u4e8b\uff0c\u6bcf\u5468\u4e94\u53d1\u9001\u5230\u4f60\u7684\u6536\u4ef6\u7bb1\u3002", "note_en": "In the 18th Century, he set the agenda for today&#39;s superstars, yet Charles Dibdin has since been largely forgotten. Holly Williams explores a remarkable career \u2013 and the nature of fame.\n Think of an era-defining, wildly popular pop star: are you picturing David Bowie? Prince? Elton John? Maybe Taylor Swift, Lady Gaga or Adele? The solo singer-songwriter, whose persona is as well-known as their music and lyrics, is a cornerstone of popular music.\n Yet none of those names achieved anything like the domination of arguably Britain&#39;s first popular music star: Charles Dibdin. If the name isn&#39;t familiar, that&#39;s probably because he died in 1814 \u2013 although you might recognise the tune of one of his many nautical songs, Tom Bowling, often featured in the UK&#39;s popular annual classical concert, Last Night of the Proms.\n     Yet in his own lifetime \u2013 and indeed for half a century after his death \u2013 Dibdin was no one-hit wonder, but a hugely prolific, extremely famous figure. He performed in operas and then wrote his own, composed more than a thousand songs, toured one-man shows around the country, and opened his own London theatre. He penned several novels and a five-volume history of theatre. His own autobiography also stretched to four volumes \u2013 the largest memoir of the period, and a good indication of Dibdin&#39;s remarkable facility for self-promotion.\n &#34;He was the most dominant singer-songwriter that Britain has ever had,&#34; insists David Chandler, Professor of English Literature at Doshisha University in Kyoto, who has overseen the recent recording of several of Dibdin&#39;s shows for CD and digital streaming. &#34;Who is the great British singer-songwriter? Most people are going to choose someone alive or recently deceased \u2013 but most of those would have some competition [in their respective eras]. With Dibdin, you just have someone with no obvious rival. Nobody else could combine his performance skills and his musical talents, and his facility for writing lyrics,  and his ability to self-publicise, all in one. That&#39;s what makes him really unique.&#34;\n  Chandler first became fascinated by Dibdin because, as an academic researching the Romantic era, he kept tripping over Dibdin&#39;s name in newspapers. Dibdin clearly had a rather tempestuous nature, and was often getting into financial difficulties, fighting with the critics, and falling out dramatically with other figures in the London theatrical scene \u2013 including David Garrick, who exploited Dibdin&#39;s musical talents for his Drury Lane theatre in the 1760s and 1770s, when Dibdin was a young man.\n Dibdin&#39;s reputation as being tricky to work with ultimately led to his staging one-man shows from 1787. He called these innovative, touring performances his &#34;Table Entertainments&#34;, and it is a selection of these \u2013 alongside The Jubilee, a work written for Garrick&#39;s bonanza Shakespeare festival in 1769 \u2013 that have lately been performed and recorded by  Retrospect Opera, with baritone Simon Butteriss bringing Dibdin back to life.\n &#34;Dibdin made enemies, certainly, like a lot of large personalities do. And that&#39;s why he ended up having to work on his own,&#34; laughs Butteriss. &#34;It was a struggle \u2013 he very much had to do everything himself, having been feted at Drury Lane.&#34;\n The Table Entertainments, however, were a hit. A charming raconteur, Dibdin would play multiple characters, blending comic storytelling with songs played on the piano. In his most successful, titled The Wags, for instance, Dibdin conjures up a villa outside of London \u2013 a &#34;camp of pleasure&#34; where English eccentrics eat and drink, tell jokes and stories, and sing songs. First performed in 1790, The Wags was his fourth Table Entertainment, and saw Dibdin &#34;able to refine his product to the point where it had an almost perfect appeal,&#34; says Chandler. Dibdin performed it 108 times in its first London season alone \u2013 and went on to churn out new Table Entertainments for the next 20 years.\n  &#34;In the writing, he is so alive,&#34; says Butteriss, when asked about the attraction of Dibdin&#39;s work. &#34;I do the patter parts in Gilbert and Sullivan, and character roles in opera, and because I think more like an actor than a singer, it really appealed to me that there was so much dramatic and comic meat in his writing. He felt like a kindred spirit.&#34;\n  While Butteriss acknowledges that many of Dibdin&#39;s songs wouldn&#39;t stand up as individual pieces, he suggests the narrative that Dibdin writes around them is what makes them compelling. &#34;His characters are brilliantly written, and it&#39;s all carefully devised so he can play all the parts \u2013 it becomes a bravura thing. There&#39;s one song called The Margate Hoy in which he plays about 10 characters simultaneously having a conversation with one another. It&#39;s very funny indeed \u2013 it&#39;s this tiny, seven-minute opera on its own, really.&#34;\n Outside of the London season, Dibdin toured these shows up and down the country \u2013 another innovation. &#34;As far as I know, no one had done this before: [touring as] literally a man and piano, and playing in a very wide range of venues,&#34; says Chandler. &#34;Public halls, private venues, clubs\u2026 he even did a private show for the Prince Regent.&#34;\n  But key to Dibdin&#39;s success was that his characters, stories and songs had wide appeal \u2013 they weren&#39;t just for the upper classes. &#34;Dibdin liked his connections to powerful people; he dedicated a book to the prince,&#34; Chandler says, but adds that Dibdin believed he could entertain anybody: &#34;He had a very broad cross-section of audience, that varied depending on where he was doing the show \u2013 the university towns, where you&#39;d get an intellectual, student audience, but also northern industrial centres. He talks about farmers coming to his show.&#34; He always enjoyed playing Liverpool, apparently, where his humour went down particularly well. And Dibdin&#39;s comic timing, stage presence and facility for a quick-witted ad-lib were certainly all part of the brand. &#34;His manner of coming upon the stage was in a happy style,&#34;  wrote his contemporary, playwright John O&#39;Keeffe. &#34;He ran on sprightly and with a nearly laughing face, like a friend who enters hastily to impart you some good news.&#34;\n You could even see Dibdin&#39;s shows as a very early form of stand-up; there are tales of him sparring with drunk hecklers. &#34;I think he is very much part of the history of stand-up as well,&#34; says Chandler. Such was the success of his solo shows, Dibdin was able to open his own small theatre, the Sans Souci, in London in 1795 to host them \u2013 also an unheard-of thing for a performer at the time. &#34;It was a tiny theatre, but it was a place people wanted to be seen,&#34; suggests Butteriss.\n  Another of Dibdin&#39;s canniest moves was to pioneer merchandise: he would sell his own sheet music, as well as his books, at performances. His self-publishing approach means it&#39;s hard to tell exactly how popular his three novels really were, although we do know they appeared in more than one edition.\n More significant are the song sheets, which featured lyrics and scores for keyboard and a kind of widely played flute. &#34;One of Dibdin&#39;s strokes of genius was to start publishing his own music, which was not at all common [at the time],&#34; points out Chandler. &#34;He&#39;d sign each one \u2013 he must&#39;ve had these enormous signing sessions.&#34;\n It was another clever innovation \u2013 not only offering audiences a chance to take away a signed memento of a good night out, but also a way to make sure his tunes were heard more widely, sung at home or in taverns. As an indicator of how numerous and widely collected his songs were, in the Bodleian Library&#39;s collection of surviving Broadside ballads from the later 18th Century, a whopping 324 are by Dibdin \u2013 while his closest rival clocks in with only 11.\n  And this doesn&#39;t take into account how Dibdin fans might themselves make copies of someone else&#39;s score. Few such hand-written scores survive, but the practice was likely common \u2013 and we know it took place with Dibdin&#39;s work thanks to one very high-profile fan: Jane Austen. Her small music collection features several works by Dibdin, copied out in her own hand.\n She&#39;s not the only Dibdin acolyte: he&#39;s also thought to have been a major inspiration for Gilbert and Sullivan. &#34;Dibdin invented the English comic opera that they then developed,&#34; says Butteriss.\n Dibdin&#39;s operas were enormously popular not only in his lifetime, but throughout much of the 19th Century, and we know WS Gilbert saw Dibdin&#39;s work as a young man. Butteriss thinks his influence is explicit. &#34;[Gilbert] lifts the comedy naval language he puts in HMS Pinafore from Dibdin. And I think the audience would have recognised it \u2013 a homage, rather than a stealing.&#34;\n Two of Dibdin&#39;s most successful operas, The Waterman (1774) and The Quaker (1775), were performed all over the anglophone world \u2013 and in Britain continued to be performed for up to hundred years afterwards, says Chandler. &#34;Which is incredible: no other opera of this period had such a long afterlife as those.&#34;\n  Both Butteriss and Chandler would love to see his full-scale operas remounted \u2013 but we no longer have the original orchestral parts. Those that do exist, for The Waterman for example, hail from those productions from the mid-19th Century. How close these are to the originals is unclear \u2013 although they&#39;re potentially interesting in their own right. The 1840s \u2013 several decades after Dibdin&#39;s death \u2013 proved to be the peak moment for his legacy. As well as his operas still being staged, there was also a flush of interest in his songs, with numerous new editions published, including one ambitious collection by Charles Dickins&#39;s father-in-law, George Hogarth.\n And then\u2026 a gradual fade into relative obscurity. A version of The Waterman was performed in Covent Garden in 1911. Another opera, Lionel and Clarissa, was revived at the Lyric Theatre in London in 1925. And people continue to record Tom Bowling to this day\u2026 Still, it&#39;s a sharp decline from Britain&#39;s most prolific and popular singer-songwriter to being remembered for one tune only.\n So can Dibdin&#39;s afterlife tell us anything about what we might expect for the reputations of the pop stars of our own time \u2013 what afterlife we might anticipate for David Bowie, or Adele? Well, perhaps.\n &#34;For a whole generation after his death, Dibdin was really current, a lot of his songs were known,&#34; points out Chandler \u2013 as we now see with the most popular music of the 20th Century. &#34;There was about 60 years where a lot of English people would have known a number of Dibdin songs. But by the time you get to 80 years after his death, he&#39;s fading. So much new stuff comes along, some of the old just has to get displaced.&#34;\n Whether such a fate awaits pop stars in an era of Spotify remains to be seen. But as Dibdin proves, fame can be a fickle mistress \u2013 and there&#39;s no guarantee that being the most popular figure in one era means you&#39;ll be remembered in another.\n Charles Dibdin&#39;s The Wags, The Jubilee, and Christmas Gambols are available on CD and streaming platforms;   retrospectopera.org.uk\n If you would like to comment on this story or anything else you have seen on BBC Culture, head over to our\u00a0   Facebook \u00a0page or message us on\u00a0   Twitter .\n And if you liked this story,\u00a0   sign up for the weekly bbc.com features newsletter , called The Essential List. A handpicked selection of stories from BBC Future, Culture, Worklife and Travel, delivered to your inbox every Friday.", "posttime": "2022-02-25 22:06:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6b4c\u661f,star,\u8fea\u4e01", "title": "\u8fd9\u4f4d\u6709\u53f2\u4ee5\u6765\u7b2c\u4e00\u4f4d\u6d41\u884c\u6b4c\u661f\u662f\u5982\u4f55\u5f00\u62d3\u521b\u65b0\u7684", "title_en": "How the first ever pop star blazed a trail of innovation", "transed": 1, "url": "https://www.bbc.com/culture/article/20220223-how-the-first-ever-pop-star-blazed-a-trail-of-innovation", "via": "", "real_tags": ["\u6b4c\u661f", "star", "\u8fea\u4e01"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074991, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b21\u8981\u76ee\u6807\u662f\u752875%\u7684\u7a0b\u5e8f\u5458\u90fd\u80fd\u7406\u89e3\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\u3002\n\u300a\u7c73\u5c3c\u798f\u65af\u300bJakub K\u0105dzio\u0142ka\uff0cc.f\u3002https://github.com/NieDzejkob/miniforthOne\u5b83\u7684\u60f3\u6cd5\u4e4b\u4e00\u662f\u653e\u7f6e\u53ef\u53d8\u5730\u5740\uff08&amp\uff1bhere\uff0c\u2026\uff09\u5728\u6700\u521d\u7684\u5806\u6808\u4e0a\u3002\u6211\u4eec\u5c06\u5176\u6269\u5c55\u5230\u6267\u884c\u4ee4\u724c\u548c\u5e38\u91cf-1\u3002\nstage0\u7531Jeremiah Oriansj\u7f16\u5199\uff0c\u5e26\u6709357\u5b57\u8282x86\u7684\u4e8c\u8fdb\u5236\u79cd\u5b50\uff0cc.f\u3002https://github.com/oriansj/stage0/\n\u666e\u6717\u514b\u798f\u65af\u4e2d\u6751\u5149\u4e00\uff0cc.f\u3002https://github.com/nineties/planckforthIt\u4ece\u4e00\u4e2a\u5b57\u7b26\u7684\u5355\u8bcd\u5f00\u59cb\u3002\u56e0\u6b64\uff0c\u4ed6\u7684\u89e3\u6790\u5668\u662freallysimple\uff0c\u5373\u5b83\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u5b57\u7b26\u3002\u540e\u6765\uff0c\u4ed6\u628a\u8fd9\u4e2a\u6269\u5c55\u5230\u4e86\u6b63\u5e38\u7684\u8303\u56f4\u3002\n\u5c0f\u7684forth\u6838\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5176\u4e0a\u5b9a\u4e49\u89c4\u5219\u7684forth by forthsource\u4ee3\u7801\u3002\u4e24\u8005\u90fd\u4f7f\u7528\u5c3e\u90e8\u4ee3\u7801\u5171\u4eab\uff0c\u5e76\u5c06\u53d8\u91cf\u76f4\u63a5\u653e\u5165\u673a\u5668\u6307\u4ee4\u4e2d\u3002ITF-STC\uff1a\u95f4\u63a5\u8868forth\u548c\u5b50\u7a0b\u5e8f\u7ebf\u7a0b\u4ee3\u7801\u6211\u4eec\u7528\u4e00\u4e2a\u5b57\u7b26\u7684\u5355\u8bcd\u67e5\u627e\u8868\u66ff\u6362\u4e86\u94fe\u8868\u76ee\u5f55\u3002\n0w4tf\uff1a\u4e00\u4e2aforth\uff0c\u6709\u4e00\u4e2a\u7a7a\u5b57\u5178\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u6ca1\u6709\u56fa\u5b9a\u7684\u5355\u8bcd\u3002\u5b83\u6709\u4e00\u4e2a\u9ed8\u8ba4\u5b57\u548c\u4e00\u4e9b\u6267\u884c\u6807\u8bb0\uff0c-1\uff0c\u4ee5\u53ca\u521d\u59cb\u5806\u6808\u4e0a\u53d8\u91cf\u7684\u4e00\u4e9b\u5730\u5740\u3002\u521a\u521a\u591f\u7ec4\u88c5\u65b0\u798f\u601d\u539f\u8bed\u3002C.f.0w4tf\n2wf\uff1a\u6211\u7684\u7b2c\u4e00\u4e2a\u7b2c\u56db\u6838\uff0c\u5b57\u5178\u91cc\u53ea\u6709\u4e24\u4e2a\u8bcd\uff08\uff1a\u548c\uff0c\uff09\u3002\u5b83\u8fd8\u5177\u6709\u6267\u884c\u4ee4\u724c\u548c\u5806\u6808\u4e0a\u7684\u53d8\u91cf\u3002\n\u5e26\u79fb\u4f4d\u6807\u5fd7\u7684\u516b\u8fdb\u5236\u76d1\u89c6\u5668\uff0c\u7528\u4e8e\u63a7\u5236\u6211\u4eec\u662f\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\uff0c\u8fd8\u662f\u5c06\u4e0b\u4e00\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\u53d1\u9001\u5230\u5185\u5b58\u4e2d\u3002\n\u6211&#39\uff1b\u6211\u4ecd\u5728\u4f7f\u752832\u4f4dlinux\u7f16\u5199\u6d4b\u8bd5\u73af\u5883\u7684\u4ee3\u7801\u3002\u5b83&#39\uff1b\u73b0\u57282wf\uff08\u4f5c\u4e3a\u76d1\u89c6\u5668\u8f93\u5165\uff09\u7684\u5b57\u8282\u6570\u51cf\u5c11\u5230316\u5b57\u8282\uff0c\u5982\u679c\u72ec\u7acb\uff0c\u5219\u52a0\u8f7d315\u5b57\u8282\u3002\n\u952e\u76d82wf\u768416\u4f4dbios\u4ee3\u7801\u4ec5\u4e3a237\u5b57\u8282\uff0c\u7531\u76d1\u89c6\u5668\u52a0\u8f7d231\u5b57\u8282\u3002\u4e24\u8005\u90fd\u8fd8\u6ca1\u6709\u8c03\u8bd5\u3002\n\u5728\u8fd9\u4e9b\u5c0f\u5c3a\u5bf8\u7684\u673a\u5668\u4e0a\uff0c\u4ec5\u4ec5\u4e00\u4e2a\u4eba\u5c31\u53ef\u4ee5\u5c3d\u804c\u5c3d\u8d23\u5730\u4e25\u683c\u68c0\u67e5\u6bcf\u4e00\u70b9\u3002\n\u6beb\u65e0\u7591\u95ee\uff0c\u6211\u6ca1\u6709\u529e\u6cd5\u7f16\u5199\u4e00\u4e2a\u7b80\u77ed\u7684\u8df3\u8f6c\u3002Gnu as\u81ea\u5df1\u4f18\u5316jmp\uff0c\u4e0d\u63d0\u4f9b\u7c7b\u4f3cjmpb AFAIK\u7684\u4e1c\u897f\u3002\u6b22\u8fce\u4efb\u4f55\u63d0\u793a\u3002\n.macro jmpb target pre_jump_byte_\\@:jmp\\target\u3002\u586b\u51450xFFFFFF*\uff08-2-pre_jump_byte_\\@\uff09\uff0c8\uff0c0xdeadbeef#\u5176\u5927\u5c0f\u4e3a\u96f6\u6216\u5927\u3002endm\n.\u5b8fjmpb\u76ee\u6807\u3002db 0xEB\uff0c\u76ee\u6807-\uff08$+1\uff09\uff1b\u5341\u516d\u8fdb\u5236\u4ee3\u7801\u548c\u76f8\u5bf9\u504f\u79fb\u91cf\u3002\u586b\u51450xFFFFFF*\uff08\uff08\u76ee\u6807-$\uff09&amp\uff1b~0xff\uff09\uff0c8\uff0c0xdeadbeef\u3002endm\n\u4e8c\u8fdb\u5236\u79cd\u5b50\u53ea\u662f\u4e00\u4e2a\u76d1\u89c6\u5668\uff0c\u5373\u4e00\u4e2a\u4ee3\u7801\u52a0\u8f7d\u7a0b\u5e8f\u3002defaultone\u8bfb\u53d6\u516b\u8fdb\u5236\u6570\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u516b\u4f4d\u5b57\u8282\u5199\u5165\u5185\u5b58\u3002\n\u6700\u540e\u4e00\u4e2a\u516b\u4f4d\u5b57\u8282\u8986\u76d6\u76d1\u89c6\u5668\u7684\u6700\u540e\u4e00\u4e2a\u8df3\u8f6c\u504f\u79fb\u91cf\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8df3\u8fdb\u4e86\u65b0\u7684\u4ee3\u7801\u3002\n\u516b\u8fdb\u5236\u4ee3\u7801\u66f4\u5bb9\u6613\u89e3\u6790\u5e76\u8f6c\u6362\u4e3a\u516b\u8fdb\u5236\u3002\u6211\u4eec\u53ea\u9700\u8981\u8ba2\u9605&#39\uff1b0&#39;. \u5bf9\u4e8e\u5341\u516d\u8fdb\u5236\u4ee3\u7801\uff0c\u6211\u4eec\u5fc5\u987b\u51cf\u53bb&#39\uff1b0&#39; \u6216&#39\uff1bA&#39\uff1b\u6216&#39\uff1ba&#39\uff1b\u3002\u56e0\u6b64\uff0c\u516b\u8fdb\u5236\u76d1\u89c6\u5668\u6bd4\u5341\u516d\u8fdb\u5236\u76d1\u89c6\u5668\u5c0f\u3002\n\u5728x86\u786c\u4ef6\u4e0a\uff0c\u7531\u4e8ealt numpad\u8f93\u5165\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8bfb\u53d6\u516b\u4f4d\u5b57\u8282\u7684\u76d1\u89c6\u5668\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u76f4\u63a5\u8ba1\u7b97\u80a0\u80c3\u76f4\u80a0\u7684\u6570\u5b57\u3002\n\u5426\u5219\u516b\u4f4d\u7ec4\u8f93\u5165\u5c31\u662f\u4f5c\u5f0a\u3002\u6211\u4eec\u5c06\u624b\u52a8\u8f93\u5165\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u90a3&#39\uff1b\u5b83\u4ecd\u7136\u662f\u4e00\u9897\u4e8c\u5143\u79cd\u5b50\u3002\n\u76d1\u89c6\u5668\u8f93\u5165\u662f\u4e00\u4e2a\u6700\u5c0f\u7684forth\u89e3\u91ca\u5668\uff0c\u7f16\u8bd1\u6210\u673a\u5668\u4ee3\u7801\uff0c\u6240\u6709\u5b57\u8282\u90fd\u53cd\u8f6c\u5e76\u7f16\u7801\u4e3a\u516b\u8fdb\u5236\u6570\u3002\u6211\u4eec\u63d0\u4f9b\u4e24\u79cd\u53d8\u4f53\uff1a\n0w4tf-\u96f6\u5355\u8bcd\u56db\u4e2atoken-forth\uff1a\u5b83\u6ca1\u6709\u5e38\u89c4\u7684forth\u5355\u8bcd\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5355\u8bcd\uff0c\u5219\u53ea\u6709\u4e00\u4e2a\u56de\u9000\u4ee3\u7801\u3002\u6b64\u5916\uff0c\u5b83\u5728\u521d\u59cb\u5806\u6808\u4e0a\u5305\u542b4\u4e2a\u6267\u884c\u6807\u8bb0\u3001\u503c-1\u548c3\u4e2a\u53d8\u91cf\u5730\u5740\u3002\n2wf-\u4e24\u4e2a\u5b57\uff1a\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u3002\u6211\u628a\u5b83\u642c\u5230\u4e86\u4e00\u4e2a\u72ec\u7acb\u76842wf\u5206\u5e97\u3002\u5b83\u53ea\u6709\u4e24\u4e2a\u5e38\u89c4\u7684forth\u5355\u8bcd\u548c\u4e00\u4e2a\u7cbe\u5fc3\u6311\u9009\u7684\u9996\u5b57\u6bcd\u5806\u6808\u3002\u5806\u6808\u5305\u542b\u4e00\u4e9b\u6267\u884c\u4ee4\u724c\uff08xt\uff09\u548c\u4e00\u4e9b\u53d8\u91cf\u5730\u5740\u3002\n\u7eaf\u7cb9\u4e3b\u4e49\u8005\u7528\u7b14\u548c\u7eb8\u628a\u6c47\u7f16\u7a0b\u5e8f\u7f16\u8bd1\u6210\u673a\u5668\u4ee3\u7801\uff1b\u7136\u540e\u5bf9\u5b57\u8282\u8fdb\u884c\u516b\u8fdb\u5236\u7f16\u7801\uff0c\u624b\u5de5\u8f93\u5165\u7ed3\u679c\u3002\n\u5982\u679c\u4f60\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u63a5\u53d7\u516b\u8fdb\u5236\u4ee3\u7801\u4f5c\u4e3a\u6e90\u4ee3\u7801\uff0c\u4f60\u53ef\u4ee5\u628a0w4tf\u7684\u4e8c\u8fdb\u5236\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u7684\u4e8c\u8fdb\u5236\u79cd\u5b50\u3002\n\u4e24\u4e2aforth\u7cfb\u7edf\u90fd\u53ef\u4ee5\u8f7b\u677e\u5730\u653e\u5165512\u4e2a\u516b\u4f4d\u5b57\u8282\uff08\u53c8\u79f0\u5b57\u8282\uff09\u7684\u5f15\u5bfc\u6247\u533a\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u672c\u8eab\u5f88\u5c0f\uff0c\u4f46\u4e0e\u516b\u8fdb\u5236\u76d1\u89c6\u5668\u76f8\u6bd4\u5374\u5f88\u5927\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709&#39\uff1b\u6211\u4eec\u4e0d\u559c\u6b22\u5c06\u53cd\u5411\u516b\u8fdb\u5236\u4ee3\u7801\u4f5c\u4e3a\u6e90\u8f93\u5165\uff0c\u800c\u662f\u63d0\u4f9b\u4e86\u7b2c\u56db\u6838\u7684\u4e8c\u8fdb\u5236\u79cd\u5b50\u3002\n\u56e0\u4e3a\u4f53\u79ef\u5c0f\uff0c\u6211\u4eec\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u5728\u542f\u52a8\u65f6\u63d0\u4f9b\u89c6\u89c9\u53cd\u9988\u3002\u8fd9\u610f\u5473\u7740\u76f2\u76ee\u5730\u8f93\u5165\u5927\u91cf\u5b57\u7b26\u3002\u5982\u679c\u4f60\u6ca1\u6709&#39\uff1b\u6211\u63a8\u8350\u4e32\u884c\u8fde\u63a5\u3002\u5b83\u6709\u4e00\u4e2apro\uff0c\u4f60\u53ef\u4ee5\u5728\u5b83\u4e0a\u9762\u9644\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u7535\u5b50\u975e\u6570\u5b57\u8bb0\u5f55\u5668\uff0c\u5b83\u53ef\u4ee5\u6253\u5370\u6240\u6709\u53d1\u9001\u548c\u63a5\u6536\u7684\u5b57\u8282\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c3d\u804c\u8c03\u67e5\u8fdb\u884c\u4e25\u683c\u68c0\u67e5\u3002\n\u6211\u4eec\u4ecei386 linux\u7684\u6d4b\u8bd5\u73af\u5883\u5f00\u59cb\u3002\u5728\u8fd9\u79cd\u73af\u5883\u4e0b\uff0c\u5f00\u53d1\u548c\u8c03\u8bd5\u4ee3\u7801\u66f4\u5bb9\u6613\u3002\n\u5728Forth\u4e2d\u5b9e\u73b0\u4e00\u4e2ahexcode\u5b57\uff0c\u4f8b\u5982hex0\uff0c\u53c2\u89c1[1]\u3002[1]  https://github.com/oriansj/stage0It&#39;s\u79cd\u5b50\u5360\u7528357\u5b57\u8282\uff1bi\u3001 e.\u8fdc\u8fdc\u8d85\u8fc72wf\u62160w4tf", "note_en": "The minor objective is to do it in code that is understandableby 75% of programmers.\n   MiniForth by Jakub K\u0105dzio\u0142ka, c.f.  https://github.com/NieDzejkob/miniforthOne of its ideas is to put variable addresses (&amp;here, ...) onto theinitial stack. We extend this to execution tokens and the constant -1.\n stage0 by Jeremiah Oriansj with a binary seed for x86 of 357 bytes, c.f.  https://github.com/oriansj/stage0/\n  Planckforth by Koichi NAKAMURA, c.f.  https://github.com/nineties/planckforthIt starts with one character words. Therefore, his parser is reallysimple, i.e. it reads the next character. Later he extends this tonormal forth.\n  Small forth nuclei on which we can define a regular forth by forthsource code. Both use tail code sharing and place variablesdirectly in the machine instructions. ITF-STC: indirection table forth with subroutine threading codeWe replaced the linked list directory with a lookup table forwords of one character.\n 0w4tf: A forth with an empty dictionary, i.e. it has no regularwords. It has a default word and some execution tokens, -1, andsome addresses of variables on the initial stack. Just enough toassemble new Forth primitives.C.f.  0w4tf\n 2wf:My first forth nucleus with only two words in thedictionary (: and ,). It has also execution tokens and variableson the stack.\n The octal monitor with the shifting flag, which controls, if we readthe next octal digit or emit the next octet into the memory.\n     I&#39;m still working on the code for the testenvironment using 32 bit linux. It&#39;s now down to 316 bytes for 2wf(as monitor input) and 315 bytes loaded if standalone.\n  The 16 bit bios code of 2wf for keyboard is down to 237 bytesstandalone and 231 bytes to be loaded by the monitor.Both are not yet debugged.\n At these small sizes, a mere human can rigorously check each bit with due diligence.\n    I have found no way to compile a short jump without doubt.Gnu as optimizes jmp on its own and do not provide something like jmpb AFAIK.Any hints are welcome.\n   .macro jmpb target pre_jump_byte_\\@ : jmp \\target .fill 0xffffffff * (. - 2 - pre_jump_byte_\\@), 8, 0xdeadbeef # its size is zero or to big.endm\n  .macro jmpb target .db 0xEB, target - ( $ + 1) ; hex code and relative offset .fill 0xffffffff * ((target - $) &amp; ~ 0xff), 8, 0xdeadbeef .endm\n    The binary seed is only a monitor, i.e. a code loader. The defaultone reads octal numbers and writes them as octets into memory.\n The last octet overwrites the last jump offset of the monitor. Thus,we jump into the new code.\n  Octal code is easier to parse and convert to octets. We only have tosubstract &#39;0&#39;. With hex code we must substract either &#39;0&#39; or &#39;A&#39; or&#39;a&#39;. Therefore, the octal monitor is smaller than a hex monitor.\n  On x86 hardware we can use a monitor which reads octets, becauseof the alt numpad input method. It allows us to enteroctals numbers directly.\n Otherwise octet input would be cheating. We would enter a binarymanually. That&#39;s still a binary seed.\n  The monitor input is a minimal forth interpreter compiled to machine code,all bytes reversed and encoded as octal numbers. We provide twovariants:\n 0w4tf - zero words four tokens forth: It has no regular forth word,only a fallback code if the word is not found. Additionally, it 4execution tokens, the value -1, and 3 addresses of variables on theinitial stack.\n 2wf - two word forth: It was my first attempt. I moved it into aseparate branch 2wf.It has only two regular forth words and a well chosen initialstack. The stack contains some execution tokens (xt) and somevariable addresses.\n The purist compiles the assembler to machine code by pen and paper; then hereverses the bytes, does the octal encoding and enter the result by hand.\n  If you don&#39;t accept octal code as source code you can take thebinary of 0w4tf as a small binary seed.\n Both forth systems fit easily into a boot sector of 512 octets (aka bytes).Thus, they are small by themselves but huge in comparison to the octal monitor.\n  For those, who don&#39;t like reverse octal code as source input, weprovide a binary seed of our forth nucleus.\n  Because of the small size, we don&#39;t provide visual feedback at thestart. This means entering blindly a lot of characters. If you don&#39;tlike it I recommend a serial connection. That has the pro, that youcan attach a simple electric non-digitial logger to it, which printsall send and received bytes on a paper trail. That can be checkedrigorously with due diligence.\n    We start with a test environment for i386 linux. In this environment it iseasier to develop and debug the code.\n  implement in Forth a hexcode word, e.g. hex0, , cf. [1].[1]  https://github.com/oriansj/stage0It&#39;s seed takes 357 bytes; i.e. much more than 2wf or 0w4tf", "posttime": "2022-02-25 22:01:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8c\u8fdb\u5236,binary,\u4ee3\u7801", "title": "\u6700\u5c0f\u4e8c\u8fdb\u5236\u542f\u52a8", "title_en": "Minimal Binary Boot", "transed": 1, "url": "https://codeberg.org/StefanK/MinimalBinaryBoot", "via": "", "real_tags": ["\u4e8c\u8fdb\u5236", "binary", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074989, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u7f51\u7edc\u5b89\u5168\u57fa\u7840\u8bbe\u65bd\u548c\u5b89\u5168\u5c40\uff08US Cybersecurity Infrastructure and Security Agency\uff09\u5728\u83b7\u6089\u5a01\u80c1\u884c\u4e3a\u4eba\u5df2\u5f00\u59cb\u4f7f\u7528\u4e0a\u5468\u62ab\u9732\u7684\u4e24\u4e2a\u6f0f\u6d1e\u63a5\u7ba1\u672a\u4fee\u8865\u7684\u7cfb\u7edf\u540e\uff0c\u5df2\u8981\u6c42\u8054\u90a6\u673a\u6784\u4fee\u8865\u5176\u53ef\u80fd\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u4f55Zabbix\u670d\u52a1\u5668\u3002\nCISA\u8b66\u62a5\u4e2d\u63d0\u5230\u7684\u6f0f\u6d1e\u88ab\u8ffd\u8e2a\u4e3aCVE-2022-23131\u548cCVE-2022-23134\uff0c\u8fd9\u4e24\u4e2a\u6f0f\u6d1e\u90fd\u662f\u4e0a\u5468\u5728\u5b89\u5168\u516c\u53f8SonarSource\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\u62ab\u9732\u7684\u3002\n\u7b2c\u4e00\u4e2a\u6f0f\u6d1e\u662fZabbix\u5b58\u50a8\u4f1a\u8bdd\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u5141\u8bb8\u653b\u51fb\u8005\u7ed5\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\uff0c\u800c\u7b2c\u4e8c\u4e2a\u6f0f\u6d1e\u7684\u6839\u6e90\u662f\u5bf9Zabbix\u5b89\u88c5\u7a0b\u5e8f\u6587\u4ef6\u7684\u9519\u8bef\u5904\u7406\uff0c\u8fd9\u4f7f\u5f97\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\uff08\u653b\u51fb\u8005\uff09\u80fd\u591f\u8bbf\u95ee\u5176\u4e2d\u4e00\u4e9b\u8d44\u6e90\u5e76\u91cd\u65b0\u914d\u7f6e\u670d\u52a1\u5668\u3002\n\u5b83\u4eec\u5f71\u54cd\u4e86Zabbix\uff0c\u8fd9\u662f\u4e00\u6b3e\u975e\u5e38\u53d7\u6b22\u8fce\u7684\u57fa\u4e8e\u7f51\u7edc\u7684\u5f00\u6e90\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u7528\u4e8e\u76d1\u63a7\u548c\u63a5\u6536\u90e8\u7f72\u5728\u5927\u578b\u4f01\u4e1a\u7f51\u7edc\u5185\u7684\u5927\u91cfIT\u7cfb\u7edf\u7684\u9065\u6d4b\u6570\u636e\uff0c\u652f\u6301\u4ece\u5de5\u4f5c\u7ad9\u3001\u670d\u52a1\u5668\u548c\u4e91\u8d44\u6e90\u8fdb\u884c\u91c7\u96c6\u3002\nSonarSource\u5728\u4e0a\u5468\u7684\u6280\u672f\u62a5\u544a\u4e2d\u79f0\uff0c\u5229\u7528\u8fd9\u4e24\u4e2a\u6f0f\u6d1e\u662f\u201c\u76f4\u63a5\u7684\u201d\uff0c\u56e0\u4e3a\u653b\u51fb\u8005\u53ea\u9700\u8bbf\u95eeZabbix\u7684\u8bbe\u7f6e\u3002php\u6587\u4ef6\u6765\u63a5\u7ba1\u670d\u52a1\u5668\u3002\nZabbix\u56e2\u961f\u4e0a\u5468\u53d1\u5e03\u4e86\u6700\u65b0\u6d88\u606f\uff0c\u4f46\u6b63\u5982\u6700\u8fd1\u7684\u8d8b\u52bf\u4e00\u6837\uff0c\u5a01\u80c1\u53c2\u4e0e\u8005\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\uff0c\u5c06\u62ab\u9732\u7684\u6f0f\u6d1e\u6b66\u5668\u5316\uff0c\u4ee5\u671f\u5728\u5927\u578b\u4f01\u4e1a\u7f51\u7edc\u4e2d\u7ad9\u7a33\u811a\u8ddf\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u7f51\u7edc\u5347\u7ea7\u5165\u4fb5\u6216\u5c06\u5176\u5356\u7ed9\u5176\u4ed6\u72af\u7f6a\u96c6\u56e2\u3002\n\u867d\u7136CISA\u5c1a\u672a\u516c\u5e03\u6709\u5173\u5f53\u524d\u653b\u51fb\u4f01\u56fe\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f46\u81f3\u5c11\u6709\u4e00\u4e2a\u6f0f\u6d1e\u7684\u6982\u5ff5\u8bc1\u660e\u5df2\u7ecf\u5728GitHub\u4e0a\u53d1\u5e03\u4e86\u51e0\u5929\u3002\n\u6839\u636eShodan Trends\u7684\u4e00\u4e2a\u9875\u9762\uff0c\u76ee\u524d\u67093800\u591a\u4e2aZabbix\u5b9e\u4f8b\u8fde\u63a5\u5230\u4e92\u8054\u7f51\uff0c\u5982\u679c\u4e0d\u6253\u8865\u4e01\uff0c\u5c31\u6709\u88ab\u9ed1\u5ba2\u5165\u4fb5\u7684\u4e25\u91cd\u98ce\u9669\u3002\nSonarSource\u53d1\u5e03\u4e86Zabbix\u62a5\u544a\u7684\u7b2c\u4e8c\u5929\uff0c\u53e6\u4e00\u5bb6\u5b89\u5168\u516c\u53f8White Oak security\u53d1\u5e03\u4e86\u4e00\u4efd\u62a5\u544a\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u53e6\u4e00\u79cdIT\u76d1\u63a7\u548c\u7ba1\u7406\u5de5\u5177Extensions Portfolio\u4e2d\u7684\u4e00\u4e2a\u786c\u7f16\u7801\u540e\u95e8\u5e10\u6237\u3002\u5c1a\u672a\u53d1\u73b0\u5229\u7528\u6b64\u6f0f\u6d1e\uff08CVE-2022-24255\uff09\u7684\u60c5\u51b5\uff0c\u4f46\u5b83\u4e0eZabbix\u7cfb\u7edf\u4e00\u6837\u662f\u4e00\u4e2a\u6709\u5438\u5f15\u529b\u7684\u76ee\u6807\uff0c\u751a\u81f3\u66f4\u5bb9\u6613\u5229\u7528\u3002", "note_en": "The US Cybersecurity Infrastructure and Security Agency has asked federal agencies to patch any Zabbix servers they may be operating after it learned that threat actors have started using two vulnerabilities disclosed last week to take over unpatched systems.\n The vulnerabilities references in the CISA alert are tracked as\u00a0 CVE-2022-23131\u00a0and\u00a0 CVE-2022-23134, and both were disclosed last week in a\u00a0 write-up\u00a0from security firm SonarSource.\n The first is a bug in how Zabbix stores session data, allowing an attacker to bypass authentication procedures, while the second bug has its root in the incorrect handling of the Zabbix installer files that allows unauthenticated users (attackers) to access some of these resources and re-configure servers.\n They impact\u00a0 Zabbix, which is a very popular open-source web-based app that can be used to monitor and receive telemetry from a wide array of IT systems deployed inside large enterprise networks, supporting acquisition from workstations, servers, and cloud resources alike.\n In its technical write-up last week, SonarSource described the exploitation of these two bugs as \u201cstraightforward,\u201d as attackers only had to access a Zabbix\u2019s setup.php file to take over a server.\n The Zabbix team released updates last week, but as has been the recent trend, threat actors were quick to move to weaponize the disclosed vulnerabilities in the hopes of gaining footholds inside large corporate networks, access they could use to escalate intrusions or sell to other criminal groups.\n While CISA has not released details about the current exploitation attempts, proof-of-concept for at least one of the vulnerabilities has been available\u00a0 on GitHub\u00a0for at least a few days.\n According to a\u00a0 Shodan Trends page, there are currently more than 3,800 Zabbix instances connected to the internet, which if left unpatched, are at serious risk of getting hacked.\n A day after SonarSource published its Zabbix write-up, fellow security firm White Oak Security published a\u00a0 report\u00a0detailing a hardcoded backdoor account in\u00a0 Extensis Portfolio, another IT monitoring and management tool. Exploitation of this vulnerability (CVE-2022-24255) has not been observed\u2014yet\u2014but it\u2019s just as an attractive target as Zabbix systems and even easier to exploit.", "posttime": "2022-02-25 21:49:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6f0f\u6d1e,zabbix", "title": "CISA:Zabbix\u670d\u52a1\u5668\u53d7\u5230\u653b\u51fb\uff0c\u6700\u8fd1\u53d1\u73b0\u4e86\u6f0f\u6d1e", "title_en": "CISA: Zabbix servers under attack with recently disclosed vulnerability", "transed": 1, "url": "https://therecord.media/cisa-zabbix-servers-under-attack-with-recently-disclosed-vulnerability/", "via": "", "real_tags": ["\u6f0f\u6d1e", "zabbix"]}]
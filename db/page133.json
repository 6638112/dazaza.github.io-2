[{"category": "", "categoryclass": "", "imagename": "ed3d7987b7a68c78405d9ab0bfd6d392.png", "infoid": 1070289, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f7f\u7528\u6613\u4e8e\u4f7f\u7528\u7684 API \u548c\u5de5\u5177\u5728\u51e0\u5206\u949f\u5185\u6784\u5efa\u4ee4\u4eba\u60ca\u53f9\u7684\u5b9e\u65f6\u534f\u4f5c\u4f53\u9a8c \u521b\u5efa\u51fa\u8272\u7684\u521b\u610f\u5de5\u5177\u6781\u5176\u56f0\u96be\u3002\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u6210\u5343\u4e0a\u4e07\u6761\u8def\u5f84\uff0c\u7528\u6237\u4f53\u9a8c\u7684\u6bcf\u4e2a\u65b9\u9762\u90fd\u5fc5\u987b\u4ed4\u7ec6\u8003\u8651\u5e76\u4f18\u5316\u6027\u80fd\u3002\u5f53\u60a8\u5c1d\u8bd5\u5728\u6b64\u57fa\u7840\u4e0a\u6dfb\u52a0\u5b9e\u65f6\u534f\u4f5c\u65f6\uff0c\u60a8\u53ef\u4ee5\u786e\u4fdd\u51e0\u4e4e\u6ca1\u6709\u65f6\u95f4\u4e13\u6ce8\u4e8e\u4ea7\u54c1\u7684\u6838\u5fc3\u7528\u6237\u4f53\u9a8c\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u521b\u5efa Liveblocks \u7684\u539f\u56e0\uff0c\u8fd9\u662f\u4e00\u7ec4\u5de5\u5177\u548c API\uff0c\u53ef\u5e2e\u52a9\u60a8\u521b\u5efa\u4ee4\u4eba\u60ca\u53f9\u7684\u5b9e\u65f6\u534f\u4f5c\u4f53\u9a8c\u3002\u4f7f\u7528 Liveblocks\uff0c\u60a8\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u8fdb\u884c\u4efb\u4f55\u534f\u4f5c\uff0c\u4ece\u800c\u4f7f\u60a8\u7684\u6838\u5fc3\u4ea7\u54c1\u5f97\u5230\u5e94\u6709\u7684\u5173\u6ce8\u3002\u5728\u8fc7\u53bb\u5341\u5e74\u4e2d\uff0c\u6211\u4eec\u7684\u5408\u4f5c\u65b9\u5f0f\u53d1\u751f\u4e86\u91cd\u5927\u53d8\u5316\u3002\u5927\u6d41\u884c\u5927\u5927\u52a0\u901f\u4e86\u5411\u8fdc\u7a0b\u5de5\u4f5c\u7684\u8f6c\u53d8\u3002\u73b0\u5728\u6709\u6570\u767e\u4e07\u4eba\u5728\u5bb6\u5de5\u4f5c\uff0c\u4e0d\u518d\u9700\u8981\u82b1\u51e0\u4e2a\u5c0f\u65f6\u901a\u52e4\u5230\u529e\u516c\u5ba4\u3002\u4f46\u968f\u7740\u5411\u8fdc\u7a0b\u5de5\u4f5c\u7684\u8f6c\u53d8\uff0c\u5efa\u7acb\u6709\u610f\u4e49\u7684\u5173\u7cfb\u548c\u4e0e\u4eba\u5408\u4f5c\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002 Buffer \u5bf9 2,300 \u540d\u8fdc\u7a0b\u5de5\u4f5c\u8005\u7684\u8c03\u67e5\u53d1\u73b0\uff0c16% \u7684\u4eba\u8868\u793a\u4ed6\u4eec\u5728\u534f\u4f5c\u548c\u6c9f\u901a\u65b9\u9762\u9047\u5230\u56f0\u96be\uff0c\u53e6\u6709 16% \u7684\u4eba\u8868\u793a\u4ed6\u4eec\u5728\u5b64\u72ec\u4e2d\u6323\u624e\u3002\u5f53\u6211\u4eec\u5728\u540c\u4e00\u4e2a\u7269\u7406\u7a7a\u95f4\u4e00\u8d77\u5de5\u4f5c\u65f6\uff0c\u534f\u4f5c\u4f1a\u81ea\u7136\u5730\u53d1\u751f\u5728\u767d\u677f\u524d\u3001\u4f1a\u8bae\u5ba4\u4e2d\uff0c\u6216\u8005\u53ea\u662f\u8d70\u5230\u67d0\u4eba\u7684\u529e\u516c\u684c\u524d\u3002\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u5f00\u59cb\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u6211\u4eec\u5f00\u59cb\u770b\u5230\u89c6\u9891\u4f1a\u8bae\u89e3\u51b3\u65b9\u6848\uff0c\u53ea\u6709\u901a\u8fc7\u5171\u4eab\u5c4f\u5e55\u7684\u4f4e\u8d28\u91cf\u56fe\u50cf\u624d\u80fd\u771f\u6b63\u5b9e\u73b0\u534f\u4f5c\u3002\u4e00\u4e2a\u5f88\u597d\u7684\u6539\u8fdb\uff0c\u4f46\u5e76\u4e0d\u7406\u60f3\u3002\u5927\u591a\u6570\u5728\u7ebf\u8868\u5355\u3001\u4eea\u8868\u677f\u548c\u5de5\u5177\u4ecd\u9700\u8981\u60a8\u5237\u65b0\u9875\u9762\u4ee5\u67e5\u770b\u5176\u4ed6\u4eba\u5df2\u66f4\u6539\u7684\u5185\u5bb9\u3002\u5f53\u4f60\u7684\u4e92\u8054\u7f51\u8fde\u63a5\u4e2d\u65ad\uff0c\u4f60\u6709\u673a\u4f1a\u6253\u201c\u4fdd\u5b58\u201d\u6309\u94ae\u4e4b\u524d\uff0c\u4f60\u77e5\u9053\u4f60\u521a\u521a\u5931\u53bb\u4e86\u5de5\u4f5c\u65f6\u95f4\u3002\n\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\u6784\u5efa\u548c\u7ef4\u62a4\u9ad8\u6027\u80fd\u3001\u53ef\u9760\u4e14\u53ef\u6269\u5c55\u7684\u5b9e\u65f6\u534f\u4f5c\u57fa\u7840\u5728\u6280\u672f\u4e0a\u662f\u56f0\u96be\u7684\uff0c\u800c\u4e14\u6210\u672c\u6781\u5176\u9ad8\u6602\u3002\u53ea\u6709\u5c11\u6570\u62e5\u6709\u9ad8\u5ea6\u4e13\u4e1a\u5316\u5de5\u7a0b\u5e08\u7684\u516c\u53f8\u80fd\u591f\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u5927\u89c4\u6a21\u89e3\u51b3\u8fdc\u7a0b\u534f\u4f5c\u95ee\u9898\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u63d0\u4f9b\u4e16\u754c\u4e00\u6d41\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u516c\u53f8\u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u57fa\u7840\u8bbe\u65bd\u4e3a\u4ed6\u4eec\u4e3a\u7528\u6237\u521b\u9020\u7684\u6570\u5b57\u4f53\u9a8c\u63d0\u4f9b\u52a8\u529b\u3002\u4f7f\u7528 Liveblocks\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u6784\u5efa\u9ad8\u6027\u80fd\u7684\u591a\u4eba\u521b\u610f\u5de5\u5177\uff0c\u4f7f\u60a8\u7684\u8868\u5355\u5b9e\u65f6\u534f\u4f5c\uff0c\u751a\u81f3\u5c06\u5b9e\u65f6\u5149\u6807\u6dfb\u52a0\u5230\u60a8\u73b0\u6709\u7684\u4ea7\u54c1\u4e2d\u3002 Liveblocks \u4f7f\u6211\u4eec\u80fd\u591f\u5728\u6570\u5c0f\u65f6\u800c\u4e0d\u662f\u6570\u5468\u5185\u4e3a\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u5b9e\u65f6\u72b6\u6001\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u5fc5\u62c5\u5fc3\u7ef4\u62a4\u3002\u5bf9\u4e8e\u4efb\u4f55\u6784\u5efa\u534f\u4f5c\u4f53\u9a8c\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u90fd\u662f\u8f7b\u800c\u6613\u4e3e\u7684\u4e8b\u60c5\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e86\u65e0\u7f1d\u534f\u4f5c\u7684\u4e0d\u540c\u6784\u5efa\u5757\uff1a\u5b58\u5728\u5757\u3001\u5b58\u50a8\u5757\u548c\u8bc4\u8bba\u5757\u3002\u5b83\u4eec\u7684\u8bbe\u8ba1\u8003\u8651\u4e86\u7279\u5b9a\u7684\u7528\u4f8b\uff0c\u53ef\u5e2e\u52a9\u60a8\u4ee5\u6700\u5feb\u7684\u65b9\u5f0f\u521b\u5efa\u5b8c\u5168\u53ef\u5b9a\u5236\u7684\u534f\u4f5c\u4f53\u9a8c\u3002\u53e6\u5916\uff0c\u60a8\u53ef\u4ee5\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u5757\uff0c\u8fd9\u6837\u60a8\u5c31\u4e0d\u4f1a\u56e0\u4e3a\u4e0d\u9700\u8981\u7684\u529f\u80fd\u800c\u4f7f\u4ee3\u7801\u5e93\u81a8\u80c0\u3002\u4eca\u5929\uff0c\u6211\u4eec\u5f88\u9ad8\u5174\u5411\u60a8\u4ecb\u7ecd\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u6784\u5efa\u5757\uff1a\u5b58\u5728\u5757\u3002\u8fd9\u975e\u5e38\u9002\u5408\u8ba9\u4eba\u4eec\u611f\u89c9\u597d\u50cf\u4ed6\u4eec\u5728\u540c\u4e00\u4e2a\u623f\u95f4\u91cc\u4e00\u6837\u3002\u53ea\u9700\u51e0\u884c\u4ee3\u7801\uff0c\u60a8\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u5b9e\u65f6\u5149\u6807\u548c\u5b9e\u65f6\u5934\u50cf\u7b49\u5185\u5bb9\u96c6\u6210\u5230\u60a8\u7684\u4ea7\u54c1\u4e2d\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u6211\u4eec\u7684 React API \u7684\u5916\u89c2\u3002\u5b58\u5728\u5757\u73b0\u5728\u53ef\u4f9b\u6240\u6709\u4eba\u4f7f\u7528\u3002\u5b58\u50a8\u548c\u8bc4\u8bba\u5757\u76ee\u524d\u5904\u4e8e\u79c1\u4eba\u6d4b\u8bd5\u9636\u6bb5\uff0c\u5e76\u5c06\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u66f4\u5e7f\u6cdb\u5730\u63d0\u4f9b\u3002\n\u53ea\u9700\u51e0\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u5c06\u5b9e\u65f6\u5149\u6807\u6dfb\u52a0\u5230\u6211\u7684\u7f51\u7ad9\uff0c\u8fd9\u5f88\u795e\u5947\uff0c\u800c\u4e14\u975e\u5e38\u6709\u8da3\u3002\u8bbe\u7f6e\u8d77\u6765\u975e\u5e38\u7b80\u5355\u5feb\u6377\u3002 Liveblocks \u4f7f\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u90fd\u53ef\u4ee5\u6784\u5efa\u5b9e\u65f6\u4f53\u9a8c\u3002\u4f7f\u7528 Liveblocks \u6784\u5efa\u4e0d\u4ec5\u53ef\u4ee5\u63d0\u9ad8\u4ea7\u54c1\u7684\u8d28\u91cf\u548c\u7528\u6237\u4f53\u9a8c\uff0c\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u516c\u53f8\u66f4\u5feb\u5730\u53d1\u8d27\u5e76\u6bcf\u5e74\u8282\u7701\u6570\u5341\u4e07\u7f8e\u5143\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u6210\u672c\u3002\u5982\u679c\u4e0d\u662f\u5f00\u6e90\u793e\u533a\u3001\u7814\u7a76\u4eba\u5458\u4ee5\u53ca Figma \u548c Google \u7b49\u516c\u53f8\u94fa\u5e73\u4e86\u9053\u8def\u5e76\u5411\u4e16\u754c\u5c55\u793a\u4e86\u521b\u9020\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u534f\u4f5c\u4f53\u9a8c\u5b9e\u9645\u4e0a\u662f\u53ef\u80fd\u7684\uff0cLiveblocks \u5c31\u4e0d\u4f1a\u5b58\u5728\u4eca\u5929\u3002\u4ed6\u4eec\u90fd\u5e2e\u52a9\u6211\u4eec\u53d6\u5f97\u4e86\u4eca\u5929\u7684\u6210\u5c31\uff0c\u5bf9\u6b64\u6211\u4eec\u6df1\u8868\u611f\u8c22\u3002\u6211\u4eec\u975e\u5e38\u9ad8\u5174\u80fd\u591f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5e76\u5728\u5b8c\u6210\u8fd9\u4e00\u4f7f\u547d\u4e2d\u53d1\u6325\u6211\u4eec\u7684\u4f5c\u7528\u3002\u5982\u679c\u8fd9\u662f\u60a8\u60f3\u53c2\u4e0e\u7684\u5de5\u4f5c\uff0c\u6211\u4eec\u6b63\u5728\u62db\u8058\uff01\u8bf7\u7533\u8bf7\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u60a8\u8ba4\u4e3a\u613f\u610f\u4e3a\u6b64\u5de5\u4f5c\u7684\u4efb\u4f55\u4eba\u3002", "note_en": "Build amazing real\u2011time collaborative experiences in minutes with easy\u2011to\u2011use APIs and tools\n  Creating great creative tools is extremely difficult. There are thousands of paths a user could take, and every aspect of the user experience has to be carefully considered and optimized for performance. And when you try to add real\u2011time collaboration on top of that, you can be sure that you\u2019re left with almost no time to focus on the core user experience of your product.\n That\u2019s why we created Liveblocks, a set of tools and APIs that helps you create amazing real\u2011time collaborative experiences. With Liveblocks, you can make anything collaborative in minutes so that you can give your core product the attention it deserves.\n    The way we work together has gone through a major change in the past decade. The pandemic accelerated the shift to remote work significantly. Millions of people now work from home and no longer have to spend hours commuting to an office.\n But with that shift to remote work, building meaningful relationships and collaborating with people became a lot more difficult.  Buffer\u2019s survey of 2,300 remote workers found that 16% of people reported they had difficulties with collaboration and communication, and another 16% reported they struggled with loneliness.\n  When we all worked together in the same physical space, collaboration would happen naturally in front of a whiteboard, in a meeting room, or simply by walking over to someone\u2019s desk. As more people started working remotely, we then started to see video conferencing solutions where collaboration could only really happen by sharing a low-quality image of your screen. A good improvement, but not ideal.\n Most online forms, dashboards, and tools still require you to refresh the page to see what other people have changed. And when your internet connection drops before you\u2019ve had a chance to hit the &#34;Save&#34; button, you know you\u2019ve just lost hours of work.\n Why is that? Building and maintaining a performant, reliable, and scalable real\u2011time collaborative foundation is technically difficult and extremely expensive. Only a few companies with highly specialized engineers have been able to pull this off.\n   We believe the best way to solve the remote collaboration problem at scale is by providing a world-class infrastructure that companies can leverage to power the digital experiences they create for their users.\n With Liveblocks, you can easily build a performant multiplayer creative tool, make your forms real\u2011time collaborative, or even add live cursors to your existing product.\n Liveblocks enabled us to add real\u2011time presence to our application in hours instead of weeks and we don\u2019t have to worry about maintenance. This is a no\u2011brainer for anyone building collaborative experiences.\n To do that, we provide you with different building blocks that work seamlessly together: the presence block, the storage block, and the comment block. They\u2019re designed with specific use cases in mind to help you create fully customizable collaborative experiences in the fastest way possible. Plus, you can decide which block to use so you\u2019re not bloating your codebase with features you don\u2019t need.\n  Today, we\u2019re excited to introduce you to our first building block: the presence block. It\u2019s great for making people feel as if they were together in the same room. You can easily integrate things like  real\u2011time cursors and  live avatars to your product with just a few lines of code. Below is an example showing how our React APIs look like.\n  The presence block is now available for everyone. The storage and comment blocks are currently in private beta and will be available more broadly later this year.\n Adding real\u2011time cursors to my website with just a few lines of code was magic, and just plain fun. It was so easy and fast to set up. Liveblocks makes building real\u2011time experiences accessible to every developer.\n Building with Liveblocks not only improves a product\u2019s quality and user experience but also helps companies ship faster and save hundreds of thousands of dollars in development and maintenance costs every year.\n Liveblocks wouldn\u2019t exist today if it wasn\u2019t for the open\u2011source community, researchers, and companies like Figma and Google who have paved the way and showed the world that creating incredible collaborative experiences was actually possible. They all helped us get to where we are today, and we\u2019re truly thankful for that.\n We couldn\u2019t be more excited to solve this problem and play our part in fulfilling this mission. If this is an endeavor you\u2019d like to be a part of,  we\u2019re hiring! Please apply and send this along to anyone that you think would be jazzed to work on this.", "posttime": "2021-07-29 22:09:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ea7\u54c1,add,\u534f\u4f5c", "title": "Liveblocks\uff1a\u5728\u51e0\u5206\u949f\u5185\u4e3a\u60a8\u7684\u4ea7\u54c1\u6dfb\u52a0\u5b9e\u65f6\u534f\u4f5c", "title_en": "Liveblocks: Add real\u2011time collaboration to your product in minutes", "transed": 1, "url": "https://liveblocks.io/blog/introducing-liveblocks", "via": "", "real_tags": ["\u4ea7\u54c1", "add", "\u534f\u4f5c"]}, {"category": "", "categoryclass": "", "imagename": "832a6c756d867847f0d64d1b0226727e.png", "infoid": 1070288, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6211\u4e00\u76f4\u5728\u63a2\u7d22\u4e00\u79cd\u7528\u4e8e\u53d1\u5e03\u7f51\u7ad9\u7684\u67b6\u6784\u6a21\u5f0f\uff0c\u6211\u79f0\u4e4b\u4e3a\u201c\u70d8\u7119\u6570\u636e\u201d\u6a21\u5f0f\u3002\u5b83\u63d0\u4f9b\u4e86\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u7684\u8bb8\u591a\u4f18\u70b9\uff0c\u540c\u65f6\u907f\u514d\u4e86\u5b83\u4eec\u7684\u5927\u90e8\u5206\u9650\u5236\u3002\u6211\u8ba4\u4e3a\u5b83\u503c\u5f97\u88ab\u66f4\u5e7f\u6cdb\u5730\u4f7f\u7528\u3002\u70d8\u7119\u6570\u636e\uff1a\u5c06\u6570\u636e\u7684\u53ea\u8bfb\u526f\u672c\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u4f5c\u4e3a\u540c\u4e00\u90e8\u7f72\u7684\u4e00\u90e8\u5206 \u5927\u591a\u6570\u52a8\u6001\u7f51\u7ad9\u5c06\u5176\u4ee3\u7801\u548c\u6570\u636e\u5206\u5f00\uff1a\u4ee3\u7801\u5728\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\uff0c\u6570\u636e\u4ee5\u67d0\u79cd\u5f62\u5f0f\u72ec\u7acb\u5b58\u5728\u5916\u90e8\u6570\u636e\u5b58\u50a8\u2014\u2014\u6bd4\u5982 PostgreSQL\u3001MySQL \u6216 MongoDB\u3002\u4f7f\u7528\u70d8\u7119\u6570\u636e\uff0c\u6570\u636e\u88ab\u90e8\u7f72\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5305\u7684\u4e00\u90e8\u5206\u3002\u6bcf\u5f53\u5185\u5bb9\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u90fd\u4f1a\u90e8\u7f72\u5305\u542b\u8fd9\u4e9b\u66f4\u65b0\u7684\u7ad9\u70b9\u7684\u5168\u65b0\u526f\u672c\u3002\u4e3a\u6b64\uff0c\u6211\u4e3b\u8981\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u6587\u4ef6\uff0c\u4f46\u8bb8\u591a\u5176\u4ed6\u683c\u5f0f\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u4f7f\u7528\u3002\u8fd9\u5bf9\u4e8e\u6240\u8c13\u7684\u201c\u65e0\u670d\u52a1\u5668\u201d\u90e8\u7f72\u5e73\u53f0\u7279\u522b\u6709\u6548\u2014\u2014\u652f\u6301\u65e0\u72b6\u6001\u90e8\u7f72\u5e76\u4e14\u53ea\u5bf9\u7528\u4e8e\u670d\u52a1\u4f20\u5165\u8bf7\u6c42\u7684\u8d44\u6e90\u6536\u8d39\uff08\u201c\u7f29\u653e\u5230\u96f6\u201d\uff09\u7684\u5e73\u53f0\u3002\u7531\u4e8e\u5bf9\u6570\u636e\u7684\u6bcf\u6b21\u66f4\u6539\u90fd\u4f1a\u5bfc\u81f4\u5168\u65b0\u90e8\u7f72\uff0c\u56e0\u6b64\u8fd9\u79cd\u6a21\u5f0f\u4e0d\u9002\u7528\u4e8e\u7ecf\u5e38\u66f4\u6539\u7684\u7ad9\u70b9\u2014\u2014\u4f46\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u8bb8\u591a\u9762\u5411\u5185\u5bb9\u7684\u7ad9\u70b9\u6bcf\u5929\u6700\u591a\u66f4\u65b0\u51e0\u6b21\u5185\u5bb9\u3002\u8003\u8651\u535a\u5ba2\u3001\u6587\u6863\u7f51\u7ad9\u3001\u9879\u76ee\u7f51\u7ad9\u2014\u2014\u4efb\u4f55\u5185\u5bb9\u7531\u4e00\u5c0f\u7fa4\u4f5c\u8005\u7f16\u8f91\u7684\u5730\u65b9\u3002\n\u4e3b\u673a\u4fbf\u5b9c\u3002\u4efb\u4f55\u53ef\u4ee5\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u6258\u7ba1\u70d8\u7119\u6570\u636e\u5e94\u7528\u7a0b\u5e8f\u2014\u2014\u65e0\u9700\u4e3a\u6258\u7ba1\u6570\u636e\u5e93\u7cfb\u7edf\u652f\u4ed8\u989d\u5916\u8d39\u7528\u3002\u5c06\u65e0\u670d\u52a1\u5668\u4e3b\u673a\uff08\u4f8b\u5982 Cloud Run\u3001Vercel \u6216 AWS Lambda\uff09\u6269\u5c55\u5230\u96f6\uff0c\u6bcf\u6708\u53ea\u9700\u4e3a\u4f4e\u6d41\u91cf\u90e8\u7f72\u6536\u53d6\u51e0\u7f8e\u5206\u7684\u8d39\u7528\u3002\u6613\u4e8e\u6269\u5c55\u3002\u9700\u8981\u5904\u7406\u66f4\u591a\u6d41\u91cf\uff1f\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u6346\u7ed1\u6570\u636e\u7684\u66f4\u591a\u526f\u672c\u3002\u6c34\u5e73\u6269\u5c55\u70d8\u7119\u6570\u636e\u5e94\u7528\u7a0b\u5e8f\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u5b83\u4eec\u4e5f\u975e\u5e38\u9002\u5408\u5728 Cloudflare \u6216 Fastly \u7b49\u7f13\u5b58\u4ee3\u7406 CDN \u540e\u9762\u8fd0\u884c\u2014\u2014\u5f53\u60a8\u90e8\u7f72\u65b0\u7248\u672c\u65f6\uff0c\u60a8\u53ef\u4ee5\u6e05\u9664\u6574\u4e2a\u7f13\u5b58\u3002\u5f88\u96be\u6253\u7834\u3002\u5728 VPS \u4e0a\u6258\u7ba1\u670d\u52a1\u5668\u7aef\u5e94\u7528\u7a0b\u5e8f\u603b\u662f\u4ee4\u4eba\u4e0d\u5b89\uff0c\u56e0\u4e3a\u53ef\u80fd\u51fa\u9519\u7684\u5730\u65b9\u592a\u591a\u4e86\u2014\u2014\u670d\u52a1\u5668\u53ef\u80fd\u53d7\u5230\u5a01\u80c1\uff0c\u6216\u8005\u6d41\u6c13\u65e5\u5fd7\u6587\u4ef6\u53ef\u80fd\u5bfc\u81f4\u78c1\u76d8\u7a7a\u95f4\u4e0d\u8db3\u3002\u5bf9\u4e8e\u70d8\u7119\u6570\u636e\uff0c\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u662f\u60a8\u9700\u8981\u91cd\u65b0\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u2014\u2014\u5b8c\u5168\u6ca1\u6709\u6570\u636e\u4e22\u5931\u7684\u98ce\u9669\uff0c\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u91cd\u542f\u4ee3\u7801\u7684\u63d0\u4f9b\u8005\u53ef\u4ee5\u81ea\u52a8\u4ece\u9519\u8bef\u4e2d\u6062\u590d\u3002\u652f\u6301\u670d\u52a1\u5668\u7aef\u529f\u80fd\u3002\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u63d0\u4f9b\u4e86\u8bb8\u591a\u4e0a\u8ff0\u4f18\u70b9\uff0c\u4f46\u5b58\u5728\u4efb\u4f55\u52a8\u6001\u529f\u80fd\u90fd\u9700\u8981\u5728\u5ba2\u6237\u7aef JavaScript \u4e2d\u5b9e\u73b0\u7684\u9650\u5236\u3002\u4f7f\u7528\u70d8\u7119\u6570\u636e\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u4e5f\u53ef\u4ee5\u6267\u884c\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u3002\u6a21\u677f\u5316\u9875\u9762\u3002\u5bf9\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u7684\u53e6\u4e00\u4e2a\u6539\u8fdb\uff1a\u5982\u679c\u60a8\u6709 10,000 \u4e2a\u9875\u9762\uff0c\u5219\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u5c06\u9700\u8981\u751f\u6210 10,000 \u4e2a HTML \u6587\u4ef6\u3002\u4f7f\u7528\u70d8\u7119\u6570\u636e\uff0c\u8fd9 10,000 \u4e2a\u9875\u9762\u53ef\u4ee5\u4f5c\u4e3a\u5355\u4e2a SQLite \u6570\u636e\u5e93\u6587\u4ef6\u4e2d\u7684\u884c\u5b58\u5728\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u670d\u52a1\u5668\u7aef\u6a21\u677f\u751f\u6210\u8fd9\u4e9b\u9875\u9762\u3002\u6613\u4e8e\u652f\u6301\u591a\u79cd\u683c\u5f0f\u3002\u7531\u4e8e\u60a8\u7684\u5185\u5bb9\u4f4d\u4e8e\u52a8\u6001\u6570\u636e\u5b58\u50a8\u4e2d\uff0c\u56e0\u6b64\u4ee5\u66ff\u4ee3\u683c\u5f0f\u8f93\u51fa\u76f8\u540c\u7684\u5185\u5bb9\u5f88\u5bb9\u6613\u3002\u6211\u4e3a\u6b64\u4f7f\u7528\u4e86 Datasette \u63d2\u4ef6\uff1adatasette-atom \u53ef\u4ee5\u4ece SQL \u67e5\u8be2\u751f\u6210 Atom \u63d0\u8981\uff0c\u800c datasette-ics \u5bf9 iCalendar \u63d0\u8981\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u4e0e\u7248\u672c\u63a7\u5236\u5f88\u597d\u5730\u96c6\u6210\u3002\u6211\u559c\u6b22\u5c06\u6211\u7684\u7f51\u7ad9\u5185\u5bb9\u7f6e\u4e8e\u7248\u672c\u63a7\u5236\u4e4b\u4e0b\u3002\u70d8\u7119\u6570\u636e\u6a21\u5f0f\u9002\u7528\u4e8e\u4ece git \u5b58\u50a8\u5e93\u8bfb\u53d6\u5185\u5bb9\u5e76\u4f7f\u7528\u5b83\u6765\u6784\u5efa\u4e0e\u90e8\u7f72\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u8d44\u4ea7\u7684\u6784\u5efa\u811a\u672c\u3002\n\u6211\u5bf9\u70d8\u7119\u6570\u636e\u7684\u6700\u521d\u5b9e\u73b0\u90fd\u4f7f\u7528\u4e86 SQLite\u3002\u5b83\u662f\u6b64\u7c7b\u5e94\u7528\u7a0b\u5e8f\u7684\u7406\u60f3\u683c\u5f0f\uff1a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u4ee5\u5b58\u50a8\u4efb\u4f55\u53ef\u4ee5\u8868\u793a\u4e3a\u5173\u7cfb\u8868\u3001JSON \u6587\u6863\u6216\u4e8c\u8fdb\u5236\u5bf9\u8c61\u7684\u4e1c\u897f\u2014\u2014\u57fa\u672c\u4e0a\u662f\u4efb\u4f55\u4e1c\u897f\u3002\u4efb\u4f55\u53ef\u4ee5\u7531\u60a8\u7684\u52a8\u6001\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u4ece\u78c1\u76d8\u8bfb\u53d6\u7684\u683c\u5f0f\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff1aYAML \u6216 CSV \u6587\u4ef6\u3001Berkeley DB \u6587\u4ef6\u6216\u4efb\u4f55\u5176\u4ed6\u53ef\u4ee5\u7531\u78c1\u76d8\u6587\u4ef6\u4e2d\u7684\u53ea\u8bfb\u5b57\u8282\u5b58\u50a8\u6876\u8868\u793a\u7684\u4efb\u4f55\u683c\u5f0f\u3002 [\u6211\u6709\u4e00\u79cd\u9884\u611f\uff0c\u4f60\u751a\u81f3\u53ef\u4ee5\u4f7f\u7528 PostgreSQL\u3001MySQL \u6216 Elasticsearch \u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u901a\u8fc7\u6253\u5305\u5b83\u4eec\u7684\u78c1\u76d8\u8868\u793a\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a Docker \u5bb9\u5668\u7684\u4e00\u90e8\u5206\u53d1\u9001\uff0c\u4f46\u6211\u81ea\u5df1\u8fd8\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u3002] \u4e00\u65e6\u4f60\u7684\u6570\u636e\u5728\u6587\u4ef6\u4e2d\u53ef\u7528\uff0c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u53ef\u4ee5\u4ece\u8be5\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5e76\u4f7f\u7528\u5b83\u6765\u751f\u6210\u548c\u8fd4\u56de\u7f51\u9875\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u670d\u52a1\u5668\u7aef\u8bed\u8a00\u7f16\u5199\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u4ee3\u7801\u3002\u6211\u4f7f\u7528 Python\uff0c\u901a\u5e38\u4e0e\u6211\u7684 Datasette \u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u4e00\u8d77\u4f7f\u7528\uff0c\u5b83\u53ef\u4ee5\u4ece SQLite \u6570\u636e\u5e93\u6587\u4ef6\u4e2d\u8bfb\u53d6\u5e76\u4f7f\u7528 Jinja \u6a21\u677f\u751f\u6210\u9875\u9762\u3002\u6700\u540e\u4e00\u5757\u62fc\u56fe\u662f\u6784\u5efa\u548c\u90e8\u7f72\u811a\u672c\u3002\u6211\u4e3a\u6b64\u4f7f\u7528 GitHub Actions\uff0c\u4f46\u4efb\u4f55 CI \u5de5\u5177\u90fd\u53ef\u4ee5\u5728\u8fd9\u91cc\u5f88\u597d\u5730\u5de5\u4f5c\u3002\u8be5\u811a\u672c\u5c06\u7ad9\u70b9\u5185\u5bb9\u6784\u5efa\u4e3a\u53ef\u90e8\u7f72\u8d44\u4ea7\uff0c\u7136\u540e\u5c06\u8be5\u8d44\u4ea7\u4e0e\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e00\u8d77\u90e8\u7f72\u5230\u6258\u7ba1\u5e73\u53f0\u3002\u6211\u81ea\u5df1\u53d1\u5e03\u7684\u6700\u590d\u6742\u7684 Baked Data \u7ad9\u70b9\u662f\u6211\u7684 Datasette \u9879\u76ee\u7684\u5b98\u65b9\u7f51\u7ad9\uff0cdatasette.io\u2014\u2014\u8fd9\u4e2a repo \u4e2d\u7684\u6e90\u4ee3\u7801\u3002\n\u8be5\u7ad9\u70b9\u662f\u4f7f\u7528 Cloud Run \u90e8\u7f72\u7684\u3002\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u7684 Datasette \u5b9e\u4f8b\uff0c\u4f7f\u7528\u4e3b\u9875\u7684\u81ea\u5b9a\u4e49\u6a21\u677f\u3001\u7ad9\u70b9\u5176\u4ed6\u90e8\u5206\u7684\u81ea\u5b9a\u4e49\u9875\u9762\u548c datasette-template-sql \u63d2\u4ef6\u6765\u6267\u884c SQL \u67e5\u8be2\u5e76\u663e\u793a\u6765\u81ea\u8fd9\u4e9b\u6a21\u677f\u7684\u7ed3\u679c\u3002 content.db \u5305\u542b\u5927\u90e8\u5206\u7ad9\u70b9\u5185\u5bb9\u3002\u5b83\u662f\u901a\u8fc7 build.sh \u811a\u672c\u5728 GitHub Actions \u4e2d\u6784\u5efa\u7684\uff0c\u5b83\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\u4f7f\u7528 markdown-to-sqlite \u5c06 for/ \u6587\u4ef6\u5939\uff08Datasette \u7684\u7528\u4f8b\uff09\u4e2d\u7684 markdown \u6587\u4ef6\u5bfc\u5165\u5230 uses \u8868\u4e2d\u3002\u4f7f\u7528\u6765\u81ea\u66f4\u591a YAML \u6587\u4ef6\u7684\u6570\u636e\u586b\u5145 plugin_repos \u548c tool_repos \u5355\u5217\u8868\u3002\u8fd9\u4e9b\u5c06\u5728\u4e0b\u4e00\u6b65\u4e2d\u4f7f\u7528\u3002\u8fd0\u884c build_directory.py Python \u811a\u672c\u3002\u8fd9\u4f7f\u7528 GitHub GraphQL API \u6765\u83b7\u53d6\u6709\u5173\u6240\u6709\u8fd9\u4e9b\u63d2\u4ef6\u548c\u5de5\u5177\u5b58\u50a8\u5e93\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5b83\u4eec\u7684 README \u6587\u4ef6\u548c\u5b83\u4eec\u6700\u8fd1\u7684\u6807\u8bb0\u7248\u672c\u3002\u4f7f\u7528\u6240\u6709 Datasette \u751f\u6001\u7cfb\u7edf PyPI \u5305\u7684\u6700\u65b0\u4e0b\u8f7d\u7edf\u8ba1\u4fe1\u606f\u586b\u5145\u7edf\u8ba1\u8868\u3002\u8be5\u6570\u636e\u662f\u4ece\u6211\u7684 simonw/package-stats \u5b58\u50a8\u5e93\u4e2d\u7684 stats.json \u6587\u4ef6\u5bfc\u5165\u7684\uff0c\u8be5\u5b58\u50a8\u5e93\u672c\u8eab\u7531\u5728 GitHub Actions \u4e2d\u8fd0\u884c\u7684\u8fd9\u4e2a git \u6293\u53d6\u811a\u672c\u586b\u5145\u3002\u6211\u4e5f\u5c06\u5b83\u7528\u4e8e\u6211\u7684 Datasette Downloads Observable \u7b14\u8bb0\u672c\u3002 blog.db \u5305\u542b\u6765\u81ea\u6211\u7684\u535a\u5ba2\u7684\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9\u5e26\u6709\u4efb\u4f55\u6570\u636e\u96c6\u3001dogsheep \u6216 sqliteutils \u6807\u7b7e\u3002\u8fd9\u662f\u7531 fetch_blog_content.py \u811a\u672c\u83b7\u53d6\u7684\uff0c\u8be5\u811a\u672c\u4e3a\u6211\u7684\u535a\u5ba2\u5185\u5bb9\u70b9\u51fb\u5206\u9875\u7684\u6bcf\u4e2a\u6807\u7b7e Atom \u63d0\u8981\uff0c\u5728 Django \u4e2d\u5b9e\u73b0\u3002 docs-index.db \u662f\u4e00\u4e2a\u6570\u636e\u5e93\u8868\uff0c\u5305\u542b\u6700\u65b0\u7a33\u5b9a Datasette \u7248\u672c\u7684\u6587\u6863\uff0c\u6309\u90e8\u5206\u5206\u89e3\u3002\u8fd9\u4e2a\u6570\u636e\u5e93\u6587\u4ef6\u662f\u4ece\u4e00\u4e2a\u5355\u72ec\u7684\u7ad9\u70b9 stable-docs.datasette.io \u4e0b\u8f7d\u7684\uff0c\u5b83\u662f\u4f5c\u4e3a Datasette \u53d1\u5e03\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\u6784\u5efa\u548c\u90e8\u7f72\u7684\u3002\ndogsheep-index.db \u662f\u652f\u6301\u7ad9\u70b9\u641c\u7d22\u7684\u641c\u7d22\u7d22\u5f15\uff08\u4f8b\u5982\uff0c\u6b64\u641c\u7d22 dogsheep\uff09\u3002\u641c\u7d22\u7d22\u5f15\u7531 dogsheep-beta \u4f7f\u7528\u4ece\u6b64 YAML \u6587\u4ef6\u914d\u7f6e\u7684\u5176\u4ed6\u6570\u636e\u5e93\u6587\u4ef6\u4e2d\u7684\u8868\u4e2d\u63d0\u53d6\u7684\u6570\u636e\u6784\u5efa\u3002\u8be5\u7ad9\u70b9\u6bcf\u5929\u901a\u8fc7\u8ba1\u5212\u64cd\u4f5c\u81ea\u52a8\u90e8\u7f72\u4e00\u6b21\uff0c\u5982\u679c\u6211\u60f3\u786e\u4fdd\u65b0\u7684\u8f6f\u4ef6\u7248\u672c\u53cd\u6620\u5728\u4e3b\u9875\u4e0a\uff0c\u6211\u4e5f\u53ef\u4ee5\u624b\u52a8\u89e6\u53d1\u8be5\u64cd\u4f5c\u3002 Niche Museums \u662f\u5173\u4e8e\u6211\u53c2\u89c2\u8fc7\u7684\u5c0f\u578b\u535a\u7269\u9986\u7684\u535a\u5ba2\u3002\u540c\u6837\uff0c\u5b83\u662f\u5e26\u6709\u81ea\u5b9a\u4e49\u6a21\u677f\u7684 Datasette\u3002\u5927\u90e8\u5206\u5185\u5bb9\u6765\u81ea\u8fd9\u4e2amuseums.yaml \u6587\u4ef6\uff0c\u4f46\u6211\u4e5f\u8fd0\u884c\u4e86\u4e00\u4e2a\u811a\u672c\u6765\u786e\u5b9a\u6bcf\u4e2a\u9879\u76ee\u662f\u4f55\u65f6\u4ece git \u5386\u53f2\u8bb0\u5f55\u4e2d\u521b\u5efa\u6216\u66f4\u65b0\u7684\u3002\u6211\u7684 TILs \u7ad9\u70b9\u5728 Vercel \u4e0a\u8fd0\u884c\uff0c\u5e76\u901a\u8fc7\u6b64\u6784\u5efa\u811a\u672c\uff08\u586b\u5145\u6b64 tils \u8868\uff09\u4ece\u6211\u7684 simonw/til GitHub \u5b58\u50a8\u5e93\u6784\u5efa\u3002\u5b83\u4f7f\u7528 GitHub API \u5c06 GitHub Flavored Markdown \u8f6c\u6362\u4e3a HTML\u3002\u6211\u8fd8\u8fd0\u884c\u4e86\u4e00\u4e2a\u811a\u672c\uff0c\u8be5\u811a\u672c\u751f\u6210\u6bcf\u4e2a\u9875\u9762\u7684\u5c0f\u5c4f\u5e55\u622a\u56fe\uff0c\u5e76\u5c06\u5b83\u4eec\u5b58\u653e\u5728 SQLite \u7684 BLOB \u5217\u4e2d\uff0c\u4ee5\u63d0\u4f9b\u793e\u4ea4\u5a92\u4f53\u9884\u89c8\u5361\uff0c\u8bf7\u53c2\u9605\u6211\u7684 TIL \u7684\u793e\u4ea4\u5a92\u4f53\u5361\u3002\u5728\u4e00\u4e2a\u6211\u81ea\u5df1\u6ca1\u6709\u5de5\u4f5c\u8fc7\u7684\u7ad9\u70b9\u4e2d\uff0c\u6211\u6700\u559c\u6b22\u7684\u8fd9\u79cd\u6a21\u5f0f\u7684\u4f8b\u5b50\u662f Mozilla.org\u3002\u4ed6\u4eec\u4e8e 2018 \u5e74\u5f00\u59cb\u5728\u4ed6\u4eec\u79f0\u4e3a Bedrock \u7684\u7cfb\u7edf\u4e2d\u4f7f\u7528 SQLite\u2014\u2014Paul McLanahan \u8be6\u7ec6\u63cf\u8ff0\u4e86\u5176\u5de5\u4f5c\u539f\u7406\u3002\u4ed6\u4eec\u7684\u7f51\u7ad9\u5185\u5bb9\u5b58\u5728\u4e8e\u4e00\u4e2a\u7ea6 22MB \u7684 SQLite \u6570\u636e\u5e93\u6587\u4ef6\u4e2d\uff0c\u8be5\u6587\u4ef6\u88ab\u6784\u5efa\u5e76\u4e0a\u4f20\u5230 S3\uff0c\u7136\u540e\u5b9a\u671f\u4e0b\u8f7d\u5230\u4ed6\u4eec\u7684\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u670d\u52a1\u5668\u3002\n\u60a8\u53ef\u4ee5\u67e5\u770b\u4ed6\u4eec\u7684\u5065\u5eb7\u68c0\u67e5\u9875\u9762\u4ee5\u67e5\u770b\u4e0a\u6b21\u4e0b\u8f7d\u6570\u636e\u5e93\u7684\u65f6\u95f4\uff0c\u5e76\u81ea\u5df1\u83b7\u53d6 SQLite \u6587\u4ef6\u7684\u526f\u672c\u3002\u4f7f\u7528 Datasette \u63a2\u7d22\u8fd9\u4e00\u70b9\u5f88\u6709\u8da3\uff1a\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u5728\u8fc7\u53bb\u5341\u5e74\u4e2d\u5927\u53d7\u6b22\u8fce\u3002\u5b83\u4eec\u5c06\u6258\u7ba1\u7ad9\u70b9\u7684\u6210\u672c\u964d\u4f4e\u5230\u51e0\u4e4e\u4e3a\u96f6\uff0c\u63d0\u4f9b\u51fa\u8272\u7684\u6027\u80fd\uff0c\u4e0e CDN \u914d\u5408\u826f\u597d\uff0c\u5e76\u751f\u6210\u6781\u4e0d\u53ef\u80fd\u635f\u574f\u7684\u7ad9\u70b9\u3002\u8c28\u614e\u4f7f\u7528\uff0c\u70d8\u7119\u6570\u636e\u4fdd\u7559\u4e86\u5927\u90e8\u5206\u8fd9\u4e9b\u7279\u5f81\uff0c\u540c\u65f6\u4ecd\u7136\u652f\u6301\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u6267\u884c\u3002 datasette.io \u63d0\u4f9b 1,588 \u79cd\u4e0d\u540c\u5185\u5bb9\u7684\u641c\u7d22\uff0c\u4ee5\u53ca\u5728\u63d2\u4ef6\u548c\u5de5\u5177\u9875\u9762\u4e0a\u66f4\u7b80\u5355\u7684\u641c\u7d22\u3002\u6240\u6709\u4e09\u4e2a\u7ad9\u70b9\u90fd\u63d0\u4f9b\u4f7f\u7528\u670d\u52a1\u5668\u7aef SQL \u67e5\u8be2\u914d\u7f6e\u7684 Atom \u63d0\u8981\uff1aDatasette\u3001Niche Museums\u3001TIL\u3002 Niche Museums \u63d0\u4f9b\u4e86\u4e00\u4e2a\u201c\u4f7f\u7528\u6211\u7684\u4f4d\u7f6e\u201d\u6309\u94ae\uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u5229\u7528 datasette-haversine \u63d2\u4ef6\u7684 SQL \u67e5\u8be2\u4e3a\u60a8\u9644\u8fd1\u7684\u535a\u7269\u9986\u63d0\u4f9b\u670d\u52a1\u3002\u5f53\u7528\u4e8e\u5927\u578b\u7ad9\u70b9\u65f6\uff0c\u5bf9\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u7684\u4e00\u4e2a\u5e38\u89c1\u62b1\u6028\u662f\uff0c\u5982\u679c\u6784\u5efa\u5668\u5fc5\u987b\u751f\u6210\u6570\u4e07\u4e2a\u9875\u9762\uff0c\u5219\u6784\u5efa\u65f6\u95f4\u4f1a\u53d8\u5f97\u5f88\u957f\u3002\n\u4f7f\u7528\u70d8\u7119\u6570\u636e\uff0c\u5355\u4e2a\u6a21\u677f\u6587\u4ef6\u548c SQLite \u6570\u636e\u5e93\u8868\u4e2d\u7684 10,000 \u884c\u53ef\u4ee5\u751f\u6210 10,000 \u4e2a\u9875\u9762\u3002\u8fd9\u4e5f\u4f7f\u5f97\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u8fed\u4ee3\u5468\u671f\u66f4\u5feb\uff1a\u60a8\u53ef\u4ee5\u7f16\u8f91\u6a21\u677f\u5e76\u70b9\u51fb\u201c\u5237\u65b0\u201d\u4ee5\u7acb\u5373\u67e5\u770b\u65b0\u6a21\u677f\u5448\u73b0\u7684\u4efb\u4f55\u9875\u9762\uff0c\u800c\u65e0\u9700\u91cd\u5efa\u4efb\u4f55\u9875\u9762\u3002\u5982\u679c\u60a8\u60f3\u5c1d\u8bd5\u70d8\u7119\u6570\u636e\u6a21\u5f0f\uff0c\u6211\u5efa\u8bae\u60a8\u5f00\u59cb\u4f7f\u7528 Datasette\u3001GitHub Actions \u548c Vercel \u7684\u7ec4\u5408\u3002\u5e0c\u671b\u6211\u4e0a\u9762\u63d0\u4f9b\u7684\u793a\u4f8b\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u2014\u2014\u5982\u679c\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u4e5f\u53ef\u4ee5\u968f\u65f6\u5728 Twitter \u6216 Datasette \u8ba8\u8bba\u8bba\u575b\u4e0a\u4e0e\u6211\u8054\u7cfb\u3002", "note_en": "I\u2019ve been exploring an architectural pattern for publishing websites over the past few years that I call the \u201cBaked Data\u201d pattern. It provides many of the advantages of static site generators while avoiding most of their limitations. I think it deserves to be used more widely.\n  Baked Data: bundling a read-only copy of your data alongside the code for your application, as part of the same deployment\n Most dynamic websites keep their code and data separate: the code runs on an application server, the data lives independently in some kind of external data store\u2014something like PostgreSQL, MySQL or MongoDB.\n With Baked Data, the data is deployed as part of the application bundle. Any time the content changes, a fresh copy of the site is deployed that includes those updates.\n I mostly use SQLite database files for this, but plenty of other formats can work here too.\n This works particularly well with so-called \u201cserverless\u201d deployment platforms\u2014platforms that support stateless deployments and only charge for resources spent servicing incoming requests (\u201cscale to zero\u201d).\n Since every change to the data results in a fresh deployment this pattern doesn\u2019t work for sites that change often\u2014but in my experience many content-oriented sites update their content at most a few times a day. Consider blogs, documentation sites, project websites\u2014anything where content is edited by a small group of authors.\n   Inexpensive to host. Anywhere that can run application code can host a Baked Data application\u2014there\u2019s no need to pay extra for a managed database system. Scale to zero serverless hosts such as  Cloud Run,  Vercel or  AWS Lambda will charge only cents per month for low-traffic deployments.\n Easy to scale. Need to handle more traffic? Run more copies of your application and its bundled data. Horizontally scaling Baked Data applications is trivial. They\u2019re also a great fit to run behind a caching proxy CDN such as Cloudflare or Fastly\u2014when you deploy a new version you can purge that entire cache.\n Difficult to break. Hosting server-side applications on a VPS is always disquieting because there\u2019s so much that might go wrong\u2014the server could be compromised, or a rogue log file could cause it to run out of disk space. With Baked Data the worst that can happen is that you need to re-deploy the application\u2014there\u2019s no risk at all of data loss, and providers that can auto-restart code can recover from errors automatically.\n Server-side functionality is supported. Static site generators provide many of the above benefits, but with the limitation that any dynamic functionality needs to happen in client-side JavaScript. With a Baked Data application you can execute server-side code too.\n Templated pages. Another improvement over static site generators: if you have 10,000 pages, a static site generator will need to generate 10,000 HTML files. With Baked Data those 10,000 pages can exist as rows in a single SQLite database file, and the pages can be generated at run-time using a server-side template.\n Easy to support multiple formats. Since your content is in a dynamic data store, outputting that same content in alternative formats is easy. I use Datasette plugins for this:  datasette-atom can produce an Atom feed from a SQL query, and  datasette-ics does the same thing for iCalendar feeds.\n Integrates well with version control. I like to keep my site content under version control. The Baked Data pattern works well with build scripts that read content from a git repository and use it to build assets that are bundled with the deployment.\n  My initial implementations of Baked Data have all used SQLite. It\u2019s an ideal format for this kind of application: a single binary file which can store anything that can be represented as relational tables,  JSON documents or  binary objects\u2014essentially anything at all.\n Any format that can be read from disk by your dynamic server-side code will work too: YAML or CSV files, Berkeley DB files, or anything else that can be represented by a bucket of read-only bytes in a file on disk.\n [I have a hunch that you could even use something like PostgreSQL, MySQL or Elasticsearch by packaging up their on-disk representations and shipping them as part of a Docker container, but I\u2019ve not tried that myself yet.]\n Once your data is available in a file, your application code can read from that file and use it to generate and return web pages.\n You can write code that does this in any server-side language. I use Python, usually with my  Datasette application server which can read from a SQLite database file and use  Jinja templates to generate pages.\n The final piece of the puzzle is a build and deploy script. I use GitHub Actions for this, but any CI tool will work well here. The script builds the site content into a deployable asset, then deploys that asset along with the application code to a hosting platform.\n  The most sophisticated Baked Data site I\u2019ve published myself is the official website for my Datasette project,  datasette.io\u2014source code  in this repo.\n  The site is deployed using Cloud Run. It\u2019s actually a heavily customized Datasette instance, using  a custom template for the homepage,  custom pages for other parts of the site and the  datasette-template-sql plugin to execute SQL queries and display their results from those templates.\n  content.db has most of the site content. It is built inside GitHub Actions by the  build.sh script, which does the following: Import the markdown files from the  for/ folder (use-cases for Datasette) into the  uses table using  markdown-to-sqlite.\n Populate the  plugin_repos and  tool_repos single-column tables using data from more YAML files. These are used in the next step.\n Runs the  build_directory.py Python script. This uses the GitHub GraphQL API to fetch information about all of those plugin and tool repositories, including their README files and their most recent tagged  releases.\n Populates a  stats table with the latest download statistics for all of the Datasette ecosystem PyPI packages. That data is imported from a  stats.json file in my  simonw/package-stats repository, which is itself populated by this  git scraping script that runs in GitHub Actions. I also use this for my  Datasette Downloads Observable notebook.\n blog.db contains content from my blog that carries any of the  datasette,  dogsheep or  sqliteutils tags. This is fetched by the  fetch_blog_content.py script, which hits the paginated per-tag Atom feed for my blog content,  implemented in Django here.\n docs-index.db is a database table containing the documentation for the most recent stable Datasette release, broken up by  sections. This database file is downloaded from a separate site,  stable-docs.datasette.io, which is built and deployed as  part of Datasette\u2019s release process.\n dogsheep-index.db is the search index that powers site search (e.g.  this search for dogsheep). The search index is built by  dogsheep-beta using data pulled from tables in the other database files, as configured by  this YAML file.\n The site is automatically deployed once a day by  a scheduled action, and I can also manually trigger that action if I want to ensure a new software release is reflected on the homepage.\n   Niche Museums is my blog about tiny museums that I\u2019ve visited. Again, it\u2019s Datasette with custom templates. Most of the content comes from this  museums.yaml file, but I also run  a script to figure out when each item was created or updated from the git history.\n My TILs site runs on  Vercel and is built from my  simonw/til GitHub repository by  this build script (populating  this tils table). It uses the GitHub API to convert GitHub Flavored Markdown to HTML. I\u2019m also running  a script that generates small screenshots of each page and stashes them in a BLOB column in SQLite in order to provide social media preview cards, see  Social media cards for my TILs.\n My favourite example of this pattern in a site that I haven\u2019t worked on myself is  Mozilla.org.\n They started using SQLite back in 2018 in a system they call Bedrock\u2014Paul McLanahan provides  a detailed description of how this works.\n Their site content lives in a ~22MB SQLite database file, which is built and uploaded to S3 and then downloaded on a regular basis to each of their application servers.\n You can view  their healthcheck page to see when the database was last downloaded, and grab a copy of the SQLite file yourself. It\u2019s fun to explore that using Datasette:\n   Static site generators have exploded in popularity over the past ten years. They drive the cost of hosting a site down to almost nothing, provide excellent performance, work well with CDNs and produce sites that are extremely unlikely to break.\n Used carefully, the Baked Data keeps most of these characteristics while still enabling server-side code execution.\n  datasette.io  provides search across 1,588 different pieces of content, plus  simpler search on the plugins and tools pages.\n  All three sites provide Atom feeds that are configured using a server-side SQL query:  Datasette,  Niche Museums,  TILs.\n Niche Museums offers a \u201cUse my location\u201d button which then serves  museums near you, using  a SQL query that makes use of the  datasette-haversine plugin.\n A common complaint about static site generators when used for larger sites is that build times can get pretty long if the builder has to generate tens of thousands of pages.\n With Baked Data, 10,000 pages can be generated by a single template file and 10,000 rows in a SQLite database table.\n This also makes for a faster iteration cycle during development: you can edit a template and hit \u201crefresh\u201d to see any page rendered by the new template instantly, without needing to rebuild any pages.\n  If you want to give the Baked Data pattern a try, I recommend starting out using the combination of  Datasette,  GitHub Actions and  Vercel. Hopefully the examples I\u2019ve provided above are a good starting point\u2014also feel free to reach out to me  on Twitter or in  the Datasette Discussions forum with any questions.", "posttime": "2021-07-29 22:08:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e,data,datasette", "title": "\u70d8\u7119\u6570\u636e\u67b6\u6784\u6a21\u5f0f", "title_en": "The Baked Data architectural pattern", "transed": 1, "url": "https://simonwillison.net/2021/Jul/28/baked-data/", "via": "", "real_tags": ["\u6570\u636e", "data", "datasette"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070287, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u559c\u6b22\u6570\u7ec4\u8bed\u8a00 APL\u3001J \u548c k/q \u7684\u7406\u7531\u6709\u5f88\u591a\uff01\u8046\u542c\u5e76\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\u9605\u8bfb\u66f4\u591a", "note_en": "There are lots of reasons to like the array languages APL, J and k/q! Listen and find out more.\n Read More", "posttime": "2021-07-29 22:08:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "programming,\u64ad\u5ba2,\u7f16\u7a0b,cast,array", "title": "The Array Cast\uff1a\u5173\u4e8e\u6570\u7ec4\u7f16\u7a0b\u8bed\u8a00\u7684\u64ad\u5ba2", "title_en": "The Array Cast: A podcast about the array programming languages", "transed": 1, "url": "https://www.arraycast.com/episodes/", "via": "", "real_tags": ["\u64ad\u5ba2", "\u7f16\u7a0b", "cast", "array"]}, {"category": "", "categoryclass": "", "imagename": "0e2b48fb7f64e905c8766e883336998d.jpg", "infoid": 1070286, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\uff0c\u542c\u8bc1\u4f1a\u88ab\u91cd\u65b0\u5b9a\u4e49\u4e3a\u4e00\u79cd\u6218\u672f\u6d3b\u52a8\u2014\u2014\u4e00\u79cd\u53ef\u4ee5\u51b3\u5b9a\u4eba\u7c7b\u751a\u81f3\u56fd\u5bb6\u751f\u5b58\u7684\u6d3b\u52a8\u3002\u6839\u636e\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\u7f8e\u56fd\u52a9\u7406\u6218\u4e89\u90e8\u957f\u59d4\u6258\u64b0\u5199\u7684\u4e00\u4efd\u9ad8\u8038\u62a5\u544a\u7684\u524d\u8a00\u201c\u6218\u4e89\u7684\u7ed3\u675f\uff1a\u56fe\u5f62\u8bb0\u5f55\u201d\uff0c\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u4e0d\u662f\u4ee5\u4e00\u58f0\u5de8\u54cd\u7ed3\u675f\uff0c\u800c\u662f\u5982\u8457\u540d\u8bd7\u53e5\u4e2d\u7684\u545c\u54bd\u58f0.\u8fd9\u5f20\u7167\u7247\u5728\u5e7b\u706f\u7247\u4e0a\u663e\u793a\u4e86\u516d\u6761\u6c34\u5e73\u7ebf\uff0c\u63cf\u7ed8\u4e86 1918 \u5e74 11 \u6708 11 \u65e5\u4e0a\u5348 11:00 \u505c\u6218\u524d\u4e00\u5206\u949f\u548c\u540e\u4e00\u5206\u949f\uff0c\u6469\u6cfd\u5c14\u6cb3\u9644\u8fd1\u7f8e\u56fd\u524d\u7ebf\u7684\u70ae\u5175\u6d3b\u52a8\u3002\u5de6\u4fa7\u63cf\u7ed8\u505c\u6218\u524d\u4e00\u5206\u949f\u7684\u70ae\u5175\u6d3b\u52a8\u5e76\u663e\u793a\u51fa\u4e00\u8fde\u4e32\u952f\u9f7f\u72b6\u7684\u7ebf\u6761\uff08\u201c\u5168\u67aa\u5c04\u51fb\u201d\uff09\u3002\u5728\u53f3\u4fa7\uff0c\u63cf\u7ed8\u4e86\u505c\u6218\u540e\u4e00\u5206\u949f\u7684\u70ae\u5175\u6d3b\u52a8\uff0c\u53ea\u6709\u6d41\u7545\u7684\u7ebf\u6761\uff08\u201c\u6240\u6709\u67aa\u58f0\u201d\uff09\u3002 11:01:01 \u5de6\u53f3\u4e24\u6b21\u5c0f\u5e45\u4e0b\u8dcc\u5f52\u56e0\u4e8e\u4e00\u4e2a\u9762\u56e2\u7537\u5b69\u4e3a\u5e86\u795d\u505c\u706b\u5f00\u4e86\u4e24\u6b21\u624b\u67aa\u3002\u9664\u4e86\u8fd9\u4e9b\u67aa\u58f0\u4e4b\u5916\uff0c\u70ae\u5175\u7684\u6d3b\u52a8\u4f3c\u4e4e\u5b8c\u5168\u505c\u6b62\u4e86\uff0c\u6218\u573a\u4e0a\u7684\u67aa\u58f0\u987f\u65f6\u53d8\u5f97\u7a7a\u8361\u8361\u7684\u3002 \u201c\u6218\u4e89\u7ed3\u675f\u201d\u7684\u6807\u9898\u8bf4\uff0c\u8fd9\u662f\u7f8e\u56fd\u524d\u7ebf\u70ae\u5175\u6d3b\u52a8\u7684\u6700\u540e\u8bb0\u5f55\uff0c\u56fe\u50cf\u662f\u4ece\u7f8e\u56fd\u6d4b\u8ddd\u4eea\u53d1\u51fa\u7684\u3002 \u201c\u6d4b\u8ddd\uff0c\u201d\u5b83\u5199\u9053\uff0c\u201c\u662f\u5b9a\u4f4d\u654c\u65b9\u706b\u70ae\u4f4d\u7f6e\u548c\u53e3\u5f84\u7684\u91cd\u8981\u624b\u6bb5\u3002\u201d\u5f53\u8be5\u56fe\u50cf\u5728\u300a\u7535\u529b\u6742\u5fd7\u300b(Journal of Electricity) \u4e0a\u88ab\u8f6c\u8f7d\u65f6\uff0c\u6709\u5173\u5b83\u7684\u58f0\u660e\u751a\u81f3\u66f4\u4e3a\u5b8f\u5927\uff1a\u201c\u771f\u6b63\u7684\u5386\u53f2\u5728\u8fd9\u91cc\u662f\u7528\u7535\u5199\u6210\u7684\uff01\u201d \u201c\u6218\u4e89\u7684\u7ec8\u7ed3\u201d\u662f\u901a\u8fc7\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\u53d1\u660e\u7684\u4f17\u591a\u58f0\u5b66\u9632\u5fa1\u65b9\u6cd5\u4e4b\u4e00\u5236\u4f5c\u7684\u3002\u5728\u6218\u4e89\u5f00\u59cb\u65f6\uff0c\u58f0\u5b66\u9632\u5fa1\u7684\u6982\u5ff5\u51e0\u4e4e\u65e0\u4eba\u77e5\u6653\u3002\u6ca1\u6709\u4e00\u652f\u4e3b\u8981\u519b\u961f\u62e5\u6709\u901a\u8fc7\u8ddf\u8e2a\u654c\u4eba\u53d1\u51fa\u7684\u58f0\u97f3\u6765\u8ddf\u8e2a\u654c\u4eba\u4f4d\u7f6e\u7684\u53ef\u9760\u624b\u6bb5\u3002\u7136\u800c\uff0c\u5230\u6218\u4e89\u7ed3\u675f\u65f6\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5f00\u53d1\u4e86\u65b0\u7684\u6280\u672f\u548c\u58f0\u97f3\u5b9a\u4f4d\u6280\u672f\uff0c\u901a\u5e38\u662f\u4e3a\u4e86\u5e94\u5bf9\u65b0\u6280\u672f\u7684\u8fdb\u653b\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4eba\u90fd\u5728\u65e0\u6570\u573a\u5408\u4f7f\u7528\u8fc7\u8fd9\u4e9b\u65b9\u6cd5\u2014\u2014\u4ece\u800c\u4ea7\u751f\u4e86\u65b0\u7684\u201c\u58f0\u5b66\u9632\u5fa1\u201d\u6a21\u5f0f\u3002\u7136\u800c\uff0c\u4e00\u79cd\u65b0\u7684\u8fdb\u653b\u6b66\u5668\u7684\u51fa\u73b0\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u65b0\u7684\u9632\u5fa1\u65b9\u6cd5\u5c31\u5bb9\u6613\u83b7\u5f97\u3002\u636e\u7687\u5bb6\u6d77\u519b\u5fd7\u613f\u9884\u5907\u5f79\u4e2d\u6821\u963f\u5c14\u5f17\u96f7\u5fb7\u00b7\u7f57\u6797\u68ee (Alfred Rawlinson) \u79f0\uff0c\u654c\u4eba\u5f88\u5bb9\u6613\u8eb2\u5728\u4e91\u5c42\u540e\u9762\u3002\u9632\u5fa1\u7684\u67aa\u5e94\u8be5\u5982\u4f55\u51fb\u4e2d\u4ed6\u4eec\u770b\u4e0d\u5230\u7684\u7269\u4f53\uff1f\u4ed6\u8bf4\uff0c\u7b54\u6848\u201c\u975e\u5e38\u7b80\u5355\u2014\u2014\u5373\uff0c\u867d\u7136\u6211\u4eec\u770b\u4e0d\u5230\u5b83\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u542c\u5230\u5b83\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u7528\u773c\u775b\u7784\u51c6\uff0c\u5982\u679c\u6211\u4eec\u8981\u5c04\u51fb\uff0c\u5c31\u4e0d\u5f97\u4e0d\u7528\u8033\u6735\u7784\u51c6\u3002\u201d\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ed6\u5199\u9053\uff0c\u201c\u7406\u8bba\u65e0\u8bba\u591a\u4e48\u6b63\u786e\uff0c\u8981\u8f6c\u5316\u4e3a\u5b9e\u8df5\uff0c\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\u3002\u201d\u76f4\u5230 20 \u4e16\u7eaa\u65e9\u671f\uff0c\u7a7a\u95f4\u542c\u89c9\u51e0\u4e4e\u90fd\u662f\u4ece\u58f0\u97f3\u7269\u7406\u5b66\u6216\u542c\u89c9\u751f\u7406\u5b66\u548c\u5fc3\u7406\u5b66\u7684\u89d2\u5ea6\u8fdb\u884c\u7814\u7a76\u7684\u3002\u5728\u6218\u4e89\u671f\u95f4\uff0c\u5b83\u88ab\u91cd\u65b0\u5851\u9020\u4e3a\u4e00\u79cd\u4ece\u6218\u7565\u89d2\u5ea6\u7406\u89e3\u7684\u6218\u672f\u6d3b\u52a8\u2014\u2014\u53ef\u4ee5\u51b3\u5b9a\u4eba\u7c7b\u751a\u81f3\u56fd\u5bb6\u7684\u751f\u5b58\u3002\u542c\u89c9\u7a7a\u95f4\u611f\u77e5\u66fe\u7ecf\u88ab\u8ba4\u4e3a\u662f\u89c6\u89c9\u7a7a\u95f4\u611f\u77e5\u7684\u9644\u5c5e\uff0c\u73b0\u5728\u88ab\u65b0\u7406\u89e3\u4e3a\u4e00\u9879\u81f3\u5173\u91cd\u8981\u7684\u6280\u80fd\uff0c\u201c\u542c\u89c9\u201d\u7a81\u7136\u6620\u5c04\u5230\u6c11\u65cf\u56fd\u5bb6\u7684\u6743\u529b\u4e0a\u3002\n\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u4e2d\u4f7f\u7528\u7684\u7b2c\u4e00\u4e2a\u58f0\u97f3\u5b9a\u4f4d\u5668\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u201c\u770b\u5230\u201d\u58f0\u97f3\u7684\u60f3\u6cd5\u3002\u6709\u4e9b\u662f\u57fa\u4e8e\u89c6\u89c9\u6280\u672f\uff0c\u5e76\u5c06\u6e90\u81ea\u5149\u5b66\u79d1\u5b66\u7684\u539f\u7406\u8f6c\u79fb\u5230\u58f0\u5b66\u9886\u57df\u3002 1916 \u5e74\uff0c\u4e00\u4f4d\u6cd5\u56fd\u9646\u519b\u4e2d\u5c09\u8bbe\u8ba1\u4e86\u4e00\u79cd viseur acoustique\uff08\u201c\u58f0\u5b66\u9762\u7f69\u201d\uff09\uff0c\u8fd9\u662f\u4e00\u79cd\u7531\u955c\u5b50\u548c\u6307\u5357\u9488\u7ec4\u6210\u7684\u624b\u6301\u8bbe\u5907\u3002\u4e00\u540d\u58eb\u5175\u4f7f\u7528\u8be5\u4eea\u5668\u5c06\u4ed6\u7684\u8138\u5728\u955c\u5b50\u4e2d\u7684\u53cd\u5c04\u5c45\u4e2d\uff0c\u8fd9\u6837\u4ed6\u5c31\u53ef\u4ee5\u540c\u6837\u6e05\u695a\u5730\u770b\u5230\u81ea\u5df1\u7684\u8033\u6735\u3002\u7f57\u76d8\u7136\u540e\u5927\u6982\u4f1a\u7ed9\u51fa\u58f0\u97f3\u7684\u65b9\u5411\u3002\u5728\u82f1\u683c\u5170\u8fdb\u884c\u4e86\u4f7f\u7528\u8bd5\u542c\u76d8\u7684\u5b9e\u9a8c\uff0c\u8be5\u6280\u672f\u57fa\u4e8e\u8fd9\u6837\u4e00\u79cd\u60f3\u6cd5\uff0c\u5373\u5f53\u9694\u97f3\u76d8\u9762\u5411\u58f0\u6e90\u65f6\uff0c\u58f0\u50cf\u5c06\u5728\u5706\u76d8\u4e2d\u5fc3\u4e0e\u9694\u97f3\u76d8\u76f8\u5bf9\u7684\u4e00\u4fa7\u5f62\u6210\u3002\u58f0\u97f3\u3002\u8fd9\u4e2a\u60f3\u6cd5\u88ab\u63d0\u51fa\u4f5c\u4e3a\u5149\u5b66\u4e2d\u963f\u62c9\u6208\u5149\u6591\u7684\u58f0\u5b66\u6a21\u62df\uff0c\u7531\u4e8e\u5149\u7684\u6ce2\u52a8\u6027\uff0c\u4e00\u4e2a\u4eae\u70b9\u51fa\u73b0\u5728\u5706\u5f62\u7269\u4f53\u7684\u9634\u5f71\u4e2d\u5fc3\u3002\u867d\u7136\u8bf8\u5982\u58f0\u5b66\u906e\u9633\u677f\u548c\u542c\u97f3\u76d8\u4e4b\u7c7b\u7684\u6280\u672f\u65e2\u4e0d\u662f\u7279\u522b\u6709\u6548\u4e5f\u4e0d\u5b9e\u7528\uff0c\u4f46\u4f5c\u4e3a\u6218\u4e89\u4e2d\u51fa\u73b0\u7684\u6700\u6301\u4e45\u7684\u58f0\u5b66\u9632\u5fa1\u6280\u672f\u4e4b\u4e00\uff0cBaillaud \u629b\u7269\u9762\u4e5f\u662f\u57fa\u4e8e\u89c6\u89c9\u6280\u672f\u7684\u3002\u5c3d\u7ba1\u5386\u53f2\u4e0a\u6709\u58f0\u5b66\u53cd\u5c04\u5668\u7684\u4f8b\u5b50\uff0c\u4f46\u7b2c\u4e00\u4e2a\u4e13\u95e8\u4e3a\u519b\u4e8b\u7528\u9014\u8bbe\u8ba1\u7684\u629b\u7269\u9762\u58f0\u5b66\u53cd\u5c04\u5668\u662f\u7531 Ren\u00e9 Baillaud \u5728 1915 \u5e74\u53d1\u660e\u7684\uff0c\u5e76\u5177\u6709\u76d8\u5b50\u6216\u7897\u7684\u5f62\u5f0f\u3002 Baillaud \u662f\u56fe\u5362\u5179\u5929\u6587\u53f0\u7684\u4e00\u4f4d\u5929\u6587\u5b66\u5bb6\uff0c\u4ed6\u5728\u725b\u987f\u671b\u8fdc\u955c\u4e0a\u6a21\u62df\u4e86\u4ed6\u7684\u8bbe\u5907\u3002\u4ed6\u7684\u8bbe\u8ba1\u57fa\u4e8e\u8fd9\u6837\u4e00\u4e2a\u524d\u63d0\uff0c\u5373\u629b\u7269\u9762\u955c\u65e0\u8bba\u662f\u53cd\u5c04\u5149\u8fd8\u662f\u53cd\u5c04\u58f0\u97f3\uff0c\u90fd\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u53cd\u5c04\u7279\u6027\u3002\u5728\u8d1d\u7ea6\u7684\u56de\u5fc6\u5f55\u4e2d\uff0c\u4e00\u7cfb\u5217\u7167\u7247\u5c55\u793a\u4e86\u58f0\u5b66\u629b\u7269\u9762\u7ecf\u8fc7\u5927\u7ea6\u4e00\u5e74\u7684\u5bc6\u96c6\u5b9e\u9a8c\u7684\u53d1\u5c55\u3002\u6211\u4eec\u53d1\u73b0\u4e86\u8d8a\u6765\u8d8a\u5927\u7684\u4e50\u5668\uff0c\u76f4\u5f84\u4ece 60 \u5398\u7c73\u5230 3 \u7c73\u4e0d\u7b49\uff1b\u5f62\u72b6\u5404\u5f02\uff0c\u4f7f\u76d8\u5b50\u770b\u8d77\u6765\u4e0d\u50cf\u51f9\u76d8\uff0c\u800c\u66f4\u50cf\u6df1\u7897\uff1b\u548c\u4e0d\u540c\u7684\u914d\u7f6e\uff0c\u5176\u4e2d\u5305\u62ec\u56db\u4e2a\u629b\u7269\u9762\u5806\u53e0\u6210\u4e24\u6392\u3002\u5728\u6700\u5927\u7126\u70b9\u4e0a\u4f7f\u7528\u7c7b\u4f3c\u542c\u8bca\u5668\u7684\u8bbe\u5907\u6536\u542c\u7684\u5355\u4e2a\u5ba1\u8ba1\u5458\u53d8\u6210\u4e86\u4e24\u4e2a\u5ba1\u8ba1\u5458\uff0c\u4ed6\u4eec\u4e32\u8054\u6536\u542c\uff0c\u800c\u6bcf\u4e2a\u4eba\u90fd\u5750\u5728\u8bbe\u5907\u7684\u4e24\u7aef\uff0c\u4f7f\u7528\u624b\u8f6e\u65cb\u8f6c\u76d8\u5b50\u3002\u6211\u4eec\u8fd8\u53d1\u73b0\u5f15\u5165\u4e86\u81ea\u52a8\u822a\u5411\u7ed8\u56fe\u4eea\uff0c\u8fd9\u662f\u4e00\u79cd\u8ddf\u8e2a\u5ba1\u8ba1\u5458\u8fd0\u52a8\u7684\u6210\u50cf\u6280\u672f\uff0c\u4ece\u800c\u4ea7\u751f\u98de\u673a\u8f68\u8ff9\u7684\u89c6\u89c9\u8bb0\u5f55\u3002\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u7684\u519b\u7528\u98de\u673a\u4ea7\u751f\u4e86\u51e0\u79cd\u58f0\u97f3\uff1a\u87ba\u65cb\u6868\u7684\u8282\u62cd\u58f0\u3001\u53d1\u52a8\u673a\u58f0\u97f3\u4ee5\u53ca\u7a7a\u6c14\u4e0e\u8fd0\u52a8\u98de\u673a\u673a\u8eab\u4e4b\u95f4\u7684\u6469\u64e6\u5f15\u8d77\u7684\u632f\u52a8\u3002\u7136\u800c\uff0c\u6700\u54cd\u4eae\u4e14\u6700\u5bb9\u6613\u8bc6\u522b\u7684\u58f0\u97f3\u662f\u6240\u8c13\u7684\u201c\u6392\u6c14\u97f3\u201d\u3002\u5404\u79cd\u98de\u673a\u7684\u6392\u6c14\u97f3\u5728 80 \u8d6b\u5179\u5230 130 \u8d6b\u5179\u4e4b\u95f4\uff0c\u867d\u7136\u8fd9\u4e2a\u97f3\u8c03\u5728\u98de\u673a\u8fd0\u52a8\u65f6\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u59cb\u7ec8\u662f\u4f4e\u9891\u58f0\u97f3\u3002\u4e3a\u4e86\u53cd\u5c04\u98de\u673a\u7684\u4f4e\u9891\u58f0\u97f3\uff0c\u5404\u4e3b\u529b\u519b\u90fd\u7814\u5236\u4e86\u5587\u53ed\u58f0\u5b9a\u4f4d\u5668\uff08\u4e5f\u79f0\u4e3a\u5587\u53ed\u58f0\u5b9a\u4f4d\u5668\uff09\uff0c\u7528\u53ef\u4ee5\u53cd\u5c04\u4f4e\u9891\u58f0\u97f3\u7684\u5927\u9525\u5f62\u5587\u53ed\u4ee3\u66ff\u4e86\u706b\u70ae\u6d4b\u8ddd\u88c5\u7f6e\u7684\u5c0f\u5587\u53ed\u3002\u636e\u5251\u6865\u5927\u5b66\u751f\u7406\u5b66\u6559\u6388\u300120\u4e16\u7eaa\u521d\u82f1\u56fd\u9632\u7a7a\u5b9e\u9a8c\u7ec4\u4e3b\u4efbAV\u5e0c\u5c14\u4ecb\u7ecd\uff0c\u82f1\u56fd\u9646\u519b\u7814\u5236\u7684\u7b2c\u4e00\u79cd\u5c0f\u53f7\u58f0\u97f3\u5b9a\u4f4d\u5668\u53ea\u6709\u4e00\u5bf9\u5927\u53f7\u89d2\uff0c\u5176\u53e3\u90e8\u76f4\u5f84\u7ea6 40 \u82f1\u5bf8\u3002\u8be5\u8bbe\u5907\u4e8e 1917 \u5e74\u9996\u6b21\u7528\u4f5c\u4f26\u6566\u9632\u7a7a\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u53ea\u80fd\u786e\u5b9a\u654c\u673a\u7684\u6c34\u5e73\u65b9\u4f4d\u3002\u51e0\u4e4e\u7acb\u5373\u5f00\u53d1\u7684\u7b2c\u4e8c\u79cd\u578b\u53f7\u6709\u4e24\u5bf9\u53f7\u89d2\uff0c\u6709\u65f6\u88ab\u79f0\u4e3a\u201c\u56db\u5c0f\u53f7\u201d\u6216\u201c\u56db\u53f7\u89d2\u201d\u58f0\u97f3\u5b9a\u4f4d\u5668\u3002\u4e00\u5bf9\u5587\u53ed\u7528\u4e8e\u786e\u5b9a\u98de\u673a\u7684\u4ef0\u89d2\uff08\u9ad8\u5ea6\uff09\uff0c\u800c\u53e6\u4e00\u5bf9\u7528\u4e8e\u786e\u5b9a\u5176\u6c34\u5e73\u65b9\u4f4d\uff08\u65b9\u4f4d\u89d2\uff09\u3002\u5587\u53ed\u7684\u201calt-azimuth\u201d\u5b89\u88c5\u9700\u8981\u4e24\u540d\u5ba1\u8ba1\u5458\uff0c\u4ed6\u4eec\u4ece\u4e8b\u53ef\u80fd\u88ab\u8ba4\u4e3a\u662f\u201c\u53cc\u53cc\u8033\u201d\u8046\u542c\u6a21\u5f0f\u7684\u5de5\u4f5c\u3002\u6bcf\u4e2a\u5ba1\u8ba1\u5458\u90fd\u901a\u8fc7\u4e00\u4e2a\u7c7b\u4f3c\u542c\u8bca\u5668\u7684\u53cc\u8033\u542c\u7b52\u542c\uff0c\u8be5\u542c\u7b52\u53ea\u8fde\u63a5\u5230\u4e00\u7ec4\u5587\u53ed\u3002\u4e00\u540d\u5ba1\u8ba1\u5458\u53ea\u542c\u4e86\u98de\u673a\u7684\u9ad8\u5ea6\uff0c\u800c\u53e6\u4e00\u540d\u5219\u542c\u4e86\u5b83\u7684\u6c34\u5e73\u65b9\u4f4d\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u5ba1\u8ba1\u5458\u7684\u7efc\u5408\u542c\u89c9\u5370\u8c61\u6765\u8ddf\u8e2a\u98de\u673a\uff0c\u8fd9\u662f\u901a\u8fc7\u5e73\u8861\u4e24\u4e2a\u8033\u6735\u7684\u58f0\u7ea7\u6765\u786e\u5b9a\u7684\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u201c\u5305\u56f4\u58f0\u97f3\u201d\u3002\n\u56db\u5587\u53ed\u58f0\u97f3\u5b9a\u4f4d\u5668\u662f\u91cd\u578b\u3001\u52b3\u52a8\u5bc6\u96c6\u578b\u7684\u8bbe\u5907\uff0c\u9700\u8981\u76f8\u5f53\u5927\u7684\u52aa\u529b\u6765\u8fd0\u8f93\u548c\u4f7f\u7528\u3002\u6b64\u5916\uff0c\u901a\u8fc7\u5587\u53ed\u58f0\u97f3\u5b9a\u4f4d\u5668\u6536\u542c\u51e0\u4e4e\u603b\u662f\u5728\u4efb\u4f55\u5b9e\u9a8c\u5ba4\u90fd\u65e0\u6cd5\u590d\u5236\u7684\u4e0d\u5229\u6761\u4ef6\u4e0b\u8fdb\u884c\u3002\u519b\u4e8b\u5ba1\u8ba1\u5458\u51e0\u4e4e\u603b\u662f\u5728\u9ed1\u6697\u4e2d\u8fd0\u4f5c\uff0c\u8fd9\u5df2\u7ecf\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\uff0c\u4ed6\u4eec\u7ecf\u5e38\u5728\u6076\u52a3\u7684\u5929\u6c14\u548c\u6df7\u4e71\u53ef\u6015\u7684\u6218\u6597\u6761\u4ef6\u4e0b\u503e\u542c\u3002\u4f17\u6240\u5468\u77e5\uff0c\u58eb\u5175\u5728\u6218\u6597\u4e2d\u4f1a\u77ac\u95f4\u8033\u804b\uff1b\u58eb\u5175\u4eec\u56de\u5fc6\u8bf4\u201c\u770b\u5230\u67aa\u624b\u7684\u8033\u6735\u5728\u6d41\u8840\u201d\u3002\u901a\u8fc7\u58f0\u97f3\u5b9a\u4f4d\u5668\u6536\u542c\u65f6\uff0c\u542c\u529b\u53d7\u635f\u548c\u542c\u8005\u75b2\u52b3\u662f\u53f8\u7a7a\u89c1\u60ef\u7684\u3002\u542c\u4f17\u4e0d\u4ec5\u8981\u5728\u964c\u751f\u548c\u4e0d\u53ef\u9884\u6d4b\u7684\u73af\u5883\u4e2d\u4ece\u4e8b\u4e00\u9879\u8270\u5de8\u800c\u7e41\u91cd\u7684\u6d3b\u52a8\uff0c\u800c\u4e14\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u4ed6\u6709\u6b7b\u4ea1\u7684\u5371\u9669\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u52a0\u5f3a\u503e\u542c\u201d\u662f\u4e00\u4e2a\u6781\u7aef\u7684\u547d\u9898\u3002\u9274\u4e8e\u5728\u8fd9\u79cd\u6781\u7aef\u6761\u4ef6\u4e0b\u8046\u542c\u7684\u4e0d\u7a33\u5b9a\u6027\u8d28\uff0c\u519b\u4e8b\u5ba1\u8ba1\u5458\u63a5\u53d7\u4e86\u5e7f\u6cdb\u7684\u57f9\u8bad\uff0c\u4ee5\u57f9\u517b\u4ed6\u4eec\u7684\u5b9a\u5411\u8046\u542c\u6280\u80fd\u3002\u5173\u4e8e\u58f0\u5b66\u6d4b\u89d2\u4eea\uff08\u4e00\u79cd\u6cd5\u56fd\u8bbe\u5907\uff09\u7684\u519b\u4e8b\u624b\u518c\u5305\u542b\u6709\u5173\u201c\u58f0\u97f3\u89c2\u5bdf\u8005\u7684\u57f9\u8bad\u201d\u548c\u201c\u542c\u4f17\u7684\u8033\u6735\u57f9\u8bad\u201d\u7684\u6bb5\u843d\u3002\u8fd9\u4e9b\u6bb5\u843d\u8be6\u7ec6\u63cf\u8ff0\u4e86\u519b\u4e8b\u5ba1\u8ba1\u5458\u5fc5\u987b\u8fdb\u884c\u7684\u5404\u79cd\u8033\u6735\u8bad\u7ec3\u7ec3\u4e60\u624d\u80fd\u83b7\u5f97\u64cd\u4f5c\u58f0\u5b66\u6d4b\u89d2\u4eea\u7684\u8d44\u683c- \u5587\u53ed\u58f0\u97f3\u5b9a\u4f4d\u5668\u3002\u58f0\u5b66\u6d4b\u89d2\u4eea\u542c\u529b\u7ec3\u4e60\u5206\u4e94\u4e2a\u9636\u6bb5\u8fdb\u884c\u3002\u5728\u7b2c\u4e00\u9636\u6bb5\uff0c\u5ba1\u8ba1\u5458\u8046\u542c\u5927\u7ea6 100 \u7c73\u5916\u7684\u56fa\u5b9a\u58f0\u6e90\u3002\u52a9\u624b\u901a\u8fc7\u6570\u6570\u3001\u62cd\u624b\u6216\u5439\u5587\u53ed\u6765\u63d0\u4f9b\u58f0\u97f3\u3002\u52a9\u7406\u7136\u540e\u4fa7\u8eab\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u70b9\uff0c\u800c\u5ba1\u8ba1\u5458\u5219\u5c06\u4eea\u5668\u91cd\u65b0\u5bf9\u51c6\u4ed6\u3002\u7b2c\u4e00\u4e2a\u7ec3\u4e60\u7528\u4e8e\u6d88\u9664\u4e0d\u53ef\u9760\u7684\u542c\u4f17\u3002\u5982\u679c\u5ba1\u6838\u5458\u7684\u201c\u58f0\u5b66\u76ee\u6807\u201d\u504f\u79bb\u592a\u591a\uff0c\u5ba1\u6838\u5458\u5c06\u4e0d\u88ab\u5141\u8bb8\u8fdb\u5165\u7b2c\u4e8c\u9636\u6bb5\u3002\u5728\u7b2c\u4e8c\u9636\u6bb5\uff0c\u52a9\u624b\u6a21\u4eff\u79fb\u52a8\u7684\u58f0\u6e90\uff0c\u5728\u4ee5\u5927\u7ea6\u6bcf\u79d2\u4e00\u7c73\u7684\u901f\u5ea6\u8fde\u7eed\u884c\u8d70\u65f6\u4ea7\u751f\u8fde\u7eed\u7684\u58f0\u97f3\uff0c\u8ddd\u79bb\u5ba1\u8ba1\u5458\u5927\u7ea6 150 \u5230 200 \u7c73\u3002\u5ba1\u8ba1\u5458\u8bd5\u56fe\u901a\u8fc7\u4e0d\u65ad\u5730\u5c06\u6d4b\u89d2\u4eea\u91cd\u65b0\u5bf9\u51c6\u52a9\u624b\u6765\u8ddf\u8e2a\u58f0\u97f3\u3002\u4e00\u4f4d\u7ad9\u5728\u65c1\u542c\u8005\u548c\u52a9\u6559\u4e4b\u95f4\u7684\u6559\u5b98\u968f\u610f\u5439\u53e3\u54e8\u3002\u5728\u8fd9\u4e9b\u70b9\u4e0a\uff0c\u52a9\u624b\u505c\u6b62\u79fb\u52a8\uff0c\u5ba1\u6838\u5458\u7684\u58f0\u5b66\u7784\u51c6\u5f97\u5230\u9a8c\u8bc1\u3002\u5728\u7b2c\u4e09\u548c\u7b2c\u56db\u9636\u6bb5\uff0c\u5ba1\u6838\u5458\u8ddf\u8e2a\u5b9e\u9645\u98de\u673a\u7684\u58f0\u97f3\uff0c\u9996\u5148\u8ddf\u8e2a\u5176\u6c34\u5e73\u65b9\u4f4d\uff0c\u7136\u540e\u8ddf\u8e2a\u5176\u9ad8\u5ea6\u3002\u5728\u7b2c\u4e94\u9636\u6bb5\u4e5f\u662f\u6700\u540e\u9636\u6bb5\uff0c\u4e24\u540d\u5ba1\u8ba1\u5458\u540c\u65f6\u8ddf\u8e2a\u4e00\u67b6\u98de\u673a\uff0c\u4e00\u540d\u5ba1\u8ba1\u5458\u76d1\u542c\u98de\u673a\u7684\u6c34\u5e73\u65b9\u4f4d\uff0c\u53e6\u4e00\u540d\u76d1\u542c\u98de\u673a\u7684\u4ef0\u89d2\u3002\u51b3\u5b9a\u5ba1\u8ba1\u5458\u201c\u5e94\u8be5\u6bcf\u5929\u7cfb\u7edf\u5730\u63a5\u53d7\u57f9\u8bad\u201d\uff0c\u6bcf\u5929\u7684\u542c\u529b\u7ec3\u4e60\u201c\u7edd\u5bf9\u4e0d\u53ef\u6216\u7f3a\u201d\u3002\u5982\u679c\u5ba1\u8ba1\u5e08\u4e0d\u6bcf\u5929\u7ec3\u4e60\uff0c\u4eba\u4eec\u8ba4\u4e3a\u4ed6\u201c\u5f88\u5feb\u5c31\u4f1a\u5931\u53bb\u6240\u83b7\u5f97\u7684\u6548\u7387\u201d\u3002\u6218\u4e89\u4e2d\u673a\u68b0\u4e0a\u6700\u590d\u6742\u7684\u58f0\u97f3\u5b9a\u4f4d\u5668\u4e4b\u4e00\u662f\u4f69\u5170\u8fdc\u8ddd\u671b\u8fdc\u955c (t\u00e9l\u00e9sitem\u00e8tre Perrin)\uff0c\u5b83\u4ee5\u6cd5\u56fd\u7269\u7406\u5b66\u5bb6\u8ba9\u00b7\u5df4\u8482\u65af\u7279\u00b7\u4f69\u5170 (Jean Baptiste Perrin) \u7684\u540d\u5b57\u547d\u540d\u3002\u5176\u524d\u63d0\u662f\u9525\u5f62\u5587\u53ed\u6240\u80fd\u8fbe\u5230\u7684\u58f0\u97f3\u653e\u5927\u91cf\u5fc5\u7136\u53d7\u5230\u5587\u53ed\u5c3a\u5bf8\u548c\u957f\u5ea6\u7684\u9650\u5236\u3002\u4e3a\u4e86\u589e\u52a0\u58f0\u97f3\u5b9a\u4f4d\u5668\u7684\u653e\u5927\u529f\u7387\u800c\u4e0d\u662f\u5176\u5c3a\u5bf8\uff0cPerrin \u8bbe\u8ba1\u4e86\u4e00\u4e2a\u63a5\u6536\u5668\uff0c\u8be5\u63a5\u6536\u5668\u5c06\u6570\u5341\u4e2a\u57fa\u672c\u5587\u53ed\u805a\u96c6\u5728\u516d\u89d2\u5f62\u8702\u7a9d\u72b6\u5de2\u7a74\u4e2d\u3002\u8fd9\u4e9b\u201c\u4e3b\u53f7\u89d2\u201d\u901a\u8fc7\u4e00\u5957\u7ba1\u5b50\u8fde\u63a5\u5230\u4e2d\u592e\u53f7\u89d2\uff0c\u4e24\u540d\u5ba1\u8ba1\u5458\u5206\u522b\u901a\u8fc7\u989d\u5916\u957f\u5ea6\u7684\u7ba1\u5b50\u8fdb\u884c\u53cc\u8033\u6536\u542c\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u88ab\u79f0\u4e3a\u201cmyriaphones\u201d\u7684\u591a\u7ec6\u80de\u5587\u53ed\u7ec4\u5408\u5c06\u4f7f\u8bbe\u5907\u80fd\u591f\u6536\u96c6\u5927\u91cf\u58f0\u80fd\uff0c\u800c\u4eea\u5668\u672c\u8eab\u53ef\u4ee5\u4fdd\u6301\u76f8\u5bf9\u8f83\u5c0f\uff0c\u56e0\u6b64\u5728\u8fd0\u52a8\u6218\u7684\u80cc\u666f\u4e0b\u662f\u53ef\u884c\u7684\u3002\n\u6839\u636e AV Hill \u7684\u8bf4\u6cd5\uff0c\u8bb8\u591a\u4eba\u8ba4\u4e3a Perrin \u9065\u6d4b\u4eea\u6bd4\u5c0f\u53f7\u58f0\u97f3\u5b9a\u4f4d\u5668\u63d0\u4f9b\u4e86\u201c\u66f4\u786e\u5b9a\u7684\u4e2d\u5fc3\u4f4d\u7f6e\u201d\uff0c\u5e76\u4e14\u4f7f\u7528\u9065\u6d4b\u4eea\uff0c\u58f0\u97f3\u5728\u4e24\u53ea\u8033\u6735\u4e4b\u95f4\u4f20\u9012\u7684\u611f\u89c9\u4f3c\u4e4e\u201c\u66f4\u52a0\u660e\u663e\u201d\u3002\u7b2c\u4e00\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\uff0c\u51fa\u73b0\u4e86\u4e00\u652f\u519b\u4e8b\u5ba1\u8ba1\u4e13\u5bb6\u7ea7\uff0c\u4ed6\u4eec\u611f\u77e5\u58f0\u97f3\u4f4d\u7f6e\u548c\u65b9\u5411\u7684\u80fd\u529b\u6210\u4e3a\u519b\u4e8b\u884c\u52a8\u4e2d\u7684\u4e00\u9879\u5173\u952e\u8d44\u4ea7\u3002\u5728\u6cd5\u56fd\uff0c\u519b\u4e8b\u5ba1\u8ba1\u5458\u6bcf\u5929\u90fd\u63a5\u53d7\u57f9\u8bad\uff0c\u5b9a\u5411\u8046\u542c\u88ab\u7406\u89e3\u4e3a\u53ef\u4ee5\u901a\u8fc7\u542c\u529b\u8bad\u7ec3\u6765\u57f9\u517b\u7684\u6280\u80fd\u3002\u5728\u58f0\u5b66\u9632\u5fa1\u7684\u80cc\u666f\u4e0b\uff0c\u201c\u597d\u7684\u503e\u542c\u8005\u201d\u4e0d\u4e00\u5b9a\u662f\u542c\u5f97\u597d\u7684\u4eba\u3002\u76f8\u53cd\uff0c\u4e00\u4e2a\u597d\u7684\u503e\u542c\u8005\u662f\u80fd\u591f\u4f7f\u7528\u4ed6\u4eec\u7684\u7a7a\u95f4\u542c\u89c9\u6765\u5b9a\u4f4d\u548c\u8ffd\u8e2a\u58f0\u97f3\u6765\u6e90\u7684\u4eba\u3002\u5728\u6218\u4e89\u8fc7\u7a0b\u4e2d\uff0c\u58f0\u5b66\u9632\u5fa1\u6280\u672f\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u4e0d\u4ec5\u5728\u5176\u65e5\u76ca\u590d\u6742\u7684\u8bbe\u8ba1\u65b9\u9762\uff0c\u800c\u4e14\u5728\u5b83\u4eec\u6240\u9700\u7684\u8046\u542c\u7c7b\u578b\u65b9\u9762\u3002\u51fa\u73b0\u4e86\u5408\u4f5c\u548c\u534f\u4f5c\u7684\u8046\u542c\u6a21\u5f0f\uff0c\u5176\u4e2d\u6d89\u53ca\u51e0\u4e2a\u5ba1\u8ba1\u5458 - \u4ee5\u53ca\u5176\u4ed6\u56e2\u961f - \u4ed6\u4eec\u534f\u540c\u5de5\u4f5c\u4ee5\u611f\u77e5\u548c\u89e3\u91ca\u58f0\u5b66\u6d3b\u52a8\u3002\u5c24\u5176\u662f\u5728\u6218\u4e89\u540e\u671f\uff0c\u5728\u58f0\u5b66\u9632\u5fa1\u73af\u5883\u4e2d\u8fdb\u884c\u8046\u542c\u663e\u7136\u662f\u4e00\u79cd\u96c6\u4f53\u52aa\u529b\u3002\u51e0\u4e4e\u6bcf\u4e00\u79cd\u9632\u5fa1\u6027\u503e\u542c\u884c\u4e3a\u90fd\u6d89\u53ca\u4e00\u7cfb\u5217\u590d\u6742\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\u3001\u591a\u4f4d\u5ba1\u8ba1\u5458\u548c\u5176\u4ed6\u89c2\u5bdf\u5458\u4e4b\u95f4\u7684\u5408\u4f5c\u4ee5\u53ca\u4eba\u5458\u56e2\u961f\u4e4b\u95f4\u7684\u6c9f\u901a\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u8046\u542c\u53d8\u6210\u4e86\u4e00\u4e2a\u5206\u6563\u7684\u8fc7\u7a0b\uff0c\u7531\u8bb8\u591a\u4eba\u5206\u914d\uff0c\u6bcf\u4e2a\u4eba\u90fd\u88ab\u5206\u914d\u5230\u201c\u8046\u542c\u884c\u4e3a\u201d\u7684\u4e0d\u540c\u90e8\u5206\u3002\u540c\u65f6\uff0c\u503e\u542c\u884c\u4e3a\u672c\u8eab\u4e5f\u4ece\u4e2a\u4eba\u5728\u65e5\u5e38\u73af\u5883\u4e2d\u8fdb\u884c\u7684\u5355\u4e00\u3001\u8fde\u7eed\u3001\u8fde\u8d2f\u7684\u884c\u4e3a\u91cd\u65b0\u914d\u7f6e\u4e3a\u4e00\u7ec4\u7531\u5ba1\u8ba1\u4eba\u5458\u5728\u6781\u7aef\u6218\u4e89\u6761\u4ef6\u4e0b\u8fdb\u884c\u7684\u7cfb\u7edf\u5316\u3001\u79bb\u6563\u7684\u884c\u4e3a\u3002\u7531\u4e8e\u519b\u4e8b\u5ba1\u8ba1\u5458\u7684\u4f5c\u7528\u662f\u503e\u542c\u5e76\u4e0d\u65ad\u62a5\u544a\u4ed6\u7684\u53d1\u73b0\uff0c\u56e0\u6b64\u8fdb\u4e00\u6b65\u5c06\u503e\u542c\u91cd\u65b0\u914d\u7f6e\u4e3a\u6570\u636e\u6536\u96c6\u884c\u4e3a\u3002\u519b\u4e8b\u5ba1\u8ba1\u5458\u901a\u5e38\u4e0d\u4f1a\u50cf\u58f0\u5b66\u4f20\u611f\u5668\u90a3\u6837\u89e3\u91ca\u58f0\u97f3\u7684\u542b\u4e49\uff0c\u800c\u4ed6\u7684\u89d2\u8272\u57fa\u672c\u4e0a\u662f\u89c2\u5bdf\u548c\u62a5\u544a\u7269\u7406\u58f0\u5b66\u6570\u636e\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0c\u519b\u4e8b\u8046\u542c\u672c\u8d28\u4e0a\u662f\u4e00\u9879\u673a\u68b0\u4efb\u52a1\uff0c\u9884\u793a\u7740\u5f53\u4ee3\u5f62\u5f0f\u7684\u673a\u5668\u8046\u542c\u3002\u4eba\u7c7b\u5ba1\u8ba1\u5e08\u901a\u8fc7\u5236\u5b9a\u529f\u80fd\u6027\u548c\u9ad8\u5ea6\u5408\u7406\u5316\u7684\u8046\u542c\u6a21\u5f0f\u6765\u6267\u884c\u673a\u5668\u4eca\u5929\u6267\u884c\u7684\u529f\u80fd\uff1a\u58f0\u97f3\u7814\u7a76\u5b66\u8005\u4e54\u7eb3\u68ee\u00b7\u65af\u7279\u6069\u79f0\u4e4b\u4e3a\u201c\u542c\u89c9\u6280\u672f\u201d\u7684\u519b\u4e8b\u5316\u5f62\u5f0f\u3002\u901a\u8fc7\u58f0\u5b66\u9632\u5fa1\uff0c\u542c\u529b\u540c\u6837\u88ab\u91cd\u65b0\u914d\u7f6e\u4e3a\u611f\u77e5\u3001\u89c2\u5bdf\u6216\u89c6\u89c9\u7ed8\u5236\u58f0\u80fd\uff0c\u800c\u4e0d\u662f\u4ec5\u4ec5\u201c\u542c\u5230\u201d\u58f0\u97f3\u3002\u5728\u4e00\u4e9b\u58f0\u5b66\u9632\u5fa1\u65b9\u6cd5\u4e2d\uff0c\u58f0\u97f3\u7684\u89c6\u89c9\u8868\u793a\u4ee5\u53ca\u4e0e\u58f0\u5b66\u6d3b\u52a8\u76f8\u5173\u7684\u8ba1\u7b97\u2014\u2014\u4f8b\u5982\u786e\u5b9a\u98ce\u548c\u6e29\u5ea6\u7b49\u5927\u6c14\u6761\u4ef6\u5bf9\u7279\u5b9a\u65e5\u671f\u58f0\u97f3\u4f20\u64ad\u7684\u5f71\u54cd\u2014\u2014\u53d6\u4ee3\u4e86\u542c\u89c9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u58f0\u5b66\u9632\u5fa1\u4e2d\uff0c\u58f0\u97f3\u201c\u542c\u8d77\u6765\u201d\u7684\u65b9\u5f0f\u5e76\u4e0d\u603b\u662f\u5f88\u91cd\u8981\u3002\u76f8\u53cd\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u58f0\u97f3\u7684\u7269\u7406\u884c\u4e3a\u624d\u662f\u542c\u529b\u65b9\u7a0b\u5f0f\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002\u5982\u679c\u58f0\u97f3\u4e0d\u662f\u88ab\u7406\u89e3\u4e3a\u53ef\u4ee5\u542c\u5230\u7684\u4e1c\u897f\uff0c\u800c\u662f\u53ef\u4ee5\u88ab\u611f\u77e5\u7684\u4e1c\u897f\u2014\u2014\u6216\u8005\u5b9e\u9645\u4e0a\u662f\u88ab\u89c2\u5bdf\u5230\u7684\u2014\u2014\u90a3\u4e48\u5b83\u7684\u5b9a\u4e49\u4e5f\u5fc5\u987b\u6539\u53d8\u3002\u5728\u6218\u4e89\u5f00\u59cb\u65f6\uff0c\u58f0\u97f3\u901a\u5e38\u88ab\u7406\u89e3\u4e3a\u201c\u67d0\u4e9b\u632f\u52a8\u8fd0\u52a8\u5bf9\u542c\u89c9\u795e\u7ecf\u4ea7\u751f\u7684\u5f71\u54cd\u201d\uff0c\u5e0c\u5c14\u5f15\u7528\u4e86\u8fd9\u4e00\u5b9a\u4e49\u4f5c\u4e3a\u6807\u51c6\u3002\u7136\u800c\uff0c\u8fd9\u4e2a\u5b9a\u4e49\u5e76\u4e0d\u603b\u662f\u9002\u7528\u4e8e\u58f0\u5b66\u9632\u5fa1\u7684\u80cc\u666f\uff0c\u56e0\u4e3a\u6709\u65f6\u9700\u8981\u8003\u8651\u58f0\u97f3\uff0c\u6b63\u5982\u4e00\u4f4d\u519b\u4e8b\u9886\u5bfc\u4eba\u6240\u5199\u7684\u90a3\u6837\uff0c\u201c\u4e0d\u8003\u8651\u901a\u8fc7\u8033\u6735\u7684\u6700\u7ec8\u68c0\u6d4b\u3002\u201d\u56e0\u6b64\uff0c\u5e0c\u5c14\u5efa\u8bae\u5bf9\u58f0\u97f3\u66f4\u5408\u9002\u7684\u5b9a\u4e49\u662f\u201c\u542c\u89c9\u5668\u5b98\u5bf9\u5176\u4f5c\u51fa\u53cd\u5e94\u7684\u90a3\u79cd\u7269\u8d28\u7684\u632f\u52a8\u8fd0\u52a8\u201d\u3002\u867d\u7136\u8fd9\u5f53\u7136\u7b26\u5408\u5173\u4e8e\u58f0\u97f3\u7684\u6210\u719f\u60f3\u6cd5\uff0c\u4f46\u58f0\u5b66\u9632\u5fa1\u6280\u672f\u4f7f\u4ee5\u6709\u5f62\u7684\u65b9\u5f0f\u4f53\u9a8c\u58f0\u97f3\u4f5c\u4e3a\u201c\u7269\u8d28\u7684\u632f\u52a8\u8fd0\u52a8\u201d\u6210\u4e3a\u53ef\u80fd\u3002\n\u58f0\u5b66\u9632\u5fa1\u540c\u6837\u4f7f\u201c\u58f0\u97f3\u4f20\u64ad\u201d\u7684\u60f3\u6cd5\u5177\u4f53\u5316\u3002\u6210\u5343\u4e0a\u4e07\u7684\u4eba\u2014\u2014\u5305\u62ec\u519b\u4e8b\u5ba1\u8ba1\u5458\uff0c\u4ee5\u53ca\u8bb8\u591a\u751f\u6d3b\u5728\u7a7a\u4e2d\u8f70\u70b8\u5a01\u80c1\u4e0b\u7684\u5e73\u6c11\u2014\u2014\u4e0d\u662f\u9762\u5411\u53ef\u89c1\u7684\u58f0\u97f3\u6765\u6e90\uff0c\u800c\u662f\u9762\u5411\u58f0\u97f3\u7684\u8def\u5f84\u3002\u58f0\u5b66\u9632\u5fa1\u4f7f\u58f0\u97f3\u79fb\u52a8\u7684\u60f3\u6cd5\u53d8\u5f97\u5408\u7406\uff0c\u5e76\u4e14\u901a\u8fc7\u5c06\u81ea\u5df1\u5b9a\u4f4d\u4e8e\u5b83\u7684\u79fb\u52a8\uff0c\u4eba\u4eec\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4f4d\u5386\u53f2\u672c\u8eab\u3002 Gascia Ouzounian \u662f\u725b\u6d25\u5927\u5b66\u97f3\u4e50\u7cfb\u526f\u6559\u6388\uff0c\u7740\u6709\u300a\u7acb\u4f53\u58f0\uff1a\u79d1\u5b66\u3001\u6280\u672f\u548c\u827a\u672f\u4e2d\u7684\u58f0\u97f3\u4e0e\u7a7a\u95f4\u300b\u4e00\u4e66\uff0c\u672c\u6587\u6539\u7f16\u81ea\u8be5\u4e66\u3002", "note_en": "During WWI the act of hearing was recast as a tactical activity \u2014 one that could determine human and even national survival.\n   According to \u201cThe End of the War: A Graphic Record,\u201d the frontispiece of  a towering report commissioned by the U.S. Assistant Secretary of War during WWI, the Great War ended not with a bang, but, as in the famous verse, a whimper.\n The image, which showed six horizontal lines on a filmstrip, depicted artillery activity at the American front near the Moselle River exactly one minute before and one minute after the time of armistice, 11:00 a.m. on November 11, 1918. The left side depicted artillery activity at one minute before armistice and showed a flurry of jagged lines (\u201cAll guns firing\u201d). On the right side, which depicted artillery activity at one minute after armistice, there were only smooth lines (\u201cAll guns silent\u201d). Two small dips around 11:01:01 were attributed to the exuberance of a doughboy who fired his pistol twice in celebration of the ceasefire. Apart from these gunshots, it appeared that artillery activity had ceased entirely, and that the battlefield had been suddenly drained of the throttling sounds of gunfire.\n  The caption for \u201cThe End of the War\u201d stated that it was the last record of artillery activity at the American front, and that the image issued from an American sound ranging apparatus. \u201cSound ranging,\u201d it read, \u201cwas an important means of locating the positions and calibers of enemy guns.\u201d When the image was reproduced in the  Journal of Electricity the claims made about it were even grander: \u201cTruly history has here been written electrically!\u201d\n \u201cThe End of the War\u201d was produced through one of numerous methods of acoustic defense that were invented during the First World War. At the outset of the war the concept of acoustic defense was mostly unknown. None of the principal armies possessed reliable means for tracking the position of the enemy by following the sounds it made. By the end of the war, however, each had developed new technologies and techniques for sound location, typically in response to new technologies of offense, and each had employed these methods on countless occasions \u2014 thereby generating new modes of \u201cacoustic defense.\u201d\n  The appearance of a new offensive weapon, however, did not mean that new methods of defense were easily come by. According to Alfred Rawlinson, Lieutenant Commander of the Royal Naval Volunteer Reserve, the enemy was prone to hiding behind clouds. How should the guns of the defense hit an object they could not see? The answer, he said, was \u201cchildishly simple \u2014 namely, though we can\u2019t  see it, yet we can  hear it. Therefore, as we cannot aim by using our  eyes, we shall be obliged to shoot, if we are to shoot at all, by using our  ears to aim with.\u201d Still, he wrote, there was \u201ca terribly long way to go before theory, however correct, could be turned into practice.\u201d\n Until the early 20th century, spatial hearing had been studied almost exclusively in terms of the physics of sound or the physiology and psychology of hearing. During the war it was recast as a tactical activity that was understood in strategic terms \u2014 as something that could determine human and even national survival. Auditory space perception, once considered subordinate to visual space perception, was newly understood as a vital skill, with \u201cpowers of hearing\u201d suddenly mapped onto the powers of nation states.\n  The first sound locators used in the First World War relied heavily on the idea of \u201cseeing\u201d sound. Some were based on technologies of vision and transposed principles derived from optical science onto the acoustic domain. In 1916 a Lieutenant in the French Army designed a  viseur acoustique (\u201cacoustic visor\u201d), a handheld device that comprised a mirror and compass. A soldier used the instrument by centering the reflection of his face in the mirror such that he could  see his ears equally well. The compass would then presumably give the direction of the sound.\n  Experiments were undertaken in England with listening discs, a technology that was based on the idea that, when a soundproof disc was oriented towards the source of sound, an acoustic image would form at the center of the disc on the side opposite to that of the sound. The idea was proposed as an acoustic analogue to the Arago spot in optics, whereby a bright point appears at the center of the shadow of a circular object due to the wave nature of light.\n While technologies like acoustic visors and listening discs were neither particularly effective nor practicable, one of the most enduring acoustic defense technologies to emerge from the war, the Baillaud paraboloid, was also based on a technology of vision. Although there are examples of acoustic reflectors throughout history, the first parabolic acoustic reflector designed expressly for military use was invented by Ren\u00e9 Baillaud in 1915, and given the form of a dish or a bowl. Baillaud, an astronomer based at the Toulouse Observatory, modeled his device on the Newtonian telescope. His design was based on the premise that parabolic mirrors must share the same properties of reflection whether they were reflecting light or sound.\n  In Baillaud\u2019s memoirs a series of photographs shows the development of the acoustic paraboloid over an intensive, approximately year-long period of experimentation. We find instruments of increasing size, ranging from 60 centimeters to 3 meters in diameter; of varying shapes, whereby the dish appears less like a concave dish and more like a deep bowl; and of varying configurations, including one in which four paraboloids were stacked in rows of two. A single auditor listening using a stethoscope-like device at the point of greatest focus becomes two auditors, who listen in tandem while each one is seated at opposite ends of the device, using hand wheels to rotate the dish. We also find the introduction of an automatic course plotter, an imaging technology that traced the auditors\u2019 movements, thereby producing a visual record of the trajectory of the aircraft.\n  Military aircraft of the First World War produced several kinds of sounds: the beat of the propeller, engine sounds, and vibrations caused by friction between the air and the body of the moving airplane. The loudest and most easily identifiable sound, however, was what was called the \u201cexhaust note.\u201d\n The exhaust notes of various aircraft ranged between 80 hertz and 130 hertz, and although this pitch varied somewhat when the aircraft was in motion, it was invariably a low-frequency sound. In order to reflect the low-frequency sounds of aircraft, each of the principal armies developed trumpet sound locators (also called horn sound locators) that replaced the small trumpets of artillery ranging devices with large conical trumpets that could reflect low frequency sounds. According to A. V. Hill, professor of physiology at the University of Cambridge and director of the Anti-Aircraft Experimental Section in England in the early 20th century, the first type of trumpet sound locator developed by the British Army had only a single pair of large horns, which measured approximately 40 inches in diameter at the mouth. This device, which was first used as part of the Anti-Aircraft Defense of London in 1917, could determine only the horizontal bearing of enemy aircraft. A second model, which was developed almost immediately, had two pairs of horns, and was sometimes called the \u201cfour-trumpet\u201d or \u201cfour-horn\u201d sound locator. One pair of horns was used to determine the elevation of the aircraft (its altitude), while the other pair was used to determine its horizontal bearing (azimuth).\n  The \u201calt-azimuth\u201d mounting of the horns necessitated two auditors, who engaged in what might be thought of as a \u201cdouble binaural\u201d mode of listening. Each auditor listened via a stethoscope-like binaural earpiece that was connected only to one set of horns. One auditor listened only to the aircraft\u2019s elevation, while another listened to its horizontal bearing. It was therefore the auditors\u2019  combined auditory impressions that were used to track the aircraft, which was ascertained by equalizing the sound level at the two ears, a process that was called \u201cbracketing the sound.\u201d\n Four-trumpet sound locators were heavy, labor-intensive devices that required considerable effort to transport and use. Moreover, listening through trumpet sound locators was almost always done in adverse conditions that could not be replicated in any laboratory. Military auditors almost always operated in the dark, already a difficult task, and they often listened in poor weather and in the chaotic and terrifying conditions of battle. Soldiers were known to have suffered instantaneous deafness in battle; and soldiers recalled \u201cseeing gunners\u2019 ears bleeding.\u201d\n Hearing damage and listener fatigue were commonplace when listening through sound locators. Not only was the listener engaged in a difficult and taxing activity in unfamiliar and unpredictable settings, but he was almost certainly at risk of death. In this context, \u201cheightened listening\u201d was an extreme proposition.\n  Given the precarious nature of listening in such extreme conditions, military auditors received extensive training to develop their directional listening skills. A military manual on the acoustic goniometer, a French device, contains passages on the \u201cTraining of Sound Observers\u201d and \u201cEar Training for Listeners.\u201d These passages describe in detail the various ear-training exercises a military auditor was required to undertake to qualify for operating the acoustic goniometer, an alt-azimuth sound locator in which two sets of ten small, clustered horns replaced the large conical horns of the four-trumpet sound locator.\n Listening exercises with the acoustic goniometer were conducted in five stages. In the first stage an auditor listened to a fixed sound source approximately 100 meters away. An assistant provided the sound either by counting, clapping his hands, or sounding a trumpet. The assistant then moved sideways to another point while the auditor reoriented the instrument towards him. This first exercise served to eliminate unreliable listeners. If an auditor\u2019s \u201cacoustic aimings\u201d deviated too much, the auditor would not be permitted to pass to the second stage.\n  During the second stage an assistant mimicked a moving sound source, producing a continuous sound while walking continuously at a rate of approximately one meter per second, at a distance of approximately 150 to 200 meters from the auditor. The auditor attempted to follow the sound by continuously reorienting the goniometer towards the assistant. An instructor who stood between the auditor and the assistant whistled at random. At these points the assistant stopped moving and the auditor\u2019s acoustic aiming was verified.\n For the third and fourth stages the auditor followed the sound of an actual airplane, first tracking its horizontal bearing and then its elevation. In the fifth and final stage, two auditors followed an airplane simultaneously, with one listening for its horizontal bearing and the other for its elevation. It was decided that auditors \u201cshould be trained every day systematically\u201d and that daily listening practice was \u201cabsolutely indispensable.\u201d If an auditor did not practice every day, it was believed that he \u201cwould quickly lose the efficiency acquired.\u201d\n   One of the most mechanically complex sound locators of the war was the Perrin telesitemeter ( t\u00e9l\u00e9sitem\u00e8tre Perrin), named after the French physicist Jean Baptiste Perrin. It was based on the premise that the amount of sound amplification that could be achieved by a conical horn was necessarily limited by the size and length of the horn. In seeking to increase the sound locator\u2019s amplifying power but not its size, Perrin designed a receiver that clustered dozens of elementary horns in hexagonal, honeycomb-like nests. These \u201cprimary horns\u201d were connected to a central horn by a suite of tubes, and two auditors each listened binaurally via an additional length of tubing. The idea was that the multicellular horn assemblages, called \u201cmyriaphones,\u201d would enable the device to collect a substantial amount of acoustic energy while the instrument itself could remain relatively small and therefore practicable in the context of mobile warfare.\n According to A.V. Hill, many people believed that the Perrin telesitemeter gave a \u201cmore decided position of centrality\u201d than trumpet sound locators, and that the sensation of passage of sound between the two ears seemed \u201cmore pronounced\u201d with the telesitemeter.\n  During the First World War an expert class of military auditor emerged, one whose ability to sense the location and direction of sounds became a key asset in military operations. In France, military auditors were trained on a daily basis, and directional listening was understood as a skill that could be developed through ear training. In the context of acoustic defense, a \u201cgood listener\u201d was not necessarily someone who could hear well. Rather, a good listener was one who could use their spatial hearing sense to locate and track the source of a sound.\n Over the course of the war acoustic defense technologies became more complex, not only in terms of their increasingly elaborate designs, but also in the kinds of listening they required. Cooperative and collaborative modes of listening emerged that involved several auditors \u2014 and teams of others \u2014 who worked in tandem to sense and interpret acoustic activity. Especially in the later years of the war, listening in the context of acoustic defense was a distinctly group effort.\n Almost every act of defensive listening involved a complex sequence of procedures that required specialist knowledge, cooperation between several auditors and other observers, and communication between teams of people. In this way, listening became a fragmented process that was divided between many people, each of whom was assigned to a different part of the \u201clistening act.\u201d Meanwhile, the listening act itself was reconfigured from a single, continuous, coherent act carried out by individuals in everyday contexts to a set of systematized, discrete actions carried out by groups of auditors under the extreme conditions of warfare.\n Since the role of the military auditor was both to listen and to continuously report his findings, listening was further reconfigured as an act of data collection. The military auditor did not typically interpret the  meaning of sounds so much as he acted as an acoustic sensor, one whose role was fundamentally to observe and report physical acoustic data. In this sense, military listening was essentially a mechanical task that prefigured contemporary forms of machine listening. Human auditors performed the function that machines perform today, by enacting functional and highly rationalized modes of listening: militarized forms of what sound studies scholar Jonathan Sterne has called \u201caudile technique.\u201d\n Through acoustic defense, listening was equally reconfigured as sensing, observing, or visually plotting acoustic energy versus merely \u201chearing\u201d sound. In some acoustic defense methods, the visual representation of sound, and calculations relating to acoustic activity \u2014 determining the influence of atmospheric conditions like wind and temperature on the propagation of sound on a particular day, for example \u2014 superseded the sense of hearing. In other words, it was not always how the sound \u201csounded\u201d that mattered in acoustic defense. Rather, in many cases it was the physical behavior of sound that was the most consequential part of the listening equation.\n  If sound is understood not as something to be heard but rather as something to be sensed \u2014 or indeed, observed \u2014 then its definition must also change. At the start of the war sound was commonly understood as \u201cthe effect produced upon the auditory nerve by certain vibratory motions,\u201d a definition that was cited as standard by Hill. However, this definition was not always applicable in the context of acoustic defense, since it was sometimes necessary to consider sound, as one military leader wrote, \u201cwithout reference to its ultimate detection by the ear.\u201d Hill therefore suggested that a more appropriate definition of sound would be that of \u201ca vibratory motion of matter of the type to which the organ of hearing responds.\u201d While this certainly corresponded to well-established ideas about sound, technologies of acoustic defense made it possible to experience sound as \u201ca vibratory motion of matter\u201d in a tangible way.\n Acoustic defense equally made concrete the idea that \u201csound travels.\u201d Thousands of people \u2014 including military auditors, as well as the many civilians living under the threat of aerial bombardment \u2014 oriented themselves not towards the visible source of sound but towards the path of sound. Acoustic defense made sensible the idea that sound moves, and that, by orienting oneself towards its movements, one might reorient history itself.\n  Gascia Ouzounian is Associate Professor of Music at the University of Oxford and the author of   \u201cStereophonica: Sound and Space in Science, Technology, and the Arts,\u201d  from which this article is adapted.", "posttime": "2021-07-29 22:08:03", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u529b\u91cf,hearing,\u58f0\u97f3", "title": "\u542c\u89c9\u7684\u529b\u91cf\uff1a\u58f0\u97f3\u5b9a\u4f4d\u7684\u519b\u4e8b\u79d1\u5b66", "title_en": "Powers of Hearing: The Military Science of Sound Location", "transed": 1, "url": "https://thereader.mitpress.mit.edu/powers-of-hearing-the-military-science-of-sound-location/", "via": "", "real_tags": ["\u529b\u91cf", "hearing", "\u58f0\u97f3"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070285, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Twitter \u4e0d\u76f4\u63a5\u63d0\u4f9b\u5bf9\u7c97\u4f53\u3001\u659c\u4f53\u7b49\u683c\u5f0f\u6587\u672c\u7684\u652f\u6301\u3002\u4f46\u5b83\u786e\u5b9e\u652f\u6301 Unicode \u5b57\u7b26 [1]\uff0c\u56e0\u6b64\u7ed5\u8fc7\u683c\u5f0f\u9650\u5236\u7684\u4e00\u4e2a\u6280\u5de7\u662f\u7528 Unicode \u53d8\u4f53\u66ff\u6362\u5b57\u6bcd\u3002\u6211\u5728\u4e0a\u9762\u7684\u884c\u4e2d\u4f5c\u5f0a\uff0c\u4f7f\u7528\u7c97\u4f53\u548c\u659c\u4f53\u683c\u5f0f\u800c\u4e0d\u662f Unicode \u5b57\u7b26\uff0c\u56e0\u4e3a\u6709\u4e9b\u8bfb\u8005\u53ef\u80fd\u65e0\u6cd5\u9605\u8bfb\u3002\u8fd9\u662f Emacs \u4e2d\u5b9e\u9645 Unicode \u6587\u672c\u7684\u5c4f\u5e55\u622a\u56fe\u3002\u60a8\u53ef\u4ee5\u5728\u811a\u6ce8 [2] \u4e2d\u770b\u5230\u6587\u672c\u3002\u8fd9\u662f\u7eaf\u6587\u672c\u3002\u6211\u5df2\u7ecf\u8981\u6c42\u4ee5\u7c97\u4f53\u663e\u793a\u201cb\u201d\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e95\u90e8\u7a97\u53e3\u663e\u793a\u5b83\u4e0d\u662f ASCII \u8303\u56f4\u5185\u201cb\u201d\u5411\u4e0b\u7684\u5e38\u89c1 U+0062\uff0c\u800c\u662f\u8865\u5145\u591a\u8bed\u8a00\u5e73\u9762\u4e2d\u7684 U+1D5EF\u3002\u540c\u6837\uff0c\u4e0a\u9762\u659c\u4f53\u7684 i \u4e0d\u662f U+0069\uff0c\u800c\u662f U+1D456\u3002\u8fd9\u662f\u4e00\u4e2a\u80ae\u810f\u7684\u9ed1\u5ba2\uff0c\u6211\u5efa\u8bae\u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\u5b83\u3002\u4f46\u5b83\u5076\u5c14\u4f1a\u6d3e\u4e0a\u7528\u573a\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6709\u4e9b\u4eba\u53ef\u80fd\u770b\u4e0d\u5230\u60a8\u5e0c\u671b\u4ed6\u4eec\u770b\u5230\u7684\u5185\u5bb9\u3002\u8fd9\u662f Android \u8bbe\u5907\u5c4f\u5e55\u622a\u56fe\u7684\u4e00\u90e8\u5206\uff1a \u6839\u636e\u975e\u5e38\u7c97\u7565\u7684\u7ecf\u9a8c\uff0c\u5177\u6709\u8f83\u5c0f Unicode \u503c\u7684\u5b57\u7b26\u66f4\u6709\u53ef\u80fd\u5728\u4efb\u4f55\u5730\u65b9\u6b63\u786e\u663e\u793a\u3002\u636e\u6211\u6240\u77e5\uff0c\u50cf \u221e (U+221E) \u8fd9\u6837\u7684\u6570\u5b66\u7b26\u53f7\u65e0\u5904\u4e0d\u5728\u3002\u6211\u4e0d\u4f1a\u4f9d\u8d56\u4e8e 0xFFFF \u4ee5\u4e0a\u7684\u4efb\u4f55 Unicode \u5b57\u7b26\u3002\u66f4\u65b0\uff1a\u6709\u51e0\u4e2a\u4eba\u8bf4\u8fd9\u79cd\u683c\u5f0f\u7ed9\u8bed\u97f3\u9605\u8bfb\u5668\u5e26\u6765\u4e86\u95ee\u9898\u3002\u4e0b\u4e00\u7bc7\u6587\u7ae0\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u4e0d\u5e94\u8be5\u8fd9\u6837\u505a\u3002 \uff08\u4e5f\u8bb8\u5b83\u786e\u5b9e\u4f1a\u5f15\u8d77\u95ee\u9898\uff0c\u4f46\u4e0d\u5fc5\u5982\u6b64\u3002\uff09\n\u6211\u4f7f\u7528 Perl \u6a21\u5757 Unicode::Tussle \u4e2d\u7684\u7a0b\u5e8f unifont \u548c unisupers \u751f\u6210\u4e86\u4e0a\u9762\u7684 Unicode \u6587\u672c\u3002\u6709\u5173\u5982\u4f55\u5b89\u88c5\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64\u5e16\u5b50\u3002\u8fd9\u662f\u4ece\u547d\u4ee4\u884c\u4f7f\u7528\u8fd9\u4e9b\u5b9e\u7528\u7a0b\u5e8f\u7684\u5c4f\u5e55\u622a\u56fe\u3002\u8981\u4f7f\u7528 unifont\uff0c\u8bf7\u5728\u547d\u4ee4\u540e\u952e\u5165\u8981\u683c\u5f0f\u5316\u7684\u6587\u672c\u3002\u7136\u540e\u663e\u793a\u4f7f\u7528 Unicode \u5b57\u7b26\u4ee5\u591a\u79cd\u65b9\u5f0f\u683c\u5f0f\u5316\u7684\u6587\u672c\u3002\u6211\u8f93\u5165\u4e86\u201c\u7c97\u4f53\u201d\u5e76\u590d\u5236\u4e86\u8fd9\u4e2a\u8bcd\u7684\u7c97\u4f53\u7248\u672c\u3002\u6587\u672c\u53ef\u4ee5\u662f\u4efb\u4f55\u4e1c\u897f\uff1b\u5de7\u5408\u7684\u662f\uff0c\u6211\u7ed9\u5b83\u7684\u6587\u672c\u4e5f\u662f\u683c\u5f0f\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u6211\u4f7f\u7528\u547d\u4ee4\u521b\u5efa\u4e86\u4e0a\u9762\u7684\u53cc\u51fb R \u548c C\u3002 unisupers \u547d\u4ee4\u4e0d\u63a5\u53d7\u53c2\u6570\uff0c\u800c\u662f\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u83b7\u53d6\u8f93\u5165\u3002\u6240\u4ee5\u6211\u5728\u547d\u4ee4\u540d\u79f0\u540e\u6309\u56de\u8f66\u952e\uff0c\u7136\u540e\u8f93\u5165\u201cn\u201d\u6765\u83b7\u53d6\u4e0a\u6807 n\u3002 [1] Twitter \u652f\u6301 Unicode \u5b57\u7b26\uff0c\u4f46\u6709\u4e00\u4e2a\u95ee\u9898\u662f\u8bfb\u8005\u662f\u5426\u4f1a\u5b89\u88c5\u5b57\u4f53\u6765\u663e\u793a\u8fd9\u4e9b\u5b57\u7b26\u3002\u516b\u5e74\u524d\uff0c\u6211\u5199\u8fc7\u4e00\u4e9b\u7528\u6237\u53ef\u80fd\u4f1a\u770b\u5230\u548c\u4e0d\u592a\u53ef\u80fd\u770b\u5230\u7684\u7b26\u53f7\uff0c\u4f46\u6211\u7684\u5370\u8c61\u662f\u4ece\u90a3\u65f6\u8d77\u60c5\u51b5\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u6539\u5584\u3002\u5982\u4f55\u5728\u63a8\u6587\u4e2d\u5305\u542b\u6216\u6587\u672c\u3002\u9b4f\u5c14\u65af\u7279\u62c9\u65af\u51fd\u6570\u3002 Im: \u2102 -&gt; \u211d \u211d\u207f -&gt; \u211d\u1d50\uff08\u6211\u5c06\u6587\u672c\u7c98\u8d34\u5230\u6211\u7684\u535a\u5ba2\u8f6f\u4ef6\u4e2d\uff0c\u4f46\u770b\u8d77\u6765\u5b83\u6b63\u5728\u5220\u9664\u201c\u7c97\u4f53\u201d\u548c\u201c\u659c\u4f53\u201d\u8fd9\u4e24\u4e2a\u8bcd\u3002\uff09", "note_en": "Twitter does not directly provide support for formatting text in bold, italic, etc. But it does support Unicode characters [1], and so a hack to get around the formatting limitation is to replace letters with Unicode variants.\n   I cheated in the line above, using bold and italic formatting rather than Unicode characters because some readers might not be able to read it.\n Here\u2019s a screenshot of the actual Unicode text in Emacs. You can see the text in the footnotes [2].\n  This is plain text. I have asked for the details on the \u2018b\u2019 in  bold, and the bottom windows shows that it is not the common U+0062 for \u2018b\u2019 down in the ASCII range, but U+1D5EF up in the Supplementary Multilingual Plane. Similarly, the i in  italic above is not U+0069 but U+1D456.\n   It\u2019s a dirty hack, and I\u2019d recommend not overdoing it. But it could come in handy occasionally. On the other hand, some people may not see what you intend them to see. Here\u2019s a portion of a screenshot from an Android device:\n  As a very rough rule of thumb, characters with smaller Unicode values are more likely to display correctly everywhere. Math symbols like \u221e (U+221E) work everywhere as far as I know. I wouldn\u2019t depend on any Unicode character above 0xFFFF.\n Update: Several people have said this formatting poses a problem for speech readers.  The next post explains why it shouldn\u2019t. (Maybe it  does cause a problem, but it wouldn\u2019t  have to.)\n  I produced the Unicode text above using the programs  unifont and  unisupers from the Perl module  Unicode::Tussle. See  this post for how to install the module. Here\u2019s a screenshot of using these utilities from the command line.\n  To use  unifont, type the text you\u2019d like to format after the command. It then shows the text formatted several ways using Unicode characters. I typed \u201cbold\u201d and copied the bold version of the word. The text could be anything; it\u2019s a coincidence that I gave it text that was also a format name. For example, I created the double-struck R and C above with the command\n  The  unisupers command does not take an argument but instead takes its input from standard input. So I hit return after the command name and then typed \u2018n\u2019 to get the superscript n.\n   [1] Twitter supports Unicode characters, but there\u2019s a question of whether readers will have fonts installed to display the characters. I wrote  eight years ago about some symbols users were and were not likely to see, but my impression is that the situation has improved quite a bit since then.\n  How to include or text in a tweet.\rWeierstrass function.\rIm: \u2102 -&gt; \u211d\r\u211d\u207f -&gt; \u211d\u1d50\n (I pasted the text into my blogging software, but it looks like it is deleting the words \u201cbold\u201d and \u201citalic.\u201d)", "posttime": "2021-07-29 22:07:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "unicode,text,\u6587\u672c", "title": "\u5982\u4f55\u4f7f\u7528 Unicode \u5b57\u7b26\u5728 Twitter \u4e2d\u683c\u5f0f\u5316\u6587\u672c", "title_en": "How to format text in Twitter using Unicode characters", "transed": 1, "url": "https://www.johndcook.com/blog/2021/07/19/how-to-format-text-in-twitter/", "via": "", "real_tags": ["unicode", "text", "\u6587\u672c"]}]
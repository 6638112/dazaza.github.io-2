[{"category": "", "categoryclass": "", "imagename": "d0ca10155d902903e58d68338a801035.jpg", "infoid": 1066866, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u4e9b\u4eba\u6bd4\u5176\u4ed6\u4eba\u66f4\u5bb9\u6613\u89e3\u91ca\u3002\u4e18\u5409\u5c14\u7684\u873f\u8712\u53e5\u5b50\u901a\u5e38\u4f1a\u8ffd\u6eaf\u5230\u4ed6\u7684\u7ffb\u8bd1\u4eba\u5458\uff0c\u800c\u82cf\u8054\u9886\u5bfc\u4ebaKhrushchev\u7684\u6210\u8bed\u5728\u51b7\u6218\u8c08\u5224\u671f\u95f4\u9677\u5165\u4e86\u56f0\u60d1\u7684\u7f8e\u56fd\u542c\u4f17\u3002\u867d\u7136\u7ebd\u4f26\u5821\u7684\u88ab\u544a\uff0cG\u00f6ring\u4f1a\u5c1d\u8bd5\u901a\u8fc7\u7533\u8bf7\u7ffb\u8bd1\u91cd\u590d\u5e76\u5047\u88c5\u6536\u5165\u6765\u6355\u6349\u68c0\u5bdf\u5b98\u3002\n \u7ef3\u7d22\u8df3\u821e\u901a\u8fc7\u5386\u53f2\u8bb2\u8ff0\u7ffb\u8bd1\u7684\u6545\u4e8b\u3002 Anna Aslanyan\u5c06\u5965\u65af\u66fc\u9f99\u9a6c\u65cf\u4eba\u7684\u53e3\u5934\u653b\u51fb\u548c\u5728Brexit\u8c08\u5224\u4e2d\u7684\u8bef\u89e3\u4e2d\u8bb2\u8ff0\uff0c\u4ece\u5979\u4f5c\u4e3a\u4fc4\u8bed - \u82f1\u8bed\u7ffb\u8bd1\u548c\u7ffb\u8bd1\u7684\u7ecf\u9a8c\u4e2d\u7f16\u7ec7\u4e86\u8f76\u4e8b\u3002\n \u7ffb\u8bd1\u4eba\u5458\u5e94\u8be5\u52aa\u529b\u5b9e\u73b0\u603b\u51c6\u786e\u6027\uff0c\u8fd9\u901a\u5e38\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u6216\u6355\u83b7\u77ed\u8bed\u7684\u672c\u8d28\uff1f\u6587\u5b66\u7ffb\u8bd1\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a\u5f02\u8d28\uff0c\u5728\u6587\u672c\u4e2d\u4fdd\u7559\u5f02\u56fd\u60c5\u8c03;\u548c\u9a6f\u5316\uff0c\u63a9\u76d6\u67d0\u4e9b\u77ed\u8bed\uff0c\u4f7f\u5b83\u4eec\u53ef\u7406\u89e3\u3002\u6218\u540e\u57fa\u7763\u6559\u4f20\u6559\u58eb\u4f7f\u7528\u4e86\u7b2c\u4e8c\u79cd\u6a21\u5f0f\uff0c\u5728\u6ca1\u6709\u964d\u96ea\u7684\u60c5\u51b5\u4e0b\u5411\u56fd\u5bb6\u65c5\u884c\u65f6\uff0c\u5c06\u5723\u7ecf\u4e2d\u7684\u201c\u767d\u8272\u4f5c\u4e3a\u96ea\u201d\u6539\u53d8\u4e3a\u66f4\u5c40\u90e8\u53ef\u8fa8\u8ba4\u7684\u201c\u767d\u53f6\u7fbd\u6bdb\u201d\u6216\u201c\u767d\u8272\u4f5c\u4e3a\u771f\u83cc\u201d\u3002 Aslanyan\u501f\u52a9Dryden\u5bf9\u7ffb\u8bd1\u7684\u63cf\u8ff0\u5e73\u8861\u5404\u79cd\u76ee\u6807\uff0c\u201c\u5c31\u50cf\u7528\u675f\u7f1a\u7684\u817f\u8df3\u821e\u4e00\u6837\u3002\u201d\n \u867d\u7136\u4e00\u4e9b\u8bed\u8a00\u5b66\u5bb6\u4e89\u8fa9\u8bf4\uff0c\u4efb\u4f55\u201c\u539f\u59cb\u8bed\u8a00\u201d\u6587\u672c\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u7ffb\u8bd1\u975e\u8a00\u8bed\u601d\u60f3\uff0c\u6216\u201c\u5fc3\u7406\u201d\uff0c\u5e76\u975e\u6240\u6709\u4f5c\u8005\u90fd\u5584\u5f85\u4ed6\u4eec\u7684\u53e3\u8bd1\u5458\u3002\u9a6c\u514b\u5410\u6e29\u62a5\u590d\u4e86\u4ed6\u901a\u8fc7\u91cd\u65b0\u5206\u7c7b\u4ece\u6cd5\u56fd\u8bed\u91cd\u65b0\u5206\u8fa8\u51fa\u6765\u7684\u7ffb\u8bd1\u6765\u62a5\u590d\u4ed6\u7684\u4e66\u4e2d\u7684\u8df3\u8dc3\u9752\u86d9\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u535a\u5c14\u65af\u5199\u9053\uff0c\u4ed6\u81ea\u5df1\u7684\u672c\u571f\u897f\u73ed\u7259\u8bed\u201c\u7ecf\u5e38\u8ba9\u6211\u5c34\u5c2c\u201d\uff0c\u5e76\u6566\u4fc3\u4ed6\u7684\u82f1\u8bed\u7ffb\u8bd1\u4eba\u5458\u201c\u7b80\u5316\u6211\u3002\u4fee\u6539\u6211\u3002\u8ba9\u6211\u55e4\u4e4b\u4ee5\u9f3b......\u8ba9\u6211\u53d1\u7ed9\u6211\u7684MACHO\u548cGAUCHO\u548cSPLY\u3002\u201c\n  \u7ffb\u8bd1\u4eba\u5458\u53d7\u5230\u5a01\u80c1\u3002\u53f8\u6cd5\u548c\u79fb\u6c11\u7cfb\u7edf\u7684\u524a\u51cf\u5df2\u7ecf\u79bb\u5f00\u4e86\u975e\u82f1\u8bed\u8bae\u5458\u8106\u5f31\u3002 AI\u4f7f\u673a\u5668\u89e3\u91ca\u66f4\u53ef\u9760\u3002\u4f46\u662f\uff0c\u4e9alananyan\u575a\u6301\u8ba4\u4e3a\uff0c\u4e00\u53f0\u7535\u8111\u4e0d\u80fd\u5339\u914d\u4e13\u4e1a\u7ffb\u8bd1 - \u201c\u53ea\u8981\u4eba\u4eec\u7ee7\u7eed\u5f00\u73a9\u7b11\uff0c\u5ba3\u8a93\uff0c\u8d5e\u626c\u548c\u71a8\u70eb\uff0c\u53d1\u51fa\u548c\u5199\u4f5c\u4ed6\u4eec\u7684\u610f\u601d\u3002\u201d\n  \u6211\u4eec\u5e0c\u671b\u542c\u5230\u60a8\u5bf9\u672c\u6587\u7684\u770b\u6cd5\u3002\u63d0\u4ea4\u7ed9\u5b57\u6bcd@prospect-magazine.co.uk\u5b57\u6bcd ", "note_en": "Some people are easier to interpret than others. Churchill\u2019s meandering sentences would often trip up his translators, and USSR leader Khrushchev\u2019s idioms baffled American listeners during Cold War negotiations. While a defendant at Nuremberg, G\u00f6ring would try to catch prosecutors out by insisting translators repeat themselves and feigning incomprehension.\n Dancing on Ropes tells the stories of translators through history. Anna Aslanyan compellingly recounts the verbal exploits of the Ottoman dragomans and the miscommunications during Brexit negotiations, weaving in anecdotes from her experience as a Russian-English interpreter and translator.\n Should translators work towards total accuracy, which is often impossible, or capture the essence of a phrase? Literary translation has two approaches: foreignisation, preserving exoticism in a text; and domestication, glossing certain phrases to make them intelligible. Post-war Christian missionaries used the second mode when travelling to countries without snowfall, changing the Biblical simile \u201cwhite as snow\u201d to the more locally comprehensible \u201cwhite as egret feathers\u201d or \u201cwhite as fungus.\u201d Aslanyan borrows Dryden\u2019s description of the translator balancing various aims, \u201clike dancing on ropes with fettered legs.\u201d\n While some linguists argue that any \u201coriginal-language\u201d text is itself a translation of non-verbal thoughts, or \u201cmentalese,\u201d not all authors take kindly to their interpreters. Mark Twain took revenge on a bad adaptation of his book  The Jumping Frog by republishing a deliberately literal translation back from the French. Borges, by contrast, wrote that his own native Spanish \u201coften embarrasses me,\u201d and urged his English translators to \u201csimplify me. Modify me. Make me stark\u2026 Make me macho and gaucho and skinny.\u201d\n  Translators are under threat. Cuts in the justice and immigration systems have left non-English speakers vulnerable. AI makes machine interpretation more reliable. But, Aslanyan insists, a computer cannot match a professional translator\u2014\u201cas long as people continue joking and swearing, praising and ironising, uttering and writing things they mean or not.\u201d\n  We want to hear what you think about this article. Submit a letter to  letters@prospect-magazine.co.uk", "posttime": "2021-06-19 19:44:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u827a\u672f,\u66ff\u4ee3,art,\u7ffb\u8bd1", "title": "\u4e0d\u53ef\u66ff\u4ee3\u7684\u7ffb\u8bd1\u827a\u672f ", "title_en": "The Irreplaceable Art of Translation", "transed": 1, "url": "https://www.prospectmagazine.co.uk/arts-and-books/the-irreplaceable-art-of-translation", "via": "", "real_tags": ["\u827a\u672f", "\u66ff\u4ee3", "art", "\u7ffb\u8bd1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066865, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u4ece\u6211\u5f00\u59cb\u5728\u4f3a\u670d\u7684JS\u5c42\u4e0a\u5de5\u4f5c\u4ee5\u6765\uff0c\u6211\u4e00\u76f4\u5728\u8003\u8651\u5783\u573e\u6536\u96c6\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u3002\u6211\u5df2\u7ecf\u8bbe\u8ba1\u4e86\u4e00\u4e2aGC\u5e93\uff0c\u5728GC\u96c6\u6210\u60f3\u6cd5\u4e0a\u81f4\u529b\u4e8e\u751f\u9508\u672c\u8eab\uff0c\u81f4\u529b\u4e8e\u4f3a\u670d\u7684JS GC\u96c6\u6210\uff0c\u5e76\u5e2e\u52a9\u89e3\u51b3\u4e86\u5176\u4ed6GC\u9879\u76ee\u7684\u751f\u9508\u3002\n \u56e0\u6b64\uff0c\u6211\u503e\u5411\u4e8e\u7ecf\u5e38\u88ab\u62c9\u5165GC\u8ba8\u8bba\u3002\u6211\u559c\u6b22\u8c08\u8bbagcs  - \u4e0d\u8981\u8ba9\u6211\u9519\u4e86 - \u4f46\u6211\u7ecf\u5e38\u6700\u7ec8\u8d70\u8fc7\u76f8\u540c\u7684\u4e1c\u897f\u3002\u61d2\u60f0\u6211\u66f4\u613f\u610f\u80fd\u591f\u5c06\u4eba\u4eec\u63a8\u8350\u7ed9\u4e00\u4e2a\u4eba\u53ef\u4ee5\u52a0\u5febGC\u8bbe\u8ba1\u7684\u603b\u4f53\u7a7a\u95f4\uff0c\u4e4b\u540e\u6709\u53ef\u80fd\u6709\u66f4\u591a\u5173\u4e8e\u5fc5\u8981\u7684\u6743\u8861\u7684\u6df1\u5165\u8ba8\u8bba\u3002\n \u6211\u5c06\u6ce8\u610f\u5230\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u7684\u4e00\u4e9bGCS\u662f\u5b9e\u9a8c\u6216\u4e0d\u660e\u610f\u7684\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u76ee\u6807\u662f\u5c55\u793a\u8fd9\u4e9b\u4f5c\u4e3a\u8bbe\u8ba1\u7684\u4f8b\u5b50\uff0c\u4e0d\u4e00\u5b9a\u662f\u60a8\u53ef\u80fd\u5e0c\u671b\u4f7f\u7528\u7684\u901a\u7528\u7bb1\u5b50\uff0c\u4f46\u5176\u4e2d\u4e00\u4e9b\u4e5f\u662f\u53ef\u7528\u7684\u677f\u6761\u7bb1\u3002\n  \u7ecf\u5e38\u6df7\u4e71\u8ba8\u8bbaGCS\u7684\u4e8b\u60c5\u662f\u6839\u636e\u201cGC\u201d\u7684\u4e00\u4e9b\u5b9a\u4e49\uff0c\u7b80\u5355\u7684\u53c2\u8003\u8ba1\u6570\u662fGC\u3002\u901a\u5e38\uff0c\u5b66\u672f\u754c\u4f7f\u7528\u7684GC\u7684\u5b9a\u4e49\u5e7f\u6cdb\u5730\u6307\u7684\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\u3002\u7136\u800c\uff0c\u5927\u591a\u6570\u719f\u6089\u672f\u8bed\u201cGC\u201d\u7684\u7a0b\u5e8f\u5458\u901a\u5e38\u5c06\u5176\u6bd4\u4f5c\u201cJava\uff0cGo\uff0cHaskell\u548cC\uff03Do\u201d\uff0c\u8fd9\u53ef\u4ee5\u660e\u786e\u5730\u79f0\u4e3a\u8ddf\u8e2a\u5783\u573e\u6536\u96c6\u3002\n \u8ddf\u8e2a\u5783\u573e\u6536\u96c6\u662f\u8ddf\u8e2a\u54ea\u4e9b\u5806\u5bf9\u8c61\u76f4\u63a5\u5230\u8fbe\uff08\u201c\u6839\u201d\uff09\uff0c\u6570\u5b57\u6389\u6574\u7ec4\u53ef\u8fbe\u5806\u5bf9\u8c61\uff08\u201c\u8ddf\u8e2a\u201d\uff0c\u4e5f\uff0c\u201c\u6807\u8bb0\u201d\uff09\uff0c\u7136\u540e\u6e05\u7406\u5b83\u4eec\uff08\u201c\u626b\u63cf\u201c\uff09\u3002\n \u9664\u975e\u53e6\u6709\u8bf4\u660e1\uff0c\u5426\u5219\u5728\u6574\u4e2a\u535a\u5ba2\u6587\u7ae0\u4e2d\u6211\u5c06\u4f7f\u7528\u672f\u8bed\u201cGC\u201d\u6765\u53c2\u8003\u8ddf\u8e2a\u5783\u573e\u6536\u96c6/\u6536\u96c6\u5668\u3002\n  \uff08\u5982\u679c\u60a8\u5df2\u7ecf\u60f3\u8981\u5728RUDE\u4e2d\u7f16\u5199GC\u5e76\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u4ee5\u83b7\u53d6\u5982\u4f55\u83b7\u53d6\u7684\u60f3\u6cd5\uff0c\u60a8\u53ef\u4ee5\u8df3\u8fc7\u672c\u8282\u3002\u60a8\u5df2\u7ecf\u77e5\u9053\u4e3a\u4ec0\u4e48\u6709\u4eba\u60f3\u8981\u7f16\u5199\u751f\u9508\u7684GC\uff09 \n\u6bcf\u5f53\u8fd9\u4e00\u4e3b\u9898\u88ab\u63d0\u5347\u6709\u4eba\u4f1a\u4e0d\u53ef\u907f\u514d\u5730\u8d70\u201c\u6211\u8ba4\u4e3a\u751f\u9508\u7684\u70b9\u662f\u907f\u514dGCS\u201d\u6216\u201cGCS\u5c06\u7834\u574f\u751f\u9508\u201d\u6216\u5176\u4ed6\u4e1c\u897f\u3002\u4f5c\u4e3a\u4e00\u822c\u89c4\u5219\uff0c\u4e0d\u7ed9\u8bc4\u8bba\u90e8\u5206\u7ed9\u4e88\u592a\u591a\u91cd\u91cf\u662f\u597d\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6709\u4eba\u53ef\u80fd\u5e0c\u671b\u5728\u9508\u75c5\u4e2d\u7684GC\u7684\u8bed\u4e49\u4e2d\u89e3\u91ca\u4e3a\u4ec0\u4e48\u3002\n \u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u7528\u4f8b\u3002\u9996\u5148\uff0c\u6709\u65f6\u60a8\u9700\u8981\u4f7f\u7528\u5468\u671f\u548cRC\uff06lt; t\uff06gt\u7ba1\u7406\u5185\u5b58;\u7531\u4e8eRC-Cycles\u6cc4\u9732\uff0c\u56e0\u6b64\u5de5\u4f5c\u4e0d\u8db3\u3002 PetGraph\u6216\u7ade\u6280\u573a\u901a\u5e38\u662f\u8fd9\u79cd\u6a21\u5f0f\u7684\u53ef\u63a5\u53d7\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u5e76\u975e\u603b\u662f\uff0c\u7279\u522b\u662f\u5982\u679c\u60a8\u7684\u6570\u636e\u662f\u8d85\u7ea7\u5f02\u6784\u7684\u3002\u8fd9\u79cd\u4e8b\u60c5\u7ecf\u5e38\u5728\u5904\u7406\u5e76\u53d1\u6570\u636e\u7ed3\u6784\u65f6\u7ecf\u5e38\u6323\u8131;\u4f8b\u5982\uff0cCrossbeam\u5177\u6709\u4e00\u4e2a\u57fa\u4e8e\u65f6\u671f\u7684\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\uff0c\u867d\u7136\u4e0d\u662f\u5b8c\u6574\u7684\u8ffd\u8e2aGC\uff0c\u4f46\u4e0eGCS\u5177\u6709\u5f88\u591a\u5171\u540c\u7684\u7279\u5f81\u3002\n \u5bf9\u4e8e\u8fd9\u79cd\u7528\u4f8b\uff0c\u8bbe\u8ba1\u81ea\u5b9a\u4e49GC\u5f88\u5c11\u5fc5\u8981\uff0c\u60a8\u53ef\u4ee5\u67e5\u627e\u50cfGC 2\u8fd9\u6837\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u7bb1\u5b50\u3002\n \u7b2c\u4e8c\u79cd\u6848\u4f8b\u5bf9\u6211\u7684\u7ecf\u9a8c\u66f4\u6709\u8da3\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u901a\u8fc7\u73b0\u6210\u7684\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\uff0c\u5f80\u5f80\u66f4\u9891\u7e41\u5730\u64ad\u79cd\uff1a\u4e0e\u4f7f\u7528\u5783\u573e\u6536\u96c6\u5668\u7684\u7f16\u7a0b\u8bed\u8a00\u96c6\u6210\uff08\u6216\u5b9e\u73b0\uff09\u3002\u4f3a\u670d\u9700\u8981\u8fd9\u6837\u505a\uff0c\u4ee5\u4fbf\u4e0eSpidermoNkey JS\u5f15\u64ce\u548c\u5149\u6cfd\u6240\u9700\u7684\u5149\u6cfd\u6765\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4ee5\u5b9e\u73b0\u5176Lua VM\u7684GC\u3002\u87d2\u86c7\u662f\u7eafFort JS\u8fd0\u884c\u65f6\uff0c\u4f7f\u7528GC Crate\u5c06\u5176\u5783\u573e\u6536\u96c6\u5668\u8fd4\u56de\u3002\n \u6709\u65f6\u5728\u4e0eGCD\u8bed\u8a00\u96c6\u6210\u65f6\uff0c\u60a8\u53ef\u4ee5\u9003\u8131\u4e0d\u9700\u8981\u5b9e\u73b0\u5b8c\u6574\u7684\u5783\u573e\u6536\u96c6\u5668\uff1aJNI\u8fd9\u6837\u505a;\u867d\u7136C ++\u6ca1\u6709\u672c\u5730\u5783\u573e\u6536\u96c6\uff0c\u4f46JNI\u901a\u8fc7\u7b80\u5355\u5730\u201crooting\u201d\uff08\u6211\u4eec\u5c06\u6db5\u76d6\u6709\u70b9\u610f\u5473\u7740\u4ec0\u4e48\uff09\u4efb\u4f55\u4ea4\u53c9\u5230C ++\u8fb9\u7684\u4e1c\u897f3\u3002\u8fd9\u901a\u5e38\u5f88\u597d\uff01\n \u8fd9\u4e00\u70b9\u7684\u7f3a\u70b9\u662f\u6bcf\u4e2a\u4e0eGC\u7ba1\u7406\u7684\u5bf9\u8c61\u7684\u4e92\u52a8\u5fc5\u987b\u901a\u8fc7API\u547c\u53eb;\u60a8\u65e0\u6cd5\u8f7b\u677e\u201c\u5728GC\u4e2d\u201d\u5d4c\u5165\u201c\u9ad8\u6548\u751f\u9508/ C ++\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u5927\u591a\u6570DOM\u7c7b\u578b\uff08\u4f8b\u5982\u5143\u7d20\uff09\u90fd\u662f\u5728\u672c\u673a\u4ee3\u7801\u4e2d\u5b9e\u73b0\u7684;\u5e76\u4e14\u9700\u8981\u80fd\u591f\u5305\u542b\u5bf9\u5176\u4ed6\u539f\u751fGC\u7684\u7c7b\u578b\u7684\u5f15\u7528\uff08\u5e94\u8be5\u53ef\u4ee5\u68c0\u67e5\u8282\u70b9\u7684\u5b50\u8282\u70b9\u800c\u4e0d\u9700\u8981\u8c03\u7528javascript\u5f15\u64ce\uff09\u3002\n \u6240\u4ee5\u6709\u65f6\u60a8\u9700\u8981\u80fd\u591f\u4e0e\u8fd0\u884c\u65f6\u4e0eGC\u96c6\u6210;\u751a\u81f3\u5728\u60a8\u6b63\u5728\u7f16\u5199\u9700\u8981\u4e00\u4e2a\u7684\u8fd0\u884c\u65f6\uff0c\u751a\u81f3\u5b9e\u73b0\u81ea\u5df1\u7684GC\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u901a\u5e38\u5e0c\u671b\u80fd\u591f\u80fd\u591f\u5b89\u5168\u5730\u64cd\u7eb5\u6765\u81eaRUST\u4ee3\u7801\u7684GC'D\u5bf9\u8c61\uff0c\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u5728GC\u5806\u4e0a\u653e\u7f6e\u751f\u9508\u7c7b\u578b\u3002 \n\u4e00\u53e5\u8bdd\uff1a\u751f\u6839\u3002\u5728\u5783\u573e\u6536\u96c6\u5668\u4e2d\uff0c\u5728\u5806\u6808\u4e0a\u4f7f\u7528\u201c\u76f4\u63a5\u201d\u7684\u5bf9\u8c61\u662f\u201c\u6839\u201d\uff0c\u60a8\u9700\u8981\u80fd\u591f\u8bc6\u522b\u5b83\u4eec\u3002\u5728\u8fd9\u91cc\uff0c\u5f53\u6211\u8bf4\u201c\u76f4\u63a5\u201d\u65f6\uff0c\u6211\u7684\u610f\u601d\u662f\u201c\u4e0d\u5fc5\u7ecf\u8fc7\u5176\u4ed6GC'D\u5bf9\u8c61\u8bbf\u95ee\u201d\uff0c\u56e0\u6b64\u5c06\u5bf9\u8c61\u653e\u5728VEC\uff06lt; t\uff06gt\u5185\u90e8\u3002\u4e0d\u4f1a\u4f7f\u5b83\u505c\u6b62\u6210\u4e3a\u4e00\u4e2a\u6839\uff0c\u4f46\u5c06\u5176\u653e\u5728\u5176\u4ed6\u4e00\u4e9bGC'D\u5bf9\u8c61\u4e2d\u3002\n \u4e0d\u5e78\u7684\u662f\uff0cRust\u5e76\u4e0d\u771f\u6b63\u6709\u201c\u76f4\u63a5\u5728\u5806\u6808\u4e0a\u201d\u7684\u6982\u5ff5\uff1a\n struct foo {\u680f\uff1a\u9009\u9879\uff06lt; GC\uff06lt;\u9152\u5427\uff06gt;\uff06gt; } //\u8fd9\u662f\u4e00\u4e2aroot\u8ba9bar = gc :: new\uff08bar :: new\uff08\uff09\uff09; //\u8fd9\u4e5f\u662f\u4e00\u4e2aroot\u8ba9foo = gc :: new\uff08foo :: new\uff08\uff09\uff09; //\u680f\u4e0d\u5e94\u8be5\u662f\u6839\u6e90\uff08\u4f46\u6211\u4eec\u53ef\u4ee5\uff06\uff0339; t\u68c0\u6d4b\u5230\uff01\uff09foo .bar =\u4e00\u4e9b\uff08bar\uff09; //\u7531\u4e8e\u5b83\uff06\uff0339;\u4e0d\u5728//\u53e6\u4e00\u4e2agc\uff06\uff0339; d\u5bf9\u8c61\u8ba9v = vec\uff01 [foo];\n Rust\u7684\u6240\u6709\u6743\u7cfb\u7edf\u5b9e\u9645\u4e0a\u4f7f\u5f97\u66f4\u5bb9\u6613\u5177\u6709\u66f4\u5c11\u7684\u6839\u6e90\uff0c\u56e0\u4e3a\u5b83\u76f8\u5bf9\u5bb9\u6613\u5730\u8bf4\u660e\u4e86GC'd\u5bf9\u8c61\u7684T\uff06amp; t\u7684of gc'd\u5bf9\u8c61\u4e0d\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6839\uff0c\u8ba9rust\u7684\u6240\u6709\u6743\u7cfb\u7edf\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff0c\u4f46\u80fd\u591f\u6392\u9664\u533a\u5206\u201c\u76f4\u63a5\u62e5\u6709\u201d\u548c\u201c\u95f4\u63a5\u62e5\u6709\u7684\u201d\u662f\u8d85\u7ea7\u68d8\u624b\u7684\u3002\n \u8fd9\u4e00\u70b9\u7684\u53e6\u4e00\u65b9\u9762\u662f\u5783\u573e\u6536\u96c6\u771f\u7684\u662f\u5168\u5c40\u7a81\u53d8\u7684\u65f6\u523b - \u5783\u573e\u6536\u96c6\u5668\u901a\u8fc7\u5806\u8bfb\u53d6\uff0c\u7136\u540e\u5220\u9664\u90a3\u91cc\u7684\u4e00\u4e9b\u5bf9\u8c61\u3002\u8fd9\u662f\u811a\u4e0b\u88ab\u62c9\u51fa\u7684\u5730\u6bef\u7684\u4e00\u523b\u3002 Rust\u7684\u6574\u4e2a\u8bbe\u8ba1\u662f\u8ffd\u6c42\u8fd9\u6837\u7684\u7c97\u7cd9\u62c9\u52a8\uff0c\u975e\u5e38\u975e\u5e38\u7cdf\u7cd5\uff0c\u56e0\u6b64\u8fd9\u53ef\u80fd\u6709\u70b9\u95ee\u9898\u3002\u8fd9\u4e0d\u5982\u5b83\u6700\u521d\u58f0\u97f3\u90a3\u4e48\u7cdf\u7cd5\uff0c\u56e0\u4e3a\u5728\u6240\u6709\u5730\u6bef\u62c9\u52a8\u4e4b\u540e\u5927\u591a\u53ea\u662f\u6e05\u7406\u65e0\u6cd5\u5230\u8fbe\u7684\u7269\u4f53\uff0c\u4f46\u5b83\u4f1a\u5728\u5c06\u4e8b\u60c5\u878d\u5408\u5728\u4e00\u8d77\u65f6\u88c1\u526a\u51e0\u6b21\uff0c\u7279\u522b\u662f\u5728\u6790\u6784\u51fd\u6570\u548c\u7ec8\u7ed3\u5668\u4e2d4.\u751f\u6839\u5c06\u5f88\u8fdc\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u80fd\u591f\u5ba3\u5e03\u201c\u5426GC\u53ef\u80fd\u53d1\u751f\u201d\u7684\u4ee3\u7801\u533a\u57df\uff0c\u5219\u66f4\u5bb9\u6613\u5ba3\u5e03\u201c\u4e0d\u53d1\u751f\u201d5\u6240\u4ee5\u60a8\u53ef\u4ee5\u7d27\u5bc6\u5730\u63a7\u5236\u6f0f\u6597\u62c9\u52a8\uff0c\u5e76\u4e14\u5fc5\u987b\u5c11\u62c5\u5fc3\u6839\u3002\n  \u7279\u522b\u503c\u5f97\u5524\u9192\u6790\u6784\u51fd\u6570\u3002 GCD\u7c7b\u578b\u4e0a\u7684\u5b9a\u5236\u6790\u6784\u51fd\u6570\u7684\u5de8\u5927\u95ee\u9898\u662f\u5b9a\u5236\u6790\u6784\u51fd\u6570\u5b8c\u5168\u53ef\u4ee5\u5728\u5783\u573e\u6536\u96c6\u671f\u95f4\u5c06\u81ea\u5df1\u85cf\u5230\u957f\u671f\u53c2\u8003\uff0c\u5bfc\u81f4\u60ac\u6302\u53c2\u8003\uff1a\n struct longlived {\u6447\u6446\uff1aRefcell\uff06lt;\u9009\u62e9\uff06lt; GC\uff06lt; cantkillme\uff06gt;\uff06gt;\uff06gt; } struct cantkillme {//\u5728\u65bd\u5de5self_ref\u671f\u95f4\u8bbe\u7f6e\u4e3a\u70b9\u4e3a\u81ea\u5df1\uff1aRefcell\uff06lt;\u9009\u62e9\uff06lt; GC\uff06lt; cantkillme\uff06gt;\uff06gt;\uff06gt; long_lived\uff1agc\uff06lt; foo\uff06gt; } icill for cantkillme {fn drop\uff08\uff06amp; mut self\uff09{//\u9644\u52a0\u5230long_lived * self .long_lived.dangle .borrow_mut\uff08\uff09= some\uff08self .self_ref .borrow\uff08\uff09.clone\uff08\uff09.unwrap\uff08\uff09\uff09 ;\u8ba9long = gc :: new\uff08longlived :: new\uff08\uff09\uff09; {\u4ee4\u4e0d\u80fd= gc :: new\uff08cantkillme :: new\uff08\uff09\uff09; * cant.self_ref .brold_mut\uff08\uff09=\u4e00\u4e9b\uff08cant.clone\uff08\uff09\uff09; //\u65e0\u6cd5\u8d85\u51fa\u8303\u56f4\uff0cCantkillme :: Drop\u6b63\u5728\u8fd0\u884c//\u65e0\u6cd5\u8fde\u63a5\u5230long_lived.dangle\u4f46\u4ecd\u6e05\u9664} //\u60ac\u5782\u7684\u53c2\u8003\uff01\u5047\u8bbeLoveLing = long .dangle .grow\uff08\uff09.unwrap\uff08\uff09; \n\u6b64\u5904\u6700\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u662f\u7981\u6b62\u4f7f\u7528\uff03[\u5bfc\u51fa\uff08\u8ddf\u8e2a\uff09]\u7684\u7c7b\u578b\u4e0a\u7684\u6790\u6784\u51fd\u6570\uff0c\u8be5\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7\u4f7f\u81ea\u5b9a\u4e49\u5bfc\u51fa\u751f\u6210\u5220\u9664\u5b9e\u73b0\uff0c\u6216\u8005\u5b83\u751f\u6210\u5bfc\u81f4\u51b2\u7a81\u7c7b\u578b\u9519\u8bef\u7684\u67d0\u4e9b\u5185\u5bb9\u6765\u5b8c\u6210\u3002\n \u60a8\u53ef\u4ee5\u53e6\u5916\u63d0\u4f9b\u5177\u6709\u4e0d\u540c\u8bed\u4e49\u7684\u6700\u7ec8\u6027\u72b6\uff1aGC\u5728\u6e05\u7406GC\u5bf9\u8c61\u65f6\u8c03\u7528\u5b83\uff0c\u4f46\u5b83\u53ef\u80fd\u4f1a\u591a\u6b21\u8c03\u7528\u6216\u6839\u672c\u4e0d\u8c03\u7528\u3002\u8fd9\u79cd\u4e1c\u897f\u5728\u94c1\u9508\u4e4b\u5916\u7684GCS\u4e5f\u662f\u5178\u578b\u7684\u3002\n  \u5728\u5927\u591a\u6570\u5783\u573e\u6536\u96c6\u7684\u8bed\u8a00\u4e2d\uff0c\u6709\u4e00\u4e2a\u8fd0\u884c\u65f6\u63a7\u5236\u6240\u6709\u6267\u884c\uff0c\u90fd\u77e5\u9053\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u53d8\u91cf\uff0c\u5e76\u4e14\u80fd\u591f\u5728\u5b83\u559c\u6b22\u65f6\u6267\u884c\u4ee5\u8fd0\u884cGC\u3002\n Rust\u6709\u4e00\u4e2a\u6700\u5c0f\u7684\u8fd0\u884c\u65f6\uff0c\u4e0d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5c24\u5176\u662f\u60a8\u7684\u56fe\u4e66\u9986\u53ef\u4ee5\u6302\u94a9\u7684\u53ef\u63d2\u62d4\u65b9\u5f0f\u3002\u5bf9\u4e8e\u7ebf\u7a0b\u672c\u5730GCS\uff0c\u60a8\u57fa\u672c\u4e0a\u5fc5\u987b\u7f16\u5199\u5b83\uff0c\u4f7f\u5f97GC\u64cd\u4f5c\uff08\u50cfGC\u5b57\u6bb5\u7a81\u53d8\u7684\u5185\u5bb9;\u57fa\u672c\u4e0a\u7531\u60a8\u7684GC\u5e93\u516c\u5f00\u7684API\u5b50\u96c6\uff09\u662f\u552f\u4e00\u53ef\u80fd\u89e6\u53d1\u5783\u573e\u6536\u96c6\u5668\u7684\u4e1c\u897f\u3002\n \u5e76\u53d1GCS\u53ef\u4ee5\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u4e0a\u89e6\u53d1GC\uff0c\u4f46\u662f\u6bcf\u5f53\u8fd9\u4e9b\u7ebf\u7a0b\u5c1d\u8bd5\u6267\u884c\u53ef\u80fd\u7531\u6b63\u5728\u8fd0\u884c\u7684\u5783\u573e\u6536\u96c6\u5668\u5931\u6548\u7684GC\u64cd\u4f5c\u65f6\uff0c\u901a\u5e38\u9700\u8981\u6682\u505c\u5176\u4ed6\u7ebf\u7a0b\u3002\n \u867d\u7136\u8fd9\u53ef\u80fd\u4f1a\u9650\u5236\u5783\u573e\u6536\u96c6\u5668\u672c\u8eab\u7684\u7075\u6d3b\u6027\uff0c\u4f46\u8fd9\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u4eceAPI\u8bbe\u8ba1\u65b9\u9762\u975e\u5e38\u9002\u5408\uff1a\u5783\u573e\u6536\u96c6\u9636\u6bb5\u53ea\u80fd\u5728\u4ee3\u7801\u7684\u67d0\u4e9b\u77e5\u540d\u65f6\u523b\u53d1\u751f\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u9700\u8981\u5236\u4f5c\u5bf9\u8fd9\u4e9b\u8fb9\u754c\u5b89\u5168\u7684\u4e8b\u60c5\u3002\u8bb8\u591a\u8bbe\u8ba1\u6211\u4eec\u5c06\u4ecb\u7ecd\u4ece\u8fd9\u4e2a\u89c2\u5bdf\u7ed3\u679c\u7684\u6784\u5efa\u3002\n  \u5728\u8fdb\u5165GC\u8bbe\u8ba1\u7684\u5b9e\u9645\u793a\u4f8b\u4e4b\u524d\uff0c\u6211\u60f3\u6307\u51fa\u6240\u6709\u8fd9\u4e9b\u4e4b\u95f4\u7684\u4e00\u4e9b\u8bbe\u8ba1\uff0c\u5c24\u5176\u662f\u4ed6\u4eec\u5982\u4f55\u8fdb\u884c\u8ddf\u8e2a\uff1a \n\u201c\u8ddf\u8e2a\u201d\u662f\u904d\u5386GC\u5bf9\u8c61\u56fe\u8868\u7684\u64cd\u4f5c\uff0c\u4ece\u6839\u6e90\u5f00\u59cb\uff0c\u4ed4\u7ec6\u9605\u8bfb\u4ed6\u4eec\u7684\u5b69\u5b50\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7684\u5b69\u5b50\u7684\u5b69\u5b50\u7b49\u3002\n  //\u4f7f\u7528\u624b\u5de5\u6267\u884c\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u83b7\u5f97\u9519\u8bef\u7684\u4e0d\u5b89\u5168\u7279\u6027\u8ddf\u8e2a{fn trace\uff08\uff06amp; mut self\uff0cgc_context\uff1a\uff06amp; mut gccontext\uff09; }\uff03[\u6d3e\u751f\uff08\u8ffd\u8e2a\uff09] struct foo {vec\uff1avec\uff06lt; GC\uff06lt;\u9152\u5427\uff06gt;\uff06gt; \uff0cextra_thing\uff1agc\uff06lt; Baz\uff06gt; \uff0cjust_a_string\uff1astring}\n Trace\u7684\u81ea\u5b9a\u4e49\u5bfc\u51fa\u57fa\u672c\u4e0a\u53ea\u9700\u5728\u6240\u6709\u5b57\u6bb5\u4e0a\u8c03\u7528trace\uff08\uff09\u3002\u5c06\u5199\u5165Vec\u7684\u8ddf\u8e2a\u5b9e\u73b0\uff0c\u4ee5\u4fbf\u5728\u6240\u6709\u5b57\u6bb5\u4e0a\u8c03\u7528trace\uff08\uff09\uff0c\u800c\u5b57\u7b26\u4e32\u7684\u8ddf\u8e2a\u5b9e\u73b0\u5c06\u65e0\u5173\u3002 gc\uff06lt; t\uff06gt;\u53ef\u80fd\u6709\u4e00\u4e2a\u6807\u8bb0\u5728gccontext\u4e2d\u7684\u53ef\u8fbe\u6027\uff0c\u6216\u7c7b\u4f3c\u7684\u8ff9\u8c61\u3002\n \u8fd9\u662f\u4e00\u4e2a\u6f02\u4eae\u7684\u6807\u51c6\u6a21\u5f0f\uff0c\u800c\u8ffd\u8e2a\u7279\u5f81\u7684\u7ec6\u8282\u901a\u5e38\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u4e00\u822c\u601d\u60f3\u5927\u81f4\u76f8\u540c\u3002\n \u6211\u4e0d\u4f1a\u8fdb\u5165Mark-and Sweep\u7b97\u6cd5\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u5982\u4f55\u5de5\u4f5c\u7684\u5b9e\u9645\u7ec6\u8282;\u5b83\u4eec\u6709\u5f88\u591a\u6f5c\u5728\u7684\u8bbe\u8ba1\uff0c\u5b83\u4eec\u4ece\u8bbe\u8ba1\u5b89\u5168GC API\u7684\u89d2\u5ea6\u6765\u770b\u5e76\u4e0d\u662f\u90a3\u4e48\u6709\u8da3\u3002\u4f46\u662f\uff0c\u4e00\u822c\u601d\u60f3\u662f\u4fdd\u6301\u6700\u521d\u7531root\u586b\u5145\u7684\u627e\u5230\u7684\u5bf9\u8c61\u7684\u961f\u5217\uff0c\u8ddf\u8e2a\u5b83\u4eec\u4ee5\u67e5\u627e\u65b0\u5bf9\u8c61\uff0c\u5982\u679c\u5c1a\u672a\u8fdb\u884c\u8ddf\u8e2a\uff0c\u5219\u4f1a\u5411\u4e0a\u5212\u5206\u5b83\u4eec\u3002\u6e05\u7406\u672a\u627e\u5230\u7684\u4efb\u4f55\u5bf9\u8c61\u3002\n  \u8fd9\u4e9b\u8bbe\u8ba1\u4e4b\u95f4\u7684\u53e6\u4e00\u4e2a\u5171\u6027\u662fGC\uff06lt; t\uff06gt;\u603b\u662f\u6f5c\u5728\u7684\u5171\u4eab\uff0c\u56e0\u6b64\u9700\u8981\u4e25\u683c\u63a7\u5236\u53ef\u53d8\u6027\uff0c\u4ee5\u6ee1\u8db3Rust\u7684\u6240\u6709\u6743\u4e0d\u53d8\u3002\u8fd9\u901a\u5e38\u901a\u8fc7\u4f7f\u7528\u5185\u90e8\u53d8\u5f62\u6027\u6765\u5b9e\u73b0\uff0c\u5c31\u50cf\u5982\u4f55RC\uff06lt; t\uff06gt;\u51e0\u4e4e\u603b\u662f\u4e0eRefcell\uff06lt; t\uff06gt\u914d\u5bf9;\u7136\u800c\uff0c\u5bf9\u4e8e\u7a81\u53d8\uff0c\u7136\u800c\u4e00\u4e9b\u65b9\u6cd5\uff08\u59827osephine\uff09\u7684\u65b9\u6cd5\u90fd\u5141\u8bb8\u5728\u6ca1\u6709\u8fd0\u884c\u65f6\u68c0\u67e5\u7684\u65e0\u53d8\u9a71\u6027\u3002\n  \u4e00\u4e9bGCS\u662f\u5355\u7ebf\u7a0b\u7684\uff0c\u6709\u4e9bGCS\u662f\u591a\u7ebf\u7a0b\u7684\u3002\u5355\u4e2a\u87ba\u7eb9\u87ba\u7eb9\u901a\u5e38\u5177\u6709GC\uff06lt; t\uff06gt;\u4e0d\u53d1\u9001\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\u5728\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e0a\u8bbe\u7f6eGC\u7c7b\u578b\u7684\u591a\u4e2a\u56fe\u5f62\uff0c\u5b83\u4eec\u57fa\u672c\u4e0a\u662f\u72ec\u7acb\u7684\u3002\u5783\u573e\u6536\u96c6\u4ec5\u5f71\u54cd\u5b83\u6b63\u5728\u6267\u884c\u7684\u7ebf\u7a0b\uff0c\u6240\u6709\u5176\u4ed6\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u7ee7\u7eed\u963b\u788d\u3002 \n\u591a\u7ebf\u7a0bGCS\u5c06\u5177\u6709\u53d1\u9001GC\uff06lt; t\uff06gt;\u7c7b\u578b\u3002\u5783\u573e\u6536\u96c6\u901a\u5e38\uff0c\u4f46\u5e76\u975e\u603b\u662f\u963b\u6b62\u4efb\u4f55\u5c1d\u8bd5\u5728\u8be5\u65f6\u95f4\u5185\u8bbf\u95ee\u7531GC\u7ba1\u7406\u7684\u6570\u636e\u7684\u7ebf\u7a0b\u3002\u5728\u67d0\u4e9b\u8bed\u8a00\u4e2d\uff0c\u6709\u201c\u505c\u6b62\u4e16\u754c\u201d\u5783\u573e\u6536\u96c6\u5668\uff0c\u5b83\u4f1a\u963b\u6b62\u7531\u7f16\u8bd1\u5668\u63d2\u5165\u7684\u201c\u5b89\u5168\u70b9\u201d\u7684\u6240\u6709\u7ebf\u7a0b; Rust\u6ca1\u6709\u80fd\u529b\u63d2\u5165\u6b64\u7c7b\u5b89\u5168\u70b9\u5e76\u5728GCS\u4e0a\u963b\u585e\u7ebf\u7a0b\u5728\u5e93\u7ea7\u522b\u5b8c\u6210\u3002\n \u4e0b\u9762\u7684\u5927\u591a\u6570\u4f8b\u5b50\u90fd\u662f\u5355\u7ebf\u7a0b\uff0c\u4f46\u5b83\u4eec\u7684API\u8bbe\u8ba1\u5e76\u4e0d\u96be\u4ee5\u6269\u5c55\u5230\u5047\u8bbe\u7684\u591a\u7ebf\u7a0bGC\u3002\n  GC Crate\u662f\u6211\u7528Nika Layzell\u5199\u7684\u4e00\u4e2a\uff0c\u4e3b\u8981\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6709\u8da3\u7684\u8fd0\u52a8\uff0c\u5f04\u6e05\u695a\u662f\u5426\u53ef\u4ee5\u8fdb\u884c\u5b89\u5168\u7684GC API\u3002\u6211\u4ee5\u524d\u6df1\u5165\u4e86\u89e3\u8bbe\u8ba1\uff0c\u4f46\u8bbe\u8ba1\u7684\u672c\u8d28\u662f\u5b83\u786e\u5b9e\u4e0e\u5f15\u7528\u8ba1\u6570\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u4ee5\u8ddf\u8e2a\u6839\uff0c\u5f3a\u5236\u6240\u6709GC\u7a81\u53d8\u90fd\u901a\u8fc7\u7279\u6b8a\u7684GCCell\u7c7b\u578b\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u53ef\u4ee5\u66f4\u65b0\u6839\u6570\u3002\u57fa\u672c\u4e0a\uff0c\u53ea\u8981\u67d0\u4e8b\u6210\u4e3a\u6839\u6216\u505c\u6b62\u662froot\uff0c\u5c31\u4f1a\u66f4\u65b0\u201c\u6839\u6570\u201d\uff1a\n struct foo {\u680f\uff1agccell\uff06lt;\u9009\u62e9\uff06lt; GC\uff06lt;\u9152\u5427\uff06gt;\uff06gt;\uff06gt; } //\u8fd9\u662f\u4e00\u4e2a\u6839\uff08root count = 1\uff09\u8ba9\u680f= gc :: new\uff08bar :: new\uff08\uff09\uff09; //\u8fd9\u4e5f\u662f\u4e00\u4e2a\u6839\uff08root count = 1\uff09\u8ba9foo = gc :: new\uff08foo :: new\uff08\uff09\uff09; // .borrow_mut\uff08\uff09\uff06\uff0339; s raii guard root bar\uff08\u5c06\u5176\u6839\u6570\u8bbe\u7f6e\u4e3a0\uff09* foo .bar .broldr_mut\uff08\uff09=\u4e00\u4e9b\uff08bar\uff09; // foo\u4ecd\u7136\u662f\u4e00\u4e2a\u6839\uff0c\u6ca1\u6709\u547c\u53eb.set\uff08\uff09\u8ba9v = vec\uff01 [foo]; //\u5728Dradleucion\u65f6\uff0cFoo\uff06\uff0339; s\u6839\u6570\u8bbe\u7f6e\u4e3a0\n \u5f53\u5728\u5806\u88ab\u8ba4\u4e3a\u662f\u6839\u636e\u4e00\u4e9b\u542f\u53d1\u5f0f\u7684\u5806\u88ab\u8ba4\u4e3a\u5df2\u7ecf\u5408\u7406\u5730\u8fdb\u884c\u4e86\u5408\u7406\u5927\u7684\u60c5\u51b5\u65f6\uff0c\u5c06\u53d1\u751f\u5b9e\u9645\u7684\u5783\u573e\u6536\u96c6\u9636\u6bb5\u3002\n \u867d\u7136\u8fd9\u57fa\u672c\u4e0a\u662f\u201c\u514d\u8d39\u201d\u7684\u8bfb\u6570\uff0c\u4f46\u8fd9\u662f\u4efb\u4f55\u7c7b\u578b\u5199\u5165\u7684\u53c2\u8003\u6570\u91cf\u7684\u516c\u5e73\u6570\u91cf\uff0c\u8fd9\u53ef\u80fd\u4e0d\u9700\u8981;\u4f7f\u7528GCS\u7684\u76ee\u6807\u901a\u5e38\u662f\u907f\u514d\u53c2\u8003\u8ba1\u6570\u6837\u56fe\u6848\u7684\u6027\u80fd\u7279\u5f81\u3002\u6700\u7ec8\u8fd9\u662f\u4e00\u79cd\u6df7\u5408\u65b9\u6cd5\uff0c\u5373\u8ddf\u8e2a\u548c\u53c2\u8003\u8ba1\u65706\u7684\u6df7\u5408\u3002\n \u5982\u679c\u60a8\u53ea\u60f3\u8981\u51e0\u4ef6\u4e8b\uff0cGC\u4f5c\u4e3a\u901a\u7528GC\u5f88\u6709\u7528\uff0c\u800c\u65e0\u9700\u8003\u8651\u8fc7\u591a\u3002\u4e00\u822c\u8bbe\u8ba1\u53ef\u4ee5\u5e94\u7528\u4e8e\u4e0e\u53e6\u4e00\u79cd\u8bed\u8a00\u8fd0\u884c\u65f6\u7684\u4e13\u4e1aGC\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u8ddf\u8e2a\u6839\u90e8\u7684\u660e\u786e\u65b9\u5f0f;\u4f46\u5b83\u53ef\u80fd\u4e0d\u4e00\u5b9a\u5177\u6709\u6240\u9700\u7684\u6027\u80fd\u7279\u5f81\u3002 \n\u4f3a\u670d\u5668\u662f\u6211\u66fe\u7ecf\u5168\u804c\u5de5\u4f5c\u7684\u6d4f\u89c8\u5668\u5f15\u64ce\u3002\u5982\u524d\u6240\u8ff0\uff0c\u6d4f\u89c8\u5668\u5f15\u64ce\u901a\u5e38\u5728\u672c\u673a\uff08\u5373Rust\u6216C ++\uff0c\u800c\u4e0d\u662fJS\uff09\u4ee3\u7801\u4e2d\u5b9e\u73b0\u5927\u91cf\u7684DOM\u7c7b\u578b\uff0c\u56e0\u6b64\u4f8b\u5982\u8282\u70b9\u662f\u7eafRUST\u5bf9\u8c61\uff0c\u5b83\u5305\u542b\u5bf9\u5176\u5b50\u9879\u7684\u76f4\u63a5\u5f15\u7528\uff0c\u56e0\u6b64\u751f\u9508\u4ee3\u7801\u53ef\u4ee5\u6267\u884c\u50cf\u6811\u6a2a\u7a7f\u6811\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u5fc5\u5728js\u548c\u751f\u9508\u4e4b\u95f4\u6765\u56de\u6765\u56de\u3002\n \u4f3a\u670d\u7684\u6a21\u578b\u662f\u4e00\u4e2a\u6709\u70b9\u5947\u602a\u7684\u6a21\u578b\uff1a\u6839\u662f\u4e00\u79cd\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u800cLints\u5f3a\u5236\u5f3a\u5236\u6267\u884c\u5806\u79ef\u7684\u5806\u5f15\u7528\u6c38\u8fdc\u4e0d\u4f1a\u653e\u5728\u5806\u6808\u4e0a\uff1a\n \uff03[dom_struct] //\u8fd9\u662f\uff03[\u6d3e\u751f\uff08Jstraceable\uff09]\u52a0\u4e0aLints\u7684\u4e00\u4e9b\u6807\u8bb0Pub struct\u8282\u70b9{//\u7236\u7c7b\u578b\uff0c\u7528\u4e8e\u7ee7\u627feventtarget\uff1aEventTarget\uff0c//\u5728\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u8f85\u52a9\u7c7b\u578b// the Refcell\uff0c\u9009\u9879\u548cDOM\uff0c\u4f46\u662fi\uff06\uff0339; Ve\u7b80\u5316\u4e86\u5b83\u4f7f\u7528// stdlib\u7c7b\u578b\u6b64exampre_sibling\uff1aRefcell\uff06lt;\u9009\u62e9\uff06lt; DOM\uff06lt;\u8282\u70b9\uff06gt;\uff06gt;\uff06gt; \uff0cnext_sibling\uff1aRefcell\uff06lt;\u9009\u62e9\uff06lt; DOM\uff06lt;\u8282\u70b9\uff06gt;\uff06gt;\uff06gt; \uff0c// ...} islicn\u8282\u70b9{fn frob_next_sibling\uff08\uff06amp; self\uff09{//\u5b57\u6bb5\u53ef\u4ee5\u4f5c\u4e3a\u501f\u7528\u8bbf\u95ee\uff0c\u5982\u679cLet\u67d0\u4e2a\uff08\u4e0b\u4e00\u4e2a\uff09= self .growner_sibling .borry.as_ref\uff08\uff09{next\u3002 frob\uff08\uff09; fn get_next_sibling\uff08\uff06amp; self\uff09 - \uff06gt;\u9009\u62e9\uff06lt; domroot\uff06lt;\u8282\u70b9\uff06gt;\uff06gt; {//\uff0c\u4f46\u60a8\u9700\u8981\u4e3a\u5b83\u4eecrootipts roothing roflow // .orot\uff08\uff09\u8f6c\u52a8dom\uff06lt; t\uff06gt;\u8fdb\u5165domroot\uff06lt; t\uff06gt; self .next_sibling .borrow\uff08\uff09.as_ref\uff08\uff09.map\uff08| x | x .root\uff08\uff09\uff09} fn\u975e\u6cd5\uff08\uff06amp; self\uff09{//\u8fd9\u884c\u4ee3\u7801\u4f1a\u88ab\u79f0\u4e3aunrooted_must_root //\u7684\u81ea\u5b9a\u4e49lein\u88ab\u6697\u793a\u5b83\u6709\u70b9\u6709\u6548\u5730\u4e0e\u751f\u9508\u7684\u5fc5\u8981\u7684\u4e1c\u897f\u6709\u6240\u4f5c\u4e3a\uff09Let Ohno\uff1aDOM\uff06lt;\u8282\u70b9\uff06gt; = self .next_sibling .borrow_mut\uff08\uff09.take\uff08\uff09; }}\n DOM\uff06lt; t\uff06gt;\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u8868\u73b0\u5f97\u50cf\uff06amp; t\u4f46\u6ca1\u6709\u5bff\u547d\u7684\u667a\u80fd\u6307\u9488\uff0c\u800cdomroot\uff06lt; t\uff06gt;\u6709\u751f\u6839\u7684\u989d\u5916\u884c\u4e3a\uff08\u4ee5\u53ca\u4e22\u5f03\u7684\u6389\u843d\uff09\u3002\u81ea\u5b9a\u4e49Lint\u63d2\u4ef6\u57fa\u672c\u4e0a\u5f3a\u5236\u6267\u884cDOM\uff06lt; t\uff06gt;\u548c\u4efb\u4f55DOM\u7ed3\u6784\uff08\u7528\uff03[dom_struct]\u6807\u8bb0\uff09\u6c38\u8fdc\u4e0d\u4f1a\u901a\u8fc7Domroot\uff06lt; t\uff06gt\u6765\u8bbf\u95ee\uff03\u6216\uff06amp; t\u3002\n \u6211\u4e0d\u4f1a\u63a8\u8350\u8fd9\u79cd\u65b9\u6cd5;\u5b83\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u6211\u4eec\u60f3\u8981\u79fb\u5f00\u4e00\u6bb5\u65f6\u95f4\uff0c\u56e0\u4e3a\u5b83\u4f9d\u8d56\u4e8e\u5b9a\u5236\u63d2\u4ef6\u7684\u58f0\u97f3\u3002\u4f46\u5b83\u503c\u5f97\u5b8c\u6574\u8d77\u89c1\u3002\n  \u9274\u4e8e\u4f3a\u670d\u73b0\u6709\u7684GC\u89e3\u51b3\u65b9\u6848\u53d6\u51b3\u4e8e\u63d2\u5165\u7f16\u8bd1\u5668\u505a\u989d\u5916\u7684\u9759\u6001\u5206\u6790\uff0c\u6211\u4eec\u60f3\u8981\u66f4\u597d\u7684\u4e1c\u897f\u3002\u56e0\u6b64\uff0cAlan\u8bbe\u8ba1\u4e86Josephine\uff08\u201cJS Affine\u201d\uff09\uff0c\u5b83\u4f7f\u7528Rust\u7684\u4eff\u5c04\u7c7b\u578b\u548c\u4ee5\u66f4\u6e05\u6d01\u7684\u65b9\u5f0f\u501f\u7528\u4ee5\u63d0\u4f9b\u5b89\u5168\u7684GC\u7cfb\u7edf\u3002\n Josephine\u660e\u786e\u5730\u8bbe\u8ba1\u7528\u4e8e\u4f3a\u670d\u7528\u4f8b\uff0c\u56e0\u6b64\u5728\u201c\u9694\u95f4\u201d\u5468\u56f4\u6709\u5f88\u591a\u6574\u9f50\u7684\u4e8b\u60c5\uff0c\u8fd9\u53ef\u80fd\u662f\u65e0\u5173\u7684\uff0c\u9664\u975e\u60a8\u7279\u522b\u5e0c\u671b\u60a8\u7684GC\u4e0eJS\u5f15\u64ce\u96c6\u6210\u3002 \n\u6211\u4e4b\u524d\u63d0\u5230\u7684\u662f\uff0c\u5783\u573e\u6536\u96c6\u9636\u6bb5\u53ea\u80fd\u5728\u67d0\u4e9b\u4f17\u6240\u5468\u77e5\u7684\u4ee3\u7801\u7684\u67d0\u4e9b\u4f17\u6240\u5468\u77e5\u7684\u65f6\u523b\u53d1\u751f\u7684\u4e8b\u5b9e\u5b9e\u9645\u4e0a\u53ef\u4ee5\u4f7fGC\u8bbe\u8ba1\u66f4\u5bb9\u6613\uff0c\u800cJosephine\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\n Josephine\u6709\u4e00\u4e2a\u201cJS\u4e0a\u4e0b\u6587\u201d\uff0c\u5b83\u5c06\u5728\u4efb\u4f55\u5730\u65b9\u4f20\u9012\uff0c\u57fa\u672c\u4e0a\u4ee3\u8868\u4e86GC\u672c\u8eab\u3002\u6267\u884c\u53ef\u80fd\u89e6\u53d1GC\u7684\u64cd\u4f5c\u65f6\uff0c\u60a8\u5fc5\u987b\u5c06\u4e0a\u4e0b\u6587\u53d8\u5f97\u53ef\u53d8\u5730\u501f\u7528\uff0c\u800c\u5728\u8bbf\u95ee\u5806\u5bf9\u8c61\u65f6\uff0c\u60a8\u9700\u8981\u501f\u7528\u4e0a\u4e0b\u6587\u3002\u60a8\u53ef\u4ee5root\u5806\u5806\u5220\u9664\u6b64\u8981\u6c42\uff1a\n // cx\u662f\u4e00\u4e2a`jscontext`\uff0c`\u8282\u70b9'\u662f`\uff06\uff0339; a\uff0cc\uff0cnode\uff06gt;`//\u5047\u8bbenext_sibling\u548cprev_sibling\u4e0d\u662f\u7528\u4e8esimplicity //\u501f\u7528`\uff06\uff0339; b `\u8ba9next_sibling\uff1a\uff06amp; \uff06\uff0339; b\u8282\u70b9=\u8282\u70b9.next_sibling\u3002\u660e\u5ea6\uff08cx\uff09; println\uff01 \uff08\uff06\uff0334;\u59d3\u540d\uff1a{\uff1a\uff1f}\uff06\uff0334;\uff0cnext_sibling .name\uff09; //\u975e\u6cd5\uff0c\u56e0\u4e3acx\u7531next_sibling // node.prev_sibling.borrow_mut\uff08cx\uff09.frob\uff08\uff09; //\u4eceNext_sibling\u8bfb\u53d6\u4ee5\u786e\u4fdd\u5b83\u751f\u5b58\u5728\u8fd9\u4e2along println\uff01 \uff08\uff06\uff0334; {\uff1a\uff1f}\uff06\uff0334;\uff0cnext_sibling .name\uff09;\u8ba9ref mut root = cx .new_root\uff08\uff09; //\u4e0d\u518d\u9700\u8981\u501f\u7528cx\uff0c\u501f\u7528cx root for\uff06\uff0339; root\uff0c\u800c\u662f\u8ba9next_sibling\uff1ajsManaged\uff06lt; \uff06\uff0339; root\uff0cc\uff0cnode\uff06gt; =\u8282\u70b9.next_sibling .in_root\uff08root\uff09; //\u73b0\u5728\u5b83\uff06\uff0339;\u5f88\u597d\uff0c\u6ca1\u6709\u51fa\u8272\u7684`cx`\u8282\u70b9.prev_sibling .borrow_mut\uff08cx\uff09.frob\uff08\uff09; //\u4eceNext_sibling\u8bfb\u53d6\u4ee5\u786e\u4fdd\u5b83\u751f\u5b58\u5728\u8fd9\u4e2along println\uff01 \uff08\uff06\uff0334; {\uff1a\uff1f}\uff06\uff0334;\uff0cnext_sibling .name\uff09;\n new_root\uff08\uff09\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6839\uff0cin_root\u5c06js\u6258\u7ba1\u7c7b\u578b\u7684\u751f\u547d\u5468\u671f\u8fde\u63a5\u5230root\uff0c\u800c\u4e0d\u662fjscontext\u501f\u7528\uff0c\u91ca\u653ejscontext\u5e76\u5141\u8bb8\u5b83\u5728\u5c06\u6765\u7684\u53ef\u53d8\u5730\u501f\u7528.brower_mut\uff08\uff09\u8c03\u7528\u3002\n \u8bf7\u6ce8\u610f\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u4e0eRefcell ::\u501f\u7528\uff08\uff09\u7684\u76f8\u4f3c\u6027\uff0c\u4f46\u5728\u8fd9\u91cc\u6ca1\u6709\u8fd0\u884c\u65f6\u501f\u9605 - \u652f\u7968\u8d39\u7528\uff0c\u800c\u662f\u5728\u505a\u4e00\u4e9b\u7ec8\u8eab\u6742\u800d\u4ee5\u4f7f\u4e8b\u60c5\u5b89\u5168\u3002\u521b\u5efa\u6839\u901a\u5e38\u5177\u6709\u8fd0\u884c\u65f6\u6210\u672c\u3002\u6709\u65f6\u60a8\u53ef\u80fd\u9700\u8981\u4f7f\u7528Refcell\uff06lt; t\uff06gt;\u51fa\u4e8e\u4e0eRC\u4e2d\u4f7f\u7528\u7684\u76f8\u540c\u539f\u56e0\uff0c\u4f46\u4e3b\u8981\u4ec5\u9002\u7528\u4e8e\u975eGCD\u5b57\u6bb5\u3002\n  \uff03[\u6d3e\u751f\uff08\u590d\u5236\uff0c\u514b\u9686\uff0c\u8c03\u8bd5\uff0cEQ\uff0cPartiaLeq\uff0cJstraceable\uff0cJslifeTime\uff0cJSCompartmental\uff09] Pub\u7ed3\u6784\u5143\u7d20\uff06lt; \uff06\uff0339; a\uff0cc\uff06gt; \uff08Pub Jsmanaged\uff06lt;\uff06\uff0339; a\uff0cc\uff0cmanteelement\uff06lt; 39; a\uff0cc\uff06gt;\uff09;\uff09; \uff03[\u6d3e\u751f\uff08Jstraceable\uff0cJslifeTime\uff0cJSCompartmental\uff09] Pub struct maintemement\uff06lt; \uff06\uff0339; a\uff0cc\uff06gt; {name\uff1ajsstring\uff06lt; \uff06\uff0339; a\uff0cc\uff06gt; \uff0c\u7236\uff1a\u9009\u9879\uff06lt;\u5143\u7d20\uff06lt; \uff06\uff0339; a\uff0cc\uff06gt;\uff06gt;\u513f\u7ae5\uff1avec\uff06lt;\u5143\u7d20\uff06lt; \uff06\uff0339; a\uff0cc\uff06gt;\uff06gt; }\n \u5176\u4e2d\u5143\u7d20\uff06lt; 39; a\uff06gt;\u662f\u4e00\u79cd\u65b9\u4fbf\u7684\u53ef\u590d\u5236\u53c2\u8003\uff0c\u8be5\u53c2\u8003\u5c06\u5728\u5176\u4ed6GC\u7c7b\u578b\u4e2d\u4f7f\u7528\uff0c\u4ee5\u53ca\u672c\u5730\u7cbe\u9ad3.A\uff06gt;\u662f\u5b83\u7684\u80cc\u886c\u50a8\u5b58\u3002 C\u53c2\u6570\u4e0e\u9694\u95f4\u6709\u5173\uff0c\u73b0\u5728\u53ef\u4ee5\u5ffd\u7565\u3002 \n\u503c\u5f97\u6307\u51fa\u7684\u662f\u4e00\u4e2a\u7b80\u6d01\u7684\u4e8b\u60c5\u662f\uff0c\u5373\u4f7f\u6839\u5141\u8bb8\u5bf9\u540c\u4e00\u5bf9\u8c61\u6301\u6709\u591a\u4e2a\u5f15\u7528\uff0c\u4e5f\u6ca1\u6709\u8fd0\u884c\u65f6\u501f\u7528\u68c0\u67e5\u3002  \u8ba9parent_root = cx .new_root\uff08\uff09; \u8ba9\u7236=\u5143\u7d20\u3002\u660e\u5ea6\uff08cx\uff09.parent .in_root\uff08parent_root\uff09; \u8ba9ref mut child_root = cx .new_root\uff08\uff09; //\u53ef\u80fd\u662f\u5bf9`\u5143\u7d20\u7684\u7b2c\u4e8c\u4e2a\u5f15\u7528\u5982\u679c\u5b83\u662fw  ...... ", "note_en": "I\u2019ve been thinking about garbage collection in Rust for a long time, ever since I started working on  Servo\u2019s JS layer. I\u2019ve  designed a GC library,  worked on GC integration ideas for Rust itself, worked on Servo\u2019s JS GC integration, and helped out with a  couple  other GC projects in Rust.\n As a result, I tend to get pulled into GC discussions fairly often. I enjoy talking about GCs \u2013 don\u2019t get me wrong \u2013 but I often end up going over the same stuff. Being  lazy I\u2019d much prefer to be able to refer people to a single place where they can get up to speed on the general space of GC design, after which it\u2019s possible to have more in depth discussions about the specific tradeoffs necessary.\n I\u2019ll note that some of the GCs in this post are experiments or unmaintained. The goal of this post is to showcase these as examples of  design, not necessarily general-purpose crates you may wish to use, though some of them are usable crates as well.\n  A thing that often muddles discussions about GCs is that according to some definition of \u201cGC\u201d, simple reference counting  is a GC. Typically the definition of GC used in academia broadly refers to any kind of automatic memory management. However, most programmers familiar with the term \u201cGC\u201d will usually liken it to \u201cwhat Java, Go, Haskell, and C# do\u201d, which can be unambiguously referred to as  tracing garbage collection.\n Tracing garbage collection is the kind which keeps track of which heap objects are directly reachable (\u201croots\u201d), figures out the whole set of reachable heap objects (\u201ctracing\u201d, also, \u201cmarking\u201d), and then cleans them up (\u201csweeping\u201d).\n Throughout this blog post I will use the term \u201cGC\u201d to refer to tracing garbage collection/collectors unless otherwise stated  1.\n  (If you already want to write a GC in Rust and are reading this post to get ideas for  how, you can skip this section. You already know why someone would want to write a GC for Rust)\n Every time this topic is brought up someone will inevitably go \u201cI thought the point of Rust was to avoid GCs\u201d or \u201cGCs will ruin Rust\u201d or something. As a general rule it\u2019s good to not give too much weight to the comments section, but I think it\u2019s useful to explain why someone may wish for GC-like semantics in Rust.\n There are really two distinct kinds of use cases. Firstly, sometimes you need to manage memory with cycles and  Rc&lt;T&gt; is inadequate for the job since  Rc-cycles get leaked.   petgraph or an  arena are often acceptable solutions for this kind of pattern, but not always, especially if your data is super heterogeneous. This kind of thing crops up often when dealing with concurrent datastructures; for example   crossbeam has  an epoch-based memory management system which, while not a full tracing GC, has a lot of characteristics in common with GCs.\n For this use case it\u2019s rarely necessary to design a custom GC, you can look for a reusable crate like   gc   2.\n The second case is far more interesting in my experience, and since it cannot be solved by off-the-shelf solutions tends to crop up more often: integration with (or implementation of) programming languages that  do use a garbage collector.  Servo needs to do this for integrating with the Spidermonkey JS engine and  luster needed to do this for implementing the GC of its Lua VM.  boa, a pure Rust JS runtime, uses the   gc crate to back its garbage collector.\n Sometimes when integrating with a GCd language you can get away with not needing to implement a full garbage collector: JNI does this; while C++ does not have native garbage collection, JNI gets around this by simply \u201crooting\u201d (we\u2019ll cover what that means in a bit) anything that crosses over to the C++ side  3. This is often fine!\n The downside of this is that every interaction with objects managed by the GC has to go through an API call; you can\u2019t \u201cembed\u201d efficient Rust/C++ objects in the GC with ease. For example, in browsers most DOM types (e.g.   Element) are implemented in native code; and need to be able to contain references to other native GC\u2019d types (it should be possible to inspect the  children of a  Node without needing to call back into the JavaScript engine).\n So sometimes you need to be able to integrate with a GC from a runtime; or even implement your own GC if you are writing a runtime that needs one. In both of these cases you typically want to be able to safely manipulate GC\u2019d objects from Rust code, and even directly put Rust types on the GC heap.\n  In one word: Rooting. In a garbage collector, the objects \u201cdirectly\u201d in use on the stack are the \u201croots\u201d, and you need to be able to identify them. Here, when I say \u201cdirectly\u201d, I mean \u201caccessible without having to go through other GC\u2019d objects\u201d, so putting an object inside a  Vec&lt;T&gt; does not make it stop being a root, but putting it inside some other GC\u2019d object does.\n Unfortunately, Rust doesn\u2019t really have a concept of \u201cdirectly on the stack\u201d:\n struct  Foo  {  bar :  Option &lt; Gc &lt; Bar &gt;&gt; } // this is a root let  bar  =  Gc :: new ( Bar :: new ()); // this is also a root let  foo  =  Gc :: new ( Foo :: new ()); // bar should no longer be a root (but we can&#39;t detect that!) foo .bar  =  Some ( bar ); // but foo should still be a root here since it&#39;s not inside // another GC&#39;d object let  v  =  vec! [ foo ];\n Rust\u2019s ownership system actually makes it easier to have fewer roots since it\u2019s relatively easy to state that taking  &amp;T of a GC\u2019d object doesn\u2019t need to create a new root, and let Rust\u2019s ownership system sort it out, but being able to distinguish between \u201cdirectly owned\u201d and \u201cindirectly owned\u201d is super tricky.\n Another aspect of this is that garbage collection is really a moment of global mutation \u2013 the garbage collector reads through the heap and then deletes some of the objects there. This is a moment of the rug being pulled out under your feet. Rust\u2019s entire design is predicated on such rug-pulling being  very very bad and not to be allowed, so this can be a bit problematic. This isn\u2019t as bad as it may initially sound because after all the rug-pulling is mostly just cleaning up unreachable objects, but it does crop up a couple times when fitting things together, especially around destructors and finalizers  4. Rooting would be far easier if, for example, you were able to declare areas of code where \u201cno GC can happen\u201d  5 so you can tightly scope the rug-pulling and have to worry less about roots.\n  It\u2019s worth calling out destructors in particular. A huge problem with custom destructors on GCd types is that the custom destructor totally can stash itself away into a long-lived reference during garbage collection, leading to a dangling reference:\n struct  LongLived  {  dangle :  RefCell &lt; Option &lt; Gc &lt; CantKillMe &gt;&gt;&gt; } struct  CantKillMe  {  // set up to point to itself during construction  self_ref :  RefCell &lt; Option &lt; Gc &lt; CantKillMe &gt;&gt;&gt;  long_lived :  Gc &lt; Foo &gt; } impl  Drop  for  CantKillMe  {  fn  drop ( &amp; mut  self )  {  // attach self to long_lived  * self .long_lived.dangle .borrow_mut ()  =  Some ( self .self_ref .borrow () .clone () .unwrap ());  } } let  long  =  Gc :: new ( LongLived :: new ()); {  let  cant  =  Gc :: new ( CantKillMe :: new ());  * cant .self_ref .borrow_mut ()  =  Some ( cant .clone ());  // cant goes out of scope, CantKillMe::drop is run  // cant is attached to long_lived.dangle but still cleaned up } // Dangling reference! let  dangling  =  long .dangle .borrow () .unwrap ();\n The most common solution here is to disallow destructors on types that use  #[derive(Trace)], which can be done by having the custom derive generate a  Drop implementation, or have it generate something which causes a conflicting type error.\n You can additionally provide a  Finalize trait that has different semantics: the GC calls it while cleaning up GC objects, but it may be called multiple times or not at all. This kind of thing is typical in GCs outside of Rust as well.\n  In most garbage collected languages, there\u2019s a runtime that controls all execution, knows about every variable in the program, and is able to pause execution to run the GC whenever it likes.\n Rust has a minimal runtime and can\u2019t do anything like this, especially not in a pluggable way your library can hook in to. For thread local GCs you basically have to write it such that GC operations (things like mutating a GC field; basically some subset of the APIs exposed by your GC library) are the only things that may trigger the garbage collector.\n Concurrent GCs can trigger the GC on a separate thread but will typically need to pause other threads whenever these threads attempt to perform a GC operation that could potentially be invalidated by the running garbage collector.\n While this may restrict the flexibility of the garbage collector itself, this is actually pretty good for us from the side of API design: the garbage collection phase can only happen in certain well-known moments of the code, which means we only need to make things safe across  those boundaries. Many of the designs we shall look at build off of this observation.\n  Before getting into the actual examples of GC design, I want to point out some commonalities of design between all of them, especially around how they do tracing:\n  \u201cTracing\u201d is the operation of traversing the graph of GC objects, starting from your roots and perusing their children, and their children\u2019s children, and so on.\n  // unsafe to implement by hand since you can get it wrong unsafe  trait  Trace  {  fn  trace ( &amp; mut  self ,  gc_context :  &amp; mut  GcContext ); } #[derive(Trace)] struct  Foo  {  vec :  Vec &lt; Gc &lt; Bar &gt;&gt; ,  extra_thing :  Gc &lt; Baz &gt; ,  just_a_string :  String }\n The custom derive of  Trace basically just calls  trace() on all the fields.  Vec\u2019s  Trace implementation will be written to call  trace() on all of its fields, and  String\u2019s  Trace implementation will do nothing.  Gc&lt;T&gt; will likely have a  trace() that marks its reachability in the  GcContext, or something similar.\n This is a pretty standard pattern, and while the specifics of the  Trace trait will typically vary, the general idea is roughly the same.\n I\u2019m not going to get into the actual details of how mark-and-sweep algorithms work in this post; there are a lot of potential designs for them and they\u2019re not that interesting from the point of view of designing a safe GC  API in Rust. However, the general idea is to keep a queue of found objects initially populated by the root, trace them to find new objects and queue them up if they\u2019ve not already been traced. Clean up any objects that were  not found.\n  Another commonality between these designs is that a  Gc&lt;T&gt; is always potentially shared, and thus will need tight control over mutability to satisfy Rust\u2019s ownership invariants. This is typically achieved by using interior mutability, much like how  Rc&lt;T&gt; is almost always paired with  RefCell&lt;T&gt; for mutation, however some approaches (like that in  josephine) do allow for mutability without runtime checking.\n  Some GCs are single-threaded, and some are multi-threaded. The single threaded ones typically have a  Gc&lt;T&gt; type that is not  Send, so while you can set up multiple graphs of GC types on different threads, they\u2019re essentially independent. Garbage collection only affects the thread it is being performed for, all other threads can continue unhindered.\n Multithreaded GCs will have a  Send  Gc&lt;T&gt; type. Garbage collection will typically, but not always, block any thread which attempts to access data managed by the GC during that time. In some languages there are \u201cstop the world\u201d garbage collectors which block all threads at \u201csafepoints\u201d inserted by the compiler; Rust does not have the capability to insert such safepoints and blocking threads on GCs is done at the library level.\n Most of the examples below are single-threaded, but their API design is not hard to extend towards a hypothetical multithreaded GC.\n  The   gc crate is one I wrote with  Nika Layzell mostly as a fun exercise, to figure out if a safe GC API is  possible. I\u2019ve  written about the design in depth before, but the essence of the design is that it does something similar to reference counting to keep track of roots, and forces all GC mutations go through special  GcCell types so that they can update the root count. Basically, a \u201croot count\u201d is updated whenever something becomes a root or stops being a root:\n struct  Foo  {  bar :  GcCell &lt; Option &lt; Gc &lt; Bar &gt;&gt;&gt; } // this is a root (root count = 1) let  bar  =  Gc :: new ( Bar :: new ()); // this is also a root (root count = 1) let  foo  =  Gc :: new ( Foo :: new ()); // .borrow_mut()&#39;s RAII guard unroots bar (sets its root count to 0) * foo .bar .borrow_mut ()  =  Some ( bar ); // foo is still a root here, no call to .set() let  v  =  vec! [ foo ]; // at destrucion time, foo&#39;s root count is set to 0\n The actual garbage collection phase will occur when certain GC operations are performed at a time when the heap is considered to have gotten reasonably large according to some heuristics.\n While this is essentially \u201cfree\u201d on reads, this is a fair amount of reference count traffic on any kind of write, which might not be desired; often the goal of using GCs is to  avoid the performance characteristics of reference-counting-like patterns. Ultimately this is a hybrid approach that\u2019s a mix of tracing and reference counting  6.\n gc is useful as a general-purpose GC if you just want a couple of things to participate in cycles without having to think about it too much. The general design can apply to a specialized GC integrating with another language runtime since it provides a clear way to keep track of roots; but it may not necessarily have the desired performance characteristics.\n  Servo is a browser engine in Rust that I used to work on full time. As mentioned earlier, browser engines typically implement a lot of their DOM types in native (i.e. Rust or C++, not JS) code, so for example   Node is a pure Rust object, and it  contains direct references to its children so Rust code can do things like traverse the tree without having to go back and forth between JS and Rust.\n Servo\u2019s model is a little weird: roots are a  different type, and lints enforce that unrooted heap references are never placed on the stack:\n #[dom_struct]  // this is #[derive(JSTraceable)] plus some markers for lints pub  struct  Node  {  // the parent type, for inheritance  eventtarget :  EventTarget ,  // in the actual code this is a different helper type that combines  // the RefCell, Option, and Dom, but i&#39;ve simplified it to use  // stdlib types for this example  prev_sibling :  RefCell &lt; Option &lt; Dom &lt; Node &gt;&gt;&gt; ,  next_sibling :  RefCell &lt; Option &lt; Dom &lt; Node &gt;&gt;&gt; ,  // ... } impl  Node  {  fn  frob_next_sibling ( &amp; self )  {  // fields can be accessed as borrows without any rooting  if  let  Some ( next )  =  self .next_sibling .borrow () .as_ref ()  {  next .frob ();  }  }  fn  get_next_sibling ( &amp; self )  -&gt;  Option &lt; DomRoot &lt; Node &gt;&gt;  {  // but you need to root things for them to escape the borrow  // .root() turns Dom&lt;T&gt; into DomRoot&lt;T&gt;  self .next_sibling .borrow () .as_ref () .map (| x |  x .root ())  }  fn  illegal ( &amp; self )  {  // this line of code would get linted by a custom lint called unrooted_must_root  // (which works somewhat similarly to the must_use stuff that Rust does)  let  ohno :  Dom &lt; Node &gt;  =  self .next_sibling .borrow_mut () .take ();  } }\n Dom&lt;T&gt; is basically a smart pointer that behaves like  &amp;T but without a lifetime, whereas  DomRoot&lt;T&gt; has the additional behavior of rooting on creation (and unrooting on  Drop). The custom lint plugin essentially enforces that  Dom&lt;T&gt;, and any DOM structs (tagged with  #[dom_struct]) are never accessible on the stack aside from through  DomRoot&lt;T&gt; or  &amp;T.\n I wouldn\u2019t recommend this approach; it works okay but we\u2019ve wanted to move off of it for a while because it relies on custom plugin lints for soundness. But it\u2019s worth mentioning for completeness.\n  Given that Servo\u2019s existing GC solution depends on plugging in to the compiler to do additional static analysis, we wanted something better. So  Alan designed  Josephine (\u201cJS affine\u201d), which uses Rust\u2019s affine types and borrowing in a cleaner way to provide a safe GC system.\n Josephine is explicitly designed for Servo\u2019s use case and as such does a lot of neat things around \u201ccompartments\u201d and such that are probably irrelevant unless you specifically wish for your GC to integrate with a JS engine.\n I mentioned earlier that the fact that the garbage collection phase can only happen in certain well-known moments of the code actually can make things easier for GC design, and Josephine is an example of this.\n Josephine has a \u201cJS context\u201d, which is to be passed around everywhere and essentially represents the GC itself. When doing operations which may trigger a GC, you have to borrow the context mutably, whereas when accessing heap objects you need to borrow the context immutably. You can root heap objects to remove this requirement:\n // cx is a `JSContext`, `node` is a `JSManaged&lt;&#39;a, C, Node&gt;` // assuming next_sibling and prev_sibling are not Options for simplicity // borrows cx for `&#39;b` let  next_sibling :  &amp; &#39;b  Node  =  node .next_sibling .borrow ( cx ); println! ( &#34;Name: {:?}&#34; ,  next_sibling .name ); // illegal, because cx is immutably borrowed by next_sibling // node.prev_sibling.borrow_mut(cx).frob(); // read from next_sibling to ensure it lives this long println! ( &#34;{:?}&#34; ,  next_sibling .name ); let  ref  mut  root  =  cx .new_root (); // no longer needs to borrow cx, borrows root for &#39;root instead let  next_sibling :  JSManaged &lt; &#39;root ,  C ,  Node &gt;  =  node .next_sibling .in_root ( root ); // now it&#39;s fine, no outstanding borrows of `cx` node .prev_sibling .borrow_mut ( cx ) .frob (); // read from next_sibling to ensure it lives this long println! ( &#34;{:?}&#34; ,  next_sibling .name );\n new_root() creates a new root, and  in_root ties the lifetime of a JS managed type to the root instead of to the  JSContext borrow, releasing the borrow of the  JSContext and allowing it to be borrowed mutably in future  .borrow_mut() calls.\n Note that  .borrow() and  .borrow_mut() here do not have runtime borrow-checking cost despite their similarities to  RefCell::borrow(), they instead are doing some lifetime juggling to make things safe. Creating roots typically does have runtime cost. Sometimes you  may need to use  RefCell&lt;T&gt; for the same reason it\u2019s used in  Rc, but mostly only for non-GCd fields.\n  #[derive(Copy,  Clone,  Debug,  Eq,  PartialEq,  JSTraceable,  JSLifetime,  JSCompartmental)] pub  struct  Element &lt; &#39;a ,  C &gt;  ( pub  JSManaged &lt; &#39;a ,  C ,  NativeElement &lt; &#39;a ,  C &gt;&gt; ); #[derive(JSTraceable,  JSLifetime,  JSCompartmental)] pub  struct  NativeElement &lt; &#39;a ,  C &gt;  {  name :  JSString &lt; &#39;a ,  C &gt; ,  parent :  Option &lt; Element &lt; &#39;a ,  C &gt;&gt; ,  children :  Vec &lt; Element &lt; &#39;a ,  C &gt;&gt; , }\n where  Element&lt;&#39;a&gt; is a convenient copyable reference that is to be used inside other GC types, and  NativeElement&lt;&#39;a&gt; is its backing storage. The  C parameter has to do with compartments and can be ignored for now.\n A neat thing worth pointing out is that there\u2019s no runtime borrow checking necessary for manipulating other GC references, even though roots let you hold multiple references to the same object!\n let  parent_root  =  cx .new_root (); let  parent  =  element .borrow ( cx ) .parent .in_root ( parent_root ); let  ref  mut  child_root  =  cx .new_root (); // could potentially be a second reference to `element` if it w\n......", "posttime": "2021-06-19 19:44:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u8bbe\u8ba1,\u5b89\u5168,safe,gc", "title": "\u9508\u75c5\u5b89\u5168\u8ddf\u8e2aGC\u8bbe\u8ba1\u4e4b\u65c5 ", "title_en": "A Tour of Safe Tracing GC Designs in Rust", "transed": 1, "url": "https://manishearth.github.io/blog/2021/04/05/a-tour-of-safe-tracing-gc-designs-in-rust/", "via": "", "real_tags": ["rust", "\u8bbe\u8ba1", "\u5b89\u5168", "safe", "gc"]}, {"category": "", "categoryclass": "", "imagename": "4cc3f641338cfde9604474cee631dac0.png", "infoid": 1066864, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8fc7\u5185\u5bb9\u52a0\u5165425,000\u4e2a\u8ba2\u9605\u8005\uff0c\u5e76\u83b7\u5f97\u65b0\u95fb\uff0c\u6781\u5ba2\u7410\u4e8b\u548c\u6211\u4eec\u7684\u4e13\u9898\u6587\u7ae0\u7684\u65e5\u5e38\u6458\u8981\u3002\n   \u5982\u679cWindows\u5141\u8bb8\u60a8\u5feb\u901f\u8bbf\u95ee\u5355\u4e2a\u7a97\u53e3\u7684\u7ba1\u7406\u5de5\u5177\uff0c\u5907\u4efd\u548c\u8fd8\u539f\u9009\u9879\u4ee5\u53ca\u5176\u4ed6\u91cd\u8981\u7ba1\u7406\u8bbe\u7f6e\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u542c\u8d77\u6765\u4e0d\u9519\uff0c\u8bf7\u770b\u770b\u4e0d\u6bd4\u6240\u8c13\u7684\u201c\u4e0a\u5e1d\u6a21\u5f0f\u201d\u3002\n     \u4e0d\uff0c\u4e0a\u5e1d\u6a21\u5f0f\u4e0d\u4f1a\u89e3\u9501Windows\u4e2d\u7684\u4efb\u4f55\u989d\u5916\u7684\u79d8\u5bc6\u529f\u80fd\uff0c\u6216\u8005\u8ba9\u60a8\u5728\u5e38\u89c4Windows\u754c\u9762\u4e2d\u8fdb\u884c\u4efb\u4f55\u65e0\u6cd5\u6267\u884c\u7684\u8c03\u6574\u3002\u76f8\u53cd\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u7279\u6b8a\u6587\u4ef6\u5939\uff0c\u60a8\u53ef\u4ee5\u5728\u5355\u4e2a\u6613\u6eda\u52a8\u7684\u63a5\u53e3\u4e2d\u516c\u5f00\u5927\u90e8\u5206Windows\u7684\u7ba1\u7406\u5458\uff0c\u7ba1\u7406\uff0c\u8bbe\u7f6e\u548c\u63a7\u5236\u9762\u677f\u5de5\u5177\u3002\n \u662f\u7684\uff0c\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\u5f00\u59cb\u83dc\u5355\u627e\u5230\u5f88\u591a\u8fd9\u4ef6\u4e8b\uff0c\u4f46\u8981\u8fd9\u6837\u505a\uff0c\u4f60\u6709\u70b9\u9700\u8981\u77e5\u9053\u4f60\u60f3\u8981\u7684\u4e1c\u897f\u5f00\u59cb\u3002\u4e0a\u5e1d\u6a21\u5f0f\u6587\u4ef6\u5939\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u5bb9\u6613\u6d4f\u89c8\u8fd9\u4e9b\u5de5\u5177\u7684\u65b9\u6cd5\uff0c\u5e76\u4e86\u89e3\u5b83\u4eec\u3002\n \u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u201c\u4e0a\u5e1d\u6a21\u5f0f\u201d\u53ea\u662f\u4e00\u4e2a\u53d7\u6b22\u8fce\u7684\u540d\u5b57\uff0c\u6709\u4e9b\u4eba\u7ed9\u8fd9\u4e2a\u7279\u6b8a\u6587\u4ef6\u5939\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5c06\u6587\u4ef6\u5939\u547d\u540d\u4e3a - \u5305\u62ecHOW-TO GEEK\u6a21\u5f0f\u3002\n    \u8fd9\u4e9b\u7c7b\u522b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u5305\u542b\u4efb\u4f55\u6570\u91cf\u7684\u5de5\u5177\uff0c\u751a\u81f3\u53ef\u80fd\u5206\u4e3a\u53e6\u4e00\u4e2a\u5b50\u7c7b\u522b\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u80fd\u53d1\u73b0\u60a8\u6b63\u5728\u5bfb\u627e\u7684\u4efb\u4f55\u4e1c\u897f\u3002\n  \u8981\u8fdb\u884c\u6b64\u5de5\u4f5c\uff0c\u60a8\u5fc5\u987b\u4f7f\u7528\u5177\u6709\u7ba1\u7406\u6743\u9650\u7684\u5e10\u6237\u3002\u8f6c\u5230\u684c\u9762\u5e76\u901a\u8fc7\u53f3\u952e\u5355\u51fb\u201c\u4e0a\u4e0b\u6587\u201d\u83dc\u5355\u4e0a\u7684\u201c\u65b0\u5efa\u201d\uff0c\u7136\u540e\u5355\u51fb\u201c\u6587\u4ef6\u5939\u201d\u547d\u4ee4\uff0c\u521b\u5efa\u65b0\u6587\u4ef6\u5939\u3002 \n\u8981\u4f7f\u7528GodMode\u4ee5\u5916\u7684\u540d\u79f0\uff0c\u53ea\u9700\u7528\u60a8\u60f3\u8981\u547d\u540d\u6587\u4ef6\u5939\u7684\u5185\u5bb9\u5373\u53ef\u5c06\u201cgodmode\u201d\u66ff\u6362\u4e3a\u4e0a\u9762\u7684\u6587\u672c\u3002\u9075\u5faa\uff08\u5305\u62ec\u671f\u95f4\uff09\u7684\u5b57\u7b26\u5fc5\u987b\u5b8c\u5168\u6309\u7167\u4e0a\u9762\u5217\u51fa\u3002\u5982\u679c\u5220\u9664\u201cgodmode\u201d\u800c\u4e0d\u5728\u5176\u4f4d\u7f6e\u6dfb\u52a0\u4efb\u4f55\u6587\u672c\uff0c\u5219\u4f1a\u6536\u5230\u4ee5\u4e0b\u9519\u8bef\u3002\n  \u4e00\u65e6\u60a8\u6b63\u786e\u91cd\u547d\u540d\u6587\u4ef6\u5939\uff0c\u60a8\u5c06\u6ce8\u610f\u5230\u6587\u4ef6\u5939\u56fe\u6807\u66f4\u6539\u4e3a\u63a7\u5236\u9762\u677f\u56fe\u6807\u3002\n  \u53cc\u51fb\u56fe\u6807\u4ee5\u6253\u5f00\u65b0\u521b\u5efa\u7684\u4e0a\u5e1d\u6a21\u5f0f\u3002\u4e3b\u8981\u7c7b\u522b\u6309\u5b57\u6bcd\u987a\u5e8f\u7ec4\u7ec7\uff0c\u56e0\u6b64\u5728\u8fd9\u4e9b\u7c7b\u522b\u4e2d\u4f1a\u53d1\u73b0200\u591a\u79cd\u8bbe\u7f6e\u3002\n  \u867d\u7136\u4e86\u89e3\u6240\u6709Windows\u5de5\u5177\u7684\u5b98\u65b9\u540d\u79f0\u5f53\u7136\u5f88\u65b9\u4fbf\uff0c\u4f46\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff08\u5c31\u50cf\u6211\u4eec\u8fd9\u6837\u505a\uff09\uff0c\u901a\u8fc7\u201c\u5f00\u59cb\u201d\u83dc\u5355\u641c\u7d22\u5b83\u4eec\u66f4\u5feb\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u4e0a\u5e1d\u6a21\u5f0f\u6587\u4ef6\u5939\u4ecd\u7136\u53ef\u4ee5\u6613\u4e8e\u4ecb\u7ecd\u6240\u6709\u53ef\u7528\u7684\u5de5\u5177\u4ee5\u53ca\u5728\u60a8\u4e0d\u786e\u5b9a\u7684\u662f\u641c\u7d22\u7269\u54c1\u7684\u597d\u65b9\u6cd5\u3002\n Marshall Gunnell Marshall Gunnell\u662f\u4e00\u4e2a\u5728\u6570\u636e\u5b58\u50a8\u884c\u4e1a\u7ecf\u9a8c\u7684\u4f5c\u5bb6\u3002\u4ed6\u5728Synology\u5de5\u4f5c\uff0c\u6700\u8fd1\u4f5c\u4e3a\u65af\u6258\u96f7\u96f7\u5a01\u8fbe\u7684CMO\u548c\u6280\u672f\u4eba\u5458\u4f5c\u5bb6\u3002\u4ed6\u76ee\u524d\u5728\u65e5\u672c\u4e1c\u4eac\u7684\u7ebf\u8def\u516c\u53f8\u7684API / Software\u6280\u672f\u4f5c\u5bb6\uff0c\u8fd0\u884cItenterPriser\uff0c\u4e00\u4e2a\u6570\u636e\u5b58\u50a8\u548c\u7f51\u7edc\u5b89\u5168\u7684\u5728\u7ebf\u5a92\u4f53\uff0c\u5e76\u4e0e\u5176\u8fdb\u884c\u5f00\u53d1\uff0c\u4ed6\u7684RAID\u8ba1\u7b97\u5668\u662f\u4ed6\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u9879\u76ee\u3002\u9605\u8bfb\u5b8c\u6574\u751f\u7269\u00bb\n    \u4e0a\u9762\u7684\u6587\u7ae0\u53ef\u80fd\u5305\u542b\u8054\u76df\u94fe\u63a5\uff0c\u8fd9\u6709\u52a9\u4e8e\u652f\u6301HO-TO GEEK\u3002\n \u5f53\u60a8\u5e0c\u671b\u4e13\u5bb6\u89e3\u91ca\u6280\u672f\u65f6\uff0c\u5982\u4f55\u8fbe\u6781\u5ba2\u4eba\u5728\u54ea\u91cc\u8f6c\u8eab\u3002\u81ea2006\u5e74\u6211\u4eec\u63a8\u51fa\u4ee5\u6765\uff0c\u6211\u4eec\u7684\u6587\u7ae0\u5df2\u88ab\u5f55\u53d6\u8d85\u8fc710\u4ebf\u6b21\u3002\u60f3\u77e5\u9053\u66f4\u591a\uff1f ", "note_en": "Skip to content      Join  425,000 subscribers and get a daily digest of news, geek trivia, and our feature articles.\n   What if Windows let you quickly access administrative tools, backup and restore options and other important management settings from a single window? If that sounds good, look no further than the so-called \u201cGod Mode.\u201d\n     No, God Mode doesn\u2019t unlock any extra secret features in Windows or let you do any tweaking that you can\u2019t do in the regular Windows interface. Instead, it\u2019s simply a special folder you can enable that exposes most of Windows\u2019 admin, management, settings, and Control Panel tools in a single, easy-to-scroll-through interface.\n And yes, you can also find a lot of this stuff by searching the Start menu, but to do that, you kind of need to know what you\u2019re looking for begin with. The God Mode folder offers an easier way to browse through 206 of\u00a0these tools and get to know them.\n By the way, \u201cGod Mode\u201d is just a popular name some people give this special folder. You can name the folder anything you like\u2014including  How-To Geek Mode, for example.\n    Each of these categories contains any number of tools and might even be divided into further subcategories, meaning that you\u2019re likely to find nearly anything you\u2019re looking for.\n  To make this work, you must be using an account with administrative privileges. Go to your desktop and create a new folder by right-clicking any open area, pointing to \u201cNew\u201d on the context menu, and then clicking the \u201cFolder\u201d command.\n      To use a name other than GodMode, just replace \u201cGodMode\u201d in the above text with whatever you want to name the folder. The characters that follow (including the period) must remain exactly as listed above. If you remove \u201cGodMode\u201d without adding any text in its place, you\u2019ll receive the following error.\n  Once you\u2019ve properly renamed the folder, you\u2019ll notice the folder icon change to a control panel icon.\n  Double-click the icon to open the newly-created God Mode. The major categories are organized alphabetically and so are the more than 200 settings you\u2019ll find within those categories.\n  While it\u2019s certainly handy for getting to know the official names of all the Windows tools, you\u2019ll probably find (like we did) that it\u2019s faster to search for them through the Start menu. Still, the God Mode folder offers a handy introduction to all the tools available and a great way to search for things when you\u2019re not quite sure what they\u2019re named.\n Marshall Gunnell  Marshall Gunnell is a writer with experience in the data storage industry. He worked at Synology, and most recently as CMO and technical staff writer at StorageReview. He&#39;s currently an API/Software Technical Writer at LINE Corporation in Tokyo, Japan, runs ITEnterpriser, a data-storage and cybersecurity-focused online media, and plays with development, with his RAID calculator being his first public project.   Read Full Bio \u00bb\n    The above article may contain affiliate links, which help support How-To Geek.\n How-To Geek is where you turn when you want experts to explain technology. Since we launched in 2006, our articles have been read more than 1 billion times.  Want to know more?", "posttime": "2021-06-19 19:43:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,windows-10,\u6a21\u5f0f,mode,\u6587\u4ef6\u5939", "title": "Windows 10\u4e2d\u7684\u201c\u4e0a\u5e1d\u6a21\u5f0f\u201d\u6587\u4ef6\u5939\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5982\u4f55\u542f\u7528\u5b83\uff1f ", "title_en": "What Is the \u201cGod Mode\u201d Folder in Windows 10, and How Do I Enable It?", "transed": 1, "url": "https://www.howtogeek.com/402458/enable-god-mode-in-windows-10/", "via": "", "real_tags": ["windows", "\u6a21\u5f0f", "mode", "\u6587\u4ef6\u5939"]}, {"category": "", "categoryclass": "", "imagename": "f7341bc11b3f1cfe24a3ea74851498a7.jpg", "infoid": 1066863, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u7f51\u7ad9\u53ef\u4ee5\u4ece\u672c\u9875\u7684\u94fe\u63a5\u83b7\u53d6\u4f1a\u5458\u59d4\u5458\u4f1a\u3002\u4f7f\u7528\u6761\u6b3e\u3002\n      \u5f88\u660e\u663e\uff0cHybrid\u6838\u5fc3 -  Big.Rittle\u5728ARM\u7684\u6982\u5ff5\u4e2d - \u4e5f\u5c06\u6210\u4e3a\u4e3b\u6d41X86 CPU\u7684\u7279\u5f81\u3002\u82f1\u7279\u5c14\u7684\u6e56\u83f2\u5c14\u5fb7\u5c06\u4e00\u4e2a\u51b0\u6e56\u201c\u5927\u6838\u5fc3\u201d\u7ed3\u5408\u4e86\u56db\u4e2a\u9519\u8bef\u7684\u201c\u5c0f\u201d\u6838\u5fc3\u3002\u5b83\u5373\u5c06\u63a8\u51fa\u7684\u6864\u6728\u6e56\u5e73\u53f0\u5c06\u4f7f\u89e3\u51b3\u65b9\u6848\u6269\u5c55\uff0c\uff08\u4f20\u95fb\uff09\u9ad8\u8fbe\u516b\u4e2a\u4f4e\u529f\u8017\uff08Gracemont\uff09\u548c\u516b\u4e2a\u9ad8\u6027\u80fd\u6838\u5fc3\uff08\u91d1\u6e7e\uff09\u3002\n   \u4e00\u4e9b\u8ff9\u8c61\u8868\u660e\u4e86AMD\u6709\u81ea\u5df1\u7684\u8ba1\u5212\u8fdb\u5165\u8fd9\u573a\u6bd4\u8d5b\uff0c\u4ee5\u53ca\u4e00\u9879\u65b0\u7684\u4e13\u5229\u63d0\u4ea4\u652f\u6301\u8fd9\u4e2a\u60f3\u6cd5\u3002 AMD\u7533\u8bf7\u4e86\u4e13\u5229\u63cf\u8ff0\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u4e00\u79cd\u7c7b\u578b\u7684CPU\u5c06\u8f6c\u79fb\u5230\u53e6\u4e00\u79cd\u7c7b\u578b\u7684CPU\uff1a\n   \u6839\u636e\u8be5\u4e13\u5229\uff0cCPU\u5c06\u4f9d\u8d56\u6838\u5fc3\u5229\u7528\u7387\u6307\u6807\u6765\u786e\u5b9a\u662f\u5426\u9002\u5408\u5c06\u5de5\u4f5c\u8d1f\u8f7d\u4ece\u4e00\u79cd\u7c7b\u578b\u7684CPU\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u7c7b\u578b\u3002\u63d0\u8bae\u7684\u6307\u6807\u5305\u62ecCPU\u5728\u6700\u5927\u901f\u5ea6\u5de5\u4f5c\u7684\u65f6\u95f4\u91cf\uff0cCPU\u4e00\u76f4\u5728\u4f7f\u7528\u6700\u5927\u5185\u5b58\u7684\u65f6\u95f4\u91cf\uff0c\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u5e73\u5747\u5229\u7528\u7387\uff0c\u4ee5\u53ca\u4ece\u4e00\u4e2aCPU\u79fb\u52a8\u5de5\u4f5c\u8d1f\u8f7d\u7684\u66f4\u5e38\u89c4\u7c7b\u522b\u57fa\u4e8e\u4e0e\u6267\u884c\u4efb\u52a1\u6267\u884c\u76f8\u5173\u7684\u672a\u6307\u5b9a\u5ea6\u91cf\u7684\u53e6\u4e00\u4e2a\u3002\n \u5f53CPU\u786e\u5b9a\u5de5\u4f5c\u8d1f\u8f7d\u5e94\u8be5\u4eceCPU A\u79fb\u52a8\u5230CPU B\u65f6\uff0c\u5f53\u524d\u6267\u884c\u5de5\u4f5c\uff08CPU A\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff09\u7684\u6838\u5fc3\u88ab\u653e\u5165\u7a7a\u95f2\u6216\u505c\u6ede\u72b6\u6001\u3002 CPU A\u7684\u67b6\u6784\u72b6\u6001\u5c06\u4fdd\u5b58\u5230\u5185\u5b58\u5e76\u7531CPU B\u52a0\u8f7d\uff0c\u8be5CPU B\u7ee7\u7eed\u8be5\u8fc7\u7a0b\u3002 AMD\u7684\u4e13\u5229\u5c06\u8fd9\u4e9b\u53d8\u5316\u63cf\u8ff0\u4e3a\u53cc\u5411 - \u5c0f\u6838\u5fc3\u53ef\u4ee5\u5c06\u5de5\u4f5c\u8f6c\u79fb\u5230\u5927\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n  \u5341\u5e74\u524d\uff0c\u6211\u95ee\u82f1\u7279\u5c14\u7684\u667a\u80fd\u624b\u673aSoC\u8bbe\u8ba1\u5e08\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u4f9d\u9760DVFS  - \u52a8\u6001\u7535\u538b\u548c\u9891\u7387\u7f29\u653e - \u8ba9\u539f\u5b50\u7684\u529f\u8017\u7ade\u4e89\u800c\u4e0d\u662fBig.Little\u3002\u6839\u636e\u82f1\u7279\u5c14\u7684\u67b6\u6784\u5e08\u7684\u8bf4\u6cd5\uff0cDVFS\u7ade\u4e89\u5927\u90e8\u5206\u3002\u5f53\u4e00\u4e2a\u4eba\u8003\u8651\u7845\u82af\u7247\u7a7a\u95f4\u8981\u6c42\u548c\u6574\u4f53\u8282\u80fd\u65f6\uff0c\u53ef\u4ee5\u63d0\u4f9b\u3002\n   \u8fd9\u53ef\u80fd\u662f\u771f\u5b9e\u7684 -  Medfield\u901a\u5e38\u4e0e\u4e2d\u95f4\u76ae\u8d28-A9\u5668\u4ef6\u7ade\u4e89\uff0c\u5b83\u65e8\u5728\u7ade\u4e89\u53cd\u5bf9 - \u4f46\u4eca\u5929\u4f3c\u4e4e\u5e76\u4e0d\u662f\u771f\u7684\u3002\u5f53\u65f6\uff0cMedField\u662f\u572832nm\u8fc7\u7a0b\u8282\u70b9\u4e0a\u5efa\u7acb\u7684\uff0c\u800cCortex-A9\u901a\u5e38\u57fa\u4e8e40nm\u621628nm\u3002\u5373\u4f7f\u6211\u4eec\u8ba1\u6570\u4fdd\u5b88\u5730\uff0cTSMC\u548c\u82f1\u7279\u5c14\u4e5f\u7ecf\u8fc7\u591a\u4e2a\u5b8c\u6574\u8282\u70b9\u7f29\u5c0f\u3002 Intel\u768410nm\u6280\u672f\u88ab\u8ba4\u4e3a\u662f\u7b49\u540c\u4e8eTSMC\u76847nm\u8282\u70b9\u3002\u4f7f\u7528\u6df7\u5408X86\u6838\u5fc3\u8bbe\u8ba1\u7684\u82af\u7247\u5c3a\u5bf8\u635f\u5931\u8fdc\u8fdc\u5c0f\u4e8e\u66fe\u7ecf\u662f\u7684\u3002 \n\u6211\u4eec\u6000\u7591Big.little\u53ef\u80fd\u8d62\u5f97\u4e86\u8fd9\u573a\u6218\u6597\u7684\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u7845\u8bbe\u8ba1\u7684\u53d8\u5316\u6027\u8d28\u3002\u5728\u9ad8\u65f6\u949f\u4e2d\u8fd0\u884c10nm CPU\u6240\u9700\u7684\u8c03\u6574\u4e5f\u53ef\u80fd\u5bfc\u81f4CPU\u5185\u6838\u4e0d\u4f1a\u5728\u4f4e\u65f6\u949f\u4e2d\u8282\u7701\u5927\u91cf\u529f\u7387\uff0c\u4f5c\u4e3a\u4f4e\u529f\u8017\uff0c\u76ee\u7684\u5185\u7f6e\u7684CPU\u6838\u5fc3\u3002\n  AMD\u6240\u5173\u6ce8\u7684\u5927\u95ee\u9898\u662f\u8be5\u516c\u53f8\u662f\u5426\u5c06\u4ece\u4e0a\u4e0bCPU\u6838\u5fc3\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\uff0c\u6216\u8005\u5982\u679c\u5b83\u5c06\u8fd4\u56de\u50cf\u7f8e\u6d32\u864e\u90a3\u6837\u7684\u8bbe\u8ba1\uff0c\u5e76\u7528\u5b83\u4f5c\u4e3a\u672a\u6765\u4ea7\u54c1\u7684\u57fa\u7840\u3002\u867d\u7136CPU\u9700\u8981\u5237\u65b0\u6216\u66f4\u65b0\uff0c\u4f46\u5728\u65b0\u7684\u65f6\uff0c\u5b83\u662f\u4e00\u4e2a\u575a\u5b9e\u7684\u5e73\u8861\u8bbe\u8ba1\u3002\u5b83\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u516c\u53f8\uff0c\u4f8b\u5982AMD\uff0cIntel\u6216Apple 3-5\u5e74\uff0c\u4ee5\u4ece\u5934\u5f00\u59cb\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u6838\u5fc3\uff0c\u4ece\u800c\u5c06\u54ea\u4e2a\u5927\u9053AMD\u8f6c\u5230\u9879\u76ee\u65f6\u53d6\u51b3\u4e8e\u9879\u76ee\u3002\u6211\u4eec\u77e5\u9053\u5b83\u57282019\u5e74\u7533\u8bf7\u4e86\u8fd9\u4e00\u4e13\u5229\uff0c\u56e0\u6b64\u516c\u53f8\u5df2\u7ecf\u660e\u786e\u81f4\u529b\u4e8e\u8fd9\u4e2a\u60f3\u6cd5\u4e00\u4f1a\u513f\u3002\n \u6211\u4eec\u4e0d\u5e0c\u671b\u770b\u52302021\u5e74\u7684AMD\u7684\u6df7\u5408\u6838\u5fc3\uff0c\u4f462022-2023\u4e0d\u4f1a\u662f\u4e0d\u5408\u7406\u7684\u3002\u65e2\u7136\u6211\u4eec\u77e5\u9053\u4e00\u4e9b\u7701\u529b\u8282\u7701\u82f9\u679cM1\u63d0\u4f9b\u4e86\u5bf9\u5176OS\u8c03\u5ea6\u7684\u63d0\u4f9b\uff0c\u6211\u4eec\u5e0c\u671b\u82f1\u7279\u5c14\u548cAMD\u4e0e\u5fae\u8f6f\u5408\u4f5c\uff0c\u4ee5\u91c7\u7528\u7c7b\u4f3c\u7684\u6280\u672f\u3002 Hybrid\u6838\u5fc3\u5bf9\u4e8e\u6ee1\u8f7d/\u65f6\u949f\u7684X86 CPU\u529f\u8017\u4e0d\u5927\uff0c\u4f46\u5b83\u4eec\u53ef\u4ee5\u663e\u7740\u964d\u4f4e\u529f\u8017\u3002\n \u5f53Joe Macri\u57282020\u5e74\u5e95\u544a\u8bc9\u4eba\u4eec\u7684\u65f6\u5019\uff0cAMD\u6ca1\u6709\u8fd1\u671f\u8ba1\u5212\u4ecb\u7ecd\u6df7\u5408\u6838\u5fc3\uff0c\u4ed6\u8868\u793a\u4e00\u4e2a\u4e3b\u8981\u7684\u7eca\u811a\u77f3\u662fWindows\u4e2d\u7f3a\u4e4f\u8c03\u5ea6\u7a0b\u5e8f\u652f\u6301\u3002\u6211\u4eec\u73b0\u5728\u77e5\u9053Windows 11\u5728\u5730\u5e73\u7ebf\u4e0a\uff0cAlder Lake\u6b63\u5728\u63a8\u51fa\u63a8\u51fa\u3002\u6ca1\u6709\u4eba\u6b63\u5f0f\u8bf4\uff0c\u8fd9\u79cd\u6df7\u5408\u8c03\u5ea6\u7a0b\u5e8f\u5c06\u5728Windows 11\u4e2d\u5177\u6709\u529f\u80fd\uff0c\u4f46\u5b9e\u9645\u4e0a\u4fdd\u8bc1\u663e\u793a\u3002 ", "note_en": "This site may earn affiliate commissions from the links on this page.  Terms of use.\n      It\u2019s become clear that hybrid cores \u2014 big.Little in ARM\u2019s parlance \u2014 are going to be a feature of mainstream x86 CPUs as well. Intel\u2019s Lakefield combines one Ice Lake \u201cbig core\u201d with four Tremont \u201clittle\u201d cores. Its upcoming Alder Lake platform will scale the solution up, with (rumored) up to eight low-power cores (Gracemont) and eight high-performance cores (Golden Cove).\n   A few signs have indicated AMD has its own plans to  get into this game, and a new patent filing backs up that idea. AMD has applied for a patent describing methods by which one type of CPU would move work over to another type of CPU:\n   According to the patent, CPUs would rely on core utilization metrics to determine when it was appropriate to move a workload from one type of CPU to the other. Proposed metrics include the amount of time the CPU has been working at maximum speed, the amount of time the CPU has been using maximum memory, average utilization over a period of time, and a more general category in which a workload is moved from one CPU to the other based on unspecified metrics related to the execution of the task.\n When the CPU determines that a workload should move from CPU A to CPU B, the core currently performing the work (CPU A, in this case), is put into an idle or stalled state. The architecture state of CPU A is saved to memory and loaded by CPU B, which continues the process. AMD\u2019s patent describes these shifts as bi-directional \u2014 the small core can shift work to the large, or vice-versa.\n  Ten years ago, I asked Intel\u2019s smartphone SoC designers why they were relying on DVFS \u2014 Dynamic Voltage and Frequency Scaling \u2014 to keep Atom\u2019s power consumption competitive rather than big.Little. According to Intel\u2019s architects, DVFS was competitive with what big.Little could deliver when one considered the silicon die space requirements and the overall power savings.\n   That may have been true at the time \u2014 Medfield was generally competitive with the midrange Cortex-A9 devices it was intended to compete against \u2014 but it doesn\u2019t seem to be true today. At the time, Medfield was built on the 32nm process node, while the Cortex-A9 was generally built on 40nm or 28nm. Even if we count conservatively, TSMC and Intel have been through multiple full node shrinks. Intel\u2019s 10nm technology is considered equivalent to TSMC\u2019s 7nm node. The die size penalty for using a hybrid x86 core design is much smaller than it used to be.\n The other reason we suspect big.Little may have won this fight is the changing nature of silicon design. The tuning required to run a 10nm CPU at high clocks may also result in a CPU core that doesn\u2019t save as much power at low clocks as a low-power, purpose-built CPU core would.\n  The big question where AMD is concerned is whether the company will build a new from the ground-up CPU core, or if it will return to a design like Jaguar and use that as a basis for future products. While the CPU would need a refresh or update, it was a solid, balanced design when new. It typically takes a company such as AMD, Intel, or Apple 3-5 years to build a new core from scratch, so which avenue AMD goes may depend on when it started the project. We know it applied for this patent back in 2019, so the company has clearly been working on this idea for a little while.\n We don\u2019t expect to see hybrid cores from AMD in 2021, but 2022-2023 wouldn\u2019t be unreasonable. Now that we know some of the power savings the Apple M1 delivers come  courtesy of its OS scheduling, we expect both Intel and AMD to work with Microsoft in order to adopt similar tech. Hybrid cores won\u2019t do much for x86 CPU power consumption at full load/clock, but they could reduce power consumption significantly.\n When Joe Macri told folks in late 2020 that AMD had no near-term plans to introduce hybrid cores, he indicated one major stumbling block was a lack of scheduler support in Windows. We now know that  Windows 11 is on the horizon and Alder Lake is prepping for launch. No one has officially said that this kind of hybrid scheduler will feature in Windows 11, but it\u2019s virtually guaranteed to show up.", "posttime": "2021-06-19 19:43:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "working,cpu", "title": "AMD\u6b63\u5728\u4f7f\u7528\u81ea\u5df1\u7684\u6df7\u5408X86 CPU ", "title_en": "AMD Is Working on Its Own Hybrid x86 CPU", "transed": 1, "url": "https://www.extremetech.com/computing/323713-amd-is-working-on-its-own-hybrid-x86-cpu-patent-filing", "via": "", "real_tags": ["working", "cpu"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066862, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u8bf7\u6c42\u5b58\u5728\u95ee\u9898\u3002 \u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u52aa\u529b\u5c3d\u5feb\u4fee\u590d\u5b83\u3002 ", "note_en": "There was a problem with this request. We&#39;re working on getting it fixed as soon as we can.", "posttime": "2021-06-19 19:01:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u795e\u7ecf\u7f51\u7edc,ai,\u5b58\u5728", "title": "\u901a\u8fc7\u7b2c\u4e00\u539f\u7406\u5bf9\u6df1\u795e\u7ecf\u7f51\u7edc\u7684\u7406\u89e3\u63a8\u8fdbAI\u7406\u8bba ", "title_en": "Advancing AI theory with first-principles understanding of deep neural networks", "transed": 1, "url": "https://ai.facebook.com/blog/advancing-ai-theory-with-a-first-principles-understanding-of-deep-neural-networks/", "via": "", "real_tags": ["\u795e\u7ecf\u7f51\u7edc", "ai", "\u5b58\u5728"]}, {"category": "", "categoryclass": "", "imagename": "4c0fa829e40db00e02964ca5aabf7c53.jpg", "infoid": 1066861, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "GaN\u76d7\u7a83\u81ea\u52a8\u662f\u4e00\u79cd\u751f\u6210\u7684\u5bf9\u6297\u6027\u7f51\u7edc\uff0c\u53ef\u4ee5\u91cd\u5efa\u5b8f\u4f1f\u7684\u76d7\u7a83\u81ea\u52a85\u73af\u5883\u3002 \u5b83\u662f\u4f7f\u7528\u57fa\u4e8eNvidia\u7684GA ...\u7684GameGan Fork\u521b\u5efa\u7684\u3002 ", "note_en": "GAN Theft Auto is a Generative Adversarial Network that recreates the Grand Theft Auto 5 environment. It is created using a GameGAN fork based on NVIDIA's Ga...", "posttime": "2021-06-19 19:01:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "theft,\u5bf9\u6297\u6027", "title": "Gan theft auto ", "title_en": "GAN Theft Auto", "transed": 1, "url": "https://www.youtube.com/watch?v=udPY5rQVoW0", "via": "", "real_tags": ["theft", "\u5bf9\u6297\u6027"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066859, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8f6f\u4ef6\u5f00\u53d1\uff0c\u79d1\u5b66\u548c\u751f\u6d3b\u4e2d\u7684\u4e2d\u592e\u539f\u5219\u4e4b\u4e00\u5c31\u662f\u201c\u8c26\u865a\u201d\u3002\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u603b\u662f\u5047\u8bbe\u4f60\u7684\u4ee3\u7801\u662f\u9519\u8bef\u7684\u3002\u5b83\u51e0\u4e4e\u4ece\u4e0d\u4e0e\u7f16\u8bd1\u5668\uff0c\u6846\u67b6\u6216\u5176\u4ed6\u4e1c\u897f\u543b\u5408\u3002\u5927\u90e8\u5206\u65f6\u95f4\uff0c\u5b83\u662f\u4f60\u3002\u8fd9\u662f\u5b83\u4e0d\u662f\u4f60\u7684\u7a00\u6709\u75c5\u4f8b\u4e4b\u4e00\u3002\n  \u4e0e\u8bb8\u591a\u7814\u7a76\u7ec4\u4e00\u6837\uff0c\u6211\u4eec\u559c\u6b22\u4f7f\u7528Compute Clusters in\u547d\u4ee4\u5e76\u884c\u5730\u8fdb\u884c\u590d\u6742\u8ba1\u7b97\u3002\u6211\u4eec\u7684\u5927\u5b66\u5728\u4e00\u4e9b\u989d\u5916\u7684\u8d44\u6e90\u4e0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f7f\u7528IBM Spectrum LSF.EMPLION\u5404\u79cd\u4e13\u7528\u547d\u4ee4\u7684\u7fa4\u96c6\uff0c\u6b64\u6846\u67b6\u5141\u8bb8\u60a8\u4e0e\u7fa4\u96c6\u5185\u5b58\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u63d0\u4ea4\u4e00\u4e2a\u65b0\u4f5c\u4e1a\uff0c\u8be5\u4f5c\u4e1a\u662f\u5728\u67d0\u4e9b\u8ba1\u7b97\u8282\u70b9\u4e0a\u6267\u884c\u7684\uff0c\u5177\u6709\u4e00\u7ec4\u526f\u8d44\u6e90\u3002\u5c3d\u7ba1\u662f\u4e2a\u4eba\u559c\u597d\uff0c\u4f46\u6846\u67b6\u6b63\u5904\u4e8e\u975e\u5e38\u4f1f\u5927\u7684\u4f5c\u6587\u4f1a\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5c06Python\u811a\u672c\u6216\u5176\u4ed6\u547d\u4ee4\u8f6c\u6362\u4e3a\u5728Checluster\u4e0a\u6267\u884c\u7684\u4f5c\u4e1a\u3002\u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u8fd9\u91cc\u662f\u5982\u4f55\u63d0\u4ea4\u547d\u4ee4ls\u7684\uff1a\n  \u8fd9\u662f\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u7684\u5bb9\u6613\u7a0b\u5ea6\u3002\u5982\u679c\u9700\u8981\u66f4\u591a\u9ad8\u7ea7\u547c\u53eb\uff0c\u5982\u679c\u9700\u8981\u8bf8\u5982\u5185\u5b58\u6216CPU\u5185\u6838\u7684\u5176\u4ed6\u8d44\u6e90\u3002\u5728\u7fa4\u96c6\u672c\u8eab\u7684\u914d\u7f6e\u4e0a\u8fdb\u884c\u4e86\u914d\u7f6e\uff0c\u5219\u53ef\u4ee5\u4e3a\u57fa\u4e8eGPU\u7684\u8ba1\u7b97\u63d0\u4f9b\u7279\u6b8a\u8282\u70b9\uff0c\u8fd9\u662foveropossbossible\u3002\u4f46\u662f\uff0c\u4e3b\u8981\u601d\u60f3\u662f\uff0cBSUB\u548cLSF\u5e94\u8be5\u4f7f\u60a8\u80fd\u591f\u5728Somenode\u7684\u67d0\u4e2a\u70b9\u8fd0\u884c'\u548c\u5fd8\u8bb0'\u5de5\u4f5c\u3002\u8282\u70b9\u7684\u786e\u5207\u9009\u62e9\u65e0\u5173\u7d27\u8981 - \u6216\u8005\u6211\u8ba4\u4e3a\uff01\n  \u6b63\u5982\u6211\u4eec\u81f4\u529b\u4e8e\u622a\u6b62\u65e5\u671f\uff0c\u6211\u6ce8\u610f\u5230\u95f4\u6b47\u6027\u5de5\u4f5c\uff0c\u4f46\u6211\u5e76\u6ca1\u6709\u60f3\u5230\u592a\u591a\u3002\u6709\u65f6\uff0c\u7531\u4e8e\u786c\u4ef6\u95ee\u9898\uff0c\u8ba1\u7b97\u8282\u70b9Lodown\uff0c\u56e0\u6b64\u59cb\u7ec8\u5b58\u5728\u6982\u7387\uff0c\u56e0\u6b64\u6240\u6709\u4f5c\u4e1a\u90fd\u53ef\u4ee5\u6b63\u786e\u6267\u884c\u3002\u4f46\u662f\u5728Offyimportant\u7684\u7ed3\u679c\u5230\u671f\u524d\u51e0\u5929\uff0c\u8d85\u8fc790\uff05\u7684\u5de5\u4f5c\u5f00\u59cb\u5931\u8d25\u3002\u9519\u8bef\u6d88\u606f\u5728\u6211\u81ea\u5df1\u7684\u4e00\u4e2a\u8b66\u544a\u4e4b\u4e00\u4e4b\u524d\uff08\u4e3a\u6e05\u695a\u8d77\u89c1\u7684\u6587\u4ef6\u540d\uff09\uff1a\n  \u5feb\u901f\u68c0\u67e5\u663e\u793a\u8be5\u6587\u4ef6\u5728\u90a3\u91cc;\u6211\u4e5f\u80fd\u591f\u4ece\u5176\u4e2d\u4e00\u4e2a\u767b\u5f55\u8282\u70b9\u4e2d\u8bfb\u53d6IT\uff0c\u56e0\u6b64\u6211\u73b0\u5728\u6392\u9664\u4e86FilePerMissions\u7684\u4efb\u4f55\u95ee\u9898\u3002\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u8ddf\u8e2a\uff0c\u6211\u53d1\u73b0\u5b83\u786e\u5b9e\u59cb\u7ec8\u5728\u5c1d\u8bd5\u6253\u5f00\u67d0\u79cd\u8bc6\u522b\u65f6\u59cb\u7ec8\u5931\u8d25\u3002\u6709\u95ee\u9898\u7684\u6587\u4ef6\u751a\u81f3\u4e0d\u662f\u975e\u5e38\u5927\u7684 - \u53ea\u662f\u4e00\u4e2a\u5c11\u6570\u4eba\uff0c\u4f46\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\u90fd\u662f\u5931\u8d25\u7684\u3002\u8fd9\u662f\u5e7d\u7075\u822c\u7684\u3002\u6211\u6709\u4e00\u4e2aheisenbugon\u6211\u7684\u53cc\u624b\uff0c\u56e0\u4e3a\u6211\u65e0\u6cd5\u5728\u63a7\u5236\u4fe1\u56e0\u4e0b\u91cd\u73b0\u5b83\u5417\uff1f\n  \u7ecf\u8fc7\u5927\u91cf\u7684\u54c0\u53f7\uff0c\u54ed\u6ce3\u548c\u54ac\u7259\u5207\u9f7f\uff0c\u6211\u51b3\u5b9a\u66f4\u591a\u5730\u4e86\u89e3\u521b\u5efa\u9519\u8bef\u7684\u51fd\u6570\u3002\u90e8\u5206\u5730\uff0c\u8fd9\u4e2aWasto\u5206\u6563\u4e86\u6211\u4ece\u5373\u5c06\u53d1\u751f\u7684\u5384\u8fd0\uff0c\u4f46\u6211\u4e5f\u5f88\u597d\u5947\u5728\u8fd9\u91cc\u3002\u6211\u6b63\u5728\u4f7f\u7528os.path.exists\uff08\uff09\u6765\u67e5\u8be2\u6587\u4ef6\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u54a8\u8be2\u5176\u624b\u518c\u53ef\u80fd\u662f\u4e00\u4e2a\u667a\u80fd\u7406\u5ff5\u3002\u6211\u53d1\u73b0\u4e86\u4ee5\u4e0b\u8bf4\u660e\uff1a\n \u5982\u679c\u8def\u5f84\u5f15\u7528\u73b0\u6709\u8def\u5f84\u6216\u6253\u5f00\u7684\u6587\u4ef6\u8bc6\u522b\u672c\uff0c\u5219\u8fd4\u56deTrue\u3002\u8fd4\u56de\u865a\u5047\u7684\u7b26\u53f7\u94fe\u63a5\u3002\u5728\u67d0\u4e9b\u5e73\u53f0\u4e0a\uff0c\u5982\u679c\u672a\u5728\u7269\u7406\u5b58\u5728\u7684\u8def\u5f84\u4e0a\uff0c\u6b64\u51fd\u6570\u53ef\u80fd\u4f1a\u8fd4\u56defalse\u3002 \n\u8fd9\u4f3c\u4e4e\u6697\u793a\u8be5\u51fd\u6570\u53ef\u80fd\u8fd4\u56de\u9519\u8bef\u7684\u5426\u5219\u4ee5\u6307\u793a\u65e0\u6cd5\u8bbf\u95ee\u8be5\u6587\u4ef6\u3002\u6211\u4e4b\u524d\u5df2\u7ecf\u7edf\u6cbb\u8fc7\u7a81\u51fa\u7684\u95ee\u9898\uff0c\u4f46\u73b0\u5728\u4ed6\u4eec\u7a81\u7136\u56de\u5230\u4e86\u83dc\u5355\u4e0a\u3002\u53ef\u80fd\u662f\u8fd9\u79cd\u6743\u9650\u95f4\u6b47\u6027\u6539\u53d8\u5417\uff1f\u6211\u88ab\u611a\u5f04\u4e86intothing\uff0c\u767b\u5f55\u8282\u70b9\u4e0a\u7684\u6743\u9650\u4e0ethecompute\u8282\u70b9\u76f8\u540c\u5417\uff1f\u6211\u5f53\u7136\u6ca1\u6709\u4ee5\u4efb\u4f55\u65b9\u5f0f\u6539\u53d8\u6743\u9650\uff0c\u4f46\u662fASA\u6700\u540e\u4e00\u6bb5\u52aa\u529b\u6211\u51b3\u5b9a\u901a\u8fc7\u8bc4\u4f30\u6211\u7684\u7528\u6237\u7684\u4e00\u90e8\u5206\u6765\u7f16\u5199\u4e00\u4e2a\u68c0\u67e5Permissions\u7684\u811a\u672c\u3002 Scriptlooked\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n \uff03\uff01/ usr / bin / env for index $ $\uff08seq 0 99\uff09; do bsub -w 00:05 -o\uff06\uff0334; debug_\uff05J.OUT\uff06\uff0334; -r\uff06\uff0334; rusage [mem = 128]\uff06\uff0334; Groupsdone.\n \u8bf7\u6ce8\u610f\uff0c\u6211\u5982\u4f55\u5c1d\u8bd5\u63d0\u4ea4\u5927\u91cf\u5de5\u4f5c\uff0c\u4ee5\u4fbf\u53d6\u6d88\u8ba1\u7b97\u8282\u70b9\u72b6\u6001\u7684\u6e05\u6670\u3002\u6211\u5e0c\u671b\u5728\u7fa4\u96c6\u4e2d\u5f88\u597d\u5730\u5206\u5e03\u5728\u7fa4\u96c6\u4e2d\uff0c\u6211\u7126\u6025\u5730\u5ba1\u89c6\u4e86\u4ed6\u4eec\u5b8c\u6210\u8dd1\u6b65\u3002\u6700\u540e\u4e00\u4efd\u5de5\u4f5c\u7ec8\u4e8e\u5b8c\u6210\uff0c\u6211\u6536\u96c6\u4e86\u6211\u7684\u7ed3\u679c\uff1a\n    \u4f46\u76f8\u53cd\uff0c\u6211\u6536\u5230\u4e86\u4e0d\u540c\u7fa4\u4f53\u7684\u7edd\u5bf9\u70ed\u5904\u7406; Insome\u6848\u4ef6\uff0c\u6211\u7684\u7528\u6237\u662f\u51e0\u4e4e\u6ca1\u6709\u7fa4\u4f53\u7684\u4e00\u90e8\u5206\u3002\u7fa4\u96c6\uff0c\u5c31\u50cf\u6211\u4e4b\u524d\u7684\u51e0\u5206\u949f\u4e00\u6837\uff0c\u88ab\u6253\u7834\u4e86\u3002\u8fd9\u4e9b\u65b0\u95fb\uff0c\u4e25\u5cfb\u7684\u54ee\u5598\u53ef\u80fd\u662f\u884c\u653f\u4eba\u5458\uff0c\u4e3a\u6211\u6765\u8bf4\uff0c\u56e0\u4e3a\u4e00\u6b21\uff0c\u4e00\u5207\u90fd\u5728\u5b87\u5b99\u4e2d - \u6709\u4e00\u4e2a\u89e3\u91ca\uff01\u5c31\u50cfHarlanellison\u7684\u6545\u4e8b\u4e2d\u7684\u89d2\u8272\u4e00\u6837\uff0c\u6211\u7684\u6807\u9898\u6211\u5c60\u6740\u4e86\u8fd9\u4e2a\u62fc\u70b9\uff0c\u6211\u88ab\u7535\u8111\u6b3a\u9a97\u4e86\u3002\u6211\u6ca1\u6709\u7fa4\u4f53\uff0c\u6211\u5fc5\u987b\u6b23\u8d4f\u3002\n  \u4e0e\u57c3\u91cc\u68ee\u7684\u6545\u4e8b\u4e0d\u540c\uff0c\u6211\u7684\u7ed3\u5c40\u5f88\u597d\uff1a\u8c03\u8bd5\u811a\u672c\u662f\u652f\u6301\u4eba\u5458\u7684\u8986\u76d6\uff0c\u95ee\u9898\u5728\u51e0\u5929\u5185\u7ea0\u6b63 - \u76f4\u5230\u5b83\u518d\u6b21\u64ad\u79cd\uff0c\u5bfc\u81f4\u8f83\u4e3a\u5c11\u91cf\u7684\u4fe1\u606f\uff08\u5df2\u7ecf\u5230\u4f4d\u4e86\uff09\uff0c\u5e76\u9ed8\u8ba4\u3002\u8fd9\u4e2a\u65f6\u5019\u771f\u7684\u3002\n \u6211\u7684\u4e2a\u4eba\u8bfe\u7a0b\u6765\u81ea\u6240\u6709\u8fd9\u4e9b\uff1a\u6211\u9700\u8981\u8bad\u7ec3\u6211\u7684\u529f\u80fd\u3002\u867d\u7136\u6211\u53ef\u4ee5\u4e89\u8fa9\u8bf4\u64cd\u4f5c\u7cfb\u7edf.Path.exist\u5e94\u8be5\u53d1\u751f\u4e0d\u540c\u7684\u884c\u4e3a - \u5f53\u6211\u8ba4\u4e3a\u8fd9\u5c06\u59cb\u7ec8\u6309\u9884\u671f\u5de5\u4f5c\u65f6\uff0c\u6240\u6709\u7684IT\u548c\u6240\u6709\u4eba\u90fd\u4f1a\u88ab\u8c03\u7528\uff0c\u51fd\u6570\u88ab\u79f0\u4e3a\u3002\u77e5\u9053\u81ea\u5df1\u5e76\u77e5\u9053\u4f60\u7684\u804c\u80fd\uff0c\u5373\u4f7f\u4ed6\u4eec\u4e4d\u4e00\u770b\u4f3c\u4e4e\u5f88\u65e0\u5bb3\u3002 ", "note_en": "One of the central tenets of software development, science, and life ingeneral is \u2018Be humble.\u2019 In software development, this means that youshould always assume that your code is wrong. It\u2019s almost  never anissue with the compiler, the frameworks, or something else. Most of thetime, it is  you. This is one of those rarer cases where it is  notyou.\n  Like many research groups, we like to use compute clusters in order toexecute complex computations in parallel. Our university provides, nextto some additional resources, a  cluster that uses IBM Spectrum LSF.Employing a variety of specialised commands, this framework permits you tointeract with a cluster. For instance, you can submit a new job that isto be executed on some compute node with a certain set of resourcerequirements. Personal preferences notwithstanding, the framework isactually pretty great\u2014after a brief tutorial session, anyone can turntheir Python scripts or other commands into jobs executed on thecluster. As a simple example, here is how to submit the command  ls:\n  That\u2019s how easy it is in many cases. More advanced calls can be made, ofcourse, if additional resources such as memory or CPU cores are required.Depending on the configuration of the cluster itself, it is alsopossible to request special nodes for, say, GPU-based computations. Butthe main idea is that  bsub and LSF should enable you to run\u2018fire-and-forget\u2019 jobs that will be executed at  some point by  somenode. The exact choice of node does not matter\u2014or so I thought!\n  As we were working towards a deadline, I noticed intermittent jobfailures but I did not think too much of it. Sometimes, compute nodes godown because of hardware issues, so there is always the probability thatnot all jobs can be executed properly. But a few days before someimportant results were due, more than 90% of all jobs started to fail.The error message was preceded by one of my own warnings\u00a0(Iredacted the filename for clarity):\n  A quick check showed that the file was there; I was also able to read itfrom one of the login nodes, so I ruled out any issues with filepermissions for now. Adding some additional tracing into the code,I found that it indeed always failed when it tried to open a certainfile. The file in question was not even very large\u2014just a fewkilobytes at best\u2014but loading it failed in  almost all circumstances.This was getting spooky. Did I have a  Heisenbugon my hands, given that I was unable to reproduce it under controlledconditions?\n  After much wailing, weeping, and gnashing of teeth, I decided to justread more about the function that created the error. Partially, this wasto distract me from impending doom, but I was also curious as to whatwas going on here. I was using  os.path.exists() to query the existence ofthe file, so I thought that consulting its manual might be a smart idea.I found the following instructions:\n Return  True if path refers to an existing path or an open filedescriptor. Returns  False for broken symbolic links. On some platforms,this function may return  False if permission is not granted to execute os.stat() on the requested file, even if the path physically exists.\n This seemed to imply that the function  might have returned  False inorder to indicate that the file cannot be accessed. I had ruled outaccess issues before, but now they were suddenly back on the menu. Couldit be that permissions changed intermittently? Was I being fooled intothinking that the permissions on the login node were the same as on thecompute node? I certainly did not change permissions in any way, but asa last-ditch effort I decided to write a script that checks thepermissions by evaluating the groups my user is a part of. The scriptlooked something like this:\n #!/usr/bin/env bashfor INDEX in $(seq 0 99); do bsub -W 00:05 -o &#34;debug_%J.out&#34; -R &#34;rusage[mem=128]&#34; groupsdone\n Notice how I tried to submit a lot of jobs in order to gain a clearerpicture of the status of the compute nodes. I was hoping that the jobswould be nicely distributed among the cluster, and I anxiously waitedfor them to finish running. With the last job finally being completed,I collected my results:\n    But instead, I received an absolute  hotchpotch of different groups; insome cases, my user was part of almost no  groups at all. The cluster,much like my will a few minutes before, was broken. These news, grim asthey might be for the administrative staff, cheered me up quiteconsiderably because for once, everything was right in the universeagain\u2014there was an explanation! Much like the characters in  HarlanEllison\u2019s story whose title I butchered for thispost,I had been duped and misled by the computer. I have no group, and I mustscream.\n  Unlike Ellison\u2019s story, mine had a good ending: the debug script wasappreciated by the support staff, and the issue was rectified withina few days\u2014until it cropped up again, causing considerably lessconfusion\u00a0(the debug script was already in place), and was fixedagain. This time for real.\n My personal lesson from all of this: I need to study my functions morecarefully. While I could argue that  os.path.exists should havea different behaviour\u2014the function is called  exists, after all\u2014itwas nevertheless an assumption of my part when I thought that this would always work as expected. Know thyself and know thy functions, even ifthey appear to be pretty innocuous at first glance.", "posttime": "2021-06-19 17:38:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "group,\u547d\u4ee4", "title": "\u6211\u6ca1\u6709\u5c0f\u7ec4\uff0c\u6211\u5fc5\u987b\u5c16\u53eb ", "title_en": "I Have No Group, and I Must Scream", "transed": 1, "url": "https://bastian.rieck.me/blog/posts/2021/groups/", "via": "", "real_tags": ["group", "\u547d\u4ee4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066858, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f1\u56fd\u8d22\u52a1\u7814\u7a76\u8bb0\u5f55\u4e862020\u5e74\u7684\u73b0\u91d1\u4ea4\u6613\u4e0b\u964d\u4e8635\uff05\uff0c\u56e0\u4e3aCovid\u5371\u673a\u6da1\u8f6e\u673a - \u8d39\u7528\u5728\u6d88\u8d39\u4e60\u60ef\u4e2d\u53d1\u751f\u53d8\u5316\n    \u5728\u5b98\u65b9\u6570\u636e\u663e\u793a\uff0c\u57282020\u5e74\uff0c\u57282020\u5e74\uff0c\u5728\u5b98\u65b9\u6570\u636e\u663e\u793a\u540e\uff0c\u82f1\u56fd\u8d8a\u6765\u8d8a\u8d8a\u6765\u8d8a\u8fd1\u6210\u4e3a\u65e0\u73b0\u91d1\u793e\u4f1a\u3002\n Coronavirus\u5927\u6d41\u884c\u7684\u6d88\u8d39\u4e60\u60ef\u7684\u53d8\u5316\u5df2\u7ecf\u5927\u5927\u52a0\u901f\uff0c1370\u4e07\u4eba\u9886\u5bfc\u4e86\u201c\u65e0\u73b0\u5b9e\u7684\u751f\u547d\u751f\u6d3b\u201d\uff0c2019\u5e74\u7684740\u4e07\u56fe\u51e0\u4e4e\u52a0\u500d\u3002\u516d\u9879\u4ed8\u6b3e\u4e2d\u7684\u4e94\u4e2a\u6d89\u53ca\u7684\u7968\u636e\u6216\u786c\u5e01\u6d89\u53ca\u4e00\u534a\u5341\u5e74\u524d\u7684\u6240\u6709\u4ea4\u6613\u3002\n  \u8d8a\u6765\u8d8a\u591a\u7684\u4f01\u4e1a\u73b0\u5728\u62d2\u7edd\u73b0\u91d1\uff0c\u8bb8\u591a\u4eba\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u4e2d\u9009\u62e9\u4e86\u4f17\u591a\u5361\u7247\u3002\n \u96f6\u552e\u5546\u5b9c\u5bb6\u5728\u5176\u7f51\u7ad9\u4e0a\u8bf4\uff0c\u201c\u73b0\u5728\u201d\u5b83\u4e0d\u63a5\u53d7\u5176\u82f1\u56fd\u5546\u5e97\u7684\u73b0\u91d1\u652f\u4ed8\u3002\u540c\u6837\uff0c\u9910\u9986\u94fe\u6761Nando\u8868\u793a\uff0c\u5ba2\u6237\u65e0\u6cd5\u652f\u4ed8\u73b0\u91d1\uff0c\u65e5\u672c\u98df\u54c1\u94feITSU\u5173\u4e8e\u88ab\u5361\u7247\u7684\u8c08\u5224\uff0c\u5de5\u827a\u5564\u9152\u516c\u53f8Brewdog\u662f\u73b0\u6709\u73b0\u91d1\u7684\u9152\u5e97\u4e1a\u52a1\u4e4b\u4e00\u3002\n \u9e1f\u7c7b\u9762\u5305\u5e97\u7b49\u5176\u4ed6\u4eba\u6b63\u5728\u529d\u963b\u4f7f\u7528\u7269\u7406\u8d44\u91d1\u3002\u7c73\u5fb7\u5170\u5179\u94fe\u662f\u8fd1\u671f\u4ec5\u63a5\u53d7\u5e97\u5185\u7684\u5361\u652f\u4ed8\u7684\u4e2d\u5fc3\uff0c\u8868\u793a\uff0c\u5b83\u201c\u613f\u610f\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u62ff\u5361\u4ed8\u6b3e\u201d\u3002\n  \u201c\u6d88\u8d39\u8005\u5728\u76f8\u5bf9\u8f83\u77ed\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6d88\u8d39\u8005\uff0c\u201d\u94f6\u884c\u8d38\u6613\u673a\u6784\u82f1\u56fd\u8d22\u52a1\u8868\u793a\uff0c\u9881\u53d1\u4e86\u8fd9\u4e9b\u6570\u5b57\u3002 \u201c\u81ea2017\u5e74\u4ee5\u6765\uff0c\u73b0\u91d1\u7528\u9014\u6bcf\u5e74\u8dcc\u5e45\u4e0b\u964d\u7ea615\uff05\uff0c\u6240\u4ee52020\u5e74\u4ee3\u8868\u4e86\u8fd9\u79cd\u4e0b\u964d\u7684\u52a0\u901f\u3002\u201d \n\u8fd9\u4e00\u8d8b\u52bf\u53cd\u6620\u4e86\u8bb8\u591a\u4eba\u5e38\u7528\u73b0\u91d1\uff0c\u5982\u9152\u5427\u548c\u5496\u5561\u9986\u7684\u8bb8\u591a\u5730\u65b9\u90fd\u5173\u95ed\u4e86\u53bb\u5e74\u7684\u5757\uff0c\u800c\u9501\u5b9a\u4fc3\u4f7f\u6570\u5b57\u5728\u7ebf\u8d2d\u7269\u7684\u6d6a\u6d8c\u3002\u867d\u7136\u4e00\u7cfb\u5217\u4f01\u4e1a\u6682\u65f6\u6216\u6c38\u4e45\u5730\u6d88\u5931\u4e86\u5361\u7247\uff0c\u4f46\u7531\u4e8eCovid\u4f20\u8f93\u62c5\u5fe7\uff0c\u4e00\u4e9b\u6d88\u8d39\u8005\u5df2\u7ecf\u907f\u514d\u4e86\u89e6\u6478\u7eb8\u5e01\u548c\u786c\u5e01\u3002\n \u5c3d\u7ba1\u5982\u6b64\uff0c\u8c03\u67e5\u7ed3\u679c\u53ef\u80fd\u4f1a\u4fc3\u4f7f\u6570\u767e\u4e07\u4eba\u62c5\u5fc3\uff0c\u56e0\u4e3a\u8f6c\u5411\u65e0\u73b0\u91d1\u793e\u4f1a\u7684\u8f6c\u53d8\u901f\u5ea6\u3002\u5927\u7ea6120\u4e07\u6d88\u8d39\u8005\u4ecd\u7136\u4e3b\u8981\u7528\u73b0\u91d1\u4e3a2020\u5e74\u7684\u65e5\u5e38\u652f\u51fa\uff0c2019\u5e74\u7684210\u4e07\u4eba\u4e0b\u964d\u3002\n \u81ea\u4e3b\u83b7\u53d6\u73b0\u91d1\u5ba1\u67e5\u8868\u793a\uff0c\u82f1\u56fd\u6709\u8d85\u8fc7500\u4e07\u4eba\u4ecd\u7136\u201c\u4e25\u91cd\u4f9d\u8d56\u201d\u7b14\u8bb0\u548c\u786c\u5e01\uff0c\u800c\u6d88\u8d39\u8005\u4f53\u9a8c\uff1f\u8bf4\u90a3\u4e9b\u4ecd\u7136\u53d6\u51b3\u4e8e\u73b0\u91d1\u652f\u4ed8\u65e5\u5e38\u5fc5\u9700\u54c1\u7684\u4eba\u201c\u4e00\u5b9a\u4e0d\u88ab\u9057\u5fd8\u201d\u3002\n  2020\u5e74\u671f\u95f4\u975e\u63a5\u89e6\u5f0f\u652f\u4ed8\u6570\u91cf\u4e0a\u5347\u4e8612\uff05\uff0c\u603b\u4f53\u800c\u8a00\uff0c\u4ed6\u4eec\u5360\u6240\u6709\u4ed8\u6b3e\u7684\u56db\u5206\u4e4b\u4e00\u4ee5\u4e0a\uff0827\uff05\uff09\u3002\u6700\u8fd1\u4f5c\u4e3a2016\u5e74\uff0c\u8be5\u6570\u5b57\u4ef7\u683c\u4e3a7\uff05\u3002\n \u8fd9\u662f\u7531\u8bb8\u591a\u56e0\u7d20\u9a71\u52a8\u7684\uff0c\u5305\u62ec\u51b3\u5b9a\u589e\u52a0\u6c34\u9f99\u5934\u7684\u4e0a\u9650\uff0c\u5e76\u4e8e2020\u5e744\u6708\u4ece30\u82f1\u9551\u5230\u00a345\u652f\u4ed8 - \u8ba1\u5212\u8fdb\u4e00\u6b65\u589e\u52a0\u81f3100\u82f1\u9551 - \u5e76\u76f8\u4fe1\u975e\u63a5\u89e6\u66f4\u536b\u751f\u7684\u4fe1\u5ff5\u5904\u7406\u73b0\u91d1\u3002\n \u82f1\u56fd\u7ea6\u670983\uff05\u7684\u4eba\u73b0\u5728\u4f7f\u7528\u975e\u63a5\u89e6\u5f0f\uff0c\u6ca1\u6709\u5e74\u9f84\u7ec4\u6216\u5730\u533a\u4f4e\u4e8e75\uff05\u3002\n  \u73b0\u91d1\u7528\u4e8e2020\u5e74\u7684\u6240\u6709\u4ed8\u6b3e\u768417\uff05 -  2015\u5e74\u768445\uff05\uff0c2010\u5e74\u768456\uff05\u3002 \n\u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\u4ecd\u7136\u662f\u501f\u8bb0\u5361\u80cc\u540e\u7684\u7b2c\u4e8c\u6b21\u6700\u5e38\u7528\u7684\u4ed8\u6b3e\u65b9\u5f0f\uff0c\u4e0b\u5468\u65b0\u768450\u82f1\u9551\u7684\u6ce8\u91ca\uff0c\u4ee5\u79d1\u5b66\u5bb6Alan Turing\u5c06\u8fdb\u5165\u6d41\u901a\u3002\u82f1\u56fd\u8d22\u653f\u8868\u793a\uff0c\u8fd9\u5b8c\u5168\u53ef\u80fd\u4f1a\u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u6216\u660e\u5e74\u665a\u4e9b\u65f6\u5019\u201c\u53cd\u5f39\u201d\u3002\n \u57282020\u5e74\u671f\u95f4\uff0c\u67091370\u4e07\u6d88\u8d39\u8005\uff0c\u4ed6\u4eec\u8981\u4e48\u6ca1\u6709\u4f7f\u7528\u7b14\u8bb0\u548c\u786c\u5e01\uff0c\u6216\u8005\u53ea\u6709\u4e00\u6b21\u6bcf\u6708\u4e00\u6b21\u3002\u8fd9\u4e2a\u6570\u5b57\u5df2\u7ecf\u53d1\u5c55\u8fc5\u901f\uff1a2018\u5e74\uff0c2017\u5e74\u4e3a540\u4e07\u4eba\uff0c2016\u5e74\u4e3a340\u4e07\uff0c\u800c2016\u5e74\u4e3a290\u4e07\u3002\n  \u7136\u800c\uff0c\u968f\u7740\u53bb\u5e74\u7684\u4e00\u4e9b\u7ecf\u6d4e\u7684\u5927\u90e8\u5206\uff0c\u82f1\u56fd\u8d22\u653f\u8868\u793a\u8fd9\u4e00\u5b9a\u4e0d\u4e00\u5b9a\u662f\u9009\u62e9\u8fc7\u73b0\u884c\u65e0\u4ea7\u7684\u4eba\u7684\u8861\u91cf\u6807\u51c6\u3002\n  \u57282020\u5e74\u9884\u7b97\u4e2d\uff0c\u90e8\u957f\u4eec\u5ba3\u5e03\u8ba1\u5212\u4ecb\u7ecd\u7acb\u6cd5\uff0c\u4ee5\u4fdd\u62a4\u5bf9\u9700\u8981\u5b83\u7684\u4eba\u7684\u73b0\u91d1\u3002\u52a0\u52d2\u5e0c\u8096\uff0c\u54ea\u4e2a\u5934\uff1f\u91d1\u94b1\u8868\u793a\uff0c\u653f\u5e9c\u5fc5\u987b\u53d6\u5f97\u8fdb\u5c55\uff0c\u4ee5\u786e\u4fdd\u73b0\u91d1\u4ecd\u7136\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u4ed8\u6b3e\u65b9\u5f0f\uff0c\u53ea\u8981\u9700\u8981\u5b83\u3002\n \u6b64\u524d\u68c0\u6d4b\u5230\u73b0\u91d1\u5ba1\u67e5\u5148\u524d\u8b66\u544a\u8bf4\uff0c\u8be5\u56fd\u7684\u201c\u73b0\u91d1\u57fa\u7840\u8bbe\u65bd\u201d - \u4eceATM\u5230\u73b0\u91d1\u5206\u62e3\u4e2d\u5fc3 - \u53ef\u80fd\u5b58\u5728\u5d29\u6e83\u7684\u5371\u9669\uff0c\u56e0\u4e3a\u867d\u7136\u6210\u672c\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u56fa\u5b9a\u7684\uff0c\u4f46\u6536\u5165\u6b63\u5728\u8fc5\u901f\u4e0b\u964d\u3002\u6cf0\u8fbe\u5229\u5361\u4f0a\uff0c\u5176\u4e3b\u5e2d\u8868\u793a\uff0c\u968f\u7740\u73b0\u91d1\u7528\u9014\u7684\u62d2\u7edd\uff0c\u201c\u4eba\u4eec\u5c06\u65e0\u6cd5\u8bbf\u95ee\u5b83\u6216\u8005\u5546\u5e97\u4e0d\u4f1a\u63a5\u53d7\u5b83\u7684\u98ce\u9669\u8d8a\u6765\u8d8a\u5927\u3002\u7b49\u5f85\u4eba\u4eec\u5b66\u4f1a\u4f7f\u7528\u6570\u5b57\u5e76\u975e\u5982\u6b64\u3002\u201c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u6848\u4f8b\u3002\u201d ", "note_en": "UK Finance study records a 35% drop in cash transactions in 2020 as Covid crisis turbo-charges change in spending habits\n    The UK has moved a big step closer to becoming a cashless society after official data showed that the number of payments made using notes and coins fell by 35% in 2020.\n Changes in spending habits have been dramatically accelerated by the coronavirus pandemic, with 13.7 million people leading a \u201ccashless life\u201d last year \u2013 almost double  the 7.4 million figure in 2019. Five in six payments now involve no notes or coins, compared with half of all transactions a decade ago.\n  A growing number of businesses both big and small now refuse cash, with many having opted to go card-only over the past year.\n The retailer Ikea says on its website that \u201cfor now\u201d it is not accepting cash payments in its UK stores. Similarly, the restaurant chain Nando\u2019s says customers cannot pay with cash, the Japanese food chain Itsu talks about being card-only in-store and the craft beer firm BrewDog is among the hospitality businesses that are now cashless.\n Others such as Birds Bakery are discouraging the use of physical money. The Midlands chain, which was at the centre of a recent row  about only accepting card payments in-store, says it \u201cwould prefer to take card payments where possible\u201d.\n  \u201cThere has been a significant fall in cash use by consumers in a relatively short period of time,\u201d said the banking trade body UK Finance, which issued the figures. \u201cSince 2017, cash use had been declining by around 15% each year, so 2020 represented an acceleration of this decline.\u201d\n The trend reflects the fact that many places where people commonly use cash, such as pubs and cafes, were shut for chunks of last year, while the lockdowns prompted a surge in the numbers shopping online. While a string of businesses have temporarily or permanently gone card-only, some consumers  have been avoiding touching banknotes and coins because of Covid transmission worries.\n Nevertheless, the findings are likely to fuel concern about millions of people potentially being left behind as the shift to a cashless society speeds up. About 1.2 million consumers still mainly used cash for their day-to-day spending during 2020, down from 2.1 million people in 2019.\n The independent  Access to Cash Review said there were more than 5 million people in the UK still \u201cheavily reliant\u201d on notes and coins, while the consumer body Which? said those who still depended on cash to pay for everyday essentials \u201cmust not be forgotten\u201d.\n  The number of contactless payments rose by 12% during 2020, and overall they accounted for more than a quarter (27%) of all payments. As recently as 2016, the figure stood at 7%.\n This has been driven by a number of factors, including the decision to  increase the upper limit for tap and pay from \u00a330 to \u00a345 in April 2020 \u2013  a further rise to \u00a3100 is planned \u2013 and a belief that contactless is more hygienic than handling cash.\n About 83% of people in the UK now use contactless, with no age group or region falling below 75%.\n  Cash was used for 17% of all payments in 2020 \u2013 down from 45% in 2015 and 56% in 2010.\n Despite this, it remains the second most frequently used payment method behind debit cards, and next week a new \u00a350 note featuring the scientist Alan Turing  will go into circulation. UK Finance said it was entirely possible that cash may \u201cbounce back\u201d later this year or next year.\n During 2020 there were 13.7 million consumers who either did not use notes and coins at all, or only once a month. This number has grown rapidly: in 2018 it was 5.4 million people, in 2017 it was 3.4 million and in 2016 it was 2.9 million.\n  However, with large parts of the economy closed for some of last year, UK Finance said this was not necessarily a measure of people who had chosen to live a cashless life.\n  In the 2020 budget, ministers announced plans to introduce legislation to protect access to cash for those who need it. Gareth Shaw, the head of Which? Money, said the government must make progress on this to ensure that cash remained a viable payment option for as long as it was needed.\n The Access to Cash Review has previously warned that the country\u2019s \u201ccash infrastructure\u201d \u2013 from ATMs to cash-sorting centres \u2013  could be in danger of collapsing because while the costs are largely fixed, income is declining quickly. Natalie Ceeney, its chair, said that as cash use declined, \u201cthere is an increasing risk that people won\u2019t be able to access it or that shops won\u2019t accept it. It\u2019s not a case of waiting for people to learn to use digital.\u201d", "posttime": "2021-06-19 17:38:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65e0\u73b0\u91d1,society,\u73b0\u91d1", "title": "\u65e0\u73b0\u91d1\u7684\u65e0\u73b0\u91d1\u7684\u516d\u9879\u4ed8\u6b3e ", "title_en": "Cashless society draws closer with only one in six payments now in cash", "transed": 1, "url": "https://www.theguardian.com/business/2021/jun/16/cashless-society-draws-closer-with-only-one-in-six-payments-now-in-cash", "via": "", "real_tags": ["\u65e0\u73b0\u91d1", "society", "\u73b0\u91d1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066856, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6ca1\u6709\u4eba\u751a\u81f3\u5c1d\u8bd5\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u5199\u9053\uff0cGrant Sanderson\u7684YouTube\u9891\u90533B1B\u67091.61\u4ebf\u89c2\u3002\u6839\u636eYouTube\u5982\u4f55\u8ba1\u7b97\u201c\u89c2\u70b9\u201d\uff0c\u8fd9\u662f1.3\u548c2140\u4e07\u5c0f\u65f6\u7684\u5b66\u4e60\u3002\n \u8fd9\u5bf9\u6211\u6765\u8bf4\u662f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u3002\u5982\u679c\u4f60\u6628\u665a\u95ee\u6211\uff0c\u6211\u7684\u82f1\u96c4\u662f\u8c01\uff0c\u6211\u4f1a\u8bf4\u683c\u5170\u7279\u6851\u5fb7\u900a\u3002\u5982\u679c\u4f60\u95ee\u6211\u5bf9\u4e16\u754c\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u6211\u4f1a\u8bf4\u6ca1\u6709\u66f4\u591a\u7684\u4eba\u559c\u6b22\u4ed6\u3002\n  \u5e38\u89c4\u6559\u5e08\uff0c\u6bcf\u5e74180\u5929\u6559\u5b66\u51cc\u66688\u70b9\u81f3\u6bcf\u5e74180\u5929\uff0c\u6bcf\u5e74\u751f\u4ea725,000\u4e2a\u5b66\u4e60\u65f6\u95f4\uff01\u8d85\u8fc750\u5e74\u7684\u804c\u4e1a\u751f\u6daf\uff0c\u8fd9\u662f130\u4e07\uff0c\u4e0e\u6851\u5fb7\u68ee\u76f8\u540c\uff0c\u867d\u7136\u572810\u500d\u7684\u65f6\u95f4\u91cc\u3002\n \u5c06\u8001\u5e08\u4e0eKhan Academy\u8fdb\u884c\u6bd4\u8f83\u662f\u66f4\u4ee4\u4eba\u60ca\u8bb6\u7684\u3002\u53d6\u51b3\u4e8e\u60a8\u5982\u4f55\u8ba1\u7b97\u7684\u201c\u89c2\u70b9\u201d\uff0c\u5b83\u4eec\u7684\u5b66\u4e60\u65f6\u95f4\u4e3a1500\u4e07\u81f312.12\u4ebf\u3002\u4f46\u4ed6\u4eec\u6709600\u540d\u5458\u5de5\uff0c\u4ed6\u4eec\u5df2\u7ecf\u53d1\u751f\u4e8612\u5e74\u4e86\u3002\u56e0\u6b64\uff0c\u4e0e\u666e\u901a\u6559\u5e08\u768425,000\u4eba\u76f8\u6bd4\uff0c\u8fd9\u662f\u6bcf\u5e7417,000\u4ef6\uff0c\u6700\u5dee\u76842,000\u4ef6\u5b66\u4e60\u65f6\u95f4\uff0c\u6bcf\u5e74\u5458\u5de5\u6bcf\u5e74\u5b66\u4e60\u65f6\u95f4\u3002\n \u8fd9\u662f\u4e00\u4e2a\u6709\u70b9\u4e0d\u516c\u5e73\u7684\uff0cKhan Academy\u6ca1\u6709600\u540d\u5458\u5de5\uff0c\u6574\u657412\u5e74\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5047\u8bbe\u7ebf\u6027\u589e\u957f\uff0c\u4ed6\u4eec\u5c06\u5e73\u5747\u5458\u5de5300\u4eba\uff0c\u8fd9\u5c06\u4f7f\u4ed6\u4eec\u7684\u5b66\u4e60\u65f6\u95f4\u589e\u52a0\u52304,000\uff08\u6700\u597d\u7684\u6848\u4f8b33,000\uff09\u3002\n \u8981\u6e05\u695a\uff0c\u8fd9\u4e00\u70b9\u4e0d\u662fKhan Academy\u662f\u7cdf\u7cd5\u7684\uff08\u5b83\u4eec\u6709\u66f4\u591a\u7684\u65b9\u5f0f\u6bd4\u8bb2\u5ea7\u66f4\u597d\uff0c\u5e76\u4e14\u4ed6\u4eec\u53ef\u4ee5\u514d\u8d39\u63d0\u4f9b\u4efb\u4f55\u6709\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u4eba\uff09\u3002\u8fd9\u4e00\u70b9\u662f\uff0c\u770b\u4f3c\u4e0d\u53ef\u6269\u5c55\u7684\u4e1c\u897f\uff0c\u5982\u6559\u5b66\u4ecd\u7136\u53ef\u4ee5\u4e58\u4ee5\u4ee4\u4eba\u60ca\u8bb6\u7684\u5de8\u5927\u5f71\u54cd\u3002\n \u7531\u4e8eYouTube\u7684\u89c2\u70b9\u662f\u6e05\u6670\u548c\u91cf\u5316\u7684\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u770b\u5230100,000,000\uff0c\u5e76\u4e14\u89c9\u5f97\u771f\u7684\u5370\u8c61\u6df1\u523b\u3002\u4f46\u662f\u5c06\u4e00\u4e2a\u89c6\u56fe\u7b97\u523030\u79d2\uff0c\u4e00\u4f4d\u5e26\u670920\u540d\u5b66\u751f\u548c50\u5e74\u7684\u804c\u4e1a\u7684\u8001\u5e08\u53ef\u4ee5\u8fbe\u5230130\u4e07\u5b66\u4e60\u65f6\u95f4\uff0c\u76f8\u5f53\u4e8e1.51\u4ebf\u201c\u610f\u89c1\u201d\uff01 \n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u6ca1\u6709\u90a3\u4e48\u591a\u5c0a\u91cd\u8001\u5e08\u3002\u6211\u660e\u767d\u4ed6\u4eec\u53ef\u80fd\u662f\u597d\u4eba\uff0c\u5f88\u591a\u4eba\u90fd\u6559\u6388\u4f5c\u4e3a\u7231\u7684\u52b3\u52a8\uff0c\u4f46\u6211\u5e76\u4e0d\u6b23\u8d4f\u4ed6\u4eec\u7684\u5f71\u54cd\u3002\n \u4e8b\u5b9e\u4e0a\uff0c\u6559\u5b66\u4e00\u76f4\u662f\u6211\u7684\u699c\u6837\uff0c\u4ee5\u8bf4\u660e\u5229\u4ed6\u4e3b\u4e49\u4e0e\u5730\u65b9\u610f\u89c1\u6709\u4f55\u4e0d\u540c\u7a0b\u5ea6\u7fe9\u7fe9\u3002\u6559\u5b66\u4f3c\u4e4e\u662f\u4e00\u4ef6\u4f1f\u5927\u7684\u5de5\u4f5c\uff0c\u4f46\u5982\u679c\u4f60\u901a\u8fc7EA\u955c\u5934\u601d\u8003\u5b83\uff0c\u5b83\u5c31\u4e0d\u662f\u5f88\u6709\u5f71\u54cd\u3002 80,000\u5c0f\u65f6\u6709\u975e\u5e38\u8d1f\u9762\u7684\u6559\u5b66\u5ba1\u67e5\uff0c\u53e6\u4e00\u4e2a\u539f\u56e0\u4e0d\u53c2\u52a0\u6559\u80b2\u3002\n \u6211\u6ca1\u6709\u5b66\u5230\u7684\uff0c\u6700\u8fd1\u6ca1\u6709\u8ba9\u90a3\u4e9b\u6587\u7ae0\u5931\u6548\u3002\u7136\u800c\uff0c\u96be\u4ee5\u8c03\u548c\u6211\u5bf9\u6851\u5fb7\u900a\u656c\u754f\u4f3c\u4e4e\u6548\u7387\u7684\u4fe1\u5ff5\u3002\u4e00\u5982\u65e2\u5f80\uff0c\u4e00\u4e2a\u4eba\u7684Modus Ponens\u662f\u53e6\u4e00\u4e2a\u7537\u4eba\u7684Modus Tollens\u3002\u6211\u53ef\u4ee5\u62e5\u6709\u6211\u60f3\u8981\u7684\u4efb\u4f55\u4fe1\u5ff5\uff0c\u800c\u4e0d\u662f\u4e24\u4e2a\u4eba\u90fd\u662f\u4ed6\u4eec\u4e00\u6b21\u3002\u4efb\u4f55\u6559\u5e08\u90fd\u662f\u82f1\u96c4\uff0c\u6851\u5fb7\u68ee\u53ea\u662f\u9002\u5ea6\u7684\u8d5e\u8a89\u3002\n  \u4f60\u6b63\u5728\u5f00\u8f66\u7a7f\u8fc7\u4e00\u4e2a\u5c0f\u9547\uff0c\u5728\u5348\u9910\u65f6\u505c\u4e0b\u6765\uff0c\u542c\u5230\u4e00\u4f4d\u8001\u5e08\u7684\u8c23\u8a00\uff0c\u4ed6\u4eec\u63d0\u4f9b\u5f02\u5e38\u641e\u8bb2\u5ea7\u3002\u56e0\u4e3a\u6709\u5174\u8da3\u6559\u5b66\u548c\u793e\u4f1a\u5f71\u54cd\u7684\u5c3a\u5ea6\u611f\u5174\u8da3\uff0c\u4f60\u51b3\u5b9a\u4eb2\u81ea\u770b\u770b\uff0c\u5e76\u80af\u5b9a\uff0c\u8001\u5e08\u7684\u60ca\u4eba\uff01\n \u4f60\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u662f\u4ec0\u4e48\uff1f\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\uff0c\u4f60\u7684\u7b2c\u4e00\u4e2a\u6709\u610f\u8bc6\u7684\u53cd\u5e94\u5c06\u662f\u201c\u6211\u4eec\u5fc5\u987b\u5728youtube\u4e0a\u5f97\u5230\u8fd9\u4e2a\u5bb6\u4f19\uff01\u201d\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\uff0c\u4f60\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u6d6a\u8d39\uff0c\u56e0\u4e3a\u4ed6\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u9677\u5165\u4e00\u4e2a\u5c0f\u9547\uff0c\u5728\u4e92\u8054\u7f51\u4e0a\u9677\u5165\u56f0\u5883\uff0c\u4ee5\u89c4\u6a21\u5411\u7fa4\u4f17\u63d0\u4f9b\u5185\u5bb9\u3002\n \u6240\u4ee5\u4f60\u548c\u4ed6\u8c08\u8c08\uff0c\u5efa\u7acb\u4e00\u90e8\u5c0f\u7535\u5f71\u8239\u5458\uff0c\u8bf4\u670d\u4ed6\u4f11\u5047\u6559\u5b66\u8bb0\u5f55YouTube\u8bb2\u5ea7\uff0c\u5e76\u80af\u5b9a\u662f\u4e00\u4e2a\u6253\u51fb\uff01\u5728\u60a8\u7684\u524d\u51e0\u5e74\u5185\uff0c\u4ed6\u7684\u610f\u89c1\u9ad8\u8fbe\u4e861000\u4e07\u3002\n \u7136\u800c\uff0c\u4e8b\u5b9e\u8bc1\u660e\u76f4\u89c9\u662f\u5b8c\u5168\u9519\u8bef\u7684\u3002\u4ed6\u5df2\u7ecf\u6bcf\u9694\u51e0\u5e74\u65f6\u95f4\u5728\u201c1000\u4e07\u6b21\u89c2\u770b\u201d\u4e2d\u65f6\u949f\u3002\u5f53\u7136\u5b58\u5728\u5728\u7ebf\u7684\u597d\u5904\u3002\u8bb0\u5f55\u5185\u5bb9\uff0c\u5b66\u751f\u53ef\u4ee5\u5728\u4e16\u754c\u4e0a\u4efb\u4f55\u5730\u65b9\uff0c\u5982\u679c\u60a8\u9519\u8fc7\u4e86\u4e00\u4e2a\u90e8\u5206\uff0c\u60a8\u53ef\u4ee5\u56de\u53bb\u3002\u4f46\u6ca1\u6709\u4e00\u4e2a\u611f\u89c9\u8db3\u4ee5\u8bc1\u660e\u6211\u7684\u521d\u6b65\u53cd\u5e94\u3002 \n\u4e5f\u8bb8\u6211\u53ea\u662f\u4e00\u4e2a\u65e0\u803b\u7684Techephile\u8ffd\u6eaf\u4e86\u6211\u7684\u4fe1\u4ef0\uff0c\u4f46\u6211\u8ba4\u4e3a\u63ed\u9732\u6851\u5fb7\u9686\u4ecd\u6709\u5145\u5206\u7684\u7406\u7531\u3002  \u6211\u559c\u6b223B1B\u89c6\u9891\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u521b\u9020\u6027\u7684\uff0c\u5e76\u4ee5\u6570\u5b66\u4ece\u672a\u5728\u5b66\u6821\u7684\u65b9\u5f0f\u4e0a\u3002 \u5b83\u771f\u6b63\u611f\u89c9\u4ed6\u901a\u8fc7\u4efb\u4f55\u6df7\u6dc6\u6765\u963b\u6b62\u5b69\u5b50\u4ece\u7406\u89e3\u6570\u5b66\uff0c\u5e76\u53d1\u73b0\u89e3\u91ca\u5173\u952e\u6982\u5ff5\u7684\u66f4\u597d\u65b9\u5f0f\u3002 \u56e0\u4e3a\u6570\u5b66\u662f\u5982\u6b64\u57fa\u672c\u7684\u63a8\u7406\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u826f\u597d\u7684\u6559\u80b2\u6e20\u9053\u3002 \u611f\u89c9\u51e0\u4e4e\u5c31\u50cf\u662f\u4e00\u4e2a\u6587\u660e\u7684\u98de\u8dc3\u3002  \u4f46\u4ecd\u7136\uff0c\u8fd9\u4e0d\u662f\u516c\u5236\u7684\u6709\u6548\u5229\u4ed6\u4e3b\u4e49\u5173\u5fc3\u3002 \u4e5f\u8bb8\u771f\u6b63\u7684Modus Tollens\u662fAbbandon\u503c\u7cfb\u7edf\u3002 ", "note_en": "In  No One is Even Trying, I wrote that Grant Sanderson\u2019s Youtube channel  3B1B has 161 million views. Based on how Youtube counts \u201cviews\u201d, that\u2019s between 1.3 and 21.4 million hours of learning.\n This is incredible to me. If you asked me last night who my hero is, I would have said Grant Sanderson. If you asked me what\u2019s wrong with the world, I would have said that there aren\u2019t more people like him.\n  A regular teacher, teaching 8am\u20133pm  180 days a year to a  class of 20 is producing 25,000 learning hours a year! Over a 50 year career, that\u2019s 1.3 million, same as Sanderson, though in 10x as much time.\n It\u2019s even more surprising to compare a teacher with Khan Academy. Depending on how you count \u201cviews\u201d they\u2019re at 15 million to 120 million learning hours. But they have 600 employees, and they\u2019ve been around for 12 years. So that\u2019s best case 17,000, worst case 2,000 learning hours per employee per year, compared to a regular teacher\u2019s 25,000.\n That\u2019s a little unfair, Khan Academy hasn\u2019t had 600 employees for the full 12 years. But if we assume linear growth, they\u2019ve averaged 300 employees, which would increase their learning hours to 4,000 (best case 33,000).\n To be clear, the point is not that Khan Academy is bad (they have way more than lectures, and they\u2019re available to anyone with an internet connection for free). The point is that seemingly non-scalable things like teaching can still multiply out to surprisingly large impact.\n Since views counts on Youtube are  legible and quantified, it\u2019s really easy to see 100,000,000 and feel really impressed. But counting a view as 30 seconds, a teacher with 20 students and a 50 year career could hit 1.3 million learning hours, the equivalent of 151 million \u201cviews\u201d!\n Until now, I didn\u2019t have that much respect for teachers. I understood that they\u2019re probably good people, and a lot of them teach as a labor of love, but I didn\u2019t appreciate their impact.\n In fact, teaching has been my go-to example for illustrating how effective altruism differs from lay person opinions. Teaching seems like a great job, but if you think about it through an EA lens, it\u2019s just not very impactful. 80,000 hours has very negative reviews of  teaching, and another article of  reasons not to go into education.\n Nothing I\u2019ve learned recently invalidates those articles. And yet, it\u2019s hard to reconcile my belief in the seeming inefficacy of teaching jobs with my reverence for Sanderson. As always,  one man\u2019s modus ponens is another man\u2019s modus tollens. I can have whichever belief I want, but not both of them at once. Either teachers are heroes, or Sanderson is merely moderately praiseworthy.\n  You\u2019re driving through a small town, and while stopping for lunch, hear rumors of a teacher who delivers unusually engaging lectures. As someone interested in pedagogy and social impact at scale, you decide to go check it out in person, and sure enough, the teacher\u2019s amazing!\n What would your first thought be? If you\u2019re like me, your first conscious reaction would be \u201cwe\u2019ve got to get this guy on Youtube!\u201d If you\u2019re like me, you see it as a horrendous waste of potential that this brilliant educator is stuck in a small town when he could be on the internet, delivering content to the masses at scale.\n So you talk to him, set up a small film crew, convince him to take time off teaching to record Youtube lectures, and sure enough it\u2019s a hit! Within your first few years, he\u2019s up to 10 million views.\n And yet, it turns out that intuition is totally wrong. He was already clocking in \u201c10 million views\u201d every few years. Of course there are benefits of being online. The content is recorded, the students could be anywhere in the world, you can go back if you missed a section. But none of that feels sufficient to justify my initial reaction.\n Maybe I\u2019m just a shameless technophile retroactively justifying my beliefs, but I think there\u2019s still a good reason to revere Sanderson.\n I love 3B1B videos because they\u2019re creative and engaging in a way that math never was in school. It genuinely feels like he\u2019s broken through whatever obfuscation prevents kids from understanding math, and discovered better ways of explaining key concepts. And because math is so fundamental to reasoning, this is more than a good educational channel. It feels almost like a leap forward for civilization.\n But still, that\u2019s not a metric effective altruism cares about. Maybe the real modus tollens is to abbandon the value system.", "posttime": "2021-06-19 16:56:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6559\u5e08,views,\u6559\u5b66", "title": "\u4fee\u6539\u6211\u5bf9\u6559\u5e08\u7684\u5f71\u54cd\u7684\u770b\u6cd5 ", "title_en": "Revising My Views on the Impact of Teachers", "transed": 1, "url": "https://applieddivinitystudies.com/rethinking-education/", "via": "", "real_tags": ["\u6559\u5e08", "views", "\u6559\u5b66"]}, {"category": "", "categoryclass": "", "imagename": "25f4847adef0ce157d1b0da2dfb8c1ad.jpg", "infoid": 1066855, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u4eba\u7c7b\u57fa\u56e0\u7ec4\u9996\u6b21\u88ab\u8ba4\u4e3a\u662f\u201c\u5b8c\u6574\u201d2000\u5e74\u65f6\uff0c\u65b0\u95fb\u4e0e\u4f1f\u5927\u7684\u56fd\u9645\u7c89\u4e1d\u8fbe\u6210\u4e86\u3002\u4e24\u4f4d\u7ade\u4e89\u56e2\u4f53\u4e89\u593a\u57fa\u56e0\u7ec4\u7b2c\u4e00 - \u4e00\u4e2a\u5927\u578b\u653f\u5e9c\u4e3b\u5bfc\u7684\u8054\u76df\uff0c\u53e6\u4e00\u5bb6\u79c1\u4eba\u516c\u53f8 - \u540c\u610f\u5ba3\u5e03\u8054\u5408\u6210\u529f\u3002\u4ed6\u4eec\u5728\u767d\u5bab\u63e1\u624b\u3002\u6bd4\u5c14\u514b\u6797\u987f\u4e3b\u6301\u3002\u6258\u5c3c\u5e03\u83b1\u5c14\u5728\u4f26\u6566\u6a2a\u6881\u3002 \u201c\u6211\u4eec\u5728\u79d1\u5b66\u5386\u53f2\u4e0a\u7684\u4e00\u4e2a\u975e\u51e1\u65f6\u523b\uff0c\u201d\u5f53\u90a3\u4e9b\u57fa\u56e0\u7ec4\u51fa\u7248\u65f6\uff0c\u4e00\u4e2a\u7740\u540d\u7684\u79d1\u5b66\u5bb6\u5ba3\u5e03\u3002 \u201c\u5c31\u597d\u50cf\u6211\u4eec\u5df2\u7ecf\u722c\u5230\u4e86\u559c\u9a6c\u62c9\u96c5\u5c71\u7684\u9876\u7aef\u3002\u201d\n \u4f46\u5b9e\u9645\u4e0a\uff0c\u4eba\u7c7b\u57fa\u56e0\u7ec4\u672a\u5b8c\u6210\u3002\u65e2\u4e0d\u8fbe\u5230\u771f\u6b63\u7684\u5cf0\u4f1a\u3002\u5e38\u5982\u5f53\u4ee3\u8986\u76d6\u8303\u56f4\u627f\u8ba4\uff0c\u8be5\u7248\u672c\u66f4\u50cf\u662f\u7c97\u7565\u7684\u8349\u7a3f\uff0c\u7528\u957f\u957f\u7684\u5ef6\u4f38\u5730\u7f20\u7ed5\uff0cDNA\u5e8f\u5217\u4ecd\u7136\u6a21\u7cca\u6216\u7f3a\u5931\u3002\u79c1\u8425\u516c\u53f8\u5f88\u5feb\u65cb\u8f6c\u5e76\u7ed3\u675f\u4e86\u4eba\u7c7b\u57fa\u56e0\u7ec4\u9879\u76ee\uff0c\u867d\u7136\u5177\u6709\u516c\u5171\u8d22\u56e2\u58eb\u5175\u7684\u79d1\u5b66\u5bb6\u3002 2003\u5e74\uff0c\u968f\u7740\u547c\u5438\u8f83\u5c11\u4f46\u4ecd\u6709\u5927\u91cf\u7684\u5934\u6761\u65b0\u95fb\uff0c\u4eba\u7c7b\u57fa\u56e0\u7ec4\u518d\u6b21\u5ba3\u5e03\u5b8c\u6210\u3002\n \u4f46\u5b9e\u9645\u4e0a\uff0c\u4eba\u7c7b\u57fa\u56e0\u7ec4\u4ecd\u7136\u6ca1\u6709\u5b8c\u6210\u3002\u5373\u4f7f\u4fee\u8ba2\u540e\u7684\u8349\u6848\u4e5f\u7f3a\u5c11\u7ea68\uff05\u7684\u57fa\u56e0\u7ec4\u3002\u8fd9\u4e9b\u662f\u6700\u96be\u7684\u5e8f\u5217\u533a\u57df\uff0c\u5145\u6ee1\u4e86\u91cd\u590d\u7684\u5b57\u6bcd\uff0c\u8fd9\u662f\u5f53\u65f6\u7684\u6280\u672f\u65e0\u6cd5\u9605\u8bfb\u3002\n  \u6700\u540e\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u7fa4\u72ec\u7acb\u7684\u79d1\u5b66\u5bb6\u6084\u6084\u5730\u53d1\u5e03\u4e86\u4e00\u7bc7\u5728\u7ebf\u4e0a\u9762\u63cf\u8ff0\u4e86\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u7b2c\u4e00\u4e2a\u771f\u6b63\u5b8c\u5584\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4-A-A\u8bfb\u51fa23\u4f8b\u4eba\u7c7b\u67d3\u8272\u4f53\u7684\u6240\u6709305.5\u4ebf\u5b57\u6bcd\u3002\u7531\u76f8\u5bf9\u5e74\u8f7b\u7684\u7814\u7a76\u4eba\u5458\u9886\u5bfc\u7684\u5c0f\u7ec4\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u4ece\u4e16\u754c\u5404\u5730\u95f2\u901b\uff0c\u5b8c\u621020\u5e74\u524d\u9057\u5f03\u7684\u4efb\u52a1\u3002\u8fd9\u6b21\u6ca1\u6709\u6cfc\u767d\u623f\u5b50\u5ba3\u5e03\uff0c\u6ca1\u6709\u8c08\u8bba\u559c\u9a6c\u62c9\u96c5\u5c71\u7684\u603b\u7ed3;\u672c\u6587\u672c\u8eab\u4ecd\u5728\u5ba1\u67e5\u65e5\u5fd7\u4e2d\u7684\u5b98\u65b9\u51fa\u7248\u7269\u3002\u4f46\u7f3a\u4e4f\u5e9e\u57f9\u7684\u5c4f\u853d\u8fd9\u662f\u4e00\u9879\u6210\u5c31\uff1a\u4e3a\u4e86\u5b8c\u6210\u4eba\u7c7b\u7684\u57fa\u56e0\u7ec4\uff0c\u8fd9\u4e9b\u79d1\u5b66\u5bb6\u5fc5\u987b\u5f04\u6e05\u695a\u5982\u4f55\u5f04\u6e05\u695a\u6700\u795e\u79d8\u548c\u5ffd\u89c6\u7684\u91cd\u590d\u5730\u533a\uff0c\u8fd9\u73b0\u5728\u6700\u7ec8\u53ef\u80fd\u4f1a\u5f97\u5230\u4ed6\u4eec\u7684\u79d1\u5b66\u3002\n \u201c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5730\u6807\uff0c\u201d\u5f17\u96f7\u5fb7\u00b7\u54c8\u94a6\u68ee\u764c\u75c7\u7814\u7a76\u4e2d\u5fc3\u7684\u5206\u5b50\u751f\u7269\u5b66\u5bb6\u53f2\u8482\u6587\u00b7\u4ea8\u5c3c\u514b\u8bf4\uff0c\u4ed6\u6ca1\u6709\u53c2\u4e0e\u8be5\u9879\u76ee\u3002 Henikoff\u7814\u7a76\u5176\u4e2d\u4e00\u4e2a\u795e\u79d8\u7684\u96be\u4ee5\u5e8f\u5217\u5730\u533a\uff0c\u5176\u4e2d\u4ee5\u524d\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u9879\u76ee\u5df2\u7ecf\u653e\u5f03\u4e86\uff1aCentromeres\uff0c\u8fd9\u662f\u6bcf\u79cd\u67d3\u8272\u4f53\u7684\u7565\u5fae\u5939\u6301\u7684\u4e2d\u95f4\u3002\u67d3\u8272\u4f53\uff0c\u5176\u4e2d\u4eba\u670923\u5bf9\uff0c\u6bcf\u4e2a\u90fd\u5305\u62ec\u957f\uff0c\u8fde\u7eed\u7684DNA\uff0c\u53ef\u4ee5\u51b7\u51dd\u6210\u6746\u72b6; Centromere\u7684DNA\u7279\u522b\u5bc6\u96c6\u3002\n \u5728\u4e94\u4e2a\u4eba\u4f53\u67d3\u8272\u4f53\u4e0a\uff0cCentromere\u4e0d\u5728\u4e2d\u95f4\uff0c\u4f46\u975e\u5e38\u63a5\u8fd1\u4e00\u7aef\uff0c\u5c06\u67d3\u8272\u4f53\u5206\u6210\u4e00\u4e2a\u957f\u800c\u4e00\u4e2a\u975e\u5e38\u77ed\u7684\u81c2\u3002\u8fd9\u4e9b\u77ed\u81c2\u4e5f\u5145\u6ee1\u4e86\u4ece\u672a\u5b8c\u5168\u6d4b\u5e8f\u7684\u91cd\u590d\u3002 Centromeres\uff0c\u77ed\u6b66\u5668\u548c\u5176\u4ed6\u7c7b\u578b\u7684\u91cd\u590d\u533a\u57df\u7ec4\u6210\u4e86\u5927\u90e8\u5206\u76842.38\u4ebf\u5b57\u6bcd\uff0c\u8be5\u8054\u76df\u6700\u7ec8\u6dfb\u52a0\u6216\u7ea0\u6b63\u5728\u4eba\u7c7b\u57fa\u56e0\u7ec4\u4e2d\u3002\n  \u4eba\u7c7b\u57fa\u56e0\u7ec4\u7684\u91cd\u590d\u542b\u91cf\u901a\u5e38\u4e0d\u4f1a\u542b\u6709\u57fa\u56e0\uff0c\u8fd9\u662f\u4ed6\u4eec\u957f\u671f\u88ab\u5ffd\u89c6\u7684\u4e00\u4e2a\u539f\u56e0\u3002\u9057\u4f20\u5b66\u5bb6\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u96c6\u4e2d\u5728\u57fa\u56e0\u4e0a\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u529f\u80fd\u662f\u663e\u800c\u6613\u89c1\u548c\u7b80\u5355\u7684\uff1a\u57fa\u56e0\u7f16\u7801\u86cb\u767d\u8d28\u3002 \uff08\u4eba\u7c7b\u57fa\u56e0\u7ec4\u7684\u65e9\u671f\u8349\u6848\u7684\u4e00\u4e2a\u5927\u60ca\u559c\u662f\u6211\u4eec\u7684DNA\u5b9e\u9645\u7f16\u7801\u86cb\u767d\u8d28\u7684\u5c11\u70b9 - \u53ea\u67091\uff05\u3002\u5269\u4e0b\u768499\uff05\u7684\u4f5c\u7528\u53d8\u5f97\u66f4\u52a0\u6e05\u6670\u3002\uff09\u786e\u5b9e\uff0c\u6709\u6697\u793a\u8fd9\u4e9b\u91cd\u590d\u7684\u5730\u533a\u8fd8\u5728\u57fa\u56e0\u6240\u8868\u8fbe\u548c\u4f20\u9012\u7684\u57fa\u56e0\u4e2d\u53d1\u6325\u91cd\u8981\u4f5c\u7528\uff0c\u800c\u4ed6\u4eec\u7684\u5f02\u5e38\u4e0e\u764c\u75c7\u548c\u8001\u5316\u6709\u5173\u3002\u8054\u76df\u53d1\u73b0\u4e8679\u4e2a\u5728\u91cd\u590d\u4e2d\u9690\u85cf\u7684\u65b0\u57fa\u56e0\u3002\u901a\u8fc7\u7ec8\u4e8e\u5728\u624b\u4e2d\u7684\u5730\u56fe\u4e0a\uff0c\u79d1\u5b66\u5bb6\u53ef\u4ee5\u66f4\u4ed4\u7ec6\u5730\u63a2\u6d4b\u5b83\u4eec\u7684\u529f\u80fd\u3002 \n\u5b8c\u6210\u57fa\u56e0\u7ec4\u7684\u52aa\u529b\u662f\u201c\u5b8c\u5168\u57fa\u5c42\u201d\uff0c\u56fd\u7acb\u536b\u751f\u7814\u7a76\u9662\u7684\u8ba1\u7b97\u9057\u4f20\u4e3b\u4e49\u8005\uff0c\u4ed6\u4eec\u5171\u540c\u9886\u5bfc\u5730\u7aef\u8eab\u81f4\u62d3\uff08T2T\uff09\u8054\u76df\u5b8c\u6210\u4e86\u57fa\u56e0\u7ec4\u3002 \uff08\u7aef\u7c92\u4f53\u662f\u67d3\u8272\u4f53\u672b\u7aef\u7684\u533a\u57df\uff0c\u6240\u4ee5\u7aef\u7c92\u4e3aTelometere\u610f\u5473\u7740\u201c\u7ed3\u675f\u7ed3\u675f\u201d\u3002\uff09Phillippy\u548cKaren MIGA\uff0cUC Santa Cruz\u7684\u9057\u4f20\u624b\uff0c\u51b3\u5b9a\u57282018\u5e74\u5728\u4ed6\u4eec\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\u540e\u572820\u200b\u200b18\u5e74\u521b\u5efa\u8054\u76df\u4ed6\u4eec\u90fd\u6709\u9898\u4e3a\u7ed3\u675f\u4eba\u7c7b\u57fa\u56e0\u7ec4\u7684\u91ce\u5fc3\u3002\n \u201c\u6211\u7231\u4e0a\u4e86\u91cd\u590d\uff0c\u201d\u7c73\u683c\u5a1c\u8bf4\uff0c\u4f5c\u4e3a\u4e00\u540d\u751f\u7269\u5b66\u5bb6\u8bd5\u56fe\u4e86\u89e3\u90a3\u4e9b\u91cd\u590d\u7684\u4eba\u3002\u8153\u5229\u83f2\uff0c\u4e00\u4f4d\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u901a\u8fc7\u57f9\u8bad\uff0c\u5e26\u6765\u4e86\u6280\u672f\u6027\u7684\u4f5c\u5f0a\u3002\u4f20\u7edf\u7684\u6d4b\u5e8f\u6280\u672f\u7247\u6bb5DNA\u6210\u5c0f\u5757\uff0c\u8ba1\u7b97\u673a\u7b97\u6cd5\u5fc5\u987b\u50cf\u62fc\u56fe\u4e00\u6837\u91cd\u65b0\u7ec4\u88c5\u5b83\u4eec\u3002\u95ee\u9898\u662f\uff0c\u6765\u81ea\u91cd\u590d\u533a\u57df\u7684\u788e\u7247\u90fd\u770b\u8d77\u6765\u51e0\u4e4e\u76f8\u540c\u3002\u73b0\u5728\u4e24\u4e2a\u65b0\u7684\u201c\u957f\u8bfb\u201d\u6d4b\u5e8f\u6280\u672f - \u53eb\u505aPacbio Hifi\u548c\u725b\u6d25\u7eb3\u7c73\u5965\u6ce2\u5c14 - \u5141\u8bb8\u79d1\u5b66\u5bb6\u4eec\u9605\u8bfb\u66f4\u957f\u7684\u57fa\u56e0\u7ec4\u3002\u8fd9\u4e9b\u5b9a\u5e8f\u5668\u4ecd\u7136\u65e0\u6cd5\u5904\u7406\u8db3\u591f\u5927\u7684\u5757\u4ee5\u8d8a\u8fc7\u6574\u4e2aCENTROMERE\u6216\u77ed\u81c2\uff0c\u4f46\u81f3\u5c11\u7b97\u6cd5\u5177\u6709\u66f4\u5927\u7684\u62fc\u56fe\u7ec4\u88c5\u3002\n Centromere\u5e8f\u5217\u7684\u4f5c\u7528\uff0c\u5982\u8bb8\u591a\u5176\u4ed6\u91cd\u590d\u533a\u57df\uff0c\u5c1a\u672a\u5b8c\u5168\u7406\u89e3\uff0c\u4f46\u5b83\u4eec\u662f\u6700\u88ab\u79f0\u4e3a\u7ec6\u80de\u5206\u88c2\u7684\u5173\u952e\u3002\u5f53\u4e00\u4e2a\u7ec6\u80de\u5206\u4e3a\u4e24\u4e2a\u65f6\uff0c\u86cb\u767d\u8d28\u4e3b\u8f74\u9644\u7740\u5728\u7126\u70b9\u4e0a\u65f6\uff0c\u5c06\u67d3\u8272\u4f53\u5206\u5f00\uff0c\u4ee5\u786e\u4fdd\u6bcf\u4e2a\u7ec6\u80de\u90fd\u83b7\u5f97\u6b63\u786e\u7684\u6570\u91cf\u3002\u5f53\u9e21\u86cb\u6216\u7cbe\u5b50\u4e2d\u51fa\u73b0\u95ee\u9898\u65f6\uff0c\u5a74\u513f\u53ef\u4ee5\u751f\u51fa\u67d3\u8272\u4f53\u5f02\u5e38\uff0c\u5982\u5510\u6c0f\u7efc\u5408\u5f81\u6216\u65cb\u8f6c\u7efc\u5408\u5f81\u3002\u5f53\u5b83\u5728\u8eab\u4f53\u7684\u5176\u4ed6\u90e8\u4f4d\u51fa\u73b0\u95ee\u9898\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u6700\u7ec8\u8840\u7ec6\u80de\uff0c\u4f8b\u5982\uff0c\u67d3\u8272\u4f53\u8fc7\u591a\u6216\u592a\u5c11\u3002\u8fd9\u662f\u8001\u9f84\u5316\u7684\u6807\u5fd7\uff1a70\u5c81\u4ee5\u4e0a\u7684\u7537\u6027\u5bf9\u5176\u8840\u7ec6\u80de\u4e2d\u7684y\u67d3\u8272\u4f53\u5931\u53bb\u4e86\u4e0d\u5bfb\u5e38\u3002\u5728\u4e0e\u5b8c\u6574\u57fa\u56e0\u7ec4\u5171\u540c\u4e0a\u4f20\u7684\u4e24\u4e2a\u4f34\u968f\u6587\u4ef6\u4e2d\uff0cT2T\u8054\u76df\u8868\u660e\uff0c\u725b\u6d25\u7eb3\u7c73\u5b54\u7684\u957f\u8bfb\u6280\u672f\u4e5f\u53ef\u7528\u4e8e\u6620\u5c04\u86cb\u767d\u8d28\u4e3b\u8f74\u9644\u7740\u5728\u5398\u7c73\u4e0a\u7684\u4f4d\u7f6e\u3002\u68c0\u67e5\u8fd9\u4e9b\u533a\u57df\u4e2d\u7684\u5e8f\u5217\u53ef\u80fd\u4f1a\u4ea7\u751f\u65b0\u7684\u67d3\u8272\u4f53\u5f02\u5e38\u7ebf\u7d22\u3002\n  \u67d3\u8272\u4f53\u7684\u91cd\u590d\u7684\u5bcc\u6709\u7684\u77ed\u81c2\u7c7b\u4f3c\u5730\u662f\u795e\u79d8\u7684\u3002\u5b83\u4eec\u7edd\u5bf9\u5728\u5c06\u57fa\u56e0\u8f6c\u5316\u4e3a\u86cb\u767d\u8d28\u7684\u7ec6\u80de\u673a\u5236\u4e2d\u53d1\u6325\u4e86\u4e00\u4e9b\u4f5c\u7528\uff0c\u5e76\u4e14\u4e86\u89e3\u5b83\u4eec\u7684\u5e8f\u5217\u53ef\u4ee5\u5728\u8be5\u529f\u80fd\u4e0a\u6d41\u52a8\u66f4\u591a\u5149\u3002 Brian McStay\u662f\u6208\u5c14\u97e6\u56fd\u7acb\u5927\u5b66\u7684\u751f\u7269\u5b66\u5bb6\uff0c\u5c06\u5b8c\u6574\u7684\u57fa\u56e0\u7ec4\u6bd4\u5bf9\u67d3\u8272\u4f53\u7684\u201c\u96f6\u4ef6\u6e05\u5355\u201d\u5e76\u5c06\u79d1\u5b66\u5bb6\u4eec\u9010\u4e00\u5c1d\u8bd5\u53d6\u51fa\u5efa\u7b51\u7269\u7684\u201c\u96f6\u4ef6\u6e05\u5355\u201d\u3002 \u201c\u77e5\u9053\u8fd9\u4e2a\u96f6\u4ef6\u6e05\u5355\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u8bf4\uff0c'\u8fd9\u6b63\u662f\u6211\u4eec\u7684\u67d3\u8272\u4f53\u770b\u8d77\u6765\u50cf\u4ec0\u4e48'\u201dMcStay\u8bf4\u3002 \u201c'\u8ba9\u6211\u4eec\u5220\u9664\u5b83\uff0c\u770b\u770b\u5bf9\u8be5\u67d3\u8272\u4f53\u529f\u80fd\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\u3002'\u201d\n \u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u662f\u6d4b\u5e8f\u5b8c\u6574\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u7684\u6280\u672f\u58ee\u4e3e\u662f\uff0c\u79d1\u5b66\u5bb6\u544a\u8bc9\u6211\uff0c\u4e00\u4e2a\u57fa\u56e0\u7ec4\u53ea\u662f\u4e00\u4e2a\u5feb\u7167\u3002\u770b\u5230\u8fd9\u4e9b\u91cd\u590d\u533a\u57df\u5982\u4f55\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d8\u5316\uff0c\u7269\u79cd\u5bf9\u7269\u79cd\uff0c\u5c06\u66f4\u6709\u8da3\u3002 \u201c\u764c\u75c7\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u53d1\u5c55\u4e2d\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u5982\u679c\u5c06\u540e\u4ee3\u4e0e\u7236\u6bcd\u6bd4\u8f83\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u201c\u4ea8\u57fa\u592b\u8bf4\u3002\u8be5\u8054\u76df\u8bc1\u660e\uff0c\u8fd9\u4e9b\u91cd\u590d\u533a\u57df\u4e0e\u65b0\u7684\u957f\u8bfb\u6280\u672f\u4e00\u8d77\u6392\u5e8f\u3002\u73b0\u5728\u4ed6\u4eec\u53ef\u4ee5\u5e94\u7528\u4e8e\u66f4\u591a\u57fa\u56e0\u7ec4\uff0c\u8ba9\u79d1\u5b66\u5bb6\u4e0e\u53e6\u4e00\u4e2a\u4eba\u4e00\u8d77\u6bd4\u8f83\u4e00\u4e2a\u3002\n \u4e8b\u5b9e\u4e0a\uff0cMIGA\u8bf4\uff0c\u6700\u7ec8\u7684\u68a6\u60f3\u662f\u8ba9\u79d1\u5b66\u5bb6\u8bd5\u56fe\u4ece\u7aef\u5230\u7aef\u5b8c\u6210\u5e8f\u5217\u7684\u6bcf\u4e2a\u57fa\u56e0\u7ec4\uff0c\u7aef\u5b50\u624d\u80fd\u7aef\u8eab\u3002\u4f46\u9996\u5148\uff0c\u8be5\u96c6\u56e2\u7684\u76ee\u6807\u662f\u66f4\u76f4\u63a5\u7684\u76ee\u6807\u3002\u5982\u679c\u4f60\u60f3\u7528\u65b0\u7684\u57fa\u56e0\u7ec4\u6ca1\u6709\u201c\u5b8c\u6210\u201d\uff0c\u4f60\u53ef\u4ee5\u6307\u51fa\u5b83\u53ea\u6709\u5355\u4e00\u7ec423\u67d3\u8272\u4f53\uff0c\u800c\u6b63\u5e38\u4eba\u4f53\u7ec6\u80de\u670923\u5bf9\u3002\u4e3a\u4e86\u7b80\u5316\u4efb\u52a1\uff0c\u672c\u7ec4\u4f7f\u7528\u6765\u81ea\u7279\u5b9a\u7c7b\u578b\u7684\u80bf\u7624\u7684\u7ec6\u80de\uff0c\u4ece\u5f02\u5e38\u53d7\u7cbe\u5375\u4ea7\u751f\u5e76\u6700\u7ec8\u752823\u4e2a\u5355\u4e00\u67d3\u8272\u4f53\u3002\u8be5\u56e2\u961f\u5c06\u4e0d\u5f97\u4e0d\u4f7f\u7528\u4e0d\u540c\u7684\u7ec6\u80de\uff0c23\u5bf9\u67d3\u8272\u4f53\uff0c\u5b8c\u6210\u6240\u8c13\u7684\u201c\u4e8c\u500d\u4f53\u201d\u57fa\u56e0\u7ec4\u3002\n  \u201c\u4e0b\u4e00\u4e2a\u4e3b\u8981\u7684\u91cc\u7a0b\u7891\u5c06\u662f\u5e38\u89c4\u7684\u4e8c\u500d\u4f53\u57fa\u56e0\u7ec4\uff0c\u201d\u54e5\u672c\u54c8\u6839\u5927\u5b66\u9057\u4f20\u5b66\u5bb6\u7684\u5409\u5c14\u5e15\u5361\u683c\u8bf4\uff0c\u4e39\u9ea6\u3002 Garg\u5df2\u7ecf\u4f7f\u7528Pacbio Hifi\u5feb\u901f\u7ec4\u88c5\u4eba\u7c7b\u57fa\u56e0\u7ec4 - \u51cf\u53bb\u4e00\u4e9b\u68d8\u624b\u7684\u533a\u57df\uff0c\u4f8b\u5982\u7126\u5316\u533a\u57df - \u4ee5\u6bcf\u5929\u5c11\u6570\u901f\u5ea6\u3002\u901a\u8fc7\u4f7f\u533b\u751f\u66f4\u5bb9\u6613\u4f7f\u7528\u57fa\u56e0\u7ec4\u6d4b\u5e8f\u66f4\u5bb9\u6613\u8bca\u65ad\u60a3\u8005\uff0c\u8fd9\u79cd\u901f\u5ea6\u4e5f\u6709\u52a9\u4e8e\u4e34\u5e8a\u73af\u5883\u3002 \uff08\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5979\u8bf4\uff0c\u4ece\u8f83\u65e7\u7684\u6d4b\u5e8f\u6280\u672f\u7ec4\u88c5\u79cd\u690d\u4f53\uff0c\u53ea\u8981\u4e09\u4e2a\u661f\u671f\u5373\u53ef\u670d\u7528\u3002\uff09\u771f\u6b63\u5b8c\u5584\u7684\u57fa\u56e0\u7ec4\u6d4b\u5e8f\uff0c\u91cd\u590d\u533a\u57df\u548c\u6240\u6709\uff0c\u90fd\u53d8\u5f97\u66f4\u52a0\u5bb9\u6613\u548c\u66f4\u5feb\u3002\u5f88\u5feb\uff0c\u53e6\u4e00\u4e2a\u5b8c\u6574\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u6839\u672c\u4e0d\u4f1a\u6210\u4e3a\u65b0\u95fb\u3002 ", "note_en": "When the human genome was first  deemed \u201ccomplete\u201d in 2000, the news was met with great international fanfare. The two rival groups vying to finish the genome first\u2014one a large government-led consortium, the other an underdog private company\u2014agreed to declare joint success. They shook hands at the White House. Bill Clinton presided. Tony Blair  beamed in from London. \u201cWe are standing at an extraordinary moment in scientific history,\u201d  one prominent scientist declared when those genomes were published. \u201cIt\u2019s as though we have climbed to the top of the Himalayas.\u201d\n But actually, the human genome was not complete. Neither group had reached the real summit. As even the contemporary coverage acknowledged, that version was more of a rough draft, riddled with long stretches where the DNA sequence was still fuzzy or missing. The private company soon pivoted and ended its human-genome project, though scientists with the public consortium soldiered on. In 2003, with less glitz but still  plenty  of headlines, the human genome was declared complete once again.\n But actually, the human genome was  still not complete. Even the revised draft was missing about 8 percent of the genome. These were the hardest-to-sequence regions, full of repeating letters that were simply impossible to read with the technology at the time.\n  Finally, this May, a separate group of scientists quietly posted a  preprint online describing what can be deemed the first truly complete human genome\u2014a readout of all 3.055 billion letters across 23 human chromosomes. The group, led by relatively young researchers, came together on Slack from around the world to finish the task abandoned 20 years ago. There was no splashy White House announcement this time, no talk of summiting the Himalayas; the paper itself is still under review for official publication in a journal. But the lack of pomp belies what an achievement this is: To complete the human genome, these scientists had to figure out how to map its most mysterious and neglected repeating regions, which may now finally get their scientific due.\n \u201cI consider this a landmark,\u201d says Steven Henikoff, a molecular biologist at Fred Hutchinson Cancer Research Center, who was not involved in the project. Henikoff studies one of those enigmatic, hard-to-sequence regions where previous human-genome projects had given up: centromeres, which are the slightly pinched middles of each chromosome. Chromosomes, of which humans have 23 pairs, each consist of a long, continuous stretch of DNA that can be condensed into a rod shape; the DNA at the centromere is particularly dense.\n On five human chromosomes, the centromere is not in the middle but very close to one end, dividing the chromosome into one long and one very short arm. These short arms are also full of repeats that had never been entirely sequenced until now. Centromeres, short arms, and other types of repeating regions made up most of the 238 million letters the consortium ultimately added or corrected in the human genome.\n  The repeat-rich segments of the human genome do not usually contain genes, which is one reason they\u2019ve long been neglected. Geneticists have focused largely on genes because their function is obvious and simple: A gene encodes a protein. (One big surprise of the earlier drafts of the human genome is how little of our DNA actually encodes proteins\u2014 only 1 percent. The role of the remaining 99 percent is becoming clearer.) Indeed, there have been hints that these repeat-rich regions also play important roles in how genes get expressed and passed on, and anomalies in them have been  linked to cancer and aging. The consortium found 79 new genes hidden among the repeats too. With a map of these repeating regions finally in hand, scientists can probe more carefully their function.\n The effort to finish the genome was \u201centirely grassroots,\u201d says Adam Phillippy, a computational geneticist at the National Institutes of Health who co-leads the  Telomere-to-Telomere (T2T) consortium that completed the genome. (Telomeres are the regions at the ends of chromosomes, so telomere to telomere means \u201cend to end.\u201d) Phillippy and Karen Miga, a geneticist at UC Santa Cruz, decided to create the consortium in 2018, after a call when they realized that they both harbored ambitions of finishing the human genome.\n \u201cI\u2019m in love with repeats,\u201d says Miga, who came to the project as a biologist trying to understand what those repeats do. Phillippy, a computer scientist by training, brought technical chops. Traditional sequencing technologies fragment DNA into small pieces, and computer algorithms have to reassemble them like puzzle pieces. The problem is that the pieces from repeating regions all look nearly the same. Now two new \u201clong-read\u201d sequencing technologies\u2014called PacBio HiFi and Oxford Nanopore\u2014allow scientists to read longer stretches of the genome. These sequencers still can\u2019t handle chunks big enough to cross an entire centromere or a short arm, but at least the algorithms have larger puzzle pieces to assemble.\n The role of centromere sequences, like many other repeating regions, is not yet fully understood, but they are most classically known as the key to cell division. When a cell divides in two, a protein spindle attaches to the centromeres, yanking the chromosomes apart to make sure that each cell gets the right number. When this goes wrong in eggs or sperm, babies can be born with chromosomal anomalies such as  Down syndrome or Turner syndrome. When it goes wrong in other parts of the body, we can end up with blood cells, for example, that have too many or too few chromosomes. This is a hallmark of aging: It\u2019s not unusual for men older than 70  to have lost the Y chromosomes in their blood cells. In  one of two  companion papers uploaded alongside the complete genome, the T2T consortium showed that Oxford Nanopore\u2019s long-read technology can also be used to map where exactly the protein spindle attaches to the centromere. Examining the sequences in those regions might yield new clues to chromosomal anomalies.\n  The repeat-rich short arms of the chromosomes are similarly mysterious. They definitely play some role in the cellular machinery that translates genes into proteins, and knowing their sequences could shed more light on that function. Brian McStay, a biologist at the National University of Ireland at Galway, likens the complete genome to a \u201cparts list\u201d for chromosomes that allows scientists to try taking out the building blocks one by one. \u201cKnowing what this parts list is, we can say, \u2018This is exactly what our chromosome looks like,\u2019\u201d McStay says. \u201c\u2018Let\u2019s delete this and see what the impact on the function of that chromosome is.\u2019\u201d\n As impressive as the technical feat of sequencing a complete human genome is, scientists told me that one genome is only one snapshot. Seeing how these repeating regions change over time from person to person, species to species, will be far more interesting. \u201cWhat happens in cancer? What happens in development? What happens if you compare offspring to parents?\u201d Henikoff says. The consortium proved that these repeating regions are sequenceable with the new long-read technologies. Now they can be applied to more genomes, allowing scientists to compare one with another.\n Indeed, Miga says that the ultimate dream is to make every genome that scientists attempt to sequence complete from end to end, telomere to telomere. But first, the group has a more immediate goal in mind. If you wanted to fault the new genome for not being \u201ccomplete,\u201d you could point to the fact that it comprises only a single set of 23 chromosomes, whereas normal human cells have 23 pairs. To simplify the task, the group used cells from a particular type of tumor that develops from an abnormal fertilized egg and ends up with just 23 single chromosomes. The team will have to use different cells, with 23 pairs of chromosomes, to complete what is known as a \u201cdiploid\u201d genome.\n  \u201cThe next major milestone would be routine diploid genomes,\u201d says Shilpa Garg, a geneticist at the University of Copenhagen, in Denmark. Garg  has used PacBio HiFi to rapidly assemble human genomes\u2014minus some tricky regions such as the centromeres\u2014at a rate of a few per day. That speed could help in clinical settings too, by making it easier for doctors to more regularly diagnose patients using genome sequencing. (In comparison, she says, assembling genomes from older sequencing technology takes as long as three weeks.)  Truly complete genome sequencing, repeating regions and all, is getting easier and faster. Soon, another complete human genome will not be news at all.", "posttime": "2021-06-19 16:56:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u7c7b,genome,\u57fa\u56e0\u7ec4", "title": "\u4eba\u7c7b\u57fa\u56e0\u7ec4\u662f\u6700\u7ec8 - \u5b9e\u73b0 ", "title_en": "The Human Genome Is\u2013Finally \u2013Complete", "transed": 1, "url": "https://www.theatlantic.com/science/archive/2021/06/the-human-genome-is-finally-complete/619172/", "via": "", "real_tags": ["\u4eba\u7c7b", "genome", "\u57fa\u56e0\u7ec4"]}, {"category": "", "categoryclass": "", "imagename": "aab1ed9e29b4b69a213af8be55664cbe.jpeg", "infoid": 1066854, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Facebook\u8868\u793a\uff0c\u82f9\u679c\u516c\u53f8\u7684\u8ba1\u5212\u9690\u79c1\u4fdd\u62a4\u5c06\u4e25\u91cd\u635f\u5bb3\u5176\u4e1a\u52a1\u7684\u4e00\u90e8\u5206\u3002\n \u672a\u7ecfIOS 14\u7684\u540c\u610f\uff0cApple\u8ba1\u5212\u4f7f\u5e94\u7528\u7a0b\u5e8f\u66f4\u96be\u8ddf\u8e2a\u7528\u6237\u6570\u636e\u3002\n Facebook\u8868\u793a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u4e25\u91cd\u635f\u5bb3\u53d7\u4f17\u7f51\u7edc\u5e7f\u544a\u7f51\u7edc\uff0c\u5c06\u6536\u5165\u51cf\u5c1150\uff05\u3002\n \u89c2\u4f17\u7f51\u7edc\u53ea\u662fFacebook\u66f4\u5e7f\u6cdb\u7684\u5e7f\u544a\u4e1a\u52a1\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u8fd9\u4e9b\u53d8\u5316\u4e5f\u4f1a\u635f\u5bb3\u4f7f\u7528\u5b83\u7684\u4f01\u4e1a\u3002\n \u82f9\u679c\u516c\u53f8\u6b63\u5728\u52aa\u529b\u8ddf\u8e2a\u4eba\u4eec\u8de8\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e - \u4ee5\u53caFacebook\u8868\u793a\u5b83\u53ef\u80fd\u5bf9\u5176\u4e1a\u52a1\u7684\u4e00\u90e8\u5206\u4ea7\u751f\u7834\u574f\u6027\u5f71\u54cd\u3002\n  \u661f\u671f\u4e09\uff0c\u7845\u8c37 - \u603b\u90e8\u603b\u90e8\u793e\u4ea4\u7f51\u7edc\u5de8\u5934\u53d1\u5e03\u4e86\u4e00\u4e2a\u535a\u5ba2\u540e\u89e3\u5bc6\u6539\u53d8Apple\u8ba1\u5212\u7684IOS 14\u79fb\u52a8\u64cd\u4f5c\u7cfb\u7edf\u3002 Apple\u6253\u7b97\u9632\u6b62\u5e94\u7528\u7a0b\u5e8f\u8ddf\u8e2a\u7528\u6237\u4f7f\u7528\u5176\u72ec\u7279\u7684\u8bbe\u5907\u6807\u8bc6\u7b26\u6216IDFA\uff0c\u800c\u65e0\u9700\u5176\u663e\u5f0f\u8bb8\u53ef -  Facebook\u7684\u53d7\u4f17\u7f51\u7edc\u7528\u4e8e\u4e2a\u6027\u5316\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u7684\u5e7f\u544a\u3002\n Facebook\u8868\u793a\uff0c\u8fd9\u6837\u505a\u4f1a\u5bf9\u89c2\u4f17\u7f51\u7edc\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\uff0c\u56e0\u6b64\u7531\u4e8e\u65e0\u6cd5\u63d0\u4f9b\u66f4\u6709\u4ef7\u503c\u7684\u76ee\u6807\u5e7f\u544a\uff0c\u56e0\u6b64\u5c06\u5176\u6536\u5165\u51cf\u5c11\u523050\uff05\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5b83\u751a\u81f3\u53ef\u80fd\u8feb\u4f7fFacebook\u505c\u6b62\u4e3aiOS\u5f00\u53d1\u89c2\u4f17\u7f51\u7edc\u3002 \n\u201c\u8fd9\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u53d8\u5316\uff0c\u4f46\u9057\u61be\u7684\u662f\uff0cApple\u5bf9iOS 14\u7684\u66f4\u65b0\u8feb\u4f7f\u8fd9\u4e00\u51b3\u5b9a\u3002\u6211\u4eec\u77e5\u9053\u8fd9\u53ef\u80fd\u4f1a\u4e25\u91cd\u5f71\u54cd\u51fa\u7248\u5546\u901a\u8fc7IOS 14\u4e0a\u7684\u53d7\u4f17\u7f51\u7edc\u8d27\u5e01\u7684\u80fd\u529b\uff0c\u5c3d\u7ba1\u6211\u4eec\u7684\u6700\u4f73\u52aa\u529b\uff0c\u53ef\u80fd\u4f1a\u4f7f\u89c2\u4f17\u7f51\u7edc\u5728iOS 14\u4e0a\u5982\u6b64\u65e0\u6548\uff0c\u56e0\u4e3a\u5728\u672a\u6765\u7684iOS 14\u4e0a\u53ef\u80fd\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u5728iOS 14\u4e0a\u63d0\u4f9b\u5b83\uff0c \u201c\u535a\u5ba2\u5e16\u8bf4\u3002\n \u89c2\u4f17\u7f51\u7edc\u53ea\u6709\u4e00\u7247Facebook\u7684\u6536\u5165\uff08\u8fd9\u6beb\u4e0d\u6e05\u695a\u5730\u5c1a\u4e0d\u6e05\u695a\uff09\uff0c\u5176\u81ea\u5df1\u7684\u5e94\u7528\u7a0b\u5e8f\u5185\u7684\u5e7f\u544a\u6838\u5fc3\u4e1a\u52a1\u5c06\u4e0d\u53d7\u5f71\u54cd\u3002\u4f46\u4efb\u4f55\u7f29\u51cf\u6570\u636e\u6536\u96c6\u7684\u4f01\u56fe\u90fd\u53ef\u80fd\u5bf9Facebook\u6784\u6210\u5a01\u80c1\uff0c\u800c\u8be5\u516c\u53f8\u6700\u8fd1\u5bf9\u76d1\u7ba1\u673a\u6784\u548c\u5e73\u53f0\u6539\u53d8\u59ff\u52bf\u7684\u98ce\u9669\u7684\u58f0\u97f3\u3002\n \u5728\u6700\u8fd1\u4e0e\u5206\u6790\u5e08\u7684\u76c8\u5229\u547c\u5401\u671f\u95f4\uff0c\u516c\u53f8\u9ad8\u7ba1\u8ba4\u4e3aFacebook\u662f\u5927\u6d41\u884c\u671f\u95f4\u7684\u5c0f\u4f01\u4e1a\u7684\u201c\u751f\u547d\u7ebf\u201d\uff0c\u963b\u6b62\u4ed6\u4eec\u6709\u6548\u5730\u7784\u51c6\u5e7f\u544a\u7684\u4eba\u53ef\u80fd\u4f1a\u6709\u5371\u9669\u7684\u201c\u5b8f\u89c2\u7ecf\u6d4e\u6548\u5e94\u201d\u3002\n \u8fd9\u662f\u4e00\u4e2a\u8bba\u70b9\uff0cFacebook\u5728\u661f\u671f\u4e09\u535a\u5ba2\u6587\u7ae0\u4e2d\u91cd\u7533\uff1a\u201c\u6211\u4eec\u4e86\u89e3iOS 14\u5c06\u5728\u5df2\u7ecf\u56f0\u96be\u7684\u65f6\u95f4\u4f24\u5bb3\u6211\u4eec\u7684\u8bb8\u591a\u5f00\u53d1\u5546\u548c\u51fa\u7248\u5546\u3002\u6211\u4eec\u5728\u5168\u7403\u8303\u56f4\u5185\u4f7f\u7528\u4e86\u8d85\u8fc719,000\u540d\u5f00\u53d1\u4eba\u5458\u548c\u51fa\u7248\u5546\uff0c\u5e76\u57282019\u5e74\uff0c\u6211\u4eec\u652f\u4ed8\u4e86\u6570\u5341\u4ebf\u7f8e\u5143\u3002\u5176\u4e2d\u8bb8\u591a\u662f\u5c0f\u4f01\u4e1a\uff0c\u4f9d\u8d56\u5e7f\u544a\u652f\u6301\u4ed6\u4eec\u7684\u751f\u8ba1\u3002\u201c\n \u4f60\u5728Facebook\u5de5\u4f5c\u5417\uff1f\u901a\u8fc7\u52a0\u5bc6\u6d88\u606f\u5e94\u7528\u7a0b\u5e8f\uff08+1 650-636-6268\uff09\uff0c\u52a0\u5bc6\u7535\u5b50\u90ae\u4ef6\uff08[\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4]\uff09\uff0c\u6807\u51c6\u7535\u5b50\u90ae\u4ef6\uff08[\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4]\uff09\uff0c\u7535\u62a5/ wickr / wechat\uff08Robaeprice\uff09\u6216Twitter dm\uff08@robaeprice\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u8ba9\u6765\u6e90\u533f\u540d\u3002\u4f7f\u7528\u975e\u5de5\u4f5c\u8bbe\u5907\u4f38\u51fa\u3002\u8bf7\u4ec5\u7531\u6807\u51c6\u7535\u5b50\u90ae\u4ef6\u6295\u7403\u3002 ", "note_en": "Facebook is saying that Apple\u2019s planned privacy protections will severely damage part of its business.\n Apple plans to make it harder for apps to track users\u2019 data without their consent in iOS 14.\n Facebook said this could severely hurt its Audience Network ad network, reducing revenue by up to 50%.\n Audience Network is just one part of Facebook\u2019s broader ad business, and the company said the changes would also hurt businesses that use it.\n Apple is making it harder for companies to track people\u2019s data across apps \u2013 and Facebook says it could have devastating effects on part of its business.\n  On Wednesday, the Silicon Valley-headquartered social-networking giant   published a blog post decrying changes Apple has planned for its   iOS 14 mobile operating system. Apple intends to prevent apps from tracking users using their unique device identifier, or IDFA, without their explicit permission \u2013 something that Facebook\u2019s Audience Network uses to personalise advertising in third-party apps.\n Facebook said that doing so would have a significant impact on Audience Network, cutting its revenue on iOS by up to 50% because of an inability to deliver more valuable, targeted advertising. It may even force Facebook to stop developing Audience Network for iOS altogether, the company said.\n \u201cThis is not a change we want to make, but unfortunately Apple\u2019s updates to iOS 14 have forced this decision. We know this may severely impact publishers\u2019 ability to monetise through Audience Network on iOS 14, and, despite our best efforts, may render Audience Network so ineffective on iOS 14 that it may not make sense to offer it on iOS 14 in the future,\u201d the blog post said.\n Audience Network is only one piece of Facebook\u2019s revenue (it\u2019s unclear precisely how much), and its core business of advertising inside its own apps will be unaffected. But any attempt to curtail data collection can pose a threat to Facebook, and the company has recently been vocal about the risks that regulators and platform changes pose.\n During a recent earnings call with analysts,   company executives argued that Facebook was a \u201clifeline\u201d for small businesses during the pandemic and that preventing them from effectively targeting people with ads could have dangerous \u201cmacro-economic effects.\u201d\n It\u2019s an argument that Facebook reiterated in its Wednesday blog post: \u201cWe understand that iOS 14 will hurt many of our developers and publishers at an already difficult time for businesses. We work with more than 19,000 developers and publishers from around the globe and in 2019 we paid out billions of dollars. Many of these are small businesses that depend on ads to support their livelihood.\u201d\n Do you work at Facebook? Contact Business Insider reporter Rob Price via encrypted messaging app Signal (+1 650-636-6268), encrypted email ( [email\u00a0protected]), standard email ( [email\u00a0protected]), Telegram/Wickr/WeChat (robaeprice), or Twitter DM ( @robaeprice). We can keep sources anonymous. Use a non-work device to reach out. PR pitches by standard email only, please.", "posttime": "2021-06-19 16:20:28", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "iphone,\u64cd\u4f5c\u7cfb\u7edf,apple,facebook", "title": "Apple\u7684\u65b0\u6b3eiPhone\u64cd\u4f5c\u7cfb\u7edf\u6b63\u5728\u4f7fFacebook\u66f4\u96be\u8ddf\u8e2a\u4eba\u5458\uff0c\u5e76\u4e14Facebook\u8b66\u544a\u5b83\u5c06\u906d\u53d7\u5176\u4e1a\u52a1\u7684\u4e00\u90e8\u5206 ", "title_en": "Apple's new iPhone operating system is making it harder for Facebook to track people, and Facebook warns it will decimate part of its business", "transed": 1, "url": "https://www.businessinsider.com.au/facebook-apple-ios-14-damage-audience-network-ad-business-2020-8", "via": "", "real_tags": ["iphone", "\u64cd\u4f5c\u7cfb\u7edf", "apple", "facebook"]}, {"category": "", "categoryclass": "", "imagename": "94882934980c1ea31c1803d9f8acf65a.png", "infoid": 1066853, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9a6c\u8428\u8bf8\u585e\u5b98\u65b9Covid-19\u81ea\u52a8\u66dd\u5149\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f ", "note_en": "Massachusetts\u2019 official COVID-19 Automated Exposure Notification app", "posttime": "2021-06-19 16:13:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "google,\u8c37\u6b4c,\u7a0b\u5e8f,\u5b89\u88c5,massachusetts", "title": "\u8c37\u6b4c\u548c\u9a6c\u8428\u8bf8\u585e\u5dde\u672a\u7ecf\u540c\u610f\u6216\u901a\u77e5\u5b89\u88c5\u4e86\u5e94\u7528\u7a0b\u5e8f ", "title_en": "Google and Massachusetts have installed an app without consent or notification", "transed": 1, "url": "https://play.google.com/store/apps/details?id=gov.ma.covid19.exposurenotifications.v3&showAllReviews=true", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "\u7a0b\u5e8f", "\u5b89\u88c5"]}, {"category": "", "categoryclass": "", "imagename": "21baa3c62f4fff153b9c585393afba73.png", "infoid": 1066852, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6240\u6709RGB\u7684\u76ee\u7684\u5f88\u7b80\u5355\uff1a\u4e3a\u6bcf\u4e2aRGB\u989c\u8272\u521b\u5efa\u4e00\u4e2a\u50cf\u7d20\u7684\u56fe\u50cf\uff0816,777,216\uff09; \u4e0d\u662f\u4e00\u79cd\u989c\u8272\u4e22\u5931\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u989c\u8272\u4e24\u6b21\u3002 ", "note_en": "The objective of all RGB is simple: To create images with one pixel for every  RGB color ( 16,777,216); not one color missing, and not one color twice.", "posttime": "2021-06-19 16:13:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "allrgb,\u989c\u8272", "title": "AllRGB. ", "title_en": "AllRGB", "transed": 1, "url": "https://allrgb.com/", "via": "", "real_tags": ["allrgb", "\u989c\u8272"]}, {"category": "", "categoryclass": "", "imagename": "a81b20264a51be670f2804fd81d39f8d.jpeg", "infoid": 1066851, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u8054\u90a6\u6570\u636e\u7684\u8bf4\u6cd5\uff0c\u4eca\u5e74\u8fc4\u4eca\u4e3a\u6b62\uff0c\u4eca\u5e74\u8ddd\u79bb\u4eca\u5e74\u7684\u65b0\u91ce\u706b\u6570\u91cf\u8fbe\u5230\u4e86\u5341\u5e74\u9ad8\u4f4d\u3002\u4fc3\u4f7f\u8b66\u544a\u957f\u671f\uff0c\u6f5c\u5728\u5371\u9669\u7684\u706b\u707e\u3002\n  \u73b0\u5728\u6700\u53d7\u5173\u6ce8\u7684\u9886\u57df\u4e4b\u4e00\u662f\u72b9\u4ed6\u5dde\uff0c\u5185\u534e\u8fbe\u5dde\u548c\u4fc4\u52d2\u5188\u5dde\u4e1c\u90e8\u7684\u9ad8\u6c99\u6f20\u4f1f\u5927\u7684\u76c6\u5730\u5730\u533a\u3002\n  \uff06\uff0334;\u5f53\u4f60\u7ad9\u7acb\u6b7b\u8349\u65f6\uff0c\u5f53\u6211\u4eec\u6709\u9ad8\u70ed\u91cf\u65f6\uff0c\u5f53\u6211\u4eec\u6709\u9ad8\u6e29\u65f6\uff0c\u70b9\u706b\u6f5c\u529b\u6025\u5267\u589e\u52a0\uff0c\uff06\uff0334; Paul Peterson\u8868\u793a\uff0c\u571f\u5730\u7ba1\u7406\u5c40\u7684\u706b\u707e\u7ba1\u7406\u5b98\u3002\n  \u81ea1\u6708\u4efd\u4ee5\u6765\uff0c\u8d85\u8fc728,000\u82f1\u4ea9\u7684\u91ce\u706b\u70e7\u6bc1\u4e86\u8fd9\u4e00\u65e5\u671f\u7684\u6700\u591a\u706b\u707e\u3002\u76ee\u524d\u5728\u897f\u65b9\u670933\u4e2a\u6d3b\u8dc3\u7684\u5927\u706b\u3002\u5ce1\u8c37\u548c\u51e4\u51f0\u57ce\u4ee5\u4e1c\u7684\u5ce1\u8c37\u548c\u5c71\u8c37\u4e2d\u6700\u5927\u7684\u6700\u5927\u901f\u5ea6\u70e7\u7126\u4e86\u8d85\u8fc7175,000\u82f1\u4ea9\u3002\u5b83\u542b\u670973\uff05\u3002\n    \u672c\u5468\u897f\u65b9\u7684\u5f55\u5236\u70ed\u6d6a\u5c1a\u4e0d\u8ba8\u8bba\uff06\uff0339; t\u5e2e\u52a9\u7f13\u89e3\u706b\u707e\u5371\u9669\u3002\u6e29\u5ea6\u98d9\u5347\u5230\u76d0\u6e56\u57ce\uff0c\u62c9\u65af\u7ef4\u52a0\u65af\u548c\u8499\u5927\u62ff\u5dde\u7684\u4e09\u4f4d\u6570\u4e2d\uff0c\u65b0\u91ce\u706b\u7684\u65e5\u672c\u666e\u901a\u7a81\u51fa\u4e86\u51e0\u5468\u3002\n    \u5b83\u4eec\u5305\u62ec24,000\u82f1\u4ea9\u7684\u5927\u706b\u71c3\u70e7\u7684\u9ec4\u77f3\u56fd\u5bb6\u516c\u56ed\uff0c\u9760\u8fd1\u7ea2\u5c4b\u9876\u9547\u7684\u9ec4\u77f3\u56fd\u5bb6\u516c\u56ed\u3002\u5b83\u5230\u76ee\u524d\u4e3a\u6b62\u9500\u6bc1\u4e8618\u4e2a\u7ed3\u6784\uff0c\u542b\u67090\uff05\u3002\u5728\u4e00\u5e74\u4e2d\u7684\u8fd9\u4e2a\u65f6\u5019\uff0c\u6728\u6750\u548c\u8349\u5730\u51fa\u73b0\u5f02\u5e38\u5e72\u71e5\u3002\n    \uff06\uff0334;\u5b83\u4e0d\u662f\u5f88\u5178\u578b\u7684\uff0c\uff06\uff0334; Pilly Chapman\u8868\u793a\uff0cCuster-Gallatin\u56fd\u5bb6\u68ee\u6797\u7684\u516c\u5171\u4fe1\u606f\u5b98\u3002 \uff06\uff0334;\u6211\u60f3\u5230\u4e86\u5f88\u591a\uff06\uff0339;\u70ed\u91cf\u3002\u6211\u4eec\u771f\u7684\u6ca1\u6709\u4efb\u4f55\u6625\u96e8\u3002\uff06\uff0334; \n\u5982\u679c\u5f02\u5e38\u6e29\u6696\u7684\u6e29\u5ea6\u548c\u5e72\u71e5\u7684\u6761\u4ef6\u6301\u7eed\u5230\u590f\u5929\uff0c\u67e5\u666e\u66fc\u9884\u6d4b\u4e25\u91cd\u7684\u91ce\u706b\u5b63\u8282\u3002  \uff06\uff0334;\u4e8b\u60c5\u53ef\u80fd\u4f1a\u6539\u53d8 - \u6211\u5e0c\u671b\u4ed6\u4eec\u505a\u5230 - \u4f46\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d8b\u52bf\uff0c\uff0334; \u4ed6\u8bf4\u3002  \u9ad8\u98ce\u5728\u8499\u5927\u62ff\u5dde\uff06\uff0339;\u9996\u90fd\uff0c\u6d77\u4f26\u5a1c\u9644\u8fd1\u71c3\u70e7\u4e86\u53e6\u4e00\u4e2a\u5927\u706b\u71c3\u70e7\uff0c\u5176\u4e2d\u4e00\u4e2a\u56fd\u5bb6\u81ea\u7136\u8d44\u6e90\u548c\u4fdd\u62a4\u76f4\u5347\u673a\u5728\u6218\u6597\u4e2d\u5760\u6bc1\u7684\u71c3\u70e7\u7740\u3002 \u6240\u6709\u4e94\u540d\u673a\u7ec4\u4eba\u5458\u90fd\u60a3\u6709\u8f7b\u5fae\u7684\u4f24\u5bb3\u3002  \u8fd9\u4e2a\u6545\u4e8b\u7684\u65e9\u671f\u7248\u672c\u5728\u4e00\u5f20\u7167\u7247\u6807\u9898\u4e2d\u8868\u793a\uff0c\u7f57\u4f2f\u900a\u7ed8\u5236\u706b\u707e\u662fWyo\u7684\u6c34\u725b\u5357\u90e8\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u662f\u8499\u7279\u7ea2\u8272\u5c0f\u5c4b\u7684\u5357\u90e8\u3002 ", "note_en": "The number of new wildfires in the U.S. so far this year is at  a ten-year high, according to federal data, prompting warnings of a long, potentially dangerous summer of fire.\n  One of the biggest areas of concern right now is the high desert Great Basin region in Utah, Nevada and eastern Oregon.\n  &#34;When you have standing dead grass that&#39;s already out there and when we have high heat, that ignition potential raises dramatically,&#34; said Paul Peterson, a fire management officer for the Bureau of Land Management.\n  Since January, more than a million acres have burned from more than 28,000 wildfires \u2013 the highest number of fires for this date since 2011. There are currently 33 active large fires across the West. The biggest has scorched more than 175,000 acres in the canyons and valleys east of Phoenix. It is 73% contained.\n    A record-breaking heat wave across the West this week isn&#39;t helping ease fire danger. Temperatures have soared into the triple digits in Salt Lake City, Las Vegas and Montana, where new wildfires are sparking weeks earlier than normal.\n    They include a 24,000-acre fire burning northeast of Yellowstone National Park near the town of Red Lodge, Mont. It has destroyed 18 structures so far and is 0% contained. The timber and grasses there are unusually dry for this time of year.\n    &#34;It&#39;s not very typical,&#34; said Billy Chapman, public information officer at Custer-Gallatin National Forest. &#34;I think a lot of it&#39;s the heat. We have not had any spring rain really.&#34;\n  Chapman predicts a severe wildfire season if the abnormally warm temperatures and dry conditions continue into the summer.\n  &#34;Things could change \u2013 and I hope they do \u2013 but this is not a good trend,&#34; he said.\n  High winds have fueled another large fire burning near Montana&#39;s capital, Helena, where a state Department of Natural Resources and Conservation helicopter crash-landed while battling the blaze. All five crew members survived with minor injuries.\n An earlier version of this story said in a photo caption that the Robertson Draw Fire was south of Buffalo, Wyo. In fact, it is south of Red Lodge, Mont.", "posttime": "2021-06-19 15:32:32", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u91ce\u706b,high,\u706b\u707e", "title": "\u65b0\u7684\u91ce\u706b\u5728\u708e\u70ed\uff0c\u5e72\u71e5\u7684\u897f\u65b9\u91ce\u751f\u4e2d\u8fbe\u5230\u4e8610\u5e74\u7684\u9ad8\u4f4d ", "title_en": "New Wildfires Are At A 10-Year High In The Hot, Dry Western US", "transed": 1, "url": "https://www.npr.org/2021/06/17/1007784176/new-wildfires-10-year-high-western-u-s", "via": "", "real_tags": ["\u91ce\u706b", "high", "\u706b\u707e"]}, {"category": "", "categoryclass": "", "imagename": "f1dbc60d581b005804f9867d1d9b8758.jpeg", "infoid": 1066850, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u4e2a\u6708\u7684\u6fb3\u5927\u5229\u4e9a\u9910\u5385Crux\u53d1\u5e03\u7684\u89c6\u9891\u663e\u793a\u4e86\u4e00\u4e9b\u5f71\u54cd\u4ed6\u4eec\u5468\u65e5\u65e9\u5348\u9910\u7684\u4efb\u4f55\u5f71\u54cd\u8005\u6240\u671f\u671b\u7684\u4e1c\u897f\uff1a\u4e00\u628a\u5200\u6162\u6162\u5730\u5728\u8377\u5170\u90a3\u5c9b\u62cd\u4e86\u4e00\u4e2a\u9e21\u86cb\uff0c\u56e0\u4e3a\u4efb\u4f55\u597d\u7684\u9e21\u86cb\u662f - \u76f4\u5230\u91d1\u9ec4\u86cb\u7cd5\u6e17\u51fa\u3002\u4f46\u5916\u89c2\u6b63\u5728\u6b3a\u9a97\uff0c\u5e76\u4e14\u7531\u4e8e\u8986\u76d6\u5230\u526a\u8f91\u4e0a\u7684\u6587\u672c\u660e\u786e\u8868\u793a\uff1a\u662f\u7684\uff0c\u5b83\u662f\u7d20\u98df\u4e3b\u4e49\u8005\u3002\u662f\u7684\uff0c\u5b83\u662f\u6d41\u884c\u7684\u3002\n  \u5bf9\u4e8e\u7d20\u98df\u4e3b\u4e49\u8005\uff0c\u4e73\u9178\u7d20\u98df\u8005\u548c\u5176\u4ed6\u4efb\u4f55\u524a\u51cf\u5375\u6d88\u8017\u7684\u4eba\uff0c\u957f\u671f\u4ee5\u6765\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u53d6\u4ee3\u9e21\u86cb\u7684\u529f\u80fd\u3002\u4e9a\u9ebb\u7c7d\uff0cChia\u79cd\u5b50\uff0c\u9999\u8549\uff0c\u82f9\u679c\u9171\u548c\u6dc0\u7c89\u6df7\u5408\u7269\uff0c\u5982eNer-g\u86cb\u6362\u5242\uff0c\u9e21\u86cb\u7684\u7ed1\u5b9a\u4efb\u52a1\u5f88\u597d\u5730\u8fdb\u884c\u4e86\u5473\u9053\uff0c\u53ef\u4ee5\u5728\u5473\u9053\u4e2d\u627e\u5230\u3002\u8c46\u8150\u53ef\u4ee5\u52a0\u6270\uff0c\u9e70\u5634\u8c46\u7c89\u53ef\u4ee5\u716e\u6210\u8584\uff0c\u714e\u86cb\u578b\u8584\u677f\u3002\u5f53\u7d20\u98df\u4e3b\u4e49\u770b\u5230\u4e00\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u9f0e\u76db\u65f6\u671f\u65f6\uff0c\u5176\u4ed6\u5546\u4e1a\u86cb\u6362\u5242\u9009\u62e9\u6b63\u5728\u4e0a\u5347\u3002\n  \u6cbf\u7740\u60a8\u7684\u5fc3\u7075\uff0c\u8fd9\u4f4d\u57fa\u4e8e\u5de5\u5382\u7684\u7a7a\u95f4\u768450\u5c81\u7684\u9886\u5bfc\u8005\uff0c2015\u5e74\u63a8\u51fa\u4e86\u4e00\u79cd\u4e89\u5435\u7684\u66ff\u4ee3\u54c1\u3002VEGG\u9500\u552e\u86cb\u86cb\u767d\u66ff\u4ee3\u54c1\uff0c\u5305\u62ec\u7c89\u672b\uff0c\u610f\u5473\u7740\u6a21\u62df\u6cd5\u5f0f\u5410\u53f8\u7b49\u83dc\u80b4\u4e2d\u7684\u86cb\u9ec4\u7684\u5473\u9053\u548c\u8d28\u5730\u3002 Juggernaut\u53ea\u662f\u9e21\u86cb\uff0c\u5176\u7eff\u8c46\u7684\u6db2\u4f53\u4e89\u5148\u6050\u540e\u7684\u9e21\u86cb\uff0c\u57282018\u5e74\u4e89\u62a2\u7f8e\u56fd\u3002\u5230\u4eca\u5e743\u6708\uff0c\u5f53\u521a\u6536\u5230\u5361\u5854\u5c14\u6295\u8d44\u673a\u5173\u7684\u989d\u5916\u6295\u8d442\u4ebf\u7f8e\u5143\uff0c\u516c\u53f8\u5356\u4e86\u76f8\u5f53\u4e8e1\u4ebf\u9e21\u86cb\u3002\u534e\u76db\u987f\u90ae\u653f\u62a5\u9053\uff0c2019\u5e74\uff0c2019\u5e74\uff0c\u7f8e\u56fd\u4eba\u5728\u6bcf\u5e74\u5403\u5927\u7ea6279\u4e2a\u9e21\u86cb - \u6700\u9ad850\u5e74\u7684\u9e21\u86cb\u6d88\u8017\u6700\u9ad8\u3002\n  \u4f46\u662f\uff0c\u5546\u4e1a\u7d20\u98df\u4ea7\u54c1\u5c1a\u672a\u6355\u83b7\u7684\u7279\u6b8a\u5feb\u4e50\uff1a\u9e21\u86cb\u86cb\u9ec4\u5728\u5176\u6240\u6709\u7c98\u6027\uff0c\u7403\u72b6\uff0c\u98df\u7269\u8272\u60c5 - \u8363\u8000\u3002\u6bd5\u7adf\uff0c\u5c24\u5229\uff0c\u4e0e\u201c\u628a\u9e21\u86cb\u653e\u5728\u4e0a\u9762\u201d\u7684\u653e\u7eb5Instagram\u5438\u5f15\u529b\u6709\u5173\uff0c\u662f\u5426\u662f\u201c\u5b83\u201d\u662f\u62ab\u8428\uff0c\u6c49\u5821\u8fd8\u662f\u65e9\u9910\u54c8\u5e0c\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u60f3\u5b8c\u5168\u653e\u5f03\u9e21\u86cb\u6982\u5ff5\u7684\u4eba\uff0c\u7d20\u98df\u4e3b\u4e49\u8005\u9e21\u86cb\u7528\u67d4\u6ed1\u7684\u767d\u4eba\u548c\u7403\u5f62\u6db2\u4f53\u86cb\u9ec4\u662f\u96be\u4ee5\u6349\u6478\u7684\u4f46\u4e0d\u662f\u9065\u4e0d\u53ef\u53ca\u7684\u3002\u8fd9\u5c31\u662f\u5bb6\u5ead\u548c\u9910\u5385\u53a8\u623f\u7684\u53a8\u5e08\u6709\u591a\u6b3a\u9a97\u79d1\u5b66\uff0c\u4f7f\u57fa\u4e8e\u5de5\u5382\u7684Yolk POP\u6210\u4e3a\u53ef\u80fd\u3002\n  \u57282018\u5e74\u5728\u963f\u5fb7\u83b1\u5fb7\u5f00\u8bbe\u7684\u75c7\u72b6\uff0c\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u7684\u7d20\u98df\u86cb\u3002\u9e21\u86cb\u672c\u5c3c\u8fea\u514b\u7279\u542b\u6709\u4ed6\u4eec\u7684\u5077\u730e\uff0c\u5b83\u4e3a\u86cb\u9ec4\u7684\u767d\u4eba\u548c\u897f\u7ea2\u67ff\u4f7f\u7528\u8170\u57fa\u3002\u65e9\u9910\u4e09\u660e\u6cbb\u91c7\u7528\u4e86\u714e\u86cb\u7684\u4f20\u771f\uff0c\u914d\u6709\u95ea\u4eae\uff0c\u5927\u8c46\u7684\u767d\u4eba\uff0c\u542b\u6709\u82b1\u8fb9\u8fb9\u7f18\u548c\u86cb\u9ec4\u7684\u76f8\u540c\u6ce1\u6cab\u3002\u867d\u7136\u4f60\u53ef\u4ee5\u544a\u8bc9\u86cb\u9ec4\u7684\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\u662f\u897f\u7ea2\u67ff\u548c\u5927\u8c46\uff0c\u4f46\u662f\uff0c\u4e24\u4e2a\u7248\u672c\u90fd\u662f\u5728Crux Owner George Thomson\u8bf4\u7684\u90a3\u79cd\u7248\u672c\u4e2d\u7684\u767d\u4eba\u7684\u8d28\u5730\u548c\u5473\u9053\u3002 \u201c\u5ba2\u6237\u4e0d\u65ad\u8bc4\u8bba\u6211\u4eec\u6240\u505a\u7684\u4e8b\u60c5\u88ab\u8ba4\u4e3a\u662f\u201d\u5deb\u672f\u201c\u3002\n  \u5f00\u53d1Crux\u7684\u7d20\u98df\u86cb\u201c\u7edd\u5bf9\u6d88\u8017\u201d\u6c64\u59c6\u68ee\uff0c\u57f9\u517b\u76bf\u5927\u7ea6\u4e94\u5e74\u6765\u3002 \u201c\u6211\u770b\u5230\u4eba\u4eec\u5728\u7f51\u4e0a\u5236\u4f5c\u7d20\u98df\u4e3b\u4e49\u8005'\u714e\u86cb'\uff0c\u6211\u60f3\uff0c\u6211\u53ef\u4ee5\u505a\u5f97\u66f4\u597d\uff0c\u201d\u4ed6\u8bf4\u3002 YouTube\u5355\u72ec\u63d0\u4f9b\u8bb8\u591a\u65b9\u6cd5\u3002 2018\u5e74\uff0cEllie Blowen\u7684\u535a\u5ba2elsa\u7684\u5065\u5eb7\u751f\u6d3b\u5171\u4eab\u4e86\u4e00\u4e2a\u975e\u5e38\u6a21\u4eff\u7684\u89c6\u9891\uff0c\u5176\u4e2d\u5979\u5c06\u5357\u74dc\u878d\u5165\u9ec4\u8272\u6df7\u5408\u7269\u4e2d\uff0c\u7136\u540e\u5c06\u5176Dolpoped\u5b83\u9001\u5230\u7531\u9762\u7c89\u548c\u6930\u5976\u5236\u6210\u7684\u5706\u5708\u4e0a\u3002 Emmymade\u7684emmy cho\u5728\u4f7f\u7528\u9e21\u6cb9\u679c\u4e0a\u7684\u98df\u8c31\u4e0a\u6084\u6084\u5730\uff0cCanistel\u7684\u53e3\u8bed\u540d\u5b57;\u5f53\u5b83\u6210\u719f\u65f6\uff0c\u4e0e\u4e2d\u7f8e\u6d32\u6700\u539f\u4ea7\u6811\u7684\u6811\u7684\u6c34\u679c\u76f8\u6bd4\uff0c\u4e0e\u716e\u6cb8\u7684\u86cb\u9ec4\u7684\u8d28\u5730\u76f8\u6bd4\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u98df\u8c31\u5c1a\u672a\u7f29\u77ed\uff0c\u662f\u201c\u86cb\u9ec4\u201d\u5e76\u6ca1\u6709\u541e\u566c\uff0c\u800c\u662f\u4e00\u52fa\u9171\u6cb9\u5728\u6709\u6548\u7684\u767d\u8272\u714e\u997c\u3002\n   \u672a\u52a0\u5de5\u7684\u9e21\u86cb\u86cb\u9ec4\u662f\u86cb\u767d\u8d28\uff0c\u8102\u80aa\uff0c\u6c34\u548c\u77ff\u7269\u8d28\u7684\u6db2\u4f53\u6df7\u5408\u7269\uff0c\u5176\u5305\u88f9\u5728\u900f\u660e\u819c\u4e2d\uff0c\u4f7f\u86cb\u9ec4\u4e0e\u6784\u6210\u86cb\u6e05\u7684\u86cb\u767d\u5206\u5f00\u3002\u4e3a\u4e86\u4f7f\u7d20\u98df\u86cb\u86cb\u9ec4\u8868\u73b0\u5f97\u7c7b\u4f3c\uff0c\u7136\u540e\u590d\u5236\u819c\u81f3\u5173\u91cd\u8981\u3002 \n\u572820\u4e16\u7eaa40\u5e74\u4ee3\u83b7\u5f97\u4e13\u5229\u7684\u98df\u54c1\u79d1\u5b66\u5bb6William Peschardt\uff0c\u7403\u5f62\u5316\u662f\u4e00\u79cd\u6355\u83b7\u8584\u51dd\u80f6\u819c\u4e2d\u6db2\u4f53\u7684\u6280\u672f\u3002 Peschardt\u5efa\u8bae\u5b83\u7528\u4e8e\u201c\u4eba\u5de5\u98df\u7528\u6a31\u6843\uff0c\u8f6f\u7247\u7b49\u201d\u3002\u8be5\u8fc7\u7a0b\u901a\u8fc7\u6df7\u5408\u542b\u6709\u85fb\u9178\u94a0\u7684\u53ef\u98df\u7528\u6db2\u4f53\uff0c\u7136\u540e\u5c06\u5176\u6ef4\u5165\u76d0\u6d74\u4e2d\u3002 \uff08\u8fd8\u6709\u9006\u5411\u7403\u5316\uff0c\u6d89\u53ca\u5c06\u542b\u9499\u7269\u8d28\u6ef4\u5165\u85fb\u9178\u76d0\u6d74\u4e2d\u3002\uff09\u5f53\u85fb\u9178\u94a0\u8fbe\u5230\u9499\u79bb\u5b50\u65f6\uff0c\u79bb\u5b50\u7c98\u5408\u5728\u4e00\u8d77\uff0c\u6db2\u4f53\u6d78\u51fa\u51dd\u80f6\u76ae\u3002\n  Flacherification\u57282003\u5e74\u771f\u6b63\u8fdb\u5165\u516c\u4f17\u610f\u8bc6\uff0c\u5f53\u65f6\u897f\u73ed\u7259\u9910\u5385El Bulli  - \u8d62\u5f97\u4e86\u4e0a\u4e00\u5e74\u7684\u6700\u4f73\u9910\u5385\uff0c\u6bcf\u5e74\u4ece2006\u5e74\u52302009\u5e74\u5f00\u59cb\u4f7f\u7528\u5b83\u5e76\u83b7\u5f97\u6a44\u6984\u679c\u6c41\u5236\u6210\u7684\u201c\u6a44\u6984\u201d\u8fd9\u6837\u7684\u83dc\u80b4\u8d5e\u8a89\u3002 El Bulli\u548cChef FerranAdri\u00e0\u662f\u70f9\u996a\u8fd0\u52a8\u4e2d\u7684\u9886\u5bfc\u8005\uff0c\u6709\u65f6\u88ab\u79f0\u4e3a\u201c\u5206\u5b50\u7f8e\u98df\u201d\uff0c\u5c3d\u7ba1\u8bb8\u591a\u4e0e\u4e4b\u76f8\u5173\u7684\u53a8\u5e08\u4f7f\u7528\u201c\u73b0\u4ee3\u5316\u7684\u70f9\u996a\u201d\u3002\n  \u5f52\u529f\u4e8e\u7269\u7406\u5b66\u5bb6Nicholas Kurti\u548cChemistHerv\u00e9\uff0c\u5176\u7ea6\u4f1a\u4e8e1988\u5e74\uff0c\u5206\u5b50\u7f8e\u98df\u662f\u4e00\u4e2a\u7814\u7a76\u9886\u57df\uff0c\u63a2\u8ba8\u4e86\u5bb6\u5ead\u548c\u9910\u5385\u53a8\u623f\u7684\u70f9\u996a\u80cc\u540e\u7684\u79d1\u5b66\u3002 \uff08\u201c\u98df\u54c1\u79d1\u5b66\u201d\u4e0e\u6bd4\u8f83\uff0c\u4e00\u822c\u662f\u6307\u5de5\u4e1a\u7cae\u98df\u751f\u4ea7\uff0c\u5b89\u5168\u548c\u8425\u517b\u7684\u7814\u7a76\u3002\uff09\u8be5\u672f\u8bed\u4e5f\u88ab\u8bef\u8ba4\u4e3a\u662f\u767e\u79d1\u5168\u4e66\u7684\u4e0d\u5217\u98a0\u8bfa\u5766\u5c3c\u5361 - \u6307\u7684\u662f\u4f7f\u7528\u79d1\u5b66\u521b\u9020\u65b0\u7684\u83dc\u80b4\u548c\u70f9\u996a\u6280\u5de7\u3002\u7531\u4e8e1990\u5e74\u4ee3\u672b\uff0c1990\u5e74\u4ee3\u672b\uff0c\u201c\u5206\u5b50\u7f8e\u98df\u201d\u7b49\u53a8\u5e08\u7684\u5de5\u4f5c\uff0c\u5373\u201c\u5206\u5b50\u7f8e\u98df\uff0c\u201d\u5c3d\u7ba1\u6f5c\u5728\u7684\u9519\u8bef\u6570\uff0c\u4f46\u5374\u6210\u4e3a\u6ce1\u6cab\uff0c\u51dd\u80f6\u548c\u7403\u4f53\u7b49\u683c\u5f0f\u7684\u98df\u7269\u7684\u4ee3\u540d\u8bcd\u3002\n  \u66fe\u4ee5\u9e21\u86cb\u7684\u70ed\u7231\u95fb\u540d\u7684Dufresne\u751a\u81f3\u662f\u6930\u5b50 - \u80e1\u841d\u535c\u6df7\u5408\u7269\uff0c\u65e8\u5728\u770b\u8d77\u6765\u50cf\u4ed6\u7ebd\u7ea6\u5e02\u9910\u5385WD-50\u7684\u9633\u5149\u58ee\u4e3d\u7684\u9e21\u86cb\uff0c\u4ece2003\u5e74\u52302014\u5e74\u5f00\u653e\u3002\uff082007\u5e74\uff0cDufresne\u7684\u201c\u9e21\u86cb\u201d\u6210\u4e3a\u4e86\u5728\u7ebf\u53a8\u5e08\u7684Marcel Vigneron\u201c\u6495\u5f00\u4e86\u201d\u6495\u5f00\u4e86\u201c\u7f51\u7edc\u86cb\u201d\u65f6\u7684\u201c\u6495\u88c2\u4e86\u201d\u7684\u4e89\u8bae\u7684\u4e3b\u9898\u3002\uff09\n  \u4eca\u5929\uff0cCrux-of Comper-Sustes Facherized\u5c06\u756a\u8304\u86cb\u86cb\u9ec4\u8f6c\u5316\u4e3a\u756a\u8304\u86cb\u9ec4\u3002\u4f7f\u7528\u897f\u7ea2\u67ff\u7684\u7c7b\u4f3c\u6280\u672f\u57282019\u5e74\u7684Insider\u89c6\u9891\u4e2d\u666e\u53ca\u5173\u4e8e\u6d1b\u6749\u77f6\u7d20\u98df\u9910\u5385CrossRoads\u53a8\u623f\uff0c\u5b83\u81ea\u4ece2016\u5e74\u4ee5\u6765\u4e00\u76f4\u4e3a\u756a\u8304\u86cb\u9ec4\u63d0\u4f9b\u670d\u52a1\u3002\u65b0\u7684Paltz\uff0c\u7ebd\u7ea6\u7684Lagusta\u751c\u7f8e\u7684\u59d4\u5458\u4f1a\u4e8e2016\u5e74\u5f00\u4e1a\uff0c\u521b\u9020\u4e86\u5b83\u7684\u81ea\u5df1\u7684\u201c\u5206\u5b50\u86cb\u201d\u5728\u62c9\u9762\u9876\u90e8\u63d0\u4f9b\u3002\u4f46\u662f\uff0c\u5f53Buzzfeed\u5728\u8bf8\u5982\u6b64\u5199\u4f5c\u4e2d\u6709\u8fd1400\u4e07\u89c6\u56fe\u7684\u89c6\u9891\u4e2d\u5c1d\u8bd5\u65f6\uff0cCrossroads\u53a8\u623f\u7684\u756a\u8304\u6280\u672f\u5728\u53bb\u5e74\u7684\u5584\u610f\u65f6\u751a\u81f3\u66f4\u52a0\u5173\u6ce8\u3002\u8be5\u65b9\u6cd5\u6b63\u5728Tiktok\u4e0a\u7684\u56de\u5408\uff1a\u9664\u4e86Crux\u7684\u526a\u8f91\u4e4b\u5916\uff0c\u756a\u8304\u7d20\u7d20\u98df\u9e21\u86cb\u51fa\u73b0\u5728User @ Oprahwinfrey.car1\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u7684Tiktok\u4e2d\uff0c\u76ee\u524d\u62e5\u6709350\u4e07\u6b21\u666f\u89c2\u3002 Crux\u8fd8\u4f7f\u7528\u4e0e\u8170\u679c\u6df7\u5408\u7269\u7684\u7403\u5f62\u5316\uff0c\u4ee5\u4f7f\u5176\u5176\u4f59\u7684\u7d20\u98df\u8377\u5305\u86cb\u3002\n  Lisa Kitahara Food Blog Okodici\u53a8\u623f\u5f00\u53d1\u4e86\u5979\u7684\u7d20\u98df\u86cb\u86cb\u9ec4\u98df\u8c31\uff0c\u56e0\u4e3a\u5979\u9519\u8fc7\u4e86Tamago Kake Gohan\uff0c\u751f\u86cb\u7684\u8212\u9002\u98df\u7269\u6df7\u5408\u5728\u708e\u70ed\u7684\u7c73\u996d\u4e2d\uff0c\u5f53\u5979\u7684\u5bb6\u4eba\u6bcf\u5e74\u8bbf\u95ee\u65e5\u672c\u65f6\uff0c\u5979\u4f1a\u5403\u3002\u5979\u8fd8\u4f7f\u7528\u4e86\u7403\u5f62\u5316\u6280\u672f\uff0c\u800c\u4e0d\u662f\u897f\u7ea2\u67ff\uff0c\u5979\u53d1\u73b0\u201c\u592a\u591a\u6c41\u201d\uff0c\u5979\u53d1\u73b0\u4e86\u4f7f\u7528\u5357\u74dc\uff0c\u80e1\u841d\u535c\u6216\u751c\u571f\u8c46\u7684\u6210\u529f\uff0c\u4f7f\u86cb\u9ec4\u57fa\u7840\u662f\u5149\u6ed1\u548c\u9ec4\u6cb9\u7684\u86cb\u9ec4\u3002\n  Kitahara\u5728Tamago Kake Gohan\u7684\u53e6\u4e00\u4e2a\u5173\u952e\u6210\u5206\u662fNagaimo\uff0c\u8fd9\u662f\u4e00\u4e2a\u5c71\u5730\u5c71\u836f\uff0c\u5728\u52a0\u5165\u86cb\u9ec4\u4e4b\u524d\uff0c\u5979\u5c06\u814c\u5236\u5230\u5979\u7684\u7897\u91cc\u3002 \u201c\u8fd9\u6709\u70b9\u6a21\u4eff\u9e21\u86cb\u7684\u7c98\u6027\u7eb9\u7406\uff0c\u201d\u5979\u8bf4\u3002\u5979\u8fd8\u5728\u7d20\u98df\u4e3b\u4e49\u8005\u4e2d\u4f7f\u7528Nagaimo\uff0c\u4ee5Kaki Fry\u6216\u65e5\u5f0f\u70b8\u7261\u86ce\u3002\u5728\u90a3\u7bc7\u8bba\u8ff0\u4e2d\uff0c\u957f\u5934\u961f\u4ee5\u9e21\u86cb\u7684\u65b9\u5f0f\u675f\u7f1a\u5979\u7528\u6765\u6316\u6398\u7261\u86ce\u8611\u83c7\u7684\u6df7\u5408\u7269\uff0c\u4e5f\u589e\u52a0\u4e86\u4e00\u79cd\u7c98\u7740\u7684\u96ea\uff0c\u8fd9\u4f7f\u5f97\u6765\u81ea\u6d77\u6d0b\u7684\u7261\u86ce\u3002 \n\u86cb\u9ec4\u6bd4\u8868\u683c\u66f4\u591a\uff0c\u8bb8\u591a\u7d20\u98df\u86cb\u98df\u8c31\u4e2d\u7684\u5e38\u89c1\u98ce\u5473\u5143\u7d20\u5305\u62eckitahara\u548c\u6c64\u59c6\u68ee\u662fkala namak\uff0c\u4e5f\u88ab\u79f0\u4e3a\u5370\u5ea6\u4eba\u6216\u559c\u9a6c\u62c9\u96c5\u9ed1\u76d0\u3002\u4e0e\u542b\u6709\u6d3b\u6027\u70ad\u7684\u590f\u5a01\u5937\u9ed1\u76d0\u4e0d\u540c\uff0cKala Namak\u542b\u6709\u786b\u78fa\u5316\u5408\u7269\uff0c\u4f7f\u9e21\u86cb\u7684\u6c14\u5473\u548c\u5473\u9053\u4e0d\u540c\u3002\u5176\u4e2d\u4e00\u4e2a\u662f\u786b\u5316\u6c22\uff0c\u8fd9\u662f\u9e21\u86cb\u7684\u5473\u9053\uff0c\u4ece\u9965\u997f\u8bf1\u5bfc\u8150\u70c2\u7684\u6c61\u57a2\u3002\n  \u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u6280\u672f\u5728\u5546\u4e1a\u751a\u81f3\u9910\u5385\u7684\u610f\u4e49\u4e0a\u90fd\u4e0d\u4f1a\u66f4\u53d7\u6b22\u8fce\u53ef\u80fd\u662f\u56e0\u4e3a\u52aa\u529b\u6210\u4e3a\u5236\u9020\u5b83\u4eec\u3002\u6c64\u68ee\u5f00\u53d1\u4e86\u4e00\u4e2a\u6210\u529f\u7684\u7d20\u98df\u86cb\u539f\u578b\u4e4b\u540e\uff0c\u4ed6\u7684\u4e0b\u4e00\u4e2a\u6311\u6218\u662f\u5728\u66f4\u5927\u7684\u89c4\u6a21\u4e0a\u8fdb\u884c\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u82b1\u4e86\u51e0\u4e2a\u6708\u7684\u8fc7\u7a0b\u3002 \u201c\u5236\u4f5c\u5c11\u91cf\u7d20\u98df\u4e3b\u4e49\u8005\u7684\u9e21\u86cb\u662f\u4e00\u4ef6\u4e8b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5728\u5546\u4e1a\u73af\u5883\u4e2d\u521b\u9020\u6210\u5343\u4e0a\u4e07\u7684\u4e0d\u540c\u6e38\u620f\uff0c\u201d\u4ed6\u8bf4\u3002\u201c \u201c\u7d20\u98df\u4e3b\u4e49\u8005'\u714e\u86cb'\u548c\u7d20\u98df\u4e3b\u4e49\u8005'\u5077\u730e\u9e21\u86cb'\u5373\u4f7f\u5728\u5b8c\u5584\u4e24\u79cd\u65b9\u6cd5\u4e4b\u540e\uff0c\u4e5f\u4f1a\u91c7\u53d6\u5de8\u5927\u7684\u80fd\u91cf\u3002\u201d\n  \u867d\u7136Kitahara\u5728\u5979\u7684\u535a\u5ba2\u4e0a\u4e3a\u5979\u7684\u7d20\u98df\u86cb\u86cb\u9ec4\u8fdb\u884c\u4e86\u98df\u8c31\uff0c\u4f46\u5979\u8ba1\u5212\u7ee7\u7eed\u5c1d\u8bd5\u8fd9\u4e9b\u8fc7\u7a0b\u3002\u5979\u559c\u6b22\u6700\u7ec8\u89e3\u51b3\u4e00\u4e2a\u7248\u672c\u7684onsen tamago\uff08\u201c\u6e29\u6cc9\u86cb\u201d\u4e2d\u7684\u65e5\u8bed\uff09\uff0c\u9e21\u86cb\u5728\u4f4e\u4e8e\u6cb8\u817e\u7684\u6e29\u5ea6\u4e0b\u6162\u6162\u716e\u719f\uff0c\u76f4\u5230\u5b83\u4eec\u67d4\u6ed1\uff0c\u67d4\u8f6f\uff0c\u756a\u8354\u679d\u3002\u5979\u8ba4\u4e3a\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u743c\u8102\u6765\u5b9e\u73b0\u8fd9\u4e00\u5e38\u7528\u7d20\u98df\u66ff\u4ee3\u3002 \u201c\u5373\u4f7f\u662f\u73b0\u5728\uff0c\u6211\u53c8\u975e\u5e38\u5174\u594b\u5730\u5bf9\u98df\u8c31\u6709\u70b9\u5174\u594b\uff0c\u201dKitahara\u8bf4\u3002\u4e5f\u8bb8\u6709\u4e00\u5929\uff0c\u5979\u5efa\u8bae\uff0c\u5979\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u4eba\u7684\u504f\u597d\u5236\u4f5c\u5b8c\u7f8e\u7684\u7d20\u98df\u86cb\u7684\u6307\u5bfc;\u5979\u60f3\u5f04\u6e05\u695a\u86cb\u9ec4\u6df7\u5408\u7269\u4e2d\u7684\u6839\u852c\u83dc\u7684\u6b63\u786e\u6bd4\u4f8b\uff0c\u4ee5\u521b\u9020\u4ece\u6d41y\u86cb\u7cd5\u5230\u66f4\u539a\u7684\u66f4\u719f\u7ec3\u7684\u770b\u4f3c\u7684\u6db2\u4f53\u7684\u9009\u62e9\u3002\n  \u5728Crux\uff0c\u7d20\u98df\u4e3b\u4e49\u8005\u86cb\u9ec4\u5982\u6b64\u51c6\u786e\uff0c\u8fd9\u4e24\u79cd\u83dc\u80b4\u76ee\u524d\u90fd\u6709\u4e00\u4e2a\u514d\u8d23\u58f0\u660e\uff0c\u201c\u8bf7\u5c0f\u5fc3\u9e21\u86cb\u3002\u201d \u201c\u5728\u83dc\u5355\u4e0a\u7684\u8b66\u544a\u4e4b\u524d\uff0c\u4eba\u4eec\u5bf9\u4eba\u4eec\u4f4e\u4f30\u4e86\u4ed6\u4eec\u7684\u5e38\u89c1\u60c5\u51b5\uff0c\u4ed6\u4eec\u6700\u7ec8\u4f1a\u5728\u7d20\u98df\u4e3b\u4e49\u8005\u86cb\u9ec4\u4e2d\u8986\u76d6\uff0c\u201d\u6c64\u59c6\u68ee\u8bf4\u3002 ", "note_en": "A  video posted by the Australian restaurant  Crux on TikTok last month shows something you\u2019d expect from any influencer filming their Sunday brunch: A knife slowly breaks an egg\u2014blanketed in hollandaise, as any good eggs Benedict is\u2014until golden yolk oozes out. But appearances are deceiving, and as the text overlaid onto the clip makes clear: Yes, it\u2019s vegan. And yes, it pops.\n  For vegans,  lacto-vegetarians, and anyone else cutting their egg consumption, there have long been many ways to replace the functions of the egg. Flax seeds, chia seeds, bananas, applesauce, and starch blends like Ener-G Egg Replacer perform the binding tasks that eggs do so well\u2014a guide to which can be found  in Taste. Tofu can be scrambled, and chickpea flour can be cooked into a thin, omelette-esque sheet. Other commercial egg replacer options are on the rise as veganism  sees an exciting heyday.\n  Follow Your Heart, the 50-year-old leader in the plant-based space, launched a substitute intended for scrambles  in 2015.  Vegg sells egg replacer products including a  powder meant to simulate the taste and texture of egg yolks in dishes like French toast. The juggernaut is  JUST Egg, whose mung bean-based liquid that scrambles like real eggs, hit the United States  in 2018. By March of this year, when JUST  received a $200 million investment backed by the Qatar Investment Authority,\u00a0 the company had sold the equivalent of 100 million chicken eggs. Chicken eggs remain big business:  In 2019, Americans were eating about 279 eggs per person per year\u2014the highest egg consumption in almost 50 years, the  Washington Post reported.\n  But there\u2019s a particular pleasure that commercial vegan products haven\u2019t yet captured: the egg yolk in all of its gooey, globular, food porn-y glory. The yolk, after all, has much to do with the indulgent Instagram appeal of \u201c putting  an egg  on it,\u201d whether \u201cit\u201d is a pizza, a burger, or a breakfast hash. For those who don\u2019t want to give up the concept of the egg entirely, the vegan egg with silky whites and a spherical liquid yolk is elusive but not out of reach. This is how obsessed cooks in home and restaurant kitchens have tinkered with science to make the plant-based yolk pop possible.\n  Crux, which opened in Adelaide in 2018, offers vegan eggs two ways. The eggs Benedict contains their poached version, which uses a cashew base for the whites and tomatoes for the yolks. The breakfast sandwich features their facsimile of a fried egg, complete with shiny, soy-based whites with lacy edges and the same bubble of a yolk. Though you can tell that the egg yolks\u2019 main components are tomatoes and soy, the texture and flavor of the whites in both versions is spot on, says Crux owner George Thomson. \u201cCustomers are constantly commenting about how what we do is considered \u2018wizardry.\u2019\u201d\n  The process of developing Crux\u2019s vegan eggs \u201cabsolutely consumed\u201d Thomson, who has been vegan for about five years. \u201cI saw people making vegan \u2018fried eggs\u2019 online, and I thought,  I could do that better,\u201d he said. YouTube alone offers many methods. In 2018, Ellie Bullen of the blog Elsa\u2019s Wholesome Life shared a much-imitated video in which she  blended pumpkin into a yellow mixture and then dolloped it onto a circle made of flour and coconut milk. Emmy Cho of Emmymade  riffed on that recipe using eggfruit, the colloquial name for canistel; when it\u2019s ripe, the fruit, which comes from a tree native to Central America,  is compared to the texture of a hard-boiled egg yolk. Where these recipes fall short, though, is that the \u201cyolks\u201d aren\u2019t poppable, but rather a spoonful of sauce atop what is effectively a white pancake.\n   A raw chicken egg yolk is a liquid mixture of protein, fat, water, and minerals that\u2019s encased in a  transparent membrane, which keeps the yolk separate from the albumen that makes up the egg whites. To make a vegan egg yolk that behaves similarly, then, replicating that membrane is crucial.\n  Patented in the 1940s by food scientist William Peschardt, spherification is a technique that traps a liquid in a thin gel membrane. Peschardt suggested it for use in \u201cartificial edible cherries, soft sheets, and the like.\u201d The process works  by mixing an edible liquid that contains no calcium with sodium alginate, and then dropping it into a calcium salt bath. (There\u2019s also  reverse spherification, which involves dripping a calcium-containing substance into an alginate bath.) When the sodium alginate meets the calcium ions,  the ions bind together, giving the drops of liquid a gel skin.\n  Spherification really entered public consciousness in 2003, when the Spanish restaurant El Bulli\u2014which won World\u2019s Best Restaurant the previous year, and every year from 2006 to 2009\u2014 began using it and gained acclaim for dishes like  an \u201colive\u201d made out of olive juice. El Bulli and chef Ferran Adri\u00e0 were leaders in the cooking movement that\u2019s sometimes referred to as \u201cmolecular gastronomy,\u201d though many chefs associated with it use terms like \u201c modernist cuisine.\u201d\n  Credited to physicist Nicholas Kurti and chemist Herv\u00e9 This and dating to 1988,  molecular gastronomy is a field of study that explores the science behind cooking in home and restaurant kitchens. (\u201c Food science,\u201d by comparison, generally refers to the study of industrial food production, safety, and nutrition.) The term was also used\u2014mistakenly,  according to Encyclopedia Britannica\u2014to refer to the use of science to create new dishes and cooking techniques. Thanks to the work of chefs like Adri\u00e0, Heston Blumenthal, and Wylie Dusfresne in the late 1990s to early 2000s, \u201cmolecular gastronomy,\u201d despite the potential misnomer, became synonymous with foods in formats like foams, gels, and spheres.\n  Dufresne, who was known for his love of eggs, even served a  coconut-carrot mixture designed to look like a sunny-side-up egg at his New York City restaurant WD-50, which was  open from 2003 to 2014. (In 2007, Dufresne\u2019s \u201cegg\u201d became the subject of brief food world controversy when  Top Chef\u2019s Marcel Vigneron \u201c ripped [it] off\u201d with his \u201c cyber egg\u201d that was featured in  Wired.)\n  Today, Crux\u2014which is focused on \u201cboundary-pushing vegan food\u201d\u2014uses spherification to turn a tomato-based mixture into its vegan egg yolk. A similar technique using tomatoes was popularized online in a  2019 Insider video about the Los Angeles vegan restaurant  Crossroads Kitchen, which has been serving a tomato yolk  since at least 2016. New Paltz, New York\u2019s  Lagusta\u2019s Luscious Commissary, which opened in 2016, created its own \u201c molecular egg\u201d to serve on top of ramen. But Crossroads Kitchen\u2019s tomato technique got even more attention last year when Buzzfeed\u2019s  Goodful tried it in a video that has almost 4 million views as of this writing. The method is now making the rounds on TikTok: In addition to Crux\u2019s clips, a tomato-based vegan egg appears in  a TikTok posted by the user @oprahwinfrey.car1 earlier this month and which currently has 3.5 million views. Crux also uses spherification with a cashew-based mixture to make the rest of its vegan poached egg.\n  Lisa Kitahara of the food blog  Okonomi Kitchen developed her  vegan egg yolk recipe because she missed the tamago kake gohan, a comfort food of raw egg mixed into hot rice, that she would eat when her family visited Japan every year. She also uses the spherification technique, but instead of tomatoes, which she found \u201ctoo juicy,\u201d she\u2019s found success using squash, carrots, or sweet potatoes to make an egg yolk base that\u2019s smooth and buttery.\n  Another key ingredient in Kitahara\u2019s take on tamago kake gohan is nagaimo, a mountain yam, which she grates raw into her bowl of rice before adding the egg yolk. \u201cIt kind of mimics that slimy texture that eggs have,\u201d she said. She also uses nagaimo in her  vegan take on kaki fry, or Japanese-style fried oysters. In that recipe, nagaimo acts in the place of eggs to bind the mixture she uses to dredge oyster mushrooms, and it also adds a sliminess that\u2019s reminiscent of an oyster from the sea.\n  There\u2019s more to an egg yolk than form, and a common flavor element in many vegan egg recipes including Kitahara\u2019s and Thomson\u2019s is  kala namak, also known as Indian or Himalayan black salt. Unlike  Hawaiian black salts that contain activated charcoal, kala namak  contains sulfur compounds that evoke the smell and flavor of eggs. One of these is hydrogen sulfide,  which is responsible for the smell of eggs, from hunger-inducing to spoiled rotten.\n  Why these techniques aren\u2019t more popular in a commercial or even restaurant sense might be because of the effort that goes into making them. After Thomson developed a successful prototype of his vegan egg, his next challenge was making it on a larger scale, a process that took months. \u201cIt\u2019s one thing to make a handful of vegan \u2018poached eggs,\u2019 it\u2019s a whole different game to create thousands of them in a commercial environment,\u201d he said. \u201cBoth the vegan \u2018fried eggs\u2019 and vegan \u2018poached eggs\u2019 take tremendous amounts of energy to create, even after perfecting both methods.\u201d\n  Though Kitahara has put a recipe for her vegan egg yolk on her blog, she plans to continue experimenting with the process. She\u2019d like to eventually tackle a version of  onsen tamago (\u201chot springs eggs\u201d in Japanese),\u00a0 eggs slowly cooked at a temperature below boiling until they\u2019re silky, soft, and custardy. She thinks this could be possible with the use of agar, a common vegetarian alternative to gelatin. \u201cEven now, I&#39;m still very excited to kind of tweak the recipe a bit,\u201d Kitahara said. Perhaps one day, she suggested, she could make a guide to the perfect vegan egg for each person\u2019s preference; she\u2019d like to figure out the right proportions of liquid to root vegetables in her yolk mixture to create options from runny yolks to thicker, more cooked-seeming ones.\n  At Crux, the vegan egg yolks are so accurate that both dishes currently come with a disclaimer to \u201cplease pop eggs with care.\u201d \u201cBefore the warning on the menu, it was a common occurrence for people to underestimate just how realistic they were, and they would end up covered in vegan egg yolk,\u201d Thomson said.", "posttime": "2021-06-19 15:31:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u53e3,squeezable,\u9e21\u86cb", "title": "\u6324\u538b\uff0c\u53ef\u53e3\u7d20\u98df\u86cb\u86cb\u9ec4\u7684\u79d1\u5b66 ", "title_en": "The Science of the Squeezable, Poppable Vegan Egg Yolk", "transed": 1, "url": "https://www.vice.com/en/article/7kv4xy/the-science-of-the-squeezable-poppable-vegan-egg-yolk", "via": "", "real_tags": ["\u53ef\u53e3", "\u9e21\u86cb"]}]
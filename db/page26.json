[{"category": "", "categoryclass": "", "imagename": "3456088d4a4e83119110c7300c71b46d.jpg", "infoid": 1070184, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u8239\u957f\u4ece\u7532\u677f\u4e0a\u8df3\u4e0b\u6765\uff0c\u7a7f\u597d\u8863\u670d\uff0c\u5728\u6c34\u4e2d\u51b2\u523a\u3002\u4f5c\u4e3a\u4e00\u540d\u524d\u6551\u751f\u5458\uff0c\u5f53\u4ed6\u76f4\u5954\u8fd9\u5bf9\u5728\u505c\u6cca\u7684\u6e38\u9493\u8005\u548c\u6d77\u6ee9\u4e4b\u95f4\u6e38\u6cf3\u7684\u592b\u5987\u65f6\uff0c\u4ed6\u4e00\u76f4\u76ef\u7740\u53d7\u5bb3\u8005\u3002 \u201c\u6211\u8ba4\u4e3a\u4ed6\u8ba4\u4e3a\u4f60\u6eba\u6c34\u4e86\uff0c\u201d\u4e08\u592b\u5bf9\u59bb\u5b50\u8bf4\u3002\u4ed6\u4eec\u4e00\u76f4\u5728\u4e92\u76f8\u6cfc\u6c34\uff0c\u5979\u4e5f\u66fe\u5c16\u53eb\u8fc7\uff0c\u4f46\u73b0\u5728\u4ed6\u4eec\u53ea\u662f\u7ad9\u5728\u6c99\u6d32\u4e0a\uff0c\u9f50\u9888\u6df1\u3002 \u201c\u6211\u4eec\u5f88\u597d;\u4ed6\u5728\u505a\u4ec0\u4e48\uff1f\u201d\u5979\u95ee\uff0c\u6709\u70b9\u751f\u6c14\u3002 \u201c\u6211\u4eec\u5f88\u597d\uff01\u201d\u4e08\u592b\u5927\u558a\u5927\u53eb\uff0c\u6325\u624b\u6325\u624b\u8ba9\u4ed6\u79bb\u5f00\uff0c\u4f46\u4ed6\u7684\u8239\u957f\u7ee7\u7eed\u52aa\u529b\u6e38\u6cf3\u3002 \u201c\u79fb\u52a8\uff01\u201d\u5f53\u4ed6\u5728\u9707\u60ca\u7684\u4e1a\u4e3b\u4e4b\u95f4\u51b2\u523a\u65f6\uff0c\u4ed6\u5486\u54ee\u7740\u3002\u5c31\u5728\u4ed6\u4eec\u8eab\u540e\uff0c\u4e0d\u5230 10 \u82f1\u5c3a\u8fdc\uff0c\u4ed6\u4eec 9 \u5c81\u7684\u5973\u513f\u6b63\u5728\u6eba\u6c34\u8eab\u4ea1\u3002\u5728\u8239\u957f\u7684\u6000\u91cc\u5b89\u5168\u5730\u6d6e\u51fa\u6c34\u9762\uff0c\u5979\u6cea\u6d41\u6ee1\u9762\uff0c\u201c\u7239\u5730\uff01\u201d\u8fd9\u4f4d\u8239\u957f\u600e\u4e48\u77e5\u9053\u2014\u2014\u4ece 50 \u82f1\u5c3a\u8fdc\u7684\u5730\u65b9\u2014\u2014\u7236\u4eb2\u65e0\u6cd5\u4ece 10 \u82f1\u5c3a\u5916\u8bc6\u522b\u51fa\u4ec0\u4e48\uff1f\u6eba\u6c34\u5e76\u4e0d\u662f\u5927\u591a\u6570\u4eba\u6240\u671f\u671b\u7684\u731b\u70c8\u7684\u3001\u6025\u4fc3\u7684\u6c42\u6551\u3002\u8239\u957f\u7ecf\u8fc7\u4e13\u5bb6\u548c\u591a\u5e74\u7ecf\u9a8c\u7684\u57f9\u8bad\uff0c\u53ef\u4ee5\u8bc6\u522b\u6eba\u6c34\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7236\u4eb2\u901a\u8fc7\u770b\u7535\u89c6\u4e86\u89e3\u4e86\u6eba\u6c34\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5982\u679c\u60a8\u82b1\u65f6\u95f4\u5728\u6c34\u9762\u4e0a\u6216\u9644\u8fd1\uff08\u63d0\u793a\uff1a\u8fd9\u5c31\u662f\u6211\u4eec\u6240\u6709\u4eba\uff09\uff0c\u90a3\u4e48\u60a8\u5e94\u8be5\u786e\u4fdd\u60a8\u548c\u60a8\u7684\u8239\u5458\u77e5\u9053\u6bcf\u5f53\u4eba\u4eec\u8fdb\u5165\u6c34\u4e2d\u65f6\u8981\u5bfb\u627e\u4ec0\u4e48\u3002\u76f4\u5230\u5979\u6cea\u6d41\u6ee1\u9762\u5730\u558a\u4e86\u4e00\u58f0\u201c\u7238\u7238\u201d\uff0c\u5979\u624d\u51fa\u58f0\u3002\u4f5c\u4e3a\u524d\u6d77\u5cb8\u8b66\u536b\u961f\u6551\u63f4\u6e38\u6cf3\u8fd0\u52a8\u5458\uff0c\u6211\u5bf9\u8fd9\u4e2a\u6545\u4e8b\u4e00\u70b9\u4e5f\u4e0d\u611f\u5230\u60ca\u8bb6\u3002\u6eba\u6c34\u51e0\u4e4e\u603b\u662f\u4e00\u4e2a\u770b\u4f3c\u5b89\u9759\u7684\u4e8b\u4ef6\u3002\u620f\u5267\u6027\u7684\u6761\u4ef6\uff08\u7535\u89c6\uff09\u8ba9\u6211\u4eec\u51c6\u5907\u5bfb\u627e\u7684\u6325\u624b\u3001\u6cfc\u6c34\u548c\u5927\u558a\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u5f88\u5c11\u89c1\u3002\u672c\u80fd\u7684\u6eba\u6c34\u53cd\u5e94\u2014\u2014\u7531 Francesco A. Pia \u535a\u58eb\u547d\u540d\uff0c\u662f\u4eba\u4eec\u4e3a\u4e86\u907f\u514d\u5728\u6c34\u4e2d\u5b9e\u9645\u6216\u611f\u77e5\u5230\u7684\u7a92\u606f\u800c\u91c7\u53d6\u7684\u63aa\u65bd\u3002\u800c\u4e14\u5b83\u770b\u8d77\u6765\u5e76\u4e0d\u50cf\u5927\u591a\u6570\u4eba\u6240\u671f\u671b\u7684\u90a3\u6837\u3002\u51e0\u4e4e\u6ca1\u6709\u6e85\u6c34\uff0c\u6ca1\u6709\u6325\u624b\uff0c\u4e5f\u6ca1\u6709\u5927\u558a\u5927\u53eb\u6216\u4efb\u4f55\u5f62\u5f0f\u7684\u6c42\u52a9\u3002\u8981\u4e86\u89e3\u6c34\u9762\u6eba\u6c34\u662f\u591a\u4e48\u5b89\u9759\u548c\u5e73\u6de1\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u95ee\u9898\uff1a\u8fd9\u662f\u5bfc\u81f4 15 \u5c81\u53ca\u4ee5\u4e0b\u513f\u7ae5\uff08\u7d27\u968f\u8f66\u8f86\u4e8b\u6545\uff09\u610f\u5916\u6b7b\u4ea1\u7684\u7b2c\u4e8c\u5927\u539f\u56e0\u2014\u2014\u5728\u5927\u7ea6 750 \u540d\u513f\u7ae5\u4e2d\u660e\u5e74\u4f1a\u6df9\u6b7b\uff0c\u5176\u4e2d\u5927\u7ea6 375 \u4eba\u4f1a\u5728\u7236\u6bcd\u6216\u5176\u4ed6\u6210\u5e74\u4eba 25 \u7801\u8303\u56f4\u5185\u6df9\u6b7b\u3002\u6839\u636e\u75be\u75c5\u9884\u9632\u63a7\u5236\u4e2d\u5fc3\u7684\u6570\u636e\uff0c\u5728 10% \u7684\u6eba\u6c34\u4e8b\u4ef6\u4e2d\uff0c\u6210\u5e74\u4eba\u5b9e\u9645\u4e0a\u4f1a\u770b\u7740\u5b69\u5b50\u8fd9\u6837\u505a\uff0c\u800c\u4e0d\u77e5\u9053\u5b83\u6b63\u5728\u53d1\u751f\u3002\u6eba\u6c34\u770b\u8d77\u6765\u4e0d\u50cf\u6eba\u6c34\u2014\u2014Dr. Pia \u5728\u6d77\u5cb8\u8b66\u536b\u961f\u7684 On Scene \u6742\u5fd7\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8fd9\u6837\u63cf\u8ff0\u4e86\u672c\u80fd\u7684\u6eba\u6c34\u53cd\u5e94\uff1a\u201c\u9664\u975e\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u6eba\u6c34\u7684\u4eba\u5728\u751f\u7406\u4e0a\u65e0\u6cd5\u547c\u6551\u3002\u547c\u5438\u7cfb\u7edf\u662f\u4e3a\u547c\u5438\u800c\u8bbe\u8ba1\u7684\u3002\u8bed\u97f3\u662f\u6b21\u8981\u6216\u53e0\u52a0\u7684\u529f\u80fd\u3002\u547c\u5438\u5fc5\u987b\u5728\u8a00\u8bed\u53d1\u751f\u4e4b\u524d\u5b8c\u6210\u3002\u6eba\u6c34\u8005\u7684\u5634\u5df4\u4ea4\u66ff\u5730\u6c89\u5165\u6c34\u9762\uff0c\u518d\u51fa\u73b0\u5728\u6c34\u9762\u4e4b\u4e0a\u3002\u6eba\u6c34\u8005\u7684\u5634\u5728\u6c34\u9762\u4e0a\u65b9\u7684\u65f6\u95f4\u4e0d\u8db3\u4ee5\u8ba9\u4ed6\u4eec\u547c\u6c14\u3001\u5438\u6c14\u548c\u547c\u6551\u3002\u5f53\u6eba\u6c34\u8005\u7684\u5634\u5728\u6c34\u9762\u4ee5\u4e0a\u65f6\uff0c\u968f\u7740\u5634\u5df4\u5f00\u59cb\u4e0b\u6c89\u5230\u6c34\u9762\u4ee5\u4e0b\uff0c\u4ed6\u4eec\u4f1a\u5feb\u901f\u547c\u6c14\u548c\u5438\u6c14\u3002\u6eba\u6c34\u7684\u4eba\u4e0d\u80fd\u6325\u624b\u6c42\u6551\u3002\u5927\u81ea\u7136\u672c\u80fd\u5730\u8feb\u4f7f\u5b83\u4eec\u6a2a\u5411\u4f38\u5c55\u624b\u81c2\u5e76\u538b\u5728\u6c34\u9762\u4e0a\u3002\u538b\u5728\u6c34\u9762\u4e0a\u53ef\u4ee5\u8ba9\u6eba\u6c34\u7684\u4eba\u5229\u7528\u4ed6\u4eec\u7684\u8eab\u4f53\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u628a\u5634\u4ece\u6c34\u91cc\u62ac\u8d77\u6765\u547c\u5438\u3002\u5728\u6574\u4e2a\u672c\u80fd\u6eba\u6c34\u53cd\u5e94\u4e2d\uff0c\u6eba\u6c34\u8005\u65e0\u6cd5\u81ea\u4e3b\u63a7\u5236\u624b\u81c2\u52a8\u4f5c\u3002\u4ece\u751f\u7406\u4e0a\u8bb2\uff0c\u6eba\u6c34\u8005\u5728\u6c34\u9762\u4e0a\u6323\u624e\uff0c\u65e0\u6cd5\u505c\u6b62\u6eba\u6c34\u5e76\u8fdb\u884c\u81ea\u4e3b\u8fd0\u52a8\uff0c\u4f8b\u5982\u6325\u624b\u6c42\u6551\u3001\u8d70\u5411\u6551\u63f4\u4eba\u5458\u6216\u4f38\u624b\u53bb\u62ff\u4e00\u4ef6\u6551\u63f4\u8bbe\u5907\u3002\n\u4ece\u672c\u80fd\u6eba\u6c34\u53cd\u5e94\u7684\u5f00\u59cb\u5230\u7ed3\u675f\uff0c\u4eba\u4eec\u7684\u8eab\u4f53\u5728\u6c34\u4e2d\u4fdd\u6301\u76f4\u7acb\uff0c\u6ca1\u6709\u4efb\u4f55\u652f\u6491\u6027\u8e22\u817f\u7684\u8ff9\u8c61\u3002\u9664\u975e\u7531\u8bad\u7ec3\u6709\u7d20\u7684\u6551\u751f\u5458\u6551\u51fa\uff0c\u5426\u5219\u8fd9\u4e9b\u6eba\u6c34\u8005\u53ea\u80fd\u5728\u6df9\u6ca1\u524d 20 \u5230 60 \u79d2\u5728\u6c34\u9762\u4e0a\u6323\u624e\u3002\u201d\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4e00\u4e2a\u5927\u558a\u6551\u547d\u7684\u4eba\u6ca1\u6709\u771f\u6b63\u7684\u9ebb\u70e6\u2014\u2014\u4ed6\u4eec\u6b63\u5728\u7ecf\u5386\u6c34\u4e2d\u7684\u7a98\u8feb\u3002\u5728\u672c\u80fd\u6eba\u6c34\u53cd\u5e94\u4e4b\u524d\u5e76\u4e0d\u603b\u662f\u51fa\u73b0\uff0c\u6c34\u4e2d\u7684\u7a98\u8feb\u4e0d\u4f1a\u6301\u7eed\u5f88\u957f\u65f6\u95f4\u2014\u2014\u4f46\u4e0e\u771f\u6b63\u7684\u6eba\u6c34\u4e0d\u540c\uff0c\u8fd9\u4e9b\u53d7\u5bb3\u8005\u4ecd\u7136\u53ef\u4ee5\u534f\u52a9\u81ea\u5df1\u7684\u6551\u63f4\u3002\u4ed6\u4eec\u53ef\u4ee5\u6293\u4f4f\u6551\u751f\u7d22\u3001\u6295\u63b7\u6212\u6307\u7b49\u3002\u56e0\u6b64\uff0c\u5982\u679c\u4e00\u540d\u8239\u5458\u843d\u6c34\u5e76\u4e14\u4e00\u5207\u6b63\u5e38\u2014\u2014\u4e0d\u8981\u592a\u786e\u5b9a\u3002\u6709\u65f6\uff0c\u67d0\u4eba\u6eba\u6c34\u7684\u6700\u5e38\u89c1\u8ff9\u8c61\u662f\u4ed6\u4eec\u770b\u8d77\u6765\u4e0d\u50cf\u662f\u6eba\u6c34\u3002\u4ed6\u4eec\u53ef\u80fd\u53ea\u662f\u770b\u8d77\u6765\u50cf\u662f\u5728\u8e29\u6c34\uff0c\u62ac\u5934\u770b\u7740\u7532\u677f\u3002\u4e00\u79cd\u786e\u5b9a\u65b9\u6cd5\uff1f\u95ee\u4ed6\u4eec\uff1a\u201c\u4f60\u8fd8\u597d\u5417\uff1f\u201d\u5982\u679c\u4ed6\u4eec\u80fd\u56de\u7b54\u2014\u2014\u4ed6\u4eec\u53ef\u80fd\u662f\u3002\u5982\u679c\u4ed6\u4eec\u56de\u4ee5\u832b\u7136\u7684\u76ee\u5149\uff0c\u60a8\u53ef\u80fd\u53ea\u6709\u4e0d\u5230 30 \u79d2\u7684\u65f6\u95f4\u624d\u80fd\u627e\u5230\u4ed6\u4eec\u3002\u7236\u6bcd\u2014\u2014\u5b69\u5b50\u4eec\u5728\u6c34\u4e2d\u73a9\u800d\u4f1a\u53d1\u51fa\u58f0\u97f3\u3002\u5f53\u4ed6\u4eec\u5b89\u9759\u4e0b\u6765\u65f6\uff0c\u60a8\u53ef\u4ee5\u627e\u5230\u4ed6\u4eec\u5e76\u627e\u51fa\u539f\u56e0\u3002", "note_en": "The new captain jumped from the deck, fully dressed, and sprinted through the water. A former lifeguard, he kept his eyes on his victim as he headed straight for the couple swimming between their anchored sportfisher and the beach. \u201cI think he thinks you\u2019re drowning,\u201d the husband said to his wife. They had been splashing each other and she had screamed but now they were just standing, neck-deep on the sand bar. \u201cWe\u2019re fine; what is he doing?\u201d she asked, a little annoyed. \u201cWe\u2019re fine!\u201d the husband yelled, waving him off, but his captain kept swimming hard. \u201dMove!\u201d he barked as he sprinted between the stunned owners. Directly behind them, not 10 feet away, their 9-year-old daughter was drowning. Safely above the surface in the arms of the captain, she burst into tears, \u201cDaddy!\u201d\n        How did this captain know\u2014from 50 feet away\u2014what the father couldn\u2019t recognize from just 10? Drowning is not the violent, splashing call for help that most people expect. The captain was trained to recognize drowning by experts and years of experience. The father, on the other hand, had learned what drowning looks like by watching television. If you spend time on or near the water (hint: that\u2019s all of us) then you should make sure that you and your crew know what to look for whenever people enter the water. Until she cried a tearful, \u201cDaddy,\u201d she hadn\u2019t made a sound. As a former Coast Guard rescue swimmer, I wasn\u2019t surprised at all by this story. Drowning is almost always a deceptively quiet event. The waving, splashing, and yelling that dramatic conditioning (television) prepares us to look for is rarely seen in real life.\n    The Instinctive Drowning Response\u2014so named by Francesco A. Pia, Ph.D., is what people do to avoid actual or perceived suffocation in the water. And it does not look like most people expect. There is very little splashing, no waving, and no yelling or calls for help of any kind. To get an idea of just how quiet and undramatic from the surface drowning can be, consider this: It is the No. 2 cause of accidental death in children, ages 15 and under (just behind vehicle accidents)\u2014of the approximately 750 children who will drown next year, about 375 of them will do so within 25 yards of a parent or other adult. According to the CDC, in 10 percent of those drownings, the adult will actually watch the child do it, having no idea it is happening. Drowning does not look like drowning\u2014Dr. Pia, in  an article in the Coast Guard\u2019s  On Scene magazine, described the Instinctive Drowning Response like this:\n      \u201cExcept in rare circumstances, drowning people are physiologically unable to call out for help. The respiratory system was designed for breathing. Speech is the secondary or overlaid function. Breathing must be fulfilled before speech occurs.\n Drowning people\u2019s mouths alternately sink below and reappear above the surface of the water. The mouths of drowning people are not above the surface of the water long enough for them to exhale, inhale, and call out for help. When the drowning people\u2019s mouths are above the surface, they exhale and inhale quickly as their mouths start to sink below the surface of the water.\n Drowning people cannot wave for help. Nature instinctively forces them to extend their arms laterally and press down on the water\u2019s surface. Pressing down on the surface of the water permits drowning people to leverage their bodies so they can lift their mouths out of the water to breathe.\n Throughout the Instinctive Drowning Response, drowning people cannot voluntarily control their arm movements. Physiologically, drowning people who are struggling on the surface of the water cannot stop drowning and perform voluntary movements such as waving for help, moving toward a rescuer, or reaching out for a piece of rescue equipment.\n From beginning to end of the Instinctive Drowning Response people\u2019s bodies remain upright in the water, with no evidence of a supporting kick. Unless rescued by a trained lifeguard, these drowning people can only struggle on the surface of the water from 20 to 60 seconds before submersion occurs.\u201d\n      This doesn\u2019t mean that a person that is yelling for help and thrashing isn\u2019t in real trouble\u2014they are experiencing aquatic distress. Not always present before the Instinctive Drowning Response, aquatic distress doesn\u2019t last long\u2014but unlike true drowning, these victims can still assist in their own rescue. They can grab lifelines, throw rings, etc.\n        So if a crew member falls overboard and everything looks OK\u2014don\u2019t be too sure. Sometimes the most common indication that someone is drowning is that they don\u2019t look like they\u2019re drowning. They may just look like they are treading water and looking up at the deck. One way to be sure? Ask them, \u201cAre you all right?\u201d If they can answer at all\u2014they probably are. If they return a blank stare, you may have less than 30 seconds to get to them. And parents\u2014children playing in the water make noise.  When they get quiet, you get to them and find out why.", "posttime": "2021-07-29 21:27:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6eba\u6c34,drowning", "title": "\u6eba\u6c34\u4e0d\u50cf\u6eba\u6c34 (2013)", "title_en": "Drowning Doesn\u2019t Look Like Drowning (2013)", "transed": 1, "url": "https://slate.com/technology/2013/06/rescuing-drowning-children-how-to-know-when-someone-is-in-trouble-in-the-water.html", "via": "", "real_tags": ["\u6eba\u6c34", "drowning"]}, {"category": "", "categoryclass": "", "imagename": "9f33eb2e797b81f79d610b22e621b466.png", "infoid": 1070183, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u8bfb\u8fc7\u7684\u4e00\u7bc7\u66f4\u5947\u602a\u7684\u4e13\u680f\u6587\u7ae0\u4e2d\uff0c\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u518d\u6b21\u9009\u62e9\u6388\u6743\u53cd\u5bf9\u8fdc\u7a0b\u5de5\u4f5c\u7684\u529b\u91cf\uff0c\u7531\u4e00\u5bb6\u5f8b\u5e08\u4e8b\u52a1\u6240\u7684\u8054\u5408\u521b\u59cb\u4eba\u7ecf\u8425\u4e00\u7bc7\u4ee4\u4eba\u96be\u4ee5\u5fcd\u53d7\u7684\u4e13\u680f\u6587\u7ae0\u3002\u5982\u679c\u60a8\u60f3\u5bf9\u4e00\u4e2a\u4e3b\u9898\u7ed9\u51fa\u5e73\u8861\u7684\u770b\u6cd5\uff0c\u90a3\u4e48\u71a8\u5e73\u677f\u6b63\u662f\u60a8\u4e0d\u4f1a\u7ed9\u4e88\u7a7a\u95f4\u7684\u4e1c\u897f\uff0c\u8bb2\u8ff0\u4e00\u7fa4\u5f8b\u5e08\u5728 2020 \u5e74 5 \u6708\u88ab\u8feb\u56de\u5230\u529e\u516c\u5ba4\u7684\u6545\u4e8b\u3002\u5b83\u5305\u62ec\u4e00\u4e9b\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u8f76\u4e8b - \u9f13\u52b1\u5458\u5de5\u5f00\u8f66\u8fdb\u6765\uff0c\u56e0\u4e3a\u4ed6\u4eec\u201c\u5e0c\u671b [workers] \u5f00\u8f66\u4e0a\u73ed\u5e76\u652f\u6301 [\u4ed6\u4eec\u7684] \u8bb8\u591a\u80fd\u6e90\u90e8\u95e8\u5ba2\u6237\u201d\uff0c\u533f\u540d\u5ba2\u6237\u636e\u79f0\u5ac9\u5992\u4ed6\u4eec\u7684\u4eb2\u81ea\u529e\u516c\u5ba4 - \u8bfb\u8d77\u6765\u5b8c\u5168\u50cf\u53d1\u8868\u7684\u4e1c\u897f\u7279\u522b\u662f\u56e0\u4e3a\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u5b9e\u9645\u4e0a\u65e0\u6cd5\u8ba9\u8bb0\u8005\u83b7\u5f97\u53cd\u8fdc\u7a0b\u5de5\u4f5c\u7684\u7814\u7a76\u610f\u89c1\u3002\u5c31\u597d\u50cf\u7ec4\u7ec7\u672c\u8eab\u5e0c\u671b\u4eba\u4eec\u56de\u5230\u529e\u516c\u5ba4\uff0c\u4f46\u627e\u4e0d\u5230\u8fd9\u6837\u505a\u7684\u8bc1\u636e\uff0c\u56e0\u6b64\u8f6c\u5411\u4ed6\u4eec\u7684\u610f\u89c1\u9875\u9762\uff0c\u7528\u8f76\u4e8b\u5e9f\u8bdd\u6765\u8bc1\u660e\u5b83\u7684\u5408\u7406\u6027\u3002\u5982\u679c\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u8fd8\u6ca1\u6709\u8058\u8bf7\u201c\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u201d\u65f6\u4e8b\u901a\u8baf\u64b0\u7a3f\u4eba\uff0c\u6709\u4eba\u53ef\u80fd\u4f1a\u8bf4\u6211\u662f\u504f\u6267\u72c2\uff1a\u8fd9\u4e2a\u804c\u4f4d\u867d\u7136\u6709\u53ef\u80fd\u5c31\u8fd9\u4e2a\u95ee\u9898\u63d0\u4f9b\u4e00\u4e2a\u5e73\u8861\u7684\u89c2\u70b9\uff0c\u4f46\u5df2\u7ecf\u901a\u8fc7\u4f7f\u7528\u201c\u56de\u5230\u5de5\u4f5c\u5c97\u4f4d\u201d\u6765\u8fdb\u884c\u884c\u653f\u5ba3\u4f20\u3002\u5de5\u4f5c\u201d\u7684\u77ed\u8bed\u3002\u867d\u7136\u770b\u4f3c\u5929\u771f\uff0c\u4f46\u8fd9\u53e5\u8bdd\u8868\u660e\uff0c\u6bcf\u4e2a\u5728\u5bb6\u5de5\u4f5c\u7684\u4eba\u90fd\u5728\u7528\u7b14\u8bb0\u672c\u7535\u8111\u5ea6\u5047\u800c\u4e0d\u662f\u5728\u5de5\u4f5c\uff0c\u53ea\u6709\u56de\u5230\u6211\u4eec\u5bbd\u655e\u6f02\u4eae\u7684\u529e\u516c\u5ba4\uff0c\u6211\u4eec\u624d\u80fd\u518d\u6b21\u5145\u5206\u5de5\u4f5c\uff0c\u5e76\u770b\u5230\u201c\u9762\u5bf9\u9762\u4ea4\u6d41\u3002\u201d\u6211\u4e00\u76f4\u8b66\u544a\u4f60\u7684\u8fd9\u573a\u6587\u5316\u6218\u4e89\u53d6\u51b3\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8fd9\u4e9b\u4eba\u4e2d\u7684\u8bb8\u591a\u4eba\u627e\u4e0d\u5230\u771f\u6b63\u7684\u7406\u7531\u56de\u5230\u529e\u516c\u5ba4\u3002\u6709\u95ee\u9898\u7684\u5f8b\u5e08\u4e8b\u52a1\u6240\u6839\u636e\u6574\u6574\u4e94\u4e2a\u661f\u671f\u7684\u65f6\u95f4\u6765\u89c2\u5bdf\u5b83\u662f\u5426\u6709\u6548\uff08\u663e\u7136\uff0c\u6709\u51e0\u4f4d\u5f8b\u5e08\u5df2\u7ecf\u52a0\u5165\u4e86\uff01\uff09\uff0c\u81ea\u8c6a\u5730\u5439\u5618\u201c\u80fd\u6e90\u3001\u5065\u5eb7\u9886\u57df\u7684\u516c\u53f8\u5982\u4f55\u62a4\u7406\u548c\u6280\u672f......\u5728\u79c1\u4eba\u8c08\u8bdd\u4e2d\u5ac9\u5992\u5730\u79f0\u8d5e[\u4ed6\u4eec]\u7684\u51b3\u5b9a\u3002\u201d\u7136\u800c\uff0c\u8fd9\u662f\u9ad8\u7ba1\u9636\u5c42\u6b63\u5728\u62bd\u51fa\u7684\u71c3\u6599\u2014\u2014\u4e00\u5bb6\u5927\u7684\u3001\u6210\u529f\u7684\u5f8b\u5e08\u4e8b\u52a1\u6240\u56de\u5230\u529e\u516c\u5ba4\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u4eba\u5e0c\u671b\u56de\u5230\u529e\u516c\u5ba4\u88ab\u6b8b\u5fcd\u5730\u6c89\u9ed8\uff0c\u751a\u81f3\u53ef\u4ee5\u8bf4\uff0c \u201c\u53d6\u6d88\u201d\u662f\u56e0\u4e3a\u8bf4\u4eba\u4eec\u5e94\u8be5\u80fd\u591f\u8fdc\u7a0b\u5de5\u4f5c\u3002\u64b0\u5199\u8fd9\u7bc7\u4e13\u680f\u6587\u7ae0\u7684\u4eba\u8fd8\u8bf4\uff0c\u8fd9\u4e9b\u516c\u53f8\u201c\u5bb3\u6015\u88ab\u80a1\u4e1c\u6000\u7591\uff0c\u62c5\u5fc3\u91cd\u65b0\u5f00\u653e\u529e\u516c\u5ba4\u53ef\u80fd\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u201d\u800c\u4e14\uff0c\u5f53\u7136\uff0c\u4ed6\u4eec\u521b\u9020\u4e86\u521b\u7eaa\u5f55\u7684\u4e00\u5e74\uff0c\u8fd9\u8bc1\u660e\u8fdc\u7a0b\u5de5\u4f5c\u5f88\u611a\u8822\uff0c\u800c\u4e14\u4ed6\u4eec\u5f88\u806a\u660e\u3002\u6211\u60f3\u660e\u786e\u4e00\u70b9\uff0c\u8fd9\u6b63\u662f\u4e00\u573a\u6587\u5316\u6218\u4e89\u7684\u5f00\u59cb\u2014\u2014\u67d0\u4e2a\u6709\u6743\u52bf\u7684\u4eba\u6697\u793a\u4ed6\u4eec\u6b63\u53d7\u5230\u4e00\u79cd\u975e\u7279\u5b9a\u529b\u91cf\u7684\u538b\u8feb\uff0c\u901a\u5e38\u662f\u56e0\u4e3a\u505a\u4e86\u4e00\u4e9b\u5bf9\u6743\u529b\u6bd4\u4ed6\u4eec\u5f31\u7684\u7279\u5b9a\u7fa4\u4f53\u6765\u8bf4\u5f88\u7cdf\u7cd5\u7684\u4e8b\u60c5\u3002\u4eba\u4eec\u4e0e\u4ed6\u4eec\u7ed3\u76df\u662f\u56e0\u4e3a\u4ed6\u4eec\u5bf9\u5176\u4ed6\u4e8b\u60c5\u5e76\u4e0d\u7279\u522b\u751f\u6c14\uff0c\u5e76\u4e14\u5c06\u4efb\u4f55\u6d89\u53ca\u67d0\u4eba\u88ab\u53d6\u6d88\u6216\u538b\u8feb\u7684\u4e8b\u60c5\u89c6\u4e3a\u4ed6\u4eec\u5fc5\u987b\u8df3\u5165\u7684\u4e8b\u60c5\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u4eba\u4e5f\u6709\u5f88\u5927\u7684\u6743\u529b\u548c\u5173\u7cfb\uff0c\u5e76\u4e14\u6b63\u5728\u505a\u4e00\u4e9b\u7cdf\u7cd5\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u4ed6\u4eec\u60f3\u505a\u3002\u8fd9\u4e00\u5207\u542c\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u9634\u8c0b\uff0c\u4f46\u6211\u771f\u7684\u76f8\u4fe1\uff0c\u5c31\u50cf\u6211\u4eec\u6709\u516c\u53f8\u5927\u80c6\u58f0\u79f0\u4ed6\u4eec\u201c\u6c38\u8fdc\u8fdc\u7a0b\u201d\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u62e5\u6709\u4e00\u4e9b\u201c\u6c38\u8fdc\u9762\u5bf9\u9762\u201d\u7684\u516c\u53f8\u3002\u4ed6\u4eec\u4f1a\u5c06\u90a3\u4e9b\u4e0d\u53bb\u529e\u516c\u5ba4\u7684\u4eba\u63cf\u8ff0\u4e3a\u61d2\u60f0\u6216\u7279\u6743\u2014\u2014\u90a3\u4e9b\u5173\u5fc3\u201c\u628a\u4e8b\u60c5\u505a\u597d\u201d\u7684\u4eba\u5c06\u6210\u4e3a\u901a\u52e4\u5230\u529e\u516c\u5ba4\u5e76\u505a\u4ed6\u4eec\u5728\u5bb6\u505a\u7684\u76f8\u540c\u5de5\u4f5c\u7684\u4eba\u4eba\uff0c\u4e5f\u51fa\u73b0\u5728\u6bcf\u4e2a\u4eba\u90fd\u5047\u88c5\u505a\u7b14\u8bb0\u4f46\u5b9e\u9645\u4e0a\u5728\u770b Twitter \u7684\u4f1a\u8bae\u4e2d\u3002\n\u201c\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u201d\u8fd0\u52a8\u6b63\u5728\u83b7\u5f97\u52a8\u529b\uff0c\u56e0\u4e3a\u5b83\u542c\u8d77\u6765\u4e0d\u9519\uff0c\u5e76\u4e14\u9690\u7ea6\u5730\u4e0e COVID-19 \u7684\u7ed3\u675f\u6709\u5173\uff08\u76ee\u524d\u8fd8\u6ca1\u6709\u7ed3\u675f\uff09\u3002\u8fd9\u4e5f\u662f\u6709\u94b1\u7684\u9ad8\u7ba1\u4eec\u559c\u6b22\u542c\u5230\u7684\u8bdd\uff0c\u56e0\u4e3a\u529e\u516c\u5ba4\u91cc\u6ca1\u6709\u4eba\uff0c\u4ed6\u4eec\u89c9\u5f97\u4eba\u4eec\u53ea\u662f\u5728\u5bb6\u91cc\u95f2\u901b\uff0c\u800c\u4e0d\u662f\u5f53\u4ed6\u4eec\u5728\u529e\u516c\u5ba4\u65f6\uff0c\u4e00\u4e2a\u4ece\u6765\u6ca1\u6709\u4eba\u95f2\u901b\u7684\u5730\u65b9\uff0c\u5c24\u5176\u662f\u4e0d\u662f\u6211\u3002\u534e\u5c14\u8857\u65e5\u62a5\u7684\u201c\u8001\u677f\u5e0c\u671b\u4f60\u56de\u5230\u529e\u516c\u5ba4\u201d\u3002\u5c31\u50cf\uff0c\u73b0\u5728\u201d\u662f\u8fd9\u79cd\u5ba3\u4f20\u7684\u53e6\u4e00\u90e8\u5206\uff0c\u5c06\u8fdc\u7a0b\u5de5\u4f5c\u89c6\u4e3a\u4e00\u79cd\u798f\u5229\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u6709\u6548\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5f15\u7528\u62b5\u62bc\u8d37\u6b3e\u516c\u53f8\u603b\u88c1 Mat Ishbia \u7684\u8bdd\u8bf4\uff1a\u201c\u6211\u4e0d\u9700\u8981\u4e00\u53a2\u60c5\u613f-\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u4e0a\u5e02\u7684 UWM Holdings Corp. \u603b\u88c1\u517c\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u7279\u00b7\u4f0a\u4ec0\u6bd4\u4e9a (Mat Ishbia) \u8bf4\u3002 \u201c\u6211\u4ece\u6765\u6ca1\u6709\u5728\u8fd9\u4ef6\u4e8b\u4e0a\u52a8\u6447\u8fc7\u3002\u6211\u4eec\u5728\u4e00\u8d77\u66f4\u597d\u3002\u5982\u679c\u60a8\u62e5\u6709\u4ee4\u4eba\u60ca\u53f9\u7684\u6587\u5316\uff0c\u4ee5\u53ca\u80fd\u591f\u4e00\u8d77\u534f\u4f5c\u548c\u5de5\u4f5c\u7684\u4f18\u79c0\u4eba\u624d\uff0c\u60a8\u5c31\u4f1a\u5e0c\u671b\u4ed6\u4eec\u4e00\u8d77\u5728\u529e\u516c\u5ba4\u5de5\u4f5c\u3002\u201d\u81ea\u7136\u5730\uff0c\u4ed6\u4eec\u7684\u73bb\u7483\u95e8\u63cf\u8ff0\u4e86\u4e00\u79cd\u6210\u529f\u7684\u6587\u5316\uff0c\u5728\u8fd9\u79cd\u6587\u5316\u4e2d\uff0c\u4f1f\u5927\u7684\u4eba\u5408\u4f5c\uff0c\u63cf\u8ff0\u4e86\u201c\u627f\u4fdd\u73af\u5883 [\u5373] \u76f8\u5f53\u6709\u5bb3\u201d\uff0c\u201c\u5bb9\u6613\u88ab\u6b3a\u8d1f\u7684\u804c\u4f4d\u201d\uff0c\u66f4\u4ee4\u4eba\u62c5\u5fe7\u7684\u662f\uff0c\u5c06\u4ed6\u4eec\u63cf\u8ff0\u4e3a\u201c\u4e0d\u662f\u4e00\u4e2a\u516c\u53f8\uff0c\u5b83\u662f\u4e00\u79cd\u90aa\u6559 [\u6807\u70b9\u7b26\u53f7\u548c\u8bed\u6cd5]\u4ed6\u4eec\u7684]\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u201c......\u4ee5\u5de5\u4f5c/\u751f\u6d3b\u5e73\u8861\u7684\u65b9\u5f0f\u5356\u7ed9\u4f60\uff0c\u800c\u4f60\u5374\u6ca1\u6709\uff08\u6bcf\u5929\u8d77\u5e8a\u548c\u78e8\u7ec3 11 \u5c0f\u65f6\u662f\u4e0d\u9053\u5fb7\u7684\uff09\u3002\u201d\u6211\u60f3\uff08\u5f15\u7528\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u7684\u6587\u7ae0\uff09\u201c\u4ed6\u7684\u5458\u5de5\u51e0\u4e4e\u6ca1\u6709\u53cd\u5bf9\u5168\u804c\u56de\u5f52\u201d\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u4ed6\u7684\u516c\u53f8\u6b3a\u8d1f\u4ed6\u4eec\u7684\u5458\u5de5\u3002\u8fd9\u5f53\u7136\u4ee5\u91cd\u8fd4\u5de5\u4f5c\u5c97\u4f4d\u7684\u54e8\u58f0\u7ed3\u675f\u2014\u2014\u201c\u4ed6\u4eec\u6b63\u5728\u7b49\u5f85\u516c\u53f8\u9886\u5bfc\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4ed6\u4eec\u4e0d\u60f3\u505a\u51fa\u51b3\u5b9a\u3002\u5f53\u4f60\u662f\u9886\u5bfc\u8005\u65f6\uff0c\u4f60\u5b9e\u9645\u4e0a\u5fc5\u987b\u505a\u51fa\u51b3\u5b9a\u3002\u201d\u6700\u540e\uff0c\u6211\u4eec\u6709\u4e13\u4e1a\u7248\u7684\u201c\u597d\u5427\uff0c\u6709\u4eba\u4e0d\u5f97\u4e0d\u8bf4\uff01\u201d\u6765\u81ea\u4e00\u4e2a\u663e\u7136\u5bf9\u4ed6\u7684\u6587\u5316\u4e00\u65e0\u6240\u77e5\u6216\u4e0d\u5728\u4e4e\u7684\u4eba\uff0c\u7531\u4e00\u4f4d\u975e\u5e38\u81ea\u5728\u7684\u8bb0\u8005\u652f\u6301\uff0c\u786e\u4fdd\u6709\u9002\u5f53\u7684\u201c\u6709\u6bd2\u6587\u5316[\u6ca1\u6709]\u5de5\u4f5c/\u751f\u6d3b\u5e73\u8861[\u548c]\u5bf9\u4f60\u4e00\u6574\u5929\u8fdb\u884c\u5fae\u89c2\u7ba1\u7406\u7684\u9886\u5bfc\u8005\uff0c\u201d\u5f15\u7528\u548c\u7814\u7a76\u82b1\u4e86\u6211\u51e0\u5206\u949f\u7684\u65f6\u95f4\u624d\u627e\u5230\u3002\u8fd9\u662f\u5de5\u4f5c\u573a\u6240\u7684\u8054\u5408\u5ba3\u4f20 - \u5c06\u7ba1\u7406\u89c6\u4e3a\u4e3a\u4e86\u4ed6\u4eec\u7684\u201c\u6587\u5316\u201d\u548c\u201c\u6210\u529f\u201d\u800c\u52aa\u529b\u8ba9\u4eba\u4eec\u91cd\u65b0\u56e2\u7ed3\u5728\u4e00\u8d77\uff0c\u5a92\u4f53\u548c\u5176\u4ed6\u4eba\u9ad8\u5174\u5730\u5f15\u7528\u4ed6\u4eec\u800c\u6ca1\u6709\u6279\u8bc4\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u66f4\u53ef\u53e3\u7684\u6545\u4e8b\u544a\u8bc9\u4ed6\u4eec\u7684\u5e7f\u544a\u5546\u548c\u80a1\u4e1c\u3002\u4e94\u4e09\u94f6\u884c\u5728\u6587\u7ae0\u4e2d\u58f0\u79f0\u4ed6\u4eec\u4e0d\u53ef\u80fd\u6210\u4e3a\u4e00\u5bb6\u51fa\u8272\u7684\u8fdc\u7a0b\u5de5\u4f5c\u516c\u53f8\uff0c\u201d\u901a\u8fc7\u8bf4\u4eba\u4eec\u65e0\u6cd5\u8ddf\u8e2a\u4e00\u4e2a\u90e8\u95e8\u5bf9\u53e6\u4e00\u4e2a\u90e8\u95e8\u8bf4\u7684\u8bdd\uff0c\u5e76\u4e14\u9879\u76ee\u56e0\u4eba\u5458\u5206\u6563\u800c\u9677\u5165\u505c\u987f\u662f\u5408\u7406\u7684\uff0c\u800c\u4e14\u95ee\u9898\u662f\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u800c\u4e0d\u662f\u7ec4\u7ec7\u4e0d\u64c5\u957f\u3002\u5173\u4e8e\u8fd9\u4e9b\u5927\u516c\u53f8\u7684\u5927\u6545\u4e8b\u6709\u5f88\u591a\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u9ad8\u7ba1\u6b63\u5728\u79ef\u6781\u63a8\u52a8\u4e00\u79cd\u53d9\u4e8b\u6765\u652f\u6301\u4ed6\u4eec\u5bf9\u529e\u516c\u5ba4\u7684\u611a\u8822\u7684\u8001\u6d3e\u5e7b\u60f3\u3002 CenterPoint \u9996\u5e2d\u6267\u884c\u5b98 Dave Lesar \u544a\u8bc9\u8be5\u6742\u5fd7\uff0c\u529e\u516c\u5ba4\u201c\u4fc3\u8fdb\u4e86\u6211\u4eec\u5458\u5de5\u4e4b\u95f4\u7684\u66f4\u5927\u534f\u4f5c\uff0c\u5e76\u4f7f\u6211\u4eec\u80fd\u591f\u6267\u884c\u65b0\u7684\u957f\u671f\u589e\u957f\u6218\u7565\u201d\uff0c\u6b64\u65f6\u8bb0\u8005\u51b3\u5b9a\u505c\u6b62\u601d\u8003\u5e76\u7ee7\u7eed\u524d\u8fdb\u3002\n\u867d\u7136\u8fd9\u7bc7\u6587\u7ae0 - \u5c31\u50cf\u4ed6\u4eec\u4e00\u76f4\u505a\u7684\u90a3\u6837 - \u6700\u7ec8\u8fdb\u5165\u4e86\u5047\u88c5\u8fdc\u7a0b\u5de5\u4f5c\u6709\u65f6\u662f\u597d\u7684\u9886\u57df\uff0c\u4f46\u504f\u8fdc\u5730\u533a\u7684\u7814\u7a76\u548c\u62a4\u7406\u91cf\u5145\u5176\u91cf\u662f\u8106\u5f31\u7684\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e0e\u671f\u520a\u4e00\u6837\uff0c\u5b83\u4e3b\u8981\u5c06\u8fdc\u7a0b\u4f5c\u4e3a\u5bf9\u89c4\u8303\u7684\u5bf9\u7acb\u9762\u2014\u2014\u8fd9\u662f\u56de\u5230\u529e\u516c\u5ba4\u2014\u2014\u800c\u4e0d\u662f\u53ef\u884c\u7684\u66ff\u4ee3\u65b9\u6848\u3002\u8fdc\u7a0b\u7684\u6574\u4e2a\u6846\u67b6\u662f\u4f7f\u7528\u90a3\u4e9b\u56e0\u4e3a\u4e0d\u5141\u8bb8\u5728\u5bb6\u5de5\u4f5c\u800c\u8f9e\u804c\u7684\u4eba\u7684\u7ecf\u5178\u7edf\u8ba1\u6570\u636e\u5b8c\u6210\u7684 - \u5e76\u4e14\u5f88\u5c11\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u5c06\u8fd9\u4e9b\u516c\u53f8\u89c6\u4e3a\u5f02\u5e38\u503c\u4ee5\u5916\u7684\u4efb\u4f55\u5176\u4ed6\u516c\u53f8\u3002\u6211\u4e00\u518d\u8bf4\u8fc7\uff0c\u8fd9\u662f\u4e00\u4ee3\u4eba\u7684\u4e8b\u60c5\uff0c\u6211\u575a\u6301\u3002\u867d\u7136\u4f5c\u8005\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53ef\u80fd\u5f88\u5e74\u8f7b\uff0c\u4f46\u4ed6\u80cc\u540e\u7684\u7f16\u8f91\u529b\u91cf\u548c\u6587\u7ae0\u7684\u4e3b\u9898\u90fd\u662f\u8001\u4e00\u8f88\u548c\u9ad8\u7ba1\u3002\u884c\u653f\u6559\u6d3e\u5e0c\u671b\u5c06\u4eba\u4eec\u63a8\u56de\u529e\u516c\u5ba4\uff0c\u5e76\u6545\u610f\u5c06\u81ea\u5df1\u5851\u9020\u6210\u8fdc\u7a0b\u5de5\u4f5c\u81ea\u7531\u9700\u6c42\u7684\u53d7\u5bb3\u8005\uff0c\u8bc1\u660e\u91cd\u8fd4\u529e\u516c\u5ba4\u5bf9\u4ed6\u4eec\u4e0d\u53c2\u4e0e\u6216\u4e0d\u5f97\u4e0d\u5904\u7406\u540e\u679c\u7684\u6587\u5316\u6709\u597d\u5904\u7684\u3002\u8fd9\u4e9b\u6587\u7ae0\u7684\u5b58\u5728\u4e0d\u662f\u4e3a\u4e86\u8bb2\u8ff0\u4e00\u4e2a\u771f\u5b9e\u7684\u6545\u4e8b\uff0c\u800c\u662f\u4e3a\u4e86\u5e2e\u52a9\u6253\u538b\u767d\u9886\uff0c\u8ba9\u4ed6\u4eec\u6839\u636e\u865a\u5047\u7684\u8f76\u4e8b\u5e9f\u8bdd\u56de\u5230\u529e\u516c\u5ba4\u3002\u8fd9\u79cd\u5ba3\u4f20\u6765\u81ea\u4e00\u4e2a\u7ba1\u7406\u7cbe\u82f1\uff0c\u4ed6\u4eec\u89c9\u5f97\u81ea\u5df1\u5931\u53bb\u4e86\u5bf9\u5de5\u4eba\u7684\u63a7\u5236\uff0c\u8fd9\u662f\u4ed6\u4eec\u6700\u521d\u8ba9\u4ed6\u4eec\u7559\u5728\u529e\u516c\u5ba4\u7684\u552f\u4e00\u539f\u56e0\u3002\u5982\u679c\u6ca1\u6709\u529e\u516c\u5ba4\uff0c\u5458\u5de5\u53ef\u80fd\u4f1a\u5f00\u59cb\u8d28\u7591\u4ed6\u4eec\u662f\u5426\u5f97\u5230\u4e86\u516c\u5e73\u7684\u4ea4\u6613\uff0c\u6216\u8005\u8bc4\u4f30\u4ed6\u4eec\u7684\u7ecf\u7406\u548c\u961f\u53cb\u662f\u5426\u771f\u7684\u505a\u4e86\u4efb\u4f55\u4e8b\u60c5\u3002\u5728\u529e\u516c\u5ba4\uff0c\u5c06\u516c\u53f8\u95ee\u9898\u5f52\u548e\u4e8e\u4e2a\u4eba\u5931\u8d25\u8981\u5bb9\u6613\u5f97\u591a\u2014\u2014\u4f46\u5f53\u4f60\u5728\u5bb6\u65f6\uff0c\u4f5c\u4e3a\u4e00\u540d\u5458\u5de5\uff0c\u4f60\u66f4\u5bb9\u6613\u5ba2\u89c2\u5730\u770b\u5f85\u4e8b\u60c5\u3002", "note_en": "In one of the more bizarre op-eds I\u2019ve ever read, the New York Times  again chose to empower the forces against remote work, running  an insufferable op-ed by the co-founder of a law firm. The screed is exactly the thing you  don\u2019t give space to if you\u2019re looking to give a balanced view on a subject, telling the tale of a group of lawyers that were forced back to the office in  May 2020. It includes some incredible anecdotes - workers encouraged to drive in as they \u201cwanted [workers] driving to work and supporting [their] many energy-sector clients,\u201d anonymous clients that allegedly were jealous of their in-person office - and reads entirely like something that was published specifically because the New York Times couldn\u2019t actually get a reporter to have a researched opinion that was anti-remote work.\n It\u2019s almost as if the organization itself wants people to return to the office but can\u2019t find the evidence to do so and thus has turned to their opinion page to justify it with anecdotal bullshit. One might say I\u2019m paranoid if the Times was not also hiring a  \u201cBack to Work\u201d newsletter writer:\n  This position, while potentially able to provide a balanced view on the subject, is already steeped in executive propaganda by using the \u201cback to work\u201d phrase. While seemingly innocent, the phrase suggests that everyone working from home has been on some sort of vacation with their laptop rather than doing work, and that only by returning to our big, beautiful offices can we fully work again, and see \u201cthe value of face-to-face communication.\u201d\n This culture war that I\u2019ve been warning you about hinges on the fact that many of these people cannot find a real justification to go back to the office. The law firm in question justifies their decision to not go remote based on an entire five weeks of seeing if it\u2019d work (and, apparently, several lawyers  had already been going in!), proudly boasting about how \u201ccompanies in energy, health care and tech\u2026.jealously applauded [their] decision in private conversations.\u201d\n Nevertheless, this is the fuel that the executive class is pumping out - that a big, successful law firm went back to the office and that there are  many more people that wish to go back to the office being cruelly silenced, one might even say, \u201ccanceled\u201d for saying that people should be able to work remotely. The person writing this op-ed also says that these companies \u201cfeared being second-guessed by stockholders and worried about problems that could arise from reopening offices.\u201d And, of course they had a record year, which proves that remote work is stupid, and they are smart.\n I want to be clear that this is exactly how a culture war begins - someone powerful intimates that they are being oppressed by a non-specific force, usually for doing something that sucks for a specific group of people that have less power than they do. People ally with them because they are non-specifically mad at other things and see anything that involves someone being cancelled or oppressed as something that they must jump into. In many cases, these people also have a great deal of power and connections and are doing something shitty because they want to do it.\n  This all sounds like a conspiracy, but I truly believe, just as we\u2019ve had companies boldly claim they\u2019re \u201cremote forever,\u201d that we\u2019re going to have a few that are \u201cin-person forever.\u201d They will frame those that don\u2019t go to the office as lazy or privileged - that those that care about \u201cgetting shit done\u201d are going to be the ones that commute into the office and do the same work they\u2019d do at home in person, and also appear in meetings where everyone is pretending to be taking notes but really looking at Twitter.\n  The \u201cback to work\u201d movement is gaining momentum because it  sounds nice, and it\u2019s vaguely connected to the end of COVID-19 (which is currently very much not over). It\u2019s also something that well-moneyed executives love to hear, because without people in an office, they feel like people are just at home dicking around, as opposed to when they\u2019re in the office, a place where nobody dicks around ever, especially not me. The Wall Street Journal\u2019s \u201c The Boss Wants You Back in the Office. Like, Now\u201d is yet another piece of this propaganda that frames remote work as a perk rather than an efficient way to do work, quoting Mat Ishbia, the president of a mortgage company, saying:\n \u201cI don\u2019t need to be wishy-washy,\u201d said Mat Ishbia, president and CEO of United Wholesale Mortgage, which went public as\u00a0 UWM Holdings\u00a0Corp.\u00a0earlier this year. \u201cI have never wavered on this. We are better together. If you have an amazing culture, and great people that collaborate and work together, you want them in the office together.\u201d\n Naturally,  their glassdoor describes a winning culture where great people collaborate, describing an \u201c Underwriting environment [that is] is fairly toxic,\u201d \u201c easily bulliable positions,\u201d and more worryingly describes them as \u201c NOT A FIRM ITS A CULT [punctuation and grammar theirs],\u201d where they \u201c\u2026sell you on a work/life balance and you have none (rise and grind 11 hr days is not ethical).\u201d I imagine the reason that (quoting the Journal article) \u201cthere has been little resistance from his staff to returning full-time\u201d is because his company bullies their people. And it of course ends with the return-to-work dog whistle -\n \u201cThey\u2019re waiting for companies to lead,\u201d he said. \u201cThey don\u2019t want to make a decision. When you\u2019re the leader, you actually have to make a decision.\u201d\n Finally, we have the professional version of \u201c well somebody had to say it!\u201d from a guy who clearly either has no idea or doesn\u2019t give a shit about his culture, backed by a reporter who was quite comfortable making sure there was appropriate photography of the \u201c toxic culture [with] no work/life balance [and] leaders who micromanage your entire day,\u201d quotes and research that took me a manner of minutes to find.\n This is workplace copaganda - framing management as virtuously trying to get people back together for the sake of their \u201cculture\u201d and \u201csuccess,\u201d with the media and others happily quoting them without critique because it\u2019s a much more palatable story to tell their advertisers and shareholders. Fifth Third Bank claims in the article that they can\u2019t be a great company working remotely,\u201d justifying it by saying that people can\u2019t track of what one department is saying to another, and that projects ground to a halt because people were distributed, and that the problem was remote work, not that the organization was bad at it.\n There are so many of these big picture stories about these large companies because their executives are actively pushing a narrative to back up their stupid old-school delusions about the office. CenterPoint CEO Dave Lesar told the journal that in-office \u201cpromotes greater collaboration between our employees, and positions us to execute on our new long-term growth strategy,\u201d at which point the reporter decided to stop thinking about it and move on.\n While the article - as they always do - eventually moves into the realm of pretending that remote work can sometimes be good, the volume of research and care that goes toward the remote side is flimsy at best. In most cases, as with the journal, it mostly frames remote as a counterpoint to the norm - which is returning to the office - versus a viable alternative. The entire framing of remote is done using the classical statistics of people who will quit their jobs because they\u2019re not allowed to keep working from home - and is rarely, if ever, frames these companies as anything other than outliers.\n I have repeatedly said that this is a generational thing, and I stand by it. While the writer, in this case, may be young, the editorial forces behind him and the subjects of the article are all older generations and executives. The executive sect wants to push people back into the office and intentionally frame themselves as victims of a liberal demand for remote work, justifying the return to the office as good for a culture that they do not participate in or have to do deal with the consequences of. These articles do not exist to tell an actual story, but to help suppress white-collar workers, and make them return to the office based on spurious, anecdotal bullshit.\n This propaganda is coming from a management elite that feels themselves losing control of workers, which is the only reason that they had them in the office in the first place. Without the office, workers might begin to question whether they\u2019re getting a fair deal, or evaluate whether their managers and teammates actually do anything. In the office, it\u2019s much easier to instill company problems as a personal failing - but when you\u2019re at home, it\u2019s significantly easier for you as a worker to view things objectively.", "posttime": "2021-07-29 21:27:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6587\u5316,culture,\u529e\u516c\u5ba4", "title": "\u5f02\u5730\u6587\u5316\u5927\u6218\u6253\u54cd\uff0c\u9ad8\u7ba1\u62bd\u201c\u590d\u5de5\u201d\u5ba3\u4f20", "title_en": "Remote Culture War Has Begun, Executives Pumping Out \"Back to Work\" Propaganda", "transed": 1, "url": "https://ez.substack.com/p/the-remote-culture-war-has-begun", "via": "", "real_tags": ["\u6587\u5316", "culture", "\u529e\u516c\u5ba4"]}, {"category": "", "categoryclass": "", "imagename": "f4a83f0d2a4de6b5bb74ac470893f75c.png", "infoid": 1070181, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ca1\u6709\u4ee3\u7801\u662f\u7f16\u5199\u5b89\u5168\u53ef\u9760\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u4f73\u65b9\u5f0f\u3002\u4ec0\u4e48\u90fd\u4e0d\u5199\uff1b\u65e0\u5904\u90e8\u7f72\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u53ef\u4ee5\u60f3\u8c61\u5b83\u505a\u4efb\u4f55\u4f60\u60f3\u505a\u7684\u4e8b\u60c5\u3002\u6dfb\u52a0\u65b0\u529f\u80fd\u4e5f\u5f88\u5bb9\u6613\uff1a\u867d\u7136\u60a8\u8fd8\u6ca1\u6709\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4f46\u73b0\u5728\u662f\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u5019\u4e86\u3002\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u60a8\u53ef\u4ee5\u5b8c\u5168\u65e0\u5904\u90e8\u7f72\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5c31\u8fd9\u4e48\u7b80\u5355\u3002\u5f53\u9700\u8981\u6269\u5c55\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u60a8\u6240\u8981\u505a\u7684\u5c31\u662f\uff1a", "note_en": "No code is the best way to write secure and reliable applications. Write nothing; deploy nowhere.\n    This is just an example application, but imagine it doing anything you want. Adding new features is easy too:\n         While you still have not done anything it&#39;s time to deploy your application. By running the following command you can deploy your application absolutely nowhere.\n  It&#39;s that simple. And when it comes time to scale the application, all you have to do is:", "posttime": "2021-07-29 21:26:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u5b89\u5168\u53ef\u9760,secure,\u5e94\u7528\u7a0b\u5e8f", "title": "\u7f16\u5199\u5b89\u5168\u53ef\u9760\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6700\u4f73\u65b9\u5f0f\u3002\u4ec0\u4e48\u90fd\u4e0d\u5199\uff1b\u65e0\u5904\u90e8\u7f72\u3002", "title_en": "The best way to write secure and reliable apps. Write nothing; deploy nowhere.", "transed": 1, "url": "https://github.com/kelseyhightower/nocode", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u5b89\u5168\u53ef\u9760", "secure", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "a644dd4b9f48f4d10ccc3e922203fa44.jpg", "infoid": 1070180, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6b63\u5728\u4f7f\u7528\u7f57\u6280 K380 \u84dd\u7259\u952e\u76d8\u5728\u6211\u7684 iPhone \u4e0a\u7684 Obsidian iOS \u5e94\u7528\u7a0b\u5e8f\u4e2d\u8f93\u5165\u8fd9\u7bc7\u6587\u7ae0\uff0c\u6211\u611f\u89c9\u81ea\u5df1\u5c31\u50cf\u4e00\u4e2a 90 \u5e74\u4ee3\u7684\u8ba1\u7b97\u673a\u9ed1\u5ba2\u3002\u4e0d\u591f\uff1f\u600e\u4e48\u6837\uff1a\u6211\u53ea\u662f\u901a\u8fc7 Termius iOS \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528 Tailscale SSH \u8fde\u63a5\u5230\u5bb6\u5ead\u7f51\u7edc\u4e0a\u7684 Raspberry Pi\uff0c\u4ee5\u91cd\u65b0\u542f\u52a8 YouTube-playlist-to-podcast-feed Docker \u5bb9\u5668\u3002\u4e0d\u8981\u8bef\u4f1a\u6211\u7684\u610f\u601d\u2014\u2014\u5176\u4ed6\u4e1c\u897f\u4e5f\u5f88\u795e\u5947\uff0c\u5c24\u5176\u662f\u5c3e\u9cde\u3002\u4f46\u662f\u8fd9\u4e2a\u952e\u76d8\u5230\u7535\u8bdd\u7684\u529f\u80fd\u5f88\u91cd\u8981\u3002\u4f60\u6709\u70b9\u5fd8\u8bb0\u4e86\u4f60\u7684\u624b\u673a\u662f\u4e00\u53f0\u7535\u8111\uff0c\u5c31\u4e2a\u4eba\u800c\u8a00\u3002\u76f8\u53cd\uff0c\u5b83\u901a\u5e38\u53ea\u662f\u793e\u4ea4\u5a92\u4f53\u5669\u68a6\u7684\u8f7d\u4f53\u3002\u8003\u8651\u5230\u5728\u624b\u673a\u5e94\u7528\u7a0b\u5e8f\u4e0e\u7f51\u7ad9\uff08\u5728\u53f0\u5f0f\u673a/\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\uff09\u4e0a\u505a\u4e00\u4e9b\u534a\u8270\u5de8\u7684\u4e8b\u60c5\uff08\u4f8b\u5982\u529e\u7406\u767b\u673a\u624b\u7eed\uff09\u4e4b\u95f4\u7684\u9009\u62e9\uff0c\u6211\u603b\u662f\u9009\u62e9\u540e\u8005\u3002\u5e94\u7528\u7a0b\u5e8f\u4e2d\u603b\u662f\u7f3a\u5c11\u4e00\u4e9b\u4e1c\u897f\uff0c\u5982\u679c\u4f60\u771f\u7684\u60f3\u628a\u6240\u6709\u4e1c\u897f\u90fd\u5f04\u5f97\u5f88\u7e41\u7410\uff0c\u6211\u901a\u5e38\u4f1a\u8fd9\u6837\u505a\uff0c\u65e0\u8bba\u5982\u4f55\u4ed6\u4eec\u90fd\u4f1a\u628a\u4f60\u8e22\u5230\u4e00\u4e2a\u8e69\u811a\u7684\u7f51\u9875\u89c6\u56fe\u4e2d\u3002\u6240\u4ee5\uff0c\u5728\u4efb\u4f55\u65c5\u884c\u4e2d\uff0c\u6211\u901a\u5e38\u90fd\u662f\u7b14\u8bb0\u672c\u7535\u8111\u7684\u643a\u5e26\u8005\u3002\u53ea\u662f\uff0c\u8fd9\u4e00\u6b21\uff0c\u6211\u4e0d\u60f3\u3002\u9996\u5148\uff0c\u6211\u7684 alu-min-i-um \u4fbf\u643a\u5f0f\u8ba1\u7b97\u673a\u975e\u5e38\u7b28\u91cd\uff0c\u6211\u575a\u4fe1\u6211\u4eec\u53ea\u80fd\u5728\u8fd9\u6b21\u822a\u884c\u4e2d\u968f\u8eab\u643a\u5e26\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u6211\u6700\u8fd1\u53d1\u73b0\u5c06\u7b14\u8bb0\u672c\u7535\u8111\u5c4f\u5e55\u6253\u5f00\u8d85\u8fc7 45 \u5ea6\u4f1a\u5bfc\u81f4\u6b7b\u673a\u9ed1\u5c4f\u3002\u8fd9\u5bf9\u5929\u624d\u6765\u8bf4\u662f\u4ef6\u597d\u4e8b\uff0c\u5982\u679c\u4ed6\u4eec\u613f\u610f\u6c89\u8ff7\u4e8e 2016 \u5e74 MBP\uff08\u6211\u5f88\u6000\u7591\uff09\u3002\u4f46\u6211\u786e\u5b9e\u5e0c\u671b\u80fd\u591f\u5728\u8fd9\u6b21\u65c5\u884c\u4e2d\u4e3a\u6211\u7684\u4e66\u8fdb\u884c\u7f16\u8f91\u3002\u4f60\u6c38\u8fdc\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u7075\u611f\u4f1a\u6765\uff08\u901a\u5e38\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u5927\u7ea6\u5728\u5348\u591c\uff0c\u5f53\u6211\u5df2\u7ecf\u4e0a\u5e8a\u7761\u89c9\u65f6\uff09\uff0c\u867d\u7136\u6211\u662f\u76f8\u5f53\u5feb\u7684\u62c7\u6307\u6253\u5b57\u5458\uff0c\u4f46\u6211\u53ea\u662f\u611f\u89c9\u4e0d\u5230\u624b\u673a\u952e\u76d8\u4e0a\u7684\u6d41\u52a8\u611f.\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u84dd\u7259\u5c0f\u53ef\u7231\u85cf\u5728\u58c1\u6a71\u91cc\u3002\u6211\u8d2d\u4e70\u4e86\u5b83\u4f5c\u4e3a\u9001\u7ed9 Carly \u7684\u793c\u7269\uff0c\u8fd9\u6837\u5979\u5c31\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u5199\u4e1c\u897f\uff08\u8fd9\u4e0e\u6211\u5728\u8fd9\u91cc\u8c08\u8bba\u7684\u9700\u6c42\u975e\u5e38\u76f8\u4f3c\uff09\u3002\u6211\u4eec\u5728\u6c42\u7231\u521d\u671f\u5c31\u5e7f\u6cdb\u8ba8\u8bba\u4e86\u5bf9\u79fb\u52a8\u952e\u76d8\u4e66\u5199\u5de5\u5177\u7684\u9700\u6c42\uff0c\u6211\u4eec\u751a\u81f3\u60f3\u5230\u4e86\u81ea\u5df1\u6784\u5efa\u5b83\u7684\u60f3\u6cd5\uff08\u63d0\u793a\uff1a\u6211\u4ecd\u7136\u5728\u8003\u8651\u8fd9\u4e2a\u60f3\u6cd5\uff09\u3002\n\u6211\u4eec\u5e76\u4e0d\u5b64\u5355\u3002\u770b\u770b FreeWrite \u4ea7\u54c1\uff0c\u5c3d\u7ba1\u5b83\u51e0\u4e4e\u5b8c\u5168\u7b26\u5408\u6211\u4eec\u7684\u68a6\u60f3\u4ea7\u54c1\uff08\u5168\u5c3a\u5bf8\u952e\u76d8\u3001\u7c7b\u4f3c\u7535\u5b50\u58a8\u6c34\u7684\u5c4f\u5e55\u548c\u8d85\u957f\u7684\u7535\u6c60\u5bff\u547d\uff09\uff0c\u4f46\u4e0d\u77e5\u4f55\u6545\u4e0d\u592a\u9002\u5408\u6211\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u662f\u8ba1\u7b97\u5668\u5927\u5c0f\u7684\u5c4f\u5e55\uff08\u4ee5\u53ca\u53ef\u611f\u77e5\u7684\u7b28\u91cd\u5c3a\u5bf8\uff09\u8ba9\u6211\u611f\u5230\u5bb3\u6015\u3002\u6211\u4eec\u60f3\u8981\u4e00\u4e9b\u53ef\u4ee5\u653e\u5728\u94b1\u5305\u6216\u53e3\u888b\u91cc\u7684\u4e1c\u897f\u3002\u73b0\u5728\u8fd9\u6b3e\u84dd\u7259\u952e\u76d8\u4e0d\u9002\u5408\u653e\u5728\u53e3\u888b\u91cc\uff0c\u4f46\u5b83\u4e5f\u975e\u5e38\u4fbf\u5b9c\uff0c\u8db3\u4ee5\u8ba9\u6211\u5728\u4e22\u5931\u5b83\u6216\u6d12\u4e0a\u5564\u9152\u65f6\u4e0d\u4f1a\u611f\u5230\u6cae\u4e27\u3002\u6240\u4ee5\uff0c\u6211\u60f3\u6211\u4f1a\u5728\u8fd9\u6b21\u65c5\u884c\u4e2d\u5c1d\u8bd5\u4e00\u4e0b\u3002\u6211\u88ab\u5356\u4e86\u3002\u5728\u8fd9\u4ef6\u4e8b\u4e0a\u6253\u5b57\u5f88\u6709\u8da3\uff0c\u6211\u60f3\u6211\u4f1a\u628a\u5b83\u5e26\u5230\u66f4\u591a\u5730\u65b9\u3002\u9664\u4e86\u50cf Tailscale \u548c Termius \u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u6211\u53ef\u4ee5\u628a\u6211\u7684\u667a\u80fd\u624b\u673a\u5f53\u4f5c\u6211\u771f\u6b63\u7535\u8111\u7684\u54d1\u7ec8\u7aef\u3002\u5361\u8389\u8fd8\u6ca1\u6709\u5c1d\u8bd5\u8fc7\u952e\u76d8\uff0c\u4f46\u6211\u62b1\u6709\u5e0c\u671b\u3002\u5979\u73b0\u5728\u6b63\u5728\u770b\u7740\u6211\u8f7b\u6572\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u5f00\u59cb\u7684\u793c\u7269\u3002\u540c\u65f6\uff0c\u6211\u5c06\u7ee7\u7eed\u8003\u8651\u5c06\u952e\u76d8\u4f5c\u4e3a\u8ba1\u7b97\u673a\uff0c\u65e0\u8bba\u662f\u5728 eBay \u4e0a\u641c\u7d22 Commodore VIC-20\uff0c\u67e5\u770b\u6700\u65b0\u7684 Raspberry Pi 400 \u952e\u76d8\u8ba1\u7b97\u673a\uff0c\u6216\u52fe\u52d2\u51fa\u6211\u4eec\u5c1a\u672a\u5b9e\u73b0\u7684\u201c\u7528\u4e8e\u5199\u4f5c\u7684 Kindle\u201d\u3002\u5728\u540e\u4e00\u9879\u4e0a\uff0c\u6211\u4e5f\u5c06 ReMarkable 2 \u89c6\u4e3a\u6f5c\u5728\u7684\u83b7\u80dc\u8005\uff0c\u4f46\u7f3a\u5c11\u952e\u76d8\u548c\u7f3a\u5c11\u80cc\u5149\u4f7f\u6211\u671b\u800c\u5374\u6b65\u2026\u2026\u76ee\u524d\u3002\u5982\u679c\u4ed6\u4eec\u5b8c\u5168\u8ddf\u8e2a\u6389\u8f66\u5206\u6790\uff0c\u6211\u73b0\u5728\u5c31\u8981\u4e3a\u6211\u7684\u6240\u4f5c\u6240\u4e3a\u9053\u6b49\u3002\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u7ee7\u7eed\u91cd\u65b0\u5b9a\u4f4d\u6211\u3002\u603b\u6709\u4e00\u5929\u4f60\u4f1a\u5f97\u5230\u6211\u3002", "note_en": "I&#39;m typing this post on my iPhone in the  Obsidian iOS app using a  Logitech K380 Bluetooth keyboard and I feel like a 90s computer hacker.\n Not enough? How about this: I just SSH&#39;ed into a  Raspberry Pi on my home network using  Tailscale via the  Termius iOS app to restart a  YouTube-playlist-to-podcast-feed Docker container.\n Don&#39;t get me wrong -- the other stuff is pretty magical, too, especially Tailscale. But this keyboard-to-phone takes the cake.\n    You kinda forget that your phone is a computer, personally-speaking. Instead, it&#39;s usually just a vehicle for social media nightmares. Given the choice between doing something semi-arduous, like checking in for a flight, on a phone app vs the website (on a desktop/laptop), I always choose the latter. Somethings always missing from the app, and if you really want to get all fiddly, which I usually do, they kick you out to a crappy webview anyway.\n So, I&#39;m usually a laptop-bringer on any trip. Except, this time, I didn&#39;t want to. Firstly, my alu-min-i-um portable computer is just plain heavy and bulky, and I was adamant that we were going carry-on only on this voyage. Even more damning, I recently discovered that opening the laptop screen beyond 45 degrees results in the black screen of death. That&#39;s something for the Geniuses, if they&#39;re willing indulge an admittedly long in the tooth 2016 MBP (I&#39;m doubtful).\n But I did want to be able to work on edits for my book on this trip. You never know when inspirations gonna strike (usually, for me, around midnight, when I&#39;ve already gone to bed), and while I&#39;m reasonably fast thumb-typist, I just don&#39;t feel the flow feels on the phone keyboard.\n Luckily, we had this little Bluetooth cutie tucked away in a closet. I&#39;d purchased it as a gift for Carly, so that she could write stuff on the go (very much the same need I&#39;m talking about here). We&#39;d extensively discussed the need for a mobile keyboard writing thingie early in our courtship, and we even entertained the idea of building it ourselves (hint: I&#39;m still entertaining this idea).\n We&#39;re not alone. See the  FreeWrite products, which somehow don&#39;t quite fit the bill for me, despite almost exactly delivering on our dream product (full-sized keyboard, e-ink-like screen, and supreme battery life). Mostly it&#39;s the calculator-sized screen (and the perceived bulky size) that&#39;s scaring me away. We want something that you can keep in a purse or a pocket.\n Now this Bluetooth keyboard doesn&#39;t fit in a pocket, but it&#39;s also pretty darn cheap, enough so that I&#39;m not going to be devastated if I lose it or spill a beer on it.\n So, I thought I&#39;d give it a try this trip. And I&#39;m sold. It&#39;s legit fun to type on this thing and I think I&#39;m going to bring it with me more places. Along with things like Tailscale and Termius, I can treat my smart phone as a dumb terminal to my real computers.\n Carly still hasn&#39;t given the keyboard a try, but I&#39;m holding out hope. She&#39;s watching me tap-tap away right now, and I think this is a gift that just takes a while to kick in.\n And, meanwhile, I&#39;m going to keep thinking about keyboards-as-computers, whether that&#39;s scouring eBay for Commodore VIC-20s, ogling over the latest  Raspberry Pi 400 keyboard-computer, or sketching out our still-yet-to-be-realized &#34;Kindle for writing.&#34;\n On the latter item, I&#39;m also ogling the  ReMarkable 2 as an potential winning entrant, but the lack of keyboard and the lack of backlight are keeping me away... for now. If they&#39;re tracking dropped cart analytics at all, I&#39;m just going to apologize now for what I&#39;ve been doing. You can keep retargeting me if you&#39;d like. You&#39;ll get me one day.", "posttime": "2021-07-29 21:26:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,\u667a\u80fd\u624b\u673a,phone,\u952e\u76d8", "title": "\u667a\u80fd\u624b\u673a\u3001\u54d1\u7ec8\u7aef", "title_en": "Smart Phone, Dumb Terminal", "transed": 1, "url": "https://www.charlieharrington.com/smart-phone-dumb-terminal/", "via": "", "real_tags": ["\u624b\u673a", "\u667a\u80fd\u624b\u673a", "phone", "\u952e\u76d8"]}, {"category": "", "categoryclass": "", "imagename": "56f34d0a0b4e3a7514cfb4da05bb22b5.png", "infoid": 1070179, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u56fe\u5c55\u793a\u4e86\u6240\u8c13\u7684\u201c\u4e24\u4fbf\u58eb\u5bbf\u9189\u201d\u3002\u8fd9\u662f\u4e00\u4e2a\u5728\u8c37\u6b4c\u4e0a\u8d8a\u6765\u8d8a\u5e38\u89c1\u7684\u672f\u8bed\uff0c\u5b83\u58f0\u79f0\u63cf\u8ff0\u4e86\u4e00\u79cd\u5ec9\u4ef7\u7684\u7ef4\u591a\u5229\u4e9a\u65f6\u4ee3\u7684\u5bbf\u820d\uff0c\u5728\u8fd9\u79cd\u623f\u5b50\u91cc\uff0c\u4e0e\u652f\u4ed8\u5e8a\u4f4d\u7684\u8d39\u7528\u76f8\u6bd4\uff0c\u7a77\u4eba\u53ef\u4ee5\u66f4\u5212\u7b97\u5730\u83b7\u5f97\u4f4f\u6240\u548c\u8fc7\u591c\u7684\u4f11\u606f\u3002\u82b1\u8d39\u56db\u4fbf\u58eb\u6216\u4e94\u4fbf\u58eb\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u4f5c\u4e3a\u62a5\u916c\uff0c\u7a77\u4eba\u5c06\u88ab\u5141\u8bb8\u7761\u89c9\uff0c\u4e00\u6b21\u51e0\u4e2a\u4eba\uff0c\u62ab\u200b\u200b\u5728\u4e00\u6839\u7ef3\u5b50\u4e0a\uff0c\u7ef3\u5b50\u60ac\u5728\u4e00\u4e2a\u623f\u95f4\u7684\u80f8\u524d\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u4eba\u4eec\u666e\u904d\u63a5\u53d7\u8fd9\u6837\u7684\u5730\u65b9\u786e\u5b9e\u5b58\u5728\uff0c\u5728\u8c37\u6b4c\u56fe\u7247\u641c\u7d22\u4e2d\u641c\u7d22\u201ctwopenny hangover\u201d\u8fd9\u4e2a\u8bcd\u4f1a\u53d1\u73b0\u81f3\u5c11\u6709\u56db\u5f20\u4e0d\u540c\u7684\u56fe\u7247\uff0c\u636e\u8bf4\u63cf\u7ed8\u4e86\u4e00\u4e9b\u4f8b\u5b50\u3002\u8fd9\u5e45\u4ece\u8fdc\u5904\u770b\u662f\u6700\u8be6\u7ec6\u548c\u6700\u6e05\u6670\u7684\uff0c\u5b9e\u9645\u4e0a\u662f 1978 \u5e74\u8096\u6069\u5eb7\u7eb3\u5229 / \u8fc8\u514b\u5c14\u514b\u83b1\u987f\u96c0\u8dc3\u7535\u5f71\u300a\u706b\u8f66\u5927\u52ab\u6848\u300b\u7684\u5267\u7167\uff0c\u80cc\u666f\u8bbe\u5b9a\u5728 1850 \u5e74\u4ee3\u4e2d\u671f\u7684\u4f26\u6566\uff1b\u5176\u4ed6\u4eba\u5df2\u88ab\u62c9\u5165\u4e0b\u9762\u7684\u753b\u5eca\u3002\u5176\u4e2d\u4e24\u4e2a\u4e4d\u4e00\u770b\u975e\u5e38\u76f8\u4f3c\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u65f6\u53ef\u4ee5\u770b\u51fa\u5b83\u4eec\u63cf\u7ed8\u4e86\u4e00\u79cd\u622a\u7136\u4e0d\u540c\u7684\u4f4f\u5bbf\u3002\u636e\u6211\u6240\u77e5\uff0c\u201c\u53cc\u4fbf\u58eb\u5bbf\u9189\u201d\u4e00\u8bcd\uff08\u6709\u65f6\u5728\u7f51\u7edc\u8d44\u6e90\u4e2d\u88ab\u7834\u574f\uff0c\u6210\u4e3a\u201c\u4fbf\u58eb\u5bbf\u9189\u201d\uff09\u8d77\u6e90\u4e8e\u4e54\u6cbb\u00b7\u5965\u5a01\u5c14\uff0c\u4ed6\u5728\u5176\u6781\u5177\u5f71\u54cd\u529b\u7684\u300a\u5df4\u9ece\u548c\u4f26\u6566\u7684\u5927\u8dcc\u300b\uff081933\uff09\u4e2d\uff0c\u8fd9\u672c\u4e66\u662f\u6839\u636e\u4ed6\u81ea\u5df1\u5728\u5927\u8427\u6761\u65f6\u671f\u751f\u6d3b\u5728\u8d2b\u56f0\u8fb9\u7f18\u7684\u7ecf\u5386\u5199\u6210\u7684\u2014\u2014\u5199\u5230\u5728\u4e24\u4fbf\u58eb\u5bbf\u9189\u65f6\uff0c\u623f\u5ba2\u5728\u957f\u51f3\u4e0a\u6392\u6210\u4e00\u6392\uff1b\u4ed6\u4eec\u9762\u524d\u6709\u4e00\u6839\u7ef3\u5b50\uff0c\u4ed6\u4eec\u9760\u5728\u7ef3\u5b50\u4e0a\uff0c\u597d\u50cf\u9760\u5728\u6805\u680f\u4e0a\u3002\u4e00\u4e2a\u7537\u4eba\uff0c\u5e7d\u9ed8\u5730\u79f0\u4e3a\u8d34\u8eab\u7537\u4ec6\uff0c\u5728\u65e9\u4e0a\u4e94\u70b9\u526a\u65ad\u7ef3\u5b50\u3002\u5965\u5a01\u5c14\u5e76\u6ca1\u6709\u58f0\u79f0\u81ea\u5df1\u66fe\u53c2\u89c2\u8fc7\u8fd9\u79cd\u7c7b\u578b\u7684\u65c5\u9986\u3002\u4ed6\u7684\u8be6\u7ec6\u4fe1\u606f\u6765\u81ea\u4e00\u4f4d\u7ebf\u4eba\uff0c\u4e00\u4f4d\u4ed6\u79f0\u4e3a Bozo \u7684\u4f26\u6566\u8def\u9762\u827a\u672f\u5bb6\uff0c\u5c3d\u7ba1\u4ed6\u8bf4\u4ed6\u77e5\u9053\u5df4\u9ece\u6709\u201c\u7c7b\u4f3c\u201d\u7684\u5730\u65b9\u3002\u6b64\u5916\uff0c\u4f60\u4f1a\u6ce8\u610f\u5230\uff0c\u4ed6\u5bf9\u8fd9\u4e9b\u5730\u65b9\u4f7f\u7528\u7684\u7cfb\u7edf\u7684\u63cf\u8ff0\u5b9e\u9645\u4e0a\u4e0e\u300a\u706b\u8f66\u5927\u52ab\u6848\u300b\u4e2d\u7684\u5a31\u4e50\u4e0d\u7b26\uff0c\u56e0\u4e3a\u5965\u5a01\u5c14\u5f88\u6e05\u695a\u8fd9\u4e9b\u5730\u65b9\u7684\u7537\u4eba\u7761\u5728\u5750\u59ff\u4e0a\uff0c\u53ea\u662f\u5411\u524d\u503e\u8eab\u652f\u6491\u4ed6\u4eec\u7684\u4e0a\u534a\u8eab\u5728\u7ef3\u5b50\u4e0a\u3002\u51e0\u5e74\u524d\u5728 2016 \u5e74 BBC \u7684\u7cfb\u5217\u8282\u76ee\u201c\u7ef4\u591a\u5229\u4e9a\u65f6\u4ee3\u7684\u8d2b\u6c11\u7a9f\u201d\u4e2d\u5bf9\u8fd9\u79cd\u4f4f\u5bbf\u8fdb\u884c\u4e86\u91cd\u5efa\uff0c\u5176\u4e2d\u201c\u4e00\u7ec4 15 \u540d\u5e74\u9f84\u5728 10 \u81f3 59 \u5c81\u4e4b\u95f4\u7684\u5fd7\u613f\u8005\u88ab\u8fd0\u56de\u7ef4\u591a\u5229\u4e9a\u65f6\u4ee3\u7684\u4f26\u6566\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5728\u90a3\u91cc\u751f\u6d3b\u548c\u5de5\u4f5c\u4e86\u4e09\u4e2a\u661f\u671f\u3002\u518d\u73b0\u4e86\u4f26\u6566\u4e1c\u533a\u8d1d\u65af\u7eb3\u5c14\u683c\u6797\u81ed\u540d\u662d\u8457\u7684\u8001\u5c3c\u79d1\u5c14\u8d2b\u6c11\u7a9f\u3002\u201d\u53ef\u4ee5\u5728\u8fd9\u4e2a\u7cfb\u5217\u7684\u89c6\u9891\u9884\u544a\u7247\u4e2d\u4e00\u77a5\uff0c11 \u79d2\u3002\u5c06\u76f8\u540c\u7684\u57fa\u672c\u6545\u4e8b\u8ffd\u6eaf\u5230 19 \u4e16\u7eaa\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u9700\u8981\u6ce8\u610f\u53e6\u4e00\u4e2a\u975e\u5e38\u8457\u540d\u7684\u5e10\u6237\uff0cJacob Riis \u7684\u53e6\u4e00\u534a\u5982\u4f55\u751f\u6d3b\uff0c\u8fd9\u662f\u4e00\u4f4d\u793e\u4f1a\u6539\u9769\u5bb6\u64b0\u5199\u7684\u5173\u4e8e 1880 \u5e74\u4ee3\u7ebd\u7ea6\u5e02\u8d2b\u56f0\u7ebf\u4ee5\u4e0b\u751f\u6d3b\u7684\u4e66\u3002\u91cc\u65af\u7684\u4e66\u51fa\u7248\u4e8e 1890 \u5e74\uff0c\u5c24\u5176\u4ee5\u4ed6\u7528\u6765\u8bf4\u660e\u5b83\u7684\u95ea\u5149\u7167\u7247\u800c\u8457\u79f0\u3002\u4f5c\u8005\u7528\u6574\u6574\u4e00\u7ae0\u7684\u7bc7\u5e45\u4ecb\u7ecd\u4e86\u8fd9\u5ea7\u57ce\u5e02\u7684\u201c\u5ec9\u4ef7\u65c5\u9986\u201d\uff0c\u5e76\u63cf\u7ed8\u4e86\u4ece\u76f8\u5bf9\u5065\u5eb7\u7684\u6bcf\u665a 25 \u7f8e\u5206\u7684\u5404\u79cd\u623f\u4ea7\u5411\u4e0b\u53d1\u5c55\u7684\u8fc7\u7a0b\uff0c\u5728\u8fd9\u4e9b\u623f\u4ea7\u4e2d\uff0c\u201c\u5ba2\u4eba\u201d\u81f3\u5c11\u53ef\u4ee5\u671f\u5f85\u81ea\u5df1\u7684\u5e8a\uff0c\u8106\u5f31\u7684\u9694\u65ad\uff0c\u7ecf\u8fc7 15 \u7f8e\u5206\u7684\u6f5c\u6c34\uff0c\u5c45\u6c11\u5728\u80ae\u810f\u7684\u94fa\u4f4d\u4e0a\u7761\u4e86\u56db\u5c42\u6df1\uff0c\u76f4\u5230 10 \u7f8e\u5206\u7684\u623f\u4ea7\uff0cRiis \u89c2\u5bdf\u5230\uff0c\u201c\u7528\u4e8e\u653e\u7f6e\u5367\u94fa\u8005\u8863\u670d\u7684\u50a8\u7269\u67dc\u6d88\u5931\u4e86\u3002\u4e0d\u518d\u9700\u8981\u5b83\u4e86\u3002\u8fbe\u5230\u4e86\u6d41\u6d6a\u8005\u9650\u5236\uff0c\u6ca1\u6709\u4ec0\u4e48\u53ef\u4ee5\u9501\u5b9a\u7684\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u9664\u4e86\u623f\u5ba2\u3002\u201d\u5728 10 \u7f8e\u5206\u7684\u623f\u5b50\u4e0b\u9762\u662f\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u673a\u6784\uff0c\u6bcf\u665a\u6536\u8d39 7 \u7f8e\u5206\uff0c\u5176\u4e2d\u63d0\u4f9b\u7684\u201c\u5e8a\u201d\u662f\u4e00\u6761\u4e32\u5728\u4e24\u5757\u201c\u7c97\u6728\u201d\u4e4b\u95f4\u7684\u5e06\u5e03\u6761\u3002\u6240\u6709\u8fd9\u4e9b\u5730\u65b9\u786e\u5b9e\u5b58\u5728\uff0cRiis \u4eb2\u81ea\u62dc\u8bbf\u4e86\u5b83\u4eec\uff0c\u4f46\u4ed6\u8865\u5145\u8bf4\uff0c\u4ed6\u542c\u8bf4\u6709\u4f20\u8a00\u8bf4\u53ef\u80fd\u8fd8\u4f1a\u627e\u5230\u4e00\u79cd\u66f4\u4fbf\u5b9c\u7684\u4f4f\u6240\uff0c\u5c3d\u7ba1\u201c\u636e\u6211\u6240\u77e5\uff0c\u4ece\u6765\u6ca1\u6709\u5f15\u8fdb\u5230\u8fd9\u4e2a\u56fd\u5bb6\u3002\u201d\u8fd9\u662f\u201c\u66fe\u7ecf\u5728\u67d0\u4e9b\u53e4\u8001\u7684\u4e61\u6751\u57ce\u9547\u4e2d\u88ab\u5b9e\u8df5\u8fc7\u7684\u4e1c\u897f\uff0c\u5982\u679c\u62a5\u9053\u771f\u5b9e\u7684\u8bdd\u201d[\u4ed6\u7684\u610f\u601d\u662f\u6b27\u6d32\u57ce\u9547]\uff0c\u5728\u90a3\u91cc\n\u201c\u5e8a\u201d\u7684\u4ee3\u8868\u662f\u6a2a\u8de8\u623f\u95f4\u7684\u667e\u8863\u7ef3\uff0c\u7761\u89c9\u7684\u4eba\u7528\u814b\u7a9d\u6302\u5728\u4e0a\u9762\uff0c\u6bcf\u665a\u4e00\u5206\u94b1\u3002\u65e9\u4e0a\uff0c\u8001\u677f\u53ea\u662f\u7b80\u5355\u5730\u89e3\u5f00\u4e00\u7aef\u7684\u7ef3\u5b50\uff0c\u8ba9\u5b83\u968f\u8d1f\u8f7d\u4e00\u8d77\u8d70\uff0c\u628a\u4ed6\u4eec\u53eb\u9192\uff1b\u65e0\u7591\u662f\u4e00\u79cd\u8282\u7701\u52b3\u529b\u7684\u88c5\u7f6e\uff0c\u5e76\u4e14\u975e\u5e38\u6210\u529f\u5730\u8fbe\u5230\u4e86\u9884\u671f\u7684\u76ee\u7684\u3002\u4ed6\u5bf9\u6b64\u7c7b\u623f\u5c4b\u8fd0\u4f5c\u65b9\u5f0f\u7684\u63cf\u8ff0\u4e0e\u6211\u4eec\u7535\u5f71\u4e2d\u6240\u5c55\u793a\u7684\u90a3\u79cd\u5730\u65b9\u6700\u63a5\u8fd1\uff0c\u4e5f\u4e0e\u4e00\u822c\u7684\u201c\u4e24\u4fbf\u58eb\u5bbf\u9189\u201d\u4e92\u8054\u7f51\u6bd4\u55bb\u6700\u63a5\u8fd1\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c\u91cc\u65af\u542c\u8bf4\u8fc7\u7684\u667e\u8863\u7ef3\u63a5\u5934\u7ecf\u8425\u7740\u4e00\u4e2a\u548c\u7f51\u7edc\u4f20\u5947\u7684\u6c11\u5bbf\u6ca1\u4ec0\u4e48\u533a\u522b\u3002\u5b83\u4eec\u7684\u6210\u672c\u53ea\u6709\u4e00\u534a\uff0c\u800c\u4e0d\u662f\u6bcf\u5929\u65e9\u4e0a\u201c\u5207\u65ad\u201d\u7ef3\u5b50\uff08\u8fd9\u770b\u8d77\u6765\u5f88\u6d6a\u8d39\u7ef3\u5b50\uff09\uff0c\u5b83\u53ea\u662f\u89e3\u5f00\u540e\u4e00\u70b9\u7279\u522b\u6709\u8da3\uff0c\u56e0\u4e3a\u5fb7\u56fd\u6863\u6848\u9986\u786e\u5b9e\u63d0\u4f9b\u4e86\u4e24\u5f20\u56fe\u7247\u2014\u2014\u4e00\u5f20\u662f\u56fe\u753b\u53ef\u4ee5\u8ffd\u6eaf\u5230 1909 \u5e74\u4e4b\u524d\uff0c\u53e6\u4e00\u5f20\u7167\u7247\u53ef\u80fd\u53ef\u4ee5\u8ffd\u6eaf\u5230 1929 \u5e74\u6216 1930 \u5e74\u3002\u4f46\u8fd9\u4e24\u5f20\u7167\u7247\u663e\u793a\u7684\u573a\u6240\u975e\u5e38\u7c7b\u4f3c\u4e8e\u5965\u5a01\u5c14\u5bf9\u201c\u4e24\u4fbf\u58eb\u5bbf\u9189\u201d\u7684\u63cf\u8ff0\u2014\u2014\u5305\u62ec\u5750\u5728\u957f\u51f3\u4e0a\u7684\u5367\u94fa\u2014\u2014\u800c\u4e0d\u662f\u667e\u8863\u7ef3\u7684\u623f\u5b50\u3002\u8fd9\u5e45\u753b\u663e\u7136\u6765\u81ea\u8457\u540d\u7684\u5fb7\u56fd\u793e\u4f1a\u4e3b\u4e49\u8005\u7231\u5fb7\u534e\u00b7\u5bcc\u514b\u65af (Eduard Fuchs) \u7684\u516d\u5377\u672c Illustrierte Sittengeschichte vom Mittelalter bis zur Gegenwart\uff0c\u5bf9\u90a3\u4e2a\u65f6\u671f\u7684\u4e60\u4fd7\u548c\u6587\u5316\u8fdb\u884c\u4e86\u63a2\u7d22\u3002\u8fd9\u5f20\u7167\u7247\u663e\u7136\u663e\u793a\u4e86\u5904\u4e8e\u8427\u6761\u65f6\u671f\u7684\u201c\u7d27\u6025\u907f\u96be\u6240\u201d\u4e2d\u7684\u5931\u4e1a\u8005\u2014\u2014\u7f51\u4e0a\u51fa\u73b0\u7684\u51e0\u4e2a\u7248\u672c\u58f0\u79f0\u5b83\u662f\u5728\u6c49\u5821\u62cd\u6444\u7684\uff0c\u5e03\u9c81\u66fc 1985 \u5e74\u7684\u5b66\u6821\u6559\u79d1\u4e66\u300a\u9b4f\u739b\u5fb7\u56fd\uff1a\u5fb7\u56fd 1918-1933\u300b\u5370\u6709\u6807\u9898\uff1a\u201c\u8fd9\u4e9b1930 \u5e74\u51ac\u5929\uff0c\u7537\u4eba\u4eec\u4ed8\u94b1\u8ba9\u4ed6\u4eec\u5728\u6e29\u6696\u7684\u623f\u95f4\u91cc\u2018\u5728\u7ebf\u4e0a\u2019\u7761\u89c9\u3002\u7ef3\u5b50\u5728\u4ed6\u4eec\u7761\u89c9\u65f6\u628a\u4ed6\u4eec\u6491\u8d77\u6765\u3002\u9700\u8981\u505a\u66f4\u591a\u7684\u5de5\u4f5c\u6765\u8ffd\u8e2a\u8fd9\u4e9b\u56fe\u50cf\u7684\u6765\u6e90\uff0c\u5e76\u5e0c\u671b\u81f3\u5c11\u786e\u8ba4\u5176\u4e2d\u7684\u4e00\u4e9b\u7ec6\u8282\u3002\u6211\u7279\u522b\u6000\u7591\u8fd9\u5e45\u753b\uff0c\u56e0\u4e3a\u867d\u7136\u56fe\u50cf\u8bf4\u660e\u5c06\u5b83\u4e0e\u81ea 1886 \u5e74\u4ee5\u6765\u786e\u5b9e\u5728\u5fb7\u56fd\u8fd0\u4f5c\u7684\u6551\u4e16\u519b\u8054\u7cfb\u8d77\u6765\uff0c\u4f46\u5b83\u975e\u5e38\u7c7b\u4f3c\u4e8e\u7ef4\u591a\u5229\u4e9a\u65f6\u4ee3\u665a\u671f\u82f1\u56fd\u63d2\u56fe\u62a5\u7eb8\u4e2d\u4f7f\u7528\u7684\u90a3\u79cd\u98ce\u683c\uff0c\u6211\u4e0d\u786e\u5b9a\u540c\u6837\u7684\u98ce\u683c\u5728\u5fb7\u56fd\u662f\u5426\u540c\u6837\u666e\u904d\u3002\u4f46\u5173\u952e\u4f3c\u4e4e\u662f\uff0c\u5982\u679c\u50cf\u8fd9\u6837\u7684\u673a\u6784\u662f Riis \u638c\u63e1\u7684\u8c23\u8a00\u7684\u6765\u6e90\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8c23\u8a00\u4f3c\u4e4e\u8ba9\u4ed6\u4eec\u6bd4\u5b9e\u9645\u60c5\u51b5\u66f4\u4e0d\u8212\u670d\uff0c\u66f4\u7edd\u671b\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u53ea\u80fd\u8ffd\u6eaf\u5230 1880 \u5e74\u4ee3\uff0c\u800c\u636e\u6211\u6240\u77e5\uff0cRiis \u6240\u6307\u7684\u6545\u4e8b\u65e0\u6cd5\u5728\u65e9\u4e8e 1880 \u5e74\u4ee3\u7684\u62a5\u544a\u4e2d\u8ffd\u6eaf;\u4f8b\u5982\uff0c\u5728\u82f1\u56fd\u5728\u7ebf\u62a5\u7eb8\u6863\u6848\u9986\u4e2d\u641c\u7d22\u201ctwopenny hangover\u201d\u4e00\u8bcd\u7684\u5c1d\u8bd5\uff0c\u53ea\u5f97\u5230\u4e86 1930 \u5e74\u4ee3\u5bf9\u5965\u5a01\u5c14\u8457\u4f5c\u7684\u5f15\u7528\u3002\u4ea8\u5229\u00b7\u6885\u4f11 (Henry Mayhew) \u7684\u56db\u5377\u672c\u300a\u4f26\u6566\u52b3\u5de5\u4e0e\u4f26\u6566\u8d2b\u6c11\u300b\uff081851 \u5e74\uff09\u662f\u6839\u636e\u5bf9\u6570\u767e\u540d\u7ebf\u4eba\u591a\u5e74\u7684\u91c7\u8bbf\u6c47\u7f16\u800c\u6210\u7684\uff0c\u5e76\u4e14\u4ecd\u7136\u662f\u6709\u5173\u7ef4\u591a\u5229\u4e9a\u65f6\u4ee3\u4f26\u6566\u5de5\u4eba\u9636\u7ea7\u751f\u6d3b\u7684\u4e0d\u7aed\u4fe1\u606f\u6e90\u6cc9\uff0c\u4e13\u95e8\u7528\u4e86\u4e00\u4e2a\u90e8\u5206\u867d\u7136\u4ed6\u63cf\u8ff0\u4e86\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u673a\u6784\uff0c\u5e76\u5217\u4e3e\u4e86\u8bb8\u591a\u6050\u6016\u4e8b\u4ef6\u2014\u2014\u4f7f\u7528\u4ed6\u4ece\u5df2\u5012\u95ed\u7684\u56fd\u738b\u5341\u5b57\u5929\u82b1\u533b\u9662\u8d2d\u4e70\u7684\u5e8a\u4f4d\u5efa\u7acb\u56db\u95f4\u5bbf\u820d\u7684\u4eba\u53ef\u80fd\u662f\u6700\u7cdf\u7cd5\u7684\u662f\u2014\u2014\u4ed6\u6ca1\u6709\u63d0\u5230\u4efb\u4f55\u81f3\u5c11\u6ca1\u6709\u4e3a\u5c45\u4f4f\u8005\u63d0\u4f9b\u5e8a\u94fa\u7684\u5730\u65b9\uff0c\u65e0\u8bba\u591a\u4e48\u8671\u5b50\u3002\u7136\u800c\uff0c\u6709\u4e00\u4e2a\u6587\u5b66\u63cf\u8ff0\u7c7b\u4f3c\u4e8e\u6211\u4eec\u4e00\u76f4\u5728\u8003\u8651\u7684\u5730\u65b9\u7c7b\u578b\uff0c\u5176\u5386\u53f2\u53ef\u4ee5\u8ffd\u6eaf\u5230 1830 \u5e74\u4ee3\uff0c\u8fd9\u662f\u51fa\u73b0\u5728\u72c4\u66f4\u65af\u7684\u300a\u5339\u514b\u5a01\u514b\u8bba\u6587\u300b\u4e2d\u7684\u4e00\u6bb5\u8bdd\u3002\u5f53\u7136\uff0c\u72c4\u66f4\u65af\u662f\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u62a5\u793e\u8bb0\u8005\uff0c\u5bf9\u4f4e\u4fd7\u751f\u6d3b\u6709\u7740\u957f\u671f\u7684\u5174\u8da3\uff0c\u5173\u4e8e\u8fd9\u672c\u4e66\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u5e94\u8be5\u88ab\u89c6\u4e3a\u73b0\u5b9e\u4e3b\u4e49\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6709\u76f8\u5f53\u591a\u7684\u6587\u732e\u2014\u2014\u4f46\u662f\uff0c\u867d\u7136\u5b83\u6ca1\u6709\uff0c\u6240\u4ee5\u636e\u6211\u6240\u77e5\uff0c\u4e0b\u9762\u63cf\u8ff0\u7684\u90a3\u79cd\u673a\u6784\u786e\u5b9e\u5b58\u5728\u4e8e\u4e54\u6cbb\u4e9a\u65f6\u671f\u665a\u671f\u7684\u4f26\u6566\uff0c\u4ed4\u7ec6\u9605\u8bfb\u8868\u660e\uff0c\u72c4\u66f4\u65af\u8457\u540d\u7684\u7545\u9500\u4e66\u53ef\u80fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4fc3\u6210\u4e86\u96c5\u5404\u5e03\u7684\u8c23\u8a00\u534a\u4e2a\u4e16\u7eaa\u540e\uff0c\u91cc\u65af\u542c\u5230\u4e86\uff1b\u8bf7\u6ce8\u610f\u6bcf\u5929\u65e9\u4e0a\u7ef3\u7d22\u5982\u4f55\u201c\u89e3\u5f00\u201d\u4ee5\u7ec8\u6b62\u7761\u7720\u8005\u4f11\u606f\u7684\u8be6\u7ec6\u91cd\u590d\u3002\u6b64\u5916\uff0c\u8fd9\u6bb5\u8bdd\u5728\u672f\u8bed\u4e0a\u4e0e\u5965\u5a01\u5c14\u7684\u975e\u5e38\u76f8\u4f3c\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4e5f\u53ef\u80fd\u662f\u201c\u4e24\u4fbf\u58eb\u5bbf\u9189\u201d\u7684\u7075\u611f\u6765\u6e90\u3002\u7136\u800c\u8bf7\u6ce8\u610f\u2014\u2014\u8fd9\u91cc\u548c\u4ee5\u524d\u4e00\u6837\u2014\u2014\u63cf\u8ff0\u7684\u7761\u7720\u5b89\u6392\u53ea\u662f\u8868\u9762\u4e0a\u7c7b\u4f3c\u4e8e\u706b\u8f66\u5927\u52ab\u6848\u4e2d\u7684\u56fe\u50cf\u3002\n\u8fd9\u91cc\u7684\u6f14\u8bb2\u8005\u662f Pickwick \u7684 cockney \u7537\u4ec6 Sam Weller\uff0c\u4ed6\u89e3\u91ca\u8bf4\uff0c\u5728\u4ed6\u751f\u547d\u7684\u4e00\u4e2a\u4f4e\u8c37\uff0c\u4ed6\u88ab\u8feb\u201c\u4f4f\u4e86\u4e24\u5468\u6ca1\u6709\u5bb6\u5177\u7684\u5c0f\u5c4b\u201d\uff1a\u201c\u662f\u7684\u2014\u2014\u6ed1\u94c1\u5362\u6865\u7684\u5e72\u62f1\u3002\u4e0d\u9519\u7684\u7761\u89c9\u7684\u5730\u65b9\u2014\u2014\u8ddd\u79bb\u6240\u6709\u516c\u5171\u529e\u516c\u5ba4\u90fd\u5728\u5341\u5206\u949f\u7684\u6b65\u884c\u8def\u7a0b\u5185\u2014\u2014\u9664\u975e\u6709\u4efb\u4f55\u53cd\u5bf9\u610f\u89c1\uff0c\u90a3\u5c31\u662f\u73af\u5883\u592a\u901a\u98ce\u4e86\u3002\u6211\u5728\u90a3\u91cc\u770b\u5230\u4e86\u4e00\u4e9b\u5947\u602a\u7684\u666f\u70b9\u3002 \u201c\u554a\uff0c\u6211\u60f3\u4f60\u77e5\u9053\u4e86\uff0c\u201d\u76ae\u514b\u5a01\u514b\u5148\u751f\u8bf4\uff0c\u795e\u60c5\u76f8\u5f53\u611f\u5174\u8da3\u3002 \u201c\u89c6\u7ebf\uff0c\u5148\u751f\uff0c\u201d\u97e6\u52d2\u5148\u751f\u7ee7\u7eed\u8bf4\u9053\uff0c\u201c\u5c31\u50cf\u2018\u7a7f\u900f\u4f60\u4ec1\u6148\u7684\u5fc3\uff0c\u4ece\u53e6\u4e00\u8fb9\u51fa\u6765\u3002\u4f60\u5728\u90a3\u91cc\u770b\u4e0d\u5230\u5e38\u89c4\u7684waygrants\uff1b\u76f8\u4fe1\u4ed6\u4eec\uff0c\u4ed6\u4eec\u6bd4\u8fd9\u66f4\u4e86\u89e3\u3002\u5e74\u8f7b\u7684\u4e5e\u4e10\uff0c\u7537\u7684\u548c\u5973\u7684\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u884c\u4e1a\u4e2d\u6ca1\u6709\u5d1b\u8d77\uff0c\u6709\u65f6\u4f1a\u5728\u90a3\u91cc\u4f4f\u4e0b\uff1b\u4f46\u901a\u5e38\u662f\u90a3\u4e9b\u75b2\u60eb\u4e0d\u582a\u3001\u6328\u997f\u3001\u65e0\u5bb6\u53ef\u5f52\u7684\u521b\u9020\u8005\u5728\u4ed6\u4eec\u5b64\u72ec\u7684\u5730\u65b9\u7684\u9ed1\u6697\u89d2\u843d\u91cc\u6eda\u6765\u6eda\u53bb\u2014\u2014\u53ef\u601c\u7684\u751f\u7269\u65e0\u6cd5\u8fbe\u5230\u4e24\u4fbf\u58eb\u7684\u7ef3\u7d22\u3002 \u201c\u5148\u751f\uff0c\u90a3\u6761\u4e24\u4fbf\u58eb\u7684\u7ef3\u5b50\uff0c\u201d\u97e6\u52d2\u5148\u751f\u56de\u7b54\u8bf4\uff0c\u201c\u53ea\u662f\u4e00\u95f4\u5ec9\u4ef7\u7684\u4f4f\u5904\uff0c\u90a3\u91cc\u7684\u5e8a\u6bcf\u665a\u4e24\u4fbf\u58eb\u3002\u201d \u201c\u4fdd\u4f51\u4f60\u7684\u6e05\u767d\uff0c\u5148\u751f\uff0c\u4e0d\u662f\u8fd9\u6837\uff0c\u201d\u5c71\u59c6\u56de\u7b54\u3002 &#39;ven the Lady and gen&#39;l&#39;m&#39;n as keep the hot-el first start business,\u4ed6\u4eec\u8fc7\u53bb\u5e38\u5e38\u5728\u5730\u677f\u4e0a\u94fa\u5e8a\uff1b\u4f46\u8fd9\u4e0d\u4f1a\u4e0d\u60dc\u4e00\u5207\u4ee3\u4ef7\uff0c\u201c\u56e0\u4e3a\u76f8\u53cd\u201d\u8981\u9002\u5ea6\u5730\u7761\u4e00\u89c9\uff0c\u623f\u5ba2\u4eec\u8fc7\u53bb\u5e38\u5e38\u5728\u90a3\u91cc\u8eba\u534a\u5929\u3002\u6240\u4ee5\u73b0\u5728\u4ed6\u4eec\u6709\u4e24\u6839\u7ef3\u5b50\uff0c\u5927\u7ea6\u76f8\u8ddd\u516d\u82f1\u5c3a\uff0c\u4e09\u6839\u7ef3\u5b50\u79bb\u5730\u677f\uff0c\u76f4\u63a5\u7a7f\u8fc7\u623f\u95f4\uff1b\u5e8a\u662f\u7531\u7c97\u9ebb\u5e03\u7247\u94fa\u6210\u7684\uff0c\u94fa\u5728\u201c\u5e8a\u5355\u201d\u4e0a\u3002 \u201c\u55ef\uff0c\u201d\u97e6\u52d2\u5148\u751f\u8bf4\uff0c\u201c\u8fd9\u4e2a\u8ba1\u5212\u7684\u597d\u5904\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u201d\u6bcf\u5929\u65e9\u4e0a\u516d\u70b9\u949f\uff0c\u4ed6\u4eec\u677e\u5f00\u7ef3\u7d22\u4e00\u7aef\uff0c\u623f\u5ba2\u5012\u4e0b\u3002\u7ed3\u679c\u662f\uff0c\u88ab\u5f7b\u5e95\u5524\u9192\uff0c\u4ed6\u4eec\u5b89\u9759\u5730\u8d77\u5e8a\uff0c\u7136\u540e\u8d70\u5f00\uff01\n\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0c\u6211\u8ba4\u4e3a\uff0c\u5728\u8fd9\u6bb5\u8bdd\u548c\u6211\u4eec\u611f\u5174\u8da3\u7684\u4e92\u8054\u7f51\u6bd4\u55bb\u4e4b\u95f4\u6709\u4e00\u4e9b\u660e\u786e\u7684\u6bd4\u8f83\uff0c\u8fd9\u786e\u5b9e\u8868\u660e\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u67d0\u79cd\u8054\u7cfb\u3002\u65e9\u4e0a\u8d77\u6765\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u677e\u5f00\u7ef3\u5b50\uff1b\u5b83\u5728\u5c0f\u65f6\u7ed3\u675f\u65f6\u88ab\u64a4\u6d88\uff1b\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u5c06\u7761\u7720\u8005\u6beb\u4e0d\u5ba2\u6c14\u5730\u653e\u5728\u5730\u677f\u4e0a\uff0c\u4ee5\u4fbf\u4ed6\u4eec\u9192\u6765\u5e76\u79bb\u5f00\u623f\u5c4b\u3002\u6700\u540e\uff0c\u6211\u8ba4\u4e3a\u503c\u5f97\u62a5\u544a\u4e00\u4e2a\u7531 Casebook \u7684\u8d21\u732e\u8005\u4e4b\u4e00\u8fdb\u884c\u7684\u5b9e\u9645\u5b9e\u9a8c\uff0cCasebook \u662f\u4e00\u4e2a\u5728\u7ebf\u8bba\u575b\uff0c\u4e13\u95e8\u8ba8\u8bba 1880 \u5e74\u4ee3\u5f00\u819b\u624b\u6770\u514b\u8c0b\u6740\u6848\u548c\u4f26\u6566\u4e1c\u533a\u3002\u8fd9\u4f4d\u542c\u8bf4\u8fc7\u4e24\u4fbf\u58eb\u5bbf\u9189\u6545\u4e8b\u7684\u4f5c\u5bb6\u8bd5\u56fe\u4e3a\u81ea\u5df1\u91cd\u65b0\u521b\u9020\u8fd9\u79cd\u4f53\u9a8c\u2014\u2014\u7ed3\u679c\u5f88\u6709\u8da3\uff08\u5728\u6b64\u8fdb\u884c\u4e86\u4fee\u6b63\u4ee5\u7ea0\u6b63\u62fc\u5199\u548c\u9519\u522b\u5b57\uff09\uff1a\u5728\u6211\u7b2c\u4e00\u6b21\u5728\u7ef3\u7d22\u4e0a\u5ea6\u8fc7\u7684\u7b2c\u4e00\u4e2a\u665a\u4e0a\u4e4b\u540e\uff0c\u6211\u53ef\u4ee5\u8bf4......\u5f88\u4e0d\u8212\u670d\u3002\u62b1\u6b49\uff0c\u8fd8\u6ca1\u6709\u7167\u7247\uff0c\u56e0\u4e3a\u6628\u665a\u53ea\u6709\u6211\u4e00\u4e2a\u4eba\u5728\u5bb6\u3002\u6211\u9996\u5148\u8bd5\u7740\u7ad9\u7740\u7761\u89c9\uff0c\u9762\u5bf9\u7ef3\u5b50\uff0c\u53cc\u81c2\u60ac\u5728\u4e0a\u9762\u3002\u90a3\u53ea\u6301\u7eed\u4e86\u5927\u7ea63\u5206\u949f\u3002\u6211\u89c9\u5f97\u8fd9\u79cd\u65b9\u6cd5\u6700\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a\u9664\u4e86\u652f\u6491\u8eab\u4f53\u7684\u7ef3\u7d22\u4e4b\u5916\uff0c\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\uff0c\u4f60\u5c31\u4e0d\u80fd\u7559\u5728\u4e0a\u9762\u3002\u5982\u679c\u4f60\u80fd\u591f\u5165\u7761\uff0c\u4f60\u7684\u817f\u4f1a\u53d8\u5f97\u8ddb\u884c\uff0c\u4f60\u4f1a\u8dcc\u5012\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u8bd5\u7740\u9762\u5bf9\u7ef3\u5b50\u5750\u7740\uff0c\u53cc\u81c2\u60ac\u5782\u3002\u8fd9\u79cd\u65b9\u6cd5\u662f\u53ef\u884c\u7684\uff0c\u4f46\u524d\u63d0\u662f\u4f60\u5f88\u7d2f\u3002\u7528\u8fd9\u79cd\u65b9\u6cd5\u4f60\u53d1\u73b0\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\uff0c\u9664\u975e\u4f60\u7684\u624b\u81c2\u548c\u7ef3\u5b50\u4e4b\u95f4\u6709\u4e00\u5927\u5757\u5377\u8d77\u6765\u7684\u6750\u6599\uff0c\u5426\u5219\u4f60\u7684\u624b\u81c2\u4f1a\u6bd4\u4f60\u5148\u5165\u7761\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u8bd5\u7740\u5c06\u524d\u989d\u653e\u5728\u7ef3\u7d22\u4e0a\u5411\u524d\u503e\u3002\u8fd9\u6bd4\u5176\u4ed6\u4e24\u4e2a\u5c1d\u8bd5\u8981\u8212\u670d\u5f97\u591a\uff0c\u6211\u53ef\u4ee5\u8fd9\u6837\u7761\u89c9\u3002\u8fd9\u5c31\u50cf\u628a\u4f60\u7684\u5934\u9760\u5728\u4f60\u9762\u524d\u7684\u684c\u5b50\u4e0a\u2014\u2014\u6216\u8005\u5728\u6821\u8f66\u7684\u9760\u80cc\u4e0a\uff0c\u6b63\u5982\u6211\u542c\u5230\u4e00\u4e2a\u4eba\u6240\u8bf4\u7684\u90a3\u6837\u3002\u7f3a\u70b9\u662f\u5982\u679c\u7ef3\u5b50\u4e0a\u7684\u4eba\u591a\uff0c\u6709\u4eba\u632a\u52a8\u5b83\uff0c\u4f60\u5c31\u4f1a\u6389\u4e0b\u6765\u3002\u6700\u540e\uff0c\u6211\u8bd5\u7740\u5411\u540e\u9760\u5728\u7ef3\u5b50\u4e0a\uff0c\u53cc\u81c2\u60ac\u5728\u4e0a\u9762\u3002\u8fd9\u4e2a\u4f4d\u7f6e\u5b9e\u9645\u4e0a\u5f88\u597d\u5730\u652f\u6491\u4e86\u6211\u7684\u8eab\u4f53\uff0c\u4f46\u4e0d\u662f\u6211\u7684\u5934\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u4ecd\u7136\u662f\u6700\u597d\u7684\u4f4d\u7f6e\uff0c\u6211\u5b9e\u9645\u4e0a\u7761\u4e86\u5927\u7ea6\u4e00\u4e2a\u5c0f\u65f6\u3002\n\u603b\u4e4b\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u8bf4\u7684\u662f\uff0c\u4e5f\u8bb8\u6211\u4eec\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9700\u8981\u4e24\u4fbf\u58eb\u5bbf\u9189\u7684\u7b2c\u4e00\u624b\u8d44\u6599\u6765\u4e86\u89e3\u5b83\u6240\u5177\u6709\u7684\u529b\u91cf\u3002\u5373\u4f7f\u662f\u5bf9\u8fd9\u6837\u4e00\u4e2a\u5730\u65b9\u7684\u4e8c\u624b\u63cf\u8ff0\uff0c\u4e5f\u4f1a\u5728\u8111\u6d77\u4e2d\u521b\u9020\u4e00\u4e2a\u975e\u5e38\u751f\u52a8\u7684\u89c6\u89c9\u5f62\u8c61\uff0c\u4e00\u4e2a\u7acb\u5373\u660e\u663e\u201c\u9000\u5316\u201d\u7684\u5f62\u8c61\u3002\u6211\u5f3a\u70c8\u6000\u7591\uff0c\u6b63\u662f\u8fd9\u4e00\u70b9\u89e3\u91ca\u4e86\u73b0\u4ee3\u201c\u4e24\u4fbf\u58eb\u5bbf\u9189\u201d\u6bd4\u55bb\u7684\u6d41\u884c\uff0c\u5f53\u7136\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4e3a\u706b\u8f66\u5927\u52ab\u6848\u8bbe\u8ba1\u5e03\u666f\u7684\u4eba\u9009\u62e9\u63cf\u7ed8\u62ab\u5728\u667e\u8863\u7ef3\u4e0a\u7684\u7a77\u4eba\u80ae\u810f\u7684\u623f\u95f4\u3002\u5f88\u660e\u663e\uff0c\u8fd9\u4e9b\u4eba\u662f\u6700\u4f4e\u7b49\u7684\u3002\u6211\u4eec\u7acb\u523b\u660e\u767d\uff0c\u4ed6\u4eec\u5df2\u7ecf\u6df1\u5165\u7ef4\u591a\u5229\u4e9a\u793e\u4f1a\u7684\u6df1\u5904\u3002\u63cf\u7ed8\u540c\u4e00\u7fa4\u4eba\u5012\u5728\u957f\u51f3\u4e0a\uff0c\u5934\u9760\u5728\u7528\u7ef3\u7d22\u652f\u6491\u7684\u624b\u81c2\u548c\u8098\u90e8\u4e0a\uff0c\u4e0d\u4f1a\u5982\u6b64\u620f\u5267\u5316\u6216\u6709\u5f71\u54cd\u529b\u3002\u9274\u4e8e\u8fd9\u4e9b\u7ed3\u679c\u548c\u8fd9\u4e9b\u89c2\u5bdf\uff0c\u6211\u786e\u5b9e\u60f3\u77e5\u9053\u5bf9\u72c4\u66f4\u65af\u7684\u540d\u8a00\u201c\u53cc\u4fbf\u58eb\u7ef3\u201d\u7684\u6726\u80e7\u56de\u5fc6\u662f\u5426\u53ef\u80fd\u4e0d\u662f\u6211\u4eec\u6b63\u5728\u63a2\u7d22\u7684\u6bd4\u55bb\u7684\u8d77\u6e90\u3002\u8ba9\u6211\u4eec\u8bb0\u4f4f\uff0c\u5b83\u53d1\u8868\u5728\u6574\u4e2a 19 \u4e16\u7eaa\u6700\u7545\u9500\u7684\u5c0f\u8bf4\u4e4b\u4e00\u4e2d\uff0c\u72c4\u66f4\u65af\u672c\u4eba\u7528\u5b83\u6765\u8ff7\u60d1\u5339\u514b\u5a01\u514b\u5148\u751f\u3002\u53ef\u80fd\u662f\u8fd9\u53e5\u8bdd\u53bb\u6389\u4e86\u76ae\u514b\u5a01\u514b\u8bba\u6587\u4e0e\u4e00\u5f20\u7c97\u7cd9\u7684\u9ebb\u888b\u5e8a\u7684\u8054\u7cfb\uff0c\u5728\u8bfb\u8005\u7684\u8111\u6d77\u4e2d\u521b\u9020\u4e86\u4e00\u4e2a\u5982\u6b64\u751f\u52a8\u7684\u5f62\u8c61\u2014\u2014\u4e00\u4e2a\u968f\u540e\u88ab\u60f3\u8c61\u586b\u5145\u548c\u8be6\u7ec6\u63cf\u8ff0\u7684\u5f62\u8c61\uff1f\u5982\u679c\u6709\u4eba\u544a\u8bc9\u4f60\u6709\u4eba\u7761\u5728\u201c\u4e24\u4fbf\u58eb\u7ef3\u201d\u4e0a\uff0c\u4f60\u7684\u8111\u6d77\u4e2d\u4f1a\u6d6e\u73b0\u51fa\u4ec0\u4e48\u6837\u7684\u753b\u9762\uff1f\u9274\u4e8e\u6b64\u7c7b\u623f\u5c4b\u660e\u663e\u7f3a\u4e4f\u7b2c\u4e00\u4eba\u79f0\u7684\u63cf\u8ff0\uff0c\u6211\u5f88\u60f3\u5efa\u8bae\u8fd9\u53ef\u80fd\u89e3\u91ca\u4e86\u96c5\u5404\u5e03\u00b7\u91cc\u65af\u5728 1880 \u5e74\u4ee3\u5728\u7f8e\u56fd\u542c\u5230\u7684\u8c23\u8a00\u2014\u2014\u4f46\u4e0e\u66f4\u65e9\u7684\u201c\u65e7\u56fd\u5bb6\u201d\u6709\u5173\u2014\u2014\u5b9e\u9645\u4e0a\u5f00\u59cb\u4e86\u3002\u5728\u5934\u8111\u4e2d\u521b\u9020\u7684\u753b\u9762\u7684\u7eaf\u7cb9\u751f\u52a8\u6027\u540c\u6837\u53ef\u80fd\u662f\u6211\u4eec\u5728\u706b\u8f66\u5927\u52ab\u6848\u4e2d\u5982\u6b64\u9707\u64bc\u7684\u5bcc\u6709\u60f3\u8c61\u529b\u7684\u91cd\u5efa\u7684\u539f\u56e0 - \u4ee5\u53ca\u201c\u4e24\u4fbf\u58eb\u5bbf\u9189\u201d\u4e92\u8054\u7f51\u6bd4\u55bb\uff0c\u7528\u73b0\u4ee3\u91cd\u5efa\u6216\u91cd\u65b0\u5229\u7528\u5728\u786e\u5b9e\u5b58\u5728\u7684\u5404\u79cd\u65c5\u9986\u4e2d\u62cd\u6444\u7684\u56fe\u50cf\uff0c\u4f7f\u4eca\u5929\u7684\u4e92\u8054\u7f51\u6d4f\u89c8\u5668\u76f8\u4fe1\u8fd9\u79cd\u65c5\u9986\u5b9e\u9645\u4e0a\u975e\u5e38\u666e\u904d\u3002\u6211\u8bf4\u8bf1\u60d1\u3002\u6211\u4e0d\u786e\u5b9a\u3002\u4f46\u5728\u6211\u627f\u8ba4 21 \u4e16\u7eaa\u6d41\u884c\u7684\u201c\u4e24\u4fbf\u58eb\u5bbf\u9189\u201d\u6982\u5ff5\u6709\u4efb\u4f55\u4e8b\u5b9e\u4f9d\u636e\u4e4b\u524d\uff0c\u6211\u5f53\u7136\u5e0c\u671b\u770b\u5230\u65b0\u7684\u3001\u5f53\u4ee3\u7684\u8bc1\u636e\u3002", "note_en": "The image above shows a recreation of what is supposed to be a \u201c twopenny hangover\u201c. It\u2019s a term increasingly commonly found on Google, and it purports to describe a type of cheap Victorian-era doss-house in which indigents could secure shelter and rest for the night more cost-effectively than by paying the cost of a bed, which typically cost fourpence or fivepence. The idea was that, in exchange for the payment, the poor would be allowed to sleep, several men at a time, draped over a rope that had been suspended across a room at chest level.\n Acceptance that such places actually existed has become widespread over the past few years, and a look at a\u00a0\u00a0 Google Image search for the term \u201ctwopenny hangover\u201d\u00a0shows at least four different pictures that supposedly depict examples. This one, which is by a distance the most detailed and explicit, is actually a still from a 1978 Sean Connery/Michael Crichton caper,   The Great Train Robbery, which is set in the London of the middle 1850s; the others have been pulled into the gallery below. Two of these, which seem pretty similar at first glance, can be seen to depict a rather different sort of lodging house when they\u2019re examined closely.\n   So far as I can tell, the term \u201ctwopenny hangover\u201d (sometimes corrupted, in online sources, to become the \u201c penny hang\u201c) originates with George Orwell, who \u2013 in his highly influential\u00a0 Down and Out in Paris and London\u00a0(1933), a book which was based on his own experience of living on the margins of poverty during the Great Depression \u2013 wrote that\n  at the Twopenny Hangover, the lodgers sit in a row on a bench; there is a rope in front of them, and they lean on this as though leaning over a fence. A man, humorously called the valet, cuts the rope at five in the morning.\n  Orwell did not claim to have visited a lodging house of this sort himself; his details came from an informant, a London pavement artist he called Bozo, though he said he was aware of \u201csimilar\u201d places in Paris. You\u2019ll note, in addition, that his description of the system used in such places does not actually match the recreation in  The Great Train Robbery, since Orwell was clear that men in these establishments slept in a sitting position and merely leaned forward to support their upper bodies on the rope. A reconstruction of this sort of lodging featured some years ago in the 2016 BBC series \u201cThe Victorian slum\u201d, in which \u201ca group of 15 volunteers aged between 10 and 59 are transported back to Victorian London as they spend three weeks living and working in a recreation of the notorious Old Nichol slum in Bethnal Green in London\u2019s East End.\u201d It can be glimpsed\u00a0 in this video trailer for the series, 11 seconds in.\n Tracing the same basic story back to the 19th century, we next need to notice another very well-known account,\u00a0 How the Other Half Lives\u00a0by  Jacob Riis, which is a book by a social reformer about life below the poverty line in the New York City of the 1880s. Riis\u2019s book was published in 1890 and is especially notable for the flash photographs that he took to illustrate it. The author includes an entire chapter on the \u201ccheap lodging houses\u201d of the city, and delineates the downward progression from varied from relatively salubrious 25\u2013cent-a-night properties, where \u201cguests\u201d could at least expect their own bed, flimsily partitioned, down through 15\u2013cent dives where the residents slept four deep on filthy bunks, to 10\u2013cent properties, where, Riis observes, \u201cthe locker for the sleeper\u2019s clothes disappears. There is no longer need of it. The tramp limit is reached, and there is nothing to lock up, save, on general principle, the lodger.\u201d\n  Below the 10 cent houses there was a further sort of establishment which charged seven cents a night in which the \u201cbed\u201d provided was a strip of canvas strung between two \u201crough timbers\u201d. All these places did exist, and Riis visited them himself, but he adds a note to the effect that he has heard it rumoured that a cheaper sort of lodging might also be found, though \u201cso far as I am informed, it has never been introduced in this country.\u201d This was something that \u201cuse to be practiced, if reports spoke truly, in certain old-country towns\u201d [he means European ones], where\n the \u201cbed\u201d was represented by clothes-lines stretched across the room upon which sleepers hung by the arm-pits for a penny a night. In the morning the boss woke them up by simply untying the line at one end and letting it go with its load; a labour-saving device certainly, and highly successful in attaining the desired end.\n   His description of the way such houses operated is the closest match we have to the sort of place shown in our film still, and to the \u201ctwopenny hangover\u201d internet trope in general\n Nonetheless, the clothes-line joints that Riis had heard of operate a little differently to the lodging houses of internet legend. They cost only half as much, and instead of the rope being \u201ccut\u201d each morning (which would seem pretty wasteful of rope), it is merely untied\n  This latter point is particularly interesting in that German archives do offer two images \u2013 one a drawing dating to before 1909, and the other a photograph that might, possibly, date to 1929 or 1930. But both these images show establishments that very closely resemble Orwell\u2019s description of a \u201ctwopenny hangover\u201d \u2013 complete with sleepers seated at a bench \u2013 rather than a clothes-line house.\n The drawing\u00a0 apparently comes from\u00a0the well-known German socialist Eduard Fuchs\u2019s six-volume\u00a0 Illustrierte Sittengeschichte vom Mittelalter bis zur Gegenwart,\u00a0an exploration of the customs and culture of the period. The photograph apparently shows jobless men in a depression-era \u201cemergency shelter\u201d \u2013 several of the versions that appear online\u00a0 claim it was taken in Hamburg, and Brooman\u2019s 1985 school textbook\u00a0 Weimar Germany: Germany 1918-1933\u00a0prints it with the caption: \u201cThese men have paid to sleep \u2018on the line\u2019 in a warm room during the winter of 1930. The rope holds them up while they sleep.\u201d More work would need to be done to trace both these images to their source and, hopefully, confirm at least some of these details. I have some doubts about the drawing in particular, because, while the image caption associates it with the Salvation Army,\u00a0 which had indeed operated in Germany since 1886, it very closely resembles the sort of style used in late Victorian-era British illustrated newspapers, and I\u2019m not sure if the same style was equally common in Germany. But the key point seems to be that, if establishments like this were the source of the rumours that Riis got hold of, those rumours seem to have made them less comfortable and more desperate than they actually were.\n Thus far, you\u2019ll note, we\u2019ve got no further back than the 1880s, and the stories that Riis refers to can\u2019t, so far as I have been able to establish, be traced in reports that date any earlier than that; an attempt to search for the term \u201ctwopenny hangover\u201d in the online British Newspaper Archive, for instance, produced nothing but 1930s references to Orwell\u2019s book. Henry Mayhew, whose four-volume  London Labour and the London Poor (1851) was compiled from years\u2019 worth of interviews with hundreds of informants, and remains an inexhaustible fount of information concerning the lives of the working classes of Victorian London,  devotes a section of his work to lodging houses, but while he describes a variety of different kinds of establishments, and lists plenty of horrors \u2013\u00a0the man who set up four doss-houses using beds he\u2019d purchased from the defunct Kings Cross Smallpox Hospital is probably the worst \u2013\u00a0he makes no mention of any place that did not at least provide its occupants with beds, however lice-ridden. There is, however, one\u00a0 literary\u00a0account of something resembling the type of place we\u2019ve been considering, and which dates as far back as the 1830s, and this is a passage that appears in Dickens\u2019s\u00a0 The Pickwick Papers.\n Dickens, of course, was an experienced newspaper reporter with a longstanding interest in low-life, and there is quite an extensive literature on the extent to which this book should be seen as an example of realism \u2013\u00a0but, while it has not, so far as I can say, been shown that the sort of establishment described below really did exist in the London of the late Georgian period, a close reading suggests it might be possible that Dickens\u2019s famous and best-selling account somehow contributed to the rumours that Jacob Riis heard half a century later; note the telling repetition of the detail of how the rope was \u201cundone\u201d each morning to terminate the sleepers\u2019 rest. In addition, this passage bears such strong similarities in terms of its terminology to Orwell\u2019s that it may have been an inspiration for the \u201ctwopenny hangover\u201d as well. Yet note \u2013 here as before \u2013 that the sleeping arrangements described only very superficially resemble the situation shown in the image from  The Great Train Robbery.\n  The speaker here is Pickwick\u2019s cockney manservant, Sam Weller, who explains that, at one low point in his life, he was forced to take \u201cunfurnished lodgin\u2019s for a fortnight\u201d:\n \u2018Yes \u2013 the dry arches of Waterloo Bridge. Fine sleeping-place \u2013 within ten minutes\u2019 walk of all the public offices \u2013 only if there is any objection to it, it is that the sitviation\u2019s rather too airy. I see some queer sights there.\u2019\n \u2018Ah, I suppose you did,\u2019 said Mr. Pickwick, with an air of considerable interest.\n \u2018Sights, sir,\u2019 resumed Mr. Weller, \u2018as \u2018ud penetrate your benevolent heart, and come out on the other side. You don\u2019t see the regular waygrants there; trust \u2019em, they knows better than that. Young beggars, male and female, as hasn\u2019t made a rise in the profession, takes up their quarters there sometimes; but it\u2019s generally the worn-out, starving, houseless creators as roll themselves in the dark corners o\u2019 them lonesome places \u2013 poor creatures as ain\u2019t up to the twopenny rope.\u2019\n  \u2018The twopenny rope, sir,\u2019 replied Mr. Weller, \u2018is just a cheap lodgin\u2019 house, where the beds is twopence a night.\u2019\n  \u2018Bless your innocence, sir, that ain\u2019t it,\u2019 replied Sam. \u2018Ven the lady and gen\u2019l\u2019m\u2019n as keeps the hot-el first begun business, they used to make the beds on the floor; but this wouldn\u2019t do at no price, \u2018cos instead o\u2019 taking a moderate twopenn\u2019orth o\u2019 sleep, the lodgers used to lie there half the day. So now they has two ropes, \u2019bout six foot apart, and three from the floor, which goes right down the room; and the beds are made of slips of coarse sacking, stretched across \u2019em.\u2019\n  \u2018Well,\u2019 said Mr. Weller, \u2018the adwantage o\u2019 the plan\u2019s hobvious. At six o\u2019clock every mornin\u2019 they lets go the ropes at one end, and down falls the lodgers. Consequence is, that being thoroughly waked, they get up wery quietly, and walk away!\u2018\n We need to note here, I think, that there are a couple of clear comparisons between this passage and the internet trope we\u2019re interested in that do suggest to me there\u2019s some connection between them. A rope is let go first thing in the morning; it\u2019s undone at the top of the hour; and the purpose of doing so is to deposit sleepers unceremoniously on the floor, so that they wake up and vacate the premises.\n Finally, I think it\u2019s worth reporting on a practical experiment that was tried by one of the contributors to Casebook, an online forum devoted to the Jack the Ripper murders and the East End of London in the 1880s. The writer, who had heard the story of the twopenny hangover,\u00a0 attempted to recreate the experience for himself\u00a0\u2013 with interesting results (amended here to correct spelling and typos):\n After my first night on the ropes, I can say\u2026..man that was uncomfortable. Sorry, no pictures yet, because I was the only one home last night.\n I first tried to sleep standing up, facing the rope with my arms hanging over it. That only lasted about 3 minutes. I find this method most improbable, because without anything other than the rope supporting the body you cannot stay on it. If you were ever able to get to sleep, your legs would go limp and you\u2019d fall off.\n Next, I tried sitting facing the rope, arms hanging over. This method would be possible, but only after you are very tired. The first thing you find out with this method is that, unless you have a large rolled-up piece of material between your arms and the rope, your arms will fall asleep before you do.\n Next, I tried leaning forward with my forehead on the rope. This was much more comfortable that the other two tries, and I could sleep this way. It\u2019s the same as resting your head on the desk in front of you \u2013 or the seat-back on the school bus, as I heard one person put it. The drawback is that if there are more people on the rope and someone moves it, you will fall off.\n Last, I tried leaning back against the rope with my arms hanging over it. This position actually supported my body very well, but not my head. It was by far still the best position, and I actually slept for about an hour.\n What I think we\u00a0 can\u00a0say, in conclusion, is that maybe we don\u2019t actually need a first-hand account of a twopenny hangover to understand the power that it holds. Even a second-hand description of such a place creates a very vivid, visual image in the mind\u2019s eye, one that\u2019s immediately and obviously \u201cdegraded\u201d. It\u2019s this, I strongly suspect, that explains the popularity of the modern \u201ctwopenny hangover\u201d trope, and it is also, surely, why the people who designed the sets for\u00a0 The Great Train Robbery chose to depict indigents draped over a clothes line in a filthy room. It\u2019s instantly apparent that these men are the lowest of the low. We understand at once that they have plumbed the depths of Victorian society. Depicting the same group of men slumped at a bench, their heads resting on arms and elbows supported by ropes, would not be remotely so dramatic or impactful.\n  Given these outcomes and these observations, I do wonder whether hazy recollection of Dickens\u2019s telling phrase \u201ctwopenny rope\u201d may not be the origin of the trope that we\u2019re exploring. It was published, let\u2019s remember, in one of the best-selling novels of the whole nineteenth century, and it was shown by Dickens himself to befuddle Mr Pickwick. Might it be that this phrase, stripped of its\u00a0 Pickwick Papers\u00a0association with a rough sacking bed, created just such a vivid image in its readers\u2019 minds \u2013 one that was subsequently filled in and detailed by imagination? What sort of picture would\u00a0 your\u00a0mind conjure if you were told that someone slept on a \u201ctwopenny rope\u201d?\n Given the apparent lack of first-person descriptions of such houses, I am very tempted to suggest that this might explain how the rumours that Jacob Riis heard in the US in the 1880s \u2013 but associated with the \u201cold country\u201d some time earlier \u2013 actually got started. The sheer vividness of the picture that\u2019s created in the mind\u2019s eye might, equally, be responsible for the imaginative reconstruction we have been so struck by in\u00a0 The Great Train Robbery \u2013\u00a0and for the \u201ctwopenny hangover\u201d internet trope which, illustrated with modern reconstructions or repurposed images taken in the sorts of lodging houses that actually did exist, persuades browsers of the internet today that such lodgings actually were quite common.\n I say tempted. I\u2019m not certain. But I\u2019d certainly want to see fresh, contemporary evidence before I conceded that the popular 21st century conception of the \u201ctwopenny hangover\u201d had any basis in fact.", "posttime": "2021-07-29 21:25:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fbf\u58eb,twopenny,\u7ef3\u5b50", "title": "\u4e24\u4fbf\u58eb\u5bbf\u9189", "title_en": "The Twopenny Hangover", "transed": 1, "url": "https://mikedashhistory.com/2021/05/19/the-twopenny-hangover/", "via": "", "real_tags": ["\u4fbf\u58eb", "twopenny", "\u7ef3\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070178, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u80cc\u666f \u65b0\u63cf\u8ff0\u7684 SARS-CoV-2 \u8c31\u7cfb C.37 \u6700\u8fd1\u6839\u636e\u5176\u5728\u5357\u7f8e\u56fd\u5bb6\u7684\u9ad8\u6d41\u901a\u7387\u548c\u523a\u7a81\u86cb\u767d\u4e2d\u5b58\u5728\u7684\u5173\u952e\u7a81\u53d8\uff0c\u88ab\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\uff08WHO\uff09\u5f52\u7c7b\u4e3a\u611f\u5174\u8da3\u7684\u53d8\u4f53\uff08Lambda \u53d8\u4f53\uff09\u3002\u8fd9\u79cd\u7a81\u53d8\u5bf9\u4e2d\u548c\u6297\u4f53\u7684\u611f\u67d3\u6027\u548c\u514d\u75ab\u9003\u9038\u7684\u5f71\u54cd\u662f\u5b8c\u5168\u672a\u77e5\u7684\u3002\u65b9\u6cd5 \u6211\u4eec\u8fdb\u884c\u4e86\u5047\u578b\u75c5\u6bd2\u4e2d\u548c\u8bd5\u9a8c\uff0c\u5e76\u4f7f\u7528\u6765\u81ea\u667a\u5229\u5723\u5730\u4e9a\u54e5\u4e24\u4e2a\u4e2d\u5fc3\u7684\u533b\u62a4\u4eba\u5458 (HCW) \u7684\u8840\u6d46\u6837\u672c\u786e\u5b9a\u4e86 Lambda \u53d8\u4f53\u5bf9\u611f\u67d3\u6027\u548c\u514d\u75ab\u9003\u9038\u7684\u5f71\u54cd\uff0c\u4ed6\u4eec\u63a5\u53d7\u4e86\u706d\u6d3b\u75c5\u6bd2\u75ab\u82d7 CoronaVac \u7684\u4e24\u5242\u65b9\u6848.\u7ed3\u679c\u6211\u4eec\u89c2\u5bdf\u5230\u7531 Lambda \u523a\u7a81\u86cb\u767d\u4ecb\u5bfc\u7684\u611f\u67d3\u6027\u589e\u52a0\uff0c\u751a\u81f3\u9ad8\u4e8e D614G\uff08\u8c31\u7cfb B\uff09\u6216 Alpha \u548c Gamma \u53d8\u4f53\u3002\u4e0e\u91ce\u751f\u578b\uff08\u8c31\u7cfb A\uff09\u76f8\u6bd4\uff0cLambda \u53d8\u4f53\u7684\u4e2d\u548c\u4f5c\u7528\u964d\u4f4e\u4e86 3.05 \u500d\uff0c\u800c Gamma \u53d8\u4f53\u964d\u4f4e\u4e86 2.33 \u500d\uff0cAlpha \u53d8\u4f53\u964d\u4f4e\u4e86 2.03 \u500d\u3002\u7ed3\u8bba\u6211\u4eec\u7684\u7ed3\u679c\u8868\u660e\uff0c\u5b58\u5728\u4e8e\u611f\u5174\u8da3\u7684 Lambda \u53d8\u4f53\u7684\u523a\u7a81\u86cb\u767d\u4e2d\u7684\u7a81\u53d8\u4f1a\u589e\u52a0\u5bf9 CoronaVac \u5f15\u53d1\u7684\u4e2d\u548c\u6297\u4f53\u7684\u611f\u67d3\u6027\u548c\u514d\u75ab\u9003\u9038\u3002\u8fd9\u4e9b\u6570\u636e\u5f3a\u5316\u4e86\u8fd9\u6837\u4e00\u79cd\u89c2\u70b9\uff0c\u5373\u5728 SARS-CoV-2 \u9ad8\u4f20\u64ad\u56fd\u5bb6\u7684\u5927\u89c4\u6a21\u75ab\u82d7\u63a5\u79cd\u6d3b\u52a8\u5fc5\u987b\u4f34\u968f\u7740\u4e25\u683c\u7684\u57fa\u56e0\u7ec4\u76d1\u6d4b\uff0c\u4ee5\u4fbf\u8bc6\u522b\u643a\u5e26\u5c16\u5cf0\u7a81\u53d8\u7684\u65b0\u5206\u79bb\u682a\u548c\u514d\u75ab\u5b66\u7814\u7a76\uff0c\u65e8\u5728\u786e\u5b9a\u8fd9\u4e9b\u7a81\u53d8\u5bf9\u514d\u75ab\u9003\u9038\u548c\u514d\u75ab\u9003\u9038\u7684\u5f71\u54cd\u3002\u75ab\u82d7\u7a81\u7834\u3002 ANID \u667a\u5229\u901a\u8fc7 Fondecyt \u62e8\u6b3e\u7f16\u53f7 1190156 (RS-R.)\u30011211547 (FV-E.) \u548c 1181656 (AG) \u4e3a\u4f5c\u8005\u63d0\u4f9b\u652f\u6301 \u6211\u786e\u8ba4\u5df2\u9075\u5faa\u6240\u6709\u76f8\u5173\u7684\u9053\u5fb7\u51c6\u5219\uff0c\u5e76\u4e14\u4efb\u4f55\u5fc5\u8981\u7684 IRB \u548c/\u6216\u9053\u5fb7\u59d4\u5458\u4f1a\u6279\u51c6\u5747\u5df2\u83b7\u5f97\u5df2\u83b7\u5f97\u3002\u4e3a\u6240\u8ff0\u7814\u7a76\u63d0\u4f9b\u6279\u51c6\u6216\u8c41\u514d\u7684 IRB/\u76d1\u7763\u673a\u6784\u7684\u8be6\u7ec6\u4fe1\u606f\u5982\u4e0b\uff1a\n\u8be5\u7814\u7a76\u65b9\u6848\u5f97\u5230\u4e86\u667a\u5229\u5927\u5b66\u533b\u5b66\u9662\u4f26\u7406\u59d4\u5458\u4f1a\uff08\u9879\u76ee\u7f16\u53f7 0361-2021 \u548c\u7f16\u53f7 096-2020\uff09\u548c Clinica Santa Maria\uff08\u9879\u76ee\u7f16\u53f7 132604-21\uff09\u7684\u6279\u51c6\u3002\u6240\u6709\u53c2\u4e0e\u8005\u90fd\u7b7e\u7f72\u4e86\u77e5\u60c5\u540c\u610f\u4e66\uff0c\u5e76\u4e14\u4ed6\u4eec\u7684\u6837\u672c\u662f\u533f\u540d\u7684\u3002\u5df2\u83b7\u5f97\u6240\u6709\u5fc5\u8981\u7684\u60a3\u8005/\u53c2\u4e0e\u8005\u540c\u610f\uff0c\u5e76\u5df2\u5b58\u6863\u9002\u5f53\u7684\u673a\u6784\u8868\u683c\u3002\u6211\u4e86\u89e3\u6240\u6709\u4e34\u5e8a\u8bd5\u9a8c\u548c\u4efb\u4f55\u5176\u4ed6\u524d\u77bb\u6027\u5e72\u9884\u7814\u7a76\u5fc5\u987b\u5728 ICMJE \u6279\u51c6\u7684\u6ce8\u518c\u4e2d\u5fc3\u6ce8\u518c\uff0c\u4f8b\u5982 ClinicalTrials.gov\u3002\u6211\u786e\u8ba4\u624b\u7a3f\u4e2d\u62a5\u544a\u7684\u4efb\u4f55\u6b64\u7c7b\u7814\u7a76\u5df2\u6ce8\u518c\u5e76\u63d0\u4f9b\u8bd5\u9a8c\u6ce8\u518c ID\uff08\u6ce8\u610f\uff1a\u5982\u679c\u53d1\u5e03\u56de\u987e\u6027\u6ce8\u518c\u7684\u524d\u77bb\u6027\u7814\u7a76\uff0c\u8bf7\u5728\u8bd5\u9a8c ID \u5b57\u6bb5\u4e2d\u63d0\u4f9b\u58f0\u660e\uff0c\u89e3\u91ca\u4e3a\u4ec0\u4e48\u672a\u63d0\u524d\u6ce8\u518c\u8be5\u7814\u7a76\uff09 .\u6211\u5df2\u9075\u5faa\u6240\u6709\u9002\u5f53\u7684\u7814\u7a76\u62a5\u544a\u6307\u5357\uff0c\u5e76\u4e0a\u4f20\u4e86\u76f8\u5173\u7684 EQUATOR Network \u7814\u7a76\u62a5\u544a\u6e05\u5355\u548c\u5176\u4ed6\u76f8\u5173\u6750\u6599\u4f5c\u4e3a\u8865\u5145\u6587\u4ef6\uff08\u5982\u679c\u9002\u7528\uff09\u3002", "note_en": "Background The newly described SARS-CoV-2 lineage C.37 was recently classified as a variant of interest by the WHO (Lambda variant) based on its high circulation rates in South American countries and the presence of critical mutations in the spike protein. The impact of such mutations in infectivity and immune escape from neutralizing antibodies are entirely unknown.\n Methods We performed a pseudotyped virus neutralization assay and determined the impact of the Lambda variant on infectivity and immune escape using plasma samples from healthcare workers (HCW) from two centers in Santiago, Chile who received the two-doses scheme of the inactivated virus vaccine CoronaVac.\n Results We observed an increased infectivity mediated by the Lambda spike protein that was even higher than that of the D614G (lineage B) or the Alpha and Gamma variants. Compared to the Wild type (lineage A), neutralization was decreased by 3.05-fold for the Lambda variant while it was 2.33-fold for the Gamma variant and 2.03-fold for the Alpha variant.\n Conclusions Our results indicate that mutations present in the spike protein of the Lambda variant of interest confer increased infectivity and immune escape from neutralizing antibodies elicited by CoronaVac. These data reinforce the idea that massive vaccination campaigns in countries with high SARS-CoV-2 circulation must be accompanied by strict genomic surveillance allowing the identification of new isolates carrying spike mutations and immunology studies aimed to determine the impact of these mutations in immune escape and vaccines breakthrough.\n    ANID Chile supports the authors through Fondecyt grants numbers 1190156 (R.S-R.), 1211547 (F.V.-E.) and 1181656 (A.G.)\n  I confirm all relevant ethical guidelines have been followed, and any necessary IRB and/or ethics committee approvals have been obtained.\n  The details of the IRB/oversight body that provided approval or exemption for the research described are given below:\n The study protocol was approved by the Ethics Committee of the Faculty of Medicine at Universidad de Chile (Projects No 0361-2021 and No 096-2020) and Clinica Santa Maria (Project No132604-21). All participants signed the informed consent, and their samples were anonymized.\n All necessary patient/participant consent has been obtained and the appropriate institutional forms have been archived.\n  I understand that all clinical trials and any other prospective interventional studies must be registered with an ICMJE-approved registry, such as ClinicalTrials.gov. I confirm that any such study reported in the manuscript has been registered and the trial registration ID is provided (note: if posting a prospective study registered retrospectively, please provide a statement in the trial ID field explaining why the study was not registered in advance).\n  I have followed all appropriate research reporting guidelines and uploaded the relevant EQUATOR Network research reporting checklist(s) and other pertinent material as supplementary files, if applicable.", "posttime": "2021-07-29 21:25:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u514d\u75ab,immune,\u6ce8\u518c", "title": "\u611f\u5174\u8da3\u7684\u65b0\u578b SARS-CoV-2 \u53d8\u4f53 Lambda \u7684\u611f\u67d3\u6027\u548c\u514d\u75ab\u9003\u9038", "title_en": "Infectivity and immune escape of the new SARS-CoV-2 variant of interest Lambda", "transed": 1, "url": "https://www.medrxiv.org/content/10.1101/2021.06.28.21259673v1", "via": "", "real_tags": ["\u514d\u75ab", "immune", "\u6ce8\u518c"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070177, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2009 \u5e74 7 \u6708 \u7a0b\u5e8f\u5458\u5982\u6b64\u4e0d\u559c\u6b22\u4f1a\u8bae\u7684\u4e00\u4e2a\u539f\u56e0\u662f\u4ed6\u4eec\u7684\u65e5\u7a0b\u5b89\u6392\u4e0e\u5176\u4ed6\u4eba\u4e0d\u540c\u3002\u4f1a\u8bae\u82b1\u8d39\u66f4\u591a\u3002\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u65e5\u7a0b\u5b89\u6392\uff0c\u6211\u5c06\u5176\u79f0\u4e3a\u7ecf\u7406\u65e5\u7a0b\u5b89\u6392\u548c\u5236\u9020\u5546\u65e5\u7a0b\u5b89\u6392\u3002\u7ecf\u7406\u7684\u65e5\u7a0b\u5b89\u6392\u662f\u7981\u6b62\u7684\u3002\u5b83\u4f53\u73b0\u5728\u4f20\u7edf\u7684\u7ea6\u4f1a\u7c3f\u4e2d\uff0c\u6bcf\u5929\u90fd\u88ab\u5207\u6210\u4e00\u5c0f\u65f6\u7684\u65f6\u95f4\u95f4\u9694\u3002\u5982\u679c\u9700\u8981\uff0c\u60a8\u53ef\u4ee5\u4e3a\u5355\u4e2a\u4efb\u52a1\u5b89\u6392\u51e0\u4e2a\u5c0f\u65f6\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u60a8\u6bcf\u5c0f\u65f6\u90fd\u4f1a\u66f4\u6539\u60a8\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002\u5f53\u4f60\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5229\u7528\u65f6\u95f4\u65f6\uff0c\u4e0e\u67d0\u4eba\u89c1\u9762\u53ea\u662f\u4e00\u4e2a\u5b9e\u9645\u95ee\u9898\u3002\u5728\u60a8\u7684\u65e5\u7a0b\u5b89\u6392\u4e2d\u627e\u5230\u4e00\u4e2a\u7a7a\u4f4d\uff0c\u9884\u8ba2\u5b83\u4eec\uff0c\u60a8\u5c31\u5b8c\u6210\u4e86\u3002\u5927\u591a\u6570\u6709\u6743\u52bf\u7684\u4eba\u90fd\u5728\u7ecf\u7406\u7684\u65e5\u7a0b\u5b89\u6392\u4e0a\u3002\u8fd9\u662f\u547d\u4ee4\u7684\u65f6\u95f4\u8868\u3002\u4f46\u662f\u8fd8\u6709\u53e6\u4e00\u79cd\u4f7f\u7528\u65f6\u95f4\u7684\u65b9\u5f0f\uff0c\u8fd9\u5728\u7a0b\u5e8f\u5458\u548c\u4f5c\u5bb6\u4e2d\u5f88\u5e38\u89c1\u3002\u4ed6\u4eec\u901a\u5e38\u559c\u6b22\u4ee5\u81f3\u5c11\u534a\u5929\u4e3a\u5355\u4f4d\u6765\u4f7f\u7528\u65f6\u95f4\u3002\u4ee5\u5c0f\u65f6\u4e3a\u5355\u4f4d\uff0c\u4f60\u4e0d\u80fd\u5f88\u597d\u5730\u7f16\u5199\u6216\u7f16\u7a0b\u3002\u8fd9\u51e0\u4e4e\u662f\u5f00\u59cb\u7684\u65f6\u95f4\u3002\u5f53\u60a8\u6309\u7167\u5236\u9020\u5546\u7684\u65f6\u95f4\u8868\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u4f1a\u8bae\u5c31\u662f\u707e\u96be\u3002\u4e00\u4e2a\u5355\u72ec\u7684\u4f1a\u8bae\u53ef\u4ee5\u5439\u4e00\u6574\u4e2a\u4e0b\u5348\uff0c\u628a\u5b83\u5206\u6210\u4e24\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u90fd\u592a\u5c0f\u800c\u65e0\u6cd5\u505a\u4efb\u4f55\u56f0\u96be\u7684\u4e8b\u60c5\u3002\u53e6\u5916\uff0c\u4f60\u5fc5\u987b\u8bb0\u5f97\u53c2\u52a0\u4f1a\u8bae\u3002\u8fd9\u5bf9\u4e8e\u7ecf\u7406\u65e5\u7a0b\u4e0a\u7684\u67d0\u4e2a\u4eba\u6765\u8bf4\u6ca1\u6709\u95ee\u9898\u3002\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u5c0f\u65f6\u603b\u4f1a\u6709\u4e8b\u60c5\u53d1\u751f\uff1b\u552f\u4e00\u7684\u95ee\u9898\u662f\u4ec0\u4e48\u3002\u4f46\u662f\uff0c\u5f53\u5236\u9020\u5546\u65e5\u7a0b\u8868\u4e0a\u7684\u67d0\u4e2a\u4eba\u5f00\u4f1a\u65f6\uff0c\u4ed6\u4eec\u5fc5\u987b\u8003\u8651\u4e00\u4e0b\u3002\u5bf9\u4e8e\u5236\u9020\u5546\u65e5\u7a0b\u8868\u4e0a\u7684\u67d0\u4e2a\u4eba\u6765\u8bf4\uff0c\u5f00\u4f1a\u5c31\u50cf\u629b\u51fa\u4e00\u4e2a\u4f8b\u5916\u3002\u5b83\u4e0d\u4ec5\u4f1a\u5bfc\u81f4\u60a8\u4ece\u4e00\u9879\u4efb\u52a1\u5207\u6362\u5230\u53e6\u4e00\u9879\u4efb\u52a1\uff1b\u5b83\u4f1a\u6539\u53d8\u60a8\u7684\u5de5\u4f5c\u6a21\u5f0f\u3002\u6211\u53d1\u73b0\u4e00\u6b21\u4f1a\u8bae\u6709\u65f6\u4f1a\u5f71\u54cd\u4e00\u6574\u5929\u3002\u4e00\u4e2a\u4f1a\u8bae\u901a\u5e38\u81f3\u5c11\u8981\u5439\u534a\u5929\uff0c\u4e00\u4e2a\u4e0a\u5348\u6216\u4e00\u4e2a\u4e0b\u5348\u5c31\u5206\u624b\u3002\u4f46\u9664\u6b64\u4e4b\u5916\uff0c\u6709\u65f6\u8fd8\u4f1a\u4ea7\u751f\u8fde\u9501\u6548\u5e94\u3002\u5982\u679c\u6211\u77e5\u9053\u4e0b\u5348\u4f1a\u88ab\u6253\u7834\uff0c\u6211\u5c31\u4e0d\u592a\u53ef\u80fd\u5728\u65e9\u4e0a\u5f00\u59cb\u4e00\u4e9b\u96c4\u5fc3\u52c3\u52c3\u7684\u4e8b\u60c5\u3002\u6211\u77e5\u9053\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u8fc7\u4e8e\u654f\u611f\uff0c\u4f46\u5982\u679c\u60a8\u662f\u5236\u9020\u5546\uff0c\u8bf7\u8003\u8651\u60a8\u81ea\u5df1\u7684\u60c5\u51b5\u3002\u4e00\u60f3\u5230\u4e00\u6574\u5929\u90fd\u53ef\u4ee5\u81ea\u7531\u5de5\u4f5c\uff0c\u5b8c\u5168\u6ca1\u6709\u7ea6\u4f1a\uff0c\u60a8\u7684\u7cbe\u795e\u4f1a\u4e0d\u4f1a\u632f\u4f5c\u8d77\u6765\uff1f\u55ef\uff0c\u8fd9\u610f\u5473\u7740\u5f53\u4f60\u4e0d\u8fd9\u6837\u505a\u65f6\uff0c\u4f60\u7684\u7cbe\u795e\u4f1a\u76f8\u5e94\u5730\u6cae\u4e27\u3002\u96c4\u5fc3\u52c3\u52c3\u7684\u9879\u76ee\u987e\u540d\u601d\u4e49\u5c31\u662f\u63a5\u8fd1\u4f60\u80fd\u529b\u7684\u6781\u9650\u3002\u58eb\u6c14\u7684\u5c0f\u5e45\u4e0b\u964d\u8db3\u4ee5\u6740\u6b7b\u4ed6\u4eec\u3002\u6bcf\u79cd\u7c7b\u578b\u7684\u65f6\u95f4\u8868\u90fd\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\u3002\u5f53\u4ed6\u4eec\u76f8\u9047\u65f6\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u7531\u4e8e\u5927\u591a\u6570\u6709\u6743\u52bf\u7684\u4eba\u90fd\u6309\u7167\u7ecf\u7406\u7684\u65f6\u95f4\u8868\u8fd0\u4f5c\uff0c\u5982\u679c\u4ed6\u4eec\u613f\u610f\uff0c\u4ed6\u4eec\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u4eba\u4ee5\u4ed6\u4eec\u7684\u9891\u7387\u4ea7\u751f\u5171\u9e23\u3002\u4f46\u662f\u66f4\u806a\u660e\u7684\u4eba\u4f1a\u514b\u5236\u81ea\u5df1\uff0c\u5982\u679c\u4ed6\u4eec\u77e5\u9053\u4e3a\u4ed6\u4eec\u5de5\u4f5c\u7684\u4e00\u4e9b\u4eba\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5de5\u4f5c\u3002\u6211\u4eec\u7684\u60c5\u51b5\u5f88\u4e0d\u5bfb\u5e38\u3002\u51e0\u4e4e\u6240\u6709\u7684\u6295\u8d44\u8005\uff0c\u5305\u62ec\u6211\u8ba4\u8bc6\u7684\u6240\u6709 VC\uff0c\u90fd\u6309\u7167\u7ecf\u7406\u7684\u65f6\u95f4\u8868\u8fd0\u4f5c\u3002\u4f46\u662f Y Combinator \u6309\u7167\u5236\u9020\u5546\u7684\u65f6\u95f4\u8868\u8fd0\u884c\u3002 Rtm\u3001Trevor \u548c\u6211\u8fd9\u6837\u505a\u662f\u56e0\u4e3a\u6211\u4eec\u603b\u662f\u8fd9\u6837\u505a\uff0c\u800c Jessica \u4e5f\u8fd9\u6837\u505a\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5979\u5df2\u7ecf\u4e0e\u6211\u4eec\u4fdd\u6301\u540c\u6b65\u3002\u5982\u679c\u5f00\u59cb\u6709\u66f4\u591a\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u516c\u53f8\uff0c\u6211\u4e0d\u4f1a\u611f\u5230\u60ca\u8bb6\u3002\u6211\u6000\u7591\u521b\u59cb\u4eba\u53ef\u80fd\u8d8a\u6765\u8d8a\u80fd\u591f\u62b5\u5236\u6216\u81f3\u5c11\u63a8\u8fdf\u8f6c\u53d8\u4e3a\u7ecf\u7406\uff0c\u5c31\u50cf\u51e0\u5341\u5e74\u524d\u4ed6\u4eec\u5f00\u59cb\u80fd\u591f\u62b5\u5236\u4ece\u725b\u4ed4\u88e4\u8f6c\u5411\u897f\u88c5\u4e00\u6837\u3002\u6211\u4eec\u5982\u4f55\u8bbe\u6cd5\u5728 maker \u7684\u65e5\u7a0b\u5b89\u6392\u4e0a\u4e3a\u8fd9\u4e48\u591a\u521d\u521b\u516c\u53f8\u63d0\u4f9b\u5efa\u8bae\uff1f\u901a\u8fc7\u4f7f\u7528\u7ecf\u5178\u8bbe\u5907\u5728 maker \u7684\u529e\u516c\u65f6\u95f4\u5185\u6a21\u62df\u7ecf\u7406\u7684\u65e5\u7a0b\u5b89\u6392\u3002\u6bcf\u5468\u6211\u90fd\u4f1a\u7559\u51fa\u597d\u51e0\u6b21\u65f6\u95f4\u53bb\u89c1\u6211\u4eec\u8d44\u52a9\u7684\u521b\u59cb\u4eba\u3002\u8fd9\u4e9b\u65f6\u95f4\u6bb5\u662f\u5728\u6211\u5de5\u4f5c\u65e5\u7ed3\u675f\u65f6\uff0c\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u6ce8\u518c\u7a0b\u5e8f\uff0c\u4ee5\u786e\u4fdd\u7ed9\u5b9a\u529e\u516c\u65f6\u95f4\u5185\u7684\u6240\u6709\u7ea6\u4f1a\u90fd\u96c6\u4e2d\u5728\u6700\u540e\u3002\u56e0\u4e3a\u4ed6\u4eec\u662f\u5728\u6211\u4e00\u5929\u7ed3\u675f\u7684\u65f6\u5019\u6765\u7684\uff0c\u6240\u4ee5\u8fd9\u4e9b\u4f1a\u8bae\u6c38\u8fdc\u4e0d\u4f1a\u4e2d\u65ad\u3002 \uff08\u9664\u975e\u4ed6\u4eec\u7684\u5de5\u4f5c\u65e5\u548c\u6211\u7684\u5de5\u4f5c\u65e5\u540c\u65f6\u7ed3\u675f\uff0c\u5426\u5219\u4f1a\u8bae\u53ef\u80fd\u4f1a\u6253\u65ad\u4ed6\u4eec\uff0c\u4f46\u65e2\u7136\u662f\u4ed6\u4eec\u9884\u7ea6\u7684\uff0c\u90a3\u5bf9\u4ed6\u4eec\u6765\u8bf4\u80af\u5b9a\u662f\u503c\u5f97\u7684\u3002\uff09\u5728\u7e41\u5fd9\u7684\u65f6\u671f\uff0c\u529e\u516c\u65f6\u95f4\u6709\u65f6\u4f1a\u5f88\u957f\uff0c\u4ed6\u4eec\u538b\u7f29\u4e86\u4e00\u5929\uff0c\u4f46\u4ed6\u4eec\u4ece\u4e0d\u6253\u65ad\u5b83\u3002\u4e0a\u4e16\u7eaa 90 \u5e74\u4ee3\uff0c\u5f53\u6211\u4eec\u5728\u81ea\u5df1\u7684\u521d\u521b\u516c\u53f8\u5de5\u4f5c\u65f6\uff0c\u6211\u5f00\u53d1\u4e86\u53e6\u4e00\u79cd\u5212\u5206\u4e00\u5929\u7684\u6280\u5de7\u3002\u6211\u4ee5\u524d\u6bcf\u5929\u4ece\u665a\u9910\u5230\u51cc\u6668 3 \u70b9\u5de6\u53f3\u7f16\u7a0b\uff0c\u56e0\u4e3a\u665a\u4e0a\u6ca1\u6709\u4eba\u53ef\u4ee5\u6253\u6270\u6211\u3002\u7136\u540e\u6211\u4f1a\u7761\u5230\u4e0a\u5348 11 \u70b9\u5de6\u53f3\uff0c\u7136\u540e\u8fdb\u6765\u5de5\u4f5c\u76f4\u5230\u665a\u9910\uff0c\u6211\u79f0\u4e4b\u4e3a\u201c\u5546\u4e1a\u6d3b\u52a8\u201d\u3002\u6211\u4ece\u6765\u6ca1\u6709\u60f3\u8fc7\u8fd9\u4e9b\uff0c\u4f46\u5b9e\u9645\u4e0a\u6211\u6bcf\u5929\u6709\u4e24\u4e2a\u5de5\u4f5c\u65e5\uff0c\u4e00\u4e2a\u5728\u7ecf\u7406\u7684\u65e5\u7a0b\u8868\u4e0a\uff0c\u4e00\u4e2a\u5728\u5236\u9020\u5546\u7684\u65e5\u7a0b\u8868\u4e0a\u3002\u5f53\u4f60\u6309\u7167\u7ecf\u7406\u7684\u65f6\u95f4\u8868\u8fd0\u4f5c\u65f6\uff0c\u4f60\u53ef\u4ee5\u505a\u4e00\u4e9b\u4f60\u6c38\u8fdc\u4e0d\u60f3\u5728\u5236\u9020\u5546\u7684\u65f6\u95f4\u8868\u4e0a\u505a\u7684\u4e8b\u60c5\uff1a\u4f60\u53ef\u4ee5\u6709\u63a8\u6d4b\u6027\u7684\u4f1a\u8bae\u3002\u4f60\u53ef\u4ee5\u9047\u89c1\u67d0\u4eba\u53ea\u662f\u4e3a\u4e86\u4e92\u76f8\u4e86\u89e3\u3002\u5982\u679c\u4f60\u7684\u65e5\u7a0b\u5b89\u6392\u4e2d\u6709\u7a7a\u4f4d\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5462\uff1f\u4e5f\u8bb8\u7ed3\u679c\u662f\u4f60\u4eec\u53ef\u4ee5\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4e92\u76f8\u5e2e\u52a9\u3002\u7845\u8c37\uff08\u4ee5\u53ca\u6574\u4e2a\u4e16\u754c\uff0c\u5c31\u6b64\u800c\u8a00\uff09\u7684\u5546\u754c\u4eba\u58eb\u4e00\u76f4\u5728\u8fdb\u884c\u6295\u673a\u6027\u4f1a\u8bae\u3002\u5982\u679c\u4f60\u5728\u7ecf\u7406\u7684\u65e5\u7a0b\u5b89\u6392\u4e0a\uff0c\u4ed6\u4eec\u5b9e\u9645\u4e0a\u662f\u514d\u8d39\u7684\u3002\u5b83\u4eec\u662f\u5982\u6b64\u5e38\u89c1\uff0c\u4ee5\u81f3\u4e8e\u63d0\u51fa\u5b83\u4eec\u65f6\u6709\u72ec\u7279\u7684\u8bed\u8a00\uff1a\u4f8b\u5982\uff0c\u8bf4\u4f60\u60f3\u201c\u559d\u5496\u5561\u201d\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u5728\u5236\u9020\u5546\u7684\u65e5\u7a0b\u5b89\u6392\u4e2d\uff0c\u90a3\u4e48\u63a8\u6d4b\u6027\u4f1a\u8bae\u7684\u6210\u672c\u4f1a\u975e\u5e38\u9ad8\u3002\u8fd9\u8ba9\u6211\u4eec\u9677\u5165\u4e86\u56f0\u5883\u3002\u6bcf\u4e2a\u4eba\u90fd\u5047\u8bbe\uff0c\u50cf\u5176\u4ed6\u6295\u8d44\u8005\u4e00\u6837\uff0c\u6211\u4eec\u6309\u7167\u7ecf\u7406\u7684\u65f6\u95f4\u8868\u8fd0\u884c\u3002\u6240\u4ee5\u4ed6\u4eec\u628a\u6211\u4eec\u4ecb\u7ecd\u7ed9\u4ed6\u4eec\u8ba4\u4e3a\u6211\u4eec\u5e94\u8be5\u89c1\u9762\u7684\u4eba\uff0c\u6216\u8005\u7ed9\u6211\u4eec\u53d1\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5efa\u8bae\u6211\u4eec\u559d\u676f\u5496\u5561\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u6709\u4e24\u4e2a\u9009\u62e9\uff0c\u90fd\u4e0d\u662f\u4e00\u4e2a\u597d\u529e\u6cd5\uff1a\u6211\u4eec\u53ef\u4ee5\u548c\u4ed6\u4eec\u89c1\u9762\uff0c\u6d6a\u8d39\u534a\u5929\u7684\u5de5\u4f5c\uff1b\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u5c3d\u91cf\u907f\u514d\u4e0e\u4ed6\u4eec\u89c1\u9762\uff0c\u5e76\u53ef\u80fd\u5192\u72af\u4ed6\u4eec\u3002\u76f4\u5230\u6700\u8fd1\uff0c\u6211\u4eec\u81ea\u5df1\u90fd\u4e0d\u6e05\u695a\u95ee\u9898\u7684\u6839\u6e90\u3002\u6211\u4eec\u53ea\u662f\u7406\u6240\u5f53\u7136\u5730\u8ba4\u4e3a\u6211\u4eec\u4e0d\u5f97\u4e0d\u7834\u574f\u6211\u4eec\u7684\u65e5\u7a0b\u5b89\u6392\u6216\u5192\u72af\u4ed6\u4eba\u3002\u4f46\u662f\u73b0\u5728\u6211\u5df2\u7ecf\u610f\u8bc6\u5230\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4e5f\u8bb8\u8fd8\u6709\u7b2c\u4e09\u79cd\u9009\u62e9\uff1a\u5199\u4e00\u4e9b\u4e1c\u897f\u6765\u89e3\u91ca\u8fd9\u4e24\u79cd\u7c7b\u578b\u7684\u65e5\u7a0b\u5b89\u6392\u3002\u4e5f\u8bb8\u6700\u7ec8\uff0c\u5982\u679c\u7ecf\u7406\u7684\u65f6\u95f4\u8868\u548c\u5236\u9020\u5546\u7684\u65f6\u95f4\u8868\u4e4b\u95f4\u7684\u51b2\u7a81\u5f00\u59cb\u88ab\u66f4\u5e7f\u6cdb\u5730\u7406\u89e3\uff0c\u95ee\u9898\u5c31\u4f1a\u53d8\u5f97\u4e0d\u90a3\u4e48\u91cd\u8981\u3002\u6211\u4eec\u8fd9\u4e9b\u5728\u5236\u9020\u5546\u65f6\u95f4\u8868\u4e0a\u7684\u4eba\u613f\u610f\u59a5\u534f\u3002\u6211\u4eec\u77e5\u9053\u6211\u4eec\u5fc5\u987b\u4e3e\u884c\u4e00\u4e9b\u4f1a\u8bae\u3002\u6211\u4eec\u53ea\u8981\u6c42\u7ecf\u7406\u65e5\u7a0b\u8868\u4e0a\u7684\u4eba\u4e86\u89e3\u6210\u672c\u3002\u611f\u8c22 Sam Altman\u3001Trevor Blackwell\u3001Paul Buchheit\u3001Jessica Livingston \u548c Robert Morris \u9605\u8bfb\u672c\u6587\u7684\u8349\u7a3f\u3002\u6709\u5173\u7684\uff1a", "note_en": "July 2009  One reason programmers dislike meetings so much is that they&#39;re ona different type of schedule from other people. Meetings cost themmore.  There are two types of schedule, which I&#39;ll call the manager&#39;sschedule and the maker&#39;s schedule. The manager&#39;s schedule is forbosses. It&#39;s embodied in the traditional appointment book, witheach day cut into one hour intervals. You can block off severalhours for a single task if you need to, but by default you changewhat you&#39;re doing every hour.  When you use time that way, it&#39;s merely a practical problem to meetwith someone. Find an open slot in your schedule, book them, andyou&#39;re done.  Most powerful people are on the manager&#39;s schedule. It&#39;s theschedule of command. But there&#39;s another way of using time that&#39;scommon among people who make things, like programmers and writers.They generally prefer to use time in units of half a day at least.You can&#39;t write or program well in units of an hour. That&#39;s barelyenough time to get started.  When you&#39;re operating on the maker&#39;s schedule, meetings are adisaster. A single meeting can blow a whole afternoon, by breakingit into two pieces each too small to do anything hard in. Plus youhave to remember to go to the meeting. That&#39;s no problem for someoneon the manager&#39;s schedule. There&#39;s always something coming on thenext hour; the only question is what. But when someone on themaker&#39;s schedule has a meeting, they have to think about it.  For someone on the maker&#39;s schedule, having a meeting is likethrowing an exception. It doesn&#39;t merely cause you to switch fromone task to another; it changes the mode in which you work.  I find one meeting can sometimes affect a whole day. A meetingcommonly blows at least half a day, by breaking up a morning orafternoon. But in addition there&#39;s sometimes a cascading effect.If I know the afternoon is going to be broken up, I&#39;m slightly lesslikely to start something ambitious in the morning. I know thismay sound oversensitive, but if you&#39;re a maker, think of your owncase. Don&#39;t your spirits rise at the thought of having an entireday free to work, with no appointments at all? Well, that meansyour spirits are correspondingly depressed when you don&#39;t. Andambitious projects are by definition close to the limits of yourcapacity. A small decrease in morale is enough to kill them off.  Each type of schedule works fine by itself. Problems arise whenthey meet. Since most powerful people operate on the manager&#39;sschedule, they&#39;re in a position to make everyone resonate at theirfrequency if they want to. But the smarter ones restrain themselves,if they know that some of the people working for them need longchunks of time to work in.  Our case is an unusual one. Nearly all investors, including allVCs I know, operate on the manager&#39;s schedule. But  Y Combinatorruns on the maker&#39;s schedule. Rtm and Trevor and I do because wealways have, and Jessica does too, mostly, because she&#39;s gotteninto sync with us.  I wouldn&#39;t be surprised if there start to be more companies likeus. I suspect founders may increasingly be able to resist, or atleast postpone, turning into managers, just as a few decades agothey started to be able to resist switching from jeansto suits.  How do we manage to advise so many startups on the maker&#39;s schedule?By using the classic device for simulating the manager&#39;s schedulewithin the maker&#39;s: office hours. Several times a week I set asidea chunk of time to meet founders we&#39;ve funded. These chunks oftime are at the end of my working day, and I wrote a signup programthat ensures all the appointments within a given set of office hoursare clustered at the end. Because they come at the end of my daythese meetings are never an interruption. (Unless their workingday ends at the same time as mine, the meeting presumably interruptstheirs, but since they made the appointment it must be worth it tothem.) During busy periods, office hours sometimes get long enoughthat they compress the day, but they never interrupt it.  When we were working on   our own startup, back in the 90s, I evolvedanother trick for partitioning the day. I used to program fromdinner till about 3 am every day, because at night no one couldinterrupt me. Then I&#39;d sleep till about 11 am, and come in andwork until dinner on what I called &#34;business stuff.&#34; I never thoughtof it in these terms, but in effect I had two workdays each day,one on the manager&#39;s schedule and one on the maker&#39;s.  When you&#39;re operating on the manager&#39;s schedule you can do somethingyou&#39;d never want to do on the maker&#39;s: you can have speculativemeetings. You can meet someone just to get to know one another.If you have an empty slot in your schedule, why not? Maybe it willturn out you can help one another in some way.  Business people in Silicon Valley (and the whole world, for thatmatter) have speculative meetings all the time. They&#39;re effectivelyfree if you&#39;re on the manager&#39;s schedule. They&#39;re so common thatthere&#39;s distinctive language for proposing them: saying that youwant to &#34;grab coffee,&#34; for example.  Speculative meetings are terribly costly if you&#39;re on the maker&#39;sschedule, though. Which puts us in something of a bind. Everyoneassumes that, like other investors, we run on the manager&#39;s schedule.So they introduce us to someone they think we ought to meet, orsend us an email proposing we grab coffee. At this point we havetwo options, neither of them good: we can meet with them, and losehalf a day&#39;s work; or we can try to avoid meeting them, and probablyoffend them.  Till recently we weren&#39;t clear in our own minds about the sourceof the problem. We just took it for granted that we had to eitherblow our schedules or offend people. But now that I&#39;ve realizedwhat&#39;s going on, perhaps there&#39;s a third option: to write somethingexplaining the two types of schedule. Maybe eventually, if theconflict between the manager&#39;s schedule and the maker&#39;s schedulestarts to be more widely understood, it will become less of aproblem.  Those of us on the maker&#39;s schedule are willing to compromise. Weknow we have to have some number of meetings. All we ask from thoseon the manager&#39;s schedule is that they understand the cost.       Thanks to Sam Altman, Trevor Blackwell, Paul Buchheit, Jessica Livingston,and Robert Morris for reading drafts of this.     Related:", "posttime": "2021-07-29 21:25:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65f6\u95f4\u8868,schedule,\u4f1a\u8bae", "title": "\u5236\u9020\u5546\u7684\u65f6\u95f4\u8868\uff0c\u7ecf\u7406\u7684\u65f6\u95f4\u8868\uff082009\uff09", "title_en": "Maker's Schedule, Manager's Schedule (2009)", "transed": 1, "url": "http://www.paulgraham.com/makersschedule.html", "via": "", "real_tags": ["\u65f6\u95f4\u8868", "schedule", "\u4f1a\u8bae"]}, {"category": "", "categoryclass": "", "imagename": "723bc61bd5ee86aa782f85a923eeab18.png", "infoid": 1070176, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u91cc\uff0c\u7531\u4e8e\u8d44\u672c\u5e02\u573a\u7684\u610f\u5916\u53cd\u5f39\uff0cZerodha \u7684\u5ba2\u6237\u7fa4\u589e\u52a0\u4e86\u4e24\u500d\u591a\uff0c\u663e\u7740\u589e\u52a0\u4e86\u6211\u4eec\u5e73\u53f0\u4e0a\u7684\u5e76\u53d1\u7528\u6237\u6570\u91cf\u4ee5\u53ca\u5b83\u4eec\u5728\u540e\u53f0\u4f17\u591a\u7cfb\u7edf\u4e0a\u4ea7\u751f\u7684\u6d41\u91cf\u548c\u8d1f\u8f7d\u3002\u5c31\u4e0a\u4e0b\u6587\u800c\u8a00\uff0c\u5728 2020 \u5e74 1 \u6708\uff0c\u6211\u4eec\u6bcf\u5929\u5904\u7406 2 \u591a\u4e07\u7b14\u96f6\u552e\u4ea4\u6613\u3002\u52302020\u5e744\u6708\uff0c\u5b83\u5df2\u7ecf\u4e0a\u5347\u52307+\u767e\u4e07\u3002\u4eca\u5929\uff0c\u5b83\u4e0a\u5347\u5230 12+ \u767e\u4e07\u3002\u6211\u4eec\u7684\u7528\u6237\u7fa4\u4ece\u53bb\u5e74\u7684 2+ \u767e\u4e07\u589e\u52a0\u5230 6+ \u767e\u4e07\u3002\u6211\u4eec\u4ece\u672a\u9884\u89c1\u5230\u6211\u4eec\u5728\u5341\u5e74\u5185\u7f13\u6162\u4e14\u53ef\u9884\u6d4b\u5730\u589e\u957f\u7684\u5ba2\u6237\u7fa4\u4f1a\u5728\u4e0d\u5230\u4e00\u5e74\u7684\u65f6\u95f4\u5185\u589e\u52a0\u4e24\u500d\u3002\u4e5f\u4e0d\u662f\u6211\u4eec\u66fe\u7ecf\u5c1d\u8bd5\u8fc7\u8fd9\u6837\u505a\u3002\u7136\u800c\uff0c\u5f53\u5b83\u786e\u5b9e\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u80fd\u591f\u8c03\u6574\u6211\u4eec\u7684\u8f6f\u4ef6\u3001\u57fa\u7840\u8bbe\u65bd\u548c\u7ec4\u7ec7\uff0c\u800c\u5bf9\u6211\u4eec\u7684\u5806\u6808\u53ea\u6709\u540d\u4e49\u4e0a\u7684\u5f71\u54cd\uff0c\u5e76\u4e14\u6280\u672f\u548c\u57fa\u7840\u8bbe\u65bd\u6210\u672c\u7684\u589e\u52a0\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u8fd9\u5305\u62ec\u7531\u4e8e 2020 \u5e74\u7684 Covid \u5c01\u9501\uff0c\u6211\u4eec\u7684 1000 \u591a\u540d\u5458\u5de5\u51e0\u4e4e\u5728\u4e00\u591c\u4e4b\u95f4\u5c31\u8fc7\u6e21\u5230\u5168\u804c\u8fdc\u7a0b\u5de5\u4f5c\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u53bb\u5e74\u6709 30 \u540d\u6210\u5458\u7684\u6280\u672f\u56e2\u961f\u73b0\u5728\u5df2\u7ecf\u8fbe\u5230 31 \u540d\u3002\u5a92\u4f53\u548c\u793e\u4ea4\u5a92\u4f53\u5bf9\u589e\u957f\u7684\u72c2\u70ed\u5728\u5546\u4e1a\u9886\u57df\u5f15\u8d77\u4e86\u76f8\u5f53\u5927\u7684\u5174\u8da3\uff0c\u5e76\u4e14\u6709\u8bb8\u591a\u7591\u95ee\uff1a\u6211\u4eec\u5982\u4f55\u7ba1\u7406\u6211\u4eec\u7684\u7cfb\u7edf\u548c\u6210\u672c\u4ee5\u5e94\u5bf9\u8d44\u672c\u5e02\u573a\u6d3b\u52a8\u7684\u9694\u591c\u7206\u70b8\uff1f\u8fd9\u7bc7\u6587\u7ae0\u662f\u5173\u4e8e\u6211\u4eec\u5728 Zerodha \u4f7f\u7528\u7684\u73b0\u5b9e\u751f\u6d3b\u5b9e\u8df5\u7684\u5404\u79cd\u7b14\u8bb0\uff0c\u4ee5\u53ca\u6765\u81ea\u8be5\u884c\u4e1a\u7684\u8bb8\u591a\u7b2c\u4e00\u624b\u89c1\u89e3\uff0c\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u8fd9\u4e9b\u90fd\u662f\u5173\u4e8e\u5982\u4f55\u4e0d\u8fd0\u8425\u6280\u672f\u7ec4\u7ec7\u7684\u91cd\u8981\u6559\u8bad\u3002\u8fd9\u4e9b\u8bf4\u660e\u8868\u660e\uff0c\u6280\u672f\u7ec4\u7ec7\u53ca\u5176\u7cfb\u7edf\u5e94\u5bf9\u672a\u6765\u4e0d\u786e\u5b9a\u6027\u548c\u6781\u7aef\u6ce2\u52a8\u7684\u80fd\u529b\u53ef\u4ee5\u690d\u6839\u4e8e\u5e38\u8bc6\u7b2c\u4e00\u539f\u5219\u3002\u8fd9\u4e9b\u539f\u5219\u53ef\u4ee5\u589e\u52a0\u4e8b\u7269\u5728\u9002\u5f53\u7684\u3001\u51e0\u4e4e\u662f\u5076\u7136\u7684\u65f6\u523b\u81ea\u7136\u800c\u7136\u5730\u843d\u5165\u6b63\u786e\u4f4d\u7f6e\u7684\u51e0\u7387\u3002\u8fd9\u91cc\u7684\u8bb8\u591a\u56e0\u7d20\u66f4\u4eba\u6027\u5316\uff0c\u66f4\u54f2\u5b66\u800c\u4e0d\u662f\u6280\u672f\uff0c\u8fd9\u4e9b\u7b14\u8bb0\u4e5f\u662f\u5982\u6b64\u3002\u5e76\u4e0d\u662f\u8bf4\u8fd9\u4e9b\u662f\u666e\u904d\u9002\u7528\u7684\uff0c\u4f46\u7531\u4e8e\u5b83\u4eec\u5bf9\u6211\u4eec\u6709\u7528\uff0c\u56e0\u6b64\u4e5f\u53ef\u80fd\u5bf9\u5176\u4ed6\u4eba\u6709\u7528\u3002\u4e0e\u5f80\u5e38\u4e00\u6837\uff0c\u9605\u8bfb\u8fd9\u4e9b\u8f76\u4e8b\u65f6\u5e94\u8be5\u5bf9\u4e0a\u4e0b\u6587\u548c\u6240\u6d89\u53ca\u7684\u6743\u8861\u6709\u5065\u5eb7\u548c\u7406\u6027\u7684\u8ba4\u8bc6\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u201c\u6253\u6837\u201d\u662f\u4e00\u79cd\u8fb9\u7f18\u77db\u76fe\u3002\u8f6f\u4ef6\u53ef\u4ee5\u8fc5\u901f\u53d8\u5316\u5e76\u5f88\u5feb\u8fc7\u65f6\u3002\u5c31\u50cf\u7269\u7406\u5bf9\u8c61\u4e00\u6837\uff0c\u95ea\u4eae\u7684\u65b0\u8f6f\u4ef6\u53ef\u4ee5\u4f7f\u65e7\u8f6f\u4ef6\u770b\u8d77\u6765\u8fc7\u65f6\uff0c\u504f\u5411\u6280\u672f\u51b3\u7b56\u5e76\u663e\u7740\u6539\u53d8\u5176\u672a\u6765\u7684\u51c6\u5907\u60c5\u51b5\u3002\u77db\u76fe\u7684\u662f\uff0c\u5f53\u4e00\u4e2a\u4eba\u7f29\u5c0f\u4e00\u70b9\u65f6\uff0c\u8f6f\u4ef6\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u51e0\u4e4e\u6ca1\u6709\u53d8\u5316\u3002\u534a\u4e2a\u4e16\u7eaa\u4ee5\u6765\u7684 C \u8bed\u8a00\u4ecd\u7136\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5e76\u4e14\u5728\u53e5\u6cd5\u6216\u8bed\u4e49\u4e0a\u51e0\u4e4e\u6ca1\u6709\u53d8\u5316\uff0c\u65b0\u7684\u8bed\u8a00\u7ee7\u7eed\u5927\u91cf\u501f\u7528\u5b83\u3002\u4e0e SQL \u76f8\u540c\u3002\u4e0e\u51fd\u6570\u5f0f\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7b49\u8303\u5f0f\u76f8\u540c\uff1b\u540c\u6b65\u548c\u5f02\u6b65\u7f51\u7edc\u901a\u4fe1\uff1b RPC \u548c IPC\uff1b\u5185\u6838; RDBM \u548c\u57fa\u4e8e\u884c\u548c\u5217\u7684\u6570\u636e\u5efa\u6a21\uff1b\u5217\u8868\u3001\u5b57\u5178\u548c\u5730\u56fe\uff1b\u7b49\u7b49\u2026\u2026\u867d\u7136\u8ba1\u7b97\u6982\u5ff5\u5f88\u5c11\u53d8\u5316\u4e14\u7f13\u6162\uff0c\u4f46\u5b83\u4eec\u7684\u5177\u4f53\u5316\u8eab\u548c\u8868\u73b0\u5f62\u5f0f\u53ef\u80fd\u4f1a\u8fc5\u901f\u53d8\u5316\uff0c\u5e76\u65f6\u65f6\u6d41\u884c\u3002\u591a\u5e74\u6765\u53d8\u5f97\u65e0\u804a\u7684\u4e1c\u897f\u7a81\u7136\u53ef\u4ee5\u91cd\u65b0\u53d1\u660e\u5e76\u518d\u6b21\u6d41\u884c\u8d77\u6765\uff0c\u4f8b\u5982\u5728\u670d\u52a1\u5668\u7aef\u5448\u73b0 HTML \u5e76\u5c06\u7ed3\u679c\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u5230\u6d4f\u89c8\u5668\uff08\uff01\uff09\uff0c\u6216\u5171\u4eab\u4e2d\u7684\u65e0\u72b6\u6001\u201c\u529f\u80fd\u201d\uff08\u7a0b\u5e8f\uff09\u73af\u5883\uff08\u8fd8\u8bb0\u5f97 /*.php \u548c /cgi-bin/?\uff09\u3002\u8f6f\u4ef6\u8d8b\u52bf\u5f80\u5f80\u5177\u6709\u60ca\u4eba\u7684\u5468\u671f\u6027\u3002\u8ba9\u6211\u60f3\u8d77\u79d1\u5e7b\u7cfb\u5217\u9ed1\u6697\u4e2d\u7684\u4e00\u53e5\u8bdd\u201c\u5f00\u59cb\u662f\u7ed3\u675f\uff0c\u7ed3\u675f\u662f\u5f00\u59cb\u201d\uff0c\u5361\u5170\u5728\u770b\u4e86\u4e00\u96c6\u540e\u968f\u610f\u5730\u8bd5\u56fe\u5192\u5145\u4ed6\u81ea\u5df1\u3002\u4ed6\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\uff0c\u4f46\u6b63\u5982\u4fd7\u8bdd\u6240\u8bf4\uff0c\u201cAll Threads Digress To Karan\u201d\u3002\u8fd9\u79cd\u57fa\u672c\u7684\u8ba4\u8bc6\uff0c\u5373\u8ba1\u7b97\u6982\u5ff5\u4e0e\u5176\u7279\u5b9a\u5b9e\u73b0\u4e0d\u540c\uff0c\u5f88\u5c11\u53d1\u751f\u53d8\u5316\uff0c\u8fd9\u662f\u6784\u5efa\u66f4\u6709\u53ef\u80fd\u4e3a\u672a\u6765\u505a\u597d\u51c6\u5907\u7684\u7cfb\u7edf\u7684\u7b2c\u4e00\u6b65\u3002\u91cd\u8981\u7684\u662f\u8981\u4e86\u89e3\u8f6f\u4ef6\u7684\u8fc7\u53bb\u548c\u73b0\u5728\u7684\u683c\u5c40\uff0c\u4ee5\u4e86\u89e3\u4ec0\u4e48\u662f\u771f\u6b63\u7684\u65b0\u4e8b\u7269\uff0c\u4ec0\u4e48\u662f\u65e7\u7684\uff0c\u4ee5\u53ca\u5f71\u54cd\u6280\u672f\u51b3\u7b56\u7684\u91cd\u8981\u56e0\u7d20\u3002\u5728\u8bc4\u4f30\u6280\u672f\u65f6\uff0c\u65e0\u8bba\u662f Javascript \u6846\u67b6\u8fd8\u662f\u5168\u65b0\u7684\u6280\u672f\uff0c\u6211\u4eec\u90fd\u4ee5\u6b64\u4f5c\u4e3a\u8861\u91cf\u6807\u51c6\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u51b3\u5b9a\u5728 2018 \u5e74\u5c06\u6211\u4eec\u7684\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u79fb\u690d\u5230 Flutter\uff08\u5728\u4e24\u5468\u5185\u7f16\u5199\u4e86\u4e00\u4e2a\u5feb\u901f\u539f\u578b\u4e4b\u540e\uff09\uff0c\u5f53\u65f6 Flutter \u8fd8\u5904\u4e8e alpha \u9636\u6bb5\u2014\u2014\u7ecf\u8fc7\u8ba1\u7b97\u7684\u98ce\u9669\u5f97\u5230\u4e86\u5f88\u597d\u7684\u56de\u62a5\u3002\u5728\u6784\u5efa\u67d0\u4e9b\u4e1c\u897f\u65f6\uff0c\u77e5\u9053\u4f55\u65f6\u4f55\u5730\u5212\u6e05\u754c\u9650\u662f\u5f88\u56f0\u96be\u7684\u3002\u5f00\u53d1\u4eba\u5458\u2014\u2014\u6211\u5f53\u7136\u662f\u8fd9\u6837\u2014\u2014\u503e\u5411\u4e8e\u65e0\u4f11\u6b62\u5730\u8c03\u6574\u7cfb\u7edf\uff0c\u4f7f\u5b83\u4eec\u8fdb\u5165\u201c\u5b8c\u7f8e\u201d\u72b6\u6001\uff0c\u4ee5\u6d88\u9664\u4e0d\u5b8c\u6574\u611f\uff1b \u201c\u8fd8\u6ca1\u51c6\u5907\u597d\u3002\u518d\u591a\u4e00\u70b9\u201d\u3002\u8fd9\u79cd\u611f\u89c9\u6c38\u8fdc\u4e0d\u4f1a\u771f\u6b63\u6d88\u5931\uff0c\u4f46\u901a\u8fc7\u5b9e\u8df5\u548c\u6210\u8d25\u7684\u751f\u4ea7\u7ecf\u9a8c\uff0c\u53ef\u4ee5\u51ed\u76f4\u89c9\u5224\u65ad\u51fa\u4ec0\u4e48\u4e1c\u897f\u5df2\u7ecf\u8db3\u591f\u597d\uff0c\u53ef\u4ee5\u901a\u8fc7\u6240\u6709\u5b9e\u9645\u65b9\u5f0f\u8fdb\u884c\u4ea4\u4ed8\u3002\u6b64\u5916\uff0c\u5728\u77ac\u606f\u4e07\u53d8\u7684\u5546\u4e1a\u73af\u5883\u4e2d\uff0c\u8ffd\u6c42\u201c\u5b8c\u7f8e\u201d\u72b6\u6001\u53ef\u80fd\u662f\u4e00\u4ef6\u50bb\u4e8b\u3002\u5728\u50cf\u8d44\u672c\u5e02\u573a\u8fd9\u6837\u53d7\u5230\u4e25\u683c\u76d1\u7ba1\u7684\u884c\u4e1a\u4e2d\uff0c\u76d1\u7ba1\u53ef\u80fd\u4f1a\u7a81\u7136\u51fa\u73b0\u5e76\u5728\u4e00\u591c\u4e4b\u95f4\u6539\u53d8\u4f01\u4e1a\u7684\u8fd0\u8425\u65b9\u5f0f\uff0c\u8feb\u4f7f\u8f6f\u4ef6\u5728\u51e0\u4e4e\u6ca1\u6709\u65f6\u95f4\u8ba1\u5212\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u91cd\u6784\u548c\u91cd\u5199\u3002\u4f8b\u5982\uff0c\u5728 2020 \u5e74\u5e74\u4e2d\uff0c\u5370\u5ea6\u8d44\u672c\u5e02\u573a\u76d1\u7ba1\u673a\u6784\u89c4\u5b9a\u4e86\u5927\u7ea6\u56db\u4e2a\u661f\u671f\u7684\u6700\u540e\u671f\u9650\uff0c\u4ee5\u5f7b\u5e95\u6539\u53d8\u5728\u6b64\u4e4b\u524d\u5728\u4ea4\u6613\u5e73\u53f0\u4e0a\u51fa\u552e\u80a1\u7968\u7684\u65b9\u5f0f\u3002\u66fe\u7ecf\u662f\u5f53\u7528\u6237\u5355\u51fb\u5356\u51fa\u6309\u94ae\u65f6\u53d1\u9001\u5230\u4ea4\u6613\u6240\u7684\u5b9e\u65f6\u4ea4\u6613\uff0c\u73b0\u5728\u9700\u8981\u5728\u7531\u79f0\u4e3a\u5b58\u7ba1\u673a\u6784\u7684\u5e02\u573a\u673a\u6784\u8fd0\u8425\u7684\u5916\u90e8\u7f51\u5173\u4e0a\u83b7\u5f97\u57fa\u4e8e PIN \u7684\u6388\u6743\u3002\u6bcb\u5eb8\u7f6e\u7591\uff0c\u8fd9\u8feb\u4f7f\u5728\u51e0\u4e4e\u6ca1\u6709\u65f6\u95f4\u8fdb\u884c\u6d4b\u8bd5\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u5173\u952e\u7684\u5b9e\u65f6\u91d1\u878d\u7cfb\u7edf\u8fdb\u884c\u4e00\u7cfb\u5217\u91cd\u5927\u7684\u7ea7\u8054\u66f4\u6539\u3002\u9500\u552e\u8bc1\u5238\u7684 UI \u548c UX \u5fc5\u987b\u5728\u8de8\u7f51\u7edc\u7684\u4ea4\u6613\u5e73\u53f0\u3001\u79fb\u52a8\u5e73\u53f0\u548c\u6784\u5efa\u5728\u6211\u4eec\u7cfb\u7edf\u4e4b\u4e0a\u7684\u591a\u4e2a\u5916\u90e8\u5e73\u53f0\u4e0a\u8fdb\u884c\u66f4\u6539\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u7528\u6237\u9700\u8981\u767b\u5f55\u5230\u8fd9\u4e2a\u5916\u90e8\u7f51\u5173\u6765\u8bbe\u7f6e\u4ed6\u4eec\u7684 PIN \u5e76\u5728\u77ed\u65f6\u95f4\u5185\u4e86\u89e3\u8fd9\u4e2a\u5168\u65b0\u7684\u6d41\u7a0b\u3002\u6b64\u540e\u4e0d\u4e45\uff0c\u6cd5\u89c4\u518d\u6b21\u53d1\u751f\u53d8\u5316\uff0c\u9664\u4e86 PIN \u4e4b\u5916\uff0c\u8fd8\u4e3a\u6b64\u7f51\u5173\u5f15\u5165\u4e86\u65b0\u7684 SMS OTP\u3002\u7d27\u63a5\u7740\uff0c\u53e6\u4e00\u9879\u6cd5\u89c4\u6539\u53d8\u4e86\u8fd9\u4e9b\u6388\u6743\u7684\u6709\u6548\u6027\uff0c\u8feb\u4f7f\u8de8\u7cfb\u7edf\u8fdb\u884c\u66f4\u591a\u66f4\u6539\u3002\u867d\u7136\u8fd9\u4e9b\u7b26\u5408\u6563\u6237\u6295\u8d44\u8005\u7684\u5229\u76ca\uff0c\u4f46\u5bf9\u4e8e\u5f00\u53d1\u5546\u6765\u8bf4\uff0c\u5728\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u7d27\u8feb\u671f\u9650\u5185\uff0c\u5b83\u4eec\u662f\u6781\u5177\u98ce\u9669\u7684\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u5728\u8bb8\u591a\u73af\u5883\u4e2d\uff0c\u52a1\u5b9e\u4e0d\u662f\u4e00\u79cd\u9009\u62e9\uff0c\u800c\u662f\u4e00\u79cd\u5fc5\u8981\u3002\n\u8fd9\u79cd\u5b9e\u7528\u4e3b\u4e49\u5fc5\u987b\u5728\u6838\u5fc3\u7279\u6027\u548c\u529f\u80fd\u3001\u4ee3\u7801\u8d28\u91cf\u53ef\u6269\u5c55\u6027\u3001\u8fd0\u884c\u548c\u670d\u52a1\u5176\u529f\u80fd\u7684\u7a33\u5b9a\u6027\u3001\u5e02\u573a\u6761\u4ef6\u3001\u6cd5\u5f8b\u6cd5\u89c4\u4ee5\u53ca\u5b9a\u4e49\u660e\u786e\u4e14\u4e0d\u592a\u53ef\u80fd\u5feb\u901f\u53d8\u5316\u7684 API/UI \u89c4\u8303\u4e4b\u95f4\u53d6\u5f97\u9002\u5f53\u7684\u5e73\u8861.\u8fd9\u91cc\u7684 API/UI \u662f\u5728\u62bd\u8c61\u610f\u4e49\u4e0a\u4f7f\u7528\u7684\u3002\u5b83\u53ef\u4ee5\u8868\u793a\u547d\u4ee4\u884c\u754c\u9762\u3001\u6587\u4ef6\u6216\u6709\u7ebf\u683c\u5f0f\u3001\u7f51\u7edc\u8c03\u7528\u3001RPC \u6216 ABI\u2014\u2014\u4efb\u4f55\u5728\u4e0e\u5176\u4ed6\u7cfb\u7edf\u4ea4\u4e92\u65f6\u505a\u51fa\u67d0\u4e9b\u627f\u8bfa\u7684\u5c42\u3002\u5173\u6ce8\u754c\u9762\u8bbe\u8ba1\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u610f\u60f3\u4e0d\u5230\u7684\u597d\u5904\u3002\u5f53\u4e1a\u52a1\u9700\u6c42\u4ee5\u610f\u60f3\u4e0d\u5230\u7684\u65b9\u5f0f\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u7cfb\u7edf\u5fc5\u987b\u4e0d\u53ef\u907f\u514d\u5730\u91cd\u6784\u6216\u91cd\u5199\u65f6\uff0c\u901a\u5e38\uff0c\u552f\u4e00\u7684\u4e00\u7ebf\u5e0c\u671b\u662f\u4e00\u4e2a\u7a33\u5b9a\u7684 API \u89c4\u8303\uff0c\u5b83\u4fdd\u6301\u4e0e\u5176\u4ed6\u7cfb\u7edf\u7684\u517c\u5bb9\u6027\uff0c\u5141\u8bb8\u5728\u4e0d\u5371\u53ca\u4f9d\u8d56\u9879\u7684\u60c5\u51b5\u4e0b\u4ea4\u6362\u67d0\u4e9b\u4e1c\u897f\u3002\u7a33\u5b9a\u7684 API \u5728\u540c\u4e00\u7a0b\u5e8f\u7684\u4e0d\u540c\u90e8\u5206\u4e4b\u95f4\u3001\u4e0d\u540c\u7cfb\u7edf\u4e4b\u95f4\uff0c\u751a\u81f3\u7ec4\u7ec7\u4e2d\u7684\u6574\u4e2a\u90e8\u95e8\u4e4b\u95f4\u5efa\u7acb\u4e86\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5173\u6ce8\u5206\u79bb\u2014\u2014\u826f\u597d\u7684\u65e7\u6a21\u5757\u5316\uff0c\u901a\u5e38\u9519\u8bef\u5730\u4e0e\u5fae\u670d\u52a1\u6df7\u4e3a\u4e00\u8c08\u3002\u8fd9\u901a\u5e38\u610f\u5473\u7740\u7ec4\u7ec7\u4e2d\u7684\u4e00\u4e2a\u90e8\u95e8\u53ef\u4ee5\u91c7\u53d6\u4e00\u6b21\u8ba1\u5212\u4e2d\u7684\u6253\u51fb\u800c\u4e0d\u662f\u540c\u65f6\u8fdb\u884c\u591a\u4e2a\u6253\u51fb\uff0c\u8fd9\u662f\u6211\u4eec\u5df2\u7ecf\u505a\u8fc7\u65e0\u6570\u6b21\u7684\u4e8b\u60c5\uff0c\u5982\u679c\u591a\u4e2a\u90e8\u95e8\u548c\u4ed6\u4eec\u4f7f\u7528\u7684\u91cd\u53e0\u7cfb\u7edf\u4e0d\u662f\u6a21\u5757\u5316\u7684\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u591f\u4e86\u3002\u5185\u90e8 API \u548c\u67b6\u6784\u53ef\u4ee5\u8f7b\u677e\u66f4\u6539\u548c\u66ff\u6362\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u8bef\u89e3\uff0c\u8fd9\u901a\u5e38\u4f1a\u5bfc\u81f4\u5185\u90e8 API \u548c\u96c6\u6210\u7684\u8bbe\u8ba1\u6ca1\u6709\u5f97\u5230\u901a\u5e38\u9762\u5411\u516c\u4f17\u7684 API \u7684\u5173\u6ce8\u548c\u5173\u6ce8\u3002\u968f\u7740\u5185\u90e8\u7cfb\u7edf\u53d8\u5f97\u590d\u6742\uff0c\u6df1\u601d\u719f\u8651\u7684\u96c6\u6210\u6210\u4e3a\u6280\u672f\u503a\u52a1\u7684\u53ef\u80fd\u6027\u975e\u5e38\u9ad8\u3002\u56e0\u6b64\uff0c\u5c3d\u65e9\u5c1d\u8bd5\u4f7f API \u89c4\u8303\u5c3d\u53ef\u80fd\u6b63\u786e\u975e\u5e38\u91cd\u8981\uff0c\u5373\u4f7f\u5bf9\u4e8e\u5185\u90e8\u7cfb\u7edf\u4e5f\u662f\u5982\u6b64\u3002\u5e38\u8bc6\u6027\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u3001\u67b6\u6784\u548c\u670d\u52a1\u5206\u79bb\u53ef\u4ee5\u4ea7\u751f\u8fdc\u8fdc\u8d85\u51fa\u6027\u80fd\u4f18\u52bf\u7684\u610f\u60f3\u4e0d\u5230\u7684\u597d\u5904\u3002\u6211\u5728 Zerodha \u6700\u559c\u6b22\u7684\u4f8b\u5b50\u662f Kite Connect\uff0c\u6211\u4eec\u7684 HTTP/JSON API \u5e73\u53f0\u5141\u8bb8\u5728\u6211\u4eec\u7684\u57fa\u7840\u8bbe\u65bd\u4e0a\u6784\u5efa\u6210\u719f\u7684\u4ea4\u6613\u548c\u6295\u8d44\u5e73\u53f0\u3002\u6574\u4e2a 2013 \u5e74\u548c 2014 \u5e74\uff0c\u5728\u6211\u4eec\u6280\u672f\u56e2\u961f\u7684\u65e9\u671f\uff0c\u6211\u4eec\u90fd\u5fd9\u4e8e\u5c06\u7ec4\u7ec7\u5185\u90e8\u7684\u4e8b\u7269\u6570\u5b57\u5316\uff0c\u4e3b\u8981\u662f\u7f16\u5199 Python \u811a\u672c\u6765\u81ea\u52a8\u5316\u5e73\u51e1\u7684\u624b\u52a8\u6d41\u7a0b\u3002\u5efa\u7acb\u4ea4\u6613\u5e73\u53f0\u751a\u81f3\u4e0d\u662f\u4e00\u4e2a\u60f3\u6cd5\u3002 2014 \u5e74\u7684\u67d0\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u7684 OMS\uff08\u8ba2\u5355\u7ba1\u7406\u7cfb\u7edf\uff09\u4f9b\u5e94\u5546\u63a8\u51fa\u4e86\u4e00\u4e2a\u57fa\u4e8e\u7f51\u7edc\u7684\u767d\u6807\u4ea4\u6613\u5e73\u53f0\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u7528\u6237\u3002\u57fa\u4e8e\u7f51\u7edc\u7684\u4ea4\u6613\u5e73\u53f0\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u5229\u57fa\u5e02\u573a\uff0c\u53ea\u6709 Windows \u7684\u684c\u9762\u4ea4\u6613\u5e73\u53f0\u4e3b\u5bfc\u4e86\u8fd9\u4e2a\u884c\u4e1a\u3002\u5f53\u6211\u4eb2\u773c\u770b\u5230\u5b83\u65f6\uff0c\u6211\u5bf9 Web \u5e94\u7528\u7a0b\u5e8f\u6240\u4f20\u9012\u7684\u5185\u5bb9\u611f\u5230\u9707\u60ca\u3002\u5982\u679c\u6211\u6ca1\u8bb0\u9519\u7684\u8bdd\uff0c\u5b83\u7684\u7a81\u51fa\u7279\u70b9\u662f IE6 \u4e0d\u518d\u662f 2014 \u5e74\u7684\u8981\u6c42 &amp;mldr\u3002\u6211\u4eec\u7a81\u7136\u51b3\u5b9a\u6211\u4eec\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u53ef\u7528\u7684\u57fa\u4e8e Web \u7684\u4ea4\u6613\u5e73\u53f0\u3002\u4e00\u9879\u5173\u952e\u7684\u3001\u8ba1\u5212\u5916\u7684\u4e3e\u63aa\uff0c\u6700\u7ec8\u5c06 Zerodha \u8f6c\u53d8\u4e3a\u4e00\u5bb6\u6210\u719f\u7684\u6280\u672f\u516c\u53f8\u3002\u5f53\u65f6\u6211\u4eec\u7684\u6280\u672f\u56e2\u961f\u53ea\u6709\u5927\u7ea6\u56db\u4e94\u4e2a\u4eba\uff0c\u6211\u4eec\u4e4b\u524d\u90fd\u6ca1\u6709\u6784\u5efa\u4ea4\u6613\u5e73\u53f0\u7684\u7ecf\u9a8c\uff0c\u66f4\u4e0d\u7528\u8bf4\u719f\u6089\u8d44\u672c\u5e02\u573a\u6216\u91d1\u878d\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0cOMS \u4f9b\u5e94\u5546\u5728 OMS \u5f15\u64ce\u4e4b\u4e0a\u6709\u4e00\u7ec4\u7c7b\u4f3c SOAP \u7684 HTTP/XML API\u3002\u8fd9\u5c06\u4e3a\u4ea4\u6613\u5e73\u53f0\u7684\u4e70\u5356\u529f\u80fd\u63d0\u4f9b\u52a8\u529b\u3002\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u5185\uff0c\u6211\u5c06\u5c1d\u8bd5\u4e86\u89e3\u6587\u6863\u8bb0\u5f55\u4e0d\u4f73\u7684 API \u4e2d\u9ad8\u5ea6\u4e0d\u4e00\u81f4\u7684\u8def\u7531\u548c\u547d\u540d\u7ea6\u5b9a\uff0c\u5c06\u8c03\u7528\u4e00\u4e00\u5305\u88c5\u5230 Python Web \u670d\u52a1\u5668\u4e2d\u5177\u6709\u4e00\u81f4\u5b57\u6bb5\u540d\u79f0\u7684 HTTP/JSON \u8c03\u7528\u4e2d\u3002\u7f16\u5199\u8fd9\u4e2a\u4e2d\u95f4\u4ef6\u4ee5\u5c06\u4f9b\u5e94\u5546\u7684\u602a\u5f02\u9690\u85cf\u5728\u6211\u4eec\u613f\u610f\u4f7f\u7528\u7684\u4e00\u81f4 API \u80cc\u540e\u662f\u6709\u610f\u4e49\u7684\u3002\u5f53\u7136\uff0c\u8fd9\u9700\u8981\u4e0e\u4f9b\u5e94\u5546\u4e4b\u95f4\u7684\u51e0\u4e2a\u6708\u6765\u56de\u5b9e\u9645\u4f7f\u4e0a\u6e38 API \u5904\u4e8e\u53ef\u7528\u72b6\u6001\uff0c\u7136\u540e\u8fdb\u884c\u6570\u5e74\u7684\u8ddf\u8fdb\u4ee5\u8fdb\u884c\u589e\u91cf\u6539\u8fdb\u3002\u8fd9\u4e2a\u65b0\u7684 API \u89c4\u8303\u6613\u4e8e\u4f7f\u7528\u3001\u7406\u89e3\uff0c\u5e76\u4e14\u6709\u8db3\u591f\u7684\u6587\u6863\u8bb0\u5f55\uff0c\u8ba9 Vivek \u5f00\u59cb\u5c06\u5b83\u96c6\u6210\u5230\u4ed6\u57fa\u4e8e\u6211\u7684 UI\u201c\u8bbe\u8ba1\u201d\u5f00\u59cb\u6784\u5efa\u7684 Angular Web \u524d\u7aef\u4e2d\u3002\u6211\u4eec\u6b63\u5728\u53d1\u6325\u4f5c\u7528\u3002 \u201c\u98ce\u7b5d\u201d\u8fd9\u4e2a\u540d\u5b57\u6697\u793a\u7740\u64cd\u4f5c\u7b80\u5355\u3001\u91cd\u91cf\u8f7b\uff0c\u53ef\u4ee5\u8fbe\u5230\u9690\u55bb\u7684\u9ad8\u5ea6\u3002\n\u5927\u7ea6\u5728\u540c\u4e00\u65f6\u95f4\uff0c\u6211\u4eec\u5f00\u59cb\u610f\u8bc6\u5230\u884c\u4e1a\u4e2d\u5fc5\u987b\u5b58\u5728\u9ad8\u8d28\u91cf\u7684\u7ec8\u7aef\u7528\u6237\u8f6f\u4ef6\uff0c\u751f\u6001\u7cfb\u7edf\u624d\u80fd\u53d1\u5c55\u58ee\u5927\uff0c\u65e0\u8bba\u6211\u4eec\u662f\u5426\u6784\u5efa\u4e86\u5b83\u3002\u867d\u7136\u6211\u4eec\u6bcf\u5929\u90fd\u770b\u5230\u5370\u5ea6\u63a8\u51fa\u4e86\u8bb8\u591a\u521b\u65b0\u7684\u6700\u7ec8\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u7531\u4e8e\u7e41\u7410\u7684\u7e41\u6587\u7f1b\u8282\u548c\u7531\u4e8e\u767e\u5e74\u884c\u4e1a\u7684\u4f20\u7edf\u548c\u603b\u4f53\u73b0\u72b6\u800c\u5bfc\u81f4\u7684\u6781\u9ad8\u8fdb\u5165\u58c1\u5792\uff0c\u8d44\u672c\u5e02\u573a\u5374\u4e00\u65e0\u6240\u83b7\u3002\u4f8b\u5982\uff0c\u76f4\u5230 2017 \u5e74\uff0c\u7531\u4e8e\u6cd5\u89c4\u4e0d\u5141\u8bb8\u5728\u7ebf\u5f00\u6237\uff0c\u7528\u6237\u5fc5\u987b\u6253\u5370\u3001\u7b7e\u7f72\u548c\u5feb\u9012\u7ea6 40 \u9875\u7684\u8868\u683c\u624d\u80fd\u5728\u7ecf\u7eaa\u5546\u5904\u5f00\u7acb\u8d26\u6237\u3002\u8c01\u613f\u610f\u5728\u8fd9\u6837\u7684\u884c\u4e1a\u4e2d\u8fdb\u884c\u8bd5\u9a8c\uff01\u5728\u5370\u5ea6\u521b\u529e\u4e00\u5bb6\u7ecf\u7eaa\u516c\u53f8\u8fc7\u53bb\uff08\u73b0\u5728\u4ecd\u7136\u5982\u6b64\uff09\u6781\u5176\u590d\u6742\uff0c\u800c\u9080\u8bf7\u521b\u65b0\u7684\u552f\u4e00\u65b9\u6cd5\u5c31\u662f\u5e2e\u52a9\u6280\u672f\u4eba\u5458\u6446\u8131\u7e41\u6587\u7f1b\u8282\uff0c\u5728\u73b0\u6709\u7ecf\u7eaa\u516c\u53f8\u7684\u57fa\u7840\u4e0a\u518d\u63a5\u518d\u5389\u3002\u5de7\u5408\u7684\u662f\uff0c\u6211\u4eec\u53d1\u73b0 Kite \u7684 API \u662f\u901a\u7528\u4e14\u6e05\u6670\u7684\uff0c\u8db3\u4ee5\u5728\u5176\u4e0a\u6784\u5efa\u4efb\u4f55\u4ea4\u6613\u5e73\u53f0\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f Kite\u3002\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u4eec\u5bf9\u4e00\u7ec4\u5e72\u51c0\u7684\u3001\u6709\u636e\u53ef\u67e5\u7684 API \u611f\u5230\u5174\u594b\uff0c\u8fd9\u5bf9\u884c\u4e1a\u6765\u8bf4\u662f\u964c\u200b\u200b\u751f\u7684\u3002\u5e0c\u671b\u6700\u7ec8\u4f1a\u6709\u4eba\u5728\u5b83\u4e4b\u4e0a\u6784\u5efa\uff0c\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a Kite Connect\uff0c\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7c7b\u4f3c OAuth \u7684\u8eab\u4efd\u9a8c\u8bc1\u6d41\u7a0b\uff0c\u7f16\u5199\u4e86\u66f4\u597d\u7684\u6587\u6863\uff0c\u5e76\u56f4\u7ed5\u6b64\u6784\u5efa\u4e86\u4e00\u4e2a\u81ea\u52a9\u670d\u52a1\u5f00\u53d1\u8005\u95e8\u6237\uff0c\u800c Kite \u672c\u8eab\u6b63\u5728\u5efa\u8bbe\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u6837\u7684\u4e8b\u60c5\u53ea\u4f1a\u53d1\u751f\u5728\u6280\u672f\u51b3\u7b56\u6743\u638c\u63e1\u5728\u6280\u672f\u4eba\u5458\u624b\u4e2d\u7684\u7ec4\u7ec7\u4e2d\u3002\u5f53 smallcase \u5411\u6211\u4eec\u63d0\u51fa\u5efa\u7acb\u4e3b\u9898\u6295\u8d44\u5e73\u53f0\u7684\u5efa\u8bae\u65f6\uff0c\u8fd9\u4e2a\u75af\u72c2\u7684\u3001\u81ea\u53d1\u7684\u526f\u9879\u76ee\u5f88\u5feb\u5c31\u53d6\u5f97\u4e86\u6210\u679c\u3002\u6211\u4eec\u7ed9\u4e86\u4ed6\u4eec Kite Connect API \u5bc6\u94a5\uff0c\u5e2e\u52a9\u4ed6\u4eec\u83b7\u5f97\u76d1\u7ba1\u6279\u51c6\uff0c\u5e76\u4ece\u6211\u4eec\u8d5a\u53d6\u7684\u5fae\u8584\u5229\u6da6\u4e2d\u83b7\u5f97\u79cd\u5b50\u8d44\u91d1\u3002\u66fe\u7ecf\u715e\u8d39\u82e6\u5fc3\u5730\u5728\u6211\u4eec\u8fd9\u91cc\u5f00\u8bbe\u8d26\u6237\u8fdb\u884c\u6295\u8d44\u548c\u4ea4\u6613\u7684\u7528\u6237\u73b0\u5728\u53ea\u9700\u5355\u51fb\u4e00\u4e0b\u5373\u53ef\u767b\u5f55 smallcase\u3002\u6211\u4eec\u4f1a\u5904\u7406\u5408\u6cd5\u6027\u3001\u5408\u89c4\u6027\u3001\u8d22\u52a1\u6d41\u7a0b\uff0c\u5f53\u7136\u8fd8\u6709\u5e95\u5c42\u6280\u672f\u548c\u57fa\u7840\u8bbe\u65bd\uff0csmallcase \u53ef\u4ee5\u4e13\u6ce8\u4e8e\u6784\u5efa\u4ed6\u4eec\u7684\u5e73\u53f0\u3002\u8fd9\u542f\u52a8\u4e86\u6211\u4eec\u7684\u91d1\u878d\u79d1\u6280\u6295\u8d44\u57fa\u91d1 Rainmatter\uff0c\u800c Kite Connect API \u6210\u4e3a\u201c\u7ecf\u7eaa\u5373\u5e73\u53f0\u201d(BaaP) \u4ea7\u54c1\uff0c\u9762\u5411\u5e0c\u671b\u5728\u7528\u6237\u5165\u804c\u4ecd\u9700\u8981\u7b7e\u7f72\u548c\u8fd0\u9001 40 \u591a\u9875\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u5b9a\u5236\u91d1\u878d\u5e73\u53f0\u7684\u516c\u53f8\u3002\u9274\u4e8e\u884c\u4e1a\u7684\u8fd9\u79cd\u72b6\u6001\uff0c\u6295\u5165\u65f6\u95f4\u548c\u7cbe\u529b\uff0c\u66f4\u4e0d\u7528\u8bf4\u8bbe\u60f3\u4e00\u4e2a\u5e26\u6709\u5f00\u53d1\u4eba\u5458\u95e8\u6237\u7684 API \u5e73\u53f0\u53ef\u80fd\u6ca1\u6709\u610f\u4e49\u3002\u4f46\u662f\uff0cKite Connect \u4e0d\u662f\u8ba1\u5212\u4e2d\u7684\uff0c\u5b83\u662f\u826f\u597d API \u8bbe\u8ba1\u7684\u4e00\u4e2a\u5076\u7136\u7684\u526f\u4f5c\u7528\u3002\u4eca\u5929\uff0c\u6709\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u548c\u51e0\u5bb6\u516c\u53f8\u5efa\u7acb\u5728 Kite Connect \u4e4b\u4e0a\u3002\u6211\u4eec\u901a\u8fc7\u5176 API \u65e0\u7f1d\u96c6\u6210\u4e86\u6211\u4eec\u6240\u6709\u7684\u6700\u7ec8\u7528\u6237\u6295\u8d44\u548c\u4ea4\u6613\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u53ca\u591a\u4e2a\u5185\u90e8\u7cfb\u7edf\u3002\u5b83\u662f\u6211\u4eec\u4e1a\u52a1\u548c\u4ea7\u54c1\u6218\u7565\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u7684\u57fa\u7840\u3002\u6709\u8da3\u7684\u662f\uff0c\u98ce\u7b5d\u8fde\u63a5\u5e73\u53f0\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u6709\u5229\u53ef\u56fe\u7684\u5782\u76f4\u9886\u57df\u3002\u6240\u6709\u8fd9\u4e00\u5207\u4f7f\u6211\u4eec\u80fd\u591f\u542f\u52a8 Rainmatter \u57fa\u91d1\u4f1a\uff0cZerodha \u5df2\u5c06\u5176\u5927\u90e8\u5206\u5229\u6da6\u7528\u4e8e\u8d44\u52a9\u73af\u5883\u4fdd\u62a4\u5de5\u4f5c\u3002\u5f53\u6211\u52aa\u529b\u9605\u8bfb\u548c\u7406\u89e3\u6211\u51e0\u5468\u524d\u7f16\u5199\u7684\u4ee3\u7801\u65f6\uff0c\u6211\u54ed\u4e86\u7b11\uff08\ud83e\udd72 \u6211\u4eec\u5728\u6280\u672f\u56e2\u961f\u4e2d\u6700\u559c\u6b22\u7684\u65b0\u8868\u60c5\u7b26\u53f7\uff0c\u5b83\u51c6\u786e\u5730\u6355\u6349\u4e86\u5e7f\u6cdb\u7684\u5f00\u53d1\u4eba\u5458\u60c5\u7eea\uff09\u2014\u2014\u201c\u6211\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\uff1f\u6211\u5728\u60f3\u4ec0\u4e48\uff1f\u201d\u3002\u60f3\u8c61\u4e00\u4e0b\u5728\u8fdb\u5165\u590d\u6742\u7cfb\u7edf\u65f6\u5fc5\u987b\u9605\u8bfb\u3001\u89e3\u6790\u548c\u5728\u7cbe\u795e\u4e0a\u7f16\u8bd1\u522b\u4eba\u7684\u4ee3\u7801\u7684\u8ba4\u77e5\u8d1f\u62c5\u3002\u806a\u660e\u7684\u8f6f\u4ef6\u9700\u8981\u806a\u660e\u7684\u4ee3\u7801\u662f\u4e00\u79cd\u8bef\u89e3\u3002\u662f\u5426\u6709\u5355\u884c\u5d4c\u5957Python \u4ee3\u7801\u4e2d\u7684\u5217\u8868\u63a8\u5bfc\u5f0f\u548c lambdas \u4e0e\u5b83\u751f\u6210\u7684\u6700\u7ec8\u8f6f\u4ef6\u7684\u667a\u80fd\u548c\u5b9e\u7528\u6027\u65e0\u5173\u3002\u7136\u800c\uff0c\u6b64\u7c7b\u5bc6\u7801\u5bf9\u4ee3\u7801\u5e93\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u6709\u5f88\u5f3a\u7684\u5f71\u54cd\uff0c\u5f71\u54cd\u5176\u672a\u6765\u7684\u53d1\u5c55\u3002\u672a\u6765\u7684\u8f6f\u4ef6\u51c6\u5907\u597d\uff0c\u5b83\u7684\u6e90\u4ee3\u7801\u5728\u672a\u6765\u5e94\u8be5\u5f88\u5bb9\u6613\u88ab\u5b83\u81ea\u5df1\u7684\u4f5c\u8005\u548c\u672a\u6765\u7684\u7ef4\u62a4\u8005\u9605\u8bfb\u548c\u89e3\u6790\uff0c\u65e0\u8bba\u4ed6\u4eec\u662f\u8c01\u3002\u81ea\u76f8\u77db\u76fe\u7684\u662f\uff0c\u539f\u59cb\u4f5c\u8005\u81ea\u5df1\u5f80\u5f80\u6700\u7ec8\u6210\u4e3a\u672a\u6765\u5f00\u53d1\u4eba\u5458\u7684\u8f6f\u4ef6\u7684\u5fc3\u667a\u6a21\u578b\u3002\u5199\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u67af\u7aed\u3002\u8fd9\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u624d\u6c89\u5165\u5176\u4e2d\uff0c\u4f46\u662f\u5f53\u5b83\u53d1\u751f\u65f6\uff0c\u5b83\u6539\u53d8\u4e86\u6211\u7f16\u5199\u4ee3\u7801\u7684\u65b9\u5f0f\u5e76\u627c\u6740\u4e86\u6211\u5bf9\u795e\u5947\u7684\u591a\u5c42\u62bd\u8c61\u7684\u8ff7\u604bd \u806a\u660e\u3002\u5f00\u53d1\u4eba\u5458\u6613\u4e8e\u638c\u63e1\u548c\u5904\u7406\u7684\u7b80\u5355\u3001\u51e0\u4e4e\u662f\u611a\u8822\u7684\u3001\u660e\u786e\u7684\u4ee3\u7801\u7684\u4ef7\u503c\u600e\u4e48\u5f3a\u8c03\u90fd\u4e0d\u4e3a\u8fc7\u3002\u540c\u6837\uff0c\u7f16\u5199\u89e3\u91ca\u5f00\u53d1\u4eba\u5458\u610f\u56fe\u7684\u6ce8\u91ca\uff0c\u4e3a\u4ec0\u4e48\u8981\u5728\u7a0b\u5e8f\u4e2d\u5b8c\u6210\u67d0\u4e8b\uff0c\u6bd4\u89e3\u91ca\u4ec0\u4e48\u7684\u6ce8\u91ca\u66f4\u6709\u4ef7\u503c\uff0c\u8fd9\u4e9b\u6ce8\u91ca\u662f\u660e\u786e\u7684\u3001\u4e0d\u8a00\u81ea\u660e\u7684\u4ee3\u7801\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u505a\u7684\u3002\n\u5728 Zerodha \u7684\u4ee3\u7801\u5ba1\u67e5\u4e2d\uff0c\u6211\u4eec\u6807\u8bb0\u4e86\u201c\u806a\u660e\u7684\u4ee3\u7801\u201d\uff0c\u867d\u7136\u529f\u80fd\u5f3a\u5927\uff0c\u4f46\u5176\u4ed6\u4eba\u4e0d\u6613\u9605\u8bfb\u548c\u7406\u89e3\u3002\u8fd9\u4e9b\u4ee3\u7801\u5ba1\u67e5\u4f1a\u8bae\u8ba9\u56e2\u961f\u4e2d\u7684\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u53c2\u52a0\uff0c\u65e0\u8bba\u4ed6\u4eec\u7684\u4e3b\u8981\u9879\u76ee\u662f\u4ec0\u4e48\uff0c\u8fd9\u6709\u52a9\u4e8e\u6211\u4eec\u5728\u5f00\u59cb\u4e0d\u65f6\u504f\u79bb\u8fd9\u4e9b\u6700\u4f73\u5b9e\u8df5\u65f6\u4fdd\u6301\u81ea\u6211\u68c0\u67e5\u3002\u53ef\u80fd\u4f1a\u6709\u5b87\u5b99\u7684\u5927\u7edf\u4e00\u7406\u8bba\uff0c\u751f\u547d\u610f\u4e49\u7684\u53d1\u73b0\uff0c\u4e0e\u667a\u80fd\u5916\u661f\u751f\u7269\u7684\u63a5\u89e6\uff0c\u7136\u540e\u624d\u4f1a\u6709\u4e00\u4e2a\u51c6\u786e\u4f30\u7b97\u8f6f\u4ef6\u5f00\u53d1\u590d\u6742\u6027\u548c\u65f6\u95f4\u7ebf\u7684\u6846\u67b6\u3002\u6211\u53ea\u662f\u534a\u5f00\u73a9\u7b11\u3002\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u8f6f\u4ef6\u65f6\u95f4\u8868\u7684\u9519\u8bef\u901a\u5e38\u662f\u591a\u4e48\u53ef\u7b11\u2014\u2014\u5fd8\u8bb0\u5927\u578b\u653f\u5e9c\u9879\u76ee\uff0c\u4f46\u5728\u62a5\u544a\u6216\u590d\u9009\u6846\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\u6765\u6539\u53d8\u7279\u5b9a\u7684 UI \u884c\u4e3a\u3002\u6211\u4eec\u4f30\u8ba1\u9700\u8981\u6570\u5929\u7684\u4e8b\u60c5\u53ef\u80fd\u9700\u8981\u6570\u5468\u751a\u81f3\u6570\u6708\u3002\u5728\u6211\u5199\u8fd9\u4e00\u6bb5\u7684\u65f6\u5019\uff0c\u6211\u8fdb\u5165\u4e86\u8c03\u8bd5\u3001\u6d4b\u8bd5\u548c\u56de\u6eda\u7684\u7b2c\u56db\u5929\uff0c\u8fd9\u4e2a\u770b\u8d77\u6765\u5fae\u4e0d\u8db3\u9053\u7684\u66f4\u6539\u6211\u4f30\u8ba1\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\u3002\u5c31\u5176\u672c\u8eab\u800c\u8a00\uff0c\u8fd9\u79cd\u53d8\u5316\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff0c\u4f46\u7531\u4e8e\u6d89\u53ca\u7684\u591a\u4e2a\u7cfb\u7edf\u7684\u7ec6\u5fae\u5dee\u522b\u548c\u67d0\u4e9b\u4e1a\u52a1\u6d41\u7a0b\u7684\u65f6\u95f4\u5b89\u6392\uff0c\u5b83\u5f15\u5165\u7684\u5fae\u5999\u8fb9\u7f18\u60c5\u51b5\u7684\u6570\u91cf\u6211\u4eec\u65e0\u6cd5\u9884\u89c1\u3002\u4e0e\u4ee3\u7801\u76f8\u6bd4\uff0c\u8f6f\u4ef6\u590d\u6742\u6027\u548c\u65f6\u95f4\u7ebf\u4f30\u8ba1\u5f80\u5f80\u53d7\u5230\u4f9d\u8d56\u5173\u7cfb\u3001\u4e1a\u52a1\u548c\u7528\u6237\u884c\u4e3a\u4e2d\u65e0\u6570\u5fae\u5999\u4e4b\u5904\u7684\u963b\u788d\u3002\u5b9e\u9645\u4e0a\uff0c\u4e0e\u5f04\u6e05\u695a\u8981\u5199\u4ec0\u4e48\uff0c\u7136\u540e\u5904\u7406\u6240\u5199\u5185\u5bb9\u7684\u6240\u6709\u610f\u5916\u526f\u4f5c\u7528\u76f8\u6bd4\uff0c\u7f16\u5199\u4ee3\u7801\u901a\u5e38\u53ea\u9700\u8981\u4e00\u5c0f\u90e8\u5206\u65f6\u95f4\u3002\u91cd\u8981\u7684\u662f\u8981\u610f\u8bc6\u5230\u8fd9\u4e00\u4e8b\u5b9e\u5e76\u79ef\u6781\u5c06\u5176\u7eb3\u5165\u9879\u76ee\u8ba1\u5212\uff0c\u4e3a\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u610f\u5916\u5ef6\u8fdf\u7559\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u901a\u5e38\u8d1f\u8d23\u8f6f\u4ef6\u5f00\u53d1\u65f6\u95f4\u8868\u7684\u975e\u6280\u672f\u51b3\u7b56\u8005\u5f88\u5c11\u7406\u89e3\u8fd9\u4e00\u70b9\u3002\u6280\u672f\u503a\u52a1\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\u503a\u52a1\u8d8a\u8001\uff0c\u5c31\u8d8a\u96be\u6446\u8131\u3002\u5728\u5feb\u901f\u5f00\u53d1\u548c\u8fed\u4ee3\u8f6f\u4ef6\u4ee5\u6ee1\u8db3\u529f\u80fd\u76ee\u6807\u548c\u622a\u6b62\u65e5\u671f\u7684\u7ec4\u7ec7\u4e2d\uff0c\u51e0\u4e4e\u6ca1\u6709\u65f6\u95f4\u6682\u505c\u3001\u91cd\u6784\u3001\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u505a\u4e8b\uff0c\u4e3a\u6280\u672f\u503a\u52a1\u94fa\u5e73\u9053\u8def\u3002\u5728\u4e00\u4e2a\u5b63\u5ea6\u5185\u9519\u8fc7\u4e00\u4e2a\u529f\u80fd\uff08\u662f\u7684\uff0c\u8fd9\u542c\u8d77\u6765\u5f88\u8352\u8c2c\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e2a\u5b63\u5ea6\u6709 X \u4e2a\u201c\u529f\u80fd\u201d\u4f5c\u4e3a\u76ee\u6807\u7684\u7ec4\u7ec7\uff09\u53ef\u80fd\u610f\u5473\u7740\u5931\u53bb\u7ade\u4e89\u4f18\u52bf\uff0c\u5bf9\u5427\uff1f\u8fd9\u662f\u4e00\u4e2a\u795e\u8bdd\u3002\u7ec4\u7ec7\u7ecf\u5e38\u9ad8\u4f30\u4ed6\u4eec\u6301\u7eed\u53d1\u5e03\u7684\u529f\u80fd\u7684\u91cd\u8981\u6027\uff08\u5e76\u4f4e\u4f30\u4ed6\u4eec\u6ca1\u6709\u53d1\u5e03\u7684\u529f\u80fd\u7684\u91cd\u8981\u6027\uff09\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4e0d\u662f\u4e0d\u65ad\u6dfb\u52a0\u201c\u529f\u80fd\u201d\u548c\u4e0d\u65ad\u53d8\u5316\u7684\u8f6f\u4ef6\u5728\u5176\u672a\u6765\u5c31\u7eea\u7684\u524d\u666f\u4e2d\u8d77\u7740\u91cd\u8981\u4f5c\u7528\u3002\u63d0\u9ad8\u73b0\u6709\u8f6f\u4ef6\u7684\u8d28\u91cf\u548c\u6027\u80fd\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u9690\u542b\u201c\u529f\u80fd\u201d\uff0c\u8fd9\u662f\u8bb8\u591a\u4eba\u90fd\u5931\u53bb\u7684\u4e8b\u5b9e\u3002\u6211\u4eec\u5b9a\u671f\u63a8\u8fdf\u53d1\u5e03\u65b0\u529f\u80fd\uff0c\u4ee5\u51cf\u7f13\u548c\u6e05\u7406\u6280\u672f\u503a\u52a1\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u8bb8\u591a\u7ec4\u7ec7\u4e2d\uff0c\u6b64\u7c7b\u6280\u672f\u51b3\u7b56\u901a\u5e38\u4e0d\u5728\u5f00\u53d1\u4eba\u5458\u624b\u4e2d\uff08\u7b2c 8 \u8282\u4e2d\u7684\u54ed\u58f0\uff09\u3002 7.1.\u4e0d\u8981\u4fee\u590d\u6ca1\u6709\u635f\u574f\u7684\u4e1c\u897f\uff0c\u800c\u662f\u4fee\u590d\u53ef\u80fd\u5f88\u5feb\u635f\u574f\u7684\u4e1c\u897f\u3002\u6211\u4eec\u7684\u4ea4\u6613\u5e73\u53f0 Kite \u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u662f\u7528 Python \u7f16\u5199\u7684\u3002\u5f53\u5b83\u5728 2015 \u5e74\u63a8\u51fa\u65f6\uff0c\u5b83\u7684\u5e76\u53d1\u7528\u6237\u53ea\u6709\u4e0d\u5230\u4e00\u5343\u3002\u4eca\u5929\uff0c\u5728\u4efb\u4f55\u7279\u5b9a\u65f6\u523b\u90fd\u6709\u8d85\u8fc7\u4e00\u767e\u4e07\u3002 2016 \u5e74\u53d1\u5e03\u4e86\u7248\u672c 2\uff0c\u4e00\u4e2a\u91cd\u8981\u7684\u91cd\u6784\uff0c2017 \u5e74\u53d1\u5e03\u4e86\u7248\u672c 3\uff0c\u4e00\u4e2a\u5b8c\u5168\u91cd\u5199\u7684\u7248\u672c\u3002\u5728\u8fd9\u4e9b\u7248\u672c\u4e4b\u95f4\uff0c\u6211\u4eec\u7528\u5c3d\u4e86 Python \u6027\u80fd\u4f18\u5316\u7684\u53ef\u80fd\u9014\u5f84\uff0c\u5e76\u7528 Go \u91cd\u5199\u4e86\u6574\u4e2a\u540e\u7aef\u3002 Angular \u524d\u7aef\u5f88\u5feb\u5c31\u53d8\u5f97\u96be\u4ee5\u7ef4\u62a4\uff0c\u5728 Vue \u4e2d\u88ab\u5e9f\u5f03\u5e76\u91cd\u5199\u3002\u6700\u521d\u7528\u539f\u751f\u4ee3\u7801\u7f16\u5199\u7684 Kite \u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\uff08\u6210\u4e3a\u591a\u4ee3\u7801\u5e93\u7ef4\u62a4\u96be\u9898\uff09\uff0c\u7136\u540e\u662f React Native\uff08\u6210\u4e3a\u6027\u80fd\u96be\u9898\uff09\uff0c\u7b2c\u4e09\u6b21\u88ab\u5e9f\u5f03\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u5728 Flutter \u4e2d\u91cd\u5199\u3002\u8fd9\u4e9b\u51b3\u5b9a\u5bf9\u6211\u4eec\u6765\u8bf4\u6548\u679c\u975e\u5e38\u597d\u3002\n\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662fticker\uff0c\u8be5\u7ec4\u4ef6\u6bcf\u79d2\u5411\u6700\u7ec8\u7528\u6237\u4f20\u8f93\u6570\u5343\u4e07\u4e2a\u5b9e\u65f6\u5e02\u573a\u6570\u636e\u5305\u3002\u5728\u8fc7\u53bb\u7684\u516d\u5e74\u91cc\uff0c\u968f\u7740\u6211\u4eec\u8d8a\u6765\u8d8a\u64c5\u957f\u7f16\u5199 Go \u5e76\u4e14\u6211\u4eec\u5f00\u59cb\u611f\u89c9\u5230imp ......\uff0c\u5b83\u5df2\u7ecf\u88ab\u91cd\u6784\u548c\u91cd\u5199\u4e86\u81f3\u5c11\u4e94\u6b21\u3002", "note_en": "Over the last year, owing to the unexpected rally in capital markets, Zerodha\u2019s customer base has more than tripled, significantly increasing the number of concurrent users on our platforms along with the traffic and load they generate on numerous systems in the background. For context, in January 2020, we were handling 2+ million retail trades daily. In April 2020, it had risen to 7+ million. Today, it goes up to 12+ million. Our user base is now at 6+ million users, up from 2+ million last year.\n We never foresaw that our client base that grew slowly and predictably over ten years would triple in less than a year. Not that we ever attempted to do so either. However, when it did happen, we were able to adapt our software, infrastructure, and organisation with only a nominal impact on our stack and only a negligible increase in technology and infrastructure costs. This includes transitioning 1000+ of our employees to full time remote work pretty much overnight owing to the Covid lockdowns in 2020. Meanwhile, our tech team that was 30 members strong last year now stands at 31.\n The media and social media frenzy around the growth in business has piqued considerable interest, and there have been numerous queries along the lines of:\n How did we manage our systems and costs to cope with the overnight explosion in capital markets activity?\n This post is an assortment of notes on the real life practices that we employ at Zerodha, and many first hand insights from the industry, which, to us, have been great lessons on how not to run technology organisations.\n These notes demonstrate that the ability of a technology organisation and its systems to cope with future uncertainties and extreme volatility can be rooted in common sense first principles. Such principles can increase the odds of things falling into the right places naturally at opportune, almost serendipitous moments. A number of factors here are more human, more philosophical than technical, and so are these notes. It is not to say that these are universally applicable, but as they have worked for us, they may work for others too.\n As always, these anecdotes should be read with a healthy and rational awareness of context and the trade-offs involved.\n  In fact, \u201cproofing\u201d is borderline oxymoronic. Software can change rapidly and become obsolete in no time. Just like with physical objects, shiny new software can make older software look dated, biasing technical decision-making and significantly altering its future readiness.\n Paradoxically, little changes in software over long periods of time when one zooms out a little. Half a century old C language is still widely used and has changed little syntactically or semantically, and new languages continue to borrow heavily from it. Same with SQL. Same with paradigms like functional and object oriented programming; synchronous and asynchronous network communication; RPC and IPC; kernels; RDBMs and row and column based data modelling; lists, dictionaries, and maps; and on and on \u2026 While computing concepts change rarely and slowly, their specific avatars and manifestations can change rapidly and go in and out of fashion. What had become boring over the years can suddenly be re-invented and be in vogue again, like rendering HTML server-side and sending the results to the browser over the wire (!), or stateless \u201cfunctions\u201d (programs) in a shared environment (remember /*.php and /cgi-bin/?).\n Software trends tend to be surprisingly cyclical. Reminds me of the quote  \u201cThe beginning is the end and the end is the beginning\u201d from the sci-fi series Dark, which  Karan casually tried to pass off as his own after watching just one episode. He didn\u2019t actually, but as the saying goes,  \u201cAll Threads Digress To Karan\u201d.\n This fundamental realisation, that computing concepts seldom change unlike their specific implementations, is the first step to building systems that have better odds of being future ready. It is important to understand the past and present landscapes of software to gain perspective on what really is new and what is old, important factors that influence technical decisions. We use this as a yardstick when evaluating technologies, be it a Javascript framework or an entirely new technology. For instance, our decision to port our mobile applications to Flutter in 2018 (after writing a quick prototype in it over two weeks) when Flutter was alpha\u2014a calculated risk that has paid off really well.\n  Knowing when and where to draw the line when building something is hard. Developers\u2014I certainly do\u2014have the tendency to tweak systems endlessly to get them into a \u201cperfect\u201d state to ween off a sense of incompleteness;  \u201cIt\u2019s not ready yet. Just a bit more\u201d. This feeling never really goes away, but with practice and make-and-break production experience, it becomes possible to intuit the point where something is good enough to be shipped by all practical means. Also, in rapidly changing business environments, chasing a \u201cperfect\u201d state may be a fool\u2019s errand. In a heavily regulated industry like the capital markets, regulations can come out of the blue and change how businesses operate overnight, forcing software to be refactored and rewritten with little time to plan.\n For example, in mid 2020, the Indian capital markets regulator gave a deadline of about four weeks to completely change how equities were sold on trading platforms up until that point. What used to be a realtime transaction that was sent to the exchanges when users clicked on a sell button now required a PIN based authorisation on an external gateway operated by market institutions known as depositories. Needless to say, this forced a series of significant cascading changes through critical realtime financial systems with little time to test. The UI and UX of selling securities had to change on the trading platform across web, both mobile platforms, and multiple external platforms built on top of our systems. Not only that, millions of users needed to be onboarded onto this external gateway to setup their PINs and be educated of this entirely new flow on short notice.\n Shortly thereafter, the regulation changed yet again to introduce a new SMS OTP to this gateway in addition to the PIN. And right after that, another regulation changed the validity of these authorisations forcing even more changes across systems. While these were in the interest of retail investors, to developers, they were extremely risky changes on unbelievably tight deadlines. Thus, in many environments, being pragmatic is not a choice but a necessity.\n Such pragmatism has to continuously hit the right balance between core features and capabilities, code quality extensibility, stability to run and serve its function, market conditions, laws and regulations, and also, a well defined API/UI spec that is unlikely to change rapidly. API/UI here is used in an abstract sense. It can mean a command line interface, a file or wire format, or network calls, RPCs, or ABI\u2014any layer that lays down certain promises when it comes to interactions with other systems. Paying attention to interface design has yielded us wildly unexpected benefits.\n  When a system has to be inevitably refactored or rewritten when business requirements change in unexpected ways, often, the only silver lining is a stable API spec that maintains compatibility with other systems, allowing something to be swapped out without jeopardizing its dependents. A stable API establishes a level of separation of concern between different parts of the same program, between different systems, and even between whole departments in an organisation\u2014good old modularity which is commonly, incorrectly, conflated with microservices. It can often mean that one department in an organisation can take one planned hit rather than several at the same time, something that we have done countless times, something that would not have been possible if multiple departments and the overlapping systems they use were not modular enough.\n It is a common misconception that internal APIs and architectures can be easily changed and replaced, which often results in the design of internal APIs and integrations not getting the same care and attention that public facing APIs usually get. The probability of poorly thought out integrations becoming technical debt as internal systems grow complex is very high. It is thus important to try and get the API spec as right as possible early on, even for internal systems.\n  Common sense software design, architecture, and separation of services can yield unexpected benefits far beyond performance wins. My favorite example at Zerodha is  Kite Connect, our HTTP/JSON API platform that allows building full fledged trading and investment platforms over our infrastructure.\n  All through 2013 and 2014 in the early days of our tech team, we were busy digitising things inside the organisation, mostly writing Python scripts to automate mundane manual processes. Building a trading platform was not even a thought. Sometime in 2014, our OMS (Order Management System) vendor came out with a white label web based trading platform that we could offer to our users. Web based trading platforms were a tiny niche and Windows-only desktop trading platforms dominated the industry. When I saw it first hand, I was shocked by what passed for a web application. If I remember correctly, its standout feature was that IE6 was no longer a requirement &amp;mldr in 2014. We abruptly decided that we needed to build a usable web based trading platform. A pivotal, unplanned move that would eventually transform Zerodha into a full fledged technology firm.\n  There were only about four or five of us in the tech team at that point, and none of us had any prior experience building a trading platform let alone any familiarity with capital markets or finance. Thankfully, the OMS vendor had a set of SOAP-like HTTP/XML APIs on top of the OMS engine. This is what would power the buy and sell functions of the trading platform. I would spend the next several weeks trying to understand the highly inconsistent route and naming conventions in the poorly documented API, wrapping the calls one by one into HTTP/JSON calls with consistent field names in a Python web server. It made sense to write this middleware to hide vendor weirdness behind a consistent API that we would be comfortable working with. Of course, it would then take months of back and forth with the vendor to actually get the upstream APIs to be in a usable state, followed by years of follow ups for incremental improvements.\n This new API spec was easy to use, understand, and was documented enough for  Vivek to start integrating it into the Angular web frontend he had started building based on my UI \u201cdesign\u201d. We were winging it. The name \u201cKite\u201d implied something simple and light weight to operate, something that could reach metaphorical heights.\n  Around the same time, we had started realising that good quality end user software had to exist in the industry for the ecosystem to grow, whether or not we built it. While we were seeing numerous innovative end user applications launch by the day in India, capital markets was seeing none of it thanks to thick red tapes and the extremely high entry barrier owing to the legacy of a century old industry and status quo in general. For example, up until 2017, a user had to print, sign, and courier a ~40 page form to open an account with a brokerage as online account opening was not permitted by regulations. Who would want to experiment in an industry like that! It was (and still is) extremely complex to start a brokerage firm in India and the only way to invite innovation would have been to help technologists cut through the red tape and build on top of existing brokerage firms.\n Coincidentally, it occurred to us that the APIs for Kite were generic and clear enough to build any trading platform on top of it, not just Kite. As developers, we were excited by essentially a clean set of well documented APIs, something that was alien to the industry. In hopes that eventually there would be people who would come build on top of it, we named it Kite Connect, designed an OAuth-like authentication flow, wrote better documentation, and built a self-service developer portal around this, while Kite itself was being built. It is important to note that something like this could only happen in organisations where technical decision-making powers are in the hands of technical people.\n This wild, spontaneous side project very quickly bore fruits when  smallcase approached us with a proposal to build a thematic investment platform. We gave them Kite Connect API keys, help with regulatory approvals, and seed funding from the modest profits we were making. Our users who had painstakingly opened accounts with us to invest and trade could now login to smallcase with a single click. We would handle the legalities, compliance, financial processes, and of course the underlying technology and infrastructure, and smallcase could focus on building their platform.\n  This kickstarted  Rainmatter, our fintech investment fund, and the Kite Connect APIs became a \u201cBrokerage as a Platform\u201d ( BaaP) offering to companies that wanted to build bespoke financial platforms at a time where user onboarding still required signing and couriering 40+ pages. Given this state of the industry, investing time and effort, let alone envisioning an API platform complete with a developer portal may not have made sense. But, Kite Connect was not planned, it was a fortuitous side effect of good API design.\n Today, there are numerous applications and several companies built on top of Kite Connect. We dog-food it heavily integrating all our end user investment and trading apps, and several internal systems seamlessly via its APIs. It is the foundation on top of which significant parts of our business and product strategy are built. Amusingly, the Kite Connect platform on its own is a profitable vertical. All this has enabled us to start the  Rainmatter Foundation, where Zerodha has committed a significant portion of its profits to fund environmental conservation efforts.\n   I  cry-smile (\ud83e\udd72 our new favorite emoji in tech team that accurately captures a wide range of developer emotions) when I struggle to read and make sense of code I wrote just a few weeks ago\u2014 \u201cWhy did I do this? What was I thinking?&#34;. Imagine the cognitive burden of having to read, parse, and mentally compile somebody else\u2019s code when getting into complex systems. It is a misconception that clever software needs clever code. Whether or not there are single-line nested list comprehensions and lambdas in Python code has no bearing on the cleverness and utility of the final software it produces. However, such cryptograms have a strong bearing on how readable and maintainable a codebase is, affecting its future development.\n Software that is to be future ready, its source code should be easily read and parsed in the future by its own authors and future maintainers, whoever they may be. Paradoxically, the original authors themselves often end up in the shoes of future developers as the mental models of the software they wrote deplete with time. It took a long time for this to sink in, but when it did, it changed the way I wrote code and killed my fascination for magical multi-layered abstractions and cleverness. The value of simple, almost dumb, explicit code that is easy for a developer to pick up and work on cannot be overstated. In the same vein, writing comments that explain the intention of the developer,  why something is being done in a program, is significantly more valuable than the comments that explain the  what, which explicit, self-explanatory code will do anyway.\n In our code reviews at Zerodha, we flag \u201cclever code\u201d that, while functional, is not easy for others to read and understand. These code review sessions where anyone in the team can participate irrespective of their primary projects help us keep ourselves in check when we start straying from these best practices from time to time.\n  There may be a grand unified theory for the universe, the discovery of the meaning of life, contact with intelligent extraterrestrial beings, before there will be a framework for accurately estimating software development complexity and timelines. I am only half joking. It is mind blowing how comically wrong software timelines generally are\u2014forget large government projects, but the addition of a single new number on a report or a checkbox that changes a certain UI behaviour. Things that we estimate to take days can take weeks or even months.\n As I write this paragraph, I am into the fourth day of debugging, testing, and rolling back what seemed like a trivial change that I estimated to take a few hours. On its own, the change is trivial, but the number of subtle edge cases it introduced because of the nuances of multiple systems involved and the timings of certain business processes, we could not foresee.\n Software complexity and timeline estimation is often hindered by the countless subtleties in dependencies and business and user behaviour, than code. In reality, writing code often takes only a fraction of the time compared to figuring out what to write, and then dealing with all the unexpected side effects of what has been written. It is important to be conscious of this fact and actively factor it into project plans, leaving enough room for unexpected delays that are ironically expected. Unfortunately, this is seldom understood by non-technical decision makers who are often in charge of software development timelines.\n  Technical debt is inevitable. The older the debt, the harder it is to get rid of it. In organisations that develop and iterate software rapidly to meet feature goals and deadlines, there is little time to pause, refactor, do things the right way, paving the way to technical debt. That one missed feature in a quarter (yes, as absurd as it sounds, we know of organisations that have X \u201cfeatures\u201d per quarter as a goal) could mean losing competitive advantage, right? This is a myth. Organisations often overestimate the importance of the features they continuously ship (and underestimate the importance of features they don\u2019t ship). In fact, not constantly adding \u201cfeatures\u201d and changing software plays an important role in its prospects of being future ready. That improving the quality and performance of existing software in itself is an important implicit \u201cfeature\u201d is a fact lost on many. We regularly delay shipping new features to slow down and clean up technical debt. Unfortunately, in many organisations, such technical decisions are often not in the hands of developers (cries in  Section 8).\n 7.1. Don\u2019t fix what is not broken, but fix what might soon break.\n The first version of Kite, our trading platform, was written in Python. When it was launched in 2015, there were barely a thousand concurrent users on it. Today, there are way more than a million at any given moment. Version 2, a significant refactor, was launched in 2016, and version 3, a complete rewrite, was launched in 2017. Between these versions, we exhausted possible avenues of performance optimization in Python and rewrote the whole backend in Go. The Angular frontend which became a pain to maintain very quickly was scrapped and rewritten in Vue. The Kite mobile applications that were originally written in native code (became a multi-codebase maintenance headache), then React Native (became a performance headache), were scrapped for a third time and replaced with a rewrite in Flutter. These decisions have worked out amazingly well for us.\n Another instance is ticker, the component that streams tens of millions of real time market data packets every second to end users. It has been refactored and rewritten at least five times in the last six years as we got better at writing Go and as we started sensing imp\n......", "posttime": "2021-07-29 21:24:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u505a\u597d,common,\u8f6f\u4ef6", "title": "\u7528\u5e38\u8bc6\u6269\u5c55 #2\uff1a\u4e3a\u672a\u6765\u505a\u597d\u51c6\u5907", "title_en": "Scaling with common sense #2: Being future ready", "transed": 1, "url": "https://zerodha.tech/blog/being-future-ready-with-common-sense/", "via": "", "real_tags": ["\u505a\u597d", "common", "\u8f6f\u4ef6"]}, {"category": "", "categoryclass": "", "imagename": "40ad528f096488ded54334772fe65eed.png", "infoid": 1070175, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "KeyCastr \u9700\u8981\u8bbf\u95ee macOS Accessibility API \u624d\u80fd\u63a5\u6536\u60a8\u7684\u6309\u952e\u4e8b\u4ef6\u5e76\u5e7f\u64ad\u60a8\u611f\u5174\u8da3\u7684\u6309\u952e\u3002\u5728\u8f83\u65b0\u7248\u672c\u7684 macOS (10.15+) \u4e0a\uff0c\u7cfb\u7edf\u504f\u597d\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u5b89\u5168\u548c\u9690\u79c1\u4e0b\u6709\u4e00\u4e2a\u65b0\u7684\u8f93\u5165\u76d1\u63a7\u83dc\u5355\uff0c\u5e76\u4e14 KeyCastr \u4f1a\u5728\u60a8\u7b2c\u4e00\u6b21\u8fd0\u884c\u65f6\u81ea\u52a8\u51fa\u73b0\u5728\u90a3\u91cc\u3002\u53ea\u9700\u89e3\u9501\u6b64\u83dc\u5355\u5e76\u9009\u4e2d KeyCastr \u65c1\u8fb9\u7684\u6846\u5373\u53ef\u542f\u7528\u5b83\u3002\u5728\u65e7\u7248\u672c\u7684 macOS \u4e0a\uff0c\u6216\u8005\u5982\u679c\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u51fa\u73b0\u5728\u8f93\u5165\u76d1\u63a7\u83dc\u5355\u4e0b\uff08\u6216\u8005\u5982\u679c\u60a8\u60f3\u9884\u5148\u542f\u7528\u5b83\uff09\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u624b\u52a8\u5c06\u5176\u6dfb\u52a0\u5230\u8f85\u52a9\u529f\u80fd\u83dc\u5355\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u5217\u8868\u4e2d\u3002\u8981\u5c06 KeyCastr \u6dfb\u52a0\u5230\u5217\u8868\u4e2d\uff0c\u8bf7\u5355\u51fb + \u6309\u94ae\u5e76\u4ece\u6587\u4ef6\u7cfb\u7edf\u4e2d\u9009\u62e9 KeyCastr\u3002\u5982\u679c KeyCastr \u5df2\u7ecf\u5728\u5217\u8868\u4e2d\uff0c\u5219\u5355\u51fb - \u6309\u94ae\u5e76\u518d\u6b21\u6dfb\u52a0 KeyCastr \u4ee5\u786e\u4fdd\u9009\u62e9\u4e86\u6b63\u786e\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u60a8\u60f3\u663e\u793a\u7684\u4e0d\u4ec5\u4ec5\u662f\u4fee\u9970\u952e\uff0c\u8bf7\u786e\u4fdd\u9009\u4e2d\u201c\u663e\u793a\u6240\u6709\u6309\u952e\u201d\u590d\u9009\u6846\u3002\u6216\u8005\uff0c\u53d6\u6d88\u9009\u4e2d\u6b64\u6846\u4ee5\u4ec5\u663e\u793a\u4fee\u9970\u952e\uff08\u4f8b\u5982 \u21e7 \u2303 \u2325 \u2318\uff09\n\u9ed8\u8ba4\u4f4d\u7f6e\u5728\u663e\u793a\u5668\u7684\u5de6\u4e0b\u89d2\u3002\u8981\u4fee\u6539\u663e\u793a\u7684\u51fb\u952e\u4f4d\u7f6e\uff0c\u8bf7\u5355\u51fb\u5e76\u62d6\u52a8\u6587\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1a", "note_en": "KeyCastr requires access to the macOS Accessibility API in order to receive your key events and broadcast the keystrokes you are interested in.\n On newer versions of macOS (10.15+) there is a new Input Monitoring menu under Security &amp; Privacy within the System Preferences app, and KeyCastr will appear there automatically the first time you run it. Simply unlock this menu and check the box next to KeyCastr to enable it.\n  On older versions of macOS, or if for some reason the app doesn&#39;t appear under the Input Monitoring menu (or if you want to pre-enable it) then you may manually add it to the list of apps in the Accessibility menu.\n  To add KeyCastr to the list click the  + button and select KeyCastr from the file system.\n If KeyCastr is already in the list, then click the  \u2212 button and add KeyCastr again to be certain that the right application is chosen.\n  Make sure to check the &#34;Display all keystrokes&#34; checkbox if you would like to display more than just the modifier keys.\n Alternatively, keep this box unchecked to only display modifier keys (e.g. \u21e7 \u2303 \u2325 \u2318)\n   The default position is on the bottom left of your display. To modify the position of displayed keystrokes, click and drag the text like so:", "posttime": "2021-07-29 21:24:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u53ef\u89c6\u5316,open,keycastr", "title": "KeyCastr \u2013 \u5f00\u6e90\u6309\u952e\u53ef\u89c6\u5316\u5de5\u5177", "title_en": "KeyCastr \u2013 Open-source keystroke visualizer", "transed": 1, "url": "https://github.com/keycastr/keycastr", "via": "", "real_tags": ["\u5f00\u6e90", "\u53ef\u89c6\u5316", "open", "keycastr"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070174, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7d PDF \u6458\u8981\uff1a \u540c\u8d28\u91cf\u7684\u4e00\u7ec4\u89c2\u6d4b\u503c\u7684\u7b97\u672f\u5e73\u5747\u503c\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u6700\u5177\u4ee3\u8868\u6027\u7684\u89c2\u6d4b\u503c\u3002\u5728\u6700\u719f\u6089\u7684\u60ef\u6027\u65f6\u523b\uff0c\u6709\u51e0\u4e2a\u8bba\u636e\u652f\u6301\u8fd9\u79cd\u9009\u62e9\u3002\u4f46\u662f\uff0c\u8fd9\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u5728\u8fd9\u7bc7\u7b14\u8bb0\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86 Kolmogorov-Nagumo \u7684\u89c2\u70b9\uff0c\u5373\u7b97\u672f\u5e73\u5747\u662f\u4e00\u7cfb\u5217\u7279\u6b8a\u51fd\u6570\u7684\u7279\u4f8b\uff0c\u4e8c\u6b21\u548c\u51e0\u4f55\u5e73\u5747\u503c\u662f\u5176\u4ed6\u4e00\u4e9b\u60c5\u51b5\u3002 Themedian \u4e0d\u5c5e\u4e8e\u6b64\u7c7b\u51fd\u6570\u3002 Kolmogorov-Nagumo \u89e3\u91ca\u5bf9\u4e8e\u7b97\u672f\u5e73\u5747\u800c\u8a00\u662f\u6700\u6709\u8bf4\u670d\u529b\u548c\u6700\u786e\u5b9a\u7684\u89e3\u91ca\uff0c\u4f46\u5176\u672c\u8d28\u5f52\u7ed3\u4e3a\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8be5\u5e73\u5747\u53ea\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u4ec5\u5728\u5176\u6570\u5b66\u8bbe\u7f6e\u4e2d\u624d\u6709\u610f\u4e49\u3002\u4e66\u76ee\u5de5\u5177 \u4ee3\u7801\u548c\u6570\u636e\u76f8\u5173\u8bba\u6587 \u5173\u4e8e arXivLabs arXivLabs \u662f\u4e00\u4e2a\u6846\u67b6\uff0c\u5141\u8bb8\u5408\u4f5c\u8005\u76f4\u63a5\u5728\u6211\u4eec\u7684\u7f51\u7ad9\u4e0a\u5f00\u53d1\u548c\u5171\u4eab\u65b0\u7684 arXiv \u529f\u80fd\u3002\u4e0e arXivLabs \u5408\u4f5c\u7684\u4e2a\u4eba\u548c\u7ec4\u7ec7\u90fd\u63a5\u53d7\u5e76\u63a5\u53d7\u4e86\u6211\u4eec\u7684\u5f00\u653e\u3001\u793e\u533a\u3001\u5353\u8d8a\u548c\u7528\u6237\u6570\u636e\u9690\u79c1\u4ef7\u503c\u89c2\u3002 arXiv \u81f4\u529b\u4e8e\u8fd9\u4e9b\u4ef7\u503c\u89c2\uff0c\u5e76\u4e14\u53ea\u4e0e\u9075\u5b88\u8fd9\u4e9b\u4ef7\u503c\u89c2\u7684\u5408\u4f5c\u4f19\u4f34\u5408\u4f5c\u3002\u6709\u4e00\u4e2a\u53ef\u4ee5\u4e3a arXiv \u793e\u533a\u589e\u52a0\u4ef7\u503c\u7684\u9879\u76ee\u7684\u60f3\u6cd5\u5417\uff1f\u4e86\u89e3\u6709\u5173 arXivLabs \u4ee5\u53ca\u5982\u4f55\u53c2\u4e0e\u7684\u66f4\u591a\u4fe1\u606f\u3002", "note_en": "Download PDF  Abstract: The arithmetic average of a collection of observed values of a homogeneouscollection of quantities is often taken to be the most representativeobservation. There are several arguments supporting this choice the moment ofinertia being the most familiar. But what does this mean? In this note, we bring forth the Kolmogorov-Nagumo point of view that thearithmetic average is a special case of a sequence of functions of a specialkind, the quadratic and the geometric means being some of the other cases. Themedian fails to belong to this class of functions. The Kolmogorov-Nagumointerpretation is the most defensible and the most definitive one for thearithmetic average, but its essence boils down to the fact that this average ismerely an abstraction which has meaning only within its mathematical set-up.\n      Bibliographic Tools      Code &amp; Data      Related Papers       About arXivLabs   arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.\n  Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.\n  Have an idea for a project that will add value for arXiv&#39;s community?   Learn more about arXivLabs and   how to get involved.", "posttime": "2021-07-28 04:49:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u610f\u601d,arxivlabs", "title": "\u201c\u610f\u601d\u201d\u5230\u5e95\u662f\u4ec0\u4e48\u610f\u601d\uff1f", "title_en": "What Does the \"Mean\" Really Mean?", "transed": 1, "url": "https://arxiv.org/abs/2003.01973", "via": "", "real_tags": ["\u610f\u601d", "arxivlabs"]}, {"category": "", "categoryclass": "", "imagename": "d7a62db8c46ef73f9082e3753930fd7d.jpg", "infoid": 1070173, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e86\u89e3\u5982\u4f55\u4f7f\u7528 NFL \u63d0\u4f9b\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6765\u53d1\u73b0\u5bf9\u8bb8\u591a\u7403\u5458\u8868\u73b0\u6307\u6807\u7684\u5b9d\u8d35\u89c1\u89e3 - \u4ee5\u53ca\u5982\u4f55\u5e94\u7528\u76f8\u540c\u7684\u65b9\u6cd5\u6765\u63d0\u9ad8\u60a8\u7684\u68a6\u5e7b\u8054\u76df\u7403\u961f\u3001\u60a8\u5bf9\u6bd4\u8d5b\u7684\u4e86\u89e3\u6216\u60a8\u7684\u89c2\u770b\u4f53\u9a8c - \u5168\u90e8\u4f7f\u7528 PostgreSQL \u3001\u6807\u51c6 SQL \u548c\u514d\u8d39\u63d0\u4f9b\u7684\u6269\u5c55\u3002\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u65e0\u5904\u4e0d\u5728\uff0c\u4ee4\u6211\u4eec\u60ca\u8bb6\u7684\u662f\uff0c\u5305\u62ec\u804c\u4e1a\u4f53\u80b2\u754c\u3002\u5728 Timescale\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u5bfb\u627e\u6709\u8da3\u7684\u65b9\u5f0f\u6765\u5c55\u793a\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u6269\u5c55\u8303\u56f4\u3002\u80a1\u7968\u3001\u52a0\u5bc6\u8d27\u5e01\u3001\u7269\u8054\u7f51\u548c\u57fa\u7840\u8bbe\u65bd\u6307\u6807\u6570\u636e\u662f\u76f8\u5bf9\u5e38\u89c1\u4e14\u88ab\u5e7f\u6cdb\u7406\u89e3\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u573a\u666f\u3002\u5728\u4efb\u4f55\u4e00\u5929\u524d\u5f80 Twitter\uff0c\u641c\u7d22 #timeseries \u6216 #TimescaleDB\uff0c\u60a8\u4e00\u5b9a\u4f1a\u53d1\u73b0\u6709\u5173\u4f7f\u7528 Prometheus \u7b49\u5de5\u5177\u8fdb\u884c\u9ad8\u9891\u4ea4\u6613\u6216\u5927\u89c4\u6a21\u53ef\u89c2\u5bdf\u6027\u6570\u636e\u7684\u95ee\u9898\u3002\u4f60\u53ef\u4ee5\u60f3\u8c61\u5f53\u6211\u4eec\u9047\u5230 NFL \u5927\u6570\u636e\u7897\u65f6\u6211\u4eec\u7684\u5174\u594b\uff0c\u8fd9\u662f\u4e00\u5e74\u4e00\u5ea6\u7684\u6bd4\u8d5b\uff0c\u9f13\u52b1\u6570\u636e\u79d1\u5b66\u754c\u4f7f\u7528\u5386\u53f2\u7403\u5458\u4f4d\u7f6e\u548c\u6bd4\u8d5b\u6570\u636e\u6765\u521b\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b\u3002 NFL \u771f\u7684\u53ef\u4ee5\u8bbf\u95ee\u6bcf\u573a\u5e38\u89c4\u8d5b NFL \u6bd4\u8d5b\u7684 18+ \u767e\u4e07\u884c\u8be6\u7ec6\u6bd4\u8d5b\u6570\u636e\u5417\uff1f\u4f5c\u4e3a\u80cc\u666f\uff0c\u7f8e\u56fd\u56fd\u5bb6\u6a44\u6984\u7403\u8054\u76df (NFL) \u662f\u7f8e\u56fd\u6a44\u6984\u7403\u804c\u4e1a\u4f53\u80b2\u8054\u76df\uff0cNFL \u8d5b\u5b63\u7d27\u968f\u5176\u540e\u7684\u662f\u6570\u4ee5\u5343\u4e07\u8ba1\u7684\u4eba\uff0c\u6700\u7ec8\u4ee5\u4e00\u5e74\u4e00\u5ea6\u7684\u8d85\u7ea7\u7897\uff08\u5438\u5f15\u4e86 1 \u4ebf + \u5168\u7403\u89c2\u4f17\uff0c\u65e0\u8bba\u662f\u4e3a\u4e86\u6bd4\u8d5b\uff09\u6216\u7528\u4e8e\u5e7f\u544a\uff09\u3002\u6bcf\u573a NFL \u6bd4\u8d5b\u90fd\u662f\u4e00\u7cfb\u5217\u201c\u6bd4\u8d5b\u201d\uff0c\u5176\u4e2d\u4e24\u652f\u7403\u961f\u8bd5\u56fe\u5f97\u5206\u5e76\u963b\u6b62\u53e6\u4e00\u652f\u7403\u961f\u5f97\u5206\u3002\u6bcf\u573a\u6bd4\u8d5b\u5927\u7ea6\u6709 200 \u573a\u6bd4\u8d5b\uff0c\u5e38\u89c4\u8d5b\u671f\u95f4\u6bcf\u5468\u6700\u591a\u6709 15 \u573a\u6bd4\u8d5b\u3002\u5927\u91cf\u7684\u6570\u636e\uff0c\u4f46\u6ca1\u6709\u4ec0\u4e48\u662f\u4e0d\u53ef\u7ba1\u7406\u7684\u3002\u56e0\u6b64\uff0c\u4e4d\u4e00\u770b\uff0c\u8db3\u7403\u6bd4\u8d5b\u6307\u6807\u53ef\u80fd\u4e0d\u4f1a\u7acb\u5373\u8df3\u51fa\u4efb\u4f55\u7279\u522b\u7684\u4e1c\u897f\u3002\n\u6240\u6709 NFL \u7403\u5458\u90fd\u914d\u5907\u4e86 RFID \u82af\u7247\uff0c\u7528\u4e8e\u8ddf\u8e2a\u7403\u5458\u7684\u4f4d\u7f6e\u3001\u901f\u5ea6\u548c\u5404\u79cd\u5176\u4ed6\u6307\u6807\uff0c\u56e2\u961f\u4f7f\u7528\u8fd9\u4e9b\u6307\u6807\u6765\u8bc6\u522b\u8d8b\u52bf\u3001\u964d\u4f4e\u98ce\u9669\u5e76\u6301\u7eed\u4f18\u5316\u3002 NFL \u5f00\u59cb\u8ddf\u8e2a\u548c\u5b58\u50a8\u573a\u4e0a\u6bcf\u4f4d\u7403\u5458\u3001\u6bcf\u6b21\u6bd4\u8d5b\u3001\u6bcf\u573a\u6bd4\u8d5b\u7684\u6570\u636e\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u975e\u5e38\u8be6\u7ec6\u5730\u5206\u6790\u4e00\u573a\u6bd4\u8d5b\u662f\u5982\u4f55\u5c55\u5f00\u7684\uff0c\u4e0d\u540c\u7403\u5458\u5728\u6bcf\u6b21\u6bd4\u8d5b\u4e2d\u52a0\u901f\u7684\u901f\u5ea6\u6709\u591a\u5feb\uff0c\u4ee5\u53ca\u6bd4\u8d5b\u7684\u7ed3\u679c\u3002\u9010\u573a\u6bd4\u8d5b\u6307\u6807\u7684\u4f20\u7edf\u89c2\u70b9\u662f\u201c\u8ddd\u79bb\u548c\u8ddd\u79bb\u201d\u4ee5\u53ca\u6bd4\u8d5b\u7684\u7ed3\u679c\uff08\u83b7\u5f97\u7684\u7801\u6570\uff0c\u662f\u5426\u6709\u5f97\u5206\u7b49\uff09\u3002\u4f7f\u7528 NFL \u7684\u6570\u636e\u96c6\uff0c\u6211\u4eec\u80fd\u591f\u5728\u6574\u4e2a\u6bd4\u8d5b\u4e2d\u4ee5 100 \u6beb\u79d2\u7684\u95f4\u9694\u6316\u6398\u5927\u7ea6 100 \u4e2a\u6570\u636e\u70b9\uff0c\u4ee5\u67e5\u770b\u901f\u5ea6\u3001\u8ddd\u79bb\u3001\u53c2\u4e0e\u7684\u7403\u5458\u7b49\u7b49\u3002\u8fd9\u4e0d\u662f\u666e\u901a\u7684\u6570\u636e\u3002\u8fd9\u662f\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u662f\u5728\u65f6\u95f4\u95f4\u9694\u5185\u6536\u96c6\u7684\u4e00\u7cfb\u5217\u6570\u636e\u70b9\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u8ddf\u8e2a\u968f\u65f6\u95f4\u7684\u53d8\u5316\u3002\u5728 NFL \u6570\u636e\u96c6\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6709\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u6765\u8868\u793a\u6bd4\u8d5b\u5982\u4f55\u53d8\u5316\uff0c\u5305\u62ec\u7403\u5458\u5728\u573a\u4e0a\u7684\u4f4d\u7f6e\u3001\u7403\u7684\u4f4d\u7f6e\u3001\u7403\u5458\u5728\u573a\u4e0a\u7684\u76f8\u5bf9\u52a0\u901f\u5ea6\u7b49\u591a\u5f97\u591a\u3002\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5f88\u5feb\u5c31\u4f1a\u51fa\u73b0\uff0c\u6709\u65f6\u6bcf\u79d2\u751f\u6210\u6570\u767e\u4e07\u4e2a\u6570\u636e\u70b9\uff08\u9605\u8bfb\u66f4\u591a\u5173\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u4fe1\u606f\uff09\u3002\u7531\u4e8e\u4fe1\u606f\u91cf\u548c\u4fe1\u606f\u91cf\u5de8\u5927\uff0c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u7684\u67e5\u8be2\u548c\u5206\u6790\u5df2\u7ecf\u5f88\u590d\u6742\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6784\u5efa TimescaleDB \u7684\u539f\u56e0\uff0c\u8fd9\u662f\u4e00\u4e2a\u591a\u8282\u70b9\u3001PB \u7ea7\u3001\u5b8c\u5168\u514d\u8d39\u7684\u65f6\u95f4\u5e8f\u5217\u5173\u7cfb\u6570\u636e\u5e93\u3002\u6211\u4eec\u4e0d\u80fd\u9519\u8fc7\u4f7f\u7528 TimescaleDB \u67e5\u770b NFL \u6570\u636e\u96c6\u7684\u673a\u4f1a\uff0c\u63a2\u7d22\u6211\u4eec\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u89c2\u5bdf\u7403\u5458\u8868\u73b0\u7684\u65b9\u6cd5\uff0c\u5e0c\u671b\u80fd\u63d0\u4f9b\u6709\u5173\u4e0b\u8d5b\u5b63\u6574\u4f53\u7403\u5458\u8868\u73b0\u7684\u89c1\u89e3\u3002\u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u6709\u5173 NFL \u6570\u636e\u96c6\u4ee5\u53ca\u5982\u4f55\u5f00\u59cb\u4f7f\u7528\u5b83\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u4ee5\u53ca\u4e00\u4e9b\u793a\u4f8b\u67e5\u8be2\u4ee5\u5feb\u901f\u542f\u52a8\u60a8\u7684\u5206\u6790\u3002\u5b83\u4eec\u53ef\u4ee5\u5e2e\u52a9\u60a8\u4ece\u6e38\u620f\u4e2d\u83b7\u5f97\u66f4\u591a\u4e50\u8da3\u3002\u5982\u679c\u60a8\u60f3\u5f00\u59cb\u4f7f\u7528 NFL \u6570\u636e\uff0c\u60a8\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u5b8c\u5168\u6258\u7ba1\u7684 TimescaleDB \u670d\u52a1\uff1a\u521b\u5efa\u4e00\u4e2a\u5e10\u6237\u4ee5\u514d\u8d39\u8bd5\u7528 30 \u5929\u3002\u672c\u6587\u540e\u9762\u7684\u8bf4\u660e\u5c06\u5e26\u60a8\u4e86\u89e3\u5982\u4f55\u6444\u53d6\u6570\u636e\u5e76\u5f00\u59cb\u4f7f\u7528\u5b83\u8fdb\u884c\u5206\u6790\u3002\n\u5982\u679c\u60a8\u4e0d\u719f\u6089\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u6216\u8005\u53ea\u662f\u6709\u4e00\u4e9b\u5173\u4e8e\u6570\u636e\u96c6\u7684\u95ee\u9898\uff0c\u8bf7\u52a0\u5165\u6211\u4eec\u7684\u516c\u5171 Slack \u793e\u533a\uff0c\u5728\u90a3\u91cc\u60a8\u53ef\u4ee5\u627e\u5230 Timescale \u56e2\u961f\u6210\u5458\u548c\u6570\u4ee5\u5343\u8ba1\u7684\u65f6\u95f4\u5e8f\u5217\u7231\u597d\u8005\uff0c\u6211\u4eec\u5f88\u4e50\u610f\u4e3a\u60a8\u63d0\u4f9b\u5e2e\u52a9\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0cNFL \u548c Kaggle \u5728 NFL \u5927\u6570\u636e\u7897\u4e0a\u8fdb\u884c\u4e86\u5408\u4f5c\u3002\u76ee\u6807\u662f\u4f7f\u7528\u5386\u53f2\u6570\u636e\u6765\u56de\u7b54\u9884\u5b9a\u7c7b\u578b\u7684\u95ee\u9898\uff0c\u901a\u5e38\u4f1a\u751f\u6210\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u53ef\u4ee5\u5e2e\u52a9\u9884\u6d4b\u5e38\u89c4\u8d5b\u671f\u95f4\u67d0\u4e9b\u6bd4\u8d5b\u7684\u7ed3\u679c\u3002\u5c3d\u7ba1 2020/2021 \u6bd4\u8d5b\u5df2\u7ecf\u7ed3\u675f\uff0c\u4f46\u4ed6\u4eec\u63d0\u4f9b\u7684\u4e0a\u4e00\u8d5b\u5b63\u7684\u6837\u672c\u6570\u636e\u96c6\u4ecd\u7136\u53ef\u4f9b\u4e0b\u8f7d\u548c\u5206\u6790\u3002 2020/2021\u8d5b\u5b63\u7684\u6bd4\u8d5b\u4fa7\u91cd\u4e8e\u4f20\u7403\u9632\u5b88\u6548\u7387\uff1b\u56e0\u6b64\uff0c\u6570\u636e\u96c6\u4e2d\u53ea\u6709\u8fdb\u653b\u548c\u9632\u5b88\u201c\u7ec4\u7ec7\u8005\u201d\u7684\u8ddf\u8e2a\u6570\u636e\u53ef\u7528\u3002\u4e0d\u5305\u62ec\u8fdb\u653b\u6216\u9632\u5b88\u8fb9\u950b\u6570\u636e\u3002 \uff08\u60a8\u53ef\u4ee5\u9605\u8bfb\u6709\u5173\u53bb\u5e74\u83b7\u5956\u8005\u7684\u66f4\u591a\u4fe1\u606f\u3002\uff09\u51fa\u4e8e\u672c\u535a\u5ba2\u6587\u7ae0\u548c\u968f\u9644\u6559\u7a0b\u7684\u76ee\u7684\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 NFL \u63d0\u4f9b\u7684\u793a\u4f8b\u6570\u636e\u3002\u8fd9\u4e9b\u6570\u636e\u6765\u81ea 2018 NFL \u8d5b\u5b63\uff0c\u5e76\u4ee5 CSV \u6587\u4ef6\u7684\u5f62\u5f0f\u63d0\u4f9b\uff0c\u5305\u62ec\u6bd4\u8d5b\u7279\u5b9a\u6570\u636e\u548c\u53c2\u4e0e\u4f20\u7403\u201c\u8fdb\u653b\u201d\u90e8\u5206\u7684\u6bcf\u4e2a\u7403\u5458\u7684\u6bcf\u5468\u8ddf\u8e2a\u6570\u636e\u3002\u4e0b\u4e00\u5b63\u7684\u6bd4\u8d5b\u53c2\u4e0e\u8005\u5c06\u53ef\u4ee5\u8bbf\u95ee\u65b0\u7684\u6bcf\u5468\u6e38\u620f\u6570\u636e\u3002\u8fd9\u4e9b\u6570\u636e\u672c\u8d28\u4e0a\u4e5f\u662f\u975e\u5e38\u76f8\u5173\u7684\uff0c\u8fd9\u610f\u5473\u7740 SQL \u662f\u5f00\u59cb\u6536\u96c6\u4ef7\u503c\u7684\u7edd\u4f73\u5a92\u4ecb\u2014\u2014\u4e0d\u9700\u8981 Jupyter notebook\u3001\u5176\u4ed6\u6570\u636e\u79d1\u5b66\u7279\u5b9a\u8bed\u8a00\uff08\u5982 Python \u6216 R\uff09\u6216\u5176\u4ed6\u5de5\u5177\u96c6\u3002\u5982\u679c\u60a8\u60f3\u8ddf\u968f - \u6216\u91cd\u65b0\u521b\u5efa\uff01 - \u6211\u4eec\u5728\u4e0b\u9762\u7ecf\u5386\u7684\u67e5\u8be2\uff0c\u6309\u7167\u6211\u4eec\u7684\u6559\u7a0b\u8bbe\u7f6e\u8868\uff0c\u6444\u53d6\u6570\u636e\uff0c\u5e76\u5f00\u59cb\u5728 TimescaleDB \u4e2d\u5206\u6790\u6570\u636e\u3002\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u719f\u6089 TimescaleDB \u7684\u4eba\u6765\u8bf4\uff0c\u5b83\u662f\u5efa\u7acb\u5728 PostgreSQL \u4e4b\u4e0a\u7684\uff0c\u6240\u4ee5\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u6240\u6709\u7684\u67e5\u8be2\u90fd\u662f\u6807\u51c6\u7684 SQL\u3002\u5982\u679c\u60a8\u4e86\u89e3 SQL\uff0c\u60a8\u5c31\u4f1a\u77e5\u9053\u5982\u4f55\u5728\u6b64\u5904\u5b8c\u6210\u6240\u6709\u64cd\u4f5c\u3002 \uff08\u6211\u4eec\u63d0\u4f9b\u7684\u4e00\u4e9b\u66f4\u9ad8\u7ea7\u7684\u67e5\u8be2\u793a\u4f8b\u9700\u8981\u6211\u4eec\u65b0\u7684\u3001\u9ad8\u7ea7\u7684\u8d85\u51fd\u6570\uff0c\u5b83\u9884\u88c5\u5728\u4efb\u4f55 Timescale Forge \u5b9e\u4f8b\u4e2d\u3002\uff09\u6211\u4eec\u5728\u968f\u9644\u7684\u6559\u7a0b\u4e2d\u63d0\u4f9b\u4e86\u5c06\u6570\u636e\u96c6\u6444\u53d6\u5230 TimescaleDB \u6240\u9700\u7684\u6b65\u9aa4\uff0c\u6240\u4ee5\u6211\u4eec\u8d62\u4e86\u4e0d\u8981\u5728\u8fd9\u91cc\u8ba8\u8bba\u3002\n\u6bd4\u8d5b\uff1a\u5173\u4e8e\u5e38\u89c4\u8d5b\u6bcf\u573a\u6bd4\u8d5b\u7684\u6240\u6709\u76f8\u5173\u6570\u636e\uff0c\u5305\u62ec\u65e5\u671f\u3001\u7403\u961f\u3001\u65f6\u95f4\u548c\u5730\u70b9\u7403\u5458\uff1a\u5173\u4e8e\u6bcf\u4e2a\u7403\u5458\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u4ed6\u4eec\u6548\u529b\u7684\u7403\u961f\u548c\u4ed6\u4eec\u6700\u521d\u7684\u5927\u5b66\u6bd4\u8d5b\uff1a\u5173\u4e8e\u6bcf\u6b21\u4f20\u7403\u7684\u4e30\u5bcc\u6570\u636e\u6e38\u620f\u3002\u6709\u7528\u7684\u5b57\u6bb5\u5305\u62ec\u51fb\u7403\u3001\u5bf9\u53d1\u751f\u7684\u6bd4\u8d5b\u7684\u63cf\u8ff0\u3001\u6df7\u6218\u7ebf\u548c\u603b\u8fdb\u653b\u7801\u6570\u7b49\u7ec6\u8282\u3002\u5468 [1-17]\uff1a\u5bf9\u4e8e\u672c\u8d5b\u5b63\u7684\u6bcf\u4e00\u5468\uff0cNFL \u90fd\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684 CSV \u6587\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u6bcf\u4e2a\u7403\u5458\u7684\u8ddf\u8e2a\u6570\u636e\uff0c\u6bcf\u6b21\u6bd4\u8d5b\uff08\u6b64\u6570\u636e\u7684\u4f20\u7403\u6b21\u6570\uff09\u3002\u6709\u8da3\u7684\u5b57\u6bb5\u5305\u62ec\u6bcf\u6b21\u6bd4\u8d5b\u4e2d\u6bcf\u9694\u51e0\u767e\u6beb\u79d2\u7684 X/Y \u4f4d\u7f6e\u6570\u636e\uff08\u76f8\u5bf9\u4e8e\u8db3\u7403\u573a\uff09\u3001\u7403\u5458\u52a0\u901f\u5ea6\u4ee5\u53ca\u6240\u91c7\u53d6\u8def\u7ebf\u7684\u201c\u7c7b\u578b\u201d\u3002 \uff08\u5728\u6211\u4eec\u7684\u6559\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u6570\u636e\u88ab\u5bfc\u5165\u5230\u8ddf\u8e2a\u8868\u4e2d\uff0c\u603b\u5171\u6709\u8fd1 2000 \u4e07\u884c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002\uff09\u9664\u4e86 NFL \u6570\u636e\u96c6\uff0c\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6765\u81ea Wikipedia \u7684\u989d\u5916\u6570\u636e\uff0c\u5176\u4e2d\u5305\u62ec\u6bcf\u4e2a\u9879\u76ee\u7684\u6bd4\u8d5b\u5f97\u5206\u548c\u4f53\u80b2\u573a\u6761\u4ef6\u3002\u6e38\u620f\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u6559\u7a0b\u7684\u4e00\u90e8\u5206\u52a0\u8f7d\u3002\u5bf9\u4e8e\u5176\u4ed6\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\uff0c\u53ef\u80fd\u5f88\u96be\u5c06\u60a8\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u4e0e\u60a8\u624b\u5934\u53ef\u80fd\u62e5\u6709\u7684\u4efb\u4f55\u5176\u4ed6\u6570\u636e\u7ed3\u5408\u8d77\u6765\uff08\u8bf7\u53c2\u9605\u6211\u4eec\u7684 TimescaleDB \u4e0e InfluxDB \u6bd4\u8f83\u4ee5\u4f9b\u53c2\u8003\uff09\u3002\u56e0\u4e3a TimescaleDB \u662f\u5177\u6709\u65f6\u95f4\u5e8f\u5217\u8d85\u80fd\u529b\u7684 PostgreSQL\uff0c\u5b83\u652f\u6301 JOINS\uff0c\u56e0\u6b64\u60a8\u60f3\u8981\u6dfb\u52a0\u4efb\u4f55\u989d\u5916\u7684\u5173\u7cfb\u6570\u636e\u4ee5\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u5206\u6790\uff0c\u53ea\u9700\u4e00\u4e2a SQL \u67e5\u8be2\u5373\u53ef\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u80fd\u591f\u5c06 NFL \u7684\u9010\u573a\u6bd4\u8d5b\u6570\u636e\u4e0e\u6bcf\u4e2a\u4f53\u80b2\u573a\u7684\u5929\u6c14\u6570\u636e\u7ed3\u5408\u8d77\u6765\u3002\u51c6\u5907\u597d\u6570\u636e\u540e\uff0cNFL \u7ec4\u7ec7\u8005\u7684\u4e16\u754c\u5c31\u5728\u60a8\u7684\u6307\u5c16\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\uff01\n\u5e74\u590d\u4e00\u5e74\uff0c\u5728 StackOverflow \u8c03\u67e5\u4e2d\uff0c\u6211\u4eec\u770b\u5230 SQL \u88ab\u5217\u4e3a\u6700\u53d7\u5f00\u53d1\u4eba\u5458\u6b22\u8fce\u7684\u8bed\u8a00\u4e4b\u4e00\u3002\u7136\u800c\uff0c\u6709\u65f6\u6211\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\uff0c\u4ece\u5173\u7cfb\u6570\u636e\u4e2d\u83b7\u5f97\u6d1e\u5bdf\u529b\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u4f7f\u7528\u5f3a\u5927\u7684\u6570\u636e\u5206\u6790\u5de5\u5177\u548c\u8bed\u8a00\u8fdb\u884c\u67e5\u8be2\u3001\u521b\u5efa\u6570\u636e\u6846\u5e76\u4f7f\u7528\u4e13\u95e8\u7684\u56de\u5f52\u7b97\u6cd5\uff0c\u7136\u540e\u624d\u80fd\u505a\u4efb\u4f55\u5bcc\u6709\u6210\u6548\u7684\u4e8b\u60c5\u3002\u901a\u5e38\u611f\u89c9 SQL \u4ec5\u7528\u4e8e\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u83b7\u53d6\u548c\u5b58\u50a8\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5206\u6790\u7684\u201c\u7e41\u91cd\u5de5\u4f5c\u201d\u7559\u7ed9\u66f4\u6210\u719f\u7684\u5de5\u5177\u3002\u4e0d\u662f\u8fd9\u6837\uff01 SQL \u53ef\u4ee5\u4f7f\u7528\u5176\u4e2d\u6700\u597d\u7684\u6765\u5904\u7406\u6570\u636e\uff01\u8ba9\u6211\u4eec\u770b\u7b2c\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u793a\u4f8b\uff0c\u6211\u4eec\u5c06\u67e5\u8be2\u8ddf\u8e2a\u8868\uff08\u6240\u6709 17 \u5468\u6bd4\u8d5b\u7684\u7403\u5458\u79fb\u52a8\u6570\u636e\uff09\u5e76\u52a0\u5165\u6bd4\u8d5b\u8868\u4ee5\u786e\u5b9a\u6bcf\u573a\u6bd4\u8d5b\u6bcf\u4e2a\u7403\u5458\u4f4d\u7f6e\u7684\u7801\u6570\u3002\u7ed3\u679c\u53ef\u8ba9\u60a8\u5feb\u901f\u4e86\u89e3\u6bcf\u573a\u6bd4\u8d5b\u4e2d\u4e0d\u540c\u4f4d\u7f6e\u8dd1\u4e86\u591a\u5c11\u7801\u3002\u60a8\u53ef\u4ee5\u7a0d\u540e\u4f7f\u7528\u5b83\u6765\u6bd4\u8f83\u7279\u5b9a\u7403\u5458\uff0c\u4ee5\u4e86\u89e3\u4ed6\u4eec\u4e0e\u603b\u7801\u6570\u6216\u591a\u6216\u5c11\u7684\u6bd4\u8f83\u60c5\u51b5\u3002 WITH total_position_yards AS ( SELECT sum(dis) position_yards, POSITION, gameid FROM tracking t GROUP BY POSITION, gameid)SELECT avg(position_yards), position, game_dateFROM game gINNER JOIN total_position_yards tpy ON g.game_id = tpy.gameidWHERE POSITION IN (&#39; &#39;,&#39;RB&#39;,&#39;WR&#39;,&#39;TE&#39;)GROUP BY game_date, POSITION;\u968f\u7740\u8d5b\u5b63\u7684\u8fdb\u884c\u548c\u7403\u5458\u53d7\u4f24\uff08\u6216\u88ab\u4ea4\u6613\uff09\uff0c\u4e86\u89e3\u54ea\u4e9b\u7403\u5458\u6709\u66f4\u591a\u7684\u6bd4\u8d5b\u7ecf\u9a8c\u4f1a\u5f88\u6709\u5e2e\u52a9\uff0c\u800c\u4e0d\u662f\u90a3\u4e9b\u5728\u8d5b\u5b63\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5750\u5728\u573a\u8fb9\u7684\u7403\u5458\u3002\u62e5\u6709\u66f4\u591a\u4e0a\u573a\u65f6\u95f4\u7684\u7403\u5458\u901a\u5e38\u80fd\u591f\u4e3a\u6bd4\u8d5b\u7684\u7ed3\u679c\u505a\u51fa\u8d21\u732e\u3002\n\u6b64\u67e5\u8be2\u67e5\u627e\u4efb\u4f55\u8fdb\u653b\u4e2d\u7684\u6240\u6709\u7403\u5458\uff0c\u5e76\u8ba1\u7b97\u4ed6\u4eec\u53c2\u4e0e\u7684\u603b\u4f20\u7403\u6b21\u6570\uff0c\u6309\u603b\u4f20\u7403\u6b21\u6570\u964d\u5e8f\u6392\u5217\u3002 WITH snap_events AS (--\u521b\u5efa\u4e00\u4e2a\u8fc7\u6ee4\u64ad\u653e\u4e8b\u4ef6\u7684\u8868\u683c\u4ee5\u4ec5\u663e\u793a\u5feb\u901f\u64ad\u653e--\u5e76\u663e\u793a\u73a9\u5bb6\u56e2\u961f\u4fe1\u606f SELECT DISTINCT player_id, t.event, t.gameid, t.playid, CASE WHEN t.team = &#39;\u79bb\u5f00&#39; THEN g.visitor_team WHEN t.team = &#39;home&#39; THEN g.home_team ELSE NULL END AS team_name FROM tracking t LEFT JOIN game g ON t.gameid = g.game_id WHERE t.event IN (&#39;snap_direct&#39;,&#39;ball_snap &#39;))-- \u8ba1\u7b97\u8fd9\u4e9b\u4e8b\u4ef6\u5e76\u8fc7\u6ee4\u7ed3\u679c\u4ee5\u4ec5\u5728\u73a9\u5bb6\u5904\u4e8e\u8fdb\u653b\u72b6\u6001\u65f6\u663e\u793a\u6570\u636e--\u5728\u8fdb\u653b\u65f6SELECT a.player_id, pl.display_name, COUNT(a.event) AS play_count, a.team_nameFROM snap_events aLEFT JOIN play p ON a.gameid = p.gameid AND a.playid = p.playidLEFT JOIN player pl ON a.player_id = pl.player_idWHERE a.team_name = p.possessionteamGROUP BY a.player_id, pl.display_name, a.team_name ORDER BY play_count DESC;\u5982\u679c\u60a8\u719f\u6089\u7f8e\u5f0f\u8db3\u7403\uff0c\u60a8\u53ef\u80fd\u77e5\u9053\u7403\u5458\u4f1a\u6839\u636e\u6bd4\u8d5b\u6761\u4ef6\u5728\u6bd4\u8d5b\u5185\u5916\u88ab\u66ff\u6362\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u66f4\u5f3a\u58ee\u3001\u66f4\u5927\u7684\u7403\u5458\u53ef\u80fd\u4f1a\u73a9\uff0c\u800c\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u901f\u5ea6\u66f4\u5feb\u3001\u66f4\u654f\u6377\u7684\u7403\u5458\u53ef\u80fd\u4f1a\u73a9\u3002\u7136\u800c\uff0c\u56db\u5206\u536b\u662f\u573a\u4e0a\u6700\u201c\u91cd\u8981\u201d\u7684\u7403\u5458\uff0c\u800c\u4e14\u5f80\u5f80\u6bd4\u5176\u4ed6\u4eba\u6253\u5f97\u66f4\u591a\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u7701\u7565\u56db\u5206\u536b\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u6240\u6709\u5176\u4ed6\u4f4d\u7f6e\u7684\u7403\u5458\u3002 WITH snap_events AS (--\u521b\u5efa\u4e00\u4e2a\u8fc7\u6ee4\u64ad\u653e\u4e8b\u4ef6\u7684\u8868\u683c\u4ee5\u4ec5\u663e\u793a\u5feb\u901f\u64ad\u653e--\u5e76\u663e\u793a\u73a9\u5bb6\u56e2\u961f\u4fe1\u606f SELECT DISTINCT player_id, t.event, t.gameid, t.playid, CASE WHEN t.team = &#39;\u79bb\u5f00&#39; THEN g.visitor_team WHEN t.team = &#39;home&#39; THEN g.home_team ELSE NULL END AS team_name FROM tracking t LEFT JOIN game g ON t.gameid = g.game_id WHERE t.event IN (&#39;snap_direct&#39;,&#39;ball_snap &#39;))-- \u8ba1\u7b97\u8fd9\u4e9b\u4e8b\u4ef6\u5e76\u8fc7\u6ee4\u7ed3\u679c\u4ee5\u4ec5\u663e\u793a\u7403\u5458\u5728\u8fdb\u653b\u65f6\u7684\u6570\u636e--\u5728\u8fdb\u653b\u65f6SELECT a.player_id, pl.display_name, COUNT(a.event) AS play_count, a.team_name, pl.&quot;position&quot; FROM snap_events aLEFT JOIN play p ON a.gameid = p.gameid AND a.playid = p.playidLEFT JOIN player pl ON a.player_id = pl.player_idWHERE a.team_name = p.possessionteam AND pl.&quot;position&quot; != &#39;QB &#39;GROUP BY a.player_id, pl.display_name, a.team_name, pl.&quot;position&quot; ORDER BY play_count DESC;\u6240\u4ee5\uff0c\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u8d5b\u5b63\u4e2d\u8fdb\u653b\u6700\u591a\u7684\u975e\u56db\u5206\u536b\uff1a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ece\u8ddf\u8e2a\u8868\u4e2d\u63d0\u53d6\u7279\u5b9a\u6570\u636e\u5e76\u5728\u5176\u4e0a\u5206\u5c42\u67e5\u8be2\u4ee5\u8fdb\u884c\u5173\u8054\u6765\u5f00\u59cb\u66f4\u6df1\u5165\u4e00\u4e9b\u3002\u4e00\u9879\u53ef\u80fd\u5bf9\u60a8\u7684\u5206\u6790\u6709\u6240\u5e2e\u52a9\u7684\u4fe1\u606f\u662f\u4e86\u89e3\u54ea\u4e9b\u56db\u5206\u536b\u5728\u4f20\u7403\u8fc7\u7a0b\u4e2d\u6700\u5e38\u88ab\u89e3\u96c7\u3002\u5728\u8db3\u7403\u4e2d\uff0c\u201c\u89e3\u96c7\u201d\u5bf9\u8fdb\u653b\u6765\u8bf4\u662f\u4e00\u79cd\u6d88\u6781\u7684\u8868\u73b0\uff0c\u7ecf\u5e38\u88ab\u89e3\u96c7\u7684\u56db\u5206\u536b\u5728\u6574\u4f53\u4e0a\u7684\u8868\u73b0\u5f80\u5f80\u8f83\u5dee\u3002\n\u4e00\u65e6\u4f60\u4e86\u89e3\u4e86\u8fd9\u4e9b\u7403\u5458\uff0c\u4f60\u5c31\u53ef\u4ee5\u6269\u5c55\u4f60\u7684\u5206\u6790\uff0c\u770b\u770b\u4ed6\u4eec\u662f\u5426\u56e0\u7279\u5b9a\u7c7b\u578b\u7684\u6bd4\u8d5b\uff08\u6563\u5f39\u67aa\u9635\u578b\uff09\u88ab\u89e3\u96c7\u66f4\u591a\uff0c\u6216\u8005\u662f\u5426\u5728\u6bd4\u8d5b\u7684\u7279\u5b9a\u5b63\u5ea6\uff08\u53ef\u80fd\u662f\u7b2c\u56db\u8282\uff0c\u56e0\u4e3a\u8fdb\u653b\u7ebf\u66f4\u7d2f\uff0c\u6216\u8005\u7403\u961f\u5728\u6bd4\u8d5b\u540e\u671f\u5f80\u5f80\u843d\u540e\uff0c\u5fc5\u987b\u66f4\u9891\u7e41\u5730\u4f20\u7403\uff09\u3002\u50cf\u8fd9\u6837\u7684\u67e5\u8be2\u53ef\u4ee5\u5feb\u901f\u5411\u60a8\u5c55\u793a\u66f4\u6709\u53ef\u80fd\u88ab\u89e3\u96c7\u7684\u56db\u5206\u536b\uff0c\u5c24\u5176\u662f\u5f53\u4ed6\u4eec\u6253\u4e00\u652f\u9632\u5b88\u5f3a\u961f\u65f6\u3002\u9996\u5148\uff0c\u6211\u4eec\u60f3\u6839\u636e\u6bcf\u4e2a\u56db\u5206\u536b\u5728\u5e38\u89c4\u8d5b\u671f\u95f4\u53c2\u4e0e\u7684\u4f20\u7403\u603b\u6570\u627e\u5230\u4ed6\u4eec\u7684\u64d2\u6740\u767e\u5206\u6bd4\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u901a\u8fc7\u5728\u516c\u5171\u8868\u8868\u8fbe\u5f0f\u4e0a\u5206\u5c42\u6765\u5904\u7406\u8ddf\u8e2a\u6570\u636e\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u67e5\u8be2\u90fd\u53ef\u4ee5\u5efa\u7acb\u5728\u5148\u524d\u7684\u7ed3\u679c\u4e4b\u4e0a\u3002\u9996\u5148\uff0c\u6211\u4eec\u4e3a\u6bcf\u4e2a\u56db\u5206\u536b (qb_plays) \u9009\u62e9\u6240\u6709\u6bd4\u8d5b\u7684\u4e0d\u540c\u5217\u8868\u3002\u6211\u4eec\u6267\u884c SELECT DISTINCT... \u7684\u539f\u56e0\u662f\u56e0\u4e3a\u8ddf\u8e2a\u8868\u4e3a\u6bcf\u4e2a\u73a9\u5bb6\u3001\u6bcf\u4e2a\u6e38\u620f\u4fdd\u5b58\u4e86\u591a\u4e2a\u6761\u76ee\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u56db\u5206\u536b\uff0c\u6bcf\u6b21\u6bd4\u8d5b\u6211\u4eec\u53ea\u9700\u8981\u4e00\u884c\u3002\u6709\u4e86\u8fd9\u4e2a\u7ed3\u679c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u56db\u5206\u536b\u7684\u603b\u4e0a\u573a\u6b21\u6570 (total_qb_plays)\uff0c\u6bcf\u4e2a\u56db\u5206\u536b\u4e0a\u573a\u7684\u603b\u6bd4\u8d5b\u6b21\u6570 (qb_games)\uff0c\u6700\u540e\u662f\u56db\u5206\u536b\u7684\u4f20\u7403\u6b21\u6570\u662f\u5bfc\u81f4\u64d2\u6740\u7684\u4e00\u90e8\u5206\uff08\u9ebb\u888b\uff09\u3002\u6709\u4e86\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u67e5\u8be2\u6240\u6709\u503c\uff0c\u8fdb\u884c\u767e\u5206\u6bd4\u8ba1\u7b97\uff0c\u5e76\u6309\u603b\u888b\u6570\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002 WITH qb_plays AS ( SELECT DISTINCT ON (POSITION, playid, gameid) POSITION, playid, player_id, gameid FROM tracking t WHERE POSITION = &#39;QB&#39;),total_qb_plays AS (SELECT count(*) play_count, player_id FROM qb_plays GROUP BY player_id), qb_games AS ( SELECT count(DISTINCT gameid) game_count, player_id FROM qb_plays GROUP BY player_id),sacks AS ( SELECT count(*) sack_count, player_id FROM play p INNER JOIN qb_plays ON p.gameid = qb_plays.gameid AND p.plays = qb_play .playid WHERE p.passresult = &#39;S&#39; GROUP BY player_id)SELECT play_count, game_count, sack_count, (sack_count/play_count::float)*100 sack_percentage, display_name FROM total_qb_plays tqpINNER JOIN qb_games qgFT ON tqp_ids_erg. s ON s.player_id = qg.player_idINNER JOIN player ON tqp.player_id = player.player_idORDER BY sack_count DESC NULLS \u6700\u540e\uff1b\u5f53\u7136\uff0c\u6709\u4e00\u4e9b\u56db\u5206\u536b\u4f3c\u4e4e\u603b\u662f\u6709\u529e\u6cd5\u907f\u514d\u88ab\u89e3\u96c7\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5c55\u793a\u7684\u67e5\u8be2\u5f88\u6709\u8da3\uff0c\u6709\u52a9\u4e8e\u4e3a\u6574\u4e2a\u8d5b\u5b63\u7684\u4e0d\u540c\u7403\u5458\u63d0\u4f9b\u6d1e\u5bdf\u529b\u2014\u2014\u4f46\u5982\u679c\u4f60\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u5b83\u4eec\u90fd\u662f\u5e38\u89c4\u7684 SQL \u8bed\u53e5\u3002\u7136\u800c\uff0c\u68c0\u67e5\u4e00\u4e2a\u8d5b\u5b63\u7684 NFL \u8ddf\u8e2a\u6570\u636e\u4e0e\u5178\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u4e0d\u540c\u3002\u6211\u4eec\u60f3\u8981\u6267\u884c\u7684\u5927\u591a\u6570\u67e5\u8be2\u90fd\u9700\u8981\u4ee5\u67d0\u79cd\u65b9\u5f0f\u68c0\u67e5\u6240\u6709 2000 \u4e07\u884c\u3002\u8fd9\u662f\u4e3a\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u6784\u5efa\u7684\u5de5\u5177\uff0c\u5373\u4f7f\u6570\u636e\u4e0d\u662f\u5178\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u663e\u7740\u63d0\u9ad8\u60a8\u68c0\u67e5\u6570\u636e\u7684\u80fd\u529b\u5e76\u540c\u65f6\u8282\u7701\u8d44\u91d1\u3002\u6211\u4eec\u6ce8\u610f\u5230\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u6784\u5efa\u4ece\u8ddf\u8e2a\u8868\u5f00\u59cb\u7684\u67e5\u8be2\uff0c\u6309\u7279\u5b9a\u73a9\u5bb6\u3001\u4f4d\u7f6e\u548c\u6e38\u620f\u8fc7\u6ee4\u6570\u636e\u3002\u90e8\u5206\u539f\u56e0\u662f\u6e38\u620f\u8868\u6ca1\u6709\u5217\u51fa\u53c2\u4e0e\u7279\u5b9a\u6e38\u620f\u7684\u6240\u6709\u73a9\u5bb6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4ea4\u53c9\u5f15\u7528\u8ddf\u8e2a\u8868\u4ee5\u8bc6\u522b\u53c2\u4e0e\u4efb\u4f55\u7ed9\u5b9a\u6bd4\u8d5b\u7684\u7403\u5458\u3002\u6211\u4eec\u6f14\u793a\u7684\u7b2c\u4e00\u4e2a\u793a\u4f8b\u67e5\u8be2\u2014\u2014\u201c\u6bcf\u573a\u6bd4\u8d5b\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5e73\u5747\u7801\u6570\u201d\u2014\u2014\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u67e5\u8be2\u9996\u5148\u6309\u4f4d\u7f6e\u5bf9\u6bcf\u573a\u6bd4\u8d5b\u7684\u6240\u6709\u7801\u6570\u6c42\u548c\u3002\u8fd9\u610f\u5473\u7740\u5728\u8fdb\u884c\u4efb\u4f55\u5176\u4ed6\u5206\u6790\u4e4b\u524d\uff0c\u5fc5\u987b\u8bfb\u53d6\u5e76\u805a\u5408\u8ddf\u8e2a\u4e2d\u7684\u6bcf\u4e00\u884c\u3002\u626b\u63cf\u8fd9 2000 \u4e07\u884c\u662f\u975e\u5e38\u65e0\u804a\u3001\u91cd\u590d\u4e14\u7f13\u6162\u7684\u5de5\u4f5c\u2014\u2014\u5c24\u5176\u662f\u4e0e\u6211\u4eec\u60f3\u8981\u8fdb\u884c\u7684\u5206\u6790\u76f8\u6bd4\uff01\u5728\u6211\u4eec\u7684\u5c0f\u578b\u6d4b\u8bd5\u5b9e\u4f8b\u4e0a\uff0c\u201c\u5e73\u5747\u7801\u6570\u201d\u67e5\u8be2\u5927\u7ea6\u9700\u8981 8 \u79d2\u624d\u80fd\u8fd0\u884c\u3002\u6211\u4eec\u53ef\u4ee5\u589e\u52a0\u5b9e\u4f8b\u7684\u5927\u5c0f\uff08\u8fd9\u5c06\u82b1\u8d39\u6211\u4eec\u66f4\u591a\u7684\u94b1\uff09\uff0c\u6216\u8005\u6211\u4eec\u53ef\u4ee5\u66f4\u806a\u660e\u5730\u67e5\u8be2\u6570\u636e\uff08\u8fd9\u5c06\u82b1\u8d39\u6211\u4eec\u66f4\u591a\u7684\u65f6\u95f4\uff09\u3002\n\u76f8\u53cd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fde\u7eed\u805a\u5408\u6765\u9884\u5148\u805a\u5408\u6211\u4eec\u4e00\u904d\u53c8\u4e00\u904d\u67e5\u8be2\u7684\u6570\u636e\uff0c\u8fd9\u51cf\u5c11\u4e86 TimescaleDB \u6bcf\u6b21\u8fd0\u884c\u67e5\u8be2\u65f6\u9700\u8981\u505a\u7684\u5de5\u4f5c\u91cf\u3002 \uff08\u8fde\u7eed\u805a\u5408\u5c31\u50cf PostgreSQL \u7269\u5316\u89c6\u56fe\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u8fde\u7eed\u805a\u5408\u6587\u6863\u3002\uff09 CREATE MATERIALIZED VIEW player_yards_by_game_WITH (timescaledb.continuous) ASSELECT player_id, position, gameid, time_bucket(INTERVAL &#39;1 day&#39;, &quot;time&quot;) AS bucket, SUM(dis) AS yardsFROM \u8ddf\u8e2a tGROUP BY player_id, position, gameid, bucket;\u8fd0\u884c\u6b64\u67e5\u8be2\u5e76\u521b\u5efa\u8fde\u7eed\u805a\u5408\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7a0d\u5fae\u4fee\u6539\u7b2c\u4e00\u4e2a\u67e5\u8be2\uff0c\u5c06\u5176\u7528\u4f5c\u6211\u4eec\u7684\u57fa\u7840\u8868\u3002 WITH total_position_yards AS ( SELECT sum(yards) position_yards, POSITION, gameid FROM player_yards_by_game t GROUP BY POSITION, gameid)SELECT avg(position_yards), position, game_dateFROM game gINNER JOIN total_position_yards tpy ON g.game_id = tpy.gameid = tpy.gameidW &#39;,&#39;RB&#39;,&#39;WR&#39;,&#39;TE&#39;)GROUP BY game_date, POSITIONORDER BY game_date, position;\u6211\u4eec\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u73b0\u5728\u67e5\u8be2\u8fd0\u884c\u65f6\u95f4\u4e3a 100 \u6beb\u79d2 - \u5feb 800 \u500d\uff01\u6700\u540e\uff0c\u6211\u4eec\u5bf9\u6570\u636e\u6316\u6398\u5f97\u8d8a\u591a\uff0c\u5c31\u8d8a\u53d1\u73b0\u6211\u4eec\u9700\u8981\uff08\u6216\u60f3\u8981\uff09\u4e13\u95e8\u9488\u5bf9\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5206\u6790\u8c03\u6574\u7684\u51fd\u6570\u6765\u56de\u7b54\u6211\u4eec\u60f3\u95ee\u7684\u95ee\u9898\u7c7b\u578b\u3002\u6b63\u662f\u9488\u5bf9\u8fd9\u79cd\u5206\u6790\uff0c\u6211\u4eec\u6784\u5efa\u4e86 TimescaleDB \u8d85\u51fd\u6570\uff0cTimescaleDB \u4e2d\u7684\u4e00\u7cfb\u5217 SQL \u51fd\u6570\uff0c\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u4ee5\u66f4\u5c11\u7684\u4ee3\u7801\u884c\u64cd\u4f5c\u548c\u5206\u6790 PostgreSQL \u4e2d\u7684\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u3002\nNFL \u6570\u636e\u96c6\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u767e\u5206\u4f4d\u6570\u7528\u4f8b\u3002\u80fd\u591f\u5feb\u901f\u627e\u5230\u6bd4\u67d0\u4e2a\u961f\u5217\u8868\u73b0\u66f4\u597d\u6216\u66f4\u5dee\u7684\u7403\u5458\u771f\u7684\u5f88\u5f3a\u5927\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u521b\u5efa\u7684\u76f8\u540c\u8fde\u7eed\u805a\u5408\uff08\u603b\u7801\u6570\u3001\u6bcf\u573a\u6bd4\u8d5b\u3001\u6bcf\u540d\u7403\u5458\uff09\u6765\u67e5\u627e\u6bcf\u573a\u6bd4\u8d5b\u6309\u4f4d\u7f6e\u79fb\u52a8\u7684\u603b\u7801\u6570\u4e2d\u4f4d\u6570\u3002 WITH sum_yards AS (--\u5c06\u4f4d\u7f6e\u6dfb\u52a0\u5230\u8868\u4e2d\u4ee5\u5141\u8bb8\u7a0d\u540e\u5bf9\u5176\u8fdb\u884c\u5206\u7ec4 SELECT a.player_id, display_name, SUM(yards) AS yards, p.position, gameid FROM player_yards_by_game a LEFT JOIN player p ON a.player_id = p .player_id GROUP BY a.player_id, display_name, p.position, gameid)--\u6c42\u6bcf\u4e2a\u4f4d\u7f6e\u7c7b\u578b\u7684\u5747\u503c\u548c\u4e2d\u4f4d\u6570SELECT position, mean(percentile_agg(yards)) AS mean_yards, approx_percentile(0.5, percentile_agg(yards)) AS medium_yardsFROM sum_yardsWHERE POSITION IS NOT nullGROUP BY positionORDER BY mean_yards DESC;\u6700\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u767e\u5206\u4f4d\u67e5\u8be2\u7684\u57fa\u7840\u4e0a\u627e\u5230\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u8dd1\u52a8\u8d85\u8fc7\u8be5\u4f4d\u7f6e\u6240\u6709\u5176\u4ed6\u7403\u5458 95% \u7684\u7403\u5458\u3002\u5bf9\u4e8e\u67d0\u4e9b\u4f4d\u7f6e\uff0c\u4f8b\u5982\u5916\u63a5\u624b\u6216\u81ea\u7531\u5b89\u5168\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u627e\u5230\u80fd\u591f\u5728\u6574\u573a\u6bd4\u8d5b\u4e2d\u59cb\u7ec8\u5982\u4e00\u5730\u8dd1\u52a8\u573a\u5730\u7684\u201c\u5f02\u5e38\u201d\u7403\u5458\u2014\u2014\u5e76\u8fdb\u884c\u6bd4\u8d5b\uff01 WITH sum_yards AS (--\u5411\u8868\u4e2d\u6dfb\u52a0\u4f4d\u7f6e\u4ee5\u5141\u8bb8\u7a0d\u540e\u6309\u5b83\u5206\u7ec4 SELECT a.player_id, display_name, SUM(yards) AS yards, p.position FROM player_yards_by_game a LEFT JOIN player p ON a.player_id = p.player_id GROUP BY a.player_id, display_name, p.position),position_percentile AS ( SELECT POSITION, approx_percentile(0.95, percentile_agg(yar ......", "note_en": "Learn how to use time-series data provided by the NFL to uncover valuable insights into many player performance metrics \u2013 and ways to apply the same methods to improve your fantasy league team, your knowledge of the game, or your viewing experience - all with PostgreSQL, standard SQL, and freely available extensions.\n Time-series data is everywhere, including, much to our surprise, the world of professional sports. At Timescale, we&#39;re always looking for fun ways to showcase the expanding reach of time-series data.  Stock,  cryptocurrency,  IoT, and  infrastructure metrics data are relatively common and widely understood time-series data scenarios. Head to Twitter on any given day, search for  #timeseries or  #TimescaleDB, and you&#39;re sure to find questions about high-frequency trading or massive scale observability data with tools like Prometheus.\n You can imagine our excitement, then, when we happened upon the  NFL Big Data Bowl, an annual competition that encourages the data science community to use historical player position and play data to create machine learning models.\n Did the NFL   really give access to 18+ million rows of detailed play data from every regular season NFL game?\n   For background, the National Football League (NFL) is the US professional sports league for American football, and the NFL season is followed by tens of millions of people, culminating in the annual Super Bowl (which attracts 100M+ global viewers, whether for the game or for the commercials).\n Each NFL game takes place as a series of \u201cplays,\u201d in which the two teams try to score and prevent the other team from scoring. There are approximately 200 plays per game, with up to 15 games a week during the regular season. A healthy amount of data, but nothing unmanageable.\n So, at first glance, football game metrics might not immediately jump out as anything special.\n  All  NFL players are equipped with RFID chips that track players\u2019 position, speed, and various other metrics, which teams use to identify trends, mitigate risks, and continuously optimize. \u00a0The NFL started tracking and storing data for every player on the field, for every play, for every game.\n As a result, we now have access to a very detailed analysis of exactly how a play unfolded, how quickly various players accelerated during each play, and the play\u2019s outcome. A traditional view of play-by-play metrics is \u201cdown and distance\u201d and the result of the play (yards gained, whether or not there was a score, and so on). With the NFL\u2019s dataset, we&#39;re able to mine approximately 100 data points at 100-millisecond intervals throughout the play to see speed, distance, involved players, and much more.\n This isn\u2019t ordinary data.  This is time-series data. Time-series data is a sequence of data points collected over time intervals, giving us the ability to track changes over time. In the case of the NFL\u2019s dataset, we have time-series data that represents how a play changes, including the locations of the players on the field, the location of the ball, the relative acceleration of players in the field of play, and so much more.\n Time-series data comes at you fast, sometimes generating millions of data points per second ( read more about time-series data). Because of the sheer volume and rate of information, time-series data can already be complex to query and analyze, which is why we built  TimescaleDB, a multi-node, petabyte-scale, completely free relational database for time-series.\n We couldn&#39;t pass up the opportunity to look at the NFL dataset with TimescaleDB, exploring ways we could peer deeper into player performance in hopes of providing insights about overall player performance in the coming season.\n Read on for more information about the  NFL\u2019s dataset and how you can start using it, plus some sample queries to jumpstart your analysis. They may help you get more enjoyment out of the game.\n If you\u2019d like to get started with NFL data, you can spin up a fully managed TimescaleDB service: create an account to  try it for free for 30 days. The instructions later in this post will take you through how to ingest the data and start using it for analysis.\n If you\u2019re new to time-series data or just have some questions you\u2019d like to ask about the dataset,  join our public Slack community, where you\u2019ll find Timescale team members and thousands of time-series enthusiasts, and we\u2019ll be happy to help you.\n  Over the last few years, the NFL and Kaggle have collaborated on the  NFL Big Data Bowl. The goal is to use historical data to answer a predetermined genre of questions, typically producing a machine learning model that can help predict the outcome of certain plays during regular season games.\n Although the 2020/2021 contest is over, the sample dataset they provided from a prior season is still available for download and analysis. The 2020/2021 competition focused on pass play defense efficiency; therefore, only the tracking data for offensive and defensive &#34;playmakers&#34; is available in the dataset. No offensive or defensive linemen data is included. (You can read more about  last year\u2019s winners.)\n   For the purposes of this blog post and accompanying tutorial, we will use  the sample data provided by the NFL. This data is from the 2018 NFL season and is available as CSV files, including game-specific data and week-by-week tracking data for each player involved in the &#34;offensive&#34; part of the pass play. Contest participants in the next season of the contest will have access to new weekly game data.\n This data is also very relational in nature, which means that SQL is a great medium to start gleaning value \u2013 without the need for Jupyter notebooks, other data science specific languages (like Python or R), or additional toolsets.\n If you want to follow along - or recreate! - the queries we go through below,  follow our tutorial to set up the tables, ingest data, and start analyzing data in TimescaleDB. For those unfamiliar with TimescaleDB, it\u2019s built on PostgreSQL, so you\u2019ll find that all of our queries are standard SQL. If you know SQL, you\u2019ll know how to do everything here. (Some of the more advanced query examples we provide require our new, advanced hyperfunctions, which come pre-installed with any  Timescale Forge instance.)\n  We&#39;ve provided the steps needed to ingest the dataset into TimescaleDB in the  accompanying tutorial, so we won\u2019t go into that here.\n  Games: all relevant data about each game of the regular season, including date, teams, time, and location\n Players: information on each player, including what team they play for and their originating college\n Plays: a wealth of data about each pass play in the game. Helpful fields include the down, description of the play that happened, line of scrimmage, and total offensive yardage, among other details.\n Week [1-17]: for each week of the season, the NFL provides a new CSV file with the tracking data of every player, for every play (pass plays for this data). Interesting fields include X/Y position data (relative to the football field) every few hundred milliseconds throughout each play, player acceleration, and the &#34;type&#34; of a route that was taken. (In our tutorial, this data is imported into the  tracking table and totals almost 20 million rows of time-series data.)\n In addition to the NFL dataset, we also provide some extra data from Wikipedia that includes game scores and stadium conditions for each game, which you can load as part of the tutorial. With other time-series databases, it can be difficult to combine your time-series data with any other data you may have on hand (see  our TimescaleDB vs. InfluxDB comparison for reference).\n Because TimescaleDB is PostgreSQL with time-series super powers, it supports JOINS, so any extra relational data you want to add for deeper analysis is just a SQL query away. In our case, we\u2019re able to combine the NFL\u2019s play-by-play data along with weather data for each stadium.\n Once you have the data ready, the world of NFL playmakers is at your fingertips, so let\u2019s get started!\n  Year after year, we see SQL listed as one of the most popular languages among developers on the  StackOverflow survey. Sometimes, however, we can be lured into thinking that the only way to gain insights from relational data is to query it with powerful data analytics tools and languages, create data frames, and use specialized regression algorithms before we can do anything productive.\n SQL, it often feels, is only useful for getting and storing data in applications and that we need to leave the &#34;heavy lifting&#34; of analysis to more mature tools.\n Not so! SQL can data munge with the best of them! Let&#39;s look at a first, quick example.\n  For this first example, we&#39;ll query the  tracking table (the player movement data from all 17 weeks of games) and join to the  game table to determine the number of yards per player position, per game.\n The results give you a quick overview of how many yards different positions ran throughout each game. You could use this later to compare specific players to see how they compared, more or less yards, to that total.\n WITH total_position_yards AS (\tSELECT sum(dis) position_yards, POSITION, gameid FROM tracking t \tGROUP BY POSITION, gameid)SELECT avg(position_yards), position, game_dateFROM game gINNER JOIN total_position_yards tpy ON g.game_id = tpy.gameidWHERE POSITION IN (&#39;QB&#39;,&#39;RB&#39;,&#39;WR&#39;,&#39;TE&#39;)GROUP BY game_date, POSITION;\n  As a season progresses and players get injured (or traded), it&#39;s helpful to know which of the available players have more playing experience, rather than those that have been sitting on the sideline for most of the season. Players with more playing time are often able to contribute to the outcome of the game.\n This query finds all players that were on the offense for any play and counts how many total passing plays they have been a part of, ordered by total passing plays descending.\n WITH snap_events AS (-- Create a table that filters the play events to show only snap plays-- and display the players team information SELECT DISTINCT player_id, t.event, t.gameid, t.playid, CASE WHEN t.team = &#39;away&#39; THEN g.visitor_team WHEN t.team = &#39;home&#39; THEN g.home_team ELSE NULL END AS team_name FROM tracking t LEFT JOIN game g ON t.gameid = g.game_id WHERE t.event IN (&#39;snap_direct&#39;,&#39;ball_snap&#39;))-- Count these events &amp; filter results to only display data when the player was-- on the offensiveSELECT a.player_id, pl.display_name, COUNT(a.event) AS play_count, a.team_nameFROM snap_events aLEFT JOIN play p ON a.gameid = p.gameid AND a.playid = p.playidLEFT JOIN player pl ON a.player_id = pl.player_idWHERE a.team_name = p.possessionteamGROUP BY a.player_id, pl.display_name, a.team_nameORDER BY play_count DESC;\n  If you\u2019re familiar with American football, you might know that players are substituted in and out of the game based on game conditions. Stronger, larger players may play in some situations, while faster, more agile players may play in others.\n Quarterbacks, however, are the most \u201cimportant\u201d players on the field, and tend to play more than others. However, by omitting quarterbacks, we can get a deeper insight into players across all other positions.\n WITH snap_events AS (-- Create a table that filters the play events to show only snap plays-- and display the players team information SELECT DISTINCT player_id, t.event, t.gameid, t.playid, CASE WHEN t.team = &#39;away&#39; THEN g.visitor_team WHEN t.team = &#39;home&#39; THEN g.home_team ELSE NULL END AS team_name FROM tracking t LEFT JOIN game g ON t.gameid = g.game_id WHERE t.event IN (&#39;snap_direct&#39;,&#39;ball_snap&#39;))-- Count these events &amp; filter results to only display data when the player was-- on the offensiveSELECT a.player_id, pl.display_name, COUNT(a.event) AS play_count, a.team_name, pl.&#34;position&#34;FROM snap_events aLEFT JOIN play p ON a.gameid = p.gameid AND a.playid = p.playidLEFT JOIN player pl ON a.player_id = pl.player_idWHERE a.team_name = p.possessionteam AND pl.&#34;position&#34; != &#39;QB&#39;GROUP BY a.player_id, pl.display_name, a.team_name, pl.&#34;position&#34;ORDER BY play_count DESC;\n So, now we can see the non-quarterbacks who are on offense the most in a season:\n   We can start to go a little deeper by extracting specific data from the  tracking table and layering queries on top of it to make correlations. One piece of information that might be helpful in your analysis is knowing which quarterbacks are sacked most often during passing plays. In football, a \u201csack\u201d is a negative play for the offense, and quarterbacks who get sacked more often tend to be lower performers overall.\n Once you know those players, you could expand your analysis to see if they are sacked more on specific types of plays (shotgun formation) or maybe if sacks occur more often in a specific quarter of the game (maybe the fourth quarter because the offensive line is more tired, or the team tends to be behind late in games and must pass more often).\n Queries like this can quickly show you quarterbacks that are more likely to get sacked, particularly when they play a strong defensive team.  To get started, we wanted to find the sack percentage of each quarterback based on the total number of pass plays they were involved in during the regular season. To do that we approached the tracking data by layering on Common Table Expressions so that each query could build upon previous results.\n First, we select the distinct list of all plays, for each quarterback ( qb_plays). The reason we do a  SELECT DISTINCT\u2026 is because the tracking table holds multiple entries for each player, for each play. We just need one row for each play, for each quarterback.\n With this result, we can then count the number of total plays per quarterback ( total_qb_plays), the total number of games each quarterback played ( qb_games) and then finally the number of pass plays the quarterback was a part of that resulted in a sack ( sacks).\n With that data in hand, we can finally query all of the values, do a percentage calculation, and order it by the total sack count.\n WITH qb_plays AS (\tSELECT DISTINCT ON (POSITION, playid, gameid) POSITION, playid, player_id, gameid \tFROM tracking t \tWHERE POSITION = &#39;QB&#39;),total_qb_plays AS (\tSELECT count(*) play_count, player_id FROM qb_plays\tGROUP BY player_id),qb_games AS (\tSELECT count(DISTINCT gameid) game_count, player_id FROM qb_plays \tGROUP BY player_id),sacks AS (\tSELECT count(*) sack_count, player_id \tFROM play p\tINNER JOIN qb_plays ON p.gameid = qb_plays.gameid AND p.playid = qb_plays.playid\tWHERE p.passresult = &#39;S&#39;\tGROUP BY player_id)SELECT play_count, game_count, sack_count, (sack_count/play_count::float)*100 sack_percentage, display_name FROM total_qb_plays tqpINNER JOIN qb_games qg ON tqp.player_id = qg.player_idLEFT JOIN sacks s ON s.player_id = qg.player_idINNER JOIN player ON tqp.player_id = player.player_idORDER BY sack_count DESC NULLS last;\n   Of course, there are a few quarterbacks that always seem to have a way of avoiding a sack.\n    So far, the queries we&#39;ve shown are interesting and help provide insights to various players throughout the season \u2013 but if you were looking closely, they&#39;re all regular SQL statements.\n Examining a season of NFL tracking data isn&#39;t like typical time-series data, however. Most of the queries we want to perform need to examine all 20 million rows in some way.\n This is where a tool that&#39;s been built for time-series analysis, even when the data isn&#39;t typical time-series data, can significantly improve your ability to examine the data and save money at the same time.\n  We noticed that we often needed to build queries that started with the  tracking table, filtering data by specific players, positions, and games. Part of the reason is that the  play table doesn&#39;t list all of the players who were involved in a particular play. As a result, we need to cross-reference the  tracking table to identify the players who were involved in any given play.\n The first example query we demonstrated - \u201caverage yards per position, per game\u201d - is a good example of this. The query begins by summing all yards, by position, for each game.\n This means that every row in  tracking has to be read and aggregated  before we can do any other analysis. Scanning those 20 million rows is pretty boring, repetitive, and slow work \u2013 especially compared to the analysis we want to do!\n On our small test instance, the &#34;average yards&#34; query takes about 8 seconds to run. We could increase the size of the instance (which will cost us more money), or we could be smarter about how we query the data (which will cost us more time).\n Instead, we can use continuous aggregates to pre-aggregate the data we&#39;re querying over and over again, which reduces the amount of work TimescaleDB needs to do every time we run the query. (Continuous aggregates are like PostgreSQL materialized views. For more info, check out our  continuous aggregates docs.)\n CREATE MATERIALIZED VIEW player_yards_by_game_WITH (timescaledb.continuous) ASSELECT player_id, position, gameid, time_bucket(INTERVAL &#39;1 day&#39;, &#34;time&#34;) AS bucket, SUM(dis) AS yardsFROM tracking tGROUP BY player_id, position, gameid, bucket;\n After running this query and creating a continuous aggregate, we can modify that first query just slightly, using this as our basis table.\n WITH total_position_yards AS (\tSELECT sum(yards) position_yards, POSITION, gameid FROM player_yards_by_game t \tGROUP BY POSITION, gameid)SELECT avg(position_yards), position, game_dateFROM game gINNER JOIN total_position_yards tpy ON g.game_id = tpy.gameidWHERE POSITION IN (&#39;QB&#39;,&#39;RB&#39;,&#39;WR&#39;,&#39;TE&#39;)GROUP BY game_date, POSITIONORDER BY game_date, position;\n We get the same result, but now the query runs in 100ms -  800x faster!\n  Finally, the more we dug into the data, the more and more we found we needed (or wanted) functions specifically tuned for time-series data analysis to answer the types of questions we wanted to ask.\n It is for this kind of analysis that we built  TimescaleDB hyperfunctions, a series of SQL functions within TimescaleDB that make it easier to manipulate and analyze time-series data in PostgreSQL with fewer lines of code.\n  The NFL dataset is a great use case for  percentiles. Being able to quickly find players that perform better or worse than some cohort is really powerful.\n As an example, we&#39;ll use the same continuous aggregate we created earlier (total yards, per game, per player) to find the median total yards traveled by position for each game.\n WITH sum_yards AS (--Add position to the table to allow for grouping by it later SELECT a.player_id, display_name, SUM(yards) AS yards, p.position, gameid FROM player_yards_by_game a LEFT JOIN player p ON a.player_id = p.player_id GROUP BY a.player_id, display_name, p.position, gameid)--Find the mean and median for each position typeSELECT position, mean(percentile_agg(yards)) AS mean_yards, approx_percentile(0.5, percentile_agg(yards)) AS median_yardsFROM sum_yardsWHERE POSITION IS NOT nullGROUP BY positionORDER BY mean_yards DESC;\n   Finally, we can build upon this percentile query to find players at each position that run more than 95% of all other players at that position. For some positions, like wide receiver or free safety, this could help us find the \u201coutlier\u201d players that are able to travel the field consistently throughout a game \u2013 and make plays!\n WITH sum_yards AS (--Add position to the table to allow for grouping by it later SELECT a.player_id, display_name, SUM(yards) AS yards, p.position FROM player_yards_by_game a LEFT JOIN player p ON a.player_id = p.player_id GROUP BY a.player_id, display_name, p.position),position_percentile AS (\tSELECT POSITION, approx_percentile(0.95, percentile_agg(yar\n......", "posttime": "2021-07-28 04:49:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7834\u89e3,\u5e7b\u60f3,nfl,\u6570\u636e", "title": "\u4f7f\u7528 Postgres \u7834\u89e3 NFL \u6570\u636e\uff08\u4e5f\u8bb8\u4f1a\u8d62\u5f97\u4f60\u7684\u5e7b\u60f3\u9009\u79c0\uff09", "title_en": "Hack NFL data using Postgres (and maybe win your fantasy draft)", "transed": 1, "url": "https://blog.timescale.com/blog/hacking-nfl-data-with-postgresql-timescaledb-and-sql/", "via": "", "real_tags": ["\u7834\u89e3", "\u5e7b\u60f3", "nfl", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "6a083f754db3a5ea2c63ccf55839db94.png", "infoid": 1070170, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f\u7279\u533a\u2014\u2014\u7535\u5b50\u524d\u6cbf\u57fa\u91d1\u4f1a (EFF) \u5bf9\u7f8e\u56fd\u90ae\u653f\u5c40\u53ca\u5176\u68c0\u67e5\u673a\u6784\u63d0\u8d77\u4e86\u300a\u4fe1\u606f\u81ea\u7531\u6cd5\u300b(FOIA) \u8bc9\u8bbc\uff0c\u4ee5\u5bfb\u6c42\u6709\u5173\u5728\u8857\u5934\u6297\u8bae\u4e4b\u524d\u79d8\u5bc6\u68b3\u7406\u793e\u4ea4\u5a92\u4f53\u7528\u6237\u5728\u7ebf\u5e16\u5b50\u7684\u79d8\u5bc6\u8ba1\u5212\u7684\u8bb0\u5f55\uff0c\u5f15\u53d1\u62c5\u5fc3\u4f1a\u5f71\u54cd\u4e92\u8054\u7f51\u7528\u6237\u7684\u9690\u79c1\u548c\u8868\u8fbe\u6d3b\u52a8\u3002\u636e\u5a92\u4f53\u62a5\u9053\uff0c\u5728\u4e00\u9879\u540d\u4e3a Internet Covert Operations Program \u7684\u8ba1\u5212\u4e2d\uff0c\u7f8e\u56fd\u90ae\u653f\u68c0\u67e5\u5c40 (USPIS) \u7684\u5206\u6790\u5e08\uff0c\u7f8e\u56fd\u90ae\u653f\u5c40\u7684\u6267\u6cd5\u90e8\u95e8\uff0c\u5bf9\u793e\u4ea4\u5a92\u4f53\u7528\u6237\u521b\u5efa\u7684\u5927\u91cf\u6570\u636e\u8fdb\u884c\u4e86\u5206\u7c7b\uff0c\u4ee5\u76d1\u89c6\u4ed6\u4eec\u7684\u8a00\u8bba\u548c\u5206\u4eab\u62a5\u544a\u3002\u4e92\u8054\u7f51\u7528\u6237\u5728 Facebook\u3001Twitter\u3001Parler \u548c Telegraph \u4e0a\u7684\u5e16\u5b50\u5f88\u53ef\u80fd\u88ab\u76d1\u63a7\u7a0b\u5e8f\u6e05\u9664\u3002 USPIS \u5c1a\u672a\u62ab\u9732\u6709\u5173\u8be5\u8ba1\u5212\u7684\u8be6\u7ec6\u4fe1\u606f\u6216\u4efb\u4f55\u8bb0\u5f55\uff0c\u4ee5\u56de\u5e94 EFF \u7684 FOIA \u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u8981\u6c42\u63d0\u4f9b\u6709\u5173\u76d1\u89c6\u8ba1\u5212\u7684\u521b\u5efa\u548c\u8fd0\u4f5c\u7684\u4fe1\u606f\u3002\u9664\u4e86\u8fd9\u4e9b\u8bb0\u5f55\u5916\uff0cEFF \u8fd8\u5728\u5bfb\u6c42\u6709\u5173\u8be5\u8ba1\u5212\u7684\u653f\u7b56\u548c\u5bf9\u6240\u6536\u96c6\u4fe1\u606f\u7684\u5206\u6790\u7684\u8bb0\u5f55\uff0c\u4ee5\u53ca\u4e0e\u5305\u62ec\u56fd\u571f\u5b89\u5168\u90e8 (DHS) \u5728\u5185\u7684\u5176\u4ed6\u8054\u90a6\u673a\u6784\u5c31\u8be5\u8ba1\u5212\u6536\u96c6\u7684\u793e\u4ea4\u5a92\u4f53\u5185\u5bb9\u7684\u4f7f\u7528\u8fdb\u884c\u4ea4\u6d41\u7684\u8bb0\u5f55. \u201c\u6211\u4eec\u6b63\u5728\u63d0\u8d77 FOIA \u8bc9\u8bbc\uff0c\u4ee5\u9610\u660e\u90ae\u653f\u670d\u52a1\u4e3a\u4f55\u4ee5\u53ca\u5982\u4f55\u76d1\u63a7\u5728\u7ebf\u8a00\u8bba\u3002\u8fd9\u8d77\u8bc9\u8bbc\u65e8\u5728\u4fdd\u62a4\u6297\u8bae\u6743\uff0c\u201dEFF \u516c\u5171\u5229\u76ca\u6cd5\u5f8b\u7814\u7a76\u5458\u4f11\u65af\u987f\u6234\u7ef4\u68ee\u8bf4\u3002 \u201c\u653f\u5e9c\u4ece\u672a\u89e3\u91ca\u8fc7\u8fd9\u79cd\u76d1\u89c6\u7684\u6cd5\u5f8b\u4f9d\u636e\u3002\u6211\u4eec\u6b63\u5728\u8bf7\u6c42\u6cd5\u9662\u547d\u4ee4 USPIS \u62ab\u9732\u6709\u5173\u6b64\u8a00\u8bba\u76d1\u63a7\u8ba1\u5212\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8fd9\u5a01\u80c1\u5230\u5baa\u6cd5\u5bf9\u8a00\u8bba\u81ea\u7531\u548c\u9690\u79c1\u7684\u4fdd\u969c\u3002\u201d\u5a92\u4f53\u62a5\u9053\u663e\u793a\uff0c\u4e00\u4efd\u65e5\u671f\u4e3a 3 \u6708 16 \u65e5\u7684\u653f\u5e9c\u516c\u544a\u5df2\u5206\u53d1\u5230\u56fd\u571f\u5b89\u5168\u90e8\u7684\u56fd\u8425\u5b89\u5168\u5a01\u80c1\u4e2d\u5fc3\uff0c\u63d0\u9192\u6267\u6cd5\u673a\u6784\uff0cUSPIS \u5206\u6790\u4eba\u5458\u76d1\u89c6\u4e86\u201c\u6709\u5173\u8ba1\u5212\u4e8e 2021 \u5e74 3 \u6708 20 \u65e5\u5728\u56fd\u9645\u548c\u56fd\u5185\u53d1\u751f\u7684\u6297\u8bae\u6d3b\u52a8\u7684\u91cd\u5927\u6d3b\u52a8\u201d\u3002\u516c\u544a\u79f0\uff0c\u5f53\u5929\u8ba1\u5212\u5728\u5168\u56fd\u5404\u5730\u4e3e\u884c\u6297\u8bae\u6d3b\u52a8\uff0c\u5e76\u5728 Parler\u3001Telegram\u3001Twitter \u548c Facebook \u4e0a\u5206\u4eab\u5730\u70b9\u548c\u65f6\u95f4\u3002 \u201c\u76d1\u89c6\u548c\u6536\u96c6\u4eba\u4eec\u7684\u793e\u4ea4\u5a92\u4f53\u6d3b\u52a8\u4ee4\u4eba\u4e0d\u5bd2\u800c\u6817\uff0c\u5e76\u538b\u5236\u4e86\u8a00\u8bba\u81ea\u7531\uff0c\u201dEFF \u9ad8\u7ea7\u804c\u5458\u5f8b\u5e08\u4e9a\u4f26\u00b7\u9ea6\u57fa (Aaron Mackey) \u8bf4\u3002 \u201c\u5f53\u4eba\u4eec\u8ba4\u4e3a\u81ea\u5df1\u7684\u8a00\u8bba\u53d7\u5230\u76d1\u63a7\u5e76\u53ef\u80fd\u88ab\u7528\u6765\u9488\u5bf9\u4ed6\u4eec\u65f6\uff0c\u5c31\u4f1a\u8fdb\u884c\u81ea\u6211\u5ba1\u67e5\u3002\u653f\u5e9c\u641c\u7d22\u4eba\u4eec\u793e\u4ea4\u5a92\u4f53\u8d26\u6237\u7684\u52aa\u529b\u662f\u5bf9\u6211\u4eec\u516c\u6c11\u81ea\u7531\u7684\u5a01\u80c1\u3002\u201d", "note_en": "Washington D.C.\u2014The Electronic Frontier Foundation (EFF) filed a Freedom of Information Act (FOIA)  lawsuit against the U.S. Postal Service and its inspection agency seeking records about a covert program to secretly comb through online posts of social media users before street protests, raising concerns about chilling the privacy and expressive activity of internet users.  Under an initiative called Internet Covert Operations Program, analysts at the U.S. Postal Inspection Service (USPIS), the Postal Service\u2019s law enforcement arm, sorted through massive amounts of data created by social media users to surveil what they were saying and sharing, according to  media  reports. Internet users\u2019 posts on Facebook, Twitter, Parler, and Telegraph were likely swept up in the surveillance program.  USPIS has not disclosed details about the program or any records responding to EFF\u2019s FOIA request asking for information about the creation and operation of the surveillance initiative. In addition to those records, EFF is also seeking records on the program\u2019s policies and analysis of the information collected, and communications with other federal agencies, including the Department of Homeland Security (DHS), about the use of social media content gathered under the program.  \u201cWe\u2019re filing this FOIA lawsuit to shine a light on why and how the Postal Service is monitoring online speech. This lawsuit aims to protect the right to protest,\u201d said Houston Davidson, EFF  public interest legal fellow. \u201cThe government has never explained the legal justifications for this surveillance. We\u2019re asking a court to order the USPIS to disclose details about this speech-monitoring program, which threatens constitutional guarantees of free expression and privacy.\u201d  Media reports revealed that a  government bulletin dated March 16 was distributed across DHS\u2019s state-run security threat centers, alerting law enforcement agencies that USPIS analysts monitored \u201csignificant activity regarding planned protests occurring internationally and domestically on March 20, 2021.\u201d Protests around the country were planned for that day, and locations and times were being shared on Parler, Telegram, Twitter, and Facebook, the bulletin said.  \u201cMonitoring and gathering people\u2019s social media activity chills and suppresses free expression,\u201d said Aaron Mackey, EFF senior staff attorney. \u201cPeople self-censor when they think their speech is being monitored and could be used to target them. A government effort to scour people\u2019s social media accounts is a threat to our civil liberties.\u201d", "posttime": "2021-07-28 04:48:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u8ba1\u5212,sues", "title": "EFF \u8d77\u8bc9\u7f8e\u56fd\u90ae\u653f\u670d\u52a1\u4ee5\u83b7\u53d6\u6709\u5173\u9690\u853d\u793e\u4ea4\u5a92\u4f53\u95f4\u8c0d\u8ba1\u5212\u7684\u8bb0\u5f55", "title_en": "EFF Sues US Postal Service for Records About Covert Social Media Spying Program", "transed": 1, "url": "https://www.eff.org/press/releases/eff-sues-us-postal-service-records-about-covert-social-media-spying-program", "via": "", "real_tags": ["\u7f8e\u56fd", "\u8ba1\u5212", "sues"]}, {"category": "", "categoryclass": "", "imagename": "2955f0593d41a97fc7aed4c41301c8fb.jpeg", "infoid": 1070169, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fae\u8f6f\u516c\u5e03\u4e86 6 \u6708\u5b63\u5ea6\u7684\u6570\u636e\uff0c\u597d\u4e8e\u9884\u671f\u3002\u6536\u5165\u589e\u957f 21% \u81f3 461.5 \u4ebf\u7f8e\u5143\uff0c\u662f\u6709\u53f2\u4ee5\u6765\u6700\u9ad8\u7684\u5b63\u5ea6\u6536\u5165\u3002\u8be5\u516c\u53f8\u7b2c\u56db\u8d22\u5b63\u6bcf\u80a1\u6536\u76ca\u4e3a 2.17 \u7f8e\u5143\u3002\u5206\u6790\u5e08\u5e73\u5747\u9884\u671f\u6536\u76ca\u4e3a\u6bcf\u4eba 1.92 \u7f8e\u5143", "note_en": "The June-quarter numbers are in for Microsoft, and they are better than expected.Revenue jumped 21% to $46.15 billion, its highest quarterly revenue total ever.The company reported per-share earnings of $2.17 in its fiscal fourth quarter. Analysts, on average, were expecting earnings of $1.92 a", "posttime": "2021-07-28 04:47:58", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "microsoft,\u5fae\u8f6f,\u521b\u7eaa\u5f55,reports,\u5b63\u5ea6", "title": "\u5fae\u8f6f\u62a5\u544a\u521b\u7eaa\u5f55\u7684\u6536\u5165\uff0c\u8d85\u51fa\u9884\u671f", "title_en": "Microsoft Reports Record Revenue, Topping Expectations", "transed": 1, "url": "https://www.wsj.com/livecoverage/earnings-apple-google-microsoft/card/ny1IVKHWgjNMQAQze0Rr", "via": "", "real_tags": ["microsoft", "\u5fae\u8f6f", "\u521b\u7eaa\u5f55", "reports", "\u5b63\u5ea6"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1070167, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u8ba1\u5212\u5c55\u793a polyBLEPS \u7684\u6548\u679c\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7b80\u77ed\u7684\u793a\u4f8b\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u4f7f\u7528\u6b64\u65b9\u6cd5\u751f\u6210\u5e26\u9650\u6ce2\u5f62\uff0c\u4ee5\u671f\u51cf\u5c11\u6df7\u53e0\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u53ef\u7528\u65b9\u6cd5\u7684\u7b80\u77ed\u6982\u8ff0\u3002\u8fd9\u7bc7\u6587\u7ae0\u662f\u5728 Jupyter Notebook \u4e2d\u7f16\u5199\u7684\u3002Notebook \u53ef\u4f5c\u4e3a .html \u6216 .ipnyb \u4f7f\u7528\u3002\u5728\u51cf\u6cd5\u5408\u6210\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u4ece\u5177\u6709\u5927\u91cf\u201c\u8c10\u6ce2\u542b\u91cf\u201d\u7684\u6ce2\u5f62\u5f00\u59cb\uff0c\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6ee4\u6ce2\u5668\u548c\u6548\u679c\u201c\u96d5\u523b\u6389\u201d\u8fd9\u4e9b\u6ce2\u5f62\u3002\u8fd9\u901a\u5e38\u610f\u5473\u7740\u952f\u9f7f\u6ce2\u6216\u65b9\u6ce2\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6b63\u5f26\u6ce2\u7684\u201c\u8c10\u6ce2\u542b\u91cf\u201d\u5f88\u5c11\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u7684\u53ef\u80fd\u6027\u6700\u5c0f\uff0c\u800c\u4e14\u975e\u5e38\u57fa\u672c\uff0c\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u4efb\u4f55\u5176\u4ed6\u4fe1\u53f7\u7684\u6784\u5efa\u5757\u3002\u5176\u4e2d\\(x\\)\uff0c\u5728\u97f3\u9891\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u662f\u6211\u4eec\u7684\u65f6\u95f4\u53c2\u6570\uff0c\\(L\\) \u662f\u65b9\u6ce2\u5468\u671f\uff0c\u6ce8\u610f\\(n\\) \u88ab\u5b9a\u4e49\u4e3a\u4ec5\u662f\u5947\u6570\u6574\u6570\uff08\u63a8\u5bfc\uff09\u3002 #Setup import numpy as np import scipy import scipy.signal import matplotlib.pyplot as plt import ipywidgets as widgets L = 1 / 10 ; # 1 \u5468\u671f 0.1s =&gt; 10Hz Fs = 1000 # \u91c7\u6837\uff08\u7a0d\u540e\u89e3\u91ca\uff09 t = np . linspace ( 0 , 1 , Fs ) # 1sec with 10000 samples signal = scipy .\u4fe1\u53f7 \u3002 square ( t * ( 2 * np . pi / L )) # 10Hz \u65b9\u6ce2 ps = np . abs ( np . fft . fft ( \u4fe1\u53f7 )) ** 2 # \u529f\u7387\u8c31\u9891\u7387 = np . fft \u3002 fftfreq (signal .size, d = 1 / Fs) # \u7ed8\u56fe\u9891\u7387 #Plot idx = np . argsort ( freqs ) fig , ax = plt .\u5b50\u56fe () ax \u3002\u8f74\u3002 set_ticks ( np . arange ( 1 / L , 100 , 1 / L )) ax . set_xlim ( 0 , 100 ) ax \u3002 set_title ( &quot;%d Hz \u65b9\u6ce2\u7684\u9891\u8c31&quot; % ( 1 / L )) ax \u3002 set_xlabel (&quot;Hz&quot;) ax \u3002 plot ( freqs [ idx ], np . sqrt ( ps [ idx ]), &quot;.-&quot; ) \u4e0a\u56fe\u663e\u793a\u4e86 10Hz \u65b9\u6ce2\u7684\u9891\u8c31\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6784\u6210\u65b9\u6ce2\u7684\u5404\u4e2a\u6b63\u5f26\u6ce2\u3002\u6700\u5f3a\u7684\u5cf0\u503c\u662f\u9891\u7387\u4e3a 10Hz\uff08\u901a\u5e38\u79f0\u4e3a\u57fa\u6ce2\uff09\u7684\u6b63\u5f26\u6ce2\u3002\u4e0b\u4e00\u4e2a\u5cf0\u503c\u53ef\u4ee5\u5728 30Hz \u5904\u770b\u5230\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5728 30Hz \u5904\u6709\u4e00\u4e2a\u6b63\u5f26\u6ce2\uff0c\u4f46\u5e45\u5ea6\u8f83\u4f4e\u3002\u4e0b\u4e00\u4e2a\u5cf0\u503c\u4e3a 50Hz\uff0c\u4e0b\u4e00\u4e2a\u5cf0\u503c\u4e3a 70Hz\uff0c\u7b49\u7b49\u3002\u8bf7\u6ce8\u610f\uff0c\u5cf0\u503c\u5728 \\(\\frac{1}{L}\\) (20Hz, 40Hz, ...) \u7684\u5076\u6570\u500d\u5904\u4e22\u5931\uff0c\u5e76\u4e14\u6709\u5728 \\(\\frac{1}{L}\\) (10Hz, 30Hz, ...) \u7684\u4e0d\u5747\u5300\u500d\u6570\u5904\u8fbe\u5230\u5cf0\u503c\uff0c\u6b63\u5982 \\eqref{fourierSeriesSquare} \u4e2d\u6240\u63cf\u8ff0\u7684\u90a3\u6837\u3002\n\u7406\u8bba\u4e0a\uff0c\u8fd9\u4e9b\u5cf0\u503c\u4e00\u76f4\u51fa\u73b0\u5230\u65e0\u9650\u9ad8\u7684\u9891\u7387\uff01\u4f46\u662f\uff0c\u5728\u6570\u5b57\u4e16\u754c\u4e2d\u5904\u7406\u4fe1\u53f7\u65f6\uff0c\u5fc5\u987b\u4ee5\u7279\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u5bf9\u4fe1\u53f7\u8fdb\u884c\u91c7\u6837\uff0c\u56e0\u6b64\u5728\u51fa\u73b0\u6df7\u53e0\u4e4b\u524d\uff0c\u4fe1\u53f7\u9891\u7387\u662f\u6709\u9650\u5236\u7684\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u6355\u83b7\u7684\u4fe1\u53f7\u7684\u9891\u7387\u9ad8\u4e8e\u91c7\u6837\u9891\u7387\u7684\u4e00\u534a\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6df7\u53e0\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u518d\u5b8c\u7f8e\u5730\u8868\u793a\u4fe1\u53f7\u3002\u5b83\u88ab\u626d\u66f2\u4e86\u3002\u5948\u594e\u65af\u7279\u5b9a\u7406\u8bf4\uff0c\u8981\u901a\u8fc7\u91c7\u6837\u5b8c\u7f8e\u5730\u6355\u83b7\u4fe1\u53f7\uff0c\u91c7\u6837\u9891\u7387\u5fc5\u987b\u81f3\u5c11\u662f\u4fe1\u53f7\u4e2d\u6700\u9ad8\u9891\u7387\u7684\u4e24\u500d\u3002\u4e3a\u4e86\u8bf4\u660e\u6df7\u53e0\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4ee5 40Hz \u91c7\u6837\u7684\u6b63\u5f26\u6ce2\u3002\u9891\u7387\u4e3a 15Hz \u7684\u6b63\u5f26\u6ce2\u5c06\u5728\u9891\u8c31\u4e2d\u7684 15Hz \u5904\u5177\u6709\u5cf0\u503c\u3002\u4f46\u662f 25Hz \u7684\u6b63\u5f26\u6ce2\u9ad8\u4e8e\u91c7\u6837\u9891\u7387\u4e00\u534a\u7684\u9608\u503c\uff0c\u5e76\u4e14\u4f1a\u51fa\u73b0\u6df7\u53e0\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u610f\u5473\u7740\u4fe1\u53f7\u7684\u9891\u7387\u201c\u6298\u53e0\u201d\u5e76\u4f3c\u4e4e\u5728\u9891\u7387\u4e0a\u4e0b\u964d\uff0c\u843d\u5728 15Hz \u5de6\u53f3\u800c\u4e0d\u662f 25Hz\uff0c\u4ece\u800c\u9519\u8bef\u5730\u8868\u793a\u4fe1\u53f7\u3002 def fft_spectrum ( t , signal , Fs ): &quot;&quot;&quot;\u51fd\u6570\u5e2e\u52a9\u7ed8\u5236\u9891\u7387\u54cd\u5e94&quot;&quot;&quot; ps = np . abs ( np . fft . fft ( \u4fe1\u53f7 )) ** 2 # \u529f\u7387\u8c31\u9891\u7387 = np . fft \u3002 fftfreq (signal .size, d = 1 / Fs) # \u7ed8\u56fe\u7684\u9891\u7387 idx = np . argsort ( freqs ) return ( freqs [ idx ], ps [ idx ]) def sin_fft ( freq , Fs ): L = 1 / freq ; # 1 \u5468\u671f 0.1s =&gt; 10Hz Fs = Fs # \u91c7\u6837\u6570 t = np \u3002 linspace ( 0 , 1 , Fs ) # 1sec with Fs samples signal = np \u3002 sin ( t * ( 2 * np . pi / L )) # 1/L Hz \u6b63\u5f26\u6ce2\u8fd4\u56de fft_spectrum ( t , signal , Fs ) #Plot\uff01\u8840\u5c0f\u677f\u5b50\u56fe fig \uff0c ax = plt \u3002\u5b50\u56fe ( 2 , sharex = True ) ax [ 0 ] \u3002\u8f74\u3002 set_ticks ( np . arange ( 10 , 100 , 5 )) ax [ 0 ] \u3002 set_xlim (0, 20) ax [1]\u3002 set_xlabel (&quot;Hz&quot;) #15 Hz freqs , ps = sin_fft ( 15 , 40 ) ax [ 0 ] \u3002 plot ( freqs , np . sqrt ( ps )) ax [ 0 ] \u3002 set_title (\u201c%d Hz \u65b9\u6ce2\u7684\u9891\u8c31\u201d% (15)) #25 Hz freqs , ps = sin_fft ( 25 , 40 ) ax [ 1 ] \u3002\u7ed8\u56fe (freqs, np.sqrt (ps)) ax [1]\u3002 set_title ( &quot;%d Hz \u65b9\u6ce2\u7684\u9891\u7387\u9891\u8c31&quot; % ( 25 )) \u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\uff0c\u8bd5\u56fe\u8868\u793a\u4e00\u4e2a\u5728\u65e0\u9650\u9ad8\u9891\u7387\u5904\u5177\u6709\u5cf0\u503c\u7684\u65b9\u6ce2\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u4e2a\u6311\u6218\u3002\u4f46\u662f\u4e3a\u4ec0\u4e48\u539f\u59cb\u65b9\u6ce2\u793a\u4f8b\u4e2d\u6ca1\u6709\u6df7\u53e0\uff1f\u5728\u90a3\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e0e\u65b9\u6ce2\u7684\u5468\u671f\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u91c7\u6837\u7387\u8bbe\u7f6e\u5f97\u76f8\u5f53\u9ad8\u3002\u8f83\u9ad8\u9891\u7387\u7684\u5cf0\u503c\u975e\u5e38\u5c0f\uff0c\u4ee5\u81f3\u4e8e\u6df7\u53e0\u7684\u5f71\u54cd\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u4f46\u662f\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5141\u8bb8\u5177\u6709\u66f4\u77ed\u5468\u671f\u7684\u65b9\u6ce2\uff08\u5bfc\u81f4\u66f4\u9ad8\u7684\u57fa\u9891\uff09\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\uff0c\u5e76\u5c06\u7531\u4e8e\u6df7\u53e0\u800c\u4ea7\u751f\u7684\u6570\u5b57\u4fe1\u53f7\u5f15\u5165\u4e0d\u9700\u8981\u7684\u5185\u5bb9\u548c\u566a\u58f0\u3002\n\u51fa\u4e8e\u97f3\u9891\u76ee\u7684\uff0c\u901a\u5e38\u4f7f\u7528 44.1kHz \u7684\u91c7\u6837\u7387\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u8868\u793a\u9891\u7387\u9ad8\u8fbe 20kHz \u7684\u97f3\u9891\uff0c\u8fd9\u8d85\u8fc7\u4e86\u4eba\u8033\u6240\u80fd\u63a5\u6536\u7684\u9891\u7387\u3002\u4f46\u662f\u5b58\u5728\u6df7\u53e0\u7684\u98ce\u9669\uff0c\u9ad8\u4e8e 20k kHz \u7684\u9891\u7387\u4f1a\u201c\u6298\u56de\u201d\u5e76\u5728\u53ef\u542c\u8303\u56f4\u5185\u5f15\u5165\u65b0\u7684\u4e0d\u9700\u8981\u7684\u9891\u7387\u3002\u5982\u4f55\u907f\u514d\u6df7\u53e0\uff1f \u4fe1\u53f7\u9700\u8981\u8fdb\u884c\u5e26\u5bbd\u9650\u5236\u3002\u8fd9\u610f\u5473\u7740\u8981\u8868\u793a\u7684\u4fe1\u53f7\u4e0d\u9700\u8981\u5177\u6709\u9ad8\u4e8e\u91c7\u6837\u7387\u4e00\u534a\u7684\u9891\u7387\u6210\u5206\uff08\u6216\u81f3\u5c11\u8fd9\u79cd\u6210\u5206\u5177\u6709\u4f4e\u5e45\u5ea6\uff09\u3002\u901a\u8fc7\u9ea6\u514b\u98ce\u5f55\u5236\u771f\u5b9e\u4e16\u754c\u7684\u97f3\u9891\u65f6\uff0c\u51e0\u4e4e\u80af\u5b9a\u4f1a\u9047\u5230\u9ad8\u4e8e\u91c7\u6837\u7387\u7684\u9891\u7387\u3002\u4e3a\u4e86\u907f\u514d\u6df7\u53e0\uff0c\u4f7f\u7528\u4f4e\u901a\u6ee4\u6ce2\u5668\u6765\u786e\u4fdd\u8f83\u9ad8\u7684\u9891\u7387\u8db3\u591f\u4f4e\uff0c\u4ece\u800c\u9650\u5236\u4fe1\u53f7\u9891\u5e26\uff0c\u4ece\u800c\u907f\u514d\u6df7\u53e0\u3002\u5f53\u4ee5\u6570\u5b57\u65b9\u5f0f\u751f\u6210\u6ce2\u5f62\u65f6\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u4e5f\u662f\u5982\u6b64\u3002\u9650\u5236\u65e0\u6cd5\u91c7\u6837\u7684\u8f83\u9ad8\u9891\u7387\u3002\u6709\u591a\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u9632\u6b62\u6ce2\u5f62\u6df7\u53e0\u3002\u5e38\u7528\u65b9\u6cd5\u5305\u62ec \u8fd9 3 \u79cd\u6280\u672f\u88ab\u79f0\u4e3a\u51c6\u5e26\u9650\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u80fd\u5b8c\u7f8e\u5730\u6d88\u9664\u6df7\u53e0\u3002\u7136\u800c\uff0c\u5b83\u4eec\u4ecd\u7136\u6709\u52a9\u4e8e\u663e\u7740\u51cf\u5c11\u6df7\u53e0\u6548\u5e94\u3002\u4e0b\u9762\u662f\u5bf9\u8fc7\u91c7\u6837\u3001\u52a0\u6cd5\u5408\u6210\u6280\u672f\u548c BLEP \u6280\u672f\u7684\u5feb\u901f\u6982\u8ff0\u3002 BLEP \u6280\u672f\u662f\u6211\u7684\u9879\u76ee\u6700\u611f\u5174\u8da3\u7684\u6280\u672f\u4e4b\u4e00\uff0c\u4f3c\u4e4e\u6700\u9002\u5408\u6211\u7684\u9700\u6c42\u3002\u6211\u6ca1\u6709\u673a\u4f1a\u6df1\u5165\u7814\u7a76\u5176\u4ed6\u6280\u672f\u3002\u4ee5\u4e0b\u662f\u6709\u5173\u5176\u4ed6 BLITS \u548c BLAMPS \u7684\u66f4\u591a\u4fe1\u606f\u7684\u4e00\u4e9b\u63d0\u793a\uff1a\n\u5728\u8fd9\u91cc\uff0c\u4fe1\u53f7\u53ea\u662f\u4ee5\u8db3\u591f\u9ad8\u7684\u9891\u7387\u91c7\u6837\uff0c\u4e0d\u4f1a\u51fa\u73b0\u6df7\u53e0\u6216\u6df7\u53e0\u7684\u5f71\u54cd\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u97f3\u9891\u901a\u5e38\u4ee5 44.1kHz \u91c7\u6837\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u6355\u83b7\u5177\u6709\u9ad8\u6210\u5206\u9891\u7387\u7684\u4fe1\u53f7\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u91c7\u6837\u7387\u662f\u6700\u9ad8\u6210\u5206\u9891\u7387\u9891\u7387\u7684\u4e24\u500d\u3002\u4f46\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u8ba1\u7b97\u673a\u5fc5\u987b\u5b8c\u6210\u66f4\u591a\u5de5\u4f5c\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u3002\u4f7f\u7528\u4e0a\u9762\u65b9\u6ce2\u7684\u5085\u7acb\u53f6\u7ea7\u6570\u8868\u8fbe\u5f0f\uff08\u65b9\u7a0b \\eqref{fourierSeriesSquare}\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u6267\u884c\u7ec4\u6210\u9891\u7387\u7684\u6c42\u548c\u5e76\u5728\u5230\u8fbe\u5948\u594e\u65af\u7279\u9891\u7387\u65f6\u7b80\u5355\u5730\u505c\u6b62\u6765\u751f\u6210\u4fe1\u53f7\u7684\u6bcf\u4e2a\u6837\u672c\u3002\u8fd9\u5c06\u4f7f\u6211\u4eec\u5c3d\u53ef\u80fd\u63a5\u8fd1\u8868\u793a\u65b9\u6ce2\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u7531\u6df7\u53e0\u5f15\u8d77\u7684\u9519\u8bef\u63a2\u6d4b\u9891\u7387\u3002 def added_square ( N , freq = 10 , Fs = 1000 ): L = 1 / freq ; # \u5468\u671f Fs = Fs # # \u91c7\u6837\u6570 t = np . linspace ( 0 , 1 , Fs ) # 1sec with Fs samples signal = np \u3002\u6570\u7ec4 ([ 0 ] * len ( t ), float ) for i in range ( 1 , len ( t )): t0 = t [ i ] for n in range ( 1 , N + 1 ): \u4fe1\u53f7 [ i ] += 4/np\u3002 pi * \\ 1 / ( 2 * n - 1 ) * np . sin ( 2 * ( 2 * n - 1 ) * np . pi * t0 / L ) return ( t , signal ) def plot_additive_square ( N , freq , Fs ): L = 1 / freq ;\u6253\u5370\uff08\u201c\u6700\u9ad8\u7ec4\u6210\u9891\u7387\uff1a%g Hz\u201d\\%\uff08\uff08\uff082*N-1\uff09*np.pi/L\uff09/\uff08np.pi\uff09\uff09\uff09t\uff0c\u4fe1\u53f7=additive_square\uff08N\uff0cfreq\uff0cFs\uff09plt .\u56fe ( figsize = ( 14 , 3 )) plt .\u5b50\u56fe (1, 2, 1) plt\u3002 plot ( t , \u4fe1\u53f7 , &quot;.-&quot; ) plt.\u6807\u9898\uff08\u201c%d Hz \u5904\u7684\u9644\u52a0\u65b9\u6ce2 \\n \\ \u5177\u6709 %d \u9879\uff0c\u5728 %d Hz \u5904\u91c7\u6837\u201d % ( freq , N , Fs )) plt \u3002 xlabel (&quot;time [s]&quot;) freqs, ps = fft_spectrum (t, signal, Fs) plt.\u5b50\u56fe (1, 2, 2) plt\u3002\u7ed8\u56fe\uff08\u9891\u7387\uff0cnp\u3002sqrt\uff08ps\uff09\uff09plt\u3002\u6807\u9898\uff08\u201c\u65b9\u6ce2\u9891\u8c31\u5728 %d Hz \\n \\ \u4e0e %d \u9879\uff0c\u5728 %d Hz \u5904\u91c7\u6837\u201d % ( freq , N , Fs )) plt . xlabel ( &quot;\u9891\u7387 [Hz]&quot; ) plt . xlim(0, 120) \u5c0f\u90e8\u4ef6\u3002\u4ea4\u4e92 ( plot_additive_square , \\ N = widgets . IntSlider ( min = 1 , max = 7 , step = 1 , value = 3 ),\\ freq = widgets . fixed ( 18 ), Fs = widgets . fixed ( 200 )) &gt; \u6700\u9ad8\u6210\u5206\u9891\u7387\uff1a90 Hz \u5728\u4e0a\u56fe\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728 200Hz \u4e0b\u91c7\u6837\u7684 N \u503c\u4e0d\u540c\u7684\u9644\u52a0\u65b9\u6ce2\u3002\u6211\u4eec\u8fd8\u6709\u8fd9\u4e2a\u6ce2\u7684\u9891\u8c31\u3002\u5f53\u6211\u4eec\u589e\u52a0 N \u65f6\uff0c\u5cf0\u503c\u4f1a\u4ee5\u5747\u5300\u7684\u95f4\u9694\u51fa\u73b0\u3002\u4f46\u662f\u4e00\u65e6\u6211\u4eec\u8fbe\u5230\u91c7\u6837\u9891\u7387 (100Hz) \u7684\u4e00\u534a\uff0c\u4e0d\u89c4\u5219\u7684\u5cf0\u503c\u5c31\u4f1a\u5f00\u59cb\u51fa\u73b0\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u975e\u8c10\u6ce2\u58f0\u97f3\uff08\u4e0d\u592a\u9002\u5408\u5236\u4f5c\u97f3\u4e50\uff09\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u7a7f\u8fc7\u5948\u594e\u65af\u7279\u9891\u7387\u4e4b\u524d\u7b80\u5355\u5730\u505c\u5728 N \u7684\u503c\u5904\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b \\(N = 3\\)\u3002\u5f53\u4ee5 44.1kHz \u91c7\u6837\u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u751f\u6210\u57fa\u9891\u4e3a 420kHz \u7684\u65b9\u6ce2\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cN \u5c06\u4e3a \\(N = 53\\)\u3002\u6839\u636e\u60c5\u51b5\uff0c\u5bf9\u4e8e\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u6837\u672c\u53ef\u80fd\u9700\u8981\u6267\u884c\u8fc7\u591a\u7684\u8fed\u4ee3\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u52a0\u6cd5\u5408\u6210\u9884\u5148\u751f\u6210\u4e0d\u540c\u9891\u7387\u7684\u6240\u9700\u6ce2\u5f62\uff0c\u5e76\u5c06\u751f\u6210\u7684\u6837\u672c\u5b58\u50a8\u5728\u6ce2\u8868\u4e2d\uff0c\u7136\u540e\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u67e5\u627e\u3002\u4f46\u8fd9\u9700\u8981\u9884\u5148\u8ba1\u7b97\u548c\u5185\u5b58\u3002\u8be5\u65b9\u6cd5\u5229\u7528\u4e86\u4ece\u65b9\u6ce2\u7684\u4f4e\u503c\u5230\u65b9\u6ce2\u7684\u9ad8\u503c\u7684\u6b65\u8fdb\u5728\u7406\u8bba\u4e0a\u662f\u77ac\u65f6\u7684\u8fd9\u4e00\u4e8b\u5b9e\u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u4e3b\u65b9\u6ce2\u8bbe\u7f6e\u4e3a\u4ec0\u4e48\u5468\u671f\u6216\u9891\u7387\uff0c\u6267\u884c\u8df3\u8dc3\u7684\u6ce2\u90e8\u5206\u5c06\u59cb\u7ec8\u76f8\u540c\u3002\u5728\u6570\u5b57\u60c5\u51b5\u4e0b\uff0c\u8fd9\u610f\u5473\u7740\u8fd9\u4e00\u6b65\u53ea\u80fd\u5728\u91c7\u6837\u7387\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u5c3d\u53ef\u80fd\u5c16\u9510\u5e76\u5177\u6709\u5c3d\u53ef\u80fd\u591a\u7684\u9891\u7387\u3002\n\u8bc0\u7a8d\u662f\u8ba9\u6b64\u6b65\u9aa4\u7684\u7248\u672c\u53d7\u5e26\u5bbd\u9650\u5236\u3002\u7136\u540e\u53ef\u4ee5\u5c06\u6b64\u201cBLEP\u201d\u66ff\u6362\u5230\u5177\u6709\u592a\u9661\u6b65\u7684\u5929\u771f\u751f\u6210\u7684\u6ce2\u5f62\u533a\u57df\uff08\u4e0d\u8003\u8651\u6df7\u53e0\uff09\uff0c\u4ece\u800c\u907f\u514d\u66f4\u9ad8\u7684\u9891\u7387\u3002\u7531\u4e8e BLEP \u9700\u8981\u4ee5\u4e0d\u8fde\u7eed\u6027\u4e3a\u4e2d\u5fc3\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u63d0\u524d\u9884\u6d4b\u51e0\u4e2a\u6837\u672c\u4f55\u65f6\u53d1\u751f\u9636\u8dc3\uff0c\u6216\u8005\u53ea\u662f\u7a0d\u5fae\u5ef6\u8fdf\u4fe1\u53f7\u3002\u53ef\u4ee5\u4f7f\u7528\u4e0a\u8ff0\u52a0\u6cd5\u5408\u6210\u6216\u901a\u8fc7\u6a21\u62df\u5bf9\u901a\u8fc7\u4f4e\u901a\u6ee4\u6ce2\u5668\u53d1\u9001\u7684\u8109\u51b2\u7684\u5f71\u54cd\u6765\u751f\u6210\u8fd9\u4e9b\u6b65\u9aa4\u3002 BLEP \u65b9\u6cd5\u7684\u53d1\u5c55\u662f\u6240\u8c13\u7684 polyBLEP\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e86\u5e26\u9650\u9636\u8dc3\u51fd\u6570\u7684\u591a\u9879\u5f0f\u8fd1\u4f3c\u3002\u8fd9\u5141\u8bb8\u5feb\u901f\u8ba1\u7b97\u5e26\u9650\u6b65\u957f\u5e76\u4e14\u4e0d\u9700\u8981\u5185\u5b58\u67e5\u627e\u3002\u8fd9\u79cd\u8fd1\u4f3c\u662f\u901a\u8fc7\u6570\u5b66\u89e3\u91ca\u5c06\u9636\u8dc3\u51fd\u6570\u901a\u8fc7\u4f4e\u901a\u6ee4\u6ce2\u5668\u7684\u8fc7\u7a0b\u5f97\u51fa\u7684\u3002 Valimaki \u548c Huovilainen \u5728\u4ed6\u4eec\u7684\u8bba\u6587\u4e2d\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u4e09\u89d2\u6ce2\u53ef\u4ee5\u7528\u4f5c\u4f4e\u901a\u6ee4\u6ce2\u7684\u51fd\u6570\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u7684\u9891\u7387\u54cd\u5e94\u5177\u6709 sinc^2 \u7684\u5f62\u72b6\u3002\u4e09\u89d2\u6ce2\u51fd\u6570\u7531\u4e0b\u5f0f\u7ed9\u51fa\uff0c\u4e09\u89d2\u8109\u51b2\u7684\u9891\u7387\u54cd\u5e94\u53ef\u7528\u4e8e\u4f7f\u7528\u5377\u79ef\u6539\u53d8\u65b9\u6ce2\u3002\u65b9\u6ce2\u4e0e\u4e09\u89d2\u8109\u51b2\u5377\u79ef\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u4e09\u89d2\u8109\u51b2\u5f97\u5230\u79ef\u5206\u3002\u5e38\u91cf \\(\\frac{1}{2}\\) \u9879\u662f\u4e3a\u4e86\u786e\u4fdd\u8fde\u7eed\u6027\u3002\u8fd9\u662f\u591a\u9879\u5f0f\u9650\u5e26\u6b65\u9aa4\u3002\u8981\u5e94\u7528\u4e8e\u539f\u59cb\u751f\u6210\u6ce2\u5f62\u7684\u5b9e\u9645\u6821\u6b63\u7531 BLEP \u6b8b\u5dee\u7ed9\u51fa\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ece BLEP \u4e2d\u51cf\u53bb\u8f93\u5165\u8109\u51b2\u3002\u6211\u4eec\u5f97\u5230 $$f_{polyBLEP}(t) = \\begin{cases}\\frac{t^2}{2} + t + \\frac{1}{2} \\, , \\text{when} \\, -1 \\leq t \\leq 0 \\newlinet - \\frac{t^2}{2} + \\frac{1}{2} \\, , \\text{when} \\, 0 \\lt t \\leq 1\\end{cases} \\, .$$\n\u5728\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u8fd9\u4e00\u70b9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u903b\u8f91\u6765\u627e\u5230\u4e0d\u8fde\u7eed\u6027\uff0c\u7136\u540e\u5e94\u7528\u66f4\u6b63\u3002\u6211\u4eec\u9700\u8981\u63d0\u524d\u77e5\u9053\u6211\u4eec\u7684\u4e0d\u8fde\u7eed\u6027\u4f55\u65f6\u51fa\u73b0\u624d\u80fd\u5e94\u7528\u6821\u6b63\uff0c\u4f46\u7531\u4e8e\u6ce2\u5f62\u662f\u5468\u671f\u6027\u7684\uff0c\u8fd9\u5e94\u8be5\u4e0d\u4f1a\u592a\u56f0\u96be\u3002\u4e0b\u9762\u662f\u5728 polyBLEPS \u7684\u5e2e\u52a9\u4e0b\u751f\u6210\u65b9\u6ce2\u6821\u6b63\u7684\u793a\u4f8b\u3002 # PolyBLEP by Tale # http://www.kvraudio.com/forum/viewtopic.php?t=375517 #\uff08\u7531\u6211\u6539\u7f16\uff09#double t = 0.; // 0 &lt;= t &lt; 1 #double dt = freq / sample_rate; def poly_blep ( t , dt ): &quot;&quot;&quot;\u5bf9\u5929\u771f\u751f\u6210\u7684\u6ce2\u5f62\u4e2d\u7ed9\u51fa\u7684\u4e0d\u8fde\u7eed\u6027\u8fdb\u884c polyblep \u6821\u6b63\u3002dt = freq/Fs &quot;&quot;&quot; if (t &lt; dt): # 0 &lt;= t &lt; 1 t /= dt ; # 2 * (t - t^2/2 - 0.5) \u8fd4\u56de t + t - t * t - 1 elif ( t &gt; 1. - dt ): # -1 &lt; t &lt; 0 t = ( t - 1. ) / dt ; # 2 * (t^2/2 + t + 0.5) return t * t + t + t + 1 else : # 0 \u5426\u5219\u8fd4\u56de0 def poly_square ( t , dt , aa ): naive_square = 0 if t &lt;= 0.5 : naive_square = 1 ;\u5982\u679c t &gt; 0.5 : naive_square = - 1 ; if aa : #with polyBlep \u6821\u6b63\u3002 #\u4e00\u4e2a\u7528\u4e8e\u4e0a\u5347\uff0c\u4e00\u4e2a\u7528\u4e8e\u4e0b\u964d\uff080.5\uff09 return naive_square + poly_blep ( t , dt ) \\ - poly_blep (( t + 0.5 ) % 1 , dt ) else : return naive_square t = 0 Fs = 3520 f0 = 240 dt = f0 / Fs out_no_aa = np .\u6570\u7ec4 ([ 0 ] * Fs , float ) out_aa = np \u3002 array ([ 0 ] * Fs , float ) # \u4f7f\u952f\u9f7f\u6ce2 f0 \u6b21 t = np . linspace ( 0 , f0 , Fs ) for i in range (0, len (t)): t_tmp = t [ i ] % 1 out_no_aa [ i ] = poly_square ( t_tmp , dt , 0 ) out_aa [ i ] = poly_mpt , dt , 1 ) t = np \u3002 linspace ( 0 , 1 , Fs ) #f0 \u6b21\u5728 1 \u79d2\u5185 signal_no_aa = out_no_aa signal_aa = out_aa \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u9891\u7387\u54cd\u5e94\u6765\u4e86\u89e3\u8fd9\u5bf9\u6df7\u53e0\u7684\u5f71\u54cd\u3002 \uff03\u9634\u8c0b\uff01\u8840\u5c0f\u677f\u56fe ( figsize = ( 16 , 20 )) plt .\u5b50\u56fe (4, 2, 1) plt\u3002 plot ( t , signal_aa , &quot;.-&quot; ) plt. title (&quot;Square with polyBLEP&quot;) plt . xlabel ( &quot;time [s]&quot; ) plt \u3002 xlim ( 0 , 0.05 );\u8840\u5c0f\u677fylim (-2, 2) plt\u3002\u5b50\u56fe (4, 2, 2) plt\u3002 plot ( t , signal_no_aa , &quot;.-&quot; ) plt\u3002\u6807\u9898\uff08\u201c\u6ca1\u6709 polyBLEP \u7684\u6b63\u65b9\u5f62\u201d\uff09 plt \u3002 xlabel ( &quot;time [s]&quot; ) plt \u3002 xlim ( 0 , 0.05 );\u8840\u5c0f\u677fylim ( - 2 , 2 ) freqs , ps = fft_spectrum ( t , signal_aa , Fs ) plt.\u5b50\u56fe (4, 2, 3) plt\u3002\u7ed8\u56fe\uff08\u9891\u7387\uff0cnp\u3002sqrt\uff08ps\uff09\uff0c\u201c.-\u201d\uff09plt\u3002\u6807\u9898\uff08\u201cpolyBLEP \u7684\u9891\u7387\u54cd\u5e94\u201d\uff09 plt \u3002 xlabel ( &quot;\u9891\u7387 [Hz]&quot; ) plt . xlim (0, 2000) plt\u3002 ylim ( 0 , 400 ) freqs , ps = fft_spectrum ( t , signal_no_aa , Fs ) plt.\u5b50\u56fe (4, 2, 4) plt\u3002\u7ed8\u56fe\uff08\u9891\u7387\uff0cnp\u3002sqrt\uff08ps\uff09\uff0c\u201c.-\u201d\uff09plt\u3002\u6807\u9898\uff08\u201c\u6ca1\u6709 polyBLEP \u7684\u9891\u7387\u54cd\u5e94\u201d\uff09 plt \u3002 xlabel ( &quot;\u9891\u7387 [Hz]&quot; ) plt . xlim (0, 2000) plt\u3002 ylim ( 0 , 400 ) \u6211\u4eec\u6709\u5b83\u3002\u5728\u6ca1\u6709 polyBLEPS \u7684\u4fe1\u53f7\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e86\u5f88\u591a\u4e0d\u9700\u8981\u7684\u9891\u7387\u3002\u4efb\u4f55\u9ad8\u5ea6\u5728 150 \u6216\u4ee5\u4e0b\u7684\u5cf0\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u6df7\u53e0\uff08\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5cf0\uff09\u3002\u4f7f\u7528 polyBLEP \u6821\u6b63\u8c03\u6574\u4fe1\u53f7\u65f6\uff0c\u6211\u4eec\u770b\u5230\u6df7\u53e0\u663e\u7740\u51cf\u5c11\uff01\u4e0b\u9762\u662f\u4e24\u4e2a\u89c6\u9891\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u542c\u5230 polyBLEPS \u7684\u6548\u679c\u3002\u8fd9\u91cc\u4f7f\u7528\u4e86 22050 \u7684\u91c7\u6837\u7387\u3002\u97f3\u91cf\u8b66\u544a\uff01\n\u8fd4\u56de\u9876\u90e8", "note_en": "In this post I plan to show the effects of polyBLEPS and implement a short example program that uses this method to generate bandlimited waveforms, in the hopes of reducing aliasing. In addition, there is also a short overview of some other available methods.\n This post was written in the Jupyter Notebook.Notebook is available as  .html or as  .ipnyb.\n  In subtractive synthesis we want to start from waveforms which have a lot of &#34;harmonic content&#34;, which we then can &#34;sculpt away&#34; using filters and effects.This usually means sawtooth-waves or square-waves.\n In contrast, a sine-wave has very little &#34;harmonic content&#34;.In fact, it has the least possible and is so fundamental that it can be seen as the building block of any other signal.\n   where  \\(x\\), in the context of audio, is our time parameter and  \\(L\\) is the square waves period, note that  \\(n\\) is defined to be only odd integers ( derivation).\n  #Setup import  numpy  as  np import  scipy import  scipy.signal import  matplotlib.pyplot  as  plt import  ipywidgets  as  widgets L  =  1 / 10 ;  # 1 period 0.1s =&gt; 10Hz Fs  =  1000  # samples to take (explained later) t  =  np . linspace ( 0 , 1 , Fs )  # 1sec with 10000 samples signal  =  scipy . signal . square ( t * ( 2 * np . pi / L ))  # 10Hz square wave ps  =  np . abs ( np . fft . fft ( signal )) ** 2  # power spectrum freqs  =  np . fft . fftfreq ( signal . size ,  d = 1 / Fs )  # freqs for plot #Plot idx  =  np . argsort ( freqs ) fig ,  ax  =  plt . subplots () ax . xaxis . set_ticks ( np . arange ( 1 / L ,  100 ,  1 / L )) ax . set_xlim ( 0 , 100 ) ax . set_title ( &#34;Frequency spectrum for  %d  Hz square wave&#34;  % ( 1 / L )) ax . set_xlabel ( &#34;Hz&#34; ) ax . plot ( freqs [ idx ],  np . sqrt ( ps [ idx ]), &#34;.-&#34; )\n  The figure above shows the frequency spectrum of a square wave at 10Hz. From this we can see the individual sin-waves that make up the square wave. The strongest peak is a sin-wave with frequency 10Hz (which usually is referred to as the fundamental). The next peak can be seen at 30Hz, meaning we have a sin-wave at 30Hz but with a lower amplitude. The next peak is at 50Hz, and the next after that at 70Hz, etc. Note that the peaks are missing at even multiples of  \\(\\frac{1}{L}\\) (20Hz, 40Hz, ...) and have peaks at uneven multiples of  \\(\\frac{1}{L}\\) (10Hz, 30Hz, ...), just as it was described in \\eqref{fourierSeriesSquare}.\n In theory these peaks keep showing up all the way up to infinitely high frequencies!\n But, when dealing with signals in the digital world, where signals must be sampled at specific time intervals, there is a limit on signal frequencies before we get  aliasing.\n  Aliasing occurs when the signal we are trying to capture has a frequency which is higher than half the sample frequency. When this occurs we can no longer perfectly represent the signal. It has been distorted. The Nyquist theorem says that to perfectly capture a signal through sampling, the sampling frequency must be at least twice that of the highest frequency in the signal.\n To illustrate aliasing we can look at a sin-wave sampled at 40Hz. A sin-wave with a frequency of 15Hz will have its peak at 15Hz in the frequency spectrum. But a sin-wave at 25Hz is above the threshold of half the sampling frequency and will be aliased. We can see that this means that the frequency of the signal &#34;folds&#34; and appears to go back down in frequency, landing at around 15Hz instead of 25Hz, thus incorrectly representing the signal.\n def  fft_spectrum ( t ,  signal ,  Fs ):  &#34;&#34;&#34;function to help plotting frequency responses&#34;&#34;&#34;  ps  =  np . abs ( np . fft . fft ( signal )) ** 2  # power spectrum  freqs  =  np . fft . fftfreq ( signal . size ,  d = 1 / Fs )  # freqs for plot  idx  =  np . argsort ( freqs )  return  ( freqs [ idx ],  ps [ idx ]) def  sin_fft ( freq ,  Fs ):  L  =  1 / freq ;  # 1 period 0.1s =&gt; 10Hz  Fs  =  Fs  # # of samples to take  t  =  np . linspace ( 0 , 1 , Fs )  # 1sec with Fs samples  signal  =  np . sin ( t * ( 2 * np . pi / L ))  # 1/L Hz sin-wave  return  fft_spectrum ( t ,  signal ,  Fs )  #Plot!  plt . subplots  fig ,  ax  =  plt . subplots ( 2 ,  sharex = True )  ax [ 0 ] . xaxis . set_ticks ( np . arange ( 10 ,  100 ,  5 ))  ax [ 0 ] . set_xlim ( 0 , 20 )  ax [ 1 ] . set_xlabel ( &#34;Hz&#34; )  #15 Hz  freqs ,  ps  =  sin_fft ( 15 ,  40 )  ax [ 0 ] . plot ( freqs ,  np . sqrt ( ps ))  ax [ 0 ] . set_title ( &#34;Frequency spectrum for  %d  Hz square wave&#34;  % ( 15 ))  #25 Hz  freqs ,  ps  =  sin_fft ( 25 ,  40 )  ax [ 1 ] . plot ( freqs ,  np . sqrt ( ps ))  ax [ 1 ] . set_title ( &#34;Frequency spectrum for  %d  Hz square wave&#34;  % ( 25 ))\n  From this we can imagine that trying to represent a square wave, which has peaks at infinitely high frequencies can become a bit of a challenge. But why was there no aliasing in the original square-wave example? In that case our sample rate was set to be quite high compared to the period of the square wave. The peaks for the higher frequencies are so small that the effect of aliasing is pretty much negligible.\n But if we want to allow square-waves with shorter periods (resulting in a higher fundamental frequency), this can be a problem and introduce unwanted content and noise to our digital signal that arises because of aliasing.\n For audio purposes the sampling rate of 44.1kHz is often used. This means that we can represent audio with frequencies up to 20kHz, that is more than what the human ear can pick up. But with aliasing there is risk that higher frequencies than 20k kHz &#34;fold&#34; back and introduce new unwanted frequencies in the audible range.\n  How can aliasing be avoided?The signal needs to be Bandlimited. This means that the signal to be represented needs to have no frequency content higher than half the sample rate (or at least that such content has low amplitude).\n When recording audio of the real world through a microphone it will almost certainly encounter frequencies which are higher than the sample rate. To avoid aliasing, a lowpass filter is used to make sure that the higher frequencies are sufficiently low, making the signal band limited and thus avoiding aliasing.\n When digitally generating waveforms we need to make sure this is also the case. Limit the higher frequencies that can not be sampled. There are multiple methods which can help prevent waveforms from being aliased. Common methods include\n  The 3 techniques are called quasi-bandlimited, since they do not eliminated aliasing perfectly. They do however, still help reduce the aliasing effects significantly.\n Below is a quick overview of the oversampling, additive synthesis techniques and BLEP techniques. The BLEP technique was the one of greatest interest for my project and seemed to fit my needs the best.\n I did not get a chance to dive into the other techniques very much. Here are some pointers for for more info on the other ones BLITS and BLAMPS:\n    Here the signal is simply sampled at a high enough frequency that no aliasing occurs or that the effects of aliasing are negligible. Audio is generally sampled at 44.1kHz and if we wish to capture a signal that has high constituent frequencies we must make sure that the sample rate is twice the frequency of the highest constituent frequency. But this can mean that a lot more work has to be done by the computer and might be a problem, especially for realtime applications.\n  Using the fourier series expression for a square-wave above (equation \\eqref{fourierSeriesSquare}) we can generate each sample of the signal by manually performing the summation of the constituent frequencies and simply stopping when arriving at the Nyquist frequency. This will get us as close as possible to representing a square-wave without having wrong sounding frequencies caused by aliasing.\n def  additive_square ( N ,  freq = 10 ,  Fs = 1000 ):  L  =  1 / freq ;  # period  Fs  =  Fs  # # of samples to take  t  =  np . linspace ( 0 , 1 , Fs )  # 1sec with Fs samples  signal  =  np . array ([ 0 ]  *  len ( t ),  float )  for  i  in  range ( 1 ,  len ( t )):  t0  =  t [ i ]  for  n  in  range ( 1 ,  N + 1 ):  signal [ i ]  +=  4 / np . pi  * \\  1 / ( 2 * n - 1 ) * np . sin ( 2 * ( 2 * n - 1 ) * np . pi * t0 / L )  return  ( t ,  signal ) def  plot_additive_square ( N ,  freq ,  Fs ):  L  =  1 / freq ;  print ( &#34;Highest constituent frequency:  %g  Hz&#34; \\  %  ((( 2 * N - 1 ) * np . pi / L ) / ( np . pi ))  )  t ,  signal  =  additive_square ( N ,  freq ,  Fs )  plt . figure ( figsize = ( 14 , 3 ))  plt . subplot ( 1 , 2 , 1 )  plt . plot ( t ,  signal ,  &#34;.-&#34; )  plt . title ( &#34;Additive square-wave at  %d  Hz \\n   \\  with  %d  terms, sampled at  %d  Hz&#34;  %  ( freq ,  N ,  Fs ))  plt . xlabel ( &#34;time [s]&#34; )  freqs ,  ps  =  fft_spectrum ( t ,  signal ,  Fs )  plt . subplot ( 1 , 2 , 2 )  plt . plot ( freqs ,  np . sqrt ( ps ))  plt . title ( &#34;Frequency spectrum of square-wave at  %d  Hz \\n   \\  with  %d  terms, sampled at  %d  Hz&#34;  %  ( freq ,  N ,  Fs ))  plt . xlabel ( &#34;frequency [Hz]&#34; )  plt . xlim ( 0 , 120 ) widgets . interact ( plot_additive_square , \\  N = widgets . IntSlider ( min = 1 , max = 7 , step = 1 , value = 3 ),\\  freq = widgets . fixed ( 18 ), Fs = widgets . fixed ( 200 )) &gt;  Highest  constituent  frequency :  90  Hz\n  In the figure above we can see an additive square-wave with different values for N sampled at 200Hz. We also the frequency spectrum for this wave. Peaks show up at even intervals as we increase N. But as soon as we hit half of the sampling frequency (100Hz) irregular peaks start to show up, which would cause a non harmonic sound (Not so good for making music). So we can simply stop at the value for N right before crossing the Nyquist frequency, in this case  \\(N = 3\\).\n When sampling at 44.1kHz and we want to generate a square wave with a fundamental at 420kHz N in this case would be  \\(N = 53\\). Depending on the circumstance this might be too many iterations to perform for each sample in a realtime application.\n A common approach is to use additive synthesis to generate the wanted waveforms beforehand for different frequencies and store the resulting samples in a wavetable which can then be looked up during runtime. But this requires precomputation and memory.\n   This method uses the fact that the step from the low value of the square wave and the high value of the square wave is theoretically instantaneous. So no matter what period or frequency the main square-wave is set to, the part of the wave that does the jump will be always be the same. In digital situation this means that this step can only be as sharp and have as many frequencies as the sample rate allows.\n The trick is to have a version of this step that is bandlimited. This &#34;BLEP&#34; can then be substituted in into areas of a naively generated waveform (not taking aliasing into account) that have too steep of a step, thus avoiding the higher frequencies. Since the BLEP will need to be centered around the discontinuity we will need to be able to predict ahead for a few samples when the step will occur, or simply delaying the signal a bit.\n These steps can be generated using additive synthesis, described above or by simulating the effect on an impulse being sent through a lowpass filter.\n   A development on the BLEP method is the so called polyBLEP. Here a polynomial approximation is given for the band limited step function. This allows for quick calculation of the band limited step and does not require memory lookups.\n This approximation is arrived at by mathematically interpreting the process of putting a step function through a lowpass-filter. Valimaki and Huovilainen describe the process in their  paper. The triangular wave can be used as a function for lowpass filtering, this because its frequency response has the shape of sinc^2. The triangular wave function is given by,\n  The frequency response of the triangular pulse can be applied to alter a square wave using convolution. The square wave is convolved with the triangular pulse. During this process the triangular pulse gets integrated.\n  The constant  \\(\\frac{1}{2}\\)-terms are there to ensure continuity. This is the polynomial Band-Limited stEP.The actual correction that is to be applied to a naively generated waveform is given by the BLEP residual. That is, the input impulse subtracted from the BLEP. We get\n $$f_{polyBLEP}(t) = \\begin{cases}\\frac{t^2}{2} + t + \\frac{1}{2} \\, , \\text{when} \\, -1 \\leq t \\leq 0 \\newlinet - \\frac{t^2}{2} + \\frac{1}{2} \\, , \\text{when} \\, 0 \\lt t \\leq 1\\end{cases} \\, .$$\n Implementing this in a program means we need some logic to find the discontinuities and then apply the correction. We will need to know in advance when our discontinuities show up in order to apply the correction, but since the waveforms are periodic this should not be too difficult.\n Below is an example of generating a square wave corrected with the help of polyBLEPS.\n # PolyBLEP by Tale # http://www.kvraudio.com/forum/viewtopic.php?t=375517 # (adapted a bit by me) #double t = 0.; // 0 &lt;= t &lt; 1 #double dt = freq / sample_rate; def  poly_blep ( t ,  dt ):  &#34;&#34;&#34;gives the polyblep correction for a   discontinuity given in a naively generated waveform.  dt = freq/Fs  &#34;&#34;&#34;  if  ( t  &lt;  dt ):  # 0 &lt;= t &lt; 1  t  /=  dt ;  # 2 * (t - t^2/2 - 0.5)  return  t + t  -  t * t  -  1  elif  ( t  &gt;  1.  -  dt ):  # -1 &lt; t &lt; 0  t  =  ( t  -  1. )  /  dt ;  # 2 * (t^2/2 + t + 0.5)  return  t * t  +  t + t  +  1  else :  # 0 otherwise  return  0 def  poly_square ( t ,  dt ,  aa ):  naive_square  =  0  if  t  &lt;=  0.5 :  naive_square  =  1 ;  if  t  &gt;  0.5 :  naive_square  =  - 1 ;  if  aa :  #with polyBlep correction.  #one for the raise and one for the fall (at 0.5)  return  naive_square  +  poly_blep ( t ,  dt ) \\  -  poly_blep (( t + 0.5 )  %  1 ,  dt )  else :  return  naive_square t  =  0 Fs  =  3520 f0  =  240 dt  =  f0 / Fs out_no_aa  =  np . array ([ 0 ] * Fs ,  float ) out_aa  =  np . array ([ 0 ] * Fs ,  float ) # make sawtooth wave f0 times t  =  np . linspace ( 0 , f0 , Fs ) for  i  in  range ( 0 , len ( t )):  t_tmp  =  t [ i ]  %  1  out_no_aa [ i ]  =  poly_square ( t_tmp ,  dt ,  0 )  out_aa [ i ]  =  poly_square ( t_tmp ,  dt ,  1 ) t  =  np . linspace ( 0 , 1 , Fs )  #f0 times in 1 second signal_no_aa  =  out_no_aa signal_aa  =  out_aa\n We can see the effect this has on aliasing by looking at the frequency response.\n #Plot! plt . figure ( figsize = ( 16 , 20 )) plt . subplot ( 4 , 2 , 1 ) plt . plot ( t ,  signal_aa ,  &#34;.-&#34; ) plt . title ( &#34;Square with polyBLEP&#34; ) plt . xlabel ( &#34;time [s]&#34; ) plt . xlim ( 0 , 0.05 );  plt . ylim ( - 2 , 2 ) plt . subplot ( 4 , 2 , 2 ) plt . plot ( t ,  signal_no_aa ,  &#34;.-&#34; ) plt . title ( &#34;Square without polyBLEP&#34; ) plt . xlabel ( &#34;time [s]&#34; ) plt . xlim ( 0 , 0.05 );  plt . ylim ( - 2 , 2 ) freqs ,  ps  =  fft_spectrum ( t ,  signal_aa ,  Fs ) plt . subplot ( 4 , 2 , 3 ) plt . plot ( freqs ,  np . sqrt ( ps ), &#34;.-&#34; ) plt . title ( &#34;Frequency response with polyBLEP&#34; ) plt . xlabel ( &#34;frequency [Hz]&#34; ) plt . xlim ( 0 , 2000 ) plt . ylim ( 0 , 400 ) freqs ,  ps  =  fft_spectrum ( t ,  signal_no_aa ,  Fs ) plt . subplot ( 4 , 2 , 4 ) plt . plot ( freqs ,  np . sqrt ( ps ), &#34;.-&#34; ) plt . title ( &#34;Frequency response without polyBLEP&#34; ) plt . xlabel ( &#34;frequency [Hz]&#34; ) plt . xlim ( 0 , 2000 ) plt . ylim ( 0 , 400 )\n   There we have it. In the signal without polyBLEPS we see a lot of unwanted frequencies. Any peaks with a height around 150 or below could be considered aliasing (except for maybe at the last peak). When adjusting the signal using the polyBLEP correction we se a dramatic reduction in aliasing!\n Below are two videos where you can hear the effects of the polyBLEPS. Here a sample rate of 22050 was used. VOLUME WARNING!\n     Go Top", "posttime": "2021-07-28 04:46:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6a21\u62df,analog,\u9891\u7387", "title": "\u865a\u62df\u6a21\u62df\u5408\u6210\u5668\uff1a\u5e26\u9650\u6ce2\u5f62", "title_en": "Virtual Analog Synthesizer: Bandlimited Waveforms", "transed": 1, "url": "http://peter.mcevoy.se/blog/synth2-bl-osc.html", "via": "", "real_tags": ["\u6a21\u62df", "analog", "\u9891\u7387"]}, {"category": "", "categoryclass": "", "imagename": "e81d9c7467d139529d91f36e1e91ec3b.jpg", "infoid": 1070165, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f9\u679c\u4eca\u5929\u5411\u5f00\u53d1\u8005\u53d1\u5e03\u4e86 iOS 15 beta 4 \u548c iPadOS 15 beta 4\u3002\u8fd9\u4e9b\u66f4\u65b0\u7ee7\u7eed\u5bf9\u6709\u4e89\u8bae\u7684 Safari \u91cd\u65b0\u8bbe\u8ba1\u3001iPadOS \u4e3b\u5c4f\u5e55\u4e0a\u64ad\u5ba2\u7684\u65b0\u5c0f\u90e8\u4ef6\u9009\u9879\u7b49\u8fdb\u884c\u66f4\u6539\u3002\u4e0b\u9762\u6211\u4eec\u5c06\u6c47\u603b iOS 15 \u548c iPadOS 15 beta 4 \u4e2d\u7684\u6240\u6709\u66f4\u6539\u3002iOS 15 beta 4 \u7684\u7248\u672c\u53f7\u4e3a 19A5307g\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7\u201c\u8bbe\u7f6e\u201d\u5e94\u7528\u4ece Beta 3 \u66f4\u65b0\u3002\u53ea\u9700\u6253\u5f00\u201c\u8bbe\u7f6e\u201d\u5e94\u7528\u7a0b\u5e8f\uff0c\u9009\u62e9\u201c\u5e38\u89c4\u201d\uff0c\u7136\u540e\u9009\u62e9\u201c\u8f6f\u4ef6\u66f4\u65b0\u201d\u3002\u5982\u679c\u60a8\u6ca1\u6709\u7acb\u5373\u770b\u5230 iOS 15 beta 4\uff0c\u8bf7\u7ee7\u7eed\u68c0\u67e5\uff0c\u56e0\u4e3a\u66f4\u65b0\u4ecd\u5728\u63a8\u51fa\u3002 iOS 15 \u4e5f\u53ef\u4f9b\u516c\u5171\u6d4b\u8bd5\u7248\u7528\u6237\u4f7f\u7528\uff0c\u4f46\u672c\u5468\u6ca1\u6709\u5411\u8fd9\u4e9b\u7528\u6237\u53d1\u5e03\u65b0\u7684\u6d4b\u8bd5\u7248\u3002\u4e0b\u4e00\u4e2a iOS 15 \u516c\u5f00\u6d4b\u8bd5\u7248\u53ef\u80fd\u4f1a\u5728\u4eca\u5929\u665a\u4e9b\u65f6\u5019\u6216\u660e\u5929\u53d1\u5e03\uff0c\u4f46\u4e0b\u5468\u53d1\u5e03\u4e5f\u4e0d\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u5982\u679c\u60a8\u53d1\u73b0 iOS 15 \u6d4b\u8bd5\u7248 4 \u6216\u4eca\u5929 Apple \u7684\u5176\u4ed6\u65b0\u6d4b\u8bd5\u7248\u6709\u4efb\u4f55\u53d8\u5316\uff0c\u8bf7\u5728\u4e0b\u9762\u7684\u8bc4\u8bba\u6216 Twitter @9to5Mac \u4e0a\u544a\u8bc9\u6211\u4eec\u3002\u8bf7\u7ee7\u7eed\u9605\u8bfb\uff0c\u56e0\u4e3a\u6211\u4eec\u6c47\u603b\u4e86\u8fc4\u4eca\u4e3a\u6b62\u53d1\u73b0\u7684\u6240\u6709\u5185\u5bb9\u3002 iPadOS 15 beta 4 \u4e2d\u7684 Safari \u5305\u542b\u5927\u91cf\u66f4\u6539\uff0c\u5305\u62ec\u4e0e\u4e24\u5468\u524d macOS Monterey beta 3 \u9644\u5e26\u7684\u8bbe\u8ba1\u7c7b\u4f3c\u7684\u65b0\u8bbe\u8ba1\u3002 iOS 15 beta 4 \u8fd8\u5305\u62ec\u5bf9 Safari \u7684\u8bb8\u591a\u66f4\u6539\uff0c\u5305\u62ec\uff1a \u91cd\u65b0\u52a0\u8f7d\u6309\u94ae\u4f4d\u4e8e URL \u65c1\u8fb9\uff0c\u4e0d\u518d\u9690\u85cf\u5728\u957f\u6309\u540e\u9762 \u5f53\u70b9\u51fb\u7f51\u7ad9\u65f6\u6807\u7b7e\u680f\u4f1a\u6700\u5c0f\u5316\n\u957f\u6309 URL \u680f\u4ee5\u627e\u5230\u201c\u663e\u793a\u4e66\u7b7e\u201d\u9009\u9879 \u5c06\u5c0f\u90e8\u4ef6\u5806\u6808\u6dfb\u52a0\u5230\u4e3b\u5c4f\u5e55\u65f6\uff0c\u201c\u667a\u80fd\u65cb\u8f6c\u201d\u7684\u65b0\u56fe\u6807 \u5728 iOS 15 \u5f00\u53d1\u8005\u6d4b\u8bd5\u7248 4 \u4e2d\uff0c\u5feb\u6377\u65b9\u5f0f\u6709\u4e00\u4e2a\u65b0\u7684\u201c\u8fd4\u56de\u4e3b\u5c4f\u5e55\u201d\u64cd\u4f5c \u2013 \u8fd9\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u53d7\u5230\u793e\u533a\u7684\u8981\u6c42\uff0c\u5f88\u9ad8\u5174\u770b\u5230\uff01 pic.twitter.com/8E3ZB7FIYX \u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u65b0\u901a\u77e5\u56fe\u6807\uff0c\u4ee5\u53ca\u5728\u5c4f\u5e55\u5171\u4eab\u6216\u5c4f\u5e55\u955c\u50cf\u65f6\u7981\u7528\u901a\u77e5\u7684\u5207\u6362\u9501\u5b9a\u5c4f\u5e55\u4e0a\u7684\u76f8\u673a\u56fe\u6807\u5df2\u88ab\u8c03\u6574\u4ee5\u5220\u9664\u5feb\u95e8\u6309\u94ae\u60a8\u6b63\u5728\u9605\u8bfb 9to5Mac \u2014 \u65e5\u590d\u4e00\u65e5\u5730\u53d1\u5e03\u6709\u5173 Apple \u53ca\u5176\u5468\u8fb9\u751f\u6001\u7cfb\u7edf\u65b0\u95fb\u7684\u4e13\u5bb6\u3002\u8bf7\u52a1\u5fc5\u67e5\u770b\u6211\u4eec\u7684\u4e3b\u9875\u4ee5\u83b7\u53d6\u6240\u6709\u6700\u65b0\u6d88\u606f\uff0c\u5e76\u5728 Twitter\u3001Facebook \u548c LinkedIn \u4e0a\u5173\u6ce8 9to5Mac \u4ee5\u4e86\u89e3\u6700\u65b0\u6d88\u606f\u3002\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f\u67e5\u770b\u6211\u4eec\u7684\u72ec\u5bb6\u6545\u4e8b\u3001\u8bc4\u8bba\u3001\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5e76\u8ba2\u9605\u6211\u4eec\u7684 YouTube \u9891\u9053", "note_en": "Apple today has released iOS 15 beta 4 and iPadOS 15 beta 4 to developers. The updates continue to make changes to the controversial Safari redesign, a new widget option for Podcasts on the iPadOS home screen, and more. Head below as we roundup all of the changes in iOS 15 and iPadOS 15 beta 4.\n  iOS 15 beta 4 features the build number of 19A5307g. Developers can update from beta 3 via the Settings app. Simply open the Settings app, choose General, then choose Software Update. If you don\u2019t see iOS 15 beta 4 immediately, keep checking as the update is still rolling out.\n iOS 15 is also available to public beta users, but no new beta has been released to those users this week. It\u2019s possible that the next iOS 15 public beta build is released later today or tomorrow, but a release next week is not out of the question.\n If you spot any changes in iOS 15 beta 4, or the other new betas from Apple today, let us know in the comments below or on\u00a0 Twitter @9to5Mac. Read on as we round up everything we\u2019ve found so far.\n   Safari in iPadOS 15 beta 4 includes a host of changes, including a new design that is similar to what came with macOS Monterey beta 3 two weeks ago.\n  iOS 15 beta 4 includes a number of changes to Safari as well including:  the reload button is next to the URL and no longer hidden behind a long-press\n The tab bar minimizes when it gets in your way while tapping on a website\n Long press on the URL bar to find an option to \u201cShow Bookmarks\u201d\n  New icon for \u201cSmart Rotate\u201d when adding a widget stack to your Home screen\n Shortcuts has a new \u201cReturn to Home Screen\u201d action in iOS 15 developer beta 4 \u2013 this has been long requested from the community and is great to see!  pic.twitter.com/8E3ZB7FIYX\n   New icon for Notifications in the Settings app, as well as a toggle for disabling notification when Screen Sharing or Screen Mirroring\n The camera icon on the lock screen has been tweaked to remove the shutter button\n  You\u2019re reading 9to5Mac \u2014 experts who break news about Apple and its surrounding ecosystem, day after day. Be sure to check out  our homepage for all the latest news, and follow 9to5Mac on  Twitter,  Facebook, and  LinkedIn to stay in the loop. Don\u2019t know where to start? Check out our  exclusive stories,  reviews,  how-tos, and  subscribe to our YouTube channel", "posttime": "2021-07-28 04:45:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ios,apple,safari,ipad,\u53d1\u5e03", "title": "Apple \u5728 iOS/iPad OS 15 Beta 4 \u4e2d\u518d\u6b21\u8c03\u6574\u4e86 Safari UI", "title_en": "Apple tweaks the Safari UI again in iOS/iPad OS 15 Beta 4", "transed": 1, "url": "https://9to5mac.com/2021/07/27/whats-new-in-ios-15-beta-4-safari-changes-focus-tweaks-and-more/", "via": "", "real_tags": ["ios", "apple", "safari", "ipad", "\u53d1\u5e03"]}]
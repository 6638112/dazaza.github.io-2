[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1075012, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57282016\u5e74\u81f32020\u5e74\u95f4\uff0c\u6211\u5199\u4e86\u4e00\u7cfb\u5217\u535a\u5ba2\u6587\u7ae0\uff0c\u540d\u4e3a\u201c\u5982\u4f55\u52a0\u901f\u7f16\u8bd1\u5668\u201d\u3002\u8fd9\u4e9b\u4e3b\u8981\u662f\u5173\u4e8e\u6211\u5728Rust\u7f16\u8bd1\u5668\u4e0a\u7684\u5de5\u4f5c\uff0c\u4ee5\u53ca\u5173\u4e8eRust\u7f16\u8bd1\u5668\u603b\u4f53\u901f\u5ea6\u7684\u4e00\u4e9b\u66f4\u65b0\u3002\n\u73b0\u5728\uff0c\u6211\u4f5c\u4e3aFuturewei\u7684Rust\u56e2\u961f\u7684\u4e00\u5458\uff0c\u56de\u5230\u4e86Rust\u6f6e\u6d41\uff0c\u662f\u65f6\u5019\u91cd\u65b0\u5f00\u59cb\u535a\u5ba2\u7cfb\u5217\u4e86\u3002\n#90746\uff1a\u8fd9\u6b21\u516c\u5173\u6539\u53d8\u4e86\u4e00\u4e2a\u70ed\u95e8\u4f46\u975e\u5173\u952e\u7684\u65ad\u8a00\uff01\u5230\u4e00\u4e2a\u8c03\u8bd5\u65ad\u8a00\uff01\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u4f1a\u5728Release\u6784\u5efa\u4e2d\u8fd0\u884c\uff0c\u5728\u4e24\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u83b7\u5f97\u9ad8\u8fbe5%\u7684\u80dc\u5229\u3002\n#91246:Layout:\uff1aarray\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u6d89\u53ca\u5411\u91cf\u589e\u957f\uff0c\u7ecf\u5e38\u88ab\u5b9e\u4f8b\u5316\u3002\u8fd9\u4f7f\u5f97\u5b83\u66f4\u52a0\u7b80\u6d01\uff0c\u51cf\u5c11\u4e86\u751f\u6210\u7684LLVM IR\u7684\u6570\u91cf\uff0c\u5728\u4e00\u4e9b\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u7f16\u8bd1\u65f6\u95f4\u6700\u591a\u51cf\u5c11\u4e864%\uff0c\u800c\u5728\u5f88\u591a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u7f16\u8bd1\u65f6\u95f4\u53ea\u63d0\u9ad8\u4e86\u4e0d\u52301%\uff0c\u5c3d\u7ba1\u7ed3\u679c\u6709\u70b9\u5608\u6742\u3002\n#91844\uff1a\u8be5\u516c\u5171\u5173\u7cfb\u6d88\u9664\u4e86\u503a\u52a1\u5bfc\u81f4\u7684\u6570\u636e\u7ed3\u6784\uff0c\u964d\u4f4e\u4e86\u5206\u914d\u7387\uff0c\u5728\u8bb8\u591a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u83b7\u5f97\u4e86\u4f4e\u4e8e1%\u7684\u80dc\u5229\u3002\nhashbrown#305:rustc\u5927\u91cf\u4f7f\u7528shash\u8868\uff0c\u6211\u53d1\u73b0\u5927\u7ea6\u4e09\u5206\u4e4b\u4e00\u7684\u975e\u4fee\u6539\u54c8\u5e0c\u8868\u67e5\u627e\u90fd\u5728\u7a7a\u8868\u4e0a\uff01hashbrown\u4ecd\u7136\u4f1a\u5bf9\u8f93\u5165\u8fdb\u884c\u6563\u5217\uff0c\u5e76\u5728\u672c\u4f8b\u4e2d\u6267\u884c\u6b63\u5e38\u7684\u67e5\u627e\u3002\u5982\u679c\u8868\u683c\u662f\u7a7a\u7684\uff0c\u8fd9\u4f1a\u6539\u53d8\u5b83\u7acb\u5373\u5931\u8d25\uff0c\u4e00\u6b21\u8d6211%\uff0c\u5e76\u4e14\u57281-4%\u7684\u8303\u56f4\u5185\u62bd\u7b7e\u3002\u8fd9\u4e00\u53d8\u5316\u540e\u6765\u4f5c\u4e3a#92998\u5e74hashbrown\u66f4\u65b0\u7684\u4e00\u90e8\u5206\u5408\u5e76\u5230\u4e86rustc\u4e2d\u3002\n#91948\uff1a\u8fd9\u7bc7\u4e0ecamelid\u5408\u8457\u7684PR\u907f\u514d\u4e86\u56e0\u7b26\u53f7\u5230\u5b57\u7b26\u4e32\u8f6c\u6362\u800c\u5728RustDoc\u4e2d\u8fdb\u884c\u7684\u5927\u91cf\u5206\u914d\uff0c\u4ece\u800c\u5728\u6240\u6709RustDoc\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u83b7\u5f97\u4e86\u9ad8\u8fbe5%\u7684\u597d\u6210\u7ee9\u3002\n#92604\uff1a\u8fd9\u4e2aPR\u4f18\u5316\u4e86\u5728\u5143\u6570\u636e\u7f16\u7801\u671f\u95f4\uff08\u518d\u6b21\uff09\u8bfb\u53d6B128\uff0c\u4ece\u800c\u5728\u8bb8\u591a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u83b7\u5f97\u9ad8\u8fbe3%\u7684\u80dc\u5229\u3002\n#93066:\u4e3a\u5143\u6570\u636e\u89e3\u7801\u800c\u8ddf\u8e2a\u7684\u89e3\u7801\u5668\u5bb9\u6613\u51fa\u9519\uff0c\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7ed3\u679c\u3002\u4f46\u662f\uff0c\u53ea\u6709\u5728\u53d1\u751f\u4e86\u975e\u5e38\u610f\u5916\u7684\u4e8b\u60c5\uff08\u4f8b\u5982\u5143\u6570\u636e\u88ab\u7834\u574f\uff09\u65f6\uff0c\u89e3\u7801\u624d\u4f1a\u5931\u8d25\uff0c\u4e00\u65e6\u5931\u8d25\uff0c\u8c03\u7528\u4ee3\u7801\u5c31\u4f1a\u4e2d\u6b62\u3002\u8fd9\u4e2aPR\u6539\u53d8\u4e86\u89e3\u7801\u5668\uff0c\u4f7f\u5176\u5728\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u7acb\u5373\u6050\u614c\uff0c\u800c\u4e0d\u662f\u7a0d\u665a\u6050\u614c\uff0c\u4ece\u800c\u907f\u514d\u4e86\u8bb8\u591a\u6beb\u65e0\u610f\u4e49\u7684\u7ed3\u679c\u4f20\u64ad\uff0c\u56e0\u4e3a\u5728\u8bb8\u591a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u83b7\u80dc\u7387\u9ad8\u8fbe2%\u3002\n#93148:rustc\u5e7f\u6cdb\u4f7f\u7528interning\u3001ForString\u548c\u8bb8\u591a\u5176\u4ed6\u5185\u90e8\u7c7b\u578b\u3002\u5185\u90e8\u7c7b\u578b\u88ab\u4fdd\u8bc1\u662f\u552f\u4e00\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83\u548c\u5ec9\u4ef7\u7684\u6563\u5217\uff08\u53ea\u8003\u8651\u6307\u9488\uff0c\u800c\u4e0d\u662f\u5185\u5bb9\uff09\uff0c\u4f46\u662f\u4e00\u4e9b\u5185\u90e8\u7c7b\u578b\u6ca1\u6709\u5229\u7528\u8fd9\u4e00\u70b9\u3002\u8fd9\u9879\u5927\u578b\u516c\u5173\u6539\u9769\u4e86\u7528\u4e8e\u5b9e\u4e60\u7684\u7c7b\u578b\uff0c\u4f7f\u5176\u66f4\u52a0\u4e00\u81f4\uff0c\u8d62\u5f97\u4e86\u9ad8\u8fbe4%\u7684\u8bb8\u591a\u57fa\u51c6\u3002\n\u6211\u8bd5\u56fe\u901a\u8fc7\u66f4\u6539\u65b0\u4ee4\u724c\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u5904\u7406\u6765\u52a0\u901fexterns Stress Test\u7684\u8bcd\u6cd5\u5206\u6790\uff0c\u4f46\u6ca1\u6709\u4efb\u4f55\u5e2e\u52a9\u3002\n\u6211\u5c1d\u8bd5\u7f29\u5c0f\u5404\u79cd\u5206\u914d\u7ed9\u7ade\u6280\u573a\u7684\u7c7b\u578b\uff0c\u6bd4\u5982Ty\u548cPredicate\uff0c\u4f46\u8fd9\u5e76\u6ca1\u6709\u8d77\u5230\u8db3\u591f\u7684\u4f5c\u7528\u3002\n\u6211\u4e3aMIR\u8d77\u8349\u4e86\u4e00\u4efd\u6b7b\u533a\u6d88\u9664\u4f18\u5316\u901a\u884c\u8bc1\uff0c\u7075\u611f\u6765\u81ea\u4e8e\u4e0e\u4e22\u5f03\u6807\u5fd7\u76f8\u5173\u7684\u660e\u663e\u5197\u4f59\u4ee3\u7801\u7684\u5b58\u5728\u3002\u8fd9\u662f\u53ef\u884c\u7684\uff0c\u4f46\u53ef\u6d4b\u91cf\u7684\u6027\u80fd\u4f18\u52bf\u5fae\u4e0d\u8db3\u9053\uff0c\u4e0d\u503c\u5f97\u989d\u5916\u7684\u4ee3\u7801\u3002\n\u6211\u5c1d\u8bd5\u4e86\u5404\u79cd\u65b9\u6cd5\u6765\u6539\u8fdb\u4f7f\u7528ast:\uff1aPathSeg\u548cAttrVec\u7684\u5411\u91cf\u8868\u793a\uff0c\u4f46\u90fd\u6ca1\u6709\u6210\u529f\u3002\n\u6211\u8bd5\u56fe\u8fdb\u4e00\u6b65\u4f18\u5316\u4e0e\u5411\u91cf\u589e\u957f\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u4ee5\u6700\u5c0f\u5316LLVM IR\u751f\u6210\uff0c\u4f46\u672a\u80fd\u4ee5\u4e0d\u964d\u4f4e\u7f16\u8bd1\u4ee3\u7801\u901f\u5ea6\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002\n\u6211\u5c1d\u8bd5\u5c06\u975e\u7a7a\u54c8\u5e0c\u8868\u7684\u6700\u5c0f\u5bb9\u91cf\u4ece3\u66f4\u6539\u4e3a7\u3002\u8fd9\u5e26\u6765\u4e86\u4e00\u4e9b\u5c0f\u7684\uff081-2%\uff09\u6027\u80fd\u63d0\u5347\uff0c\u4f46\u5c06\u5cf0\u503c\u5185\u5b58\u4f7f\u7528\u7387\u63d0\u9ad8\u4e86\u66f4\u591a\uff085-10%\uff09\uff0c\u56e0\u6b64\u4e0d\u503c\u5f97\u8fd9\u4e48\u505a\u3002\n\u6211\u5c1d\u8bd5\u4e86\u5f88\u591a\u65b9\u6cd5\u6765\u6539\u8fdbrustc\u54c8\u5e0c\u8868\u4f7f\u7528\u7684FxHasher\u7b97\u6cd5\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002\n\u6211\u5c1d\u8bd5\u589e\u52a0StableHasher\u4f7f\u7528\u7684\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u8fd9\u4e0e\u589e\u91cf\u7f16\u8bd1\u4e00\u8d77\u4f7f\u7528\uff0c\u4f46\u5bfc\u81f4\u6027\u80fd\u7565\u6709\u4e0b\u964d\u3002\n\u6211\u5c1d\u8bd5\u4e86\u4e00\u4e9b\u8c03\u6574\uff1a\u9884\u5b9e\u4e60\u4e00\u4e9b\u5e38\u89c1\u7684InternedValue\uff0c\u7f13\u5b58\u4e00\u4e9b\u6700\u8fd1\u5b9e\u4e60\u7684\u503c\uff0c\u4ee5\u53ca\u907f\u514d\u5b9e\u4e60\u7b26\u53f7\u65f6\u7684\u53cc\u91cd\u67e5\u627e\u3002\u4ed6\u4eec\u90fd\u6ca1\u5e2e\u4e0a\u5fd9\u3002\n\u6211\u8bd5\u7740\u52a0\u5feb\u5bfb\u627e\u56fe\u4e66\u9986\u677f\u6761\u7bb1\u7684\u901f\u5ea6\uff0c\u4f46\u5931\u8d25\u4e86\uff0c\u5c3d\u7ba1\u6211\u4e00\u8def\u4e0a\u505a\u4e86\u4e00\u4e9b\u6e05\u7406\u5de5\u4f5c\u3002\n\u6211\u5c1d\u8bd5\u4e86\u5f88\u591a\u65b9\u6cd5\u8ba9jemalloc\u63d0\u4f9b\u5206\u914d\u5757\u7684\u51c6\u786e\u5b9e\u9645\u5927\u5c0f\uff0c\u4f46\u6ca1\u6709\u6210\u529f\u3002\uff08\u5404\u79cd\u9508\u8ff9\u548cjemallocAPI\u8fb9\u754c\u7684\u8bbe\u8ba1\u4f7f\u8fd9\u9879\u4efb\u52a1\u6bd4\u6211\u5e0c\u671b\u7684\u66f4\u56f0\u96be\u3002\uff09\u6211\u8fd8\u8bd5\u7528\u4e86jemalloc\u7684\u201c\u5927\u5c0f\u4ea4\u6613\u201d\u529f\u80fd\uff0c\u6709\u51e0\u4e2a\u4eba\u5411\u6211\u4fdd\u8bc1\u8fd9\u5c06\u662f\u4e00\u573a\u80dc\u5229\uff0c\u4f46\u5b83\u51cf\u6162\u4e86\u901f\u5ea6\u3002jemallocis\u548crustc\u7684\u5173\u7cfb\u975e\u5e38\u6df7\u4e71\uff0c\u81f3\u5c11\u6211\u80fd\u6f84\u6e05\u4e00\u70b9\u3002\n\u4f60\u53ef\u4ee5\u770b\u5230\u6211\u7684\u5931\u8d25\u591a\u4e8e\u6210\u529f\u3002\u627e\u5230\u6027\u80fd\u8d62\u5bb6\u6bd4\u8fc7\u53bb\u56f0\u96be\u5f97\u591a\u3002\u5f88\u591a\u4f4e\u5782\u7684\u679c\u5b9e\u90fd\u88ab\u6458\u4e0b\u6765\u4e86\uff0c\u6211\u7684\u6210\u529f\u7387\u4e5f\u4e0b\u964d\u4e86\u3002\u5728usualbenchmarks\u4e0a\u8fd0\u884c\u901a\u5e38\u7684\u5206\u6790\u5668\uff08\u5e76\u4e14\u53ea\u6d4b\u91cf\u6bcf\u4e2a\u57fa\u51c6\u7684\u6700\u7ec8\u677f\u6761\u7bb1\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u5408\u6210\u56fe\uff09\u6bd4\u4ee5\u524d\u6548\u7387\u66f4\u4f4e\u3002\n\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u6761\u524d\u8fdb\u7684\u9053\u8def\u3002lqd\u6700\u8fd1\u5f00\u59cb\u5168\u804c\u7814\u7a76\u7f16\u8bd1\u5668\u6027\u80fd\uff0c\u4ed6\u505a\u4e86\u4e00\u4e2a\u5927\u578b\u7684\u6570\u636e\u6536\u96c6\u7ec3\u4e60\uff0c\u5728\u8fd1800\u4e2a\u6700\u53d7\u6b22\u8fce\u7684\u677f\u6761\u7bb1\u4e0a\u8fd0\u884c\u4e86\u5404\u79cd\u5206\u6790\u5668\u3002\u4f0a\u5965\u3002\u8fd9\u5305\u62ec\u677f\u6761\u7bb1\u5185\u90e8\u548c\u8de8\u9879\u76ee\u6d4b\u91cf\u3002\u4e0ebenchmarksuite\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u7ed3\u679c\u8ba9\u6211\u4eec\u80fd\u591f\u6df1\u5165\u4e86\u89e3\u7f16\u8bd1\u5668\u5728\u66f4\u5927\u8303\u56f4\u7684\u771f\u5b9e\u4ee3\u7801\u4e2d\u7684\u6027\u80fd\uff0cbenchmarksuite\u670946\u4e2a\u57fa\u51c6\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u534a\u6765\u81ea\u771f\u5b9e\u4e16\u754c\u3002\n\u7f16\u8bd1\u5668\u7684\u67d0\u4e9b\u90e8\u5206\u5bf9\u4e8e\u67d0\u4e9b\u677f\u6761\u7bb1\u6765\u8bf4\u662f\u70ed\u95e8\u7684\uff0c\u4f46\u8fd9\u4e9b\u5728\u73b0\u6709\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u6ca1\u6709\u663e\u793a\u51fa\u6765\u3002\u5b8f\u89e3\u6790\u662f\u6700\u6781\u7aef\u7684\u4f8b\u5b50\uff0c\u770b\u8d77\u6765\u5f88\u53ef\u80fd\u662f\u53ef\u4ee5\u4f18\u5316\u7684\u3002\n\u67d0\u4e9b\u677f\u6761\u7bb1\u88ab\u5e7f\u6cdb\u4f7f\u7528\u4e14\u7f16\u8bd1\u901f\u5ea6\u8f83\u6162\uff0c\u4f8b\u5982syn/quote/proc-macro2\u3002\u53ef\u4ee5\u6539\u8fdb\u5417\uff1f\n\u6211\u4eec\u7684\u57fa\u51c6\u5957\u4ef6\u6709\u8bb8\u591a3\u62164\u5e74\u5386\u53f2\u7684\u6d41\u884c\u677f\u6761\u7bb1\u7248\u672c\u3002\u6211\u4eec\u5e94\u8be5\u66f4\u65b0\u5b83\u4eec\uff0c\u5e76\u53ef\u80fd\u6dfb\u52a0/\u5220\u9664\u4e00\u4e9b\u3002\n\u8be5\u5206\u6790\u4e3a2022\u5e74\u7684\u7f16\u8bd1\u5668\u6027\u80fd\u5de5\u4f5c\u63d0\u4f9b\u4e86\u8def\u7ebf\u56fe\u3002\u6211\u6628\u5929\u521a\u521a\u5b8c\u6210\u4e86\u5206\u6790\u8349\u6848\u548c\u8def\u7ebf\u56fe\u6587\u4ef6\uff0c\u4f46\u5b83\u4eec\u5df2\u7ecf\u53d6\u5f97\u4e86\u6210\u679c\u2026\n#93984\uff1a\u8be5PR\u4e3a\u5927\u4f4d\u96c6\u5f15\u5165\u4e86\u4e00\u79cd\u4f18\u5316\u7684\u8868\u793a\u6cd5\uff0c\u8fd9\u5927\u5927\u964d\u4f4e\u4e86\u5c11\u6570\u677f\u6761\u7bb1\u7684\u5cf0\u503c\u5185\u5b58\u8981\u6c42\uff08\u6700\u591a\u964d\u4f4e60%\uff01\uff09\uff0c\u800c\u4e14\u8fd8\u907f\u514d\u4e86\u5927\u91cf\u7684\u5185\u5b58\u590d\u5236\uff0c\u901f\u5ea6\u6700\u9ad8\u53ef\u8fbe14%\u3002\u4ee4\u4eba\u9ad8\u5174\u7684\u662f\uff0c\u8fd9\u4fee\u590d\u4e86\u81ea2018\u5e74\u63a8\u51fa\u201c\u65b0\u201d\u501f\u9605\u68c0\u67e5\u5668\u4ee5\u6765\u7684\u6700\u7ec8\u5353\u8d8a\u6027\u80fd\u9000\u5316\uff01\n#94316\uff1a\u8be5PR\u4f18\u5316\u4e86\u5305\u542b\u8f6c\u4e49\u7b26\u7684\u5b57\u7b26\u4e32\u6587\u672c\u7684\u5904\u7406\uff0c\u5728\u5c11\u6570\u6d41\u884c\u7684\u677f\u6761\u7bb1\u4e0a\u6700\u591a\u53ef\u83b7\u5f977%\u7684\u80dc\u5229\u3002\n\u4ece2021\u5e7411\u670811\u65e5\u52302022\u5e7402\u670825\u65e5\uff0crustc\u57fa\u51c6\u5957\u4ef6\u7684\u7ed3\u679c\u6709303\u9879\u6539\u8fdb\uff0c\u5176\u4e2d\u8bb8\u591a\u6539\u8fdb\u8d85\u8fc7\u4e8610%\uff0c\u53ea\u670921\u9879\u56de\u5f52\uff0c\u5982\u4e0b\u622a\u56fe\u603b\u7ed3\u3002\n\u5bf9\u4e8erustc\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd8\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u7ed3\u679c\uff0c\u5c31\u662frustc\u5f15\u5bfc\u65f6\u95f4\u51cf\u5c11\u4e8610%\u3002\n\u5728\u8fd93.5\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0c\u8fd9\u662f\u4e00\u4e2a\u5065\u5eb7\u7684\u7ed3\u679c\u3002\u8fd9\u8981\u5f52\u529f\u4e8e\u8bb8\u591a\u4eba\u7684\u52aa\u529b\uff0c\u5e76\u5ef6\u7eed\u4e86\u7ee9\u6548\u6539\u8fdb\u7684\u957f\u671f\u8d8b\u52bf\u3002", "note_en": "Between 2016 and 2020 I wrote a series of blog posts called  \u201cHow to speed upthe Rustcompiler\u201d.These were mostly about my work on the Rust compiler, plus some updates on theprogress on the Rust compiler\u2019s speed in general.\n I am now back on the Rust bandwagon as a member of Futurewei\u2019s Rust team, andit\u2019s time to start up the blog series again.\n   #90746: This PR changed a hotbut non-critical  assert! to a  debug_assert!, meaning it isn\u2019t run inrelease builds, for wins of up to 5% on two benchmarks.\n #91246:  Layout::array is afunction, involved with vector growth, that is instantiated frequently. This PRmade it more concise, reducing the amount of generated LLVM IR, and reducingcompile times by up to 4% on a few benchmarks, with sub-1% improvements on lotsof benchmarks, though the results were a bit noisy.\n #91844: This PR eliminated the ObligationCauseData structure, reducing allocation rates, for some sub-1%wins in lots of benchmarks.\n hashbrown #305: rustc useshash tables heavily, and I discovered that approximately one third of allnon-modifying hash table lookups are on an empty table!  hashbrown wouldnonetheless hash the inputs and perform a normal lookup in the case. This PRchanged it to fail immediately if the table is empty, for one win of 11% andlots in the 1-4% range. This change was later merged into rustc as part of the hashbrown update in #92998.\n #91948: This PR, co-authoredwith  camelid, avoided lots of allocations inrustdoc caused by symbol-to-string conversions, for good wins across allrustdoc benchmarks of up to 5%.\n #92604: This PR optimizedLEB128 reading during metadata encoding (yet again) for wins of up to 3%across many benchmarks.\n #93066: The  Decoder traitused for metadata decoding was fallible, using  Result throughout. Butdecoding failures should only happen if something highly unexpected happens(e.g. metadata is corrupted) and on failure the calling code would just abort.This PR changed  Decoder to be infallible throughout\u2014panicking immediatelyinstead of panicking slightly later\u2014thus avoiding lots of pointless  Resultpropagation, for wins across many benchmarks of up to 2%.\n #93148: rustc uses interning pervasively, forstrings and many other internal types. Interned types are guaranteed unique andcan be compared and hashed cheaply (by considering just the pointer, ratherthan the contents), but some of the interned types weren\u2019t taking advantage ofthat. This large PR overhauled the types used for interning so they were moreconsistent, for wins across many benchmarks of up to 4%.\n   I tried to speed up lexing for the   externs stresstestby changing the handling of the first char in new tokens, but it didn\u2019t help.\n  I tried shrinking various arena-allocated types, such as  Ty and Predicate, but it didn\u2019t help enough to be worth the effort.\n  I drafted a dead store elimination optimization pass for MIR, inspired by thepresence of obviously redundant code relating to drop flags. It worked, butthe measurable performance benefits were negligible, and not worth the extracode.\n  I tried various ways to improve the representation of vectors use with ast::PathSeg and  AttrVec, without success.\n  I tried to  further optimizecode relating to vector growth to minimize LLVM IR generation, but failed to do it in a way thatdidn\u2019t reduce the speed of the compiled code.\n  I tried changing the minimum capacity of non-empty Hash tables from 3 to 7.This gave some small (1-2%) performance wins, but increased peak memory usageby more (5-10%) and so wasn\u2019t worth it.\n  I tried  numerousthingsto improve the  FxHasher algorithm used by rustc\u2019s hash tables, withoutsuccess.\n  I tried increasing the buffer size used by  StableHasher, which is usedwith incremental compilation, but caused a slight performance regression.\n  I tried some tweaks with interning: pre-interning some common internedvalues, caching some recently interned values, and avoiding a double lookupwhen interning symbols. None of them helped.\n  I tried speeding up  find_library_crate and failed, though some clean-ups I did along the way  weremerged.\n    I tried a bunch of things to get jemalloc to provide accurate actual sizes ofallocated blocks, without success. (The design of various Rust and jemallocAPI boundaries made this task more difficult than I would have liked.) I alsoexperimented with jemalloc\u2019s \u201csized deallocation\u201d feature, which severalpeople assured me would be a win, but it slowed things down. The way jemallocis hooked into rustc is quite messy and at least I was able to  clarify it alittle.\n You can see that I had more failures than successes. Finding performance winsis a lot harder than it used to be. Much of the low-hanging fruit has beenplucked, and my success rate is down. Running the usual profilers on the  usualbenchmarks(and only measuring the final crate of each benchmark, not the wholecompilation graph) is less effective than before.\n   Fortunately, there is a path forward.  lqd recentlystarted working full-time on compiler performance, and he did a  large datagathering exercise, running avariety of profilers across almost 800 of the most popular crates on crates.io. This included both intra-crate andcross-project measurements. The results give us insight into compilerperformance across a much larger range of real-world code than the benchmarksuite, which has 46 benchmarks, only half of which are derived from real-worldcrates.\n  Some parts of the compiler are hot for some crates, but these don\u2019t show upin the existing benchmarks. Macro parsing is the most extreme example, andlooks likely to be quite optimizable.\n  Certain crates are both widely used and slow to compile, such as syn/ quote/ proc-macro2. Can they be improved?\n    Our benchmark suite has versions of numerous popular crates that are 3 or 4years old. We should update them, and possibly add/remove some.\n This analysis has informed a roadmap for compilerperformance work in 2022. I finished the draft analysis and roadmap documentsjust yesterday, but they are already bearing fruit\u2026\n #93984: This PR introduced anoptimized representation for large bitsets, which greatly reduces the peakmemory requirements for a few crates (by up to 60%!), and also avoids a lot ofmemory copying, for speed wins of up to 14%. Pleasingly, this fixed the  final outstanding performanceregression from theintroduction of the \u201cnew\u201d borrow checker back in 2018!\n #94316: This PR optimized theprocessing of string literals containing escapes, for up to 7% wins on a fewpopular crates.\n   From the period  2021-11-11 to2022-02-25there were 303 improvements to the results of the rustc benchmark suite, manyof which were over 10%, and only 21 regressions, as the following screenshotsummarizes.\n  For rustc developers there was the additional nice result that rustc bootstraptimes dropped by 10%.\n This is a healthy result for this 3.5 month period. It is due to the efforts ofmany people, and continues the long trend of performance improvements.", "posttime": "2022-02-25 23:42:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,rust,\u6027\u80fd", "title": "\u5982\u4f55\u57282022\u5e74\u52a0\u901fRust\u7f16\u8bd1\u5668", "title_en": "How to speed up the Rust compiler in 2022", "transed": 1, "url": "https://nnethercote.github.io/2022/02/25/how-to-speed-up-the-rust-compiler-in-2022.html", "via": "", "real_tags": ["\u7f16\u8bd1", "rust", "\u6027\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075011, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5343\u5146\u4ee5\u592a\u7f51\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u5b83\u65e0\u5904\u4e0d\u5728\uff0c\u5982\u679c\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u6709\u4e00\u4e2aRJ-45\u7aef\u53e3\uff0c\u5b83\u5f88\u6709\u53ef\u80fd\u6210\u4e3a\u5343\u5146\u4ee5\u592a\u7f51\u7f51\u7edc\u63a5\u53e3\u3002\n\u5373\u4f7f\u4f60\u770b\u770b\u5df2\u7ecf\u8d85\u8fc720\u5e74\u5386\u53f2\u7684\u8ba1\u7b97\u673a\uff0c\u5728\u5b83\u4eec\u7684\u89c4\u683c\u8868\u4e0a\u552f\u4e00\u7a81\u51fa\u7684\u4ecd\u7136\u662f\u5343\u5146\u4ee5\u592a\u7f51\u3002\n\u7136\u800c\uff0c\u5982\u4eca\uff0c\u5343\u5146\u4ee5\u592a\u7f51\uff081GBE\uff09\u6709\u65f6\u8fd8\u4e0d\u591f\u3002\u5343\u5146\u4f4f\u5b85\u4e92\u8054\u7f51\u63a5\u5165\u53d8\u5f97\u8d8a\u6765\u8d8a\u666e\u904d\uff0c\u800c\u8fd9\u4e9b\u6d88\u8d39\u8005\u4e2d\u7684\u5927\u591a\u6570\u90fd\u5728\u4f7f\u7528WiFi\uff0c\u4e0d\u592a\u53ef\u80fd\u83b7\u5f97\u4ed6\u4eec\u53ef\u80fd\u671f\u671b\u7684\u5343\u5146\u6027\u80fd\u3002\u6709\u7ebf\u8fde\u63a5\u53ef\u4ee5\u8f7b\u677e\u5730\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u4e92\u8054\u7f51\u548c\u5c40\u57df\u7f51\u94fe\u63a5\u3002\n\u4e07\u5146\u4ee5\u592a\u7f51\uff0810GBE\uff09\u6b63\u5728\u7f13\u6162\u5730\u8fdb\u5165\u6d88\u8d39\u5e02\u573a\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u82f9\u679c\u4ea7\u54c1\u5df2\u7ecf\u4f7f\u7528\u4e07\u5146\u4ee5\u592a\u7f51\u6709\u4e00\u6bb5\u65f6\u95f4\u4e86\uff0c\u4f46\u4f7f\u7528\u4e07\u5146\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u7684\u4eba\u4ecd\u7136\u5f88\u5c11\u3002\n\u6211\u6000\u7591\u6d88\u8d39\u8005\u4ee5\u592a\u7f51\u7684\u901f\u5ea6\u5728\u8fc7\u53bb20\u5e74\u91cc\u6ca1\u6709\u63d0\u9ad8\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b83\u5df2\u7ecf\u8db3\u591f\u5feb\u4e86\u3002\u7136\u800c\uff0c\u50cf\u5b58\u50a8\u8fd9\u6837\u7684\u4e1c\u897f\u73b0\u5728\u5df2\u7ecf\u663e\u8457\u52a0\u5feb\u4e86\u901f\u5ea6\uff0c\u4e0d\u4ec5\u662f\u66f4\u5feb\u7684\u78c1\u76d8\uff08\u5e73\u5747SATA\u786c\u76d8\u7684\u8fd0\u884c\u901f\u5ea6\u7ea6\u4e3a2.5\u5343\u5146\u4f4d\uff09\uff0c\u800c\u4e14\u95ea\u5b58\u7ed9\u4e86\u6211\u4eec6\u5343\u5146\u4f4d\u7684\u5355\u9a71\u52a8\u5668\u901f\u5ea6\uff0c\u5982\u679c\u4f60\u770b\u770bNVMe\uff08\u6211\u7684\u786c\u76d8\u53ef\u4ee5\u8bfb\u53d6\u8fd120\u5343\u5146\u4f4d\uff09\u3002\u4f46\u5f53\u4f60\u770b\u770b\u6211\u4eec\u53ef\u4ee5\u53d1\u9001\u7ed9\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u6570\u636e\uff08\u60f3\u60f3\u50cfNAS\u8fd9\u6837\u7684\u8fdc\u7a0b\u5b58\u50a8\uff09\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u53d7\u52301GBE\u7684\u9650\u5236\u3002\n\u670d\u52a1\u5668\u662f\u53e6\u4e00\u56de\u4e8b\uff0c\u4f46\u4ecd\u6709\u76f8\u5f53\u591a\u7684\u670d\u52a1\u5668\u4ecd\u57281GBE\u300110GBE\u548c25GBE\uff08\u6216\u66f4\u5feb\uff09\u4e0a\u8fd0\u884c\u7528\u4e8e\u5e26\u5bbd\u5bc6\u96c6\u578b\u7684\u4efb\u4f55\u5e94\u7528\uff0c\u56e0\u4e3a\u5f53\u9762\u4e34\u5de8\u5927\u7684\u8ba1\u7b97\u80fd\u529b\u548c\u5b58\u50a8\u5bb9\u91cf\u65f6\uff0c\u7f51\u7edc\u53ef\u80fd\u5f88\u5feb\u6210\u4e3a\u4e3b\u8981\u74f6\u9888\u3002\n\u7136\u800c\uff0c\u535510GBE\u548c25GBE\u94fe\u8def\u5e76\u4e0d\u603b\u662f\u60a8\u60f3\u8981\u7684\u3002\u5982\u679c\u4f60\u60f3\u8981\u66f4\u591a\u7684\u5e26\u5bbd\u5462\uff1f\u5982\u679c\u60a8\u8fde\u63a5\u7684\u4ea4\u6362\u673a\u9700\u8981\u8f6f\u4ef6\u5347\u7ea7\u6216\u5d29\u6e83\u600e\u4e48\u529e\uff1f\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u5f88\u591a\u670d\u52a1\u5668\u7684NIC\u90fd\u6709\u4e24\u4e2a\u7269\u7406\u7aef\u53e3\uff0c\u5b83\u4eec\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u4ea4\u6362\u673a\uff08\u7528\u4e8e\u5e26\u5bbd\u589e\u52a0\uff09\u6216\u4e0d\u540c\u7684\u4ea4\u6362\u673a\uff08\u7528\u4e8e\u5197\u4f59/\u6545\u969c\u5207\u6362\uff09\u3002\n\u4f46\u662f\u7cfb\u7edf\u5982\u4f55\u5229\u7528\u591a\u4e2a\u4ee5\u592a\u7f51\u94fe\u8def\u5462\uff1f\u4ed6\u4eec\u5bf9\u4ea4\u6362\u673a\u548c\u670d\u52a1\u5668\u8fdb\u884c\u7f16\u7a0b\uff0c\u4ee5\u4f7f\u7528\u94fe\u8def\u805a\u5408\uff08LAG\uff09\u3002\u94fe\u8def\u805a\u5408\u610f\u5473\u7740\u4e24\u6761\u94fe\u8def\u5171\u4eab\u4e00\u4e2aIP\u548cMAC\u5730\u5740\uff0c\u5e76\u8981\u6c42\u4ea4\u6362\u673a\u548c\u7cfb\u7edf\uff08\u81f3\u5c11\u5728\u901a\u5e38\u90e8\u7f72\u7684802.3ad\u6807\u51c6\u4e2d\uff09\u6539\u53d8\u5176\u884c\u4e3a\u3002\u94fe\u63a5\u805a\u5408\u6309\u4e0d\u540c\u7684\u540d\u79f0\u547d\u540d\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u914d\u7f6e\u5b83\u7684\u4f9b\u5e94\u5546\uff0c\u540d\u79f0\u5305\u62ec\uff1a\uff1b\u805a\u5408\u63a5\u53e3\u3001NIC\u56e2\u961f\u3001\u7aef\u53e3\u901a\u9053\u548c\u90a6\u5fb7\u3002\u6700\u540e\u4e00\u4e2a\u4e0d\u65f6\u5f15\u8d77\u6709\u8da3\u7684\u535a\u5ba2\u6807\u9898\uff08A\uff09\n\u4f46\u662f\uff0c\u94fe\u8def\u805a\u5408\u4e0d\u4f1a\u76f4\u63a5\u5bfc\u81f4\u5355\u4e2a\u8fde\u63a5\u7684\u6027\u80fd\u63d0\u9ad8\u3002\u8fd9\u662f\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u548c\u7f51\u7edc\u5c42\u901a\u5e38\u4e00\u6b21\u5c06\u4e00\u4e2a\u8fde\u63a5\u6307\u5411\u4e00\u4e2a\u4ee5\u592a\u7f51\u94fe\u8def\u3002\u56e0\u4e3aTCP\u548c\u5176\u4ed6\u8fdb\u884c\u62e5\u585e\u63a7\u5236\u7684\u534f\u8bae\u5728\u5448\u73b0\u4e0d\u4e00\u81f4\u7684\u6027\u80fd\u53cd\u9988\u65f6\uff08\u56e0\u4e3a\u4e0d\u540c\u7684\u94fe\u8def\u5177\u6709\u4e0d\u540c\u7684\u5bb9\u91cf\u548c\u5ef6\u8fdf\uff09\u53ef\u80fd\u4f1a\u53d8\u5f97\u6df7\u4e71\u3002\u867d\u71362x10GBE\u53ef\u80fd\u610f\u5473\u7740\u60a8\u670920 GB\u7684\u53ef\u7528\u5e26\u5bbd\uff0c\u4f46\u7531\u4e8e\u8fde\u63a5\u5b9a\u5411/\u54c8\u5e0c\u903b\u8f91\uff0c\u5355\u4e2aTCP\u8fde\u63a5\u53ea\u80fd\u4ee510 GB\u7684\u901f\u5ea6\u8fd0\u884c\u3002\n\u5728\u4e0a\u4e00\u7bc7\u5e16\u5b50\u4e2d\uff0c\u6211\u8c08\u5230\u4e86LTO\u78c1\u5e26\u5907\u4efd\uff0c\u4ee5\u53ca\u9a71\u52a8\u5668\u672c\u8eab\u5982\u4f55\u6bd4\u6807\u51c6\u7684\u5343\u5146\u4ee5\u592a\u7f51\u94fe\u8def\u8fdb\u884c\u8bfb/\u5199\u64cd\u4f5c\uff0c\u5982\u679c\u901a\u8fc7\u7f51\u7edc\u5c06\u6570\u636e\u6d41\u4f20\u8f93\u5230\u78c1\u5e26\uff0c\u5efa\u8bae\u4f7f\u7528\u4e07\u5146\u7f51\u7edc\uff0c\u4ee5\u907f\u514d\u51fa\u73b0\u95ee\u9898\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\uff0c\u88c5\u6709\u8fd0\u884c\u78c1\u5e26\u673a\u6240\u9700SAS\u5361\u7684\u673a\u5668\u6d88\u8017\u4e86\u6700\u540e\u4e00\u4e2a\u53ef\u80fd\u88c5\u670910GBE\u7f51\u5361\u7684PCIe\u63d2\u69fd\u3002\u5373\u4f7f\u4e3a\u627f\u8f7d\u78c1\u5e26\u673a\u7684PC\u4f9b\u7535\u7684\u7cfb\u7edf\u662f10GBE\u3002\u8fd9\u610f\u5473\u7740\u6211\u7684\u78c1\u5e26\u5907\u4efd\u901f\u5ea6\u6bd4\u9700\u8981\u7684\u6162\u5f97\u591a\uff08\u5e76\u4e14\u5728mbuffer\u4e0a\u6682\u505c\uff09\u3002\n\u4f46\u6211\u6709USB 3.0\u7aef\u53e3\uff0c\u5982\u679c\u6709USB 3\u7aef\u53e3\uff0c\u5c31\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528USB\u5343\u5146\u4ee5\u592a\u7f51\u52a0\u5bc6\u72d7\u3002\n\u7136\u800c\uff0c\u95ee\u9898\u5728\u4e8e\uff0c\u867d\u7136\u6211\u672c\u53ef\u4ee5\u5c06\u4e3b\u677f\u548cUSB NIC\u8bbe\u7f6e\u4e3a\u6ede\u540e\u72b6\u6001\uff0c\u4f46\u8fd9\u4e0d\u4f1a\u63d0\u9ad8\u6211\u7684\u5355\u4e2aTCP\u8fde\u63a5\uff08\u901a\u8fc7mbuffer\uff09\u5411\u78c1\u5e26\u673a\u9988\u7535\u7684\u901f\u5ea6\u3002\n\u6211\u771f\u7684\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u5c06\u4e24\u4e2aNIC\u7684\u541e\u5410\u91cf\u5408\u5e76\u5230\u4e00\u4e2a2gbit/s\u6d41\u4e2d\u3002\n\u591a\u8def\u5f84TCP\uff08MPTCP\uff09\u6216RFC8684\u662f\u4e00\u4e2a\u6269\u5c55\uff0c\u5141\u8bb8\u5355\u4e2aTCP\u5957\u63a5\u5b57\u8de8\u8d8a\u591a\u4e2aIP\u5730\u5740\u548c\u7f51\u7edc\u63a5\u53e3\u3002\n\u8be5\u6269\u5c55\u76ee\u524d\u5f88\u5c11\u4f7f\u7528\uff0c\u53ea\u6709OpenMTCPRouter\u9879\u76ee\u548c\u82f9\u679c\u7684Siri\u4e24\u79cd\u5e38\u7528\u7684\u90e8\u7f72\u7528\u9014\nOpenMTCPRouter\u4f7f\u7528MPTCP\u6765\u4ee3\u7406/\u96a7\u9053\u8fde\u63a5\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u541e\u5410\u91cf\uff0c\u5141\u8bb8\u60a8\u5c06\u591a\u4e2a\u4f4f\u5b85\u8fde\u63a5\u94fe\u63a5\u5230\u4e00\u4e2a\u66f4\u5feb\u7684\u4ee3\u7406\u670d\u52a1\u5668\u94fe\u63a5\u4e2d\uff0c\u800cSiri\u4f7f\u7528\u5b83\u6765\u5904\u7406WiFi\u548c\u8702\u7a9d\u7f51\u7edc\u4e4b\u95f4\u7684\u5feb\u901f\u6545\u969c\u5207\u6362\uff0c\u4ee5\u786e\u4fdd\u5728\u4f7f\u7528\u8bed\u97f3\u52a9\u624b\u65f6\u83b7\u5f97\u6700\u4f73\u4f53\u9a8c\u3002\nMPTCP\u57285.6\u7248\u672c\u4e2d\u88ab\u5408\u5e76\u5230Linux\u5185\u6838\u4e2d\uff0c\u4f46\u662f\u6211\u4e0d\u77e5\u9053\u6709\u54ea\u4e2a\u4e3b\u6d41\u53d1\u884c\u7248\u63d0\u4f9b\u5e76\u542f\u7528\u4e86\u5b83\u3002Ubuntu 20.10\u5728\u51765.13\u5185\u6838\u4e0a\u9644\u5e26\u4e86MPTCP\uff0c\u800cDebian Bullseye\u4f7f\u75285.10\uff0c\u4f46\u7981\u7528\u4e86MPTCP\u3002\n\u9664\u4e86\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u63d0\u4f9bMPTCP\u652f\u6301\u4e4b\u5916\u3002\u6211\u53d1\u73b0MPTCP\u7684\u53ef\u7528\u6027\u6545\u4e8b\u2026\u4e0d\u597d\uff1f\u5bf9\u67d0\u4e9b\u4e8b\u60c5\u8bf4\u8fd9\u6837\u7684\u8bdd\u611f\u89c9\u771f\u7684\u5f88\u7cdf\u7cd5\uff0c\u4f46\u6211\u81ea\u5df1\u5bf9MPTCP\u7684\u7814\u7a76\u4e00\u76f4\u4ee4\u4eba\u607c\u706b\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u5199\u4e8e2022\u5e742\u670824\u65e5\uff0c\u5f53\u4f60\u8bfb\u5230\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u60c5\u51b5\u53ef\u80fd\u5df2\u7ecf\u6539\u53d8\u4e86\n\u7531\u4e8eMPTCP\u73b0\u5728\u5728\u4e3b\u7ebfLinux\u4e2d\u53d1\u5e03\uff0c\u5b9e\u9645\u7684\u9879\u76ee\u7f51\u7ad9\u672c\u8eab\u4f3c\u4e4e\u6ca1\u6709\u8ddf\u4e0a\u8fdb\u5ea6\uff0c\u7f51\u7ad9\u4e0a\u7684\u6587\u6863\u8ba9\u6211\u5927\u5403\u4e00\u60ca\uff0c\u7ed3\u679c\u53d1\u73b0\u5199\u4e0b\u7684\u4e1c\u897f\u4e0d\u518d\u53d7\u652f\u6301\uff0c\u6216\u8005\u6211\u53ea\u662f\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u65b9\u6cd5\u6765\u505a\u4ed6\u4eec\u8bb0\u5f55\u7684\u4e8b\u60c5\u3002\u8001\u5b9e\u8bf4\uff0c\u6211\u53ef\u80fd\u6709\u70b9\u50bb\uff0c\u4f46\u6211\u53d1\u73b0\u6700\u597d\u7684\u6d3b\u6587\u6863\u662fMPTCP\u7684\u5185\u6838\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u6839\u636e\u5b9a\u4e49\uff0c\u5b83\u4eec\u5fc5\u987b\u53cd\u6620MPTCP\u7684\u5f53\u524dAPI\u3002\n\u6211\u8ba4\u4e3a\uff0c\u603b\u4f53\u800c\u8a00\uff0cMPTCP\u5e26\u6765\u7684\u8bb8\u591a\u75db\u82e6\u662f\uff0c\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u81ea\u52a8\u68c0\u6d4b\u5e76\u5f00\u59cb\u591a\u8def\u5f84\u901a\u4fe1\uff0c\u7528\u6237\u7a7a\u95f4\u53ef\u4ee5\u4e0d\u5fc5\u5173\u5fc3\u8fde\u63a5\u7684\u7ec6\u8282\u3002\n\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u627e\u4e0d\u5230\u4e00\u79cd\u65b9\u6cd5\u4ece\u7528\u6237\u7a7a\u95f4\uff08\u5ffd\u7565netlink\u7b49\uff09\u4e2d\u5206\u8fa8\u51fa\u4e3b\u673a\u7684\u591a\u4e2a\u7aef\u70b9\uff0c\u56e0\u6b64\u6211\u653e\u5f03\u4e86\u7f16\u5199mptcp\u5ba2\u6237\u673a\u5de5\u5177\u7684\u5c1d\u8bd5\u3002\n\u6211\u5bf9MPTCP\u4e0d\u6ee1\u610f\uff0c\u6211\u8ba4\u4e3a\u5b8c\u5168\u7528\u6237\u7a7a\u95f4\u7248\u672c\u7684\u8fd9\u4e2a\u6982\u5ff5\u662f\u53ef\u80fd\u7684\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u5f53\u65f6\u6b63\u5728\u548c\u4e00\u4e2a\u505a\u5408\u540c\u5de5\u4f5c\u7684\u4eba\u6709\u4e00\u4e2a\u5e93\uff0c\u5b83\u4f3c\u4e4e\u80fd\u591f\u5c06\u591a\u4e2a\u8fde\u63a5\u201c\u7ed1\u5b9a\u201d\u5728\u4e00\u8d77\u3002\u7136\u800c\uff0c\u5728\u5c1d\u8bd5\u8ba9\u5b83\u5de5\u4f5c\u65f6\uff0c\u6211\u53d1\u73b0\u8be5\u5e93\u6ca1\u6709\u5b9e\u73b0\u901f\u5ea6\u6539\u8fdb\uff0c\u6545\u969c\u5207\u6362\u884c\u4e3a\u6700\u591a\u4e5f\u4e0d\u53ef\u9884\u6d4b\u3002\n\u6240\u4ee5\u6211\u52aa\u529b\u786e\u4fdd\u5b83\u53ef\u4ee5\uff0c\u5bf9\u5e93\u8fdb\u884c\u5168\u9762\u68c0\u67e5\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u4fee\u590d\u3002\u4e00\u65e6\u5b83\u53d1\u6325\u4e86\u8db3\u591f\u7684\u4f5c\u7528\uff0c\u6211\u5c31\u505a\u51fa\u4e86\u53ef\u80fd\u7834\u574f\u56fe\u4e66\u9986\u7684\u51b3\u5b9a\u3002\u6211\u81ea\u5df1\u505a\u4e86\u53c9\u5b50\u6765\u63a7\u5236\u884c\u4e3a\u7684\u53d8\u5316\u3002\n\u591a\u8def\u5f84go\u5e93\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u673a\u5668\u3002\u56e0\u4e3a\u867d\u7136MPTCP\u6709\u539f\u59cb\u6570\u636e\u5305\u8bbf\u95ee\u6743\uff0c\u53ef\u4ee5\u8fdb\u884c\u91cd\u8bd5\u548c\u5b50\u6d41\u6392\u5e8f\uff0c\u4f46\u591a\u5f84\u5374\u4e0d\u884c\u3002\u5b83\u9700\u8981\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u7f51\u7edc\u9635\u5217\u3002\u5eb7\u6d85\u72c4\u683c\u5927\u5b66\u548c\u4ed6\u4eec\u7684\u56e2\u961f\u4e00\u8d77\u4e3a\u5e26\u5bbd\u548c\u5f39\u6027\u3002\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u7b26\u5408\u7f51\u7edc\u7684\u4e1c\u897f\u3002go\u4e2d\u7684Conn\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u53ef\u9760\u6d41\uff08\u4f8b\u5982\uff0cWebSockets\u3001TLS\u8fde\u63a5\u3001\u67d0\u4e9b\u6a21\u5f0f\u4e0b\u7684SCTP\u7b49\uff09\uff0c\u53ef\u5728\u8be5\u5e93\u4e2d\u4f7f\u7528\u6240\u6709\u7ec4\u5408\uff01\n\u7531\u4e8e\u4f7f\u7528\u4e86\u7c7b\u4f3cTCP\u7684\u5957\u63a5\u5b57\uff0c\u6027\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u50cf\u60a8\u81ea\u5df1\u4f7f\u7528UDP\u7f16\u5199\u7684\u90a3\u6837\u597d\uff0c\u4f46\u8003\u8651\u5230\u591a\u8def\u5f84\u5e93\u662f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8\u7684\uff0c\u6211\u51b3\u5b9a\u5373\u4f7f\u5728\u5206\u53c9\u4e4b\u540e\u4e5f\u4fdd\u6301\u8fd9\u79cd\u65b9\u5f0f\u3002\n\u73b0\u5728\u6211\u5df2\u7ecf\u6709\u4e86\u56fe\u4e66\u9986\uff0c\u4f46\u6211\u4ecd\u7136\u9700\u8981\u4e00\u4e2a\u5de5\u5177\u6765\u5305\u88c5\u5b83\uff0c\u4ee5\u4f9b\u65e5\u5e38\u4f7f\u7528\u2026\nBondcat\u7684\u7528\u6237\u754c\u9762\u53d7\u5230ncat\u7684\u542f\u53d1\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u591a\u4e2aIP\u5730\u5740/\u7aef\u53e3\u7ec4\u5408\u8fde\u63a5\u5230\u4e3b\u673a\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6709\u4e86\u5730\u5740\u9009\u62e9\u65b9\u9762\u7684\u4e00\u4e9b\u77e5\u8bc6\uff08\u89c1\u4e0b\u6587\uff09\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u8de8\u5e73\u53f0\u7a81\u7834\u5355\u5343\u5146\u4ee5\u592a\u7f51\u901f\u5ea6\u7684\u9650\u5236\u3002\n\u6211\u7279\u522b\u63d0\u5230\u5343\u5146\u4ee5\u592a\u7f51\uff0c\u56e0\u4e3a\u5c31\u6211\u6240\u7ba1\u7406\u7684\u800c\u8a00\uff0c\u6211\u5e76\u6ca1\u6709\u8bd5\u56fe\u4f18\u5316\u901f\u5ea6\u8d85\u8fc710\u5343\u5146/\u79d2\u7684\u591a\u8def\u5f84\u5e93\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u90a3\u4e2a\u9636\u6bb5\uff0c\u53ef\u80fd\u6709\u66f4\u597d\u7684\u9009\u62e9\u53ef\u4ee5\u5728\u975e\u5e38\u5feb\u7684\u6ede\u540e\u7f51\u7edc\u4e0a\u79fb\u52a8\u5927\u91cf\u6570\u636e\uff0c\u4f8b\u5982GridFTP\u3002\n\u4f46\u662f\uff0c\u7531\u4e8e\u5b83\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8enetcat/ncat\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u5176\u4e0a\u5305\u88c5\u8fde\u63a5\uff0c\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528OpenSSH\u7684proxy\u547d\u4ee4\u83b7\u5f97\u6bd4\u5343\u5146\u4f4dSFTP/SCP\u66f4\u5feb\u7684\u4f20\u8f93\uff1a\n\u5bf9\u4e8e\u76d1\u542c\u7aef\uff0cbondcat\u5305\u62ec\u4e00\u4e2a\u4e2d\u7ee7\u6a21\u5f0f\uff0c\u5b83\u63a5\u53d7\u8fde\u63a5\u5e76\u5c06\u6570\u636e\u8f6c\u53d1\u5230\u53e6\u4e00\u4e2atcp\u7aef\u70b9\u3002\u4e3a\u4e86\u8ba9\u8fd9\u4e2assh\u8bbe\u7f6e\u5de5\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4e2d\u7ee7\u6a21\u5f0f\u6307\u5411\n\u5982\u679c\u8fd9\u4e0d\u662f\u4f60\u7684\u4f7f\u7528\u98ce\u683c\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c\u4e00\u4e2a\u666e\u901a\u7684netcat\u6765\u53d1\u9001\u4fe1\u606f\uff1a\n\u73b0\u5728\u9700\u8981\u4e3abondcat\u505a\u4e00\u4e9b\u8003\u8651\uff0c\u56e0\u4e3aMPTCP\u5bf9\u60a8\u7684\u7f51\u7edc\u5806\u6808\u6709\u7740\u6bd4bondcat\u66f4\u597d\u7684\u4e86\u89e3\uff08\u6bd5\u7adf\uff0c\u53d1\u6325\u795e\u5947\u4f5c\u7528\u7684\u5e93\u53ea\u770b\u5230\u4e86\u4e00\u5806\u8fde\u63a5\uff0c\u4ec5\u6b64\u800c\u5df2\uff09\u3002\u60a8\u9700\u8981\u5c0f\u5fc3\u9009\u62e9\u7528\u4e8e\u7528\u4f8b\u7684\u5730\u5740\uff1a\n\u7528\u4f8b\uff1a\u901a\u8fc7\u4e92\u8054\u7f51\u6216\u8bd5\u56fe\u6446\u8131\u6ede\u540e\u6346\u7ed1\u5305\u7684\u9650\u5236\n\u8fd9\u79cd\u7528\u6cd5\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u50cf\u8c03\u7528\u666e\u901anetcat\uff08\u5355\u5730\u5740\uff09\u4e00\u6837\u8c03\u7528\u5b83\uff0c\u5e76\u4f7f\u7528-multiplier\u6807\u5fd7\u6765\u8868\u793a\u8981\u542f\u52a8\u591a\u5c11\u989d\u5916\u8fde\u63a5\u3002\u5982\u679c\u8981\u6df7\u5408\u4e3b\u673aIPv4\u548cIPv6\u5730\u5740\uff0c\u6b64\u6807\u5fd7\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u5730\u5740\u3002\n\u6211\u53d1\u73b0\u4e3a\u5c40\u57df\u7f51\u5b9a\u4f4dIPv6\u5730\u5740\u662f\u6700\u5bb9\u6613\u7684\u3002\u4f46\u8fd9\u90fd\u662f\u5047\u8bbe\u4f60\u6240\u5728\u7684\u5c40\u57df\u7f51\u6709\u8def\u7531\u5668\u5e7f\u544a\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u8fd9\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5219\u672c\u5730IPv4\u5730\u5740\u6b63\u5e38\u5de5\u4f5c\u3002\n\u7136\u800c\uff0c\u8fd9\u901a\u5e38\u53ea\u9002\u7528\u4e8e10GBE-&gt\uff1b{n} x1GBE\u8bbe\u7f6e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cBondcat\u4f1a\u5c1d\u8bd5\u8fde\u63a5\u673a\u5668\u4e0a\u7684\u6bcf\u4e2aIP\u5730\u5740\uff0c\u4ee5\u5e2e\u52a9\u81ea\u52a8\u63d0\u901f\u3002\u4e3a\u4e86\u5e2e\u52a9\u8fd9\u79cd\u201c\u81ea\u52a8\u201d\u5de5\u4f5c\uff0c\u6700\u597d\u4ece\u63a5\u53e3\u6700\u591a\u7684\u673a\u5668\u4e0a\u542f\u52a8\u8fde\u63a5\u3002\u6b64\u529f\u80fd\u53ef\u5728-a\u6216-no\u81ea\u52a8\u68c0\u6d4b\u7684\u60c5\u51b5\u4e0b\u7981\u7528\n\u5047\u8bbe\u60a8\u6240\u5728\u7684\u7cfb\u7edf\u6709\u4e24\u6761\u94fe\u8def\uff0c\u5219\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u6761\u8def\u7531\uff0c\u8ba9\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u901a\u8fc7\u5907\u4efd\u94fe\u8def\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u5e94\u8be5\u900f\u660e\u5730\u5de5\u4f5c\u3002\n\u6211\u53d1\u73b0\u5b83\u5bf9\u4e8e\u5c06\u5907\u4efd\u6d41\u5f0f\u4f20\u8f93\u5230\u78c1\u5e26\u673a\u975e\u5e38\u6709\u7528\uff0c\u800c\u4e14\u6211\u76f8\u4fe1\u5e93\u672c\u8eab\uff08\u5206\u53c9\u7248\u672c\u5728\u540c\u4e00\u4ee3\u7801repo\u4e2d\uff09\u5c06\u5728bondcat\u4e4b\u5916\u627e\u5230\u7528\u9014\u3002\u7136\u800c\uff0c\u6211\u8ba4\u4e3a\u968f\u7740MPTCP\u5f97\u5230\u66f4\u597d\u7684\u652f\u6301\uff08\u5982\u679c\u5e78\u8fd0\u7684\u8bdd\uff09\uff0c\u8be5\u5de5\u5177\u5c06\u6162\u6162\u8fc7\u65f6\u3002\n\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u535a\u5ba2\u7684\u6700\u65b0\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528RSS\u8ba2\u9605\u6e90\uff0c\u4e5f\u53ef\u4ee5\u5728Twitter\u4e0a\u5173\u6ce8\u6211\n\u6b64\u5916\uff0c\u6211\u76ee\u524d\u6b63\u5728\u5bfb\u627e\u4e09\u6708\u4efd\u4ee5\u540e\u7684\u5de5\u4f5c\u3002\u5982\u679c\u4f60\u559c\u6b22\u6211\u6240\u505a\u7684\uff0c\u6216\u8005\u8ba4\u4e3a\u4f60\u53ef\u4ee5\u5229\u7528\u6211\u7684\u4e00\u4e9b\u5947\u602a\u7684\u77e5\u8bc6\u9886\u57df\uff0c\u8bf7\u901a\u8fc7workwith@benjojo.co.uk!", "note_en": "Gigabit ethernet has been around for a long time, it\u2019s so ubiquitous that there is a very strong chance that if you have a RJ-45 port on your computer, it\u2019s going to be a gigabit ethernet network interface.\n Even if you look at computers that are over 20 years old, the only thing that stands out on their spec sheets as still being current is gigabit ethernet.\n  However, gigabit ethernet (1GBE) sometimes is just not enough these days. Gigabit residential internet access is becoming more and more common, and while most of those consumers are using WiFi and  are unlikely to ever get the gigabit performance they were likely expecting. A wired connection could easily max out the internet and LAN link.\n 10 Gigabit ethernet (10GBE) is creeping into the consumer market slowly, notably  apple products have been shipping with 10 gigabit ethernet for a while now but it\u2019s still rare to find people with 10 gigabit ethernet switches.\n Most of the reason I suspect the consumer ethernet speeds have not improved in the last 20 years is that for the most part, it\u2019s already fast enough. However things like storage have sped up remarkably now with not only faster disks (the average SATA hard disk will run at around 2.5 gigabits) but flash storage has given us single drive speeds of 6 gigabits, more if you look at  NVMe ( mine can read at nearly 20 gigabits). But when you look at what we can send to other computers (think remote storage like NAS\u2019es) then we can quickly get limited by 1GBE.\n Servers are a different story, while there are still a considerable number of servers still running on 1GBE, 10GBE and 25GBE (or faster!) are used for anything bandwidth intensive, since the network can quickly become the major bottleneck when faced with large compute power and storage capacity.\n  However single 10GBE and 25GBE links are not always what you want. What if you want more bandwidth? What if the switch you are attached to needs a software upgrade or crashes? For this reason, a lot of the NICs for servers have two physical ports that are connected to the same switch (for a bandwidth increase) or different switches (for redundancy/failover).\n But how do systems make use of multiple ethernet links? They program their switches and the servers to use  Link aggregation (LAG). Link aggregation means that both links share a single IP and MAC address, and requires the switch and system (at least in the commonly deployed 802.3ad standard) to change their behaviour. Link aggregation goes by different names depending on the vendors you are configuring it on, names include; Aggregate Interfaces, NIC Teaming, Port Channels, and Bond\u2019s. The last one causing  amusing blog titles from time to time  (A)\n However, Link aggregation does not directly cause performance increases for single connections. This is because the OS and network layer typically directs a connection down a single ethernet link at a time. Since TCP and other protocols that do  congestion control could become confused when they are presented with inconsistent performance feedback (as different links have different capacities and latencies). While a 2x10GBE may mean that you have 20 gigabits of bandwidth available to you, a single TCP connection will only run at 10 gigabits due to the connection directing/hashing logic.\n   In a previous post  I talked about LTO Tape backups and how that drives themselves could read/write than a standard gigabit ethernet link, and that 10 gigabit networking is recommended if you are streaming data to a tape over the network to avoid issues.\n Sadly, in my case the machine that held the SAS card required for running the tape drive consumed the last PCIe slot that could have held a 10GBE network card. Even though the systems feeding the PC hosting the tape drive were on 10GBE. This meant that my tape backups were far slower (and stalling on  mbuffer) than was needed.\n But what I did have was USB 3.0 ports, and where there are USB 3 ports there is the option to use USB gigabit ethernet dongles.\n The issue comes however in that while I could have set the motherboard and the USB NIC into a LAG, that would not have improved the speed of my single TCP connection feeding the tape drive (via  mbuffer).\n I really needed a way to combine the throughput of both NICs into one 2gbit/s stream.\n   Multipath TCP (MPTCP) or  RFC8684 is an extension that allows a single TCP socket to span across multiple IP addresses and network interfaces.\n This extension is currently used sparsely, with the only two commonly deployed uses being the  OpenMTCPRouter Project and  Apple\u2019s Siri\n OpenMTCPRouter uses MPTCP to proxy/tunnel connections for better throughput, allowing you to chain multiple residential connections into one faster link to a proxy server, while Siri uses it to handle rapid failover between WiFi and Cellular to ensure the best experience when using the voice assistant.\n MPTCP was merged into the Linux kernel in 5.6, however I do not know of any mainstream distributions that have it present and enabled. Ubuntu 20.10 ships with MPTCP on it\u2019s 5.13 kernel, while Debian Bullseye uses 5.10 but has MPTCP disabled.\n  Outside of having MPTCP support available in your OS. I have found the MPTCP usability story\u2026 Bad? It feels really bad to say this against something but my own research into MPTCP has been maddening.\n This post was written on Feb 24th 2022, The situation may have changed by the time you have read this\n Since MPTCP is now shipping in mainline Linux, the  actual project website itself appears to have not kept up, the docs on the site sent me down wild goose chases only to find that the things written down are not supported anymore, or maybe I just have not found any way to do the things they have documented. I may just honestly be stupid with this, but I found the best living documentation to be  the kernel tests for MPTCP since they by definition have to reflect the current API for MPTCP.\n I think in general a lot of the pain that comes with this is that MPTCP is designed to automatically detect and begin multipathing traffic in a way where the user space has its hands off the details of the connection.\n Because of this, I could not find a way to tell the kernel from user space (ignoring netlink etc) about multiple endpoints for a host, for this reason I gave up my attempt to write a mptcp client tool.\n  Not satisfied with MPTCP I figured that an entirely userspace version of this concept is possible, and in fact someone I was doing contract work with at the time  had a library that appeared to be able to \u201cbond\u201d together multiple connections. Upon trying to get it working however I found that the library did not achieve speed improvements, and failover behaviour was unpredictable at best.\n So I worked on making sure it could, overhauling the library and pushing fixes to it. Once it worked enough to the point where I was making decisions that could break the library. I made my own fork to contain the behaviour changes.\n The  multipath go library is actually quite an involved bit of machinery. Because while MPTCP has raw packet access to do things with retries and subflow sorting,  multipath does not. It takes what is basically an array of  net.Conn\u2019s and teams them together for bandwidth and resilience. This means that anything that conforms to   net.Conn in go and is an ordered reliable stream (Like for example, WebSockets, TLS connections, SCTP in some modes, etc) can be used in this library all combined!\n Due to the usage of TCP-like sockets, the performance will never be as good as if you wrote this using UDP yourself but given that is the way the multipath library started, I was determined to keep it that way even after I forked it.\n Now that I had the library working though, I still needed a tool that wrapped it for day to day use\u2026\n    Bondcat has a user interface inspired by   ncat but accepts the ability to connect to a host on multiple IP address/port combos. This means that with some knowledge on address selection (see below) you can easily and in a cross platform way beat the limits of single gigabit ethernet speeds.\n I mention gigabit ethernet in particular because as far as I\u2019ve managed I\u2019ve not attempted to optimise the multipath library in going faster than 10 gigabit/s. This is because at that stage there are likely better options for moving very large amounts of data over very fast LAG\u2019d networks, for example  GridFTP.\n But since it acts like netcat/ncat then you can easily wrap connections over it, for example you could use  OpenSSH\u2019s ProxyCommand to obtain faster than gigabit SFTP/SCP transfers:\n  For the listening side, bondcat includes a  -relay mode that accepts connections and forwards the data to another tcp endpoint. Meaning to make this ssh setup work we can point the relay mode to\n  If that is not your usage style, you can always just use it as a regular netcat to send stuff around:\n  Now there are some considerations to be made for bondcat, since MPTCP has a far better idea of your network stack that bondcat can ever do (after all, the library doing the magic just sees a bunch of connections, nothing more) you need to be careful on what addresses you select for your use case:\n Use Case: Going over the internet or trying to escape the limits of LAG bundles\n This use is simple, you just need to invoke it as you would a normal netcat (single address) and use the  -multiplier flag for how many extra connections you want to start. This flag also works with other addresses if you want to mix the hosts IPv4 and IPv6 addresses.\n  I find it\u2019s easiest to target IPv6 addresses for LAN\u2019s. But that is all assuming that the LAN you are on has Router Advertisements. Assuming it does then it\u2019s the best option. If not then the local IPv4 address normally works fine.\n However this will generally only work in the 10GBE-&gt;{n}x1GBE setup. Bondcat by default tries to connect with every IP address on the machine to aid automatic speed boosts. To help this \u201cautomagically\u201d work it\u2019s best to start the connections from the machine that has the most interfaces. This function can be disabled with  -a or -no-auto-detect\n  Assuming the system you are on has two links, you will need to manually add a route for one of the endpoints to go over your backup link. Other than that, it should transparently work.\n   I found it very useful for streaming backups to my tape drive, and I\u2019m sure the library itself (the forked version is in the same code repo) would find uses outside of bondcat. However I assume as MPTCP gets better and more supported (with any luck) the tool will slowly become obsolete.\n If you want to stay up to date with the blog you can use the  RSS feed or you can follow me on  Twitter\n Also, I\u2019m currently looking for work from March onwards. If you like what I do or think that you could do with some of my bizarre areas of knowledge, please contact me over at workwith@benjojo.co.uk!", "posttime": "2022-02-25 23:34:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u591a\u8def\u5f84,multipath,\u8fde\u63a5", "title": "\u5728\u6ca1\u6709\u591a\u8def\u5f84TCP\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u591a\u8def\u5f84\u4f20\u8f93", "title_en": "Going multipath without Multipath TCP", "transed": 1, "url": "https://blog.benjojo.co.uk/post/multipath-without-mptcp", "via": "", "real_tags": ["\u591a\u8def\u5f84", "multipath", "\u8fde\u63a5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075010, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6717\u585e\u65af\u5c71\u810a\u6d77\u7ef5\u548c\u5176\u4ed6\u52a8\u7269\u7684\u7167\u7247\u3002\u56fe\u7247\uff1a\u963f\u5c14\u5f17\u96f7\u5fb7\u00b7\u97e6\u683c\u7eb3\u7814\u7a76\u6240/PS101 AWI OFOS\u7cfb\u7edf/Antje Boetiusmedien@awi.de\n\u4e00\u9879\u65b0\u7684\u7814\u7a76\u62a5\u544a\u79f0\uff0c\u5728\u5317\u6781\u9644\u8fd1\u7684\u4e00\u5ea7\u6c34\u4e0b\u5c71\u8109\u7684\u5c71\u9876\u4e0a\uff0c\u4e00\u4e2a\u7531\u6570\u767e\u5e74\u5386\u53f2\u7684\u6d77\u7ef5\u7ec4\u6210\u7684\u7e41\u8363\u793e\u533a\u6b63\u5728\u541e\u566c\u4e00\u4e2a\u706d\u7edd\u751f\u6001\u7cfb\u7edf\u7684\u5316\u77f3\u3002\n\u8fd9\u4e00\u60ca\u4eba\u7684\u751f\u7269\u70ed\u70b9\u7684\u53d1\u73b0\uff0c\u8bc1\u660e\u4e86\u5373\u4f7f\u5728\u6700\u4e0d\u9002\u5b9c\u5c45\u4f4f\u7684\u73af\u5883\u4e2d\uff0c\u5982\u9690\u85cf\u5728\u5317\u6781\u6d77\u51b0\u4e0b\u7684\u9ed1\u6697\u4e14\u8425\u517b\u8d2b\u4e4f\u7684\u659c\u5761\uff0c\u751f\u547d\u4e5f\u5177\u6709\u97e7\u6027\u3002\u5468\u4e8c\u53d1\u8868\u5728\u300a\u81ea\u7136\u901a\u8baf\u300b\u4e0a\u7684\u8fd9\u9879\u7814\u7a76\u8868\u660e\uff0c\u9274\u4e8e\u4eba\u7c7b\u9a71\u52a8\u7684\u6c14\u5019\u53d8\u5316\u4f7f\u8fd9\u4e2a\u5317\u90e8\u5730\u533a\u53d8\u6696\u7684\u901f\u5ea6\u81f3\u5c11\u662f\u5730\u7403\u5176\u4ed6\u5730\u533a\u7684\u4e24\u500d\uff0c\u66f4\u597d\u5730\u4e86\u89e3\u8fd9\u4e9b\u5f02\u5e38\u6d3b\u8dc3\u7684\u751f\u6001\u7cfb\u7edf\u201c\u5bf9\u4e8e\u4fdd\u62a4\u548c\u7ba1\u7406\u8fd9\u4e9b\u5317\u51b0\u6d0b\u72ec\u7279\u7684\u591a\u6837\u6027\u81f3\u5173\u91cd\u8981\u201d\u3002\n\u53d1\u73b0\u6d77\u7ef5\u7fa4\u843d\u7684\u63a2\u9669\u961f\u9996\u5e2d\u79d1\u5b66\u5bb6\u3001\u8be5\u7814\u7a76\u7684\u5408\u8457\u8005\u5b89\u6770\u00b7\u535a\u8482\u4e4c\u65af\u8bf4\uff0c\u5f53\u4e00\u53f0\u6c34\u4e0b\u6444\u50cf\u673a\u5c06\u6d77\u7ef5\u82b1\u56ed\u7684\u7b2c\u4e00\u4e2a\u955c\u5934\u8fd4\u56de\u5230\u7814\u7a76\u8239\u4e0a\u65f6\uff0c\u5979\u7684\u56e2\u961f\u201c\u6b23\u559c\u82e5\u72c2\u201d\u3002\n\u201c\u8fd9\u662f\u4e00\u8258\u6ee1\u8f7d\u6df1\u6d77\u751f\u7269\u5b66\u5bb6\u7684\u8239\uff0c\u4ed6\u4eec\u5df2\u7ecf\u7814\u7a76\u4e86\u5317\u6781\u51e0\u5341\u5e74\uff0c\u4f46\u6211\u4eec\u505a\u68a6\u4e5f\u60f3\u4e0d\u5230\u4f1a\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u70ed\u70b9\u751f\u6001\u7cfb\u7edf\uff0c\u201dBoetius\u56de\u5fc6\u9053\uff0c\u4ed6\u4e5f\u662f\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u6d77\u6d0b\u751f\u6001\u7814\u7a76\u4e2d\u5fc3\u6df1\u6d77\u751f\u6001\u548c\u6280\u672f\u7814\u7a76\u5c0f\u7ec4\u7684\u8d1f\u8d23\u4eba\uff0c\u4e5f\u662f\u8d6b\u5c14\u59c6\u65af\u970d\u5c14\u8328\u6d77\u6d0b\u548c\u6d77\u6d0b\u7814\u7a76\u4e2d\u5fc3Al-fred We-gener\u7814\u7a76\u4e2d\u5fc3\u7684\u4e3b\u4efb\u3002\n\u201c\u6211\u4eec\u8ba1\u5212\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u4e13\u95e8\u8fdb\u884c\u4e00\u9879\u4efb\u52a1\uff0c\u4ee5\u53d1\u73b0\u5317\u6781\u6d77\u5c71\u4e0a\u7684\u751f\u7269\uff0c\u201d\u5979\u8865\u5145\u8bf4\u3002\u201c\u5b83\u4eec\u662f\u4e00\u4e2a\u8c1c\u3002\u9996\u6279\u6d77\u5c71\u5730\u56fe\u662f\u51e0\u5341\u5e74\u524d\u7ed8\u5236\u7684\uff0c\u4f46\u4ece\u6765\u6ca1\u6709\u4eba\u80fd\u591f\u7528\u76f8\u673a\u6216\u9ad8\u5206\u8fa8\u7387\u7684\u65b9\u6cd5\u53bb\u90a3\u91cc\u3002\u6211\u4e00\u76f4\u68a6\u60f3\u7740\u8fd9\u6837\u4e00\u6b21\u63a2\u9669\uff0c\u6211\u4eec\u53ef\u4ee5\u63a2\u7d22\u5e76\u627e\u51fa\u5317\u6781\u6d77\u5c71\u4e0a\u7684\u751f\u7269\u3002\u201d\nBoetius\u548c\u5979\u7684\u540c\u4e8b\u57282016\u5e74\u5fb7\u56fd\u7814\u7a76\u7834\u51b0\u8239Polarstern\u4e0a\u7684\u4e00\u6b21\u63a2\u9669\u4e2d\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u68a6\u60f3\uff0c\u8be5\u8239\u90e8\u7f72\u4e86\u4e00\u4e2a\u540d\u4e3a\u6d77\u5e95\u89c2\u6d4b\u548c\u6d4b\u6df1\u7cfb\u7edf\uff08OFOBS\uff09\u7684\u76f8\u673a\u548c\u58f0\u7eb3\u5e73\u53f0\uff0c\u4e13\u95e8\u7528\u4e8e\u63a2\u6d4b\u5317\u51b0\u6d0b\u4e0b\u9c9c\u4e3a\u4eba\u77e5\u7684\u4e16\u754c\u3002\u7814\u7a76\u5c0f\u7ec4\u5728\u4e00\u4e2a\u540d\u4e3a\u6717\u585e\u65af\u5c71\u810a\uff08Langseth Ridge\uff09\u7684\u5df2\u706d\u7edd\u706b\u5c71\u7fa4\u7684\u5c71\u9876\u4e0a\u53d1\u73b0\u4e86\u7e41\u8363\u7684\u6d77\u7ef5\u82b1\u56ed\uff0c\u8be5\u706b\u5c71\u7fa4\u4f4d\u4e8e\u6d77\u9762\u4e0b\u7ea6\u534a\u82f1\u91cc\u5904\u3002\n\u6d77\u7ef5\u662f\u4e16\u754c\u5404\u5730\u901a\u7528\u7684\u751f\u7269\uff1b\u867d\u7136\u5b83\u4eec\u5f88\u50cf\u690d\u7269\uff0c\u4f46\u5b83\u4eec\u662f\u6700\u53e4\u8001\u7684\u52a8\u7269\u5bb6\u65cf\u4e4b\u4e00\u3002\u6839\u636e\u7814\u7a76\u5c0f\u7ec4\u7684\u53d1\u73b0\uff0c\u5170\u585e\u65af\u5c71\u810a\u7684\u6d77\u7ef5\u5bff\u547d\u6781\u957f\uff0c\u5e73\u5747\u5bff\u547d\u7ea6\u4e3a300\u5e74\u3002\u6b64\u5916\uff0c\u5728\u82b1\u56ed\u4e2d\u89c2\u5bdf\u5230\u7684\u6700\u5927\u6d77\u7ef5\u957f\u5ea6\u8d85\u8fc730\u82f1\u5bf8\u3002\u5982\u6b64\u5e9e\u5927\u7684\u4f53\u578b\u548c\u5e74\u8001\u7684\u5e74\u9f84\u8868\u660e\uff0c\u5c3d\u7ba1\u8fd9\u4e9b\u6d77\u5c71\u7f3a\u4e4f\u53ef\u7528\u7684\u8425\u517b\u7269\u8d28\uff0c\u5b83\u4eec\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\u4e00\u76f4\u5403\u5f97\u5f88\u597d\u3002\n\u4e3a\u4e86\u5f04\u6e05\u695a\u662f\u4ec0\u4e48\u7ef4\u6301\u4e86\u8fd9\u4e2a\u751f\u6001\u7cfb\u7edf\uff0c\u7814\u7a76\u8d1f\u8d23\u4eba\u3001\u9a6c\u514b\u65af\u00b7\u666e\u6717\u514b\u6d77\u6d0b\u5fae\u751f\u7269\u7814\u7a76\u6240\u7684\u6d77\u7ef5\u4e13\u5bb6\u7279\u857e\u838e\u00b7\u83ab\u7518\u8482\uff08Teresa Morganti\uff09\u68c0\u67e5\u4e86\u6d77\u7ef5\u7ec4\u7ec7\u4e2d\u7684\u590d\u6742\u5fae\u751f\u7269\u3002\u7ed3\u679c\u663e\u793a\uff0c\u8fd9\u4e9b\u52a8\u7269\u6b63\u5728\u6d88\u5316\u6570\u5343\u5e74\u524d\u706b\u5c71\u6d3b\u52a8\u65f6\u751f\u6d3b\u5728\u6d77\u5c71\u4e0a\u7684\u5df2\u706d\u7edd\u751f\u6001\u7cfb\u7edf\u7684\u5316\u77f3\u9057\u9ab8\u3002\n\u8fd9\u4e9b\u957f\u671f\u6b7b\u4ea1\u7684\u751f\u7269\u5305\u62ec\u7ba1\u8815\u866b\uff0c\u5b83\u4eec\u7559\u4e0b\u4e86\u86cb\u767d\u8d28\u548c\u51e0\u4e01\u8d28\u7684\u6b8b\u4f59\uff0c\u53ef\u4ee5\u88ab\u5bbf\u4e3b\u6d77\u7ef5\u5185\u7684\u7ec6\u83cc\u7fa4\u843d\u5904\u7406\u3002\u201c\u4ed6\u4eec\u6709\u52a9\u624b\uff0c\u7ec6\u83cc\uff0c\u53ef\u4ee5\u6d88\u5316\u4ed6\u4eec\u5750\u5728\u4e0a\u9762\u7684\u7269\u8d28\uff0c\u201d\u535a\u63d0\u4e4c\u65af\u89e3\u91ca\u8bf4\u3002\u201c\u8fd9\u771f\u662f\u65b0\u9c9c\u4e8b\u3002\u6211\u548c\u8bb8\u591a\u6df1\u6d77\u751f\u7269\u5b66\u5bb6\u8c08\u8fc7\uff0c\u4ed6\u4eec\u4ee5\u524d\u4ece\u672a\u542c\u8bf4\u8fc7\u3002\u201d\n\u201c\u8fd9\u662f\u6709\u9053\u7406\u7684\uff0c\u201d\u5979\u8865\u5145\u8bf4\uff0c\u201c\u56e0\u4e3a\u4e3a\u4ec0\u4e48\u4f60\u4e0d\u80fd\u5728\u4e00\u4e2a\u751f\u8005\u548c\u4e00\u4e2a\u6b7b\u53bb\u7684\u751f\u6001\u7cfb\u7edf\u4e4b\u95f4\u8fdb\u884c\u8fd9\u79cd\u8fc7\u6e21\uff0c\u800c\u6d77\u7ef5\u53ef\u4ee5\u4ece\u4e2d\u83b7\u5229\uff1f\u201d\n\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u8fd9\u4e9b\u7e41\u8302\u7684\u6d77\u7ef5\u7fa4\u843d\u53ef\u80fd\u662f\u6682\u65f6\u7684\uff0c\u968f\u7740\u5316\u77f3\u6750\u6599\u7684\u8017\u5c3d\uff0c\u5b83\u4eec\u6700\u7ec8\u4f1a\u5728\u51e0\u4e2a\u4e16\u7eaa\u6216\u51e0\u5343\u5e74\u540e\u6d88\u5931\uff08\u5c3d\u7ba1\u535a\u8482\u5384\u65af\u6307\u51fa\uff0c\u6d77\u7ef5\u7279\u522b\u64c5\u957f\u9002\u5e94\u65b0\u7684\u751f\u7269\u7fa4\u843d\u548c\u5bfb\u627e\u65b0\u7684\u98df\u7269\u6765\u6e90\uff09\u3002\n\u8fd9\u4e00\u51fa\u4e4e\u610f\u6599\u7684\u751f\u6001\u7cfb\u7edf\u4e5f\u53ef\u80fd\u53d7\u5230\u5317\u6781\u56e0\u4eba\u4e3a\u6c14\u5019\u53d8\u5316\u800c\u906d\u53d7\u7684\u5feb\u901f\u7834\u574f\u7684\u5a01\u80c1\u3002\u76ee\u524d\u9690\u85cf\u548c\u4fdd\u62a4\u8fd9\u4e2a\u79d8\u5bc6\u6d77\u7ef5\u82b1\u56ed\u7684\u6d77\u51b0\u6b63\u5728\u8fc5\u901f\u51cf\u5c11\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5728\u8fd9\u4e9b\u6781\u5730\u5730\u533a\u8fdb\u884c\u66f4\u591a\u7684\u5546\u4e1a\u5f00\u53d1\u6d3b\u52a8\uff0c\u5982\u6d77\u5e95\u62d6\u7f51\u6355\u9c7c\u3002\n\u8fd9\u4e9b\u65b0\u51fa\u73b0\u7684\u4eba\u7c7b\u538b\u529b\u51f8\u663e\u4e86\u8fdb\u4e00\u6b65\u63a2\u7d22\u548c\u4fdd\u62a4\u5317\u6781\u73af\u5883\u7684\u5fc5\u8981\u6027\uff0c\u4ee5\u4fbf\u6211\u4eec\u80fd\u591f\u66f4\u597d\u5730\u4e86\u89e3\u5c45\u4f4f\u5728\u5176\u4e2d\u7684\u4e0d\u53ef\u601d\u8bae\u7684\u751f\u547d\u5f62\u5f0f\u3002\nBoetius\u8bf4\uff1a\u201c\u6211\u5f88\u9ad8\u5174\u6211\u4eec\u6709\u8fd9\u4e9b\u7167\u7247\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u4fdd\u62a4\u6816\u606f\u5730\u662f\u503c\u5f97\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4e0d\u5173\u5fc3\u3002\u201d\u3002\u201c\u6240\u4ee5\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u4e00\u70b9\u683c\u5916\u91cd\u8981\u3002\u201d\n\u5979\u603b\u7ed3\u9053\uff1a\u201c\u4e00\u65e6\u4f60\u770b\u5230\u4e86\u8fd9\u79cd\u4e30\u5bcc\u751f\u6d3b\u7684\u753b\u9762\uff0c\u4f60\u53ef\u80fd\u4f1a\u66f4\u503e\u5411\u4e8e\u8bf4\uff0c\u2018\u597d\u5427\uff0c\u8ba9\u6211\u4eec\u4e0d\u4ec5\u4ec5\u8fdb\u5165\u8fd9\u4e9b\u672a\u5f00\u53d1\u7684\u4e16\u754c\u3002\u8ba9\u6211\u4eec\u5148\u770b\u770b\u90a3\u91cc\u6709\u4ec0\u4e48\uff0c\u7136\u540e\u5236\u5b9a\u4e00\u4e2a\u4fdd\u62a4\u5b83\u4eec\u7684\u8ba1\u5212\u6216\u653f\u7b56\uff0c\u800c\u4e0d\u662f\u6467\u6bc1\u5b83\u4eec\u3002\u2019\u201d\u3002\n\u6ce8\u518c\u5373\u8868\u793a\u60a8\u540c\u610f\u4f7f\u7528\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56&amp\uff1b\u63a5\u6536\u6765\u81eaVice Media Group\u7684\u7535\u5b50\u901a\u4fe1\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u62ec\u5e02\u573a\u63a8\u5e7f\u3001\u5e7f\u544a\u548c\u8d5e\u52a9\u5185\u5bb9\u3002", "note_en": "A photograph of sponges and other animals at Langseth Ridge. Image:\u00a0Alfred-Wegener-Institut / PS101 AWI OFOS system/ Antje Boetius\u00a0 medien@awi.de\n A thriving community of centuries-old sponges is devouring the fossils of an extinct ecosystem atop the peaks of an underwater mountain range near the North Pole, reports a new study.\n  The discovery of this stunning biological hotspot is a testament to the resilience of life in even the most inhospitable environments, like the dark and nutrient-poor slopes hidden under the Arctic sea ice. Given that human-driven climate change is warming this Northern region at least twice as fast as the rest of the planet, better knowledge of these surprisingly vibrant ecosystems \u201cis essential for protecting and managing the unique diversity of these Arctic seas,\u201d according to the study, which   was published on Tuesday in  Nature Communications.\n    Antje Boetius, the chief scientist of the expedition that discovered the sponge community and a co-author of the study, said her team was \u201cjumping for joy\u201d when an underwater camera returned the first footage of the sponge gardens to the research vessel.\n  \u201cIt was a ship full of deep sea biologists who have studied the Arctic for decades, but we couldn&#39;t have dreamed of finding such a hotspot ecosystem,\u201d recalled Boetius, who is also the head of the Re\u00adsearch Group for Deep Sea Eco\u00adlogy and Tech\u00adno\u00adlogy at the Max Planck In\u00adsti\u00adtute for Mar\u00adine Mi\u00adcro\u00adbi\u00ado\u00adlogy and director of the Al\u00adfred We\u00adgener In\u00adsti\u00adtute, Helm\u00adholtz Centre for Po\u00adlar and Mar\u00adine Re\u00adsearch, in a call.\n  \u201cWe\u2019ve planned for a long time to have a mission dedicated to the discovery of what lives on the Arctic seamounts,\u201d she added. \u201cThey are a mystery. The first maps of the seamounts were made decades ago, but no one was ever able to go there with a camera or high-resolution methods. I always dreamed of such an expedition where we could just explore and find out what lives on the Arctic seamounts.\u201d\n  Boetius and her colleagues were able to make good on this dream during   a 2016 expedition on the German research icebreaker  Polarstern, which deployed a camera and sonar platform called the the Ocean Floor Observation and Bathymetry System (OFOBS) that is specifically designed to probe the little-known world under the Arctic ice. The team spotted the flourishing sponge gardens on the summits of an extinct volcanic range called Langseth Ridge, about half a mile under the ocean surface.\n     Sponges are versatile creatures found all over the world; though they resemble plants, they are one of the most ancient animal families. The sponges at Langseth Ridge are extremely long-lived, averaging about 300 years of age, according to the team\u2019s findings. What\u2019s more, the biggest sponges observed in the gardens exceed 30 inches in length. This large size and old age suggest that they have been well-fed for centuries despite the lack of nutrients available on these seamounts.\n  To figure out what could be sustaining this ecosystem, study lead Teresa Morganti, a sponge expert from the Max Planck Institute for Marine Microbiology, examined the complex microbes within the tissues of the sponges. The results revealed that the animals are digesting the fossilized remains of an extinct ecosystem that lived on the seamounts thousands of years ago, when they were volcanically active.\n  These long-dead creatures included tube worms that left behind remnants of protein and chitin that can be processed by the bacterial communities that live inside the host sponges. \u201cThey have helpers, bacteria, that digest the material that they are sitting on,\u201d explained Boetius. \u201cThat is really new. I&#39;ve talked to many deep sea biologists and they have not heard of that before.\u201d\n  \u201cIt makes sense,\u201d she added, \u201cbecause why would you not have this transition between a living and a dying, or dead, ecosystem that sponges may profit off of?\u201d\n    To that point, these lush sponge communities may be transient, destined to eventually recede over centuries or millennia as they run out of fossil material to consume (though Boetius noted that sponges are exceptionally good at adapting to new biomes and finding novel food sources).\n  This unexpected ecosystem may also be threatened by the rapid disruptions that the Arctic is experiencing as the result of human-driven climate change. The sea ice that currently conceals and protects this secret sponge garden is swiftly declining, which could lead to more exploitative commercial activity, such as benthic trawling, in these polar reaches.\n  These emerging human pressures highlight the need to further explore and safeguard Arctic environments, so that we can better understand the incredible lifeforms that inhabit them.\n  \u201cI&#39;m glad we have these pictures and we can demonstrate that it&#39;s worthwhile protecting the habitat rather than just not caring,\u201d said Boetius. \u201cSo for me, this has an extra importance.\u201d\n  \u201cOnce you see the pictures of this teeming life, you might be more inclined to say, \u2018okay, let&#39;s not just go into these untapped worlds. Let&#39;s first check out what is there and then make a plan or a policy for protecting them rather than destroying them,\u2019\u201d she concluded.\n  By signing up, you agree to the  Terms of Use and  Privacy Policy &amp; to receive electronic communications from Vice Media Group, which may include marketing promotions, advertisements and sponsored content.", "posttime": "2022-02-25 23:30:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u5317\u6781,discover,\u6d77\u7ef5", "title": "\u79d1\u5b66\u5bb6\u53d1\u73b0\u6709\u6570\u767e\u5e74\u5386\u53f2\u7684\u5317\u6781\u751f\u7269\u9760\u5316\u77f3\u751f\u5b58", "title_en": "Scientists Discover Centuries-Old Arctic Creatures Surviving on Fossils", "transed": 1, "url": "https://www.vice.com/en/article/qjbwxv/scientists-discover-centuries-old-arctic-creatures-surviving-on-fossils", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u5317\u6781", "discover", "\u6d77\u7ef5"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075009, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u56de\u5e94\u4e9a\u4f26\u00b7\u683c\u7279\u52d2&#39\uff1b\u65af\u666e\u7f57\u59c6\u8482\u548c#39\uff1b\u6211\u5199\u4e86\u4e00\u4e9b\u5173\u4e8e\u6211\u5de5\u4f5c\u7684\u4e1c\u897f\u3002\u6211\u5e0c\u671b\u8fd9\u5bf9\u90a3\u4e9b\u5de5\u4f5c\u4e0eEA\u65e0\u5173\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u4ee5\u53ca\u90a3\u4e9b\u6b63\u5728\u8003\u8651\u5c06\u8f6f\u4ef6\u5de5\u7a0b\u4f5c\u4e3a\u804c\u4e1a\u9053\u8def\u7684EA\u6765\u8bf4\uff0c\u662f\u6709\u7528\u7684\u3002\n\u7f16\u8f91\uff1a\u6211\u521a\u521a\u6ce8\u610f\u5230\uff0c\u81ea\u4ece\u6211\u5f00\u59cb\u5199\u8fd9\u7bc7\u6587\u7ae0\u4ee5\u6765\uff0c\u6709\u4eba\u53d1\u8868\u4e86\u5173\u4e8e\u4f5c\u4e3a\u4e00\u540d\u7f51\u7edc\u5f00\u53d1\u4eba\u5458\u5de5\u4f5c\u7684\u5e16\u5b50\u3002\u5e78\u8fd0\u7684\u662f\u6211&#39\uff1b\u6211\u4e3b\u8981\u96c6\u4e2d\u5728Wave\uff0c\u800c\u4ed6\u4eec&#39\uff1b\u6211\u5199\u8fc7\u5173\u4e8e\u505a\u4e00\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u6587\u7ae0\uff0c\u6240\u4ee5\u6211\u8ba4\u4e3a\u8fd9\u4e9b\u5e16\u5b50\u662f\u514d\u8d39\u7684\u3002\n\u6211\u662fWave mobilemoney\u7684\u9996\u5e2d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3002\u6211\u4eec&#39\uff1b\u6211\u4eec\u6b63\u5728\u52aa\u529b\u5728\u6492\u54c8\u62c9\u4ee5\u5357\u975e\u6d32\u5efa\u7acb\u5b8c\u5168\u5305\u5bb9\u6027\u548c\u53ef\u8d1f\u62c5\u7684\u91d1\u878d\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u7684\u5de5\u4f5c\u5305\u62ec\u7f16\u7a0b\u3001\u6307\u5bfc/\u9886\u5bfc\u56e2\u961f\u4e2d\u7684\u5176\u4ed6\u5de5\u7a0b\u5e08\uff0c\u4ee5\u53ca\u4e00\u4e9b\u4ea7\u54c1\u8bbe\u8ba1\u5de5\u4f5c\u3002\u6211\u5728\u82f1\u56fd\u66fc\u5f7b\u65af\u7279\u8fdc\u7a0b\u5de5\u4f5c\u3002\nDirect-Wave\u6bd4\u7ade\u4e89\u5bf9\u624b\u4fbf\u5b9c\u5f97\u591a\uff0c\u56e0\u6b64\u6211\u4eec\u4e3a\u90a3\u4e9b\u7ecf\u5e38\u4e0d\u4f7f\u7528\u5b83\u7684\u4eba\u8282\u7701\u4e86\u5f88\u591a\u94b1&#39\uff1b\u4e00\u5f00\u59cb\u6211\u6ca1\u6709\u591a\u5c11\u94b1\u3002\u6211\u7c97\u7565\u4f30\u8ba1\uff0c\u4e0e\u7ade\u4e89\u5bf9\u624b\u76f8\u6bd4\uff0c\u8d39\u7528\u7684\u964d\u4f4e\u662f\u6bcf\u67082000\u4e07\u7f8e\u5143\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u5728\u589e\u957f\uff0c\u6240\u4ee5\u8fd9\u662f\u4e0d\u65ad\u589e\u957f\u7684\uff01\n\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u62e5\u6709\u4e00\u4e2a\u53ef\u9760\u3001\u5feb\u901f\u4e14\u5e7f\u6cdb\u4f7f\u7528\u7684\u79fb\u52a8\u8d27\u5e01\u7f51\u7edc\u4e5f\u6709\u597d\u5904\uff0c\u53c2\u89c1\u94fe\u63a5\u6216\u94fe\u63a5\u3002\n\u6350\u6b3e\u2014\u2014\u5927\u591a\u6570\u5de5\u4f5c\u7684\u85aa\u6c34\u4e25\u91cd\u4f9d\u8d56\u4e8e\u5de5\u4f5c\u5730\u70b9\uff0c\u4f46\u6211&#39\uff1bI\u2019\u6211\u4e0d\u613f\u610f\u4e3a\u4e86\u6323\u66f4\u591a\u7684\u94b1\u800c\u727a\u7272\u4f4f\u5728\u4e00\u4e2a\u4e0e\u670b\u53cb\u548c\u5bb6\u4eba\u9694\u7edd\u7684\u5730\u65b9\u3002\u6ce2\u6d6a&#39\uff1bs\u7684\u85aa\u6c34\uff08\u51e0\u4e4e\uff09\u4e0e\u5730\u70b9\u65e0\u5173\uff0c\u6240\u4ee5\u4f5c\u4e3a\u4e00\u540d\u5728forWave\u5de5\u4f5c\u7684\u6b27\u6d32\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u53ef\u4ee5\u6350\u8d60\u6bd4\u5176\u4ed6\u60c5\u51b5\u4e0b\u591a\u5f97\u591a\u7684\u94b1\u3002\u5b83&#39\uff1b\u6839\u636e\u80a1\u6743\u6700\u7ec8\u7684\u4ef7\u503c\uff0c\u5927\u6982\u662f3x-10x+\u3002\n\u5728\u8fd9\u4e24\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u8ba4\u4e3a\u76f4\u63a5\u5de5\u4f5c\u53ef\u80fd\u662f\u66f4\u6709\u4ef7\u503c\u7684\u90e8\u5206\uff1a\u4ec5\u8282\u7701\u8d39\u7528\u4e00\u9879\uff0c\u5e73\u5747\u5206\u914d\u7ed9\u6240\u6709Wave\u5458\u5de5\uff0c\u6bcf\u4e2aWave\u5458\u5de5\u6bcf\u5e74\u5927\u7ea650\u4e07\u7f8e\u5143\u3002\u4f46\u662f\u8f6f\u4ef6\u5de5\u7a0b\u7684\u89d2\u8272\u53ef\u80fd\u6bd4\u547c\u53eb\u4e2d\u5fc3\u7684\u89d2\u8272\u8d21\u732e\u66f4\u591a\uff0c\u6240\u4ee5\u6211\u7684\u8d21\u732e\u53ef\u80fd\u4e0d\u6b62\u8fd9\u4e9b\u3002\u7136\u540e\u662f&#39\uff1b\u8fd9\u662f\u6ce2\u6d6a\u6301\u7eed\u5927\u89c4\u6a21\u589e\u957f\u7684\u6f5c\u529b\uff0c\u5b83\u53ef\u4ee5\u5c06\u73b0\u5728\u6240\u505a\u5de5\u4f5c\u7684\u5f71\u54cd\u653e\u592710-100\u500d\u3002\n\u5b83&#39\uff1b\u4f46\u4ece1\u67081\u65e5\u8d77\uff0c\u8fd9\u4e00\u70b9\u5e76\u4e0d\u5b8c\u5168\u660e\u786e\u3002\u6700\u5927\u7684\u8d39\u7528\u8282\u7701/\u79fb\u52a8\u652f\u4ed8\u7f51\u7edc\u6536\u76ca\u53ef\u80fd\u4f1a\u6d41\u5411\u5bcc\u4eba\u548c2\u3002Givewell\u4f30\u8ba1AMF\u6350\u6b3e\u7684\u4ef7\u503c\u5927\u7ea6\u662f\u73b0\u91d1\u8f6c\u8d26\u768410\u500d\u3002\n\u6211\u8ba4\u4e3a\u6709&#39\uff1b\u8fd9\u662f\u83b7\u5f97\u8f6f\u4ef6\u5de5\u4f5c\u7684\u4e00\u4e2a\u76f8\u5f53\u6807\u51c6\u7684\u9014\u5f84\uff08\u6bd4\u5982STEM orCS\u5b66\u4f4d\uff0c\u7136\u540e\u662f\u521d\u7ea7\u82f1\u8bed\u89d2\u8272\uff0c\u53ef\u80fd\u5148\u8fdb\u884c\u4e00\u4e9b\u81ea\u6211\u9a71\u52a8\u5b66\u4e60\u6216abootcamp\uff09\uff0c\u4f46\u6211&#39\uff1b\u4e0d\u7ba1\u600e\u6837\uff0c\u6211\u90fd\u4f1a\u63cf\u8ff0\u6211\u7684\u9053\u8def\uff0c\u56e0\u4e3a\u5b83\u6709\u70b9\u4e0d\u7b26\u5408\u6807\u51c6\uff1a\n\u6570\u5b66\u548c\u7269\u7406\u672c\u79d1\u2014\u2014\u6211\u8ba4\u4e3a\u8fd9\u5bf9\u57f9\u517b\u8f6f\u4ef6\u5de5\u7a0b\u7684\u6b63\u786e\u601d\u7ef4\u548c\u5b66\u4e60\u4e00\u822c\u56f0\u96be\u7684\u4e1c\u897f\u975e\u5e38\u6709\u5e2e\u52a9\uff0c\u4f46\u6211\u5728\u672c\u79d1\u671f\u95f4\u5b66\u5230\u7684\u4e1c\u897f\u4e2d\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206\u4e0e\u6211\u7684\u5de5\u4f5c\u76f8\u5173\u3002\n\u8ba1\u7b97\u7269\u7406\u535a\u58eb\u2014\u2014\u8fd9\u662f\u6211\u771f\u6b63\u5b66\u4f1a\u7f16\u7a0b\u7684\u65f6\u5019\u3002\u6211\u5728\u5f00\u53d1\u5927\u578b\u590d\u6742\u8f6f\u4ef6\uff0c\u6240\u4ee5\u6211\u4e0d\u5f97\u4e0d\u4f7f\u7528\u9002\u5f53\u7684\u8f6f\u4ef6\u5de5\u7a0b\u6700\u4f73\u5b9e\u8df5\u6765\u5904\u7406\u5b83\u3002\u6211\u60f3\u8fd9\u5bf9\u6211\u73b0\u5728\u7684\u5904\u5883\u6709\u5f88\u5927\u5e2e\u52a9\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u4ecd\u7136\u4e0d\u786e\u5b9a\u6211\u662f\u5426\u4f1a\u63a8\u8350\u505aaPhD\uff1a\u8fd9\u5bf9\u6211\u7684\u7cbe\u795e\u5065\u5eb7\u7edd\u5bf9\u6709\u5bb3\u3002\n\u5728Biosite\u62c5\u4efb\u8f6f\u4ef6\u5de5\u7a0b\u5e084\u5e74\u2014\u2014\u66f4\u591a\u6280\u672f\u6280\u80fd\u548c\u901a\u7528\u8f6f\u4ef6\u5de5\u4f5c\u7ecf\u9a8c\u3002\u6b64\u5916\uff0c\u6211\u8fd8\u4ecb\u7ecd\u4e86\u57fa\u4e8e\u5f71\u54cd\u800c\u4e0d\u662f\u8bd5\u56fe\u540c\u65f6\u505a\u6bcf\u4ef6\u4e8b\u7684\u4f18\u5148\u5de5\u4f5c\u7684\u60f3\u6cd5\u3002\uff08\u771f\u5e0c\u671b\u6211&#39\uff1b\u5728\u8bfb\u535a\u58eb\u671f\u95f4\u80fd\u66f4\u591a\u5730\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\uff01\uff09\n\u4ee5\u53ca\u4ee5\u4e0a\u6211&#39\uff1b\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\uff08\u6bcf\u5468\u51e0\u4e2a\u5c0f\u65f6\uff0c\u6301\u7eed6\u5e74\uff09\u5728\u4e1a\u4f59\u65f6\u95f4\u7f16\u5199\u5f00\u6e90\u8f6f\u4ef6\uff0c\u5e76\u9605\u8bfb\u76f8\u5173\u4e66\u7c4d\u3002\u6211\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u6bd4\u6211\u7684\u672c\u79d1\u5b66\u4f4d\u66f4\u80fd\u5e2e\u52a9\u6211\u4e3a\u8fd9\u4efd\u5de5\u4f5c\u505a\u597d\u51c6\u5907\u3002\u751a\u81f3\u53ef\u80fd\u6bd4\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u672c\u79d1\u751f\u505a\u7684\u8fd8\u8981\u591a\u3002\n\u514d\u8d23\u58f0\u660e\uff1a\u8fd9\u662f\u4ece\u4e24\u5e74\u524d\u7684\u8bb0\u5fc6\u4e2d\u5199\u51fa\u6765\u7684\uff0c\u6211\u53ef\u80fd\u6ca1\u6709\u628a\u4e00\u5207\u90fd\u505a\u597d\u3002\n\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u7533\u8bf7\u8fc7\u7a0b\u5bf9\u8f6f\u4ef6\u5de5\u4f5c\u6765\u8bf4\u662f\u76f8\u5f53\u5178\u578b\u7684\u5de5\u4f5c\u91cf\u3002\u603b\u5171\u82b1\u4e86\u5927\u7ea610-12\u4e2a\u5c0f\u65f6\uff08\u5305\u62ec\u51c6\u5907\uff09\uff0c\u5206\u4e3a4\u90e8\u5206\uff1a2\u4e2a\u7f16\u7801\u7ec3\u4e60\u548c2\u4e2a\u804a\u5929\u3002\u4e0e\u6211\u4e92\u52a8\u7684\u6bcf\u4e00\u4e2a\u4eba\u90fd\u5f88\u53cb\u597d\u3001\u6109\u5feb\uff0c\u6211\u8ba4\u4e3a\u5373\u4f7f\u6211\u6ca1\u6709&#39\uff1b\u6211\u6ca1\u6709\u5f97\u5230\u8fd9\u4efd\u5de5\u4f5c\u3002\n\u7b2c\u4e00\u6b21\u804a\u5929\u53ea\u662f\u5bf9Wave\u7684\u4e00\u822c\u4ecb\u7ecd\u548c\u63d0\u95ee\u7684\u673a\u4f1a\u3002\u6211\u6ca1\u6709&#39\uff1b\u6211\u8fd8\u6ca1\u51c6\u5907\u597d\uff0c\u4f46\u6211\u8fd8\u662f\u6709\u51e0\u4e2a\u95ee\u9898\u8981\u95ee\u3002\u56de\u987e\u8fc7\u53bb\uff0c\u6211\u53ef\u80fd\u5e94\u8be5\u82b1\u4e9b\u65f6\u95f4\u601d\u8003\u66f4\u591a\u7684\u95ee\u9898\u3002\n\u7136\u540e\u662f\u7f16\u7a0b\u7ec3\u4e60\u3002\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u90fd\u5f88\u7d27\u5f20\uff0c\u4f46\u5f88\u6709\u8da3\uff0c\u6211\u60f3\u603b\u5171\u9700\u89816\u4e2a\u5c0f\u65f6+\u51e0\u4e2a\u5c0f\u65f6\u7684\u51c6\u5907\u65f6\u95f4\u3002\u5f53\u65f6\uff0c\u63a8\u8350\u7684\u51c6\u5907\u5de5\u4f5c\u76f8\u5f53\u677e\u6563\uff0c\u6bd4\u5982&#34\uff1b\u60f3\u4e00\u60f3\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u4e0d\u8981&#39\uff1b\u4e0d\u8981\u5199\u4efb\u4f55\u4ee3\u7801&#34\uff1b\uff08\u6211\u8ba4\u4e3a\u8fd9\u5df2\u7ecf\u6539\u53d8\u4e86\uff09\u3002\u6240\u4ee5\u6211\u505a\u4e86\u8fd9\u9879\u63a8\u8350\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u5e76\u4e14\u901a\u8fc7\u4f7f\u7528\u76f8\u540c\u7684\u8bed\u8a00\u548c\u6846\u67b6\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u5e94\u7528\u7a0b\u5e8f\u7684\u5feb\u901f\u5b9e\u73b0\uff0c\u786e\u4fdd\u6211\u719f\u6089\u6211\u5c06\u8981\u4f7f\u7528\u7684\u6240\u6709\u6280\u672f\u3002\u6211\u60f3\u6211&#39\uff1b\u6211\u5bf9\u6211\u6240\u505a\u7684\u5927\u91cf\u51c6\u5907\u611f\u5230\u9ad8\u5174\u3002\u540e\u6765\u6211\u53d1\u73b0\u6211\u5728\u8fd9\u4e24\u9879\u8fd0\u52a8\u4e2d\u90fd\u505a\u5f97\u5f88\u597d\uff0c\u4f46\u5f53\u6211\u505a\u8fd9\u4e9b\u8fd0\u52a8\u65f6\uff0c\u6211\u89c9\u5f97\u6ca1\u6709&#39\uff1b\u6ca1\u6709\u8db3\u591f\u7684\u65f6\u95f4\u5f7b\u5e95\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff08\u8fd9\u53ef\u80fd\u662f\u6545\u610f\u7684\uff09\u3002\u8fd9\u8ba9\u6211\u611f\u89c9\u5f88\u7d27\u5f20\u3002\n\u6700\u540e\u662f\u5bf9\u5176\u4e2d\u4e00\u4f4d\u521b\u59cb\u4eba\u7684\u6700\u540e\u4e00\u6b21\u91c7\u8bbf\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u5bf9\u6587\u5316\u5951\u5408\u5ea6\u7684\u6700\u540e\u4e00\u6b21\u68c0\u67e5\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u6211\u4e3a\u4ec0\u4e48\u60f3\u4e3aWave\u5de5\u4f5c\uff0c\u603b\u4f53\u4e0a\u662f\u4ec0\u4e48\u6fc0\u52b1\u4e86\u6211\uff0c\u7b49\u7b49\u3002\u5c31\u50cf\u6211\u6ca1\u6709\u8ba8\u8bba\u7684\u53e6\u4e00\u6b21\u804a\u5929\u4e00\u6837&#39\uff1bI don\u2019\u6211\u771f\u7684\u6ca1\u6709\u82b1\u65f6\u95f4\u4e3a\u6b64\u505a\u51c6\u5907\uff0c\u4e5f\u8bb8\u6211\u5e94\u8be5\u505a\u66f4\u591a\u7684\u4e8b\u60c5\u3002\n\u4e0a\u6b21\u9762\u8bd5\u540e\uff08\u6211\u60f3\u662f\u540c\u4e00\u5929\u8fd8\u662f\u7b2c\u4e8c\u5929\uff09\uff0c\u6211\u5f88\u5feb\u5c31\u5f97\u5230\u4e86\u4e00\u4efd\u5de5\u4f5c\u3002\u6211\u82b1\u4e86\u4e00\u5929\u5de6\u53f3\u7684\u65f6\u95f4\u4ed4\u7ec6\u8003\u8651\uff0c\u4ee5\u5b8c\u5168\u786e\u5b9a\u8fd9\u662f\u6211\u60f3\u8981\u7684\uff0c\u4f46\u6211\u771f\u7684\u6ca1\u6709\u529e\u6cd5\u8bf4\u4e0d\uff01\n\u6211\u5728\u7533\u8bf7Wave\u7684\u540c\u65f6\u7533\u8bf7\u4e86\u53e6\u4e00\u4efd\u5de5\u4f5c\u3002\u53e6\u4e00\u4efd\u5de5\u4f5c\u662f\u4e00\u5bb6\u65e0\u804a\u7684\u516c\u53f8\u8fd0\u8f93\u5b89\u6392\u521d\u521b\u516c\u53f8\u62d2\u7edd\u4e86\u6211\uff08\u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u662f\u6211\u5bf9\u4ed6\u4eec\u7684\u4ea7\u54c1\u4f3c\u4e4e\u4e0d\u591f\u5174\u594b\uff0c\u6240\u4ee5\u6211\u60f3\u4ed6\u4eec\u662f\u5bf9\u7684\uff01\uff09\u3002\u5b83\u4eec\u7684\u5e94\u7528\u8fc7\u7a0b\u4e0eWave one\u975e\u5e38\u76f8\u4f3c\u3002\u540c\u65f6\u505a\u4e24\u4e2a\u5e94\u7528\u7a0b\u5e8f\u662f\u53ef\u4ee5\u7ba1\u7406\u7684\uff0c\u4f46\u6211\u4e0d&#39\uff1bI don\u2019\u6211\u4e0d\u8ba4\u4e3a\u6211\u80fd\u5728\u5168\u804c\u5de5\u4f5c\u7684\u540c\u65f6\u5904\u74063\u4efd\u4ee5\u4e0a\u7684\u7533\u8bf7\u3002\n\u5927\u7ea625%\u7684\u65f6\u95f4\u7528\u4e8e\u652f\u6301/\u6307\u5bfc\u6211\u56e2\u961f\u4e2d\u7684\u5176\u4ed6\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u2014\u2014\u5e2e\u52a9\u4ed6\u4eec\u89e3\u51b3\u4efb\u4f55\u68d8\u624b\u7684\u95ee\u9898\uff0c\u63d0\u4f9b\u6280\u672f\u8bbe\u8ba1\u6307\u5bfc\uff0c\u7b49\u7b49\u3002\n\u6211\u5927\u7ea6\u670925%\u7684\u65f6\u95f4\u81f4\u529b\u4e8e\u4ea7\u54c1\u8bbe\u8ba1\u95ee\u9898\u2014\u2014\u6316\u6398\u6570\u636e\u4ee5\u56de\u7b54\u95ee\u9898\u6216\u5bfb\u627e\u95ee\u9898\uff1b\u7814\u7a76\u5982\u4f55\u4f7f\u65b0\u529f\u80fd\u6613\u4e8e\u4f7f\u7528\u3001\u5b89\u5168\u53ef\u9760\u3002\n\u6211\u670910%\u7684\u65f6\u95f4\u5b89\u6392\u5176\u4ed6\u4e8b\u60c5\u2014\u2014\u52aa\u529b\u786e\u4fdd\u9879\u76ee\u987a\u5229\u8fdb\u884c\u6240\u9700\u7684\u4e00\u5207\u51c6\u5907\u5c31\u7eea\uff0c\u786e\u4fdd\u6b63\u786e\u7684\u4eba\u76f8\u4e92\u4ea4\u8c08\uff0c\u7b49\u7b49\u3002\n\u6211&#39\uff1b\u6211\u662f\u56e2\u961f\u7684\u6280\u672f\u8d1f\u8d23\u4eba\uff0c\u6240\u4ee5\u5927\u591a\u6570\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u82b1\u5728\u51c6\u5907/\u751f\u4ea7/\u5b89\u6392\u4e8b\u60c5\u4e0a\u7684\u65f6\u95f4\u6bd4\u6211\u5c11\uff0c\u82b1\u5728\u7f16\u5199\u4ee3\u7801\u4e0a\u7684\u65f6\u95f4\u6bd4\u6211\u591a\u3002\u4f46Wave\u901a\u5e38\u9f13\u52b1\u6240\u6709\u5de5\u7a0b\u5e08\u53c2\u4e0e\u4ea7\u54c1\u51b3\u7b56\uff0c\u5e76\u5bf9\u4ed6\u4eec\u6b63\u5728\u89e3\u51b3\u7684\u95ee\u9898\u62e5\u6709\u5b8c\u5168\u7684\u6240\u6709\u6743\uff0c\u56e0\u6b64\u975e\u7f16\u7a0b\u5de5\u4f5c\u53ef\u80fd\u4ecd\u6bd4\u5176\u4ed6\u516c\u53f8\u66f4\u591a\u3002\n\u66f4\u5177\u4f53\u5730\u8bf4\uff1a\u6211\u5728\u96c6\u6210\u56e2\u961f\u5de5\u4f5c\uff0c\u6211\u4eec\u5728\u90a3\u91cc\u6784\u5efa\u4e0e\u5176\u4ed6\u516c\u53f8\u8fd0\u884c\u7684\u7cfb\u7edf\u4ea4\u4e92\u7684\u529f\u80fd\u3002\u8fd9\u79cd\u529f\u80fd\u6700\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\u8ba9\u7528\u6237\u80fd\u591f\u5728Wave\u5e94\u7528\u7a0b\u5e8f\u4e2d\u652f\u4ed8\u8d26\u5355\u3002\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u7b80\u5355\u800c\u4e4f\u5473\uff0c\u4f46\uff08\u65e0\u8bba\u662f\u597d\u662f\u574f\uff09\u6211\u4eec\u7684\u8bb8\u591a\u5408\u4f5c\u4f19\u4f34\u90fd\u6709\u975e\u5e38\u72ec\u7279\u7684API\u3002\u56e0\u6b64\uff0c\u5728\u6211\u4eec\u5982\u4f55\u9002\u5e94\u7279\u5b9aAPI\u7684\u7279\u5b9a\u529f\u80fd\u548c\u9700\u6c42\u65b9\u9762\uff0c\u6bcf\u4e00\u4e2a\u65b0\u7684\u96c6\u6210\u90fd\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6311\u6218\u3002\n\u6211\u5f00\u59cb\u76f4\u63a5\u4e3a\u4eba\u4eec\u89e3\u51b3\u771f\u6b63\u91cd\u8981\u7684\u95ee\u9898\uff08\u4f8b\u5982\uff0c\u5141\u8bb8\u4eba\u4eec\u901a\u8fc7\u624b\u673a\u4ee5\u8f83\u4f4e\u7684\u6210\u672c\u652f\u4ed8\u8d26\u5355\uff0c\u800c\u4e0d\u662f\u6b65\u884c\u6570\u82f1\u91cc\u5230\u4e2d\u4ecb\u673a\u6784\u6216\u652f\u4ed8\u9ad8\u989d\u8d39\u7528\uff09\u3002\u8fd9\u79cd\u5de5\u4f5c\u6ca1\u6709&#39\uff1b\u5728\u53d1\u8fbe\u56fd\u5bb6\u7684\u8f6f\u4ef6\u4e2d\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u6240\u6709\u4f4e\u5782\u7684\u679c\u5b9e\u90fd\u5df2\u7ecf\u88ab\u91c7\u6458\u4e86\uff0c\u6240\u4ee5\u4f60\u53ea\u9700\u8981\u52aa\u529b\u8ba9\u732b\u7684\u56fe\u7247\u52a0\u8f7d\u5f97\u66f4\u5feb\uff0c\u6216\u8005\u8ba9\u5176\u4ed6\u4eba\u66f4\u5feb#39\uff1b\u4ed6\u7684\u5de5\u4f5c\u6548\u7387\u7a0d\u9ad8\uff0c\u7b49\u7b49\u3002\n\u6211\u4eec&#39\uff1b\u6211\u5728Wave we&#39\uff1b\u6211\u4eec\u5df2\u7ecf\u4ece\u4e00\u5bb6\u65e0\u4eba\u542c\u8bf4\u7684\u516c\u53f8\u53d8\u6210\u4e86\u585e\u5185\u52a0\u5c14\u5927\u591a\u6570\u6210\u5e74\u4eba\u7684Wave\u7528\u6237\uff08\u81ea\u90a3\u4ee5\u540e\uff0c\u6211\u4eec\u4e5f\u5728\u5176\u4ed6\u56fd\u5bb6\u63a8\u51fa\u4e86Wave\uff09\u3002\u770b\u7740\u8fd9\u4e00\u5207\u5c55\u5f00\uff0c\u771f\u662f\u4ee4\u4eba\u65e0\u6bd4\u5174\u594b\u3002\n\u5de5\u4f5c\u73af\u5883\u5f88\u597d\u2014\u2014\u6211\u7684\u540c\u4e8b\u662f\u6211\u6700\u53cb\u597d\u3001\u6700\u652f\u6301\u6211\u7684\u4eba\u4e4b\u4e00&#39\uff1b\u6211\u89c1\u8fc7\u9762\uff0c\u4eba\u4eec\u666e\u904d\u9f13\u52b1\u7167\u987e\u81ea\u5df1\u3002\u4ed6\u4eec&#39\uff1b\u4f60\u4e5f\u662f\u6211\u8ba4\u8bc6\u7684\u6700\u806a\u660e\u7684\u4eba\u4e4b\u4e00&#39\uff1b\u6211\u89c1\u8fc7\u3002\n\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u6709\u8da3\u4e14\u5177\u6709\u667a\u529b\u6311\u6218\u6027\u7684\u89d2\u8272\u3002\u8fd8\u6709\u66f4\u5177\u6311\u6218\u6027\u7684\u89d2\u8272\uff0c\u4f46\u6211\u53d1\u73b0\u8f6f\u4ef6\u5de5\u7a0b\u5728&#34\uff1b\u5f88\u96be\u8ba9\u4eba\u611f\u5174\u8da3&#34\uff1b\u548c&#34\uff1b\u4f60\u603b\u662f\u90a3\u4e48\u52aa\u529b\u5730\u5931\u8d25&#34\uff1b\u3002\n\u5b8c\u5168\u8fdc\u7a0b\u5de5\u4f5c\u53ef\u80fd\u4f1a\u88ab\u9694\u79bb\uff0c\u8fd9\u901a\u5e38\u4f1a\u88ab\u516c\u53f8\u5b9a\u671f\u524d\u5f80\u6211\u4eec\u8fd0\u8425\u7684\u56fd\u5bb6\u7684\u65c5\u884c\u6240\u62b5\u6d88\uff0c\u4f46\u65b0\u51a0\u75c5\u6bd2\u663e\u7136\u5df2\u7ecf\u963b\u6b62\u4e86\u8fd9\u4e00\u70b9\u3002\n\u5728\u975e\u6d32\u4ece\u4e8b\u6280\u672f\u5de5\u4f5c\u53ef\u80fd\u3002\u3002\u3002\u5177\u6709\u6311\u6218\u6027\uff0c\u4f8b\u5982\uff0c\u51e0\u4e4e\u6ca1\u6709\u6570\u636e\u4e2d\u5fc3\u2014\u2014\u4f60\u8981\u4e48\u8fd0\u884c\u81ea\u5df1\u7684\u673a\u5668\uff0c\u8981\u4e48\u5728\u53e6\u4e00\u4e2a\u5927\u9646\u4e0a\u4f7f\u7528\u786c\u4ef6\uff1b\u6bcf\u4ef6\u4e8b\u7684\u53ef\u9760\u6027\u90fd\u76f8\u5bf9\u8f83\u4f4e\u2014\u2014\u6211\u4eec\u548c\u6211\u4eec\u7684\u5408\u4f5c\u4f19\u4f34\u516c\u53f8\u90fd\u4f1a\u534a\u5b9a\u671f\u53d1\u751f\u7535\u529b\u548c\u7f51\u7edc\u4e2d\u65ad\uff1b\u76d1\u7ba1\u73af\u5883\u53ef\u80fd\u4ee4\u4eba\u56f0\u60d1\u3001\u5b98\u50da\u4e3b\u4e49\u548c/\u6216\u65e0\u6548\u3002\n\u5bf9\u4e8e\u4e00\u822c\u7684\u8f6f\u4ef6\u5de5\u7a0b\u6765\u8bf4\uff1a\u5b83\u80af\u5b9a\u9700\u8981\u5bf9\u6280\u672f\u5b66\u79d1\u7684\u70ed\u7231\u548c\u5b66\u4e60\u7684\u80fd\u529b\u3002\n\u5982\u679c\u60a8\u6709\u4efb\u4f55\u540e\u7eed\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u5c06\u5176\u53d1\u5e03\u5728\u8fd9\u91cc\u6216\u53d1\u7535\u5b50\u90ae\u4ef6\u81f3&#34\uff1bdavidshepherd7[at]gmail&#34\uff1b\u3002\n\u6211\u4eec&#39\uff1b\u6211\u4eec\u76ee\u524d\u6b63\u5728\u62db\u8058\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3001\u4ea7\u54c1\u7ecf\u7406\u548c\u5176\u4ed6\u4e00\u4e9b\u8fdc\u7a0b\u804c\u4f4d\u3002\u6240\u4ee5\u5982\u679c\u6211&#39\uff1bI\u2019\u6211\u63cf\u8ff0\u4e86\u4e00\u4e9b\u4f60\u611f\u5174\u8da3\u7684\u4e8b\u60c5\uff0c\u90a3\u4e48\u8bf7\u8054\u7cfb\u6211\u4eec\u548c/\u6216\u67e5\u770b\u6211\u4eec\u7684\u5de5\u4f5c\u9875\u9762\u3002\n\u6211\u7c97\u7565\u4f30\u8ba1\uff0c\u4e0e\u7ade\u4e89\u5bf9\u624b\u76f8\u6bd4\uff0c\u8d39\u7528\u7684\u51cf\u5c11\u662f\u6bcf\u67082000\u4e07\u7f8e\u5143\uff0c\u6211\u4eec&#39\uff1b\u6211\u4eec\u5728\u589e\u957f\uff0c\u6240\u4ee5\u8fd9\u662f\u4e0d\u65ad\u589e\u957f\u7684\uff01\n\u6211\u6d4f\u89c8\u4e86\u4e00\u4e0b\u7f51\u7ad9\uff0c\u770b\u770b\u662f\u5426\u6709\u4eba\u5f15\u7528\u8fc7\u8fd9\u4e2a\u7edf\u8ba1\u6570\u636e\uff08\u6216\u8005\u7c7b\u4f3c\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u6bd4\u5982&#34\uff1b\u8282\u7701\u7684\u603b\u8d39\u7528&#34\uff1b\uff09\uff0c\u6211\u4e0d\u80fd&#39\uff1b\u6211\u627e\u4e0d\u5230\u3002\n\u5982\u679c\u6709\u4eba\u80fd\u4e3a\u8fd9\u4e2a\u6570\u5b57\u521b\u5efa\u4e00\u4e2a\u7248\u672c&#39\uff1bit\u2019\u6ca1\u90a3\u4e48\u7c97\u7cd9\uff0c\u6211\u8ba4\u4e3a\u8fd9\u5c06\u662f\u5bf9\u804c\u4e1a\u9875\u9762\u7684\u4e00\u4e2a\u6781\u597d\u7684\u8865\u5145\u2014\u2014it&#39\uff1b\u5f88\u96be\u60f3\u8c61\u5176\u4ed6\u5927\u591a\u6570\u521d\u521b\u516c\u53f8\u80fd\u505a\u4e9b\u4ec0\u4e48\u6765\u5438\u5f15\u6709\u5f71\u54cd\u529b\u7684\u5019\u9009\u4eba\u3002\n\u4e0d\u51c6\u786e\u7684\u4e3b\u8981\u6765\u6e90\u662f\u6211&#39\uff1bI\u2019\u2019\u6211\u4e0d\u786e\u5b9a\u5bf9\u4e00\u4e2a\u8fdb\u884cWave\u652f\u4ed8\u7684\u4eba\u6765\u8bf4\uff0c\u4ec0\u4e48\u624d\u662f\u6b63\u786e\u7684\u53cd\u4e8b\u5b9e\u3002\u5b83&#39\uff1b\u8fd9\u53ef\u80fd\u662f\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff1a\u6839\u672c\u4e0d\u505a\u8f6c\u79fb\uff0c\u4f7f\u7528\u4e00\u4e9b\u975e\u6b63\u5f0f\u7684\u65b9\u6cd5\uff0c\u4ee5\u53ca\u4f7f\u7528\u6211\u4eec\u7684\u4e3b\u8981\u76d1\u7ba1\u8005\u3002\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u53ea\u662f\u5047\u8bbe\u6240\u6709\u7684\u8f6c\u4f1a\u90fd\u662f\u901a\u8fc7\u6211\u4eec\u7684\u7ade\u4e89\u5bf9\u624b\u5b8c\u6210\u7684\u3002\n34\u5c81\uff1b\u6240\u6709\u8f6c\u8ba9\u5747\u4f7f\u7528\u6211\u4eec\u7684\u7ade\u4e89\u5bf9\u624b&#34\uff1b\u5047\u8bbe\u4f3c\u4e4e\u8db3\u591f\u5408\u7406\uff1b\u6211\u4e0d&#39\uff1b\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u4e2a\u4f30\u8ba1\u5fc5\u987b\u975e\u5e38\u4e25\u683c\u3002", "note_en": "In response to  Aaron Gertler&#39;spromptI&#39;m writing a bit about my job. I hope this will be useful to software engineerswho are in positions where their work is not EA relevant and EAs who areconsidering software engineering as a career path.\n Edit: I just noticed that in the time since I started writing this post someone else has posted about working as a  web developer. Luckily I&#39;ve mostly focused my position at Wave whereas they&#39;ve written about being a software engineer in general, so I think the posts are complimentary.\n  I work as a lead software engineer for  Wave mobilemoney. We&#39;re working to build radically inclusive andaffordable financial infrastructure in sub-Saharan Africa. My job is a mixtureof programming, mentoring/leading other engineers on my team, and a bit ofproduct design work. I work full remotely from Manchester, UK.\n  Directly - Wave is dramatically cheaper than competitors, so we save people alot of money for people who often don&#39;t have much money in the first place.My rough estimate for the reduction in fees vs competitors is 20 million USDper month, and we&#39;re growing so this is constantly increasing!\n Less concretely there are also benefits from having a reliable, fast, andwidely used mobile-money network available, see e.g. link or link.\n Donations - with most jobs pay is heavily location dependent, but I&#39;m notwilling to make the sacrifice of living somewhere that will leave me isolatedfrom my friends and family in order to earn more money. Wave&#39;s pay is(almost) location-independent so as a European software engineer working forWave allows me to donate substantially more than I would otherwise. It&#39;sroughly 3x-10x+ depending on how much the equity ends up being worth.\n Of these two I think the direct work is probably the more valuable part: eventaking the fee savings alone and dividing evenly over all Wave employees wouldbe around 500K USD per Wave employee per year. But a software engineering roleprobably contributes more than say a callcenter role so my contribution isprobably more than that. Then there&#39;s the potential for massive continued growthof Wave which could amplify the impact of work done now by 10-100x.\n It&#39;s not completely clear-cut though since 1. the largest fee savings/mobilemoney network benefits will probably go to richer people and 2. GiveWellestimates AMF donations to be around  10x morevaluablethan cash transfers.\n  I think there&#39;s a pretty standard route to getting a software job (i.e. STEM orCS degree then junior eng role, maybe with some self-driven learning or abootcamp first), but I&#39;ll describe my path anyway because it was slightlynon-standard:\n Maths and Physics undergraduate - I think this was very helpful in getting theright mindset for software engineering and learning hard things in general,but only a tiny fraction of what I learned during my undergraduate is actuallyrelevant to my job.\n PhD in computational physics - this is when I really learned to program well.I was working on large complex software so I was forced to use proper softwareengineering best practices to be able to deal with it. I think this was a bighelp in getting to where I am now. Still not sure if I would recommend doing aPhD though: it was definitely bad for my mental health.\n 4 years as a software engineer at Biosite - more technical skills, and generalsoftware work experience. Also my introduction to the idea of prioritisingwork based on impact rather than just trying to do everything at once. (Reallywish I&#39;d been pushed to think about this more during my PhD!)\n As well as the above I&#39;ve spent a lot of time (a few hours a week for ~6 years)writing open source software for fun in my spare time and reading books on thesubject. I think this probably helped to prepare me for the job as much or morethan my undergraduate degree. Possibly even more than a CS undergraduate wouldhave done.\n  Disclaimer: this is written from memory from 2 years ago, I might not have goteverything right.\n The application process took a fairly typical amount of work for a software jobin my experience. It took around 10-12 hours total (including prep) over 4parts: 2 coding exercises and 2 chats. Everyone I interacted with was friendlyand pleasant throughout, I think it would have been a positive experience evenif I didn&#39;t get the job.\n The first chat was just a general intro to Wave and opportunity to askquestions. I didn&#39;t explicitly prep for this but I had a few questions anyway. Inretrospect I probably should have spent some time thinking of more questions.\n Then there were the programming exercises. These were both intense but fun, Ithink it was around 6 hours total + a couple of hours prep. At the time therecommended prep was something fairly wishy-washy like &#34;think about how to solvethe problem but don&#39;t write any code&#34; (I think this has changed since). So I didthis recommended prep and I also made sure I was familiar with all thetechnologies that I would be using by writing a quick implementation of sometrivial application with same language and framework. I think I&#39;m happy with theamount of prep that I did. I found out afterwards that I did fine on both of theexercises, but while I was doing them I felt like there wasn&#39;t enough time tofully solve the exercise (this was probably intentional). That was what made itfeel intense.\n Finally there was the last interview with one of the founders. I think this wasa final check for culture fit, we talked about things along the lines of why Iwanted to work for Wave, what motivates me in general, etc. As with the otherchat I didn&#39;t really spend any time prepping for this and maybe I should havedone something more.\n Pretty quickly after the last interview (I think it was same or next day) I gota job offer. I took a day or so to think it through to be completely sure thatit was what I wanted, but really there was no way I was going to say no!\n I applied for another job at the same time as I applied for Wave. The other jobwas some boring corporate transportation arranging startup who rejected me (oneof the reasons was because I didn&#39;t seem excited enough about their product, soI guess they got that right!). Their application process was fairly similar tothe Wave one. Doing two applications at once was manageable but I don&#39;t think Icould have handled more than 3 applications while also working full time.\n    ~25% of my time on supporting/mentoring the other software engineers on myteam - helping them with any tricky problems, giving guidance on technicaldesigns, etc.\n ~25% of my time working on product design problems - digging into data toanswer questions or look for issues; working out how to make new features easyto use, secure, and reliable.\n ~10% of my time arranging other things - trying to make sure all of the piecesare in place for projects to go smoothly, ensuring that the right people aretalking to each other, etc.\n I&#39;m the tech lead for my team, so most software engineers spend less time onmentoring/product/arranging things and more on writing code than I do. But Wavegenerally encourages all engineers to get involved in product decisions and takefull ownership over the problems they are solving, so there might still be morenon-programming work than at other companies.\n More specifically: I work on the integrations team, where we build features thatinteract with systems run by other companies. The most common example of thiskind of feature is enabling users to pay their bills in the Wave app. This mightsound simple and boring but (for better or worse) many of our partners have veryidiosyncratic APIs. So every new integration is an interesting challenge infiguring how we can adapt to the specific functionality and requirements of thatparticular API.\n   I get to directly work on solving really important problems for people (e.g.allowing people to cheaply pay their bills from their phone instead of walkingmiles to an agency or paying large fees). This kind of work doesn&#39;t seem to bepossible in developed world software because all of the low-hanging fruit hasalready been picked so you just work on making cat pictures load faster ormaking someone else&#39;s job slightly more efficient, etc.\n We&#39;re growing absurdly quickly, during my time at Wave we&#39;ve gone from being atiny company that no-one had heard of to the majority of adults in Senegalbeing Wave users (and we&#39;ve since launched in other countries too). This isincredibly exciting to watch unfold.\n The work environment is great - my colleagues are some of the most friendlyand supportive people I&#39;ve met, looking after yourself is widely encouraged.They&#39;re also some of the smartest people I&#39;ve ever met.\n  It&#39;s an interesting and intellectually challenging role. There are morechallenging roles, but I find that software engineering has a nice balancebetween &#34;hard enough to be interesting&#34; and &#34;so hard you fail all the time&#34;.\n   Fully remote work can be isolating, this is usually counteracted by regularcompany trips to the countries where we operate but covid has obviouslysuspended that.\n Working on technology in Africa can be... challenging, e.g. there are few/nodatacenters - you either run your own machines or use hardware on anothercontinent; the reliability of everything is relatively low - power andinternet outages happen semi-regularly both for us and for our partnercompanies; the regulatory environment can be confusing, bureaucratic, and/orineffective.\n For software engineering in general: it definitely requires a love of andaptitude for learning about technical subjects.\n  If you have any follow up questions feel free to post them here or email me at&#34;davidshepherd7 [at] gmail&#34;.\n We&#39;re currently hiring software engineers, product managers, and a bunch ofother remote positions. So if any of what I&#39;ve described sounds like somethingyou would be interested in doing then please reach out and/or check out  ourjobs page.\n  My rough estimate for the reduction in fees vs competitors is 20 million USD per month, and we&#39;re growing so this is constantly increasing!\n I glanced around the website to see if this statistic was cited anywhere (or a similar statistic like &#34;total fees saved&#34;), and I couldn&#39;t find it.\n If anyone can create a version of this number that&#39;s a bit less rough, I think it would be a fantastic addition to the careers page \u2014 it&#39;s hard to picture what most other startups could do to match that as an attraction for impact-focused candidates.\n The main source of inaccuracy is that I&#39;m not sure what the right counterfactual is for someone doing a Wave payment. It&#39;s probably some proportion of each of: not doing the transfer at all, using some informal method, and using our main comptetitor. For simplicity in my estimate I just assumed that all transfers would have been done using our competitor.\n The &#34;all transfers use our competitor&#34; assumption seems reasonable enough; I don&#39;t think the estimate has to be very rigorous.", "posttime": "2022-02-25 23:23:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "writing", "title": "\u5199\u6211\u7684\u5de5\u4f5c", "title_en": "Writing about My Job", "transed": 1, "url": "https://forum.effectivealtruism.org/posts/pyvybGkGYaFAeNtGi/writing-about-my-job-software-engineer-at-wave", "via": "", "real_tags": ["writing"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075008, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u91cc&#39\uff1bs my\uff08\u5f53\u524d\uff09\u6700\u5c0f\u8bbe\u7f6e\uff1a\u8bbe\u7f6eai nocp\u6709\u5411\u56feek hid ru sc vb wmnu noeb noet nosol\u8bbe\u7f6ebs=2 fo=cqrt ls=2 shm=at tw=72 ww=&lt&gt\uff1b\uff0ch\u3001 l\u8bbe\u7f6e\u6ce8\u91ca=b:#\uff0c\uff1a%\uff0cn:&gt\uff1bset list listchars=tab:\uff0ctrail:set viminfo=%\uff0c&#39\uff1b50,\\&#34;100\uff0c\uff1a100\uff0cn~/\u3002viminfo\n\u8fd9\u4f1a\u6539\u53d8\u8bb8\u591a\u9009\u9879\u7684\u503c\uff0c\u542f\u7528\u4e0d\u517c\u5bb9Vi\u4f46\u975e\u5e38\u597d\u7684\u529f\u80fd\u3002\n\u901a\u8fc7\u4e24\u4e2a\u5b57\u7b26\u7684\u7ec4\u5408\u542f\u7528\u7279\u6b8a\u5b57\u7b26\u7684\u8f93\u5165\u3002\u793a\u4f8b\uff1a\u7c7b\u578b&#39\uff1ba&#39\uff1b\uff0c\u901a\u8fc7\u952e\u5165CTRL-H-\u5c06\u5176\u5220\u9664\uff0c\u7136\u540e\u952e\u5165&#39\uff1b\uff1a&#39; - \u8fd9\u5c06\u5bfc\u81f4umlaut\uff1a\u00e4So Vim\u8bb0\u4f4f\u60a8\u5220\u9664\u7684\u5b57\u7b26\uff0c\u5e76\u5c06\u5176\u4e0e\u60a8\u952e\u5165\u7684\u5b57\u7b26\u7ed3\u5408\u8d77\u6765&#34\uff1b34\u5c81\u4ee5\u4e0a\uff1b\u666e\u96f7\u7ef4\u5965\u65af\u4e00\u53f7\u3002\n\u542f\u7528\u5bf9\u4ee5ESC\u5f00\u5934\u7684\u7bad\u5934\u952e\u4ee3\u7801\u7684\u8bc6\u522b\u3002\u8fd9\u901a\u5e38\u4f1a\u7ed3\u675f\u5f53\u524d\u6a21\u5f0f\uff08\u63d2\u5165/\u9644\u52a0/\u6253\u5f00\u6a21\u5f0f\uff09\u5e76\u8fd4\u56de\u547d\u4ee4\u6a21\u5f0f\uff08\u4e5f\u79f0\u4e3a\u6b63\u5e38\u6a21\u5f0f\uff09\uff0c\u5176\u4f59\u4ee3\u7801\u5c06\u89e6\u53d1\u547d\u4ee4\u3002\u5478\uff01\u867d\u7136\u6211\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7bad\u5934\u952e\uff0c\u4f46\u6709\u65f6\u6211\u60f3\u5c06\u5b83\u4eec\u4e0e\u66ff\u6362\u6a21\u5f0f\u548c\u865a\u62df\u7f16\u8f91\u4e00\u8d77\u4f7f\u7528\uff0c\u6211\u4e0d&#39\uff1b\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4e0d\u60f3\u548c\u9999\u8349vi\u517c\u5bb9\u3002\uff08\u8d77\u8bc9\u6211\u5427\uff09\u3002\n\u5141\u8bb8\u9690\u85cf\u7f13\u51b2\u533a\uff0c\u5373\u4f7f\u5b83\u4eec\u5305\u542b\u5c1a\u672a\u5199\u56de\u5173\u8054\u6587\u4ef6\u7684\u4fee\u6539\u3002\uff08\u542c\u8d77\u6765\u5f88\u4e13\u4e1a\uff0c\u662f\u5417\uff1f\uff09\n\u663e\u793a&#34\uff1b\u5c3a\u5b50&#34\uff1b\u5bf9\u4e8e\u5149\u6807\uff0c\u5373\u5176\u5f53\u524d\u4f4d\u7f6e\u4e0e\u884c+\u5217\u4ee5\u53ca\u7f13\u51b2\u533a\u5185\u7684\u767e\u5206\u6bd4\u3002\u8fd9\u6837\u6211\u5c31\u4e0d\u7528\u952e\u5165CTRL-G\u4e86\uff08\u6216\u8005\u66f4\u597d\u7684\u662f&#34\uff1bG CTRL-G&#34\uff1b\uff09-\u5f88\u591a\u7528\u6237\u4e5f\u559c\u6b22\u8fd9\u4e2a\u529f\u80fd\u3002\u5c55\u793aVim\u7684\u65f6\u5019\u611f\u89c9\u5f88\u597d\u3002\n\u663e\u793a*\u4e0d\u5b8c\u6574*\u547d\u4ee4\u7684\u8f93\u5165\u3002\u6240\u4ee5\u5f53\u4f60\u8f93\u5165\u547d\u4ee4\u65f6&#34\uff1bY23ddy\u4f60\u4f1a\u770b\u5230&#34\uff1by23dd\uff0c\u7136\u540e\u518d\u952e\u5165\u6700\u540e\u4e00\u4e2a&#39\uff1bd&#39\uff1b\u8fd9\u5c31\u5b8c\u6210\u4e86\u547d\u4ee4\u3002\u5f53\u4f60\u5bf9\u5df2\u7ecf\u8f93\u5165\u7684\u5185\u5bb9\u83b7\u5f97\u4e00\u4e9b\u53cd\u9988\u65f6\uff0c\u5b66\u4e60Vi\u4f1a\u53d8\u5f97\u66f4\u7b80\u5355\u3002\n\u5229\u7528&#34\uff1b\u72b6\u6001\u884c&#34\uff1b\u663e\u793a\u547d\u4ee4\u884c\u547d\u4ee4\u3001\u6587\u4ef6\u540d\u7b49\u53ef\u80fd\u7684\u5b8c\u6574\u6027\u3002\u5141\u8bb8\u5728\u5217\u8868\u4e2d\u524d\u540e\u5faa\u73af\u3002\u8fd9\u88ab\u79f0\u4e3a&#34\uff1b\u91ce\u751f\u83dc\u5355&#34\uff1b\u3002\n\u628a\u94c3\u5173\u6389\u3002\u4f60\u77e5\u9053&#34\uff1b\u54d4#34\uff1b\u5f53\u4f60\u5728\u6b63\u5e38\u6a21\u5f0f\u4e0b\u8f93\u5165ESC\u65f6\uff0c\u4f60\u4f1a\u5f97\u5230\u4ec0\u4e48\uff1f\u5584\u5f85\u4f60\u7684\u540c\u4e8b\u2014\u2014\u5173\u6389\u5b83\uff01\uff1b-\uff09\n\u63d2\u5165\u6587\u672c\u65f6\uff0c\u4e0d\u8981\u5c06\u5236\u8868\u7b26\u5c55\u5f00\u4e3a\u7a7a\u683c\u3002\u867d\u7136\u6211\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u6587\u672c\u4e2d\u7684\u6240\u6709\u63a7\u5236\u5b57\u7b26\uff0c\u4f46\u5728\u952e\u5165\u8868\u683c\u65f6\uff0c\u6211\u53ef\u4ee5\u5145\u5206\u5229\u7528\u5236\u8868\u7b26\u3002\u6211\u77e5\u9053\u6211\u53ef\u4ee5\u8ba9Vim\u5728\u4ee5\u540e\u5c55\u5f00\u9009\u9879\u5361\uff08\u4f7f\u7528&#34\uff1b\uff1aretab&#34\uff1b\u547d\u4ee4\uff09\u3002\u4f60\u7684\u91cc\u7a0b\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u3002\n\u5f53\u8df3\u8f6c\u5230\u7a97\u53e3\u4e2d\u7684\u5176\u4ed6\u884c\u65f6\uff0c\u9632\u6b62\u5149\u6807\u66f4\u6539\u5f53\u524d\u5217\u3002\uff08\u5982\u679c\u60a8\u559c\u6b22\uff0c\u90a3\u4e48\u60a8\u5c06\u4f7f\u7528Vim-6\u8fdb\u884c\u865a\u62df\u7f16\u8f91\uff01\uff09\n\u81ea\u52a8\u7f29\u8fdb\u3002\u5f53\u4f60\u5f00\u59cb\u4e00\u4e2a\u65b0\u884c\u65f6\uff0c\u8fd9\u4f1a\u81ea\u52a8\u63d2\u5165\u5f53\u524d\u884c\u7684\u6307\u793a\uff1b\u5728\u63d2\u5165\u6a21\u5f0f\u4e0b\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u63d2\u5165CTRL-J\u6216CTRL-M\u6765\u7ed3\u675f\u5f53\u524d\u884c\uff0c\u4ece\u800c\u5f00\u59cb\u4e00\u4e2a\u65b0\u884c\uff0c\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b\uff0c\u60a8\u53ef\u4ee5&#39\uff1bd&#34\uff1b\u5f00\u653e\u5f0f&#34\uff1b\u4e00\u6761\u65b0\u7684\u751f\u4ea7\u7ebf\u6709&#39\uff1bo&#39\uff1b\u6216&#39\uff1bO&#39\uff1b\u5206\u522b\u9002\u7528\u4e8e\u7535\u6d41\u7ebf\u4ee5\u4e0b\u6216\u4ee5\u4e0a\u3002\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c&#34\uff1b\u81ea\u52a8\u7f29\u8fdb&#34\uff1b\u5b9e\u9645\u4e0a\u662f\u9999\u8349vi\u7684\u4e00\u4e2a\u7279\u70b9\u3002\n\u5e26\u6b64\u503c\u7684\u9000\u683c\u5141\u8bb8\u4f7f\u7528\u9000\u683c\u5b57\u7b26\uff08\u4e5f\u79f0\u4e3aCTRL-H\u6216&#34\uff1b&lt\uff1b-&#34\uff1b\uff09\u7528\u4e8e\u5c06\u5149\u6807\u79fb\u52a8\u5230\u81ea\u52a8\u63d2\u5165\u7684\u7f29\u8fdb\u548c\u884c\u7684\u5f00\u59cb/\u7ed3\u675f\u5904\u3002\uff08\u53e6\u8bf7\u53c2\u89c1whichwrap\u9009\u9879\uff09\n\u683c\u5f0f\u9009\u9879\u4f1a\u5f71\u54cd\u5185\u7f6e\u7684&#34\uff1b\u6587\u672c\u683c\u5f0f&#34\uff1b\u547d\u4ee4\u9ed8\u8ba4\u503c\u7701\u7565\u4e86&#34\uff1b\u56fd\u65d7\u548c#34&#39;r&#39\uff1b\u8fd9\u4f7f\u5f97Vim\u63d2\u5165a&#34\uff1b\u8bc4\u8bba\u8d1f\u8d23\u4eba&#34\uff1b\u5f53\u5f00\u59cb\u4e00\u6761\u65b0\u7684\u8def\u7ebf\u65f6\u3002\u8fd9\u5141\u8bb8\u5728\u6ce8\u91ca\u4e2d\u6dfb\u52a0\u6587\u672c\uff0c\u5e76\u5728\u5f00\u59cb\u65b0\u884c\u540e\u4ecd\u4fdd\u7559\u6ce8\u91ca\u3002\u5b83\u8fd8\u5141\u8bb8\u5728\u4e0d\u6253\u65ad\u6ce8\u91ca\u7684\u60c5\u51b5\u4e0b\u6253\u65ad\u6ce8\u91ca\u4e2d\u7684\u884c\u3002\n\u8fd9\u4f7f\u5f97Vim\u5373\u4f7f\u53ea\u663e\u793a\u4e00\u4e2a\u7a97\u53e3\uff0c\u4e5f\u4f1a\u663e\u793a\u4e00\u4e2a\u72b6\u6001\u884c\u3002\u8c01\u8bf4\u72b6\u6001\u7ebf\u53ea\u5bf9\u5206\u9694\u591a\u4e2a\u7a97\u53e3\u6709\u7528\uff1f\n\u8fd9\u6837\u53ef\u4ee5\u5c06\u6bcf\u6761\u6d88\u606f\u7684\u957f\u5ea6\u7f29\u77ed\u5230\u6700\u5c0f\uff0c\u5e76\u907f\u514d\u5728\u6d88\u606f\u548c&#34\uff1b\u6309\u4e00\u4e2a\u952e&#34\uff1b\u4e0e\u8fd9\u4e9b\u914d\u5957\u7684\u63d0\u793a\u3002\n\u8fd9\u4f1a\u663e\u5f0f\u5730\u5c06\u6587\u672c\u5bbd\u5ea6\u8bbe\u7f6e\u4e3a72\u4e2a\u5b57\u7b26\u3002\u5728insert modeVim\u4e2d\uff0c\u6bcf\u6b21\u5b8c\u6210\u4e00\u4e2a\u5b57\u540e\uff0cVIM\u90fd\u4f1a\u68c0\u67e5\u5176\u7ed3\u5c3e\u662f\u5426\u8d85\u8fc7\u8be5\u5bbd\u5ea6\uff1b\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u5b83\u4f1a\u628a\u8fd9\u4e2a\u8bcd\u6253\u65ad\u5230\u4e0b\u4e00\u884c\u3002\u8bf7\u6ce8\u610f\uff0cVim\u5728\u5e94\u7528\u6362\u884c\u7b26\u65f6\u4f1a\u5220\u9664\u5c3e\u968f\u7a7a\u683c\uff0c\u8fd9\u662f\u8bb8\u591a\u7f16\u8f91\u5668\u90fd\u7f3a\u5c11\u7684\u529f\u80fd\uff08\u5f53\u7136\uff0c\u8fd9\u4f1a\u7559\u4e0b\u5c3e\u968f\u7a7a\u683c\uff09\u3002\u6ce8\u610f\uff1a\u53ea\u6709\u5f53\u201c\u5df2\u5b8c\u6210\u201d\u7684\u5355\u8bcd\u8d8a\u8fc7\u884c\u65f6\uff0c\u6362\u884c\u7b26\u624d\u9002\u7528\uff1b\u5f53\u4f60\u5728\u524d\u9762\u63d2\u5165\u4e00\u4e2a\u5355\u8bcd\uff0c\u5c06\u5176\u4ed6\u5355\u8bcd\u79fb\u5230\u884c\u4e0a\u65f6\uff0cVim\u5c06*\u4e0d*\u5c06\u884c\u672b\u7684\u5355\u8bcd\u79fb\u5230\u4e0b\u4e00\u884c\uff01\u7a0b\u5e8f\u5458\u5f53\u7136\u4e0d\u4f1a&#39\uff1b\u6211\u4e0d\u60f3\u90a3\u6837\u3002\u5b83&#39\uff1b\u8fd9\u662f\u4e00\u4e2a\u7279\u8272\uff01\uff01\n\u6709\u51e0\u4e2a\u547d\u4ee4\u53ef\u4ee5\u5728\u76f4\u7ebf\u5185\u79fb\u52a8\u5149\u6807\u3002\u5f53\u60a8\u5230\u8fbe\u4e00\u884c\u7684\u5f00\u59cb/\u7ed3\u675f\u65f6\uff0c\u8fd9\u4e9b\u547d\u4ee4\u5c06\u5931\u8d25\uff0c\u56e0\u4e3a\u60a8\u65e0\u6cd5\u7ee7\u7eed\u3002\u7136\u800c\uff0c\u8bb8\u591a\u7528\u6237\u5e0c\u671b\u5149\u6807\u79fb\u52a8\u5230\u4e0a\u4e00\u884c/\u4e0b\u4e00\u884c\u3002Vim\u5141\u8bb8\u60a8\u9009\u62e9\u54ea\u4e9b\u547d\u4ee4\u5c06&#34\uff1b\u5305\u88f9&#34\uff1b\u5149\u6807\u56f4\u7ed5\u7ebf\u6761\u8fb9\u6846\u3002\u8fd9\u91cc\u6211\u5141\u8bb8\u5149\u6807\u5de6/\u53f3\u952e\u4ee5\u53ca&#39\uff1bh&#39\uff1b\u548c&#39\uff1bl&#39\uff1b\u547d\u4ee4\u53bb\u505a\u90a3\u4ef6\u4e8b\u3002\nVim\u53ef\u4ee5\u91cd\u65b0\u683c\u5f0f\u5316\u6587\u672c\u5e76\u4fdd\u7559\u6ce8\u91ca\uff08\u6ce8\u91ca\u884c\uff09\uff0c\u5373\u4f7f\u5728\u51fa\u73b0\u51e0\u79cd\u6ce8\u91ca\u7f29\u8fdb\u65f6\u4e5f\u662f\u5982\u6b64\uff1b\u5de2&#34\uff1b\u5728\u5185\u90e8\uff08\u8fd9\u5bf9\u4e8e\u91cd\u65b0\u683c\u5f0f\u5316\u7535\u5b50\u90ae\u4ef6\u548c\u65b0\u95fb\u4e2d\u5f15\u7528\u7684\u6587\u672c\u975e\u5e38\u6709\u7528\u3002\uff09\u4f46\u662f\u4f60\u9700\u8981\u544a\u8bc9Vim\u8fd9\u4e9b\u8bc4\u8bba\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002\u6ce8\u91ca\u901a\u5e38\u4ee5\u67d0\u4e2a\u5b57\u7b26\u4e32\u5f00\u5934\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u7a7a\u683c\u3002\u6ce8\u91ca\u8fd8\u53ef\u4ee5\u8de8\u8d8a\u4e00\u4e9b\u884c\uff0c\u901a\u8fc7\u4e00\u4e9b\u5b57\u7b26\u4e32\u5f00\u59cb\uff0c\u8df3\u8fc7\u4e2d\u95f4\u90e8\u5206\uff0c\u7136\u540e\u7528\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7ed3\u675f\uff08\u4f8b\u5982\uff0c\u5728C++\u4e2d\u8003\u8651\u6ce8\u91ca\uff09\u3002\u6211\u53ea\u662f\u5220\u9664\u4e86&#34\uff1b/*foo*/#34\uff1b\u6839\u636e\u9ed8\u8ba4\u503c\u8fdb\u884c\u8bc4\u8bba\uff0c\u5e76\u6dfb\u52a0&#39\uff1b\uff09&#39; \u4e5f\u53ef\u4ee5\u662f&#34\uff1b\u5d4c\u5957\u6ce8\u91ca&#34\uff1b\u3002\n\u8fd9\u4e2a\u9009\u9879\u5f88\u9177\uff01\u6216\u8005\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u8bf4&#34\uff1b\u5176\u4ed6\u7f16\u8f91\u6ca1\u6709&#39\uff1b\u6211\u4e00\u70b9\u4e5f\u6ca1\u6709&#34;\u8fd9\u4e9b\u5b57\u7b26\u88ab\u79f0\u4e3a&#34\uff1b\u5217\u51fa\u5b57\u7b26\u548c#34\uff1b\u56e0\u4e3a\u5b83\u4eec\u4e0evanilla vi\u7684\u5217\u8868\u9009\u9879\u76f8\u5173\uff1a\u8fd9\u5c06\u901a\u8fc7\u6dfb\u52a0&#39\u6765\u663e\u793a\u884c\u7684\u7ed3\u5c3e$&#39; \u5728\u6bcf\u884c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u540e\u7b7e\u540d\uff0c\u5e76\u5c06\u6240\u6709\u5236\u8868\u7b26\u66ff\u6362\u4e3a&#39^\u6211&#39\uff1b\u3002\u4e0d\u8fc7\uff0c\u6700\u597d\u8fd8\u662f\u4ee5\u6269\u5c55\u7684\u5f62\u5f0f\u663e\u793aTABsshown\u3002Vim\u8fd8\u901a\u8fc7\u4f7f\u5c3e\u968f\u7a7a\u683c\u53ef\u89c1\uff0c\u4f7f\u5176\u66f4\u8fdb\u4e00\u6b65\u3002\u80fd\u591f\u770b\u5230EOL\u3001\u5236\u8868\u7b26\u548c\u5c3e\u968f\u7a7a\u683c\u5df2\u6210\u4e3a\u6bcf\u4e2a\u7f16\u8f91\u5668\u7684\u7edd\u5bf9\u5fc5\u5907\u3002\n\u5173\u4e8e&#34\uff1bviminfo\u548c#34\uff1b\u662f\u901a\u8fc7\u5c06\u6570\u636e\u4fdd\u5b58\u5728&#34\u4e2d\uff0c\u4e3a\u4e0b\u4e00\u4e2a\u7f16\u8f91\u4f1a\u8bdd\u4fdd\u5b58\u4fe1\u606f\uff1bviminfo\u6587\u4ef6&#34\uff1b\u3002\u6240\u4ee5\u4e0b\u6b21\u6211\u542f\u52a8Vim\u65f6\uff0c\u6211\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528\u641c\u7d22\u5386\u53f2\u8bb0\u5f55\u4e2d\u7684\u641c\u7d22\u6a21\u5f0f\u548c\u547d\u4ee4\u884c\u4e2d\u7684\u547d\u4ee4\u3002\u6211\u8fd8\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u7684&#34\uff1b\u518d\u6b21\u52a0\u8f7d\u6587\u4ef6\uff1ab bufname&#34\uff1b\u3002Vim\u8fd8\u8bb0\u5f97\u5149\u6807\u5728\u6211\u7f16\u8f91\u7684\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\u3002\u89c1&#34\uff1b\uff1a\u5e2e\u52a9viminfo&#34\uff1b\u6709\u5173Vim\u7684\u66f4\u591a\u4fe1\u606f&#39\uff1bs&#34\uff1bviminfo&#34\uff1b\uff1a-}\n\u6ce8\uff1a\u6211\u5bf9\u9009\u9879\u8fdb\u884c\u4e86\u5206\u7ec4\uff0c\u4f7f\u5e03\u5c14\u503c\uff08\u8bfb\u4e3a\uff1a\u5f00/\u5173\u771f/\u5047\uff09\u6392\u5728\u7b2c\u4e00\u4f4d\uff0c\u7136\u540e\u662f\u5c11\u91cf&#34\uff1b\u65d7\u5e1c&#34\uff1b\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u5f88\u957f\u7684\u503c\u3002\n\u5e26\u7740\u6240\u6709\u7684&#34\uff1b\uff1a\u7b2c34\u7ec4\uff1b\u547d\u4ee4\u60a8\u53ef\u4ee5\u5728&#34\u4e4b\u524d\u7701\u53bb\u5192\u53f7\uff1b\u7b2c34\u7ec4\uff1b\u5f53\u60a8\u5c06\u5b83\u4eec\u653e\u5165\u5b89\u88c5\u6587\u4ef6\u65f6\u3002\u60a8\u53ef\u4ee5\u5728\u4e00\u4e2a\u547d\u4ee4\u884c\u4e2d\u8bbe\u7f6e\u591a\u4e2a\u9009\u9879\u3002\n\u671f\u6743\u7684\u4ef7\u503c&#34\uff1b\u8bc4\u8bba&#34&#34;listchars&#34\uff1b\uff0c\u548c&#34\uff1bviminfo\u548c#34\uff1b\u53ef\u80fd\u4f1a\u53d8\u5f97\u5f88\u957f\uff0c\u6240\u4ee5\u6211\u5728\u684c\u5b50\u4e0a\u628a\u5b83\u4eec\u5206\u6210\u4e86\u51e0\u4e2a&#34\uff1b\u7b2c34\u7ec4\uff1b\u8bed\u53e5\uff0c\u4f7f\u7528\uff1aset+=\u5411\u5f53\u524d\u503c\u6dfb\u52a0\u66f4\u591a\u503c\u3002\n\u83b7\u53d6\u9009\u9879\u5e2e\u52a9\uff1a\u60a8\u53ef\u4ee5\u901a\u8fc7\uff1ahelp option\u83b7\u53d6\u6709\u5173\u9009\u9879\u53ca\u5176\u503c\u7684\u5e2e\u52a9\u3002\u60a8\u65e0\u9700\u8f93\u5165\u5b8c\u6574\u7684\u9009\u9879\u540d\u79f0\u2014\u2014\u8bb8\u591a\u9009\u9879\u540d\u79f0\u90fd\u6709\u7f29\u5199\uff0c\u4f8b\u5982&#34\uff1bai&#34\uff1b\u7f29\u5199&#34\uff1b\u81ea\u52a8\u7f29\u8fdb&#34\uff1b-\u548c&#39\uff1btabstop\u548c#39\uff1b\u53ef\u4ee5\u7f29\u5199\u4e3a&#34\uff1bts&#34\uff1b\u3002\u53ea\u9700\u8f93\u5165&#34\uff1bh&#34\uff1b\u800c\u4e0d\u662f&#34\uff1b\uff1a\u5e2e\u52a9&#34\uff1b\u3002\u4e0d\u662f&#39\uff1bt&#34\uff1b\uff1ah ai&#34\uff1b\u6bd4&#34\uff1b\u77ed\u5f97\u591a\uff1a\u5e2e\u52a9\u81ea\u52a8\u7f29\u8fdb&#34\uff1b\uff1f\u8b66\u544a\uff1ahts\u5728\u547d\u4ee4\uff1ats\uff1b\u4f46\u662f\u5f53\u4f60\u60f3\u77e5\u9053*\u9009\u9879*\u548c#34\uff1bts&#34\uff1b\u60a8\u5e94\u8be5\u81f3\u5c11\u6dfb\u52a0\u4e00\u4e2a&#34\uff1b\u52fe\u9009&#34\uff1b\u5728\u5b83\u4e4b\u524d\u6216\u4e4b\u540e\uff0c\u5373\uff1ah&#39\uff1btsor:HTS&#39\uff1b\u3002", "note_en": "Here&#39;s my (current) minimal setup: set ai nocp digraph ek hid ru sc vb wmnu noeb noet nosol set bs=2 fo=cqrt ls=2 shm=at tw=72 ww=&lt;,&gt;,h,l  set comments=b:#,:%,n:&gt;set list listchars=tab:,trail:set viminfo=%,&#39;50,\\&#34;100,:100,n~/.viminfo\n  This changes the values of a LOT of options,enabling features which are not Vi compatiblebut really really nice.\n Enables input of special characters by a combination of two characters.Example: Type &#39;a&#39;, erase it by typing CTRL-H -and then type &#39;:&#39; - this results in the umlaut: \u00e4So Vim remembers the character you have erased and combines itwith the character you have typed &#34;over&#34; the previos one.\n Enables recognition of arrow key codes which start off with an ESC.This would normally end your current mode (insert/append/open mode)and return you command mode (aka normal mode), and the rest of thecode would trigger commands. bah! Although I dont use the arrowkeys often, I sometimes want to use them with replace mode andvirtual editing And I don&#39;t want to be *that*compatible to vanilla vi, anyway. (so sue me).\n Allows hiding buffers even though they contain modificationswhich have not yet been written back to the associated file.(sounds quite technical, eh?)\n Shows the &#34;ruler&#34; for the cursor, ie its current positionwith line+column and the percentage within the buffer.This saves me typing CTRL-G (or better &#34;g CTRL-G&#34;) -and many users like this feature, too.And it is nice when showing Vim.\n Show the input of an *incomplete* command.So while you are typing the command  &#34;y23ddyou will see  &#34;y23dd before you typethe last &#39;d&#39; which completes the command.Makes learning Vi much simpler as you getsome feedback to what you have already typed.\n  Make use of the &#34;status line&#34; to show possible completions ofcommand line commands, file names, and more. Allows to cycleforward and backward throught the list.This is called the &#34;wild menu&#34;.\n Turn off the bell. You do know the &#34;beep&#34;you get when you type ESC in normal mode?Be nice to your co-workers - turn it off! ;-)\n When inserting text do not expand TABs to spaces.While I try to avoid all control characters in textI can make good use of TABs when typing a table.And I know I can always make Vim expand the TABs later(using the &#34;:retab&#34; command). Your mileage may vary..\n Prevent the cursor from changing the current columnwhen jumping to other lines within the window.(And if you like that then you&#39;ll &#34;virtual editing&#34; with Vim-6! :-)\n Automatic indentation. This automatically inserts theindentation from the current line when you start a new line;in insert mode you would start a new line by ending the currentone by inserting CTRL-J or CTRL-M - and in command mode you&#39;d&#34;open&#34; a new line with either &#39;o&#39; or &#39;O&#39; for below or above thecurrent line, respectively.By the way, &#34;autoindent&#34; is actually a feature of vanilla vi.\n Backspace with this value allows to use the backspace character(aka CTRL-H or &#34;&lt;-&#34;) to use for moving the cursor overautomatically inserted indentation and over the start/end of line.(see also the whichwrap option)\n The formatoptions affect the built-in &#34;text formatting&#34; command.The default value omits the &#34;flag&#34; &#39;r&#39; which makes Vim insert a&#34;comment leader&#34; of the line when starting a new one.This allows to add text to a comment and still bewithin the comment after you start a new line.It also allows to break the line within a commentwithout breaking the comment.\n This makes Vim show a status line even when only one window is shown.Who said a status line is only useful to separate multiple windows?\n This shortens about every message to a minimum andthus avoids scrolling within the output of messagesand the &#34;press a key&#34; prompt that goes with these.\n This explicitly sets the width of text to 72 characters.After each completion of a word in insert modeVim checks whether its end is past this width;if so then it will break the word onto the next line.Note that Vim will remove trailing spaces when applyingthe word wrap - a feature which many editors are missing(and which will leave trailing spaces, of course).NOTE: The word wrap applies only when the *completed* wordgoes over the line; when you insert a word before thatwhich moves other words over the line then Vim will *not*break the words at the end of the line onto the next line!Programmers certainly don&#39;t want that. It&#39;s a feature!!\n There are several commands which move the cursor within the line.When you get to the start/end of a line then these commands willfail as you cannot go on. However, many users expect the cursorto be moved onto the previous/next line. Vim allows you to chosewhich commands will &#34;wrap&#34; the cursor around the line borders.Here I allow the cursor left/right keysas well as the &#39;h&#39; and &#39;l&#39; command to do that.\n Vim can reformat text and preserve comments (commented lines)even when several kinds of comment indentation &#34;nest&#34; within.(This is very useful for reformatting quoted text in Email and News.)But you need to tell Vim how the comments look like.Usually a comment starts off with some string,which may require a following blank.Comments may also span over lines by starting off with some string,skipping some middle part, and then end with another string(think about comments in C++, for example).I simply removed the &#34; /* foo */&#34; commenting from thedefault value and added that &#39;)&#39; can also be &#34;nested comments&#34;.\n This option is cool! Or let&#39;s say that&#34;other editors don&#39;t have that at all.&#34;These characters are called &#34;list characters&#34;as they are related to the  list optionof vanilla vi:This will show the end-of-lines by adding a&#39;$&#39; sign after the last character of each line,and by replacing all TABs by &#39; ^I&#39;.However, it is much nicer to still have TABsshown in expanded form.Vim takes it one step further byalso making trailing spaces visible.Being able to see EOLs, TABs, and trailing spacehas become an absolute MUST with every editor.\n The idea of &#34;viminfo&#34; is to save info from one editing sessionfor the next by saving the data in an &#34;viminfo file&#34;.So next time I satrt up Vim I can use the search patterns fromthe search history and the commands from the command line again.I can also load files again with a simple &#34; :b bufname&#34;.And Vim also remember where the cursor was in the files I edited.See &#34;:help viminfo&#34; for more info on Vim&#39;s &#34;viminfo&#34;. :-}\n NOTES:I have grouped the options such that the Boolean ones(read: on/off true/false) come first, then those witha short amount of &#34;flags&#34;, and after that the oneswith a very long value.\n With all &#34; :set&#34; command you can leave out the colonbefore the &#34;set&#34; when you put them into the setup file.And you can set many options in one command line.\n The values of the options &#34;comments&#34;, &#34;listchars&#34;, and&#34;viminfo&#34; can become quite long, so I have broken them upin the table into several &#34;set&#34; statements, using :set += to add further value to the current one.\n Getting help on options:You can get help about options and their values with :help  option.You need not enter the full option name -many option names have abbreviations, eg&#34;ai&#34; abbreviates &#34;autoindent&#34; - and&#39;tabstop&#39; can be abbreviated with &#34;ts&#34;.And it suffices to enter &#34;h&#34; instead of &#34;:help&#34;.Isn&#39;t &#34;:h ai&#34; much shorter than &#34;:help autoindent&#34;?  Caveat:  :h ts gives you the help onthe command  :ts;but when you want info on the *option* &#34;ts&#34; the youshould add at least one &#34;tick&#34; before or after it,ie  :h &#39;tsor  :h ts&#39;.", "posttime": "2022-02-25 23:18:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u7f6e,minimal,\u547d\u4ee4", "title": "Vim\u2013\u6700\u5c0f\u8bbe\u7f6e\u8bf4\u660e", "title_en": "Vim \u2013 Minimal Setup Explained", "transed": 1, "url": "https://www.guckes.net/vim/setup.html", "via": "", "real_tags": ["\u8bbe\u7f6e", "minimal", "\u547d\u4ee4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075007, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2\u670824\u65e5\uff08\u8def\u900f\u793e\uff09-\u4e4c\u514b\u5170\u653f\u5e9c\u8981\u6c42\u8be5\u56fd\u63d0\u4f9b\u5fd7\u613f\u8005&#39\uff1b\u636e\u4e24\u540d\u53c2\u4e0e\u8be5\u9879\u76ee\u7684\u4eba\u58eb\u900f\u9732\uff0c\u8be5\u516c\u53f8\u7684\u9ed1\u5ba2\u5728\u5730\u4e0b\u534f\u52a9\u4fdd\u62a4\u5173\u952e\u57fa\u7840\u8bbe\u65bd\uff0c\u5e76\u5bf9\u4fc4\u7f57\u65af\u519b\u961f\u6267\u884c\u7f51\u7edc\u95f4\u8c0d\u4efb\u52a1\u3002\n\u968f\u7740\u4fc4\u7f57\u65af\u519b\u961f\u88ad\u51fb\u4e4c\u514b\u5170\u5404\u5730\u7684\u57ce\u5e02\uff0c\u5468\u56db\u4e0a\u5348\uff0c\u968f\u7740\u8bb8\u591a\u5c45\u6c11\u9003\u79bb\u9996\u90fd\u57fa\u8f85\uff0c\u9ed1\u5ba2\u8bba\u575b\u4e0a\u5f00\u59cb\u51fa\u73b0\u62db\u52df\u5fd7\u613f\u8005\u7684\u8bf7\u6c42\u3002\u9605\u8bfb\u66f4\u591a\n&#34;\u4e4c\u514b\u5170\u7f51\u7edc\u793e\u533a\uff01\u5b83&#39\uff1b\u662f\u65f6\u5019\u53c2\u4e0e\u6211\u4eec\u56fd\u5bb6\u7684\u7f51\u7edc\u9632\u5fa1\u4e86&#34\uff1b\u5e16\u5b50\u5199\u9053\uff0c\u8981\u6c42\u9ed1\u5ba2\u548c\u7f51\u7edc\u5b89\u5168\u4e13\u5bb6\u901a\u8fc7\u8c37\u6b4c\u6587\u6863\u63d0\u4ea4\u7533\u8bf7\uff0c\u5217\u51fa\u4ed6\u4eec\u7684\u4e13\u957f\uff0c\u5982\u6076\u610f\u8f6f\u4ef6\u5f00\u53d1\u548c\u4e13\u4e1a\u53c2\u8003\u8d44\u6599\u3002\n\u57fa\u8f85\u4e00\u5bb6\u7f51\u7edc\u5b89\u5168\u516c\u53f8\u7684\u8054\u5408\u521b\u59cb\u4eba\u8036\u6208\u5c14\u00b7\u5965\u820d\u592b\u544a\u8bc9\u8def\u900f\u793e\uff0c\u4ed6\u662f\u5e94\u56fd\u9632\u90e8\u4e00\u540d\u9ad8\u7ea7\u5b98\u5458\u7684\u8981\u6c42\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\uff0c\u8be5\u5b98\u5458\u5468\u56db\u8054\u7cfb\u4e86\u4ed6\u3002\u5965\u820d\u592b&#39\uff1bs\u516c\u53f8Cyber Unit Technologies\u56e0\u4e0e\u4e4c\u514b\u5170\u5408\u4f5c\u800c\u95fb\u540d&#39\uff1b\u7f8e\u56fd\u653f\u5e9c\u8d1f\u8d23\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u7684\u9632\u5fa1\u3002\n\u53e6\u4e00\u4f4d\u76f4\u63a5\u53c2\u4e0e\u8fd9\u9879\u5de5\u4f5c\u7684\u4eba\u58eb\u8bc1\u5b9e\uff0c\u8fd9\u9879\u8bf7\u6c42\u662f\u56fd\u9632\u90e8\u5728\u5468\u56db\u4e0a\u5348\u63d0\u51fa\u7684\u3002\n\u4e4c\u514b\u5170\u56fd\u9632\u90e8\u4ee3\u8868\u6ca1\u6709\u56de\u5e94\u7f6e\u8bc4\u8bf7\u6c42\u3002\u4e4c\u514b\u5170\u56fd\u9632\u6b66\u5b98&#39\uff1b\u7f8e\u56fd\u9a7b\u534e\u76db\u987f\u5927\u4f7f\u9986\u79f0\u4ed6&#34\uff1b\u65e0\u6cd5\u786e\u8ba4\u6216\u62d2\u7edd\u6765\u81ea\u7535\u62a5\u9891\u9053\u7684\u4fe1\u606f&#34\uff1b\u6307\u7684\u662f\u79fb\u52a8\u901a\u8baf\u5e73\u53f0\uff0c\u5e76\u62d2\u7edd\u8fdb\u4e00\u6b65\u7f6e\u8bc4\u3002\n\u5965\u820d\u592b\u8bf4\uff0c\u5fd7\u613f\u8005\u5c06\u5206\u4e3a\u9632\u5fa1\u548c\u8fdb\u653b\u7f51\u7edc\u90e8\u961f\u3002\u9632\u5fa1\u90e8\u961f\u5c06\u88ab\u7528\u4e8e\u9632\u5fa1\u53d1\u7535\u5382\u548c\u4f9b\u6c34\u7cfb\u7edf\u7b49\u57fa\u7840\u8bbe\u65bd\u3002\u57282015\u5e74\u7684\u4e00\u6b21\u7f51\u7edc\u653b\u51fb\u4e2d\uff0c\u670922.5\u4e07\u4e4c\u514b\u5170\u4eba\u5931\u53bb\u4e86\u7535\u529b\uff0c\u8fd9\u4e00\u653b\u51fb\u88ab\u5e7f\u6cdb\u5f52\u56e0\u4e8e\u4fc4\u7f57\u65af\u56fd\u5bb6\u9ed1\u5ba2\u3002\n\u8fdb\u653b\u6027\u5fd7\u613f\u8005\u7ec4\u7ec7\u5965\u820d\u592b\u8bf4\uff0c\u4ed6\u6b63\u5728\u7ec4\u7ec7\u5e2e\u52a9\u4e4c\u514b\u5170\u7684\u884c\u52a8\uff1b\u7f8e\u56fd\u519b\u65b9\u5bf9\u5165\u4fb5\u7684\u4fc4\u7f57\u65af\u519b\u961f\u8fdb\u884c\u6570\u5b57\u95f4\u8c0d\u884c\u52a8\u3002\n&#34;\u6211\u4eec\u5728\u56fd\u5185\u6709\u4e00\u652f\u519b\u961f&#34\uff1b\u5965\u820d\u592b\u8bf4&#34;\u6211\u4eec\u9700\u8981\u77e5\u9053\u4ed6\u4eec\u5728\u505a\u4ec0\u4e48&#34;\n\u636e\u7f51\u7edc\u5b89\u5168\u516c\u53f8ESET\u7684\u7814\u7a76\u4eba\u5458\u79f0\uff0c\u5468\u4e09\uff0c\u4e00\u4e2a\u65b0\u53d1\u73b0\u7684\u7834\u574f\u6027\u8f6f\u4ef6\u5728\u4e4c\u514b\u5170\u6d41\u901a\uff0c\u51fb\u4e2d\u4e86\u6570\u767e\u53f0\u8ba1\u7b97\u673a\u3002\u9605\u8bfb\u66f4\u591a\u7684\u6000\u7591\u843d\u5728\u4e86\u4fc4\u7f57\u65af\u8eab\u4e0a\uff0c\u4fc4\u7f57\u65af\u66fe\u591a\u6b21\u88ab\u6307\u63a7\u5bf9\u4e4c\u514b\u5170\u548c\u5176\u4ed6\u56fd\u5bb6\u8fdb\u884c\u9ed1\u5ba2\u653b\u51fb\u3002\u8def\u900f\u793e\u6b64\u524d\u62a5\u9053\u79f0\uff0c\u53d7\u5bb3\u8005\u5305\u62ec\u653f\u5e9c\u673a\u6784\u548c\u4e00\u5bb6\u91d1\u878d\u673a\u6784\u3002\n\u5965\u820d\u592b\u627f\u8ba4\uff0c\u5efa\u7acb\u7f51\u7edc\u519b\u4e8b\u529b\u91cf\u7684\u52aa\u529b\u6765\u5f97\u665a\u3002\n\u636e\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u62a5\u9053\uff0c\u4e4c\u514b\u5170\u4e00\u540d\u5b89\u5168\u5b98\u5458\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u8868\u793a\uff0c\u8be5\u56fd\u6ca1\u6709\u4e13\u95e8\u7684\u519b\u4e8b\u7f51\u7edc\u90e8\u961f&#34;\u6211\u4eec\u7684\u4efb\u52a1\u662f\u5728\u4eca\u5e74\u521b\u5efa\u5b83\u4eec\uff1b\u4ed6\u544a\u8bc9\u300a\u534e\u76db\u987f\u90ae\u62a5\u300b\u3002\n\u5468\u56db\u6df1\u591c\u62b5\u8fbe\u4e4c\u514b\u5170\u7684\u5965\u820d\u592b\u8bf4\uff0c\u4ed6\u5df2\u7ecf\u6536\u5230\u6570\u767e\u540d\u7533\u8bf7\u8005\uff0c\u5e76\u5c06\u5f00\u59cb\u5ba1\u67e5\uff0c\u4ee5\u786e\u4fdd\u4ed6\u4eec\u4e2d\u6ca1\u6709\u4e00\u4eba\u662f\u4fc4\u7f57\u65af\u7279\u5de5\u3002", "note_en": "Feb 24 (Reuters) - The government of Ukraine is asking for volunteers from the country&#39;s hacker underground to help protect critical infrastructure and conduct cyber spying missions against Russian troops, according two people involved in the project.\n As Russian forces attacked cities across Ukraine, requests for volunteers began to appear on hacker forums on Thursday morning, as many residents fled the capital Kyiv.   read more\n &#34;Ukrainian cybercommunity! It&#39;s time to get involved in the cyber defense of our country,&#34; the post read, asking hackers and cybersecurity experts to submit an application via Google docs, listing their specialties, such as malware development, and professional references.\n  Yegor Aushev, co-founder of a cybersecurity company in Kyiv, told Reuters he wrote the post at the request of a senior Defense Ministry official who contacted him on Thursday. Aushev&#39;s firm Cyber Unit Technologies is known for working with Ukraine&#39;s government on the defense of critical infrastructure.\n Another person directly involved in the effort confirmed that the request came from the Defense Ministry on Thursday morning.\n Ukraine Defense Ministry representatives did not respond to a request for comment. A defense attache at Ukraine&#39;s embassy in Washington said he &#34;cannot confirm or deny information from Telegram channels&#34; referring to the mobile messaging platform, and declined further comment.\n Aushev said the volunteers would be divided into defensive and offensive cyber units. The defensive unit would be employed to defend infrastructure such as power plants and water systems. In a 2015 cyberattack, widely attributed to Russia state hackers, 225,000 Ukrainians lost electricity.\n The offensive volunteer unit Aushev said he is organizing would help Ukraine&#39;s military conduct digital espionage operations against invading Russian forces.\n &#34;We have an army inside our country,&#34; Aushev said. &#34;We need to know what they are doing.&#34;\n On Wednesday, a newly discovered piece of destructive software was found circulating in Ukraine, hitting hundreds of computers, according to researchers at the cybersecurity firm ESET.   read more  Suspicion fell on Russia, which has repeatedly been accused of hacks against Ukraine and other countries. The victims included government agencies and a financial institution, Reuters previously reported.\n  The effort to build a cyber military force is coming late in the game, Aushev acknowledged.\n A Ukrainian security official said earlier this month that the country had no dedicated military cyber force, the Washington Post reported. &#34;It\u2019s our task to create them this year,&#34; he told the Washington Post.\n Reached late Thursday night in Ukraine, Aushev said he already had received hundreds of applicants and was going to begin vetting to ensure that none of them were Russian agents.", "posttime": "2022-02-25 23:15:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,\u4fc4\u7f57\u65af,\u9632\u5fa1,calls,\u4e4c\u514b\u5170", "title": "\u4e4c\u514b\u5170\u547c\u5401\u5730\u4e0b\u9ed1\u5ba2\u9632\u5fa1\u4fc4\u7f57\u65af", "title_en": "Ukraine calls on hacker underground to defend against Russia", "transed": 1, "url": "https://www.reuters.com/world/exclusive-ukraine-calls-hacker-underground-defend-against-russia-2022-02-24/", "via": "", "real_tags": ["\u9ed1\u5ba2", "\u4fc4\u7f57\u65af", "\u9632\u5fa1", "calls", "\u4e4c\u514b\u5170"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075006, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0cpiet gpu\u671d\u7740\u5b9e\u73b0\u5176\u613f\u666f\u8fc8\u51fa\u4e86\u4e00\u5927\u6b65\uff0c\u5c06\u8def\u5f84\u88c1\u526a\u7684\u8ba1\u7b97\u4ece\u90e8\u5206\u5728CPU\u4e0a\u5b8c\u6210\u8f6c\u79fb\u5230\u5b8c\u5168\u5728gpu\u4e0a\u5b8c\u6210\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u89e3\u91ca\u4e86\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u8fd9\u662f\u4e00\u6bb5\u76f8\u5f53\u957f\u7684\u65c5\u7a0b\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c\u6211\u5728\u4e00\u5e74\u591a\u524d\u5c31\u5f00\u59cb\u8d77\u8349\u8fd9\u7bc7\u6587\u7ae0\u4e86\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u4e0d\u5f97\u4e0d\u60f3\u51fa\u4e00\u4e2a\u57fa\u672c\u7684\u65b0\u5e76\u884c\u7b97\u6cd5\u3002\u7ec8\u4e8e\u5b8c\u6210\u4e86\u3002\u6211\u8ba4\u4e3a\u526a\u8f91\u662fpiet gpu\u533a\u522b\u4e8e\u5176\u4ed62D\u6e32\u67d3\u5f15\u64ce\u7684\u6838\u5fc3\u3002\n\u526a\u88c1\u7684\u57fa\u672c\u601d\u60f3\u5f88\u7b80\u5355\uff0c\u4f46\u5b83\u5bf9\u6574\u4e2a\u6210\u50cf\u6a21\u578b\u6709\u7740\u6df1\u8fdc\u7684\u5f71\u54cd\u3002\u9996\u5148\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u800c\u4e0d\u526a\u88c1\u7684\u7ed8\u56fe\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u7ebf\u6027\u7684\u5c42\u5e8f\u5217\u3002\u5b9e\u73b0\u7eaf\u77e2\u91cf\u526a\u8f91\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u4f46\u6211\u4f7f\u7528\u7684\u65b9\u6cd5\u5c06\u5176\u63a8\u5e7f\u5230\u6df7\u5408\uff0c\u4e0b\u4e00\u79cd\u662f\u6df7\u5408\u3002\n\u4f7f\u7528\u77e2\u91cf\u8def\u5f84\u8fdb\u884c\u526a\u88c1\u4f1a\u5f71\u54cd\u526a\u88c1\u8282\u70b9\u7684\u6240\u6709\u5b50\u5bf9\u8c61\u7684\u7ed8\u5236\u3002\u7ed8\u5236\u8def\u5f84\u5185\u7684\u70b9\uff0c\u800c\u4e0d\u7ed8\u5236\u8def\u5f84\u5916\u7684\u70b9\u3002\n\u5bf9\u4e8e\u7eaf\u77e2\u91cf\u8def\u5f84\u526a\u88c1\uff0c\u5e94\u7528\u4e8e\u6bcf\u4e2a\uff08\u53f6\uff09\u56fe\u5f62\u8282\u70b9\u7684\u6709\u6548\u526a\u88c1\u662f\u6811\u4e0a\u6240\u6709\u526a\u88c1\u8def\u5f84\u7684\u4ea4\u70b9\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u53ef\u884c\u7684\u5b9e\u73b0\u662f\u5728\u5411\u91cf\u7a7a\u95f4\u4e2d\u8fdb\u884c\u8def\u5f84\u76f8\u4ea4\u3002\u7136\u800c\uff0c\u5e03\u5c14\u8def\u5f84\u64cd\u4f5c\u5f88\u96be\u5b9e\u73b0\uff0c\u53ea\u6709CPU\u5b9e\u73b0\u662f\u5df2\u77e5\u7684\uff1b\u81f3\u5c11\u53ef\u4ee5\u8bf4\uff0c\u5c06\u5b83\u4eec\u8f6c\u79fb\u5230GPU\u662f\u56f0\u96be\u7684\u3002\n\u76f8\u53cd\uff0c\u6211\u4eec\u5c06\uff08\u6297\u952f\u9f7f\uff09\u526a\u5207\u89c6\u4e3a\u6df7\u5408\u64cd\u4f5c\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u662fPorter-Duff\u201csource in\u201d\u5408\u6210\u64cd\u4f5c\u7b26\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u7247\u6bb5\u7684\u5b50\u7247\u6bb5\u6e32\u67d3\u5230\u4e00\u4e2a\u4e34\u65f6\u7684\u3001\u521d\u59cb\u6e05\u6670\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u7247\u6bb5\u906e\u7f69\u6e32\u67d3\u5230alpha\u901a\u9053\u4e2d\uff0c\u7136\u540e\u5728\u80cc\u666f\u4e0a\u5408\u6210\u4e34\u65f6\u7f13\u51b2\u533a\uff0calpha\u901a\u9053\u4e58\u4ee5\u906e\u7f69\u3002\u8fd9\u79cd\u65b9\u6cd5\u5b8c\u5168\u53ef\u4ee5\u5728GPU\u4e0a\u5b8c\u6210\uff0c\u6df7\u5408\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u63a8\u5e7f\u3002\n\u5939\u5b50\u53ef\u4ee5\u4efb\u610f\u5d4c\u5957\uff1b\u7247\u6bb5\u8282\u70b9\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u7247\u6bb5\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\u56e0\u6b64\uff0c\u4e00\u4e2a\u5b8c\u6574\u76842D\u573a\u666f\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u68f5\u6811\uff0c\u5b83\u6df1\u523b\u5730\u5f71\u54cd\u7740\u7ed8\u753b\u7684\u65b9\u5f0f\u3002\n\u4e8c\u7ef4\u6e32\u67d3\u4e2d\u7684\u4e00\u79cd\u5e38\u89c1\u6280\u672f\u662f\u4e3a\u6bcf\u4e2a\u7ed8\u56fe\u64cd\u4f5c\u6307\u5b9a\u4e00\u4e2a\u8fb9\u754c\u6846\u3002\u8fb9\u754c\u6846\u662f\u4e00\u4e2a\u5c01\u95ed\u7684\u77e9\u5f62\uff08\u5e0c\u671b\u662f\u7d27\u5bc6\u7684\uff09\uff0c\u56e0\u6b64\u7ed8\u56fe\u64cd\u4f5c\u53ea\u5f71\u54cd\u77e9\u5f62\u5185\u7684\u50cf\u7d20\u3002\u5bf9\u4e8e\u6e32\u67d3\u76ee\u6807\u66f2\u9762\u7684\u4efb\u4f55\u5b50\u533a\u57df\uff0c\u53ef\u4ee5\u5ffd\u7565\u5176\u8fb9\u754c\u6846\u4e0d\u4e0e\u8be5\u8fb9\u754c\u6846\u76f8\u4ea4\u7684\u4efb\u4f55\u5bf9\u8c61\u3002Piet gpu\u5e7f\u6cdb\u4f7f\u7528\u8fb9\u754c\u6846\u6765\u7ec4\u7ec7\u5e76\u884c\u7ed8\u56fe\uff0c\u9996\u5148\u662f256x256\u50cf\u7d20\u7684\u5355\u5143\uff0c\u7136\u540e\u662f16x16\u50cf\u7d20\u7684\u5e73\u94fa\u3002\u8fb9\u754c\u6846\u5229\u7528\u4e86\u5927\u591a\u6570\u4e8c\u7ef4\u56fe\u5f62\u90fd\u662f\u7a00\u758f\u7684\u8fd9\u4e00\u4e8b\u5b9e\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u7ed8\u5236\u5bf9\u8c61\u4e0d\u4f1a\u63a5\u89e6\u5927\u591a\u6570\u74f7\u7816\u3002\n\u5f53\u7136\uff0c\u8fb9\u754c\u6846\u4e0e\u526a\u88c1\u76f8\u4e92\u4f5c\u7528\u3002\u6811\u4e2d\u7684\u6bcf\u4e2a\u526a\u8f91\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u6839\u636e\u76f8\u5e94\u526a\u8f91\u8def\u5f84\u8ba1\u7b97\u7684\u8fb9\u754c\u6846\u3002\u7136\u540e\uff0c\u6811\u4e2d\u6240\u6709\u5b50\u4f53\u7684\u8fb9\u754c\u6846\u4e0e\u8be5\u8fb9\u754c\u6846\u76f8\u4ea4\u3002\u53e6\u4e00\u79cd\u63aa\u8f9e\u65b9\u5f0f\u662f\uff0c\u7ed8\u5236\u5bf9\u8c61\u7684\u526a\u88c1\u8fb9\u754c\u6846\u662f\u5bf9\u8c61\u81ea\u5df1\u7684\u8fb9\u754c\u6846\uff0c\u4e0e\u4ece\u8be5\u8282\u70b9\u5230\u6811\u6839\u7684\u8def\u5f84\u4e2d\u6240\u6709\u526a\u88c1\u8def\u5f84\u7684\u8fb9\u754c\u6846\u76f8\u4ea4\u3002\n\u8ba1\u7b97\u8fd9\u4e9b\u8fb9\u754c\u6846\u7684\u5de5\u4f5c\u91cf\u6bd4\u6e32\u67d3\u5bf9\u8c61\u5c11\uff0c\u4f46\u4e0d\u662f\u514d\u8d39\u7684\u3002\u7279\u522b\u662f\uff0c\u6211\u4eec\u5e0c\u671b\u5728GPU\u800c\u4e0d\u662fCPU\u4e0a\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002\n\u6bcf\u74e6\u4f18\u5316\u4f1a\u8ba9\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u6709\u8da3\u3002piet gpu\u6e32\u67d3\u7ba1\u9053\u88ab\u7ec4\u7ec7\u4e3a\u4e00\u7cfb\u5217\u9636\u6bb5\uff0c\u6700\u540e\u4e3a\u76ee\u6807\u4e2d\u7684\u6bcf\u4e2a16x16\u78c1\u8d34\u7f16\u5199\u6bcf\u4e2a\u78c1\u8d34\u547d\u4ee4\u5217\u8868\uff08\u6709\u65f6\u79f0\u4e3a\u201c\u78c1\u5e26\u201d\uff09\u3002\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u662f\u201c\u7cbe\u7ec6\u5149\u6805\u5316\u201d\uff0c\u5b83\u4e3a\u5e73\u94fa\u4e2d\u7684\u6240\u6709\u50cf\u7d20\u64ad\u653e\u8fd9\u4e9b\u547d\u4ee4\u3002\u74f7\u7816\u5185\u90e8\u6ca1\u6709\u63a7\u5236\u6d41\uff1b\u5bf9\u6240\u6709\u50cf\u7d20\u8ba1\u7b97\u6240\u6709\u547d\u4ee4\u3002\n\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u526a\u8f91\u6e32\u67d3\u5982\u4e0b\u3002\u7cbe\u7ec6\u5149\u6805\u5316\u5668\u4fdd\u6301\u4e00\u7cfb\u5217\u6bcf\u50cf\u7d20\u72b6\u6001\uff0c\u5c24\u5176\u662f\u5f53\u524d\u50cf\u7d20\u548c\u6df7\u5408\u5806\u6808\u3002\u5f53\u524d\u50cf\u7d20\u6700\u521d\u662f\u6e05\u6670\u7684\uff08alpha=0\uff09\u6216\u80cc\u666f\u8272\uff0c\u666e\u901a\u7ed8\u5236\u5bf9\u8c61\u88ab\u5408\u6210\u5230\u5176\u4e0a\uff08\u901a\u5e38\u4f7f\u7528Porter Duff\u201cover\u201d\uff09\u3002BeginClip\u64cd\u4f5c\u5c06\u5f53\u524d\u50cf\u7d20\u63a8\u9001\u5230\u6df7\u5408\u5806\u6808\u4e0a\u3002\u5c06\u6e32\u67d3\u7247\u6bb5\u7684\u5b50\u5bf9\u8c61\uff0c\u5e76\u5408\u6210\u5230\u5f53\u524d\u50cf\u7d20\u4e2d\u3002\u7136\u540e\uff0c\u5728\u5339\u914d\u7684\u7ed3\u675f\u526a\u8f91\u5904\uff0c\u526a\u8f91\u906e\u7f69\u88ab\u6e32\u67d3\u6210alpha\u906e\u7f69\uff0c\u8be5\u906e\u7f69\u4f7f\u7528\u201c\u6e90\u8f93\u5165\u201d\uff08\u57fa\u672c\u4e0a\u662f\u5c06alpha\u4e0e\u906e\u7f69\u76f8\u4e58\uff09\u4e0e\u5f53\u524d\u50cf\u7d20\u5408\u6210\uff0c\u7ed3\u679c\u4e0e\u6df7\u5408\u5806\u6808\u9876\u90e8\uff08\u5f39\u51fa\uff09\u5408\u6210\uff08Porter Duff\u201c\u7ed3\u675f\u201d\uff09\uff0c\u6210\u4e3a\u65b0\u7684\u5f53\u524d\u50cf\u7d20\u3002\n\u7136\u800c\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u4e00\u822c\u60c5\u51b5\u3002Piet gpu\u6e32\u67d3\u901a\u8fc716x16\u50cf\u7d20\u7684\u5206\u7247\u5de5\u4f5c\u3002\u7ba1\u9053\u4e2d\u7684\u65e9\u671f\u9636\u6bb5\u8ba1\u7b97\u5e73\u94fa\u4e2d\u5e94\u8be5\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u6700\u540e\u9636\u6bb5\uff08\u7cbe\u7ec6\u5149\u6805\u5316\uff09\u5bf9\u5e73\u94fa\u4e2d\u7684\u6240\u6709\u50cf\u7d20\u6267\u884c\u4e00\u7cfb\u5217\u7ed8\u5236\u64cd\u4f5c\u3002\u8fd9\u8ba9\u6211\u4eec\u6709\u673a\u4f1a\u8fdb\u884c\u4e00\u4e9b\u4f18\u5316\u3002\n\u7279\u522b\u662f\uff0c\u7f29\u653e\u5230\u5355\u4e2a\u5206\u5e45\u65f6\uff0c\u526a\u8f91\u8def\u5f84\u53ef\u80fd\u5904\u4e8e\u4e09\u79cd\u72b6\u6001\u4e4b\u4e00\uff1a\u96f6\u8986\u76d6\u3001\u90e8\u5206\u8986\u76d6\u6216\u5b8c\u5168\u8986\u76d6\u3002\u90e8\u5206\u8986\u76d6\u4ec5\u5728\u526a\u8f91\u8def\u5f84\u4e0e\u5e73\u94fa\u76f8\u4ea4\u65f6\u53d1\u751f\u3002\u5b8c\u5168\u8986\u76d6\u9002\u7528\u4e8e\u5b8c\u5168\u4f4d\u4e8e\u526a\u8f91\u8def\u5f84\u5185\u7684\u5206\u7247\uff0c\u96f6\u8986\u76d6\u9002\u7528\u4e8e\u526a\u8f91\u8def\u5f84\u5916\u7684\u5206\u7247\u3002\n\u906e\u7f69\u8ba1\u7b97\u548c\u5408\u6210\u53ea\u9700\u8981\u5bf9\u90e8\u5206\u8986\u76d6\u56fe\u5757\u8fdb\u884c\uff08\u4e0a\u56fe\u4e2d\u663e\u793a\u4e3a\u7070\u8272\uff09\u3002\u5176\u4ed6\u7684\u53ef\u4ee5\u66f4\u6709\u6548\u5730\u6e32\u67d3\u3002\u96f6\u8986\u76d6\u5e73\u94fa\u6291\u5236\u5b50\u8282\u70b9\u7684\u6e32\u67d3\uff0c\u57fa\u672c\u4e0a\u662f\u4eceBeginClip\u5230\u76f8\u5e94\u7684EndClip\u3002\u5168\u8986\u76d6\u74f7\u7816\u57fa\u672c\u4e0a\u662f\u4e0d\u53ef\u64cd\u4f5c\u7684\uff1b\u4e0d\u9700\u8981\u6e32\u67d3\u906e\u7f69\uff0c\u5b50\u8282\u70b9\u7684\u6e32\u67d3\u5c31\u50cf\u6ca1\u6709\u526a\u8f91\u4e00\u6837\u6709\u6548\u3002\n\u4e0a\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0cCPU\u5bf9\u8fb9\u754c\u6846\u8fdb\u884c\u4e86\u8ba1\u7b97\u3002piet gpu\u7684\u4e00\u4e2a\u4e3b\u8981\u76ee\u6807\u662f\u5c06\u5c3d\u53ef\u80fd\u591a\u7684\u8ba1\u7b97\u8f6c\u79fb\u5230gpu\u3002\n\u57fa\u672c\u4efb\u52a1\u662f\u4e3a\u6bcf\u4e2a\u7ed8\u5236\u5bf9\u8c61\u6307\u5b9a\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5c01\u95ed\u7247\u6bb5\u4ea4\u70b9\u7684\u8fb9\u6846\u77e9\u5f62\u3002\u573a\u666f\u7684\u7ebf\u6027\u5316\u8868\u793a\u5c06\u5305\u542bBeginClip\u5143\u7d20\u548cEndClip\u5143\u7d20\u3002BeginClip\u8fd8\u5c06\u5f15\u7528\u4e00\u6761\u8def\u5f84\uff0c\u8be5\u8def\u5f84\u6709\u4e00\u4e2a\u5173\u8054\u7684\u8fb9\u754c\u6846\u3002\nstack=[viewport_bbox]\u7528\u4e8e\u573a\u666f\u4e2d\u7684\u5143\u7d20\uff1a\u5982\u679c\u5143\u7d20\u662fBeginClip\uff08\u8def\u5f84\uff09\uff1astack\u3002push\uff08intersect\uff09\uff08stack.last\uff08\uff09\uff0cpath\uff09\u3002bbox\uff08\uff09\uff09\u5143\u7d20\u3002\u6709\u6548_bbox=\u5806\u6808\u3002\u6700\u540e\u4e00\u4e2a\uff08\uff09elif\u5143\u7d20\u662fEndClip:element\u3002\u6709\u6548_bbox=\u5806\u6808\u3002\u6700\u540e\u4e00\u4e2a\uff08\uff09\u5806\u6808\u3002pop\uff08\uff09\uff1a\u5143\u7d20\u3002effective_bbox=intersect\uff08stack.last\uff08\uff09\uff0c\u5143\u7d20\uff09\u3002bbox\uff08\uff09\uff09\n\u4f5c\u4e3a\u4e00\u79cd\u987a\u5e8f\u7b97\u6cd5\uff0c\u8fd9\u975e\u5e38\u7b80\u5355\uff0c\u51e0\u4e4e\u5fae\u4e0d\u8db3\u9053\u3002\u6709\u4e00\u5806\u8fb9\u754c\u6846\uff0c\u8be5\u5806\u6808\u7684\u5927\u5c0f\u4ee5\u6700\u5927\u5d4c\u5957\u6df1\u5ea6\u4e3a\u8fb9\u754c\u3002\u5904\u7406\u6bcf\u4e2a\u5143\u7d20\u7684\u6210\u672c\u4e5f\u662fO\uff081\uff09\u3002\u552f\u4e00\u7684\u95ee\u9898\u662f\uff0c\u4f60\u771f\u7684\uff0c\u771f\u7684\u4e0d\u60f3\u5728GPU\u4e0a\u8fd0\u884c\u987a\u5e8f\u7b97\u6cd5\u3002\n\u8fd9\u5c31\u63d0\u51fa\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u6709\u6ca1\u6709\u529e\u6cd5\u8ba9\u8fd9\u79cd\u7b97\u6cd5\u7684\u5e76\u884c\u7248\u672c\u5728\u5b9e\u9645\u7684GPU\u786c\u4ef6\u4e0a\u9ad8\u6548\u8fd0\u884c\uff1f\u8fd9\u4e2a\u95ee\u9898\u5df2\u7ecf\u56f0\u6270\u4e86\u6211\u81f3\u5c11\u4e00\u5e74\u4e86\u3002\u6211\u5f88\u9ad8\u5174\u5730\u8bf4\uff0c\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u6211\u505a\u5230\u4e86\u3002\n\u6211\u7684\u89e3\u51b3\u65b9\u6848\u7684\u6838\u5fc3\u662f\u6211\u6240\u8bf4\u7684\u5806\u6808\u5e7a\u534a\u7fa4\uff0c\u5b83\u662f\u7814\u7a76\u5f97\u5f88\u597d\u7684\u62ec\u53f7\u5339\u914d\u95ee\u9898\u7684\u4e00\u4e2a\u53d8\u4f53\u3002\u6211\u5728\u535a\u5ba2\u4e2d\u63d0\u5230\u4e86\u300a\u91cd\u65b0\u8bbf\u95ee\u5806\u6808\u5e7a\u534a\u7fa4\u300b\u4e2d\u7684\u4e00\u4e2a\u65e9\u671f\u7248\u672c\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u505a\u4e86\u4e00\u4e2a\u6539\u8fdb\u7248\uff0c\u5cf0\u503c\u6027\u80fd\u51e0\u4e4e\u662f5\u500d\uff0c\u53ef\u79fb\u690d\u6027\u4e5f\u66f4\u597d\u3002\u6211\u4e0d\u6253\u7b97\u5728\u8fd9\u7bc7\u535a\u6587\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u6211\u53ea\u60f3\u8bf4\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u901a\u8fc7magic\u83b7\u5f97\uff0c\u5e76\u5c06\u91cd\u70b9\u653e\u57282D\u6e32\u67d3\u95ee\u9898\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u3002\n\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u4f7f\u7528\u62ec\u53f7\u5339\u914d\u7684\u7ed3\u679c\u6765\u8868\u793a\u4e24\u4ef6\u4e8b\u3002\u9996\u5148\uff0c\u6bcf\u4e2aEndClip\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4e0e\u76f8\u5e94BeginClip\u76f8\u540c\u7684\u8def\u5f84\u548c\u8fb9\u754c\u6846\u6570\u636e\u3002\u7279\u522b\u662f\uff0c\u8fd9\u8ba9\u6211\u4eec\u80fd\u591f\u5728\u7c97\u5149\u6805\u5316\u4e2d\u9ad8\u6548\u5730\u8fdb\u884c\u9010\u5757\u4f18\u5316\uff0c\u56e0\u4e3a\u8be5\u7740\u8272\u5668\u4e0d\u9700\u8981\u4fdd\u6301\u663e\u8457\u7684\u72b6\u6001\u3002\u5176\u6b21\uff0c\u5b83\u8ba1\u7b97\u6839\u8def\u5f84\u4e0a\u6240\u6709\u526a\u8f91\u8fb9\u754c\u6846\u7684\u4ea4\u70b9\u3002\u8c22\u5929\u8c22\u5730\uff0c\u77e9\u5f62\u4ea4\u96c6\u662f\u4e00\u4e2a\u5e7a\u534a\u7fa4\uff0c\u6240\u4ee5\u8fd9\u662f\u53ef\u80fd\u7684\n\u672c\u8282\u662f\u4e00\u4e2a\u53ef\u4ee5\u8df3\u8fc7\u7684\u7ec6\u8282\uff0c\u4f46\u5bf9\u4e8e\u7f16\u5199\u66f4\u9ad8\u7ea7GPU\u7b97\u6cd5\u7684\u4eba\u6765\u8bf4\u53ef\u80fd\u4f1a\u611f\u5174\u8da3\u3002\n\u6700\u521d\u7684piet gpu\u8bbe\u8ba1\u4f7f\u7528\u4e86\u4e00\u79cd\u201c\u7ed3\u6784\u9635\u5217\u201d\u65b9\u6cd5\u6765\u63cf\u8ff0\u573a\u666f\uff0c\u5c24\u5176\u662f\u4e00\u4e2a\u5e26\u6709\u56fa\u5b9a\u5927\u5c0f\u5143\u7d20\u7684\u5355\u4e00\u9635\u5217\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u5404\u79cd\u7ed8\u56fe\u5143\u7d20\u7c7b\u578b\u7684\u6807\u8bb0\u5e76\u96c6\uff0c\u5305\u62ec\u8def\u5f84\u6bb5\u3002\u5904\u7406\u8fd9\u4e2a\u6570\u7ec4\u57fa\u672c\u4e0a\u9700\u8981\u4e00\u4e2a\u5927\u7684switch\u8bed\u53e5\u6765\u5904\u7406\u8054\u5408\u4e2d\u7684\u53d8\u91cf\u3002\u6211\u66fe\u8003\u8651\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e0a\u505a\u4e00\u4e2a\u5806\u6808\u5e7a\u534a\u7fa4\uff0c\u4f46\u975e\u5e38\u62c5\u5fc3\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8ba1\u7b97\u5806\u6808\u5e7a\u534a\u7fa4\u7684\u6027\u80fd\u6210\u672c\u3002\u6211\u73b0\u5728\u6709\u4e86\u4e00\u4e2a\u975e\u5e38\u5feb\u901f\u7684\u5806\u6808monoid\u5b9e\u73b0\uff0c\u4f46\u5373\u4f7f\u5982\u6b64\uff0c\u6211\u8fd8\u662f\u4fee\u6539\u4e86\u67b6\u6784\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898\u4e86\u3002\n\u65b0\u7684\u4f53\u7cfb\u7ed3\u6784\uff08\u5728\u65b0\u5143\u7d20\u5904\u7406\u7ba1\u9053\u95ee\u9898\u4e2d\u6709\u8be6\u7ec6\u63cf\u8ff0\uff09\u66f4\u591a\u5730\u662f\u4e00\u79cd\u201c\u9635\u5217\u7ed3\u6784\u201d\u65b9\u6cd5\uff0c\u7531\u4e8e\u5176\u6027\u80fd\u4f18\u52bf\uff0c\u5728\u56fe\u5f62\u548c\u6e38\u620f\u4e16\u754c\u4e2d\u975e\u5e38\u6d41\u884c\u3002\u6bcf\u4e2a\u4e3b\u8981\u6570\u636e\u7c7b\u578b\u90fd\u6709\u81ea\u5df1\u7684\u6d41\u3002\u6b64\u5916\uff0c\u8be5\u7c7b\u578b\u7684\u5927\u90e8\u5206\u903b\u8f91\u90fd\u88ab\u8f6c\u79fb\u5230\u81ea\u5df1\u7684\u7740\u8272\u5668\u8c03\u5ea6\u4e2d\uff0c\u8be5\u8c03\u5ea6\u53ea\u5728\u8be5\u7c7b\u578b\u7684\u5bf9\u8c61\u4e0a\u5927\u91cf\u5de5\u4f5c\uff0c\u6ca1\u6709\u5927\u7684\u5f00\u5173\u8bed\u53e5\u3002\u4e3a\u4e86\u5c06\u8fd9\u4e9b\u6570\u636e\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u6211\u4eec\u5728\u8fd9\u4e9b\u6570\u636e\u6d41\u4e2d\u4f7f\u7528\u4e00\u7ec4\u7d22\u5f15\uff0c\u8fd9\u4e9b\u7d22\u5f15\u662f\u4f7f\u7528\u8ba1\u6570\u7684\u524d\u7f00\u548c\u8ba1\u7b97\u7684\u3002\n\u5177\u4f53\u6765\u8bf4\uff0cdraw object stage\u6267\u884c\u6d41\u538b\u7f29\u5e76\u5199\u5165\u526a\u8f91\u6d41\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ec5\u5305\u542bBeginClip\u548cEndClip\u5bf9\u8c61\u7684\u6570\u7ec4\u3002\u526a\u8f91\u7d22\u5f15\u662f\u6307\u5411\u8be5\u6d41\u7684\u7d22\u5f15\u3002\u540c\u65f6\uff0c\u5b83\u4e3a\u6bcf\u4e2a\u7ed8\u5236\u5bf9\u8c61\u6307\u5b9a\u4e00\u4e2a\u526a\u8f91\u7d22\u5f15\u3002\u7531\u540c\u4e00\u526a\u8f91\u5305\u56f4\u7684\u4e00\u7cfb\u5217\u7ed8\u5236\u5bf9\u8c61\u90fd\u5177\u6709\u76f8\u540c\u7684\u526a\u8f91\u7d22\u5f15\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u201cclips\u201d\u6570\u7ec4\u8868\u793a\u7531draw object stage\u5199\u5165\u7684\u526a\u8f91\u6d41\u3002\u5c06\u573a\u666f\u7684\u4e0d\u540c\u90e8\u5206\u5173\u8054\u5728\u4e00\u8d77\u7684\u7bad\u5934\u4e5f\u4f1a\u5728\u201c\u7ed8\u5236\u5bf9\u8c61\u201d\u9636\u6bb5\u4f7f\u7528\u524d\u7f00sum\u8fdb\u884c\u8ba1\u7b97\u3002\n\u7136\u540e\uff0c\u526a\u8f91\u9636\u6bb5\u5bf9\u526a\u8f91\u6d41\u4e2d\u7684\u526a\u8f91\u8fdb\u884c\u62ec\u53f7\u5339\u914d\u548cbbox\u76f8\u4ea4\u3002\u5b8c\u6210\u540e\uff0c\u5c06\u4e3a\u526a\u8f91\u6d41\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\u6307\u5b9a\u4e00\u4e2a\u8fb9\u754c\u6846\uff0c\u4e0e\u8def\u5f84\u5904\u7406\u9636\u6bb5\u5df2\u8ba1\u7b97\u7684\u526a\u8f91\u8def\u5f84\u7684\u8fb9\u754c\u6846\u76f8\u4ea4\uff0c\u4ee5\u751f\u6210\u526a\u8f91\u8fb9\u754c\u6846\u3002\u5b83\u8fd8\u5c06EndClip\u4e2d\u7684\u8def\u5f84\u8bbe\u7f6e\u4e3a\u5f15\u7528\u4e0e\u76f8\u5e94BeginClip\u76f8\u540c\u7684\u8def\u5f84\u3002\n\u56e0\u6b64\uff0c\u526a\u8f91\u9636\u6bb5\u7684\u5de5\u4f5c\u4e0e\u573a\u666f\u4e2d\u526a\u8f91\u7684\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u800c\u4e0d\u662f\u4e0e\u5bf9\u8c61\u7684\u603b\u6570\u6210\u6b63\u6bd4\u3002\u8fd9\u9879\u5de5\u4f5c\u9700\u8981\u5927\u91cf\u7684\u526a\u8f91\u624d\u80fd\u5728\u4e2a\u4eba\u8d44\u6599\u4e2d\u5927\u91cf\u5c55\u793a\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u6d41\u538b\u7f29\u6280\u672f\uff0c\u8f6c\u5411\u4e86\u66f4\u7d27\u51d1\u7684\u8def\u5f84\u7f16\u7801\uff0c\u6211\u8ba1\u5212\u5c06\u5176\u5e94\u7528\u5230\u7ba1\u9053\u7684\u5176\u4ed6\u90e8\u5206\u3002\n\u526a\u8f91\u7684\u4e00\u4e2a\u5e94\u7528\u662f\u5728UI\u4e2d\u5b9a\u4e49\u6eda\u52a8\u89c6\u56fe\u7684\u89c6\u53e3\u3002\u8fd9\u53ef\u4ee5\u5728piet gpu\u4e2d\u8868\u793a\u4e3a\u526a\u8f91\u8282\u70b9\uff0c\u8f6c\u6362\u8282\u70b9\u4f5c\u4e3a\u76f4\u63a5\u5b50\u8282\u70b9\uff0c\u7136\u540e\u6eda\u52a8\u5185\u5bb9\u4f5c\u4e3a\u8f6c\u6362\u8282\u70b9\u7684\u5b50\u8282\u70b9\u3002\u4e0etransform\u8282\u70b9\u5173\u8054\u7684\u5e73\u79fb\u63a7\u5236\u6eda\u52a8\u4f4d\u7f6e\uff08\u8fd9\u79cd\u67b6\u6784\u4e5f\u53ef\u4ee5\u8fdb\u884c\u7f29\u653e\uff09\u3002\npiet gpu\u7684\u4e00\u4e2a\u8bbe\u8ba1\u76ee\u6807\u662f\uff0c\u8fd9\u4e9b\u5185\u5bb9\u4e2d\u7684\u5927\u90e8\u5206\u53ef\u4ee5\u88ab\u7f16\u7801\u4e00\u6b21\u5e76\u4fdd\u7559\u4e0b\u6765\uff0c\u56e0\u6b64\uff0c\u4e00\u4e2a\u5177\u6709\u4e0d\u540c\u6eda\u52a8\u4f4d\u7f6e\u7684\u65b0\u573a\u666f\u53ef\u4ee5\u5728CPU\u7aef\u7528\u5f88\u5c11\u7684\u5de5\u4f5c\u91cd\u65b0\u7ec4\u88c5\u3002\u5728GPU\u65b9\u9762\uff0c\u8ba1\u7b97\u526a\u8f91\u8fb9\u754c\u6846\u9700\u8981\u76f8\u5f53\u5c0f\u7684\u5de5\u4f5c\u91cf\uff0c\u8fd9\u5c06\u80fd\u591f\u5728\u7ba1\u9053\u7684\u65e9\u671f\u5254\u9664\u5bf9\u8c61\uff0c\n\u663e\u7136\uff0c\u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u9002\u5ea6\u6eda\u52a8\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u8d44\u6e90\u90fd\u9a7b\u7559\u5728GPU\u4e0a\u662f\u53ef\u884c\u7684\u3002\u5bf9\u4e8e\u5de8\u5927\u7684\u6eda\u52a8\u7a97\u53e3\uff0c\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u865a\u62df\u5316\uff0c\u5728\u5b83\u4eec\u6eda\u52a8\u8fdb\u51fa\u89c6\u56fe\u65f6\u4ea4\u6362\u8d44\u6e90\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u503c\u5f97\u63a2\u7d22\u7684\u65b9\u5411\uff0c\u56e0\u4e3a\u5e73\u6ed1\u6eda\u52a8\u4ecd\u7136\u662fUI\u5de5\u5177\u5305\u7684\u4e00\u4e2a\u6311\u6218\u3002\n\u8fd9\u9879\u5de5\u4f5c\u53ef\u80fd\u4e0e\u5927\u89c4\u6a21\u5e76\u884c\u77e2\u91cf\u56fe\u5f62\u6700\u4e3a\u76f8\u4f3c\u3002\u6211\u4eec\u90fd\u5c06\u573a\u666f\u8868\u793a\u4e3a\u4e00\u68f5\u6241\u5e73\u7684\u6811\uff0c\u5e76\u5141\u8bb8\u4efb\u610f\u5d4c\u5957\u6df1\u5ea6\u3002\u7136\u800c\uff0c\u4ed6\u4eec\u7684\u6811\u7b97\u6cd5\u8981\u7b80\u5355\u5f97\u591a\uff1a\u5bf9\u4e8en\u4e2a\u5d4c\u5957\u6df1\u5ea6\uff0c\u4ed6\u4eec\u8fdb\u884cn\u6b21\u626b\u63cf\uff0c\u6bcf\u4e2a\u626b\u63cf\u5904\u7406\u4e00\u4e2a\u5d4c\u5957\u7ea7\u522b\u3002\u8fd9\u9879\u5de5\u4f5c\u4f7f\u7528\u4e86\u4e00\u79cd\u65b0\u7684\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e0d\u51cf\u901f\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u4efb\u610f\u5d4c\u5957\u6df1\u5ea6\u3002\uff08\u4f8b\u5982\uff0c\u5de5\u4f5c\u7cfb\u6570\u4e0e\u6811\u7684\u6df1\u5ea6\u6210\u6bd4\u4f8b\u7684GPU\u6811\u7b97\u6cd5\u5e76\u4e0d\u7f55\u89c1\uff09\n\u5728\u66f4\u4f20\u7edf\u7684GPU\u6e32\u67d3\u5668\u4e2d\uff0c\u8fdb\u884c\u6df7\u5408\u7684\u4e00\u822c\u65b9\u6cd5\u662f\u5206\u914d\u4e00\u4e2a\u4e34\u65f6\u7eb9\u7406\uff0c\u6e32\u67d3\u5230\u8be5\u7eb9\u7406\u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u5728\u6e32\u67d3\u76ee\u6807\u4e2d\u7ed8\u5236\u4e00\u4e2a\u56db\u8fb9\u5f62\u8fdb\u884c\u5408\u6210\uff0c\u4ece\u4e2d\u95f4\u7eb9\u7406\u8fdb\u884c\u91c7\u6837\u3002GPU\u5bf9\u8fd9\u7c7b\u5de5\u4f5c\u8fdb\u884c\u4e86\u9ad8\u5ea6\u4f18\u5316\uff0c\u786c\u4ef6\u652f\u6301\u7eb9\u7406\u91c7\u6837\u548c\u201c\u5149\u6805\u8fd0\u7b97\u201d\u5408\u6210\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u5b83\u4e5f\u9700\u8981\u5230\u4e3b\u5185\u5b58\u7684\u6d41\u91cf\u3002\u6211\u76f8\u4fe1\u5b8c\u5168\u4e0d\u7528\u505a\u8fd9\u9879\u5de5\u4f5c\u4f1a\u66f4\u5feb\u3002\n\u8fd9\u91cc\u7684\u6280\u672f\u7c7b\u4f3c\u4e8e\u9a6c\u7279\u00b7\u57fa\u7279\uff08Matt Keeter\uff09\u5bf9\u590d\u6742\u5c01\u95ed\u5f62\u5f0f\u9690\u5f0f\u66f2\u9762\u7684\u5927\u89c4\u6a21\u5e76\u884c\u6e32\u67d3\u3002\u526a\u88c1\u57fa\u672c\u4e0a\u4e0e\u6784\u9020\u51e0\u4f55\uff08\u65e0\u8bba\u662f2D\u8fd8\u662f3D\uff09\u4e2d\u7684\u76f8\u4ea4\u76f8\u540c\uff0c\u8be5\u8bba\u6587\u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f\u6765\u4f18\u5316\u78c1\u5e26\uff0c\u5728\u6bcf\u4e2a\u533a\u57df\u7684\u57fa\u7840\u4e0a\u5229\u7528\u4ee3\u6570\u7b80\u5316\u3002\u8fd9\u4e9b\u6280\u672f\u66f4\u901a\u7528\uff0c\u800c\u8fd9\u9879\u5de5\u4f5c\u66f4\u4e13\u95e8\u7528\u4e8e2D\u6e32\u67d3\u4efb\u52a1\u3002\n\u73b0\u5728\u5df2\u7ecf\u5f88\u8fc7\u65f6\u4e86\uff0c\u4f46\u662f\u4e9a\u5f53\u00b7\u5170\u5229\u5173\u4e8e\u94ec\u5143\u7d20\u526a\u8f91\u7684\u535a\u6587\u5f88\u6709\u610f\u601d\u3002\u8ba8\u8bba\u7684\u4e3b\u8981\u95ee\u9898\u662f\u201c\u5408\u5e76\u5de5\u4ef6\u201d\uff0calpha\u901a\u9053\u5408\u6210\u526a\u88c1\u65b9\u6cd5\u6ca1\u6709\u5b8c\u5168\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u5b83\u4ecd\u7136\u662f\u6807\u51c6\u6280\u672f\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5b83\u6216\u591a\u6216\u5c11\u53d7\u5230W3C\u5408\u6210\u548c\u6df7\u5408\u89c4\u8303\u548cHTML\u753b\u5e03\u7ed8\u5236\u6a21\u578b\u7684\u5f3a\u5236\u3002\n\u60a8\u662f\u5426\u7ef4\u62a4\u4e86\u652f\u6301\u6709\u8da3\u526a\u8f91\u76842D\u6e32\u67d3\u5668\uff1f\u6709\u6ca1\u6709\u6211\u9519\u8fc7\u7684\u597d\u6587\u7ae0\uff1f\u8ba9\u6211\u77e5\u9053\uff0c\u6211\u5f88\u4e50\u610f\u6dfb\u52a0\u94fe\u63a5\u3002\n\u8fd9\u7bc7\u535a\u6587\u4e2d\u7f3a\u5c11\u4e86\u4e00\u4e9b\u4e1c\u897f\uff0c\u5c24\u5176\u662f\u6027\u80fd\u6570\u636e\u3002\u73b0\u5728\uff0c\u6211\u5728piet gpu\u7684\u91cd\u70b9\u662f\u4f7f\u67b6\u6784\u6b63\u786e\u3002\u611f\u89c9\u5c31\u50cf\u662f\u5728\u6c47\u5408\uff0c\u8bb8\u591a\u68d8\u624b\u7684\u95ee\u9898\u6b63\u5728\u5f97\u5230\u89e3\u51b3\u3002\n\u73b0\u5728\u526a\u8f91\u7684\u57fa\u7840\u8bbe\u65bd\u5df2\u7ecf\u5230\u4f4d\uff0c\u6df7\u5408\u5e94\u8be5\u76f8\u5bf9\u7b80\u5355\u3002\u9700\u8981\u505a\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u662f\u5728\u7cbe\u7ec6\u5149\u6805\u5316\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u6df7\u5408\u903b\u8f91\uff0c\u5f53\u7136\u8fd8\u6709\u901a\u8fc7\u7ba1\u9053\u8f93\u9001\u76f8\u5173\u5143\u6570\u636e\u3002\u518d\u52a0\u4e0a\u5f84\u5411\u6e10\u53d8\u548c\u626b\u63a0\u6e10\u53d8\uff0c\u662f\u652f\u6301\u4e0b\u4e00\u4e2a\u91cd\u5927\u91cc\u7a0b\u7891COLRv1\u8868\u60c5\u7b26\u53f7\u6240\u9700\u7684\u4e24\u4e2a\u4e3b\u8981\u90e8\u5206\u3002", "note_en": "Recently piet-gpu has taken a big step towards realizing its  vision, moving the computation of path clipping from partially being done on the CPU to entirely being done on the GPU.\n This post explains how that works. It\u2019s been quite a journey - I actually started a draft of this more than a year ago. Since then, I\u2019ve had to come up with a fundamental new parallel algorithm. It\u2019s finally done. I think clipping is very much at the heart of what makes piet-gpu different than other 2D rendering engines.\n  The basic idea of clipping is simple, but it has a profound impact on the overall imaging model. For one, it induces a  tree structure, while drawing without clipping can be seen as a linear sequence of layers. There are different ways of implementing pure vector clipping, but the one I\u2019ve gone with generalizes to  blending, which is next.\n Clipping with a vector path affects the drawing of all  child objects of the clip node. Points inside the path are drawn, and points outside the path are not.\n  For pure vector path clipping, the effective clip applied to each (leaf) drawing node is the intersection of all clip paths up the tree. Thus, one viable implementation is to do this path intersection in vector space. However, boolean path operations are tricky to implement, and only CPU implementations are known; moving them to the GPU would be difficult, to say the least.\n Rather, we treat (antialiased) clipping as a  blend operation \u2013 in fact, it is an instance of the the  Porter-Duff \u201csource in\u201d composition operator. Conceptually, the children of a clip are rendered into a temporary, intially clear buffer, the clip mask is rendered into an alpha channel, then the temporary buffer is composited on the background, the alpha channel multiplied by the mask. This approach can be done fully on the GPU, and the blending operations generalize.\n Clips can nest arbitrarily; a clip node can be the child of another clip node. Thus, a full 2D scene is effectively a  tree, which profoundly affects the way drawing is done.\n  A common technique in 2D rendering is to assign a  bounding box to each drawing operation. The bounding box is an enclosing rectangle (hopefully tight), so that drawing operations affect only pixels inside the rectangle. For rendering any subregion of the target surface, any objects whose bounding box does not intersect that bounding box may be ignored. Piet-gpu uses bounding boxes extensively to organize parallel drawing, first by 256x256 pixel bins, then 16x16 pixel tiles. Bounding boxes exploit the fact that most 2D drawing is  sparse, in that most draw objects don\u2019t touch most tiles.\n Bounding boxes of course interact with clipping. Each clip node in the tree has a bounding box, computed from the corresponding clip path. Then, the bounding boxes for all descendants in the tree is intersected with that bounding box. Another way of phrasing this is that the clipped bounding box for a draw object is the object\u2019s own bounding box intersected with the bounding boxes of all clip paths in the path from that node to the root of the tree.\n Computing these bounding boxes is less work than rendering the objects, but is not free. In particular, we\u2019d like to do that work on the GPU rather than the CPU.\n  Things get even more interesting with per-tile optimization. The piet-gpu rendering pipeline is organized as a series of stages, finally writing a per-tile command list (sometimes called \u201ctape\u201d) for each 16x16 tile in the target. The last stage is \u201cfine rasterization,\u201d which plays these commands for all pixels in the tile. Within a tile there is no control flow; all commands are evaluated for all pixels.\n In the general case, clip is rendered as follows. The fine rasterizer maintains a bunch of per-pixel state, notably a current pixel and a blend stack. The current pixel is initially clear (alpha = 0) or a background color, and ordinary draw objects are composited onto it (generally using  Porter-Duff \u201cover\u201d). A  BeginClip operation pushes the current pixel on a  blend stack. The children of the clip are rendered, compositing into the current pixel. Then, at a matching  EndClip, the clip mask is rendered into an alpha mask, that\u2019s composited with the current pixel using \u201csource in\u201d (basically multiplying the alpha with the mask), and that result is composited (Porter-Duff \u201cover\u201d) with the top of the blend stack (which is popped), becoming the new current pixel.\n Much of the time, we don\u2019t need the general case, however. Piet-gpu rendering works by 16x16 pixel tiles. Earlier stages in the pipeline computes what should happen within a tile, and the final stage (fine rasterization) performs a sequence of drawing operations for all pixels in the tile. This gives us the opportunity to do some optimization.\n In particular, zooming into a single tile, a clip path may be in one of 3 states: zero coverage, partial coverage, or full coverage. Partial coverage only happens with the clip path intersects the tile. Full coverage is for tiles entirely within the clip path, and zero coverage is for tiles outside the clip path.\n  The mask computation and compositing only needs to happen for the partial coverage tiles (shown as gray in the above figure). The others can be rendered much more efficiently. Zero coverage tiles suppress the rendering of child nodes, basically from the  BeginClip to the corresponding  EndClip. And full coverage tiles are basically a no-op; the mask need not be rendered, and child nodes are rendered as if there were no clip in effect.\n  A previous iteration had accounting of bounding boxes done by CPU. A major goal of piet-gpu is to move as much computation as possible to the GPU.\n The fundamental task is assigning to each draw object a bounding box rectangle that incorporates the intersection of all enclosing clips. A linearized representation of the scene will have a  BeginClip element and an  EndClip element. The  BeginClip will also reference a path, and that path has an associated bounding box.\n  stack  =  [ viewport_bbox ] for  element  in  scene :  if  element  is  BeginClip ( path ):  stack . push ( intersect ( stack . last (),  path . bbox ()))  element . effective_bbox  =  stack . last ()  elif  element  is  EndClip :  element . effective_bbox  =  stack . last ()  stack . pop ()  else :  element . effective_bbox  =  intersect ( stack . last (),  element . bbox ())\n As a sequential algorithm, this is very straightforward, almost trivial. There\u2019s a stack of bounding boxes, and the size of that stack is bounded by the maximum nesting depth. The cost to processing each element is O(1) as well. The only problem is, you really, really don\u2019t want to run a sequential algorithm on a GPU.\n That raises a question: is there a way to make a parallel version of this algorithm, one that runs efficiently on actual GPU hardware? That question has been a major obsession of mine for at least a year. And I am pleased to say, the answer is yes. I\u2019ve done it.\n The core of my solution is what I call the stack monoid, which is a variant on the well-studied parentheses matching problem. I blogged about an earlier version in  stack monoid revisited. Since then, I\u2019ve made an improved version, with almost 5x peak performance and better portability as well. I\u2019m not going to go into the details in this blog post, rather I will just say the solution is available by magic, and focus on the application to the 2D rendering problem.\n  Basically, we use the result of parentheses matching for two things. First, each  EndClip is able to access the same path and bounding box data as the corresponding  BeginClip. In particular, that lets us do the per-tile optimization in coarse rasterization efficiently, as that shader doesn\u2019t need to maintain significant state. Second, it computes the intersection of all clip bounding boxes on the path to the root. Rectangle intersection is, thankfully, a monoid, so it is possible\n  This section is a detail that can be skipped, but may be of interest to people writing fancier GPU algorithms.\n The  original piet-gpu design used an \u201carray of structures\u201d approach to scene description, in particular a single array with fixed size elements, each of which was a tagged union of various drawing element types, including path segments. Processing this array basically requires a large switch statement to deal with the variants in the union. I had contemplated doing a stack monoid over this array, but was very worried about the performance cost of computing the stack monoid for every element in this array. I now have a  very fast stack monoid implementation, but even so have reworked the architecture so this cannot be a problem.\n The new architecture (described in some detail in the  new element processing pipeline issue) is more of a \u201cstructure of arrays\u201d approach, which is extremely popular in the graphics and game world due to its performance advantage. Every major datatype gets its own stream. Further, as much of the logic for that type gets moved into its own shader dispatch, which works in bulk on only that type of object, with no big switch statement. To stitch these together, we use a bunch of indices into these streams, which are computed using prefix sum of the counts.\n  Specifically, the draw object stage does a stream compaction and writes a  clip stream, which is an array of just the  BeginClip and  EndClip objects. A clip index is an index into this stream. At the same time, it assigns a clip index to each draw object. A sequence of draw objects enclosed by the same clip all have the same clip index. In the above diagram, the \u201cclips\u201d array represents the clip stream written by the draw object stage. The arrows associating the different parts of the scene together are also computed in the draw object stage using prefix sum.\n The clip stage then does parenthesis matching and bbox intersection of the clips in the clip stream. When it\u2019s done, it assigns a bounding box to each object in the clip stream, intersecting the bounding boxes of the clip paths that have already been computed by the path processing stage, to produce clip bounding boxes. It also sets the path in  EndClip to refer to the same path as the corresponding  BeginClip.\n Thus, the work of the clip stage is proportional to the number of clips in the scene, not to the total number of objects. It would take an enormous number of clips for this work to show up to any significant amount in profiles. We used similar stream compaction techniques to move to a more compact  path encoding, and I plan to apply it to other parts of the pipeline as well.\n  One application of clipping is to define the viewport of a scrolled view in a UI. This can be represented in piet-gpu as a clip node with a transform node as a direct child, then the scrolled contents as children of the transform node. The translation associated with the transform node controls the scroll position (this architecture could do scaling as well).\n A design goal of piet-gpu is the most of these contents can be encoded  once and retained, so a new scene with a different scroll position could reassembled with very little work CPU-side. On the GPU side, there would be a fairly small amount of work to compute clip bounding boxes, which would be able to cull objects quite early in the pipeline,\n Obviously this approach will work for moderate scrolling, where it is practical to have all the resources resident on the GPU. For huge scrolled windows, some virtualization is needed, with resources swapped in and out as they scroll into and out of view. Even so, this is an appealing direction to explore, as smooth scrolling is still a challenge for UI toolkits.\n  This work is perhaps most similar to  Massively Parallel Vector Graphics. We both represent the scene as a flattened tree, and allow arbitrary nesting depth. However, their tree algorithm is much more simplistic: for a nesting depth of n, they do n scans, each addressing one level of nesting. This work uses a new algorithm that allows arbitrary nesting depth with no slowdown. (GPU tree algorithms with a work factor proportional to the depth of the tree are not unusual; for example)\n In a more traditional GPU renderer, the general way to do blends is to allocate a temporary texture, render into that, and then composite by drawing a quad into the render target, sampling from the intermediate texture. GPUs are very highly optimized for this sort of work, with hardware support for texture sampling and \u201craster ops\u201d for compositing, but even so it requires traffic to main memory. I believe it\u2019s faster not to have to do the work at all.\n The techniques here are similar to those in Matt Keeter\u2019s  Massively Parallel Rendering of Complex Closed-Form Implicit Surfaces. Clipping is basically the same as intersection in constructive geometry (whether 2D or 3D), and that paper uses similar techniques to optimize a tape, taking advantage of algebraic simplifications on a per-region basis. Those techniques are more general, while this work is more specialized to 2D rendering tasks.\n It\u2019s fairly dated by now, but Adam Langley\u2019s blog post on  clipping in Chromium makes for interesting reading. The main problem being discussed is \u201cconflation artifacts,\u201d which are not fully addressed by the alpha-channel compositing approach to clipping, but even so it remains the standard technique, largely because it\u2019s more or less mandated by the W3C  compositing and blending spec and the  HTML canvas drawing model.\n Do you maintain a 2D renderer with interesting clip support? Are there good writeups somewhere I\u2019ve missed? Let me know, and I\u2019ll be happy to add links.\n  There are some things missing from this blog post, notably performance numbers. Right now, my focus in piet-gpu is to get the architecture right. It feels like that\u2019s converging, many of the hard problems are being solved.\n Now that the infrastructure for clipping is in place, blending should be relatively straightforward. Most of what needs to happen is additional blending logic in the fine rasterization, plus of course plumbing the relevant metadata through the pipeline. That, plus radial and sweep gradients, are the two major pieces need to support  COLRv1 emoji, the next big milestone.", "posttime": "2022-02-25 23:08:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "piet,gpu,\u526a\u8f91", "title": "Piet GPU\u8fdb\u5ea6\uff1a\u526a\u8f91", "title_en": "Piet-GPU Progress: Clipping", "transed": 1, "url": "https://raphlinus.github.io/rust/graphics/gpu/2022/02/24/piet-gpu-clipping.html", "via": "", "real_tags": ["piet", "gpu", "\u526a\u8f91"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075005, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "JLess\u5c06\u6f02\u4eae\u5730\u6253\u5370JSON\u5e76\u5e94\u7528\u8bed\u6cd5\u9ad8\u4eae\u663e\u793a\u3002\u5728\u63a2\u7d22\u5916\u90e8API\u6216\u8c03\u8bd5\u8bf7\u6c42\u6709\u6548\u8d1f\u8f7d\u65f6\u4f7f\u7528\u5b83\u3002\n\u5c55\u5f00\u548c\u6298\u53e0\u5bf9\u8c61\u548c\u6570\u7ec4\uff0c\u4ee5\u638c\u63e1JSON\u6587\u6863\u7684\u9ad8\u7ea7\u548c\u4f4e\u7ea7\u7ed3\u6784\u3002JLess\u6709\u4e00\u5927\u5957vim-Inspired\u547d\u4ee4\uff0c\u4f7f\u63a2\u7d22\u6570\u636e\u53d8\u5f97\u8f7b\u800c\u6613\u4e3e\u3002\nJLess\u652f\u6301\u57fa\u4e8e\u5168\u6587\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u641c\u7d22\u3002\u5feb\u901f\u627e\u5230\u60a8\u9700\u8981\u7684\u6570\u636e&#39\uff1b\u6211\u4eec\u6b63\u5728\u5bfb\u627e\u957f\u5b57\u7b26\u4e32\u4e2d\u7684\u503c\uff0c\u6216\u8005\u5728\u540c\u4e00\u5bf9\u8c61\u952e\u7684\u503c\u4e4b\u95f4\u8df3\u8f6c\u3002\n\u5982\u679c\u5b89\u88c5\u4e86Rust toolchain\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528cargo\u76f4\u63a5\u4ece\u6e90\u4ee3\u7801\u5b89\u88c5\uff1a", "note_en": "JLess will pretty print your JSON and apply syntax highlighting.Use it when exploring external APIs, or debugging request payloads.\n Expand and collapse Objects and Arrays to grasp the high- and low-levelstructure of a JSON document. JLess has a large suite of vim-inspiredcommands that make exploring data a breeze.\n JLess supports full text regular-expression based search. Quickly findthe data you&#39;re looking for in long String values, or jump betweenvalues for the same Object key.\n    If you have a Rust toolchain installed, you can also install directly from source using cargo:", "posttime": "2022-02-25 23:07:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u547d\u4ee4\u884c,command,json", "title": "Jless\u2013\u547d\u4ee4\u884cJSON\u67e5\u770b\u5668\uff08\u7528Rust\u7f16\u5199\uff09", "title_en": "Jless \u2013 a command-line JSON viewer (written in Rust)", "transed": 1, "url": "https://jless.io/", "via": "", "real_tags": ["rust", "\u547d\u4ee4\u884c", "command", "json"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075003, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u54e5\u5fb7\u5c14\u7684\u7b2c\u4e00\u4e2a\u4e0d\u5b8c\u5168\u6027\u5b9a\u7406\u6307\u51fa\uff0c\u6709\u4e9b\u6570\u5b66\u9648\u8ff0\u65e2\u4e0d\u80fd\u88ab\u8bc1\u660e\uff0c\u4e5f\u4e0d\u80fd\u88ab\u53cd\u9a73\u3002\u4ed6\u7684\u8bc1\u660e\u76f8\u5f53\u96be\u7406\u89e3\u2014\u2014\u5b83\u6d89\u53ca\u7d20\u6570\u3001\u56e0\u5f0f\u5206\u89e3\uff0c\u6240\u6709\u8fd9\u4e9b\u6570\u5b57\u7406\u8bba\u3002\u54e5\u5fb7\u5c14\u7684\u8bc1\u660e\u5fc5\u987b\u5f88\u590d\u6742\uff0c\u56e0\u4e3a\u57281931\u5e74\uff0c\u8ba1\u7b97\u673a\u7b97\u6cd5\u8fd8\u6ca1\u6709\u771f\u6b63\u88ab\u53d1\u660e\u51fa\u6765\u3002\n\u56fe\u7075\u673a\u76f4\u5230\u4e94\u5e74\u540e\u76841936\u5e74\u624d\u88ab\u53d1\u660e\u3002\u5f53\u8bc1\u660e\u505c\u987f\u95ee\u9898\u662f\u4e0d\u786e\u5b9a\u7684\u2014\u2014\u6ca1\u6709\u7a0b\u5e8f\u53ef\u4ee5\u51b3\u5b9a\u53e6\u4e00\u4e2a\u9879\u76ee\u662f\u5426\u4f1a\u5b8c\u6210\u2014\u2014\u54e5\u5fb7\u5c14\u7684\u5de5\u4f5c\u7ed9\u4e86\u4ed6\u7075\u611f\u3002\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u54e5\u5fb7\u5c14\u00b7\u514b\u5229\u5c14\u5728\u56fe\u7075\u4e4b\u524d\u5c31\u5f00\u59cb\u4e86\u6bd4\u8d5b\u3002\u4f46\u5728\u73b0\u4ee3\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u5df2\u7ecf\u7406\u89e3\u201c\u8ba1\u7b97\u673a\u7a0b\u5e8f\u201d\u6982\u5ff5\u7684\u4eba\u6765\u8bf4\uff0c\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u7406\u89e3\u8fd9\u4e2a\u7406\u8bba\u8981\u5bb9\u6613\u5f97\u591a\u3002\u5148\u662f\u56fe\u7075\uff0c\u7136\u540e\u662f\u54e5\u5fb7\u5c14\u3002\n\u8fd9\u79cd\u7cbe\u82f1\u7684\u201c\u5143\u7f16\u7a0b\u201d\u6280\u672f\u4f7f\u7528\u7a0b\u5e8fwc\u6765\u544a\u8bc9\u60a8my_\u7a0b\u5e8f\u4e2d\u6709\u591a\u5c11\u884c\u4ee3\u7801\u3002sh\u811a\u672c\u3002\n\u4f60\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e0a\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5728\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u4e0a\u8fd0\u884c\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u77e5\u9053\u5728my_\u7a0b\u5e8f\u4e2d\u8ba1\u7b97\u4ee3\u7801\u884c\u9700\u8981\u591a\u957f\u65f6\u95f4\u3002\u4e0a\u6d77\uff1a\n\u73b0\u5728\u60f3\u8c61\u4e00\u4e2a\u540d\u4e3abehave_\u7684\u811a\u672c\u3002sh.\u5f53\u4f60\u5728\u53e6\u4e00\u4e2a\u7a0b\u5e8f\u4e0a\u8fd0\u884c\u5b83\u65f6\uff0c\u5b83\u4f1a\u8f93\u51fa\u4e0e\u8be5\u7a0b\u5e8f\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u4f8b\u5982\uff1a\n\u8fd9\u53ef\u4ee5\u8f93\u51fa\u4efb\u4f55\u4e1c\u897f\uff0c\u53ea\u8981\u5b83\u4e0e\u8f93\u51fa\u4e0d\u540c/\u6211\u7684\u8bfe\u7a0b\u3002\u5618/\u6211\u7684\u8f93\u5165\u3002txt\u3002\n\u5bf9\u4e8e\u4efb\u4f55\u5267\u672c\uff0c\u6096\u8bba\u3002\u5618\u6211\u7684\u5267\u672c\u3002sh\u7684\u884c\u4e3a\u4e0e\u8fd0\u884c\u6211\u7684_\u811a\u672c\u4e0d\u540c\u3002\u5618\u6211\u7684\u5267\u672c\u3002sh.\u90a3\u4e48\u5f53\u4f60\u8dd1\u6b65\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462/\u77db\u76fe\u7684\u4eba\u5618/\u77db\u76fe\u7684\u4eba\u5618\uff1f\u8fd9\u5728\u903b\u8f91\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u4e00\u5b9a\u4e0d\u53ef\u80fd\u5199\u51fa\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u5618\u3002\n\u8981\u8868\u73b0\u51fa\u4e0e\u5176\u4ed6\u811a\u672c\u4e0d\u540c\u7684\u884c\u4e3a\u4f3c\u4e4e\u5e76\u975e\u4e0d\u53ef\u80fd\u3002\u8fd9\u79cd\u5929\u771f\u7684\u505a\u6cd5\u4f1a\u5e26\u6765\u4ec0\u4e48\uff1f\n\u5f53\u4f60\u8dd1\u7684\u65f6\u5019/\u77db\u76fe\u7684\u4eba\u5618/\u77db\u76fe\u7684\u4ebash\uff0c\u811a\u672c\u53ea\u662f\u8fdb\u5165\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\uff0c\u4ec0\u4e48\u4e5f\u4e0d\u8f93\u51fa\u3002\u4f60\u53ef\u4ee5\u67e5\u770b\u6211\u7684\u5de5\u4f5c\u2014\u2014\u4ee3\u7801\u5728GitHub\u4e0a\u3002\u5b83\u4e4b\u6240\u4ee5\u5f88\u96be\u4e0e\u5176\u4ed6\u811a\u672c\u6709\u6240\u4e0d\u540c\uff0c\u662f\u56e0\u4e3a\u5f53\u5b83\u8fdb\u5165\u4e00\u4e2a\u957f\u800c\u5b89\u9759\u7684\u5faa\u73af\u65f6\uff0c\u4f60\u65e0\u6cd5\u5224\u65ad\u8fd9\u4e2a\u5faa\u73af\u662f\u5426\u771f\u7684\u662f\u65e0\u9650\u7684\u3002\n\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u811a\u672c\u6682\u505c\u3002\u5982\u679c\u80fd\u591f\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u4f1a\u505c\u6b62\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5b83\u6765\u7f16\u5199\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u5618\u3002\n\u6240\u4ee5\u5199\u505c\u987f\u80af\u5b9a\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u8fd9\u5c31\u662f\u505c\u6b62\u95ee\u9898\u7684\u4e0d\u53ef\u80fd\u6027\uff0c\u56fe\u7075\u57281936\u5e74\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u3002\n\u4e00\u65e6\u4f60\u770b\u5230\u6839\u672c\u4e0d\u53ef\u80fd\u7684\u662f\u5199\u4f5c\uff0c\u4f60\u7684\u884c\u4e3a\u5c31\u4f1a\u4e0d\u540c\u3002\u5618\uff0c\u4f60\u53ef\u4ee5\u7a0d\u5fae\u6982\u62ec\u4e00\u4e0b\u505c\u987f\u95ee\u9898\uff0c\u8fd9\u5c31\u5f00\u59cb\u6709\u610f\u4e49\u4e86\u3002\n\u6709\u65f6\uff0c\u4f60\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e2a\u7a0b\u5e8f\u8fdb\u5165\u4e86\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u3002\u667a\u80fd\u7f16\u8bd1\u5668\u53ef\u4ee5\u53d1\u73b0\u4ee3\u7801\u7684\u67d0\u4e9b\u533a\u57df\u662f\u65e0\u6cd5\u8bbf\u95ee\u7684\u3002\u5982\u679c\u9000\u51fa\u7a0b\u5e8f\u7684\u6240\u6709\u90e8\u5206\u90fd\u65e0\u6cd5\u8bbf\u95ee\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5fc5\u987b\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u3002\n\u4f60\u4e0d\u9700\u8981\u7406\u89e3\u6240\u6709\u7684\u7ec6\u8282\uff0c\u5728\u8fd9\u91cc\uff0c\u4f60\u53ea\u9700\u8981\u77e5\u9053\u6709\u53ef\u80fd\u56f4\u7ed5\u8fd9\u4e9b\u8bc1\u660e\u6784\u5efa\u4e00\u4e9b\u5de5\u5177\u3002\u4f60\u53ef\u4ee5\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u8fd9\u4e9b\u8bc1\u636e\u3002\u6821\u6837\u6587\u4ef6\u683c\u5f0f\uff0c\u8fd8\u6709\u4e00\u4e2a\u68c0\u67e5\u6821\u6837\u7684\u4fdd\u8bc1\u811a\u672c\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u8dd1\u6b65\u65f6\uff1a\n\u5982\u679c\u5b83\u8fd4\u56deYES\uff0c\u8fd9\u610f\u5473\u7740/\u6211\u7684\u8bfe\u7a0b\u3002sh\u8fdb\u5165\u4e00\u4e2a\u6709\u9650\u7684\u5faa\u73af\u3002\u5982\u679c\u8bc1\u660e\u65e0\u6548\uff0c\u9a8c\u8bc1\u7a0b\u5e8f\u5c06\u8fd4\u56de\u5426\u3002\u9a8c\u8bc1\u811a\u672c\u672c\u8eab\u6c38\u8fdc\u4e0d\u4f1a\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u3002\n\u6211\u4eec\u9700\u8981\u7684\u53e6\u4e00\u4e2a\u5de5\u5177\u662f\u751f\u6210\u6240\u6709\u53ef\u80fd\u6587\u4ef6\u7684\u65b9\u6cd5\u3002\u5b83\u53ef\u4ee5\u975e\u5e38\u6162\uff0c\u8fd9\u5f88\u597d\u3002\u5047\u8bbe\u5b83\u901a\u8fc7\u5c06\u4e00\u4e2a\u5927\u6574\u6570\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u8868\u793a\u6765\u751f\u6210\u4e00\u4e2a\u6587\u4ef6\uff1a\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\u76ee\u6807\u811a\u672c\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u7684\u8bc1\u636e\u6765\u5c1d\u8bd5\u8868\u73b0\u51fa\u4e0e\u76ee\u6807\u811a\u672c\u4e0d\u540c\u7684\u884c\u4e3a\u3002\n#!/bin/bashi=0\uff0c\u4e3a\u771f\uff1b\u662f\u7684/\u751f\u6210_\u6587\u4ef6\u3002sh$i&gt/\u53ef\u80fd\u7684\u5982\u679c[[`./validate_-proof.sh./mably.proof$*`==&#34\uff1bYES&#34\uff1b]]\u5219\u8bc1\u660e\u7136\u540e#\u76ee\u6807\u8fdb\u5165\u65e0\u9650\u5faa\u73af\u3002\u8ba9&#39\uff1bs\u7684\u884c\u4e3a\u4e0d\u540c\u9000\u51fa0 fi i=$\uff08\uff08i+1\uff09\uff09\u5b8c\u6210\n\u5982\u679c\u6709\u4efb\u4f55\u8bc1\u636e\u8868\u660e\u76ee\u6807\u811a\u672c\u8fdb\u5165\u4e86\u65e0\u9650\u671f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7a0b\u5e8f\u6700\u7ec8\u4f1a\u627e\u5230\u5b83\uff0c\u5e76\u505c\u6b62\u3002\u5982\u679c\u6ca1\u6709\u8bc1\u636e\uff0c\u90a3\u4e48\u5b83\u5c06\u6c38\u8fdc\u5faa\u73af\u5bfb\u627e\u8bc1\u636e\u3002\n\u5982\u679c\u6bcf\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u7684\u7a0b\u5e8f\u90fd\u6709\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u7684\u8bc1\u660e\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u662f\u5199\u4e86\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u6211\u4eec\u77e5\u9053\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u6240\u4ee5\uff0c\u65e0\u8bba\u6211\u4eec\u4f7f\u7528\u4ec0\u4e48\u6837\u7684\u8bc1\u660e\u7cfb\u7edf\uff0c\u4e00\u5b9a\u6709\u4e00\u4e9b\u7a0b\u5e8f\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u6b62\uff0c\u4f46\u6ca1\u6709\u8bc1\u636e\u8868\u660e\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u7ec8\u6b62\u3002\u5fc5\u987b\u6709\u771f\u5b9e\u4f46\u65e0\u6cd5\u8bc1\u660e\u7684\u9648\u8ff0\uff0c\u8fd9\u662f\u54e5\u5fb7\u5c14\u57281931\u5e74\u8bc1\u660e\u7684\u3002\n\u54e5\u5fb7\u5c14\u7684\u4e0d\u5b8c\u5168\u6027\u5b9a\u7406\u662f\u6570\u5b66\u54f2\u5b66\u7684\u57fa\u7840\u3002\u5b83\u8868\u660e\u4e86\u6211\u4eec\u5bf9\u771f\u7406\u7684\u770b\u6cd5\u548c\u6211\u4eec\u5bf9\u8bc1\u636e\u7684\u770b\u6cd5\u4e4b\u95f4\u7684\u4e0d\u5339\u914d\u3002\u5b83\u5411\u6211\u4eec\u8868\u660e\uff0c\u771f\u7406\u7684\u7406\u8bba\u6982\u5ff5\u548c\u6211\u4eec\u6240\u77e5\u9053\u7684\u6570\u5b66\u9648\u8ff0\u7684\u5b9e\u9645\u96c6\u5408\u4e4b\u95f4\u603b\u662f\u5b58\u5728\u5dee\u5f02\u3002\n\u6211\u5e0c\u671b\u8fd9\u6b21\u5c55\u89c8\u5bf9\u4eba\u4eec\u6709\u6240\u5e2e\u52a9\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u5e94\u8be5\u628a\u54e5\u5fb7\u5c14\u6700\u521d\u57fa\u4e8e\u6570\u8bba\u7684\u8bc1\u660e\u4f5c\u4e3a\u5386\u53f2\u4e8b\u5b9e\u653e\u5728\u4e00\u8fb9\uff0c\u5c31\u50cf\u6211\u4eec\u4e0d\u518d\u4f7f\u7528\u827e\u8428\u514b\u00b7\u725b\u987f\u6700\u521d\u7684\u5fae\u79ef\u5206\u7b26\u53f7\u4e00\u6837\u3002\u6211\u4eec\u5e94\u8be5\u627f\u8ba4\uff0c\u6570\u5b66\u8bc1\u660e\u548c\u8ba1\u7b97\u673a\u7b97\u6cd5\u7684\u6982\u5ff5\u662f\u76f8\u4e92\u4ea4\u7ec7\u5728\u4e00\u8d77\u7684\uff0c\u9996\u5148\u8981\u6559\u505c\u6b62\u7684\u95ee\u9898\uff0c\u5176\u6b21\u8981\u6559\u6570\u5b66\u8bc1\u660e\u7684\u4e0d\u5b8c\u6574\u6027\u3002", "note_en": "G\u00f6del\u2019s first incompleteness theorem states that there are mathematical statements thatcan neither be proven or disproven. His proof is fairly difficult tounderstand - it involves prime numbers, factorization, all this numbertheory. G\u00f6del\u2019s proof had to be complicated because in 1931, computeralgorithms hadn\u2019t really been invented.\n Turing machines would only be invented in 1936, five years later. WhenTuring proved the halting problem was undecidable - that there is noprogram that can decide whether another program will ever finish -G\u00f6del\u2019s work was an inspiration to him. Historically, G\u00f6del clearlycame before Turing. But in the modern day, for people who alreadyunderstand the concept of a \u201ccomputer program\u201d, it\u2019s a lot easier tounderstand the theory the other way around. Turing first, then G\u00f6del.\n    This elite \u201cmetaprogramming\u201d technique uses the program  wc to tell you how many lines ofcode there are in the  my_program.sh script.\n You can go even deeper into this running-programs-on-programs, and runa program on another program that\u2019s running on another program. Forexample, if you want to know how long it takes to count the lines ofcode in  my_program.sh:\n  Now imagine a script called  behave_differently.sh. When you run it onanother program, it outputs something different than that programdoes. For example:\n  This can output anything at all, as long as it is different from theoutput of  ./my_program.sh ./my_input.txt.\n   For any script,  paradox.sh my_script.sh behaves differently thanrunning  my_script.sh my_script.sh. So what happens when you run ./paradox.sh ./paradox.sh? It\u2019s a logical impossibility. It must beimpossible to write  behave_differently.sh.\n  It doesn\u2019t really seem impossible to behave differently than another script. What goeswrong with the naive approach?\n  When you run  ./paradox.sh ./paradox.sh, the script simply goes intoan infinite loop, outputting nothing. You can check my work - the codeis  on GitHub. The reason it is so hard tobehave differently from another script is that you can\u2019t tell, when itgoes into a long and silent loop, if that loop is really infinite or not.\n  If we had a script  halts.sh that could tell if a program would halt, we could use it to write  behaves_differently.sh.\n  So it must be impossible to write  halts.sh. There you go - that\u2019sthe impossibility of the halting problem, which Turing proved in 1936.\n  Once you see that the fundamental impossibility is writing behaves_differently.sh, it starts to make sense how you cangeneralize the halting problem a little bit.\n Sometimes, you can prove a program goes into an infinite loop. A smartcompiler can figure out that some areas of the code areunreachable. If all the parts of the program that exit areunreachable, then a program must go into an infinite loop.\n You don\u2019t need to understand all the details, here, you just need toknow that it\u2019s possible to build some tools around these proofs. Youcan represent these proofs in a  .proof file format, and there\u2019s avalidation script that checks the proof. So when we run:\n  If it returns  YES, that means that  ./my_program.sh goes into aninfinite loop. If the proof isn\u2019t valid, the validator returns NO. The validation script never goes into an infinite loop itself.\n The other tool we need is a way to generate all possible files. Itcan be super slow, that\u2019s fine. So let\u2019s say that this generates afile by converting a big integer to its binary representation:\n   We can try to behave differently from a target script by searching fora proof that it goes into an infinite loop.\n #!/bin/bashi=0while true; do ./generate_file.sh $i &gt; ./possible.proof if [[ `./validate_proof.sh ./possible.proof $*` == &#34;YES&#34; ]] then # The target goes into an infinite loop. Let&#39;s behave differently\texit 0 fi i=$(( i + 1 ))done\n If there is any proof of the target script going into an infiniteloop, then this program will eventually find it, and stop. If there isno proof, then it will loop forever searching for a proof.\n If every program that infinite loops has a proof that it infiniteloops, then we have just written  behave_differently.sh. We knowthat\u2019s not possible. So, no matter what proof system we use, theremust be some program that never terminates, but there is no proof thatit never terminates. There must be true but unprovable statements,which is what G\u00f6del proved in 1931.\n  G\u00f6del\u2019s incompleteness theorem is fundamental to the philosophyof mathematics. It demonstrates the mismatch between our ideas oftruth and our ideas of proof. It shows us that there will always be adifference between the theoretical idea of truth and the practical setof mathematical statements that we know are true.\n I hope that this exposition was helpful to people. Personally, I thinkwe should set aside G\u00f6del\u2019s original number-theory-based proof as anartifact of history, the way we no longer use Isaac Newton\u2019s originalnotation for calculus. We should accept that the concepts ofmathematical proof and computer algorithms are intertwined at theirheart, teach the halting problem first, and teach the incompletenessof mathematical proof second.", "posttime": "2022-02-25 22:50:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e0d\u5b8c\u5168\u6027,incompleteness,\u7a0b\u5e8f", "title": "Bash\u4e2d\u7684\u54e5\u5fb7\u5c14\u4e0d\u5b8c\u5168\u6027\u5b9a\u7406", "title_en": "G\u00f6del's Incompleteness Theorem in Bash", "transed": 1, "url": "https://lacker.io/math/2022/02/24/godels-incompleteness-in-bash.html", "via": "", "real_tags": ["\u4e0d\u5b8c\u5168\u6027", "\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075001, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6240\u4ee5\u4f60\u9700\u8981\u89e32x2\u2212 3 x=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2-3x=2 x 2\u2212    3x=2\u3002\u4f60\u8fd8\u8bb0\u5f97\u201c\u4e8c\u6b21\u578b\u201d\u8fd9\u4e2a\u8bcd\u548c\u7c7b\u4f3c\u4e8e4 a c\u7684\u4e1c\u897f\u5417\u2212  B2\\def\\A{\\red{A}}\\def\\b{\\blue{b}}\\def\\C{\\green{C}}\\sqrt{4ac-b^2}4 A C\u2212   b 2\u200b      \u2026 \u8fd8\u662f+B2\\def\\A{\\red{A}\\def\\b{\\blue{b}}\\def\\C{\\green{C}}+b^2+B2\uff1f\ud83d\ude28\n\u522b\u518d\u8bd5\u56fe\u8bb0\u4f4f\u4e8c\u6b21\u516c\u5f0f\u4e86\uff01\u5728\u8fd9\u4e2a\u4e92\u52a8\u6559\u7a0b\u4e2d\uff0c\u4f60\u5c06\u548c\u6211\u4e00\u8d77\u91cd\u65b0\u53d1\u73b0\u4e8c\u6b21\u516c\u5f0f\uff0c\u4f60\u518d\u4e5f\u4e0d\u7528\u8bb0\u4f4f\u5b83\u4e86\uff01\ud83d\udcaa\n\u9996\u5148\u8ba9\u6211\u4eec\u63d0\u9192\u81ea\u5df1\u4e8c\u6b21\u516c\u5f0f\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4e8c\u6b21\u65b9\u7a0b\u662f\u8fd9\u6837\u7684\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u7279\u5b9a\u5e38\u6570A\\def\\A{\\red{A}}\\def\\B{\\blue{B}\\def\\C{\\green{C}\\A\uff0cB\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}\\B\u548cC\\def\\green{A}\\def\\B}\\C}C}\uff1a\n\u4f8b\u5982\uff0c2x2\u2212 3 x=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2-3x=2 x 2\u2212    3 x=2\u662f\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\u3002\u5b83\u7684A\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\\A\uff0cB\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}\\B\u548cC\\def\\A{red A}\\def\\B{blue{C}\\C}\\C}\u7684\u503c\u662f\u4ec0\u4e48\uff1f\n\u5c0f\u5fc3\u8d1f\u53f7\u3002\u91cd\u65b0\u6392\u52172x2\u2212 3 x=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2-3x=2 x 2\u2212    3 x=2\u7684\u5f62\u5f0f\u4e3aA x 2+B x+C=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{A}x^2+\\blue{B}x+\\green{C}=0A x 2+Bx+C=0\u3002\u53ef\u4ee5\u901a\u8fc7\u4ece\u4e24\u4fa7\u51cf\u53bb2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2\u6765\u5b9e\u73b0\u3002\u4f60\u6700\u7ec8\u5f97\u5230\u4e862x2+\uff08\uff09\u2212 3\uff09x+\uff08\u2212 2\uff09=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{2}x^2+\\blue{3}x+\\green{-2}=02x2+\u2212 3\uff09x+\uff08\u2212 2 )  =    0  .\n\u201c\u89e3\u201d\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\u610f\u5473\u7740\u627e\u5230\u4f7f\u65b9\u7a0b\u4e24\u8fb9\u76f8\u7b49\u7684x\\def\\a{\\red{a}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\u7684\u503c\u3002x\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\u7684\u8fd9\u4e9b\u7279\u6b8a\u503c\u79f0\u4e3a\u6839\ud83e\udd55 \u65b9\u7a0b\u7684\u4e00\u90e8\u5206\u3002\u518d\u8003\u8651\u6211\u4eec\u7684\u4e8c\u6b21\u65b9\u7a0b\uff0c2\u00d72\u2212 3\u500d\u2212 2=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{2}x^2-\\blue{3}x-\\green{2}=0 2 x 2\u2212     3\u500d\u2212     2  =    0  . \u54ea\u4e00\u4e2a\u4e0d\u662f\u6839\uff1f\n\u5b9e\u9645\u4e0a\uff0cx=\u2212  1 2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-\\tfrac{1}{2}x=\u2212           2        1 \u200b         \u662f\u4e00\u4e2a\u6839\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5165\u65b9\u7a0b\u4e2d\u770b\u5230\uff1a\n2x2\u2212 3\u500d\u2212 2     = 2 ( \u2212   1 2  ) 2 \u2212 3 ( \u2212   1 2 ) \u2212 2         = ( 2 \u00d7   1 4 ) +   3 2 \u2212 2         =   1 2 +   3 2 \u2212   4 2         =    1 + 3 \u2212 4 2=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}\\red{2}x^2-\\blue{3}x-\\green{2}&amp\uff1b=\\\u7ea2\u8272{2}\uff08\\tfrac12\uff09^2-\\blue{3}\uff08\\tfrac12\uff09-\\green{2}\\\\\\\\&amp\uff1b=\uff082\u6b21\\tfrac14\uff09+\\tfrac32-2\\\\&amp\uff1b=\\tfrac12+\\tfrac32-\\tfrac42\\\\\\&amp\uff1b=\\tfrac{1+3-4}2\\\\\\&amp\uff1b=0\\\\\\end{align*}2 x 2\u2212   3\u500d\u2212   2.\u200b             =   2 ( \u2212           2        1 \u200b      )        2.\u2212   3 ( \u2212           2        1 \u200b     )  \u2212   2      =  ( 2  \u00d7            4        1 \u200b     )  +            2        3 \u200b      \u2212  2      =            2        1 \u200b      +            2        3 \u200b      \u2212            2        4 \u200b          =            2        1 + 3 \u2212 4.\u200b          =  0\u200b\n\u5b9e\u9645\u4e0a\uff0cx=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2 x=2\u662f\u4e00\u4e2a\u6839\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u63d2\u5165\u65b9\u7a0b\u4e2d\u770b\u5230\uff1a\n2x2\u2212 3\u500d\u2212 2     = 2 ( 2  ) 2 \u2212 3 ( 2 ) \u2212 2         = ( 2 \u00d7 4 ) \u2212 6.\u2212 2         = 8 \u2212 8=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}\\red{2}x^2-\\blue{3}x-\\green{2}&amp\uff1b=\\\u7ea2\u8272{2}\uff082\uff09^2-\\\u84dd\u8272{3}\uff082\uff09\\\u7eff\u8272{2}\\\\\\&amp\uff1b=\uff082\u6b214\uff09-6-2\\\\\\&amp\uff1b=8-8\\\\\\&amp\uff1b=0\\\\\\end{align*}2 x 2\u2212   3\u500d\u2212   2.\u200b             =   2 ( 2  )        2  \u2212   3 ( 2 )  \u2212   2      =  ( 2  \u00d7  4 )  \u2212  6.\u2212  2      =  8  \u2212  8      =  0 \u200b\n\u901a\u8fc7\u5c06x\\def\\a{\\red{a}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\u7684\u503c\u63d2\u5165\u4e8c\u6b21\u65b9\u7a0b\uff0c\u53ef\u4ee5\u5feb\u901f\u68c0\u67e5\u8be5\u503c\u662f\u5426\u4e3a\u6839\u3002\u4e0a\u9762\uff0c\u63d2\u5165x=2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2 x=2\u6216x=\u2212  1 2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-\\tfrac12 x=\u2212           2        1 \u200b       \u7ed9\u51fa\u6709\u6548\u7684\u65b9\u7a0b0=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}0=0\uff0c\u56e0\u6b64\u5b83\u4eec\u90fd\u662f\u6839\u3002\u4f46\u63d2\u5165x=\u2212 2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-2 x=\u2212 2\u7ed9\u51fa\u4e86\u65e0\u6548\u7684\u7b49\u5f0f12=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}12=0 12=0\uff0c\u56e0\u6b64\u5b83\u4e0d\u662f\u6839\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5c1d\u8bd5x\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\u7684\u968f\u673a\u503c\u5e76\u4e0d\u662f\u627e\u5230\u6839\u7684\u6709\u6548\u65b9\u6cd5\uff01\n\u4e0e\u5176\u63d2\u5165\u968f\u673a\u731c\u6d4b\uff0c\u4e0d\u5982\u63d2\u5165\u5408\u7406\u7684\u731c\u6d4b\u3002\u8fd9\u5f20\u56fe\u8868\u662f\u5bfb\u627e\u5408\u7406\u731c\u6d4b\u7684\u6709\u7528\u5de5\u5177\u3002\uff08\u7a0d\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8be5\u56fe\u4e5f\u6709\u52a9\u4e8e\u63a8\u5bfc\u4e8c\u6b21\u516c\u5f0f\uff01\uff09\n\u8ba9\u6211\u4eec\u89e3\u53e6\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff1a\u2212 1 x 2\u2212 1 x+2=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2\\blue{-1}x+\\green{2}=0\u2212 1 x 2\u2212  1 x+2=0\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u628a\u6211\u4eec\u7684\u731c\u6d4b\u7ed8\u5236\u5728\u4e00\u4e2a\u56fe\u8868\u4e0a\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u91cc\uff0c\u6211\u4eec\u6b63\u5728\u7ed8\u5236y=\u2212 1 x 2\u2212 1 x+2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=\\red{-1}x^2\\blue{-1}x+\\green{2}y=\u2212 1 x 2\u2212  1 x+2\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2ax\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x\uff0c\u5176\u4e2dy=0\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}y=0\uff0c\u56e0\u4e3a\u8fd9\u5c06\u89e3\u51b3\u6211\u4eec\u7684\u65b9\u7a0b\u3002\u6211\u4eec\u5df2\u7ecf\u731c\u4e86\u51e0\u6b21\u4e86\u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\\red{\u2718}     \u2718   \u6807\u5fd7\u3002\u6211\u4eec\u731c\u5230\u4e86\u4ec0\u4e48\uff1f\n\u4e0d\u5b8c\u5168\u662f\uff1a\u8fd9\u4e9b\u662fy\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y\u503c\u3002\u6211\u4eec\u505a\u4e86\u4e24\u6b21\u731c\u6d4b\uff0cx=0\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{green{C}}x=0x=0\u548cx=2\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}x=2x=2\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86y\\def\\A{red{A}}\\def\\B{blue{B}}\\def\\C{green{C}}y-\u503cy=2\\def\\A{red{A}\\def\\B{blue{B}\\def\\C{green{C}y=2\u548cy=\u2212 4\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4 y=\u2212 4.\u5bf9\u4e8ex=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0 x=0\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86y=2\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}y=2 y=2\uff1a\ny=\u2212 1 x 2\u2212 1 x+2=\u2212 1 ( 0  ) 2  \u2212 1\uff080\uff09+2=0+0+2=2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}y&amp\uff1b=\\\u7ea2\u8272{-1}x^2 \\\u84dd\u8272{-1}x+\\\u7eff\u8272{2}\\\\\\\\&amp\uff1b=\\\u7ea2\u8272{-1}\uff080\uff09^2\\\u84dd\u8272{-1}\uff080\uff09+\\\u7eff\u8272{2}\\\\\\&amp\uff1b=0+0+\\green{2}\\\\\\&amp\uff1b=2\\\\\\\u7ed3\u675f{align*}y\u200b             =   \u2212 1 x 2\u2212  1 x+2=\u2212 1 ( 0  )        2   \u2212  1 ( 0 )  +   2      =  0  +  0  +   2      =  2 \u200b\n\u540c\u6837\u5730\uff0c\u5bf9\u4e8e\u731c\u6d4bx=2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2 x=2\uff0c\u6211\u4eec\u8ba1\u7b97\u4e86y=\u2212 4\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4 y=\u2212 4  :\ny=\u2212 1 x 2\u2212 1 x+2=\u2212 1 ( 2  ) 2  \u2212 1 ( 2 ) + 2         = \u2212 4.\u2212 2 + 2         = \u2212 4\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}y&amp\uff1b=\\\u7ea2\u8272{-1}x^2 \\\u84dd\u8272{-1}x+\\\u7eff\u8272{2}\\\\\\\\&amp\uff1b=\\\u7ea2\u8272{-1}\uff082\uff09^2\\\u84dd\u8272{-1}\uff082\uff09+\\\u7eff\u8272{2}\\\\\\&amp\uff1b=-4-2+\\\u7eff\u8272{2}\\\\\\&amp\uff1b=-4\\\\\\\u7ed3\u675f{align*}y\u200b             =   \u2212 1 x 2\u2212  1 x+2=\u2212 1 ( 2  )        2   \u2212  1 ( 2 )  +   2      =  \u2212 4.\u2212  2  +   2      =  \u2212 4.\u200b\n\u8fd9\u4e24\u6b21\u731c\u6d4b\u90fd\u6ca1\u6709\u6210\u529f\uff1a\u4ed6\u4eec\u6ca1\u6709\u89e3\u51fa\u65b9\u7a0b\u5f0f\u2212 1 x 2\u2212 1 x+2=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2\\blue{-1}x+\\green{2}=0\u2212 1 x 2\u2212  1 x+2=0\u3002\u4e00\u4e2a\u6210\u529f\u7684\u731c\u6d4b\u2014\u2014\u4e5f\u5c31\u662f\u6839\u2014\u2014\u5728\u6211\u4eec\u7684\u56fe\u8868\u4e0a\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\n\u76f8\u53cd\u3002y\u8f74\u662fx=0\\def\\A{red{A}}\\def\\B{blue{B}}\\def\\C{green{C}}y\u8f74\u4e0a\u7684\u4e00\u7ec4\u70b9\uff0c\u5176\u4e2dx=0\\def\\A{red{A}\\def\\blue{B}\\def\\C{green{C}x=0\uff0c\u56e0\u6b64\u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\\red{\u2718}     \u2718   \u5728y\u8f74\u4e0a\uff0c\u731c\u6d4bx=0\\def\\A{red{A}\\def\\B{blue{B}}\\def\\C{green{C}}}y\u8f74\u4e0a\u7684x=0\\def\\A{red{A}\\def\\B{blue{B}\\def\\C{green{C}x=0\u3002\n\u6211\u4eec\u6b63\u5728\u52aa\u529b\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u2212 1 x 2\u2212 1 x+2=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2\\blue{-1}x+\\green{2}=0\u2212 1 x 2\u2212  1 x+2=0\u3002\u6211\u4eec\u6b63\u5728\u7b56\u5212y=\u2212 1 x 2\u2212 1 x+2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=\\red{-1}x^2\\blue{-1}x+\\green{2}y=\u2212 1 x 2\u2212  1 x+2\uff0c\u6240\u4ee5\u627e\u5230\u4e00\u4e2ay=0\\def\\a{\\red{a}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=0 y=0\u7684\u70b9\u5c31\u53ef\u4ee5\u89e3\u51b3\u6211\u4eec\u7684\u65b9\u7a0b\u3002\nx\u8f74\u662f\u4e00\u7ec4\u70b9\uff0c\u5176\u4e2dy=0\\def\\A{red{A}}\\def\\B{blue{B}}\\def\\C{green{C}}x\u8f74\u662f\u4e00\u7ec4\u70b9\uff0c\u5176\u4e2dy=0\\def\\A{red{A}\\def\\B{blue B}\\def\\C{green{C}y=0\u3002\u6240\u4ee5\u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\\red{\u2718}     \u2718   \u5728x\u8f74\u4e0a\uff0cx\u8f74\u662f\u65b9\u7a0b\u7684\u6839\u3002\n\u4f7f\u7528\u56fe\u8868\uff0c\u6211\u4eec\u9519\u8bef\u7684\u731c\u6d4b\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u9009\u62e9\u66f4\u597d\u7684\u4e0b\u4e00\u4e2a\u731c\u6d4b\u3002\u8981\u4e86\u89e3\u539f\u56e0\uff0c\u8bf7\u7ed8\u5236y=\u2212 1 x 2\u2212 1 x+2\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=\\red{-1}x^2\\blue{-1}x+\\green{2}y=\u2212 1 x 2\u2212  1 x+2\u8868\u793a\u5269\u4f59\u8303\u56f4\u2212 5.\u2264 \u5341\u3001\u2264 5\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}-5\\leq x\\leq 5\u2212 5.\u2264    \u5341\u3001\u2264    5.\u5b83\u770b\u8d77\u6765\u50cf\u4ee5\u4e0b\u54ea\u6761\u66f2\u7ebf\uff1f\uff08\u4f60\u53ef\u80fd\u60f3\u8981\u62ff\u7eb8\u548c\u94c5\u7b14\u3002\uff09\n\u8fd9\u4e0d\u662f\u66f2\u7ebfB\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold B}B\u3002\u4f8b\u5982\uff0c\u5c1d\u8bd5x=\u2212 3\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-3 x=\u2212 3.\u4f60\u5e94\u8be5\u4ece\u54ea\u91cc\u5f97\u5230y=\u2212 4\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4 y=\u2212 4.\u8fd9\u8fdc\u8fdc\u4e0d\u662f\u91cd\u70b9\uff08x=\u2212 3\uff0cy=4\uff09\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\uff08x=-3\uff0cy=4\uff09\uff08x=\u2212 3\uff0cy=4\uff09\u5728\u66f2\u7ebfB\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}}\\green{\\bold B}B\u4e0a\u3002\u5982\u679c\u4f60\u6b63\u786e\u5730\u7ed8\u5236\u4e86\u6240\u6709\u7684\u70b9\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u6cbf\u7740\u4e0a\u9762\u7684\u66f2\u7ebfC\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}C\u3002\n\u8fd9\u4e0d\u662f\u66f2\u7ebfA\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold A}A\u3002\u5c1d\u8bd5\u4f8b\u5982x=5\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=5 x=5\uff0c\u5728\u8fd9\u91cc\u60a8\u5e94\u8be5\u5f97\u5230y=\u2212 28\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-28 y=\u2212 28  . \u8fd9\u79bb\u70b9\u5f88\u8fdc\uff08x=5\uff0cy=\u2212 3\uff09\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\uff08x=5\uff0cy=-3\uff09\uff08x=5\uff0cy=\u2212 3\uff09\u5728\u66f2\u7ebfA\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold A}A\u4e0a\u3002\u5982\u679c\u4f60\u6b63\u786e\u5730\u7ed8\u5236\u4e86\u6240\u6709\u7684\u70b9\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u6cbf\u7740\u4e0a\u9762\u7684\u66f2\u7ebfC\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}C\u3002\n\u4e0d\uff0c\u8fd9\u662fC\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}}\\orange{C}C\u4e0ey\u8f74\u7684\u4ea4\u70b9\u3002\u6211\u4eec\u60f3\u8981C\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{C}C\u4e0ex\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}x\u8f74\u7684\u4ea4\u70b9\u3002\u8fd9\u4e9b\u4ea4\u53c9\u70b9\u4f4d\u4e8ex=\u2212 2\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-2 x=\u2212 2\u548cx=1\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=1 x=1\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6839\uff0c\u4f46\u5728\uff08x=\u2212 2\uff0cy=0\uff09\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}\uff08x=-2\uff0cy=0\uff09\uff08x=\u2212 2\uff0cy=0\uff09\u3002\n\u8bf7\u6ce8\u610f\uff0c\u66f2\u7ebfC\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}C\u9075\u5faa\u5012\u7f6e\u7684\u201c\u7897\u201d\u5f62\u72b6\ud83e\udd63. \u5982\u679c\u4f60\u518d\u753b\u4e00\u4e9b\u4e8c\u6b21\u66f2\u7ebf\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u90fd\u9075\u5faa\u7c7b\u4f3c\u7684\u201c\u7897\u201d\u6216\u201cU\u201d\u5f62\u3002\u5b83\u53ef\u4ee5\u7ffb\u8f6c\u8fc7\u6765\uff0c\u6216\u5411\u4e0a\u6216\u4fa7\u5411\u79fb\u52a8\uff0c\u6216\u6c34\u5e73\u6216\u5782\u76f4\u6324\u538b\u3002\u4f46\u5b83\u603b\u662f\u4e00\u4e2a\u201c\u7897\u201d\u5f62\uff0c\u53eb\u505a\u629b\u7269\u7ebf\u3002\n\u505a\u5f97\u597d\u3002D\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold D}D\u4e0d\u80fd\u662f\u4e8c\u6b21\u578b\uff0c\u56e0\u4e3a\u5b83\u6709\u4e00\u4e2a\u201cS\u201d\u5f62\u3002\n\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u548c\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00\u4e2a\u56fd\u5bb6\u7684\u4e00}A\u6070\u597d\u662f\u98a0\u5012\u7684\uff09\u3002B\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{B}B\u4e5f\u53ef\u4ee5\u662f\u975e\u5e38\u62c9\u4f38\u7684\u629b\u7269\u7ebf\u7684\u4e00\u90e8\u5206\u3002\u4f46\u662f\u66f2\u7ebfD\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold D}D\u6709\u4e00\u4e2a\u201cS\u201d\u5f62\uff0c\u6240\u4ee5\u5b83\u4e0d\u53ef\u80fd\u662f\u4e8c\u6b21\u66f2\u7ebf\u3002\n\u77e5\u9053\u4e8c\u6b21\u66f2\u7ebf\u603b\u662f\u5f62\u6210\u201cU\u201d\u5f62\u6709\u52a9\u4e8e\u6211\u4eec\u505a\u51fa\u66f4\u597d\u7684\u731c\u6d4b\u3002\u5728\u4e0b\u9762\u7684\u4e8c\u6b21\u66f2\u7ebf\u56fe\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u505a\u4e86\u4e09\u4e2a\u731c\u6d4b\uff1a\n\u4e0d\uff0c\u8fd9\u4e0d\u884c\u3002\u53ea\u6709\u4e00\u4e2a\u201cU\u201d\u5f62\u53ef\u4ee5\u7a7f\u8fc7\u8fd9\u4e09\u4e2a\u70b9\uff0c\u800c\u552f\u4e00\u7684x\\def\\a{\\red{a}\\def\\B{\\blue{B}\\def\\C{\\green{C}}x-\u770b\u8d77\u6765\u53ef\u4ee5\u5de5\u4f5c\u7684\u503c\u662fx=2\\def\\a{\\red{a}\\def\\B{blue B}\\def\\C{green{C}x=2 x=2\uff1a\n\u6b63\u5f53\u53ea\u6709\u5411\u4e0a\u7684\u201cU\u201d\u5f62\u624d\u80fd\u7a7f\u8fc7\u8fd9\u4e09\u4e2a\u70b9\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u6240\u4ee5\uff0c\u56fe\u8868\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u505a\u51fa\u66f4\u597d\u7684\u731c\u6d4b\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u53ea\u662f\u5728\u731c\u6d4b\u3002\u8fd9\u4e5f\u6ca1\u6709\u6548\u7387\uff01\u76f8\u53cd\uff0c\u4e8c\u6b21\u516c\u5f0f\u5c06\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\u6765\u627e\u5230\u4efb\u4f55\u4e8c\u6b21\u65b9\u7a0b\u7684\u6240\u6709\u6839\u3002\n\u8fd9\u786e\u5b9e\u6ee1\u8db3P\u00d7Q=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P\\times Q=0 P\u00d7Q=0\uff0c\u4f46\u8fd8\u6709\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\uff01\u4f8b\u5982\uff0cP=5\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P=5p=5\u548cQ=0\\def\\A{\\red{A}\\def\\blue{B}\\def\\C{\\green{C}Q=0\u3002\u4f60\u53ef\u4ee5\u628a\u6240\u6709\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u90fd\u5199\u5728\u4e00\u5f20\u5927\u8868\u683c\u91cc\uff0c\u8ba9\u5b83\u4eec\u5f62\u8c61\u5316\uff1a\n\u7ed3\u679c\u662f\u5728P=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{green{C}}P=0p=0\u5217\u548c\u6574\u4e2aQ=0\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{green{C}Q=0\u884c\u4e0a\u90fd\u662f\u96f6\u3002\u56e0\u6b64\uff0c\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u503c\u4e3a\u96f6\uff0c\u53e6\u4e00\u4e2a\u503c\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\u3002\n\u4f60\u5f88\u5feb\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff01\u4f46\u5b83\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4ec0\u4e48\uff1f\n\u4e0d\uff0c\u5b9e\u9645\u4e0a\u5c31\u50cf\u4e0a\u4e00\u4e2a\u7b49\u5f0f\u4e00\u6837\uff01\u6211\u4eec\u53ef\u4ee5\u8ba9P=x\u2212 L\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{P}=\\orange{x-L}P=x\u2212  L\u548cQ=x\u2212 R\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{Q}=\\pink{x-R}Q=x\u2212  R\u5982\u679cP=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{P}=0 P=0\uff0c\u90a3\u4e48x\u2212 L=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{x-L}=0 x\u2212  L=0\u3002\u5982\u679cQ=0\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{Q}=0 Q=0\uff0cx\u2212 R=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{x-R}=0 x\u2212  R=0\u3002\n\u4f60\u53ef\u4ee5\u7a0d\u5fae\u7b80\u5316\u4e00\u4e0b\u8fd9\u4e9b\u89e3\u51b3\u65b9\u6848\u3002\u91cd\u65b0\u5b89\u6392\u4e00\u4e0b\uff0c\u4f60\u4f1a\u5f97\u5230\u4ec0\u4e48\uff1f\n\u5c0f\u5fc3\u8d1f\u53f7\u3002\u4ee5x\u4e3a\u4f8b\u2212 R=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}}x-\\pink{R}=0 x\u2212     R=0\uff0c\u5c06R\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{R}R\u6dfb\u52a0\u5230\u4e24\u4fa7\u3002\u4f60\u5e94\u8be5\u5f97\u5230x=R\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\pink{R}x=R\u3002\n\u65b9\u7a0b\uff08x\u2212 L\uff09\uff08x\uff09\u2212 R=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\uff08x-L\uff09}\\pink{\uff08x-R\uff09}=0\uff08x\uff09\u2212  L\uff09\uff08x\uff09\u2212  R\uff09=0\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u4e8c\u6b21\u66f2\u7ebf\uff01\u4f60\u53ef\u80fd\u8fd8\u8bb0\u5f97\u5982\u4f55\u201c\u4e58\u51fa\u201d\u62ec\u53f7\uff0c\u6bd4\u5982\uff1a\na=xb=\u2212 lc=xd=\u2212 R\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}A&amp\uff1b=x\\\\b&amp\uff1b=-\\\u6a59\u8272{L}\\\\c&amp\uff1b=x\\\\d&amp\uff1b=-\\\u7c89\u8272{R}\\\\\\\u7ed3\u675f{align*}a b c d\u200b             =  x=\u2212  L=x=\u2212  R\u200b\n(\u5341)\u2212 L\uff09\uff08x\uff09\u2212 R\uff09=x+x\uff08\u2212 R\uff09+\uff08\u2212 L\uff09x+\uff08\u2212 L\uff08\u2212 R\uff09=x2+\uff08\u2212 L\u2212 R\uff09x+L R=x2\u2212 \uff08L+R\uff09x+L R\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}\uff08x-\\orange{L}\uff09\uff08x-\\pink{R}\uff09&amp\uff1b=xx+x\uff08-\\pink{R}\uff09+\uff08\\orange{L}\uff09x+\uff08\\orange{L}\uff09\uff08\\pink{R}\uff09\\&amp\uff1b=x^2+\uff08\\orange{L}-\\pink{R}\uff09x+\\orange{L}\\pink{R}\\\\\\&amp\uff1b=x^2-\uff08\\orange{L}+\\pink{R}\uff09x+\\orange{L}\\pink{R}\\end{align*}\uff08x\uff09\u2212   L\uff09\uff08x\uff09\u2212   R\uff09\u200b             =  xx+x\uff08\u2212  R\uff09+\uff08\u2212  L\uff09x+\uff08\u2212  L\uff08\u2212  R\uff09=x2+\uff08\u2212  L\u2212   R\uff09x+L R=x2\u2212  \uff08L+R\uff09x+L-R\u200b\n\u6b63\u5f53\u5f53\u76f8\u4e58\u65f6\uff0c\u8d1f\u6570\u4f1a\u62b5\u6d88\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7cfb\u6570a\u2212 x\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}-x\u2212 \u4e24\u4e2a\u4e2d\u95f4\u672f\u8bed\u4e2d\u7684x\u3002\n\u4e0d\uff0c\u6bd4\u90a3\u7b80\u5355\uff01\u65e9\u4e9b\u65f6\u5019\uff0c\u60a8\u627e\u5230\u4e86\uff08x\uff09\u7684\u89e3\u51b3\u65b9\u6848\u2212 L\uff09\uff08x\uff09\u2212 R=0\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\uff08x-\\orange{L}\uff09\uff08x-\\pink{R}\uff09=0\uff08x\u2212     L\uff09\uff08x\uff09\u2212     R=0\u662fx=L\\def\\A{\\red{A}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\orange{L}x=L\u6216x=R\\def\\A{\\red{A}\\def\\B{blue{B}\\def\\C{\\green{C}x=\\pink{R}x=R\u3002\u4f60\u53d1\u73b0\u4e86\uff08x\u2212 L\uff09\uff08x\uff09\u2212 R\uff09\\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\uff08x-\\orange{L}\uff09\uff08x-\\pink{R}\uff09\uff08x\u2212     L\uff09\uff08x\uff09\u2212     R\uff09\u53ef\u4ee5\u91cd\u65b0\u6392\u5217\u4e3ax2\u2212 \uff08L+R\uff09x+L R\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}}x^2-\uff08\\orange{L}+\\pink{R}\uff09x+\\orange{L}\\pink{R}x2\u2212    \uff08\u5de6+\u53f3\uff09x+\u53f3\u3002\u91cd\u65b0\u6392\u5217\u4e00\u4e2a\u65b9\u7a0b\u4e0d\u4f1a\u6539\u53d8\u5b83\u7684\u89e3\uff0c\u6240\u4ee5\u89e3\u4ecd\u7136\u662f\u4e00\u6837\u7684\uff1ax=L\\def\\A{\\red{A}\\def\\B{\\blue{B}\\def\\C{\\green{C}}x=\\orange{L}x=L\u6216x=R\\def\\A{\\red{A}\\def\\B{blue B{B}\\C}\\C{green{C}x=\\R}\u3002\nx2\u2212 \uff08L+R\uff09x+L R=0 L 2\u2212 \uff08L+R\uff09L+L R=0 L 2\u2212 \uff08L2+RL\uff09+LR=0L2\u2212  L2\u2212 3.R+L R+L R+L L R+L R+L R+L R+L R+R+R+R+R+L+R+R+L+R+L+L+R+R+L+R+L+R+L+L+L+L+L+R+0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0{{{B}}}.......................................................................................................................................+\\pink{R}\\orange{L}\uff09+\\orange{L}\\pink{R}=0\\\\ orange{L}^2-\\orange{L}^2-\\pink{R}\\orange{L}+\\orange{L}\\pink{R}=0\\\\0=0\\end{align*}x2\u2212  \uff08L+R\uff09x+L R=0 L 2\u2212  \uff08L+R\uff09L+L R=0 L 2\u2212  \uff08L2+RL\uff09+LR=0L2\u2212    L2\u2212   RL+LR=0 0=0\u200b\na2+bx+C=0x2\u2212 \uff08L+R\uff09x+lr=0\\def\\A{red{A}}\\def\\B{blue{B}}\\def\\C{green{C}}\\begin{align*}\\red{A}x^2+\\blue{B}x+\\green{C}=0\\\\x^2-\uff08\\orange L{L}+\\pink{R}\uff09x+\\orange L{pink{R}=0\\end{A}\u2212  \uff08L+R\uff09x+L R=0\u200b\n\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff01\u4f46\u662f\u5b83\u7684\u503c\u662f\u4ec0\u4e48\u5462\n......", "note_en": "So you need to solve         2  x 2 \u2212 3 x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2 - 3x = 2    2  x        2  \u2212    3 x  =    2  . You remember the word \u2018quadratic\u2019 and something like           4 a c \u2212  b 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\sqrt{4ac - b^2}           4 a c  \u2212   b        2      \u200b      \u2026 or was it         +  b 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}+b^2    +  b        2  ? \ud83d\ude28\n Stop trying to memorize the quadratic formula! In this interactive tutorial, you\u2019ll   rediscover   the quadratic formula with me, and you\u2019ll never have to memorize it again! \ud83d\udcaa\n  First let\u2019s remind ourselves of the problem that the quadratic formula solves. A   quadratic equation   is one that looks like this, for some particular constants         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\A     A  ,         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\B     B   and         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\C     C  :\n  For example,         2  x 2 \u2212 3 x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2 - 3x = 2    2  x        2  \u2212    3 x  =    2   is a quadratic equation. What are its values of         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\A     A  ,         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\B     B   and         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\C     C  ?\n  Careful with the minus signs. Rearrange         2  x 2 \u2212 3 x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2x^2 - 3x = 2    2  x        2  \u2212    3 x  =    2   into the form         A  x 2 + B x + C = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{A}x^2 + \\blue{B}x + \\green{C} = 0     A  x        2  +     B x  +     C  =    0  . You can do this by subtracting         2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}2    2   from both sides. You end up with         2  x 2 +  ( \u2212 3 ) x +  ( \u2212 2 ) = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{2}x^2 +\\blue{(-3)}x + \\green{(-2)} = 0     2  x        2  +     ( \u2212 3 ) x  +     ( \u2212 2 )  =    0  .\n  \u2018Solving\u2019 a quadratic equation means finding the values of         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   that make the equation equal on both sides. These special values of         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   are called the   roots   \ud83e\udd55 of the equation. Consider again our quadratic equation,         2  x 2 \u2212 3 x \u2212 2 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{2}x^2 -\\blue{3}x - \\green{2} = 0     2  x        2  \u2212     3 x  \u2212     2  =    0  . Which of these is   not   a root?\n  Actually,         x = \u2212  1 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-\\tfrac{1}{2}    x  =    \u2212           2        1 \u200b         is   a root, as you can see by plugging it into the equation:\n 2  x 2 \u2212 3 x \u2212 2     = 2 ( \u2212   1 2  ) 2 \u2212 3 ( \u2212   1 2 ) \u2212 2         = ( 2 \u00d7   1 4 ) +   3 2 \u2212 2         =   1 2 +   3 2 \u2212   4 2         =    1 + 3 \u2212 4 2         = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*} \\red{2}x^2 -\\blue{3}x - \\green{2}&amp;= \\red{2}(-\\tfrac12)^2 -\\blue{3}(-\\tfrac12) - \\green{2} \\\\&amp;= (2 \\times \\tfrac14) +\\tfrac32 - 2 \\\\&amp;= \\tfrac12+\\tfrac32 - \\tfrac42 \\\\&amp;= \\tfrac{1+3-4}2 \\\\&amp;= 0 \\\\\\end{align*}              2  x        2  \u2212   3 x  \u2212   2             \u200b             =   2 ( \u2212           2        1 \u200b      )        2  \u2212   3 ( \u2212           2        1 \u200b     )  \u2212   2      =  ( 2  \u00d7            4        1 \u200b     )  +            2        3 \u200b      \u2212  2      =            2        1 \u200b      +            2        3 \u200b      \u2212            2        4 \u200b          =            2        1 + 3 \u2212 4 \u200b          =  0 \u200b\n Actually,         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2     is   a root, as you can see by plugging it into the equation:\n 2  x 2 \u2212 3 x \u2212 2     = 2 ( 2  ) 2 \u2212 3 ( 2 ) \u2212 2         = ( 2 \u00d7 4 ) \u2212 6 \u2212 2         = 8 \u2212 8         = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*} \\red{2}x^2 -\\blue{3}x - \\green{2}&amp;= \\red{2}(2)^2 -\\blue{3}(2) - \\green{2} \\\\&amp;= (2 \\times 4) -6 - 2 \\\\&amp;= 8-8 \\\\&amp;= 0 \\\\\\end{align*}              2  x        2  \u2212   3 x  \u2212   2          \u200b             =   2 ( 2  )        2  \u2212   3 ( 2 )  \u2212   2      =  ( 2  \u00d7  4 )  \u2212  6  \u2212  2      =  8  \u2212  8      =  0 \u200b\n By plugging a value of         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   into a quadratic equation, you can quickly   check   whether that value is a root. Above, plugging in         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2   or         x = \u2212  1 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-\\tfrac12    x  =    \u2212           2        1 \u200b       gives the valid equation         0 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}0=0    0  =    0  , so they are both roots. But plugging in         x = \u2212 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-2    x  =    \u2212 2   gives the invalid equation         12 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}12=0    12  =    0  , so it is not a root.\n Unfortunately, trying random values of         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   is not an efficient way to find the roots!\n      Instead of plugging in   random   guesses, we\u2019d rather plug in   sensible   guesses. The   graph   is a helpful tool for finding sensible guesses. (Later, we\u2019ll find that the graph is helpful for deriving the quadratic formula, too!)\n Let\u2019s solve another quadratic equation:          \u2212 1  x 2  \u2212 1 x + 2 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2 \\blue{-1}x + \\green{2} = 0     \u2212 1  x        2   \u2212  1 x  +     2  =    0  . As we go, we\u2019ll plot our guesses on a graph, like this:\n  Here, we\u2019re plotting         y =  \u2212 1  x 2  \u2212 1 x + 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y = \\red{-1}x^2 \\blue{-1}x + \\green{2}    y  =     \u2212 1  x        2   \u2212  1 x  +     2  . Our goal is to find an         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x   where         y = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=0    y  =    0  , as this would solve our equation. We\u2019ve made a couple of guesses already at the         \u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\u2718}     \u2718   marks. What guesses have we made?\n  Not quite: those are the         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -values. We\u2019ve made two guesses,         x = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0    x  =    0   and         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2  , for which we calculated the         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -values         y = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=2    y  =    2   and         y = \u2212 4 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4    y  =    \u2212 4  . For         x = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0    x  =    0  , we calculated         y = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=2    y  =    2  :\n y     =  \u2212 1  x 2  \u2212 1 x + 2         =  \u2212 1 ( 0  ) 2  \u2212 1 ( 0 ) + 2         = 0 + 0 + 2         = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}y&amp;= \\red{-1}x^2 \\blue{-1}x + \\green{2} \\\\&amp;= \\red{-1}(0)^2 \\blue{-1}(0) + \\green{2} \\\\&amp;= 0 + 0 + \\green{2} \\\\&amp;= 2 \\\\\\end{align*}             y          \u200b             =   \u2212 1  x        2   \u2212  1 x  +   2      =   \u2212 1 ( 0  )        2   \u2212  1 ( 0 )  +   2      =  0  +  0  +   2      =  2 \u200b\n In the same way, for the guess         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2  , we calculated         y = \u2212 4 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4    y  =    \u2212 4  :\n y     =  \u2212 1  x 2  \u2212 1 x + 2         =  \u2212 1 ( 2  ) 2  \u2212 1 ( 2 ) + 2         = \u2212 4 \u2212 2 + 2         = \u2212 4 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}y&amp;= \\red{-1}x^2 \\blue{-1}x + \\green{2} \\\\&amp;= \\red{-1}(2)^2 \\blue{-1}(2) + \\green{2} \\\\&amp;= -4 - 2 + \\green{2} \\\\&amp;= -4 \\\\\\end{align*}             y          \u200b             =   \u2212 1  x        2   \u2212  1 x  +   2      =   \u2212 1 ( 2  )        2   \u2212  1 ( 2 )  +   2      =  \u2212 4  \u2212  2  +   2      =  \u2212 4 \u200b\n  These two guesses were unsuccessful: they did not solve the equation          \u2212 1  x 2  \u2212 1 x + 2 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2 \\blue{-1}x + \\green{2} = 0     \u2212 1  x        2   \u2212  1 x  +     2  =    0  . What would a successful guess \u2014 that is, a   root   \u2014 look like on our graph?\n  It\u2019s the other way around. The         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -axis line is the set of points where         x = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0    x  =    0  , so a         \u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\u2718}     \u2718   on the         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -axis would just be the guess         x = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=0    x  =    0  .\n We\u2019re trying to solve          \u2212 1  x 2  \u2212 1 x + 2 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{-1}x^2 \\blue{-1}x + \\green{2}=0     \u2212 1  x        2   \u2212  1 x  +     2  =    0  . We\u2019re plotting         y =  \u2212 1  x 2  \u2212 1 x + 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y = \\red{-1}x^2 \\blue{-1}x + \\green{2}    y  =     \u2212 1  x        2   \u2212  1 x  +     2  , so finding a point where         y = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=0    y  =    0   would solve our equation.\n The         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x  -axis line is the set of points where         y = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=0    y  =    0  . So all         \u2718 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\u2718}     \u2718   on the         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x  -axis are roots of our equation.\n Using the graph, our incorrect guesses can help us choose a better next guess. To see why, plot         y =  \u2212 1  x 2  \u2212 1 x + 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y = \\red{-1}x^2 \\blue{-1}x + \\green{2}    y  =     \u2212 1  x        2   \u2212  1 x  +     2   for the rest of the range         \u2212 5 \u2264 x \u2264 5 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}-5 \\leq x \\leq 5    \u2212 5  \u2264    x  \u2264    5  . Which of the following curves does it look like? (You might want to grab paper and pencil.)\n    It\u2019s not curve         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold B}     B  . Try for example         x = \u2212 3 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-3    x  =    \u2212 3  , where you should get         y = \u2212 4 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-4    y  =    \u2212 4  . This is far from the point         ( x = \u2212 3 , y = 4 ) \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x=-3,y=4)    ( x  =    \u2212 3 ,  y  =    4 )   on curve         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold B}     B  . If you plot all points correctly, you\u2019ll find they follow curve         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}     C   above.\n It\u2019s not curve         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold A}     A  . Try for example         x = 5 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=5    x  =    5  , where you should get         y = \u2212 28 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y=-28    y  =    \u2212 28  . This is far from the point         ( x = 5 , y = \u2212 3 ) \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x=5, y=-3)    ( x  =    5 ,  y  =    \u2212 3 )   on curve         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold A}     A  . If you plot all points correctly, you\u2019ll find they follow curve         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}     C   above.\n   No, that\u2019s the intersection of         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{C}     C   with the         y \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}y    y  -axis. We want the intersection of         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{C}     C   with the         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x  -axis. These intersections are at         x = \u2212 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=-2    x  =    \u2212 2   and         x = 1 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=1    x  =    1  .\n That\u2019s one root, but there\u2019s another at         ( x = \u2212 2 , y = 0 ) \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x=-2, y=0)    ( x  =    \u2212 2 ,  y  =    0 )  .\n Notice that curve         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{\\bold C}     C   follows an upside-down \u2018bowl\u2019 shape \ud83e\udd63. If you plot some more quadratics, you\u2019ll find that they all follow a similar \u2018bowl\u2019 or \u2018U\u2019 shape. It can be flipped upside down, or shifted up or to the side, or squished horizontally or vertically. But it\u2019s always a \u2018bowl\u2019 shape, called a   parabola.\n      Well done.         D \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold D}     D   could not be a quadratic, because it has an \u2018S\u2019 shape.\n A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\\bold A}     A   and         C \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\purple{\\bold C}     C   are both   parabolas   (\u2018bowl\u2019 shapes, where bowl         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{\\bold A}     A   happens to be upside-down).         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{B}     B   could also be part of a very stretched parabola. But the curve         D \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\green{\\bold D}     D   has an \u2018S\u2019 shape, so it could not be quadratic.\n Knowing that a quadratic always forms a \u2018U\u2019 shape helps us make better guesses. In the following graph of some quadratic, we\u2019ve already made three guesses:\n    No, this could not work. Only a \u2018U\u2019 shape could fit through these three points, and the only         x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x    x  -value that looks like it could work is         x = 2 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=2    x  =    2  :\n Right! Only an upwards \u2018U\u2019 shape could fit through these three points, like so:\n   So graphs help us make better guesses, but we\u2019re still just guessing. This is not efficient either! Instead, the   quadratic formula   will give us an efficient way to find   all   the roots of   any   quadratic equation.\n          This does satisfy         P \u00d7 Q = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P \\times Q=0    P  \u00d7    Q  =    0  , but there are more solutions! For example,         P = 5 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P=5    P  =    5   and         Q = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}Q=0    Q  =    0  . You can visualize all the possible solutions by writing them out in a big table:\n  The result is zero all down the         P = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}P = 0    P  =    0   column and all along the         Q = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}Q = 0    Q  =    0   row. So as long as one of the values is zero, the other can be anything.\n    As you\u2019ll discover shortly, this is a quadratic equation! But what are its solutions?\n  No, it\u2019s actually just like the last equation! We can let         P =  x \u2212 L \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{P}=\\orange{x-L}     P  =     x  \u2212  L   and         Q =  x \u2212 R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{Q}=\\pink{x-R}     Q  =     x  \u2212  R  . If         P = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{P}=0     P  =    0  , then          x \u2212 L = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{x-L}=0     x  \u2212  L  =    0  . If         Q = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{Q} = 0     Q  =    0  ,          x \u2212 R = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{x-R}=0     x  \u2212  R  =    0  .\n  You can simplify those solutions a bit. With a bit of rearranging, what do you get?\n  Be careful with the minus signs. Take         x \u2212 R = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x-\\pink{R}=0    x  \u2212     R  =    0   and add         R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\pink{R}     R   to both sides. You should get         x = R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\pink{R}    x  =     R  .\n     The equation          ( x \u2212 L )  ( x \u2212 R ) = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\orange{(x-L)}\\pink{(x-R)}=0     ( x  \u2212  L )  ( x  \u2212  R )  =    0   is actually a quadratic! You might remember how to \u2018multiply out\u2019 brackets, like this:\n    a     = x    b     = \u2212 L    c     = x    d     = \u2212 R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}a &amp;= x \\\\b &amp;= -\\orange{L} \\\\c &amp;= x \\\\d &amp;= -\\pink{R} \\\\\\end{align*}             a    b    c    d \u200b             =  x      =  \u2212  L      =  x      =  \u2212  R \u200b\n  ( x \u2212 L ) ( x \u2212 R )     = x x + x ( \u2212 R ) + ( \u2212 L ) x + ( \u2212 L ) ( \u2212 R )         =  x 2 + ( \u2212 L \u2212 R ) x + L R         =  x 2 \u2212 ( L + R ) x + L R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}(x-\\orange{L})(x-\\pink{R}) &amp;= xx + x(-\\pink{R}) + (-\\orange{L})x + (-\\orange{L})(-\\pink{R}) \\\\&amp;= x^2 +(-\\orange{L} -\\pink{R})x + \\orange{L}\\pink{R} \\\\&amp;= x^2 -(\\orange{L}+\\pink{R})x + \\orange{L}\\pink{R}\\end{align*}             ( x  \u2212   L ) ( x  \u2212   R )       \u200b             =  xx  +  x ( \u2212  R )  +  ( \u2212  L ) x  +  ( \u2212  L ) ( \u2212  R )      =   x        2  +  ( \u2212  L  \u2212   R ) x  +   L  R      =   x        2  \u2212  (  L  +   R ) x  +   L  R \u200b\n Right. The negatives cancel when multiplying, and we can factor a         \u2212 x \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}-x    \u2212 x   out of the two middle terms.\n     No, it\u2019s simpler than that! Earlier you found the solutions to         ( x \u2212 L ) ( x \u2212 R ) = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x-\\orange{L})(x-\\pink{R})=0    ( x  \u2212     L ) ( x  \u2212     R )  =    0   are         x = L \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\orange{L}    x  =     L   or         x = R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\pink{R}    x  =     R  . And you found that         ( x \u2212 L ) ( x \u2212 R ) \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}(x-\\orange{L})(x-\\pink{R})    ( x  \u2212     L ) ( x  \u2212     R )   can be rearranged as          x 2 \u2212 ( L + R ) x + L R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x^2-(\\orange{L}+\\pink{R})x+\\orange{L}\\pink{R}     x        2  \u2212    (  L  +     R ) x  +     L  R  . Rearranging an equation doesn\u2019t change its solutions, so the solutions are still the same:         x = L \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\orange{L}    x  =     L   or         x = R \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}x=\\pink{R}    x  =     R  .\n  x 2 \u2212 ( L + R ) x + L R = 0      L 2 \u2212 ( L + R ) L + L R = 0      L 2 \u2212 (  L 2 + R L ) + L R = 0      L 2 \u2212  L 2 \u2212 R L + L R = 0     0 = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}x^2-(\\orange{L}+\\pink{R})x+\\orange{L}\\pink{R} = 0 \\\\\\orange{L}^2-(\\orange{L}+\\pink{R})\\orange{L}+\\orange{L}\\pink{R} = 0 \\\\\\orange{L}^2-(\\orange{L}^2+\\pink{R}\\orange{L})+\\orange{L}\\pink{R} = 0 \\\\\\orange{L}^2-\\orange{L}^2-\\pink{R}\\orange{L}+\\orange{L}\\pink{R} = 0 \\\\0 = 0\\end{align*}              x        2  \u2212  (  L  +   R ) x  +   L  R  =  0      L        2  \u2212  (  L  +   R )  L  +   L  R  =  0      L        2  \u2212  (   L        2  +   R  L )  +   L  R  =  0      L        2  \u2212    L        2  \u2212   R  L  +   L  R  =  0    0  =  0 \u200b\n   A  x 2 + B x + C = 0      x 2 \u2212 ( L + R ) x + L R = 0 \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\begin{align*}\\red{A}x^2 + \\blue{B}x + \\green{C} = 0 \\\\x^2-(\\orange{L}+\\pink{R})x+\\orange{L}\\pink{R} = 0\\end{align*}              A  x        2  +   B x  +   C  =  0     x        2  \u2212  (  L  +   R ) x  +   L  R  =  0 \u200b\n Yes, it\u2019s a quadratic equation! But what are its values of         A \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\red{A}     A  ,         B \\def\\A{\\red{A}}\\def\\B{\\blue{B}}\\def\\C{\\green{C}}\\blue{B}     B  \n......", "posttime": "2022-02-25 22:37:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u516c\u5f0f,quadratic,def", "title": "\u4e8c\u6b21\u516c\u5f0f", "title_en": "The Quadratic Formula", "transed": 1, "url": "https://tigyog.app/lessons/d1aswpgezqw6/r/the-quadratic-formula-a-tutorial", "via": "", "real_tags": ["\u516c\u5f0f", "quadratic", "def"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1075000, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6709\u65f6\u548c\u6211\u7684\u52a9\u7406\u7c73\u5170\u00b7\u5f7c\u5f97\u7f57\u7ef4\u5947\u5f00\u73a9\u7b11\u8bf4\uff0c\u4ed6\u4f7f\u7528RAR\u5e76\u4e0d\u610f\u5473\u7740\u4ed6\u5c06\u9a7e\u9a76rari\u3002\u6bd5\u7adf\uff0c\u4ed6\u4e0d\u559c\u6b22\u8bf4\u5531\ud83d\ude24. \u9664\u4e86\u7b11\u8bdd\uff0c\u5982\u679c\u4f60\u641c\u7d22&#34\uff1b\u6211\u5e94\u8be5\u4f7f\u7528RAR&#34\uff1b\u6216\u8005\u4f60\u6700\u559c\u6b22\u7684\u641c\u7d22\u5f15\u64ce\u4e0a\u7684\u7c7b\u4f3c\u77ed\u8bed\uff0c\u4f60&#39\uff1b\u6211\u4f1a\u770b\u5230\u50cf2007\u5e74\u5510&#39\uff1bt\u4f7f\u7528ZIP\uff0c\u4f7f\u7528RAR\u548c2011\u4e3a\u4ec0\u4e48RAR\u6bd4ZIP&amp\uff1b\u6700\u597d\u7684RAR\u8f6f\u4ef6\u3002\n\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u5e94\u8be5&#39\uff1b\u6211\u4eec\u4e0d\u80fd\u7528RAR\u5417\uff1fKyle Cordes\u57282007\u5e74\u7684\u535a\u5ba2\u6587\u7ae0\u300a\u4e3a\u4ec0\u4e48\u6211\u4e0d\u4f7f\u7528RAR\u300b\u4e2d\u5df2\u7ecf\u63d0\u5230\u4e86\u975e\u514d\u8d39\u8bb8\u53ef\u548c\u4ee5Windows\u4e3a\u4e2d\u5fc3\u7684\u65b9\u9762\u3002\u8fd9\u4e9b\u539f\u56e0\u4ecd\u7136\u76f8\u5173\uff1brar\u548cUNRR\u7684\u5b98\u65b9\u7248\u672c\u4ecd\u7136\u662f\u975e\u514d\u8d39\u7684\u3002\u6709\u4e00\u4e2a\u975e\u5b98\u65b9\u7684UNRR\u662f\u514d\u8d39\u7684\u5f00\u6e90\u8f6f\u4ef6\uff0c\u4f46\u6ca1\u6709\u514d\u8d39\u7684\u5f00\u6e90rar\uff0c\u56e0\u4e3arar\u8bb8\u53ef\u8bc1\u7981\u6b62\u521b\u5efa\u4e00\u4e2a\u3002\n\u8ba9&#39\uff1b\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u8fc7\u53bb15\u5e74\u4e2d\u7684\u65b0\u60c5\u51b5\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4f7f\u7528RAR\u800c\u4e0d\u662f\u5f00\u653e\u5f52\u6863\u548c\u538b\u7f29\u683c\u5f0f\u7684\u89c2\u70b9\u65e9\u5df2\u8fc7\u65f6\u3002\n\u9996\u5148\uff0c7-Zip\u5b9e\u73b0\u4e86\u66f4\u597d\u7684\u538b\u7f29\u6bd4\uff0c\u4f46\u538b\u7f29\u901f\u5ea6\u6bd4RAR\u6162\u5f97\u591a\u3002\u7136\u800c\uff0c\u81ea2013\u5e74\u4ee5\u6765\uff0c\u8c37\u6b4c&#39\uff1bs Brotli\u548c\u81ea2015\u5e74\u4ee5\u6765\u7684Facebook&#39\uff1bszstandard\uff08Zstd\uff09\u662f\u4e24\u4e2a\u5f88\u597d\u7684\u6587\u4ef6\u538b\u7f29\u9009\u9879\u3002\u9664\u4e86\u6587\u4ef6\u538b\u7f29\uff0cBrotli\u5728HTTP\u538b\u7f29\u4e2d\u5f97\u5230\u4e86\u5f88\u597d\u7684\u652f\u6301\uff0c\u800cZstd\u5728OpenZFS\u4e2d\u4f7f\u7528\u3002\u5b83\u4eec\u5728\u901f\u5ea6\u548c\u5927\u5c0f\u65b9\u9762\u4e5f\u4e0eRAR\u76f8\u5f53\u6709\u7ade\u4e89\u529b\uff1aRAR\u5728100\u79d2\u5185\u5c06\u6587\u4ef6\u538b\u7f29\u5230318 MB\uff0cBrotli\u572852.3\u79d2\u5185\u83b7\u5f97322 MB\uff0c\u800cZstd\u572863\u79d2\u5185\u83b7\u5f97321 MB\uff08\u4f7f\u7528128 MB\u7a97\u53e3\u5927\u5c0f\u65f6\uff09\u3002\n\u6b64\u5916\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u968f\u7740\u5e26\u5bbd\u7684\u589e\u52a0\u548c\u5feb\u901f\u589e\u52a0\uff0c\u4ea7\u751f\u7684\u6587\u4ef6\u5927\u5c0f\u7684\u5fae\u5c0f\u5dee\u5f02\u65e0\u5173\u7d27\u8981\u3002\n\u6700\u540e\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u559c\u6b22CLI\u7684\u4eba\u6765\u8bf4\uff0cPeaZip\u662f\u4e00\u6b3e\u5916\u89c2\u4e0d\u9519\u7684\u57fa\u4e8eGUI\u7684\u8de8\u5e73\u53f0archiver\uff0c\u7531GNU LGPLv3\u6388\u6743\u3002\u60f3\u4e00\u60f37-Zip\uff0c\u4f46\u662f\u6709\u66f4\u597d\u7684\u56fe\u6807\u548c\u5bf9Brotli\u548cZstd\u7684\u652f\u6301\u3002", "note_en": "I sometimes joke with my TA  Milan Petrovi\u0107 that his usage of RAR does not imply that he will be driving a  rari. After all, he is not  Devito rapping^Wsinging Uh \ud83d\ude24. Jokes aside, if you search for &#34;should I use RAR&#34; or a similar phrase on your favorite search engine, you&#39;ll see articles like 2007  Don&#39;t Use ZIP, Use RAR and 2011  Why RAR Is Better Than ZIP &amp; The Best RAR Software Available.\n So, why shouldn&#39;t we use RAR? The non-free license and Windows-centric aspects have already been addressed by  Kyle Cordes in the 2007 blog post  Why I do not use RAR. These reasons are still relevant; the  official versions of  rar and  unrar are still non-free. There is an  unofficial unrar that is free and open-source software, but there is  no free and open-source rar as creating one is prohibited by the  RAR license.\n Let&#39;s address what else is new in the last 15 years and why the arguments for using RAR over open archiving and compression formats are long obsolete.\n First off,  7-Zip achieves a better compression ratio, but it is much slower to compress than RAR. However, since 2013  Google&#39;s Brotli and since 2015  Facebook&#39;s Zstandard (Zstd) are two good options for file compression. Aside from the file compression,  Brotli is well-supported in HTTP compression and  Zstd is used in OpenZFS. They are  quite competitive against RAR in terms of speed and size too: where RAR compresses a file to 318 MB in 100 seconds, Brotli gets 322 MB in 52.3 s, while Zstd gets 321 MB in 63 s (when 128 MB window size is used).\n Furthermore, the small differences in the resulting file size matter less over time as bandwidth is  increasing and increasing fast.\n Finally, for those who dislike CLI,  PeaZip is a good-looking  cross-platform  GUI-based  archiver  licensed under GNU LGPLv3. Think 7-Zip, but with nicer icons and support for Brotli and Zstd.", "posttime": "2022-02-25 22:35:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "don,rar", "title": "\u4e0d\u8981\u4f7f\u7528RAR", "title_en": "Don't Use RAR", "transed": 1, "url": "https://group.miletic.net/en/blog/2022-02-24-dont-use-rar/", "via": "", "real_tags": ["don", "rar"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074999, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5bf9\u4e8e\u4efb\u4f55\u5b58\u50a8\u6570\u636e\u7684\u4eba\u6765\u8bf4\uff0c\u521b\u5efa\u5907\u4efd\u90fd\u662f\u4e00\u9879\u57fa\u672c\u9700\u8981\u3002\u5728\u4e13\u7528\u670d\u52a1\u5668\u3001Linux\u64cd\u4f5c\u7cfb\u7edf\u548crsync\u8f6f\u4ef6\u7684\u5e2e\u52a9\u4e0b\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7SSH\u8fde\u63a5\u5b89\u5168\u9ad8\u6548\u5730\u4ece\u4efb\u4f55\u8ba1\u7b97\u673a\u68c0\u7d22\u6570\u636e\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5728\u5907\u4efd\u4e2d\u3002\u53e6\u4e00\u8fb9\u662f\u53e6\u4e00\u53f0Linux\u670d\u52a1\u5668\u3001Mac\u7535\u8111\u8fd8\u662fWindows\u7535\u8111\u90fd\u65e0\u5173\u7d27\u8981\u3002\u4f46\u662f\u4e00\u65e6\u4f60\u6709\u4e86\u8d85\u8fc7\u51e0\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u4f60\u5c31\u5fc5\u987b\u7cbe\u786e\u5730\u63a7\u5236\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u8be5\u811a\u672c\u5305\u542b\u4e00\u4e9b\u91cd\u8981\u5143\u7d20\uff0c\u5728\u5904\u7406\u5927\u91cf\u6570\u636e\u548c\u6162\u901f\u4e92\u8054\u7f51\u7ebf\u8def\u65f6\uff0c\u8fd9\u4e9b\u5143\u7d20\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\n\u5b83\u533a\u5206\u4e86TOSSH\u548cssh\uff0c\u5373\u670d\u52a1\u5668\u662f\u5426\u83b7\u53d6\u67d0\u4e9b\u5185\u5bb9\uff0c\u6216\u8005\u662f\u5426\u5c06\u67d0\u4e9b\u5185\u5bb9\u63a8\u9001\u5230\u5907\u4efd\u670d\u52a1\u5668\uff08TOSSH\uff09\u3002\u5982\u679c\u662fFROMSSH\uff0c\u5219\u8ba1\u7b97\u673a\u4e0a\u6ca1\u6709\u8981\u5907\u4efd\u7684\u8bbf\u95ee\u6570\u636e\u3002\u5230\u5907\u4efd\u7684\u8fde\u63a5\u51ed\u636e\u59cb\u7ec8\u662f\u52a0\u5bc6\u7279\u6d1b\u4f0a\u6728\u9a6c\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\uff0c\u56e0\u6b64\u5907\u4efd\u670d\u52a1\u5668\u6700\u597d\u81ea\u5df1\u83b7\u53d6\u6570\u636e\uff0c\u5373\u5b83\u662f\u8fde\u63a5\u5230\u8981\u5907\u4efd\u7684\u8ba1\u7b97\u673a\u7684\u51ed\u636e-&gt\uff1bfromsh\n\u5b83\u533a\u5206\u4e86\u7528\u6bcf\u4e2a\u6708\u7684\u5929\u6570\u8986\u76d6\u6587\u4ef6\u5939\uff0c\u6216\u521b\u5efa\u4ee5\u5b8c\u6574\u65e5\u671f\u4e3a\u540d\u79f0\u7684\u65b0\u6587\u4ef6\u5939-&gt\uff1b\u8499\u7279\u7f57\u5854\u7279\n\u5b83\u53ef\u4ee5\u68c0\u67e5\u8981\u5907\u4efd\u7684\u5377\u662f\u5426\u901a\u8fc7USB\u8fde\u63a5\u5230\u8ba1\u7b97\u673a-&gt\uff1bMOUNTPOINT\uff08\u6211\u4e0d\u4f7f\u7528\u8fd9\u4e2a\u3002\uff09\n\u5b83\u53ef\u4ee5\u901a\u8fc7\u5907\u4efd\u8fc7\u7a0b\u7684\u65e5\u5fd7\u542f\u52a8\u90ae\u4ef6\u53d1\u9001\u3002\n\u5b83\u53ef\u4ee5\u5220\u9664\u6e90\u548c\u5907\u4efd\u4e2d\u4e0d\u518d\u5b58\u5728\u7684\u6587\u4ef6\u3002\n\u4f7f\u7528\u5b58\u50a8\u7684\u5bc6\u94a5\uff08\u4f7f\u7528SSH\u5bc6\u94a5\uff0c\u800c\u4e0d\u662f\u5bc6\u7801\uff01\uff09\u5907\u4efd\u670d\u52a1\u5668\u901a\u8fc7SSH\uff08\u4eceSSH\uff09\u62e8\u53f7\u8981\u5907\u4efd\u7684\u8ba1\u7b97\u673a\u3002\u5728\u90a3\u91cc\uff0c\u5b83\u5c06\u8981\u5907\u4efd\u7684\u5377\u4e0a\u7684\u6587\u4ef6\u4e0e\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u7684\u6587\u4ef6\u5939\u4e2d\u7684\u6587\u4ef6\u8fdb\u884c\u6bd4\u8f83\uff0c\u8be5\u6587\u4ef6\u5939\u540d\u4e3a\u201clast\u201d\u3002\u7136\u540e\u6839\u636e\u5f53\u5929\u7684\u7f16\u53f7\uff08\u4f8b\u5982\u201c02\u201d\uff09\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\uff0c\u6240\u6709\u65b0\u7684\u6216\u66f4\u6539\u7684\u6587\u4ef6\u90fd\u5b58\u50a8\u5728\u5176\u4e2d\u3002\u5728\u5df2\u7ecf\u5b58\u5728\u7684\u6587\u4ef6\u4e0a\uff0c\u5728\u65b0\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u786c\u94fe\u63a5\uff0c\u4ee5\u4fbf\u8fd9\u4e9b\u6587\u4ef6\u90fd\u201c\u5b58\u5728\u201d\u5728\u65b0\u6587\u4ef6\u5939\u4e2d\u3002\u5220\u9664\u7684\u6587\u4ef6\u4e0d\u4f1a\u83b7\u5f97\u786c\u94fe\u63a5\u3002\u5982\u679c\u4e00\u5207\u5c31\u7eea\uff0c\u5219\u7b26\u53f7\u201clast\u201d\u73b0\u5728\u6307\u5411\u65b0\u6587\u4ef6\u5939\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u6708\u91cc\uff0c\u53ea\u9700\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u5939\uff08MONTHROTATE\uff09\u8986\u76d6\u5177\u6709\u76f8\u540c\u65e5\u6570\u7684\u65e7\u6587\u4ef6\u5939\u3002\u65e5\u671f\u548c\u6bcf\u4e2a\u4f20\u8f93\u7684\u6587\u4ef6\u90fd\u4f1a\u5199\u5165\u65e5\u5fd7\uff0c\u65e5\u5fd7\u4f1a\u4f5c\u4e3a\u989d\u5916\u6587\u4ef6\u521b\u5efa\uff0c\u6bcf\u6b21\u90fd\u4f1a\u88ab\u8986\u76d6\u3002\u6700\u540e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5c06\u4f5c\u4e3a\u90ae\u4ef6\u53d1\u9001\u3002\u5907\u4efd\u811a\u672c\u6bcf\u5929\u901a\u8fc7\u7279\u6b8a\u5907\u4efd\u7528\u6237\uff08\u6ca1\u6709sudo\u6743\u9650\uff09\u7684crontab\u542f\u52a8\u3002\n\u5982\u679crsync\u8fdb\u7a0b\u8017\u65f6\u8d85\u8fc724\u5c0f\u65f6\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8fdb\u7a0b\u4f1a\u91cd\u53e0\u548c\u7d2f\u79ef\uff08\u65b0\u8fdb\u7a0b\u542f\u52a8\u65f6\uff0c\u65e7\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\uff09\uff0c\u76f8\u4e92\u963b\u585e\uff0c\u4ec0\u4e48\u90fd\u4e0d\u8d77\u4f5c\u7528-&gt\uff1b\u56e0\u6b64\uff0c\u65b0\u6d41\u7a0b\u53ea\u6709\u5728\u524d\u4e00\u4e2a\u6d41\u7a0b\u5b8c\u6210\u540e\u624d\u80fd\u542f\u52a8\u3002\n\u5728\u5305\u542b\u8bb8\u591a\u6587\u4ef6\u7684\u5927\u5bb9\u91cf\u4e2d\uff0c\u65e5\u5fd7\u6587\u4ef6\u53d8\u5f97\u592a\u957f\uff0c\u65e0\u6cd5\u518d\u653e\u5165\u7535\u5b50\u90ae\u4ef6\u4e2d\uff0c\u56e0\u6b64\u7535\u5b50\u90ae\u4ef6\u5c06\u4e0d\u518d\u53d1\u9001-&gt\uff1b\u5bf9\u4e8e\u5927\u5bb9\u91cf\uff0c\u53ea\u5e94\u8bb0\u5f55\u9519\u8bef\u3002\n\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5219\u4ecd\u4f1a\u521b\u5efa\u6307\u5411\u65b0\u521b\u5efa\u6587\u4ef6\u5939\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u5f53\u524d\u6807\u8bb0\u4e3aname\u3002\u8fd9\u5bfc\u81f4\u4e0b\u4e00\u6b21\u5907\u4efd\u65f6\uff0c\u5b8c\u6574\u5907\u4efd\u4f1a\u518d\u6b21\u4f20\u8f93\u3002\u5bf9\u4e8e\u6570TB\u7684\u6570\u636e\uff0c\u901a\u8fc7\u4e92\u8054\u7f51\u4f20\u8f93\u6570\u636e\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u6708\u7684\u65f6\u95f4-&gt\uff1b\u53ea\u6709\u5728\u4e4b\u524d\u6ca1\u6709\u9519\u8bef\u65f6\u624d\u66f4\u6539\u7b26\u53f7\u94fe\u63a5\uff0c\u5426\u5219\u5c06\u7b26\u53f7\u94fe\u63a5\u4fdd\u7559\u5230\u6b63\u5e38\u6587\u4ef6\u5939\uff0c\u76f4\u5230\u518d\u6b21\u8fdb\u884c\u65e0\u9519\u8bef\u5907\u4efd\u3002\u7f3a\u70b9\uff1a\u5373\u4f7f\u624b\u52a8\u542f\u52a8\u811a\u672c\uff0c\u4e5f\u4e0d\u53ef\u80fd\u5728\u540c\u4e00\u5929\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5907\u4efd\u3002\n\u5907\u4efd\u670d\u52a1\u5668\u53ea\u9700\u8981\u5f88\u77ed\u7684\u65f6\u95f4\uff0c\u4f46\u53ef\u4ee5\u8fd0\u884c\u4e00\u6574\u5929-&gt\uff1b\u540c\u65f6\u4f7f\u7528\u5355\u72ec\u7684\u811a\u672c\u5173\u95ed\u670d\u52a1\u5668\uff0c\u4f46\u524d\u63d0\u662f\u5f53\u524d\u6ca1\u6709\u8fd0\u884c\u5907\u4efd\uff0c\u6216\u8005\u5f53\u524d\u6709\u4eba\u901a\u8fc7SSH\u767b\u5f55\u3002\u5c06\u6b64\u4efb\u52a1\u4e0e\u5907\u4efd\u7528\u6237\u5206\u5f00\uff0c\u5e76\u901a\u8fc7\u7ba1\u7406\u7528\u6237\u6216central/etc/crontab\u6267\u884c\uff0c\u56e0\u4e3a\u8fd9\u9700\u8981\u6839\u6743\u9650\u3002\uff08\u8fd9\u4e0d\u662f\u672c\u535a\u5ba2\u7684\u4e00\u90e8\u5206\u3002\uff09\n\u4e3a\u4e86\u4fdd\u6301\u8ddf\u8e2a\uff0c\u4e00\u4e2a\u6587\u4ef6\u5b58\u50a8\u6240\u6709\u65e5\u5fd7\u6761\u76ee\uff0c\u4e00\u4e2a\u63a5\u4e00\u4e2a\uff0c\u6bcf\u4e2a\u6761\u76ee\u53ea\u6709\u51e0\u884c-&gt\uff1b\u6240\u6709\u65e5\u5fd7\n#!/bin/bash#\u907f\u514d\u4e0e\u5176\u4ed6rsync\u8fdb\u7a0b\u53d1\u751f\u51b2\u7a81#\u4f20\u9012\u7ed9\u811a\u672c\u7684\u5206\u949f\u6570#21h*60min=1260\u5206\u949f\u5206\u949f\u5206\u949f=1260#\u786e\u4fdd\u6ca1\u6709\u5176\u4ed6\u4eba\u5728\u4f7f\u7528rsync#on=$\uff08ps aux | grep-c rsync\uff09#\u5982\u679c\u6709\u4eba\u5728\u4f7f\u7528rsync#grep\u4e5f\u5728\u751f\u6210\u4e00\u4e2a\u6761\u76eeso-gt 1\u800c[$pro u on-gt 1]do sleep 60\u5206\u949f=$\uff08$minutes-1\uff09\uff09#\u5982\u679c[$minutes-lt 60]\uff0c\u5219\u7b2c\u4e8c\u5929\u65e0\u9700\u5f00\u59cb\uff1b\u7136\u540e\u9000\u51fa0 fi pro_on=$\uff08ps aux | grep-c rsync\uff09\u5b8c\u6210\n\u8fd9\u662f\u68c0\u67e5\u5176\u4ed6rsync\u8fdb\u7a0b\u662f\u5426\u6b63\u5728\u8fd0\u884c\u7684\u5757\u3002\u5b83\u6539\u7f16\u81ea\u4ee5\u4e0b\u4ee3\u7801\u201c\u8ba9\u60a8\u7684\u670d\u52a1\u5668\u6253\u76f9\u201d\uff1a\n\u5728\u7b2c\u4e00\u884c\u4e2d\uff0c\u4f60\u8bf4\u201cbash\u201d\u5e94\u8be5\u88ab\u59d4\u6258\u6267\u884c\u3002\n\u201c\u5206\u949f=1260\u201d\u610f\u5473\u7740\u8be5\u811a\u672c\u542f\u52a8\u7684\u5ef6\u8fdf\u65f6\u95f4\u6700\u591a\u5e94\u4e3a21\u5c0f\u65f6\u3002\u6b64\u540e\uff0c\u811a\u672c\u5c06\u4e0d\u4f1a\u6267\u884c\uff0c\u56e0\u4e3acron\u8fdb\u7a0b\u5c06\u5728\u4e0b\u4e00\u8f6e\u5907\u4efd\u4e2d\u542f\u52a8\u3002\n\u201cpro_on=$\uff08ps aux | grep-c rsync\uff09\u201d\uff0c\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u8fd9\u91cc\u662f\u201crsync\u201d\uff0cgrep\u547d\u4ee4\u672c\u8eab\u4e5f\u4f1a\u5728\u670d\u52a1\u5668\u4e0a\u751f\u6210\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u60a8\u5fc5\u987b\u4f7f\u7528\u201c\u5927\u4e8e1\u201d\u5373\u201c\u5927\u4e8e1\u201d\u7684\u539f\u56e0\u3002\n\u4e4b\u540e\uff0c\u5b83\u8fdb\u5165\u4e00\u4e2awhile\u5faa\u73af\uff0c\u6bcf\u8f6e\u4ee5\u201csleep 60\u201d\u4f11\u7720\u4e00\u5206\u949f\uff0c\u7136\u540e\u68c0\u67e5\u662f\u5426\u4ecd\u6709\u591a\u4e2agrep rsync\u8fdb\u7a0b\u5728\u8fd0\u884c\u3002\u7136\u540e\uff0c\u5206\u949f\u603b\u662f\u63091\u5012\u8ba1\u65f6\uff0c\u5982\u679c\u572821\u5c0f\u65f6\u7ed3\u675f\u4e4b\u524d\uff0c\u65f6\u95f4\u4e0d\u8db360\u5206\u949f\uff0c\u5219\u4e0d\u518d\u503c\u5f97\u8fd0\u884c\u811a\u672c\uff0c\u201c\u9000\u51fa0\u201d\u4e2d\u6b62\u3002\u4e4b\u540e\uff0ccron\u5c06\u5728\u7b2c\u4e8c\u5929\u7684\u5e38\u89c4\u65f6\u95f4\u91cd\u8bd5\u3002\u5f53\u53e6\u4e00\u4e2arsync\u8fdb\u7a0b\u9700\u8981\u8d85\u8fc720\u5c0f\u65f6\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\n#\u4f7f\u7528rsync#\u672c\u5730\u6a21\u5f0f\u3001tossh\u6a21\u5f0f\u3001fromsh modeSOURCES=\uff08/Volumes/my#u volume/\uff09TARGET=&#34\u8fdb\u884c\u7b80\u5355\u5907\u4efd/srv/\u5907\u4efd\u5377&#34\uff1b#\u7528&#34\u7f16\u8f91\u6216\u8bc4\u8bba#&#34;MONTHROTATE=MONTHROTATE#\u4f7f\u7528DD\u800c\u4e0d\u662fyymmdrsyncconf=\uff08-delete--exclude=/Volumes/Raid/.DocumentRevisions-V100--exclude=/Volumes/Raid/.temporary items--exclude=/Volumes/Raid/.apdisc\uff09MAILREC=&#34\uff1b\u6211\u7684\u5bb6_mail@something.de&#34;SSHUSER=&#34\uff1blinux#U\u5907\u4efd\u7528\u6237&#34\uff1bfromsh=&#34\uff1blinux_backupuser@999.888.777.666&#34;#\u6258\u4ec0=&#34\uff1btossh\u670d\u52a1\u5668&#34\uff1bSSHPORT=22222\u652f\u67b6=34/\u5783\u573e\u7bb1/\u5c71&#34\uff1b\uff1bFGREP=&#34/bin/fgrep&#34\uff1b\uff1bSSH=&#34/usr/bin/ssh&#34\uff1bLN=&#34/\u5783\u573e\u7bb1/\u5783\u573e\u7bb1&#34\uff1b\uff1bECHO=&#34/bin/echo&#34\uff1b\uff1b\u65e5\u671f=&#34/\u94f6\u884c\u6807\u8bc6\u4ee3\u7801/\u65e5\u671f&#34\uff1b\uff1bRM=&#34/\u5783\u573e\u7bb1/rm&#34\uff1bDPKG=#34/usr/bin/dpkg&#34\uff1b\uff1bAWK=&#34/usr/bin/awk&#34\uff1b\uff1b\u90ae\u4ef6=&#34/usr/bin/mail&#34\uff1b\u5207\u5272=\u548c#34/usr/bin/cut&#34\uff1b\uff1bTR=&#34/usr/bin/tr&#34\uff1b\uff1bRSYNC=&#34/usr/bin/rsync&#34\uff1bLAST=&#34\uff1b\u6700\u540e&#34\uff1b\uff1bINC=&#34--link dest=$TARGET/$LAST&#34\uff1b\uff1bLS=&#34/\u5783\u573e\u7bb1/\u5783\u573e\u7bb1\u548c#34\uff1b\n\u6e90\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6e90\uff0c\u7531\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\u3002SOURCES\u5728\u672b\u5c3e\u6709\u4e00\u4e2a\u659c\u6760\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6bcf\u6b21\u751f\u6210\u6587\u4ef6\u5939/user/Volumes/Data_\u6587\u4ef6\u5939\u3002\n\u6e90\u5982\u679c\u6e90\u6587\u4ef6\u672b\u5c3e\u6709\u4e00\u4e2a\u201c/\u201d\uff0c\u5219\u53ea\u590d\u5236\u5185\u5bb9\uff0c\u800c\u4e0d\u590d\u5236\u6700\u540e\u6307\u5b9a\u7684\u6587\u4ef6\u5939\u3002\nSOURCES\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u7a0d\u540e\u5c06\u4f7f\u7528${SOURCES[@]}\u8bbf\u95ee\u5b83\u3002\u53ef\u4ee5\u7528\u7a7a\u683c\u5206\u9694\u591a\u4e2a\u6e90\u3002\u7136\u540e\uff0c\u65e5\u5fd7\u4e2d\u4f1a\u6709\u5355\u72ec\u7684\u8f93\u51fa\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6e90\u90fd\u4f1a\u5904\u7406\u4e00\u4e2a\u201cdo\u5faa\u73af\u201d\u3002\n\u76ee\u6807\u7684\u672b\u5c3e\u6ca1\u6709\u659c\u6760\uff0c\u5982\u679c\u7f3a\u5c11\u659c\u6760\uff0c\u5c06\u5728\u4ee5\u540e\u81ea\u52a8\u6dfb\u52a0\u659c\u6760\u3002\n\u201c\u5220\u9664\u201d\u8868\u793a\u5728\u6e90\u6587\u4ef6\u4e2d\u5220\u9664\u7684\u6587\u4ef6\u4e5f\u5728\u76ee\u6807\u6587\u4ef6\u4e2d\u5220\u9664\u3002\u4e00\u4e9b\u70b9\u6587\u4ef6\uff08.file\uff09\u6709\u65f6\uff0c\u4ece\u6e90\u5934\u4e0a\u63d0\u51fa\u9605\u8bfb\u95ee\u9898\uff0c\u4ee5\u4fbf\u6700\u597d\u5c06\u5176\u6392\u9664\u5728\u5916\u3002\u95ee\u9898\u662f\uff0c\u5b83\u4eec\u5728\u8bfb\u53d6\u8981\u590d\u5236\u7684\u6587\u4ef6\u548c\u590d\u5236\u8fc7\u7a0b\u4e4b\u95f4\u53d1\u751f\u53d8\u5316\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u9519\u8bef\u3002\u7531\u4e8eRSYNCCONF\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u653e\u7f6e\u66f4\u591arsyn\u6807\u5fd7\u3002\n\u7531\u4e8e\u5728\u4e00\u4e2a\u6708\u5185\uff0c\u603b\u662f\u5c06\u65e5\u671f\u6307\u5b9a\u4e3a\u6587\u4ef6\u5939\uff0c\u56e0\u6b64\u5728\u4e0b\u4e2a\u6708\u7684\u7b2c4\u5929\uff0c\u5e26\u6709\u65e5\u671f\u7f16\u53f7\uff08\u4f8b\u5982\u201c04\u201d\uff09\u7684\u76f8\u5e94\u6587\u4ef6\u5939\u5c06\u518d\u6b21\u88ab\u8986\u76d6\u3002\u5982\u679c\u4e0d\u9002\u7528\uff0c\u5219\u53ef\u4ee5\u5bf9\u5e26\u6709\u5b8c\u6574\u65e5\u671f\u7684\u6587\u4ef6\u5939\u4f7f\u7528\u8f83\u957f\u7684\u65e5\u671f\u3002\u60a8\u6bcf\u5929\u90fd\u4f1a\u6536\u5230\u4e00\u4e2a\u65b0\u6587\u4ef6\u5939\uff0c\u7136\u540e\u5e94\u4e0d\u65f6\u5220\u9664\u65e7\u6587\u4ef6\u5939\u3002\n\u5220\u9664\u4f3c\u4e4e\u4e0d\u4f1a\u5220\u9664\u4ecd\u7136\u9700\u8981\u7684\u6587\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u786c\u94fe\u63a5\u3002\u8fd9\u4e9b\u94fe\u63a5\u53ef\u4ee5\u662f\u6307\u5411\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u4e2a\u94fe\u63a5\uff0c\u53ea\u8981\u786c\u94fe\u63a5\u4ecd\u7136\u5b58\u5728\uff08\u6765\u81ea\u53e6\u4e00\u4e2aday\u6587\u4ef6\u5939\uff09\uff0c\u6587\u4ef6\u5c31\u4e0d\u4f1a\u88ab\u5220\u9664\u3002\u65b0\u7684\u5907\u4efd\u5c06\u751f\u6210\u53e6\u4e00\u4e2a\u6307\u5411\u8be5\u6587\u4ef6\u7684\u65b0\u786c\u94fe\u63a5\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5982\u679c\u4f60\u8df3\u8fc7\u4e00\u5929\u4f3c\u4e4e\u4e0d\u6210\u95ee\u9898\u7684\u539f\u56e0\u3002\uff08\u81f3\u5c11\u6211\u662f\u8fd9\u6837\u7406\u89e3\u7684\uff0c\u4f46\u5728Linux\u201cls-la\u201d\u8f93\u51fa\u4e2d\uff0c\u6ca1\u6709\u770b\u5230\u8d85\u8fc7\u4e00\u4e2a\u786c\u94fe\u63a5\uff09\u3002\n\u4e3a\u4e86\u8ddf\u8e2a\u5e8f\u5217\uff0c\u6211\u5728\u811a\u672c\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u201c\u6240\u6709\u65e5\u5fd7\u201d\u6587\u4ef6\uff0c\u89c1\u4e0b\u6587\u3002\n\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u540e\u4e00\u4e2a\u5907\u4efd\u6587\u4ef6\u5939\u90fd\u6709\u201c\u6700\u540e\u4e00\u4e2a\u201d\u7684\u7b26\u53f7\u94fe\u63a5\u3002\u5e26\u6709\u201c\u6700\u540e\u4e00\u4e2a\u201d\u7684\u94fe\u63a5\u6587\u4ef6\u5939\u7528\u4e8e\u6bd4\u8f83\u65b0\u65e7\u6587\u4ef6\u3002\u53ea\u5c06\u65b0\u6587\u4ef6\u590d\u5236\u5230\u5907\u4efd\u4e2d\u3002\n\uff08Bash\u53d8\u91cf\u4e0d\u5fc5\u5927\u5199\uff0c\u8fd9\u53ea\u662f\u4f5c\u8005\u7684\u98ce\u683c\uff09\u3002\n\u901a\u8fc7MAILREC\u6307\u5b9a\u65e5\u5fd7\u90ae\u4ef6\u7684\u76ee\u6807\u5730\u5740\u3002\u6ce8\u610f\uff0c\u90ae\u4ef6\u5728\u539f\u59cb\u811a\u672c\u4e2d\u5305\u542b\u4fdd\u5b58\u6587\u4ef6\u7684\u5b8c\u6574\u5217\u8868\u3002\u8fd9\u53ef\u80fd\u662f\u51e0\u767eMB\uff0c\u7136\u540e\u5361\u5728\u90ae\u4ef6\u670d\u52a1\u5668\u4e2d\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u540e\u6765\u53ea\u5728\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5305\u542b\u9519\u8bef\uff08\u81f3\u5c11\u5bf9\u4e8e\u5927\u578b\u5907\u4efd\u662f\u8fd9\u6837\uff09\u3002\u89c1\u4e0b\u6587\u3002\n\u4ecessh\u6216TOSSH\uff0c\u6211\u4eec\u4ece\u8fd9\u91cc\u7684\u4e00\u4e2a\u6e90\u5907\u4efd\uff0c\u56e0\u6b64\u4ecessh\u3002\u53c2\u6570\u9700\u8981\u670d\u52a1\u5668\u8fde\u63a5\u3002FROMSSH\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u65e0\u6cd5\u8bbf\u95ee\u6b63\u5728\u5907\u4efd\u7684\u670d\u52a1\u5668\u4e0a\u7684\u5907\u4efd\u6570\u636e\u3002\u8fd9\u5bf9\u4e8e\u52a0\u5bc6\u7279\u6d1b\u4f0a\u6728\u9a6c\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u67e5\u627e\u8fd9\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u9996\u5148\u5bf9\u5907\u4efd\u8fdb\u884c\u52a0\u5bc6\u3002\n\u5355\u4e2a\u7a0b\u5e8f\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\uff0c\u8fd9\u662f\u4e00\u79cd\u6709\u8da3\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8c03\u7528\u811a\u672c\u7a0b\u5e8f\uff0c\u5e76\u786e\u4fdd\u5373\u4f7f\u6ca1\u6709\u5728path\u53d8\u91cf\u4e2d\u5217\u51fa\u5b83\u4eec\uff0c\u4e5f\u80fd\u627e\u5230\u5b83\u4eec\u3002\nLAST\u6307\u5b9a\u7b26\u53f7\u94fe\u63a5\u6587\u4ef6\u5939\u7684\u540d\u79f0\u201clast\u201d\u5219\u662f\u6307\u5411\u6700\u540e\u4e00\u6b21\u5907\u4efd\u7684sym\u94fe\u63a5\u3002\n\u56e0\u4e3a\u6211\u4ee5\u540e\u9700\u8981\u201cls\u201dlist\u547d\u4ee4\uff0c\u6240\u4ee5\u6211\u4e5f\u5c06\u5176\u4e0e\u5b8c\u6574\u8def\u5f84\u4e00\u8d77\u653e\u5165\u53d8\u91cf\u4e2d\u3002\u4f46\u662f\u201cls\u201d\u4e0d\u4ec5\u5728bin\u4e2d\u53ef\u7528\uff0c\u5728sbin\u4e2d\u4e5f\u53ef\u7528\uff0c\u6211\u4ecebin\u4e2d\u83b7\u53d6\u5b83\u3002\n\u6bcf\u6b21\u5907\u4efd\u540e\u90fd\u4f1a\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u65e5\u5fd7\u6587\u4ef6\uff0c\u7136\u540e\u518d\u6b21\u8986\u76d6\u3002\u5728\u4f60\u7684\u7535\u5b50\u90ae\u4ef6\u7a0b\u5e8f\u4e2d\uff0c\u4f60\u53ea\u5269\u4e0b\u6536\u96c6\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u9664\u4e86\u6ca1\u6709\u592a\u591a\u7684\u6587\u4ef6\uff0c\u800c\u4e14\u7531\u4e8e\u90ae\u4ef6\u7684\u5927\u5c0f\uff0c\u90ae\u4ef6\u6ca1\u6709\u53d1\u9001\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u5e0c\u671b\u6709\u4e00\u4e2a\u201c\u5168\u5929\u65e5\u5fd7\u6587\u4ef6\u201d\uff0c\u5217\u51fa\u6240\u6709\u5907\u4efd\uff0c\u6709\u9519\u8bef\uff0c\u4f46\u6ca1\u6709\u5b8c\u6574\u7684\u5907\u4efd\u6587\u4ef6\u5217\u8868\u3002\uff08\u8fdb\u4e00\u6b65\uff0c\u6211\u5173\u95ed\u4e86\u6587\u4ef6\u5217\u8868\uff1a\u9ed8\u8ba4\u4e3a\uff1aINC 2&gt\uff1b$log\uff0c\u800c\u4e0d\u662f2&gt\uff1b&gt\uff1b$1\uff0c\u7136\u540e\u5217\u51fa\u6b63\u5e38\u548c\u9519\u8bef\u8f93\u51fa\uff09\u3002\u8be5\u8bed\u53e5\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u201c\\n\u201d\u751f\u6210\u4e00\u4e2a\u65b0\u884c\uff0c\u5e76$*\u201c\u5305\u542b\u60a8\u4e3a\u51fd\u6570\u63d0\u4f9b\u7684\u6240\u6709\u53c2\u6570\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u5c06\u4f20\u9012\u65e5\u5fd7\u6587\u672c\uff0c\u7136\u540e\u6574\u4e2a\u8fc7\u7a0b\u5c06\u5728\u7ed3\u5c3e\u5904\u5199\u5165\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\u201d\uff0c\u5982\u679c\u5b83\u4e0d\u5b58\u5728\u4e5f\u4f1a\u88ab\u521b\u5efa\u3002\u201ce\u201d\u5f00\u5173\u4f7fecho\u8bc4\u4f30\u53cd\u659c\u6760\uff0c\u6ca1\u6709\u53cd\u659c\u6760\u5c31\u6ca1\u6709\u65ad\u7ebf\u3002\n\u6b64\u65f6\uff0c\u201c0\u7f8e\u5143\u201d\u5305\u542b\u811a\u672c\u7684\u540d\u79f0\uff0c\u56e0\u6b64\u65e5\u5fd7\u6587\u4ef6\u7684\u547d\u540d\u4e0e\u811a\u672c\u52a0\u4e0a\u201clog\u201d\u7c7b\u4f3c\uff08\u4f8b\u5982\uff1abackup_script.sh.log\uff09\u3002\u4e4b\u540e\uff0c\u5b8c\u6574\u7684\u65e5\u671f/\u65f6\u95f4\u5c06\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u5907\u4efd\u8fc7\u7a0b\u4f55\u65f6\u5f00\u59cb\u3002\u5728\u811a\u672c\u5b8c\u6210\u540e\uff0c\u6700\u540e\u8fd8\u6709\u4e00\u4e2a\u65e5\u671f/\u65f6\u95f4\u6761\u76ee\u3002\u4f60\u4f1a\u770b\u5230\u82b1\u4e86\u591a\u957f\u65f6\u95f4\u3002\n\u7531\u4e8e\u5176\u4ed6\u6587\u4ef6\u5939\u5df2\u9644\u52a0\u5230\u76ee\u6807\u6587\u4ef6\u5939\uff0c\u56e0\u6b64\u9700\u8981\u5728\u672b\u5c3e\u52a0\u659c\u6760\u3002\u5728\u8fd9\u91cc\uff0c\u5b83\u88ab\u786e\u4fdd\u6c38\u8fdc\u5b58\u5728\u3002\n#zazu\u68c0\u67e5\u4eca\u5929\u7684\u6570\u5b57\u662f\u5426\u4e0e#\u7b26\u53f7\u94fe\u63a5#34\u76f8\u540c\uff1b\u6700\u540e&#34\uff1b\u5230\u7f16\u53f7\u7684\u6587\u4ef6\u5939#\u4e00\u5929\u4e5f\u6ca1\u67092\u6b21\u5907\u4efd-\u7ed9\u51fa\u4e00\u4e2aERRORHEUTE=$\uff08$DATE+%d\uff09cd$TARGETLAST_\u7b26\u53f7\u94fe\u63a5=$\uff08$LS-l | grep^l | grep-o&#34\uff1b[0-9][0-9]$&#34\uff1b\uff09cd/home/sicherung/bin\n\u9996\u5148\uff0c\u5c06\u6708\u4efd\u7684\u65e5\u6570\u5199\u5165\u53d8\u91cf\u201c\u4eca\u65e5\u201d\uff1a01\u621602\u7b49\u3002\u7136\u540e\uff0c\u6211\u7528\u201ccd\u201d\u5c06\u5176\u66f4\u6539\u4e3a\u76ee\u6807\u76ee\u5f55\uff0c\u5e76\u7528\u201cls\u201d\u548c\u9009\u9879\u201cl\u201d\u641c\u7d22\u76ee\u6807\u76ee\u5f55\u4e2d\u662f\u5426\u6709\u884c\uff0c\u5b83\u7684\u5f00\u5934\u6709\u4e00\u4e2a\u201cl\u201d\uff0c\u56e0\u6b64\u5b83\u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u3002\u7136\u540e\u6211\u5c06\u6700\u540e\u4e24\u4e2a\u6570\u5b57\u5355\u4f4d\uff08\u6587\u4ef6\u5939\u540d\u79f0\uff09\u653e\u5165\u53d8\u91cf\u201clast_symlink\u201d\u4e2d\u3002\u4e4b\u540e\uff0c\u6211\u5e26\u7740\u201ccd\u201d\u8fd4\u56de\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55\uff0c\u8fd9\u6837\u4ee5\u540e\u65e5\u5fd7\u6587\u4ef6\u4e5f\u4f1a\u5199\u5165\u5176\u4e2d\uff0c\u800c\u4e0d\u662f\u5199\u5165\u76ee\u6807\u76ee\u5f55\u3002\n\u5982\u679c[$HEUTE-ne$LAST_\u7b26\u53f7\u94fe\u63a5]\uff1b\u7136\u540e\u2026\u2026\u4ee3\u7801\u90e8\u52067a\u52307e\u5728\u8fd9\u91cc\u2026\u2026\u5426\u5219$ECHO&#34\uff1b\u7531\u4e8e\u4e00\u4e2a\u6708\u6ca1\u6709\u5907\u4efd\u6216\u53ea\u6709\u9519\u8bef\uff08\u8be5\u6708\u7684\u4eca\u5929\u548c\u6700\u540e\u4e00\u6b21\u5907\u4efd\u7684\u65e5\u671f\u5177\u6709\u76f8\u540c\u7684\u7f16\u53f7\uff09\uff0c\u4ece${TODAY}\u5f00\u59cb\u4fdd\u7559\u6700\u540e\u4e00\u6b21\u5907\u4efd\uff0c\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u7ed9\u6587\u4ef6\u5939\u52a0\u6ee1\u6c34\u3002\u4eca\u5929\u6ca1\u6709\u5907\u4efd\uff0c\u4e0b\u4e00\u6b21\u5907\u4efd\u662f\u660e\u5929&#34; &gt&gt\uff1b$LOG ERROR=1fi\n\u957f\u201c\u5982\u679c\u62ec\u53f7\u201d\uff1a\u8fd9\u91cc\u6211\u8bf4\uff0c\u5982\u679c\u7b26\u53f7\u94fe\u63a5\u6307\u5411\u4e0e\u4eca\u5929\u65e5\u671f\u76f8\u540c\u7684\u65e5\u671f\uff0c\u90a3\u4e48\u81f3\u5c11\u4e00\u4e2a\u6708\u5185\uff0c\u6240\u6709\u4e8b\u60c5\u90fd\u4f1a\u51fa\u9519\u3002\u8981\u4e48\u4e00\u4e2a\u6708\u5185\u6ca1\u6709\u5907\u4efd\uff08Mac\u4e0a\u7684raid\u5df2\u5173\u95ed\uff09\uff0c\u8981\u4e48\u6240\u6709\u5907\u4efd\u90fd\u4ee5\u9519\u8bef\u7ed3\u675f\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u518d\u521b\u5efa\u5e26\u6709\u201clast\u201d\u7684\u7b26\u53f7\u94fe\u63a5\u3002\n\u56e0\u6b64\uff1a\u53ea\u6709\u5728\u60c5\u51b5\u5e76\u975e\u5982\u6b64\uff08\u201cne\u201d\uff09\u65f6\uff0c\u624d\u5f00\u59cb\u65b0\u7684\u5907\u4efd\uff0c\u5426\u5219\u4fdd\u7559\u5f53\u5929\u7684\u5b8c\u6574\u5907\u4efd\uff0c\u5e76\u5c1d\u8bd5\u5728\u7b2c\u4e8c\u5929\u8fdb\u884c\u65b0\u7684\u5907\u4efd\u3002\n\u6ce8\u610f\uff1a\u53ea\u6709\u5728\u5907\u4efd\u6210\u529f\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u4f1a\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u201clast\u201d\u7684\u65b0\u7b26\u53f7\u94fe\u63a5\u3002\u5426\u5219\uff0c\u60a8\u7684\u60c5\u51b5\u662f\uff0c\u7b26\u53f7\u94fe\u63a5\u548crsync\u4e0a\u51fa\u73b0\u4e86\u4e00\u4e2a\u635f\u574f\u7684\u5907\u4efd\u6216\u4e0d\u5b8c\u6574\u7684\u5907\u4efd\uff0c\u7136\u540e\u91cd\u65b0\u751f\u6210\u6574\u4ef6\u4e8b\uff0c\u5e76\u5bf9\u6574\u4e2a\u6570TB\u7684\u6570\u636e\u8fdb\u884c\u5907\u4efd\u3002\n\u518d\u5f80\u4e0b\u662f\u201celse\u201d\uff0c\u56e0\u6b64\u5728\u6807\u7b7e\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u9519\u8bef\uff0c\u5e76\u5c06\u5176\u5199\u5165\u65e5\u5fd7\uff0c\u5e76\u7ed9\u51fa\u89e3\u91ca\u3002\n\u5982\u679c\u2013\u201cz\u201d\u4e3a\u96f6\u88c5\u5165\u70b9\uff0c\u56e0\u6b64\u53d8\u91cf\u6587\u672c\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u201cz\u201d\u4ece\u4eca\u5929\u5f00\u59cb\u7684\u96f6\u4e2a\u6708\u65cb\u8f6c\u8868\u793a\u5b8c\u6574\u65e5\u671f\uff0c\u5426\u5219\u4ec5\u8868\u793a\u5f53\u5929\u7684\u6708\u6570\u201c$date+%d\u201d\u3002\u6574\u4e2a\u4e8b\u4ef6\u518d\u6b21\u5305\u542b\u5728\u5e26$sign\u7684\u62ec\u53f7\u4e2d\uff0c\u4ee5\u4fbf\u9996\u5148\u8ba1\u7b97\u62ec\u53f7\u5185\u5bb9\uff0c\u7136\u540e\u5c06\u65b0\u4fe1\u606f\u4f20\u9012\u7ed9\u53d8\u91cf\u201cTODAY\u201d\uff0c\u8fd9\u4e5f\u662f\u5728\u8fd9\u91cc\u5f62\u6210\u7684\u3002\u6700\u540e\uff0c\u6587\u4ef6\u5939\u88ab\u79f0\u4e3a\u201c01\u201d\u6216\u201c20220101\u201d\u3002\n\u5728\u8fd9\u91cc\uff0cSSH\u8bbf\u95ee\u90e8\u5206\uff08\u7a0d\u540e\u5728rsync\u547d\u4ee4\u4e2d\uff09\u88ab\u5199\u5165\u53d8\u91cf\u201cS\u201d\uff0c\u8be5\u53d8\u91cf\u4e5f\u662f\u901a\u8fc7\u8be5\u547d\u4ee4\u521b\u5efa\u7684\u3002\n\u6765\u6e90\u4e8e&#34${\u6765\u6e90[@]}&#34\uff1bdo#fromsh\u2013\u5982\u679c[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$fromsh&#34\uff1b]&amp&amp\uff1b[z&#34\uff1b$TOSSH&#34\uff1b]\uff1b\u7136\u540e\u662f$ECHO&#34$RSYNC-e\\&#34$S\\&#34-avR\\&#34$fromsh:$SOURCE\\&#34${RSYNCCONF[@]}$TARGET$TODAY$INC&#34&gt&gt$\u8bb0\u5f55#\u4ec5\u8bb0\u5f55\u9519\u8bef#34\uff1b2&gt&gt$\u65e5\u5fd7&#34\uff1b\u56e0\u4e3a\u8bb0\u5f55\u6240\u6709\u5907\u4efd\u7684\u6587\u4ef6\u4f1a\u4f7f\u90ae\u4ef6\u7a0b\u5e8f\u5d29\u6e83\uff0c\u6240\u4ee5\u539f\u59cb\u7684#34&gt&gt$\u65e5\u5fd7#2&gt&amp\uff1b1&#34; $RSYNC-e&#34$S&#34-avR\u548c#34$fromsh:\\&#34$\u8d44\u6599\u6765\u6e9034&#34; &#34;$ {RSYNCCONF[@]}&#34&#34;$\u76ee\u6807&#34$\u4eca\u5929$INC 2&gt&gt$\u5982\u679c[$\uff1f-ne 0]\u8bb0\u5f55\uff1b\u7136\u540e\u9519\u8bef=1 fi fi#TOSSH\u2013I&#39\uff1b\u5982\u679c[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$TOSSH&#34\uff1b]&amp&amp\uff1b[-z&#34\uff1b$fromsh&#34\uff1b]\uff1b\u7136\u540e\u662f$ECHO&#34$RSYNC-e\\&#34$S\\&#34-avR\\&#34$\u6765\u6e90\\&#34\uff1b${RSYNCCONF[@]}\\&#34$TOSSH:$TARGET$TODAY\\&#34$\u516c\u53f8&#34&gt&gt$\u65e5\u5fd7$RSYNC-e&#34$S&#34-avR\u548c#34$\u6765\u6e90&#34&#34;${RSYNCCONF[@]}&#34&#34;$\u6258\u4ec0\uff1a34\u5c81$\u76ee\u680734$\u4eca\u5929&#34$\u516c\u53f8&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u5982\u679c[$\uff1f-ne 0]\uff1b\u7136\u540e\u9519\u8bef=1 fi#\u672c\u5730\u5907\u4efd\u2013I&#39\uff1b\u5982\u679c[-z&#34\uff1b$S&#34\uff1b]\uff0c\u6211\u5c31\u4e0d\u7528\u8fd9\u91cc\u4e86\uff1b\u7136\u540e\u662f$ECHO&#34$RSYNC-avR\\&#34$\u8d44\u6599\u6765\u6e9034${RSYNCCONF[@]}$TARGET$TODAY$INC&#34&gt&gt$\u65e5\u5fd7$RSYNC-avR&#34$\u6765\u6e90&#34&#34;${RSYNCCONF[@]}&#34&#34;$\u76ee\u6807&#34$\u4eca\u5929$INC&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u5982\u679c[$\uff1f-ne 0]\uff1b\u7136\u540e\u9519\u8bef=1 fi fidone\n\u7b2c\u4e00\u4e2a\u5757\u53ea\u662f\u5c06\u5b8c\u6574\u7684rsync\u547d\u4ee4\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u6267\u884c\u4e86\u4ec0\u4e48\u3002\n\u7136\u540e\uff0c\u7b2c\u4e8c\u4e2a\u5757\u5b9e\u9645\u6267\u884crsync\uff0c\u5e76\u5c06rsync\u62a5\u544a\u7ed9\u201c\u6807\u51c6\u8f93\u51fa\u201d\u548c\u201c\u6807\u51c6\u9519\u8bef\u201d\u7684\u5185\u5bb9\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\uff1a&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u201c\u9519\u8bef\u201d2\u4e5f\u4f1a\u88ab\u53d1\u9001\u5230stdout&amp\uff1b1\u201c\uff0c\u56e0\u6b64\u4e5f\u4f1a\u5199\u5165\u6700\u540e\u7684\u65e5\u5fd7\u6587\u4ef6\u3002\u5bf9\u4e8e\u6211\u6765\u8bf4\uff0c\u5b83\u53ea\u662f\u201c2&gt\uff1b\u201d\uff0c\u56e0\u6b64\uff0c\u53ea\u8bb0\u5f55\u9519\u8bef\uff0c\u5426\u5219\u6587\u4ef6\u4f1a\u53d8\u5f97\u592a\u5927\uff0840TB\uff09\uff0c\u5e76\u8bb0\u5f55\u60a8\u4f20\u8f93\u7684\u6bcf\u4e2a\u6587\u4ef6\u3002\n\u5982\u679c\u4e0a\u4e00\u6b21\u64cd\u4f5c\u7684\u9000\u51fa\u72b6\u6001\u4e0d\u6210\u529f\uff08$\uff1f-ne 0\uff09\uff0c\u5219\u201cne\u201d\u4e0d\u7b49\u4e8e0=\u6210\u529f\uff0c\u5219\u53d8\u91cfERROR=1\u3002\u7136\u540e\uff0c\u8be5\u53d8\u91cf\u5728\u7535\u5b50\u90ae\u4ef6\u4e3b\u9898\u4e2d\u751f\u6210\u201cERROR\u201d\u4e00\u8bcd\u3002\n\u201c-e\u201d\u4ee3\u8868\u8fdc\u7a0b\uff0c\u60a8\u5fc5\u987b\u5728\u6b64\u5904\u6307\u5b9a\u534f\u8baeSSH\u3002\uff08-e\u3001-rsh=\u547d\u4ee4\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u8fdc\u7a0bshell\uff09\n\\\u201c$SOURCE\\\u201d\u662fdo\u5faa\u73af\u5c06\u5904\u7406\u7684\u76f8\u5e94\u6e90\u3002\n$INC\u94fe\u63a5\u76ee\u7684\u5730\uff0c\u6700\u540e\u7684sym link\u4ecd\u7136\u5728\u672b\u5c3e\u6307\u5b9a\u2013link dest=last\n\u811a\u672c\u4e2d\u8f6c\u4e49\u7684\u5185\u5bb9\u548c\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u90fd\u5f88\u6709\u8da3\u3002\n\u5f15\u7528\u5355\u201cx\u201d\u548c\u53cc\u201cy\u201d\u8868\u793a\u547d\u4ee4\u5e94\u8fde\u7eed\u89e3\u91ca\u3002\u89e6\u6478\u201c\u6587\u4ef61\u89e6\u6478\u201d\u6587\u4ef61\n\u5bf9\u4e8e\u53d8\u91cf\uff0c\u201c\u53cc\u5f15\u53f7\u201d\u610f\u5473\u7740\u53d8\u91cf\u7684\u5185\u5bb9\u5e94\u8be5\u5728\u8fd9\u91cc\uff0c\u800c\u56f4\u7ed5\u53d8\u91cf\u7684\u5355\u201c\u53d8\u91cf\u201d\u5f15\u53f7\u53ea\u6253\u5370\u53d8\u91cf\u540d=\u53d8\u91cf\n\u5982\u679c[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$TOSSH&#34\uff1b]&amp&amp\uff1b[-z&#34\uff1b$fromsh&#34\uff1b]\uff1b\u7136\u540e\u662f$ECHO&#34$SSH-p$SSHPORT-l$SSHUSER$TOSSH$LN-nsf$TARGET$TODAY$TARGET$LAST&#34&gt&gt$LOG$SSH-p$SSHPORT-l$SSHUSER$TOSSH&#34$LN-nsf\\&#34$\u76ee\u680734$\u4eca\u592934\u5c81$\u76ee\u680734$\u6700\u540e&#34&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u5982\u679c[$\uff1f-ne 0]\uff1b\u7136\u540e\u9519\u8bef=1 fifi\n\u5bf9\u4e8eTOSSH\uff0c\u7b26\u53f7\u94fe\u63a5\u8bbe\u7f6e\u5728\u672b\u5c3e\u3002\u4e0d\u9002\u7528\u4e8e\u6211\u3002\n##zazu\u6dfb\u52a0\u4e86[-z&#34\uff1b$ERROR&#34\uff1b]\uff0c\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u5219\u65e0\u7b26\u53f7\u94fe\u63a5\uff08[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$fromsh&#34\uff1b]&amp&amp\uff1b[-z&#34\uff1b$TOSSH&#34\uff1b]&amp&amp\uff1b[z&#34\uff1b$ERROR&#34\uff1b]\uff09|\uff08[-z&#34\uff1b$S&#34\uff1b]\uff09\uff1b\u7136\u540e\u662f$ECHO&#34$LN\u2014\u2014nsf$TARGET$TODAY$TARGET$LAST&#34&gt&gt$\u65e5\u5fd7$LN-nsf&#34$\u76ee\u6807&#34$\u4eca\u5929&#34$\u76ee\u6807&#34$\u6700\u540e&gt&gt$\u65e5\u5fd72&gt&amp\uff1b1\u5982\u679c[$\uff1f-ne 0]\uff1b\u90a3\u4e48\u9519\u8bef=1fi\n\u8fd9\u91cc\u7684\u7b26\u53f7\u94fe\u63a5\u662f\u5728fromsh\u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6e\u7684\u3002\u9996\u5148\u5c06\u547d\u4ee4\u5199\u5165\u65e5\u5fd7\uff0c\u7136\u540e\u4f7f\u7528$LN\u6267\u884c\uff0c\u8be5\u547d\u4ee4\u6307\u5411\u547d\u4ee4\u201cLN\u201d\u3002\u5982\u679c\u547d\u4ee4\u6253\u5370\u4e86\u4e00\u4e9b\u5185\u5bb9\uff0c\u5219\u5b83\u5c06\u4f4d\u4e8e\u65e5\u5fd7\u6587\u4ef6\u7684\u672b\u5c3e\u3002\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u5219\u9519\u8bef=1\u7528\u4e8e\u90ae\u4ef6\u4e3b\u9898\u3002\n\u5982\u679c\uff08[&#34\uff1b$S&#34\uff1b]&amp&amp\uff1b[&#34\uff1b$fromsh&#34\uff1b]&amp&amp\uff1b[-z&#34\uff1b$TOSSH&#34\uff1b]&amp&amp\uff1b[z&#34\uff1b$ERROR&#34\uff1b]\uff09|\uff08[-z&#34\uff1b$S&#34\uff1b]\uff09\uff1b\u7136\u540e\n\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5219\u4e0d\u4f1a\u5199\u5165\u4efb\u4f55\u7b26\u53f7\u94fe\u63a5\uff0c\u5373\u201clast\u201d\u4ecd\u5c06\u6307\u5411\u65e7\u7684\u5b8c\u6574\u5907\u4efd\u3002\u5426\u5219\uff0c\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u670d\u52a1\u5668\u5c06\u4ece\u4e00\u5f00\u59cb\u5c31\u8fdb\u884c\u5b8c\u6574\u5907\u4efd\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u9700\u8981\u4e00\u4e2a\u6708\u7684\u4f20\u8f93\u65f6\u95f4\uff0c\u9700\u8981\u5927\u91cf\u5907\u4efd\u3002\n\u5176\u4ed6$ECHO&#34\uff1b\u7531\u4e8e\u4e00\u4e2a\u6708\u6ca1\u6709\u5907\u4efd\u6216\u53ea\u6709\u9519\u8bef\uff08\u8be5\u6708\u7684\u4eca\u5929\u548c\u6700\u540e\u4e00\u6b21\u5907\u4efd\u7684\u65e5\u671f\u5177\u6709\u76f8\u540c\u7684\u7f16\u53f7\uff09\uff0c\u4ece${TODAY}\u5f00\u59cb\u4fdd\u7559\u6700\u540e\u4e00\u6b21\u5907\u4efd\uff0c\u6ca1\u6709&#39\uff1b\u4e0d\u8981\u7ed9\u6587\u4ef6\u5939\u52a0\u6ee1\u6c34\u3002\u4eca\u5929\u6ca1\u6709\u5907\u4efd\uff0c\u4e0b\u4e00\u6b21\u5907\u4efd\u662f\u660e\u5929&#34; &gt&gt$\u65e5\u5fd7\u9519\u8bef=1 fi\n\u6ce8\u610f\uff1a\u201celse\u201d\u6307\u7684\u662f\u5982\u679c\u4eca\u5929\u4e0esymlink last\u7684\u5f53\u5929\u76f8\u540c\uff0c\u5219\u66f4\u5927\u7684if\u5faa\u73af\u3002\n\u5728\u5b9e\u9645\u8fc7\u7a0b\u7ed3\u675f\u65f6\uff0c\u5b8c\u6574\u7684\u65e5\u671f/\u65f6\u95f4\u4f1a\u518d\u6b21\u5199\u5165\u65e5\u5fd7\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u5907\u4efd\u82b1\u8d39\u4e86\u591a\u957f\u65f6\u95f4\u4ee5\u53ca\u4f55\u65f6\u5b8c\u6210\u3002\n\u5982\u679c[-n&#34\uff1b$MAILREC&#34\uff1b]\uff1b\u90a3\u4e48\u5982\u679c[$ERROR]\uff1b\u7136\u540e\u662f$MAIL-s&#34\uff1b\u9519\u8bef\u5907\u4efd$LOG&#34$MAILREC&lt$LOG#zazu all LOG all#logprint#34\uff1b\u9519\u8bef34&#34;$\uff08&lt\uff1b$LOG\uff09\u548c#34\uff1belse$MAIL-s&#34\uff1b\u5907\u4efd$LOG&#34$MAILREC&lt$LOG#zazu all LOG all#logprint#34$\uff08&lt\uff1b$LOG\uff09\u548c#34\uff1b\u83f2\u83f2\n\u5982\u679cMAILREC\u4e0d\u4e3a\u7a7a\uff08-n\uff09\uff0c\u5219\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u8bf7\u5728\u4e3b\u9898\u4e2d\u5199\u5165\u201c\u9519\u8bef\u5907\u4efd+\u65e5\u5fd7\u6587\u4ef6\u540d$log\u201d\uff0c\u5426\u5219\u53ea\u9700\u201c\u5907\u4efd+\u65e5\u5fd7\u6587\u4ef6\u540d\u201d$\u65e5\u5fd7\u5305\u542b\u65e5\u5fd7\u6587\u4ef6\u7684\u540d\u79f0&lt$LOG\u8bc4\u4f30\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u8be5\u6587\u4ef6\u4f4d\u4e8e$LOG\u4e2d\n\u5728\u4e0b\u9762\uff0c\u6211\u542f\u52a8\u811a\u672c\u5f00\u5934\u5b9a\u4e49\u7684\u51fd\u6570\u201call_logprint\u201d\u3002\u7136\u540e\u5c06\u53c2\u6570\u201cError____\\n\u201d\u52a0\u4e0a\u4e00\u884c\u672b\u5c3e\u201cError\\n\u201d\u4f20\u9012\u7ed9\u51fd\u6570\u7684echo\u547d\u4ee4\u3002\u4e0b\u5212\u7ebf\u53ea\u662f\u4e3a\u4e86\u8ba9\u60a8\u66f4\u597d\u5730\u770b\u5230\u9519\u8bef\u6587\u672c\u3002$\uff08&lt\uff1bLOG\uff09\u201c\u4ece\u65e5\u5fd7\u4e2d\u7684\u6587\u4ef6\u540d\u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\u53d8\u91cf\uff0c\u7136\u540e\u5c06\u5176\u5199\u5165bu\u811a\u672c\u7684\u201c\u5168\u5929\u540d\u79f0\u201d\u3002\u201csh.log\u201d\u6587\u4ef6\u3002\n\u5728\u201c\u6240\u6709\u65e5\u671f\u201d\u4e2d\uff0c\u53ea\u5217\u51fa\u4e86\u5355\u4e2a\u5907\u4efd\uff0c\u4ee5\u53ca\u9519\u8bef\u548c\u6709\u5173\u8fd0\u884c\u65f6\u5f00\u59cb\u3001\u8fd0\u884c\u65f6\u7ed3\u675f\u3001\u6267\u884c\u7684\u547d\u4ee4\u4ee5\u53ca\u53ef\u80fd\u901a\u8fc7\u6807\u51c6\u8f93\u51fa\u7684\u4fe1\u606f\u3002\n\u201cu\u201d\u4ee3\u8868\u7528\u6237\uff0c\u201cg\u201d\u4ee3\u8868\u56e2\u4f53\uff0c\u201ca\u201d\u4ee3\u8868\u6240\u6709\u4eba\u3002\n\u8981\u6bcf\u5929\u8fd0\u884c\u811a\u672c\uff0c\u9700\u8981\u5728crontab o\u4e2d\u8f93\u5165\u4e00\u4e2a\u6761\u76ee\n......", "note_en": "Creating backups is a basic necessity for anyone who stores data. With the help of a dedicated server, the Linux operating system and the rsync software, you can securely and efficiently retrieve data from any computer via an SSH connection and store it in a backup. It doesn\u2019t matter if there is another Linux server, a Mac or a Windows computer on the other side. But as soon as you have more than a few text files, you have to control the process precisely. This script contains some important elements, which are essential when dealing with large amounts of data and slow internet lines.\n    It distinguishes between TOSSH and FROMSSH, i.e. whether the server fetches something or whether you push something to the backup server (TOSSH). In case of FROMSSH there are no access data on the computer to be backed up. Connection credentials to the backup are always the first target of encryption trojans, so it is better that the backup server fetches the data itself, i.e. it is the one that connects to the computer to be backed up -&gt; FROMSSH\n It distinguishes between overwriting the folders with the day number every month or creating new folders with the full date as the name -&gt; MONTHROTATE\n It can check if a volume to be backed up is connected to the computer via USB -&gt; MOUNTPOINT (I\u2019m not using this.)\n It can initiate the sending of a mail with the log of the backup process.\n  It can delete files that no longer exist in the source also in the backup.\n  With a stored key (Use SSH keys and not passwords!) the backup server dials up the computer to be backed up via SSH (FROMSSH). There it compares the files on the volume to be backed up with what it has in the folder pointed to by the symlink with the name \u201elast\u201c. A new folder is then created from the number of the day (e.g. \u201e02\u201c) and all new or changed files are stored in it. On the already existing files a hardlink is created in the new folder, so that these are all \u201epresent\u201c in the new folder. Deleted files do not get a hardlink. If everything is ready, the symlink \u201elast\u201c is now directed to the new folder. In the next month then simply the old folder with the same day number is overwritten with the current folder (MONTHROTATE). The date and every single transferred file is written into the log, which is created as an extra file and overwritten every time. This info is then sent as a mail at the end. The backup script is started via crontab of the special backup user (who has no sudo rights) every day.\n  If a rsync process takes longer than 24 h then the processes overlap and accumulate (the old one is not ready when a new one starts), block each other and nothing works anymore. -&gt; A new process should therefore only start when the previous one is finished.\n In large volumes with many files, the log files become so long that they no longer fit into an email and the email is then no longer sent. -&gt; For large volumes only errors should be logged.\n If an error occurs then a symlink to the newly created folder with the current tag as name is created anyway. This leads to the fact that with the next backup the complete backup is transferred again. With several terabytes this can take a month of data transfer over the internet. -&gt; Only change the symlink if there was no error before, otherwise keep the symlink to the healthy folder until there is a backup without errors again. Disadvantage: A second backup on the same day is then not possible even with manual start of the script.\n The backup server is only needed for a short time, but runs the whole day. -&gt; Use a separate script to shut down the server in the meantime, but only if no backup is currently running or someone is currently logged in via SSH. Separate this task from the backup user and execute it via the administration user or the central /etc/crontab, since root rights are needed for this. (This is not part of this blog.)\n  To keep track, a file that stores all log entries, one after the other, with only a few lines per entry -&gt; all-log\n       #!/bin/bash# avoidng collisions with other rsync processes# the minutes passed to the script # 21h*60min = 1260\u00a0minutesminutes=1260# Make sure no one else is using rsyncpro_on=$(ps aux | grep -c rsync)# if someone is using rsync# grep is also producing one entry so -gt 1while [ $pro_on -gt 1 ] do sleep 60 minutes=$(($minutes - 1))# we are close to the next day no need to start if [ $minutes -lt 60 ] ; then exit 0 fi pro_on=$(ps aux | grep -c rsync)done\n This is the block to check if other rsync processes are running. It is adapted from the following code \u201eLetting your server take naps\u201c:\n   With the first line you say that the \u201ebash\u201c should be entrusted with the execution.\n \u201eminutes=1260\u201c means that the postponement of a start of this script should be maximum 21 hours. After that the script will not be executed, because the cron process will start already the next round of backup.\n \u201epro_on=$(ps aux | grep -c rsync)\u201c, processes that are running, here \u201ersync\u201c, the grep command itself also produces a process on the server itself, which is why you have to work with \u201e-gt 1\u201c i.e. \u201egreater than 1\u201c.\n After that it goes into a while loop which sleeps with \u201esleep 60\u201c for one minute each round and then checks if there is still more than one grep-rsync process running. The minutes are then always counted down by 1 and if one gets under 60 minutes until the 21 hours are over, then it is no longer worth running the script and \u201eexit 0\u201c aborts. After that cron will try again at the regular time on the next day. This case occurs when another rsync process needs more than 20 hours.\n  # Simple backup with rsync# local-mode, tossh-mode, fromssh-modeSOURCES=(/Volumes/my_volume/ )TARGET=&#34;/srv/backup_volume&#34;# edit or comment with &#34;#&#34;MONTHROTATE=monthrotate # use DD instead of YYMMDDRSYNCCONF=(--delete --exclude=/Volumes/Raid/.DocumentRevisions-V100--exclude=/Volumes/Raid/.TemporaryItems --exclude=/Volumes/Raid/.Trashes --exclude=/Volumes/Raid/.apdisc)MAILREC=&#34;my_home_mail@something.de&#34;SSHUSER=&#34;linux_backupuser&#34;FROMSSH=&#34;linux_backupuser@999.888.777.666&#34;#TOSSH=&#34;tossh-server&#34;SSHPORT=22222MOUNT=&#34;/bin/mount&#34;; FGREP=&#34;/bin/fgrep&#34;; SSH=&#34;/usr/bin/ssh&#34;LN=&#34;/bin/ln&#34;; ECHO=&#34;/bin/echo&#34;; DATE=&#34;/bin/date&#34;; RM=&#34;/bin/rm&#34;DPKG=&#34;/usr/bin/dpkg&#34;; AWK=&#34;/usr/bin/awk&#34;; MAIL=&#34;/usr/bin/mail&#34;CUT=&#34;/usr/bin/cut&#34;; TR=&#34;/usr/bin/tr&#34;; RSYNC=&#34;/usr/bin/rsync&#34;LAST=&#34;last&#34;; INC=&#34;--link-dest=$TARGET/$LAST&#34;; LS=&#34;/bin/ls&#34;\n  SOURCES is an array and can contain multiple sources, separated by a space. SOURCES has a slash at the end, so that the folders /user/Volumes/Data_Folder are not produced each time.\n    SOURCES If the SOURCE has a \u201e/\u201c at the end then only the content is copied but not the last specified folder.\n SOURCES is an array which will be accessed later with ${SOURCES[@]}. Multiple sources can be specified separated by spaces. There is then separate output in the log, because a \u201edo-loop\u201c is processed for each SOURCE.\n TARGET has no slash at the end, the slash is added later automatically if it is missing.\n   \u201e-delete\u201c means that files that are deleted in the source are also deleted on the target. Some point-files (.file) sometimes make reading problems from the source so that it is best to exclude them. The problem is that they change between the reading of the files to be copied and the copying process. This leads to an error. Since RSYNCCONF is an array, more rsyn flags can be placed here if there is a need.\n   Since in a month always the day is specified as folder, the respective folder with the day number e.g. \u201e04\u201c is overwritten again on the 4th of the next month. If this should not apply, then one can take long dates for the folder with the full date. You will get a new folder every day and you should then delete old ones from time to time.\n  Deleting does not seem to delete the files that are still needed as they are hardlinks. These can be multiple links to a file and as long as a hardlink still exists (from another day-folder) the file is not deleted. New backups will then produce another NEW hardlink to the file. That\u2019s why it doesn\u2019t seem to be a problem if you skip a day. (At least that\u2019s how I understood it, but don\u2019t see more than one hardlink, in Linux \u201els -la\u201c output).\n To track the sequence I added an \u201eall-log\u201c file to the script, see below.\n There is then the symbolic link of \u201elast\u201c to the last backup folder in each case. The linked folder with \u201elast\u201c is used for the comparison of old and new files. Only new files are copied to the backup.\n    (Bash variables do not have to be capitalized, this is just a style of the author here).\n Via MAILREC a destination address for the log mails is specified. Attention the mails contain in the original script the complete lister of the saved files. This can be a few hundred MB, which then get stuck in the mail server. That\u2019s why I later included only ERRORS in the log file (at least for the big backup). See below.\n FROMSSH or TOSSH, we are backing up from a source here, hence FROMSSH. The argument expects the server connection. FROMSSH is important because then there is no access data to the backup on the server being backed up. This is extremely important for encryption trojans, because they look for exactly that and then encrypt the backup first.\n   The individual programs are stored in variables, this is an interesting approach to call in the script programs and make sure that they are found even without being listed in the path variable.\n LAST specifies the name of the sym link folder. \u201elast\u201c is then the sym link to the last backup.\n  Because I need the \u201els\u201c list-command later I also put it with the full path into a variable. But \u201els\u201c is not only available in bin but also in sbin, here I get it from bin.\n   The log file is sent by email after each backup and then overwritten again. You are left with only the collected emails in your email programme, except there were not too many files and the emails were not sent due to the size. That\u2019s why I wanted to have an \u201eall-days-log-file\u201c listing all backups, with ERRORS but without the complete backup file lists. (Further down, I turned off the file list: Default-Out: $INC 2&gt;&gt; $LOG instead of 2&gt;&amp;1 which then lists normal and error output). The statement is a function, \u201e\\n\u201c produces a new line and \u201e$*\u201c contains all arguments you give to the function. Here you pass on the log text, then the whole thing is written to a new file at the end \u201e&gt;&gt;\u201c, which is also created if it doesn\u2019t exist. The \u201e-e\u201c switch causes echo to evaluate the backslash, without it there is no line break.\n   \u201e$0\u201c contains the name of the script at this point, so the log file is named like the script plus \u201e.log\u201c (example: backup_script.sh.log). After that the complete date/time is written into the log file. So you can see when the backup process started. At the end there is again a date/time entry, after the script is done. You will see how long it took.\n   Since other folders are attached to the destination folder, it needs a slash at the end. Here it is ensured that it is always there.\n  # zazu check whether today is the same number as the # symlink &#34;last&#34; to the numbered folder# also no 2 backups on one day - gives an ERRORHEUTE=$($DATE +%d)cd $TARGETLAST_SYMLINK=$($LS -l | grep ^l | grep -o &#34;[0-9][0-9]$&#34;)cd /home/sicherung/bin\n First the day number of the month is written into the variable \u201eTODAY\u201c: 01 or 02 etc.. Then I change with \u201ecd\u201c into the target directory and search there with \u201els\u201c and the option \u201e-l\u201c whether there is a line, which has a \u201el\u201c at the beginning, thus it is a symlink. Then I get the last two number units (folder name) into the variable \u201eLAST_SYMLINK\u201c. After that I return with \u201ecd\u201c to the directory where the scripts are located, so that later the log files are also written there and not in the target directory.\n  if [ $HEUTE -ne $LAST_SYMLINK ]; then\u2026 code parts 7a to 7e are here \u2026else $ECHO &#34;Since one month no backup or only with ERROR (todays day of the month and day of last backup have the same number), kept the last backup from day ${TODAY}, didn&#39;t overwirte the folder. No backup today, next backup is tomorrow.&#34; &gt;&gt;\u00a0$LOG ERROR=1fi\n Long \u201eif bracket\u201c: Here I say, if the symlink points to the same day number as today\u2019s date, then everything must have gone wrong for at least a month. Either there was no backup for a month (raid on Mac was off) or all backups ended with an error and that\u2019s why no symlink with \u201elast\u201c was created anymore.\n Therefore: Only if this is not the case( \u201e-ne\u201c), then start a new backup, otherwise keep the full backup for that day and try to make a new one the next day.\n Attention: A new symlink with \u201elast\u201c will only be created if the backup succeeds. Otherwise you have the case that a broken backup or an incomplete backup is at the symlink and rsync then makes the whole thing again and that for the whole many terabytes.\n Further down there is an \u201eelse\u201c, so in case of tag equality an error is generated and written into the log with an explanation.\n   If \u2013 \u201ez\u201c zero MOUNTPOINT, thus variable text is empty, make with \u201e-z\u201c zero MONTHROTATE from TODAY the full date otherwise only the month number of the day \u201e$Date +%d\u201c. The whole thing is again in a bracket with $ sign, so that first the bracket content is evaluated and then the new info can be passed to the variable \u201eTODAY\u201c, which is also formed here. At the end the folder is called e.g. \u201e01\u201c or \u201e20220101\u201c.\n   Here the SSH access part, which is later in the rsync command, is written into the variable \u201eS\u201c, which is also created with this command.\n  for SOURCE in &#34;${SOURCES[@]}&#34; do#FROMSSH \u2013 this I use here if [ &#34;$S&#34; ] &amp;&amp; [ &#34;$FROMSSH&#34; ] &amp;&amp; [ -z &#34;$TOSSH&#34; ]; then $ECHO &#34;$RSYNC -e \\&#34;$S\\&#34; -avR \\&#34;$FROMSSH:$SOURCE\\&#34; ${RSYNCCONF[@]} $TARGET$TODAY $INC&#34; &gt;&gt; $LOG# log only errors &#34;2&gt;&gt; $LOG&#34; since logging all files # backuped will crash the mailer, original &#34;&gt;&gt; $LOG # 2&gt;&amp;1&#34; $RSYNC -e &#34;$S&#34; -avR &#34;$FROMSSH:\\&#34;$SOURCE\\&#34;&#34; &#34;$ {RSYNCCONF[@]}&#34; &#34;$TARGET&#34;$TODAY $INC 2&gt;&gt; $LOG if [ $? -ne 0 ]; then ERROR=1 fi fi#TOSSH \u2013 I&#39;m not using here if [ &#34;$S&#34; ] &amp;&amp; [ &#34;$TOSSH&#34; ] &amp;&amp; [ -z &#34;$FROMSSH&#34; ]; then $ECHO &#34;$RSYNC -e \\&#34;$S\\&#34; -avR \\&#34;$SOURCE\\&#34; $ {RSYNCCONF[@]} \\&#34;$TOSSH:$TARGET$TODAY\\&#34; $INC &#34; &gt;&gt; $LOG $RSYNC -e &#34;$S&#34; -avR &#34;$SOURCE&#34; &#34;${RSYNCCONF[@]}&#34; &#34;$TOSSH:\\&#34;$TARGET\\&#34;$TODAY&#34; $INC &gt;&gt; $LOG 2&gt;&amp;1 if [ $? -ne 0 ]; then ERROR=1 fi fi#Local Backup \u2013 I&#39;m not using here if [ -z &#34;$S&#34; ]; then $ECHO &#34;$RSYNC -avR \\&#34;$SOURCE\\&#34; ${RSYNCCONF[@]} $TARGET$TODAY $INC&#34; &gt;&gt; $LOG $RSYNC -avR &#34;$SOURCE&#34; &#34;${RSYNCCONF[@]}&#34; &#34;$TARGET&#34;$TODAY $INC &gt;&gt; $LOG 2&gt;&amp;1 if [ $? -ne 0 ]; then ERROR=1 fi fidone\n   The first block just writes the complete rsync command to the log file, so you can see what was executed.\n The second block then actually executes rsync and writes what rsync reports to \u201estdout\u201c (standard out) and \u201estderr\u201c (standard error) to the log file: \u201e&gt;&gt; $LOG 2&gt;&amp;1\u201c Errors \u201e2\u201c are also routed to stdout \u201e&amp;1\u201c and thus also written to the log file at the end. With me it is only \u201e2&gt;&gt;\u201c, so log only Errors, otherwise the file becomes too large with 40TB and logging every single file you transfer.\n If the exit status of the last operation was not successful ($? -ne 0), so \u201e-ne\u201c not equal 0 = success, then the variable ERROR = 1. This variable then produces the word \u201eError\u201c in the subject of the email.\n  \u201e-e\u201c stands for remote and you have to specify a protocol, here SSH. (-e, \u2013rsh=COMMAND specify the remote shell to use)\n    \\\u201c$SOURCE\\\u201c\u201c is the respective SOURCE over which the do loop will process.\n   $INC the link destination, sym link on last is still specified at the end \u2013link-dest=last\n  It is interesting what is escaped \u201e\\\u201c in the script and what is in \u201equotes\u201c.\n Quoting single \u201ax\u2018 and double \u201ey\u201c means that a command should be interpreted contiguously.  touch \u201eFile 1 touch \u201aFile 1\n For variables, \u201c \u201c double quotes mean that the contents of the variable should be here, whereas single \u201a$variable\u2018 quotes around a variable only print the variable name = variable\n     if [ &#34;$S&#34; ] &amp;&amp; [ &#34;$TOSSH&#34; ] &amp;&amp; [ -z &#34;$FROMSSH&#34; ]; then $ECHO &#34;$SSH -p $SSHPORT -l $SSHUSER $TOSSH $LN -nsf $TARGET$TODAY $TARGET$LAST&#34; &gt;&gt; $LOG $SSH -p $SSHPORT -l $SSHUSER $TOSSH &#34;$LN -nsf \\&#34;$TARGET\\&#34;$TODAY \\&#34;$TARGET\\&#34;$LAST&#34; &gt;&gt; $LOG 2&gt;&amp;1 if [ $? -ne 0 ]; then ERROR=1 fifi\n In the case of TOSSH, the symlink is set here at the end. Does not apply to me.\n   ## zazu added [ -z &#34;$ERROR&#34; ], no symlink if error if ( [ &#34;$S&#34; ] &amp;&amp; [ &#34;$FROMSSH&#34; ] &amp;&amp; [ -z &#34;$TOSSH&#34; ] &amp;&amp; [ -z &#34;$ERROR&#34; ] ) || ( [ -z &#34;$S&#34; ] ); then $ECHO &#34;$LN -nsf $TARGET$TODAY $TARGET$LAST&#34; &gt;&gt; $LOG $LN -nsf &#34;$TARGET&#34;$TODAY &#34;$TARGET&#34;$LAST &gt;&gt; $LOG 2&gt;&amp;1 if [ $? -ne 0 ]; then ERROR=1 fi fi\n  Here the symlink is set in the case of FROMSSH. First the command is written into the log, then it is executed with $LN, which points to the command \u201eln\u201c. If the command prints something, it will be at the end of the log file. In case of errors ERROR=1 is used for the subject of the mail message.\n   if ( [ &#34;$S&#34; ] &amp;&amp; [ &#34;$FROMSSH&#34; ] &amp;&amp; [ -z &#34;$TOSSH&#34; ] &amp;&amp; [ -z &#34;$ERROR&#34; ] ) || ( [ -z &#34;$S&#34; ] ); then\n No symlink is written if an error took place, that is \u201elast\u201c will still point to the old complete backup. Otherwise the server makes the complete backup from the beginning in case of an error, which can mean a month transfer time with a big volume to backup.\n  else $ECHO &#34;Since one month no backup or only with ERROR (todays day of the month and day of last backup have the same number), kept the last backup from day ${TODAY}, didn&#39;t overwirte the folder. No backup today, next backup is tomorrow.&#34; &gt;&gt; $LOG ERROR=1 fi\n Attention: The \u201eelse\u201c refers to the larger if-loop if today\u2019s day is the same as the day at symlink-last.\n    At the end of the actual process, the full date/time is written to the log again, so you can see how long the backup took and when it finished.\n  if [ -n &#34;$MAILREC&#34; ]; then if [ $ERROR ];then $MAIL -s &#34;Error Backup $LOG&#34; $MAILREC &lt; $LOG# zazu all log all_logprint &#34;ERROR _ _ _ _ _ _ _ _ _ _ _ \\n&#34; &#34;$(&lt; $LOG)&#34; else $MAIL -s &#34;Backup $LOG&#34; $MAILREC &lt; $LOG#zazu all log all_logprint &#34;$(&lt; $LOG)&#34; fifi\n If MAILREC is not null (-n), then if ERROR write in the subject \u201eERROR backup + the name of the log file $LOG\u201c otherwise just \u201ebackup + the name of the log file\u201c. $LOG contains the name of the log file &lt; $LOG evaluates the content of the file which is in $LOG\n Below this I start the function \u201eall_logprint\u201c defined at the beginning of the script. Then pass to the echo command of the function the parameters \u201eError_ _ _\\n\u201c plus an end of line \u201e\\n\u201c. The underscores are just so you can see the ERROR text better. \u201e$(&lt;$LOG)\u201c gets the content of the file from the file whose name is in the log variable and then writes it to the \u201eall-days-name-of-the-bu-scriptes.sh.log\u201c file.\n     In the \u201eall-days\u201c the single backups are listed, only with the errors and the information about runtime start, runtime end, executed commands and possibly outputs via stdout.\n        \u201eu\u201c stands for the user, \u201eg\u201c for group and \u201ea\u201c for all.\n    To run the script every day you need to make an entry into crontab o\n......", "posttime": "2022-02-25 22:22:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "ssh,rsync,\u5907\u4efd", "title": "\u4e00\u4e2a\u8fd1\u4e4e\u5b8c\u7f8e\u7684rsync over ssh\u5907\u4efd\u811a\u672c", "title_en": "An almost perfect rsync over ssh backup script", "transed": 1, "url": "https://blog.zazu.berlin/software/a-almost-perfect-rsync-over-ssh-backup-script.html", "via": "", "real_tags": ["ssh", "rsync", "\u5907\u4efd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074998, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "OrioleDB\u662fPostgreSQL\u7684\u4e00\u4e2a\u65b0\u5b58\u50a8\u5f15\u64ce\uff0c\u4e3a\u4e16\u754c\u5e26\u6765\u4e86\u6570\u636e\u5e93\u5bb9\u91cf\u3001\u529f\u80fd\u548c\u6027\u80fd\u7684\u73b0\u4ee3\u65b9\u6cd5#39\uff1b\u6700\u53d7\u6b22\u8fce\u7684\u6570\u636e\u5e93\u5e73\u53f0\u3002\nOrioleDB\u5305\u542b\u4e00\u4e2a\u6269\u5c55\uff0c\u57fa\u4e8e\u521b\u65b0\u7684table accessmethod\u6846\u67b6\u548c\u5176\u4ed6\u6807\u51c6Postgres\u6269\u5c55\u63a5\u53e3\u3002\u901a\u8fc7\u6269\u5c55\u548c\u589e\u5f3a\u5f53\u524d\u7684\u8868\u8bbf\u95ee\u65b9\u6cd5\uff0cOrioleDB\u4e3a\u672a\u6765\u66f4\u5f3a\u5927\u7684\u5b58\u50a8\u6a21\u578b\u6253\u5f00\u4e86\u5927\u95e8\uff0c\u8fd9\u4e9b\u5b58\u50a8\u6a21\u578b\u9488\u5bf9\u4e91\u548c\u73b0\u4ee3\u786c\u4ef6\u67b6\u6784\u8fdb\u884c\u4e86\u4f18\u5316\u3002\n\u4e13\u4e3a\u73b0\u4ee3\u786c\u4ef6\u8bbe\u8ba1\u3002OrioleDB\u8bbe\u8ba1\u907f\u514d\u4e86\u5305\u542b\u6570\u5341\u4e2a\u548c\u6570\u767e\u4e2aCPU\u6838\u5fc3\u7684\u73b0\u4ee3\u670d\u52a1\u5668\u4e0a\u9057\u7559\u7684CPU\u74f6\u9888\uff0c\u4f18\u5316\u4e86SSD\u548cNVRAM\u7b49\u73b0\u4ee3\u5b58\u50a8\u6280\u672f\u7684\u4f7f\u7528\u3002\n\u51cf\u5c11\u4e86\u7ef4\u62a4\u9700\u6c42\u3002OrioleDB\u5b9e\u73b0\u4e86undo Log\u548cpage mergins\u7684\u6982\u5ff5\uff0c\u6d88\u9664\u4e86\u5bf9\u4e13\u7528\u5783\u573e\u6536\u96c6\u8fc7\u7a0b\u7684\u9700\u6c42\u3002\u6b64\u5916\uff0cOrioleDB\u5b9e\u73b0\u4e86\u9ed8\u8ba4\u768464\u4f4dtransactionidentifiers\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u4f17\u6240\u5468\u77e5\u4e14\u75db\u82e6\u7684\u73af\u7ed5\u95ee\u9898\u3002\n\u8bbe\u8ba1\u7528\u4e8e\u5206\u53d1\u3002OrioleDB\u5b9e\u73b0\u4e86\u4e00\u4e2a\u884c\u7ea7\u5199\u65e5\u5fd7\uff0c\u652f\u6301\u5e76\u884c\u5e94\u7528\u3002\u6b64\u65e5\u5fd7\u4f53\u7cfb\u7ed3\u6784\u9488\u5bf9\u57fa\u4e8e\u4e00\u81f4\u6027\u7684\u590d\u5236\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5141\u8bb8\u5b9e\u73b0\u4e3b\u52a8-\u4e3b\u52a8\u591a\u4e3b\u673a\u3002\n\u65e0\u7f13\u51b2\u533a\u6620\u5c04\u548c\u65e0\u9501\u9875\u9762\u8bfb\u53d6\u3002OrioleDBare\u4e2d\u7684\u5185\u5b58\u9875\u901a\u8fc7\u76f4\u63a5\u94fe\u63a5\u8fde\u63a5\u5230\u5b58\u50a8\u9875\u3002\u8fd9\u6d88\u9664\u4e86\u5bf9\u7f13\u51b2\u533a\u5185\u6620\u5c04\u53ca\u5176\u76f8\u5173\u74f6\u9888\u7684\u9700\u6c42\u3002\u6b64\u5916\uff0c\u5728OrioleDB\u5185\u5b58\u4e2d\uff0c\u9875\u9762\u8bfb\u53d6\u4e0d\u4f1a&#39\uff1b\u4e0d\u6d89\u53ca\u539f\u5b50\u64cd\u4f5c\u3002\u603b\u4e4b\uff0c\u8fd9\u4e9b\u8bbe\u8ba1\u51b3\u7b56\u5c06Postgres\u7684\u5782\u76f4\u53ef\u6269\u5c55\u6027\u63d0\u5347\u5230\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u6c34\u5e73\u3002\nMVCC\u57fa\u4e8e\u64a4\u9500\u65e5\u5fd7\u7684\u6982\u5ff5\u3002\u5728OrioleDB\u4e2d\uff0c\u5143\u7ec4\u7684\u65e7\u7248\u672c\u4e0d\u4f1a\u5728\u4e3b\u5b58\u50a8\u7cfb\u7edf\u4e2d\u5bfc\u81f4\u81a8\u80c0\uff0c\u800c\u662f\u88ab\u9010\u51fa\u5230\u5305\u542b\u64a4\u6d88\u94fe\u7684\u64a4\u6d88\u65e5\u5fd7\u4e2d\u3002\u9875\u9762\u7ea7\u64a4\u9500\u8bb0\u5f55\u5141\u8bb8\u7cfb\u7edf\u8f7b\u677e\u5730\u5c3d\u5feb\u56de\u6536\u88ab\u5220\u9664\u5143\u7ec4\u5360\u7528\u7684\u7a7a\u95f4\u3002\u4e0e\u4f69\u5947\u00b7\u6885\u91d1\u65af\u4e00\u8d77\uff0c\u8fd9\u4e9b\u673a\u5236\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6d88\u9664\u4e86\u81a8\u80c0\u3002\u4e5f\u4e0d\u9700\u8981\u4e13\u95e8\u6e05\u7406\u8868\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u7cfb\u7edf\u6027\u80fd\u6076\u5316\u548c\u6570\u636e\u5e93\u4e2d\u65ad\u7684\u4e00\u4e2a\u91cd\u8981\u800c\u5e38\u89c1\u7684\u539f\u56e0\u3002\n\u5199\u5165\u65f6\u590d\u5236\u68c0\u67e5\u70b9\u548c\u884c\u7ea7WAL\u3002OrioleDB\u5728\u5199\u68c0\u67e5\u70b9\u4e0a\u4f7f\u7528\u900f\u89c6\u529f\u80fd\uff0c\u53ef\u968f\u65f6\u63d0\u4f9b\u7ed3\u6784\u4e00\u81f4\u7684\u6570\u636e\u5feb\u7167\u3002\u8fd9\u5bf9\u73b0\u4ee3SSD\u975e\u5e38\u53cb\u597d\uff0c\u5e76\u5141\u8bb8\u8fdb\u884cRow\u7ea7\u522b\u7684WAL\u8bb0\u5f55\u3002\u53cd\u8fc7\u6765\uff0c\u884c\u7ea7WAL\u65e5\u5fd7\u8bb0\u5f55\u5f88\u5bb9\u6613\u5e76\u884c\u5316\uff08\u5b8c\u6210\uff09\u3001\u7d27\u51d1\uff0c\u5e76\u4e14\u9002\u5408\u6d3b\u52a8activemultimaster\uff08\u8ba1\u5212\uff09\u3002\nOrioleDB\u73b0\u5728\u5177\u6709\u516c\u5171alpha\u72b6\u6001\u3002\u5efa\u8bae\u7528\u4e8e\u5b9e\u9a8c\u3001\u6d4b\u8bd5\u3001\u57fa\u51c6\u6d4b\u8bd5\u7b49\uff0c\u4f46\u4e0d\u5efa\u8bae\u7528\u4e8e\u751f\u4ea7\u3002\u5982\u679c\u4f60\u5bf9OrioleDB&#39\u611f\u5174\u8da3\uff1bs\u7684\u751f\u4ea7\u6548\u76ca\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\u3002\n$git\u514b\u9686https://github.com/orioledb/orioledb$cd orioledb$make USE_PGXS=1$make USE_PGXS=1\u5b89\u88c5$make USE_PGXS=1\u5b89\u88c5\u68c0\u67e5\n\u5728\u5f00\u59cb\u4f7f\u7528OrioleDB\u4e4b\u524d\uff0c\u8bf7\u5c06\u4ee5\u4e0b\u884c\u6dfb\u52a0\u5230postgresql\u3002conf\u662f\u5fc5\u9700\u7684\u3002\u6b64\u66f4\u6539\u9700\u8981\u91cd\u65b0\u542f\u52a8PostgreSQL\u6570\u636e\u5e93\u670d\u52a1\u5668\u3002\n\u5b8c\u6210\u4e0a\u8ff0\u6b65\u9aa4\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528OrioleDB&#39\uff1b\u8fd9\u662f\u684c\u5b50\u3002\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4f7f\u7528\u8bf4\u660e\u6587\u4ef6\u3002", "note_en": "OrioleDB is a new storage engine for PostgreSQL, bringing a modern approach todatabase capacity, capabilities and performance to the world&#39;s most-loveddatabase platform.\n OrioleDB consists of an extension, building on the innovative table accessmethod framework and other standard Postgres extension interfaces. By extendingand enhancing the current table access methods, OrioleDB opens the door toa future of more powerful storage models that are optimized for cloud andmodern hardware architectures.\n  Designed for modern hardware. OrioleDB design avoids legacy CPU bottleneckson modern servers containing dozens and hundreds CPU cores, providingoptimized usage of modern storage technologies such as SSD and NVRAM.\n Reduced maintenance needs. OrioleDB implements the concepts of undo logand page-mergins, eliminating the need for dedicated garbage collectionprocesses. Additionally, OrioleDB implements default 64-bit transactionidentifiers, thus eliminating the well-known and painful wraparound problem.\n Designed to be distributed. OrioleDB implements a row-level write-aheadlog with support for parallel apply. This log architecture is optimizedfor raft consensus-based replication allowing the implementation ofactive-active multimaster.\n  No buffer mapping and lock-less page reading. In-memory pages in OrioleDBare connected with direct links to the storage pages. This eliminates theneed for in-buffer mapping along with its related bottlenecks. Additionally,in OrioleDB in-memory page reading doesn&#39;t involve atomic operations.Together, these design decisions bring vertical scalability for Postgresto the whole new level.\n MVCC is based on the UNDO log concept. In OrioleDB, old versions of tuplesdo not cause bloat in the main storage system, but eviction into the undolog comprising undo chains. Page-level undo records allow the systemto easily reclaim space occupied by deleted tuples as soon as possible.Together with page-mergins, these mechanisms eliminate bloat in the majorityof cases. Dedicated VACUUMing of tables is not needed as well, removinga significant and common cause of system performance deterioration anddatabase outages.\n Copy-on-write checkpoints and row-level WAL. OrioleDB utilizescopy-on-write checkpoints, which provides a structurally consistent snapshotof data every moment of time. This is friendly for modern SSDs and allowsrow-level WAL logging. In turn, row-level WAL logging is easy toparallelize (done), compact and suitable for active-activemultimaster (planned).\n   OrioleDB now has public alpha status. It is recommended for experiments,testing, benchmarking, etc., but is not recommended for production usage.If you are interested in OrioleDB&#39;s benefits in production, please contact us.\n     $ git clone https://github.com/orioledb/orioledb $  cd orioledb $ make USE_PGXS=1 $ make USE_PGXS=1 install $ make USE_PGXS=1 installcheck\n Before starting working with OrioleDB, adding the following line to postgresql.conf is required. This change requires a restart ofthe PostgreSQL database server.\n    Once the above steps are complete, you can start using OrioleDB&#39;s tables.See  usage documentation for details.", "posttime": "2022-02-25 22:19:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "postgresql,orioledb,solving", "title": "OrioleDB\u2013\u89e3\u51b3\u4e00\u4e9bPostgreSQL\u7684\u95ee\u9898", "title_en": "OrioleDB \u2013 solving some PostgreSQL wicked problems", "transed": 1, "url": "https://github.com/orioledb/orioledb", "via": "", "real_tags": ["orioledb", "solving"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074997, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6765\u81ea\u5211\u4e8b\u53f8\u6cd5\u7cfb\u7edf\u5de5\u4f5c\u548c\u751f\u6d3b\u4eba\u5458\u7684\u89c2\u70b9\u3002\u62a5\u540d\u9886\u53d6&#34\uff1b\u5185\u5fc3\u7684\u751f\u6d3b&#34\uff1b\u6bcf\u5468\u53d1\u90ae\u4ef6\u7ed9\u4f60\u3002\n\u4efb\u4f55\u56da\u72af\u90fd\u53ef\u4ee5\u544a\u8bc9\u4f60\uff0c\u76d1\u72f1\u91cc\u5b58\u5728\u7740\u4e00\u79cd\u7279\u6b8a\u7684\u7ecf\u6d4e\u3002\u5728\u6d89\u53ca\u4ece\u98df\u54c1\u5230\u5395\u7eb8\u7684\u4efb\u4f55\u4ea4\u6613\u4e2d\uff0c\u9999\u70df\u7b49\u7269\u54c1\u90fd\u53ef\u4ee5\u5145\u5f53\u7f8e\u5143\u949e\u7968\u3002\u4efb\u4f55\u60e9\u6559\u8bbe\u65bd\u7684\u7269\u54c1\u90fd\u77ed\u7f3a\uff0c\u4f46\u5bf9\u4e8e\u90a3\u4e9b\u88ab\u5355\u72ec\u76d1\u7981\u7684\u4eba\u6765\u8bf4\uff0c\u60c5\u51b5\u5c24\u5176\u7cdf\u7cd5\u3002\n\u5728\u6211\u56e0\u76d7\u7a83\u7f6a\u88ab\u5224\u4e24\u5e74\u76d1\u7981\u671f\u95f4\uff0c\u6211\u5f00\u59cb\u5bf9\u7ebd\u7ea6\u6240\u8c13\u7684\u7279\u6b8a\u4f4f\u623f\u5355\u5143\uff08SHU\uff09\u7684\u4eba\u4eec\u5982\u4f55\u4e70\u5356\u5546\u54c1\u611f\u5174\u8da3\u30022019\u5e74\uff0c\u5728\u201c\u5b64\u72ec\u89c2\u5bdf\u201d\u7684\u62a5\u544a\u8d44\u52a9\u4e0b\uff0c\u6211\u91c7\u8bbf\u4e8615\u540d\u7ebd\u7ea6\u5dde\u56da\u72af\uff0c\u4ed6\u4eec\u5728\u76d1\u72f1\u91cc\u81f3\u5c11\u5446\u4e86\u4e00\u4e2a\u6708\u3002\u6211\u6ca1\u6709\u76f4\u63a5\u5f15\u8ff0\u6216\u6307\u8ba4\u6211\u91c7\u8bbf\u7684\u4eba\uff0c\u56e0\u4e3a\u8fd9\u79cd\u7ecf\u6d4e\u7684\u4e00\u90e8\u5206\u662f\u975e\u6cd5\u7684\u3002\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u6211\u5b66\u5230\u7684\u662f\uff0c\u56da\u7981\u5b55\u80b2\u4e86\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u521b\u9020\u529b\u5c55\u793a\u3002\n\u8981\u7406\u89e3\u76d1\u72f1\u7ecf\u6d4e\u5728\u6211\u4eec\u6240\u8bf4\u7684\u201c\u76d2\u5b50\u201d\u4e2d\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u4f60\u5fc5\u987b\u77e5\u9053\u76d1\u72f1\u7684\u5e03\u5c40\u3002\u5728\u8f9b\u8f9b\u3001\u683c\u6797\u6216\u6000\u4fc4\u660e\u5dde\u7b49\u7ebd\u7ea6\u5dde\u76d1\u72f1\u4e2d\uff0c\u5927\u591a\u6570\u4e0e\u4e16\u9694\u7edd\u7684\u4eba\u751f\u6d3b\u5728\u4e0e\u666e\u901a\u4eba\u7fa4\uff08GP\uff09\u9694\u79bb\u7684\u5de8\u5927\u7262\u623f\u91cc\u3002\u5728\u4e00\u4e2aSHU\u4e2d\uff0c\u53ef\u4ee5\u6709200\u4e2a\u5355\u5143\u5806\u53e0\u5728\u591a\u5c42\u9ad8\u7684\u5730\u65b9\u3002\u8fd9\u4e9b\u7ec6\u80de\u5f88\u5c11\u5927\u4e8e6\u82f1\u5c3a\u4e588\u82f1\u5c3a\uff0c\u800c\u4e14\u4e24\u4e2a\u7537\u4eba\u7ecf\u5e38\u5171\u7528\u5b83\u4eec\u3002\u5728\u51e0\u4e2a\u6708\u751a\u81f3\u51e0\u5e74\u7684\u65f6\u95f4\u91cc\uff0c\u76d2\u5b50\u91cc\u7684\u4eba\u6bcf\u5929\u88ab\u517323\u621624\u5c0f\u65f6\u3002\n\u4ece\u5916\u9762\u770b\u8700\u56fd\uff0c\u4f60\u770b\u4e0d\u5230\u7ec6\u80de\u672c\u8eab\uff0c\u800c\u662f\u9644\u52a0\u7684\u201c\u4f11\u95f2\u201d\u7b14\u3002rec pen\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u5ba4\u5916\u7b3c\u5b50\uff0c\u901a\u8fc7\u95e8\u4e0e\u7535\u6c60\u76f8\u8fde\u3002\u5728\u5a31\u4e50\u65f6\u95f4\uff0c\u5f53\u95e8\u6253\u5f00\u65f6\uff0c\u56da\u72af\u4eec\u53ef\u4ee5\u8d70\u51fa\u76d1\u72f1\uff0c\u4f46\u4ed6\u4eec\u4ecd\u7136\u88ab\u91d1\u5c5e\u6805\u680f\u56f4\u4f4f\u3002\n\u8bb0\u5f55\u65f6\u95f4\u662f\u4e00\u4ef6\u5435\u95f9\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u4eba\u4eec\u4ece\u8700\u56fd\u7684\u4e00\u8fb9\u5230\u53e6\u4e00\u8fb9\u4e92\u76f8\u558a\u53eb\u3002\u6709\u4e9b\u4eba\u6bcf\u5929\u90fd\u5728\u804a\u5929\u3002\u5176\u4ed6\u4eba\u53ea\u662f\u4e3a\u4e86\u542c\u5230\u81ea\u5df1\u7684\u58f0\u97f3\u800c\u5927\u558a\u810f\u8bdd\u548c\u5a01\u80c1\u3002\u4ed6\u4eec\u7b80\u76f4\u662f\u70e6\u900f\u4e86\u3002\u5728\u5608\u6742\u58f0\u4e2d\uff0c\u4eba\u4eec\u5927\u58f0\u558a\u51fa\u4ed6\u4eec\u60f3\u5356\u6216\u4e70\u7684\u4e1c\u897f\u3002\u8fd9\u4e9b\u4fe1\u606f\u6709\u4ece\u4e00\u4e2a\u5355\u5143\u4e22\u5931\u5230\u4e0b\u4e00\u4e2a\u5355\u5143\u7684\u98ce\u9669\u3002\u4e3a\u4e86\u6539\u8fdb\u7c7b\u4f3c\u4e8e\u7535\u8bdd\u6e38\u620f\u7684\u529f\u80fd\uff0c\u4eba\u4eec\u62db\u52df\u4e2d\u4ecb\u8fdb\u884c\u4ea4\u6d41\u3002\n\u5c0f\u5356\u90e8\u5728\u5355\u72ec\u76d1\u7981\u4e2d\u53d7\u5230\u6781\u5927\u9650\u5236\u3002\u53ea\u6709\u5728\u51e0\u4e2a\u6708\u7684\u826f\u597d\u884c\u4e3a\u4e4b\u540e\uff0c\u8212\u56da\u624d\u80fd\u83b7\u5f97\u8d2d\u4e70\u98df\u7269\u7684\u7279\u6743\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u5b83\u4eec\u4e5f\u4ec5\u9650\u4e8e\u5c0f\u96f6\u98df\u3002\u5bf9\u4e8e\u76d2\u5b50\u91cc\u7684\u7edd\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u4ed6\u4eec\u552f\u4e00\u8d2d\u4e70\u7684\u98df\u54c1\u662f\u536b\u751f\u7528\u54c1\u548c\u90ae\u7968\u3002\n\u90ae\u7968\u662f\u76d2\u88c5\u8d27\u5e01\u7684\u4e00\u79cd\u4e3b\u8981\u5f62\u5f0f\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u5b83\u4eec\uff0c\u800c\u4e14\u5b83\u4eec\u4f53\u79ef\u5c0f\uff0c\u53ef\u9690\u85cf\uff0c\u6613\u4e8e\u8fd0\u8f93\u3002\u5355\u72ec\u76d1\u7981\u59d4\u5458\u4f1a\u6700\u503c\u5f97\u6ce8\u610f\u7684\u4ea7\u54c1\u662f\u70df\u8349\u3002\u4ece\u666e\u901a\u79d1\u533b\u751f\u7ecf\u5e38\u5438\u70df\uff0c\u5230\u88ab\u9694\u79bb\u548c\u7a7a\u624b\u72ec\u5904\uff0c\u8bb8\u591a\u56da\u72af\u5728\u62d8\u7559\u6240\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u201c\u8c01\u6709\u2018bacco\u2019\u201d\u3002\u56e0\u6b64\uff0c\u5377\u8f74\u7eb8\u3001\u706b\u67f4\u548c\u6253\u706b\u673a\u4e5f\u5f88\u6709\u4ef7\u503c\u3002\n\u6211\u91c7\u8bbf\u7684\u7537\u4eba\u544a\u8bc9\u6211\uff0c\u6700\u5e38\u89c1\u7684\u70df\u8349\u91cf\u662f\u4e00\u4e2a\u7a7a\u7cd6\u5305\u7684\u4ef7\u503c\u6216\u201cs.p.\u201d\u7537\u4eba\u4eec\u4ece\u65e9\u9910\u6258\u76d8\u4e2d\u53d6\u51fa\u5c0f\u7eb8\u888b\u3002\u5e73\u5747\u4ef7\u683c\u4e3a3\u52305\u7f8e\u5143\uff0c\u6216\u80056\u523010\u679a\u90ae\u7968\uff0c\u4e00\u652f\u6807\u51c6\u666e\u5c14\u7684\u70df\u8349\u8db3\u591f\u4e09\u652f\u9999\u70df\u3002\u4e00\u6574\u888b\u70df\u8349\u53ef\u4ee5\u88c530\u652f\u9999\u70df\uff0c\u5728GP\u7684\u5c0f\u5356\u90e8\u82b1\u8d39\u4e0d\u52304\u7f8e\u5143\u3002\u5728\u8700\u56fd\uff0c\u5982\u679c\u4f60\u80fd\u6210\u529f\u5730\u5c06\u70df\u8349\u5e26\u5165\u8be5\u90e8\u95e8\uff0c\u6f5c\u5728\u7684\u5229\u6da6\u7a7a\u95f4\u662f\u975e\u5e38\u5927\u7684\u3002\n\u8272\u60c5\u6742\u5fd7\u662f\u76d2\u5b50\u91cc\u7684\u53e6\u4e00\u79cd\u4e3b\u8981\u5546\u54c1\u3002\u6709\u4e9b\u95ee\u9898\u88ab\u5355\u72ec\u76d1\u7981\u7684\u65f6\u95f4\u6bd4\u5927\u591a\u6570\u56da\u72af\u90fd\u957f\u3002\u6495\u7834\u548c\u4e22\u5931\u7684\u4e66\u9875\uff0c\u770b\u8d77\u6765\u548c\u62ff\u7740\u5b83\u4eec\u7684\u4eba\u4e00\u6837\u60b2\u4f24\u3002\u867d\u7136\u4e00\u5bf9\u4e00\u7684\u4ea4\u6613\u662f\u83b7\u53d6\u65b0\u76ae\u80a4Mag\u7684\u5e38\u7528\u65b9\u6cd5\uff0c\u4f46\u5076\u5c14\u6709\u4eba\u4f1a\u82b110\u7f8e\u5143\u8d2d\u4e70\u4e00\u4e2a\u72b6\u6001\u975e\u5e38\u597d\u7684\u76ae\u80a4Mag\u3002\n\u5355\u72ec\u8fdb\u98df\u65f6\uff0c\u98df\u7269\u7684\u4efd\u91cf\u5f80\u5f80\u76f8\u5bf9\u8f83\u5c0f\u3002\u6211\u91c7\u8bbf\u7684\u5927\u591a\u6570\u7537\u6027\u8bf4\uff0c\u4ed6\u4eec\u6536\u5230\u7684\u76d2\u5b50\u91cc\u7684\u98df\u7269\u6bd4\u666e\u901a\u533b\u751f\u7684\u8981\u5c11\u3002\u4f8b\u5982\uff0c\u4ed6\u4eec\u8bf4\u4ed6\u4eec\u5f97\u5230\u4e86\u4e00\u676f\u7c73\u996d\uff0c\u800c\u4e0d\u662f\u901a\u5e38\u7684\u4e24\u676f\u3002\u4e3a\u4e86\u751f\u5b58\uff0c\u4ed6\u4eec\u4ea4\u6362\u76d8\u5b50\u91cc\u7684\u98df\u7269\u3002\u4e00\u4e9b\u4eba\u6362\u6389\u4e86\u4ed6\u4eec\u4e0d\u559c\u6b22\u7684\u4e1c\u897f\uff1b\u5176\u4ed6\u4eba\u5219\u4ee5\u4ea4\u6362\u6765\u652f\u6301\u4ed6\u4eec\u7684\u5438\u70df\u4e60\u60ef\u3002\n\u8003\u8651\u5230\u5b64\u72ec\u56da\u7981\u4e2d\u7684\u65e0\u804a\u548c\u9965\u997f\u4e00\u6837\u5371\u9669\uff0c\u4e00\u4e9b\u4eba\u7528\u4ed6\u4eec\u4ea4\u6613\u7684\u4e1c\u897f\u5236\u4f5c\u4e86\u4e00\u79cd\u88ab\u79f0\u4e3a\u201c\u76d2\u5b50\u6d3e\u201d\u7684\u7cd6\u679c\u4e3a\u4e86\u51c6\u5907\u4e00\u4e2a\u76d2\u5f0f\u9985\u997c\uff0c\u4e00\u540d\u56da\u72af\u4ece\u4ed6\u6b63\u9910\u4e2d\u6536\u96c6\u767d\u9762\u5305\uff0c\u5e76\u5c06\u5207\u7247\u6363\u788e\uff0c\u76f4\u5230\u5b83\u4eec\u50cf\u9985\u997c\u76ae\u7684\u9762\u56e2\u3002\u4ed6\u4eec\u7528\u4ece\u9910\u76d8\u4e2d\u6536\u96c6\u7684\u7cd6\u679c\u586b\u6ee1\u201c\u5916\u58f3\u201d\uff0c\u7136\u540e\u628a\u6574\u4e2a\u4e1c\u897f\u538b\u5e73\u3002\u6709\u4e9b\u4eba\u7528\u82f9\u679c\u548c\u9999\u8549\u7247\uff0c\u4f46\u5e03\u6717\u5c3c\u3001\u86cb\u7cd5\u548c\u82f9\u679c\u9165\u7b49\u751c\u70b9\u5c24\u5176\u53d7\u6b22\u8fce\u3002\n\u65e0\u8bba\u4f60\u5728\u4e70\u5356\u4ec0\u4e48\uff0c\u4f60\u90fd\u5fc5\u987b\u5b66\u4f1a\u5982\u4f55\u201c\u9493\u9c7c\u201d\u4ee5\u53c2\u4e0e\u5b64\u72ec\u7684\u7ecf\u6d4e\u3002\u9493\u9c7c\u7ebf\u7531\u6495\u5f00\u7684\u5e8a\u5355\u3001\u6bdb\u5dfe\u548c\u8863\u670d\u7ec4\u6210\u3002\u6709\u4e86\u8db3\u591f\u8584\u7684\u5e8a\u5355\uff0c\u4f60\u53ef\u4ee5\u7528\u4e00\u5f20\u5dde\u653f\u5e9c\u53d1\u5e03\u7684\u5e8a\u5355\u6392\u6210\u5927\u7ea6100\u82f1\u5c3a\u957f\u7684\u7ebf\u3002\u9493\u9c7c\u65f6\uff0c\u4f60\u8981\u628a\u4f60\u8981\u5356\u7684\u4e1c\u897f\u548c\u4e00\u5757\u781d\u7801\uff08\u6bd4\u5982\u4e00\u5757\u80a5\u7682\uff09\u653e\u5728\u9493\u7ebf\u4e0a\u3002\u5f53\u4f60\u628a\u7ef3\u5b50\u671d\u4e70\u5bb6\u6254\u8fc7\u53bb\u65f6\uff0c\u91cd\u91cf\u4f1a\u4ea7\u751f\u6240\u9700\u7684\u52a8\u91cf\uff0c\u8ba9\u4f60\u7684\u7269\u54c1\u5728\u7a7a\u4e2d\u79fb\u52a8\uff0c\u843d\u5730\u540e\u5c06\u5176\u62d6\u5165\u6b63\u786e\u7684\u5355\u5143\u683c\u3002\n\u5f53\u7136\uff0c\u5546\u54c1\u53ef\u80fd\u4f1a\u4ece\u751f\u4ea7\u7ebf\u4e0a\u6389\u4e0b\u6765\uff0c\u6216\u843d\u5728\u65e0\u6cd5\u56de\u6536\u7684\u5730\u65b9\u3002\u5173\u4e8e\u76d7\u7a83\u7684\u6307\u63a7\u4f1a\u5f15\u53d1\u4e89\u8bba\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u77e5\u9053\u4f60\u53ef\u4ee5\u4fe1\u4efb\u8c01\u6765\u4f20\u9012\u4f60\u7684\u8d27\u7269\u3002\u5728\u6211\u7684\u62a5\u9053\u4e2d\uff0c\u6211\u542c\u8bf4\u4e00\u4e2a\u4eba\u5728\u5916\u9762\u6ca1\u6709\u4efb\u4f55\u5bb6\u5ead\u6210\u5458\u5e2e\u52a9\u4ed6\u652f\u4ed8\u536b\u751f\u7eb8\u7b49\u57fa\u672c\u8d39\u7528\u3002\u591a\u4e8f\u4e86\u4ed6\u7684\u7262\u623f\u7684\u4e2d\u5fc3\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4ed6\u826f\u597d\u7684\u76ee\u6807\u548c\u53ef\u4fe1\u5ea6\uff0c\u4ed6\u80fd\u591f\u901a\u8fc7\u4fdd\u62a4\u5176\u4ed6\u4eba\u7684\u7ebf\u8def\u6765\u517b\u6d3b\u81ea\u5df1\u3002\u4e00\u5f00\u59cb\u662f\u4e3a\u4e86\u6d88\u78e8\u65f6\u95f4\uff0c\u4f46\u6700\u7ec8\u4ed6\u53d8\u5f97\u975e\u5e38\u64c5\u957f\u3002\u4eba\u4eec\u4f1a\u7167\u987e\u4ed6\uff0c\u7ed9\u4ed6\u5bc4\u4e1c\u897f\u4ee5\u6362\u53d6\u4ed6\u7684\u5e2e\u52a9\u3002\n\u5f88\u96be\u5b8c\u5168\u63cf\u8ff0\u6355\u9c7c\u7684\u9650\u5236\u6761\u4ef6\u3002rec\u7b14\u53ea\u662f\u4e00\u4e2a\u5c0f\u7b3c\u5b50\uff0c\u4e24\u6761\u6760\u4e4b\u95f4\u7684\u8ddd\u79bb\u53ea\u6709\u51e0\u82f1\u5bf8\u3002\u5728\u680f\u6746\u8fc7\u7d27\uff0c\u65e0\u6cd5\u7528\u624b\u5939\u4f4f\u680f\u6746\u7684\u5355\u4f4d\uff0c\u4eba\u4eec\u4f1a\u7528\u201c\u77db\u201d\u6765\u6295\u63b7\u7ef3\u5b50\u3002\u77db\u662f\u5377\u5f97\u5f88\u7d27\u7684\u6742\u5fd7\u6216\u62a5\u7eb8\uff0c\u53ef\u4ee5\u5728\u7a7a\u4e2d\u6ed1\u52a8\u3002\u5b83\u7684\u4f5c\u7528\u548c\u781d\u7801\u4e00\u6837\u3002\u5bf9\u4e8e\u90a3\u4e9b\u8fd8\u4e0d\u64c5\u957f\u9493\u9c7c\u7684\u4eba\u6765\u8bf4\uff0c\u53ea\u9700\u5728\u51e0\u4e2a\u7ec6\u80de\u5185\u4e0e\u67d0\u4eba\u5efa\u7acb\u8054\u7cfb\uff0c\u53ef\u80fd\u9700\u8981\u51e0\u5341\u6b21\u5c1d\u8bd5\u3002\n\u4f46\u8fd9\u4e9b\u5c40\u9650\u6027\u4f7f\u56da\u72af\u7684\u719f\u7ec3\u7a0b\u5ea6\u66f4\u52a0\u5438\u5f15\u4eba\u3002\u6211\u91c7\u8bbf\u8fc7\u4e00\u4e2a\u4eba\uff0c\u4ed6\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5728\u4e09\u5c42\u7684\u4eba\u628a\u4e00\u6761\u7ebf\u5c04\u5230\u4e86\u5730\u4e0a\u3002\u4ed6\u8bf4\uff0c\u8fd9\u4ef6\u7269\u54c1\u843d\u5728\u5730\u677f\u4e0a\uff0c\u6ed1\u5230\u4e86100\u591a\u82f1\u5c3a\u8fdc\u7684\u76ee\u6807\u95e8\u4e0b\u3002\n\u4eba\u7c7b\u7684\u751f\u5b58\u4e00\u76f4\u4f9d\u8d56\u4e8e\u6211\u4eec\u521b\u9020\u6027\u5408\u4f5c\u7684\u80fd\u529b\u3002\u5728\u50cf\u5355\u72ec\u76d1\u7981\u8fd9\u6837\u7684\u4e0d\u5229\u60c5\u51b5\u4e0b\uff0c\u4f60\u5fc5\u987b\u8df3\u51fa\u6846\u6846\u601d\u8003\u3002\u867d\u7136\u8fd9\u79cd\u7ecf\u6d4e\u662f\u7531\u975e\u5e38\u57fa\u672c\u7684\u5546\u54c1\u7ec4\u6210\u7684\uff0c\u8fd9\u4e9b\u5546\u54c1\u5728\u975e\u5e38\u7b80\u5355\u7684\u5de5\u5177\u7684\u5e2e\u52a9\u4e0b\u8fdb\u884c\u4ea4\u6362\uff0c\u4f46\u5b83\u76f8\u5f53\u590d\u6742\u3002\n\u5728\u5dde\u76d1\u72f1\u3001\u8054\u90a6\u76d1\u72f1\u548c\u5730\u65b9\u76d1\u72f1\u4e4b\u95f4\uff0c\u7f8e\u56fd\u5927\u7ea6\u6709230\u4e07\u4eba\u88ab\u76d1\u7981\u3002\u5e73\u5747\u800c\u8a00\uff0c\u8fd14%\u7684\u4eba\u88ab\u5355\u72ec\u76d1\u7981\u3002\u7262\u623f\u9152\u5427\u548c\u9493\u9c7c\u7ebf\u4f3c\u4e4e\u76f8\u9694\u4e00\u4e2a\u4e16\u754c\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u76f8\u5f53\u591a\u7684\u7f8e\u56fd\u4eba\u6765\u8bf4\uff0c\u5b83\u4eec\u662f\u65e5\u5e38\u751f\u6d3b\u7684\u4e00\u90e8\u5206\u3002\n24\u5c81\u7684\u9a6c\u4fee\u00b7\u963f\u624e\u8bfa\u5728\u7ebd\u7ea6\u7f57\u5207\u65af\u7279\u51fa\u751f\u5e76\u957f\u5927\u3002\u5728\u7ebd\u7ea6\u76d1\u72f1\u670d\u5211\u4e24\u5e74\u540e\uff0c\u4ed6\u6b63\u5728\u5e03\u6cd5\u7f57\u5dde\u7acb\u5b66\u9662\u5b8c\u6210\u57ce\u5e02\u89c4\u5212\u5b66\u58eb\u5b66\u4f4d\uff0c\u5e76\u5728\u90a3\u91cc\u53c2\u52a0\u6a44\u6984\u7403\u961f\u3002\u4ed6\u559c\u6b22\u953b\u70bc\u3001\u70f9\u996a\u548c\u7ec3\u4e60\u897f\u73ed\u7259\u8bed\u3002\u4ed6\u901a\u8fc7\u5355\u72ec\u76d1\u7981\u62a5\u544a\u9879\u76ee\u7684\u8d44\u52a9\u64b0\u5199\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002\n\u7ebd\u7ea6\u60e9\u6212\u548c\u793e\u533a\u76d1\u7763\u90e8\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\u5728\u56de\u5e94\u6709\u5173\u8212\u7684\u56da\u72af\u901a\u8fc7\u201c\u6355\u9c7c\u201d\u83b7\u5f97\u7684\u98df\u7269\u548c\u4ea4\u6613\u7269\u54c1\u51cf\u5c11\u7684\u8bf4\u6cd5\u65f6\u5199\u9053\uff0c\u201c\u8212\u7684\u88ab\u76d1\u7981\u8005\u83b7\u5f97\u7684\u98df\u7269\u4e0e\u666e\u901a\u4eba\u7684\u98df\u7269\u76f8\u540c\u201d\uff0c\u4f46\u6709\u4e9b\u4eba\u6ca1\u6709\u201c\u5982\u679c\u53d1\u73b0\u4e2a\u4eba\u56e0\u4e22\u5f03\u98df\u7269\u800c\u6d6a\u8d39\u98df\u7269\uff0c\u5219\u5e94\u5c06\u5176\u653e\u5165\u7279\u6b8a\u7ba1\u7406\u9910\u4e2d\uff0c\u8be5\u9910\u4e2d\u5fc5\u987b\u4ecd\u6709\u8db3\u591f\u6570\u91cf\u7684\u6709\u76ca\u5065\u5eb7\u4e14\u8425\u517b\u4e30\u5bcc\u7684\u98df\u7269\u3002\u201d\u4ed6\u4eec\u8fd8\u8868\u793a\uff0c\u201c\u4e0d\u5141\u8bb8\u88ab\u76d1\u7981\u8005\u4e4b\u95f4\u4ee5\u8fd9\u79cd\u6216\u4efb\u4f55\u65b9\u5f0f\u4ea4\u6362\u672a\u7ecf\u6388\u6743\u7684\u7269\u54c1\u3002\u201d", "note_en": "Perspectives from those who work and live in the criminal justice system.  Sign up to receive &#34;Life Inside&#34; emailed to you every week.\n  Any prisoner can tell you that a peculiar economy exists behind bars. Items like cigarettes serve as dollar bills in transactions involving anything from food to toilet paper. Goods are in short supply in any correctional facility, but the circumstances are especially dire for those in solitary confinement.\n I became interested in how people in New York\u2019s so-called Special Housing Units (SHUs) buy and sell their goods while I was serving a two-year sentence for burglary. In 2019, armed with a reporting grant from Solitary Watch, I interviewed 15 New York state prisoners who had spent at least one month in a SHU. I did not directly quote or identify the men I interviewed because parts of this economy are illegal. But what I learned overall is that captivity breeds impressive displays of creativity.\n  To understand how the prison economy works in what we call \u201cthe box,\u201d you have to know how the SHU is laid out. In New York state prisons such as Sing-Sing, Greene or Wyoming, most people in isolation live in massive cell blocks separate from the general population (GP). In a SHU, there can be 200 cells stacked multiple tiers high. These cells are rarely larger than 6 feet by 8 feet, and two men often share them. For months \u2014 even years \u2014 people in the box are confined for 23 or 24 hours a day.\n Viewing the SHU from outside, you don\u2019t see the cells themselves, but rather the attached \u201crecreation\u201d pens. A rec pen is essentially an outdoor cage connected to a cell by a door. When the doors unlock for recreation time, prisoners can walk out into the pen, but they remain fenced in by metal bars.\n Rec time is a clamorous affair, as men shout to each other from one side of the SHU to the other. Some guys are having everyday conversations. Others scream obscenities and threats just to hear their own voices. They are literally bored out of their minds. Amid the cacophony, people call out what they are trying to sell or buy. These messages run the risk of getting lost from one cell to the next. To improve what resembles a game of Telephone, people enlist intermediaries to communicate.\n Commissary is extremely limited in solitary confinement. Only after many months of good behavior may a SHU prisoner gain the privilege to buy food. Even then, they are limited to small snacks. For the vast majority of people in the box, their only commissary purchases are hygiene products and stamps.\n Stamps are a major form of currency in the box because virtually everyone needs them, and they are small, concealable and easy to transport in any quantity. The most notable product missing from solitary confinement commissary is tobacco. Going straight from smoking regularly in GP to being isolated and empty-handed in solitary, many prisoners\u2019 first question at the rec pen is, \u201cWho\u2019s got the \u2018bacco?\u2019\u201d Accordingly, rolling papers, matches and lighters are valuable as well.\n The men I interviewed told me that the most common quantity of tobacco is an empty sugar packet\u2019s worth or an \u201cs.p.\u201d Guys harvest the small paper envelopes from their breakfast trays. With an average price of $3 to $5 \u2014 or six to 10 stamps \u2014 an s.p. of tobacco is enough for three cigarettes. An entire pouch of tobacco, which can fill about 30 cigarettes, costs less than $4 on commissary in GP. In the SHU, the potential margin for profit is very large if you can successfully carry tobacco into the unit.\n Pornographic magazines are another major commodity in the box. Some issues have been in solitary confinement for longer than most of the prisoners. Ripped and missing pages, they look about as sad as the men who hold them. Although trading one-for-one is the usual method for acquiring new skin mags, occasionally someone will pay $10 for one in very good condition.\n Food portions tend to be relatively small in solitary. Most of the men I interviewed said they received less food in the box than they did in GP. For example, they said they got one cup of rice instead of the usual two. To get by, they traded food off their trays. Some swapped out items they didn\u2019t like; others bartered to support their tobacco habit.\n    Given that boredom is just as dangerous as hunger in solitary confinement, some of the guys used what they traded to make a confection known as a \u201cbox pie.\u201d To prepare a box pie, a prisoner collects the white bread from his meals and pounds the slices together until they resemble the dough of a pie crust. They fill the \u201ccrust\u201d with sweets accumulated from dinner trays and press the whole thing flat. Some use apple and banana slices, but desserts such as brownies, cakes and apple crisp are especially sought-after fillings.\n Whatever you\u2019re buying or selling, you must learn how to \u201cfish\u201d to participate in the solitary economy. Fishing lines are made of ripped strips of sheets, towels and clothes. With thin enough strips, you can make about 100 feet of line out of a single state-issued bedsheet. To fish, you attach the item you\u2019re selling to the line along with a weight, such as a bar of soap. When you toss the line toward your buyer, the weight creates the momentum needed to carry your item through the air and drag it into the right cell after it lands.\n Of course, commodities can fall off the line or land in places where they can\u2019t be recovered. Arguments can ignite over accusations of theft, so you need to know who you can trust to pass on your goods. In my reporting, I heard about one guy who didn\u2019t have any family members on the outside to help him pay for basics like toilet paper. Thanks to his cell\u2019s central location and his good aim and trustworthiness, he was able to support himself by securing other people\u2019s lines. It started out as something he would do to pass the time, but he ended up getting really good at it. People would look out for him, sending him items in exchange for his help.\n It is difficult to fully describe the restrictive conditions in which fishing takes place. The rec pen is just a small cage, and the space between the bars is a matter of inches. In units where the bars are too tight to fit one\u2019s hand between them, people use a \u201cspear\u201d to throw the line. A spear is a magazine or newspaper rolled up so tight that it glides through the air. It serves the same purpose as a weight does. For those who are not yet adept at fishing, it can take dozens of tries just to connect to someone a few cells down.\n But the limitations make prisoners\u2019 proficiency all the more fascinating. One man I interviewed described a guy on the third tier shooting a line to the ground level. He said the item landed on the floor and slid underneath his target\u2019s door more than 100 feet away.\n Human survival has always depended on our ability to cooperate creatively. In adverse situations like solitary confinement, you literally have to think outside the box. While this economy is made up of very basic commodities that are exchanged with the help of very simple tools, it\u2019s quite complex.\n Between state and federal prisons and local jails, about 2.3 million people are incarcerated in the United States. On average, close to 4% of them are held in solitary confinement. Cell bars and fishing lines may seem a world away, but are in fact a part of daily life for a considerable number of Americans.\n Matthew Azzano, 24, was born and raised in Rochester, New York. After serving two years in New York prisons, he is completing a bachelor\u2019s degree in urban planning at Buffalo State College, where he also plays on the rugby team. He enjoys exercising, cooking and practicing Spanish. He reported for this essay through a grant from the   Solitary Confinement Reporting Project .\n In response to claims that prisoners in SHU were receiving less food and trading items by \u201cfishing,\u201d a spokesperson for the New York Department of Corrections and Community Supervision wrote that \u201cincarcerated individuals in SHU are provided the same type of meals available in general population\u201d but that some are \u201cplaced in a special management meal \u2014 which must still be sufficient in quantity of wholesome and nutritious food \u2014 if the individual is found to waste food by throwing it.\u201d They also stated that the \u201cexchange of unauthorized items between incarcerated individuals in this, or any manner, is not permitted.\u201d", "posttime": "2022-02-25 22:15:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76d1\u7981,economy,\u76d1\u72f1", "title": "\u5355\u72ec\u76d1\u7981\u7684\u5730\u4e0b\u7ecf\u6d4e", "title_en": "The underground economy of solitary confinement", "transed": 1, "url": "https://www.themarshallproject.org/2022/02/18/inside-the-underground-economy-of-solitary-confinement", "via": "", "real_tags": ["\u76d1\u7981", "economy", "\u76d1\u72f1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1074996, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5929\u65e9\u4e0a\uff0cPatreon\u6682\u505c\u4e86\u6211\u4eec\u7f51\u7ad9\u4e0a\u4e00\u4e2a\u540d\u4e3a\u201c\u6d3b\u7740\u56de\u6765\u201d\u7684\u7ec4\u7ec7\u7684\u9875\u9762\uff0c\u56e0\u4e3a\u5b83\u8fdd\u53cd\u4e86\u6211\u4eec\u7684\u653f\u7b56\u3002\u8be5\u7ec4\u7ec7\u7684\u7f51\u7ad9\u79f0\uff0c\u4ed6\u4eec\u5229\u7528\u6350\u6b3e\u8d44\u52a9\u548c\u57f9\u8bad\u519b\u4e8b\u4eba\u5458\u3002\u5177\u4f53\u800c\u8a00\uff0c\u4ed6\u4eec\u58f0\u79f0\u5c06\u6536\u5230\u7684\u8d44\u91d1\u7528\u4e8e\u4ee5\u4e0b\u7528\u9014\uff1a\n\u201c\u8fd9\u4e9b\u8d44\u91d1\u88ab\u7528\u4e8e\u2026\u20261500\u591a\u53f0\u5e73\u677f\u7535\u8111\uff0c\u4ee5\u53ca\u7528\u4e8e\u5188\u4e9a\u88c5\u7532\u70ae\u5175\u7684\u8f6f\u4ef6\u3001230\u67b6\u56db\u67b6\u76f4\u5347\u673a\u300145\u4e2a\u79fb\u52a8\u76d1\u63a7\u7cfb\u7edf\u2026\u2026\u548c60\u591a\u8f86\u519b\u7528\u8f66\u8f86\u3002\u201d\n\u201c\u8be5\u7ec4\u7ec7\u8fd8\u5f00\u59cb\u521b\u5efa\u548c\u5b9e\u65bd\u65b0\u7684\u6280\u672f\u89e3\u51b3\u65b9\u6848\u201d\uff0c\u5305\u62ec\u201c\u706b\u70ae\u6b66\u5668\u6a21\u578b\u201d\n\u201c\u57f9\u8bad\u4e86350\u540d\u72d9\u51fb\u624b\u30012000\u591a\u540d\u5de5\u5175\u548c3000\u591a\u540d\u67aa\u624b\uff0c\u76ee\u524d\u6b63\u5728\u8fdb\u884c\u65e0\u4eba\u673a\u64cd\u4f5c\u5458\u57f9\u8bad\u3002\u201d\n\u6211\u4eec\u4e0d\u5141\u8bb8Patreon\u88ab\u7528\u4e8e\u8d44\u52a9\u6b66\u5668\u6216\u519b\u4e8b\u6d3b\u52a8\u3002\u8fd9\u8fdd\u53cd\u4e86\u6211\u4eec\u7684\u653f\u7b56\uff0c\u56e0\u6b64\u6211\u4eec\u5220\u9664\u4e86\u8be5\u9875\u9762\u3002\u8d26\u6237\u4e2d\u7684\u6240\u6709\u5269\u4f59\u8d44\u91d1\u5c06\u9000\u8fd8\u7ed9\u51fa\u8d44\u4eba\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u4ecd\u5728\u5bfb\u6c42\u5e2e\u52a9\u7684\u4eba\uff0c\u4e4c\u514b\u5170\u8bb0\u8005\u63a8\u8350\u4e86\u51e0\u4e2a\u6148\u5584\u673a\u6784\u548c\u5e73\u53f0\uff0c\u8fd9\u4e9b\u673a\u6784\u548c\u5e73\u53f0\u5c06\u4ece\u6350\u8d60\u4e2d\u53d7\u76ca\uff0c\u6bd4\u5982\u4e4c\u514b\u5170\u7ea2\u5341\u5b57\u4f1a\u3001\u513f\u7ae5\u4e4b\u58f0\u548c\u590d\u5174\u4e4c\u514b\u5170\u58eb\u5175\u3002Patreon\u4e0a\u8fd8\u67093000\u591a\u540d\u4e4c\u514b\u5170\u521b\u4f5c\u8005\uff0c\u8fd8\u6709\u6570\u5343\u4eba\u4f7f\u7528\u5176\u4ed6\u5e73\u53f0\uff0c\u4ed6\u4eec\u5c06\u53d7\u76ca\u4e8e\u6211\u4eec\u7684\u652f\u6301\u3002\n\u6211\u4eec\u5bf9\u5165\u4fb5\u4e4c\u514b\u5170\u611f\u5230\u9707\u60ca\u548c\u5fc3\u788e\u3002\u548c\u4e16\u754c\u5404\u5730\u7684\u8bb8\u591a\u4eba\u4e00\u6837\uff0c\u6211\u4eec\u6b63\u5728\u5bc6\u5207\u5173\u6ce8\u8fd9\u573a\u60b2\u5267\uff0c\u5e76\u5e0c\u671b\u4e4c\u514b\u5170\u4eba\u6c11\u7684\u5b89\u5168\u53d7\u5230\u635f\u5bb3\u3002", "note_en": "This morning, Patreon suspended an organization\u2019s page from our site called \u201cCome Back Alive\u201d because it violated our policies. The website of the organization says they use contributions to finance and train military personnel. Specifically, they claim to use funds they received for the following:\n \u201cfunds were used for\u2026 more than 1,500 tablets with software for Gunnya-Armor artillerymen,   230 quadcopters,   45 mobile surveillance systems\u2026, and   more than 60 military vehicles.\u201d\n \u201c  The organization also initiates the creation and implementation of new technical solutions ,\u201d including  \u201c  models of artillery weapons. \u201d\n \u201ctrained 350 snipers  , more than 2,000 sappers and more than   3,000 gunners,   and training is being conducted to train UAV operators.\u201d\n We don\u2019t allow Patreon to be used for funding weapons or military activity. It is a   violation of our policies , and so we have removed the page. All remaining funds in the account will be refunded to contributors.\n For those still looking to help, Ukrainian journalists have recommended several charities and platforms that would benefit from donations, such as the   Ukrainian Red Cross Society ,   Voices of Children , and   Revived Soldiers Ukraine . There are also 3,000+ Ukrainian creators on Patreon \u2013 and thousands more using other platforms \u2013 who would benefit from our support.\n We are shocked and heartbroken at the invasion of Ukraine. Like so many around the world, we are watching this tragedy closely and wishing for the safety of the Ukrainian people in harm\u2019s way.", "posttime": "2022-02-25 22:14:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d3b\u7740,removal,\u4e4c\u514b\u5170", "title": "\u5173\u4e8e\u79fb\u9664\u201c\u6d3b\u7740\u56de\u6765\u201d\u7684\u95ee\u9898", "title_en": "On the removal of Come Back Alive", "transed": 1, "url": "https://blog.patreon.com/on-the-removal-of-come-back-alive", "via": "", "real_tags": ["\u6d3b\u7740", "removal", "\u4e4c\u514b\u5170"]}]
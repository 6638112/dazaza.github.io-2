[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1069687, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u8fdb\u5165\u9006\u5411\u5de5\u7a0b\u4e4b\u524d\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u5bf9\u6211\u6765\u8bf4\u603b\u662f\u50cf\u662f\u9ed1\u9b54\u6cd5\u3002\u6211\u4e00\u76f4\u60f3\u77e5\u9053\u8fd9\u4e9b\u4e1c\u897f\u662f\u5982\u4f55\u5728\u5e55\u540e\u5de5\u4f5c\u7684\uff0c\u4e8c\u8fdb\u5236\u4ee3\u7801\u5982\u4f55\u5728 .exe \u6587\u4ef6\u4e2d\u8868\u793a\uff0c\u4ee5\u53ca\u5728\u4e0d\u8bbf\u95ee\u539f\u59cb\u6e90\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u4fee\u6539\u8fd9\u4e2a\u201c\u7f16\u8bd1\u4ee3\u7801\u201d\u662f\u591a\u4e48\u56f0\u96be\u3002\u4f46\u4e3b\u8981\u7684\u4ee4\u4eba\u751f\u754f\u7684\u969c\u788d\u4e4b\u4e00\u4f3c\u4e4e\u603b\u662f\u6c47\u7f16\u8bed\u8a00\uff0c\u5b83\u4f7f\u5927\u591a\u6570\u4eba\u4e0d\u6562\u5c1d\u8bd5\u5b66\u4e60\u8fd9\u4e2a\u9886\u57df\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u60f3\u5199\u8fd9\u7bc7\u76f4\u622a\u4e86\u5f53\u7684\u6587\u7ae0\u7684\u4e3b\u8981\u539f\u56e0\uff0c\u5b83\u53ea\u5305\u542b\u60a8\u5728\u5012\u8f66\u65f6\u9047\u5230\u7684\u6700\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u5c3d\u7ba1\u4e3a\u4e86\u7b80\u6d01\u800c\u9057\u6f0f\u4e86\u5173\u952e\u7ec6\u8282\uff0c\u5e76\u5047\u8bbe\u8bfb\u8005\u6709\u53cd\u5c04\u5728\u7ebf\u5bfb\u627e\u7b54\u6848\uff0c\u67e5\u627e\u5b9a\u4e49\uff0c\u66f4\u91cd\u8981\u7684\u662f\uff0c\u63d0\u51fa\u8981\u7ec3\u4e60\u7684\u793a\u4f8b/\u60f3\u6cd5/\u9879\u76ee\u3002\u76ee\u6807\u662f\u5e0c\u671b\u5f15\u5bfc\u6709\u62b1\u8d1f\u7684\u9006\u5411\u5de5\u7a0b\u5e08\uff0c\u5e76\u6fc0\u53d1\u66f4\u591a\u5730\u4e86\u89e3\u8fd9\u79cd\u770b\u4f3c\u96be\u4ee5\u6349\u6478\u7684\u6fc0\u60c5\u7684\u52a8\u529b\u3002\u6ce8\u610f\uff1a\u672c\u6587\u5047\u8bbe\u8bfb\u8005\u5177\u5907\u6709\u5173\u5341\u516d\u8fdb\u5236\u6570\u5b57\u7cfb\u7edf\u548c C \u7f16\u7a0b\u8bed\u8a00\u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u5e76\u4e14\u57fa\u4e8e 32 \u4f4d Windows \u53ef\u6267\u884c\u6848\u4f8b\u7814\u7a76 - \u7ed3\u679c\u53ef\u80fd\u56e0\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf/\u4f53\u7cfb\u7ed3\u6784\u800c\u5f02\u3002\u4f7f\u7528\u7f16\u8bd1\u8bed\u8a00\u7f16\u5199\u4ee3\u7801\u540e\uff0c\u4f1a\u8fdb\u884c\u7f16\u8bd1 (duh)\uff0c\u4ee5\u751f\u6210\u8f93\u51fa\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08\u4f8b\u5982 .exe \u6587\u4ef6\uff09\u3002\u7f16\u8bd1\u5668\u662f\u5b8c\u6210\u6b64\u4efb\u52a1\u7684\u590d\u6742\u7a0b\u5e8f\u3002\u5728\u7f16\u8bd1\u548c\u4f18\u5316\u751f\u6210\u7684\u673a\u5668\u4ee3\u7801\u4e4b\u524d\uff0c\u5b83\u4eec\u4f1a\u901a\u8fc7\u6700\u5c0f\u5316\u5176\u5927\u5c0f\u548c\u63d0\u9ad8\u5176\u6027\u80fd\uff08\u53ea\u8981\u9002\u7528\uff09\u6765\u786e\u4fdd\u60a8\u4e11\u964b\u4ee3\u7801\u7684\u8bed\u6cd5\u6b63\u786e\u3002\n\u6b63\u5982\u6211\u4eec\u6240\u8bf4\uff0c\u751f\u6210\u7684\u8f93\u51fa\u6587\u4ef6\u5305\u542b\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u53ea\u80fd\u7531 CPU \u201c\u7406\u89e3\u201d\uff0c\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u7cfb\u5217\u6309\u987a\u5e8f\u6267\u884c\u7684\u53d8\u957f\u6307\u4ee4 - \u4ee5\u4e0b\u662f\u5176\u4e2d\u4e00\u4e9b\u6307\u4ee4\u7684\u6837\u5b50\uff1a\u8fd9\u4e9b\u6307\u4ee4\u662f\u4e3b\u8981\u662f\u7b97\u672f\uff0c\u5b83\u4eec\u5728\u6267\u884c\u65f6\u64cd\u4f5c CPU \u5bc4\u5b58\u5668/\u6807\u5fd7\u4ee5\u53ca\u6613\u5931\u6027\u5b58\u50a8\u5668\u3002 CPU \u5bc4\u5b58\u5668\u51e0\u4e4e\u5c31\u50cf\u4e00\u4e2a\u4e34\u65f6\u6574\u6570\u53d8\u91cf\u2014\u2014\u5b83\u4eec\u7684\u6570\u91cf\u662f\u56fa\u5b9a\u7684\uff0c\u5b83\u4eec\u5b58\u5728\u662f\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u5feb\u901f\u8bbf\u95ee\uff0c\u4e0d\u50cf\u57fa\u4e8e\u5185\u5b58\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u5e2e\u52a9 CPU \u8ddf\u8e2a\u5176\u6570\u636e\uff08\u7ed3\u679c\u3001\u64cd\u4f5c\u6570\uff09 \u3001\u8ba1\u6570\u7b49\uff09\u5728\u6267\u884c\u671f\u95f4\u3002\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u4e00\u4e2a\u79f0\u4e3a FLAGS \u5bc4\u5b58\u5668\uff0832 \u4f4d\u4e0a\u7684 EFLAGS\uff09\u7684\u7279\u6b8a\u5bc4\u5b58\u5668\u7684\u5b58\u5728\uff0c\u5b83\u5305\u542b\u4e00\u5806\u6807\u5fd7\uff08\u5e03\u5c14\u6307\u6807\uff09\uff0c\u5b83\u4eec\u4fdd\u5b58\u6709\u5173 CPU \u72b6\u6001\u7684\u4fe1\u606f\uff0c\u5176\u4e2d\u5305\u62ec\u6709\u5173\u6700\u540e\u4e00\u6b21\u7b97\u672f\u7684\u8be6\u7ec6\u4fe1\u606f\u64cd\u4f5c\uff08\u96f6\uff1aZF\uff0c\u6ea2\u51fa\uff1aOF\uff0c\u5947\u5076\u6821\u9a8c\uff1aPF\uff0c\u7b26\u53f7\uff1aSF \u7b49\uff09\u3002\u5176\u4e2d\u4e00\u4e9b\u5bc4\u5b58\u5668\u4e5f\u53ef\u4ee5\u5728\u524d\u9762\u63d0\u5230\u7684\u6c47\u7f16\u6458\u5f55\u4e2d\u627e\u5230\uff0c\u5373\uff1aEAX\u3001ESP\uff08\u5806\u6808\u6307\u9488\uff09\u548c EBP\uff08\u57fa\u6307\u9488\uff09\u3002\u5f53 CPU \u6267\u884c\u4e1c\u897f\u65f6\uff0c\u5b83\u9700\u8981\u8bbf\u95ee\u5185\u5b58\u5e76\u4e0e\u5185\u5b58\u4ea4\u4e92\uff0c\u8fd9\u5c31\u662f\u5806\u6808\u548c\u5806\u7684\u4f5c\u7528\u51fa\u73b0\u7684\u65f6\u5019\u3002\u8fd9\u4e9b\u662f\uff08\u4e0d\u8be6\u7ec6\u4ecb\u7ecd\uff09\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u201c\u8ddf\u8e2a\u53d8\u91cf\u6570\u636e\u201d\u7684\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff1a\n\u4e24\u8005\u4e2d\u66f4\u7b80\u5355\u548c\u66f4\u5feb - \u5b83\u662f\u4e00\u4e2a\u7ebf\u6027\u8fde\u7eed LIFO\uff08\u540e\u8fdb\u5148\u51fa\uff09\u6570\u636e\u7ed3\u6784\uff0c\u5177\u6709\u63a8\u9001/\u5f39\u51fa\u673a\u5236\uff0c\u5b83\u7528\u4e8e\u8bb0\u4f4f\u51fd\u6570\u8303\u56f4\u7684\u53d8\u91cf\u3001\u53c2\u6570\u5e76\u8ddf\u8e2a\u8c03\u7528\uff08\u66fe\u7ecf\u542c\u8bf4\u8fc7\u5806\u6808\u8ddf\u8e2a\uff1f\uff09\u7136\u800c\uff0c\u5806\u662f\u975e\u5e38\u65e0\u5e8f\u7684\uff0c\u5e76\u4e14\u9002\u7528\u4e8e\u66f4\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u901a\u5e38\u7528\u4e8e\u52a8\u6001\u5206\u914d\uff0c\u5176\u4e2d\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u6700\u521d\u672a\u77e5\uff0c\u548c/\u6216\u5982\u679c\u5b83\u592a\u5927\uff0c\u548c/\u6216\u8005\u4ee5\u540e\u9700\u8981\u4fee\u6539\u3002\u6b63\u5982\u6211\u4e4b\u524d\u63d0\u5230\u7684\uff0c\u6c47\u7f16\u6307\u4ee4\u5177\u6709\u4e0d\u540c\u7684\u201c\u5b57\u8282\u5927\u5c0f\u201d\u548c\u4e0d\u540c\u6570\u91cf\u7684\u53c2\u6570\u3002\u53c2\u6570\u4e5f\u53ef\u4ee5\u662f\u7acb\u5373\u6570\uff08\u201c\u786c\u7f16\u7801\u201d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u6307\u4ee4\uff1a 55 push ebp \uff1b\u5927\u5c0f\uff1a1 \u5b57\u8282\uff0c\u53c2\u6570\uff1a register6A 01 push 1 \uff1b\u5927\u5c0f\uff1a2 \u4e2a\u5b57\u8282\uff0c\u53c2\u6570\uff1a\u7acb\u5373 \u8ba9\u6211\u4eec\u5feb\u901f\u6d4f\u89c8\u4e00\u4e0b\u6211\u4eec\u5c06\u8981\u770b\u5230\u7684\u4e00\u4e9b\u5e38\u89c1\u7684\u975e\u5e38\u5c0f\u7684\u96c6\u5408 - \u8bf7\u968f\u610f\u8fdb\u884c\u81ea\u5df1\u7684\u7814\u7a76\u4ee5\u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff1a push value ;\u5c06\u4e00\u4e2a\u503c\u538b\u5165\u5806\u6808\uff08\u5c06 ESP \u51cf 4\uff0c\u5373\u4e00\u4e2a\u5806\u6808\u201c\u5355\u4f4d\u201d\u7684\u5927\u5c0f\uff09\u3002\nmov \u76ee\u7684\u5730, [\u8868\u8fbe\u5f0f] ;\u5c06\u901a\u8fc7\u201c\u5bc4\u5b58\u5668\u8868\u8fbe\u5f0f\u201d\uff08\u5355\u4e2a\u5bc4\u5b58\u5668\u6216\u6d89\u53ca\u4e00\u4e2a\u6216\u591a\u4e2a\u5bc4\u5b58\u5668\u7684\u7b97\u672f\u8868\u8fbe\u5f0f\uff09\u89e3\u6790\u7684\u5185\u5b58\u5730\u5740\u4e2d\u7684\u503c\u590d\u5236\u5230\u5bc4\u5b58\u5668\u4e2d\u3002 jz/je \u76ee\u7684\u5730\uff1b\u5982\u679c\u8bbe\u7f6e\u4e86 ZF\uff08\u96f6\u6807\u5fd7\uff09\uff0c\u5219\u8df3\u8f6c\u5230\u4ee3\u7801\u4f4d\u7f6e\u3002 cmp\u64cd\u4f5c\u65701\uff0c\u64cd\u4f5c\u65702\uff1b\u6bd4\u8f83 2 \u4e2a\u64cd\u4f5c\u6570\uff0c\u5982\u679c\u76f8\u7b49\u5219\u8bbe\u7f6e ZF\u3002\u6ce8\u610f\uff1a\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230 x86 \u672f\u8bed\u4e2d\u201c\u76f8\u7b49\u201d\u548c\u201c\u96f6\u201d\u8fd9\u4e24\u4e2a\u8bcd\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528\u2014\u2014\u8fd9\u662f\u56e0\u4e3a\u6bd4\u8f83\u6307\u4ee4\u5728\u5185\u90e8\u6267\u884c\u51cf\u6cd5\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c 2 \u4e2a\u64cd\u4f5c\u6570\u76f8\u7b49\uff0c\u5219\u8bbe\u7f6e ZF\u3002\u73b0\u5728\u6211\u4eec\u5bf9\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u5143\u7d20\u6709\u4e86\u4e00\u4e2a\u5927\u81f4\u7684\u4e86\u89e3\uff0c\u8ba9\u6211\u4eec\u719f\u6089\u4e00\u4e0b\u5728\u9006\u5411\u5de5\u7a0b\u666e\u901a\u65e5\u5e38 32 \u4f4d PE \u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\u53ef\u80fd\u9047\u5230\u7684\u6307\u4ee4\u6a21\u5f0f\u3002\u51fd\u6570\u5e8f\u8a00\u662f\u5d4c\u5165\u5728\u5927\u591a\u6570\u51fd\u6570\u5f00\u5934\u7684\u4e00\u4e9b\u521d\u59cb\u4ee3\u7801\uff0c\u5b83\u7528\u4e8e\u4e3a\u8be5\u51fd\u6570\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u5806\u6808\u6846\u67b6\u3002 55 \u63a8 ebp ;\u5728 stack8B EC mov ebp, esp \u4e2d\u4fdd\u7559\u8c03\u7528\u8005\u51fd\u6570\u7684\u57fa\u6307\u9488\uff1b\u8c03\u7528\u51fd\u6570\u7684\u5806\u6808\u6307\u9488\u6210\u4e3a\u57fa\u6307\u9488\uff08\u65b0\u5806\u6808\u5e27\uff0983 EC XX sub esp, X ;\u5c06\u5806\u6808\u6307\u9488\u8c03\u6574 X \u5b57\u8282\uff0c\u4e3a\u5c40\u90e8\u53d8\u91cf\u4fdd\u7559\u7a7a\u95f4\n\u5c3e\u58f0\u4e0e\u5e8f\u8a00\u5b8c\u5168\u76f8\u53cd\u2014\u2014\u5b83\u5728\u8fd4\u56de\u8c03\u7528\u8005\u51fd\u6570\u4e4b\u524d\u64a4\u6d88\u5176\u6b65\u9aa4\u4ee5\u6062\u590d\u8c03\u7528\u8005\u51fd\u6570\u7684\u5806\u6808\u5e27\uff1a 8B E5 mov esp, ebp ;\u6062\u590d\u8c03\u7528\u51fd\u6570\u7684\u5806\u6808\u6307\u9488\uff08\u5f53\u524d\u57fa\u6307\u9488\uff09 5D pop ebp \uff1b\u4ece stackC3 retn \u6062\u590d\u57fa\u6307\u9488\uff1b\u8fd4\u56de\u8c03\u7528\u8005\u51fd\u6570 \u73b0\u5728\uff0c\u60a8\u53ef\u80fd\u60f3\u77e5\u9053 - \u51fd\u6570\u5982\u4f55\u76f8\u4e92\u901a\u4fe1\uff1f\u8c03\u7528\u51fd\u6570\u65f6\u5982\u4f55\u53d1\u9001/\u8bbf\u95ee\u53c2\u6570\uff0c\u4ee5\u53ca\u5982\u4f55\u63a5\u6536\u8fd4\u56de\u503c\uff1f\u8fd9\u6b63\u662f\u6211\u4eec\u6709\u8c03\u7528\u7ea6\u5b9a\u7684\u539f\u56e0\u3002\u8c03\u7528\u7ea6\u5b9a\u57fa\u672c\u4e0a\u662f\u7528\u4e8e\u4e0e\u51fd\u6570\u901a\u4fe1\u7684\u534f\u8bae\uff0c\u5b83\u4eec\u6709\u4e00\u4e9b\u53d8\u4f53\uff0c\u4f46\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u539f\u7406\u3002\u6211\u4eec\u5c06\u67e5\u770b __cdecl\uff08C \u58f0\u660e\uff09\u7ea6\u5b9a\uff0c\u8fd9\u662f\u7f16\u8bd1 C \u4ee3\u7801\u65f6\u7684\u6807\u51c6\u7ea6\u5b9a\u3002\u5728 __cdecl\uff0832 \u4f4d\uff09\u4e2d\uff0c\u51fd\u6570\u53c2\u6570\u5728\u5806\u6808\u4e0a\u4f20\u9012\uff08\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u63a8\u9001\uff09\uff0c\u800c\u8fd4\u56de\u503c\u5728 EAX \u5bc4\u5b58\u5668\u4e2d\u8fd4\u56de\uff08\u5047\u8bbe\u5b83\u4e0d\u662f\u6d6e\u70b9\u6570\uff09\u3002 6A 03 push 36A 02 push 26A 01 push 1E8 XX XX XX XX \u8c03\u7528\u51fd\u6570\n\u5047\u8bbe func() \u53ea\u662f\u5bf9\u53c2\u6570\u8fdb\u884c\u52a0\u6cd5\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u5b83\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a int __cdecl func(int, int, int): prologue:55 push ebp ;\u4fdd\u5b58\u57fa\u6307\u94888B EC mov ebp, esp ;\u65b0\u7684\u6808\u5e27\u4f53\uff1a8B 45 08 mov eax, [ebp+8] ;\u5c06\u7b2c\u4e00\u4e2a\u53c2\u6570\u52a0\u8f7d\u5230 EAX\uff08\u8fd4\u56de\u503c\uff0903 45 0C add eax, [ebp+0Ch] ;\u6dfb\u52a0\u7b2c\u4e8c\u4e2a\u53c2\u6570 03 45 10 \u6dfb\u52a0 eax, [ebp+10h] ;\u6dfb\u52a0\u7b2c\u4e09\u4e2a\u53c2\u6570\u7ed3\u8bed\uff1a5D pop ebp ;\u6062\u590d\u57fa\u6307\u9488C3 retn ;\u8fd4\u56de\u7ed9\u6765\u7535\u8005 \u5982\u679c\u60a8\u4e00\u76f4\u5728\u5173\u6ce8\u4f46\u4ecd\u7136\u611f\u5230\u56f0\u60d1\uff0c\u60a8\u53ef\u80fd\u4f1a\u95ee\u81ea\u5df1\u4ee5\u4e0b\u4e24\u4e2a\u95ee\u9898\u4e2d\u7684\u4e00\u4e2a\uff1a 1) \u4e3a\u4ec0\u4e48\u6211\u4eec\u5fc5\u987b\u5c06 EBP \u8c03\u6574 8 \u624d\u80fd\u5f97\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1f\u5982\u679c\u4f60\u68c0\u67e5\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u8c03\u7528\u6307\u4ee4\u7684\u5b9a\u4e49\uff0c\u4f60\u4f1a\u610f\u8bc6\u5230\uff0c\u5728\u5185\u90e8\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5c06 EIP \u538b\u5165\u5806\u6808\u3002\u5982\u679c\u60a8\u8fd8\u68c0\u67e5 push \u7684\u5b9a\u4e49\uff0c\u60a8\u4f1a\u53d1\u73b0\u5b83\u5c06 ESP\uff08\u5728\u5e8f\u8a00\u4e4b\u540e\u590d\u5236\u5230 EBP\uff09\u51cf\u5c11\u4e86 4 \u4e2a\u5b57\u8282\u3002\u53e6\u5916\uff0cprologue \u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u4e5f\u662f push\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e86 4 \u7684 2 \u6b21\u51cf\u91cf\uff0c\u56e0\u6b64\u9700\u8981\u52a0\u4e0a 8\u3002 2\uff09prologue \u548cepilogue \u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\u5b83\u4eec\u770b\u8d77\u6765\u662f\u201c\u622a\u65ad\u201d\u7684\uff1f\u8fd9\u4ec5\u4ec5\u662f\u56e0\u4e3a\u6211\u4eec\u5728\u51fd\u6570\u6267\u884c\u671f\u95f4\u6ca1\u6709\u4f7f\u7528\u8fc7\u5806\u6808\u2014\u2014\u5982\u679c\u4f60\u6ce8\u610f\u5230\u4e86\uff0c\u6211\u4eec\u6839\u672c\u6ca1\u6709\u4fee\u6539 ESP\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e5f\u4e0d\u9700\u8981\u6062\u590d\u5b83\u3002\n\u4e3a\u4e86\u6f14\u793a\u6d41\u7a0b\u63a7\u5236\u6c47\u7f16\u6307\u4ee4\uff0c\u6211\u60f3\u518d\u6dfb\u52a0\u4e00\u4e2a\u793a\u4f8b\u6765\u5c55\u793a\u5982\u4f55\u5c06 if \u6761\u4ef6\u7f16\u8bd1\u4e3a\u6c47\u7f16\u3002 void print_equal ( int a , int b ) { if ( a == b ) { printf ( &quot;equal&quot;); } else { printf ( &quot;nah&quot; );\u7f16\u8bd1\u540e\uff0c\u8fd9\u662f\u6211\u5728 IDA \u7684\u5e2e\u52a9\u4e0b\u5f97\u5230\u7684\u53cd\u6c47\u7f16\uff1a void __cdecl print_equal(int, int): 10000000 55 push ebp 10000001 8B EC mov ebp, esp 10000003 8B 45 08 mov eax, ;\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u53c2\u6570 10000006 3B 45 0C cmp eax, [ebp+0Ch] ;\u5c06\u5176\u4e0e\u7b2c\u4e8c\u4e2a \u250c\u2505 10000009 75 0F jnz short loc_1000001A \u8fdb\u884c\u6bd4\u8f83\uff1b\u5982\u679c\u4e0d\u76f8\u7b49\u5219\u8df3\u8f6c \u250a 1000000B 68 94 67 00 10 \u63a8\u504f\u79fb aEqual ; \u201c\u76f8\u7b49\u201d \u250a 10000010 E8 DB F8 FF FF call _printf \u250a 10000015 83 C4 04 add esp, 4\u250c\u2500\u250a\u2500 10000018 EB 0D jmp short loc_10000027\u250210\u250a10\u250a027\u25020\u250a10\u250a027\u25020\u250a10\u250a10\u250a10\u250a10\u250a10\u250a10\u250a10\u250a10\u250a10\u250a10\u250a10\u250a7 &quot;nah&quot;\u2502 1000001F E8 CC F8 FF FF call _printf\u2502 10000024 83 C4 04 add esp, 4\u2502\u2514\u2500\u2500 loc_10000027: 10000027 5D pop ebp 10000028 \u8bd5\u8bd5\u8fd9\u4e2a\u7b80\u5355\u7684C3\u8f93\u51fa\u4e3a\u4e86\uff0c\u6211\u5df2\u7ecf\u66f4\u6539\u4e86\u771f\u5b9e\u5730\u5740\u5e76\u5c06\u51fd\u6570\u6539\u4e3a\u4ece 10000000 \u5f00\u59cb\uff09\u3002\u5982\u679c\u60a8\u60f3\u77e5\u9053 add esp, 4 \u90e8\u5206\uff0c\u5b83\u53ea\u662f\u5c06 ESP \u8c03\u6574\u56de\u5176\u521d\u59cb\u503c\uff08\u4e0e pop \u6548\u679c\u76f8\u540c\uff0c\u4f46\u4e0d\u4fee\u6539\u4efb\u4f55\u5bc4\u5b58\u5668\uff09\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u63a8\u9001 printf \u5b57\u7b26\u4e32\u53c2\u6570\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u7ee7\u7eed\u8ba8\u8bba\u6570\u636e\u662f\u5982\u4f55\u5b58\u50a8\u7684\uff08\u5c24\u5176\u662f\u6574\u6570\u548c\u5b57\u7b26\u4e32\uff09\u3002\n\u5b57\u8282\u5e8f\u662f\u8868\u793a\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u503c\u7684\u5b57\u8282\u5e8f\u5217\u7684\u987a\u5e8f\u3002\u4f5c\u4e3a\u53c2\u8003\uff0cx86 \u7cfb\u5217\u5904\u7406\u5668\uff08\u60a8\u53ef\u4ee5\u627e\u5230\u7684\u51e0\u4e4e\u6240\u6709\u8ba1\u7b97\u673a\u4e0a\u7684\u5904\u7406\u5668\uff09\u603b\u662f\u4f7f\u7528\u5c0f\u7aef\u3002\u4e3a\u4e86\u7ed9\u4f60\u4e00\u4e2a\u5173\u4e8e\u8fd9\u4e2a\u6982\u5ff5\u7684\u771f\u5b9e\u4f8b\u5b50\uff0c\u6211\u7f16\u8bd1\u4e86\u4e00\u4e2a Visual Studio C++ \u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\uff0c\u5728\u90a3\u91cc\u6211\u58f0\u660e\u4e86\u4e00\u4e2a int \u53d8\u91cf\uff0c\u8d4b\u503c\u4e3a 1337\uff0c\u7136\u540e\u6211\u5728\u4e3b\u51fd\u6570\u4e0a\u4f7f\u7528 printf() \u6253\u5370\u4e86\u53d8\u91cf\u7684\u5730\u5740.\u7136\u540e\u6211\u8fd0\u884c\u9644\u52a0\u5230\u8c03\u8bd5\u5668\u7684\u7a0b\u5e8f\uff0c\u4ee5\u68c0\u67e5\u5185\u5b58\u5341\u516d\u8fdb\u5236\u89c6\u56fe\u4e0a\u6253\u5370\u53d8\u91cf\u7684\u5730\u5740\uff0c\u8fd9\u662f\u6211\u83b7\u5f97\u7684\u7ed3\u679c\uff1a\u8be6\u7ec6\u8bf4\u660e\u8fd9\u4e00\u70b9 - int \u53d8\u91cf\u957f\u5ea6\u4e3a 4 \u4e2a\u5b57\u8282\uff0832 \u4f4d\uff09\uff08\u4ee5\u9632\u4e07\u4e00\u4e0d\u77e5\u9053\uff09\uff0c\u6240\u4ee5\u8fd9\u610f\u5473\u7740\u5982\u679c\u53d8\u91cf\u4ece\u5730\u5740 D2FCB8 \u5f00\u59cb\uff0c\u5b83\u5c06\u5728 D2FCBC (+4) \u4e4b\u524d\u7ed3\u675f\u3002\u5341\u8fdb\u5236\uff1a1337 -&gt; \u5341\u516d\u8fdb\u5236\uff1a539 -&gt; \u5b57\u8282\uff1a00 00 05 39 -&gt; little-endian\uff1a39 05 00 00 \u8fd9\u90e8\u5206\u5f88\u6709\u8da3\uff0c\u4f46\u76f8\u5bf9\u7b80\u5355\u3002\u60a8\u5728\u8fd9\u91cc\u5e94\u8be5\u77e5\u9053\u7684\u662f\uff0c\u6574\u6570\u7b7e\u540d\uff08\u6b63/\u8d1f\uff09\u901a\u5e38\u662f\u5728\u79f0\u4e3a\u4e8c\u8fdb\u5236\u8865\u7801\u7684\u6982\u5ff5\u7684\u5e2e\u52a9\u4e0b\u5728\u8ba1\u7b97\u673a\u4e0a\u5b8c\u6210\u7684\u3002\n\u5b83\u7684\u8981\u70b9\u662f\u6574\u6570\u7684\u6700\u4f4e/\u524d\u534a\u90e8\u5206\u662f\u4e3a\u6b63\u6570\u4fdd\u7559\u7684\uff0c\u800c\u6700\u9ad8/\u540e\u534a\u90e8\u5206\u662f\u4e3a\u8d1f\u6570\u4fdd\u7559\u7684\uff0c\u8fd9\u662f\u5341\u516d\u8fdb\u5236\u4e2d\u7684\u6837\u5b50\uff0c\u5bf9\u4e8e 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff08\u7a81\u51fa\u663e\u793a = \u5341\u516d\u8fdb\u5236, \u62ec\u53f7\u5185 = \u5341\u8fdb\u5236\uff09\uff1a\u5982\u679c\u60a8\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u7684\u4ef7\u503c\u603b\u662f\u5728\u4e0a\u5347\u3002\u65e0\u8bba\u6211\u4eec\u4ee5\u5341\u516d\u8fdb\u5236\u8fd8\u662f\u5341\u8fdb\u5236\u4e0a\u5347\u3002\u8fd9\u5c31\u662f\u8fd9\u4e2a\u6982\u5ff5\u7684\u5173\u952e\u70b9\u2014\u2014\u7b97\u672f\u8fd0\u7b97\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u7279\u6b8a\u7684\u4e8b\u60c5\u6765\u5904\u7406\u7b7e\u540d\uff0c\u4ed6\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u6240\u6709\u503c\u89c6\u4e3a\u65e0\u7b26\u53f7/\u6b63\u6570\uff0c\u7ed3\u679c\u4ecd\u7136\u4f1a\u88ab\u6b63\u786e\u89e3\u91ca\uff08\u53ea\u8981\u6211\u4eec\u4e0d\u53bbINT_MAX \u6216 INT_MIN \u4e4b\u5916\uff09\uff0c\u8fd9\u662f\u56e0\u4e3a\u6574\u6570\u4e5f\u4f1a\u5728\u8bbe\u8ba1\u4e0a\u6ea2\u51fa/\u4e0b\u6ea2\u65f6\u201c\u7ffb\u8f6c\u201d\uff0c\u6709\u70b9\u50cf\u6a21\u62df\u91cc\u7a0b\u8868\u3002\u63d0\u793a\uff1aWindows \u8ba1\u7b97\u5668\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5de5\u5177 - \u60a8\u53ef\u4ee5\u5c06\u5176\u8bbe\u7f6e\u4e3a\u7a0b\u5e8f\u5458\u6a21\u5f0f\u5e76\u5c06\u5927\u5c0f\u8bbe\u7f6e\u4e3a DWORD\uff084 \u5b57\u8282\uff09\uff0c\u7136\u540e\u8f93\u5165\u8d1f\u5341\u8fdb\u5236\u503c\u5e76\u4ee5\u5341\u516d\u8fdb\u5236\u548c\u4e8c\u8fdb\u5236\u5f62\u5f0f\u663e\u793a\u5b83\u4eec\uff0c\u5e76\u4eab\u53d7\u5bf9\u5b83\u4eec\u6267\u884c\u64cd\u4f5c\u7684\u4e50\u8da3\u3002\u5728 C \u4e2d\uff0c\u5b57\u7b26\u4e32\u5b58\u50a8\u4e3a\u5b57\u7b26\u6570\u7ec4\uff0c\u56e0\u6b64\uff0c\u8fd9\u91cc\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\uff0c\u9664\u4e86\u79f0\u4e3a\u7a7a\u7ec8\u6b62\u7684\u4e1c\u897f\u3002\u5982\u679c\u60a8\u60f3\u77e5\u9053 strlen() \u5982\u4f55\u80fd\u591f\u77e5\u9053\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0c\u8fd9\u975e\u5e38\u7b80\u5355 - \u5b57\u7b26\u4e32\u6709\u4e00\u4e2a\u6307\u793a\u5176\u7ed3\u675f\u7684\u5b57\u7b26\uff0c\u5373\u7a7a\u5b57\u8282/\u5b57\u7b26 - 00 \u6216 &#39;\\0&#39;\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5728 C \u4ee3\u7801\u4e2d\u58f0\u660e\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\uff0c\u7136\u540e\u5728 Visual Studio \u4e2d\u5c06\u9f20\u6807\u60ac\u505c\u5728\u5b83\u4e0a\u9762\uff0c\u5b83\u4f1a\u544a\u8bc9\u4f60\u751f\u6210\u7684\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u6b63\u5982\u4f60\u6240\u770b\u5230\u7684\uff0c\u7531\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u5b83\u6bd4\u201c\u53ef\u89c1\u201d\u591a\u4e00\u4e2a\u5143\u7d20&#39; \u5b57\u7b26\u4e32\u5927\u5c0f\u3002\u6ce8\u610f\uff1a\u5b57\u8282\u5e8f\u6982\u5ff5\u4e0d\u9002\u7528\u4e8e\u6570\u7ec4\uff0c\u4ec5\u9002\u7528\u4e8e\u5355\u4e2a\u53d8\u91cf\u3002\u56e0\u6b64\uff0c\u5185\u5b58\u4e2d\u7684\u5b57\u7b26\u987a\u5e8f\u5728\u8fd9\u91cc\u662f\u6b63\u5e38\u7684 - \u4ece\u4f4e\u5230\u9ad8\u3002\n\u65e2\u7136\u60a8\u77e5\u9053\u4e86\u6240\u6709\u8fd9\u4e9b\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u5c31\u53ef\u4ee5\u5f00\u59cb\u7406\u89e3\u4e00\u4e9b\u673a\u5668\u4ee3\u7801\uff0c\u5e76\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u7528\u60a8\u7684\u5927\u8111\u6a21\u62df CPU\u3002\u8ba9\u6211\u4eec\u4ee5 print_equal() \u4e3a\u4f8b\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u53ea\u5173\u6ce8 printf() \u8c03\u7528\u6307\u4ee4\u3002 void print_equal(int, int):... 10000010 E8 DB F8 FF FF call _printf... 1000001F E8 CC F8 FF FF call _printf \u4f60\u53ef\u80fd\u60f3\u77e5\u9053 - \u7b49\u4e00\u4e0b\uff0c\u5982\u679c\u8fd9\u4e9b\u662f\u76f8\u540c\u7684\u6307\u4ee4\uff0c\u90a3\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u7684\u5b57\u8282\u4e0d\u540c\u5417\uff1f\u90a3\u662f\u56e0\u4e3a\uff0c\u8c03\u7528\uff08\u548c jmp\uff09\u6307\u4ee4\uff08\u901a\u5e38\uff09\u5c06\u504f\u79fb\u91cf\uff08\u76f8\u5bf9\u5730\u5740\uff09\u4f5c\u4e3a\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u7edd\u5bf9\u5730\u5740\u3002\u504f\u79fb\u91cf\u57fa\u672c\u4e0a\u662f\u5f53\u524d\u4f4d\u7f6e\u548c\u76ee\u7684\u5730\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u662f\u8d1f\u6570\u6216\u6b63\u6570\u3002\u5982\u60a8\u6240\u89c1\uff0c\u91c7\u7528 32 \u4f4d\u504f\u79fb\u91cf\u7684\u8c03\u7528\u6307\u4ee4\u7684\u64cd\u4f5c\u7801\u662f E8\uff0c\u540e\u8ddf\u6240\u8ff0\u504f\u79fb\u91cf - \u8fd9\u6784\u6210\u4e86\u5b8c\u6574\u7684\u6307\u4ee4\uff1aE8 XX XX XX XX\u3002\n\u62ff\u51fa\u4f60\u7684\u8ba1\u7b97\u5668\uff0c\u4f60\u600e\u4e48\u8fd9\u4e48\u65e9\u5c31\u5173\u4e86\uff1f\uff01\u5e76\u8ba1\u7b97\u4e24\u6761\u6307\u4ee4\u7684\u504f\u79fb\u91cf\u4e4b\u95f4\u7684\u5dee\u5f02\uff08\u4e0d\u8981\u5fd8\u8bb0\u5b57\u8282\u5e8f\uff09\u3002\u4f60\u4f1a\u6ce8\u610f\u5230\u8fd9\u4e2a\u5dee\u5f02\uff08\u7684\u7edd\u5bf9\u503c\uff09\u4e0e\u6307\u4ee4\u5730\u5740\u4e4b\u95f4\u7684\u5dee\u5f02\uff081000001F - 10000010 = F\uff09\u76f8\u540c\uff1a\u6211\u4eec\u5e94\u8be5\u6dfb\u52a0\u7684\u53e6\u4e00\u4e2a\u5c0f\u7ec6\u8282\u662fCPU\u53ea\u5728\u4e4b\u540e\u6267\u884c\u4e00\u6761\u6307\u4ee4\u5b8c\u5168\u201c\u8bfb\u53d6\u201d\u5b83\uff0c\u8fd9\u610f\u5473\u7740\u5f53 CPU \u5f00\u59cb\u201c\u6267\u884c\u201d\u65f6\uff0cEIP\uff08\u6307\u4ee4\u6307\u9488\uff09\u5df2\u7ecf\u6307\u5411\u8981\u6267\u884c\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u504f\u79fb\u5b9e\u9645\u4e0a\u4f1a\u8003\u8651\u5230\u8fd9\u79cd\u884c\u4e3a\uff0c\u8fd9\u610f\u5473\u7740\u4e3a\u4e86\u83b7\u5f97\u76ee\u6807\u51fd\u6570\u7684\u771f\u5b9e\u5730\u5740\uff0c\u6211\u4eec\u8fd8\u5fc5\u987b\u6dfb\u52a0\u8c03\u7528\u6307\u4ee4\u7684\u5927\u5c0f\uff1a 5. \u73b0\u5728\u8ba9\u6211\u4eec\u5e94\u7528\u6240\u6709\u8fd9\u4e9b\u6b65\u9aa4\u6765\u89e3\u51b3printf()\u5728\u4f8b\u5b50\u4e2d\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\uff1a 1) \u4ece\u6307\u4ee4\u4e2d\u63d0\u53d6\u504f\u79fb\u91cf\uff1aE8 (DB F8 FF FF) -&gt; FFFFF8DB (-1829) ...\u250c\u2500\u2500\u2500 10000018 EB 0D jmp short loc_10000027 ...\u2514\u2500\u2500 loc_10000027: 10000027 5D pop ebp...\n\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u552f\u4e00\u7684\u533a\u522b\u662f EB XX \u662f\u4e00\u4e2a\u77ed\u7248\u672c\u7684 jmp \u6307\u4ee4\u2014\u2014\u8fd9\u610f\u5473\u7740\u5b83\u53ea\u9700\u8981\u4e00\u4e2a 8 \u4f4d\uff081 \u4e2a\u5b57\u8282\uff09\u7684\u504f\u79fb\u91cf\u3002\u800c\u5df2\uff01\u60a8\u73b0\u5728\u5e94\u8be5\u6709\u8db3\u591f\u7684\u4fe1\u606f\uff08\u5e0c\u671b\u8fd8\u6709\u52a8\u529b\uff09\u5f00\u59cb\u9006\u5411\u5de5\u7a0b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u65c5\u7a0b\u3002\u9996\u5148\u7f16\u5199\u865a\u62df C \u4ee3\u7801\uff0c\u7f16\u8bd1\u5e76\u8c03\u8bd5\u5b83\uff0c\u540c\u65f6\u5355\u6b65\u6267\u884c\u53cd\u6c47\u7f16\u6307\u4ee4\uff08\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0cVisual Studio \u5141\u8bb8\u60a8\u6267\u884c\u6b64\u64cd\u4f5c\uff09\u3002\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5728 Ghidra \u548c IDA \u7b49\u53cd\u6c47\u7f16\u5668\u548c x64dbg \u7b49\u8c03\u8bd5\u5668\u7684\u5e2e\u52a9\u4e0b\uff0c\u5c1d\u8bd5\u4f7f\u7528\u5c01\u95ed\u6e90\u4ee3\u7801\u7684\u672c\u673a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u6ce8\u610f\uff1a\u5982\u679c\u60a8\u53d1\u73b0\u672c\u6587\u7684\u4fe1\u606f\u4e0d\u51c6\u786e\u6216\u6709\u6539\u8fdb\u7684\u7a7a\u95f4\uff0c\u5e76\u5e0c\u671b\u6539\u8fdb\u5b83\uff0c\u8bf7\u968f\u65f6\u5728 GitHub \u4e0a\u63d0\u4ea4\u62c9\u53d6\u8bf7\u6c42\u3002", "note_en": "Before I got into reverse engineering, executables always seemed like black magic to me. I always wondered how stuff worked under the hood, and how binary code is represented inside .exe files, and how hard it is to modify this \u2018compiled code\u2019 without access to the original source code.\n  But one of the main intimidating hurdles always seemed to be the assembly language, it\u2019s the thing that scares most people away from trying to learn about this field.\n  That\u2019s the main reason why I thought of writing this straight-to-the-point article that only contains the essential stuff that you encounter the most when reversing, albeit missing crucial details for the sake of brevity, and assumes the reader has a reflex of finding answers online, looking up definitions, and more importantly, coming up with examples/ideas/projects to practice on.\n  The goal is to hopefully guide an aspiring reverse engineer and arouse motivation towards learning more about this seemingly elusive passion.\n  Note: This article assumes the reader has elementary knowledge regarding the  hexadecimal numeral system, as well as the  C programming language, and is based on a 32-bit Windows executable case study - results might differ across different OSes/architectures.\n      After writing code using a  compiled language, a compilation takes place  (duh), in order to generate the output binary file (an example of such is an .exe file).\n    Compilers are sophisticated programs which do this task. They make sure the syntax of your  ugly code is correct, before compiling and optimizing the resulting machine code by minimizing its size and improving its performance, whenever applicable.\n    As we were saying, the resulting output file contains binary code, which can only be \u2018understood\u2019 by a CPU, it\u2019s essentially a succession of varying-length instructions to be executed in order - here\u2019s what some of them look like:\n    These instructions are predominantly arithmetical, and they manipulate CPU registers/flags as well as volatile memory, as they\u2019re executed.\n    A CPU register is almost like a temporary integer variable - there\u2019s a small fixed number of them, and they exist because they\u2019re quick to access, unlike memory-based variables, and they help the CPU keep track of its data (results, operands, counts, etc.) during execution.\n  It\u2019s important to note the presence of a special register called the   FLAGS register ( EFLAGS on 32-bit), which houses a bunch of flags (boolean indicators), which hold information about the state of the CPU, which include details about the last arithmetic operation (zero:  ZF, overflow:  OF, parity:  PF, sign:  SF, etc.).\n    Some of these registers can also be spotted on the assembly excerpt mentioned  previously, namely:  EAX,  ESP (stack pointer) and  EBP (base pointer).\n    As the CPU executes stuff, it needs to access and interact with memory, that\u2019s when the role of the  stack and the  heap comes.\n  These are (without getting into too much detail) the 2 main ways of \u2018keeping track of variable data\u2019 during the execution of a program:\n    The simpler and faster of the two - it\u2019s a linear contiguous LIFO (last in = first out) data structure with a push/pop mechanism, it serves to remember function-scoped variables, arguments, and keeps track of calls (ever heard of a  stack trace?)\n    The heap, however, is pretty unordered, and is for more complicated data structures, it\u2019s typically used for dynamic allocations, where the size of the buffer isn\u2019t initially known, and/or if it\u2019s too big, and/or needs to be modified later.\n    As I\u2019ve mentioned earlier, assembly instructions have a varying \u2018byte-size\u2019, and a varying number of arguments.\n  Arguments can also be either immediate (\u2018hardcoded\u2019), or they can be registers, depending on the instruction:\n  55 push ebp ; size: 1 byte, argument: register6A 01 push 1 ; size: 2 bytes, argument: immediate\n  Let\u2019s quickly run through a very small set of some of the common ones we\u2019ll get to see - feel free to do your own research for more detail:\n    push  value  ; pushes a value into the stack (decrements  ESP by 4, the size of one stack \u2018unit\u2019).\n    mov  destination, [ expression] ;  copies a value from a memory address resolved from a \u2018register expression\u2019 (single register or arithmetic expression involving one or more registers) into a register.\n    jz/je  destination ;  jumps into a code location if  ZF (the zero flag) is set.\n    cmp  operand1,  operand2 ;  compares the 2 operands and sets  ZF if they\u2019re equal.\n      Note: You might notice the words \u2018equal\u2019 and \u2018zero\u2019 being used interchangeably in x86 terminology - that\u2019s because comparison instructions internally perform a subtraction, which means if the 2 operands are equal,  ZF is set.\n    Now that we have a rough idea of the main elements used during the execution of a program, let\u2019s get familiarized with the patterns of instructions that you can encounter reverse engineering your average everyday 32-bit  PE binary.\n    A  function prologue is some initial code embedded in the beginning of most functions, it serves to set up a new stack frame for said function.\n    55 push ebp ; preserve caller function&#39;s base pointer in stack8B EC mov ebp, esp ; caller function&#39;s stack pointer becomes base pointer (new stack frame)83 EC XX sub esp, X ; adjust the stack pointer by X bytes to reserve space for local variables\n    The  epilogue is simply the opposite of the prologue - it undoes its steps to restore the stack frame of the caller function, before it returns to it:\n  8B E5 mov esp, ebp ; restore caller function&#39;s stack pointer (current base pointer) 5D pop ebp ; restore base pointer from the stackC3 retn ; return to caller function\n  Now at this point, you might be wondering - how do functions talk to each other? How exactly do you send/access arguments when calling a function, and how do you receive the return value? That\u2019s precisely why we have calling conventions.\n    A  calling convention is basically a protocol used to communicate with functions, there\u2019s a few variations of them, but they share the same principle.\n  We will be looking at the  __cdecl (C declaration) convention, which is the standard one when compiling C code.\n  In __cdecl (32-bit), function arguments are passed on the stack (pushed in reverse order), while the return value is returned in the  EAX register (assuming it\u2019s not a float).\n    6A 03 push 36A 02 push 26A 01 push 1E8 XX XX XX XX call func\n    Assuming  func() simply does an addition on the arguments and returns the result, it would probably look like this:\n  int __cdecl func(int, int, int): prologue:55 push ebp ; save base pointer8B EC mov ebp, esp ; new stack frame body:8B 45 08 mov eax, [ebp+8] ; load first argument to EAX (return value)03 45 0C add eax, [ebp+0Ch] ; add 2nd argument03 45 10 add eax, [ebp+10h] ; add 3rd argument epilogue:5D pop ebp ; restore base pointerC3 retn ; return to caller\n  Now if you\u2019ve been paying attention and you\u2019re still confused, you might be asking yourself one of these 2 questions:\n  1) Why do we have to adjust  EBP by 8 to get to the first argument?\n  If you  check the definition of the  call instruction we mentioned earlier, you\u2019ll realize that, internally, it actually pushes  EIP to the stack. And if you also check the definition for  push, you\u2019ll realize that it decrements  ESP (which is copied to  EBP after the prologue) by 4 bytes. In addition, the prologue\u2019s first instruction is also a  push, so we end up with 2 decrements of 4, hence the need to add 8.\n  2) What happened to the prologue and epilogue, why are they seemingly \u2018truncated\u2019?\n  It\u2019s simply because we haven\u2019t had a use for the stack during the execution of our function - if you\u2019ve noticed, we haven\u2019t modified  ESP at all, which means we also don\u2019t need to restore it.\n    To demo the flow control assembly instructions, I\u2019d like to add one more example to show how an if condition was compiled to assembly.\n    void  print_equal ( int  a ,  int  b )  {  if  ( a  ==  b )  {  printf ( &#34;equal&#34; );  }  else  {  printf ( &#34;nah&#34; );  } }\n  After compiling it, here\u2019s the disassembly that I got with the help of  IDA:\n  void __cdecl print_equal(int, int): 10000000 55 push ebp 10000001 8B EC mov ebp, esp 10000003 8B 45 08 mov eax, [ebp+8] ; load 1st argument 10000006 3B 45 0C cmp eax, [ebp+0Ch] ; compare it with 2nd \u250c\u2505 10000009 75 0F jnz short loc_1000001A ; jump if not equal \u250a 1000000B 68 94 67 00 10 push offset aEqual ; &#34;equal&#34; \u250a 10000010 E8 DB F8 FF FF call _printf \u250a 10000015 83 C4 04 add esp, 4\u250c\u2500\u250a\u2500 10000018 EB 0D jmp short loc_10000027\u2502 \u250a\u2502 \u2514 loc_1000001A:\u2502 1000001A 68 9C 67 00 10 push offset aNah ; &#34;nah&#34;\u2502 1000001F E8 CC F8 FF FF call _printf\u2502 10000024 83 C4 04 add esp, 4\u2502\u2514\u2500\u2500 loc_10000027: 10000027 5D pop ebp 10000028 C3 retn\n  Give yourself a minute and try to make sense of this disassembly output (for simplicity\u2019s sake, I\u2019ve changed the real addresses and made the function start from  10000000 instead).\n  In case you\u2019re wondering about the  add esp, 4 part, it\u2019s simply there to adjust  ESP back to its initial value (same effect as a  pop, except without modifying any register), since we had to  push the printf string argument.\n    Now let\u2019s move on and talk about how data is stored (integers and strings especially).\n    Endianness is the order of the sequence of bytes representing a value in computer memory.\n      For reference, x86 family processors (the ones on pretty much any computer you can find) always use little-endian.\n  To give you a live example of this concept, I\u2019ve compiled a Visual Studio C++ console app, where I declared an  int variable with the value  1337 assigned to it, then I printed the variable\u2019s address using  printf(), on the main function.\n  Then I ran the program attached to the debugger in order to check the printed variable\u2019s address on the memory hex view, and here\u2019s the result I obtained:\n    To elaborate more on this -  int variables are 4 bytes long (32 bits) (in case you didn\u2019t know), so this means that if the variable starts from the address  D2FCB8 it would end right before  D2FCBC (+4).\n    decimal:  1337 -&gt; hex:  539 -&gt; bytes:  00 00 05 39 -&gt; little-endian:  39 05 00 00\n    This part is interesting yet relatively simple. What you should know here is that integer signing (positive/negative) is typically done on computers with the help of a concept called  two\u2019s complement.\n  The gist of it is that the lowest/first half of an integer is reserved for positive numbers, while the highest/last half is for negative numbers, here\u2019s what this looks like in hex, for a 32-bit signed int (highlighted = hex, in parenthesis = decimal):\n      If you\u2019ve noticed, we\u2019re always  ascending in value. Whether we go up in hex or decimal. And that\u2019s the crucial point of this concept - arithmetical operation do not have to do anything special to handle signing, they can simply treat all values as unsigned/positive, and the result would still be interpreted correctly (as long as we don\u2019t go beyond  INT_MAX or  INT_MIN), and that\u2019s because integers will also  \u2018rollover\u2019 on overflow/underflow by design, kinda like an analog odometer.\n    Protip: The Windows calculator is a very helpful tool - you can set it to programmer mode and set the size to DWORD (4 bytes), then enter negative decimal values and visualize them in hex and binary, and have fun performing operations on them.\n      In C, strings are stored as  char arrays, therefore, there\u2019s nothing special to note here, except for something called null termination.\n  If you ever wondered how  strlen() is able to know the size of a string, it\u2019s very simple - strings have a character that indicates their end, and that\u2019s the null byte/character -  00 or  &#39;\\0&#39;.\n  If you declare a string constant in C code, and hover over it in Visual Studio, for instance, it will tell you the size of the generated array, and as you can see, for this reason, it\u2019s one element more than the \u2018visible\u2019 string size.\n    Note: The endianness concept is not applicable on arrays, only on single variables. Therefore, the order of characters in memory would be normal here - low to high.\n    Now that you know all of this, you\u2019re likely able to start making sense of some machine code, and emulate a CPU with your brain, to some extent, so to speak.\n  Let\u2019s take the   print_equal() example, but let\u2019s only focus on the  printf()  call instructions this time.\n  void print_equal(int, int):... 10000010 E8 DB F8 FF FF call _printf... 1000001F E8 CC F8 FF FF call _printf\n  You might be wondering to yourself - wait a second, if these are the same instructions, then why are their bytes different?\n  That\u2019s because,  call (and  jmp) instructions (usually) take an  offset (relative address) as an argument, not an absolute address.\n  An offset is basically the difference between the current location, and the destination, which also means that it can be either negative or positive.\n  As you can see, the  opcode of a  call instruction that takes a 32-bit offset, is  E8, and is followed by said offset - which makes the full instruction:  E8 XX XX XX XX.\n  Pull out your calculator,  why\u2019d you close it so early?! and calculate the difference between the offset of both instructions (don\u2019t forget the endianness).\n  You\u2019ll notice that (the absolute value of) this difference is the same as the one between the instruction addresses ( 1000001F -  10000010 =  F):\n    Another small detail that we should add, is the fact that the CPU only executes an instruction after fully \u2018reading\u2019 it, which means that by the time the CPU starts \u2018executing\u2019,  EIP (the instruction pointer) is already pointing at the  next instruction to be executed.\n  That\u2019s why these offsets are actually accounting for this behaviour, which means that in order to get the  real address of the target function, we have to also  add the size of the  call instruction: 5.\n  Now let\u2019s apply all these steps in order to resolve  printf()\u2019s address from the first instruction on the example:\n    1) Extract the offset from the instruction:  E8 (DB F8 FF FF) -&gt;  FFFFF8DB (-1829)\n        ...\u250c\u2500\u2500\u2500 10000018 EB 0D jmp short loc_10000027...\u2514\u2500\u2500 loc_10000027: 10000027 5D pop ebp...\n  The only difference in this example is that  EB XX is a short version  jmp instruction - which means it only takes an 8-bit (1 byte) offset.\n      That\u2019s it! You should now have enough information (and hopefully, motivation) to start your journey reverse engineering executables.\n  Start by writing dummy C code, compiling it, and debugging it while single-stepping through the disassembly instructions (Visual Studio allows you to do this, by the way).\n  After that, you can try your luck with closed-source native binaries, by the help of disassemblers such as  Ghidra and  IDA, and debuggers such as  x64dbg.\n  Note: If you\u2019ve noticed inaccurate information, or room for improvement regarding this article, and would like to improve it, feel free to  submit a pull request on GitHub.", "posttime": "2021-07-25 23:31:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6c47\u7f16,\u4ee3\u7801,\u50bb\u74dc,dummies,\u6307\u4ee4", "title": "\u53cd\u8f6c\u50bb\u74dc \u2013 x86 \u6c47\u7f16\u548c C \u4ee3\u7801", "title_en": "Reversing for dummies \u2013 x86 assembly and C code", "transed": 1, "url": "https://0x41.cf/reversing/2021/07/21/reversing-x86-and-c-code-for-beginners.html", "via": "", "real_tags": ["\u6c47\u7f16", "\u4ee3\u7801", "\u50bb\u74dc", "dummies", "\u6307\u4ee4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069686, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7403\u961f\u7684\u670d\u88c5\u770b\u8d77\u6765\u4e0e\u623f\u95f4\u91cc\u7684\u5176\u4ed6\u4eba\u76f8\u4f3c\uff0c\u56e0\u4e3a\u7ade\u6280\u573a\u7684\u706f\u5149\u4ece\u4ed6\u4eec\u80f8\u524d\u548c\u6df1\u7ea2\u8272\u548c\u767d\u8272\u8896\u5b50\u4e0a\u7eb5\u6a2a\u4ea4\u9519\u7684\u6c34\u6676\u4e2d\u95ea\u95ea\u53d1\u5149\u3002\u5fb7\u56fd\u961f\u51b3\u5b9a\u7a7f\u7d27\u8eab\u8863\u6765\u62b5\u5236\u4f53\u64cd\u4e2d\u5973\u6027\u7684\u6027\u522b\u5316 \u5728\u5965\u8fd0\u4f1a\u6392\u4f4d\u8d5b\u671f\u95f4\uff0c\u6240\u6709\u5176\u4ed6\u5973\u4f53\u64cd\u8fd0\u52a8\u5458\u90fd\u7a7f\u7740\u88f8\u9732\u53cc\u817f\u7684\u7d27\u8eab\u8863 \u5728\u5468\u65e5\u7684\u6392\u4f4d\u8d5b\u4e2d\uff0c\u5fb7\u56fd\u961f\u53cd\u800c\u7a7f\u7740\u7d27\u8eab\u8863\u4ed6\u4eec\u7684\u811a\u8e1d\uff0c\u6253\u7b97\u53cd\u51fb\u8be5\u56fd\u4f53\u80b2\u8054\u5408\u4f1a DTB \u6240\u8bf4\u7684\u201c\u4f53\u64cd\u4e2d\u7684\u6027\u522b\u5316\u201d\u3002\u4e1c\u4eac\u5965\u8fd0\u4f1a\u662f\u81ea\u524d\u7f8e\u56fd\u4f53\u64cd\u56fd\u5bb6\u961f\u961f\u533b\u62c9\u91cc\u00b7\u7eb3\u8428\u5c14 (Larry Nassar) \u56e0\u6027\u8650\u5f85\u6570\u767e\u540d\u4f53\u64cd\u8fd0\u52a8\u5458\uff08\u5305\u62ec\u8fd9\u9879\u8fd0\u52a8\u7684\u4e00\u4e9b\u6700\u4f1f\u5927\u7684\u660e\u661f\uff09\u800c\u5165\u72f1 176 \u5e74\u4ee5\u6765\u7684\u7b2c\u4e00\u5c4a\u590f\u5b63\u5965\u8fd0\u4f1a\u3002\u5728\u5ba3\u5224\u65f6\uff0c\u8fd0\u52a8\u5458\u2014\u2014\u5176\u4e2d\u4e00\u4e9b\u662f\u5965\u8fd0\u9009\u624b\u2014\u2014\u63cf\u8ff0\u4e86\u8fd9\u9879\u8fd0\u52a8\u7684\u6587\u5316\u5982\u4f55\u5141\u8bb8\u5bf9\u5e74\u8f7b\u5973\u6027\u548c\u5973\u5b69\u7684\u8650\u5f85\u548c\u7269\u5316\u3002\u7537\u6027\u4f53\u64cd\u8fd0\u52a8\u5458\u7a7f\u7740\u6bd4\u8f83\u8d34\u8eab\u7684\u8863\u670d\uff1a\u80cc\u5fc3\uff0c\u81ea\u7531\u4f53\u64cd\u548c\u8df3\u9a6c\u65f6\u7a7f\u5bbd\u677e\u77ed\u88e4\uff0c\u6760\u94c3\u548c\u978d\u9a6c\u5957\u8def\u7a7f\u957f\u88e4\u3002\n21 \u5c81\u7684\u5fb7\u56fd\u4eba\u838e\u62c9\u00b7\u6c83\u65af (Sarah Voss) \u8868\u793a\uff0c\u76f4\u5230\u4ed6\u4eec\u5728\u6bd4\u8d5b\u524d\u805a\u5728\u4e00\u8d77\uff0c\u4ed6\u4eec\u624d\u786e\u5b9a\u81ea\u5df1\u662f\u5426\u4f1a\u51b3\u5b9a\u5728\u5965\u8fd0\u4f1a\u6bd4\u8d5b\u4e2d\u518d\u6b21\u7a7f\u4e0a\u5b83\u4eec\u3002 \u201c\u6211\u4eec\u4eca\u5929\u5750\u5728\u4e00\u8d77\u8bf4\uff0c\u597d\u5427\uff0c\u6211\u4eec\u60f3\u8981\u4e00\u573a\u5927\u578b\u6bd4\u8d5b\uff0c\u201d\u6c83\u65af\u8bf4\u3002\u5728\u4e1c\u4eac\u5965\u8fd0\u4f1a\u7684\u6392\u4f4d\u8d5b\u671f\u95f4\uff0c\u6240\u6709\u5176\u4ed6\u5973\u4f53\u64cd\u8fd0\u52a8\u5458\u90fd\u7a7f\u7740\u88f8\u9732\u53cc\u817f\u7684\u7d27\u8eab\u8863\u3002\u8eab\u9ad8 142 \u5398\u7c73\u7684\u7f8e\u56fd\u5de8\u661f\u897f\u8499\u00b7\u62dc\u5c14\u65af (Simone Biles) \u5728 6 \u6708\u4efd\u8868\u793a\uff0c\u5979\u66f4\u559c\u6b22\u7d27\u8eab\u8863\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u62c9\u957f\u817f\u5e76\u4f7f\u5979\u663e\u5f97\u66f4\u9ad8\u3002 \u201c\u4f46\u6211\u652f\u6301\u4ed6\u4eec\u51b3\u5b9a\u7a7f\u4efb\u4f55\u4ed6\u4eec\u559c\u6b22\u7684\u548c\u8ba9\u4ed6\u4eec\u611f\u5230\u8212\u670d\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u201d\u62dc\u5c14\u65af\u8bf4\u3002 \u201c\u6240\u4ee5\uff0c\u5982\u679c\u5916\u9762\u6709\u4eba\u60f3\u7a7f\u7d27\u8eab\u8863\u6216\u7d27\u8eab\u8863\uff0c\u8fd9\u5b8c\u5168\u53d6\u51b3\u4e8e\u4f60\u3002\u201d\u7f8e\u56fd\u9996\u5c48\u4e00\u6307\u7684\u7d27\u8eab\u8863\u5236\u9020\u5546 GK Elite \u7684\u9996\u5e2d\u5546\u52a1\u5b98\u9a6c\u7279\u00b7\u8003\u6069 (Matt Cowan) \u8868\u793a\uff0c\u73b0\u5728\u5927\u591a\u6570\u5bf9\u7d27\u8eab\u8863\u7684\u8981\u6c42\u6765\u81ea\u90a3\u4e9b\u51fa\u4e8e\u6587\u5316\u548c\u5b97\u6559\u539f\u56e0\u9700\u8981\u8c26\u865a\u7684\u56fd\u5bb6\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4ed6\u4eec\u8fd8\u6ca1\u6709\u770b\u5230\u7d27\u8eab\u8fde\u8863\u88e4\u7684\u70ed\u6f6e\u3002\n\u201c\u6211\u4eec\u4f1a\u505a\u5417\uff1f\u7edd\u5bf9\u53ef\u4ee5\u3002\u6211\u4eec\u6709\u80fd\u529b\u8bbe\u8ba1\u548c\u505a\uff0c\u800c\u4e14\u6211\u4eec\u5df2\u7ecf\u505a\u5230\u4e86\uff0c\u201d\u8003\u6069\u5148\u751f\u8bf4\u3002\u4f53\u64cd\u901a\u5e38\u88ab\u89c6\u4e3a\u6700\u9002\u5408\u5e74\u8f7b\u5973\u6027\u548c\u5973\u5b69\u7684\u8fd0\u52a8\u3002 24 \u5c81\u7684\u62dc\u5c14\u65af\u7ecf\u5e38\u5f00\u73a9\u7b11\u8bf4\u81ea\u5df1\u8001\u4e86\uff1b\u5979\u6700\u8fd1\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u79f0\u81ea\u5df1\u4e3a\u5976\u5976\u3002\u4f46\u5176\u4ed6\u56fd\u5bb6\u90fd\u53cd\u5bf9\u8fd9\u79cd\u5bf9\u9752\u5e74\u7684\u91cd\u89c6\uff0c\u5305\u62ec\u5fb7\u56fd\u4eba\uff1aElisabeth Seitz 27 \u5c81\uff0cKim Bui 32 \u5c81\uff0cPauline Schafer 24 \u5c81\uff0cVoss 21 \u5c81\u3002\u4ed6\u4eec\u7684\u5e73\u5747\u5e74\u9f84\u4e3a 26 \u5c81\u3002Voss \u8bf4\u4f53\u64cd\u4e60\u4fd7\u5e94\u8be5\u4e3a\u5973\u6027\u7559\u51fa\u7a7a\u95f4\u8eab\u4f53\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\u548c\u53d8\u5316\u800c\u53d8\u5316\u3002\u4ed6\u4eec\u7684\u670d\u88c5\u7b26\u5408\u56fd\u9645\u4f53\u64cd\u8054\u5408\u4f1a\u7684\u8863\u6a71\u89c4\u5b9a\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u5973\u8fd0\u52a8\u5458\u901a\u5e38\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u906e\u76d6\u81ea\u5df1\u7684\u8eab\u4f53\u3002\u5c31\u5728\u5965\u8fd0\u4f1a\u5f00\u59cb\u524d\u51e0\u5929\uff0c\u632a\u5a01\u5973\u5b50\u6c99\u6ee9\u624b\u7403\u961f\u5728\u6b27\u6d32\u9526\u6807\u8d5b\u671f\u95f4\u62d2\u7edd\u7a7f\u7740\u6bd4\u57fa\u5c3c\u6cf3\u88e4\uff0c\u800c\u662f\u9009\u62e9\u4e86\u7d27\u8eab\u77ed\u88e4\u3002\u4e3a\u6b64\uff0c\u4ed6\u4eec\u56e0\u8fdd\u53cd\u8863\u6a71\u8981\u6c42\u800c\u88ab\u7f5a\u6b3e\u3002\n\u4f46\u662f\u5728\u5468\u65e5\u7684\u4f53\u64cd\u6392\u4f4d\u8d5b\u4e2d\uff0c\u6269\u97f3\u5668\u4e0a\u7684\u64ad\u97f3\u5458\u79f0\u8fd9\u4e9b\u670d\u88c5\u201c\u786e\u5b9e\u975e\u5e38\u597d\u201d\u3002\u5fb7\u56fd\u961f\u6ca1\u6709\u664b\u7ea7\u51b3\u8d5b\uff0c\u4f46\u89e3\u8bf4\u5458\u601d\u8003\u4ed6\u4eec\u7684\u7403\u961f\u5728\u5965\u8fd0\u821e\u53f0\u4e0a\u7684\u9996\u6b21\u4eae\u76f8\u662f\u5426\u4f1a\u589e\u52a0\u5355\u4f4d\u7684\u4eba\u6c14\u3002", "note_en": "The team&#39;s outfits looked similar to the others in the room as the arena lights gleamed off crystals crisscrossing their chests and down their crimson and white sleeves.\n The German team decided to wear\u00a0unitards to push back against sexualisation of women in gymnastics\n Leotards that leave the legs bare were worn by every other female gymnast during qualifying at the Games\n   In qualifying on Sunday, however, the German team instead wore unitards that stretched to their ankles,  intending to push back against what the country&#39;s sport federation DTB has called &#34;sexualisation in gymnastics&#34;.\n The Tokyo Olympics are the first Summer Games since  Larry Nassar, a former USA Gymnastics national team doctor, was sent to prison for 176 years for sexually abusing hundreds of gymnasts, including some of the sport&#39;s greatest stars.\n At his sentencing, athletes \u2014 some of them Olympians \u2014 described how the sport&#39;s culture allowed for abuse and objectification of young women and girls.\n Male gymnasts wear comparatively body-covering clothes: singlets, with loose shorts for their floor exercise and vault, and long pants on bar and pommel horse routines.\n   Sarah Voss, a 21-year-old German, said they weren&#39;t sure they would decide to wear them again during Olympic competition until they got together before the meet.\n &#34;We sat together today and said, OK, we want to have a big competition,&#34; Voss said.\n   Leotards that leave the legs bare were worn by every other female gymnast during qualifying at the Tokyo Games.\n At 142 centimetres, American superstar Simone Biles said in June that she preferred\u00a0leotards because they lengthened the leg and made her appear taller.\n &#34;But I stand with their decision to wear whatever they please and whatever makes them feel comfortable,&#34; Biles said.\n &#34;So if anyone out there wants to wear a unitard or leotard, it&#39;s totally up to you.&#34;\n  Matt Cowan, the chief commercial officer for GK Elite, the US&#39;s premier leotard manufacturer, said most requests for unitards now came from countries that required modesty for cultural and religious reasons. They have otherwise seen no rush toward catsuits.\n &#34;Would we do it? Absolutely. We have the capabilities of designing it and doing it, and we have done it,&#34; Mr Cowan said.\n  Gymnastics is often viewed as a sport best performed by very young women and girls.\n Biles, at 24, often jokes about being old; she recently called herself a grandma on social media.\n But other nations have defied that emphasis on youth, including the Germans: Elisabeth Seitz is 27, Kim Bui is 32, Pauline Schafer is 24, and Voss is 21. Their average age of 26.\n Voss said that gymnastics customs should leave room for female bodies as they aged and changed.\n Their outfits comply with the wardrobe rules of the International Gymnastics Federation. But that doesn&#39;t mean female athletes are generally free to cover their bodies as they choose.\n Just days before the Games began,  the Norwegian women&#39;s beach handball team refused to play in bikini bottoms during European tournaments, opting instead for skin-tight shorts. For that, they received a fine for violating a wardrobe requirement.\n  But at gymnastics qualifying Sunday, the announcer over the loudspeaker called the outfits &#34;very nice indeed&#34;.\n The German team did not qualify for the finals, but the announcer pondered if their team debut on the Olympic stage might increase unitards&#39; popularity.", "posttime": "2021-07-25 23:31:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6027\u611f,gymnastics,\u7d27\u8eab\u8863", "title": "\u538c\u5026\u6027\u611f\u7684\u5fb7\u56fd\u4f53\u64cd\u961f\u5728\u4e1c\u4eac\u5965\u8fd0\u4f1a\u4e0a\u7a7f\u7d27\u8eab\u8863", "title_en": "German gymnastics team, tired of sexualisation, wears unitards at Tokyo Olympics", "transed": 1, "url": "https://www.abc.net.au/news/2021-07-26/german-gymnastics-unitards-tokyo-olympic-games/100322610", "via": "", "real_tags": ["\u6027\u611f", "\u7d27\u8eab\u8863"]}, {"category": "", "categoryclass": "", "imagename": "1208a132a30911a409de83bab577d744.png", "infoid": 1069685, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f60\u5728\u8fd0\u8425\u3002\u50cf\u5f80\u5e38\u4e00\u6837\u5728 Invoicing Rails \u5e94\u7528\u7a0b\u5e8f\u4e2d\u8c03\u8bd5 Error-s\u3002\u5b83\u4eec\u5b58\u50a8\u5728 MySQL \u4e2d\u5e76\u901a\u8fc7 ActiveRecord \u548c\u4e00\u4e9b\u8f85\u52a9\u65b9\u6cd5\u8bbf\u95ee\u3002\u4ed6\u4eec\u5df2\u7ecf\u7528 status_message \u66f4\u65b0\u4e86\uff0c\u6240\u4ee5\u73b0\u5728\u662f\u6df1\u5165\u7814\u7a76\u7684\u65f6\u5019\u4e86\u3002\u5728\u53e6\u4e00\u4e2a\u521b\u7eaa\u5f55\u7684\u70ed\u6d6a\u4e0b\u5348\uff0c\u9633\u5149\u900f\u8fc7\u4f60\u7684\u7a97\u6237\u7167\u5c04\u8fdb\u6765\uff0c\u4f46\u4f60\u5374\u50cf\u9ec4\u74dc\u4e00\u6837\u51c9\u723d\uff1a\u4f60\u5e26\u7740\u592a\u9633\u955c\u548c\u4e00\u5927\u676f\u53ef\u9760\u7684 H2O\u3002\u53c8\u8fc7\u4e86 23.7 \u79d2\uff0c\u60a8\u51b3\u5b9a\u5728\u5bfc\u81f4\u751f\u4ea7\u4e8b\u6545\u4e4b\u524d\u6309 CTRL-C \u79bb\u5f00\u90a3\u91cc\u3002\u60a8\u51b3\u5b9a\u50cf\u666e\u901a\u4eba\u4e00\u6837\u4ece JIRA \u7968\u8bc1\u4e2d\u63d0\u53d6\u9519\u8bef ID\u3002\u7a81\u7136\u95f4\uff0c\u70ed\u6d6a\u611f\u89c9\u66f4\u70ed\u4e86\u3002\u4f46\u8fd9\u662f\u5728\u5520\u53e8\u4f60\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u4ec0\u4e48\u7ed9\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u53ea\u662f\u505a\u5b83\u5728\u7f50\u5934\u4e0a\u8bf4\u7684\u4e8b\u60c5\uff1f\u5f53\u7136\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528 .no_status \u8303\u56f4\uff08WHERE status_message IS NOT NULL\uff09\u5b83\u4f3c\u4e4e\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u80fd\u5728\u6b64\u5217\u4e0a\u4f7f\u7528\u7b80\u5355\u7684\u6587\u672c\u641c\u7d22\uff1f\u5f53\u7136\u6709\u5f88\u591a\uff08\u5f88\u591a = 8612441\uff09\u884c\uff0c\u4f46\u6211\u89c9\u5f97\u6211\u4ee5\u524d\u89c1\u8fc7\u6587\u672c\u641c\u7d22\u5de5\u4f5c\u3002\u6211\u4eec\u5e94\u8be5\u5207\u6362\u5230 Postgres \u5417\uff1f Sargable \u662f\u4e00\u4e2a gate keep-y portmanteau\uff08&lt;- \u4e5f\u662f gate keep-y\u3002\u4e00\u4e2a portmanteau \u662f\u4e00\u4e2a\u8bcd\uff0c\u5b83\u628a\u4e24\u4e2a\u8bcd\u7684\u58f0\u97f3\u548c\u610f\u4e49\u6df7\u5728\u4e00\u8d77\uff0c\u6bd4\u5982\u52fa\u5b50 + \u53c9\u5b50 = spork\uff09\uff0c\u7528\u4e8e\u201c\u641c\u7d22\u53c2\u6570\u201d\u3002\u6211\u4eec\u4f7f\u7528\u8be5\u672f\u8bed\u6765\u63cf\u8ff0\u6570\u636e\u5e93\u7684 SQL \u4f18\u5316\u5668\u5229\u7528\u7d22\u5f15\u7684\u80fd\u529b\u3002\u6709\u51e0\u4ef6\u4e8b\u60c5\u51b3\u5b9a\u4e86\u67e5\u8be2\u7684\u53ef\u641c\u7d22\u6027\uff08\u4e0d\u786e\u5b9a\u8fd9\u662f\u5426\u662f\u4e00\u4e2a\u8bcd\uff09\uff0c\u4f46\u662f\u5728\u8fdb\u884c\u6587\u672c\u641c\u7d22\u65f6\u9700\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u662f\u4f7f\u7528\u901a\u914d\u7b26 (%)\u3002\u8ba9\u6211\u4eec\u770b\u770b where_message_like \u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u770b\u770b\u6211\u4eec\u662f\u5426\u4f1a\u9047\u5230\u8fd9\u6837\u7684\u4e8b\u60c5\u3002 irb ( main ): 001 : 0 &gt; ActiveRecord :: Base \u3002\u8054\u7cfb \u3002 to_sql ( Error . where_message_like ( &quot;NoMethodError: undefined method `is_approved_by_finance? \\\\&#39; for nil:NilClass&quot;)) =&gt; &quot;SELECT `errors`.* FROM `errors` WHERE\uff08\u6d88\u606f\u50cf&#39;%NoMethodError: undefined method `is_approved_by_finance? \\&#39; \u4e3a nil:NilClass%&#39;)&quot;\n\u554a\u54c8\uff0c\u6240\u4ee5\u6211\u4eec\u5728 WHERE \u5b50\u53e5\u4e2d\u5b57\u7b26\u4e32\u7684\u4e24\u7aef\u90fd\u6709\u4e00\u4e2a\u901a\u914d\u7b26 (%)\uff1a\u8981\u7406\u89e3\u4e3a\u4ec0\u4e48\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u60a8\u7684 SQL \u67e5\u8be2\u4f18\u5316\u5668\u3002\u5047\u8bbe\u6211\u8981\u6c42\u60a8\u5728\u5b57\u5178\u4e2d\u67e5\u627e\u5305\u542b\u5b50\u5b57\u7b26\u4e32 get \u7684\u6240\u6709\u5355\u8bcd\uff1a\u60a8\u5fc5\u987b\u626b\u63cf\u5b57\u5178\uff08\u6761\u76ee\u8868\uff09\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff08\u884c\uff09\u4ee5\u67e5\u627e\u6240\u6709\u5b9e\u4f8b\uff1a\u5982\u679c\uff0c\u800c\u4e0d\u662f\uff0c\u6211\u8ba9\u4f60\u628a\u5b57\u5178\u91cc\u6240\u6709\u4ee5get\u5f00\u5934\u7684\u8bcd\u90fd\u5f04\u51fa\u6765\uff0c\u4f60\u53ef\u4ee5\u7ffb\u5230\u6b63\u786e\u7684\u9875\u9762\uff0c\u628a\u6240\u6709\u7684\u8bcd\u90fd\u7ed9\u6211\uff01\u8fd9\u6837\uff0c\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u7684\u5b57\u5178\u662f\u4e00\u79cd\u7d22\u5f15\uff1a\u201c\u4f46\u662f\uff0c\u6258\u9a6c\u65af\u201d\uff0c\u6211\u542c\u5230\u4f60\u95ee\uff0c\u201c\u5982\u679c\u6211\u4eec\u60f3\u8fdb\u884c\u5b50\u5b57\u7b26\u4e32\u641c\u7d22\u800c\u4e0d\u662f\u4ece\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u641c\u7d22\u600e\u4e48\u529e\uff1f\u201d\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u95ee\u9898\uff01\u5bf9\u4e8e\u6211\u4eec\u7684\u9519\u8bef\u573a\u666f\uff0c\u8fd9\u79cd\u60c5\u51b5\u5f88\u5c11\u53d1\u751f\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7684\u6709\u610f\u7d22\u5f15\u6765\u83b7\u5f97\u66f4\u5f3a\u5927\u7684\u5b50\u5b57\u7b26\u4e32\u641c\u7d22\uff0c\u4f8b\u5982 MySQL \u7684 FULLTEXT \u6216 Postgres \u7684 ts_vector\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5168\u6587\u7d22\u5f15\u5e76\u4e0d\u795e\u5947\uff0c\u60a8\u7684\u8868\u548c\u67e5\u8be2\u5fc5\u987b\u66f4\u6539\u4ee5\u652f\u6301\u5b83\u4eec\u3002\u5bf9\u4e8e\u6211\u4eec\u7684\u793a\u4f8b\uff0c\u6211\u4eec\u6ca1\u6709\u968f\u65f6\u53ef\u7528\u7684\u8fd9\u4e9b\u4e1c\u897f\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u7ee7\u7eed\u5047\u8bbe\u6211\u4eec\u6b63\u5728\u641c\u7d22\u5217\u5185\u5bb9\u5f00\u5934\u7684\u5b50\u5b57\u7b26\u4e32\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u67e5\u770b\u67e5\u8be2\u8ba1\u5212\u6765\u770b\u770b\u8fd9\u4e2a\u53ef\u4ea4\u6613\u7684\u4e1a\u52a1\u7684\u5b9e\u9645\u8fd0\u884c\u60c5\u51b5\uff01 irb ( main ): 002 : 0 &gt; puts ActiveRecord :: Base \u3002\u8054\u7cfb \u3002\u89e3\u91ca\uff08\u9519\u8bef\u3002where_message_like\uff08\u201cNoMethodError\uff1a\u672a\u5b9a\u4e49\u7684\u65b9\u6cd5`is_approved_by_finance\uff1f\\\\&#39;\u4e3anil\uff1aNilClass\u201d\uff09\u3002to_sql\uff09\u89e3\u91ca\uff080.5\u6beb\u79d2\uff09\u89e3\u91ca\u9009\u62e9`\u9519\u8bef`\u3002 * FROM `errors` WHERE\uff08\u6d88\u606f\u5982 &#39;%NoMethodError: undefined method `is_approved_by_finance?\\&#39; for nil:NilClass%&#39; \uff09+----+-------------+--- -------------+------+---------------+------+------ ---+------+---------+------------+ |\u8eab\u4efd\u8bc1 |\u9009\u62e9\u7c7b\u578b |\u8868|\u7c7b\u578b |\u53ef\u80fd\u7684\u5bc6\u94a5|\u5173\u952e|\u5bc6\u94a5\u957f\u5ea6 |\u53c2\u8003 |\u884c |\u989d\u5916 | +----+-------------+----------------+------+------ ---------+------+---------+------+-------+------ -------+ | 1 |\u7b80\u5355 |\u9519\u8bef |\u6240\u6709 |\u7a7a |\u7a7a |\u7a7a |\u7a7a | 6739497 |\u4f7f\u7528 where | +----+-------------+----------------+------+------ ---------+------+---------+------+-------+------ -------+ set (0.00 sec ) irb ( main ) \u4e2d\u7684 1 \u884c\uff1a003 : 0 &gt; puts ActiveRecord :: Base \u3002\u8054\u7cfb \u3002\u89e3\u91ca\uff08\u9519\u8bef\u3002\u5176\u4e2d\uff08\u201c\u6d88\u606f LIKE \\&#39; NoMethodError\uff1a\u672a\u5b9a\u4e49\u7684\u65b9\u6cd5`is_approved_by_finance\uff1f\\\\&#39; for nil:NilClass% \\&#39;\u201d\uff09\u3002to_sql\uff09\u89e3\u91ca\uff080.5 \u6beb\u79d2\uff09\u89e3\u91ca\u9009\u62e9`\u9519\u8bef`\u3002 * FROM `errors` WHERE ( message LIKE &#39;NoMethodError: undefined method `is_approved_by_finance?\\&#39; for nil:NilClass%&#39; ) +----+-------------+---- ------------+------+--------------+------+------- --+------+---------+-------------+ |\u8eab\u4efd\u8bc1 |\u9009\u62e9\u7c7b\u578b |\u8868|\u7c7b\u578b |\u53ef\u80fd\u7684\u5bc6\u94a5|\u5173\u952e|\u5bc6\u94a5\u957f\u5ea6 |\u53c2\u8003 |\u884c |\u989d\u5916 | +----+-------------+----------------+------+------ ---------+------+---------+------+-------+------ -------+ | 1 |\u7b80\u5355 |\u9519\u8bef |\u6240\u6709 |\u7a7a |\u7a7a |\u7a7a |\u7a7a | 6739497 |\u4f7f\u7528 where | +----+-------------+----------------+------+------ ---------+------+---------+------+-------+------ -------+ 1 \u884c\uff080.00 \u79d2\uff09\u54e6\uff0c\u5e9f\u8bdd\u3002\u662f\u4ec0\u4e48\u8d4b\u4e88\u4e86\uff1f\uff01\u5b83\u4eec\u770b\u8d77\u6765\u5b8c\u5168\u4e00\u6837\uff01\u4e3a\u4ec0\u4e48 MySQL \u6ca1\u6709\u4f18\u5316\uff01\u6211\u4eec\u8b66\u544a\uff08\uff1f\uff09\u5b83\uff01\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u7684\u6d88\u606f\u6ca1\u6709\u7d22\u5f15\u3002\u6b64\u5916\uff0c\u8be5\u5217\u662f\u4e00\u4e2a TEXT \u5217\uff0c\u5982\u679c\u6211\u4eec\u60f3\u6dfb\u52a0\u4e00\u4e2a\u7d22\u5f15\uff0cMySQL \u8981\u6c42\u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u524d\u7f00\u957f\u5ea6\uff0c\u5b83\u544a\u8bc9 MySQL \u5e94\u8be5\u7d22\u5f15\u5b57\u7b26\u4e32\u5f00\u5934\u7684\u591a\u5c11\uff08\u8003\u8651\u5230\u5b83\u7684\u957f\u5ea6\u53d8\u5316\u5f88\u5927\u4e14\u672a\u5b9a\u4e49\uff09 .\u66f4\u8fdb\u4e00\u6b65\uff0c\u53ea\u6709 InnoDB \u8868\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5efa\u7acb\u7d22\u5f15\u3002 \uff08\u6211\u4eec\u7684\u9519\u8bef\u8868\u4f7f\u7528 InnoDB \u5f15\u64ce\uff0c\u6240\u4ee5\u6ca1\u95ee\u9898\uff09\u3002\u5373\u4f7f\u6211\u4eec\u7684 message TEXT \u5217\u6ca1\u6709\u7d22\u5f15\uff0c\u6211\u4eec\u7684 ticket_id \u5217\u6709\uff1a irb ( main ): 004 : 0 &gt; puts ActiveRecord :: Base \u3002\u8054\u7cfb \u3002\u89e3\u91ca\uff08&#39;\u9519\u8bef&#39;\uff09\u89e3\u91ca\uff082.6\u6beb\u79d2\uff09\u89e3\u91ca\u9519\u8bef+------+-------------- +------+-----+---------+----------------+ |\u9886\u57df |\u7c7b\u578b |\u7a7a |\u94a5\u5319 |\u9ed8\u8ba4 |\u989d\u5916 | +---------------------+--------------+------+----- +---------+----------------+ |\u8eab\u4efd\u8bc1 |\u6574\u6570 ( 11 ) |\u5426 | PRI |\u7a7a |\u81ea\u52a8\u589e\u91cf| |\u7559\u8a00 |\u6587\u5b57 |\u662f | |\u7a7a | | |\u56de\u6eaf|\u6587\u5b57 |\u662f | |\u7a7a | | | status_message | varchar ( 255 ) |\u662f |\u591a|\u7a7a | | | created_at |\u65e5\u671f\u65f6\u95f4 |\u662f | |\u7a7a | | |\u66f4\u65b0\u65f6\u95f4 |\u65e5\u671f\u65f6\u95f4 |\u662f | |\u7a7a | | |\u8fd0\u884c\u65f6\u73af\u5883 |\u6587\u5b57 |\u662f | |\u7a7a | | |\u9519\u8bef\u7c7b\u578b | varchar ( 255 ) |\u662f |\u591a|\u7a7a | | |\u7968\u53f7| varchar ( 255 ) |\u662f |\u591a|\u7a7a | | +---------------------+--------------+------+----- +---------+----------------+ 9 \u884c\uff080.00 \u79d2\uff09\nticket_id \u5217\u7684\u7c7b\u578b\u662f varchar(255)\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5728\u90a3\u91cc\u653e\u7f6e\u7d22\u5f15\u6ca1\u6709\u95ee\u9898\u3002\u800c\u8fd9\u6b63\u662f\u6211\u4eec\u6240\u505a\u7684\uff01\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u5b83\u4f7f\u7528 MUL \u6216\u201cMultiple\u201d\u952e\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u503c\u7528\u5728\u975e\u552f\u4e00\u952e\u7684\u5f00\u5934\uff08\u591a\u4e2a\u8bb0\u5f55\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u7d22\u5f15\uff09\u3002\u8ba9\u6211\u4eec\u770b\u770b\u6211\u4eec\u5bf9 sargable \u901a\u914d\u7b26\u67e5\u8be2\u7684\u4e86\u89e3\u5982\u4f55\u5728\u8fd9\u79cd\u7c7b\u578b\u7684\u5217\u4e2d\u53d1\u6325\u4f5c\u7528\u3002 irb ( main ): 005 : 0 &gt; puts ActiveRecord :: Base \u3002\u8054\u7cfb \u3002\u89e3\u91ca\uff08\u9519\u8bef\u3002where\uff08&#39;ticket_id LIKE \\&#39;%A00057440\\&#39;&#39;\uff09\u3002to_sql\uff09\u89e3\u91ca\uff080.5\u6beb\u79d2\uff09\u89e3\u91ca\u9009\u62e9`\u9519\u8bef`\u3002 * FROM `errors` WHERE (ticket_id LIKE &#39;%A00057440%&#39;) +----+-------------+--------------- -+------+---------------+------+-------+------+- --------+------------+ |\u8eab\u4efd\u8bc1 |\u9009\u62e9\u7c7b\u578b |\u8868|\u7c7b\u578b |\u53ef\u80fd\u7684\u5bc6\u94a5|\u5173\u952e|\u5bc6\u94a5\u957f\u5ea6 |\u53c2\u8003 |\u884c |\u989d\u5916 | +----+-------------+----------------+------+------ ---------+------+---------+------+-------+------ -------+ | 1 |\u7b80\u5355 |\u9519\u8bef |\u6240\u6709 |\u7a7a |\u7a7a |\u7a7a |\u7a7a | 8612441 |\u4f7f\u7528 where | +----+-------------+----------------+------+------ ---------+------+---------+------+-------+------ -------+ set (0.00 sec ) irb ( main ) \u4e2d\u7684 1 \u884c\uff1a006 : 0 &gt; puts ActiveRecord :: Base \u3002\u8054\u7cfb \u3002\u89e3\u91ca\uff08\u9519\u8bef\u3002where\uff08&#39;ticket_id LIKE \\&#39;%A00057440\\&#39;&#39;\uff09\u3002to_sql\uff09\u89e3\u91ca\uff081.2\u6beb\u79d2\uff09\u89e3\u91ca\u9009\u62e9`\u9519\u8bef`\u3002 * FROM `errors` WHERE (ticket_id LIKE &#39;A00057440%&#39;) +----+-------------+---------------- +-------+----------------------------------------------+-- -------------------------+------------+--- ---+------+-----------------------+ |\u8eab\u4efd\u8bc1 |\u9009\u62e9\u7c7b\u578b |\u8868|\u7c7b\u578b |\u53ef\u80fd\u7684\u5bc6\u94a5|\u5173\u952e|\u5bc6\u94a5\u957f\u5ea6 |\u53c2\u8003 |\u884c |\u989d\u5916 | +----+-------------+----------------+-------+----- ---------------------------------+---------------- --------------+--------------+------+------+--- --------------------+ | 1 |\u7b80\u5355 |\u9519\u8bef |\u8303\u56f4| index_errors_on_ticket_id | index_errors_on_ticket_id |\u7b2c768\u8bdd\u7a7a |\u7b2c214\u8bdd\u4f7f\u7528\u7d22\u5f15\u6761\u4ef6 | +----+-------------+----------------+-------+----- ---------------------------------+---------------- --------------+--------------+------+------+--- --------------------+ 1 \u884c\uff080.00 \u79d2\uff09\u554a\u54c8\uff01\u5728\u7b2c\u4e00\u4e2a\u67e5\u8be2\u8ba1\u5212\u4e2d\uff0cMySQL \u544a\u8bc9\u6211\u4eec\u5b83\u5c06\u4f7f\u7528 where \u626b\u63cf\u6240\u6709 8612441 \u884c\u3002\u7b2c\u4e8c\u4e2a sargable \u67e5\u8be2\u8ba1\u5212\u544a\u8bc9\u6211\u4eec\u5b83\u53ea\u9700\u8981\u901a\u8fc7\u4f7f\u7528\u7d22\u5f15\u6761\u4ef6\u626b\u63cf 214 \u7684\u8303\u56f4\uff01\u6211\u5c06\u628a\u5b83\u7559\u7ed9\u8bfb\u8005\u7ec3\u4e60 SET profiling = 1;\u770b\u770b\u771f\u6b63\u7684\u6210\u672c\u3002\u53c2\u89c1\uff1ahttps://dev.mysql.com/doc/refman/8.0/en/show-profile.html \u554a\uff0c\u592a\u9633\u7ec8\u4e8e\u8981\u843d\u5c71\u4e86\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u5b8c\u6210\uff08\u6216\u4ec0\u81f3\u5f00\u59cb\uff09\u6211\u4eec\u7684\u8c03\u67e5\uff0c\u4f46\u6211\u4eec\u5bf9 MySQL \u7684\u7d22\u5f15\u6a21\u5f0f\u6709\u70b9\u4e86\u89e3\u3002\n\u6211\u4eec\u5982\u4f55\u5229\u7528\u8fd9\u4e9b\u77e5\u8bc6\u8ba9\u6211\u4eec\u7684\u5de5\u4f5c\u66f4\u8f7b\u677e\u4e00\u4e9b\u5e76\u6218\u80dc\u9ad8\u6e29\uff1f\u6211\u60f3\u9996\u5148\u8981\u77e5\u9053\u7684\u662f\uff0c\u5982\u679c\u6ca1\u6709\u5176\u4ed6 WHERE \u6761\u4ef6\uff0c where_message_like \u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u8fd9\u662f\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u6ca1\u6709\u7d22\u5f15\u7684 TEXT \u5217\uff0c\u4f46\u5373\u4f7f\u5b83\u6709\u7d22\u5f15\uff0c\u5728\u6211\u4eec\u7684\u641c\u7d22\u5b57\u7b26\u4e32\u524d\u9762\u4f7f\u7528\u901a\u914d\u7b26\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\u3002\u6b64\u5916\uff0c\u5f88\u9ad8\u5174\u77e5\u9053ticket_id \u5217\u5df2\u7f16\u5165\u7d22\u5f15\uff0c\u5982\u679c\u6211\u4eec\u60f3\u641c\u7d22\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 sargable \u67e5\u8be2\u6765\u66f4\u5feb\u5730\u83b7\u5f97\u7ed3\u679c\uff01\u53ef\u80fd\u9700\u8981\u8003\u8651\u4e3a ticket_id \u4f7f\u7528\u4e00\u81f4\u7684\u683c\u5f0f\uff1b\u5982\u679c\u6211\u4eec\u80fd\u63a8\u65ad\u51fa\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u662f\u4ec0\u4e48\uff0c\u90a3\u4e48\u67e5\u627e\u6240\u6709\u76f8\u5173\u8bb0\u5f55\u53ef\u80fd\u4f1a\u975e\u5e38\u9ad8\u6548\uff01\u6700\u540e\uff0c\u5982\u679c\u6211\u4eec\u786e\u5b9e\u60f3\u8981\u7d22\u5f15\u6d88\u606f\u5217\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u9009\u62e9\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4ece TEXT \u8fc1\u79fb\u5230 VARCHAR\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u53ef\u4ee5\u8bbf\u95ee\u4e00\u4e2a\u7b80\u5355\u7684\u7d22\u5f15\uff0c\u4f46\u6211\u4eec\u9996\u5148\u653e\u5f03\u4e86\u9009\u62e9 TEXT \u7684\u597d\u5904\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u524d\u7f00\u9650\u5236\u6765\u4f7f\u7528\u5217\u524d\u7f00\u952e\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528 sargable \u67e5\u8be2\uff0c\u8fd9\u53ef\u80fd\u4f1a\u7ed9\u6211\u4eec\u5e26\u6765\u4e00\u4e9b\u597d\u5904\u3002\u6216\u8005\uff0c\u6211\u4eec\u53ef\u4ee5\u6295\u8d44\u5168\u6587\u7d22\u5f15\u5e76\u771f\u6b63\u5229\u7528 InnoDB \u7684\u529f\u80fd\uff01\u4f46\u662f\uff0c\u8fd9\u5c06\u9700\u8981\u6211\u4eec\u7a0d\u5fae\u6539\u53d8\u6211\u4eec\u7684\u8868\u5e76\u8c03\u6574\u6211\u4eec\u7684\u67e5\u8be2\u6a21\u5f0f\u3002\u8fd9\u662f\u5426\u9002\u5408 Rails \u662f\u6211\u4eec\u9700\u8981\u56de\u7b54\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u73b0\u5728\u662f\u4e0b\u5348 5:00\uff08\u4e0b\u5348 4:56\uff0c\u4f46\u8c01\u5728\u8ba1\u7b97\uff09\uff0c\u6240\u4ee5\u662f\u65f6\u5019\u6536\u5de5\u4e86\uff0c\u5728\u6c34\u8fb9\u6355\u6349\u6700\u540e\u51e0\u7f15\u9633\u5149\u3002\u5728\u4f60\u7528 \u2318-Q \u9000\u51fa Slack \u4e4b\u524d\uff0c\u4f60\u4f1a\u8bb0\u4f4f\u4e00\u4e9b\u4e1c\u897f\u3002 \u201c\u2026\u2026\u5e03\u4e3d\u5b89\u5a1c\u4e0d\u662f\u8bf4\u4ed6\u4eec\u8981\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\u5417\uff1f\uff1f\u201d", "note_en": "You\u2019re on Ops. Debugging  Error-s in Invoicing Rails app, as usual. They\u2019re stored in MySQL and accessed through ActiveRecord and some helper methods. They\u2019ve already been updated with a  status_message, so now it\u2019s time to dig in and investigate.\n  The sun beams through your window on another record-high heat wave afternoon, but you\u2019re cool as a cucumber: you brought your sunglasses and a tall glass of trusty H2O.\n         Another 23.7 seconds pass and you decide to  CTRL-C your way out of there before you cause a production incident. You decide to just pull the  Error IDs from the JIRA ticket like a pleb. Suddenly the heat wave feels even hotter.\n  But this is nagging you. I mean, what gives?? Why doesn\u2019t this method ever just do the thing it says on the tin? Sure, if we use the  .no_status scope ( WHERE status_message IS NOT NULL) it seems to work, but why can\u2019t we get simple text search to work on this column? Sure there are a lot (a lot =  8612441) rows, but I feel like I\u2019ve seen text searching work before. Should we switch to  Postgres?\n  Sargable is a gate keep-y portmanteau (&lt;- also gate keep-y. A portmanteau is a word that smashes together the sounds and meaning of two words, like spoon + fork = spork) for \u201csearch argument-able\u201d. We use the term to describe the ability of the database\u2019s SQL optimizer to leverage an index. There are a few things that determine a query\u2019s sargability (not sure if that\u2019s a word), but a big one to look out for is using wildcards ( %) when doing text searches.\n Let\u2019s look at the implementation of our  where_message_like method to see if we might be running into something like this.\n irb ( main ): 001 : 0 &gt;  ActiveRecord :: Base . connection . to_sql ( Error . where_message_like ( &#34;NoMethodError: undefined method `is_approved_by_finance? \\\\ &#39; for nil:NilClass&#34; )) =&gt;  &#34;SELECT `errors`.* FROM `errors` WHERE (message like &#39;%NoMethodError: undefined method `is_approved_by_finance? \\&#39;  for nil:NilClass%&#39;)&#34;\n Aha, so we have a wildcard ( %) on either end of string in the  WHERE clause:\n  To understand why this is a problem, let\u2019s pretend your the SQL query optimizer. Let\u2019s say that I ask you to find all of the words in the dictionary that contain the substring  get:\n  You\u2019ll have to scan through  every word (row) in the dictionary ( entries table) to find all of the instances:\n  If, instead, I asked you to get all of the words in the dictionary that  begin with  get, you could just flip to the correct page and give me all the words! In this way, the dictionary being in alphabetical order is a type of index:\n   \u201cBut, Thomas\u201d, I hear you asking, \u201cwhat if we want to do a substring search rather than search from the beginning of the string?\u201d\n That\u2019s a great question! For our  Error scenario, that\u2019s seldom the case, but there are more intentional indexes we  could use to get us a more robust sub-string search, like  MySQL\u2019s  FULLTEXT or  Postgres\u2019  ts_vector. It\u2019s worth noting that full-text indexes aren\u2019t magic and your tables and queries have to change to support them.\n For our example, we don\u2019t have these things readily at our disposal, so we\u2019ll continue with the assumption that we\u2019re searching for a substring at the  beginning of the column\u2019s contents.\n  So now, let\u2019s see this sargable business in action by looking at the query plans!\n  irb ( main ): 002 : 0 &gt;  puts  ActiveRecord :: Base . connection . explain ( Error . where_message_like ( &#34;NoMethodError: undefined method `is_approved_by_finance? \\\\ &#39; for nil:NilClass&#34; ). to_sql )  EXPLAIN  ( 0.5 ms )  EXPLAIN  SELECT  `errors` . *  FROM  `errors`  WHERE  ( message  like  &#39;%NoMethodError: undefined method `is_approved_by_finance?\\&#39; for nil:NilClass%&#39; ) +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ |  id  |  select_type  |  table  |  type  |  possible_keys  |  key  |  key_len  |  ref  |  rows  |  Extra  | +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ |  1  |  SIMPLE  |  errors  |  ALL  |  NULL  |  NULL  |  NULL  |  NULL  |  6739497  |  Using  where  | +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ 1  row  in  set  ( 0.00  sec )\n  irb ( main ): 003 : 0 &gt;  puts  ActiveRecord :: Base . connection . explain ( Error . where ( &#34;message LIKE  \\&#39; NoMethodError: undefined method `is_approved_by_finance? \\\\ &#39; for nil:NilClass% \\&#39; &#34; ). to_sql )  EXPLAIN  ( 0.5 ms )  EXPLAIN  SELECT  `errors` . *  FROM  `errors`  WHERE  ( message  LIKE  &#39;NoMethodError: undefined method `is_approved_by_finance?\\&#39; for nil:NilClass%&#39; ) +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ |  id  |  select_type  |  table  |  type  |  possible_keys  |  key  |  key_len  |  ref  |  rows  |  Extra  | +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ |  1  |  SIMPLE  |  errors  |  ALL  |  NULL  |  NULL  |  NULL  |  NULL  |  6739497  |  Using  where  | +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ 1  row  in  set  ( 0.00  sec )\n Oh crap. What\u2019 gives?! They look exactly the same! Why isn\u2019t MySQL optimizing! We sarged(?) it!\n Unfortunately for us, our  message doesn\u2019t have an index. Further, the column is a  TEXT column, and (given it\u2019s extremely varied and undefined length) if we want to add an index, MySQL  requires us to specify a  prefix length, which tells MySQL how much of the  beginning of the string should be indexed. Further further, only the InnoDB tables can be index this way. (Our  errors table uses the InnoDB engine, so no problem there).\n  Even though our  message  TEXT column doesn\u2019t have an index, our  ticket_id column does:\n irb ( main ): 004 : 0 &gt;  puts  ActiveRecord :: Base . connection . explain ( &#39;errors&#39; )  EXPLAIN  ( 2.6 ms )  EXPLAIN  errors +---------------------+--------------+------+-----+---------+----------------+ |  Field  |  Type  |  Null  |  Key  |  Default  |  Extra  | +---------------------+--------------+------+-----+---------+----------------+ |  id  |  int ( 11 )  |  NO  |  PRI  |  NULL  |  auto_increment  | |  message  |  text  |  YES  |  |  NULL  |  | |  backtrace  |  text  |  YES  |  |  NULL  |  | |  status_message  |  varchar ( 255 )  |  YES  |  MUL  |  NULL  |  | |  created_at  |  datetime  |  YES  |  |  NULL  |  | |  updated_at  |  datetime  |  YES  |  |  NULL  |  | |  runtime_environment  |  text  |  YES  |  |  NULL  |  | |  error_type  |  varchar ( 255 )  |  YES  |  MUL  |  NULL  |  | |  ticket_id  |  varchar ( 255 )  |  YES  |  MUL  |  NULL  |  | +---------------------+--------------+------+-----+---------+----------------+ 9  rows  in  set  ( 0.00  sec )\n The  ticket_id column is of type  varchar(255), which means we have no problem putting an index on there. And that\u2019s exactly what we did! In our case, it uses a  MUL, or \u201cMultiple\u201d, key meaning that it\u2019s value is used at the beginning of a non-unique key (multiple records can have the same index).\n Let\u2019s look at how our knowledge of sargable wildcard queries plays a role with this type of column.\n  irb ( main ): 005 : 0 &gt;  puts  ActiveRecord :: Base . connection . explain ( Error . where ( &#39;ticket_id LIKE \\&#39;%A00057440\\&#39;&#39; ). to_sql )  EXPLAIN  ( 0.5 ms )  EXPLAIN  SELECT  `errors` . *  FROM  `errors`  WHERE  ( ticket_id  LIKE  &#39;%A00057440%&#39; ) +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ |  id  |  select_type  |  table  |  type  |  possible_keys  |  key  |  key_len  |  ref  |  rows  |  Extra  | +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ |  1  |  SIMPLE  |  errors  |  ALL  |  NULL  |  NULL  |  NULL  |  NULL  |  8612441  |  Using  where  | +----+-------------+----------------+------+---------------+------+---------+------+---------+-------------+ 1  row  in  set  ( 0.00  sec )\n  irb ( main ): 006 : 0 &gt;  puts  ActiveRecord :: Base . connection . explain ( Error . where ( &#39;ticket_id LIKE \\&#39;%A00057440\\&#39;&#39; ). to_sql )  EXPLAIN  ( 1.2 ms )  EXPLAIN  SELECT  `errors` . *  FROM  `errors`  WHERE  ( ticket_id  LIKE  &#39;A00057440%&#39; ) +----+-------------+----------------+-------+--------------------------------------+--------------------------------------+---------+------+------+-----------------------+ |  id  |  select_type  |  table  |  type  |  possible_keys  |  key  |  key_len  |  ref  |  rows  |  Extra  | +----+-------------+----------------+-------+--------------------------------------+--------------------------------------+---------+------+------+-----------------------+ |  1  |  SIMPLE  |  errors  |  range  |  index_errors_on_ticket_id  |  index_errors_on_ticket_id  |  768  |  NULL  |  214  |  Using  index  condition  | +----+-------------+----------------+-------+--------------------------------------+--------------------------------------+---------+------+------+-----------------------+ 1  row  in  set  ( 0.00  sec )\n Aha! In the first query plan, MySQL tells us it will scan through  ALL  8612441 rows  Using where. The second, sargable, query plan tells us that it will only need to scan through a  range of  214 by  Using index condition!\n  I\u2019ll leave it as an exercise for the reader to  SET profiling = 1; to see the real cost. See: https://dev.mysql.com/doc/refman/8.0/en/show-profile.html\n  Ahhh, the sun is finally starting to set. We haven\u2019t finished (or really even begun) our investigation, but we\u2019re a little wiser about MySQL\u2019s indexing patterns.\n How can we use this knowledge to make our jobs a little easier and beat the heat?\n I guess the first thing to know is that  where_message_like could take a very long time if there are no other  WHERE conditions. This is because it\u2019s a  TEXT column with no index, but even if it had an index, using a wildcard at the front of our search string isn\u2019t doing us any favors.\n Also, it\u2019s nice to know that the  ticket_id column  is indexed, and if we want to search, we can use a sargable query to get our results much faster! Having a consistent format for  ticket_id might be something to consider; if we can deduce what the beginning of the string is, finding all of the relevant records could be super efficient!\n Lastly, if we did want to index the  message column, we have a few options:\n We could migrate it from  TEXT to  VARCHAR. The advantage there is gaining access to an easy index, but we give up the  benefits of choosing  TEXT in the first place.\n We could use a  column prefix key by specifying a prefix limit. That might get us some good bang for our buck if we use sargable queries.\n Or, we could invest in a  full-text index and really leverage what InnoDB can do! However, this will require us to alter our table a bit more and adjust our query patterns. Whether or not this plays nice with Rails is another question we\u2019d need to answer.\n Nevertheless, it\u2019s 5:00pm (4:56PM, but who\u2019s counting), so it\u2019s time to call it a day and grab the last few rays of sun down by the water.\n Before you  \u2318-Q out of Slack, you remember something. \u201c\u2026didn\u2019t Brianna say that they were going to look at this issue??\u201d", "posttime": "2021-07-25 23:30:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u67e5\u8be2,queries,\u7d22\u5f15", "title": "Sargable \u67e5\u8be2\u548c MUL \u7d22\u5f15\uff1b\u6216\u8005\u4e3a\u4ec0\u4e48\u6211\u7684\u67e5\u8be2\u5f88\u6162", "title_en": "Sargable Queries and MUL Indexes; or Why My Query Is Slow", "transed": 1, "url": "https://www.thomascountz.com/2021/07/09/sargable-queries-and-mysql-text-indexing", "via": "", "real_tags": ["\u67e5\u8be2", "queries", "\u7d22\u5f15"]}, {"category": "", "categoryclass": "", "imagename": "cd6583a04d1601db4329c87b8f5b41ac.jpg", "infoid": 1069684, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u77e5\u4f55\u6545\uff0c\u6211\u9519\u8fc7\u4e86\u53bb\u5e74 2 \u6708 SyFy \u4e3a\u4e54\u6cbb A. \u7f57\u6885\u7f57 (George A. Romero) 1985 \u5e74\u7ecf\u5178\u50f5\u5c38\u6050\u6016\u7535\u5f71\u300a\u4ea1\u7075\u8282\u300b(Day of the Dead) \u91cd\u65b0\u542f\u52a8\u7535\u89c6\u7684\u6d88\u606f\u2014\u2014\u5c31\u5728\u4e00\u573a\u81f4\u547d\u7684\u5168\u7403\u5927\u6d41\u884c\u5f00\u59cb\u4e4b\u524d\uff0c\u540c\u6837\u5982\u6b64\u3002\u4e0d\u77e5\u4f55\u6545\uff0c\u5c3d\u7ba1\u6240\u6709\u7684\u505c\u5de5\uff0c\u8be5\u7cfb\u5217\u8fd8\u662f\u8bbe\u6cd5\u6295\u5165\u751f\u4ea7\u3002 SyFy \u5728 Comic-Con@home \u7684\u4e00\u4e2a\u5c0f\u7ec4\u8ba8\u8bba\u4e2d\u653e\u5f03\u4e86\u5341\u96c6\u7cfb\u5217\u7684\u5b98\u65b9\u9884\u544a\u7247\uff0c\u8ba1\u5212\u4e8e\u4eca\u5e74 10 \u6708\u9996\u6620\uff0c\u6b63\u597d\u8d76\u4e0a\u4e07\u5723\u8282\u3002\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u89c2\u770b\u5b8c\u6574\u7684 45 \u5206\u949f\u9762\u677f\u3002\u6700\u521d\u7684\u300a\u4ea1\u7075\u4e4b\u65e5\u300b\u662f\u63a8\u51fa\u7cfb\u5217\u7535\u5f71\u7684\u4e09\u90e8\u66f2\u4e2d\u7684\u7b2c\u4e09\u90e8\uff0c\u4e4b\u524d\u662f\u300a\u4ea1\u7075\u4e4b\u591c\u300b\uff081968\uff09\u53ca\u5176\u7eed\u96c6\u300a\u4ea1\u8005\u9ece\u660e\u300b\uff081978\uff09\u3002\u7f57\u6885\u7f57\u6700\u521d\u5c06\u300a\u4ea1\u7075\u8282\u300b\u8bbe\u60f3\u4e3a\u50f5\u5c38\u7535\u5f71\u7684\u201c\u98d8\u201d\uff0c\u4f46\u4e0e\u5236\u7247\u5382\u5728\u63d0\u8bae\u7684 R \u8bc4\u7ea7\u4e0a\u5b58\u5728\u5206\u6b67\u2014\u2014\u7f57\u6885\u7f57\u5e0c\u671b\u8fd9\u90e8\u7535\u5f71\u4e0d\u88ab\u8bc4\u7ea7\u2014\u2014\u610f\u5473\u7740\u5bfc\u6f14\u6700\u7ec8\u53ea\u6709\u4ed6\u6700\u521d\u9884\u7b97\u7684\u4e00\u534a\uff08\u5927\u7ea6400 \u4e07\u7f8e\u5143\uff09\u3002\u4ed6\u88ab\u8feb\u5927\u5e45\u7f29\u5c0f\u81ea\u5df1\u7684\u89c6\u91ce\uff0c\u56e0\u6b64\u5f71\u7247\u7684\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u53d1\u751f\u5728\u5927\u6cbc\u6cfd\u5730\u7684\u4e00\u4e2a\u5b89\u5168\u5730\u4e0b\u63a9\u4f53\u4e2d\uff0c\u73b0\u573a\u7684\u79d1\u5b66\u5bb6\u548c\u58eb\u5175\u4e4b\u95f4\u7684\u7d27\u5f20\u5c40\u52bf\u52a0\u5267\u3002\u7f57\u6885\u7f57\u8868\u793a\u300a\u4ea1\u7075\u8282\u300b\u662f\u4ed6\u5728\u7cfb\u5217\u4e2d\u6700\u559c\u6b22\u7684\uff0c\u5c3d\u7ba1\u5b83\u5728\u6700\u521d\u4e09\u90e8\u66f2\u7684\u70c2\u756a\u8304\u4e0a\u7684\u201c\u65b0\u9c9c\u201d\u8bc4\u5206\u6700\u4f4e\uff0883%\uff09\u3002\u5b83\u5728\u5168\u7403\u7684\u7968\u623f\u6536\u5165\u4ec5\u4e3a 3400 \u4e07\u7f8e\u5143\uff08\u4e3b\u8981\u6765\u81ea VHS\u3001DVD \u548c\u84dd\u5149\u53d1\u884c\uff09\uff0c\u4f46\u5b83\u4ecd\u7136\u5728\u6d41\u884c\u6587\u5316\u4e2d\u7559\u4e0b\u4e86\u5370\u8bb0\u3002\u4f2a\u6587\u660e\u4e27\u5c38\u201cBub\u201d\u5ba2\u4e32\u4e86\u300a\u884c\u5c38\u8d70\u8089\u300bS4\u96c6\uff0c\u4f5c\u4e3a\u5728\u94c1\u8def\u96a7\u9053\u4e2d\u9047\u5230\u7684\u201c\u884c\u5c38\u8d70\u8089\u201d\u4e4b\u4e00\u3002\u800c\u5728\u300a\u602a\u5947\u7269\u8bed S3\u300b\uff08\u8bbe\u5b9a\u4e8e 1985 \u5e74\uff09\u4e2d\uff0c\u9752\u5c11\u5e74\u4eec\u90fd\u6f5c\u5165\u5546\u573a\u5267\u9662\u89c2\u770b\u4ea1\u7075\u8282\u7684\u65e9\u671f\u653e\u6620\u3002\u8be5\u7cfb\u5217\u4e2d\u7684\u53e6\u5916\u4e09\u90e8\u7535\u5f71\u4e8e 2005 \u5e74\u30012007 \u5e74\u548c 2009 \u5e74\u4e0a\u6620\uff0c\u800c\u300a\u6d3b\u6b7b\u4eba\u4e4b\u591c II\u300b\u76ee\u524d\u6b63\u5728\u5236\u4f5c\u4e2d\uff0c\u5b9a\u4e8e 2022 \u5e74\u4e0a\u6620\u3002\u6b7b\u4ea1\u4e4b\u65e5\u7684\u4e09\u4f4d\u539f\u59cb\u6f14\u5458\u5c06\u5728\u8fd9\u90e8\u7535\u5f71\u4e2d\u91cd\u65b0\u626e\u6f14\u4ed6\u4eec\u7684\u89d2\u8272\u3002\u65e9\u5728 SyFy \u9879\u76ee\u5ba3\u5e03\u65f6\uff0c\u300a\u4ea1\u7075\u4e4b\u65e5\u300b\u7535\u89c6\u5267\u7684\u5b98\u65b9\u65e5\u5fd7\u5c06\u5176\u63cf\u8ff0\u4e3a\u201c\u516d\u4e2a\u964c\u751f\u4eba\u8bd5\u56fe\u5728\u4e0d\u6b7b\u5165\u4fb5\u7684\u524d 24 \u5c0f\u65f6\u5185\u5e78\u5b58\u4e0b\u6765\u7684\u6fc0\u70c8\u6545\u4e8b\u201d\u3002\u5b83\u4e00\u76f4\u662f\u5bf9\u7f57\u6885\u7f57\u7684\u9882\u6b4c\uff0c\u4ed6\u51e0\u4e4e\u662f\u6574\u4e2a\u6d41\u6d3e\u7684\u5148\u9a71\u3002 \u201c\u6d3b\u6b7b\u4eba\u4e4b\u591c\u662f\u5728 1968 \u5e74\uff0c\u6211\u4eec\u4ecd\u7136\uff0c\u6bcf\u6b21\u50f5\u5c38\u51fa\u73b0\u65f6\uff0c\u6211\u4eec\u90fd\u4f1a\u8c08\u8bba\u7f57\u6885\u7f57\uff0c\u201d\u8054\u5408\u8282\u76ee\u4e3b\u6301\u4eba\uff08\u4e0e Jed Elinoff\uff09\u65af\u79d1\u7279\u00b7\u6258\u9a6c\u65af\u5728\u5c0f\u7ec4\u8ba8\u8bba\u4e2d\u8bf4\u9053\u3002 \u201c\u4ed6\u5efa\u7acb\u4e86\u6211\u4eec\u6240\u77e5\u7684\u73b0\u4ee3\u50f5\u5c38\u2026\u2026\u800c\u4e14\u4ed6\u4ee5\u4e00\u79cd\u4e5f\u589e\u52a0\u4e86\u793e\u4f1a\u8bc4\u8bba\u7684\u65b9\u5f0f\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u6bcf\u90e8\u50f5\u5c38\u7535\u5f71\u3001\u7535\u89c6\u8282\u76ee\u6216\u56fe\u753b\u5c0f\u8bf4\u90fd\u6b20\u7f57\u6885\u7f57\u7684\u9057\u4ea7\u3002\u201d\u4ece\u9884\u544a\u7247\u6765\u770b\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u6211\u4eec\u90a3\u4efd\u4ee5\u50f5\u5c38\u4e3a\u71c3\u6599\u7684\u8840\u8165\uff1a\u56db\u80a2\u88ab\u626f\u65ad\u3001\u5185\u810f\uff0c\u5f53\u7136\u8fd8\u6709\u7f8e\u5473\u7684\u5927\u8111\u7684\u6d88\u8017\u3002\u6839\u636e\u6258\u9a6c\u65af\u7684\u8bf4\u6cd5\uff0c\u5728\u6574\u4e2a\u7cfb\u5217\u8d5b\u4e2d\u8fd8\u5c06\u4e3a\u9e70\u773c\u7403\u8ff7\u6563\u5e03\u590d\u6d3b\u8282\u5f69\u86cb\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u5e0c\u671b\u518d\u6b21\u89c1\u5230\u5df4\u5e03\uff08\u5e26\u7740\u4ed6\u5632\u5f04\u7684\u656c\u793c\uff09\uff0c\u751a\u81f3\u53ef\u80fd\u662f\u5316\u5986/\u7279\u6548\u5927\u5e08\u6c64\u59c6\u00b7\u8428\u7ef4\u5c3c\uff0c\u4ed6\u200b\u200b\u662f\u539f\u7248\u4e09\u90e8\u66f2\u7684\u6210\u5458\u3002 \uff08\u8428\u7ef4\u5c3c\u5728\u53bb\u5e74\u7684 NOS4A2 \u548c Locke and Key \u4e2d\u4f5c\u4e3a\u6f14\u5458\u51fa\u4eba\u610f\u6599\u5730\u5ba2\u4e32\u6f14\u51fa\u3002\uff09\u4e5f\u5c31\u662f\u8bf4\uff0c\u8be5\u7cfb\u5217\u4e5f\u5c06\u4e0e\u90a3\u4e9b\u7ecf\u5178\u7684\u7f57\u6885\u7f57\u7535\u5f71\u5927\u76f8\u5f84\u5ead\u3002\u4f8b\u5982\uff0c\u770b\u8d77\u6765\u6709\u66f4\u591a\u7684\u5e7d\u9ed8\u611f\u3002\u867d\u7136\u8be5\u8282\u76ee\u5c06\u4ee5\u7ecf\u5178\u7684\u7f57\u6885\u7f57\u201c\u6162\u201d\u50f5\u5c38\u4e3a\u7279\u8272\uff0c\u4f46\u6258\u9a6c\u65af\u8868\u793a\uff0c\u50f5\u5c38\u5165\u4fb5\u4e0d\u4f1a\u662f\u7206\u53d1\u5c06\u6bcf\u4e2a\u4eba\u90fd\u53d8\u6210\u50f5\u5c38\u7684\u7ed3\u679c\u3002\u76f8\u53cd\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u573a\u666f\uff0c\u6b7b\u8005\u5f00\u59cb\u590d\u6d3b\u5e76\u5403\u6389\u6545\u4e8b\u53d1\u751f\u7684\u5c0f\u9547\u7684\u5c45\u6c11\u3002 \uff08\u5728\u8fd9\u65b9\u9762\uff0c\u5b83\u7c7b\u4f3c\u4e8e 2019 \u5e74\u7684\u300a\u6b7b\u8005\u4e0d\u6b7b\u300b\u7684\u524d\u63d0\u3002\uff09\u636e\u6258\u9a6c\u65af\u8bf4\uff0c\u50f5\u5c38\u4e0d\u80fd\u901a\u8fc7\u7b80\u5355\u7684\u5934\u90e8\u5c04\u51fb\u8f7b\u6613\u6740\u6b7b\uff0c\u8fd9\u5e94\u8be5\u4f1a\u66f4\u52a0\u5371\u9669\u3002\u4ea1\u7075\u8282\u5c06\u4e8e 2021 \u5e74 10 \u6708\u5728 SyFy \u9996\u6620\u3002 \u6f14\u5458\u5305\u62ec\u5a1c\u5854\u8389\u00b7\u9a6c\u62c9\u5361\u9970\u6f14\u52b3\u4f26\u00b7\u8c6a\u5a01\u5c14\uff0c\u57fa\u5357\u00b7\u7279\u857e\u897f\u9970\u6f14\u5361\u59c6\u00b7\u9ea6\u514b\u5fb7\u83ab\u7279\uff0c\u4e39\u5c3c\u5c14\u00b7\u591a\u8d6b\u5c3c\u9970\u6f14\u5362\u514b\u00b7\u9c8d\u66fc\uff0c\u6469\u6839\u00b7\u970d\u59c6\u65af\u7279\u7f57\u59c6\u9970\u6f14\u838e\u62c9\u00b7\u5e03\u83b1\u514b\u4f0d\u5fb7\uff0c\u7c73\u5170\u8fbe\u00b7\u5f17\u91cc\u8d21\u9970\u6f14\u5b9d\u62c9\u00b7\u9c8d\u66fc\uff0c\u8fea\u626c\u00b7\u6d1b\u7ea6\u62c9\u9970\u6f14\u6770\u00b7\u8d39\u820d\u5c14\uff0c Kristy Dawn Dinsmore \u9970\u6f14 Amy\uff0cChristopher Russell \u9970\u6f14 Trey Bowman\uff0cMatty Finochio \u9970\u6f14 Bobby Hart\uff0cKevin O&#39;Grady \u9970\u6f14 Rhodes\uff0cLucia Walters \u9970\u6f14 Logan\uff0cStefanie von Pfetten \u9970\u6f14 Cindy\uff0cDarryl Scheelar \u9970\u6f14 Magnum\uff0cTrezzo Mahoro \u9970\u6f14 Trent\uff0cCaitlin Stryker \u9970\u6f14 Nicole\u548c Marci T. House \u9970\u6f14\u6d3e\u514b\u8239\u957f\u3002\u4eba\u4eec\u5047\u8bbe\u5176\u4e2d\u4e00\u4e9b\u6f14\u5458\u6700\u7ec8\u4f1a\u6210\u4e3a\u50f5\u5c38\u98df\u7269\u3002", "note_en": "Somehow I missed the news last February that SyFy  had greenlit a TV reboot of George A. Romero&#39;s classic 1985 zombie horror film,  Day of the Dead\u2014just before the widespread onset of a deadly global pandemic, no less. And somehow the series managed to get into production despite all the shutdowns. SyFy dropped the official trailer for the ten-episode series during a panel at Comic-Con@home, with a planned premiere date this October, just in time for Halloween. You can watch the full 45-minute panel  here.\n The original   Day of the Dead was the third in a trilogy of films that launched a franchise, preceded by   Night of the Living the Dead (1968) and its sequel,   Dawn of the Dead (1978).\u00a0Romero originally envisioned  Day of the Dead as the  Gone With the Wind of zombie movies, but disagreements with the studio over a proposed R-rating\u2014Romero wanted the film to be unrated\u2014meant that the director ended up with half his original budget (about $4 million). He was forced to scale back his vision substantially, so much of the film takes place in a secure underground bunker in the Everglades, where tensions rise between the scientists and soldiers on-site.\n Romero has said that  Day of the Dead is his favorite within the franchise, although it has the lowest &#34;fresh&#34; rating (83 percent) on Rotten Tomatoes of the initial trilogy. It only grossed $34 million worldwide (mostly from VHS, DVD, and Blu-Ray releases), but it still left its mark on popular culture. The pseudo-civilized zombie &#34;Bub&#34; made a cameo on a S4 episode of  The Walking Dead as one of the &#34;walkers&#34; encountered in a railroad tunnel. And in   Stranger Things S3 (set in 1985), the teens all sneak into a mall theater to watch an early screening of  Day of the Dead. Three more films in the franchise were released in 2005, 2007, and 2009, and  Night of the Living Dead II is currently in production, slated for a 2022 release. Three of the original cast members from  Day of the Dead will reprise their roles in that film.\n Back when the SyFy project  was announced, the official logline for the  Day of the Dead TV series described it as &#34;the intense story of six strangers trying to survive the first 24 hours of an undead invasion.&#34; It was always intended as an ode to Romero, who pretty much pioneered the entire genre.\u00a0 \u201cNight of the Living Dead was in 1968, and we\u2019re still, every time zombies come up, we talk about Romero,\u201d co-showrunner (with Jed Elinoff) Scott Thomas said during the panel. \u201cHe established what we know as the modern zombie... and\u00a0he did it in a way that also added social commentary. Every single zombie movie or TV show or graphic novel owes Romero for his legacy.\u201d\n    Judging from the trailer, we&#39;ll get our share of zombie-fueled gore: limbs torn off, disembowelment, and of course, the consumption of tasty brains. There will also be Easter eggs scattered throughout the series for eagle-eyed fans, per Thomas. Personally, I&#39;m hoping to see Bub again (with his mocking salute), and maybe even makeup/special effects master  Tom Savini, a crew member on the original trilogy. (Savini made surprise cameo appearances as an actor in last year&#39;s   NOS4A2 and   Locke and Key.)\n That said, the series will also depart significantly from those classic Romero movies. For instance, it looks like there be a lot more humor. And while the show will feature the classic Romero &#34;slow&#34; zombies, Thomas said that the zombie invasion will not be the result of an outbreak that starts turning everyone into zombies. Rather, it will be a scenario where the dead start coming back to life and eating the residents of the small town in which the story takes place. (In that respect, it resembles the premise of 2019&#39;s  T he Dead Don&#39;t Die.) And the zombies cannot be killed as easily by a simple shot to the head, according to Thomas, which should up the stakes even more.\n Day of the Dead premieres on SyFy in October 2021. The cast includes Natalie Malaika as Lauren Howell, Keenan Tracey as Cam McDermott, Daniel Doheny as Luke Bowman, Morgan Holmstrom as Sarah Blackwood, Miranda Frigon as Paula Bowman, Deejan Loyola as Jai Fisher, Kristy Dawn Dinsmore as Amy, Christopher Russell as Trey Bowman, Matty Finochio as Bobby Hart, Kevin O&#39;Grady as Rhodes, Lucia Walters as Logan, Stefanie von Pfetten as Cindy, Darryl Scheelar as Magnum, Trezzo Mahoro as Trent, Caitlin Stryker as Nicole, and Marci T. House as Captain Pike. One assumes a few of those cast members will end up as zombie food.", "posttime": "2021-07-25 22:53:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6765\u5230,coming,\u9970\u6f14", "title": "\u50f5\u5c38\u5c06\u901a\u8fc7\u300a\u6b7b\u4ea1\u4e4b\u65e5\u300b\u7cfb\u5217\u9884\u544a\u7247\u6765\u5230 SyFy", "title_en": "Zombies are coming to SyFy with first Day of the Dead series trailer", "transed": 1, "url": "https://arstechnica.com/gaming/2021/07/zombies-are-coming-to-syfy-with-first-day-of-the-dead-series-trailer/", "via": "", "real_tags": ["\u6765\u5230", "coming", "\u9970\u6f14"]}, {"category": "", "categoryclass": "", "imagename": "115afb8d7e922e322e9e1729ef4cf265.jpg", "infoid": 1069683, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u5468\u4e09\u53d1\u5c04\u4ee5\u6765\uff0c\u4fc4\u7f57\u65af\u7a7a\u95f4\u7ad9\u6a21\u5757 Nauka \u7ecf\u5386\u4e86\u4e00\u7cfb\u5217\u6050\u614c\u3002\u622a\u81f3\u5468\u4e94\u4e0b\u5348\uff0c\u4fc4\u7f57\u65af\u65b0\u53d1\u5c04\u7684\u56fd\u9645\u7a7a\u95f4\u7ad9\u6a21\u5757 Nauka \u4ecd\u5728\u6218\u6597\u4e2d\uff0c\u56e0\u4e3a\u65e9\u671f\u62a5\u9053\u8868\u660e\u8be5\u6a21\u5757\u7684\u5907\u7528\u5f15\u64ce\u5df2\u6210\u529f\u70b9\u706b\u3002\u8fd9\u5bf9 Roscosmos \u6765\u8bf4\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u89e3\u8131\uff0c\u5b83\u51e0\u4e4e\u770b\u5230\u5176\u671f\u5f85\u5df2\u4e45\u7684\u6a21\u5757\u53d8\u6210\u4e86\u4e00\u4e2a\u60b2\u60e8\u7684\u592a\u7a7a\u7410\u4e8b\uff0c\u800c\u4e0d\u662f\u56fd\u9645\u7a7a\u95f4\u7ad9\u7684\u6700\u65b0\u90e8\u5206\u3002\u4f46\u5b83\u8fd8\u6ca1\u6709\u8d70\u51fa\u56f0\u5883\u3002 Nauka \u65c5\u7a0b\u7684\u7b2c\u4e00\u4e2a\u6545\u969c\u53d1\u751f\u5728\u6628\u5929\uff0c\u5f53\u65f6\u822a\u5929\u5668\u6ca1\u6709\u5b8c\u6210\u5b83\u7684\u7b2c\u4e00\u6b21\u8f68\u9053\u63d0\u5347\u71c3\u70e7\u3002\u8fd9\u610f\u5473\u7740\u672a\u8f7d\u4eba\u7684 Nauka \u65e0\u6cd5\u5b9e\u9645\u62e6\u622a\u56fd\u9645\u7a7a\u95f4\u7ad9\uff0c\u5b83\u8ba1\u5212\u4e8e 7 \u6708 29 \u65e5\u661f\u671f\u56db\u4e0e\u4e4b\u5bf9\u63a5\u3002 \u8be5\u95ee\u9898\u5f52\u56e0\u4e8e Nauka \u4e0a\u4e00\u53f0\u8ba1\u7b97\u673a\u7684\u8f6f\u4ef6\u95ee\u9898\uff0c\u8be5\u95ee\u9898\u963b\u6b62\u4e86\u822a\u5929\u5668\u7684\u4e3b\u5f15\u64ce\u5c04\u51fb\u3002 Nauka \u7684\u56e2\u961f\u80fd\u591f\u7ba1\u7406\u8fdc\u7a0b\u8def\u7ebf\u4fee\u6b63\uff0c\u4f46\u7b2c\u4e8c\u8f6e\u8def\u7ebf\u4fee\u6b63\u88ab\u8ba4\u4e3a\u662f\u5fc5\u8981\u7684\uff0c\u5e76\u5b89\u6392\u5728\u4eca\u5929\u3002\u8bb0\u8005\u963f\u7eb3\u6258\u5229\u00b7\u624e\u514b (Anatoly Zak) \u7684\u4e00\u4efd\u65e9\u671f\u62a5\u544a\u8868\u660e\uff0c\u822a\u5929\u5668\u7684\u4e00\u4e2a\u5f15\u64ce\u5728\u6267\u884c\u4efb\u52a1\u65f6\u7a81\u7136\u6062\u590d\u4e86\u751f\u547d\u3002\u54c8\u4f5b-\u53f2\u5bc6\u68ee\u5929\u4f53\u7269\u7406\u4e2d\u5fc3\u7684\u5929\u4f53\u7269\u7406\u5b66\u5bb6\u4e54\u7eb3\u68ee\u00b7\u9ea6\u514b\u9053\u5a01\u5c14 (Jonathan McDowell) \u5728\u4eca\u5929\u7684\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8bf4\uff0c\u201c\u5907\u7528\u5f15\u64ce\u4f3c\u4e4e\u70b9\u706b\u6b63\u5e38\u201d\uff0c\u4f46\u4ed6\u8865\u5145\u8bf4\uff0c\u5f15\u64ce\u7684\u72b6\u6001\u5c1a\u4e0d\u786e\u5b9a\uff0c\u5f88\u53ef\u80fd\u662f\u51e0\u4e2a\u5c0f\u65f6\u524d\uff0c\u6765\u81ea Nauka \u7684\u65b0\u6570\u636e\u96c6\u9a8c\u8bc1\u4e86\u8fd9\u79cd\u60c5\u51b5\u3002\u63a8\u8fdb\u5668\u53ea\u662f\u5de5\u7a0b\u96be\u9898\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u65b0\u6a21\u5757\u51e0\u4e4e\u662f\u514d\u8d39\u7684\u3002\u636e SpaceNews \u62a5\u9053\uff0cNauka \u4e5f\u9047\u5230\u4e86\u4e00\u6839\u5929\u7ebf\u53ca\u5176\u5bf9\u63a5\u76ee\u6807\u7684\u95ee\u9898\uff0c\u5e76\u4e14\u4e0d\u786e\u5b9a\u8fd9\u4e9b\u95ee\u9898\u5c06\u5982\u4f55\u5f71\u54cd\u5bf9\u63a5\u5c1d\u8bd5\u3002\u9ea6\u514b\u9053\u5c14\u8bf4\uff1a\u201c\u663e\u7136\uff0c\u5e93\u5c14\u65af\u4f1a\u5408\u7cfb\u7edf\u4ecd\u7136\u5b58\u5728\u95ee\u9898\uff0c\u8fd9\u5bf9\u5bf9\u63a5\u975e\u5e38\u5173\u952e\uff0c\u201d\u5e76\u8865\u5145\u8bf4\uff0c\u822a\u5929\u5668\u7684 TORU \u7cfb\u7edf\u2014\u2014\u5141\u8bb8\u56fd\u9645\u7a7a\u95f4\u7ad9\u4e0a\u7684\u5b87\u822a\u5458\u534f\u52a9\u5bf9\u63a5\u2014\u2014\u5de5\u4f5c\u6b63\u5e38\u3002\u76ee\u524d\uff0cPirs \u5bf9\u63a5\u8231\u76ee\u524d\u4f4d\u4e8e\u56fd\u9645\u7a7a\u95f4\u7ad9\u4e0a Nauka \u6307\u5b9a\u7684\u7801\u5934\u4e2d\u3002\u636e\u4fc4\u7f57\u65af\u592a\u7a7a\u7f51\u62a5\u9053\uff0c\u76ae\u5c14\u65af\u539f\u5b9a\u7684\u4e3a\u65b0\u6a21\u5757\u8ba9\u8def\u7684\u8ba1\u5212\u4ece\u5468\u4e94\u63a8\u8fdf\u5230\u5468\u65e5\u3002 \u201c\u590d\u6742\u7684\u822a\u5929\u5668\u51fa\u73b0\u521d\u671f\u95ee\u9898\u5e76\u4e0d\u7f55\u89c1\u3002\u7136\u800c\uff0c\u8fd9\u6b21\u98de\u884c\u4e2d\u95ee\u9898\u7684\u6570\u91cf\u548c\u4e25\u91cd\u7a0b\u5ea6\u8d85\u51fa\u4e86\u5e38\u6001\uff0c\u8003\u8651\u5230\u8f66\u8f86\u5f00\u53d1\u7684\u957f\u671f\u5ef6\u8bef\uff0c\u8fd9\u4e5f\u8bb8\u5e76\u4e0d\u4ee4\u4eba\u610f\u5916\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u5bf9\u4ed6\u4eec\u6700\u7ec8\u5c06\u5b8c\u6210\u6210\u529f\u5bf9\u63a5\u6301\u9002\u5ea6\u4e50\u89c2\u6001\u5ea6\uff0c\u5c3d\u7ba1\u4e0d\u4e00\u5b9a\u662f\u7b2c\u4e00\u6b21\u5c1d\u8bd5\uff0c\u201d\u9ea6\u514b\u9053\u5c14\u8bf4\u3002\u7559\u610f\u8fd9\u8258\u5b87\u5b99\u98de\u8239\u3002\u8fd9\u4e2a\u6545\u4e8b\u80af\u5b9a\u8fd8\u6709\u4e00\u4e24\u4e2a\u8f6c\u6298\u3002\n\u6211\u5bf9\u4ed6\u4eec\u6700\u7ec8\u4f1a\u6210\u529f\u5bf9\u63a5\u6301\u9002\u5ea6\u4e50\u89c2\u7684\u6001\u5ea6\uff0c\u5c3d\u7ba1\u4e0d\u4e00\u5b9a\u662f\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u542c\u8d77\u6765\u50cf\u6211\u5728 KSP \u4e2d\uff01\u5c3d\u7ba1\u5982\u6b64\uff0c\u4ed6\u4eec\u65e0\u6cd5\u9009\u62e9\u6309 alt+F12 \u5e76\u83b7\u5f97\u65e0\u9650\u63a8\u8fdb\u5242\u3002", "note_en": "The Russian space station module Nauka has had a streak of panicky moments since its launch on Wednesday.\n Russia\u2019s newly launched International Space Station module Nauka is still in the fight as of Friday afternoon, as early reports indicate that the module\u2019s backup engines have fired successfully. That\u2019s a big relief for Roscosmos, which nearly saw its long-awaited module become a tragic piece of space trivia instead of the newest piece of the International Space Station. But it\u2019s not out of the woods yet.\n  The first glitch in Nauka\u2019s journey happened yesterday, when the spacecraft   didn\u2019t complete its first orbit-raising burn. This meant that the uncrewed Nauka wasn\u2019t on track to actually intercept the ISS, which it\u2019s scheduled to dock with on Thursday, July 29. The problem was attributed to a software issue in a computer aboard Nauka, which prevented the spacecraft\u2019s main engines from firing. Nauka\u2019s team was able to manage a remote course correction, but a second bout of course corrections were deemed necessary, and scheduled for today.   One early report from journalist Anatoly Zak indicated that one of the spacecraft\u2019s engines sputtered back to life in a mission. The \u201cbackup engine seems to have fired fine,\u201d said Jonathan McDowell, an astrophysicist at the Harvard-Smithsonian Center for Astrophysics, in an email today, though he added that the status of the engines was not yet certain and it would likely be a few hours before a new dataset from Nauka verified the situation.\n     The thrusters are just one piece of the engineering puzzle, so the new module is hardly home free. Nauka\u2019s also been having issues with one antenna and its docking target, and its uncertain how those issues will affect docking attempts,   SpaceNews reported. \u201cApparently there is still an issue with the Kurs rendezvous system, and that is pretty critical for docking,\u201d McDowell said, adding that the spacecraft\u2019s TORU system\u2014which allows the astronauts aboard the ISS assist with the docking\u2014is working normally.\n  For now, the Pirs docking compartment is currently sitting in Nauka\u2019s assigned dock on the ISS. Pirs\u2019 scheduled undocking to make way for the new module was postponed from Friday to Sunday,   according to RussianSpaceWeb.\n   \u201cIt is not unusual for complex spacecraft to have teething troubles. However, the number and severity of problems on this flight is above the norm, and perhaps this is not too surprising given the long delays in the development of the vehicle. Nevertheless, I am moderately optimistic that they will eventually complete a successful docking, although not necessarily on the first attempt,\u201d McDowell said.\n Keep your eyes on this spacecraft. There\u2019s certainly a twist or two left in this tale.\n        I am moderately optimistic that they will eventually complete a successful docking, although not necessarily on the first attempt\n Sounds like me in KSP! Although, they don\u2019t have the option of hitting alt+F12 and getting unlimited propellant.", "posttime": "2021-07-25 22:44:53", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4fc4\u7f57\u65af,\u7a7a\u95f4\u7ad9,space,nauka", "title": "\u4fc4\u7f57\u65af\u5411\u7a7a\u95f4\u7ad9\u53d1\u9001\u62d6\u5ef6\u5df2\u4e45\u7684\u6a21\u5757\u548c\u673a\u68b0\u81c2\u9047\u5230\u66f4\u591a\u95ee\u9898", "title_en": "Russia Encounters More Problems Sending Long-Delayed Module and Robotic Arm to Space Station", "transed": 1, "url": "https://gizmodo.com/russian-module-headed-for-the-iss-is-still-having-probl-1847352303", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u7a7a\u95f4\u7ad9", "space", "nauka"]}, {"category": "", "categoryclass": "", "imagename": "bb4e521c1fec24d757580738dffa0780.png", "infoid": 1069682, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0a\u4e2a\u6708\uff0c\u4e00\u4f4d\u5728\u4e1c\u975e\u56fd\u5bb6\u53ea\u5f85\u4e86\u51e0\u4e2a\u6708\u7684\u6cd5\u56fd\u521d\u521b\u516c\u53f8\u521b\u59cb\u4eba\u4f3c\u4e4e\u6beb\u4e0d\u8d39\u529b\u5730\u4e3a\u4ed6\u7684\u65b0\u98df\u54c1\u914d\u9001\u5e94\u7528\u7b79\u96c6\u4e86 100 \u4e07\u7f8e\u5143\u7684\u79cd\u5b50\u524d\u8d44\u91d1\uff0c\u8fd9\u5728\u80af\u5c3c\u4e9a\u793e\u4ea4\u5a92\u4f53\u4e0a\u5f15\u8d77\u4e86\u8f69\u7136\u5927\u6ce2\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5f53\u5730\u548c\u5730\u533a\u7684\u521b\u59cb\u4eba\u8868\u793a\uff0c\u7ecf\u8fc7\u591a\u5e74\u7684\u5c1d\u8bd5\uff0c\u4ed6\u4eec\u4ecd\u7136\u96be\u4ee5\u6574\u5408\u8d44\u91d1\u3002\u4e0a\u5468\u4e0e\u80af\u5c3c\u4e9a\u79d1\u6280\u521b\u59cb\u4eba\u8c08\u8bba\u8fd9\u4ef6\u4e8b\u65f6\uff0c\u6211\u60f3\u8d77\u4e86 Ng\u0169g\u0129 wa Thiong&#39;o \u56de\u5fc6\u5f55\u300a\u6218\u65f6\u68a6\u60f3\u300b\u4e2d\u7684\u4e00\u53e5\u8bdd\uff1a\u201c\u76f8\u4fe1\u81ea\u5df1\u6bd4\u65e0\u4f11\u6b62\u5730\u62c5\u5fc3\u522b\u4eba\u5bf9\u4f60\u7684\u770b\u6cd5\u66f4\u91cd\u8981\u3002 \u201d Ng\u0169g\u0129 \u56de\u5fc6\u8d77\u4ed6\u5728\u6b96\u6c11\u65f6\u4ee3\u80af\u5c3c\u4e9a\u7684\u7ae5\u5e74\u65f6\u4ee3\u7684\u4e00\u4e2a\u5b9e\u73b0\u65f6\u523b\uff0c\u4f46\u4eca\u5929\u8fd9\u53e5\u8bdd\u611f\u89c9\u5f88\u8d34\u5207\u3002\u5728 2010 \u5e74\u4ee3\u521d\u671f\uff0c\u80af\u5c3c\u4e9a\u521a\u521a\u8d77\u6b65\u7684\u79d1\u6280\u751f\u6001\u7cfb\u7edf\u88ab\u7528\u4f5c\u66f4\u5e7f\u6cdb\u7684\u201c\u975e\u6d32\u5d1b\u8d77\u201d\u53d9\u4e8b\u7684\u7b80\u5199\u3002\u968f\u7740\u521d\u521b\u516c\u53f8\u7684\u840c\u82bd\u548c\u6280\u672f\u4eba\u624d\u6d8c\u5411\u5185\u7f57\u6bd5\uff0c\u5b83\u5f88\u5feb\u88ab\u79f0\u4e3a\u201c\u7845\u8c37\u5927\u8349\u539f\u201d\u3002\u4f46\u5230\u4e86 2016 \u5e74\uff0c\u5f53\u5730\u5708\u5b50\u91cc\u7eb7\u7eb7\u8bae\u8bba\u8bf4\uff0c\u8fd9\u7b14\u8d44\u91d1\u4f3c\u4e4e\u4e0d\u6210\u6bd4\u4f8b\u5730\u504f\u5411\u4e8e\u5728\u8be5\u56fd\u521b\u529e\u516c\u53f8\u7684\u5317\u7f8e\u548c\u6b27\u6d32\u521b\u59cb\u4eba\u3002\u4e8b\u60c5\u5728 2017 \u5e74\u8fbe\u5230\u9876\u5cf0\uff0c\u4e00\u4efd\u540d\u4e3a\u201c\u6253\u7834\u5e38\u89c4\u201d\u7684\u4e61\u6751\u8d44\u672c\u62a5\u544a\u4f3c\u4e4e\u8bc1\u5b9e\u4e86\u8bb8\u591a\u5f53\u5730\u521b\u59cb\u4eba\u548c\u8bb0\u8005\u7684\u8bf4\u6cd5\uff1a\u5728\u4e1c\u975e\uff0c2015 \u5e74\u548c 2016 \u5e74\u62ab\u9732\u7684\u521b\u4e1a\u6295\u8d44\u4e2d\u6709 90% \u6d41\u5411\u4e86\u62e5\u6709\u4e00\u540d\u6216\u591a\u540d\u6b27\u6d32\u6216\u5317\u7f8e\u521b\u59cb\u4eba\u3002 Village Capital \u975e\u6d32\u548c\u4e2d\u4e1c\u533a\u57df\u603b\u76d1 Aedana Ashebir \u544a\u8bc9\u6211\uff0c\u8fd9\u662f\u4e00\u4e2a\u5728\u8fc7\u53bb\u4e94\u5e74\u4e2d\u4e00\u76f4\u6ca1\u6709\u6d88\u5931\u7684\u95ee\u9898\u3002\u5bf9 2019 \u5e74\u6570\u636e\u7684\u5206\u6790\u663e\u793a\uff0c\u5f53\u5e74\u7b79\u96c6\u8d85\u8fc7 100 \u4e07\u7f8e\u5143\u7684\u80af\u5c3c\u4e9a\u521d\u521b\u516c\u53f8\u4e2d\uff0c\u53ea\u6709\u4e00\u5bb6\u62e5\u6709\u672c\u5730\u521b\u59cb\u4eba\u3002\u56db\u5bb6\u521d\u521b\u516c\u53f8\u7684\u521b\u59cb\u4eba\u662f\u5916\u56fd\u548c\u672c\u5730\u521b\u59cb\u4eba\uff0c\u800c 11 \u5bb6\u5219\u662f\u5916\u7c4d\u521b\u59cb\u4eba\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u79cd\u8d8b\u52bf\u5e76\u4e0d\u9002\u7528\u4e8e\u975e\u6d32\u5927\u9646\u7684\u5176\u4ed6\u5730\u65b9\uff1a\u5728\u62c9\u5404\u65af\u84ec\u52c3\u53d1\u5c55\u7684\u79d1\u6280\u4e2d\u5fc3\uff0c\u540c\u4e00\u5206\u6790\u4e2d\u786e\u5b9a\u7684\u521b\u59cb\u4eba\u4e2d\u6709 55% (12) \u662f\u5c3c\u65e5\u5229\u4e9a\u4eba\uff0c\u800c\u5728\u5357\u975e\uff0c56% (14) \u7684\u521b\u59cb\u4eba\u662f\u5c3c\u65e5\u5229\u4e9a\u4eba\u3002\u521b\u59cb\u4eba\u662f\u5f53\u5730\u4eba\u3002\u8fd9\u79cd\u4e0e\u5176\u4ed6\u975e\u6d32\u5e02\u573a\u7684\u6bd4\u8f83\u53ea\u4f1a\u52a0\u6df1\u80af\u5c3c\u4e9a\u8bb8\u591a\u957f\u671f\u6280\u672f\u89c2\u5bdf\u8005\u7684\u632b\u8d25\u611f\u3002\u56e0\u6b64\uff0c\u4e0a\u4e2a\u6708\uff0c\u5f53\u4e00\u4f4d\u6301\u6709\u8bbf\u5ba2\u7b7e\u8bc1\u7684\u5e74\u8f7b\u6cd5\u56fd\u521b\u59cb\u4eba Robin Reecht \u4e3a\u80af\u5c3c\u4e9a\u98df\u54c1\u914d\u9001\u5e94\u7528\u7a0b\u5e8f Kune \u7b79\u96c6\u4e86 100 \u4e07\u7f8e\u5143\u7684\u79cd\u5b50\u524d\u8d44\u91d1\u65f6\uff0c\u5927\u5bb6\u90fd\u76b1\u8d77\u4e86\u7709\u5934\u3002\u4f46\u771f\u6b63\u5f15\u53d1\u4e86#KOT\uff08\u63a8\u7279\u4e0a\u7684\u80af\u5c3c\u4e9a\u4eba\uff09\u548c\u80af\u5c3c\u4e9a\u793e\u4ea4\u5a92\u4f53\u7528\u6237\u7684\u5f3a\u70c8\u53cd\u5bf9\u662f\u968f\u540e\u5bf9 TechCrunch \u7684\u91c7\u8bbf\u3002\u5176\u4e2d\u5f15\u7528 Reecht \u7684\u8bdd\u8bf4\uff0c\u5728\u80af\u5c3c\u4e9a\u4ec5\u4ec5\u4e09\u5929\u540e\uff0c\u4ed6\u5c31\u6ce8\u610f\u5230\u201c\u4e0d\u53ef\u80fd\u201d\u4ee5\u201c\u4fbf\u5b9c\u7684\u4ef7\u683c\u201d\u83b7\u5f97\u7f8e\u5473\u7684\u98df\u7269\uff0c\u800c\u4ed6\u7684\u65b0\u5e94\u7528\u7a0b\u5e8f\u5c06\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8bb8\u591a\u8bc4\u8bba\u5458\u518d\u6b21\u63d0\u51fa\u4e86\u5f53\u5730\u751f\u6001\u7cfb\u7edf\u4e2d\u201c\u767d\u4eba\u7279\u6743\u201d\u7684\u5e7d\u7075\uff0c\u4ee5\u53ca\u5bf9\u5916\u7c4d\u521b\u59cb\u4eba\u7684\u660e\u663e\u504f\u597d\u3002 Reecht\u6b64\u540e\u4e3a\u4ed6\u7684\u8bc4\u8bba\u9053\u6b49\u3002 Kune \u5f15\u53d1\u7684\u793e\u4ea4\u5a92\u4f53\u6124\u6012\u4fc3\u4f7f 56 \u5c81\u7684\u5fb7\u56fd WordPress \u57f9\u8bad\u5e08 Stefan Kremer \u5efa\u7acb\u4e86\u8bbd\u523a\u7f51\u7ad9\u201cHire A Mzungu\u201d\u3002 Mzungu \u662f\u65af\u74e6\u5e0c\u91cc\u8bed\u4e2d\u5916\u56fd\u4eba\u7684\u610f\u601d\uff0c\u4f46\u901a\u5e38\u7528\u666e\u901a\u8bdd\u6765\u6307\u4ee3\u767d\u4eba\u3002\u6b63\u5982 Kremer \u7684\u7f51\u7ad9\u6240\u8bf4\uff0c\u201c\u5982\u679c\u8d44\u91d1\u83b7\u53d6\u7684\u4e3b\u8981\u9650\u5236\u662f\u53ef\u884c\u9879\u76ee\u4e2d\u7684 mzungu\uff1a\u8fd9\u662f\u60a8\u7684\u767d\u9f3b\u5b50\u51fa\u79df\u3002\u201d\n56 \u5c81\u7684 Kremer \u6765\u81ea\u9760\u8fd1\u4e39\u9ea6\u8fb9\u5883\u7684\u5fb7\u56fd\u5317\u90e8\u5c0f\u9547\uff0c\u5df2\u7ecf\u5728\u5185\u7f57\u6bd5\u4e0e\u5f53\u5730\u5f00\u53d1\u5546\u65ad\u65ad\u7eed\u7eed\u5730\u5de5\u4f5c\u4e86\u4e24\u5e74\u3002\u4ed6\u544a\u8bc9\u4e16\u754c\u5176\u4ed6\u5730\u65b9\uff0c\u867d\u7136\u8be5\u7f51\u7ad9\u786e\u5b9e\u662f\u4e3a\u4e86\u5f00\u73a9\u7b11\uff0c\u4f46\u5b83\u80af\u5b9a\u6709\u4e00\u4e2a\u4e25\u8083\u7684\u89c2\u70b9\u3002 \u201c\u6211\u770b\u5230\u4eba\u4eec\u5728\u5185\u7f57\u6bd5\u4ee5\u6570\u5b57\u6e38\u7267\u8005\u7684\u8eab\u4efd\u51fa\u73b0\uff0c\u4ed6\u4eec\u4e3a\u751a\u81f3\u53ef\u80fd\u4e0d\u9002\u5408\u5f53\u5730\u60c5\u51b5\u7684\u60f3\u6cd5\u83b7\u5f97\u8d44\u52a9\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u6bcf\u5f53\u6211\u5728\u5185\u7f57\u6bd5\u4e0e\u6211\u7684\u540c\u4e8b\u4ea4\u8c08\u65f6\uff0c\u4ed6\u4eec\u90fd\u4f1a\u6709\u89e3\u51b3\u95ee\u9898\u7684\u7edd\u5999\u60f3\u6cd5\uff0c\u6709\u65f6\u4ed6\u4eec\u53ea\u9700\u8981\u4e00\u70b9\u70b9 [\u5c11\u91cf] \u5f71\u54cd\u529b\u6765\u542f\u52a8\u548c\u8fd0\u884c\u3002\u514b\u96f7\u9ed8\u7684\u7f51\u7ad9\u663e\u793a\uff0c\u5916\u7c4d\u4eba\u58eb\u3001\u521b\u59cb\u4eba\u548c\u4e00\u4e9b\u6295\u8d44\u8005\u7684\u81ea\u6211\u610f\u8bc6\u8d8a\u6765\u8d8a\u5f3a\uff0c\u73b0\u5728\u56f4\u7ed5\u8fd9\u4e2a\u8bdd\u9898\u8fdb\u884c\u4e86\u66f4\u5fae\u5999\u7684\u5bf9\u8bdd\u3002 Phares Kariuki \u662f\u5185\u7f57\u6bd5\u7684\u4e00\u4f4d\u8d44\u6df1\u79d1\u6280\u521b\u59cb\u4eba\uff0c\u6b63\u5728\u521b\u529e\u4ed6\u7684\u7b2c\u4e09\u5bb6\u521d\u521b\u516c\u53f8\uff0c\u4ed6\u8868\u793a\uff0c\u9664\u4e86\u7ed3\u6784\u6027\u79cd\u65cf\u4e3b\u4e49\u4e4b\u5916\uff0c\u975e\u672c\u5730\u521b\u59cb\u4eba\u83b7\u5f97\u8d44\u52a9\u7684\u539f\u56e0\u8fd8\u6709\u7ec6\u5fae\u5dee\u522b\u3002\u201c\u8fc7\u53bb\uff0c\u6211\u7eaf\u7cb9\u5173\u6ce8\u79cd\u65cf\u4e3b\u4e49\uff0c\u4f46\u4e00\u65e6\u4f60\u5f00\u59cb\u5f80\u4e0a\u8d70\uff0c\u5f00\u59cb\u5173\u6ce8\u5f53\u5730\u7684\u95ee\u9898\uff0c\u4f60\u5f00\u59cb\u63a5\u53d7\u5404\u79cd\u56e0\u7d20\u7684\u6c47\u5408\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u4e00\u7684\u6545\u4e8b\uff0c\u201d\u4ed6\u544a\u8bc9\u4e16\u754c\u5176\u4ed6\u5730\u533a\u3002\u8fd9\u4e9b\u56e0\u7d20\u5305\u62ec\u4ed6\u6240\u63cf\u8ff0\u7684\u80af\u5c3c\u4e9a\u8584\u5f31\u7684\u516c\u53f8\u6cd5\u5f8b\u4f53\u7cfb\uff0c\u4ee5\u53ca\u5728\u4e3b\u8981\u56fd\u9645\u7ec4\u7ec7\uff08\u5305\u62ec\u5728\u5185\u7f57\u6bd5\u7684\u8054\u5408\u56fd\u673a\u6784\uff09\u5de5\u4f5c\u540e\u7559\u4e0b\u6765\u7684\u5927\u91cf\u5916\u7c4d\u4eba\u58eb\u3002\u4f46\u4e00\u4e2a\u660e\u663e\u7684\u95ee\u9898\u662f\uff0c\u4e00\u65e6\u975e\u6d32\u521d\u521b\u516c\u53f8\u5ea6\u8fc7\u4e86\u5929\u4f7f\u6295\u8d44\u7684\u6700\u65e9\u9636\u6bb5\uff0c\u51e0\u4e4e\u6240\u6709\u91cd\u8981\u7684\u98ce\u9669\u6295\u8d44\u57fa\u91d1\u90fd\u6765\u81ea\u975e\u6d32\u5927\u9646\u4ee5\u5916\u3002\u5c24\u5176\u662f\u5728\u5185\u7f57\u6bd5\uff0c\u8fd9\u4e9b\u57fa\u91d1\u4e2d\u7684\u5927\u90e8\u5206\u90fd\u662f\u7531\u5916\u56fd\u4eba\u7ba1\u7406\u7684\u3002 Kariuki \u548c\u5176\u4ed6\u521b\u59cb\u4eba\u8bf4\uff0c\u5f88\u591a\u65f6\u5019\uff0c\u6295\u8d44\u8005\u5e76\u4e0d\u5b8c\u5168\u4e86\u89e3\u5f53\u5730\u7684\u60c5\u51b5\u3002\u751a\u81f3\u627f\u8ba4\u521b\u59cb\u4eba\u7684\u672c\u5730\u7ecf\u9a8c\u6216\u8d44\u5386\u3002\u8fd9\u53cd\u8fc7\u6765\u53c8\u4ea7\u751f\u4e86\u6211\u4eec\u5728\u7845\u8c37\u770b\u5230\u7684\u7c7b\u4f3c\u504f\u89c1\u73b0\u8c61\uff0c\u98ce\u9669\u6295\u8d44\u652f\u6301\u5177\u6709\u76f8\u4f3c\u80cc\u666f\u548c\u751f\u6d3b\u7ecf\u5386\u7684\u521b\u59cb\u4eba\u2014\u2014\u9664\u4e86\u5b83\u53d1\u751f\u5728\u6570\u5343\u82f1\u91cc\u4e4b\u5916\u7684\u4e1c\u975e\u3002\u5185\u7f57\u6bd5\u7269\u6d41\u521d\u521b\u516c\u53f8 Senga Technologies \u7684\u521b\u59cb\u4eba June Odongo \u5728 2016 \u5e74\u642c\u56de\u80af\u5c3c\u4e9a\u4e4b\u524d\u5728\u7f8e\u56fd\u5ea6\u8fc7\u4e86\u5979\u804c\u4e1a\u751f\u6daf\u7684\u5927\u90e8\u5206\u65f6\u95f4\u3002\u5979\u5c06\u5176\u63cf\u8ff0\u4e3a\u201c\u770b\u8d77\u6765\u50cf\u6211\uff0c\u542c\u8d77\u6765\u50cf\u6211\u201d\u6211\u8ba4\u4e3a\uff0c\u8fd9\u79cd\u6295\u8d44\u65b9\u6cd5\u4f1a\u5632\u7b11\u975e\u6d32\u4e3b\u4e49\uff0c\u800c\u5ffd\u7565\u4e86\u5728\u8fd9\u91cc\u53d6\u5f97\u6210\u529f\u6240\u9700\u7684\u5f53\u5730\u4e13\u4e1a\u77e5\u8bc6\u3002\u201d\u5965\u4e1c\u6208\u8bf4\uff0c\u8fd9\u5bfc\u81f4\u201c\u6295\u8d44\u8005\u4e0d\u6295\u8d44\u5f53\u5730\u4f01\u4e1a\u5bb6\uff0c\u800c\u662f\u7ecf\u5e38\u6295\u8d44\u7092\u4f5c\u3002\u201d\n\u51e0\u4f4d\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u62e5\u6709\u66f4\u591a\u690d\u6839\u4e8e\u5f53\u5730\u7ecf\u6d4e\u7684\u5929\u4f7f\u548c\u98ce\u9669\u6295\u8d44\u3002 \u201c\u6700\u7ec8\uff0c\u4f60\u9700\u8981\u52a0\u5f3a\u5173\u5fc3\u5e02\u573a\u7684\u672c\u5730\u6295\u8d44\u8005\u9636\u5c42\uff0c\u201d\u963f\u8c22\u6bd4\u5c14\u8bf4\u3002 \u201c\u5916\u56fd\u521b\u59cb\u4eba\u4e0d\u4f1a\u505c\u6b62\u6765\u5230\u975e\u6d32\u5927\u9646\u3002\u201d Future Africa \u7684\u521b\u59cb\u4eba Iyinoluwa Aboyeji \u4e00\u76f4\u4e13\u6ce8\u4e8e\u5efa\u7acb\u4e00\u4e2a\u6df7\u5408\u672c\u5730\u548c\u5916\u56fd\u8d44\u672c\u7684\u98ce\u9669\u57fa\u91d1\u6765\u652f\u6301\u672c\u5730\u521b\u59cb\u4eba\uff0c\u4ed6\u8ba4\u4e3a\u80af\u5c3c\u4e9a\u7684\u5916\u56fd\u6295\u8d44\u8005\u9700\u8981\u5bf9\u4ed6\u4eec\u5982\u4f55\u4f7f\u7528\u8d44\u91d1\u8868\u73b0\u51fa\u66f4\u591a\u7684\u8d23\u4efb\u611f\u3002 \u201c\u4f60\u6765\u5230\u5c3c\u65e5\u5229\u4e9a\u6216\u80af\u5c3c\u4e9a\uff0c\u60f3\u6295\u8d44\u5f53\u5730\u4f01\u4e1a\uff0c\u4f46\u4f60\u51e0\u4e4e\u6ca1\u6709\u4f4f\u5728\u8fd9\u4e2a\u56fd\u5bb6\uff0c\u6216\u8005\u4f4f\u5728\u8fd9\u4e2a\u56fd\u5bb6\u7684\u4e13\u5c5e\u98de\u5730\u3002\u5f53\u8fd9\u4e9b\u6295\u8d44\u8005\u58f0\u79f0\u6ca1\u6709[\u4f01\u4e1a\u5bb6]\u4eba\u624d\u7ba1\u9053\uff0c\u4f46\u4ed6\u4eec\u51e0\u4e4e\u6ca1\u6709\u53c2\u4e0e\u5230\u751f\u6001\u7cfb\u7edf\u4e2d\u65f6\uff0c\u8c01\u8981\u8ba9\u4ed6\u4eec\u8d1f\u8d23\uff1f\u201d\u5c3c\u65e5\u5229\u4e9a\u4eba Aboyeji \u8bf4\uff0c\u4ed6\u662f Andela \u548c Flutterwave \u7684\u5171\u540c\u521b\u59cb\u4eba\u3002 \u201c\u5982\u679c\u8fd9\u4e0d\u662f\u6211\u4eec\u7684\u8d44\u672c\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u4e89\u8bba\uff0c\u5373\u4f7f\u6211\u4eec\u770b\u5230\u5b83\u6ca1\u6709\u5f97\u5230\u5f88\u597d\u7684\u5206\u914d\u3002\u201d\u4e8b\u5b9e\u4e0a\uff0c\u62c9\u5404\u65af\u73b0\u5728\u5df2\u7ecf\u8d85\u8d8a\u4e86\u5185\u7f57\u6bd5\u65e9\u671f\u7684\u79d1\u6280\u7e41\u8363\uff0c\u8fd9\u4e0d\u4ec5\u5f97\u76ca\u4e8e\u66f4\u5927\u7684\u56fd\u6c11\u7ecf\u6d4e\u548c\u4eba\u624d\u5e93\uff0c\u8fd8\u5f97\u76ca\u4e8e Aboyeji \u7b49\u672c\u571f\u79d1\u6280\u4f01\u4e1a\u5bb6\u7684\u5d1b\u8d77\uff0c\u4ed6\u4eec\u4e0e\u5f53\u5730\u5929\u4f7f\u7f51\u7edc\u4e00\u8d77\u56de\u9988\u4e86\u4e0b\u4e00\u4ee3\u521b\u59cb\u4eba\u6295\u8d44\u4e8e\u4ed6\u4eec\u7684\u60f3\u6cd5\u3002\u8fd9\u8ba9\u6211\u4eec\u56de\u5230\u4e86\u5173\u4e8e\u81ea\u4fe1\u7684 Ng\u0169g\u0129 \u8def\u7ebf\u3002\u8fd9\u53e5\u8bdd\u7684\u540e\u534a\u90e8\u5206\u53ef\u80fd\u53cd\u6620\u4e86\u80af\u5c3c\u4e9a\u79d1\u6280\u9886\u5bfc\u8005\u7684\u5229\u5bb3\u5173\u7cfb\uff0c\u4ed6\u4eec\u5e0c\u671b\u5728\u521b\u59cb\u4eba\u6293\u4f4f\u673a\u4f1a\u548c\u5f53\u5730\u8d44\u672c\u6d41\u5165\u98ce\u9669\u6295\u8d44\u65b9\u9762\u91cd\u65b0\u5e73\u8861\u5f53\u5730\u751f\u6001\u7cfb\u7edf\u3002 \u201c\u91cd\u89c6\u81ea\u5df1\uff0c\u522b\u4eba\u4e5f\u4f1a\u91cd\u89c6\u4f60\u3002\u6765\u81ea\u5185\u90e8\u7684\u9a8c\u8bc1\u662f\u6700\u597d\u7684\u3002\u201d", "note_en": "Last month, a  furor broke out on Kenyan social media when a French startup founder, who had only spent a few months in the East African country, seemingly had no trouble raising $1 million in pre-seed funding for his new food delivery app. Meanwhile, local and regional founders say they still have difficulty pulling together capital after years of attempts.\n While talking to a Kenyan tech founder about this last week, I was reminded of a line from Ng\u0169g\u0129 wa Thiong\u2019o\u2019s memoir,  Dreams in a Time of War: \u201cBelief in yourself is more important than endless worries of what others think of you .\u201d Ng\u0169g\u0129 was recalling a moment of realization from his childhood in colonial-era Kenya, but the quote feels apt today.\n In the early 2010s, Kenya\u2019s fledgling tech ecosystem was used as a shorthand for a wider \u201cAfrica Rising\u201d narrative. It was promptly dubbed \u201cSilicon Savannah\u201d as startups sprouted and tech talent flocked to Nairobi.\n But by 2016, there were mutterings in local circles about how the funding seemed to be disproportionately favoring North American and European founders who were launching companies in the country. Things came to a head in 2017, when a Village Capital  report titled \u201cBreaking the Pattern\u201d appeared to confirm what many local founders and journalists had been saying: In East Africa, 90% of disclosed startup investments in 2015 and 2016 went to companies with one or more European or North American founders. It\u2019s an issue that hasn\u2019t gone away in the last five years, Adedana Ashebir, regional director for Africa and the Middle East for Village Capital, told me.\n Analysis of 2019 data showed that only one of the Kenyan startups that raised more than $1 million that year had a local founder. Four startups had a mix of foreign and local founders, while 11 had expat founders. It\u2019s worth noting that this trend doesn\u2019t apply elsewhere on the continent: In Lagos\u2019 booming tech hub, 55% (12) of the founders identified in the same analysis were Nigerian, while in South Africa, 56% (14) of the founders were locals.\n This comparison with other African markets only serves to deepen the frustration of many of Kenya\u2019s long-term tech watchers. So last month when Robin Reecht, a young French founder on a visitor visa, raised $1 million in pre-seed funding for a Kenyan food delivery app called Kune, a collective eyebrow was raised. But it was a subsequent interview with  TechCrunch that really triggered a loud backlash with #KOT (Kenyans on Twitter) and Kenyan social media users. In it, Reecht is quoted as saying that after just three days in Kenya, he noticed it was \u201cimpossible\u201d to get \u201cgreat food at a cheap price\u201d and that his new app would fix this. Many commentators again raised the specter of  \u201cwhite privilege\u201d in the local ecosystem and what seems to be a clear preference for expat founders. Reecht has since  apologized for his comments.\n  The social media outrage sparked by Kune inspired Stefan Kremer, a 56-year-old German WordPress trainer, to set up the satirical website \u201c Hire A  Mzungu.\u201d Mzungu is the Kiswahili word for foreigner, but often used in common parlance to refer to a white person. As Kremer\u2019s site has it, \u201cIf the main restriction to the access of money is a  mzungu within a viable project: Here\u2019s your white nose for hire.\u201d\n Kremer, 56, who\u2019s from a small northern Germany town near the Danish border, has been working on and off in Nairobi with local developers for two years. He told  Rest of World that while the website was indeed meant to poke fun, there was definitely a serious point to it. \u201cI see people show up in Nairobi as digital nomads and they get funded for ideas that might not even fit the local context,\u201d he said. \u201cWhenever I speak to my guys in Nairobi, they have brilliant ideas that solve a problem and sometimes they just need a small [amount of] leverage to get things up and running.\u201d\n Kremer\u2019s site shows that there\u2019s a growing self-awareness among expats, founders, and some investors, and that there are now more nuanced conversations going on around the topic.\n  Phares Kariuki, a veteran tech founder in Nairobi who is on his third startup, said there&#39;s nuance in why non-local founders get funded, in addition to structural racism.\u201cIn the past, I focused purely on the racism, but once you start going up the layers and start looking at the local problems, you start to accept there are a confluence of factors, not a single story,\u201d he told  Rest of World.\n Those factors include what he describes as a weak corporate legal system in Kenya and a large community of expatriates who stay over after working at major international organizations including the UN agencies in Nairobi.\n But one obvious issue is that once African startups get past the very earliest stage of angel investing, almost all significant venture capital funds originate outside the continent. In Nairobi in particular, most of those funds are managed by foreigners. Kariuki and other founders say that oftentimes, investors don\u2019t fully understand the local context. Or even recognize founders\u2019 local experience or credentials.\n That, in turn, creates a similar bias phenomenon that we see in Silicon Valley, where VCs back founders from a similar background and life experience \u2014 except it\u2019s happening thousands of miles away in East Africa. June Odongo, founder of Senga Technologies, a Nairobi-based logistics startup, spent the bulk of her career in the United States before moving back to Kenya in 2016. She describes it as a \u201clooks-like-me-sounds-like-me investing method which, I think, derides Africanism and ignores local expertise required to succeed here.\u201d\n  This, Odongo said, leads to \u201cinvestors who aren\u2019t investing in the local entrepreneurs, but instead are often investing in hype.\u201d\n The only way to address this is to have more angel and venture capital that\u2019s rooted in the local economy, said several interviewees. \u201cUltimately you need to strengthen a local investor class that cares about the market,\u201d said Ashebir. \u201cForeign founders are not going to stop coming to the continent.\u201d\n Iyinoluwa Aboyeji, founder of Future Africa, who has focused on building a venture fund with a mix of local and foreign capital to back local founders, argued that foreign investors in Kenya need to show more accountability for how they\u2019re using funds.\n \u201cYou\u2019ve come to Nigeria or Kenya, and want to invest in local businesses, but you barely live in the country, or live in an exclusive enclave of the country. Who\u2019s holding these investors accountable when they claim there\u2019s no pipeline of [entrepreneurial] talent, but they\u2019re barely engaged with the ecosystem?\u201d said Aboyeji, a Nigerian who co-founded Andela and Flutterwave. \u201cIf it\u2019s not our capital, we can\u2019t argue, even if we see it\u2019s not being well-allocated.\u201d\n Indeed, Lagos has now  eclipsed Nairobi\u2019s early tech boom, benefiting from not just a larger national economy and talent pool, but also the rise of homegrown tech entrepreneurs like Aboyeji who, alongside local angel networks, have given back to the next generation of founders by investing in their ideas.\n Which brings us back to that Ng\u0169g\u0129 line on self-belief. The second half of that quote perhaps captures what\u2019s at stake for Kenyan tech leaders who want to rebalance the local ecosystem both in terms of founders taking chances and\u00a0 local capital flowing to venture funding.\n \u201cValue yourself and others will value you. Validation is best that comes from within.\u201d", "posttime": "2021-07-25 22:44:11", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u521b\u59cb\u4eba,kenyan", "title": "\u80af\u5c3c\u4e9a\u79d1\u6280\u521b\u59cb\u4eba\u8868\u793a\uff0c\u8be5\u56fd\u5b58\u5728\u5bf9\u5317\u7f8e\u548c\u6b27\u6d32\u5916\u7c4d\u4eba\u58eb\u7684\u8d44\u91d1\u504f\u89c1\uff1b\u5206\u6790\uff1a\u53ea\u6709\u4e00\u4f4d\u80af\u5c3c\u4e9a\u521b\u59cb\u4eba\u5728 2019 \u5e74\u7b79\u96c6\u4e86 100 \u4e07\u7f8e\u5143\u4ee5\u4e0a\u7684\u8d44\u91d1", "title_en": "Kenyan tech founders say there is a funding bias toward North American and European expats in the country; analysis: only one Kenyan founder raised $1M+ in 2019", "transed": 1, "url": "https://restofworld.org/2021/kenya-hasnt-figured-out-how-to-put-its-local-founders-first/", "via": "", "real_tags": ["\u521b\u59cb\u4eba", "kenyan"]}, {"category": "", "categoryclass": "", "imagename": "3e2087b53635a6bd78af6d2425c51dcf.png", "infoid": 1069681, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u57fa\u4e8e Web \u7684\u97f3\u9891/\u89c6\u9891\u6d41\u5e94\u7528\u7a0b\u5e8f\u548c\u6587\u4ef6\u7ba1\u7406\u5668\u3002\u5141\u8bb8\u60a8\u4f7f\u7528\u51e0\u4e4e\u4efb\u4f55\u652f\u6301\u4e92\u8054\u7f51\u7684\u8bbe\u5907\u4ece\u4efb\u4f55\u5730\u65b9\u8bbf\u95ee\u60a8\u7684\u97f3\u4e50\u548c\u89c6\u9891\u3002", "note_en": "A web based audio/video streaming application and file manager.  Allowing you to access your music &amp; videos from anywhere, using almost any internet enabled device.", "posttime": "2021-07-25 22:43:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u5f00\u6e90,\u6587\u4ef6,file,\u97f3\u9891", "title": "Ampache\uff1a\u4e00\u4e2a\u5f00\u6e90\u7684\u57fa\u4e8e\u7f51\u7edc\u7684\u97f3\u9891/\u89c6\u9891\u6d41\u5e94\u7528\u7a0b\u5e8f\u548c\u6587\u4ef6\u7ba1\u7406\u5668", "title_en": "Ampache: An open source web based audio/video streaming app and file manager", "transed": 1, "url": "https://ampache.org/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u5f00\u6e90", "\u6587\u4ef6", "file", "\u97f3\u9891"]}, {"category": "", "categoryclass": "", "imagename": "2ba64ccc6dd23f614c990b7ab7850a5d.jpg", "infoid": 1069679, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u62c9\u91cc\u4e0e\u6d1b\u6749\u77f6\u65f6\u62a5\u4f53\u80b2\u548c\u6587\u5316\u4e13\u680f\u4f5c\u5bb6 LZ \u683c\u5170\u5fb7\u68ee\u4e00\u8d77\u8c08\u8bba\u5982\u4f55\u9002\u5e94\u4ed6\u4f5c\u4e3a\u9ed1\u4eba\u540c\u6027\u604b\u8005\u7684\u8eab\u4efd\u83b1\u5fb7\u57fa\u5df2\u7ecf\u662f\u7f8e\u56fd\u961f\u6700\u53d7\u77a9\u76ee\u7684\u5965\u8fd0\u9009\u624b\u4e4b\u4e00\uff0c\u4f46\u5979\u4ece\u672a\u80fd\u591f\u5728\u590f\u5b63\u5965\u8fd0\u4f1a\u4e0a\u6e38\u6cf3\u5979\u6700\u597d\u7684\u6bd4\u8d5b.\u8fd9\u5373\u5c06\u6539\u53d8\u3002 Carlin Isles \u4e0e Rodger \u4e00\u8d77\u8ba8\u8bba\u6539\u53d8\u4ed6\u751f\u6d3b\u7684\u8054\u7cfb\u4ee5\u53ca\u4ed6\u83b7\u5f97\u5965\u8fd0\u4f1a\u5956\u724c\u7684\u673a\u4f1a\u3002 Seerat \u548c Rob \u4e0e Mirin Fader \u4e00\u8d77\u8ba8\u8bba\u5979\u7684\u65b0\u4e66\u201c\u8a79\u5c3c\u65af\uff1aNBA MVP \u7684\u4e0d\u53ef\u80fd\u5d1b\u8d77\u201d\u5e03\u83b1\u6069\u548c\u5927\u536b\u56de\u7b54\u542c\u4f17\u95ee\u9898\u5173\u4e8e\u66fc\u5b81\u5144\u5f1f\u5171\u540c\u4e3b\u6301\u201c\u5468\u4e00\u665a\u95f4\u8db3\u7403\u201d\u7535\u89c6\u5e7f\u64ad\uff0c\u6770\u592b\u8d1d\u7d22\u65af\u548c\u7406\u67e5\u5fb7\u5e03\u5170\u68ee\u524d\u5f80\u592a\u7a7a\uff0c\u4ee5\u53ca\u5728\u5e03\u83b1\u6069\u62c9\u592b\u7279\u52a0\u5165\u8ba8\u8bba\u4ed6\u7684\u65b0\u53d9\u4e8b\u64ad\u5ba2\u7cfb\u5217\u201c\u57fa\u56e0\u548c\u7f57\u6770\u201d\u4e4b\u524d\u7684\u66f4\u591a\u4fe1\u606f", "note_en": "Larry is joined by L.A. Times sports and culture columnist LZ Granderson to talk about becoming comfortable with his identity as a Black gay man\n  Ledecky is already one of Team USA\u2019s most decorated Olympians, but she\u2019s never been able to swim her best event in the Summer Games. That\u2019s about to change.\n  Carlin Isles joins Rodger to discuss the link that changed his life and his chances for an Olympic medal\n    Seerat and Rob are joined by Mirin Fader to discuss her new book, \u2018Giannis: The Improbable Rise of an NBA MVP\u2019\n  Bryan and David answer listener questions about the Manning brothers cohosting a \u2018Monday Night Football\u2019 telecast, Jeff Bezos and Richard Branson heading to space, and more before Brian Raftery joins to discuss his new narrative podcast series, \u2018Gene and Roger\u2019", "posttime": "2021-07-25 22:43:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6ed1\u677f,olympic,\u8ba8\u8bba", "title": "\u5965\u8fd0\u6ed1\u677f\u7684\u5174\u8d77\u4e0e\u6ed1\u51b0\u6587\u5316\u7684\u4e89\u8bba", "title_en": "The Rise of Olympic Skateboarding and the Debate over Skating Culture", "transed": 1, "url": "https://www.theringer.com/2021/7/22/22587848/rise-of-olympic-skateboarding-debate-over-skating-culture", "via": "", "real_tags": ["\u6ed1\u677f", "olympic", "\u8ba8\u8bba"]}, {"category": "", "categoryclass": "", "imagename": "4bbaf564e1fe187b1f951739c0879a8f.jpg", "infoid": 1069678, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce2\u58eb\u987f\u521d\u521b\u516c\u53f8 Form Energy \u5df2\u83b7\u5f97 2 \u4ebf\u7f8e\u5143\u7684 D \u7cfb\u5217\u8d44\u91d1\uff0c\u7528\u4e8e\u5f00\u53d1\u6240\u8c13\u7684\u80fd\u6e90\u5b58\u50a8\u7a81\u7834\u3002\u592a\u9633\u80fd\u548c\u98ce\u80fd\u7684\u751f\u4ea7\u65f6\u95f4\u5b58\u5728\u5dee\u5f02\uff0c\u56e0\u4e3a\u591a\u65e5\u5929\u6c14\u4e8b\u4ef6\u4f1a\u5f71\u54cd\u4ea7\u91cf\u3002\u56e0\u6b64\uff0c\u5177\u6709\u6210\u672c\u6548\u76ca\u7684\u591a\u65e5\u5b58\u50a8\u5bf9\u4e8e\u7535\u7f51\u53ef\u9760\u6027\u5f88\u91cd\u8981\u3002\u6ce2\u58eb\u987f\u521d\u521b\u516c\u53f8 Form Energy \u5f00\u53d1\u4e86\u6280\u672f\u6765\u6ee1\u8db3\u8fd9\u4e00\u9700\u6c42\uff0c\u6700\u8fd1\u63ed\u793a\u4e86\u4ed6\u4eec\u94c1\u7a7a\u6c14\u7535\u6c60\u80cc\u540e\u7684\u5316\u5b66\u6210\u5206\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5176\u94c1\u7a7a\u6c14\u7535\u6c60\u53ef\u4ee5\u4ee5\u4e0e\u4f20\u7edf\u53d1\u7535\u5382\u7ade\u4e89\u7684\u7cfb\u7edf\u6210\u672c\u63d0\u4f9b 100 \u5c0f\u65f6\u7684\u53ef\u518d\u751f\u80fd\u6e90\u7535\u529b\u3002 Form Energy \u8868\u793a\uff0c\u5728\u5168\u9762\u751f\u4ea7\u65f6\uff0c\u8fd9\u4e9b\u6a21\u5757\u5c06\u4ee5\u9502\u79bb\u5b50\u7535\u6c60\u6210\u672c\u7684\u5341\u5206\u4e4b\u4e00\u63d0\u4f9b\u7535\u529b\u3002\u94c1\u7a7a\u6c14\u7535\u6c60\u7531\u5145\u6ee1\u6570\u5343\u4e2a\u94c1\u7403\u7684\u7535\u6c60\u7ec4\u6210\uff0c\u8fd9\u4e9b\u94c1\u7403\u66b4\u9732\u5728\u7a7a\u6c14\u4e2d\u4f1a\u751f\u9508\u3002\u7136\u540e\u53bb\u9664\u6c27\u6c14\uff0c\u5c06\u94c1\u9508\u8fd8\u539f\u6210\u94c1\u3002\u63a7\u5236\u8fd9\u4e2a\u8fc7\u7a0b\u5141\u8bb8\u7535\u6c60\u5145\u7535\u548c\u653e\u7535\u3002\u8be5\u9879\u76ee\u5df2\u83b7\u5f97 2 \u4ebf\u7f8e\u5143\u7684 D \u7cfb\u5217\u8d44\u91d1\uff0c\u7531\u5b89\u8d5b\u4e50\u7c73\u5854\u5c14\u7684 XCarb \u521b\u65b0\u57fa\u91d1\u9886\u6295\u7684 2500 \u4e07\u7f8e\u5143\u3002\u5b89\u8d5b\u4e50\u7c73\u5854\u5c14\u5c06\u975e\u72ec\u5bb6\u4f9b\u5e94\u7535\u6c60\u7cfb\u7edf\u751f\u4ea7\u7684\u94c1\u6750\u6599\uff0cForm Energy \u8868\u793a\u6253\u7b97\u5728\u56fd\u5185\u91c7\u8d2d\u94c1\uff0c\u5728\u94c1\u7684\u6765\u6e90\u5730\u9644\u8fd1\u5236\u9020\u7535\u6c60\u3002\u8be5\u7535\u6c60\u7684\u7b2c\u4e00\u4e2a\u9879\u76ee\u662f\u4f4d\u4e8e\u7f8e\u56fd\u94c1\u77ff\u573a\u9644\u8fd1\u7684\u660e\u5c3c\u82cf\u8fbe\u5dde\u516c\u7528\u4e8b\u4e1a\u516c\u53f8 Great River Energy \u7684 1 MW \u88c5\u7f6e\u3002 Form Energy \u8868\u793a\uff0c\u9884\u8ba1\u5230 2023 \u5e74\uff0cGreat River Energy \u53d1\u7535\u5382\u5c06\u6709\u4e00\u4e2a 300 MW\u3001500 \u4e2a\u6a21\u5757\u7684\u8bbe\u65bd\u3002Form Energy \u9996\u5e2d\u6267\u884c\u5b98\u517c\u8054\u5408\u521b\u59cb\u4eba Mateo Jaramillo \u8868\u793a\uff1a\u201c\u6211\u4eec\u5bf9\u53ef\u7528\u6280\u672f\u8fdb\u884c\u4e86\u5e7f\u6cdb\u5ba1\u67e5\uff0c\u5e76\u5df2\u91cd\u65b0\u53d1\u660e\u4e86\u94c1\u7a7a\u6c14\u7535\u6c60\uff0c\u4ee5\u4f18\u5316\u5176\u4e3a\u7535\u7f51\u63d0\u4f9b\u591a\u65e5\u80fd\u91cf\u5b58\u50a8\u3002\u501f\u52a9\u8fd9\u9879\u6280\u672f\uff0c\u6211\u4eec\u6b63\u5728\u89e3\u51b3\u6df1\u5ea6\u8131\u78b3\u7684\u6700\u5927\u969c\u788d\uff1a\u5373\u4f7f\u5728\u6781\u7aef\u5929\u6c14\u6216\u7535\u7f51\u4e2d\u65ad\u7684\u591a\u5929\u671f\u95f4\uff0c\u4e5f\u53ef\u4ee5\u968f\u65f6\u968f\u5730\u63d0\u4f9b\u53ef\u518d\u751f\u80fd\u6e90\u3002\u201d\n\u6b64\u5185\u5bb9\u53d7\u7248\u6743\u4fdd\u62a4\uff0c\u4e0d\u5f97\u91cd\u590d\u4f7f\u7528\u3002\u5982\u679c\u60a8\u60f3\u4e0e\u6211\u4eec\u5408\u4f5c\u5e76\u5e0c\u671b\u91cd\u590d\u4f7f\u7528\u6211\u4eec\u7684\u90e8\u5206\u5185\u5bb9\uff0c\u8bf7\u8054\u7cfb\uff1aeditors@pv-magazine.com\u3002", "note_en": "Boston startup Form Energy has secured $200 million Series D funding for the development of what is being called a breakthrough in energy storage.\n      Solar and wind power have variability in their productive hours, as multi-day weather events can impact output. Therefore, multi-day storage that is cost effective is important in grid reliability.\n Boston startup Form Energy developed technology to address this need,  revealing recently the chemistry behind their iron-air batteries. The company said its iron-air batteries can deliver renewables-sourced electricity for 100 hours at system costs competitive with conventional power plants. At full-scale production, Form Energy said the modules would deliver electricity at tenth the cost of lithium-ion batteries.\n The iron-air battery is composed of cells filled with thousands of iron pellets\u00a0that\u00a0are exposed to air and create rust. The oxygen is then removed,\u00a0reverting the rust to iron.\u00a0Controlling this process allows the battery to be charged and discharged.\n $200 million in Series D funding has been secured for the project, led by\u00a0$25 million from\u00a0ArcelorMittal\u2019s\u00a0XCarb\u00a0innovation fund.\u00a0ArcelorMittal will non-exclusively supply the iron materials for the battery system production, and Form Energy said it\u00a0intends\u00a0to source its iron domestically, manufacturing the batteries near where the iron was sourced.\n The battery\u2019s first project is a 1 MW installation with Minnesota-based utility Great River Energy, located near the American Iron Range.  Form Energy said it expects to have a 300 MW, 500 module facility active at a Great River Energy power plant by 2023.\n Mateo Jaramillo, CEO and Co-founder of Form Energy, said, \u201cWe conducted a broad review of available technologies and have reinvented the iron-air battery to optimize it for multi-day energy storage for the electric grid. With this technology, we are tackling the biggest barrier to deep decarbonization: making renewable energy available when and where it\u2019s needed, even during multiple days of extreme weather or grid outages.\u201d\n This content is protected by copyright and may not be reused. If you want to cooperate with us and would like to reuse some of our content, please contact:  editors@pv-magazine.com.", "posttime": "2021-07-25 22:42:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5546\u4e1a,\u7a7a\u6c14,day,\u7535\u6c60", "title": "\u591a\u65e5\u94c1\u7a7a\u6c14\u7535\u6c60\u4ee5\u9502\u6210\u672c\u76841/10\u5b9e\u73b0\u5546\u4e1a\u5316", "title_en": "Multi-day iron-air batteries reach commercialization at 1/10th of lithium cost", "transed": 1, "url": "https://pv-magazine-usa.com/2021/07/23/multi-day-iron-air-batteries-reach-commercialization-at-one-tenth-of-the-cost-of-lithium/", "via": "", "real_tags": ["\u5546\u4e1a", "\u7a7a\u6c14", "day", "\u7535\u6c60"]}, {"category": "", "categoryclass": "", "imagename": "e176e5e9e48146708a2acaee3ff32d25.jpeg", "infoid": 1069676, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u662f\u4e00\u4e2a\u957f\u671f\u7684\u751f\u4ea7\u529b\u9ed1\u5ba2\u3002\u6211\u559c\u6b22\u4f18\u5316\u4e00\u5207\uff0c\u5c24\u5176\u662f\u6211\u7684\u5de5\u4f5c\u8bbe\u7f6e\u3002\u6211\u8ba4\u4e3a\uff0c\u8003\u8651\u5230\u6211\u5927\u7ea6 47% \u7684\u9192\u7740\u65f6\u95f4\u90fd\u82b1\u5728\u5de5\u4f5c\u4e0a\uff0c\u56e0\u6b64\u975e\u5e38\u614e\u91cd\u5730\u8ba9\u6211\u7684\u5de5\u4f5c\u4f53\u9a8c\u8fbe\u5230\u6700\u4f73\u72b6\u6001\u662f\u5f88\u6709\u610f\u4e49\u7684\u3002\u50cf\u4eca\u5929\u7684\u8bb8\u591a\u4e0a\u73ed\u65cf\u4e00\u6837\uff0c\u6211\u5728\u5de5\u4f5c\u65f6\u6709\u4e00\u5f20\u7535\u52a8\u5750\u7ad9\u4e24\u7528\u529e\u516c\u684c\u3002 \uff08\u6211\u5728\u5bb6\u91cc\u81ea\u5236\u4e86\u81ea\u5df1\u7684\u673a\u68b0\u5f0f\u5750\u7ad9\u4e24\u7528\u529e\u516c\u684c\uff0c\u4f46\u90a3\u662f\u53e6\u5916\u4e00\u56de\u4e8b\u4e86\uff09 \u521a\u5f00\u59cb\u4f7f\u7528\u65f6\uff0c\u6211\u975e\u5e38\u5174\u594b\uff0c\u4f46\u5f88\u5feb\u6211\u53d1\u73b0\u81ea\u5df1\u6574\u5929\u5750\u7740\uff0c\u5c3d\u7ba1\u529e\u516c\u684c\u5f88\u82b1\u54e8\u3002\u6211\u53d1\u73b0\u5f88\u96be\u517b\u6210\u7ad9\u7acb\u7684\u4e60\u60ef\u3002\u6211\u4ec0\u81f3\u5c1d\u8bd5\u5728\u624b\u673a\u4e0a\u8bbe\u7f6e\u63d0\u9192\u4ee5\u7ad9\u8d77\u6765\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u4e5f\u592a\u5bb9\u6613\u5ffd\u7565\uff0c\u4e5f\u592a\u5bb9\u6613\u8bf4\u201c\u6211\u73b0\u5728\u5f88\u7d2f\u3002\u51e0\u5206\u949f\u540e\u6211\u4f1a\u7ad9\u8d77\u6765\u3002\u201d\u6240\u4ee5\u6211\u51b3\u5b9a\u770b\u770b\u662f\u5426\u6709\u67d0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u6211\u7684\u529e\u516c\u684c\u81ea\u52a8\u5316\uff0c\u8fd9\u6837\u5b83\u5c31\u4f1a\u6309\u8ba1\u5212\u4e0a\u5347\uff0c\u65e0\u8bba\u6211\u662f\u5426\u613f\u610f\u7ad9\u7acb\u3002\u5766\u7387\u5730\u8bf4\uff0c\u6211\u6ca1\u60f3\u5230\u8fd9\u4e2a\u5de5\u7a0b\u9879\u76ee\u4f1a\u6210\u529f\uff0c\u4f46\u6211\u60f3\u6211\u4f1a\u8bd5\u7740\u62c6\u5f00\u6211\u529e\u516c\u684c\u7684\u63a7\u5236\u7bb1\uff0c\u770b\u770b\u91cc\u9762\u6709\u4ec0\u4e48\u3002\n\u6211\u53d6\u4e0b\u51e0\u4e2a\u87ba\u4e1d\uff0c\u7136\u540e\u2026\u2026\u77a7\uff01\u4e00\u6392\u9488\u6574\u9f50\u5730\u66b4\u9732\u5728\u6b63\u524d\u65b9\u3002\u6211\u60f3\u5b83\u4eec\u662f\u4e3a\u4e86\u6d4b\u8bd5\u800c\u6dfb\u52a0\u7684\uff0c\u4e5f\u8bb8\uff1f\u6211\u4e0d\u8ba4\u4e3a Poppin \u5728\u8bbe\u8ba1\u8fd9\u4e9b\u76d2\u5b50\u65f6\u4f1a\u60f3\u5230\u50cf\u6211\u8fd9\u6837\u7684\u751f\u4ea7\u529b\u9ed1\u5ba2\uff0c\u4f46\u8fd9\u4e9b\u522b\u9488\u6b63\u662f\u6211\u6240\u9700\u8981\u7684\u3002\u6211\u7684\u63a7\u5236\u7bb1\u4e2d\u7684\u5f15\u811a\u5728\u6b63\u786e\u8fde\u63a5\u65f6\u6a21\u62df\u4e86\u6309\u4e0b\u63a7\u5236\u7bb1\u6b63\u9762\u7684\u6309\u94ae\u3002\u6211\u771f\u6b63\u9700\u8981\u505a\u7684\u5c31\u662f\u6309\u4e0b\u4e00\u4e2a\u6309\u94ae\uff1a\u8fd9\u4e2a\u6309\u94ae\u53ef\u4ee5\u5c06\u684c\u5b50\u5347\u9ad8\u5230\u7ad9\u7acb\u9ad8\u5ea6\u3002\u6211\u4e0d\u62c5\u5fc3\u592a\u591a\u7684\u7ad9\u7acb\uff08\u6211\u7d2f\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\u81ea\u7136\u5750\u4e0b\uff09\uff0c\u6240\u4ee5\u6211\u4e0d\u9700\u8981\u4e00\u4e2a\u590d\u6742\u7684\u63a7\u5236\u5668\u6765\u5728\u5750\u548c\u7ad9\u4e4b\u95f4\u4ee5\u53ca\u5404\u79cd\u95f4\u9694\u4e4b\u95f4\u6765\u56de\u5207\u6362\u3002\u6211\u6240\u9700\u8981\u7684\u53ea\u662f\u6bcf\u9694\u4e00\u5c0f\u65f6\u5de6\u53f3\u628a\u684c\u5b50\u9001\u4e0a\u6765\u3002\u6211\u53d1\u73b0\u6bcf 30-60 \u5206\u949f\u5728\u5750\u548c\u7ad9\u4e4b\u95f4\u5207\u6362\u662f\u4fdd\u6301\u6d3b\u8dc3\u3001\u6539\u5584\u59ff\u52bf\u548c\u51cf\u5c11\u80cc\u90e8/\u9888\u90e8/\u819d\u76d6\u75bc\u75db\u7684\u597d\u65b9\u6cd5\u3002\u6211\u7684\u684c\u5b50\u4e0a\u6709\u51e0\u4e2a\u53ef\u7f16\u7a0b\u6309\u94ae\uff0c\u6309\u4e0b\u540e\u53ef\u5c06\u684c\u5b50\u76f4\u63a5\u53d1\u9001\u5230\u9884\u8bbe\u9ad8\u5ea6\uff0c\u6211\u5df2\u7ecf\u5c06\u6309\u94ae 1 \u8bbe\u7f6e\u4e3a\u6211\u7684\u5750\u59ff\u9ad8\u5ea6\uff0c\u5c06\u6309\u94ae 2 \u8bbe\u7f6e\u4e3a\u6211\u7684\u7ad9\u7acb\u9ad8\u5ea6\u3002\u5f53\u6211\u5c06\u5de6\u4fa7\u7684\u7b2c\u4e09\u4e2a\u5f15\u811a\u4e0e\u53f3\u4fa7\u7684\u7b2c\u4e8c\u4e2a\u5f15\u811a\u8fde\u63a5\u65f6\uff0c\u5c06\u6309\u94ae 2 \u4fe1\u53f7\u53d1\u9001\u5230\u63a7\u5236\u684c\u5b50\u7684\uff08\u6211\u5047\u8bbe\uff09\u5fae\u63a7\u5236\u5668\u3002\u6211\u5728\u6bcf\u4e2a\u5f15\u811a\u4e0a\u710a\u63a5\u4e86\u4e00\u6839\u7535\u7ebf\uff0c\u6240\u4ee5\u73b0\u5728\u6211\u6709\u4e24\u6839\u7535\u7ebf\uff0c\u5f53\u8fde\u63a5\u65f6\uff0c\u53ef\u4ee5\u62ac\u9ad8\u6211\u7684\u684c\u5b50\u3002\u4e0b\u4e00\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u4ee5\u81ea\u52a8\u5316\u65b9\u5f0f\u8fde\u63a5\u8fd9\u4e9b\u7535\u7ebf\u3002\u663e\u800c\u6613\u89c1\u7684\u7b54\u6848\u662f\u7ee7\u7535\u5668\u3002\n\u7ee7\u7535\u5668\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u82af\u7247\uff0c\u5f53\u60a8\u901a\u8fc7\u63a7\u5236\u5f15\u811a\u53d1\u9001\u5c0f\u7535\u6d41\u65f6\uff0c\u5b83\u5141\u8bb8\u60a8\u8fde\u63a5\u4e24\u6839\u7535\u7ebf\u3002\u7ee7\u7535\u5668\u7684\u79cd\u7c7b\u5f88\u591a\uff0c\u4f46\u6211\u9009\u62e9\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 4 \u9488\u56fa\u6001\u7ee7\u7535\u5668\uff0c\u5373\u4e1c\u829d TLP222A\u3002\u5b83\u5f88\u5c0f\uff08\u5927\u7ea6 6 \u6beb\u7c73\u5bbd\uff09\u3002\u73b0\u5728\uff0c\u6211\u9700\u8981\u67d0\u79cd\u65b9\u6cd5\u6765\u5b9a\u671f\u901a\u8fc7\u63a7\u5236\u5f15\u811a\u53d1\u9001\u5c0f\u7535\u6d41\u3002\u6709\u4e00\u4e2a\u5f88\u5e38\u89c1\u7684\u5c0f\u82af\u7247\u53eb\u505a555\u5b9a\u65f6\u5668\u3002\u5b83\u5b8c\u5168\u7b26\u5408\u6211\u7684\u8981\u6c42\uff08\u4ee5\u56fa\u5b9a\u95f4\u9694\u8fde\u63a5\u7535\u8def\uff09\uff0c\u4f46\u5b83\u662f\u4e3a\u975e\u5e38\u77ed\u7684\u95f4\u9694\uff08\u4f8b\u5982\u4e0d\u5230\u4e00\u79d2\uff09\u800c\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u5f53\u60a8\u5c1d\u8bd5\u5c06\u5176\u63d0\u9ad8\u5230 1000 \u65f6\u53d8\u5f97\u4e0d\u90a3\u4e48\u53ef\u9760\u3002\u6211\u53ef\u80fd\u9700\u8981\u66f4\u590d\u6742\u7684\u7535\u8def\u4e2d\u7684\u4e00\u7cfb\u5217 555 \u5b9a\u65f6\u5668\u3002\u7edd\u5bf9\u53ef\u884c\uff0c\u4f46\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\uff0c\u800c\u4e14\u4ee5\u540e\u66f4\u6539\u95f4\u9694\u4f1a\u5f88\u590d\u6742\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u591a\u5e74\u6765\u6211\u4e00\u76f4\u5728\u7b49\u5f85\u4e00\u4e2a\u4f7f\u7528 Raspberry Pi \u7684\u501f\u53e3\uff0c\u8fd9\u4f3c\u4e4e\u662f\u4e00\u4e2a\u7edd\u4f73\u7684\u673a\u4f1a\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u4f7f\u7528 Raspberry Pi\u3002\u6211\u8ba2\u8d2d\u4e86 Raspberry Pi Zero\uff0c\u8fd9\u662f\u6700\u7b80\u5355\u3001\u6700\u57fa\u672c\u7684\u7248\u672c\u3002\u5b83\u6ca1\u6709\u6240\u6709\u7684\u82b1\u91cc\u80e1\u54e8\uff0c\u4f46\u5b83\u4e3a\u8fd9\u4e2a\u7b80\u5355\u7684\u9879\u76ee\u63d0\u4f9b\u4e86\u6211\u9700\u8981\u7684\u4e00\u5207\uff0c\u800c\u4e14\u53ea\u9700 5 \u7f8e\u5143\uff08\uff01\uff09\u3002\u6211\u4ece Ada Fruit \u8ba2\u8d2d\u4e86 Pi Zero\u3001\u4e00\u4e2a\u5916\u58f3\u548c\u4e00\u5f20\u5e26\u6709 Raspbian \u64cd\u4f5c\u7cfb\u7edf\u7684 Micro SD \u5361\u3002\u603b\u5171\u7ea620\u7f8e\u5143\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u7b80\u5355\u7684\u9879\u76ee\uff0c\u6211\u4e0d\u9700\u8981\u5b8c\u6574\u7684\u56fe\u5f62\u754c\u9762\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u8d39\u5fc3\u8fde\u63a5\u663e\u793a\u5668\u548c\u5e26\u6709\u952e\u76d8\u548c\u9f20\u6807\u7684 USB \u96c6\u7ebf\u5668\u3002\u6211\u51b3\u5b9a\u53ea\u7528\u6211\u7684 Macbook \u4e3a Pi Zero \u7f16\u7a0b\u3002 Pi Zero \u6ca1\u6709\u4ee5\u592a\u7f51\u7aef\u53e3\uff0c\u56e0\u6b64\u5bf9\u5b89\u88c5\u8fdb\u884c\u4e86\u4e00\u4e9b\u8c03\u6574\uff0c\u5141\u8bb8\u6211\u901a\u8fc7 USB\uff08\u4f7f\u7528 USB\u201c\u6570\u636e\u7ebf\u201d\uff09\u4ece\u6211\u7684 Macbook SSH \u5230\u6211\u7684 Pi\u3002\u5f88\u9177\u5427\uff1f SD \u5361\u4e0a\u7684 Raspbian \u64cd\u4f5c\u7cfb\u7edf\u5df2\u7ecf\u5b89\u88c5\u4e86 Raspberry Pi Python \u5e93\uff0c\u6240\u4ee5\u6211\u5df2\u7ecf\u51c6\u5907\u597d\u5f00\u59cb\u5bf9 Pi \u8fdb\u884c\u7f16\u7a0b\u4e86\u3002\n\u6211\u6240\u8981\u505a\u7684\u5c31\u662f\u6253\u5f00\u4e00\u4e2a Python \u7ec8\u7aef\uff0c\u8f93\u5165 import gpiozero\uff0c\u7136\u540e\u6211\u51c6\u5907\u597d\u7528 Python \u811a\u672c\u63a7\u5236\u6211\u7684\u5f15\u811a\uff08\u89e6\u53d1\u7ee7\u7535\u5668\u5e76\u79fb\u52a8\u684c\u5b50\uff09\u3002\u6211\u7f16\u5199\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 Python \u811a\u672c\uff0c\u5b83\u4ee5 45 \u5230 60 \u5206\u949f\u4e4b\u95f4\u7684\u968f\u673a\u95f4\u9694\u89e6\u53d1\u6211\u7684 Pi \u4e0a\u7684\u4e00\u4e2a GPIO \u5f15\u811a\u3002\u6211\u9009\u62e9\u4e86\u4e00\u4e2a\u968f\u673a\u95f4\u9694\uff0c\u56e0\u4e3a\u6211\u4e0d\u60f3\u8ba1\u5212\u5e76\u671f\u671b\u684c\u5b50\u4e0a\u5347\uff0c\u8ba1\u7b97\u95f4\u9694\u4e4b\u95f4\u7684\u65f6\u95f4\u91cf\u3002\u6211\u5e0c\u671b\u5b83\u66f4\u6709\u673a\u3001\u66f4\u65e0\u610f\u8bc6\u3002\u5982\u679c\u60a8\u5e0c\u671b\u60a8\u7684\u529e\u516c\u684c\u4ee5\u4e0d\u540c\u7684\u8282\u594f\u79fb\u52a8\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8c03\u6574\u4e0b\u9762\u7684\u811a\u672c\u3002 from gpiozero import LED # LED \u5e93\u5141\u8bb8\u7b80\u5355\u7684\u5f15\u811a\u63a7\u5236 from time import sleep import random relay = LED(17) # \u6211\u5c06\u7ee7\u7535\u5668\u8fde\u63a5\u5230 pin 17 \u548c\u63a5\u5730\uff0c\u800c True\uff1arelay.on() sleep(1) relay.off( ) sleep(random.randint(45, 60) * 60) \u5c06\u547d\u4ee4\u6dfb\u52a0\u5230 /etc/rc.local \u610f\u5473\u7740\u5b83\u4f1a\u5728\u6811\u8393\u6d3e\u542f\u52a8\u65f6\u4e00\u76f4\u8fd0\u884c\uff08\u5e76\u4e14\u6c38\u8fdc\u8fd0\u884c\uff09\u3002\u5982\u679c Pi \u56e0\u4efb\u4f55\u539f\u56e0\u65ad\u7535\uff0c\u6211\u4e0d\u60f3\u901a\u8fc7 SSH \u91cd\u65b0\u542f\u52a8\u811a\u672c\u3002\u7136\u540e\u6211\u5c06\u4e24\u6839\u7535\u7ebf\u4ece\u684c\u5b50\u7684\u63a7\u5236\u677f\u4e0a\u710a\u63a5\u5230\u7ee7\u7535\u5668\u7684\u4e24\u4e2a\u201c\u8f93\u51fa\u201d\u5f15\u811a\u4e0a\uff0c\u7136\u540e\u5c06\u7ee7\u7535\u5668\u7684 2 \u4e2a\u63a7\u5236\u5f15\u811a\u76f4\u63a5\u710a\u63a5\u5230 Pi \u4e0a\u3002\u51cc\u4e71\uff0c\u4e0d\u662f\u5f88\u4f18\u96c5\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u5c06\u5728\u5b83\u7684\u4f59\u751f\u4e2d\u9690\u85cf\u5728\u6211\u7684\u684c\u5b50\u4e0b\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u592a\u8d39\u5fc3\u53bb\u628a\u5b83\u5f04\u5f97\u6f02\u4eae\u3002\n\u7136\u540e\u6211\u53ea\u662f\u5c06 Pi \u63d2\u5165 USB \u7535\u6e90\u5757\uff0c\u7136\u540e\u2026\u2026\u5b83\u8d77\u4f5c\u7528\u4e86\uff01 \ud83d\ude4c \u5c31\u662f\u8fd9\u6837\u3002\u6211\u628a Pi \u585e\u5728\u684c\u5b50\u5e95\u4e0b\u7684\u5176\u4ed6\u4e00\u4e9b\u7535\u7f06\u4e0b\u9762\uff0c\u5c06\u7535\u7ebf\u56fa\u5b9a\u5230\u4f4d\u4ee5\u786e\u4fdd\u6211\u6ca1\u6709\u8e29\u5230\u5b83\u4eec\uff0c\u7136\u540e\u6211\u5c31\u5f00\u59cb\u53c2\u52a0\u6bd4\u8d5b\u4e86\u3002\u5b83\u5df2\u7ecf\u5b8c\u7f8e\u8fd0\u884c\u4e86\u51e0\u4e2a\u6708\u4e86\uff0c\u6211\u6839\u672c\u4e0d\u9700\u8981\u8c03\u6574\u5b83\u3002\u7ed3\u679c\u8bc1\u660e\uff0c\u968f\u673a\u7684 45-60 \u6b21\u95f4\u9694\u5bf9\u6211\u6765\u8bf4\u975e\u5e38\u68d2\uff0c\u800c\u4e14\u6211\u73b0\u5728\u6bcf\u5929\u7ad9\u7acb\u7684\u65f6\u95f4\u66f4\u591a\uff0c\u8fd9\u5bf9\u6211\u7684\u80cc\u75db\u6709\u5f88\u5927\u5f71\u54cd\u3002\u5728\u8fdb\u884c\u6b64\u8bbe\u7f6e\u4e4b\u524d\uff0c\u6211\u5fc5\u987b\u4f7f\u7528\u901a\u77e5\uff08\u5206\u5fc3 - \u4e0d\u5229\u4e8e\u96c6\u4e2d\u6ce8\u610f\u529b\uff09\u4f5c\u4e3a\u63d0\u9192\uff0c\u5e76\u4e14\u6211\u8fd8\u5fc5\u987b\u6709\u610f\u8bc6\u5730\u9009\u62e9\u7ad9\u7acb\uff08\u81ea\u6211\u6d88\u8017\uff09\uff0c\u4ee5\u4f7f\u81ea\u5df1\u4fdd\u6301\u5065\u5eb7\u7684\u5750\u59ff\u548c\u7ad9\u7acb\u8282\u594f\u3002\u73b0\u5728\uff0c\u5065\u5eb7\u7684\u8282\u594f\u4f1a\u81ea\u52a8\u53d1\u751f\u3002\u6709\u65f6\uff0c\u684c\u5b50\u5f00\u59cb\u5411\u4e0a\u79fb\u52a8\uff0c\u6211\u5728\u5b83\u4e0a\u5347\u65f6\u4e0d\u81ea\u89c9\u5730\u7ad9\u8d77\u6765\uff0c\u751a\u81f3\u6ca1\u6709\u610f\u8bc6\u5230\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6ce8\u610f\uff1a\u6211\u5728\u5927\u6d41\u884c\u524d\u5b8c\u6210\u4e86\u6240\u6709\u8fd9\u4e9b\u5de5\u4f5c\u3002\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u4eec\u516c\u53f8\u5df2\u7ecf\u8d85\u51fa\u4e86\u90a3\u4e2a\u529e\u516c\u5ba4\uff0c\u642c\u5230\u4e86\u4e00\u4e2a\u7531 Wework \u7ba1\u7406\u7684\u65b0\u7a7a\u95f4......\u90a3\u91cc\u6ca1\u6709\u4efb\u4f55\u7ad9\u7acb\u5f0f\u529e\u516c\u684c\ud83d\ude22\u6211\u73b0\u5728\u6b63\u5728\u63a2\u7d22\u65b0\u7684\u65b9\u6cd5\u6765\u7834\u89e3\u6211\u7684\u65b0\u5de5\u4f5c\u8bbe\u7f6e\u3002", "note_en": "I\u2019m a chronic productivity hacker. I love optimizing everything, but especially my work setup.\n I think that it makes a lot of sense to be very deliberate about making my working experience the best it can be, given that I spend about 47% of my waking hours  at work.\n Like many office workers today, I have a motorized sit-stand desk at work. (I built my own mechanical sit-stand desk at home, but that\u2019s another story)\n  When I first started using it, I was very excited, but  I quickly found myself sitting all day, in spite of the fancy desk.\n I   found it strangely hard to build a habit of standing. I even tried setting reminders on my phone to stand up, but even then, it was too easy to ignore, and too easy to say \u201cI\u2019m tired right now. I\u2019ll stand in a few minutes.\u201d\n So I decided to see if there were some way to  automate my desk so that it would rise up on a schedule, whether I felt like standing or not.\n I frankly didn\u2019t expect this engineering project to work out, but I figured I\u2019d try taking apart my desk\u2019s control box and just see what was inside it.\n  I took off a few screws and \u2026 voila! A row of pins neatly exposed right in front. I imagine that they were added for testing, perhaps? I don\u2019t expect that Poppin had a productivity-hacker like me in mind when designing these boxes, but  these pins were exactly what I needed.\n  The pins in my control box, when connected correctly, simulate the pressing of the buttons on the front of the box.\n All I really needed to do was to press one button: the button that would raise the desk up to standing height. I\u2019m not concerned about too much standing (I get tired and sit down naturally after a while), so I didn\u2019t need a complex controller that would toggle back and forth between sitting and standing and various intervals.\n All I needed was to send the desk up every hour or so. I\u2019ve found that switching between sitting and standing every 30\u201360 minutes is a great way to stay active, improve my posture, and decrease back/neck/knee pain.\n My desk has a few programmable buttons that send the desk directly to a preset height when pressed, and I had already set Button 1 as my seated height and Button 2 as my standing height.\n When I connected the 3rd pin from the left with the 2nd pin from the right, that sent the Button 2 signal to the (I presume) microcontroller that controls the desk. I soldered a wire to each of those pins, so now I had two wires which, when connected, would raise my desk.\n  The next question was how to connect these wires in an automated way. The obvious answer was a relay.\n  A relay is a simple chip that allows you to connect two wires when you send a small current over the control pins. There are lots of kinds of relays, but I chose a very simple solid-state relay with 4 pins,  the Toshiba TLP222A. It\u2019s tiny (about 6mm across).\n Now, I needed some way to send that small current over the control pins at a regular interval.\n   There is a very common little chip called a  555 timer. It does exactly what I wanted (connect a circuit at a regular interval), but it\u2019s designed for very-short intervals (like less than a second) and becomes less reliable when you try to turn it up to 1000. I would probably have needed a series of 555 timers in a more complicated circuit. Definitely doable, but not so simple, and it would have been complicated to change the interval afterward.\n On the other hand, I\u2019d been waiting for an excuse to play around with a  Raspberry Pi for years, and this seemed like the perfect opportunity, so I decided to go with a Raspberry Pi.\n I ordered a   Raspberry Pi Zero, the simplest, most basic version. It doesn\u2019t have all the bells and whistles, but it does everything I needed for this simple project, and it\u2019s just $5(!). I ordered  the Pi Zero,  a case, and  a Micro SD card with the Raspbian OS pre-installed from Ada Fruit. About $20 altogether.\n  I didn\u2019t need the full graphical interface for this simple project, so I didn\u2019t bother connecting a monitor and a USB-hub with keyboard and mouse. I decided that I would just use my Macbook to program the Pi Zero. The Pi Zero doesn\u2019t have an Ethernet port, so  made a couple tweaks to the installation that allowed me to SSH from my Macbook into my Pi over USB (using a USB \u201cdata cable\u201d). Cool, huh?\n   The Raspbian OS that came on the SD card had the Raspberry Pi Python library already installed, so it was all ready for me to start programming the Pi.\n All I had to do was open a Python terminal, type  import gpiozero and I was ready to control my pins (which triggered the relay and moved the desk) with a Python script.\n I wrote an extremely simple Python script that fires one of the GPIO pins on my Pi at a random interval between 45 and 60 minutes. I chose a random interval because I didn\u2019t want to be planning and expecting the desk to rise, calculating the amount of time between intervals. I wanted it to be more organic, unconscious.\n If you\u2019d like your desk to move on a different cadence, it\u2019s very easy to tweak the script below.\n from gpiozero import LED # The LED library allows easy pin control from time import sleep import random relay = LED(17) # I connected the relay to pin 17 and ground while True:  relay.on()  sleep(1)  relay.off()  sleep(random.randint(45, 60) * 60)\n   Adding the command to /etc/rc.local means that it will always run when the Raspberry Pi boots up (and keep running forever). In case the Pi lost power for any reason, I didn\u2019t want to have to SSH back into it to restart the script.\n Then I soldered my two wires from the desk\u2019s control board to the two \u201coutput\u201d pins of the relay, and I soldered the 2 control pins of the relay directly onto Pi.\n  Messy, and not very elegant, but I figured that this would going to be hidden under my desk for the rest of its life, so I didn\u2019t bother too much about making it pretty.\n Then I just plugged the Pi into a USB power brick, and\u2026 it worked! \ud83d\ude4c That\u2019s all there is to it.\n I tucked the Pi out of sight under some other cables on the underside of my desk, taped the wires in place to make sure that I didn\u2019t catch my foot on them, and I was off to the races.\n   It\u2019s been running flawlessly for a few months now, and I haven\u2019t had any need at all to tweak it. The random 45\u201360 interval turned out to be great for me, and  I\u2019m now spending a lot more of my day standing, which has a great impact on my back pain.\n Before this setup, I had to use notifications (distraction \u2014 not good for focus) as a reminder, and I also had to consciously choose to stand (ego depletion) in order to keep myself on a healthy cadence of sitting and standing. Now, the healthy cadence happens automatically. There are times when the desk starts moving up, and I unconsciously stand as it rises without even realizing what\u2019s happening.\n Note: I did all of this pre-pandemic. Our company has since outgrown that office and moved to a new space managed by Wework\u2026 which doesn\u2019t have any standing desks \ud83d\ude22 I am now exploring new ways to hack my new work setup.", "posttime": "2021-07-25 21:56:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "raspberry-pi,\u6811\u8393,standing,\u684c\u5b50", "title": "\u6211\u7528\u6811\u8393\u6d3e\u9ed1\u4e86\u6211\u7684\u7ad9\u7acb\u5f0f\u529e\u516c\u684c", "title_en": "I Hacked My Standing Desk with a Raspberry Pi", "transed": 1, "url": "https://medium.com/@davidkongfilm/how-i-hacked-my-standing-desk-with-a-raspberry-pi-a50ed14c7f6f", "via": "", "real_tags": ["\u6811\u8393", "standing", "\u684c\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "6c31f25123a5fb99f50fd572f6ccb24d.jpg", "infoid": 1069675, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u53ef\u66ff\u4ee3\u7684\u4ee3\u5e01 (NFTs) def \u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u6709\u4e00\u4e2a 6900 \u4e07\u7f8e\u5143\u7684\u6570\u5b57\u827a\u672f\u62cd\u5356\u548c NBA \u4eae\u70b9\u70ed\u6f6e\u3002\u867d\u7136\u7092\u4f5c\u5df2\u7ecf\u653e\u7f13\uff0c\u4f46\u90a3\u751c\u7f8e\u7684\u5207\u8fbe\u5e72\u916a\u662f\u2026\u2026 \u9605\u8bfb\u66f4\u591a \u4f60\u5728 30 \u5206\u949f\u5185\u542c\u8bf4\u8fc7\u6bd4\u8428\u997c\u6216\u66f4\u5c11\uff0c\u4f46\u662f 15 \u5206\u949f\u5185\u7684\u6742\u8d27\u600e\u4e48\u6837\uff1f\u8fdb\u5165 Jokr\uff0c\u8fd9\u662f\u4e00\u4e2a\u6742\u8d27\u914d\u9001\u5e73\u53f0\uff0c\u521a\u521a\u7b79\u96c6\u4e86 1.7 \u4ebf\u7f8e\u5143\u6765\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6bcf\u2026\u2026 \u9605\u8bfb\u66f4\u591a \u4e00\u4e9b 11,000 \u540d\u8fd0\u52a8\u5458\u5df2\u5728\u4e1c\u4eac\u53c2\u52a0\u4eca\u5e74\u7684\u5965\u8fd0\u4f1a\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u7c89\u4e1d\u770b\u5230\u4ed6\u4eec\u505a\u4ed6\u4eec\u7684\u4e8b\u60c5\u3002\u4f46\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u4ed6\u4eec\u4e0d\u4f1a\u2026\u2026\u9605\u8bfb\u66f4\u591a\u6d41\u884c\u7684\u8bf4\u6cd5\u662f\uff0c\u201cNetflix and chill\u201d\uff08\u6211\u4eec\u9009\u62e9\u4e0d\u89e3\u91ca\u8fd9\u610f\u5473\u7740\u4ec0\u4e48\uff09 . \u6211\u4eec\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5c06\u5176\u66f4\u65b0\u4e3a\u201cNetflix \u5e76\u7a0d\u5fae\u62c5\u5fc3\u201d\u4e4b\u540e\u2026\u2026\n\u9605\u8bfb\u66f4\u591a \u5982\u679c\u4f60\u80fd\u5728\u8c37\u6b4c\u5730\u56fe\u4e2d\u770b\u5230\u4f60\u7684\u5927\u8111\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u8857\u533a\u4f1a\u200b\u200b\u600e\u6837\uff1f\u603b\u90e8\u4f4d\u4e8e\u6fb3\u5927\u5229\u4e9a\u7684\u521d\u521b\u516c\u53f8 Omniscient Neurotechnology \u521a\u521a\u5728 B \u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e86 3000 \u4e07\u7f8e\u5143\u2014\u2014\u5e26\u6765\u4e86\u5b83\u7684\u2026\u2026\u9605\u8bfb\u66f4\u591a \u6709\u6ca1\u6709\u60f3\u8fc7\u7535\u89c6\u5e7f\u544a\u5c06\u5982\u4f55\u968f\u7740\u79fb\u52a8\u6d88\u8d39\u4e60\u60ef\u800c\u53d1\u5c55\uff1f\u7b54\u6848\u53ef\u80fd\u5df2\u7ecf\u5230\u4e86\u3002Shoppertainment \u662f\u4e00\u4e2a\u7528\u6765\u63cf\u8ff0\u76f4\u64ad\u878d\u5408\u7684\u672f\u8bed\uff0c\u2026\u2026\u9605\u8bfb\u66f4\u591a \u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u534a\u91cc\uff0cZoom \u6b63\u5f0f\u6210\u4e3a\u4e00\u4e2a\u52a8\u8bcd\u3002\u968f\u7740\u4eba\u4eec\u5728\u4ece\u6b22\u4e50\u65f6\u5149\u5230\u6559\u5802\u670d\u52a1\u7684\u6240\u6709\u6d3b\u52a8\u4e2d\u4f7f\u7528 Zoom\uff0c\u8fd9\u4e0d\u662f\u4f7f\u516c\u53f8\u7684\u80a1\u4ef7\u5927\u5403\u4e00\u60ca\u2026\u2026\u9605\u8bfb\u66f4\u591a\n\u8eab\u7740\u6bd4\u57fa\u5c3c\u6cf3\u88c5\u7684 Elle Woods \u7528\u4e00\u6bb5\u89c6\u9891\u8bba\u6587\u8fdb\u5165\u54c8\u4f5b\u6cd5\u5b66\u9662 in Legally Blonde (2001)\u3002\u8be5\u89c6\u9891\u7684 TikTok \u6a21\u4eff\u8ba9\u4e00\u540d\u6768\u767e\u7ff0\u5927\u5b66\u7684\u5b66\u751f......\u9605\u8bfb\u66f4\u591a\u5f53\u4e00\u4f4d\u4e13\u5bb6\u5c06\u7f51\u7edc\u5b89\u5168\u95ee\u9898\u63cf\u8ff0\u4e3a\u201c\u4e00\u4e2a\u4e3b\u8981\u7684\u7728\u773c\u7ea2\u8272 5-alarm-fire \u95ee\u9898\uff0c\u201c\u5b83\u53ef\u80fd\u662f\u3002\u624b\u5934\u7684\u95ee\u9898\u662f iOS \u8f6f\u4ef6\u4e2d\u7684\u4e00\u7ec4\u6f0f\u6d1e\u2026\u2026\u9605\u8bfb\u66f4\u591a", "note_en": "Nonfungible tokens (NFTs) def had a moment earlier this year with a $69m digital art sale and an NBA highlights craze.While the hype has slowed, that sweet, sweet cheddar is \u2026\n Read More\n You\u2019ve heard of pizza in 30 minutes or less, but what about groceries in 15 minutes?Enter Jokr, a grocery delivery platform that just raised $170m to do just that, per \u2026\n Read More\n Some 11k athletes have convened in Tokyo for this year\u2019s Olympics. Unfortunately, there won\u2019t be any fans to see them do their thing.But that doesn\u2019t mean they won\u2019t be \u2026\n Read More\n The popular saying goes, \u201cNetflix and chill\u201d (we choose not to explain what this means).We may have to update it to \u201cNetflix and be slightly concerned\u201d after the \u2026\n Read More\n What if you could see your brain like it was a neighborhood in Google Maps?Australia-based startup Omniscient Neurotechnology just raised $30m in Series B \u2014 bringing its \u2026\n Read More\n Ever wonder how infomercials would evolve for mobile consumption habits? The answer may have arrived.Shoppertainment is a term used to describe the convergence of livestreaming, \u2026\n Read More\n In the past year and a half, Zoom officially became a verb.With people using Zoom for everything from happy hours to church services, it\u2019s no surprise the firm\u2019s stock price \u2026\n Read More\n Bikini-clad Elle Woods used a video essay to get into Harvard Law School in Legally Blonde (2001).A TikTok parody of that video got a Brigham Young University student an \u2026\n Read More\n When an expert describes a cybersecurity issue as \u201ca MAJOR blinking red 5-alarm-fire problem,\u201d it probably is.The issue at hand is a set of vulnerabilities in iOS software \u2026\n Read More", "posttime": "2021-07-25 21:55:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u73b0\u5728,cars", "title": "\u4e3a\u4ec0\u4e48\u73b0\u5728\u4e8c\u624b\u8f66\u8fd9\u4e48\u8d35\uff1f", "title_en": "Why are used cars so expensive right now?", "transed": 1, "url": "https://thehustle.co/why-are-used-cars-so-expensive-right-now/", "via": "", "real_tags": ["\u73b0\u5728", "cars"]}, {"category": "", "categoryclass": "", "imagename": "5dcbbd3b57ae59d20e5c7b24f917b008.jpeg", "infoid": 1069674, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u300a\u672b\u65e5\u96a7\u9053\u300b\u4e2d\uff0c\u6211\u5199\u9053\u4e0d\u76f8\u4ea4\u96c6\u7b97\u6cd5\u662f\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5e94\u8be5\u77e5\u9053\u7684\u6781\u5c11\u6570\u7b97\u6cd5\u4e4b\u4e00\u3002\u8fd9\u8ba9\u6211\u601d\u8003\u3002\u5e94\u8be5\uff1f\u5fc5\u987b\u7684\u5462\uff1f\u5982\u679c\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u4e86\u89e3\u4e0d\u76f8\u4ea4\u96c6\uff0c\u90a3\u4e48\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u8fd8\u5fc5\u987b\u4e86\u89e3\u54ea\u4e9b\u5176\u4ed6\u7b97\u6cd5\uff1f\u6211\u5217\u51fa\u4e86\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5fc5\u987b\u77e5\u9053\u7684\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u7684\u201c\u524d\u5341\u540d\u201d\u5217\u8868\u3002\u5217\u8868\u3001\u6570\u7ec4\u3001\u5806\u6808\u3002\u5217\u8868\u3001\u6570\u7ec4\u548c\u5806\u6808\u5f53\u7136\u662f\u6700\u57fa\u672c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u662f\uff0c\u8fd9\u4e9b\u6784\u5efa\u5757\u53ef\u4ee5\u4fdd\u7559\u4e00\u4e9b\u60ca\u559c\u3002\u4f8b\u5982\uff0c\u5728 STL \u4e2d\u5e7f\u6cdb\u4f7f\u7528\u8fdd\u53cd\u76f4\u89c9\u7684\u54e8\u5175\u8282\u70b9\u6765\u8868\u793a\u521a\u521a\u901a\u8fc7\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u8fd9\u4f7f\u5f97\u5728 end() \u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2a\u9879\u76ee\u76f8\u5f53\u6709\u6548\u3002\u867d\u7136\u5217\u8868\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bbf\u95ee\u5143\u7d20\uff0c\u4f46\u6570\u7ec4\u53ef\u4ee5\uff0c\u4f46\u4ee3\u4ef7\u662f\u5206\u914d\u5df2\u77e5\u7684\u5148\u9a8c\u5185\u5b58\u91cf\u3002\u76f8\u53cd\uff0c\u5728\u7ed9\u5b9a\u5f53\u524d\u4f4d\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u5143\u7d20\u63d2\u5165\u5217\u8868\u662f\u5e38\u6570\u65f6\u95f4\uff0c\u800c\u5728\u6570\u7ec4\u4e2d\u63d2\u5165\u65b0\u5143\u7d20\u7684\u6210\u672c\u66f4\u9ad8\uff0c\u8fd9\u53d6\u51b3\u4e8e\u662f\u5426\u8981\u4fdd\u7559\u6392\u5e8f\u3002\u53ef\u4ee5\u8bf4\uff0c\u5806\u6808\u662f\u4e24\u8005\u7684\u4e00\u79cd\u7279\u4f8b\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u884c\u4e3a\u5927\u591a\u7c7b\u4f3c\u4e8e\u5217\u8868\uff0c\u5176\u4e2d\u53ea\u5141\u8bb8\u5728\u4e00\u7aef\u8fdb\u884c\u64cd\u4f5c\uff1b\u5e76\u4e14\u559c\u6b22\u6570\u7ec4\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u5728\u8fde\u7eed\u7684\u5185\u5b58\u8303\u56f4\u5185\u5b9e\u73b0\uff0c\u5373\u6570\u7ec4\u3002\u7531\u4e8e\u8fd9\u4e09\u4e2a\u662f\u66f4\u590d\u6742\u7684\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u7684\u5e38\u89c1\u6784\u5efa\u5757\uff0c\u56e0\u6b64\u60a8\u5e94\u8be5\u771f\u6b63\u638c\u63e1\u5b83\u4eec\u3002\u6811\u6728\u3002\u6811\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\u662f\u641c\u7d22\u6811\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u4e8c\u5143\u3001k-ary\u3001splay\u3001AVL \u8fd8\u662f B\uff0c\u90fd\u662f\u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u63d0\u4f9b\u641c\u7d22\u3001\u63d2\u5165\u548c\u5220\u9664\u503c\u7684\u64cd\u4f5c\uff08\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff09\u3002\u6700\u6709\u8da3\u7684\u6811\u54c1\u79cd\u8bd5\u56fe\u786e\u4fdd\u5b83\u4eec\u5728 \u4e2d\u4e5f\u6709\u66f4\u574f\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e0d\u4f1a\u8d70\u5f97\u592a\u6df1\u6216\u82b1\u8d39\u8fc7\u591a\u7684\u65f6\u95f4\u6765\u6267\u884c\u5b83\u4eec\u7684\u64cd\u4f5c\u3002\u4e3a\u6b64\uff0c\u6d41\u884c\u7684\u7b56\u7565\u662f\u5e73\u8861\u6811\uff0c\u4f7f\u5176\u5728\u4efb\u4f55\u5730\u65b9\uff08\u51e0\u4e4e\uff09\u5177\u6709\u76f8\u540c\u7684\u6df1\u5ea6\u3002\u6709\u4e9b\u54c1\u79cd\u7684\u5206\u679d\u56e0\u5b50\u8fdc\u9ad8\u4e8e 2\uff0c\u4ece\u800c\u4f7f\u6811\u66f4\u6d45\uff0c\u5c31\u50cf\u6811\u6728\uff08\u6709\u65f6\u4e5f\u79f0\u4e3a\u6811\u6728\uff09\u7684\u60c5\u51b5\u4e00\u6837\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5c55\u5f00\u6811\u4f7f\u6811\u4e0d\u5e73\u8861\uff0c\u5c06\u6700\u5e38\u8bbf\u95ee\u7684\u9879\u76ee\u79fb\u52a8\u5230\u6811\u7684\u6839\u90e8\u9644\u8fd1\uff0c\u540c\u65f6\u4fdd\u6301\u641c\u7d22\u6811\u3002\u4e86\u89e3\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u6240\u6d89\u53ca\u7684\u6743\u8861\u5c06\u5e2e\u52a9\u60a8\u660e\u667a\u5730\u9009\u62e9\u66f4\u9002\u5408\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u7ed3\u6784\u3002\u8bf7\u6ce8\u610f\uff0c\u5747\u8861\u6df1\u5ea6\u7684\u7ed3\u6784\u4e0d\u4ec5\u786e\u4fdd\u6700\u574f\u7684\u60c5\u51b5\u662f\u5e73\u5747\u60c5\u51b5\uff1a\u5b83\u4eec\u9690\u542b\u5730\u5047\u8bbe\u96c6\u5408\u4e2d\u7684\u6240\u6709\u9879\u76ee\u88ab\u8bbf\u95ee\u7684\u6982\u7387\u76f8\u7b49\u2014\u2014\u8fd9\u4e0e\u5e15\u7d2f\u6258\u539f\u5219\u5b8c\u5168\u76f8\u53cd\uff08\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u4e5f\u8bb8\uff0c\u6839\u636e\u9f50\u592b\u5b9a\u5f8b\uff09\u3002\u6392\u5e8f\u548c\u641c\u7d22\u3002\u6570\u636e\u5e76\u4e0d\u603b\u662f\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u51fa\u73b0\uff0c\u56e0\u6b64\u5728\u5bf9\u5176\u5e94\u7528\u4efb\u4f55\u6709\u610f\u4e49\u7684\u7b97\u6cd5\u4e4b\u524d\uff0c\u60a8\u53ef\u80fd\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8bdd\u9898\uff0c\u4f46\u6211\u8ba4\u4e3a\u60a8\u771f\u6b63\u5e94\u8be5\u4e86\u89e3\u7684\u4e24\u79cd\u7b97\u6cd5\u662f QuickSort \u548c Radix Sort\u3002 QuickSort \u662f\u4e00\u79cd\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\uff0c\u5373\u5c06\u5143\u7d20\u76f8\u4e92\u6bd4\u8f83\u4ee5\u786e\u5b9a\u5b83\u4eec\u7684\u76f8\u5bf9\u987a\u5e8f\u3002\u6700\u7ec8\uff0cQuickSort \u8fdb\u884c\u4e86\u8db3\u591f\u7684\u6bd4\u8f83\uff08\u5bf9\u4e8e\u9879\u76ee\uff0c\u5e73\u5747\u800c\u8a00\uff0c\u4f46\u6709\u4e00\u4e2a\u6700\u574f\u7684\u60c5\u51b5\u2014\u2014\u8fd9\u662f\u53ef\u4ee5\u907f\u514d\u7684\uff0c\u4f46\u73b0\u5728\u662f\u53e6\u4e00\u56de\u4e8b\uff09\uff0c\u6700\u7ec8\u751f\u6210\u4e00\u4e2a\u6392\u5e8f\u7684\u9879\u76ee\u5217\u8868\u3002\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7684\u7406\u8bba\u4e0b\u9650\u662f\u6bd4\u8f83\uff0c\u56e0\u6b64 QuickSort \u7684\u5e73\u5747\u8868\u73b0\u975e\u5e38\u597d\u3002\u8be5\u7b97\u6cd5\u7684\u6781\u5927\u7b80\u5355\u6027\u4f7f\u5176\u5728\u975e\u5e38\u5e7f\u6cdb\u7684\u60c5\u51b5\u4e0b\u975e\u5e38\u6709\u8da3\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u57fa\u6570\u6392\u5e8f\u662f\u4e00\u79cd\u5730\u5740\u8f6c\u6362\u6392\u5e8f\uff0c\u5b83\u4ee5\u7ebf\u6027\u65f6\u95f4\u5bf9\u9879\u76ee\u8fdb\u884c\u6392\u5e8f\uff0c\u5373 in \uff0c\u4f7f\u5176\u6bd4 QuickSort \u5feb\u5f97\u591a\u3002\u5b83\u8981\u5feb\u5f97\u591a\uff0c\u4f46\u662f\u5f53\u952e\u662f\u6570\u5b57\u6216\u56fa\u5b9a\u5bbd\u5ea6\u65f6\uff0c\u57fa\u6570\u6392\u5e8f\u8981\u7b80\u5355\u5f97\u591a\uff1b\u6709\u6548\u5730\u5904\u7406\u53ef\u53d8\u957f\u5ea6\u7684\u5bc6\u94a5\u4f1a\u4f7f\u7b97\u6cd5\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u3002\u5728\u6b64\u5904\u548c\u8fd9\u7bc7\u65e7\u7684 DDJ \u6587\u7ae0\u4e2d\u9605\u8bfb\u6709\u5173 Radix Sort \u7684\u66f4\u591a\u4fe1\u606f\u3002\u53ef\u4ee5\u4f7f\u7528\u57fa\u672c\u7684\u65f6\u95f4\u4e8c\u5206\u641c\u7d22\u6765\u641c\u7d22\u5df2\u6392\u5e8f\u7684\u6570\u7ec4\u3002\u521b\u5efa\u548c\u641c\u7d22\u9ad8\u6548\u7d22\u5f15\u4e5f\u5c06\u5728\u7ba1\u7406\u548c\u641c\u7d22\u5927\u578b\u6570\u636e\u96c6\u65b9\u9762\u53d1\u6325\u91cd\u8981\u4f5c\u7528\u3002\n\u4f18\u5148\u961f\u5217\u3002\u6709\u65f6\u60a8\u5e76\u4e0d\u771f\u6b63\u5173\u5fc3\u6570\u636e\u96c6\u662f\u5426\u5b8c\u5168\u6392\u5e8f\u3002\u60a8\u53ea\u60f3\u5feb\u901f\u786e\u5b9a\u5176\u6700\u5927\uff08\u6216\u6700\u5c0f\uff09\u503c\u9879\u5e76\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u786e\u5b9a\u6700\u5927\u9879\u76ee\u5e94\u8be5\u662f\u4e00\u4e2a\u64cd\u4f5c\uff0c\u6dfb\u52a0\u548c\u5220\u9664\u503c\u662f\u4e00\u4e2a\u64cd\u4f5c\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5806\u4f5c\u4e3a\u4f18\u5148\u961f\u5217\u7684\u5b9e\u73b0\u975e\u5e38\u6709\u6548\u3002\u5b83\u4eec\u4e0d\u4ec5\u5177\u6709\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u4e3a\u8fde\u7eed\u6570\u7ec4\uff0c\u4ece\u800c\u907f\u514d\u4f7f\u7528\u57fa\u4e8e\u6307\u9488\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ece\u800c\u6f5c\u5728\u5730\u8282\u7701\u4e86\u5927\u91cf\u5185\u5b58\u3002\u5806\u6709\u5f88\u591a\u5e94\u7528\uff0c\u8303\u56f4\u4ece\u8c03\u5ea6\uff08\u786e\u5b9a\u4e0b\u4e00\u4e2a\u53bb\u7684\u4eba\uff09\u5230\u7f13\u5b58\u7ba1\u7406\uff08\u4ece\u7f13\u5b58\u4e2d\u5220\u9664\u6700\u65e7\u7684\u9879\u76ee\uff09\u3002\u6a21\u5f0f\u5339\u914d\u548c\u89e3\u6790\u3002\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u7f16\u5199\u67d0\u79cd\u89e3\u6790\u5668\u6216\u8fc7\u6ee4\u5668\u3002\u65e0\u8bba\u662f\u5728\u5f02\u5e38\u5927\u7684\u65e5\u5fd7\u4e2d\u67e5\u627e\u6570\u636e\u8fd8\u662f\u8bfb\u53d6\u7b80\u5355\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5e76\u975e\u603b\u662f\u5982\u6b64\uff0c\u4f46\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6700\u660e\u667a\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u6216\u8005\u4f7f\u7528\u5e93\uff0c\u4f8b\u5982\u200b\u200b Boost \u7684 regex \u6216 Python \u7684 re\uff0c\u6216\u8005\u81ea\u5df1\u5b9e\u73b0\u6b63\u5219\u8868\u8fbe\u5f0f\u7b97\u6cd5\u2014\u2014\u8fd9\u5c06\u4f7f\u5b83\u6210\u4e3a\u75af\u72c2\u7684\u65b9\u5f0f\uff0c \u6211\u731c\u3002\u4e86\u89e3\u5b83\u4eec\u7684\u5de5\u4f5c\u539f\u7406\u5c06\u6781\u5927\u5730\u5e2e\u52a9\u60a8\u5904\u7406\u548c\u8fc7\u6ee4\u7ed3\u6784\u4e0d\u5145\u5206\u7684\u6570\u636e\u3002\u4e0d\u8981\u95ee\u4e3a\u4ec0\u4e48 Perl \u5982\u6b64\u53d7\u6b22\u8fce\u3002\u6563\u5217\u3002\u6563\u5217\u51fd\u6570\u5728\u5bc6\u7801\u5b66\u3001\u9519\u8bef\u68c0\u6d4b\u3001\u7f13\u5b58\u7ba1\u7406\u548c\u9ad8\u6548\u67e5\u627e\u4e2d\u53d1\u6325\u7740\u6838\u5fc3\u4f5c\u7528\u3002\u5c3d\u7ba1\u8868\u9762\u4e0a\u5b58\u5728\u5dee\u5f02\u2014\u2014\u5e94\u7528\u7a0b\u5e8f\u2014\u2014\u6240\u6709\u6563\u5217\u51fd\u6570\u90fd\u5bc6\u5207\u76f8\u5173\uff1b\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u5728\u8d28\u91cf\u4e0a\u7684\u5dee\u5f02\u6bd4\u5728\u6027\u8d28\u4e0a\u7684\u5dee\u5f02\u66f4\u5927\u3002\u6563\u5217\u51fd\u6570\u63a5\u53d7\u4e00\u6761\u6d88\u606f\u5e76\u786e\u5b9a\u6027\u5730\u751f\u6210\u4e00\u4e2a\u7b7e\u540d\uff0c\u8be5\u7b7e\u540d\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u4f2a\u968f\u673a\u6570\uff0c\u4f4d\u957f\uff0c\u901a\u5e38\u76f8\u5f53\u5927\uff0c\u6bd4\u5982 128 \u6216 256\u3002\u5c06\u6563\u5217\u503c\u4e0e\u539f\u59cb\u6570\u636e\u5173\u8054\u8d77\u6765\u8d8a\u56f0\u96be\uff0c\u5c31\u8d8a\u5b89\u5168\u54c8\u5e0c\u51fd\u6570\u662f\u3002\u5982\u679c\u5728\u7ed9\u5b9a\u6563\u5217\u503c\u7684\u60c5\u51b5\u4e0b\u5f88\u96be\u627e\u5230\u539f\u59cb\u6570\u636e\uff0c\u5219\u8be5\u51fd\u6570\u53ef\u4ee5\u7528\u4f5c\u5355\u5411\u51fd\u6570\u5e76\u7528\u4e8e\u52a0\u5bc6\u5e94\u7528\u7a0b\u5e8f\u3002\u5982\u679c\u54c8\u5e0c\u51fd\u6570\u8db3\u591f\u597d\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\uff08\u6700\u6709\u53ef\u80fd\u7684\uff09\u6570\u636e\u9879\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u8fdb\u800c\u53ef\u4ee5\u7528\u4e8e\u7f13\u5b58\u7ba1\u7406\u6216\u54c8\u5e0c\u8868\u3002\u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u90fd\u5fc5\u987b\u4e86\u89e3\u78b0\u649e\u6982\u7387\uff08\u4e24\u4e2a\u6216\u591a\u4e2a\u9879\u76ee\u6563\u5217\u5230\u76f8\u540c\u503c\uff09\u7684\u6570\u5b66\u539f\u7406\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u8bc4\u4f30\u54ea\u79cd\u6563\u5217\u65b9\u6848\u8db3\u4ee5\u6ee1\u8db3\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u9605\u8bfb von Mises \u7684\u751f\u65e5\u6096\u8bba\u4ee5\u4e86\u89e3\u5982\u4f55\u8ba1\u7b97\u78b0\u649e\u6982\u7387\u3002\u4e0d\u76f8\u4ea4\u96c6\u3002 Disjoint sets \u6570\u636e\u7ed3\u6784\u662f\u4e00\u79cd\u8f85\u52a9\u7ed3\u6784\uff0c\u60a8\u5c06\u5728\u5404\u79cd\u7b97\u6cd5\u4e2d\u4f7f\u7528\u5b83\uff0c\u65e0\u8bba\u662f\u56fe\u5f62\u7b97\u6cd5\u8fd8\u662f\u56fe\u50cf\u5904\u7406\u3002\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\u7528\u4e8e\u8868\u793a\u5355\u4e2a\u6570\u7ec4\u4e2d\u7684\u591a\u4e2a\u96c6\u5408\uff0c\u6bcf\u4e2a\u9879\u76ee\u90fd\u662f\u591a\u4e2a\u96c6\u5408\u4e4b\u4e00\u7684\u6210\u5458\u3002\u8fd9\u6837\u60f3\u6765\uff0c\u8fd9\u542c\u8d77\u6765\u662f\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u6709\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e0d\u90fd\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u4f7f\u7528\u4e0d\u76f8\u4ea4\u96c6\u6570\u636e\u7ed3\u6784\u6700\u6709\u6548\u5730\u8868\u793a\u56fe\u5f62\u7b97\u6cd5\u4e2d\u51fa\u73b0\u7684\u8fde\u63a5\u7ec4\u4ef6\u3002\u5b83\u8fd8\u53ef\u4ee5\u7528\u4e8e\u5206\u5272\u56fe\u50cf\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u79f0\u4e3a\u8ba1\u7b97\u8fde\u63a5\u7ec4\u4ef6\u6216\u6807\u8bb0\u3002\u4e0d\u76f8\u4ea4\u96c6\u7684\u53e6\u4e00\u4e2a\u6709\u8da3\u4e4b\u5904\u5728\u4e8e\uff0c\u64cd\u4f5c\u7684\u6548\u7387\u975e\u5e38\u9ad8\uff1a\u4f7f\u7528\u8def\u5f84\u538b\u7f29\uff0c\u53ef\u4ee5\u5728\u9884\u671f\u7684\u6052\u5b9a\u65f6\u95f4\u5185\u6267\u884c\u64cd\u4f5c\uff01\u53ea\u6709\u4e24\u4e2a\u53ef\u80fd\u96c6\u5408\u7684\u7279\u6b8a\u60c5\u51b5\u4f1a\u6062\u590d\u4e3a\u7b80\u5355\u7684\u4f4d\u56fe\uff0c\u8fd9\u662f\u4e00\u79cd\u6613\u4e8e\u7ba1\u7406\u4e14\u9700\u8981\u76f8\u5bf9\u8f83\u5c11\u5185\u5b58\u7684\u6570\u636e\u7ed3\u6784 - \u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u53ef\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u4f7f\u7528\uff0c\u4f46\u9700\u8981\u4ed8\u51fa\u4e00\u5b9a\u7684\u4ee3\u4ef7\u3002\u56fe\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u3002\u8bf8\u5982\u8ba1\u7b97\u6700\u5c0f\u751f\u6210\u6811\u3001\u786e\u5b9a\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3001\u5339\u914d\u548c\u5207\u5272\u9876\u70b9\u68c0\u6d4b\u7b49\u95ee\u9898\u4f1a\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u51fa\u73b0\u3002\u4f8b\u5982\uff0c\u8c37\u6b4c\u7684 PageRank \u5c31\u662f\u56fe\u7b97\u6cd5\u7684\u4e00\u4e2a\u975e\u5e38\u5177\u4f53\u7684\u5e94\u7528\u3002\u901a\u5e38\uff0c\u770b\u4f3c\u65e0\u5173\u7684\u95ee\u9898\u53ef\u4ee5\u6620\u5c04\u5230\u56fe\u7b97\u6cd5\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u7b97\u6cd5\uff0c\u5df2\u7ecf\u5b58\u5728\u975e\u5e38\u6709\u6548\u7684\u7b97\u6cd5\uff0c\u53ef\u80fd\u4e0e\u52a8\u6001\u89c4\u5212\u76f8\u5173\u3002\u8fd8\u6709\u5927\u91cf\u6587\u732e\u4e13\u95e8\u8ba8\u8bba\u7528\u4e8e\u56fe\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8003\u8651\u4e86\u6bcf\u4e00\u79cd\u53ef\u80fd\u7684\u7279\u6b8a\u60c5\u51b5\uff1a\u7a00\u758f\u3001\u5bc6\u96c6\u3001\u96c6\u7fa4\u4e30\u5bcc\u6216\u5c0f\u4e16\u754c\u7f51\u7edc\u7b49\u3002 \u52a8\u6001\u89c4\u5212\u3002\u4e0e\u56fe\u7b97\u6cd5\u5bc6\u5207\u76f8\u5173\uff0c\u52a8\u6001\u89c4\u5212\u5229\u7528\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u5927\u95ee\u9898\u7684\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u53ef\u4ee5\u8868\u793a\u4e3a\u5b50\u95ee\u9898\u7684\u6700\u4f73\u7ec4\u5408\u3002\u5e76\u975e\u6240\u6709\u95ee\u9898\u90fd\u9002\u5408\u8fd9\u79cd\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5e76\u975e\u6bcf\u4e2a\u76ee\u6807\u51fd\u6570\u90fd\u9075\u5faa\u6700\u4f18\u6027\u539f\u5219\uff0c\u4f46\u8bb8\u591a\u4f18\u5316\u95ee\u9898\u90fd\u7b26\u5408\u3002\u52a8\u6001\u7f16\u7a0b\u4e3a\u8ba1\u7b97\u4ea4\u6362\u5185\u5b58\uff0c\u8fd9\u901a\u5e38\u662f\u4e00\u79cd\u6709\u76ca\u7684\u6743\u8861\u3002 Memoization \u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u52a8\u6001\u7f16\u7a0b\u7684\u4e00\u79cd\u6709\u9650\u5f62\u5f0f\uff0c\u5176\u4e2d\u5bf9\u6602\u8d35\u51fd\u6570\u7684\u5148\u524d\u8bc4\u4f30\u88ab\u7f13\u5b58\u548c\u91cd\u7528\uff0c\u800c\u4e0d\u662f\u5728\u518d\u6b21\u8bf7\u6c42\u65f6\u91cd\u65b0\u8ba1\u7b97\u3002\u5f53\u4e0e\u4f18\u5316\uff08\u6216\u7b80\u5355\u7684\u9012\u5f52\uff09\u7b97\u6cd5\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u8bb0\u5fc6\u5316\u5927\u5927\u964d\u4f4e\u4e86\u8ba1\u7b97\u590d\u6742\u5ea6\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5fc6\u6cd5\u53ca\u65f6\u8ba1\u7b97\u7b2c n \u4e2a\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u800c\u57fa\u672c\u9012\u5f52\u516c\u5f0f\u7684\u7ed3\u679c\u4e0d\u5c11\u4e8e\u8c03\u7528\uff01\u8fd9\u91cc\uff0c\u662f\u83f2\u8fea\u4e9a\u65af\u7684\u6570\u5b57\uff0c\u9ec4\u91d1\u6bd4\u4f8b\u3002\u72b6\u6001\u7a7a\u95f4\u641c\u7d22\u7b97\u6cd5\u3002\u6709\u65f6\uff0c\u95ee\u9898\u7684\u89c4\u6a21\u6216\u72b6\u6001\u7a7a\u95f4\u7684\u5e7f\u9614\u6027\u4f7f\u5f97\u65e0\u6cd5\u5c06\u95ee\u9898\u8868\u793a\u4e3a\u56fe\u5f62\u3002\u4ee5\u56fd\u9645\u8c61\u68cb\u4e3a\u4f8b\u3002\u6e38\u620f\u7684\u4e0d\u540c\u6709\u6548\u72b6\u6001\u7684\u786e\u5207\u6570\u91cf\u4ecd\u7136\u5b58\u5728\u4e89\u8bae\uff0c\u4f46\u88ab\u8ba4\u4e3a\u662f \u7684\u987a\u5e8f\uff0c\u4ee5\u53ca\u6e38\u620f\u56fe\u4e2d\u67d0\u5904\u5468\u56f4\u7684\u5f27\u6570\uff0c\u4f5c\u4e3a\u8ba1\u7b97\u7684\u9999\u519c\uff0c\u56e0\u6b64\u88ab\u79f0\u4e3a\u9999\u519c\u6570\u3002\u5728\u7ed9\u5b9a\u4efb\u4f55\u6709\u6548\u56fd\u9645\u8c61\u68cb\u4f4d\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0c\u641c\u7d22\u4e0e\u6240\u6709\u53ef\u80fd\u6e38\u620f\u76f8\u5bf9\u5e94\u7684\u56fe\u5f62\u4ee5\u786e\u5b9a\u6700\u4f73\u79fb\u52a8\u662f\u4e0d\u53ef\u884c\u7684\u3002\u4e3a\u4e86\u5904\u7406\u8fd9\u4e2a\u5de8\u5927\u7684\u72b6\u6001\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528\u8bb8\u591a\u72b6\u6001\u7a7a\u95f4\u641c\u7d22\u7b97\u6cd5\u4e2d\u7684\u4e00\u79cd\uff0c\u4f8b\u5982\u6709\u9650\u6df1\u5ea6\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u6216\u8005\u5982\u679c\u5bf9\u76ee\u6807\u51fd\u6570\u6709\u8db3\u591f\u7684\u4e86\u89e3\uff0c\u53ef\u4ee5\u4f7f\u7528 A* \u4e4b\u7c7b\u7684\u7b97\u6cd5\u3002\u72b6\u6001\u7a7a\u95f4\u641c\u7d22\u975e\u5e38\u5e38\u7528\u4e8e\u6e38\u620f\u4eba\u5de5\u667a\u80fd\u548c\u5176\u4ed6\u7ed3\u6784\u8fc7\u4e8e\u590d\u6742\u3001\u72b6\u6001\u7a7a\u95f4\u8fc7\u5927\u6216\u77e5\u4e4b\u751a\u5c11\u800c\u65e0\u6cd5\u63a8\u5bfc\u51fa\u66f4\u6709\u6548\u7b97\u6cd5\u7684\u4f18\u5316\u95ee\u9898\u3002\n\u9057\u4f20\u7b97\u6cd5\u4e0e\u968f\u673a\u4f18\u5316\u5bc6\u5207\u76f8\u5173\uff0c\u5176\u4e2d\u5728\u8bb8\u591a\u4e0d\u540c\u7684\u70b9\u5e76\u884c\u641c\u7d22\u72b6\u6001\u7a7a\u95f4\u3002\u8fbe\u5c14\u6587\u4e3b\u4e49\u7684\u6bd4\u55bb\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u6070\u5f53\u7684\uff0c\u56e0\u4e3a\u201c\u57fa\u56e0\u201d\uff08\u5411\u91cf\uff09\u88ab\u201c\u53d8\u5f02\u201d\uff08\u968f\u673a\u53d8\u5316\uff09\u4ee5\u641c\u7d22\u72b6\u6001\u7a7a\u95f4\u3002\u53ea\u6709\u6700\u9002\u5408\u7684\uff08\u66f4\u9ad8\u4ef7\u503c\u7684\u5411\u91cf\uff0c\u5728\u76ee\u6807\u51fd\u6570\u4e0b\uff09\u88ab\u4fdd\u7559\u7528\u4e8e\u4e0b\u4e00\u4ee3\u201c\u8fed\u4ee3\u201d\uff08\u8fed\u4ee3\uff09\u5176\u4ed6\u201c\u6b7b\u4ea1\u201d\uff08\u88ab\u4e22\u5f03\uff09\u3002\u6211\u53ef\u4ee5\u628a\u5217\u8868\u505a\u5f97\u66f4\u957f\uff0c\u81f3\u5c11\u5305\u62ec\u6570\u636e\u538b\u7f29\u7b49\u4e3b\u9898\uff0c\u8fd9\u662f\u4e2a\u4eba\u6700\u559c\u6b22\u7684\u3002\u6211\u672c\u53ef\u4ee5\u5305\u62ec\u4e00\u4e9b\u5173\u4e8e\u63a7\u5236\u7406\u8bba\u7684\u5185\u5bb9\uff0c\u8fd9\u5728\u5de5\u4e1a\u4fe1\u606f\u5b66\u7684\u80cc\u666f\u4e0b\u4e5f\u975e\u5e38\u6709\u7528\uff0c\u4f46\u6211\u4e5f\u5e0c\u671b\u8fd9\u4e2a\u5217\u8868\u662f\u4e00\u4e2a\u5341\u8beb\u7c7b\u578b\u7684\u5217\u8868\uff08\u6ca1\u6709\u5185\u759a\u548c\u590d\u4ec7\u7684\u4e0a\u5e1d\u7684\u4e8b\u60c5\uff09\uff0c\u4e00\u4e9b\u4f1a\u5f88\u5bb9\u6613\u8bb0\u4f4f\uff0c\u8fd9\u9002\u7528\u4e8e\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u3002\u5f53\u7136\uff0c\u60a8\u53ea\u662f\u9605\u8bfb\u4e86\u8fd9\u4e9b\u5185\u5bb9\u5e76\u5728\u60f3\u201c\u4e3a\u4ec0\u4e48\u4e0d\u8c08\u8bba XYZ\u201d\u3002\u4e5f\u8bb8\u6211\u786e\u5b9e\u9519\u8fc7\u4e86\u4e00\u4e9b\u91cd\u8981\u7684\u4e8b\u60c5\uff1b\u4e5f\u53ef\u80fd\u662f\u201cXYZ\u201d\u6bd4\u60a8\u60f3\u8c61\u7684\u66f4\u50cf\u662f\u4e00\u4e2a\u5c0f\u4f17\u8bdd\u9898\u3002\u6211\u4e0d\u80fd\u8ba4\u4e3a\u8fd9\u4efd\u6e05\u5355\u5177\u6709\u4efb\u4f55\u6743\u5a01\u6027\uff1b\u7136\u800c\uff0c\u5b83\u6216\u591a\u6216\u5c11\u5730\u9075\u5faa\u5178\u578b\u7684\u201c\u7b97\u6cd5\u5bfc\u8bba\u201d\u4e00\u4e66\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u8ba9\u89c1\u9762\u77e5\u9053\u3002\u8fd9\u7bc7\u6587\u7ae0\u4e5f\u7b26\u5408 Gnuvince \u8bc4\u8bba\u5458\u4e4b\u4e00\u7684\u201c\u6b63\u786e\u5de5\u5177\u7bb1\u201d\u7b54\u6848\u3002\u6211\u518d\u6b21\u8ba4\u4e3a\uff0c\u8fd9\u5e76\u4e0d\u662f\u8981\u6210\u4e3a\u6211\u4ecb\u7ecd\u7684\u5341\u4e2a\u4e3b\u9898\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7684\u5927\u5e08\uff0c\u800c\u53ea\u662f\u7cbe\u901a\uff0c\u5e76\u57f9\u517b\u53cd\u5c04\u80fd\u529b\uff0c\u4ee5\u67e5\u770b\u5f53\u524d\u95ee\u9898\u4e0e\u60a8\u5df2\u7ecf\u77e5\u9053\u7684\u7b97\u6cd5\u4e4b\u95f4\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u5373\u4f7f\u6620\u5c04\u53ef\u80fd\u5e76\u4e0d\u5b8c\u5168\u4e0d\u8a00\u81ea\u660e\u3002\u7136\u800c\uff0c\u8fd9\u4e0d\u662f\u201c\u4ece m \u4e2a\u4e2d\u6311\u9009 n \u4e2a\u201d\u5217\u8868\u3002\u8d8a\u591a\u8d8a\u597d\u3002\u4f7f n = m\u3002", "note_en": "In  Tunnels of Doom!, I wrote that the disjoint sets algorithm is one of the very few algorithms every programmer  should know. That got me thinking.  Should? What about  must? If everyone must know about disjoint sets, what other algorithms  must every programmer know about?\n I made a \u201ctop ten\u201d list of algorithms and data structures  every programmer must know about.\n   Lists, Arrays, Stack.  Lists,  arrays, and  stacks are certainly the most basic data structures, yet, these building blocks can reserve a few surprises. For example, counter-intuitive  sentinel nodes are extensively used in the  STL to represent the position just passed the last element in a list. This makes, for example, the insertion of an item in the  end() position rather efficient. While lists do not allow direct access to an element, arrays do, but at the cost of allocating a known  a priori amount of memory. Conversely, inserting an element into a list, given the current position, is constant time, while to insert a new element in an array is more costly, depending on whether or not one wants to preserve ordering. Stacks are a special case of both, one could say, because they behave mostly like lists where operations are allowed only at one end; and like arrays because they are most often implemented in a contiguous span of memory, i.e., an array. As these three are common building blocks of more complex algorithms and data structures, you should  really master them.\n  Trees. Trees, or more exactly   search trees whether they be  binary,  k-ary,  splay,  AVL or  B, are the next data structures on the list, offering   operations for searching, inserting, and removing values (in the average case). The most interesting tree varieties try to insure that they also have  worse cases in  , that is, they don\u2019t go overly deep or take inordinately long to perform their operations. To do so, the prevailing strategy is to balance the tree so that it is of (almost) equal depth everywhere. Some varieties make the tree even shallower by having a branching factor much higher than two, like it is the case with    trees (also known sometimes as   trees). Splay trees, on the other hand,  unbalances the trees to shift the most oft-accessed item near the root of the tree, while remaining a search tree. Understanding these data structures and what trade-offs are involved will help you choose wisely which will suit your application better. Note that the structures that equalize depth do not only make sure that the worst case is the average case: they implicitly suppose that all items in the collection have an equal probability of being accessed\u2014something quite contrary to the  Pareto Principle (or more accurately, maybe, to  Zipf\u2019s law).\n  Sorting and Searching. Data does not always come in the right order, so it is possible that you will have to  sort before applying any meaningful algorithm to it.  Sorting  is a complex topic, but I think that the two algorithms you really should know about are  QuickSort and  Radix Sort. QuickSort is a comparison-based sort, that is, elements are compared to each other to determine their relative order. Eventually, QuickSort makes enough comparisons (  for   items, on average, but has a worst case of  \u2014which can be avoided, but that\u2019s another story for now) to eventually produce a sorted list of items. The theoretical lower bound for comparison-based sorts is   comparisons, so QuickSort is doing very well on average. The great simplicity of the algorithm makes it very interesting in a very wide range of cases.\n Radix sort, on the other hand, an  address transformation sort that sorts the items in  linear time, that is, in  , making it much faster than QuickSort. It is much faster, but Radix Sort is much simpler when keys are numeric or of fixed width; dealing with variable length keys efficiently makes the algorithm slightly more complex. Read more on Radix Sort  here and in this old  DDJ article.\n Searching on a sorted array can be performed using the basic  binary search in   time. Creating and searching efficient  indexes will also play a major role in managing and searching large data sets.\n  Priority Queues. Sometimes you don\u2019t really care if a data set is completely sorted or not. You just want to determine rapidly its maximum (or minimum) valued item and remove it from the set. Ideally, determining the maximum item should be an   operation, adding and removing values a   operation. Turns out that  heaps as implementation of priority queues are pretty efficient. Not only do they have efficient algorithms, they can also be implemented into contiguous arrays, dispensing one from using a pointer-based data structure, saving potentially a lot of memory. There are a lot of application of heaps, which range from  scheduling (determining who goes next) to  cache management (removing the oldest items from the cache).\n  Pattern Matching and Parsing. Every single one of us had to write a parser or a filter of some sort. Whether it\u2019s to find data in an insanely large log or to read a simple configuration file. Not always, but very often, the sanest way to go around it is to use  regular expressions, either using a library, such as  Boost\u2018s  regex, or  Python\u2018s  re, or by implementing the regular expression algorithms yourself\u2014which would make it the insane way, I guess. Understanding how they work will greatly help you process and filter insufficiently structured data. Don\u2019t ask why  Perl is so popular.\n  Hashing.  Hash functions play a central role in  cryptography,  error detection, cache management, and  efficient look-up. Despite the superficial differences\u2014the applications\u2014all hash functions are closely related; in fact, they differ more in quality than nature. A hash function takes a message and deterministically produces a signature that looks like a pseudo-random number,   bits long, usually with   rather large, say 128 or 256. The harder it is to correlate the hash value with the original data, the safer the hash function is. If it is  really hard to find the original data given a hash value, the function can serve as a  one way function and be used in cryptographic applications. If the hash function is just good enough, it can serve as an (most probably) unique identifier for data items, which in turn can be used for cache management or hash tables. In either case, you have to understand the mathematics of the probability of collisions (two or more items hashing to the same value) so you can assess what hashing scheme is sufficient for your application. Read about von Mises\u2019  birthday paradox to understand how to compute the probability of collision.\n  Disjoint Sets. The  Disjoint sets data structure is a helper structure that you will need in a wide variety of algorithms, whether graph algorithms or image processing. Disjoint sets serves to represent multiple sets within a single array, each item being the member of one of many sets. Considered like that, this sounds like a rather special case, but in fact, there are a number of applications, not all obvious.  Connected components arise in graph algorithms are most efficiently represented using the disjoint set data structure. It can also serve to segment an image, a process also know as computing the connected components or  labeling. What\u2019s also very interesting about disjoint sets is just how incredibly efficient operation are: using path compression, operations can be performed in expected constant time! The special case where there are only two possible sets reverts to a simple  bitmap, a data structure that is simple to manage and requires comparatively little memory\u2014use of which can be further reduced, with a price, using  Bloom filters.\n  Graph Algorithms and Data Structures. Problems like computing the  minimum spanning tree, the determination of the  shortest path between two nodes,  matching, and the detection of  cut vertexes will arise in a number of situation. Google\u2019s  PageRank, for example, is a very concrete application of graph algorithms. Often, seemingly unrelated problems can be mapped to graph algorithms for which very efficient algorithms, possibly dynamic programming related, already exist. There is also a large body of literature devoted to the data structures used for graphs, considering every possible special case:  sparse,  dense,  clique-rich, or  small world networks, etc.\n  Dynamic Programming. Closely related to graph algorithms,  dynamic programming exploit the fact that the optimal solution to a large problem can be expressed as an optimal combination of sub-problems. Not all problems are amenable to this method, because not every objective function abide to the  principle of optimality, but many optimization problems do. Dynamic programming exchanges memory for computation, a generally beneficent trade-off. Memoization could be considered a limited form of dynamic programming where previous evaluations of an expensive function are cached and reused rather than recomputed if asked for again. Memoization greatly reduce computational complexity when used in combination with an optimization (or simply recursive) algorithm. For example, the n-th  Fibonacci number can be computed in   time using memoization, while the basic recursive formulation results in no less than   calls! Here,   is  Phidias\u2018s number, the  golden ratio.\n  State Space Search Algorithms. Sometimes the scale of the problem, or the vastness of the state space makes it impossible to represent the problem as a graph. Consider  chess as the example  par excellence. The exact number of distinct valid states of the game is still debated, but is thought to be in the order of  , and the number of arcs in the game graph somewhere around  , as computed  Shannon, therefore known as  Shannon\u2019s Number. It would be infeasible to search the graph corresponding to all possible games to determine the optimal move given any valid chess position. To deal with this immense state space, one would use one of the many state space search algorithms such as  limited depth search,  Breadth-first search, or if enough is known about the objective function, an algorithm like  A*. State space search is very often used for game  artificial intelligence and other optimization problem where the structure is too complex, state space too vast, or of which too little is known to derive a more efficient algorithm.\n Genetic algorithms are closely related to  stochastic optimisation, where the state space is searched at many different points in parallel. The darwinist metaphor is apt, to a certain point, as \u201cgenes\u201d (vectors) are \u201cmutated\u201d (varied randomly) to search the state space. Only the fittest (higher valued vectors, under the objective function) are kept for the next \u201cgeneration\u201d (iteration) others \u201cdie off\u201d (are dropped).\n I could have made the list much longer, at least to include topics such as data compression, a personal favorite. I could have included something about, say,  control theory, which is also highly useful in the context of industrial informatics, but I also wanted the list to be a Ten Commandments type list (without the guilt and the vengeful God thing), something that would be easy to remember and that would apply to  most programmers out there. Of course, you just read those and are thinking \u201cwhy didn\u2019t talked of XYZ\u201d. Maybe I did miss something important; it may also be that \u201cXYZ\u201d is more of a niche topic than you think. I cannot think of this list as authoritative in any way; yet, it follows more or less closely what you will find a typical \u201cIntroduction to Algorithms\u201d book. Either way, let met know.\n This post is also in line with the  \u201cright toolbox\u201d answer to one of Gnuvince\u2019s commentator. I think that, again, it is not about being a guru in every of the ten topics I presented, but merely proficient, and to develop the reflex to see the similitudes between your current problem and one of the algorithms you already know, even though the mapping may not be exactly self-evident. This is not a \u201cpick  n out of  m\u201d list however. The more, the better. Make  n= m.", "posttime": "2021-07-25 21:55:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u7b97\u6cd5,algorithms,\u7a0b\u5e8f\u5458", "title": "\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u90fd\u5fc5\u987b\u77e5\u9053\u7684\uff08\u7c7b\uff09\u7b97\u6cd5", "title_en": "(Classes of) Algorithms Every Programmer Must Know About", "transed": 1, "url": "https://hbfs.wordpress.com/2008/12/23/the-10-classes-of-algorithms-every-programmer-must-know-about/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u7b97\u6cd5", "\u7a0b\u5e8f\u5458"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069673, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4e0e\u58f0\u79f0\u4fc3\u8fdb\u808c\u8089\u751f\u957f\u6216\u51cf\u80a5\u7684\u4ea7\u54c1\u6709\u5173\u7684\u6848\u4f8b\u6b63\u5728\u589e\u52a0\uff0c\u9700\u8981\u66f4\u4e25\u683c\u7684\u76d1\u7763 \u56e0\u58f0\u79f0\u4fc3\u8fdb\u808c\u8089\u751f\u957f\u6216\u51cf\u80a5\u7684\u8349\u836f\u548c\u81b3\u98df\u8865\u5145\u5242\u800c\u5bfc\u81f4\u4e25\u91cd\u809d\u635f\u4f24\u5165\u9662\u7684\u60a3\u8005\u4eba\u6570\u6b63\u5728\u589e\u52a0\uff0c\u7531\u4e8e\u4e00\u4e9b\u4eba\u53d7\u5230\u5982\u6b64\u4e25\u91cd\u7684\u4f24\u5bb3\uff0c\u4ed6\u4eec\u9700\u8981\u8fdb\u884c\u809d\u810f\u79fb\u690d\u3002\u7687\u5bb6\u963f\u5c14\u5f17\u96f7\u5fb7\u738b\u5b50\u533b\u9662\u7684 Emily Nash \u535a\u58eb\u9886\u5bfc\u7684\u4e00\u9879\u7814\u7a76\u68c0\u67e5\u4e86 2009 \u5e74\u81f3 2020 \u5e74\u95f4\u56e0\u836f\u7269\u6027\u809d\u635f\u4f24\u5165\u9662 AW Morrow \u80c3\u80a0\u75c5\u5b66\u548c\u809d\u810f\u4e2d\u5fc3\u7684 184 \u540d\u6210\u5e74\u4eba\u7684\u533b\u9662\u8bb0\u5f55\u3002\u5979\u548c\u5979\u7684\u5408\u8457\u8005\u53d1\u73b0\u809d\u635f\u4f24\u75c5\u4f8b\u5b58\u5728\u5173\u8054\u8349\u836f\u548c\u81b3\u98df\u8865\u5145\u5242\u7684\u6bd4\u4f8b\u4ece 2009-11 \u5e74\u671f\u95f4 11 \u540d\u60a3\u8005\u4e2d\u7684 2 \u540d\uff0815%\uff09\u589e\u52a0\u5230 2018-20 \u5e74\u671f\u95f4 19 \u540d\u60a3\u8005\u4e2d\u7684 10 \u540d\uff0847%\uff09\u3002\u670d\u7528\u6251\u70ed\u606f\u75db\uff08\u4e00\u79cd\u5e7f\u6cdb\u7528\u4e8e\u6cbb\u7597\u53d1\u70e7\u548c\u75bc\u75db\u7684\u836f\u7269\uff09\u548c\u6297\u751f\u7d20\u8fc7\u91cf\u5bfc\u81f4\u809d\u635f\u4f24\u5f88\u5e38\u89c1\uff0c\u4f5c\u8005\u5728\u7814\u7a76\u671f\u95f4\u53d1\u73b0\u4e86 115 \u540d\u4e0e\u6251\u70ed\u606f\u75db\u76f8\u5173\u7684\u836f\u7269\u6027\u809d\u635f\u4f24\u60a3\u8005\u3002\u5728 69 \u4f8b\u975e\u6251\u70ed\u606f\u75db\u809d\u635f\u4f24\u4e2d\uff0c19 \u4f8b\u6d89\u53ca\u6297\u751f\u7d20\uff0c15 \u4f8b\u6d89\u53ca\u8349\u836f\u548c\u81b3\u98df\u8865\u5145\u5242\uff0c\u5176\u4f59\u6d89\u53ca\u6297\u7ed3\u6838\u6216\u6297\u764c\u836f\u7269\u3002\u5468\u4e00\u53d1\u8868\u5728\u300a\u6fb3\u5927\u5229\u4e9a\u533b\u5b66\u6742\u5fd7\u300b\u4e0a\u7684\u7814\u7a76\u53d1\u73b0\uff0c\u975e\u6251\u70ed\u606f\u75db\u809d\u635f\u4f24\u7684\u65e0\u79fb\u690d\u5b58\u6d3b\u7387\u4e5f\u66f4\u5dee\u3002\u8be5\u8bba\u6587\u7684\u5408\u8457\u8005\u3001\u79fb\u690d\u809d\u75c5\u4e13\u5bb6 Ken Liu \u535a\u58eb\u8bf4\uff0c\u4ed6\u611f\u5230\u6709\u5fc5\u8981\u8fdb\u884c\u8fd9\u9879\u7814\u7a76\uff0c\u56e0\u4e3a\u4ed6\u6ce8\u610f\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u60a3\u8005\u56e0\u901a\u5e38\u4e0e\u809d\u810f\u635f\u5bb3\u65e0\u5173\u7684\u836f\u7269\u800c\u5bfc\u81f4\u809d\u635f\u4f24\u3002 \u201c\u5728\u7537\u6027\u4f7f\u7528\u5065\u7f8e\u8865\u5145\u5242\u6216\u5973\u6027\u4f7f\u7528\u51cf\u80a5\u8865\u5145\u5242\u540e\uff0c\u6211\u5f00\u59cb\u770b\u5230\u56e0\u809d\u635f\u4f24\u5165\u9662\u7684\u60a3\u8005\u53d7\u4f24\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u6211\u53ea\u662f\u51b3\u5b9a\u6211\u6700\u597d\u5bf9\u6b64\u8fdb\u884c\u7814\u7a76\uff0c\u770b\u770b\u6211\u5bf9\u66f4\u591a\u8fd9\u4e9b\u7269\u8d28\u9020\u6210\u8fd9\u4e9b\u4f24\u5bb3\u7684\u9884\u611f\u662f\u5426\u5c5e\u5b9e\u3002\u201d\u5218\u548c\u4ed6\u7684\u540c\u4e8b\u8bf4\uff0c\u9700\u8981\u5bf9\u8865\u5145\u5242\u548c\u5176\u4ed6\u66ff\u4ee3\u7597\u6cd5\u548c\u81ea\u7136\u7597\u6cd5\u8fdb\u884c\u66f4\u4e25\u683c\u7684\u76d1\u7ba1\u3002\u4ed6\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u51e0\u4e4e\u4e00\u534a\u7684\u8865\u5145\u5242\u5f15\u8d77\u7684\u4e25\u91cd\u809d\u635f\u4f24\u60a3\u8005\u5177\u6709\u975e\u6b27\u6d32\u79cd\u65cf\u80cc\u666f\u3002\u5218\u8bf4\uff0c\u9700\u8981\u66f4\u591a\u5173\u4e8e\u8865\u5145\u5242\u98ce\u9669\u7684\u6587\u5316\u4e0a\u9002\u5f53\u7684\u793e\u533a\u6559\u80b2\u3002\n\u516c\u5171\u536b\u751f\u533b\u5e08\u517c\u533b\u5b66\u79d1\u5b66\u4e4b\u53cb\u4f1a\u4e3b\u5e2d Ken Harvey \u535a\u58eb\u8bf4\uff0c\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u5218\u7684\u7814\u7a76\u53ea\u68c0\u67e5\u4e86\u8865\u5145\u5242\u5f15\u8d77\u7684\u6700\u4e25\u91cd\u7684\u809d\u810f\u635f\u5bb3\u75c5\u4f8b\uff0c\u5b9e\u9645\u4f24\u5bb3\u7387\u53ef\u80fd\u8981\u9ad8\u5f97\u591a\u3002 \u201c\u8fd9\u9879\u7814\u7a76\u53ea\u68c0\u67e5\u6536\u6cbb\u5728\u4e13\u95e8\u809d\u810f\u75c5\u623f\u7684\u4e25\u91cd\u75c5\u4f8b\uff1b\u5b83\u4eec\u4e0d\u80fd\u63a8\u65ad\u5230\u6fb3\u5927\u5229\u4e9a\u4e0e\u8865\u5145\u836f\u7269\u76f8\u5173\u7684\u809d\u635f\u4f24\u7684\u603b\u4f53\u53d1\u751f\u7387\uff0c\u201d\u54c8\u7ef4\u8bf4\u3002 2018 \u5e74\uff0c\u836f\u54c1\u76d1\u7ba1\u673a\u6784\u2014\u2014\u6cbb\u7597\u7528\u54c1\u7ba1\u7406\u5c40 (TGA) \u63a8\u51fa\u4e86\u300a\u6cbb\u7597\u7528\u54c1\uff08\u5141\u8bb8\u9002\u5e94\u75c7\uff09\u51b3\u5b9a\u300b\u3002\u8865\u5145\u836f\u7269\u7684\u5236\u9020\u5546\u4e0d\u80fd\u518d\u81ea\u884c\u5236\u5b9a\u4e0e\u5176\u4ea7\u54c1\u76f8\u5173\u7684\u76ca\u5904\u6e05\u5355\uff0c\u5373\u201c\u9002\u5e94\u75c7\u201d\uff0c\u800c\u5fc5\u987b\u4ece TGA \u6279\u51c6\u7684\u6e05\u5355\u4e2d\u8fdb\u884c\u9009\u62e9\u3002 \u201c\u7136\u800c\uff0c\u81ea\u7136\u548c\u8865\u5145\u7597\u6cd5\u884c\u4e1a\u88ab\u5141\u8bb8\u521b\u5efa\u540d\u5355\uff0c\u201d\u54c8\u7ef4\u8bf4\u3002 \u201c\u8fd9\u5bfc\u81f4 1,021 \u4e2a\u53ef\u5141\u8bb8\u7684\u9002\u5e94\u75c7\u4e2d\u6709 86% \u662f\u7531\u2018\u4f20\u7edf\u2019\u800c\u975e\u2018\u79d1\u5b66\u2019\u8bc1\u636e\u8bc1\u660e\u662f\u5408\u7406\u7684\u3002\u8fd9\u6709\u6548\u5730\u6d88\u9664\u4e86\u5bf9\u5177\u6709\u79d1\u5b66\u8bc1\u636e\u57fa\u7840\u7684\u8865\u5145\u836f\u7269\u7684\u9700\u6c42\u3002\u6beb\u4e0d\u5947\u602a\uff0c\u58f0\u79f0\u5177\u6709\u4f20\u7edf\u7528\u9014\u5e76\u542b\u6709\u8349\u836f\u6210\u5206\u7684\u4e0a\u5e02\u836f\u7269\u6570\u91cf\u6709\u6240\u589e\u52a0\u3002\u201d Harvey \u8bf4\uff0cTGA \u6ca1\u6709\u8fdb\u884c\u4e0a\u5e02\u524d\u8bc4\u4f30\uff0c\u6709\u9650\u7684\u4e0a\u5e02\u540e\u76d1\u7763\u8868\u660e\u76d1\u7ba1\u4e0d\u5408\u89c4\u7684\u7a0b\u5ea6\u5f88\u9ad8\u3002 \u201c\u6b64\u5916\uff0c\u6b63\u5982 MJA \u8bba\u6587\u7684\u4f5c\u8005\u6240\u6307\u51fa\u7684\uff0c\u4ece\u6d77\u5916\u5728\u7ebf\u8d2d\u4e70\u7684\u8349\u836f\u548c\u81b3\u98df\u8865\u5145\u5242\u9003\u907f\u4e86\u6fb3\u5927\u5229\u4e9a\u7684\u4efb\u4f55\u76d1\u7ba1\uff0c\u201d\u54c8\u7ef4\u8bf4\u3002 \u201c\u4f4e\u98ce\u9669\u4ea7\u54c1\u5e76\u4e0d\u610f\u5473\u7740\u6ca1\u6709\u98ce\u9669\u3002 TGA \u5e94\u5bf9\u4e0a\u5e02\u4ea7\u54c1\u8fdb\u884c\u66f4\u591a\u7684\u4e0a\u5e02\u540e\u76d1\u7763\uff0c\u5c24\u5176\u662f\u4e0e\u4e0d\u826f\u4e8b\u4ef6\u3001\u6c61\u67d3\u548c\u63ba\u5047\u6709\u5173\u7684\u4e2d\u836f\u548c\u963f\u80b2\u5420\u9640\u836f\u7269\u3002\u4ed6\u4eec\u8fd8\u5e94\u8be5\u516c\u5e03\u4ed6\u4eec\u7684\u53d1\u73b0\u3002\u201d\n\u6fb3\u5927\u5229\u4e9a\u7687\u5bb6\u5168\u79d1\u533b\u5e08\u5b66\u9662\u3001Choice\u3001\u533b\u5b66\u79d1\u5b66\u4e4b\u53cb\u548c\u5176\u4ed6\u673a\u6784\u547c\u5401\u5bf9\u5177\u6709\u4f20\u7edf\u58f0\u79f0\u7684\u836f\u7269\u7684\u5305\u88c5\u548c\u5ba3\u4f20\u6750\u6599\u53d1\u8868\u6559\u80b2\u58f0\u660e\uff0c\u4f8b\u5982\u8bf4\u201c\u8be5\u4ea7\u54c1\u57fa\u4e8e\u4f20\u7edf\u4fe1\u4ef0\uff0c\u800c\u4e0d\u662f\u73b0\u4ee3\u79d1\u5b66\u8bc1\u636e\u201d\u3002 \u201c\u8fd9\u906d\u5230\u4e86\u884c\u4e1a\u548c TGA \u7684\u53cd\u5bf9\uff0c\u201d\u54c8\u7ef4\u8bf4\u3002 \u201c\u4f46\u8fd8\u662f\u9700\u8981\u3002\u201d", "note_en": "Researchers say cases linked to products claiming to promote muscle growth or weight loss are rising and more rigorous oversight is needed\n    The number of patients being admitted to hospital with severe liver injuries caused by herbal and dietary supplements claiming to promote muscle growth or weight loss is increasing, with some people harmed so severely they required a liver transplant.\n A study led by Dr Emily Nash from the Royal Prince Alfred hospital examined hospital records of 184 adults admitted to the AW Morrow Gastroenterology and Liver Centre with drug-induced liver injury between 2009 and 2020. She and her co-authors found liver injury cases linked to herbal and dietary supplements increased from two out of 11 patients (15%) during 2009\u201311, to 10 out of 19 patients (47%) during 2018\u201320.\n   Liver injury from overdose from paracetamol, a widely used medication to treat fever and pain, and antibiotics, is common, and the authors found 115 patients with paracetamol-related drug-induced liver injury during the study period. Of the 69 with non-paracetamol liver injury, 19 cases involved antibiotics, 15 involved herbal and dietary supplements, and the rest involved anti-tuberculosis or anti-cancer medications.\n Transplant-free survival was also worse for non-paracetamol liver injury, the study, published in the Medical Journal of Australia on Monday, found. A co-author of the paper, specialist transplant hepatologist Dr Ken Liu, said he felt compelled to conduct the study because he was noticing more patients with liver injuries from drugs not typically associated with liver harm.\n \u201cI was starting to see injury in patients admitted with liver injury after using bodybuilding supplements for males or weight loss supplements in females,\u201d he said. \u201cI just decided I better do a study on it to see if my hunch that more of these substances were causing these injuries was true.\u201d\n Liu and his colleagues said there needed to be more rigorous regulatory oversight for supplements and other alternative and natural therapies. They also noticed almost half the patients with supplement-induced severe liver injury had non-European ethnic backgrounds. Liu said more culturally appropriate community education about the risks of supplements was needed.\n Dr Ken Harvey, public health physician and president of Friends of Science in Medicine, said it was important to note that Liu\u2019s study only examined the most severe cases of supplement-induced liver harm and that the actual rate of harm was likely much higher.\n \u201cThe study only examines severe cases admitted to a specialised liver unit; they cannot be extrapolated to the overall incidence of complementary medicine associated liver injury in Australia,\u201d Harvey said.\n In 2018, the drugs regulator, the Therapeutic Goods Administration (TGA), introduced the Therapeutic Goods (Permissible Indications) Determination. Manufacturers of complementary medicines could no longer make up their own list of benefits associated with their products, known as \u201cindications\u201d, but had to choose from a TGA-approved list.\n  \u201cHowever, the natural and complementary therapy industry was allowed to create the list,\u201d Harvey said. \u201cThis resulted in 86% of 1,021 permissible indications being justified by \u2018traditional\u2019 rather than \u2018scientific\u2019 evidence. This effectively removed the need for complementary medicines to have a scientific evidence base. Not surprisingly, the number of listed medicines claiming traditional use and containing herbal ingredients has increased.\u201d\n There is no pre-market evaluation by the TGA, Harvey said, and limited post-marketing surveillance shows a high level of regulatory non-compliance.\n \u201cIn addition, as the authors of the MJA paper point out, herbal and dietary supplements purchased online from overseas evade any Australian regulatory oversight,\u201d Harvey said.\n \u201cA low-risk product does not mean there is no risk. The TGA should conduct more post-marketing surveillance on listed products, especially Chinese traditional and Ayurveda medicines that have been associated with adverse events, contamination and adulteration. They should also publicise their findings.\u201d\n The Royal Australian College of General Practitioners, Choice, Friends of Science in Medicine and others have called for an educational statement on the pack and promotional material of medicines making traditional claims, for example saying \u201cThis product is based on traditional beliefs and not modern scientific evidence\u201d.\n \u201cThis was opposed by industry and the TGA,\u201d Harvey said. \u201cBut is still needed.\u201d", "posttime": "2021-07-25 21:54:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8868\u660e,supplements,\u836f\u7269", "title": "\u7814\u7a76\u8868\u660e\u81b3\u98df\u8865\u5145\u5242\u5bfc\u81f4\u6fb3\u5927\u5229\u4e9a\u4eba\u4e25\u91cd\u809d\u635f\u4f24", "title_en": "Dietary supplements causing severe liver injuries in Australians, study shows", "transed": 1, "url": "https://www.theguardian.com/australia-news/2021/jul/26/dietary-supplements-causing-severe-liver-injuries-in-australians-with-some-requiring-transplants-study-shows", "via": "", "real_tags": ["\u8868\u660e", "\u836f\u7269"]}, {"category": "", "categoryclass": "", "imagename": "eedeaaa3db4b8699f592f39114ecc133.jpg", "infoid": 1069672, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6709\u5f88\u591a\u7b2c\u4e09\u65b9 Web \u6d4f\u89c8\u5668\uff0c\u5176\u4e2d\u8bb8\u591a\u90fd\u4f7f\u7528 Chromium \u4f5c\u4e3a\u5b83\u4eec\u7684\u57fa\u7840\u3002 Android \u4e0a\u53ef\u7528\u7684\u4e00\u79cd\u6b64\u7c7b\u6d4f\u89c8\u5668\u79f0\u4e3a Kiwi Browser\uff0c\u7531 XDA \u9ad8\u7ea7\u4f1a\u5458 arnaud42 \u5f00\u53d1\u3002 Kiwi \u9762\u5411\u9ad8\u7ea7\u7528\u6237\uff0c\u5177\u6709\u5185\u7f6e\u5e7f\u544a\u62e6\u622a\u5668\u3001\u52a0\u5bc6\u52ab\u6301\u4fdd\u62a4\u7b49\u529f\u80fd\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u6269\u5c55\u652f\u6301\uff0c\u8fd9\u662f\u5927\u591a\u6570\u57fa\u4e8e Chromium \u7684\u6d4f\u89c8\u5668\uff08\u5c24\u5176\u662f Google Chrome \u672c\u8eab\uff09\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u7f3a\u4e4f\u7684\u529f\u80fd\u3002\u5bf9\u4e8e\u72ec\u7acb\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5728\u5f88\u591a\u65b9\u9762\u4e0e\u4e3b\u4ee3\u7801\u5e93\u4e0d\u540c\u7684 Chromium \u5206\u652f\u5e76\u4e0d\u5bb9\u6613\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Kiwi Browser \u7684\u66f4\u65b0\u7f13\u6162\u5e76\u4e14\u5e95\u5c42 Chromium \u7248\u672c\u4e0e\u8c37\u6b4c\u7684\u7248\u672c\u4e0d\u540c\u6b65\u7684\u539f\u56e0\u3002\u81ea\u4ece Google \u6700\u8fd1\u4ece 6 \u5468\u7684\u65f6\u95f4\u8868\u6539\u4e3a 4 \u5468\u7684\u65f6\u95f4\u8868\u4ee5\u6765\uff0c\u8ddf\u4e0a Chromium \u7684\u53d1\u5e03\u5468\u671f\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u4f46\u662f\uff0c\u968f\u7740\u672a\u6765\u5bf9 Kiwi Browser \u7684\u66f4\u65b0\u4e5f\u5c06\u81ea\u52a8\u5305\u542b\u6700\u65b0\u7684 Chromium \u7248\u672c\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u6539\u53d8\u3002\u8fd9\u8981\u5f52\u529f\u4e8e\u5f00\u53d1\u4eba\u5458\u5728\u540d\u4e3a\u201cKiwi Next\u201d\u7684\u9879\u76ee\u4e0a\u6240\u505a\u7684\u5de5\u4f5c\uff0c\u8be5\u9879\u76ee\u662f\u201c\u4f7f\u7528\u6700\u65b0\u7684 Chromium \u81ea\u52a8\u91cd\u65b0\u6784\u5efa Kiwi \u6d4f\u89c8\u5668\u201d\u3002\u5f00\u53d1\u4eba\u5458\u544a\u8bc9\u6211\u4eec\uff0c\u4ed6\u4e00\u76f4\u81f4\u529b\u4e8e\u7f16\u5199\u811a\u672c\u548c\u81ea\u52a8\u5316\u5de5\u5177\uff0c\u4ee5\u66f4\u6709\u6548\u5730\u9075\u5faa\u65b0\u7684 Chromium \u53d1\u5e03\u5468\u671f\u3002\u8fd9\u6709\u671b\u4f7f Kiwi \u4e0e\u6700\u65b0\u7684 Chromium \u7248\u672c\u4fdd\u6301\u540c\u6b65\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u4f1a\u9519\u8fc7\u5173\u952e\u7684\u9519\u8bef\u4fee\u590d\u6216\u65b0\u7684\u6d4f\u89c8\u5668\u529f\u80fd\u3002\u7531\u4e8e\u5408\u5e76\u4ea7\u751f\u7684\u4ee3\u7801\u51b2\u7a81\uff0c\u81ea\u52a8\u53d8\u57fa\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u9884\u6599\u7684\u9519\u8bef\u6216\u635f\u574f\uff0c\u4f46\u5f00\u53d1\u4eba\u5458\u4f3c\u4e4e\u5df2\u7ecf\u627e\u5230\u4e86\u5982\u4f55\u5728\u6700\u65b0\u7684 Chromium \u7248\u672c\u4e4b\u4e0a\u5feb\u901f\u96c6\u6210\u73b0\u6709\u4ee3\u7801\u7684\u65b9\u6cd5\u3002\u9664\u4e86 Kiwi Next \u9879\u76ee\uff0c\u5f00\u53d1\u4eba\u5458\u8fd8\u4e00\u76f4\u81f4\u529b\u4e8e\u63a8\u51fa Kiwi Browser \u5e94\u7528\u7a0b\u5e8f\u7684\u91cd\u5927\u65b0\u66f4\u65b0\u3002\u6700\u65b0\u66f4\u65b0\u57fa\u4e8e Chromium 93.0.4577 \u7248\uff0c\u56e0\u6b64\u7531\u4e8e Google \u5728\u8fc7\u53bb\u51e0\u4e2a\u6708\u4e2d\u6240\u505a\u7684\u6240\u6709\u6539\u8fdb\uff0c\u4e0e\u7f51\u7ad9\u7684\u517c\u5bb9\u6027\u548c\u6027\u80fd\u90fd\u5f97\u5230\u4e86\u663e\u7740\u63d0\u9ad8\u3002\u8be5\u66f4\u65b0\u8fd8\u5e26\u6765\u4e86\u589e\u5f3a\u7684\u5185\u5bb9\u62e6\u622a\u5668\u3001\u65b0\u7684\u5f00\u53d1\u8005\u5de5\u5177\u3001\u4fee\u6b63\u4e86\u4e00\u7cfb\u5217\u70b9\u51fb\u6545\u969c\u7684\u95ee\u9898\u3001\u4fee\u590d\u4e86\u5927\u91cf\u767d\u9875\u3001\u65b0\u7684\u591c\u95f4\u6a21\u5f0f\uff08\u4f7f\u7528 Android \u7684\u9ed1\u6697\u4e3b\u9898\u7cfb\u7edf\u548c Chrome \u7684\u201c\u7f51\u9875\u5185\u5bb9\u5f3a\u5236\u9ed1\u6697\u6a21\u5f0f\u201d\uff09 \u201d\uff09\uff0c\u4ee5\u53ca\u65b0\u7684\u901a\u77e5\u7ba1\u7406\u7cfb\u7edf\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u6b64\u66f4\u65b0\u57fa\u4e8e\u6700\u65b0\u7684 Chromium \u7248\u672c\uff0c\u56e0\u6b64\u65e7\u7684\u5782\u76f4\u9009\u9879\u5361\u5207\u6362\u5668\u5df2\u4ece\u4ee3\u7801\u5e93\u4e2d\u5b8c\u5168\u5220\u9664\u3002 Kiwi \u5f00\u53d1\u4eba\u5458\u5728\u201c\u8bbe\u7f6e\u201d\u4e2d\u4e3a\u90a3\u4e9b\u5b8c\u5168\u8ba8\u538c\u65b0\u6807\u7b7e\u7cfb\u7edf\u7684\u4eba\u6dfb\u52a0\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684\u5782\u76f4\u6807\u7b7e\u5207\u6362\u5668\u9009\u9879\uff0c\u4f46\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u662f 1:1 \u7684\u66ff\u4ee3\u54c1\u3002\u60a8\u53ef\u4ee5\u7acb\u5373\u5728 Google Play \u5546\u5e97\u67e5\u770b Kiwi Browser \u7684\u6700\u65b0\u66f4\u65b0\u3002 Play \u5546\u5e97\u7248\u672c\u7684\u5927\u5c0f\u53ea\u6709 49MB\uff0c\u56e0\u4e3a\u5f00\u53d1\u4eba\u5458\u544a\u8bc9\u6211\u4eec\u4ed6\u5df2\u5207\u6362\u5230\u65b0\u7684\u4ea4\u4ed8\u673a\u5236\uff0c\u4f46\u5982\u679c\u60a8\u4ece\u5176\u4ed6\u6765\u6e90\u83b7\u53d6\u66f4\u65b0\uff0c\u5b83\u7684\u5927\u5c0f\u5c06\u8d85\u8fc7 150MB\u3002", "note_en": "There are a lot of third-party web browsers out there, many of which use Chromium as their base. One such browser available on Android is called  Kiwi Browser, developed by XDA Senior Member  arnaud42. Kiwi is aimed at power users with features like a built-in ad-blocker, crypto-jacking protection, and most importantly, extensions support, a feature that most Chromium-based browsers \u2014 notably Google Chrome itself \u2014 lack on mobile.\n It isn\u2019t easy for an indie dev to maintain a Chromium fork that diverges in lots of ways from the main codebase, which is why updates to Kiwi Browser have been slow and the underlying Chromium version hasn\u2019t been in sync with Google\u2019s releases. It\u2019s become even harder to keep up with the Chromium release cycle since Google recently moved from a 6 week schedule  to a 4 week one. However, that could change soon as future updates to Kiwi Browser will automatically include the latest Chromium version as well.\n  This is thanks to work the developer has done on a project called \u201c Kiwi Next,\u201d which is \u201cKiwi Browser auto-rebased with latest Chromium.\u201d The developer tells us he\u2019s been working on scripting and automation tools to follow the new Chromium release cycle more efficiently. This should hopefully keep Kiwi in sync with the latest Chromium release, so users won\u2019t have to miss out on critical bug fixes or new browser features. Auto-rebasing can result in unforeseen errors or breakages thanks to code conflicts from the merger, but it seems the developers have figured out how to quickly integrate their existing code on top of the latest Chromium release.\n   Apart from the Kiwi Next project, the developer has also been working on rolling out a major new update to the Kiwi Browser app. The latest update is based on Chromium version 93.0.4577, so compatibility with websites has been significantly improved as has performance thanks to  all the improvements Google made over the last few months. The update also brings an enhanced content blocker, new DevTools, corrections to a slew of issues with malfunctioning clicks, fixes for a slew of white pages, a new night mode (which uses Android\u2019s dark theme system and Chrome\u2019s \u201cForce Dark Mode for Web Contents\u201d), and a new notification management system.\n Because the update is based on the latest Chromium version, though, the legacy vertical tab switcher  has been completely removed from the codebase. The Kiwi dev added their own vertical tab switcher option in Settings for those who totally hate the new tab system, but do note that it\u2019s not a 1:1 replacement.\n You can check out the latest update to Kiwi Browser  on the Google Play Store right now. The Play Store version is only 49MB in size as the developer tells us he\u2019s switched to the new delivery mechanism, but if you grab the update from another source, it\u2019ll be over 150MB in size.", "posttime": "2021-07-25 21:54:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,\u5f00\u53d1,\u6d4f\u89c8\u5668,browser,kiwi", "title": "Kiwi \u6d4f\u89c8\u5668\u5f00\u53d1\u4eba\u5458\u51c6\u5907\u66f4\u9891\u7e41\u5730\u53d1\u5e03 Chromium \u66f4\u65b0", "title_en": "Kiwi Browser dev prepares to release Chromium updates more frequently", "transed": 1, "url": "https://www.xda-developers.com/kiwi-browser-next-chromium-updates/", "via": "", "real_tags": ["\u53d1\u5e03", "\u5f00\u53d1", "\u6d4f\u89c8\u5668", "browser", "kiwi"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069671, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u725b\u6d25\u690d\u7269\u56ed\u5df2\u6709 400 \u5e74\u7684\u5386\u53f2\uff0c\u4f46\u6c14\u5019\u7d27\u6025\u60c5\u51b5\u8feb\u4f7f\u4eba\u4eec\u91cd\u65b0\u5ba1\u89c6\u5b83\u4e3a\u672a\u6765\u64ad\u4e0b\u7684\u79cd\u5b50 \u5b83\u5df2\u7ecf\u5b58\u6d3b\u4e86 400 \u5e74\u2014\u2014\u82f1\u56fd\u6700\u53e4\u8001\u7684\u690d\u7269\u56ed\uff0c\u51e0\u4e2a\u4e16\u7eaa\u4ee5\u6765\u4e00\u76f4\u4eab\u6709\u836f\u7528\u690d\u7269\u548c\u53e4\u6811\u7684\u5929\u5802\u4ee5 JRR Tolkien \u548c Lewis Carroll \u7b49\u8457\u540d\u4eba\u7269\u547d\u540d\u3002\u7136\u800c\uff0c\u5728\u4eca\u5929\u725b\u6d25\u690d\u7269\u56ed\u5468\u5e74\u7eaa\u5ff5\u4e4b\u540e\uff0c\u7531\u4e8e\u6c14\u5019\u5371\u673a\u5bf9\u82f1\u56fd\u5929\u6c14\u7684\u5f71\u54cd\uff0c\u672a\u6765\u7684\u60c5\u51b5\u53ef\u80fd\u4f1a\u5927\u4e0d\u76f8\u540c\u3002 \u201c\u6211\u4eec\u5fc5\u987b\u975e\u5e38\u4ed4\u7ec6\u5730\u8003\u8651\u6211\u4eec\u4e3a\u672a\u6765\u79cd\u690d\u4ec0\u4e48\uff0c\u201d\u82b1\u56ed\u7684\u8d1f\u8d23\u4eba\u897f\u8499\u00b7\u5e0c\u65af\u8003\u514b\u6559\u6388\u8bf4\u3002 \u201c\u5c24\u5176\u662f\u6811\u6728\uff0c\u56e0\u4e3a\u4f60\u4e0d\u4ec5\u8981\u8003\u8651\u51e0\u5e74\uff0c\u800c\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u8981\u8003\u8651\u6570\u767e\u5e74\u3002 \u201c\u6211\u4eec\u91cd\u65b0\u914d\u7f6e\u4e86\u6211\u4eec\u7684\u5ca9\u77f3\u82b1\u56ed\uff0c\u4f7f\u5176\u6210\u4e3a\u5730\u4e2d\u6d77\u4e1c\u90e8\u7684\u666f\u89c2\u3002\u201d Hiscock \u8bf4\uff0c\u4e0a\u5468\u6c14\u6e29\u8fbe\u5230 30 \u6444\u6c0f\u5ea6\uff0c\u7d2b\u8272\u7684\u98de\u71d5\u8349\u548c\u5de8\u5927\u7684\u9ec4\u8272\u6bdb\u854a\u82b1\u5728\u708e\u70ed\u7684\u5929\u6c14\u91cc\u5fd9\u7740\u871c\u8702\u3002 \u201c\u5728\u8fd9\u70bd\u70ed\u7684\u9633\u5149\u548c\u70ed\u91cf\u4e0b\uff0c\u5b83\u73b0\u5728\u8868\u73b0\u5f97\u975e\u5e38\u597d\uff0c\u690d\u7269\u4e5f\u5f88\u559c\u6b22\u5b83\u3002 \u201c\u6211\u4eec\u8fd8\u9700\u8981\u7814\u7a76\u968f\u7740\u5929\u6c14\u53d8\u6696\uff0c\u6211\u4eec\u7684\u666f\u89c2\u4f1a\u53d1\u751f\u4ec0\u4e48\u53d8\u5316\u3002\u5730\u4e2d\u6d77\u82b1\u56ed\u80af\u5b9a\u6bd4\u666e\u901a\u7684\u82f1\u5f0f\u82b1\u56ed\u66f4\u5bb9\u6613\u7ef4\u62a4\u3002\u201d\u4e5f\u6709\u4f24\u4ea1\u3002 Hiscock \u8bf4\uff0c\u73b0\u4ee3\u73ab\u7470\u548c\u7ecf\u5178\u7684\u82f1\u5f0f\u8349\u672c\u8fb9\u754c\u9700\u8981\u5927\u91cf\u7684\u6c34\uff0c\u4f46\u8fc7\u53bb\u51e0\u5468\u7684\u503e\u76c6\u5927\u96e8\u5df2\u7ecf\u538b\u6241\u4e86\u8bb8\u591a\u7261\u4e39\u3002\n\u56fd\u5185\u56ed\u4e01\u4e00\u76f4\u901a\u8fc7\u8d2d\u4e70\u65e0\u82b1\u679c\u6811\u548c\u6a44\u6984\u6811\u6765\u9002\u5e94\u6e29\u6696\u7684\u6761\u4ef6\uff0c\u4f46 Hiscock \u8bf4\uff0c\u611f\u67d3 Xylella \u7b49\u75be\u75c5\u7684\u98ce\u9669\u610f\u5473\u7740\u4ed6\u4eec\u5e94\u8be5\u8c28\u614e\u3002\u4ed6\u8bf4\uff0c\u5317\u7f8e\u5c71\u6838\u6843\u548c\u6765\u81ea\u5357\u6b27\u7684\u5564\u9152\u82b1\u89d2\u6811\u662f\u6709\u8da3\u7684\u66ff\u4ee3\u54c1\uff0c\u800c\u6ce2\u65af\u4e1d\u7ef8\u6811\u548c\u6ce2\u65af\u94c1\u6728\u4e5f\u5f88\u6f02\u4eae\u3002\u50cf\u8fd9\u6837\u7684\u7269\u79cd\u662f\u7531\u82b1\u56ed\u91cc 18 \u4e16\u7eaa\u7684\u690d\u7269\u5b66\u5bb6\u4e4b\u4e00\u7ea6\u7ff0\u00b7\u897f\u5e03\u7d22\u666e (John Sibthorpe) \u6536\u96c6\u7684\uff0c\u4ed6\u5728 1784 \u5e74\u548c 1794 \u5e74\u8ddf\u968f\u53e4\u5e0c\u814a\u533b\u751f Dioscorides \u7684\u811a\u6b65\uff0c\u4f7f\u7528\u4ed6\u7684\u8457\u4f5c\u300a\u672c\u8349\u300b(De Materia Medica) \u5bf9\u5730\u4e2d\u6d77\u4e1c\u90e8\u8fdb\u884c\u4e86\u63a2\u9669\u3002 \u201cSibthorpe \u7528\u90a3\u672c\u4e66\u5728\u5730\u4e2d\u6d77\u4e1c\u90e8\u822a\u884c\uff0c\u201dHiscock \u8bf4\u3002\u4ed6\u53d1\u73b0\u7684\u690d\u7269\u7531\u8d39\u8fea\u5357\u5fb7\u00b7\u9c8d\u5c14 (Ferdinand Bauer) \u52fe\u753b\uff0c\u6807\u672c\u548c\u6536\u85cf\u54c1\u6784\u6210\u4e86 Flora Graeca \u7684\u57fa\u7840\uff0c\u8fd9\u672c\u4e66\u88ab\u6559\u6388\u63cf\u8ff0\u4e3a\u201c\u725b\u6d25\u690d\u7269\u5b66\u7687\u51a0\u4e0a\u7684\u660e\u73e0\u201d\u3002\u82b1\u56ed\u7684\u5960\u57fa\u77f3\u662f\u5728 1621 \u5e74 7 \u6708 25 \u65e5\u5960\u57fa\u7684\uff0c\u56e0\u4e3a\u4e39\u6bd4\u7684\u7b2c\u4e00\u4f4d\u4f2f\u7235\u4ea8\u5229\u4e39\u5f17\u65af\u4ece\u9a6c\u683c\u8fbe\u4f26\u5b66\u9662\u79df\u4e0b\u4e86\u8fd9\u5757\u5360\u5730 5 \u82f1\u4ea9\u7684\u571f\u5730\uff0c\u5efa\u9020\u4e86\u4e00\u4e2a\u79cd\u6ee1\u836f\u7528\u690d\u7269\u7684\u201c\u7269\u7406\u82b1\u56ed\u201d\uff0c\u4f9b\u533b\u5b66\u751f\u6559\u5b66\u3002 \u201c\u5b66\u751f\u9700\u8981\u80fd\u591f\u8bc6\u522b\u4ed6\u4eec\u5c06\u7814\u78e8\u7528\u4e8e\u836f\u7269\u7684\u690d\u7269\uff0c\u5e76\u7406\u89e3\u5b83\u4eec\u3002\u4f60\u53ef\u4ee5\u4ece\u81f4\u547d\u7684\u8304\u5c5e\u690d\u7269\u4e2d\u4f7f\u7528\u963f\u6258\u54c1\uff0c\u5c11\u91cf\u4f7f\u7528\u5373\u53ef\u83b7\u5f97\u826f\u597d\u6548\u679c\uff0c\u4f46\u9ad8\u5242\u91cf\u5f53\u7136\u4f1a\u5bfc\u81f4\u4eba\u6b7b\u4ea1\u3002\u201d\u5230 1642 \u5e74\uff0c\u82b1\u56ed\u7531\u82b1\u56ed\u7684\u7b2c\u4e00\u4efb\u7ba1\u7406\u5458\u3001\u5fb7\u56fd\u524d\u96c7\u4f63\u5175 Jacob Bobart the Elder \u5efa\u7acb\u5e76\u7167\u6599\u3002\n\u5728\u82f1\u56fd\u5185\u6218\u671f\u95f4\uff0c\u67e5\u5c14\u65af\u4e00\u4e16\u5728\u725b\u6d25\u5f00\u5ead\u65f6\uff0c\u535a\u5df4\u7279\u5f00\u59cb\u7f16\u5236\u82b1\u56ed\u91cc 1,600 \u682a\u690d\u7269\u7684\u76ee\u5f55\uff0c\u540c\u65f6\u51fa\u552e\u82b1\u56ed\u91cc\u7684\u6c34\u679c\u548c\u852c\u83dc\uff0c\u5e76\u7ecf\u8425\u4e00\u5bb6\u540d\u4e3a\u201c\u7070\u72d7\u201d\u7684\u9152\u5427\u3002\u5728\u6b64\u671f\u95f4\u79cd\u690d\u7684\u4e00\u4e9b\u7ea2\u8c46\u6749\u6811\u4ecd\u7136\u5c79\u7acb\u4e0d\u5012\u3002\u5230 1830 \u5e74\u4ee3\uff0c\u7269\u7406\u56ed\u66f4\u540d\u4e3a\u690d\u7269\u56ed\uff0c\u4ee5\u53cd\u6620\u5bf9\u5b9e\u9a8c\u690d\u7269\u5b66\u7684\u65e5\u76ca\u5173\u6ce8\uff0c\u73b0\u5728\u62e5\u6709 5,000 \u79cd\u7528\u4e8e\u7814\u7a76\u3001\u6559\u5b66\u548c\u4fdd\u62a4\u7684\u690d\u7269\u3002\u4f5c\u5bb6\u6258\u5c14\u91d1\u3001\u5361\u7f57\u5c14\u3001\u4f0a\u592b\u6797\u6c83\u3001\u83f2\u5229\u666e\u666e\u5c14\u66fc\u548c\u79d1\u6797\u5fb7\u514b\u65af\u7279\u90fd\u5229\u7528\u4e86\u82b1\u56ed\u7684\u5b81\u9759\u3002\u82b1\u56ed\u8fd8\u79cd\u690d\u690d\u7269\u7528\u4e8e\u81ea\u6709\u54c1\u724c\u7684\u675c\u677e\u5b50\u9152\uff0c\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u5c06\u63a8\u51fa\u4e00\u6b3e\u5a01\u58eb\u5fcc\uff0c\u4f5c\u4e3a 400 \u5468\u5e74\u5e86\u795d\u6d3b\u52a8\u7684\u4e00\u90e8\u5206\u3002\u4eca\u5929\uff0c\u725b\u6d25\u5927\u5b66\u6821\u957f\u514b\u91cc\u65af\u00b7\u5e15\u6ed5\uff08Chris Patten\uff09\u5c06\u79cd\u690d\u4e00\u68f5\u624b\u5e15\u6811\uff08\u73d9\u6850\uff09\u5f00\u59cb\u7eaa\u5ff5\uff0c\u4ee5\u7eaa\u5ff5\u54c8\u7f57\u5fb7\u00b7\u9ea6\u514b\u7c73\u4f26\u4e8e 1971 \u5e74\u79cd\u690d\u7684 350 \u5468\u5e74\u7eaa\u5ff5\u6811\u3002\u8fd8\u5c06\u6709\u4e00\u6735\u65b0\u7684\u73ab\u7470\uff0c\u725b\u6d25\u7269\u7406\u73ab\u7470\uff0c\u521b\u9020\u7531\u5f7c\u5f97\u00b7\u6bd4\u5c14\u65af (Peter Beales) \u521b\u4f5c\uff0c\u56e0\u5176\u575a\u97e7\u548c\u9999\u6c14\u7684\u7ed3\u5408\u800c\u57f9\u80b2\uff0c\u5c3d\u7ba1\u5b83\u4e0d\u5982\u897f\u5e03\u7d22\u666e (Sibthorpe) \u6240\u9274\u5b9a\u7684\u5927\u9a6c\u58eb\u9769\u73ab\u7470\u90a3\u6837\u575a\u97e7\u3002\u7687\u5bb6\u56ed\u827a\u5b66\u4f1a\u73af\u5883\u56ed\u827a\u8d1f\u8d23\u4eba\u9a6c\u514b\u00b7\u53e4\u4ec0\uff08Mark Gush\uff09\u8bf4\uff0c\u590d\u539f\u529b\u662f\u4e00\u79cd\u8d8a\u6765\u8d8a\u53d7\u5230\u56ed\u827a\u5e08\u91cd\u89c6\u7684\u54c1\u8d28\u3002 \u201c\u8fd9\u662f\u5173\u4e8e\u5e94\u5bf9\u6781\u7aef\u60c5\u51b5\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u6c14\u6e29\u5347\u9ad8\u2014\u2014\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e25\u91cd\u7684\u5bd2\u6d41\u548c\u6781\u7aef\u6c34\u3001\u5e72\u65f1\u548c\u6d2a\u6c34\u3002\u4ece\u5e7f\u4e49\u4e0a\u8bb2\uff0c\u4eba\u4eec\u5e94\u8be5\u8003\u8651\u91cd\u70b9\u662f\u9002\u5e94\u8fd8\u662f\u51cf\u8f7b\u6c14\u5019\u53d8\u5316\u3002\u201d\u53e4\u4ec0\u8bf4\uff0c\u4e00\u4e9b\u57f9\u80b2\u51fa\u7ecf\u5178\u82f1\u5f0f\u4e61\u6751\u82b1\u56ed\u7684\u690d\u7269\u53ef\u80fd\u4f1a\u9047\u5230\u56f0\u96be\u3002\u5bf9\u4e8e\u90a3\u4e9b\u60f3\u8981\u7f13\u89e3\u6c14\u5019\u5371\u673a\u7684\u4eba\u6765\u8bf4\uff0c\u79cd\u690d\u80fd\u591f\u56fa\u78b3\u7684\u6811\u79cd\u53ef\u80fd\u662f\u4e00\u79cd\u65b9\u6cd5\u3002\u6539\u5584\u571f\u58e4\u8d28\u91cf\u4e5f\u6709\u5e2e\u52a9\u3002 \u201c\u5982\u679c\u4f60\u6b63\u5728\u6539\u5584\u571f\u58e4\u3001\u5176\u6392\u6c34\u80fd\u529b\u3001\u6709\u673a\u7269\u8d28\u548c\u517b\u5206\u7684\u6570\u91cf\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u81ea\u52a8\u589e\u52a0\u4f60\u6b63\u5728\u5efa\u7acb\u7684\u4efb\u4f55\u6811\u6728\u6216\u690d\u7269\u7684\u5f39\u6027\uff0c\u201d\u4ed6\u8bf4\u3002\n\u5f39\u6027\u662f\u5173\u952e\uff0cHiscock \u540c\u610f\u3002 \u201c\u690d\u7269\u8fdc\u6bd4\u52a8\u7269\u8ff7\u4eba\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u5b83\u4eec\u5bff\u547d\u66f4\u957f\uff0c\u66f4\u8010\u7528\u3002\u4ed6\u4eec\u627f\u53d7\u3002\u5982\u679c\u5929\u6c14\u53d8\u70ed\uff0c\u52a8\u7269\u53ef\u4ee5\u79fb\u5230\u9634\u51c9\u5904\u6216\u5411\u5317\u79fb\u52a8\u3002\u4f46\u662f\u690d\u7269\u5c31\u5750\u5728\u90a3\u91cc\uff0c\u5e76\u4e14\u80fd\u591f\u5fcd\u53d7\u3002\u201d", "note_en": "Oxford Botanic Garden is 400 years old, but the climate emergency is forcing a review of what seeds it sows for the future\n    It has survived for 400 years \u2013 the oldest of Britain\u2019s botanical gardens, a haven of medicinal plants and ancient trees enjoyed through the centuries by famous names such as JRR Tolkien and Lewis Carroll. Yet after the  Oxford Botanic Garden\u2019s anniversary today things may look substantially different in future, due to the impact of the  climate crisis on British weather.\n \u201cWe have to consider very carefully what we plant for the future,\u201d said Prof Simon Hiscock, the garden\u2019s director. \u201cParticularly so with trees, because you have to think of not just a few years but in some cases hundreds of years ahead.\n  \u201cWe have  reconfigured our rock garden to make it very much an eastern Mediterranean landscape.\u201d\n With temperatures reaching 30C last week, the purple delphiniums and huge yellow verbascums were busy with bees in the shimmering heat, Hiscock said. \u201cIt\u2019s doing fantastically well at the moment with this blazing sunshine and heat, and the plants are just loving it.\n \u201cWe also need to look at what is going to happen to our landscape as we become warmer. The Mediterranean garden is certainly easier to maintain than a normal English garden.\u201d\n  There are also casualties. Modern roses and classic English herbaceous borders require substantial amounts of water, but the torrential downpours over the last few weeks had flattened many of the peonies, Hiscock said.\n Domestic gardeners have been adapting to warmer conditions by buying fig and olive trees, but Hiscock said that the risk of diseases such as Xylella meant they should be cautious.\n North American hickories such as the  Carya tomentosa and the hop-hornbeam from southern Europe were interesting alternatives, he said, while the Persian silk tree and Persian ironwood were also beautiful.\n Species like those were collected by one of the garden\u2019s 18th century botanists, John Sibthorpe, who made expeditions to the eastern Mediterranean in 1784 and 1794, following in the footsteps of the ancient Greek physician Dioscorides, using his book  De Materia Medica .\n \u201cSibthorpe used that book to navigate his way around the eastern Mediterranean,\u201d Hiscock said. The plants he found were sketched by Ferdinand Bauer and the specimens and collections formed the basis of the  Flora Graeca, a book that the professor described as \u201cthe botanical crown jewel of Oxford\u201d.\n The founding stone of the garden was laid on 25 July 1621, because Henry Danvers, the first earl of Danby, had leased the five-acre site from Magdalen College to create a \u201cphysic garden\u201d full of medicinal plants for teaching medical students.\n  \u201cStudents needed to be able to identify the plants that they would be grinding up for their medicines, and understand them. You can use atropine from deadly nightshade to good effect in small quantities, but high doses of course can kill people.\u201d\n By 1642, the garden was established and tended by the garden\u2019s first keeper, Jacob Bobart the Elder, a German former mercenary.\n During the English civil war, when Charles I held court in Oxford, Bobart began compiling a catalogue of the 1,600 plants in the garden, while selling fruit and vegetables from the garden and running a pub, the Greyhound. Some of the yew trees planted during this period are still standing.\n  By the 1830s, the physic garden was renamed the botanic garden, to reflect a growing focus on experimental botany, and is now home to 5,000 plants used for research, teaching and conservation. Authors Tolkien, Carroll, Evelyn Waugh, Philip Pullman and Colin Dexter have all made use of the garden\u2019s tranquillity. The gardens also grow botanicals for use in its  own brand of gin, and a whisky is due to be unveiled later this year as part of the 400th anniversary celebrations.\n Today Oxford University\u2019s chancellor, Chris Patten, will begin the commemoration by planting a handkerchief tree ( Davidia involucrate), to go alongside the 350th anniversary tree planted by Harold Macmillan in 1971.\n There will also be a new rose, the Oxford physic rose, created by Peter Beales and bred for its combination of hardiness and scent, although it is not as resilient as the damask roses that Sibthorpe identified.\n Resilience was a quality gardeners were prizing more and more, said Mark Gush, head of environmental horticulture at the Royal Horticultural Society. \u201cIt\u2019s about coping with extremes,\u201d he said. \u201cIt\u2019s not just about increasing temperatures \u2013 there could be severe cold snaps and extremes of water, drought and flooding. Broadly, people should think about whether the emphasis is on adaptation or on mitigating a changing climate.\u201d\n  Some plants bred to create a classic English country garden might struggle, Gush said. Planting tree species that sequestered carbon could be an approach for those wanting to mitigate the climate crisis. Improving soil quality could also help.\n \u201cIf you are improving the soil, its drainage capability, the amount of organic matter and nutrients, then you are automatically increasing the resilience of whatever tree or plant you\u2019re establishing,\u201d he said.\n Resilience was key, Hiscock agreed. \u201cPlants are far more fascinating than animals,\u201d he said. \u201cThey are longer-lived and more durable. They withstand. If it gets hot, animals can move into the shade or go north. But plants sit there, and endure.\u201d", "posttime": "2021-07-25 21:54:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82f1\u5f0f,olives,\u82b1\u56ed", "title": "\u73ab\u7470\u51fa\uff0c\u6a44\u6984\u5165\uff1a\u6c14\u5019\u5371\u673a\u65f6\u671f\u7684\u65b0\u82f1\u5f0f\u82b1\u56ed", "title_en": "Roses out, olives in: the new English garden in a time of climate crisis", "transed": 1, "url": "https://www.theguardian.com/lifeandstyle/2021/jul/25/roses-out-olives-in-the-new-english-garden-in-a-time-of-climate-crisis", "via": "", "real_tags": ["\u82f1\u5f0f", "olives", "\u82b1\u56ed"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1032353, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL\uff1bDR\uff1a\u6211\u6210\u529f\u5730\u8ba9Intel I340-T4 4x\u5343\u5146\u7f51\u5361\u8fd0\u884c\u5728Raspberry PI\u8ba1\u7b97\u6a21\u57574\u4e0a\uff0c\u7ed3\u5408\u6240\u6709\u63a5\u53e3(\u5305\u62ec\u5185\u90e8PI\u63a5\u53e3)\uff0c\u6211\u53ef\u4ee5\u83b7\u5f97\u9ad8\u8fbe3.06 Gbps\u7684\u6700\u5927\u6301\u7eed\u541e\u5410\u91cf\u3002\n\u5728\u6211\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u8ba9GPU\u4e0ePI\u4e00\u8d77\u5de5\u4f5c\u65f6\u672a\u80fd\u70b9\u4eae\u663e\u793a\u5668\u540e\uff0c\u6211\u60f3\u8fd9\u4e00\u6b21\u6211\u5e94\u8be5\u5c1d\u8bd5\u4e00\u4e9b\u66f4\u5b9e\u9645\u7684\u4e1c\u897f\u3002\n\u4e3a\u6b64\uff0c\u6211\u5411\u5927\u5bb6\u5c55\u793a\u82f1\u7279\u5c14\u63a8\u51fa\u7684\u8fd9\u6b3e\u56db\u63a5\u53e3\u5343\u5146\u7f51\u5361--\u4e45\u8d1f\u76db\u540d\u7684I340-T4\uff1a\n\u6b64\u5361\u901a\u5e38\u7528\u4e8e\u9700\u8981\u591a\u4e2a\u7f51\u7edc\u63a5\u53e3\u7684\u670d\u52a1\u5668\uff0c\u4f46\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4eba\u9996\u5148\u9700\u8981\u8fd9\u4e48\u591a\u7f51\u7edc\u63a5\u53e3\uff1f\n\u5728\u6211\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u53ea\u662f\u60f3\u63a2\u7d22\u672a\u77e5\u7684\u4e8b\u7269\uff0c\u770b\u770b\u5728\u6211\u7684PI\u4e0a\u53ef\u4ee5\u5f97\u5230\u591a\u5c11\u4e2a\u63a5\u53e3\uff0c\u6bcf\u4e2a\u63a5\u53e3\u90fd\u6709\u6700\u9ad8\u5343\u5146\u4f4d\u7684\u901f\u5ea6\u3002\n\u4f46\u6709\u4e9b\u4eba\u53ef\u80fd\u5e0c\u671b\u5c06PI\u7528\u4f5c\u8def\u7531\u5668\uff0c\u53ef\u80fd\u4f7f\u7528\u6d41\u884c\u7684OpenWRT\u6216pfSense\u8f6f\u4ef6\uff0c\u5e76\u4e14\u62e5\u6709\u591a\u4e2a\u5feb\u901f\u63a5\u53e3\u5bf9\u4e8e\u6784\u5efa\u81ea\u5b9a\u4e49\u8def\u7531\u5668\u81f3\u5173\u91cd\u8981\u3002\n\u5176\u4ed6\u4eba\u53ef\u80fd\u60f3\u8981\u591a\u4e2a\u63a5\u53e3\u7528\u4e8e\u7f51\u7edc\u9694\u79bb\u3001\u5197\u4f59\u6216\u5177\u6709\u591a\u4e2aIP\u5730\u5740\u7528\u4e8e\u6d41\u91cf\u8def\u7531\u548c\u8ba1\u91cf\u3002\n\u4e0d\u7ba1\u662f\u54ea\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u5361\u4e0d\u8d77\u4f5c\u7528\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u4e0d\u91cd\u8981\u4e86\uff01\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u628a\u5b83\u63d2\u4e0a\u7535\u6e90\u5427\u3002\n\u6211\u60f3\u628a\u5361\u63d2\u5230Compute Module 4 IO\u677f\u4e0a\uff0c\u4f46\u53d1\u73b0\u4e86\u7b2c\u4e00\u4e2a\u969c\u788d\uff1a\u5361\u6709\u4e00\u4e2a4x\u63d2\u5934\uff0c\u4f46IO\u677f\u53ea\u6709\u4e00\u4e2a1x\u63d2\u69fd\u3002\u4e0d\u8fc7\uff0c\u4f7f\u75281x\u523016x\u7684PCI Express\u9002\u914d\u5668\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u5730\u514b\u670d\u8fd9\u4e00\u95ee\u9898\u3002\n\u63d2\u5165\u540e\uff0c\u6211\u4f7f\u7528\u6700\u65b0\u7684PI OS\u7248\u672c\u542f\u52a8\u4e86Compute Module\uff0c\u5e76\u8fd0\u884c\u4e86lspci\uff1a\n$lspci00\uff1a00.0PCI\u7f51\u6865\uff1aBroadcom Limited Device 2711(20\u7248)01\uff1a00.0\u4ee5\u592a\u7f51\u63a7\u5236\u5668\uff1a\u82f1\u7279\u5c14\u516c\u53f882580\u5343\u5146\u7f51\u5361(01\u7248)01\uff1a00.1\u4ee5\u592a\u7f51\u63a7\u5236\u5668\uff1a\u82f1\u7279\u5c14\u516c\u53f882580\u5343\u5146\u7f51\u5361(01\u7248)01\uff1a00.2\u4ee5\u592a\u7f51\u63a7\u5236\u5668\uff1a\u82f1\u7279\u5c14\u516c\u53f882580\u5343\u5146\u7f51\u5361(01\u7248)01\uff1a00.3\u4ee5\u592a\u7f51\u63a7\u5236\u5668\uff1a\u82f1\u7279\u5c14\u516c\u53f882580\u5343\u5146\u7f51\u5361(01\u7248)\u3002\n\u4e3b\u677f\u88ab\u627e\u5230\u5e76\u5217\u51fa\uff0c\u4f46\u6211\u4eceGPU\u6d4b\u8bd5\u4e2d\u5b66\u5230\u4e86\u4e0d\u8981\u592a\u4e50\u89c2-\u81f3\u5c11\u73b0\u5728\u8fd8\u4e0d\u662f\u3002\n\u4e0b\u4e00\u6b65\u662f\u68c0\u67e5dmesg\u65e5\u5fd7\u5e76\u5411\u4e0a\u6eda\u52a8\u5230PCI Initialization\u90e8\u5206\uff0c\u5e76\u786e\u4fddbar\u5730\u5740\u6ce8\u518c\u90fd\u662f\u6b63\u786e\u7684\u2026\u2026\u3002\u5bf9\u6211\u6765\u8bf4\u5e78\u8fd0\u7684\u662f\u4ed6\u4eec\u662f\uff01\n[0.983329]PCI0000\uff1a00\uff1a00.0\uff1aBAR 8\uff1a\u5df2\u5206\u914d[\u5185\u5b580x600000000-0x6002fffff][0.983354]PCI0000\uff1a01\uff1a00.0\uff1aBAR 0\uff1a\u5df2\u5206\u914d[MEM 0x600000000-0x60007ffff][0.983379]PCI0000\uff1a01\uff1a00.0\uff1aBAR 6\uff1a\u5df2\u5206\u914d[MEM 0x600080000-0x6000fff\u9996\u9009\u9879][0.983396]PCI0000\uff1a01\uff1a00.1\uff1aBAR 0\uff1a\u5df2\u5206\u914d[MEM 0x600100000-0x60017ffff][0.983419]PCI0000\uff1a01\uff1a00.2\uff1aBAR 0\uff1a\u5df2\u5206\u914d[MEM 0x60018000-0x6001fff\u3002[0.983442]]PCI0000\uff1a01\uff1a00.3\uff1aBAR 0\uff1a\u5df2\u5206\u914d[\u5185\u5b580x600200000-0x60027ffff][0.983465]PCI0000\uff1a01\uff1a00.0\uff1aBAR 3\uff1a\u5df2\u5206\u914d[MEM 0x600280000-0x600283fff][0.983487]PCI0000\uff1a01\uff1a00.1\uff1aBAR 3\uff1a\u5df2\u5206\u914d[MEM 0x600284000-0x600287fff][0.983510]PCI0000\uff1a01\uff1a00.2\uff1aBAR 3\uff1a\u5df2\u5206\u914d[MEM 0x600288000-0x60028bfff][0.983533]PCI0000\uff1a01\uff1a00.3\uff1aBAR 3\uff1a\u5df2\u5206\u914d[MEM 0x60028000-0x600287ffff]\u3002\n\u8fd9\u5f20\u5361\u4f7f\u7528\u7684\u9152\u5427\u5730\u5740\u7a7a\u95f4\u51e0\u4e4e\u4e0d\u50cfGPU\u90a3\u4e48\u591a\uff0c\u6240\u4ee5\u5b83\u81f3\u5c11\u53ef\u4ee5\u5728PI OS\u4e0a\u5f00\u7bb1\u5373\u7528\u5730\u6b63\u786e\u521d\u59cb\u5316\u81ea\u5df1\u3002\n\u6240\u4ee5\u73b0\u5728\u6211\u77e5\u9053\u5361\u5df2\u7ecf\u5728\u516c\u4ea4\u8f66\u4e0a\u88ab\u8bc6\u522b\u548c\u521d\u59cb\u5316\u4e86.\u3002\u771f\u7684\u6709\u90a3\u4e48\u7b80\u5355\u5417\uff1f\u5b83\u5df2\u7ecf\u8d77\u4f5c\u7528\u4e86\u5417\uff1f\n\u6211\u8fd0\u884c\u4e86\u547d\u4ee4ip link show\uff0c\u5b83\u5217\u51fa\u4e86Linux\u770b\u5230\u7684\u6240\u6709\u7f51\u7edc\u63a5\u53e3\uff0c\u4f46\u6211\u53ea\u770b\u5230\u4e86\u5185\u7f6e\u63a5\u53e3\uff1a\n\u627e\u4e0d\u5230\u7f51\u5361\u7684\u5176\u4ed6\u56db\u4e2a\u63a5\u53e3\u3002\u6211\u63d2\u4e0a\u7f51\u7ebf\u53ea\u662f\u60f3\u770b\u770b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0cACT LED\u4eae\u8d77\u4e86\u7eff\u8272\uff0c\u4f46LNK LED\u6ca1\u6709\u4eae\u8d77\u6765\u3002\n\u7531\u4e8e\u6211\u6ca1\u6709\u5728dmesg\u65e5\u5fd7\u4e2d\u770b\u5230\u4efb\u4f55\u5176\u4ed6\u9519\u8bef\uff0c\u8fd9\u8ba9\u6211\u76f8\u4fe1\u9ed8\u8ba4\u60c5\u51b5\u4e0bPI OS\u4e0a\u6ca1\u6709\u5b89\u88c5\u8be5\u5361\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u6211\u83b7\u5f97\u9a71\u52a8\u7a0b\u5e8f\u7684\u7b2c\u4e00\u6b21\u5c1d\u8bd5\u662f\u514b\u9686Raspberry Pi Linux\u6e90\u4ee3\u7801\uff0c\u5e76\u68c0\u67e5make menuconfig\u5728Linux\u6e90\u4ee3\u7801\u6811\u4e2d\u641c\u7d22\u4efb\u4f55\u82f1\u7279\u5c14\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\u3002\u4e0d\u8fc7\uff0c\u6211\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6240\u4ee5\u6211\u8f6c\u5411\u4e0b\u4e00\u4e2a\u60f3\u6cd5\uff0c\u5728\u82f1\u7279\u5c14\u7684\u7f51\u7ad9\u4e0a\u641c\u7d22\u4e00\u4e9b\u9a71\u52a8\u7a0b\u5e8f\u3002\n\u6211\u8fdb\u5165\u7684\u7b2c\u4e00\u4e2a\u9875\u9762\u662fIntel Ethernet Adapter Complete Driver Pack\uff0c\u5b83\u770b\u8d77\u6765\u5f88\u6709\u524d\u9014\u3002\u4f46\u6211\u6ce8\u610f\u5230\u5b83\u8d85\u8fc7600MB\uff0c\u88ab\u5217\u4e3a\u72ec\u7acb\u4e8e\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5728\u6211\u67e5\u770b\u9a71\u52a8\u7a0b\u5e8f\u5305\u4e2d\u7684\u5185\u5bb9\u540e\uff0c\u591a\u5e74\u6765\u4f3c\u4e4e\u6709\u4e00\u534a\u7684\u82f1\u7279\u5c14\u82af\u7247\u90fd\u5f97\u5230\u4e86\u652f\u6301\u3002\n\u6211\u53ea\u60f3\u8ba9I340\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u6211\u771f\u7684\u4e0d\u5728\u4e4e\u6240\u6709\u7684Windows\u9a71\u52a8\u7a0b\u5e8f\u548c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u4e00\u76f4\u5728\u5bfb\u627e\u3002\n\u6700\u540e\uff0c\u6211\u767b\u9646\u4e86Intel Gigabit Ethernet Network Connections\u7684Linux\u57fa\u7840\u9a71\u52a8\u7a0b\u5e8f\u9875\u9762\uff0c\u8fd9\u4e2a\u9875\u9762\u770b\u8d77\u6765\u66f4\u9488\u5bf9Linux\u548c\u8f83\u5c0f\u7684\u8bbe\u5907\u96c6\u3002\n\u56e0\u6b64\uff0c\u6211\u4e0b\u8f7d\u4e86igb\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4f7f\u7528tar xzf\u89e3\u538b\u5b58\u6863\u6587\u4ef6\uff0c\u7136\u540e\u8fdb\u5165\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u6309\u7167\u82f1\u7279\u5c14\u7684\u8bf4\u660e\u8fd0\u884cmake install\u3002\n\u5b89\u88c5\u8fc7\u7a0b\u8bf4\u627e\u4e0d\u5230\u5185\u6838\u5934\u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u7528sudo apt install raspbercrypi-kernel-headers\u5b89\u88c5\u4e86\u5b83\u4eec\uff0c\u7136\u540e\u518d\u6b21\u8fd0\u884cmake install\u3002\n\u8fd9\u4e00\u6b21\uff0c\u5b83\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u8fdb\u884c\u6784\u5efa\uff0c\u4f46\u662f\u6700\u7ec8\u6784\u5efa\u51fa\u9519\u4e86\uff0c\u6211\u770b\u5230\u4e86\u4e00\u4e2a\u5173\u4e8e\u51fd\u6570\u9690\u5f0f\u58f0\u660e\u7684\u9519\u8bef&#39\uff1bisdigit&39\uff1b\u3002\u6211\u5c06\u9519\u8bef\u6d88\u606f\u590d\u5236\u5e76\u7c98\u8d34\u5230Search\u4e2d\uff0c\u5e78\u8fd0\u964d\u4e34\u5728\u6211\u8eab\u4e0a\uff0c\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u7ed3\u679c\u63d0\u5230\u95ee\u9898\u662f\u7f3a\u5c11ctype.h\u5934\u6587\u4ef6\u7684include\u3002\n\u6709\u4e86\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6211\u7f16\u8f91\u4e86igb_main.c\u6587\u4ef6\uff0c\u5c06\u4ee5\u4e0b\u884c\u6dfb\u52a0\u5230\u5176\u4ed6\u6587\u4ef6\u4e2d\uff0c\u5305\u62ec\uff1a\n\u8fd9\u4e00\u6b21\uff0c\u5f53\u6211\u8fd0\u884cmake install\u65f6\uff0c\u5b83\u4f3c\u4e4e\u6210\u529f\u4e86\uff0c\u4f46\u662f\u5728\u6700\u540e\uff0c\u5f53\u5b83\u5c1d\u8bd5\u5c06\u4e1c\u897f\u590d\u5236\u5230\u9002\u5f53\u7684\u4f4d\u7f6e\u65f6\uff0c\u6211\u5f97\u5230\u4e86\u4e00\u4e2a\u6743\u9650\u9519\u8bef\uff0c\u6240\u4ee5\u6211\u7528sudo\u518d\u6b21\u5c1d\u8bd5\uff0c\u5b83\u7f16\u8bd1\u6210\u529f\u4e86\uff01\n\u6211\u672c\u6765\u53ef\u4ee5\u4f7f\u7528modProbe\u5c1d\u8bd5\u7acb\u5373\u52a0\u8f7d\u65b0\u7684\u5185\u6838\u6a21\u5757\uff0c\u4f46\u6211\u9009\u62e9\u4e86\u91cd\u65b0\u542f\u52a8PI\u5e76\u7948\u7977\uff0c\u5728\u91cd\u65b0\u542f\u52a8\u4e4b\u540e\uff0c\u5f53\u6211\u8fd0\u884cip link show\u65f6\uff0c\u6211\u60ca\u8bb6\u5730\u770b\u5230\u6240\u6709\u56db\u4e2a\u63a5\u53e3\u90fd\u51fa\u73b0\u4e86\uff0c\u8fd9\u8ba9\u6211\u975e\u5e38\u9ad8\u5174\uff1a\n$IP link show1\uff1aLO\uff1a&lt\uff1bLoopback\uff0cUp\uff0cLow_Up&gt\uff1bmtu 65536 qdisk\u65e0\u961f\u5217\u72b6\u6001\u672a\u77e5\u6a21\u5f0f\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4qlen 1000 link/loopback 00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a00\uff1a002\uff1aeth0\uff1a&lt\uff1b\u5e7f\u64ad\uff0c\u591a\u64ad\uff0cup\uff0clow_up&gt\uff1bmtu 1500 qdisk MQ\u72b6\u6001\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4\u7ec4default qlen 1000 link/ether b8\uff1a27\uff1aEB\uff1a5c\uff1a89\uff1a43 brd\uff1aff3\uff1aeth1\uff1a&lt\uff1b\u65e0\u8f7d\u6ce2\uff0c\u5e7f\u64ad\uff0c\u7ec4\u64ad\uff0c\u4e0a\u884c&&gt;MTU 1500 qdisk mq\u72b6\u6001\u4e0b\u884c\u6a21\u5f0f\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4qlen 1000 link/ether 90\uff1aE2\uff1aBA\uff1a33\uff1a72\uff1a64 brd ff\uff1aff4\uff1aeth2\uff1a&lt\uff1b\u65e0\u8f7d\u6ce2\uff0c\u5e7f\u64ad\uff0c\u7ec4\u64ad\uff0cup&gt\uff1bMTU 1500 qdisk mq\u72b6\u6001\u4e0b\u884c\u6a21\u5f0f\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4qlen 1000 link/ether 90\uff1aE2\uff1aba\uff1a33\uff1a72\uff1a65 brd ff\uff1af5\uff1aeth3\uff1a&lt\uff1b\u65e0\u8f7d\u6ce2\uff0c\u5e7f\u64ad\uff0c\u7ec4\u64ad\uff0c\u4e0a\u884c&gt\uff1bMTU 1500 qdisk mq\u72b6\u6001\u5173\u95ed\u6a21\u5f0f\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4qlen 1000\u94fe\u8def/\u4ee5\u592a90\uff1aE2\uff1aba\uff1a33\uff1a72\uff1a66 brd ff\uff1aff6\uff1aeth4\uff1a&lt\uff1b\u65e0\u8f7d\u6ce2\uff0c\u5e7f\u64ad\uff0c\u591a\u64ad\uff0c\u5411\u4e0a&gt\uff1bMTU 1500 qdisk mq\u72b6\u6001\u5173\u95ed\u6a21\u5f0f\u9ed8\u8ba4\u7ec4\u9ed8\u8ba4qlen 1000\u94fe\u8def/\u4ee5\u592a90\uff1aE2\uff1aba\uff1a33\uff1a72\uff1a67 brd ff\uff1aff7\uff1awlan0\uff1a&lt\uff1b\u5e7f\u64ad\uff0c\u591a\u64ad&gt\uff1bMTU 1500 qdisk noop\u72b6\u6001\u5173\u95ed\u6a21\u5f0f\u4f11\u7720\u7ec4\u9ed8\u8ba4qlen 1000\u94fe\u8def/\u4ee5\u592a\u7f51b8\uff1a27\uff1aeb\uff1a74\uff1af2\uff1a6c brd ff\uff1aff\u3002\n\u56e0\u6b64\uff0c\u4e0b\u4e00\u6b65\u662f\u770b\u770bPI\u662f\u5426\u53ef\u4ee5\u540c\u65f6\u5168\u901f\u652f\u6301\u6240\u67095\u4e2a\u5343\u5146\u4ee5\u592a\u7f51\u63a5\u53e3\u3002\n\u6211\u5df2\u7ecf\u5bf9\u5185\u7f6e\u7684\u4ee5\u592a\u7f51\u63a7\u5236\u5668\u8fdb\u884c\u4e86940 Mbps\u5de6\u53f3\u7684\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6211\u9884\u8ba1\u8fd9\u56db\u4e2a\u65b0\u63a5\u53e3\u5355\u72ec\u4f7f\u7528\u65f6\u81f3\u5c11\u4f1a\u6709\u8fd9\u4e48\u9ad8\u7684\u901f\u5ea6\u3002\u4f46\u771f\u6b63\u7684\u95ee\u9898\u662f\uff0c\u6211\u53ef\u4ee5\u540c\u65f6\u4ece\u6240\u6709\u4e94\u4e2a\u63a5\u53e3\u83b7\u5f97\u591a\u5c11\u5e26\u5bbd\u3002\n\u4f46\u6211\u9047\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u7684\u5bb6\u5ead\u7f51\u7edc\u53ea\u67091Gbps\u3002\u5373\u4f7f\u6211\u8bbe\u7f6e\u4e865\u53f0\u8ba1\u7b97\u673a\uff0c\u4f7f\u7528iperf\u7f51\u7edc\u57fa\u51c6\u6d4b\u8bd5\u5de5\u5177\u5c3d\u53ef\u80fd\u5feb\u5730\u5c06\u6570\u636e\u4f20\u8f93\u5230PI\uff0c\u7f51\u7edc\u4e5f\u6700\u591a\u53ea\u80fd\u901a\u8fc71 Gb\u3002\n\u6240\u4ee5\u6211\u5f97\u6709\u70b9\u521b\u610f\u3002\u6211\u6709\u6211\u7684\u5bb6\u5ead\u7f51\u7edc\u548c\u6211\u7684MacBook Pro\uff0c\u6211\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u5176\u4e2d\u4e00\u4e2a\u63a5\u53e3\uff0c\u4f46\u6211\u9700\u8981\u53e6\u5916\u56db\u53f0\u5b8c\u5168\u72ec\u7acb\u7684\u8ba1\u7b97\u673a\uff0c\u624d\u80fd\u7528\u5b83\u4eec\u81ea\u5df1\u7684\u5168\u5343\u5146\u63a5\u53e3\u4e0eCompute Module\u4ea4\u8c08\u3002\n\u6240\u4ee5\u6211\u5fc3\u60f3\uff0c\u6211\u9700\u8981\u56db\u53f0\u8ba1\u7b97\u673a\uff0c\u5b83\u4eec\u90fd\u9700\u8981\u5343\u5146\u7f51\u7edc\u63a5\u53e3\u2026\u2026\u3002\u6211\u5728\u54ea\u91cc\u53ef\u4ee5\u627e\u5230\u56db\u53f0\u7535\u8111\u6765\u505a\u8fd9\u4ef6\u4e8b\uff1f\u6211\u8bb0\u5f97\uff0c\u554a\u54c8\uff0cRaspberry Pi Dramble\uff01\u5b83\u6709\u56db\u4e2aPI 4\uff0c\u5982\u679c\u6211\u628a\u6bcf\u4e00\u4e2a\u90fd\u8fde\u63a5\u5230Intel\u5361\u4e0a\u7684\u4e00\u4e2a\u7aef\u53e3\u4e0a\uff0c\u6211\u5c31\u4f1a\u6709\u4e94\u4e2a\u5b8c\u6574\u7684\u5343\u5146\u8fde\u63a5\uff0c\u6211\u5c31\u53ef\u4ee5\u8fdb\u884c\u6d4b\u8bd5\u4e86\u3002(\u6ce8\uff1a\u9ed1\u8393PI Dramble\uff01#34\uff1bRaspberry Pi Dramble\uff01&#34\uff1bRaspberry Pi Dramble\uff01)\u3002\n\u56e0\u6b64\uff0c\u6211\u6293\u8d77\u96c6\u7fa4\uff0c\u6536\u96c6\u4e86\u4e00\u5806USB-C\u5145\u7535\u7535\u7f06(\u6211\u901a\u5e38\u901a\u8fc71 Gbps\u7684PoE\u5f00\u5173\u4f9b\u7535\uff0c\u4f46\u5728\u8fd9\u91cc\u6211\u4e0d\u80fd\u4f7f\u7528)\u3002\u6211\u5c06\u6bcf\u4e2aPI\u63d2\u5165\u82f1\u7279\u5c14\u7f51\u5361\u7684\u4e00\u4e2a\u7aef\u53e3\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u7684\u529e\u516c\u684c\u53d8\u5f97\u6709\u70b9\u51cc\u4e71\uff1a\n\u4e3a\u4e86\u8ba9\u6211\u53ef\u4ee5\u8fdc\u7a0b\u63a7\u5236PI\u5e76\u914d\u7f6e\u4ed6\u4eec\u7684\u7f51\u7edc\uff0c\u6211\u5bf9\u4ed6\u4eec\u8fdb\u884c\u4e86\u8bbe\u7f6e\uff0c\u4f7f\u4ed6\u4eec\u7684\u65e0\u7ebf\u63a5\u53e3\u8fde\u63a5\u5230\u6211\u5bb6\u7684WiFi\u7f51\u7edc\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u4ece\u6211\u7684Mac\u8fde\u63a5\u5230\u4ed6\u4eec\u5e76\u63a7\u5236\u4ed6\u4eec\u3002\n\u6b64\u65f6\uff0c\u6211\u53ef\u4ee5\u770b\u5230\u6709\u7ebf\u94fe\u8def\u5904\u4e8e\u8fde\u63a5\u72b6\u6001\uff0c\u4f46\u5b83\u4eec\u4f7f\u7528\u7684\u662f\u81ea\u5206\u914d\u7684IP\u5730\u5740\uff0c\u56e0\u6b64\u6211\u65e0\u6cd5\u5728Dramble PI\u548cCompute Module\u4e4b\u95f4\u4f20\u8f93\u4efb\u4f55\u6570\u636e\u3002\n\u56e0\u6b64\uff0c\u6211\u5fc5\u987b\u4e3a\u6240\u6709PI\u548c\u63a5\u53e3\u8bbe\u7f6e\u9759\u6001IP\u5730\u5740\u3002\u56e0\u4e3a\u8054\u7f51\u6709\u4e00\u534a\u662f\u5deb\u672f\uff0c\u6240\u4ee5\u6211\u4e0d\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8ba95\u4e2a\u4e0d\u540c\u7684\u7f51\u6bb5\u5728CM4\u4e0a\u8fd0\u884c\u7684\u8bd5\u9a8c\u7ec6\u8282\uff0c\u4f46\u5982\u679c\u4f60\u60f3\u8981\u6240\u6709\u7684\u8840\u6dcb\u6dcb\u7684\u7ec6\u8282\uff0c\u53ef\u4ee5\u770b\u770b\u8fd9\u671fGitHub\u7684\u95ee\u9898\uff1a\u6d4b\u8bd54\u63a5\u53e3\u82f1\u7279\u5c14\u7f51\u5361I340-T4\u3002\n\u6211\u5728\u6bcf\u4e2aPI\u7684/etc/dhcpcd.conf\u4e2d\u5206\u914d\u4e86\u9759\u6001IP\u5730\u5740\uff0c\u4ee5\u4fbf\u5b83\u4eec\u90fd\u53ef\u4ee5\u72ec\u7acb\u901a\u4fe1\u3002\n\u7136\u540e\uff0c\u6211\u5728\u6240\u6709PI\u4e0a\u5b89\u88c5\u4e86iperf\u6765\u6d4b\u91cf\u5e26\u5bbd\u3002\u6211\u5728Compute Module\u4e0a\u8fd0\u884c\u4e865\u4e2aiperf--server\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u7ed1\u5b9a\u5230\u4e0d\u540c\u7684IP\uff0c\u5e76\u4e14\u6211\u540c\u65f6\u5728\u6bcf\u4e2aPI\u548c\u6211\u7684Mac\u4e0a\u8fd0\u884ciperf\uff0c\u6bcf\u4e2a\u63a5\u53e3\u90fd\u8fde\u63a5\u4e00\u4e2a\u5b9e\u4f8b\u3002\n\u603b\u5171\u67095\u4e2a\u72ec\u7acb\u7684\u5343\u5146\u7f51\u7edc\u63a5\u53e3\uff0c\u6211\u83b7\u5f97\u4e863.06Gbps\u7684\u541e\u5410\u91cf\u3002\u6211\u5355\u72ec\u6d4b\u8bd5\u4e86\u6bcf\u4e2a\u63a5\u53e3\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u7684\u901f\u5ea6\u90fd\u5728940 Mbps\u5de6\u53f3\uff0c\u800c\u4e14\u5f53\u5b83\u4eec\u81ea\u5df1\u6d4b\u8bd5\u65f6\u90fd\u662f\u8fd9\u6837\u505a\u7684\u2026\u2026\u3002\u56e0\u6b64\uff0c\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c5Gbps\u662f\u53ef\u80fd\u7684\u3002\n\u6211\u8fd8\u4e00\u8d77\u6d4b\u8bd5\u4e86\u4e09\u4e2a\u63a5\u53e3\uff0c\u8fd9\u4e09\u4e2a\u63a5\u53e3\u90fd\u80fd\u7528\u5927\u7ea63Gbps\u7684\u541e\u5410\u91cf\u4f7fPCIe\u603b\u7ebf\u9971\u548c\u3002\n\u4e0d\u8fc7\uff0c\u6211\u8fd8\u8bd5\u7740\u6d4b\u8bd5\u4e86\u4e09\u4e2a\u63a5\u53e3\u548cPI\u7684\u5185\u7f6e\u4ee5\u592a\u7f51\u2026\u2026\u3002\u5e76\u4e14\u6ce8\u610f\u5230\u6211\u4ecd\u7136\u53ea\u6709\u5927\u7ea63Gbps\uff01\u6211\u5c1d\u8bd5\u4e86\u4e0d\u540c\u7684\u7ec4\u5408\uff0c\u6bd4\u5982\u4e09\u4e2a\u82f1\u7279\u5c14\u63a5\u53e3\u548c\u677f\u8f7d\u63a5\u53e3\uff0c\u4e24\u4e2a\u82f1\u7279\u5c14\u63a5\u53e3\u548c\u677f\u8f7d\u63a5\u53e3\uff0c\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u541e\u5410\u91cf\u90fd\u57283Gbps\u5de6\u53f3\u3002\n\u6211\u771f\u7684\u5e0c\u671b\u80fd\u591f\u7a81\u7834\u52304Gbps\uff0c\u4f46\u4f3c\u4e4e\u6211\u5728PI\u7684\u7f51\u7edc\u5806\u6808\u4e2d\u9047\u5230\u4e86\u4e00\u4e9b\u5176\u4ed6\u9650\u5236\u3002\u4e5f\u8bb8\u6211\u9057\u6f0f\u4e86\u4ec0\u4e48\u80cc\u666f\uff1f\u8bf7\u5728\u8bc4\u8bba\u4e2d\u8ba9\u6211\u77e5\u9053\uff01\n\u65e0\u8bba\u5982\u4f55\uff0c\u57fa\u51c6\u6d4b\u8bd5\u662f\u5f88\u68d2\u7684\uff0c\u4f46\u6bd4\u77e5\u9053\u60a8\u53ef\u4ee5\u5728PI\u4e0a\u83b7\u5f97\u591a\u4e2a\u5343\u5146\u63a5\u53e3\u66f4\u597d\u7684\u662f\uff0c\u60a8\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528PI\u6765\u6267\u884c\u4e00\u4e9b\u667a\u80fd\u8054\u7f51\u64cd\u4f5c\uff0c\u5982\u5145\u5f53\u8def\u7531\u5668\u6216\u9632\u706b\u5899\uff01\n\u6211\u60f3\u5c1d\u8bd5\u7684\u4e0b\u4e00\u4ef6\u4e8b\u662f\u5b89\u88c5OpenWRT\u6216pfSense\uff0c\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684\u9632\u706b\u5899\u2026\u2026\u3002\u4f46\u662f\u73b0\u5728\u6211\u9700\u8981\u5728\u8fd9\u4e2a\u9879\u76ee\u4e0a\u653e\u4e00\u4e2a\u5927\u5934\u9488\uff0c\u4e3a\u6211\u6b63\u5728\u505a\u7684\u5176\u4ed6\u51e0\u4e2a\u9879\u76ee\u548c\u6211\u6b63\u5728\u6d4b\u8bd5\u7684\u5361\u8282\u7701\u4e00\u4e9b\u65f6\u95f4-\u6bd4\u5982\u4e00\u4e2a10 GbE\u7f51\u5361\uff01\n\u8bf4\u5230\u8fd9\u91cc\uff0c\u6240\u6709\u82f1\u7279\u5c14I340-T4\u4ee5\u53ca\u6240\u6709\u5176\u4ed6PCIe\u5361\u6d4b\u8bd5\u7684\u8be6\u7ec6\u4fe1\u606f\u90fd\u53ef\u4ee5\u901a\u8fc7\u6211\u7684Raspberry PI PCI Express\u5361\u6570\u636e\u5e93\u83b7\u5f97\u3002\n\u6211\u4f1a\u5c3d\u5feb\u53d1\u5e03\u66f4\u591a\u6765\u81ea\u5176\u4ed6\u5361\u7247\u7684\u7ed3\u679c\uff0c\u53ea\u8981\u6211\u80fd\u8ba9\u4ed6\u4eec\u63a5\u53d7\u6d4b\u8bd5\uff01", "note_en": "tl;dr: I successfully got the  Intel I340-T4 4x Gigabit NIC working on the Raspberry Pi Compute Module 4, and combining all the interfaces (including the internal Pi interface), I could get up to 3.06 Gbps maximum sustained throughput.\n After my failure to light up a monitor with my  first attempt at getting a GPU working with the Pi, I figured I&#39;d try something a little more down-to-earth this time.\n And to that end, I present to you this four-interface gigabit network card from Intel, the venerable  I340-T4:\n  This card is typically used in servers that need multiple network interfaces, but why would someone need so many network interfaces in the first place?\n In my case, I just wanted to explore the unknown, and see how many interfaces I could get working on my Pi, with full gigabit speed on each one.\n But some people might want to use the Pi as a router, maybe using the popular  OpenWRT or  pfSense software, and having multiple fast interfaces is essential to building a custom router.\n Other people might want multiple interfaces for network segregation, for redundancy, or to have multiple IP addresses for traffic routing and metering.\n Whatever the case, none of that is important if the card doesn&#39;t even work! So let&#39;s plug it in.\n   I went to plug the card into the Compute Module 4 IO Board, but found the first obstacle: the card has a 4x plug, but the IO board only has a 1x slot. That can be overcome pretty easily with a  1x to 16x PCI Express adapter, though.\n  Once I had it plugged in, I booted up the Compute Module with the latest Pi OS build, and ran  lspci:\n $ lspci00:00.0 PCI bridge: Broadcom Limited Device 2711 (rev 20)01:00.0 Ethernet controller: Intel Corporation 82580 Gigabit Network Connection (rev 01)01:00.1 Ethernet controller: Intel Corporation 82580 Gigabit Network Connection (rev 01)01:00.2 Ethernet controller: Intel Corporation 82580 Gigabit Network Connection (rev 01)01:00.3 Ethernet controller: Intel Corporation 82580 Gigabit Network Connection (rev 01)\n The board was found and listed, but I learned from my GPU testing not to be too optimistic\u2014at least not yet.\n The next step was to check in the  dmesg logs and scroll up to the PCI initialization section, and make sure the BAR address registrations were all good... and lucky for me they were!\n [ 0.983329] pci 0000:00:00.0: BAR 8: assigned [mem 0x600000000-0x6002fffff][ 0.983354] pci 0000:01:00.0: BAR 0: assigned [mem 0x600000000-0x60007ffff][ 0.983379] pci 0000:01:00.0: BAR 6: assigned [mem 0x600080000-0x6000fffff pref][ 0.983396] pci 0000:01:00.1: BAR 0: assigned [mem 0x600100000-0x60017ffff][ 0.983419] pci 0000:01:00.2: BAR 0: assigned [mem 0x600180000-0x6001fffff][ 0.983442] pci 0000:01:00.3: BAR 0: assigned [mem 0x600200000-0x60027ffff][ 0.983465] pci 0000:01:00.0: BAR 3: assigned [mem 0x600280000-0x600283fff][ 0.983487] pci 0000:01:00.1: BAR 3: assigned [mem 0x600284000-0x600287fff][ 0.983510] pci 0000:01:00.2: BAR 3: assigned [mem 0x600288000-0x60028bfff][ 0.983533] pci 0000:01:00.3: BAR 3: assigned [mem 0x60028c000-0x60028ffff]\n This card doesn&#39;t use nearly as much BAR address space as a GPU, so it at least initializes itself correctly, right out of the box, on Pi OS.\n So now that I know the card is recognized and initialized on the bus... could it really be that easy? Is it already working?\n I ran the command  ip link show, which lists all the network interfaces seen by Linux, but I only saw the built-in interfaces:\n  The other four interfaces from the NIC were nowhere to be found. I plugged in a network cable just to see what would happen, and the ACT LED lit up green, but the LNK LED didn&#39;t come on.\n  And since I didn&#39;t see any other errors in the  dmesg logs, it led me to believe that the driver for this card was not installed on Pi OS by default.\n  My first attempt to get a driver was to clone the  Raspberry Pi Linux source, and check with  make menuconfig to search for any Intel networking drivers in the Linux source tree. I didn&#39;t find any, though, so I turned to the next idea, searching on Intel&#39;s website for some drivers.\n The first page I came to was the  Intel Ethernet Adapter Complete Driver Pack, which looked promising. But I noticed it was over 600 MB, was listed as &#39;OS Independent&#39;, and after I looked at what was in the driver pack, it looked like half of Intel&#39;s chips over the years were supported.\n I just wanted to get the I340 working, and I really didn&#39;t care about all the Windows drivers and executables, so I kept searching.\n Eventually I landed on the  Linux Base Driver for Intel Gigabit Ethernet Network Connections page, and  this page looked a lot more targeted towards Linux and a smaller set of devices.\n So I downloaded the &#39;igb&#39; driver, expanded the archive with  tar xzf, then I went into the source directory and ran  make install following Intel&#39;s instructions.\n The install process said it couldn&#39;t find kernel headers, so I installed them with  sudo apt install raspberrypi-kernel-headers, then I ran  make install again.\n This time, it spent some time doing the build, but eventually the build errored out, and I saw an error about an  implicit declaration of function &#39;isdigit&#39;. I copied and pasted the error message into search, and luck was with me, because the  first result mentioned that the problem was a missing include of the  ctype.h header file.\n Armed with this knowledge, I edited the  igb_main.c file, adding the following line to the other includes:\n  This time, when I ran  make install, it seemed to succeed, but then at the end, when it tried copying things into place, I got a permissions error, so I  tried again with sudo and it compiled successfully!\n I could&#39;ve used  modprobe to attempt loading the new kernel module immediately, but I chose to reboot the Pi and cross my fingers, and after a reboot, I was surprised and very happy to see all four interfaces showing up when I ran  ip link show:\n $ ip link show1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:002: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000 link/ether b8:27:eb:5c:89:43 brd ff:ff:ff:ff:ff:ff3: eth1: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000 link/ether 90:e2:ba:33:72:64 brd ff:ff:ff:ff:ff:ff4: eth2: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000 link/ether 90:e2:ba:33:72:65 brd ff:ff:ff:ff:ff:ff5: eth3: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000 link/ether 90:e2:ba:33:72:66 brd ff:ff:ff:ff:ff:ff6: eth4: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc mq state DOWN mode DEFAULT group default qlen 1000 link/ether 90:e2:ba:33:72:67 brd ff:ff:ff:ff:ff:ff7: wlan0: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN mode DORMANT group default qlen 1000 link/ether b8:27:eb:74:f2:6c brd ff:ff:ff:ff:ff:ff\n  So the next step is to see if the Pi can support all five gigabit ethernet interfaces at full speed at the same time.\n I&#39;ve already tested the built-in ethernet controller at around 940 Mbps, so I expect at least that much out of the four new interfaces individually. But the  real question is how much bandwidth can I get out of  all five interfaces at once.\n But I ran into a problem: my home network is only a 1 Gbps network. And even if I set up five computers to pump data to the Pi as fast as possible using the  iperf network benchmarking tool, the network will only put through a maximum of 1 gigabit.\n So I had to get a little creative. I have my home network and my MacBook Pro that I can use for one of the interfaces, but I needed to have four more  completely separate computers to talk to the Compute Module with their own full gigabit interfaces.\n So I thought to myself, &#34;I need four computers, and they all need gigabit network interfaces... where could I find four computers to do this?&#34; And I remembered, &#34;Aha, the  Raspberry Pi Dramble!&#34; It has four Pi 4s, and if I connect each one to one of the ports on the Intel card, I&#39;d have my five full gigabit connections, and I could do the test.\n So I grabbed the cluster and scrounged together a bunch of USB-C charging cables (I normally power the thing via a 1 Gbps PoE switch which I couldn&#39;t use here). I plugged each Pi into one port on the Intel NIC. My desk was getting to be a bit cluttered at this point:\n  To make it so I could remotely control the Pis and configure their networking, I set them up so their wireless interface connected to my home WiFi network, so I could connect to them and control them from my Mac.\n At this point, I could see the wired links were up, but they used self-assigned IP addresses, so I couldn&#39;t transfer any data between the Dramble Pis and the Compute Module.\n So I had to set up static IP addresses for all the Pis and the interfaces. Since networking is half voodoo magic, I won&#39;t get into the details of my trials getting 5 different network segments working on the CM4, but if you want all the gory details, check out this GitHub issue:  Test 4-interface Intel NIC I340-T4.\n I assigned static IP addresses in  /etc/dhcpcd.conf on each Pi so they could all communicate independently.\n Then, I installed  iperf on all the Pis to measure the bandwidth. I ran five instances of  iperf --server on the Compute Module, each one bound to a different IP, and I ran  iperf on each of the Pis and my Mac simultaneously, one instance connecting to each interface.\n  In total, with five independent Gigabit network interfaces, I got  3.06 Gbps of throughput. And I individually tested each interface to make sure they got around 940 Mbps, and they all did when tested on their own... So  theoretically, 5 Gbps was possible.\n I also tested three interfaces together, and all three were able to saturate the PCIe bus with about 3 Gbps of throughput.\n But then I tried also testing three interfaces and the Pi&#39;s built-in Ethernet... and noticed that I still only got about 3 Gbps! I tried different combinations, like three Intel interfaces and the onboard interface, two Intel interfaces and the onboard interface, and in every case, the maximum throughput was right around 3 Gbps.\n I was really hoping to be able to break through to 4 Gbps but it seems like there may be some other limits I&#39;m hitting in the Pi&#39;s networking stack. Maybe there&#39;s some setting I&#39;m missing? Let me know in the comments!\n Anyways, benchmarks are great, but even better than knowing you can get multiple Gigabit interfaces on a Pi is realizing you can now use the Pi to do some intelligent networking operations, like behaving as a router or a firewall!\n   The next thing I&#39;d like to try is installing  OpenWRT or  pfSense, and setting up a fully custom firewall... but right now I need to put a pin in this project to save some time for a few other projects I&#39;m working on and cards I&#39;m testing\u2014like a 10 GbE NIC!\n Speaking of which, all the testing details for the Intel I340-T4, and all the other PCIe cards I&#39;m testing, are available through my  Raspberry Pi PCI Express Card database.\n I&#39;ll be posting more results from other cards as soon as I can get them tested!", "posttime": "2020-10-31 03:06:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "5g,raspberry-pi,pi,ethernet", "title": "Raspberry PI\u8ba1\u7b97\u6a21\u57574\u4e0a\u76845Gbps\u4ee5\u592a\u7f51", "title_en": "5Gbps Ethernet on the Raspberry Pi Compute Module 4", "transed": 1, "url": "https://www.jeffgeerling.com/blog/2020/5-gbps-ethernet-on-raspberry-pi-compute-module-4", "via": "", "real_tags": ["5g", "pi", "ethernet"]}, {"category": "", "categoryclass": "", "imagename": "ff78cd858b996b6228feb1aaa5d9528b.jpg", "infoid": 1032352, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u4e70\u4e86\u4e00\u8f86\u65b0\u7684Moto Razr 5G\uff0c\u5f53\u4f60\u4e70\u5230\u5b83\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u80fd\u770b\u8d77\u6765\u5e76\u4e0d\u90a3\u4e48\u65b0\u3002\u4e9a\u9a6c\u900a\u4ea7\u54c1\u63cf\u8ff0\u7684\u5e95\u90e8\u6709\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u6ce8\u91ca(\u6700\u5148\u88abThe Verge\u53d1\u73b0)\uff0c\u4e0a\u9762\u5199\u7740\u4f60\u7684Moto Razr\u5c06\u5728\u5230\u8fbe\u4f60\u624b\u4e2d\u4e4b\u524d\u88ab\u6253\u5f00\uff0c\u5b83\u5c06\u88ab\u6298\u53e0\uff0c\u54e6\uff0c\u5982\u679c\u6709\u6307\u7eb9\uff0c\u6211\u4eec\u6df1\u8868\u6b49\u610f\uff1a\n\u6ce8\uff1aRAZR\u6700\u521d\u662f\u4ee5\u5c55\u5f00\u4f4d\u7f6e\u88c5\u8fd0\u7684\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u66f4\u597d\u5730\u4fdd\u62a4\u663e\u793a\u5c4f\uff0c\u6211\u4eec\u5df2\u7ecf\u6298\u53e0\u4e86\u60a8\u7684RAZR-\u5b83\u66f4\u5b89\u5168\uff0c\u4f46\u770b\u8d77\u6765\u53ef\u80fd\u4e0d\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u4f18\u96c5\u3002\u5982\u679c\u60a8\u5728\u8bbe\u5907\u4e0a\u770b\u5230\u6307\u7eb9\uff0c\u6211\u4eec\u6df1\u8868\u6b49\u610f\u3002\u6211\u4eec\u5411\u60a8\u4fdd\u8bc1\u60a8\u7684RAZR\u662f\u5168\u65b0\u7684\u3002\n\u6469\u6258\u7f57\u62c9\u5bf9Moto Razr\u7684\u6298\u53e0\u5f0f\u91cd\u65b0\u542f\u52a8\u5728\u73b0\u5b9e\u4e16\u754c\u4e2d\u7ecf\u5386\u4e86\u4e00\u6bb5\u8270\u96be\u7684\u65f6\u671f\u3002\u867d\u7136\u7ecf\u5178\u667a\u80fd\u624b\u673a\u7684\u73b0\u4ee3\u5916\u89c2\u770b\u8d77\u6765\u5f88\u6f02\u4eae\uff0c\u4f46\u5b83\u4e5f\u88ab\u8bc1\u660e\u662f\u6781\u5176\u8106\u5f31\u7684\uff0c\u7279\u6280\u94f0\u94fe\u7cfb\u7edf\u548c\u67d4\u8f6f\u7684\u5851\u6599\u67d4\u6027\u663e\u793a\u5c4f\u5f88\u5bb9\u6613\u635f\u574f\u3002(\u6211\u4eec\u7684\u4e00\u5929\u540e\u5c31\u6b7b\u4e86\uff01)\u3002\u539f\u7248\u4e8e2020\u5e742\u6708\u53d1\u5e03\uff0c\u4f46\u89c4\u683c\u66f4\u597d\u7684\u7eed\u96c6Moto Razr&5G\u5df2\u7ecf\u572810\u6708\u521d\u9762\u4e16\u3002\u4eba\u4eec\u5df2\u7ecf\u8ba4\u5b9a\u8fd9\u4e2a\u76d2\u5b50\u4e0d\u591f\u597d\u3002\nRazr 5G\u76d2\u5b50\u770b\u8d77\u6765\u5c31\u50cf\u6700\u521d\u7684Razr\u91cd\u542f\u76d2\u5b50\uff0c\u5b83\u5e76\u4e0d\u9075\u5faa\u5178\u578b\u7684\u667a\u80fd\u624b\u673a\u76d2\u5b50\u8bbe\u8ba1\u3002\u76d2\u5b50\u7684\u4e0b\u534a\u90e8\u5206\u88ab\u8bbe\u8ba1\u6210\u4e24\u4e2a\u529f\u80fd\u624b\u673a\u652f\u67b6\uff0c\u5b83\u5b9e\u9645\u4e0a\u653e\u5927\u4e86\u626c\u58f0\u5668\u53d1\u51fa\u7684\u58f0\u97f3\u3002\u624b\u673a\u5782\u76f4\u653e\u7f6e\u5728\u76d2\u5b50\u7684\u5e95\u90e8\uff0c\u6253\u5f00\u540e\u7565\u5fae\u5411\u540e\u503e\u659c\u3002\u76d2\u5b50\u7684\u9876\u7aef\u534a\u4e2a\u9876\u7aef\u4f4e\u4e8e\u7535\u8bdd\u652f\u67b6\u7ec4\u4ef6\u7684\u9876\u7aef\uff0c\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6ce1\u6cab\u5757\u538b\u5728\u7535\u8bdd\u663e\u793a\u5c4f\u4e0a\uff0c\u4f7f\u624b\u673a\u4fdd\u6301\u5728\u9002\u5f53\u7684\u4f4d\u7f6e\u3002\n\u624b\u673a\u53d1\u8d27\u65f6\u5c4f\u5e55\u50cf\u8fd9\u6837\u9732\u51fa\uff0c\u5e76\u538b\u5728\u4e00\u4e2a\u5927\u6ce1\u6cab\u5757\u4e0a\uff0c\u663e\u7136\u662f\u9020\u6210\u4e86\u95ee\u9898\u3002\u5728\u770b\u5230\u4e0a\u5e02\u540d\u5355\u548c\u5176\u4e2d\u4e00\u4e9b\u62a5\u544a\u540e\uff0c\u6211\u4eec\u8054\u7cfb\u4e86\u6469\u6258\u7f57\u62c9\uff0c\u8be5\u516c\u53f8\u53d1\u6765\u4e86\u4e00\u4efd\u58f0\u660e\u3002\n\u6469\u6258\u7f57\u62c9\u6b63\u5728\u5de5\u5382\u5c42\u9762\u5bf9\u65b0\u6b3eRazr\u8fdb\u884c\u5c01\u95ed\u5f0f\u5305\u88c5\u3002\u4e00\u65e6\u8bbe\u5907\u79bb\u5f00\u6211\u4eec\u7684\u8bbe\u65bd\uff0c\u5c31\u4e0d\u4f1a\u91cd\u65b0\u6253\u5f00\u3002\u6469\u6258\u7f57\u62c9\u5bf9\u5904\u7406\u624b\u5957\u548c\u536b\u751f\u7a0b\u5e8f\u4ee5\u53ca\u8fd0\u8f93\u534f\u8bae\u63d0\u51fa\u4e86\u4e25\u683c\u7684\u8981\u6c42\uff0c\u65e8\u5728\u63d0\u4f9b\u826f\u597d\u7684\u5f00\u7bb1\u5373\u7528\u4f53\u9a8c\u3002\u4e0e\u6240\u6709\u4ea7\u54c1\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u5bc6\u5207\u76d1\u63a7\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u989d\u5916\u8c03\u6574\uff0c\u4ee5\u63d0\u4f9b\u6700\u4f73\u7684\u6d88\u8d39\u8005\u4f53\u9a8c\u3002\n\u56e0\u6b64\uff0c\u6469\u6258\u7f57\u62c9\u663e\u7136\u5728\u6700\u540e\u4e00\u523b\u8003\u8651\u4e86\u5b83\u7684\u76d2\u5b50\u8bbe\u8ba1\uff0c\u5e76\u627f\u8ba4\u5b83\u5df2\u7ecf\u51b3\u5b9a\u53d1\u8d27\u65f6Razr\u662f\u6298\u53e0\u7684\uff0c\u800c\u4e0d\u662f\u6253\u5f00\u7684\uff0c\u8fd9\u5c31\u662f\u5a92\u4f53\u7167\u7247\u4e2d\u7684\u753b\u9762\u3002\u8fd9\u5e76\u4e0d\u5c40\u9650\u4e8e\u4e9a\u9a6c\u900a\uff0c\u4e9a\u9a6c\u900a\u8bc4\u8bba\u4e2d\u7684\u4e00\u4e9b\u8bc4\u8bba\u58f0\u79f0\u5df2\u7ecf\u6536\u5230\u4e86\u5176\u4ed6\u5546\u5e97\u7684\u6298\u53e0Razr\uff0c\u6bd4\u5982\u767e\u601d\u4e70(Best Buy)\u548c\u6469\u6258\u7f57\u62c9(Motorola)\u3002\u6469\u6258\u7f57\u62c9\u5728\u6700\u540e\u4e00\u523b\u5bf9\u76d2\u5b50\u8fdb\u884c\u4e86\u91cd\u65b0\u8bbe\u8ba1\uff0c\u8fd9\u76f8\u5f53\u5947\u602a\uff0c\u56e0\u4e3a\u8be5\u516c\u53f8\u5728\u8fd9\u4e2a\u76d2\u5b50\u8bbe\u8ba1\u65b9\u9762\u5df2\u7ecf\u6709\u8fd1\u4e00\u5e74\u7684\u7ecf\u9a8c\u4e86\u3002\u6bd5\u7adf\uff0c\u8fd9\u662f\u7b2c\u4e8c\u4ee3Moto Razr\uff0c\u7b2c\u4e00\u4ee3\u770b\u8d77\u6765\u50cf\u662f\u4e00\u4e2a\u76f8\u540c\u7684\u76d2\u5b50\u3002\n\u5728\u4e9a\u9a6c\u900a\u7684\u8bc4\u8bba\u90e8\u5206\uff0c\u987e\u5ba2\u4f3c\u4e4e\u5bf9\u624b\u673a\u5230\u8d27\u65f6\u7684\u72b6\u6001\u76f8\u5f53\u4e0d\u6ee1\u3002\u987e\u5ba2\u963f\u9053\u592b\u00b7A\u00b7\u6851\u591a\u74e6\u5c14\u00b7\u8d1d\u7f57(Adolfo A.Sandoval Berro)\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5207\u5f00\u7684\u76d2\u5b50\u7684\u7167\u7247\uff0c\u5e76\u5728\u4ed6\u4eec\u76841\u661f\u8bc4\u8bba\u4e2d\u5199\u9053\uff0c\u8fd9\u6b3e\u624b\u673a\u5e76\u4e0d\u662f\u5168\u65b0\u7684\u2026\u2026\u5185\u5c4f\u4e0a\u6ca1\u6709\u4fdd\u62a4\u819c\uff0c\u5916\u5c42\u5c4f\u5e55\u4e0a\u7684\u4fdd\u62a4\u819c\u504f\u79fb\u5f97\u975e\u5e38\u7cdf\u7cd5\uff0c\u8bbe\u5907\u5728\u5305\u88c5\u91cc\u6298\u53e0\u8d77\u6765\u3002&#34\uff1b\u4ed6\u4eec\u7ee7\u7eed\u8bf4\uff1a\u6700\u540e\u4f46\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u5f53\u68c0\u67e5\u76d2\u5b50\u76d6\u65f6\uff0c\u6211\u6ce8\u610f\u5230\u6709\u4eba\u5728\u91cc\u9762\u505a\u4e86\u4e00\u4e9b\u624b\u5de5\u5207\u5272\uff0c\u4ee5\u4f7f\u76d6\u5b50\u80fd\u4e0e\u624b\u673a\u6298\u53e0\u597d\u3002&#34\uff1b\n\u6ce1\u6cab\u5757\u80af\u5b9a\u4f1a\u662f\u4e2a\u95ee\u9898\u3002\u5b83\u7684\u76ee\u7684\u662f\u7262\u7262\u5730\u6309\u4f4f\u5f00\u653e\u7684\u5e73\u677f\u663e\u793a\u5c4f\uff0c\u5e76\u786e\u4fdd\u624b\u673a\u7684\u5b89\u5168\u3002\u8bd5\u56fe\u5728Razr\u6298\u53e0\u65f6\u5173\u95ed\u76d2\u5b50(\u56e0\u6b64\u539a\u5ea6\u7ffb\u500d)\u662f\u884c\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u73b0\u5728\u6ce1\u6cab\u5757\u4f1a\u592a\u539a\u3002\u6839\u636e\u8fd9\u4f4d\u8bc4\u8bba\u5bb6\u7684\u8bf4\u6cd5\uff0c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u529e\u6cd5\u662f\u4ece\u6ce1\u6cab\u5757\u4e0a\u5207\u51fa\u4e00\u5927\u5757\uff0c\u8fd9\u6837\u76d2\u5b50\u5c31\u4f1a\u5173\u95ed\u3002\n\u53e6\u4e00\u4f4d\u533f\u540d\u76841\u661f\u7ea7\u8bc4\u8bba\u8005\u5199\u9053\uff0c\u96be\u4ee5\u7f6e\u4fe1\u3002\u6536\u5230\u7535\u8bdd\u7684\u6761\u4ef6\u4e0e\u5176\u4ed6\u8bc4\u8bba\u4e2d\u63cf\u8ff0\u7684\u60c5\u51b5\u76f8\u540c\u3002\u6298\u53e0\uff0c\u5185\u5c4f\u6ca1\u6709\u80f6\u7247\uff0c\u5916\u5c4f\u6709\u5f2f\u66f2\u7684\u80f6\u7247\u3002\u5c4f\u5e55\u4e0a\u663e\u793a\u51fa\u4e0e\u8936\u76b1\u975e\u5e38\u660e\u663e\u7684\u75d5\u8ff9\u3002\u4f46\u662f\uff0c\u9664\u4e86\u5305\u88c5\u95ee\u9898\uff0c\u8bf4\u670d\u6211\u9000\u56de\u8fd9\u6b3e\u624b\u673a\u7684\u4e3b\u8981\u539f\u56e0\u662f\u5c4f\u5e55\u5728\u6253\u5f00\u548c\u5173\u95ed\u65f6\u53d1\u51fa\u5431\u5431\u7684\u58f0\u97f3\uff0c\u8fd9\u4e00\u70b9\u6211\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u6ca1\u6709\u5728\u5176\u4ed6\u8bc4\u8bba\u4e2d\u8bfb\u5230\u3002\u9664\u4e86\u6240\u6709\u7684\u5305\u88c5\u95ee\u9898\uff0c\u77e5\u9053\u6469\u6258\u7f57\u62c9\u4ecd\u7136\u6ca1\u6709\u4fee\u590d\u4ee4\u4eba\u9707\u60ca\u7684\u5431\u5431\u4f5c\u54cd\u7684\u94f0\u94fe\u673a\u6784\uff0c\u8fd9\u662f\u4e00\u4ef6\u4ee4\u4eba\u9ad8\u5174\u7684\u4e8b\u60c5\u3002\u5176\u4ed6\u51e0\u6761\u8bc4\u8bba\u79f0\u8fd9\u6b3e\u65b0\u624b\u673a\u662f\u4e8c\u624b\u8d27\u3002\n\u6469\u6258\u7f57\u62c9\u58f0\u79f0Razrs\u7684\u5305\u88c5\u4f7f\u7528\u4e86\u4e25\u683c\u7684\u536b\u751f\u7a0b\u5e8f\uff0c\u8fd9\u4e0e\u4e9a\u9a6c\u900a\u5b98\u65b9\u6e05\u5355\u4e0a\u7684\u6307\u7eb9\u8b66\u544a\u4e0d\u7b26\uff0c\u4e5f\u4e0e\u5927\u91cf\u5ba2\u6237\u62a5\u544a\u79f0\u624b\u673a\u5230\u8fbe\u65f6\u5904\u4e8e\u6240\u8c13\u7684\u4e8c\u624b\u72b6\u6001\u4e0d\u7b26\u3002\u5728\u5173\u4e8e\u6307\u7eb9\u8b66\u544a\u7684\u540e\u7eed\u95ee\u9898\u540e\uff0c\u6469\u6258\u7f57\u62c9\u544a\u8bc9ARS&34\uff1b\u6211\u4eec\u5df2\u7ecf\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u5e76\u6b63\u5728\u91c7\u53d6\u63aa\u65bd\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u7ee7\u7eed\u53d1\u751f\u3002", "note_en": "If you buy a new Moto Razr 5G,\u00a0it might not seem all that &#34;new&#34; when you get it. A very interesting note (first spotted by  The Verge) is at the bottom of the Amazon product description, which says that your Moto Razr will be opened before it gets to you, it&#39;s going to be folded, and, oh, we&#39;re sorry if there are some fingerprints:\n NOTE: originally, RAZR was meant to be shipped in the unfolded position. However, to better protect the display, we have folded your RAZR \u2013 it\u2019s safer but may not look as elegant as we hoped. We apologize if you see fingerprints on your device. We assure you your RAZR is brand new.\n Motorola&#39;s foldable reboot of the Moto Razr has had a tough time surviving in the real world. While the modern take on a classic smartphone looks beautiful, it has also proven extremely fragile, with the trick hinge system and soft, plastic flexible display being prone to damage. ( Ours died after one day!) The original released in February 2020, but a sequel with better specs, the Moto Razr &#34;5G,&#34; already came out at the beginning of October. Already, it has been decided that the box isn&#39;t good enough.\n The Razr 5G box looks just like the original Razr reboot box, and it doesn&#39;t follow your typical smartphone box design. The bottom half of the box is designed to double as a functional phone stand, and it actually amplifies the sound coming out of the speaker. The phone sits in the bottom of the box vertically, opened up, and tilted back slightly. The top &#34;half&#34; of the box lowers down over top of the phone stand assembly, and a very large foam block presses against the phone display, keeping the phone in place.\n  Shipping the phone with the screen exposed like this, and pressed against a big foam block, is apparently causing problems. We contacted Motorola after seeing the listing and some of these reports, and the company sent along a statement\n Motorola is packaging the new razr in its closed form at the factory level. Once the device leaves our facilities it is not reopened. Motorola places strict requirements on handling with gloves and sanitation procedures along with shipping protocols aimed at providing a great out of box experience. As with all products, we\u2019ll continue to closely monitor and make additional adjustments as needed to give the best consumer experience.\n So Motorola apparently had last-minute second thoughts about its box design and admits it has decided to ship the Razr folded instead of unfolded, which is how it is pictured in the press shots. This isn&#39;t limited to Amazon, and  a few of the comments to the Amazon reviews claim to have received folded Razrs from other stores, like Best Buy and Motorola directly.\u00a0Motorola&#39;s last-minute box rework is pretty strange, since the company has almost a year of experience under its belt with this box design. This is the second generation of the Moto Razr, after all, and the first generation had what looks like an identical box.\n    In the Amazon review section, customers seem pretty unhappy about the state of their phones when they arrive. Customer Adolfo A. Sandoval Berro provided photos of a sliced-up box and writes in  their 1-star review that &#34;The phone was not brand new...There was not [a] protector film on the inner screen, the protector film on the outer screen was offset really bad, and the device came folded inside its packaging.&#34; They continue: &#34;Last but not least, when inspecting the lid of the box I could notice that someone did some hand cutting inside in order to make the lid fit with the phone folded.&#34;\n The foam block is definitely going to be a problem. It&#39;s meant to press firmly against the open, flat display, and secure the phone. Trying to close the box when the Razr is folded up (and therefore double the thickness) doesn&#39;t really work, because now the foam block will be too thick. The solution to this, according to this reviewer, is to slice a big chunk out of the foam block so the box will close.\n Another anonymous 1-star reviewer writes, &#34;Unbelievable. Received the phone in the same conditions as described in other reviews. Folded, with no film on inside screen and crooked film on outside screen. The screen shows very distinct marks from foldings. But besides packaging issues, the primary reason that convinced me to return the device, that I haven&#39;t so far read in other reviews, is that the screen squeaks when opening and closing.&#34; Besides all the packaging issues, it&#39;s nice to know that Motorola still hasn&#39;t fixed the alarmingly squeaky hinge mechanism. Several other reviews describe the &#34;new&#34; phone as arriving &#34;used.&#34;\n Motorola&#39;s statement that Razrs are being packaged with &#34;strict&#34; sanitation procedures doesn&#39;t line up with the fingerprint warning on the official Amazon listing, or with numerous customer reports that claim the phone arrived in what is described as a &#34;used&#34; state. After a follow-up question about the fingerprint warning, Motorola told Ars &#34;We are aware of this issue and are implementing steps to prevent this from happening moving forward.&#34;", "posttime": "2020-10-31 02:52:00", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "amazon,\u4e9a\u9a6c\u900a,\u8b66\u544a,razrs,\u76d2\u5b50", "title": "\u4e9a\u9a6c\u900a\u63cf\u8ff0\u8b66\u544a\u79f0\uff0c\u201c\u65b0\u201dMoto Razr\u53ef\u80fd\u4f1a\u5e26\u7740\u6307\u7eb9\u5230\u8fbe", "title_en": "\u201cNew\u201d Moto Razrs might arrive with fingerprints, Amazon description warns", "transed": 1, "url": "https://arstechnica.com/gadgets/2020/10/moto-razrs-are-being-opened-before-they-ship-might-arrive-with-fingerprints/", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u8b66\u544a", "razrs", "\u76d2\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "b34e59923e0d16ff27bc0ef5957d5086.png", "infoid": 1032351, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u82f9\u679c\u9996\u5e2d\u8d22\u52a1\u5b98\u5362\u5361\u00b7\u9a6c\u57c3\u65af\u7279\u91cc(Luca Maestri)\u5411\u5f6d\u535a\u793e(Bloomberg)\u8bc1\u5b9e\uff0c\u82f9\u679c\u7684\u4e00\u4f53\u5316\u8ba2\u9605\u670d\u52a1\u6346\u7ed1\u5305Apple One\u4eca\u5929\u53d1\u5e03\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u8482\u59c6\u00b7\u5e93\u514b\u6628\u5929\u5728\u516c\u53f8\u7684\u5b63\u5ea6\u6295\u8d44\u8005\u7535\u8bdd\u4f1a\u8bae\u4e0a\u4e5f\u8bc1\u5b9e\u4e86\u6346\u7ed1\u5305\u5373\u5c06\u63a8\u51fa\u3002\nApple One\u63d0\u4f9b\u4e09\u79cd\u5957\u9910\uff1a\u4e2a\u4eba\u5957\u9910\u3001\u5bb6\u5ead\u5957\u9910\u548c\u9ad8\u7ea7\u5957\u9910\u3002\u6bcf\u4e00\u4e2a\u90fd\u63d0\u4f9bApple Music\u3001Apple TV+\u3001Apple Arade\u3001iCloud\u3001Apple News+\u7684\u4e00\u4e9b\u5b50\u96c6\u6216\u7ec4\u5408\uff0c\u5f88\u5feb\u8fd8\u4f1a\u63d0\u4f9bApple Fitness+\u3002\n\u4e2a\u4eba\u5957\u9910\u5305\u62ec\u4e00\u4e2a\u7528\u6237\u7684Apple Music\u3001Apple TV+\u3001Apple Arade\u548c50 GB\u7684iCloud\u5b58\u50a8\uff0c\u6bcf\u670814.95\u7f8e\u5143\u3002\n\u5bb6\u5ead\u8ba1\u5212\u5c06Apple Music\u6269\u5c55\u5230\u5bb6\u5ead\u8ba2\u9605\uff0c\u5e76\u5c06iCloud\u5b58\u50a8\u5bb9\u91cf\u4ece50 GB\u589e\u52a0\u5230200 GB\u3002\u6bcf\u6708\u6536\u8d3919.95\u7f8e\u5143\u3002\n\u6700\u540e\uff0cPremier\u589e\u52a0\u4e86Apple News+\u548cApple Fitness+\uff0c\u5e76\u4ee5\u6bcf\u670829.95\u7f8e\u5143\u7684\u4ef7\u683c\u4e00\u8def\u589e\u52a0\u52302TB\u7684iCloud\u5b58\u50a8\u7a7a\u95f4\u3002\u8fd9\u9879\u8ba1\u5212\u6700\u521d\u53ea\u4f1a\u5728\u7f8e\u56fd\u3001\u82f1\u56fd\u3001\u52a0\u62ff\u5927\u548c\u6fb3\u5927\u5229\u4e9a-\u8fd9\u4e9b\u56fd\u5bb6\u53ef\u4ee5\u4f7f\u7528Apple News+\u3002\n\u53e6\u5916\uff0cMaestri\u8fd8\u8868\u793a\uff0cApple Fitness+\u5c06\u5728\u4eca\u5e74\u5e74\u5e95\u63a8\u51fa\u3002(\u663e\u7136\uff0c\u5728\u53d1\u5e03\u4e4b\u524d\uff0c\u5b83\u4e0d\u4f1a\u4f5c\u4e3a\u4e3b\u8981\u6346\u7ed1\u5305\u7684\u4e00\u90e8\u5206\u63d0\u4f9b\u3002)\u3002Apple Fitness+\u6700\u8fd1\u521a\u521a\u53d1\u5e03\uff1b\u5b83\u63d0\u4f9b\u5404\u79cd\u7c7b\u578b\u7684\u953b\u70bc\u89c6\u9891\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u5bb6\u91cc\u6216\u5065\u8eab\u623f\u953b\u70bc\uff0c\u8fd8\u96c6\u6210\u4e86Apple Music\uff0c\u4ee5\u53caiPhone\u548cApple Watch\u4e0a\u7684\u5065\u5eb7\u5e94\u7528\u3002\n\u5f53\u82f9\u679c\u6628\u5929\u516c\u5e03\u6536\u76ca\u65f6\uff0c\u5b83\u663e\u793a\u51fa\u53c8\u4e00\u4e2a\u6708\u7684\u670d\u52a1\u589e\u957f(\u540c\u6bd4\u589e\u957f16.3%\uff0c\u603b\u8ba1145.5\u4ebf\u7f8e\u5143)\u3002\u8fc7\u53bb\u51e0\u5e74\uff0c\u5e93\u6bd4\u8482\u8bfa\u4e00\u76f4\u5c06\u670d\u52a1\u89c6\u4e3a\u5f25\u8865iPhone\u9500\u552e\u589e\u957f\u653e\u7f13\u7684\u65b9\u5f0f\u4e4b\u4e00\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0cApple Music\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\uff0c\u4f46TV+\u4e0a\u7684\u8bc4\u5ba1\u56e2\u8fd8\u6ca1\u6709\u51fa\u6765\uff0c\u800cNews+\u4f3c\u4e4e\u5728\u82e6\u82e6\u6323\u624e\u3002", "note_en": "Apple\u2019s all-in-one subscription services bundle, Apple One, launches today, according to a confirmation  given to Bloomberg by Apple CFO Luca Maestri.\n CEO Tim Cook also confirmed the bundle\u2019s imminent launch on the company\u2019s quarterly investor call yesterday.\n Apple One offers three plans: individual, family, and premier. Each offers some subset or combination of Apple Music, Apple TV+, Apple Arcade, iCloud, Apple News+, and soon, Apple Fitness+.\n The individual plan includes Apple Music for one user, Apple TV+, Apple Arcade, and 50GB of iCloud storage at $14.95 per month.\n The family plan expands Apple Music to a family subscription and bumps that 50GB of iCloud storage to 200GB. It costs $19.95 per month.\n Finally, premier adds Apple News+ and Apple Fitness+ and goes all the way to 2TB of iCloud storage for $29.95 monthly. This plan will initially only be available in\u00a0the US, UK, Canada, and Australia\u2014the countries where Apple News+ is available.\n  On a related note, Maestri also said that Apple Fitness+ will launch by the end of this year. (It will not be available as part of the premier bundle until it launches, obviously.) Apple Fitness+ was announced just recently; it serves up various types of workout videos that users can exercise along with either at home or the gym, with integrations with Apple Music and the Health app on iPhones and the Apple Watch.\n When Apple reported earnings yesterday, it showed another month of services growth (16.3 percent year over year, for a total of $14.55 billion). Cupertino has looked to services as one of the ways it can make up for slower-growing iPhone sales these past couple of years. So far, Apple Music has been a huge success, but the jury is out on TV+, and News+ seems to be struggling.", "posttime": "2020-10-31 02:51:52", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53d1\u5e03,apple,\u4eca\u65e5,launches", "title": "Apple One\u4eca\u65e5\u53d1\u5e03\uff0c\u6346\u7ed1\u97f3\u4e50\u3001iCloud\uff0c\u552e\u4ef714.95\u7f8e\u5143\u4ee5\u4e0a", "title_en": "Apple One launches today, bundling Music, iCloud, more for $14.95 and up", "transed": 1, "url": "https://arstechnica.com/gadgets/2020/10/apple-one-launches-today-bundling-music-icloud-more-for-14-95-and-up/", "via": "", "real_tags": ["\u53d1\u5e03", "apple", "\u4eca\u65e5", "launches"]}, {"category": "", "categoryclass": "", "imagename": "e9f2bc1bc169d6c0a02fe97326f20f34.jpg", "infoid": 1032350, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u79d1\u6280\u548c\u4f53\u80b2\u7684\u5173\u7cfb\u5df2\u7ecf\u76f8\u5f53\u590d\u6742\u4e86\u3002\u5728\u8db3\u7403\u6bd4\u8d5b\u671f\u95f4\u767b\u5f55Twitter(\u4e5f\u5c31\u662f\u4eba\u4eec\u719f\u77e5\u7684\u8db3\u7403)\uff0c\u4eba\u4eec\u5728\u63a8\u7279\u4e0a\u53d1\u4e00\u4e9b\u6a21\u68f1\u4e24\u53ef\u7684\u58f0\u660e\uff0c\u6bd4\u5982\u201c\u54e6\uff0c\u4e0d\uff0c\u4f19\u8ba1\u201d\uff0c\u518d\u5230\u5927\u7ea62\u4e07\u6761\u83ab\u540d\u5176\u5999\u7684\u8f6c\u53d1\uff0c\u4f60\u5f88\u53ef\u80fd\u4f1a\u770b\u5230\u5f88\u591a\u4eba\u62b1\u6028\u89c6\u9891\u52a9\u7406\u88c1\u5224(VAR)\uff0c\u5076\u5c14\u8fd8\u4f1a\u770b\u5230\u7403\u95e8\u7ebf\u6280\u672f\u4e0d\u529b\u7684\u62b1\u6028\u3002\n\u82cf\u683c\u5170\u8db3\u7403\u961f\u56e0\u5f17\u5185\u65af\u5580\u91cc\u591a\u5c3c\u4e9a\u84df\u8db3\u7403\u4ff1\u4e50\u90e8\u7684\u7403\u8ff7\u5728\u4e0a\u5468\u672b\u7684\u4e00\u573a\u6bd4\u8d5b\u4e2d\u7ecf\u5386\u4e86\u4e00\u4e2a\u65b0\u7684\u6ed1\u7a3d\u7684\u6280\u672f\u6545\u969c\uff0c\u4f46\u8001\u5b9e\u8bf4\uff0c\u4f60\u5f88\u96be\u8bf4\u8fd9\u5e76\u6ca1\u6709\u663e\u8457\u6539\u5584\u89c2\u770b\u4f53\u9a8c\u3002\n\u8be5\u4ff1\u4e50\u90e8\u51e0\u5468\u524d\u5ba3\u5e03\uff0c\u5c06\u4ece\u4f7f\u7528\u4eba\u7c7b\u76f8\u673a\u64cd\u4f5c\u5458\u8f6c\u5411\u7531\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u7684\u76f8\u673a\u3002\u4ff1\u4e50\u90e8\u5f53\u65f6\u81ea\u8c6a\u5730\u5ba3\u5e03\uff0c\u65b0\u7684Pixellot\u7cfb\u7edf\u4f7f\u7528\u5185\u7f6e\u4eba\u5de5\u667a\u80fd\u7403\u8ddf\u8e2a\u6280\u672f\u7684\u6444\u50cf\u5934\uff0c\u5c06\u7528\u4e8e\u6355\u6349\u5580\u91cc\u591a\u5c3c\u4e9a\u4f53\u80b2\u573a\u6240\u6709\u4e3b\u573a\u6bd4\u8d5b\u7684\u9ad8\u6e05\u955c\u5934\uff0c\u5e76\u5c06\u76f4\u63a5\u64ad\u653e\u7ed9\u5b63\u7968\u6301\u6709\u8005\u7684\u5bb6\u5ead\u3002\n\u5207\u6362\u5230\u4e0a\u5468\u516d\uff0c\u5f53\u65f6\u673a\u5668\u4eba\u6444\u50cf\u673a\u9762\u4e34\u7740\u4e00\u4e2a\u65b0\u7684\u6311\u6218\uff0c\u8fd9\u662f\u4e00\u4e2a\u6ca1\u6709\u9884\u6599\u5230\u7684\u6311\u6218\uff1a\u4e00\u540d\u79c3\u5934\u7684\u5de1\u8fb9\u5458\u3002\n\u4eba\u5de5\u667a\u80fd\u6444\u50cf\u673a\u4f3c\u4e4e\u5728\u6bd4\u8d5b\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\u628a\u8fd9\u540d\u7537\u5b50\u7684\u79c3\u5934\u8bef\u8ba4\u4e3a\u662f\u7403\uff0c\u53cd\u590d\u5411\u540e\u6447\u6446\uff0c\u8ddf\u968f\u5de1\u8fb9\u5458\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u6bd4\u8d5b\u3002\u8bb8\u591a\u89c2\u4f17\u62b1\u6028\u4ed6\u4eec\u9519\u8fc7\u4e86\u7403\u961f\u7684\u8fdb\u7403\uff0c\u56e0\u4e3a\u6444\u50cf\u673a\u4e00\u76f4\u8ba4\u4e3a\u91cc\u8bfa\u7684\u5149\u5934\u5c31\u662f\u7403\uff0c\u4e00\u4e9b\u4eba\u751a\u81f3\u5efa\u8bae\u4ff1\u4e50\u90e8\u5fc5\u987b\u4e3a\u8fd9\u540d\u8fb9\u88c1\u63d0\u4f9b\u5934\u9970\u6216\u5e3d\u5b50\u3002\n\u7531\u4e8e\u65b0\u51a0\u80ba\u708e\u7684\u9650\u5236\uff0c\u4f53\u80b2\u573a\u5185\u4e0d\u5141\u8bb8\u7403\u8ff7\u5165\u573a\uff0c\u56e0\u5f17\u5185\u65af\u5580\u91cc\u591a\u5c3c\u4e9a\u84df\u8db3\u7403\u4ff1\u4e50\u90e8\u7684\u7403\u8ff7\u548c\u4ed6\u4eec\u7684\u5bf9\u624b\u827e\u5c14\u8054\u961f\u7684\u7403\u8ff7\u53ea\u80fd\u901a\u8fc7\u6444\u50cf\u673a\u89c2\u770b\uff0c\u6240\u4ee5\u4ed6\u4eec\u5f97\u5230\u7684\u5f85\u9047\u4e3b\u8981\u662f\u770b\u5230\u8fd9\u4f4d\u8fb9\u88c1\u7684\u5934\u90e8\uff0c\u800c\u4e0d\u662f\u955c\u5934\u5916\u53d1\u751f\u7684\u4efb\u4f55\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\uff0c\u5c3d\u7ba1\u4e00\u4e9b\u7403\u8ff7\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u989d\u5916\u7684\u5956\u52b1\uff0c\u56e0\u4e3a\u5b83\u6709\u7740\u4e0d\u540c\u5bfb\u5e38\u7684\u8868\u73b0\u8d28\u91cf\u3002\n\u6b63\u5982\u4f60\u53ef\u4ee5\u4ece\u4e0a\u9762\u7684\u9ad8\u5149\u5377\u8f74\u4e0a\u770b\u5230\u7684\u90a3\u6837\uff0c\u4eba\u5de5\u667a\u80fd\u64cd\u4f5c\u7684\u6444\u50cf\u673a\u4e00\u76f4\u8ddf\u968f\u7740\u5de1\u8fb9\u5458\u7684\u5934\u90e8\uff0c\u7279\u522b\u662f\u5f53\u7403\u843d\u5230\u4ed6\u9644\u8fd1\u7684\u5730\u9762\u65f6\uff0c\u4ed6\u7279\u522b\u6323\u624e\u3002\u4f60\u51e0\u4e4e\u53ef\u4ee5\u542c\u5230\u5b83\u7684\u601d\u7ef4\u8fc7\u7a0b\uff1a\u5706\u7403\u5149\u5934\uff0c\u90a3\u91cc\u6709\u4e00\u4e2a\u5149\u5934\uff0c\u653e\u5927\u8fd9\u4e2a\u5149\u5934\u3002\n\u7269\u4f53\u8bc6\u522b\u6280\u672f\u663e\u7136\u9700\u8981\u505a\u4e00\u4e9b\u8c03\u6574\uff0c\u5426\u5219\u7403\u961f\u5b9e\u9645\u4e0a\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5b9e\u65bd\u79c3\u9876\u88c1\u5224\u88ab\u8feb\u7a7f\u4e0a\u5bbd\u8fb9\u5e3d\u7684\u653f\u7b56\uff0c\u4ee5\u4f7f\u81ea\u5df1\u4e0e\u7403\u533a\u5206\u5f00\u6765\u3002\n*\u5982\u679c\u4f60\u77e5\u9053IFLScience\u7684\u603b\u90e8\u8bbe\u5728\u82f1\u56fd\uff0c\u800c\u4e0d\u662f\u7f8e\u56fd\uff0c\u53ef\u80fd\u4f1a\u8ba9\u4f60\u5927\u5403\u4e00\u60ca\u3002", "note_en": "Technology and sports have a fairly mixed relationship already. Log on to Twitter during a soccer match (or football as it&#39;s properly known*) and as well as people tweeting ambiguous statements like &#34;YESSS&#34; and &#34;oh no mate&#34; to about 20,000 inexplicable retweets, you&#39;ll likely see a lot of complaints about the\u00a0video assistant referee (VAR) and occasionally goal-line technology not doing its job.\n Fans of Scottish football team Inverness Caledonian Thistle FC experienced a new hilarious technological glitch during a match last weekend, but in all honesty, you&#39;d be hard-pressed to say it didn&#39;t improve the viewing experience dramatically.\n The club announced a few weeks ago it was moving from using human camera operators to cameras controlled by AI. The  club proudly announced\u00a0at the time the new &#34;Pixellot system uses cameras with in-built, AI, ball-tracking technology&#34; and would be used to capture HD footage of all home matches at Caledonian Stadium, which would be broadcast directly to season-ticket holders&#39; homes.\n Cut to last Saturday, when the robot cameras were given a new challenge that hadn&#39;t been foreseen: A linesman with a bald head.\n  The AI camera appeared to mistake the man&#39;s bald head for the ball for a lot of the match, repeatedly swinging back to follow the linesman instead of the actual game. Many viewers  complained they missed their team scoring a goal because the camera &#34;kept thinking the Lino bald head was the ball,&#34; and some even suggested the club would have to provide the linesman with a toupe or hat.\n With no fans allowed in the stadium due to Covid-19 restrictions, the fans of\u00a0Inverness Caledonian Thistle FC and their opponents\u00a0Ayr United could only watch via the cameras, and so were treated to mostly a view of the linesman&#39;s head instead of any exciting moments of the match that were occurring off-camera, though some fans saw this as a bonus given the\u00a0usual quality of performance.\n   As you can see from the highlight reel above,\u00a0the AI-operated camera continuously follows the linesman&#39;s head, particularly struggling as the ball falls down towards the ground near him. You can practically hear its thought process: &#34;ball ball ball bald head, there&#39;s a bald head, zoom in on the bald head.&#34;\n The object recognition technology could clearly do with a bit of a tweak, or else the team might actually have to implement the policy of bald referees being forced to wear a sombrero to differentiate themselves from the ball.\n  *It may surprise you to know IFLScience is based in the UK, not the US.", "posttime": "2020-10-31 02:51:36", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6444\u50cf\u673a,camera,\u7403\u8ff7", "title": "AI\u6444\u50cf\u673a\u5c06\u88c1\u5224\u7684\u79c3\u5934\u8bef\u8ba4\u4e3a\u662f\u7403\uff0c\u5728\u6bd4\u8d5b\u4e2d\u4e00\u76f4\u8ddf\u968f\u7740\u5b83\u3002", "title_en": "AI camera mistakes referee's bald head for ball, follows it through the match.", "transed": 1, "url": "https://www.iflscience.com/technology/ai-camera-ruins-soccar-game-for-fans-after-mistaking-referees-bald-head-for-ball/", "via": "", "real_tags": ["\u6444\u50cf\u673a", "camera", "\u7403\u8ff7"]}, {"category": "", "categoryclass": "", "imagename": "1e4a88c081f8761f98163dd0fba0ad1f.jpg", "infoid": 1032348, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ecf\u8fc7\u8be6\u5c3d\u7684\u6d4b\u8bd5\uff0c\u4e0e\u591a\u540d\u7ef4\u4fee\u6280\u672f\u4eba\u5458\u6bd4\u8f83\u7b14\u8bb0\uff0c\u4ee5\u53ca\u5ba1\u67e5\u6cc4\u9732\u7684\u82f9\u679c\u57f9\u8bad\u6587\u4ef6\uff0c\u6211\u4eec\u53d1\u73b0iPhone12\u6444\u50cf\u5934\u5728iPhone\u4e4b\u95f4\u4ea4\u6362\u65f6\u5b8c\u5168\u4e0d\u53ef\u9760\u3002\n\u8fd9\u4e00\u6700\u65b0\u7684\u6545\u969c\uff0c\u52a0\u4e0a\u82f9\u679c\u7ef4\u4fee\u6307\u5357\u4e2d\u7684\u8ff9\u8c61\uff0c\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u52a0\u6e05\u695a\uff1a\u82f9\u679c\uff0c\u65e0\u8bba\u662f\u8bbe\u8ba1\u8fd8\u662f\u758f\u5ffd\uff0c\u6216\u8005\u4e24\u8005\u517c\u800c\u6709\u4e4b\uff0c\u4f7f\u5f97\u6ca1\u6709\u4ed6\u4eec\u7684\u652f\u6301\uff0c\u4fee\u7406iPhone\u53d8\u5f97\u6781\u5176\u56f0\u96be\u3002\u8fd9\u53ef\u80fd\u662f\u82f9\u679c\u6700\u7ec8\u4fee\u590d\u7684\u4e00\u4e2a\u6f0f\u6d1e\u3002\u5728\u624b\u673a\u4e4b\u95f4\u4ea4\u6362iPhone\u90e8\u4ef6\u65f6\uff0c\u751a\u81f3\u6709\u8fc7\u884c\u4e3a\u4e0d\u7aef\u7684\u5148\u4f8b\u3002\n\u4f46\u82f9\u679c\u4e5f\u6709\u53ef\u80fd\u8ba1\u5212\u5c06\u6240\u6709\u672a\u7ecf\u6388\u6743\u7684iPhone\u6444\u50cf\u5934\u548c\u5c4f\u5e55\u7ef4\u4fee\u62d2\u4e4b\u95e8\u5916\u3002\u82f9\u679c\u7684\u5185\u90e8\u57f9\u8bad\u6307\u5357\u544a\u8bc9\u6388\u6743\u7684\u6280\u672f\u4eba\u5458\uff0c\u4ece12\u53ca\u5176\u53d8\u79cd\u5f00\u59cb\uff0c\u4ed6\u4eec\u5c06\u9700\u8981\u8fd0\u884c\u82f9\u679c\u4e13\u6709\u7684\u4e91\u8fde\u63a5\u7cfb\u7edf\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u6765\u5168\u9762\u7ef4\u4fee\u6444\u50cf\u5934\u548c\u5c4f\u5e55\u3002\n\u4e0a\u5468\u62c6\u5378iPhone12\u65f6\uff0c\u6211\u4eec\u7ed9\u5b83\u6253\u4e866\u5206(\u6ee1\u520610\u5206)\u7684\u53ef\u7ef4\u4fee\u6027\u5206\u6570\u3002\u548c\u5927\u591a\u6570iPhone\u4e00\u6837\uff0c\u5b83\u901a\u5e38\u662f\u4e00\u6b3e\u8bbe\u8ba1\u7528\u4e8e\u6253\u5f00\u548c\u7ef4\u4fee\u7684\u8bbe\u5907\uff0c\u5c3d\u7ba1\u82f9\u679c\u66f4\u559c\u6b22\u53ea\u6709\u5b83\u7684\u6280\u672f\u4eba\u5458\u8fd9\u6837\u505a\u3002\u5927\u591a\u6570\u90e8\u4ef6\u90fd\u53ef\u4ee5\u66f4\u6362\uff0c\u8bbe\u8ba1\u4f18\u5148\u8003\u8651\u7684\u662f\u87ba\u4e1d\u800c\u4e0d\u662f\u80f6\u6c34\uff0c\u663e\u793a\u5668\u548c\u7535\u6c60\u7b49\u5173\u952e\u90e8\u4ef6\u662f\u6700\u5bb9\u6613\u7ef4\u4fee\u7684\u3002\n\u4f46\u5728\u6211\u4eec\u7684\u6807\u51c6\u76f8\u673a\u7ef4\u4fee\u6d4b\u8bd5\u4e2d\u770b\u5230\u4e86\u4e00\u4e9b\u975e\u5e38\u5947\u602a\u7684\u7ed3\u679c-YouTuber\u4f11\u00b7\u6770\u5f17\u91cc\u65af(YouTuber Hugh Jeffreys)\u8fdb\u4e00\u6b65\u63a8\u52a8\u4e86\u6211\u4eec\u7684\u7ed3\u679c\uff0c\u4e0e\u6211\u4eec\u81ea\u5df1\u7684\u7ed3\u679c\u4e00\u81f4-\u6211\u4eec\u89c9\u5f97\u6709\u5fc5\u8981\u66f4\u6df1\u5165\u5730\u6316\u6398\u3002IPhone12\u6444\u50cf\u5934\uff0c\u5f53\u8f6c\u79fb\u5230\u53e6\u4e00\u53f0iPhone12\u4e0a\u65f6\uff0c\u4f3c\u4e4e\u53ef\u4ee5\u5728\u53d1\u5e03\u65f6\u4f7f\u7528\uff0c\u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u5374\u51fa\u73b0\u4e86\u4e25\u91cd\u7684\u6545\u969c\u3002\u5b83\u62d2\u7edd\u5207\u6362\u5230\u8d85\u5bbd\u76f8\u673a\uff0c\u53ea\u5bf9\u67d0\u4e9b\u76f8\u673a\u6a21\u5f0f\u4f5c\u51fa\u54cd\u5e94\uff0c\u5076\u5c14\u4f1a\u6302\u8d77\uff0c\u5b8c\u5168\u6ca1\u6709\u53cd\u5e94\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u76f8\u540c\u578b\u53f7\u7684iPhone\u4e4b\u95f4\u901a\u5e38\u5f88\u5bb9\u6613\u4ea4\u6362\u6444\u50cf\u5934\u3002\u5373\u4f7f\u662f\u6211\u4eec\u7684iPhone12Pro\u6d4b\u8bd5\u4e5f\u6ca1\u6709\u95ee\u9898\uff1a\u6bcf\u9879\u529f\u80fd\u90fd\u8fd0\u884c\u5f97\u5f88\u597d\u3002\nIPhone\u90e8\u4ef6\u5bf9\u6389\u671f\u7684\u4e0d\u826f\u53cd\u5e94\u662f\u6709\u5148\u4f8b\u7684\uff0c\u5373\u4f7f\u82f9\u679c\u4e0d\u662f\u6545\u610f\u9020\u6210\u8fd9\u4e2a\u95ee\u9898\u7684\u3002\u82f9\u679c\u4e3aiPhone7\u548c8Plus LCD\u5c4f\u5e55\u4f7f\u7528\u4e86\u4e09\u4e2a\u4e0d\u540c\u7684\u5236\u9020\u5546\uff1b\u5728\u5b83\u4eec\u4e4b\u95f4\u8c03\u6362\u53ef\u80fd\u4f1a\u5bfc\u81f4\u201c\u5e7d\u7075\u89e6\u6478\u201d\u548c\u5176\u4ed6\u54cd\u5e94\u95ee\u9898\u3002IPhone7\u548c8\u4e2d\u7684\u66f4\u6362Taptic\u5f15\u64ce\u5076\u5c14\u4f1a\u51fa\u73b0\u6545\u969c\uff0c\u53ea\u6709\u6062\u590d\u539f\u59cb\u5f15\u64ce\u7684\u5e8f\u5217\u53f7\u624d\u80fd\u4fee\u590d\u3002\n\u5373\u4f7f12\u4eba\u7684\u76f8\u673a\u95ee\u9898\u662f\u4e00\u6b21\u6027\u7684\u95ee\u9898\uff0c\u4e5f\u6709\u7406\u7531\u611f\u5230\u62c5\u5fe7\u3002\u5728\u82f9\u679c\u9488\u5bf9iPhone 12\u7684\u5185\u90e8\u57f9\u8bad\u6307\u5357\u4e2d\uff0c\u6388\u6743\u6280\u672f\u4eba\u5458\u88ab\u544a\u77e5\uff0c\u4eceiPhone 12\u5f00\u59cb\uff0c\u4ed6\u4eec\u5c06\u9700\u8981\u8fd0\u884c\u82f9\u679c\u4e13\u6709\u7684\u4e91\u8fde\u63a5\u7cfb\u7edf\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u5168\u9762\u4fee\u590d\u6444\u50cf\u5934\u548c\u5c4f\u5e55\u3002\n\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u5982\u679c\u6ca1\u6709\u5b98\u65b9\u6280\u672f\u7684\u89e6\u6478\uff0ciPhone\u6444\u50cf\u5934\u6216\u5c4f\u5e55\u5c31\u5b8c\u5168\u4e0d\u80fd\u5de5\u4f5c\u3002\u6211\u4eec\u5728iPhone12\u673a\u578b\u4e4b\u95f4\u8fdb\u884c\u4e86\u591a\u6b21\u5c4f\u5e55\u4e92\u6362\uff0c\u5b83\u4eec\u7684\u529f\u80fd\u4e0e\u9884\u671f\u4e00\u81f4\uff0c\u5c3d\u7ba1\u82f9\u679c\u5728\u5c4f\u5e55\u4e0a\u8bef\u5bfc\u6027\u5730\u8b66\u544a\u79f0\uff0c\u8fd9\u4e9b\u663e\u793a\u5c4f\u53ef\u80fd\u4e0d\u662f\u201c\u771f\u7684\u201d(\u5c3d\u7ba1\u5b83\u4eec\u662f\u771f\u7684)\u3002\u4f46\u5b83\u770b\u8d77\u6765\u4e0d\u9002\u5408\u72ec\u7acb\u7ef4\u4fee\u3002\u82f9\u679c\u5728iPhone\u7684\u6838\u5fc3\u90e8\u4ef6\u4e0a\u53c8\u6253\u4e0a\u4e86\u4e00\u4e2a\u95ee\u53f7\u3002\u4e3a\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u76f8\u673a\u9700\u8981\u82f9\u679c\u8fdc\u7a0b\u6388\u6743\u5e8f\u5217\u53f7\uff0c\u624d\u80fd\u8ba9\u4eba\u7528\u624b\u673a\u62cd\u7167\uff1f\n\u8003\u8651\u5230\u6709\u7f3a\u9677\u4f46\u6280\u672f\u4e0a\u6b63\u5e38\u5de5\u4f5c\u7684\u884c\u4e3a\uff0c\u884c\u4e3a\u4e0d\u7aef\u7684\u90e8\u4ef6\u4ea4\u6362\u7684\u5148\u4f8b\uff0c\u4ee5\u53ca\u6211\u4eec\u65e0\u6cd5\u752812 Pro\u91cd\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u4eba\u4eec\u53ef\u80fd\u5e0c\u671b\u82f9\u679c\u80fd\u5728\u672a\u6765\u7684\u8f6f\u4ef6\u66f4\u65b0\u4e2d\u89e3\u51b3iPhone 12\u6444\u50cf\u5934\u4ea4\u6362\u884c\u4e3a\u3002\u4f46\u7ed3\u5408\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u53ca\u82f9\u679c\u5728iPhone\u5168\u529f\u80fd\u65b9\u9762\u8bbe\u7f6e\u7684\u6240\u6709\u5176\u4ed6\u9519\u8bef\u3001\u6280\u5de7\u548c\u6545\u610f\u9501\u5b9a\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u8ff9\u8c61\uff0c\u8868\u660e\u9664\u975e\u4ece\u5185\u90e8\u3001\u5ba2\u6237\u9700\u6c42\u6216\u6cd5\u5f8b\u4e0a\u505a\u51fa\u91cd\u5927\u6539\u53d8\uff0c\u5426\u5219\u60c5\u51b5\u4e0d\u4f1a\u53d8\u5f97\u66f4\u597d\u3002\n\u6211\u4eec\u8054\u7cfb\u4e86\u82f9\u679c\u516c\u53f8\uff0c\u544a\u8bc9\u4ed6\u4eec\u6211\u4eec\u7684\u53d1\u73b0\uff0c\u82f9\u679c\u516c\u53f8\u8868\u793a\u4ed6\u4eec\u4f1a\u7ed9\u6211\u4eec\u56de\u590d\u7684\u3002\u5982\u679c\u6536\u5230\u5b98\u65b9\u56de\u590d\uff0c\u6211\u4eec\u5c06\u66f4\u65b0\u6b64\u5e16\u5b50\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u4eec\u6b63\u5728\u79ef\u6781\u5730\u91cd\u65b0\u8bc4\u4f30\u6211\u4eec\u7684\u53ef\u7ef4\u4fee\u6027\u91cf\u8868\u5728\u672a\u6765\u5bf9iPhone\u7684\u8bc4\u5206\u3002\n\u5728\u7ef4\u4fee\u754c\uff0ciPhone\u5728\u4f7f\u7528\u53e6\u4e00\u6b3e\u624b\u673a\u7684\u6b63\u7248\u90e8\u4ef6\u65f6\u8868\u73b0\u4e0d\u4f73\u5e76\u4e0d\u662f\u4ec0\u4e48\u65b0\u9c9c\u4e8b\u3002\u5728\u82f9\u679c\u6388\u6743\u7f51\u7edc\u4e4b\u5916\u5de5\u4f5c\u7684\u6280\u672f\u4eba\u5458\u7ecf\u5e38\u4f7f\u7528\u7565\u5e26\u5f02\u56fd\u60c5\u8c03\u7684\u5de5\u5177\u6765\u4fee\u590d\u8fd9\u4e9b\u95ee\u9898\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u6539\u53d8\u5b58\u50a8\u5728\u5fae\u5c0fEEPROM\u82af\u7247\u4e0a\u7684\u5e8f\u5217\u53f7\u3002\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u79f0\u4e3a\u201c\u8f6f\u201d\u5e8f\u5217\u53f7\u95ee\u9898\u3002\u5b83\u4eec\u901a\u5e38\u53ea\u6709\u77e5\u60c5\u7684\u4fee\u7406\u5e97\u624d\u80fd\u4fee\u7406\uff0c\u800c\u628aDIY\u4fee\u7406\u5e08\u51b7\u843d\u5728\u4e00\u8fb9\u3002\nIPhone5s\u4e2d\u7684Touch ID\u4f20\u611f\u5668\u51fa\u73b0\u4e86\u4e00\u4e2a\u201c\u786c\u201d\u7684\u4e32\u884c\u5339\u914d\u95ee\u9898\uff0c\u5b83\u7684\u7279\u70b9\u662f\u4e00\u4e2aTouch ID\u4f20\u611f\u5668\uff0c\u5982\u679c\u6ca1\u6709\u82f9\u679c\u6280\u672f\u5bf9iPhone\u4e2d\u7684\u5b89\u5168\u98de\u5730\u8fdb\u884c\u91cd\u65b0\u7f16\u7a0b\uff0c\u8fd9\u4e2a\u4f20\u611f\u5668\u662f\u65e0\u6cd5\u66f4\u6362\u7684\u3002IPhone X\u7684\u9762\u90e8\u8bc6\u522b\u4e5f\u662f\u5982\u6b64\uff1a\u66f4\u6362\u5c4f\u5e55\u548c\u4f20\u611f\u5668\uff0c\u4f60\u5c31\u6ca1\u6709\u4e86\u3002\u7136\u540eiPhone XR\u3001XS\u548cXS Max\u5230\u8fbe\uff0c\u4ed6\u4eec\u8b66\u544a\u4f60\uff0c\u5982\u679c\u4f60\u66f4\u6362\u7535\u6c60\uff0c\u5c31\u9700\u8981\u201c\u670d\u52a1\u201d\u3002\u540c\u6837\u7684\u8b66\u544a\u6280\u5de7\u4e5f\u51fa\u73b0\u5728iPhone11\u4e0a\u3002\u6bcf\u4e00\u4e2a\u8b66\u544a\u90fd\u4f1a\u7cfb\u7edf\u6027\u5730\u524a\u5f31\u4f60\u5c06\u624b\u673a\u6062\u590d\u5230\u539f\u59cb\u72b6\u6001\u7684\u80fd\u529b\u3002\u867d\u7136\u6bcf\u4e00\u6b21\u6539\u53d8\u90fd\u5265\u593a\u4e86\u56fa\u5b9a\u5728\u82f9\u679c\u7f51\u7edc\u4e4b\u5916\u7684\u624b\u673a\u7684\u4e00\u4e9b\u529f\u80fd\uff0c\u4f46\u5b83\u4eec\u4f3c\u4e4e\u662f\u4e2a\u4eba\u7684\u6743\u8861\uff0c\u800c\u4e0d\u662f\u4e00\u7cfb\u5217\u75f4\u8ff7\u7684\u6a21\u5f0f\u3002\n\u4f60\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u8b66\u544aiPhone\u7528\u6237\u6ce8\u610f\u975e\u6b63\u7248\u90e8\u4ef6\uff0c\u7279\u522b\u662f\u5982\u679c\u624b\u673a\u662f\u4e8c\u624b\u4e70\u7684\uff0c\u662f\u5f88\u6709\u7528\u7684\u4fe1\u606f\u3002\u82f9\u679c\u7684\u5b89\u5168\u6a21\u5f0f\u53ef\u80fd\u8db3\u591f\u8106\u5f31\uff0c\u4ee5\u81f3\u4e8e\u7b2c\u4e09\u65b9Touch ID\u6216Face ID\u7684\u66f4\u6362\u5e26\u6765\u4e86\u95ee\u9898\u3002(\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u6e3a\u832b\u7684\u673a\u4f1a-\u82f9\u679c\u7684\u5b89\u5168\u56e2\u961f\u662f\u4e00\u6d41\u7684\uff0c\u8c37\u6b4c\u548c\u4e09\u661f\u5141\u8bb8\u6beb\u65e0\u95ee\u9898\u5730\u4ea4\u6362\u6307\u7eb9\u4f20\u611f\u5668\u3002)\u3002\u4f46\u4e3b\u6444\u50cf\u5934\u6a21\u5757\u4e0d\u662f\u5b89\u5168\u7ec4\u4ef6\u3002\u8fd9\u662f\u4e00\u4e2a\u5bb9\u6613\u51fa\u73b0\u6545\u969c\u548c\u635f\u574f\u7684\u90e8\u4ef6\uff0c\u53ef\u4ee5\u4ece\u5176\u4ed6\u635f\u574f\u7684iPhone\u4e0a\u83b7\u5f97\u3002\u5bf9\u7b80\u5355\u7684\u76f8\u673a\u4ea4\u6362\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u68c0\u67e5\u4f1a\u6bd2\u5bb3iPhone\u7ef4\u4fee\u548c\u8f6c\u552e\u5e02\u573a\u3002\u7531\u4e8e\u5bf9iPhone\u8d2d\u4e70\u8005\u6ca1\u6709\u660e\u663e\u7684\u597d\u5904\uff0c\u5b83\u6563\u53d1\u7740\u8d2a\u5a6a\u7684\u5473\u9053\u3002\u6216\u8005\u66f4\u7cdf\uff1a\u6709\u8ba1\u5212\u7684\u6dd8\u6c70\u3002\n\u82f9\u679c\u5728\u5176\u6700\u8fd1\u7684\u73af\u5883\u62a5\u544a\u4e2d\u8868\u793a\uff0c\u5176\u4ea7\u54c1\u4ea7\u751f\u7684\u6392\u653e\u4e2d\u670976%\u662f\u5728\u5236\u9020\u4e1a\u4ea7\u751f\u7684\u3002\u8be5\u516c\u53f8\u58f0\u79f0\uff0c\u201c\u4f7f\u7ef4\u4fee\u66f4\u65b9\u4fbf\u3001\u66f4\u53ef\u9760\u201d\u4e0e\u5176\u73af\u5883\u76ee\u6807\u76f4\u63a5\u4e00\u81f4\u3002\u82f9\u679c\u58f0\u79f0\uff0c\u5b83\u5df2\u7ecf\u505a\u51fa\u4e86\u201c\u8bbe\u8ba1\u9009\u62e9\uff0c\u4f7f\u4ea7\u54c1\u66f4\u5bb9\u6613\u7ef4\u4fee\u3002\u201d\u8003\u8651\u5230\u4e16\u754c\u4e0aiPhone\u7684\u6570\u91cf\u5de8\u5927\uff0c\u800c\u4e14\u5b83\u4eec\u7684\u90e8\u4ef6\u6709\u53ef\u80fd\u88ab\u91cd\u590d\u4f7f\u7528\uff0c\u5f88\u96be\u770b\u51fa\u6536\u7d27\u83b7\u5f97\u666e\u901a\u7ef4\u4fee\u7684\u673a\u4f1a\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\u3002\n\u76f8\u53cd\uff0c\u82f9\u679c\u6b63\u5728\u8695\u98df\u6211\u4eec\u7684\u81ea\u7531\u3002\u7ef4\u4fee\u6743\u662f\u6307\u6211\u4eec\u53ef\u4ee5\u5728\u6ca1\u6709\u5236\u9020\u5546\u8bb8\u53ef\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u81ea\u5df1\u5bb6\u91cc\u5b89\u5168\u5730\u4fee\u7406\u6211\u4eec\u81ea\u5df1\u7684\u4e1c\u897f\u3002\u5728\u7f8e\u56fd\u8bb8\u591a\u5dde\uff0c\u4fee\u7406\u6743\u8981\u6c42\u4efb\u4f55\u9700\u8981\u4fee\u590d\u5176\u4ea7\u54c1\u7684\u5de5\u5177\u7684\u5236\u9020\u5546\u90fd\u5fc5\u987b\u5411\u516c\u4f17\u63d0\u4f9b\u8be5\u5de5\u5177\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5b83\u81ea\u5df1\u7684\u6280\u672f\u4eba\u5458\u3002\u5982\u679c\u901a\u8fc7\uff0c\u8fd9\u9879\u6cd5\u5f8b\u5c06\u5411\u72ec\u7acb\u7684\u4fee\u590d\u8005\u548c\u597d\u5947\u7684DIY\u7c7b\u578b\u5f00\u653e\u82f9\u679c\u7684\u8f6f\u4ef6\u201c\u914d\u7f6e\u201d\u5de5\u5177\u3002\u4eba\u4eec\u53ef\u4ee5\u4ece\u5e9f\u5f03\u7684iPhone\u4e2d\u63d0\u53d6\u6709\u4ef7\u503c\u7684\u76f8\u673a\u3001\u5c4f\u5e55\u548c\u5176\u4ed6\u90e8\u4ef6\uff0c\u7528\u5b83\u4eec\u4fee\u7406\u81ea\u5df1\u7684iPhone\uff0c\u5e76\u63a8\u8fdf\u8d2d\u4e70\u65b0\u8bbe\u5907\u4e00\u6bb5\u65f6\u95f4\u3002\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u957f\u671f\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4e0d\u8981\u518d\u91c7\u53d6\u6298\u4e2d\u63aa\u65bd\uff0c\u5e0c\u671b\u82f9\u679c\u8fd9\u6b21\u4e0d\u662f\u6545\u610f\u8fd9\u4e48\u505a\u7684\u3002\u5f88\u660e\u663e\uff0c\u552f\u4e00\u7684\u51fa\u8def\u662f\u786e\u4fdd\u6d88\u8d39\u8005\u80fd\u591f\u83b7\u5f97\u82f9\u679c\u4e3a\u4ed6\u4eec\u7684\u6280\u672f\u4eba\u5458\u63d0\u4f9b\u7684\u76f8\u540c\u7684\u7ef4\u4fee\u5de5\u5177\u3002\u8fd9\u662f\u6211\u4eec\u7684\u624b\u673a\uff0c\u6211\u4eec\u5e94\u8be5\u6709\u6743\u4fee\u7406\u5b83\u3002\n\u4fdd\u969c\u8fd9\u4e00\u6743\u5229\u7684\u552f\u4e00\u65b9\u6cd5\u662f\u901a\u8fc7\u4e00\u9879\u6cd5\u5f8b\u300220\u4e2a\u5dde\u968f\u65f6\u51c6\u5907\u8fd9\u4e48\u505a\u3002\u6253\u7535\u8bdd\u7ed9\u4f60\u4eec\u7684\u7acb\u6cd5\u8005\uff0c\u544a\u8bc9\u4ed6\u4eec\u73b0\u5728\u662f\u65f6\u5019\u6062\u590d\u6211\u4eec\u4fee\u590d\u7684\u6743\u5229\u4e86\u3002", "note_en": "After exhaustive testing, comparing notes with multiple repair technicians, and reviewing leaked Apple training documents, we\u2019ve found that the iPhone 12 camera is entirely unreliable when swapped between iPhones.\n This latest fault, along with indications from Apple\u2019s repair guides, makes it more clear than ever: Apple, by design or neglect or both, is making it extremely hard to repair an iPhone without their blessing. This may be a bug that Apple eventually fixes. There is even precedent for iPhone parts misbehaving when swapped between phones.\n But it is also possible that Apple is planning on locking out all unauthorized iPhone camera and screen repairs. Apple\u2019s internal training guides tell authorized technicians that, starting with the 12 and its variants, they will need to run Apple\u2019s proprietary, cloud-linked System Configuration app to fully repair cameras and screens.\n    We scored the iPhone 12 a 6 out of 10 for repairability when we tore it down last week. Like most iPhones, it is a device designed, generally, to be opened and serviced, even if Apple prefers that only its  technicians do so. Most parts can be replaced, the design prioritizes screws instead of glue, and critical components like the display and battery are some of the easiest repairs.\n But after seeing some extremely odd results in our standard camera repair tests\u2014spurred further by YouTuber Hugh Jeffreys,  whose results matched our own\u2014we felt compelled to dig deeper. The iPhone 12 camera, when transferred to another iPhone 12, appears to work on launch, but  fails miserably in actual use. It refuses to switch to the ultrawide camera, responds only to certain camera modes, and occasionally hangs and becomes completely unresponsive.\n  Until this point, cameras have generally been easy to swap between iPhones of the same model. Even our iPhone 12 Pro tests had no issues:  every function worked fine.\n There is some precedent for iPhone parts reacting badly to swaps, even if Apple didn\u2019t willfully cause the issue. Apple used three different manufacturers for iPhone 7 and 8 Plus LCD screens; swapping between them can cause  \u201cghost touch\u201d and other response issues. Replacement  Taptic Engines in the iPhone 7 and 8 occasionally misbehave, fixable only if you restore the original engine\u2019s serial number.\n Even if the 12\u2019s camera issues are a one-off bug, there is reason to be concerned. In Apple\u2019s internal training guides for the iPhone 12, authorized technicians are told that, starting with the 12, they will need to run Apple\u2019s proprietary, cloud-linked System Configuration app to fully repair cameras and screens.\n  This doesn\u2019t mean that an iPhone camera, or screen, will not work  at all without an official tech\u2019s touch. We performed multiple screen-swaps between iPhone 12 models and they function as expected, albeit with Apple\u2019s misleading on-screen warning that the displays might not be \u201cgenuine\u201d (even though they are). But it doesn\u2019t look good for independent repair. Apple is putting yet another question mark on a core component of the iPhone. Why? Why does a camera need to have its serial number authorized remotely by Apple just to let someone take pictures with their phone?\n Given the buggy-but-technically-working behavior, the precedent for misbehaving part swaps, and our inability to recreate the issue with the 12 Pro, one might hope that Apple will address iPhone 12 camera swap behavior in a future software update. But taken together with the System Configuration document, and all the other  bugs,  tricks, and  intentional lock-outs that Apple has put in the way of fully functioning iPhones, we take this as a sign that things won\u2019t get any better unless there is major change\u2014from within, from customer demand, or from the law.\n We reached out to Apple with our findings, and the company has said they will get back to us. We will update this post if we receive an official response. In the meantime, we are actively reevaluating how our repairability scale scores iPhones going forward.\n   In repair circles, iPhones behaving badly with genuine parts from another phone is not new. Techs working outside Apple\u2019s authorized network often fix these issues with  slightly exotic tools that change serial numbers stored on tiny  EEPROM chips. You might call these \u201csoft\u201d serial number issues. They are usually fixable only by repair shops who are in-the-know, and leave DIY fixers in the cold.\n A \u201chard\u201d serial-match issue arrived with the Touch ID sensor in the iPhone 5s, which featured a Touch ID sensor that could not be replaced without an Apple tech reprogramming  the Secure Enclave in your iPhone. The same went for Face ID on the iPhone X: replace the screen and its sensors and you\u2019re going without. Then the iPhone XR, XS, and XS Max arrived, and they  warned you about needing \u201cService\u201d if you changed the battery. The same kinda-works-with-a-warning trick  showed up on the iPhone 11. Each one systematically eroded your ability to restore your phone to its original condition. And while each change took away some functionality from phones fixed outside Apple\u2019s network, they seemed like individual trade-offs, not a pattern of serial obsession.\n You could argue that warning an iPhone owner about non-genuine parts, especially if the phone was bought used, is useful information. Apple\u2019s security model may be fragile enough that third-party Touch ID or Face ID replacements pose a problem. (That\u2019s a pretty long shot\u2014Apple\u2019s security team is top-notch, and  Google and  Samsung allow for fingerprint sensor swaps without issue.) But the main camera module is not a security component. It\u2019s a part  prone to malfunction and damage, and can be harvested from otherwise-broken iPhones. Putting an authentication check on a simple camera swap poisons the iPhone repair and resale market. With no obvious benefit for iPhone buyers, it reeks of greed. Or worse: planned obsolescence.\n   Apple states in  its recent environmental report that 76 percent of the emissions created by its products are created in manufacturing. It claims that \u201cmaking repairs more convenient and reliable is directly aligned\u201d with its environmental goals. And Apple claims that it has made \u201cdesign choices so that products are easier to repair.\u201d Given the huge number of iPhones in the world, and the  potential for reusing their components, it\u2019s hard to see how tightening access to common repairs fits these goals.\n Instead, Apple is nibbling away at our freedoms. Right to repair means that we can fix our own things in the safety of our own homes without the permission of the manufacturer.  Right to Repair bills in many US states demand that any manufacturer that requires a tool for fixing its products provide that tool to the public, not just its own technicians. If passed, this law would open up Apple\u2019s software \u201cconfiguration\u201d tools to independent fixers and curious do-it-yourself types. People could extract valuable cameras, screens, and other parts from discarded iPhones, fix their own iPhones with them, and put off buying new devices for a while.\n We need a long term solution. No more half-measures, hoping Apple didn\u2019t do it on purpose this time. It\u2019s become clear that the only way forward is to make sure that consumers have access to the same repair tools that Apple provides their technicians. It\u2019s our phone, we should have the right to fix it.\n The only way to guarantee that right is to pass a law. Twenty states stand ready to do just that.  Call your legislator and tell them that the time has come to restore our Right to Repair.", "posttime": "2020-10-31 02:46:22", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "iphone,\u82f9\u679c", "title": "\u5f53\u5728iPhone\u4e4b\u95f4\u4ea4\u6362\u65f6\uff0ciPhone12\u673a\u578b\u4e0a\u7684\u5c4f\u5e55\u6216\u6444\u50cf\u5934\u53d8\u5f97\u4e0d\u53ef\u9760\uff0c\u8fd9\u53ef\u80fd\u4f1a\u963b\u6b62\u6240\u6709\u672a\u7ecf\u6388\u6743\u7684iPhone\u6444\u50cf\u5934\u548c\u5c4f\u5e55\u7ef4\u4fee", "title_en": "The screens or cameras on iPhone 12 models become unreliable when swapped between iPhones, which may lock out all unauthorized iPhone camera and screen repairs", "transed": 1, "url": "https://www.ifixit.com/News/45921/is-this-the-end-of-the-repairable-iphone", "via": "", "real_tags": ["iphone", "\u82f9\u679c"]}, {"category": "", "categoryclass": "", "imagename": "f5e1f9303e62905cd587632d172d1649.gif", "infoid": 1032347, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6211\u7684\u8bbe\u8ba1\u5e08\u5de5\u4f5c\u4e2d\uff0c\u8272\u5f69\u4ece\u6765\u90fd\u4e0d\u662f\u6211\u7684\u5f3a\u9879\u3002\u6211\u7ecf\u5e38\u8bd5\u56fe\u907f\u514d\u5b8c\u5168\u5904\u7406\u5b83(\u5c31\u50cf\u5728\u6211\u7684\u7ad9\u70b9\u7684\u524d\u4e00\u4e2a\u7248\u672c\u4e2d\u770b\u5230\u7684\u90a3\u6837)\u3002\u901a\u8fc7\u6559\u80b2\u548c\u7ecf\u9a8c\uff0c\u6211\u5b66\u5230\u4e86\u8272\u5f69\u7406\u8bba\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u57fa\u672c\u4e0a\u907f\u514d\u4e86\u707e\u96be\uff0c\u4f46\u6211\u7684\u521d\u7ea7\u8fc7\u7a0b\u4e00\u70b9\u4e5f\u4e0d\u53ef\u9760\u3002\n\u6211\u7684V6\u91cd\u65b0\u8bbe\u8ba1\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u673a\u4f1a\u6765\u6539\u8fdb\u6211\u7684\u914d\u8272\u6e38\u620f\uff0c\u56e0\u4e3a\u6211\u7684\u7f51\u7ad9\u662f\u4e3a\u4e86\u4ee3\u8868\u6211\uff0c\u800c\u4e14\u6211\u559c\u6b22\u8ba4\u4e3a\u6211\u6709\u591a\u59ff\u591a\u5f69\u7684\u4e2a\u6027\u3002\u4e3a\u4e86\u771f\u6b63\u8ba9\u7ec3\u4e60\u53d8\u5f97\u6709\u4ef7\u503c\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u79cd\u914d\u8272\u65b9\u6848\uff0c\u6211\u60f3\u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5e94\u7528\u4efb\u610f\u6570\u91cf\u7684\u914d\u8272\u65b9\u6848\u7684\u7cfb\u7edf\u3002\u8fd9\u5c06\u7ed9\u6211\u4e00\u4e2a\u4e0d\u65ad\u5c1d\u8bd5\u8272\u5f69\u7684\u7a7a\u95f4\uff0c\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5b83\u5c06\u5bb9\u7eb3\u4e00\u7cfb\u5217\u7684\u590d\u6742\u6027\uff0c\u8ba9\u6211\u6709\u7a7a\u95f4\u968f\u7740\u6280\u80fd\u7684\u63d0\u9ad8\u800c\u6210\u957f\u3002\n\u6211\u7684\u8272\u5f69\u5904\u7406\u7684\u7b2c\u4e00\u6b65\u662f\u4e0d\u53d8\u7684\uff1a\u5148\u7528\u4e8c\u8fdb\u5236\u9ed1\u767d\u56fa\u5316\u5e03\u5c40\uff0c\u7136\u540e\u518d\u7528\u7070\u5ea6\u5206\u5c42\uff0c\u5f62\u6210\u66f4\u7ec6\u5fae\u7684\u5bf9\u6bd4\u5ea6\u3002\n\u4e00\u65e6\u6211\u5728\u4e00\u4e2a\u597d\u7684\u4f4d\u7f6e\u6709\u4e86\u5bf9\u6bd4\u5ea6\uff0c\u6211\u5c31\u53ef\u4ee5\u63a8\u65ad\u51fa\u8981\u5728\u5176\u4e0a\u6620\u5c04\u989c\u8272\u7684\u8c03\u8272\u677f\u3002\u6211\u7684\u7070\u5ea6\u5bf9\u6bd4\u5ea6\u5de5\u4f5c\u4ea7\u751f\u4e86\u4ee5\u4e0b\u516d\u4e2a\u503c\uff1a\n\u6587\u672c\u53cd\u8f6c(\u767d\u8272)\uff1a\u8c03\u8272\u677f\u4e2d\u6700\u6d45\u7684\u989c\u8272\u3002\u76ee\u524d\uff0c\u5b83\u4e00\u76f4\u662f\u767d\u8272\u7684\uff0c\u5b83\u7684\u4e2d\u7acb\u6027\u4f7f\u5f97\u5b83\u53ef\u4ee5\u7528\u6765\u6846\u4f4f\u56fe\u50cf\uff0c\u5c06\u5b83\u4eec\u7684\u989c\u8272\u4e0e\u6211\u7684\u989c\u8272\u9694\u79bb\u5f00\u6765\u3002\n\u80cc\u666f(6%\u7070\u8272)\uff1a\u8c03\u8272\u677f\u4e2d\u7b2c\u4e8c\u4eae\u7684\u989c\u8272\u3002\u5b83\u8db3\u591f\u6697\uff0c\u767d\u8272\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4e0e\u5b83\u533a\u5206\u5f00\u6765\uff0c\u4f46\u4e5f\u8db3\u591f\u4eae\uff0c\u4ee5\u81f3\u4e8e\u5b83\u672c\u8eab\u770b\u8d77\u6765\u51e0\u4e4e\u662f\u767d\u8272\u7684\u3002\n\u80cc\u666fAlt(24%\u7070\u8272)\uff1a\u6bd4\u80cc\u666f\u7565\u6697\u3002\u4e3b\u8981\u7528\u4e8e\u8fb9\u6846\u548c\u5176\u4ed6\u975e\u6587\u672c\u754c\u9762\u5143\u7d20\u3002\n\u91cd\u70b91(54%\u7070\u8272)\uff1a\u4e0e\u6587\u672c\u548c\u80cc\u666f\u5f62\u6210\u660e\u663e\u5bf9\u6bd4\u7684\u660e\u4eae\u8272\u8c03\u3002\u4e3b\u8981\u7528\u4e8e\u5143\u6570\u636e\u3002\n\u91cd\u97f32(30%\u7070\u8272)\uff1a\u901a\u5e38\u662f\u8c03\u8272\u677f\u4e2d\u6700\u660e\u663e\u548c\u6700\u9971\u548c\u7684\u989c\u8272\uff0c\u5bf9\u4e8e\u5185\u8054\u94fe\u63a5\u548c\u5176\u4ed6\u9700\u8981\u771f\u6b63\u5f39\u51fa\u7684\u90e8\u5206\u4f7f\u7528\u5f97\u5f88\u5c11\u3002\n\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5f00\u59cb\u4e3a\u9879\u76ee\u5f00\u53d1\u8c03\u8272\u677f\uff1a\u67e5\u627e\u73b0\u6709\u8c03\u8272\u677f\u6216\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u8c03\u8272\u677f\u3002\u627e\u5230\u4e00\u4e2a\u73b0\u6709\u7684\u53ea\u9700\u7741\u5927\u4f60\u7684\u773c\u775b\u5c31\u53ef\u4ee5\u4e86\u3002\u6211\u503e\u5411\u4e8e\u5728\u7ed8\u753b\u3001\u96d5\u5851\u3001\u63d2\u56fe\u3001\u6444\u5f71\u548c\u5176\u4ed6\u89c6\u89c9\u827a\u672f\u4e2d\u627e\u5230\u6700\u591a\u7684\u7075\u611f\u3002\u5e9e\u7136\u5927\u7269\u662f\u6211\u6700\u53ef\u9760\u7684\u8d44\u6e90\u4e4b\u4e00\u3002\n\u5728\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u8c03\u8272\u677f\u65f6\uff0c\u6211\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u4f9d\u8d56\u5386\u53f2\u4e0a\u7684RYB\u8272\u8f6e\uff0c\u5b83\u5047\u5b9a\u7ea2\u8272\u3001\u9ec4\u8272\u548c\u84dd\u8272\u662f\u6240\u6709\u5176\u4ed6\u57fa\u672c\u989c\u8272\u7684\u539f\u8272\u3002\u73b0\u4ee3\u8272\u5f69\u7406\u8bba\u66f4\u52a0\u590d\u6742\uff0c\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u8bb2\u5230\uff0c\u4f46\u662fRYB\u8272\u8f6e\u5728\u6211\u5f88\u5c0f\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u8fdb\u5165\u6211\u7684\u5927\u8111\u4e86\uff0c\u6211\u4ecd\u7136\u89c9\u5f97\u5b83\u5f88\u6709\u7528\u3002\u4ee5\u4e0b\u662f\u5728\u7ec4\u5408\u8c03\u8272\u677f\u65f6\u503c\u5f97\u8003\u8651\u7684\u4e00\u4e9b\u8272\u8f6e\u6982\u5ff5\uff1a\n\u6b21\u8981\u989c\u8272\u662f\u4efb\u610f\u4e24\u79cd\u539f\u8272\u7684\u5747\u5300\u7ec4\u5408\uff1a\u9ec4\u8272\u52a0\u4e0a\u7ea2\u8272\u7b49\u4e8e\u6a59\u8272\uff0c\u7ea2\u8272\u52a0\u4e0a\u84dd\u8272\u7b49\u4e8e\u7d2b\u8272\uff0c\u84dd\u8272\u52a0\u4e0a\u9ec4\u8272\u7b49\u4e8e\u7eff\u8272\u3002\n\u7b2c\u4e09\u79cd\u989c\u8272\u662f\u539f\u8272\u548c\u76f8\u90bb\u6b21\u8272\u7684\u5747\u5300\u7ec4\u5408\uff1a\u9ec4\u6a59\u8272\u3001\u6a59\u7ea2\u8272\u3001\u7ea2\u7d2b\u7f57\u5170\u8272\u3001\u7d2b\u7f57\u5170\u8272\u3001\u84dd\u7eff\u8272\u3001\u7eff\u9ec4\u8272\u3002\n\u7406\u8bba\u4e0a\uff0c\u6700\u7eaf\u51c0\u7684\u989c\u8272\u5bf9\u5728\u8f6e\u5b50\u4e0a\u662f\u5747\u5300\u5206\u5e03\u7684\uff0c\u4f8b\u5982\u4e92\u8865\u8272(\u8f6e\u5b50\u4e0a\u5f7c\u6b64\u76f8\u5bf9)\u548c\u4e09\u8272(\u4e00\u7ec4\u4e09\u79cd\u989c\u8272\u7ec4\u6210\u4e00\u4e2a\u7b49\u8fb9\u4e09\u89d2\u5f62)\u3002\n\u6b64\u5916\uff0c\u7531\u4e8e\u57fa\u8272\u5728\u5316\u5986\u4e2d\u7684\u6bd4\u4f8b\uff0c\u989c\u8272\u4e0e\u540c\u7c7b\u4e2d\u7684\u5176\u4ed6\u989c\u8272\u642d\u914d\u5f97\u5f88\u597d\uff1a\u57fa\u8272\u4e0e\u57fa\u8272(0\uff1a1)\uff0c\u6b21\u8272\u4e0e\u6b21\u8981\u8272(1\uff1a1)\uff0c\u4e09\u8272\u4e0e\u4e09\u8272(2\uff1a1)\u3002\n\u627e\u5230\u8c03\u8272\u677f\u7684\u57fa\u7840\u662f\u5f88\u5bb9\u6613\u7684\uff0c\u4f46\u8ba9\u57fa\u672c\u8c03\u8272\u677f\u4e0e\u8bbe\u8ba1\u4e00\u8d77\u5de5\u4f5c\u5f88\u5c11\u4ec5\u4ec5\u662f\u8f6c\u79fb\u7684\u95ee\u9898\uff0c\u8fd9\u4e5f\u662f\u6211\u7ecf\u5e38\u9047\u5230\u9ebb\u70e6\u7684\u5730\u65b9\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8272\u5f69\u6700\u5927\u7684\u4e24\u4e2a\u7eca\u811a\u77f3\u4e00\u76f4\u662f\u5b9e\u65bd\u548c\u8c03\u6574\u3002\u201c\u6211\u559c\u6b22\u8fd9\u4e2a\u9ec4\u8272\uff0c\u4f46\u5b83\u4e0d\u9002\u5408\u505a\u80cc\u666f\u8272\u3002\u6211\u600e\u4e48\u624d\u80fd\u628a\u5b83\u4fee\u597d\u5462\uff1f\u201c\u3002\u4f7f\u7528\u6ed1\u5757\u3001\u62fe\u8272\u5668\u548c\u624b\u5de5\u7f16\u7801\u7684\u5341\u516d\u8fdb\u5236\u503c\u6765\u6570\u5b57\u8c03\u6574\u989c\u8272\u8ba9\u6211\u4e0d\u77e5\u6240\u63aa\u3002\u6211\u627e\u4e0d\u5230\u75af\u72c2\u7684\u65b9\u6cd5\u3002\u800c\u4e14\uff0c\u5728\u66f4\u5927\u7684\u8bbe\u8ba1\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u548c\u8c03\u6574\u5b83\u4eec(\u65e0\u8bba\u662f\u5728\u6a21\u578b\u4e2d\u8fd8\u662f\u5728\u4ee3\u7801\u4e2d)\u5f80\u5f80\u662f\u4e00\u9879\u7e41\u91cd\u7684\u4efb\u52a1\u3002\n\u8c22\u5929\u8c22\u5730\uff0c\u6709\u6280\u672f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u6211\u5bf9\u989c\u8272\u7684\u65b0\u6001\u5ea6\u662f\u7531\u4e24\u79cd\u5bf9\u6211\u6765\u8bf4\u76f8\u5bf9\u8f83\u65b0\u7684\u6280\u672f\u4f7f\u5176\u6210\u4e3a\u53ef\u80fd\u7684\uff1aHSL\u548cSass\u3002\u5bf9\u4e8e\u989c\u8272\u8c03\u6574\uff0cHSL\u4e3a\u8fc7\u7a0b\u5e26\u6765\u4e86\u5176\u4ed6\u989c\u8272\u7cfb\u7edf\u6240\u7f3a\u4e4f\u7684\u7c92\u5ea6\u63a7\u5236\u7ea7\u522b\u3002\u5bf9\u4e8e\u5b9e\u73b0\uff0cSass\u5141\u8bb8\u6211\u5c06\u989c\u8272\u503c\u8d4b\u7ed9\u53d8\u91cf\uff0c\u8fd9\u4f7f\u5f97\u7cfb\u7edf\u8303\u56f4\u5185\u7684\u8fed\u4ee3\u53d8\u5f97\u5feb\u901f\u800c\u8f7b\u677e\u3002\n\u6211\u4eec\u4e4b\u524d\u4ecb\u7ecd\u7684RYB\u8272\u8f6e\u662f\u7528\u6765\u6df7\u5408\u6cb9\u6f06\u3001\u58a8\u6c34\u3001\u67d3\u6599\u7b49\u7684\u3002\u5b83\u662f\u4e00\u79cd\u51cf\u8272\u6a21\u578b\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u989c\u8272\u662f\u901a\u8fc7\u4ece\u5149\u4e2d\u51cf\u53bb\u6ce2\u957f\u800c\u53d8\u5f97\u53ef\u89c1\u7684\u3002\u73b0\u4ee3\u8272\u5f69\u7406\u8bba\u53d1\u73b0\uff0c\u5728\u51cf\u6cd5\u6a21\u578b\u4e2d\uff0c\u989c\u8272\u7684\u5149\u8c31\u66f4\u5e7f\uff0c\u57fa\u8272\u7565\u6709\u4e0d\u540c\uff1a\u9752\u8272\u3001\u6d0b\u7ea2\u548c\u9ec4\u8272\u3002\u8fd9\u4e9b\u662fCMYK(K\u4ee3\u8868\u9ed1\u8272)\u7684\u57fa\u7840\uff0c\u8fd9\u662f\u60a8\u770b\u5230\u7684\u5927\u591a\u6570\u5168\u8272\u6253\u5370\u6750\u6599\u80cc\u540e\u7684\u8fc7\u7a0b\u3002\u4e0e\u4e4b\u76f8\u53cd\u7684\u662f\u76f8\u52a0\u989c\u8272\u6a21\u578bRGB\uff0c\u5176\u57fa\u8272\u4e3a\u7ea2\u8272\u3001\u7eff\u8272\u548c\u84dd\u8272\u3002\u8fd9\u662f\u6295\u5c04\u5728\u5149\u4e2d\u7684\u989c\u8272\u7684\u57fa\u7840\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u7535\u89c6\u3001\u7535\u8111\u548c\u79fb\u52a8\u8bbe\u5907\u7684\u5c4f\u5e55\u4e0a\u770b\u5230\u7684\u90a3\u6837\u3002\nHSL\u662fRGB\u989c\u8272\u6a21\u578b\u7684\u8868\u793a\u5f62\u5f0f\u3002\u5b83\u662f\u57281938\u5e74\u53d1\u660e\u7684\uff0c\u5f53\u65f6\u4eba\u4eec\u671f\u5f85\u7740\u5f69\u8272\u7535\u89c6\u7684\u51fa\u73b0\uff0c\u4f46\u76f4\u52302011\u5e74\uff0c\u5b83\u624d\u8fdb\u5165CSS-\u5728\u90a3\u91cc\u5b83\u6700\u7ec8\u5bf9\u6211\u6700\u6709\u7528\u3002HSL\u4ee3\u8868\u8272\u8c03\u3001\u9971\u548c\u5ea6\u3001\u4eae\u5ea6\uff0c\u8fd9\u4e9b\u90fd\u662f\u989c\u8272\u7684\u57fa\u672c\u5c5e\u6027\uff0c\u76f4\u5230\u6700\u8fd1\u6211\u624d\u771f\u6b63\u7406\u89e3\u3002(\u7c7b\u4f3c\u7684\u7cfb\u7edfHSB\u5728\u5927\u591a\u6570\u8bbe\u8ba1\u8f6f\u4ef6\u4e2d\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u4f46\u9057\u61be\u7684\u662f\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u8003\u8651\u8fc7\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u6216\u8005\u5b83\u53ef\u80fd\u4f1a\u63d0\u4f9b\u4ec0\u4e48\u3002)\u3002\u4e0b\u9762\u7b80\u8981\u4ecb\u7ecd\u4e00\u4e0bHSL\u7684\u5177\u4f53\u7ec6\u8282\uff1a\n\u8272\u8c03\u5b9a\u4e49\u57fa\u672c\u989c\u8272\u3002\u201c\u6d45\u7eff\u201d\u3001\u201c\u6df1\u7eff\u201d\u3001\u201c\u4eae\u7eff\u201d\u3001\u201c\u6697\u7eff\u201d\u90fd\u662f\u7eff\u8272\u7684\u53d8\u4f53\uff0c\u5bf9\u5427\uff1f\u6240\u4ee5\u5728\u6240\u6709\u8fd9\u4e9b\u989c\u8272\u4e2d\uff0c\u7eff\u8272\u662f\u8272\u8c03\u3002\u5728HSL\u4e2d\uff0c\u8272\u8c03\u662f\u75310\u5230360\u4e4b\u95f4\u7684\u6570\u5b57\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u5c06\u8272\u8c03\u5149\u8c31\u60f3\u8c61\u4e3a\u5f84\u5411\u662f\u5f88\u6709\u7528\u7684\u3002HSL\u4f7f\u7528\u5982\u4e0a\u6240\u793a\u7684RGB\u8272\u8f6e\u3002\n\u9971\u548c\u5ea6\u5b9a\u4e49\u989c\u8272\u7684\u9c9c\u8273\u7a0b\u5ea6\u3002\u96f6%\u4e3a\u7070\u8272\uff0c100%\u4e3a\u5b8c\u5168\u9971\u548c\u3002\n\u4eae\u5ea6\u5b9a\u4e49\u989c\u8272\u4e2d\u6709\u591a\u5c11\u9ed1\u8272(\u9634\u5f71)\u6216\u767d\u8272(\u8272\u8c03)\u300250%\u6ca1\u6709\u9634\u5f71\u6216\u8272\u8c03\uff0c0%\u662f\u5168\u9ed1\u7684\uff0c100%\u662f\u5168\u767d\u7684\u3002\n\u4e0b\u9762\u662fCSS\u4e2d\u7684HSL\u8bed\u6cd5(\u8fd9\u662f\u7eff\u677e\u77f3\uff0c\u5177\u6709175\u5ea6\u7684\u8272\u8c03\u3001100%\u7684\u9971\u548c\u5ea6\u548c25%\u7684\u4eae\u5ea6)\uff1a\n\u6211\u53d1\u73b0HSL\u6781\u5927\u5730\u89e3\u653e\u4e86\u6211\u3002\u5386\u53f2\u4e0a\u7684\u8272\u8f6e\u6982\u5ff5\u76f4\u63a5\u6620\u5c04\u5230360\u5ea6\u8272\u8c03\u7cfb\u7edf\uff0cHSL\u7684\u4e09\u4e2a\u57fa\u672c\u5c5e\u6027\u8ba9\u6211\u80fd\u591f\u4ee5\u524d\u6240\u672a\u6709\u7684\u65b9\u5f0f\u5728\u4ee3\u7801\u4e2d\u76f4\u63a5\u521b\u5efa\u548c\u5fae\u8c03\u989c\u8272\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u6211\u662f\u5982\u4f55\u4e0eSass\u4e00\u8d77\u4f7f\u7528\u5b83\u7684\u3002\n\u5b9e\u73b0\u7684\u7b2c\u4e00\u6b65\u662f\u5c06Sass\u53d8\u91cf\u4ece\u6211\u5148\u524d\u786e\u5b9a\u7684\u7ad9\u70b9\u76846\u4e2a\u7070\u5ea6\u503c\u4e2d\u63d0\u53d6\u51fa\u6765\u3002\u6211\u5c06\u53ea\u4f7f\u7528Sass\u5185\u7f6e\u7684darken()\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u8ba1\u7b97\u8fd9\u4e9b\u7279\u5b9a\u7070\u5ea6\u5982\u4f55\u7528\u5341\u516d\u8fdb\u5236\u6216RGB\u8868\u793a\u7684\u8111\u529b\u4f53\u64cd\uff1a\n$Text-COLOR\uff1a\u6df1\u8272(\u767d\u8272\uff0c70%)\uff1b//70%\u7070\u8272$Text-COLOR-\u53cd\u8f6c\uff1a\u767d\u8272\uff1b//0%\u7070\u8272$BG-COLOR\uff1a\u6df1\u8272(\u767d\u8272\uff0c6%)\uff1b//6%\u7070\u8272$BG-COLOR-ALT\uff1a\u6df1\u8272(\u767d\u8272\uff0c24%)\uff1b//24%\u7070\u8272$ACCENT-COLOR 1\uff1a\u6df1\u8272(\u767d\u8272\uff0c54%)\uff1b//54%\u7070\u8272$ACCENT-COLOR 2\uff1a\u6df1\u8272(\u767d\u8272\uff0c30%)\uff1b//30%\u7070\u8272\u3002\n\u5982\u679c\u6211\u6bcf\u6b21\u5728Css\u2026\u4e2d\u6307\u5b9a\u989c\u8272\u65f6\u90fd\u4f7f\u7528\u8fd9\u516d\u4e2a\u53d8\u91cf\u4e2d\u7684\u4e00\u4e2a\u3002\n\u2026\u3002\u53ea\u9700\u8c03\u6574\u8fd9\u516d\u4e2a\u53d8\u91cf\uff0c\u6211\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u66f4\u6539\u6574\u4e2a\u7ad9\u70b9\u7684\u914d\u8272\u65b9\u6848\uff01\n\u8ba9\u6211\u4eec\u7528\u5728\u91ce\u5916\u53d1\u73b0\u7684\u8c03\u8272\u677f\u6765\u68c0\u9a8c\u4e00\u4e0b\u3002\u4e3a\u4e86\u8f7b\u677e\u5904\u7406\uff0c\u6211\u9009\u62e9\u4e86\u4e00\u4e2a\u8c03\u8272\u677f\uff0c\u5b83\u770b\u8d77\u6765\u53ef\u4ee5\u9002\u5e94\u6211\u7684\u7cfb\u7edf\uff0c\u800c\u4e0d\u9700\u8981\u592a\u591a\u7684\u8c03\u6574\u3002\n\u6211\u5c06\u4f7f\u7528Photoshop\u6216Illustrator\u4e2d\u7684\u5438\u7ba1\u5de5\u5177\u6355\u6349\u4e3b\u8272\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u672c\u8eab\u5e76\u4e0d\u652f\u6301HSL\uff0c\u56e0\u6b64\u6211\u5c06\u4f7f\u7528Convert a Color\u5c06\u989c\u8272\u7684\u5341\u516d\u8fdb\u5236\u503c\u8f6c\u6362\u4e3aHSL\uff0c\u7136\u540e\u5c06\u5b83\u4eec\u63d2\u5165\u5230\u6211\u7684\u53d8\u91cf\u4e2d\uff1a\n$text-color\uff1ahsl(321\uff0c14%\uff0c44%)\uff1b//\u6d45\u7d2b\u8272$text-color\u53cd\u8f6c\uff1a\u767d\u8272\uff1b//\u767d\u8272$bg-color\uff1ahsl(45\uff0c50%\uff0c89%)\uff1b//\u6d45\u68d5\u8272$bg-color-alt\uff1ahsl(31\uff0c24%\uff0c63%)\uff1b//\u6d45\u68d5\u8272$accent-color 1\uff1a$bg-color-alt\uff1b//\u6d45\u68d5\u8272$accent-color 2\uff1ahsl(348\uff0c68%\uff0c58%)\uff1b//\u6de1\u7ea2\u8272\u3002\n\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u597d\u7684\u5f00\u59cb\uff01\u9a6c\u4e0a\uff0c\u6211\u5c31\u77e5\u9053$BG-COLOR\u548c$BG-COLOR-ALT\u9700\u8981\u66f4\u8f7b\u4e00\u4e9b\u3002\u6b64\u5916\uff0c$accent-color-1\u9700\u8981\u66f4\u6697\uff0c\u56e0\u4e3a\u5b83\u57fa\u4e8e\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u901a\u8fc7\u518d\u6b21\u4f7f\u7528darken()\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002(\u8bf7\u6ce8\u610f\uff0cdarken()\u6240\u505a\u7684\u5168\u90e8\u5de5\u4f5c\u5c31\u662f\u5c06HSL\u7684\u4eae\u5ea6\u5c5e\u6027\u5411\u96f6\u79fb\u52a8\u6307\u5b9a\u91cf\u3002)\u3002\u4e0d\u9700\u8981\u592a\u591a\u7684\u8c03\u6574\u5c31\u80fd\u628a\u4e1c\u897f\u653e\u5230\u6211\u60f3\u8981\u7684\u5730\u65b9\uff1a\n$Text-COLOR\uff1aHSL(321\uff0c14%\uff0c44%)\uff1b$Text-COLOR-INVERSE\uff1a\u767d\u8272\uff1b$BG-COLOR\uff1aHSL(45\uff0c50%\uff0c94%)\uff1b//+05%\u4eae\u5ea6$BG-COLOR-ALT\uff1aHSL(31\uff0c24%\uff0c88%)\uff1b//+25%\u4eae\u5ea6$ACCENT-COLOR 1\uff1a\u6df1\u8272($BG-COLOR-ALT\uff0c25%)\uff1b$ACCENT-COLOR 2\uff1aHSL(348\uff0c78%\uff0c68%)\uff1b//+10%\u9971\u548c\u5ea6\uff0c+10%\u4eae\u5ea6\u3002\n\u8bed\u8a00\u65e0\u6cd5\u8868\u8fbe\u80fd\u591f\u5982\u6b64\u76f4\u89c2\u5730\u5728\u4ee3\u7801\u4e2d\u8fdb\u884c\u8fd9\u79cd\u989c\u8272\u8c03\u6574\u662f\u591a\u4e48\u4ee4\u4eba\u5174\u594b\u3002\u4f46\u662f\u7b49\u7b49\uff0c\u4e8b\u60c5\u53d8\u5f97\u66f4\u597d\u4e86\u3002\u8ba9\u6211\u4eec\u8bd5\u8bd5\u66f4\u5177\u5192\u9669\u7cbe\u795e\u7684\u4e1c\u897f\u5427\u3002\n\u5982\u679c\u4f60\u8bfb\u8fc7\u672c\u7cfb\u5217\u4e0a\u4e00\u7bc7\u5173\u4e8e\u6392\u7248\u548c\u6bd4\u4f8b\u7684\u6587\u7ae0\uff0c\u4f60\u5c31\u4f1a\u77e5\u9053\u6211\u559c\u6b22\u8bbe\u8ba1\u51b3\u7b56\u6709\u4e00\u4e2a\u5408\u7406\u7684\u57fa\u7840\uff0c\u6211\u559c\u6b22\u7cfb\u7edf\u7684\u7ec4\u4ef6\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u76f8\u4e92\u8054\u7cfb\u3002\u6b63\u5982\u6211\u7684\u6392\u7248\u523b\u5ea6\u662f\u5efa\u7acb\u5728\u6570\u5b57\u95f4\u9694\u4e0a\u4e00\u6837\uff0c\u6211\u4eec\u524d\u9762\u770b\u5230\u7684\u8272\u8f6e\u539f\u7406\u4e5f\u662f\u5982\u6b64\u3002\u5c31\u50cf\u6211\u7684\u5b57\u4f53\u5927\u5c0f\u90fd\u662f\u76f8\u5bf9\u4e8e\u4e00\u4e2a\u57fa\u503c\u4e00\u6837\uff0c\u6211\u7684\u989c\u8272\u4e5f\u53ef\u4ee5\u662f\u8fd9\u6837\u7684\u3002\n\u56e0\u6b64\uff0c\u6211\u5c06\u4f7f\u7528\u4e09\u8272\u7cfb\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u4e00\u4e2a\u8c03\u8272\u677f\uff0c\u8fd9\u662f\u8272\u8f6e\u4e0a\u7684\u4e09\u4e2a\u7b49\u8ddd\u79bb\u8272\u8c03\u3002\u5728HSL\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u4e09\u79cd\u989c\u8272\u7684\u8272\u8c03\u5c5e\u6027\u5c06\u5f7c\u6b64\u76f8\u8ddd120\u5ea6\u3002\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u53ef\u9884\u6d4b\u7684\u95f4\u9694\uff0c\u6211\u5c06\u9009\u62e9\u4e00\u4e2a\u57fa\u672c\u8272\u8c03\uff0c\u5e76\u8ba9Sass\u8ba1\u7b97\u51fa\u5176\u4ed6\u4e24\u4e2a\u8272\u8c03\u5e94\u8be5\u662f\u4ec0\u4e48\u3002\u8fd8\u8bb0\u5f97darken()\u5982\u4f55\u8c03\u6574\u989c\u8272\u7684\u4eae\u5ea6\u5417\uff1fAdjust-hue()\u5bf9\u8272\u8c03\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u6211\u5df2\u7ecf\u51b3\u5b9a\u5c06$accent-Color2\u4f5c\u4e3a\u6211\u7684\u57fa\u8272\uff0c\u56e0\u6b64\u5b83\u5c06\u79fb\u5230\u53d8\u91cf\u5217\u8868\u7684\u9876\u90e8\u3002\u6211\u5c06\u4e3a\u5176\u8d4b\u4e88\u6a59\u7ea2\u8272\u8c03(19\u5ea6)\uff0c\u5e76\u4f7f\u7528adjust-hue()\u4e3a\u5176\u4ed6\u53d8\u91cf\u6307\u5b9a\u9002\u5f53\u7684\u989c\u8272\u8ddd\u79bb\uff1a\n$accent-color 2\uff1ahsl(19,100%\uff0c50%)\uff1b$text-color\uff1a\u8c03\u6574\u8272\u8c03($accent-color 2\uff0c-120deg)\uff1b$text-color\u53cd\u8f6c\uff1a\u767d\u8272\uff1b$bg-color\uff1a\u8c03\u6574\u8272\u8c03($accent-color 2,120\u5ea6)\uff1b$bg-color-alt\uff1a\u6df1\u8272($bg-color\uff0c15%)\uff1b$accent-color 1\uff1a$bg-color-alt\uff1b\n\u8fd9\u4e2a\u8c03\u8272\u677f\u663e\u7136\u9700\u8981\u6bd4\u524d\u4e00\u4e2a\u8c03\u8272\u677f\u505a\u66f4\u591a\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\u6211\u6709\u4e00\u4e9b\u5f88\u597d\u7684\u5de5\u5177\u53ef\u4f9b\u6211\u4f7f\u7528\u3002Darken()\u548cadjust-hue()\u5bf9\u4e8e\u8c03\u6574\u5355\u4e2a\u989c\u8272\u5c5e\u6027\u975e\u5e38\u6709\u7528\uff0c\u4f46\u5982\u679c\u6211\u60f3\u4e00\u6b21\u8c03\u6574\u591a\u4e2a\u5c5e\u6027\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528adjust-color()\uff1a\n$accent-color 2\uff1ahsl(19\uff0c95%\uff0c60%)\uff1b$text-color\uff1aadjust-color($accent-color 2\uff0c$hue\uff1a-120deg\uff0c$\u9971\u548c\u5ea6\uff1a-82\uff0c$lightness\uff1a-18)\uff1b$text-color\u53cd\u8f6c\uff1a\u767d\u8272\uff1b$bg-color\uff1aadjut-color($accent-color 2\uff0c$\u9971\u548c\u5ea6\uff1a-84\uff0c$\u4eae\u5ea6\uff1a35)\uff1b$bg-color-alt\uff1a\u6df1\u8272($bg-color\uff0c$\u9971\u548c\u5ea6\uff1a12\uff0c$\u4eae\u5ea6\uff1a-35)\uff1b$accent-color\uff1a\u8c03\u6574\u989c\u8272($bg-color\uff0c$\u9971\u548c\u5ea6\uff1a12\uff0c$\u4eae\u5ea6\uff1a-35)\uff1b\n\u7531\u4e8e\u8fd9\u4e2a\u8c03\u8272\u677f\u4e2d\u7684\u6240\u6709\u989c\u8272\u90fd\u8bbe\u7f6e\u4e3a\u76f8\u5bf9\u4e8e$accent-Color2\uff0c\u6211\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u90a3\u4e2a\u53d8\u91cf\u6765\u6539\u53d8\u6574\u4e2a\u914d\u8272\u65b9\u6848\u3002\u4e0b\u9762\u662f\u51e0\u79cd\u53d8\u5316\uff0c\u6bcf\u79cd\u53d8\u5316\u90fd\u5c06\u5148\u524d\u7684\u8272\u8c03\u65cb\u8f6c90\u5ea6\u3002\u6700\u540e\u7684\u6f14\u793a\u4f7f\u7528\u4e3b\u9875\uff0c\u8fd9\u4f7f\u5f97\u793a\u4f8b\u4e4b\u95f4\u7684\u989c\u8272\u5dee\u5f02\u66f4\u52a0\u660e\u663e\u3002\n\u6240\u6709\u8fd9\u4e9b\u90fd\u9700\u8981\u5355\u72ec\u7684\u8c03\u6574(\u5982\u679c\u5b83\u4eec\u53ef\u4ee5\u5de5\u4f5c\u7684\u8bdd)\uff0c\u4f46\u5e0c\u671b\u8fd9\u80fd\u8868\u660e\uff0c\u76f8\u5f53\u7b80\u5355\u7684HSL\u548cSASS\u7ec4\u5408\u5728\u989c\u8272\u5b9e\u9a8c\u548c\u8fed\u4ee3\u4e2d\u53ef\u4ee5\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002\n\u73b0\u5728\u6211\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u989c\u8272\u5b9e\u9a8c\u7cfb\u7edf\uff0c\u6211\u4e0d\u60f3\u5c06\u6211\u7684\u7ad9\u70b9\u9650\u5236\u4e3a\u53ea\u6709\u4e00\u79cd\u914d\u8272\u65b9\u6848\u3002\u6240\u4ee5\u6211\u628a\u4e00\u4e2a\u540d\u4e3a\u201ccolor-override.scss\u201d\u7684\u6587\u4ef6\u653e\u5728\u4e00\u8d77\uff0c\u5b83\u590d\u5236\u4e86\u6211\u7684\u4e3bSCSS\u6587\u4ef6\u4e2d\u6307\u5b9a\u989c\u8272\u7684\u6bcf\u4e2a\u89c4\u5219-\u8bb0\u4f4f\uff0c\u6240\u6709\u8fd9\u4e9b\u89c4\u5219\u90fd\u4f7f\u7528\u8c03\u8272\u677f\u7684Sass\u53d8\u91cf\u3002\u7136\u540e\uff0c\u5f53\u6211\u60f3\u8981\u4e3a\u7ad9\u70b9\u521b\u5efa\u65b0\u7684\u914d\u8272\u65b9\u6848\u65f6\uff0c\u6211\u4f7f\u7528\u4ee5\u4e0b\u6a21\u677f\uff1a\n\u7136\u540e\uff0c\u5bfc\u51fa\u7684CSS\u6587\u4ef6(\u8986\u76d6\u4e3bCSS\u6587\u4ef6\u989c\u8272\u7684\u65b0\u9c9c\u914d\u8272\u65b9\u6848)\u88ab\u6dfb\u52a0\u5230\u6211\u7684\u6587\u6863\u5934\u4e2d\u6b64\u5185\u8054\u811a\u672c\u7684ColorSchemes\u6570\u7ec4\u4e2d\uff1a\n&lt\uff1bscript&gt\uff1b//\u52a0\u8f7d\u968f\u673a\u914d\u8272\u65b9\u6848var ColorSchemes=Array(&#39\uff1bColors1.css&#39\uff1b\uff0c&#39\uff1bColors2.css&#39\uff1b\uff0c&#39\uff1bColors3.css&#39\uff1b)\uff1bvar ColorScheme=ColorSchemes[Math.Floor(Math.Random()*ColorSchemes.Length)]\uff1bDocument.Write(&#39\uff1b&lt\uff1blink rel=&#34\uff1bstyle heet&34\uff1bhref=&#34\uff1bhttp://v6.robweychert.com/assets/css/&#39\uff1b+ColorScheme+&#39\uff1b&34\uff1b&gt\uff1b&#39\uff1b)\uff1b&lt\uff1b/script&gt\uff1b\n\u542f\u7528JavaScript\u7684\u7528\u6237\u73b0\u5728\u6bcf\u6b21\u52a0\u8f7d\u6216\u5237\u65b0\u9875\u9762\u65f6\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u968f\u673a\u914d\u8272\u65b9\u6848\uff01\n\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u9700\u8981\u5b66\u4e60\u3002\u6211\u8fd8\u6709\u5f88\u957f\u7684\u8def\u8981\u8d70\uff0c\u7136\u540e\u6211\u4f1a\u89c9\u5f97\u6211\u771f\u7684\u77e5\u9053\u6211\u5728\u505a\u4ec0\u4e48\u989c\u8272\uff0c\u4f46\u4f5c\u4e3a\u4e00\u4e2a\u51e0\u5341\u5e74\u6765\u4e00\u76f4\u5728\u4e0e\u4e4b\u6597\u4e89\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u63cf\u8ff0\u7684\u65b9\u6cd5\u611f\u89c9\u50cf\u662f\u4e00\u6b21\u5de8\u5927\u7684\u98de\u8dc3\u3002\u4e0d\u7ba1\u8fd9\u5bf9\u4f60\u6765\u8bf4\u662f\u4e0d\u662f\u4e00\u6b21\u98de\u8dc3\uff0c\u6211\u5e0c\u671b\u4f60\u80fd\u4ece\u4e2d\u627e\u5230\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u4e1c\u897f\u3002\n\u8fd9\u662f\u5173\u4e8e\u6211\u7684\u7f51\u7ad92017\u5e74\u91cd\u65b0\u8bbe\u8ba1\u7684\u7cfb\u5217\u6587\u7ae0\u4e2d\u7684\u6700\u540e\u4e00\u7bc7\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\uff0c\u770b\u770b\u672c\u7cfb\u5217\u7684\u5176\u4ed6\u5e16\u5b50\uff0c\u8fd9\u4e9b\u5e16\u5b50\u8ba8\u8bba\u4e86\u8bbe\u8ba1\u7684\u6863\u6848\u54f2\u5b66\u4ee5\u53ca\u6392\u7248\u548c\u5e03\u5c40\u7684\u65b9\u6cd5\u3002", "note_en": "In my work as a designer, color has never been my strong suit. I often try to avoid dealing with it entirely (as seen in the  previous version of my site). Through education and experience, I\u2019ve picked up the basics of color theory and mostly avoided catastrophe, but my rudimentary process has been anything but reliable.\n My V6 redesign seemed like a good opportunity to try to improve my color game, since my site is meant to represent me, and I like to think I have a colorful personality. To really make the exercise count, rather than creating one color scheme, I wanted to create a system to which I could apply any number of color schemes. This would give me a space to experiment with color on an ongoing basis, and ideally it would accommodate a range of complexity, giving me room to grow as my skills improve.\n  The first steps of my color process are unchanged:  solidifying the layout in binary black and white before layering in more nuanced contrast in grayscale.\n  Once I have the contrast in a good place, I can extrapolate a palette upon which to map colors. My grayscale contrast work produced these six values:\n  Text Inverse (white): The lightest color in the palette. For now, this is always white, and its neutrality makes it useful for framing images, isolating their colors from mine.\n  Background (6% gray): The second-lightest color in the palette. Dark enough that white can be easily distinguished from it, but light enough that it appears almost white on its own.\n  Background Alt (24% gray): Slightly darker than Background. Used mainly for borders and other non-text interface elements.\n  Accent 1 (54% gray): Bright hue that contrasts significantly with both Text and Background. Used mainly for metadata.\n  Accent 2 (30% gray): Typically the palette\u2019s most distinct and saturated color, used sparingly for inline links and other bits that need to really pop.\n   There are two ways to begin developing a palette for a project: find an existing one or create one from scratch. Finding an existing one is simply a matter of keeping your eyes open. I tend to find the most inspiration in painting, sculpture, illustration, photography, and other visual arts.  Colossal is one of my most reliable resources.\n  When creating a palette from scratch, I\u2019ve long relied on the historical  RYB  color wheel, which posits that red, yellow, and blue are the primary colors from which all other basic colors are derived. Modern color theory is more sophisticated, which we\u2019ll get to shortly, but the RYB color wheel was wired into my brain at an early age, and I still find it useful. Here are some color wheel concepts worth considering when assembling a palette:\n  A  secondary color is an even combination of any two primaries: yellow plus red equals  orange, red plus blue equals  violet, blue plus yellow equals  green.\n  A  tertiary color is an even combination of a primary and an adjacent secondary:  yellow-orange, orange-red, red-violet, violet-blue, blue-green, green-yellow.\n  In theory, the purest color pairings are evenly spaced on the wheel, such as  complementary colors (opposite each other on the wheel) and  triads (a set of three colors forming an equilateral triangle).\n  Otherwise, owing to the ratio of primaries in their makeup,  colors pair well with others in their category: primaries with primaries (0:1), secondaries with secondaries (1:1), and tertiaries with tertiaries (2:1).\n   Finding a basis for a palette is easy enough, but getting that basic palette to work with a design is rarely a mere matter of transference, and this is where I usually get into trouble. Two of color\u2019s biggest stumbling blocks for me have always been implementation and adjustment. \u201cI like this yellow, but it\u2019s not working as a background color. How do I fix it?\u201d Adjusting colors digitally with sliders, color pickers, and hand-coded hex values left me flailing. I couldn\u2019t find a method to the madness. And implementing and tweaking them across a larger design system (whether in mockups or code) tended to be an onerous task.\n Thankfully, technology exists to address those issues, and my newly emboldened attitude about color was made possible by two technologies that are relatively new to me:  HSL and  Sass. For color adjustment, HSL brings a level of granular control to the process that other color systems lack. And for implementation, Sass lets me assign color values to variables, which make system-wide iteration quick and painless.\n  The RYB color wheel we went over earlier is intended for mixing paint, ink, dye, etc. It\u2019s a   subtractive color model, which means that its colors are made visible by subtracting wavelengths from light. Modern color theory has found a broader spectrum of colors in a subtractive model with slightly different primary colors: cyan, magenta, and yellow. These are the basis of  CMYK (the K stands for blacK), the process behind most of the full-color printed material you see. Its inverse is the   additive color model,  RGB, whose primaries are red, green, and blue. This is the basis of color projected in light, as seen on the screens of our TVs, computers, and mobile devices.\n  HSL is a representation of the RGB color model. It was invented in 1938 in anticipation of color television, but it didn\u2019t find its way into CSS\u2014where it would ultimately be most useful to me\u2014until 2011.  HSL stands for hue, saturation, lightness, which are the foundational attributes of color, which I didn\u2019t really understand until recently. (A similar system,  HSB, has long been available in most design software, but I sadly never pondered how it worked or what it might have to offer.) Here\u2019s a quick rundown of the nuts and bolts of HSL:\n  Hue defines the basic color. \u201cLight green,\u201d \u201cdark green,\u201d \u201cbright green,\u201d and \u201cdull green\u201d are all just variations on green, right? So in all those colors, green is the hue. In HSL, a hue is defined by a number between 0 and 360, so it\u2019s useful to envision the hue spectrum radially. HSL uses the RGB color wheel shown above.\n  Saturation defines how vivid the color is. Zero percent is gray and 100 percent is fully saturated.\n  Lightness defines how much black (shade) or white (tint) the color has in it. 50 percent has no shade or tint, zero percent is fully black, and 100 percent is fully white.\n Here\u2019s what HSL syntax looks like in CSS (this is a turquoise, with a 175-degree hue, 100 percent saturation, and 25 percent lightness):\n  I find HSL enormously liberating. Historical color wheel concepts map directly to the 360-degree hue system, and HSL\u2019s three foundational attributes let me create and fine-tune color directly in code like never before. Let\u2019s take a look at how I\u2019m using it with Sass.\n  The first step of implementation is to make Sass variables out of the site\u2019s six grayscale values I determined  earlier. Rather than doing the mental gymnastics of figuring out how those specific grays are expressed in hexadecimal or RGB, I\u2019ll just use Sass\u2019s built-in  darken() function:\n $text-color: darken( white, 70% ); // 70% gray$text-color-inverse: white; // 0% gray$bg-color: darken( white, 6% ); // 6% gray$bg-color-alt: darken( white, 24% ); // 24% gray$accent-color1: darken( white, 54% ); // 54% gray$accent-color2: darken( white, 30% ); // 30% gray\n If I use one of those six variables every time I specify a color in my CSS\u2026\n  \u2026I can easily make changes to the color scheme across the entire site by adjusting just those six variables!\n Let\u2019s put it to the test with a palette found in the wild. To ease into things, I chose a palette that looks like it\u2019ll adapt to my system without needing a lot of adjustment.\n  I\u2019ll grab the dominant colors using the eyedropper tool in Photoshop or Illustrator. Those apps don\u2019t natively support HSL, though, so I\u2019ll convert the colors\u2019 hex values to HSL using  Convert a Color, and then plug them into my variables:\n $text-color: hsl( 321, 14%, 44% ); // Pale purple$text-color-inverse: white; // White$bg-color: hsl( 45, 50%, 89% ); // Light tan$bg-color-alt: hsl( 31, 24%, 63% ); // Pale brown$accent-color1: $bg-color-alt; // Pale brown$accent-color2: hsl( 348, 68%, 58% ); // Pale red\n  This is off to a pretty good start! Right away, I can tell that  $bg-color and  $bg-color-alt need to be lighter. Also,  $accent-color-1 will need to be darker, and since it\u2019s based on another variable, I can accomplish that by making use of the  darken() function again. (Note that all  darken() does is move HSL\u2019s lightness attribute a specified amount toward zero.) It doesn\u2019t take much tweaking to get things where I want them:\n $text-color: hsl( 321, 14%, 44% );$text-color-inverse: white;$bg-color: hsl( 45, 50%, 94% ); // +05% lightness$bg-color-alt: hsl( 31, 24%, 88% ); // +25% lightness$accent-color1: darken( $bg-color-alt, 25% );$accent-color2: hsl( 348, 78%, 68% ); // +10% saturation, +10% lightness\n  Words can\u2019t express how thrilling it is to be able to make these kinds of color adjustments so intuitively in code. But wait, it gets even better. Let\u2019s try something a bit more adventurous.\n If you read this series\u2019 previous post about  typography and proportions, you know I like having a rational basis for design decisions, and I like the components of a system to relate to each other in specific ways. Just as my typographic scale is built on numeric intervals, so are the color wheel principles we looked at earlier. And just as my type sizes are all relative to one base value, my colors can be too.\n So I\u2019m going to build a palette from scratch using a triad, which is three equidistant hues on the color wheel. In HSL, that means the three colors\u2019 hue attributes will be 120 degrees away from each other. Since this is a predictable interval, I\u2019ll choose a base hue and let Sass figure out what the other two hues should be. Remember how  darken() adjusts a color\u2019s lightness?  adjust-hue() does the same for the hue. I\u2019ve decided  $accent-color2 will be my base color, so it\u2019ll move to the top of the variable list. I\u2019ll give it a red-orange hue (19 degrees), and use  adjust-hue() to give the other variables the appropriate chromatic distance:\n $accent-color2: hsl( 19, 100%, 50% );$text-color: adjust-hue( $accent-color2, -120deg );$text-color-inverse: white;$bg-color: adjust-hue( $accent-color2, 120deg );$bg-color-alt: darken( $bg-color, 15% );$accent-color1: $bg-color-alt;\n  This palette is clearly going to need more work than the previous one did, but I\u2019ve got some excellent tools at my disposal.  darken() and  adjust-hue() are great for adjusting a single color attribute, but if I want to adjust multiple attributes at a time,  adjust-color() is the way to go:\n $accent-color2: hsl( 19, 95%, 60% );$text-color: adjust-color( $accent-color2, $hue: -120deg, $saturation: -82, $lightness: -18 );$text-color-inverse: white;$bg-color: adjust-color( $accent-color2, $hue: 120deg, $saturation: -84, $lightness: 35 );$bg-color-alt: darken( $bg-color, 10% );$accent-color1: adjust-color( $bg-color, $saturation: 12, $lightness: -35 );\n  With all the colors in this palette set up to be relative to  $accent-color2, I can now shift the entire color scheme by adjusting that one variable. Below are a few variations, each of which rotates the previous hue by 90 degrees. This final demonstration uses the homepage, which makes the color differences between the examples more pronounced.\n   These will all need individual adjustments (if they can be made to work at all), but hopefully this makes the point that a fairly uncomplicated combination of HSL and Sass can be hugely helpful in color experimentation and iteration.\n  Now that I have a good system in place for experimenting with color, I don\u2019t want to limit my site to just one color scheme. So I\u2019ve put together a file called \u201ccolor-override.scss\u201d which duplicates every single rule that specifies a color in my main SCSS file\u2014remember, all those rules use my color palette\u2019s Sass variables. Then, when I want to make a new color scheme for the site, I use this template:\n  The exported CSS file, a fresh color scheme that overrides the main CSS file\u2019s colors, is then added to this inline script\u2019s  colorSchemes array in my document  head:\n &lt;script&gt; // Load a random color scheme var colorSchemes = Array( &#39;colors1.css&#39;, &#39;colors2.css&#39;, &#39;colors3.css&#39; ); var colorScheme = colorSchemes[ Math.floor( Math.random() * colorSchemes.length ) ]; document.write( &#39;&lt;link rel=&#34;stylesheet&#34; href=&#34;http://v6.robweychert.com/assets/css/&#39; + colorScheme + &#39;&#34;&gt;&#39; );&lt;/script&gt;\n Users with JavaScript enabled now get a random color scheme every time the page is loaded or refreshed!\n   There is still much to learn. I\u2019ve got a ways to go before I\u2019ll feel like I really know what I\u2019m doing with color, but speaking as someone who\u2019s struggled with it for decades, the methodologies described in this post feel like a big leap forward. Whether or not it\u2019s a leap for you, I hope you find something valuable to take away from it.\n This is the final post in a series about my site\u2019s 2017 redesign. If you haven\u2019t already, check out the other posts in the series, which discuss the design\u2019s  archival philosophy and approach to  typography and layout.", "posttime": "2020-10-31 02:41:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "v6,\u989c\u8272", "title": "V6\uff1a\u989c\u8272(2018)", "title_en": "V6: Color (2018)", "transed": 1, "url": "https://v6.robweychert.com/blog/2018/02/v6-color/", "via": "", "real_tags": ["v6", "\u989c\u8272"]}, {"category": "", "categoryclass": "", "imagename": "f71e1473a8a167bcdd9af7f1bdbd013f.png", "infoid": 1032346, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u514b\u96f7\u683c\uff0c\u4f60\u5904\u4e8e\u4e00\u4e2a\u6709\u8da3\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u4f60\u4e3aPostgres\u8fd9\u4e2a\u9879\u76ee\u505a\u4e86\u8fd9\u4e48\u591a\uff1b\u4f60\u6559\u8fc7\uff0c\u4f60\u8bf4\u8fc7\uff0c\u4f60\u5199\u8fc7\u535a\u5ba2\uff0c\u4f60\u63d0\u4f9b\u4e86\u65e0\u7a77\u65e0\u5c3d\u7684\u8d44\u6e90\uff0c\u4f60\u7b56\u5212\u4e86PG\u5468\u520a\u65f6\u4e8b\u901a\u8baf\u2026\u3002\u6211\u5173\u6ce8\u4f60\u7684\u5f88\u591a\u4e1c\u897f\u5df2\u7ecf\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u53ea\u662f\u5728\u4f60\u628a\u4e1c\u897f\u653e\u5230\u90a3\u91cc\u7684\u8fc7\u7a0b\u4e2d\u5b66\u4e60\uff0c\u56e0\u4e3a\u6211\u662f\u4e00\u4e2a\u4e34\u65f6\u7684postgres\u7528\u6237\u2026\u3002\u957f\u671f\u4f7f\u7528\uff0c\u4f46\u53ea\u662f\u968f\u610f\u4f7f\u7528\u3002\u6211\u5e76\u4e0d\u7ecf\u5e38\u94bb\u7814\u7ec6\u8282\uff0c\u56e0\u4e3a\u6211\u5c31\u662f\u4e0d\u9700\u8981\u2026\u3002\u4f46\u662f\u60a8\u5df2\u7ecf\u505a\u4e86\u6240\u6709\u8fd9\u4e9b\uff0c\u4f46\u662fPostgres\u9879\u76ee-\u5b83\u4e0d\u662f\u60a8\u7684\u5b69\u5b50\uff1b\u4e5f\u8bb8\u73b0\u5728\u611f\u89c9\u50cf\u662f\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u957f\u671f\u5f00\u653e\u6e90\u7801\u7684\u4e1c\u897f\uff0c\u6709\u51e0\u5341\u4e2a\u4eba\u2026\u3002\u544a\u8bc9\u6211\u4eec\u4f60\u662f\u5982\u4f55\u53c2\u4e0e\u8fd9\u4e2a\u9879\u76ee\u7684\uff0c\u4e5f\u8bb8\u4f60\u662f\u5982\u4f55\u7231\u4e0a\u8fd9\u4e2a\u6570\u636e\u5e93\u7684\u3002\n\u55ef\u3002\u6240\u4ee5\u6211\u8ba4\u4e3aPostgres\u672c\u8eab\u5f88\u6709\u8da3--\u5b9e\u9645\u4e0a\u6211\u81ea\u5df1\u4ece\u6765\u6ca1\u6709\u4e3a\u5b83\u8d21\u732e\u8fc7\u4e00\u884c\u4ee3\u7801\u3002\u6709\u90a3\u4e48\u591a\u4eba\u77e5\u9053\u2026\u7684\u6765\u9f99\u53bb\u8109\u3002\u6211\u770b\u8fc7\u4e86\uff0c\u6211\u770b\u8fc7\u4e86\u2026\u3002\u4f46\u4e5f\u8bb8\u6709\u4e00\u5929\u6211\u771f\u7684\u4f1a\u8fd9\u4e48\u505a\u3002\u4f46\u662f\uff0c\u662f\u7684\uff0c\u6211\u7684\u8d21\u732e\u4e3b\u8981\u662f\u5728\u793e\u533a\u65b9\u9762\u3002\u4e0e\u4ed6\u4eba\u4ea4\u8c08\uff0c\u4e0e\u4eba\u5171\u4e8b\u3002\n\u5b9e\u9645\u4e0a\uff0c\u6211\u662f\u8fd9\u4e48\u60f3\u7684--\u6211\u60f3\u6211\u52a0\u5165Truviso\u7684\u7b2c\u4e00\u6b21\u673a\u4f1a\u662f\u5728\u5f88\u591a\u5e74\u524d\u7684\u4e00\u5bb6\u521d\u521b\u516c\u53f8\u3002\u6211\u5927\u7ea6\u6709\u5341\u4e2a\u4eba\u53c2\u52a0\u3002\u4ed6\u4eec\u5c06Postgres\u8f6c\u6362\u6210\u4e00\u4e2a\u6d41\u6570\u636e\u5e93\uff1b\u5b83\u57fa\u672c\u4e0a\u662f\u5728\u6570\u636e\u4f20\u5165\u65f6\u6267\u884cMapReduce\u3002\u5927\u7ea612\u5e74\u524d\uff0c\u5728\u6700\u540e\u4e00\u6b21\u5760\u673a\u4e8b\u4ef6\u4e2d\uff0c\u5b83\u53c8\u56de\u6765\u4e86\u3002\u57fa\u672c\u4e0a\uff0c\u590d\u6742\u7684\u4e8b\u4ef6\u5904\u7406\u662f\u4e00\u79cd\u65b0\u7684\u5f88\u9177\u3001\u5f88\u6027\u611f\u7684\u4e8b\u60c5\u3002\u6211\u5728\u5927\u5b66\u65f6\u5c31\u719f\u6089\u5b83\uff0c\u4f46\u5728\u90a3\u91cc\u5e76\u6ca1\u6709\u771f\u6b63\u4f7f\u7528\u8fc7\u5b83\u3002\u6211\u4eec\u57fa\u672c\u4e0a\u662f\u628a\u5b83\u8f6c\u5316\u6210\u771f\u6b63\u5148\u8fdb\u7684\u4e1c\u897f\uff0c\u5904\u7406\u5927\u91cf\u7684\u6570\u636e\u3002\u6211\u4eec\u6709\u8fd9\u6837\u7684\u5ba2\u6237-\u6211\u60f3MySpace\u662f\u6211\u4eec\u5f53\u65f6\u7684\u5ba2\u6237\u4e4b\u4e00\uff0c\u5f53\u65f6\u4ed6\u4eec\u8fd8\u5f88\u706b\u7206\uff0c\u8fd9\u8ba9\u5b83\u6709\u4e86\u5f88\u597d\u7684\u5386\u53f2\u3002\n\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u4eec\u5236\u9020\u4e86\u4e00\u4e2a\u4ea7\u54c1\uff0c\u516c\u53f8\u53d1\u5c55\u58ee\u5927\uff0c\u7f29\u5c0f\u5230\u5927\u7ea610\u4eba\uff0c\u6211\u8f6c\u5411\u4e86\u2026\u3002\u51e0\u5e74\u540e\uff0c\u6211\u53d1\u73b0\u81ea\u5df1\u5728Heroku\u3002\u8fd9\u771f\u7684\u5f88\u6709\u8da3\uff0c\u56e0\u4e3a\u5b83\u6709\u70b9\u50cf\u60a8--\u60a8\u662f\u4e00\u540d\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\uff0c\u5b83\u5c31\u5728\u90a3\u91cc\uff0c\u60a8\u6b63\u5728\u4f7f\u7528\u5b83\u2026\u3002\u5373\u4f7f\u5728Heroku\u5185\u90e8\uff0c\u6211\u4eec\u4e5f\u670950\u540d\u5458\u5de5\uff0c\u4ed6\u4eec\u8bf4\u201c\u662f\u7684\uff0cPostgres\u5f88\u597d\u3002\u7ba1\u4ed6\u5462\u3002\u6211\u4f1a\u7528\u5b83\u7684\u3002\u201c\u3002\u6211\u5c31\u50cf\u662f\u201c\u4f19\u8ba1\u4eec\uff0c\u4f60\u4eec\u8fd9\u91cc\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u6570\u636e\u5e93\u3002\u201d\u6211\u53d1\u73b0\u81ea\u5df1\u5f00\u59cb\u8d8a\u6765\u8d8a\u591a\u5730\u5199\u535a\u5ba2\u3002\n\u6211\u662f\u4e2a\u61d2\u60f0\u7684\u535a\u5ba2\u5199\u624b\u3002\u6211\u60f3\u6211\u6709\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u5728\u8c08\u8bba\u6211\u4e3a\u4ec0\u4e48\u8981\u5199\u535a\u5ba2\uff0c\u90a3\u662f\u56e0\u4e3a\u6211\u5f88\u61d2\u3002\u4e00\u65e6\u6211\u89e3\u91ca\u4e86\u4e24\u904d\uff0c\u6211\u5c31\u4e0d\u60f3\u518d\u89e3\u91ca\u4e86\u3002\u6240\u4ee5\u6211\u4f1a\u5199\u4e00\u7bc7\u5173\u4e8e\u5b83\u7684\u535a\u5ba2\u6587\u7ae0\u3002\u4e00\u65e6\u6211\u53d1\u73b0\u81ea\u5df1\u5728\u6559\u4e00\u4e9b\u4e1c\u897f\uff0c\u6bd4\u5982\u201c\u6211\u4eec\u8d70\u5427\u201d\uff0c\u5b83\u4e0d\u4e00\u5b9a\u8981\u7ecf\u8fc7\u6da6\u8272\u6216\u6709\u7528\uff1b\u6211\u544a\u8bc9\u5f88\u591a\u4eba\u5199\u535a\u5ba2\u7684\u65f6\u5019\uff0c\u201c\u4e0d\u8981\u62c5\u5fc3\u628a\u5b83\u505a\u5f97\u5b8c\u7f8e\u3002\u201d\u628a\u5b83\u62ff\u51fa\u6765\u5c31\u884c\u4e86\u3002\u5b83\u53ef\u80fd\u5bf9\u5f88\u591a\u4eba\u90fd\u6709\u4ef7\u503c\u3002\u201c\u3002\n\u7136\u540e\uff0c\u5f53\u4eba\u4eec\u95ee\u4f60\u95ee\u9898\u65f6\uff0c\u4f60\u53ea\u9700\u53d1\u9001\u94fe\u63a5\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u5199\u7b54\u6848\uff0c\u5bf9\u5417\uff1f\n\u6211\u5f53\u7136\u559c\u6b22\u3002\u6709\u65f6\u5019\u6211\u89c9\u5f97\u81ea\u5df1\u662f\u4e2a\u5f7b\u5934\u5f7b\u5c3e\u7684\u6df7\u86cb\uff0c\u5f53\u6211\u8bf4\u201c\u7b49\u7b49\u201d\u7684\u65f6\u5019\u3002\u6211\u4e0d\u4f1a\u771f\u7684\u56de\u7b54\uff0c\u6211\u53ea\u662f\u7ed9\u4f60\u53d1\u4e00\u4e2a\u535a\u5ba2\u6587\u7ae0\u7684\u94fe\u63a5\u3002\u201c\u3002\u6211\u786e\u5b9e\u89c9\u5f97\u81ea\u5df1\u6709\u70b9\u50cf\u4e2a\u6df7\u86cb\u3002\u4f46\u8fd9\u5c31\u662f\u5b83\u5b58\u5728\u7684\u539f\u56e0\uff0c\u5bf9\u5427\uff1f\n\u6b63\u786e\u7684\u3002\u6709\u70b9\u50cf\u201c\u53bb\u8bfb\u6211\u7684\u4e66\u5427\u201d\u55ef\uff0c\u90a3\u5c31\u66f4\u7cdf\u4e86\uff0c\u56e0\u4e3a\u4f60\u5f97\u4e70\u8fd9\u672c\u4e66\u3002\u6709\u4e86\u535a\u5ba2\u5e16\u5b50\uff0c\u81f3\u5c11\u5b83\u662f\u514d\u8d39\u7684\u3002\u4f46\u6211\u77e5\u9053\u6709\u4e9b\u4eba\u4f1a\u8bf4\u201c\u53bb\u8bfb\u6211\u7684\u4e66\u5427\u3002\u5b83\u4f1a\u544a\u8bc9\u4f60\u7b54\u6848\u3002\u201c\u3002\u5c31\u50cf\uff0c\u201c\u597d\u5427\uff0c\u6211\u5c31\u5728\u8fd9\u91cc\u95ee\u4e86\u4f60\u8fd9\u4e2a\u95ee\u9898\u3002\u201d\u4f46\u662f\u5982\u679c\u5b83\u662f\u5728\u7ebf\u7684\uff0c\u800c\u4e14\u4f60\u5728\u95ee\uff0c\u53d1\u9001\u4e00\u4e2a\u94fe\u63a5\u662f\u6709\u7528\u7684\u3002\u6211\u660e\u767d\u3002\n\u55ef\u3002\u56e0\u6b64\uff0c\u6211\u53d1\u73b0\u81ea\u5df1\u771f\u7684\u6709\u70b9\u50cf\u662f\u5728\u548c\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u4ea4\u8c08\u3002\u6211\u4e0d\u662fDBA\uff0c\u4f46\u6211\u4e00\u76f4\u5728\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u89e3\u51b3\u8bf8\u5982\u201c\u6211\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u6211\u5982\u4f55\u5bf9\u6b64\u8fdb\u884c\u6545\u969c\u6392\u9664\uff1f\u5982\u679c\u6211\u56de\u5230Heroku-\u6211\u4eec\u6240\u6709\u7684Rails\u5f00\u53d1\u4eba\u5458\u90fd\u8981\u6c42\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u6211\u4eec\u6709\u70b9\u60f3\u201c\u8fd9\u80fd\u6709\u591a\u96be\u5462\uff1f\u201d\u5f53\u65f6\uff0c\u4e9a\u9a6c\u900aRDS\u751a\u81f3\u8fd8\u4e0d\u5b58\u5728\u3002\u6211\u4eec\u770b\u4e86\u770b\uff0c\u8bf4\u201cPostgres\u662f\u4e00\u4e2a\u975e\u5e38\u53ef\u9760\u7684\u6570\u636e\u5e93\u3002\u201d\u5b83\u6709\u826f\u597d\u7684\u57fa\u672c\u9762\uff0c\u826f\u597d\u7684\u6838\u5fc3\u2026\u3002\u6211\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u4f60\u56de\u987e\u4e00\u4e0b\u5b83\u7684\u5386\u53f2\uff0cPostgres\u548c\u8bb8\u591a\u5176\u4ed6\u6570\u636e\u5e93\u6709\u7740\u76f8\u540c\u7684\u6839\u6e90\u3002\u5b83\u5728\u540d\u5b57\u91cc\u3002Ingres\u662f\u6700\u65e9\u7684\u53d1\u6e90\u5730\u4e4b\u4e00\uff0c\u5c31\u50cf\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821(UC Berkeley)\u6570\u636e\u5e93\u7684\u9f3b\u7956\u4e00\u6837\u3002\u540eIngres\u5c31\u662fPostgres\u3002\n\u8bb8\u591a\u5176\u4ed6\u6570\u636e\u5e93\u90fd\u5177\u6709\u76f8\u540c\u7684ingres\u6839\uff0c\u5982SYBASE\u3001SQL Server\u2026\u3002\u4f46\u662f\u5b83\u73b0\u5728\u5df2\u7ecf\u670920\u591a\u5e74\u7684\u5386\u53f2\u4e86\uff0c\u800c\u4e14\u8fd8\u5f88\u7ed3\u5b9e\u3002\u6240\u4ee5\u6211\u5f88\u65e9\u5c31\u5f00\u59cb\u4e86\uff0c\u5728Heroku\u771f\u6b63\u6295\u5165\u5176\u4e2d\uff0c\u8fd0\u884c\u5e76\u5e2e\u52a9\u6784\u5efaHeroku Postgres\u6570\u5e74\uff0c\u53d1\u73b0\u81ea\u5df1\u5728\u897f\u56fe\u65af\u505a\u8fd9\u4ef6\u4e8b\uff0c\u73b0\u5728\u5728Crunchy Data\uff0c\u6784\u5efa\u548c\u8fd0\u8425\u4ed6\u4eec\u7684\u4e91\u670d\u52a1\u2026\u3002\u57fa\u672c\u4e0a\uff0c\u53ea\u662f\u4e3a\u4eba\u4eec\u8fd0\u8425\u4e00\u6bb5\u65f6\u95f4\u7684Postgres\u3002\n\u60a8\u53ef\u80fd\u6bd4\u6211\u66f4\u8bb0\u5f97\u8fd9\u6bb5\u5386\u53f2\uff0c\u4f46\u6211\u662f\u65e9\u671f\u7684Rails\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u77e5\u9053Rails(\u6700\u521d\u7684\u5806\u6808)\u662fMySQL\uff1b\u5b83\u662f\u751f\u4ea7\u6570\u636e\u5e93\u3002\u73b0\u5728\uff0c\u5b83\u5f00\u59cb\u4e8eSQLite\uff0c\u6240\u4ee5\u60a8\u53ef\u4ee5\u53ea\u8fd0\u884c\u60a8\u7684\u6d4b\u8bd5\uff0c\u4f46\u662f\u4eba\u4eec-\u751a\u81f3Basecamp-\u8fd0\u884cmysql\u2026\u3002\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u5c31\u50cfmysql\u5931\u5ba0\u4e86\uff0cpostgres\u53d6\u800c\u4ee3\u4e4b\uff0c\u5c31\u50cfRails\u5f00\u53d1\u4eba\u5458\u2026\u7684\u65f6\u4ee3\u7cbe\u795e\u4e00\u6837\u3002\u6211\u8bb0\u4e0d\u6e05\u4e3a\u4ec0\u4e48\u4e86\u3002\u662f\u4ec0\u4e48\u89e6\u53d1\u4e86\u8fd9\u4e00\u5207\u3002\u662f\u56e0\u4e3aHeroku\u7684\u5f71\u54cd\u548cHeroku Postgres\u5417\uff1f\n\u6211\u5f88\u786e\u5b9a\u8fd9\u662f\u8d6b\u9c81\u5e93\u7684\u5f71\u54cd\u3002\u5728Heroku\uff0c\u4f60\u6709\u4e00\u4e2aPostgres\u6570\u636e\u5e93\u3002\u6bcf\u4e2aRails\u5e94\u7528\u7a0b\u5e8f\u90fd\u6709\u4e00\u4e2aPostgres\u6570\u636e\u5e93\u3002\u6240\u4ee5\u6211\u5f88\u786e\u5b9a\u6211\u4eec\u53ef\u4ee5\u611f\u8c22Heroku\u505a\u4e86\u5f88\u591a\u4e8b\u60c5\u3002\u6211\u5e0c\u671b\u6211\u80fd\u8bf4\u8fd9\u662f\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u7684\u5177\u6709\u6218\u7565\u610f\u4e49\u7684\u2026\u3002\u6211\u4eec\u8ba4\u4e3aPostgres\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6570\u636e\u5e93\uff1b\u6211\u4eec\u51b3\u5b9a\u8fd0\u884cPostgres\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u9009\u62e9\uff0c\u6211\u4eec\u5728\u8fd9\u4e0a\u9762\u6295\u5165\u4e86\u5f88\u591a\u94b1\u6765\u8ba9\u5b83\u53d8\u5f97\u66f4\u597d\u3002\nPostgres\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\u90fd\u4e0d\u662f\u6700\u53cb\u597d\u7684\uff0c\u5b83\u4e5f\u4e0d\u662f\u6700\u6027\u611f\u7684\u6570\u636e\u5e93\u3002\u6570\u636e\u5e93\u80fd\u6027\u611f\u5417\uff1f\n\u6211\u4e0d\u77e5\u9053\u3002\u6211\u4e00\u76f4\u542c\u5230\u4eba\u4eec\u8fd9\u4e48\u8bf4\uff0c\u6211\u5c31\u50cf\u662f\u201c\u771f\u7684\u5417\uff1f\u201d\u4f46\u6211\u77e5\u9053\u4f60\u5728\u8bf4\u4ec0\u4e48\u3002\u4e5f\u8bb8\u4ee4\u4eba\u5174\u594b\u662f\u4e2a\u66f4\u597d\u7684\u8bcd\u2026\u3002\n\u6b63\u786e\u7684\u3002\u8fd9\u4e0d\u662f\u6211\u60f3\u8c61\u4e2d\u7684\u5468\u4e94\u665a\u4e0a(\u96be\u4ee5\u7406\u89e3\u7684)Postgres\uff0c\u4f46\u5b83\u6709\u66f4\u9177\u7684\u7279\u70b9\u3002\u6770\u68ee\u662f\u4e2a\u5927\u5757\u5934\u3002\n[]\u6240\u4ee5\u6211\u8ba4\u4e3a\u968f\u7740Heroku\u7684\u51fa\u73b0\uff0c\u8fd9\u4e00\u70b9\u771f\u7684\u53d1\u751f\u4e86\u53d8\u5316\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u8bb0\u5f97Heroku\u652f\u6301\u5b83\u7684\u65f6\u95f4\u53ef\u80fd\u6bd4Amazon RDS\u65e9\u4e86\u4e94\u5e74\u3002\u6211\u53c2\u52a0\u4e86\u5f88\u591a\u4e9a\u9a6c\u900a\u7684\u4f1a\u8bae\uff1bRe\uff1aInventent\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u4f1a\u8bae\uff0c\u5b83\u662f\u4e00\u4e2a\u975e\u5e38\u975e\u5e38\u5927\u7684\u4f1a\u8bae\u2026\u3002\u4ed6\u4eec\u5728\u4e00\u6b21\u53c8\u4e00\u6b21\u7684\u4ea7\u54c1\u53d1\u5e03\u4f1a\u4e0a\u53d1\u5e03\u4ea7\u54c1\u516c\u544a\uff0c\u6211\u8bb0\u5f97\u5f53\u65f6\u5728\u2026\u3002\u6211\u65e9\u6709\u9884\u611f\uff0c\u6240\u4ee5\u6211\u786e\u5b9e\u53bb\u4e86\u90a3\u4e2a\u4e3b\u9898\u6f14\u8bb2\u73b0\u573a\u770b\u4e86\u4e00\u4e0b\u516c\u544a\uff0c\u8bf8\u5982\u6b64\u7c7b\u7684\u2026\u3002\u5168\u573a\u8d77\u7acb\u9f13\u638c\u3002\u6211\u4ee5\u524d\u4ece\u672a\u5728\u4ea7\u54c1\u53d1\u5e03\u7684\u6280\u672f\u4f1a\u8bae\u4e0a\u770b\u5230\u8fc7\u8fd9\u79cd\u60c5\u51b5\u3002\n\u51fa\u73b0\u4e86\u957f\u65f6\u95f4\u7684\u505c\u987f\uff0c\u8d77\u7acb\u9f13\u638c\uff0c\u6f14\u8bb2\u8005\u53c8\u5f00\u59cb\u8bb2\u8bdd\uff0c\u4eba\u4eec\u4ecd\u7136\u7ad9\u7740\u4e3a\u6b64\u9f13\u638c\u3002\u6211\u4ee5\u524d\u4ece\u6765\u6ca1\u6709\u89c1\u8fc7\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u5728\u6280\u672f\u4f1a\u8bae\u4e0a\u770b\u5230\u8fc7\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f53\u4f60\u5ba3\u5e03\u4e00\u6b3e\u65b0\u4ea7\u54c1\u7684\u65f6\u5019\u3002\n\u90a3\u4f60\u4e3a\u4ec0\u4e48\u8ba4\u4e3a\u6ce2\u65af\u683c\u96f7\u65af\u5982\u6b64\u53d7\u4eba\u7231\u6234\u5462\uff1f\u6211\u77e5\u9053\u6211\u5c06\u81ea\u5df1\u4ecemysql\u5207\u6362\u5230postgres\uff1b\u4e3b\u8981\u662f\uff0c\u5f53\u6211\u5207\u6362\u5230postgres\u65f6\uff0c\u53ef\u80fd\u4ec5\u4ec5\u662f\u56e0\u4e3a\u6559\u7a0b\u7684\u6d41\u7a0b\uff0c\u800c\u8fd9\u4e2a\u7b3c\u7edf\u7684(\u96be\u4ee5\u7406\u89e3\u7684)\u548c\u6211\u5c31\u5728\u5176\u4e2d\u7684\u2026\u3002\u4f46\u6211\u8bb0\u5f97\u6211\u6709\u4e00\u4e9b\u6570\u636e--\u90a3\u662f\u572805-06\u5e74\u95f4\uff0c\u6211\u7684mysql\u8d44\u6599\u6709\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u6211\u8bfb\u4e86\u4e00\u4e9b\u535a\u5ba2\u6587\u7ae0\uff0c\u5173\u4e8emysql\u600e\u4e48\u53ef\u4ee5\u4ec0\u4e48\u90fd\u4e0d\u8bb0\u5f55\uff0c\u800c\u4e14\u5b83\u4e0d\u4f1a\u5728\u2026\u4e0a\u62a5\u544a\u5b83\u3002\n\u90a3\u91cc\u6709\u4e00\u4e9b\u8fb9\u7f18\u7684\u7bb1\u5b50\uff0c\u90a3\u91cc\u597d\u50cf\u4e0d\u592a\u5b89\u5168\u3002Postgres\u5c31\u5728\u90a3\u91cc\uff0c\u5b83\u7684\u540d\u58f0\u5c31\u662f\u575a\u5982\u78d0\u77f3\uff0c\u59cb\u7ec8\u5982\u4e00\uff0c\u5bf9\u4f60\u7684\u6570\u636e\u66f4\u4e25\u683c\u3002\u56e0\u4e3a\u5728Rails\u4e2d\u5207\u6362\u5f88\u5bb9\u6613\uff0c\u6240\u4ee5\u6211\u53ef\u4ee5\u975e\u5e38\u5feb\u5730\u5207\u6362\u3002\u6240\u4ee5\u6211\u521a\u521a\u5f00\u59cb\u5c06\u6211\u6240\u6709\u7684\u9879\u76ee\u90fd\u8f6c\u6362\u8fc7\u6765\uff0c\u6211\u53d1\u73b0\u5b83\u5f88\u5bb9\u6613\u4f7f\u7528\uff0c\u6765\u7ba1\u7406\u2026\u3002\u6240\u4ee5\u8fd9\u5c31\u662f\u6211\u7684\u5207\u6362\u70b9\u3002\u6211\u771f\u7684\u6ca1\u6709\u6bd4\u8fd9\u66f4\u591a\u7684\u60f3\u6cd5\u4e86\u3002\n\u6211\u60f3\u5982\u679c\u4f60\u4ed4\u7ec6\u770b\u7684\u8bdd\uff0c\u6ce2\u65af\u683c\u96f7\u65af\u5c31\u662f\u8fd9\u6837\u3002\u5c31\u50cf\u662f\u201c\u6211\u4f1a\u5b89\u5168\u53ef\u9760\u7684\u3002\u6211\u4e0d\u4f1a\u4e22\u5931\u4f60\u7684\u6570\u636e\u7684\u3002\u201c\u3002\u5f53\u6d89\u53ca\u5230\u6570\u636e\u5e93\u65f6\uff0c\u8fd9\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u5bf9\u5417\uff1f\u4fdd\u7559\u60a8\u7684\u6570\u636e\u800c\u4e0d\u4f1a\u4e22\u5931\u3002\u4f46\u8fd9\u662fPostgres\u66f4\u9177\u7684\u4ef7\u503c--\u201c\u6211\u4eec\u4e0d\u4f1a\u6dfb\u52a0\u95ea\u4eae\u7684\u3001\u65b0\u7684\u4e1c\u897f\u3002\u201dMySQL\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53d7\u5230\u4e86\u4e00\u4e9b\u62a8\u51fb\uff0c\u56e0\u4e3a\u5728\u67d0\u4e9b\u6a21\u5f0f\u4e0b\uff0c\u5b83\u4f1a\u8fd0\u884c\u4e0d\u540c\u7c7b\u578b\u7684\u5b58\u50a8\u5f15\u64ce\uff1b\u67d0\u4e9b\u5b58\u50a8\u5f15\u64ce\u5e76\u4e0d\u5b89\u5168\u3002MySQL-\u6709\u8da3\u7684\u662f\uff0c\u5f53\u4f60\u5728MySQL\u4e2d\u641c\u7d22\u65f6\uff0c\u5b83\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u3002\n\u8fd9\u771f\u7684\u5f88\u6709\u8da3\uff0c\u4f18\u6b65\u4eceMySQL\u6362\u6210\u4e86Postgres\uff0c\u7136\u540ePostgres\u53c8\u6362\u6210\u4e86MySQL\u3002\u6240\u4ee5\u4ed6\u4eec\u6765\u6765\u56de\u56de\u4e86\u51e0\u6b21\uff0c\u4f46\u5f53\u4ed6\u4eec\u6362\u5230Postgres\u65f6\uff0c\u4ed6\u4eec\u5fc5\u987b\u5f04\u6e05\u695a-\u4ed6\u4eec\u7684\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u90fd\u4f9d\u8d56\u4e8e\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u6570\u636e\u5e93\u5c31\u662f\u4e0d\u5c0a\u91cd\u5927\u5c0f\u5199\u641c\u7d22\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u6709\u70b9\u53cd\u529f\u80fd\u3002\n\u6211\u53ef\u4ee5\u7ee7\u7eed\u8ba8\u8bbaMySQL\u4e0ePostgres\u7684\u6bd4\u8f83\uff1b\u6211\u8ba4\u4e3aMySQL\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u6570\u636e\u5e93\uff0c\u800c\u4e14\u505a\u5f97\u5f88\u597d\u3002\u6211\u8ba4\u4e3aPostgres\u771f\u7684\u662f\u4ece\u5b89\u5168\u548c\u53ef\u9760\u5f00\u59cb\u7684\u3002\u7136\u540e\u6211\u4eec\u8bf4\u201c\u73b0\u5728\u6709\u4e86\u8fd9\u4e9b\u4e30\u5bcc\u7684\u7528\u6237\u529f\u80fd\u3002\u201d\u6709\u50cfJSON\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u6709\u50cf\u516c\u7528\u8868\u8868\u8fbe\u5f0f\u3001\u7a97\u53e3\u51fd\u6570\u2026\u8fd9\u6837\u7684\u4e1c\u897f\u3002\u6709\u4e00\u5957\u975e\u5e38\u4e30\u5bcc\u7684\u529f\u80fd\uff0c\u6211\u60f3\u6211\u4eec\u4f1a\u6709\u4e00\u5927\u5806\u5206\u6563\u5728\u5404\u5904\u7684\u529f\u80fd\u3002\u6211\u73b0\u5728\u53ef\u4ee5\u7ed9\u4f60\u4e00\u4efd\u8981\u6d17\u7684\u6e05\u5355\uff0c\u4f46\u6bcf\u4e00\u79cd\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002\u4f46\u5b83\u662f\u4ece\u771f\u6b63\u7684\u5b89\u5168\u548c\u53ef\u9760\u5f00\u59cb\u7684\u3002\n\u6211\u67e5\u770b\u4e86\u5f88\u591a\u5176\u4ed6\u6570\u636e\u5e93\uff0c\u2026\u3002Mongo\u4e00\u5f00\u59cb\u5e76\u4e0d\u5b89\u5168\u53ef\u9760\uff0c\u5e76\u52aa\u529b\u8d76\u4e0a\u8fd9\u4e00\u70b9\u3002\u5b83\u4e00\u5f00\u59cb\u4e5f\u5f88\u5bb9\u6613\u4f7f\u7528\u3002\u6211\u8ba4\u4e3a\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u5f00\u59cb\u5c0a\u91cd\u548c\u6b23\u8d4f\u8fd9\u4e00\u70b9\u3002\u4f60\u6709\u8150\u8d25\uff0c\u4f60\u82b1\u4e86\u4e24\u4e2a\u661f\u671f\uff0c\u563f\uff0c\u6570\u636e\u5c31\u4e0d\u89c1\u4e86\u3002\u4f60\u600e\u4e48\u56de\u7b54\u5ba2\u6237\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\n\u5bf9\u4e8e\u6211\u4eec\u559c\u6b22\u7684\u6240\u6709\u95ea\u4eae\u7684\u4e1c\u897f\uff0c\u6bcf\u5929\u90fd\u6709\u65b0\u7684\u6846\u67b6\u63a8\u51fa\uff0c\u65e7\u7684\u548c\u53ef\u9760\u7684\u53ea\u662f\u5de5\u4f5c\uff0c\u6211\u771f\u7684\u5f00\u59cb\u6b23\u8d4f\u8fd9\u4e00\u70b9\uff0c\u6bd4\u5982\u201c\u563f\uff0c\u6211\u5df2\u7ecf\u6709\u4e86\u6211\u7684Rails\u5806\u6808\u6216Python\u548cDjango\u5806\u6808\uff0c\u8fd8\u6709\u6211\u7684Postgres\u6570\u636e\u5e93\uff0c\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u8d70\u5f97\u5f88\u8fdc\u3002\u201d\u6211\u4e0d\u9700\u8981\u95ea\u4eae\u7684\u65b0\u4e1c\u897f\u6765\u5efa\u7acb\u4e00\u4e2a\u6709\u8da3\u7684\u4e1a\u52a1\u3002\n[]\u662f\u7684\u3002\u6211\u4e5f\u559c\u6b22\u8fd9\u4e00\u70b9\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u6570\u636e\u5e93\u800c\u8a00\u3002\u8fd9\u5c31\u50cf\uff0c\u5728\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6709\u4e00\u4e9b\u5730\u65b9\u6211\u613f\u610f\u5c1d\u8bd5\uff0c\u6211\u613f\u610f\u53bb\u5c1d\u8bd5\u524d\u6cbf\uff0c\u6709\u70b9\u6d41\u8840\uff0c\u4f46\u5f97\u5230\u90a3\u4e9b\u524d\u6cbf\u7684\u529f\u80fd\u3002\u5c31\u50cf\u201c\u8fd9\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u4e86\u6211\u7684\u6570\u636e\uff0c\u6211\u76f8\u4fe1\u5b83\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u201d\u8fd9\u5c31\u50cf\u662f\u201c\u8fd9\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u4e86\u6211\u7684\u6570\u636e\uff0c\u6211\u76f8\u4fe1\u5b83\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u201d\u6211\u60f3\u8fd9\u5c31\u662f\u6211\u575a\u6301\u4e0b\u53bb\u7684\u539f\u56e0\u4e4b\u4e00\u3002\u5b83\u4ece\u6765\u6ca1\u6709\u5728\u80cc\u540e\u6345\u8fc7\u6211\u4e00\u5200\uff1b\u6211\u4ece\u6765\u6ca1\u6709\u8bf4\u8fc7\u8fd9\u6837\u7684\u8bdd\uff1a\u201c\u54e6\uff0c\u6ce2\u65af\u683c\u96f7\u65af\uff0c\u4f60\u628a\u6211\u7ed9\u9a97\u4e86\u3002\u201d\n\u6b63\u786e\u7684\u3002\u5176\u4ed6\u8bb8\u591a\u4eba\u4e5f\u662f\u5982\u6b64-\u4f60\u6709\u8fc7\u8fd9\u79cd\u7cdf\u7cd5\u7684\u7ecf\u5386\uff0c\u662f\u7684\uff0c\u5b83\u95ea\u95ea\u53d1\u5149\uff0c\u5f88\u65b0\uff0c\u4f46\u4f19\u8ba1\uff0c\u4f60\u4f1a\u4e22\u5931Data\u2026\u3002\u6211\u60f3\u4f60\u518d\u4e5f\u505a\u4e0d\u51fa\u66f4\u7cdf\u7684\u4e8b\u4e86\u3002\u663e\u7136\uff0c\u6211\u662f\u4e00\u4e2a\u6570\u636e\u4e13\u5bb6\uff0c\u6211\u559c\u6b22\u6570\u636e\u5e93\uff0c\u4f46\u8fd9\u6bd4\u505c\u673a\u66f4\u6709\u4ef7\u503c\u3002\u597d\u7684\uff0c\u53bb\u505c\u673a\u4e00\u5c0f\u65f6\uff0c\u6216\u8005\u51e0\u5206\u949f\uff0c\u6216\u8005\u4e00\u5929\uff0c\u4f46\u662f\u4e0d\u8981\u4e22\u5931\u4f60\u65e0\u6cd5\u53d6\u56de\u7684\u6570\u636e\u3002\u5982\u679c\u4f60\u5728\u94f6\u884c\u6216\u7c7b\u4f3c\u7684\u5730\u65b9\uff0c\u4f60\u5f04\u4e22\u4e86\u6211\u7684\u5b58\u6b3e\uff0c\u6211\u5bf9\u4f60\u975e\u5e38\u4e0d\u9ad8\u5174\u3002\n\u662f\u554a\uff0c\u5c31\u662f\u8fd9\u6837\u3002\u90a3\u4e48\u5e2e\u6211\u4eec\u4e86\u89e3\u4e00\u4e0b\u5386\u53f2\u5427\uff0c\u56e0\u4e3a\u5728\u6240\u6709\u8fd9\u573a\u5f00\u53d1\u8fd0\u52a8\u5230\u6765\u4e4b\u524d\uff0c\u53d1\u751f\u7684\u4e00\u4ef6\u4e8b\u5c31\u662f-\u6211\u786e\u4fe1\u5b83\u5728DBA\u4e2d\u5f88\u53d7\u6b22\u8fce\uff0c\u5728\u4e16\u754c\u5404\u5730\u7684\u4e0d\u540c\u4eba\u4e2d\u4e5f\u5f88\u53d7\u6b22\u8fce\uff0c\u4f46\u786e\u5b9e\u6709\u4e00\u80a1\u6d6a\u6f6e\uff0c\u53ef\u80fd\u662fRails\u548cHerokus\uff0c\u65e0\u8bba\u8fd9\u79cd\u8d8b\u52bf\u662f\u4ec0\u4e48\uff0c\u4eba\u4eec\u5f00\u59cb\u9009\u62e9Postgres\uff0c\u5c31\u50cf\u4ed6\u4eec\u9ed8\u8ba4\u542f\u52a8\u7684\u6570\u636e\u5e93\u4e00\u6837\u3002\u4f46\u5230\u90a3\u65f6\uff0c\u5b83\u5df2\u7ecf\u5b58\u5728\u4e86\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e86\u3002\u4e5f\u8bb8\u8fd9\u5c31\u662f\u5b83\u5982\u6b64\u575a\u5982\u78d0\u77f3\u7684\u539f\u56e0\u3002\u5b83\u6709Ingres\u7684\u6839\u6e90\uff0c\u7136\u540e-\u6211\u7684\u610f\u601d\u662f\uff0c\u52302006-2007\u5e74\u6211\u5f00\u59cb\u4f7f\u7528\u5b83\u7684\u65f6\u5019\uff0c\u5b83\u5df2\u7ecf\u4f5c\u4e3aPostgres\u79ef\u6781\u5f00\u53d1\u4e86\u5927\u7ea6\u5341\u5e74\u3002\n\u5b83\u6ca1\u6709JSON\u7684\u529f\u80fd\uff0c\u4e5f\u6ca1\u6709\u6211\u4eec\u5728\u8fd9\u4e00\u70b9\u4e0a\u8981\u7814\u7a76\u7684\u6240\u6709\u4e1c\u897f\uff0c\u4f46\u662f\u5e2e\u52a9\u6211\u4eec\u89e3\u5f00\u5b83\u7684\u6765\u6e90\uff0c\u8c01\u5728\u505a\u8fd9\u4ef6\u4e8b\uff0c\u4ee5\u53ca\u5b83\u7684\u5386\u53f2\uff0c\u6709\u70b9\u50cfPostgres\u5468\u56f4\u7684\u793e\u533a\u3002\n\u662f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8ffd\u6eaf\u5230\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u3002Stonebraker-\u6211\u4e0d\u77e5\u9053\u4ed6\u662f\u5426\u4ec5\u4ec5\u56e0\u4e3aPostgres\u83b7\u5f97\u4e86\u56fe\u7075\u5956\uff0c\u4f46Postgres\u662f\u5176\u4e2d\u7684\u4e00\u4e2a\u5de8\u5927\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4ed6\u60f3\u8981\u5efa\u7acb\u8fd9\u79cd\u53ef\u6269\u5c55\u7684\u6570\u636e\u5e93\u3002\u6240\u4ee5\u4ed6\u770b\u7740\u82f1\u683c\u96f7\u65af\u8bf4\uff1a\u201c\u6211\u4eec\u600e\u6837\u624d\u80fd\u628a\u5b83\u53d1\u5c55\u5230\u4e0b\u4e00\u9636\u6bb5\u5462\uff1f\u201d\u8fd9\u662f\u5f88\u591a\u56de\u6eaf\u8fc7\u53bb\u7684\u5386\u53f2\uff1bACM\u4e0a\u6709\u4e00\u7bc7\u5f88\u68d2\u7684\u6587\u7ae0\uff0c\u56de\u987e\u4e86Postgres\u3002\u6211\u8ba4\u4e3a\u5b83\u7ecf\u5386\u4e86\u5f88\u591a\u90a3\u6bb5\u5386\u53f2\u3002\n\u6211\u8ba4\u4e3a\uff0c\u5728\u52a0\u5dde\u5927\u5b66\u4f2f\u514b\u5229\u5206\u6821\u63a8\u51fa\u5b83\u4e4b\u540e\uff0c\u6709\u5f88\u591a\u5e74\uff0c\u793e\u533a\u7684\u826f\u597d\u7ba1\u7406\uff0c\u771f\u7684\u5f97\u5230\u4e86\u6240\u6709\u7684\u8d5e\u8a89\u3002\u6211\u8d70\u5230\u8fd9\u91cc\u8c08\u8bba\u5b83\uff0c\u4f46\u4eba\u4eec\u53ea\u662f\u5403\u529b\u5730\u5de5\u4f5c\uff0c\u786e\u4fdd\u5b83\u662f\u575a\u5982\u78d0\u77f3\u7684\u2026\u3002\n\u6211\u521a\u624d\u6709\u70b9\u9ebb\u70e6\uff0c\u6211\u5217\u51fa\u4e86\u51e0\u4e2a\u540d\u5b57\uff0c\u7136\u540e\u6211\u5f00\u59cb\u5217\u51fa\u4e24\u4e2a\u6216\u4e09\u4e2a\u6216\u56db\u4e2a\u6216\u4e94\u4e2a\u2026\u3002\u6211\u60f3\u4f60\u5e94\u8be5\u6307\u51fa\u7684\u662f\u6c64\u59c6\u00b7\u83b1\u6069\u3002Tom Lane\u4e3a\u5f00\u653e\u6e90\u7801\u2026\u505a\u51fa\u4e86\u5982\u6b64\u591a\u8d21\u732e\u3002\u4ed6\u5e2e\u52a9\u521b\u5efa\u4e86jpeg\u3001gif\u548cpng\u2026\u3002\u5176\u4e2d\u4e00\u4e9b\u89c4\u683c\u662f\u4ed6\u5199\u7684\u3002\u4ed6\u5e2e\u52a9\u7f16\u5199\u4e86libjpeg\uff0clibpng\u2026\u3002\u8fd9\u662f20-25\u5e74\u524d\u7684\u4e8b\u4e86\uff0c\u2026\u3002\u7136\u540e\u8bf4\uff1a\u201c\u662f\u7684\uff0c\u6211\u6709\u70b9\u538c\u5026\u4e86\u56fe\u50cf\u683c\u5f0f\u3002\u8fd9\u4e2a\u6570\u636e\u5e93\u662f\u600e\u4e48\u56de\u4e8b\uff1f\u8ba9\u6211\u82b1\u70b9\u65f6\u95f4\u5728\u8fd9\u4e0a\u9762\u3002\u201c\u3002\u5e76\u4e14\u4e3a\u5927\u91cf\u7684Postgres\u4ee3\u7801\u505a\u51fa\u4e86\u8d21\u732e\u3002\u5982\u679c\u6709\u9519\u8bef\uff0c\u5c31\u6df1\u5165\u6316\u6398\u5e76\u786e\u4fdd\u5b83\u4eec\u88ab\u4fee\u590d\u3002\n\u4f60\u6709\u4ed6\uff0c\u4f60\u6709\u5e03\u9c81\u65af\u00b7\u8499\u5065\uff0c\u4f60\u6709\u7f57\u4f2f\u7279\u00b7\u54c8\u65af\uff0c\u4f60\u6709\u5b89\u5fb7\u70c8\u65af\u00b7\u5f17\u6d1b\u56e0\u5fb7\uff0c\u4f60\u6709\u65af\u8482\u82ac\u00b7\u5f17\u7f57\u65af\u7279\uff0c\u4f60\u6709\u4e54\u00b7\u5eb7\u5a01\uff0c\u4f60\u6709\u897f\u8499\u00b7\u91cc\u683c\u65af\uff0c\u4f60\u6709\u4e00\u5927\u7fa4\u4eba\u5750\u5728\u8fd9\u91cc\uff0c\u4e3aPostgres\u5de5\u4f5c\u3002\u4f60\u53ef\u4ee5\u53bb\u770b\u770b\u6240\u6709\u7684\u516c\u5f00\u6d3b\u52a8\uff1b\u5b83\u4eec\u90fd\u5728\u90ae\u4ef6\u5217\u8868\u4e2d\u3002\u5f00\u53d1\u4ecd\u7136\u50cf15\u5e74\u524d\u90a3\u6837\u53d1\u751f\uff0c\u5728\u90ae\u4ef6\u5217\u8868\u4e0a\uff0c\u4ee5\u8865\u4e01\u7684\u5f62\u5f0f\u51fa\u73b0\u3002\n\u975e\u5e38\u6709\u8da3\u7684\u662f\uff0c\u4ed6\u4eec\u6709\u4e00\u7ec4\u53ef\u9760\u7684\u63d0\u4ea4\u8005\uff0c\u4e3b\u8981\u8d21\u732e\u8005\uff0c\u6b21\u8981\u8d21\u732e\u8005\u2026\u3002\u90a3\u91cc\u6709\u6574\u4e2a\u7b49\u7ea7\u5236\u5ea6\uff0c\u4e0d\u592a\u6b63\u5f0f\u3002\u5728\u793e\u533a\u5185\u90e8\u6709\u5f88\u591a\u4e89\u8bba\uff0c\u6bd4\u5982\u201c\u597d\u5427\uff0c\u6211\u4eec\u6709\u6ca1\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u6587\u6863\u8d21\u732e\u8005\uff0c\u6216\u8005\u793e\u533a\u8d21\u732e\u8005\u6216\u5176\u4ed6\u4e1c\u897f\uff1f\u201d\u4f46\u662f\u4ee3\u7801\u53ea\u662f\u5411\u524d\u79fb\u52a8\uff0c\u6211\u5bf9\u5b83\u5f88\u611f\u5174\u8da3\uff0c\u56e0\u4e3a\u5b83\u786e\u5b9e\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\u3002\n[]\u6211\u4eec\u7ecf\u5e38\u8c08\u8bba\u5f00\u653e\u6e90\u7801\uff0c\u5f00\u653e\u6e90\u7801\u4e0d\u518d\u662f\u4e00\u4e2a\u65b0\u8bdd\u9898\uff1b\u6211\u4eec\u8c08\u8bba\u5b83\u5f88\u591a\u3002\u6570\u636e\u5e93\u8bf4\u5b83\u4eec\u662f\u5f00\u6e90\u7684\uff0c\u4f46\u662fPostgres\u786e\u5b9e\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002\u662f\u7684\uff0c\u5b83\u662f\u5f00\u6e90\u7684\uff0c\u5176\u4ed6\u6570\u636e\u5e93\u4e5f\u662f\u5f00\u6e90\u7684\uff0c\u4f46\u6ca1\u6709\u4eba\u62e5\u6709Postgres\u3002\u6ca1\u6709\u4eba\u53ef\u4ee5\u62e5\u6709Postgres\u3002\u4f60\u4e0d\u80fd\u53bb\u4e70\u4e0b\u4e00\u5bb6\u516c\u53f8\uff0c\u7136\u540e\u8bf4-MySQL\u73b0\u5728\u5f52\u7532\u9aa8\u6587\u6240\u6709\u3002\u4ed6\u4eec\u62e5\u6709\u7248\u6743\u3002\u4ed6\u4eec\u62e5\u6709\u5bc6\u7801\u3002\n\u6211\u60f3\uff0c\u7406\u8bba\u4e0a\uff0c\u5982\u679c\u4f60\u6709\u51e0\u5341\u4ebf\u7f8e\u5143\uff0c\u4f60\u60f3\u8bd5\u7740\u96c7\u4f63\u6240\u6709\u81f4\u529b\u4e8e\u6b64\u7684\u4eba\uff0c\u4e5f\u8bb8\u662f\u2026\u3002\u4f46\u6211\u5c31\u662f\u770b\u4e0d\u5230\u8fd9\u4e00\u70b9\u3002\u6838\u5fc3\u7ed3\u6784\u4ee5\u53ca\u4ea4\u4ed8\u548c\u5f00\u53d1\u7684\u65b9\u5f0f--\u5b83\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5c5e\u4e8e\u5f00\u653e\u6e90\u7801\u7684\u8303\u7574\u3002\u5b83\u662f\u793e\u533a\u4e3b\u5bfc\u3001\u793e\u533a\u8fd0\u8425\u3001\u793e\u533a\u7ba1\u7406\u7684\u2026\u3002\n\u5b83\u751a\u81f3\u4e0d\u50cfLinux\uff0c\u56e0\u4e3aLinux-\u4f60\u6709\u4e00\u4e2a\u4ec1\u6148\u7684\u72ec\u88c1\u8005\u3002\u6ce2\u65af\u683c\u96f7\u65af\u6ca1\u6709\u90a3\u4e2a\u3002\u5b83\u8ba9\u4eba\u4eec\u5904\u4e8e\u5e73\u7b49\u7684\u5730\u4f4d\u3002\n\u90a3\u4e48\uff0c\u662f\u4e0d\u662f\u5efa\u7acb\u4e86\u4e00\u4e2a\u6cbb\u7406\u7ed3\u6784\uff0c\u6216\u8005\u4eba\u4eec\u53ea\u662f\u5c31\u90ae\u4ef6\u5217\u8868\u8fdb\u884c\u8fa9\u8bba\uff1f\u90a3\u5b83\u5230\u5e95\u662f\u600e\u4e48\u8fd0\u884c\u7684\u5462\uff1f\n\u662f\u554a\uff0c\u5173\u4e8e\u90ae\u4ef6\u5217\u8868\u80af\u5b9a\u6709\u4e89\u8bba\u3002\u5b83\u5728\u2026\u610f\u4e49\u4e0a\u662f\u5f00\u653e\u6e90\u7801\u3002[\u7b11\u58f0]\u4f60\u6839\u672c\u65e0\u6cd5\u6446\u8131\u8fd9\u4e00\u70b9\u3002\u6240\u4ee5\u6709\u4e00\u4e2a\u6838\u5fc3\u59d4\u5458\u4f1a\uff0c\u90a3\u662f\u4e94\u4e2a\u4eba\u3002\u4ed6\u4eec\u8d1f\u8d23\u76d1\u7763\uff0c\u5e76\u8bbe\u7acb\u4e86\u4e00\u4e2a\u5b9e\u4f53\u6765\u7ef4\u62a4\u7248\u6743\uff0c\u8bf8\u5982\u6b64\u7c7b\u7684\u4e8b\u60c5\u3002\u90a3\u91cc\u6709\u4e00\u5bb6Postgres\u5b9e\u4f53\u62e5\u6709\u7684\u8bb8\u53ef\u8bc1\uff0c\u4ed6\u4eec\u5728\u591a\u5bb6\u516c\u53f8\u8bbe\u7acb\u3002\u6838\u5fc3\u56e2\u961f\u4e0d\u662f\u8c01\u8bf4\u4e86\u7b97\u3002\u6838\u5fc3\u662f\u4e00\u79cd\u8f6c\u5411\u4f53\u3002\n\u6240\u4ee5\u6709\u4e94\u4e2a\u4eba\uff0c\u4efb\u4f55\u4e00\u5bb6\u516c\u53f8\u4e00\u6b21\u6700\u591a\u4e0d\u8d85\u8fc7\u4e24\u4e2a\u4eba\uff0c\u2026\u3002\u6211\u8ba4\u4e3a\u5927\u7ea6\u662f40%\uff0c\u6240\u4ee5\u5982\u679c\u6838\u5fc3\u589e\u957f\u52307\u4e2a\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\u53d1\u751f\u53d8\u5316\u3002\u4f46\u57fa\u672c\u4e0a\uff0c\u4f60\u6ca1\u6709\u4efb\u4f55\u4e00\u5bb6\u516c\u53f8\u7684\u88c1\u51b3\u96c6\u3002\u6240\u4ee5\u5b83\u5206\u5e03\u5728\u5404\u4e2a\u516c\u53f8\u7684\u2026\u4e0a\u3002\u4f46\u540e\u6765\u7684\u5b9e\u9645\u53d1\u5c55--\u57fa\u672c\u4e0a\uff0c\u4f60\u8d62\u5f97\u4e86\u4e00\u4e2a\u627f\u8bfa\u3002\u4f60\u51fa\u73b0\uff0c\u4f60\u8d21\u732e\uff0c\u4f60\u5ba1\u67e5\u8865\u4e01\u2026\u3002Postgres\u6bcf\u5e74\u53d1\u5e03\u4e00\u6b21\u4e3b\u8981\u7248\u672c\u3002\u4e8b\u60c5\u51fa\u73b0\u4e86\uff0c\u5173\u4e8e\u90ae\u4ef6\u5217\u8868\u3001\u8865\u4e01\u7684\u60f3\u6cd5\uff0c\u6709\u4e89\u8bba\u548c\u8ba8\u8bba\u2026\u3002\u6709\u51e0\u4e2a\u51b2\u523a\uff0c\u63d0\u4ea4\u8865\u4e01\u7684\u8282\u65e5\u3002\u6709\u4e00\u6b3e\u5e94\u7528\u7a0b\u5e8f\u2026\u3002\u800c\u5efa\u7acb\u4f60\u7684\u4fe1\u8a89\u7684\u6700\u5927\u65b9\u6cd5\u5c31\u662f\u8fdb\u6765\uff0c\u4e3a\u4eba\u4eec\u68c0\u67e5\u8865\u4e01\u3002\u8bc4\u8bba\u603b\u662f\u53d7\u6b22\u8fce\u7684\uff0c\u603b\u662f\u6709\u5e2e\u52a9\u7684\u3002\u5982\u679c\u4f60\u60f3\u5efa\u7acb\u4fe1\u8a89\uff0c\u4f60\u4e0d\u4f1a\u5e26\u7740\u201c\u563f\uff0c\u6211\u60f3\u89e3\u51b3\u8fd9\u4ef6\u4e8b\u3002\u201d\u5b83\u4f1a\u51fa\u73b0\u5728\u90ae\u4ef6\u5217\u8868\u4e0a\u5e76\u53c2\u4e0e\u8fdb\u6765\u3002\n\u6709\u4e24\u4e2a\u90ae\u5bc4\u5217\u8868\u662f\u6700\u5927\u7684\u3002\u6709\u4e00\u4e2apgsql\u9ed1\u5ba2\u5217\u8868\u548c\u4e00\u4e2apgsql\u7528\u6237\u3002\u9ed1\u5ba2\u540d\u5355\u662f\u6240\u6709\u6709\u8da3\u7684\u4e8b\u60c5\u53d1\u751f\u7684\u5730\u65b9\u3002\u6211\u8bfb\u8fd9\u672c\u4e66\u662f\u4e3a\u4e86\u5728\u665a\u4e0a\u5165\u7761\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u60f3\u4e86\u89e3Postgres\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u8fd9\u662f\u4e00\u4e2a\u503c\u5f97\u6df1\u5165\u9605\u8bfb\u7684\u8ff7\u4eba\u9886\u57df\u3002\n\u60a8\u4e4b\u524d\u8bf4\u8fc7\u60a8\u6ca1\u6709\u63d0\u4ea4\u4e00\u884c\u4ee3\u7801\u3002\u60a8\u662f\u5426\u4ece\u53ef\u8bfb\u6027\u7684\u89d2\u5ea6\u6df1\u5165\u5230\u4ee3\u7801\u4e2d\u53bb\u4e86\uff1f\u8fd9\u662f\u4e00\u4e2aC\u9879\u76ee\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u53ef\u80fd\u6709\u51e0\u767e\u4e07\u884c\u4ee3\u7801\u2026\u3002\u4f60\u6709\u6ca1\u6709\u8bd5\u7740\u628a\u5b83\u62c6\u5f00\uff0c\u770b\u770b\u5f15\u64ce\u76d6\u4e0b\u9762\u5462\uff1f\n\u6709\u65f6\u5019\u3002\u4e0d\u662f\u5728\u6700\u8fd1\u51e0\u5e74\uff0c\u4f46\u5728\u6211\u7684\u804c\u4e1a\u751f\u6daf\u4e2d\uff0c\u7edd\u5bf9\u662f\u6709\u65f6\u3002\u8fd9\u5f88\u6709\u8da3--\u5b83\u662fC\u8bed\u8a00\uff0c\u4f46\u662f\u6211\u542c\u4eba\u4eec\u8bf4\u4ed6\u4eec\u4e0d\u559c\u6b22\u5199C\u8bed\u8a00\uff0c\u4f46\u662f\u4ed6\u4eec\u53ef\u4ee5\u5199Postgres C\u8bed\u8a00\u3002\u5b83\u7ed3\u6784\u5f88\u597d\uff0c\u5b9a\u4e49\u4e5f\u5f88\u597d\u3002\u5982\u679c\u60a8\u60f3\u770b\u4e00\u4e2a\u5927\u578bC\u9879\u76ee\u7684\u597d\u4f8b\u5b50\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u4f8b\u5b50\u3002\n\u5b83\u5fc5\u987b\u662f\uff0c\u4fdd\u6301\u8fd9\u4e48\u957f\u7684\u65f6\u95f4\uff0c\u5e76\u4fdd\u6301\u79ef\u6781\u7684\u5de5\u4f5c\u3002\u5728\u6240\u6709\u8fd9\u4e9b\u5e74\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4f60\u6709\u90a3\u4e48\u591a\u7684\u6280\u672f\u503a\u52a1\uff0c\u5982\u679c\u4f60\u53ea\u662f[\u96be\u4ee5\u7406\u89e3]C\u4ee3\u7801\uff0c\u6ca1\u6709\u597d\u7684\u67b6\u6784\uff0c\u597d\u7684\u91cd\u6784\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4f60\u53ea\u4f1a\u6162\u5f97\u50cf\u722c\u884c\uff1b\u6216\u8005\u722c\u5f97\u6162\u3002\u6211\u8bf4\u5f97\u4e0d\u5bf9\u3002\u4f60\u5c31\u4f1a\u505c\u6b62\u5feb\u901f\u79fb\u52a8\u3002\u6211\u4eec\u770b\u5230Postgres\u4fdd\u6301\u7740\u6bcf\u5e74\u53d1\u5e03\u7684\u8282\u594f\u3002\u65b0\u529f\u80fd\u4e0d\u65ad\u63a8\u51fa\uff0c\u5b83\u4eec\u53ea\u662f\u4e00\u904d\u53c8\u4e00\u904d\u5730\u5efa\u7acb\u5728\u8fd9\u4e2a\u57fa\u7840\u4e4b\u4e0a\u3002\n\u662f\u7684\uff0c\u8fd9\u8bc1\u660e\u4e86\u5728\u6211\u4e4b\u524d\u5f88\u4e45\u5c31\u6709\u5f88\u591a\u4eba\u4e00\u76f4\u5728\u62fc\u547d\u5de5\u4f5c\u3002\u793e\u533a\u4e2d\u5df2\u7ecf\u6709\u4e00\u4e2a\u79ef\u6781\u7684\u7126\u70b9\u6765\u589e\u52a0\u63d0\u4ea4\u8005\u7684\u6570\u91cf\u3002\u6211\u60f3\u73b0\u572840\u5c81\u5de6\u53f3\u624d\u6709\u627f\u8bfa\u2026\u3002\u4f46\u662f\u4f60\u8981\u5728\u51e0\u5e74\u5185\u8d5a\u5230\u8fd9\u4e9b\u94b1\uff0c\u800c\u4e14\u4f60\u5fc5\u987b\u4fdd\u6301\u6d3b\u8dc3\u3002\u5982\u679c\u4f60\u4e0d\u6bcf\u4e00\u4e24\u5e74\u505a\u70b9\u4ec0\u4e48\uff0c\u4f60\u5c31\u4f1a\u5931\u53bb\u8fd9\u4e2a\u627f\u8bfa\u3002\u56e0\u6b64\uff0c\u5b83\u9700\u8981\u5de5\u4f5c\u6765\u8d5a\u53d6\u5b83\uff0c\u7136\u540e\u5b83\u9700\u8981\u5de5\u4f5c\u6765\u7ef4\u6301\u5b83\u3002\u7136\u540e\u4ed6\u4eec\u4e92\u76f8\u770b\u7740\u5bf9\u65b9\u3002\u4f60\u4e0d\u80fd\u53bb\u63d0\u4ea4\u4e00\u4e9b\u4e1c\u897f--\u5df2\u7ecf\u6709\u4e00\u4e9b\u7248\u672c\u52a0\u5165\u4e86\u529f\u80fd\uff0c\u800c\u4e00\u4e9b\u4ee3\u7801\u8d28\u91cf\u5374\u4e0d\u5728\u90a3\u91cc\uff0c\u800c\u5de5\u7a0b\u5e08\u5728\u4e0b\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\u7684\u5269\u4f59\u65f6\u95f4\u91cc\u6ca1\u6709\u7f16\u5199\u65b0\u7684\u529f\u80fd\uff0c\u4e5f\u6ca1\u6709\u8fdb\u884c\u6e05\u7406\u3002\u4ed6\u4eec\u4ee5\u4e00\u79cd\u826f\u597d\u7684\u65b9\u5f0f\u627f\u62c5\u8d77\u81ea\u5df1\u7684\u8d23\u4efb\u3002\u6240\u4ee5\u8fd9\u7edd\u5bf9\u662f\u4e00\u79cd\u6709\u8da3\u7684\u9879\u76ee\u8bc1\u660e\uff0c\u6211\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u5176\u4ed6\u7c7b\u4f3c\u7684\u4f8b\u5b50\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u8ba8\u8bba\u4e86\u5b83\u7684\u7a33\u5b9a\u6027\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u4e0d\u4f1a\u8ba9\u60a8\u5931\u671b\uff0c\u4ee5\u53caData Consistency\u2026\u3002\u8fd8\u51fa\u73b0\u4e86\u8fd9\u79cdNoSQL\u8d8b\u52bf\uff0c\u5927\u91cf\u95ea\u4eae\u7684\u3001\u65b0\u7684\u6570\u636e\u5e93\u4ece\u2026\u4e2d\u6d8c\u73b0\u51fa\u6765\u3002\u6211\u4e0d\u786e\u5b9a\u8fd9\u662f\u54ea\u4e00\u5e74-\u53ef\u80fd\u662f2010\u5e74\uff0c\u4e5f\u53ef\u80fd\u662f2012\u5e74\u2026\u3002\u65f6\u95f4\u5c31\u50cf\u662f\u5851\u9020\u6210\u4e86\u4e00\u4e2a\u8fde\u7eed\u4f53\u3002\u4f46\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\uff0c\u5c31\u50cf\u662f\u201c\u770b\u770b\u8fd9\u4e2a\u4e1c\u897f\u80fd\u505a\u4ec0\u4e48\u201d\uff0c\u800c\u4f20\u7edf\u7684\u5173\u7cfb\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u5982postgres\u548cmysql\uff0c\u771f\u7684\u6709\u70b9\u88ab\u629b\u5728\u4e86\u516c\u4ea4\u8f66\u4e0b\uff0c\u5c31\u50cf\u5b83\u4eec\u5f88\u4e4f\u5473\u4e00\u6837\uff0c\u5b83\u4eec\u6ca1\u6709\u4f60\u9700\u8981\u7684\u2026\u6240\u9700\u7684\u7075\u6d3b\u6027\u3002\u5f53\u65f6\u5f88\u591a\u4eba\u79bb\u5f00postgres\uff0c\u6216\u8005\u5e72\u8106\u79bb\u5f00sql\u8f6c\u5230nosql\u2026\u3002\u800c\u6211\u4eec\u8fd9\u4e9b\u7a0d\u6709\u8010\u5fc3\u7684\u4eba\uff0cPostgres\u53ea\u662f\u4e0d\u65ad\u5730\u6dfb\u52a0\u4e00\u4e9b\u4e1c\u897f\uff0c\u5c31\u50cf\u662f\u201c\u7b49\u4e00\u4e0b\u2026\u201dNoSQL\u6709\u4e2a\u4e0d\u9519\u7684\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u975e\u5e38\u63a5\u8fd1\uff0c\u6216\u8005\u8db3\u591f\u597d\uff0c\u800c\u4e0d\u5fc5\u5931\u53bb\u6240\u6709\u7684\u8d44\u4ea7\u62c5\u4fdd\u548cPostgres\u62e5\u6709\u7684\u6240\u6709\u4e1c\u897f\u3002\u300a\u90ae\u62a5\u300b(Postgres)\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u529f\u80fd\uff0c\u90a3\u5c31\u662f\uff0c\u4f60\u53ef\u4ee5\u975e\u5e38\u63a5\u8fd1\uff0c\u6216\u8005\u8db3\u591f\u597d\uff0c\u800c\u4e0d\u4f1a\u5931\u53bb\u6240\u6709\u7684\u8d44\u4ea7\u62c5\u4fdd\u548cPostgres\u62e5\u6709\u7684\u6240\u6709\u4e1c\u897f\u3002\u5176\u4e2d\u4e4b\u4e00\u662fjson\u2026\u3002\u8c08\u8c08\u8fd9\u4e2a\u9879\u76ee\u5728\u8fc7\u53bb\u5341\u5e74\u4e2d\u51fa\u73b0\u7684\u4e00\u4e9b\u4ee4\u4eba\u5174\u594b\u7684\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u771f\u7684\u4e0d\u4ec5\u8ba9\u5b83\u6210\u4e3a\u7a33\u5b9a\u7684\u6447\u6eda\uff0c\u800c\u4e14\u8fd8\u6709\u70b9\u4ee4\u4eba\u5174\u594b-\u5b83\u6709\u5f88\u591a\u5f88\u9177\u7684\u4e1c\u897f\u3002\n.", "note_en": "Craig, you\u2019re in an interesting position, because you\u2019ve done so much for Postgres the project; you\u2019ve taught, and you\u2019ve spoken, and you\u2019ve blogged, and you\u2019ve provided endless resources, you curated the PG Weekly newsletter\u2026 I\u2019ve been following a lot of your stuff for a long time, just learning as you kind of put stuff out there, as I\u2019m a casual Postgres user\u2026 Long-time user, but just casual. I don\u2019t really dive into the nitty-gritty very often, because I just don\u2019t have to\u2026 But you\u2019ve done all of this, and yet Postgres the project - it\u2019s not your baby; maybe it feels like it now, but it\u2019s a long-standing open source thing, with dozens of people\u2026 Tell us how you came involved with the project, and maybe how you fell in love with the database.\n    Yeah. So I think Postgres itself is interesting - I\u2019ve actually never contributed a single line of code myself to it. There\u2019s so many other people that know the ins and outs\u2026 I\u2019ve read it, I\u2019ve looked at it\u2026 But maybe one day I actually will. But yeah, my contributions have mostly been on the community side. Talking with others, working with people.\n I actually came to it \u2013 I guess the first place was at a startup many years ago that I joined Truviso. I joined at about ten people. They were taking Postgres and transforming it into a streaming database; it basically did MapReduce on data as it came in. It was back about 12 years ago, during one of the last crashes. Basically, that complex events processing was this new kind of cool, sexy thing. I had familiarity with it from college and university, but hadn\u2019t really used it there. We were basically taking it and transforming it into something really advanced, handling a whole lot of data. We had customers like \u2013 I think MySpace was one of our customers back in the day, when they were still the hot thing, which dates it pretty well.\n        And from there, we\u2019ve built a product, and the company grew and dwindled back down to about ten people, and I moved on\u2026 And I found myself a few years later at Heroku. It was really interesting, because it was kind of like yourself - you\u2019re an app developer, it\u2019s there, you\u2019re using it\u2026 And even internally at Heroku, we had 50 employees, and they were like \u201cYeah, Postgres is fine. Whatever. I\u2019ll use it.\u201d I\u2019m like \u201cGuys, you\u2019ve got a great database here.\u201d And I found myself starting to blog more and more.\n I\u2019m a lazy blogger. I think I have a blog post talking about why I blog, and it\u2019s because I\u2019m lazy. Once I explain something twice, I don\u2019t wanna explain it again. So I\u2019ll just write a blog post on it. Once I\u2019ve found myself teaching something, like \u201cLet\u2019s just go and\u2013\u201d It doesn\u2019t have to be polished or useful; I tell a lot of people that about blogging, \u201cDon\u2019t worry about getting it perfect. Just get it out there. It probably has value for a lot of people.\u201d\n    Then you just send people the link when they ask you questions, instead of having to rewrite the answers, right?\n    I absolutely do. Sometimes I feel like an absolute jerk, when I\u2019m like \u201cHang on. I\u2019m not gonna actually answer, I\u2019m just gonna send you a link to a blog post.\u201d I definitely feel a little bit like a jerk. But it\u2019s why it exists, right?\n    Right. It\u2019s kind of like \u201cGo read my book.\u201d Well, that\u2019s worse, because you have to buy the book. With the blog post at least it\u2019s free. But I know people who are like \u201cJust go read my book. It tells you the answer.\u201d It\u2019s like, \u201cWell, I asked you the question right here.\u201d But if it\u2019s online, and you\u2019re asking, sending a link is useful. I understand it.\n    Yeah. So I found myself really kind of speaking to app developers. I\u2019m not a DBA, but I help out developers all the time with like \u201cHow do I troubleshoot this? How do I troubleshoot that? If I go way back at Heroku - we had all these Rails developers asking for a database, and we kind of thought \u201cHow hard can this be?\u201d Back at that time, Amazon RDS didn\u2019t even exist. And we looked, and said \u201cPostgres is a really solid database.\u201d It has good fundamentals, a good core\u2026 I mean, if you go back to the history of it, Postgres has the same roots as so many other databases. It\u2019s in the name. Ingres was one of the early origins, like grandfathers of databases that came out of UC Berkeley. Post-Ingres is Postgres.\n        And so many other databases have that same root of Ingres, like Sybase, SQL Server\u2026 But it\u2019s over 20 years old now, and it\u2019s just solid and sturdy. So I got started with it way back, really got into it at Heroku, running and helping build Heroku Postgres for a number of years, and have found myself doing it at Citus, and now at Crunchy Data, building and running their cloud service\u2026 Basically, just running Postgres for people for a while.\n    You may remember this history better than I do, but I was an early Rails developer, and I know that Rails, the original stack, was MySQL; it was the production database. Now, it started with SQLite, so you could just run your tests, but people - even Basecamp - ran MySQL\u2026 And at a certain point it was like MySQL fell out of favor, and Postgres came into favor, just like amongst the zeitgeist of Rails developers\u2026 And I can\u2019t remember why. What triggered that. Was it because of Heroku\u2019s influence and Heroku Postgres?\n    I\u2019m pretty sure it was Heroku\u2019s influence. In Heroku you\u2019ve got a Postgres database. Every Rails app has a Postgres database. So I\u2019m pretty sure we can thank Heroku for a lot of it. I wish I could say it was wonderfully thought out and strategic\u2026 We thought Postgres was a good database; we decided to run Postgres. I think it was the right choice, and we invested a lot in it to make it better.\n Postgres for the longest time wasn\u2019t the most user-friendly, it wasn\u2019t the most sexy database. Can databases be sexy?\n    I don\u2019t know. I hear people say that all the time, and I\u2019m like \u201cReally?\u201d But I know what you\u2019re saying. Maybe exciting is a better word\u2026\n    Right. It\u2019s not my idea of like a Friday night [unintelligible  ] Postgres, but it\u2019s gotten the cooler features. JSON was a big one.\n        [ ] So I think that really shifted with Heroku. I actually remember Heroku supported it probably five years before Amazon RDS did. I go to a lot of Amazon conferences; re:Invent is the big one, it\u2019s a massive, massive conference\u2026 And they roll out product announcement after product announcement after product announcement, and I remember being there\u2026 I had a heads up it was coming, so I made sure to actually go to that keynote to see the announcement, that sort of thing\u2026 And there was literally a standing ovation. I\u2019ve never seen this before at a tech conference for a product announcement.\n        There was this big pause, standing ovation, the speaker started talking again, and people are still standing on their feet, clapping for this. I\u2019ve never seen this before, I\u2019ve never seen this after, at a tech conference, when you announce a new product.\n    So why do you think Postgres is so beloved? I know that I switched myself from MySQL to Postgres; mostly, when I switched, maybe it was because of just the flow of the tutorials, and this general [unintelligible  ] and I was just in there amongst them\u2026 But I remember I had some data \u2013 this was way back in \u201905-\u201806, I had data consistency problems with my MySQL stuff, and I read some blog posts about how MySQL can just be recording nothing, and it\u2019s not gonna report it\u2026\n There were these edge cases in there, where it\u2019s kind of like less safe. And Postgres was there, and it had a reputation of being just rock-solid, consistent, and more strict with your data. And because of the ease of switching in Rails, I could switch very quickly. So I just started switching all my projects over, and I\u2019ve found it easy to use, to administer\u2026 So that was kind of my switching point. I didn\u2019t really have much more thought than that.\n    I think if you look at it, Postgres was that. It was like \u201cI\u2019m gonna be safe and reliable. I\u2019m not gonna lose your data.\u201d That\u2019s a funny thing to think about when it comes to a database, right? Keeping your data and not losing it. But that was Postgres\u2019 kind of cooler value - \u201cWe\u2019re not gonna add shiny, new things.\u201d The MySQL defaults got some flak for a little while, because in certain modes it would run, it had a different type of storage engine; certain ones weren\u2019t as safe. MySQL - it\u2019s funny, when you do search in MySQL, it\u2019s case-insensitive.\n It was really funny, Uber switched from MySQL to Postgres, and then Postgres to MySQL. So they\u2019ve gone back and forth a couple of times, but when they\u2019ve swapped to Postgres, they had to figure out \u2013 they had all this app logic that relied on things being case-insensitive, because the database just doesn\u2019t respect case search. To me, that\u2019s a little bit of an anti-feature.\n I can go on about MySQL vs. Postgres; I think MySQL is a good database and does good things. I think Postgres really started at being safe and reliable. And then we said \u201cNow there\u2019s these rich user features.\u201d There\u2019s things like JSON, there\u2019s things like common table expressions, window functions\u2026 There\u2019s a really rich set of features that I think we\u2019re gonna have a bunch of them scattered throughout. I could give you the laundry list of them right now, but each one is unique in its own right. But it started with that being really safe and reliable.\n I look at a lot of other databases\u2026 Mongo didn\u2019t start as safe and reliable, and worked to catch up to that. It started as easy to use. And I think that developers have come around to respecting and appreciating that. You have a corruption, you spend two weeks, hey, and the data is gone. How do you answer that to a customer?\n For all the shiny things we like, new frameworks that come out every single day, old and reliable just works, and I\u2019ve really started to appreciate that, like \u201cHey, I\u2019ve got my Rails stack or my Python and Django stack and my Postgres database, and this app can go really far.\u201d I don\u2019t need shiny, new things to build an interesting business.\n    [ ] Yeah. I like that as well, especially for a database. It\u2019s like, there\u2019s areas in my application where I\u2019m willing to experiment and I\u2019m willing to go with the bleeding edge, and bleed a little bit, but get those bleeding edge features. And there\u2019s something just \u2013 it makes you sleep well at night, just like \u201cThis database stores my data, and I can just trust it to do that.\u201d I think that was one of the reasons why I just stuck with it. It never really stabbed me in the back; I never had that moment where I\u2019m like \u201cOh, Postgres, you screwed me over.\u201d\n    Right. And it\u2019s the case with so many others, too - you have that bad experience, and yeah, it\u2019s shiny and new, but man, you lose data\u2026 I think there\u2019s nothing worse you can do. Obviously, I\u2019m a data guy, I like databases, but that\u2019s more valuable than downtime. Fine, go be down for an hour, or a few minutes, or a day, but don\u2019t lose the data that you can\u2019t get back. If you\u2019re banking or something like that and you\u2019ve lost my deposit, I couldn\u2019t be more unhappy with you.\n    Yeah, exactly. So help us out with a little bit of the history, because one of the things that happened was like by the time all this development movement over to it - I\u2019m sure it was popular amongst DBAs and amongst different people around the world, but really there was a groundswell, and maybe it was the Rails and the Herokus, and whatever this trend was, people started picking up Postgres as like their default started database. But by then it had been around for a very long time. Maybe that\u2019s why it was so rock-solid. It had the Ingres roots, and then it had \u2013 I mean, by 2006-2007 when I started using it, it had been actively developed as Postgres for like a decade at that point.\n And it didn\u2019t have the JSON features and all the stuff that we\u2019re gonna get into at that point, but help us unpack where it came from, who works on this thing, and the history, and kind of like the community around Postgres.\n    Yeah, so a lot of it - we can go way back to UC Berkeley. Stonebraker - I don\u2019t know that he won a Turing award just for Postgres, but Postgres is a huge piece of that, and he wanted to build this kind of extensible database. So he looked at Ingres and said \u201cHow can we evolve it to the next stage?\u201d That\u2019s a lot of the way-back history; there\u2019s a great article in ACM, looking back at Postgres. I think it goes through a lot of that history.\n I think there\u2019s a lot too of those years right after it came out from UC Berkeley, of a good stewardship of community, that really gets all the credit. I go out here and talk about it, but people just slogging away and working on it, making sure it was rock-solid\u2026\n I got in a little bit of trouble a little bit ago when I listed off a few names, and I started listing off two or three or four or five\u2026 And I think one you\u2019ve gotta point to is Tom Lane. Tom Lane has contribute to so much open source\u2026 He helped create JPEG, and GIF, and PNG\u2026 He authored some of those specs. He helped write libjpeg, libpng\u2026 And this is 20-25 years ago\u2026 And then said \u201cYeah, I\u2019m kind of tired of image formats. What\u2019s this database thing? Let me spend some time on that.\u201d And has contributed to a massive amount of Postgres code. If there\u2019s bugs, digging in and making sure they\u2019re fixed.\n You\u2019ve got him, you\u2019ve got Bruce Momjian, you\u2019ve got Robert Haas, you\u2019ve got Andres Freund, you\u2019ve got Stephen Frost, you\u2019ve got Joe Conway, you\u2019ve got Simon Riggs, you\u2019ve got a whole bunch of people that just sat here and worked on Postgres. And you can go see all of the activity in the open; it\u2019s all in the mailing list. Development still happens that way that it did 15 years ago, on the mailing list, showing up with patches.\n It\u2019s really interesting that they\u2019ve got a set of solid committers, major contributors, minor contributors\u2026 There\u2019s this whole kind of hierarchy there; it\u2019s not too formal. There\u2019s a lot of debate within the community of like \u201cOkay, do we have a major contributor for docs, or for community contributions or other things?\u201d but the code just moves forward, and it\u2019s fascinating to me in that it does work that way.\n [ ] Often we talk about open source, and open source is not a new topic anymore; we talk about it plenty. And databases say they\u2019re open source, but Postgres is really unique. Yeah, it\u2019s open source, and other databases are open source, but no one owns Postgres. No one can own Postgres. You can\u2019t go and buy up a company and say \u2013 MySQL is now owned by Oracle. They own the copyright. They own the code.\n Postgres - I guess in theory, if you had a few billion dollars and you wanted to try to hire all the people that commit to it, maybe\u2026 But I just don\u2019t see it happening. The core structure and the way it\u2019s delivered and developed - it\u2019s kind of in its own category of what is open source. It\u2019s community-led, community-run, community-managed\u2026\n        It\u2019s not even like Linux, because Linux - you had a benevolent dictator. Postgres doesn\u2019t have that. It\u2019s got people on equal footing.\n    So is there like a governance structure set up, or people just debate on mailing lists? How does it actually run then?\n    Yeah, there\u2019s definitely debates on mailing lists. It is open source in that sense\u2026 [laughter] You\u2019re not getting away from that at all. So there\u2019s a core committee, that\u2019s five people. They oversee, and there\u2019s an entity set up to maintain copyrights, and that sort of thing. There is a license that is owned by a Postgres entity there, and they\u2019re set up in multiple companies. The core team isn\u2019t who says what goes in. The core is kind of a steering body.\n So there\u2019s five people, there is no more than two from any company at a time\u2026 I think it\u2019s like 40%, so if the core were to grow to seven, it might change in that sense. But basically, you don\u2019t have a ruling set from any one company. So it\u2019s distributed across companies\u2026 But then the actual development - basically, you earn a commitment. You show up, you contribute, you review patches\u2026 Postgres has a major release once a year. Things show up, ideas on mailing lists, patches, there\u2019s debate and discussion\u2026 There\u2019s a couple of sprints, commit fests where patches are submitted. There\u2019s an app\u2026 And the biggest way to build your credibility is coming in and reviewing a patch for people. Reviews are always welcome, always helpful. If you wanna build credibility, you don\u2019t show up with a \u201cHey, I wanna fix this thing.\u201d It\u2019s show up on the mailing list and engage.\n There\u2019s two mailing lists that are the big ones. There\u2019s a pgsql hackers list and a pgsql users. The hackers list is where all the interesting stuff happens. It\u2019s what I read to fall asleep at night. But if you wanna learn the internals of Postgres, it\u2019s a fascinating area to go in and read.\n    You said earlier you haven\u2019t committed a single line of code. Have you dove into the code as a readability standpoint? It\u2019s a C project, probably millions of lines of code at this point\u2026 Have you tried to actually tease it apart and look underneath the hood at all?\n    At times. Not in recent years, but at times, absolutely, in my career. It\u2019s funny - it\u2019s C, but I\u2019ve heard people describe that they don\u2019t like writing C, but they\u2019re okay with writing Postgres C. It\u2019s really well-structured, well-defined. If you wanna see a good example of a large C project, it\u2019s a pretty good one.\n    It has to be, to keep going this long, and to stay actively worked on. Over the course of all of these years if you had that much technical debt and if you\u2019re just [unintelligible  ] C code without good architecture, good refactoring, over time you would just slow to a crawl; or crawl to a slow. I can\u2019t say it right. You would just stop moving fast. And we see Postgres just keeps that yearly release cadence. New features just keep rolling out, and they\u2019re just built on top of that foundation over and over again.\n    Yeah, and it\u2019s a testament to so many people long before me that do keep plugging away. There\u2019s been an active focus in the community to grow that number of committers. I think it\u2019s at about 40 now that have a commitment\u2026 But you earn that over several years, and you\u2019ve gotta stay active. If you don\u2019t commit something every year or two, you lose that commitment. So it takes work to earn it, and then it takes work to maintain it. And then they\u2019re watching each other. You can\u2019t go and commit something that \u2013 there have been releases where features got in, and some of the code quality wasn\u2019t there, and that engineer spent the rest of that next major release not writing new features, cleaning up. They hold themselves accountable in a good way. So it\u2019s definitely an interesting kind of testament of a project, and I don\u2019t know many other examples like it.\n        So we talked about its stability, and how it doesn\u2019t let you down, and the data consistency\u2026 There was also this NoSQL trend, where a lot of shiny, new databases were coming out\u2026 And I\u2019m not sure what year this was - maybe 2010, maybe 2012\u2026 Time kind of molds into a continuum. But in that range, where it was like \u201cLook what this thing can do\u201d, and traditional relational database management systems like Postgres and MySQL were really kind of thrown under the bus, like they were stodgy, they didn\u2019t have the flexibility that you need\u2026 And a lot of people left Postgres at that time, or they left SQL altogether to move to NoSQL\u2026 And those of us that were a little more patient, Postgres just kept adding things, and it was like \u201cHold on a sec\u2026 There\u2019s that nice feature over there in NoSQL land, and you could actually get pretty close, or good enough, and not have to lose all of the asset guarantees and all the things that you have over here with Postgres.\u201d One of those was JSON\u2026 Talk about some of the exciting features that have come into the project over the last decade, which have really made it not just be the stable rock that it is, but also it\u2019s kind of exciting \u2013 it\u2019s got a lot of cool stuff that they\u2019ve \n......", "posttime": "2020-10-31 02:41:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u683c\u96f7\u65af,postgres", "title": "\u6ce2\u65af\u683c\u96f7\u65af\u662f\u600e\u4e48\u56de\u4e8b\uff1f(\u6587\u5b57\u8bb0\u5f55)", "title_en": "What's so about Postgres? (transcript)", "transed": 1, "url": "https://changelog.com/podcast/417#transcript", "via": "", "real_tags": ["\u683c\u96f7\u65af", "postgres"]}, {"category": "", "categoryclass": "", "imagename": "104fe7d4a9006f2e9b8379effea68279.jpg", "infoid": 1032345, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u7f8e\u56fd\u6709\u7ebf\u7535\u89c6\u65b0\u95fb\u7f51)\u7814\u7a76\u4eba\u5458\u521b\u9020\u4e86\u4e16\u754c\u4e0a\u6700\u5c0f\u7684\u8239\uff0c\u957f\u5ea6\u53ea\u670930\u5fae\u7c73\uff0c\u5c0f\u5230\u53ef\u4ee5\u987a\u7740\u4eba\u7684\u5934\u53d1\u822a\u884c\u3002\n\u83b1\u987f\u5927\u5b66(Leiden University)\u7684\u4e00\u4e2a\u7814\u7a76\u5c0f\u7ec4\u4f7f\u7528\u7535\u5b50\u663e\u5fae\u955c\u548c\u9ad8\u5206\u8fa8\u73873D\u6253\u5370\u673a\u5bf9\u8fd9\u8258\u8239\u8fdb\u884c\u6210\u50cf\uff0c\u7136\u540e\u5efa\u9020\u4e86\u8fd9\u8258\u8239\uff0c\u4f5c\u4e3a\u7814\u7a76\u53ef\u4ee5\u5728\u4eba\u4f53\u5185\u65c5\u884c\u7684\u8f66\u8f86\u6f5c\u5728\u8bbe\u8ba1\u7684\u4e00\u90e8\u5206\uff0c\u4f8b\u5982\u8fdb\u884c\u533b\u7597\u3002\n\u5b83\u662f\u672c\u5947\u8239\u7684\u4e00\u4e2a\u5c0f\u590d\u5236\u54c1\uff0c\u8fd9\u8258\u8239\u662f\u4e00\u79cd\u6d4b\u8bd5\u7ed3\u6784\uff0c\u7ecf\u5e38\u7528\u6765\u6d4b\u8bd53D\u6253\u5370\u673a\u7684\u6548\u679c\u3002\n\u8377\u5170\u5927\u5b66\u7684\u7269\u7406\u5b66\u5bb6\u4e39\u59ae\u62c9\u00b7\u514b\u62c9\u592b\u7279(Daniela Kraft)\u544a\u8bc9CNN\uff0c\u6211\u4eec\u5c06\u6fc0\u5149\u805a\u7126\u5728\u6db2\u6ef4\u4e2d\u3002\u5979\u89e3\u91ca\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u8ba9\u6fc0\u5149\u7a7f\u8fc7\u6db2\u6ef4\uff0c\u6211\u4eec\u5c31\u80fd\u5199\u51fa\u6211\u4eec\u60f3\u8981\u7684\u7ed3\u6784\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5728\u87ba\u65cb\u7ebf\u4e2d\u79fb\u52a8\u5b83\uff0c\u6211\u4eec\u5c31\u662f\u5728\u5199\u87ba\u65cb\u7ebf\u3002&#34\uff1b\n\u8fd9\u8258\u8239\u53ea\u662f\u7814\u7a76\u4eba\u5458\u5bf9\u5fae\u6e38\u8005\u8fdb\u884c\u8c03\u67e5\u540e\u521b\u5efa\u7684\u4f17\u591a\u7ed3\u6784\u4e4b\u4e00\uff0c\u5fae\u6e38\u8005\u662f\u6307\u53ef\u4ee5\u5728\u6d41\u4f53\u4e2d\u79fb\u52a8\u7684\u5c0f\u9897\u7c92\uff0c\u5e76\u7531\u663e\u5fae\u955c\u8ddf\u8e2a\u3002\n\u5361\u592b\u544a\u8bc9CNN\uff0c\u5408\u6210\u7684\u3001\u81ea\u884c\u5f0f\u5fae\u6cf3\u8005\u53ef\u80fd\u6709\u4e00\u7cfb\u5217\u7684\u7528\u9014\uff0c\u5305\u62ec\u5728\u4eba\u4f53\u5185\u8fd0\u9001\u836f\u7269\u3002\n\u7814\u7a76\u4eba\u5458\u8fdb\u884c\u4e86\u8fd9\u9879\u7814\u7a76\uff0c\u53d1\u8868\u5728\u8f6f\u7269\u8d28\u6742\u5fd7\u4e0a\uff0c\u76ee\u7684\u662f\u4e86\u89e3\u5408\u6210\u81ea\u884c\u5f0f\u5fae\u6cf3\u8005\u7684\u67d0\u4e9b\u5f62\u72b6\u662f\u5982\u4f55\u5f71\u54cd\u8fd0\u52a8\u548c\u7275\u5f15\u7684\uff0c\u5e76\u66f4\u597d\u5730\u4e86\u89e3\u7ec6\u83cc\u7684\u884c\u4e3a\u3002\u4e13\u5bb6\u4eec\u80fd\u591f\u521b\u9020\u51fa\u4ec5\u67094\u5fae\u7c73\u5927\u5c0f\u7684\u7269\u4f53\u3002\u4e00\u5fae\u7c73\u7b49\u4e8e0.001\u6beb\u7c73\uff0c\u7ea6\u54080.000039\u82f1\u5bf8\u3002\n\u5361\u592b\u7279\u5728\u63a5\u53d7CNN\u91c7\u8bbf\u65f6\u8868\u793a\uff1a\u6211\u4eec\u5e0c\u671b\u4e86\u89e3\u73b0\u5728\u5236\u9020\u5c0f\u578b\u836f\u7269\u8f93\u9001\u8f7d\u4f53\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u8bbe\u8ba1\u539f\u5219--\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5c0f\u9897\u7c92\u5230\u8fbe\u8eab\u4f53\u7684\u7279\u5b9a\u90e8\u4f4d\u6765\u8f93\u9001\u836f\u7269\uff0c\u90a3\u4e48\u5b83\u5c31\u5fc5\u987b\u63a8\u52a8\u81ea\u5df1\uff0c\u800c\u4e14\u5b83\u53ef\u80fd\u4e0d\u5f97\u4e0d\u5904\u7406\u4f60\u8eab\u4f53\u5185\u7684\u73af\u5883\uff0c\u8fd9\u662f\u975e\u5e38\u590d\u6742\u7684\u3002\n\u6211\u4eec\u8bd5\u56fe\u56de\u7b54\u7684\u662f\uff1a\u4ec0\u4e48\u6837\u7684\u8bbe\u8ba1\u624d\u662f\u597d\u7684\uff1f\u4ec0\u4e48\u6837\u7684\u5f62\u72b6\u624d\u662f\u4e00\u4e2a\u597d\u7684\u5f62\u72b6\uff0c\u8fd9\u6837\u5b83\u624d\u80fd\u56db\u5904\u8d70\u52a8\uff0c\u624d\u80fd\u6709\u6548\u7387\u5462\uff1f&#34\uff1b\n\u5f53\u5b83\u5411\u524d\u79fb\u52a8\u65f6\uff0c\u901a\u5e38\u9700\u8981\u65cb\u8f6c\uff0c\u8fd9\u6709\u52a9\u4e8e\uff0c\u4f8b\u5982\uff0c\u52a0\u5feb\u5b83\u7684\u901f\u5ea6\u3002\u5979\u8bf4\uff0c\u5982\u679c\u4f60\u8003\u8651\u5230\u5e94\u7528\uff0c\u5982\u679c\u4f60\u60f3\u8981\u4e00\u53f0\u53ef\u4ee5\u901a\u5411\u67d0\u5730\u7684\u5c0f\u578b\u673a\u5668\uff0c\u87ba\u65cb\u5f62\u53ef\u80fd\u66f4\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u6e38\u5f97\u66f4\u5feb\u3002\n\u6f84\u6e05\uff1a\u5173\u4e8e\u8fd9\u8258\u8239\u7684\u5efa\u9020\u8fc7\u7a0b\u7684\u7ec6\u8282\u5df2\u7ecf\u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u7248\u672c\u7684\u6545\u4e8b\u4e2d\u3002", "note_en": "(CNN)Researchers have created the world&#39;s smallest boat, measuring just 30 micrometers in length, so small it could sail down a human hair.\n Using an electron microscope and a high resolution 3D printer a team from Leiden University imaged and then constructed the vessel as part of research into potential designs for vehicles that could travel inside the human body, for example to administer medical treatments.\n It is a tiny copy of the &#34;Benchy&#34; boat, a test structure often used to test the effectiveness of  3D printers.\n   &#34;We focused a laser inside a droplet,&#34; Daniela Kraft, a physicist at the Dutch university told CNN. &#34;If we move the laser through the droplet, we write the structure that we want,&#34; she explained. &#34;For example, if we move it in a helix, we are writing a helix.&#34;\n  The boat was just one of many structures created by the researchers conducting investigations into microswimmers: small particles that can move through fluids, and be followed by a microscope.\n  Synthetic, self-propelled microswimmers could have a range of uses, including delivering drugs in the human body, Kraft told CNN.\n  Researchers conducted the study, published in the  Soft Matter journal, to understand how certain shapes of synthetic self-propelled microswimmers affected motion and traction, and better understand the behavior of bacteria. Experts were able to create objects measuring just 4 micrometers. One micrometer is equal to 0.001 mm, or about 0.000039 inch.\n  &#34;We hope to learn about what is now a good design principle for creating a little drug delivery vehicle -- if you have a little particle that goes to a specific part of the body to deliver drugs, then it has to propel itself, and it may have to deal with the environment in your body, which is very complex,&#34; Kraft told CNN.\n &#34;What we are trying to answer is: what would be a good design? What would be a great shape so that it can go around and be efficient?&#34;\n    &#34;When it moves forward, often it needs to rotate, and that helps, for example, to speed it up. If you think about applications, if you want to have a little machine that goes somewhere, it might be more useful to have a helix shape, because it swims faster,&#34; she said.\n Clarification: Details about the construction process of the vessel have been added to this version of the story.", "posttime": "2020-10-31 02:40:53", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79d1\u5b66\u5bb6,\u6253\u5370,\u521b\u9020,create,\u7814\u7a76", "title": "\u79d1\u5b66\u5bb6\u4f7f\u75283D\u6253\u5370\u673a\u521b\u9020\u4e86\u4e16\u754c\u4e0a\u6700\u5c0f\u7684\u8239", "title_en": "Scientists used a 3D printer to create the world's smallest boat", "transed": 1, "url": "https://www.cnn.com/2020/10/28/europe/tiny-boat-microswimmer-intl-scli-scn/index.html", "via": "", "real_tags": ["\u79d1\u5b66\u5bb6", "\u6253\u5370", "\u521b\u9020", "create", "\u7814\u7a76"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032344, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u4e45\u524d\uff0c\u6211\u8003\u8651\u8fc7Monorepo\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u672c\u6587\u5219\u4e0e\u6b64\u622a\u7136\u76f8\u53cd\uff1aManyrepos\u3002\nMonorepos\u5f88\u6709\u5438\u5f15\u529b\uff0c\u56e0\u4e3a\u8c37\u6b4c\u3001Facebook\u548c\u5fae\u8f6f\u90fd\u4f7f\u7528\u4e86\u8fd9\u79cd\u65b9\u6cd5\u3002\u8fd9\u662f\u4ed6\u4eec\u79d8\u5bc6\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0c\u8fd8\u662f\u5076\u7136\u7684\uff1f\u8fd8\u6709\u53e6\u4e00\u5bb6\u5927\u578b\u79d1\u6280\u516c\u53f8\u505a\u4e86\u76f8\u53cd\u7684\u4e8b\u60c5\u3002\u5728\u4e9a\u9a6c\u900a\uff0c\u56e2\u961f\u66f4\u72ec\u7acb\u5730\u5de5\u4f5c\u3002\u4e00\u4e9b\u516c\u53f8\u4f7f\u7528\u4e0d\u540c\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u5e76\u4e0d\u50cfGit\u90a3\u6837\u98a0\u8986\u548c\u6267\u884c\u3002\u6211\u731c\u5927\u591a\u6570\u516c\u53f8\u6ca1\u6709\u5355\u4e00\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4ece\u7ec4\u7ec7\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u62c6\u5206\u4e00\u4e2a\u5355\u72ec\u7684\u9879\u76ee\u771f\u7684\u5f88\u5bb9\u6613\uff0c\u4f46\u5f88\u96be\u5408\u5e76\u5b83\u4eec\u3002\u6240\u4ee5\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u4ece\u4e9a\u9a6c\u900a\u5b66\u5230\u6bd4\u8c37\u6b4c\u66f4\u591a\u7684\u4e1c\u897f\u3002\u6240\u4ee5\uff0c\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u4ece\u4e9a\u9a6c\u900a\u5b66\u5230\u6bd4\u8c37\u6b4c\u66f4\u591a\u7684\u4e1c\u897f\u3002\u6211\u731c\u5927\u591a\u6570\u516c\u53f8\u6ca1\u6709\u5355\u4e00\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4ece\u7ec4\u7ec7\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u62c6\u5206\u4e00\u4e2a\u5355\u72ec\u7684\u9879\u76ee\u771f\u7684\u5f88\u5bb9\u6613\uff0c\u4f46\u5f88\u96be\u5408\u5e76\u5b83\u4eec\u3002\u6240\u4ee5\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u4ece\u4e9a\u9a6c\u900a\u5b66\u5230\u6bd4\u8c37\u6b4c\u66f4\u591a\u7684\u4e1c\u897f\uff1f\n\u4e00\u4e2a\u5171\u540c\u7684\u6a21\u5f0f\u662f\uff0c\u4e9a\u9a6c\u900a\u548c\u5176\u4ed6\u516c\u53f8\u4e00\u6837\u5efa\u9020\u4e86\u81ea\u5df1\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u5de5\u7a0b\u5e08\u4eec\u559c\u6b22\u5b83\uff0c\u79bb\u5f00\u540e\u4e5f\u6000\u5ff5\u5b83\u3002\n\u6211\u542c\u8fc7\u5173\u4e8e\u8bb8\u591a\u5176\u4ed6\u5927\u516c\u53f8\u5efa\u7acb\u7cfb\u7edf\u7684\u63cf\u8ff0\uff0c\u4e5f\u770b\u8fc7\u535a\u5ba2\u6587\u7ae0\uff0c\u4f46\u8001\u5b9e\u8bf4\uff0c\u751a\u81f3\u6ca1\u6709\u4ec0\u4e48\u80fd\u4e0e\u4e9a\u9a6c\u900a\u521b\u9020\u7684\u4ee4\u4eba\u60ca\u53f9\u7684\u6280\u672f\u76f8\u63d0\u5e76\u8bba\u3002\u6211\u53ef\u80fd\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u8c37\u6b4c\u3001Facebook\u548c\u5927\u591a\u6570\u5176\u4ed6\u89c4\u6a21\u6216\u66f4\u5927\u7684\u516c\u53f8\u6240\u505a\u7684\u4e8b\u60c5\uff0c\u5145\u5176\u91cf\u5ba2\u89c2\u4e0a\u662f\u4e0d\u592a\u597d\u7684\uff0c\u6700\u7cdf\u7cd5\u7684\u662f\u6d6a\u8d39\u4e86\u6570\u767e\u4e07\u7f8e\u5143\u7684\u751f\u4ea7\u529b\u635f\u5931\u3002-TB\u3002\n\u4e00\u65e6\u4f60\u4e86\u89e3\u4e86\u6784\u5efa\u548c\u90e8\u7f72\u5de5\u5177\uff0c\u4f60\u9996\u5148\u4f1a\u60f3\u77e5\u9053\u4f60\u4ee5\u524d\u662f\u600e\u4e48\u505a\u7684\uff0c\u7136\u540e\u5f00\u59cb\u62c5\u5fc3\u4e00\u65e6\u4f60\u79bb\u5f00\u4e86\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\u3002-\u970d\u5c14\u3002\n\u5c31\u50cf\u524d\u8c37\u6b4c\u5458\u5de5\u7528Pantand Buck\u5728\u5916\u9762\u91cd\u65b0\u521b\u9020\u4e86\u4ed6\u4eec\u7684\u6784\u5efa\u7cfb\u7edf\u4e00\u6837\uff0cQBT\u4e5f\u91cd\u65b0\u53d1\u660e\u4e86\u4e9a\u9a6c\u900a\u7684\u6784\u5efa\u7cfb\u7edf\u3002\u4e0d\u5e78\u7684\u662f\uff0cQBT\u9c9c\u4e3a\u4eba\u77e5\uff0c\u4e5f\u4e0d\u90a3\u4e48\u6210\u719f\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5173\u4e8e\u4e9a\u9a6c\u900a\u7684\u4fe1\u606f\u8f83\u5c11\u3002\u6211\u7684\u4fe1\u606f\u6765\u81eaHN\u548clobste.rs\u4e0a\u7684\u8fd9\u4e2a\u770b\u53f0\u8ba8\u8bba\u3002\u5982\u679c\u6211\u8bf4\u9519\u4e86\u4ec0\u4e48\uff0c\u8bf7\u544a\u8bc9\u6211\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u4e9a\u9a6c\u900a\u5df4\u897f\u5de5\u5177\u66f4\u50cf\u662f\u4e00\u4e2a\u6253\u5305\u7cfb\u7edf\uff0c\u800c\u4e0d\u662f\u6784\u5efa\u7cfb\u7edf\u3002\u5b83\u66f4\u63a5\u8fd1NIX\uff0c\u800c\u4e0d\u662fBazel\u3002\n\u5df4\u897f\u5c06\u5b9e\u9645\u7684\u6784\u5efa\u8fc7\u7a0b\u59d4\u6258\u7ed9\u7279\u5b9a\u4e8e\u8bed\u8a00\u7684\u5de5\u5177\u3002\u50cftmux\u8fd9\u6837\u7684\u5de5\u5177\u4e5f\u4e0e\u5df4\u897f\u4e00\u8d77\u6253\u5305\u3002\u6709\u8da3\u7684\u662f\u5305\u662f\u5982\u4f55\u7ba1\u7406\u7684\uff0c\u9700\u8981\u7406\u89e3\u7684\u6838\u5fc3\u6982\u5ff5\u662f\u7248\u672c\u96c6\u3002\n\u5982\u679c\u60a8\u5728Amazon\u521b\u5efa\u5305\uff0c\u5219\u6307\u5b9a\u7c7b\u4f3c&#34\uff1b1.1&#34\uff1b\u7684\u754c\u9762\u7248\u672c\u3002\u53ea\u8981\u66f4\u6539\u662f\u5411\u540e\u517c\u5bb9\u7684\uff0c\u754c\u9762\u7248\u672c\u5c31\u4e0d\u4f1a\u66f4\u6539\u3002\u5f53\u5df4\u897f\u6784\u5efa\u5305\u65f6\uff0c\u5b83\u4f1a\u9644\u52a0\u4e00\u4e2a\u989d\u5916\u7684\u6570\u5b57\uff0c\u4f7f\u5176\u6210\u4e3a\u7c7b\u4f3c&#34\uff1b1.1.3847523&#34\uff1b\u7684\u6784\u5efa\u7248\u672c\u3002\u60a8\u53ea\u80fd\u6307\u5b9a\u5bf9\u754c\u9762\u7248\u672c\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\n\u5df4\u897f\u5728\u6784\u5efa\u5305\u65f6\u505a\u7684\u53e6\u4e00\u4ef6\u4e8b\u662f\u8bb0\u5f55\u4f9d\u8d56\u9879\u4e0e\u5176\u6784\u5efa\u7248\u672c\u7684\u53ef\u4f20\u9012\u5173\u95ed\u3002\u73b0\u4ee3\u6253\u5305\u5de5\u5177\u5728\u60a8\u60f3\u8981\u7684\u4f9d\u8d56\u9879\u548c\u60a8\u5b9e\u9645\u4f7f\u7528\u7684\u4f9d\u8d56\u9879\u4e4b\u95f4\u6709\u6240\u4e0d\u540c\u3002\u4f8b\u5982\uff0cRust\u4e2d\u7684Cargo.toml\u548cCargo.lock\u3002\n\u7248\u672c\u96c6\u662f\u5305\u7684\u96c6\u5408\u3002\u5305\u662f\u7279\u6b8a\u7684\u5168\u5c40\u5305\uff0c\u4e0e\u7248\u672c\u63a7\u5236\u4e2d\u7684\u4e3b\u5e72\u5206\u652f\u76f8\u5bf9\u5e94\u3002\u5f53\u60a8\u9488\u5bf9\u7248\u672c\u96c6\u6784\u5efa\u5305\u65f6\uff0c\u5c06\u6267\u884c\u5bf9\u7248\u672c\u96c6\u4e2d\u6240\u6709\u5305\u7684\u6d4b\u8bd5\uff0c\u5e76\u4e14\u7248\u672c\u96c6\u5c06\u9012\u589e\u3002\u56e0\u6b64\uff0c\u5355\u4e2a\u5305\u5c06\u66f4\u65b0(\u5982\u679c\u4e4b\u524d\u4e0d\u662f\u7248\u672c\u96c6\u7684\u4e00\u90e8\u5206\uff0c\u5219\u4f1a\u53d1\u5e03)\u3002\n\u5df4\u897f\u4f9d\u8d56\u9879\u5206\u4e3a\u8fd0\u884c\u65f6\u4f9d\u8d56\u9879\u3001\u6784\u5efa\u4f9d\u8d56\u9879\u548c\u6d4b\u8bd5\u4f9d\u8d56\u9879\uff0c\u56e0\u6b64\u5bf9\u4e8e\u90e8\u7f72\uff0c\u5b83\u53ef\u4ee5\u4ece\u7248\u672c\u96c6\u4e2d\u5265\u79bb\u9664\u8fd0\u884c\u65f6\u4f9d\u8d56\u9879\u4e4b\u5916\u7684\u6240\u6709\u4f9d\u8d56\u9879\u3002\n\u5df4\u897f\u88ab\u6ee5\u7528\u7684\u6700\u5927\u65b9\u5f0f\u4e4b\u4e00\u662f\u56f4\u7ed5\u4e3b\u8981\u7248\u672c[\u53c8\u540d\u754c\u9762\u7248\u672c]\u7684\u5904\u7406\uff0c\u5c31\u4e0a\u4e0b\u6587\u800c\u8a00\uff0c\u4e00\u4e2a\u7248\u672c\u96c6\u4e2d\u4e00\u6b21\u53ea\u5141\u8bb8\u5b58\u5728\u4e00\u4e2a\u5305\u7684\u4e00\u4e2a\u4e3b\u8981\u7248\u672c\u3002\u5982\u679c\u60a8\u5c1d\u8bd5\u5c06\u5305\u7684\u4e0d\u540c\u4e3b\u8981\u7248\u672c\u5408\u5e76\u5230\u60a8\u7684\u7248\u672c\u96c6\u4e2d\uff0c\u60a8\u7684\u7ba1\u9053\u5c06\u7531\u4e8e\u4e3b\u8981\u7248\u672c\u51b2\u7a81\u800c\u65e0\u6cd5\u6784\u5efa\u3002\u6700\u5927\u7684\u9519\u8bef\u4e4b\u4e00\u662f\u5728\u6ca1\u6709\u540c\u65f6\u51b2\u7a81\u5e93\u7684\u4e3b\u8981\u7248\u672c\u7684\u60c5\u51b5\u4e0b\u51b2\u649e\u5e93\u4e2d\u7684\u4f9d\u8d56\u9879\u7684\u4e3b\u8981\u7248\u672c\u3002\u8fd9\u5c06\u5bfc\u81f4\u8bb8\u591a\u7ba1\u9053\u7834\u88c2\u3002\u5047\u8bbe\u60a8\u6709\u4e00\u4e2a\u5e93foo-1.0\uff0c\u5176\u4e2d\u6709\u4e00\u7fa4\u5176\u4ed6\u56e2\u961f\u7684\u7528\u6237\u3002\u60a8\u51b3\u5b9a\u5c06Guava\u7248\u672c\u4ece25\u5347\u7ea7\u523029\uff0c\u5e76\u53d1\u5e03\u65b0\u7248\u672c\u7684foo-1.0\u3002\u4efb\u4f55\u4f7f\u7528foo-1.0\u7684\u7528\u6237\u90fd\u4f1a\u81ea\u52a8\u9009\u62e9\u8be5\u5e93\u7684\u65b0\u7248\u672c\uff0c\u56e0\u4e3a\u8fd9\u53ea\u662f\u4e00\u4e2a\u6b21\u8981\u7684\u7248\u672c\u66f4\u6539\uff0c\u4f46\u662f\u5408\u5e76\u5c06\u5931\u8d25\uff0c\u5e76\u51fa\u73b0\u4e3b\u8981\u7248\u672c\u51b2\u7a81\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5728\u5176\u7248\u672c\u96c6\u4e2d\u4f7f\u7528\u7684\u4e3b\u8981\u7248\u672c\u4ecd\u7136\u662f25\u3002\u8fd9\u610f\u5473\u7740\u60a8\u8981\u4e48\u5fc5\u987b\u5c06\u8be5\u5e93\u56fa\u5b9a\u56de\u4ee5\u524d\u7684\u7248\u672c\uff0c\u8981\u4e48\u5c06\u60a8\u5bf9\u6240\u6709\u8f6f\u4ef6\u5305\u4e2d\u7684\u82ad\u4e50\u7684\u4f9d\u8d56\u63d0\u5347\u523029\u4e2a\u3002--Pentlander\u3002\n\u8fd9\u662f\u4e00\u4e2a\u6982\u62ec\u7684\u89c1\u89e3\uff1a\u5373\u4f7f\u4f60\u7684API\u662f\u7a33\u5b9a\u7684\uff0c\u66f4\u65b0\u4f9d\u8d56\u9879\u7684\u4e3b\u8981\u7248\u672c\u4e5f\u662f\u4e00\u4e2a\u7a81\u7834\u6027\u7684\u53d8\u5316\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u5b83\u542c\u8d77\u6765\u5f88\u50cfAPT\u6216Nix\u8fd9\u6837\u7684\u53d1\u884c\u5305\u7ba1\u7406\u5668\u3002\u7248\u672c\u96c6\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u63d0\u4f9b\u4e86\u5206\u652f\u673a\u5236\uff0c\u8fd9\u5c31\u662f\u56e2\u961f\u53ef\u4ee5\u72ec\u7acb\u5de5\u4f5c\u7684\u65b9\u5f0f\u3002\u8fd9\u6709\u4ec0\u4e48\u7279\u522b\u7684\u5462\uff1f\u4f60\u4e5f\u53ef\u4ee5\u7528APT\u548cNix\u5206\u53c9\u3002\u5728Monorepo\u4e2d\uff0c\u5b83\u5c06\u662f\u4e00\u4e2a\u5206\u652f\u3002\u5b83\u80af\u5b9a\u662f\u5173\u4e8e\u4e0d\u540c\u7684\u4e1c\u897f\u3002\nMonorepos\u7684\u4e00\u4e2a\u4f18\u70b9\u662f\u53ef\u4ee5\u8ddf\u8e2a\u6240\u6709\u7528\u6237\u3002\u5df4\u897f\u7684\u7248\u672c\u96c6\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u673a\u5236\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u4e2d\u592e\u6570\u636e\u5e93\u3002\u4f8b\u5982\uff0c\u8fd9\u5728\u5b89\u5168\u66f4\u65b0\u7684\u60c5\u51b5\u4e0b\u5f88\u91cd\u8981\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5728\u8bb8\u591arepo\u73af\u5883\u4e2d\uff0c\u8fd9\u4e9b\u4fe1\u606f\u901a\u5e38\u662f\u4e0d\u53ef\u7528\u7684\uff0c\u5f53\u51fa\u73b0\u95ee\u9898\u65f6\uff0c\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u8270\u82e6\u7684\u7814\u7a76\u3002\u90a3\u4e48\uff0c\u4e5f\u8bb8\u516c\u53f8\u5e94\u8be5\u5efa\u7acb\u8fd9\u6837\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u800c\u4e0d\u662f\u68a6\u60f3\u7740Monorepos\uff1f\n\u56de\u5230\u591a\u4e2arepo\u7684\u4f18\u52bf\uff0c\u53c2\u8003Amazon\uff0c\u6211\u4eec\u53ef\u4ee5\u5177\u4f53\u63cf\u8ff0\u5b83\uff1a\u7248\u672c\u96c6\u5141\u8bb8\u60a8\u4e00\u6b21\u4f7f\u7528\u540c\u4e00\u5305\u7684\u591a\u4e2a\u754c\u9762\u7248\u672c(\u867d\u7136\u4e0d\u662f\u591a\u4e2a\u6784\u5efa\u7248\u672c)\u3002\u8fd9\u79cd\u6df7\u5408\u5728\u6280\u672f\u4e0a\u4f7f\u7528git monorepo\u662f\u4e0d\u53ef\u80fd\u7684(\u4f46\u4f7f\u7528Subversion\u6216Perforce)\u3002\u8fd9\u81f3\u5c11\u662f\u4e00\u822c\u6743\u8861\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\n\u6211\u771f\u7684\u4e0d\u8ba4\u4e3aAmazon\u548cGoogle/FB\u98ce\u683c\u7684\u6784\u5efa/\u90e8\u7f72/\u6e90\u4ee3\u7801\u63a7\u5236\u7cfb\u7edf\u4e4b\u95f4\u6709\u4ec0\u4e48\u66f4\u597d\u6216\u66f4\u5dee\u7684\u5730\u65b9\uff0c\u5b83\u4e3b\u8981\u53cd\u6620\u4e86\u7ec4\u7ec7/\u56e2\u961f\u7684\u7ed3\u6784\u548c\u4ed6\u4eec\u4f18\u5148\u8003\u8651\u7684\u4e8b\u60c5-\u56e2\u961f\u72ec\u7acb\u6027/\u901f\u5ea6\u548c\u4f18\u5316\u6574\u4e2a\u4ee3\u7801\u5e93\u7684\u6a2a\u5207\u66f4\u6539\u4e4b\u95f4\u5b58\u5728\u7d27\u5f20\u5173\u7cfb\u3002\n\u6211\u5e0c\u671b\u5728\u7f51\u4e0a\u770b\u5230\u66f4\u591a\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u8ba8\u8bba\u3002\u8bb8\u591a\u516c\u53f8\u5e94\u8be5\u66f4\u770b\u91cd\u56e2\u961f\u7684\u72ec\u7acb\u6027\uff0c\u800c\u4e0d\u662f\u6a2a\u5207\u7684\u53d8\u5316\u3002\u6240\u4ee5\u95ee\u9898\u662f\uff1a\u5982\u4f55\u5728\u4f17\u591a\u56de\u8d2d\u73af\u5883\u4e2d\u83b7\u5f97\u6211\u4eec\u76ee\u524d\u552f\u4e00\u5f52\u529f\u4e8e\u5355\u4e00\u6570\u636e\u5e93\u7684\u4f18\u52bf\uff1f\u4e9a\u9a6c\u900a\u7684\u5df4\u897f\u6709\u5b9d\u8d35\u7684\u60f3\u6cd5\u53ef\u4ee5\u505a\u51fa\u8d21\u732e\uff0c\u5e94\u8be5\u66f4\u5e7f\u4e3a\u4eba\u77e5\u3002", "note_en": "A while ago, I pondered monorepo version control systems.This article is at the opposite end of the spectrum: Manyrepos.\n  Monorepos are alluring since Google, Facebook, and Microsoft use that approach.Is that a part of their secret sauce or accidental?There is another big tech company which does the opposite.At Amazon, teams work more independently.Some use different version control systems which are not gitlike Subversion and Perforce.I guess that most companies do  not have a monorepobecause it is really easy to split of a separate projectbut hard to merge them just from an organizational point of view.So maybe we can learn more from Amazon than Google?\n A common pattern is that Amazon like the others built its own infrastructureand engineers love it and miss it after they leave.\n I&#39;ve heard descriptions and seen blog entries about many other large companies build systems, but to be honest, nothing even comes close to the amazing technology Amazon has produced.I would probably argue that what Google, Facebook, and most other companies of comparable size and larger do is at best objectively less good and at worst wasting millions of dollars of lost productivity.\u2013 terabyte\n Once you understand the build and deployment tools you first wonder how you ever did anything before and then start to fear how you&#39;ll do anything once you leave.\u2013 hohle\n Just like Ex-Googlers reinvented their build system on the outsidewith  Pantsand  Buck.Likewise  QBT reinvents the Amazon build system.Unfortunately, QBT is less known and less mature.\n  There is less information about Amazon unfortunately.Mine is from  this gistand discussions on  HN and lobste.rs.If I got something wrong, please tell me.The short version is that Amazon&#39;s &#34;Brazil&#34; tool ismore of a package system than a build system.It is closer to Nix than to Bazel.\n Brazil delegates the actual build process to language-specific tools.Tools, like tmux, are also packaged with Brazil.The interesting part is how packages are managedand the core concept to understand is  version set.\n If you create a package at Amazon,you specify an  interface version like &#34;1.1&#34;.As long as changes are backwards-compatible,the interface version is not changed.When Brazil builds a package,it appends an additional number to turn it into a  build versionlike &#34;1.1.3847523&#34;.You can only specify dependencies on interface versions.\n Another thing Brazil does when building a packageis to record the transitive closure of dependencieswith their build versions.Modern packaging tools differ between&#34;dependencies you want&#34;and &#34;dependencies you actually used&#34;.For example,  Cargo.toml and Cargo.lock in Rust.\n A  version set is a collection of packages.The &#34;live&#34; package is the special global onewhich corresponds to a trunk branch in version control.When you build a package &#34;against&#34; a version set,the tests of all packages in the version set are executed,and the version set is incremented.Thus the individual package is updated(or published if it was not part of the version set before).\n Brazil dependencies are classified as runtime, build, and test dependencies.So for deployment, it can strip everything but the runtime dependenciesfrom a version set.\n  One of the biggest ways that brazil was misused was around handling of major versions [aka interface version].For context, only a single major version of a package is allowed to exist in a versionset at a time. If you tried to merge in a different major version of a package into your versionset, your pipeline would fail to build due to &#34;Major version conflicts&#34;. One of the biggest sins was around bumping the major versions of the dependencies in a library without bumping the major version of that library at the same time. This would lead to many broken pipelines. Let&#39;s say you have a library Foo-1.0 with a bunch of users on other teams. You decide to bump up the Guava version from 25 to 29 and publish the new version of Foo-1.0. Anyone consuming Foo-1.0 would automatically pick up the new version of that lib because it&#39;s just a minor version change, however the merge would fail with a &#34;major version conflict&#34; because the major version of Guava they&#39;re using in their versionset is still 25. This means you would either have to pin that library back at a previous version, or bump your dependency on Guava in all of you packages to 29.\u2013 pentlander\n This is an insight that generalizes:Updating a dependency major version is a breaking changeeven if your API is stable.\n  Overall, it sounds a lot like a distribution package manager like apt or Nix.The difference of version sets isthat they provide a branching mechanismand this is how teams can work independently.How is that unique though?You can fork with apt and Nix as well.In a monorepo, it would be a branch.It must be about something different.\n One advantage of monorepos is that one can track all users.Version sets in Brazil provide a similar mechanismsince it is a  central database.This is important in case of security updates, for example.Unfortunately, in manyrepo environments this information is usually not availableand when an issue arise it must be arduously researched.So maybe companies should build such infrastructureinstead of dreaming about monorepos?\n Coming back to the advantage of manyrepos,refering to Amazon we can describe it concretely:Version sets allow you to use multiple interface versions of the same packageat once (not multiple build versions though).This mixture is not technically possible with a git monorepo(but with Subversion or Perforce).This is at least one example of the general tradeoff.\n I don\u2019t really think there\u2019s a better or worse between the Amazon and Google/FB style build/deploy/source control systems, it\u2019s primarily a reflection of the org/team structure and what they prioritize - there\u2019s tension between team independence/velocity and crosscutting changes that optimize the whole codebase.\u2013 revert\n I would like to see more discussion online about this.Many companies should value the team independence over the crosscutting changes.So the question is:How to get the advantages we currently uniquely attribute to monoreposin a manyrepo setting?Amazon&#39;s Brazil has valuable ideas to contributeand should be more widely known.", "posttime": "2020-10-31 02:40:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amazon,\u4e9a\u9a6c\u900a,\u6784\u5efa,\u7248\u672c", "title": "\u5bf9\u4e9a\u9a6c\u900aManyrepo\u6784\u5efa\u7cfb\u7edf\u7684\u601d\u8003", "title_en": "Pondering Amazon's Manyrepo Build System", "transed": 1, "url": "http://beza1e1.tuxen.de/amazon_manyrepo_builds.html", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u6784\u5efa", "\u7248\u672c"]}, {"category": "", "categoryclass": "", "imagename": "c0e1be35788304c1f8d3f08471141a59.png", "infoid": 1032343, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2020\u5e7410\u670828\u65e5\u3002\n\u65e0\u53ef\u5949\u544a\uff1a", "note_en": "October 28, 2020\n    No comments :", "posttime": "2020-10-31 02:40:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u79fb\u52a8,preserving,\u65e0\u53ef\u5949\u544a", "title": "\u79fb\u52a8\u9a7e\u9a76\u6267\u7167\u4e2d\u7684\u9690\u79c1\u4fdd\u62a4\u529f\u80fd", "title_en": "Privacy-preserving features in the Mobile Driving License", "transed": 1, "url": "https://security.googleblog.com/2020/10/privacy-preserving-features-in-mobile.html", "via": "", "real_tags": ["\u79fb\u52a8", "\u65e0\u53ef\u5949\u544a"]}, {"category": "", "categoryclass": "", "imagename": "627b4c4ae4f3aa068b3ef536210ba2fb.jpg", "infoid": 1032341, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u4eceVerge\u94fe\u63a5\u8d2d\u4e70\u4e1c\u897f\uff0cVox Media\u53ef\u80fd\u4f1a\u8d5a\u53d6\u4f63\u91d1\u3002\u8bf7\u53c2\u9605\u6211\u4eec\u7684\u9053\u5fb7\u58f0\u660e\u3002\n\u6469\u6258\u7f57\u62c9\u642d\u8f7d5G\u7684Razr\u6b63\u5728\u89e3\u9501\u9500\u552e\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u76f4\u63a5\u4ece\u4e9a\u9a6c\u900a\u8d2d\u4e70\u3002(\u5b83\u751a\u81f3\u4ee5400\u7f8e\u5143\u7684\u4ef7\u683c\u6253\u6298\uff0c\u901a\u5e38\u552e\u4ef7\u4e3a1399.99\u7f8e\u5143\u3002)\u3002\u4f46\u5982\u679c\u4f60\u771f\u7684\u4ece\u4e9a\u9a6c\u900a\u8ba2\u8d2d\u4e86\u8fd9\u6b3e\u53ef\u6298\u53e0\u7ffb\u76d6\u624b\u673a\uff0c\u5f53\u4f60\u6253\u5f00\u76d2\u5b50\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e2a\u4e0d\u540c\u5bfb\u5e38\u7684\u666f\u8c61\uff1a\u53ef\u80fd\u5df2\u7ecf\u6709\u4eba\u6253\u5f00\u4e86\u4f60\u7684\u65b0\u624b\u673a\u7684\u76d2\u5b50\uff0c\u4e3a\u4f60\u6298\u53e0\u4e86\u5b83\u3002\n(\u767e\u601d\u4e70(Best Buy)\u548c\u767e\u5b89\u5c45(B&amp\uff1bH)\u4e5f\u63d0\u4f9b\u8fd9\u4e00\u4f18\u60e0\uff0c\u8fd9\u4e24\u5bb6\u516c\u53f8\u5927\u6982\u4e0d\u4f1a\u5728\u53d1\u8d27\u524d\u628a\u80ae\u810f\u7684\u624b\u5957\u5f04\u5f97\u5230\u5904\u90fd\u662f\u4f60\u7684\u65b0\u624b\u673a\u3002)\u3002\nRazr\u539f\u672c\u662f\u4ee5\u5c55\u5f00\u7684\u4f4d\u7f6e\u88c5\u8fd0\u7684\u3002\u7136\u800c\uff0c\u4e3a\u4e86\u66f4\u597d\u5730\u4fdd\u62a4\u663e\u793a\u5668\uff0c\u6211\u4eec\u6298\u53e0\u4e86RAZR-\u5b83\u66f4\u5b89\u5168\uff0c\u4f46\u53ef\u80fd\u770b\u8d77\u6765\u4e0d\u50cf\u6211\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u4f18\u96c5\u3002\u5982\u679c\u60a8\u5728\u60a8\u7684\u8bbe\u5907\u4e0a\u770b\u5230\u6307\u7eb9\uff0c\u6211\u4eec\u6df1\u8868\u6b49\u610f\uff0c\u4f46\u6211\u4eec\u5411\u60a8\u4fdd\u8bc1\uff0c\u60a8\u7684RAZR\u662f\u5168\u65b0\u7684\u3002\n\u6469\u6258\u7f57\u62c9\u6b63\u5728\u5de5\u5382\u5c42\u9762\u5bf9\u65b0\u6b3eRazr\u8fdb\u884c\u5c01\u95ed\u5f0f\u5305\u88c5\u3002\u4e00\u65e6\u8bbe\u5907\u79bb\u5f00\u6211\u4eec\u7684\u8bbe\u65bd\uff0c\u5c31\u4e0d\u4f1a\u91cd\u65b0\u6253\u5f00\u3002\u6469\u6258\u7f57\u62c9\u5bf9\u5904\u7406\u624b\u5957\u548c\u536b\u751f\u7a0b\u5e8f\u4ee5\u53ca\u8fd0\u8f93\u534f\u8bae\u63d0\u51fa\u4e86\u4e25\u683c\u7684\u8981\u6c42\uff0c\u65e8\u5728\u63d0\u4f9b\u826f\u597d\u7684\u5f00\u7bb1\u5373\u7528\u4f53\u9a8c\u3002\u4e0e\u6240\u6709\u4ea7\u54c1\u4e00\u6837\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u5bc6\u5207\u76d1\u63a7\uff0c\u5e76\u6839\u636e\u9700\u8981\u8fdb\u884c\u989d\u5916\u8c03\u6574\uff0c\u4ee5\u63d0\u4f9b\u6700\u4f73\u7684\u6d88\u8d39\u8005\u4f53\u9a8c\u3002\n\u6700\u521d\u7684Razr\u548c\u5347\u7ea7\u7248\u7684Razr\u90fd\u88c5\u5728\u82b1\u54e8\u7684\u5c55\u793a\u76d2\u4e2d\uff0c\u65e8\u5728\u6700\u5927\u9650\u5ea6\u5730\u5c55\u793a\u4f60\u7684\u624b\u673a\u3002(\u5b83\u8fd8\u5177\u6709\u88ab\u52a8\u626c\u58f0\u5668\u7684\u529f\u80fd\uff0c\u5176\u5f62\u72b6\u65e8\u5728\u653e\u5927\u624b\u673a\u626c\u58f0\u5668\u53d1\u51fa\u7684\u58f0\u97f3\u3002)\u3002Razr\u672c\u8eab\u6700\u521d\u662f\u4ee5\u5c55\u5f00\u7684\u914d\u7f6e\u53d1\u8d27\u7684\uff0c\u4ee5\u66f4\u597d\u5730\u5c55\u793a\u7075\u6d3b\u76846.2\u82f1\u5bf8OLED\u9762\u677f\u3002\n\u4f46\u4f3c\u4e4e\u4e9a\u9a6c\u900a\u6216\u6469\u6258\u7f57\u62c9\u73b0\u5728\u90fd\u5728\u62c5\u5fc3\u8fd9\u6b3e\u552e\u4ef71,399\u7f8e\u5143\u7684\u624b\u673a\u53d1\u8d27\u65f6\u7684\u5b89\u5168\u6027\uff0c\u8fd9\u6b3e\u624b\u673a\u5e26\u6709\u66b4\u9732\u5728\u7a7a\u6c14\u4e2d\u7684\u5de8\u5927(\u4e14\u76f8\u5bf9\u8106\u5f31)\u7684\u663e\u793a\u5c4f\u3002\u56e0\u6b64\uff0c\u4f3c\u4e4e\u662f\u5728\u53d1\u8d27\u524d\u5c06\u624b\u673a\u6298\u53e0\u8d77\u6765\u3002\n\u6574\u4e2a\u60c5\u51b5\u975e\u5e38\u5947\u602a--\u6469\u6258\u7f57\u62c9\u7684\u58f0\u660e\u6697\u793a\u624b\u673a\u5728\u51fa\u5382\u524d\u662f\u6298\u53e0\u597d\u7684\uff0c\u4f46\u4e9a\u9a6c\u900a\u7684\u8b66\u544a\u4f3c\u4e4e\u8868\u660e\u5b83\u662f\u624b\u52a8\u6298\u53e0\u624b\u673a(\u5e76\u5e26\u6709\u6307\u7eb9\u8b66\u544a)\u3002\u800c\u4e14\uff0c\u5373\u4f7f\u662f\u6700\u597d\u7684\u6298\u53e0\u5f0f\u624b\u673a\u4e5f\u662f\u6613\u788e\u7684\uff0c\u8fd9\u5bf9\u6240\u6709\u8fd9\u4e9b\u90fd\u6ca1\u6709\u5e2e\u52a9\u3002\n\u8fd9\u662f\u5bf9\u6469\u6258\u7f57\u62c9\u53ef\u6298\u53e0\u624b\u673a\u8106\u5f31\u6027\u7684\u4e0d\u7ecf\u610f\u7684\u63a7\u8bc9\u5417\uff1f\u4e9a\u9a6c\u900a\u91c7\u53d6\u4e86\u79ef\u6781\u8c28\u614e\u7684\u63aa\u65bd\u6765\u5b89\u5168\u53d1\u8d27\u5417\uff1f\u8c01\u80fd\u8bf4\u5462\u3002\n\u66f4\u65b0\uff0c10\u670830\u65e5\u661f\u671f\u4e94\u4e0b\u53482\u70b936\u5206\uff1a\u66f4\u65b0\u6587\u7ae0\u6307\u51fa\uff0c\u4e9a\u9a6c\u900a\u5df2\u7ecf\u53d6\u6d88\u4e86\u6307\u7eb9\u8b66\u544a\uff0c\u5e76\u589e\u52a0\u4e86\u6469\u6258\u7f57\u62c9\u7684\u56de\u5e94\u3002", "note_en": "If you buy something from a Verge link, Vox Media may earn a commission. See our  ethics statement.\n Motorola\u2019s 5G-equipped Razr is being sold unlocked, which means you can buy it straight from Amazon. (It\u2019s even on sale for $400 off the usual $1,399.99 price.) But if you do order the foldable flip phone from Amazon, you might have been greeted by an unusual sight when you open the box: someone else might have already unboxed your new phone and folded it for you.\n (That deal is also available from  Best Buy and  B&amp;H, which will presumably not get their grubby mitts all over your new phone before shipping.)\n  RAZR was meant to be shipped in the unfolded position. However, in order to better protect the display we have folded your RAZR \u2013 it\u2019s safer, but may not look as elegant as we hoped. We apologize if you see fingerprints on your device, but we assure you your RAZR is brand new.\n  Motorola is packaging the new razr in its closed form at the factory level. Once the device leaves our facilities it is not reopened. Motorola places strict requirements on handling with gloves and sanitation procedures along with shipping protocols aimed at providing a great out of box experience. As with all products, we\u2019ll continue to closely monitor and make additional adjustments as needed to give the best consumer experience.\n   Both the original Razr and the updated model come in fancy display boxes meant to showcase your phone to its fullest degree. (It also functions as a passive speaker, and its shape is designed to amplify the sound from the phone\u2019s speaker.) The Razr itself was originally shipped in an unfolded configuration to better show off the flexible 6.2-inch OLED panel.\n But it seems that either Amazon or Motorola is now concerned about the safety of shipping the $1,399 phone with that massive (and relatively fragile) display exposed to the elements. Hence what appears to be the shift towards folding the phone before shipping.\n The whole situation is very weird \u2014 Motorola\u2019s statement implies that the phones are folded before leaving the factory, but Amazon\u2019s warning seemed to make it clear that it was manually folding the phones (complete with a fingerprint warning.) And all of this isn\u2019t helped by the fact that even the best foldable phones  are fragile.\n Is this a casual indictment of the fragility of Motorola\u2019s foldable phone? Amazon taking aggressively cautious measures to safely ship a product? Who can say.\n  Update, Friday October 30th, 2:36pm:  Updated article to note that Amazon has removed its fingerprint warning and added Motorola\u2019s response.", "posttime": "2020-10-31 02:40:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amazon,\u4e9a\u9a6c\u900a,\u624b\u673a,\u76d2\u5b50,opening", "title": "\u4e9a\u9a6c\u900a\u6b63\u5728\u6253\u5f00\u5168\u65b0\u7684Razr\u76d2\u5b50\u4ee5\u6298\u53e0\u624b\u673a\uff0c\u4ee5\u786e\u4fdd\u8fd0\u8f93\u5b89\u5168", "title_en": "Amazon is opening brand-new Razr boxes to fold the phones for safer shipping", "transed": 1, "url": "https://www.theverge.com/2020/10/29/21540535/amazon-motorola-razr-fingerprint-folding-phones-screen-protection", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u624b\u673a", "\u76d2\u5b50", "opening"]}, {"category": "", "categoryclass": "", "imagename": "bb9c27282d147a7bb2d9dcc5b546c390.jpeg", "infoid": 1032340, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u745e\u58eb\u4fe1\u8d37\u5361\u739b\u516c\u53f8(Credit Karma Inc.)\u3002\u636e\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u6d3d\u8c08\u5c06\u5176\u7eb3\u7a0e\u51c6\u5907\u4e1a\u52a1\u51fa\u552e\u7ed9Square Inc.\uff0c\u6b64\u4e3e\u610f\u5728\u907f\u514d\u8fd9\u5bb6\u4e2a\u4eba\u91d1\u878d\u95e8\u6237\u7f51\u7ad9\u5373\u5c06\u4ee571\u4ebf\u7f8e\u5143\u51fa\u552e\u7ed9TurboTax\u5236\u9020\u5546Intuit Inc.\u7684\u6f5c\u5728\u53cd\u5784\u65ad\u53cd\u5bf9\u610f\u89c1\u3002\n\u65e0\u6cd5\u4e86\u89e3\u6f5c\u5728\u4ea4\u6613\u7684\u6761\u6b3e\u3002\u51fa\u552e\u8be5\u90e8\u95e8\u5c06\u9700\u8981\u5f97\u5230\u53f8\u6cd5\u90e8\u7684\u6279\u51c6\uff0c\u53f8\u6cd5\u90e8\u62c5\u5fc3\uff0c\u5c06Credit Karma\u89c4\u6a21\u867d\u5c0f\u4f46\u4e0d\u65ad\u589e\u957f\u7684\u7eb3\u7a0e\u51c6\u5907\u4e1a\u52a1\u4e0e\u884c\u4e1a\u9886\u5148\u7684TurboTax\u5408\u5e76\u5c06\u2026", "note_en": "Credit Karma Inc. is in talks to sell its tax-preparation business to Square Inc., according to people familiar with the matter, a move meant to head off potential antitrust objections to the personal-finance portal\u2019s pending $7.1 billion sale to TurboTax maker Intuit Inc.\n  Terms of the potential deal couldn\u2019t be learned. A sale of the unit would require approval from the Justice Department, which is concerned that bringing together Credit Karma\u2019s small but growing tax-preparation business with industry-leading TurboTax would...", "posttime": "2020-10-31 02:39:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u51fa\u552e,karma,turbotax", "title": "\u4fe1\u7528\u4e1a\u56e0\u679c\u62a5\u5e94\u5c06\u7b79\u7a0e\u4e1a\u52a1\u51fa\u552e\u7ed9Square", "title_en": "Credit Karma in Talks to Sell Tax-Preparation Business to Square", "transed": 1, "url": "https://www.wsj.com/articles/credit-karma-in-talks-to-sell-tax-preparation-business-to-square-11604067274", "via": "", "real_tags": ["\u51fa\u552e", "karma", "turbotax"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1032338, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Clojure\u5f00\u53d1\u4eba\u5458\u5df4\u585e\u7f57\u90a3\u5df2\u7ecf\u8fd0\u884c\u4e86\u51e0\u5e74\u3002\u56e0\u4e3a\u6211\u4eec\u4eba\u6570\u8fd8\u4e0d\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u4f1a\u53c2\u52a0\u66b4\u5f92\u7f16\u7a0b\u8bfe\u7a0b\uff0c\u4f5c\u4e3a\u6211\u4eec\u6240\u8bf4\u7684\u4f20\u5947\u6545\u4e8b\u7684\u4e00\u90e8\u5206\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4f20\u5947\uff0c\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u7ec3\u4e60\u6216\u5f62\u5f0f\u6cd5\uff0c\u5e76\u5728\u6700\u521d\u7684\u4e00\u5230\u4e24\u6b21\u4f1a\u8bae\u4e2d\u89e3\u51b3\u5b83\u3002\u4e4b\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u60f3\u8c61\u4f7f\u7528\u4e0d\u540c\u7684Clojure/ClojureScript\u5e93\u6216\u6280\u672f\u7684\u7ec3\u4e60\u53d8\u4f53\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u63a5\u4e0b\u6765\u7684\u4f1a\u8bdd\u4e2d\u63a2\u7d22\u548c\u5f00\u53d1\u8fd9\u4e9b\u53d8\u4f53\u3002\u4e00\u65e6\u6211\u4eec\u89c9\u5f97\u6211\u4eec\u65e0\u6cd5\u60f3\u8c61\u66f4\u6709\u8da3\u7684\u53d8\u5316\uff0c\u6216\u8005\u6211\u4eec\u538c\u5026\u4e86\u4e00\u4e2a\u7279\u5b9a\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5c31\u4f1a\u9009\u62e9\u4e00\u4e2a\u4e0d\u540c\u7684\u95ee\u9898\u6765\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u4f20\u5947\u3002\u4f60\u5e94\u8be5\u8bd5\u8bd5\u505a\u4f20\u5947\uff0c\u5b83\u4eec\u5f88\u6709\u8da3\uff01\u6700\u8fd1\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u7814\u7a76\u5bbe\u679c\u578b\u3002\u8fd9\u4e9b\u662f\u6211\u4eec\u4e3a\u68c0\u67e5\u968f\u673a\u751f\u6210\u7684\u5bbe\u679c\u5361\u800c\u7f16\u5199\u7684\u6d4b\u8bd5\uff1a\u6211\u4eec\u6700\u521d\u7f16\u5199\u7684\u751f\u6210\u5b83\u4eec\u7684\u4ee3\u7801\u7c7b\u4f3c\u4e8e(\u6211\u4eec\u6ca1\u6709\u4fdd\u5b58\u539f\u59cb\u7684\u4ee3\u7801)\uff1a\u6b63\u5982\u60a8\u53ef\u4ee5\u770b\u5230\u7684\u90a3\u6837\uff0c\u6d4b\u8bd5\u5e76\u4e0d\u5173\u5fc3\u5bbe\u679c\u5361\u7684\u6bcf\u4e00\u5217\u4e2d\u5305\u542b\u54ea\u4e9b\u7279\u5b9a\u7684\u6570\u503c\u3002\u4ed6\u4eec\u53ea\u662f\u5728\u68c0\u67e5\u4ed6\u4eec\u662f\u5426\u7b26\u5408\u5bbe\u679c\u5361\u7684\u89c4\u683c\u3002\u8fd9\u4f7f\u5f97\u5b83\u4eec\u975e\u5e38\u9002\u5408\u57fa\u4e8e\u5c5e\u6027\u7684\u6d4b\u8bd5\u3002\u5728\u63a5\u4e0b\u6765\u7684\u5bbe\u679c\u4f20\u5947\u4f1a\u8bae\u4e2d\uff0c\u6211\u5efa\u8bae\u4f7f\u7528clojure.spec\u521b\u5efa\u5bbe\u679c\u5361\u3002SPEC\u662f\u4e00\u4e2aClojure\u5e93\uff0c\u7528\u4e8e\u63cf\u8ff0\u6570\u636e\u548c\u51fd\u6570\u7684\u7ed3\u6784\u3002\u89c4\u8303\u53ef\u7528\u4e8e\u9a8c\u8bc1\u6570\u636e\u3001\u7b26\u5408(\u5206\u89e3)\u6570\u636e\u3001\u89e3\u91ca\u65e0\u6548\u6570\u636e\u3001\u751f\u6210\u7b26\u5408\u89c4\u8303\u7684\u793a\u4f8b\uff0c\u4ee5\u53ca\u81ea\u52a8\u4f7f\u7528\u751f\u6210\u6027\u6d4b\u8bd5\u6765\u6d4b\u8bd5\u529f\u80fd\u3002\n\u6709\u5173\u8fd9\u4e2a\u5947\u5999\u7684\u5e93\u7684\u7b80\u8981\u4ecb\u7ecd\uff0c\u8bf7\u53c2\u9605Arne Brasseur\u5bf9clojure.spec talk\u7684\u4ecb\u7ecd\u3002\u6211\u4ee5\u524d\u5728\u5de5\u4f5c\u4e2d\u7528\u8fc7clojure.spec\u3002\u5728\u6211\u76ee\u524d\u7684\u5ba2\u6237Green Power Monitor\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u5b83\u6765\u9a8c\u8bc1\u6d41\u7ecf\u4e00\u4e9b\u952e\u540d\u79f0\u7a7a\u95f4\u7684\u4e00\u4e9b\u91cd\u8981\u516c\u5171\u51fd\u6570\u7684\u6570\u636e\u7684\u5f62\u72b6(\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd8\u6709\u4e00\u4e9b\u7c7b\u578b)\u3002\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u524d\u7f6e\u6761\u4ef6\u548c\u540e\u7f6e\u6761\u4ef6\u8fdb\u884c\u9a8c\u8bc1(\u8bf7\u53c2\u9605Fogus\u7684\uff1aPre\u548c\uff1aPOST\u4ee5\u4e86\u89e3\u66f4\u591a\u4fe1\u606f)\uff0c\u4ece\u90a3\u65f6\u8d77\uff0c\u5f00\u59cb\u4f7f\u7528clojure.spec\u7f16\u5199\u5176\u4e2d\u4e00\u4e9b\u6761\u4ef6\u662f\u5f88\u81ea\u7136\u7684\u4e00\u6b65\u3002Spec\u89c4\u8303\u7684\u53e6\u4e00\u4e2a\u5e38\u89c1\u7528\u9014\u662f\u751f\u6210\u7b26\u5408\u89c4\u8303\u7684\u968f\u673a\u6570\u636e\uff0c\u7528\u4e8e\u57fa\u4e8e\u5c5e\u6027\u7684\u6d4b\u8bd5\u3002\u5728Bingo Kata\u6848\u4f8b\u4e2d\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u53ef\u4ee5\u5728\u751f\u4ea7\u4ee3\u7801\u4e2d\u4f7f\u7528\u8fd9\u79cd\u968f\u673a\u751f\u6210\u7b26\u5408\u89c4\u8303\u7684\u6570\u636e\u7684\u529f\u80fd\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528clojure.spec\u63cf\u8ff0\u5bbe\u679c\u5361\uff0c\u7136\u540e\u5229\u7528\u8be5\u89c4\u8303\u4f7f\u7528clojure.test.check\u7684\u751f\u6210\u51fd\u6570\u968f\u673a\u751f\u6210\u5bbe\u679c\u5361\uff0c\u800c\u4e0d\u662f\u7f16\u5199\u4ee3\u7801\u6765\u968f\u673a\u751f\u6210\u5bbe\u679c\u5361\uff0c\u7136\u540e\u6d4b\u8bd5\u7ed3\u679c\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\u5e26\u7740\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u6211\u4eec\u5f00\u59cb\u4e00\u70b9\u4e00\u70b9\u5730\u4e3aREPL\u4e0a\u7684Bingo\u5217\u521b\u5efa\u4e00\u4e2a\u89c4\u8303(\u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u8fd9\u91cc\u60a8\u53ef\u4ee5\u770b\u5230\u7684\u662f\u89c4\u8303\u7684\u6700\u7ec8\u5f62\u5f0f)\uff1a\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e86clojure.spec\u7684coll-of\u51fd\u6570\uff0c\u5b83\u4f7f\u6211\u4eec\u80fd\u591f\u7a0d\u5fae\u7b80\u5316\u89c4\u8303\uff1a\u4e00\u65e6\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u62e5\u6709\u4e86\u5b83\uff0c\u6211\u4eec\u5c31\u5c1d\u8bd5\u4f7f\u7528\u5217\u89c4\u8303\u6765\u4f7f\u7528clojure.test.check\u7684Generate\u51fd\u6570\u6765\u751f\u6210\u5217\uff0c\u4f46\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4ee5\u4e0b\u9519\u8bef\uff1a\u5f53\u7136\uff0c\u6211\u4eec\u662f\u5728\u5c1d\u8bd5\u5927\u6d77\u635e\u9488\u2026\u2026\u3002\u5728\u5bf9REPL\u8fdb\u884c\u4e86\u4e00\u4e9b\u8bd5\u9519\u5e76\u9605\u8bfb\u4e86clojure.spec\u6307\u5357\u4e4b\u540e\uff0c\u6211\u4eec\u627e\u5230\u4e86clojure.spec\u7684int-in\u51fd\u6570\uff0c\u5e76\u6700\u7ec8\u8bbe\u6cd5\u751f\u6210\u4e86\u5bbe\u679c\u5217\uff1a\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528REPL\u4e2d\u7684\u89c4\u8303\u4ee3\u7801\u6765\u7f16\u5199\u5bbe\u679c\u5361\u89c4\u8303\uff1a\u5728\u8be5\u89c4\u8303\u4e2d\uff0c\u6211\u4eec\u7f16\u5199\u4e86create-column-spec\u5de5\u5382\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u521b\u5efa\u5217\u89c4\u8303\u4ee5\u6d88\u9664\u4e0d\u540c\u5217\u7684\u89c4\u8303\u4e4b\u95f4\u7684\u91cd\u590d\u3002\u6709\u4e86\u8fd9\u4e00\u70b9\uff0c\u5c31\u53ef\u4ee5\u5728\u4e00\u884c\u4ee3\u7801\u4e2d\u521b\u5efa\u5bbe\u679c\u5361\uff1a\u57fa\u4e8e\u5c5e\u6027\u7684\u6d4b\u8bd5\u6839\u636e\u8f93\u5165\u505a\u51fa\u5173\u4e8e\u4ee3\u7801\u8f93\u51fa\u7684\u8bed\u53e5\uff0c\u5e76\u4e14\u8fd9\u4e9b\u8bed\u53e5\u9488\u5bf9\u8bb8\u591a\u4e0d\u540c\u7684\u53ef\u80fd\u8f93\u5165\u8fdb\u884c\u9a8c\u8bc1\u3002Jessica Kerr(\u57fa\u4e8e\u5c5e\u6027\u7684\u6d4b\u8bd5\uff1a\u8fd9\u662f\u4ec0\u4e48\uff1f)\u3002\n\u6709\u4e86\u8fd9\u4e9b\u89c4\u8303\uff0c\u53ea\u9700\u4f7f\u7528clojure.spec\u521b\u5efa\u7684\u751f\u6210\u5668\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u6211\u4eec\u7684\u5bbe\u679c\u5361\u6d4b\u8bd5\u66f4\u6539\u4e3a\u4f7f\u7528\u57fa\u4e8e\u5c5e\u6027\u7684\u6d4b\u8bd5\uff0c\u800c\u4e0d\u662f\u57fa\u4e8e\u793a\u4f8b\u7684\u6d4b\u8bd5\uff1a\u5728\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u91cd\u7528\u4e86\u4e3a\u57fa\u4e8e\u793a\u4f8b\u7684\u6d4b\u8bd5\u7f16\u5199\u7684check-column\u51fd\u6570\u3002\u8fd9\u4e00\u53d8\u5316\u662f\u5982\u6b64\u5bb9\u6613\uff0c\u56e0\u4e3a\uff1a\u3002\u6b63\u5982\u6211\u524d\u9762\u63d0\u5230\u7684\uff0c\u6700\u521d\u7684\u793a\u4f8b\u6d4b\u8bd5\u5df2\u7ecf\u68c0\u67e5\u4e86\u6709\u6548\u5bbe\u679c\u5361\u7684\u5c5e\u6027\u3002\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u5e76\u4e0d\u5173\u5fc3\u5bbe\u679c\u5361\u7684\u6bcf\u4e00\u5217\u90fd\u5305\u542b\u4e86\u54ea\u4e9b\u7279\u5b9a\u7684\u6570\u503c\uff0c\u76f8\u53cd\uff0c\u4ed6\u4eec\u53ea\u662f\u68c0\u67e5\u8fd9\u4e9b\u5361\u662f\u5426\u9075\u5faa\u5bbe\u679c\u5361\u662f\u5426\u6709\u6548\u7684\u89c4\u5219\u3002\nKata\u7684\u4e0b\u4e00\u4e2a\u7528\u6237\u6545\u4e8b\u8981\u6c42\u6211\u4eec\u68c0\u67e5\u5bbe\u679c\u724c\uff0c\u770b\u770b\u5b83\u7684\u73a9\u5bb6\u662f\u5426\u8d62\u4e86\u3002\u6211\u4eec\u8ba4\u4e3a\u8fd9\u53ef\u80fd\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u68c0\u67e5\u5361\u7247\u4e2d\u7684\u53f7\u7801\u662f\u5426\u5305\u542b\u5728\u88ab\u53eb\u53f7\u7801\u96c6\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u505aTDD\uff0c\u800c\u662f\u5728REPL\u4e0a\u505a\u4e86\u4e00\u70b9REPL\u9a71\u52a8\u7684\u5f00\u53d1(RDD)\uff1a\u4e00\u65e6\u6211\u4eec\u8ba9\u5b9e\u73b0\u5de5\u4f5c\u4e86\uff0c\u6211\u4eec\u5c31\u628a\u5b83\u4eceREPL\u590d\u5236\u5230\u5b83\u76f8\u5e94\u7684\u540d\u79f0\u7a7a\u95f4\u4e2d", "note_en": "Clojure Developers Barcelona has been running for several years now. Since we&#39;re not many yet, we usually do  mob programming sessions as part of what we call &#34; sagas&#34;. For each  saga, we choose an exercise or kata and solve it during the first one or two sessions. After that, we start imagining variations on the exercise using different Clojure/ClojureScript libraries or technologies we feel like exploring and develop those variations in following sessions. Once we feel we can&#39;t imagine more interesting variations or we get tired of a given problem, we choose a different problem to start a new  saga. You should try doing  sagas, they are a lot of fun!  Recently we&#39;ve been working on the  Bingo Kata.   These were the tests we wrote to check the randomly generated bingo cards:  and the code we initially wrote to generate them was something like (we didn&#39;t save the original one):  As you can see the tests are not concerned with which specific numeric values are included on each column of the bingo card. They are just checking that they follow the specification of a bingo card. This makes them very suitable for property-based testing.   In the following session of  the Bingo saga, I suggested creating the bingo cards using  clojure.spec. spec is a Clojure library to describe the structure of data and functions. Specs can be used to validate data, conform (destructure) data, explain invalid data, generate examples that conform to the specs, and automatically use generative testing to test functions.\nFor a brief introduction to this wonderful library see  Arne Brasseur&#39;s  Introduction to clojure.spec talk.  I&#39;d used  clojure.spec at work before. At my current client  Green Power Monitor, we&#39;ve been using it for a while to validate the shape (and in some cases types) of data flowing through some important public functions of some key name spaces. We started using pre and post-conditions for that validation (see Fogus&#39;  Clojure\u2019s :pre and :post to know more), and from there, it felt as a natural step to start using  clojure.spec to write some of them.  Another common use of  clojure.spec specs is to generate random data conforming to the spec to be used for  property-based testing.  In the Bingo kata case, I thought that we might use this ability of randomly generating data conforming to the spec in production code. This meant that instead of writing code to randomly generating bingo cards and then testing that the results were as expected, we might describe the bingo cards using  clojure.spec and then took advantage of that specification to randomly generate bingo cards using  clojure.test.check&#39;s  generate function.  So with this idea in our heads, we started creating a spec for bingo columns on the REPL bit by bit (for the sake of brevity what you can see here is the final form of the spec):  then we discovered  clojure.spec&#39;s coll-of function which allowed us to simplify the spec a bit:   Once we thought we had it, we tried to use the column spec to generate columns with  clojure.test.check&#39;s  generate function, but we got the following error:  Of course we were trying to find a needle in a haystack...   After some trial and error on the REPL and reading  the clojure.spec guide, we found the  clojure.spec&#39;s int-in function and we finally managed to generate the bingo columns:  Then we used the spec code from the REPL to write the bingo cards spec:  in which we wrote the  create-column-spec factory function that creates column specs to remove duplication between the specs of different columns.  With this in place the bingo cards could be created in a line of code:    Property-based tests make statements about the output of your code based on the input, and these statements are verified for many different possible inputs.  Jessica Kerr ( Property-based testing: what is it?)\nHaving the specs it was very easy to change our bingo card test to use  property-based testing instead of  example-based testing just by using the  generator created by  clojure.spec:  See in the code that we&#39;re reusing the  check-column function we wrote for the  example-based tests.  This change was so easy because of: . The initial example tests, as I mentioned before, were already checking the properties of a valid bingo card. This means that they weren&#39;t concerned with which specific numeric values were included on each column of the bingo card, but instead, they were just checking that the cards followed the rules for a bingo card to be valid.\n The next user story of the kata required us to check a bingo card to see if its player has won. We thought this might be easy to implement because we only needed to check that the numbers in the card where contained by the set of called numbers, so instead of doing TDD, we  played a bit on the REPL did REPL-driven development (RDD):  Once we had the implementation working, we copied it from the REPL into its corresponding name space   and wrote the quicker but ephemeral REPL tests as &#34;permanent&#34; unit tests:  In this case RDD allowed us to go faster than TDD, because RDD&#39;s feedback cycle is much faster. Once the implementation is working on the REPL, you can choose which REPL tests you want to keep as unit tests.   Some times I use only RDD like in this case, other times I use a mix of TDD and RDD following this cycle: Write a failing test (using examples that a bit more complicated than the typical ones you use when doing only TDD).\n  Explore and triangulate on the REPL until I made the test pass with some ugly but complete solution.\nOther times I just use TDD.   I think what I use depends a lot on how easy I feel the implementation might be.   The last user story required us to create a bingo caller that randomly calls out Bingo numbers. To develop this story, we used TDD and an  atom to keep the not-yet-called numbers. These were our tests:  and this was the resulting code:  And it was done! See  all the commits here if you want to follow the process (many intermediate steps happened on the REPL). You can find all  the code on GitHub.   This experiment was a lot of fun because we got to play with both  clojure.spec and  clojure/test.check, and we learned a lot. While explaining what we did, I talked a bit about  property-based testing and how I use  REPL-driven development.  Thanks again to all my colleagues in  Clojure Developers Barcelona!", "posttime": "2020-10-31 02:39:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "clojure", "title": "\u4f7f\u7528clojure.spec\u3001clojure/test.check\u3001RDD\u548cTDD\u751f\u6210\u5bbe\u679c\u5361", "title_en": "Generating bingo cards with clojure.spec, Clojure/test.check, RDD and TDD", "transed": 1, "url": "https://garajeando.blogspot.com/2018/03/generating-bingo-cards-with-clojurespec.html", "via": "", "real_tags": ["clojure"]}, {"category": "", "categoryclass": "", "imagename": "3cd67f8c773c5df13d60d9d2e7f8918c.png", "infoid": 1032337, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u753b\u5f97\u4e0d\u662f\u5f88\u597d\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u683c\u5f0f\u5316\u7684C\u4ee3\u7801\u3002\u8fd9\u5e94\u8be5\u662f\u4e00\u4e2a\u7528C\u8bed\u8a00\u7f16\u5199\u7684\u4e09\u89d2\u5f62\u58f0\u6ce2\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u6bb5C\u4ee3\u7801\u64ad\u653e\u7684\u662f\u4e24\u4e2a\u516b\u5ea6\u7684\u65cb\u5f8b\uff0c\u5b83\u4eec\u662f\u7528\u6807\u51c6\u8f93\u5165\u7684\u6587\u672c\u7b26\u53f7\u5199\u6210\u7684\u3002\n\u5b83\u53ea\u6709160\u4e2a\u5b57\u8282\uff0c\u9002\u5408\u73b0\u4ee3\u7684tweet\uff0c\u4e4b\u6240\u4ee5\u6709\u5b83\uff0c\u662f\u4e3a\u4e86\u5c55\u793a\u7528\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662fcSound\u3001Chuck\u6216SonicPI\u8fd9\u6837\u7684\u7279\u6b8a\u8bed\u8a00\uff0c\u7528\u4ee3\u7801\u521b\u5efa\u6700\u4f4e\u9650\u5ea6\u7684\u97f3\u4e50\u662f\u591a\u4e48\u7b80\u5355\u3002\n\u8fd9\u5c31\u662f\u58f0\u97f3--\u4e00\u79cd\u80fd\u53ca\u65f6\u632f\u52a8\u548c\u79fb\u52a8\u7a7a\u6c14\u7684\u4e1c\u897f\uff0c\u7a7a\u6c14\u4f20\u5230\u4f60\u7684\u8033\u6735\u91cc\uff0c\u4f60\u5c31\u80fd\u542c\u5230\u3002\u56fe\u4e2d\u4e0a\u4e0b\u8d77\u4f0f\u7684\u6ce2\u6d6a\u8bf4\u660e\u7a7a\u6c14\u5728\u632f\u52a8\u3002\u4e3a\u4e86\u7528\u6570\u5b57\u6765\u63cf\u8ff0\u8fd9\u4e2a\u6ce2\uff0c\u4eba\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u60f3\u6cd5\uff0c\u5373\u4ee5\u56fa\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u6d4b\u91cf\u6ce2\u7684\u632f\u5e45\uff0c\u5e76\u5c06\u8fd9\u4e9b\u91c7\u6837\u7684\u6570\u636e\u70b9\u7528\u4f5c\u201c\u6570\u5b57\u58f0\u97f3\u201d\u3002\n\u51fa\u73b0\u4e86\u4e24\u4e2a\u95ee\u9898--\u591a\u4e45\u91c7\u6837\u4e00\u6b21\u58f0\u6ce2\uff0c\u4ee5\u53ca\u5982\u4f55\u4ee5\u6570\u5b57\u65b9\u5f0f\u8868\u793a\u632f\u5e45\u8303\u56f4\u7684\u5355\u4f4d\uff1f\u8981\u56de\u7b54\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u56de\u60f3\u4e00\u4e0b\uff0c\u4eba\u8033\u542c\u4e0d\u5230\u4efb\u4f55\u9ad8\u4e8e20000\u8d6b\u5179\u7684\u58f0\u97f3\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48CD\u97f3\u4e50\u7684\u91c7\u6837\u7387\u662f22000\u8d6b\u5179\u3002\u7136\u800c\uff0c\u73b0\u4ee3\u58f0\u5361\u5f80\u5f80\u4f7f\u7528\u4e24\u500d\u9ad8\u7684\u91c7\u6837\u7387-44100 Hz\u621648000 Hz\uff0c\u751a\u81f396000 Hz\u3002\u50cfArduino\u6216NES\u8fd9\u6837\u7684Lo-fi\u97f3\u9891\u8bbe\u5907\u6839\u672c\u4e0d\u80fd\u4ee5\u5982\u6b64\u9ad8\u7684\u901f\u5ea6\u53d1\u51fa\u58f0\u97f3\uff0c\u6240\u4ee5\u5b83\u4eec\u4f7f\u7528\u4e86\u76f8\u5f53\u4f4e\u7684\u91c7\u6837\u7387\uff0c\u6bd4\u59828000 Hz\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u5728\u672c\u6587\u4e2d\u5c06\u4f7f\u7528\u7684\u91c7\u6837\u7387\u3002\n\u5e45\u5ea6\u91cf\u5316\u4e5f\u662f\u4e00\u4e2a\u6298\u8877\u7684\u95ee\u9898\u3002\u7406\u8bba\u4e0a\uff0c\u4eba\u4eec\u53ef\u4ee5\u8bc6\u522b\u632f\u5e45\u7684\u975e\u5e38\u7ec6\u5fae\u7684\u53d8\u5316\uff0c\u4f46\u8ba1\u7b97\u673a\u4e0d\u80fd\u5bf9\u6bcf\u4e2a\u6837\u672c\u4f7f\u7528\u65e0\u9650\u7cbe\u786e\u7684\u6570\u5b57\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u6267\u884c\u91cf\u5316-\u5b83\u4eec\u5c06\u632f\u5e45\u503c\u6620\u5c04\u5230\u56fa\u5b9a\u5bbd\u5ea6\u7684\u6570\u5b57\uff0c\u5982\u6d6e\u70b9\u6570\u6216\u6574\u6570\u3002\u5728\u4e0a\u9762\u7684\u56fe\u7247\u4e2d\uff0c\u6211\u4f7f\u7528+1\u548c-1\u4f5c\u4e3a\u632f\u5e45\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\uff0c\u5047\u8bbe\u662fFLOAT\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u662f\u5176\u4ed6\u6d41\u884c\u7684\u683c\u5f0f\u662f\u5e26\u7b26\u53f7\u7684int16\uff0c\u5176\u4e2d\u632f\u5e45\u4ece-32768\u53d8\u4e3a+32767\uff0c\u6216\u8005uint8\uff0c\u5176\u4e2d\u632f\u5e45\u4ece0\u53d8\u4e3a255.\u3002\u6700\u540e\u4e00\u4e2a\u662f\u6211\u4eec\u5c06\u5728\u672c\u6587\u4e2d\u4f7f\u7528\u7684\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u5bb9\u6613\u7406\u89e3\uff0c\u5e76\u4e14\u5e26\u6765\u4e86\u4e00\u4e9b\u4e0d\u9519\u7684\u6280\u5de7\u3002\n\u73b0\u5728\uff0c\u6709\u4e868000\u7684\u91c7\u6837\u7387\u548c\u65e0\u7b26\u53f7uint8\u7684\u6570\u636e\u683c\u5f0f\uff0c\u6570\u5b57\u58f0\u97f3\u65e0\u975e\u5c31\u662f\u4e00\u4e2a\u4ee5\u6bcf\u79d28000\u5b57\u8282\u7684\u901f\u5ea6\u5728\u65f6\u95f4\u4e0a\u79fb\u52a8\u7684\u5b57\u8282\u6570\u7ec4\u3002\n\u5982\u679c\u6211\u4eec\u7684\u6570\u7ec4\u5168\u4e3a\u96f6-\u5c06\u4f1a\u9759\u9ed8\u3002\u5982\u679c\u6211\u4eec\u7684\u9635\u5217\u5c06\u5168\u90e8\u662f255-\u4e5f\u5c06\u662f\u9759\u9ed8\u7684\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u7684\u6570\u7ec4\u5305\u542b\u4e0d\u540c\u7684\u6570\u5b57-\u90a3\u5c31\u662f\u58f0\u6ce2\u3002\n\u6211\u4eec\u600e\u4e48\u80fd\u542c\u5230\u5462\uff1f\u4e00\u79cd\u9014\u5f84\u662f\u4f7f\u7528\u539f\u751f\u64cd\u4f5c\u7cfb\u7edfAPI\uff0c\u8fd9\u5c06\u662f\u901a\u5411\u8de8\u5e73\u53f0\u7f16\u7a0b\u5730\u72f1\u7684\u9014\u5f84\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u90fd\u6709\u4e00\u7ec4\u4e0d\u540c\u7684API\uff0c\u540c\u6837\u590d\u6742\uff0c\u4f7f\u7528\u8d77\u6765\u4e5f\u4e0d\u6109\u5feb\u3002\u8fd9\u5c31\u662fUNIX Way\u7684\u7528\u6b66\u4e4b\u5730\u3002\u6709\u4e00\u4e9b\u5c0f\u7684\u5b9e\u7528\u7a0b\u5e8f\uff0c\u5982\u679c\u4f60\u5e78\u8fd0\u7684\u8bdd-\u5b83\u4eec\u751a\u81f3\u53ef\u80fd\u662f\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u9644\u5e26\u7684-\u5141\u8bb8\u4f60\u64ad\u653e\u6765\u81eastdin\u7684\u58f0\u97f3\u6d41\u3002\u5728Linux\u4e0a\uff0c\u8fd9\u5c06\u662faplay\u6216pacat\uff0c\u800cMacOS\u548cWindows\u7528\u6237\u5fc5\u987b\u5b89\u88c5SOX\u5e76\u4f7f\u7528PLAY\u547d\u4ee4\u3002\n\u4ee5\u4e0b\u51e0\u4e2a\u547d\u4ee4\u5e94\u8be5\u5141\u8bb8\u60a8\u4ee5\u6bcf\u79d28000\u4e2a\u6837\u672c\u7684\u901f\u7387\u64ad\u653e\u6807\u51c6\u8f93\u5165\u4e2d\u7684\u539f\u59cb\u65e0\u7b26\u53f7\u5b57\u8282\uff1a\nAlias play=&#39\uff1baplay&#39\uff1balias play=&#39\uff1bpacat--rate 8000--channel 1--format u8&#39\uff1balias play-c1-b8-eunsign-traw-r8k-&#39\uff1balias play=&#39\uff1bmplayer-cache 1024-Quiet-rawdio samplesize=1\uff1achannel=1\uff1arate=8000-demuxer rawdio-&#39\uff1balias play=&#39\uff1bffplay-ar 8000-ac 1-f u8-nodisp-&#39\uff1b#play\u4e00\u4e9b\u767d\u566a\u97f3/dev/urandom|play=1\uff1achannel=1\uff1arate=8000-demuxer rawdio-&#39\uff1b#play-ar 8000-ac 1-f u8-nodisecat/dev/urandom|play\u3002\n\u6570\u5b57\u58f0\u97f3\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u7f16\u7a0b\u6982\u5ff5\uff0c\u751f\u6210\u5b83\u53ef\u4ee5\u50cf\u7f16\u5199\u4e00\u4e2afor\u5faa\u73af\u4e00\u6837\u7b80\u5355\u3002\u4f8b\u5982\uff0c\u8fd9\u4e2a\u5c0f\u5e94\u7528\u7a0b\u5e8f\u5e94\u8be5\u4f1a\u53d1\u51fa\u65e0\u9650\u7684\u767d\u566a\u97f3\uff1a\n//cc noise.c-o Noise&amp\uff1b&amp\uff1b./Noise|play#include&lt\uff1bstdio.h&gt\uff1b#include&lt\uff1bstdlib.h&gt\uff1bint main(){for(\uff1b\uff1b)putchar(rand())\uff1b}\u3002\n\u4e3a\u4e86\u6f14\u594f\u97f3\u7b26\u800c\u4e0d\u662f\u566a\u97f3\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u58f0\u97f3\u5177\u6709\u5468\u671f\u6027\uff0c\u6ce2\u5f62\u5e94\u8be5\u4ee5\u7279\u5b9a\u7684\u9891\u7387\u91cd\u590d\uff0c\u8be5\u9891\u7387\u5c06\u5b9a\u4e49\u97f3\u7b26\u7684\u97f3\u9ad8\u3002\u4ee5\u4e0b\u662f\u6700\u5e38\u89c1\u7684\u632f\u8361\u5668\u6ce2\u5f62\uff1a\nC\u8bed\u8a00\u4e2d\u6700\u7b80\u5355\u7684\u632f\u8361\u5668\u662f\u952f\u9f7f\u6ce2\u3002C\u9690\u5f0f\u5730\u5c06int\u5f3a\u5236\u8f6c\u6362\u4e3aputchar\u5185\u7684\u65e0\u7b26\u53f7\u5b57\u7b26\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u53ea\u5199(int t=0\uff1b\uff1bt++)putchar(T)\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u952f\u9f7f\u6ce2\u3002\u5b83\u8fd8\u4e0d\u4f1a\u662f\u97f3\u7b26\uff0c\u53ea\u4f1a\u53d1\u51fa\u4f4e\u6c89\u7684\u55e1\u55e1\u58f0\u3002\u8981\u6f14\u594f\u4e00\u4e2a\u97f3\u7b26\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u5b83\u7684\u9891\u7387\u3002\u4f8b\u5982\uff0c\u6700\u5e38\u89c1\u7684\u201c\u53c2\u8003\u201d\u97f3\u7b26\u662f\u6765\u81ea\u500d\u9891\u7a0b4\u7684A\u97f3\u7b26\uff0c\u5b83\u7684\u9891\u7387\u6b63\u597d\u662f440 Hz\uff0c\u8fd9\u5c31\u662f\u5927\u591a\u6570\u97f3\u53c9(Kamerton)\u4ea7\u751f\u5171\u9e23\u7684\u5730\u65b9\u3002\n440 Hz\u610f\u5473\u7740\u632f\u8361\u5668\u5e94\u8be5\u4ece0\u5230255\u6bcf\u79d2\u7cbe\u786e440\u6b21\u3002\u6211\u4eec\u8fd8\u77e5\u9053\uff0c\u5728\u4e00\u79d2\u5185\uff0c\u6211\u4eec\u7684\u5faa\u73af\u5fc5\u987b\u4ea7\u751f8000\u4e2a\u503c\uff0c\u56e0\u4e3a\u8fd9\u662f\u6211\u4eec\u7684\u91c7\u6837\u7387\u3002\u56e0\u6b64\uff0c\u6bcf\u6b21\u5faa\u73af\u8fed\u4ee3\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u632f\u8361\u5668\u8ba1\u6570\u5668\u589e\u52a0256*440/8000=14.08\u3002\u5927\u6982\u670914\u4e2a\u3002\n\u8981\u521b\u5efa\u65b9\u6ce2\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u83b7\u5f97\u632f\u8361\u5668\u8ba1\u6570\u5668\u7684\u7b2c8\u4f4d\uff0c\u5bf9\u4e8e\u503c0..127\uff0c\u5b83\u5c06\u662f0\uff1b\u5bf9\u4e8e\u503c127..255\uff0c\u5b83\u5c06\u662f0x80\u3002\u8fd9\u5c06\u4ea7\u751f\u4e00\u4e2a\u4e0e\u952f\u9f7f\u6ce2\u9891\u7387\u76f8\u540c\u7684\u65b9\u6ce2\uff0c\u5b83\u4f1a\u7a0d\u5fae\u5b89\u9759\u4e00\u4e9b\uff0c\u56e0\u4e3a\u632f\u5e45\u8303\u56f4\u4f1a\u7a84\u4e00\u500d\uff0c\u4f46\u4ecd\u7136\u8db3\u591f\u5927\uff0c\u53ef\u4ee5\u542c\u5230\u5b83\u3002\n\u6b63\u5f26\u6ce2\u9700\u8981sin()\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u632f\u8361\u5668\u8ba1\u6570\u5668(\u76f8\u4f4d)\uff0c\u5c06\u5176\u9664\u4ee5255\uff0c\u518d\u4e58\u4ee52\u03c0\u3002\u4ea7\u751f\u7684\u632f\u5e45\u5e94\u8be5\u4e58\u4ee5255\u624d\u80fd\u4e0e\u5176\u4ed6\u632f\u8361\u5668\u4e00\u6837\u54cd\u4eae\uff0c\u56e0\u4e3asin()\u8fd4\u56de\u8303\u56f4[-1..1]\u4e2d\u7684\u503c\u3002\n/*\u952f\u9f7f*/for(int t=0\uff0cOSC=0\uff1bt&lt\uff1b8000\uff1bt++\uff0cOSC=OSC+14){putchar(OSC)\uff1b}/*\u65b9\u5f62*/for(int t=0\uff0cOSC=0\uff1bt&lt\uff1b8000\uff1bt++\uff0cOSC=OSC+14){putchar(OSC&amp\uff1b0x80)\uff1b}/*\u6b63\u5f26\u6ce2*/for(int t=0\uff0cOSC=0\uff1bt&lt\uff1b8000\uff1bT++\uff0cosc=osc+14){putchar(127\u00d7sin(osc/255.0*2*3.14)+128)\uff1b}\u3002\n\u8fd8\u6709\u4e00\u79cd\u4ea7\u751f\u632f\u8361\u58f0\u97f3\u7684\u65b9\u6cd5\uff0c\u8fd9\u662f\u4e00\u79cd\u5f88\u806a\u660e\u7684\u65b9\u6cd5\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u6a21\u62df\u4f4e\u97f3\u6216\u5409\u4ed6\u5f26\u3002\u5176\u60f3\u6cd5\u662f\u7528\u968f\u673a\u6570\u636e\u586b\u5145\u6570\u7ec4\u3002\u9635\u5217\u7684\u957f\u5ea6\u5e94\u8be5\u7b49\u4e8e\u632f\u8361\u5668\u7684\u5468\u671f\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u5bf9\u4e8e440 Hz\uff0c\u8fd9\u5c06\u662f~18\u4e2a\u6837\u672c\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u201c\u64ad\u653e\u201d\u8be5\u6570\u7ec4\u4e2d\u7684\u5b57\u8282\uff0c\u5728\u5230\u8fbe\u7f13\u51b2\u533a\u672b\u5c3e\u65f6\u8fd4\u56de\u5230\u7b2c\u4e00\u4e2a\u9879\u76ee\u3002\u5c3d\u7ba1\u5145\u6ee1\u4e86\u968f\u673a\u5b57\u8282\uff0c\u4f46\u968f\u673a\u566a\u58f0\u7684\u91cd\u590d\u6a21\u5f0f\u542c\u8d77\u6765\u5c31\u50cf\u632f\u8361\u5668\uff0c\u6211\u4eec\u4f1a\u542c\u5230\u72ec\u7279\u7684\u97f3\u8c03\u3002\u4f46\u662f\uff0c\u4e3a\u4e86\u8ba9\u5b83\u542c\u8d77\u6765\u50cf\u4e2a\u628a\u620f\uff0c\u6211\u4eec\u5fc5\u987b\u5728\u6bcf\u6b21\u5faa\u73af\u6570\u7ec4\u65f6\u5e73\u6ed1\u6570\u636e-\u6211\u4eec\u5c06\u7528\u5f53\u524d\u5143\u7d20\u548c\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u5e73\u5747\u503c\u66ff\u6362\u5143\u7d20\u3002\u8fd9\u5c31\u662f\u5982\u4f55\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u968f\u673a\u6570\u53d8\u5f97\u8d8a\u6765\u8d8a\u5e73\u6ed1\uff0c\u76f4\u5230\u5b83\u4eec\u5168\u90e8\u76f8\u7b49\uff0c\u632f\u8361\u5668\u5728\u9759\u9ed8\u4e2d\u6de1\u51fa\uff1a\nUnsign char a[18]\uff1bfor(int i=0\uff1bi&lt\uff1bsizeof(A)\uff1bi++)a[i]=rand()\uff1bfor(int t=0\uff1bt&lt\uff1b8000\uff1bt++){int i=t%sizeof(A)\uff1bint j=(t+1)%sizeof(A)\uff1bputchar(a[i]=(a[i]+a[j])/2)\uff1b}\u3002\n\u8bd5\u7740\u4f7f\u7528\u66f4\u5927\u7684\u9635\u5217\uff0c\u770b\u770b\u97f3\u8c03\u662f\u5982\u4f55\u53d8\u4f4e\u7684\uff0c\u58f0\u97f3\u7684\u6301\u7eed\u65f6\u95f4\u662f\u5982\u4f55\u53d8\u957f\u7684\u3002\u5b83\u4e0d\u662f\u5f88\u50cf\u5f26\u6216\u5361\u6797\u5df4\u5c16\u7259\u7684\u58f0\u97f3\u5417\uff1f\n\u65e2\u7136\u6211\u4eec\u53ef\u4ee5\u6f14\u594f\u4e00\u4e2a\u97f3\u7b26\uff0c\u6211\u4eec\u600e\u4e48\u624d\u80fd\u6f14\u594f\u65cb\u5f8b\u5462\uff1f\u6211\u4eec\u9700\u8981\u53ca\u65f6\u6539\u53d8\u97f3\u7b26\u7684\u97f3\u9ad8\uff0c\u8fd9\u5c31\u662f\u6b65\u957f\u5b9a\u5e8f\u5668\u6240\u505a\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u53ef\u4ee5\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u6b65\u957f\uff0c\u6bcf\u4e2a\u6b65\u957f\u90fd\u6709\u56fa\u5b9a\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5faa\u73af\u4e2d\u91cd\u590d\u5b83\u4eec\uff0c\u5e76\u76f8\u5e94\u5730\u6539\u53d8\u97f3\u8c03\u3002\u6bcf\u4e00\u6b65\u53ef\u4ee5\u5305\u542b\u632f\u8361\u5668\u76f8\u4f4d\u8ba1\u6570\u5668\u7684\u589e\u91cf\uff0c\u96f6\u8868\u793a\u6682\u505c\u3002\u4f8b\u5982\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u719f\u6089\u7684\u5373\u5174\u5c0f\u54c1\u201cE B D E D B B A B\u201d\u3002\u5b83\u53ea\u4f7f\u7528\u4e864\u4e2a\u97f3\u7b26-\u4e00\u4e2a\u516b\u5ea6\u7684D\u548cE\uff0c\u53e6\u4e00\u4e2a\u8f83\u4f4e\u7684\u516b\u5ea6\u7684A+B\u3002\u5982\u679c\u6211\u4eec\u770b\u97f3\u7b26\u9891\u7387\u8868\uff0c\u8fd9\u4e9b\u97f3\u7b26\u5728\u516b\u5ea65\u548c4\u7684\u97f3\u9ad8\u5c06\u662f659.2\u8d6b\u5179(E)\uff0c587.3\u8d6b\u5179(D)\uff0c440\u8d6b\u5179(A)\u548c493.8\u8d6b\u5179(B)\u3002\n\u632f\u8361\u5668\u76f8\u4f4d\u589e\u91cf\u5c06\u7ea6\u4e3a21(E)\u300119(D)\u300114(A)\u548c16(B)\u3002\u6bcf\u4e00\u6b65\u53ef\u4ee5\u91c7\u96c62000\u4e2a\u6837\u672c(1/4\u79d2)\u3002\u5219\u64ad\u653e\u5faa\u73af\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\nInt OSC=0\uff1bint melody[8]={21\uff0c16\uff0c19\uff0c21\uff0c19\uff0c16\uff0c14\uff0c16}\uff1bfor(int step=0\uff1b\uff1bstep=(step+1)%8){int\u589e\u91cf=melody[step]\uff1bfor(int t=0\uff1bt&lt\uff1b2000\uff1bt++){OSC=OSC+Increment\uff1bputchar(OSC)\uff1b}}\n\u6211\u60f3\uff0c\u73b0\u5728\u662f\u65f6\u5019\u4ece\u8fd9\u7bc7\u6587\u7ae0\u7684\u4e00\u5f00\u59cb\u5c31\u5bf9\u65cb\u5f8b\u64ad\u653e\u5668\u8fdb\u884c\u6a21\u7cca\u5904\u7406\u4e86\uff1a\n//play.c#include&lt\uff1bstdio.h&gt\uff1bint main(){Float f\uff1b/*\u97f3\u7b26\u9891\u7387*/char c\uff1b/*&#34\uff1bcdefgab&#34\uff1b\u5bf9\u4e8e\u97f3\u7b26\u6216&#34\uff1bpr&#34\uff1b\u5bf9\u4e8e\u6682\u505c*/int d\uff0co\uff1b/*d=\u6301\u7eed\u65f6\u95f4\uff0co=\u516b\u5ea6*/While(scanf(&#34\uff1b%d%c%d&#34\uff1b\uff0c&amp\uff1bd\uff0c&amp\uff1bc\uff0c&amp\uff1bO)&gt\uff1b0){/*\u5c06\u5907\u6ce8\u8f6c\u6362\u4e3a\u5c0f\u5199*/c&amp\uff1b=31\uff1b/*c&gt\uff1b&gt\uff1b4\u5bf9\u4e8eCDEFGAB\u662f0\uff0c\u5bf9\u4e8e&#34\uff1bPR&#34\uff1b*//*\u56e0\u6b64\uff0c\u5bf9\u4e8e\u505c\u987f\uff0cf\u5c06\u662f\u96f6\uff0c\u5bf9\u4e8e\u5907\u6ce8-55*/f=\uff01(C&&gt;\uff1b&&gt;4)*55\uff1b/*\u6211\u4eec\u5728\u8bfa\u57fa\u4e9aComposer\u5e16\u5b50\u4e2d\u4f7f\u7528\u7684\u5c06\u5907\u6ce8\u5b57\u6bcd\u8f6c\u6362\u5230\u5907\u6ce8\u7d22\u5f15\u7684\u6280\u5de7*/c=(c*8/5+8)%12+o*12-22\uff1b/*\u6ce8\u610f`x`\u9891\u7387\u4e3a2^(x/12)\uff0c\u6216(2^(1/12))^x*/While(c--){f*=1.0595\uff1b/*1.0595\u4e3a2^(1/12)*/}/*\u4ee5\u7ed9\u5b9a\u7684\u97f3\u9ad8\u64ad\u653e\u7ed9\u5b9a\u65f6\u957f\u7684\u952f\u9f7f\u6ce2*/for(d=16e3/d\uff1bd--\uff1bputchar(d*f*.032))\uff1b}}\u3002\n\u5b83\u64ad\u653e\u7c7b\u4f3c\u4e8eMML\u3001RTTTL\u6216ABC\u8868\u793a\u6cd5\u7684\u97f3\u4e50\u3002\u5b83\u671f\u671b\u6765\u81ea\u6807\u51c6\u8f93\u5165\u7684\u4e00\u7cfb\u5217\u6ce8\u91ca\u3002\u6ce8\u91ca\u53ef\u4ee5\u7528\u7a7a\u683c\u3001\u9017\u53f7\u6216scanf\u5b89\u5168\u5ffd\u7565\u7684\u4efb\u4f55\u5176\u4ed6\u7b26\u53f7\u5206\u9694\u3002\u6bcf\u4e2a\u97f3\u7b26\u67093\u4e2a\u90e8\u5206-\u6301\u7eed\u65f6\u95f4\u3001\u97f3\u9ad8\u548c\u516b\u5ea6\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u4e0a\u9762\u7684\u5faa\u73af\u53ef\u4ee5\u5199\u6210\u201c8e5 8b4 8d5 8e5 8d5 8b4 8a4 8b4\u201d\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u97f3\u7b26\u9891\u7387\u8ba1\u7b97\u6765\u81eaNokia Composer\uff0c\u97f3\u7b26\u56de\u653e\u4f7f\u7528\u952f\u9f7f\u5f62\u632f\u8361\u5668\u3002\n\u7531\u4e8e\u5927\u91cf\u6ea2\u51fa\uff0cCDEFGAB\u4e4b\u5916\u7684ASCII\u7b26\u53f7\u4f1a\u5bfc\u81f4\u5c16\u9510\u7684\u97f3\u7b26\uff1a\n\u6709\u4e00\u79cd\u540d\u4e3aByteBeat\u7684\u5c0f\u4f17\u97f3\u4e50\u6d41\u6d3e\uff0c\u5176\u4e2d\u7684\u97f3\u4e50\u4ee5\u7b80\u6d01\u7684C\u8868\u8fbe\u5f0f\u7f16\u5199\u3002\u6211\u5e0c\u671b\u5728\u4ee5\u540e\u7684\u6587\u7ae0\u4e2d\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\u5b83\uff0c\u56e0\u4e3a\u5b83\u7ed3\u5408\u4e86\u5fae\u5c0f\u4ee3\u7801\u7684\u667a\u6167\u548c\u97f3\u4e50\u521b\u4f5c\u7684\u521b\u9020\u529b\u3002\u5b83\u5927\u91cf\u4f7f\u7528\u4f4d\u79fb\u4f4d\u548c\u4f4d\u63a9\u7801\u6765\u53d8\u620f\u6cd5\u5904\u7406\u97f3\u7b26\u3002\u6709\u4e9b\u65cb\u5f8b\u662f\u5076\u7136\u521b\u4f5c\u7684\uff0c\u6709\u4e9b\u662f\u7cbe\u5fc3\u521b\u4f5c\u7684\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u8fbe\u5230\u67d0\u4e2a\u6700\u7ec8\u76ee\u6807\u3002\u4ed6\u4eec\u5f80\u5f80\u542c\u8d77\u6765\u6709\u70b9\u523a\u8033\uff0c\u4e5f\u8bb8\u6709\u70b9\u8dd1\u8c03\uff0c\u4f46\u4ed6\u4eec\u7684\u7f8e\u4e3d\u5728\u4e8e\u4ed6\u4eec\u7684\u4ee3\u7801\u3002\u5b57\u8282\u8df3\u52a8\u7684\u5178\u578b\u793a\u4f8b\u662f\uff1a\n\u5b83\u4ea7\u751f\u4e0d\u786e\u5b9a\u97f3\u9ad8\u7684\u91cd\u590d\u65cb\u5f8b\uff0c\u542c\u8d77\u6765\u50cf\u591a\u79cd\u4e50\u5668\uff0c\u6709\u4e00\u5b9a\u7684\u8282\u594f\u3002\u5982\u679c\u4f60\u611f\u5174\u8da3\uff0c\u4f60\u53ef\u4ee5\u5728\u7f51\u4e0a\u627e\u5230\u66f4\u591a\u5b57\u8282\u8df3\u52a8\u7684\u4f8b\u5b50\u3002\n\u7eaf\u7cb9\u7684\u6446\u52a8\u58f0\u97f3\u4ee4\u4eba\u538c\u70e6\u3002\u4f46\u5e78\u8fd0\u7684\u662f\uff0c\u6709\u4e00\u4e9b\u97f3\u6548\u6211\u4eec\u53ef\u4ee5\u6beb\u4e0d\u8d39\u529b\u5730\u5e94\u7528\u5230\u5b83\u4e0a\u3002\n\u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u5b57\u8282\u8df3\u52a8\u66f2\u8c03\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u4f4e\u901a\u6ee4\u6ce2\u5668\u6765\u5e73\u6ed1\u9ad8\u9891\uff0c\u7559\u4e0b\u4f4e\u9891\u3002\u4f4e\u901a\u6ee4\u6ce2\u5668\u7684\u6700\u7b80\u5355\u5f62\u5f0f\u662f\u5c06\u5f53\u524d\u8f93\u51fa\u503c\u4e0e\u5b58\u50a8\u5728\u7d2f\u52a0\u5668\u4e2d\u7684\u524d\u4e00\u4e2a\u8f93\u51fa\u503c\u8fd1\u4f3c\uff1a\nInt main(){int prev=0\uff1bfor(int t=0\uff1b\uff1bt++){int output=t*(t+(t&gt\uff1b&gt\uff1b9|t&gt\uff1b&gt\uff1b&gt\uff1b13))%40&amp\uff1b120\uff1bprev=prev*0.8+output*0.2\uff1bputchar(Prev)\uff1b}}\u3002\n\u58f0\u97f3\u5e94\u8be5\u53d8\u5f97\u66f4\u4f4e\u6c89\uff0c\u66f4\u4e0d\u9ad8\u97f3\u3002\u5982\u679c\u5c060.8/0.2\u66f4\u6539\u4e3a0.9/0.1\uff0c\u6548\u679c\u5e94\u8be5\u4f1a\u66f4\u5f3a\u3002\u8bd5\u7740\u8c03\u6574\u7cfb\u6570\uff0c\u770b\u770b\u5b83\u662f\u5982\u4f55\u5f71\u54cd\u58f0\u97f3\u7684\u3002\n\u5982\u679c\u60a8\u60f3\u8981\u964d\u4f4e\u4f4e\u9891\u800c\u4fdd\u7559\u9ad8\u9891-\u53ea\u9700\u4ece\u539f\u59cb\u4fe1\u53f7\u4e2d\u51cf\u53bb\u6ee4\u6ce2\u540e\u7684\u4f4e\u901a\u4fe1\u53f7\u5373\u53ef\u3002\n\u53e6\u4e00\u4e2a\u7b80\u5355\u7684\u5f71\u54cd\u662f\u5ef6\u8fdf\u7ebf\uff0c\u5b83\u53ea\u662f\u53e6\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b58\u50a8\u4e00\u4e9b\u6700\u8fd1\u7684\u4fe1\u53f7\u503c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5e0c\u671b\u4ee50.1\u79d2\u7684\u5ef6\u8fdf\u91cd\u65b0\u64ad\u653e\u6211\u4eec\u7684\u58f0\u97f3\u3002\u57288000 Hz\u7684\u91c7\u6837\u7387\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u5b58\u50a8800\u4e2a\u6700\u65b0\u6837\u672c\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0e\u5f53\u524d\u8f93\u51fa\u4fe1\u53f7\u76f8\u52a0\uff0c\u504f\u79fb\u91cf\u4e3a800\u5b57\u8282\uff1a\n#\u5b9a\u4e49N 800 int main(){int delay[N]={0}\uff1bfor(int t=0\uff1b\uff1bt++){int output=((t*(42&amp\uff1bt&gt\uff1b&gt\uff1b10))&amp\uff1b0xff)/2\uff1b\u5ef6\u8fdf[t%N]=\u8f93\u51fa\uff1b/*\u5c06\u5f53\u524d\u6837\u672c\u653e\u5165\u5ef6\u8fdf\u7ebf*/putchar(\u8f93\u51fa+\u5ef6\u8fdf[(t+1)%N])\uff1b/*\u5c06\u5f53\u524d\u6837\u672c\u4e0e\u5ef6\u8fdf\u7ebf\u4e0a\u6700\u65e9\u7684\u6837\u672c\u6df7\u5408*/}}\u3002\n\u8fd9\u5e94\u8be5\u4f1a\u7ed9\u58f0\u97f3\u5e26\u6765\u4e00\u70b9\u590d\u8c03\uff0c\u4f1a\u6709\u4e00\u4e9b\u56de\u58f0\u3002\u5ef6\u8fdf\u7ebf\u975e\u5e38\u5bb9\u6613\u5b9e\u73b0\uff0c\u5e76\u4e14\u4e0e\u53ef\u80fd\u5bfc\u81f4\u6df7\u54cd\u6548\u679c\u7684\u6ee4\u6ce2\u5668\u6df7\u5408\u3002\n\u4eba\u4eec\u53ef\u4ee5\u7528C\u8bed\u8a00\u7f16\u5199\u66f4\u591a\u53ef\u80fd\u7684\u6548\u679c\uff0c\u4f46\u662f\u8fd9\u7bc7\u6587\u7ae0\u592a\u957f\u4e86\uff0c\u6211\u60f3\u6211\u5e94\u8be5\u505c\u6b62\u4e86\u3002\u7c7b\u4f3c\u5730\uff0c\u73a9\u632f\u8361\u5668\u53ef\u80fd\u4f1a\u6fc0\u53d1\u60a8\u521b\u5efa\u6837\u4f8b\u64ad\u653e\u5668\u3001\u9897\u7c92\u5408\u6210\u5668\u6216\u8c03\u9891\u5408\u6210\u5668\u7684\u7075\u611f\u3002\u5f53\u7136\uff0c\u97f3\u5e8f\u5668\u4e5f\u662f\u4e00\u4e2a\u65e0\u7a77\u65e0\u5c3d\u7684\u5b9e\u9a8c\u9886\u57df-\u4ece\u968f\u673a\u7684\u97f3\u4e50\u751f\u6210\u548c\u81ea\u6211\u6f14\u53d8\u7684\u65cb\u5f8b\uff0c\u5230\u50cf\u8001\u5f0fmod\u8ffd\u8e2a\u5668\u8fd9\u6837\u7684\u7d27\u51d1\u578b\u97f3\u5e8f\u5668\uff0c\u53ef\u4ee5\u7528\u5728\u7b80\u77ed\u7684\u6f14\u793a\u548c\u6e38\u620f\u4e2d\u3002\n\u5982\u679c\u4f60\u559c\u6b22\u97f3\u4e50--\u8bf7\u968f\u610f\u5206\u4eab\u4f60\u7684\u58f0\u97f3\u5b9e\u9a8c\uff01\u540c\u65f6\uff0c\u6211\u6b63\u5728\u51c6\u5907\u4e00\u7bc7\u5173\u4e8e1\u4f4d\u58f0\u97f3\u4f18\u96c5\u7684\u5e16\u5b50\uff0c\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u5de5\u5177\u6765\u5236\u4f5c1\u4f4d\u97f3\u4e50\u3002\u5982\u679c\u4f60\u6709\u4efb\u4f55\u5176\u4ed6\u7684\u97f3\u4e50+\u8282\u76ee\u8bdd\u9898\u60f3\u77e5\u9053--\u53ea\u8981\u7ed9\u6211\u5199\u4fe1\u5c31\u884c\u4e86\u3002\n\u6211\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\u3002\u4f60\u53ef\u4ee5\u5728Github\u3001Twitter\u6216\u901a\u8fc7RSS\u8ba2\u9605\uff0c\u5e76\u5411\u5176\u6295\u7a3f\u3002", "note_en": "I don\u2019t really draw well, so I used formatted C code instead. That was supposed to be a triangular sound wave written in C. In fact, this very C code plays two-octave melodies written in text notation from stdin.\n It\u2019s only 160 bytes, fits into a modern-day tweet, and the reason it\u2019s there is to show how simple it is to create minimal music with code in any programming language, not just the special languages like  CSound,  ChucK, or  SonicPi.\n    This is sound - something that oscillates and moves the air in time, and the air reaches your ears and you hear it. The wave that goes up and down in the picture illustrates show the air vibrates. To describe this wave in digital terms people came up with an idea to measure the amplitude of the wave at fixed time intervals and use these sampled data points as \u201cdigital sound\u201d.\n Two questions arise - how often to sample the sound wave, and how to digitally represent the units of the amplitude range? To answer the first question we should recall that the human ear can not hear anything higher than 20000 Hz, that\u2019s why CD music had a sample rate of 22000 Hz. Modern sound cards however tend to use sampling rates twice as high - 44100 Hz or 48000 Hz or even 96000 Hz. Lo-fi audio devices like Arduino or NES simply could not produce sound at such a high speed, so they used a reasonably low sampling rate, like 8000 Hz, and this is what we will be using in this article.\n The amplitude quantization is also a matter of compromise. In theory, people can recognize a very subtle change of the amplitude, but computers can\u2019t use infinitely precise numbers for each sample. Instead, they perform quantization - they map the amplitude value into a fixed-width number, like a float or an integer. In the picture above I\u2019ve used +1 and -1 as the minimum and maximum value of the amplitude, assuming the  float data type, but other popular formats are signed  int16, where amplitude changes from -32768 to +32767, or a  uint8, where amplitude changes from 0 to 255. The last one is what we will be using in this article because it\u2019s very easy to understand and brings a few nice tricks.\n Now, having the sample rate of 8000 and data format of unsigned uint8, digital sound is nothing more nothing less than an array of bytes shifting in time at the speed of 8000 bytes per second.\n If our array is all zeros - there will be silence. If our array will be all 255 - there will be silence as well. However, if our array would contain different numbers - that would be a sound wave.\n How can we hear it? One route would be to use native OS APIs, and that would be a route to the cross-platform programming hell because each OS has a different set of APIs, equally complex and unpleasant to use. And this is where UNIX way comes to the rescue. There are small utilities, and if you are lucky - they might even come with your OS - that allows you to play the sound streaming from stdin. On linux that would be  aplay or  pacat, while macOS and Windows users would have to install  SoX and use the  play command.\n Here are a few commands that should allow you to play raw unsigned bytes from stdin at the rate of 8000 samples per second:\n alias  PLAY = &#39;aplay&#39; alias  PLAY = &#39;pacat --rate 8000 --channels 1 --format u8&#39; alias  PLAY = &#39;play -c1 -b8 -eunsigned -traw -r8k -&#39; alias  PLAY = &#39;mplayer -cache 1024 -quiet -rawaudio samplesize=1:channels=1:rate=8000 -demuxer rawaudio -&#39; alias  PLAY = &#39;ffplay -ar 8000 -ac 1 -f u8 -nodisp -&#39; # Play some white noisecat /dev/urandom  | PLAY\n  Digital sound is a very simple programming concept, and producing it can be as simple as writing a for-loop. For example, this tiny app should make infinite white noise:\n // cc noise.c -o noise &amp;&amp; ./noise | PLAY  #include  &lt;stdio.h&gt;  #include  &lt;stdlib.h&gt;   int  main ()  {  for  (;;)  putchar ( rand ());  }\n To play a note rather than the noise we should make our sound periodic, the waveform should repeat itself at a certain frequency, and that frequency would define the note pitch. Here are the most common oscillator waveforms:\n  The simplest oscillator in C would be the sawtooth wave. C implicitly casts  int to  unsigned char inside  putchar, so if we simply write  for (int t = 0;; t++) putchar(t) - we get a sawtooth wave. It won\u2019t be a note yet, only a low buzzing sound. To play a note we need to know it frequency. For example, the most common \u201creference\u201d note is A from octave 4, which has the frequency of exactly 440 Hz, and this is what most tuning forks (kamertons) resonate to.\n 440 Hz means the oscillator should go from 0 to 255 exactly 440 times per second. We also know that during one second our loop must produce 8000 values because that is our sample rate. So every time the loop iterates we should increase the oscillator counter by  256*440/8000=14.08. Roughly, 14.\n To create a square wave we can simply get the 8th bit of the oscillator counter, it will be 0 for the values 0..127 and 0x80 for the values 127..255. This will result in a square wave of the same frequency as the sawtooth, it will be a bit more quiet, since the amplitude range will be twice as narrow, but still loud enough to hear it.\n The sine wave requires the  sin() function, we can use the oscillator counter (phase), divide it by 255, and multiply by 2\u03c0. The resulting amplitude should be multiplied by 255 to get it as loud as the other oscillators because  sin() returns the values in the range [-1..1].\n  /* Sawtooth */ for  ( int  t = 0 ,  osc  =  0 ;  t  &lt;  8000 ;  t ++ ,  osc  =  osc  +  14 )  {  putchar ( osc ); } /* Square */ for  ( int  t = 0 ,  osc  =  0 ;  t  &lt;  8000 ;  t ++ ,  osc  =  osc  +  14 )  {  putchar ( osc  &amp;  0x80 ); } /* Sine wave */ for  ( int  t = 0 ,  osc  =  0 ;  t  &lt;  8000 ;  t ++ ,  osc  =  osc  +  14 )  {  putchar ( 127  *  sin ( osc / 255.0 * 2 * 3.14 )  +  128 ); }\n There is one more approach to produce oscillating sound, and it\u2019s a clever one. It is often used to simulate bass or guitar strings. The idea is to fill the array with random data. The length of the array should be equal to the period of the oscillator, in our case for 440 Hz that would be ~18 samples. Then we will \u201cplay\u201d bytes from that array, going back to the first item when we reach the end of the buffer. Despite being filled with random bytes, the repeating pattern of that random noise will sound like an oscillator and we will hear a distinctive pitch. But to make it sound like a trick we would have to smooth the data every time we loop over the array - we would replace elements with the average value of the current element and the next one. That\u2019s how with each iteration the random number would become more and more smooth until they are all equal and the oscillator fades out in silence:\n unsigned  char  a [ 18 ]; for  ( int  i  =  0 ;  i  &lt;  sizeof ( a );  i ++ )  a [ i ]  =  rand (); for  ( int  t = 0 ;  t  &lt;  8000 ;  t ++ )  {  int  i  =  t  %  sizeof ( a );  int  j  =  ( t + 1 )  %  sizeof ( a );  putchar ( a [ i ]  =  ( a [ i ]  +  a [ j ]) / 2 ); }\n Try using larger arrays and see how the pitch becomes lower and the duration of the sound gets longer. Doesn\u2019t it resemble the sound of a string or kalimba tines?\n  Now that we are able to play a single note, how can we play a melody? We need to change the pitch of the notes in time and that is what step sequencers do. We may have a fixed number of steps, each having a fixed duration, we can iterate them in a loop and change the pitch accordingly. Each step may contain the increment of the oscillator phase counter, zero would notate a pause. For example, here\u2019s a familiar riff \u201cE B D E D B A B\u201d. It uses only 4 notes - D and E from one octave and A + B from the other, lower octave. If we look at the  note frequency table, the pitches of those notes in octaves 5 and 4 would be 659.2Hz (E), 587.3Hz (D), 440Hz (A) and 493.8Hz (B).\n The oscillator phase increments would then be approximately 21 (E), 19 (D), 14 (A) and 16 (B). Each step may take 2000 samples (1/4 of a second). Then the playback loop could look like:\n int  osc  =  0 ; int  melody [ 8 ]  =  { 21 ,  16 ,  19 ,  21 ,  19 ,  16 ,  14 ,  16 }; for  ( int  step  =  0 ;; step  =  ( step  +  1 )  %  8 )  {  int  increment  =  melody [ step ];  for  ( int  t  =  0 ;  t  &lt;  2000 ;  t ++ )  {  osc  =  osc  +  increment ;  putchar ( osc );  } }\n I guess, now it\u2019s time to deobfuscate the melody player from the very beginning of this post:\n // play.c  #include  &lt;stdio.h&gt;   int  main ()  {  float  f ;  /* note frequency */  char  c ;  /* &#34;cdefgab&#34; for notes or &#34;pr&#34; for pause */  int  d ,  o ;  /* d = duration, o = octave */  while  ( scanf ( &#34;%d%c%d &#34; ,  &amp; d ,  &amp; c ,  &amp; o )  &gt;  0 )  {  /* convert note to lowercase */  c  &amp;=  31 ;  /* c&gt;&gt;4 is 0 for CDEFGAB and 1 for &#34;PR&#34; */  /* so, for pauses f would be zero, for notes - 55 */  f  =  ! ( c  &gt;&gt;  4 )  *  55 ;  /* a trick we used in Nokia Composer post to conver note letter to note index */  c  =  ( c  *  8  /  5  +  8 )  %  12  +  o  *  12  -  22 ;  /* Note `x` frequency is 2^(x/12), or (2^(1/12))^x */  while  ( c -- )  {  f  *=  1.0595 ;  /* 1.0595 is 2^(1/12) */  }  /* Play sawtooth wave for the given duration with given pitch */  for  ( d  =  16e3  /  d ;  d -- ;  putchar ( d  *  f  *  .032 ));  } }\n It plays music in something similar to MML, RTTTL or ABC notation. It expects a sequence of notes coming from stdin. Notes can be separated by whitespace, or commas or any other symbols that scanf would safely ignore. Each note has 3 parts - duration, pitch and octave, for example our loop from above can be written as \u201c8e5 8b4 8d5 8e5 8d5 8b4 8a4 8b4\u201d. Note frequency calculation is taken from  Nokia Composer and note playback is done with the sawtooth oscillator, as been described above.\n Due to the numerous overflows, there are ASCII symbols beyond CDEFGAB that result in sharp notes:\n   There is a niche music genre, known as ByteBeat, where music is written as terse C expressions. I hope to cover it in more detail in further articles, because it combines the cleverness of tiny code with the creativity of music composing. It heavily uses bit shifts and bitmasks to juggle notes. Some of the melodies are created by accident, some are carefully composed with some end goal in mind. They tend to sound a bit harsh and maybe slightly off-tune, but their beauty is in their code. A typical example of bytebeat would be:\n  It produces a repetitive melody of the uncertain pitch, that sounds like multiple instruments and has a certain rhythm. You might find a lot more bytebeat examples on the web, if you are interested.\n  The pure oscillating sound is boring. But fortunately, there are a few sound effects that we can apply to it without much of a hassle.\n For example, the bytebeat tune above can be passed through some kind of a low-pass filter that would smoothen the high frequencies and leave the low frequencies. The simplest form of a low-pass filter would be approximating the current output value with the previous one stored in the accumulator:\n int  main ()  {  int  prev  =  0 ;  for  ( int  t  =  0 ;;  t ++ )  {  int  output  =  t * ( t + ( t &gt;&gt; 9 | t &gt;&gt; 13 )) % 40 &amp; 120 ;  prev  =  prev  *  0.8  +  output  *  0.2 ;  putchar ( prev );  } }\n The sound should become more muffled and less high-pitched. If you change 0.8/0.2 to 0.9/0.1 the effect should become even stronger. Try adjusting the coefficients and see how it affects the sound.\n If you want to reduce the low frequencies and leave the high ones - just subtract the filtered low-pass signal from the original signal.\n Another simple affect would be a delay line, which is just another array, storing a few recent signal values. For example, we want to re-play our sound with a 0.1 second delay. At the sampling rate of 8000 Hz we need to store 800 most recent samples and add them to the current output signal with a 800 byte offset:\n #define N 800  int  main ()  {  int  delay [ N ]  =  { 0 };  for  ( int  t  =  0 ;;  t ++ )  {  int  output  =  (( t * ( 42 &amp; t &gt;&gt; 10 )) &amp; 0xff ) / 2 ;  delay [ t % N ]  =  output ;  /* put current sample into delay line */  putchar ( output  +  delay [( t + 1 ) % N ]);  /* mix current sample with the oldest sample from the delay line */  } }\n This should bring a bit of polyphony to the sound and there would be some echo. Delay lines are very easy to implement, and mixed with filters that may result in the reverberation effect.\n  There are many more possible effects one could code in C, but the post is long enough and I guess I should stop. Similarly, playing with an oscillator may inspire you to create a sample player, or a granular synthesizer, or a frequency-modulating synthesizer. Of course, sequencers are also an endless area of experimentation - from random music generation and self-evolving melodies to compact sequencers like old mod trackers, that could be used in short demos and games.\n If you are into music - feel free to share your sound experiments! In the meantime, I\u2019m preparing a post about the elegance of 1-bit sound with a simple tool to create 1-bit music. If there are any other music+programming topic you would like to hear about - just drop me a line.\n I hope you\u2019ve enjoyed this article. You can follow \u2013 and contribute to \u2013 on  Github,  Twitter or subscribe via  rss.", "posttime": "2020-10-31 02:38:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,\u7f16\u7a0b,programming,minimal,\u58f0\u97f3", "title": "\u5982\u4f55\u7528\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u7684\u4ee3\u7801\u521b\u5efa\u6700\u5c11\u7684\u97f3\u4e50", "title_en": "How to create minimal music with code in any programming language", "transed": 1, "url": "https://zserge.com/posts/etude-in-c/", "via": "", "real_tags": ["\u4ee3\u7801", "\u7f16\u7a0b", "minimal", "\u58f0\u97f3"]}, {"category": "", "categoryclass": "", "imagename": "fb7f7d0ec6814e3e34625ec14f87bdb3.jpg", "infoid": 1032336, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2014\u5e74\uff0c\u7f57\u585e\u5854\u4efb\u52a1\u8bd5\u56fe\u5c06\u83f2\u83b1\u7740\u9646\u5668\u964d\u843d\u5728\u4e00\u9897\u5f57\u661f\u4e0a\uff0c\u4f46\u6ca1\u6709\u6309\u8ba1\u5212\u8fdb\u884c\u3002\u539f\u672c\u6253\u7b97\u5c06\u83f2\u83b1\u7c98\u5728\u4e0d\u592a\u7262\u56fa\u7684\u9646\u5730\u4e0a\u7684\u9c7c\u53c9\u673a\u5236\u6ca1\u6709\u8d77\u4f5c\u7528\uff0c\u53ef\u601c\u7684\u83f2\u83b1\u6700\u7ec8\u5728\u9ed1\u6697\u7684\u60ac\u5d16\u5916\u8df3\u6765\u8df3\u53bb\uff0c\u843d\u5728\u4e00\u4e2a\u9ed1\u6697\u7684\u60ac\u5d16\u4e0b\uff0c\u65e0\u6cd5\u5c55\u5f00\u592a\u9633\u80fd\u7535\u6c60\u677f\uff0c\u65e0\u6cd5\u5b8c\u6210\u4efb\u52a1\u3002\u4f46\u4e0d\u8981\u8bf4\u83f2\u83b1\u6ca1\u6709\u7559\u4e0b\u81ea\u5df1\u7684\u5370\u8bb0\u3002\u56e0\u4e3a\u786e\u5b9e\u662f\u8fd9\u6837\u3002\u4ece\u5b57\u9762\u4e0a\u770b\u662f\u8fd9\u6837\u7684\u3002\n\u4e3a\u4e86\u4ece\u83f2\u83b1\u7684\u610f\u5916\u5192\u9669\u4e2d\u63d0\u53d6\u4ef7\u503c\uff0c\u7814\u7a76\u4eba\u5458\u52aa\u529b\u786e\u5b9a\u98de\u8239\u649e\u51fb\u5f57\u661f\u8868\u9762\u7684\u5730\u70b9\u3002\u8fd9\u9700\u8981\u5bf9\u83f2\u83b1\u7684\u8fd0\u52a8\u4f20\u611f\u5668\u8fdb\u884c\u8270\u82e6\u7684\u5206\u6790\u624d\u80fd\u91cd\u5efa\u5b83\u7684\u8f68\u8ff9\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u73a9\u4e00\u573a\u6781\u5176\u590d\u6742\u7684\u6e38\u620f\uff0c\u6e38\u620f\u4e2d\u8981\u73a9\u7684\u662f\u8fd9\u9897\u5f57\u661f\u6df7\u4e71\u8868\u9762\u524d\u540e\u7684\u56fe\u50cf\uff0c\u5176\u4e2d\u4e00\u4e2a\u4e0e\u5176\u4ed6\u4e1c\u897f\u4e0d\u540c\u3002\n\u6700\u521d\u7684\u5f39\u8df3\u5730\u70b9\u5f88\u5bb9\u6613\u627e\u5230\uff0c\u4f46\u4ece\u90a3\u91cc\u5230\u5b83\u4f11\u606f\u7684\u5730\u65b9\u7684\u8def\u5f84\u5c31\u662f\u53e6\u4e00\u56de\u4e8b\u4e86\u3002\u7531\u6b27\u6d32\u822a\u5929\u5c40\u7684\u52b3\u4f26\u65af\u00b7\u5965\u9c81\u5c14\u514b\u9886\u5bfc\u7684\u4e00\u9879\u65b0\u7814\u7a76\u63ed\u793a\u4e86\u83f2\u83b1\u649e\u51fb\u5f57\u661f67P\u7684\u53e6\u4e00\u4e2a\u5730\u70b9\u3002\u51f9\u5751\u7684\u5927\u5c0f\u5b9e\u9645\u4e0a\u544a\u8bc9\u4e86\u6211\u4eec\u4e00\u4e9b\u5173\u4e8e\u5f57\u661f\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u4e0d\u540c\u5bfb\u5e38\u7684\u4e1c\u897f\u3002\n\u7814\u7a76\u4eba\u5458\u6700\u7ec8\u53d1\u73b0\u4e86\u4e00\u4e2a\u4ed6\u4eec\u79f0\u4e4b\u4e3a\u201c\u5934\u9aa8\u9876\u810a\u201d\u7684\u5730\u65b9\uff0c\u5728\u90a3\u91cc\uff0c\u4e00\u5bf9\u88ab\u88c2\u7f1d\u9694\u5f00\u7684\u5de8\u77f3\u4f3c\u4e4e\u4e0e\u83f2\u83b1\u76f8\u9047\u3002\u7740\u9646\u540e\uff0c\u90a3\u4e2a\u7f1d\u9699\u91cc\u51fa\u73b0\u4e86\u4e00\u4e2a\u4eae\u70b9\uff0c\u597d\u50cf\u8868\u9762\u7684\u7070\u5c18\u88ab\u6e05\u9664\u4e86\uff0c\u9732\u51fa\u4e86\u5de8\u77f3\u4e2d\u7684\u6c34\u51b0\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6765\u81ea\u56fe\u50cf\u7684\u5149\u8c31\u6570\u636e\u8bc1\u5b9e\u4e86\u4eae\u70b9\u4e3b\u8981\u662f\u6c34\u51b0\u3002\u867d\u7136\u6c34\u51b0\u6784\u6210\u4e86\u5f57\u661f\u7684\u5f88\u5927\u4e00\u90e8\u5206(\u901a\u5e38\u88ab\u7c97\u9c81\u5730\u79f0\u4e3a\u201c\u810f\u96ea\u7403\u201d)\uff0c\u4f46\u5f57\u661f\u7684\u8868\u9762\u662f\u7531\u9633\u5149\u5c06\u6700\u5916\u5c42\u7684\u51b0\u5e26\u8d70\u65f6\u7559\u4e0b\u7684\u4e00\u5c42\u5c18\u57c3\u7ec4\u6210\u7684\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u770b\u5230\u90a3\u91cc\u7684\u51b0\u5f88\u80fd\u8bf4\u660e\u95ee\u9898\u3002\n\u83f2\u83b1\u6700\u521d\u7684\u7740\u9646\u5730\u70b9\u662f\u4e00\u4e2a\u5e73\u5766\u7684\u5730\u65b9\uff0c\u5f88\u53ef\u80fd\u88ab\u539a\u539a\u7684\u4e00\u5c42\u5c18\u57c3\u8986\u76d6\u7740\u3002\u5b83\u4e0e\u8fd9\u5757\u5de8\u77f3\u7684\u76f8\u9047\u4ee3\u8868\u4e86\u5b83\u4e0e\u66f4\u7c7b\u4f3c\u4e8e\u5f57\u661f\u5185\u90e8\u7684\u67d0\u79cd\u7269\u8d28\u7684\u76f8\u4e92\u4f5c\u7528\u3002\n\u7814\u7a76\u5c0f\u7ec4\u4f30\u8ba1\u5b83\u7559\u4e0b\u7684\u51f9\u75d5\u6df1\u5ea6\u7ea6\u4e3a25\u5398\u7c73\u3002\u4f7f\u7528\u8bb0\u5f55\u7684100\u516c\u65a4\u91cd\u7684\u98de\u884c\u5668\u7684\u901f\u5ea6\uff0c\u8fd9\u4f7f\u5f97\u4ed6\u4eec\u80fd\u591f\u8ba1\u7b97\u51fa\u5de8\u77f3\u7684\u575a\u56fa-\u6216\u8005\u8bf4\u7f3a\u4e4f\uff0c\u4e8b\u5b9e\u8bc1\u660e\u662f\u8fd9\u6837\u3002\u4ed6\u4eec\u53d1\u73b0\uff0c\u8fd9\u5757\u5de8\u77f3\u5b9e\u9645\u4e0a\u548c\u5730\u7403\u4e0a\u84ec\u677e\u7684\u96ea\u4e00\u6837\u67d4\u8f6f\u3002\n\u8fd9\u8bf4\u660e\u4e86\u7f57\u585e\u5854\u6210\u529f\u6d4b\u91cf\u5230\u7684\u4e00\u4ef6\u4e8b\uff1a\u8fd9\u9897\u5f57\u661f\u6781\u6613\u6e17\u900f\u3002\u9ad8\u6c34\u51b0\u548c\u4e8c\u6c27\u5316\u78b3\u51b0\u542b\u91cf\u53ef\u80fd\u4f1a\u8ba9\u4f60\u8ba4\u4e3a\u8fd9\u9897\u5f57\u661f\u662f\u4e00\u4e2a\u575a\u786c\u7684\u51b0\u5757\uff0c\u4f46\u5b83\u5927\u7ea675%\u7684\u4f53\u79ef\u662f\u4f4d\u4e8e\u51b0\u7c92\u548c\u5c18\u57c3\u4e4b\u95f4\u7684\u7a7a\u9699\u3002\u5982\u679c\u6ca1\u6709\u5f3a\u5927\u7684\u5f15\u529b\u5c06\u7269\u4f53\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u5f57\u661f\u5c31\u4e0d\u4f1a\u90a3\u4e48\u5bc6\u96c6\u3002\n\u8fd9\u5e76\u4e0d\u662f\u7b2c\u4e00\u6b21\u4ece\u83f2\u83b1\u7684\u7740\u9646\u5c1d\u8bd5\u4e2d\u4f30\u8ba1\u51fa\u5f57\u661f\u7684\u7269\u8d28\u5f3a\u5ea6\u3002\u57fa\u4e8e\u83f2\u83b1\u6700\u521d\u7740\u9646\u9668\u77f3\u5751\u7684\u4f30\u8ba1\u8981\u575a\u56fa\u5f97\u591a\uff0c\u66f4\u7c7b\u4f3c\u4e8e\u6211\u4eec\u6708\u7403\u7684\u98ce\u5316\u5c42\uff0c\u4f46\u90a3\u5f88\u53ef\u80fd\u662f\u539a\u539a\u7684\u5c18\u57c3\u5c42\u3002\u83f2\u83b1\u8fdb\u884c\u7684\u4e00\u9879\u94bb\u63a2\u5b9e\u9a8c\u5f97\u51fa\u4e86\u4e00\u4e2a\u51e0\u4e4e\u50cf\u5ca9\u77f3\u4e00\u6837\u7684\u62c9\u4f38\u4f30\u8ba1\uff0c\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u5176\u4ed6\u4efb\u4f55\u4e00\u4e2a\u3002\u4f46\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u94bb\u63a2\u7684\u6750\u6599\u662f\u4ec0\u4e48\uff0c\u4e5f\u4e0d\u6e05\u695a\u5b83\u662f\u5426\u51c6\u786e\u3002\n\u4f46\u6b63\u5982\u4e9a\u5229\u6851\u90a3\u5927\u5b66\u7814\u7a76\u5458\u57c3\u91cc\u514b\u00b7\u963f\u65af\u666e\u8c6a\u683c\u5728\u201c\u81ea\u7136\u201d\u6742\u5fd7\u4e0a\u53d1\u8868\u7684\u8fd9\u9879\u65b0\u7814\u7a76\u7684\u6458\u8981\u4e2d\u6240\u5199\u7684\u90a3\u6837\uff0c\u8fd9\u4e00\u5207\u90fd\u7a81\u663e\u4e86\u4ee5\u5f57\u661f\u4e3a\u76ee\u6807\u7684\u4efb\u52a1\u7684\u96be\u5ea6\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u6837\u672c\u6536\u96c6\u4efb\u52a1\u5fc5\u987b\u4ed4\u7ec6\u8003\u8651\u8981\u91c7\u6837\u4ec0\u4e48\u4ee5\u53ca\u8fd9\u4e9b\u6750\u6599\u53ef\u80fd\u4f1a\u6709\u4ec0\u4e48\u8868\u73b0\u3002\nAsphaug\u5199\u9053\uff1a\u201c\u8fd9\u4e0d\u662f\u7b2c\u4e00\u6b21\u53d1\u751f\u5728\u5c0f\u884c\u661f\u8868\u9762\u7684\u4e0d\u5e78\u4e8b\u4ef6\uff0c\u4e5f\u4e0d\u4f1a\u662f\u6700\u540e\u4e00\u6b21\u3002\u201d\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u53d1\u73b0\u8fd8\u8868\u660e\uff0c\u91c7\u6837\u5f57\u661f\u7684\u6700\u4f73\u5730\u70b9\u5c06\u4e0d\u662f\u5e73\u5766\u7684\u5e73\u539f\uff0c\u800c\u662f\u6cbf\u7740\u65b0\u66b4\u9732\u7684\u5c71\u810a\u3001\u60ac\u5d16\u548c\u5de8\u77f3\u5806\uff0c\u8fd9\u4e9b\u5730\u65b9\u66f4\u96be\u7740\u9646\u3002", "note_en": "The Rosetta mission\u2019s attempt to drop the Philae lander on a comet in 2014 didn\u2019t go according to plan. The harpoon mechanism meant to stick Philae to terra-not-quite-firma didn\u2019t work, and poor Philae ended up bouncing around and landing under a dark cliff overhang, unable to deploy its solar panels and complete its tasks. But let it not be said that Philae failed to leave its mark. Because it did. Quite literally.\n To extract value from Philae\u2019s accidental adventure, researchers have worked hard to identify the spots where the craft impacted the surface of the comet. This required painstaking analysis of Philae\u2019s motion sensors to reconstruct its trajectory, along with a terrifically complex game of \u201cone of these things is not like the others\u201d played with before-and-after images of the comet\u2019s jumbled surface.\n The site of the initial bounce was easy enough to find, but the path from there to its resting place was another story. A new study led by the European Space Agency\u2019s Laurence O\u2019Rourke reveals another spot where Philae dented comet 67P. And the size of that dent actually tells us something remarkable about what comets are like.\n   Researchers eventually found a spot they dubbed \u201cskull-top ridge\u201d where a pair of boulders separated by a crevice appeared to have met Philae. After the landing, a bright spot appeared in that crevice, as if surface dust had been removed to expose water ice in the boulder. And indeed, spectral data from imagery confirms that the bright spot is largely water ice. While water ice makes up a substantial portion of comets\u2014which are often somewhat rudely referred to as \u201cdirty snowballs\u201d\u2014a comet&#39;s surface is composed of a layer of dust left behind as sunlight drives off the outermost ice, so actually seeing ice there is telling.\n  Philae\u2019s initial touchdown location was in a flat spot likely covered by a thick layer of that dust. Its encounter with this boulder represents an interaction with something more similar to the comet\u2019s interior.\n The team estimates the depth of the dent it left behind at about 25 centimeters. Using the recorded velocity of the 100-kilogram craft, this allowed them to calculate the boulder\u2019s sturdiness\u2014or lack thereof, as it turns out. They found that the boulder was actually about as soft as fluffy snow on Earth.\n  This illustrates something that Rosetta successfully measured: the comet is extremely porous. The high water ice and CO 2 ice content might make you think the comet is a hard, frozen block, but around 75 percent of its volume is void space in between grains of ice and dust. Without strong gravity to pull things together, comets just aren\u2019t that dense.\n This isn\u2019t the first estimate of the comet\u2019s material strength to come out of the Philae landing attempt. The estimate based on Philae\u2019s initial touchdown crater was significantly sturdier, more similar to the regolith of our Moon, but that was likely the thick dust layer. A drilling experiment performed by Philae returned a nearly rock-like stretch estimate, far surpassing any others. But it\u2019s not clear what material that could have been drilling, or if it was even accurate.\n But as University of Arizona researcher Erik Asphaug writes in a summary accompanying the new study in the journal Nature, this all highlights the difficulty of missions targeting comets. A sample collection mission, for example, would have to think carefully about what to sample and how that material might behave.\n \u201cThis is not the first misadventure to occur on the surface of a small planetary body, nor will it be the last,\u201d Asphaug writes. \u201cUnfortunately, the findings also suggest that the best places to sample comets will not be the flat plains, but along the newly exposed ridges, cliffs and boulder piles, which are more difficult to land on.\u201d", "posttime": "2020-10-31 02:24:23", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5f57\u661f,philae,\u83f2\u83b1", "title": "\u547d\u8fd0\u591a\u821b\u7684\u83f2\u83b1\u7740\u9646\u5668\u610f\u5916\u5730\u505a\u4e86\u4e00\u9879\u79d1\u5b66\u7814\u7a76\uff0c\u5c06\u5f57\u661f\u649e\u51f9\u4e86\u3002", "title_en": "Doomed Philae lander accidentally did a science by denting the comet", "transed": 1, "url": "https://arstechnica.com/science/2020/10/doomed-philae-lander-accidentally-did-a-science-by-denting-the-comet/", "via": "", "real_tags": ["\u5f57\u661f", "philae", "\u83f2\u83b1"]}]
[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1067741, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6392\u5e8f\u7b97\u6cd5\u5728\u4e00\u6b21oranother\u4e2d\u5927\u91cf\u7528\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u3002\u6839\u636e\u8bed\u8a00\uff0c\u60a8\u53ef\u80fd\u5728\u60a8\u7684\u5904\u7f6e\u65b9\u4fbf\u7684\u67d0\u4e9b\u6392\u5e8f\u529f\u80fd\uff0c\u4f46\u6839\u636e\u7528\u4f8b\uff0c\u77e5\u9053\u5728\u5f15\u64ce\u76d6\u4e0b\u6b63\u5728\u5e94\u7528\u54ea\u79cd\u6392\u5e8f\u7b97\u6cd5\u53ef\u4ee5\u662f\u6d4b\u91cf\u5de5\u4f5c\u8f6f\u4ef6\u5bf9\u53d8\u5316\u7684\u5f71\u54cd\u7684\u5173\u952e\u3002\n \u5728\u672c\u6587\u4e2d\uff0c\u6211\u60f3\u63a2\u7d22\u4e00\u4e9b\u6392\u5e8f\u7684\u5b9e\u73b0\uff0c\u4f46\u6211\u60f3\u901a\u8fc7\u5355\u4f4d\u6d4b\u8bd5\u9a71\u52a8\u3002\u6211\u5728\u7f51\u4e0a\u6ca1\u6709\u770b\u5230\u8fc7\u591a\u7684\u63a2\u7d22\u8fd9\u79cd\u65b9\u6cd5\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u8fd9\u5f15\u8d77\u4f60\u7684\u5174\u8da3\u3002\n  \u5927\u591a\u6570\u6392\u5e8f\u7b97\u6cd5\u5b9a\u4e49\u6211\u5c06\u4ece\u7ef4\u57fa\u767e\u79d1\u63d0\u53d6\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f\u4e00\u4e2a\u6458\u8981\u6211\u4eec\u7684\u6458\u8981\uff1a\n \u6392\u5e8f\u7b97\u6cd5\u662f\u4e00\u79cd\u7b97\u6cd5\uff0c\u5c06\u5217\u8868\u4e2d\u5217\u8868\u7684\u5143\u7d20\u653e\u5728\u7279\u5b9a\u987a\u5e8f\u4e2d\u3002\n    \u8fd9\u91cc\u7684\u60f3\u6cd5\u662f\u5b9e\u73b0\u4e00\u4e2a\u6216\u4e24\u4e2a\u5206\u7c7b\u7b97\u6cd5\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u7684\u662f\u9a7e\u9a76\u7684\u6d4b\u8bd5\u3002\u57fa\u672c\u4e0a\uff0c\u6211\u4eec\u5c06\u9996\u5148\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u5177\u6709\u7b80\u5355\u7684\u573a\u666f\u8f93\u5165\u548c\u9884\u671f\u8f93\u51fa\u3002\u8fd9\u5c06\u5931\u8d25\uff0c\u56e0\u4e3a\u5c1a\u672a\u5b58\u5728\u4efb\u4f55\u7801\u3002\u7136\u540e\u6211\u4eec\u5c06\u5199\u5165\u6700\u4f4e\u5fc5\u8981\u7684\u4ee3\u7801\u6765\u6ee1\u8db3\u6700\u4f4e\u7684\u5e76\u91cd\u590d\u8be5\u8fc7\u7a0b\u3002\u6b64\u6280\u672f\u7684\u540d\u79f0\u662f\u6d4b\u8bd5\u9a71\u52a8\u9a71\u52a8\uff08TDD\uff09\u3002\u5982\u679c\u60a8\u5bf9\u6b64\u8fc7\u7a0b\u611f\u5230\u597d\u5947\uff0c\u6216\u8005\u5982\u679c\u5b83\u6ca1\u6709\u58f0\u97f3\uff0c\u8bf7\u8bbf\u95ee\u8fd9\u7bc7\u6587\u7ae0\u3002\n \u6211\u5c06\u4f7f\u7528\u7684\u8bed\u8a00\u5c06\u662f\u901a\u8fc7\u6d4b\u8bd5\u548c\u5b9e\u73b0\u4e3a\u7b80\u5355\u7684\u5355\u4e2a\u6587\u4ef6\u3002\n \u5982\u679c\u60a8\u4e0d\u719f\u6089Go\u8bed\u8a00\uff0c\u8bf7\u4e0d\u8981\u62c5\u5fc3\u3002\u6211\u5c06\u53d1\u5e03\u5dee\u5f02\u7684\u4ee3\u7801\uff0c\u4ee5\u8bf4\u660e\u6211\u4eec\u5728\u4e00\u81f4\u4e0a\u4e0b\u6eda\u52a8\u7684\u6bcf\u4e00\u6b65\u3002\u8fd9\u91cc\u7684\u60f3\u6cd5\u662f\u63a2\u7d22\u8be5\u6280\u672f\uff0c\u800c\u4e0d\u662f\u8bed\u6cd5\u6216\u7279\u70b9\u3002 \n\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u6211\u5c06\u4f7f\u7528\u8be5\u672f\u8bed\u6570\u7ec4\uff0c\u5c3d\u7ba1\u5728\u5176\u4e2d\u9635\u5217\u548c\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u6280\u672f\u4e0a\uff0c\u6211\u5c06\u5728\u4ee3\u7801\u671f\u95f4usingslics\u3002\n \u6211\u4e5f\u4f1a\u5c1d\u8bd5\u63cf\u8ff0\u6bcf\u4e00\u6b65\uff0c\u6240\u4ee5\u5047\u88c5\u6211\u4eec\u6b63\u5728\u505a\u4e00\u4e9b\u961f\u4f0d\n  \u597d\u7684\u3002\u6b63\u5982\u6211\u5982\u4e0b\u6240\u8ff0\uff0c\u6211\u60f3\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u5f00\u59cb\uff0c\u5c06\u6211\u52a0\u5165\u6700\u5c11\u91cf\u7684\u4ee3\u7801\u53ea\u662f\u4e3a\u4e86\u8ba9\u4e8b\u60c5\u5de5\u4f5c\uff0c\u7136\u540e\u6211\u4eec\u52a0\u62ff\u5230\u5b83\u3002\u5c31\u54ea\u79cd\u7b97\u6cd5\u6211\u6253\u7b97\u9009\u62e9\uff0c\u6211\u4f1a\u548c\u6ce1\u6ce1\u6392\u5e8f\u4e00\u8d77\u3002\u7136\u540e\uff0c\u6211\u4eec\u8bc4\u4f30ifthis\u5bf9\u6211\u4eec\u6765\u8bf4\u8db3\u591f\u597d\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u91cd\u6784\u6211\u4eec\u7684\u4ee3\u7801\u53ef\u4ee5\u9009\u62e9offereMplementation\u3002\u8fd9\u91cc\u91cd\u8981\u7684\u662f\uff1a\u6700\u540e\uff0c\u65e0\u8bba\u6211\u4eec\u9009\u62e9\u7684\u811a\u672c\u7b97\u6cd5\u5982\u4f55\uff0c\u6d4b\u8bd5\u9700\u8981\u901a\u8fc7\uff0c\u56e0\u4e3a\u6211\u4eec\u4ecd\u7136\u60f3\u8981\u5bf9\u6211\u4eec\u8fdb\u884c\u6392\u5e8f\u3002\n \u6b64\u5916\uff0c\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u7684\u6392\u5e8f\u7b97\u6cd5\u53ea\u4f1a\u5c06\u8981\u5904\u7406\u6570\u5b57\uff08\u6574\u6570\u4ee5\u66f4\u7cbe\u786e\uff09\u3002\n \u8ba9\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u8f93\u5165\u5f00\u59cb\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u7a7a\u6570\u7ec4\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u60f3\u8981\u6392\u5e8f\u7a7a\u9635\u5217\uff0c\u7ed3\u679c\u5e94\u8be5\u662f\u4e00\u4e2a\u7a7a\u6570\u7ec4\uff01\u6211\u60f3\u9075\u5faa\u7684\u65b9\u6cd5\u662f\u8ba9\u4e8b\u60c5\u53d8\u5f97\u6700\u5c0f\u7684\u52a8\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u6301\u7eed\u53cd\u9988\u3002\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u5199\u4e00\u4e2a\u5143\u7d20\u5e76\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\uff0c\u5b83\u4f1a\u6307\u51fa\u8be5\u9635\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u4f46\u8fd9\u4f1a\u8981\u6c42\u6211\u4eec\u82b1\u8d39\u66f4\u591a\u65f6\u95f4\u5199\u5165\u4ee3\u7801\uff0c\u66f4\u5c11\u65f6\u95f4\u5199\u5165\u6d4b\u8bd5\u3002\u6211\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e9b\u5e73\u8861\uff0c\u5e76\u786e\u4fdd\u6211\u4eec\u4e0d\u4f1a\u7559\u4e0b\u4efb\u4f55\u8fb9\u7f18\u6848\u4f8b\u3002\n \u5305\u6392\u5e8f_test\u5bfc\u5165\uff08\uff06\uff0334;\u6d4b\u8bd5\uff06\uff0334;\uff06\uff0334; github.com/matryer/is&#34;\uff09func testsort\uff08t * testing .t\uff09{t\u3002 run\uff08\uff06\uff0334;\u5f53\u6570\u7ec4\u4e3a\u7a7a\uff06\uff0334\u65f6\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u5143\u7d20\uff1a= [0] int {}\u9884\u671f\uff1a= [0 ] int {}\u662f\u3002\u76f8\u7b49\uff08\u6392\u5e8f\uff08\u5143\u7d20\uff09\uff0c\u9884\u671f\uff09}\uff09}\n  \u53bb\u6d4b\u8bd5./2021/06/08 14:06:17\u9000\u51fa\u72b6\u60012\uff03alabeduarte.com_test [alabeduarte.com.test] ./ sorting_test.go\uff1a15\uff1a12\uff1a\u672a\u5b9a\u4e49\uff1asortfail alabeduarte.com [build\u5931\u8d25] failfail \uff080.22\u79d2\uff09 \n\u8fd9\u662f\u56e0\u4e3a\u6ca1\u6709\u5728\u4efb\u4f55\u5730\u65b9\u5b9a\u4e49\u6392\u5e8f\u65b9\u6cd5\u3002\u8ba9\u6211\u4eec\u505a\u51fa\u4e00\u5b9a\u7684\u52aa\u529b\u6765\u83b7\u5f97\u8fd9\u4e2a\u4f20\u7403\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u5b9a\u4e49\u65b9\u6cd5\u5e76\u4f7fiTRETURN\u6210\u4e3a\u4e00\u4e2a\u7a7a\u6570\u7ec4\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u6d4b\u8bd5\u5c06\u901a\u8fc7\uff01\n     \u73b0\u5728\u8ba9\u6211\u4eec\u6dfb\u52a0\u53e6\u4e00\u4e2a\u6d4b\u8bd5\u573a\u666f\uff0c\u5728\u90a3\u91cc\u5b83\u5c06\u5f3a\u8feb\u6211\u4eec\u5199\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u662f\u786c\u6d82\u8986\u7684\u54cd\u5e94\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{//\u5148\u524d\u7684\u6d4b\u8bd5\u573a\u666f\u5728\u8fd9\u91cc\u7701\u7565... t.t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u9635\u5217\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff06\uff0334\u65f6\uff0c\u5e94\u8be5\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u5143\u7d20\uff1a= [] int {1}\u9884\u671f\uff1a= [] int {1}\u662f\u3002\u76f8\u7b49\uff08\u6392\u5e8f\uff08\u5143\u7d20\uff09\uff0c\u9884\u671f\uff09}\uff09}\n \u53bb\u6d4b\u8bd5./2021/06/08 14:04:49\u9000\u51fa\u72b6\u60011 sorting_test.go\uff1a29\uff1a29\uff1a[]\uff01= [1] ---\u5931\u8d25\uff1atestsort\uff080.00s\uff09---\u5931\u8d25\uff1atestsort / contrenturn_same_value_when_array_has_only_one_element\uff08 0.00s\uff09failfail alabeduarte.com 0.101sfailfail\uff080.31\u79d2\uff09\n \u8fd9\u662f\u9884\u671f\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u5b9e\u73b0\u4ee3\u7801\u59cb\u7ec8\u8fd4\u56deEntervartAray\u3002\u8ba9\u6211\u4eec\u6539\u53d8\u5b83\u5e76\u8fdb\u884c\u6d4b\u8bd5\u901a\u884c\u8bc1\uff0c\u4f46\u4ee5\u4e00\u79cd\u65b9\u5f0f\u8981\u6c42\u6700\u5c0f\u7684\u52aa\u529b\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff1a\n    \u73b0\u5728\u6211\u4eec\u7684\u4e24\u79cd\u60c5\u51b5\u6b63\u5728\u901a\u8fc7\uff0c\u6211\u4eec\u5230\u76ee\u524d\u4e3a\u6b62\u8bc4\u4f30\u6211\u4eec\u7684\u4ee3\u7801......\n \u597d\u7684\uff0c\u770b\u7740\u4ee3\u7801\uff0c\u6211\u65e0\u6cd5\u60f3\u5230\u6539\u5584\uff0c\u9664\u4e86\u6211\u4eec\u7684\u6d4b\u8bd5\u76ee\u524d\u6709\u70b9\u5197\u957f\u3002\u6211\u4eec\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u6b63\u5728\u5b9a\u4e49variables\u5143\u7d20\u548c\u671f\u671b\uff0c\u7136\u540e\u6211\u4eec\u6b63\u5728\u6267\u884c\u4ee5\u4e0b\u4f20\u7968\uff1a \n\u8003\u8651\u5230\u73b0\u5728\u7684\u6d4b\u8bd5\u662f\u591a\u4e48\u7b80\u5355\uff0c\u6211\u89c9\u5f97\u6211\u4eec\u53ef\u4ee5\u505a\u70b9\u4ec0\u4e48\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u91cd\u6784\u5b83\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u6570\u7ec4\u4e3a\u7a7a\uff06\uff0334\u65f6\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {}\uff09\uff0c[ ] int {}\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u9635\u5217\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff06\uff0334\u65f6\uff0c\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {1} \uff09\uff0c[] int {1}\uff09}\uff09}}\n \u73b0\u5728\uff0c\u8fd0\u884c\u6d4b\u8bd5\uff0c\u4ed6\u4eec\u4ecd\u7136\u5e94\u8be5\u901a\u8fc7\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u65b0\u7684\u4e1c\u897f\uff1a\n  \u597d\u7684\u3002\u73b0\u5728\u4e00\u5207\u90fd\u662f\u201c\u7eff\u8272\u201d\uff08A.K.A\u901a\u8fc7\uff09\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u573a\u666f\uff0c\u5b9e\u9645\u4e0a\u9700\u8981\u6211\u4eec\u5e94\u7528\u4efb\u4f55\u7c7b\u578b\u7684\u7b97\u6cd5\u3002\u4f46\u662f\uff0c\u8ba9\u6211\u4eec\u6dfb\u52a0\u771f\u6b63\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u59822\u53f7\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{// ... t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u8fd4\u56de\u6700\u4f4e\u5143\u7d20\uff0c\u540e\u8ddf\u6700\u5927\u7684\u5143\u7d20\uff06\uff0334; func\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {2\uff0c 1}\uff09\uff0c[] int {1,2}\uff09}\uff09}\n  \u53bb\u6d4b\u8bd5./2021/06/08 14:21:11\u9000\u51fa\u72b6\u60011 sorting_test.go\uff1a31\uff1a[2 1]\uff01= [1 2] ---\u5931\u8d25\uff1atestsort\uff080.00s\uff09---\u5931\u8d25\uff1atestsort / contance_return_the_lowest_element_followed_by_the_largest_element\uff080.00s\uff09failfail alabeduarte.com 0.098sfailfail\uff080.34\u79d2\uff09\n  //\u5b9e\u73b0\u6587\u4ef6func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {\u5982\u679clen\uff08\u5143\u7d20\uff09\uff06lt; = 1 {return\u5143\u7d20} return [] int {\u5143\u7d20[1]\uff0c\u5143\u7d20[0]}} \n\u90a3\u592a\u68d2\u4e86\uff01\u6d4b\u8bd5\u90fd\u662f\u901a\u8fc7\u7684\u3002\u4f60\u53ef\u80fd\u60f3\u77e5\u9053...... Outimplementation\u542c\u8d77\u6765\u5f88\u53ef\u9760\u5417\uff1f\u4e00\u4e9b\u4e8b\u60c5\u53ef\u4ee5\u75af\u4e86......\u4e5f\u662f\u5982\u6b64\uff0c\u611f\u89c9\u5c31\u50cf\u6211\u4eec\u6b3a\u9a97\u4e00\u6837\uff0c\u56e0\u4e3a\u6211\u4eec\u603b\u662f\u6293\u4f4f\u6d41\u52a8\u548c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5e76\u5c06\u5b83\u4eec\u6062\u590d\u5230\u76f8\u53cd\u7684\u987a\u5e8f\u4e2d\uff0c\u6709\u8bfa\u65af\u7279\u7ee7\u7eed\u4e0b\u53bb\uff0c\u8bda\u5b9e\u3002\u8ba9\u6211\u4eec\u6253\u7834\u4ee3\u7801\u5e76\u8fdb\u4e00\u6b65\u8ba8\u8bba\u6211\u4eec\u4e0b\u4e00\u6b65\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff1a\n //\u5b9e\u73b0\u6587\u4ef6Func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {//\u5728\u6b64\u68c0\u67e5\u957f\u5ea6\u662f\u5426\u5c0f\u4e8e\u6216\u7b49\u4e8e1 //\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5219\u4f1a\u8fd4\u56de\u5143\u7d20//\u672c\u8eab\uff08\u4e00\u4e2a\u7a7a\u6570\u7ec4\uff09\uff0c\u5982\u679c\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5b83\u5c06//\u4e5f\u4f1a\u8fd4\u56de\u3002\u5982\u679cLEN\uff08\u5143\u7d20\uff09\uff06lt; = 1 {return\u5143\u7d20} //\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u6293\u4f4f\u7b2c\u4e8c\u4e2aelewht\u548c\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c//\u4ea4\u6362\u4e24\u4e2areturn [] int {\u5143\u7d20[1]\u7684\u987a\u5e8f\uff0c\u5143\u7d20[0]}}\n \u57fa\u672c\u4e0a\uff0c\u5982\u679c\u6570\u7ec4\u6709\u8d85\u8fc72\u4e2a\u5143\u7d20\uff0c\u5219\u6211\u4eec\u7684\u4ee3\u7801\u53ea\u80fd\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u8fd4\u56de\u7b2c\u4e8c\u6b21\u8fd4\u56de\u3002\u6240\u4ee5\u8fd9\u91cc\u6709\u4e00\u4e9b\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u7684\u51e0\u4ef6\u7b97\u6cd5\uff1a\n \u5f53\u5143\u7d20\u7684\u957f\u5ea6\u5927\u4e8e2\u65f6\uff0c\u6211\u4eec\u7684\u6392\u5e8f\u7b97\u6cd5\u5c06\u5f52\u4e8e\u4f11\u606f\uff0c\u8fd4\u56de\u5177\u6709\u66f4\u5c11\u5143\u7d20\u7684\u6570\u7ec4\n \u5f53\u5143\u7d20\u5df2\u7ecf\u6392\u5e8f\u65f6\uff0c\u6211\u4eec\u7684\u6392\u5e8f\u7b97\u6cd5\u5c06\u901a\u8fc7\u542f\u52a8\u524d\u4e24\u4e2a\u5143\u7d20\n  \u5f88\u660e\u663e\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u6b63\u5728\u505a\u9519\u4e8b\u3002\u4f46\u662f\u56e0\u4e3a\u5b83\u662fItmight Sound\uff0c\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u6d4b\u8bd5\u7d22\u5f15\uff0c\u6211\u4eec\u53ea\u80fd\u5c06\u65b0\u4ee3\u7801\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u5b9e\u65bd\u4e2d\uff0c\u8fd9\u5c06\u8bc1\u660e\u5176\u5b58\u5728\u8bc1\u660e\uff01\n  //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{// ... t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u4e0e\u4f5c\u4e3a\u8f93\u5165\uff06\uff0334\u63d0\u4f9b\u76f8\u540c\u957f\u5ea6\u76f8\u540c\u7684\u6570\u7ec4; func\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09sortedelements\uff1a= sort\uff08[] INT {2,1,4,3}\uff09ACTUALL\u957f\u5ea6\uff1a= LEN\uff08SortEdElements\uff09\u662f\u3002\u76f8\u7b49\uff08Actuallength\uff0c4\uff09}\uff09} \n\u53bb\u6d4b\u8bd5./2021/06/08 14:40:57\u9000\u51fa\u72b6\u60011 sorting_test.go\uff1a44\uff1a2\uff01= 4 ---\u5931\u8d25\uff1atestsort\uff080.00s\uff09---\u5931\u8d25\uff1atestsort / consucturn_an_array_with_the_same_length_as_the_one_provide_as_an_input\uff080.00s\uff09 failfail alabeduarte.com 0.101sfailfail\uff080.34\u79d2\uff09\n  //\u5b9e\u73b0\u6587\u4ef6func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {\u5982\u679clen\uff08\u5143\u7d20\uff09\uff06lt; = 1 {return\u5143\u7d20} //\u4ece\u7d22\u5f152\u4e0a\u53d6\u5411rest\uff1a=\u5143\u7d20[2\uff1a] //\u9644\u52a0\u4f11\u606f\u5230\u539f\u59cb\u6570\u7ec4\u6211\u4eec\u6709\u8fd4\u56de\u9644\u52a0\uff08[] int {\u5143\u7d20[1]\uff0c\u5143\u7d20[0]}\uff0c\u4f11\u606f......\uff09}\n   \u7531\u4e8e\u6211\u4eec\u786e\u4fdd\u9635\u5217\u957f\u5ea6\u59cb\u7ec8\u76f8\u540c\uff0c\u800c\u662f\u6211\u4eec\u7b26\u5408\u5176\u4ed6\u6d4b\u8bd5\u573a\u666f\u7684\u7b26\u53f7\u3002\u4f46\u662f\uff0c\u73b0\u5728\u7684\u5b9e\u73b0\u6709\u70b9\u7b28\u62d9\uff0c\u8fd9\u662f\u4e00\u4e2a\u6807\u5fd7\uff0c\u662f\u65f6\u5019\u5b9e\u9645\u5b9e\u73b0\u4e86\u811a\u7684\u65f6\u95f4\uff01\n \u8ba9\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u7b80\u5355\u7684\u573a\u666f\uff0c\u4ee5\u8bf4\u660e\u6211\u4eec\u53ef\u4ee5\u5728\u6ca1\u6709\u7b28\u91cd\u7684\u5b9e\u73b0\u7684\u60c5\u51b5\u4e0b\u5bf9\u4e91\u51702\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002\u6240\u4ee5\u8ba9\u6211\u4eec\u4f7f\u75283\u4e2aElementSthis\u65f6\u95f4\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func testsort\uff08t * testing .t\uff09{// ... t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u5c06\u6240\u6709\u5143\u7d20\u4ece\u6700\u4f4e\u5230\u6700\u5927\u7684\u5143\u7d20\u6392\u5e8f\uff0cFunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {2 \uff0c3,1}\uff09\uff0c[] int {1,2,3}\uff09}\uff09}\uff09\n  \u53bb\u6d4b\u8bd5./2021/06/08 14:56:24\u9000\u51fa\u72b6\u60011 sorting_test.go\uff1a51\uff1a[3 2 1]\uff01= [1 2 3] ---\u5931\u8d25\uff1atestsort\uff080.00s\uff09---\u5931\u8d25\uff1atestsort / consuct_all_all_the_elements_from_the_lowest_to_the_larget\uff080.00s\uff09FailFail Alabeduarte.com 0.099SFailfail\uff080.40\u79d2\uff09\n \u73b0\u5728\u8ba9\u6211\u4eec\u5728\u8fd9\u91cc\u5b9e\u73b0\u4e00\u4e9b\u6392\u5e8f\u7b97\u6cd5\u3002\u76ee\u524d\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528\u79f0\u4e3a\u6ce1\u6cab\u6392\u5e8f\u7684\u7b97\u6cd5\u3002 \n\u5982\u4e0a\u6240\u8ff0\uff0c\u6ce1\u6cab\u6392\u5e8f\u662f\u6700\u7b80\u5355\u7684\u6392\u5e8f\u7b97\u6cd5\u4e4b\u4e00Toundstand\u548c\u5b9e\u65bd\uff0c\u4f46\u5176\u6548\u7387\u5728\u8f83\u5927\u7684\u8d4c\u6ce8\u4e0a\u663e\u7740\u964d\u4f4e\u3002\u8fd9\u91cc\u6709\u66f4\u591a\u7ec6\u8282\u3002\n \u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e\u6b64\u7b97\u6cd5\u7684\u5b9e\u73b0\uff0cIalso\u5efa\u8bae\u6b64\u6750\u6599\uff1ahttps://tutorialedde.net/courses/go-algorithms-course/21-bubble-sort-in-go/\n //\u5b9e\u73b0\u6587\u4ef6Func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {n\uff1a= len\uff08\u5143\u7d20\uff09\u5982\u679cn\uff06lt; = 1 {return\u5143\u7d20}\u4ea4\u6362\uff1a= true for swappped {swappped = false i\uff1a= 0;\u6211\uff06lt; n  -  1; i ++ {\u5982\u679c\u5143\u7d20[i]\uff06gt;\u5143\u7d20[i + 1] {\u5143\u7d20[i]\uff0c\u5143\u7d20[i + 1] =\u5143\u7d20[i + 1]\uff0c\u5143\u7d20[i]\u4ea4\u6362= true}}} return\u5143\u7d20}\n    \u6211\u4eec\u7684\u7b97\u6cd5\uff08\u6ce1\u6cab\u6392\u5e8f\uff09\u4e0d\u662f\u90a3\u91cc\u6700\u6709\u6548\u7684\u3002\u7b97\u6cd5\u7684\u590d\u6742\u6027\u662fO\uff08n\u00b2\uff09\uff0c\u5176\u4e2dn\u662f\u88ab\u6392\u5e8f\u7684\u5143\u7d20\u6570\u91cf\u3002\u8fd9\u610f\u5473\u7740\u968f\u7740\u5143\u7d20\u7684\u6570\u91cf\u589e\u957f\uff0c\u5176\u6548\u7387\u964d\u4f4e\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6b64\u5904\u4f7f\u7528\u7684\u5176\u4ed6\u9009\u9879\uff0c\u4f8b\u5982\u88ab\u89c6\u4e3aMyeffirity\u7684Insertionsort\u6216Selectionsor\u3002\n \u4e0d\u4e00\u5b9a\u6539\u53d8\u4efb\u4f55\u5185\u5bb9\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528GO\u6d4b\u8bd5\u57fa\u51c6\u6d4b\u8bd5\u6211\u4eec\u7684CurrentalGorithm\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\u3002\n \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5c0f\u529f\u80fd\uff08\u5728\u6211\u4eec\u7684\u6d4b\u8bd5\u6587\u4ef6\u4e2d\uff09\uff0c\u4ee5\u751f\u6210\u5e26\u6709\u7ed9\u5b9a\u957f\u5ea6\u7684\u968f\u673a\u5143\u7d20\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6func\u751f\u6210dayerandeLement\uff08n int\uff09[] int {// inseardise and slice\uff0c\u5176\u957f\u5ea6\u548c\u5bb9\u91cf\u7684\uff06\uff0334; n\uff06\uff0334;\u5143\u7d20\uff1a= make\uff08[] int\uff0cn\uff0cn\uff09//\u586b\u5145\u4e0ei\u7684\u968f\u673a\u5143\u7d20\u7684\u5207\u7247\uff0c_\uff1a=\u8303\u56f4\u5143\u7d20{\u5143\u7d20[i] = rand\u3002 int\uff08\uff09}\u8fd4\u56de\u5143\u7d20} \n\u73b0\u5728\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u5c06\u8fed\u4ee3\u6211\u4eec\u7684\u65b9\u6cd5\u6392\u5e8f\uff0c\u5c06tests.b\u4f5c\u4e3a\u53c2\u6570\uff1a\n //\u6d4b\u8bd5\u6587\u4ef6Func BenchmarkBubblesort\uff08n int\uff0cb * testing .b\uff09{\u4e3ai\uff1a= 0;\u6211\uff06lt; b .n; i ++ {\u5143\u7d20\uff1a=\u751f\u6210\u5730\u6bb5\uff08n\uff09//\u6392\u5e8f\u5143\u7d20\u6392\u5e8f\uff08\u5143\u7d20\uff09}\n  //\u6d4b\u8bd5\u6587\u4ef6func benchcharkbubblesort3\uff08b * testing .b\uff09{benchmarkbbblesort\uff083\uff0cb\uff09} func benchmarkbbollesort10\uff08b * testing .b\uff09{benchmarkbubblesort\uff0810\uff0cb\uff09} func benchmarkbbollesort20\uff08b * testing .b\uff09{benchmarkbbblesort\uff08 20\uff0cb\uff09} Func BenchmarkBblesort50\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkBubblesort\uff0850\uff0cB\uff09} Func BenchmarkBbollesort100\uff08b * testing .b\uff09{benchmarkbubblesort\uff08100\uff0cb\uff09} func benchmarkbbollesort1000\uff08b * testing .b\uff09{benchmarkbbblesort \uff081_000\uff0cb\uff09} Func BenchmarkBubblesort100000\uff08b *\u6d4b\u8bd5.b\uff09{benchmarkbbblesort\uff08100_000\uff0cb\uff09}\n    Go test -bench = .goos\uff1a\u8fbe\u5c14\u6587\u53f8\u673a\uff1aamd64pkg\uff1aalabeduarte.comcpu\uff1a\u82f1\u7279\u5c14\uff08r\uff09\u6838\u5fc3\uff08tm\uff09i7-9750h cpu @ 2.60ghzbenchmarkbubbollesort3-12 17688249 67.22 ns / opbenchmarkbubbollesort10-12 4173184 303.4 ns / opbenchmarkbubbollesort20-12 1228124 1031 ns / OpbenchMarkBubblesort50-12 240789 4240 NS / OPBenchmarkBubblesort100-12 90360 13976 NS / OpbenchmarkBubbollsort1000-12 1626 733388 NS / OpbenchmarkBubblesorT100000-12 1 14456783580 NS / OP\n \u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u5f53\u9635\u5217\u4e2d\u6709100,000\u4e2a\u5143\u7d20\u65f6\uff0c\u6211\u7684\u673a\u5668\u5360\u636e\u4e8614456783580\u7eb3\u79d2\uff0c\u4ee5\u6267\u884c\u6392\u5e8f\uff0c\u76f8\u5f53\u4e8e\u7ea614\u79d2\u3002\n \u8ba9\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528Go\u7684StanderalLibrary\u5b9e\u73b0\u6765\u5bf9\u6211\u4eec\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f.Let\u7684\u521b\u5efa\u4e00\u4e2a\u5c0f\u529f\u80fd\uff0c\u5c06\u751f\u6210\u968f\u673a\u5143\u7d20\u5e76\u4ece\u5305\u4e2d\u8c03\u7528TheThod Ints\uff1a\n Func BenchmarkGosort\uff08n int\uff0cb * testing .b\uff09{\u4e3ai\uff1a= 0;\u6211\uff06lt; b .n; i ++ {\u5143\u7d20\uff1a=\u751f\u6210\u5f0fandomeLements\uff08n\uff09//\u6392\u5e8f\u5143\u7d20\u6392\u5e8f\u3002 INTS\uff08\u5143\u7d20\uff09}} \n\u73b0\u5728\u8ba9\u6211\u4eec\u521b\u5efa\u7c7b\u4f3c\u7684\u57fa\u51c6\u51fd\u6570\uff0c\u8fd9\u4e9b\u529f\u80fd\u5c06\u4e0eSort.ints\u51fd\u6570\u8fdb\u884c\u6bd4\u8f83\uff1a\n Func BenchmarkGoosort3\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGoSort\uff083\uff0cB\uff09} Func BenchmarkGosort10\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGoSort\uff0810\uff0cB\uff09} Func BenchmarkGoSort20\uff08B *\u6d4b\u8bd5.b\uff09{benchmarkgosort\uff0820\uff0cb\uff09 Func BenchmarkGosort50\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGosort\uff0850\uff0cB\uff09} Func BenchmarkGoSort100\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGoSort\uff08100\uff0cB\uff09} Func BenchmarkGosort1000\uff08B * Testing .b\uff09{benchmarkgosort\uff081_000\uff0cb \uff09} Func BenchmarkGosort100000\uff08b *\u6d4b\u8bd5.b\uff09{benchmarkgosort\uff08100_000\uff0cb\uff09}\n  Go test -bench = .goos\uff1aDarwingoArch\uff1aAmd64PKG\uff1aalabeduarte.comcpu\uff1a\u82f1\u7279\u5c14\uff08r\uff09\u6838\u5fc3\uff08tm\uff09i7-9750h cpu @ 2.60ghzbenchmarkbubblesort3-12 18284776 67.53 ns / opbenchmarkbubblesort10-12 4207515 295.9 ns / opbenchmarkbubbollesort20-12 1201567 1006 ns / opBenchmarkBubbleSort50-12 276207 4262\u7eb3\u79d2/ opBenchmarkBubbleSort100-12 89107 13813\u7eb3\u79d2/ opBenchmarkBubbleSort1000-12 1620 755969\u7eb3\u79d2/ opBenchmarkBubbleSort100000-12 1 14532398965\u7eb3\u79d2/ opBenchmarkGoSort3-12 9781417 124.5\u7eb3\u79d2/ opBenchmarkGoSort10-12 2595421 439.4\u7eb3\u79d2/ opBenchmarkGoSort20-12\u767e\u4e071108\u7eb3\u79d2/ OpbenchmarkGosort50-12 357010 3252 NS / OPBenchmarkGosort100-12 160202 7618 NS / OpbenchmarkGosort1000-12 10000 100856 NS / OpbenchmarkGosort100000-12 75 16205598 NS / Op\n \u6b63\u5982\u6211\u4eec\u6240\u770b\u5230\u7684\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u4f7f\u7528\u6ce1\u6cab\u6392\u5e8f\u4f3c\u4e4e\u7a0d\u5fae\u597d\u4e00\u70b9\uff0c\u76f4\u52302017010\u6bd4\u8d5b\uff0c\u5176\u4e2dGo\u6807\u51c6\u5e93\u5f00\u59cb\u95ea\u8000\u6bd4\u6211\u4eec\u7684\u65b9\u5f0f\u66f4\u5feb\u3002\n \u7531\u4e8eGo\u6807\u51c6\u5e93\u66f4\u6709\u6548\uff0c\u8ba9\u6211\u4eec\u66f4\u6539\u6211\u4eec\u7684\u5b9e\u73b0\uff0c\u800c\u662f\u91cd\u65b0\u8fd0\u884c\u6d4b\u8bd5\uff1a\n   \u53bb\u6d4b\u8bd5-v === RUN TestSort === RUN TestSort / should_return_same_value_when_array_is_empty === RUN TestSort / should_return_same_value_when_array_has_only_one_element === RUN TestSort / should_return_the_lowest_element_followed_by_the_largest_element === RUN TestSort / should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input === RUN TestSort / should_sort_all_the_elements_from_the_lowest_to_the_largest --- PASS\uff1aTestSort \uff080.00S\uff09--- PASS\uff1aTestSort / should_return_same_value_when_array_is_empty\uff080.00S\uff09--- PASS\uff1aTestSort / should_return_same_value_when_array_has_only_one_element\uff080.00S\uff09--- PASS\uff1aTestSort / should_return_the_lowest_element_followed_by_the_largest_element\uff080.00S\uff09--- PASS\uff1aTestSort / should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input\uff080.00 s\uff09---\u901a\u8fc7\uff1atestsort / consut_all_all_the_elements_from_the_lowest_to_the_larget\uff080.00s\uff09passok alabeduarte.com 0.920s\n \u5982\u679c\u60a8\u6709\u5174\u8da3\u67e5\u770b\u6211\u4eec\u6784\u5efa\u7684\u6574\u4e2a\u4ee3\u7801\uff0c\u8bf7\u5728\u4e0b\u9762\u7684CONSLAPSE THECTION\uff1a \n\u5305\u88f9\u6392\u5e8f_test\u5bfc\u5165\uff08\uff06\uff0334; math / rand\uff06\uff0334;\uff06\uff0334; sort\uff06\uff0334;\uff06\uff0334;\u6d4b\u8bd5\uff06\uff0334;\uff06\uff0334; github.com/matryer/is&#34;\uff09//\u5b9e\u73b0\uff1a/ //\u6392\u5e8f\u5c06\u63a5\u6536\u5207\u7247\u4f5c\u4e3a\u8f93\u5165\uff0c\u5b83\u5c06\u8fd4\u56de\u53e6\u4e00\u4e2a\u5207\u7247\u4f46\u662f//\u6392\u5e8f\u3002 Func\u6392\u5e8f\uff08\u5143\u7d20[] int\uff09[] int {n\uff1a= len\uff08\u5143\u7d20\uff09\u5982\u679cn\uff06lt; = 1 {return\u5143\u7d20}\u4ea4\u6362\uff1a= true for swappped {swapppy = false for i\uff1a= 0;\u6211\uff06lt; n  -  1; i ++ {\u5982\u679c\u5143\u7d20[i]\uff06gt;\u5143\u7d20[i + 1] {\u5143\u7d20[i]\uff0c\u5143\u7d20[i + 1] =\u5143\u7d20[i + 1]\uff0c\u5143\u7d20[i]\u4ea4\u6362= true}}\u8fd4\u56de\u5143\u7d20} //\u5355\u5143\u6d4b\u8bd5\uff1afunc testsort\uff08t *\u6d4b\u8bd5.t\uff09{t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u6570\u7ec4\u4e3a\u7a7a\uff06\uff0334\u65f6\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {}\uff09\uff0c[ ] int {}\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5f53\u9635\u5217\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff06\uff0334\u65f6\uff0c\u5e94\u8fd4\u56de\u76f8\u540c\u7684\u503c;\uff0cfunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {1} \uff09\uff0c[] int {1}\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u8fd4\u56de\u6700\u4f4e\u5143\u7d20\uff0c\u540e\u8ddf\u6700\u5927\u7684\u5143\u7d20\uff06\uff0334; func\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {2\uff0c 1}\uff09\uff0c[] int {1,2}\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u4e0e\u4f5c\u4e3a\u8f93\u5165\uff06\uff0334\u63d0\u4f9b\u76f8\u540c\u957f\u5ea6\u76f8\u540c\u7684\u6570\u7ec4; func\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09sortedelements\uff1a= sort\uff08[] INT {2,1,4,3}\uff09ACTUALL\u957f\u5ea6\uff1a= LEN\uff08SortEdElements\uff09\u662f\u3002\u7b49\u4e8e\uff08Actuall\u957f\u5ea6\uff0c4\uff09}\uff09t\u3002\u8fd0\u884c\uff08\uff06\uff0334;\u5e94\u8be5\u5c06\u6240\u6709\u5143\u7d20\u4ece\u6700\u4f4e\u5230\u6700\u5927\u7684\u5143\u7d20\u6392\u5e8f\uff0cFunc\uff08t * testing .t\uff09{\u662f\uff1a=\u662f\u3002\u65b0\uff08t\uff09\u662f\u3002\u76f8\u7b49\uff08sort\uff08[] int {2 \uff0c3\uff0c1}\uff09\uff0c[] int {1,2,3}\uff09}\uff09} //\u57fa\u51c6\uff1aFunc\u751f\u6210DaySandeMelements\uff08n int\uff09[] int {//\u521d\u59cb\u5316\u5177\u6709\uff06\uff0334\u7684\u957f\u5ea6\u548c\u5bb9\u91cf\u7684\u5207\u7247; n\uff06 \uff0334;\u5143\u7d20\uff1a= make\uff08[] int\uff0cn\uff0cn\uff09//\u586b\u5145\u4e0ei\u7684\u968f\u673a\u5143\u7d20\u7684\u5207\u7247\uff0c_\uff1a=\u8303\u56f4\u5143\u7d20{\u5143\u7d20[i] = rand\u3002 int\uff08\uff09}\u8fd4\u56de\u5143\u7d20} Func BenchmarkBubbleort\uff08n int\uff0cb * testing .b\uff09{\u4e3ai\uff1a= 0;\u6211\uff06lt; b .n; i ++ {\u5143\u7d20\uff1a=\u751f\u6210\u5f0faragemelements\uff08n\uff09//\u6392\u5e8f\u5143\u7d20\u6392\u5e8f\uff08\u5143\u7d20\uff09}} func benchmarkgosort\uff08n int\uff0cb * testing .b\uff09{\u4e3ai\uff1a= 0;\u6211\uff06lt; b .n; i ++ {\u5143\u7d20\uff1a=\u751f\u6210\u5f0fandomeLements\uff08n\uff09//\u6392\u5e8f\u5143\u7d20\u6392\u5e8f\u3002 ints\uff08\u5143\u7d20\uff09}} func benchmarkbbollesort3\uff08b * testing .b\uff09{benchmarkbbblesort\uff083\uff0cb\uff09} func benchmarkbbolsort10\uff08b * testing .b\uff09{benchmarkbubblesort\uff0810\uff0cb\uff09} func benchmarkbbollesort20\uff08b * testing .b\uff09{ BenchmarkBublesort\uff0820\uff0cB\uff09} Func BenchmarkBubblesort50\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkBubblesort\uff0850\uff0cB\uff09} Func BenchmarkBbollesort100\uff08b * Testing .b\uff09{BenchmarkBubblesort\uff08100\uff0cB\uff09} Func BenchmarkBubblesort1000\uff08B *\u6d4b\u8bd5.b\uff09 {BenchmarkBblesort\uff081_000\uff0cB\uff09} Func BenchmarkBubblesorT100000\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkBubblesort\uff08100_000\uff0cB\uff09} Func BenchmarkGoSort3\uff08B * Testing.B\uff09{BenchmarkGoSort\uff083\uff0cB\uff09} Func BenchmarkGosort10\uff08B *\u6d4b\u8bd5.b \uff09{BenchmarkGosort\uff0810\uff0cB\uff09} Func BenchmarkGoSort20\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGosort\uff0820\uff0cB\uff09} Func BenchmarkGosort50\uff08B *\u6d4b\u8bd5.b\uff09{BenchmarkGosort\uff0850\uff0cB\uff09} Func BenchmarkGosort100\uff08B *\u6d4b\u8bd5\u3002 b\uff09{benchmarkgosort\uff08100\uff0cb\uff09 Func BenchmarkGoosort1000\uff08b *\u6d4b\u8bd5.b\uff09{benchmarkgosort\uff081_000\uff0cb\uff09} Func BenchmarkGosort100000\uff08b *\u6d4b\u8bd5.b\uff09{benchmarkgosort\uff08100_000\uff0cb\uff09}\n  \u5982\u679c\u4f60\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u5e76\u8d70\u4e86\u8fd9\u7bc7\u6587\u7ae0\uff0c\u975e\u5e38\u611f\u8c22\u4f60\u3002\u6211\u5e0c\u671b\u6211\u53ef\u4ee5\u8bf4\u660e\u5982\u4f55\u5f00\u53d1\u4e00\u4e2a\u6392\u5e8f\u7b97\u6cd5\u9a71\u52a8\u7684\u5b57\u6bcd\u3002\n \u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u6211\u5bf9\u62ff\u8d77\u6700\u5bcc\u6709\u7684\u7b97\u6cd5\u5b9e\u65bd\u6ca1\u6709\u592a\u62c5\u5fc3\uff0c\u5f00\u59cb\uff0c\u4f46\u76f8\u53cd\uff0c\u6211\u611f\u5174\u8da3\n...... ", "note_en": "Sorting algorithms are heavily used in Software Development in one way oranother. Depending on the language, you might have in handy some sortingfunctions at your disposal but depending on the use case, knowing which sortingalgorithm is being applied under the hood can be key to measure the impacts ofthe change on the working Software.\n In this article, I\u2019d like to explore a couple of implementations of sortingalgorithms but I\u2019d like to do so driven by unit tests. I haven\u2019t seen muchcontent online that explore this approach so I hope this sparks your interest.\n  Most of the sorting algorithms definitions I\u2019ll be using were extracted from the Wikipedia so here\u2019s a summaryto kick us off:\n A sorting algorithm is an algorithm that puts elements of a list in a certainorder.\n    The idea here is to implement one or two sorting algorithms but doing so drivenby tests. Basically, we\u2019ll write a single test first, with a simple scenariowith input and expected output. This will fail because there won\u2019t be anycode just yet. Then we will write the minimum necessary code to satisfy thetest and repeat the process. The name of this technique is Test-DrivenDevelopment (TDD). If you\u2019re curious about this process or if it doesn\u2019t soundfamiliar to you, please visit  this post.\n The language I\u2019ll use will be  Go and using a single filewith  both test and implementation for simplicity.\n If you are not familiar with the Go language, don\u2019t worry. I will post differentsnippets of code to illustrate every step as we were scrolling up and down in afile. The idea here is to explore the technique, not the syntax or peculiaritiesof Go.\n You might notice that I\u2019ll be using the term Array although in Go thereis a difference between  Arrays andSlices and, technically, I\u2019ll be usingSlices during the code.\n I\u2019ll also try to describe each step, so pretend we\u2019re doing some  PairProgramming\n  All right. As I mentioned below, I\u2019d like to start with a simple test that wouldforce me to add the least amount of code just to get things working, then we canadd more to it. In terms of which algorithm I intend to chose, I\u2019ll go with Bubble sort. Then we evaluate ifthis is good enough for us, if not, we refactor our code to choose a differentimplementation. The important thing here is: at the end, regardless of thealgorithm we choose, the tests need to pass as we\u2019ll still want to sort ourelements.\n Also, for simplicity, our sorting algorithm will only be going to handle numbers(integers to be more precise).\n Let\u2019s start with the simplest input possible, which would be an empty array. Why?Because if we want to sort an empty array, the result should be an empty array!The approach I\u2019d like to follow is to get things going with  minimal moves aspossible because we need constant feedback. We could start with an array with4 elements and write a test which would expect this array to be sorted, but thiswould require us spending more time writing code, less time writing test. I\u2019dlike to get some balance and make sure we don\u2019t leave any edge case behind.\n package sorting_test import  (\t &#34;testing&#34;\t &#34;github.com/matryer/is&#34; ) func  TestSort (t  *testing .T )  {\tt . Run ( &#34;should return same value when array is empty&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\telements  :=  [ 0 ] int { }\t\texpected  :=  [ 0 ] int { }\t\tis . Equal ( Sort (elements ) , expected )\t } ) }\n  go test ./.2021/06/08 14:06:17 exit status 2# alabeduarte.com_test [alabeduarte.com.test]./sorting_test.go:15:12: undefined: SortFAIL alabeduarte.com [build failed]FAILFAIL (0.22 seconds)\n This is because  Sort method is not defined anywhere. Let\u2019s make theminimal effort to get this passing than by defining the method and make itreturn an empty array so our test will pass!\n     Now let\u2019s add another test scenario where it will force us to write somethingother than hardcoded response:\n // Test file func  TestSort (t  *testing .T )  {  // previous test scenario is omitted here ... t . Run ( &#34;should return same value when array has only one element&#34; ,  func (t  *testing .T )  { is  := is . New (t ) elements  :=  [ ] int { 1 } expected  :=  [ ] int { 1 } is . Equal ( Sort (elements ) , expected )  } ) }\n go test ./.2021/06/08 14:04:49 exit status 1 sorting_test.go:29: [] != [1]--- FAIL: TestSort (0.00s) --- FAIL: TestSort/should_return_same_value_when_array_has_only_one_element (0.00s)FAILFAIL alabeduarte.com 0.101sFAILFAIL (0.31 seconds)\n This is expected since our implementation code is always returning an emptyarray. Let\u2019s change that and make the test pass, but in a way that would requirethe minimal effort possible to achieve that:\n    Now that our two scenarios are passing, let\u2019s evaluate our code so far\u2026\n Ok, looking at the code, there\u2019s no much I can think of to improve, except forthe fact that our tests are a bit verbose at the moment. We\u2019re definingvariables  elements and  expected in our tests, then we\u2019re doing the followingevaluation:\n  Considering how simple our test is at the moment, I feel we could do thingsinline, so let\u2019s refactor it:\n // Test file func  TestSort (t  *testing .T )  {\tt . Run ( &#34;should return same value when array is empty&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { } ) ,  [ ] int { } )\t } )\tt . Run ( &#34;should return same value when array has only one element&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 1 } ) ,  [ ] int { 1 } )\t } ) }\n Now, running the tests, they still should be passing, since we didn\u2019t addanything new:\n  Good. Now everything is \u201cgreen\u201d (a.k.a passing), let\u2019s add a new scenario thatwould actually require us to apply any sort of algorithm. However, let\u2019s addsomething really simple, like 2 numbers:\n // Test file func  TestSort (t  *testing .T )  {  // ...\tt . Run ( &#34;should return the lowest element followed by the largest element&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 2 ,  1 } ) ,  [ ] int { 1 ,  2 } )\t } ) }\n  go test ./.2021/06/08 14:21:11 exit status 1 sorting_test.go:31: [2 1] != [1 2]--- FAIL: TestSort (0.00s) --- FAIL: TestSort/should_return_the_lowest_element_followed_by_the_largest_element (0.00s)FAILFAIL alabeduarte.com 0.098sFAILFAIL (0.34 seconds)\n  // Implementation file func  Sort (elements  [ ] int )  [ ] int  {\t if  len (elements )  &lt;=  1  {\t\t return elements\t }\t return  [ ] int {elements [ 1 ] , elements [ 0 ] } }\n  That\u2019s great! The tests are all passing. You might be wondering\u2026 ourimplementation doesn\u2019t sound very reliable isn\u2019t it? A few things can go wrongthere\u2026 also, it feels like we\u2019re cheating because we\u2019re always grabbing thefirst and second element and returning them into the reverse order, there\u2019s nosorting going on, to be honest. Let\u2019s break the code down and discuss it furtherwhat we can do next:\n // Implementation file func  Sort (elements  [ ] int )  [ ] int  {  // here we are checking if the length is less or equal to 1  // which means that if the array is empty we will return the elements  // themselves (an empty array) and if the array has only one element, it will  // also return itself.\t if  len (elements )  &lt;=  1  {\t\t return elements\t }  // On this case, we&#39;re grabbing the second elemnt and the first element and  // swapping the order of the two\t return  [ ] int {elements [ 1 ] , elements [ 0 ] } }\n Basically, if the array has more than 2 elements, our code will only return thefirst two with reverse order. So here are a few things that can go wrong withthis algorithm:\n When the elements\u2019 length is greater than 2, our sorting algorithm will ignorethe rest, returning an array with fewer elements\n When the elements are already sorted, our sorting algorithm will mess it up byswapping the first two elements\n  It is pretty clear that our code is doing the wrong thing. But as tempting as itmight sound, let\u2019s only add a new code into our implementation if we have a testscenario that would  justify its existence!\n  // Test file func  TestSort (t  *testing .T )  {  // ...\tt . Run ( &#34;should return an array with the same length as the one provided as an input&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tsortedElements  :=  Sort ( [ ] int { 2 ,  1 ,  4 ,  3 } )\t\tactualLength  :=  len (sortedElements )\t\tis . Equal (actualLength ,  4 )\t } ) }\n  go test ./.2021/06/08 14:40:57 exit status 1 sorting_test.go:44: 2 != 4--- FAIL: TestSort (0.00s) --- FAIL: TestSort/should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input (0.00s)FAILFAIL alabeduarte.com 0.101sFAILFAIL (0.34 seconds)\n  // Implementation file func  Sort (elements  [ ] int )  [ ] int  {\t if  len (elements )  &lt;=  1  {\t\t return elements\t }  // take the elements from index 2 onward\trest  := elements [ 2 : ]  // append the rest to the original array we had\t return  append ( [ ] int {elements [ 1 ] , elements [ 0 ] } , rest ... ) }\n   Since we are making sure the array length will always be the same but we\u2019restill compliant with the other test scenarios. However, the implementation nowis a bit clunky and this is a sign that it is time to actually implement thealgorithm!\n Let\u2019s add a scenario that is simple enough to illustrate that we can sort morethan 2 elements without having a clunky implementation. So let\u2019s use 3 elementsthis time:\n // Test file func  TestSort (t  *testing .T )  {  // ...\tt . Run ( &#34;should sort all the elements from the lowest to the largest&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 2 ,  3 ,  1 } ) ,  [ ] int { 1 ,  2 ,  3 } )\t } ) }\n  go test ./.2021/06/08 14:56:24 exit status 1 sorting_test.go:51: [3 2 1] != [1 2 3]--- FAIL: TestSort (0.00s) --- FAIL: TestSort/should_sort_all_the_elements_from_the_lowest_to_the_largest (0.00s)FAILFAIL alabeduarte.com 0.099sFAILFAIL (0.40 seconds)\n Now let\u2019s implement some sorting algorithm here. For now, let\u2019s use thethe algorithm called  Bubble Sort.\n As stated on Wikipedia, bubble sort is one of the simplest sorting algorithms tounderstand and implement, but its efficiency decreases dramatically on largerlists. More details  here.\n If you want to know more about the implementation of this algorithm in Go, Ialso suggest this material: https://tutorialedge.net/courses/go-algorithms-course/21-bubble-sort-in-go/\n // Implementation file func  Sort (elements  [ ] int )  [ ] int  {\tn  :=  len (elements )\t if n  &lt;=  1  {\t\t return elements\t }\tswapped  :=  true\t for swapped  {\t\tswapped  =  false\t\t for i  :=  0 ; i  &lt; n - 1 ; i ++  {\t\t\t if elements [i ]  &gt; elements [i + 1 ]  {\t\t\t\telements [i ] , elements [i + 1 ]  = elements [i + 1 ] , elements [i ]\t\t\t\tswapped  =  true\t\t\t }\t\t }\t }\t return elements }\n    Our algorithm (bubble sort) is not the most efficient out there. The complexityof the algorithm is  O(n\u00b2), where  n is the number of elements being sorted.This means that its efficiency decreases as the number of elements grow. Thereare other options we can use here such as  insertionsort or  selectionsort that are considered myefficient.\n Without necessarily changing anything, let\u2019s do a benchmark with our currentalgorithm using  Go testing benchmarks.\n First, let\u2019s create a small function (within our test file) to generate randomelements with a given length:\n // Test file func  generateRandomElements (n  int )  [ ] int  {\t // initialise a slice with length and capacity of &#34;n&#34;\telements  :=  make ( [ ] int , n , n )\t // populate the slice with random elements\t for i ,  _  :=  range elements  {\t\telements [i ]  = rand . Int ( )\t }\t return elements }\n Now let\u2019s create a function that will iterate over our method Sort taking the testing.B as a parameter:\n // Test file func  benchmarkBubbleSort (n  int , b  *testing .B )  { for i  :=  0 ; i  &lt; b .N ; i ++  { elements  :=  generateRandomElements (n )  // sort elements  Sort (elements ) }\n  // Test file func  BenchmarkBubbleSort3 (b  *testing .B )  {  benchmarkBubbleSort ( 3 , b )  } func  BenchmarkBubbleSort10 (b  *testing .B )  {  benchmarkBubbleSort ( 10 , b )  } func  BenchmarkBubbleSort20 (b  *testing .B )  {  benchmarkBubbleSort ( 20 , b )  } func  BenchmarkBubbleSort50 (b  *testing .B )  {  benchmarkBubbleSort ( 50 , b )  } func  BenchmarkBubbleSort100 (b  *testing .B )  {  benchmarkBubbleSort ( 100 , b )  } func  BenchmarkBubbleSort1000 (b  *testing .B )  {  benchmarkBubbleSort ( 1_000 , b )  } func  BenchmarkBubbleSort100000 (b  *testing .B )  {  benchmarkBubbleSort ( 100_000 , b )  }\n    go test -bench=.goos: darwingoarch: amd64pkg: alabeduarte.comcpu: Intel(R) Core(TM) i7-9750H CPU @ 2.60GHzBenchmarkBubbleSort3-12 17688249 67.22 ns/opBenchmarkBubbleSort10-12 4173184 303.4 ns/opBenchmarkBubbleSort20-12 1228124 1031 ns/opBenchmarkBubbleSort50-12 240789 4240 ns/opBenchmarkBubbleSort100-12 90360 13976 ns/opBenchmarkBubbleSort1000-12 1626 733388 ns/opBenchmarkBubbleSort100000-12 1 14456783580 ns/op\n As you can see, when having 100,000 elements in the array, my machine took 14456783580 nanoseconds to perform the sorting, which was equivalent to about14 seconds.\n Let\u2019s try the same using the  Go\u2019s standardlibrary implementation to sort our elements.Let\u2019s create a small function that will generate random elements and call themethod  Ints from the package sort:\n func  benchmarkGoSort (n  int , b  *testing .B )  {\t for i  :=  0 ; i  &lt; b .N ; i ++  {\t\telements  :=  generateRandomElements (n )\t\t // sort elements\t\tsort . Ints (elements )\t } }\n Now let\u2019s create similar benchmark functions that will compare our  Sortfunctin against  sort.Ints function:\n func  BenchmarkGoSort3 (b  *testing .B )  {  benchmarkGoSort ( 3 , b )  } func  BenchmarkGoSort10 (b  *testing .B )  {  benchmarkGoSort ( 10 , b )  } func  BenchmarkGoSort20 (b  *testing .B )  {  benchmarkGoSort ( 20 , b )  } func  BenchmarkGoSort50 (b  *testing .B )  {  benchmarkGoSort ( 50 , b )  } func  BenchmarkGoSort100 (b  *testing .B )  {  benchmarkGoSort ( 100 , b )  } func  BenchmarkGoSort1000 (b  *testing .B )  {  benchmarkGoSort ( 1_000 , b )  } func  BenchmarkGoSort100000 (b  *testing .B )  {  benchmarkGoSort ( 100_000 , b )  }\n  go test -bench=.goos: darwingoarch: amd64pkg: alabeduarte.comcpu: Intel(R) Core(TM) i7-9750H CPU @ 2.60GHzBenchmarkBubbleSort3-12 18284776 67.53 ns/opBenchmarkBubbleSort10-12 4207515 295.9 ns/opBenchmarkBubbleSort20-12 1201567 1006 ns/opBenchmarkBubbleSort50-12 276207 4262 ns/opBenchmarkBubbleSort100-12 89107 13813 ns/opBenchmarkBubbleSort1000-12 1620 755969 ns/opBenchmarkBubbleSort100000-12 1 14532398965 ns/opBenchmarkGoSort3-12 9781417 124.5 ns/opBenchmarkGoSort10-12 2595421 439.4 ns/opBenchmarkGoSort20-12 1000000 1108 ns/opBenchmarkGoSort50-12 357010 3252 ns/opBenchmarkGoSort100-12 160202 7618 ns/opBenchmarkGoSort1000-12 10000 100856 ns/opBenchmarkGoSort100000-12 75 16205598 ns/op\n As we can see, our algorithm using bubble sort seems a little better until 20elements, where go standard library start to shine being way faster than ours.\n Since the go standard library is more efficient, let\u2019s change our implementationto use that instead and re-run the tests:\n   go test -v=== RUN TestSort=== RUN TestSort/should_return_same_value_when_array_is_empty=== RUN TestSort/should_return_same_value_when_array_has_only_one_element=== RUN TestSort/should_return_the_lowest_element_followed_by_the_largest_element=== RUN TestSort/should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input=== RUN TestSort/should_sort_all_the_elements_from_the_lowest_to_the_largest--- PASS: TestSort (0.00s) --- PASS: TestSort/should_return_same_value_when_array_is_empty (0.00s) --- PASS: TestSort/should_return_same_value_when_array_has_only_one_element (0.00s) --- PASS: TestSort/should_return_the_lowest_element_followed_by_the_largest_element (0.00s) --- PASS: TestSort/should_return_an_array_with_the_same_length_as_the_one_provided_as_an_input (0.00s) --- PASS: TestSort/should_sort_all_the_elements_from_the_lowest_to_the_largest (0.00s)PASSok alabeduarte.com 0.920s\n If you are interested to see the entire code we\u2019ve built, please uncollapse thesection below:\n   package sorting_test import  (\t &#34;math/rand&#34;\t &#34;sort&#34;\t &#34;testing&#34;\t &#34;github.com/matryer/is&#34; ) // Implementation: // // Sort will receive a slice as an input and it will return another slice but // sorted. func  Sort (elements  [ ] int )  [ ] int  {\tn  :=  len (elements )\t if n  &lt;=  1  {\t\t return elements\t }\tswapped  :=  true\t for swapped  {\t\tswapped  =  false\t\t for i  :=  0 ; i  &lt; n - 1 ; i ++  {\t\t\t if elements [i ]  &gt; elements [i + 1 ]  {\t\t\t\telements [i ] , elements [i + 1 ]  = elements [i + 1 ] , elements [i ]\t\t\t\tswapped  =  true\t\t\t }\t\t }\t }\t return elements } // Unit tests: func  TestSort (t  *testing .T )  {\tt . Run ( &#34;should return same value when array is empty&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { } ) ,  [ ] int { } )\t } )\tt . Run ( &#34;should return same value when array has only one element&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 1 } ) ,  [ ] int { 1 } )\t } )\tt . Run ( &#34;should return the lowest element followed by the largest element&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 2 ,  1 } ) ,  [ ] int { 1 ,  2 } )\t } )\tt . Run ( &#34;should return an array with the same length as the one provided as an input&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tsortedElements  :=  Sort ( [ ] int { 2 ,  1 ,  4 ,  3 } )\t\tactualLength  :=  len (sortedElements )\t\tis . Equal (actualLength ,  4 )\t } )\tt . Run ( &#34;should sort all the elements from the lowest to the largest&#34; ,  func (t  *testing .T )  {\t\tis  := is . New (t )\t\tis . Equal ( Sort ( [ ] int { 2 ,  3 ,  1 } ) ,  [ ] int { 1 ,  2 ,  3 } )\t } ) } // Benchmarks: func  generateRandomElements (n  int )  [ ] int  {\t // initialise a slice with length and capacity of &#34;n&#34;\telements  :=  make ( [ ] int , n , n )\t // populate the slice with random elements\t for i ,  _  :=  range elements  {\t\telements [i ]  = rand . Int ( )\t }\t return elements } func  benchmarkBubbleSort (n  int , b  *testing .B )  {\t for i  :=  0 ; i  &lt; b .N ; i ++  {\t\telements  :=  generateRandomElements (n )\t\t // sort elements\t\t Sort (elements )\t } } func  benchmarkGoSort (n  int , b  *testing .B )  {\t for i  :=  0 ; i  &lt; b .N ; i ++  {\t\telements  :=  generateRandomElements (n )\t\t // sort elements\t\tsort . Ints (elements )\t } } func  BenchmarkBubbleSort3 (b  *testing .B )  {  benchmarkBubbleSort ( 3 , b )  } func  BenchmarkBubbleSort10 (b  *testing .B )  {  benchmarkBubbleSort ( 10 , b )  } func  BenchmarkBubbleSort20 (b  *testing .B )  {  benchmarkBubbleSort ( 20 , b )  } func  BenchmarkBubbleSort50 (b  *testing .B )  {  benchmarkBubbleSort ( 50 , b )  } func  BenchmarkBubbleSort100 (b  *testing .B )  {  benchmarkBubbleSort ( 100 , b )  } func  BenchmarkBubbleSort1000 (b  *testing .B )  {  benchmarkBubbleSort ( 1_000 , b )  } func  BenchmarkBubbleSort100000 (b  *testing .B )  {  benchmarkBubbleSort ( 100_000 , b )  } func  BenchmarkGoSort3 (b  *testing .B )  {  benchmarkGoSort ( 3 , b )  } func  BenchmarkGoSort10 (b  *testing .B )  {  benchmarkGoSort ( 10 , b )  } func  BenchmarkGoSort20 (b  *testing .B )  {  benchmarkGoSort ( 20 , b )  } func  BenchmarkGoSort50 (b  *testing .B )  {  benchmarkGoSort ( 50 , b )  } func  BenchmarkGoSort100 (b  *testing .B )  {  benchmarkGoSort ( 100 , b )  } func  BenchmarkGoSort1000 (b  *testing .B )  {  benchmarkGoSort ( 1_000 , b )  } func  BenchmarkGoSort100000 (b  *testing .B )  {  benchmarkGoSort ( 100_000 , b )  }\n  If you read the article and came this far, thank you very much. I hope I wasable illustrate how would be like to develop a sorting algorithm driven bytests.\n You might have noticed that I wasn\u2019t too concerned about picking up the mostperforming algorithm implementation, to begin with, but rather, I was interestedto\n......", "posttime": "2021-06-23 23:50:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b97\u6cd5,algorithms,\u6392\u5e8f,drive,\u6d4b\u8bd5", "title": "\u8ba9\u6211\u4eec\u6d4b\u8bd5\u4e00\u4e9b\u6392\u5e8f\u7b97\u6cd5 ", "title_en": "Let's test-drive some sorting algorithms", "transed": 1, "url": "https://alabeduarte.com/test-driven-algorithms/sorting/", "via": "", "real_tags": ["\u7b97\u6cd5", "\u6392\u5e8f", "drive", "\u6d4b\u8bd5"]}, {"category": "", "categoryclass": "", "imagename": "af7a637d99185879ec11c14772d6b17f.png", "infoid": 1067740, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "punycode\u3002\uff09\u4f46\u8bf7\u6ce8\u610f\uff0cHostname\u7ec4\u4ef6\uff08\u5f53AhostName\u800c\u4e0d\u662fIP\u5730\u5740\u65f6\uff09\u6ca1\u6709\u8981\u6c42\u662f\u5b8c\u5168\u9650\u5b9a\u7684\u57df\u540d\uff08FQDN\uff09;\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u90e8\u5206\u5408\u683c\u7684\u57df\u540d\uff0c\u56e0\u4e3a\u51b3\u8bae\u9075\u5faa\u901a\u5e38\u7684\u672c\u5730\u5b58\u6839resolver\uff06\uff0339;\u659c\u8bed\u548c\u53ef\u80fd\u6d89\u53ca/etc/nsswitch.conf\uff0c/ etc / hosts\u548c/etc/resolv.conf\u3002\n \u8fd9\u5b9e\u9645\u4e0a\u975e\u5e38\u6709\u7528\uff0c\u51e0\u79cd\u7fa4\u4f53\u4f7f\u7528\u8fd9\u662f\u4e00\u4e2a\u6574\u6d01\u7684\u5c0f\u6280\u5de7\uff0c\u4ee5\u63d0\u4f9bacompany-internall-shortener / bookmarkingredirector\uff0c\u5982golinks\uff0c\u6ca1\u6709\u4e3a\u6d4f\u89c8\u5668\u63d2\u4ef6\u6216\u7c7b\u4f3c\u4e8e\u8fd9\u6837\u7684\u4e1c\u897f\uff1a\n   \u73b0\u5728\uff0c\u8fd9\u91cc\u552f\u4e00\u6709\u70b9\u4ee4\u4eba\u56f0\u60d1\u7684\u90e8\u5206\u662f\u65e0\u8bba\u4f60\u8fd0\u884c\u81ea\u5df1\u7684CA\uff0c\u4f60\u53ef\u4ee5\uff06\uff0339; t\u83b7\u5f97\uff06\uff0334\u7684actericate; Go\uff06\uff0334 ;,,,,,,,,,,,,,,,,,,,,,,,,,,,,\u4f46\u662f\uff0c\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u90fd\u4f1a\u770b\u5230\uff06\uff0334; hostname\uff06\uff0334; URL\u9700\u8981\u7684\u7ec4\u4ef6\u662f\u5b8c\u5168\u5408\u683c\u7684\u3002\n  \uff06\uff0334;\u6743\u5a01\uff06\uff0334;\u7ec4\u5206\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5bb9\u7eb3\uff06\uff0334;\u7aef\u53e3\uff06\uff0334;\u5b50\u7ec4\u4ef6\u3002\u5f53\u670d\u52a1\u5668\u4f7f\u7528\u975e\u9ed8\u8ba4\u7aef\u53e3\u65f6\uff0c\u6211\u80af\u5b9a\u6709\u6548\u5730\uff06\uff0339; ve seenthat\u5728\u884c\u52a8\u4e2d\uff0c\u6240\u4ee5\uff06\uff0339;\u5b83\u771f\u7684\u5f88\u591a\u3002\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\u3002\u780d\u6389\u6e2f\u53e3\u53ea\u662f\u610f\u5473\u7740\u4f60\uff06\uff03 39; LL\u4f7f\u7528\u4e0e\u8be5\u65b9\u6848\u76f8\u5173\u8054\u7684Thedefault\u7aef\u53e3\u3002\n \u8fd9\u91cc\u7684\u4e00\u4e2a\u8fb9\u7f18\u6761\u4ef6\u662f\u60a8\u53ef\u4ee5\u5c06\u6ce2\u65af\u7279\u7a7a\u767d\u7559\u4e0b\uff0c\u4f46\u4ecd\u7136\u5305\u62ec\uff06\uff0334; \uff1a\uff06\uff0334 ;:\n  \u53e6\u4e00\u4e2a\u8fb9\u7f18\u6761\u4ef6\u662fRFC3986DOES\u672a\u5728\u7aef\u53e3\u53f7\u4e0a\u6307\u5b9a\u6700\u5927\u503c\uff08\u6bcf\u4e2aRFC1340 / RFC6335IS\u57280  -  65535\u7684\u8303\u56f4\u5185\uff09\u6216\u8005\u5982\u4f55\u5904\u7406\u96f6\u586b\u5145\uff0c\u56e0\u4e3a\u5f53\u7136\u53d6\u51b3\u4e8e\u5ba2\u6237\u7aef\u5904\u7406URL\u7684\u5ba2\u6237\u7aef\u3002\u8fd9\u4f7f\u5f97\u8fd9\u662f\u4e00\u4e2a\u53ef\u6015\u7684URL\uff1a\n   \u73b0\u5728\u4e3a\uff06\uff0334; Pathname\uff06\uff0334;\u8fd9\u4e2a\uff06\uff0339; s fun.it\u770b\u8d77\u6765\u50cf......\u597d\u5427\uff0c\u4e00\u4e2a\u8def\u5f84\u540d\u3002\u5c31\u50cf\u5728\u4f60\u7684\u7cfb\u7edf\u4e0a\u3002\u5c06\u670d\u52a1\u5668\u5220\u9664\uff0cPrerogativeTo\u4ee5\u5176\u559c\u6b22\u7684\u65b9\u5f0f\u89e3\u91ca\u5b83\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u7684\u6240\u6709\u8fb9\u7f18\u6761\u4ef6\u4e5f\u5728\u6b64\u5904\u4f7f\u7528\u3002 \nA\uff06\uff0334; Pathname\uff06\uff0334;\u6709\u4e00\u4e2a\u6765\u81ea\uff06\uff0334\u7684\u4e0d\u540c\u4e4c\u5362\u5176\u5b57\u7b26; hostname\uff06\uff0334;\u7ec4\u4ef6\uff0c\u56e0\u4e3a\u5b83\u4e0d\u53d7\u4e3b\u673a\u540dordns\u9650\u5236\u7684\u7ed1\u5b9a\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u5728URL\u4e2d\uff0c\u6211\u4eec\uff06\uff0339;\u73b0\u5728\u5207\u6362\u67d0\u4e9b\u5b57\u7b26\u7684\u542b\u4e49\uff0c\u4f8b\u5982\uff06\uff0334; \u3002\uff06\uff0334 ;.\u51e0\u4e4e\u662f\u4e00\u4e2a\uff06\uff0334\u4e2d\u552f\u4e00\u4e0d\u5141\u8bb8\u7684\u89d2\u8272; pathname\uff06\uff0334;\u7ec4\u4ef6\u662fnul\u548c/;\u5141\u8bb8\u6240\u6709\u5176\u4ed6\u7c7b\u522b\u660e\u786e\u5730\u5355\u7eaf\u5c5e\u4e8e\u767e\u5206\u6bd4\u7684\u6570\u636e\uff0c\u7136\u540e\u5728\u89e3\u6790\u672c\u5730\u8def\u5f84\u4e4b\u524d\uff0c\u670d\u52a1\u5668\u53ef\u4ee5\u5728\u8be5\u6570\u636e\u4e2d\u8fdb\u884c\u89e3\u7801\u3002\n \u8fd9\u5305\u62ec\u7a7a\u683c\uff0c\u4ee5\u53ca\u4ee5\u4e0b\u4e24\u4e2aURLSLEAD\u5230\u4f4d\u4e8e\u76ee\u5f55\u4e2d\u7684\u540c\u4e00\u6587\u4ef6; SNAMED\uff06\uff0334; \uff06\uff0334 ;:\n   $ pwd / htdocs / www.netmeister.org $ ls -la\uff06\uff0334;\u535a\u5ba2/ urls /\uff06\uff0334;\u603b\u8ba112drwxr-xr-x 2 jschauma\u6eda\u8f6e512 19\u670819\u65e514:58 .drwxr-xr-x 6 jschauma\u6eda\u8f6e1024 6\u670820\u65e516:26 ..- rw-r  -  r-- 1 jschauma\u8f6e\u5b5085 Jun 19 14:59 f $ curl -i\uff06\uff0334; https\uff1a//www.netmeister.org/blog/urls/ / f\uff06\uff0334; http / 2 200\u65e5\u671f\uff1a\u661f\u671f\u4e00\uff0c21\u65e52021 15:45:31 gmtserver\uff1aapache / 2.4\u3002 43\uff08UNIX\uff09openssl / 1.1.1klast-modified\uff1aSAT\uff0c19\u516d\u67082021 18:59:53 GMTContent-Length\uff1a85\u8fd9\u4e2a\u6587\u4ef6\u4f4d\u4e8e\u540d\u4e3a\uff06\uff0334\u7684\u76ee\u5f55\u4e2d; \uff06\uff0334; .see https://www.netmeister.org/blog/urls.html$$\n \u662f\u7684\uff0c\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u7ed9\u51fa\u8def\u5f84\u540d\u7ec4\u4ef6\u4efb\u4f55\u6709\u6548\u540d\u79f0\uff0c\u4f8b\u5982\uff06\uff0334;\ud83d\udca9\uff06\uff0334 ;:\n  \u8def\u5f84\u540d\u53ef\u80fd\u662f\u7a7a\u7684\uff0c\u6216\u8005\u5b8c\u5168\u7531emptemy\u5b50\u7ec4\u4ef6\u7ec4\u6210\uff0c\u4f7f\u6240\u6709\u8fd9\u4e9b\u90fd\u8f6c\u5230\u540c\u4e00\u4e2a\u5730\u65b9\uff1a\n  \u4f46\u662f\uff06\uff0334; Pathname\uff06\uff0334; URL\u53d1\u9001HTTP\u8bf7\u6c42\u7684\u7ec4\u4ef6\u4e00\u65e6\u60a8\u5df2\u5c06AC\u8fde\u63a5\u5230\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u80fd\u662f\u5b8c\u6574\u7684URLittitelf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\uff06\uff0334; Pathname\uff06\uff0334;\u6210\u5206\u3002 RFC7230IN\u4e8b\u5b9e\u5728\u4e0e\u4ee3\u7406\u4ea4\u8c08\u65f6\u6388\u6743\u6b64\u9879\uff1a\n $ openssl s_client -connect www.netmeister.org:443 -quiet -crlf 2\uff06gt; / dev / null head https://www.netmeister.org/blog/urls.html http / 1.0http / 1.1 200 Okdate\uff1aMon\uff0c21 2021\u5e746\u67082021\u5e746\u670818\u65e5GMTserver\uff1aApache / 2.4.43\uff08UNIX\uff09openssl / 1.1.1klast-Modified\uff1aMon\uff0c21 Jun 2021 18:24:38 GMTContent-Length\uff1a29963Content\u578b\uff1aText / HTML; charset = UTF-8 \n\u5982\u679c\u4f60\uff06\uff0339;\u91cd\u65b0\u4e0e\u4ee3\u7406\u5546\u4ea4\u8c08\uff0c\u4f60\u53ef\u4ee5\u521a\u521a\u51fa\u73b0\u4efb\u4f55\u65b9\u6848\uff1a//\u8fdb\u5165\uff06\uff0334\u7684\u6743\u9650; Request-Uri\uff06\uff0334;\uff0c\u8fd9\u662f\u73b0\u5728\u73b0\u5728\u5df2\u6210\u4e3a\u6b64\u4e0a\u4e0b\u6587\u7684\u60c5\u51b5\uff0cAndat\u6700\u5c11Apache\u5ffd\u7565\u4e86\u8def\u5f84\u540d\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff1a\n $ openssl s_client -connect www.netmeister.org:443 -quiet -crlf 2\uff06gt; / dev / null get gopher\uff1a//facebook.com/blog/urls.html http / 1.0http / 1.1 200 okdate\uff1amon\uff0c21 2021 18:43:28 GMTserver\uff1aApache / 2.4.43\uff08UNIX\uff09openssl / 1.1.1kContent\u578b\uff1aText / HTML; Charset = UTF-8Content\u8bed\u8a00\uff1aen [...]\n  \u70b9\u5f88\u6709\u8da3\u3002\u5982\u679c\u60a8\u7684Web\u670d\u52a1\u5668\u5728\u7c7b\u4f3cAUNIX\u7684\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u5219\u4e3a\u8def\u5f84\u540d\uff0c\u5355\u4e2aDOTMeans\uff06\uff0334;\u6b64\u76ee\u5f55\uff06\uff0334;\u548c\u4e24\u4e2a\u70b9\u610f\u5473\u7740\uff06\uff0334;\u6211\u7684parentdirectory\uff06\uff0334;\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4f60\u770b\u5230\u8bf7\u6c42\u7684\u539f\u56e0\u4f8b\u5982\uff0c\uff06\uff0334; /../../../../../../../../../../../../../1.. / ...... inyour web\u670d\u52a1\u5668\u548c\uff0339; s\u65e5\u5fd7\uff0c\u8bd5\u56fe\u7a81\u7834\u60a8\u7684\u6211\u4eec\u7684\u670d\u52a1\u5668\u6587\u6863\u6839\u76ee\u5f55\u3002\n   \u73b0\u5728\uff0c\u4e00\u4e2a\u4f53\u9762\u7684Web\u670d\u52a1\u5668\u4e0d\u5141\u8bb8\u8bf7\u6c42\u5728\u5176\u6587\u6863\u6839\u76ee\u5f55\u5916\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u8fd9\u91cc\uff06\uff0339;\u8fd9\u91cc\u66f4\u6709\u610f\u601d\u7684\u662f\uff0c\u6b64\u5206\u8fa8\u7387\u53d1\u751f\u5728\u6bcf\u4e2aRFC3986\u7684LocalFileSystem\u8def\u5f84\u5206\u8fa8\u7387\u4e4b\u524d\uff08\u55ef\uff0c\u5e94\u8be5\u53d1\u751f\uff09\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5047\u88c5 - \uff06\uff0334; ../&#34;\u5468\u672b\u5b58\u5728\u7684\u76ee\u5f55\uff1a\n $ pwd / htdocs / www.netmeister.org $ ls -ld tdne ls\uff1ad\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216directoryls\uff1ae\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216directoryls\uff1an\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216directoryls\uff1at\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55$ ls -ld t / h / e / s / e / d d / I / R / E / C / T / O / R / I / E / S /\u3002 \u3002/../../../../../../../../../../\u4e0d\u8981/.. /../../e/x/i/s/t/../../../../../.. / blog / urls.htmlls\uff1at / h / e / s / e / / ...../../../../d/i / r/e/c/t/o/r/i/e/s/d/../../../ ... ../../../../../../d/../../n/o/t/../../../t/../../'o/x/i/s. /t/../../../../../../.. /bog/urls.html\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55$ curl -i https://www.netmeister.org/t/h/e/s /e/../../../../../../../../1../i/r/e/c/t/or/r/i/e/s/../../ ... ./../../../../../../d/o/../../n/t/t/../../../t/ X / I / S / T / d / ...\u535a\u5ba2/ urls.htmlhttp / 2 200\u65e5\u671f\uff1aMon\uff0c21 Jun 2021 16:07:35 GmTserver\uff1aApache / 2.4.43 \uff08UNIX\uff09openssl / 1.1.1klast-modified\uff1amon\uff0c21\u65e52021\u5e746\u670821\u65e516:03:41 GMTContent-Length\uff1a24107Content\u578b\uff1aText / HTML; Charset = UTF-8 Content\u8bed\u8a00\uff1aEN $\n \u4f46\u5f53\u7136\u4f60\u53ef\u4ee5\u62e5\u6709\u6587\u4ef6\u6216\u76ee\u5f55\u540d\u548c\uff0334; ...\uff06\uff0334;\u6216\uff06\uff0334; ....\uff06\uff0334;\u7b49\u7b49\uff0c\u6240\u4ee5\u5173\u6ce8\u4f1a\u7ed9\u4f60\u4e00\u4e2a\u5b9e\u9645\u6587\u4ef6\uff1a\n     \u55ef\uff0c\u4f46\u8fd9\u4e2a\u83ab\u5c14\u65af\u4ee3\u7801Pathname\u7ec4\u4ef6\u5f88\u957f\u3002\u6211\u4eec\u53ef\u4ee5\u5236\u4f5c\u591a\u4e45\uff1f IFIT\uff06\uff0339; s\u8def\u5f84\u540d\u79f0\uff0c\u90a3\u4e48\u5b83\u5e94\u8be5\u53d7\u5230\u7279\u5de5\u7cfb\u7edf\u7684\u9650\u5236\uff0c\u5e76\u719f\u6089\uff0c\u6211\u53ef\u4ee5\uff06\uff0339; tCreate\u4e00\u4e2a\u540d\u5f55\uff06\uff0339; s\u957f\u4e8effs_maxnamlen = 255\u4e2a\u5b57\u7b26\u3002\u4f46\u6211\u53ef\u4ee5\u521b\u5efa\u5d4c\u5957\u7684\u5b50\u6a21\u578b\uff0c\u6700\u7ec8\u6784\u5efa\u51fb\u4e2d\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b8c\u6574\u8def\u5f84\uff06\uff0339; s path_max = 1024\uff1a \n$ PWD / htdocs\u4e2d/ www.netmeister.org $ CD\u535a\u5ba2/ URL $ LS -ld ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddrwx-XR-X 19\u5e746\u67083\u65e517:40 ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd jschau\u5230\u8f66\u8f6e512 / $ CD CD DD DD * $ * $ * $ CD CD DD DD * KSH\uff1aCD\uff1adddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\uff1a\u574f\u76ee\u5f55$ PWD / htdocs\u4e2d/ www.netmeister.org /\u535a\u5ba2/ URL / ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd / ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd / $ ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd\n     \uff06\uff0334; \u301c\uff0334;\u662f\u7279\u6b8a\u7684\uff0c\u9664\u4e86\u5b83\uff06\uff0339; s note\u3002 INTHIS\uff0cIT\uff06\uff0339;\u5f88\u591a\u50cf\u4f60\u8c22\u5c14\u7684TINDE\u6269\u5f20\u4e00\u6837 - \u5b83\u53ea\u662f\u5982\u679c\u5b83\uff06\uff0339;\uff06\uff0334\u4e4b\u540e\u7684\u7b2c\u4e00\u7279\u5f81\u624d\u4f1a\u53d1\u751f; /\uff06\uff0334;\u8fd9\u662f\uff06\uff0334; Pathname\uff06\uff0334;\u3002\u5982\u679c\u8fd9\u4e2a\u7b2c\u4e00\u4e2a\u6bb5\u5f00\u59cb\uff06\uff0334; /\u301c\u7528\u6237\u540d/\uff0c\u7136\u540e\u662f\u8bb8\u591aWeb ServersDefault\uff08\u6216\u53ef\u4ee5\u914d\u7f6e\uff09\u4ee5\u89e3\u51b3\u548c\uff0334\u7684Theremaine; Pathname\uff06\uff0334;\u4ece\u672c\u53d1\u660e\uff06\uff0339; s\uff06\uff0334; web\u7a7a\u95f4\uff06\uff0334;\u5e38\u5e38\u301c\u7528\u6237\u540d/ public_html\u3002\n   \u4f46\u5b83\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5bf9Auser\u7684\u6269\u5f20\uff06\uff0339;\u53ea\u6709\u5e38\u89c4\u7684\u4e2a\u4eba\u7f51\u7a7a\u95f4\u662f\u516c\u7ea6\uff1arfcsdon\uff06\uff0339; tipps\u8ba8\u8bba\u4e86\u8fd9\u4e00\u70b9\uff0c\u5c3d\u7ba1\u652f\u6301A\uff06\uff0334; Userdir\uff06\uff0334;\u4f3c\u4e4e\u662f\u5934\u706f\u56de\u6765\u4f5c\u4e3acernhttpd\u548cncsa_httpd.\u4f46\u662f\uff0c\u5173\u4e8e\uff06\uff0334\u7684\u901f\u5ea6\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u7684\u7279\u522b\u4e4b\u5904; \u301c\uff0334;\u5b57\u7b26\u6839\u672c\u3002\u5f53\u7136\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a\uff06\uff0334\u7684\u76ee\u5f55\u6216\u6587\u4ef6; \u301c\uff06\uff0334;\uff1a\n  \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4e00\u5207\u90fd\u5f88\u597d\u3002\u4f46\u662f\u5982\u679c\u6350\u8d60\u8005\u6709\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334\u7684\u7528\u6237\u4f1a\u53d1\u751f\u4ec0\u4e48;\u7528\u6237\u540d\uff06\uff0334;\u6216\u8005\u4f60\u8fd9\u6837\u505a\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u6587\u4ef6\u540d\u548c\uff0334; \u301c\u7528\u6237\u540d\uff06\uff0334;\u5728\u4f60\u7684\u6211\u4eec\u7684\u6839\u76ee\u5f55\u4e2d\uff06\uff0339;\u8ba9\uff06\uff0339; s\u8bd5\u4e00\u8bd5\uff1a\n $ pwd / htdocs / www.netmeister.org $ id nobody uid = 32767\uff08nobody\uff09go = 39\uff08nobody\uff09\u7ec4= 39\uff08nobody\uff09$ ls -ld\u301cnobody / public_html \\\u301cnobodyls\uff1a/ nonexistent // public_html\uff1a\u5426\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55-RW-R  -  R-- 1 Jschauma\u6eda\u8f6e4\u670820\u65e515:22\u301cNobody $ Cat \\\u301cnobodythis\u662f\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334;\u301cnobody\uff06\uff0334;\u7b26\u5408\uff06\uff0334;\u301cnotauser\uff06\uff0334;\u6307\u5411\u5b83.see https://www.netmeister.org/blog/urls.html$$\u5377\u66f2-i https\uff1a//www.netmeister.org/~nobodyhttp/2 404\u65e5\u671f\uff1a\u661f\u671f\u4e00\uff0c21\u65e52021 20:12\uff1a 21 GmTserver\uff1aApache / 2.4.43\uff08UNIX\uff09openssl / 1.1.1kcontent yext\uff1atext / html; Charset = ISO-8859-1 $ ID NotaUserID\uff1aNOTAUSER\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u7528\u6237$ ls -ld\u301cnotaUser / public_html \\\u301cnotauser ls\uff1a\u301cnotauser / public_html\uff1a\u6ce8\u610f\u4e00\u4e2adirectorylwx ------ 1 jschauma\u6eda\u8f6e7\u670820\u65e5\uff1a23\u301cNOTAUSER  - \uff06gt; \u301c\u6ca1\u6709\u4eba$ cat \\\u301cnotauserthis\u662f\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334;\u301c\u6ca1\u6709\u4eba\u548c\uff0334;\u7b26\u5408\uff06\uff0334;\u301cnotauser\uff06\uff0334;\u6307\u5411\u5b83.see https://www.netmeister.org/blog/urls.html$$\u5377\u66f2-i https\uff1a//www.netmeister.org/2notauserhttp/2 200\u65e5\u671f\uff1a\u5468\u4e00\uff0c21\u65e52021 20:17\uff1a 09 GmTserver\uff1aApache / 2.4.43\uff08UNIX\uff09openssl / 1.1.1kcontent-length\uff1a124content-language\uff1aen $\n \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u60a8\u7684Web\u670d\u52a1\u5668\u652f\u6301\uff08\u548c\u54c8\u5e0c\u4e3a\uff09\u7528\u6237\u76ee\u5f55\uff0c\u5e76\u4e14\u60a8\u63d0\u4ea4\u8bf7\u6c42\uff06\uff0334; \u301c\u7528\u6237\u540d\uff06\uff0334;\uff1a\n \u5982\u679c\uff06\uff0334;\u7528\u6237\u540d\uff06\uff0334;\u662f\u4e00\u4e2a\u6709\u6548\u7684\u7528\u6237\uff0c\uff06\uff0334\u7684serverlooks; \u301c\u7528\u6237\u540d/ public_html\uff06\uff0334; open open\u8be5\u76ee\u5f55\u4e0d\u5b58\u5728\uff0c\u4f46\u6587\u4ef6\u301c\u7528\u6237\u540d\u786e\u5b9e\u5b58\u5728 \n\u5982\u679c\uff06\uff0334;\u7528\u6237\u540d\uff06\uff0334;\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u4eba\uff0c\u7136\u540e\u53d1\u751f\u6b63\u5e38\u7684\u8def\u5f84\u540d\u51b3\u8bae\uff0c\u610f\u5473\u7740\u6587\u4ef6\uff06\uff0334; \u301c\u7528\u6237\u540d\uff06\uff0334;\u5b58\u5728\u4e8eWEB\u670d\u52a1\u5668\u548c\uff0339; S\u6587\u6863\u6839\u76ee\u5f55\u4e2d\uff0c\u5b83\u662f\u670d\u52a1\u7684\n   A\uff06\uff0334;\u67e5\u8be2\uff06\uff0334; URL\u4e2d\u7684\u7ec4\u4ef6\u9075\u5faaA\uff06\uff0334; \uff1f\uff06\uff0334;\u5b57\u7b26\u548c......\u57fa\u672c\u4e0a\u6ca1\u6709\u5b8c\u5168\u878d\u5408\u3002\u4f60\u53ef\u4ee5\u628a\u4efb\u4f55\u4e1c\u897f\u653e\u5165\u67e5\u8be2\u4e2d\uff0c\u5305\u62ec\u5426\u5219\u65e0\u6cd5\u5b9e\u73b0\u7684\u4eba\u7269\uff0c\u5982\uff06\uff0334; /\uff06\uff0334;\u548c\uff0334; \uff1f\uff06\uff0334 ;:\n  \u73b0\u5728\u6309\u7167\u60ef\u4f8b\uff0c\u67e5\u8be2\u5f80\u5f80\u4f7f\u7528A\uff06\uff0334; key1 = value1\uff06amp; key2 = value2\uff06\uff0334;\u8bed\u6cd5\uff0c\u867d\u7136\u5f53\u7136\u6ca1\u6709\u4ec0\u4e48\u9700\u8981\u4f60\u8fd9\u6837\u505a\uff0c\u4f46\u662foreven\u8981\u4f7f\u7528\uff06\uff0334; \uff06amp;\uff06\uff0334;\u4f5c\u4e3a\u5206\u9694\u7b26; SomeSystems\u4e5f\uff08\u7528\u4e8e\uff09\u4f7f\u7528\uff06\uff0334; ;\uff06\uff0334;\n \u4f46\u662f\uff0c\u5b83\u771f\u7684\u90fd\u6709\u67e5\u8be2\u3002\u5b83\uff06\uff0339; HTTP\u8bf7\u6c42\u7684SPART\u548c\u670d\u52a1\u5668\u53ef\u4ee5\u5c06ITINTO\u653e\u7f6e\u4e3a\uff06\uff0334; query_string\uff06\uff0334;\n  URL\u7684\u6700\u540e\u4e00\u4e2a\u7ec4\u6210\u90e8\u5206\u662f\uff06\uff0334;\u788e\u7247identifier\uff06\uff0334;\u8fd9\u4e2a\uff06\uff0339;\u5f88\u5947\u602a\uff0c\u867d\u7136\uff06\uff0339;\u663e\u7136\u662f\u4e00\u4e2aURL\uff0c\u5b83\u65e8\u5728\u5b8c\u5168\u5411\u5ba2\u6237\u7aefBescoped\uff0c\u800c\u4e0d\u662f\u670d\u52a1\u5668\u3002\u5b9e\u9645\u4e0a\uff0c\u5e38\u89c1\u7684HTTP\u5ba2\u6237\u7aef\u786e\u8ba4\u5c06\u7247\u6bb5\u5f52\u529f\u4e8e\u670d\u52a1\u5668\uff0c\u8be5\u4e8b\u5b9e\u662f\u7531eg\uff0chttps://privatebin.info/\uff0cdecryption\u952e\u653e\u5165URL\u7684Fragment Component\u4e2d\u7684\u7cfb\u7edf\uff0c\u7136\u540e\u786e\u4fdd\u670d\u52a1\u5668\u4e0d\u77e5\u9053\u952e\u3002\n \u60a8\u7684\u5e38\u89c1Web\u6d4f\u89c8\u5668\u751a\u81f3\u4f8b\u5982\uff0cCurl\uff081\uff09\u5c06\u5728\u63d0\u524d\u8c03\u6574HTTP\u8bf7\u6c42\u4e4b\u524d\u7ed1\u4f4f\u7247\u6bb5\uff0c\u4f46\u5f53\u7136\u60a8\u4ece\u53d1\u9001Get RequestWith\u5305\u542b\u4e00\u4e2a\u7247\u6bb5\u7684\u8bf7\u6c42\u65f6\uff0c\u60a8\u5f53\u7136\u53ef\u4ee5\u521b\u5efa\u5305\u542bA\u7684\u6587\u4ef6\u540d\uff0c\u5e76\u4e14\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5305\u542bA\u7684\u6587\u4ef6\u540d\u3002 \uff0334; \uff03\uff06\uff0334;\n \u73b0\u5728Apache httpd\u5904\u7406A\uff06\uff0334; \uff03\uff06\uff0334;\u5728\u90a3\u91cc\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u4f5c\u4e3a400\u4e2a\u4e0d\u826f\u8bf7\u6c42\uff0c\u4f46RFC2616DOES\u4e0d\u6388\u6743\u8fd9\u4e00\u70b9\u3002\u4f8b\u5982\uff0cBozohttpd\u4e0d\u6cbb\u7597\uff06\uff0334; \uff03\uff06\uff0334;\u5728\u90a3\u91cc\uff0curiest-uri\uff0c\u6240\u4ee5\u60a8\u53ef\u4ee5\u4f8b\u5982makethis\u8bf7\u6c42\uff1a \n$ echo -ne\uff06\uff0334; get /blog/urls/urls.html#fragment http / 1.0 \\ r \\ n \\ r \\ n\uff06\uff0334; | \\ nc www.netmeister.org 8080http / 1.0 200 okdate\uff1atue\uff0c22 jun 2021 00:12:22 GmTserver\uff1aBozohttpd / 20170201Accept-ranges\uff1aByteslast-Modified\uff1aByteslast-Modified\uff1aByteslast-Modified\uff1aSat\uff0c19 Jun 2021 12:58:28 GMTContent\u578b\uff1a\u6587\u672c/ plaincontent-length\uff1a113\u521a\u521a\u6070\u597d\u5305\u542b\u4e00\u4e2a\uff06\uff0339\u7684\u666e\u901a\u6587\u4ef6;\uff03\uff06\uff0339;\u5728\u5b83\u7684\u59d3\u540d.see https://www.netmeister.org/blog/urls.html\n  \u73b0\u5728\u4e0e\u6240\u6709\u8fd9\u4e00\u957f\u7684\u8ba8\u8bba\uff0c\u8ba9\uff06\uff0339; s\u4ece\u4e0a\u9762\u56de\u5230\u90a3\u4e2a\u611a\u8822\u7684\u7f51\u5740\uff1a\n  \u73b0\u5728\u8fd9\u770b\u8d77\u6765\u50cf\u662f\u6c34\u8c5a\u9f20\u7b49\u540c\u4e8eURL\u3002 Let\uff06\uff0339; s Untangle\u8c6a\u4e86\u626c\u58f0\u5668\u6210\u4e3a\u4e00\u4e2a\u6709\u6548\u7684\u94fe\u63a5\u3002\n \u7b2c\u4e00\u4e2a\uff06\uff0334; https\uff1a//\uff0334;\u6ca1\u6709\u8fdd\u7ea6\uff0c\u53ea\u662f\u4f60\u5e73\u5e38\u7684\u8ba1\u5212\u548c\u5949\u627f\n   \u73b0\u5728\u6211\u4eec\u5f00\u59cb\u53d1\u6325\u611a\u8822\u7684\u6280\u5de7\uff1a\uff06\uff0334; / www wetmeister.org\uff06\uff0334;\u4f7f\u7528\u5c0f\u90e8\u5206\u518c\u5b57\u7b26\u4f5c\u4e3a\u5bc6\u7801\u7684\u4e00\u90e8\u5206\u3002\u7f16\u7801\uff0c\u8fd9\u770b\u8d77\u6765\u5982\u6b64\uff1a\uff05E2\uff0581\uff0584\uff05E2\uff0581\uff0584www\uff052enetmeister\uff052eorg\n  \u4e0b\u4e00\u4e2a\uff06\uff0334; https\uff06\uff0334;\u73b0\u5728\u662f\u6743\u9650\u7684\u4e3b\u673a\u540d\u7ec4\u4ef6\uff1a\u4f9d\u8d56\u4e8e/ etc / hosts\u7684\u90e8\u5206\u9650\u5b9a\u4e3b\u673a\u540d\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u6307\u5411https\u5230\u6b63\u786e\u7684IP\u5730\u5740\u7684\u6761\u76ee\u3002\n \u4e0b\u4e00\u4e2a\uff06\uff0334; \uff1a\uff06\uff0334;\u73b0\u5728\u662f\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u7ec4\u4ef6\u7684\u5206\u9694\u7b26\u3002\u5728\u8fd9\u91cc\uff0c\u5b83\u540e\u8ddf\u4e00\u4e2a\u7a7a\u7aef\u53e3\uff0c\u4f7fWedefault\u5230\u7279\u5b9a\u4e8e\u65b9\u6848\u7684\u7aef\u53e3\uff0c443\u5728\u8be5\u914d\u7f6e\u3002 \n\u4e0b\u4e00\u4e2a\uff06\uff0334; //\uff0334;\u7136\u540e\u4ec5\u4ec5\u662f\u6743\u5a01\u7684\u7ed3\u675f\uff0c\u540e\u8ddf\u4e00\u4e2a\u7a7a\u7684\u8def\u5f84\u7ec4\u6210\u3002\n \u4e0b\u4e00\u4e2a\uff06\uff0334; www.netmeister.org\uff06\uff0334;\u73b0\u5728\u901a\u8fc7\u8be5\u540d\u79f0\u63d0\u4f9b\u76ee\u5f55\uff0c\u5176\u6b21\u662f\u6807\u51c6\u7684\u5206\u9694\u7b26\uff0c\uff06\uff0334; /\n \u5728\u6b64\u4e4b\u540e\uff0c\u6211\u4eec\u627e\u5230\u6587\u4ef6\u540d\u548c\uff0334; https\uff1a//www.netmeister.org//\uff06\uff0334;\u518d\u6b21\u4f7f\u7528\u5206\u6570\u659c\u6760\u5b57\u7b26\u3002\n  \u67e5\u8be2\u5141\u8bb8\u4efb\u4f55\u5b57\u7b26\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u540d\u4e3a\uff06\uff0334; https\uff1a//www.netmeister.org&#34;\u4e0e\u4e00\u4e2a\uff06\uff0334; =\uff06\uff0334;\u5206\u914d\u503c\uff06\uff0334; https\uff1a//www.netmeister.org&#34;\n  \u6700\u540e\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u788e\u7247\uff0c\u53ef\u80fd\u4f1a\u5305\u542b\u4efb\u4f55\u89d2\u8272\uff0c\u6240\u4ee5\u6211\u4eec\u586b\u5145\u4e86\u53e6\u4e00\u4e2a\u89d2\u8272\u548c\uff0334; https\uff1a//www.netmeister.org&#34;\u5728\u90a3\u91cc\u3002\n    \u597d\u7684\uff0c\u6240\u4ee5\u4ec0\u4e48\uff06\uff0339;\u8fd9\u662f\u4ec0\u4e48\u5927\u95ee\u9898\uff1f\u4e3a\u4ec0\u4e48\u6211\u5728\u4e0a\u9762\u7684\u60c5\u51b5\u4e0b\u6253\u6270\u4e86\u4e0a\u9762\u7684\u60c5\u51b5\uff0c\u5f53\u6211\u751a\u81f3\u662f\u5c41\u80a1\uff1f\n \u6211\u79f0\u4e4b\u4e3a\uff06\uff0334;\u8111\u888b\u6a21\u7cca\uff06\uff0334;\u6216\uff06\uff0334; logicalfuzzing\uff06\uff0334 ;:\u6211\u8bd5\u56fe\u4e86\u89e3\u6bcf\u4e00\u5929\u4f7f\u7528\u7684\u4e1c\u897f\uff0c\u5b83\u662f\u4ec0\u4e48\uff06\uff0339; scapting todo\uff0c\u5b83\u5982\u4f55\u5b9a\u4e49\uff0c\u7136\u540e\u6709\u65f6\u6211\u53bb\uff06\uff0334;\u5475\u5475\uff0c\u6211\u4f1a\u53d1\u751f\u4ec0\u4e48\u6211\u628ax\u653e\u5728\u65c1\u8fb9\u3002\uff06\uff0334; \n\u6211\u4e5f\u53d1\u73b0\u5b83\u6709\u8da3\u7684\u662f\u7f51\u5740\u5982\u4f55\u8d85\u8d8a\u6b63\u5e38\u6d4f\u89c8\u5668\u4e0a\u4e0b\u6587\uff0c\u4ee5\u53ca\u6211\u4eec\u5982\u4f55\u4f9d\u8d56\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\uff0c\u5373\u4f7f\u8fd9\u4e0d\u6e05\u695a\u3002 ", "note_en": "Punycode.)        But note that there is no requirement for the hostname component (when it  is ahostname and not an IP address) to be a fully-qualified domain name ( FQDN);a partially qualified domain name is also possible,as resolution follows the usual local stub resolver&#39;slogic and likely  involving /etc/nsswitch.conf,  /etc/hosts,and  /etc/resolv.conf.\n This is actually quite useful, and severalcompanies use this as a neat little trick to provide acompany-internal link-shortener / bookmarkingredirector like  golinks without theneed for a browser plugin or anything like that:\n   Now the only slightly confusing part here is thatunless you run your own CA, you can&#39;t get acertificate for &#34; go&#34;, so the short links mustbe accessed using plain http. But either way, you seethat the &#34; hostname&#34; component in a URL neednot be fully qualified.\n  The &#34; authority&#34; component may further containa &#34; port&#34; subcomponent. I&#39;m sure you&#39;ve seenthat in action when a server uses a non-default port,so there isn&#39;t really much that&#39;s surprising here.Leaving out the port simply means that you&#39;ll use thedefault port associated with the scheme.\n One edge condition here is that you can leave theport blank, but still include the &#34; :&#34;:\n  The other edge condition is that  RFC3986does not specify a maximum value on the port number(which per  RFC1340/  RFC6335is in the range of  0 - 65535) or how e.g.,zero-padding is handled, as that of course depends onthe client processing the URL. Which makes this avalid URL:\n   Now for the &#34; pathname&#34;. This one&#39;s fun.It looks like... well, a pathname. Just like on yourfile system. Putting aside the server&#39;s prerogativeto interpret it any way it likes, this means that allthe various edge conditions for file system path namesapply here, too.\n A &#34; pathname&#34; has a different set ofallowed characters from the &#34; hostname&#34;component, since it is not bound by the hostname orDNS limitations. That also means that within a URL,we&#39;re now switching the meaning of certain characters,such as &#34; .&#34;. Pretty much the only character not allowed in a &#34; pathname&#34;component are  NUL and  /; all othercharacters are allowed either explicitly orimplicitly as  percentencoded data, which the server may then decodeagain before resolving the local path.\n This includes spaces, and the following two URLslead to the same file located in a directory that&#39;snamed &#34; &#34;:\n   $ pwd/htdocs/www.netmeister.org$ ls -la &#34;blog/urls/ &#34; total 12drwxr-xr-x 2 jschauma wheel 512 Jun 19 14:58 .drwxr-xr-x 6 jschauma wheel 1024 Jun 20 16:26 ..-rw-r--r-- 1 jschauma wheel 85 Jun 19 14:59 f$ curl -i &#34;https://www.netmeister.org/blog/urls/ /f&#34;HTTP/2 200 date: Mon, 21 Jun 2021 15:45:31 GMTserver: Apache/2.4.43 (Unix) OpenSSL/1.1.1klast-modified: Sat, 19 Jun 2021 18:59:53 GMTcontent-length: 85This file is in a directory named &#34; &#34;.See https://www.netmeister.org/blog/urls.html$\n And yes, of course you can give the path name component any valid name, such as &#34;\ud83d\udca9&#34;:\n  The pathname may be empty, or consist entirely ofempty subcomponents, making all of these go to the same place:\n  But the &#34; pathname&#34; component of a URL sentin the HTTP request once you&#39;ve already made aconnection to the server may also be the full URLitself, not just the &#34; pathname&#34; component. RFC7230in fact mandates this when talking to a proxy:\n $ openssl s_client -connect www.netmeister.org:443 -quiet -crlf 2&gt;/dev/null HEAD https://www.netmeister.org/blog/urls.html HTTP/1.0HTTP/1.1 200 OKDate: Mon, 21 Jun 2021 18:36:39 GMTServer: Apache/2.4.43 (Unix) OpenSSL/1.1.1kLast-Modified: Mon, 21 Jun 2021 18:24:38 GMTContent-Length: 29963Content-Type: text/html; charset=utf-8\n And if you&#39;re not talking to a proxy, you can justput  any  scheme://authority into the&#34; Request-URI&#34;,which is what this now has become in this context, andat least Apache ignores everything up to the pathnamecomponent:\n $ openssl s_client -connect www.netmeister.org:443 -quiet -crlf 2&gt;/dev/null GET gopher://facebook.com/blog/urls.html HTTP/1.0HTTP/1.1 200 OKDate: Mon, 21 Jun 2021 18:43:28 GMTServer: Apache/2.4.43 (Unix) OpenSSL/1.1.1kContent-Type: text/html; charset=utf-8Content-Language: en[...]\n  Dots are funny. If your web server runs on aUnix-like system, then for a pathname, a single dotmeans &#34;this directory&#34;, and two dots means &#34;my parentdirectory&#34;, which is why you see requests for e.g.,&#34; /../../../../../../../../../etc/passwd&#34; inyour web server&#39;s logs, trying to break out of yourweb servers document root.\n   Now a decent web server does not allow a request tobe made outside of its document root, but what&#39;sperhaps more interesting here is that this resolutionof  dot-segments happens (well, should happen)  prior to localfilesystem path resolution per  RFC3986,which means that you can pretend-&#34; ../&#34; aroundnon-existent directories:\n $ pwd/htdocs/www.netmeister.org$ ls -ld t d n e ls: d: No such file or directoryls: e: No such file or directoryls: n: No such file or directoryls: t: No such file or directory$ ls -ld t/h/e/s/e/../../../../../d/i/r/e/c/t/o/r/i/e/s/../../../../../../../../../../../d/o/../../n/o/t/../../../e/x/i/s/t/../../../../../blog/urls.htmlls: t/h/e/s/e/../../../../../d/i/r/e/c/t/o/r/i/e/s/../../../../../../../../../../../d/o/../../n/o/t/../../../e/x/i/s/t/../../../../../blog/urls.html: No such file or directory$ curl -I https://www.netmeister.org/t/h/e/s/e/../../../../../d/i/r/e/c/t/o/r/i/e/s/../../../../../../../../../../../d/o/../../n/o/t/../../../e/x/i/s/t/../../../../../blog/urls.htmlHTTP/2 200 date: Mon, 21 Jun 2021 16:07:35 GMTserver: Apache/2.4.43 (Unix) OpenSSL/1.1.1klast-modified: Mon, 21 Jun 2021 16:03:41 GMTcontent-length: 24107content-type: text/html; charset=utf-8content-language: en$\n But of course you can have files or directoriesnamed &#34; ...&#34; or &#34; ....&#34; etc., so thefollowing will get you an actual file:\n     Hmm, but this morse code pathname component isgetting pretty long. How long can we make those? Ifit&#39;s a path name, then it should be subject to theoperating systems limits, and sure enough, I can&#39;tcreate a directory that&#39;s longer than FFS_MAXNAMLEN = 255 characters. But I can create nested subdirs to ultimately builda full path that hits the operating system&#39;s PATH_MAX = 1024:\n $ pwd/htdocs/www.netmeister.org$ cd blog/urls $ ls -ld ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddrwxr-xr-x 3 jschauma wheel 512 Jun 19 17:40 ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd/$ cd dd*$ cd dd*$ cd dd*$ cd dd*ksh: cd: dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd: bad directory$ pwd/htdocs/www.netmeister.org/blog/urls/ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd/ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd/ddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd$\n     &#34; ~&#34; is special, except when it&#39;s not. Inthis regard, it&#39;s a lot like tilde expansion in yourshell -- it only takes place if it&#39;s the firstcharacter after the &#34; /&#34; that begins the&#34; pathname&#34;. If this first segment beginswith &#34; /~username/, then many web serversdefault (or can be configured) to resolving theremainder of the &#34; pathname&#34; from under thatuser&#39;s &#34;web space&#34;, often times ~username/public_html.\n   But it&#39;s worth noting that the expansion to auser&#39;s personal web space is convention only: the RFCsdon&#39;t appear to discuss this, although support for a&#34; UserDir&#34; appears to go as far back as  CERNhttpd and  ncsa_httpd.But there is really nothing special about the&#34; ~&#34; character at all. You can, of course,have a directory or file named &#34; ~&#34;:\n  So far, so good. But what happens if you either donot have a user named &#34; username&#34; or you do,and there is a file name &#34; ~username&#34; in yourweb server&#39;s root? Let&#39;s give it a try:\n $ pwd/htdocs/www.netmeister.org$ id nobody uid=32767(nobody) gid=39(nobody) groups=39(nobody)$ ls -ld ~nobody/public_html \\~nobodyls: /nonexistent//public_html: No such file or directory-rw-r--r-- 1 jschauma wheel 4 Jun 20 15:22 ~nobody$ cat \\~nobodyThis is a file named &#34;~nobody&#34; with a symlink of &#34;~notauser&#34; pointing to it.See https://www.netmeister.org/blog/urls.html$ curl -I https://www.netmeister.org/~nobodyHTTP/2 404 date: Mon, 21 Jun 2021 20:12:21 GMTserver: Apache/2.4.43 (Unix) OpenSSL/1.1.1kcontent-type: text/html; charset=iso-8859-1$ id notauserid: notauser: No such user$ ls -ld ~notauser/public_html \\~notauser ls: ~notauser/public_html: Not a directorylrwx------ 1 jschauma wheel 7 Jun 20 15:23 ~notauser -&gt; ~nobody$ cat \\~notauserThis is a file named &#34;~nobody&#34; with a symlink of &#34;~notauser&#34; pointing to it.See https://www.netmeister.org/blog/urls.html$ curl -I https://www.netmeister.org/~notauserHTTP/2 200 date: Mon, 21 Jun 2021 20:17:09 GMTserver: Apache/2.4.43 (Unix) OpenSSL/1.1.1kcontent-length: 124content-language: en$\n That is, if your web server supports (and hasenabled) user directories, and you submit a requestfor &#34; ~username&#34;:\n if &#34; username&#34; is a valid user, the serverlooks for &#34; ~username/public_html&#34;, evenif that directory does  not exist, but the file ~username  does exist\n if &#34; username&#34; is  not a validuser, then normal pathname resolution takes place,meaning if the file &#34; ~username&#34; exists in theweb server&#39;s document root, it is served\n   A &#34; query&#34; component in a URL follows a&#34; ?&#34; characters and... is basically not welldefined at all. You could put just about anything into the query, including charactersthat would otherwise not be possible, such as&#34; /&#34; and &#34; ?&#34;:\n  Now by convention, queries tend to use a&#34; key1=value1&amp;key2=value2&#34; syntax,although of course nothing requires you to do that, oreven to use the &#34; &amp;&#34; as a separator; somesystems also (used to) use &#34; ;&#34;.\n But that&#39;s really all there is to the query. It&#39;spart of the HTTP request and the server may put itinto the environment as &#34; QUERY_STRING&#34;.\n  The last component of the URL is the &#34; fragmentidentifier&#34;. This one&#39;s weird in that, whileit&#39;s obviously part of the URL, it is intended to bescoped entirely to the  client, not the server. In fact, common HTTP clients do notsend the fragment to the server, a fact that is thenused by systems like e.g.,  https://privatebin.info/,whereby the decryption key is placed into the fragmentcomponent of the URL, ensuring that the server doesnot see the key.\n Your common web browsers and even e.g., curl(1) will strip the fragment prior tosending the HTTP request, but of course nothingprevents you from sending a  GET requestwith a  Request-URI containing a fragment, andyou can of course create a file name containinga &#34; #&#34;.\n Now Apache httpd treats a &#34; #&#34; in theRequest-URI as a  400 Bad Request, but  RFC2616does not mandate this.  bozohttpd,for example, does not treat &#34; #&#34; in theRequest-URI as special, so you can, for example, makethis request:\n $ echo -ne &#34;GET /blog/urls/urls.html#fragment HTTP/1.0\\r\\n\\r\\n&#34; | \\ nc www.netmeister.org 8080HTTP/1.0 200 OKDate: Tue, 22 Jun 2021 00:12:22 GMTServer: bozohttpd/20170201Accept-Ranges: bytesLast-Modified: Sat, 19 Jun 2021 12:58:28 GMTContent-Type: text/plainContent-Length: 113Just a normal file that just happens to contain a &#39;#&#39; in its name.See https://www.netmeister.org/blog/urls.html\n  Now with all of this long discussion, let&#39;s go backto that silly URL from above:\n  Now this really looks like the  Buffalobuffalo equivalent of a URL. Let&#39;s untangle howthis becomes a valid link.\n The first &#34; https://&#34; is nothing out of theordinary, just your usual scheme and start ofauthority\n   Now we start to play silly tricks:&#34; \u2044 \u2044www.netmeister.org&#34; uses the fractionslash characters as part of the  password.Percent-encoded, this would look like so: %E2%81%84%E2%81%84www%2Enetmeister%2Eorg\n  The next &#34; https&#34; now is the hostname component of the  authority: a  partially qualified hostname, that relies on  /etc/hosts containing an entry pointing  https to the right IP address.\n The next &#34; :&#34; now is the separator of the hostname and the  port components.Only here, it is followed by an empty port, so wedefault to the scheme-specific port, 443 in thiscase.\n The next &#34; //&#34; then is merely the end ofthe  authority followed by an empty pathcomponent.\n The next &#34; www.netmeister.org&#34; now issimply a directory by that name, followed by a normaldirectory separator,&#34; /\n Following that, we find a file name &#34; https:\u2044\u2044www.netmeister.org\u2044\u2044&#34; again using the fraction slash character.\n  Queries allow just about any characters, so here we get a key named &#34; https://www.netmeister.org&#34; with a &#34; =&#34; assigned value of &#34; https://www.netmeister.org&#34;.\n  And finally, we have a fragment, which may containjust about any character as well, so we stuff another&#34; https://www.netmeister.org&#34; in there aswell.\n    Ok, so what&#39;s the big deal? Why did I bother withall of the above, when I didn&#39;t even breakanything?\n I call it &#34; brain fuzzing&#34; or &#34; logicalfuzzing&#34;: I try to understand what something thatI use every single day does, what it&#39;s supposed todo, how it&#39;s defined, and then sometimes I go &#34;Huh, Iwonder what happens if I put  X in hereinstead.&#34;\n I also find it interesting how URLs haveimplications beyond just the normal browser context,and how we depend on both clients and servers tobehave a certain way, even if that is not clearlyspecified.", "posttime": "2021-06-23 23:49:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "url,urls,\u670d\u52a1\u5668", "title": "URL\uff1a\u8fd9\u5f88\u590d\u6742 ", "title_en": "URLs: It's Complicated", "transed": 1, "url": "https://www.netmeister.org/blog/urls.html", "via": "", "real_tags": ["url", "urls", "\u670d\u52a1\u5668"]}, {"category": "", "categoryclass": "", "imagename": "c8ec90b937dd8029717d91bc9125f6bc.png", "infoid": 1067739, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f00\u6e90JavaScript\u548cAndroid / IOS SDK\u7528\u4e8e\u6784\u5efaWeb\u548c\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f ", "note_en": "Open-source JavaScript and Android / iOS SDKs for building web and mobile apps", "posttime": "2021-06-23 23:49:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5730\u56fe,open,javascript", "title": "Maplibre.org\u6253\u5f00\u5730\u56feSDKs for Web\u548cMobile\uff1a\u793e\u533a\u9a71\u52a8\u7684\u5730\u56fe\u7bb1GL FORK ", "title_en": "Maplibre.org Open Maps SDKs for web and mobile: community driven Mapbox GL fork", "transed": 1, "url": "https://maplibre.org/", "via": "", "real_tags": ["\u5730\u56fe", "open"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067738, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u6708\u524d\uff0c\u53d1\u5e03\u4e86\u4e00\u4e2a\u65b0\u7248\u672c\u7684Elixir\u8bed\u8a00\u3002\u5b83\u6536\u5230\u4e861.12\u7248\u7684\u540d\u79f0\u3002\u6700\u65b0\u7248\u672c\u662f\u542f\u7528Elixir\u4ee5\u7528\u4e8e\u66f4\u591a\u811a\u672c\u5e94\u7528\u7a0b\u5e8f\u7684\u65b9\u6cd5\u3002\n \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u60f3\u6458\u8981\u6211\u4eec\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u7684\u65b0\u624b\u3002\u6211\u5bf9\u8bed\u8a00\u7684\u53d8\u5316\u65b9\u5411\u548c\u6210\u719f\u5ea6\u611f\u5230\u6ee1\u610f\u3002\u6ca1\u6709\u7a81\u7136\u7684\u7248\u672c\u517c\u5bb9\u6027\u3002\n  \u6574\u4e2a\u66f4\u6539\u5217\u8868\u53ef\u5728GitHub\u4e0a\u7684\u53d1\u5e03\u8bf4\u660e\u4e2d\u63d0\u4f9b\u3002\u6b64\u5916\uff0c\u5b98\u65b9\u516c\u544a\u53d1\u5e03\u5728Elixir\u8bed\u8a00\u7f51\u7ad9\u4e0a\u3002\u7ee7\u7eed\u68c0\u67e5\u81ea\u5df1\uff01\n \u603b\u7684\u6765\u8bf4\uff0c\u60a8\u53ef\u4ee5\u5c06\u66f4\u6539\u89c6\u4e3aElixir\u4e3a\u66f4\u9ad8\u7684\u811a\u672c\u4f7f\u7528\u60c5\u51b5\u3002\u4e0d\u518d\u9700\u8981\u8bbe\u7f6e\u6574\u4e2a\u9879\u76ee\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u5c31\u8db3\u591f\u4e86\u3002\u6b64\u66f4\u6539\u4f7f\u5f97\u53ef\u4ee5\u653e\u5f03Python\u6216Ruby\u5e76\u5c06\u73af\u5883\u7edf\u4e00\u5230\u4e00\u79cd\u8bed\u8a00\u3002\u5b83\u53ef\u4ee5\u4e3aDevops\u56e2\u961f\u6216\u79c1\u4eba\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u65b9\u4fbf\u3002\n  \u5728\u6700\u65b0\u7248\u672c\u4e2d\uff0c\u4e3b\u8981\u7684\u65b0\u5947\u662fmix.install\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5e94\u7528\u7a0b\u5e8f\u5217\u8868\uff08\u56e0\u4e3a\u5b83\u5f53\u524d\u5728MIX.EXS\u8bbe\u7f6e\u4e2d\uff09\u3002\u4f46\u662f\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u53ef\u80fd\u4fc3\u8fdb\u5de5\u4f5c\u7684\u5176\u4ed6\u9009\u9879\u3002\n \u4f7f\u7528Force\u7684\u80fd\u529b\uff1aTrue\u9009\u9879\u5141\u8bb8\u60a8\u5f3a\u5236\u5220\u9664\u7f13\u5b58\u3002\u5982\u679c\u6ca1\u6709\u4ece_deps\u76ee\u5f55\u5220\u9664\u6570\u636e\u7684\u9ebb\u70e6\uff0c\u5b83\u5c06\u5141\u8bb8\u66f4\u53cb\u597d\u7684\u4f9d\u8d56\u6027\u66f4\u65b0\u3002\u5f53\u60a8\u6b63\u5728\u8fdb\u884c\u72b6\u6001\u53d8\u5316\u52a8\u6001\u65f6\uff0c\u5b83\u53ef\u80fd\u662f\u6709\u76ca\u7684\u3002\n \u4f7f\u7528\u811a\u672c\u975e\u5e38\u7b80\u5355\u3002\u4f7f\u7528\u7f13\u5b58\u673a\u5236\u5141\u8bb8\u60a8\u52a0\u5feb\u6027\u80fd\u5e76\u6d88\u9664\u591a\u6b21\u4e0b\u8f7d\u4f9d\u8d56\u6027\u7684\u9700\u8981\u3002\u6784\u5efa\u673a\u5236\u4ee5\u4e0e\u5f53\u524d\u4f7f\u7528\u7684\u65b9\u5f0f\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5236\u5907\u3002\u7b2c\u4e00\u6b21\u8fd0\u884c\u5b83\uff0c\u5b83\u5c06\u4e0b\u8f7d\uff0c\u7f16\u8bd1\u548c\u7f13\u5b58\u4f9d\u8d56\u9879\u3002\u6bcf\u4e2a\u540e\u7eed\u4e00\u4e2a\u90fd\u5c06\u57fa\u4e8e\u7f13\u5b58\u6765\u52a0\u901f\u8fc7\u7a0b\u3002 \n\u4e92\u52a8\u63a7\u5236\u53f0\u5df2\u6536\u5230\u4e24\u4e2a\u4e3b\u8981\u7684\u65b0\u5947\u3002\u9996\u5148\u662f\u80fd\u591f\u4ee5\u4e0e\u6a21\u5757\u76f8\u540c\u7684\u65b9\u5f0f\u4f7f\u7528\u7ba1\u9053\u64cd\u4f5c\u5458\u3002\u5f53\u7ba1\u9053\u8fd0\u7b97\u7b26\u542f\u52a8\u8be5\u884c\u65f6\uff0c\u8fd9\u5c06\u6d88\u9664\u7c98\u8d34\u4ee3\u7801\uff08\u4ece\u7f16\u8f91\u5668\uff09\u65f6\u7684\u95ee\u9898\u3002\n \u7b2c\u4e8c\u4e2a\u53d8\u5316\u662f\u4f7f\u7528\u8be5\u529f\u80fd\u65f6\u76f4\u63a5\u68c0\u67e5\u53c2\u6570\u7684\u80fd\u529b\u3002\u60a8\u5c06\u4e0d\u518d\u9700\u8981\u5220\u9664\u6574\u884c\u4ee5\u901a\u8fc7H Module_name.function_name\u5f15\u7528\u5e2e\u52a9\u3002\n  \u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u53d8\u5316\u662fsystem.trap_signal / 3\u4ee5\u53ca\u6355\u83b7\u4fe1\u53f7\u7684\u80fd\u529b\u8d8a\u5c0f\u3002\u4f7f\u7528\u6b64\u529f\u80fd\u65f6\u8981\u5c0f\u5fc3\uff0c\u56e0\u4e3a\u5b83\u5bf9\u7cfb\u7edf\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002\n \u6211\u4eec\u6700\u559c\u6b22\u7684\u679a\u4e3e\u6a21\u5757\u4e5f\u5c06\u63a5\u6536\u66f4\u6539\u3002\u8fd9\u662f\u4f8b\u5982count_until / 2\u3002\u8fd9\u5c06\u5141\u8bb8\u60a8\u68c0\u67e5\u8868\u5355\u4e2d\u7684\u7ea6\u675f\uff1a\u5728\u6700\u591a/\u6700\u591aX\u9879\u4e2d\u4ee5\u4ee4\u4eba\u4ee4\u4eba\u4ee4\u4eba\u4ee4\u4eba\u4eab\u53d7\u3002\n \u4e5f\u53ef\u4ee5\u4f7f\u7528Zip_with / 2\u3002\u8fd9\u5c06\u4f7f\u5143\u7d20\u66f4\u5bb9\u6613\u3002\u7279\u522b\u662f\u4e24\u7ec4\u4ee5\u4e0a\uff0c\u901a\u8fc7\u4ee4\u4eba\u4ee4\u4eba\u4ee4\u4eba\u4ee4\u4eba\u4ee4\u4eba\u6109\u5feb\u7684\u4e00\u6b21\uff0c\u5e76\u4f7f\u7528\u6211\u4eec\u5b9a\u4e49\u7684\u529f\u80fd\u3002\n  \u7ecf\u8fc710\u5e74\u7684\u53d1\u5c55\uff0cErlang / OTP 24\u4e5f\u88ab\u91ca\u653e\u4e86\uff01\u5b83\u5f15\u5165\u4e86\u8bb8\u591a\u6027\u80fd\u6539\u8fdb\uff0c\u53ef\u80fd\u5bf9\u60a8\u7684\u5e94\u7528\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002\n \u9519\u8bef\u62a5\u544a\u65b9\u6cd5\u4e5f\u5f88\u68d2\u3002\u800c\u4e0d\u662f\u9519\u8bef\u672c\u8eab\u5e76\u5f3a\u5236\u641c\u7d22\u6587\u6863\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece\u51fd\u6570\u6267\u884c\u7684\u7ed3\u679c\u4e2d\u8bfb\u53d6\u89e3\u91ca\u3002 \nInteractive Elixir\uff081.11\u30020\uff09IEX\uff081\uff09\uff06gt; ETS =\uff1aETS\u3002\u65b0\uff08\uff1a\u793a\u4f8b\uff0c[]\uff09\uff03\u53c2\u8003\uff06lt; 0.384581281.223553\uff06gt; IEX\uff082\uff09\uff06gt; \uff1aETES\u3002\u5220\u9664\uff08ETS\uff09\u771fIEX\uff083\uff09\uff06gt; \uff1aETES\u3002\u63d2\u5165\uff08ETS\uff0c\uff1aCONTER_BE_A_TUPLE\uff09**\uff08ArgumentError\uff09\u53c2\u6570\u9519\u8bef\uff08STDLIB 3.15\uff09\uff1aETS\u3002\u63d2\u5165\uff08\uff03\u53c2\u8003\uff06lt; 0.3845811859.2669281281.23553\uff06gt;\uff1ashaky_be_a_tuple\uff09\n Interactive Elixir\uff081.12\u30020\uff09IEX\uff081\uff09\uff06gt; ETS =\uff1aETS\u3002\u65b0\uff08\uff1a\u793a\u4f8b\uff0c[]\uff09\uff03\u53c2\u8003\uff06lt; 0.05641012.1058144260.76455\uff06gt; IEX\uff082\uff09\uff06gt; \uff1aETES\u3002\u5220\u9664\uff08ETS\uff09\u771fIEX\uff083\uff09\uff06gt; \uff1aETES\u3002\u63d2\u5165\uff08ETS\uff0c\uff1aCONTER_BE_A_TUPLE\uff09**\uff08ArgumentError\uff09\u5728\u7ed9\u5b9a\u7684\u53c2\u6570\u4e2d\u627e\u5230\u9519\u8bef\uff1a* 1 St\u53c2\u6570\uff1a\u8868\u6807\u8bc6\u7b26\u4e0d\u5f15\u7528\u73b0\u6709\u7684ETS\u8868* 2 ND\u53c2\u6570\uff1a\u4e0d\u662f\u5143\u7ec4\uff08STDLIB 3.15\uff09\uff1aETS \u3002\u63d2\u5165\uff08\uff03\u53c2\u8003\uff06lt; 0.105641012.1058144260.76455\uff06gt;\uff1ashaky_be_a_tuple\uff09\n \u7b2c\u4e8c\u79cd\u4f7f\u7528\u6700\u65b0\u7684Elixir\u548cErlang\u7248\u672c\u3002\u4f60\u77e5\u9053\u4ec0\u4e48\u662f\u9519\u7684\u3002\u6307\u5b9a\u4e86\u9519\u8bef\u7684\u7c7b\u578b\u53c2\u6570\u3002\u8fd9\u4e00\u53d8\u5316\u65e2\u662ferlang\u7684\u53d8\u5316\u4e5f\u662f\u6307\u793a\u8fd9\u79cd\u9519\u8bef\uff0c\u5e76\u5728Elixir\u4fa7\u6b63\u786e\u663e\u793a\u5b83\u4eec\u3002\n  \u5982\u679c\u8981\u81ea\u5df1\u6d4b\u8bd5\u66f4\u6539\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5Elixir 1.12.1\uff08\u5f53\u524d\u6700\u65b0\u7248\u672c\uff09\u548cErlang / OTP 24\u3002\n ASDF Plugin-Update --all\uff03\u4e0b\u8f7d\u548c\u8bbe\u7f6eErlang / OTP 24\u4f5c\u4e3a\u9ed8\u8ba4ASDF\u5b89\u88c5Erlang 24.0.1 ASDF Global Erlang 24.0.1\uff03\u4e0b\u8f7d\u548c\u8bbe\u7f6eElixir 1.12\u4f5c\u4e3a\u9ed8\u8ba4ASDF\u5b89\u88c5Elixir 1.12.1-OTP-24 ASDF Global Elixir 1.12.1-OTP-24\n \u5b89\u88c5\u540e\uff0c\u503c\u5f97\u6267\u884c\u547d\u4ee4\u6df7\u5408Local.rebar\u4ee5\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684\u94a2\u7b4b\u3002\n  \u4f5c\u4e3a\u793a\u4f8b\uff0c\u60a8\u53ef\u4ee5\u5728Github\u4e0a\u4e0b\u8f7d\u6211\u7684\u516c\u5171\u5b58\u50a8\u5e93\u7684\u5217\u8868\uff08\u4ee5JSON\u683c\u5f0f\uff09\u3002\u53ea\u9700\u4f7f\u7528\u547d\u4ee4elixir github-repos.ex\u8fd0\u884c\u4e0b\u9762\u7684\u4ee3\u7801 \n\uff03github-repos.exs mix\u3002\u5b89\u88c5\uff08[{\uff1ajason\uff0c\uff06\uff0334;\uff06gt; = 1.0.0\uff06\uff0334;}\uff0c{\uff1ahttpoison\uff0c\uff06\uff0334;\u301c\uff06gt; 1.8\uff06\uff0334;}\uff09defmodule githubrepos do def load\uff08\u7528\u6237\u540d\uff09\u505a\uff06\uff0334; https\uff1a//api.github.com/users/\uff03{username} / repos\uff06\uff0334; |\uff06gt; httpoison\u3002\u5f97\u5230\uff01 \uff08\uff09|\uff06gt;\u5730\u56fe \u3002\u5f97\u5230\uff08\uff1abody\uff09|\uff06gt;\u6770\u68ee\u3002\u89e3\u7801\uff01 \uff08\uff09|\uff06gt; do_some_calc\uff08\uff09\u7ed3\u675fdefp do_some_calc\uff08\u6570\u636e\uff09\uff0c\u505a\uff1a\u6570\u636e\u7aef\uff06\uff0334; bartoszgorka\uff06\uff0334; |\uff06gt; githubrepos\u3002 load\uff08\uff09|\uff06gt; IO\u3002\u68c0\u67e5 \uff08\uff09\n \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u68c0\u67e5Wojtek Mach\u7684\u5b58\u50a8\u5e93\uff1amix_install_examples\u3002\u5982\u679c\u60a8\u51c6\u5907\u811a\u672c\u5e76\u5728\u8bc4\u8bba\u4e2d\u5206\u4eab\u5b83\uff0c\u5b83\u4f1a\u66f4\u597d\u3002\n  Elixir 1.12\u7248\u672c\u5f15\u5165\u4e86\u4e00\u4e9b\u91cd\u5927\u53d8\u5316\u3002\u4e3b\u8981\u662f\u80fd\u591f\u901a\u8fc7MIX.INSTALL\u4ee5\u4e0e\u6574\u4e2a\u9879\u76ee\u7684\u65b9\u5f0f\u76f8\u540c\u7684\u65b9\u5f0f\u521b\u5efa\u811a\u672c\u548c\u4f7f\u7528\u4f9d\u8d56\u9879\u3002 Erlang / OTP 24\u662f\u4e00\u79cd\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u548c\u63cf\u8ff0\u9519\u8bef\u7684\u65b0\u65b9\u6cd5\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\n \u4ea4\u4e92\u5f0f\u63a7\u5236\u53f0\u5728\u8f6f\u4ef6\u5f00\u53d1\u548c\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u66f4\u6709\u7528\u3002\u7279\u522b\u662f\u66f4\u5bb9\u6613\u4f7f\u7528\u7ba1\u9053\u64cd\u4f5c\u5458\u7684\u53ef\u80fd\u6027\u5c06\u5141\u8bb8\u66f4\u5feb\u7684\u539f\u578b\u8bbe\u8ba1\u3002\u679a\u4e3e\u7684\u66f4\u6539\u4e5f\u53ef\u4ee5\u8ba9\u60a8\u66f4\u8f7b\u677e\u5730\u5728\u9879\u76ee\u4e2d\u521b\u5efa\u66f4\u6539\u3002\n \u65b0\u7248\u672c\u7684\u8bed\u8a00\u662f\u6d4b\u8bd5\u5176\u529f\u80fd\u7684\u7edd\u4f73\u673a\u4f1a\u3002\u5206\u4eab\u60a8\u7684\u811a\u672c\u6216\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u901a\u8fc7\u65b0\u7684Elixir 1.12\u89e3\u51b3\u3002 ", "note_en": "A month ago, a\u00a0 new version of\u00a0the Elixir language was released. It received the designation of\u00a0version 1.12. The latest version is a\u00a0way to  enable Elixir to be used for more scripted applications.\n In this post, I wanted to summary what new we got as developers. I am pleased with the direction of\u00a0changes and the maturity of\u00a0the language. There are no sudden version compatibility breaks.\n  The entire list of\u00a0changes is available in the release description on  GitHub. Additionally, an\u00a0official announcement was posted on the Elixir language  website. Go ahead and check yourself!\n Overall, you can look at the changes as Elixir opens up to more scripted use-cases. It is no longer necessary to set up the entire project. A simple script is enough.  This change makes it possible to abandon Python or Ruby and unify the environment to one language. It can be handy for DevOps teams or private applications.\n  In latest version the main novelty is   Mix.install. The first parameter is the application list (as it is currently in the  mix.exs settings). The second parameter, however, is additional options that may facilitate work.\n The ability to use the  force: true option allows you to force the deletion of\u00a0the cache. It will allow more friendly dependency updates without the hassle of\u00a0deleting data from  _deps directory. It can be beneficial when you\u2019re working on a\u00a0dependency whose state changes dynamically.\n Using the script is very simple. The use of\u00a0the  cache mechanism allows you to speed up performance and eliminate the need to download dependencies multiple times. The build mechanism was prepared in a\u00a0similar way to the one currently used.  The first time you run it, it will download, compile, and cache dependencies. Each subsequent one will already be based on the cache to speed up the process.\n  The interactive console has received two main novelties. The first is the  ability to use the pipe operator in the same way as in modules. This will eliminate problems when pasting code (from the editor), when the pipe operator  started the line.\n The second change is the  ability to check the parameters directly when using the function. You will no longer need to delete the entire line to refer to help via  h Module_name.function_name.\n  Another significant change is   System.trap_signal/3 and the more effortless ability to capture signals. Be careful when using this functionality as it has a\u00a0significant impact on the system.\n Our favorite Enum module will also receive changes. This is for example  count_until/2. This will allow you to check the constraints in the form:  in the enumerable at least / at most X items.\n zip_with/2 can also be used. This will make it easier to combine elements. Especially more than two sets, with going through the enumerable once and using the function defined by us.\n  After 10 years of\u00a0development, the Erlang/OTP 24 was also  released! It introduces  a\u00a0lot of\u00a0performance improvements that can have a\u00a0significant impact on your application.\n The error reporting method is also great. Instead of\u00a0the error itself and forcing you to search the documentation, we can read the explanations directly from the result of\u00a0the function execution.\n  Interactive  Elixir  ( 1.11 . 0 )  iex ( 1 ) &gt;  ets  =  :ets . new ( :example ,  [])  #Reference&lt;0.3845811859.2669281281.223553&gt;  iex ( 2 ) &gt;  :ets . delete ( ets )  true  iex ( 3 ) &gt;  :ets . insert ( ets ,  :should_be_a_tuple )  **  ( ArgumentError )  argument  error  ( stdlib  3.15 )  :ets . insert ( #Reference&lt;0.3845811859.2669281281.223553&gt;, :should_be_a_tuple)\n Interactive  Elixir  ( 1.12 . 0 )  iex ( 1 ) &gt;  ets  =  :ets . new ( :example ,  [])  #Reference&lt;0.105641012.1058144260.76455&gt;  iex ( 2 ) &gt;  :ets . delete ( ets )  true  iex ( 3 ) &gt;  :ets . insert ( ets ,  :should_be_a_tuple )  **  ( ArgumentError )  errors  were  found  at  the  given  arguments:  *  1 st  argument:  the  table  identifier  does  not  refer  to  an \u00a0 existing  ETS  table  *  2 nd  argument:  not  a \u00a0 tuple  ( stdlib  3.15 )  :ets . insert ( #Reference&lt;0.105641012.1058144260.76455&gt;, :should_be_a_tuple)\n The second uses the latest Elixir and Erlang versions.  You know immediately what\u2019s wrong. The wrong type parameter was specified. This change is both changes in Erlang to indicate such errors, and on the Elixir side to display them correctly.\n  If you want to test the changes yourself, use the following commands to install Elixir 1.12.1 (current the latest version) and Erlang/OTP 24.\n asdf plugin-update  --all  # Download and set Erlang/OTP 24 as default asdf  install erlang 24.0.1 asdf global erlang 24.0.1  # Download and set Elixir 1.12 as default asdf  install elixir 1.12.1-otp-24 asdf global elixir 1.12.1-otp-24\n After installation, it is worth executing the command  mix local.rebar to use the latest version of\u00a0Rebar.\n  As an\u00a0example, you can download a\u00a0list (in JSON format) of\u00a0my public repositories on GitHub. Just run the code below with the command  elixir github-repos.exs\n # github-repos.exs  Mix . install ([  { :jason ,  &#34;&gt;= 1.0.0&#34; },  { :httpoison ,  &#34;~&gt; 1.8&#34; }  ])  defmodule  GithubRepos  do  def  load ( username )  do  &#34;https://api.github.com/users/ #{ username } /repos&#34;  |&gt;  HTTPoison . get! ()  |&gt;  Map . get ( :body )  |&gt;  Jason . decode! ()  |&gt;  do_some_calc ()  end  defp  do_some_calc ( data ),  do :  data  end  &#34;bartoszgorka&#34;  |&gt;  GithubRepos . load ()  |&gt;  IO . inspect ()\n For more examples, check  Wojtek Mach\u2019s repository:  mix_install_examples. It will be even better if you prepare your script and share it in the comments.\n  The Elixir 1.12 version introduced some significant changes. The main one is the ability to create scripts and use dependencies via  Mix.install in the same way as for entire projects.  Erlang/OTP 24 is a\u00a0way to  improve application performance and a\u00a0new way to  describe errors.\n The  interactive console can be more helpful in the software development and debugging process. Especially the possibility of\u00a0easier use of\u00a0the pipe operator will allow for faster prototyping. Changes to the Enum can also make it easier to create a\u00a0changes in your projects.\n The new version of\u00a0the language is an\u00a0excellent opportunity to test its capabilities. Share your scripts or applications that can be addressed by new Elixir 1.12.", "posttime": "2021-06-23 23:49:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u5f00\u53d1\u4eba\u5458,point", "title": "\u65b0\u7684Elixir 1.12  - \u5f00\u53d1\u4eba\u5458\u7684\u89c2\u70b9 ", "title_en": "New Elixir 1.12 \u2013 The developer\u2019s point of view", "transed": 1, "url": "https://bartoszgorka.com/elixir-1-12-released", "via": "", "real_tags": ["\u5f00\u53d1", "\u5f00\u53d1\u4eba\u5458", "point"]}, {"category": "", "categoryclass": "", "imagename": "15c245bcd4e71c82aeb8e5547a2c8355.png", "infoid": 1067737, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\u5e78\u7684\u662f\uff0c\u672c\u6708\u65e9\u4e9b\u65f6\u5019\u5f55\u53d6\u4e86Ethereum 2.0\u7684\u65f6\u95f4\u6bd4\u6700\u521d\u9884\u671f\u7684\u65f6\u95f4\u8981\u957f\u5f97\u591a\u3002\u5728eth2\u5c06\u5305\u62ec\u4ece\u5de5\u4f5c\u8bc1\u660e\uff08POW\uff09\u5230\u80a1\u6743\u8bc1\u660e\uff08POS\uff09\u5171\u8bc6\u673a\u5236\u7684\u8f6c\u578b\u3002\n \u5728\u8fc7\u53bb\u7684\u51e0\u5468\u5185\u6bd4\u7279\u5e01\u548c\u56fd\u5185\u6316\u6398\u7684\u53ef\u6301\u7eed\u53d1\u5c55\u95ee\u9898\u4e4b\u540e\uff0c\u4e16\u754c\u8d8a\u6765\u8d8a\u5173\u6ce8\u8fd9\u4e00\u8f6c\u578b\u3002\u5355\u72ec\u7684Ethereum Mining\u6bcf\u5e74\u6d88\u801752.2 Terawatt-Hours\uff0c\u6bcf\u5e74\u78b3\u8db3\u8ff9\u4e0e\u7ea6\u65e6\u7684\u6574\u4e2a\u56fd\u5bb6\u76f8\u5f53\u3002\n   \u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5bf9\u80a1\u4efd\u8bc1\u660e\u7684\u8fc7\u6e21\u9884\u8ba1\u5c06\u5141\u8bb8\u4ee5Ethereum\u7f51\u7edc\u6d88\u8017\u7ea699.95\uff05\u7684\u80fd\u91cf\u3002\u8981\u4e86\u89e3\u6211\u4eec\u5982\u4f55\u6df1\u5165\u4e86\u89e3\u5171\u8bc6\u6a21\u578b\u7684\u6280\u672f\u548c\u7ecf\u6d4e\u3002\n  \u4e3a\u4e86\u9632\u6b62\u4eba\u4eec\u5411\u533a\u5757\u94fe\u6dfb\u52a0\u6b3a\u8bc8\u4e8b\u52a1\uff0c\u5fc5\u987b\u5728\u4e00\u4e2a\u540d\u4e3a\u6316\u6398\u7684\u8fc7\u7a0b\u4e2d\u9a8c\u8bc1\u6bcf\u4e2a\u65b0\u5757\u3002\u6316\u6398\u52a0\u5bc6\u8d27\u76ee\u7684\u6316\u6398\u7269\u6d41\u88ab\u79f0\u4e3a\u5176\u5171\u8bc6\u6a21\u578b\u3002\u4e3a\u4e86\u6fc0\u52b1\u4eba\u4eec\u9a8c\u8bc1\u8fd9\u4e9b\u65b0\u7684\u4ea4\u6613\uff0c\u901a\u5e38\u7ed9\u4e88\u77ff\u5de5\u4ea4\u6613\u8d39\u548c\u5757\u5956\u52b1\u3002\n \u5de5\u4f5c\u8bc1\u660e\uff08POW\uff09\u662f\u6bd4\u7279\u5e01\u4f7f\u7528\u7684\u5171\u8bc6\u6a21\u578b\uff0c\u76ee\u524d\u7531\u4ee5\u5916\u4eba\u4f7f\u7528\u3002\u6218\u4fd8\u57fa\u672c\u4e0a\u8ba9\u77ff\u5de5\u4e92\u76f8\u7ade\u4e89\uff0c\u4ee5\u9a8c\u8bc1\u65b0\u5757\u4ee5\u7d22\u8d54\u5956\u52b1\u3002\u4e00\u4e2a\u62e5\u6709\u7684\u8ba1\u7b97\u80fd\u529b\u8d8a\u591a\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u5728\u9a8c\u8bc1\u5757\u65f6\u8d8a\u591a\uff0c\u56e0\u6b64\u4ed6\u4eec\u5728\u6536\u5230\u5956\u52b1\u65f6\u66f4\u9ad8\u7684\u673a\u4f1a\u3002\n  \u7136\u800c\uff0c\u4e3a\u4e86\u4fdd\u6301\u8fd1\u5e38\u5e38\u6570\u7684\u9a8c\u8bc1\u65f6\u95f4\uff0c\u6bd4\u7279\u5e01\u548c\u4ee5\u5916\u4eba\u81ea\u52a8\u6269\u5c55\u6316\u6398\u7684\u96be\u5ea6\uff0c\u56e0\u4e3a\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u52a0\u5165\u91c7\u77ff\u6bd4\u8d5b\u3002\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u52a0\u5bc6\u6316\u6398\u548c\u6240\u6709\u65b0\u786c\u4ef6\u7684\u6240\u6709\u6295\u8d44\uff0c\u91c7\u77ff\u7684\u6548\u7387\u5c06\u6c38\u8fdc\u4fdd\u6301\u4e0d\u53d8\u3002\n \u521b\u9020\u7684\u662f\u4e00\u4e2a\u65e0\u4f11\u6b62\u7684\u77ff\u5c71\u7684\u65e0\u4f11\u6b62\u7684\u519b\u5907\u7ade\u8d5b\uff0c\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u66f4\u6709\u6548\u6216\u5b89\u5168\u5730\u5236\u4f5c\u533a\u5757\u3002\u5728\u83b7\u5f97\u8857\u533a\u5956\u52b1\u65f6\u6709\u673a\u4f1a\u6240\u9700\u7684\u80fd\u91cf\u91cf\u98d9\u5347\uff0c\u56e0\u4e3a\u8fd9\u79cd\u6316\u6398\u56f0\u96be\u589e\u52a0\u4e86\u3002\u66f4\u4ee4\u4eba\u62c5\u5fe7\u7684\u90e8\u5206\u662f\uff0c\u968f\u7740\u52a0\u5bc6\u91c7\u7528\u7684\u589e\u52a0\uff0c\u5de5\u4f5c\u8bc1\u660e\u7684\u6709\u5bb3\u80fd\u529b\u53ea\u662f\u53d8\u5f97\u66f4\u7cdf\uff0c\u66f4\u7cdf\u7cd5\u3002 \n\u800c\u4e0d\u662f\u8ba9\u77ff\u5de5\u7ade\u4e89\u9a8c\u8bc1\u65b0\u5757\uff0c\u8d4c\u6ce8\u8bc1\u660e\u968f\u673a\u5206\u914d\u9a8c\u8bc1\u7684\u4efb\u52a1\u3002\u6bcf\u4e2a\u6f5c\u5728\u7684\u9a8c\u8bc1\u8005\u90fd\u7b79\u96c6\u4e86\u4e00\u5b9a\u6570\u91cf\u7684\u8d27\u5e01\uff0c\u5982\u679c\u4ed6\u4eec\u6b3a\u8bc8\u5730\u9a8c\u8bc1\u5757\uff0c\u4ed6\u4eec\u613f\u610f\u4e22\u5931\u3002\u4ed6\u4eec\u88ab\u5206\u914d\u7684\u51e0\u7387\u662f\u4ed6\u4eec\u613f\u610f\u62c5\u5fc3\u7684\u9636\u6bb5\u3002\n \u867d\u7136\u4eba\u4eec\u4ecd\u7136\u5fc5\u987b\u6d88\u8017\u80fd\u91cf\u6765\u9a8c\u8bc1\u65b0\u5757\uff0c\u4f46\u662f\u6ca1\u6709\u540c\u6837\u7684\u519b\u5907\u7ade\u8d5b\u53ef\u4ee5\u83b7\u5f97\u6700\u591a\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u56e0\u6b64\u53ef\u4ee5\u9632\u6b62\u91c7\u77ff\u53d8\u5f97\u6bd4\u9700\u8981\u66f4\u8d35\u3002\n  \u867d\u7136\u8fd9\u80af\u5b9a\u662f\u5bf9POS\u7684\u6709\u6548\u6279\u8bc4\uff0c\u4f46\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\uff0c\u5b83\u4ecd\u7136\u6bd4\u6218\u4fd8\u66f4\u516c\u5e73\u3002\u4f7f\u7528POS\uff0c\u60a8\u88ab\u9009\u4e2d\u7684\u673a\u4f1a\u4f5c\u4e3a\u9a8c\u8bc1\u5668\u662f\u60a8\u6240\u8d4c\u6ce8\u7684\u7ebf\u6027\u529f\u80fd\u3002\n \u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7531\u4e8e\u60a8\u5728POW\u4e2d\u83b7\u5f97\u5956\u52b1\u7684\u673a\u4f1a\u662f\u60a8\u7684\u8ba1\u7b97\u80fd\u529b\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u8fd8\u6709\u4e00\u4e2a\u4f18\u52bf\u7ed9\u4e88\u5bcc\u88d5\u7684\u77ff\u5de5\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u4f18\u52bf\u589e\u52a0\u4e86\u60a8\u662f\u56e0\u4e3a\u5728\u8ba1\u7b97\u57fa\u7840\u67b6\u6784\u4e0a\u82b1\u8d39\u66f4\u591a\u7684\u89c4\u6a21\u7ecf\u6d4e\uff0c\u6216\u8005\u91c7\u77ff\u94bb\u673a\u7684\u6548\u7387\u63d0\u9ad8\u3002\n \u6362\u53e5\u8bdd\u8bf4\uff0c\u5728POS\u4e2d\uff0c\u82b1\u8d39100\u7f8e\u5143\u7684\u4eba\u5bf9\u82b1\u8d3910\u7f8e\u5143\u7684\u4eba\u6765\u8bf4\u670910\u500d\u7684\u4f18\u52bf\u3002\u51ed\u501f\u6218\u4fd8\uff0c\u89c4\u6a21\u7ecf\u6d4e\u53ef\u4ee5\u7ed9\u51fa100\u7f8e\u5143\u7684\u4eba\u6bd410\u500d\u7684\u4f18\u52bf\u3002\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u5e0c\u671b\u5728\u672a\u6765\u51fa\u73b0\u5171\u8bc6\u673a\u5236\uff0c\u4f46\u5728\u66f4\u516c\u5e73\u5730\u6bd4POS\u66f4\u516c\u5e73\uff0c\u4ecd\u7136\u5728\u6d89\u53ca\u6743\u76ca\u65f6\u4ecd\u7136\u662f\u6b63\u786e\u7684\u65b9\u5411\u3002 ", "note_en": "It was unfortunately admitted earlier this month that Ethereum 2.0 is taking much longer than was initially expected. Among the many changes that Eth2 will include is the transition from a Proof of Work(PoW) to a Proof of Stake(PoS) consensus mechanism.\n The world is increasingly eyeing this transition after the sustainability issues of Bitcoin and Ethereum mining made headlines over the past couple of weeks. Ethereum mining alone consumes 52.2 Terawatt-hours a year and has an  annual carbon footprint comparable to the entire country of Jordan.\n   The transition to Proof of Stake, in contrast, is expected to allow the Ethereum network to consume around 99.95% less energy. To understand how we\u2019re going to take a deeper dive into the technology and economics behind consensus models.\n  In order to prevent people from adding fraudulent transactions to the blockchain, every new block has to be validated in a process called mining. The logistics of mining that a cryptocurrency employs are known as its consensus model. In order to incentivize people to validate these new transactions, transaction fees and block rewards are usually given to the miner.\n Proof of Work (PoW) is the consensus model used by Bitcoin, and currently used by Ethereum. PoW essentially has miners race against each other to verify the new block in order to claim the reward. The more computational power that one has, the more attempts they can make at validating the block, and therefore the higher chance they have at receiving the reward.\n  In order to keep the verification time near-constant, however, Bitcoin and Ethereum automatically scale the difficulty of mining as more people join the mining race. This means that for all the investment in crypto mining and all the new hardware, the efficiency of mining will always remain constant.\n What this has created is an endless arms race in crypto mines that don\u2019t actually make the blockchains themselves any more efficient or secure. The amount of energy necessary to have a chance at earning the block reward has skyrocketed as this mining difficulty has increased. The more worrisome part is that as Crypto adoption increases, the detrimental energy effects of Proof of Work are only going to get worse and worse.\n  Instead of having miners race to validate the new block, Proof of Stake assigns the task of validation at random. Each potential validator stakes a certain amount of currency that they are willing to lose if they fraudulently validate the block. Their odds of being assigned the new block are then a function of how much they are willing to stake.\n While people will still have to consume energy to validate the new blocks, there won\u2019t be the same arms race for who can attain the most computing power, and will therefore prevent mining from becoming more expensive than it needs to be.\n  While this is certainly a valid criticism of PoS, it\u2019s important to note that it is still much more equitable than PoW. With PoS, your chance of being chosen as the validator is a linear function of your staked money.\n In contrast, since your chances of receiving the reward in PoW are a function of your computing power, there is also an advantage given to wealthier miners. This advantage, however, increases the richer you are because of economies of scale, or the increased efficiency of mining rigs as you spend more on your computing infrastructure.\n In other words, in PoS, the person who spends $100 has a 10x advantage over the person who spends $10. With PoW, economies of scale can give the person who spends $100 significantly more than a 10x advantage. While we can hope for a consensus mechanism to arise in the future that is more equitable than PoS, it is still nevertheless a step in the right direction when it comes to equity.", "posttime": "2021-06-23 23:49:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bc1\u660e,stake,\u9a8c\u8bc1", "title": "\u80a1\u6743\u8bc1\u660e\u662f\u533a\u95f4\u901a\u8fc7\u7684\u524d\u63d0 ", "title_en": "Proof of Stake Is a Precondition to Blockchain Adoption", "transed": 1, "url": "https://medium.com/codesphere-cloud/proof-of-stake-is-a-precondition-to-blockchain-adoption-aaff9951b802", "via": "", "real_tags": ["\u8bc1\u660e", "stake", "\u9a8c\u8bc1"]}, {"category": "", "categoryclass": "", "imagename": "e1bbb0c02eae89bb6bad23d67f31fd3e.jpeg", "infoid": 1067736, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7ade\u4e89\u8017\u7535\u8d44\u6599\u4e2d\u5fc3\u7684\u7ade\u4e89\u7ade\u4e89\u6709\u80fd\u529b\u7684\u79d1\u6280\u516c\u53f8\u91cd\u5851\u53ef\u518d\u751f\u80fd\u6e90\u5e02\u573a\u548c\u52aa\u529b\uff0c\u4ee5\u65b0\u7684\u6311\u6218\uff1a\u5982\u4f55\u786e\u4fdd\u4ed6\u4eec\u7684\u6295\u8d44\u5b9e\u9645\u964d\u4f4e\u6392\u653e\u3002\n  Amazon.com\u516c\u53f8\u8868\u793a\uff0c\u5b83\u8ba1\u5212\u5728\u5168\u7403\u63a8\u51fa\u8db3\u591f\u53ef\u518d\u751f\u80fd\u6e90\u7684\u4e00\u90e8\u5206\uff0c\u5ba3\u5e03\u4ece\u4e16\u754c\u5404\u5730\u768414\u4e2a\u65b0\u7684\u592a\u9633\u80fd\u548c\u98ce\u7535\u5382\u8d2d\u4e701.5\u5343\u5146\u74e6\u7684\u751f\u4ea7\u80fd\u529b\u7684\u627f\u8bfa\uff0c\u4ee5\u6db5\u76d62025\u5e74\u7684\u6240\u6709\u516c\u53f8\u6d3b\u52a8\u3002\n  \u79d1\u6280\u516c\u53f8\u6b63\u5728\u6325\u821e\u4ed6\u4eec\u7684\u8d44\u4ea7\u8d1f\u503a\u8868\uff0c\u4ee5\u5411\u524d\u6240\u672a\u6709\u7684\u89c4\u6a21\u878d\u8d44\u592a\u9633\u80fd\uff0c\u98ce\u548c\u5176\u4ed6\u53ef\u518d\u751f\u80fd\u6e90\u9879\u76ee\u3002\u5728\u4e00\u4e9b\u56fd\u5bb6\uff0c\u5f00\u53d1\u4eba\u5458\u8868\u793a\uff0c\u79d1\u6280\u516c\u53f8\u613f\u610f\u5728\u957f\u671f\u4ee5\u4e00\u5b9a\u7684\u4ef7\u683c\u4e0a\u652f\u51fa\u521d\u671f\u7b7e\u7f72\u4ee5\u8d2d\u4e70\u80fd\u6e90\u7684\u627f\u8bfa - \u5df2\u5e2e\u52a9\u4f7f\u516c\u53f8\u6bd4\u653f\u5e9c\u8865\u8d34\u66f4\u91cd\u8981\uff0c\u4f5c\u4e3a\u53ef\u518d\u751f\u6295\u8d44\u7684\u4e3b\u8981\u9a71\u52a8\u56e0\u7d20\u3002\n  Amazon\uff0cAlphabet Inc.\u7684Google\uff0cFacebook Inc.\u548cMicrosoft Corp.\u662f\u516c\u5f00\u62ab\u9732\u7684\u53ef\u518d\u751f\u80fd\u6e90\u8d2d\u4e70\u534f\u8bae\u7684\u524d\u516d\u5927\u4f01\u4e1a\u4e70\u5bb6\u4e2d\u6709\u56db\u4e2a\uff0c\u5360\u5168\u7403\u516c\u53f8\u7684\u7d2f\u8ba1\u603b\u6570\u768430\uff05\u621625.7\u5343\u5146\u74e6\u3002\u6839\u636e\u7814\u7a76\u516c\u53f8\u5f6d\u535a\u5821\u7684\u8bf4\u6cd5\u3002\u4e9a\u9a6c\u900a\u662f\u5168\u7403\u6700\u5927\u7684\u4f01\u4e1a\u8d2d\u4e70\u8005\uff0c\u5176\u4ed6\u9876\u7ea7\u4e70\u5bb6\u5305\u62ec\u6cd5\u56fd\u77f3\u6cb9\u516c\u53f8TotalEnergies SE\u548cAT\uff06amp; T Inc.\n  \u201c\u5b83\u51e0\u4e4e\u5c31\u50cf\u6e05\u6d01\u80fd\u6e90\u7684\u8e29\u8e0f\u4e8b\u4ef6\uff0c\u201d\u8c37\u6b4c\u80fd\u6e90\u603b\u76d1Michael Terrell\u8bf4\u3002\n  \u60a8\u5c06\u6536\u53d6$ +\u7a0e\uff08\u5982\u679c\u9002\u7528\uff09\u4e3a\u534e\u5c14\u8857\u65e5\u8bb0\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u5728\u5ba2\u6237\u4e2d\u5fc3\u7684\u4efb\u4f55\u65f6\u95f4\u66f4\u6539\u5e10\u5355\u504f\u597d\u6216\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u3002\u60a8\u5c06\u5728\u7387\u6216\u6761\u6b3e\u7684\u4efb\u4f55\u53d8\u5316\u63d0\u524d\u901a\u77e5\u60a8\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u901a\u8fc7\u8c03\u7528\u5ba2\u6237\u670d\u52a1\u6765\u53d6\u6d88\u8ba2\u9605\u3002 ", "note_en": "The race to secure electricity deals for power-hungry data centers has tech companies reshaping the renewable-energy market and grappling with a new challenge: how to ensure their investments actually reduce emissions.\n  Amazon.com Inc. said it planned Wednesday to announce commitments to buy 1.5 gigawatts of production capacity from 14 new solar and wind plants around the world as part of its push to purchase enough renewable energy to cover all of the company\u2019s activities by 2025.\n  Tech companies are wielding their balance sheets to finance solar, wind and other renewable-energy projects on an unprecedented scale. In some countries, developers say tech companies\u2019 willingness to spend upfront\u2014signing commitments to buy energy at a certain price for long periods\u2014has helped make corporations more important than government subsidies as the main drivers of renewable investment.\n  Amazon, Alphabet Inc.\u2019s Google, Facebook Inc. and Microsoft Corp. are four of the top six corporate buyers of publicly disclosed  renewable-energy- purchase agreements, accounting for 30%, or 25.7 gigawatts, of the cumulative total from corporations globally, according to the research firm BloombergNEF. Amazon is the largest corporate purchaser world-wide, with other top purchasers including the French oil company TotalEnergies SE and AT&amp;T Inc.\n  \u201cIt\u2019s almost like a stampede for clean energy,\u201d said Michael Terrell, director of energy at Google.\n  You will be charged $  + tax (if applicable) for The Wall Street Journal. You may change your billing preferences at any time in the Customer Center or call  Customer Service. You will be notified in advance of any changes in rate or terms. You may cancel your subscription at anytime by calling  Customer Service.", "posttime": "2021-06-23 23:48:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "amazon,\u4e9a\u9a6c\u900a,\u5de8\u5934,tech", "title": "\u4e9a\u9a6c\u900a\u548c\u5176\u4ed6\u79d1\u6280\u5de8\u5934\u6bd4\u8d5b\u8d2d\u4e70\u53ef\u518d\u751f\u80fd\u6e90 ", "title_en": "Amazon and Other Tech Giants Race to Buy Up Renewable Energy", "transed": 1, "url": "https://www.wsj.com/articles/amazon-and-other-tech-giants-race-to-buy-up-renewable-energy-11624438894", "via": "", "real_tags": ["amazon", "\u4e9a\u9a6c\u900a", "\u5de8\u5934", "tech"]}, {"category": "", "categoryclass": "", "imagename": "f82e5ce640833fba12d7728ccb906dbe.jpg", "infoid": 1067735, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00d7\u5728Gamestop\u7684\u540e\u679c\uff0c1\u6708\u4efd\u7684\u6e38\u620f\u7387\u5347\u8d77\uff0c\u96f6\u552e\u6295\u8d44\u8005\u53d1\u73b0\u4e86\u901a\u8fc7\u4e3b\u8981\u7ecf\u7eaa\u4eba\u548c\u5bf9\u51b2\u57fa\u91d1\u7684\u5e38\u89c1\u800c\u4ee4\u4eba\u9707\u60ca\u7684\u4ea4\u6613\u6b3a\u8bc8\u7684\u8ff9\u8c61\u3002\n \u6211\u4ee5\u524d\u5199\u8fc7\u5173\u4e8eGameStop\uff08GME\uff09\uff0c\u89c6\u9891\u6e38\u620f\u548c\u7535\u5b50\u516c\u53f8\u7684\u72c2\u70ed\u7684\u524d\u666f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4f60\u77e5\u9053\u8fd9\u4e2a\u6545\u4e8b\u3002\u6570\u767e\u4e07\u96f6\u552e\u6295\u8d44\u8005\u57281\u67082021\u5e74\u5c06\u80a1\u7968\u98d9\u5347\u4e3a\u8d85\u8fc71,000\uff05\u3002\u8fd9\u4f1a\u5e26\u6765\u5c11\u91cf\u5bf9\u51b2\u57fa\u91d1\u7684\u707e\u96be\uff0c\u8fd9\u4e9b\u8d44\u91d1\u8d4cGameStop\u7684\u80a1\u7968\u4e0b\u964d\u3002\u6839\u636e\u5e02\u573a\u5185\u5e55\uff0c2\u6708\u4efd\u7684\u4e00\u4e2a\u5206\u6790\u5e08\u4f30\u8ba1\u635f\u5931\u7ea6\u4e3a190\u4ebf\u7f8e\u5143\u3002\u636e\u62a5\u9053\uff0c\u5bf9\u51b2\u57fa\u91d1\u6885\u5c14\u6587\u8d44\u672c\u5728\u4e3e\u884c51\uff05\u540e\u5c01\u95ed\u4e86\u5176\u7acb\u573a\u3002\u53e6\u4e00\u4e2a\u57fa\u91d1Maplelane\u5931\u53bb\u4e8640\uff05\u3002\n  \u6700\u7ec8\u4f1a\u6d88\u9000\uff0c\u80a1\u7968\u4e0b\u964d\uff0c\u4f46\u5b83\u4ecd\u7136\u8fdc\u8fdc\u9ad8\u4e8e\u5176\u539f\u59cb\u4ef7\u683c\u3002\u4f46\u7531\u4e8e\u96f6\u552e\u6295\u8d44\u8005\u5728\u540e\u679c\u4e2d\u67e5\u770b\u4e86\u7ec6\u8282\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e3b\u8981\u7ecf\u7eaa\u4eba\u548c\u5bf9\u51b2\u57fa\u91d1\u7684\u5e38\u89c1\u4f46\u4ee4\u4eba\u9707\u60ca\u7684\u4ea4\u6613\u6b3a\u8bc8\u7684\u8ff9\u8c61\uff0c\u8fd9\u9003\u907f\u4e86\u53ef\u80fd\u66f4\u5927\u7684\u635f\u5931\u3002 GameStop\u5468\u56f4\u53d1\u751f\u7684\u4e8b\u60c5\u53ea\u80fd\u901a\u8fc7\u6279\u91cf\u4f2a\u9020\u80a1\u7968\u6765\u89e3\u91ca\u3002\n  \u4e0e\u5176\u4ed6\u76d1\u7ba1\u673a\u6784\u4e00\u8d77\u7684\u8bc1\u5238\u548c\u4ea4\u6613\u6240\u59d4\u5458\u4f1a\uff08SEC\uff09\u53ef\u4ee5\u786e\u8ba4GameStop\u4ea4\u6613\u4e2d\u6240\u770b\u5230\u7684\u6a21\u5f0f\u662f\u5426\u6784\u6210\u6b3a\u8bc8\uff0c\u5df2\u77e5\u591a\u5e74\u6765\u50cf\u8fd9\u6837\u7684\u5b9e\u8df5\u3002\u91d1\u878d\u5a92\u4f53\u4e5f\u5ffd\u7565\u4e86\u8fd9\u79cd\u7cfb\u7edf\u8150\u8d25\u3002\n      \u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\u5141\u8bb8\u4ea4\u6613\u5458\u77ed\u6682\u80a1\u7968\uff0c\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u4ed6\u4eec\u6ca1\u6709\u62e5\u6709\u5b83\uff0c\u4e5f\u5e0c\u671b\u4ee5\u8f83\u4f4e\u7684\u4ef7\u683c\u548c\u94f6\u884c\u7a0d\u540e\u5730\u56de\u6765\u3002\u77ed\u6b3e\u5356\u5bb6\u501f\u7528\u80a1\u7968\uff0c\u901a\u5e38\u6765\u81ea\u7ecf\u7eaa\u4eba\uff0c\u4ed6\u4eec\u8981\u4e48\u5728\u4ed6\u4eec\u7684\u5e93\u5b58\u4e2d\uff0c\u501f\u7528\u5b83\u4ece\u53e6\u4e00\u4e2a\u7ecf\u7eaa\u4eba\u501f\u7528\u5b83\uff0c\u6216\u8005\u8a93\u8a00\uff0c\u5f53\u65f6\u95f4\u6765\u5e76\u8986\u76d6\u77ed\u65f6\u95f4\u65f6\uff0c\u8a93\u8a00\u201c\u627e\u5230\u201d\u5e93\u5b58\u3002\n  \u8be5\u627f\u8bfa\u901a\u5e38\u662f\u5047\u7684\u3002\u7ecf\u7eaa\u4eba\u5904\u7406\u51e0\u4e2a\u5356\u5bb6\u5c06\u501f\u7528\u5408\u6210\u6216\u5236\u9020\u7684\u80a1\u7968\uff0c\u6216\u201c\u627e\u5230\u201d\u591a\u4e2a\u77ed\u88e4\u7684\u76f8\u540c\u80a1\u7968\u3002\u8d38\u6613\u5546\u548c\u7ecf\u7eaa\u4eba\u5bf9\u8fd9\u4e2a\u9a97\u5c40\u6709\u6e29\u548c\u7684\u5236\u88c1\u3002\n  \u5356\u5bb6\u5e94\u8be5\u5728\u4e24\u5929\u5185\u5411\u4e70\u5bb6\u5bc4\u51fa\u80a1\u7968\u3002\u5982\u679c\u4ed6\u4eec\u6ca1\u6709\u4f20\u8fbe\u5e93\u5b58\uff0c\u5219\u4f1a\u5931\u8d25\uff08FTD\uff09\u3002\u8fd9\u4e5f\u88ab\u79f0\u4e3a\u88f8\u4f53\u5356\u7a7a\u3002\u62e5\u6709\u4f18\u79c0FTD\u7684\u4ea4\u6613\u5458\u9700\u8981\u5728\u7ed9\u5b9a\u65f6\u95f4\u5185\u8f6c\u79fb\u80a1\u7968\uff0c\u5e76\u9650\u5236\u5728\u6b64\u4e4b\u524d\u7684\u9500\u552e\u77ed\u6682\u3002\u8fd9\u6761\u89c4\u5219\u662f\u5927\u89c4\u6a21\u5ffd\u89c6\u6216\u5584\u610f\u7684\uff0c\u60e9\u7f5a\u5f88\u5c0f\u3002 \n\u4e3b\u8981\u7684GME\u77ed\u5356\u5bb6\u5728\u8d44\u91d1\u77ed\u7f3a\u7684\u65f6\u95f4\u5185\u8986\u76d6\u4ed6\u4eec\u7684\u77ed\u88e4\uff0c\u800c\u4e0d\u662f\u73b0\u6709\u7684\uff0c\u5e76\u4e14\u5f53\u5b9e\u9645\u80a1\u7968\u6ca1\u6709\u9500\u552e\u65f6\uff0c\u5373\u4f7f\u4ee5\u8f83\u9ad8\u7684\u4ef7\u683c\u4e5f\u662f\u5982\u6b64\u3002\u4ed6\u4eec\u53d7\u5230\u77ed\u6682\u7684\u6324\u538b\u5a01\u80c1\uff0c\u4ef7\u683c\u5982\u6b64\u4e4b\u9ad8\uff0c\u4ed6\u4eec\u65e0\u6cd5\u901a\u8fc7\u73b0\u6709\u8d44\u4ea7\u6db5\u76d6\u5b83\uff0c\u4ed6\u4eec\u5f97\u5230\u4fdd\u8bc1\u91d1\uff0c\u9700\u6c42\u989d\u5916\u7684\u8d44\u91d1\u88ab\u4e22\u5f03\u5230\u4ed6\u4eec\u7684\u7ecf\u7eaa\u8d26\u6237\u4e2d\u3002\n  \u77ed\u6324\u538b\u5728\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\u7ed3\u675f\u3002 1\u670828\u65e5\u5728GME LED Robinhood\u4e2d\u98d9\u5347\uff0c\u4e3a\u8bb8\u591a\u96f6\u552e\u4ea4\u6613\u5458\u5904\u7406\u8ba2\u5355\u7684\u5728\u7ebf\u7ecf\u7eaa\u4eba\uff0c\u4ece\u5176\u5e94\u7528\u4e2d\u524a\u51cf\u80a1\u7968\u7684\u8d2d\u4e70\u9009\u9879\u3002\u7f57\u6bd4\u8d6b\u9996\u5e2d\u6267\u884c\u5b98Vlad Tenev\u4e8e\u4e8c\u6708\u544a\u8bc9\u8bae\u9662\u91d1\u878d\u670d\u52a1\u59d4\u5458\u4f1a\uff0c\u4ed6\u8ba8\u8bba\u4e86\u4e0e\u5b58\u6b3e\u4fe1\u6258\u548c\u6e05\u7b97\u516c\u53f8\uff08DTCC\uff09\u7684\u8d38\u6613\u9650\u5236\uff0c\u8be5\u200b\u200b\u516c\u53f8\u5728\u8fbe\u5230\u4e8630\u4ebf\u7f8e\u5143\u7684\u4fdd\u8bc1\u91d1\u4e4b\u540e\uff0c\u8be5\u516c\u53f8\u660e\u786e\u516c\u5f00\u4ea4\u6613\u3002\n  \u60a8\u7684\u6350\u6b3e\u5c06\u514d\u8d39\u548c\u6253\u5f00\u6b64\u7f51\u7ad9\u4ee5\u9605\u8bfb\u3002\u7ed9\u4f60\u80fd...\n \u7136\u800c\uff0cDTCC\u9996\u5e2d\u6267\u884c\u5b98Michael Bodson\u57285\u6708\u4efd\u544a\u8bc9\u59d4\u5458\u4f1a\u8ba4\u4e3a\uff0c\u201c\u9650\u5236\u4ea4\u6613\u7684\u51b3\u5b9a\u786e\u5b9e\u662f\u7f57\u4f2f\u5229\u7684\u5185\u90e8\uff0c\u6211\u4eec\u6ca1\u6709\u5173\u4e8e\u8fd9\u4e00\u70b9\u7684\u8ba8\u8bba\u3002\u201d\u4ed6\u6307\u51fa\uff0c\u968f\u7740\u7f57\u5bbe\u60c5\u8c0a\uff0c\u201c\u8be5\u7cfb\u7edf\u5de5\u4f5c\u3002\u201d\u5b83\u505c\u6b62\u4e86\u8d2d\u4e70\uff0c\u800c\u5927\u578b\u4ea4\u6613\u5458\u7ee7\u7eed\u51fa\u552e\u3002\u90a3\u5929\u53d7\u5230483\u7f8e\u5143\u7684GME\uff0c\u4f46\u968f\u540e\u4ef7\u683c\u66b4\u8dcc\uff0c\u77ed\u6324\u538b\u7ed3\u675f\u4e86\u3002\n  \u7f57\u5bbe\u5c3c\u4e3a\u4ec0\u4e48\u8981\u5173\u95edGME\u4ea4\u6613\uff1f\u5b83\u6ca1\u6709\u8d54\u94b1\uff0c\u56e0\u4e3a\u5b83\u6ca1\u6709\u81ea\u5df1\u7684\u6295\u8d44\u3002\u7b54\u6848\u53ef\u80fd\u9690\u85cf\u5728\u6d89\u53ca\u5e02\u573a\u5236\u9020\u5546\u548c\u5bf9\u51b2\u57fa\u91d1\u7684\u6df7\u4e71\u5173\u7cfb\u4e2d\u3002\n  Citadel Securities\uff0c\u4e00\u4e2a\u5e02\u573a\u5236\u9020\u5546\uff0c\u5904\u7406\u4e86\u7f57\u5bbe\u65f6\u4ee3\u7684\u8ba2\u5355\uff0c\u5c31\u201c\u8ba2\u5355\u6d41\u91cf\u4ed8\u8d39\u201d\u7684\u547d\u4ee4\uff08\u5b83\u652f\u4ed8\u7ed9\u5b83\u7684\u8ba2\u5355\uff09\uff0c\u5176\u4e2d40\uff05\u7684\u7f57\u6bd4\u8d6b\u7684\u6536\u5165\u3002 Citadel Securities\u662f\u4e00\u5bb6\u7531\u4ebf\u4e07\u5bcc\u7fc1\u80af\u683c\u91cc\u82ac\u6210\u7acb\u7684\u516c\u53f8\u90e8\u95e8\u3002 Citadel\u5bf9\u51b2\u57fa\u91d1\u53e6\u4e00\u4e2a\u90e8\u95e8\uff0c\u5e2e\u52a9\u5728GME\u77ed\u6324\u538b\u671f\u95f4\u63d0\u4f9b\u8fd130\u4ebf\u7f8e\u5143\u7684\u5356\u5bb6\u6885\u5c14\u6587\u8d44\u672c\u3002\u9274\u4e8e\u5176\u5728Melvin\u7684\u6295\u8d44\uff0cCitadel Securities\u5c06\u6709\u5229\u4e8e\u4fa6\u63a2\u5b88\u65e7\u7684\u811a\u6b65\uff0c\u4ee5\u53ca\u52a8\u673a\u548c\u52a8\u673a\u3002 \uff08\u66f4\u65b0\uff1a2\u6708\u4efd\u5728\u4e8c\u6708\u7684\u5ba3\u8a93\u6cd5\u9662\u8bc1\u8bcd\u4e2d\u9648\u8ff0\u4e86\u7f57\u5bbe\u79d1\u00b7\u96c5\u5404\u8a79\u59c6\u65af\uff0c\u5728\u52a0\u5dde\u4e3e\u884c\u7684\u6848\u4f8b\uff0c\u5373\u201c\u6ca1\u6709\u7b2c\u4e09\u65b9\uff0c\u5305\u62ec\u57ce\u5821\u6216\u57ce\u5821\u8bc1\u5238\uff0c\u8981\u6c42\u62a2\u52ab\u961f\u5728\u80a1\u7968\u6216\u671f\u6743\u4ea4\u6613\u6216\u5728\u51b3\u5b9a\u4e2d\u53d1\u6325\u4efb\u4f55\u4f5c\u7528\u7684\u9650\u5236\u9650\u5236\u4ea4\u6613\u3002\uff09\n  \u57ce\u5821\u8bc1\u5238\u4e5f\u6709\u4e00\u4e2a\u7ade\u4e89\u8d38\u6613\u6cd5\u7684\u8bc0\u7a8d\u3002\u8fdd\u53cd\u4ea4\u6613\u6761\u4f8b\u7684\u8fc7\u53bb\u51e0\u5e74\u5df2\u88ab\u7f5a\u6b3e58\u6b21\uff0c\u8bb8\u591a\u5173\u4e8e\u8d64\u88f8\u7684\u5356\u7a7a\u3002 2021\u5e742\u6708\uff0c\u4e0eGME\u4ea4\u6613\u76f8\u540c\u7684\u65f6\u95f4\u6846\u67b6\uff0cCitadel\u8bc1\u5238\u88ab\u7f5a\u6b3e10,000\u7f8e\u5143\uff0c\u672a\u80fd\u7ed3\u675f\u672a\u80fd\u63d0\u4f9b\u5356\u51fa\u7684\u80a1\u7968\u3002 \n\u5173\u4e8eGME\u662f\u5426\u662f\u957f\u671f\u548c\u77ed\u671f\u5bf9\u51b2\u57fa\u91d1\u6218\u5f79\u7684\u77db\u76fe\uff0c\u65e0\u8bba\u662f\u901a\u8fc7\u8235\u624b\u548c\u5176\u4ed6\u8d38\u6613\u5e94\u7528\u7a0b\u5e8f\u7684\u96f6\u552e\u6295\u8d44\u8005\u662f\u5426\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\uff0c\u4e5f\u53ef\u80fd\u4e5f\u662f\u4e24\u8005\u3002\n  \u7ecf\u6d4e\u54a8\u8be2\u516c\u53f8SoneCon\u4e3b\u5e2d\u548c\u5f17\u62c9\u7279\u514b\u6797\u987f\u7ecf\u6d4e\u4e8b\u52a1\u526f\u4e1a\u7684\u7f57\u4f2f\u7279Shapiro\u8463\u4e8b\u957f\u548c\u5546\u4e1a\u526f\u4e1a\uff0c\u76f8\u4fe1\u5bf9\u51b2\u57fa\u91d1\u7406\u8bba\u4e4b\u95f4\u7684\u6218\u4e89\uff0c\u5177\u6709\u5065\u5eb7\u7684\u201c\u6cf5\u548c\u503e\u5012\u201d\u7684\u5e02\u573a\u64cd\u7eb5\u548c\u8d64\u88f8\u7684\u77ed\u6682\u9500\u552e\u3002 Shapiro\u5728SEC\u4e4b\u524d\u4f5c\u8bc1\u5e76\u6279\u8bc4\u5b83\u672a\u80fd\u5bf9\u88f8\u9732\u7684\u77ed\u8def\u8fdb\u884c\u6709\u6548\u7684\u63aa\u65bd\u3002\n  \u5728\u534e\u76db\u987f\u6708\u520a\u4e2d\uff0c\u590f\u76ae\u7f57\u89e3\u91ca\u8bf4\uff0c\u201cGameStop\u8fd1\u4e94\u500d\u7684\u8df3\u8dc3\u4ece7\u6708\u523012\u6708\u7684Parkestop\u7684\u5e73\u5747\u4ea4\u6613\u91cf\u6765\u8868\u793a\u5927\u578b\u673a\u6784\u6295\u8d44\u8005\u6b63\u5728\u8d2d\u4e70[\u548c\u9500\u552e]\u5e93\u5b58......\u8fd9\u4e9b\u80a1\u4ef7\u4e2d\u7684\u91ce\u751f\u6ce2\u6d6a\u4ef7\u683c\u53cd\u6620\u4e86\u6570\u4ebf\u6bcf\u5929\u4ea4\u6613\u7684\u80a1\u7968\uff0c\u4e3b\u8981\u662f\u5927\u5757\uff0c\u5e76\u4ece\u4e00\u4e2a\u5bf9\u51b2\u57fa\u91d1\u5230\u53e6\u4e00\u4e2a\u5bf9\u51b2\u57fa\u91d1\u3002\u201c\u4ed6\u4f30\u8ba1\uff0cGameStop\u77ed\u88e4\u7684\u5927\u7ea62000\u4e07\u6216\u66f4\u591a\u4eba\u4ece\u672a\u501f\u8fc7\uff0c\u4ece\u672a\u9001\u5230\u4ed6\u4eec\u7684\u4e70\u5bb6\u3002\n  GameStop\u64cd\u4f5c\u7684\u5176\u4ed6\u6587\u4ef6\u6765\u81eaWallstreetbets Spinoff\u7f51\u7ad9Superstonk\u7684\u5c11\u6570\u4eba\uff0c\u4ed6\u4eec\u5bf9SEC\u548cFinra\uff08\u7ecf\u7eaa\u4eba\u7684\u201c\u81ea\u6211\u76d1\u7ba1\u673a\u6784\u201d\uff09\uff0c\u6765\u81ea\u5f6d\u535a\u548c\u5176\u4ed6\u516c\u5171\u6765\u6e90\u7684\u80a1\u7968\u62a5\u544a\u3002 \uff08\u201cStonk\u201d\u662f\u4ed6\u4eec\u7684\u970d\u7279\u8bed\u65b9\u5f0f\u3002\uff09\u8fd9\u91cc\u62a5\u544a\u7684\u5927\u90e8\u5206\u6570\u636e\u6765\u81ea\u4ed6\u4eec\u7684\u5e16\u5b50\uff0c\u8fd9\u4e9b\u6570\u636e\u90fd\u662f\u516c\u5171\u548c\u53ef\u9a8c\u8bc1\u7684\u3002\n   \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709SEC\u548cDTCC\u53ef\u4ee5\u83b7\u5f97\u5c06\u663e\u793a\u4efb\u4f55\u6b3a\u8bc8\u8ba1\u5212\u8bc1\u660e\u7684\u4ea4\u6613\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u901a\u8fc7\u516c\u5f00\u7684\u6570\u636e\uff0cSuperstonk\u7528\u6237\u68c0\u6d4b\u5230\u5236\u4f5c\u5f3a\u6709\u529b\u7684\u6a21\u5f0f\uff0c\u81f3\u5c11\u8c03\u67e5\u6b64\u4e8b\u3002\n  \u4f8b\u5982\uff0cU / Broccaaa\uff0cSuperstonk\u7528\u6237\uff0c\u901a\u8fc7SEC\u7533\u8bf7\u63d0\u4f9b\u4e86\u5927\u578bGME\u4f4d\u7f6e\u7684\u8d44\u91d1\u3002\u50cfMelvin\u548cMaplelane\u8fd9\u6837\u7684\u5927\u8f93\u5bb6\u5728GME\u4e2d\u6ca1\u6709\u80a1\u7968\uff0c\u5927\u578b\u6295\u653e\uff0c\u8fd9\u662f\u51fa\u552e\u7684\u9009\u62e9\u3002\u6839\u636eU / Broccaaa\u7684\u8bf4\u6cd5\uff0c\u8fd9\u662f\u80a1\u7968\u4e2d\u7684\u5e38\u89c1\u7279\u5f81\uff0c\u80a1\u7968\u5c1a\u672a\u8f6c\u79fb\u3002\u4ed6\u5c06\u5176\u63cf\u8ff0\u4e3a\u201c\u88f8\u4f53\u77ed\u9014\u4ea4\u6613\u7684\u652f\u6301\u8bc1\u636e...... 12\u6708\u5e95\u548c1\u6708\u521d\u77ed\u6682\u7684\u5174\u8da3\uff0c\u5e76\u4e14\u672a\u80fd\u901a\u8fc7\u5c4b\u9876\u4ea4\u4ed8\u3002\u201d\n  \u6d6e\u52a8\u662f\u516c\u53f8\u53d1\u51fa\u7684\u80a1\u4efd\u6570\u91cf\uff0c\u53ef\u7528\u4e8e\u6295\u8d44\u8005\u8fdb\u884c\u4ea4\u6613\u3002\u6240\u6709\u80a1\u4efd\u90fd\u5728DTC\uff08\u5b58\u6b3e\u4fe1\u6258\u516c\u53f8\uff09\uff0cDTCC\u7684\u201cVault\u201d\uff0c\u201c\u4e1a\u4e3b\u201d\u53ea\u6709\u6570\u5b57\u6743\u5229\u3002\u5728\u77ed\u671f\u6324\u538b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f6d\u535a\u7ec8\u7aef\u6570\u636e\u7ecf\u5e38\u51fa\u73b0\u8d85\u8fc7100\uff05\u7684\u53d7\u673a\u6784\u6301\u6709\u7684GME\u6d6e\u52a8\uff0c\u800c\u4e0d\u662f\u96f6\u552e\u6295\u8d44\u8005\u3002 \uff08\u5728\u77ed\u6324\u538b\u540e\uff0c\u8fd9\u901f\u5ea6\u8fc5\u901f\u4e0b\u964d\u3002\uff09 \n\u4e00\u4e9b\u989d\u5916\u7684\u80a1\u4efd\u662f\u7531\u4e8e\uff0c\u5728\u77ed\u671f\u9500\u552e\u548c\u7ed3\u7b97\u4e4b\u95f4\u7684\u65f6\u95f4\u5185\uff0c\u53cc\u65b9\u90fd\u6709\u5408\u6cd5\u7684\u6570\u5b57\u6743\u5229\u3002\u7531\u4e8eSEC\u6587\u4ef6\u7684\u6027\u8d28\uff0c\u53ef\u80fd\u4f1a\u6709\u53cc\u91cd\u8ba1\u6570\u3002\u4f46\u8bc1\u636e\u8868\u660e\uff0c\u8bb8\u591a\u80a1\u7968\u4ece\u672a\u89e3\u51b3\u8fc7\u3002\u8be5\u95ee\u9898\u672a\u80fd\u63d0\u4f9b\u3002\n  \u6839\u636eSEC\u89c4\u5219\uff0c\u672a\u5728\u524d\u4e94\u4e2a\u4ea4\u6613\u65e5\u5185\u672a\u80fd\u63d0\u4f9b\u7684\u516c\u53f8\u7684\u80a1\u4efd\u53d6\u51b3\u4e8e\u201c\u95e8\u69db\u6e05\u5355\u201d\u3002 GameStop\u5728\u6b64\u540d\u5355\u4e0a\u7684\u7b2c\u4e00\u4e2a\u65e5\u671f\u662f2020\u5e749\u670822\u65e5\u3002\n  \u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u5185\uff0c\u80a1\u7968\u5931\u8d25\uff0c\u5bfc\u81f4Gamestop\u572812\u67088\u65e5\u548c2\u67083\u65e5\u4e4b\u95f4\u8fdb\u884c\u4e8639\u5929\u7684\u9608\u503c\u6e05\u5355\uff0c\u5176\u4e2d\u6570\u4ebf\u80a1\u672a\u80fd\u63d0\u4f9b\u3002\n   Gme\u5982\u4f55\u5728\u5217\u8868\u4e2d\u8fdb\u884c\u8fd9\u4e48\u957f\u65f6\u95f4\uff1f\u76d1\u7ba1\u673a\u6784\u6709\u6743\u4e86\u89e3\u54ea\u4e9b\u7ecf\u7eaa\u4eba\u672a\u80fd\u63d0\u4f9b\u4ea4\u4ed8\uff0c\u4fc3\u8fdb\u88f8\u4f53\u77ed\u88e4\u3002\u4f46DTCC\u5386\u53f2\u60a0\u4e45\u5730\u51fb\u8d25\u4e86\u63ed\u793a\u88f8\u5356\u7f6a\u9b41\u7978\u9996\uff0c\u751a\u81f3\u6807\u8bb0\u201c\u501f\u6765\u7684\u201d\u80a1\u7968\uff08\u79f0\u4e3a\u786c\u501f\u6b3e\uff09\uff0c\u6240\u4ee5\u4ed6\u4eec\u4e0d\u80fd\u201c\u4f4d\u4e8e\u201d\u4e0d\u6b62\u4e00\u6b21\u3002\u6211\u4ee5\u524d\u5199\u8fc7\u5173\u4e8eDTCC\u5982\u4f55\u56de\u5230\u652f\u6301\u96c6\u4e2d\u5f0f\u6570\u636e\u5e93\uff0c\u8be5\u6570\u636e\u5e93\u5c06\u963b\u6b62\u76f8\u540c\u7684\u80a1\u4efd\u7528\u4e8e\u591a\u4e2a\u77ed\u9500\u552e\u989d\u3002\n  \u201c\u80a1\u7968\u5728\u95e8\u69db\u6e05\u5355\u4e0a\u6ca1\u6709\u5408\u6cd5\u7684\u65b9\u5f0f\uff0c\u201dJohn Welborn\u8868\u793a\uff0c\u5728\u8fbe\u7279\u8305\u65af\u6559\u6388\u7ecf\u6d4e\u5b66\u3002 \u201c\u552f\u4e00\u7684\u89e3\u91ca\u662f\u76d1\u7ba1\u51b7\u6f20\u6216\u66f4\u7cdf\u3002\u201d\u56e0\u4e3a\u517c\u5bb9\u7684\u76d1\u7ba1\u673a\u6784\u9009\u62e9\u4e0d\u8ddf\u8e2a\u77ed\u88e4\uff0c\u6240\u4ee5\u4ea4\u6613\u8005\u53ef\u4ee5\u4ece\u4e8b\u6076\u4f5c\u5267\u3002\n      2007\u5e74\uff0c\u5728\u7ebf\u96f6\u552e\u5546\u5375\u5f62\u8d85\u8d8a\u4e86\u4e3b\u8981\u7684\u4e3b\u8981\u7ecf\u7eaa\u4eba\uff0c\u4e3a\u88f8\u4f53\u7f29\u77ed\u5176\u80a1\u7968\uff0c\u521b\u9020\u6df9\u6ca1\u5e02\u573a\u7684\u4f2a\u9020\u80a1\u7968\uff0c\u4f7f\u5176\u80a1\u4ef7\u4ece70\u7f8e\u5143\u964d\u81f320\u7f8e\u5143\u3002\u5b83\u63d0\u51fa\u4e86\u8bc1\u636e\u8868\u660e\uff0c\u9ad8\u76db\u4e3a\u80a1\u7968\u8d37\u6b3e\u521b\u9020\u4e86\u5047\u5e93\u5b58\u3002\n  \u8fd9\u662f\u4e00\u4e2a\u57282011\u5e74\u7684overstock\u6cd5\u9662\u6c89\u79ef\u4e2d\u63cf\u8ff0\u7684\u5185\u5e55\u4e66\u7c4d\uff1a\u201c\u516c\u53f8\u6216\u5e02\u573a\u5236\u9020\u5546\u5c06\u901a\u8fc7\u5728\u5176\u4e2d\u7684\u9009\u62e9\u4ea4\u6613\u4e2d\u7efc\u5408\u521b\u9020\u4e00\u4e2a\u77ed\u804c\u4f4d\uff0c\u8d2d\u4e70\u5e93\u5b58\uff0c\u9500\u552e\u7535\u8bdd\u6216\u8d2d\u4e70\u6295\u653e\u6216\u8005\u8fd9\u4e00\u60c5\u51b5\u5176\u4ed6\u3002\u901a\u8fc7\u8d2d\u4e70\u80a1\u7968\uff0c\u4ed6\u4eec\u53ef\u4ee5\u521b\u9020\u501f\u51fa\u671f\u6743\u8d38\u6613\u3002\u201c \n\u5728\u8f6c\u6362\u8d38\u6613\u4e2d\uff0c\u4e00\u4e2a\u9009\u9879\u5e02\u573a\u5236\u9020\u5546\u5728\u4e00\u65b9\u9762\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u4e00\u4e2a\u4e3b\u8981\u7ecf\u7eaa\u4eba\u3002\u5b83\u4e0d\u662f\u771f\u6b63\u7684\u5e02\u573a\u5236\u4f5c\uff0c\u5373\u5728\u4e2d\u95f4\uff0c\u6240\u4ee5\u6240\u6709\u7684\u4ea4\u6613\u8005\u90fd\u53ef\u4ee5\u4e70\u5356\u80a1\u7968\uff0c\u6216\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9009\u62e9\u3002 \u201c\u8d38\u6613\u7684\u76ee\u6807\u662f\u83b7\u5f97\u8d37\u6b3e\u8d37\u6b3e\u5e93\u5b58\u5e93\u5b58\uff0c\u201d\u97e6\u5c14\u535a\u6069\u8bf4\u3002\n  \u4f60\u600e\u4e48\u5230\u90a3\u7684\uff1f\u4f60\u901a\u8fc7\u8fd9\u4e2a\u8f6c\u6362\u4f0e\u4fe9\u5230\u8fbe\u90a3\u91cc\u3002\u9996\u5148\uff0c\u9009\u9879\u5e02\u573a\u5236\u9020\u5546\u9500\u552e\u9ec4\u91d1\u7ecf\u7eaa\u4eba\u4e00\u4e2a\u4ece\u672a\u4ece\u5e02\u573a\u5236\u9020\u5546\u90a3\u91cc\u817e\u51fa\u7684\u88f8\u4f53\u77ed\u7247\u3002\u8fd9\u662f\u201c\u4ea4\u6613\u4e2d\u6700\u91cd\u8981\u7684\u4e00\u6761\u961f\u4f0d\u201d\uff0c\u5a01\u5c14\u672c\u5730\u89e3\u91ca\u9053\u3002\u5e02\u573a\u5236\u9020\u5546\u8fd8\u9500\u552e\u4e86\u4e00\u4efd\u9009\u9879\uff08\u5c06\u6765\u8d2d\u4e70\u80a1\u7968\u7684\u9009\u9879\uff09\u5230\u7ecf\u7eaa\u4eba\u3002\u8fd9\u4f7f\u5f97\u5e02\u573a\u5236\u9020\u8005\u6210\u4e3a\u4e2d\u7acb\u4f4d\u7f6e\uff0c\u4f46\u7ecf\u7eaa\u4eba\u53ef\u4ee5\u4fdd\u6301\u201c\u957f\u201d\u4f4d\u7f6e\uff0c\u597d\u50cf\u4ed6\u4eec\u62e5\u6709\u5e93\u5b58\u3002\n  \u7ecf\u7eaa\u4eba\u73b0\u5728\u53ef\u4ee5\u5411\u591a\u4e2a\u5ba2\u6237\u63d0\u4f9b\u8be5\u5e93\u5b58\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4e3b\u8981\u7ecf\u7eaa\u4eba\u548c\u5e02\u573a\u5236\u9020\u5546\u6b63\u5728\u521b\u9020\u51fa\u8584\u7a7a\u6c14\u4e2d\u7684\u5047\u76c8\u826f\u80a1\u3002\u6700\u7ec8\u7ed3\u679c\u662f\u7ec4\u7ec7\u5e02\u573a\u4e0a\u80a1\u7968\u7684\u4f2a\u9020\u3002\n  \u76d1\u7ba1\u673a\u6784\u6ca1\u6709\u63d0\u4f9b\u8db3\u591f\u7684\u900f\u660e\u5ea6\u6765\u96ea\u8c82\u51fa\u6765\u3002\u4f5c\u4e3a\u97e6\u5c14\u535a\u6069\u8bf4\uff0c\u201c\u76d1\u7ba1\u673a\u6784\u544a\u8bc9\u6211\u4eec\u6709\u5931\u8d25\u4f46\u4e0d\u8981\u544a\u8bc9\u6211\u4eec\u8c01\u6ca1\u6709\u5931\u8d25\u3002\u9152\u5546\u5e97\u6b63\u5728\u88ab\u62a2\u52ab\uff0c\u4f46\u4ed6\u4eec\u5e76\u6ca1\u6709\u544a\u8bc9\u6211\u4eec\u8c01\u62a2\u52ab\u4e86\u5546\u5e97\u3002\u201c\n  \u6765\u81eaGoldman Sachs\u7684overstock\u6848\u4f8b\u6709\u5de8\u5927\u7684\u8bc1\u636e\u6765\u81ea\u8fd9\u79cd\u505a\u6cd5\uff0c\u5305\u62ec\u4e00\u5c01\u6765\u81ea\u7ecf\u7eaa\u4eba\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6839\u636e\u8fd9\u79cd\u8f6c\u6362\u4ea4\u6613\u201c\u521b\u5efa\u5e93\u5b58\uff0c\u4ee5\u5141\u8bb8\u5ba2\u6237\u7f29\u77ed\u201d\u3002\u5f53\u970d\u5c14\u66fc\u00b7\u5f8b\u5e08\u5728Pacer\u72af\u9519\u540e\uff0c\u5728\u8054\u90a6\u6cd5\u9662\u5728\u7ebf\u7533\u8bf7\u5236\u5ea6\u4e4b\u524d\u53d1\u5e03\u4e86\u4ee4\u4eba\u8d39\u89e3\u7684\u8bc1\u636e\u65f6\uff0cGoldman\u4e8e2015\u5e74\u57282015\u5e74\u7ed3\u7b97\u4e862000\u4e07\u7f8e\u5143\u3002\n    \u5e02\u573a\u64cd\u7eb5\u7684\u660e\u663e\u8ff9\u8c61\u662f\u5de8\u5927\u7684\u77ed\u6682\u5174\u8da3\uff0c\u5df2\u552e\u51fa\u7684\u80a1\u7968\u6570\u91cf\u77ed\u4f46\u5c1a\u672a\u8986\u76d6\u3002\u8fd9\u4e9b\u53ef\u4ee5\u5728\u6cd5\u5f8b\u4e0a\u501f\u7528\u9996\u6b21\u5b9a\u4f4d\u7684\u80a1\u4efd\u3002\u7136\u800c\uff0cGameStop\u786e\u5b9e\u6709\u8d85\u8fc7100\uff05\u7684\u77ed\u6682\u5174\u8da3\uff0c\u5305\u62ec1\u6708\u4efd\u7684140\uff05\uff0c\u8fd9\u610f\u5473\u7740\u66f4\u591a\u7684\u80a1\u4efd\u88ab\u62a5\u544a\u4e3a\u77ed\u552e\u51fa\u7684\u80a1\u7968\uff0c\u800c\u4e0d\u662f\u8d38\u6613\u7684\u6240\u6709\u80a1\u7968\u3002\n  U / Rainforest11\u7684Superstonk\u89e3\u91ca\u8bf4\uff0cFinra\u62a5\u544a\u4e861\u6708\u4efdGME\u72c2\u70ed\u7684\u9ad8\u5ea6\u7684226\uff05\u7684226\uff05\u7684\u5174\u8da3\u3002\u8fd9\u610f\u5473\u7740\u73b0\u5b9e\u4e2d\u5b58\u5728\u7684\u4e24\u500d\u4ee5\u4e0a\u7684\u80a1\u4efd\u5df2\u7ecf\u51fa\u552e\u4e86\u4e00\u70b9\u3002\u622a\u81f31\u670828\u65e5\uff0cS3\uff0c\u5e02\u573a\u6570\u636e\u516c\u53f8\u7684\u62a5\u544a\u79f0\uff0c\u8fbe\u5230122\uff05\u3002 \n\u5047\u5192\u80a1\u7968\u53ef\u80fd\u88ab\u7528\u4f5c\u201c\u8d37\u6b3e\u201d\uff0c\u4ee5\u6db5\u76d6\u51fb\u5012\u80a1\u4ef7\u7684\u88f8\u4f53\u77ed\u6682\u653b\u51fb\u3002\u77ed\u6682\u7684\u6d6e\u70b9\u8d85\u8fc7100\uff05\u7684\u6d6e\u70b9\uff0c\u6ca1\u6709\u8db3\u591f\u7684\u771f\u5b9e\u80a1\u7968\u501f\u94b1\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u672a\u80fd\u5411\u4e70\u5bb6\u63d0\u4f9b\u3002\n  \u4e0b\u56fe\u8868\u663e\u793a\u4e86GameStop\u80a1\u7968\u7684\u767e\u5206\u6bd4\uff0c\u672a\u80fd\u57282020\u5e741\u6708\u5f00\u59cb\u548c2011\u5e741\u6708\u5e95\u4e4b\u95f4\u63d0\u4f9b\u7684\u6e38\u620f\u80a1\u7968\u3002FTDS\u5728\u603b\u80a1\u4efd\u76841\uff05\u548c5\uff05\u4e4b\u95f4\u53ef\u80fd\u770b\u8d77\u6765\u50cf\u5c11\u6570\uff0c\u800c\u662f\u4f5c\u4e3a\u7f51\u7ad9\u80a1\u7968\u95ee\uff1a\u201c\u5982\u679c1\uff05\uff0c2\uff05\uff0c4\uff05\u7684\u94f6\u884c\u5b58\u6b3e\u672a\u80fd\u51fa\u73b0\uff1f\u201d\n   \u77ed\u6682\u7684\u6324\u538b\u51e0\u4e4e\u662f\u5bf9\u51b2\u57fa\u91d1\u7684\u707e\u96be\u3002 U / Rainforest11\u89e3\u91ca\u8bf4\uff1a\u201c\u5047\u8bbe[\u80a1\u4ef7]\u98d9\u5347\u81f31000\u7f8e\u5143\u6216\u4ee5\u4e0a......\u5bf9\u51b2\u57fa\u91d1\u53ef\u80fd\u4f1a\u7834\u4ea7\uff0c\u56e0\u4e3a\u8d22\u52a1\u4e0a\u8bb2\uff0c\u4ed6\u4eec\u5c06\u65e0\u6cd5\u6db5\u76d6\u6240\u6709\u200b\u200b\u77ed\u88e4\uff0c\u5e76\u4e14\u53ef\u80fd\u662f\u501f\u51fa\u77ed\u8fb9\u7684\u5b9e\u4f53\u5bf9\u51b2\u57fa\u91d1\u7684\u80a1\u7968\u662f\u77ed\u6682\u7684\u6301\u6709\u5305\u3002\u201c\n  \u4f46\u867d\u7136GME\u7684\u52bf\u5934\u4e8e1\u670828\u65e5\u5728\u4e00\u4e2a\u9876\u70b9\uff0c\u4f46\u80a1\u7968\u6c47\u7387\u6da8\u81f3513\u7f8e\u5143\u7684\u80a1\u7968\u5728\u524d\u4ea4\u6613\u4e2d\uff0c\u7f57\u5bbe\u79d1\u7a81\u7136\u5173\u95ed\u4e86\u8d2d\u4e70GME\u7684\u80fd\u529b\u3002\u63a5\u4e0b\u6765\u7684\u5176\u4ed6\u51e0\u4f4d\u7ecf\u7eaa\u4eba\u3002\u5728\u8be5\u5757\u4e4b\u540e\u7acb\u5373\u8d2d\u4e70\uff0cFTD\u548c\u77ed\u5174\u8da3\u5e45\u5ea6\u5927\u5e45\u4e0b\u964d\u3002\u4ef7\u683c\u4e5f\u8fc5\u901f\uff0c\u8fd9\u662f\u88f8\u4f53\u8f83\u77ed\u7684\u60f3\u8981\u7684\u3002\n  U / Broccaaa\u5e0c\u671b\u8bc1\u660e\u64cd\u7eb5\uff0c\u8d64\u88f8\u7684\u77ed\u5356\u5bb6\u5982\u4f55\u83b7\u5f97\u80a1\u7968\u5e76\u5173\u95edFTD\u3002\u4ed6\u8bbe\u8ba1\u4e86\u4e00\u79cd\u7b97\u6cd5\uff0c\u53ef\u4ee5\u68c0\u6d4b\u79f0\u4e3a\u201c\u5728\u8d27\u5e01\uff08ITM\uff09\u547c\u53eb\u7684\u6df1\u5ea6\u201d\u7684\u9009\u9879\u7c7b\u578b\uff0c\u8fd9\u4f7f\u5f97\u4e70\u5bb6\u53ef\u4ee5\u5927\u5e45\u4f4e\u4e8e\u5e02\u573a\u4ef7\u683c\u8d2d\u4e70\u80a1\u7968\u3002\n  \u201c\u968f\u7740FTDS\u98d9\u5347\uff0c\u5c40\u52bf\u53d8\u5f97\u8d8a\u6765\u8d8a\u4e0d\u53ef\u6301\u7eed\u52301\u6708\u5e95\u7684\u77ed\u88e4\uff0c\u975e\u6cd5\u6df1\u5ea6ITM\u9009\u9879\u8d2d\u4e70\u7528\u4e8e\u8d64\u88f8\u800c\u8d64\u88f8\u88f8\uff0c\u8986\u76d6FTD\uff0c\u201d\u4ed6\u8bf4\u3002\u4e0b\u9762\u7684\u56fe\u8868\u4ece\u5386\u53f2\u671f\u6743\u6570\u636e\u7f16\u5236\uff0c\u663e\u793a\u57281\u670827\u65e5\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u83b7\u5f97\u4e862500\u4e07\u80a1\u3002\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u79cd\u6280\u672f\u6700\u591a\u53ef\u8fbe150\u4e07\u88f8\u80a1\u4efd\u3002\u56fe\u8868\u8f68\u9053\u4e0a\u7684\u84dd\u7ebf\u672a\u80fd\u4f5c\u4e3a\u6d6e\u70b9\u6570\u7684\u767e\u5206\u6bd4\u4f20\u9012\u3002\u8fd9\u4e9b\u51e0\u4e4e\u6d88\u5931\u57281\u670827\u65e5\u4e4b\u540e\u3002\n     \u5df2\u5a5a\u7684\u662f\u4e00\u9879\u6cd5\u5f8b\u9009\u9879\u4ea4\u6613\u7b56\u7565\uff0c\u80a1\u7968\u4e2d\u7684\u6295\u8d44\u8005\u5728\u540c\u4e00\u80a1\u7968\u4e0a\u8d2d\u4e70\uff08\u4e00\u4e2a\u5356\u51fa\u7684\u9009\u9879\uff09\uff0c\u4ee5\u9632\u6b62\u80a1\u7968\u4ef7\u683c\u8d2c\u503c\u3002\u5f2f\u66f2\u7684\u5bf9\u51b2\u57fa\u91d1\u5c06\u540c\u65f6\u8d2d\u4e70\u4ece\u5e02\u573a\u5236\u9020\u5546\u8d2d\u4e70\u5e76\u8d2d\u4e70\u76f8\u540c\u6570\u91cf\u7684\u80a1\u7968\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5bf9\u51b2\u57fa\u91d1\u4ece\u5e02\u573a\u5236\u9020\u5546\u90a3\u91cc\u83b7\u5f97\u201c\u5e7b\u5f71\u201d\u80a1\u7968\uff0c\u53ef\u7528\u4e8e\u8986\u76d6\u65e7\u804c\u4f4d\u6216\u5728\u5e02\u573a\u4e0a\u9500\u552e\u4ee5\u538b\u5236\u4ef7\u683c\u3002 \n2003\u5e74\u7684\u7b2c\u4e8c\u7ae0\u8868\u793a\u5173\u5207\u7684\u662f\uff0c\u201c[S] OME\u7b56\u7565\u53ef\u80fd\u6d89\u53ca\u4e00\u4e2a\u5df2\u5a5a\u7684\u8bc1\u5238\u7684\u64cd\u7eb5\u9500\u552e\uff0c\u4f5c\u4e3a\u4e00\u9879\u8ba1\u5212\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u4ee5\u6291\u90c1\u7684\u4ef7\u683c\u8d2d\u4e70\u8bc1\u5238\u4ee5\u540e\u7684\u5229\u6da6\u3002\u201d\u5b83\u547c\u5401\u4ed6\u4eec\u201c\u5047\u4ea4\u6613\u201d\uff0c\u53ef\u80fd\u8fdd\u53cd\u79d2\u7684\u53cd\u6b3a\u8bc8\u548c\u53cd\u64cd\u7eb5\u6761\u6b3e\u3002\n  \u6839\u636eSuperstonk\u7528\u6237\u7684\u8bf4\u6cd5\uff0c\u8fd9\u4f3c\u4e4e\u662fGME\u7684\u5de5\u4f5c\u3002 13F\u5f62\u5f0f\u5fc5\u987b\u901a\u8fc7\u673a\u6784\u6295\u8d44\u8005\u5b63\u5ea6\u5411\u80a1\u7968\u63d0\u4ea4\uff0c\u81f3\u5c11\u67091\u4ebf\u7f8e\u5143\u7684\u80a1\u7968\u3002\u8fd9\u4e9b\u6700\u5927\u7684\u5df2\u77e5GME\u77ed\u5356\u5bb6\u7684\u7533\u8bf7\u8868\u73b0\u51fa\u5de8\u5927\u7684\u6295\u5165\u3002\u65b0\u7684\u6295\u5165\u9009\u9879\u5408\u7ea6\u57281\u6708\u5e95\u4e4b\u540e\u4ee3\u8868\u8d85\u8fc7300\uff05\u7684\u80a1\u4efd\u6240\u5f97\u80a1\uff0c\u8d85\u8fc72\u4ebf\u80a1\u3002 \u201cMelvin Capital\u5360\u5176\u4ef7\u503c\u768450\uff05\uff0c\u5360\u636e\u4e86600\u4e07\u80a1\uff0c\u201dU / Broccaaa\u8bf4\u3002\u8fd9\u79cd\u5927\u89c4\u6a21\u7684\u5c16\u5cf0\u8868\u660e\uff0c\u4f7f\u7528\u201c\u5e7b\u5f71\u80a1\u4efd\u201d\u548c\u201c\u6218\u7565\u6027\u672a\u80fd\u63d0\u4f9b\u201d\u7684\u77ed\u5934\u5df2\u9690\u85cf\u3002\n   \u968f\u7740U / Broccaaa\u7684\u8bf4\u6cd5\uff0c\u201c\u8fd9\u4ef6\u523a\u6fc0\u4e0e\u62a5\u544a\u7684\u77ed\u6682\u5174\u8da3\u548cFTDS\u7684\u4e0b\u964d\u5b8c\u5168\u4e00\u81f4\u3002\u201d\u4ed6\u8ba4\u4e3a\u5b83\u662f\u201c\u5927\u89c4\u6a21\u64cd\u7eb5\u7684\u6700\u6697\u793a\u7684\u8bc1\u636e\u201d\u3002\n  \u9009\u9879\u9a97\u5c40\u8fd8\u53ef\u4ee5\u91cd\u7f6e\u65f6\u949f\u65e0\u6cd5\u63d0\u4f9b\u3002\u8bf7\u8bb0\u4f4f\uff0c\u77ed\u6682\u7684\u5356\u5bb6\u6709\u4e24\u5929\u624d\u80fd\u627e\u5230\u80a1\u7968\u4ee5\u9632\u6b62FTD;\u5e02\u573a\u5236\u9020\u5546\u548c\u5176\u4ed6\u6388\u6743\u53c2\u4e0e\u8005\u53ef\u80fd\u6709\u957f\u8fbe\u516d\u5929\u3002\u8bc1\u5238\u89e3\u91ca\u4e86\u57282013\u7eb8\u4e2d\u79f0\u4e3a\u201c\u4e70\u5199\u201d\u7684\u4ea4\u6613\u7b56\u7565\u3002\u968f\u7740Investopedia\u89e3\u91ca\u8bf4\uff0c\u201c\u4e70\u5b57\u662f\u4e00\u4e2a\u9009\u9879\u4ea4\u6613\u7b56\u7565\uff0c\u6295\u8d44\u8005\u901a\u5e38\u4f1a\u8d2d\u4e70\u5b89\u5168\u6027\uff0c\u901a\u5e38\u662f\u5e93\u5b58\uff0c\u5e76\u5728\u5176\u4e0a\u63d0\u4f9b\u5907\u4efd\uff0c\u5e76\u540c\u65f6\u5199\u5165\uff08\u9500\u552e\uff09\u8be5\u5b89\u5168\u7684\u547c\u53eb\u9009\u9879\u3002\u201d\u8fd9\u79cd\u4f4d\u7f6e\u7684\u56de\u6536\u663e\u793a\u4e3a\u65b0\u7684\u4ea4\u6613\uff0c\u56e0\u6b64\u77ed\u9500\u552e\u8ba1\u65f6\u5668\u88ab\u91cd\u7f6e\u3002\u4ea4\u6613\u8005\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u4ea4\u4ed8\u80a1\u7968\uff0c\u56e0\u4e3a\u4ed6\u53ef\u4ee5\u901a\u8fc7\u4ea4\u6613\u6eda\u52a8\u5e76\u4e00\u904d\u53c8\u4e00\u904d\u5730\u8fdb\u884c\u4ea4\u6613\u3002\n  GME\u77ed\u5934\u5bf8\u4e5f\u53ef\u4ee5\u9690\u85cf\u5728\u4ea4\u6613\u6240\u4ea4\u6613\u8d44\u91d1\uff08ETF\uff09\u4e2d\uff0c\u8fd9\u662f\u4e00\u6b3e\u7c7b\u4f3c\u4e8e\u5171\u540c\u57fa\u91d1\u7684\u80a1\u7968\u3002 U / Broccaaa\u7684\u7814\u7a76\u8868\u660e\uff0c\u672a\u67652021\u5e741\u6708\u672a\u80fd\u4eceGME\u5411ETF\u8fc1\u79fb\u5230ETF\u3002\u62a5\u544a\u7684\u77ed\u6682\u5229\u606f\uff08GME + ETF\uff09\u7684\u603b\u4ef7\u503c\u4ecd\u7136\u9ad8\u8fbe270\u4ebf\u7f8e\u5143\u3002\n    \u5c3d\u7ba1\u77e5\u9053\u5982\u4f55\u8fd0\u9001\u4ee3\u8868\u5047\u4ea4\u6613\uff0c\u4f46\u79d2\u6709\u52a9\u4e8e\u4f7f\u7528FTDS\u53bb\u6b7b\u7684\u7cfb\u7edf\uff0c\u4fc3\u8fdb\u4e86\u5927\u578b\u7ecf\u7eaa\u4eba\u548c\u5bf9\u51b2\u57fa\u91d1\uff0c\u5176\u4e2d\u5305\u62ecFTDS\u7684\u7cfb\u7edf\uff1a\u9ed1\u6697\u7684\u6e38\u6cf3\u6c60\uff0c\u8be5\u6e38\u6cf3\u6c60\u59cb\u4e8e20\u4e16\u7eaa80\u5e74\u4ee3\uff0c\u73b0\u5728\u5904\u7406\u8d85\u8fc740\uff05\u7684\u4eba\u4ea4\u6613\u3002\n  \u9ed1\u6697\u6e38\u6cf3\u6c60\u662f\u7531\u4e3b\u8981\u94f6\u884c\u548c\u4e3b\u8981\u7ecf\u9500\u5546\u7ecf\u8425\u7684\u4e0d\u900f\u660e\u79c1\u4eba\u4ea4\u6613\u6240\uff0c\u5176\u4ed6\u6295\u8d44\u8005\u65e0\u6cd5\u8bbf\u95ee\u3002\u4ed6\u4eec\u88ab\u521b\u5efa\uff0c\u4ee5\u89e3\u51b3\u5bf9\u51b2\u57fa\u91d1\u548c\u673a\u6784\u6295\u8d44\u8005\u7684\u5927\u578b\u4ea4\u6613\uff0c\u800c\u4e0d\u4f1a\u79fb\u52a8\u5e02\u573a\u3002 \n\u6b63\u5982\u7f8e\u56fd\u59d4\u5458\u4f1a\u57282015\u5e74\u6240\u8ff0\uff1a\u201c\u7279\u5199\u7387\u8981\u6c42\u4ec5\u9002\u7528\u4e8e\u672a\u80fd\u5728\u6ce8\u518c\u6e05\u7b97\u673a\u6784\u7684\u80a1\u6743\u5b89\u5168\u4e2d\u63d0\u4f9b\u804c\u4f4d\u3002\u201d\u5982\u6b64\u6c89\u8ff7\u7684\u4ea4\u6613\u53ef\u80fd\u4f1a\u8fc1\u79fb\u5230\u9ed1\u6697\u7684\u6e38\u6cf3\u6c60\uff0c\u4ece\u9633\u5149\u4e0b\u51fa\u6765\uff0c\u6295\u8d44\u8005\u770b\u4e0d\u5230\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u800c\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u5173\u95ed\u3002\u5b83\u88ab\u79f0\u4e3a\u201c\u4f18\u5316\uff0c\u201doff\u4ea4\u6362\u3002\u5b83\u662f\u8d64\u8eab\u7f29\u77ed\u7684'\u201c\u79bb\u5f00\u76d1\u72f1\u201d\u5361\u3002\n  \u8bc1\u5238\u4ea4\u6613\u6240\u63cf\u8ff0\u4e86\u6e05\u7b97\u673a\u6784\u4e4b\u5916\u7684\u4ea4\u6613\uff0c\u4e3a\u201c\u7f55\u89c1\u201d\u3002\u6240\u6709\u4ea4\u6613\u4e2d\u7684\u56db\u5341\u4e2a\u767e\u5206\u4e4b\u65e0\u6240\u4f5c\u4e3a\u7f55\u89c1\uff01\n  \u5821\u5792\u8bc1\u5238\u8fd9\u6837\u7684\u5e02\u573a\u5236\u9020\u5546\u4fc3\u8fdb\u4e86\u9ed1\u6697\u6e38\u6cf3\u6c60\u7684\u4ea4\u6613\uff0c\u800c\u65e0\u9700\u5e02\u573a\u5373\u53ef\u4e86\u89e3\u4ea4\u6613\u4ef7\u683c\u3002\u8fd9\u53ef\u4ee5\u9632\u6b62\u4ea4\u6613\u5f71\u54cd\u516c\u4ea4\u90e8\u95e8\u7684\u80a1\u4ef7\u3002\u5728\u8fd9\u79cd\u65b9\u5f0f\uff0cGameStop\u64cd\u7eb5\u5668\u53ef\u4ee5\u5728\u9ed1\u6697\u7684\u6e38\u6cf3\u6c60\u4e2d\u8d2d\u4e70\u5e76\u5728\u5f00\u653e\u7684\u4ea4\u6362\u4e2d\u9500\u552e\uff0c\u8d5a\u94b1\u3002\n  Citadel\u7684\u5bf9\u51b2\u57fa\u91d1\u90e8\u95e8\u5177\u6709\u8ffd\u6355\u64cd\u7eb5\u5e02\u573a\u7684\u5386\u53f2\u3002\u7ebd\u7ea6\u8bc1\u5238\u4ea4\u6613\u6240\uff08\u7ebd\u7ea6\u8bc1\u5238\u4ea4\u6613\u6240\uff09\u8868\u793a\uff0c\u57ce\u5821\u8bc1\u5238\u201c\u9519\u8bef\u5730\u5356\u7a7a\uff0c\u4e13\u6709\u5356\u7a7a\uff0c275\u4e07\u80a1\u5b9e\u4f53\uff0c\u5bfc\u81f4\u5b9e\u4f53\u7684\u80a1\u4ef7\u5728\u5341\u4e00\u5206\u949f\u671f\u95f4\u4e0b\u964d77\uff05\u3002\u5728\u53e6\u4e00\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6839\u636e\u7ebd\u7ea6\u8bc1\u5238\u4ea4\u6613\u6240\u7684\u8bf4\u6cd5\uff0cCitadel\u7684\u4ea4\u6613\u5bfc\u81f4\u201c\u7acb\u5373\u589e\u52a0\u4e86132\uff05\u7684\u4ef7\u683c\u3002\u201d\n  \u7ebd\u7ea6\u5dde\u603b\u7edf\u65af\u8482\u5947\u00b7\u82cf\u5b81\u5b89\u4e0a\u5468\u8868\u793a\uff0c\u6240\u8c13\u7684\u201cMEME\u80a1\u201d\u5c31\u50cfGME\u4e00\u6837\u662f\u8fd9\u79cd\u64cd\u7eb5\u7684\u4e3b\u8981\u76ee\u6807\u3002 \u201c\u7edd\u5927\u591a\u6570\u79e9\u5e8f\u6d41\u7a0b\u53ef\u4ee5\u7f29\u5c0f\u4ea4\u6613\u6240\uff0c\u8fd9\u662f\u6709\u95ee\u9898\u7684\uff0c\u201dCunningham\u5728CNBC\u4f1a\u8bae\u4e0a\u8868\u793a\u3002 \u201c\u4ef7\u683c\u5f62\u6210\u5e76\u4e0d\u662f\u53cd\u6620\u7684\uff0c\u4f9b\u9700\u662f\u4ec0\u4e48\u3002\u201d\n  U / Broccaaa\u4e0e\u4ed6\u7684\u5386\u53f2\u9009\u62e9\u6570\u636e\u76f8\u6bd4\uff0c\u8fd9\u8868\u660e\u4e0e\u88f8\u9732\u7684\u77ed\u8def\u6280\u5de7\u4e00\u81f4\uff0c\u6697\u6c60\u4ea4\u6613\u91cf\u901a\u8fc7\u5df2\u77e5\u7684\u77ed\u671f\u8d44\u91d1\u3002\u81ea11\u67082020\u5e7411\u6708\u4ee5\u6765\u7684Finra\u6570\u636e\u663e\u793a\uff0cGME\u6d3b\u52a8\u57281\u6708\u521d\u8fc5\u901f\u5347\u8d77\u3002\u6570\u636e\u663e\u793a\uff0c25\uff05\u7684GME\u6d6e\u6cd5\u662f\u4ea4\u6613OTC\uff08\u5728\u9ed1\u6697\u6c60\u4e2d\u7684\u67dc\u53f0\u4e0a\uff09\uff0c\u800c\u4e3b\u8981\u80a1\u7968\u7684\u5c11\u4e8e1\uff05\u3002\n   \u6ce8\u610fGME\u9ed1\u6697\u6c60\u5728J\u7684GME\u9ed1\u8272\u6c60\u4ea4\u6613\u4e2d\u7684\u98d9\u5347 \n...... ", "note_en": "\u00d7      In the aftermath of the GameStop run-up in January, retail investors found telltale signs of a common yet egregious trading fraud by major brokers and hedge funds.\n I have  written previously for the  Prospect about the frenzy over GameStop (GME), the video game and electronics company. By now, you know the story. Millions of retail investors made the stock soar by over 1,000 percent in January 2021. This brought disaster upon a handful of hedge funds that had bet on GameStop\u2019s stock to drop. According to  Markets Insider, one analyst estimated losses in February of roughly $19 billion. The hedge fund Melvin Capital reportedly closed out its position after taking a drubbing of 51 percent. Another fund, Maplelane, lost 40 percent.\n  The rally eventually subsided, and the stock fell, though it remains well above its original price. But as retail investors looked into the details in the aftermath, they found telltale signs of a common yet egregious trading fraud by major brokers and hedge funds, which evaded what could have been far bigger losses. What happened around GameStop can be explained only by massive counterfeiting of shares.\n  The Securities and Exchange Commission (SEC), which along with other regulators could confirm whether the patterns seen in GameStop trading constitute fraud, has known about and largely ignored practices like this for years. The financial media also ignores this systemic corruption.\n      The SEC allows traders to  short a stock, which means to sell it even if they don\u2019t own it, hoping to buy it back later at a lower price and bank the difference. Short sellers borrow the stock, usually from a broker, who either has it in their inventory, borrows it from another broker, or vows to \u201clocate\u201d the stock when the time comes and cover the short.\n  That promise is often fake. A broker handling several sellers will borrow synthetic or manufactured shares, or \u201clocate\u201d the same stocks for multiple shorts. Traders and brokers have been mildly sanctioned for this scam.\n  Sellers are supposed to send shares to buyers within two days. If they don\u2019t convey the stock, there is a failure to deliver (FTD). This is also known as naked short selling. Traders that have outstanding FTDs are required to transfer the shares within a given time and are restricted from selling short until then. This rule is massively ignored or finessed, and the penalties are minor.\n  The major GME short sellers had to cover their shorts at a time when the funds had shorted much more stock than existed and when owners with real shares weren\u2019t selling, even at higher prices. They were threatened with a  short squeeze, with the price going so high that they cannot cover it with existing assets, and they get a margin call, a demand that additional money gets dropped into their brokerage account.\n  The short squeeze ended under peculiar circumstances. A January 28 spike in GME led Robinhood, the online broker that handled orders for many retail traders, to cut the buy option for the stock from its app. Robinhood CEO Vlad Tenev told the House Financial Services Committee in February that he had discussed the trade restrictions with the Depository Trust and Clearing Corporation (DTCC), which clears public trades, after it made a $3 billion margin call.\n  Your donation keeps this site free and open for all to read. Give what you can...\n However, DTCC CEO Michael Bodson told the committee in May that \u201cthe decision to restrict trading really was internal to Robinhood, we did not have discussions about that.\u201d He noted that with Robinhood, \u201cthe system worked.\u201d It stopped the buys while the big traders continued to sell. GME that day hit $483, but then the price plummeted, and the short squeeze was over.\n  Why would Robinhood shut down GME trading? It did not lose money on trades, because it did not have its own investments. The answer may be hidden in the murky relationships involving market makers and hedge funds.\n  Citadel Securities, a market maker, handled Robinhood\u2019s orders on a \u201cpay for order flow\u201d basis (it paid for orders routed to it), which equaled 40 percent of Robinhood\u2019s revenue. Citadel Securities is a division of a company founded by billionaire Ken Griffin. Another division, the Citadel hedge fund, helped provide short seller Melvin Capital with nearly $3 billion in funds during the GME short squeeze. Citadel Securities would have the clout to persuade Robinhood to shut down trading, and the motive, given its other division\u2019s investment in Melvin. (UPDATE: Robinhood COO James Swartwout stated in  sworn court testimony in February for a case in California that \u201cno third party, including either Citadel or\u00a0Citadel Securities, requested that Robinhood apply restrictions on stock or options trading or played any role\u201d in the decision to limit trading.)\n  Citadel Securities also has a knack for running afoul of the trading laws. It has been fined 58 times in the last few years for violating trading regulations, many about naked short selling. In February 2021, the same time frame as the GME trades, Citadel\u00a0Securities was fined $10,000 for failing to close out a failure to deliver of shares it had sold short.\n    There are conflicting arguments about whether GME was a battle of long and short hedge funds, whether retail investors through Robinhood and other trading apps played a significant role, or maybe both.\n  Robert Shapiro, chairman of the economic advisory firm Sonecon and undersecretary of commerce for economic affairs under Bill Clinton, believes the war between hedge funds theory, with a healthy dose of \u201cpump and dump\u201d market manipulation and naked short selling. Shapiro has testified before the SEC and criticized it for failing to take effective measures against naked shorting.\n  Writing in   Washington Monthly, Shapiro explained, \u201cThe nearly five-fold jump in GameStop\u2019s average trading volume from July to December signaled that large institutional investors were buying [and selling] the stock \u2026 The wild swings in those share prices reflect hundreds of millions of shares being traded each day, mostly in big blocks and presumably from one hedge fund to another.\u201d He estimated that some 20 million or more of the GameStop shorts were never borrowed and never delivered to their buyers.\n  Additional documentation of the GameStop manipulation comes from a handful of people on the WallStreetBets spinoff site Superstonk, who have painstakingly analyzed filings to the SEC and FINRA (the brokers\u2019 \u201cself-regulator\u201d), stock reports from Bloomberg, and other public sources. (\u201cStonk\u201d is their hokey way of saying stock.) Much of the data reported here is taken from their posts, which are all public and verifiable.\n   It\u2019s important to note that only the SEC and the DTCC can get the trading documents that would show proof of any fraudulent scheme. But the Superstonk users, through publicly available data, detected patterns that make a strong case at least to investigate the matter.\n  For example, u/broccaaa, a Superstonk user, looked through SEC filings for funds with large GME positions. Big losers like Melvin and Maplelane had no shares in GME, and large puts, which are options to sell. According to u/broccaaa, this is a common characteristic in stocks with large unsettled trades, where the shares have not been transferred. He described it as \u201csupportive evidence for naked short trades \u2026 around the end of December and early January short interest and fails to deliver were through the roof.\u201d\n  The  float is the number of shares a company has issued that are available for investors to trade. All the shares are held in the DTC (Depository Trust Company), the \u201cvault\u201d of the DTCC, and \u201cowners\u201d have only digital entitlements. In the run-up to the short squeeze, Bloomberg Terminal data routinely showed well over 100 percent of GME float held by institutions, not including retail investors. (This ramped down massively after the short squeeze.)\n  Some of the extra shares result from the fact that, during the time between a short sale and settlement, both parties have legitimate digital entitlements. And due to the nature of SEC filings, there could be double counting. But the evidence shows that many of those shares  never settled. The issue is fails to deliver.\n  Under SEC rules, shares of companies that fail to deliver in the previous five trading days are put on a \u201c threshold list.\u201d GameStop\u2019s first date on this list was September 22, 2020.\n  Shares failed in massive numbers in the following months, leading to GameStop being put on the threshold list for 39 days between December 8 and February 3, with hundreds of millions of shares failing to deliver.\n   How could GME be on the list for so long? Regulators have the authority to find out which brokers failed to deliver, facilitating naked shorts. But the DTCC has historically beaten back attempts to reveal naked short selling culprits, or even to tag \u201cborrowed\u201d shares (called the  hard borrow) so they can\u2019t be \u201clocated\u201d more than once. I\u2019ve written previously about how DTCC  pulled back on backing a centralized database that would prevent the same shares from being used for multiple short sales.\n  \u201cThere is no lawful way for a stock to be on the threshold list for months,\u201d said John Welborn, who teaches economics at Dartmouth. \u201cThe only explanation is regulatory apathy, or worse.\u201d Because compliant regulators choose not to track shorts, traders can engage in mischief.\n      In 2007, online retailer Overstock sued the major prime brokers for naked shorting its stock and creating counterfeit shares that flooded the market, causing its share price to drop from $70 to $20. It presented evidence that Goldman Sachs created fake inventory for stock lending.\n  Here\u2019s how an insider described it in a  2011 Overstock court deposition: \u201cA firm or a market maker would synthetically create a short position by doing option trades in it, buying the stock, selling a call or buying a put or this, that and the other. And by buying the stock, they could create a borrow off an option trade.\u201d\n  In the conversion trade, an options market maker is on one side, and a prime broker on the other. It isn\u2019t real market making, which is to be in the middle so all traders can buy or sell shares, or in this case, options. \u201cThe goal of the trade is to get the prime broker loanable inventory of stock,\u201d Welborn said.\n  How do you get there? You get there by this conversion trick. First, the options market maker sells the prime broker a naked short that never settles from the market maker. This is \u201cthe most important leg of the trade,\u201d Welborn explained. The market maker also sells a put option (an option to buy the stock in the future) to the broker. This gives the market maker a neutral position, but the broker can maintain a \u201clong\u201d position, as if they owned the stock.\n  The broker can now lend that stock out to multiple clients. In this way, the prime broker and the market maker are creating fake lendable shares out of thin air. The end result is organized counterfeiting of shares in the market.\n  Regulators aren\u2019t providing enough transparency to ferret it out. As Welborn said, \u201cRegulators tell us there are fails but don\u2019t tell us who did the fails. Liquor stores are being robbed, but they don\u2019t tell us who robbed the stores.\u201d\n  There is voluminous evidence from the  Overstock case of Goldman Sachs engaging in this practice, including an  email from a broker conceding that such conversion trades \u201ccreate inventory to allow customers to short.\u201d When Overstock got the incriminating evidence, after Goldman\u2019s lawyer posted it by mistake on PACER, the federal court online filing system, Goldman settled with Overstock in 2015 for $20 million.\n    An obvious sign of market manipulation is massive  short interest, the number of shares that have been sold short but not yet covered. These could be legally borrowed shares that were first located. However, GameStop did have more than 100 percent short interest, including 140 percent in January, which means more shares were reported as being short sold than all the shares that should be available to trade.\n  u/rainforest11 of Superstonk explained that FINRA reported short interest at 226 percent of total float at the height of the GME frenzy in January. This means that more than twice as many shares as exist in reality had been sold short at one point. As late as January 28, it was reported by S3, a market data company, to be 122 percent.\n  Counterfeit shares were likely used as \u201cloans\u201d to cover the naked short attacks that knocked down the share price. With short interest well above 100 percent of the float, there were not enough real shares to borrow. That is why there were fails to deliver to the buyers.\n  The chart below shows the percentage of GameStop shares that failed to deliver between the beginning of January 2020 and the end of January 2021. The FTDs, between 1 and 5 percent of total shares, may seem like small numbers, but as the website  Where Are the Shares asks, \u201cWould it be okay if 1 percent, 2 percent, 4 percent of your bank deposits failed to show up?\u201d\n   The short squeeze was nearly a disaster for the hedge funds. u/rainforest11 explained, \u201cAssuming the [share price] rocketed to $1,000 or beyond \u2026 hedge funds would likely go bankrupt as financially speaking there would be no way they would be able to cover all their shorts, and presumably entities that lent the short side hedge fund the shares to short would be holding the bag.\u201d\n  But although GME\u2019s momentum was at an apex on January 28, with the stock jumping to $513 a share in pre-trading, Robinhood suddenly shut off the ability to buy GME. Several other brokers followed. Immediately after this block on buys, FTDs and short interest dropped massively. The price also nosedived, which is what the naked shorters wanted.\n  u/broccaaa wanted to prove the manipulation, how naked short sellers can acquire shares and close the FTDs. He designed an algorithm to detect a type of option known as a \u201cdeep in the money (ITM) call,\u201d which allows buyers to purchase shares significantly below the market price.\n  \u201cAs FTDs were spiking and the situation became more and more unsustainable for the shorts towards the end of January, illegal Deep ITM options purchasing was used to naked short and cover FTDs,\u201d he said. The chart below, compiled from historical options data, shows that on January 27, 25 million shares were acquired in this fashion. Overall, this technique conjured up to 150 million naked short shares. The blue line on the chart tracks fails to deliver as a percentage of float. These nearly disappear after January 27.\n     A  married put is a legal options trading strategy where an investor in a stock buys a put (an option to sell) on the same stock, to protect against depreciation in the stock\u2019s price. Crooked hedge funds will simultaneously purchase puts from a market maker and buy shares of an equal number. In this way, the hedge fund obtains \u201cphantom\u201d shares from the market maker, which can be used to cover old positions or to sell on the market to suppress the price.\n  The SEC in 2003  expressed concern that \u201c[s]ome strategies may involve the manipulative sale of securities underlying a married put as part of a scheme to drive the market price down and later profit by purchasing the securities at a depressed price.\u201d It called them \u201csham transactions\u201d which might violate the SEC\u2019s anti-fraud and anti-manipulation provisions.\n  This appears to have been at work in GME, according to the Superstonk users. A 13F form must be filed quarterly with the SEC by institutional investors with at least $100 million in shares. These filings for the biggest known GME short sellers showed a tremendous amount of puts. New put option contracts after the end of January represented more than 300 percent of shares outstanding, more than 200 million shares. \u201cMelvin Capital, which lost 50 percent of its value, had 6 million shares in puts,\u201d said u/broccaaa. This massive spike suggests that short positions have been hidden using \u201cphantom shares\u201d and \u201cstrategic fail-to-delivers.\u201d\n   As u/broccaaa says, \u201cThis spike coincides perfectly with the drop in reported short interest and FTDs.\u201d He sees it as \u201cthe most damning evidence of massive manipulation.\u201d\n  The options scam can also reset the clock on fails to deliver. Remember that short sellers have two days to locate a stock to prevent an FTD; market makers and other authorized participants may have up to six days. The SEC  explained a trading strategy known as \u201cbuy-write\u201d in a 2013 paper. As  Investopedia explains, \u201cA buy-write is an options trading strategy where an investor buys a security, usually a stock, with options available on it and simultaneously writes (sells) a call option on that security.\u201d This recycling of positions shows as a new transaction, so the short sale timer is reset. And the trader may never deliver the shares, because he can roll over the trades and do the deal over and over.\n  GME short positions could also be hidden in exchange-traded funds (ETFs), a basket of stocks similar to a mutual fund. u/broccaaa\u2019s research shows that fails to deliver migrated from GME to ETFs in January 2021. The total value of reported short interest (GME + ETFs) remained as high as ever, at over $27 billion owed.\n    In spite of knowing how fails to deliver represent sham trades, the SEC has facilitated big brokers and hedge funds continuing the con, using a system where FTDs go to die: dark pools, which began in the 1980s and now handle more than 40 percent of trades.\n  Dark pools are opaque private exchanges run by the major banks and prime dealers, and they are inaccessible to other investors. They were created to settle large trades by hedge funds and institutional investors without moving the markets.\n  As the SEC said in 2015: \u201cThe close-out requirement applies only to fail to deliver positions in an equity security at a  registered clearing agency.\u201d So unsettled trades could migrate to dark pools, out of the sunlight where investors can\u2019t see what is going on, and never be closed out. It is called \u201cex-clearing,\u201d off exchange. It is naked shorters\u2019 \u201cget out of jail free\u201d card.\n  The SEC has described transactions outside the clearing agencies as \u201crare.\u201d Forty percent of all transactions is nowhere near rare!\n  Market makers like Citadel Securities facilitate dark pool transactions, without the market being aware of the transaction price. That prevents the transaction from impacting the share price on the public exchanges. In this fashion, GameStop manipulators could buy in a dark pool and sell on an open exchange, making money on the transaction.\n  Citadel\u2019s hedge fund division has a history of being caught manipulating markets. The New York Stock Exchange (NYSE) said Citadel\u00a0Securities \u201cerroneously sold short, on a proprietary basis, 2.75 million shares of an entity causing the share price of the entity to fall by 77 percent during an eleven-minute period. In another instance, according to the NYSE, Citadel\u2019s trading resulted in \u201can immediate increase in the price of the security of 132 percent.\u201d\n  And NYSE president Stacey Cunningham  said last week that so-called \u201cmeme stocks\u201d like GME are prime targets for this manipulation. \u201cThe vast majority of order flow can trade off of exchanges, which is problematic,\u201d Cunningham said at a CNBC conference. \u201cThat price formation is not really reflective of what supply and demand is.\u201d\n  u/broccaaa compared his historical options data, which showed patterns consistent with naked shorting tricks, with dark pool trading volumes by known short funds. FINRA data since November 2020 showed GME activity ramped up massively at the start of January. Data shows that 25 percent of the GME float is traded OTC (over the counter in a dark pool), compared to less than 1 percent for major stocks.\n   Note the spike in GME dark pool trades at the end of J\n......", "posttime": "2021-06-23 23:47:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "gamestop,hustle,\u80a1\u7968", "title": "GameStop\u5982\u4f55\u55a7\u56a3 ", "title_en": "How the GameStop Hustle Worked", "transed": 1, "url": "https://prospect.org/power/how-the-gamestop-hustle-worked/", "via": "", "real_tags": ["gamestop", "hustle", "\u80a1\u7968"]}, {"category": "", "categoryclass": "", "imagename": "c6893ea9bc10c34a2f207e1023a6af29.jpg", "infoid": 1067734, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8d85\u8fc720\u67b6\u98de\u673a\u548c\u4e24\u8258\u6d77\u5cb8\u8239\u53ea\u8986\u76d6\u4e86\u514b\u91cc\u7c73\u4e9a\u9644\u8fd1\u7684\u82f1\u56fd\u519b\u8230\u822a\u884c\u3002\n \u83ab\u65af\u79d1\uff06\uff0339;\u56fd\u9632\u90e8\u8bf4\uff0cHMS\u540e\u536b\u5728\u514b\u91cc\u7c73\u4e9a\u9644\u8fd1\u8fdb\u5165\u4fc4\u7f57\u65af\u9886\u6d77\uff0c\u800c\u5de1\u903b\u8230\u5c04\u51fb\u8b66\u544a\u5c04\u51fb\u548c\u4e00\u6761\u55b7\u6c14\u673a\u5728\u5176\u8def\u5f84\u4e2d\u6ef4\u4e0b\u70b8\u5f39\u3002\n  \u7136\u800c\uff0c\u519b\u8230\u4e0a\u7684BBC\u901a\u8baf\u5458\u8868\u793a\uff0c\u8fd9\u662f\u7531\u4fc4\u7f57\u65af\u519b\u961f\u9a9a\u6270\u7684\u3002\n \u98de\u673a\u53ef\u4ee5\u542c\u5230\u4f5c\u4e3aBBC\uff06\uff0339; jonathan beale\uff0c\u4ece\u9ed1\u6d77\u7684HMS\u540e\u536b\u7684\u7532\u677f\u63d0\u4ea4\u4e86\u4e00\u4efd\u62a5\u544a\u3002\u5f53\u6d77\u519b\u8239\u5458\u4e3a\u53ef\u80fd\u5bf9\u6297\u51c6\u5907\u65f6\uff0c\u4ed6\u63cf\u8ff0\u4e86\u5e7f\u64ad\u4e0a\u7684\u654c\u5bf9\u8b66\u544a\u3002\n \u6211\u4eec\u7684\u901a\u8baf\u5458\u66fe\u88ab\u9080\u8bf7\u8fc7\u8239\u8236\u5728\u4e8b\u4ef6\u53d1\u751f\u4e4b\u524d\uff0c\u5728\u82f1\u56fd\u8239\u4e0a\u63cf\u8ff0\u4e86\u8d85\u8fc720\u67b6\u98de\u673a\uff0c\u5e76\u8bf4\u4e24\u4e2a\u4fc4\u7f57\u65af\u6d77\u5cb8\u8239\u8986\u76d6\u4e86\u8239\u53ea\uff0c\u6709\u65f6\u53ea\u9700100\u7801\u3002\n  \u4fc4\u7f57\u65af\u58f0\u79f0\u975e\u6cd5\u541e\u5e76\u7684\u534a\u5c9b\u53ca\u5176\u6c34\u57df\u662f\u5176\u9886\u571f\uff0c\u4f46\u82f1\u56fd\u8bf4\u5176\u8239\u6b63\u5728\u901a\u8fc7\u4e4c\u514b\u5170\u6c34\u57df\u3002\n  \uff06\uff0334; HMS Defender\u6b63\u5728\u4e4c\u514b\u5170\u548c\u683c\u9c81\u5409\u4e9a\u4e4b\u95f4\u91c7\u53d6\u6700\u76f4\u63a5\u548c\u56fd\u9645\u516c\u8ba4\u7684\u8def\u7ebf\uff0c\uff06\uff0334;\u4e00\u6761\u5510\u5b81\u8857\u53d1\u8a00\u4eba\u8bf4\u3002 \n\u4ed6\u8865\u5145\u8bf4\uff0c\u4fc4\u7f57\u65af\u5411\u82f1\u56fd\u63d0\u4f9b\u4e86\u9884\u8b66\uff0c\u5b83\u6b63\u5728\u9760\u8fd1HMS Defender\u822a\u884c\u7684\u9ed1\u6d77\u4e2d\u8fdb\u884c\u67aa\u68b0\u953b\u70bc\u3002\n \u82f1\u56fd\u56fd\u9632\u90e8\u957fBen Wallace\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8868\u793a\uff0cHMS Defender\u6b63\u5728\u8fdb\u884cA\uff06\uff0334;\u5e38\u89c4\u8fd0\u8f93\uff06\uff0334;\u5f53\u5b83\u8fdb\u5165\u56fd\u9645\u516c\u8ba4\u7684\u4ea4\u901a\u8d70\u5eca\u65f6\u3002\n      \u8239\u5458\u5df2\u7ecf\u5728\u884c\u52a8\u7ad9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u8d70\u8fd1\u4fc4\u7f57\u65af\u5360\u9886\u514b\u91cc\u7c73\u4e9a\u7684\u5357\u7aef\u3002\u7687\u5bb6\u6d77\u519b\u9a71\u9010\u8230\u7684\u6b66\u5668\u7cfb\u7edf\u5df2\u7ecf\u88c5\u6ee1\u4e86\u3002\n \u8fd9\u5c06\u662f\u4e00\u4e2a\u523b\u610f\u7684\u4e3e\u52a8\uff0c\u4ee5\u6307\u5411\u4fc4\u7f57\u65af\u3002 HMS Defender\u5c06\u572812\u82f1\u91cc\uff0819\u516c\u91cc\uff09\u7684\u514b\u91cc\u7c73\u4e9a\uff06\uff0339;\u5730\u57df\u6c34\u57df\u8303\u56f4\u5185\u822a\u884c\u3002\u8239\u957f\u575a\u6301\u4ed6\u53ea\u662f\u5bfb\u6c42\u5b89\u5168\u901a\u9053\uff0c\u5f7b\u5e95\u662f\u4e00\u4e2a\u56fd\u9645\u516c\u8ba4\u7684\u8fd0\u8f93\u8f66\u9053\u3002\n \u4e24\u8258\u6b63\u5728\u906e\u853d\u7687\u5bb6\u6d77\u519b\u519b\u8230\u7684\u4fc4\u7f57\u65af\u6d77\u5cb8\u8239\u53ea\u8bd5\u56fe\u5f3a\u8feb\u5b83\u6539\u53d8\u8bfe\u7a0b\u3002\u5728\u4e00\u4e2a\u9636\u6bb5\uff0c\u4fc4\u7f57\u65af\u8239\u53ea\u4e00\u9636\u6bb5\u6536\u5230\u7ea6100\u4e07\uff08328\u82f1\u5c3a\uff09\u3002\n \u8d8a\u6765\u8d8a\u591a\u5730\u654c\u5bf9\u7684\u8b66\u544a\u662f\u5728\u5e7f\u64ad\u4e0a\u53d1\u5e03\u7684 - \u5305\u62ec\u4e00\u4e2a\u8bf4\uff06\uff0334;\u5982\u679c\u4f60\u4e0d\u6539\u53d8\u8bfe\u7a0bI\uff06\uff0339; ll\u706b\uff06\uff0334;\u6211\u4eec\u786e\u5b9e\u5728\u8fdc\u5904\u542c\u5230\u4e86\u4e00\u4e9b\u5c04\u51fb\uff0c\u4f46\u4ed6\u4eec\u88ab\u8ba4\u4e3a\u662f\u8fdc\u8fdc\u8d85\u51fa\u8303\u56f4\u3002\n \u968f\u7740HMS Defender\u901a\u8fc7\u822a\u8fd0\u516c\u53f8\u822a\u884c\uff0c\u5b83\u88ab\u4fc4\u7f57\u65af\u55b7\u6c14\u5f0f\u98de\u673a\u55e1\u55e1\u4f5c\u54cd\u3002 Vincent Owen\u8239\u957f\u8868\u793a\uff0c\u8be5\u8239\u5728\u9644\u8fd1\u68c0\u6d4b\u523020\u591a\u67b6\u519b\u7528\u98de\u673a\u3002\u6b27\u6587\u6307\u6325\u5b98\u8868\u793a\uff0c\u4ed6\u7684\u4f7f\u547d\u662f\u6709\u4fe1\u5fc3\u4f46\u975e\u5bf9\u6297\u7684\u3002 \n\u4fc4\u7f57\u65af\u8868\u793a\uff0c\u5728\u514b\u91cc\u7c73\u4e9a\u5357\u90e8\u7684Cape Fiolent\u9644\u8fd1\u53d1\u751f\u4e86\u8fd9\u4e00\u4e8b\u4ef6\uff0c\u800c - \u6839\u636e\u4fc4\u7f57\u65af\u65b0\u95fb\u673a\u6784\u7684\u56fd\u9632\u90e8\u9648\u8ff0 - \u5ba3\u79f0\u82f1\u56fd\u8239\u53ea\u968f\u540e\u6539\u53d8\u4e86\u8bfe\u7a0b\u3002  \u4fc4\u7f57\u65af\u56fd\u9632\u90e8\u8bf4\uff06\uff0334;\u5371\u9669\u884c\u52a8\uff06\uff0334; \u9a71\u9010\u8230\u662f\u4e00\u4e2a\uff06\uff0334;\u4e25\u91cd\u8fdd\u89c4\u548c\uff0334; \u8054\u5408\u56fd\u4f1a\u8bae\uff06\uff0339;\u6d77\u6cd5\u3002  HMS Defender\u662f\u4e00\u4e2a45\u578b\u9a71\u9010\u8230\uff0c\u662f\u82f1\u56fd\uff06\uff0339;\u8f7d\u6ce2\u7f62\u5de5\u7ec4\u7684\u4e00\u90e8\u5206\u3002 \u636e\u7687\u5bb6\u6d77\u519b\uff06\uff0339;\u636e\u7687\u5bb6\u6d77\u519b\uff06\uff0339;\u636e\u7687\u5bb6\u6d77\u519b\uff06\uff0339;  \u636e\u82f1\u56fd\u5927\u4f7f\u9986\u5728\u4e4c\u514b\u5170\uff0c\u672c\u5468\u65e9\u4e9b\u65f6\u5019\uff0c\u8fd9\u8258\u8239\u5728\u4e4c\u514b\u5170\u5dde\u4e4c\u514b\u5170\u5357\u90e8\u7684\u5357\u90e8\u3002 \u5b83\u8868\u793a\uff0c\u82f1\u56fd\u548c\u4e4c\u514b\u5170\u7b7e\u7f72\u4e86\u4e00\u9879\u534f\u8bae\uff0c\u5171\u540c\u5efa\u7acb\u6218\u8230\u5e76\u5efa\u9020\u4e86\u4e24\u4e2a\u6d77\u519b\u57fa\u5730\u3002 ", "note_en": "More than 20 Russian aircraft and two coastguard ships have shadowed a British warship sailing near Crimea.\n Moscow&#39;s defence ministry said that HMS Defender entered Russian territorial waters near Crimea while a patrol ship fired warning shots and a jet dropped bombs in its path.\n  However, a BBC correspondent onboard the warship said it has been harassed by the Russian military.\n Aircraft could be heard overhead as the BBC&#39;s defence correspondent, Jonathan Beale, filed a report from the deck of HMS Defender in the Black Sea. He described hostile warnings over the radio as the navy crew prepared for a possible confrontation.\n Our correspondent, who had been invited aboard the ship before the incident happened, describes more than 20 aircraft in the skies above the British ship - and says two Russian coastguard boats shadowed the vessel, at times just 100 yards away.\n  Russia claims the illegally-annexed peninsula and its waters are its territory, but Britain says its ship was passing through Ukrainian waters.\n  &#34;HMS Defender was taking the most direct and internationally recognised route between Ukraine and Georgia,&#34; a Downing Street spokesman said.\n He added that Russia had given pre-warning to the UK that it was carrying out gunnery exercises in the Black Sea near to where HMS Defender was sailing.\n British Defence Secretary Ben Wallace said in a statement that HMS Defender was carrying out a &#34;routine transit&#34; when it entered the internationally recognised traffic corridor.\n      The crew were already at action stations as they approached the southern tip of Russian occupied Crimea. Weapons systems on board the Royal Navy destroyer had already been loaded.\n This would be a deliberate move to make a point to Russia. HMS Defender was going to sail within the 12 mile (19km) limit of Crimea&#39;s territorial waters. The captain insisted he was only seeking safe passage thorough an internationally recognised shipping lane.\n Two Russian coastguard ships that were shadowing the Royal Navy warship, tried to force it to alter course. At one stage one of the Russian vessels closed in to about 100m (328ft).\n Increasingly hostile warnings were issued over the radio - including one that said &#34;if you don&#39;t change course I&#39;ll fire&#34;. We did hear some firing in the distance but they were believed to be well out of range.\n As HMS Defender sailed through the shipping lane it was buzzed by Russian jets. The Captain, Vincent Owen, said the ship detected more than 20 military aircraft nearby. Commander Owen said his mission was confident but non-confrontational.\n    Russia said the incident happened near Cape Fiolent in the south of Crimea and - according to a defence ministry statement to Russian news agencies - claimed the British vessel subsequently changed course.\n  The Russian Defence Ministry said the &#34;dangerous actions&#34; of the destroyer were a &#34;gross violation&#34; of the UN Convention&#39;s sea laws.\n   HMS Defender is a Type 45 destroyer that is part of the UK&#39;s Carrier Strike Group. It is carrying out missions in the Black Sea, according to  the Royal Navy&#39;s website.\n The warship was in the southern Ukrainian port of Odessa earlier this week, according to  the British embassy in Ukraine. It said the UK and Ukraine had signed an agreement to jointly build warships and construct two naval bases.", "posttime": "2021-06-23 23:47:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,\u55b7\u6c14\u673a,jets", "title": "\u4fc4\u7f57\u65af\u55b7\u6c14\u673a\u548c\u8239\u53ea\u76ee\u6807\u82f1\u56fd\u519b\u8230 ", "title_en": "Russian jets and ships target British warship", "transed": 1, "url": "https://www.bbc.com/news/world-europe-57583363", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u55b7\u6c14\u673a", "jets"]}, {"category": "", "categoryclass": "", "imagename": "797c477e993c3a67e267bd9e646450bf.jpg", "infoid": 1067733, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u83ab\u54c8\u97e6\uff0c\u57fa\u4e8e\u52a0\u5229\u798f\u5c3c\u4e9a\u7684Masten Space Systems\u6b63\u5728\u5f00\u53d1\u4e00\u79cd\u673a\u5668\u4eba\u6d41\u52a8\u7cfb\u7edf\uff0c\u5728\u6708\u7403\u4e0a\u4f7f\u7528\u53d7\u63a7\u706b\u7bad\u7206\u70b8\uff0c\u6765\u81ea\u516c\u53f8\u7684\u65b0\u95fb\u58f0\u660e\u89e3\u91ca\u8bf4\u3002\n \u6f2b\u6e38\u706b\u7badM\u7684\u6d41\u6d6a\u8005\u4f1a\u63d0\u53d6\u6708\u7403\u51b0\uff0c\u8fd9\u5c06\u662f\uff06\uff0334;\u5728\u6708\u7403\u4e0a\u4fdd\u6301\u6301\u7eed\u5b58\u5728\u5e76\u5141\u8bb8\u672a\u6765\u4efb\u52a1\u5230\u706b\u661f\u53ca\u5176\u8d85\u8d8a\uff0c\uff06\uff0334\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 Masten Space Systems\u5728\u5176\u91ca\u653e\u4e2d\u8868\u793a\u3002\n \u519c\u5386\u51b0\u53ef\u7528\u4e8e\u996e\u7528\u6c34\uff0c\u706b\u7bad\u71c3\u6599\u548c\u7f8e\u56fd\u5b87\u822a\u5c40\u7684\u5176\u4ed6\u91cd\u8981\u8d44\u6e90\uff0c\u5e76\u5728\u672a\u6765\u7684Artemis\u4efb\u52a1\u4e2d\uff0c\u65e8\u5728\u5c06\u4eba\u7c7b\u5e26\u56de\u6708\u74032024\u3002\n \u706b\u7bad\u7c73\u662f\u5de8\u5927\u7684\u7a7a\u95f4\u7cfb\u7edf\uff06\uff0339; s\u7684NASA\uff06\uff0339;\u6253\u7834\u4e86\u51b0\u6311\u6218\uff0c\u8fd9\u547c\u5401\u6316\u6398\u519c\u5386\u8d44\u6e90\u7684\u521b\u65b0\u8bbe\u8ba1\uff0c\u4ee5\u4fbf\u51cf\u5c11\uff0c\u5426\u5219\u8fc7\u4e8e\u6602\u8d35\uff0c\u4f9d\u8d56\u4ece\u5730\u7403\u53d1\u9001\u8017\u6750\u3002\n  \u7f8e\u56fd\u5b87\u822a\u5c40\uff06\uff0339;\u6253\u7834\u4e86\u51b0\u6311\u6218\uff0c\u547c\u5401\u53c2\u8d5b\u8005\u8bbe\u8ba1\u4e00\u4e2a\u53ef\u4ee5\u5728\u519c\u5386\u5357\u6781\u7684\u5965\u514b\u4f26\u76c6\u5730\u964d\u843d\u7684\u6d41\u6d6a\u8005 - \u8fd9\u88ab\u8ba4\u4e3a\u62e5\u6709\u7ea61.54\u4ebf\u82f1\u9551\uff087000\u4e07\u516c\u65a4\uff09\u7684\u51b0 - \u548c\u77ff\u4e95\u8d44\u6e90\u5728\u8be5\u4f4d\u7f6e\u3002\n  Masten\uff06\uff0339; S\u706b\u7bad\u4f7f\u7528\u53d7\u63a7\u706b\u7bad\u7206\u70b8\uff0c\u5728\u6d41\u52a8\u7ad9\u4e0b\u65b9\u5206\u89e3\u571f\u58e4\u6216\u679c\u89e3\uff0c\u7136\u540e\u63d0\u53d6\u51b0\u3002\u8be5\u516c\u53f8\u8fd8\u5efa\u9020\u4e86\u4e00\u4e2a\u6708\u7403\u7740\u9646\u5668\uff0c\u8bf4\u6d41\u6d6a\u8005\uff06\uff0334;\u9884\u8ba1\u6bcf\u5929\u6700\u591a12\u4e2a\u9668\u77f3\u5751\uff0c\u6bcf\u6b21\u706b\u5c71\u53e3\u751f\u4ea7100\u516c\u65a4\u7684\u51b0\u3002\uff06\uff0334;\n \u8f6c\u53f0\u91cd\u91cf\u4e3a2,465\u78c5\uff081,118\u5343\u514b\uff09\uff0c\u8fd9\u65e2\u7531\u4e8e\u4f5c\u4e3a\u652f\u6491\u4f4d\u53cc\u500d\u7684\u7740\u9646\u5668\u90fd\u4f1a\u843d\u5728\u6708\u7403\u4e0a\u3002\u4e00\u65e6\u5728\u6240\u9700\u4f4d\u7f6e\uff0c\u5b83\u4f7f\u7528100 LBF\u706b\u7bad\u653e\u7f6e\u5728\u52a0\u538b\u5706\u9876\u4e0b\uff0c\u4f7f\u5176\u80fd\u591f\u5728\u6708\u7403\u8868\u9762\u4e0b\u65b92\u7c73\u3002 \n\u5728\u91c7\u77ff\u8fc7\u7a0b\u4e2d\uff0c\uff06\uff0334;\u6765\u81ea\u591a\u4e2a\u706b\u7bad\u5c04\u51fb\u7684\u55b7\u5c04\u7269\u7206\u70b8\u5230\u5706\u9876\u4e2d\uff0c\u901a\u8fc7\u771f\u7a7a\u7684\u7cfb\u7edf\u6f0f\u6597\uff0c\u5c06\u51b0\u9897\u7c92\u4e0e\u5269\u4f59\u7684\u7070\u5c18\u5206\u5f00\u5e76\u5c06\u5176\u5206\u6210\u50a8\u5b58\u5bb9\u5668\uff0c\uff06\uff0334; Masten Space Systems\u8bf4\u3002\n  \u592a\u9633\u80fd\u7f57\u5b5a\u80fd\u591f\u4ee5\u9ad8\u8fbe2.14\u82f1\u91cc/\u5c0f\u65f6\u7684\u901f\u5ea6\u884c\u9a76\uff083.45\u516c\u91cc/\u5c0f\u65f6\uff09\uff0c\u4e5f\u53ef\u4ee5\u6500\u534720\uff05\u7684\u503e\u659c\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u672a\u6765\u706b\u661f\u4efb\u52a1\u53ef\u80fd\u6709\u4ef7\u503c\u3002\n \u516c\u53f8\uff06\uff0339; S\u9648\u8ff0\u8fd8\u8bf4\uff0c\uff06\uff0334;\u50a8\u5b58\u7684\u6c34\u53ef\u4ee5\u7535\u89e3\u6210\u6c27\u6c14\u548c\u6c22\u6c14\uff0c\u5229\u7528\u592a\u9633\u80fd\u6765\u7ee7\u7eed\u4e3a\u706b\u7bad\u53d1\u52a8\u673a\u63a8\u52a8\u8d85\u8fc75\u5e74\u7684\u6c34\u5f00\u6316\u3002\uff06\uff0334;\n Masten\uff06\uff0339;\u65b0\u7cfb\u7edf\u88ab\u8bbe\u8ba1\u4e3a\u871c\u8702\u673a\u5668\u4eba\u548c\u6708\u7403\u524d\u54e8\u4e4b\u95f4\u7684\u5408\u4f5c\u7684\u4e00\u90e8\u5206\u3002\n \u4eca\u5e743\u6708\uff0c\u534e\u76db\u987f\u5dde\u7acb\u5927\u5b66\u7684\u4e00\u5bf9\u673a\u68b0\u5de5\u7a0b\u5b66\u751f\u83b7\u5f97\u4e86NASA\u7684125,000\u7f8e\u5143\u7684\u6388\u6743\uff0c\u4e3aA\uff06\uff0334\u5efa\u7acb\u4e86\u539f\u578b;\u535a\u7f57\u5df4\u6258\uff06\uff0334;\u4f7f\u7528\u673a\u5668\u4eba\u5728\u706b\u661f\u4e0b\u8fbe\u5230\u6c34\u7684\u94bb\u4e95\u7cfb\u7edf;\u5317\u6781\u51b0\u3002\n  \u7406\u8bba\u4e0a\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u5c06\u5141\u8bb8\u672a\u6765\u7684\u7a7a\u95f4\u504f\u79fb\u5168\u5e74\u8fd0\u8425\uff0c\u4ece\u800c\u7ee7\u7eed\u63a2\u7d22\u548c\u5bf9\u5b87\u5b99\u7684\u65b0\u53d1\u73b0\u3002\u89c2\u770b\u7ec6\u8282\u4e0b\u9762\u706b\u7badM\u7cfb\u7edf\u7684\u89c6\u9891\u3002 ", "note_en": "Mojave, California-based Masten Space Systems is developing a robotic rover system to mine ice on the Moon using controlled rocket blasts,  a press statement from the company explains.\n The rover, called Rocket M, will extract lunar ice, which will be &#34; critical to maintain a sustained presence on the Moon and allow future missions to Mars and beyond,&#34; Masten Space Systems said in its release.\n Lunar ice can be used for drinking water, rocket fuel, and other vital resources in NASA&#39;s future Artemis missions, which aims to take humans  back to the Moon by 2024.\n The Rocket M was Masten Space System&#39;s entry for NASA&#39;s Break the Ice challenge, which called for innovative designs for excavating lunar resources in order to reduce the, otherwise prohibitively expensive, reliance on sending supplies from Earth.\n  NASA&#39;s Break the Ice challenge called for entrants to design a rover that can land on the Aitken Basin at the lunar south pole \u2014 which is believed to hold approximately 154 million pounds\u00a0 (70 million kg) of ice \u2014 and mine for resources at the location.\n  Masten&#39;s Rocket M rover uses controlled rocket blasts to break up the soil\u00a0 or regolith underneath the rover, where it then extracts the ice. The company, which has also  built a lunar lander, says the rover \u00a0&#34;is projected to mine up to 12 craters per day and produce 100 kg of ice per crater.&#34;\n The rover, which weighs 2,465 pounds (1,118 kg), will land on the Moon thanks to a lander that doubles up as a support station.\u00a0Once at the required location, it uses a 100 lbf rocket placed under a pressurized dome, allowing it to mine 2 meters below the lunar surface.\n  During the mining process, &#34;ejecta from multiple rocket firings blasts up into the dome and gets funneled through a vacuum-like system that separates ice particles from the remaining dust and transports it into storage containers,&#34; Masten Space Systems says.\n  The solar-powered rover is capable of traveling at speeds of up to 2.14 mph (3.45 km/h), and it can also climb 20 percent inclines, which means it can potentially be valuable\u00a0 for future Mars missions.\n The company&#39;s statement also says that &#34;stored water can be electrolyzed into oxygen and hydrogen utilizing solar energy to continue powering the rocket engine for more than 5 years of water excavation.&#34;\n Masten&#39;s new system was designed as part of a collaboration between\u00a0Honeybee Robotics and Lunar Outpost.\n In March this year, a pair of mechanical engineering students at Washington State University received a\u00a0$125,000 grant from NASA to build a prototype for  a &#34;borebot&#34; drilling system that uses\u00a0robots to reach water under Mars&#39; polar ice.\n  Such systems will, in theory, allow future space outposts to operate year-round, enabling continued exploration and new discoveries about the cosmos. Watch a video detailing the Rocket M system below.", "posttime": "2021-06-23 23:09:26", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u706b\u7bad,\u6708\u7403,ice", "title": "\u65b0\u7684\u706b\u7bad\u77ff\u4e1a\u7cfb\u7edf\u901a\u8fc7\u6708\u4eae\u5ca9\u77f3\u7206\u70b8\u5230\u51b0\u51b0 - \u6708\u7403\u51b0\u53ef\u7528\u4e8e\u996e\u7528\u6c34\uff0c\u706b\u7bad\u71c3\u6599\u548c\u5728\u4f7f\u6708\u7403\u548c\u8d85\u8d8a\u7684\u7279\u6d3e\u56e2\u4e2d\u7684\u5176\u4ed6\u91cd\u8981\u8d44\u6e90\u3002 ", "title_en": "New Rocket Mining System Blasts Through Moon Rocks To Reach Ice - Lunar Ice Can Be Used For Drinking Water, Rocket Fuel, And Other Vital Resources In Missions To The Moon And Beyond.", "transed": 1, "url": "https://interestingengineering.com/new-rocket-mining-system-blasts-through-moon-rocks-to-reach-ice", "via": "", "real_tags": ["\u706b\u7bad", "\u6708\u7403", "ice"]}, {"category": "", "categoryclass": "", "imagename": "0e6a9dac0bb921f51682f84f3bc4a848.jpg", "infoid": 1067732, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Sophie Alcorn\u662fAlcorn\u79fb\u6c11\u6cd5\u7684\u521b\u59cb\u4eba\u5728\u7845\u8c37\u548c2019\u5e74\u5168\u7403\u6cd5\u5f8b\u4e13\u5bb6\u5956\u201c\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u7684\u5f8b\u5e08\u4e8b\u52a1\u6240\u201d\u7684\u4f01\u4e1a\u5bb6\u79fb\u6c11\u670d\u52a1\u3002\u201c\u5979\u4e0e\u5c55\u793a\u751f\u547d\u7684\u4f01\u4e1a\u548c\u673a\u4f1a\u8054\u7cfb\u5728\u4e00\u8d77\u3002\n  \u201c\u4f60\u7684\u95ee\u9898\u5bf9\u77e5\u8bc6\u7684\u4f20\u64ad\u81f3\u5173\u91cd\u8981\uff0c\u4f7f\u4e16\u754c\u5404\u5730\u7684\u4eba\u4eec\u5d1b\u8d77\u4ee5\u4e0a\u8fb9\u754c\u5e76\u8ffd\u6c42\u4ed6\u4eec\u7684\u68a6\u60f3\uff0c\u201dSilicon Valley\u79fb\u6c11\u5f8b\u5e08\u7d22\u83f2\u00b7\u827e\u5c14\u5f7b\u7eb3\u8bf4\u3002 \u201c\u65e0\u8bba\u4f60\u662f\u4eba\u4eec\u5728\u4eba\u4eec\u7684\u884c\u52a8\uff0c\u521b\u59cb\u4eba\u8fd8\u662f\u5728\u7845\u8c37\u5bfb\u6c42\u5de5\u4f5c\uff0c\u6211\u90fd\u4f1a\u559c\u6b22\u5728\u6211\u7684\u4e0b\u4e00\u5217\u56de\u7b54\u4f60\u7684\u95ee\u9898\u3002\u201d\n \u989d\u5916\u7684\u7d27\u7f29\u6210\u5458\u53ef\u4ee5\u83b7\u5f97\u6bcf\u5468\u7684\u201c\u4eb2\u7231\u7684\u7d22\u83f2\u201d\u5217;\u4f7f\u7528\u4fc3\u9500\u4ee3\u7801Alcorn\u8d2d\u4e7050\uff05\u6298\u6263\u7684\u4e00\u5e74\u6216\u4e24\u5e74\u8ba2\u9605\u3002\n   \u6211\u4e00\u76f4\u5728\u7f8e\u56fd\u7684H-1B\u4e0a\u8fd1\u4e24\u5e74\u3002\u867d\u7136\u6211\u5f88\u611f\u6fc0\u5730\u901a\u8fc7H-1B\u5f69\u7968\u5e76\u5de5\u4f5c\uff0c\u4f46\u6211\u611f\u5230\u4e0d\u6ee1\uff0c\u5bf9\u6211\u7684\u5de5\u4f5c\u611f\u5230\u6cae\u4e27\u3002\n \u6211\u771f\u7684\u60f3\u5728\u7f8e\u56fd\u5f00\u59cb\u81ea\u5df1\u7684\u4e00\u4e9b\u4e1c\u897f\uff0c\u5e76\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002\u6709\u6ca1\u6709\u4efb\u4f55\u79fb\u6c11\u9009\u62e9\uff0c\u53ef\u4ee5\u8ba9\u6211\u8fd9\u6837\u505a\u5417\uff1f\n   \u6839\u636eEdward Gorbis\u7684\u8bf4\u6cd5\uff0c\u5728H-1B\u4e0a\u7684\u5de5\u4f5c\u4e0d\u6ee1\u548c\u632b\u6298\u662f\u6b63\u5e38\u7684\u3002\u4ed6\u662f\u804c\u4e1a\u7684\u521b\u59cb\u4eba\u7b26\u5408\u4e16\u754c\u548c\u4e00\u4e2a\u4e13\u95e8\u4e0e\u79fb\u6c11\u548c\u7b2c\u4e00\u4ee3\u4e13\u4e1a\u4eba\u58eb\u5408\u4f5c\u7684\u7ee9\u6548\u6559\u7ec3\uff0c\u4ee5\u5e2e\u52a9\u4ed6\u4eec\u627e\u5230\u5c65\u884c\u548c\u8301\u58ee\u6210\u957f\u7684\u804c\u4e1a\u751f\u6daf\u3002\u6211\u6700\u8fd1\u548c\u4ed6\u4e00\u8d77\u8c08\u5230\u4e86\u6211\u7684\u64ad\u5ba2\uff0c\u201c\u6280\u672f\u521d\u521b\u516c\u53f8\u7684\u79fb\u6c11\u6cd5\u201d\u3002\n \u4ed6\u8bf4\u201c\u4e00\u65e6\u79fb\u6c11\u8fbe\u5230\u7a33\u5b9a\uff0c\u4ed6\u4eec\u5c31\u4f1a\u5f00\u59cb\u601d\u8003\uff0c\u201d\u6211\u662f\u8c01\uff0c\u6211\u7684\u4ef7\u503c\u662f\u4ec0\u4e48\uff0c\u6211\u7684\u6838\u5fc3\u8eab\u4efd\u662f\u4ec0\u4e48\uff1f\u201c\u4ed6\u4e0e\u4eba\u4eec\u5408\u4f5c\u5e2e\u52a9\u4ed6\u4eec\u66f4\u597d\u5730\u4e86\u89e3\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u8ba4\u4e3a\u4ed6\u4eec\u7684\u65b9\u5f0f\u505a\uff0c\u6559\u4ed6\u4eec\u5927\u8111\u5982\u4f55\u771f\u6b63\u6709\u6548\uff0c\u7136\u540e\u91cd\u5851\u5e76\u6062\u590d\u5927\u8111\u7684\u6210\u529f\u3002 \n\u6208\u5c14\u5df4\u65af\u8bf4\uff0c\u60f3\u8c61\u514b\u670d\u59a8\u788d\u59a8\u788d\u59a8\u788d\u5b8c\u6210\u4f60\u7684\u5de5\u4f5c\u7684\u65b9\u5f0f\u662f\u7b2c\u4e00\u6b65\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u6709\u4e00\u4e9b\u53ef\u4ee5\u5e2e\u52a9\u60a8\u60f3\u8c61\u5982\u4f55\u671d\u7740\u5efa\u7acb\u68a6\u60f3\u7684\u751f\u6d3b\u7684\u65b9\u5f0f\u3002\n   \u6709\u62b1\u8d1f\u7684\u4f01\u4e1a\u5bb6\u7684\u65b0\u9009\u62e9\u662f\u56fd\u9645\u4f01\u4e1a\u5bb6\u5047\u91ca\uff0c\u8fd9\u662f\u7f8e\u56fd\u4e00\u4e2a\u65b0\u7684\u79fb\u6c11\u8ba1\u5212\uff0c\u5141\u8bb8\u9996\u5e2d\u6267\u884c\u5b98\uff0cCTO\u7b49\u83b7\u5f972.5\u5e74\u7684\u79fb\u6c11\u8eab\u4efd\u3002\u60a8\u53ef\u4ee5\u5c45\u4f4f\u5728\u7f8e\u56fd\u5e76\u8fd0\u884c\u8d35\u516c\u53f8\u3002\u60a8\u7684\u914d\u5076\u53ef\u4ee5\u5de5\u4f5c\uff0c\u60a8\u53ef\u4ee5\u6709\u8d44\u683c\u83b7\u5f972.5\u5e74\u5ef6\u671f\u3002\n \u5982\u4f55\u83b7\u5f97\u8d44\u683c\uff1f\u60a8\u9700\u8981\u81f3\u5c11\u62e5\u670910\uff05\u7684\u7f8e\u56fd\u516c\u53f8\uff0c\u4f8b\u5982\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u6ce8\u518c\u7684\u7279\u62c9\u534e\u5ddeC\u516c\u53f8\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e0c\u671b\u5c55\u793a\u60a8\u7684\u516c\u53f8\u94f6\u884c\u8d26\u6237\u81f3\u5c11\u4ece\u5408\u683c\u7684\u7f8e\u56fd\u6295\u8d44\u8005\u63d0\u51fa\u4e86\u81f3\u5c1125\u4e07\u7f8e\u5143\uff0c\u4f46\u60a8\u53ef\u4ee5\u5c55\u793a\u5176\u4ed6\u8bc1\u636e\u8868\u660e\u8d35\u516c\u53f8\u6709\u53ef\u80fd\u5728\u7f8e\u56fd\u8fc5\u901f\u589e\u957f\u5e76\u521b\u9020\u5de5\u4f5c\u3002\n  \u6280\u672f\u4e0a\u6ca1\u6709\u9650\u5236\u60a8\u53ef\u4ee5\u62e5\u6709\u591a\u5c11H-1B\u96c7\u4e3b\u6216\u60a8\u5de5\u4f5c\u591a\u5c11\u5c0f\u65f6 - \u6216\u8005\u60a8\u5de5\u4f5c\u51e0\u5c0f\u65f6 - \u5728H-1B\u4f4d\u7f6e\u3002\u6240\u4ee5\uff0c\u60f3\u60f3\u5176\u4ed6\u516c\u53f8\u3002 ", "note_en": "Sophie Alcorn is the founder of  Alcorn Immigration Law in Silicon Valley and 2019 Global Law Experts Awards\u2019 \u201cLaw Firm of the Year in California for Entrepreneur Immigration Services.\u201d She connects people with the businesses and opportunities that expand their lives.\n  \u201cYour questions are vital to the spread of knowledge that allows people all over the world to rise above borders and pursue their dreams,\u201d says  Sophie Alcorn, a Silicon Valley immigration attorney. \u201cWhether you\u2019re in people ops, a founder or seeking a job in Silicon Valley, I would love to  answer your questions in my next column.\u201d\n Extra Crunch members receive access to weekly \u201cDear Sophie\u201d columns;  use promo code ALCORN to purchase a one- or two-year subscription for 50% off.\n   I\u2019ve been working on an H-1B in the U.S. for nearly two years. While I\u2019m grateful to have made it through the H-1B lottery and to be working, I\u2019m feeling unhappy and frustrated with my job.\n I really want to start something of my own and work on my own terms in the United States. Are there any immigration options that would allow me to do that?\n   Job dissatisfaction and frustration while on H-1B is normal, according to  Edward Gorbis. He is the founder of  Career Meets World and a performance coach who specifically works with immigrants and first-generation professionals to help them find fulfillment and thrive in their careers and life. I recently spoke with him for  my podcast, \u201cImmigration Law For Tech Startups.\u201d\n He says that \u201conce immigrants reach stability, they start to think, \u2018Who am I, what do I value, what\u2019s my core identity?\u2019\u201d He partners with people to help them to gain a better understanding of why they think the way they do, teach them how our brain really works, and then reshape and retrain the brain for success.\n Gorbis says that imagining overcoming the hurdles that stand in the way of doing the work that will fulfill you is the first step. So, here are some options that can help you imagine how to move toward building the life of your dreams.\n   A great new option for aspiring entrepreneurs is  International Entrepreneur Parole, a new immigration program in the United States that allows CEOs, CTOs, and others to obtain a 2.5-year immigration status. You can live in the U.S. and run your company. Your spouse can work and you could be eligible for a 2.5-year extension.\n How to qualify? You\u2019ll need to own at least 10% of a U.S. company, such as a Delaware C corporation registered in California. Ideally, you\u2019ll want to show that your company bank account has at least $250,000 raised from qualifying U.S. investors prior to applying, but you can demonstrate other evidence to show that your company has the potential to grow rapidly and create jobs in the U.S.\n  There is technically no limit on how many  H-1B employers you can have or how many hours you work \u2014 or how few hours you work \u2014 in an H-1B position. So, think about other companies.", "posttime": "2021-06-23 23:08:44", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u9009\u62e9,sophie", "title": "\u4eb2\u7231\u7684\u7d22\u83f2\uff1a\u4ec0\u4e48\u9009\u62e9\u5141\u8bb8\u6211\u81ea\u5df1\u5f00\u59cb\u4e00\u4e9b\u4e1c\u897f\uff1f ", "title_en": "\n\t\t\t\tDear Sophie: What options would allow me to start something on my own?\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/23/dear-sophie-what-options-would-allow-me-to-start-something-on-my-own/", "via": "", "real_tags": ["\u9009\u62e9", "sophie"]}, {"category": "", "categoryclass": "", "imagename": "58f282be7791168c1dd386a61ef64b10.jpg", "infoid": 1067730, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521d\u521b\u516c\u53f8\u5e94\u8be5\u5982\u4f55\u5728\u4ea7\u54c1\u8bbe\u8ba1\u4e2d\u6559\u80b2\u81ea\u5df1\uff0c\u4e3a\u8fd9\u4e9b\u804c\u4f4d\u96c7\u7528\u5408\u9002\u7684\u4eba\uff0c\u5e76\u5c06\u4ea7\u54c1\u8bbe\u8ba1\u4f5c\u4e3a\u5176\u4e1a\u52a1\u7684\u6838\u5fc3\u4f5c\u54c1\uff1f\n \u4e00\u4e2a\u826f\u597d\u7684\u8d77\u70b9\u662f\u5373\u5c06\u5230\u6765\u7684TC\u65e9\u671f\uff1a\u8425\u9500\uff06amp; 7\u67088\u65e5\uff06amp\u7684\u65af\u79d1\u7279\u5858\u7b79\u6b3e\u8bfe\u7a0b; 9\u3002\n  Tong\u662fIDEO\uff0cIFTTT\u7684\u4e00\u4e2a\u4e3b\u8981\u8bbe\u8ba1\u5e08\uff0cIFTTT\uff0cPinterest\u5728IMO Ventures\u7684EIR\uff0cIMO Ventures\u7684EIR\uff0c\u73b0\u5728\u662f\u8bbe\u8ba1\u57fa\u91d1\u7684\u4e00\u4e2a\u521b\u4e1a\u987e\u95ee\u3002\n \u8c08\u5230\u82e5\u5e72\u4ed4\u7ec6\u5236\u4f5c\u4ea7\u54c1\uff0c\u5e76\u786e\u4fdd\u8fd9\u4e9b\u8bbe\u8ba1\u4e0e\u516c\u53f8\u66f4\u5e7f\u6cdb\u7684\u77ed\u671f\u548c\u957f\u671f\u76ee\u6807\u5408\u9002\uff0c\u4e5f\u8bb8\u6ca1\u6709\u4eba\u66f4\u9002\u5408\u5411\u6211\u4eec\u5c55\u793a\u5b83\u7684\u6240\u505a\u3002\n Tong\u57287\u6708\u4efd\u5728TC\u65e9\u671f\u53d1\u8a00\u7684\u5404\u79cd\u521b\u4e1a\u6838\u5fc3\u7ade\u4e89\u529b\u4e2d\u52a0\u5165\u4e86\u4e00\u957f\u4e32\u4e13\u5bb6\u3002\u8be5\u6e05\u5355\u5305\u62ecSequoia\u7684Mike Vernal\uff08\u4ea7\u54c1\u5e02\u573a\u9002\u5408\u5168\u90e8\u5173\u4e8eTempo\uff09\uff0cCoatue\u7684Caryn Marooney\uff08\u4ee5\u524d\u7684Facebook\u7684Comms\u8d1f\u8d23\u4eba\uff09\u548c\u8d85\u4eba\u7684Rahul Vohra\uff08\u589e\u957f\u9ed1\u5ba2\uff09\u3002\u60a8\u53ef\u4ee5\u67e5\u770b\u6b64\u5904\u7684\u8bae\u7a0b\u3002\n TC\u65e9\u671f\u7684\u6700\u9177\u90e8\u5206\u662f\u6240\u6709\u4f1a\u8bdd\u90fd\u662f\u9488\u5bf9\u53d7\u4f17Q\uff06amp\u7684\u5145\u8db3\u65f6\u95f4\u8bbe\u8ba1\u7684\uff0c\u56e0\u6b64\u521b\u59cb\u4eba\u53ef\u4ee5\u83b7\u5f97\u6709\u5173\u81ea\u5df1\u7684\u5546\u4e1a\u6311\u6218\u7684\u5177\u4f53\uff0c\u91cf\u8eab\u5b9a\u5236\u7684\u5efa\u8bae\u3002\n \u8fd9\u4e9b\u8ff7\u4f60\u8bad\u7ec3\u8425\u5728\u77ed\u77ed\u4e24\u5468\u5185\u542f\u52a8\uff0c\u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u60a8\u5c06\u5728TC\u65e9\u671f\u52a0\u5165\u6211\u4eec - \u5728\u8fd9\u91cc\u62a2\u7968\uff01 ", "note_en": "How are startups supposed to educate themselves in product design, hire the right people for those positions and think about product design as a core piece of their business?\n A good starting point is an upcoming  TC Early Stage: Marketing &amp; Fundraising session with Scott Tong on July 8 &amp; 9.\n  Tong was a principal designer at IDEO, a co-founder at IFTTT, head of product design at Pinterest, an EIR at IMO Ventures and is now a startup advisor at Design Fund.\n When it comes to thoughtfully crafting products, and ensuring that those designs fit in line with the company\u2019s broader short and long-term goals, there is perhaps no one better suited to show us how it\u2019s done.\n Tong joins a long list of experts in a variety of startup core competencies who will be speaking at  TC Early Stage in July. That list includes  Sequoia\u2019s Mike Vernal (Product Market Fit Is All About Tempo),  Coatue\u2019s Caryn Marooney (formerly Facebook\u2019s head of comms) and  Superhuman\u2019s Rahul Vohra (Growth Hacking). You can  check out the agenda here.\n The coolest part of  TC Early Stage is that all sessions are designed with plenty of time for audience Q&amp;A, so founders can get specific, tailored advice about their own business challenges.\n These mini-bootcamps kick off in just two weeks so we hope you\u2019ll be joining us at  TC Early Stage\u2014  Grab your ticket here!", "posttime": "2021-06-23 23:08:08", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u8bbe\u8ba1,\u4e13\u5bb6,design", "title": "\u4ea7\u54c1\u8bbe\u8ba1\u4e13\u5bb6\u65af\u79d1\u7279\u5858\u5c06\u4e8e7\u6708\u4efd\u52a0\u5165\u6211\u4eec\u7684TC\u65e9\u671f ", "title_en": "\n\t\t\t\tProduct design expert Scott Tong will join us at TC Early Stage in July\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/23/product-design-expert-scott-tong-will-join-us-at-tc-early-stage-in-july/", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u4e13\u5bb6", "design"]}, {"category": "", "categoryclass": "", "imagename": "16aca4936a9abd96956e5abffcc876c1.png", "infoid": 1067729, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f53\u516c\u53f8\u4e8e7\u6708\u4efd\u5728\u8428\u514b\u62c9\u95e8\u6258\u542f\u52a8\u5176\u670d\u52a1\u65f6\uff0c\u5b83\u5c06\u4e0e\u73b0\u6709\u7684\u8230\u961f\u4e00\u8d77\u90e8\u7f72\u65b0\u7684S-100T\u6ed1\u677f\u8f66\u3002\u6839\u636e\u8be5\u516c\u53f8\u7684\u4e00\u4f4d\u53d1\u8a00\u4eba\uff0c\u65cb\u8f6c\u5e0c\u671b\u57288\u6708\u4efd\u54118\u6708\u5ef6\u957f\u5230350 S-100TS\uff0c\u5e76\u5728\u5e74\u5e95\uff0c\u5e02\u573a\u4e0a\u6709\u8d85\u8fc7\u6570\u5343\u7f8e\u5143\u7684\u5e02\u573a\u3002\n S-100T\u52a0\u5165\u65cb\u8f6c\u7684\u5176\u4ed6\u8f66\u8f86\uff0c\u539f\u88c5S-100\uff0c\u4e09\u8f6e\u8f66S-200\u548c\u65b0\u7684\u7535\u5b50\u81ea\u884c\u8f66\uff0c\u4e0eSegway-Ninebot\u548cOkai\u5408\u4f5c\u5236\u9020\u3002\u65cb\u8f6c\u5c06\u7ee7\u7eed\u8fd9\u4e9b\u4f19\u4f34\u5173\u7cfb\uff0c\u4ee5\u4fdd\u6301\u591a\u6837\u5316\u7684\u8230\u961f\u3002\n  \u81ea2019\u5e74\u4ee5\u6765\uff0c\u65cb\u8f6c\u4e00\u76f4\u5728\u5f00\u5c55\u81ea\u5df1\u7684\u6ed1\u677f\u8f66\uff0c\u5f53\u65f6\u9053\u8def\u4e0a\u7684\u8bb8\u591a\u6ed1\u677f\u8f66\u90fd\u88ab\u6401\u7f6e\uff0c\u5e76\u8fc5\u901f\u5d29\u6e83\u3002\u6d1b\u6749\u77f6\u65f6\u62a5\u62a5\u544a\u53d1\u73b0La\u533a\u9e1f\u8e0f\u677f\u8f66\u6301\u7eed\u4e86126\u5929\u3002\n \u201c\u90a3\u65f6\uff0c\u521b\u59cb\u4eba\u51b3\u5b9a\u771f\u6b63\u4e3a\u65cb\u8f6c\u672c\u8eab\u8bbe\u5b9a\u4e86\u65b0\u6807\u51c6\uff0c\u800c\u4e14\u8fd8\u4e3a\u884c\u4e1a\u8fdb\u884c\u4e86\u5174\u8da3\uff0c\u201d\u65cb\u8f6c\u4ea7\u54c1\u7684Maxime Veron\uff0cvp\u7684Maxime Veron\uff0c\u544a\u8bc9TechCrunch\u3002 \u201c\u6240\u4ee5\u6211\u4eec\u771f\u7684\u51fa\u53d1\u4e86\u5728\u90a3\u91cc\u521b\u9020\u6700\u8270\u96be\u7684\u6ed1\u677f\u8f66\uff0c\u8fd9\u662fS-100T\u7684\u8bbe\u8ba1\uff0c\u5efa\u7acb\u548c\u6d4b\u8bd5\u7684\u5317\u661f\u3002\u201d\n  \u201c\u6211\u4eec\u771f\u7684\u6d4b\u8bd5\u4e86\u5b83\uff0c\u6298\u78e8\u5b83\uff0c\u6211\u5e94\u8be5\u8bf4\uff0c\u8d85\u51fa\u4e86\u884c\u4e1a\u7684\u671f\u671b\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5e0c\u671b\u5b83\u6301\u7eed\u4e24\u500d\uff0c\u5c31\u50cf\u5176\u4ed6\u7535\u5b50\u8e0f\u677f\u8f66\u4e00\u6837\uff0c\u201d\u4ed6\u8bf4\u3002\n \u65cb\u8f6c\u671f\u671bS-100T\u6301\u7eed\u4e09\u5e74\uff0c\u800c\u5176S-100\u7ea6\u4e3a\u7ea618\u4e2a\u6708\u3002\u8be5\u516c\u53f8\u5728\u6267\u884c400\u79cd\u4e0d\u540c\u7684\u5b89\u5168\u6027\u548c\u8010\u7528\u6027\u6d4b\u8bd5\u540e\u8fbe\u5230\u4e86\u4f30\u8ba1\u7684\u5bff\u547d\uff0c\u5176\u4e2d\u8bb8\u591a\u6d89\u53ca\u7c89\u788e\u8f66\u8f86\u5e76\u4f7f\u5176\u8010\u53d7-4\u534e\u6c0f\u5ea6\u81f3149\u534e\u6c0f\u5ea6\u7684\u6e29\u5ea6\u3002\n \u8e0f\u677f\u8f66\u7684\u4f4e\u9884\u671f\u5bff\u547d\u662f\u4e3a\u516c\u53f8\u5b9e\u73b0\u76c8\u5229\u80fd\u529b\u8fd9\u4e48\u96be\u7684\u4e3b\u8981\u539f\u56e0\u4e4b\u4e00\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u65cb\u8f6c\u5c06\u5176\u8e0f\u677f\u8bbe\u8ba1\u7684\u8010\u7528\u6027\u96c6\u4e2d\u8bbe\u8ba1\u3002 \n\u201c\u8010\u7528\u6027\u662f\u6211\u4eec\u5728\u76c8\u5229\u80fd\u529b\u65b9\u9762\u6700\u5927\u7684\u6760\u6746\uff0c\u201dveron\u8bf4\u3002 \u201c\u5b83\u4f1a\u5e2e\u52a9\u6211\u4eec\u7684\u5e95\u7ebf\uff0c\u4ee5\u786e\u4fdd\u8e0f\u677f\u8f66\u6301\u7eed\u66f4\u957f\u65f6\u95f4\uff0c\u4ee5\u53ca\u6211\u4eec\u5438\u5f15\u9a91\u884c\u7684\u5ba2\u6237\u7684\u9876\u7ea7\u3002\u201d  Veron\u8868\u793a\uff0cS-100T\u8bbe\u8ba1\u4e3a\u6a21\u5757\u5316\uff0c\u5177\u6709\u8010\u7528\u7684\u5355\u4e00\u6846\u67b6\u8bbe\u8ba1\uff0c\u5141\u8bb8\u6613\u4e8e\u7ef4\u4fee\u548c\u96f6\u4ef6\u66f4\u6362\uff0c\u8fd9\u5e94\u8be5\u6709\u52a9\u4e8e\u5bff\u547d\u548c\u8f66\u8f86\u7684\u53ef\u6301\u7eed\u6027\u3002 \u4e5f\u8bb8\u6709\u4e00\u5929\uff0c\u8bbe\u8ba1\u548c\u65cb\u8f6c\u7684\u8f66\u8f86\u6240\u6709\u6743\u4e5f\u5c06\u5e2e\u52a9\u516c\u53f8\u63d0\u51fa\u826f\u597d\u7684\u5bff\u547d\u7b56\u7565\u548c\u53ef\u56de\u6536\u6027\u8bbe\u8ba1\u3002  \u201c\u8010\u7528\u6027\u4e00\u76f4\u662f\u7b2c\u4e00\uff0c\u4f46\u6211\u4eec\u5c06\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u6539\u5584\u6240\u6709\u5173\u952e\u68c0\u67e5\u70b9\uff0c\u56e0\u4e3a\u6211\u4eec\u63a7\u5236\u5b83\uff0c\u56e0\u4e3a\u6211\u4eec\u63a7\u5236\u7740\u5168\u90e8\uff0c\u201dveron\u8bf4\u3002 ", "note_en": "When the company launches its service in Sacramento in July, it\u2019ll deploy 25 of the new S-100T scooters along with its existing fleet. Spin hopes to scale to 350 S-100Ts by August and have more than a few thousand in the market by the end of the year, according to a spokesperson for the company.\n The S-100T joins Spin\u2019s other vehicles, the original S-100, the three-wheeler S-200 and a new e-bike, which are manufactured in partnership with Segway-Ninebot and Okai. Spin will continue these partnerships in order to maintain a diverse fleet.\n  Spin has been working on its own scooter since 2019, when many of the scooters on the road came off-the-shelf and fell apart fast. A Los Angeles Times report found   LA-area Bird scooters lasted only 126 days .\n \u201cAt that time, the founders decided to really set a new standard not only for Spin itself, but also for the industry on what e-scooter durability should be,\u201d Maxime Veron, VP of product at Spin, told TechCrunch. \u201cSo we really set out to create the toughest scooter out there, and that has been the north star for the design, build and testing of the S-100T.\u201d\n  \u201cAnd we really tested it, tortured it, I should say, way beyond the expectation of the industry, and that\u2019s why we expect it to last twice as long as other e-scooters,\u201d he said.\n Spin expects the S-100T to last over three years, compared to about 18 months for its S-100. The company reached this estimated lifespan after performing 400 different safety and durability tests, many of which involved pulverizing the vehicle and making it withstand temperatures from -4 degrees Fahrenheit to 149 degrees Fahrenheit.\n Low life expectancy of scooters is one of the main reasons why it\u2019s been so hard for companies to achieve profitability, which is why Spin is focusing its scooter design around durability.\n  \u201cDurability is the biggest lever we have in terms of profitability,\u201d said Veron. \u201cIt\u2019s gonna help both our bottom line in terms of making sure that the scooters last longer, and our top line of attracting customers who will love the ride.\u201d\n Veron says the S-100T is designed to be modular, with a single frame design that\u2019s durable and allows for easy repairs and parts replacements, which should help with lifespan and sustainability of the vehicle. Perhaps one day, both the design and Spin\u2019s ownership of the vehicles will also help the company come up with a good end-of-life strategy and design for recyclability.\n \u201cDurability has been the number one, but we will be able over time to improve on all the key checkpoints including end-of-life because we control it all,\u201d said Veron.", "posttime": "2021-06-23 23:07:37", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u798f\u7279,\u7535\u5b50,micromobility,\u65cb\u8f6c", "title": "\u798f\u7279\u5fae\u751f\u7269\u5b50\u516c\u53f8\u65cb\u8f6c\u9996\u6b21\u5185\u90e8\u5efa\u9020\u7684\u7535\u5b50\u8e0f\u677f\u8f66 ", "title_en": "\n\t\t\t\tFord micromobility subsidiary Spin launches first in-house built e-scooter\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/06/23/ford-micromobility-subsidiary-spin-launches-first-in-house-built-e-scooter/", "via": "", "real_tags": ["\u798f\u7279", "\u7535\u5b50", "\u65cb\u8f6c"]}, {"category": "", "categoryclass": "", "imagename": "9691c9bacc67ed399f28bb84d3088e2e.jpeg", "infoid": 1067725, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u79d1\u6280\u884c\u4e1a\u8d44\u52a9\u96c6\u56e2\u59d4\u6258\u4e00\u9879\u65b0\u7684\u6c11\u610f\u8c03\u67e5\u663e\u793a\uff0c53\uff05\u7684\u9009\u6c11\u81f3\u5c11\u6709\u5229\u4e8e\u4e00\u4e9b\u6280\u672f\u89c4\u5219\u3002\n \u65e9\u4e0a\u8c18\u8be2\u7684\u6570\u5b57\u6389\u4e86\u4e0b\u6765\uff0c\u8fd9\u662f\u4ee3\u8868\u8fdb\u5ea6\u7684\u6c11\u610f\u8c03\u67e5\uff0c\u7ed9\u51fa\u4e86\u7acb\u6cd5\u5982\u4f55\u5f71\u54cd\u670d\u52a1\u7684\u5177\u4f53\u4f8b\u5b50\u3002\n \u7136\u800c\uff0c\u5927\u591a\u6570\u53d7\u8bbf\u8005\u6ca1\u6709\u6392\u540d\u7b2c39\u5c81;\u7136\u800c\uff0c\u5728\u56fd\u4f1a\u7684\u6574\u4f53\u4f18\u5148\u4e8b\u9879\u5217\u8868\u4e2d\u9ad8\u5ea6\u9ad8\u5ea6\u3002\n \u7acb\u6cd5\u8005\u5c06\u5728\u5468\u4e09\u8ba8\u8bba\u4e00\u63fd\u5b50\u53cd\u5784\u65ad\u7968\u636e\uff0c\u5e76\u5728\u5468\u4e09\u9020\u6210\u5927\u578b\u6280\u672f\u3002\n \u6839\u636e\u65e9\u4e0a\u54a8\u8be2\u548c\u59d4\u6258\u7684\u6280\u672f\u8d44\u52a9\u7684\u5ba3\u4f20\u5c0f\u7ec4\u8fdb\u6b65\uff0c\u6839\u636e\u672c\u6b21\u6295\u7968\u7684\u8c03\u67e5\uff0c\u9009\u6c11\u6709\u5229\u4e8e\u4ed6\u4eec\u8ba4\u4e3a\u59a8\u788d\u4ed6\u4eec\u6700\u559c\u7231\u7684\u670d\u52a1\u7684\u63aa\u65bd\u7684\u652f\u6301\u3002\n \u8c03\u67e5\u7ed3\u679c\u661f\u671f\u4e09\uff0c\u623f\u5b50\u53f8\u6cd5\u59d4\u5458\u4f1a\u8bbe\u5b9a\u4e3a\u4e89\u8bba\u4e00\u7cfb\u5217\u53cd\u5784\u65ad\u7968\u636e\uff0c\u65e8\u5728\u4e3a\u6700\u5927\u7684\u6280\u672f\u4f01\u4e1a\u63d0\u4f9b\u91cd\u65b0\u5236\u5b9a\u7684\u4e00\u4e2a\u53cd\u5784\u65ad\u6cd5\u6848\u3002\u8be5\u6cd5\u6848\u9075\u5faa\u4e13\u5bb6\u7ec4\u8c03\u67e5\uff0c\u53d1\u73b0\u4e9a\u9a6c\u900a\uff0c\u82f9\u679c\uff0cFacebook\u548c\u8c37\u6b4c\u5360\u5784\u65ad\u6743\u3002\n  \u4ed6\u4eec\u57fa\u91d1\u7684\u5927\u79d1\u6280\u516c\u53f8\u6216\u884c\u4e1a\u56e2\u4f53\uff08\u5305\u62ec\u8fdb\u5ea6\uff09\u516c\u5f00\u53cd\u5bf9\u8be5\u6cd5\u6848\uff0c\u79f0\u4ed6\u4eec\u5c06\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u670d\u52a1\u7528\u6237\u6765\u4f9d\u9760\u670d\u52a1\u3002\u6839\u636e\u65b0\u7684\u6c11\u610f\u8c03\u67e5\uff0c\u90a3\u4e2a\u60c5\u666f\u9009\u6c11\u5c06\u53cd\u5bf9\u3002 \n\u603b\u4f53\u800c\u8a00\uff0c\u8c03\u67e5\u53d7\u8bbf\u8005\u5728\u5176\u5bf9\u56fd\u4f1a\u62c5\u5fe7\u7684\u62c5\u5fe7\u6e05\u5355\u4e0a\u4e3e\u884c\u4e86\u9ad8\u4f4d\u3002\u5728\u5305\u62ec\u7ecf\u6d4e\uff0c\u516c\u5171\u536b\u751f\uff0c\u6c14\u5019\u53d8\u5316\u548c\u57fa\u7840\u8bbe\u65bd\u7684\u4f18\u5148\u4e8b\u9879\u5217\u8868\u4e2d\uff0c44\uff05\u7684\u53d7\u8bbf\u8005\u5c06\u6280\u672f\u516c\u53f8\u89c4\u5b9a\u6392\u540d\u4e3a\u6700\u540e\u7684\u4f1a\u8bae\u5e94\u5730\u540d\u7684\u59d3\u6c0f\u3002\n \u5728\u770b\u5230\u6709\u5173\u5927\u578b\u6280\u672f\u5e73\u53f0\u7684\u5177\u4f53\u793a\u4f8b\u4e4b\u524d\uff0c\u6709\u591a\u5927\u7684\u6280\u672f\u5e73\u53f0\u5c06\u5982\u4f55\u6539\u53d8\u4ed6\u4eec\u7684\u670d\u52a1\uff0c53\uff05\u7684\u53d7\u8bbf\u8005\u8868\u793a\uff0c\u4ed6\u4eec\u81f3\u5c11\u6709\u4e00\u4e9b\u652f\u6301\u7684\u56fd\u4f1a\u901a\u8fc7\u7acb\u6cd5\uff0c\u4ee5\u5bf9\u4e9a\u9a6c\u900a\uff0c\u82f9\u679c\uff0cFacebook\u548c\u8c37\u6b4c\u7b49\u516c\u53f8\u65bd\u52a0\u65b0\u7684\u6cd5\u89c4\u3002\n \u4f46\u662f\uff0c\u5f53\u7ed9\u51fa\u4f01\u4e1a\u5982\u4f55\u5728\u8d26\u5355\u4e0b\u6539\u53d8\u5176\u4ea7\u54c1\u7684\u5177\u4f53\u4f8b\u5b50\u65f6\uff0c\u66f4\u591a\u7684\u53d7\u8bbf\u8005\u8868\u793a\u4ed6\u4eec\u4f1a\u53cd\u5bf9\u4ed6\u4eec\u3002\u4f8b\u5982\uff0c\u5f53\u4e9a\u9a6c\u900a\u53ef\u80fd\u88ab\u9650\u5236\u5728\u4e00\u4e9b\u4e9a\u9a6c\u900a\u7d20\u5236\u4ea7\u54c1\u4e2d\u53ef\u4ee5\u9650\u5236\u4e9a\u9a6c\u900a\u7684\u53ef\u80fd\u6027\u65f6\uff0c\u53ea\u670915\uff05\u7684\u4eba\u8868\u793a\uff0c\u4ed6\u4eec\u4ecd\u7136\u652f\u6301\u6b64\u7c7b\u7acb\u6cd5\uff0c17\uff05\u8868\u793a\u5bf9\u4ed6\u4eec\u7684\u601d\u60f3\u6ca1\u6709\u5f71\u54cd\uff0c9\uff05\u7684\u4eba\u8bf4Didn\uff06\uff0339; T\u77e5\u9053\u6216\u6ca1\u6709\u610f\u89c1\uff0c59\uff05\u7684\u4eba\u8868\u793a\u5c06\u4f7f\u4ed6\u4eec\u81f3\u5c11\u6709\u53ef\u80fd\u53cd\u5bf9\u8d26\u5355\u3002\n \u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0c\u4e00\u540d\u4e8c\u6210\u7acb\u7acb\u6cd5\u8005\u4ecb\u7ecd\u7684\u4e24\u9879\u8d26\u5355\u53ef\u80fd\u5bf9\u6280\u672f\u5e73\u53f0\u4ea7\u751f\u6700\u5927\u7684\u7ed3\u6784\u5f71\u54cd\u3002\u7f8e\u56fd\u7684\u9009\u62e9\u548c\u521b\u65b0\u5728\u7ebf\u6cd5\u6848\u5c06\u963b\u6b62\u4e3b\u5bfc\u5e73\u53f0\u5bf9\u4f7f\u7528\u5176\u5e02\u573a\u7684\u7ade\u4e89\u5bf9\u624b\u7684\u4e3b\u5bfc\u5e73\u53f0\uff0c\u800c\u7ed3\u675f\u5e73\u53f0\u5784\u65ad\u6cd5\u5c06\u7981\u6b62\u8fd9\u4e9b\u5e73\u53f0\u62e5\u6709\u51fa\u73b0\u5229\u76ca\u51b2\u7a81\u7684\u4e1a\u52a1\u7ebf\u3002\u8fd9\u5bf9\u4e9a\u9a6c\u900a\u548c\u82f9\u679c\u7b49\u516c\u53f8\u8868\u793a\u660e\u786e\u7684\u5a01\u80c1\uff0c\u8fd9\u4e9b\u516c\u53f8\u6b63\u5728\u8fd0\u8425\u4ed6\u4eec\u63d0\u4f9b\u4ea7\u54c1\u7684\u5e02\u573a\u3002\n  \u5728\u4ecb\u7ecd\u7968\u636e\u7684\u5176\u4ed6\u53ef\u80fd\u7684\u5f71\u54cd\u4e4b\u540e\uff0c\u5c31\u50cf\u8c37\u6b4c\u88ab\u9650\u5236\u5728\u5176\u4e3b\u8981\u7684\u641c\u7d22\u7ed3\u679c\u4e2d\u663e\u793a\u8c37\u6b4c\u5730\u56fe\u6216\u88ab\u963b\u6b62\u9884\u5148\u5b89\u88c5\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u7684\u82f9\u679c\u4e00\u6837\uff0c39\uff05\u8868\u793a\u4ed6\u4eec\u4ecd\u7136\u81f3\u5c11\u6709\u70b9\u652f\u6301\u6b64\u7c7b\u7acb\u6cd5\u3002\u6c11\u4e3b\u515a\u4eba\u548c\u5171\u548c\u515a\u4eba\u66f4\u6709\u53ef\u80fd\u5728\u968f\u7740\u65b9\u6848\u5448\u73b0\u540e\u53cd\u5bf9\u8d26\u5355\u3002\n \u65e9\u4e0a\u54a8\u8be2\u5468\u56db\u5c06\u8fd12,000\u540d\u767b\u8bb0\u7684\u9009\u6c11\u63a5\u53d7\u4e86\u51e0\u4e2a\u5173\u4e8e\u6280\u672f\u6cd5\u89c4\u7684\u4e00\u7cfb\u5217\u95ee\u9898\u3002\u5b83\u4f7f\u8bef\u5dee\u5e45\u5ea6\u4e3a+/- 2\uff05\u3002\u672c\u96c6\u56e2\uff0c40\uff05\u88ab\u786e\u5b9a\u4e3a\u6c11\u4e3b\u515a\u4eba\uff0c\u5171\u548c\u56fd\u4eba34\uff05\uff0c\u4e3a26\uff05\u7684\u72ec\u7acb\u4eba\u58eb\u3002\n \u53d7\u8bbf\u8005\u503e\u659c\u7a0d\u5927\uff0c45\u5c81\u53ca\u4ee5\u4e0a36\uff05\uff0c\u4f46\u5e74\u6536\u5165\u53ea\u670919\uff05\u7684\u4eba\u6570\u8d85\u8fc710\u4e07\u7f8e\u5143\u3002 ", "note_en": "A new poll commissioned by tech industry-funded group shows 53% of voters favor at least some tech regulation.\n The numbers dropped when\u00a0Morning Consult, which conducted the poll on behalf of Chamber of Progress, gave specific examples of how the legislation would affect services.\n Most respondents didn&#39;t rank tech regulation high on their list of overall priorities for Congress, however.\n Lawmakers are set to discuss a package of antitrust bills impacting Big Tech on Wednesday.\n Voters favor tech regulation but are less supportive of measures they perceive to hamper their favorite services, according to a  poll conducted by Morning Consult and commissioned by tech-funded advocacy group Chamber of Progress.\n The survey results come Wednesday, just hours before the House Judiciary Committee is set to debate a  series of antitrust bills aimed at reining in the power of the largest tech firms. The bills follow an investigation by the panel that found that  Amazon,  Apple,  Facebook and  Google hold monopoly power.\n  The Big Tech companies or industry groups they fund, including Chamber of Progress, have publicly opposed the bills,  saying they would fundamentally alter services users have come to rely on. According to the new poll, that&#39;s a scenario voters would oppose.\n Overall, survey respondents didn&#39;t rank tech regulation high on their list of concerns for Congress. Of a list of priorities including the economy, public health, climate change and infrastructure, 44% of respondents ranked technology company regulations as last on the list of what Congress should address.\n Prior to seeing specific examples of how large tech platforms would have to change their services, 53% of respondents said they at least somewhat supported Congress passing legislation to impose new regulations on companies like Amazon, Apple, Facebook and Google.\n But when given specific examples of how the businesses might have to alter their offerings under the bills, more respondents said they would oppose them. For example, when presented with the possibility that Amazon could be restricted from giving free shipping on some Amazon Prime products, just 15% said they would still support such legislation, 17% said it would have no impact on their thinking, 9% said they didn&#39;t know or had no opinion and 59% said it would make them at least somewhat more likely to oppose the bill.\n Two of the bills introduced by a bipartisan group of lawmakers earlier this month could have the greatest structural impact on the tech platforms. The American Choice and Innovation Online Act would prevent dominant platforms from favoring their own services over competitors that use their marketplaces, while the Ending Platform Monopolies Act would prohibit such platforms from owning business lines that present a conflict of interest. That presents a clear threat to companies like Amazon and Apple, which operate marketplaces on which they also offer products.\n  After being presented with other possible implications of the bills, like Google being restricted from showing Google Maps in its main search results or Apple being prevented from pre-installing certain apps, 39% said they would still at least somewhat support such legislation. Both Democrats and Republicans were more likely to oppose the bills after being presented with the scenarios.\n Morning Consult surveyed nearly 2,000 registered voters from Thursday to Monday on a range of questions about tech regulation. It gave the margin of error as +/-2%. Of the group, 40% identified as Democrats, 34% as Republicans and 26% as Independents.\n Respondents skewed slightly older, with 36% ages 45 and older, and only 19% made over $100,000 in annual income.", "posttime": "2021-06-23 22:57:05", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "rust,\u6280\u672f,tech", "title": "\u65e9\u4e0a\u54a8\u8be22,000\u540d\u9009\u6c11\u7684\u6c11\u610f\u8c03\u67e5\uff1a53\uff05\u81f3\u5c11\u6709\u4e9b\u652f\u6301\u56fd\u4f1a\u7684\u5927\u578b\u6280\u672f\u53cd\u5784\u65ad\u7968\u636e; 44\uff05\u7684\u6392\u540d\u6280\u672f\u89c4\u5219\u662f\u4ed6\u4eec\u7684\u6700\u4f4e\u4f18\u5148\u7ea7 ", "title_en": "Morning Consult poll of 2,000 US voters: 53% at least somewhat support Congress' Big Tech antitrust bills; 44% rank tech regulation as their lowest priority", "transed": 1, "url": "https://www.cnbc.com/2021/06/23/new-poll-shows-voters-favor-tech-regulation-but-rank-it-low-priority.html", "via": "", "real_tags": ["rust", "\u6280\u672f", "tech"]}, {"category": "", "categoryclass": "", "imagename": "e760290ff5dfdb4ee9be1c6511e156b8.jpg", "infoid": 1067723, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u89e3\u91ca\u4e86ARM64\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\u7684\u57fa\u672c\u67b6\u6784\uff0c\u5e76\u8bf4\u660e\u4e86\u5982\u4f55\u901a\u8fc7\u6c47\u7f16\u8bed\u8a00\u4f8b\u7a0b\u6765\u8bbf\u95ee\u548c\u8fd4\u56de\u503c\u7684\u65b9\u5f0f\u3002\u6211\u4e0e\u4e00\u4e2a\u60ac\u5d16\u5e08\u7ed3\u675f\uff0c\u5e0c\u671b\u89e3\u91ca\u5982\u4f55\u4ece\u4f20\u9012\u7ed9\u4f8b\u7a0b\u7684\u6307\u9488\u8bbf\u95ee\u53c2\u6570\u3002\n \u6709\u4e24\u4e2a\u57fa\u672c\u8bf4\u660e\uff0c\u7528\u4e8e\u5728\u5185\u5b58\u548c\u5bc4\u5b58\u5668\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\uff0cLDR\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e2d\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u5230\u5185\u5b58\u4e2d\u3002\u4ed6\u4eec\u6700\u7b80\u5355\u7684\u7528\u9014\u662f\uff1a\n LDR X0\uff0c[REG]\u52a0\u8f7dREG\u4e2d\u7684\u5730\u5740\uff0c\u4f8b\u5982\u5bc4\u5b58\u5668X1\uff0c\u8fdb\u5165\u5bc4\u5b58\u5668X0\n str x0\uff0c[reg]\u5c06\u5bc4\u5b58\u5668x0\u4e2d\u7684\u5185\u5bb9\u5b58\u50a8\u5230reg\u4e2d\u7684\u5730\u5740\u4e2d\uff0c\u4f8b\u5982\u5bc4\u5b58\u5668x1\n \u8bf7\u6ce8\u610f\uff0c\u4e24\u8005\u7684\u79fb\u52a8\u65b9\u5411\u5982\u4f55\u4e0d\u540c\uff1aLDR\u5c06\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u52a0\u8f7d\u4e3a\u76ee\u7684\u5730\uff0c\u800cstr\u5b58\u50a8\u5728\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u4e2d\u7684\u6e90\u3002\u8bf4\u660e\u66f4\u5e38\u7528\u4f7f\u7528\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u6307\u5b9a\u7ed3\u679c\u7684\u76ee\u7684\u5730; str\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u4f8b\u5916\u3002\n \u8fd9\u4e9b\u6307\u4ee4\u4e2d\u7684reg\u9879\u76ee\u53ef\u4ee5\u4f7f\u7528\u4e94\u79cd\u4e0d\u540c\u7684\u5bfb\u5740\u6a21\u5f0f\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\uff1a[x1]  - \u57fa\u672c\u5bc4\u5b58\u5668\uff0c\u5b83\u53ef\u4ee5\u5305\u62ec\u4f7f\u7528\u5806\u6808\u6307\u9488[x1\uff0c\u504f\u79fb]  - \u5f52\u6863\u5bc4\u5b58\u5668\uff0c\u5176\u4e2d\u6709\u6548\u5730\u5740\u662f\u57fa\u672c\u5bc4\u5b58\u5668\u4e2d\u7684\u5730\u5740\u548c\u504f\u79fb[x1\uff0c\u504f\u79fb]\u7684\u603b\u548c\uff01 - \u9884\u7d22\u5f15\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u504f\u79fb\u91cf\uff0c\u4f46\u5728\u4f7f\u7528\u5bc4\u5b58\u5668\u4e2d\u7684\u5730\u5740\u4e4b\u524d\uff0c\u8bf7\u5728\u5bc4\u5b58\u5668\u4e2d\u6dfb\u52a0\u504f\u79fb\u91cf;\u8fd9\u901a\u5e38\u7528\u4e8e\u5728\u9635\u5217[x1]\u4e2d\u52a0\u8f7d\u6216\u5b58\u50a8\u503c\uff0c\u504f\u79fb - \u7d22\u5f15\u540e\uff0c\u5b83\u7c7b\u4f3c\u4e8e\u504f\u79fb\u91cf\uff0c\u4f46\u7531\u4e8e\u8be5\u6307\u4ee4\uff0c\u901a\u8fc7\u5728\u672b\u5c3e\u6dfb\u52a0\u504f\u79fb\u91cf\u6765\u66f4\u65b0\u5bc4\u5b58\u5668\u4e2d\u7684\u5730\u5740\u6267\u884c;\u8fd9\u901a\u5e38\u7528\u4e8e\u4ece\u5806\u6808\u6807\u7b7e -  PC\u76f8\u5bf9\u5f39\u51fa\u503c\uff0c\u5b83\u7528\u4e8e\u901a\u8fc7\u6807\u7b7e\u8bbf\u95ee\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u503c\u3002\n \u8981\u4e86\u89e3\u8fd9\u4e9b\uff0c\u901a\u8fc7\u4e00\u4e9b\u4f8b\u5b50\u5f88\u6709\u7528\u3002\u5728\u8fd9\u4e9b\u5f00\u59cb\u7684\u5f00\u59cb\u65f6\uff0c\u5bc4\u5b58\u5668X1\u5305\u542b\u5730\u574000000100\u3002 \nLDR X0\uff0c[x1,8]\u5c06\u5730\u574000000108\uff0800000100 + 8\uff09\u768464\u4f4d\u6574\u6570\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668x0\u4e2d  ldr x0\uff0c[x1,8]\uff01 \u5c06\u5730\u574000000108\uff0800000100 + 8\uff09\u768464\u4f4d\u6574\u6570\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668x0\u4e2d\uff0c\u5e76\u5728\u5bc4\u5b58\u5668x1\u4e2d\u79bb\u5f00\u5730\u574000000108  LDR X0\uff0c[X1]\uff0c8\u5c06\u5730\u574000000100\u768464\u4f4d\u6574\u6570\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668X0\u4e2d\uff0c\u5e76\u5728\u5bc4\u5b58\u5668X1\u4e2d\u79bb\u5f00\u5730\u574000000108\uff0800000100 + 8\uff09\u3002  \u6307\u5b9a\u5730\u5740\u7684\u6700\u7ec8\u590d\u6742\u6027\u662f\u6307\u5b9a\u504f\u79fb\u91cf\u7684\u53d8\u5316\uff0c\u8fd9\u91cc\u663e\u793a\u4e3a\u5bc4\u5b58\u5668X1\u7684\u504f\u79fb\u91cf\uff1a  [x1\uff0cx2\uff0clsl 2]  - \u504f\u79fb\u91cf\u662f\u5bc4\u5b58\u5668x2\u4e2d\u5305\u542b\u7684\u6574\u6570\uff0c\u5de6\u79fb2\u4e2a\u4f4d\u7f6e  [X1\uff0cW2\uff0cUXTW 2]  - \u504f\u79fb\u91cf\u662f\u5bc4\u5b58\u5668W2\uff0832\u4f4d\uff09\u4e2d\u5305\u542b\u7684\u6574\u6570\uff0c\u5de6\u79fb2\u4e2a\u4f4d\u7f6e\u3002  \u8fd9\u4e9b\u56fe\u4e2d\u6982\u8ff0\u4e86\u8be5\u56fe\uff0c\u5176\u4e2d\u8fd8\u6db5\u76d6\u4e86\u6211\u5df2\u7ecf\u68c0\u67e5\u8fc7\u7684\u5176\u4ed6\u64cd\u4f5c\u6570\u7c7b\u578b\u548c\u8fd4\u56de\u503c\u3002 \n\u73b0\u5728\u5c1d\u8bd5\u5176\u4e2d\u4e00\u4e9b\u8d1f\u8f7d\u5e76\u4f7f\u7528\u4e0d\u540c\u7684\u5bfb\u5740\u6a21\u5f0f\u5b58\u50a8\u8bf4\u660e\u3002\u8fd9\u662f\u7b80\u5355\u7684\uff0c\u4f7f\u7528ASMattic\uff1a\u9996\u5148\uff0c\u60a8\u9700\u8981\u66f4\u6539ASMMATH.h\u5934\u6587\u4ef6\u4ee5\u63d0\u4f9b\u65b0\u7684\u547c\u53eb\uff0c\u8bf7\u5728\u6211\u7684\u58f3\u4f53\u5916\u90e8TATEADD\uff08\u53cc\uff0c\u53cc*\uff0c\u53cc*\uff09;\u5b83\u5c06\u4e00\u4e2a\u53cc\u500d\u4f5c\u4e3a\u503c\u548c\u4e24\u4e2a\u89c6\u4e3a\u6307\u9488\uff0c\u5e76\u8fd4\u56de\u53cc\u91cd\u503c\u3002\u8981\u5728SWIFT\u4e2d\u8c03\u7528\uff0c\u8bf7\u4f7f\u7528\u7c7b\u4f3c\u4e8eLet MyA = Thea.DoubleValue var myb = thetemp = thec.doublevalue var myc = [thetemp + 1.0\uff09\uff0c\uff08thetemp + 2.0\uff09]\u8ba9myd = testadd\uff08 Mya\uff0c\uff06amp; myb\uff0c\uff06amp; myc\uff09\u8fd9\u9996\u5148\u8bbe\u7f6e\u4e09\u4e2a\u53c2\u6570\u6765\u5305\u542b\u4e00\u4e2a\u4e0d\u53ef\u53d8\u53cc\u503c\uff0c\u6307\u5411\u4e00\u4e2a\u53cc\u91cd\u7684\u6307\u9488\uff0c\u6307\u5411\u4e09\u4e2a\u5143\u7d20\u7684\u53cc\u6253\u6570\u7ec4\uff0c\u5728\u8c03\u7528\u8be5\u51fd\u6570\u8fd4\u56de\u53cc\u91cd\u4e4b\u524d\u7ed3\u679c\u3002\u7136\u540e\uff0c\u60a8\u4f7f\u7528self.outputtext.string =\uff06\uff0334\u663e\u793a\u7ed3\u679c\u3002\u7ed3\u679c= \\\uff08Myd\uff09a = \\\uff08mya\uff09b = \\\uff08myb\uff09c = \\\uff08myc\uff09\\ n\uff06\uff0334;\n  _testadd\uff1astr lr\uff0c[sp\uff0c\uff03-16]\uff01 LDR D5\uff0cMulti_two //  - \u4f7f\u7528PC-Inflication Access FMUL D6\uff0cD0\uff0cD5 //  -  DOUNDE\u7684\u6807\u8bb0\u503c\u662f\u4eceD0\u5bc4\u5b58\u5668LDR D7\uff0c[x0] //  - \u4f7f\u7528\u57fa\u5730\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6ce8\u518c\u8bbf\u95ee\u3002\u8bf7\u6ce8\u610f\uff0c\u53cc\u500d\u7684\u5730\u5740\u4e0d\u5728\u6d6e\u70b9\u5bc4\u5b58\u5668\u4e2d\u4f20\u9012\uff0c\u800c\u662f\u5728\u901a\u7528\u5bc4\u5b58\u5668\u4e2d\u4f20\u9012\u3002 FMUL D7\uff0cD7\uff0cD5 STR D7\uff0c[X0] LDR D5\uff0cMULTER_THREE LDR D4\uff0c[X1] FMUL D7\uff0cD4\uff0cD5 STR D7\uff0c[X1] LDR D4\uff0c[X1,8]\uff01 //  - \u4f7f\u7528\u9884\u7d22\u5f15\u9012\u589ex1\u9012\u589e8\u7684\u7d22\u5f15\uff0c\u56e0\u6b64\u8bbf\u95ee\u9635\u5217\u4e2d\u7684\u4e0b\u4e00\u4e2a\u53cc\u500d\u3002 FMUL D7\uff0cD4\uff0cD5 STR D7\uff0c[X1] LDR D4\uff0c[X1,8]\uff01 FMUL D7\uff0cD4\uff0cD5 STR D7\uff0c[X1] FMOV D0\uff0cD6 //  - \u7ed3\u679c\u8fd4\u56de\u4e3aD0\u5bc4\u5b58\u5668\u4e2d\u7684\u53cc\u503c\u3002 LDR LR\uff0c[SP]\uff0c\uff0316 RET\n  \u73b0\u5728\u6211\u4eec\u5904\u4e8e\u8bbf\u95ee\u4f20\u9012\u7ed9\u88c5\u914d\u4f8b\u7a0b\u7684\u53c2\u6570\u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u7ed3\u679c\u4e3a\u503c\u4ee5\u53ca\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u7684\u8fd9\u4e9b\u53c2\u6570\u3002\u4e0b\u4e00\u6b65\u662f\u63a7\u5236\u7a0b\u5e8f\u6d41\uff0c\u6211\u5c06\u5728\u672c\u7cfb\u5217\u4e2d\u7684\u4e0b\u4e00\u6b65\u5f00\u59cb\u3002\n  1\uff1a\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\u4ee5\u5f00\u53d1\u88c5\u914d\u4f8b\u7a0b\uff0c\u5305\u62ec\u5c06\u6c47\u96c6\u8bed\u8a00\u4eceSWIFT\u8c03\u7528\u6c47\u7f16\u8bed\u8a00\u7684\u89e3\u91ca\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u5b8c\u6574\u7684Xcode\u9879\u76ee2\uff1a\u5bc4\u5b58\u5668\u89e3\u91ca\uff0c\u56fe\u8868\u663e\u793a\u4e86ARM64\u5904\u7406\u5668\u7684\u5bc4\u5b58\u5668\uff0c\u5e76\u6309\u503c\u4f20\u9012\u53c2\u6570\n    \u624b\u672f\u547c\u53eb\u6807\u51c6\u7528\u4e8eARM 64\u4f4d\u67b6\u6784\uff08ARM\uff09\u4eceGitHub\u5199\u4f5cARM64\u4ee3\u7801\u7528\u4e8eApple\u5e73\u53f0\uff08Apple\uff09Stephen Smith\uff082020\uff09\u752864\u4f4dARM\u6c47\u7f16\u8bed\u8a00\u7f16\u7a0b\uff0cAPRess\uff0cISBN 978 1 4842 5880 4. Daniel Kusswurm\uff08 2020\uff09\u73b0\u4ee3ARM\u6c47\u7f16\u8bed\u8a00\u7f16\u7a0b\uff0cAPRess\uff0cISBN 978 1 4842 6266 5. ARM64\u6307\u4ee4\u96c6\u53c2\u8003\uff08ARM\uff09\u3002\n  \u53d1\u5e03\u5728Mac\uff0c\u6280\u672f\u548c\u6807\u8bb0\u7684Apple\u7845\uff0c\u81c2\uff0c\u6c47\u7f16\u5668\uff0c\u6c47\u7f16\u8bed\u8a00\uff0cM1\uff0cXcode\u3002\u4e66\u7b7e\u6c38\u4e45\u94fe\u63a5\u3002 ", "note_en": "In  the previous article, I explained the basic architecture of the registers of the ARM64 processor, and explained how they can be used by an assembly language routine to access and return values. I ended with a cliffhanger, promising to explain how arguments can be accessed from pointers passed to a routine.\n There are two basic instructions for transferring data between memory and registers, LDR which loads into a register, and STR which stores into memory. Their simplest use is:\n LDR X0, [reg]  loads what\u2019s at the address in  reg, such as register  X1, into register  X0\n STR X0, [reg]  stores what\u2019s in register  X0 to the address in  reg, such as register  X1\n Note how the direction of movement differs in the two: LDR loads the first operand as the destination, whereas STR stores what\u2019s in the first operand as the source. Instructions more commonly use the first operand to specify the destination of the result; STR is an important exception.\n The  reg item in those instructions can use any of five different  addressing modes:  [X1] \u2013 base register, which can include  SP to use the stack pointer  [X1,offset] \u2013 base register with an offset, in which the effective address is the sum of the address in the base register and the offset  [X1,offset]! \u2013 pre-indexed, which works like an offset, but before use the address in the register has the offset added to it; this is commonly used for loading or storing values in an array  [X1],offset \u2013 post-indexed, which works like an offset, but as a result of this instruction the address in the register is updated by adding the offset at the end of execution; this is commonly used for popping values from the stack  label \u2013 PC relative, which is used for accessing values defined in the code by a label.\n To understand these, it\u2019s useful to work through some examples. At the start of each of these, the register X1 contains the address 00000100.\n LDR X0, [X1,8] loads the 64-bit integer at the address 00000108 (00000100 + 8) into register X0\n LDR X0, [X1,8]! loads the 64-bit integer at the address 00000108 (00000100 + 8) into register X0, and leaves the address 00000108 in register X1\n LDR X0, [X1],8 loads the 64-bit integer at the address 00000100 into register X0, and leaves the address 00000108 (00000100 + 8) in register X1.\n The final complication to specifying addresses is variation in the way of specifying the offset, here shown as an offset to the register X1:\n [X1,X2, LSL 2]  \u2013 the offset is the integer contained in register X2 shifted left by 2 places\n [X1,W2, UXTW 2] \u2013 the offset is the integer contained in register W2 (32-bit), shifted left by 2 places.\n  These are summarised in this diagram, which also covers other operand types and return values, which I\u2019ve already examined.\n   Now try out some of these load and store instructions with different addressing modes. This is simple using AsmAttic: first, you need to change the asmmath.h header file to provide the new call, in my case  extern double testadd(double, double*, double*); which takes one double as a value and two as pointers, and returns a double value. To call that in Swift, use code like  let myA = theA.doubleValue var myB = theB.doubleValue let theTemp = theC.doubleValue var myC = [theTemp, (theTemp + 1.0), (theTemp + 2.0)] let myD = testadd(myA, &amp;myB, &amp;myC) This first sets up the three arguments to contain an immutable Double value, a pointer to a Double, and a pointer to a three-element array of Doubles, before calling that function to return a Double result. You then display the results using  self.outputText.string = &#34;Result = \\(myD) a = \\(myA) b = \\(myB) c = \\(myC)\\n&#34;\n  _testadd: STR LR, [SP, #-16]! LDR D5, MULT_TWO // \u2013 that\u2019s a labelled value using PC-relative access   FMUL D6, D0, D5 // \u2013 the first argument, a Double, is accessed from the D0 register   LDR D7, [X0] // \u2013 that uses base register access. Note that the address of a Double is passed not in a floating point register, but in a general-purpose register.   FMUL D7, D7, D5 STR D7, [X0] LDR D5, MULT_THREE LDR D4, [X1] FMUL D7, D4, D5 STR D7, [X1] LDR D4, [X1,8]! // \u2013 that uses pre-indexing to increment the address in X1 by 8, so accessing the  next Double in the array.   FMUL D7, D4, D5 STR D7, [X1] LDR D4, [X1,8]! FMUL D7, D4, D5 STR D7, [X1] FMOV D0, D6 // \u2013 the result is returned as a Double value in the D0 register.   LDR LR, [SP], #16 RET\n  Now we\u2019re in a position to access arguments passed to the assembly routine, return results both as values and in those arguments which were passed by reference. The next step is to control program flow, which I\u2019ll start in the next in this series.\n  1: Building an app to develop assembly routines, including an explanation of calling assembly language from Swift, with a complete Xcode project  2: Registers explained, with a chart showing the registers of the ARM64 processor, and passing arguments by value\n    Procedure Call Standard for the Arm 64-bit Architecture (ARM) from  Github  Writing ARM64 Code for Apple Platforms (Apple) Stephen Smith (2020)  Programming with 64-Bit ARM Assembly Language, Apress, ISBN 978 1 4842 5880 4. Daniel Kusswurm (2020)  Modern Arm Assembly Language Programming, Apress, ISBN 978 1 4842 6266 5.  ARM64 Instruction Set Reference (ARM).\n  Posted in  Macs,  Technology and tagged  Apple silicon,  ARM,  assembler,  assembly language,  M1,  Xcode. Bookmark the  permalink.", "posttime": "2021-06-23 22:56:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ee3\u7801,arm,\u5bc4\u5b58\u5668", "title": "ARM\u7ec4\u4ef6\u4e2d\u7684\u4ee3\u7801\uff1a\u4f7f\u7528\u6307\u9488 ", "title_en": "Code in ARM Assembly: Working with Pointers", "transed": 1, "url": "https://eclecticlight.co/2021/06/21/code-in-arm-assembly-working-with-pointers/", "via": "", "real_tags": ["\u4ee3\u7801", "arm", "\u5bc4\u5b58\u5668"]}, {"category": "", "categoryclass": "", "imagename": "a498557a343dfd09fe4bac13a5a04699.png", "infoid": 1067722, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Nimconf 2020\u5c06\u4e8e6\u670820\u65e5\u5728\u65e9\u4e0a11\u70b9\u4e3e\u884c\u7684\u3002 \u6d41\u76f4\u64ad\uff0c\u514d\u8d39\u63d0\u4f9bYouTube\u3002 ", "note_en": "NimConf 2020 will take place on June 20th at 11am UTC. Streamed live and for free from YouTube.", "posttime": "2021-06-23 22:55:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "nimconf,\u76f4\u64ad", "title": "nimconf 2021. ", "title_en": "NimConf 2021", "transed": 1, "url": "https://conf.nim-lang.org/", "via": "", "real_tags": ["nimconf", "\u76f4\u64ad"]}]
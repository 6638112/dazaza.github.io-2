[{"category": "", "categoryclass": "", "imagename": "671c740d47bb022d7106fa04ff38b2c6.jpg", "infoid": 1069369, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u96e8\u6797\u662f\u5e94\u5bf9\u6c14\u5019\u53d8\u5316\u7684\u5f3a\u5927\u800c\u81ea\u7136\u7684\u89e3\u51b3\u65b9\u6848\u2014\u2014\u63d0\u4f9b\u6c34\u8fc7\u6ee4\u3001\u6355\u83b7\u78b3\u548c\u8c03\u8282\u5168\u7403\u6e29\u5ea6\u3002\u4f46\u662f\uff0c\u5305\u62ec\u519c\u4e1a\u6269\u5f20\u548c\u780d\u4f10\u5728\u5185\u7684\u5927\u89c4\u6a21\u571f\u5730\u5229\u7528\u53d8\u5316\u7b49\u91cd\u5927\u5a01\u80c1\u5df2\u5c06\u8fd9\u4e9b\u751f\u7269\u591a\u6837\u6027\u7684\u5929\u5802\u53d8\u6210\u4e86\u5730\u7403\u4e0a\u6700\u6fd2\u5371\u7684\u6816\u606f\u5730\u4e4b\u4e00\u3002 2019 \u5e74\uff0c\u5305\u62ec\u7279\u62c9\u534e\u5927\u5b66\u7684 Rodrigo Vargas \u5728\u5185\u7684\u7cbe\u9009\u79d1\u5b66\u5bb6\u5728\u534e\u76db\u987f\u7279\u533a\u7684\u56fd\u5bb6\u5730\u7406\u603b\u90e8\u4f1a\u9762\uff0c\u8ba8\u8bba\u70ed\u5e26\u96e8\u6797\u9762\u4e34\u7684\u5a01\u80c1\u3002\u7814\u7a76\u4eba\u5458\u6307\u51fa\u9700\u8981\u5f00\u53d1\u4e00\u4e2a\u5168\u7403\u8ddf\u8e2a\u7cfb\u7edf\uff0c\u8be5\u7cfb\u7edf\u5c06\u53d1\u73b0\u6709\u52a9\u4e8e\u5bf9\u6297\u571f\u5730\u9000\u5316\u548c\u4fc3\u8fdb\u4fdd\u62a4\u7684\u8d8b\u52bf\u3002\u5728 7 \u6708 23 \u65e5\u661f\u671f\u4e94\u53d1\u8868\u5728\u79d1\u5b66\u6742\u5fd7 One Earth \u4e0a\u7684\u8bba\u6587\u4e2d\uff0c\u8fd9\u4e9b\u7814\u7a76\u4eba\u5458\u4ecb\u7ecd\u4e86\u72ec\u7279\u7684\u70ed\u5e26\u96e8\u6797\u6307\u6570 (TFVI)\uff0c\u8fd9\u662f\u5168\u7403\u96e8\u6797\u7684\u57fa\u7ebf\u3002\u79d1\u5b66\u5bb6\u7684\u76ee\u6807\u662f\u68c0\u6d4b\u548c\u8bc4\u4f30\u70ed\u5e26\u96e8\u6797\u5bf9\u65e5\u76ca\u589e\u52a0\u7684\u5a01\u80c1\u7684\u8106\u5f31\u6027\u3002\u56fd\u5bb6\u5730\u7406\u548c\u52b3\u529b\u58eb\u6052\u52a8\u884c\u661f\u8ba1\u5212\u8d44\u52a9\u4e86\u8fd9\u9879\u5de5\u4f5c\u3002 \u201c\u901a\u8fc7\u8fd9\u4e2a\u65b0\u6307\u6570\uff0c\u6211\u4eec\u73b0\u5728\u4e0d\u4ec5\u62e5\u6709\u5168\u7403\u8986\u76d6\u9762\uff0c\u800c\u4e14\u5177\u6709\u7edf\u4e00\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u603b\u7ed3\u5173\u4e8e\u96e8\u6797\u5065\u5eb7\u7684\u5173\u952e\u4fe1\u606f\uff0c\u201d\u751f\u6001\u7cfb\u7edf\u751f\u6001\u5b66\u548c\u73af\u5883\u53d8\u5316\u6559\u6388 Vargas \u8bf4\u3002 \u201c\u5b83\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u51c6\uff0c\u5e76\u63d0\u4f9b\u6709\u5173\u8feb\u5728\u7709\u776b\u7684\u672a\u6765\u53d8\u5316\u7684\u4fe1\u606f\u3002\u201d\u5229\u7528\u5148\u8fdb\u7684\u536b\u661f\u6d4b\u91cf\uff0c\u7814\u7a76\u5c0f\u7ec4\u7cfb\u7edf\u5730\u5206\u6790\u4e86\u5730\u7403\u4e0a\u6bcf\u4e2a\u70ed\u5e26\u5730\u533a\u7684\u6c14\u5019\u548c\u690d\u88ab\u3002\u8be5\u7814\u7a76\u7684\u7ed3\u679c\u8868\u660e\uff0c\u96e8\u6797\u6b63\u5728\u5931\u53bb\u5faa\u73af\u78b3\u548c\u6c34\u7684\u80fd\u529b\u3002 \u201c\u6211\u4eec\u6b63\u5728\u5931\u53bb\u751f\u7269\u591a\u6837\u6027\u548c\u78b3\u5e93\u7684\u4e3b\u8981\u70ed\u70b9\uff0c\u201d\u5df4\u5c14\u52a0\u65af\u8bf4\u3002 \u201c\u8fd9\u4e9b\u4e0d\u662f\u4e16\u754c\u5404\u5730\u7684\u5c0f\u5757\u571f\u5730\uff1b\u8fd9\u4e9b\u662f\u5730\u7403\u8868\u9762\u7684\u5f88\u5927\u4e00\u90e8\u5206\u3002\u201d\u8be5\u7814\u7a76\u7684\u7ed3\u679c\u8fd8\u8868\u660e\uff0c\u4e0d\u540c\u7684\u70ed\u5e26\u5730\u533a\u5bf9\u6c14\u5019\u5a01\u80c1\u6709\u4e0d\u540c\u7684\u53cd\u5e94\u3002\u4e00\u4e9b\u5730\u533a\uff0c\u5982\u975e\u6d32\u7684\u521a\u679c\u76c6\u5730\uff0c\u6bd4\u4e16\u754c\u5176\u4ed6\u5730\u533a\u66f4\u5177\u5f39\u6027\u3002\u4e9a\u9a6c\u900a\u76c6\u5730\u8868\u73b0\u51fa\u5bf9\u5927\u6c14\u5e72\u71e5\u6761\u4ef6\u3001\u9891\u7e41\u5e72\u65f1\u548c\u5927\u89c4\u6a21\u571f\u5730\u5229\u7528\u53d8\u5316\u7684\u5927\u89c4\u6a21\u8106\u5f31\u6027\u3002\u5728\u4e1c\u5357\u4e9a\uff0c\u9664\u4e86\u6ce5\u70ad\u5730\u5730\u533a\uff0c\u5728\u5384\u5c14\u5c3c\u8bfa\u5e74\u671f\u95f4\uff0c\u73b0\u5728\u66f4\u5bb9\u6613\u53d7\u5230\u706b\u707e\u7684\u5f71\u54cd\uff0c\u70ed\u5e26\u96e8\u6797\u53d7\u5230\u571f\u5730\u5229\u7528\u548c\u7269\u79cd\u7834\u788e\u5316\u7684\u538b\u529b\u6bd4\u6c14\u5019\u5e26\u6765\u7684\u538b\u529b\u66f4\u5927\u3002\n\u201c\u6ca1\u6709\u5355\u4e00\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4e5f\u6ca1\u6709\u9002\u7528\u4e8e\u6bcf\u4e2a\u70ed\u5e26\u96e8\u6797\u7684\u7075\u4e39\u5999\u836f\u3002\u8fd9\u51f8\u663e\u4e86\u5bf9\u672c\u5730\u5316\u89e3\u51b3\u65b9\u6848\u7684\u9700\u6c42\uff0c\u201dVargas \u8bf4\u3002 \u201c\u4f46\u901a\u7528\u7684\u5168\u7403\u6307\u6570\u4e5f\u8bf4\u660e\u9700\u8981\u8bbe\u8ba1\u7edf\u4e00\u7684\u6218\u7565\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u96e8\u6797\u63d0\u4f9b\u7684\u81ea\u7136\u89e3\u51b3\u65b9\u6848\u3002\u201d\u72ec\u7279\u7684\u70ed\u5e26\u96e8\u6797\u6307\u6570\u6709\u6761\u4e0d\u7d0a\u5730\u8bf4\u660e\u4e86\u96e8\u6797\u7684\u654f\u611f\u6027\u5b9e\u9645\u4e0a\u6bd4\u4e4b\u524d\u7684\u9884\u6d4b\u8981\u5927\u5f97\u591a\u3002\u53d7\u5e72\u6270\u548c\u652f\u79bb\u7834\u788e\u7684\u5730\u533a\u5df2\u7ecf\u5931\u53bb\u4e86\u5bf9\u6c14\u5019\u53d8\u6696\u548c\u5e72\u65f1\u7684\u62b5\u5fa1\u80fd\u529b\u3002\u4e5f\u8bb8\u66f4\u4ee4\u4eba\u4e0d\u5b89\u7684\u662f\u7814\u7a76\u7ed3\u679c\u8868\u660e\u96e8\u6797\u6b63\u5728\u5931\u53bb\u5176\u5faa\u73af\u78b3\u548c\u6c34\u7684\u80fd\u529b\u3002\u70ed\u5e26\u68ee\u6797\u4e3a\u793e\u4f1a\u63d0\u4f9b\u91cd\u8981\u7684\u73af\u5883\u670d\u52a1\u548c\u5229\u76ca\u3002\u8fd9\u4e9b\u70ed\u5e26\u96e8\u6797\u6b63\u5728\u4ece\u5386\u53f2\u4e0a\u9ad8\u5ea6\u591a\u6837\u5316\u7684\u72b6\u6001\u8f6c\u53d8\u4e3a\u7ecf\u8fc7\u4e25\u91cd\u6539\u9020\u7684\u5730\u533a\u548c\u53d7\u7ba1\u7406\u7684\u571f\u5730\u2014\u2014\u4f8b\u5982\uff0c\u7f3a\u4e4f\u4ece\u5927\u6c14\u4e2d\u56fa\u78b3\u548c\u652f\u6301\u751f\u7269\u591a\u6837\u6027\u7684\u80fd\u529b\u3002 \u201c\u9664\u4e86\u6211\u4eec\u4fdd\u62a4\u5730\u7403\u751f\u7269\u591a\u6837\u6027\u7684\u9053\u5fb7\u8d23\u4efb\u4e4b\u5916\uff0c\u56e0\u4e3a\u4eba\u7c7b\u7684\u884c\u4e3a\u6b63\u5728\u5f71\u54cd\u5168\u7403\u6c14\u5019\uff0c\u6211\u4eec\u5fc5\u987b\u51c6\u5907\u597d\u5e94\u5bf9\u8fd9\u4e9b\u53d8\u5316\u7684\u540e\u679c\uff0c\u201d\u5df4\u5c14\u52a0\u65af\u8bf4\u3002", "note_en": "Rainforests are a powerful, natural solution to combat climate change \u2014 providing water filtration, capturing carbon and regulating global temperatures. But major threats like large-scale land use changes, including agricultural expansion and clearcutting, have turned these biodiversity havens into one of the most endangered habitats on our planet.\n In 2019, select scientists, including the University of Delaware\u2019s  Rodrigo Vargas, met at the National Geographic headquarters in Washington, D.C., to discuss the threats to rainforests. The researchers pinpointed a need to develop a worldwide tracking system, which would find trends to help fight land degradation and promote conservation.\n  In the paper published on Friday, July 23 in the scientific journal  One Earth, these researchers introduce the unique tropical rainforest index (TFVI), a baseline for rainforests across the entire globe. The scientist\u2019s goal is to detect and evaluate the vulnerability of rainforests to increasing threats. National Geographic and the Rolex Perpetual Planet Initiative funded the endeavor.\n  \u201cThrough this new index, we now have not only global coverage, but uniformity. We can summarize critical information about the health of rainforests,\u201d said Vargas, professor of ecosystem ecology and environmental change. \u201cIt gives us a benchmark and provides information about looming, future changes.\u201d\n Using advanced satellite measurements, the research team systematically analyzed the climate and vegetation of each tropical region on Earth. The study\u2019s findings suggest that rainforests are losing their capacity to cycle carbon and water.\n \u201cWe are losing major hotspots for biodiversity and carbon pools,\u201d Vargas said. \u201cThese are not small patches of land across the world; these are large sections of the Earth\u2019s surface.\u201d\n The study\u2019s findings also indicate different regions of tropics have different responses to climate threats. Some regions, like Africa\u2019s Congo basin, are more resilient than other parts of the world. The Amazon Basin shows large-scale vulnerability to drying conditions of atmosphere, frequent droughts and large-scale land-use changes. In Southeast Asia, rainforests are stressed more from land use and species fragmentation than they are from climate, except for areas of peatlands that are, during El Nino years, now more vulnerable to fire.\n \u201cThere is no single solution, no silver bullet that will work in every tropical rainforest. This highlights the needs for localized solutions,\u201d Vargas said. \u201cBut a general, global index also illuminates the need to design unified strategies to maximize the natural solutions that rainforests provide.\u201d\n The unique tropical rainforest index methodically illustrates that the susceptibility of rainforests is actually much greater than previous predictions. Disturbed and fragmented areas have lost resilience to climate warming and droughts. Perhaps even more distressing were study findings suggesting that rainforests are losing their capacity to cycle carbon and water.\n Tropical forests provide critical environmental services and benefits to society. These rainforests are changing from their historically, highly-diverse status to heavily transformed areas and managed land \u2014 one that lacks the ability to, for example, sequester carbon from the atmosphere and support biodiversity.\n \u201cIn addition to our moral responsibility to preserve our planet\u2019s biodiversity, because human\u2019s actions are influencing the global climate, we must be prepared to manage the consequences of these changes,\u201d Vargas said.", "posttime": "2021-07-24 07:25:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u70ed\u5e26\u96e8\u6797,rainforest,\u5168\u7403", "title": "\u70ed\u5e26\u96e8\u6797\u6307\u6570", "title_en": "Tropical Rainforest Index", "transed": 1, "url": "https://www.udel.edu/udaily/2021/july/rodrigo-vargas-tropical-rainforest-index-national-geographic/", "via": "", "real_tags": ["\u70ed\u5e26\u96e8\u6797", "\u5168\u7403"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069368, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u65e5\u672c\u4eba\u8d70\u8fdb\u9910\u5385\u3002\u6211\u4ee5\u524d\u89c1\u8fc7\u4ed6\uff0c\u56db\u5904\u6e38\u8361\uff1b\u4ed6\u60f3\u5356\u7b97\u76d8\u3002\u4ed6\u5f00\u59cb\u4e0e\u670d\u52a1\u5458\u4ea4\u8c08\uff0c\u5e76\u5411\u4ed6\u4eec\u63d0\u51fa\u6311\u6218\uff1a\u4ed6\u8bf4\u4ed6\u52a0\u6570\u5b57\u7684\u901f\u5ea6\u6bd4\u4ed6\u4eec\u4e2d\u7684\u4efb\u4f55\u4eba\u90fd\u5feb\u3002\u670d\u52a1\u5458\u4e0d\u60f3\u4e22\u9762\u5b50\uff0c\u5c31\u8bf4\uff1a\u201c\u662f\u554a\uff0c\u662f\u554a\u3002\u4f60\u600e\u4e48\u4e0d\u8fc7\u53bb\u6311\u6218\u4e00\u4e0b\u90a3\u8fb9\u7684\u987e\u5ba2\uff1f\u201d\u8be5\u7537\u5b50\u8ba9\u670d\u52a1\u5458\u558a\u51fa\u4e00\u4e9b\u53f7\u7801\u8fdb\u884c\u6dfb\u52a0\u3002\u4ed6\u628a\u6211\u6253\u5f97\u5f88\u7a7a\u6d1e\uff0c\u56e0\u4e3a\u5f53\u6211\u5199\u4e0b\u6570\u5b57\u65f6\uff0c\u4ed6\u5df2\u7ecf\u5728\u6dfb\u52a0\u5b83\u4eec\u4e86\u3002\u6211\u5efa\u8bae\u670d\u52a1\u5458\u5199\u4e0b\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u5217\u8868\uff0c\u540c\u65f6\u4ea4\u7ed9\u6211\u4eec\u3002\u5b83\u6ca1\u6709\u592a\u5927\u533a\u522b\u3002\u4ed6\u8fd8\u662f\u6bd4\u6211\u5dee\u4e86\u4e00\u70b9\u70b9\u3002\u7136\u800c\uff0c\u7537\u4eba\u5374\u6709\u4e9b\u6fc0\u52a8\uff1a\u4ed6\u60f3\u518d\u8bc1\u660e\u4e00\u4e0b\u81ea\u5df1\u3002 \u201c\u4e58\u6cd5\uff01\u201d\u4ed6\u8bf4\u3002\u6709\u4eba\u5199\u4e0b\u4e86\u4e00\u4e2a\u95ee\u9898\u3002\u4ed6\u518d\u6b21\u51fb\u8d25\u4e86\u6211\uff0c\u4f46\u5e45\u5ea6\u4e0d\u5927\uff0c\u56e0\u4e3a\u6211\u975e\u5e38\u64c5\u957f\u4ea7\u54c1\u3002\u7136\u540e\u8fd9\u4e2a\u4eba\u72af\u4e86\u4e00\u4e2a\u9519\u8bef\uff1a\u4ed6\u5efa\u8bae\u6211\u4eec\u7ee7\u7eed\u5206\u88c2\u3002\u4ed6\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u662f\uff0c\u95ee\u9898\u8d8a\u96be\uff0c\u6211\u7684\u673a\u4f1a\u5c31\u8d8a\u5927\u3002\n\u8fd9\u4e2a\u65e5\u672c\u4eba\u771f\u70e6\u6b7b\u4e86\uff0c\u56e0\u4e3a\u4ed6\u663e\u7136\u5728\u7b97\u76d8\u4e0a\u53d7\u8fc7\u826f\u597d\u7684\u8bad\u7ec3\uff0c\u800c\u5728\u8fd9\u91cc\uff0c\u4ed6\u5dee\u70b9\u5728\u9910\u5385\u91cc\u88ab\u8fd9\u4f4d\u987e\u5ba2\u6bb4\u6253\u3002 \u201cRaios\u7acb\u65b9\u4f53\uff01\u201d\u4ed6\u62a5\u4ec7\u96ea\u6068\u5730\u8bf4\u3002\u7acb\u65b9\u6839\uff01\u4ed6\u60f3\u901a\u8fc7\u7b97\u672f\u8ba1\u7b97\u7acb\u65b9\u6839\u3002\u5728\u7b97\u672f\u4e2d\u5f88\u96be\u627e\u5230\u66f4\u96be\u7684\u57fa\u672c\u95ee\u9898\u3002\u8fd9\u4e00\u5b9a\u662f\u4ed6\u5728\u7b97\u76d8\u9886\u57df\u7684\u9876\u7ea7\u7ec3\u4e60\u3002\u4ed6\u5728\u7eb8\u4e0a\u5199\u4e0b\u4e00\u4e2a\u6570\u5b57\u2014\u2014\u4efb\u4f55\u65e7\u6570\u5b57\u2014\u2014\u6211\u4ecd\u7136\u8bb0\u5f97\u5b83\uff1a1729.03\u3002\u4ed6\u5f00\u59cb\u5de5\u4f5c\uff0c\u5583\u5583\u81ea\u8bed\uff1a\u201cMmmmmmagmmmmbrrr\u201d\u2014\u2014\u4ed6\u50cf\u6076\u9b54\u4e00\u6837\u5de5\u4f5c\uff01\u4ed6\u6b63\u5728\u94bb\u7814\uff0c\u505a\u8fd9\u4e2a\u7acb\u65b9\u6839\u3002\u6211\u6307\u7740\u6211\u7684\u5934\u3002 \u201c\u601d\u7ef4\uff01\u201d\u6211\u8bf4\u3002\u6211\u5728\u7eb8\u4e0a\u5199\u4e0b 12\u3002\u8fc7\u4e86\u4e00\u4f1a\u513f\uff0c\u6211\u5f97\u5230\u4e86 12.002\u3002 \u201c\u4e0d\u597d\u4e86\uff01\u201d\u6211\u8bf4\u3002 \u201c\u66f4\u591a\u7684\u6570\u5b57\uff01\u66f4\u591a\u7684\u6570\u5b57\uff01\u201d\u6211\u77e5\u9053\u901a\u8fc7\u7b97\u672f\u6c42\u7acb\u65b9\u6839\uff0c\u6bcf\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\u90fd\u6bd4\u4ee5\u524d\u7684\u6570\u5b57\u8981\u591a\u3002\u8fd9\u662f\u4e00\u9879\u8270\u5de8\u7684\u5de5\u4f5c\u3002\u4ed6\u53c8\u628a\u81ea\u5df1\u57cb\u4e86\u8d77\u6765\uff0c\u5495\u54dd\u7740\u201cRrrrrgrrrrmmmmmm...\u201d\uff0c\u800c\u6211\u53c8\u52a0\u4e86\u4e24\u4e2a\u6570\u5b57\u3002\u4ed6\u7ec8\u4e8e\u62ac\u8d77\u5934\uff0c\u201c12.01\uff01\u201d\u670d\u52a1\u5458\u4e00\u4e2a\u4e2a\u90fd\u5f88\u5174\u594b\uff0c\u5f88\u5f00\u5fc3\u3002\u4ed6\u4eec\u544a\u8bc9\u90a3\u4e2a\u4eba\uff0c\u201c\u770b\uff01\u4ed6\u53ea\u662f\u901a\u8fc7\u601d\u8003\u6765\u505a\u8fd9\u4ef6\u4e8b\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u7b97\u76d8\uff01\u4ed6\u6709\u66f4\u591a\u7684\u6570\u5b57\uff01\u201d\n\u987e\u5ba2\u662f\u600e\u4e48\u6253\u7b97\u76d8\u7684\uff1f\u53f7\u7801\u662f 1729.03\u3002\u6211\u78b0\u5de7\u77e5\u9053\u4e00\u7acb\u65b9\u82f1\u5c3a\u5305\u542b 1728 \u7acb\u65b9\u82f1\u5bf8\uff0c\u6240\u4ee5\u7b54\u6848\u662f\u6bd4 12 \u591a\u4e00\u70b9\u70b9\u3002\u591a\u4f59\u7684 1.03 \u53ea\u662f\u8fd1 2000 \u5e74\u7684\u4e00\u90e8\u5206\uff0c\u6211\u5728\u5fae\u79ef\u5206\u4e2d\u4e86\u89e3\u5230\uff0c\u5bf9\u4e8e\u5c0f\u5206\u6570\uff0c\u7acb\u65b9\u6839\u7684\u8d85\u989d\u662f\u6570\u91cf\u8d85\u989d\u7684\u4e09\u5206\u4e4b\u4e00\u3002\u6240\u4ee5\u6211\u6240\u8981\u505a\u7684\u5c31\u662f\u627e\u5230\u5206\u6570 1/1728\uff0c\u7136\u540e\u4e58\u4ee5 4\uff08\u9664\u4ee5 3\uff0c\u518d\u4e58\u4ee5 12\uff09\u3002\u6240\u4ee5\u6211\u80fd\u591f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u63d0\u53d6\u51fa\u5f88\u591a\u6570\u5b57\u3002\u51e0\u5468\u540e\uff0c\u90a3\u4e2a\u7537\u4eba\u6765\u5230\u6211\u4f4f\u7684\u9152\u5e97\u7684\u9e21\u5c3e\u9152\u4f11\u606f\u5ba4\u3002\u4ed6\u8ba4\u51fa\u4e86\u6211\uff0c\u5c31\u8fc7\u6765\u4e86\u3002 \u201c\u544a\u8bc9\u6211\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u4f60\u600e\u4e48\u80fd\u8fd9\u4e48\u5feb\u5730\u505a\u90a3\u4e2a\u7acb\u65b9\u6839\u95ee\u9898\uff1f\u201d\u6211\u5f00\u59cb\u89e3\u91ca\u8fd9\u662f\u4e00\u79cd\u8fd1\u4f3c\u65b9\u6cd5\uff0c\u4e0e\u9519\u8bef\u767e\u5206\u6bd4\u6709\u5173\u3002 \u201c\u5047\u8bbe\u4f60\u7ed9\u4e86\u6211 28\u3002\u73b0\u5728 27 \u7684\u7acb\u65b9\u6839\u662f 3\u2026\u2026\u201d\u6211\u610f\u8bc6\u5230\u4e86\u4e00\u4e9b\u4e8b\u60c5\uff1a\u4ed6\u4e0d\u77e5\u9053\u6570\u5b57\u3002\u6709\u4e86\u7b97\u76d8\uff0c\u4f60\u5c31\u4e0d\u5fc5\u8bb0\u4f4f\u5f88\u591a\u7b97\u672f\u7ec4\u5408\uff1b\u4f60\u6240\u8981\u505a\u7684\u5c31\u662f\u5b66\u4f1a\u4e0a\u4e0b\u63a8\u52a8\u5c0f\u73e0\u5b50\u3002\u4f60\u4e0d\u5fc5\u8bb0\u4f4f9+7=16\uff1b\u4f60\u53ea\u77e5\u9053\u5f53\u4f60\u52a0\u4e0a 9 \u65f6\uff0c\u4f60\u628a\u4e00\u4e2a\u5341\u7684\u73e0\u5b50\u63a8\u4e0a\u53bb\uff0c\u628a\u4e00\u4e2a\u7684\u73e0\u5b50\u62c9\u4e0b\u6765\u3002\u6240\u4ee5\u6211\u4eec\u5728\u57fa\u672c\u7b97\u672f\u4e0a\u6bd4\u8f83\u6162\uff0c\u4f46\u6211\u4eec\u77e5\u9053\u6570\u5b57\u3002\u6b64\u5916\uff0c\u8fd1\u4f3c\u65b9\u6cd5\u7684\u6574\u4e2a\u60f3\u6cd5\u8d85\u51fa\u4e86\u4ed6\u7684\u8303\u56f4\uff0c\u5373\u4f7f\u4e09\u6b21\u6839\u901a\u5e38\u65e0\u6cd5\u901a\u8fc7\u4efb\u4f55\u65b9\u6cd5\u7cbe\u786e\u8ba1\u7b97\u3002\u6240\u4ee5\u6211\u6c38\u8fdc\u65e0\u6cd5\u6559\u4ed6\u6211\u662f\u5982\u4f55\u8ba1\u7b97\u7acb\u65b9\u6839\u7684\uff0c\u4e5f\u65e0\u6cd5\u89e3\u91ca\u6211\u662f\u591a\u4e48\u5e78\u8fd0\uff0c\u4ed6\u78b0\u5de7\u9009\u62e9\u4e86 1729.03\u3002", "note_en": "A Japanese man came into the restaurant. I had seen him before, wandering around; he was trying to sell abacuses. He started to talk to the waiters, and challenged them: He said he could add numbers faster than any of them could do.\n  The waiters didn&#39;t want to lose face, so they said, &#34;Yeah, yeah. Why don&#39;t you go over and challenge the customer over there?&#34;\n        The man asked a waiter to call out some numbers to add. He beat me hollow, because while I was writing the numbers down, he was already adding them as he went along.\n  I suggested that the waiter write down two identical lists of numbers and hand them to us at the same time. It didn&#39;t make much difference. He still beat me by quite a bit.\n  However, the man got a little bit excited: he wanted to prove himself some more. &#34; Multiplica\u00e7\u00e3o!&#34; he said.\n  Somebody wrote down a problem. He beat me again, but not by much, because I&#39;m pretty good at products.\n  The man then made a mistake: he proposed we go on to division. What he didn&#39;t realize was, the harder the problem, the better chance I had.\n    The bothered the hell out of the Japanese man, because he was apparently well trained on the abacus, and here he was almost beaten by this customer in a restaurant.\n  &#34; Raios cubicos!&#34; he says with a vengeance. Cube roots! He wants to do cube roots by arithmetic. It&#39;s hard to find a more difficult fundamental problem in arithmetic. It must have been his topnotch exercise in abacus-land.\n  He writes down a number on some paper\u2014 any old number\u2014 and I still remember it: 1729.03. He starts working on it, mumbling and grumbling: &#34; Mmmmmmagmmmmbrrr&#34;\u2014 he&#39;s working like a demon! He&#39;s poring away, doing this cube root.\n      I point to my head. &#34;Thinking!&#34; I say. I write down 12 on the paper. After a little while I&#39;ve got 12.002.\n    &#34;Oh, no!&#34; I say. &#34;More digits! More digits!&#34; I know that in taking a cube root by arithmetic, each new digit is even more work that the one before. It&#39;s a hard job.\n  He buries himself again, grunting &#34; Rrrrgrrrrmmmmmm ...,&#34; while I add on two more digits. He finally lifts his head to say, &#34;12.01!&#34;\n  The waiter are all excited and happy. They tell the man, &#34;Look! He does it only by thinking, and you need an abacus! He&#39;s got more digits!&#34;\n    How did the customer beat the abacus? The number was 1729.03. I happened to know that a cubic foot contains 1728 cubic inches, so the answer is a tiny bit more than 12. The excess, 1.03 is only one part in nearly 2000, and I had learned in calculus that for small fractions, the cube root&#39;s excess is one-third of the number&#39;s excess. So all I had to do is find the fraction 1/1728, and multiply by 4 (divide by 3 and multiply by 12). So I was able to pull out a whole lot of digits that way.\n  A few weeks later, the man came into the cocktail lounge of the hotel I was staying at. He recognized me and came over. &#34;Tell me,&#34; he said, &#34;how were you able to do that cube-root problem so fast?&#34;\n  I started to explain that it was an approximate method, and had to do with the percentage of error. &#34;Suppose you had given me 28. Now the cube root of 27 is 3 ...&#34;\n    I realized something: he doesn&#39;t  know numbers. With the abacus, you don&#39;t have to memorize a lot of arithmetic combinations; all you have to do is to learn to push the little beads up and down. You don&#39;t have to memorize 9+7=16; you just know that when you add 9, you push a ten&#39;s bead up and pull a one&#39;s bead down. So we&#39;re slower at basic arithmetic, but we know numbers.\n  Furthermore, the whole idea of an approximate method was beyond him, even though a cubic root often cannot be computed exactly by any method. So I never could teach him how I did cube roots or explain how lucky I was that he happened to choose 1729.03.", "posttime": "2021-07-24 07:25:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d39\u66fc,feynman,\u670d\u52a1\u5458", "title": "\u8d39\u66fc\u4e0e\u7b97\u76d8 (1985)", "title_en": "Feynman vs. the Abacus (1985)", "transed": 1, "url": "http://www.ee.ryerson.ca/~elf/abacus/feynman.html", "via": "", "real_tags": ["\u8d39\u66fc", "feynman", "\u670d\u52a1\u5458"]}, {"category": "", "categoryclass": "", "imagename": "91f9ab8a2fef16b217585a4ddc0c11f1.png", "infoid": 1069367, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u5728\u5a01\u65af\u5eb7\u661f\u5dde\u9ea6\u8fea\u900a\u5e02\u4e70\u4e86\u4e00\u680b\u623f\u5b50\uff0c\u4f46\u5728\u6b64\u4e4b\u524d\uff0c\u6211\u5728\u8be5\u5dde\u4e0d\u540c\u5730\u533a\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u63a2\u7d22\u623f\u5730\u4ea7\u5e02\u573a\u7684\u5192\u9669\u3002\u6211\u6700\u521d\u5bf9\u5a01\u65af\u5eb7\u661f\u5dde\u5f88\u611f\u5174\u8da3\uff0c\u56e0\u4e3a\u6211\u5728\u90a3\u91cc\u6709\u5927\u5bb6\u5ead\uff0c\u4ed6\u4eec\u9f13\u52b1\u6211\u53bb\u770b\u770b\u963f\u666e\u5c14\u987f\u3002\u4ed6\u4eec\u5c06\u5176\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u5b89\u5168\u3001\u7e41\u8363\u4e14\u4e0d\u65ad\u53d1\u5c55\u7684\u793e\u533a\uff0c\u4f4f\u6ee1\u4e86\u597d\u4eba\u3002\u6709\u4e00\u4e2a\u5386\u53f2\u60a0\u4e45\u7684\u5e02\u4e2d\u5fc3\uff0c\u52b3\u4f26\u65af\u5927\u5b66\uff0c\u533b\u7597\u4e2d\u5fc3\uff0c\u5b83\u662f\u53bf\u57ce\u3002\u4f5c\u4e3a\u5176\u5149\u660e\u672a\u6765\u7684\u8bc1\u660e\uff0c\u4ed6\u4eec\u8fd8\u63d0\u5230\u4e9a\u9a6c\u900a\u6b63\u5728\u673a\u573a\u9644\u8fd1\u5efa\u9020\u4e00\u4e2a\u5de8\u5927\u7684\u5c65\u884c\u4e2d\u5fc3\u3002\u6211\u627e\u5230\u4e86\u4e00\u4f4d\u623f\u5730\u4ea7\u7ecf\u7eaa\u4eba\uff0c\u63cf\u8ff0\u4e86\u6211\u6b63\u5728\u5bfb\u627e\u7684\u5185\u5bb9\uff0c\u7136\u540e\u5979\u5f00\u59cb\u5411\u6211\u53d1\u9001\u53ef\u7528\u623f\u4ea7\u7684\u94fe\u63a5\u3002\u6211\u8981\u6c42\u7684\u662f\u5728\u9760\u8fd1\u5e02\u653f\u8bbe\u65bd\u7684\u53ef\u6b65\u884c\u7684\u793e\u533a\u4e2d\u5efa\u9020\u5177\u6709\u4e00\u70b9\u5efa\u7b51\u7279\u8272\u7684\u5efa\u7b51\uff0c\u5f88\u53ef\u80fd\u5728\u5927\u5b66\u3001\u516c\u56ed\u3001\u9910\u9986\u548c\u5546\u5e97\u9a91\u81ea\u884c\u8f66\u7684\u8303\u56f4\u5185\u3002\u6211\u8981\u4e86\u4e00\u4e2a\u590d\u5f0f\uff0c\u60f3\u6211\u4f1a\u4e70\u4e00\u4e2a\u548c\u5bb6\u4eba\u5171\u540c\u62e5\u6709\u7684\u5730\u65b9\u3002\u4ed6\u4eec\u53ef\u4ee5\u62e5\u6709\u4ed6\u4eec\u7684\u4e00\u534a\uff0c\u6211\u53ef\u4ee5\u62e5\u6709\u6211\u7684\u3002\u8d62\u8d62\u3002\u8fd9\u4e9b\u662f\u5979\u5efa\u8bae\u7684\u5730\u65b9\u3002\u6211\u67e5\u770b\u4e86\u5979\u5728\u623f\u6e90\u4e0a\u8bbe\u7f6e\u7684\u8fc7\u6ee4\u5668\uff0c\u5979\u5220\u9664\u4e86 1990 \u5e74\u4e4b\u524d\u5efa\u9020\u7684\u6240\u6709\u623f\u4ea7\u3002\u8fd9\u4fdd\u8bc1\u4e86\u6240\u63d0\u4f9b\u7684\u623f\u5c4b\u90fd\u4f4d\u4e8e\u9ad8\u901f\u516c\u8def\u6cbf\u7ebf\u7684\u90ca\u533a\u8fb9\u7f18\uff0c\u800c\u4e0d\u662f\u5728\u57ce\u91cc\u3002\u5f53\u6211\u95ee\u5979\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u5979\u5f88\u56f0\u60d1\uff0c\u5e76\u5f00\u59cb\u5728\u963f\u666e\u5c14\u987f\u7684\u623f\u5730\u4ea7\u5e02\u573a\u4e0a\u5bf9\u6211\u8fdb\u884c\u6559\u80b2\u3002\u5979\u89e3\u91ca\u8bf4\u4f60\u4e0d\u60f3\u8981\u65e7\u623f\u5b50\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6709\u592a\u591a\u7684\u5ef6\u671f\u7ef4\u62a4\u3002\u76f8\u5bf9\u4e8e\u5b83\u4eec\u7684\u8f6c\u552e\u4ef7\u503c\uff0c\u5c06\u5b83\u4eec\u63d0\u5347\u5230\u73b0\u4ee3\u6807\u51c6\u7684\u6210\u672c\u592a\u9ad8\u4e86\u3002\u65e7\u793e\u533a\u7684\u7a0e\u6536\u592a\u9ad8\uff0c\u56e0\u6b64\u60a8\u60f3\u5728\u65e7\u57ce\u533a\u8303\u56f4\u4e4b\u5916\u7684\u5e02\u653f\u7ebf\u8def\u4e0a\u8d2d\u4e70\u3002\u5728\u8f83\u65b0\u7684\u5f00\u53d1\u9879\u76ee\u4e2d\uff0c\u60a8\u53ef\u4ee5\u4ee5\u66f4\u4f4e\u7684\u7a0e\u6536\u4ee5\u66f4\u5c11\u7684\u94b1\u83b7\u5f97\u66f4\u591a\u7684\u623f\u5b50\u3002\u65b0\u533a\u7684\u5b66\u6821\u8981\u597d\u5f97\u591a\uff0c\u4eba\u4eec\u8d2d\u4e70\u5b66\u533a\u7684\u6b21\u6570\u6bd4\u8d2d\u4e70\u623f\u5c4b\u672c\u8eab\u7684\u6b21\u6570\u8981\u591a\u3002\u867d\u7136\u963f\u666e\u5c14\u987f\u662f\u4e00\u4e2a\u975e\u5e38\u5b89\u5168\u7684\u5c0f\u57ce\u5e02\uff0c\u4f46\u4e0e\u8fb9\u7f18\u76f8\u6bd4\uff0c\u72af\u7f6a\u59cb\u7ec8\u662f\u6838\u5fc3\u7684\u66f4\u5927\u95ee\u9898\u3002\u4f60\u5fc5\u987b\u4e3a\u5b69\u5b50\u4eec\u7740\u60f3\u3002\u66f4\u5927\u9762\u79ef\u7684\u65b0\u623f\u662f\u66f4\u597d\u7684\u6295\u8d44\uff0c\u56e0\u4e3a\u8fd9\u662f\u4f18\u8d28\u4e70\u5bb6\u60f3\u8981\u7684\u3002\u8001\u623f\u5b50\u4e0d\u5347\u503c\uff0c\u4ed6\u4eec\u8870\u843d\u3002\u4ece\u5979\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5979\u544a\u8bc9\u6211\u7684\u4e8b\u60c5\u65e0\u7591\u662f\u6b63\u786e\u7684\u3002\u5979\u4e0d\u4ec5\u53cd\u6620\u4e86\u963f\u666e\u5c14\u987f\u7684\u4ef7\u503c\u89c2\uff0c\u4e5f\u53cd\u6620\u4e86\u5927\u591a\u6570\u7f8e\u56fd\u4eba\u548c\u9009\u62e9\u4f4f\u5728\u8fd9\u4e9b\u5730\u65b9\u7684\u4eba\u4eec\u7684\u4ef7\u503c\u89c2\u3002\u5979\u6ca1\u6709\u9519\u3002\u4f46\u9664\u4e86\u6211\u4e0d\u5173\u5fc3\u8fd9\u4e9b\u623f\u5c4b\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5e76\u4e14\u6c38\u8fdc\u4e0d\u4f1a\u5728\u8fd9\u4e9b\u5730\u65b9\u8d2d\u4e70\u8fd9\u4e00\u4e8b\u5b9e\u4e4b\u5916\uff0c\u6211\u610f\u8bc6\u5230\u4e86\u963f\u666e\u5c14\u987f\u6a21\u578b\u7684\u771f\u76f8\u3002\u4e09\u5341\u5e74\u540e\uff0c\u5979\u51fa\u552e\u7684\u6240\u6709\u65b0\u623f\u90fd\u5c06\u5f52\u5165\u201c\u65e7\u201d\u7c7b\u522b\uff0c\u5e76\u4e14\u968f\u7740\u7a0e\u6536\u7684\u589e\u52a0\u548c\u4e2d\u4ea7\u9636\u7ea7\u8fc1\u79fb\u5230\u65b0\u7684\u7eff\u5730\u5f00\u53d1\u9879\u76ee\u800c\u9010\u6e10\u6076\u5316\u3002\u8fd9\u4e9b\u8f83\u65e7\u7684\u5730\u65b9\uff08\u4eca\u5929\u6b63\u5728\u5efa\u9020\u7684\u623f\u5c4b\uff09\u5c06\u7531\u8d44\u6e90\u8f83\u5c11\u3001\u5730\u4f4d\u8f83\u4f4e\u7684\u4e0b\u5c42\u9636\u7ea7\u4eba\u53e3\u5c45\u4f4f\uff0c\u4ece\u800c\u5f3a\u5316\u4e86\u5982\u679c\u53ef\u80fd\u7684\u8bdd\u6700\u597d\u642c\u5bb6\u7684\u770b\u6cd5\u3002\u8fd9\u4e9b\u662f\u53ef\u66ff\u4ee3\u7684\u3001\u53ef\u9057\u5fd8\u7684\u3001\u4e00\u6b21\u6027\u7684\u5730\u65b9\uff0c\u5b83\u4eec\u4f1a\u8fc5\u901f\u8001\u5316\uff0c\u7136\u540e\u9759\u9759\u5730\u8150\u70c2\u3002\u8fd8\u6709\u5546\u4e1a\u5730\u4ea7\u8001\u5316\u7684\u95ee\u9898\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u4ee3\u4eba\u4e2d\uff0c\u6211\u4eec\u76ee\u7779\u4e86\u4e3b\u8857\u7684\u5927\u89c4\u6a21\u5f03\u7f6e\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u8131\u8863\u821e\u4e2d\u5fc3\u3001\u5927\u578b\u5546\u5e97\u548c\u533a\u57df\u8d2d\u7269\u4e2d\u5fc3\u3002\u73b0\u5728\uff0c\u8fd9\u4e9b\u96f6\u552e\u4e2d\u5fc3\u65e5\u6e10\u9648\u65e7\uff0c\u53d7\u5230\u5728\u7ebf\u5546\u52a1\u548c\u9001\u8d27\u4e0a\u95e8\u7684\u6324\u538b\u3002\u4e9a\u9a6c\u900a\u7269\u6d41\u4ed3\u5e93\u53d7\u5230\u5f53\u5730\u653f\u5e9c\u7684\u5927\u529b\u8865\u8d34\uff0c\u5e76\u88ab\u8a89\u4e3a\u5927\u90fd\u4f1a\u8fb9\u7f18\u7684\u201c\u589e\u957f\u201d\uff0c\u6b63\u5728\u6709\u6548\u5730\u53d6\u4ee3\u798f\u514b\u65af\u6cb3\u8d2d\u7269\u4e2d\u5fc3\u548c\u5404\u79cd\u5c0f\u578b\u8d2d\u7269\u5e7f\u573a\u7684\u5e72\u58f3\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u9644\u52a0\u8fc7\u7a0b\u3002\u8fd9\u662f\u5200\u8015\u706b\u79cd\u7684\u90fd\u5e02\u4e3b\u4e49\uff0c\u7ed3\u5c40\u5e76\u4e0d\u597d\u3002 \u201c\u597d\u6d88\u606f\u201d\u662f\u8fd9\u4e9b\u5730\u65b9\u5efa\u9020\u5f97\u53c8\u5feb\u53c8\u4fbf\u5b9c\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u6301\u7eed\u4e0b\u53bb\u3002\u5b83\u4eec\u7684\u5efa\u9020\u5bff\u547d\u7ecf\u8fc7\u7cbe\u5fc3\u8c03\u6574\uff0c\u4ee5\u5339\u914d\u91d1\u878d\u627f\u9500\u5546\u7684\u644a\u9500\u548c\u6298\u65e7\u65f6\u95f4\u8868\u3002\u4e00\u65e6\u4ed6\u4eec\u505c\u6b62\u5c06\u73b0\u91d1\u6d41\u548c\u7a0e\u6536\u4f18\u60e0\u5206\u7ed9\u9065\u8fdc\u7684\u6295\u8d44\u8005\uff0c\u4ed6\u4eec\u5c31\u4f1a\u5e72\u676f\u3002\u7136\u540e\u4ed6\u4eec\u6210\u4e3a\u522b\u4eba\u7684\u95ee\u9898\u3002\u5982\u679c\u6ce5\u571f\u7684\u4ef7\u503c\u8db3\u591f\u9ad8\uff0c\u6709\u4eba\u4f1a\u5c06\u8d22\u4ea7\u91cd\u65b0\u5f00\u53d1\u6210\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u4f46\u53ea\u80fd\u4f7f\u7528\u6765\u81ea\u201c\u5546\u4e1a\u53cb\u597d\u201d\u5f53\u5730\u653f\u5e9c\u7684\u9002\u5f53\u751c\u5473\u5242\uff0c\u8fd9\u610f\u5473\u7740\u5927\u91cf\u8865\u8d34\u548c\u514d\u7a0e\u671f\u3002\u8fd9\u4e9b\u4ea4\u6613\u5f80\u5f80\u662f\u4eba\u8d28\u8c08\u5224\u3002\n\u5728\u5411\u4efb\u4f55\u65b9\u5411\u5ef6\u4f38 10 \u82f1\u91cc\u7684\u8fde\u7eed\u5927\u963f\u666e\u5c14\u987f\u5730\u533a\u5185\uff0c\u6709\u6570\u5341\u4e2a\u8f83\u5c0f\u7684\u57ce\u5e02\uff0c\u8fd9\u4e9b\u57ce\u5e02\u5728\u4e00\u4e2a\u4e16\u7eaa\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\u90fd\u88ab\u90ca\u533a\u5f00\u53d1\u6240\u541e\u6ca1\u3002\u66fe\u7ecf\u7e41\u8363\u7684\u57ce\u9547\u7684\u70b9\u70b9\u6ef4\u6ef4\u90fd\u4ee5\u6d88\u5931\u7684\u5f62\u5f0f\u5b58\u5728\u4e8e\u8513\u5ef6\u4e4b\u4e2d\u3002\u8fd9\u4e9b\u57ce\u9547\u6cbf\u9a73\u8239\u8fd0\u6cb3\u3001\u5c0f\u578b\u6c34\u7535\u5927\u575d\u548c\u751f\u4ea7\u6027\u5de5\u5382\u5efa\u9020\u3002\u8bb8\u591a\u5e78\u5b58\u7684\u5efa\u7b51\u7269\u5df2\u7ecf\u90e8\u5206\u5360\u7528\u6216\u5b8c\u5168\u7a7a\u7f6e\u4e86\u6570\u5341\u5e74\u3002\u4e00\u534a\u7684\u539f\u59cb\u7ed3\u6784\u8d2c\u503c\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u88ab\u62c6\u9664\u5e76\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u5730\u9762\u505c\u8f66\u573a\u3002\u5176\u4e2d\u4e00\u4e9b\u88ab\u7528\u4f5c\u4f4e\u6863\u5b58\u50a8\u8bbe\u65bd\u6216\u5ec9\u4ef7\u5bc4\u552e\u5e97\u3002\u51fa\u4e8e\u597d\u5947\uff0c\u6211\u67e5\u770b\u4e86\u5176\u4e2d\u4e00\u680b\u5efa\u7b51\u7684\u6210\u672c\u3002\u4eca\u5e74\u51ac\u5929\uff0c\u8fd9\u4e2a\u5730\u65b9\u4e00\u697c\u6709\u4e00\u5bb6\u5df2\u505c\u4e1a\u7684\u4e2d\u9910\u5385\uff0c\u697c\u4e0a\u6709\u4e00\u95f4\u7a7a\u7f6e\u7684\u4e24\u5c45\u5ba4\u516c\u5bd3\uff0c\u552e\u4ef7\u4e3a 85,000 \u7f8e\u5143\u3002\u4ec5\u9910\u5385\u8bbe\u5907\u3001\u5de5\u4e1a\u7089\u7076\u3001\u6cb9\u70b8\u9505\u3001\u6b65\u5165\u5f0f\u51b0\u7bb1\u3001\u4e0d\u9508\u94a2\u5de5\u4f5c\u53f0\u548c\u706d\u706b\u901a\u98ce\u7f69\u7684\u6210\u672c\u5c31\u63a5\u8fd1\u8fd9\u4e2a\u4ef7\u683c\u3002\u8fd9\u5ea7\u5efa\u7b51\u5728\u5e02\u573a\u4e0a\u5df2\u7ecf\u5f88\u957f\u65f6\u95f4\u6ca1\u6709\u51fa\u4ef7\u4e86\u3002\u5b83\u6700\u7ec8\u5728\u51e0\u4e2a\u6708\u524d\u4ee5 65,000 \u7f8e\u5143\u7684\u4ef7\u683c\u552e\u51fa\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u8fd9\u662f\u5bf9\u4ef7\u503c 65,000 \u7f8e\u5143\u7684\u8c6a\u534e 2021 Ram \u76ae\u5361\u8f66\u7684\u8bc4\u8bba\u3002\u6709\u4eba\u62c6\u9664\u4e86\u9910\u5385\u5185\u90e8\uff0c\u5e76\u5f00\u4e86\u4e00\u5bb6\u51fa\u552e\u68d2\u7403\u5361\u7684\u6536\u85cf\u54c1\u5e97\u3002\u8fd9\u5bb6\u5546\u5e97\u6fc0\u6d3b\u4e86\u5e97\u9762\u5e76\u4f7f\u8fd9\u4e2a\u5730\u65b9\u4fdd\u6301\u6e29\u6696\uff0c\u6240\u4ee5\u6211\u5168\u529b\u4ee5\u8d74\u3002\u4f46\u662f\uff0c\u9664\u975e\u8fd9\u5bb6\u4f01\u4e1a\u901a\u8fc7\u4e92\u8054\u7f51\u5b8c\u6210\u5927\u90e8\u5206\u9500\u552e\uff0c\u5426\u5219\u5b83\u5c06\u96be\u4ee5\u751f\u5b58\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5f00\u9500\u4f4e\u5f97\u60ca\u4eba\u3002\u8fd9\u4e00\u5207\u90fd\u4f1a\u7ee7\u7eed\u8fdb\u884c\uff0c\u76f4\u5230\u5efa\u7b51\u7269\u9700\u8981\u5927\u7b14\u8d39\u7528\uff0c\u4f8b\u5982\u5bf9\u5931\u8d25\u7684\u7816\u5899\u6216\u7834\u88c2\u7684\u57fa\u7840\u8fdb\u884c\u7ed3\u6784\u4fee\u590d\u3002\u7136\u540e\u5b83\u5f00\u59cb\u6cbf\u7740\u505c\u8f66\u573a\u8f6c\u6362\u7684\u9053\u8def\u3002\u56de\u5230\u4e00\u4e2a\u4e16\u7eaa\u524d\u8fd9\u4e2a\u5c0f\u9547\u5904\u4e8e\u9f0e\u76db\u65f6\u671f\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u7a7a\u5730\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u6709\u591a\u5ea7\u5efa\u7b51\u7269\u3002\u4ed6\u4eec\u73b0\u5728\u90fd\u8d70\u4e86\u3002\u6211\u6253\u7535\u8bdd\u7ed9\u5f53\u5730\u7684\u5546\u4e1a\u6539\u5584\u533a\u529e\u516c\u5ba4\u4ee5\u53ca\u57ce\u5e02\u89c4\u5212\u5e08\uff0c\u5e76\u4e0e\u5404\u4e2a\u90e8\u95e8\u7684\u4eba\u804a\u5929\u3002\u4ed6\u4eec\u4ee5\u901a\u5e38\u7684\u9500\u552e\u65b9\u5f0f\u8bb2\u8ff0\u4e86\u4ed6\u4eec\u5982\u4f55\u6253\u9020\u5177\u6709\u5386\u53f2\u7279\u8272\u7684\u5145\u6ee1\u6d3b\u529b\u7684\u96f6\u552e\u5927\u8857\u3002\u4ed6\u4eec\u63d0\u5230\u4e86\u65b0\u7684\u88c5\u9970\u706f\u67f1\u3001\u82b1\u575b\u3001\u8282\u65e5\u65d7\u5e1c\u548c\u5b63\u8282\u6027\u5e86\u795d\u6d3b\u52a8\u3002 \u201c\u4f60\u770b\u5230\u6211\u4eec\u7684\u9e70\u96d5\u5851\u4e86\u5417\uff1f\u201d\u6211\u60f3\u8d77\u4e86\u4fc4\u4ea5\u4fc4\u5dde\u79d1\u5c14\u5170\u9547\u3002\u7834\u8d25\u7684\u5efa\u7b51\u7269\u5df2\u88ab\u65b0\u7684\u6d88\u9632\u5c40\u3001\u4e2d\u5b66\u3001\u5e02\u653f\u5e9c\u548c\u65b0\u7684\u8b66\u5bdf\u5c40\u6240\u53d6\u4ee3\u3002\u4e00\u65e6\u878d\u8d44\u548c\u8db3\u591f\u7684\u7a7a\u5730\u805a\u96c6\u8d77\u6765\u4ee5\u5bb9\u7eb3\u73b0\u4ee3\u5efa\u7b51\uff0c\u5c31\u6709\u8ba1\u5212\u8fdb\u884c\u586b\u5145\u5f0f\u5f00\u53d1\u3002 \uff08\u53c8\u540d\u5fb7\u514b\u8428\u65af\u751c\u751c\u5708\u3002\uff09\u6211\u7684\u611f\u89c9\u662f\uff0c\u4ed6\u4eec\u52a0\u5165\u57ce\u5e02\u89c4\u5212\u65f6\u5c1a\u6f6e\u6d41\u5df2\u7ecf\u665a\u4e86\u4e8c\u5341\u5e74\u3002\u6211\u5bf9\u8fd9\u4e2a\u5730\u65b9\u7684\u672a\u6765\u7684\u770b\u6cd5\u662f\u6211\u5728\u5168\u56fd\u5176\u4ed6\u5730\u65b9\u770b\u5230\u7684\u4e8b\u7269\u7684\u53d8\u5316\u3002\u51fa\u4e8e\u60c5\u611f\u539f\u56e0\uff0cYe Olde Towne \u7684\u4e00\u5c0f\u90e8\u5206\u88ab\u4fdd\u7559\u4e0b\u6765\uff0c\u5e76\u53d8\u6210\u4e86\u4e00\u4e2a\u4e8b\u5b9e\u4e0a\u7684\u4e3b\u9898\u8d2d\u7269\u4e2d\u5fc3\u3002\u5728\u8fd9\u4e2a\u5730\u65b9\uff0c\u968f\u7740\u6587\u5316\u548c\u7ecf\u6d4e\u7684\u76db\u884c\u2026\u2026\u6211\u8ba4\u4e3a\u8fd9\u53ea\u4e0d\u8fc7\u662f\u4e00\u5806\u5e73\u5eb8\u7684\u5316\u5986\u54c1\u8d34\u7247\uff0c\u5b83\u4eec\u4f1a\u4e00\u7638\u4e00\u62d0\u5730\u8ddb\u884c\uff0c\u76f4\u5230\u4e0b\u4e00\u4e2a\u65f6\u5c1a\u5728\u4e0b\u4e00\u4e2a\u4e8c\u5341\u5e74\u540e\u5230\u6765\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u53ef\u6015\u7684\u60c5\u51b5\uff0c\u4f46\u5b83\u4e5f\u4e0d\u662f\u201c\u53d8\u9769\u6027\u7684\u201d\u6216\u201c\u50ac\u5316\u6027\u7684\u201d\u3002\u6211\u7ed9\u4e86\u8fd9\u4e9b\u5b98\u5458\u6211\u4e00\u8d2f\u7684\u76f4\u7387\u8bc4\u4ef7\u3002\u4ed6\u4eec\u4e0d\u559c\u6b22\u6211\u7684\u8bed\u6c14\u3002\u6240\u4ee5\u8fd9\u662f\u5927\u5c40\u3002\u7f8e\u56fd\u7684\u6240\u6709\u673a\u6784\u90fd\u4e13\u6ce8\u4e8e\u6d41\u5931\u3002\u751f\u4ea7\u65b0\u4e1c\u897f\uff0c\u5feb\u901f\u51fa\u552e\uff0c\u5151\u73b0\uff0c\u7136\u540e\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u9879\u76ee\u3002\u7834\u8d25\u7684\u8857\u533a\u5e76\u975e\u5076\u7136\u3002\u5b83\u4eec\u878d\u5165\u4e86\u6211\u4eec\u505a\u4e8b\u7684\u65b9\u65b9\u9762\u9762\u3002\u6210\u529f\u7684\u4e2a\u4eba\u548c\u7cbe\u660e\u7684\u6295\u8d44\u8005\u672c\u80fd\u5730\u77e5\u9053\u8fd9\u4e00\u70b9\uff0c\u5e76\u6bcf\u4e94\u5e74\u6216\u5341\u5e74\u4e0d\u65ad\u5730\u8fc1\u79fb\u5230\u4e0b\u4e00\u4e2a\u66f4\u597d\u7684\u5730\u65b9\u3002\u5e02\u653f\u5b98\u5458\u548c\u79c1\u4eba\u987e\u95ee\u4e5f\u662f\u5982\u6b64\uff0c\u4ed6\u4eec\u4e0d\u65ad\u5730\u4ece\u4e00\u4e2a\u804c\u4f4d\u8df3\u5230\u53e6\u4e00\u4e2a\u804c\u4f4d\uff0c\u79bb\u5f00\u5df2\u7ecf\u8fbe\u5230\u9876\u5cf0\u7684\u5730\u533a\uff0c\u652f\u6301\u4ecd\u5728\u589e\u957f\u7684\u5730\u533a\u3002\n\u6211\u5e0c\u671b\u4eba\u4eec\u505c\u6b62\u5047\u88c5\uff0c\u800c\u662f\u8bda\u5b9e\u5730\u5bf9\u5f85\u8fd9\u79cd\u60c5\u51b5\u3002\u51e0\u5341\u5e74\u4f60\u4f1a\u5f97\u5230\u5f88\u597d\u7684\u8fd0\u884c\u3002\u7136\u540e\u968f\u7740\u4e59\u70ef\u57fa\u58c1\u677f\u548c\u5408\u6210\u7070\u6ce5\u5f00\u59cb\u5265\u843d\uff0c\u4e8b\u60c5\u6162\u6162\u53d8\u5f97\u7cdf\u7cd5\u3002\u6211\u4eec\u5c06\u7ee7\u7eed\u8fd9\u6837\u505a\uff0c\u76f4\u5230\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u6211\u4eec\u518d\u4e5f\u505a\u4e0d\u5230\u4e3a\u6b62\u3002\u90a3\u4e48\u6211\u4eec\u5c06\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u5f00\u59cb\u91cd\u65b0\u5c45\u4f4f\u5728\u7559\u4e0b\u7684\u6e23\u6ed3\u4e2d\u3002\u6709\u4e9b\u5730\u65b9\u4f1a\u6bd4\u5176\u4ed6\u5730\u65b9\u66f4\u503c\u5f97\u62ef\u6551\u3002\u8038\u8038\u80a9\u3002\u6211\u60f3\u8d77\u4e86\u4f0a\u4e3d\u838e\u767d\u00b7\u6bd5\u6653\u666e (Elizabeth Bishop) \u7684\u8bd7\u300a\u60f3\u8c61\u4e2d\u7684\u51b0\u5c71\u300b\uff0c\u5f00\u5934\u5199\u9053\uff1a\u201c\u6211\u4eec\u5b81\u613f\u62e5\u6709\u51b0\u5c71\uff0c\u4e5f\u4e0d\u613f\u62e5\u6709\u8239\uff0c\u5c3d\u7ba1\u8fd9\u610f\u5473\u7740\u65c5\u884c\u7684\u7ed3\u675f\u3002\u201d\u8fd9\u5c31\u662f\u6211\u5bf9\u5317\u7f8e\u53d1\u5c55\u6a21\u5f0f\u7684\u611f\u53d7\u3002\u5b83\u662f\u77ed\u6682\u7684\u3002\u5728\u6f2b\u957f\u7684\u5386\u53f2\u957f\u6cb3\u4e2d\uff0c\u6ca1\u6709\u4eba\u4f1a\u9519\u8fc7\u8fd9\u4e9b\u5730\u65b9\u3002\u540e\u4ee3\u5c06\u5fd9\u4e8e\u5bf9\u4ed6\u4eec\u5c06\u7ee7\u627f\u7684\u666f\u89c2\u505a\u5b8c\u5168\u4e0d\u540c\u7684\u4e8b\u60c5\u3002\u6211\u5df2\u7ecf\u63a5\u53d7\u4e86\u8fd9\u4e2a\u73b0\u5b9e\u3002", "note_en": "I recently bought a house in Madison, Wisconsin, but before I did I went through a series of adventures in different parts of the state exploring the property market. I was initially interested in Wisconsin because I have extended family there and they encouraged me to look at Appleton. They described it as a safe, prosperous, and growing community populated by good people. There\u2019s a historic downtown, Lawrence University, the medical center, and it\u2019s the county seat. As proof of its bright future they also mentioned Amazon is building a giant fulfillment center out by the airport. I found a real estate agent, described what I was looking for, and she began sending me links to available properties.\n What I requested was a building with a bit of architectural character in a walkable neighborhood near civic amenities, quite possibly within a bicycle ride of the university, public parks, restaurants, and shops. I asked for a duplex, thinking I would be buying a place that I would co-own with family members. They could have their half, I could have mine. Win win.\n          These are the places she suggested instead. I looked at the filter she had set on the listings and she had eliminated any property that was built before 1990. That guaranteed the homes on offer would all be out on the suburban fringe along the highways instead of in town. When I asked her about this she was confused and set about educating me on the property market in Appleton.\n She explained that you don\u2019t want an older home because they have too much deferred maintenance. Bringing them up to a modern standard is too expensive relative to their resale value. Taxes are too high in old neighborhoods so you want to buy across municipal lines outside the older city limits. You get more house for less money with lower taxes in the newer developments. The schools are much better in the newer areas, and people shop for school districts more than they shop for a house itself. While Appleton is a very safe little city, crime is always a bigger problem at the core compared to the edges. You have to think of the children. And a newer home on a larger lot is a better investment because that\u2019s what quality buyers want. Older homes don\u2019t appreciate, they decline.\n  What she was telling me was no doubt true from her perspective. She reflected the values not just of Appleton, but most of America and the people who choose to live in these places. She wasn\u2019t wrong. But aside from the fact that I didn\u2019t care for any of these homes and was never going to buy in these locations, I realized the truth of the Appleton model. Thirty years from now all the new homes she\u2019s selling will slip into the \u201cold\u201d category and will gradually fester as taxes rise and the middle class migrates to new greenfield developments. These older places (the homes being built today) will then be populated by lower class people with fewer resources and less status thereby reinforcing the perception that it\u2019s best to move on if at all possible. These are fungible, forgettable, disposable places that rapidly age and are then left to quietly decay.\n      There\u2019s also the problem of aging commercial real estate. Over the last few generations we\u2019ve witnessed the wholesale abandonment of Main Street in favor of strip centers, big box stores, and regional shopping malls. Now these retail centers are getting old and are being squeezed hard by online commerce and home delivery. The Amazon fulfillment warehouse that\u2019s so aggressively subsidized by local government and heralded as \u201cgrowth\u201d out on the edge of the metroplex is effectively replacing the dried husk of the Fox River Mall and various lesser shopping plazas. This isn\u2019t an additive process. It\u2019s slash and burn urbanism and it doesn\u2019t end well.\n The \u201cgood news\u201d is these places were built fast and cheap and were never meant to last anyway. They have a construction lifespan exquisitely tuned to match the amortization and depreciation schedules of the financial underwriters. As soon as they stop spinning off cash flow and tax advantages to distant investors they\u2019re toast. Then they become someone else\u2019s problem. If the value of the dirt is high enough someone will redevelop the property into something different, but only with the appropriate sweeteners from \u201cbusiness friendly\u201d local government, meaning heavy subsidies and tax holidays. These deals tend to be a hostage negotiation.\n       Within the continuous greater Appleton region for ten miles in any direction are dozens of smaller municipalities that have been engulfed by suburban development for most of a century. Little vestiges of once prosperous towns linger in diminished form embedded in the sprawl. These towns were built along barge canals, small hydroelectric dams, and productive mills. Many of the surviving buildings have been partially occupied or completely vacant for decades. Half the original structures were so devalued that they were torn down and replaced with surface parking lots. A number of them are used as low grade storage facilities or budget consignment shops.\n    Out of curiosity I looked at how much one of these buildings costs. This winter  this place with a defunct Chinese restaurant on the ground floor and a vacant two bedroom apartment upstairs was offered at $85,000. The cost of the restaurant equipment alone, the industrial stoves, deep fryers, walk-in refrigerators, stainless steel work tables, and fire suppressing vent hoods would have been close to that price. The building had been on the market for a very long time with no bids. It eventually sold a few months ago for $65,000. For comparison, here\u2019s a review of a $65,000 luxury 2021 Ram pickup truck.\n  Someone removed the restaurant interior and opened a  collectibles shop that sells baseball cards. This shop activates the storefront and keeps the place warm so I\u2019m all for it. But unless this enterprise does most of its sales via the interwebs it\u2019s going to struggle to survive. Fortunately the overhead is shockingly low. It will all keep ticking along until the building needs a big ticket item like a structural repair to a failing brick wall or cracked foundation. Then it starts down the road to a parking lot conversion.\n       Back when this town was at its peak a century ago each of these vacant parcels had multiple buildings on them. They\u2019re all gone now. I called the local business improvement district office as well as the town planner and chatted with people in various departments. They gave the usual sales pitch about how they\u2019re creating a vibrant retail Main Street with historic character. They mentioned the new decorative lamp posts, flower beds, festive flags, and seasonal celebrations. \u201cDid you see our eagle sculpture?\u201d I got a flashback to  Colerain Township, Ohio.\n   Blighted buildings had been replaced with a new fire station, middle school, city offices, and a new police station. And there are plans for infill development once financing and enough vacant parcels are aggregated to accommodate modern buildings. (AKA  Texas Doughnuts.) My sense is that they\u2019re jumping on the city planning fashion bandwagon twenty years too late.\n What I see for the future of this spot is a variation on things I\u2019ve seen elsewhere around the country. A sliver of Ye Olde Towne is preserved for sentimental reasons and turned into a de facto  themed strip mall. In this location, with the prevailing culture and economy\u2026 I don\u2019t see this being much more than a mediocre collection of cosmetic patches that will limp along half assed until the next fad arrives in another twenty years. It\u2019s not a terrible situation, but it\u2019s not \u201ctransformative\u201d or \u201ccatalytic\u201d either. I gave these officials my usual blunt assessment.  They didn\u2019t like my tone.\n So here\u2019s the big picture. All of America\u2019s institutions are focused exclusively on churn. Crank out new stuff, sell it fast, cash out, and move on to the next project. Blighted neighborhoods aren\u2019t an accident. They\u2019re baked in to every facet of how we do everything. Successful individuals and savvy investors know this instinctively and keep moving every five or ten years to the next new better place. This is also true of municipal officials and private consultants who continually hopscotch from job to job leaving behind districts that have peaked in favor of ones that are still growing.\n I\u2019d love for people to stop pretending otherwise and just be honest about the situation. You get a really good run for a few decades. Then things slowly turn to crap as the vinyl siding and synthetic stucco start to peel off. We\u2019re going to continue to do this until we simply can\u2019t anymore for one reason or another. Then we\u2019ll have no choice but to start re-inhabiting the dregs that were left behind. Some places will be more worthy of salvation than others. Shrug.\n I\u2019m reminded of  Elizabeth Bishop\u2019s poem \u201cThe Imaginary Iceberg\u201d which begins, \u201cWe\u2019d rather have the iceberg than the ship, although it meant the end of travel.\u201d That\u2019s how I feel about the North American development pattern. It\u2019s ephemeral. In the long arc of history no one will miss any of these places. Future generations will be busy doing entirely different things with the landscape they\u2019ll inherit. I\u2019ve made my peace with that reality.", "posttime": "2021-07-24 07:25:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u62e5\u6709,iceberg,\u5730\u65b9", "title": "\u6211\u4eec\u5b81\u613f\u62e5\u6709\u51b0\u5c71\u4e5f\u4e0d\u613f\u62e5\u6709\u8239", "title_en": "We\u2019d rather have the iceberg than the ship", "transed": 1, "url": "https://www.granolashotgun.com/granolashotguncom/wed-rather-have-the-iceberg-than-the-ship", "via": "", "real_tags": ["\u62e5\u6709", "iceberg", "\u5730\u65b9"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069366, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u81ea\u52a8\u7684\u3002\u60a8\u7684\u6d4f\u89c8\u5668\u5c06\u5f88\u5feb\u91cd\u5b9a\u5411\u5230\u60a8\u8bf7\u6c42\u7684\u5185\u5bb9\u3002", "note_en": "This process is automatic. Your browser will redirect to your requested content shortly.", "posttime": "2021-07-24 07:24:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "egressive,egregious,\u8bf7\u6c42", "title": "AWS \u7684 Egressive Egress", "title_en": "AWS's Egregious Egress", "transed": 1, "url": "https://blog.cloudflare.com/aws-egregious-egress/", "via": "", "real_tags": ["egressive", "egregious", "\u8bf7\u6c42"]}, {"category": "", "categoryclass": "", "imagename": "418087cdb529052a0211ffc9a68db5a0.jpg", "infoid": 1069365, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u77f3\u6cb9\u548c\u5929\u7136\u6c14\u516c\u53f8 O Royal Dutch Shell \u548c\u897f\u73ed\u7259\u7535\u529b\u516c\u53f8 Iberdrola \u7684\u5b50\u516c\u53f8 Scottish Power \u53d1\u5e03\u4e86\u4e00\u9879\u516c\u544a\u3002\u4ed6\u4eec\u8bf4\uff0c\u4ed6\u4eec\u5171\u540c\u5411\u82f1\u56fd\u5f53\u5c40\u63d0\u4ea4\u4e86\u5728\u82cf\u683c\u5170\u6d77\u5cb8\u9644\u8fd1\u5efa\u9020\u4e16\u754c\u4e0a\u7b2c\u4e00\u5957\u5927\u578b\u6d6e\u52a8\u98ce\u7535\u573a\u7684\u5efa\u8bae\u3002\u76ee\u524d\uff0c\u6700\u5927\u7684\u6d6e\u52a8\u519c\u573a\u662f\u4e00\u4e2a 6 \u6da1\u8f6e\u673a\uff0c50 \u9635\u5217\uff0c\u5c06\u4e8e\u4e0b\u4e2a\u6708\u5728\u8ddd\u79bb\u963f\u4f2f\u4e01 15 \u516c\u91cc\u7684\u5317\u6d77\u5b8c\u5de5\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u8be5\u8d22\u56e2\u8868\u793a\u6b63\u5728\u8003\u8651\u5343\u5146\u74e6 ( )\u3002\u4ee5\u6d77\u5e8a\u4e3a\u57fa\u7840\u7684\u6d77\u4e0a\u98ce\u7535\u573a\u73b0\u5728\u5df2\u6210\u4e3a\u591a\u4e2a\u5730\u65b9\u80fd\u6e90\u7ed3\u6784\u7684\u4e00\u90e8\u5206\u3002\u5728\u8fc7\u53bb\u56db\u5e74\u4e2d\uff0c\u4ed6\u4eec\u7684\u4ea7\u80fd\u51e0\u4e4e\u7ffb\u4e86\u4e00\u756a\uff0c\u4ece 19 \u589e\u52a0\u5230 35\uff0c\u644a\u9500\u6210\u672c\u4e0b\u964d\u4e86\u4e09\u5206\u4e4b\u4e00\uff0c\u4ece\u6bcf\u5c0f\u65f6 120 \u7f8e\u5143\u964d\u81f3 80 \u7f8e\u5143\u3002\u7136\u800c\uff0c\u5b83\u4eec\u7684\u90e8\u7f72\u80fd\u529b\u6709\u9650\uff0c\u4ec5\u9650\u4e8e\u6d45\u4e8e\u7ea6 60 \u7c73\u7684\u6c34\u57df\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4e16\u754c\u4e0a 80% \u7684\u6d77\u4e0a\u98ce\u5439\u8fc7\u6bd4\u8fd9\u66f4\u6df1\u7684\u5730\u65b9\u3002\u56fd\u9645\u80fd\u6e90\u7f72\u8868\u793a\uff0c\u8ba9\u8fd9\u4e9b\u8bbe\u65bd\u53d8\u5f97\u53ef\u53ca\uff0c\u5c06\u91ca\u653e\u8db3\u591f\u7684\u7535\u529b\uff0c\u4ee5\u6ee1\u8db3 2040 \u5e74\u4e16\u754c\u53ef\u80fd\u7684\u7535\u529b\u9700\u6c42 11 \u500d\u3002\u8bc0\u7a8d\u662f\u5efa\u9020\u6da1\u8f6e\u673a\uff0c\u867d\u7136\u505c\u6cca\u5728\u6d77\u5e8a\u4e0a\uff0c\u4f46\u4f1a\u6f02\u6d6e\u3002\u5982\u679c\u58f3\u724c\u548c\u82cf\u683c\u5170\u7535\u529b\u80fd\u591f\u6210\u529f\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u90a3\u5c06\u662f\u671d\u7740\u6316\u6398\u6f5c\u529b\u8fc8\u51fa\u7684\u4e00\u5927\u6b65\u3002\u5341\u5e74\u524d\uff0c\u6d6e\u52a8\u6da1\u8f6e\u6280\u672f\u662f\u4e00\u4e2a\u8fb9\u7f18\u4e8b\u4ef6\u3002\u56f0\u96be\u4e0d\u5728\u4e8e\u6da1\u8f6e\u673a\u672c\u8eab\uff0c\u800c\u5728\u4e8e\u4f7f\u5b83\u4eec\u6f02\u6d6e\u3002\u81ea 1960 \u5e74\u4ee3\u4ee5\u6765\uff0c\u77f3\u6cb9\u548c\u5929\u7136\u6c14\u884c\u4e1a\u5f00\u53d1\u4e86\u4e00\u7cfb\u5217\u6d6e\u52a8\u57fa\u7840\uff0c\u53ef\u4ee5\u4f7f\u94bb\u4e95\u5e73\u53f0\u7b49\u5de8\u5927\u7269\u4f53\u5728\u6d77\u4e0a\u4fdd\u6301\u7a33\u5b9a\u3002\u4f46\u662f\uff0c\u5c06\u8fd9\u79cd\u4e13\u4e1a\u77e5\u8bc6\u8f6c\u79fb\u5230\u98ce\u529b\u53d1\u7535\u4e0a\u5e76\u4e0d\u5bb9\u6613\u3002\u9996\u5148\uff0c\u4e0e\u77f3\u6cb9\u94bb\u4e95\u5e73\u53f0\u4e0d\u540c\uff0c\u98ce\u529b\u6da1\u8f6e\u673a\u7626\u957f\u4e14\u5934\u91cd\u811a\u8f7b\uff0c\u5bb9\u6613\u7ffb\u5012\u3002\u5176\u6b21\uff0c\u6da1\u8f6e\u673a\u4f1a\u4ea7\u751f\u5f3a\u5927\u7684\u9640\u87ba\u529b\uff0c\u8fd9\u4f1a\u8fdb\u4e00\u6b65\u7834\u574f\u6f02\u6d6e\u673a\u5668\u7684\u7a33\u5b9a\u6027\u3002\u5728\u90a3\u4e9b\u65e5\u5b50\u91cc\uff0c\u5f88\u96be\u770b\u5230\u5982\u4f55\u4ee5\u8db3\u591f\u4fbf\u5b9c\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u4ee5\u4e0e\u7528\u87ba\u6813\u56fa\u5b9a\u5728\u6d77\u5e95\u7684\u6da1\u8f6e\u673a\u7ade\u4e89\u2014\u2014\u66f4\u4e0d\u7528\u8bf4\u4f20\u7edf\u80fd\u6e90\u4e86\u3002\u4e0d\u518d\u3002\u5341\u5e74\u7684\u53d1\u5c55\u4ea7\u751f\u4e86\u4e24\u4ef6\u4e8b\uff1a\u8bc1\u660e\u6da1\u8f6e\u673a\u53ef\u4ee5\u6f02\u6d6e\u548c\u6e05\u695a\u5730\u4e86\u89e3\u8fd9\u4e9b\u6f02\u6d6e\u88c5\u7f6e\u7684\u5916\u89c2\u3002\u5de5\u7a0b\u5e08\u901a\u8fc7\u60a3\u8005\u539f\u578b\u8bbe\u8ba1\u5b9e\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002\u4ed6\u4eec\u91c7\u7528\u4e86\u5148\u524d\u5728\u5927\u5b66\u6ce2\u6d6a\u6c60\u4e2d\u6d4b\u8bd5\u8fc7\u7684\u8bbe\u8ba1\uff0c\u5e76\u5c06\u5b83\u4eec\u653e\u5927\u5230\u632a\u5a01\u3001\u8461\u8404\u7259\u548c\u65e5\u672c\u6cbf\u6d77\u7684\u5c0f\u578b\u793a\u8303\u5355\u4f4d\u3002\u6bcf\u4e2a\u5355\u5143\u90fd\u914d\u5907\u4e86\u4f20\u611f\u5668\uff0c\u6536\u96c6\u4e86\u8bf8\u5982\u4fef\u4ef0\u3001\u98ce\u901f\u548c\u6ce2\u6d6a\u9ad8\u5ea6\u7b49\u53d8\u91cf\u7684\u6570\u636e\u3002\u7136\u540e\u5c06\u8fd9\u4e9b\u6570\u636e\u6298\u53e0\u5230\u8bbe\u8ba1\u4e2d\uff0c\u4ee5\u83b7\u5f97\u66f4\u5927\u3001\u66f4\u7a33\u5b9a\u7684\u5355\u5143\u3002\u7ed3\u679c\uff0c\u4eca\u5929\u5728\u632a\u5a01\u548c\u8461\u8404\u7259\u6d77\u5cb8\u9644\u8fd1\u7684\u65b0\u6a21\u578b\u4e2d\u53ef\u89c1\uff0c\u53ef\u4ee5\u5b89\u5168\u5730\u6f02\u6d6e\u6bd4\u5176\u524d\u8f88\u5f3a\u5927\u56db\u500d\u7684\u6da1\u8f6e\u673a\u3002\u56e0\u6b64\uff0c\u5de5\u7a0b\u5e08\u8ba4\u4e3a\u6d6e\u9009\u95ee\u9898\u5df2\u89e3\u51b3\u3002 \u201c\u6da1\u8f6e\u673a\u8fd0\u884c\u826f\u597d\u3002\u4ed6\u4eec\u4e0d\u7ffb\u8f6c\u3002\u8fd9\u662f\u53ef\u4ee5\u505a\u5230\u7684\uff0c\u201d\u8be5\u9886\u57df\u7684\u5148\u9a71\u963f\u62c9\u00b7\u6e29\u65af\u5766 (Alla Weinstein) \u8bf4\uff0c\u4ed6\u73b0\u5728\u6b63\u5728\u4e3a\u52a0\u5229\u798f\u5c3c\u4e9a\u6d77\u5cb8\u9644\u8fd1\u7684\u6d6e\u52a8\u98ce\u7535\u573a\u7533\u8bf7\u8bb8\u53ef\u8bc1\u3002\u51fa\u73b0\u4e86\u56db\u79cd\u6d6e\u9009\u65b9\u6cd5\uff08\u89c1\u56fe\uff09\u3002\u6700\u5e38\u89c1\u7684\u662f\u534a\u6f5c\u5f0f\u3002\u4e00\u5bb6\u7f8e\u56fd\u516c\u53f8 Principle Power \u662f\u4e00\u5bb6\u8ffd\u6c42\u8fd9\u4e00\u76ee\u6807\u7684\u516c\u53f8\u3002\u534a\u6f5c\u5f0f\u6709\u591a\u79cd\u8bbe\u8ba1\u3002 Principle&#39;s \u4f7f\u7528\u4e86\u4e00\u4e2a\u6709\u6d6e\u529b\u7684\u94a2\u4e09\u89d2\u5f62\uff0c\u5728\u4e24\u4e2a\u9876\u70b9\u5904\u6709\u4e00\u4e2a\u88c5\u6ee1\u6c34\u7684\u7f50\u5b50\u3002\u8fd9\u4e9b\u538b\u8f7d\u8231\u5e73\u8861\u4e86\u7b2c\u4e09\u4e2a\u9876\u70b9\u5904\u6da1\u8f6e\u673a\u7684\u91cd\u91cf\uff0c\u5728\u4e09\u89d2\u5f62\u5185\u90e8\u6cf5\u9001\u6c34\u4ee5\u964d\u4f4e\u5176\u7a33\u5b9a\u6027\u3002\n\u632a\u5a01\u516c\u53f8 Equinor \u6240\u8ffd\u6c42\u7684\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\u662f\u5c06\u6da1\u8f6e\u673a\u56fa\u5b9a\u5728\u4e00\u4e2a\u88c5\u6ee1\u91cd\u538b\u8f7d\u7269\u7684\u79f0\u4e3a\u7ffc\u6881\u7684\u74f6\u5b50\u4e0a\uff0c\u4f7f\u5176\u76f4\u7acb\u6f02\u6d6e\u3002 Equinor \u5c06\u6da1\u8f6e\u673a\u653e\u7f6e\u5728 80 \u7c73\u9ad8\u7684\u6df7\u51dd\u571f\u7ba1\u4e0a\uff0c\u8be5\u7ba1\u5185\u88c5\u6709\u6c34\u3001\u5ca9\u77f3\u6216\u5176\u4ed6\u4e00\u4e9b\u5ec9\u4ef7\u800c\u6c89\u91cd\u7684\u6750\u6599\u3002\u53e6\u5916\u4e24\u79cd\u65b9\u6cd5\u4e0d\u592a\u53d1\u8fbe\uff0c\u4f46\u53ef\u80fd\u8bc1\u660e\u662f\u6709\u7528\u7684\u3002 Glosten \u662f\u4e00\u5bb6\u4e0e\u901a\u7528\u7535\u6c14\u5efa\u7acb\u5408\u4f5c\u4f19\u4f34\u5173\u7cfb\u7684\u7f8e\u56fd\u5de5\u7a0b\u516c\u53f8\uff0c\u5b83\u4f7f\u7528\u7684\u662f\u5f20\u529b\u817f\u5e73\u53f0\u3002\u8fd9\u662f\u4e00\u4e2a\u6d77\u661f\u5f62\u72b6\u7684\u94a2\u7ed3\u6784\uff0c\u5176\u8f6e\u6bc2\u5904\u88c5\u6709\u6da1\u8f6e\u673a\u3002\u6d77\u661f\u88ab\u6df9\u6ca1\u5e76\u7528\u7535\u7f06\u8fde\u63a5\u5230\u6d77\u5e95\u3002\u8fd9\u79cd\u5e03\u7f6e\u7c7b\u4f3c\u4e8e\u5728\u58a8\u897f\u54e5\u6e7e\u94bb\u63a2\u7684\u8d85\u6df1\u6c34 Magnolia \u94bb\u4e95\u5e73\u53f0\uff0c\u4f7f\u6da1\u8f6e\u673a\u4fdd\u6301\u76f4\u7acb\u3002\u632a\u5a01\u516c\u53f8 Ideol \u5c06\u6da1\u8f6e\u673a\u5b89\u88c5\u5728\u7c7b\u4f3c\u4e8e\u7a7a\u76f8\u6846\u7684\u6241\u5e73\u6df7\u51dd\u571f\u6216\u94a2\u9a73\u8239\u4e0a\u3002\u5f53\u6da1\u8f6e\u673a\u6446\u52a8\u65f6\uff0c\u6c34\u4f1a\u5728\u6846\u67b6\u5185\u6643\u52a8\uff0c\u4ece\u800c\u6291\u5236\u5176\u8fd0\u52a8\u3002\u8be5\u516c\u53f8\u58f0\u79f0\uff0c\u5176\u539f\u578b\u673a\u4f4d\u4e8e\u65e5\u672c\u6cbf\u6d77\uff0c\u5df2\u7ecf\u5728\u4e09\u573a\u53f0\u98ce\u4e2d\u5e78\u5b58\u4e0b\u6765\u3002\u9879\u76ee\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u770b\u5230\u4e86\u8db3\u591f\u7684\u4e1c\u897f\u6765\u8bf4\u670d\u4ed6\u4eec\u3002\u5c3d\u7ba1\u58f3\u724c-\u82cf\u683c\u5170\u7535\u529b\u8d22\u56e2\u7684\u63d0\u8bae\uff08\u6ca1\u6709\u63d0\u53ca\u9996\u9009\u6280\u672f\u65b9\u6cd5\uff09\u662f\u8fc4\u4eca\u4e3a\u6b62\u6700\u96c4\u5fc3\u52c3\u52c3\u7684\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u662f\u7b2c\u4e00\u4e2a\u3002\u9664\u4e86\u7531\u4f7f\u7528 Principle \u8bbe\u8ba1\u7684\u897f\u73ed\u7259\u5efa\u7b51\u516c\u53f8 Grupo Cobra \u62e5\u6709\u7684 Aberdeen \u9644\u8fd1\u7684 50 \u9635\u5217\u5916\uff0cEquinor \u8fd8\u5f00\u59cb\u5efa\u8bbe\u4e00\u4e2a 11 \u4e2a\u5355\u5143\u300188 \u4e2a\u9879\u76ee\uff0c\u8be5\u9879\u76ee\u5c06\u4e3a\u4e00\u7ec4\u5317\u6d77\u94bb\u4e95\u5e73\u53f0\u63d0\u4f9b\u52a8\u529b\u3002\u6cd5\u56fd\u77f3\u6cb9\u548c\u5929\u7136\u6c14\u516c\u53f8\u9053\u8fbe\u5c14\u548c\u9ea6\u683c\u7406\u94f6\u884c\u7684\u9879\u76ee\u5f00\u53d1\u90e8\u95e8\u7eff\u8272\u6295\u8d44\u96c6\u56e2\u6253\u7b97\u5230 2023 \u5e74\u5f00\u59cb\u5728\u97e9\u56fd\u6d77\u5cb8\u9644\u8fd1\u7684\u4e00\u4e2a 500 \u6d6e\u5f0f\u98ce\u7535\u9879\u76ee\u7684\u5de5\u4f5c\u2014\u2014\u5c3d\u7ba1\u4ed6\u4eec\u4e5f\u5df2\u7ecf\u5c1a\u672a\u5177\u4f53\u8bf4\u660e\u4ed6\u4eec\u8ba1\u5212\u4f7f\u7528\u54ea\u79cd\u6280\u672f\u3002\u66f4\u5927\u7684\u519c\u573a\u663e\u7136\u9700\u8981\u66f4\u591a\u7684\u6da1\u8f6e\u673a\u3002\u4f46\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u4e5f\u9700\u8981\u66f4\u5927\u7684\u6da1\u8f6e\u673a\u3002\u6da1\u8f6e\u673a\u8d8a\u5927\uff0c\u7ef4\u62a4\u8d77\u6765\u5c31\u8d8a\u56f0\u96be\u3002\u98ce\u529b\u6da1\u8f6e\u673a\u6709\u65f6\u9700\u8981\u66f4\u6362\u5927\u90e8\u4ef6\uff0c\u5982\u53f6\u7247\u6216\u53d1\u7535\u673a\u3002\u8fd9\u5728\u571f\u5730\u4e0a\u662f\u5177\u6709\u6311\u6218\u6027\u7684\u3002\u4f46\u662f\u5728\u9646\u5730\u4e0a\uff0c\u8d77\u91cd\u673a\u53ef\u4ee5\u9760\u7740\u5730\u9762\u652f\u6491\u81ea\u5df1\u3002\u5728\u6d77\u4e0a\uff0c\u201c\u81ea\u5347\u5f0f\u201d\u8239\u53ea\u901a\u8fc7\u5c06\u94a2\u817f\u653e\u5230\u6d77\u5e8a\u4e0a\u6765\u5b9e\u73b0\u7c7b\u4f3c\u7684\u7a33\u5b9a\u6027\u3002\u7136\u800c\uff0c\u6d6e\u52a8\u6da1\u8f6e\u673a\u5c06\u5728\u81ea\u5347\u5f0f\u8239\u53ea\u65e0\u6cd5\u5de5\u4f5c\u7684\u592a\u6df1\u6c34\u57df\u4e2d\u8fd0\u884c\uff0c\u56e0\u6b64\u4efb\u4f55\u4e3a\u5b83\u670d\u52a1\u7684\u8239\u53ea\u672c\u8eab\u90fd\u5fc5\u987b\u4fdd\u6301\u6f02\u6d6e\u3002 Equinor \u7684\u9879\u76ee\u603b\u76d1 Olav-Bernt Haga \u8bf4\uff1a\u201c\u4f60\u6709\u4e24\u4e2a\u6b63\u5728\u79fb\u52a8\u7684\u7ed3\u6784\uff0c\u4f60\u8981\u628a\u8f7d\u8377\u4ece\u8fd9\u4e9b\u79fb\u52a8\u7ed3\u6784\u4e2d\u7684\u4e00\u4e2a\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u3002\u201d\u8fd9\u5728\u6280\u672f\u4e0a\u8981\u6c42\u5f88\u9ad8\uff0c\u56e0\u6b64\u5f88\u96be\u5ec9\u4ef7\u5730\u505a\u5230\u3002\u4e00\u4e2a\u540d\u4e3a\u6d6e\u98ce\u8054\u5408\u4ea7\u4e1a\u9879\u76ee ( ) \u7684\u5c0f\u7ec4\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u7d27\u8feb\u7684\u95ee\u9898\uff0c\u8be5\u5c0f\u7ec4\u7684\u5de5\u4f5c\u662f\u6807\u8bb0\u96c6\u4f53\u5229\u76ca\u7684\u95ee\u9898\u3002\u8be5\u5c0f\u7ec4\u7531 17 \u540d\u9879\u76ee\u5f00\u53d1\u5546\u548c\u4f4d\u4e8e\u82f1\u56fd\u7684\u975e\u76c8\u5229\u54a8\u8be2\u673a\u6784 Carbon Trust \u7ec4\u6210\u3002\u53bb\u5e74\u53d1\u8868\u7684\u4e00\u9879\u5206\u6790\u79f0\uff0c\u98ce\u529b\u6da1\u8f6e\u673a\u5df2\u63a5\u8fd1\u6d77\u4e0a\u5904\u7406\u80fd\u529b\u7684\u7269\u7406\u6781\u9650\u3002\u77f3\u6cb9\u5de5\u4e1a\u6709\u8bb8\u591a\u5728\u6df1\u6c34\u4e2d\u5de5\u4f5c\u7684\u91cd\u578b\u8d77\u91cd\u8239\u3002\u4f46\u662f\u8fd9\u4e9b\u662f\u9488\u5bf9\u91cd\u91cf\u800c\u4e0d\u662f\u9ad8\u5ea6\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5e76\u4e14\u79df\u7528\u6210\u672c\u5f88\u9ad8\u3002\u6d6e\u52a8\u98ce\u7535\u884c\u4e1a\u9700\u8981\u65b0\u7684\u7b54\u6848\uff0c\u5426\u5219\u5b83\u53ef\u80fd\u4f1a\u53d1\u73b0\u81ea\u5df1\u5728\u5b57\u9762\u4e0a\u548c\u9690\u55bb\u4e0a\u90fd\u53d7\u5230\u963b\u788d\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u524d\u666f\u6b63\u5728\u53d1\u5c55\u3002\u4ed6\u4eec\u5bf9\u8fd9\u4e2a\u95ee\u9898\u91c7\u53d6\u4e86\u4e24\u79cd\u5e7f\u6cdb\u7684\u65b9\u6cd5\uff1a\u4e3e\u91cd\u548c\u6500\u722c\u3002\u524d\u8005\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u8377\u5170\u516c\u53f8 Heavy Lift\uff0c\u8be5\u516c\u53f8\u5df2\u5f00\u59cb\u5efa\u9020 010\uff0c\u8fd9\u662f\u4e00\u8258\u4e13\u95e8\u7528\u4e8e\u6d77\u4e0a\u98ce\u7535\u7ef4\u62a4\u7684\u8239\u53ea\u3002\u4efb\u4f55\u5728\u6d6e\u52a8\u98ce\u529b\u6da1\u8f6e\u673a\u4e0a\u5de5\u4f5c\u7684\u4eba\u90fd\u5fc5\u987b\u4e0e\u6ce2\u6d6a\u4f5c\u6597\u4e89\u3002\u8868\u9762\u7684\u8f7b\u5fae\u81a8\u80c0\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5371\u9669\u7684\u626b\u63a0\u3002 -010 \u5c06\u901a\u8fc7\u4f7f\u7528\u8fd0\u52a8\u8865\u507f\u8f6f\u4ef6\u5c06\u8d77\u91cd\u673a\u540a\u94a9\u7684\u4f4d\u7f6e\u7a33\u5b9a\u5728 5 \u5398\u7c73\u4ee5\u5185\u6765\u6d88\u9664\u8fd9\u79cd\u6447\u6446\u7684\u5f71\u54cd\u3002\u5373\u4f7f\u8be5\u94a9\u5b50\u9ad8\u4e8e\u6d77\u5e73\u9762 150 \u7c73\uff0c\u8fd9\u4e5f\u6709\u6548\u3002\u4e0d\u8fc7\uff0c\u6b64\u7c7b\u8239\u53ea\u7684\u8d77\u4ef7\u7ea6\u4e3a 2.5 \u4ebf\u7f8e\u5143\u3002\u4ec5\u6210\u672c\u5c31\u610f\u5473\u7740\u8be5\u884c\u4e1a\u5c06\u4e0d\u5f97\u4e0d\u5171\u4eab\u5c11\u91cf\u8239\u8236\uff0c\u4ece\u800c\u6210\u4e3a\u589e\u957f\u7684\u74f6\u9888\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6709\u4e9b\u4eba\u5efa\u8bae\u505c\u6b62\u63a5\u8fd1\u6da1\u8f6e\u673a\uff0c\u800c\u662f\u5f00\u59cb\u6500\u722c\u5b83\u4eec\u3002\n\u6500\u722c\u8d77\u91cd\u673a\u5728\u5b83\u4eec\u6b63\u5728\u5efa\u9020\u7684\u7269\u4f53\u4e0a\u5feb\u901f\u722c\u5347\uff0c\u901a\u5e38\u7528\u4e8e\u5728\u9646\u5730\u4e0a\u67b6\u8d77\u6469\u5929\u5927\u697c\u3002\u5b83\u4eec\u5728\u6d77\u4e0a\u672a\u7ecf\u8bc1\u5b9e\uff0c\u4f46\u6709\u51e0\u4e2a\u56e2\u4f53\u6b63\u5728\u5f00\u53d1\u53ef\u80fd\u9002\u5408\u6d6e\u52a8\u98ce\u529b\u53d1\u7535\u7684\u7248\u672c\u3002\u4f8b\u5982\uff0c\u4f4d\u4e8e\u82f1\u56fd\u5251\u6865\u7684 Wind \u516c\u53f8\u5efa\u8bae\u5728\u6da1\u8f6e\u673a\u5854\u67b6\u7684\u4fa7\u9762\u5b89\u88c5\u8f68\u9053\u3002\u8fd9\u5c06\u8ba9\u4e00\u8258\u8239\u9760\u8fb9\u505c\u9760\uff0c\u5728\u8f68\u9053\u4e0a\u653e\u7f6e\u4e00\u8f86\u7ef4\u4fee\u8f66\uff0c\u4ece\u800c\u5728\u5854\u4e0a\u4e0a\u4e0b\u79fb\u52a8\u5927\u90e8\u4ef6\u3002\u5176\u4ed6\u4eba\u5efa\u8bae\u4ece\u6da1\u8f6e\u673a\u672c\u8eab\u63d0\u5347\u3002\u5927\u591a\u6570\u6da1\u8f6e\u673a\u90fd\u6709\u4e00\u4e2a\u7528\u4e8e\u8f7b\u578b\u7269\u54c1\u7684\u5c0f\u578b\u8d77\u91cd\u673a\u3002\u4e39\u9ea6\u516c\u53f8 Liftra \u4f7f\u7528\u5b83\u6765\u63d0\u5347\u8d8a\u6765\u8d8a\u5927\u7684\u8d77\u91cd\u673a\u3002\u6700\u5927\u7684\u5c3a\u5bf8\u9002\u5408\u6807\u51c6\u7684 40 \u82f1\u5c3a\uff0812.2 \u7c73\uff09\u96c6\u88c5\u7bb1\u3002\u8be5\u516c\u53f8\u58f0\u79f0\uff0c\u4e00\u65e6\u7528\u87ba\u6813\u56fa\u5b9a\uff0c\u8be5\u88c5\u7f6e\u4e0e\u4f20\u7edf\u7684\u5916\u90e8\u8d77\u91cd\u673a\u4e00\u6837\u5f3a\u5927\u3002\u6216\u8005\uff0c\u6b63\u5982\u8377\u5170\u627f\u5305\u5546 Conbit \u6240\u5efa\u8bae\u7684\u90a3\u6837\uff0c\u5c06\u4e00\u4e9b\u91d1\u5c5e\u90e8\u4ef6\u548c\u7535\u7f06\u62c9\u5230\u5854\u9876\uff0c\u5c31\u53ef\u4ee5\u5728\u6da1\u8f6e\u673a\u7684\u9876\u90e8\u4e34\u65f6\u5efa\u9020\u91cd\u578b\u8d77\u91cd\u673a\u3002\u8fd9\u4e9b\u6280\u672f\u90fd\u6ca1\u6709\u8d85\u51fa\u539f\u578b\u9636\u6bb5\u3002\u4f46\u5b83\u4eec\u53ef\u80fd\u5bf9\u660e\u5929\u7684\u5927\u578b\u6da1\u8f6e\u673a\u5f88\u6709\u4ef7\u503c\uff0c\u65e0\u8bba\u5b83\u4eec\u662f\u56fa\u5b9a\u7684\u8fd8\u662f\u6d6e\u52a8\u7684\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u6d6e\u52a8\u6da1\u8f6e\u673a\uff0c\u53ef\u80fd\u5b58\u5728\u66ff\u4ee3\u65b9\u6848\u3002\u4e0e\u56fa\u5b9a\u5f0f\u6da1\u8f6e\u673a\u4e0d\u540c\uff0c\u5b83\u4eec\u53ef\u4ee5\u62d4\u4e0b\u63d2\u5934\u5e76\u62d6\u5230\u5cb8\u4e0a\u3002\u7531\u6700\u8fd1\u53d1\u8d77\u7684\u5206\u6790\u8868\u660e\uff0c\u5728\u4e2a\u522b\u60c5\u51b5\u4e0b\u6700\u597d\u7684\u53ef\u80fd\u53d6\u51b3\u4e8e\u4f4d\u7f6e\u3002\u5982\u679c\u6d6e\u52a8\u6da1\u8f6e\u673a\u9760\u8fd1\u5cb8\u8fb9\uff0c\u6700\u5bb9\u6613\u5c06\u5176\u62d6\u56de\u6e2f\u53e3\u8fdb\u884c\u7ef4\u4fee\u3002\u5982\u679c\u8ddd\u79bb\u5f88\u8fdc\uff0c\u50cf -010 \u6216\u6500\u722c\u8d77\u91cd\u673a\u8fd9\u6837\u7684\u5947\u7279\u5c0f\u5de5\u5177\u53ef\u80fd\u4f1a\u66f4\u597d\u5730\u5de5\u4f5c\u3002\u6240\u6709\u8fd9\u4e00\u5207\u7684\u7ed3\u679c\u662f\uff0c\u5f88\u5feb\u5c31\u6709\u53ef\u80fd\u4ece\u98ce\u4e2d\u63d0\u53d6\u66f4\u591a\u7535\u529b\uff0c\u800c\u65e0\u9700\u7528\u6da1\u8f6e\u673a\u8986\u76d6\u5c71\u5761\uff0c\u5e76\u5728\u8fd9\u6837\u505a\u7684\u540c\u65f6\u83b7\u5229\u3002\u8fd9\u8db3\u4ee5\u8ba9\u4efb\u4f55\u4eba\u7684\u98ce\u5e06\u98ce\u5e06\u3002 \u25a0 \u8fd9\u7bc7\u6587\u7ae0\u51fa\u73b0\u5728\u5370\u5237\u7248\u7684\u79d1\u6280\u7248\u5757\uff0c\u6807\u9898\u4e3a\u201c\u6f02\u6d6e\u7684\u98ce\u529b\u6da1\u8f6e\u673a\u53ef\u4ee5\u4e0a\u5347\u5230\u5f88\u9ad8\u7684\u9ad8\u5ea6\u201d", "note_en": "O  Royal Dutch Shell, an oil and gas company, and Scottish Power, a subsidiary of Iberdrola, a Spanish electricity utility, made an announcement. They were, they said, jointly submitting proposals to the British authorities to build, off the coast of Scotland, the first large-scale set of floating wind farms in the world. At the moment, the largest floating farm is a six-turbine, 50  array which is due for completion next month in the North Sea, 15km from Aberdeen. The consortium, by contrast, has said it is thinking in gigawatts ( ).\n  Offshore wind farms with foundations in the seabed are now part of the energy mix in several places. In the past four years their capacity has nearly doubled, from 19  to 35 , and amortised costs have dropped by a third, from $120 per  -hour to $80. They are, however, of limited deployability, being restricted to waters shallower than about 60 metres.\n Unfortunately, 80% of the world\u2019s offshore wind blows over places deeper than that. Making these accessible, says the International Energy Agency, an offshoot of the  , would unlock enough power to meet the world\u2019s probable electrical needs in 2040 11 times over. The trick is to build turbines which, though moored to the seabed, will float. If Shell and Scottish Power can pull this trick off, it will be a big step towards tapping that potential.\n  A decade ago, floating-turbine technology was a fringe affair. The difficulty was not the turbines themselves, but making them float. The oil and gas industry had, since the 1960s, developed a range of floating foundations that could keep titanic objects like drilling rigs stable at sea. But transferring that know-how to wind power was hardly straightforward. First, unlike an oil rig, a wind turbine is lanky and top-heavy, making it prone to tip over. Second, turbines generate powerful gyroscopic forces that would further destabilise a floating machine. It was hard, in those days, to see how these problems could be solved cheaply enough to compete with turbines bolted to the ocean floor\u2014much less with conventional power sources.\n  No longer. A decade of development has yielded two things: proof that turbines can float and clarity as to how these floating units might look. Engineers achieved this through patient prototyping. They took designs previously tested in university wave pools and scaled them up into small demonstration units off the coasts of Norway, Portugal and Japan.\n Each unit, bedecked with sensors, gathered data on variables such as pitch, wind speed and wave height. These data were then folded into designs, for bigger, more stable units. The results, visible today in newer models off the Norwegian and Portuguese coasts, can safely float turbines four times as powerful as their predecessors. Engineers therefore consider the flotation problem solved. \u201cThe turbines function nicely. They don\u2019t flip. It can be done,\u201d said Alla Weinstein, a pioneer of the field who is now pursuing permits for a floating wind farm off the coast of California.\n Four approaches to flotation have emerged (see diagram). The commonest is a semisubmersible. Principle Power, an American company, is one firm pursuing this. Semisubmersibles come in various designs. Principle\u2019s uses a buoyant steel triangle that has water-filled cans at two of the vertices. These ballast tanks balance the weight of a turbine at the third vertex, with water pumped around inside the triangle to trim its stability.\n  A second tack, pursued by, among others, Equinor, a Norwegian firm, is to stick a turbine on a bottle called a spar that is filled with heavy ballast, to make it float upright. Equinor does this by placing the turbine on top of an 80-metre-high concrete tube containing water, rocks or some other cheap and heavy material.\n Two other approaches are less developed, but may prove useful. Glosten, an American engineering firm that has formed a partnership with General Electric, uses a tension-leg platform. This is a starfish-shaped steel structure with a turbine at its hub. The starfish is submerged and yoked to the ocean floor with cables. This arrangement, similar to that for the ultra-deep-water Magnolia rig, drilling in the Gulf of Mexico, holds the turbine upright. And   Ideol, a Norwegian firm, erects the turbine on a flat concrete or steel barge that resembles an empty picture frame. When the turbine sways, water sloshes within the frame, dampening its movement. The company claims its prototype, off the coast of Japan, has already survived three typhoons.\n  Project developers have seen enough to convince them. Though the Shell-Scottish Power consortium\u2019s proposals (which make no mention of a preferred technological approach) are the most ambitious so far, they are not the first. Besides the 50  array off Aberdeen, which is owned by Grupo Cobra, a Spanish construction company that uses Principle\u2019s design, Equinor has begun construction on an 11-unit, 88  project which will power a group of North Sea drilling platforms. Total, a French oil and gas company, and Green Investment Group, a project-development arm of Macquarie, a bank, intend to start work on a 500  floating wind project off the coast of South Korea by 2023\u2014though they, too, have not yet specified which technology they plan to use.\n  Bigger farms obviously require more turbines. But they also, ideally, require bigger turbines. And the bigger a turbine is, the harder it is to maintain. Wind turbines occasionally need big parts, like blades or generators, replaced. That is challenging on  terra firma. But on land, a crane can brace itself against the earth. At sea, \u201cjackup\u201d vessels achieve similar stability by dropping steel legs to the seabed. Floating turbines will, however, operate in waters too deep for jackup vessels to work, so any vessel servicing one will have, itself, to remain floating. \u201cYou have two structures that are moving, and you\u2019re going to shift the load from one of these moving structures to another one,\u201d said Olav-Bernt Haga, a project director at Equinor. This will be technically demanding and thus hard to do cheaply.\n A group called the Floating Wind Joint Industry Project ( ), the job of which is to flag up matters of collective interest, deems this an urgent problem. This group is made up of 17 project developers and the Carbon Trust, a not-for-profit consultancy based in Britain. In an analysis published last year the   said that wind turbines are nearing the physical limits of what can be handled at sea. The oil industry has a number of heavy-lift ships that work in deep water. But these are optimised for weight, not height, and are expensive to hire. The floating-wind industry needs new answers, or it could find itself stunted, both literally and metaphorically.\n Fortunately, prospects are in development. They take two broad approaches to the problem: lifting and climbing. An example of the former is   Heavy Lift, a Dutch company, which has started work on the  010, a vessel dedicated to offshore-wind maintenance. Anyone working on floating wind turbines must contend with waves. A gentle swell at the surface can cause a treacherous sweep up high. The  -010 will iron out the effect of this swaying by using motion-compensation software that steadies the position of the crane\u2019s hook to within 5cm. This works even when that hook is 150 metres above sea level.\n The price tags for such vessels, though, start at around $250m. The cost alone implies that the industry would have to share a small number of ships, presenting a bottleneck to growth. That is why some propose to stop reaching up to turbines, and to start climbing them, instead.\n  Climbing cranes, which scurry up the very object they are building, are often used to raise skyscrapers on land. They are unproven at sea, but several groups are developing versions that might suit floating wind power.  Wind, a firm in Cambridge, England, for example, suggests putting tracks on the sides of turbine towers. This would let a ship pull up alongside, place a maintenance car on the tracks, and thus move large parts up and down the tower.\n Others propose to lift from the turbine itself. Most turbines have a small crane for light items. Liftra, a Danish company, uses this to raise progressively larger cranes. The biggest fits in a standard 40-foot (12.2 metre) shipping container. Once bolted on, the company claims, the arrangement is as powerful as a conventional external crane. Alternatively, as Conbit, a Dutch contractor, proposes, pulling a few metal parts and cables to the top of the tower would allow a heavy-duty crane to be fashioned temporarily on the turbine\u2019s crown.\n  None of these technologies is beyond the prototype stage. But they may prove valuable for the mega-turbines of tomorrow, be they fixed or floating. For floating turbines, however, an alternative may exist. Unlike fixed turbines, they can be unplugged and dragged to shore. Recent analysis sponsored by the   suggests that what is best in individual circumstances may depend on location. If a floating turbine is near the shore, it may be easiest to tow it back to port for repair. If far away, exotic gadgets like the  -010 or climbing cranes may work better.\n The upshot of all this is that it may soon be possible to extract a lot more electrical power from the wind, to do so without covering hillsides with turbines, and to make a profit while doing it. And that is enough to put wind in anyone\u2019s sails.  \u25a0\n This article appeared in the Science &amp; technology section of the print edition under the headline &#34;Floating wind turbines could rise to great heights&#34;", "posttime": "2021-07-24 07:24:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u98ce\u529b,wind,\u6da1\u8f6e\u673a", "title": "\u6f02\u6d6e\u7684\u98ce\u529b\u6da1\u8f6e\u673a\u53ef\u4ee5\u5347\u5230\u5f88\u9ad8\u7684\u9ad8\u5ea6", "title_en": "Floating wind turbines could rise to great heights", "transed": 1, "url": "https://www.economist.com/science-and-technology/2021/07/21/floating-wind-turbines-could-rise-to-great-heights", "via": "", "real_tags": ["\u98ce\u529b", "wind", "\u6da1\u8f6e\u673a"]}, {"category": "", "categoryclass": "", "imagename": "0fac0bc25c0f104833e7ba74a1b6d2c6.jpg", "infoid": 1069363, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5f88\u9ad8\u5174\u770b\u5230\u5bf9 Framework Laptop \u7684\u7b2c\u4e00\u6279\u65b0\u95fb\u8bc4\u8bba\u4e0a\u7ebf\uff0c\u5e76\u4e14\u7b2c\u4e00\u6279\u8ba2\u5355\u4eca\u5929\u5c31\u9001\u5230\u60a8\u5bb6\u95e8\u53e3\uff01\u5c31\u5728\u6628\u5929\uff0cFTC \u4e00\u81f4\u6295\u7968\u5f3a\u5236\u6267\u884c\u7ef4\u4fee\u6743\uff0c\u6211\u4eec\u63d0\u4f9b\u51fa\u8272\u3001\u9ad8\u6027\u80fd\u3001\u6613\u4e8e\u7ef4\u4fee\u7684\u4ea7\u54c1\u7684\u65f6\u673a\u518d\u597d\u4e0d\u8fc7\u4e86\u3002\u6709\u5927\u91cf\u4ee4\u4eba\u60ca\u53f9\u7684\u6750\u6599\u53ef\u4f9b\u9605\u8bfb\u548c\u89c2\u770b\uff0c\u672a\u6765\u51e0\u5468\u8fd8\u4f1a\u6709\u66f4\u591a\u5185\u5bb9\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u6700\u559c\u6b22\u7684\u4e00\u4e9b\u540d\u8a00\u662f\uff1a\u201cFramework \u7684\u6a21\u5757\u5316\u7b14\u8bb0\u672c\u7535\u8111\u662f\u7ef4\u4fee\u6743\u8fd0\u52a8\u7684\u5178\u578b\u4ee3\u8868\uff0c\u662f\u6211\u957f\u671f\u4ee5\u6765\u89c1\u8fc7\u7684\u6700\u667a\u80fd\u7684\u8bbe\u8ba1\u4e4b\u4e00\u3002\u201d \u201cFramework Laptop \u4e0d\u4ec5\u4ec5\u662f [a] \u503c\u5f97\u7684\u6a21\u5757\u5316\u5b9e\u9a8c\uff0c\u5b83\u8fd8\u662f\u4e00\u6b3e\u51fa\u8272\u7684\u7b14\u8bb0\u672c\u7535\u8111\u3002\u201d\u8bc4\u8bba\u5bb6\u559c\u6b22\u7ef4\u4fee\u548c\u5347\u7ea7\u7684\u81ea\u7531\u3001\u6269\u5c55\u5361\u7cfb\u7edf\u3001CPU \u6027\u80fd\u3001\u952e\u76d8\u611f\u89c9\u3001\u7f51\u7edc\u6444\u50cf\u5934\u8d28\u91cf\u7b49\u3002\u5f53\u7136\uff0c\u5728 Framework \u5185\u90e8\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u5173\u952e\u53cd\u9988\uff0c\u8fd9\u4e9b\u53cd\u9988\u6307\u51fa\u6211\u4eec\u5728\u54ea\u91cc\u505a\u5f97\u66f4\u597d\u3002\u6211\u4eec\u8ba4\u771f\u5bf9\u5f85\u6bcf\u4e00\u70b9\u53cd\u9988\uff0c\u5e76\u5e0c\u671b\u5728\u60a8\u5f00\u59cb\u4f7f\u7528 Framework Laptop \u65f6\u83b7\u5f97\u60a8\u7684\u60f3\u6cd5\u3002\u8fd9\u8ba9\u6211\u4eec\u77e5\u9053\u672a\u6765\u6539\u8fdb\u7684\u91cd\u70b9\u5728\u54ea\u91cc\uff0c\u65e0\u8bba\u662f\u56fa\u4ef6\u66f4\u65b0\u3001\u6a21\u5757\u8fd8\u662f\u4e0b\u4e00\u4e2a\u4ea7\u54c1\u3002\u6211\u4eec\u4ea7\u54c1\u7406\u5ff5\u7684\u4e00\u4e2a\u7f8e\u5999\u4e4b\u5904\u5728\u4e8e\uff0c\u6539\u8fdb\u53ef\u4ee5\u7528\u4e8e\u6bcf\u4e2a\u73b0\u6709\u7528\u6237\u90fd\u53ef\u4ee5\u9009\u62e9\u548c\u66f4\u6362\u7684\u66f4\u6362\u90e8\u4ef6\u548c\u5347\u7ea7\uff0c\u800c\u4e0d\u662f\u9700\u8981\u7b49\u5f85\u5e76\u4e3a\u5168\u65b0\u4ea7\u54c1\u4ed8\u8d39\u3002\u6211\u4eec\u611f\u8c22\u5df2\u7ecf\u8ba2\u8d2d\u7684\u6bcf\u4e00\u4e2a\u4eba\uff0c\u6211\u4eec\u671f\u5f85\u7740\u5c06\u60a8\u7684 Framework Laptop \u9001\u5230\u60a8\u624b\u4e2d\u3002 7 \u6708\u4ea4\u8d27\u7684\u7b2c 1 \u6279\u9884\u8ba2\u5355\u6bcf\u5929\u7ee7\u7eed\u4ece\u6211\u4eec\u7684\u4ed3\u5e93\u53d1\u8d27\u3002\u6211\u4eec\u5c06\u5728\u4e0d\u4e45\u4e4b\u540e\u5f00\u59cb\u7b2c 2 \u6279\u53d1\u8d27\uff0c\u4ee5\u4fbf 8 \u6708\u4ea4\u8d27\u3002\u6211\u4eec\u76ee\u524d\u6709\u5c11\u91cf Batch 2 Framework Laptop \u548c Framework Laptop DIY Edition \u5355\u5143\u53ef\u4f9b\u51fa\u552e\uff0c\u4eca\u5929\u53ea\u9700\u652f\u4ed8 100 \u7f8e\u5143\u7684\u5168\u989d\u62bc\u91d1\u5373\u53ef\u9000\u8fd8\u3002\u5982\u679c\u60a8\u73b0\u5728\u9884\u8ba2\uff0c\u4f60\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u5c06\u80fd\u591f\u5728 3-4 \u5468\u5185\u6536\u5230\u60a8\u7684\u8ba2\u5355\u3002\u5c3d\u7ba1\u6211\u4eec\u4e3a Framework Laptop \u611f\u5230\u81ea\u8c6a\uff08\u800c\u4e14\u6211\u4eec\u975e\u5e38\u81ea\u8c6a\uff01\uff09\uff0c\u4f46\u6211\u4eec\u5728\u8fc7\u53bb 18 \u4e2a\u6708\u4e2d\u521b\u9020\u7684\u6700\u4f1f\u5927\u7684\u4e1c\u897f\u662f\u6784\u5efa\u5b83\u7684\u56e2\u961f\u3002\u9700\u8981\u4e00\u652f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u56e2\u961f\u6765\u6784\u5efa\u5982\u6b64\u590d\u6742\u7684\u4f18\u79c0\u4ea7\u54c1\u5e76\u6309\u65f6\u4ea4\u4ed8\u3002\u6211\u4eec\u6b63\u5728\u5404\u4e2a\u65b9\u9762\u8fdb\u884c\u62db\u8058\uff0c\u4ee5\u7ee7\u7eed\u5f00\u53d1 Framework Laptop \u751f\u6001\u7cfb\u7edf\u5e76\u542f\u52a8\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u7c7b\u522b\u3002\u5982\u679c\u60a8\u8ba4\u8bc6\u4efb\u4f55\u6709\u5174\u8da3\u5e2e\u52a9\u6211\u4eec\u6253\u9020\u5bf9\u4eba\u7c7b\u548c\u5730\u7403\u66f4\u6709\u76ca\u7684\u4ea7\u54c1\uff0c\u8bf7\u544a\u8bc9\u6211\u4eec\u3002", "note_en": "We\u2019re excited to see the first press reviews go live for the Framework Laptop and the first orders land on your doorsteps today! With the FTC unanimously voting to enforce the Right to Repair just yesterday, our timing couldn\u2019t be better for delivering a great, high performance, easy to repair product. There is a ton of amazing material to read and watch, with more coming in the next weeks. Some of our favorite quotes so far are:\n  \u201cA poster child for the right-to-repair movement, Framework\u2019s modular laptop is one of the smartest designs I\u2019ve seen in a long time.\u201d\n      \u201cThe Framework Laptop is more than just [a] worthwhile experiment in modularity, it\u2019s also a great laptop.\u201d\n   Reviewers loved the freedom to repair and upgrade, the Expansion Card system, CPU performance, keyboard feel, webcam quality, and more.\u00a0 Of course, inside of Framework, we gravitate towards the critical feedback that points us to where to do better.\u00a0 We take every bit of feedback seriously, and we want your thoughts as you start using your Framework Laptop.\u00a0 This lets us know where to focus for future improvements, whether that is for firmware updates, modules, or next products.\u00a0 A wonderful thing about our product philosophy is that improvements can go into replacement parts and upgrades that every existing user can pick up and swap to, rather than needing to wait around and pay for an entirely new product.\n  We\u2019re grateful to each of you who have ordered already, and we\u2019re looking forward to getting your Framework Laptop to you.\u00a0 Batch 1 pre-orders for July delivery continue to ship out from our warehouse each day.\u00a0 We\u2019ll start Batch 2 shipments for August delivery soon after.\u00a0 We have a small number of Batch 2  Framework Laptop and  Framework Laptop DIY Edition units currently available for sale, with just a fully refundable $100 deposit due today.\u00a0 If you pre-order now, some of you will be able to receive your order within 3-4 weeks.\n  As proud as we are of the Framework Laptop (and we\u2019re extremely proud!), the greatest thing we have created over the last 18 months is the team that built it.\u00a0 It takes an incredible team to build an excellent product this complex and deliver it on time.\u00a0 We\u2019re  hiring on all fronts to continue developing the Framework Laptop ecosystem and initiate our next categories.\u00a0 Let us know if you know anyone who may be interested in helping us build products that are better for people and the planet.", "posttime": "2021-07-24 07:23:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u8111,framework,laptop", "title": "Framework \u7b14\u8bb0\u672c\u7535\u8111\u73b0\u5df2\u53d1\u8d27", "title_en": "The Framework Laptop is now shipping", "transed": 1, "url": "https://frame.work/blog/the-framework-laptop-is-now-shipping-and-press-reviews", "via": "", "real_tags": ["\u7535\u8111", "framework", "laptop"]}, {"category": "", "categoryclass": "", "imagename": "1e1f17f50cabe0a47f75c6c9b60f0450.jpg", "infoid": 1069362, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u7684\u5065\u8eab\u5e94\u7528\u7a0b\u5e8f\u4e3a\u6211\u63d0\u4f9b\u6bcf\u5929\u534a\u5c0f\u65f6\u7684\u953b\u70bc\u7a0b\u5e8f\u3002\u4e0d\u8fc7\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u6211\u5c06\u5b83\u4eec\u7f29\u77ed\u5230\u5f53\u5929\u7684\u4e00\u534a\u3002\u6216\u8005\u964d\u4f4e\u4ed6\u4eec\u7684\u96be\u5ea6\u3002\u6216\u4e24\u8005\u3002\u6211\u53ea\u662f\u6ca1\u6709\u5f97\u5230\u5b83\u3002\u4e3a\u4ec0\u4e48\u8be5\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u6211\u4f5c\u5f0a\uff1f\u7b2c\u4e00\u6b21\u770b\u5230\u7684\u65f6\u5019\uff0c\u8fd8\u4ee5\u4e3a\u662f\u7ed9\u627e\u501f\u53e3\u7684\u4eba\u7528\u7684\u3002\u52a8\u673a\u4e0d\u5f3a\u7684\u4eba\u3002\u8c01\u6ca1\u6709\u4e00\u5929\u6709 30 \u5206\u949f\u4e13\u5fc3\u953b\u70bc\uff1f\u6211\u5f88\u81ea\u8c6a\u6ca1\u6709\u6210\u4e3a\u4ed6\u4eec\u4e2d\u7684\u4e00\u5458\uff0c\u6211\u62cd\u4e86\u62cd\u81ea\u5df1\u7684\u80cc\uff0c\u56e0\u4e3a\u5b83\u7ed9\u4e86\u6211\u5e94\u5f97\u7684\u65f6\u95f4\u3002\u7136\u540e\uff0c\u51e0\u5468\u540e\uff0c\u6211\u6ed1\u5012\u4e86\u3002\u6211\u5f00\u59cb\u5bfb\u627e\u7ed3\u675f\u6211\u7684\u8ba1\u5212\u7684\u65b9\u6cd5\uff0c\u4f46\u4e00\u65e0\u6240\u83b7\u3002 1 \u6211\u5c1d\u8bd5\u5220\u9664\u4e00\u5468\u7684\u953b\u70bc\uff0c\u4f46\u5e94\u7528\u7a0b\u5e8f\u4e0d\u5141\u8bb8\u6211\u8fd9\u6837\u505a\u3002\u6211\u4e0d\u80fd\u8ba9\u81ea\u5df1\u4e0d\u505a\u89c4\u5b9a\u7684\u953b\u70bc\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u4efb\u4f55\u501f\u53e3\uff0c\u5982\u679c\u5927\u58f0\u8bf4\u51fa\u6765\u5c31\u4f1a\u88ab\u8ba4\u4e3a\u662f\u6709\u6548\u7684\u3002\u56e0\u6b64\uff0c\u7ecf\u8fc7\u4e00\u756a\u62b1\u6028\u540e\uff0c\u6211\u70b9\u51fb\u4e86\u6309\u94ae\uff0c\u5e76\u7f29\u77ed\u4e86\u5b83\u3002\u953b\u70bc\u5f88\u597d\u3002\u5b83\u5927\u7ea6\u6709 12 \u6216 13 \u5206\u949f\u957f\u3002\u8fd9\u5e76\u4e0d\u50cf\u6211\u60f3\u8c61\u7684\u90a3\u4e48\u5bb9\u6613\uff0c\u4f46\u5b83\u4ecd\u7136\u6bd4\u5e73\u65f6\u5bb9\u6613\u3002\u5b83\u6ca1\u6709\u8ba9\u6211\u50cf\u5e73\u65f6\u90a3\u6837\u51fa\u6c57\u3002\u7136\u800c\uff0c\u6211\u786e\u5b9e\u5c55\u5f00\u4e86\u6211\u7684\u57ab\u5b50\uff0c\u6211\u786e\u5b9e\u7a7f\u4e0a\u4e86\u5b83\uff0c\u800c\u4e14\u6211\u51fa\u6c57\u4e86\u3002\u5f53\u6211\u4eec\u770b\u5230\u5efa\u8bae\u8ba9\u6211\u4eec\u59cb\u7ec8\u5982\u4e00\u5730\u505a\u4e00\u4e9b\u5c0f\u4e8b\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u55e4\u4e4b\u4ee5\u9f3b\u3002\u6bd5\u7adf\uff0c\u6211\u4eec\u5bf9\u6211\u4eec\u6240\u505a\u7684\u4e8b\u60c5\u662f\u8ba4\u771f\u7684\uff1b\u6211\u4eec\u60f3\u82b1\u4e00\u4e2a\u5c0f\u65f6\uff0c\u800c\u4e0d\u662f\u4e94\u5206\u949f\u3002\u6211\u4eec\u7edd\u5bf9\u4e0d\u4f1a\u8df3\u8fc7\u4e00\u5929\u3002\u76f4\u5230\u4f60\u610f\u8bc6\u5230\u8fd9\u4e0d\u662f\u4f60\u5728\u8bf4\u8bdd\uff0c\u800c\u662f\u4f60\u7684\u9ad8\u5ea6\u79ef\u6781\u6027\u3002\u4e00\u4e2a\u6708\u540e\uff0c\u4f60\u5c06\u5ea6\u8fc7\u871c\u6708\u671f\u3002\n\u5f53\u7136\uff0c\u6211\u4eec\u6709\u52a8\u529b\u3002\u4f46\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u559c\u6b22\u9009\u62e9\u5c0f\u627f\u8bfa\u5462\uff1f\u6bd5\u7adf\uff0c\u5373\u4f7f\u662f\u6709\u4e0a\u8fdb\u5fc3\u7684\u4eba\u4e5f\u53ef\u4ee5\u9009\u62e9\u6bcf\u5929\u4e94\u5206\u949f\u7684\u4e60\u60ef\u3002\u4e3b\u8981\u662f\u56e0\u4e3a\u6211\u4eec\u6b3a\u9a97\u4e86\u81ea\u5df1\u3002\u6211\u4eec\u8ba4\u4e3a\u9009\u62e9\u662f\u505a\u5927\u4e8b\u8fd8\u662f\u505a\u5c0f\u4e8b\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u5b83\u4ecb\u4e8e\u505a\u4e00\u4e9b\u5c0f\u4e8b\u6216\u4ec0\u4e48\u90fd\u4e0d\u505a\u4e4b\u95f4\u3002\u505a\u4e00\u4e9b\u5c0f\u7684\u4e8b\u60c5\u4e0d\u4ec5\u662f\u51fa\u4e8e\u663e\u800c\u6613\u89c1\u7684\u539f\u56e0\uff08\u4f8b\u5982\uff0c\u4f60\u505a\u4e86\u4e00\u4e9b\u4e8b\u60c5\u800c\u4e0d\u662f\u4ec0\u4e48\u90fd\u4e0d\u505a\uff09\u7684\u6700\u4f73\u9009\u62e9\uff0c\u800c\u4e14\u8fd8\u56e0\u4e3a\u5b83\u5177\u6709\u6df1\u523b\u7684\u957f\u671f\u5229\u76ca\u3002\u6bcf\u5929\u505a\u4e00\u4e2a\u52a8\u4f5c\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u4e0d\u7ba1\u591a\u5c0f\uff0c\u90fd\u4f1a\u6210\u4e3a\u4e60\u60ef\u3002\u4e00\u65e6\u67d0\u4e8b\u6210\u4e3a\u4e60\u60ef\uff0c\u505c\u6b62\u6bd4\u7ee7\u7eed\u66f4\u96be\u3002\u826f\u597d\u7684\u4e60\u60ef\u53ef\u4ee5\u771f\u6b63\u6539\u53d8\u4f60\u7684\u751f\u6d3b\u65b9\u5f0f\u3002\u4f46\u662f\u5173\u4e8e\u8fd9\u4e2a\u8bdd\u9898\u5df2\u7ecf\u8bf4\u4e86\u5f88\u591a\u3002\u5c31\u5728\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u6211\u5076\u7136\u53d1\u73b0\u4e86\u8fd9\u7bc7\u6587\u7ae0\u3002 James Clear \u7684\u7545\u9500\u4e66\u5b8c\u5168\u662f\u5173\u4e8e\u5c0f\u578b\u65e5\u5e38\u4eea\u5f0f\u7684\u6982\u5ff5\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u517b\u6210\u826f\u597d\u7684\u4e60\u60ef\u3002\u4f46\u662f\uff0c\u4e60\u60ef\u4e0e\u7f29\u77ed\u6211\u7684\u953b\u70bc\u65f6\u95f4\u6709\u4f55\u5173\u7cfb\uff1f\u5f53\u4f60\u521a\u521a\u5f00\u59cb\u5e76\u60f3\u8981\u517b\u6210\u4e00\u4e2a\u65b0\u4e60\u60ef\u65f6\uff0c\u8df3\u7ef3\u662f\u81f4\u547d\u7684\u3002\u5728\u517b\u6210\u4e60\u60ef\u7684\u6700\u521d\u51e0\u5468\u5185\u8df3\u8fc7\u4e00\u5929\u53ef\u4ee5\u91cd\u7f6e\u60a8\u8fc4\u4eca\u4e3a\u6b62\u53d6\u5f97\u7684\u6240\u6709\u7cbe\u795e\u8fdb\u6b65\u3002\u901a\u8fc7\u51cf\u5c11\u52aa\u529b\uff0815 \u5206\u949f\u800c\u4e0d\u662f 30 \u5206\u949f\uff0c\u8f7b\u677e\u800c\u4e0d\u662f\u56f0\u96be\uff09\uff0c\u5373\u4f7f\u5728\u6700\u7cdf\u7cd5\u7684\u65e5\u5b50\u91cc\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u575a\u6301\u8fd9\u4e2a\u4e60\u60ef\u3002\u517b\u6210\u65b0\u4e60\u60ef\u65f6\uff0c\u4e0d\u8981\u8bbe\u5b9a\u5728\u6700\u597d\u7684\u65e5\u5b50\u91cc\u8981\u575a\u6301\u7684\u76ee\u6807\u3002\u8bbe\u5b9a\u76ee\u6807\uff0c\u60a8\u5c06\u80fd\u591f\u5728\u6700\u7cdf\u7cd5\u7684\u60c5\u51b5\u4e0b\u575a\u6301\u4e0b\u53bb\u3002\u5728\u7f8e\u597d\u7684\u4e00\u5929\u517b\u6210\u4e00\u4e2a\u4e60\u60ef\u5f88\u5bb9\u6613\uff0c\u5f53\u4f60\u4e0d\u89c9\u5f97\u5b83\u4e0d\u5229\u4e8e\u4f60\u8eab\u4f53\u7684\u6bcf\u4e00\u6839\u7ea4\u7ef4\u65f6\u5c31\u8fd9\u6837\u505a\u3002\u4ece\u8df3\u8fc7\u7684\u4e00\u5929\u4e2d\u6062\u590d\u8fc7\u6765\u9700\u8981\u96be\u4ee5\u7f6e\u4fe1\u7684\u7cbe\u795e\u6bc5\u529b\u3002\u7136\u800c\u5947\u602a\u7684\u662f\uff0c\u4ece\u4f60\u6240\u505a\u7684\u6bd4\u6700\u4f4e\u9650\u5ea6\u591a\u4e00\u70b9\u7684\u4e00\u5929\u4e2d\u6062\u590d\u8fc7\u6765\u8981\u5bb9\u6613\u51e0\u4e2a\u6570\u91cf\u7ea7\u3002\u591a\u5e74\u524d\uff0cReddit \u4e0a\u7684\u4e00\u6761\u9540\u91d1\u8bc4\u8bba\u4f18\u96c5\u5730\u8bf4\uff1a\u4e0d\u518d\u662f\u96f6\u65e5\u3002\u96f6\u65e5\u662f\u4f60\u5bf9\u81ea\u5df1\u7684\u4e60\u60ef\u5b8c\u5168\u6ca1\u6709\u505a\u4efb\u4f55\u4e8b\u60c5\u7684\u4e00\u5929\uff0c\u751a\u81f3\u4e00\u70b9\u4e5f\u4e0d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u60f3\u517b\u6210\u5199\u65e5\u8bb0\u7684\u4e60\u60ef\uff0c\u96f6\u65e5\u5c31\u662f\u4f60\u751a\u81f3\u4e0d\u62ff\u8d77\u7b14\u7684\u65f6\u5019\u3002\u5199\u4e00\u4e2a\u5b57\u4f1a\u8ba9\u4f60\u5904\u4e8e\u7eff\u8272\u72b6\u6001\uff0c\u9632\u6b62\u4f60\u6709\u4e00\u4e2a\u96f6\u65e5\u3002\u5728\u8003\u8651\u4e60\u60ef\u65f6\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u60a8\u4f1a\u9677\u5165\u5176\u4e2d\u3002\u5f53\u7136\uff0c\u5f53\u4f60\u6709\u52a8\u529b\u65f6\uff0c\u4e8b\u60c5\u73b0\u5728\u770b\u8d77\u6765\u5f88\u5bb9\u6613\uff0c\u4f46\u4e3a\u4e86\u8ba9\u81ea\u5df1\u4e3a\u672a\u6765\u505a\u597d\u51c6\u5907\uff0c\u66f4\u559c\u6b22\u4e00\u81f4\u6027\u800c\u4e0d\u662f\u6301\u7eed\u65f6\u95f4\u3002\u4e0d\u8981\u88ab\u4f60\u8ba4\u4e3a\u7684\u672a\u6765\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u6240\u6b3a\u9a97\uff1b\u957f\u671f\u610f\u5473\u7740\u4f60\u5fc5\u987b\u8d85\u8d8a\u5730\u5e73\u7ebf\uff0c\u524d\u5f80\u672a\u77e5\u7684\u571f\u5730\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u957f\u671f\u575a\u6301\u4e00\u4e2a\u4e60\u60ef\uff0c\u65e0\u8bba\u5982\u4f55\u4f60\u6700\u7ec8\u4f1a\u505a\u5f97\u66f4\u591a\u3002\n\u4f60\u7684\u76ee\u6807\u662f\u4e00\u5929\u5199\u4e00\u4e2a\u5b57\uff0c\u4e00\u5929\u505a\u4e00\u4e2a\u4fef\u5367\u6491\uff0c\u4e00\u5929\u8bfb\u4e00\u9875\u3002\u5269\u4e0b\u7684\u4f1a\u6765\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8981\u60f3\u63d0\u524d\u7ed3\u675f\u5f53\u524d\u7684\u8ba1\u5212\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662f\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u8ba1\u5212\u3002\u6211\u559c\u6b22\u8fd9\u4e2a\u8bbe\u8ba1\u51b3\u5b9a\u3002\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u662f Freeletics\u3002", "note_en": "My fitness app gives me daily half-hour workout routines. The app, though, allows me to shorten them, on the day, to last half that. Or to lower their difficulty. Or both.\n I just didn\u2019t get it. Why would the app allow me to cheat?\n  When I saw that for the first time, I thought it was for people looking for excuses. People with low motivation. Who doesn\u2019t have 30 minutes in a day to dedicate to exercise? I was proud not to be one of them, and I patted myself on the back for giving fitness the time it deserved.\n Then, a couple of weeks later, I slipped. I started looking for ways to end my plan, finding none.    1 I tried deleting the week\u2019s workouts, but the app wouldn\u2019t allow me to do that. I couldn\u2019t bring myself to just  not do the prescribed workouts, if anything because I had no excuse which would be considered valid if said out loud. So after some grumbling, I clicked on the button, and shortened it.\n The workout was fine. It was around 12 or 13 minutes long. It wasn\u2019t as easy as I thought, but it was still easier than usual. It didn\u2019t make me sweat as much as it normally would.\n Yet I did unroll my mat, I did get on it, and I did sweat.\n When we see advice telling us to do something small consistently, we usually scoff. After all, we are serious about what we do; we want to dedicate an hour, not five minutes to it. And we will definitely never skip a day. That\u2019s until you realize that it\u2019s not you talking, it\u2019s the highly motivated version of you. A month from now, you\u2019ll be past the honeymoon phase.\n Sure, we\u2019re motivated. But why don\u2019t we like picking the small commitment? After all even a motivated person could pick a five-minute daily habit. Mainly, it\u2019s because we deceive ourselves. We think the choice is between doing something big or something small. But really, it\u2019s between doing something small or nothing at all.\n Doing something small is not only the best choice for the obvious reason (e.g. you did  something rather than nothing,) but also because it has deep long term benefits. After you perform an action every day for a period of time, no matter how small, it\u2019ll become a habit. And once something is a habit, it becomes harder to stop than to continue.\n Good habits can truly change the way you live. But plenty has been said on the topic. Just as I was writing this, I stumbled upon  this article.  James Clear\u2019s best-selling book is entirely about the concept of small, daily rituals. In short, gain good habits.\n But how are habits related to shortening my workouts? When you\u2019re just starting out and want to gain a new habit, skipping is lethal. Skipping a day during the first few weeks of your habit can reset all the mental progress you\u2019ve made thus far. By lowering the effort (15 minutes instead of 30, easy instead of hard) we make it easier for us to stick with the habit even during our worst days.\n When setting a new habit, don\u2019t set goals you\u2019ll stick to during your best days. Set goals you\u2019ll be able to stick to during your worst ones. Performing a habit during a good day is easy, doing it when you\u2019re not feeling like it goes against every fiber of your body. Bouncing back from a skipped day takes incredible mental fortitude. Yet strangely, bouncing back from a day in which you\u2019ve done a little more than the bare minimum is orders of magnitude easier.\n Years ago, a well-gilded Reddit comment put it elegantly:  no more zero days. A zero day is a day in which you did absolutely nothing towards your habits, not even a tiny bit. If you want to get into the habit of writing a daily journal for example, a zero day is is when you don\u2019t even pick the pen up. Writing a single word would put you in the green, preventing you from having a zero day.\n When thinking about habits, you\u2019re in it for the long run. Sure, things look easy now while you\u2019re motivated, but to set yourself up for the future, prefer consistency over mere duration. Don\u2019t be deceived by what you think the future will look like; long term means that you\u2019ll have to travel beyond the horizon, to unknown lands. Plus, if you stick to a habit for the long run, you\u2019ll end up doing more anyway.\n Your goal is to write one word a day, to do one pushup a day, to read one page a day. The rest will come.\n    Turns out, to end the current plan before its due time, the only way is to start a new one. I love this design decision. The app is  Freeletics by the way.", "posttime": "2021-07-24 07:23:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4ef7\u503c,\u4e60\u60ef", "title": "\u505a\u4e00\u70b9\u7684\u4ef7\u503c", "title_en": "The value of doing a little", "transed": 1, "url": "https://trms.me/the-value-of-doing-a-little/", "via": "", "real_tags": ["\u4ef7\u503c", "\u4e60\u60ef"]}, {"category": "", "categoryclass": "", "imagename": "fa8e1970c1559e22ccdfba516d81ef6e.png", "infoid": 1069361, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5168\u7403 Go \u793e\u533a\u4ece\u4e00\u5f00\u59cb\u5c31\u63a5\u53d7\u4e86 GitHub\u2014\u2014\u4f5c\u4e3a\u4ee3\u7801\u534f\u4f5c\u7684\u5730\u65b9\u548c\u53d1\u5e03\u5305\u7684\u5730\u65b9\u2014\u2014\u5bfc\u81f4 Go \u6210\u4e3a\u4eca\u5929 GitHub \u4e0a\u6392\u540d\u524d 15 \u7684\u7f16\u7a0b\u8bed\u8a00\u4e4b\u4e00\u3002\u6211\u4eec\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03 GitHub \u7684\u4f9b\u5e94\u94fe\u5b89\u5168\u529f\u80fd\u73b0\u5df2\u53ef\u7528\u4e8e Go \u6a21\u5757\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e Go \u793e\u533a\u53d1\u73b0\u3001\u62a5\u544a\u548c\u9884\u9632\u5b89\u5168\u6f0f\u6d1e\u3002 Go \u7684\u521b\u5efa\u90e8\u5206\u662f\u4e3a\u4e86\u89e3\u51b3\u7ba1\u7406\u5927\u578b\u8f6f\u4ef6\u4e2d\u7684\u4f9d\u8d56\u9879\u7684\u95ee\u9898\u3002 GitHub \u662f\u5f00\u6e90 Go \u6a21\u5757\u6700\u53d7\u6b22\u8fce\u7684\u4e3b\u673a\u3002\u4eca\u5929\u5ba3\u5e03\u7684\u529f\u80fd\u4e0d\u4ec5\u4f1a\u5e2e\u52a9 GitHub \u7528\u6237\uff0c\u8fd8\u4f1a\u5e2e\u52a9\u4efb\u4f55\u4f9d\u8d56 GitHub \u6258\u7ba1\u6a21\u5757\u7684\u4eba\u3002\u6211\u4eec\u5f88\u9ad8\u5174 GitHub \u6b63\u5728\u6295\u8d44\u4e8e\u6709\u76ca\u4e8e\u6574\u4e2a Go \u751f\u6001\u7cfb\u7edf\u7684\u6539\u8fdb\uff0c\u6211\u4eec\u671f\u5f85\u672a\u6765\u4e0e\u4ed6\u4eec\u8fdb\u884c\u66f4\u591a\u5408\u4f5c\u3002 \u2013 Steve Francia\uff0c\u4ea7\u54c1\u8d1f\u8d23\u4eba\uff1aGo Language @ Google Go \u6a21\u5757\u4e8e 2019 \u5e74\u63a8\u51fa\uff0c\u4f7f\u4f9d\u8d56\u7ba1\u7406\u66f4\u5bb9\u6613\uff0c\u7248\u672c\u4fe1\u606f\u66f4\u660e\u786e\uff0c\u6839\u636e Go \u5f00\u53d1\u4eba\u5458\u8c03\u67e5 2020 \u5df2\u83b7\u200b\u200b\u5f97\u8fd1\u4e4e\u666e\u904d\u7684\u91c7\u7528\u3002\u4e0b\u9762\uff0c\u6211\u5c06\u5411\u60a8\u4ecb\u7ecd GitHub \u7684\u6bcf\u4e2a\u4f9b\u5e94\u94fe\u5b89\u5168\u529f\u80fd\u5982\u4f55\u4e0e Go \u6a21\u5757\u914d\u5408\u4f7f\u7528\uff0c\u4ee5\u63d0\u9ad8 Go \u793e\u533a\u7684\u5b89\u5168\u6027\u3002 GitHub \u7684\u54a8\u8be2\u6570\u636e\u5e93\u662f\u4e00\u4e2a\u5f00\u653e\u7684\u5b89\u5168\u54a8\u8be2\u6570\u636e\u5e93\uff0c\u4e13\u6ce8\u4e8e\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u9ad8\u8d28\u91cf\u3001\u53ef\u64cd\u4f5c\u7684\u6f0f\u6d1e\u4fe1\u606f\u3002\u5b83\u5728\u77e5\u8bc6\u5171\u4eab\u7f72\u540d 4.0 \u4e0b\u83b7\u5f97\u8bb8\u53ef\uff0c\u56e0\u6b64\u6570\u636e\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u53d1\u5e03\u4e86 150 \u591a\u4e2a\u73b0\u6709\u7684 Go \u5efa\u8bae\uff0c\u5e76\u4e14\u968f\u7740\u6211\u4eec\u7ba1\u7406\u73b0\u6709\u6f0f\u6d1e\u548c\u5bf9\u65b0\u53d1\u73b0\u7684\u6f0f\u6d1e\u8fdb\u884c\u5206\u7c7b\uff0c\u8fd9\u4e2a\u6570\u5b57\u6bcf\u5929\u90fd\u5728\u589e\u957f\u3002\u5982\u679c\u60a8\u662f Go \u6a21\u5757\u7ef4\u62a4\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b89\u5168\u516c\u544a\u6765\u534f\u8c03\u62ab\u9732\u6f0f\u6d1e\u3002\u60a8\u53ef\u4ee5\u4e0e\u6f0f\u6d1e\u62a5\u544a\u8005\uff08\u4f8b\u5982\u5b89\u5168\u7814\u7a76\u4eba\u5458\uff09\u5408\u4f5c\uff0c\u5728\u516c\u5f00\u5ba3\u5e03\u6f0f\u6d1e\u4e4b\u524d\u79c1\u4e0b\u8ba8\u8bba\u548c\u4fee\u590d\u6f0f\u6d1e\u3002\u5b89\u5168\u516c\u544a\u8fd8\u4f7f\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u4e3a\u60a8\u7684\u516c\u544a\u8bf7\u6c42\u5e38\u89c1\u6f0f\u6d1e\u548c\u66b4\u9732 (CVE) \u6807\u8bc6\u53f7\uff0c\u5e76\u5c06\u5176\u53d1\u5e03\u5230\u56fd\u5bb6\u6f0f\u6d1e\u6570\u636e\u5e93 (NVD)\u3002 GitHub \u7684\u4f9d\u8d56\u5173\u7cfb\u56fe\u5206\u6790\u5b58\u50a8\u5e93\u7684 go.mod \u6587\u4ef6\u4ee5\u4e86\u89e3\u5b58\u50a8\u5e93\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u9664\u4e86\u5b89\u5168\u5efa\u8bae\u4e4b\u5916\uff0c\u4f9d\u8d56\u5173\u7cfb\u56fe\u8fd8\u63d0\u4f9b\u4e86\u63d0\u9192\u5f00\u53d1\u4eba\u5458\u6ce8\u610f\u6613\u53d7\u653b\u51fb\u7684\u4f9d\u8d56\u9879\u6240\u9700\u7684\u4fe1\u606f\u3002\u8981\u67e5\u770b\u5b58\u50a8\u5e93\u68c0\u6d4b\u5230\u7684\u4f9d\u8d56\u9879\uff0c\u8bf7\u9009\u62e9\u5b58\u50a8\u5e93\u7684 Insights \u9009\u9879\u5361\uff0c\u7136\u540e\u4ece\u5de6\u4fa7\u8fb9\u680f\u4e2d\u9009\u62e9 Dependency graph\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e3a\u516c\u5171\u5b58\u50a8\u5e93\u542f\u7528\u4f9d\u8d56\u5173\u7cfb\u56fe\uff0c\u4f46\u60a8\u5fc5\u987b\u4e3a\u79c1\u6709\u5b58\u50a8\u5e93\u542f\u7528\u5b83\u3002\u5982\u679c\u60a8\u7684\u516c\u5171\u5b58\u50a8\u5e93\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe\u5c1a\u672a\u586b\u5145\uff0c\u5f88\u5feb\u5c31\u4f1a\u586b\u5145\u3002\u5982\u679c\u60a8\u8feb\u4e0d\u53ca\u5f85\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u66f4\u6539\u63a8\u9001\u5230 go.mod \u6587\u4ef6\u6765\u89e6\u53d1\u66f4\u65b0\u3002\u4e3a\u4e86\u5e2e\u52a9\u9632\u6b62\u5f15\u5165\u65b0\u7684\u6f0f\u6d1e\uff0c\u60a8\u53ef\u4ee5\u5728\u5ba1\u67e5\u62c9\u53d6\u8bf7\u6c42\u65f6\u4f7f\u7528\u4f9d\u8d56\u9879\u5ba1\u67e5\u6765\u67e5\u770b\u5bf9 go.mod \u6587\u4ef6\u6240\u505a\u66f4\u6539\u7684\u5f71\u54cd\u3002\u5f53\u60a8\u5728\u4f7f\u7528\u7684 Go \u6a21\u5757\u4e2d\u53d1\u73b0\u65b0\u6f0f\u6d1e\u65f6\uff0c Dependabot \u8b66\u62a5\u4f1a\u901a\u77e5\u60a8\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6211\u4eec\u65b0\u7684\u901a\u77e5\u914d\u7f6e\u6765\u5fae\u8c03\u60a8\u6536\u5230\u7684\u901a\u77e5\u3002\u6709\u4ec0\u4e48\u6bd4\u5bf9\u8106\u5f31\u7684\u4f9d\u8d56\u9879\u53d1\u51fa\u8b66\u62a5\u66f4\u597d\u7684\u5462\uff1f\u83b7\u53d6\u62c9\u53d6\u8bf7\u6c42\uff0c\u81ea\u52a8\u5c06\u6613\u53d7\u653b\u51fb\u7684 Go \u6a21\u5757\u5347\u7ea7\u5230\u6ca1\u6709\u6f0f\u6d1e\u7684\u7248\u672c\uff01\u8fd9\u6b63\u662f Dependabot \u5b89\u5168\u66f4\u65b0\u6240\u505a\u7684\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u81ea\u52a8\u751f\u6210\u62c9\u53d6\u8bf7\u6c42\u4ee5\u66f4\u65b0\u6613\u53d7\u653b\u51fb\u7684\u4f9d\u8d56\u9879\u7684\u5b58\u50a8\u5e93\u6bd4\u90a3\u4e9b\u6ca1\u6709\u7684\u5b58\u50a8\u5e93\u4fee\u8865\u8f6f\u4ef6\u7684\u901f\u5ea6\u5feb 40%\u3002\u7acb\u5373\u5f00\u59cb\u4fdd\u62a4\u60a8\u7684 Go \u5b58\u50a8\u5e93\uff0c\u6216\u4e86\u89e3\u6709\u5173 GitHub \u7684\u6bcf\u4e2a\u4f9b\u5e94\u94fe\u5b89\u5168\u529f\u80fd\u7684\u66f4\u591a\u4fe1\u606f\uff1a", "note_en": "The global Go community embraced GitHub from the beginning\u2014both as a place to collaborate on code and a place to publish packages\u2014leading to Go becoming one of the top 15 programming languages on GitHub today. We\u2019re excited to announce that GitHub\u2019s supply chain security features are now available for Go modules, which will help the Go community discover, report, and prevent security vulnerabilities.\n Go was created, in part, to address the problem of managing dependencies in large-scale software. GitHub is the most popular host for open-source Go modules. The features announced today will help not just GitHub users but anyone who depends on GitHub-hosted modules. We are thrilled that GitHub is investing in improvements that benefit the entire Go ecosystem, and we look forward to more collaborations with them in the future.   \u2013 Steve Francia, Product Lead: Go Language @ Google\n Go modules were introduced in 2019 to make dependency management easier and version information more explicit, and according to the  Go Developer Survey 2020 have gained near-universal adoption. Below, I\u2019ll walk you through how each of GitHub\u2019s supply chain security features works with Go modules to improve security for the Go community.\n  GitHub\u2019s Advisory Database is an open database of security advisories focused on high quality, actionable vulnerability information for developers. It\u2019s licensed under  Creative Commons Attribution 4.0, so the data can be used anywhere.\n So far, we\u2019ve published  over 150 existing Go advisories, and this number is growing every day as we curate existing vulnerabilities and triage newly discovered ones.\n  If you\u2019re a Go module maintainer, you can use Security Advisories for coordinated disclosure of vulnerabilities. You can collaborate with vulnerability reporters, such as security researchers, to privately discuss and fix vulnerabilities before announcing them publicly. Security Advisories also make it easy for you to request a  Common Vulnerabilities and Exposures (CVE) identification number for your advisories and to publish them to the  National Vulnerability Database (NVD).\n   GitHub\u2019s dependency graph analyzes a repository\u2019s  go.mod files to understand the repository\u2019s dependencies. Along with security advisories, the dependency graph provides the information needed to alert developers to vulnerable dependencies. To view a repository\u2019s detected dependencies, select the repository\u2019s  Insights tab, then select  Dependency graph from the sidebar on the left.\n  The dependency graph is enabled by default for public repositories, but you must enable it  for private repositories. If the dependency graph for your public repository hasn\u2019t already been populated, it will be soon. If you can\u2019t wait you can trigger the update by pushing a change to your  go.mod file.\n To help prevent new vulnerabilities from being introduced, you can use  dependency review to see the impact of changes to your  go.mod files when reviewing pull requests.\n   Dependabot alerts notify you when new vulnerabilities are discovered in Go modules you\u2019re already using. You can use our  new notification configuration to fine-tune which notifications you receive.\n   What\u2019s better than being alerted to a vulnerable dependency? Getting a pull request that automatically upgrades your vulnerable Go modules to a version without the vulnerability! That\u2019s exactly what Dependabot security updates do.\n We\u2019ve found that repositories that automatically generate pull requests to update vulnerable dependencies patch their software  40% faster than those who don\u2019t.\n   Get started today by  securing your Go repository, or learn more about each of GitHub\u2019s supply chain security features:", "posttime": "2021-07-24 07:23:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e26\u6765,supply,\u6f0f\u6d1e", "title": "\u4e3a Go \u793e\u533a\u5e26\u6765\u4f9b\u5e94\u94fe\u5b89\u5168\u529f\u80fd", "title_en": "Bringing supply chain security features to the Go community", "transed": 1, "url": "https://github.blog/2021-07-22-github-supply-chain-security-features-go-community/", "via": "", "real_tags": ["\u5e26\u6765", "supply", "\u6f0f\u6d1e"]}, {"category": "", "categoryclass": "", "imagename": "e5465b3c0eac91cbdd27f5cfbb5a6a50.jpg", "infoid": 1069360, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\uff08\u53c8\u4e00\u4e2a\uff09\u53cd\u5bf9\u5728\u60a8\u53d7\u4eba\u5c0a\u656c\u7684\u7f51\u7ad9\u4e0a\u4f7f\u7528\u7b2c\u4e09\u65b9\u5d4c\u5165\u7684\u8bba\u70b9\uff1a\u8272\u60c5\u516c\u53f8 5 Star HD Porn \u8d2d\u4e70\u4e86\u89c6\u9891\u6258\u7ba1\u7f51\u7ad9 Vidme \u7684\u8fc7\u671f\u57df\u540d\uff0c\u8be5\u7f51\u7ad9\u4e8e 2017 \u5e74\u5012\u95ed\u3002\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u5e26\u6709 Vidme \u7684\u7f51\u7ad9\u73b0\u5728\u90fd\u53ef\u4ee5\u5d4c\u5165\u5bf9\u4ed6\u4eec\u6709\u8272\u60c5\u5185\u5bb9\u3002\u6839\u636e\u6700\u5148\u62a5\u9053\u8fd9\u4e2a\u6545\u4e8b\u7684\u4e3b\u677f\uff0c\u5e26\u6709\u610f\u5916\u8272\u60c5\u5d4c\u5165\u7684\u7f51\u7ad9\u5217\u8868\u5305\u62ec\u7ebd\u7ea6\u6742\u5fd7\u3001\u534e\u76db\u987f\u90ae\u62a5\u3001\u8d6b\u82ac\u987f\u90ae\u62a5\u7b49\u3002\u662f\u7684\uff0c\u6211\u4eec\u5728 The Verge \u4e0a\u53d1\u73b0\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684\u5d4c\u5165\uff0c\u7136\u540e\u5c06\u5176\u7981\u7528\u3002\u8fd9\u662f\u94fe\u63a5\u8150\u70c2\u7684\u4e00\u4e2a\u975e\u5e38\u6781\u7aef\u7684\u4f8b\u5b50\uff0c\u5f53\u5728\u7ebf\u5185\u5bb9\u6216\u56fe\u50cf\u88ab\u5220\u9664\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u635f\u574f\u65f6\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u6b64\u94fe\u63a5\u4e0d\u4f1a\u6307\u5411\u5176\u539f\u59cb\u76ee\u6807\u3002\u5728\u524d\u603b\u7edf\u7279\u6717\u666e\u5728 1 \u6708\u4efd\u5728\u56fd\u4f1a\u5927\u53a6\u717d\u52a8\u9a9a\u4e71\u540e\u88ab\u7981\u6b62\u4f7f\u7528 Twitter \u4e4b\u540e\uff0c\u6211\u4eec\u770b\u5230\u4e86\u53e6\u4e00\u4e2a\u666e\u904d\u7684\u4f8b\u5b50\u3002\u8fd9\u4f4d\u524d\u603b\u7edf\u591a\u5e74\u6765\u5728 Twitter \u4e0a\u53d1\u51fa\u7684\u6570\u5343\u6761\u63a8\u6587\u90fd\u88ab\u5220\u9664\u4e86\uff0c\u8fd9\u4e9b\u63a8\u6587\u7684\u4efb\u4f55\u5d4c\u5165\u73b0\u5728\u90fd\u663e\u793a\u4e3a\u7a7a\u7684\u7070\u8272\u6846\u3002\u524d\u603b\u7edf\u7684\u4e00\u4e9b\u63a8\u6587\u5fc5\u987b\u6839\u636e\u300a\u603b\u7edf\u8bb0\u5f55\u6cd5\u300b\uff08\u6bd4 Twitter \u65e9\u4e86 40 \u5e74\uff09\u4fdd\u7559\u4e0b\u6765\uff0c\u5e76\u4e14\u4ed6\u7684\u5927\u90e8\u5206\u63a8\u6587\u90fd\u6709\u4e00\u4e2a\u7531\u72ec\u7acb\u5f00\u53d1\u8005\u6784\u5efa\u7684\u53ef\u5206\u7c7b\u5b58\u6863\uff0c\u56e0\u6b64\u4ed6\u7684\u63a8\u6587\u5e76\u672a\u5b8c\u5168\u4ece\u4e92\u8054\u7f51\u3002\u5927\u591a\u6570\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u90fd\u652f\u6301\u5d4c\u5165\u5176\u5185\u5bb9\uff1b Twitter \u5728 2012 \u5e74\u542f\u7528\u4e86\u5d4c\u5165\u529f\u80fd\uff0cFacebook\u3001Snapchat\u3001YouTube \u548c Instagram \u4e5f\u90fd\u5141\u8bb8\u67d0\u4e9b\u7248\u672c\u7684\u5d4c\u5165\u529f\u80fd\u3002 Reddit \u5728\u5176\u5d4c\u5165\u7684\u5185\u5bb9\u4e0a\u6709\u4e00\u4e2a\u9009\u9879\uff0c\u5982\u679c\u5e16\u5b50\u88ab\u7f16\u8f91\uff0c\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4eec\u6e05\u7a7a\u3002\u5982\u679c\u4f7f\u7528\u5f97\u5f53\uff0c\u5d4c\u5165\u7684\u5185\u5bb9\u53ef\u4ee5\u5e2e\u52a9\u5728\u7ebf\u8bf4\u660e\u535a\u5ba2\u6587\u7ae0\u6216\u65b0\u95fb\u9879\u76ee\uff0c\u5e76\u63d0\u4f9b\u53ef\u4fe1\u5ea6\u3002\u4f46\u662f\uff0c\u5f53\u94fe\u63a5\u53d8\u574f\u65f6\uff0c\u5c31\u50cf\u5728 Vidme \u6848\u4f8b\u4e2d\u663e\u7136\u90a3\u6837\uff0c\u5904\u7406\u6570\u4ee5\u5343\u8ba1\u7684\u5d4c\u5165\u5185\u5bb9\u53ef\u80fd\u4f1a\u8ba9\u4eba\u5934\u75bc\u4e0d\u5df2\u3002", "note_en": "Here\u2019s (yet another) argument against using third-party embeds on your respectable website: Porn company 5 Star HD Porn bought the expired domain for video hosting site Vidme, which went  out of business in 2017. This means that any websites with Vidme embeds now have porn on them.  According to  Motherboard, which reported the story first, the list of websites with unexpected porn embeds includes  New York Magazine, the  Washington Post,  HuffPost, and others. And yes, we discovered one such embed on  The Verge and have since disabled it.\n   It\u2019s a very extreme example of link rot, which is what happens when online content or images are deleted or otherwise broken, so the links don\u2019t point back to their original targets. We saw another widespread example of this after former  President Trump was banned from Twitter in January after inciting a riot at the Capitol. The thousands of tweets the former president sent out over the years he was on  Twitter were wiped out, and any embeds of the tweets now display as empty gray boxes. Some of the former president\u2019s tweets must be preserved under the Presidential Records Act (which predates Twitter by more than four decades), and there\u2019s a  sortable archive of most of his tweets built by an independent developer, so his tweets haven\u2019t totally disappeared from the internet.\n Most social media platforms have enabled embeds of their content; Twitter activated embeds in 2012, and Facebook, Snapchat, YouTube, and Instagram all allow some version of embeds as well. Reddit has an  option on its embedded content which allows users to have them blanked out if the post is edited.\n Used correctly, embedded content can help illustrate a blog post or news item online, and provide a layer of credibility. But when links go bad, as they apparently have in the Vidme case, it can be a serious headache to deal with thousands of embeds that don\u2019t go where they\u2019re supposed to.", "posttime": "2021-07-24 07:23:14", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57df\u540d,\u5185\u5bb9,embeds,\u5d4c\u5165", "title": "\u8d2d\u4e70\u57df\u540d\u540e\uff0c\u65e7\u7684 Vidme \u5d4c\u5165\u5185\u5bb9\u53d8\u6210\u8272\u60c5\u5185\u5bb9", "title_en": "Old Vidme embeds turn into porn after domain purchase", "transed": 1, "url": "https://www.theverge.com/2021/7/22/22589403/porn-site-bought-expired-video-hosting-site-old-embeds", "via": "", "real_tags": ["\u57df\u540d", "\u5185\u5bb9", "embeds", "\u5d4c\u5165"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069359, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6458\u8981\uff1a\u5982\u679c\u6211\u4eec\u6709\u4e00\u79cd\u542f\u53d1\u5f0f\u65b9\u6cd5\u53ef\u4ee5\u5ec9\u4ef7\u5730\u731c\u6d4b\u67d0\u4e2a\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5206\u652f\u9884\u6d4b\u5668\u5728\u7d27\u5bc6\u5faa\u73af\u4e2d\u5220\u9664\u6570\u636e\u4f9d\u8d56\u6027\u3002\u8fd9\u5141\u8bb8 CPU \u5e76\u884c\u8fd0\u884c\u66f4\u591a\u6307\u4ee4\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002\u5982\u679c\u8fd9\u4e2a\u89e3\u91ca\u5bf9\u60a8\u6ca1\u6709\u591a\u5927\u610f\u4e49\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\u4ee5\u4e86\u89e3\u4e00\u4e9b\u4f7f\u60a8\u7684 CPU \u53d8\u5feb\u7684\u9b54\u6cd5\uff01 Per Vognsen \u7684 twitter \u63d0\u8981\u5145\u6ee1\u4e86\u7b80\u6d01\u7684\u4f4e\u7ea7\u597d\u5947\u5fc3\uff0c\u901a\u5e38\u5229\u7528 CPU \u529f\u80fd\u6765\u83b7\u5f97\u4e00\u4e9b\u6027\u80fd\u4f18\u52bf\u3002\u6700\u8fd1\u4ed6\u5728\u63a8\u7279\u4e0a\u63d0\u5230\u4e86\u4e00\u4e2a\u6211\u4ece\u672a\u542c\u8bf4\u8fc7\u7684\u6280\u5de7\u2014\u2014\u4ef7\u503c\u6295\u673a\u3002 1 \u8be5\u6280\u5de7\u5229\u7528\u5206\u652f\u9884\u6d4b\u5668\u6765\u731c\u6d4b\u503c\uff0c\u4ece\u800c\u5b9e\u73b0\u66f4\u591a\u6307\u4ee4\u5e76\u884c\u6027\uff0c\u4ece\u800c\u6d88\u9664 L1 \u7f13\u5b58\u4e0a\u7684\u74f6\u9888\u3002\u8bf7\u6ce8\u610f\uff0c\u74f6\u9888\u4e0d\u662f\u7531\u4e8e L1 \u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u800c\u662f\u7531\u4e8e L1 \u7f13\u5b58\u547d\u4e2d\u5f15\u5165\u4e86\u4e0d\u9700\u8981\u7684\u6570\u636e\u4f9d\u8d56\u6027\u3002\u53cd\u8fc7\u6765\uff0cPer \u5f15\u7528\u4e86 Paul Khuong \u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u90e8\u7f72\u6b64\u6280\u5de7\u7684\u771f\u5b9e\u793a\u4f8b\u3002\u53cd\u8fc7\u6765\uff0c\u4fdd\u7f57\u63d0\u5230\u4e86\u65c1\u9053\u653b\u51fb\u3002 \u21a9\ufe0e \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u89e3\u91ca\u4e86\u6240\u6d89\u53ca\u7684\u673a\u5236\uff0c\u5305\u62ec\u5206\u652f\u9884\u6d4b\u548c CPU \u7f13\u5b58\u7684\u5165\u95e8\uff0c\u56e0\u6b64\u4efb\u4f55\u5177\u6709 C \u8bed\u8a00\u77e5\u8bc6\u4ee5\u53ca\u5982\u4f55\u5728 CPU \u4e0a\u6267\u884c\u4ee3\u7801\u7684\u4eba\u90fd\u5e94\u8be5\u80fd\u591f\u7406\u89e3\u3002\u8be5\u5e16\u5b50\u7684\u4ee3\u7801\u53ef\u5728\u6b64\u5904\u83b7\u5f97\u3002\u6240\u6709\u6570\u5b57\u5747\u6765\u81ea\u81f3\u5f3a E5-1650 v3\uff0c\u8fd9\u662f\u4e00\u6b3e\u82f1\u7279\u5c14 Haswell \u5904\u7406\u5668\uff0c\u5177\u6709 32kB\u3001256kB \u548c 15MB \u7684 L1/L2/L3 \u7f13\u5b58\u3002\u4ee3\u7801\u662f\u7528 clang -O3 \u7f16\u8bd1\u7684\uff0c\u800c\u4e0d\u662f\u7528 gcc \u7f16\u8bd1\u7684\uff0c\u539f\u56e0\u7a0d\u540e\u89e3\u91ca\u3002\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u60f3\u5f3a\u8c03\u4e00\u4e0b L1 \u7f13\u5b58\u547d\u4e2d\u51e0\u4e4e\u80af\u5b9a\u4e0d\u662f\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u74f6\u9888\uff01\u8fd9\u53ea\u662f\u4e00\u4e2a\u975e\u5e38\u5de7\u5999\u7684\u6280\u5de7\uff0c\u5b83\u9610\u660e\u4e86\u4e00\u4e9b CPU \u529f\u80fd\uff0c\u800c\u4e0d\u662f\u5173\u4e8e\u5982\u4f55\u63d0\u9ad8\u666e\u901a C \u4ee3\u7801\u6bb5\u6027\u80fd\u7684\u6307\u5357\u3002\n\u6211\u4eec\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u94fe\u8868\u6570\u636e\u7c7b\u578b\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5bf9\u7ed9\u5b9a\u94fe\u8868\u7684\u6240\u6709\u5143\u7d20\u6c42\u548c\u7684\u51fd\u6570\uff1a typedef struct Node { uint64_t value ;\u7ed3\u6784\u8282\u70b9 *next ; // \u6700\u540e\u4e00\u4e2a\u8282\u70b9\u4e3a NULL } Node ; uint64_t sum1 (Node * node ) { uint64_t value = 0 ; while (node) { value += node -&gt;value ;\u8282\u70b9=\u8282\u70b9-&gt;\u4e0b\u4e00\u4e2a\uff1b } \u8fd4\u56de\u503c\uff1b } \u5230\u73b0\u5728\u4e3a\u6b62\u8fd8\u633a\u597d\u3002\u6211\u4eec\u7684\u6d4b\u8bd5\u7528\u4f8b\u662f\u8fd9\u6837\u5de5\u4f5c\u7684\uff1a\u6784\u5efa\u4e00\u4e2a\u94fe\u8868\uff0c\u5176\u4e2d\u8282\u70b9\u5728\u8fde\u7eed\u5185\u5b58\u4e2d\u6309\u987a\u5e8f\u5b58\u5728\uff0c\u7136\u540e\u67e5\u770b\u5c06\u5b83\u4eec\u5168\u90e8\u52a0\u8d77\u6765\u9700\u8981\u591a\u957f\u65f6\u95f4\uff1a // \u5206\u914d 5MB \u7684\u94fe\u8868\u8282\u70b9\uff0c\u5e76\u6309\u987a\u5e8f\u94fe\u63a5\u5b83\u4eec\uff0c\u4f7f\u7528 // \u968f\u673a`value` \u4e2d\u7684\u6570\u636e\u3002 uint64_t n = 312500 llu\uff1b // 312500 * sizeof(Node) = 312500 * 16 bytes = 5000000 bytes Node *nodes = malloc (n * sizeof (Node)); for ( uint64_t i = 0 ; i &lt; n - 1 ; i ++) { \u8282\u70b9 [i ].value = random_uint64 ();\u8282\u70b9 [i ].next = &amp;nodes [i + 1 ]; } \u8282\u70b9 [n - 1 ].value = random_uint64 ();\u8282\u70b9 [n - 1 ].next = NULL ; // \u73b0\u5728\u6c42\u548c\u3002 sum1 (&amp;nodes [ 0 ]);\u5728\u5177\u6709\u76f8\u5bf9\u8f83\u65e7\u7684 Xeon E5-1650 v3 \u7684\u670d\u52a1\u5668\u4e0a\uff0c\u4f7f\u7528\u793a\u4f8b\u6570\u636e\u8fd0\u884c sum1 \u9700\u8981 0.36 \u6beb\u79d2\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6b63\u5728\u4ee5\u5927\u7ea6 14GB/s \u7684\u901f\u5ea6\u5904\u7406\u6211\u4eec\u7684\u94fe\u8868\u3002\u5728\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u786e\u5b9a\u74f6\u9888\u5e76\u901a\u8fc7\u4ef7\u503c\u63a8\u6d4b\u6765\u89e3\u51b3\u5b83\uff0c\u4ece\u800c\u4f7f\u8be5\u6570\u636e\u96c6\u7684\u541e\u5410\u91cf\u8fbe\u5230 30GB/s\u3002\u4fee\u590d\u7684\u5f71\u54cd\u53d6\u51b3\u4e8e\u6570\u636e\u96c6\u7684\u5927\u5c0f\u3002\u5982\u679c\u5b83\u5df2\u7ecf\u5b8c\u5168\u5728 CPU \u7f13\u5b58\u4e2d\uff0c\u90a3\u4e48\u6539\u8fdb\u4f1a\u66f4\u52a0\u660e\u663e\uff0c\u5426\u5219\u6211\u4eec\u5f88\u5feb\u5c31\u4f1a\u53d7\u5230\u4ece RAM \u8bfb\u53d6\u6570\u636e\u7684\u901f\u5ea6\u7684\u9650\u5236\u3002\u6b64\u56fe\u663e\u793a\u4e86\u4e0d\u540c\u5927\u5c0f\u6570\u636e\u96c6\u7684\u6027\u80fd\u6539\u8fdb\uff08\u8d8a\u9ad8\u8d8a\u597d\uff09\uff1a\u8be5\u56fe\u663e\u793a\u4e86 sum1 \u7684\u6027\u80fd\u4ee5\u53ca\u4e09\u4e2a\u6539\u8fdb\u51fd\u6570 sum2\u3001sum3 \u548c sum4 \u7684\u6027\u80fd\u3002\u5982\u679c\u6570\u636e\u5b8c\u5168\u9002\u5408 L1 \u7f13\u5b58\uff0816kB \u6570\u636e\u96c6\uff09\uff0c\u6211\u4eec\u4ece sum1 \u4e2d\u7684 14GB/s \u541e\u5410\u91cf\u5230 sum4 \u4e2d\u8d85\u8fc7 40GB/s\uff0c\u800c\u9002\u5408 L2 \u548c L3 \u7f13\u5b58\uff08128kB \u6570\u636e\u96c6\uff09\u7684\u6570\u636e\u96c6\u6027\u80fd\u7565\u6709\u4e0b\u964d\u548c 5MB \u6570\u636e\u96c6\uff09\u3002\u5982\u679c\u6570\u636e\u96c6\u4e0d\u5b8c\u5168\u9002\u5408\u4efb\u4f55 CPU \u7f13\u5b58\uff08~4GB \u6570\u636e\u96c6\uff09\uff0c\u6211\u4eec\u4f1a\u4ece 10GB/s \u5230 15GB/s\uff0c\u8fd9\u4e0e RAM \u5141\u8bb8\u7684\u901f\u5ea6\u4e00\u6837\u5feb\u3002 2\n\u6709\u5173\u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3a 15GB/s \u662f\u4e0d\u8bc9\u8bf8\u66f4\u6df1\u5c42\u6b21\u53d8\u5316\u7684\u9650\u5236\u7684\u66f4\u591a\u6570\u636e\uff0c\u8bf7\u53c2\u9605\u6700\u540e\u4e00\u8282\u4e2d\u7684\u8bc4\u8bba\u3002 \u21a9\ufe0e \u73b0\u4ee3 CPU \u4e0d\u662f\u4e32\u884c\u5904\u7406\u6307\u4ee4\uff0c\u800c\u662f\u540c\u65f6\u5904\u7406\u8bb8\u591a\u6307\u4ee4\u3002\u4ed6\u4eec\u4e00\u6b21\u8bfb\u53d6\u8bb8\u591a\u6307\u4ee4\uff0c\u5c06\u5b83\u4eec\u5206\u9636\u6bb5\u5206\u89e3\uff0c\u7136\u540e\u5c1d\u8bd5\u7528\u5c3d\u53ef\u80fd\u591a\u7684\u6307\u4ee4\u4e2d\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u4efb\u52a1\u6765\u586b\u5145\u4ed6\u4eec\u62e5\u6709\u7684\u6240\u6709\u8ba1\u7b97\u5355\u5143\u3002 3 \u4f8b\u5982\uff0c\u73b0\u4ee3\u82f1\u7279\u5c14\u5904\u7406\u5668\u7684\u8bbe\u8ba1\u541e\u5410\u91cf\u4e3a\u6bcf\u4e2a\u65f6\u949f\u5468\u671f 4 \u6761\u6307\u4ee4\uff0c\u800c AMD Zen \u5904\u7406\u5668\u7684\u541e\u5410\u91cf\u9ad8\u8fbe 5 \u6216 6 \u6761\u30024 \u7136\u800c\uff0c\u5f53\u60f3\u8981\u5e76\u884c\u6267\u884c\u6307\u4ee4\u65f6\uff0c\u5206\u652f\u4f1a\u5e26\u6765\u6311\u6218\u3002\u8ba9\u6211\u4eec\u56de\u5230\u6211\u4eec\u7684\u51fd\u6570 sum1\uff1a\u4e3a\u4e86\u6269\u5c55\u8fd9\u4e2a\u4e3b\u9898\uff0c\u60a8\u53ef\u4ee5\u5f00\u59cb\u9605\u8bfb\u4e71\u5e8f\u6267\u884c\u548c\u6d41\u6c34\u7ebf\u3002 \u21a9\ufe0e Agner Fog \u7684\u5fae\u67b6\u6784\u6587\u6863\u5305\u542b\u5927\u91cf\u6709\u5173 Intel \u548c AMD x86 \u5904\u7406\u5668\u6d41\u6c34\u7ebf\u7279\u6027\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u6bcf\u4e2a\u67b6\u6784\u7684\u541e\u5410\u91cf\u6570\u5b57\u901a\u5e38\u5728\u201c\u7ba1\u9053\u201d\u90e8\u5206\u3002 \u21a9\ufe0e uint64_t sum1 (Node * node ) { uint64_t value = 0 ; while (node) { value += node -&gt;value ;\u8282\u70b9=\u8282\u70b9-&gt;\u4e0b\u4e00\u4e2a\uff1b } \u8fd4\u56de\u503c\uff1b }; rdi = \u8282\u70b9\u548c rax = \u503c\u3002 ; rax \u662f\u8fd4\u56de\u503c\u5bc4\u5b58\u5668\uff08\u6211\u4eec\u6b63\u5728\u8fd4\u56de\u503c\uff09 sum1: xor rax , rax ;\u503c = 0 \u6d4b\u8bd5 rdi , rdi ;\u5982\u679c\u8282\u70b9\u4e3a NULL\uff0c\u5219\u9000\u51fa\uff0c\u5426\u5219\u5f00\u59cb\u5faa\u73af je \u7ed3\u675f\u5faa\u73af\uff1a\u6dfb\u52a0 rax , qword ptr [ rdi ] ; value += node-&gt;value mov rdi , qword ptr [ rdi + 8 ] ;\u8282\u70b9 = \u8282\u70b9-&gt;\u4e0b\u4e00\u4e2a\u6d4b\u8bd5 rdi , rdi ;\u5982\u679c\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u5219\u91cd\u590d\u5faa\u73af\uff0cjne \u5faa\u73af\uff1b\u5426\u5219\u9000\u51fa\u7ed3\u675fret\n\u5faa\u73af\u4f53\u7531 4 \u6761\u6307\u4ee4\u7ec4\u6210\uff0c\u6700\u540e\u4e00\u6761\u662f\u8df3\u8f6c\u3002\u5728\u6ca1\u6709\u7279\u6b8a\u63aa\u65bd\u7684\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u5728\u6267\u884c\u4e0b\u4e00\u6761\u6307\u4ee4\u4e4b\u524d\u6267\u884c\u76f4\u5230 jne \u7684\u6bcf\u6761\u6307\u4ee4\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u77e5\u9053\u6211\u4eec\u662f\u8981\u5230\u5faa\u73af\u7684\u5f00\u5934\u8fd8\u662f\u7ee7\u7eed\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6761\u4ef6\u8df3\u8f6c\u4f1a\u5728 CPU \u5185\u90e8\u7684\u6307\u4ee4\u7ea7\u5e76\u884c\u6027\u4e2d\u5f15\u5165\u969c\u788d\u3002\u7136\u800c\uff0c\u4e00\u6b21\u6267\u884c\u591a\u6761\u6307\u4ee4\u975e\u5e38\u91cd\u8981\uff0c\u4ee5\u81f3\u4e8e\u6240\u6709\u73b0\u4ee3 CPU \u4e2d\u90fd\u5b58\u5728\u4e13\u7528\u786c\u4ef6\u2014\u2014\u5206\u652f\u9884\u6d4b\u5668\u2014\u2014\u4ee5\u5bf9\u6bcf\u6b21\u6761\u4ef6\u8df3\u8f6c\u65f6\u6211\u4eec\u5c06\u91c7\u7528\u7684\u65b9\u5f0f\u8fdb\u884c\u6709\u6839\u636e\u7684\u731c\u6d4b\u3002\u5176\u5de5\u4f5c\u539f\u7406\u7684\u7ec6\u8282\u8d85\u51fa\u4e86\u672c\u535a\u6587\u7684\u8303\u56f4\uff0c\u4f46\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u60a8\u7684 CPU \u4f1a\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u89c2\u5bdf\u60a8\u7684\u7a0b\u5e8f\uff0c\u5e76\u5c1d\u8bd5\u901a\u8fc7\u8bb0\u4f4f\u8fc7\u53bb\u53d1\u751f\u7684\u4e8b\u60c5\u6765\u9884\u6d4b\u5c06\u91c7\u7528\u54ea\u4e2a\u5206\u652f\u3002 5 \u9664\u4e86\u4e00\u76f4\u6709\u7528\u7684 Agner Fog\uff08\u53c2\u89c1\u5fae\u67b6\u6784\u6587\u6863\u7684\u7b2c 3 \u8282\uff09\uff0cDan Luu \u6709\u4e00\u7bc7\u5f88\u597d\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u89e3\u91ca\u4e86\u6267\u884c\u5206\u652f\u9884\u6d4b\u7684\u5404\u79cd\u65b9\u6cd5\u3002 \u21a9\ufe0e \u5373\u4f7f\u5bf9\u5206\u652f\u9884\u6d4b\u77e5\u4e4b\u751a\u5c11\uff0c\u6211\u4eec\u4e5f\u5e0c\u671b\u9884\u6d4b\u5668\u80fd\u591f\u4e3a\u6211\u4eec\u7684\u6d4b\u8bd5\u7528\u4f8b\u505a\u4e00\u4e2a\u5f88\u597d\u7684\u5de5\u4f5c\u2014\u2014\u9664\u4e86\u6211\u4eec\u505c\u6b62\u4f7f\u7528\u5217\u8868\u4e4b\u5916\uff0c\u6211\u4eec\u603b\u662f\u56de\u5230\u5faa\u73af\u7684\u5f00\u59cb\u3002\u5728 Linux \u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 perf stat \u9a8c\u8bc1\u8fd9\u79cd\u60c5\u51b5\uff1a\u5206\u652f\u9884\u6d4b\u5668\u5728 99.96% \u7684\u65f6\u95f4\u5185\u90fd\u6b63\u786e\u3002\u6240\u4ee5 CPU \u53ef\u4ee5\u968f\u610f\u5e76\u884c\u5316\u6211\u4eec\u7684\u6307\u4ee4\uff0c\u5bf9\u5417\uff1f \u2026\u5bf9\uff1f ; rdi = \u8282\u70b9\u548c rax = \u503c\u3002\u5faa\u73af\uff1a\u6dfb\u52a0 rax \uff0c qword ptr [ rdi ] \uff1b value += node-&gt;value mov rdi , qword ptr [ rdi + 8 ] ;\u8282\u70b9 = \u8282\u70b9-&gt;\u4e0b\u4e00\u4e2a\u6d4b\u8bd5 rdi , rdi ;\u5982\u679c\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u5219\u91cd\u590d\u5faa\u73af\uff0cjne \u5faa\u73af\uff1b\u5426\u5219 exit \u8981\u9012\u589e\u503c\uff08 rax \uff09\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u8282\u70b9\uff08 rdi \uff09\u7684\u503c\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5faa\u73af\u7684\u524d\u4e00\u6b21\u8fed\u4ee3\u3002\u56e0\u6b64\uff0c\u5faa\u73af\u7684\u6bcf\u6b21\u8fed\u4ee3\u4e4b\u95f4\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\uff1a\u6211\u4eec\u5fc5\u987b\u5728\u8fed\u4ee3 n \u65f6\u5b8c\u6210\u8bfb\u53d6 node-&gt;next ( [rdi + 8]) \uff0c\u7136\u540e\u624d\u80fd\u5f00\u59cb\u5728\u8fed\u4ee3 n+1 \u5904\u6267\u884c\u52a0\u6cd5\u3002\n\u6b64\u5916\uff0c\u52a0\u8f7d\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u503c\u7684 mov \u662f\u5faa\u73af\u4e2d\u6700\u6162\u7684\u6307\u4ee4\u3002\u73b0\u4ee3 CPU \u5728\u6dfb\u52a0\u6570\u5b57\u65b9\u9762\u6bd4\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u8981\u597d\u5f97\u591a\u3002\u4e3a\u6b64\uff0cCPU \u548c\u4e3b\u5b58\u4e4b\u95f4\u5b58\u5728\u4e00\u7cfb\u5217\u5feb\u901f\u7f13\u5b58\u3002\u4ece\u4e3b\u5185\u5b58\u8bfb\u53d6\u548c\u5199\u5165\u7684\u6240\u6709\u64cd\u4f5c\u901a\u5e38\u90fd\u7ecf\u8fc7\u7f13\u5b58\u2014\u2014\u5982\u679c\u6211\u4eec\u611f\u5174\u8da3\u7684\u6570\u636e\u4e0d\u5b58\u5728\uff0cCPU \u5c06\u52a0\u8f7d\u4e00\u5757\u5185\u5b58\uff08\u201c\u7f13\u5b58\u7ebf\u201d\uff0cx86 \u4e0a\u7684 64 \u5b57\u8282\uff09\uff0c\u5176\u4e2d\u5305\u542b\u6211\u4eec\u60f3\u8981\u7684\u6570\u636e\u8fdb\u5165\u7f13\u5b58\u3002 6 \u6700\u5feb\u7684\u7f13\u5b58\u901a\u5e38\u79f0\u4e3a L1\uff08\u8fde\u7eed\u7684\u7f13\u5b58\u5c42\u53ef\u9884\u6d4b\u5730\u79f0\u4e3a L2\u3001L3 \u2026\u2026\uff09\u3002\u5f53\u6d89\u53ca\u5230 CPU \u7f13\u5b58\u65f6\uff0c\u6211\u4eec\u7684\u8bbe\u7f6e\u662f\u6700\u597d\u7684\u60c5\u51b5\u2014\u2014\u6211\u4eec\u987a\u5e8f\u8bfb\u53d6\u4e00\u5806\u5185\u5b58\uff0c\u6cbf\u9014\u5229\u7528\u6bcf\u4e2a\u5b57\u8282\u3002\u7136\u800c\uff0c\u5373\u4f7f L1 \u7f13\u5b58\u975e\u5e38\u5feb\uff0c\u5b83\u4e5f\u4e0d\u662f\u514d\u8d39\u7684\uff1a\u5728\u6211\u4eec\u7684 mov \u4e2d\u8bfb\u53d6\u5b83\u5927\u7ea6\u9700\u8981 4 \u4e2a CPU \u5468\u671f\uff0c\u800c\u6dfb\u52a0\u3001\u6d4b\u8bd5\u548c jne \u9700\u8981 1 \u4e2a CPU \u5468\u671f\u3002 7 \u56e0\u6b64\uff0c\u901a\u8fc7\u5355\u4e2a\u5faa\u73af\u8fed\u4ee3\u6240\u9700\u7684\u5468\u671f\u6570\u53d7\u4ece L1 \u7f13\u5b58\u8bfb\u53d6\u6240\u9700\u7684 4 \u4e2a\u5468\u671f\u7684\u9650\u5236\u3002\u6211\u4ece\u6d4b\u8bd5\u7a0b\u5e8f\u7684\u81f3\u5f3a\u83b7\u5f97\u7684\u6570\u636e\u5927\u81f4\u4e0e\u6b64\u4e00\u81f4\uff1a\u6211\u8bf4\u201c\u901a\u5e38\u201d\u662f\u56e0\u4e3a\u53ef\u4ee5\u4f7f\u7528\u6d41\u5f0f SIMD \u6307\u4ee4\u907f\u514d\u7f13\u5b58\uff0c\u8fd9\u4e9b\u6307\u4ee4\u53ef\u4ee5\u7ed5\u8fc7\u7f13\u5b58\u5199\u5165\u6216\u590d\u5236\u5185\u5b58\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u662f\u53ef\u9009\u7684\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6240\u6709\u5185\u5b58\u90fd\u901a\u8fc7\u7f13\u5b58\u3002 \u21a9\ufe0e \u540c\u6837\uff0cAgner Fog \u7684\u6027\u80fd\u9875\u9762\u662f\u6211\u80fd\u627e\u5230\u7684\u6700\u597d\u7684\u8d44\u6e90\u6765\u83b7\u53d6\u8fd9\u4e9b\u6570\u5b57\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60f3\u8981\u627e\u5230 Haswell CPU \u7684\u8fd9\u4e9b\u7f16\u53f7\uff1a add\u3001test \u548c jne \u7684\u7f16\u53f7\u4f4d\u4e8e\u6307\u4ee4\u8868\u7684 Haswell \u90e8\u5206\u3002\n\u21a9\ufe0e16KB\uff0c10000\u6b21\u8fed\u4ee3SUM1\uff1a8465052097154389858\uff0c1.12us\uff0c14.25GB /\u79d2\uff0c3.91\u5faa\u73af/ ELEM\uff0c1.03 instrs /\u5468\u671f\uff0c3.48GHz\uff0c4.01 instrs / elem128kB\uff0c10000\u6b21\u8fed\u4ee3SUM1\uff1a6947699366156898439\uff0c9.06us\uff0c14.13GB / S\uff0c3.95\u5468\u671f/elem, 1.01 instrs/cycle, 3.49GHz, 4.00 instrs/elem5000kB, 100 \u6b21\u8fed\u4ee3 sum1: 2134986631019855758, 0.36ms, 14.07GB/s, 3,91.emstrs/elem4,4.00 instrs/elem5000kB, 100\u8fed\u4ee3 sum1: 15446485409674718527, 0.43 s, 9.94GB/s, 5.60 cycle/elem, 0.71 instrs/cycle, 3.48GHz, 4.00 instrs/elem \u91cd\u8981\u7684\u6570\u5b57\u662fcycles/elem\u548cinstrs/cycle\u3002\u6211\u4eec\u4e3a\u6bcf\u4e2a\u5217\u8868\u5143\u7d20\uff08\u5373\u6bcf\u6b21\u5faa\u73af\u8fed\u4ee3\uff09\u82b1\u8d39\u5927\u7ea6 4 \u4e2a\u5468\u671f\uff0c\u5bf9\u5e94\u4e8e\u6bcf\u4e2a\u5468\u671f\u5927\u7ea6 1 \u6761\u6307\u4ee4\u7684\u541e\u5410\u91cf\u3002\u9274\u4e8e\u6240\u8ba8\u8bba\u7684 CPU \u8bbe\u8ba1\u4e3a\u6bcf\u5468\u671f 4 \u6761\u6307\u4ee4\u7684\u541e\u5410\u91cf\uff0c\u6211\u4eec\u6d6a\u8d39\u4e86\u5927\u91cf\u53ef\u7528\u7684 CPU \u9b54\u6cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u4e00\u76f4\u5728\u7b49\u5f85 L1 \u7f13\u5b58\u3002\u6211\u4eec\u7ec8\u4e8e\u5f97\u5230\u4e86\u8bc0\u7a8d\u3002\u5982\u524d\u6240\u8ff0\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u7b49\u5f85\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u8282\u70b9\u5730\u5740\u662f\u4ec0\u4e48\u3002\u7136\u800c\uff0c\u5728\u6211\u4eec\u7684\u8bbe\u7f6e\u4e2d\uff0c\u6211\u4eec\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u5757\u4e2d\u5206\u914d\u5217\u8868\uff0c\u56e0\u6b64\u8282\u70b9\u603b\u662f\u5f7c\u6b64\u76f8\u90bb\u3002\u6240\u4ee5\u8fd9\u91cc\u7684\u5173\u952e\u601d\u60f3\u662f\uff1a\u5c1d\u8bd5\u901a\u8fc7\u78b0\u649e\u524d\u4e00\u4e2a\u503c\u6765\u731c\u6d4b\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\u5982\u679c\u731c\u6d4b\u9519\u8bef\uff0c\u5219\u5c06\u8282\u70b9\u8bbe\u7f6e\u4e3a\u201c\u771f\u5b9e\u201d\u7684\u4e0b\u4e00\u4e2a\u503c\u3002\u5728 C \u4e2d\uff0c\u5b83\u662f\u8fd9\u6837\u7684\uff1a uint64_t fast_sum (Node * node ) { uint64_t value = 0 ;\u8282\u70b9 * \u4e0b\u4e00\u4e2a = NULL ; while (node) { value += node -&gt;value ;\u4e0b\u4e00\u4e2a=\u8282\u70b9-&gt;\u4e0b\u4e00\u4e2a\uff1b // \u731c\u6d4b\u4e0b\u4e00\u4e2a\u503c\u8282\u70b9++; // \u4f46\u5982\u679c\u6211\u4eec\u731c\u9519\u4e86\uff0c\u8bf7\u4fee\u590d\u5b83\uff08\u4ee5\u9632\u8282\u70b9 // \u5f7c\u6b64\u76f8\u90bb\uff09\u3002\u5982\u679c\uff08\u8282\u70b9\uff01=\u4e0b\u4e00\u4e2a\uff09{\u8282\u70b9=\u4e0b\u4e00\u4e2a\uff1b } } \u8fd4\u56de\u503c\uff1b\u8fd9\u770b\u8d77\u6765\u5f88\u5947\u602a\u3002\u6211\u4eec\u4ecd\u5728\u6bd4\u8f83\u8282\u70b9\u4e2d\u8bfb\u53d6 node-&gt;next != next \u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u731c\u6d4b\u662f\u6b63\u786e\u7684\u3002\u56e0\u6b64\uff0c\u4e4d\u4e00\u770b\uff0c\u8fd9\u4f3c\u4e4e\u4e0d\u662f\u4e00\u79cd\u6539\u8fdb\u3002\n\u8fd9\u5c31\u662f\u5206\u652f\u9884\u6d4b\u5668\u7684\u7528\u6b66\u4e4b\u5730\u3002\u5728\u5927\u591a\u6570\u8282\u70b9\u5f7c\u6b64\u76f8\u90bb\u7684\u5217\u8868\u7684\u60c5\u51b5\u4e0b\uff08\u5982\u6211\u4eec\u7684\u6d4b\u8bd5\u4ee3\u7801\u4e2d\u7684\u60c5\u51b5\uff09\uff0c\u5206\u652f\u9884\u6d4b\u5668\u5c06\u731c\u6d4b if (node != next) { .. . } \u5206\u652f\u6ca1\u6709\u88ab\u91c7\u7528\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u901a\u8fc7\u5faa\u73af\u8fed\u4ee3\u800c\u4e0d\u5fc5\u7b49\u5f85 L1 \u8bfb\u53d6\u3002\u8bf7\u6ce8\u610f\uff0c\u5f53\u5206\u652f\u9884\u6d4b\u5668\u9519\u8bef\u65f6\uff08\u4f8b\u5982\u5f53\u5217\u8868\u7ed3\u675f\u65f6\uff0c\u6216\u8005\u5982\u679c\u6211\u4eec\u6709\u4e0d\u8fde\u7eed\u7684\u8282\u70b9\uff09\uff0cCPU \u5c06\u9700\u8981\u56de\u6eaf\u5e76\u4ece\u5931\u8d25\u7684\u5206\u652f\u9884\u6d4b\u4e2d\u91cd\u65b0\u8fd0\u884c\uff0c\u8fd9\u662f\u4ee3\u4ef7\u9ad8\u6602\u7684\uff0815 \u5230 20 \u4e2a\u5468\u671f\u6211\u4eec\u7684\u5904\u7406\u5668 8)\u3002\u7136\u800c\uff0c\u5982\u679c\u5217\u8868\u5927\u90e8\u5206\u662f\u8fde\u7eed\u7684\uff0c\u8fd9\u4e2a\u6280\u5de7\u5c31\u4f1a\u8d77\u4f5c\u7528\u5e76\u4f7f\u6211\u4eec\u7684\u51fd\u6570\u5feb 50-200%\u3002\u8bf7\u53c2\u9605 Agner Fog \u7684\u5fae\u4f53\u7cfb\u7ed3\u6784\u6587\u6863\u4e2d Haswell \u5904\u7406\u5668\u7684\u201c\u9519\u8bef\u9884\u6d4b\u60e9\u7f5a\u201d\u3002 \u21a9\ufe0e \u7136\u800c\uff0c\u8981\u5b8c\u6210\u6700\u7ec8\u4ee3\u7801\u5e76\u663e\u793a\u6570\u5b57\uff0c\u8fd8\u6709\u6700\u540e\u4e00\u4e2a\u6311\u6218\u2014\u2014\u8ba9\u7f16\u8bd1\u5668\u76f8\u4fe1\u6211\u4eec\u7684\u4ee3\u7801\u503c\u5f97\u7f16\u8bd1\u3002\u8ba9\u6211\u4eec\u56de\u5230\u6211\u4eec\u5728 C \u4e2d\u5c55\u793a\u7684\u7528\u4e8e\u4ef7\u503c\u63a8\u6d4b\u7684\u4ee3\u7801\uff1a uint64_t fast_sum (Node * node ) { uint64_t value = 0 ;\u8282\u70b9 * \u4e0b\u4e00\u4e2a = NULL ; while (node) { value += node -&gt;value ;\u4e0b\u4e00\u4e2a=\u8282\u70b9-&gt;\u4e0b\u4e00\u4e2a\uff1b\u8282\u70b9++\uff1b\u5982\u679c\uff08\u8282\u70b9\uff01=\u4e0b\u4e00\u4e2a\uff09{\u8282\u70b9=\u4e0b\u4e00\u4e2a\uff1b } } \u8fd4\u56de\u503c\uff1b gcc \u548c clang \u5f88\u5bb9\u6613\u63a8\u65ad\u51fa\u8fd9\u79cd\u731c\u6d4b\u5728\u8bed\u4e49\u4e0a\u6beb\u65e0\u610f\u4e49\uff0c\u7136\u540e\u7f16\u8bd1\u6211\u4eec\u7684\u6280\u5de7\uff0c\u4f7f fast_sum \u7684\u7f16\u8bd1\u7248\u672c\u4e0e sum1 \u76f8\u540c\u3002\u8fd9\u662f\u4e00\u4e2a\u7f16\u8bd1\u5668\u667a\u80fd\u64a4\u9500\u4eba\u7c7b\u5173\u4e8e\u6211\u4eec\u6b63\u5728\u7f16\u8bd1\u7684\u5e95\u5c42\u5e73\u53f0\u7684\u77e5\u8bc6\u7684\u4f8b\u5b50\u3002\nPer Vognsen \u7684\u8981\u70b9\u4f7f\u7528\u4ee5\u4e0b\u6280\u5de7\u6765\u8ba9\u7f16\u8bd1\u5668\u8fd0\u884c\u2014\u2014\u8fd9\u662f\u5bf9 sum1\u3001sum2 \u7684\u7b2c\u4e00\u4e2a\u6539\u8fdb\uff1a static uint64_t sum2 (Node *node ) { uint64_t value = 0 ; while (node) { value += node -&gt;value ;\u8282\u70b9 *predicted_next = \u8282\u70b9 + 1 ;\u8282\u70b9 *next = \u8282\u70b9 -&gt;next ; if (next == Predicted_next) { // \u901a\u8fc7\u8ba9\u7f16\u8bd1\u5668\u8ba4\u4e3a\u6211\u4eec\u5728\u8fd9\u91cc\u6539\u53d8\u4e86 predicted_next \u6765\u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\u8fd9\u4e2a\u663e\u7136\u6beb\u65e0\u610f\u4e49\u7684\u5206\u652f\u3002 // // \u4f46\u662f\uff0c\u6b64\u6280\u5de7\u4e0d\u9002\u7528\u4e8e GCC\uff0c\u4ec5\u9002\u7528\u4e8e clang\u3002 GCC \u5728\u8fd9\u91cc // \u63a8\u5bfc\u51fa `next` \u548c `predicted_next` \u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64 // \u5c06\u5b83\u4eec\u5408\u5e76\u5230\u540c\u4e00\u4e2a\u53d8\u91cf\u4e2d\uff0c\u8fd9\u91cd\u65b0\u5f15\u5165\u4e86 // \u6211\u4eec\u60f3\u8981\u6446\u8131\u7684\u6570\u636e\u4f9d\u8d56\u6027\u3002 asm ( &quot;&quot; : &quot;+r&quot; (predicted_next ));\u8282\u70b9 = \u9884\u6d4b_\u4e0b\u4e00\u4e2a\uff1b } else { \u8282\u70b9=\u4e0b\u4e00\u4e2a\uff1b } } \u8fd4\u56de\u503c\uff1b\u7136\u800c\uff0c\u6b63\u5982\u8bc4\u8bba\u4e2d\u6240\u89e3\u91ca\u7684\u90a3\u6837\uff0cgcc \u4ecd\u7136\u6ca1\u6709\u5b8c\u5168\u7231\u4e0a\u5b83\u3002 9 \u6b64\u5916\uff0cclang \u751f\u6210\u7684\u5faa\u73af\u5e76\u6ca1\u6709\u60f3\u8c61\u7684\u90a3\u4e48\u7d27\u51d1\uff0c\u6bcf\u4e2a\u5143\u7d20\u9700\u8981 10 \u6761\u6307\u4ee4\u3002\u6240\u4ee5\u6211\u6c42\u52a9\u4e8e\u624b\u52a8\u5199\u51fa\u4e00\u4e2a\u66f4\u597d\u7684\u5faa\u73af\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a sum3: 10 \u8fd9\u5c31\u662f\u6211\u575a\u6301\u4f7f\u7528 clang \u6765\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u539f\u56e0\u3002\u6211\u4e0d\u77e5\u9053 Per \u5728\u4ed6\u7684\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u7684\u662f\u4ec0\u4e48\u7f16\u8bd1\u5668\u3002 \u21a9\ufe0e \u8fd9\u91cc\u6211\u5c55\u793a\u4e86 Intel \u8bed\u6cd5\u4e2d\u7684\u6c47\u7f16\u7248\u672c\uff0c\u4f46\u5728\u4ee3\u7801\u4e2d\u6211\u7f16\u5199\u4e86\u5185\u8054\u6c47\u7f16\uff0c\u4f7f\u7528 AT&amp;T \u8bed\u6cd5\uff0c\u56e0\u4e3a\u5b83\u66f4\u597d\u5730\u652f\u6301\u3002 \u21a9\ufe0e ; rax = \u503c\uff0crcx = \u4e0b\u4e00\u4e2a\uff0crdi = \u8282\u70b9\uff1b\u6ce8\u610f rax \u662f\u8fd4\u56de\u503c\u5bc4\u5b58\u5668\uff08\u6211\u4eec\u6b63\u5728\u8fd4\u56de\u503c\uff09 sum3: xor rax , rax ;\u503c = 0 \u5f02\u6216 rcx , rcx ; next = NULL \u6d4b\u8bd5 rdi , rdi ;\u5982\u679c\u8282\u70b9\u4e3a\u7a7a\uff0c\u5219\u8d70\u5230\u6700\u540e\uff0cje end\uff1b\u5426\u5219\u5f00\u59cb\u5faa\u73af loop_body: add rax , qword ptr [ rdi ] ; value += node-&gt;value mov rcx , qword ptr [ rdi + 8 ] ; next = node-&gt;next add rdi , 16 ; node++ cmp rcx , rdi ;\u5982\u679c node \u4e0d\u7b49\u4e8e next\uff0c\u5219 jne assign_node \uff1b\u8f6c\u5230assign_node\uff0c\u5426\u5219jmp loop_body ;\u91cd\u65b0\u542f\u52a8\u5faa\u73afassign_node: mov rdi , rcx ;\u8282\u70b9 = \u4e0b\u4e00\u4e2a\u6d4b\u8bd5 rdi , rdi ;\u5982\u679c\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u5219\u91cd\u65b0\u542f\u52a8\u5faa\u73af\uff0c jne loop_body \uff1b\u5426\u5219\u9000\u51fa\u3002 end: ret \u4ee3\u7801\u4f9d\u8d56\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5982\u679c node \u7b49\u4e8e next\uff0c\u6211\u4eec\u5728\u589e\u52a0\u5b83\u4e4b\u540e\u4e0d\u80fd\u4e3a NULL\uff0c\u907f\u514d\u4e86\u989d\u5916\u7684\u6d4b\u8bd5\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5143\u7d20\u53ea\u53d6 6 \u6761\u6307\u4ee4\uff08\u4ece loop_body \u5230assign_node\uff09\u3002\u6700\u540e\uff0csum4 \u4e0e sum3 \u76f8\u540c\uff0c\u4f46 loop_body \u5c55\u5f00\u4e86 16 \u6b21\u3002\n16KB\uff0c10000\u6b21\u8fed\u4ee3SUM1\uff1a8465052097154389858\uff0c1.12us\uff0c14.25GB / S\uff0c3.91\u5faa\u73af/ ELEM\uff0c1.03 instrs /\u5468\u671f\uff0c3.48GHz\uff0c4.01 instrs / ELEM SUM2\uff1a8465052097154389858\uff0c0.57us\uff0c27.95GB / S\uff0c1.99\u5faa\u73af/ ELEM\uff0c 5.02 instrs/cycle, 3.48GHz, 10.01 instrs/elem sum3: 8465052097154389858, 0.41us, 39.23GB/s, 1.42cycles/elem, 4.23 instrs/cycle, 3.45052097154389858, 0.41us, 39.23GB/s, 4.23 instrs/cycle, 36805209715438986 /s, 1.34 \u5468\u671f/elem, 3.80 instrs/cycle, 3.48GHz, 5.07 instrs/elem128kB, 10000 \u6b21\u8fed\u4ee3 sum1: 6947699366156898439, 9.06us, 14.13GB,95.5 GHz instrs/s,14.13GB,95.4 \u5468\u671f instr/s,4.0 GHz instrs/elem128kB, 10000 \u6b21\u8fed\u4ee3/ ELEM SUM2\uff1a6947699366156898439\uff0c4.75us\uff0c26.95GB / S\uff0c2.07\u5faa\u73af/ ELEM\uff0c4.84 instrs /\u5468\u671f\uff0c3.48GHz\uff0c10.00 instrs / ELEM SUM3\uff1a6947699366156898439\uff0c3.85us\uff0c33.23GB / S\uff0c1.68\u5faa\u73af/ ELEM\uff0c3.58 instrs /\u5468\u671f\uff0c3.48GHz\uff0c6.00 instrs / ELEM SUM4\uff1a6947699366156898439\uff0c3.36us\uff0c38.14GB /\u79d2\uff0c1.46\u5faa\u73af/ ELEM\uff0c3.46 instrs /\u5468\u671f\uff0c3.49GHz\uff0c5.06 instrs / elem5000kB\uff0c100\u6b21\u8fed\u4ee3SUM1\uff1a2134986631019855758\uff0c0.36ms\uff0c14.07 GB/s, 3.96 \u5468\u671f/ elem, 1.01 instrs/cycle, 3.48GHz, 4.00 instrs/elem sum2: 2134986631019855758, 0.19ms, 26.25GB/s, 2.12 \u5468\u671f/elem, 4.71 instrs/cycle, 4.00 instrs/elem sum2,4045758, 0.19ms, 26.25GB/s, 4.71 instrs/cycle, 4.00 instrs.855755758 104 1000000000000000000000000\u5f1528.69GB/s, 1.94 \u5468\u671f/elem, 3.09 instrs/cycle, 3.48GHz, 6.00 instrs/elem sum4: 2134986631019855758, 0.16ms, 30.30GB/s, 1.84,55 GHz instrs/elem, 1.84s.36 \u5468\u671f instr.367 \u5468\u671felem4294MB, 1 \u6b21\u8fed\u4ee3 sum1: 15446485409674718527, 0.43 s, 9.94GB/s, 5.60 \u5468\u671f/elem, 0.71 instrs/\u5468\u671f, 3.48GHz, 4.00 instrs/elem 4803,407s/elem 4803,40s/elem 4803,407s/elem 4804,873.71s/elem 4804,80.71s/elem 4804,873.73/48526:70 2.45 instrs /\u5468\u671f\uff0c3.48GHz\uff0c10.00 instrs / ELEM SUM3\uff1a15446485409674718527\uff0c0.29 S\uff0c14.72GB / S\uff0c3.77\u5faa\u73af/ ELEM\uff0c1.59 instrs /\u5468\u671f\uff0c3.47GHz\uff0c6.00 instrs / ELEM SUM4\uff1a15446485409674718527\uff0c0.29 S\uff0c15.02GB /s, 3.70 cycle/elem, 1.37 instrs/cycle, 3.47GHz, 5.06 instrs/elem \u524d\u4e09\u4e2a\u6570\u636e\u96c6\u9002\u5408 L1 / L2 / L3 \u7f13\u5b58\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6539\u8fdb\u975e\u5e38\u660e\u663e\uff0csum3 / sum4 \u4ee5\u6bcf\u79d2\u5927\u7ea6 4 \u6761\u6307\u4ee4\u7684\u901f\u5ea6\u5904\u7406\u6570\u636e\uff0c\u8fd9\u5e94\u8be5\u63a5\u8fd1\u6211\u6d4b\u8bd5\u4ee3\u7801\u7684\u5904\u7406\u5668\u7684\u9650\u5236\u3002\u5f53\u6570\u636e\u4e0d\u9002\u5408\u7f13\u5b58\u65f6\uff0c\u74f6\u9888\u5c31\u4f1a\u586b\u5145\u5b83\uff0c\u6211\u4eec\u4ee5\u5927\u7ea6 15 GB/s \u7684\u901f\u5ea6\u5904\u7406\u6570\u636e\u3002\u6211\u76f8\u4fe1\u8fd9\u662f\u4ece RAM \u4e2d\u201c\u7b80\u5355\u201d\u5355\u7ebf\u7a0b\u8bfb\u53d6\u6240\u80fd\u8fbe\u5230\u7684\u6700\u5feb\u901f\u5ea6\uff0c\u5e76\u4e14\u5b83\u4e0e\u6765\u81ea sysbench \u7684\u6570\u636e\u4e00\u81f4\uff1aRAM \u8bfb\u53d6\u901f\u5ea6\u53ef\u80fd\u53ef\u4ee5\u4f7f\u7528 SIMD \u6d41\u6307\u4ee4\u6216\u901a\u8fc7\u4ece\u591a\u4e2a\u7ebf\u7a0b\u8bfb\u53d6\u6765\u63d0\u9ad8\uff0c\u5c3d\u7ba1\u5b9e\u65bd\u8d77\u6765\u4f1a\u590d\u6742\u5f97\u591a\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u8fd9\u4e2a\u4f4e\u7ea7\u6280\u5de7\u7684\u65c5\u7a0b\uff01\u5982\u679c\u4f60\u60f3\u8981\u66f4\u591a\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u6211\u518d\u600e\u4e48\u63a8\u8350 Per \u7684\u5e10\u6237\u4e5f\u4e0d\u4e3a\u8fc7\u2014\u2014\u5f04\u6e05\u695a\u4ed6\u7684\u6280\u5de7\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u8fd9\u5f88\u6709\u6559\u80b2\u610f\u4e49\u3002\u611f\u8c22 Alexandru Scvortov\u3001Niklas Hamb\u00fcchen\u3001Alex Appetiti \u548c Carter T Schonwald \u9605\u8bfb\u672c\u6587\u7684\u8349\u7a3f\u3002 Niklas \u8fd8\u6f84\u6e05\u4e86\u4e00\u4e9b\u6709\u5173 RAM \u901f\u5ea6\u7684\u7ec6\u8282\uff0c\u5e76\u5efa\u8bae\u4f7f\u7528 sysbench \u6765\u7279\u522b\u6d4b\u91cf\u5355\u7ebf\u7a0b RAM \u8bfb\u53d6\u901f\u5ea6\u3002", "note_en": "Abstract: If we have a heuristic to guess some value cheaply, we can remove a data dependency in a tight loop using the branch predictor. This allows the CPU to run more instructions in parallel, increasing performance. If this explanation does not make much sense to you, keep reading to learn about some of the magic making your CPU fast!\n Per Vognsen\u2019s twitter feed is full of neat low-level curiosities, usually leveraging CPU features for some performance benefit.\n Recently he tweeted about a trick that I had never heard of \u2013 value speculation.  1 The trick exploits the branch predictor to guess values, enabling more instruction parallelism and therefore removing a bottleneck on the L1 cache. Note that the bottleneck is  not due to L1 cache misses, but on L1 cache  hits introducing unwanted data dependencies.\n Per, in turn, referenced  a blog post by Paul Khuong with a real-world example deploying this trick. Paul, in turn, references side-channel attacks. \u21a9\ufe0e\n In this post I explain the machinery involved, including a primer on branch prediction and CPU caches, so that anybody with a passing knowledge of C and how code is executed on CPUs should be able to follow.\n The code for the post is available  here. All the numbers are from a Xeon E5-1650 v3, an Intel Haswell processor with L1 / L2 / L3 cache of 32kB, 256kB, and 15MB respectively. The code was compiled with  clang -O3, and not with  gcc, for reasons explained  later.\n Before starting, I\u2019d like to stress that L1 cache  hits are almost certainly  not the bottleneck of your application! This is just a very neat trick that illuminates some CPU features, not a guide on how to improve the performance of your average piece of C code.\n  We have a simple linked list data type, and a function summing all the elements of a given linked list:\n typedef  struct Node  {    uint64_t value ;    struct Node  *next ;  // NULL for the last node   } Node ;     uint64_t sum1 (Node * node )  {    uint64_t value  =  0 ;    while  (node )  {   value  += node -&gt;value ;   node  = node -&gt;next ;    }    return value ;   }\n So far so good. Our test case works as follows: build a linked list where the nodes live sequentially in contiguous memory, then see how long it takes to sum them all up:\n // Allocate 5MB of linked list nodes, and link them sequentially, with   // random data in the `value`s.   uint64_t n  =  312500 llu ;  // 312500 * sizeof(Node) = 312500 * 16 bytes = 5000000 bytes  Node  *nodes  = malloc (n  *  sizeof (Node ));   for  ( uint64_t i  =  0 ; i  &lt; n  -  1 ; i ++)  {   nodes [i ].value  = random_uint64 ();   nodes [i ].next  =  &amp;nodes [i + 1 ];   }  nodes [n - 1 ].value  = random_uint64 ();  nodes [n - 1 ].next  = NULL ;     // Now sum.  sum1 (&amp;nodes [ 0 ]);\n On a server with a relatively old Xeon E5-1650 v3, running  sum1 with the sample data takes 0.36 milliseconds, which means that we\u2019re processing our linked list at roughly 14GB/s. In the rest of the post will will identify the bottleneck and get around it with value speculation, bringing the throughput for this dataset to 30GB/s.\n The impact of the fix varies depending on the size of the dataset. If it is already entirely in the CPU cache, the improvement is much more pronounced, since otherwise we are quickly constrained by how fast we can read data from RAM. This graph shows the performance improvement over differently sized datasets (higher is better):\n  The chart shows the performance of  sum1 together with the performance of three improved functions,  sum2,  sum3, and  sum4. We go from a throughput of 14GB/s in  sum1 to more than 40GB/s in  sum4 if the data fits entirely in the L1 cache (the 16kB dataset), with the performance decreasing slightly for datasets fitting in the L2 and L3 cache (128kB and 5MB datasets). If the dataset does not fit entirely in any CPU cache (~4GB dataset) we go from 10GB/s to 15GB/s, which is as fast as the RAM allows.  2\n See remarks in the  last section for more data on why I think 15GB/s is the limit without resorting to deeper changes. \u21a9\ufe0e\n  Modern CPUs do not process instructions serially, but rather handle many at the same time. They read many instructions at once, break them down in stages, and then try to fill all the computation units they have with as many tasks from as many instructions as possible.  3 For instance, modern Intel processors are designed for a throughput of 4 instructions per clock cycle, and AMD Zen processors for up to 5 or 6.  4\n However, branches pose a challenge when wanting to execute instructions in parallel. Let\u2019s go back to our function  sum1:\n To expand on this topic, you can start reading on  out-of-order execution and  pipelining. \u21a9\ufe0e\n Agner Fog\u2019s  microarchitecture document contains tons of details about the pipeline characteristics for Intel and AMD x86 processors. The numbers on throughput for each architecture are usually in the \u201cPipeline\u201d section. \u21a9\ufe0e\n uint64_t sum1 (Node * node )  {    uint64_t value  =  0 ;    while  (node )  {   value  += node -&gt;value ;   node  = node -&gt;next ;    }    return value ;   }\n  ; rdi = node and rax = value.   ; rax is the return value register (we&#39;re returning value)   sum1:    xor  rax ,  rax  ; value = 0    test  rdi ,  rdi  ; if node is NULL, exit, otherwise start loop    je end   loop:    add  rax ,  qword  ptr  [ rdi ]  ; value += node-&gt;value    mov  rdi ,  qword  ptr  [ rdi  +  8 ]  ; node = node-&gt;next    test  rdi ,  rdi  ; if node is not NULL, repeat loop,    jne loop  ; otherwise exit   end    ret\n The loop body is made out of 4 instructions, the last of which a jump. Without special measures, every instruction up to the  jne must be executed before proceeding to the next instruction, since we need to know if we\u2019ll go to the beginning of the loop or continue. In other words the conditional jump would introduce a barrier in the instruction level parallelism internal to the CPU.\n However, executing many instructions at once is so important that dedicated hardware \u2013 the  branch predictor \u2013 is present in all modern CPUs to make an educated guess on which way we\u2019ll go at every conditional jump. The details of how this works are beyond the scope of this blog post, but conceptually your CPU observes your program as it runs and tries to predict which branch will be taken by remembering what happened in the past.  5\n Apart from the ever useful Agner Fog (see Section 3 of the  microarchitecture document), Dan Luu has a  nice blogpost explaining less dryly various ways of performing branch prediction. \u21a9\ufe0e\n Even without knowing much about the branch prediction, we expect the predictor to do a great job for our test case \u2013 we always go back to the beginning of the loop apart from when we stop consuming the list. On Linux, we can verify that this is the case with  perf stat:\n  The branch predictor gets it right 99.96% of the time. So the CPU can parallelize our instructions with abandon, right? \u2026right?\n   ; rdi = node and rax = value.   loop:    add  rax ,  qword  ptr  [ rdi ]  ; value += node-&gt;value    mov  rdi ,  qword  ptr  [ rdi  +  8 ]  ; node = node-&gt;next    test  rdi ,  rdi  ; if node is not NULL, repeat loop,    jne loop  ; otherwise exit\n To increment  value ( rax), we need to know the value of  node ( rdi), which depends on the previous iteration of the loop. So there\u2019s a  data dependency between each iteration of the loop: we must have finished reading  node-&gt;next ( [rdi + 8]) at iteration  n before we can start executing the  add at iteration  n+1.\n Moreover, the  mov which loads the next value of  node is by far the slowest instruction in the loop.\n  Modern CPUs are a lot better at adding numbers than reading from memory. For this reason, a series of fast caches exist between the CPU and main memory. All reading and writing from main memory normally goes through the cache \u2013 if the data we are interested in is not already present, the CPU will load a chunk of memory (a \u201ccache line\u201d, 64 bytes on x86) which contains our desired data into the cache.  6 The fastest cache is usually called L1 (successive caching layers being predictably called L2, L3, \u2026).\n Our setup is the best-case scenario when it comes to CPU caches \u2013 we read a bunch of memory sequentially, utilizing every byte along the way. However, even if the L1 cache is very fast, it is not free: it takes around 4 CPU cycles to read from it in our  mov, compared to 1 CPU cycle for  add,  test, and  jne.  7\n So the number of cycles needed to go through a single loop iteration is bounded by the 4 cycles it takes to read from L1 cache. The data I get from the Xeon I tested the program with is roughly consistent with this:\n I say \u201cnormally\u201d because the cache can be avoided using streaming SIMD instructions, which can write or copy memory bypassing the cache. However these methods are opt-in, and by default all memory goes through the cache. \u21a9\ufe0e\n Again, Agner Fog\u2019s  page on performance is the best resource I could find to source these numbers. For example, if one wanted to find these numbers for a Haswell CPU:\n The numbers for  add,  test, and  jne are in the Haswell section of the  instruction tables.\n \u21a9\ufe0e\n 16kB, 10000 iterations sum1: 8465052097154389858, 1.12us, 14.25GB/s, 3.91 cycles/elem, 1.03 instrs/cycle, 3.48GHz, 4.01 instrs/elem128kB, 10000 iterations sum1: 6947699366156898439, 9.06us, 14.13GB/s, 3.95 cycles/elem, 1.01 instrs/cycle, 3.49GHz, 4.00 instrs/elem5000kB, 100 iterations sum1: 2134986631019855758, 0.36ms, 14.07GB/s, 3.96 cycles/elem, 1.01 instrs/cycle, 3.48GHz, 4.00 instrs/elem4294MB, 1 iterations sum1: 15446485409674718527, 0.43 s, 9.94GB/s, 5.60 cycles/elem, 0.71 instrs/cycle, 3.48GHz, 4.00 instrs/elem\n The important numbers are  cycles/elem and  instrs/cycle. We spend roughly 4 cycles per list element (that is to say, per loop iteration), corresponding to a throughput of roughly 1 instruction per cycle. Given that the CPU in question is designed for a throughput of 4 instructions per cycle, we\u2019re wasting a lot of the CPU magic at our disposal, because we\u2019re stuck waiting on the L1 cache.\n  We finally get to the trick. As discussed, we are stuck waiting on reading what the next node address is. However, in our setup we allocate the list in a contiguous block of memory, and therefore the nodes are always next to each other.\n So here\u2019s the key idea: try to guess the next node by just bumping the previous value. If the guess is wrong, set the node to the \u201creal\u201d next value. In C, this is how it would look like:\n uint64_t faster_sum (Node * node )  {    uint64_t value  =  0 ;   Node * next  = NULL ;    while  (node )  {   value  += node -&gt;value ;   next  = node -&gt;next ;    // Guess the next value   node ++;    // But fix it up if we guessed wrong (in case the nodes are not    // next to each other).    if  (node  != next )  {   node  = next ;    }    }    return value ;   }\n This looks quite bizarre. We are still reading  node-&gt;next in the comparison  node != next to make sure our guess is right. So at first glance this might not seem like an improvement.\n This is where the branch predictor comes in. In the case of lists where most nodes  are next to each other (as is the case in our test code), the branch predictor will guess that the  if (node != next) { ... } branch is not taken, and therefore we\u2019ll go through loop iterations without having to wait for the L1 read.\n Note that when the branch predictor  is wrong (for example when the list ends, or if we have non-contiguous nodes) the CPU will need to backtrack and re-run from the failed branch prediction, which is costly (15 to 20 cycles on our processor  8). However, if the list is mostly contiguous, the trick works and makes our function 50-200% faster.\n See \u201cMisprediction penalty\u201d for Haswell processor in Agner Fog\u2019s  microarchitecture document. \u21a9\ufe0e\n However there is one last challenge remaining to reach the final code and show you numbers \u2013 convincing compilers that our code is worth compiling.\n  Let\u2019s go back to the code we showed for value speculation in C:\n uint64_t faster_sum (Node * node )  {    uint64_t value  =  0 ;   Node * next  = NULL ;    while  (node )  {   value  += node -&gt;value ;   next  = node -&gt;next ;   node ++;    if  (node  != next )  {   node  = next ;    }    }    return value ;   }\n Both  gcc and  clang easily deduce that the guessing is semantically pointless, and compile our trick away, making the compiled version of  faster_sum the same as  sum1. This is an instance where the compiler smartness undoes human knowledge about the underlying platform we\u2019re compiling for.\n Per Vognsen\u2019s gist uses the following trick to get compilers to behave \u2013 this is the first improvement to our  sum1,  sum2:\n static  uint64_t sum2 (Node  *node )  {    uint64_t value  =  0 ;    while  (node )  {   value  += node -&gt;value ;   Node  *predicted_next  = node  +  1 ;   Node  *next  = node -&gt;next ;    if  (next  == predicted_next )  {    // Prevent compilers optimizing this apparently meaningless branch away    // by making them think we&#39;re changing predicted_next here.    //    // This trick, however, does not work with GCC, only with clang. GCC here    // derives that `next` and `predicted_next` are the same, and therefore    // merges them into the same variable, which re-introduces the data    // dependency we wanted to get rid of.   asm ( &#34;&#34;  :  &#34;+r&#34; (predicted_next ));   node  = predicted_next ;    }  else  {   node  = next ;    }    }    return value ;   }\n However  gcc still doesn\u2019t fully fall for it, as explained in the comment.  9 Moreover,  clang\u2019s generated loop is not as tight as it could, taking 10 instructions per element. So I resorted to manually writing out a better loop, which we\u2019ll call  sum3:  10\n This is why I stuck to  clang for this post. I don\u2019t know what compiler Per is using for his tests. \u21a9\ufe0e\n Here I show the assembly version in Intel syntax, but  in the code I write inline assembly, using AT&amp;T syntax since it is better supported. \u21a9\ufe0e\n ; rax = value, rcx = next, rdi = node   ; Note that rax is the return value register (we are returning the value)   sum3:    xor  rax ,  rax  ; value = 0    xor  rcx ,  rcx  ; next = NULL    test  rdi ,  rdi  ; if node is null, go to the end,    je end  ; otherwise start loop   loop_body:    add  rax ,  qword  ptr  [ rdi ]  ; value += node-&gt;value    mov  rcx ,  qword  ptr  [ rdi  +  8 ]  ; next = node-&gt;next    add  rdi ,  16  ; node++    cmp  rcx ,  rdi  ; if node is not equal to next,    jne assign_node  ; go to assign_node, otherwise    jmp loop_body  ; restart the loop   assign_node:    mov  rdi ,  rcx  ; node = next    test  rdi ,  rdi  ; if node is not null restart the loop,    jne loop_body  ; otherwise exit.   end:    ret\n The code relies on the fact that  node can\u2019t be  NULL after we increment it if it is equal to  next, avoiding an additional test, and taking only 6 instructions per element (from  loop_body to  assign_node). Finally,  sum4 is the same as  sum3, but with  loop_body unrolled 16 times.\n   16kB, 10000 iterations sum1: 8465052097154389858, 1.12us, 14.25GB/s, 3.91 cycles/elem, 1.03 instrs/cycle, 3.48GHz, 4.01 instrs/elem sum2: 8465052097154389858, 0.57us, 27.95GB/s, 1.99 cycles/elem, 5.02 instrs/cycle, 3.48GHz, 10.01 instrs/elem sum3: 8465052097154389858, 0.41us, 39.23GB/s, 1.42 cycles/elem, 4.23 instrs/cycle, 3.48GHz, 6.01 instrs/elem sum4: 8465052097154389858, 0.38us, 41.69GB/s, 1.34 cycles/elem, 3.80 instrs/cycle, 3.48GHz, 5.07 instrs/elem128kB, 10000 iterations sum1: 6947699366156898439, 9.06us, 14.13GB/s, 3.95 cycles/elem, 1.01 instrs/cycle, 3.49GHz, 4.00 instrs/elem sum2: 6947699366156898439, 4.75us, 26.95GB/s, 2.07 cycles/elem, 4.84 instrs/cycle, 3.48GHz, 10.00 instrs/elem sum3: 6947699366156898439, 3.85us, 33.23GB/s, 1.68 cycles/elem, 3.58 instrs/cycle, 3.48GHz, 6.00 instrs/elem sum4: 6947699366156898439, 3.36us, 38.14GB/s, 1.46 cycles/elem, 3.46 instrs/cycle, 3.49GHz, 5.06 instrs/elem5000kB, 100 iterations sum1: 2134986631019855758, 0.36ms, 14.07GB/s, 3.96 cycles/elem, 1.01 instrs/cycle, 3.48GHz, 4.00 instrs/elem sum2: 2134986631019855758, 0.19ms, 26.25GB/s, 2.12 cycles/elem, 4.71 instrs/cycle, 3.48GHz, 10.00 instrs/elem sum3: 2134986631019855758, 0.17ms, 28.69GB/s, 1.94 cycles/elem, 3.09 instrs/cycle, 3.48GHz, 6.00 instrs/elem sum4: 2134986631019855758, 0.16ms, 30.30GB/s, 1.84 cycles/elem, 2.76 instrs/cycle, 3.48GHz, 5.06 instrs/elem4294MB, 1 iterations sum1: 15446485409674718527, 0.43 s, 9.94GB/s, 5.60 cycles/elem, 0.71 instrs/cycle, 3.48GHz, 4.00 instrs/elem sum2: 15446485409674718527, 0.31 s, 13.64GB/s, 4.08 cycles/elem, 2.45 instrs/cycle, 3.48GHz, 10.00 instrs/elem sum3: 15446485409674718527, 0.29 s, 14.72GB/s, 3.77 cycles/elem, 1.59 instrs/cycle, 3.47GHz, 6.00 instrs/elem sum4: 15446485409674718527, 0.29 s, 15.02GB/s, 3.70 cycles/elem, 1.37 instrs/cycle, 3.47GHz, 5.06 instrs/elem\n   The first three datasets are meant to fit in the L1 / L2 / L3 cache. In those cases, the improvements are very pronounced, and  sum3 /  sum4 are crunching the data at around 4 instructions per second, which should be close to the limit on the processor I tested the code on. When the data does not fit in the cache, the bottleneck becomes filling it, and we process the data at roughly 15 GB/s.\n I believe that this is as fast as one can go with \u201csimple\u201d single-threaded reading from RAM, and it\u2019s consistent with data from  sysbench:\n  The RAM-reading speed could probably be improved using SIMD streaming instructions or by reading from multiple threads, although the implementation would be significantly more complicated.\n And so we complete our journey into this low-level trick! If you want more of this, I can\u2019t reccomend  Per\u2019s account enough \u2013 figuring out how his tricks works has been very educational.\n Thanks to  Alexandru Scvortov,  Niklas Hamb\u00fcchen, Alex Appetiti, and  Carter T Schonwald for reading drafts of this post. Niklas also clarified some details regarding RAM speeds, and suggested  sysbench to measure single threaded RAM reading speed in particular.", "posttime": "2021-07-24 07:22:44", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f13\u5b58,\u6295\u673a,l1,cpu", "title": "\u7528\u4ef7\u503c\u6295\u673a\u6253\u8d25 L1 \u7f13\u5b58", "title_en": "Beating the L1 cache with value speculation", "transed": 1, "url": "https://mazzo.li/posts/value-speculation.html", "via": "", "real_tags": ["\u7f13\u5b58", "\u6295\u673a", "l1", "cpu"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069358, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b63\u5982\u60a8\u6240\u60f3\u8c61\u7684\u90a3\u6837\uff0c\u60a8\u5728\u559c\u5267\u6e38\u620f\u4e2d\u53ef\u4ee5\u505a\u7684\u5f88\u591a\u4e8b\u60c5\u5728\u8bd5\u56fe\u4fdd\u6301\u4e25\u8083\u65f6\u90fd\u884c\u4e0d\u901a\u3002\u4f60\u4e0d\u80fd\u7528\u4e00\u6bb5\u6709\u8da3\u7684\u81ea\u6211\u53c2\u7167\u5bf9\u8bdd\u6765\u63a9\u76d6\u4e00\u4e2a\u7cdf\u7cd5\u7684\u8c1c\u9898\u3002\u5443\uff0c\u4e0d\u662f\u6211\u66fe\u7ecf\u8fd9\u6837\u505a\u8fc7\u3002\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u4fdd\u6301\u57fa\u8c03\u548c\u620f\u5267\u6027\u5f27\u7ebf\u7684\u5916\u89c2\u4e5f\u662f\u4e00\u4e2a\u6311\u6218\u3002\u53e6\u4e00\u4e2a\u6311\u6218\u662f\u6587\u5316\u2014\u2014\u6211\u4eec\u8bd5\u56fe\u5728\u4e00\u4e2a\u5176\u4ed6\u4eba\u90fd\u5728\u5236\u4f5c\u6709\u8da3\u7684\u6e38\u620f\u3001\u8bb2\u7b11\u8bdd\u548c\u975e\u5e38\u53e4\u602a\u7684\u73af\u5883\u4e2d\u5236\u4f5c\u8fd9\u6b3e\u6e38\u620f\u200b\u200b\u3002\u8fd9\u5c31\u50cf\u5728\u5bbf\u820d\u805a\u4f1a\u671f\u95f4\u8bd5\u56fe\u4e3a\u7269\u7406\u51b3\u8d5b\u8865\u4e60\u3002\u52a0\u5165\u515a\u4f1a\u5bb9\u6613\u5f97\u591a\u3002 1989 \u5e74 10 \u6708 17 \u65e5\uff0cLucasArts [1] LucasArts \u7684\u9ad8\u7ea7\u804c\u5458\u5728 1992 \u5e74\u590f\u5929\u4e4b\u524d\u88ab\u79f0\u4e3a Lucasfilm Games\u3002\u4e3a\u4e86\u907f\u514d\u6df7\u6dc6\uff0c\u6211\u5728\u672c\u6587\u4e2d\u4f7f\u7528\u4e86\u201cLucasArts\u201d\u8fd9\u4e2a\u540d\u79f0\u3002\u805a\u96c6\u5728\u5929\u884c\u8005\u7267\u573a\u7684\u4e3b\u5c4b\uff0c\u53c2\u52a0\u4ed6\u4eec\u7684\u5b9a\u671f\u89c4\u5212\u4f1a\u8bae\u4e4b\u4e00\u3002\u5728\u8bc9\u8bbc\u8fc7\u7a0b\u4e2d\uff0c\u51e0\u4e4e\u4ece\u4e00\u5f00\u59cb\u5c31\u5728\u5de5\u4f5c\u5ba4\u5de5\u4f5c\u7684\u8bbe\u8ba1\u5e08\u517c\u7a0b\u5e8f\u5458\u8bfa\u4e9a\u00b7\u6cd5\u5c14\u65af\u5766 (Noah Falstein) \u4e86\u89e3\u5230\uff0c\u4ed6\u5c06\u8d1f\u8d23\u4e00\u4e2a\u540d\u4e3a The Dig \u7684\u6fc0\u52a8\u4eba\u5fc3\u7684\u65b0\u9879\u76ee\uff0c\u8be5\u9879\u76ee\u6e90\u4e8e\u4e00\u4e2a\u5192\u9669\u6e38\u620f\u7684\u60f3\u6cd5\uff0c\u6b63\u662f\u53f2\u8482\u6587\u00b7\u65af\u76ae\u5c14\u4f2f\u683c (Steven Spielberg) \u5411 LucasArts \u5448\u73b0\u7684\u3002 Falstein \u56de\u5fc6\u8bf4\uff0c\u5904\u7406\u5b8c\u90a3\u4ef6\u4e8b\u540e\u4e0d\u4e45\uff0c\u201c\u6211\u4eec\u611f\u5230\u623f\u95f4\u5f00\u59cb\u9707\u52a8\u2014\u2014\u8fd9\u5e76\u4e0d\u5947\u602a\uff0c\u6211\u4eec\u5728\u52a0\u5229\u798f\u5c3c\u4e9a\u7ecf\u5386\u4e86\u591a\u6b21\u5730\u9707\u2014\u2014\u4f46\u7a81\u7136\u95f4\u5b83\u53d8\u5f97\u66f4\u52a0\u5f3a\u70c8\uff0c\u6211\u4eec\u5f00\u59cb\u542c\u5230\u6709\u4eba\u5c16\u53eb\uff0c\u6709\u7684\u73bb\u7483\u6389\u5230\u4e86\u5730\u677f\u4e0a\uff0c\u6211\u4eec\u5927\u591a\u6570\u4eba\u90fd\u6f5c\u5165\u7ea2\u6728\u4f1a\u8bae\u684c\u5e95\u4e0b\u8eb2\u907f\u3002\u201d\u8fd9\u662f\u6d1b\u9a6c\u666e\u5217\u5854\u5730\u9707\uff0c\u8fd9\u573a\u5730\u9707\u5c06\u9020\u6210 63 \u4eba\u6b7b\u4ea1\uff0c\u53e6\u5916 400 \u4eba\u53d7\u91cd\u4f24\uff0c\u5e76\u5728\u5317\u52a0\u5dde\u9020\u6210\u4e86\u65e0\u6570\u7684\u8d22\u4ea7\u635f\u5931\u3002\u6216\u8bb8 Falstein \u548c\u4ed6\u7684\u540c\u4e8b\u5e94\u8be5\u628a\u5b83\u5f53\u4f5c\u4e00\u4e2a\u9884\u5146\u3002 Dig \u5c06\u53d8\u6210\u4e00\u573a\u6162\u52a8\u4f5c\u7684\u60e8\u8d25\uff0c\u5728\u5b83\u7684\u91cd\u538b\u4e0b\u7c89\u788e\u4e86\u7ecf\u9a8c\u4e30\u5bcc\u7684\u6e38\u620f\u5f00\u53d1\u8005\uff0c\u5176\u52e4\u594b\u4e0e\u5730\u9707\u6467\u6bc1\u4e86\u5965\u514b\u5170\u7684\u5c3c\u7c73\u5179\u9ad8\u901f\u516c\u8def\u4e00\u6837\u3002 1995 \u5e74\u672b\uff0c\u5f53\u6e38\u620f\u7684\u5b8c\u6210\u7248\u672c\u6700\u7ec8\u51fa\u73b0\u5728\u5546\u5e97\u7684\u8d27\u67b6\u4e0a\u65f6\uff0c\u4e00\u4e2a\u76f8\u5f53\u7c97\u9c81\u7684\u95ee\u9898\u5c06\u96be\u4ee5\u907f\u514d\uff1a\u4f60\u82b1\u4e86\u516d\u5e74\u65f6\u95f4\u5236\u4f5c\u8fd9\u4e2a\uff1f\u4e3a\u4e86\u8bb2\u8ff0 LucasArts \u5386\u53f2\u4e0a\u6700\u8457\u540d\u7684\u9ebb\u70e6\u9879\u76ee The Dig \u7684\u5b8c\u6574\u6545\u4e8b\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u65f6\u95f4\u5f80\u56de\u62e8\u5f97\u66f4\u8fdc\uff1a\u4e00\u76f4\u8ffd\u6eaf\u5230 1980 \u5e74\u4ee3\u4e2d\u671f\uff0c\u5f53\u65f6\u53f2\u8482\u6587\u00b7\u65af\u76ae\u5c14\u4f2f\u683c (Steven Spielberg) \u5728\u50cf\u300a\u593a\u5b9d\u5947\u5175\u300b\u548c\u300aET\uff1a\u5916\u661f\u4eba\u300b\u7b49\u5927\u7247\u7684\u5b9e\u529b\u3002\u5728\u6b64\u671f\u95f4\uff0c\u4e5f\u5c31\u662f Prestige TV \u51fa\u73b0\u7684\u8bb8\u591a\u5e74\u524d\uff0c\u65af\u76ae\u5c14\u4f2f\u683c\u5411 NBC \u63d0\u51fa\u4e86\u4e00\u4e2a\u540d\u4e3a\u300aAmazing Stories\u300b\u7684\u65b0\u9009\u96c6\u7cfb\u5217\u7684\u63d0\u6848\uff0c\u4ee5\u5728 1930 \u5e74\u4ee3\u548c 1940 \u5e74\u4ee3\u6210\u4e3a\u5370\u5237\u79d1\u5e7b\u5c0f\u8bf4\u5b75\u5316\u5668\u7684\u4f4e\u4fd7\u6742\u5fd7\u547d\u540d\u3002\u4ed6\u627f\u8bfa\u5076\u5c14\u4f1a\u81ea\u5df1\u5bfc\u6f14\u4e00\u96c6\uff0c\u4f46\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ea\u4f1a\u629b\u51fa\u53ef\u4ee5\u7531\u5176\u4ed6\u7f16\u5267\u548c\u5bfc\u6f14\u53d8\u6210\u73b0\u5b9e\u7684\u5927\u7eb2\u3002\u5728\u90a3\u4e9b\u613f\u610f\u5bfc\u6f14\u5267\u96c6\u7684\u4eba\u4e2d\uff0c\u6709\u4e00\u4e9b\u597d\u83b1\u575e\u6700\u53d7\u5c0a\u656c\u7684\u7535\u5f71\u5236\u7247\u4eba\uff1a\u50cf\u9a6c\u4e01\u00b7\u65af\u79d1\u585e\u65af\u3001\u6b27\u6587\u00b7\u514b\u4ec0\u7eb3\u3001\u7f57\u4f2f\u7279\u00b7\u6cfd\u7c73\u5409\u65af\u548c\u514b\u6797\u7279\u00b7\u4f0a\u65af\u7279\u4f0d\u5fb7\u8fd9\u6837\u7684\u4eba\u3002\u81ea\u7136\u800c\u7136\u5730\uff0cNBC \u5c31\u65e0\u6240\u4e0d\u7528\u5176\u6781\u4e86\u3002\u5728 1980 \u5e74\u4ee3\u7684\u7535\u89c6\u4e0a\uff0c\u60a8\u65e0\u6cd5\u5e0c\u671b\u770b\u5230\u8fd9\u6837\u7684\u5927\u94f6\u5e55\u4eba\u624d\u540d\u5355\u3002\u65b0\u7cfb\u5217\u4e8e 1985 \u5e74 9 \u6708 29 \u65e5\u9996\u6b21\u4eae\u76f8\uff0c\u5927\u8086\u5ba3\u4f20\u3002\u4f46\u4e0d\u77e5\u4f55\u6545\uff0c\u5b83\u4ece\u672a\u51fa\u73b0\u5728\u300a\u795e\u5947\u6545\u4e8b\u300b\u4e2d\uff1b\u4ece\u7b2c\u4e00\u96c6\u5f00\u59cb\uff0c\u8bc4\u8bba\u5bb6\u548c\u516c\u4f17\u7684\u4e3b\u8981\u53cd\u5e94\u662f\u4e00\u79cd\u6a21\u7cca\u7684\u5931\u671b\u3002\u90e8\u5206\u95ee\u9898\u662f\u6bcf\u96c6\u7684\u64ad\u653e\u65f6\u95f4\u53ea\u6709\u534a\u5c0f\u65f6\uff0c\u5982\u679c\u8003\u8651\u5230\u5e7f\u544a\u548c\u5b57\u5e55\uff0c\u5219\u4e3a 22 \u5206\u949f\uff1b\u5728\u90a3\u5fae\u4e0d\u8db3\u9053\u7684\u65f6\u95f4\u91cc\uff0c\u6545\u4e8b\u6216\u89d2\u8272\u53d1\u5c55\u7684\u7a7a\u95f4\u4e0d\u5927\u3002\u4f46\u53e6\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\u662f\uff0c\u6545\u4e8b\u548c\u89d2\u8272\u901a\u5e38\u4e0d\u662f\u90a3\u4e48\u6709\u8da3\u6216\u539f\u521b\u3002\u65af\u76ae\u5c14\u4f2f\u683c\u4fe1\u5b88\u8bfa\u8a00\uff0c\u4f5c\u4e3a\u8be5\u5267\u7684\u521b\u610f\u4eba\uff0c\u4ed6\u4eb2\u81ea\u63d0\u4f9b\u4e86\u5df2\u5b8c\u6210\u7684 45 \u96c6\u7ea6 80% \u7684\u8d77\u6e90\uff0c\u4f46\u4ed6\u4e22\u5f03\u7684\u5927\u7eb2\u5f80\u5f80\u662f\u5bf9\u5176\u4ed6\u4eba\u5df2\u7ecf\u505a\u5f97\u66f4\u597d\u7684\u4e8b\u60c5\u7684\u7ffb\u7248\u3002\u5f53\u4ed6\u6709\u4e00\u4e2a\u4ed6\u771f\u6b63\u559c\u6b22\u7684\u60f3\u6cd5\u65f6\u2014\u2014\u6bd4\u5982\u5173\u4e8e\u4e00\u7fa4\u5fae\u578b\u5916\u661f\u4eba\u5e2e\u52a9\u5730\u7403\u4e0a\u516c\u5bd3\u697c\u7684\u5c45\u6c11\u89e3\u51b3\u4ed6\u4eec\u5728\u5730\u7403\u4e0a\u9047\u5230\u7684\u95ee\u9898\u2014\u2014\u4ed6\u503e\u5411\u4e8e\u5728\u5176\u4ed6\u5730\u65b9\u8d2d\u7269\u3002\u4f8b\u5982\uff0c\u4e0a\u8ff0\u60f3\u6cd5\u5bfc\u81f4\u4e86\u7535\u5f71\u4e0d\u5305\u62ec\u7535\u6c60\u3002\u5728\u7ecf\u5386\u4e86\u8bb8\u591a\u66f2\u6298\u4e4b\u540e\uff0c\u5c06\u6210\u4e3a\u7535\u8111\u6e38\u620f The Dig \u7684\u60c5\u8282\u521b\u610f\u4e0d\u5982\u90a3\u4e2a\u521b\u610f\u3002\u5b83\u6d89\u53ca\u4e00\u7ec4\u672a\u6765\u6d3e\u8003\u53e4\u5b66\u5bb6\u5728\u5e9f\u589f\u4e2d\u6316\u6398\u89c2\u4f17\u4f1a\u8ba4\u4e3a\u662f\u5931\u843d\u7684\u5916\u661f\u6587\u660e\u3002\u76f4\u5230\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u955c\u5934\u63ed\u5f00\u4e86\u5927\u5e55\uff1a\u8003\u53e4\u5b66\u5bb6\u53d1\u73b0\u7684\u5947\u602a\u96d5\u50cf\u5c06\u88ab\u8bc1\u660e\u662f\u7c73\u8001\u9f20\uff0c\u800c\u5176\u80cc\u540e\u7684\u5de8\u5927\u5efa\u7b51\u662f\u7761\u7f8e\u4eba\u57ce\u5821\u3002\u4ed6\u4eec\u6b63\u5728\u8fea\u65af\u5c3c\u4e50\u56ed\u6316\u6398\uff0c\u5c31\u5728\u5730\u7403\u4e0a\uff01\u8fd9\u91cc\u7684\u95ee\u9898\u662f\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u770b\u5230\u4e86\u6240\u6709\u8fd9\u4e00\u5207\uff0c\u6700\u660e\u663e\u7684\u662f\u5728\u4eba\u733f\u661f\u7403\u7684\u7ed3\u5c3e\uff0c\u5f53\u5b83\u81ea\u5df1\u7684\u4e09\u540d\u5b87\u822a\u5458\u88ab\u56f0\u5728\u81ea\u5df1\u660e\u663e\u7684\u5916\u661f\u4e16\u754c\u65f6\uff0c\u4ed6\u4eec\u81ea\u5df1\u7684\u9ad8\u6f6e\u5df2\u7ecf\u5230\u6765\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u81ea\u7531\u5973\u795e\u50cf\u7684\u4e00\u534a\u2014\u2014\u57cb\u5728\u6c99\u5b50\u91cc\u3002\u56e0\u6b64\uff0c\u5f53\u8fd9\u4e2a\u7279\u5b9a\u7684\u60f3\u6cd5\u88ab\u8ba4\u4e3a\u5bf9\u4e8e\u300a\u795e\u5947\u6545\u4e8b\u300b\u7684\u5236\u4f5c\u6210\u672c\u592a\u9ad8\u65f6\uff0c\u5bf9\u540e\u4ee3\u6765\u8bf4\u5e76\u6ca1\u6709\u592a\u5927\u7684\u635f\u5931\u3002\u4f46\u672a\u6765\u8003\u53e4\u5b66\u7684\u6838\u5fc3\u6982\u5ff5\u5361\u5728\u65af\u76ae\u5c14\u4f2f\u683c\u7684\u53e3\u4e2d\uff0c\u540e\u6765\u53c8\u5728\u4e00\u4e2a\u975e\u5e38\u4e0d\u540c\u7684\u80cc\u666f\u4e0b\u518d\u6b21\u63a8\u51fa\u3002\n\u4e0e\u6b64\u540c\u65f6\uff0c\u8be5\u8282\u76ee\u7684\u6536\u89c6\u7387\u8fc5\u901f\u4e0b\u964d\u3002\u4e24\u5b63\u7684\u521d\u59cb\u5408\u540c\u4e00\u5c65\u884c\u5b8c\u6bd5\uff0c\u300a\u60ca\u5929\u52a8\u5730\u7684\u6545\u4e8b\u300b\u5c31\u6084\u6084\u5730\u4ece\u7535\u6ce2\u4e2d\u6d88\u5931\u4e86\u3002\u5546\u4e1a\u5a92\u4f53\u6ca1\u6709\u4efb\u4f55\u4fdd\u8bc1\uff0c\u5373\u4f7f\u662f\u53f2\u8482\u6587\u65af\u76ae\u5c14\u4f2f\u683c\u7684\u70b9\u77f3\u6210\u91d1\uff0c\u8fd9\u6210\u4e3a\u4e00\u4e2a\u5ba2\u89c2\u7684\u6559\u8bad\u3002\u5feb\u8fdb\u51e0\u5e74\uff0c\u5f53\u65af\u76ae\u5c14\u4f2f\u683c\u4e0e\u4ed6\u7684\u597d\u670b\u53cb\u4e54\u6cbb\u5362\u5361\u65af\u5408\u4f5c\u5236\u4f5c\u4ed6\u6700\u65b0\u7684\u7535\u5f71\u5927\u7247\u5370\u7b2c\u5b89\u7eb3\u743c\u65af\u548c\u6700\u540e\u7684\u5341\u5b57\u519b\u65f6\uff0c\u4ed6\u6b63\u5904\u4e8e\u540e\u671f\u5236\u4f5c\u9636\u6bb5\u3002\u540e\u8005\u81ea\u5df1\u7684\u6e38\u620f\u5de5\u4f5c\u5ba4\u7684\u8bfa\u4e9a\u00b7\u6cd5\u5c14\u65af\u5766 (Noah Falstein) \u5df2\u88ab\u9009\u4e2d\u4e3a\u7535\u5f71\u8bbe\u8ba1\u4e00\u6b3e\u5192\u9669\u6e38\u620f\u3002\u5c3d\u7ba1\u65af\u76ae\u5c14\u4f2f\u683c\u6ca1\u6709\u81ea\u5df1\u7684\u6e38\u620f\u5de5\u4f5c\u5ba4\uff0c\u4f46\u8bbd\u523a\u7684\u662f\uff0c\u65af\u76ae\u5c14\u4f2f\u683c\u4e2a\u4eba\u5bf9\u7535\u8111\u6e38\u620f\u7684\u5174\u8da3\u8fdc\u8fdc\u8d85\u8fc7\u5362\u5361\u65af\u3002\u4ed6\u975e\u5e38\u5bc6\u5207\u5730\u5173\u6ce8 Falstein \u7684\u9879\u76ee\uff0c\u4ee5\u81f3\u4e8e\u5145\u5f53\u4e86\u4e00\u79cd\u975e\u5b98\u65b9\u7684 Beta \u6d4b\u8bd5\u5458\u3002\u5373\u4f7f\u5728\u7535\u5f71\u548c\u6e38\u620f\u4e0a\u6620\u540e\uff0c\u65af\u76ae\u5c14\u4f2f\u683c\u4e5f\u4f1a\u65f6\u4e0d\u65f6\u5730\u7ed9 LucasArts \u6253\u7535\u8bdd\uff0c\u4e3a\u4ed6\u4eec\u7684\u5176\u4ed6\u5192\u9669\u5bfb\u6c42\u7ebf\u7d22\uff0c\u6216\u8005\u6709\u65f6\u53ea\u662f\u4e3a\u4e86\u62cd\u62cd\u98ce\uff1b\u663e\u7136\uff0c\u4ed6\u5bf9\u5feb\u901f\u53d1\u5c55\u7684\u4e92\u52a8\u5a92\u4f53\u4e16\u754c\u5f88\u611f\u5174\u8da3\u3002\u5728\u5176\u4e2d\u4e00\u6b21\u8c08\u8bdd\u4e2d\uff0c\u4ed6\u8bf4\u4ed6\u6709\u4e00\u4e2a\u6982\u5ff5\uff0c\u5176\u8d77\u6e90\u53ef\u4ee5\u8ffd\u6eaf\u5230\u300a\u795e\u5947\u6545\u4e8b\u300b\uff0c\u4ed6\u8ba4\u4e3a\u8fd9\u4e2a\u6982\u5ff5\u53ef\u4ee5\u5f88\u597d\u5730\u7528\u4f5c\u6e38\u620f\u3002\u7136\u540e\u4ed6\u95ee\u4ed6\u662f\u5426\u53ef\u4ee5\u628a\u5b83\u5e26\u5230\u5929\u884c\u8005\u7267\u573a\u3002\u4ed6\u4e0d\u5fc5\u95ee\u4e24\u6b21\u3002\u65af\u76ae\u5c14\u4f2f\u683c\u6982\u8ff0\u7684\u6545\u4e8b\u4fdd\u7559\u4e86\u672a\u6765\u4e3b\u4e49\u8003\u53e4\u5b66\u4f5c\u4e3a\u5176\u6838\u5fc3\u4e3b\u9898\uff0c\u4f46\u660e\u667a\u5730\u653e\u5f03\u4e86\u7c73\u8001\u9f20\u7684\u9648\u8bcd\u6ee5\u8c03\u3002\u76f8\u53cd\uff0c\u8003\u53e4\u5b66\u5bb6\u5c06\u5728\u4e00\u4e2a\u771f\u6b63\u7684\u5916\u661f\u884c\u661f\u4e0a\uff0c\u53d1\u73b0\u65af\u76ae\u5c14\u4f2f\u683c\u8ba4\u4e3a\u662f\u5411 1950 \u5e74\u4ee3\u79d1\u5e7b\u7ecf\u5178\u300a\u7981\u5fcc\u661f\u7403\u300b\u81f4\u656c\u7684\u4e0d\u53ef\u601d\u8bae\u7684\u5148\u8fdb\u6280\u672f\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u4e2a\u522b\u8003\u53e4\u5b66\u5bb6\u4f1a\u53d8\u5f97\u4e0d\u4fe1\u4efb\u5e76\u6700\u7ec8\u76f8\u4e92\u5f00\u6218\uff1b\u8fd9\u90e8\u5206\u60c5\u8282\u8ba9\u4eba\u56de\u60f3\u8d77\u65af\u76ae\u5c14\u4f2f\u683c\u559c\u6b22\u7684\u53e6\u4e00\u90e8\u7535\u5f71\uff0c\u7ecf\u5178\u7684\u897f\u90e8\u9a6c\u5fb7\u96f7\u5c71\u8109\u7684\u5b9d\u85cf\u3002\u4ea4\u7ed9\u4f60\u4e86\uff0c\u8bfa\u4e9a\u00b7\u6cd5\u5c14\u65af\u5766\u2014\u2014\u5728\u5730\u9707\u5e26\u6765\u7684\u4e0d\u6109\u5feb\u7684\u4e8b\u60c5\u88ab\u629b\u5728\u8111\u540e\uff0c\u5c31\u662f\u8fd9\u6837\u3002 LucasArts \u7684\u529e\u516c\u5ba4\u91cc\u6324\u6ee1\u4e86\u5728\u300a\u661f\u7403\u5927\u6218\u300b\u548c\u300a\u5370\u7b2c\u5b89\u7eb3\u743c\u65af\u300b\u7684\u5723\u5730\u5d07\u62dc\u957f\u5927\u7684\u5e74\u8f7b\u4eba\uff0c\u73b0\u5728\u4ed6\u4eec\u53d1\u73b0\u81ea\u5df1\u5904\u4e8e\u5b8c\u5168\u51fa\u4e4e\u610f\u6599\u7684\u4f4d\u7f6e\uff0c\u6bcf\u5929\u90fd\u5728\u5929\u884c\u8005\u7267\u573a\u4e0a\u73ed\uff0c\u88ab\u4ed6\u4eec\u7684\u7eaa\u5ff5\u54c1\u5305\u56f4\u7740\u3002\u795e\uff0c\u6709\u65f6\u662f\u795e\u660e\u81ea\u5df1\u3002\u4ed6\u4eec\u4e0e\u795e\u5723\u63a5\u89e6\u7684\u6545\u4e8b\u603b\u662f\u5f88\u6709\u8da3\uff0c\u5c24\u5176\u662f\u56e0\u4e3a\u5b83\u4eec\u542c\u8d77\u6765\u66f4\u50cf\u662f\u65af\u76ae\u5c14\u4f2f\u683c\u7535\u5f71\u4e2d\u7684\u60c5\u8282\uff0c\u800c\u4e0d\u662f\u4efb\u4f55\u4f3c\u662f\u800c\u975e\u7684\u73b0\u5b9e\u3002\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u666e\u901a\u4e2d\u4ea7\u9636\u7ea7\u5b69\u5b50\u80af\u5b9a\u4e0d\u4f1a\u5076\u7136\u627e\u5230\u4e00\u4efd\u4e3a\u661f\u7403\u5927\u6218\u7b56\u5212\u8005\u5de5\u4f5c\u7684\u5de5\u4f5c\uff0c\u4e0d\u662f\u5417\uff1f\u597d\u5427\uff0c\u4e8b\u5b9e\u8bc1\u660e\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4ed6\u4eec\u786e\u5b9e\u5982\u6b64\u3002\u5f53\u65f6\u6709\u62b1\u8d1f\u7684 LucasArts \u6e38\u620f\u8bbe\u8ba1\u5e08 Dave Grossman \u51fa\u5e2d\u4e86\u4e0e\u65af\u76ae\u5c14\u4f2f\u683c\u7684\u540e\u7eed\u4f1a\u8bae\uff0c\u5176\u4e2d\u8fd8\u5305\u62ec Lucas\u3001Falstein \u548c Maniac Mansion \u548c Monkey Island \u540d\u4eba\u7684\u6e38\u620f\u8bbe\u8ba1\u5e08 Ron Gilbert\u3002\u4ed6\u7684\u63cf\u8ff0\u5982\u6b64\u7cbe\u5f69\u5730\u6355\u6349\u5230\u4e86\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6210\u4e3a\u4e00\u4e2a\u661f\u5149\u71a0\u71a0\u7684\u5e74\u8f7b\u4eba\u7684\u611f\u89c9\uff0c\u6211\u60f3\u5728\u8fd9\u91cc\u5b8c\u6574\u5f15\u7528\u5b83\u3002\u5929\u884c\u8005\u7684\u4e3b\u5c4b\u662f\u4e00\u4e2a\u975e\u5e38\u65f6\u9ae6\u7684\u5730\u65b9\uff0c\u4f1a\u8bae\u5728\u4e00\u4e2a\u6709\u706b\u8f66\u8f66\u53a2\u5927\u5c0f\u7684\u684c\u5b50\u7684\u4f1a\u8bae\u5ba4\u4e3e\u884c\uff0c\u684c\u5b50\u7531\u6a61\u6728\u6216\u6843\u82b1\u5fc3\u6728\u6216\u5176\u4ed6\u4e00\u4e9b\u6602\u8d35\u7684\u6728\u6750\u5236\u6210\u3002\u6211\u662f\u4e00\u4e2a\u70e6\u8e81\u7684\u5c0f\u5b69\uff0c\u8863\u670d\u5df2\u7ecf\u76b1\u5df4\u5df4\u7684\uff0c\u8fd9\u4e2a\u623f\u95f4\u8ba9\u6211\u89c9\u5f97\u5c31\u50cf\u8212\u8299\u857e\u91cc\u7684\u70df\u5934\u4e00\u6837\u683c\u683c\u4e0d\u5165\u3002\u6211\u53ea\u662f\u5728\u8fd9\u91cc\u6709\u70b9\u7d27\u5f20\u3002\u7136\u540e\u4e54\u6cbb\u548c\u53f2\u8482\u6587\u51fa\u73b0\u4e86\uff0c\u6211\u4eec\u90fd\u6253\u62db\u547c\u3002\u73b0\u5728\uff0c\u6211\u4e00\u76f4\u5f88\u9177\uff0c\u597d\u50cf\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff0c\u6211\u77e5\u9053\u4ed6\u4eec\u53ea\u662f\u50cf\u5176\u4ed6\u4eba\u4e00\u6837\u6253\u55b7\u568f\u548c\u653e\u4e0b\u53c9\u5b50\u7684\u4eba\uff0c\u4f46\u662f\u2026\u2026\u662f\u5362\u5361\u65af\u548c\u65af\u76ae\u5c14\u4f2f\u683c\uff01\u8fd9\u4e9b\u4eba\u662f\u6709\u540d\u7684\u3001\u6709\u6743\u52bf\u7684\u3001\u5bcc\u6709\u7684\uff0c\u867d\u7136\u4ed6\u4eec\u7684\u884c\u4e3a\u4e0d\u50cf\u90a3\u4e9b\u4e1c\u897f\uff0c\u4f46\u6211\u5b8c\u5168\u88ab\u5413\u5012\u4e86\u3002 \uff08\u6211\u5e94\u8be5\u63d0\u4e00\u4e0b\uff0c\u867d\u7136\u6b64\u65f6\u6211\u5df2\u7ecf\u4e3a\u4e54\u6cbb\u5de5\u4f5c\u4e86\u4e00\u5e74\u5de6\u53f3\uff0c\u4f46\u8fd9\u53ea\u662f\u6211\u7b2c\u4e8c\u6b21\u89c1\u5230\u4ed6\u3002\uff09\u6211\u610f\u8bc6\u5230\u6211\u73b0\u5728\u771f\u7684\u5f88\u7d27\u5f20\u3002\u4e54\u6cbb\u548c\u53f2\u8482\u6587\u4e92\u76f8\u95f2\u804a\u4e86\u4e00\u4f1a\u513f\u3002\u4ed6\u4eec\u5df2\u7ecf\u6210\u4e3a\u670b\u53cb\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u8fd9\u8868\u660e\u3002\u4e54\u6cbb\u4f3c\u4e4e\u7279\u522b\u5174\u594b\u5730\u544a\u8bc9\u53f2\u8482\u6587\u4ed6\u7684\u65b0\u8f66\uff0c\u6211\u8ba4\u4e3a\u662f\u4e00\u8f86\u8bb4\u6b4c\u2014\u2014\u5b83\u4eec\u751a\u81f3\u8fd8\u6ca1\u6709\u5411\u516c\u4f17\u5f00\u653e\uff0c\u4f46\u4ed6\u8bbe\u6cd5\u628a\u7b2c\u4e00\u8f86\u4ece\u8239\u4e0a\u5f04\u4e0b\u6765\uff0c\u800c\u4e14\u5b83\u5c31\u505c\u5728\u4e86\u5927\u697c\u524d\u7684\u663e\u773c\u5904.\n\u5f88\u5feb\u4ed6\u4eec\u5c31\u5f00\u59cb\u8c08\u8bba The Dig \u7684\u60f3\u6cd5\uff0c\u4ed6\u4eec\u662f\u521b\u610f\u7684\u5feb\u901f\u5c04\u51fb\u673a\u67aa\u3002\u663e\u7136\uff0c\u4ed6\u4eec\u7ecf\u5e38\u8fd9\u6837\u505a\u3002\u8fd9\u4e00\u5207\u90fd\u662f\u975e\u5e38\u9ad8\u7ea7\u7684\u6982\u5ff5\uff0c\u5e76\u4e14\u904d\u5e03\u6574\u4e2a\u5730\u56fe\uff0c\u6211\u4e0d\u77e5\u9053\u6211\u4eec\u5c06\u5982\u4f55\u5c06\u5176\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u5236\u4f5c\u6210\u6e38\u620f\uff0c\u4f46\u8fd9\u5c31\u662f\u5934\u8111\u98ce\u66b4\u4f1a\u8bae\u7684\u5168\u90e8\u5185\u5bb9\u3002\u7f57\u6069\u548c\u8bfa\u4e9a\u63d0\u51fa\u4e86\u4e00\u4e9b\u60f3\u6cd5\u3002\u6211\u81ea\u5df1\u4e5f\u6709\u4e00\u4e9b\uff0c\u4f46\u4e0d\u77e5\u4f55\u6545\uff0c\u6211\u89c9\u5f97\u81ea\u5df1\u6ca1\u6709\u8d44\u683c\u548c\u4ed6\u4eec\u6253\u4ea4\u9053\u3002\u6240\u4ee5\u6211\u5750\u4e0b\u6765\u503e\u542c\uff0c\u6e10\u6e10\u5730\uff0c\u6211\u7684\u7d27\u5f20\u548c\u6211\u4ec0\u4e48\u90fd\u6ca1\u8bf4\u7684\u5c34\u5c2c\u4e00\u8d77\u52a0\u5165\u4e86\u3002\u5982\u679c\u6211\u6ca1\u8bb0\u9519\u7684\u8bdd\uff0c\u4e3a\u805a\u4f1a\u63d0\u4f9b\u4e86\u5c0f\u5403\uff0c\u67d0\u79cd\u6613\u788e\u7684\u78b3\u6c34\u5316\u5408\u7269\u98df\u54c1\uff0c\u7389\u7c73\u9762\u5305\u3002\u6240\u4ee5\u6211\u62ff\u4e86\u4e00\u5757\u2014\u2014\u6211\u6709\u70b9\u997f\u4e86\uff0c\u5b83\u8ba9\u6211\u53ef\u4ee5\u7528\u6211\u7684\u624b\u505a\u70b9\u4ec0\u4e48\u3002\u6211\u54ac\u4e00\u53e3\u3002\u901a\u5e38\uff0c\u5929\u884c\u8005\u7267\u573a\u7684\u98df\u7269\u7edd\u5bf9\u4ee4\u4eba\u60ca\u53f9\uff0c\u4f46\u8fd9\u79cd\u7279\u6b8a\u7684\u7389\u7c73\u9762\u5305\u5df2\u7ecf\u505a\u5f97\u7279\u522b\u5e72\u4e86\u3002\u7c89\u7b14\u5e72\u3002\u6211\u7684\u5634\u5df2\u7ecf\u56e0\u4e3a\u7d27\u5f20\u800c\u5e72\u6e34\u4e86\uff0c\u6240\u4ee5\u6211\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u541e\u4e0b\u54ac\u8fc7\u7684\u4e1c\u897f\uff0c\u5f53\u6211\u5480\u56bc\u548c\u5482\u5634\u65f6\uff0c\u6211\u786e\u5b9a\u6211\u53d1\u51fa\u7684\u566a\u97f3\u6bd4\u7eb8\u4e0a\u7684\u5341\u4e8c\u53ea\u9ec4\u9f20\u72fc\u8fd8\u8981\u591a\u5305\uff0c\u5373\u4f7f\u6bcf\u4e2a\u4eba\u90fd\u5047\u88c5\u6ca1\u6709\u6ce8\u610f\u5230\u3002\u623f\u95f4\u91cc\u6709\u996e\u6599\uff0c\u4f46\u5b83\u4eec\u88ab\u653e\u5728\u4e86\u4e0d\u788d\u4e8b\u7684\u5730\u65b9\uff0c\u79bb\u6211\u4eec\u5750\u7684\u5730\u65b9\u5927\u7ea6\u56db\u5206\u4e4b\u4e00\u82f1\u91cc\uff0c\u6211\u4e0d\u80fd\u5728\u4e0d\u7834\u574f\u4e00\u5207\u7684\u60c5\u51b5\u4e0b\u8d77\u5e8a\u53bb\u62ff\uff0c\u6211\u6562\u80af\u5b9a\u73b0\u5728\u4e54\u6cbb\u548c\u53f2\u8482\u6587\u9996\u5148\u60f3\u77e5\u9053\u6211\u4e3a\u4ec0\u4e48\u8981\u53c2\u52a0\u4f1a\u8bae\u3002\u6211\u60f3\u653e\u5f03\u7389\u7c73\u9762\u5305\uff0c\u4f46\u5b83\u5df2\u7ecf\u5f00\u59cb\u5206\u5d29\u79bb\u6790\uff0c\u6211\u4e0d\u80fd\u628a\u5b83\u653e\u5728\u6211\u7684\u5c0f\u9910\u5dfe\u7eb8\u4e0a\u800c\u4e0d\u4f1a\u628a\u5b83\u5f04\u5f97\u4e00\u56e2\u7cdf\u3002\u6240\u4ee5\u6211\u628a\u6574\u5757\u90fd\u5403\u4e86\u3002\u5927\u7ea6\u9700\u8981\u4e8c\u5341\u5206\u949f\u3002\u6211\u81ea\u5df1\u8eab\u4e0a\u6ee1\u662f\u7ec6\u788e\u7684\u788e\u5c51\uff0c\u4f46\u81f3\u5c11\u534e\u4e3d\u7684\u684c\u5b50\u4e0a\u6ca1\u6709\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8d4c\u6ce8\u76f8\u5f53\u9ad8\u3002\u56e0\u4e3a\u6211\u6c89\u9ed8\u4e86\u8fd9\u4e48\u4e45\uff0c\u5149\u662f\u6211\u8bf4\u51fa\u6765\u5c31\u662f\u4e00\u4ef6\u503c\u5f97\u6ce8\u610f\u7684\u4e8b\u60c5\uff0c\u6211\u6240\u8bf4\u7684\u4efb\u4f55\u4e8b\u60c5\u90fd\u5fc5\u987b\u7b26\u5408\u90a3\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u6807\u51c6\u3002\u4f60\u4e0d\u80fd\u7528\u4e00\u6b21\u6027\u7684\u8bc4\u8bba\u6253\u7834\u957f\u65f6\u95f4\u7684\u6c89\u9ed8\uff0c\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u6c89\u91cd\u7684\u3001\u4ee4\u4eba\u60ca\u53f9\u7684\u89c2\u5bdf\uff0c\u8ba9\u623f\u95f4\u91cc\u7684\u6bcf\u4e2a\u4eba\u90fd\u5728\u5b83\u7684\u5149\u8292\u4e2d\u91cd\u65b0\u5ba1\u89c6\u81ea\u5df1\u3002\u5f53\u6211\u5728\u7b49\u5f85\u4e00\u4e2a\u597d\u7684\u60f3\u6cd5\u65f6\uff0c\u66f4\u591a\u7684\u65f6\u95f4\u6d41\u901d\u5e76\u63d0\u9ad8\u4e86\u6807\u51c6\u3002\u6211\u5728\u4f1a\u8bae\u5269\u4e0b\u7684\u65f6\u95f4\u91cc\u51e0\u4e4e\u5b8c\u5168\u762b\u75ea\uff0c\u8bd5\u56fe\u5f04\u6e05\u695a\u5982\u4f55\u5728\u6ca1\u6709\u4eba\u6ce8\u610f\u5230\u7684\u60c5\u51b5\u4e0b\u79bb\u5f00\u623f\u95f4\uff0c\u6216\u8005\u66f4\u597d\u7684\u662f\uff0c\u6211\u5982\u4f55\u53ca\u65f6\u8fd4\u56de\u5e76\u5b89\u6392\u4e0d\u5728\u90a3\u91cc\u9996\u5148\u3002\u6240\u4ee5\uff0c\u662f\u7684\uff0c\u5728\u6211\u4eec\u5236\u4f5c The Dig \u65f6\uff0c\u6211\u786e\u5b9e\u5728\u6280\u672f\u4e0a\u4e0e\u53f2\u8482\u6587\u65af\u76ae\u5c14\u4f2f\u683c\u9762\u5bf9\u9762\u8fc7\u4e00\u6b21\u3002\u540e\u6765\u6211\u5b9e\u9645\u4e0a\u548c\u4ed6\u8c08\u8fc7\uff0c\u5f53\u4ed6\u6253\u7535\u8bdd\u7ed9\u6211\u4eec\u5176\u4ed6\u6e38\u620f\u7684\u63d0\u793a\u65f6\uff08\u6211\u8ba4\u4e3a\u662f\u89e6\u624b\u4e4b\u65e5\uff09\uff0c\u4ed6\u6b63\u5728\u548c\u4ed6\u7684\u513f\u5b50\u73a9\u3002 \uff08\u6210\u4e3a\u8457\u540d\u7535\u5f71\u5236\u4f5c\u4eba\u7684\u9c9c\u4e3a\u4eba\u77e5\u7684\u597d\u5904\u4e4b\u4e00\u662f\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u4e0e\u6e38\u620f\u8bbe\u8ba1\u5e08\u4ea4\u8c08\u4ee5\u83b7\u53d6\u63d0\u793a\uff0c\u800c\u4e0d\u662f\u62e8\u6253\u63d0\u793a\u7ebf\u3002\uff09 \u597d\u4eba\u3002\u7535\u8111\u6e38\u620f\u754c\u5bf9\u65af\u76ae\u5c14\u4f2f\u683c\u53c2\u4e0e The Dig \u7684\u53cd\u5e94\u4e0e\u6234\u592b\u683c\u7f57\u65af\u66fc\u5728\u8fd9\u6b21\u4f1a\u8bae\u4e0a\u7684\u884c\u4e3a\u76f8\u4f3c\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4e00\u4e9b\u5927\u80c6\u7684\u884c\u4e1a\u6284\u5199\u5458\u5f00\u59cb\u79f0\u6e38\u620f\u662f\u4e00\u79cd\u6bd4\u7535\u5f71\u66f4\u4ee4\u4eba\u5174\u594b\u7684\u5a92\u4ecb\uff0c\u7531\u4e8e\u7279\u6b8a\u7684\u4ea4\u4e92\u6027\u800c\u6ce8\u5b9a\u4f1a\u66f4\u53d7\u6b22\u8fce\uff0c\u5305\u56f4 The Dig \u7684\u5a92\u4f53\u4f1a\u6beb\u4e0d\u7559\u60c5\u5730\u660e\u786e\u6307\u51fa\u5b83\u4eec\u7684\u80a4\u6d45\u865a\u5f20\u58f0\u52bf\uff0c\u6e38\u620f\u7684\u81ea\u5351\u611f\u5230\u5e95\u6709\u591a\u6df1\uff1a\u65af\u76ae\u5c14\u4f2f\u683c\u7684\u540d\u5b57\u80af\u5b9a\u4f1a\u51fa\u73b0\u5728\u6bcf\u4e2a\u5e7f\u544a\u3001\u9884\u89c8\u6216\u6700\u7ec8\u8bc4\u8bba\u7684\u7b2c\u4e00\u6bb5\u3002 \u201c\u53f2\u8482\u6587\u00b7\u65af\u76ae\u5c14\u4f2f\u683c\uff08Steven Spielberg\uff09\u5c48\u5c0a\u8868\u73b0\u51fa\u5bf9\u5c0f\u8001\u6211\u4eec\u7684\u5174\u8da3\uff01\u201d\u8fd0\u884c\u9690\u5f0f\u6d88\u606f\u3002\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u7092\u4f5c\u4e0e\u4ed6\u7684\u5b9e\u9645\u8d21\u732e\u6709\u70b9\u4e0d\u6210\u6bd4\u4f8b\u3002\u5728\u4e3a\u6e38\u620f\u63d0\u4f9b\u4e86\u6700\u521d\u7684\u60f3\u6cd5\u4e4b\u540e\u2014\u2014\u8fd9\u4e2a\u60f3\u6cd5\u4f1a\u5728\u6e38\u620f\u53d1\u5e03\u65f6\u53d8\u5f97\u65e0\u6cd5\u8bc6\u522b\u2014\u2014\u65af\u76ae\u5c14\u4f2f\u683c\u7ee7\u7eed\u8ba9\u81ea\u5df1\u5076\u5c14\u8fdb\u884c\u54a8\u8be2\uff1b\u5728\u5927\u7ea6 18 \u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0c\u4ed6\u4f1a\u89c1\u4e86 Falstein \u548c\u4ed6\u7684\u540c\u4e8b\u8fdb\u884c\u4e86\u56db\u6b21\u5934\u8111\u98ce\u66b4\uff0c\u5176\u4e2d\u4e24\u6b21\u8fd8\u5305\u62ec\u4ed6\u7684\u597d\u53cb\u4e54\u6cbb\u5362\u5361\u65af\u3002 \uff08\u6beb\u65e0\u7591\u95ee\uff0c\u591a\u4e8f\u4e86\u4ed6\u670b\u53cb\u7684\u9f13\u52b1\uff0c\u5362\u5361\u65af\u81ea\u5df1\u53c2\u4e0e\u4e86 The Dig \u7684\u8fc7\u7a0b\u5c31\u50cf\u4ed6\u5728\u4ed6\u7684\u6e38\u620f\u5de5\u4f5c\u5ba4\u7684\u4f5c\u54c1\u4e2d\u6240\u505a\u7684\u4e00\u6837\u3002\uff09\u7136\u800c\uff0c\u8fd9\u4e9b\u5bf9\u8bdd\u662f\u5426\u5177\u6709\u771f\u6b63\u7684\u5b9e\u9645\u7528\u9014\u8fd8\u4e0d\u592a\u6e05\u695a\u7ed9\u5728\u6218\u58d5\u91cc\u7684\u5f00\u53d1\u5546\u3002\u663e\u7136\uff0c\u65af\u76ae\u5c14\u4f2f\u683c\u548c\u5362\u5361\u65af\u90fd\u4e0d\u662f\u6e38\u620f\u8bbe\u8ba1\u5e08\uff0c\u56e0\u6b64\u4ed6\u4eec\u503e\u5411\u4e8e\u5173\u6ce8\u53ef\u80fd\u4ea7\u751f\u53ef\u89c2\u770b\u7535\u5f71\u4f46\u5bf9\u5236\u4f5c\u53ef\u73a9\u6e38\u620f\u5e2e\u52a9\u4e0d\u5927\u7684\u4e1c\u897f\u3002\u8bfa\u4e9a\u00b7\u6cd5\u5c14\u65af\u5766 (Noah Falstein) \u5f88\u5feb\u53d1\u73b0\uff0c\u9886\u5bfc\u4e00\u4e2a\u6d89\u53ca\u4e24\u4e2a\u5982\u6b64\u5f15\u4eba\u6ce8\u76ee\u7684\u4eba\u7269\u7684\u9879\u76ee\u5e76\u4e0d\u50cf\u4ed6\u60f3\u8c61\u7684\u90a3\u6837\u4ee4\u4eba\u7fa1\u6155\u3002\u6b64\u540e\uff0c\u4ed6\u8c28\u614e\u5730\u63cf\u8ff0\u4e86\u4e00\u4e2a\u9879\u76ee\uff0c\u201c\u6bcf\u4e2a\u4eba\u90fd\u60f3\u6295\u5165\u4e24\u5206\u94b1\uff0c\u8fd9\u53ef\u80fd\u975e\u5e38\u96be\u4ee5\u7ba1\u7406\u3002\u201d\n\u5728\u5bfb\u6c42\u4e00\u6b3e\u53ef\u4ee5\u5728 SCUMM\uff08LucasArts \u7684\u5185\u90e8\u70b9\u51fb\u5f0f\u5192\u9669\u5f15\u64ce\uff09\u7684\u9650\u5236\u8303\u56f4\u5185\u5b9e\u65bd\u7684\u6e38\u620f\u65f6\uff0cFalstein \u524a\u5f31\u4e86\u65af\u76ae\u5c14\u4f2f\u683c\u5173\u4e8e\u4e24\u652f\u8003\u53e4\u5b66\u5bb6\u56e2\u961f\u76f8\u4e92\u5c55\u5f00\u516c\u5f00\u6218\u4e89\u7684\u60f3\u6cd5\u3002\u4ed6\u7684\u6700\u7ec8\u8bbe\u8ba1\u6587\u4ef6\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u662f\u5728 1991 \u5e74 1 \u6708 30 \u65e5\uff0c\u5b83\u53d1\u751f\u5728\u201c\u672a\u6765\uff0c\u8ddd\u9ea6\u57fa\u5229\u666e\u9a71\u52a8\u5668\u4f7f\u8d85\u5149\u901f\u65c5\u884c\u6210\u4e3a\u53ef\u80fd\u8fd1 80 \u5e74\uff0c\u4ee5\u53ca\u7b2c\u4e00\u4e2a\u661f\u9645\u6b96\u6c11\u5730\u6210\u7acb\u4ec5 50 \u5e74\u3002\u518d\u6b21\u5411\u65af\u76ae\u5c14\u4f2f\u683c\u7684\u65e7\u300a\u795e\u5947\u6545\u4e8b\u300b\u5927\u7eb2\u81f4\u656c\uff0c\u4e00\u4e2a\u65e0\u4eba\u63a2\u6d4b\u5668\u6700\u8fd1\u53d1\u73b0\u4e86\u4e00\u5ea7\u5de8\u5927\u7684\u96d5\u50cf\uff0c\u8038\u7acb\u5728\u4e00\u4e2a\u8fc4\u4eca\u4e3a\u6b62\u5c1a\u672a\u63a2\u7d22\u8fc7\u7684\u661f\u7403\u8868\u9762\u7684\u5176\u4ed6\u5916\u661f\u5e9f\u589f\u4e2d\u3002\u4e3a\u4e86\u5411\u73c0\u897f\u96ea\u83b1\u6700\u8457\u540d\u7684\u8bd7\u81f4\u656c\uff0c\u8fd9\u4e2a\u661f\u7403\u88ab\u547d\u540d\u4e3a\u5965\u5179\u66fc\u8fea\u4e9a\u65af\u3002\u73b0\u5728\u4e09\u4e2a\u4eba\u6765\u5230\u5965\u5179\u66fc\u8fea\u4e9a\u65af\u8c03\u67e5\u63a2\u6d4b\u5668\u7684\u53d1\u73b0\u2014\u2014\u4f46\u4ed6\u4eec\u4e0d\u518d\u662f\u771f\u6b63\u7684\u8003\u53e4\u5b66\u5bb6\uff0c\u53ea\u662f\u673a\u4f1a\u4e3b\u4e49\u7684\u5bfb\u5b9d\u8005\uff0c\u7531\u4e00\u4e2a\u540d\u53eb\u6c64\u59c6\u5c11\u6821\u7684\u7c97\u7565\u89d2\u8272\uff08\u5927\u6982\u662f\u5bf9\u5927\u536b\u9c8d\u4f0a\u7684\u70b9\u5934\uff09\u9886\u5bfc\u3002\u73a9\u5bb6\u53ef\u4ee5\u9009\u62e9\u6c64\u59c6\u5c11\u6821\u7684\u4e24\u4e2a\u4e0b\u5c5e\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4f5c\u4e3a\u5979\u7684\u5316\u8eab\u3002\u5728\u4eba\u7c7b\u7740\u9646\u540e\u4e0d\u4e45\uff0c\u4e00\u7cfb\u5217\u4e0d\u5e78\u7684\u4e8b\u4ef6\u63a5\u8e35\u800c\u81f3\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u6c64\u59c6\u5c11\u6821\u88ab\u6740\uff0c\u4ed6\u4eec\u7684\u98de\u8239\u53d7\u635f\uff0c\u65e0\u6cd5\u4fee\u590d\u3002\u4e24\u4e2a\u5e78\u5b58\u8005\u53d1\u751f\u4e89\u6267\uff0c\u5404\u5954\u4e1c\u897f\uff0c\u4f46\u5728\u8fd9\u4e2a\u7248\u672c\u7684\u5267\u672c\u4e2d\uff0c\u4ed6\u4eec\u662f\u51b7\u6218\u800c\u4e0d\u662f\u70ed\u6218\u3002\u968f\u7740\u6e38\u620f\u7684\u8fdb\u884c\uff0c\u73a9\u5bb6\u53d1\u73b0\u751f\u6d3b\u5728\u5e9f\u589f\u4e2d\u7684\u4e00\u4e2a\u539f\u59cb\u5916\u661f\u4eba\u79cd\u65cf\u5b9e\u9645\u4e0a\u662f\u66f4\u5148\u8fdb\u7684\u7956\u5148\u7684\u540e\u4ee3\uff0c\u4ed6\u4eec\u5f88\u4e45\u4ee5\u524d\u6467\u6bc1\u4e86\u4ed6\u4eec\u7684\u6587\u660e\uff0c\u5e76\u7528\u5185\u5728\u7684\u7ec6\u83cc\u6218\u51e0\u4e4e\u6d88\u706d\u4e86\u4ed6\u4eec\u7684\u6574\u4e2a\u7269\u79cd\u3002\u4f46\u662f\uff0c\u73a9\u5bb6\u7ee7\u7eed\u5b66\u4e60\uff0c\u4e24\u4e2a\u6d3e\u7cfb\u7684\u5e78\u5b58\u8005\u90fd\u5728\u5730\u7403\u8868\u9762\u4e0b\u7684\u4f4e\u6e29\u7761\u7720\u4e2d\u8fdb\u884c\u4e86\u4e16\u754c\u672b\u65e5\u7684\u6700\u540e\u6218\u4e89\u3002\u5979\u7684\u6700\u7ec8\u76ee\u6807\u662f\u5524\u9192\u8fd9\u4e9b\u5e78\u5b58\u8005\u5e76\u5728\u4ed6\u4eec\u4e4b\u95f4\u534f\u5546\u548c\u5e73\uff0c\u8fd9\u65e2\u662f\u56e0\u4e3a\u8fd9\u662f\u6b63\u786e\u7684\u505a\u6cd5\uff0c\u4e5f\u662f\u56e0\u4e3a\u8fd9\u4e9b\u5916\u661f\u4eba\u5e94\u8be5\u62e5\u6709\u4fee\u7406\u635f\u574f\u7684\u5b87\u5b99\u98de\u8239\u6240\u9700\u7684\u77e5\u8bc6\u548c\u5de5\u5177\u3002\u65e0\u8bba\u597d\u574f\uff0c\u8fd9\u4e2a\u7cbe\u7b80\u4f46\u4ecd\u7136\u96c4\u5fc3\u52c3\u52c3\u7684 The Dig \u613f\u666f\u4ece\u672a\u8d85\u51fa\u6700\u7ec8\u8bbe\u8ba1\u6587\u4ef6\u548c\u5927\u91cf\u4f34\u968f\u7684\u6982\u5ff5\u827a\u672f\u53d1\u5c55\u3002 \u201c\u5728\u5176\u4e2d\u4e00\u4e2a\u66f4\u6709\u8da3\u7684\u8c1c\u9898\u4e0a\u8fdb\u884c\u4e86\u4e00\u4e9b SCUMM \u7f16\u7a0b\uff0c\u4f46\u4e0d\u591a[\u66f4\u591a]\uff0c\u201dFalstein \u8bf4\u3002\u4ed6\u5728 1991 \u5e74\u5f88\u65e9\u5c31\u9000\u51fa\u4e86\u8fd9\u4e2a\u9879\u76ee\uff0c\u8f6c\u800c\u5e2e\u52a9\u54c8\u5c14\u00b7\u5df4\u4f0d\u5fb7\u5904\u7406\u5370\u7b2c\u5b89\u7eb3\u00b7\u743c\u65af\u548c\u4e9a\u7279\u5170\u8482\u65af\u7684\u547d\u8fd0\u3002\u5f53\u4ed6\u7684\u7b2c\u4e8c\u573a\u5370\u7b2c\u5b89\u7eb3\u743c\u65af\u6bd4\u8d5b\u7ed3\u675f\u65f6\uff0c\u5c3d\u7ba1\u4ed6\u6709\u7740\u957f\u671f\u4e14\u582a\u79f0\u5178\u8303\u7684\u8bb0\u5f55\uff0c\u4f46\u4ed6\u8fd8\u662f\u88ab\u89e3\u96c7\u4e86\u3002\u4e0e\u6b64\u540c\u65f6\uff0cThe Dig \u9677\u5165\u4e86\u4e00\u5e74\u6216\u66f4\u957f\u65f6\u95f4\u7684\u56f0\u5883\uff0c\u76f4\u5230\u5b83\u88ab\u4f20\u7ed9\u4e86 Brian Moriarty\uff0c\u4ed6\u662f 1980 \u5e74\u4ee3\u6587\u672c\u5192\u9669\u5de8\u5934 Infocom \u548c LucasArts \u81ea\u5df1\u53ef\u7231\u6292\u60c5\u7684 Loom \u7684\u4e09\u6b3e\u6e38\u620f\u7684\u4f5c\u5bb6\u548c\u8bbe\u8ba1\u5e08\u3002\u6700\u8fd1\uff0c\u4ed6\u4e00\u76f4\u5728\u4e3a\u4e00\u6b3e\u57fa\u4e8e\u300a\u5e74\u8f7b\u7684\u5370\u7b2c\u5b89\u7eb3\u743c\u65af\u7f16\u5e74\u53f2\u300b\u7684\u6e38\u620f\u8d77\u8349\u8ba1\u5212\uff0c\u8fd9\u662f\u65af\u76ae\u5c14\u4f2f\u683c\u6700\u8fd1\u4e00\u6b21\u4ee4\u4eba\u5931\u671b\u5730\u6d89\u8db3\u7535\u89c6\u9886\u57df\uff0c\u4f46\u7531\u4e8e\u4e2a\u4eba\u5bf9\u8be5\u9879\u76ee\u7f3a\u4e4f\u70ed\u60c5\uff0c\u5bfc\u81f4\u8fdb\u5c55\u4ee4\u4eba\u6cae\u4e27\u3002 Moriarty \u88ab\u79f0\u4e3a\u6c14\u8d28\u6700\u201c\u6587\u5b66\u201d\u7684\u6e38\u620f\u8bbe\u8ba1\u5e08\u4e4b\u4e00\uff1b\u4ed6\u5728 Infocom \u7684\u8001\u540c\u4e8b\u79f0\u4ed6\u4e3a\u201c\u83ab\u91cc\u4e9a\u8482\u6559\u6388\u201d\uff0c\u4e0e\u5176\u8bf4\u662f\u5bf9\u798f\u5c14\u6469\u65af\u6240\u5904\u7684\u73af\u5883\uff0c\u4e0d\u5982\u8bf4\u662f\u5bf9\u4ed6\u7684\u4e00\u822c\u6027\u60c5\u7684\u8ba4\u53ef\u3002\u4e8b\u5b9e\u4e0a\uff0c\u4ed6\u7684\u300a\u4e09\u4f4d\u4e00\u4f53\u300b\u63a5\u8fd1\u4e8e Infocom \u51fa\u7248\u7684\u9ad8\u7ea7\u6587\u5b66\u4f5c\u54c1\uff0c\u800c\u4ed6\u7684 Loom \u51e0\u4e4e\u62e5\u6709\u540c\u6837\u4ee4\u4eba\u96be\u4ee5\u5fd8\u6000\u7684\u7f8e\u3002\u6709\u7406\u7531\u8ba4\u4e3a\u81ea\u5df1\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u4e92\u52a8\u5f0f\u5bfc\u6f14\uff0c\u4ed6\u8981\u6c42\u5b8c\u5168\u63a7\u5236 The Dig \u7684\u5404\u4e2a\u65b9\u9762\uff0c\u4f5c\u4e3a\u63a5\u53d7\u5b83\u7684\u6761\u4ef6\u3002 LucasArts \u7684\u7ba1\u7406\u5c42\u627f\u8ba4\u4e86\u4ed6\u7684\u5353\u8d8a\u58f0\u8a89\u3002 Moriarty \u5728 The Dig \u4e0a\u82b1\u8d39\u7684 18 \u4e2a\u6708\u671f\u95f4\u53d1\u751f\u7684\u5927\u90e8\u5206\u4e8b\u60c5\u4ecd\u7136\u6a21\u7cca\u4e0d\u6e05\uff0c\u4f46\u5b83\u663e\u7136\u53d8\u6210\u4e86\u4e00\u4e2a\u975e\u5e38\u9ebb\u70e6\u3001\u6fc0\u70c8\u7684\u9879\u76ee\u3002\u4ed6\u5bf9 Falstein \u7684\u613f\u666f\u8fdb\u884c\u4e86\u6982\u62ec\u6027\u5206\u7c7b\uff0c\u8fd9\u8ba9\u4ed6\u4e0e\u56e2\u961f\u4e2d\u7684\u8bb8\u591a\u4eba\u8d70\u9519\u4e86\u8def\u2014\u2014\u4ed6\u4eec\u559c\u6b22\u751a\u81f3\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u79ef\u6781\u8d21\u732e\u4e86\u8fd9\u4e00\u613f\u666f\u3002\u76f8\u53cd\uff0c\u4ed6\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u6846\u67b6\u60c5\u8282\u3002 The Dig \u73b0\u5728\u53d1\u751f\u5728 1998 \u5e74\uff0c\u800c\u4e0d\u662f\u9065\u8fdc\u7684\u672a\u6765\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u7684\u5f00\u5934\u5c06\u7a81\u51fa\u5c55\u793a\u4e9a\u7279\u5170\u8482\u65af\u53f7\uff0c\u8fd9\u662f\u4e00\u8258\u76ee\u524d\u7531\u7f8e\u56fd\u5b87\u822a\u5c40\u9a7e\u9a76\u7684\u822a\u5929\u98de\u673a\u3002\u4e00\u9897\u5de8\u5927\u7684\u5c0f\u884c\u661f\u6b63\u5728\u4e0e\u5730\u7403\u53d1\u751f\u78b0\u649e\u3002\u4eba\u7c7b\u552f\u4e00\u7684\u5e0c\u671b\u662f\u5728\u592a\u7a7a\u4e0e\u5b83\u76f8\u9047\u5e76\u5728\u5176\u8868\u9762\u5b89\u653e\u4e00\u5957\u6838\u5f39\u3002\u4e00\u65e6\u7206\u70b8\uff0c\u5b83\u4eec\u6709\u671b\u4f7f\u5c0f\u884c\u661f\u504f\u8f6c\u8db3\u4ee5\u907f\u5f00\u5730\u7403\u3002 \uff08\u4e0e 1998 \u5e74\u7684\u4e24\u90e8\u7cdf\u7cd5\u7684\u7535\u5f71\u76f8\u4f3c\uff0c\u8fd9\u5927\u6982\u662f\u5de7\u5408\u3002\uff09\u4f60\u626e\u6f14\u6ce2\u58eb\u987f\u6d1b\u592b\uff0c\u4efb\u52a1\u7684\u6307\u6325\u5b98\u3002\u4f46\u6210\u529f\u6267\u884c\u4efb\u52a1\u3001\u62ef\u6551\u5730\u7403\u53ea\u662f\u771f\u6b63\u5267\u60c5\u7684\u5e8f\u5e55\u3002\u4e00\u65e6\u60a8\u6709\u65f6\u95f4\u63a2\u7d22\u8fd9\u9897\u5c0f\u884c\u661f\uff0c\u60a8\u548c\u60a8\u7684\u8239\u5458\u5c31\u4f1a\u5f00\u59cb\u53d1\u73b0\u5b83\u7684\u8bb8\u591a\u5947\u602a\u4e4b\u5904\uff0c\u8fd9\u8bc1\u660e\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u667a\u80fd\u5b58\u5728\u5728\u60a8\u9762\u524d\u3002\u5728\u4f60\u7684\u8c03\u67e5\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u8bf1\u6740\u88c5\u7f6e\uff0c\u5c06\u4f60\u548c\u5176\u4ed6\u4e09\u540d\u8239\u5458\u5e26\u5230\u4e86\u4e00\u4e2a\u5145\u6ee1\u5916\u661f\u6280\u672f\u6b8b\u4f59\u7684\u795e\u79d8\u4e16\u754c\u3002\n......", "note_en": "As you would imagine, a lot of the things you can do in a comedy game just don\u2019t work when trying to remain serious. You can\u2019t cover up a bad puzzle with a funny line of self-referential dialog. Er, not that I ever did that. But anyway, it was also a challenge to maintain the tone and some semblance of a dramatic arc. Another challenge was cultural \u2014 we were trying to build this game in an environment where everyone else was building funny games, telling jokes, and being pretty outlandish. It was like trying to cram for a physics final during a dorm party. It would have been a lot easier to join the party.\n On October 17, 1989, the senior staff of LucasArts   [1] LucasArts was known as Lucasfilm Games until the summer of 1992. To avoid confusion, I use the name \u201cLucasArts\u201d throughout this article. assembled in the Main House of Skywalker Ranch for one of their regular planning meetings. In the course of proceedings, Noah Falstein, a designer and programmer who had been with the studio almost from the beginning, learned that he was to be given stewardship of an exciting new project called  The Dig, born from an idea for an adventure game that had been presented to LucasArts by none other than Steven Spielberg. Soon after that bit of business was taken care of, remembers Falstein, \u201cwe felt the room start to shake \u2014 not too unusual, we\u2019d been through many earthquakes in California \u2014 but then suddenly it got much stronger, and we started to hear someone scream, and some glass crash to the floor somewhere, and most of us dived under the mahogany conference table to ride it out.\u201d It was the Loma Prieta Earthquake, which would kill 63 people, seriously injure another 400, and do untold amounts of property damage all around Northern California.\n Perhaps Falstein and his colleagues should have taken it as an omen.  The Dig would turn into a slow-motion fiasco that crushed experienced game developers under its weight with the same assiduity with which the earthquake collapsed Oakland\u2019s Nimitz Freeway. When a finished version of the game finally appeared on store shelves in late 1995, one rather ungenerous question would be hard to avoid asking: it took you six years to make  this?\n  In order to tell the full story of  The Dig, the most famously troubled project in the history of LucasArts, we have to wind the clock back yet further: all the way back to the mid-1980s, when Steven Spielberg was flying high on the strength of blockbusters like   Raiders of the Lost Ark and   E.T.: The Extra-Terrestrial. During this period, many years before the advent of Prestige TV, Spielberg approached NBC with a proposal for a new anthology series named   Amazing Stories, after the pulp magazine that had been such an incubator of printed science fiction in the 1930s and 1940s. He would direct the occasional episode himself, he promised, but would mostly just throw out outlines which could be turned into reality by other screenwriters and directors. Among those willing to direct episodes were some of the most respected filmmakers in Hollywood: people like Martin Scorsese, Irvin Kershner, Robert Zemeckis, and Clint Eastwood. Naturally, NBC was all over it; nowhere else on the television of the 1980s could you hope to see a roster of big-screen talent anything like that. The new series debuted with much hype on September 29, 1985.\n  But somehow it just never came together for  Amazing Stories; right from the first episodes, the dominant reaction from both critics and the public was one of vague disappointment. Part of the problem was each episode\u2019s running time of just half an hour, or 22 minutes once commercials and credits were factored in; there wasn\u2019t much scope for story or character development in that paltry span of time. But another, even bigger problem was that what story and characters were there weren\u2019t often all that interesting or original. Spielberg kept his promise to serve as the show\u2019s idea man, personally providing the genesis of some 80 percent of the 45 episodes that were completed, but the outlines he tossed off were too often retreads of things that others had already done better. When he had an idea he  really liked \u2014 such as the one about a group of miniature aliens who help the residents of an earthbound apartment block with their very earthbound problems \u2014 he tended to shop it elsewhere. The aforementioned idea, for example, led to the film   Batteries Not Included.\n The episode idea that would become the computer game  The Dig after many tortuous twists and turns was less original than that one. It involved a team of futuristic archaeologists digging in the ruins of what the audience would be led to assume was a lost alien civilization. Until, that is, the final shot set up the big reveal: the strange statue the archaeologists had been uncovering would be shown to be Mickey Mouse, while the enormous building behind it was the Sleeping Beauty Castle. They were digging at Disneyland, right here on Planet Earth!\n The problem here was that we had seen all of this before, most notably at the end of   Planet of the Apes, whose own climax had come when its own trio of astronauts stranded on its own apparently alien world had discovered the Statue of Liberty half-buried in the sand. Thus it was no great loss to posterity when this particular idea was judged too expensive for  Amazing Stories to produc e. But the core concept of archaeology in the future got stuck in Spielberg\u2019s craw, to be trotted out again later in a very different context.\n In the meantime, the show\u2019s ratings were falling off quickly. As soon as the initial contract for two seasons had been fulfilled,  Amazing Stories quietly disappeared from the airwaves. It became an object lesson that nothing is guaranteed in commercial media, not even Steven Spielberg\u2019s Midas touch.\n Fast-forward a couple of years, to when Spielberg was in the post-production phase of his latest cinematic blockbuster,   Indiana Jones and the Last Crusade, which he was making in partnership with his good friend George Lucas. Noah Falstein of  the latter\u2019s very own games studio had been drafted to design  an adventure game of the movie. Despite his lack of a games studio of his own, Spielberg was ironically far more personally interested in computer games than Lucas; he followed Falstein\u2019s project quite closely, to the point of serving as a sort of unofficial beta tester. Even after the movie and game were released, Spielberg would ring up LucasArts from time to time to beg for hints for their other adventures, or sometimes just to shoot the breeze; he was clearly intrigued by the rapidly evolving world of interactive media. During one of these conversations, he said he had a concept whose origins dated back to  Amazing Stories, one which he believed might work well as a game. And then he asked if he could bring it over to Skywalker Ranch. He didn\u2019t have to ask twice.\n The story that Spielberg outlined retained futuristic archaeology as its core motif, but wisely abandoned the clich\u00e9d reveal of Mickey Mouse. Instead the archaeologists would be on an actual alien planet, discovering impossibly advanced technology in what Spielberg conceived as an homage to the 1950s science-fiction classic   Forbidden Planet. Over time, the individual archaeologists would come to distrust and eventually go to war with one another; this part of the plot hearkened back to another film that Spielberg loved, the classic Western   The Treasure of the Sierra Madre. Over to you, Noah Falstein \u2014 after the unpleasant business of the earthquake was behind everybody, that is.\n  The offices of LucasArts were filled with young men who had grown up worshiping at the shrines of  Star Wars and Indiana Jones, and who now found themselves in the completely unexpected position of going to work every day at Skywalker Ranch, surrounded by the memorabilia of their gods and sometimes by the deities themselves. Their stories of divine contact are always entertaining, not least for the way that they tend to sound more like a plot from one of Spielberg\u2019s films than any plausible reality; surely ordinary middle-class kids in the real world don\u2019t just stumble into a job working for the mastermind of  Star Wars, do they? Well, it turns out that in some cases they do. Dave Grossman, an aspiring LucasArts game designer at the time, was present at a follow-up meeting with Spielberg that also included Lucas, Falstein, and game designer Ron Gilbert of   Maniac Mansion and   Monkey Island fame. His account so magnificently captures what it was like to be a starstruck youngster in those circumstances that I want to quote it in full here.\n The Main House at Skywalker is a pretty swanky place, and the meeting is in a boardroom with a table the size of a railroad car, made of oak or mahogany or some other sort of expensive wood. I\u2019m a fidgety young kid with clothes that come pre-wrinkled, and this room makes me feel about as out of place as a cigarette butt in a souffl\u00e9. I\u2019m a little on edge just being in here.\n Then George and Steven show up and we all say hello. Now, I\u2019ve been playing it cool like it\u2019s no big deal, and I know they\u2019re just people who sneeze and drop forks like everybody else, but\u2026 it\u2019s Lucas and Spielberg! These guys are famous and powerful and rich and, although they don\u2019t act like any of those things, I\u2019m totally intimidated. (I should mention that although I\u2019ve been working for George for a year or so at this point, this is only the second time I\u2019ve met him.) I realize I\u2019m really fairly nervous now.\n George and Steven chit-chat with each other for a little bit. They\u2019ve been friends a long time and it shows. George seems particularly excited to tell Steven about his new car, an  Acura I think \u2013 they\u2019re not even available to the public yet, but he\u2019s managed to get the first one off the boat, and it\u2019s parked conspicuously right in front of the building.\n Pretty soon they start talking about ideas for The Dig, and they are Rapid-Fire Machine Guns of Creativity. Clearly they do this a lot. It\u2019s all very high-concept and all over the map, and I have no idea how we\u2019re going to make any of it into a game, but that\u2019s kind of what brainstorming sessions are all about. Ron and Noah offer up a few thoughts. I have a few myself, but somehow I don\u2019t feel worthy enough to break in with them. So I sit and listen, and gradually my nervousness is joined by embarrassment that I\u2019m not saying anything.\n A snack has been provided for the gathering, some sort of crumbly carbohydrate item, corn bread, if I remember correctly. So I take a piece \u2013 I\u2019m kind of hungry, and it gives me something to do with my hands. I take a bite. Normally, the food at Skywalker Ranch is absolutely amazing, but this particular corn bread has been made extra dry. Chalk dry. My mouth is already parched from being nervous, so it takes me a while before I\u2019m able to swallow the bite, and as I chomp and smack at it I\u2019m sure I\u2019m making more noise than a dozen weasels in a paper bag, even though everyone pretends not to notice. There are drinks in the room, but they have been placed out of the way, approximately a quarter-mile from where we\u2019re sitting, and I can\u2019t get up to get one without disrupting everything, and I\u2019m sure by now George and Steven are wondering why I\u2019m in the meeting in the first place.\n I want to abandon the corn bread, but it\u2019s begun falling apart, and I can\u2019t put it down on my tiny napkin without making a huge mess. So I eat the whole piece. It takes about twenty minutes. I myself am covered with tiny crumbs, but at least there aren\u2019t any on the gorgeous table.\n By now the stakes are quite high. Because I\u2019ve been quiet so long, the mere fact of my speaking up will be a noteworthy event, and anything I say has to measure up to that noteworthiness. You can\u2019t break a long silence with a throwaway comment, it has to be a weighty, breathtaking observation that causes each person in the room to re-examine himself in its light. While I\u2019m waiting for a thought that good, more time goes by and raises the bar even higher. I spend the rest of the meeting in a state of near-total paralysis, trying to figure out how I can get out of the room without anyone noticing, or, better yet, how I can go back in time and arrange not to be there in the first place.\n So, yes, I did technically get to meet Steven Spielberg face-to-face once while we were working on The Dig. I actually talked to him later on, when he called to get hints on one of our other games (I think it was  Day of the Tentacle), which he was playing with his son. (One of the lesser-known perks of being a famous filmmaker is that you can talk directly to the game designers for hints instead of calling the hint line.) Nice guy.\n The broader world of computer gaming\u2019s reaction to Spielberg\u2019s involvement in  The Dig would parallel the behavior of Dave Grossman at this meeting. At the same time that some bold industry scribes were beginning to call games a more exciting medium than cinema, destined for even more popularity thanks to the special sauce of interactivity, the press that surrounded  The Dig would point out with merciless clarity just how shallow their bravado was, how deep gaming\u2019s inferiority complex really ran: Spielberg\u2019s name was guaranteed to show up in the first paragraph of every advertisement, preview, or, eventually, review. \u201cSteven Spielberg is deigning to show an interest in little old  us!\u201d ran the implicit message.\n It must be said that the hype was somewhat out of proportion to his actual contribution. After providing the initial idea for the game \u2014 an idea that would be transformed beyond all recognition by the time the game was released \u2014 Spielberg continued to make himself available for occasional consultations; he met with Falstein and his colleagues for four brainstorming sessions, two of which also included his buddy George Lucas, over the course of about eighteen months. (Thanks no doubt to the prompting of his friend, Lucas\u2019s own involvement with  The Dig was as hands-on as he ever got with one of his games studio\u2019s creations.) Yet it\u2019s rather less clear whether these conversations were of much real, practical use to the developers down in the trenches. Neither Spielberg nor Lucas was, to state the obvious, a game designer, and thus they tended to focus on things that might yield watchable movies but were less helpful for making a playable game. Noah Falstein soon discovered that heading a project which involved two such high-profile figures was a less enviable role than then he had envisioned it to be; he has since circumspectly described a project where \u201ceveryone wanted to put their two cents in, and that can be extremely hard to manage.\u201d\n In his quest for a game that could be implemented within the strictures of SCUMM, LucasArts\u2019s in-house point-and-click adventure engine, Falstein whittled away at Spielberg\u2019s idea of two teams of archaeologists who enter into open war with one another. His final design document, last updated on January 30, 1991, takes place in \u201cthe future, nearly 80 years since the McKillip Drive made faster-than-light travel a possibility, and only 50 years since the first star colonies were founded.\u201d In another nod back to Spielberg\u2019s old  Amazing Stories outline that got the ball rolling, an unmanned probe has recently discovered an immense statue towering amidst other alien ruins on the surface of a heretofore unexplored planet; in a nod to  the most famous poem by Percy Shelley, the planet has been named Ozymandias. Three humans have now come to Ozymandias to investigate the probe\u2019s findings \u2014 but they\u2019re no longer proper archaeologists, only opportunistic treasure hunters, led by a sketchy character named Major Tom (presumably a nod to  David Bowie). The player can choose either of Major Tom\u2019s two subordinates as her avatar.\n A series of unfortunate events ensues shortly after the humans make their landing, over the course of which Major Tom is killed and their spaceship damaged beyond any obvious possibility of repair. The two survivors have an argument and go their separate ways, but in this version of the script theirs is a cold rather than a hot war. As the game goes on, the player discovers that a primitive race of aliens living amidst the ruins are in fact the descendants of far more advanced ancestors, who long ago destroyed their civilization and almost wiped out their entire species with internecine germ warfare. But, the player goes on to learn, there are survivors of both factions who fought the apocalyptic final war suspended in cryogenic sleep beneath the surface of the planet. Her ultimate goal becomes to awaken these survivors and negotiate a peace between them, both because it\u2019s simply the right thing to do and because these aliens should have the knowledge and tools she needs to repair her damaged spaceship.\n  For better or for worse, this pared-down but still ambitious vision for  The Dig never developed much beyond that final design document and a considerable amount of accompanying concept art. \u201cThere was a little bit of SCUMM programming done on one of the more interesting puzzles, but not much [more],\u201d says Falstein. He was pulled off the project very early in 1991, assigned instead to help Hal Barwood with   Indiana Jones and the Fate of Atlantis. And when this, his second Indiana Jones game, was finished, he was laid off despite a long and largely exemplary track record.\n Meanwhile  The Dig spent a year or more in limbo, until it was passed to Brian Moriarty, the writer and designer of three games for the 1980s text-adventure giant Infocom and of LucasArts\u2019s own lovely, lyrical   Loom. Of late, he\u2019d been drafting a plan for a game based on   The Young Indiana Jones Chronicles, Spielberg\u2019s latest disappointing foray into television, but a lack of personal enthusiasm for the project had led to a frustrating lack of progress. Moriarty was known as one of the most \u201cliterary\u201d of game designers by temperament; his old colleagues at Infocom had called him \u201cProfessor Moriarty,\u201d more as a nod to his general disposition than to the milieu of Sherlock Holmes. And indeed, his   Trinity is a close as Infocom ever got to publishing a work of high literature, while his  Loom possesses almost an equally haunting beauty. Seeing himself with some justification as a genuine interactive auteur, he demanded total control of every aspect of  The Dig as a condition of taking it on. Bowing to his stellar reputation, LucasArts\u2019s management agreed.\n  Much of of what went on during the eighteen months that Moriarty spent working on  The Dig remains obscure, but it plainly turned into a very troubled, acrimonious project. He got off on the wrong foot with many on his team by summarily binning Falstein\u2019s vision \u2014 a vision which they had liked or even in some cases actively contributed to. Instead he devised an entirely new framing plot.\n Rather than the far future,  The Dig would now take place in 1998; in fact, its beginning would prominently feature the  Atlantis, a Space Shuttle that was currently being flown by NASA. A massive asteroid is on a collision course with Earth. Humanity\u2019s only hope is to meet it in space and plant a set of nuclear bombs on its surface. Once exploded, they will hopefully deflect the asteroid just enough to avoid the Earth. (The similarity with not  one but  two terrible 1998 movies is presumably coincidental.) You play Boston Low, the commander of the mission.\n But carrying the mission out successfully and saving the Earth is only a prelude to the real plot. Once you have the leisure to explore the asteroid, you and your crew begin to discover a number of oddities about it, evidence that another form of intelligent being has been here before you. In the midst of your investigations, you set off a booby trap which whisks you and three other crew members light years away to a mysterious world littered with remnants of alien techn\n......", "posttime": "2021-07-24 07:22:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6316\u6398,dig,\u6e38\u620f", "title": "\u6316\u6398", "title_en": "The Dig", "transed": 1, "url": "https://www.filfre.net/2021/07/the-dig/", "via": "", "real_tags": ["\u6316\u6398", "dig", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "f09b1bc96dd46c6104a32b423fa278e8.jpg", "infoid": 1069357, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u770b\u4f3c\u4e0d\u8d77\u773c\u7684\u8150\u8680\u9752\u94dc\u5757\u8ba9\u8c03\u67e5\u4eba\u5458\u56f0\u60d1\u4e86\u4e00\u4e2a\u591a\u4e16\u7eaa\uff0c\u81ea\u4ece\u5b83\u88ab\u8bc1\u660e\u5305\u542b\u5728\u53e4\u5e0c\u814a\u4e16\u754c\u6839\u672c\u4e0d\u5e94\u8be5\u5b58\u5728\u7684\u7cbe\u5bc6\u9f7f\u8f6e\u4e4b\u540e\u3002\u6b63\u5982\u6258\u5c3c\u00b7\u5f17\u91cc\u65af (Tony Freeth) \u89e3\u91ca\u7684\u90a3\u6837\uff0c\u4e00\u9879\u4f7f\u7528\u5c16\u7aef\u6280\u672f\u7684\u65b0\u7814\u7a76\u73b0\u5728\u63ed\u793a\u4e86\u8fd9\u53f0\u673a\u5668\u53ef\u4ee5\u505a\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u505a\u5230\u7684\u3002 1900 \u5e74\u6625\u5929\uff0c\u4e00\u7fa4\u6d77\u7ef5\u6f5c\u6c34\u5458\u8eb2\u907f\u4e86\u4e00\u573a\u731b\u70c8\u7684\u5730\u4e2d\u6d77\u98ce\u66b4\u3002\u98ce\u66b4\u5e73\u606f\u540e\uff0c\u4ed6\u4eec\u5728\u514b\u91cc\u7279\u5c9b\u548c\u5e0c\u814a\u5927\u9646\u4e4b\u95f4\u7684\u5c0f\u5c9b\u5b89\u63d0\u57fa\u7279\u62c9\u9644\u8fd1\u7684\u5f53\u5730\u6c34\u57df\u6f5c\u6c34\u5bfb\u627e\u6d77\u7ef5\u3002\u4e00\u4e2a\u5076\u7136\u7684\u673a\u4f1a\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u88c5\u6ee1\u53e4\u5e0c\u814a\u5b9d\u85cf\u7684\u6c89\u8239\uff0c\u5f15\u53d1\u4e86\u5386\u53f2\u4e0a\u7b2c\u4e00\u6b21\u91cd\u5927\u7684\u6c34\u4e0b\u8003\u53e4\u884c\u52a8\u3002\u5230 1901 \u5e74\u521d\uff0c\u5728\u5e0c\u814a\u6d77\u519b\u70ae\u8230\u7684\u76d1\u7763\u4e0b\uff0c\u6f5c\u6c34\u5458\u4eec\u5f00\u59cb\u56de\u6536\u4e00\u7cfb\u5217\u7cbe\u7f8e\u7684\u53e4\u5e0c\u814a\u5546\u54c1\u2014\u2014\u7cbe\u7f8e\u7684\u9752\u94dc\u96d5\u5851\u3001\u7cbe\u7f8e\u7684\u73bb\u7483\u5668\u76bf\u3001\u73e0\u5b9d\u3001\u53cc\u8033\u74f6\u3001\u5bb6\u5177\u914d\u4ef6\u548c\u9910\u5177\u3002\u4ed6\u4eec\u8fd8\u53d1\u73b0\u4e86\u4e00\u4e2a\u65e0\u6cd5\u8fa8\u8ba4\u7684\u80bf\u5757\uff0c\u6709\u4e00\u672c\u5927\u5b57\u5178\u90a3\u4e48\u5927\uff0c\u5f88\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u662f\u7eff\u8272\u7684\uff0c\u6240\u4ee5\u88ab\u53d1\u73b0\u662f\u9752\u94dc\u8272\u7684\u3002\u5f53\u65f6\u5e76\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4ec0\u4e48\u4e86\u4e0d\u8d77\u7684\u4e8b\u60c5\u3002\u7136\u800c\uff0c\u73b0\u5728\uff0c\u5b83\u88ab\u8ba4\u4e3a\u662f\u8fc4\u4eca\u4e3a\u6b62\u4ece\u53e4\u4ee3\u4e16\u754c\u4e2d\u6062\u590d\u7684\u6700\u91cd\u8981\u7684\u9ad8\u79d1\u6280\u7269\u54c1\uff1a\u53e4\u5e0c\u814a\u5929\u6587\u8ba1\u7b97\u673a\uff0c\u88ab\u79f0\u4e3a\u5b89\u63d0\u57fa\u7279\u62c9\u673a\u68b0\u88c5\u7f6e\u3002\u6570\u6708\u540e\uff0c\u8be5\u7269\u4f53\u88c2\u5f00\uff0c\u9732\u51fa\u91cc\u9762\u6709\u786c\u5e01\u5927\u5c0f\u7684\u5fae\u5c0f\u9f7f\u8f6e\u3002\u8fd9\u662f\u4e00\u4e2a\u60ca\u4eba\u7684\u53d1\u73b0\uff1a\u751a\u81f3\u6ca1\u6709\u4eba\u60f3\u5230\u53e4\u5e0c\u814a\u4f1a\u5b58\u5728\u5982\u6b64\u7cbe\u5bc6\u7684\u9f7f\u8f6e\u3002\u4eca\u5929\uff0c\u53ea\u6709\u4e09\u5206\u4e4b\u4e00\u7684\u539f\u59cb\u673a\u68b0\u88c5\u7f6e\u5e78\u5b58\u4e0b\u6765\uff0c\u5206\u6210 82 \u4e2a\u788e\u7247\u2014\u2014\u7528\u5b57\u6bcd AG \u548c\u6570\u5b57 1-75 \u8868\u793a\u3002\u8fd9\u662f\u4e00\u4e2a\u6076\u9b54\u822c\u7684 3D \u62fc\u56fe\u6e38\u620f\uff0c\u5168\u90e8\u6df7\u6742\u5728\u4e00\u8d77\uff0c\u5177\u6709\u4e0d\u5b8c\u6574\u548c\u4e25\u91cd\u8150\u8680\u7684\u7ec4\u4ef6\u3002\u591a\u5e74\u6765\uff0c\u5404\u79cd\u5b66\u8005\u8bd5\u56fe\u5229\u7528\u8fd9\u4e9b\u96f6\u788e\u7684\u5143\u7d20\u6765\u63a8\u65ad\u673a\u5668\u7684\u7528\u9014\u3002\u6700\u65b0\u5e94\u5bf9\u8fd9\u4e00\u6311\u6218\u7684\u662f\u4e00\u4e2a\u591a\u5b66\u79d1\u79d1\u5b66\u5bb6\u56e2\u961f\uff0c\u6211\u662f\u5176\u4e2d\u7684\u4e00\u5458\uff1a\u4f26\u6566\u5927\u5b66\u5b66\u9662 (UCL) Antikythera \u7814\u7a76\u56e2\u961f\u3002\u8be5\u56e2\u961f\u662f\u5728\u6210\u50cf\u4e13\u5bb6 Lindsay MacDonald \u548c\u6750\u6599\u79d1\u5b66\u5bb6 Adam Wojcik \u9080\u8bf7\u6211\u52a0\u5165 UCL \u65f6\u521b\u5efa\u7684\u3002\u6211\u4eec\u4e0e\u8003\u53e4\u51b6\u91d1\u5b66\u5bb6 Myrto Georgakopoulou \u4ee5\u53ca\u4e24\u540d\u535a\u58eb\u751f\u3001\u949f\u8868\u5b66\u5bb6 David Higgon \u548c\u7269\u7406\u5b66\u5bb6 Aris Dacanalis \u5408\u4f5c\uff0c\u62d3\u5bbd\u4e86\u6211\u4eec\u7684\u4e13\u4e1a\u77e5\u8bc6\u3002\u6211\u4eec\u7684\u4e24\u4e2a\u5b66\u751f\u90fd\u4e3a\u6211\u4eec\u7684\u7814\u7a76\u505a\u51fa\u4e86\u91cd\u8981\u8d21\u732e\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u65b0\u7684\u60f3\u6cd5\u548c\u5bf9\u6240\u6709\u6570\u636e\u7684\u4ed4\u7ec6\u68c0\u67e5\u6765\u6311\u6218\u4ee5\u524d\u7684\u7814\u7a76\uff0c\u5e76\u521b\u5efa\u4e86\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6240\u6709\u8bc1\u636e\u7684\u6a21\u578b\u3002\u4ece\u4e00\u5f00\u59cb\uff0c\u8be5\u673a\u5236\u5c31\u5f15\u8d77\u4e86\u4e89\u8bae\uff0c\u5173\u4e8e\u5b83\u662f\u7528\u4e8e\u8ddf\u8e2a\u661f\u661f\u7684\u661f\u76d8\u8fd8\u662f\u5bfc\u822a\u8bbe\u5907\u7684\u6fc0\u70c8\u4e89\u8bba\u3002\u4e24\u8005\u90fd\u88ab\u8bc1\u660e\u662f\u9519\u8bef\u7684\uff0c\u4f46\u63ed\u5f00\u673a\u5668\u7684\u79d8\u5bc6\u5c06\u662f\u4e00\u4e2a\u6f2b\u957f\u800c\u8270\u96be\u7684\u4fa6\u63a2\u6545\u4e8b\uff0c\u5145\u6ee1\u4e86\u91cd\u5927\u9519\u8bef\u548c\u60ca\u4eba\u7684\u8fdb\u5c55\u3002\u7b2c\u4e00\u6b21\u771f\u6b63\u7684\u542f\u8499\u6765\u81ea 1905 \u5e74\u7684\u5fb7\u56fd\u8bed\u8a00\u5b66\u5bb6\u963f\u5c14\u4f2f\u7279\u00b7\u96f7\u59c6 (Albert Rehm)\u3002\u5728\u4ed6\u672a\u53d1\u8868\u7684\u7814\u7a76\u7b14\u8bb0\u4e2d\u57cb\u85cf\u7740\u4e00\u4e9b\u975e\u51e1\u7684\u60f3\u6cd5\u3002 Rehm \u9605\u8bfb\u4e86\u6709\u5173\u4ece\u5730\u7403\u770b\u6052\u661f\u5347\u8d77\u548c\u843d\u4e0b\u7684\u673a\u5236\u4e0a\u7684\u94ed\u6587\uff0c\u4ed6\u8fd8\u53d1\u73b0\u4e86\u5173\u952e\u7684\u5929\u6587\u5468\u671f\u2014\u2014\u6708\u7403\u7684 19 \u5e74\u548c 76 \u5e74\u5468\u671f\u4ee5\u53ca 223 \u4e2a\u6708\u7684\u65e5\u98df\u5468\u671f\u3002 Rehm \u8fd8\u63d0\u51fa\u4e86\u4e00\u4e2a\u6fc0\u8fdb\u7684\u5efa\u8bae\uff0c\u5373\u8be5\u8bbe\u5907\u662f\u4e00\u53f0\u5929\u6587\u8ba1\u7b97\u673a\u3002\u4ed6\u6709\u4e00\u4e2a\u5f00\u521b\u6027\u7684\u60f3\u6cd5\uff0c\u5373\u5b83\u5305\u542b\u884c\u661f\u9f7f\u8f6e\u88c5\u7f6e\u2014\u2014\u5373\u5b89\u88c5\u5728\u5176\u4ed6\u9f7f\u8f6e\u4e0a\u7684\u9f7f\u8f6e\u2014\u2014\u5bf9\u4e8e\u53e4\u5e0c\u814a\u6765\u8bf4\uff0c\u8fd9\u79cd\u590d\u6742\u7a0b\u5ea6\u4f3c\u4e4e\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u6b64\u5916\uff0cRehm \u63d0\u8bae\u5c06\u53e4\u4ee3\u4e16\u754c\u4e2d\u5df2\u77e5\u7684\u6240\u6709\u4e94\u9897\u884c\u661f\uff08\u6c34\u661f\u3001\u91d1\u661f\u3001\u706b\u661f\u3001\u6728\u661f\u548c\u571f\u661f\uff09\u90fd\u663e\u793a\u5728\u673a\u68b0\u88c5\u7f6e\u6b63\u9762\u7684\u73af\u5f62\u7cfb\u7edf\u4e2d\u3002\u4ed6\u53ea\u662f\u6ca1\u6709\u8db3\u591f\u7684\u8bc1\u636e\u6765\u8fde\u8d2f\u5730\u7406\u89e3\u4ed6\u7684\u76f4\u89c9\uff0c\u800c\u96f7\u59c6\u5bf9\u5185\u90e8\u673a\u68b0\u7ed3\u6784\u7684\u7406\u89e3\u662f\u5b8c\u5168\u9519\u8bef\u7684\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u591a\u4e16\u7eaa\u540e\uff0c\u4ed6\u7684\u60ca\u4eba\u60f3\u6cd5\u6210\u4e3a\u4e86 UCL Antikythera \u7814\u7a76\u56e2\u961f\u521b\u9020\u7684\u65b0\u673a\u5668\u6a21\u578b\u7684\u6838\u5fc3\u3002\u5728 Rehm \u56e0\u6570\u636e\u4e0d\u8db3\u800c\u82e6\u82e6\u6323\u624e 50 \u5e74\u540e\uff0c\u82f1\u56fd\u7269\u7406\u5b66\u5bb6\u5fb7\u91cc\u514b\u00b7\u5fb7\u00b7\u7d22\u62c9\u00b7\u666e\u83b1\u65af (Derek de Solla Price) \u5f00\u59cb\u4e86\u957f\u8fbe 20 \u5e74\u7684\u7814\u7a76\u4e4b\u65c5\uff0c\u6700\u7ec8\u53d1\u8868\u4e86\u4e00\u7bc7\u8457\u540d\u7684\u5e0c\u814a\u4eba\u9f7f\u8f6e (Gears) \u8bba\u6587 (1974)\u3002\u4ed6\u610f\u8bc6\u5230\uff0c\u8981\u7406\u89e3\u8be5\u673a\u5236\uff0c\u8feb\u5207\u9700\u8981\u65b0\u6570\u636e\u6765\u6307\u5bfc\u4ed6\u4e86\u89e3\u96f6\u788e\u548c\u6df7\u4e71\u7684\u8bc1\u636e\u3002\n\u666e\u83b1\u65af\u7684\u5927\u90e8\u5206\u8fdb\u5c55\u662f\u57fa\u4e8e\u673a\u68b0\u788e\u7247\u7684 X \u5c04\u7ebf\uff0c\u7531 Charalambos \u548c Emily Karakalos \u6536\u96c6\u548c\u5206\u6790\u3002\u8fd9\u4f7f\u5f97\u80fd\u591f\u8bc6\u522b\u51fa 30 \u4e2a\u5e78\u5b58\u7684\u9f7f\u8f6e\uff1a\u7247\u6bb5 A \u4e2d\u6709 27 \u4e2a\uff0c\u7247\u6bb5 B\u3001C \u548c D \u5404\u6709\u4e00\u4e2a\u3002 \u51e0\u4e4e\u6ca1\u6709\u4e00\u4e2a\u9f7f\u8f6e\u662f\u5b8c\u6574\u7684\uff0c\u56e0\u6b64\u4ed6\u4eec\u9700\u8981\u4f30\u8ba1\u6bcf\u4e2a\u9f7f\u8f6e\u4e0a\u6700\u91cd\u8981\u7684\u9f7f\u6570\u2014\u2014\u5bf9\u4e8e\u7406\u89e3\u9f7f\u8f6e\u8ba1\u7b97\u5668\u7684\u5de5\u4f5c\u539f\u7406\u81f3\u5173\u91cd\u8981\u3002\u4ece\u8fd9\u4e9b X \u5c04\u7ebf\u7167\u7247\u4e2d\uff0c\u666e\u8d56\u65af\u53d1\u73b0\u4e86\u4e00\u4e2a\u91cd\u8981\u7684\u53d1\u73b0\uff0c\u5373 Rehm \u5728\u673a\u68b0\u88c5\u7f6e\u7684\u94ed\u6587\u4e2d\u786e\u5b9a\u7684 19 \u5e74\u7684\u6708\u7403\u5468\u671f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5176\u4f20\u52a8\u88c5\u7f6e\u6765\u8ba1\u7b97\u3002\u5c3d\u7ba1\u666e\u83b1\u65af\u53d6\u5f97\u4e86\u5f88\u5927\u7684\u8fdb\u6b65\uff0c\u4f46\u4ed6\u4e5f\u72af\u4e86\u5f88\u591a\u9519\u8bef\uff0c\u53ea\u5bf9\u884c\u661f\u63d0\u51fa\u4e86\u672a\u89e3\u51b3\u7684\u5efa\u8bae\u3002 1983 \u5e74\u666e\u83b1\u65af\u53bb\u4e16\u65f6\uff0c\u4f26\u6566\u79d1\u5b66\u535a\u7269\u9986\u673a\u68b0\u5de5\u7a0b\u9986\u957f\u8fc8\u514b\u5c14\u00b7\u8d56\u7279 (Michael Wright) \u63a5\u53d7\u4e86\u6311\u6218\uff0c\u4ed6\u5728\u7814\u7a76\u9f7f\u8f6e\u8bbe\u5907\u65b9\u9762\u62e5\u6709\u4e30\u5bcc\u7684\u7ecf\u9a8c\u3002\u867d\u7136\u666e\u83b1\u65af\u5df2\u7ecf\u53d1\u73b0\u4e86\u4e00\u4e9b\u65e5\u6708\u7cfb\u7edf\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u4f46\u8d56\u7279\u5374\u7740\u624b\u91cd\u5efa\u884c\u661f\u9f7f\u8f6e\u88c5\u7f6e\u548c\u663e\u793a\u5668\u3002\u5728\u8fd9\u91cc\uff0c\u505c\u4e0b\u6765\u601d\u8003\u4e00\u4e0b\u53e4\u5e0c\u814a\u4eba\u5982\u4f55\u770b\u5f85\u5b87\u5b99\u662f\u6709\u5e2e\u52a9\u7684\u3002\u4ed6\u4eec\u7684\u89c2\u70b9\uff08\u51e0\u4e4e\uff09\u5b8c\u5168\u4ee5\u5730\u7403\u4e3a\u4e2d\u5fc3\uff0c\u5e76\u88ab\u9519\u8bef\u7684\u4fe1\u5ff5\u6240\u652f\u914d\uff0c\u5373\u592a\u9633\u3001\u6708\u4eae\u548c\u884c\u661f\u90fd\u5728\u201c\u56fa\u5b9a\u6052\u661f\u201d\u7684\u80cc\u666f\u4e0b\u56f4\u7ed5\u5730\u7403\u8fd0\u52a8\u3002\u4ece\u5730\u7403\u4e0a\u770b\uff0c\u884c\u661f\u4f3c\u4e4e\u4ee5\u4ee4\u4eba\u8d39\u89e3\u7684\u65b9\u5f0f\u5728\u6052\u661f\u7684\u80cc\u666f\u4e0b\u79fb\u52a8\u3002\u8fd9\u751a\u81f3\u53cd\u6620\u5728\u73b0\u4ee3\u8bcd\u201c\u884c\u661f\u201d\u7684\u53e4\u5e0c\u814a\u8d77\u6e90\u4e2d\uff1aplanetai\uff0c\u610f\u601d\u662f\u201c\u6d41\u6d6a\u201d\u3002\u4f8b\u5982\uff0c\u4ece\u5730\u7403\u4e0a\u770b\uff0c\u91d1\u661f\u6709\u65f6\u5728\u592a\u9633\u524d\u9762\uff0c\u6709\u65f6\u5728\u592a\u9633\u540e\u9762\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f3c\u4e4e\u5728\u5929\u7a7a\u4e2d\u5411\u897f\u79fb\u52a8\uff0c\u4e0e\u592a\u9633\u7684\u65b9\u5411\u76f8\u540c\uff0c\u4f46\u6709\u65f6\u91d1\u661f\u4f1a\u5728\u4e00\u4e2a\u9759\u6b62\u70b9\u5bf9\u7740\u661f\u661f\u9759\u6b62\u4e0d\u52a8\uff0c\u7136\u540e\u5411\u4e1c\u5411\u540e\u5faa\u73af\u5e76\u5230\u8fbe\u53e6\u4e00\u4e2a\u9759\u6b62\u70b9\uff0c\u7136\u540e\u6062\u590d\u5411\u897f\u8fd0\u52a8\u4e00\u6b21\u66f4\u591a\u7684\u3002\u8fd9\u4e2a\u4f1a\u5408\u5468\u671f\u2014\u2014\u4e5f\u5c31\u662f\u5b83\u76f8\u5bf9\u4e8e\u592a\u9633\u7684\u5468\u671f\u2014\u2014\u4e00\u6b21\u53c8\u4e00\u6b21\u5730\u91cd\u590d\u3002\u6240\u6709\u884c\u661f\u90fd\u6709\u7c7b\u4f3c\u7684\u8fd0\u52a8\uff0c\u8fd9\u7ed9\u53e4\u4ee3\u5929\u6587\u5b66\u5bb6\u5e26\u6765\u4e86\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\u3002\u6b63\u662f\u7531\u4e8e\u6ca1\u6709\u610f\u8bc6\u5230\u884c\u661f\u56f4\u7ed5\u592a\u9633\u8fd0\u52a8\uff0c\u624d\u4f7f\u5f97\u884c\u661f\u8fd0\u52a8\u770b\u8d77\u6765\u5982\u6b64\u83ab\u540d\u5176\u5999\u3002\u5728\u516c\u5143\u524d 1 \u5343\u5e74\uff0c\u5df4\u6bd4\u4f26\u4eba\u53d1\u73b0\u4e86\u6240\u8c13\u7684\u884c\u661f\u201c\u5468\u671f\u5173\u7cfb\u201d\uff0c\u8fd9\u5c06\u6574\u6570\u4e2a\u4f1a\u5408\u5468\u671f\u7b49\u540c\u4e8e\u6574\u6570\u5e74\u3002\u4f8b\u5982\uff0c\u5728\u91d1\u661f\u7684\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u53d1\u73b0\u4e86\u884c\u661f\u5728\u516b\u5e74\u5185\u7ecf\u5386\u4e94\u4e2a\u4f1a\u5408\u5468\u671f\u7684\u5468\u671f\u5173\u7cfb\u3002\u7136\u540e\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5468\u671f\u5173\u7cfb\u6765\u9884\u6d4b\u884c\u661f\u5728\u5929\u7a7a\u4e2d\u7684\u672a\u6765\u4f4d\u7f6e\u3002\u53e4\u5e0c\u814a\u4eba\u5728\u6b64\u57fa\u7840\u4e0a\u63d0\u51fa\u4e86\u89e3\u91ca\u884c\u661f\u8fd0\u52a8\u7684\u51e0\u4f55\u7406\u8bba\u3002\u8fd9\u4e9b\u7406\u8bba\u975e\u5e38\u9002\u7528\u4e8e\u5728\u9f7f\u8f6e\u8ba1\u7b97\u673a\u4e2d\u673a\u68b0\u5316\u884c\u661f\u7684\u53ef\u53d8\u8fd0\u52a8\u3002\u8fd9\u662f\u4e00\u4e2a\u9769\u547d\u6027\u7684\u60f3\u6cd5\uff1a\u591a\u4e8f\u4e86\u8fd9\u53f0\u673a\u5668\uff0c\u53e4\u5e0c\u814a\u5929\u6587\u7406\u8bba\u7684\u7ed3\u679c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u8f6c\u52a8\u628a\u624b\u6765\u8ba1\u7b97\u3002 UCL \u56e2\u961f\u7814\u7a76\u4e86 Wright \u7684\u5f00\u521b\u6027\u5de5\u4f5c\u3002\u4ed6\u5728\u4e3b\u9a71\u52a8\u8f6e\u4e0a\u53d1\u73b0\u4e86\u8f74\u627f\u548c\u5176\u4ed6\u7ed3\u6784\u7684\u8bc1\u636e\u3002\u8fd9\u4e2a\u56db\u8f90\u9f7f\u8f6e\u7a81\u51fa\u5728\u7247\u6bb5 A \u7684\u524d\u9762\u3002\u5b83\u7531\u8f93\u5165\u624b\u67c4\u8f6c\u52a8\uff0c\u6bcf\u5e74\u65cb\u8f6c\u4e00\u6b21\uff0c\u4ece\u800c\u4f7f\u6240\u6709\u5176\u4ed6\u9f7f\u8f6e\u8fd0\u52a8\u3002\u8d56\u7279\u5224\u65ad\u4e00\u5b9a\u6709\u4e00\u4e2a\u5e7f\u6cdb\u7684\u884c\u661f\u9f7f\u8f6e\u7cfb\u7edf\uff0c\u5b89\u88c5\u5728\u4e3b\u9a71\u52a8\u8f6e\u4e0a\u3002\u6839\u636e\u8fd9\u4e00\u8bc1\u636e\uff0c\u4ed6\u63d0\u51fa\u673a\u5668\u7684\u4e3b\u8981\u76ee\u7684\u4e4b\u4e00\u662f\u8ba1\u7b97\u663e\u793a\u5728\u673a\u5668\u524d\u90e8\u7684\u884c\u661f\u7684\u4f4d\u7f6e\u3002\u53d7\u4e2d\u4e16\u7eaa\u5929\u6587\u949f\u7684\u542f\u53d1\uff0c\u8d56\u7279\u8fd8\u4e3a\u4ed6\u91cd\u5efa\u7684\u5b89\u63d0\u51ef\u5e0c\u62c9\u673a\u68b0\u88c5\u7f6e\u5f15\u5165\u4e86\u88ab\u79f0\u4e3a\u201c\u9488\u69fd\u8ddf\u968f\u5668\u201d\u88c5\u7f6e\u7684\u88c5\u7f6e\u3002\u5f53\u4e0e\u9f7f\u8f6e\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u8fd9\u4e9b\u8bbe\u5907\u53ef\u7528\u4e8e\u6a21\u62df\u884c\u661f\u7684\u53cd\u5411\u5faa\u73af\u3002\u4ed6\u4ee5\u6781\u5927\u7684\u521b\u9020\u529b\u6210\u529f\u5730\u4e3a\u673a\u68b0\u88c5\u7f6e\u5efa\u9020\u4e86\u4e00\u4e2a\u5929\u6587\u9986\uff0c\u7528\u6765\u8ffd\u8e2a\u65e5\u671f\u3001\u592a\u9633\u3001\u6708\u4eae\u548c\u4e94\u9897\u884c\u661f\u3002\u4ed6\u8ba4\u4e3a\u8f93\u51fa\u663e\u793a\u4e3a\u673a\u5668\u6b63\u9762\u7684\u4e00\u4e2a\u6307\u9488\u7cfb\u7edf\uff0c\u4ee5\u6307\u793a\u5b83\u4eec\u5728\u9ec4\u9053\u5341\u4e8c\u5bab\u4e2d\u7684\u4f4d\u7f6e\u3002\u4ed6\u5728 2002 \u5e74\u53d1\u8868\u7684\u7ed3\u679c\u662f Antikythera \u7814\u7a76\u7684\u91cc\u7a0b\u7891\uff0c\u5c3d\u7ba1\u968f\u540e\u4ed6\u7684\u6a21\u578b\u9762\u4e34\u591a\u91cd\u6311\u6218\u3002\u8fd9\u662f\u51fa\u73b0\u5728 CWA 108 \u4e2d\u7684\u4e00\u7bc7\u6587\u7ae0\u7684\u6458\u5f55\u3002\u8bf7\u7ee7\u7eed\u9605\u8bfb\u6742\u5fd7\uff08\u70b9\u51fb\u6b64\u5904\u8ba2\u9605\uff09\u6216\u6211\u4eec\u7684\u65b0\u7f51\u7ad9 The Past\uff0c\u8be5\u7f51\u7ad9\u4ee5\u6570\u5b57\u65b9\u5f0f\u63d0\u4f9b\u8be5\u6742\u5fd7\u7684\u6240\u6709\u5185\u5bb9\u3002\u5728 The Past\uff0c\u60a8\u5c06\u80fd\u591f\u5b8c\u6574\u9605\u8bfb\u6bcf\u7bc7\u6587\u7ae0\u4ee5\u53ca\u6211\u4eec\u5176\u4ed6\u6742\u5fd7 Current Archaeology\u3001Minerva \u548c Military History Matters \u7684\u5185\u5bb9\u3002", "note_en": "A seemingly unassuming lump of corroded bronze has confounded investigators for more than a century, ever since it proved to contain precision gearwheels that simply should not have existed in the ancient Greek world. A new study, using cutting-edge techniques, has now revealed what this machine could do, and how it did it, as Tony Freeth explains.\n  In spring 1900, a party of sponge divers took shelter from a violent Mediterranean storm. When the storm subsided, they dived for sponges in the local waters near the tiny island of Antikythera, between Crete and mainland Greece. By chance, they found a wreck full of ancient Greek treasures, triggering the first major underwater archaeology operation in history. Overseen by a gunboat from the Greek navy to deter looters, by early 1901 the divers had begun to recover a wonderful array of ancient Greek goods \u2013 beautiful bronze sculptures, superb glassware, jewellery, amphorae, furniture fittings, and tableware.\n  They also found an undistinguished lump, the size of a large dictionary, which was probably recovered because it looked green, suggesting bronze. It was not considered to be anything remarkable at the time. Now, though, it is recognised as by far the most important object of high technology ever recovered from the ancient world: an ancient Greek astronomical calculating machine, known as the Antikythera Mechanism.\n  Months after it was recovered, the object split apart, revealing tiny gearwheels inside, around the size of coins. It was an astonishing discovery: no one had even thought that such precision gearwheels could exist in ancient Greece. Today, only a third of the original Mechanism survives, split into 82 fragments \u2013 designated by letters A-G and numbers 1-75. It is a fiendish 3D jigsaw puzzle, all jumbled together, with incomplete and severely corroded components. Over the years, various scholars have sought to use these fragmentary elements to deduce the purpose of the machine. The latest to tackle this challenge are a multidisciplinary team of scientists, of which I am part: the University College London (UCL) Antikythera Research Team. The team was created when imaging specialist Lindsay MacDonald and materials scientist Adam Wojcik invited me to join UCL. We widened our expertise by teaming up with Myrto Georgakopoulou, an archaeometallurgist, plus two PhD students, horologist David Higgon and physicist Aris Dacanalis. Both of our students made essential contributions to our research. We have used new ideas and a close examination of all the data to challenge previous research and to create the first model that satisfies all the evidence.\n  From the beginning, the Mechanism generated controversy, with fierce arguments about whether it was an astrolabe for tracking the stars or a navigation device. Both proved to be wrong, but uncovering the machine\u2019s secrets would be a long and difficult detective story, peppered with major mistakes as well as surprising progress.\n  The first real enlightenment came from a German philologist, Albert Rehm, in the period from 1905. Buried in his unpublished research notes are some extraordinary ideas. Rehm read inscriptions on the Mechanism concerning the risings and settings of the stars as viewed from Earth, and he found key astronomical cycles, too \u2013 19-year and 76-year cycles of the Moon and a 223-month eclipse cycle. Rehm also made the radical suggestion that the device was an astronomical calculating machine. He had the groundbreaking idea that it contained epicyclic gearing \u2013 that is, gears mounted on other gears \u2013 a level of sophistication seemingly incredible for ancient Greece. In addition, Rehm proposed that all five planets known in the ancient world (Mercury, Venus, Mars, Jupiter, and Saturn) were displayed in a ring system on the front of the Mechanism. He simply did not have enough evidence to make coherent sense of his intuitions, and Rehm\u2019s understanding of the internal mechanical structure was entirely wrong. More than a century later, though, his astonishing ideas are at the core of the new model of the machine created by the UCL Antikythera Research Team.\n  Fifty years after Rehm and his struggle with inadequate data, a British physicist, Derek de Solla Price, started a 20-year odyssey of research that culminated in a famous paper  Gears from the Greeks (1974). He appreciated that to understand the Mechanism, there was a pressing need for new data to guide him through the fragmentary and confusing evidence.\n Much of Price\u2019s progress was based on X-rays of the Mechanism fragments, gathered and analysed by Charalambos and Emily Karakalos. These enabled the identification of 30 surviving gears: 27 in Fragment A and one in each of Fragments B, C, and D. Almost none of the gears were complete, so they needed to estimate the all-important number of teeth on each one \u2013 essential for understanding the workings of a geared calculating machine. From these X-rays, Price made a crucial discovery that the 19-year cycle of the Moon, identified by Rehm in the inscriptions on the Mechanism, could be calculated using its gearing.\n  Though Price made great progress, he also got much wrong, and only made unresolved suggestions about the planets. When Price died in 1983, the challenge was taken up by Michael Wright, a curator of Mechanical Engineering at London\u2019s Science Museum, who had extensive experience of studying geared devices. While Price had discovered how some of the Sun\u2013Moon system worked, it was Wright who set about reconstructing the gearing and a display for the planets.\n Here, it is helpful to pause and consider how the ancient Greeks perceived the Cosmos. Their view was (almost) entirely Earth-centred and dominated by the mistaken belief that the Sun, Moon, and planets all moved around the Earth, against a background of \u2018fixed stars\u2019. When seen from Earth, the planets appear to move against the backdrop of the stars in perplexing ways. This is even reflected in the ancient Greek origin for the modern word \u2018planet\u2019:  planetai, meaning \u2018wandering\u2019. Venus, for example, is sometimes ahead of the Sun and sometimes behind when viewed from Earth. Mostly it seems to move westwards through the sky, in the same direction as the Sun, but at times Venus will stand still against the stars at a stationary point, before looping backwards towards the east and reaching another stationary point, then resuming westwards motion once more. This synodic cycle \u2013 that is, its cycle relative to the Sun \u2013 is repeated again and again. Similar motions are shared by all the planets, creating a central problem for ancient astronomers. It was the failure to appreciate that the planets move around the sun that made the planetary motions seem so inexplicable.\n In the 1st millennium BC, the Babylonians discovered what are known as \u2018period relations\u2019 for the planets, which equated a whole number of synodic cycles with a whole number of years. In the case of Venus, for example, they found the period relation that the planet goes through five synodic cycles in eight years. They could then use these period relations to predict the future positions of the planets in the sky. The ancient Greeks built on this by proposing geometrical theories for explaining planetary motions. These theories were ideal for mechanising the variable motions of the planets in a geared calculating machine. It was a revolutionary idea: thanks to the machine, the outcomes of ancient Greek astronomical theories could be calculated with the simple turn of a handle.\n The UCL team looked at the pioneering work by Wright. He found evidence of bearings and other structures on the Main Drive Wheel. This four-spoked gear is prominent at the front of Fragment A. It is turned by the input handle and rotates once a year, thereby setting all the other gears in motion. Wright judged that there must have been an extensive epicyclic gearing system, mounted on the Main Drive Wheel. On the basis of this evidence, he proposed that one of the main purposes of the machine was to calculate the positions of the planets, which were displayed at the front of the machine. Inspired by astronomical clocks from the Middle Ages, Wright also introduced devices known as a \u2018pin-and-slotted follower\u2019 mechanisms to his reconstruction of the Antikythera Mechanism. When used alongside the gears, these devices could be used to mimic the backward loops of the planets. With great ingenuity, he managed to construct a planetarium for the Mechanism, which tracked the date, Sun, Moon, and five planets. He thought the outputs were shown as a system of pointers on the front of the machine to indicate their positions in the Zodiac. The publication of his results in 2002 was a landmark in Antikythera research, even though multiple challenges to his model would subsequently follow.\n  This is an extract of an article that appeared in\u00a0 CWA 108.\u00a0Read on in the magazine\u00a0( Click here to subscribe) or on our new website,\u00a0 The Past, which offers all of the magazine\u2019s content digitally. At  The Past you will be able to read each article in full as well as the content of our other magazines,\u00a0 Current Archaeology,\u00a0 Minerva, and\u00a0 Military History Matters.", "posttime": "2021-07-24 07:22:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u673a\u68b0,mechanism,\u884c\u661f", "title": "Antikythera \u673a\u68b0\u88c5\u7f6e \u2013 \u4e16\u754c\u8003\u53e4\u5b66", "title_en": "The Antikythera Mechanism \u2013 World Archaeology", "transed": 1, "url": "https://www.world-archaeology.com/features/the-antikythera-mechanism/", "via": "", "real_tags": ["\u673a\u68b0", "mechanism", "\u884c\u661f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069356, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u81ea\u52a8\u7684\u3002\u60a8\u7684\u6d4f\u89c8\u5668\u5c06\u5f88\u5feb\u91cd\u5b9a\u5411\u5230\u60a8\u8bf7\u6c42\u7684\u5185\u5bb9\u3002", "note_en": "This process is automatic. Your browser will redirect to your requested content shortly.", "posttime": "2021-07-24 07:22:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bc4\u8bba,gag,\u8bf7\u6c42", "title": "\u4ece\u4e00\u9879\u5173\u4e8e\u8054\u90a6\u8c03\u67e5\u611a\u8822\u8bc4\u8bba\u7684\u7981\u8a00\u4ee4\u4e2d\u83b7\u91ca", "title_en": "Released from a gag order regarding a federal investigation into a silly comment", "transed": 1, "url": "https://www.techdirt.com/articles/20210715/17183547176/techdirt-has-been-released-gag-order-regarding-federal-investigation-into-silly-comment.shtml", "via": "", "real_tags": ["\u8bc4\u8bba", "gag", "\u8bf7\u6c42"]}, {"category": "", "categoryclass": "", "imagename": "1da0a69a1d74423558a910cc80aa176e.jpg", "infoid": 1069355, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u95ee\u9898 78\uff1a\u5728\u4e0b\u9762\u7684\u7a7a\u767d\u5904\u5199\u4e0b\u60a8\u5bf9\u672c\u95ee\u5377\u4efb\u4f55\u90e8\u5206\u7684\u4efb\u4f55\u5176\u4ed6\u8bc4\u8bba\u3002 \u201c\u5fb7\u56fd\u4eba\u5265\u593a\u5c11\u6570\u7fa4\u4f53\u4ece\u4e8b\u6709\u5229\u53ef\u56fe\u7684\u5de5\u4f5c\u7684\u7279\u6743\uff0c\u53ea\u5141\u8bb8\u4ed6\u4eec\u4ece\u4e8b\u6700\u5351\u5fae\u7684\u5de5\u4f5c\uff0c\u201d1943 \u5e74\uff0c\u4e00\u540d\u63a5\u53d7\u8c03\u67e5\u7684\u7f8e\u56fd\u519b\u961f\u4e2d\u7684\u58eb\u5175\u5199\u9053\u3002\u201c\u5728\u6c11\u4e3b\u7f8e\u56fd\uff0c\u540c\u6837\u7684\u4e8b\u60c5\u4e5f\u5b58\u5728\u3002\u5728\u5fb7\u56fd\uff0c\u7279\u8bb8\u7ecf\u8425\u6743\u88ab\u62d2\u7edd\u6216\u9650\u5236\u3002\u5728\u7f8e\u56fd\u7684\u4ee3\u8bae\u5236\u6c11\u4e3b\u4e2d\uff0c\u4e5f\u5b58\u5728\u540c\u6837\u7684\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u6211\u7684\u56fd\u5bb6\u4f3c\u4e4e\u72af\u4e86\u540c\u6837\u7684\u7f6a\uff0c\u5979\u8bd5\u56fe\u60e9\u7f5a\u53e6\u4e00\u4e2a\u56fd\u5bb6\u2026\u2026\u4e00\u4e2a\u4eba\u6c11\u7684\u653f\u5e9c\uff0c\u56e0\u4e3a\u4eba\u6c11\u7684\u653f\u5e9c\u4e0d\u5e94\u8be5\u662f\u4e00\u4e2a\u9694\u79bb\u7684\u653f\u5e9c\u3002\u201d\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u7206\u53d1\u56db\u5e74\u540e\uff0c\u6765\u81ea 60 \u4e2a\u56fd\u5185\u90e8\u961f\u7684 7,434 \u540d\u9ed1\u4eba\u58eb\u5175\u5750\u4e0b\u6765\u63a5\u53d7\u8c03\u67e5 32\u3002\u8fd9\u662f\u793e\u4f1a\u548c\u884c\u4e3a\u79d1\u5b66\u5bb6\u8fdb\u884c\u7684 200 \u591a\u9879\u8c03\u67e5\u4e4b\u4e00\uff0c\u8fd9\u4e9b\u8c03\u67e5\u88ab\u5206\u914d\u6536\u96c6\u6709\u5173\u58eb\u6c14\u548c\u519b\u961f\u6548\u7387\u7684\u53cd\u9988\uff0c\u7528\u4e8e\u8be5\u7ec4\u7ec7\u7684\u7814\u7a76\u5206\u652f\u3002\u4f46\u8c03\u67e5 32 \u4e3b\u8981\u5173\u6ce8\u79cd\u65cf\u5173\u7cfb\u3002\u58eb\u5175\u4eec\u533f\u540d\u52fe\u9009\u65b9\u6846\u5e76\u5bf9\u5176\u95ee\u9898\u505a\u51fa\u7b80\u77ed\u56de\u7b54\uff1a\u58eb\u5175\u662f\u5426\u89c9\u5f97\u6218\u540e\u4ed6\u7684\u5de5\u4f5c\u524d\u666f\u4f1a\u66f4\u597d\u8fd8\u662f\u66f4\u7cdf\uff1f\u4ed6\u662f\u5426\u9884\u89c1\u5230\u62e5\u6709\u66f4\u591a\u6216\u66f4\u5c11\u7684\u6743\u5229\u548c\u7279\u6743\uff1f\u4ed6\u662f\u5426\u89c9\u5f97\u81ea\u5df1\u6709\u516c\u5e73\u7684\u673a\u4f1a\u652f\u6301\u7f8e\u56fd\u8d62\u5f97\u6218\u4e89\uff1f\u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u7b2c 78 \u53f7\uff0c\u662f\u8c03\u67e5 32 \u4e2d\u552f\u4e00\u7684\u81ea\u7531\u56de\u7b54\u63d0\u793a\u3002\u58eb\u5175\u53ef\u4ee5\u4f7f\u7528\u5b8c\u6574\u7684\u89c4\u5219\u9875\u9762\u6765\u8ba8\u8bba\u8c03\u67e5\u6db5\u76d6\u7684\u4efb\u4f55\u5185\u5bb9\u3002\u6570\u5343\u540d\u63a5\u53d7\u8c03\u67e5\u7684\u58eb\u5175\u56de\u7b54\u4e86\uff0c\u8fb9\u7f18\u6ea2\u51fa\u7684\u662f\u6124\u6012\u3001\u75db\u82e6\u3001\u5e0c\u671b\u3001\u8f9e\u804c\u3001\u51b3\u5fc3\u548c\u5bf9\u9a7b\u624e\u5728\u7f8e\u56fd\u57ce\u9547\u7684\u9ed1\u4eba\u58eb\u5175\u7684\u8650\u5f85\u7684\u53d9\u8ff0\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e58\u5750\u9694\u79bb\u7684\u516c\u5171\u6c7d\u8f66\uff0c\u5750\u5728\u9694\u79bb\u7684\u5267\u9662\uff0c\u5e76\u5728\u9694\u79bb\u7684\u5355\u4f4d\u3002\u6700\u7ec8\uff0c\u5bf9\u7b2c 78 \u53f7\u7684\u7b54\u590d\u548c\u8c03\u67e5\u7684\u9644\u52a0\u6570\u636e\u6700\u7ec8\u4ee5\u7f29\u5fae\u80f6\u5377\u548c ASCII \u6587\u672c\u6587\u4ef6\u7684\u5f62\u5f0f\u51fa\u73b0\u5728\u56fd\u5bb6\u6863\u6848\u9986\u3002\u5f53\u5386\u53f2\u6559\u6388 Ed Gitre \u5728 2009 \u5e74\u770b\u5230\u7f29\u5fae\u80f6\u5377\u53ca\u5176\u5185\u5bb9\u65f6\uff0c\u4ed6\u89c9\u5f97\u4ed6\u7684\u5b66\u751f\u548c\u516c\u4f17\u6210\u5458\u9700\u8981\u80fd\u591f\u4eb2\u773c\u770b\u5230\u6bcf\u4e00\u4e2a\u56de\u5e94\u3002\u4ed6\u5f00\u59cb\u4e86\u4e00\u4e2a\u9879\u76ee\uff0c\u5c06\u603b\u5171 65,000 \u9875\u6d89\u53ca\u8c03\u67e5 32 \u7684\u4e3b\u9898\u4ee5\u53ca\u6570\u5341\u4e2a\u5176\u4ed6\u4e3b\u9898\u8f6c\u5f55\u5e76\u53d1\u5e03\u5230\u7f51\u4e0a\uff0c\u8fd9\u4e9b\u4e3b\u9898\u5411\u4ed6\u5c55\u793a\u4e86\u4e8c\u6218\u4e2d\u7f8e\u56fd\u58eb\u5175\u975e\u5e38\u4eba\u6027\u5316\u7684\u4e00\u9762\u3002 \u201c\u80fd\u591f\u5c06\u8fd9\u4e9b\u4e2a\u4eba\u6545\u4e8b\u53d1\u5e03\u51fa\u6765\u5e76\u4fdd\u5b58\u5b83\u4eec\uff0c\u5e76\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u516c\u4f17\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\uff0c\u6211\u8ba4\u4e3a\u8fd9\u662f\u6700\u7ec8\u63a8\u52a8\u6211\u524d\u8fdb\u7684\u52a8\u529b\uff0c\u201dGitre \u8bf4\u3002\u5728\u5f17\u5409\u5c3c\u4e9a\u7406\u5de5\u5927\u5b66\uff0c\u5386\u53f2\u5b66\u5bb6\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u6b63\u5728\u5408\u4f5c\uff0c\u4f7f\u7528\u6c89\u6d78\u5f0f\u53ef\u89c6\u5316\u3001\u4eba\u5de5\u667a\u80fd\u548c\u4f17\u5305\u7b49\u5de5\u5177\uff0c\u8ba9\u516c\u4f17\u80fd\u591f\u5e7f\u6cdb\u5730\u4e86\u89e3\u5386\u53f2\u3002\u4ed6\u4eec\u5df2\u5c06\u8fd9\u4e9b\u6280\u672f\u5e94\u7528\u4e8e\u8bf8\u5982\u7b5b\u9009\u6210\u5806\u6587\u4ef6\u5e76\u7406\u89e3\u5b83\u4eec\u6216\u7ffb\u9605\u65e0\u6570\u9875\u53c2\u8003\u4e66\u4ee5\u83b7\u53d6\u56fe\u50cf\u7b49\u4efb\u52a1\u2014\u2014\u8fd9\u4e9b\u4efb\u52a1\u5728\u4f20\u7edf\u7684\u5b66\u4e60\u6a21\u5f0f\u4e2d\u53ef\u80fd\u4f1a\u538b\u5012\u597d\u5947\u7684\u5934\u8111\u3002\u76ee\u7684\u662f\u4e3a\u4eba\u7c7b\u7528\u6237\u521b\u9020\u6280\u672f\u589e\u5f3a\u7684\u4f53\u9a8c\uff0c\u8ba9\u4ed6\u4eec\u63a7\u5236\u5e73\u53f0\uff0c\u4f7f\u5386\u53f2\u7814\u7a76\u66f4\u52a0\u5e73\u6613\u8fd1\u4eba\u548c\u4e92\u52a8\u3002\n\u201c\u8fd9\u4e9b\u7814\u7a76\u4eba\u5458\u4ee3\u8868\u4e86\u5f53\u4eca\u7279\u522b\u91cd\u8981\u7684\u4e1c\u897f\uff1a\u5177\u6709\u516c\u6c11\u610f\u8bc6\u3001\u4ee5\u4eba\u4e3a\u672c\u7684\u6280\u672f\u65b9\u6cd5\uff0c\u201d\u4eba\u7c7b\u6280\u672f\u5021\u8bae\u6267\u884c\u8463\u4e8b\u517c\u7814\u7a76\u6280\u672f\u3001\u79cd\u65cf\u3001\u5b97\u6559\u548c\u56fd\u5bb6\u5b89\u5168\u7684\u4eba\u6587\u5b66\u8005\u897f\u5c14\u7ef4\u65af\u7279\u7ea6\u7ff0\u900a\u8bf4\u3002 Gitre \u548c\u5176\u4ed6\u5728\u5f17\u5409\u5c3c\u4e9a\u7406\u5de5\u5927\u5b66\u4ece\u4e8b\u6570\u5b57\u5386\u53f2\u5de5\u4f5c\u7684\u4eba\u62c5\u4efb Tech for Humanity \u5b66\u8005\u3002 \u201c\u4ed6\u4eec\u7684\u9879\u76ee\u5229\u7528\u6570\u5b57\u6280\u672f\u4ea7\u751f\u79ef\u6781\u7684\u793e\u4f1a\u5f71\u54cd\uff0c\u4f53\u73b0\u4e86\u6211\u4eec\u5927\u5b66\u8303\u56f4\u5185\u7684\u4eba\u7c7b\u79d1\u6280\u8ba1\u5212\u7684\u66f4\u5927\u76ee\u6807\uff0c\u201d\u7ea6\u7ff0\u900a\u8bf4\u3002 \u201c\u73b0\u5728\u5f88\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u6700\u56f0\u96be\u7684\u95ee\u9898\u662f\u5728\u4eba\u7c7b\u524d\u6cbf\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u770b\u5230\u5b66\u8005\u4eec\u5728\u7814\u7a76\u548c\u516c\u4f17\u5f71\u54cd\u65b9\u9762\u63a8\u8fdb\u8fd9\u4e00\u65b9\u5411\u4ee4\u4eba\u5174\u594b\u3002\u201d\u5728\u83ab\u65af\u827a\u672f\u4e2d\u5fc3\uff0c17 \u540d\u5386\u53f2\u7cfb\u5b66\u751f\u8f6e\u6d41\u7a7f\u8fc7\u6c99\u76d2\u7684\u5f00\u653e\u7a7a\u95f4\uff0c\u6234\u7740\u865a\u62df\u73b0\u5b9e\u62a4\u76ee\u955c\uff0c\u6325\u821e\u7740\u624b\u6301\u63a7\u5236\u5668\u3002\u5728 3D \u865a\u62df\u5de5\u4f5c\u7a7a\u95f4\u7cfb\u7edf Immersive Space to Think \u4e2d\uff0c\u5b66\u751f\u4eec\u53ef\u4ee5\u9762\u5bf9\u663e\u793a\u5899\uff0c\u8d70\u5b83\u7684\u957f\u5ea6\uff0c\u62c9\u8d77\u6587\u6863\uff0c\u79fb\u52a8\u5b83\u4eec\uff0c\u5e76\u5728\u7814\u7a76\u5185\u5bb9\u65f6\u5c06\u5b83\u4eec\u805a\u96c6\u5728\u7a7a\u95f4\u4e2d\u3002\u76ee\u524d\u52a0\u8f7d\u5230\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u5305\u542b\u5bf9\u8c03\u67e5 32 \u7684\u8f6c\u5f55\u56de\u590d\u3002 \u5728\u8981\u6c42\u56fd\u5bb6\u6863\u6848\u9986\u5c06\u5305\u542b\u8c03\u67e5\u6570\u636e\u7684 44 \u5377\u7f29\u5fae\u80f6\u5377\u6570\u5b57\u5316\u540e\uff0cGitre \u62db\u52df\u4e86\u4ed6\u7684\u672c\u79d1\u4e8c\u6218\u5386\u53f2\u8bfe\u7a0b\u7684\u5b66\u751f\u548c 7,000 \u591a\u540d\u5fd7\u613f\u8005\u4f17\u5305Zooniverse \u5c06\u6bcf\u4e2a\u54cd\u5e94\u8f6c\u5f55\u56db\u6b21\u3002\u4ed6\u4eec\u4ece\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6 Kurt Luther \u90a3\u91cc\u83b7\u5f97\u4e86\u4eba\u5de5\u667a\u80fd\u7684\u63a8\u52a8\uff0c\u4ed6\u7684 Crowd Intelligence \u5b9e\u9a8c\u5ba4\u8d21\u732e\u4e86 Incite\uff0c\u8fd9\u662f\u4ed6\u4eec\u4e3a\u53e6\u4e00\u4e2a\u7f8e\u56fd\u5386\u53f2\u4f17\u5305\u9879\u76ee\u5f00\u53d1\u7684\u5f00\u6e90\u8f6f\u4ef6\u8f6c\u5f55\u63d2\u4ef6\uff0c\u8be5\u9879\u76ee\u7531 James I. Robertson Jr. \u526f\u6559\u6388 Paul Quigley \u9886\u5bfc\u3002\u5185\u6218\u7814\u7a76\u3002\u968f\u7740\u8f6c\u5f55\u7684\u8fdb\u884c\uff0cGitre \u60f3\u8ba9\u4ed6\u7684\u5b66\u751f\u4ee5\u8eab\u4e34\u5176\u5883\u7684\u65b9\u5f0f\u6765\u5904\u7406\u6570\u636e\u96c6\u3002\u4ed6\u4ece Luther \u90a3\u91cc\u4e86\u89e3\u5230\uff0c\u5176\u4ed6\u7814\u7a76\u4eba\u5458\u6b63\u5728\u4eba\u673a\u4ea4\u4e92\u4e2d\u5fc3\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u6587\u6863\u610f\u4e49\u6784\u5efa\u7684\u865a\u62df\u5de5\u4f5c\u7a7a\u95f4\uff0c\u7531\u8be5\u4e2d\u5fc3\u7684\u4e3b\u4efb\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u6388 Frank J. Maher \u9886\u5bfc Doug Bowman\u3002 2019 \u5e74\uff0cGitre \u548c Bowman \u770b\u5230\u4e86\u4ed6\u4eec\u4e24\u4e2a\u9879\u76ee\u4e4b\u95f4\u5171\u751f\u7684\u673a\u4f1a\uff1aGitre \u7684\u5b66\u751f\u53ef\u4ee5\u5728\u7cfb\u7edf\u4e2d\u5de5\u4f5c\uff0c\u6c89\u6d78\u5f0f\u601d\u8003\u7a7a\u95f4\uff0c\u5e76\u5728\u7814\u7a76\u8c03\u67e5\u54cd\u5e94\u65f6\u5229\u7528\u5176\u529f\u80fd\uff0c\u800c Bowman \u7684\u56e2\u961f\u53ef\u4ee5\u4ece\u4ed6\u4eec\u4f7f\u7528\u5de5\u4f5c\u533a\u3002\u9c8d\u66fc\u5c06\u5386\u53f2\u63a2\u7a76\u89c6\u4e3a\u4e00\u79cd\u7814\u7a76\u7c7b\u578b\u7684\u81ea\u7136\u5951\u5408\uff0c\u53ef\u4ee5\u4e3a\u6c89\u6d78\u5f0f\u601d\u8003\u7a7a\u95f4\u7684\u53d1\u5c55\u63d0\u4f9b\u4fe1\u606f\u3002\u5386\u53f2\u5b66\u5bb6\u52aa\u529b\u5904\u7406\u6765\u81ea\u65e0\u6570\u6765\u6e90\u7684\u5927\u91cf\u57fa\u4e8e\u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u5e76\u4ed4\u7ec6\u7b5b\u9009\u5b83\u4eec\u3002\u4ed6\u8bf4\uff0c\u8be5\u7cfb\u7edf\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u7b80\u5316\u53ef\u80fd\u662f\u8eab\u4f53\u548c\u8ba4\u77e5\u4e0a\u4ee4\u4eba\u75b2\u60eb\u7684\u8ffd\u6c42\u3002\n\u201c\u6211\u4eec\u6b63\u5728\u590d\u5236\u67d0\u4eba\u53ef\u80fd\u7528\u767d\u677f\u505a\u7684\u4e8b\u60c5\uff0c\u201d\u9c8d\u66fc\u8bf4\u3002 \u201c\u4f46\u6709\u4e86\u865a\u62df\u73b0\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u589e\u5f3a\u8fd9\u79cd\u4e92\u52a8\uff0c\u4f7f\u5176\u66f4\u52a0\u5f3a\u5927\u548c\u5bcc\u6709\u8868\u73b0\u529b\u3002\u201d\u5f88\u5feb\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u6388\u517c\u6851\u52a0\u5c3c\u4eba\u5de5\u667a\u80fd\u548c\u6570\u636e\u5206\u6790\u4e2d\u5fc3\u526f\u4e3b\u4efb\u514b\u91cc\u65af\u00b7\u8bfa\u65af (Chris North) \u7684\u52aa\u529b\u4e0b\uff0c\u7cfb\u7edf\u672c\u8eab\u5c06\u5411\u5b66\u751f\u5b66\u4e60\u4ee5\u652f\u6301\u4ed6\u4eec\u7684\u610f\u4e49\u6784\u5efa\u4f53\u9a8c\u3002\u5f53\u7528\u6237\u5bf9\u6587\u6863\u8fdb\u884c\u805a\u7c7b\u3001\u5c06\u5b83\u4eec\u62c9\u8fd1\u6216\u63a8\u5f00\u5e76\u67e5\u770b\u5b83\u4eec\u4e4b\u95f4\u65f6\uff0c\u7cfb\u7edf\u5c06\u8ddf\u8e2a\u4ed6\u4eec\u7684\u884c\u4e3a\u2014\u2014\u4f8b\u5982\uff0c\u5feb\u901f\u51dd\u89c6\u53ef\u80fd\u8868\u793a\u4fe1\u606f\u8fc7\u8f7d\uff0c\u800c\u67d0\u4e9b\u805a\u7c7b\u53ef\u80fd\u8868\u660e\u5185\u5bb9\u4f18\u5148\u7ea7\u3002\u8be5\u6570\u636e\u5c06\u901a\u77e5\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u53ef\u4ee5\u8bc6\u522b\u96c6\u7fa4\u5e76\u5411\u7528\u6237\u5efa\u8bae\u76f8\u5173\u6587\u6863\u3002 \u201c\u6211\u4eec\u4e0d\u4f1a\u59a8\u788d\u7528\u6237\uff0c\u4f46\u53ef\u4ee5\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u975e\u5e38\u6709\u7528\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4e0d\u5fc5\u624b\u52a8\u5b8c\u6210\u641c\u7d22\u3001\u9605\u8bfb\u548c\u7ec4\u7ec7\u65b9\u9762\u7684\u6240\u6709\u5de5\u4f5c\uff0c\u201d\u9c8d\u66fc\u8bf4\u3002\u7531\u4e8e Gitre \u81f4\u529b\u4e8e\u5728\u4eca\u5e74\u590f\u5929\u63a8\u51fa\u7684\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u5b8c\u6574\u7684\u8c03\u67e5\u56de\u590d\u96c6\uff0c\u4ed6\u8ba1\u5212\u4e0e Bowman \u7684\u56e2\u961f\u5408\u4f5c\uff0c\u5c06\u5728 Immersive Space to Think \u4e2d\u9605\u8bfb\u8c03\u67e5 32 \u56de\u590d\u7684\u4f53\u9a8c\u5e26\u7ed9\u516c\u4f17\u3002\u4eca\u5e74\uff0c\u4ed6\u4eec\u83b7\u5f97\u4e86\u521b\u610f\u3001\u827a\u672f\u548c\u6280\u672f\u7814\u7a76\u6240\u7684\u8d44\u52a9\uff0c\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u4e8c\u6218\u535a\u7269\u9986\u5c55\u89c8\uff0c\u8ba9\u535a\u7269\u9986\u53c2\u89c2\u8005\u80fd\u591f\u8fdb\u5165\u865a\u62df\u7cfb\u7edf\u5e76\u9605\u8bfb\u8c03\u67e5\u56de\u590d\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u67e5\u770b\u670d\u52a1\u5fbd\u7ae0\u3001\u533b\u7597\u5305\u3001\u548c\u7167\u7247\u3002 Gitre \u8bf4\uff0c\u4e0e\u58eb\u5175\u7684\u7b2c\u4e00\u624b\u8d44\u6599\u7684\u63a5\u89e6\u53ef\u4ee5\u5411\u8bfb\u8005\u63ed\u793a\u9ed1\u4eba\u58eb\u5175\u5728\u6fc0\u8fdb\u4e3b\u4e49\u7684\u6fc0\u52a8\u65f6\u523b\u6b63\u5728\u5efa\u7acb\u7684\u60c5\u7eea\u3002 \u201c\u58eb\u5175\u7684\u7ecf\u5386\u786e\u5b9e\u63a8\u52a8\u4e86\u6c11\u6743\u8fd0\u52a8\uff0c\u6b63\u662f\u56e0\u4e3a\u6709\u4e00\u652f\u519b\u961f\u5728\u56fd\u5916\u4e0e\u6cd5\u897f\u65af\u4e3b\u4e49\u548c\u5a01\u6743\u4e3b\u4e49\u4f5c\u6597\u4e89\uff0c\u540c\u65f6\u4fdd\u6301\u79cd\u65cf\u9694\u79bb\u548c\u79cd\u65cf\u6b67\u89c6\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u6211\u60f3\u5c06\u8fd9\u6570\u5343\u79cd\u58f0\u97f3\u5e26\u5165\u90a3\u6bb5\u5386\u53f2\uff0c\u5e76\u52aa\u529b\u601d\u8003\u4ec0\u4e48\u662f\u8fd0\u52a8\u3002\u6211\u4eec\u6b63\u5728\u52aa\u529b\u4e86\u89e3\u6210\u5343\u4e0a\u4e07\u8c08\u8bba\u5409\u59c6\u00b7\u514b\u52b3\u548c\u79cd\u65cf\u9694\u79bb\u7684\u975e\u88d4\u7f8e\u56fd\u4eba\u7684\u6545\u4e8b\u3002\u201d\u58eb\u5175\u4eec\u53cc\u624b\u653e\u5728\u819d\u4e0a\uff0c\u5341\u6307\u76f8\u6263\uff0c\u5750\u7740\u7b49\u5f85\u753b\u50cf\u3002\u4ed6\u4eec\u53cc\u81c2\u4ea4\u53c9\u7ad9\u7acb\u6216\u4fa7\u8eab\u4f11\u606f\uff0c\u6216\u624b\u6301\u523a\u5200\uff0c\u950b\u5229\u7684\u4e00\u7aef\u671d\u4e0a\u3002\u6709\u4e9a\u4f2f\u62c9\u7f55\u3001\u67e5\u5c14\u65af\u548c\u8def\u6613\u65af\u3002\u6240\u7f57\u95e8\u3001\u5c4b\u5927\u7ef4\u548c\u5a01\u5c14\u900a\u3002\u4ed6\u4eec\u662f 209 \u5f20\u7167\u7247\u7684\u4e3b\u9898\uff0c\u4ee3\u8868\u4e86\u5185\u6218\u8fd1 200,000 \u540d\u9ed1\u4eba\u58eb\u5175\u4e2d\u7684\u4e00\u5c0f\u90e8\u5206\u3002\u8fd9\u4e9b\u56fe\u50cf\u662f Natalie Robinson \u4e8e 2018 \u5e74\u8ffd\u8e2a\u5230\u7684\uff0c\u5f53\u65f6\u5979\u8fd8\u662f\u4f50\u6cbb\u4e9a\u5927\u5b66\u7684\u5386\u53f2\u7cfb\u5b66\u751f\uff0c\u5e76\u5728\u5f17\u5409\u5c3c\u4e9a\u7406\u5de5\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u526f\u6559\u6388\u517c\u6559\u804c\u5458\u5de5\u5e93\u5c14\u7279\u00b7\u8def\u5fb7 (Kurt Luther) \u9886\u5bfc\u7684\u4eba\u7fa4\u667a\u80fd\u5b9e\u9a8c\u5ba4\u5b9e\u4e60\u5386\u53f2\u7cfb\u7684\u3002\u90a3\u5e74\u590f\u5929\uff0c\u8def\u5fb7\u8d23\u6210\u7f57\u5bbe\u900a\u6574\u7406\u535a\u7269\u9986\u548c\u56fe\u4e66\u9986\u85cf\u54c1\u3001\u5728\u7ebf\u653f\u5e9c\u6863\u6848\u4ee5\u53ca\u4ed6\u81ea\u5df1\u7684\u53c2\u8003\u4e66\u526f\u672c\uff0c\u4ee5\u5c06\u9ed1\u4eba\u5185\u6218\u58eb\u5175\u548c\u5e73\u6c11\u7684\u56fe\u50cf\u6dfb\u52a0\u5230\u5185\u6218\u7167\u7247\u4fa6\u63a2\u6570\u636e\u5e93\u4e2d\u3002\nCivil War Photo Sleuth \u662f\u4e00\u4e2a\u5728\u7ebf\u5e73\u53f0\uff0c\u5b83\u4f7f\u7528\u4f17\u5305\u4ee5\u53ca\u4eba\u7c7b\u548c\u4eba\u5de5\u667a\u80fd\u7684\u7ed3\u5408\u6765\u8bc6\u522b\u5185\u6218\u65f6\u4ee3\u8096\u50cf\u4e2d\u7684\u672a\u77e5\u58eb\u5175\u548c\u5e73\u6c11\u3002\u8be5\u5e73\u53f0\u5141\u8bb8\u7528\u6237\u4e0a\u4f20\u7167\u7247\u5e76\u4f7f\u7528\u5143\u6570\u636e\uff08\u4f8b\u5982\u7167\u7247\u94ed\u6587\u548c\u683c\u5f0f\uff09\u4ee5\u53ca\u519b\u8854\u5fbd\u7ae0\u548c\u5236\u670d\u989c\u8272\u7b49\u89c6\u89c9\u7ebf\u7d22\u6807\u8bb0\u5b83\u4eec\u3002\u7136\u540e\uff0c\u7528\u6237\u5c1d\u8bd5\u5c06\u7167\u7247\u4e0e\u5df2\u8bc6\u522b\u7684\u58eb\u5175\u6863\u6848\u8054\u7cfb\u8d77\u6765\uff0c\u5e76\u9644\u4e0a\u519b\u4e8b\u8bb0\u5f55\u3002\u8be5\u5e73\u53f0\u4f9d\u9760\u5176 15,000 \u591a\u540d\u7528\u6237\u6765\u5e2e\u52a9\u6784\u5efa\u6570\u636e\u5e93\u3002\u5728\u542f\u52a8\u8be5\u7f51\u7ad9\u4e4b\u524d\uff0cLuther \u7684\u56e2\u961f\u4ece\u7f8e\u56fd\u56fd\u4f1a\u56fe\u4e66\u9986\u3001\u56fd\u5bb6\u6863\u6848\u9986\u548c\u7f8e\u56fd\u9646\u519b\u519b\u4e8b\u5386\u53f2\u7814\u7a76\u6240\u7b49\u6765\u6e90\u63d0\u53d6\u4e86\u8fd1 20,000 \u5f20\u7167\u7247\uff0c\u4e3a\u8be5\u7f51\u7ad9\u63d0\u4f9b\u5df2\u8bc6\u522b\u7684\u53c2\u8003\u56fe\u50cf\u3002 Luther \u89e3\u91ca\u8bf4\uff0c\u7528\u6237\u5bf9\u5e73\u53f0\u56fe\u50cf\u5b58\u50a8\u7684\u8d21\u732e\u8d8a\u591a\uff0cPhoto Sleuth \u6210\u5458\u5c31\u8d8a\u80fd\u627e\u5230\u4e0e\u5176\u4e0a\u4f20\u7684\u5339\u914d\u9879\u3002\u5f53\u7528\u6237\u4e0a\u4f20\u7167\u7247\u5e76\u5c1d\u8bd5\u5bfb\u627e\u5339\u914d\u65f6\uff0cPhoto Sleuth \u4f7f\u4ed6\u4eec\u80fd\u591f\u4f7f\u7528\u5e73\u53f0\u7684\u641c\u7d22\u8fc7\u6ee4\u5668\u7f29\u5c0f\u6570\u636e\u5e93\u8bc6\u522b\u7167\u7247\u4e4b\u95f4\u53ef\u80fd\u7684\u5339\u914d\u8303\u56f4\uff0c\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u57fa\u4e8e\u4e0a\u4f20\u671f\u95f4\u6807\u8bb0\u5230\u6bcf\u5f20\u7167\u7247\u7684\u89c6\u89c9\u7ebf\u7d22\u3002\u7136\u540e\u8be5\u5e73\u53f0\u4f7f\u7528\u9762\u90e8\u8bc6\u522b\u6765\u8fdb\u4e00\u6b65\u51cf\u5c11\u9009\u62e9\u3002\u5728\u6700\u540e\u4e00\u7ad9\uff0c\u7531\u7528\u6237\u6765\u5bfb\u627e\u5339\u914d\u9879\u3002\u5982\u679c\u7528\u6237\u627e\u5230\u4e00\u4e2a\uff0c\u4ed6\u4eec\u53ef\u4ee5\u63d0\u51fa\u5b83\u5e76\u8868\u660e\u4ed6\u4eec\u5bf9\u5b83\u7684\u4fe1\u5fc3\u3002 Luther \u8bf4\uff0c\u7531\u4e8e\u7167\u7247\u5728\u6211\u4eec\u7406\u89e3\u8fc7\u53bb\u4e2d\u6240\u8d77\u7684\u4f5c\u7528\uff0c\u4ed6\u4e00\u76f4\u81f4\u529b\u4e8e\u521b\u9020\u548c\u6539\u8fdb Photo Sleuth\u3002 \u201c\u8fd9\u4e9b\u56fe\u50cf\u5177\u6709\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u89c6\u89c9\u529b\u91cf\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4ed6\u4eec\u8ba9\u5386\u53f2\u6829\u6829\u5982\u751f\uff0c\u8ba9\u4eba\u611f\u89c9\u66f4\u52a0\u771f\u5b9e\u2014\u2014\u770b\u5230\u4e00\u4e2a\u4eba\u7684\u8138\u7684\u7ec6\u8282\uff0c\u4ed6\u4eec\u7a7f\u7684\u8863\u670d\uff0c\u4ed6\u4eec\u968f\u8eab\u643a\u5e26\u7684\u8bbe\u5907\u3002\u201d\u8def\u5fb7\u8bf4\uff0c\u7136\u800c\uff0c\u4e00\u76f4\u5f88\u96be\u627e\u5230\u5185\u6218\u65f6\u4ee3\u9ed1\u4eba\u58eb\u5175\u548c\u5e73\u6c11\u8fc7\u53bb\u7684\u6444\u5f71\u7a97\u53e3\u3002\u8fd9\u79cd\u5dee\u5f02\u53cd\u6620\u4e86\u5bf9\u7f8e\u56fd\u9ed1\u4eba\u5386\u53f2\u8bb0\u5f55\u7684\u66f4\u5e7f\u6cdb\u7684\u64e6\u9664\u3001\u6392\u65a5\u548c\u7834\u574f\u6a21\u5f0f\uff0c\u8fd9\u4e5f\u662f\u7f57\u5bbe\u900a\u4f5c\u54c1\u6536\u96c6\u66f4\u591a\u7167\u7247\u4ee5\u4f5c\u4e3a\u53c2\u8003\u56fe\u50cf\u6dfb\u52a0\u5230\u6570\u636e\u5e93\u4e2d\u7684\u539f\u56e0\u3002\u5979\u8bb0\u5f97\u5728\u641c\u7d22\u5df2\u8bc6\u522b\u56fe\u50cf\u65f6\u770b\u5230\u4e86\u5b83\u7684\u8ff9\u8c61\u3002\u7f57\u5bbe\u900a\u5728\u4ece\u4e00\u4e2a\u7cfb\u5217\u5230\u4e0b\u4e00\u4e2a\u7cfb\u5217\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u9047\u5230\u76f8\u540c\u7684\u7167\u7247\u3002\u65e9\u4e9b\u65f6\u5019\uff0c\u8be5\u56e2\u961f\u4e3a\u5efa\u7acb\u6570\u636e\u5e93\u800c\u627e\u5230\u7684\u5927\u90e8\u5206\u7167\u7247\u90fd\u662f\u767d\u4eba\u8054\u76df\u58eb\u5175\u7684\u7167\u7247\u3002 \u201c\u8054\u90a6\u519b\u961f\u4e2d\u6709\u5927\u91cf\u975e\u88d4\u7f8e\u56fd\u58eb\u5175\uff0c\u201d\u8def\u5fb7\u8bf4\u3002 \u201c\u4ed6\u4eec\u5bf9\u8d62\u5f97\u6218\u4e89\u771f\u7684\u5f88\u6709\u5e2e\u52a9\uff0c\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e9b\u4eba\u83b7\u5f97\u4e86\u8363\u8a89\u52cb\u7ae0\uff0c\u4f46\u8fd9\u4e9b\u7167\u7247\u4e2d\u5f88\u5c11\u6709\u4eba\u7559\u5b58\u5230\u4eca\u5929\u3002\u5230\u5185\u6218\u7ed3\u675f\u65f6\uff0c\u9ed1\u4eba\u58eb\u5175\u5360\u8054\u90a6\u519b\u961f\u7684 10%\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u4eca\u5929\u5f88\u96be\u627e\u5230 100 \u5f20\u5df2\u8bc6\u522b\u7684\u7167\u7247\u3002\u201d\u6280\u672f\u65b9\u9762\u7684\u6311\u6218\uff0c\u5728\u4eba\u5de5\u667a\u80fd\u9886\u57df\uff0c\u4e5f\u5851\u9020\u4e86\u56e2\u961f\u7684\u5de5\u4f5c\u3002 Luther \u89e3\u91ca\u8bf4\uff0c\u4ed6\u4eec\u4f7f\u7528\u83b7\u5f97\u8bb8\u53ef\u7684\u9762\u90e8\u8bc6\u522b\u6280\u672f\u6765\u652f\u6301\u7528\u6237\u7684\u4fa6\u67e5\uff0c\u4f46\u4ed6\u4eec\u907f\u514d\u4f7f\u7528\u5168\u81ea\u52a8\u7cfb\u7edf\u6765\u5236\u4f5c ID\uff0c\u56e0\u4e3a\u4ec5\u51ed\u9762\u90e8\u8bc6\u522b\u6280\u672f\u5728\u8bc6\u522b\u9762\u90e8\u65b9\u9762\u662f\u4e0d\u5b8c\u7f8e\u7684\u3002\u5b83\u751a\u81f3\u88ab\u8bc1\u660e\u4f1a\u6210\u4e3a\u79cd\u65cf\u548c\u6027\u522b\u504f\u89c1\u7684\u727a\u7272\u54c1\uff0c\u5bf9\u6709\u8272\u4eba\u79cd\u548c\u5973\u6027\u7684\u8868\u73b0\u66f4\u5dee\u2014\u2014\u5e76\u4e14\u8981\u6c42\u8bb8\u591a\u516c\u53f8\u6388\u6743\u6280\u672f\u4ee5\u91cd\u65b0\u5ba1\u89c6\u7528\u4e8e\u8bad\u7ec3\u5176\u7b97\u6cd5\u7684\u6570\u636e\u7684\u5305\u5bb9\u6027\u3002\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4e0d\u8981\u8fc7\u5206\u4f9d\u8d56\u8fd9\u4e9b\u6388\u6743\u6280\u672f\u5f88\u91cd\u8981\uff0cLuther \u8bf4\uff0c\u800c\u662f\u8ba9\u4eba\u7c7b\u7528\u6237\u6700\u7ec8\u5c1d\u8bd5\u8bc6\u522b\u56fe\u50cf\u2014\u2014\u6b63\u5982\u7cfb\u8c31\u5b66\u5bb6\u3001\u6536\u85cf\u5bb6\u548c\u8ffd\u8e2a\u7956\u5148\u7684\u5bb6\u5ead\u6210\u5458\u957f\u671f\u4ee5\u6765\u5728\u4f20\u7edf\u7167\u7247\u8c03\u67e5\u4e2d\u6240\u505a\u7684\u90a3\u6837\u3002 \u201c\u9762\u90e8\u8bc6\u522b\u7684\u771f\u6b63\u4f18\u52bf\u5728\u4e8e\u7f29\u5c0f\u53ef\u80fd\u6027\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u6bd4\u8f83\u4e24\u5f20\u7167\u7247\u5e76\u544a\u8bc9\u4f60\u5b83\u662f\u5426\u662f\u540c\u4e00\u4e2a\u4eba\u5e76\u4e0d\u662f\u5f88\u597d\u3002\u4eba\u7c7b\u5728\u8fd9\u65b9\u9762\u8981\u597d\u5f97\u591a\u3002\u4ed6\u4eec\u80fd\u591f\u67e5\u770b\u6240\u6709\u8fd9\u4e9b\u7ec6\u8282\u5e76\u8003\u8651\u66f4\u5e7f\u6cdb\u7684\u80cc\u666f\u3002\u201d\u7f57\u5bbe\u900a\u5728 Photo Sleuth \u6570\u636e\u5e93\u4e2d\u6dfb\u52a0\u7684\u5185\u5bb9\u4f7f\u5176\u6210\u4e3a\u7f51\u4e0a\u53d1\u73b0\u7684\u6700\u5927\u7684\u9ed1\u4eba\u5185\u6218\u58eb\u5175\u7167\u7247\u96c6\u4e4b\u4e00\u3002\u4f46\u8fd9\u4e2a\u9879\u76ee\u53ea\u662f\u4e00\u4e2a\u5f00\u59cb\uff0cLuther \u8bf4\u3002\u4ed6\u76f8\u4fe1\u8fd8\u6709\u66f4\u591a\u7684\u56fe\u50cf\uff0c\u5728\u4ed6\u5e0c\u671b Photo Sleuth \u7528\u6237\u7ee7\u7eed\u4e0a\u4f20\u7684\u5c1a\u672a\u5f00\u53d1\u7684\u8d21\u732e\u4e2d\u3002 \u201c\u8fd9\u4e9b\u7528\u6237\u4ece\u6211\u4eec\u6c38\u8fdc\u4e0d\u77e5\u9053\u7684\u6765\u6e90\u4e2d\u5f15\u5165\u7167\u7247\uff0c\u201d\u8def\u5fb7\u8bf4\u3002 \u201c\u4ed6\u4eec\u6765\u81ea\u4ed6\u4eec\u7684\u9601\u697c\uff0c\u6765\u81ea\u4ed6\u4eec\u7684\u5730\u4e0b\u5ba4\u3002\u201d Luther \u8bf4\uff0c\u4f5c\u4e3a\u8fd9\u4e9b\u53d1\u73b0\u7684\u5bb6\u56ed\uff0cPhoto Sleuth \u4f7f\u7528\u6237\u80fd\u591f\u8fdb\u884c\u4ed6\u4eec\u66fe\u7ecf\u8ba4\u4e3a\u4e0d\u53ef\u80fd\u7684\u9879\u76ee\u3002 \u201c\u6709\u4e9b\u8c03\u67e5\u5728\u8fc7\u53bb\u6839\u672c\u4e0d\u4f1a\u53d1\u751f\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u8be5\u5e73\u53f0\u5141\u8bb8\u4eba\u4eec\u63a2\u7d22\u8c03\u67e5\u7ebf\u7d22\uff0c\u5426\u5219\u8fd9\u4e9b\u7ebf\u7d22\u4f3c\u4e4e\u96be\u4ee5\u8ffd\u5bfb\u3002\u7a81\u7136\u4e4b\u95f4\uff0c\u73b0\u5728\u4ed6\u4eec\u4e0d\u662f\u4e86\u3002\u201d", "note_en": "Question 78: Use the space below to write any other comments you have about any part of this questionnaire.\n \u201cThe Germans deny a minority group the privileges of working at profitable jobs &amp; permit them only the most menial,\u201d one surveyed soldier in the segregated U.S. Army wrote in 1943. \u201cIn Democratic America the same thing exist. In Germany the franchise is denied or restricted. In the representative democracy of the U.S. the same conditions exists. Therefore it would appear that my country is guilty of the same things she attempts to punish another for \u2026 A government of the people, for the people by the people should not be a segregated one.\u201d\n Four years into World War II, 7,434 Black soldiers from 60 domestic units sat down to Survey 32. It was one of over 200 surveys administered by social and behavioral scientists assigned to gather feedback on morale and the efficiency of the Army, for the organization\u2019s research branch. But Survey 32 was focused primarily on race relations.\n The soldiers anonymously ticked boxes and gave short-answer responses to its questions: Did the soldier feel he would have better or worse job prospects after the war? Did he foresee having more rights and privileges, or less? Did he feel he had a fair chance to support the U.S. in winning the war?\n The final question, No. 78, was the only free-response prompt of Survey 32. Soldiers could use the full, ruled page to discuss anything the survey had covered. Thousands of surveyed soldiers answered, and spilling into the margins were words of anger, anguish, hope, resignation, resolve, and recounting of mistreatment of Black soldiers stationed in U.S. towns, as they rode segregated buses, sat in segregated theaters, and served in segregated units.\n Eventually, the responses to No. 78 and the survey\u2019s additional data ended up in microfilm rolls and ASCII text files at the National Archives. When history professor Ed Gitre came across the microfilm and its contents in 2009, he felt that his students and members of the general public needed to be able to see each of the responses for themselves. He began a project  to transcribe and bring online a total of 65,000 pages touching on the topics of Survey 32, plus dozens of other subjects that to him expose the very human sides of the American soldier in World War II.\u00a0\u201cThe ability to get these individual stories out and to preserve them, and to make them accessible to as broad of a public as possible, I think is what drives me ultimately,\u201d Gitre said.\n At Virginia Tech, historians and computer scientists are working together to enable that kind of broad public access to history using tools like immersive visualization, artificial intelligence, and crowdsourcing. They&#39;ve applied these technologies to tasks like sifting through piles of documents and making sense of them or leafing through countless pages of reference books for an image \u2014 tasks that in traditional modes of study can overwhelm inquiring minds.\u00a0The aim is to create technology-enhanced experiences for human users, putting them in control of platforms that make historical study more approachable and interactive.\n  \u201cThese researchers represent what is especially critical today: civic-minded, human-centered approaches to technology,\u201d said Sylvester Johnson, executive director of the  Tech for Humanity initiative and a  humanities scholar who studies technology, race, religion, and national security. Gitre and others working in digital history at Virginia Tech serve as Tech for Humanity  scholars.\n \u201cTheir projects, which leverage digital technology to generate a positive social impact, exemplify the larger aims of our universitywide Tech for Humanity initiative,\u201d Johnson said. \u201cIt\u2019s now clear that the most difficult problems we will need to solve are at the human frontier. That is exactly why it\u2019s exciting to see the scholars advancing this direction in research and public impact.\u201d\n At the Moss Arts Center, 17 history students took turns moving through the open space of the Sandbox, wearing virtual reality goggles and wielding hand-held controllers. Inside Immersive Space to Think, a 3D virtual workspace system, the students could face a display wall, walk its length, pull up documents, move them, and cluster them in space as they studied the contents.\n The documents loaded into the system at the moment contained transcribed responses to Survey 32. After asking the National Archives to digitize 44 microfilm rolls containing the survey data, Gitre had recruited students in his undergraduate World War II history course and more than 7,000 volunteers  crowdsourced on Zooniverse to transcribe each of the responses four times.\n They received an AI boost from computer scientist Kurt Luther, whose  Crowd Intelligence Lab contributed Incite, an open-sourced software transcription plug-in they developed for another U.S. history  crowdsourcing project led by Paul Quigley,\u00a0the James I. Robertson Jr. Associate Professor in Civil War Studies.\n As transcription went on, Gitre wanted to give his students immersive ways to work with the data set. He learned from Luther that other researchers were creating a virtual workspace for document sensemaking at the  Center for Human-Computer Interaction, led by Doug Bowman, the center\u2019s director and the Frank J. Maher Professor of Computer Science. In 2019, Gitre and Bowman saw an opportunity for symbiosis between their two projects: Gitre\u2019s students could work in the system, Immersive Space to Think, and take advantage of its features as they studied survey responses, while Bowman\u2019s team could learn from their use of the workspace.\n Bowman sees historical inquiry as a natural fit for a type of study to inform the development of Immersive Space to Think. Historians wrestle with overwhelming amounts of document-based information from myriad sources and sift through them with attention to detail. The system could allow them to streamline what can be a physically and cognitively exhausting pursuit, he said.\n \u201cWe\u2019re replicating what someone might do with a whiteboard,\u201d Bowman said. \u201cBut with virtual reality, we can enhance that interaction to make it more powerful and expressive.\u201d\n  Soon, the system itself will learn from the students to support their sensemaking experience, in efforts led by Chris North, a professor of computer science and the associate director of the  Sanghani Center for Artificial Intelligence and Data Analytics.\n As users cluster documents, pull them in closer or push them away, and look between them, the system will track their behavior \u2014 rapid gaze, for instance, could signal information overload, while certain clusters could indicate content priorities. That data will inform a machine learning algorithm that can identify clusters and suggest relevant documents to the user. \u201cWe\u2019re not getting in the user\u2019s way, but can give them really helpful shortcuts so that they don&#39;t have to do everything manually, in terms of searching, reading, and organizing,\u201d Bowman said.\n As Gitre works to make the full collection of survey responses accessible online in a website launching this summer, he plans to work with Bowman\u2019s team to bring the experience of reading Survey 32 responses in Immersive Space to Think to members of the general public. This year, they received funding from the  Institute for Creativity, Arts, and Technology to design a World War II museum exhibit that will enable museumgoers to enter the virtual system and read the survey responses, while also viewing artifacts like service badges, medical kits, and photos.\n Encounters with the firsthand soldier accounts could reveal for readers the sentiments that were building among Black soldiers in a galvanizing moment for activism, Gitre said. \u201cThe soldiers\u2019 experiences really propelled the civil rights movement, precisely because of the fact that you had a military that had its army fighting fascism and authoritarianism abroad, while maintaining segregation and racial discrimination,\u201d he said. \u201cI want to bring these thousands of voices into that history, and wrestle with the idea of what makes a movement. We\u2019re trying to learn the story of many thousands of African Americans who spoke up about Jim Crow and segregation.\u201d\n   The soldiers sit for the portraits with their hands in their laps and their fingers interlocked. They stand with their arms folded or resting at their sides, or holding their bayonets with the sharp end up. There is Abraham, Charles, and Louis. Solomon, Octavius, and Wilson. They\u2019re the subjects of 209 photos, representing a handful of the Civil War\u2019s nearly 200,000 Black soldiers.\n The images were tracked down by Natalie Robinson in 2018, when she was a history student at the University of Georgia and worked as an intern with the  Crowd Intelligence Lab led by Kurt Luther, an associate professor of computer science at Virginia Tech and a faculty affiliate of the  Department of History. That summer, Luther had tasked Robinson with combing museum and library collections, online government archives, and his own copies of reference books for images of Black Civil War soldiers and civilians to add to the  Civil War Photo Sleuth database.\n Civil War Photo Sleuth is an online platform that uses crowdsourcing and a combination of human and artificial intelligence to identify unknown soldiers and civilians in Civil War-era portraits. The platform allows users to upload photos and tag them with metadata such as photo inscriptions and formats, as well as visual clues like military rank insignia and uniform color. Users then try to connect the photos to identified soldier profiles, with military records attached.\n The platform relies on its 15,000-plus users to help build the database. Before launching the site, Luther\u2019s team pulled in nearly 20,000 photos from sources like the U.S. Library of Congress, the National Archives, and the U.S. Army Military History Institute to seed the site with identified reference images. The more users contribute to the platform\u2019s store of images, Luther explained, the closer Photo Sleuth members can get to finding matches for their uploads.\n As users upload photos and try to find a match, Photo Sleuth enables them to narrow down the possible matches among the database\u2019s identified photos with the platform\u2019s search filters, which are based on the visual clues tagged to each photo during upload. The platform then uses facial recognition to further whittle the selection down. In the last leg, it\u2019s up to the user to look for a match. If users find one, they can propose it and indicate their confidence in it.\n Luther said he\u2019s been driven to create and improve upon Photo Sleuth by the role photos can play in our understanding of the past. \u201cThere&#39;s incredible visual power in these images,\u201d he said. \u201cThey make the history come alive, they make it feel much more real \u2014 seeing the details of a person&#39;s face, the clothing that they&#39;re wearing, the equipment that they have with them.\u201d\n  Photographic windows into the past of Black soldiers and civilians from the Civil War era, however, have always been difficult to find, Luther said. That disparity, one that reflects a  wider pattern of erasure, exclusion, and destruction of records of Black U.S. history, was the reason for Robinson\u2019s work trolling more collections for photos to add to the database as reference images. She remembers seeing signs of it during her search for identified images. Robinson kept running into the same photos as she went from one collection to the next. Early on, most of the photos the team had found to build the database were of white Union soldiers.\n \u201cThere was a huge number of African American soldiers in the Union Army,\u201d Luther said. \u201cThey were really instrumental to winning the war, some of them received medals of honor, but few of those photos survive today. You have Black soldiers composing 10 percent of the Union Army by the end of the Civil War, and on the other hand, it\u2019s hard to find 100 identified photos today.\u201d\n Challenges on the technological side, in the field of artificial intelligence, have also shaped the team\u2019s work. They use licensed facial recognition technology to support users\u2019 sleuthing, but they avoid using a fully automated system to make the ID, Luther explained, because facial recognition alone is imperfect at identifying faces. It\u2019s even been proven to  fall prey to racial and gender bias, performing worse for people of color and women \u2014 and requiring many companies licensing out the technologies to revisit the inclusivity of the data used to train their algorithms.\n That\u2019s why it\u2019s important not to lean too heavily on these licensed technologies, Luther said, and to instead allow human users to ultimately try to identify images \u2014 as genealogists, collectors, and family members tracking down their ancestors have long done in traditional photo sleuthing.\u00a0\u201cFacial recognition\u2019s real strength is narrowing down possibilities,\u201d he said. \u201cIt&#39;s not very good at comparing two photographs and telling you if it&#39;s the same person or not. Humans are much better at that. They\u2019re able to look at all these details and think about the broader context.\u201d\n Robinson\u2019s additions to the Photo Sleuth database have made it one of the largest collections of photos of Black Civil War soldiers found online. But the project was just a start, Luther said.\u00a0He believes there are more images out there, in yet untapped contributions that he hopes Photo Sleuth users will continue to upload. \u201cThese users are bringing in photos from sources we would never have known about,\u201d Luther said. \u201cThey\u2019re coming from their attics, from their basements.\u201d\n As a home for these finds, Photo Sleuth has enabled users to go after projects they once figured as impossible, Luther said. \u201cThere are investigations happening that wouldn&#39;t have happened at all in the past,\u201d he said. \u201cThe platform has allowed people to explore investigative threads that otherwise seemed too overwhelming to pursue. Suddenly, now they\u2019re not.\u201d", "posttime": "2021-07-24 07:21:38", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4eba\u5458,pulling,\u58eb\u5175", "title": "\u7814\u7a76\u4eba\u5458\u6b63\u5728\u4ece\u5177\u6709\u6570\u5b57\u5386\u53f2\u7684\u7f29\u5fae\u80f6\u5377\u4e2d\u63d0\u53d6\u52a8\u4f5c", "title_en": "Researchers are pulling movements out of microfilm with digital history", "transed": 1, "url": "https://vtx.vt.edu/articles/2021/07/eng-historians-and-computer-scientists-harness-virtual-reality-and-ai.html", "via": "", "real_tags": ["\u4eba\u5458", "pulling", "\u58eb\u5175"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069352, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u4e9b\u4e1c\u897f\uff0c\u6765 PowerDNS \u548c\u6211\u4e00\u8d77\u5de5\u4f5c - \u6709\u62b1\u8d1f\u7684 C++ \u7a0b\u5e8f\u5458\u6b22\u8fce\uff01\u6b22\u8fce\u9605\u8bfb\u9762\u5411 C \u7a0b\u5e8f\u5458\u7684\u73b0\u4ee3 C++ \u7b2c 1 \u90e8\u5206\uff0c\u8bf7\u53c2\u9605\u672c\u7cfb\u5217\u7684\u76ee\u6807\u548c\u80cc\u666f\u4ecb\u7ecd\u3002\u5728\u8fd9\u4e00\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u4ece C++ \u7279\u6027\u5f00\u59cb\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u7279\u6027\u201c\u9010\u884c\u201d\u6dfb\u52a0\u4ee3\u7801\uff0c\u800c\u65e0\u9700\u7acb\u5373\u4f7f\u7528\u201cC++ \u7f16\u7a0b\u8bed\u8a00\u201d\u7684\u5168\u90e8 1400 \u9875\u3002 C \u548c C++ \u5b9e\u9645\u4e0a\u662f\u975e\u5e38\u63a5\u8fd1\u7684\u4eb2\u621a\uff0c\u4ee5\u81f3\u4e8e\u8bb8\u591a\u7f16\u8bd1\u5668\u90fd\u4e3a\u8fd9\u4e24\u79cd\u8bed\u8a00\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u57fa\u7840\u67b6\u6784\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u60a8\u7684 C \u4ee3\u7801\u5df2\u7ecf\u901a\u8fc7\u4e0e C++ \u5171\u4eab\u7684\u4ee3\u7801\u8def\u5f84\uff08\u5e76\u4e14\u53ef\u80fd\u662f\u7528 C++ \u7f16\u5199\u7684\uff09\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53 TrivialC \u7a0b\u5e8f\u7528 g++ \u7f16\u8bd1\u4e3a C++ \u65f6\uff0c\u4f1a\u51fa\u73b0\u5927\u5c0f\u76f8\u540c\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u6211\u4eec\u949f\u7231\u7684 The C ProgrammingLanguage \u4e2d\u7684\u6240\u6709\u793a\u4f8b\u7a0b\u5e8f\u90fd\u7f16\u8bd1\u4e3a\u6709\u6548\u7684 C++\u3002\u6709\u8da3\u7684\u662f\uff0c1988 \u5e74\u7248\u7684 K&amp;R notes Bjarne Stroustrup \u7684 C++\u201c\u7ffb\u8bd1\u5668\u201d\u88ab\u5e7f\u6cdb\u7528\u4e8e\u672c\u5730\u6d4b\u8bd5\u3002\u8fd9\u79cd\u5173\u7cfb\u66f4\u8fdb\u4e00\u6b65\u2014\u2014\u6574\u4e2a C \u5e93\u90fd\u5305\u542b\u5728 C++ \u7684\u201cbyreference\u201d\u4e2d\uff0c\u5e76\u4e14 C++ \u77e5\u9053\u5982\u4f55\u8c03\u7528\u6240\u6709 C \u4ee3\u7801\u3002\u76f8\u53cd\uff0c\u5b8c\u5168\u6709\u53ef\u80fd\u4ece C \u8c03\u7528 C++ \u51fd\u6570\u3002C++ \u88ab\u660e\u786e\u8bbe\u8ba1\u4e3a\u4e0d\u5b58\u5728\u4e0e C \u76f8\u6bd4\u4e0d\u53ef\u907f\u514d\u7684\u5f00\u9500\u3002\u5f15\u7528 ISO C++ \u7f51\u7ad9\u7684\u8bdd\u8bf4\uff1a\u96f6\u5f00\u9500\u539f\u5219\u662f C++ \u8bbe\u8ba1\u7684\u6307\u5bfc\u539f\u5219\u3002\u5b83\u6307\u51fa\uff1a\u4f60\u4e0d\u4f7f\u7528\u7684\u4e1c\u897f\uff0c\u4f60\u4e0d\u4ed8\u94b1\uff08\u5728\u65f6\u95f4\u6216\u7a7a\u95f4\u4e0a\uff09\u5e76\u4e14\u8fdb\u4e00\u6b65\uff1a\u4f60\u4f7f\u7528\u7684\u4e1c\u897f\uff0c\u4f60\u4e0d\u80fd\u66f4\u597d\u5730\u7f16\u5199\u4ee3\u7801\u3002\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e0d\u5e94\u5411 C++ \u6dfb\u52a0\u4efb\u4f55\u4f1a\u4f7f\u4efb\u4f55\u73b0\u6709\u4ee3\u7801\uff08\u4e0d\u4f7f\u7528\u65b0\u7279\u6027\uff09\u53d8\u5927\u6216\u53d8\u6162\u7684\u7279\u6027\uff0c\u4e5f\u4e0d\u5e94\u6dfb\u52a0\u4efb\u4f55\u4f7f\u7f16\u8bd1\u5668\u751f\u6210\u7684\u4ee3\u7801\u4e0d\u5982\u7a0b\u5e8f\u5458\u5728\u4e0d\u4f7f\u7528\u65b0\u7279\u6027\u7684\u60c5\u51b5\u4e0b\u521b\u5efa\u7684\u4ee3\u7801\u7684\u7279\u6027\u3002\u529f\u80fd\u3002\u8fd9\u4e9b\u90fd\u662f\u5f88\u5927\u7684\u4e3b\u5f20\uff0c\u5b83\u4eec\u786e\u5b9e\u9700\u8981\u4e00\u4e9b\u8bc1\u636e\u3002\u4e3a\u4e86\u5728 2018 \u5e74\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\uff0c\u6211\u4eec\u5fc5\u987b\u5c0f\u5fc3\u3002\u8bb8\u591a\u4ee3\u7801\u4f7f\u7528\u5f02\u5e38\uff0c\u5e76\u4e14\u8fd9\u4e9b\u90fd\u5e26\u6709\u4e00\u4e9b\u5f00\u9500\u3002\u4f46\u662f\uff0c\u4e5f\u53ef\u4ee5\u58f0\u660e\u6211\u4eec\u7684\u5168\u90e8\u6216\u90e8\u5206\u4ee3\u7801\u662f\u65e0\u5f02\u5e38\u7684\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u5220\u9664\u8be5\u57fa\u7840\u7ed3\u6784\u3002\u4f46\u662f\uff0c\u8fd9\u91cc\u6709\u5b9e\u9645\u7684\u8bc1\u636e\u3002\u4f7f\u7528 C qsort() \u51fd\u6570\u5bf9 1 \u4ebf\u4e2a\u6574\u6570\u8fdb\u884c\u6392\u5e8f\uff0c\u4f7f\u7528 C++ \u4e2d\u7684 std::sort() \u5e76\u4f7f\u7528 C++-2017 \u5e76\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u5f97\u5230\u4ee5\u4e0b\u8ba1\u65f6\uff1aC qsort(): 13.4 \u79d2 (13.4 CPU)C++ std:: sort()\uff1a8.0 \u79d2\uff088.0 CPU\uff09C++ \u5e76\u884c\u6392\u5e8f\uff1a1.7 \u79d2\uff0811.8 \u79d2\u7684 CPU \u65f6\u95f4\uff09\u8fd9\u662f\u4ec0\u4e48\u9b54\u6cd5\uff1f C++ \u7248\u672c\u6bd4 C \u5feb 40%\uff1f\u8fd9\u600e\u4e48\u53ef\u80fd\uff1f int cmp(const void* a, const void* b){ if(*(int*)a &lt; *(int*)b) return -1;\u5426\u5219 if(*(int*)a &gt; *(int*)b) \u8fd4\u56de 1\uff1b\u5426\u5219\u8fd4\u56de0\uff1b }int main(int argc, char**argv){ auto lim = atoi(argv[1]); std::vector&lt;int&gt; vec; vec.reserve(lim); while(lim--) vec.push_back(random()); if(*argv[2]==&#39;q&#39;) qsort(&amp;vec[0], vec.size(), sizeof(int), cmp);\u5426\u5219 if(*argv[2]==&#39;p&#39;) std::sort(std::execution::par, vec.begin(), vec.end()); else if(*argv[2]==&#39;s&#39;) std::sort(vec.begin(), vec.end());} \u503c\u5f97\u7814\u7a76\u4e00\u4e0b\u3002 cmp() \u51fd\u6570\u7528\u4e8e qsort()\uff0c\u5e76\u5b9a\u4e49\u6392\u5e8f\u987a\u5e8f\u3002\nMain \u548c C \u4e2d\u4e00\u6837\u662f main\uff0c\u4f46\u662f\u6211\u4eec\u770b\u5230\u4e86\u7b2c\u4e00\u4e2a\u5947\u602a\u7684\u4e1c\u897f\uff1aauto\u3002\u6211\u4eec\u7a0d\u540e\u4f1a\u4ecb\u7ecd\u8fd9\u4e2a\uff0c\u4f46\u662f auto \u51e0\u4e4e\u603b\u662f\u505a\u4f60\u8ba4\u4e3a\u5b83\u4f1a\u505a\u7684\u4e8b\u60c5\uff1a\u8ba1\u7b97\u6240\u9700\u7684\u7c7b\u578b\u5e76\u4f7f\u7528\u5b83\u3002\u63a5\u4e0b\u6765\u7684\u4e24\u884c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5305\u542b\u6574\u6570\u7684\u5411\u91cf\uff0c\u5e76\u5728\u5176\u4e2d\u4e3a\u6211\u4eec\u60f3\u8981\u7684\u6761\u76ee\u6570\u91cf\u4fdd\u7559\u8db3\u591f\u7684\u7a7a\u95f4\u3002\u8fd9\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u4f18\u5316\u3002 while \u5faa\u73af\u7136\u540e\u7528\u201c\u968f\u673a\u201d\u6570\u5b57\u586b\u5145\u5411\u91cf\u3002\u63a5\u4e0b\u6765\u2026\u2026\u795e\u5947\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\u3002\u6211\u4eec\u8c03\u7528 C qsort() \u51fd\u6570\uff0c\u5bf9\u5305\u542b\u6211\u4eec\u7684\u6570\u5b57\u7684 C++ \u5411\u91cf\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u600e\u4e48\u53ef\u80fd\uff1f\u4e8b\u5b9e\u8bc1\u660e std::vector \u88ab\u660e\u786e\u8bbe\u8ba1\u4e3a\u53ef\u4e0e\u539f\u59cb\u6307\u9488\u64cd\u4f5c\u4e92\u64cd\u4f5c\u3002\u5b83\u65e8\u5728\u80fd\u591f\u4f20\u9012\u7ed9 C \u5e93\u6216\u7cfb\u7edf\u8c03\u7528\u3002\u5b83\u5c06\u6570\u636e\u5b58\u50a8\u5728\u53ef\u4ee5\u968f\u610f\u66f4\u6539\u7684\u8fde\u7eed\u5185\u5b58\u5757\u4e2d\u3002\u63a5\u4e0b\u6765\u7684 4 \u884c\u4f7f\u7528 C++ \u6392\u5e8f\u51fd\u6570\u3002\u5728\u67d0\u4e9b\u7248\u672c\u7684 G++ \u4e0a\uff0c\u60a8\u53ef\u80fd\u9700\u8981\u8fd9\u79cd\uff08\u975e\u6807\u51c6\uff09\u8bed\u6cd5\u6765\u83b7\u5f97\u76f8\u540c\u7684\u7ed3\u679c\uff1a__gnu_parallel::sort(vec.begin(), vec.end())\u3002 qsort() \u662f\u4e00\u4e2a\u63a5\u53d7\u6bd4\u8f83\u56de\u8c03\u7684\u5e93\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u7f16\u8bd1\u5668\uff08\u53ca\u5176\u4f18\u5316\u5668\uff09\u65e0\u6cd5\u5c06 qsort() \u8fc7\u7a0b\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u51fd\u6570\u8c03\u7528\u5f00\u9500\u3002\u540c\u65f6\uff0cC++ std::sort \u7248\u672c\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u201c\u6a21\u677f\u201d\uff0c\u5b83\u80fd\u591f\u5185\u8054\u6bd4\u8f83\u8c13\u8bcd\uff0c\u5bf9\u4e8e int\uff0c\u5b83\u9ed8\u8ba4\u4e3a &lt;operator\u3002\u4e3a\u4e86\u786e\u4fdd\u6211\u4eec\u662f\u516c\u5e73\u7684\uff0c\u56e0\u4e3a qsort() \u4f7f\u7528\u7684\u662f\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u800c\u6211\u4eec\u7684 std::sort \u4e0d\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\uff1a\nstd::sort(vec.begin(), vec.end(), [](const auto&amp; a, const auto&amp; b) { return a &lt; b; } );\u6267\u884c\u65f6\uff0c\u8fd9\u4ecd\u7136\u9700\u8981\u76f8\u540c\u7684\u65f6\u95f4\u3002\u8981\u9006\u5e8f\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 a &lt; b \u66f4\u6539\u4e3a b &lt; a\u3002\u4f46\u662f\u8fd9\u4e2a\u795e\u5947\u7684\u8bed\u6cd5\u662f\u4ec0\u4e48\uff1f\u8fd9\u662f\u4e00\u4e2a C++ lambda \u8868\u8fbe\u5f0f\uff0c\u4e00\u79cd\u5b9a\u4e49\u5185\u8054\u51fd\u6570\u7684\u65b9\u6cd5\u3002\u8fd9\u53ef\u4ee5\u7528\u4e8e\u5f88\u591a\u4e8b\u60c5\uff0c\u5e76\u4e14\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5b9a\u4e49\u6392\u5e8f\u64cd\u4f5c\u200b\u200b\u662f\u975e\u5e38\u60ef\u7528\u7684\u3002\u6700\u540e\uff0cC++ 2017 \u9644\u5e26\u4e86\u8bb8\u591a\u6838\u5fc3\u7b97\u6cd5\u7684\u5e76\u884c\u7248\u672c\uff0c\u5bf9\u4e8e\u6211\u4eec\u7684\u6848\u4f8b\uff0c\u4f3c\u4e4e\u5e76\u884c\u6392\u5e8f\u786e\u5b9e\u5728\u6211\u7684 8 \u8d85\u6838\u673a\u5668\u4e0a\u63d0\u4f9b\u4e86 4.7 \u500d\u7684\u52a0\u901f\u3002\u53ef\u80fd\u5f88\u96be\u76f8\u4fe1\uff0c\u4f46\u5728 C++ \u6700\u521d\u5f00\u53d1\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u5b83\u5e76\u6ca1\u6709\u5b57\u7b26\u4e32\u7c7b\u3002\u5199\u8fd9\u6837\u7684\u8bfe\u6709\u70b9\u50cf\u6210\u4eba\u793c\uff0c\u6bcf\u4e2a\u4eba\u90fd\u81ea\u5df1\u505a\u3002\u8fd9\u80cc\u540e\u7684\u90e8\u5206\u539f\u56e0\u662f\u957f\u671f\u5c1d\u8bd5\u5236\u4f5c\u4e00\u4e2a\u9002\u5408\u6240\u6709\u4eba\u7684\u8bfe\u7a0b\u3002 auto pos = fname.find(&#39;/&#39;);if(pos != string::npos) cout &lt;&lt; &quot;First / is at &quot; &lt;&lt; pos &lt;&lt; &quot;\\n&quot;;pos = fname.find(&quot;host&quot; );if(pos != string::npos) cout &lt;&lt; &quot;Found host at &quot; &lt;&lt; pos &lt;&lt; &quot;\\n&quot;;std::string newname = fname;newname += &quot;.backup&quot;;unlink(newname. c_str()); std::string \u4f7f\u7528 [] \u8fd0\u7b97\u7b26\u63d0\u4f9b\u5bf9\u5176\u5b57\u7b26\u7684\u4e0d\u5b89\u5168\u548c\u672a\u7ecf\u68c0\u67e5\u7684\u8bbf\u95ee\uff0c\u56e0\u6b64 newname[0] == &#39;/&#39;\uff0c\u4f46\u660e\u667a\u7684\u4eba\u4f7f\u7528 newname.at(0) \u6267\u884c\u8fb9\u754c\u68c0\u67e5\u3002 2011 \u5e74\u4e4b\u540e\u7684 std::string \u8bbe\u8ba1\u975e\u5e38\u6709\u8da3\u3002\u57fa\u672c\u5b57\u7b26\u4e32\u5b9e\u73b0\u7684\u5b58\u50a8\u53ef\u80fd\u5982\u4e0b\u6240\u793a\uff1a\n\u5728\u73b0\u4ee3\u7cfb\u7edf\u4e0a\uff0c\u8fd9\u662f 24 \u5b57\u8282\u7684\u6570\u636e\u3002\u5bb9\u91cf\u5b57\u6bb5\u7528\u4e8e\u5b58\u50a8\u5df2\u5206\u914d\u591a\u5c11\u5185\u5b58\uff0c\u4ee5\u4fbf mystring \u77e5\u9053\u4f55\u65f6\u9700\u8981\u91cd\u65b0\u5206\u914d\u3002\u6bcf\u6b21\u5c06\u5b57\u7b26\u6dfb\u52a0\u5230 astring \u65f6\u90fd\u4e0d\u91cd\u65b0\u5206\u914d\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u80dc\u5229\u3002\u7136\u800c\uff0c\u6211\u4eec\u5b58\u50a8\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4e1c\u897f\u7ecf\u5e38\u6bd4 24 \u5b57\u8282\u77ed\u5f88\u591a\u3002\u4e3a\u6b64\uff0c\u73b0\u4ee3 C++ std::string \u5b9e\u73b0\u5b9e\u73b0\u4e86\u5c0f\u5b57\u7b26\u4e32\u4f18\u5316\uff0c\u8fd9\u5141\u8bb8\u5b83\u4eec\u5728\u81ea\u5df1\u7684\u5b58\u50a8\u4e2d\u5b58\u50a8 16 \u751a\u81f3 21 \u4e2a\u5b57\u8282\u7684\u5b57\u7b26\uff0c\u800c\u65e0\u9700\u4f7f\u7528 malloc()\uff0c\u8fd9\u662f\u4e00\u4e2a\u52a0\u901f\u3002\u9632\u6b62\u5bf9 malloc() \u8fdb\u884c\u4e0d\u5fc5\u8981\u8c03\u7528\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u5b57\u7b26\u4e32\u6570\u7ec4\u73b0\u5728\u5b58\u50a8\u5728\u8fde\u7eed\u5185\u5b58\u4e2d\uff0c\u8fd9\u5bf9\u4e8e\u5185\u5b58\u7f13\u5b58\u547d\u4e2d\u7387\u975e\u5e38\u6709\u7528\uff0c\u8fd9\u901a\u5e38\u4f1a\u63d0\u4f9b\u6574\u4e2a\u52a0\u901f\u56e0\u7d20\u3002\u7ecf\u8fc7\u591a\u5e74\u7684\u8bbe\u8ba1\uff0cstd::string \u53ef\u80fd\u4e0d\u662f\u6bcf\u4e2a\u4eba\u7684\u5168\u90e8\uff0c\u4f46\u4e0e\u201c\u96f6\u5f00\u9500\u201d\u539f\u5219\u4e00\u81f4\uff0c\u5b83\u80dc\u8fc7\u60a8\u53ef\u4ee5\u5feb\u901f\u624b\u5199\u7684\u5185\u5bb9\u3002\u5728\u672c\u7cfb\u5217\u7684\u7b2c 1 \u90e8\u5206\u4e2d\uff0c\u6211\u5e0c\u671b\u5411\u60a8\u5c55\u793a\u4e00\u4e9b\u60a8\u53ef\u4ee5\u7acb\u5373\u5f00\u59cb\u4f7f\u7528\u7684 C++ \u7684\u6709\u8da3\u90e8\u5206 - \u4e3a\u60a8\u63d0\u4f9b\u8bb8\u591a\u65b0\u529f\u80fd\uff0c\u800c\u65e0\u9700\u7acb\u5373\u7528\u590d\u6742\u7684\u4e1c\u897f\u586b\u5145\u60a8\u7684\u4ee3\u7801\u3002\u5982\u679c\u60a8\u6709\u4efb\u4f55\u559c\u6b22\u7684\u4e1c\u897f\u60f3\u770b\u5230\u8ba8\u8bba\u6216\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb\u6211 @PowerDNS_Bert \u6216 bert.hubert@powerdns.com \u6ce8\u610f\uff1a\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e9b\u4e1c\u897f\uff0c\u8bf7\u4e0e\u6211\u4e00\u8d77\u5728 PowerDNS \u5de5\u4f5c - \u6709\u62b1\u8d1f\u7684 C++ \u7a0b\u5e8f\u5458\u6b22\u8fce\uff01", "note_en": "NOTE: If you like this stuff, come work with me over at PowerDNS - aspiring C++ programmerswelcome!\n Welcome to part 1 of Modern C++ for C Programmers, please see the introduction for the goals and context of this series.\n In this part we start with C++ features that you can use to spice up yourcode \u2018line by line\u2019, without immediately having to use all 1400 pages of\u2018The C++ Programming Language\u2019.\n   C and C++ are actually very close relatives, to the point that manycompilers have unified infrastructure for both languages. In other words,your C code is already going through codepaths shared with C++ (and likely written in C++). In fact, when trivialC programs are compiled as C++ with g++, identically sized binaries comeout. All example programs in our beloved  The C ProgrammingLanguage compileas valid C++. Interestingly, the introduction of the 1988 edition of K&amp;R notesBjarne Stroustrup\u2019s C++ \u201ctranslator\u201d was used extensively for local testing.\n The relation goes further - the entire C library is included in C++ \u2018byreference\u2019, and C++ knows how to call all C code. And conversely, it isentirely possible to call C++ functions from C.\n C++ was explicitly designed to not present unavoidable overhead comparedagainst C. To  quote from the ISO C++website:\n The zero-overhead principle is a guiding principle for the design of C++.It states that: What you don\u2019t use, you don\u2019t pay for (in time or space) andfurther: What you do use, you couldn\u2019t hand code any better.\n In other words, no feature should be added to C++ which would make anyexisting code (not using the new feature) larger or slower, nor should anyfeature be added for which the compiler would generate code that is not asgood as a programmer would create without using the feature.\n These are big claims, and they do require some proof. For this to be truein 2018, we do have to be careful. Lots of code uses exceptions, and thesedo come with some overhead. However, it is also possible to declare thatall or part of our code is exception free, which leads the compiler toremove that infrastructure.\n But, here is actual proof. Sorting 100 million integers using the C qsort() function, using  std::sort() in C++ and using the C++-2017parallel sort, we get the following timings:\n C qsort(): 13.4 seconds (13.4 CPU)C++ std::sort(): 8.0 seconds (8.0 CPU)C++ parallel sort: 1.7 seconds (11.8 seconds of CPU time)\n What is this magic? The C++ version is 40% faster than C? How is thispossible?\n  int cmp(const void* a, const void* b){ if(*(int*)a &lt; *(int*)b) return -1; else if(*(int*)a &gt; *(int*)b) return 1; else return 0; }int main(int argc, char**argv){ auto lim = atoi(argv[1]); std::vector&lt;int&gt; vec; vec.reserve(lim); while(lim--) vec.push_back(random()); if(*argv[2]==&#39;q&#39;) qsort(&amp;vec[0], vec.size(), sizeof(int), cmp); else if(*argv[2]==&#39;p&#39;) std::sort(std::execution::par, vec.begin(), vec.end()); else if(*argv[2]==&#39;s&#39;) std::sort(vec.begin(), vec.end());}\n It is worth studying this a bit. The  cmp() function is there for qsort(), and defines the sort order.\n Main is main as in C, but then we see the first oddity: auto.We\u2019ll cover this later, but auto almost always does what you think it does:calculate the required type and use it.\n The next two lines define a  vector containing integers, and reserve enoughspace in there for how many entries we want. This is an optionaloptimization. The  while loop then fills the vector with \u2018random\u2019 numbers.\n Next up.. something magic happens. We call the C  qsort() function, tooperate on the C++ vector containing our numbers. How is this possible?It turns out  std::vector is explicitly designed to be interoperable withraw pointer operations. It is meant to be able to be passed to C library orsystem calls. It stores its data in a consecutive slab of memory that can bechanged at will.\n The next 4 lines use the C++ sorting functions. On some versions of G++, youmay need this (non-standard) syntax to get the same result:   __gnu_parallel::sort(vec.begin(), vec.end()).\n  qsort() is a library function that accepts a comparison callback. Thecompiler (and its optimizer) can not look at the  qsort() procedure as awhole therefore. In addition, there is function call overhead.\n The C++ std::sort version meanwhile is actually a \u2018template\u2019 which is ableto inline the comparison predicate, which for  ints defaults to the  &lt;operator.\n To make sure we are being fair, since  qsort() is using a customcomparator, and our  std::sort is not, we can use:\n std::sort(vec.begin(), vec.end(), [](const auto&amp; a, const auto&amp; b) { return a &lt; b; } );\n When executed, this still takes the same amount of time. To sort in reverseorder, we could change  a &lt; b to  b &lt; a. But what is this magic syntax?This is a C++ lambda expression, a way to define functions inline. This canbe used for many things, and defining a sort operation this way is highlyidiomatic.\n Finally, C++ 2017 comes with parallel versions of many core algorithms, andfor our case, it appears the parallel sort is indeed delivering a 4.7-foldspeedup on my 8 hyper-core machine.\n  It may be hard to believe, but for much of the time of C++\u2019s originaldevelopment, it did not have a string class. Writing such a classwas somewhat of a rite of passage, and everyone made their own. The reasonbehind this was partially the prolonged attempt to make a class that waseverything for everyone.\n    auto pos = fname.find(&#39;/&#39;);if(pos != string::npos) \tcout &lt;&lt; &#34;First / is at &#34; &lt;&lt; pos &lt;&lt; &#34;\\n&#34;;pos = fname.find(&#34;host&#34;);if(pos != string::npos) \tcout &lt;&lt; &#34;Found host at &#34; &lt;&lt; pos &lt;&lt; &#34;\\n&#34;;std::string newname = fname;newname += &#34;.backup&#34;;unlink(newname.c_str());\n std::string provides unsafe and unchecked access to its characters withthe [] operator, so  newname[0] == &#39;/&#39;, but wise people use  newname.at(0)which performs bounds checking.\n The post-2011 design of std::string is pretty interesting. The storage ofbasic string implementation could look like this:\n  On a modern system, this is 24 bytes of data. The  capacity field is usedto store how much memory has been allocated so  mystring knows when itneeds to reallocate. Not reallocating every time a character is added to astring is a pretty big win.\n Frequently however, the things we store in strings are a lot shorter than 24bytes. For this reason, modern C++ std::string implementations implementSmall String Optimization, which allows them to store 16 or even 21 bytes ofcharacters within their own storage, without using  malloc(), which is aspeedup.\n Another benefit of preventing needless calls to  malloc() is that an arrayof strings is now stored in contiguous memory, which is great for memorycache hitrates, which often delivers whole factors of speedup.\n After years of design,  std::string may not be everything to everyone, butconsistent with the \u2018zero overhead\u2019 principle, it beats what you would havequickly written by hand.\n  In part 1 of this series, I hope to have shown you some interesting bits ofC++ you could start using right away - gaining you a lot of new powerwithout immediately filling your code with complicated stuff.\n  If you have any favorite things you\u2019d like to see discussed orquestions, please hit me up on @PowerDNS_Bert or bert.hubert@powerdns.com\n NOTE: If you like this stuff, come work with me over at PowerDNS - aspiring C++ programmerswelcome!", "posttime": "2021-07-24 07:20:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,c++,\u7a0b\u5e8f\u5458", "title": "\u9762\u5411 C \u7a0b\u5e8f\u5458\u7684\u73b0\u4ee3 C++", "title_en": "Modern C++ for C Programmers", "transed": 1, "url": "https://berthub.eu/articles/posts/c++-1/", "via": "", "real_tags": ["\u7a0b\u5e8f", "c++", "\u7a0b\u5e8f\u5458"]}]
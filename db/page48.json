[{"category": "", "categoryclass": "", "imagename": "b425fdab99a91b3458e35e88a00a39b6.jpg", "infoid": 1071060, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u5230\u4e3b\u8981\u5185\u5bb9 Fandom \u81ea\u4ece\u6211\u8fd8\u662f\u4e2a\u5b69\u5b50\u4ee5\u6765\u5c31\u53d1\u751f\u4e86\u5f88\u5927\u7684\u53d8\u5316\u3002\u4f5c\u4e3a\u4e00\u4e2a\u9752\u5c11\u5e74\uff0c\u6211\u6ca1\u6709\u5e0c\u671b\u4e0e\u6211\u5d07\u62dc\u7684\u540d\u4eba\u53d6\u5f97\u8054\u7cfb\uff0c\u6bd4\u5982\u5e03\u5170\u59ae\u65af\u76ae\u5c14\u65af\u548c\u60e0\u7279\u5c3c\u4f11\u65af\u987f\u3002\u73b0\u5728\uff0c\u6211\u4e0d\u4ec5\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u4e0e\u4e00\u4e9b\u6211\u6700\u559c\u6b22\u7684\u540d\u4eba\u4ea4\u8c08\u8fc7\uff0c\u800c\u4e14\u6211\u4ec0\u81f3\u4e0e\u4e00\u4e9b\u540d\u4eba\u53d1\u751f\u8fc7\u4e89\u6267\u3002\u540c\u4eba\u5708\u7684\u6280\u672f\u4e5f\u5728\u53d1\u751f\u53d8\u5316\u3002\u8d85\u793e\u4f1a\u5173\u7cfb\u2014\u2014\u4e00\u79cd\u7c89\u4e1d\u548c\u4ed6\u4eec\u56e0\u793e\u4ea4\u5a92\u4f53\u800c\u611f\u5230\u4eb2\u8fd1\u7684\u516c\u4f17\u4eba\u7269\u4e4b\u95f4\u7684\u4e00\u79cd\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5355\u65b9\u9762\u7684\u5173\u7cfb\u2014\u2014\u5728\u7f51\u4e0a\u65e0\u5904\u4e0d\u5728\u3002 K-pop \u4e2d\u4e00\u4e9b\u6700\u4f1f\u5927\u7684\u884c\u4e3a\u80cc\u540e\u7684\u516c\u53f8\u6b63\u5728\u5f00\u521b\u4e00\u79cd\u65b0\u7684\u8d27\u5e01\u5316\u65b9\u5f0f\u3002\u4ed6\u4eec\u5f00\u53d1\u4e86\u5728\u7ebf\u5e73\u53f0\uff0c\u4ee5\u5e2e\u52a9 K-pop \u7c89\u4e1d\u611f\u89c9\u597d\u50cf\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u4ed6\u4eec\u6700\u559c\u6b22\u7684\u5076\u50cf\u3002\u8fd9\u79cd\u8bbf\u95ee\u6709\u52a9\u4e8e\u5851\u9020\u8fd9\u4e9b\u7c89\u4e1d\u4e0e\u5076\u50cf\u4e92\u52a8\u7684\u65b9\u5f0f\uff0c\u4f5c\u4e3a\u4e00\u79cd\u53cb\u8c0a\u5f62\u5f0f\uff0c\u4ee5\u53ca\u4ed6\u4eec\u5982\u4f55\u4e0e\u5176\u4ed6\u7c89\u4e1d\u4e92\u52a8\u3002\u5728\u793e\u4ea4\u5a92\u4f53\u8d26\u6237\u548c\u516c\u53f8\u8fd0\u8425\u5e73\u53f0\u5174\u8d77\u4e4b\u524d\uff0c\u97e9\u56fd\u827a\u4eba\u7684\u5927\u591a\u6570\u7c89\u4e1d\u57fa\u672c\u4e0a\u90fd\u901a\u8fc7\u7c89\u4e1d\u5496\u5561\u9986\u8fdb\u884c\u76f4\u63a5\u53c2\u4e0e\u2014\u2014\u4e00\u79cd\u6570\u5b57\u7c89\u4e1d\u4ff1\u4e50\u90e8\uff0c\u901a\u5e38\u8981\u6c42\u7c89\u4e1d\u5728\u63a5\u89e6\u827a\u4eba\u4e4b\u524d\u8bc1\u660e\u4ed6\u4eec\u5bf9\u7279\u5b9a\u827a\u4eba\u7684\u4e86\u89e3.\u6700\u521d\u6258\u7ba1\u5728\u793e\u4ea4\u7f51\u7ad9 DAUM \u7b49\u5e73\u53f0\u4e0a\uff0c\u8fd9\u4e9b\u7c89\u4e1d\u5496\u5561\u9986\u8ba9\u7c89\u4e1d\u53ef\u4ee5\u76f4\u63a5\u4e0e\u5076\u50cf\u8054\u7cfb\uff0c\u5f53\u4e0e\u5b98\u65b9\u4ed8\u8d39\u7c89\u4e1d\u4ff1\u4e50\u90e8\u4f1a\u5458\u8054\u7cfb\u65f6\uff0c\u4ed6\u4eec\u53ef\u4ee5\u53d8\u5f97\u66f4\u52a0\u4eb2\u5bc6\u3002\u867d\u7136\u8bb8\u591a\u5076\u50cf\u7684 DAUM \u7c89\u4e1d\u5496\u5561\u9986\u4ecd\u5728\u8fd0\u884c\uff0c\u4f46\u5728\u8fc7\u53bb\u4e24\u5e74\u4e2d\u5df2\u7ecf\u53d1\u751f\u4e86\u8f6c\u53d8\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u82f1\u8bed\u7c89\u4e1d\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u51e0\u5bb6\u516c\u53f8\u4e3a\u4ed6\u4eec\u7684\u827a\u672f\u5bb6\u521b\u5efa\u4e86\u65b0\u7684\u793e\u4ea4\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b8c\u5168\u7ed5\u8fc7\u4e86 Twitter \u6216 Facebook \u7b49\u7b2c\u4e09\u65b9\u5e73\u53f0\u3002\u4e09\u4e2a\u4e3b\u8981\u5e73\u53f0\u73b0\u5728\u8131\u9896\u800c\u51fa\uff1aNCSoft \u7684 Universe \u88ab\u97e9\u56fd\u6d41\u884c\u97f3\u4e50\u56db\u5927\u516c\u53f8\u4e4b\u5916\u7684\u516c\u53f8\u7ba1\u7406\u7684\u5e7f\u6cdb\u56e2\u4f53\u4f7f\u7528\uff0c\u5305\u62ec\u201c\u79c1\u4eba\u6d88\u606f\u201d\u670d\u52a1\u3001\u72ec\u5bb6\u97f3\u4e50\u548c\u7565\u6709\u4e89\u8bae\u7684\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u58f0\u97f3\u7b49\u529f\u80fd\u4e0e\u5076\u50cf\u901a\u8bdd\u3002 HYBE \u7684 Weverse \u662f BTS \u548c TXT \u7b49\u5927\u578b\u56e2\u4f53\u7684\u6240\u5728\u5730\uff0c\u5176\u7ed3\u6784\u66f4\u50cf DAUM \u7c89\u4e1d\u5496\u5561\u9986\u3002\u6700\u540e\uff0c\u8fd8\u6709 SM \u7684 LYSN\uff0c\u5176\u4e2d\u5305\u62ec\u771f\u6b63\u521b\u65b0\u7684 Bubble \u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u5df2\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9 K-pop \u56e2\u4f53\u83b7\u5f97 Twitter DM \u7684\u6240\u6709\u597d\u5904\uff0c\u800c\u4e14\u6ca1\u6709\u5f88\u591a\u95ee\u9898\u3002 SM \u662f\u4e1c\u65b9\u795e\u8d77\u548c\u8d5b\u535a\u670b\u514b\u5973\u5b50\u7ec4\u5408 Aespa \u7b49\u56e2\u4f53\u80cc\u540e\u7684 K-pop \u5236\u4f5c\u5de8\u5934\u3002\u5176\u5e73\u53f0 LYSN \u4e8e 2018 \u5e74\u9996\u6b21\u4f5c\u4e3a\u201c\u57fa\u4e8e\u5174\u8da3\u7684\u7c89\u4e1d\u793e\u533a\u201d\u63a8\u51fa\u3002\u5728 2020 \u5e74\u63a8\u51fa Bubble \u5076\u50cf\u5373\u65f6\u6d88\u606f\u670d\u52a1\u4e4b\u524d\uff0c\u8fd9\u662f\u4e00\u4e2a\u76f8\u5bf9\u7684\u5931\u8d25\uff0c\u8be5\u670d\u52a1\u5c06\u5229\u6da6\u63a8\u5411\u4e86\u9ad8\u6f6e\u3002\u6709\u4e86\u4e0d\u540c\u7248\u672c\u7684\u6ce1\u6ce1\uff0c\u7c89\u4e1d\u4eec\u53ef\u4ee5\u901a\u8fc7\u90e8\u5206\u79c1\u4eba\u6d88\u606f\u8054\u7cfb\u4ed6\u4eec\u6700\u559c\u6b22\u7684\u5076\u50cf\uff0c\u4ed8\u8d39\u8ba2\u9605\u3002\u8be5\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u4e00\u5bf9\u4e00\u7684\u804a\u5929\u7a97\u53e3\uff0c\u4f46\u5b9e\u9645\u4e0a\u66f4\u50cf\u662f\u4e00\u4e2a\u5927\u89c4\u6a21\u7684\u7fa4\u804a\uff0c\u5076\u50cf\u540c\u65f6\u4e3a\u6210\u5343\u4e0a\u4e07\u7684\u7c89\u4e1d\u53d1\u9001\u6d88\u606f\uff0c\u5e76\u5728\u4ed6\u4eec\u8fdb\u6765\u65f6\u770b\u5230\u56de\u590d\u3002\u201c\u5b83\u53ef\u4ee5\u611f\u89c9\u5c31\u50cf\u4f60\u6536\u5230\u4e86\u6765\u81ea\u5076\u50cf\u7684\u79c1\u4eba\u4fe1\u606f\u3002\u201d\u56db\u5ddd\u5927\u5b66\u5339\u5179\u5821\u5b66\u9662\u4eba\u6587\u5b66\u9662\u52a9\u7406\u6559\u6388 Areum Jeong \u8868\u793a\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e3a\u7c89\u4e1d\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u771f\u6b63\u7684\u673a\u4f1a\uff0c\u53ef\u4ee5\u52a0\u5f3a\u4ed6\u4eec\u4e0e\u76ee\u524d\u6700\u559c\u6b22\u7684\u5076\u50cf\u7684\u5173\u7cfb\u3002\n\u201c\u7c89\u4e1d\u4eec\u5f88\u6e05\u695a\uff0c\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u8fd9\u662f\u4e00\u4e2a\u7fa4\u804a\uff0c\u5076\u50cf\u5c06\u6536\u5230\u6765\u81ea\u6210\u5343\u4e0a\u4e07\u7c89\u4e1d\u7684\u6d88\u606f\uff0c\u5c3d\u7ba1\u7c89\u4e1d\u4eec\u770b\u4e0d\u5230\u5176\u4ed6\u7c89\u4e1d\u7684\u6d88\u606f\uff0c\u201d\u90d1\u8bf4\u3002 \u201c\u5373\u4fbf\u5982\u6b64\uff0c\u7c89\u4e1d\u4eec\u8fd8\u662f\u559c\u6b22\u6536\u5230\u5076\u50cf\u5206\u4eab\u4ed6/\u5979\u7684\u65e5\u5e38\u751f\u6d3b\u548c\u60f3\u6cd5\u7684\u4fe1\u606f\u3002\u6709\u65f6\uff0c\u4f60\u4f1a\u89c9\u5f97\u4f60\u6536\u5230\u4e86\u5076\u50cf\u7684\u79c1\u4eba\u4fe1\u606f\uff0c\u56e0\u4e3a\u754c\u9762\u7ed9\u4eba\u4e00\u79cd 1:1 \u804a\u5929\u7684\u9519\u89c9\uff0c\u6709\u4e9b\u5076\u50cf\u4f1a\u53d1\u9001\u8fce\u5408\u4eb2\u5bc6\u611f\u60c5\u7684\u4fe1\u606f\u3002\u201d\u5bf9\u4e8e\u7ecf\u5e38\u4f7f\u7528\u8fd9\u4e9b\u5e73\u53f0\u7684\u7c89\u4e1d\u6765\u8bf4\uff0c\u8fd9\u79cd\u865a\u5047\u7684\u4eb2\u5bc6\u5173\u7cfb\u53ef\u80fd\u662f\u4e00\u80a1\u5f3a\u5927\u7684\u529b\u91cf\u3002 \u201c\u6211\u7279\u522b\u559c\u6b22\u4f7f\u7528 Weverse\uff0c\u56e0\u4e3a\u6211\u559c\u6b22\u4ee5\u4e00\u79cd\u770b\u4f3c\u771f\u5b9e\u7684\u65b9\u5f0f\u770b\u5230\u6210\u5458\u4e92\u52a8\uff0c\u201dLeigh \u8bf4\uff0c\u4ed6\u662f\u5076\u50cf\u56e2\u4f53 17 \u7684\u7c89\u4e1d\uff0c\u901a\u8fc7 Weverse \u4e0e\u8be5\u56e2\u4f53\u5efa\u7acb\u8054\u7cfb\u3002 \u201c\u5728\u57fa\u672c\u4e0a\u7f8e\u5316\u7684\u7fa4\u804a\u4e2d\u770b\u5230\u6210\u5458\u5f88\u6709\u8da3\uff0c\u6709\u65f6\uff0c\u6211\u89c9\u5f97\u6211\u662f\u4e00\u4e2a\u89c2\u5bdf\u8005\uff0c\u4f46\u5927\u591a\u6570\u65f6\u5019\uff0c\u6211\u89c9\u5f97\u6211\u662f\u5176\u4e2d\u7684\u53c2\u4e0e\u8005\u3002\u201d\u90e8\u5206\u5438\u5f15\u529b\u5728\u4e8e\uff0c\u7c89\u4e1d\u4eec\u53ef\u4ee5\u89c9\u5f97\u4ed6\u4eec\u5728 Twitter \u6216 Instagram \u7b49\u4e0d\u592a\u76f4\u63a5\u7684\u5e73\u53f0\u4e0a\u770b\u5230\u4e86\u4e0e\u4ed6\u4eec\u6240\u5173\u6ce8\u7684\u5076\u50cf\u4e0d\u540c\u7684\u3001\u66f4\u4e2a\u6027\u5316\u7684\u4e00\u9762\u3002\u5bf9\u4e8e\u76ee\u524d\u6b63\u5728 BTS \u5e9e\u5927\u7684\u56fd\u9645\u7c89\u4e1d\u7fa4 ARMY \u4e0a\u8fdb\u884c\u6587\u5316\u7814\u7a76\u7684\u535a\u58eb\u751f Nicole Santero\uff08\u4ee5\u53ca @ResearchBTS Twitter \u5e10\u6237\u7684\u8fd0\u8425\u8005\uff09\u6765\u8bf4\uff0c\u8fd9\u4e00\u5207\u90fd\u4e0e\u7c89\u4e1d\u5728\u4e0e\u827a\u672f\u5bb6\u4e92\u52a8\u65f6\u53ef\u4ee5\u5efa\u7acb\u7684\u8054\u7cfb\u6709\u5173\u3002 \u201cBTS \u548c ARMY \u4e4b\u95f4\u7684\u5173\u7cfb\u4ece\u6765\u6ca1\u6709\u7247\u9762\u7684\u611f\u89c9\u3002 Weverse \u7684\u7a81\u51fa\u4e4b\u5904\u5728\u4e8e BTS \u5982\u6b64\u6d3b\u8dc3\uff0c\u5e76\u4e14\u7ecf\u5e38\u76f4\u63a5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e0a\u56de\u5e94\u7c89\u4e1d\uff0c\u201dSantero \u8bf4\u3002 \u201c\u8fd9\u8ba9 Weverse \u66f4\u5177\u5438\u5f15\u529b\uff0c\u901a\u8fc7\u8fd9\u4e9b\u7c7b\u578b\u7684\u4e92\u52a8\uff0c\u827a\u672f\u5bb6\u548c\u7c89\u4e1d\u4e4b\u95f4\u80af\u5b9a\u4f1a\u5f62\u6210\u66f4\u5927\u7684\u4eb2\u5bc6\u611f\u548c\u4eb2\u5bc6\u611f\u3002\u77e5\u9053 BTS \u53ef\u80fd\u4f1a\u770b\u5230\u4f60\u7684\u5e16\u5b50\uff0c\u8fd9\u4f1a\u8ba9\u4f53\u9a8c\u53d8\u5f97\u66f4\u6709\u610f\u4e49\u3002\u201d\u8fd9\u4e9b\u516c\u53f8\u8fd0\u8425\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u4ec5\u8ba9\u7c89\u4e1d\u80fd\u591f\u4ece\u827a\u672f\u5bb6\u90a3\u91cc\u83b7\u5f97\u5b89\u6170\u3002\u5bf9\u4e8e\u4e00\u4e9b\u7c89\u4e1d\u6765\u8bf4\uff0c\u5438\u5f15\u529b\u5728\u4e8e\u5728\u827a\u4eba\u9047\u5230\u5065\u5eb7\u95ee\u9898\u3001\u4e11\u95fb\u6216\u4ed6\u4eec\u5bf9\u7f55\u89c1\u7684\u505c\u673a\u65f6\u95f4\u611f\u5230\u65e0\u804a\u65f6\u63d0\u4f9b\u652f\u6301\u3002\u5bf9\u4e8e\u5df2\u7ecf\u4f7f\u7528 Bubble \u5e94\u7528\u7a0b\u5e8f\u516d\u4e2a\u6708\u7684\u6fb3\u5927\u5229\u4e9a Stray Kids \u7c89\u4e1d\u9a6c\u514b\u897f\u59c6\u6765\u8bf4\uff0c\u8fd9\u662f\u597d\u65f6\u5149\u548c\u574f\u65f6\u5149\u7684\u6df7\u5408\u4f53\u3002 \u201c21 \u5e74\u7684 Great Hyunjin \u4e8b\u4ef6\u5bf9\u6574\u4e2a\u4e50\u961f/\u7c89\u4e1d\u6765\u8bf4\u662f\u4e00\u6bb5\u52a8\u8361\u7684\u65f6\u671f\uff0c\u6211\u627f\u8ba4\u6211\u5411 Felix \u53d1\u9001\u4e86\u4e00\u70b9\u9f13\u52b1\u7684\u4fe1\u606f\uff0c\u201d\u4ed6\u8bf4\uff0c\u6307\u7684\u662f\u4e50\u961f\u6210\u5458 Felix . \u201c\u5176\u4ed6\u65f6\u5019\uff0c\u5f53 Felix \u5f81\u6c42\u5efa\u8bae\u5e76\u8bd5\u56fe\u5c06\u6211\u7684\u54c1\u5473\u5077\u5077\u7eb3\u5165\u4ed6\u7684\u8bae\u7a0b\u65f6\uff0c\u6211\u4f1a\u56de\u590d\u6d88\u606f\u3002\u518d\u8bf4\u4e00\u6b21\uff0c\u771f\u7684\u6ca1\u6709\u529e\u6cd5\u77e5\u9053\u4ed6\u662f\u5426\u89c1\u8fc7\u5b83\u3002\u4ed6\u751a\u81f3\u4f1a\u770b\u51b0\u4e0a\u7684\u5c24\u91cc\u6216\u65e0\u9650\u7684 Sk8 \u5417\uff1f\u201d \uff08\u6211\u8ba4\u4e3a\u4ed6\u53ef\u80fd\u4f1a\u3002\uff09\u4e0e\u8fc7\u53bb\u5176\u4ed6\u540d\u4eba\u7684\u7c89\u4e1d\u4ff1\u4e50\u90e8\u4e0d\u540c\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u516c\u53f8\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0a\u53d1\u751f\u7684\u4e8b\u60c5\u4f1a\u4fdd\u7559\u5728\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u4e0a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e\u5e94\u7528\u5185\u7ffb\u8bd1\u670d\u52a1\u4ece\u97e9\u8bed\u5230\u82f1\u8bed\u7684\u7ffb\u8bd1\u8d28\u91cf\u4e2d\u7b49\u504f\u4f4e\uff0c\u8fd9\u4e9b\u5e73\u53f0\u4e0a\u7684\u8bb8\u591a\u827a\u672f\u5bb6\u90fd\u6709\u7ffb\u8bd1\u5e10\u6237\uff0c\u4e13\u95e8\u4e13\u6ce8\u4e8e Weverse / LYSN \u548c Bubble / Universe\u3002\u5982\u679c\u5076\u50cf\u7684\u7c89\u4e1d\u7fa4\u5f88\u5c0f\u6216\u5728\u516c\u53f8\u8fd0\u8425\u7684\u5e73\u53f0\u4e4b\u5916\u7ec4\u7ec7\u4e0d\u5584\uff0c\u4ed6\u4eec\u7684\u7ffb\u8bd1\u5e10\u6237\u53ef\u80fd\u4f1a\u8f83\u5c11\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u80fd\u963b\u6b62\u7c89\u4e1d\u968f\u65f6\u968f\u5730\u5206\u4eab\u6a21\u56e0\u3001\u827a\u672f\u5bb6\u4e0a\u4f20\u7684\u81ea\u62cd\u7167\u548c\u6765\u81ea\u76f4\u64ad\u7684\u526a\u8f91\u3002\n\u8fd9\u79cd\u4eb2\u5bc6\u5173\u7cfb\u53ef\u80fd\u6709\u5f88\u5927\u7684\u4f18\u52bf\u3002 Jeong \u8bf4\uff1a\u201c\u7531\u4e8e\u8d8a\u6765\u8d8a\u591a\u7684\u7c89\u4e1d\u5c06\u81ea\u5df1\u89c6\u4e3a\u6d3b\u8dc3\u7684\u6d88\u8d39\u8005\uff0c\u56e0\u6b64\u4ed6\u4eec\u53ef\u80fd\u4f1a\u4e0d\u8bb2\u9053\u7406\u751a\u81f3\u5145\u6ee1\u654c\u610f\u3002\u201d\u65b0\u79c0\u5076\u50cf\u7ec4\u5408 Enhypen \u7684\u7c89\u4e1d\u4e00\u76f4\u5728\u5904\u7406\u4e00\u4e2a\u6210\u5458\u53ef\u80fd\u8bf4 n \u5b57\u540e\u7c89\u4e1d\u7fa4\u7834\u88c2\u7684\u95ee\u9898\uff0c\u800c\u4e14\u7c89\u4e1d\u4e4b\u95f4\u7684\u5927\u90e8\u5206\u51b2\u7a81\u6e90\u4e8e Weverse \u4e0a\u7684\u4e92\u52a8\u3002\u5e73\u53f0\u4e0a\u7684\u7c89\u4e1d\u8bd5\u56fe\u4f7f\u7528\u5e94\u7528\u5185\u529f\u80fd\u8fdb\u884c\u7c89\u4e1d\u95f4\u4ea4\u6d41\uff0c\u8bd5\u56fe\u9690\u85cf\u827a\u672f\u5bb6\u7684\u66b4\u529b\u548c\u79cd\u65cf\u4e3b\u4e49\u5e16\u5b50\uff0c\u5e76\u6700\u7ec8\u653b\u51fb\u9ed1\u4eba\u7c89\u4e1d\u8c08\u8bba\u4e8b\u4ef6\u4ee5\u53ca\u4ed6\u4eec\u9762\u4e34\u7684\u9a9a\u6270\u3002\u5728\u6700\u521d\u7684\u9a9a\u6270\u6d6a\u6f6e\u53d1\u751f\u540e\u7684\u51e0\u4e2a\u5c0f\u65f6\u5185\uff0c\u8be5\u7ec4\u7ec7\u7684\u9ed1\u4eba\u7c89\u4e1d\u5728 Twitter \u548c TikTok \u4e0a\u5206\u4eab\u4e86\u4ed6\u4eec\u7684\u6240\u89c1\u4ee5\u53ca\u4eba\u4eec\u5982\u4f55\u8c08\u8bba\u4ed6\u4eec\u2014\u2014\u5c24\u5176\u662f\u9762\u5bf9\u8be5\u7ec4\u7ec7\u3001\u4ed6\u4eec\u7684\u7ba1\u7406\u5c42\u548c Weverse \u7684\u6301\u7eed\u6c89\u9ed8\u7684\u60c5\u51b5\u4e0b.\u4ed6\u4eec\u4e00\u76f4\u7528\u6765\u4e0e\u5176\u4ed6\u7c89\u4e1d\u548c\u5076\u50cf\u672c\u8eab\u8054\u7cfb\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u518d\u662f\u4ee5\u524d\u7684\u5b89\u5168\u7a7a\u95f4\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4e9b\u7ea6\u5b9a\u5728 10 \u5e74\u524d\u90fd\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0c\u800c\u4e14\u5927\u591a\u6570\u5728 10 \u5e74\u524d\u90fd\u662f\u5b8c\u5168\u4e0d\u53ef\u80fd\u7684\u3002\u8fd9\u4e9b\u5e73\u53f0\u4e3a\u540d\u4eba\u53ca\u5176\u7c89\u4e1d\u63d0\u4f9b\u4e86\u4e00\u79cd\u5168\u65b0\u7684\u4e92\u52a8\u65b9\u5f0f\uff0c\u5efa\u7acb\u5728\u4f20\u7edf\u7684\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u4e0a\uff0c\u4f46\u4e0e\u5b83\u4eec\u8d8a\u6765\u8d8a\u4e0d\u540c\u3002\u4e0d\u7ba1\u662f\u597d\u662f\u574f\uff0c\u5b83\u6b63\u5728\u6539\u53d8\u6210\u4e3a\u5728\u7ebf\u7c89\u4e1d\u6216\u5076\u50cf\u7684\u610f\u4e49\u3002", "note_en": "Skip to main content                                                                                                                Fandom has changed a lot since I was a kid. As a tween, I had no hope of getting in touch with celebrities I adored like Britney Spears and Whitney Houston. Now, I\u2019ve not only spoken with some of my celebrity favorites on social media, but I\u2019ve even fought with a few.\n The technology of fandom is changing, too. Parasocial relationships \u2014 a largely one-sided relationship between a fan and a public figure they feel close to due to social media \u2014 are everywhere online. And the companies behind some of the biggest acts in K-pop are pioneering a new way to monetize them. They\u2019ve developed online platforms to help K-pop fans feel as though they have direct access to their idol favorites. That access helps shape the way these fans interact with the idol as a form of friendship  and how they engage with other fans.\n  Before the rise of social media accounts and company-run platforms, most fans for Korean artists basically were locked into direct engagement through  fancafes \u2014 a kind of digital fan club that often required fans to prove their knowledge of a particular artist before gaining access to artists. Initially hosted on platforms like social networking site  DAUM, these fancafes allowed fans to connect with idols directly, and they could become even more intimate when connected with the official paid fan club memberships.\n While the DAUM fancafes for many idols are still up and running, there has been a shift away from them over the past two years, especially for English-language fandoms. In their place, several companies have created new social apps for their artists, entirely bypassing third-party platforms like Twitter or Facebook. Three main platforms now stand out: NCSoft\u2019s Universe is used by a wide range of groups managed by companies outside of the  Big Four of Korean pop music and includes features like a \u201cprivate messaging\u201d service,  exclusive music, and mildly controversial AI-generated voice calls with idols. HYBE\u2019s Weverse is home to mega-groups like BTS and TXT and structured more like the DAUM fancafes. Finally, there\u2019s SM\u2019s LYSN, which includes the truly innovative Bubble app that has found a way to give K-pop groups all of the benefits of Twitter DMs, without many of the problems.\n SM is a K-pop-producing powerhouse behind groups like TVXQ and the cyberpunk girl group Aespa. Its platform, LYSN, first launched in 2018 as an \u201cinterest-based fan community.\u201d It was a relative failure before the 2020 introduction of its Bubble  idol instant messaging service, which  kicked profits into the stratosphere. With the different versions of Bubble, fans can contact their favorite idols through partially private messaging, paid for on a subscription basis. The app is designed to look like a one-on-one chat window, but the reality is more like a massive group chat, with the idol  dropping in messages for thousands of fans at once and seeing replies as they come in.\n \u201cIt can feel like you are receiving a personal, private message from the idol.\u201d\n Areum Jeong, assistant professor of humanities at Sichuan University-Pittsburgh Institute, says the apps offer fans a real chance to strengthen their relationship with their current favorite idols.\n \u201cFans are fully aware that it is technically a group chat where the idol will receive messages from thousands of fans, although fans cannot see the other fans\u2019 messages,\u201d says Jeong. \u201cEven so, fans enjoy receiving messages where the idol shares his / her daily life and thoughts. And at times, it can feel like you are receiving a personal, private message from the idol because the interface gives an illusion of a 1:1 chat, and some idols will send messages that cater to intimate feelings.\u201d\n That faux-intimacy can be a powerful force for fans who use these platforms regularly. \u201cI like using Weverse specifically because I love seeing member interactions in a seemingly authentic way,\u201d says Leigh, a fan of idol group Seventeen who connects with the group through Weverse. \u201cIt is fun to see members in basically a glorified group chat that, from time to time, it feels like I am an observer of, but most of the time, I feel like I am a participant in.\u201d\n  Part of the appeal is that fans can feel as though they\u2019re seeing a different, more personal side to the idol they\u2019re following on less direct platforms like Twitter or Instagram. For Nicole Santero, a PhD student currently doing research on the culture on BTS\u2019s massive international fan base ARMY (and who runs  the @ResearchBTS Twitter account), it\u2019s all about the connections that fans can make in their interactions with the artists.\n \u201cThe relationship between BTS and ARMY never feels one-sided. What has stood out about Weverse is how BTS is so active and often responds directly to fans on the app,\u201d says Santero. \u201cThat makes Weverse even more appealing, and there is definitely this greater intimacy and closeness formed between artists and fans through these types of interactions. Knowing that BTS could potentially see your posts makes the experience even more meaningful.\u201d\n These company-run apps don\u2019t just offer fans the ability to receive comfort from the artist. For some fans, the appeal is in getting to offer support when an artist is going through a health issue, a scandal, or simply when they\u2019re bored on their rare downtime.\n For Maxim, an Australian Stray Kids fan who\u2019s been using the Bubble app for six months, it\u2019s been a mix of good times and bad times. \u201cThe Great Hyunjin Incident of \u201921 was a bit of a tumultuous time for that whole band / fandom, and I do admit that I sent a little buck-up message of encouragement through to Felix,\u201d he said, referring to group member Felix. \u201cOther times, I\u2019ve replied to messages when Felix asks for recommendations and try to sneak my taste onto his agenda. Again, there\u2019s genuinely no way to know if he ever sees it. Would he even watch  Yuri on Ice or  Sk8 the Infinity?\u201d (I think he probably would.)\n Unlike past fan clubs for other celebrities, there\u2019s no guarantee that what happens on company-run apps will stay on those apps. In fact, due to the medium to low quality of in-app translation services to translate from Korean to English, there are  translation accounts for many of the artists across these platforms that focus exclusively on Weverse / LYSN and Bubble / Universe. If an idol\u2019s fan base is small or poorly organized outside of the company-run platform, they may have fewer translation accounts. However, that doesn\u2019t stop fans from sharing memes, artist-uploaded selfies, and clips from livestreams everywhere that they can.\n There can be a hard edge to that intimacy. \u201cAs more fans than ever view themselves as active consumers, they can be unreasonable or even hostile,\u201d says Jeong. Fans of rookie idol group Enhypen have been  dealing with a fractured fandom following a member potentially saying the n-word, and much of the conflict between fans stems from interactions on Weverse. Fans on the platform tried to hide violent and racist posts from the artist using an in-app feature for inter-fan communication and ended up attacking Black fans speaking out about the incident and then about the harassment they were facing. Within hours of the initial wave of harassment, Black fans of the group took to Twitter and TikTok to share what they were seeing and how people were talking about them \u2014 especially in the face of continued silence from the group, their management, and Weverse moderation. The app they\u2019d been using to connect with other fans and the idols themselves was no longer the safe space it had been.\n Still, none of these engagements would have been easy 10 years ago, and most would have been flat-out impossible 10 years before that. These platforms offer an entirely new way for celebrities and their fans to interact, building on conventional social media platforms but increasingly distinct from them. And for better or worse, it\u2019s changing what it means to be a fan \u2014 or an idol \u2014 online.", "posttime": "2021-08-02 04:57:39", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "facebook,\u4eba\u5de5\u667a\u80fd,\u901a\u8bdd,stars,\u7c89\u4e1d", "title": "\u4e00\u4e9b K-pop \u660e\u661f\u7ed5\u8fc7 Twitter \u548c Facebook \u4e3a\u7c89\u4e1d\u521b\u5efa\u5e73\u53f0\uff0c\u4f8b\u5982 Universe\uff0c\u5b83\u5177\u6709\u4e0e\u5076\u50cf\u7684\u4eba\u5de5\u667a\u80fd\u751f\u6210\u7684\u8bed\u97f3\u901a\u8bdd\u529f\u80fd", "title_en": "Some K-pop stars are bypassing Twitter and Facebook to create platforms for fans, like Universe, which features AI-generated voice calls with the idols", "transed": 1, "url": "https://www.theverge.com/22589460/kpop-fan-cafe-weverse-universe-lysn-bts-idol-fandom-group?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["facebook", "\u4eba\u5de5\u667a\u80fd", "\u901a\u8bdd", "stars", "\u7c89\u4e1d"]}, {"category": "", "categoryclass": "", "imagename": "f23283281bae46ace05e93db78e8f8d8.png", "infoid": 1071058, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba9\u6211\u4eec\u4ece\u8f7b\u677e\u5f00\u59cb\u3002\u6211\u4eec\u77e5\u9053\u5730\u7403\u7684\u5f62\u72b6\u3002\u5b83\u6216\u591a\u6216\u5c11\u662f\u7403\u5f62\u7684\u3002\u63a5\u4e0b\u6765\u662f\u6211\u4eec\u7684\u94f6\u6cb3\u7cfb\uff0c\u94f6\u6cb3\u7cfb\u3002\u53d1\u73b0\u5b83\u7684\u57c3\u5fb7\u6e29\u00b7\u54c8\u52c3 (Edwin Hubble) (1889-1953) \u6709\u70b9\u60ca\u8bb6\uff0c\u5b83\u662f\u87ba\u65cb\u5f62\u7684\uff0c\u5373\u5e26\u6709\u65cb\u81c2\u7684\u5706\u76d8\u5f62\u72b6\u3002\u53ef\u89c2\u6d4b\u7684\u5b87\u5b99\u5462\uff1f\u662f\u7403\u5f62\u7684\u5417\uff1f\u770b\u8d77\u6765\u786e\u5b9e\u5982\u6b64\uff0c\u56e0\u4e3a\u5b83\u5411\u5916\u6269\u5c55\uff0c\u800c\u4e14\u6211\u4eec\u8d8a\u770b\u8d8a\u8fdc\uff0c\u5149\u8d8a\u7ea2\u79fb\u3002\u8d85\u51fa\u6211\u4eec\u53ef\u89c2\u5bdf\u8303\u56f4\u7684\u5168\u7403\u5b87\u5b99\u5462\uff1f\u7b54\u6848\u662f\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u3002\u6211\u4eec\u53ef\u4ee5\u63a8\u6d4b\u3002\u5b83\u53ef\u80fd\u662f\u6709\u9650\u7684\u6216\u65e0\u9650\u7684\uff0c\u6709\u8fb9\u754c\u6216\u6ca1\u6709\u8fb9\u754c\uff0c\u6709\u6216\u6ca1\u6709\u66f2\u7387\uff0c\u50cf\u7403\u4f53\u4e00\u6837\u7b80\u5355\u8fde\u63a5\uff0c\u6216\u8005\u50cf\u751c\u751c\u5708\u4e00\u6837\u591a\u91cd\u8fde\u63a5\u3002\u6211\u4eec\u6240\u77e5\u9053\u7684\u662f\uff0c\u5b83\u4f3c\u4e4e\u6b63\u5728\u6269\u5927\u3002\u8981\u4ec0\u4e48\uff1f\u6211\u4eec\u4e0d\u77e5\u9053\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u63a8\u6d4b\u3002\u5b87\u5b99\u7684\u5f62\u72b6\uff0c\u73b0\u5728\u548c\u5c06\u6765\u53ef\u80fd\u53d8\u6210\u7684\uff0c\u6211\u4eec\u5f88\u96be\u51ed\u7ecf\u9a8c\u8fa8\u522b\u3002\u7231\u56e0\u65af\u5766\u901a\u8fc7\u5411\u6211\u4eec\u5c55\u793a\u7269\u8d28\u548c\u80fd\u91cf\uff08\u4e09\u7ef4\u73b0\u8c61\uff09\u5b9e\u9645\u4e0a\u53ef\u80fd\u4e0e\u56db\u7ef4\u73b0\u8c61\uff1a\u65f6\u95f4\u76f8\u4e92\u4f5c\u7528\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u5e2e\u52a9\u4e86\u6211\u4eec\u3002\u5728\u8fd9\u79cd\u76f8\u4e92\u4f5c\u7528\u4e2d\uff0c\u65f6\u7a7a\u53ef\u80fd\u4f1a\u56e0\u8d28\u91cf/\u80fd\u91cf\u7684\u5b58\u5728\u800c\u626d\u66f2\u3002\u7efc\u4e0a\u6240\u8ff0\uff0c\u636e\u6211\u4eec\u6240\u77e5\uff0c\u6211\u4eec\u751f\u6d3b\u5728\u4e00\u4e2a\u56db\u7ef4\u5b87\u5b99\u4e2d\uff0c\u5b83\u5bb9\u6613\u53d7\u5230\u62c9\u4f38\u3001\u626d\u66f2\u548c\u5f2f\u66f2\u7b49\u53d8\u5f62\u7684\u5f71\u54cd\u3002\u8fd9\u5c31\u662f Henri Poincar\u00e9 \u548c\u62d3\u6251\u5b66\u53d1\u660e\u7684\u7528\u6b66\u4e4b\u5730\u3002\u8ba9\u6211\u4eec\u56de\u5230\u57fa\u7840\u3002\u6211\u4eec\u90fd\u975e\u6b63\u5f0f\u5730\u77e5\u9053\u5e73\u9762\u4e0a\u7684\u5706\u662f\u4e8c\u7ef4\u5706\u76d8\u7684\u4e00\u7ef4\u5706\u5468\u3002\u5411\u4e0a\u4e00\u7ef4\uff0c\u6211\u4eec\u4e5f\u76f4\u89c2\u5730\u77e5\u9053\uff0c\u4e09\u7ef4\u7403\u7684\u4e8c\u7ef4\u8868\u9762\u79f0\u4e3a\u7403\u4f53\u3002\u7136\u800c\uff0c\u518d\u4e0a\u5347\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u6211\u4eec\u7684\u76f4\u89c9\u5df2\u7ecf\u5b8c\u5168\u8ba9\u6211\u4eec\u5931\u671b\u4e86\u3002\u4e00\u4e2a\u7269\u4f53\u5d4c\u5165\u56db\u7ef4\u7a7a\u95f4\u7684\u4e09\u7ef4\u7b49\u4ef7\u7269\u662f\u4ec0\u4e48\uff1f\u597d\u5427\uff0c\u4e0e\u524d\u4e24\u8005\u4e00\u6837\u771f\u5b9e\uff0c\u56db\u7ef4\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u4e2d\u56db\u7ef4\u7403\u7684\u4e09\u7ef4\u8fb9\u754c\u5728\u6570\u5b66\u4e2d\u88ab\u79f0\u4e3a\u7403\u4f53\u6216 3 \u7403\u4f53\u3002\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u4e3a\u60a8\u5f62\u8c61\u5316\uff0c\u4f46\u6211\u4e0d\u80fd\u3002\u5728\u6570\u5b66\u4e2d\uff0c\u8fd9\u4e09\u4e2a\u7269\u4f53\uff08\u5706\u3001\u7403\u548c\u7403\uff09\u5bc6\u5207\u76f8\u5173\uff0c\u88ab\u79f0\u4e3a 1-\u30012- \u548c 3-\u7403\u3002\u8fd9\u6837\u7684 n \u7403\u4f53\u662f\u666e\u901a\u7403\u4f53\u5bf9\u4efb\u610f\u7ef4\u5ea6\u7a7a\u95f4\u7684\u63a8\u5e7f\u3002\u5728\u62d3\u6251\u4e2d\uff0cn \u7403\u4f53\u88ab\u89c6\u4e3a n \u7ef4\u6d41\u5f62\uff0c\u5b83\u4eec\u662f\u5728\u6bcf\u4e2a\u70b9\u9644\u8fd1\u5c40\u90e8\u7c7b\u4f3c\u4e8e\u6b27\u51e0\u91cc\u5f97\uff08\u5e73\u5766\uff09\u7a7a\u95f4\u7684\u62d3\u6251\u7a7a\u95f4\u3002\u66f4\u51c6\u786e\u5730\u8bf4\uff1a\u6d41\u5f62\u7684\u5b9a\u4e49 n \u7ef4\u6d41\u5f62\u7684\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u4e0e n \u7ef4\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4\u540c\u80da\u7684\u90bb\u57df\u3002\u5728\u601d\u8003\u6d41\u5f62\u662f\u4ec0\u4e48\u65f6\uff0c\u4f5c\u8005 Sylvia Nasar \u5728\u5979\u7684\u4e66 A Beautiful Mind \u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u7528\u7684\u89c2\u70b9\uff1a\n\u60f3\u8c61\u4e00\u4e0b\u81ea\u5df1\u7f29\u5c0f\u5230\u4e00\u4e2a\u9488\u5c16\u7684\u5927\u5c0f\uff0c\u5750\u5728\u751c\u751c\u5708\u7684\u8868\u9762\u4e0a\u3002\u73af\u987e\u56db\u5468\uff0c\u60a8\u4f3c\u4e4e\u5750\u5728\u4e00\u4e2a\u5e73\u5766\u7684\u78c1\u76d8\u4e0a\u3002\u5411\u4e0b\u4e00\u7ef4\u5750\u5728\u66f2\u7ebf\u4e0a\uff0c\u9644\u8fd1\u7684\u62c9\u4f38\u770b\u8d77\u6765\u50cf\u4e00\u6761\u76f4\u7ebf\u3002\u5982\u679c\u60a8\u4f4d\u4e8e\u4e00\u4e2a 3D \u6d41\u5f62\u4e0a\uff0c\u65e0\u8bba\u591a\u4e48\u6df1\u5965\uff0c\u60a8\u7684\u90bb\u8fd1\u533a\u57df\u770b\u8d77\u6765\u5c31\u50cf\u4e00\u4e2a\u7403\u7684\u5185\u90e8\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7269\u4f53\u4ece\u8fdc\u5904\u770b\u7684\u65b9\u5f0f\u53ef\u80fd\u4e0e\u60a8\u8fd1\u89c6\u773c\u7684\u65b9\u5f0f\u5927\u4e0d\u76f8\u540c\u3002 John Stillwell \u5728\u4ed6\u7684\u7cbe\u5f69\u8457\u4f5c\u201c\u62d3\u6251\u8bba\u6587\uff1a\u5206\u6790\u4f4d\u7f6e\u53ca\u5176\u4e94\u4e2a\u8865\u5145\u201d\uff082010 \u5e74\uff09\u4e2d\u58f0\u79f0\uff0c\u5728 Henri Poincar\u00e9\uff081854-1912 \u5e74\uff09\u4e4b\u524d\uff0c\u53ea\u6709\u4e00\u4e2a\uff08\u901a\u7528\uff09\u62d3\u6251\u6982\u5ff5\u88ab\u5b9a\u4e49\uff0c\u8fd9\u5e76\u975e\u6ca1\u6709\u6839\u636e\u3002\u8fd9\u4e2a\u6982\u5ff5\u662f\u73b0\u5728\u4f17\u6240\u5468\u77e5\u7684\u6b27\u62c9\u7279\u5f81 (\u03c7)\uff0c\u7531\u6b27\u62c9\u7684\u591a\u9762\u4f53\u516c\u5f0f V \u2014 E + F = \u03c7 \u7ed9\u51fa\uff0c\u5176\u4e2d V \u4ee3\u8868\u9876\u70b9\uff0cE \u4ee3\u8868\u8fb9\uff0cF \u4ee3\u8868\u9762\u3002\u7403\u9762\u548c\u51f8\u591a\u9762\u4f53\uff08\u4f8b\u5982\u67cf\u62c9\u56fe\u7acb\u4f53\uff09\u7684\u6b27\u62c9\u7279\u6027\u5747\u4e3a\u4e8c\u3002 1863 \u5e74\uff0c\u83ab\u6bd4\u4e4c\u65af (M\u00f6bius) \u5728\u5bf9\u6b64\u7c7b\u66f2\u9762\u7684\u62d3\u6251\u5206\u7c7b\u7684\u7814\u7a76\u4e2d\u8868\u660e\uff0cR\u00b3 \u4e2d\u7684\u6240\u6709\u95ed\u5408\u66f2\u9762\u2014\u2014\u5373\u53ef\u5b9a\u5411\u66f2\u9762 \uff0c\u90fd\u6309\u5b83\u4eec\u7684\u6b27\u62c9\u7279\u6027\u8fdb\u884c\u5206\u7c7b\u3002 Stillwell (2010) \u8fd8\u63d0\u5230\u4e86 Gauss (1827) \u548c Bonnet (1848) \u7b49\u4eba\u7269\u7684\u76f8\u5173\u8d21\u732e\u4ee5\u53ca\u4ed6\u4eec\u5bf9\u5149\u6ed1\u8868\u9762\u5e73\u5747\u66f2\u7387\u7684\u53d1\u73b0\uff0c\u4ee5\u53ca Riemann (1851) \u5bf9\u4ee3\u6570\u66f2\u7ebf\u7684\u7814\u7a76\u3002\u6b64\u5916\uff0c\u4ed6\u8fd8\u63d0\u5230\u4e86 Cayley (1859) \u5bf9 R\u00b3 \u4e2d\u8868\u9762\u4e0a\u7684\u201c\u51f9\u5751\u3001\u5cf0\u9876\u548c\u901a\u9053\u201d\u7684\u7814\u7a76\u7684\u76f8\u5173\u6027\uff0c\u4f46\u8865\u5145\u8bf4\uff0c\u76f4\u5230 Enrico Betti (1871) \u624d\u5728\u7814\u7a76\u8fd9\u4e9b\u6982\u5ff5\u65b9\u9762\u53d6\u5f97\u4e86\u771f\u6b63\u7684\u8fdb\u5c55\u4efb\u610f\u7ef4\u5ea6\u3002 Betti \u5b9a\u4e49\u4e86\u540e\u6765\u88ab\u79f0\u4e3a Betti \u6570 P\u2080, P\u2081, P\u2082, ... \u7684\u6240\u6709\u7ef4\u5ea6\u3002\u5728\u4ee3\u6570\u62d3\u6251\u4e2d\uff0c\u975e\u6b63\u5f0f\u5730\uff0c\u7b2c k \u4e2a Betti \u6570\u662f\u6307\u62d3\u6251\u8868\u9762\u4e0a k \u7ef4\u5b54\u7684\u6570\u91cf\uff0c\u6216\u8005\u6362\u53e5\u8bdd\u8bf4\uff0c\u201c\u5728\u4e0d\u5c06\u8868\u9762\u5206\u6210\u4e24\u4e2a\u5355\u72ec\u90e8\u5206\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fdb\u884c\u7684\u6700\u5927\u5207\u5272\u6b21\u6570\u201d\uff08Gardner\uff0c 1984 \u5e74\u7b2c 9-10 \u9875\uff09\u3002\u5bf9\u4e8e 0 \u7ef4\u30011 \u7ef4\u548c 2 \u7ef4\u5355\u7eaf\u590d\u5f62\u96c6\u5408\uff08\u7531\u70b9\u3001\u7ebf\u6bb5\u3001\u4e09\u89d2\u5f62\u53ca\u5176 n \u7ef4\u5bf9\u5e94\u7269\u7ec4\u6210\u7684\u96c6\u5408\uff09\uff0cBetti \u6570\u5177\u6709\u4ee5\u4e0b\u5b9a\u4e49\uff1a \u4f8b\u5982\uff0c\u73af\u9762\u5177\u6709 Betti \u6570 P\u2080 = 1, P\u2081 = 1, P\u2082 = 1 \u56e0\u4e3a\u5b83\u662f\u5355\u4e2a\u8fde\u63a5\u7684\u8868\u9762\u7ec4\u4ef6\uff0c\u5177\u6709\u4e24\u4e2a\u5706\u5b54\uff0c\u8fd9\u4e9b\u5706\u5b54\u8fde\u63a5\u5e76\u5f62\u6210\u4e00\u4e2a\u5305\u56f4\u5355\u4e2a\u8154\u7684\u8868\u9762\u3002\u7b2c\u4e8c\u4e2a\u8d1d\u8482\u6570 P\u2081 \u4e5f\u79f0\u4e3a\u66f2\u9762\u7684\u5c5e\uff0c\u975e\u6b63\u5f0f\u5730\u201c\u5b83\u5177\u6709\u7684\u5b54\u6570\u201d\uff0c\u7b49\u4e8e\u6b27\u62c9\u7279\u5f81 \u03c7\u3002\u6b63\u5982\u7ea6\u7ff0\u00b7\u7c73\u5c14\u8bfa (John Milnor) (1931-) \u5728\u514b\u83b1\u6570\u5b66\u7814\u7a76\u6240\u5343\u79a7\u5e74\u5956\u7684\u5e9e\u52a0\u83b1\u731c\u60f3\u7684\u5b98\u65b9\u58f0\u660e\u4e2d\u6240\u5199\uff1a\u4e8c\u7ef4\u6d41\u5f62\u6216\u66f2\u9762\u7684\u62d3\u6251\u7ed3\u6784\u5728 19 \u4e16\u7eaa\u5f97\u5230\u4e86\u5f88\u597d\u7684\u7406\u89e3\u3002 [...] \u4efb\u4f55\u8fd9\u6837\u7684\u8868\u9762\u90fd\u6709\u4e00\u4e2a\u660e\u786e\u5b9a\u4e49\u7684\u5c5e g \u2265 0\uff0c\u53ef\u4ee5\u76f4\u89c2\u5730\u63cf\u8ff0\u4e3a\u5b54\u7684\u6570\u91cf\u3002 Milnor \u7528 0\u30011 \u548c 2 \u5c5e\u7684\u4e09\u4e2a\u56fe\u5f62\u7684\u7b80\u5355\u8349\u56fe\u5bf9\u6d41\u5f62\u548c\u62d3\u6251\u8fdb\u884c\u4e86\u975e\u6b63\u5f0f\u4ecb\u7ecd\uff08\u89c1\u4e0b\u6587\uff09\u3002\n\u5728\u5e9e\u52a0\u83b1\u4e4b\u524d\uff0c\u6b63\u5982\u7c73\u5c14\u8bfa\u548c\u65af\u8482\u5c14\u97e6\u5c14\u6240\u8bf4\uff0c\u552f\u4e00\u5f97\u5230\u660e\u786e\u5b9a\u4e49\u7684\u62d3\u6251\u6982\u5ff5\u786e\u5b9e\u662f\u95ed\u5408\u66f2\u9762\u7406\u8bba\uff0c\u5373\u6240\u8c13\u7684 2-\u6d41\u5f62\u3002\u5b83\u4eec\u7684\u7279\u6027\u662f\u7d27\u51d1\u4e14\u65e0\u8fb9\u754c\u3002\u5c01\u95ed\u66f2\u9762\u7684\u5206\u7c7b\u5b9a\u7406\u6307\u51fa\uff0c\u4efb\u4f55\u8fde\u901a\u7684\u5c01\u95ed\u66f2\u9762\u540c\u80da\u4e8e\u4ee5\u4e0b\u4e09\u4e2a\u5bb6\u65cf\u4e4b\u4e00\u7684\u67d0\u4e2a\u6210\u5458\uff1a 1. \u7403\u4f53\uff1b 2. g \u2265 1 \u65f6 g tori \u7684\u8fde\u901a\u548c\uff1b\u548c 3. k \u2265 1 \u65f6 k \u4e2a\u5b9e\u5c04\u5f71\u5e73\u9762\u7684\u8fde\u901a\u548c\u3002Milnor \u7528\u4ee5\u4e0b\u9648\u8ff0\u7ed3\u675f\u4e86\u4ed6\u5bf9\uff08\u5982\u6b64\u7b80\u5355\u5f97\u591a\u7684\uff09\u66f2\u9762\u7684\u8ba8\u8bba\uff1a\u201c\u66f4\u9ad8\u7ef4\u4e2d\u7684\u76f8\u5e94\u95ee\u9898\u8981\u56f0\u96be\u5f97\u591a\u3002\u201d Henri Poincar\u00e9 \u5c06\u662f\u7b2c\u4e00\u4e2a\u5c1d\u8bd5\u5bf9 1 \u548c 2 \u6d41\u5f62\u8fdb\u884c\u7c7b\u4f3c\u7814\u7a76\u7684\u4eba\uff0c\u8be5\u7814\u7a76\u5bf9\u4e09\u7ef4\u6d41\u5f62\u8fdb\u884c\u4e86\u7814\u7a76\u2014\u2014\u5373\u7814\u7a76\u662f\u5426\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e9b\u7269\u4f53\u5f7c\u6b64\u540c\u80da\u3002\u4ea8\u5229\u00b7\u5e9e\u52a0\u83b1 (Henri Poincar\u00e9) \u4e8e 1854 \u5e74 4 \u6708 29 \u65e5\u51fa\u751f\u5728\u6cd5\u56fd\u5357\u9521\u7684 Cit\u00e9 Ducale \u8857\u533a\uff0c\u7236\u4eb2\u662f Leon Poincar\u00e9 \u548c Eug\u00e9nie Launois\u3002\u4ed6\u7684\u7236\u4eb2\u662f\u5357\u9521\u5927\u5b66\u7684\u533b\u5b66\u6559\u6388\uff0c\u4ed6\u7684\u6bcd\u4eb2\u662f\u5bb6\u5ead\u4e3b\u5987\uff0c\u5f53\u4ed6\u5728\u7ae5\u5e74\u65f6\u671f\u56e0\u767d\u5589\u751f\u75c5\u65f6\uff0c\u4ed6\u7167\u6599\u4ea8\u5229\u5e76\u5728\u5bb6\u4e0a\u5b66\u3002 1862 \u5e74\uff0c8 \u5c81\u7684\u4ed6\u8fdb\u5165 Lyc\u00e9e\uff0c\u5728\u90a3\u91cc\u5ea6\u8fc7\u4e86 9 \u5e74\uff0c\u5728\u4ed6\u5b66\u4e60\u7684\u6bcf\u4e00\u4e2a\u4e3b\u9898\u4e0a\u90fd\u8868\u73b0\u51fa\u8272\u3002\u4ed6\u7684\u624d\u534e\u7684\u7b2c\u4e00\u4e2a\u8ba4\u53ef\u6765\u81ea\u4e00\u4f4d\u6570\u5b66\u8001\u5e08\uff0c\u4ed6\u5c06\u4ed6\u63cf\u8ff0\u4e3a\u201c\u6570\u5b66\u602a\u7269\u201d\uff0c\u4ee5\u53ca\u6765\u81ea\u6cd5\u56fd\u6240\u6709 Lyc\u00e9e \u5b66\u6821\u7684\u9876\u5c16\u5b66\u751f\u4e4b\u95f4\u7684\u6bd4\u8d5b\u7684\u4e00\u7b49\u5956\u3002\u9664\u4e86\u6570\u5b66\uff0c\u4ed6\u8fd8\u64c5\u957f\u5199\u4f5c\u3002\u5bf9\u4e8e\u672a\u6765\u7684\u6570\u5b66\u5bb6\u6765\u8bf4\uff0c\u4ed6\u6700\u5dee\u7684\u79d1\u76ee\u662f\u97f3\u4e50\u548c\u4f53\u80b2\u3002\u7136\u800c\uff0c\u6839\u636e\u5361\u5c14 (1968) \u7684\u8bf4\u6cd5\uff0c\u4ed6\u7684\u89c6\u529b\u4e0d\u4f73\u548c\u5fc3\u4e0d\u5728\u7109\u7684\u503e\u5411\u53ef\u80fd\u89e3\u91ca\u4e86\u8fd9\u4e9b\u56f0\u96be\u3002 1871 \u5e74\uff0c\u4ed6\u4ece Lyc\u00e9e \u6bd5\u4e1a\uff0c\u83b7\u5f97\u7406\u5b66\u5b66\u58eb\u5b66\u4f4d\u3002\u5728\u6587\u5b66\u548c\u79d1\u5b66\u65b9\u9762\uff0c\u5e76\u5728\u666e\u6cd5\u6218\u4e89\u4e2d\u52a0\u5165\u4e86\u4ed6\u7684\u7236\u4eb2\u7684\u524d\u7ebf\uff0c\u5728\u6551\u62a4\u961f\u670d\u5f79\u3002\u6218\u540e\uff0c\u5e9e\u52a0\u83b1\u4e8e 1873 \u5e74\u8fdb\u5165\u7efc\u5408\u7406\u5de5\u5b66\u9662\u7684\u5927\u5b66\uff0c\u5728\u90a3\u91cc\u4ed6\u8ddf\u968f\u67e5\u5c14\u65af\u00b7\u8d6b\u7c73\u7279 (1822-1902) \u5b66\u4e60\u6570\u5b66\uff0c\u5e76\u5728 22 \u5c81\u65f6\u53d1\u8868\u4e86\u4ed6\u7684\u7b2c\u4e00\u7bc7\u8bba\u6587\uff0c\u9898\u4e3a D\u00e9monstration nouvelle des propri\u00e9t\u00e9s de l&#39;indicatrice d&#39;une surface \uff08\u201c\u8868\u9762\u6307\u793a\u5242\u7279\u6027\u7684\u65b0\u6f14\u793a\u201d\uff09\u3002 1875 \u5e74\uff0c\u9664\u4e86\u6570\u5b66\u5b66\u4e60\u4e4b\u5916\uff0c\u4ed6\u8fd8\u8fdb\u5165\u4e86 \u00c9cole des Mines \u7684\u91c7\u77ff\u5de5\u7a0b\u8bfe\u7a0b\uff0c\u5e76\u4e8e 1879 \u5e74\u83b7\u5f97\u5de5\u7a0b\u5e08\u5b66\u4f4d\u3002\u4ed6\u7acb\u5373\u6295\u5165\u4f7f\u7528\u4ed6\u7684\u65b0\u5b66\u4f4d\uff0c\u52a0\u5165\u4e86\u77ff\u5c71\u5175\u56e2\u62c5\u4efb\u68c0\u67e5\u5458\u3002\u540c\u65f6\uff0c\u4ed6\u6b63\u5728\u51c6\u5907\u653b\u8bfb\u5df4\u9ece\u5927\u5b66\u7d22\u90a6\u5b66\u9662\u5fae\u5206\u65b9\u7a0b\u6570\u5b66\u79d1\u5b66\u535a\u58eb\u5b66\u4f4d\u3002\u4ed6\u7684\u8bba\u6587\u9898\u4e3a Sur les propri\u00e9t\u00e9s des fonctions d\u00e9finies par les \u00e9quations aux diff\u00e9rences partielles\uff08\u201c\u5173\u4e8e\u7531\u504f\u5dee\u5206\u65b9\u7a0b\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u6027\u8d28\u201d\uff09\u5e76\u4e8e 1879 \u5e74\u5b8c\u6210\u3002\u91c7\u77ff\u5de5\u7a0b\u5e08\uff0c1881 \u5e74\u81f3 1885 \u5e74\u8d1f\u8d23\u5317\u90e8\u94c1\u8def\u5f00\u53d1\u3002\u540c\u65f6\uff0c\u4ed6\u8fd8\u5f00\u59cb\u5728\u6bcd\u6821\u7d22\u90a6\u5927\u5b66\u6559\u6388\u6570\u5b66\uff0c\u5e76\u7ee7\u7eed\u8fdb\u884c\u7814\u7a76\uff0c\u5f00\u53d1\u4e86\u4e00\u4e2a\u65b0\u7684\u6570\u5b66\u5206\u652f\uff0c\u79f0\u4e3a\u201c\u5fae\u5206\u65b9\u7a0b\u7684\u5b9a\u6027\u7406\u8bba\u201d .\u8be5\u5206\u652f\u7684\u7814\u7a76\u6d89\u53ca\u901a\u8fc7\u5bfb\u627e\u89e3\u4ee5\u5916\u7684\u65b9\u5f0f\u7814\u7a76\u5fae\u5206\u65b9\u7a0b\u7684\u884c\u4e3a\u3002\u9664\u4e86\u8fd9\u4e00\u70b9\u548c\u4ed6\u540e\u6765\u5728\u62d3\u6251\u5b66\u65b9\u9762\u7684\u5de5\u4f5c\u4e4b\u5916\uff0c\u5728\u4ed6\u7684\u804c\u4e1a\u751f\u6daf\u4e2d\uff0c\u5e9e\u52a0\u83b1\u8fd8\u7814\u7a76\u4e86\u51e0\u4e2a\u590d\u53d8\u91cf\u7684\u89e3\u6790\u51fd\u6570\u3001\u963f\u8d1d\u5c14\u51fd\u6570\u3001\u4ee3\u6570\u51e0\u4f55\u3001\u53cc\u66f2\u51e0\u4f55\u3001\u6570\u8bba\u3001\u4e09\u4f53\u95ee\u9898\u3001\u4e22\u756a\u56fe\u65b9\u7a0b\u3001\u7535\u78c1\u5b66\u3001\u76f8\u5bf9\u8bba\u3001\u54f2\u5b66\u548c\u7fa4\u8bba\uff0c\u5e9e\u52a0\u83b1\u8d62\u5f97\u4e86\u201c\u6700\u540e\u7684\u666e\u904d\u4e3b\u4e49\u8005\u201d\u7684\u7ef0\u53f7\u3002\u5e9e\u52a0\u83b1\u5728 1890 \u5e74\u4ee3\u5f00\u59cb\u7814\u7a76\u73b0\u5728\u88ab\u8ba4\u4e3a\u662f\u62d3\u6251\u5b66\u548c\u4ee3\u6570\u62d3\u6251\u5b66\u7684\u57fa\u7840\uff0c\u5176\u8457\u4f5c Analysis Situs (1895) \u548c\u540e\u6765\u7684\u4e94\u4e2a\u589e\u520a (1899; 1900, 1902a, 1902b, 1904)\u3002 \u201c\u5206\u6790\u4f4d\u7f6e\u201d\u6216\u201c\u4f4d\u7f6e\u51e0\u4f55\u5b66\u201d\u4e00\u8bcd\u7684\u7075\u611f\u6765\u81ea\u6208\u7279\u5f17\u91cc\u5fb7\u00b7\u83b1\u5e03\u5c3c\u8328\uff08Gottfried Leibniz\uff0c1646-1716 \u5e74\uff09\u5728\u4ed6 1672-76 \u5e74\uff08De Risi\uff0c2018 \u5e74\uff0c\u7b2c 247 \u9875\uff09\u7684\u8457\u4f5c\u4e2d\u5bf9 150 \u591a\u5e74\u524d\u7684\u672f\u8bed\u7684\u5f15\u7528\u3002\n\u5e9e\u52a0\u83b1\u5728 Analysis Situs \u4e2d\u58f0\u660e\u4e86\u4ed6\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u6570\u5b66\u5206\u652f\u7684\u52a8\u673a\uff0c\u81f4\u529b\u4e8e\u62d3\u6251\u5b66\uff0c\u6216\u201c\u5bf9\u53d1\u751f\u53d8\u5f62\u7684\u51e0\u4f55\u5bf9\u8c61\u7684\u7814\u7a76\u201d\uff0c\u201c\u6a61\u80f6\u677f\u51e0\u4f55\u201d\uff0c\u5728\u5206\u6790\u4f4d\u7f6e\u4e2d\u58f0\u660e\uff081895\uff09\uff1a la G\u00e9om\u00e9trie est l&#39;art de bien raisonner sur desfigures mal faites\uff1b encoreces \u6570\u5b57\uff0cpour ne pas nous tromper\uff0cdoivent-elles satisfaire \u00e0 surees conditions\uff1b les ratios peuvant \u00eatregrossi\u00e8rement alt\u00e9r\u00e9es, mais les Positions relatives des differentspies ne doivent pas \u00eatre boulevers\u00e9es\u3002\u201d\u4e5f\u5c31\u662f\u8bf4\uff0c\u6570\u5b66\u5bb6\u9700\u8981\u80fd\u591f\u786e\u5b9a\u5730\u786e\u5b9a\u6211\u4eec\u7684\u201c\u753b\u5f97\u4e0d\u597d\u7684\u6570\u5b57\u201d\u5fc5\u987b\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\uff0c\u8fd9\u6837\u5373\u4f7f\u5b83\u4eec\u7684\u201c\u6bd4\u4f8b\u53ef\u80fd\u4f1a\u88ab\u4e25\u91cd\u6539\u53d8\u201d\uff0c\u201c\u4e0d\u540c\u56fe\u5f62\u7684\u76f8\u5bf9\u4f4d\u7f6e\u201d\u96f6\u4ef6\u4e0d\u80fd\u88ab\u6253\u4e71&#39;\u3002\u8be5\u58f0\u660e\u4e0e\u62d3\u6251\u7684\u73b0\u4ee3\u5b9a\u4e49\u5bc6\u5207\u76f8\u5173\uff1a\u62d3\u6251\u662f\u5bf9\u5728\u8fde\u7eed\u53d8\u5f62\uff08\u4f8b\u5982\u62c9\u4f38\u3001\u626d\u66f2\u3001\u8d77\u76b1\u548c\u5f2f\u66f2\uff0c\u4f46\u4e0d\u6495\u88c2\u6216\u7c98\u5408\uff09\u4e0b\u4fdd\u7559\u7684\u51e0\u4f55\u5bf9\u8c61\u7684\u5c5e\u6027\u7684\u7814\u7a76\u3002\u5728\u4ed6\u5173\u4e8e\u62d3\u6251\u7684\u7b2c\u4e00\u7bc7\u8bba\u6587\uff08\u4fe1\u4ef6\uff0c\u771f\u7684\uff09\u4e2d\uff0c\u5e9e\u52a0\u83b1\u7740\u624b\u6fc0\u53d1\u7b2c\u4e00\u672c\u771f\u6b63\u7684\u62d3\u6251\u5b66\u5165\u95e8\uff0cAnalysis Sites (1895)\u3002\u4ed6\u901a\u8fc7\u53c2\u8003\u5927\u7ea6 20 \u5e74\u524d\u5f15\u5165\u7684 Betti \u6570\u5b57\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u4ed6\u7684\u8bba\u70b9\u6216\u5bf9\u8bfb\u8005\u7684\u95ee\u9898\u662f\uff0c\u8d1d\u8482\u6570\u662f\u5426\u771f\u7684\u8db3\u4ee5\u786e\u5b9a\u6d41\u5f62\u7684\u62d3\u6251\u5206\u7c7b\u3002\u4e3a\u4e86\u8bf4\u660e\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u53ef\u80fd\u4e0d\u4f1a\uff0c\u4ed6\u5f15\u5165\u4e86\u57fa\u672c\u7fa4 \u03c0\u2081 \u7684\u6982\u5ff5\u3002\u975e\u6b63\u5f0f\u5730\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8003\u8651\u57fa\u672c\u7ec4\uff1a\u4ece\u7a7a\u95f4\uff08\u4f8b\u5982\u8868\u9762\uff09\u5f00\u59cb\uff0c\u4ee5\u53ca\u5176\u4e2d\u7684\u67d0\u4e2a\u70b9\uff0c\u4ee5\u53ca\u5728\u8be5\u70b9\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u6240\u6709\u5faa\u73af - \u4ece\u8be5\u70b9\u5f00\u59cb\u7684\u8def\u5f84\uff0c\u5f98\u5f8a\u7ed5\u4e00\u5708\uff0c\u6700\u7ec8\u56de\u5230\u8d77\u70b9\u3002\u4e24\u4e2a\u5faa\u73af\u53ef\u4ee5\u4ee5\u4e00\u79cd\u660e\u663e\u7684\u65b9\u5f0f\u7ec4\u5408\u5728\u4e00\u8d77\uff1a\u6cbf\u7740\u7b2c\u4e00\u4e2a\u5faa\u73af\uff0c\u7136\u540e\u6cbf\u7740\u7b2c\u4e8c\u4e2a\u5faa\u73af\u3002\u5982\u679c\u4e00\u4e2a\u73af\u53ef\u4ee5\u53d8\u5f62\u4e3a\u53e6\u4e00\u4e2a\u800c\u4e0d\u65ad\u88c2\uff0c\u5219\u4e24\u4e2a\u73af\u88ab\u8ba4\u4e3a\u662f\u7b49\u6548\u7684\u3002\u5177\u6709\u8fd9\u79cd\u7ec4\u5408\u65b9\u6cd5\u7684\u6240\u6709\u6b64\u7c7b\u5faa\u73af\u7684\u96c6\u5408\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u8fd9\u79cd\u7b49\u4ef7\u5173\u7cfb\u662f\u8be5\u7279\u5b9a\u7a7a\u95f4\u7684\u57fa\u672c\u7fa4\u3002\u4ed6\u63a5\u4e0b\u6765\u63cf\u8ff0\u4e86\u4e00\u4e2a\u4e09\u7ef4\u6d41\u5f62\u65cf\uff0c\u5e76\u8868\u660e\u8fd9\u4e9b\u6d41\u5f62\u4e2d\u7684\u67d0\u4e9b\u5177\u6709\u76f8\u540c\u7684 Betti \u6570\uff0c\u4f46\u5c5e\u4e8e\u4e0d\u540c\u7684\u57fa\u672c\u7fa4\uff08Stillwell 2010\uff0c\u7b2c 6 \u9875\uff09\u3002\u636e\u6b64\uff0c\u4ed6\u8ba4\u4e3a\uff0c\u5982\u679c\u57fa\u672c\u7fa4\u662f\u62d3\u6251\u4e0d\u53d8\u91cf\uff08\u5728\u7ecf\u5386\u540c\u80da\u65f6\u4fdd\u7559\u7684\u5c5e\u6027\uff09\uff0c\u90a3\u4e48\u4ec5\u51ed\u8d1d\u8482\u6570\u5c31\u65e0\u6cd5\u533a\u5206\u4e09\u7ef4\u6d41\u5f62\u3002\n\u540e\u6765\u7684\u5e9e\u52a0\u83b1\u731c\u60f3\uff081904\uff09\u5b9e\u9645\u4e0a\u5728 1895 \u5e74\u5e76\u4e0d\u5b58\u5728\uff0c\u6839\u636e Stillwell\uff082010\uff09\u7684\u8bf4\u6cd5\uff0c\u6b64\u65f6\u5e9e\u52a0\u83b1\u53ef\u80fd\u8ba4\u4e3a\u5f88\u660e\u663e\u6240\u6709\u7b80\u5355\u8fde\u63a5\u7684 n \u7ef4\u95ed\u5408\u6d41\u5f62\u90fd\u5c06\u540c\u80da\u4e8e n \u7403\uff0c\u5373\uff0c\u5982\u679c\u53d8\u5f62\u4e3a n \u7ef4\u7403\u4f53\u7684\u5f62\u72b6\uff0c\u6240\u6709\u8fd9\u4e9b\u6d41\u5f62\u90fd\u5c06\u4fdd\u6301\u5176\u62d3\u6251\u7279\u6027\u3002\u6bd5\u7adf\uff0c\u81ea\u9ece\u66fc\u65f6\u4ee3\u4ee5\u6765\uff0c\u4e00\u7ef4\u548c\u4e8c\u7ef4\u6d41\u5f62\u7684\u76f8\u540c\u7ed3\u679c\u5c31\u5df2\u4e3a\u4eba\u6240\u77e5\u3002\u76f8\u53cd\uff0c\u8003\u8651\u5230\u4ed6\u81ea\u5df1\u4e09\u5e74\u524d\u7684\u8bba\u8bc1\uff0c\u5206\u6790\u73b0\u573a\u7740\u624b\u4fee\u6539\u548c\u8865\u5145 Betti \u6570\u5b57\u4ee5\u5bfb\u627e\u66f4\u575a\u5b9e\u7684\u57fa\u7840\u3002\u672c\u6587\u901a\u8fc7\u591a\u79cd\u9014\u5f84\u5b9e\u73b0\u8fd9\u4e00\u76ee\u6807\u3002\u6b63\u5982\u5728\u7814\u7a76\u4e2d\u7ecf\u5e38\u9047\u5230\u7684\u90a3\u6837\uff0c\u4ed6\u9996\u5148\u4ecb\u7ecd\u4e86\u4e3a\u4ec0\u4e48\u8fd9\u9879\u5de5\u4f5c\u6709\u4ef7\u503c\u7684\u7406\u7531\uff0c\u5e76\u6307\u51fa\u201cn \u7ef4\u51e0\u4f55\u662f\u4e00\u4e2a\u771f\u5b9e\u7684\u5bf9\u8c61\uff0c\u5982\u4eca\u6ca1\u6709\u4eba\u6000\u7591\u8fd9\u4e00\u70b9\u3002\u8d85\u7a7a\u95f4\u4e2d\u7684\u56fe\u5f62\u4e0e\u666e\u901a\u7a7a\u95f4\u4e2d\u7684\u56fe\u5f62\u4e00\u6837\u6613\u4e8e\u7cbe\u786e\u5b9a\u4e49\uff0c\u5373\u4f7f\u6211\u4eec\u65e0\u6cd5\u8868\u793a\u5b83\u4eec\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u6784\u601d\u5e76\u7814\u7a76\u5b83\u4eec\u3002\u56e0\u6b64\uff0c\u5982\u679c\u8981\u8c34\u8d23\u591a\u4e8e\u4e09\u4e2a\u7ef4\u5ea6\u7684\u529b\u5b66\u7f3a\u4e4f\u5bf9\u8c61\uff0c\u90a3\u4e48\u8d85\u51e0\u4f55\u5c31\u4e0d\u80fd\u8fd9\u6837\u8bf4\u201d\uff08Stillwell\uff0c2010\uff09\u3002 La G\u00e9om\u00e9trie \u00e0 n Dimension a un objet r\u00e9el\uff1b personne n&#39;en doute aujourd&#39;hui \u5728 Analysis Situs \u7684\u591a\u9879\u91cd\u5927\u53d1\u73b0\u4e2d\uff0c\u5e9e\u52a0\u83b1\u63d0\u51fa\u4e86\u540e\u6765\u88ab\u79f0\u4e3a\u540c\u6e90\u8bba\u7684\u57fa\u7840\uff0c\u8fd9\u662f\u4e00\u79cd\u5c06\u4e00\u7cfb\u5217\u4ee3\u6570\u7ed3\u6784\uff08\u5982\u963f\u8d1d\u5c14\u7fa4\u6216\u6a21\uff09\u4e0e\u5176\u4ed6\u6570\u5b66\u5bf9\u8c61\uff08\u5982\u4f5c\u4e3a\u62d3\u6251\u7a7a\u95f4\u3002\u4ed6\u901a\u8fc7\u5047\u8bbe\u6bcf\u4e2a\u6d41\u5f62\u90fd\u53ef\u4ee5\u5206\u89e3\u6210\u540c\u80da\u5230\u5355\u7eaf\u5f62\uff08\u672c\u8d28\u4e0a\u662f n \u7ef4\u7684\u56db\u9762\u4f53\uff09\u7684\u5355\u5143\u6765\u5efa\u7acb\u4e00\u4e2a\u8ba1\u7b97 Betti \u6570\u7684\u7cfb\u7edf\uff0c\u8bfb\u53d6\u4ed6\u79f0\u4e3a\u540c\u8c03\u7684\u7ebf\u6027\u65b9\u7a0b\u5e76\u8ba1\u7b97\u76f8\u5e94\u7684 Betti \u6570\u7ebf\u6027\u4ee3\u6570\uff08Stillwell 2012\uff0c\u7b2c 557 \u9875\uff09\u3002\u6b63\u5982 Scholz (1980) \u6240\u8bf4\uff1a\u201c\u7531 Poincar\u00e9 \u5f00\u521b\u7684\u4ee3\u6570\u62d3\u6251\u7684\u7b2c\u4e00\u9636\u6bb5\u7684\u7279\u70b9\u662f\u5b83\u7684\u4ee3\u6570\u5173\u7cfb\u548c\u8fd0\u7b97\u603b\u662f\u5904\u7406\u62d3\u6251\u5bf9\u8c61\u3002\u201d\u4f7f\u7528\u4ed6\u7684\u65b0\u540c\u8c03\u7406\u8bba\uff0c\u5e9e\u52a0\u83b1\u63a5\u4e0b\u6765\u901a\u8fc7\u8003\u8651\u5355\u5143\u5206\u89e3\u7684\u5bf9\u5076\uff0c\u4e3a n \u7ef4\u6d41\u5f62\u7684 Betti \u6570\u63d0\u4f9b\u4e86\u5e9e\u52a0\u83b1\u5bf9\u5076\u5b9a\u7406\u3002\u5bf9\u5076\u5b9a\u7406\u6307\u51fa\uff0c\u8ddd\u201c\u672b\u7aef\u201d\u76f8\u540c\u8ddd\u79bb\u7684 Betti \u6570\uff0c\u5373\u9876\u90e8\u548c\u5e95\u90e8\u5c3a\u5bf8\uff0c\u662f\u76f8\u7b49\u7684\u3002\u7279\u522b\u662f\uff0c\u5bf9\u4e8e 3 \u6d41\u5f62\uff0c\u4e8c\u7ef4 Betti \u6570\u7b49\u4e8e\u4e00\u7ef4 Betti \u6570\uff08Stillwell\uff0c2012\uff09\u3002\u5728\u540c\u4e00\u7bc7\u8bba\u6587\u7684\u540e\u9762\uff0c\u5e9e\u52a0\u83b1\u8fd8\u63d0\u4f9b\u4e86\u6b27\u62c9\u591a\u9762\u4f53\u516c\u5f0f\u5bf9\u4efb\u610f\u7ef4\u5ea6\u7684\u63a8\u5e7f\uff0c\u5e76\u5c06\u5176\u4e0e\u4ed6\u7684\u540c\u6e90\u7406\u8bba\uff08Stillwell\uff0c2010\uff09\u8054\u7cfb\u8d77\u6765\u3002\u4ed6\u8fd8\u7ed9\u51fa\u4e86\u57fa\u672c\u7fa4\u7684\u65b0\u4f8b\u5b50\uff0c\u901a\u8fc7\u8bc6\u522b\u4e0e 3 \u7403\u4f53\u5177\u6709\u76f8\u540c Betti \u6570\u7684\u516b\u9762\u4f53\u7684\u76f8\u53cd\u9762\uff0c\u786e\u5b9a \u03c0\u2081 \u662f\u6bd4 Betti \u6570\u66f4\u5f3a\u7684\u4e0d\u53d8\u91cf\uff0c\u4f46\u540c\u6837\uff0c\u4e00\u4e2a\u4e0d\u540c\u7684\u57fa\u672c\u7fa4\uff08\u5373\u5faa\u73af\u56e2\u4f53\uff09\u3002\u4ece\u4ed6\u7684\u53d1\u73b0\u4e2d\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u5bf9\u4e8e 0\u30011 \u548c 2 \u7ef4\u6d41\u5f62\uff0c\u8d1d\u8482\u6570\u8db3\u4ee5\u533a\u5206\u5b83\u4eec\uff0c\u4f46\u5bf9\u4e8e 3 \u7ef4\u6d41\u5f62\uff0c\u57fa\u672c\u7fa4\u53d8\u5f97\u91cd\u8981\u3002\u591a\u4e48\u91cd\u8981\uff0c\u5e9e\u52a0\u83b1\u5728\u8fd9\u4e00\u70b9\u4e0a\uff081895 \u5e74\uff09\u65e0\u6cd5\u56de\u7b54\u3002\u56de\u60f3\u8d77\u6765\uff0c\u6b63\u5982 Stillwell (2010) \u6240\u5199\uff0c\u7531\u4e8e Poincar\u00e9 \u5bf9\u540c\u8c03\u7406\u8bba\u7684\u6784\u5efa\u548c\u57fa\u672c\u7fa4\u7684\u5efa\u7acb\uff0cAnalysis Situs \u88ab\u6b63\u786e\u5730\u89c6\u4e3a\u4ee3\u6570\u62d3\u6251\u7684\u8d77\u6e90\u3002\u81f3\u4e8e\u540c\u6e90\u8bba\uff0c\u5176\u6210\u7acb\u7684\u91cd\u8981\u6027\u5728\u4e8e\u5b83\u63ed\u793a\u4e86\u4ea7\u751f\u8d1d\u8482\u6570\uff08\u4ee5\u53ca\u6b27\u62c9\u7279\u5f81\uff09\u7684\u4ee3\u6570\u7ed3\u6784\u3002\u57fa\u672c\u7fa4\u7684\u53d1\u73b0\u51f8\u663e\u4e86\u8d1d\u8482\u6570\u4f5c\u4e3a\u6d41\u5f62\u6027\u8d28\u6307\u6807\u7684\u7f3a\u4e4f\u80fd\u529b\u3002\nAnalysis Sites \u867d\u7136\u5177\u6709\u51fa\u8272\u7684\u521b\u9020\u6027\uff0c\u4f46\u63d0\u4f9b\u65f6\u5e76\u975e\u6ca1\u6709\u6df7\u6dc6\u6216\u9519\u8bef\uff08Stillwell\uff0c2010\uff09\u3002\u5728\u63a2\u7d22\u201c\u65e0\u4eba\u533a\u201d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5e9e\u52a0\u83b1\u540e\u6765\u624d\u53d1\u73b0 Betti \u6570\u5b57\u53ea\u662f\u6545\u4e8b\u7684\u4e00\u90e8\u5206\uff0c\u4e09\u5e74\u540e\u4ed6\u5728\u4e39\u9ea6\u535a\u58eb\u751f Poul Heegaard \u7684\u8bba\u6587\u4e2d\u53d1\u73b0\u4e86\u8fd9\u4e00\u758f\u5ffd(1871-1948)\u3002\u5e9e\u52a0\u83b1\u5728 1899 \u5e74\u5199\u4e86\u4ed6\u7684\u7b2c\u4e00\u7bc7\u589e\u520a\uff0c\u9898\u4e3a Compl\u00e9ment a l&#39;analysis site (\u201cSupplement to the Analysis Sites\u201d)\u3002\u8fd9\u7bc7\u8bba\u6587\u7684\u52a8\u673a\u662f Heegaard (1898) \u7684\u53d1\u73b0\uff0cPoincar\u00e9 \u5bf9 Betti \u6570\u7684\u65b0\u5b9a\u4e49\u53ef\u4ee5\u8bc1\u660e\u5728\u4e0e\u4ed6\u7684\u5bf9\u5076\u5b9a\u7406\u76f8\u51b2\u7a81\u3002 Heegaard \u5c06\u5b9e\u5c04\u5f71\u7a7a\u95f4 RP\u00b3 \u7684\u4f8b\u5b50\u4e0e 3 \u7403\u4f53\u7684\u4f8b\u5b50\u8fdb\u884c\u4e86\u5bf9\u6bd4\uff0c\u5e76\u8868\u660e Poincar\u00e9 \u672a\u80fd\u89e3\u91ca\u626d\u8f6c\u7684\u5f71\u54cd\uff0c\u201c\u626d\u66f2\u201d\u3002\u5728\u9996\u5148\u8f6c\u5411\u66f4\u7ec4\u5408\u7684\u540c\u8c03\u7406\u8bba\u4e4b\u540e\uff0c\u5176\u4e2d\u5047\u5b9a\u6d41\u5f62\u5177\u6709\u591a\u9762\u4f53\u7ed3\u6784\uff0c\u5728\u4ed6\u7684\u8865\u5145\uff08\u6709\u65f6\u88ab\u5e9e\u52a0\u83b1\u79f0\u4e3a\u8865\u7801\uff09\u4e2d\uff0c\u5e9e\u52a0\u83b1\u6700\u7ec8\u4fee\u6539\u4e86\u4ed6\u7684\u540c\u8c03\u7406\u8bba\uff0c\u4ee5\u4ea7\u751f\u9664\u8d1d\u8482\u6570\u4e4b\u5916\u7684\u626d\u6570\uff0c\u4f7f\u7528\u6240\u8c13\u7684 Hauptvermutung \u8bba\u8bc1\u8bc1\u660e\u662f\u4e0d\u53d8\u7684\uff08\u4e09\u89d2\u7a7a\u95f4\u7684\u4efb\u4f55\u4e24\u4e2a\u4e09\u89d2\u5256\u5206\u90fd\u6709\u7ec4\u5408\u7b49\u4ef7\u7684\u7ec6\u5206\uff09\uff0c\u73b0\u5728\u5df2\u77e5\u662f\u9519\u8bef\u7684\u3002\u5305\u542b\u52a0\u5f3a\u4e86\u540c\u8c03\u7406\u8bba\uff0c\u80fd\u591f\u533a\u5206\u76f8\u4e92\u626d\u8f6c\u7684\u6d41\u5f62\uff08\u5305\u62ec RP\u00b3 \u548c 3 \u7403\u4f53\uff09\u3002\u5e9e\u52a0\u83b1\u786e\u5b9e\u901a\u8fc7\u5bf9\u83ab\u6bd4\u4e4c\u65af\u5e26\uff08Stillwell\uff0c2010\uff09\u7b49\u4e0d\u53ef\u5b9a\u5411\u8868\u9762\u7684\u8ba8\u8bba\u521b\u9020\u4e86\u201c\u626d\u8f6c\u201d\u4e00\u8bcd\u3002\u5728\u7b2c\u4e8c\u7bc7\u8865\u5145\u8bba\u6587\uff081900 \u5e74\uff09\u4e2d\uff0c\u5e9e\u52a0\u83b1\u73b0\u5728\u66f4\u5f3a\u5927\u7684\u540c\u8c03\u5b9a\u7406\u9f13\u52b1\u4ed6\u4ee5\u8fd9\u6837\u7684\u9648\u8ff0\u7ed3\u675f\u4ed6\u7684\u8bba\u6587\uff1a\u201c\u6bcf\u4e2a\u591a\u9762\u4f53\u7684\u6240\u6709 Betti \u6570\u90fd\u7b49\u4e8e 1 \u5e76\u4e14\u6240\u6709\u7684\u8868 Tq \u90fd\u662f\u53ef\u5b9a\u5411\u7684\uff0c\u5b83\u4eec\u662f\u7b80\u5355\u8fde\u63a5\u7684\uff0c\u5373\u540c\u6784\u4e8e\u4e00\u4e2a\u8d85\u7403\u9762\u201d\u5173\u4e8e\u7ecf\u5386\u53d8\u5f62\u7684\u4e09\u7ef4\u7269\u4f53\u7684\u62d3\u6251\u7279\u6027\u7684\u7b2c\u4e00\u4e2a\uff08\u4e5f\u662f\u9519\u8bef\u7684\uff09\u5e9e\u52a0\u83b1\u731c\u60f3\u3002\u5c31\u4e09\u6d41\u5f62\u548c\u540e\u6765\u7684\u5e9e\u52a0\u83b1\u731c\u60f3\u800c\u8a00\uff0c\u7b2c\u4e09\u548c\u7b2c\u56db\u4e2a\u8865\u5145\uff08\u9664\u4e86\u6269\u5c55\u5e9e\u52a0\u83b1\u540c\u8c03\u7406\u8bba\u548c\u4ee3\u6570\u62d3\u6251\uff09\u7684\u76f8\u5173\u6027\u5728\u4e8e\u4ed6\u4eec\u5bf9\u73af\u9762\u4e1b\u7684\u7814\u7a76\uff0c\u8fd9\u8868\u660e\u5728\u7814\u7a76\u4e2d\u81ea\u7136\u51fa\u73b0\u4ee3\u6570\u66f2\u7ebf\uff0c\u7b2c\u4e09\u589e\u520a\u201c\u5728\u67d0\u4e9b\u4ee3\u6570\u66f2\u9762\u4e0a\u201d\uff081902a\uff09\uff08Stillwell\uff0c2010\uff09\u7684\u91cd\u70b9\u3002\u5e9e\u52a0\u83b1\u4e8e 1904 \u5e74\u53d1\u8868\u4e86\u4ed6\u7684 1895 \u5e74\u5206\u6790\u4f4d\u7f6e\u8bba\u6587\u7684\u7b2c\u4e94\u4e2a\u4e5f\u662f\u6700\u540e\u4e00\u4e2a\u8865\u5145\u3002\u8be5\u8bba\u6587\u6d89\u53ca\u4e09\u7ef4\u6d41\u5f62\uff08\u4f8b\u5982\u6211\u4eec\u4ecb\u7ecd\u4e2d\u7684\u7403\u4f53\uff09\uff0c\u6807\u9898\u4e3a Cinqui\u00e8me compl\u00e9ment \u00e0 l&#39;analysis site\u3002\u8fd9\u7bc7\u8bba\u6587\u73b0\u5728\u56e0 Poincar\u00e9 \u5bf9 3 \u7ef4\u6d41\u5f62\u662f\u5426\u53ef\u4ee5\u7528\u4e0e 2 \u7ef4\u6d41\u5f62\u76f8\u540c\u7684\u533a\u522b\u7279\u5f81\u6765\u63cf\u8ff0\u7684\u7814\u7a76\u800c\u95fb\u540d\uff0c\u5373\u7403\u4f53\u4e2d\u7684\u6bcf\u6761\u7b80\u5355\u7684\u95ed\u5408\u66f2\u7ebf\u90fd\u53ef\u4ee5\u5728\u4e0d\u79bb\u5f00\u7403\u4f53\u7684\u60c5\u51b5\u4e0b\u8fde\u7eed\u53d8\u5f62\u5230\u4e00\u4e2a\u70b9\u3002\u6b63\u5982\u5e9e\u52a0\u83b1\u672c\u4eba\u5728\u5f15\u8a00\u4e2d\u6240\u5199\uff1a\n\u201c\u8fd9\u6b21\u6211\u53ea\u7814\u7a76\u67d0\u4e9b\u4e09\u7ef4\u6d41\u5f62\uff0c\u4f46\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u65e0\u7591\u5177\u6709\u66f4\u5e7f\u6cdb\u7684\u9002\u7528\u6027\u3002\u6211\u5c06\u6295\u5165\u7f3a\u70b9......", "note_en": "Let\u2019s start off easy. We know the shape of the earth. It is\u00a0 more or less\u00a0spherical. Next, our galaxy, the\u00a0 Milky Way. Somewhat surprisingly to\u00a0 Edwin Hubble (1889-1953)\u00a0who discovered it, it is\u00a0 barred spiral shaped, i.e. the shape of a disk with spiral arms. What about the\u00a0observable\u00a0universe? Is it spherical? It certainly seems to be, as it is\u00a0 expanding outwards\u00a0and light is more\u00a0 redshifted\u00a0the further we look. What about the global universe, beyond the horizon of what is observable to us?\n The answer is,\u00a0we do not know.\u00a0We can\u00a0 conjecture. It may be finite or infinite, with or without boundary, with or without curvature, simply connected like a sphere, or multiply connected like a\u00a0donut. What we do know, is that\u00a0 it appears to be expanding. To what? We do not know. But we can\u00a0conjecture.\n  The shape of the universe as it was, is now and may become in the future is very hard for us to\u00a0discern\u00a0empirically.\u00a0Einstein helped us somewhat by showing us that\u00a0matter and energy (three-dimensional phenomena) in fact may\u00a0 interact\u00a0with the a four-dimensional phenomenon:\u00a0 time. In this interaction,\u00a0  spacetime\u00a0may be\u00a0 warped\u00a0by the presence of mass/energy.\u00a0Taken together, as far as we can tell, we live in a four-dimensional universe that is\u00a0susceptible\u00a0to\u00a0deformation\u00a0such as stretching, twisting and bending.\u00a0That\u2019s\u00a0where Henri Poincar\u00e9 and the invention of\u00a0 topology\u00a0comes in.\n Let\u2019s get back to basics. We all know informally that a circle on a plane is the one-dimensional circumference of a two-dimensional disk. Up one dimension, we also know intuitively that the two-dimensional surface of a three-dimensional ball is called a sphere. Up one more dimension however, and our intuition already fail us completely.\u00a0What is the three-dimensional equivalent of an object embedded in four-dimensional space?\u00a0Well, equally as real as the former two, the three-dimensional boundary of a\u00a0four-dimensional ball in four-dimensional Euclidean space is in mathematics known as a\u00a0 glome, or 3-sphere. I\u00a0would visualize it for you here if I could, but I can\u2019t.\n In mathematics the three objects (circle, sphere and glome) are closely related and known as 1\u2013, 2- and\u00a0 3-spheres. Such\u00a0 n-spheres are generalizations of the ordinary sphere to spaces of arbitrary dimension.\u00a0In topology, n-spheres are treated as n-dimensional manifolds, which are topological spaces that locally resemble Euclidean (flat) space near each point.\u00a0More precisely:\n Definition of a manifold Each point of an n-dimensional manifold has a neighborhood that is homeomorphic to the Euclidean space of dimension n.\n  In thinking about what a manifold is, author Sylvia Nasar in her book  A Beautiful Mind provides a useful perspective:\n Think of yourself shrunk to the size of a pinpoint, sitting on the surface of a doughnut. Look around you, and it seems that you\u2019re sitting on a flat disk. Go down one dimension and sit on a curve, and the stretch nearby looks like a straight line. Should you be perched on a three-dimensional manifold, however esoteric, your immediate neighborhood would look like the interior of a ball. In other words, how the object appears from afar may be quite different from the way it appears to your nearsighted eye.\n  John Stillwell\u00a0in his wonderful book \u201c Papers on Topology: Analysis Situs and Its Five Supplements\u201d (2010) claims, not unsubstantiated, that only a single (universal) topological concept had been defined before Henri Poincar\u00e9 (1854-1912). This concept was the now well known\u00a0 Euler characteristic\u00a0(\u03c7) given by\u00a0 Euler\u2019s\u00a0polyhedron formula V \u2014 E + F = \u03c7, where\u00a0V stands for vertices, E for edges and F for faces. The Euler characteristic both for the sphere and convex polyhedra such as e.g.\u00a0 the Platonic solids\u00a0is two.\u00a0In his investigations into the topological classification of such surfaces,\u00a0 M\u00f6bius\u00a0in 1863 showed that all closed surfaces in\u00a0 R\u00b3 \u2014 that is, orientable surfaces , are classified by their Euler characteristic.\n  Stillwell (2010) also mentions the relevant contributions of figures such as\u00a0 Gauss\u00a0(1827) and\u00a0 Bonnet\u00a0(1848) and their discovery of the\u00a0 average curvature of smooth surfaces, as well as the study of\u00a0 algebraic curves\u00a0by\u00a0 Riemann\u00a0(1851). In addition, he mentions the relevancy of the study of \u201cpits, peaks and passes\u201d on surfaces in\u00a0 R\u00b3 by\u00a0 Cayley\u00a0(1859), adding however that it was not until\u00a0 Enrico Betti\u00a0(1871) that real strides were made towards studying such concepts in\u00a0 arbitrary\u00a0dimensions.\n Betti defined what would later be known as the\u00a0 Betti numbers\u00a0P\u2080, P\u2081, P\u2082, \u2026 , in all dimensions. In\u00a0 algebraic topology, informally, the\u00a0 kth Betti number refers to the number of\u00a0 k-dimensional holes on a topological surface, or stated differently,\u00a0 \u201cthe maximum number of cuts that can be made without dividing a surface into two separate pieces\u201d\u00a0(Gardner, 1984 p. 9\u201310). For 0-dimensional, 1-dimensional and 2-dimensional sets of\u00a0  simplical complexes\u00a0(sets composed of points, line segments, triangles and their n-dimensional counterparts), the Betti numbers have the following definitions:\n  A torus for instance has Betti numbers P\u2080 = 1, P\u2081 = 1, P\u2082 = 1 because it is a single connected surface component with two circular holes that connect and form a surface that encloses a single cavity. The second Betti number P\u2081 is also called the\u00a0 genus\u00a0of a surface, informally \u201cthe number of holes it has\u201d and is equal to the Euler characteristic \u03c7. As\u00a0 John Milnor (1931-)\u00a0wrote in the official statement of the Poincar\u00e9 Conjecture for the\u00a0 Clay Mathematics Institute\u2019s\u00a0 Millenium Prize:\n The topology of 2-dimensional manifolds, or surfaces was well understood in the 19th century. [...] Any such surface has a well-defined genus g \u2265 0, which can be described intuitively as the number of holes.\n Milnor presents this informal introduction to manifolds and topology with a simple sketch of three figures of genus 0, 1 and 2 (see below).\n  Before Poincar\u00e9, as both Milnor and Stillwell argue, the only topological concept that was well defined was indeed the theory of closed surfaces, that is, so-called 2-manifolds. Their properties are that they are compact and without boundary. The classification theorem of closed surfaces states that any connected closed surface is homeomorphic to some member of one of the three families: 1. The sphere; 2. The connected sum of g tori for g \u2265 1; and 3. The connected sum of k real projective planes for k \u2265 1. Milnor ends his discussion of (such much simpler) surfaces with the statement: \u201c The corresponding question in higher dimensions is much more difficult.\u201d\n Henri Poincar\u00e9 would be the first person to try to conduct a similar study as had been done for 1- and 2-manifolds, with three-dimensional manifolds \u2014 namely to investigate whether such objects could be shown to be homeomorphic with one other.\n  Henri Poincar\u00e9\u00a0was born on the\u00a029th of April 1854\u00a0in the Cit\u00e9 Ducale neighbourhood of Nancy, France to Leon Poincar\u00e9 and Eug\u00e9nie Launois. His father was a professor of medicine at Nancy-Universit\u00e9 and his mother a homemaker who tended to Henri and homeschooled him when he fell ill from\u00a0diphtheria\u00a0during his childhood.\n  In 1862 at the the age of eight he entered into\u00a0 the Lyc\u00e9e, where he spent nine years, excelling in every topic he studied. The first recognitions of his talent came from a mathematics teacher who described him as\u00a0a \u201cmonster of mathematics\u201d\u00a0and from first prizes in the\u00a0 concours g\u00e9n\u00e9ral, a competition between the top students from all Lyc\u00e9e schools across France. In addition to mathematics,\u00a0he also excelled in writing composition. His poorest subjects were, not-uncharacteristically for future mathematicians, music and physical education. His poor eyesight and tendency towards absentmindedness may however have explained these difficulties, according to Carl (1968). In 1871 he graduated from Lyc\u00e9e with a B.Sc. in letters and science and joined his father on the front in the Franco-Prussian War, serving in the Ambulance Corps.\n Following the war, in 1873 Poincar\u00e9 next entered into university at the\u00a0 \u00c9cole Polytechnique\u00a0where he studied mathematics under\u00a0 Charles Hermite (1822-1902), publishing his first paper at the age of 22 entitled\u00a0 D\u00e9monstration nouvelle des propri\u00e9t\u00e9s de l\u2019indicatrice d\u2019une surface\u00a0(\u201cNew demonstration of the properties of surface indicators\u201d). In 1875, in addition to his studies in mathematics he entered into a mining engineering program at the\u00a0 \u00c9cole des Mines, graduating in 1879 with the degree of engineer. He immediately put his new degree to use, joining the Corps des Mines as an inspector. Simultaneously, he was preparing for his Doctorate of science in mathematics on the topic of differential equations at\u00a0 Colleg\u00e9 de Sorbonne\u00a0at\u00a0 Universit\u00e9 de Paris. His dissertation was entitled\u00a0 Sur les propri\u00e9t\u00e9s des fonctions d\u00e9finies par les \u00e9quations aux diff\u00e9rences partielles\u00a0(\u201cOn the properties of functions defined by partial difference equations\u201d) and was completed in 1879.\n Despite graduating\u00a0 doctorat d\u2019\u00c9tat\u00a0in mathematics, Poincar\u00e9 continued working as a mining engineer, in charge of the northern railway development from 1881 to 1885.\u00a0He meanwhile also began teaching mathematics at his alma mater, the Colleg\u00e9 de Sorbonne and continued conducting research, developing a new branch of mathematics called the \u2018qualitative theory of differential equations\u2019. Investigations in this branch involves studying the behavior of differential equations by means other than finding solutions.\u00a0In addition to this and his later work on topology, through the course of his career Poincar\u00e9 also worked on\u00a0 analytic functions of several complex variables,\u00a0 abelian functions,\u00a0 algebraic geometry,\u00a0 hyperbolic geometry,\u00a0 number theory,\u00a0 the three-body problem,\u00a0 diophantine equations,\u00a0 electromagnetism,\u00a0 relativity theory,\u00a0 philosophy\u00a0and\u00a0 group theory, earning Poincar\u00e9 the nickname \u201cThe Last Universalist\u201d.\n  Poincar\u00e9 began working on what is now considered to be\u00a0the foundation of topology and algebraic topology in the 1890s\u00a0with the work\u00a0  Analysis Situs\u00a0(1895) and five later supplements (1899; 1900, 1902a, 1902b, 1904).\u00a0The term \u2018Analysis Situs\u2019, or \u201cthe geometry of position\u201d was inspired from\u00a0 Gottfried Leibniz (1646-1716)\u2019 reference to the term over 150 years prior in his writings from 1672\u201376 (De Risi, 2018 p. 247).\n   Poincar\u00e9 declared his motivation for establishing a new branch of mathematics devoted to topology, or \u2018the study of geometric objects undergoing deformation\u2019, \u201crubber-sheet geometry\u201d, in Analysis Situs with the statement (1895):\n \u201cOn a bien souvent r\u00e9p\u00e9t\u00e9 que la G\u00e9om\u00e9trie est l\u2019art de bien raisonner sur des figures mal faites; encoreces figures, pour ne pas nous tromper, doivent-elles satisfaire \u00e0 certaines conditions; les proportions peuvant \u00eatre grossi\u00e8rement alt\u00e9r\u00e9es, mais les positions relatives des diverses parties ne doivent pas \u00eatre boulevers\u00e9es.\u201d\n Namely, that there was a need for mathematicians to be able to determine with certainty that our\u00a0 encoreces figures\u00a0\u2018badly drawn figures\u2019 must satisfy certain conditions such that even though their \u2018proportions may be grossly altered\u2019, that the \u2018relative positions of the different parts must not be upset\u2019. The statement aligns closely with the modern day definition of topology:\n Topology is the study of the properties of a geometric object that is preserved under continuous deformations, such as stretching, twisting, crumpling and bending, but not tearing or gluing.\n  In his first paper (letter, really) on topology, Poincar\u00e9 sets out to motivate the first real primer on topology, Analysis Situs (1895). He does so by referring to the Betti numbers introduced about 20 years earlier. His argument, or question to the reader, is whether Betti numbers actually suffice to determine the topological classification of a manifold. To show why they may not, he introduced the concept of a\u00a0 fundamental group\u00a0\u03c0\u2081. Informally, a fundamental group may be thought of in the following way:\n Start with a space (e.g. a surface), and some point in it, and all the loops both starting and ending at this point \u2014 paths that start at this point, wander around and eventually return to the starting point. Two loops can be combined together in an obvious way: travel along the first loop, then along the second. Two loops are considered equivalent if one can be deformed into the other without breaking. The set of all such loops with this method of combining and this equivalence between them is the fundamental group for that particular space.\n He next describes a family of three-dimensional manifolds and shows that certain of these manifolds have the same Betti numbers, yet belong to different fundamental groups (Stillwell 2010, p. 6). From this, he argues that if the fundamental group is a topological invariant (a property preserved while undergoing\u00a0 homeomorphisms), that Betti numbers alone cannot distinguish three-dimensional manifolds from one another.\n  The later Poincar\u00e9 conjecture (1904) in fact did not exist in 1895, as according to Stillwell (2010),\u00a0Poincar\u00e9 at this point likely thought it obvious that all simply-connected\u00a0 n-dimensional closed manifolds would be homeomorphic to the\u00a0 n-sphere, i.e. that all such manifolds would preserve their topological properties if deformed to the shape of a sphere in\u00a0 n-dimensions. After all, the same result had been known to be true for 1- and 2-dimensional manifolds since the time of Riemann.\n The Analysis Situs sets out, rather, to revise and supplement Betti numbers in search of a more solid foundation, given his own argumentation from three years prior. The paper works towards this goal by several paths. He begins by introducing, as often is the case in research, a justification for why the work is valuable, stating that\u00a0 \u201cThe geometry of n dimensions is a real object, nobody doubts that nowadays. Figures in hyperspace are as susceptible to precise definition as those in ordinary space, and even if we cannot represent them, we can still conceive of them and study them. So if the mechanics of more than three dimensions is to be condemned as lacking in object, the same cannot be said of hypergeometry\u201d\u00a0(Stillwell, 2010) .\n La G\u00e9om\u00e9trie \u00e0 n\u00a0dimensions a un objet\u00a0r\u00e9el; personne n\u2019en doute aujourd\u2019hui\n Among the multiple great discoveries in Analysis Situs, Poincar\u00e9 presents the foundations for what would later be called\u00a0 homology theory, a way of associating a sequence of algebraic structures such as abelian groups or modules with other mathematical objects such as topological spaces. He arrives there by setting up a system for computing Betti numbers by assuming that every manifold can be\u00a0decomposed into cells\u00a0which are homeomorphic to\u00a0 simplices\u00a0(essentially\u00a0tetrahedrons\u00a0in n-dimensions),\u00a0reading off linear equations he called homologies\u00a0and\u00a0computing the corresponding Betti numbers by linear algebra\u00a0(Stillwell 2012, p.557). As Scholz (1980) put it: \u00a0\u201cThe first phase of algebraic topology, inaugurated by Poincar\u00e9, is characterized by the fact that its algebraic relations and operations always deal with topological objects.\u201d\n Using his new homology theory, Poincar\u00e9 next provides the\u00a0 Poincar\u00e9 duality theorem\u00a0for the Betti numbers for an\u00a0 n-dimensional manifold, by considering the dual of the cell decomposition. The duality theorem states that Betti numbers of the same distance from the \u2018ends\u2019, i.e. top and bottom dimensions, are equal. In particular, for a 3-manifold the 2-dimensional Betti number equals the 1-dimensional Betti number (Stillwell, 2012).\n Later in the same paper, Poincar\u00e9 also provides a generalization of the Euler polyhedron formula to arbitrary dimensions, and relates it to his homology theory (Stillwell, 2010). He also gives new examples of fundamental groups which establish that\u00a0\u03c0\u2081 is a stronger invariant than the Betti numbers, by identifying opposite faces of an octahedron with the same Betti numbers as the 3-sphere, but again, a different fundamental group (namely the\u00a0 cyclic group). The take-away from his discoveries is that for 0-, 1- and 2-dimensional manifolds, the Betti numbers suffice to distinguish them between one another, but that\u00a0for three-dimensional manifolds, the fundamental group becomes important.\u00a0How important, Poincar\u00e9 at this point (1895) cannot answer.\n In retrospect, as Stillwell (2010) writes, because of Poincar\u00e9\u2019s construction of homology theory and the establishment of the fundamental group, Analysis Situs is rightly regarded as the origin of algebraic topology. As for homology theory, the importance of its establishment was that it revealed that\u00a0there is an algebraic structure giving rise to the Betti numbers (and so the Euler characteristic). The discovery of the fundamental group highlighted the lacking power of Betti numbers as an indicator of manifolds\u2019 properties.\n  Analysis Situs, although brilliantly inventive, was provided not without confusion or error (Stillwell, 2010). Exploring in somewhat of a \u2018no man\u2019s land\u2019, Poincar\u00e9 only later came to discover that Betti numbers were only part of the story, an oversight which he would be made aware of three years later with\u00a0 the thesis\u00a0of a Danish doctoral student,\u00a0 Poul Heegaard (1871-1948).\n Poincar\u00e9 wrote his first supplement, entitled\u00a0 Compl\u00e9ment a l\u2019analysis situs\u00a0(\u201cSupplement to the Analysis Situs\u201d) in 1899. The paper was motivated by the discovery of Heegaard (1898) that\u00a0Poincar\u00e9\u2019s new definition of Betti numbers could be shown to be in conflict with his duality theorem.\u00a0Heegaard contrasts the example of the real projective space\u00a0 RP\u00b3\u00a0with the example of the 3-sphere and shows that Poincar\u00e9 had failed to account for the effects of\u00a0 torsion, \u201ctwisting\u201d.\u00a0After first moving towards a more combinatorial theory of homology, in which manifolds are assumed to have a polyhedral structure, in his supplements (sometimes referred to by Poincar\u00e9 as complements) Poincar\u00e9 eventually\u00a0revises his homology theory to produce torsion numbers in addition to Betti numbers, proved to be invariant using the so-called\u00a0  Hauptvermutung \u00a0argument\u00a0(any two triangulations of a triangulable space have subdivisions that are combinatorially equivalent), now\u00a0 known to be false. The inclusion strengthened homology theory to be able to distinguish between manifolds undergoing torsion from one another (including\u00a0 RP\u00b3\u00a0and the 3-sphere). Poincar\u00e9 indeed coined the term \u2018torsion\u2019 through a discussion of non-orientable surfaces such as the M\u00f6bius band (Stillwell, 2010).\n In the second supplement paper (1900), Poincar\u00e9\u2019s now more robust homology theorem emboldens him to end his paper with the statement:\n \u201cEach polyhedron which has all its Betti numbers equal to 1 and all its tables Tq orientable is simply connected, i.e. homeomorphic to a hypersphere\u201d\n   A first (and incorrect) Poincar\u00e9 conjecture about the topological properties of three-dimensional bodies undergoing deformation.\n  In terms of 3-manifolds and the later Poincar\u00e9 conjecture, the relevance of the third and fourth supplements (other than expanding on Poincar\u00e9\u2019s homology theory and algebraic topology) is in their study of\u00a0 torus\u00a0  bundles, which are shown to arise naturally in the study of algebraic curves, the focus of the third supplement \u201cOn certain algebraic surfaces\u201d (1902a) (Stillwell, 2010).\n  Poincar\u00e9 published his fifth and final supplement to his 1895 Analysis situs paper in 1904. The paper regards three-dimensional manifolds (such as the glome from our introduction) and is entitled\u00a0 Cinqui\u00e8me compl\u00e9ment \u00e0 l\u2019analysis situs.\u00a0The paper is now known for Poincar\u00e9\u2019s study of whether 3-dimensional manifolds can be described by the same distinguishing feature as 2-dimensional manifolds, namely that every simple closed curve in the sphere can be deformed continuously to a point without leaving the sphere.\u00a0As Poincar\u00e9 himself writes in his introduction:\n \u201cThis time I confine myself to the study of certain three-dimensional manifolds, but the methods used without doubt are of more general applicability. I shall devote cons\n......", "posttime": "2021-08-02 04:56:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5e9e\u52a0\u83b1,conjecture,\u62d3\u6251", "title": "\u89e3\u91ca\u5e9e\u52a0\u83b1\u731c\u60f3", "title_en": "The Poincar\u00e9 Conjecture, Explained", "transed": 1, "url": "https://www.privatdozent.co/p/the-poincare-conjecture", "via": "", "real_tags": ["\u5e9e\u52a0\u83b1", "\u62d3\u6251"]}, {"category": "", "categoryclass": "", "imagename": "d4c4c0b76c87d0416c9ed0a50c44db44.png", "infoid": 1071057, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5c\u4e3a\u4e00\u4e2a\u975e\u8425\u5229\u7ec4\u7ec7\uff0cIEEE \u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u6280\u672f\u4e13\u4e1a\u7ec4\u7ec7\uff0c\u81f4\u529b\u4e8e\u63a8\u8fdb\u6280\u672f\u9020\u798f\u4eba\u7c7b\u3002 \u00a9 \u7248\u6743\u6240\u6709 2021 IEEE - \u4fdd\u7559\u6240\u6709\u6743\u5229\u3002\u4f7f\u7528\u672c\u7f51\u7ad9\u5373\u8868\u793a\u60a8\u540c\u610f\u8fd9\u4e9b\u6761\u6b3e\u548c\u6761\u4ef6\u3002", "note_en": "A not-for-profit organization, IEEE is the world&#39;s largest technical professional organization dedicated to advancing technology for the benefit of humanity. \u00a9 Copyright 2021 IEEE - All rights reserved. Use of this web site signifies your agreement to the terms and conditions.", "posttime": "2021-08-02 04:56:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u8f6f\u4ef6,\u8f6f\u4ef6\u5f00\u53d1,agile,\u7ec4\u7ec7", "title": "\u662f\u4ec0\u4e48\u8ba9\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u53d8\u5f97\u654f\u6377\uff1f", "title_en": "What makes agile software development agile?", "transed": 1, "url": "https://ieeexplore.ieee.org/abstract/document/9496156", "via": "", "real_tags": ["\u5f00\u53d1", "\u8f6f\u4ef6", "\u8f6f\u4ef6\u5f00\u53d1", "agile", "\u7ec4\u7ec7"]}, {"category": "", "categoryclass": "", "imagename": "a7064bbacb16afb267e55eedd1fc2237.jpg", "infoid": 1071055, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u201c\u6211\u4ece\u672a\u89c1\u8fc7\u8fd9\u6837\u7684\u4e8b\u60c5\u201d\uff1a\u8fdc\u7a0b\u5de5\u4f5c\u5982\u4f55\u98a0\u8986\u4e86\u79d1\u6280\u4eba\u624d\u5e02\u573a\u3002\u4eca\u5e74\u590f\u5929\uff0c\u79d1\u6280\u96c7\u4e3b\u4e4b\u95f4\u5f25\u6f2b\u7740\u7edd\u671b\u7684\u6c14\u6c1b\u3002\u8f6f\u4ef6\u4eba\u624d\u7684\u9700\u6c42\u4f3c\u4e4e\u5982\u6b64\u4e4b\u9ad8\uff0c\u4ee5\u81f3\u4e8e\u516c\u53f8\u6b63\u5728\u6539\u53d8\u4ed6\u4eec\u7684\u62db\u8058\u65b9\u5f0f\u3002\u5de5\u4eba\u662f\u62e5\u6709\u6743\u529b\u7684\u4eba\u3002\u4f18\u79c0\u4e14\u7ecf\u9a8c\u4e30\u5bcc\u7684\u79d1\u6280\u5de5\u4f5c\u8005\u88ab\u5f53\u4f5c\u5f53\u5730\u540d\u4eba\u5bf9\u5f85\u2014\u2014\u53d7\u5230\u62db\u8058\u4eba\u5458\u7684\u8ffd\u6367\uff0c\u53d7\u5230\u7ecf\u7406\u7684\u8ffd\u6367\uff0c\u5e76\u5728\u9009\u62e9\u4e0b\u4e00\u4efb\u8001\u677f\u4e4b\u524d\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u9009\u62e9\u3002 \u201c\u8fd9\u8ba9\u4f60\u89c9\u5f97\u81ea\u5df1\u5f88\u4e86\u4e0d\u8d77\uff0c\u800c\u5b9e\u9645\u4e0a......\u4f60\u53ea\u662f\u53e6\u4e00\u4e2a\u6b63\u5728\u5bfb\u627e\u5de5\u4f5c\u7684\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u201d\u4ea8\u5229\u00b7\u5207\u65af\u7eb3\u7279\u8bf4\uff0c\u4ed6\u521a\u521a\u4ece\u65e7\u91d1\u5c71\u642c\u56de\u5723\u5730\u4e9a\u54e5\uff0c\u5728\u5feb\u901f\u53d1\u5c55\u7684\u516c\u53f8\u5de5\u4f5c\u3002\u79d1\u6280\u521d\u521b\u516c\u53f8 Flock Freight\u3002\u5728\u8fc7\u53bb\u5341\u5e74\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0c\u50cf Chesnutt \u8fd9\u6837\u7684\u5de5\u4eba\u7684\u5de5\u4f5c\u524d\u666f\u4e00\u76f4\u5f88\u597d\u3002\u4f46\u73b0\u5728\uff0c\u4e00\u4e9b\u62db\u8058\u4eba\u5458\u8868\u793a\uff0c\u591a\u79cd\u56e0\u7d20\u6b63\u5728\u63a8\u52a8\u4eba\u624d\u7ade\u4e89\u8fbe\u5230\u8fd1 20 \u5e74\u6765\u524d\u6240\u672a\u6709\u7684\u6c34\u5e73\u3002\u79d1\u6280\u5de8\u5934 ServiceNow \u5168\u7403\u4eba\u624d\u526f\u603b\u88c1\u5409\u59c6\u00b7\u5df4\u6258\u6d1b\u6885\u4e9a (Jim Bartolomea) \u8868\u793a\uff1a\u201c\u8fd9\u662f\u6211\u804c\u4e1a\u751f\u6daf\u4e2d\u7ade\u4e89\u6700\u6fc0\u70c8\u7684\u5e02\u573a\uff0c\u5f88\u591a\u4eba\u5c06\u5176\u4e0e 90 \u5e74\u4ee3\u540e\u671f\u7684\u4e92\u8054\u7f51\u5e02\u573a\u8fdb\u884c\u6bd4\u8f83\u3002\u201d\u5723\u5730\u4e9a\u54e5\u7684\u5927\u91cf\u8f6f\u4ef6\u4eba\u624d\u3002\u6839\u636e IT \u8d38\u6613\u7ec4\u7ec7 CompTIA \u7684\u6570\u636e\uff0c\u4e0a\u4e2a\u6708\uff0c\u96c7\u4e3b\u4e3a IT \u5458\u5de5\u53d1\u5e03\u4e86\u8d85\u8fc7 365,000 \u4e2a\u804c\u4f4d\u7a7a\u7f3a\uff0c\u8fd9\u662f\u81ea 2019 \u5e74 9 \u6708\u4ee5\u6765\u7684\u6700\u9ad8\u6708\u5ea6\u603b\u6570\u3002\u9700\u6c42\u6700\u9ad8\u7684\u804c\u4f4d\u5305\u62ec\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u3001IT \u652f\u6301\u4e13\u5bb6\u3001\u7cfb\u7edf\u5de5\u7a0b\u5e08\u548c\u67b6\u6784\u5e08\u3002\n\u9700\u6c42\u5f52\u56e0\u4e8e\u5404\u79cd\u5404\u6837\u7684\u4e8b\u60c5\u3002\u5728\u5927\u6d41\u884c\u671f\u95f4\uff0c\u5728\u91c7\u7528\u4f01\u4e1a\u8f6f\u4ef6\u65b9\u9762\u8fdb\u5c55\u7f13\u6162\u7684\u4f01\u4e1a\u5f00\u59cb\u8fc5\u901f\u8fce\u5934\u8d76\u4e0a\u3002\u751f\u4ea7\u529b\u8f6f\u4ef6\u3001\u4f1a\u8bae\u548c\u534f\u4f5c\u5de5\u5177\u4ee5\u53ca\u7535\u5b50\u5546\u52a1\u6280\u672f\u7684\u6d6a\u6f6e\u5e2d\u5377\u5168\u7403\u3002\u6d88\u8d39\u6280\u672f\u4e5f\u662f\u5982\u6b64\uff0c\u89c6\u9891\u6e38\u620f\u5f00\u53d1\u3001\u5a31\u4e50\u6280\u672f\u548c\u793e\u4ea4\u5e73\u53f0\u84ec\u52c3\u53d1\u5c55\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u8fdc\u7a0b\u5de5\u4f5c\u6210\u4e3a\u79d1\u6280\u884c\u4e1a\u7684\u73b0\u72b6\u3002\u7a81\u7136\u4e4b\u95f4\uff0c\u8f6f\u4ef6\u4eba\u624d\u53ef\u4ee5\u4ece\u5927\u91cf\u7684\u5de5\u4f5c\u673a\u4f1a\u4e2d\u6311\u9009\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u73b0\u6709\u4eba\u624d\u5f00\u59cb\u6d41\u5931\u3002\u6839\u636e Robert Half International \u6700\u8fd1\u7684\u4e00\u9879\u8c03\u67e5\uff0c\u5728 2,800 \u591a\u540d IT \u4e13\u4e1a\u4eba\u58eb\u4e2d\uff0c\u5927\u7ea6\u6709\u4e09\u5206\u4e4b\u4e00\u8868\u793a\u4ed6\u4eec\u8ba1\u5212\u5728\u672a\u6765\u51e0\u4e2a\u6708\u5185\u5bfb\u627e\u65b0\u5de5\u4f5c\u3002\u79d1\u6280\u516c\u53f8 Trust &amp; Will \u7684\u9996\u5e2d\u540e\u7aef\u5f00\u53d1\u4eba\u5458\u4e9a\u4f26\u00b7\u5df4\u585e\u6d1b\u7f2a (Aaron Bartholomew) \u521a\u521a\u5b8c\u6210\u4e86\u4e3a\u671f\u4e24\u4e2a\u6708\u7684\u6c42\u804c\uff0c\u5728\u6b64\u671f\u95f4\u4ed6\u638c\u63e1\u4e86\u96c7\u4e3b-\u5de5\u4eba\u4ea4\u6362\u7684\u6743\u529b\u3002 \u201c\u6211\u5f88\u5feb\u610f\u8bc6\u5230\u6211\u5360\u4e86\u4e0a\u98ce\uff0c\u201d\u5df4\u585e\u6d1b\u7f2a\u8bf4\u3002 \u201c\u6240\u6709\u8fd9\u4e9b\u516c\u53f8\u90fd\u4ee5\u60ca\u4eba\u7684\u901f\u5ea6\u8bd5\u56fe\u63a5\u8fd1\u6211\u3002\u201d\u8f6f\u4ef6\u9762\u8bd5\u4ee5\u6d89\u53ca\u903b\u8f91\u3001\u8bbe\u8ba1\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u77e5\u8bc6\u6d4b\u8bd5\u7684\u7f13\u6162\u3001\u75db\u82e6\u7684\u8fc7\u7a0b\u800c\u95fb\u540d\u3002\u51e0\u5e74\u524d\uff0cChesnutt \u5728\u63a5\u53d7 YouTube \u91c7\u8bbf\u65f6\u8fde\u7eed\u4e94\u4e2a\u5c0f\u65f6\u63a5\u53d7\u4e86\u7b97\u6cd5\u6d4b\u8bd5\u3002\u4f46\u73b0\u5728\uff0c\u8fd9\u4e9b\u6280\u672f\u9762\u8bd5\u5f80\u5f80\u88ab\u653e\u5f03\uff0c\u5207\u65af\u7eb3\u7279\u548c\u5df4\u585e\u6d1b\u7f2a\u8bf4\uff0c\u4ed6\u4eec\u90fd\u7ecf\u5386\u4e86\u8fd9\u4e00\u6b65\uff0c\u56e0\u4e3a\u7d27\u6025\u60c5\u51b5\u800c\u653e\u5f03\u4e86\u3002\u62db\u8058\u4eba\u5458\u8d8a\u6765\u8d8a\u591a\u5730\u4f7f\u7528 Chesnutt \u773c\u4e2d\u7684\u538b\u529b\u7b56\u7565\uff0c\u4f8b\u5982\u201c\u7206\u70b8\u6027offer\u201d\uff0c\u5982\u679c\u5de5\u7a0b\u5e08\u6ca1\u6709\u53ca\u65f6\u63a5\u53d7\uff0c\u8fd9\u79cd\u5de5\u4f5c\u673a\u4f1a\u4f1a\u5728\u8bbe\u5b9a\u7684\u65e5\u671f\u548c\u65f6\u95f4\u81ea\u7206\u3002\nChesnutt \u8bf4\uff1a\u201c\u4ed6\u4eec\u4f1a\u5c3d\u5feb\u50ac\u4fc3\u4f60\u5b8c\u6210\u6574\u4e2a\u8fc7\u7a0b\uff0c\u5e76\u8ba9\u4f60\u5728\u5f53\u5929\u4e0e\u4f60\u901a\u7535\u8bdd\u65f6\u7b7e\u5b57\u3002\u201d\u8d5b\u666e\u62c9\u65af\u7684\u6280\u672f\u62db\u8058\u4eba\u5458\u517c\u8463\u4e8b\u603b\u7ecf\u7406\u5e03\u96f7\u7279\u00b7\u97e6\u6069 (Brett Wayne) \u8868\u793a\uff0c\u7ade\u4e89\u538b\u529b\u4e0e\u4ed6 13 \u5e74\u7684\u62db\u8058\u804c\u4e1a\u751f\u6daf\u4e2d\u6240\u89c1\u8fc7\u7684\u4e0d\u540c\u3002\u4ed6\u5c06\u5176\u6bd4\u4f5c\u623f\u5730\u4ea7\u5e02\u573a\u6b63\u5728\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5c31\u50cf\u591a\u6b21\u51fa\u4ef7\u7684\u70ed\u95e8\u623f\u4ea7\u4e00\u6837\uff0cChesnutt \u4ee5\u56db\u4efd\u5de5\u4f5c\u673a\u4f1a\u7ed3\u675f\u4e86\u4ed6\u7684\u6c42\u804c\u3002\u4e3a\u4e86\u8d62\u5f97\u8d28\u91cf\u5de5\u7a0b\u5e08\u7684\u7ade\u6807\uff0c\u516c\u53f8\u63d0\u4f9b\u4e86\u8bf8\u5982\u7075\u6d3b\u5de5\u4f5c\u65f6\u95f4\u3001\u7b7e\u5230\u5956\u91d1\u548c\u6c38\u4e45\u8fdc\u7a0b\u5de5\u4f5c\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u5176\u4e2d\u6700\u540e\u4e00\u9879\u5df2\u6210\u4e3a\u5927\u591a\u6570\u52b3\u52a8\u529b\u7684\u8981\u6c42\u3002 Dice \u662f\u4e00\u5bb6\u4e13\u6ce8\u4e8e\u6280\u672f\u4eba\u624d\u7684\u7f51\u7ad9\u548c\u4eba\u529b\u8d44\u6e90\u516c\u53f8\uff0c\u5b83\u5728 6 \u6708\u4efd\u53d1\u5e03\u4e86\u4e00\u4efd\u62a5\u544a\uff0c\u53d1\u73b0\u53ea\u6709 17% \u7684\u6280\u672f\u4eba\u5458\u5e0c\u671b\u5728\u529e\u516c\u5ba4\u5168\u804c\u5de5\u4f5c\uff0c\u800c 59% \u7684\u4eba\u5e0c\u671b\u91c7\u7528\u8fdc\u7a0b\u548c\u6df7\u5408\u65b9\u6cd5\u3002\u97e6\u6069\u8bf4\uff0c\u4ed6\u89c2\u5bdf\u5230\u516c\u53f8\u4e0d\u63d0\u4f9b\u8fdc\u7a0b\u9009\u9879\uff0c\u4ece\u800c\u4f7f\u672c\u5df2\u6e3a\u832b\u7684\u5019\u9009\u4eba\u5e93\u66f4\u52a0\u6e3a\u832b\u3002 \u201c\u5982\u679c 18 \u4e2a\u6708\u524d\u62db\u8058\u4eba\u624d\u5f88\u56f0\u96be\u2014\u2014\u73b0\u5728\u4f60\u628a\u4f60\u60f3\u8981\u7684\u56e2\u961f\u51cf\u534a\u2014\u2014\u8fd9\u5bf9\u4f60\u6765\u8bf4\u771f\u7684\u5f88\u96be\uff0c\u201d\u97e6\u6069\u8bf4\u3002 Bartholomew \u8bf4\uff0c\u4ed6\u76ee\u7779\u4e86\u5927\u91cf\u5f00\u53d1\u5546\u4ece\u57ce\u5e02\u5730\u533a\u8fc1\u79fb\u5230\u5723\u5730\u4e9a\u54e5\u6216\u5176\u4ed6\u57ce\u5e02\u4ee5\u5916\u7684\u5730\u65b9\u8fdb\u884c\u8fdc\u7a0b\u5de5\u4f5c\u3002\n\u201c\u6211\u7684\u540c\u9f84\u4eba\u4e2d\u6709\u5927\u7ea6 50% \u7684\u4eba\u5df2\u7ecf\u642c\u5bb6\u4e86\uff0c\u201d\u5df4\u585e\u6d1b\u7f2a\u8bf4\u3002 \u201c\u9002\u5e94\u7684\u516c\u53f8\u5c06\u83b7\u5f97\u5927\u90e8\u5206\u4eba\u624d\u5e93\u3002\u201d\u7136\u800c\uff0c\u6839\u636e Dice \u7684\u62a5\u544a\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e25\u683c\u7684\u8fdc\u7a0b\u5de5\u4f5c\uff0c\u8fd9\u4f3c\u4e4e\u5bf9\u5927\u591a\u6570\u5de5\u7a0b\u5e08\u6709\u5438\u5f15\u529b\u3002\u66f4\u591a\u7684\u662f\u9009\u62e9\u7684\u7075\u6d3b\u6027\u3002 Dice \u9996\u5e2d\u6267\u884c\u5b98 Art Zeile \u8868\u793a\uff1a\u201c\u867d\u7136\u8bb8\u591a\u6280\u672f\u4eba\u5458\u4ecd\u7136\u66f4\u613f\u610f 100% \u8fdc\u7a0b\u5de5\u4f5c\uff0c\u4f46\u4eba\u4eec\u540c\u6837\u5e0c\u671b\u91c7\u7528\u6df7\u5408\u65b9\u6cd5\uff0c\u800c\u4e14\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u770b\u5230\uff0c\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u4e2d\uff0c\u6bcf\u5468\u66f4\u5c11\u7684\u8fdc\u7a0b\u5de5\u4f5c\u5929\u6570\u53d8\u5f97\u8d8a\u6765\u8d8a\u53d7\u6b22\u8fce\u3002\u201d \uff0c\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u3002 \u201c\u6210\u529f\u5438\u5f15\u548c\u7559\u4f4f\u9876\u5c16\u4eba\u624d\u7684\u516c\u53f8\u5c06\u662f\u90a3\u4e9b\u82b1\u65f6\u95f4\u5efa\u7acb\u654f\u6377\u65b9\u6cd5\u7684\u516c\u53f8\uff0c\u8be5\u65b9\u6cd5\u4e3a\u6280\u672f\u4eba\u5458\u63d0\u4f9b\u7075\u6d3b\u6027\u5e76\u63a7\u5236\u4ed6\u4eec\u7684\u5de5\u4f5c\u73af\u5883\u3002\u201d\u7f8e\u56fd\u6280\u672f\u4eba\u5458\u7684\u5de5\u8d44\u4e5f\u5728\u4e0a\u6da8\u3002\u6700\u8fd1\u7684\u4e00\u4efd Dice \u62a5\u544a\u53d1\u73b0\uff0c\u4ece 2019 \u5e74\u672b\u5230 2020 \u5e74\u672b\uff0c\u79d1\u6280\u5de5\u4f5c\u7684\u5e73\u5747\u5de5\u8d44\u589e\u957f\u4e86 3.6%\u3002\u8fd9\u542c\u8d77\u6765\u53ef\u80fd\u4e0d\u591a\uff0c\u4f46\u4e0e 2017\u30012018 \u548c 2019 \u5e74\u76f8\u6bd4\uff0c\u8fd9\u662f\u4e00\u4e2a\u663e\u7740\u7684\u589e\u957f\uff0c\u540e\u8005\u7684\u5e74\u589e\u957f\u7387\u8f83\u4f4e\u6bd4\u767e\u5206\u4e4b\u4e00\u3002\u6839\u636e\u4eba\u529b\u8d44\u6e90\u5de8\u5934\u4e07\u5b9d\u76db\u534e\u96c6\u56e2 (ManpowerGroup) 6 \u6708\u4efd\u53d1\u5e03\u7684\u4e00\u9879\u5c31\u4e1a\u524d\u666f\u8c03\u67e5\uff0c\u7f8e\u56fd\u6240\u6709\u884c\u4e1a\u7684\u96c7\u4e3b\u2014\u2014\u4e0d\u4ec5\u4ec5\u662f\u79d1\u6280\u884c\u4e1a\u2014\u2014\u90fd\u62a5\u544a\u4e86\u81ea 2000 \u5e74\u4ee5\u6765\u6700\u5f3a\u52b2\u7684\u62db\u8058\u524d\u666f\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u5de5\u4eba\u7684\u5e02\u573a\uff0c\u5458\u5de5\u5728\u5de5\u4f5c\u4e2d\u8868\u73b0\u5f97\u50cf\u6d88\u8d39\u8005\u4e00\u6837\u2014\u2014\u5bfb\u6c42\u7075\u6d3b\u6027\u3001\u6709\u7ade\u4e89\u529b\u7684\u85aa\u916c\u548c\u5feb\u901f\u51b3\u7b56\uff0c\u201d\u4e07\u5b9d\u76db\u534e\u96c6\u56e2\u5317\u7f8e\u603b\u88c1\u8d1d\u57fa\u5f17\u5170\u514b\u7ef4\u5947\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\u3002 \u201c\u73b0\u5728\u662f\u96c7\u4e3b\u53d1\u6325\u521b\u9020\u529b\u6765\u5438\u5f15\u4eba\u624d\u5e76\u7528\u53cc\u624b\u7559\u4f4f\u5458\u5de5\u7684\u65f6\u5019\u4e86\u3002\u201d", "note_en": "\u2018I\u2019ve never seen anything like it\u2019: How remote work has upended the tech talent market.\n    There\u2019s an air of desperation among tech employers this summer. Software talent, it seems, is in such high demand that companies are morphing how they hire. And workers are the ones with the power.\n Good and experienced tech workers are being treated like local celebrities \u2014 hounded by recruiters, courted by managers, and bestowed a bevy of options before choosing their next boss.\n \u201cIt makes you feel like you\u2019re amazing, when really ... you\u2019re just another software engineer that\u2019s looking for a job,\u201d said Henry Chesnutt, who just moved back to San Diego from San Francisco to work at the rapidly growing tech startup Flock Freight.\n The job outlook for workers like Chesnutt has been good for much of the past decade. But now, a multitude of factors is driving competition for talent to a level not seen in nearly 20 years, some recruiters say.\n  \u201cThis is the most competitive market I can remember in my professional career, with many people comparing it to the dot-com market of the late \u201890s,\u201d said Jim Bartolomea, vice president of Global Talent at tech titan ServiceNow, which employs a huge chunk of the software talent in San Diego.\n Last month, employers posted more than 365,000 job openings for IT workers, the highest monthly total since September 2019, according to IT trade group CompTIA. The positions highest in demand include software developers, IT support specialists, systems engineers and architects.\n  The demand has been attributed to all sorts of things. During the pandemic, businesses that had been slow to adopt enterprise software began rapidly catching up. A tidal wave of productivity software, conferencing and collaboration tools, and e-commerce tech flooded the world. The same was true for consumer tech, with video game development, entertainment tech and social platforms booming.\n   Simultaneously, remote work became the status quo in the tech industry. Suddenly, software talent could pick and choose from a massive pool of job opportunities. All while existing talent is beginning to stray.\n Roughly a third of more than 2,800 IT professionals said they plan to look for a new job in the next few months, according to a recent Robert Half International survey.\n Aaron Bartholomew, a lead backend developer at tech company Trust &amp; Will, just went through a two-month job search in which he held the power in the employer-worker exchange.\n  \u201cI realized pretty quick that I was the one with the upper hand,\u201d Bartholomew said. \u201cAll these companies were moving incredibly fast to try and close on me.\u201d\n Software interviews have a reputation for being slow, painful processes that involve tests of logic, design and computer science knowledge. Years ago, Chesnutt was tested for five straight hours on algorithms during an interview with YouTube.\n But now, these technical interviews are often being waived, said Chesnutt and Bartholomew, who both experienced this step dropped for the sake of urgency. Recruiters are increasingly using what Chesnutt sees as pressure tactics, such as \u201cexploding offers,\u201d which are job offers that self-detonate at a set date and time if engineers don\u2019t accept them soon enough.\n \u201cThey\u2019ll try to rush you through the process as soon as possible, and get you to sign that day while they\u2019re on the phone with you,\u201d Chesnutt said.\n  Brett Wayne, a tech recruiter and managing director at Cypress, said the competitive pressure is unlike anything he\u2019s seen in his 13-year career in recruiting. He likened it to what\u2019s happening in the real estate market.\n Just like a hot property with multiple bids, Chesnutt ended his job hunt with four employment offers.\n To win a bid on a quality engineer, companies are offering things like flexible hours, sign-on bonuses, and permanent remote work, the last of which has become a requirement for much of the workforce. Dice, a website and staffing firm that focuses on tech talent, published  a report in June that found only 17% of technologists wanted to work in an office full time, while 59% wanted remote and hybrid approaches.\n    Wayne said he\u2019s observed companies shoot themselves in the foot by not offering remote options, making an already slim candidate pool even slimmer.\n \u201cIf it was hard to hire talent 18 months ago \u2014 and now you cut the group you\u2019re going for in half \u2014 it\u2019s going to be really tough for you,\u201d Wayne said.\n Bartholomew said he\u2019s watched a great migration of developers out of urban areas, riding remote work out of San Diego or other cities.\n \u201cLiterally about 50% of my peer group has moved,\u201d Bartholomew said. \u201cCompanies that adapt will get the majority of the talent pool.\u201d\n  It\u2019s not strict remote work, however, that seems to be appealing to the majority of engineers, according to the Dice report. It\u2019s more about flexibility to choose.\n \u201cWhile many technologists would still prefer to work 100% remotely, there is an equal desire for a hybrid approach, and we\u2019ve actually seen fewer remote days per week become more desirable over the past year,\u201d said Art Zeile, CEO of Dice, in a statement. \u201cThe companies who succeed in attracting and retaining top talent will be those who take the time to build an agile approach that gives technologists flexibility and control over their work environment.\u201d\n U.S. tech salaries are also on the rise. A recent  Dice report found tech jobs saw an average salary increase of 3.6% between late 2019 and late 2020. That might not sound like much, but it\u2019s a significant jump when compared with 2017, 2018 and 2019, which saw an annual increase of less than a percent.\n  U.S. employers across all industries \u2014 not just tech \u2014 reported their strongest hiring outlook since 2000, according to an  employment outlook survey published by staffing giant ManpowerGroup in June.\n \u201cIt\u2019s a worker\u2019s market, and employees are acting like consumers in how they are consuming work \u2014 seeking flexibility, competitive pay and fast decisions,\u201d said Becky Frankiewicz, ManpowerGroup president, North America, in a statement. \u201cNow is the time for employers to get creative to attract talent \u2014 and to hold onto the workers they have with both hands.\u201d", "posttime": "2021-08-02 04:55:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5c31\u4e1a,bow", "title": "\u81ea\u4e92\u8054\u7f51\u65f6\u4ee3\u4ee5\u6765\u6700\u70ed\u95e8\u7684\u5c31\u4e1a\u5e02\u573a\u4e2d\uff0c\u96c7\u4e3b\u5411\u79d1\u6280\u5de5\u4f5c\u8005\u97a0\u8eac", "title_en": "Employers bow to tech workers in hottest job market since the dot-com era", "transed": 1, "url": "https://www.latimes.com/business/story/2021-07-31/employers-bow-down-to-tech-workers-in-hottest-job-market", "via": "", "real_tags": ["\u5c31\u4e1a", "bow"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071054, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5b9a\u4e49 \u8fc7\u5ea6\u5de5\u7a0b\uff1a\u8fc7\u65e9\u5730\u4f7f\u7528\u5de5\u5177\u3001\u62bd\u8c61\u6216\u6280\u672f\u89e3\u51b3\u65b9\u6848\uff0c\u5bfc\u81f4\u6d6a\u8d39\u7cbe\u529b\u548c\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027\u3002\u4ec0\u4e48\u65f6\u5019\u8fc7\u65e9\u4f7f\u7528\u6280\u672f\uff1f\u5f53\u5b83\u4e0d\u80fd\u89e3\u51b3\u5177\u4f53\u7684\u5f53\u524d\u95ee\u9898\u65f6\u3002\u4ece\u7b80\u5355\u6216\u6613\u4e8e\u5f00\u53d1\u7684\u89d2\u5ea6\u6765\u5b9a\u4e49\u4f18\u79c0\u7684\u5de5\u7a0b\u662f\u5f88\u8bf1\u4eba\u7684\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6ed1\u5761\u3002\u7b80\u5355\u5bf9\u4e0d\u540c\u7684\u4eba\u610f\u5473\u7740\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u4eba\u4eec\u53ef\u4ee5\u5c06\u7f16\u7a0b\u89c6\u4e3a\u538b\u7f29\uff08\u786e\u5b9e\u5982\u6b64\uff09\uff0c\u4f46\u6211\u4eec\u5fc5\u987b\u610f\u8bc6\u5230\u538b\u7f29\u6216\u7b80\u6d01\u672c\u8eab\u5e76\u4e0d\u662f\u76ee\u6807\u3002\u5c3d\u53ef\u80fd\u77ed\u7684\u7a0b\u5e8f\u5bf9\u4e8e\u4eba\u4eec\u6765\u8bf4\u901a\u5e38\u4e0d\u662f\u6700\u7b80\u5355\u7684\uff0c\u538b\u7f29\u7684\u5371\u9669\u5bf9\u4e8e\u4efb\u4f55\u5fc5\u987b\u63a5\u53d7\u8fc7\u79d1\u5b66\u6559\u80b2\u7684\u4eba\u6765\u8bf4\u90fd\u662f\u663e\u800c\u6613\u89c1\u7684\uff1a\u5f53\u6211\u5728\u5927\u5b66\u65f6\uff0c\u8fc4\u4eca\u4e3a\u6b62\u6700\u56f0\u96be\u7684\u8003\u8bd5\u968f\u4e4b\u800c\u6765\u6700\u5c0f\u7684\u6559\u79d1\u4e66\u2026\u2026\u5bf9\u4e0d\u540c\u7684\u4eba\u6765\u8bf4\uff0c\u7b80\u5355\u4e5f\u610f\u5473\u7740\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u5bf9\u4e8e\u8d1f\u8d23\u4f4e\u7ea7\u4f18\u5316\u7684\u4eba\u6765\u8bf4\uff0c\u4f7f\u7528\u8f83\u5c11\u7684\u62bd\u8c61\u6bd4\u6df1\u5165\u7814\u7a76\u8bb8\u591a\u8f6f\u4ef6\u5c42\u66f4\u5bb9\u6613\u3002\u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u9488\u5bf9\u7ed9\u5b9a\u8bed\u8a00\u4ee5\u66f4\u60ef\u7528\u7684\u65b9\u5f0f\u7f16\u5199\u7684\u8f6f\u4ef6\u53ef\u80fd\u6bd4\u9002\u5e94\u7279\u5b9a\u9886\u57df\u7684\u8f6f\u4ef6\u5bb9\u6613\u5f97\u591a\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u95ee\u9898\u662f\u53ef\u8861\u91cf\u7684\u3001\u5177\u4f53\u7684\u95ee\u9898\uff0c\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u6846\u67b6\u3002\u5b83\u4eec\u4ecd\u7136\u662f\u4e00\u4e2a\u8f6f\u7684\u3001\u4f9d\u8d56\u4e8e\u4e0a\u4e0b\u6587\u548c\u4f9d\u8d56\u4e8e\u56e2\u961f\u7684\u6307\u6807\uff0c\u4f46\u8bd5\u56fe\u786e\u5b9a\u95ee\u9898\u3001\u89e3\u51b3\u65b9\u6848\u548c\u5b83\u4eec\u7684\u6210\u672c\u4f1a\u4f7f\u8bbe\u8ba1\u51b3\u7b56\u4ece\u7f8e\u5b66\uff08\u901a\u5e38\u4ee5\u81ea\u6211\u4e3a\u4e2d\u5fc3\uff09\u9886\u57df\u8f6c\u53d8\u4e3a\u5177\u4f53\u9886\u57df\u3002\u6ce8\u610f\uff1a\u8fd9\u5e76\u4e0d\u610f\u5473\u7740\u597d\u7684\u4ee3\u7801\u4e0d\u662f\u6216\u4e0d\u5e94\u8be5\u662f\u201c\u7f8e\u4e3d\u7684\u201d\u6216\u4f18\u96c5\u7684\uff0c\u4f46\u8fd9\u4e9b\u4e0d\u662f\u76ee\u6807\uff0c\u5b83\u4eec\u53ea\u662f\u89e3\u51b3\u4ee3\u7801\u53ef\u80fd\u5b58\u5728\u7684\u67d0\u4e9b\u95ee\u9898\u7684\u526f\u4ea7\u54c1\u3002\u6b64\u5916\uff0c\u201c\u53ef\u8861\u91cf\u201d\u5e76\u4e0d\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u5728\u8bc4\u4f30\u4e2d\u9644\u4e0a\u7cbe\u786e\u7684\u6570\u5b57\uff0c\u5728\u5b9e\u8df5\u4e2d\uff0c\u5927\u591a\u6570\u4e8b\u60c5\u90fd\u4e0d\u4f1a\u6bd4\u6a21\u7cca\u731c\u6d4b\u66f4\u597d\uff0c\u8fd9\u5b8c\u5168\u6ca1\u95ee\u9898\u3002\u6210\u672c\u548c\u6536\u76ca \u5f88\u5c11\u8ba8\u8bba\u6210\u672c\u3002\u5982\u679c\u4e00\u9879\u6280\u672f\u3001\u4e00\u4e2a\u62bd\u8c61\u3001\u4e00\u4e2a\u5de5\u7a0b\u89e3\u51b3\u65b9\u6848\u6ca1\u6709\u7f3a\u70b9\uff0c\u90a3\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u6ca1\u6709\u505a\u592a\u591a\uff0c\u6216\u8005\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u8db3\u591f\u52aa\u529b\u5730\u5bfb\u627e\u3002\u6211\u4eec\u662f\u5426\u5f3a\u52a0\u4e86\u8fd0\u884c\u65f6\u6210\u672c\uff1f\u8c03\u8bd5\u7248\u672c\u5462\uff1f\u6211\u4eec\u8ba9\u5b83\u53d8\u5f97\u4e0d\u90a3\u4e48\u6709\u7528\u4e86\u5417\uff1f\u6211\u4eec\u7684\u5de5\u5177\u662f\u5426\u5f88\u597d\u5730\u652f\u6301\u8bbe\u8ba1\uff1f\u6211\u4eec\u662f\u5426\u641e\u7838\u4e86\u6211\u4eec\u7684\u6e90\u4ee3\u7801\u63a7\u5236\u3001\u9759\u6001\u5206\u6790\u5668\u7b49\u7b49\uff1f\u964d\u4f4e\u5bf9\u4ee3\u7801\u8fdb\u884c\u672c\u5730\u63a8\u7406\u7684\u80fd\u529b\uff1f\u5c06\u6211\u4eec\u4e0a\u4e0b\u6587\u4e2d\u91cd\u8981\u7684\u7ec6\u8282\u9690\u85cf\u5728\u547c\u53eb\u7ad9\u70b9\uff1f\u4f7f\u8bed\u4e49\u4e0d\u90a3\u4e48\u660e\u786e\uff0c\u6216\u8005\u51cf\u5c11\u4e0e\u7ed9\u5b9a\u8bed\u6cd5\u7684\u8026\u5408\uff1f\u8fdd\u53cd\u4e86\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u901a\u5e38\u91c7\u7528\u7684\u4e0d\u53d8\u91cf\u548c\u5047\u8bbe\uff1f\u5b83\u662f\u5426\u4e0e\u56e2\u961f\u6587\u5316\u914d\u5408\u5f97\u5f88\u597d\uff1f\u901a\u8fc7\u4ee3\u7801\u5ba1\u67e5\u6216\u81ea\u52a8\u5316\u6d4b\u8bd5\u6216\u56e2\u961f\u7684\u4efb\u4f55\u5176\u4ed6\u5de5\u7a0b\u5b9e\u8df5\uff1f\u6211\u4eec\u5fc5\u987b\u610f\u8bc6\u5230\u8ba8\u8bba\u6295\u8d44\u7684\u6743\u8861\u3002\u4f46\u662f\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u5c55\u793a\u6211\u4eec\u7684\u60f3\u6cd5\u7684\u597d\u5904\u5e76\u9690\u85cf\u6210\u672c\uff0c\u8fd9\u5728\u6559\u80b2\u3001\u7814\u7a76\u548c\u751f\u4ea7\u4e2d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u95ee\u9898\u3002\u8fd9\u662f\u6211\u4eec\u5de5\u4f5c\u65b9\u5f0f\u7684\u786c\u8fde\u7ebf\u3002\u8fd9\uff08\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff09\u751a\u81f3\u4e0d\u662f\u6076\u610f\u7684\u95ee\u9898\uff0c\u8fd9\u53ea\u662f\u6211\u4eec\u8bad\u7ec3\u6709\u7d20\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u5bfb\u6c42\u6210\u529f\u5e76\u56de\u907f\u8ba8\u8bba\u5931\u8d25\u3002\u6211\u89c1\u8fc7\u65e0\u6570\u6b21\u4eba\u4eec\u8d70\u4e0a\u821e\u53f0\uff0c\u6216\u8005\u5199\u6587\u7ae0\u548c\u4e66\uff0c\u8bda\u5b9e\u5730\u8bd5\u56fe\u63cf\u8ff0\u4e3a\u4ec0\u4e48\u7ed9\u5b9a\u7684\u60f3\u6cd5\u662f\u806a\u660e\u7684\u5e76\u4e14\u53ef\u4ee5\u5de5\u4f5c\uff0c\u540c\u65f6\u5b8c\u5168\u5fd8\u8bb0\u4ed6\u4eec\u6bcf\u5929\u7ecf\u5386\u7684\u75db\u82e6\u3002\u5de5\u7a0b\u4e0d\u8db3 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fc7\u5ea6\u5de5\u7a0b\u624d\u662f\u4e07\u6076\u4e4b\u6e90\u7684\u539f\u56e0\u3002\u56e0\u4e3a\u5b83\u662f\u6076\u6bd2\u7684\uff0c\u5b83\u662f\u9634\u9669\u7684\uff0c\u6211\u4eec\u6839\u672c\u6ca1\u6709\u53d7\u8fc7\u8bc6\u522b\u5b83\u7684\u8bad\u7ec3\u3002\u53ef\u4ee5\u51fa\u53bb\u4e70\u6280\u672f\u4e66\u7c4d\uff0c\u4e5f\u53ef\u4ee5\u4e0a\u5927\u5b66\uff0c\u5b66\u4e60\u6570\u5341\u6216\u6570\u767e\u79cd\u5de5\u7a0b\u6280\u672f\u548c\u6700\u4f73\u5b9e\u8df5\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u9664\u4e86\u7ecf\u9a8c\u548c\u5b9e\u8df5\u4e4b\u5916\uff0c\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u53ef\u4ee5\u6559\u4f1a\u6211\u4eec\u514b\u5236\u548c\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\u3002\u6211\u4eec\u77e5\u9053\u4ec0\u4e48\u662f\u5de5\u7a0b\u4e0d\u8db3\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc6\u522b\u91cd\u590d\u7684\u4ee3\u7801\u3001\u8106\u5f31\u7684\u3001\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u3001\u7ed3\u6784\u4e0d\u826f\u7684\u4ee3\u7801\u3002\u6211\u4eec\u6709\u672f\u8bed\uff0c\u6211\u4eec\u6709\u65b9\u6cd5\u8bba\u3002\u6d4b\u8bd5\u3001\u91cd\u6784\u3001\u8986\u76d6\u7387\u5206\u6790\u2026\u2026\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6839\u672c\u6ca1\u6709\u63a5\u53d7\u8fc7\u7406\u89e3\u8fc7\u5ea6\u5de5\u7a0b\u7684\u57f9\u8bad\u3002\u6ce8\u610f\uff1a\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4f18\u79c0\u7684\u521d\u7ea7\u5019\u9009\u4eba\u4e2d\uff0c\u8fc7\u5ea6\u8bbe\u8ba1\u901a\u5e38\u66f4\u201c\u660e\u663e\u201d\uff0c\u4ed6\u4eec\u7684\u597d\u5947\u5fc3\u4f7f\u4ed6\u4eec\u5b66\u4e60\u4e86\u8bb8\u591a\u7f16\u7a0b\u6280\u672f\uff0c\u4f46\u4ed6\u4eec\u5bf9\u9677\u9631\u6ca1\u6709\u7ecf\u9a8c\uff0c\u5f88\u5bb9\u6613\u504f\u79bb\u5177\u4f53\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6848\u3002\u8fd9\u610f\u5473\u7740\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fc7\u5ea6\u5de5\u7a0b\u53d1\u751f\u65f6\u5b83\u5f80\u5f80\u4f1a\u6301\u7eed\u5b58\u5728\uff0c\u6211\u4eec\u4e0d\u4f1a\u4ece\u5927\u67b6\u6784\u548c\u5927\u62bd\u8c61\u56de\u5230\u66f4\u7b80\u5355\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u5728\u5b83\u4eec\u4e4b\u4e0a\u6784\u5efa\u3002\u5728\u8def\u4e0a\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u6211\u4eec\u505a\u4e86\u9519\u8bef\u7684\u6295\u8d44\uff0c\u505a\u51fa\u4e86\u9519\u8bef\u7684\u6743\u8861\uff0c\u4f46\u73b0\u5728\u6211\u4eec\u81f4\u529b\u4e8e\u5b83\u3002\u8fc7\u5ea6\u5de5\u7a0b\u5f80\u5f80\u770b\u8d77\u6765\u6bd4\u5de5\u7a0b\u4e0d\u8db3\u66f4\u5408\u7406\u3001\u66f4\u65e0\u8f9c\u3002\u8fd9\u4e0d\u662f\u574f\u4ee3\u7801\u3002\u8fd9\u4e0d\u662f\u4e11\u964b\u7684\u4ee3\u7801\u3002\u5b83\u53ea\u662f\u4e3a\u65f6\u8fc7\u65e9\u548c\u65e0\u7528\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5b83\uff0c\u6211\u4eec\u4e3a\u6b64\u4ed8\u51fa\u4e86\u9ad8\u6602\u7684\u4ee3\u4ef7\uff0c\u4f46\u6211\u4eec\u559c\u6b22\u5b83\u3002\u6211\u4eec\u559c\u6b22\u6280\u672f\uff0c\u6211\u4eec\u559c\u6b22\u9605\u8bfb\u5b83\uff0c\u8ba9\u81ea\u5df1\u4fdd\u6301\u6700\u65b0\u72b6\u6001\uff0c\u91c7\u7528\u6700\u65b0\u7684\u6280\u672f\u548c\u53d1\u5c55\u3002\u5728\u67d0\u4e2a\u7279\u5b9a\u70b9\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u80fd\u5f00\u59cb\u8ba4\u4e3a\u6211\u4eec\u786e\u5b9e\u505a\u51fa\u4e86\u6b63\u786e\u7684\u6295\u8d44\uff0c\u6536\u76ca\u662f\u503c\u5f97\u7684\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u6211\u4eec\u5f88\u5c11\u6709\u5ba2\u89c2\u7684\u8861\u91cf\u6807\u51c6\u6216\u6211\u4eec\u7684\u5de5\u4f5c\uff0c\u800c\u4e14\u6211\u4eec\u603b\u80fd\u627e\u5230\u51e0\u4e4e\u6240\u6709\u9009\u62e9\u7684\u5408\u7406\u5316\u3002\u6211\u60f3\u8bf4\u7684\u662f\uff0c\u8bbe\u8ba1\u4e0d\u8db3\u4f1a\u5bfc\u81f4\u660e\u663e\u7684\u6280\u672f\u503a\u52a1\uff0c\u800c\u8fc7\u5ea6\u8bbe\u8ba1\u4f1a\u4ea7\u751f\u9690\u85cf\u7684\u6280\u672f\u503a\u52a1\uff0c\u8fd9\u8981\u5371\u9669\u5f97\u591a\u3002\u5173\u952e\u95ee\u9898\u662f\u201c\u4e3a\u4ec0\u4e48\uff1f\u201d\u3002\u5982\u679c\u7b54\u6848\u56de\u5230\u5177\u6709\u6b63\u6295\u8d44\u56de\u62a5\u7387\u7684\u5177\u4f53\u95ee\u9898\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u505a\u5bf9\u4e86\u3002\u5982\u679c\u5b83\u662f\u4e00\u4e9b\u6a21\u7cca\u7684\u5176\u4ed6\u54c1\u8d28\uff0c\u4f8b\u5982\u201c\u5171\u4eab\u201d\u3001\u201c\u4f18\u96c5\u201d\u3001\u201c\u7b80\u5355\u201d\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u4e0d\u662f\u6700\u7ec8\u76ee\u6807\u3002\u5f53\u6709\u7591\u95ee\u65f6\uff0c\u6211\u53d1\u73b0\u6700\u597d\u5728\u5de5\u7a0b\u4e0d\u8db3\u7684\u4e00\u65b9\u72af\u9519\uff0c\u56e0\u4e3a\u5b83\u5f80\u5f80\u6bd4\u76f8\u53cd\u7684\u65b9\u6cd5\u66f4\u6709\u6548\u7387\uff0c\u5373\u4f7f\u5b83\u66f4\u53d7\u8fb1\u9a82\u3002\u6211\u8ba4\u4e3a\u8fc7\u5ea6\u8bbe\u8ba1\u662f\u8fc7\u65e9\u4f18\u5316\u7684\u8d85\u96c6\u3002\u5728\u4e03\u5341\u5e74\u4ee3\uff0c\u5f53\u8fd9\u53e5\u8bdd\u51fa\u73b0\u65f6\uff0c\u8fd9\u662f\u8fd9\u79cd\u66f4\u201c\u6839\u672c\u201d\u7684\u90aa\u6076\u7684\u6700\u5e38\u89c1\u5f62\u5f0f\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u8fd9\u8282\u8bfe\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\u4e00\u76f4\u5982\u6b64\u6709\u6548\uff0c\u4ee5\u81f3\u4e8e\u5982\u4eca\u5b83\u5b9e\u9645\u4e0a\u6709\u52a9\u4e8e\u8fc7\u5ea6\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u5de5\u7a0b\u5e08\u90fd\u9519\u8bef\u5730\u9605\u8bfb\u4e86\u5b83\uff0c\u8ba4\u4e3a\u603b\u4f53\u4e0a\u6027\u80fd\u4e0d\u662f\u9879\u76ee\u65e9\u671f\u7684\u95ee\u9898\u3002\u4e2d\u573a\u4f11\u606f\uff1a\u4e00\u4e9b\u4f8b\u5b50 - \u5047\u8bbe\u6211\u4eec\u6b63\u5728\u5f00\u53d1\u4e00\u4e2a\u5728 Visual Studio \u4e2d\u5236\u4f5c\u7684 Windows \u6e38\u620f\u3002\u5047\u8bbe\u60a8\u6b63\u5728\u4f7f\u7528 Visual Studio \u89e3\u51b3\u65b9\u6848\u5e76\u4e14\u5b83\u505a\u5f97\u5f88\u7cdf\u7cd5\uff0c\u5b83\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u5e76\u4e14\u9700\u8981\u6e90\u4ee3\u7801\u548c\u53ef\u80fd\u4e00\u4e9b\u5e93\u4f4d\u4e8e\u786c\u76d8\u9a71\u52a8\u5668\u4e0a\u7684\u7279\u5b9a\u76ee\u5f55\u6811\u4e2d\u3002\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bf4\u8fd9\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u8bbe\u8ba1\uff0c\u4f5c\u8005\u53ef\u80fd\u4f1a\u56e0\u4e3a\u8fd9\u79cd\u201c\u4e0d\u4e13\u4e1a\u201d\u7684\u9009\u62e9\u800c\u53d7\u5230\u5632\u7b11\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\uff0c\u5b83\u53ef\u80fd\u5bfc\u81f4\u7684\u95ee\u9898\u5f88\u5c0f\uff0c\u4efb\u4f55\u7a0b\u5e8f\u5458\u90fd\u53ef\u4ee5\u8f7b\u677e\u89e3\u51b3\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5047\u8bbe\u6211\u4eec\u65e0\u7f18\u65e0\u6545\u5730\u5f00\u59cb\u4f7f\u7528\u66f4\u590d\u6742\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u53ef\u80fd\u662f\u57fa\u4e8e\u672c\u5468\u65b0\u5947\u7684\u5916\u90e8\u6784\u5efa\u5de5\u5177\u7684\u5305\u548c\u4f9d\u8d56\u9879\u3002\u8fd9\u79cd\u9009\u62e9\u7684\u6f5c\u5728\u6210\u672c\u662f\u5de8\u5927\u7684\uff0c\u56e0\u4e3a\u73b0\u5728\u60a8\u7684\u8bb8\u591a\u7a0b\u5e8f\u5458\u53ef\u80fd\u4e0d\u592a\u719f\u6089\u8fd9\u4e2a\u7cfb\u7edf\uff0c\u5b83\u6ca1\u6709\u5e26\u6765\u53ef\u8861\u91cf\u7684\u597d\u5904\uff0c\u4f46\u73b0\u5728\u60a8\u5df2\u7ecf\u6df7\u6dc6\u4e86\u7ba1\u9053\u7684\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u3002\u7136\u800c\uff0c\u8fd9\u6837\u7684\u51b3\u5b9a\u4e0d\u592a\u53ef\u80fd\u88ab\u5632\u7b11\u3002 - \u6709\u65f6\u95ee\u9898\u751a\u81f3\u66f4\u5fae\u5999\uff0c\u56e0\u4e3a\u5b83\u4eec\u6d89\u53ca\u4e0d\u660e\u663e\u7684\u6743\u8861\u3002\u4e00\u4e2a\u76f8\u5f53\u786c\u7f16\u7801\u7684\u7cfb\u7edf\u5728\u5ef6\u5c55\u6027\u65b9\u9762\u53ef\u80fd\u4f1a\u5f88\u75db\u82e6\uff0c\u4e5f\u8bb8\u5728\u8fd9\u4e2a\u5b50\u7cfb\u7edf\u4e2d\u8fdb\u884c\u66f4\u6539\u9700\u8981\u6bcf\u6b21\u7f16\u8f91\u5927\u91cf\u6e90\u6587\u4ef6\uff0c\u5373\u4f7f\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u771f\u7684\u4e0d\u559c\u6b22\u90a3\u6837\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2a\u66f4\u901a\u7528\u7684\u6570\u636e\u9a71\u52a8\u7684\u7cfb\u7edf\u66ff\u6362\u4e86\u8fd9\u4e2a\u7cfb\u7edf\uff0c\u5b83\u5141\u8bb8\u4e00\u5207\u90fd\u5728\u73b0\u573a\u8fdb\u884c\uff0c\u751a\u81f3\u4e0d\u518d\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u4ee3\u7801\u3002\u4f46\u662f\u8bf4\u8fd9\u6837\u7684\u7cfb\u7edf\u76f8\u5f53\u201c\u51b7\u201d\uff0c\u800c\u4e14\u53d8\u5316\u5b9e\u9645\u4e0a\u5e76\u4e0d\u9891\u7e41\u3002\u8fd8\u5047\u8bbe\u65b0\u7cfb\u7edf\u9700\u8981\u76f8\u5f53\u591a\u7684\u4ee3\u7801\uff0c\u73b0\u5728\u6211\u4eec\u7684\u6574\u4e2a\u6784\u5efa\u901f\u5ea6\u8f83\u6162\u3002\u6211\u4eec\u6700\u7ec8\u4f18\u5316\u4e86\u4e00\u4e2a\u4e0d\u5e38\u89c1\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4f46\u4e0d\u5229\u7684\u4e00\u9762\u662f\uff0c\u6211\u4eec\u51cf\u6162\u4e86\u56e2\u961f\u4e2d\u6240\u6709\u7a0b\u5e8f\u5458\u7684\u65e5\u5e38\u5de5\u4f5c\u2026\u2026\u5047\u8bbe\u60a8\u4f7f\u7528\u4e86\u4e00\u4e2a\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u51fd\u6570\u7684\u7c7b\u3002\u4e5f\u8bb8\u60a8\u96c6\u6210\u4e86\u4e00\u4e2a\u5e93\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u7f16\u5199\u4e00\u767e\u884c\u4ee3\u7801\u3002\u60a8\u4f7f\u7528\u6a21\u677f\u5316\u5bb9\u5668\u5e93\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u4f7f\u7528\u6807\u51c6\u6570\u7ec4\u6216\u4e34\u65f6\u89e3\u51b3\u65b9\u6848\u3002\u60a8\u7c97\u5fc3\u5927\u610f\uff0c\u73b0\u5728\u7531\u4e8e\u7c7b\u578b\u4f9d\u8d56\u6027\uff0c\u60a8\u7684\u7cfb\u7edf\u5728\u6784\u5efa\u65f6\u53d8\u5f97\u8d8a\u6765\u8d8a\u8026\u5408\u3002\u5b83\u53ef\u80fd\u5728\u8fd0\u884c\u65f6\u6bd4\u5b83\u53ef\u80fd\u7684\u6162\u4e00\u70b9\uff0c\u6216\u8005\u5b83\u6bd4\u5b83\u5e94\u8be5\u8fdb\u884c\u7684\u52a8\u6001\u5206\u914d\u66f4\u591a\uff0c\u6216\u8005\u5b83\u5728\u8c03\u8bd5\u6784\u5efa\u4e2d\u5f88\u6162\uff0c\u5e76\u4e14\u5f53\u4f60\u5b9e\u9645\u4e0a\u5fc5\u987b\u4ecb\u5165\u8fd9\u4e2a\u5e93\u4ee3\u7801\u65f6\uff0c\u5b83\u4f1a\u4f7f\u4f60\u7684\u6784\u5efa\u65f6\u95f4\u66f4\u957f\uff0c\u540c\u65f6\u53c8\u5f88\u6a21\u7cca\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u7ecf\u5e38\u53d1\u751f\uff0c\u4f46\u5f88\u53ef\u80fd\u8fd9\u4e9b\u90fd\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u8bbe\u8ba1\u95ee\u9898\uff0c\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u590d\u6742\u7684\u5de5\u5177\u5efa\u7acb\u5728\u8fc7\u5ea6\u8bbe\u8ba1\u7684\u8bbe\u8ba1\u4e4b\u4e0a\uff0c\u4ee5\u201c\u5e2e\u52a9\u201d\u89e3\u51b3\u4ed6\u4eec\u7684\u95ee\u9898\u3002\u6240\u4ee5\u73b0\u5728\u60a8\u53ef\u4ee5\u4f7f\u7528\u201c\u7edf\u4e00\u6784\u5efa\u201d\u548c\u5206\u5e03\u5f0f\u6784\u5efa\u6765\u5c1d\u8bd5\u89e3\u51b3\u6784\u5efa\u65f6\u95f4\u95ee\u9898\u3002\u60a8\u53ef\u80fd\u4f1a\u5f00\u59cb\u4f7f\u7528\u590d\u6742\u7684\u5185\u5b58\u5206\u914d\u5668\u548c\u5185\u5b58\u8c03\u8bd5\u5668\u6765\u8ffd\u8e2a\u5bfc\u81f4\u788e\u7247\u7684\u539f\u56e0\u7b49\u7b49\u3002\u8fc7\u5ea6\u8bbe\u8ba1\u4f1a\u5bfc\u81f4\u66f4\u591a\u7684\u8fc7\u5ea6\u8bbe\u8ba1\u3002\u6709\u4e00\u79cd\u60f3\u6cd5\u662f\uff0c\u901a\u8fc7\u5728\u590d\u6742\u7cfb\u7edf\u4e0a\u6784\u5efa\u66f4\u591a\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f7f\u590d\u6742\u7cfb\u7edf\u53d8\u5f97\u66f4\u7b80\u5355\uff0c\u8fd9\u4e0d\u592a\u73b0\u5b9e\u3002\u4e13\u4e1a\u5316\u548c\u9650\u5236 \u4e00\u65e6\u4e86\u89e3\u4e86\u7ed9\u5b9a\u9009\u62e9\u7684\u6210\u672c\u548c\u6536\u76ca\uff0c\u6211\u5c31\u6ca1\u6709\u4e00\u79cd\u901a\u7528\u7684\u65b9\u6cd5\u6765\u8bc4\u4f30\u6295\u8d44\u56de\u62a5\u3002\u800c\u4e14\u6211\u8ba4\u4e3a\u4e00\u822c\u6ca1\u6709\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6307\u6807\u975e\u5e38\u654f\u611f\u3002\u6211\u559c\u6b22\u9080\u8bf7\u5de5\u7a0b\u5e08\u505a\u7684\u662f\u601d\u8003\u95ee\u9898\uff0c\u654f\u9510\u5730\u610f\u8bc6\u5230\u5b83\u3002\u6211\u8ba4\u4e3a\u4f5c\u4e3a\u6307\u5bfc\u6709\u7528\u7684\u539f\u5219\u4e4b\u4e00\u662f\u6211\u4eec\u5728\u6709\u9650\u7684\u5de5\u4f5c\u96c6\u4e0b\u8fd0\u4f5c\uff1a\u6211\u4eec\u4e0d\u80fd\u540c\u65f6\u5173\u6ce8\u5f88\u591a\u4e8b\u60c5\uff0c\u6211\u4eec\u5fc5\u987b\u627e\u5230\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u76ee\u6807\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u7684\u76ee\u6807\u6307\u5bfc\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u4e13\u4e1a\u5316\u6211\u4eec\u7684\u9879\u76ee\u3002\u4f8b\u5982\uff0c\u5728\u6211\u7684\u5de5\u4f5c\u4e2d\uff0c\u6211\u7ecf\u5e38\u5904\u7406\u6570\u503c\u7b97\u6cd5\u3001\u53ef\u89c6\u5316\u548c\u6570\u636e\u63a2\u7d22\u3002\u6211\u53ef\u80fd\u4f1a\u6839\u636e\u9700\u8981\u5728\u975e\u5e38\u4e0d\u540c\u7684\u73af\u5883\u548c\u975e\u5e38\u4e0d\u540c\u7684\u98ce\u683c\u4e2d\u7f16\u5199\u975e\u5e38\u76f8\u4f3c\u7684\u4ee3\u7801\u3002\u5982\u679c\u6211\u6b63\u5728\u63a2\u7d22\u4e00\u4e2a\u60f3\u6cd5\uff0c\u6211\u53ef\u80fd\u4f1a\u4f7f\u7528 Mathematica \u6216 Processing\u3002\u5728\u8fd9\u4e9b\u73af\u5883\u4e2d\uff0c\u6211\u5bf9\u5185\u5b58\u5206\u914d\u7684\u7ec6\u8282\u548c\u4ee3\u7801\u4f18\u5316\u7684\u5fae\u5999\u4e4b\u5904\u77e5\u4e4b\u751a\u5c11\u3002\u800c\u6211\u4e0d\u60f3\u2014\u2014\u60f3\u2014\u2014\u77e5\u9053\u3002\u5373\u4f7f\u53ea\u662f\u610f\u8bc6\u5230\u5b83\u4eec\u4e5f\u4f1a\u8ba9\u4eba\u5206\u5fc3\uff0c\u56e0\u4e3a\u6211\u81ea\u7136\u4f1a\u503e\u5411\u4e8e\u7f16\u5199\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u89e3\u51b3\u624b\u5934\u7684\u95ee\u9898\u3002\u5f88\u591a\u65f6\u5019\u6211\u7684 Mathematica \u4ee3\u7801\u5b9e\u9645\u4e0a\u4f1a\u6cc4\u6f0f\u5185\u5b58\u3002\u5728\u5177\u6709 92 GB \u5185\u5b58\u7684\u5de5\u4f5c\u7ad9\u4e0a\u901a\u5bb5\u8fd0\u884c\u63a2\u7d22\u6027\u4efb\u52a1\u65f6\uff0c\u6211\u6beb\u4e0d\u5728\u610f\u3002\u73af\u5883\u5b8c\u5168\u4f7f\u6211\u514d\u53d7\u8fd9\u4e9b\u62c5\u5fe7\u7684\u5f71\u54cd\uff0c\u8fd9\u662f\u5b8c\u7f8e\u7684\uff0c\u5b83\u4f7f\u6211\u80fd\u591f\u4e13\u6ce8\u4e8e\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u91cd\u8981\u7684\u4e8b\u60c5\u3002\u6211\u5199\u4e86\u4e00\u4e9b\u975e\u5e38\u9ad8\u7ea7\u7684\u4ee3\u7801\uff0c\u4e0d\u77e5\u4f55\u6545\u795e\u5947\u53d1\u751f\u4e86\u3002\u6709\u65f6\u6211\u5fc5\u987b\u5c06\u8fd9\u4e9b\u5b9e\u9a8c\u79fb\u690d\u5230\u751f\u4ea7 C++ \u4ee3\u7801\u4e2d\u3002\u5728\u90a3\u79cd\u73af\u5883\u4e0b\uff0c\u6211\u7684\u76ee\u6807\u5b8c\u5168\u4e0d\u540c\u3002\u6027\u80fd\u5bf9\u6211\u4eec\u6765\u8bf4\u975e\u5e38\u91cd\u8981\uff0c\u6211\u4e0d\u60f3\u8981\u4efb\u4f55\u9b54\u6cd5\uff0c\u6211\u60f3\u8981\u4efb\u4f55\u5373\u4f7f\u662f\u8fdc\u7a0b\u6602\u8d35\u7684\u4e1c\u897f\uff0c\u4e5f\u80fd\u5728\u5b83\u53d1\u751f\u7684\u5730\u65b9\u8868\u73b0\u51fa\u6765\u3002\u5982\u679c\u6709\u4e00\u4e9b\u9b54\u6cd5\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u8fd0\u884c\u5f97\u76f8\u5f53\u5feb\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u80af\u5b9a\uff0c\u5b83\u4ea7\u751f\u7684\u95ee\u9898\u4f1a\u6d88\u5931\uff0c\u76f4\u5230\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u7684\u5730\u65b9\u592a\u591a\u4ee5\u81f3\u4e8e\u6574\u4e2a\u4ea7\u54c1\u5206\u5d29\u79bb\u6790\u3002\u6211\u4e0d\u76f8\u4fe1\u4f60\u53ef\u4ee5\u521b\u5efa\u975e\u5e38\u5e7f\u6cdb\u7684\u7cfb\u7edf\uff0c\u5728\u90a3\u91cc\u4f60\u6709\u975e\u5e38\u9ad8\u5c42\u6b21\u7684\u5173\u6ce8\u548c\u975e\u5e38\u4f4e\u5c42\u6b21\u7684\u5173\u6ce8\uff0c\u4e07\u80fd\u7684\u3002\u7ea6\u675f\u548c\u4e13\u4e1a\u5316\u662f\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5173\u952e\uff08\u4e0d\u4ec5\u5982\u6b64\uff09\uff0c\u5b83\u4eec\u4f7f\u6211\u4eec\u80fd\u591f\u4e13\u6ce8\u4e8e\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u5c06\u91cd\u8981\u7684\u5173\u6ce8\u70b9\u4fdd\u7559\u5728\u6211\u4eec\u7684\u5de5\u4f5c\u96c6\u4e2d\uff0c\u5e76\u5bf9\u4ee3\u7801\u8fdb\u884c\u5c40\u90e8\u63a8\u7406\u3002\u6240\u6709\u7ea7\u522b \u8fc7\u5ea6\u8bbe\u8ba1\u7684\u53e6\u4e00\u4e2a\u65b9\u9762\u662f\u5b83\u4e0d\u4ec5\u5f71\u54cd\u5fae\u5c0f\u7684\u4ee3\u7801\u8bbe\u8ba1\u51b3\u7b56\uff0c\u751a\u81f3\u4e0d\u53ea\u662f\u7f16\u7801\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u5728\u6ca1\u6709\u9002\u5f53\u610f\u8bc6\u7684\u60c5\u51b5\u4e0b\u505a\u4e8b\uff0c\u6211\u8ba4\u4e3a\uff0c\u4ec0\u4e48\u95ee\u9898\u4e3a\u6211\u4eec\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u4ed6\u4eec\u521b\u9020\u4e86\u4ec0\u4e48\u95ee\u9898\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u7ecf\u5e38\u88ab\u67d0\u79cd\u7f8e\u5b66\u6216\u67d0\u4e9b\u597d\u7684\u7406\u60f3\u6240\u5f15\u5bfc\u3002\u4f8b\u5982\u4ee3\u7801\u5171\u4eab\u548c\u91cd\u590d\u6570\u636e\u5220\u9664\u3002\u6807\u51c6\u548c\u56fe\u4e66\u9986\u3002\u6709\u4e9b\u4e8b\u60c5\u6709\u65f6\u6211\u4eec\u8ba4\u4e3a\u672c\u8d28\u4e0a\u662f\u597d\u7684\uff0c\u5373\u4f7f\u6211\u4eec\u6709\u5931\u8d25\u7684\u5386\u53f2\uff0c\u6211\u4eec\u5e94\u8be5\u4ece\u4e2d\u5438\u53d6\u6559\u8bad\u3002\u5bf9\u4e8e\u5de5\u7a0b\u6765\u8bf4\uff0c\u7279\u522b\u662f\u5171\u4eab\u4f1a\u5e26\u6765\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u6210\u672c\uff0c\u4f46\u5b83\u672c\u8eab\u51e0\u4e4e\u603b\u662f\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u7f8e\u5fb7\uff0c\u5373\u4f7f\u662f\u6709\u7ecf\u9a8c\u7684\u56e2\u961f\u5728\u96c6\u6210\u6210\u672c\u3001\u751f\u4ea7\u529b\u6210\u672c\u3001\u4ee3\u7801\u81a8\u80c0\u548c\u7b49\u7b49\uff0c\u5b83\u53ea\u662f\u88ab\u8ba4\u4e3a\u662f\u201c\u81ea\u7136\u7684\u201d\u3002 \u201c\u4e0d\u8981\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50\u201d\u662f\u975e\u5e38\u771f\u5b9e\u548c\u5408\u7406\u7684\u3002\u4f46\u662f\u201c\u8f6e\u5b50\u201d\u5bf9\u6211\u6765\u8bf4\u610f\u5473\u7740\u201c\u51b7\u201d\uff0c\u4e0d\u53d7\u8fed\u4ee3\u5f71\u54cd\u7684\u57fa\u7840\u7ed3\u6784\u4ee3\u7801\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u9879\u76ee\u4e0d\u9700\u8981\u4e13\u95e8\u5316\u3002\u8ba4\u4e3a\u5171\u4eab\u548c\u6807\u51c6\u5316\u603b\u662f\u4e00\u79cd\u80dc\u5229\u5c31\u50cf\u8ba4\u4e3a\u628a\u66f4\u591a\u7684\u4eba\u6295\u5165\u5230\u4e00\u4e2a\u95ee\u9898\u4e0a\u603b\u662f\u4e00\u79cd\u80dc\u5229\uff0c\u6216\u8005\u8ba4\u4e3a\u4f7f\u67d0\u4e9b\u4ee3\u7801\u591a\u7ebf\u7a0b\u603b\u662f\u4e00\u79cd\u80dc\u5229\uff0c\u65e0\u8bba\u5b83\u9700\u8981\u591a\u5c11\u540c\u6b65\u4ee5\u53ca\u5b83\u4f7f\u5f00\u53d1\u53d8\u5f97\u591a\u4e48\u56f0\u96be\u8fc7\u7a0b...\u4f8b\u5982\uff0c\u5728\u4e00\u5bb6\u7535\u5b50\u6e38\u620f\u516c\u53f8\uff0c\u4e3a\u5341\u4e2a\u4e0d\u540c\u7684\u9879\u76ee\u62e5\u6709\u5341\u4e2a\u4e0d\u540c\u7684\u6570\u5b66\u5e93\u80af\u5b9a\u662f\u611a\u8822\u7684\u3002\u4f46\u662f\u62e5\u6709\u5341\u4e2a\u4e0d\u540c\u7684\u6e32\u67d3\u5668\u53ef\u80fd\u5e76\u4e0d\u611a\u8822\u3002\u751a\u81f3 20 \u4e2a\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u6e32\u67d3\u662f\u521b\u4f5c\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u662f\u6211\u4eec\u60f3\u8981\u4e13\u653b\u7684\u4e00\u90e8\u5206\uff0c\u6839\u636e\u7ed9\u5b9a\u7684\u827a\u672f\u65b9\u5411\u3001\u7ed9\u5b9a\u7684\u9879\u76ee\u8303\u56f4\u7b49\u8fdb\u884c\u5236\u4f5c\u3002 People Context \u4e0d\u4ec5\u5728\u6280\u672f\u5c42\u9762\u4e0a\u5f88\u91cd\u8981\uff0c\u800c\u4e14\u5728\u4eba\u7684\u5c42\u9762\u4e0a\u4e5f\u5f88\u91cd\u8981\uff0c\u751a\u81f3\u66f4\u591a\u3002\u8f6f\u4ef6\u5de5\u7a0b\u662f\u4e00\u95e8\u8f6f\u79d1\u5b66\uff01\u6211\u66fe\u5728\u51e0\u5bb6\u4e0d\u540c\u7684\u516c\u53f8\u4ece\u4e8b\u8fc7\u51e0\u4e2a\u4e0d\u540c\u7684\u9879\u76ee\uff0c\u5bf9\u6b64\u6211\u6df1\u4fe1\u4e0d\u7591\u3002\u6709\u65f6\u60a8\u4f1a\u770b\u5230\u4e00\u5bb6\u516c\u53f8\u5bf9\u7c7b\u4f3c\u7684\u9879\u76ee\u4f7f\u7528\u76f8\u540c\u7684\u7b56\u7565\uff0c\u4f46\u7ed3\u679c\u5374\u622a\u7136\u4e0d\u540c\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u5176\u4ed6\u65f6\u5019\uff0c\u4e0d\u540c\u516c\u53f8\u7684\u4e0d\u540c\u4ea7\u54c1\u901a\u8fc7\u91c7\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u3001\u51e0\u4e4e\u76f8\u53cd\u7684\u7b56\u7565\u83b7\u5f97\u4e86\u7c7b\u4f3c\u7684\u7ed3\u679c\u3002\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4eba\u6bd4\u6280\u672f\u66f4\u91cd\u8981\u3002\u8fd9\u4e5f\u8bb8\u662f\u6211\u4eec\u4f5c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u53d7\u8fc7\u57f9\u8bad\u6700\u4e0d\u8ba4\u8bc6\u7684\u4e8b\u60c5\u3002\u4eba\u6bd4\u6280\u672f\u66f4\u91cd\u8981\u3002\u9000\u4f0d\u519b\u4eba\u56e2\u961f\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u62e5\u6709\u6216\u9700\u8981\u5927\u91cf\u4eba\u5458\u6d41\u52a8\u7684\u56e2\u961f\u4e0d\u540c\u3002\u5728\u6e38\u620f\u884c\u4e1a\uff0c\u6709\u4e9b\u56e2\u961f\u7684\u521b\u65b0\u662f\u7531\u5de5\u7a0b\u5e08\u5e26\u5934\u7684\uff0c\u6709\u4e9b\u5219\u662f\u7531\u7f8e\u5de5\u6216\u6280\u672f\u7f8e\u5de5\u63a8\u52a8\u7684\u3002\u4e00\u5bb6\u7279\u5b9a\u7684\u516c\u53f8\u53ef\u80fd\u5e0c\u671b\u5c06\u6240\u6709\u6295\u8d44\u96c6\u4e2d\u5728\u5c11\u6570\u975e\u5e38\u5f15\u4eba\u6ce8\u76ee\u7684\u4ea7\u54c1\u4e0a\uff0c\u5176\u4e2d\u521b\u65b0\u548c\u8d28\u91cf\u975e\u5e38\u91cd\u8981\u3002\u53e6\u4e00\u4e2a\u53ef\u80fd\u901a\u8fc7\u751f\u4ea7\u66f4\u591a\u4ea7\u54c1\u5e76\u5c1d\u8bd5\u770b\u770b\u4ec0\u4e48\u6709\u6548\uff0c\u5728\u8fd9\u4e2a\u9886\u57df\u4e2d\u964d\u4f4e\u6210\u672c\u53ef\u80fd\u66f4\u91cd\u8981\u3002\u5373\u4f7f\u662f\u5206\u4eab\u548c\u907f\u514d\u91cd\u590d\u7684\u53e3\u5934\u7985\u4e5f\u4e0d\u662f\u7edd\u5bf9\u7684\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u590d\u5236\u5b9e\u9645\u4e0a\u53ef\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\uff0c\u4e0e\u6700\u7ec8\u751f\u4ea7\u76f8\u6bd4\uff0c\u5177\u6709\u5355\u72ec\u7684\u5b9e\u9a8c\u73af\u5883\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5206\u4eab\u4f1a\u627c\u6740\u521b\u9020\u529b\uff0c\u5e76\u4e14\u7ef4\u62a4\u6210\u672c\u603b\u4f53\u4e0a\u9ad8\u4e8e\u6536\u76ca\u3002\u5728\u4e0d\u4e86\u89e3\u6210\u672c\u3001\u6536\u76ca\u548c\u80cc\u666f\u7684\u60c5\u51b5\u4e0b\u8c08\u8bba\u5de5\u7a0b\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u51e0\u4e4e\u4ece\u6765\u6ca1\u6709\u4e00\u4e2a\u666e\u904d\u7684\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\u95ee\u9898\u662f\u5177\u4f53\u7684\u548c\u5c40\u90e8\u7684\u3002\u5de5\u7a0b\u662f\u5173\u4e8e\u5728\u7279\u5b9a\u73af\u5883\u4e2d\u89e3\u51b3\u5177\u4f53\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u968f\u6ce2\u9010\u6d41\u3002\u6211\u89c9\u5f97\u6211\u4eec\u8fd9\u4e2a\u884c\u4e1a\u8fd8\u6709\u5f88\u591a\u4e1c\u897f\u8981\u5b66\u3002", "note_en": "Definitions      Over-engineering: using prematurely for tools, abstractions or technical solutions, resulting in wasted effort and unnecessary complexity.      When is a technique used prematurely? When it doesn&#39;t solve a concrete, current problem. It is tempting to define good engineering in terms of simplicity or ease of development, but I think it&#39;s actually a slippery slope. Simplicity means different things to different people.\u00a0      One could see programming as compression (and indeed it is), but we have to realize that compression, or terseness, per se, is not a goal.\u00a0 The shortest program possible is most often not the simplest for people to work with, and the dangers of compression are evident to anybody that had to go through a scientific education: when I was in university the exams that were by far the most difficult came with the smallest textbooks...      Simplicity also means different things to different people. To someone in charge of low-level optimizations working with fewer abstractions can be easier than having to dive through many software layers. To a novice, a software written in a more idiomatic way for a given language might be much easier than something adapted to be domain specific.      Problems, on the other hand, measurable,  concrete issues, are a better framework.\u00a0  They are still a soft, context-dependent and team-dependent metric, but trying to identify problems, solutions, and their costs brings design decision from an aesthetic (and often egocentric) realm to a concrete one.   Note: This doesn&#39;t mean that good code is not or shouldn&#39;t be &#34;beautiful&#34; or elegant, but these are not goals, they are just byproducts of solving certain problems the code might have.   Also, &#34;measurable&#34; does not mean we need precise numbers attached to our evaluations, in practice, most things can&#39;t be better than fuzzy guesses, and that&#39;s perfectly fine.      Costs and benefits       Costs are seldom discussed. If a technique, an abstraction, an engineering solution doesn&#39;t come with drawbacks, it&#39;s probably because either it&#39;s not doing much, or because we&#39;ve not been looking hard enough.\u00a0  Are we imposing a run-time cost? What about the debug build? Are we making it less usable?\n    Do our tools support the design well? Are we messing up with our source control, static analyzer and so on?\n  Reducing the ability to reason locally about code? Making details that matter in our context hidden at call-site? Making semantics less explicit, or less coupled to a given syntax? Violating invariants and assumptions that our code-base generally employs?\n Does it work well with the team culture? With code reviews or automated testing or any other engineering practice of the team?\n We have to be aware of the trade-offs to discuss an investment. But our tendency to showcase the benefits our ideas and hide the costs is a real issue in education, in research, in production. It&#39;s hardwired in the way we work. It&#39;s not (most often) even a matter of malice, it&#39;s simply the way we are trained to reason, we seek success and shy away from discussing failure.      I&#39;ve seen countless time people going on stage, or writing articles and book, honestly trying to describe why given ideas are smart and can work while totally forgetting the pain they experience every day due to them.      Under-engineering      And that&#39;s why over-engineering truly is the root of all evil. Because it&#39;s vicious, it&#39;s insidious, and we&#39;re not trained at all to recognize it.\u00a0      It is possible to go out and buy technical books, maybe go to a university, and learn tens or hundreds of engineering techniques and best practices. On the other hand, there is almost nothing, other than experience and practice, that teaches restraint and actual problem solving.      We know what under-engineering is, we can recognize duplicated code, brittle, and unsafe code, badly structured code. We have terminology, we have methodologies. Testing, refactoring, coverage analysis...      In most of the cases, on the other hand,  we are not trained to understand over-engineering at all.    Note: In fact\u00a0over-engineering\u00a0it&#39;s often more &#34;pronounced&#34; in good junior candidates, whose curiosity lead them to learn lots of programming techniques, but that have no experience in their pitfalls and can easily stray from concrete problem solving.      This means most of the times when over-engineering happens it tends to persist, we don&#39;t go back from big architectures and big abstractions to simpler systems, we tend to build on top of them. Somewhere along the road, we made a bad investment, with the wrong tradeoffs, but now we&#39;re committed to it.      Over-engineering tends to look much more reasonable, more innocent than under-engineering. It&#39;s not bad code. It&#39;s not ugly code. It&#39;s just premature and useless, we don&#39;t need it, we&#39;re paying a high price for it, but we like it. And we like technology, we like reading about it, keeping ourselves up-to-date, adopting the latest techniques and developments. And at a given point we might even start thinking that we did make the right investment, that the benefits are worth it, especially as we seldom have objective measures or our work and we can always find a rationalization of almost any choice.      I&#39;d say that under-engineering leads to evident technical debt, while over-engineering creates hidden technical debt, which is much more dangerous.\u00a0       The key question is &#34;why?&#34;. If the answer comes back to a concrete problem with a positive ROI, then you&#39;re probably doing it right. If it&#39;s some vague other quality like &#34;sharing&#34;, &#34;elegance&#34;, &#34;simplicity&#34;, then it&#39;s probably wrong, as these are not end goals.   When in doubt, I find it&#39;s  better to err on the side of under-engineering , as it tends to be more productive than the opposite, even if it is more reviled.       I think over-engineering is a super-set of premature optimization. In the seventies, when this quote originated, that was the most common form of this more &#34;fundamental&#34; evil. Ironically, this lesson has been in the decades so effective that nowadays it actually helps over-engineering, as most engineers read it incorrectly, thinking that in general performance is not a concern early on in a project.  Intermission: some examples     - Let&#39;s say we&#39;re working on a Windows game made in Visual Studio. Let&#39;s say that you are using a Visual Studio solution and it&#39;s done badly, it uses absolute paths and requires the source-code and maybe some libraries to be in a specific directory tree on the hard drive. Anybody can tell that&#39;s a bad design, and the author might be scorned for such an &#34;unprofessional&#34; choice, but in practice, the problems that it could cause are minimal and can be trivially fixed by any programmer.      On the other hand, let&#39;s say we started using, for no good reason, a more complex build system, maybe packages and dependencies based on a fancy new external build tool of the week.   The potential cost of such a choice is huge because chances are that now many of your programmers aren&#39;t very familiar with this system, it&#39;s bringing no measurable benefits but now you&#39;ve obfuscated an important part of your pipeline. Yet, it&#39;s very unlikely that such decision will be derided.      - Sometimes issues are even subtler, because they involve non-obvious trade-offs. A fairly hard-coded system might be painful in terms of malleability, maybe doing changes in this subsystem requires every time editing lots of source files even for trivial operations.    We really don&#39;t like that, so we replace this system with a more generic, data-driven one which allows to do everything live, doesn&#39;t even require to recompile code anymore. But say that such system was fairly &#34;cold&#34;, and the changes were actually infrequent. Suppose also that the new system takes a fair amount more code and now our entire build is slower. We ended up optimizing a workflow that was infrequent\u00a0but on the down side we slowed down the daily routine of all our programmers on the team...      - Let&#39;s say you use a class where you could have used a simple function. Maybe you integrate a library, where you could have written a hundred lines of code. You use a templated container library where you could have used a standard array or ad-hoc solutions. You were careless and now your system is becoming more and more coupled at build-time due to type dependencies.\u00a0  It&#39;s maybe a bit slower in runtime than it could be or it makes more dynamic allocations than it should, or it&#39;s slow in debug builds, and it makes your build time longer while being quite obscure when you actually have to step in this library code.      This is a very concrete example, happens often yet chances are that none of this will be recognized as a design problem, and we often see complex tools built on top over-engineered designs to &#34;help&#34; solving their issues. So now you might use &#34;unity builds&#34; and distributed builds to try to remedy the build time issues. You might start using complex memory allocators and memory debuggers to track down what&#39;s causing fragmentation and so on and so forth.\u00a0      Over-engineering invites more over-engineering. There is this idea that a complex system can be made simpler by building more on top of it, which is not very realistic.      Specialization and constraints      I don&#39;t have a universal methodology for evaluating return on investment, once the costs and benefits of a given choice are understood. And I think there isn&#39;t in general one because this metric is very  context sensitive. What I like to invite engineers to do is to think about the problem, be acutely aware of it.      One of the principles I think is useful as a guidance is that we operate with a finite working set: we can&#39;t pay attention to many things at the same time, we have to find constraints that help us achieve our objectives. In other words, our objectives guide how we should specialize our project.      For example, in my job I often deal with numerical algorithms, visualization, and data exploration. I might code very similar things in very different environments and very different styles depending on the need. If I&#39;m exploring an idea, I might use Mathematica or Processing.\u00a0  In these environments, I really know little about the details of memory allocations and the subtleties of code optimization. And I don&#39;t -want- to know. Even just being aware of them would be a distraction, as I would naturally gravitate towards coding efficient algorithms instead of just solving the problem at hand.      Often times my Mathematica code actually leaks memory. I couldn&#39;t care less when running an exploratory task overnight a workstation with 92 gb of ram. The environment completely shields me from these concerns and this is perfect, it allows me to focus on what matters, in that context. I write some very high-level code, and somehow magic happens.      Sometimes I have to then port these experiments to production C++ code. In that environment, my goals are completely different. Performance is so important to us that I don&#39;t want any magic, I want anything that is even remotely expensive to be evident in the location where it happens. If there was some magic that worked decently fast most of the times, you can be sure that the problems it creates would be lost until there are so many locations where that happens that the entire product falls apart.      I don&#39;t believe that you can create systems that are extremely wide, where you have both extremely high-level concerns and extremely low-level ones, jack-of-all-trades. Constraints and specialization are key to software engineering (and not only), they allow us to focus on what matters, keeping the important concerns in our working set and to perform local reasoning on code.      All levels      Another aspect of over-engineering is that it doesn&#39;t just affect minute code design decisions\u00a0or even just coding. In general, we have a tendency to do things without proper awareness, I think, of what problems solve for us and what problem they create. Instead, we&#39;re often guided either by a certain aesthetic or certain ideals of what&#39;s good.       Code sharing for example and de-duplication. Standards and libraries. There are certain things that sometimes we consider intrinsically good, even when we have a history of failures from which we should learn.\u00a0      For engineering, sharing in particular is something that comes with an incredible cost but that is almost always considered a virtue per se, even by teams which have experience actually paying the price in terms of integration costs, of productivity costs, of code-bloat and so on, it came to be just considered &#34;natural&#34;.      &#34;Don&#39;t reinvent the wheel&#34; is very true and sound. But &#34;the wheel&#34; to me means &#34;cold&#34;, infrastructural code that is not subject to iteration, that doesn&#39;t need specialization for a given project.\u00a0  Thinking that sharing and standardization is always a win is like thinking that throwing more people at a problem is always a win, or that making some code multithreaded is always a win, regardless of how much synchronization it requires and how much harder it makes the development process...      In a videogame company, for example, it&#39;s certainly silly to have ten different math libraries for ten different projects. But it might very well not be silly to have ten different renderers. Or even twenty for what matters, rendering is part of the creative process, it&#39;s part of what we want to specialize, to craft to a given art-direction, given project scope and so on.      People      Context doesn&#39;t matter only on a technical level, but also, or perhaps even more, on a  human level. Software engineering is a soft science!      I&#39;ve been persuaded of this having worked for a few different projects in a few different companies. Sometimes you see a company using the same strategy for similar projects, only to achieve very different results. Some other times on the other hands, similar results are obtained by different products in different companies by employing radically different, almost opposite strategies. Why is that?      Because people matter more than technology. And this is perhaps the thing that we, as software engineers, are trained the least to recognize. People matter more than technology.      A team of veterans does not work the same as a team that has or needs a lot of turnover. In the game industry, in some teams innovation is spearheaded by engineers, in some others, it&#39;s pushed by artists or technical artists.  A given company might want to focus all their investment in a few, very high profile products, where innovation and quality matters a lot. Another might operate by producing more products and trying to see what works, and in that realm maybe keeping costs down matters more.      Even the mantras of sharing and avoiding duplication are not absolute. In some cases, duplication actually allows for better results, e.g. having a separate environment for experimentation than final production. In some cases sharing stifles creativity, and has upkeep costs that overall are higher than the benefits.      It&#39;s impossible to talk about engineering without knowing costs, benefits, and context. There is almost never a universally good solution. Problems are specific and local.   Engineering is about solving concrete problems in a specific context, not jumping carelessly on the latest bandwagon.      Our industry I feel, still has lots to learns.", "posttime": "2021-08-02 04:50:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,root,\u53ef\u80fd", "title": "\u8fc7\u5ea6\u8bbe\u8ba1\uff08\u4e07\u6076\u4e4b\u6e90\uff09\uff082016\uff09", "title_en": "Over-engineering (the root of all evil) (2016)", "transed": 1, "url": "https://c0de517e.blogspot.com/2016/10/over-engineering-root-of-all-evil.html", "via": "", "real_tags": ["\u8bbe\u8ba1", "root", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "cdfec440676973301a831c66be3e6047.jpg", "infoid": 1071053, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u6f14\u8bb2\u662f\u4f5c\u4e3a JuliaCon2021 \u7684\u4e00\u90e8\u5206\u8fdb\u884c\u7684\u3002\u6458\u8981\uff1aJavis.jl \u662f\u4e00\u4e2a\u901a\u7528\u52a8\u753b\u5e93\uff0c\u5b83\u6784\u5efa\u5728 Luxor.jl \u56fe\u5f62\u5e93\u4e4b\u4e0a\u3002\u5b83...", "note_en": "This talk was given as part of JuliaCon2021.Abstract:Javis.jl is a general purpose animation library which builds on top of the Luxor.jl graphics library.It ...", "posttime": "2021-08-02 04:50:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53ef\u89c6\u5316,julia,\u52a8\u753b", "title": "Javis.jl \u2013 Julia \u52a8\u753b\u548c\u53ef\u89c6\u5316", "title_en": "Javis.jl \u2013 Julia Animations and Visualizations", "transed": 1, "url": "https://www.youtube.com/watch?v=ckvsc6ukdOc", "via": "", "real_tags": ["\u53ef\u89c6\u5316", "julia", "\u52a8\u753b"]}, {"category": "", "categoryclass": "", "imagename": "7bfbfa173605625645acff5f1f1b4e66.jpg", "infoid": 1071051, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5fd8\u8bb0 Google \u641c\u7d22\u548c Fuchsia\u3002\u6765\u81ea\u8c37\u6b4c\u3001\u65af\u5766\u798f\u5927\u5b66\u3001\u666e\u6797\u65af\u987f\u5927\u5b66\u548c\u5176\u4ed6\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u53ef\u80fd\u5df2\u7ecf\u53d6\u5f97\u4e86\u5982\u6b64\u5927\u7684\u8ba1\u7b97\u673a\u53d1\u73b0\uff0c\u6211\u4eec\u8fd8\u4e0d\u80fd\u5b8c\u5168\u7406\u89e3\u5b83\u3002\u5373\u4f7f\u662f\u8c37\u6b4c\u7814\u7a76\u4eba\u5458\u4e5f\u4e0d\u80fd\u5b8c\u5168\u786e\u5b9a\u4ed6\u4eec\u7684\u65f6\u95f4\u6676\u4f53\u53d1\u73b0\u662f\u6709\u6548\u7684\u3002\u4f46\u5982\u679c\u4e8b\u5b9e\u8bc1\u660e\u5b83\u662f\u51c6\u786e\u7684\uff0c\u90a3\u4e48\u8c37\u6b4c\u53ef\u80fd\u662f\u9996\u6279\u4e3a\u4e16\u754c\u63d0\u4f9b\u672a\u6765\u5173\u952e\u6280\u672f\u8fdb\u6b65\u7684\u516c\u53f8\u4e4b\u4e00\u3002\u65f6\u95f4\u6676\u4f53\u5c06\u6210\u4e3a\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u8fd9\u79cd\u8ba1\u7b97\u673a\u53ef\u4ee5\u4ee5\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u901f\u5ea6\u548c\u529f\u7387\u6280\u672f\u89e3\u51b3\u590d\u6742\u7684\u95ee\u9898\uff0c\u800c\u8fd9\u4e9b\u6280\u672f\u751a\u81f3\u8fd8\u6ca1\u6709\u88ab\u53d1\u660e\u3002\u4eca\u65e5\u70ed\u95e8\u4ea4\u6613\u6807\u4ef7\uff1a29.98 \u7f8e\u5143 \u4ef7\u683c\uff1a22.99 \u7f8e\u5143 \u60a8\u8282\u7701\uff1a6.99 \u7f8e\u5143 (23%) \u7acb\u5373\u8d2d\u4e70 \u4e9a\u9a6c\u900a\u63d0\u4f9b\uff0cBGR \u53ef\u80fd\u4f1a\u6536\u5230\u4f63\u91d1 \u4e9a\u9a6c\u900a\u63d0\u4f9b BGR \u53ef\u80fd\u4f1a\u6536\u5230\u4f63\u91d1 \u8c37\u6b4c\u5e76\u4e0d\u662f\u552f\u4e00\u4e00\u5bb6\u5236\u9020\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u516c\u53f8\uff0c\u8fd9\u4e9b\u5404\u79cd\u7c7b\u578b\u7684\u673a\u5668\u4e0d\u65ad\u51fa\u73b0\u5728\u65b0\u95fb\u4e2d\u3002\u91cf\u5b50\u8ba1\u7b97\u673a\u65e0\u6cd5\u8fde\u63a5\u5230\u60a8\u7684\u624b\u673a\uff0c\u5b83\u4eec\u4e5f\u4e0d\u4f1a\u73a9\u6e38\u620f\u3002\u5373\u4f7f\u4ed6\u4eec\u8fd9\u6837\u505a\u4e86\uff0c\u4efb\u5929\u5802\u5728\u8bbe\u8ba1\u672a\u6765\u7684\u6e38\u620f\u673a\u65f6\u4e5f\u4f1a\u5b8c\u5168\u5ffd\u7565\u6700\u65b0\u7684\u8ba1\u7b97\u673a\u6280\u672f\u3002\u6b63\u5982 The Next Web \u89e3\u91ca\u7684\u90a3\u6837\uff0c\u6211\u4eec\u8ba1\u5212\u4f7f\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u6765\u89e3\u51b3\u5177\u6709\u6311\u6218\u6027\u7684\u95ee\u9898\u3002\u4f8b\u5b50\u5305\u62ec\u53ef\u4ee5\u4f7f\u5feb\u901f\u661f\u9645\u65c5\u884c\u6210\u4e3a\u53ef\u80fd\u7684\u66f2\u901f\u9a71\u52a8\u5668\u3002\u4ee5\u53ca\u51e0\u4e4e\u53ef\u4ee5\u6cbb\u6108\u4efb\u4f55\u75be\u75c5\u7684\u533b\u7597\u6280\u672f\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0c\u8c37\u6b4c\u4e0e Michael Pe\u00f1a \u5408\u4f5c\u5728 I/O 2021 \u4e0a\u8fdb\u884c\u4e86\u91cf\u5b50\u8ba1\u7b97\u6f14\u793a\uff1a\u4f46\u662f\u91cf\u5b50\u8ba1\u7b97\u673a\u771f\u7684\u5f88\u96be\u6784\u5efa\u3001\u7ef4\u62a4\uff0c\u751a\u81f3\u4f7f\u7528\u3002\u8fd9\u5c31\u662f Google \u7684\u65f6\u95f4\u6676\u4f53\u53ef\u80fd\u53d1\u6325\u4f5c\u7528\u7684\u5730\u65b9\u3002\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u91cf\u5b50\u8ba1\u7b97\u673a\u5177\u6709\u91cf\u5b50\u4f4d\uff0c\u5373\u91cf\u5b50\u4e16\u754c\u4e2d\u7684\u8ba1\u7b97\u673a\u4f4d\u3002\u5f53\u6709\u4eba\u89c2\u5bdf\u5b83\u4eec\u65f6\uff0c\u8fd9\u4e9b\u91cf\u5b50\u4f4d\u7684\u884c\u4e3a\u4e0e\u5355\u72ec\u653e\u7f6e\u65f6\u4e0d\u540c\u3002\u8fd9\u5c31\u662f\u96be\u4ee5\u6d4b\u91cf\u91cf\u5b50\u4f4d\u72b6\u6001\u7684\u539f\u56e0\u3002\u8fd9\u79cd\u4e0d\u7a33\u5b9a\u6027\u4f7f\u5f97\u4f7f\u7528\u91cf\u5b50\u8ba1\u7b97\u673a\u6210\u4e3a\u95ee\u9898\u3002\u8fd9\u5c31\u662f\u65f6\u95f4\u6676\u4f53\u7684\u7528\u6b66\u4e4b\u5730\u3002\u5728 2012 \u5e74\u7406\u8bba\u5316\uff0c\u65f6\u95f4\u6676\u4f53\u6982\u5ff5\u662f\u7269\u8d28\u7684\u4e00\u4e2a\u65b0\u9636\u6bb5\u3002 Next Web \u89e3\u91ca\u8bf4\uff0c\u65f6\u95f4\u6676\u4f53\u4e0e\u827e\u8428\u514b\u00b7\u725b\u987f\u7235\u58eb\u7684\u8457\u540d\u5b9a\u5f8b\u4e4b\u4e00\u76f8\u77db\u76fe\u3002\u8fd0\u52a8\u7b2c\u4e00\u5b9a\u5f8b\u8bf4\uff1a\u201c\u9759\u6b62\u7684\u7269\u4f53\u8d8b\u4e8e\u9759\u6b62\uff0c\u8fd0\u52a8\u7684\u7269\u4f53\u8d8b\u4e8e\u4fdd\u6301\u8fd0\u52a8\u3002\u201d\u5728\u6211\u4eec\u7684\u5b87\u5b99\u4e2d\uff0c\u6709\u4e00\u79cd\u53eb\u505a\u9ad8\u71b5\uff08\u65e0\u5e8f\uff09\u7684\u4e1c\u897f\u3002\u7531\u4e8e\u80fd\u91cf\u4ea4\u6362\uff0c\u603b\u4f1a\u53d1\u751f\u4e00\u4e9b\u4e8b\u60c5\u3002\u5982\u679c\u6ca1\u6709\u8fc7\u7a0b\uff0c\u71b5\u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u5728\u5b83\u4eec\u5b58\u5728\u65f6\u589e\u52a0\u3002\u4f46\u8fd9\u5bf9\u65f6\u95f4\u6676\u4f53\u65e0\u6548\u3002\u5373\u4f7f\u5728\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u4fdd\u6301\u71b5\u3002\n\u4e3a\u4e86\u7406\u89e3 Google \u7684\u65f6\u95f4\u6676\u4f53\uff0cThe Next Web \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u96ea\u82b1\u7c7b\u6bd4\u3002\u5b83\u4eec\u5177\u6709\u72ec\u7279\u7684\u8bbe\u8ba1\uff0c\u56e0\u4e3a\u539f\u5b50\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u6392\u5217\u3002\u96ea\u843d\u4e0b\uff0c\u878d\u5316\uff0c\u6c34\u84b8\u53d1\uff0c\u7136\u540e\u5b83\u6700\u7ec8\u4f1a\u518d\u6b21\u53d8\u6210\u96ea\u3002\u6240\u6709\u8fd9\u4e9b\u8fc7\u7a0b\u90fd\u6d89\u53ca\u80fd\u91cf\u4ea4\u6362\u3002\u65f6\u95f4\u6c34\u6676\u5c31\u50cf\u96ea\u82b1\u4e00\u6837\uff0c\u53ef\u4ee5\u5728\u4e24\u79cd\u914d\u7f6e\u4e4b\u95f4\u6765\u56de\u5207\u6362\uff0c\u800c\u4e0d\u4f1a\u6d88\u8017\u80fd\u91cf\u6216\u635f\u5931\u80fd\u91cf\u3002\u65f6\u95f4\u6c34\u6676\u53ef\u4ee5\u5403\u86cb\u7cd5\uff0c\u4e5f\u53ef\u4ee5\u5403\u86cb\u7cd5\uff0c\u800c\u4e14\u4ed6\u4eec\u53ef\u4ee5\u6c38\u8fdc\u8fd9\u6837\u505a\u3002 Google \u7684\u65f6\u95f4\u6676\u4f53\u4e0d\u5c5e\u4e8e Google\u3002\u751a\u81f3 Google \u56e2\u961f\u4e5f\u4e0d\u786e\u5b9a\u5b83\u662f\u5426\u521b\u5efa\u4e86\u5b83\u4eec\u3002\u8be5\u7814\u7a76\u4ec5\u4ee5\u9884\u5370\u672c\u5f62\u5f0f\u63d0\u4f9b\uff0c\u56e0\u4e3a\u5b83\u6b63\u5728\u7b49\u5f85\u540c\u884c\u9a8c\u8bc1\u3002\u4f46\u5982\u679c\u8c37\u6b4c\u786e\u5b9e\u627e\u5230\u4e86\u5236\u9020\u5b83\u4eec\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u4e0b\u4e00\u4ee3\u91cf\u5b50\u8ba1\u7b97\u673a\u53ef\u80fd\u4f1a\u5185\u7f6e\u65f6\u95f4\u6676\u4f53\u3002\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u8ba1\u7b97\u673a\u3002\u4ed6\u4eec\u4f1a\u628a\u91cf\u5b50\u76f8\u5e72\u5e26\u5230\u4e00\u4e2a\u6709\u5f88\u591a\u9000\u76f8\u5e72\u7684\u5730\u65b9\u2014\u2014\u4ee5\u524d\u90a3\u4e9b\u4e0d\u5b89\u5206\u7684\u91cf\u5b50\u6bd4\u7279\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u6211\u4eec\u4ecd\u5904\u4e8e\u521b\u5efa\u5177\u6709\u65f6\u95f4\u6676\u4f53\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\u7684\u8d85\u65e9\u671f\u9636\u6bb5\u3002\u8c37\u6b4c\u53ef\u80fd\u5df2\u7ecf\u8bc1\u660e\u65f6\u95f4\u6676\u4f53\u4e0d\u4ec5\u4ec5\u662f\u7406\u8bba\u4e0a\u7684\uff0c\u4f46\u5b83\u80af\u5b9a\u6ca1\u6709\u521b\u9020\u4efb\u4f55\u3002\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6570\u5341\u5e74\u7684\u91cf\u5b50\u8ba1\u7b97\u7814\u7a76\u6765\u521b\u5efa\u5e26\u6709\u65f6\u95f4\u6676\u4f53\u7684\u91cf\u5b50\u8ba1\u7b97\u673a\uff0c\u4ee5\u6784\u5efa\u66f2\u901f\u9a71\u52a8\u5668\u6216\u53d1\u73b0\u201c\u666e\u904d\u6709\u6548\u7684\u764c\u75c7\u6cbb\u7597\u65b9\u6cd5\u201d\u3002\u6beb\u65e0\u7591\u95ee\uff0c\u6211\u4eec\u9700\u8981\u51e0\u5341\u5e74\u624d\u80fd\u6b63\u786e\u7406\u89e3\u91cf\u5b50\u8ba1\u7b97\u673a\u548c\u65f6\u95f4\u6676\u4f53\u3002 Google \u7684\u8bba\u6587\u53ef\u5728\u6b64\u94fe\u63a5\u4e2d\u627e\u5230\u3002\u6b64\u5916\uff0cQuanta Magazine \u8fd8\u5bf9 Google \u7684\u53d1\u73b0\u8fdb\u884c\u4e86\u5168\u9762\u7efc\u8ff0\uff0c\u5e76\u9644\u6709\u65f6\u95f4\u6c34\u6676\u52a8\u753b\u3002\u4eca\u65e5\u70ed\u95e8\u4ea4\u6613\u6807\u4ef7\uff1a29.98 \u7f8e\u5143 \u4ef7\u683c\uff1a22.99 \u7f8e\u5143 \u60a8\u8282\u7701\uff1a6.99 \u7f8e\u5143 (23%) \u7acb\u5373\u8d2d\u4e70 \u4e9a\u9a6c\u900a\u6709\u552e\uff0cBGR \u53ef\u80fd\u4f1a\u6536\u5230\u4f63\u91d1 \u4e9a\u9a6c\u900a\u6709\u552e BGR \u53ef\u80fd\u4f1a\u6536\u5230\u4f63\u91d1 \u514b\u91cc\u65af\u00b7\u53f2\u5bc6\u65af (Chris Smith) \u5f00\u59cb\u5199\u5c0f\u5de5\u5177\u4f5c\u4e3a\u4e00\u79cd\u7231\u597d\uff0c\u5728\u4ed6\u4e4b\u524d\u77e5\u9053\u4ed6\u6b63\u5728\u4e0e\u4e16\u754c\u5404\u5730\u7684\u8bfb\u8005\u5206\u4eab\u4ed6\u5bf9\u79d1\u6280\u4e8b\u7269\u7684\u770b\u6cd5\u3002\u6bcf\u5f53\u4ed6\u4e0d\u5199\u5c0f\u73a9\u610f\u65f6\uff0c\u4ed6\u90fd\u65e0\u6cd5\u8fdc\u79bb\u5b83\u4eec\uff0c\u5c3d\u7ba1\u4ed6\u62fc\u547d\u5c1d\u8bd5\u3002\u4f46\u8fd9\u4e0d\u4e00\u5b9a\u662f\u574f\u4e8b\u3002", "note_en": "Forget  Google Search and  Fuchsia. Researchers from Google, Stanford, Princeton, and other universities might have made a computer discovery so big we can\u2019t fully comprehend it yet. Even Google researchers aren\u2019t entirely sure that their time crystal discovery is valid. But if it turns out to be accurate, then Google might be one of the first companies to give the world a crucial technological advancement for the future. Time crystals will be an essential building block in quantum computers, the kind of computers that can solve complex problems with incredible speed and power technologies that aren\u2019t even invented.\n  Today&#39;s Top Deal                List Price: $29.98    Price: $22.99    You Save: $6.99 (23%)          Buy Now  Available from Amazon, BGR may receive a commission  Available from Amazon BGR may receive a commission   Google isn\u2019t the only company building  quantum computers, and  these types of machines keep popping up in the news with regularity. Quantum computers won\u2019t reach your phone, and they\u2019re not going to play games. Even if they did,  Nintendo will totally ignore the latest computer technology when designing future consoles.\n  As   The Next Web explains, we plan on using quantum computers for challenging problems. Examples include warp drives that could make fast interstellar travel possible. And medical technology that could cure virtually any disease.\n Google partnered with Michael Pe\u00f1a for a quantum computing demo at I/O 2021 earlier this year:\n  But quantum computers are really hard to build, maintain, and even use. That\u2019s where Google\u2019s time crystals might come into play. As it stands now, quantum computers feature qubits, computer bits in the quantum world. These qubits act differently when someone observes them than when they\u2019re left alone. That\u2019s what makes it difficult to measure qubit states. And that instability makes using a quantum computer problematic. That\u2019s where time crystals come in.\n  Theorized in 2012, the time crystal concept is a new phase of matter.   The Next Web explains that time crystals contradict one of Sir Isaac Newton\u2019s famous laws. The first law of motion says that \u201can object at rest tends to stay at rest and an object in\u00a0motion tends to stay in motion.\u201d\n In our universe, there\u2019s something called high entropy (disorder). Something always happens thanks to energy exchanges. Entropy remains the same if there are no processes but increases in their presence. But that\u2019s not valid for time crystals. They can maintain entropy even when they\u2019re used in a process.\n To understand Google\u2019s time crystals,  The Next Web offers a great analogy with snowflakes. They have unique designs, as the atoms are arranged in specific ways. Snow falls, melts, water evaporates, and then it\u2019ll eventually become snow again. All these processes involve energy exchanges. A time crystal would be like having a snowflake that can change between two configurations back and forth with no energy usage or energy loss. Time crystals can have their cake and eat it too, and they can do it perpetually.\n    Google\u2019s time crystals do not belong to Google. Even the Google team doesn\u2019t know for sure that it has created them. The research is only available in a pre-print version as it awaits validation from peers.\n But if Google did find a way to make them, then next-gen quantum computers might come with time crystals inside. Anyone might be able to create these computers. And they\u2019d bring quantum coherence to a place where there\u2019s a lot of decoherence \u2014 those restless qubits from before.\n Even so, we\u2019re still in the super early stages of creating quantum computers with time crystals. Google might have proved that time crystals aren\u2019t just theoretical, but it certainly hasn\u2019t created any.\n We might need decades of quantum computing research to create quantum computers with time crystals in them to build warp drives or discover \u201cuniversally effective cancer treatments.\u201d And we\u2019ll undoubtedly need decades to understand quantum computers and time crystals properly. Google\u2019s paper is available  at this link. Moreover,\u00a0  Quanta Magazine also has a thorough roundup of Google\u2019s discovery, complete with an animation of a time crystal.\n  Today&#39;s Top Deal                List Price: $29.98    Price: $22.99    You Save: $6.99 (23%)          Buy Now  Available from Amazon, BGR may receive a commission  Available from Amazon BGR may receive a commission\n  Chris Smith started writing about gadgets as a hobby, and before he knew it he was sharing his views on tech stuff with readers around the world. Whenever he&#39;s not writing about gadgets he miserably fails to stay away from them, although he desperately tries. But that&#39;s not necessarily a bad thing.", "posttime": "2021-08-02 04:50:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c37\u6b4c,google,\u65f6\u95f4,\u91cf\u5b50", "title": "\u8c37\u6b4c\u65f6\u95f4\u6c34\u6676\u53d1\u73b0\u8fd9\u4e48\u5927\uff0c\u6211\u4eec\u5b8c\u5168\u770b\u4e0d\u61c2", "title_en": "Google\u2019s time crystal discovery is so big, we can\u2019t fully comprehend it", "transed": 1, "url": "https://bgr.com/tech/googles-time-crystal-discovery-is-so-big-we-cant-fully-comprehend-it/", "via": "", "real_tags": ["\u8c37\u6b4c", "google", "\u65f6\u95f4", "\u91cf\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071050, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86\u51e0\u4e2a\u4e0d\u7a33\u5b9a\u7684 Rust \u7f16\u8bd1\u5668\u7279\u6027\u3002\u5b83\u65e8\u5728\u89e3\u91ca\u8fd9\u4e9b\u7279\u6027\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u800c\u4e0d\u4f1a\u6df1\u5165\u7814\u7a76\u592a\u591a\u7ec6\u8282\u3002\u4e0d\u4ec5\u6bcf\u591c\u7f16\u8bd1\u5668\u6bcf\u5929\u90fd\u4f1a\u51fa\u73b0\uff0c\u800c\u4e14\u5b83\u8fd8\u662f\u552f\u4e00\u5141\u8bb8\u60a8\u89e3\u9501\u4e0d\u7a33\u5b9a\u7684 Rust \u529f\u80fd\u7684\u7f16\u8bd1\u5668\u3002\u672c\u6587\u8ba8\u8bba\u4e0d\u7a33\u5b9a\u7684\u7f16\u8bd1\u5668\u7279\u6027\u3002\u4e0d\u7a33\u5b9a\u7684\u5e93\u529f\u80fd\u662f\u53e6\u4e00\u4e2a\u8bdd\u9898\u3002\u4e0d\u7a33\u5b9a\u7684 Rust \u53ef\u4ee5\u8ba9\u4f60\u7f16\u5199\u5728\u7a33\u5b9a\u7684 Rust \u4e2d\u65e0\u6cd5\u8868\u8fbe\u7684 API\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u7f16\u8bd1\u5668\u548c\u6807\u51c6\u5e93\u4e2d\u90fd\u4f7f\u7528\u4e86\u4e0d\u7a33\u5b9a\u7684\u7279\u6027\u3002\u4f7f\u7528\u4e0d\u7a33\u5b9a\u7684\u7279\u6027\u603b\u662f\u4f34\u968f\u7740\u4e00\u4e9b\u98ce\u9669\u3002\u5b83\u4eec\u901a\u5e38\u4f1a\u4ee5\u610f\u60f3\u4e0d\u5230\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u6709\u65f6\u751a\u81f3\u4f1a\u7834\u574f Rust \u7684\u5185\u5b58\u5b89\u5168\u4fdd\u8bc1\u5e76\u5bfc\u81f4\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002\u90e8\u5206\u7279\u6027\u53ef\u4ee5\u5f88\u597d\u5730\u5f00\u53d1\uff0c\u800c\u5176\u4ed6\u90e8\u5206\u5219\u6ca1\u6709\u5f00\u53d1\u3002\u5bf9\u4e8e\u4f7f\u7528\u4e0d\u7a33\u5b9a\u529f\u80fd\u7684\u591c\u95f4\u7f16\u8bd1\u5668\uff0c\u9047\u5230\u901a\u5e38\u79f0\u4e3a ICE \u7684\u201c\u5185\u90e8\u7f16\u8bd1\u5668\u9519\u8bef\u201d\u5e76\u4e0d\u5c11\u89c1\u3002\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u5728\u7f16\u8bd1\u671f\u95f4\uff0c\u7f16\u8bd1\u5668\u6050\u614c\u3002\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u6570\u636e\u548c\u67e5\u8be2\u56e0\u4e0d\u5b8c\u6574\u7684\u529f\u80fd\u800c\u53d8\u5f97\u7578\u5f62\u6216\u751a\u81f3\u53ea\u662f\u6253\u4e00\u4e2a\u5f85\u529e\u4e8b\u9879\uff01\u5173\u4e8e\u5c1a\u672a\u5f00\u53d1\u7684\u529f\u80fd\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u60a8\u9047\u5230 ICE\uff0c\u68c0\u67e5\u95ee\u9898\u662f\u5426\u5df2\u77e5\uff0c\u5982\u679c\u4e0d\u77e5\u9053\uff0c\u5c06\u5176\u62a5\u544a\u7ed9\u9519\u8bef\u8ddf\u8e2a\u5668\u901a\u5e38\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002 Rust \u4e0d\u4fdd\u8bc1\u5b83\u4f1a\u5728\u672a\u6765\u7ee7\u7eed\u652f\u6301\u5176\u4e0d\u7a33\u5b9a\u7684\u7279\u6027\u3002\u4f5c\u4e3a Rust \u5f00\u53d1\u4eba\u5458\uff0c\u6211\u4eec\u88ab\u51fa\u8272\u7684\u5411\u540e\u517c\u5bb9\u6027\u548c\u7a33\u5b9a\u6027\u6240\u5ba0\u574f\u3002\u5f53\u542f\u7528\u4e0d\u7a33\u5b9a\u7684\u7279\u6027\u65f6\uff0c\u6240\u6709\u8fd9\u4e9b\u4fdd\u8bc1\u90fd\u4f1a\u88ab\u629b\u5f03\u3002\u4eca\u5929\u6709\u6548\u7684\u53ef\u80fd\u6709\u6548\u660e\u5929\u5927\u4e0d\u76f8\u540c\u3002\n\u6211\u51b3\u5b9a\u7814\u7a76\u4e0d\u7a33\u5b9a\u7684\u7279\u6027\u5e76\u4e0d\u662f\u56e0\u4e3a\u6211\u9700\u8981\u5b83\u4eec\u6765\u89e3\u51b3\u7279\u5b9a\u7684\u95ee\u9898\u3002\u6211\u5bfb\u627e\u5b83\u4eec\u662f\u56e0\u4e3a\u6211\u89c9\u5f97\u5b83\u4eec\u5f88\u6709\u8da3\u3002\u5bf9\u6211\u6765\u8bf4\u4f7f\u7528\u4e0d\u7a33\u5b9a\u7684\u7279\u6027\u662f\u4e00\u79cd\u8ba9\u66f4\u591a\u4eba\u53c2\u4e0e\u8bed\u8a00\u672c\u8eab\u5f00\u53d1\u8fc7\u7a0b\u7684\u6709\u8da3\u65b9\u5f0f.\u8981\u5f00\u59cb\u4f7f\u7528\u4e0d\u7a33\u5b9a\u7684\u529f\u80fd\uff0c\u60a8\u9700\u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u662f\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u6bcf\u665a\u5de5\u5177\u94fe\uff1a\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u5c06\u9ed8\u8ba4\u7f16\u8bd1\u5668\u66f4\u6539\u4e3a\u6bcf\u665a\uff0c\u8fd9\u6837\u60a8\u5c31\u4e0d\u9700\u8981\u4f7f\u7528 +nightly \u4fee\u9970\u7b26\u3002I&#39;\u6211\u7ecf\u5e38\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u53d1\u73b0\u591c\u95f4\u7f16\u8bd1\u5668\u592a\u4e0d\u7a33\u5b9a\uff0c\u5373\u4f7f\u5bf9\u4e8e\u6211\u7684\u9879\u76ee\u4e5f\u80fd\u5728\u7a33\u5b9a\u7248\u4e0a\u7f16\u8bd1\u5f97\u5f88\u597d\u3002\u4e00\u65e6\u4f60\u4f7f\u7528\u4e86\u591c\u95f4\u7f16\u8bd1\u5668\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e0d\u7a33\u5b9a\u7684\u7279\u6027\u4e86\u3002\u8ba9\u6211\u4eec\u8bd5\u4e00\u8bd5\u5427\u3002\u9519\u8bef[E0658]\uff1a\u6846\u8868\u8fbe\u5f0f\u8bed\u6cd5\u662f\u5b9e\u9a8c\u6027\u7684\uff1b\u4f60\u53ef\u4ee5\u6539\u4e3a\u8c03\u7528`Box::new` --&gt; src/main.rs: 2 : 18 | 2 |\u8ba9 my_box = \u6846 5 ; | ^^^^^ | = \u6ce8\u610f\uff1a\u8bf7\u53c2\u9605\u95ee\u9898 # 49733 &lt;https://github.com/rust-lang/rust/issues/49733&gt; \u4e86\u89e3\u66f4\u591a\u4fe1\u606f = \u5e2e\u52a9\uff1a\u5c06 `#![ \u529f\u80fd\uff08box_syntax\uff09]` \u6dfb\u52a0\u5230 crate \u5c5e\u6027\u4ee5\u542f\u7528 As\u5728 Rust \u4e2d\u7ecf\u5e38\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e2e\u52a9\u6d88\u606f\u544a\u8bc9\u6211\u4eec\u6211\u4eec\u9700\u8981\u505a\u4ec0\u4e48\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528 #![feature(box_syntax)] \u542f\u7528\u8be5\u529f\u80fd\u3002\u6240\u6709\u4e0d\u7a33\u5b9a\u7684\u7279\u6027\u90fd\u9700\u8981\u901a\u8fc7 #![feature(..)] \u542f\u7528\u624d\u80fd\u4f7f\u7528\u3002\u5982\u679c\u60a8\u5fd8\u8bb0\u4e86\uff0c\u7f16\u8bd1\u5668\u901a\u5e38\u80fd\u591f\u4e3a\u60a8\u6307\u660e\u6b63\u786e\u7684\u65b9\u5411\uff0c\u4f46\u662f\uff0c\u60c5\u51b5\u5e76\u975e\u603b\u662f\u5982\u6b64\u3002\n\u73b0\u5728\u8ba9\u6211\u4eec\u5f00\u59cb\u8ba8\u8bba\u4e00\u4e9b\u529f\u80fd\u672c\u8eab\u3002\u6211\u5df2\u7ecf\u5c06\u60a8\u9700\u8981\u5728\u4ee3\u7801\u5757\u4e2d\u542f\u7528\u7684\u529f\u80fd\u7684\u540d\u79f0\u653e\u5728\u6bcf\u4e2a\u529f\u80fd\u7684\u6807\u9898\u4e2d\uff0c\u540c\u65f6\u4ece\u4ee3\u7801\u7247\u6bb5\u4e2d\u7701\u7565\u5b83\u4eec\u4ee5\u4fdd\u6301\u7b80\u6d01\u3002\u5728 Rust \u4e2d\uff0c\u5728\u5c06\u7c7b\u578b\u7ed1\u5b9a\u5230\u5b9a\u4e49\u65f6\u5bf9\u5176\u8fdb\u884c\u89e3\u6784\u662f\u5f88\u5e38\u89c1\u7684\u3002\u8fd9\u901a\u5e38\u662f\u901a\u8fc7 let \u7ed1\u5b9a\u6765\u5b8c\u6210\u7684\u3002 // \u521b\u5efa\u4e24\u4e2a\u201c\u53d8\u91cf\u201d\uff0c\u4e00\u4e2a\u7528\u4e8e x\uff0c\u4e00\u4e2a\u7528\u4e8e y let Point { x, y } = Point::random();\u4f20\u7edf\u4e0a\uff0c\u8fd9\u79cd\u6a21\u5f0f\u53ea\u6709\u5728\u5b9e\u4f8b\u5316\u65b0\u5b9a\u4e49\u65f6\u624d\u6709\u53ef\u80fd\u3002 destructuring_assignment \u5c06\u5b83\u6269\u5c55\u5230\u5728\u6539\u53d8\u503c\u65f6\u5de5\u4f5c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u89e3\u6784\u800c\u4e0d\u4f7f\u7528 let\u3002 Rust \u9c9c\u4e3a\u4eba\u77e5\u7684\u7279\u6027\u4e4b\u4e00\u662f\u5faa\u73af\u53ef\u4ee5\u56e0\u503c\u800c\u4e2d\u65ad\u3002\u5c31\u50cf Rust \u5faa\u73af\u4e2d\u7684\u8bb8\u591a\u6784\u9020\u4e00\u6837\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u662f\u8bed\u53e5\uff0c\u800c\u662f\u8868\u8fbe\u5f0f\u3002 // \u4e0d\u65ad\u8981\u6c42\u7528\u6237\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u5230\u4ed6\u4eec\u7ed9\u6211\u4eec\u4e00\u4e2a\u6709\u6548\u7684 let \u6570\u5b57\uff1a u8 = loop { if let Ok(n) = input ().\u89e3\u6790\uff08\uff09{ \u4e2d\u65ad n\uff1b } else { println!(&quot;\u65e0\u6548\u53f7\u7801\uff0c\u8bf7\u8f93\u5165\u6709\u6548\u53f7\u7801&quot;); }}; label_break_value \u5c06\u6b64\u6269\u5c55\u4e3a\u9002\u7528\u4e8e\u4efb\u4f55\u5e26\u6807\u7b7e\u7684\u5757\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5faa\u73af\u3002\u8fd9\u4f5c\u4e3a\u4e00\u79cd\u65e9\u671f\u8fd4\u56de\uff0c\u9002\u7528\u4e8e\u4efb\u4f55\u4ee3\u7801\u5757\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u51fd\u6570\u4f53\u3002\n\u6211\u4eec\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u4f11\u606f\u65f6\u95f4\u8d34\u4e0a\u76f8\u540c\u7684\u6807\u7b7e\uff0c\u4ee5\u4fbf\u65e9\u65e5\u4ece\u8be5\u533a\u5757\u8fd4\u56de\u3002 let number = &#39;block: { if s. is_empty () { break &#39;block 0 ; // \u4ece\u5757\u4e2d\u63d0\u524d\u8fd4\u56de } s\u3002\u89e3\u6790\uff08\uff09\u3002 unwrap()} \u8fd9\u4e2a\u7279\u6027\u4e0d\u7b49\u540c\u4e8egoto\u3002\u5b83\u6ca1\u6709\u548cgoto\u4e00\u6837\u7684\u7834\u574f\u6548\u679c\uff0c\u56e0\u4e3a\u5b83\u53ea\u662f\u5411\u524d\u8d70\uff0c\u7136\u540e\u4ece\u4e00\u4e2a\u5757\u4e0a\u4e2d\u65ad\u3002 fn read_username_from_file () -&gt; Result&lt;String, io::Error&gt; { let f = File::open(&quot; username.txt &quot;);\u8ba9 mut f = \u5339\u914d f { Ok(file) =&gt; file, Err(e) =&gt; return Err(e), };\u8ba9 mut s = String::new();\u5339\u914d f. read_to_string (&amp; mut s) { Ok(_) =&gt; Ok(s), Err(e) =&gt; Err(e), }} fn read_username_from_file () -&gt; Result&lt;String, io::Error&gt; { let mut f = File::open(&quot;\u7528\u6237\u540d.txt&quot;)?;\u8ba9 mut s = String::new(); F\u3002 read_to_string (&amp; mut s)?;\u597d\u7684(s)} ?\u5728\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u4ee5\u5728\u9047\u5230 Err \u65f6\u63d0\u524d\u8fd4\u56de Err\u3002 try_blocks \u89e3\u9501\u76f8\u540c\u7684\u529f\u80fd\uff0c\u4f46\u9002\u7528\u4e8e\u4efb\u4f55\u4ee3\u7801\u5757\u800c\u4e0d\u4ec5\u4ec5\u662f\u51fd\u6570\u3002\u4f7f\u7528 try_blocks \u6211\u4eec\u53ef\u4ee5\u5185\u8054\u6211\u4eec\u7684 read_usernames_from_file \u51fd\u6570\u3002 try_blocks \u4e0e ?\u4e0e label_break_value \u4e0e return \u76f8\u5173\u7684\u65b9\u5f0f\u76f8\u540c\u3002 try_blocks \u7684 RFC \u63d0\u5230 label_break_value \u4f5c\u4e3a\u4e00\u79cd\u5bf9 try_blocks \u8fdb\u884c\u8131\u7cd6\u7684\u6f5c\u5728\u65b9\u5f0f\u3002\nlet read_username_from_file: Result&lt;String, io::Error&gt; = try { let mut f = File::open(&quot; username.txt &quot;)?;\u8ba9 mut s = String::new(); F\u3002 read_to_string (&amp; mut s)?; Ok(s)} \u6211\u559c\u6b22\u8fd9\u79cd\u4e1c\u897f\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u8f83\u5c0f\u7684\u8868\u8fbe\u5f0f\uff0c\u5f53\u4e0d\u63d0\u53d6\u5230\u51fd\u6570\u4e2d\u65f6\u53ef\u4ee5\u66f4\u5bb9\u6613\u9605\u8bfb\u3002\u76ee\u524d\uff0c\u5728\u7f16\u8bd1\u65f6\u83b7\u53d6\u8981\u8bc4\u4f30\u7684\u503c\u7684\u65b9\u6cd5\u662f\u5b9a\u4e49\u4e00\u4e2a\u5e38\u91cf\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0cconst \u5757\u51e0\u4e4e\u80af\u5b9a\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u5982\u5e38\u91cf\u4f20\u64ad\uff0c\u4f46\u662f\uff0c\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u5e38\u91cf\uff0c\u663e\u5f0f\u4f7f\u7528\u8be5\u5757\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u6b64\u529f\u80fd\u8fd8\u5141\u8bb8\u5c06\u8fd9\u4e9b\u5757\u7528\u4e8e\u6a21\u5f0f\u4f4d\u7f6e\u3002 match x { 1 + 3 =&gt; {} } \u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef\uff0c\u800c match x { const { 1 + 3 } =&gt; {} } \u4e0d\u4f1a\u3002\u6269\u5c55\u53ef\u4ee5\u4e0e match \u8bed\u53e5\u4e00\u8d77\u4f7f\u7528\u7684 if \u5b88\u536b\uff0c\u4ee5\u4fbf\u80fd\u591f\u4f7f\u7528 if let\u3002\u76ee\u524d\uff0cif let \u548c while let \u8868\u8fbe\u5f0f\u4e0d\u80fd\u7528 || \u94fe\u63a5\u8d77\u6765\u6216 &amp;&amp;\u3002\u6b64\u529f\u80fd\u6dfb\u52a0\u4e86\u8be5\u652f\u6301\u3002\nfn fizzbuzz () -&gt; impl Iterator&lt;Item = String&gt; { ( 1 ..). map (| val | match (val % 3 , val % 5 ) { ( 0 , 0 ) =&gt; &quot; FizzBu\u200b\u200bzz &quot;.to_string (), ( 0 , _) =&gt; &quot; Fizz &quot;.to_string (), (_, 0 ) =&gt; &quot; Buzz &quot;.to_string (), (_, _) =&gt; val.to_string (), })} fn flatten_twice &lt;T&gt;( iter : T) -&gt; Flatten&lt;Flatten&lt;T&gt;&gt; where T: Iterator , &lt;T as Iterator&gt;::Item: IntoIterator, &lt;&lt;T as Iterator&gt;::Item as IntoIterator&gt;::Item: IntoIterator,{ iter.\u538b\u5e73\uff08\uff09\u3002 flatten()} \u8fd9\u4e9b\u7279\u6027\u5141\u8bb8\u4f60\u5728\u66f4\u591a\u7684\u5730\u65b9\u5206\u522b\u4e3a\u6cdb\u578b\u7c7b\u578b\u3001\u5173\u8054\u7c7b\u578b\u548c\u5e38\u91cf\u53d8\u91cf\u6307\u5b9a\u9ed8\u8ba4\u503c\u3002\u8fd9\u5141\u8bb8\u60a8\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u521b\u5efa\u66f4\u597d\u7684 API\u3002\u5982\u679c crate \u7528\u6237\u5bf9\u7ec6\u8282\u4e0d\u611f\u5174\u8da3\uff0c\u5e76\u4e14\u8be5\u9879\u76ee\u5177\u6709\u9ed8\u8ba4\u503c\uff0c\u5219\u53ef\u4ee5\u7701\u7565\u8be5\u7ec6\u8282\u3002\u8fd9\u4e5f\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u6269\u5c55 API\uff0c\u800c\u65e0\u9700\u5bf9\u60a8\u7684\u7528\u6237\u8fdb\u884c\u91cd\u5927\u66f4\u6539\u3002\u8fd9\u4e24\u4e2a\u7279\u6027\u90fd\u5728\u6807\u51c6\u5e93\u4e2d\u4f7f\u7528\u3002\u7279\u5f81\u53d1\u9001\u548c\u540c\u6b65\u90fd\u662f\u81ea\u52a8\u7279\u5f81\u7684\u4f8b\u5b50\u3002\u8bf7\u6ce8\u610f auto \u5173\u952e\u5b57\u7684\u4f7f\u7528\u3002\u8fd9\u544a\u8bc9\u7f16\u8bd1\u5668\u4e3a\u4efb\u4f55\u7ed3\u6784/\u679a\u4e3e/\u8054\u5408\u81ea\u52a8\u5b9e\u73b0 Send \u7279\u5f81\uff0c\u53ea\u8981\u6784\u6210\u6240\u8ff0\u7c7b\u578b\u7684\u6240\u6709\u7c7b\u578b\u4e5f\u5b9e\u73b0 Send\u3002\u5982\u679c\u53ea\u662f\u6bcf\u4e2a\u7c7b\u578b\u603b\u662f\u5b9e\u73b0\u5b83\u4eec\uff0c\u81ea\u52a8\u7279\u5f81\u5c31\u4e0d\u4f1a\u5f88\u6709\u7528\u3002\u8fd9\u5c31\u662fnegative_impls \u7684\u7528\u6b66\u4e4b\u5730\u3002\nnegative_impls \u5141\u8bb8\u7c7b\u578b\u9009\u62e9\u9000\u51fa\u5b9e\u73b0\u81ea\u52a8\u7279\u5f81\u3002\u4ee5 UnsafeCell \u4e3a\u4f8b\u3002\u8de8\u7ebf\u7a0b\u5171\u4eab\u4e0d\u53d7\u9650\u5236\u7684 UnsafeCell \u5c06\u662f\u975e\u5e38\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u6b64\u5b83\u662f Sync \u5c06\u662f\u975e\u5e38\u4e0d\u5b89\u5168\u7684\u3002 Rust \u4e0d\u5141\u8bb8\u5b9a\u4e49\u53ef\u80fd\u91cd\u53e0\u7684\u7279\u6027\u5b9e\u73b0\u3002\u8fd9\u6837\u7f16\u8bd1\u5668\u5c06\u59cb\u7ec8\u77e5\u9053\u8981\u4f7f\u7528\u54ea\u4e2a\u5b9e\u73b0\uff0c\u56e0\u4e3a\u603b\u662f\u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u3002\u7528#[marker] \u6807\u8bb0\u7684\u7279\u5f81\u4e0d\u80fd\u8986\u76d6\u5176\u5b9e\u73b0\u4e2d\u7684\u4efb\u4f55\u5185\u5bb9\u3002\u8fd9\u6837\u5b83\u4eec\u5c31\u53ef\u4ee5\u6709\u91cd\u53e0\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u5b9e\u73b0\u90fd\u662f\u76f8\u540c\u7684\u3002 impl Trait \u544a\u8bc9\u7f16\u8bd1\u5668\u63a8\u65ad\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\u6765\u66ff\u6362\u5b83\u5b9e\u73b0 Trait\u3002\u76ee\u524d\uff0cimpl Trait \u4ec5\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u6216\u8fd4\u56de\u7c7b\u578b\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002 type_alias_impl_trait \u548c impl_trait_in_bindings \u6269\u5c55\u4e86 impl trait \u53ef\u7528\u4e8e\u5206\u522b\u5305\u542b\u7c7b\u578b\u522b\u540d\u548c let \u7ed1\u5b9a\u7684\u5730\u65b9\u3002 trait_alias \u4e0e type_alias_impl_trait \u6709\u7ec6\u5fae\u7684\u4e0d\u540c\u3002\u5728\u4f60\u4f7f\u7528\u7c7b\u578b\u522b\u540d\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u7c7b\u578b\u90fd\u5fc5\u987b\u4fdd\u6301\u4e0d\u53d8\u3002\u7f16\u8bd1\u5668\u5fc5\u987b\u63a8\u65ad\u51fa\u5728\u6240\u6709\u8fd9\u4e9b\u5730\u65b9\u5de5\u4f5c\u7684\u5355\u4e00\u5177\u4f53\u7c7b\u578b\u3002\u7279\u8d28\u522b\u540d\u66f4\u5bbd\u5bb9\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u6bcf\u4e2a\u5730\u65b9\u90fd\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u7c7b\u578b\u4f7f\u7528\u5b83\u4eec\u7684\u5730\u65b9\u3002\u4e09\u4e2a\u7279\u5f81 Fn\u3001FnMut \u548c FnOnce \u88ab\u79f0\u4e3a fn \u7279\u5f81\u3002\u5b83\u4eec\u4f1a\u81ea\u52a8\u4e3a\u60a8\u521b\u5efa\u7684\u4efb\u4f55\u51fd\u6570\u6216\u95ed\u5305\u5b9e\u73b0\uff0c\u5e76\u63d0\u4f9b\u5411\u5b83\u4eec\u4f20\u9012\u53c2\u6570\u7684\u80fd\u529b\u3002\n\u81ea\u52a8\u5b9e\u73b0\u662f\u76ee\u524d\u5b9e\u73b0\u8fd9\u4e9b\u7279\u5f81\u7684\u552f\u4e00\u65b9\u6cd5\u3002fn_traits \u7279\u6027\u5141\u8bb8\u5bf9\u4efb\u4f55\u7c7b\u578b\u8fdb\u884c\u81ea\u5b9a\u4e49\u5b9e\u73b0\u3002\u8fd9\u4e0e\u8fd0\u7b97\u7b26\u91cd\u8f7d\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u81ea\u5b9a\u4e49\u4e86 () \u7684\u4f7f\u7528\u3002 #![ feature (unboxed_closures)] // \u9700\u8981\u7528`extern &quot;rust-call&quot;`\u6765\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570#![ feature (fn_traits)] struct Multiply;#[ allow (non_upper_case_globals)] const multiply: Multiply = Multiply; impl FnOnce&lt;( u32 , u32 )&gt; for Multiply { type Output = u32 ; extern &quot;rust-call&quot; fn call_once ( self , a : ( u32 , u32 )) -&gt; Self:: Output { a. 0 * \u4e00\u4e2a\u3002 1 }} impl FnOnce&lt;( u32 , u32 , u32 )&gt; for Multiply { type Output = u32 ; extern &quot;rust-call&quot; fn call_once ( self , a : ( u32 , u32 , u32 )) -&gt; Self:: Output { a. 0 * \u4e00\u4e2a\u3002 1 * \u4e00\u4e2a\u3002 2 }} impl FnOnce&lt;(&amp; str , usize )&gt; for Multiply { type Output = String; extern &quot;rust-call&quot; fn call_once ( self , a : (&amp; str , usize )) -&gt; Self:: Output { a. 0. \u91cd\u590d (a. 1 ) }} fn main () { assert_eq!( \u4e58\u6cd5 ( 2 , 3 ), 6 ); assert_eq!( \u4e58\u6cd5 ( 2 , 3 , 4 ), 24 ); assert_eq!( multiply (&quot; hello &quot;, 3 ), &quot; hello hello hello &quot;);} \u8bf7\u6ce8\u610f\uff0c\u8fd9\u88ab\u7528\u4e8e\u521b\u5efa\u51fd\u6570\u91cd\u8f7d\u548c\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u7684hacky \u7248\u672c\u3002\u8fd9\u4e24\u4e2a\u7279\u6027\u4f7f\u6784\u5efa\u548c\u9500\u6bc1 Boxes \u66f4\u5bb9\u6613\u3002 box \u5173\u952e\u5b57\u66ff\u6362 Box::new(..) \u5e76\u5141\u8bb8\u5728\u6a21\u5f0f\u5339\u914d\u65f6\u53d6\u6d88\u5f15\u7528 Boxes\u3002 struct TrashStack&lt;T&gt; { head : T, body : Option&lt;Box&lt;TrashStack&lt;T&gt;&gt;&gt;,} impl &lt;T&gt; TrashStack&lt;T&gt; { pub fn push ( self , elem : T) -&gt; Self { Self { head : elem, body: Some(box self ), } } pub fn peek ( self ) -&gt; Option&lt;T&gt; { if let TrashStack { body: Some(box TrashStack { head, .. }), .. } = self { Some(head) } else { None } }} \u8fd9\u8ba9\u4e8b\u60c5\u66f4\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd9\u4e2a\u529f\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u7a33\u5b9a\u7684\u53ef\u80fd\u6027\u5f88\u5927\u3002\u5b83\u4f3c\u4e4e\u6c38\u8fdc\u5b58\u5728\uff0c\u6ca1\u6709\u7a33\u5b9a\u7684\u8ba1\u5212\uff0c\u800c\u662f\u4e00\u4e2a\u5173\u4e8e\u5220\u9664\u8be5\u529f\u80fd\u7684\u8ba8\u8bba\u5f88\u5c11\u3002 box_synatx \u5728\u7f16\u8bd1\u5668\u7684\u6e90\u4ee3\u7801\u4e2d\u5927\u91cf\u4f7f\u7528\uff0c\u5728\u6807\u51c6\u5e93\u4e2d\u4f7f\u7528\u5f88\u5c11\u3002\u6709\u8da3\u7684\u662f\uff0cbox \u5e76\u6ca1\u6709\u5bf9 Box::new \u8fdb\u884c\u8131\u7cd6\uff0c\u4f46\u662f Box::new \u662f\u5728\u6807\u51c6\u5e93\u4e2d\u7528 box \u5b9e\u73b0\u7684\u3002\nimpl &lt;T&gt; Box&lt;T&gt; { ... pub fn new ( x : T) -&gt; Self { box x } ...} \u76ee\u524d\u8981\u5728\u95ed\u5305\u5185\u5f02\u6b65\uff0c\u4f60\u5fc5\u987b\u4f7f\u7528\u5f02\u6b65\u5757\u3002 async_closure \u5141\u8bb8\u60a8\u5c06\u95ed\u5305\u672c\u8eab\u6807\u8bb0\u4e3a\u5f02\u6b65\uff0c\u5c31\u50cf\u4f7f\u7528\u5f02\u6b65\u51fd\u6570\u4e00\u6837\u3002\u8fd9\u5141\u8bb8\u5c06\u547d\u540d\u53c2\u6570\u653e\u7f6e\u5728\u4efb\u4f55\u4f9d\u8d56\u4e8e std::format_args! \u7684\u5b8f\u5185\u7684\u5b57\u7b26\u4e32\u5185\u3002\u8fd9\u5305\u62ec\u6253\u5370\uff01\uff0c\u683c\u5f0f\uff01\uff0c\u5199\uff01\u8fd8\u6709\u5f88\u591a\u3002\u4f7f\u7528\u6b64\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u7f16\u5199 crate struct Foo \u800c\u4e0d\u662f pub(crate) struct Foo \u5e76\u4f7f\u5176\u542b\u4e49\u5b8c\u5168\u76f8\u540c\u3002\u8fd9\u4f7f\u5f97 pub(crate) \u66f4\u5bb9\u6613\u7f16\u5199\uff0c\u9f13\u52b1\u5728\u4e0d\u9700\u8981\u5b8c\u6574\u7684 pub \u65f6\u4f7f\u7528 crate \u53ef\u89c1\u6027\u3002\u8fd9\u4e0d\u4f1a\u7f16\u8bd1\uff0c\u56e0\u4e3a Rust \u65e0\u6cd5\u63a8\u65ad\u5355\u8bcd\u7684\u7c7b\u578b\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5c06\u7b2c\u4e00\u884c\u66ff\u6362\u4e3a\uff1a\n:Type \u8bed\u6cd5\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u6765\u63d0\u793a\u7f16\u8bd1\u5668\u201c\u6211\u73b0\u5728\u60f3\u8981\u8fd9\u4e2a\u7c7b\u578b\u201d\u3002\u53ef\u4ee5\u5b9a\u4e49\u5177\u6709\u96f6\u53d8\u4f53\u7684\u679a\u4e3e\u3002\u8fd9\u6837\u7684\u679a\u4e3e\u5728\u6807\u51c6\u5e93\u4e2d\u7a33\u5b9a\u5b58\u5728\u3002\u53ef\u4ee5\u5728\u6cdb\u578b\u548c\u51fd\u6570\u7b7e\u540d\u4e2d\u4f7f\u7528\u8fd9\u79cd\u7c7b\u578b\uff0c\u4f46\u6c38\u8fdc\u4e0d\u53ef\u80fd\u6784\u9020\u5b83\u3002\u6839\u672c\u6ca1\u6709\u8981\u6784\u9020\u7684\u53d8\u4f53\u3002\u5355\u4f4d\u7c7b\u578b () \u5c06\u7b49\u6548\u4e8e\u5177\u6709\u5355\u4e2a\u53d8\u4f53\u7684\u679a\u4e3e\u3002 never_type \u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7c7b\u578b\uff0c\uff01\u8fd9\u76f8\u5f53\u4e8e\u6211\u4eec\u5177\u6709\u96f6\u53d8\u4f53\u7684 Infallible \u679a\u4e3e\u3002\u56e0\u4e3a \uff01\u6c38\u8fdc\u65e0\u6cd5\u5efa\u9020\u5b83\u53ef\u4ee5\u88ab\u8d4b\u4e88\u7279\u6b8a\u7684\u529b\u91cf\u3002\u6211\u4eec\u4e0d\u5fc5\u5904\u7406\u7684\u60c5\u51b5\uff01\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u5b83\u6c38\u8fdc\u4e0d\u4f1a\u5b58\u5728\u3002 \uff01\u5bf9\u4e8e\u5728\u7c7b\u578b\u7cfb\u7edf\u4e2d\u8868\u8fbe\u4e0d\u53ef\u80fd\u7684\u7ed3\u679c\u975e\u5e38\u6709\u7528\u3002\u4ee5\u8fd9\u4e2a UserName \u7c7b\u578b\u7684 FromStr \u5b9e\u73b0\u4e3a\u4f8b\u3002\u8fd9\u4e2a\u5b9e\u73b0\u662f\u7edd\u5bf9\u53ef\u9760\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u5b9e\u73b0\u6c38\u8fdc\u4e0d\u4f1a\u5931\u8d25\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5c06 Err \u53d8\u4f53\u8bbe\u7f6e\u4e3a\u7c7b\u578b\uff01\u3002\u7ed3\u6784\u4f53\u7528\u6237\u540d\uff08\u5b57\u7b26\u4e32\uff09\uff1b impl FromStr for UserName { type Err = !; fn from_str ( s : &amp; str ) -&gt; Result&lt; Self , Self:: Err&gt; { Ok( Self (s.to_owned ())) }}\n\u7136\u540e\u53ef\u4ee5\u5728 Err \u53d8\u4f53\u4e0a\u4f7f\u7528\u7a7a\u5339\u914d\uff0c\u56e0\u4e3a !\u6ca1\u6709\u53d8\u4f53\u3002\u6709\u4e86exhaustive_patterns \u7279\u6027\uff0c\u7c7b\u578b\u7cfb\u7edf\u53d8\u5f97\u8db3\u591f\u667a\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u6d88\u9664Err \u5206\u652f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u4e0e\u89e3\u6784\u76f8\u7ed3\u5408\uff0c\u4ee5\u79fb\u9664\u5339\u914d\u9879\uff0c\u7559\u4e0b\u4e00\u884c\u6f02\u4eae\u7684\u4ee3\u7801\u3002\u53ef\u4ee5\u4f7f\u7528 opt-level \u6307\u5b9a\u5982\u4f55\u4f7f\u7528 Cargo.toml \u4f18\u5316\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002 opt-level \u5f71\u54cd\u6574\u4e2a crate\uff0c\u800c optimize_attribute \u53ef\u4ee5\u63a7\u5236\u5355\u4e2a\u9879\u76ee\u7684\u4f18\u5316\u3002\u8fd9\u5bf9\u4e8e\u5c3a\u5bf8\u548c\u6027\u80fd\u4e4b\u95f4\u7684\u6743\u8861\u7279\u522b\u660e\u663e\u7684\u5fae\u8c03\u5e94\u7528\u7a0b\u5e8f\u975e\u5e38\u6709\u7528\uff0c\u4f8b\u5982\u5728\u4f7f\u7528 Web \u7ec4\u4ef6\u65f6\u3002\u6b64\u529f\u80fd\u5141\u8bb8\u60a8\u5c06\u5c5e\u6027\u653e\u7f6e\u5728\u51e0\u4e4e\u6240\u6709\u5730\u65b9\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u9876\u7ea7\u9879\u76ee\u3002\u4f8b\u5982\uff0c\u4f7f\u7528\u6b64\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728\u95ed\u5305\u4e0a\u653e\u7f6e\u4f18\u5316\u5c5e\u6027\u3002\n#[ cfg ( version (&quot; 1.42 &quot;))] // 1.42 \u53ca\u4ee5\u4e0a fn a () { // ... }#[ cfg ( not ( version (&quot; 1.42 &quot;)))] // 1.41 \u53ca\u4ee5\u4e0b fn a () { // ... } \u8fd9\u5141\u8bb8 crate \u4f7f\u7528\u6700\u65b0\u7684\u7f16\u8bd1\u5668\u529f\u80fd\uff0c\u540c\u65f6\u4ecd\u7136\u4fdd\u6301\u5bf9\u65e7\u7f16\u8bd1\u5668\u7684\u56de\u9000\u652f\u6301\u3002\u4f7f\u7528#![no_std] \u6682\u65f6\u53ef\u4ee5\u9009\u62e9\u4e0d\u4f7f\u7528\u6807\u51c6\u5e93\u3002\u8fd9\u5bf9\u4e8e\u4e0d\u5728\u5b8c\u6574\u73af\u5883\uff08\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff09\u4e2d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u5f88\u91cd\u8981\u3002\u5d4c\u5165\u5f0f\u7cfb\u7edf\u901a\u5e38\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\u751a\u81f3\u662f\u52a8\u6001\u5185\u5b58\uff0c\u56e0\u6b64 std \u4e2d\u7684\u8bb8\u591a\u529f\u80fd\u90fd\u4e0d\u8d77\u4f5c\u7528\u3002 #![no_core] \u8fdb\u4e00\u6b65\u9009\u62e9\u9000\u51fa libcore\u3002\u8fd9\u8ba9\u4f60\u51e0\u4e4e\u4e00\u65e0\u6240\u6709\uff0c\u4f60\u751a\u81f3\u4e0d\u80fd\u4f7f\u7528 libc\u3002\u8fd9\u4f7f\u5f97\u5b9e\u73b0\u4efb\u4f55\u6709\u7528\u7684\u4e1c\u897f\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u3002\u6211\u5728 Rust Dublin \u7684\u6f14\u8bb2\u4e2d\u8c08\u5230\u4e86 const_generics \u7684\u672a\u6765\u3002\u4e0e\u5176\u91cd\u7533\u6211\u5728\u90a3\u91cc\u6240\u8bf4\u7684\u8bdd\uff0c\u6211\u9f13\u52b1\u4f60\u89c2\u770b\u90a3\u4e2a\u6f14\u8bb2\u3002 Rust \u7684\u58f0\u660e\u6027\u5b8f\u975e\u5e38\u5f3a\u5927\uff0c\u4f46\u662f\u4e00\u4e9b\u5173\u4e8e macro_rules \u7684\u89c4\u5219\uff01\u4e00\u76f4\u8ba9\u6211\u56f0\u60d1\u3002\u4e00\u65b9\u9762\uff0cmacro_rules\uff01\u4f5c\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u6807\u8bb0\u8f6c\u6362\u3002\u5b83\u9700\u8981\u4e00\u4e2a\u6807\u8bb0\u5217\u8868\u5e76\u8f93\u51fa\u4e00\u4e2a\u65b0\u7684\u6807\u8bb0\u5217\u8868\uff0c\u6ca1\u6709\u6bd4\u8fd9\u66f4\u806a\u660e\u7684\u4e86\u3002\u516c\u5f00\u89c4\u5219\u6700\u7ec8\u662f\u5b8f\u88ab\u8c03\u7528\u7684\u89c4\u5219\u3002\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u56e0\u4e3a\u4ee3\u7801\u6b63\u5728\u7b80\u5355\u5730\u7c98\u8d34\u5230\u90a3\u4e2a\u5730\u65b9\u3002\nMacros 2.0 \u662f\u4e00\u4e2a rfc\uff0c\u63cf\u8ff0\u4e86\u5bf9 macro_rules \u7684\u66ff\u4ee3\uff01\u53ea\u9700\u4f7f\u7528\u5173\u952e\u5b57\u5b8f\u5c31\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684\u6784\u9020\u3002\u65b0\u8bed\u6cd5\u5f15\u5165\u7684\u4e3b\u8981\u6539\u8fdb\u4e4b\u4e00\u662f\u5b8f\u536b\u751f\uff0c\u5b83\u5141\u8bb8\u5b8f\u4f7f\u7528\u5b83\u4eec\u7f16\u5199\u4f4d\u7f6e\u800c\u4e0d\u662f\u8c03\u7528\u4f4d\u7f6e\u7684\u516c\u5f00\u89c4\u5219\u3002\u751f\u6210\u5668/\u534f\u7a0b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u6682\u505c\u4ee5\u5c06\u4e2d\u95f4\u503c\u201c\u4ea7\u751f\u201d\u7ed9\u8c03\u7528\u8005\u3002\u751f\u6210\u5668\u53ef\u4ee5\u4f7f\u7528 yield \u5173\u952e\u5b57\u8fd4\u56de\u591a\u4e2a\u503c\uff0c\u6bcf\u6b21\u6682\u505c\u51fd\u6570\u5e76\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\u3002\u7136\u540e\u751f\u6210\u5668\u53ef\u4ee5\u8fd4\u56de\u5355\u4e2a\u503c\uff0c\u4e4b\u540e\u5c31\u4e0d\u80fd\u518d\u6062\u590d\u4e86\u3002\u5927\u7ea6\u4e09\u5e74\u524d\uff0c\u6211\u8bd5\u56fe\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u6cbf\u5bf9\u89d2\u7ebf\u904d\u5386\u4e00\u4e2a\u65e0\u9650\u77e9\u9635\u3002\u6211\u53d1\u73b0\u7528 Rust \u7684\u8fed\u4ee3\u5668\u5f88\u96be\u7f16\u5199\u5b83\uff0c\u6700\u7ec8\u653e\u5f03\u4e86\u3002\u8fd9\u662f\u4f7f\u7528 Rust \u7684\u751f\u6210\u5668/\u534f\u7a0b\u4ee5\u53ca\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u7684\u8bb8\u591a\u5176\u4ed6\u529f\u80fd\u7684\u5b9e\u73b0\u3002 #![ \u7279\u5f81 (try_blocks, generators, generator_trait, associated_type_bounds, type_ascription)] \u4f7f\u7528 std::{ iter, ops::{Generator, GeneratorState}, pin::Pin,}; /// \u8f93\u5165/// [[1, 2, 3]/// ,[4, 5, 6]/// ,[7, 8, 9]]/// \u8f93\u51fa/// [1, 2, 4, 3, 5, 7] fn diagonalize &lt;T&gt;( mut matrix : impl Iterator&lt;Item: Iterator&lt;Item = T&gt;&gt;,) -&gt; impl Generator&lt;Yield = T, Return = ()&gt; { move || { \u8ba9 mut \u884c = Vec::new(); (try {rows.push(matrix.next()?); for height in 0 .. { for row in 0 ..height { if row &gt;= rows.len() { rows.push (matrix.next()? ); } yield rows[row].next ()?; } } }): Option&lt;()&gt;; }} fn main () { \u8ba9\u77e9\u9635 = ( 0 ..)\u3002 map(| x | iter::once(x).cycle().enumerate());\u8ba9 mut diagonals = diagonalize (matrix);\u800c\u8ba9 GeneratorState::Yielded(value) = Pin::new(&amp; mut diagonals)\u3002\u7b80\u5386 (()) { dbg!(value); }}\n\u5982\u679c\u60a8\u53d1\u73b0\u4e0a\u8ff0\u4ee3\u7801\u6bb5\u96be\u4ee5\u89e3\u91ca\uff0c\u8fd9\u662f\u53ef\u4ee5\u7406\u89e3\u7684\u3002\u5b83\u5229\u7528\u4e86\u60a8\u53ef\u80fd\u521a\u521a\u4e86\u89e3\u7684\u8bb8\u591a\u529f\u80fd\u3002\u6709\u4e00\u4e2a\u4ee4\u4eba\u4fe1\u670d\u7684\u8bba\u636e\u53cd\u5bf9\u6dfb\u52a0\u592a\u591a\u65b0\u529f\u80fd\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u5927\u5927\u589e\u52a0\u5b66\u4e60\u66f2\u7ebf\u3002\u751f\u6210\u5668\u4f7f\u5f97\u7f16\u5199\u6ca1\u6709\u5b83\u4eec\u66f4\u96be\u751a\u81f3\u4e0d\u53ef\u80fd\u7f16\u5199\u7684\u5b9e\u73b0\u6210\u4e3a\u53ef\u80fd\u3002\u5728\u6807\u51c6\u5e93\u4e2d\u6dfb\u52a0\u4e86\u751f\u6210\u5668\u6765\u5b9e\u73b0 async-await\u3002\u5728\u4efb\u4f55\u7c7b\u578b\u7684\u7a33\u5b9a\u4e4b\u524d\uff0c\u786e\u5207\u7684\u8bed\u4e49\u5f88\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4f46\u5b83\u4eec\u73a9\u8d77\u6765\u5f88\u6709\u8da3\u3002\u6211\u5fc5\u987b\u4e3a\u6ca1\u6709\u5305\u542b\u4e09\u4e2a\u60ca\u4eba\u7684\u4e0d\u7a33\u5b9a\u7279\u6027\u800c\u9053\u6b49\uff1b\u6cdb\u578b\u5173\u8054\u7c7b\u578b\u3001\u5185\u8054\u6c47\u7f16\u548c\u4e13\u4e1a\u5316\u3002\u6211\u53ea\u662f\u89c9\u5f97\u65e0\u6cd5\u5728\u672c\u6587\u4e2d\u5bf9\u8fd9\u4e9b\u529f\u80fd\u8fdb\u884c\u516c\u6b63\u7684\u8bc4\u4ef7\uff0c\u4f46\u6211\u53ef\u80fd\u4f1a\u5728\u5c06\u6765\u5c1d\u8bd5\u8ba8\u8bba\u5b83\u4eec\u3002\u5982\u679c\u60a8\u60f3\u9605\u8bfb\u6709\u5173\u4e0d\u7a33\u5b9a\u529f\u80fd\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u6700\u597d\u7684\u8d77\u70b9\u662f\u4e0d\u7a33\u5b9a\u7684\u4e66\uff0c\u5176\u4e2d\u5217\u51fa\u4e86\u5927\u591a\u6570\u3002\u4e0d\u7a33\u5b9a\u7684\u4e66\u7136\u540e\u94fe\u63a5\u5230\u8ddf\u8e2a\u95ee\u9898\uff0c\u7136\u540e\u901a\u5e38\u53c8\u94fe\u63a5\u5230 RFC\u3002\u4f7f\u7528\u8fd9\u79cd\u7ec4\u5408\u6e90\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u6784\u5efa\u529f\u80fd\u5468\u56f4\u7ec6\u8282\u7684\u56fe\u7247\u3002\u611f\u8c22\u60a8\u9605\u8bfb\u6211\u7684\u7b2c\u4e00\u7bc7\u535a\u6587\ud83d\ude03\u3002\u652f\u6301\u6211\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u5173\u6ce8\u6211\u7684\u63a8\u7279\u3002\u6211\u4e5f\u5728\u5bfb\u627e\u5de5\u4f5c\u673a\u4f1a\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u60f3\u8c08\u8bba\u8fd9\u4e2a\uff0c\u8bf7\u4e0e\u6211\u4eec\u8054\u7cfb\u3002", "note_en": "This article describes several unstable Rust compiler features.It is intended to explain the basics of these features without diving into too much detail.\n   Not only does the nightly compiler come out every day, but it also is the only compiler that allows you to unlock unstable Rust features.\n This article discusses unstable compiler features. Unstable library features are another topic for another day.\n  Unstable Rust can enable you to write API&#39;s that you could not express in stable Rust. Unstable features are used within both the compiler and standard library for that very reason.\n Using unstable features always comes with some risk.They can often behave in unexpected ways, sometimes even breaking Rust&#39;s memory safety guarantees and resulting in undefined behaviour.Parts of features can be well developed while other parts left undeveloped.\n It is not uncommon for a nightly compiler using unstable features, to hit an &#34;internal compiler error&#34; often called an  ICE.This happens when, during compilation, the compiler panics.This could be due to data and queries becoming malformed by incomplete features or even just hitting a  todo! on part of a feature that has not been worked on yet.If you run into an ICE it is often helpful to check if the issue is known about and if it is not, to report it to the  bug tracker.\n Rust provides no guarantee that it will continue to support its unstable features into the future.As Rust developers, we are spoilt with excellent backwards compatibility and stability.When unstable features are enabled, all of those guarantees are thrown out.What works today may work very differently tomorrow.\n I decided to look into unstable features not because I need them to solve a particular problem.I sought them out because I thought they were fun.Using unstable features for me was an interesting way of getting more involved in the development process of the language itself.\n   To start using unstable features the first thing you&#39;ll need to do is install a nightly toolchain by running the command:\n      Alternatively, you can change your default compiler to nightly so that you won&#39;t need to use the  +nightly modifier.I&#39;ve often done this as I haven&#39;t found the nightly compiler to be too unstable, even for my projects that also compile fine on stable.\n  Once you are using the nightly compiler you can just start using unstable features.Let&#39;s give it a go.\n   error[ E0658 ]: box expression syntax is experimental; you can call `Box::new` instead --&gt; src/main.rs: 2 : 18  | 2  |  let  my_box = box  5 ; | ^^^^^ | = note: see issue # 49733  &lt;https: //github.com/rust-lang/rust/issues/49733&gt; for more information  = help: add `#![ feature (box_syntax)]` to the  crate  attributes to enable\n As is so often the case in Rust the  help message tells us exactly what we need to do.We need to enable the feature using  #![feature(box_syntax)].\n  All unstable features will need to be enabled with  #![feature(..)] before they can be used.If you forget, the compiler is often able to point you in the right direction, however, this is not always the case.\n Now let&#39;s get started talking about some of the features themselves.I&#39;ve placed the names of the features that you need to enable in  code blocks in the headings for each feature while omitting them from the code snippets to keep them concise.\n   It is very common in Rust to destructure a type when binding it to a definition.This is most commonly done with a  let binding.\n // Create two &#34;variables&#34;, one for x, one for y  let  Point { x, y } = Point::random();\n Traditionally this pattern has only been possible when instantiating a new definition. destructuring_assignment extends this to work when mutating values.In other words, we can use destructuring without using  let.\n   One of the less well-known Rust features is the fact that   loops can break with a value.Like many of the constructs in Rust loops are not just statements, but  expressions.\n // Keep asking the user to input an number until they give us a valid one let  number:  u8  =  loop  {  if let  Ok(n) =  input (). parse () {  break  n; }  else  { println!(&#34; Invaid number, Please input a valid number &#34;); }};\n label_break_value extends this to work on any labelled block, not just loops.This acts as a kind of early  return that works on any block of code, not just function bodies.\n    We can put the same label on our  break to early return from that block.\n let  number = &#39;block: {  if  s. is_empty () {\t break &#39;block  0 ;  // Early return from block  } s. parse (). unwrap ()}\n This feature is  not equivalent to goto.It does not have the same damaging effects as goto as it only goes forward and breaks from a block.\n   fn  read_username_from_file () -&gt; Result&lt;String, io::Error&gt; {  let  f = File::open(&#34; username.txt &#34;);  let mut  f =  match  f { Ok(file) =&gt; file, Err(e) =&gt;  return  Err(e), };  let mut  s = String::new();  match  f. read_to_string (&amp; mut  s) { Ok(_) =&gt; Ok(s), Err(e) =&gt; Err(e), }}\n  fn  read_username_from_file () -&gt; Result&lt;String, io::Error&gt; {  let mut  f = File::open(&#34; username.txt &#34;)?;  let mut  s = String::new(); f. read_to_string (&amp; mut  s)?; Ok(s)}\n ? is used in the context of functions to early return an  Err if encountered. try_blocks unlock the same power but for any block of code rather than just functions.With  try_blocks we can inline our  read_usernames_from_file function.\n try_blocks relate to  ? in the same way that  label_break_value relates to  return.The RFC for  try_blocks mentions  label_break_value as a potential way of desugaring  try_blocks.\n  let  read_username_from_file: Result&lt;String, io::Error&gt; = try {  let mut  f = File::open(&#34; username.txt &#34;)?;  let mut  s = String::new(); f. read_to_string (&amp; mut  s)?; Ok(s)}\n I love this kind of thing especially for smaller expressions that can be made easier to read when not extracted into functions.\n  Currently, the way to get a value to be evaluated at compile time is by defining a constant.\n    With this simple example, the  const block is almost certainly not necessary, due to compiler optimisations such as  constant propagation,however, with more complex constants, it may be helpful to be explicit with the block.\n This feature also allows for these blocks to be used in pattern position. match x { 1 + 3 =&gt; {} } results in a syntax error while  match x { const { 1 + 3 } =&gt; {} }does not.\n  Extends the   if guards that you can use with  match statements to be able to use  if let.\n  Currently,  if let and  while let expressions can not be chained with  || or  &amp;&amp;.This feature adds that support.\n    fn  fizzbuzz () -&gt; impl Iterator&lt;Item = String&gt; { ( 1 ..). map (| val |  match  (val %  3 , val %  5 ) { ( 0 ,  0 ) =&gt; &#34; FizzBuzz &#34;. to_string (), ( 0 , _) =&gt; &#34; Fizz &#34;. to_string (), (_,  0 ) =&gt; &#34; Buzz &#34;. to_string (), (_, _) =&gt; val. to_string (), })}\n    fn  flatten_twice &lt;T&gt;( iter : T) -&gt; Flatten&lt;Flatten&lt;T&gt;&gt; where  T: Iterator, &lt;T as Iterator&gt;::Item: IntoIterator, &lt;&lt;T as Iterator&gt;::Item as IntoIterator&gt;::Item: IntoIterator,{ iter. flatten (). flatten ()}\n     These features allow you to specify default values for  generic types,  associated types and  const variables respectively in more places.\n This allows you as a developer to create nicer APIs.If a crate user is not interested in a detail and that item has a default then the detail can be omitted.This also makes it easier to extend APIs without making breaking changes for your users.\n  Both of these features are used in the standard library. The traits   Send and   Sync are both examples of auto traits.\n   Note the use of the  auto keyword.This tells the compiler to automatically implement the  Send trait for any struct/enum/union as long as all the types that make up said type also implement  Send.\n Auto traits would not be very useful if simply every type always implemented them.That is where  negative_impls come in.\n negative_impls allows for a type to opt-out from implementing an auto trait.Take for example  UnsafeCell. It would be very unsafe for an unrestricted  UnsafeCell to be shared across threads, therefore it would be very unsafe for it to be  Sync.\n     Rust disallows the defining of traits implementations that could overlap.This is so that the compiler will always know which implementation to use because there will always be only one.\n Traits marked with  #[marker] cannot override anything in their implementations.That way they are allowed to have overlapping implementations because all implementations will be the same.\n  impl Trait tells the compiler to infer a concrete type to replace it with that implements  Trait.Currently,  impl Trait is only used in the context of function arguments or return types.\n type_alias_impl_trait and  impl_trait_in_bindings extend the places  impl trait can be used to include type aliases and  let bindings respectively.\n trait_alias is subtlely different to  type_alias_impl_trait.Everywhere you use a type alias the type must remain constant.A single concrete type must be inferred by the compiler that works in all those places.Trait aliases are more forgiving as they can be a different type in each place they are used.\n  The three traits  Fn,  FnMut and  FnOnce are known as the fn traits.They are automatically implemented for any functions or closures that you create and are what provides the ability to pass arguments to them.\n An automatic implementation is currently the only way to implement those traits.The  fn_traits feature allows for custom implementations on any type.This is very similar to operator overloading but customising the use of  ().\n #![ feature (unboxed_closures)]  // required to implement a function with `extern &#34;rust-call&#34;` #![ feature (fn_traits)] struct  Multiply;#[ allow (non_upper_case_globals)] const  multiply: Multiply = Multiply; impl  FnOnce&lt;( u32 ,  u32 )&gt;  for  Multiply {  type  Output =  u32 ;  extern  &#34; rust-call &#34;  fn  call_once ( self ,  a : ( u32 ,  u32 )) -&gt;  Self:: Output { a. 0  * a. 1  }} impl  FnOnce&lt;( u32 ,  u32 ,  u32 )&gt;  for  Multiply {  type  Output =  u32 ;  extern  &#34; rust-call &#34;  fn  call_once ( self ,  a : ( u32 ,  u32 ,  u32 )) -&gt;  Self:: Output { a. 0  * a. 1  * a. 2  }} impl  FnOnce&lt;(&amp; str ,  usize )&gt;  for  Multiply {  type  Output = String;  extern  &#34; rust-call &#34;  fn  call_once ( self ,  a : (&amp; str ,  usize )) -&gt;  Self:: Output { a. 0. repeat (a. 1 ) }} fn  main () { assert_eq!( multiply ( 2 ,  3 ),  6 ); assert_eq!( multiply ( 2 ,  3 ,  4 ),  24 ); assert_eq!( multiply (&#34; hello  &#34;,  3 ), &#34; hello hello hello  &#34;);}\n Notice that this is being used to create a hacky version of  function overloading and  variadic functions.\n   These two features make constructing and destructing  Boxes easier.The  box keyword replaces  Box::new(..) and allows for the dereferencing  Boxes when pattern matching.\n struct  TrashStack&lt;T&gt; {  head : T,  body : Option&lt;Box&lt;TrashStack&lt;T&gt;&gt;&gt;,} impl &lt;T&gt; TrashStack&lt;T&gt; {  pub fn  push ( self ,  elem : T) -&gt;  Self  {  Self  { head: elem, body: Some(box  self ), } }  pub fn  peek ( self ) -&gt; Option&lt;T&gt; {  if let  TrashStack { body: Some(box TrashStack { head, .. }), .. } =  self  { Some(head) }  else  { None } }}\n This makes things a little more ergonomic but I don&#39;t think there is much chance that this feature will ever be stabilised.It seems to have existed forever with no plan for stabilisation but instead a little discussion about removing the feature. box_synatx is used heavily in the compiler&#39;s source and a little in the standard library.\n It is interesting to note that  box does not desugar to  Box::new but  Box::new is implemented in the standard library with  box.\n impl &lt;T&gt; Box&lt;T&gt; { ...  pub fn  new ( x : T) -&gt;  Self  { box x } ...}\n  Currently to be async inside of a closure you have to use an async block.\n  async_closure allows you to mark the closure itself as async just like you would a async function.\n         This allows for named arguments to be placed inside of strings inside any macro that depends on  std::format_args!.That includes  print!,  format!,  write! and many more.\n    With this feature you can write  crate struct Foo rather than  pub(crate) struct Foo and have it mean exactly the same thing.\n This makes  pub(crate) easier to write, encouraging the use of crate visibility when full  pub is not necessary.\n     This does not compile because Rust is unable to infer the type of  word.This can be fixed by replacing the first line with:\n    The  : Type syntax can be used anywhere to hint at the compiler &#34;I want this type at this point&#34;.\n  It is possible to define  enums with zero variants.Such an enum exists stable in the standard library.\n  It is possible to use this type in generics and function signatures but never possible for it to be constructed.There are simply no variants to construct.\n The unit type,  () would be equivalent to an enum with a single variant. never_type introduces a new type,  ! which is equivalent to our  Infallible enum with zero variants.\n Because  ! can never be constructed it can be given special powers.We don&#39;t have to handle the case of  ! because we have proven it will never exist.\n   ! can be very useful for expressing impossible outcomes in the type system.Take for example the  FromStr implementation on this  UserName type.This implementation is infallible because its implementation can never fail.This allows us to set the  Err variant to type  !.\n struct  UserName(String); impl  FromStr  for  UserName {  type  Err = !;  fn  from_str ( s : &amp; str ) -&gt; Result&lt; Self ,  Self:: Err&gt; { Ok( Self (s. to_owned ())) }}\n It is then possible to use an empty  match on the  Err variant because  ! has no variants.\n  With the feature  exhaustive_patterns the type system becomes smart enough for us to eliminate the  Err branch altogether.\n  We can combine this with destructuring to remove the  match leaving a beautiful line of code.\n    It is possible to specify how you want your binary to be optimised with  Cargo.toml  using  opt-level.\n The  opt-level affects the entire crate while the  optimize_attribute can control optimization for individual items.\n  This would be very useful for fine-tuning applications where the trade off between size and performance is particularly pronounced such as when using  web assembly.\n  This feature allows you to place attributes almost everywhere not just top-level items. For example with this feature, you are able to place an  optimize attribute on a closure.\n   #[ cfg ( version (&#34; 1.42 &#34;))]  // 1.42 and above fn  a () {  // ... }#[ cfg ( not ( version (&#34; 1.42 &#34;)))]  // 1.41 and below fn  a () {  // ... }\n This allows crates to make use of the latest compiler features while still keeping fallback support for old compilers.\n  It has been possible to opt-out of using the standard library using  #![no_std] for a while.This is important for applications that don&#39;t run in a full environment such as embedded systems.Embedded systems often don&#39;t have an operating system or even dynamic memory so many of the functions in  std wouldn&#39;t work.\n #![no_core] takes it further by opting out of libcore.That leaves you with almost nothing, you can&#39;t even use libc.This makes it very difficult to implement anything useful.\n   I spoke about the future of const_generics  at my talk for Rust Dublin.Rather than me reiterating what I said there, I encourage you to  watch that talk.\n  Rust&#39;s declarative macros are very powerful however some of the rules around  macro_rules! have always confused me.\n For one,  macro_rules! acts as a simple token transformation.It takes a list of tokens and outputs a new list of tokens, nothing smarter than that.The publicity rules end up being the rules of where the macro is being called.This is obvious because the codes is being simply pasted into that place.\n Macros 2.0 is an rfc describing a replacement to  macro_rules! with a new construct simply using the keyword  macro.\n One of the main improvements the new syntax introduces is macro hygiene which allows macros to use the publicity rules of where they are written rather than where they are called.\n  Generators/coroutines provide a special kind of function that can be paused during execution to &#34;yield&#34; intermediate values to the caller.\n Generators can return multiple values using the  yield keyword, each time pausing the function and returning to the caller.A generator can then  return a single value after which it can no longer be resumed.\n About three years ago I attempted to write an algorithm to traverse an infinite matrix along its diagonals.I found it very difficult to write that with Rust&#39;s iterators and ended up giving up.\n Here is an implementation using Rust&#39;s generators/coroutines along with a number of other features we&#39;ve discussed already.\n #![ feature ( try_blocks, generators, generator_trait, associated_type_bounds, type_ascription)] use  std::{ iter, ops::{Generator, GeneratorState}, pin::Pin,}; /// Input/// [[1, 2, 3]/// ,[4, 5, 6]/// ,[7, 8, 9]]/// Output/// [1, 2, 4, 3, 5, 7] fn  diagonalize &lt;T&gt;(  mut  matrix : impl Iterator&lt;Item: Iterator&lt;Item = T&gt;&gt;,) -&gt; impl Generator&lt;Yield = T, Return = ()&gt; {  move  || {  let mut  rows = Vec::new(); (try { rows. push (matrix. next ()?);  for  height in  0 .. {  for  row in  0 ..height {  if  row &gt;= rows. len () { rows. push (matrix. next ()?); }  yield  rows[row]. next ()?; } } }): Option&lt;()&gt;; }} fn  main () {  let  matrix = ( 0 ..). map (| x | iter::once(x). cycle (). enumerate ());  let mut  diagonals =  diagonalize (matrix);  while let  GeneratorState::Yielded(value) = Pin::new(&amp; mut  diagonals). resume (()) { dbg!(value); }}\n It is understandable if you found the above snippet hard to interpret.It makes use of a number of features that you may have just been introduced to.\n There is a compelling argument against adding too many new features as they can greatly increase the learning curve.\n Generators make it possible to write implementations that are far more difficult or even impossible to write without them.\n Generators were added to implement async-await in the standard library.It is most likely that the exact semantics will change before any kind of stabilisation but they are very fun to play with.\n  I have to apologise for not including three amazing unstable features;  Generic associated types,  inline asm and  specialization.I simply did not feel able to give these features justice in this article but I may try to talk about them in future.\n If you wish to read more about an unstable feature the best place to start is  the unstable book where most of them are listed.The unstable book then links to a  tracking issue which then often, in turn, links to an  RFC.With this combination of sources, you can then build up a picture of the details surrounding a feature.\n Thank you for reading my first blog post \ud83d\ude03.The best way to support me is by following my  Twitter.I am also looking for employment opportunities so please get in touch if you would like to talk about that.", "posttime": "2021-08-02 04:49:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust", "title": "\u4e0d\u7a33\u5b9a\u7684 Rust \u7279\u6027", "title_en": "Unstable Rust Features", "transed": 1, "url": "https://lazy.codes/posts/awesome-unstable-rust-features/", "via": "", "real_tags": ["rust"]}, {"category": "", "categoryclass": "", "imagename": "b17a1222540992d1dc4f16be3f6cd4cc.jpg", "infoid": 1071049, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Chuck E. Weiss\uff0c\u5e03\u9c81\u65af\u97f3\u4e50\u5bb6\u3001\u4ff1\u4e50\u90e8\u8001\u677f\u548c\u6d1b\u6749\u77f6\u5927\u4eba\u7269\uff0c\u5728 Rickie Lee Jones \u7684\u70ed\u95e8\u6b4c\u66f2\u201cChuck E.&#39;s in Love\u201d\u4e2d\u6c38\u5782\u4e0d\u673d\uff0c\u4e8e 7 \u6708 20 \u65e5\u5728\u6d1b\u6749\u77f6\u7684 Cedars-Sinai \u533b\u9662\u53bb\u4e16\u3002\u4ed6\u73b0\u5e74 76 \u5c81\u3002 \u97e6\u65af\u5148\u751f\u662f\u4e00\u4f4d\u8d2a\u5a6a\u7684\u97f3\u4e50\u5b66\u5bb6\u3001\u4e00\u672c\u5173\u4e8e\u65e0\u540d\u7235\u58eb\u4e50\u548c\u65e9\u671f R&amp;B \u827a\u672f\u5bb6\u7684\u767e\u79d1\u5168\u4e66\u3001\u9f13\u624b\u3001\u8bcd\u66f2\u4f5c\u8005\u548c\u5e7f\u4e3a\u4eba\u77e5\u7684\u6d41\u6c13\uff0c\u4ed6\u4e8e 1970 \u5e74\u4ee3\u4e2d\u671f\u4e0e\u4ed6\u7684\u670b\u53cb\u4ece\u5bb6\u4e61\u4e39\u4f5b\u6765\u5230\u6d1b\u6749\u77f6\u3002\u521b\u4f5c\u6b4c\u624b\u6c64\u59c6\u00b7\u97e6\u8328\u3002\u5728\u8457\u540d\u7684\u897f\u597d\u83b1\u575e\u6c11\u8c23\u4ff1\u4e50\u90e8 Troubadour\uff0c\u97e6\u65af\u5148\u751f\u66fe\u5728\u90a3\u91cc\u5de5\u4f5c\u8fc7\u4e00\u6bb5\u65f6\u95f4\u7684\u6d17\u7897\u5de5\uff0c\u4ed6\u4eec\u9047\u5230\u4e86\u53e6\u4e00\u4f4d\u5e74\u8f7b\u7684\u521b\u4f5c\u6b4c\u624b\uff0c\u4e00\u4f4d\u540d\u53eb\u745e\u5947\u00b7\u674e\u00b7\u743c\u65af\u7684\u524d\u9003\u4ea1\u8005\u3002\u97e6\u8328\u5148\u751f\u548c\u743c\u65af\u5973\u58eb\u6210\u4e86\u4e00\u4ef6\u7269\u54c1\uff0c\u4ed6\u4eec\u4e09\u4eba\u5728\u597d\u83b1\u575e\u72c2\u6b22\uff0c\u5728\u97f3\u4e50\u754c\u7684\u6d3e\u5bf9\u4e0a\u5077\u8349\u576a\u88c5\u9970\u54c1\u548c\u6076\u4f5c\u5267\uff08\u6bd4\u5982\u63e1\u624b\uff0c\u5728\u624b\u638c\u4e0a\u6d82\u4e0a\u8638\u9171\uff09\u65f6\u53d8\u5f97\u5f62\u5f71\u4e0d\u79bb\u3002\u743c\u65af\u5973\u58eb\u5728 1979 \u5e74\u5bf9\u6eda\u77f3\u6742\u5fd7\u8bf4\uff1a\u201c\u6709\u65f6\u6211\u4eec\u4f3c\u4e4e\u662f\u771f\u6b63\u7684\u6d6a\u6f2b\u68a6\u60f3\u5bb6\uff0c\u4ed6\u4eec\u9677\u5165\u4e86\u9519\u8bef\u7684\u65f6\u533a\uff0c\u201d\u5979\u5c06\u97e6\u65af\u5148\u751f\u548c\u97e6\u8328\u5148\u751f\u63cf\u8ff0\u4e3a\u5979\u5f53\u65f6\u7684\u5bb6\u4eba\u3002\u4ed6\u4eec\u4f4f\u5728\u5723\u83ab\u5c3c\u5361\u5927\u9053\u4e0a\u7684 Tropicana Motel\uff0c\u8fd9\u662f\u4e00\u5ea7 1940 \u5e74\u4ee3\u6ce2\u897f\u7c73\u4e9a\u98ce\u683c\u7684\u7834\u65e7\u65c5\u9986\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u7684\u975e\u519b\u4e8b\u533a\uff0c\u201d\u9b4f\u65af\u5148\u751f\u5728 1981 \u5e74\u544a\u8bc9\u300a\u6d1b\u6749\u77f6\u5468\u520a\u300b\uff0c\u201c\u9664\u4e86\u6bcf\u4e2a\u4eba\u90fd\u6652\u9ed1\uff0c\u770b\u8d77\u6765\u4e0d\u9519\u3002\u201d 1977 \u5e74\u79cb\u5929\uff0c\u5728\u56de\u4e39\u4f5b\u7684\u5bb6\u4e2d\uff0c\u97e6\u65af\u5148\u751f\u7ed9\u4ed6\u5728\u6d1b\u6749\u77f6\u7684\u670b\u53cb\u4eec\u6253\u7535\u8bdd\uff0c\u5f53\u97e6\u8328\u5148\u751f\u653e\u4e0b\u7535\u8bdd\u65f6\uff0c\u4ed6\u5bf9\u743c\u65af\u5973\u58eb\u5ba3\u5e03\uff1a\u201c\u67e5\u514b E \u604b\u7231\u4e86\uff01 \u201d\u4e24\u5e74\u540e\uff0c\u743c\u65af\u5973\u58eb\u5bf9\u90a3\u53e5\u8bdd\u7684\u5f02\u60f3\u200b\u200b\u5929\u5f00\u7684\u91cd\u590d\u2014\u2014\u201c\u5979\u53eb\u4ec0\u4e48\u540d\u5b57\uff1f/\u90a3\u662f\u5979\u5417\uff1f/\u54e6\uff0c\u5929\u54ea\uff0c\u6211\u60f3\u4ed6\u751a\u81f3\u68b3\u7406\u8fc7\u4ed6\u7684\u5934\u53d1\u201d\u2014\u2014\u8ba9\u5979\u6210\u4e3a\u4e86\u660e\u661f\u3002 \uff08\u5c3d\u7ba1\u8fd9\u9996\u6b4c\u7684\u6700\u540e\u4e00\u884c\u53e6\u6709\u6697\u793a\uff0c\u4f46\u97e6\u65af\u5148\u751f\u7231\u4e0a\u7684\u5e76\u4e0d\u662f\u743c\u65af\u5973\u58eb\uff1b\u800c\u662f\u4ed6\u7684\u8fdc\u623f\u8868\u4eb2\u3002\uff09\n\u8fd9\u9996\u6b4c\u662f\u4e00\u9996\u70ed\u95e8\u5355\u66f2\uff0c\u662f\u743c\u65af\u5973\u58eb\u9996\u5f20\u4e13\u8f91\u201c\u91cc\u5947\u00b7\u674e\u00b7\u743c\u65af\u201d\u7684\u5f00\u573a\u66f2\uff0c\u5e76\u83b7\u5f97\u4e86 1980 \u5e74\u683c\u83b1\u7f8e\u5e74\u5ea6\u6b4c\u66f2\u63d0\u540d\u3002 \uff08\u675c\u6bd4\u5144\u5f1f\u8868\u6f14\u7684\u201c\u50bb\u74dc\u76f8\u4fe1\u4ec0\u4e48\u201d\u83b7\u5f97\u4e86\u8363\u8a89\u3002\uff09\u5728 7 \u6708 21 \u65e5\u6d1b\u6749\u77f6\u65f6\u62a5\u7684\u4e00\u7bc7\u6587\u7ae0\u4e2d\uff0c\u743c\u65af\u5973\u58eb\u56de\u5fc6\u8bf4\uff0c\u5f53\u5979\u7b2c\u4e00\u6b21\u89c1\u5230\u97e6\u8328\u5148\u751f\u548c\u9b4f\u65af\u5148\u751f\u65f6\uff0c\u5979\u65e0\u6cd5\u4e0d\u8981\u628a\u4ed6\u4eec\u5206\u5f00\u3002 \u201c\u4ed6\u4eec\u662f\u597d\u83b1\u575e\u51e0\u5341\u5e74\u6765\u6700\u6709\u9b45\u529b\u7684\u4e24\u4e2a\u89d2\u8272\uff0c\u201d\u5979\u5199\u9053\uff0c\u201c\u5982\u679c\u6ca1\u6709\u4ed6\u4eec\uff0c\u6211\u8ba4\u4e3a\u5723\u83ab\u5c3c\u5361\u5927\u9053\u7684\u6574\u6761\u8857\u9053\u90fd\u4f1a\u574d\u584c\u3002\u201d\u5728\u540e\u6765\u7684\u7535\u8bdd\u91c7\u8bbf\u4e2d\uff0c\u5979\u8c08\u5230\u9b4f\u65af\u5148\u751f\uff1a\u201c\u4ed6\u6709\u6076\u4f5c\u5267\uff0c\u4ed6\u662f\u6211\u4eec\u7684\u9a97\u5b50\u3002\u4ed6\u662f\u4e00\u4e2a\u6fc0\u52a8\u4eba\u5fc3\u7684\u4eba\uff0c\u4e00\u65f6\u95f4\u662f\u4e00\u573a\u707e\u96be\uff0c\u5c31\u50cf\u6fc0\u52a8\u4eba\u5fc3\u7684\u4eba\u4e00\u6837\u3002\u201d Charles Edward Weiss \u4e8e 1945 \u5e74 3 \u6708 18 \u65e5\u51fa\u751f\u5728\u4e39\u4f5b\u3002\u4ed6\u7684\u7236\u4eb2 Leo \u4ece\u4e8b\u6253\u635e\u4e1a\u52a1\uff1b\u4ed6\u7684\u6bcd\u4eb2\u73cd\u59ae\u7279 (Rollnick) Weiss \u62e5\u6709\u4e00\u5bb6\u5e3d\u5b50\u5e97\u597d\u83b1\u575e\u5973\u5e3d\u5e97\u3002\u67e5\u514b\u6bd5\u4e1a\u4e8e\u4e1c\u9ad8\u4e2d\uff0c\u5e76\u5c31\u8bfb\u4e8e\u5927\u7ae0\u514b\u7533\u7684\u6885\u8428\u521d\u7ea7\u5b66\u9662\uff0c\u5373\u73b0\u5728\u7684\u79d1\u7f57\u62c9\u591a\u6885\u8428\u3002\u5728\u4ed6 20 \u5c81\u51fa\u5934\u7684\u65f6\u5019\uff0cWeiss \u5148\u751f\u9047\u5230\u4e86\u73b0\u5728\u662f\u97f3\u4e50\u53d1\u8d77\u4eba\u7684 Chuck Morris\uff0c\u5f53\u65f6 Morris \u5148\u751f\u662f\u79d1\u7f57\u62c9\u591a\u5dde\u535a\u5c14\u5fb7\u97f3\u4e50\u4ff1\u4e50\u90e8 Tulagi \u7684\u5171\u540c\u6240\u6709\u4eba\u3002\u5f53 Lightnin&#39; Hopkins \u548c John Lee Hooker \u7b49\u84dd\u8c03\u8868\u6f14\u8005\u51fa\u73b0\u65f6\uff0c\u4ed6\u4eec\u7ecf\u5e38\u72ec\u81ea\u65c5\u884c\uff0c\u83ab\u91cc\u65af\u5148\u751f\u4e3a\u4ed6\u4eec\u5bfb\u627e\u5f53\u5730\u4e50\u961f\u3002\u4ed6\u4f1a\u8bf7\u9b4f\u65af\u5148\u751f\u62c5\u4efb\u9f13\u624b\u3002 1973 \u5e74\uff0c\u83ab\u91cc\u65af\u5148\u751f\u5f00\u8bbe\u4e86\u4e00\u5bb6\u540d\u4e3a Ebbets Field \u7684\u4e39\u4f5b\u591c\u603b\u4f1a\uff08\u4ed6\u51fa\u751f\u5728\u5e03\u9c81\u514b\u6797\uff09\uff0c\u5438\u5f15\u4e86\u5a01\u5229\u00b7\u7eb3\u5c14\u900a\u3001\u6797\u5c3c\u5fb7\u00b7\u65af\u51ef\u5c3c\u5fb7\u548c\u97e6\u8328\u5148\u751f\u7b49\u8868\u6f14\u8005\u3002 Weiss \u5148\u751f\u4e5f\u5728\u90a3\u91cc\u586b\u5199\u3002 2014 \u5e74\uff0c\u9b4f\u65af\u5148\u751f\u56de\u5fc6\u8bf4\uff0c\u5f53\u65f6\u4ed6\u6b63\u5728\u5c1d\u8bd5\u5f55\u5236\u81ea\u5df1\u7684\u97f3\u4e50\uff0c\u5e76\u517b\u6210\u4e86\u8bf7\u8868\u6f14\u8005\u548c\u4ed6\u4e00\u8d77\u6f14\u594f\u7684\u4e60\u60ef\u3002\u4ed6\u5c31\u662f\u8fd9\u6837\u9047\u5230\u4e86\u97e6\u5179\u5148\u751f\u7684\u3002 \u201c\u800c\u4e14\u6211\u8ba4\u4e3a\u53d1\u751f\u7684\u4e8b\u60c5\u662f\u6709\u4e00\u5929\u665a\u4e0a\u6211\u770b\u5230 Waits \u5728 Ebbets Fields \u505a\u4e86\u4e00\u4e9b\u4ee4\u4eba\u5174\u594b\u7684\u4e8b\u60c5\uff0c\u201d\u4ed6\u8bf4\uff0c\u201c\u6f14\u51fa\u7ed3\u675f\u540e\u6211\u53bb\u627e\u4ed6\u3002\u6211\u7a7f\u7740\u539a\u5e95\u978b\u548c\u9f99\u732b\u5916\u5957\uff0c\u6211\u5728\u5916\u9762\u8857\u4e0a\u7684\u51b0\u4e0a\u6ed1\u5012\uff0c\u56e0\u4e3a\u6211\u592a\u9ad8\u4e86\uff0c\u95ee\u4ed6\u662f\u5426\u613f\u610f\u548c\u6211\u4e00\u8d77\u5f55\u97f3\u3002\u4ed6\u770b\u7740\u6211\uff0c\u5c31\u50cf\u6211\u6765\u81ea\u5916\u592a\u7a7a\u4e00\u6837\uff0c\u4f19\u8ba1\u3002\u201d\n\u97e6\u8328\u5148\u751f\u5728 1999 \u5e74\u63a5\u53d7\u300a\u8d39\u57ce\u95ee\u8be2\u62a5\u300b\u91c7\u8bbf\u65f6\u5c06\u9b4f\u65af\u5148\u751f\u63cf\u8ff0\u4e3a\u201c\u4e00\u4e2a\u7537\u4eba\u3001\u4e00\u4e2a\u9a97\u5b50\u3001\u4e00\u53ea\u7334\u5b50\u548c\u4e00\u4e2a\u75c5\u6001\u7684\u6742\u800d\u6f14\u5458\u201d\u3002 Waits \u5148\u751f\u548c Weiss \u5148\u751f\u6700\u7ec8\u5728\u8bb8\u591a\u4e8b\u60c5\u4e0a\u8fdb\u884c\u4e86\u5408\u4f5c\uff0c\u5176\u4e2d\u4e00\u6b21\u662f\u4e3a Waits \u5148\u751f\u7684\u4e13\u8f91\u201cNighthawks at the Diner\u201d\u4e2d\u7684\u9152\u5427\u633d\u6b4c\u201cSpare Parts (A Nocturnal Emission)\u201d\u5408\u5199\u6b4c\u8bcd\uff0c 1975 \u5e74\u53d1\u884c\u3002 Waits \u5148\u751f\u4e3a Weiss \u5148\u751f\u5236\u4f5c\u4e86\u4e24\u5f20\u4e13\u8f91\uff1b\u7b2c\u4e00\u4e2a\u662f 1999 \u5e74\u7684\u201cExtremely Cool\u201d\uff0c\u5728\u4e00\u7bc7\u8bc4\u8bba\u4e2d\u88ab\u63cf\u8ff0\u4e3a\u201c\u4e00\u79cd\u611a\u8822\u7684\u3001\u4e0d\u62d8\u4e00\u683c\u7684\u6df7\u5408\u5e03\u9c81\u65af\u548c\u5e03\u5409\u4f0d\u5409\u201d\u3002\u5c3d\u7ba1\u4ed6\u7684\u6b4c\u66f2\u521b\u4f5c\u5f88\u72ec\u7279\u2014\u2014\u201cAnthem for Lost Souls\u201d\u662f\u4ece\u90bb\u5c45\u732b\u7684\u89d2\u5ea6\u8bb2\u8ff0\u7684\u2014\u2014\u4f46\u9b4f\u65af\u5148\u751f\u6700\u51fa\u540d\u7684\u662f\u4ed6\u7684\u73b0\u573a\u8868\u6f14\u3002\u6c99\u783e\u822c\u7684\u55d3\u97f3\uff0c\u84ec\u677e\u7684\u5934\u53d1\uff0c\u957f\u957f\u7684\u5472\u7259\u54a7\u5634\uff0c\u4ed6\u662f\u4e00\u4e2a\u6709\u7740\u7f57\u5b8b\u6c64\u5e26\u5e7d\u9ed8\u611f\u7684\u5e03\u9c81\u65af\u97f3\u4e50\u4eba\u3002\u5728 1980 \u5e74\u4ee3\u7684\u5927\u90e8\u5206\u65f6\u95f4\u91cc\uff0cWeiss \u5148\u751f\u5728\u4ed6\u7684\u4e50\u961f The Goddamn Liars \u7684\u966a\u4f34\u4e0b\uff0c\u5728\u4e00\u5bb6\u540d\u4e3a Central \u7684\u6d1b\u6749\u77f6\u4ff1\u4e50\u90e8\u6f14\u51fa\u3002\u540e\u6765\u4ed6\u9f13\u52b1\u4ed6\u7684\u6f14\u5458\u670b\u53cb\u7ea6\u7ff0\u5c3c\u5fb7\u666e\u548c\u4ed6\u548c\u5176\u4ed6\u4eba\u4e00\u8d77\u4e70\u4e0b\u8fd9\u4e2a\u5730\u65b9\u3002\u4ed6\u4eec\u628a\u5b83\u53d8\u6210\u4e86 Viper Room\uff0c\u8fd9\u662f\u4e00\u5bb6 90 \u5e74\u4ee3\u540d\u4eba\u591c\u603b\u4f1a\u3002\u97e6\u65af\u5148\u751f\u7ecf\u5e38\u88ab\u95ee\u5230\u4ed6\u5bf9\u743c\u65af\u5973\u58eb\u7684\u70ed\u95e8\u8282\u76ee\u4e2d\u7684\u660e\u661f\u8f6c\u53d8\u6709\u4f55\u611f\u89c9\u3002 \u201c\u662f\u7684\uff0c\u6211\u5927\u5403\u4e00\u60ca\uff0c\u201d\u4ed6\u5728 2007 \u5e74\u544a\u8bc9\u7f8e\u8054\u793e\u3002\u201c\u6211\u4eec\u51e0\u4e4e\u4e0d\u77e5\u9053\uff0c\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5c06\u5728\u6211\u4eec\u7684\u4f59\u751f\u4e2d\u90fd\u56e0\u6b64\u800c\u95fb\u540d\u3002\u201d\u743c\u65af\u5973\u58eb\u5728\u5979\u7684\u300a\u6d1b\u6749\u77f6\u65f6\u62a5\u300b\u6587\u7ae0\u4e2d\u5199\u5230\u97e6\u65af\u5148\u751f\uff1a\u201c\u5f53&#39;Chuck E.&#39;s in Love&#39;\u4ece\u5929\u800c\u964d\uff0c\u6d88\u5931\u5728&#39;\u6211\u8ba8\u538c\u90a3\u9996\u6b4c&#39;\u6c99\u6f20\u4e2d\u65f6\uff0c\u5b83\u4ecd\u7136\u6ca1\u6709\u771f\u6b63\u6062\u590d\u8fc7\u6765\uff0c\u4ed6\u548c\u6211\u758f\u8fdc\u4e86\uff0c\u5927\u5bb6\u90fd\u758f\u8fdc\u4e86\u3002\u7b49\u5f85\u79bb\u5f00\uff0c\u6211\u4eec\u8857\u89d2 jive \u7684\u7b80\u77ed Camelot \u7ed3\u675f\u4e86\u3002\u6211\u865a\u6784\u4e86\u6211\u4eec\uff0c\u5851\u9020\u4e86\u975e\u5e38\u4e0d\u82f1\u96c4\u7684\u4eba\u7684\u82f1\u96c4\u3002\u4f46\u6211\u5f88\u9ad8\u5174\u6211\u505a\u5230\u4e86\u3002\u201d\u540e\u6765\uff0c\u5979\u5728\u7535\u8bdd\u91cc\u8bf4\uff1a\u201c\u6211\u4eec\u4e09\u4e2a\u4eba\u4e2d\u6709\u4e24\u4e2a\u4eba\u6210\u4e3a\u4e86\u975e\u5e38\u6210\u529f\u7684\u97f3\u4e50\u5bb6\uff0c\u4f46\u67e5\u514b\u4e0d\u662f\uff0c\u4ed6\u8ba4\u8bc6\u5f88\u591a\u4eba\u3002\u201d\u5979\u8865\u5145\u8bf4\uff1a\u201c\u6211\u4eec\u8ba4\u4e3a\u6210\u4e3a\u540d\u4eba\u5c31\u662f\u83b7\u80dc\uff0c\u4f46\u6211\u4e0d\u786e\u5b9a\u3002\u67e5\u514b\u505a\u5f97\u5f88\u597d\u3002\u201d", "note_en": "Chuck E. Weiss, blues musician, club owner and outsize Los Angeles character who was immortalized in Rickie Lee Jones\u2019s breakout hit song, \u201cChuck E.\u2019s in Love,\u201d died on July 20 at Cedars-Sinai Hospital in Los Angeles. He was 76.\n  Mr. Weiss was a voracious musicologist, an encyclopedia of obscure jazz and early R&amp;B artists, a drummer, a songwriter and a widely acknowledged rascal who in the mid-1970s landed in Los Angeles from his native Denver with his friend the singer-songwriter Tom Waits.\n At the Troubadour, the venerable West Hollywood folk club, where Mr. Weiss worked for a time as a dishwasher, they met another young singer-songwriter, a former runaway named Rickie Lee Jones. Mr. Waits and Ms. Jones became an item, and the three of them became inseparable as they caroused through Hollywood, stealing lawn ornaments and pranking people at music industry parties (like shaking hands with dip smeared on their palms).\n  \u201cIt seems sometimes like we\u2019re real romantic dreamers who got stuck in the wrong time zone,\u201d Ms. Jones told Rolling Stone magazine in 1979, describing Mr. Weiss and Mr. Waits as her family at the time.\n They lived at the Tropicana Motel, a seedy 1940s-era bohemia on Santa Monica Boulevard. \u201cIt was a regular DMZ,\u201d  Mr. Weiss told LA Weekly in 1981, \u201cexcept everyone had a tan and  looked nice.\u201d\n In the fall of 1977, on a trip home to Denver, Mr. Weiss called his buddies back in Los Angeles, and when Mr. Waits put down the phone, he announced to Ms. Jones, \u201cChuck E.\u2019s in love!\u201d\n Two years later, Ms. Jones\u2019s fanciful riff on that declaration \u2014 \u201cWhat\u2019s her name?/Is that her there?/Oh, Christ, I think he\u2019s even combed his hair\u201d \u2014 had made her a star. (Though the last line of the song suggests otherwise, it was not Ms. Jones whom Mr. Weiss had fallen for; it was a distant cousin of his.)\n The song was a hit single, the opening track of Ms. Jones\u2019s debut album, \u201cRickie Lee Jones,\u201d and a 1980 Grammy Award nominee for song of the year. ( \u201cWhat a Fool Believes,\u201d performed by the Doobie Brothers, took the honor.)\n  In an essay in The Los Angeles Times on July 21,  Ms. Jones recalled that when she first met Mr. Waits and Mr. Weiss, she couldn\u2019t tell them apart. \u201cThey were two of the most charismatic characters Hollywood had seen in decades,\u201d she wrote, \u201cand without them I think the entire street of Santa Monica Boulevard would have collapsed.\u201d\n In a phone interview later, she said of Mr. Weiss: \u201cThere was mischief in him, he was our trickster. He was a thrilling guy, and a disaster for a time, as thrilling people often are.\u201d\n Charles Edward Weiss was born in Denver on March 18, 1945. His father, Leo, was in the salvage business; his mother, Jeannette (Rollnick) Weiss, owned a hat store, Hollywood Millinery. Chuck graduated from East High School and attended Mesa Junior College, now Colorado Mesa, in Grand Junction.\n  In his early 20s, Mr. Weiss met Chuck Morris, now a music promoter, when Mr. Morris was a co-owner of Tulagi, a music club in Boulder, Colo. When blues performers like Lightnin\u2019 Hopkins and John Lee Hooker came through, they often traveled alone, and it was up to Mr. Morris to find them a local band. He would ask Mr. Weiss to fill in as drummer.\n In 1973 Mr. Morris opened a Denver nightclub called Ebbets Field (he was born in Brooklyn), which drew performers like Willie Nelson, Lynyrd Skynyrd and Mr. Waits. Mr. Weiss filled in there too.\n  At the time,  as Mr. Weiss recalled in 2014, he was trying to record his own music and in the habit of asking performers to play with him. That\u2019s how he met Mr. Waits. \u201cAnd I think what happened was I saw Waits do some finger-poppin\u2019 stuff at Ebbets Fields one night,\u201d he said, \u201cand I went up to him after the show. I was wearing some platform shoes and a chinchilla coat, and I was slipping on the ice on the street outside because I was so high, and asked if he wanted to do some recording with me. He looked at me like I was from outer space, man.\u201d\n  Mr. Waits, interviewed by  The Philadelphia Inquirer in 1999, described Mr. Weiss as \u201ca mensch, a liar, a monkey and a pathological vaudevillian.\u201d\n Mr. Waits and Mr. Weiss ended up collaborating on a number of things, in one instance co-writing the lyrics to \u201cSpare Parts (A Nocturnal Emission),\u201d a barroom dirge on Mr. Waits\u2019s album \u201cNighthawks at the Diner,\u201d released in 1975. Mr. Waits produced two albums for Mr. Weiss; the first, \u201cExtremely Cool,\u201d in 1999, was described in one review as \u201ca goofy, eclectic mix of loosely-played blues and boogie-woogie.\u201d\n Though his songwriting was singular \u2014  \u201cAnthem for Lost Souls\u201d was told from the point of view of a neighbor\u2019s cat \u2014 Mr. Weiss was best known for his live performances. Gravel-voiced, shaggy-haired and long on patter, he was a bluesman with a borscht belt sense of humor.\n  For much of the 1980s Mr. Weiss played at a Los Angeles club called the Central, accompanied by his band, The Goddamn Liars. He later encouraged his actor friend Johnny Depp to buy the place with him and others. They turned it into the Viper Room, the celebrity-flecked \u201990s-era nightclub.\n Mr. Weiss was often asked how he felt about his star turn in Ms. Jones\u2019s hit. \u201cYeah, I was flabbergasted,\u201d he told The Associated Press in 2007. \u201cLittle did we know that, all in all, we would both be known for that for the rest of our lives.\u201d\n  Ms. Jones wrote of Mr. Weiss in her  Los Angeles Times essay: \u201cWhen \u2018Chuck E.\u2019s in Love\u2019 passed from the heavens and faded into the \u2018I hate that song\u2019 desert, from which it still has not really recovered, he and I became estranged, and everyone fell away from everyone. Waits left, the brief Camelot of our street corner jive ended. I had made fiction of us, made heroes of very unheroic people. But I\u2019m glad I did.\u201d\n Later, on the phone, she said, \u201cTwo of the three of us became very successful musicians, but not Chuck, and he knew a lot of people.\u201d She added: \u201cWe think being the famous one is winning, but I\u2019m not sure. Chuck did all right.\u201d", "posttime": "2021-08-02 04:48:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6b4c\u66f2,song,\u5148\u751f", "title": "\u67e5\u514b\u00b7E\u00b7\u97e6\u65af\uff08Chuck E. Weiss\uff09\uff0c\u604b\u7231\u4e2d\u7684\u97f3\u4e50\u5bb6\uff0c\u542f\u53d1\u4e86\u4e00\u9996\u70ed\u95e8\u6b4c\u66f2\uff0c\u4eab\u5e74 76 \u5c81", "title_en": "Chuck E. Weiss, Musician Who, in Love, Inspired a Hit Song, Dies at 76", "transed": 1, "url": "https://www.nytimes.com/2021/07/30/arts/chuck-e-weiss-dead.html", "via": "", "real_tags": ["\u6b4c\u66f2", "song", "\u5148\u751f"]}, {"category": "", "categoryclass": "", "imagename": "5ab02975209b4d0f31e496c0f4d2ae95.jpeg", "infoid": 1071048, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u6587\u662f\u8a00\u8bba\u81ea\u7531\u9879\u76ee\u7684\u4e00\u90e8\u5206\uff0c\u8be5\u9879\u76ee\u662f\u672a\u6765\u65f6\u6001\u4e0e\u7f8e\u56fd\u5927\u5b66\u534e\u76db\u987f\u6cd5\u5b66\u9662\u7684\u6280\u672f\u3001\u6cd5\u5f8b\u548c\u5b89\u5168\u9879\u76ee\u7684\u5408\u4f5c\u9879\u76ee\uff0c\u65e8\u5728\u7814\u7a76\u6280\u672f\u5982\u4f55\u5f71\u54cd\u6211\u4eec\u5bf9\u8a00\u8bba\u7684\u770b\u6cd5\u3002\u4f5c\u4e3a\u4e00\u822c\u89c4\u5219\uff0c\u5f53\u4e00\u4e2a\u56fd\u5bb6\u5173\u95ed\u90e8\u5206\u6216\u5168\u90e8\u4e0e\u5168\u7403\u4e92\u8054\u7f51\u7684\u8fde\u63a5\u65f6\uff0c\u5b83\u4e0d\u9700\u8981\u5ba3\u5e03\u8fd9\u4e00\u6d88\u606f\u3002\u8be5\u56fd\u5bb6/\u5730\u533a\u7684\u4eba\u4eec\u4f1a\u6ce8\u610f\u5230\u4ed6\u4eec\u4f55\u65f6\u65e0\u6cd5\u8bbf\u95ee\u5728\u7ebf\u670d\u52a1\uff0c\u800c\u8be5\u56fd\u5bb6/\u5730\u533a\u4ee5\u5916\u7684\u4eba\u4eec\u53ef\u4ee5\u5728\u4ed6\u4eec\u505c\u6b62\u63a5\u6536\u6765\u81ea\u8be5\u56fd\u5bb6/\u5730\u533a\u7684\u6d41\u91cf\u6216\u80fd\u591f\u5c06\u6d41\u91cf\u8def\u7531\u5230\u8be5\u56fd\u5bb6/\u5730\u533a\u7684\u670d\u52a1\u5668\u548c\u670d\u52a1\u63d0\u4f9b\u5546\u65f6\uff0c\u5f88\u5feb\u53d1\u73b0\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u3002\u56e0\u6b64\uff0c\u5f53\u4fc4\u7f57\u65af\u4e0a\u5468\u51b3\u5b9a\u5ba3\u5e03\u5b83\u5df2\u5728 6 \u6708 15 \u65e5\u81f3 7 \u6708 15 \u65e5\u4e4b\u95f4\u6210\u529f\u8fdb\u884c\u6d4b\u8bd5\u4ee5\u8868\u660e\u5b83\u53ef\u4ee5\u65ad\u5f00\u4e0e\u4e92\u8054\u7f51\u7684\u8fde\u63a5\u65f6\uff0c\u8fd9\u5f88\u5947\u602a\u3002\u8fd9\u4e9b\u6d4b\u8bd5\u4f3c\u4e4e\u5728\u4fc4\u7f57\u65af\u5883\u5185\u5916\u51e0\u4e4e\u90fd\u6ca1\u6709\u5f15\u8d77\u4eba\u4eec\u7684\u6ce8\u610f\uff0c\u8fd9\u8868\u660e\u65e0\u8bba\u5b83\u4eec\u5e26\u6765\u4ec0\u4e48\uff0c\u5b83\u4eec\u90fd\u6ca1\u6709\u6d89\u53ca\u4fc4\u7f57\u65af\u5b9e\u9645\u4e0a\u4e0e\u5168\u7403\u4e92\u8054\u7f51\u65ad\u5f00\u8fde\u63a5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u9274\u4e8e RBC Daily \u7684\u4e00\u4efd\u62a5\u544a\u542b\u7cca\u4e0d\u6e05\uff0c\u5f88\u96be\u731c\u6d4b\u8fd9\u4e9b\u6d4b\u8bd5\u7a76\u7adf\u6d89\u53ca\u4ec0\u4e48\u3002\u8fd9\u5bb6\u4fc4\u7f57\u65af\u62a5\u7eb8\u5728 7 \u6708 21 \u65e5\u53d1\u8868\u4e86\u4e00\u7bc7\u6587\u7ae0\uff0c\u79f0\u8be5\u6708\u7684\u6d4b\u8bd5\u53d6\u5f97\u4e86\u6210\u529f\uff0c\u5e76\u5f15\u7528\u4e86\u4e00\u4e2a\u4fe1\u606f\u5b89\u5168\u5de5\u4f5c\u7ec4\u7684\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u8868\u660e\u4fc4\u7f57\u65af\u6240\u6709\u4e3b\u8981\u7535\u4fe1\u4f9b\u5e94\u5546\u90fd\u53c2\u4e0e\u4e86\u6d4b\u8bd5\u3002\u6f14\u4e60\u672c\u5e94\u6bcf\u5e74\u4e3e\u884c\u4e00\u6b21\uff0c\u4f46\u53bb\u5e74\u56e0\u5927\u6d41\u884c\u800c\u53d6\u6d88\uff0c\u4eca\u5e74\u53d1\u751f\u7684\u4efb\u4f55\u4e8b\u60c5\u7edd\u5bf9\u4e0d\u5305\u62ec\u4fc4\u7f57\u65af\u957f\u65f6\u95f4\u4e0e\u5168\u7403\u4e92\u8054\u7f51\u65ad\u5f00\u8fde\u63a5\uff0c\u56e0\u4e3a\u8fd9\u662f\u65e0\u6cd5\u9690\u85cf\u7684\u3002\u76f8\u53cd\uff0c\u8fd9\u4e9b\u6d4b\u8bd5\u2014\u2014\u6700\u91cd\u8981\u7684\u662f\uff0c\u5ba3\u5e03\u4ed6\u4eec\u7684\u6210\u529f\u2014\u2014\u4f3c\u4e4e\u662f\u4e00\u79cd\u4fe1\u53f7\uff0c\u8868\u660e\u4fc4\u7f57\u65af\u4e0d\u518d\u4f9d\u8d56\u4e16\u754c\u5176\u4ed6\u5730\u533a\u7684\u4e92\u8054\u7f51\u63a5\u5165\u3002\u4f46\u8fd9\u7a76\u7adf\u610f\u5473\u7740\u4ec0\u4e48\u8fd8\u5b8c\u5168\u4e0d\u6e05\u695a\uff0c\u56e0\u4e3a\u4fc4\u7f57\u65af\u663e\u7136\u4ecd\u7136\u4f9d\u8d56\u5176\u4ed6\u56fd\u5bb6\u7684\u4eba\u548c\u516c\u53f8\u6765\u8bbf\u95ee\u4ed6\u4eec\u521b\u5efa\u548c\u6258\u7ba1\u7684\u5728\u7ebf\u5185\u5bb9\u548c\u670d\u52a1\u2014\u2014\u5c31\u50cf\u6211\u4eec\u6240\u6709\u4eba\u4e00\u6837\u3002\u8fc7\u53bb\u4e24\u5e74\uff0c\u81ea2019\u5e74\u5b9e\u65bd\u201c\u4e3b\u6743\u4e92\u8054\u7f51\u6cd5\u201d\u4ee5\u6765\uff0c\u4fc4\u7f57\u65af\u4e00\u76f4\u5728\u8c08\u8bba\u5efa\u7acb\u81ea\u5df1\u7684\u56fd\u5185\u4e92\u8054\u7f51\uff0c\u4e0d\u4f9d\u8d56\u4efb\u4f55\u4f4d\u4e8e\u56fd\u5916\u7684\u57fa\u7840\u8bbe\u65bd\u6216\u8d44\u6e90\u3002\u636e\u63a8\u6d4b\uff0c\u4eca\u5e74\u590f\u5929\u5b8c\u6210\u7684\u6d4b\u8bd5\u4e0e\u80fd\u591f\u5728\u4fc4\u7f57\u65af\u8fd0\u8425\u672c\u5730\u4e92\u8054\u7f51\u7684\u76ee\u6807\u6709\u5173\uff0c\u8be5\u4e92\u8054\u7f51\u4e0d\u4f9d\u8d56\u5168\u7403\u57df\u540d\u7cfb\u7edf\u5c06\u7f51\u7ad9\u6620\u5c04\u5230\u7279\u5b9a IP \u5730\u5740\u3002\u8fd9\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u4e00\u4e2a\u7279\u522b\u96c4\u5fc3\u52c3\u52c3\u7684\u76ee\u6807\u2014\u2014\u4efb\u4f55\u56fd\u5bb6\u5982\u679c\u613f\u610f\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u672c\u5730\u5bfb\u5740\u7cfb\u7edf\u8fd0\u8425\u81ea\u5df1\u7684\u56fd\u5185\u4e92\u8054\u7f51\uff0c\u800c\u4e0d\u662f\u8fde\u63a5\u5230\u66f4\u5927\u7684\u5168\u7403\u4e92\u8054\u7f51\uff08\u5982\u679c\u6211\u613f\u610f\uff0c\u6211\u4f1a\u79f0\u4e4b\u4e3a\u201c\u4e92\u8054\u7f51\u201d\uff09\u98ce\u683c\u6307\u5357\u4ecd\u7136\u5141\u8bb8\u5728\u8fd9\u4e2a\u8bcd\u4e2d\u4f7f\u7528\u5927\u5199\u7684\u201cI\u201d\u2014\u2014\u800c\u4e14\uff0c\u8fd9\u6b63\u662f\u4e92\u8054\u7f51\u5728\u8bed\u6cd5\u4e0a\u5f88\u91cd\u8981\u7684\u539f\u56e0\uff1a\u533a\u5206\u8f83\u5c0f\u7684\u672c\u5730\u4e92\u8054\u7f51\u6216\u4e92\u8054\u7f51\uff0c\u5982\u4fc4\u7f57\u65af\u7684\u4e92\u8054\u7f51\u548c\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u5168\u7403\u516c\u5171\u4e92\u8054\u7f51\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff09\u3002\u4fc4\u7f57\u65af\u7684\u8ba1\u5212\u4ee4\u4eba\u56f0\u60d1\u7684\u662f\uff0c\u5b83\u4f3c\u4e4e\u5e0c\u671b\u80fd\u591f\u4f7f\u7528\u5176\u5b64\u7acb\u7684\u4fc4\u7f57\u65af\u4e92\u8054\u7f51\u6765\u8bbf\u95ee\u5168\u7403\u4e92\u8054\u7f51\u3002\u56e0\u6b64\uff0c\u6309\u7167\u8bbe\u8ba1\uff0c\u4fc4\u7f57\u65af\u4e3b\u6743\u4e92\u8054\u7f51\u7684\u6d4b\u8bd5\u5e76\u672a\u5bf9\u5176\u4e0e\u5168\u7403\u4e92\u8054\u7f51\u7684\u8fde\u63a5\u9020\u6210\u4efb\u4f55\u4e2d\u65ad\u2014\u2014\u4f46\u76ee\u524d\u5b8c\u5168\u4e0d\u6e05\u695a\u4ed6\u4eec\u7a76\u7adf\u505a\u4e86\u4ec0\u4e48\u3002\u4e00\u4f4d\u6d88\u606f\u4eba\u58eb\u663e\u7136\u544a\u8bc9\u4fc4\u7f57\u65af\u62a5\u7eb8 RBC Daily\uff0c\u201c\u7269\u7406\u65ad\u5f00\u4fc4\u7f57\u65af\u90e8\u5206\u4e92\u8054\u7f51\u7684\u80fd\u529b\u5df2\u7ecf\u8fc7\u6d4b\u8bd5\u3002\u201d\u4f46\u662f\uff0c\u4fc4\u7f57\u65af\u6839\u672c\u4e0d\u53ef\u80fd\u5728\u6ca1\u6709\u4efb\u4f55\u4eba\u6ce8\u610f\u5230\u7684\u60c5\u51b5\u4e0b\u957f\u65f6\u95f4\u5730\u5c06\u5176\u57fa\u7840\u8bbe\u65bd\u4e0e\u4e16\u754c\u5176\u4ed6\u5730\u533a\u65ad\u5f00\u8fde\u63a5\u3002\u52a0\u5dde\u5927\u5b66\u5723\u5730\u4e9a\u54e5\u5206\u6821\u5e94\u7528\u4e92\u8054\u7f51\u6570\u636e\u5206\u6790\u4e2d\u5fc3\u7ef4\u62a4\u7740\u4e00\u4e2a\u4e92\u8054\u7f51\u4e2d\u65ad\u68c0\u6d4b\u548c\u5206\u6790\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u7ed3\u5408\u4e86\u4e09\u4e2a\u6570\u636e\u96c6\u6765\u8bc6\u522b\u4e16\u754c\u5404\u5730\u7684\u4e92\u8054\u7f51\u4e2d\u65ad\u3002\u5b83\u76d1\u63a7 Internet \u670d\u52a1\u63d0\u4f9b\u5546\u7528\u6765\u4ea4\u6362\u8def\u7531\u4fe1\u606f\u7684\u8fb9\u754c\u7f51\u5173\u534f\u8bae\uff0c\u4ee5\u53ca\u5b83\u4ece\u54ea\u4e9b IP \u5730\u5740\u63a5\u6536\u6d41\u91cf\uff0c\u4ee5\u53ca\u5b83\u80fd\u591f\u63a2\u6d4b\u54ea\u4e9b\u5730\u5740\uff0c\u4ee5\u786e\u5b9a Internet \u7684\u67d0\u4e9b\u90e8\u5206\u4f55\u65f6\u65e0\u6cd5\u8bbf\u95ee\u6216\u4e0b\u7ebf\u3002\u5f53\u53d1\u751f\u5b9e\u9645\u4e92\u8054\u7f51\u4e2d\u65ad\u65f6\uff0c\u901a\u5e38\u8fd9\u4e9b\u6307\u6807\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u663e\u7740\u4e0b\u964d\uff0c\u56e0\u4e3a\u8be5\u5730\u533a\u505c\u6b62\u4e0e\u5916\u90e8\u63d0\u4f9b\u5546\u4ea4\u6362\u8def\u7531\u4fe1\u606f\u3001\u505c\u6b62\u53d1\u9001\u51fa\u7ad9\u6d41\u91cf\u6216\u505c\u6b62\u63a5\u6536\u5165\u7ad9\u6d41\u91cf\u3002\u4fc4\u7f57\u65af\u4ece 6 \u6708 15 \u65e5\u5230 7 \u6708 15 \u65e5\u7684\u6570\u636e\u96c6\uff0c\u5373\u5047\u5b9a\u7684\u65ad\u5f00\u8fde\u63a5\u6d4b\u8bd5\u671f\u95f4\uff0c\u9664\u4e86 7 \u6708 5 \u65e5\u5de6\u53f3\u6765\u81ea\u4fc4\u7f57\u65af\u7684\u672a\u7ecf\u8bf7\u6c42\u7684\u6d41\u91cf\u4f3c\u4e4e\u5df2\u7ecf\u4e0b\u964d\u4e4b\u5916\uff0c\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u5b9e\u9645\u65ad\u5f00\u8fde\u63a5\u7684\u8ff9\u8c61\u3002\u65e0\u8bba\u4fc4\u7f57\u65af\u4eca\u5e74\u590f\u5929\u505a\u4e86\u4ec0\u4e48\uff0c\u5b83\u90fd\u6ca1\u6709\u4e0e\u5168\u7403\u4e92\u8054\u7f51\u65ad\u5f00\u7269\u7406\u8fde\u63a5\u3002\u5b83\u751a\u81f3\u4f3c\u4e4e\u6ca1\u6709\u5728\u4efb\u4f55\u6709\u610f\u4e49\u7684\u610f\u4e49\u4e0a\u4e0e\u5168\u7403\u4e92\u8054\u7f51\u65ad\u5f00\u8fde\u63a5\u3002\u4e5f\u8bb8\u5b83\u6539\u53d8\u4e86\u4e00\u4e9b\u5173\u952e\u7684\u57fa\u7840\u8bbe\u65bd\u7cfb\u7edf\uff0c\u66f4\u591a\u5730\u4f9d\u8d56\u56fd\u5185\u670d\u52a1\u63d0\u4f9b\u5546\u548c\u8d44\u6e90\u3002\u4e5f\u8bb8\u5b83\u521b\u5efa\u4e86\u66f4\u591a\u7528\u4e8e\u6d4f\u89c8\u4e92\u8054\u7f51\u7684\u5bfb\u5740\u7cfb\u7edf\u7684\u672c\u5730\u526f\u672c\uff0c\u5e76\u6d4b\u8bd5\u4e86\u5b83\u4f9d\u8d56\u8fd9\u4e9b\u7684\u80fd\u529b\u3002\u4e5f\u8bb8\u5b83\u6d4b\u8bd5\u4e86\u5176\u901a\u8fc7\u67d0\u4e9b\u963b\u585e\u70b9\u5728\u56fd\u5185\u8def\u7531\u5728\u7ebf\u6d41\u91cf\u7684\u80fd\u529b\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u8fdb\u884c\u76d1\u89c6\u548c\u76d1\u63a7\u3002\u8fd9\u4e9b\u90fd\u4e0d\u662f\u4ece\u56fd\u5916\u7acb\u5373\u53ef\u89c1\u7684\u6d3b\u52a8\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u7b26\u5408\u4fc4\u7f57\u65af\u65e2\u5b9a\u7684\u76ee\u6807\uff0c\u5373\u51cf\u5c11\u5bf9\u5883\u5916\u4e92\u8054\u7f51\u57fa\u7840\u8bbe\u65bd\u7684\u4f9d\u8d56\u5e76\u52a0\u5f3a\u5176\u76d1\u63a7\u5728\u7ebf\u6d3b\u52a8\u7684\u80fd\u529b\u3002\n\u4f46\u662f\uff0c\u5b8c\u5168\u72ec\u7acb\u4e8e\u4e16\u754c\u5176\u4ed6\u4e92\u8054\u7f51\u57fa\u7840\u8bbe\u65bd\uff0c\u540c\u65f6\u4ecd\u7136\u80fd\u591f\u8bbf\u95ee\u5168\u7403\u4e92\u8054\u7f51\u7684\u76ee\u6807\u662f\u8352\u8c2c\u4e14\u4e0d\u53ef\u80fd\u7684\u3002\u4fc4\u7f57\u65af\u65e2\u4e0d\u80fd\u4e0e\u4e92\u8054\u7f51\u65ad\u5f00\u8fde\u63a5\uff0c\u53c8\u4e0d\u80fd\u50cf\u5728\u957f\u8fbe\u4e00\u4e2a\u6708\u7684\u6d4b\u8bd5\u671f\u95f4\u90a3\u6837\uff0c\u4ecd\u7136\u80fd\u591f\u4f7f\u7528\u6240\u6709\u5728\u7ebf\u670d\u52a1\u5e76\u8bbf\u95ee\u7531\u4e16\u754c\u5176\u4ed6\u5730\u533a\u7684\u4eba\u4eec\u6258\u7ba1\u548c\u7ef4\u62a4\u7684\u6240\u6709\u7f51\u7ad9\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u4e0a\u5468\u6709\u5173\u4fc4\u7f57\u65af\u56fd\u5185\u4e92\u8054\u7f51\u6210\u529f\u6d4b\u8bd5\u7684\u62a5\u9053\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u505a\u3002\u5982\u679c\u8be5\u516c\u544a\u662f\u516c\u5f00\u88c5\u8154\u4f5c\u52bf\uff0c\u5219\u4e0d\u6e05\u695a\u5b83\u7a76\u7adf\u6253\u7b97\u53d1\u9001\u4ec0\u4e48\u4fe1\u606f\u3002\u80fd\u591f\u5c06\u60a8\u7684\u56fd\u5bb6\u4e0e\u4e92\u8054\u7f51\u65ad\u5f00\u8fde\u63a5\u5e76\u4e0d\u662f\u90a3\u4e48\u56f0\u96be\u2014\u2014\u5f53\u7136\u4e5f\u6ca1\u6709\u4ec0\u4e48\u503c\u5f97\u5439\u5618\u7684\u3002\u4f46\u662f\uff0c\u5f53\u5f88\u660e\u663e\u4f60\u6ca1\u6709\u6697\u793a\u6280\u672f\u4e0a\u7684\u65e0\u80fd\u548c\u5bf9\u4fc4\u7f57\u65af\u56fd\u5185\u4e92\u8054\u7f51\u5b9e\u9645\u610f\u5473\u7740\u4ec0\u4e48\u7684\u6839\u6df1\u8482\u56fa\u7684\u4e0d\u786e\u5b9a\u6027\u65f6\uff0c\u5ba3\u5e03\u4f60\u5df2\u7ecf\u6210\u529f\u5730\u65ad\u5f00\u4e86\u4e92\u8054\u7f51\u8fde\u63a5\u3002 Future Tense \u662f Slate\u3001New America \u548c\u4e9a\u5229\u6851\u90a3\u5dde\u7acb\u5927\u5b66\u7684\u5408\u4f5c\u9879\u76ee\uff0c\u7814\u7a76\u65b0\u5174\u6280\u672f\u3001\u516c\u5171\u653f\u7b56\u548c\u793e\u4f1a\u3002", "note_en": "This article is part of the  Free Speech Project, a collaboration between Future Tense and the Tech, Law, &amp; Security Program at American University Washington College of Law that examines the ways technology is influencing how we think about speech.\n  As a general rule, when a country shuts off some or all of its connections to the global internet, it doesn\u2019t need to announce the news. People in that country notice when they can\u2019t access online services, and people outside that country can quickly figure out that something\u2019s going on when they stop receiving traffic from that country or being able to route traffic to servers and service providers in that country. So it was pretty strange when Russia decided to  announce last week that it had successfully run tests between June 15 and July 15 to show it could disconnect itself from the internet.\n    The tests seem to have gone largely unnoticed both in and outside of Russia, indicating that whatever they entailed they did not involve Russia  actually disconnecting from the global internet. Indeed, it\u2019s a little difficult to guess at what exactly the tests did involve given the vagueness of a  report in the RBC Daily. The Russian newspaper published an article on July 21 reporting that the month of tests had been a success, citing documents from an information security working group that indicated all of the major telecom providers in Russia had participated in the tests. The exercises are supposed to be held annually but were canceled last year due to the pandemic, and whatever went on this year definitely did not include Russia disconnecting from the global internet for any prolonged period of time since that would be impossible to hide. Instead, the tests\u2014and, most of all, the announcement about their success\u2014seem to be intended as some kind of signal that Russia is no longer dependent on the rest of the world for its internet access. But it\u2019s not at all clear what that would even mean since Russia is clearly still dependent on people and companies in other countries for access to the online content and services they create and host\u2014just as we all are.\n        For the past two years, ever since implementing its \u201csovereign internet law\u201d in 2019, Russia has been talking about establishing its own domestic internet that does not rely on any infrastructure or resources located outside the country. Presumably, the tests completed this summer are related to that goal of being able to  operate a local internet within Russia that does not rely on the global Domain Name System to map websites to specific IP addresses. This is not actually a particularly ambitious goal\u2014any country could operate its own domestic internet with its own local addressing system if it wanted to do so instead of connecting to the larger global internet (the one I would call the \u201cInternet\u201d if I were still  permitted by style guides to use a capital \u201cI\u201d in that word\u2014and, this is exactly why  Internet is grammatically important: to distinguish between smaller, local internetworks, or internets, like Russia\u2019s and the global, public Internet you are using to read this article).\n    The confusing thing about Russia\u2019s plans is it seems to want to be able to use its isolated Russian internet to access the global internet. So, by design, the tests of Russia\u2019s sovereign internet did not cause any interruption to its connection to the global internet\u2014but it\u2019s completely unclear what they actually did. One source apparently  told the Russian newspaper RBC Daily that \u201cthe capability of physically disconnecting the Russian part of the internet was tested.\u201d But there\u2019s simply no way that Russia could have physically disconnected its infrastructure from the rest of the world for any extended period of time without anyone noticing.\n    The  Center for Applied Internet Data Analysis at the University of California San Diego maintains an  Internet Outage Detection and Analysis tool that combines three data sets to identify internet outages around the world. It monitors the Border Gateway Protocol that is used by internet service providers to exchange routing information, as well as what IP addresses it is receiving traffic from, and which addresses it is able to probe, to figure out when parts of the internet become unreachable or go offline. When there is an actual internet outage, typically one or more of these indicators drops significantly because the region stops exchanging routing information with outside providers, stops sending outbound traffic, or stops receiving inbound traffic. The  data sets for Russia from June 15 through July 15, the period of the supposed disconnection tests, shows few indications of any actual disconnection other than a period around July 5 when unsolicited traffic from Russia appears to have dropped off.\n    Whatever Russia did this summer, it did not physically disconnect from the global internet. It doesn\u2019t even appear to have virtually disconnected from the global internet in any meaningful sense. Perhaps it shifted some of its critical infrastructure systems to rely more on domestic service providers and resources. Perhaps it created more local copies of the addressing system used to navigate the internet and tested its ability to rely on those. Perhaps it tested its ability to route online traffic within the country through certain chokepoints for purposes of better surveillance and monitoring. None of those are activities that would be immediately visible from outside the country and all of them would be in line with Russia\u2019s stated goals of relying less on internet infrastructure outside its borders and strengthening its ability to monitor online activity.\n        But the goal of being completely independent of the rest of the world\u2019s internet infrastructure while still being able to access the global internet is a nonsensical and impossible one. Russia cannot both disconnect from the internet and still be able to use all of the online services and access all of the websites hosted and maintained by people in other parts of the world, as appears to have been the case during the monthlong period of testing. So it\u2019s a little hard to know what to make of last week\u2019s reports about the successful tests of the Russian domestic internet. If the announcement is meant as public posturing, it\u2019s not clear what message, exactly, it\u2019s intended to send. Being able to disconnect your country from the internet is not all that difficult\u2014and certainly nothing to brag about. But announcing that you\u2019ve successfully disconnected from the internet when it\u2019s patently clear that you haven\u2019t suggests both profound technical incompetence and a deep-seated uncertainty about what a domestic Russian internet would actually mean.\n  Future Tense is a partnership of  Slate,  New America, and  Arizona State University that examines emerging technologies, public policy, and society.", "posttime": "2021-08-02 03:50:24", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4fc4\u7f57\u65af,nonsensical,\u4e92\u8054\u7f51", "title": "\u4fc4\u7f57\u65af\u521b\u5efa\u81ea\u5df1\u7684\u56fd\u5185\u4e92\u8054\u7f51\u7684\u201c\u8352\u8c2c\u3001\u4e0d\u53ef\u80fd\u7684\u4efb\u52a1\u201d", "title_en": "Russia's 'Nonsensical, Impossible Quest' to Create Its Own Domestic Internet", "transed": 1, "url": "https://slate.com/technology/2021/07/russia-sovereign-internet-disconnection-test.html", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "\u4e92\u8054\u7f51"]}, {"category": "", "categoryclass": "", "imagename": "2e59473ad5650ef950cbc01f128bbd44.jpeg", "infoid": 1071047, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u6bb5\u8c08\u5230\u5ba2\u6237\u5bf9\u65b0\u53d1\u660e\u7684\u62b5\u5236\u548c\u9886\u57df\u77e5\u8bc6\u7684\u7834\u574f\u65f6\uff0c\u5b83\u8c08\u5230\u4e86 Dvorak \u952e\u76d8\u7684\u53d1\u660e\u3002\u636e\u8bf4\u6bd4 QWERTY \u952e\u76d8\u66f4\u597d - \u4f46\u88ab\u5927\u591a\u6570\u5ba2\u6237\u5ffd\u7565\u4e86\u3002\u636e\u8bf4\u5965\u53e4\u65af\u7279\u00b7\u5fb7\u6c83\u590f\u514b (August Dvorak) \u6b7b\u5f97\u5f88\u75db\u82e6\uff0c\u4ed6\u58f0\u79f0\uff1a\u201c\u6211\u5df2\u7ecf\u538c\u5026\u4e86\u4e3a\u4eba\u7c7b\u505a\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u4e8b\u60c5\u3002\u4ed6\u4eec\u6839\u672c\u4e0d\u60f3\u6539\u53d8\uff01\u201d\u771f\u7684\u5417\uff1f\u5f15\u6587\u975e\u5e38\u542b\u7cca - \u5c31\u50cf\u5927\u591a\u6570\u5f15\u6587\u4e00\u6837 - \u53ea\u8bf4\u201c\u94bb\u77f3\uff0c\u201cQWERTY \u7684\u8bc5\u5492\u3002\u201d\u5feb\u901f\u641c\u7d22\u5728 Wikiquote \u4e0a\u627e\u5230\u4e86\u5b83 - \u5c3d\u7ba1\u94fe\u63a5\u5df2\u635f\u574f\u3002\u6211\u627e\u5230\u4e86\u539f\u6587\u2014\u2014Jared Diamend 1997 \u5e74\u7684\u4e00\u7bc7\u6587\u7ae0\u3002\u5965\u53e4\u65af\u7279\u00b7\u5fb7\u6c83\u590f\u514b (August Dvorak) \u4e8e 1975 \u5e74\u53bb\u4e16\uff0c\u4ed6\u62b1\u6028\u9053\uff0c\u6211\u5df2\u7ecf\u538c\u5026\u4e86\u5c1d\u8bd5\u4e3a\u4eba\u7c7b\u505a\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u4e8b\u60c5\u3002\u4ed6\u4eec\u53ea\u662f\u4e0d\u60f3\u6539\u53d8\uff01\u641c\u7d22\u8be5\u5f15\u8a00\u7684\u53d8\u4f53\uff0c\u7ed3\u679c\u51fa\u73b0\u4e86 1972 \u5e74\u7684\u300a\u8ba1\u7b97\u673a\u4e0e\u4eba\u300b\uff0c\u7b2c 21 \u5377 \u607c\u4eba\u7684\u662f\uff0c\u8c37\u6b4c\u53ea\u663e\u793a\u4e86\u4e00\u4e2a\u7247\u6bb5\uff0c\u6240\u4ee5\u6211\u4eec\u770b\u4e0d\u5230\u4f5c\u8005\u662f\u8c01\uff0c\u6216\u8005\u8fd9\u7bc7\u6587\u7ae0\u7684\u6807\u9898\u662f\u5426\u4e3a\u201c\u6211\u4e0e\u4f1f\u5927\u7684\u53d1\u660e\u5bb6\u8fdb\u884c\u7684\u60f3\u8c61\u5bf9\u8bdd\u6211\u5bf9\u6bd2\u54c1\u611f\u5230\u538c\u70e6\u3002\u201d\n\u6211\u65e0\u6cd5\u5728\u4efb\u4f55\u6613\u4e8e\u8bbf\u95ee\u7684\u6863\u6848\u4e2d\u627e\u5230\u5b83\u3002\u5927\u82f1\u56fe\u4e66\u9986\u53ea\u6709\u7b2c 22 \u5377\u4ee5\u540e\uff0c\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u60a8\u8981\u627e\u7684\u5185\u5bb9\u5417\uff1f\u4f46\u662f\u8fd9\u4e2a\u94fe\u63a5\u53ef\u80fd\u4ecd\u7136\u5f88\u6709\u8da3/\u6709\u5e2e\u52a9\u5417\uff1f \ud83d\ude42 https://t.co/wNFEmXSCfQ \u786e\u5b9e\u5982\u6b64\uff01\u8fd9\u672c\u6742\u5fd7\u5728\u7b2c 21 \u5377\u4e2d\u88ab\u79f0\u4e3a\u522b\u7684\u4e1c\u897f\u3002 Archive.org \u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u6742\u5fd7\u626b\u63cf\uff1a\u7f57\u4f2f\u7279\u5e15\u91d1\u68ee\u53ea\u662f\u6253\u7535\u8bdd\u7ed9\u5fb7\u6c83\u590f\u514b\u535a\u58eb\u5e76\u91c7\u8bbf\u4e86\u4ed6\uff01\u7ed3\u679c\u662f\u201c\u5fb7\u6c83\u590f\u514b\u7b80\u5316\u952e\u76d8\uff1a\u56db\u5341\u5e74\u7684\u632b\u6298\u201d\u4e00\u6587\u3002\u91c7\u8bbf\u53d1\u751f\u5728 1962 \u5e74\u3002\u5fb7\u6c83\u590f\u514b\u5728\u8fd9\u7bc7\u6587\u7ae0\u53d1\u8868\u4e09\u5e74\u540e\u53bb\u4e16\u3002\u7531\u4e8e\u4ed6\u7684\u952e\u76d8\u5e03\u5c40\u5728 1962 \u5e74\u548c\u4ed6\u53bb\u4e16\u4e4b\u95f4\u6ca1\u6709\u83b7\u5f97\u4efb\u4f55\u663e\u7740\u7684\u5438\u5f15\u529b\uff0c\u6211\u6000\u7591\u4ed6\u7684\u6001\u5ea6\u6ca1\u6709\u6539\u53d8\u3002\u5f53\u62a5\u4ef7\u51c6\u786e\u65f6\u4e0d\u662f\u5f88\u597d\u5417\uff01\u5f53\u4f5c\u8005\u4e0d\u56de\u5230\u6e90\u5934\u65f6\uff0c\u8fd9\u4e0d\u662f\u4ee4\u4eba\u6cae\u4e27\u5417\uff1f", "note_en": "In a passage talking about customers&#39; resistance to new inventions and the destruction of domain knowledge, it talks about the invention of the Dvorak keyboard. Supposedly better than the QWERTY keyboard - but ignored by the majority of customers.\n August Dvorak is said to have died a bitter man, claiming, \u201cI\u2019m tired of trying to do something worthwhile for the human race. They simply don\u2019t want to change!\u201d\n Is that true? The citation is maddeningly vague - as most citations are - saying only &#34;Diamond, \u201cThe Curse of QWERTY.\u201d&#34;\n  A quick search found it on  Wikiquote - albeit with a broken link. I found the original - a  1997 article by Jared Diamend.\n August Dvorak died in 1975, a bitter man: I\u2019m tired of trying to do something worthwhile for the human race, he complained. They simply don\u2019t want to change!\n  A search for a variation of that quote turned up  1972&#39;s Computers and People, Volume 21\n  Annoyingly, Google only shows a snippet, so we can&#39;t see who the author was or if the article is entitled &#34;Imaginary conversations I had with great inventors while I was out of my gourd on drugs.&#34;\n I couldn&#39;t find it in any easily accessible archives. The  British Library only has Volume 22 onwards\n  I don&#39;t think it&#39;s quite what you&#39;re looking for? But this link might still be interesting / helpful? \ud83d\ude42  https://t.co/wNFEmXSCfQ\n  Indeed! The journal was called something else for Volume 21. And  Archive.org has a scan of the full magazine:\n  Robert Parkinson simply called up Dr Dvorak and interviewed him! The article &#34;The Dvorak Simplified Keyboard: Forty Years of Frustration&#34; was the result.\n The interview took place in 1962.  Dvorak died three years after this article was published. As his keyboard layout didn&#39;t gain any significant traction between 1962 and his death, I suspect his attitude didn&#39;t alter.\n Isn&#39;t it nice when quotes are accurate! And isn&#39;t it frustrating when authors don&#39;t go back to the source?", "posttime": "2021-08-02 03:49:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "die,\u952e\u76d8", "title": "\u5fb7\u6c83\u590f\u514b\u6b7b\u540e\u662f\u201c\u82e6\u4eba\u201d\u5417\uff1f", "title_en": "Did Dvorak die \u201ca bitter man\u201d?", "transed": 1, "url": "https://shkspr.mobi/blog/2021/07/did-dvorak-die-a-bitter-man/", "via": "", "real_tags": ["die", "\u952e\u76d8"]}, {"category": "", "categoryclass": "", "imagename": "14204ab431b0421b636670f2535f480a.png", "infoid": 1071045, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u611f\u8c22\u60a8\u7684\u652f\u6301\uff01\u60a8\u7684\u6350\u6b3e\u5c06\u4f7f\u670d\u52a1\u5668\u4fdd\u6301\u8fd0\u884c\uff0c\u8ba9\u6211\u4fdd\u6301\u66f4\u65b0\uff0c\u5e76\u8d2d\u4e70\u66f4\u591a\u5496\u5561\u2615 \u4ec5\u4e2d\u6587\u7b80\u4f53/\u7e41\u4f53\u548c\u82f1\u6587\u5b8c\u5168\u672c\u5730\u5316\uff0c\u7531\u4e8e\u8bed\u8a00\u6587\u4ef6\u4e2d\u7f3a\u5c11\u5b57\u7b26\u4e32\uff0cMacType Tuner \u4e2d\u53ef\u80fd\u7f3a\u5c11\u67d0\u4e9b\u9009\u9879\u3002\u4f60\u53ef\u4ee5\u5e2e\u5fd9\u7ffb\u8bd1\uff01\u5982\u679c\u4f60\u60f3\u548c MacType \u5b98\u65b9\u7248\u672c\u4e00\u8d77\u4f7f\u7528 MacType-patch\uff0c\u8bb0\u5f97\u5728\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 DirectWrite=0 \u5426\u5219\u4f60\u4f1a\u9047\u5230\u795e\u79d8\u7684\u95ee\u9898 \u5982\u679c\u4f60\u8fd0\u884c\u7684\u662f 64 \u4f4d Windows\uff0c\u53cd\u6076\u610f\u8f6f\u4ef6/\u9632\u75c5\u6bd2\u8f6f\u4ef6\u53ef\u80fd\u4f1a\u4e0e MacType \u51b2\u7a81\uff0c\u56e0\u4e3a\u5b83\u4f1a\u770b\u5230MacType \u8bd5\u56fe\u4fee\u6539\u6b63\u5728\u8fd0\u884c\u7684\u8f6f\u4ef6\u3002\u4e00\u79cd\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c1d\u8bd5\u5728\u670d\u52a1\u6a21\u5f0f\u4e0b\u8fd0\u884c\uff08\u63a8\u8350\uff09\uff0c\u6216\u5c06 HookChildProcesses=0 \u6dfb\u52a0\u5230\u60a8\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u3002\u6709\u5173\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 https://github.com/snowie2000/mactype/wiki/HookChildProcesses\uff0cOffice 2013 \u4e0d\u4f7f\u7528 DirectWrite \u6216 GDI\uff08\u5b83\u4f7f\u7528\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u5448\u73b0\uff09\uff0c\u56e0\u6b64 Office 2013 \u4e0d\u9002\u7528\u4e8e MacType\u3002\u5982\u679c\u8fd9\u8ba9\u60a8\u611f\u5230\u56f0\u6270\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4f7f\u7528 GDI \u7684 Office 2010 \u6216\u4f7f\u7528 DirectWrite \u7684 Office 2016+\u3002 WPS \u5177\u6709\u5185\u7f6e\u7684\u9632\u5fa1\u529f\u80fd\uff0c\u53ef\u4ee5\u81ea\u52a8\u5378\u8f7d MacType\uff0c\u65e0\u6cd5\u5173\u95ed\u3002\u8bf7\u8054\u7cfb\u5176\u8f6f\u4ef6\u652f\u6301\u5bfb\u6c42\u89e3\u51b3\u65b9\u6848\u3002\u6211\u4eec\u4e0d\u4f1a\u505a\u4efb\u4f55\u4e8b\u60c5\u6765\u7ed5\u8fc7\u5b83\u3002\u65e0\u6cd5\u518d\u901a\u8fc7 Windows 10 \u4e2d\u7684\u5411\u5bfc\u542f\u7528\u6ce8\u518c\u8868\u6a21\u5f0f\u3002\n\u6211\u4eec\u6709\u4e00\u4e2a\u8be6\u7ec6\u7684\u6307\u5357\uff0c\u4ecb\u7ecd\u5982\u4f55\u5728 wiki \u4e2d\u624b\u52a8\u542f\u7528\u6ce8\u518c\u8868\u6a21\u5f0f\uff0c\u5728\u5f00\u59cb\u4e4b\u524d\u51c6\u5907\u597d\u87ba\u4e1d\u5200\u3002", "note_en": "Thank you for your support! Your donations will keep the server running, keep me updating, and buy more coffees  \u2615\n  Only Chinese simplified/Traditional and English are fully localized, some options may missing in MacType Tuner due to the strings missing in the language file. You can help with translations!\n If you want to use MacType-patch together with MacType official release, remember to add DirectWrite=0 to your profile or you will have mysterious problems\n If you&#39;re running 64 bit Windows, antimalware/antivirus software may conflict with MacType, because it sees MacType trying to modify running software. One possible workaround is to try running in Service Mode (recommended), or add HookChildProcesses=0 to your profile. See  https://github.com/snowie2000/mactype/wiki/HookChildProcesses for an explanation\n Office 2013 does not use DirectWrite or GDI (it uses its own custom rendering), so Office 2013 doesn&#39;t work with MacType. If this bothers you you can use Office 2010 which uses GDI or Office 2016+ which uses DirectWrite.\n WPS has a builtin defense that  UNLOADS MacType automatically which can&#39;t be turned off. Please contact its software support for solution. We won&#39;t to anything to walkaround it.\n  It is no longer possible to enable registry mode via the wizard in Windows 10.\n We have a detailed guide on how you can enable the registry mode manually in  wiki, get your screwdrivers ready before you head over to it.", "posttime": "2021-08-02 03:48:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,\u5b57\u4f53,font,mactype", "title": "MacType\uff1a\u66f4\u597d\u7684 Windows \u5b57\u4f53\u6e32\u67d3", "title_en": "MacType: Better Font Rendering for Windows", "transed": 1, "url": "https://github.com/snowie2000/mactype", "via": "", "real_tags": ["windows", "\u5b57\u4f53", "font", "mactype"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071044, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u5c31\u4f1a\u6536\u5230\u4e00\u5c01\u6765\u81ea\u4e00\u4f4d\u7a0b\u5e8f\u5458\u540c\u4e8b\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u8be2\u95ee\u6211\u5728\u6211\u7684\u4e00\u6b3e\u6e38\u620f\u4e2d\u4f7f\u7528\u4ec0\u4e48\u8bed\u8a00\u4ee5\u53ca\u6211\u662f\u5982\u4f55\u5b66\u4e60\u7684\u3002\u8fd9\u662f\u4e00\u4e2a\u6761\u76ee\uff0c\u5217\u51fa\u4e86\u6709\u5173 C \u7684\u6700\u4f73\u9605\u8bfb\u5185\u5bb9\u3002\u5982\u679c\u60a8\u77e5\u9053\u5176\u4ed6 gem\uff0c\u8bf7\u7ed9\u6211\u53d1\u7535\u5b50\u90ae\u4ef6\u6216\u5728\u9875\u9762\u5e95\u90e8\u6dfb\u52a0\u8bc4\u8bba\u3002\u6b63\u5982\u6211\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\u6211\u7f16\u5199\u7684\u6240\u6709\u5546\u4e1a 3D \u5f15\u64ce\u90fd\u662f 95% C89\uff08\u53c8\u540d\u201c\u6807\u51c6 C\u201d\uff0c\u53c8\u540d\u201cANSI C\u201d\uff09\u3002\u6211\u9009\u62e9\u4e86 C89 \u800c\u4e0d\u662f C99\uff0c\u56e0\u4e3a\u4e00\u4e9b\u7f16\u8bd1\u5668\u4ecd\u7136\u4e0d\u5b8c\u5168\u652f\u6301 C99\u2026\u2026\u5e76\u4e14\u80fd\u591f\u5728 iO\u3001Windows \u548c Xbox 360 \u4e0a\u7f16\u8bd1\u4ece\u7b2c\u4e00\u5929\u8d77\u5c31\u6210\u4e3a\u5f3a\u5236\u6027\u8981\u6c42\u3002\u6839\u636e\u7f16\u8bd1\u5e73\u53f0\u7684\u4e0d\u540c\uff0c\u5269\u4e0b\u7684 5% \u662f Objective-C (iOS) \u6216 C++ (Windows\u3001Mac OS X)\uff0c\u7528\u4e8e\u5c06\u5f15\u64ce\u7ed1\u5b9a\u5230\u672c\u673a\u8f93\u5165/\u8f93\u51fa\u3002\u51fa\u4e4e\u610f\u6599\u7684\u662f\uff0cC \u4e0e C++ \u5728 reddit \u4e0a\u88ab\u8bc1\u660e\u9887\u5177\u4e89\u8bae\u3002\u4e24\u4e2a\u771f\u6b63\u7684\u539f\u56e0\u662f\uff1a\u5728\u6211\u5f00\u59cb\u7f16\u5199\u5f15\u64ce\u65f6\uff0c\u6211\u5bf9 C++ \u8fd8\u4e0d\u591f\u4e86\u89e3\u3002\u5e73\u53f0\u975e\u5e38\u6709\u9650\uff08iPhone 2G\uff09\uff0c\u6211\u77e5\u9053\u6211\u9700\u8981\u5b8c\u5168\u638c\u63e1\u6211\u7684\u5de5\u5177\u624d\u80fd\u8fbe\u5230\u6bcf\u79d2 60 \u5e27\u3002\u81ea\u4ece\u6211\u7b2c\u4e00\u6b21\u9605\u8bfb id Software \u6e90\u4ee3\u7801\u4ee5\u6765\uff0c\u7528 C \u8bed\u8a00\u5b8c\u6210\u4e00\u4e2a\u5546\u4e1a\u6e38\u620f\u662f\u6211\u7684\u68a6\u60f3\u3002\u90a3\u4e9b\u201c\u597d\u201d\u7684\u9009\u62e9\u5417\uff1f\u6211\u8ba4\u4e3a\u6700\u540e\u552f\u4e00\u6709\u6548\u7684\u95ee\u9898\u662f\u201c\u4f60\u53d1\u8d27\u4e86\u5417\uff1f\u201d\u548c\u201c\u5b83\u5feb\u5417\uff1f\u201d\u3002\u8003\u8651\u5230\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5e27\u901f\u7387\uff08\u6709\u4e9b\u4eba\u63d0\u5230\u5728\u73a9 Shmup \u65f6\u5c1d\u8bd5\u6655\u8f66\uff09\uff0c\u6211\u8ba4\u4e3a\u6211\u505a\u51fa\u4e86\u6b63\u786e\u7684\u51b3\u5b9a\u3002\u6211\u5c06\u4ece\u6211\u4e0d\u592a\u91cd\u89c6\u7684\u4e1c\u897f\u5f00\u59cb\uff1a\u4e92\u8054\u7f51\u6559\u7a0b\u3001\u535a\u5ba2\u548c\u51e0\u4e4e\u6240\u6709\u8c37\u6b4c\u5e26\u6765\u7684\u4e1c\u897f\uff08\u662f\u7684\uff0c\u5b83\u5305\u62ec\u8fd9\u7bc7\u6587\u7ae0\uff09\u3002\u6211\u901a\u5e38\u8ba4\u4e3a\u8fd9\u4e9b\u6765\u6e90\u4e0d\u53ef\u9760\u4e14\u53ef\u80fd\u6709\u5bb3\u3002\u548c\u4e1a\u5185\u5f88\u591a\u4eba\u4e00\u6837\uff0c\u6211\u4e5f\u7ecf\u5e38\u4f7f\u7528\u8c37\u6b4c\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u53d1\u73b0\u901f\u5ea6\u7684\u9519\u89c9\u548c\u7b54\u6848\u7684\u4e0d\u51c6\u786e\u4f1a\u9002\u5f97\u5176\u53cd\u3002\u6ca1\u6709\u7f51\u7ad9\u6bd4\u4e00\u672c\u597d\u4e66\u66f4\u597d\u3002\u6ca1\u6709\u4ec0\u4e48\u597d\u4e66\u80fd\u50cf\u53cd\u6c47\u7f16\u8f93\u51fa\u4e00\u6837\u597d\u3002", "note_en": "Every once in a while I receive an email from a fellow programmer asking me what language I used for  one of my  games and how I learned it. Here is an entry that list the best things to read about C.  If you know of other gems, please email me or add a comment at the bottom of the page.\n  As I mentioned it in a previous  entry, all the commercial 3D engines I wrote so far are 95% C89 (aka &#34;Standard C&#34;, aka &#34;ANSI C&#34;). I picked C89 instead of C99 because some compilers still don&#39;t support fully C99\u2026and to be able to compile on iOs, Windows and Xbox 360 was a mandatory from day one.  Depending on the compiling platform, the 5% remaining are Objective-C (iOS) or C++ (Windows, Mac OS X) to bind the engine to the native inputs/output. Unexpectedly the C vs C++ proved quite  controversial on reddit. The two real reasons were: I didn&#39;t know C++ well enough at the time I started writing the engines. The platform was quite limited (iPhone 2G) and I knew I would need to totally master my tools in order to achieve 60 frames per second.\n Since I first read id Software source code, it was a dream to complete a commercial game using C.\n Were those &#34;good&#34; choices? I think in the end the only valid questions are &#34;Did you ship it?&#34; and &#34;Was it fast?&#34;. Considering the incredible frame rate achieved (some people mentioned experimenting motion sickness while playing  Shmup) I think I made the right calls.\n  I&#39;m going to start with the things I didn&#39;t take too seriously: Internet tutorials, blogs and almost anything brought by Google (yes, it includes this article). I usually considered those sources unreliable and potentially harmful.   Like a lot of people in the industry I used to Google way too often. Overtime I found the illusion of speed and the inaccuracy of the answers to be counter-productive.  No website is as good as a good book. And no good book is as good as a disassembly output.", "posttime": "2021-08-02 03:44:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u6210\u4e3a,good,c++", "title": "\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7684 C \u7a0b\u5e8f\u5458 (2011)", "title_en": "To become a good C programmer (2011)", "transed": 1, "url": "https://fabiensanglard.net/c/", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u6210\u4e3a", "good", "c++"]}, {"category": "", "categoryclass": "", "imagename": "180bd09e98cefb865a95afcdd750a3d7.jpg", "infoid": 1071043, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u76ee\u524d\u7684\u7edf\u8ba1\u6570\u636e\u8868\u660e\uff0c\u6bcf\u5e74\u7ea6\u6709 10,000 \u4eba\u56e0\u9152\u9a7e\u800c\u6b7b\u4ea1\u3002\u5927\u7ea6\u6bcf 52 \u5206\u949f\u5c31\u6709 1 \u4eba\u6b7b\u4e8e\u4e0e\u9152\u9a7e\u6709\u5173\u7684\u8f66\u7978\u3002\u5373\u4f7f\u5728\u9053\u8def\u660e\u663e\u5b89\u5168\u5f97\u591a\u7684\u632a\u5a01\uff0c2019 \u5e74\u56fd\u9645\u4ea4\u901a\u8bba\u575b\u7684\u4e00\u4efd\u62a5\u544a\u4e5f\u8868\u660e\uff0c\u8be5\u56fd 8% \u7684\u81f4\u547d\u8f66\u7978\u4e0e\u9152\u9a7e\u6709\u5173\u3002\u8003\u8651\u5230\u8fd9\u4e9b\u6570\u5b57\uff0c\u7279\u65af\u62c9\u8fd9\u6837\u7684\u516c\u53f8\u6b63\u5728\u5f00\u53d1\u8f6f\u4ef6\uff0c\u5373\u4f7f\u4ed6\u4eec\u7684\u4eba\u7c7b\u9a7e\u9a76\u5458\u4e27\u5931\u80fd\u529b\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u8f66\u8f86\u5728\u9053\u8def\u4e0a\u5b89\u5168\u8fd0\u884c\uff0c\u8fd9\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\u6700\u8fd1\u5728\u632a\u5a01\u53d1\u751f\u4e86\u8fd9\u6837\u7684\u4e8b\u4ef6\u3002\u6b63\u5982\u4e1c\u90e8\u8b66\u533a\u5728\u5176\u5b98\u65b9\u63a8\u7279\u8d26\u53f7\u4e0a\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u4e00\u540d 24 \u5c81\u7684\u7279\u65af\u62c9\u8f66\u4e3b\u5728\u9a7e\u9a76 Model S \u65f6\u660f\u5012\u4e86\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8be5\u8f66\u7684\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u88ab\u6fc0\u6d3b\uff0c\u8fd9\u8ba9 Model S \u5f97\u4ee5\u4fdd\u6301\u5728\u4e0d\u7ed9\u5176\u4ed6\u53f8\u673a\u5e26\u6765\u9ebb\u70e6\u7684\u60c5\u51b5\u4e0b\u5728\u81ea\u5df1\u7684\u8f66\u9053\u4e0a\u884c\u9a76\u3002 N\u00f8stvettunnelen er stengt mens vi venter p\u00e5 berging\u3002 Sak opprettes og f\u00f8rerkort tas midlertidig i beslag\u3002 \u2014 Politiet i \u00d8st (@politietost) 2021 \u5e74 7 \u6708 30 \u65e5\u5728\u68c0\u6d4b\u5230\u9a7e\u9a76\u5458\u6ca1\u6709\u53cd\u5e94\u540e\uff0c\u8f66\u8f86\u6700\u7ec8\u505c\u4e0b\u6765\u5e76\u8fdb\u884c\u4e86\u5371\u9669\u5904\u7406\u3002\u8fd9\u540d\u7537\u5b50\u540e\u6765\u5f97\u5230\u4e86\u7d27\u6025\u670d\u52a1\u90e8\u95e8\u7684\u7167\u987e\u3002\u4e8b\u4ef6\u4e2d\u65e0\u4eba\u53d7\u4f24\u3002\u8b66\u65b9\u6307\u51fa\uff0c\u5728 Model S \u4e2d\u88ab\u53d1\u73b0\u660f\u8ff7\u7684\u7279\u65af\u62c9\u53f8\u673a\u663e\u7136\u559d\u9189\u4e86\uff0c\u4f46\u4ed6\u5426\u8ba4\u81ea\u5df1\u5728\u5f00\u8f66\u3002\u7136\u800c\uff0c\u663e\u793a\u7279\u65af\u62c9\u8f66\u4e3b\u5728\u9a7e\u9a76\u5ea7\u4e0a\u660f\u5012\u7684\u89c6\u9891\u8bc1\u636e\u5df2\u5728\u7f51\u4e0a\u5206\u4eab\u3002\u8b66\u65b9\u8868\u793a\uff0c\u5df2\u7ecf\u8fdb\u884c\u4e86\u5fc5\u8981\u7684\u68c0\u6d4b\uff0c\u6682\u65f6\u540a\u9500\u4e86\u8be5\u7279\u65af\u62c9\u8f66\u4e3b\u7684\u9a7e\u7167\u3002\u53f8\u673a\u4e5f\u88ab\u63d0\u8d77\u8bc9\u8bbc\u3002\u632a\u5a01\u7684\u7279\u65af\u62c9\u8f66\u4e3b\u5728\u5f00\u8f66\u65f6\u5931\u53bb\u77e5\u89c9\uff0c\u7279\u65af\u62c9\u81ea\u52a8\u9a7e\u9a76\u4eea\u68c0\u6d4b\u5230\u5b83\uff0c\u51cf\u901f\uff0c\u505c\u4e0b\u6765\uff0c\u6240\u4ee5 EMS \u53ef\u4ee5\u5e2e\u52a9@elonmusk @Tesla \u2764\ufe0f\u200d\ud83e\ude79\ud83d\ude91 pic.twitter.com/kl1CEeiHDi\n\u2014 \u5965\u65af\u6c40\u7279\u65af\u62c9\u4ff1\u4e50\u90e8 (@AustinTeslaClub) 2021 \u5e74 7 \u6708 31 \u65e5\u8fd9\u6837\u7684\u4e8b\u4ef6\u5f88\u5bb9\u6613\u53d8\u5f97\u66f4\u7cdf\u3002\u6bd5\u7adf\uff0c\u9152\u540e\u53f8\u673a\u5f88\u5bb9\u6613\u4f24\u5bb3\u81ea\u5df1\uff0c\u4f46\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u4ed6\u4eec\u4e5f\u5f88\u5bb9\u6613\u4f24\u5bb3\u4ed6\u4eba\u3002\u5982\u679c\u8f66\u8f86\u80fd\u591f\u5728\u4eba\u7c7b\u9a7e\u9a76\u5458\u4e27\u5931\u884c\u4e3a\u80fd\u529b\u540e\u81ea\u884c\u5b89\u5168\u505c\u8f66\uff0c\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u4e0d\u4f1a\u90a3\u4e48\u666e\u904d\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cModel S \u4e2d\u7684 Autopilot \u7cfb\u7edf\u53ef\u80fd\u751a\u81f3\u4e0d\u662f\u7279\u65af\u62c9\u8fc4\u4eca\u4e3a\u6b62\u6700\u597d\u7684\u3002 FSD Beta 9.1 \u76ee\u524d\u6b63\u5728\u7531\u4e00\u7ec4\u9009\u5b9a\u7684\u7279\u65af\u62c9\u8f66\u4e3b\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5b83\u6bd4\u6765\u81ea\u632a\u5a01\u7684 Model S \u914d\u5907\u7684\u7cfb\u7edf\u5148\u8fdb\u548c\u5f3a\u5927\u5f97\u591a\u3002\u7279\u65af\u62c9\u7684 Autopilot \u7cfb\u7edf\u62db\u81f4\u4e86\u8bb8\u591a\u6000\u7591\u8005\u7684\u6279\u8bc4\uff0c\u4f46\u5e94\u8be5\u6307\u51fa\u7684\u662f\uff0c\u5373\u4f7f\u662f\u5176\u66f4\u57fa\u672c\u7684\u529f\u80fd\u5728\u4eca\u5929\u4e5f\u5df2\u7ecf\u53ef\u4ee5\u633d\u6551\u751f\u547d\u3002\u8003\u8651\u5230\u6700\u8fd1\u5728\u632a\u5a01\u53d1\u751f\u7684 Model S \u9a7e\u9a76\u5458\u4e8b\u4ef6\uff0c\u4f3c\u4e4e\u5148\u8fdb\u7684\u9a7e\u9a76\u5458\u8f85\u52a9\u7cfb\u7edf\uff08\u4f8b\u5982\u7279\u65af\u62c9\u4eca\u5929\u5f00\u53d1\u7684\u90a3\u4e9b\u7cfb\u7edf\uff09\u5bf9\u4e8e\u4f7f\u4e16\u754c\u9053\u8def\u53d8\u5f97\u66f4\u5b89\u5168\u786e\u5b9e\u81f3\u5173\u91cd\u8981\u3002\u4e0d\u8981\u72b9\u8c6b\u4e0e\u6211\u4eec\u8054\u7cfb\u4ee5\u83b7\u53d6\u65b0\u95fb\u63d0\u793a\u3002\u53ea\u9700\u5411 [\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4] \u53d1\u9001\u6d88\u606f\uff0c\u63d0\u9192\u6211\u4eec\u6ce8\u610f\u3002", "note_en": "Current US statistics state that about 10,000 people die every year due to drunk driving. That\u2019s roughly one fatality from a drunk driving-related crash  every 52 minutes. Even in Norway, where roads are significantly safer, a  report from the International Transport Forum in 2019 indicated that 8% of the country\u2019s fatal crashes involved a drunk driver. With these numbers in mind, it is no surprise that companies like Tesla are creating software that allows vehicles to operate safely on the road, even if their human drivers are incapacitated.\n Such an incident happened recently in Norway. As explained by the  Eastern Police District on its official Twitter account, a 24-year-old Tesla owner ended up passing out while driving his Model S. Fortunately for the driver, the vehicle\u2019s Autopilot system was activated, which allowed the Model S to stay in its lane without causing trouble to other drivers.\n N\u00f8stvettunnelen er stengt mens vi venter p\u00e5 berging. Sak opprettes og f\u00f8rerkort tas midlertidig i beslag.\n\u2014 Politiet i \u00d8st (@politietost)  July 30, 2021\n  Upon detecting that its driver was unresponsive, the vehicle eventually came to a stop and engaged its hazards. The man was later attended to by emergency services.\u00a0No one was injured in the incident.\n The police noted that the Tesla driver, who was found unconscious in the Model S, was evidently drunk, though he denied that he was driving. Video evidence showing the Tesla owner  passed out in the driver\u2019s seat have been shared online, however. The police stated that necessary tests have been taken, and that the Tesla owner\u2019s driver\u2019s license has been temporarily suspended. A case has also been filed against the driver.\n Tesla owner in Norway suffers unconsciousness while driving, Tesla autopilot detects it, slows, comes to a stop so EMS can help  @elonmusk  @Tesla \u2764\ufe0f\u200d\ud83e\ude79\ud83d\ude91     pic.twitter.com/kl1CEeiHDi\n\u2014 Austin Tesla Club (@AustinTeslaClub)  July 31, 2021\n Such an incident could have easily been a lot worse. It is very easy for drunk drivers to harm themselves, after all, but what\u2019s even worse is that they could very easily harm other people just as easily. These scenarios would likely not be as prevalent if vehicles are capable of safely stopping on their own once their human drivers are incapacitated.\n What\u2019s pretty remarkable was that the Autopilot system in the Model S is likely not even Tesla\u2019s best to date.  FSD Beta 9.1, which is currently being tested by a select group of Tesla owners, is far more advanced and capable than the system equipped in the Model S from Norway.\u00a0Tesla\u2019s Autopilot system attracts a lot of criticism from skeptics, but it should be noted that even its more basic features are already saving lives today. Considering the recent incident with the Model S driver in Norway, it definitely seems like  advanced driver-assist systems, such as those being developed by Tesla today, are indeed crucial to making the world\u2019s roads a safer place.\n Don\u2019t hesitate to contact us with news tips. Just send a message to\u00a0   [email\u00a0protected] \u00a0to give us a heads up.", "posttime": "2021-08-02 02:58:40", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7279\u65af\u62c9,\u9632\u6b62,autopilot,model", "title": "\u7279\u65af\u62c9 Autopilot \u9632\u6b62\u9152\u9a7e\u72af\u81f4\u547d\u9519\u8bef", "title_en": "Tesla Autopilot prevents drunk driver from making a fatal mistake", "transed": 1, "url": "https://www.teslarati.com/tesla-autopilot-saves-drunk-driver-norway/", "via": "", "real_tags": ["\u7279\u65af\u62c9", "\u9632\u6b62", "autopilot", "model"]}, {"category": "", "categoryclass": "", "imagename": "8084bb25451eb8845e7fa3499bbfa925.jpg", "infoid": 1071042, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8def\u900f\u793e 8 \u6708 1 \u65e5 - Zoom Video Communications Inc (ZM.O) \u540c\u610f\u652f\u4ed8 8500 \u4e07\u7f8e\u5143\u5e76\u52a0\u5f3a\u5176\u5b89\u5168\u63aa\u65bd\uff0c\u4ee5\u89e3\u51b3\u4e00\u9879\u8bc9\u8bbc\uff0c\u8be5\u8bc9\u8bbc\u58f0\u79f0\u5176\u4e0e Facebook\u3001\u8c37\u6b4c\u548c LinkedIn \u5171\u4eab\u4e2a\u4eba\u6570\u636e\u5e76\u8ba9\u9ed1\u5ba2\u4fb5\u72af\u4e86\u7528\u6237\u7684\u9690\u79c1\u6743\u5728\u79f0\u4e3a Zoombombing \u7684\u505a\u6cd5\u4e2d\u6270\u4e71 Zoom \u4f1a\u8bae\u3002\u5468\u516d\u4e0b\u5348\u63d0\u4ea4\u7684\u521d\u6b65\u548c\u89e3\u534f\u8bae\u9700\u8981\u7f8e\u56fd\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5723\u4f55\u585e\u5730\u533a\u6cd5\u5b98 Lucy Koh \u7684\u6279\u51c6\u3002\u62df\u8bae\u96c6\u4f53\u8bc9\u8bbc\u4e2d\u7684\u8ba2\u6237\u5c06\u6709\u8d44\u683c\u83b7\u5f97\u5176\u6838\u5fc3\u8ba2\u9605\u7684 15% \u6216 25 \u7f8e\u5143\u7684\u9000\u6b3e\uff0c\u4ee5\u8f83\u5927\u8005\u4e3a\u51c6\uff0c\u800c\u5176\u4ed6\u4eba\u6700\u591a\u53ef\u83b7\u5f97 15 \u7f8e\u5143\u3002 Zoom \u540c\u610f\u91c7\u53d6\u5b89\u5168\u63aa\u65bd\uff0c\u5305\u62ec\u5728\u4f1a\u8bae\u4e3b\u6301\u4eba\u6216\u5176\u4ed6\u53c2\u4e0e\u8005\u5728\u4f1a\u8bae\u4e2d\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u65f6\u63d0\u9192\u7528\u6237\uff0c\u5e76\u4e3a\u5458\u5de5\u63d0\u4f9b\u9690\u79c1\u548c\u6570\u636e\u5904\u7406\u65b9\u9762\u7684\u4e13\u95e8\u57f9\u8bad\u3002\u8fd9\u5bb6\u603b\u90e8\u4f4d\u4e8e\u5723\u4f55\u585e\u7684\u516c\u53f8\u5728\u540c\u610f\u548c\u200b\u200b\u89e3\u65f6\u5426\u8ba4\u6709\u4e0d\u5f53\u884c\u4e3a\u3002\u5b83\u5728\u5468\u65e5\u6ca1\u6709\u7acb\u5373\u56de\u5e94\u7f6e\u8bc4\u8bf7\u6c42\u3002\u5468\u516d\u7684\u548c\u89e3\u662f\u5728 Koh \u4e8e 3 \u6708 11 \u65e5\u8ba9\u539f\u544a\u63d0\u51fa\u4e00\u4e9b\u57fa\u4e8e\u5408\u540c\u7684\u7d22\u8d54\u4e4b\u540e\u8fbe\u6210\u7684\u3002\u9605\u8bfb\u66f4\u591a \u5c3d\u7ba1 Zoom \u4ece\u96c6\u4f53\u6210\u5458\u90a3\u91cc\u6536\u53d6\u4e86\u7ea6 13 \u4ebf\u7f8e\u5143\u7684 Zoom Meetings \u8ba2\u9605\u8d39\uff0c\u4f46\u9274\u4e8e\u8bc9\u8bbc\u98ce\u9669\uff0c\u539f\u544a\u7684\u5f8b\u5e08\u8ba4\u4e3a 8500 \u4e07\u7f8e\u5143\u7684\u548c\u89e3\u662f\u5408\u7406\u7684\u3002\u4ed6\u4eec\u6253\u7b97\u5bfb\u6c42\u9ad8\u8fbe 2125 \u4e07\u7f8e\u5143\u7684\u6cd5\u5f8b\u8d39\u7528\u3002\nZoomombing \u662f\u6307\u5c40\u5916\u4eba\u52ab\u6301 Zoom \u4f1a\u8bae\u5e76\u5c55\u793a\u8272\u60c5\u5185\u5bb9\u3001\u4f7f\u7528\u79cd\u65cf\u4e3b\u4e49\u8bed\u8a00\u6216\u53d1\u5e03\u5176\u4ed6\u4ee4\u4eba\u4e0d\u5b89\u7684\u5185\u5bb9\u3002 Koh \u8868\u793a\uff0c\u6839\u636e\u300a\u8054\u90a6\u901a\u4fe1\u89c4\u8303\u6cd5\u300b\u7b2c 230 \u6761\uff0cZoom\u201c\u57fa\u672c\u4e0a\u201d\u5bf9 Zoomombing \u514d\u75ab\uff0c\u8be5\u6cd5\u6848\u4fdd\u62a4\u5728\u7ebf\u5e73\u53f0\u514d\u4e8e\u5bf9\u7528\u6237\u5185\u5bb9\u627f\u62c5\u8d23\u4efb\u3002\u81ea\u4ece COVID-19 \u5927\u6d41\u884c\u8feb\u4f7f\u66f4\u591a\u4eba\u5728\u5bb6\u5de5\u4f5c\u4ee5\u6765\uff0cZoom \u7684\u5ba2\u6237\u7fa4\u589e\u957f\u4e86\u516d\u500d\u3002\u8be5\u516c\u53f8\u5728 2021 \u5e74 4 \u6708\u62e5\u6709 497,000 \u540d\u5458\u5de5\u8d85\u8fc7 10 \u540d\u7684\u5ba2\u6237\uff0c\u9ad8\u4e8e 2020 \u5e74 1 \u6708\u7684 81,900 \u540d\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u968f\u7740\u66f4\u591a\u4eba\u63a5\u79cd\u75ab\u82d7\u5e76\u4eb2\u81ea\u91cd\u8fd4\u5de5\u4f5c\u6216\u5b66\u6821\uff0c\u7528\u6237\u589e\u957f\u53ef\u80fd\u4f1a\u653e\u7f13\u6216\u4e0b\u964d\u3002\u6b64\u6848\u6d89\u53ca\uff1aZoom Video Communications Inc \u9690\u79c1\u8bc9\u8bbc\uff0c\u7f8e\u56fd\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u5317\u533a\u5730\u65b9\u6cd5\u9662\uff0c\u7f16\u53f7 20-02155\u3002", "note_en": "Aug 1 (Reuters) - Zoom Video Communications Inc  (ZM.O) agreed to pay $85 million and bolster its security practices to settle a lawsuit claiming it violated users&#39; privacy rights by sharing personal data with Facebook, Google and LinkedIn, and letting hackers disrupt Zoom meetings in a practice called Zoombombing.\n A preliminary settlement filed on Saturday afternoon requires approval by U.S. District Judge Lucy Koh in San Jose, California.\n Subscribers in the proposed class action would be eligible for 15% refunds on their core subscriptions or $25, whichever is larger, while others could receive up to $15.\n Zoom agreed to security measures including alerting users when meeting hosts or other participants use third-party apps in meetings, and to provide specialized training to employees on privacy and data handling.\n The San Jose-based company denied wrongdoing in agreeing to settle. It did not immediately respond on Sunday to a request for comment.\n Saturday&#39;s settlement came after Koh on March 11 let the plaintiffs pursue some contract-based claims.   read more\n Though Zoom collected about $1.3 billion in Zoom Meetings subscriptions from class members, the plaintiffs&#39; lawyers called the $85 million settlement reasonable given the litigation risks. They intend to seek up to $21.25 million for legal fees.\n Zoombombing is where outsiders hijack Zoom meetings and display pornography, use racist language or post other disturbing content.\n Koh said Zoom was &#34;mostly&#34; immune for Zoombombing under Section 230 of the federal Communications Decency Act, which shields online platforms from liability over user content.\n Zoom&#39;s customer base has grown sixfold since the COVID-19 pandemic forced more people to work from home.\n The company had 497,000 customers with more than 10 employees in April 2021, up from 81,900 in January 2020. It has said user growth could slow or decline as more people get vaccines and return to work or school in-person.\n The case is In re: Zoom Video Communications Inc Privacy Litigation, U.S. District Court, Northern District of California, No. 20-02155.", "posttime": "2021-08-02 02:43:59", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u5b89\u5168\u63aa\u65bd,agrees,zoom", "title": "Zoom \u540c\u610f\u652f\u4ed8 8500 \u4e07\u7f8e\u5143\u5e76\u52a0\u5f3a\u5176\u5b89\u5168\u63aa\u65bd\uff0c\u4ee5\u89e3\u51b3\u9488\u5bf9\u6d89\u5acc\u4fb5\u72af\u7528\u6237\u9690\u79c1\u548c Zoombombing \u7684\u96c6\u4f53\u8bc9\u8bbc", "title_en": "Zoom agrees to pay $85M and bolster its security practices to settle a class action lawsuit over alleged user privacy violations and Zoombombing", "transed": 1, "url": "https://www.reuters.com/technology/zoom-reaches-85-mln-settlement-lawsuit-over-user-privacy-zoombombing-2021-08-01/", "via": "", "real_tags": ["\u5b89\u5168\u63aa\u65bd", "agrees", "zoom"]}]
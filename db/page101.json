[{"category": "", "categoryclass": "", "imagename": "b07aa62c298184cb88efa14ac8109b05.jpg", "infoid": 1069042, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea 1963 \u5e74\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af (Sylvia Plath) \u53bb\u4e16\u540e\uff0c\u5979\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u7c97\u4fd7\u7684\u60b2\u5267\u8c61\u5f81\u3002\u8389\u83b2\u00b7\u514b\u52b3\u99a5\u95ee\u9053\uff0c\u968f\u7740\u5979\u542f\u53d1\u66f4\u591a\u4f20\u8bb0\uff0c\u6211\u4eec\u662f\u5426\u4f1a\u66f4\u63a5\u8fd1\u201c\u771f\u6b63\u7684\u201d\u666e\u62c9\u65af\u3002\u5f53\u4e00\u4f4d\u5973\u4f5c\u5bb6\u81ea\u6740\u8eab\u4ea1\u65f6\uff0c\u5b83\u5b9a\u4e49\u4e86\u5979\u3002\u4ece\u5f17\u5409\u5c3c\u4e9a\u4f0d\u5c14\u592b\u5230\u838e\u62c9\u51ef\u6069\uff0c\u5979\u6240\u505a\u7684\u4e00\u5207\uff0c\u5979\u4e00\u751f\u4e2d\u521b\u9020\u7684\u4e00\u5207\u90fd\u6210\u4e3a\u6b7b\u4ea1\u9a71\u52a8\u53d9\u4e8b\u7684\u4e00\u90e8\u5206\u3002\u4e00\u4f4d\u7537\u6027\u4f5c\u5bb6\u8fc7\u65e9\u53bb\u4e16\uff0c\u8fd9\u662f\u4ed6\u521b\u4f5c\u6210\u679c\u7684\u60b2\u5267\u6027\u963b\u788d\u2014\u2014\u4f8b\u5982\uff0c\u6211\u4eec\u54c0\u60bc\u8fea\u4f26\u00b7\u6258\u9a6c\u65af\uff08Dylan Thomas\uff09\u5728 1953 \u5e74 39 \u5c81\u53bb\u4e16\u540e\u4ece\u672a\u5199\u8fc7\u7684\u8bd7\u6b4c\uff0c\u8fd9\u4e0e\u4ed6\u81ea\u6211\u6bc1\u706d\u7684\u751f\u6d3b\u65b9\u5f0f\u622a\u7136\u4e0d\u540c\u3002\u4f0d\u5c14\u592b\u7684\u5c0f\u8bf4\u548c\u51ef\u6069\u7684\u620f\u5267\u88ab\u79f0\u4e3a\u662f\u7cbe\u795e\u75be\u75c5\u7684\u8868\u73b0\uff0c\u800c\u6258\u9a6c\u65af\u7684\u8bd7\u6b4c\u867d\u7136\u4e0d\u662f\u56e0\u4e3a\u4ed6\u9157\u9152\u548c\u751f\u6d3b\u56f0\u96be\uff0c\u4f46\u4ecd\u7136\u975e\u5e38\u51fa\u8272\u3002\u66f4\u50cf\u8fd9\u6837\uff1a\u5728\u90a3\u4e9b\u88ab\u81ea\u6740\u5b9a\u4e49\u7684\u5973\u6027\u827a\u672f\u5bb6\u4e2d\uff0c\u6700\u4e3b\u8981\u7684\u662f\u7f8e\u56fd\u8bd7\u4eba\u548c\u5c0f\u8bf4\u5bb6\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af\uff0c\u5979\u4e8e 1963 \u5e74 2 \u6708 11 \u65e5\u53bb\u4e16\u3002\u4ece\u90a3\u65f6\u8d77\uff0c\u5979\u7684\u540d\u5b57\u5c31\u6210\u4e86\u5973\u6027\u7126\u8651\u7684\u4ee3\u540d\u8bcd\u3002\u5979\u7684\u4f5c\u54c1\u4ee3\u8868\u4e86\u53db\u9006\u4f46\u6cae\u4e27\u7684\u5e74\u8f7b\u5973\u6027\uff0c\u5979\u4eec\u5728\u6d41\u884c\u6587\u5316\u80cc\u666f\u4e2d\u7684\u51fa\u73b0\u8bc1\u660e\u4e86\u8fd9\u4e00\u70b9\u2014\u20141999 \u5e74\u9752\u5c11\u5e74 rom-com \u4e2d\u7684 Kat \u624b\u63e1\u949f\u7f69\u7684\u526f\u672c\uff0c\u5c31\u50cf\u6700\u8fd1 Netflix \u7cfb\u5217\u6027\u6559\u80b2\u4e2d\u7684\u6885\u8299\u4e00\u6837.\u666e\u62c9\u65af\u5df2\u6210\u4e3a\u5c40\u5916\u4eba\u5973\u5b69\u7684\u7c97\u7565\u8c61\u5f81\uff0c\u5979\u62d2\u7edd\u4f20\u7edf\u7684\u5973\u6027\u6c14\u8d28\u6807\u51c6\uff0c\u5c06\u81ea\u5df1\u7684\u751f\u6b7b\u638c\u63e1\u5728\u81ea\u5df1\u7684\u624b\u4e2d\u3002\u8fd9\u79cd\u89e3\u91ca\u6269\u6563\u7684\u5f71\u54cd\u662f\u8d2c\u4f4e\u5973\u6027\u4e0e\u666e\u62c9\u65af\u7684\u4ea4\u5f80\u3002\u4f8b\u5982\uff0c\u9605\u8bfb\u5979\u7684\u6210\u5e74\u5c0f\u8bf4\u300a\u949f\u5f62\u7f69\u300b\uff0c\u88ab\u8bb8\u591a\u4eba\u89c6\u4e3a\u4e00\u79cd\u5c11\u5973\u822c\u7684\u4e25\u8083\u6587\u5b66\u7684\u6210\u4eba\u793c\uff0c\u8fd9\u79cd\u770b\u6cd5\u7ecf\u5e38\u53cd\u6620\u5728 YA \u98ce\u683c\u7684\u5c01\u9762\u8bbe\u8ba1\u4e2d\u3002\u4ece JD Salinger \u5230 David Foster Wallace \u7684\u4f5c\u54c1\uff0c\u7537\u6027\u6210\u5e74\u7684\u53d9\u4e8b\u5e76\u975e\u5982\u6b64\u3002\u4f46\u4e8b\u5b9e\u662f\uff0c\u666e\u62c9\u65af\u662f\u6700\u65e9\u6df1\u5165\u4e86\u89e3\u5973\u6027\u539f\u59cb\u73b0\u5b9e\u7684\u4f5c\u8005\u4e4b\u4e00\u3002\u5728\u5973\u6743\u4e3b\u4e49\u7b2c\u4e8c\u6ce2\u548c\u8d1d\u8482\u5f17\u91cc\u4e39\u7684\u300a\u5973\u6027\u7684\u5965\u79d8\u300b\u4e4b\u524d\uff0c\u666e\u62c9\u65af\u5199\u5230\u4e86\u5979\u5bf9\u5973\u6027\u52a3\u7b49\u5730\u4f4d\u7684\u4e0d\u6ee1\u3001\u5979\u7684\u6027\u51b2\u52a8\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u538b\u529b\u5982\u4f55\u5f71\u54cd\u5979\u7684\u5fc3\u7406\u5065\u5eb7\u3002\u540c\u65f6\uff0c\u949f\u7f69\u548c\u666e\u62c9\u65af\u7684\u8bd7\u6b4c\u90fd\u662f\u865a\u6784\u7684\u3002\u5b83\u4eec\u4ee5\u666e\u62c9\u65af\u7684\u751f\u6d3b\u7ecf\u5386\u4e3a\u57fa\u7840\uff0c\u5c31\u50cf\u6240\u6709\u6587\u5b66\u4f5c\u54c1\u4e00\u6837\uff0c\u4f46\u5b83\u4eec\u5f53\u7136\u4e0d\u662f\u76f4\u63a5\u7684\u81ea\u4f20\u3002\u4f20\u8bb0\u7ecf\u5e38\u5f15\u7528\u666e\u62c9\u65af\u7684\u4f5c\u54c1\u4f5c\u4e3a\u73b0\u5b9e\u751f\u6d3b\u4e8b\u4ef6\u7684\u8bc1\u636e\uff0c\u800c\u4e14\uff0c\u5c31\u50cf\u5b89\u59ae\u53f2\u8482\u6587\u68ee\u7684\u300a\u82e6\u6da9\u540d\u58f0\u300b\u4e00\u6837\uff0c\u7528\u5b83\u4eec\u6765\u58f0\u79f0\u666e\u62c9\u65af\u603b\u662f\u5f88\u6cae\u4e27\uff1b\u53f2\u8482\u6587\u68ee\u4ee5\u4ee4\u4eba\u9707\u60ca\u7684\u58f0\u660e\u7ed3\u675f\u4e86\u5173\u4e8e\u5979\u5e74\u8f7b\u7684\u4e00\u7ae0\uff1a\u201c\u81ea\u6740\u7684\u60f3\u6cd5\u5728\u5979\u7684\u8111\u6d77\u4e2d\u5f62\u6210\uff0c\u5c31\u50cf\u6700\u7ec8\u7684\u3001\u4e0d\u53ef\u9006\u8f6c\u7684\u65e0\u82b1\u679c\u4e00\u6837\u201d\uff0c\u6307\u7684\u662f\u300a\u949f\u5f62\u74f6\u300b\u4e2d\u7684\u8457\u540d\u6bd4\u55bb\uff0c\u5973\u4e3b\u4eba\u516c\u57c3\u4e1d\u7279\u00b7\u683c\u6797\u4f0d\u5fb7\u5c06\u5979\u6240\u6709\u6f5c\u5728\u7684\u672a\u6765\u89c6\u4e3a\u65e0\u82b1\u679c\u5728\u4e00\u68f5\u65e0\u82b1\u679c\u6811\u4e0a\u3002\u7c7b\u4f3c\u7684\u504f\u89c1\u7ee7\u7eed\u5f71\u54cd\u6709\u521b\u9020\u529b\u7684\u5973\u6027\uff0c\u56e0\u6b64\u5979\u4eec\u88ab\u89c6\u4e3a\u4f7f\u7528\u827a\u672f\u4f5c\u4e3a\u6cbb\u7597\u800c\u88ab\u9a73\u56de\u3002\u6211\u4eec\u4e0e\u666e\u62c9\u65af\u9762\u4e34\u7684\u95ee\u9898\u662f\uff0c\u5979\u751f\u6b7b\u7684\u795e\u8bdd\u8ba9\u5979\u5f88\u96be\u5c06\u5979\u7684\u827a\u672f\u4e0e\u6b64\u5206\u5f00\u2014\u2014\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u4e5f\u77e5\u9053\u8c01\u662f\u201c\u771f\u6b63\u7684\u201d\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af\u3002\u7136\u800c\uff0c\u4e86\u89e3\u666e\u62c9\u65af\u7684\u613f\u671b\u63a8\u52a8\u4e86\u4e00\u4e2a\u884c\u4e1a\u3002\u4e00\u672c\u58f0\u79f0\u6bd4\u4ee5\u524d\u66f4\u4e86\u89e3\u5979\u751f\u6d3b\u7684\u65b0\u4f20\u8bb0\u8d8a\u6765\u8d8a\u9891\u7e41\u5730\u51fa\u73b0\u5728\u4e66\u67b6\u4e0a\uff0c\u5176\u4e2d\u4ec5\u5728\u8fc7\u53bb 18 \u4e2a\u6708\u5c31\u51fa\u7248\u4e86\u4e09\u672c\u8457\u540d\u7684\u4f20\u8bb0\u3002\u5176\u4e2d\u4e00\u672c\u4e66\uff0c\u5361\u5c14\u00b7\u7f57\u5229\u68ee (Carl Rollyson) \u7684\u300a\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af\u7684\u6700\u540e\u65e5\u5b50\u300b(The Last Days of Sylvia Plath)\uff0c\u4e8e 2020 \u5e74 3 \u6708\u51fa\u7248\uff0c\u4ec5\u5173\u6ce8\u5979\u7684\u81ea\u6740\u3002\u53e6\u4e00\u672c\u7531\u76d6\u5c14\u00b7\u514b\u52b3\u745f (Gail Crowther) \u4e8e 4 \u6708\u51fa\u7248\u7684\u300a\u4e3d\u5179\u9152\u5e97\u7684\u4e09\u4e2a\u9a6c\u63d0\u5c3c\u4e0b\u5348\u300b(Three-Martini Afternoons at the Ritz) \u662f\u666e\u62c9\u65af (Plath) \u548c\u6ce2\u58eb\u987f\u8bd7\u4eba\u5b89\u59ae\u00b7\u585e\u514b\u65af\u987f (Anne Sexton) \u7684\u53cc\u91cd\u4f20\u8bb0\uff0c\u4ed6\u4eec\u4e8e 1959 \u5e74\u5728\u8bd7\u4eba\u7f57\u4f2f\u7279\u00b7\u6d1b\u5384\u5c14 (Robert Lowell) \u4e3e\u529e\u7684\u4f5c\u5bb6\u7814\u8ba8\u4f1a\u4e0a\u76f8\u8bc6\u3002 \u7b2c\u4e09\u672c\u4e66\u662f\u5e0c\u745f (Heather)\u514b\u62c9\u514b\u7684\u5de8\u8457\u300a\u7ea2\u8272\u5f57\u661f\u300b\uff1a\u53bb\u5e74 10 \u6708\u51fa\u7248\uff0c\u4e0e\u514b\u52b3\u745f\u7684\u4f5c\u54c1\u4e00\u8d77\uff0c\u662f\u7b2c\u4e00\u90e8\u5145\u5206\u5229\u7528\u666e\u62c9\u65af\u6700\u8fd1\u51fa\u7248\u7684\u3001\u5b8c\u6574\u4e14\u672a\u5220\u8282\u7684\u4fe1\u4ef6\u7684\u4e66\u7c4d\u4e4b\u4e00\uff0c\u5e76\u6545\u610f\u98a0\u8986\u4e86\u4ee5\u6b7b\u4ea1\u4e3a\u4e2d\u5fc3\u7684\u76f8\u53cd\u65b9\u5411\u65e9\u671f\u4e66\u7c4d\u7684\u5e74\u8868\u3002\u5c3d\u7ba1\u8fd9\u4e9b\u4e66\u53ef\u80fd\u5e0c\u671b\u4ece\u5168\u65b0\u7684\u89d2\u5ea6\u7406\u89e3\u666e\u62c9\u65af\uff0c\u4f46\u53ef\u4ee5\u8bf4\uff0c\u4ed6\u4eec\u7684\u4f7f\u547d\u6b63\u53d8\u5f97\u8d8a\u6765\u8d8a\u5177\u6709\u6311\u6218\u6027\uff0c\u56e0\u4e3a\u51c6\u5907\u53d6\u4ee3\u5b83\u4eec\u7684\u8bc4\u8bba\u548c\u4f20\u8bb0\u4f5c\u54c1\u6e90\u6e90\u4e0d\u65ad\uff0c\u4ee5\u53ca\u5979\u6863\u6848\u4e2d\u4e0d\u65ad\u589e\u52a0\u7684\u5df2\u51fa\u7248\u6750\u6599\u3002\u5979\u7684\u4f20\u8bb0\u751a\u81f3\u8fd8\u6709\u4e00\u672c\u4f20\u8bb0\uff1a1994 \u5e74\uff0c\u4e0a\u4e2a\u6708\u53bb\u4e16\u7684\u4f1f\u5927\u7684\u7ebd\u7ea6\u5ba2\u4f5c\u5bb6\u73cd\u59ae\u7279\u9a6c\u5c14\u79d1\u59c6\u51fa\u7248\u4e86\u300a\u6c89\u9ed8\u7684\u5973\u4eba\u300b\uff0c\u8fd9\u662f\u5bf9\u666e\u62c9\u65af\u4e66\u7c4d\uff08\u5305\u62ec\u53f2\u8482\u6587\u68ee\u6709\u4e89\u8bae\u7684\u300a\u82e6\u540d\u300b\uff09\u7684\u7814\u7a76\uff0c\u8bd5\u56fe\u8003\u8651\u5f71\u54cd\u51b3\u5b9a\u4f20\u8bb0\u5199\u4f5c\u7684\u6027\u8d28\u3002\n\u5728\u51c6\u5907\u5979\u7684\u4e66\u65f6\uff0c\u9a6c\u5c14\u79d1\u59c6\u8054\u7cfb\u4e86\u5965\u5c14\u6587\u4f11\u65af\uff0c\u5965\u5c14\u6587\u4f11\u65af\uff0c\u666e\u62c9\u65af\u4e08\u592b\u7684\u59b9\u59b9\uff0c\u8bd7\u4eba\u6cf0\u5fb7\u4f11\u65af\uff0c\u4ee5\u53ca\u5979\u9057\u4ea7\u7684\u6587\u5b66\u6267\u884c\u4eba\uff0c\u5bfb\u6c42\u4e0e\u6cf0\u5fb7\u7684\u91c7\u8bbf\u4ee5\u8865\u5145\u5979\u7684\u7814\u7a76\u3002\u5979\u6536\u5230\u7684\u56de\u5e94\u662f\u5bf9\u201c\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af\u7684\u795e\u8bdd\u201d\u7684\u6269\u5c55\u3001\u81ea\u53d1\u7684\u6279\u8bc4\uff0c\u5965\u5c14\u6587\u8ba4\u4e3a\u8fd9\u662f\u666e\u62c9\u65af\u672c\u4eba\u548c\u666e\u62c9\u65af\u7684\u6bcd\u4eb2\u5965\u745e\u8389\u4e9a\u5171\u540c\u63a8\u52a8\u7684\uff0c\u5965\u5c14\u6587\u58f0\u79f0\u5979\u201c\u4e3a\u7cbe\u795e\u75be\u75c5\u611f\u5230\u7f9e\u803b\u201d\uff0c\u5e76\u786e\u5b9a\u53ea\u6709\u5979\u5973\u513f\u7684\u201c\u6700\u597d\u7684\u4e00\u9762\u201d\u4f1a\u88ab\u8bb0\u4f4f\u3002\u5965\u5c14\u6587\u611f\u5230\u9707\u60ca\uff0c\u5979\u7ee7\u7eed\u8bf4\uff0c\u4f5c\u5bb6\u548c\u516c\u4f17\u5bf9\u666e\u62c9\u65af\u7684\u5bb6\u4eba\u7f3a\u4e4f\u201c\u4eba\u60c5\u5473\u201d\uff0c\u7ed3\u679c\u201c\u5b8c\u5168\u6539\u53d8\u4e86[\u5979]\u5bf9\u4eba\u7684\u6574\u4e2a\u6001\u5ea6\u201d\u3002\u7136\u800c\uff0c\u9a6c\u5c14\u79d1\u59c6\u5728\u300a\u6c89\u9ed8\u7684\u5973\u4eba\u300b\u4e2d\u53d6\u5f97\u7684\u6210\u5c31\u662f\u63d0\u9192\u6211\u4eec\u666e\u62c9\u65af\u4e0d\u662f\u795e\u8bdd\uff0c\u800c\u662f\u4e00\u4e2a\u548c\u6211\u4eec\u4e00\u6837\u751f\u6d3b\u548c\u547c\u5438\u7684\u5973\u4eba\u3002\u901a\u8fc7\u5c06\u81ea\u5df1\u5e26\u5165\u6545\u4e8b\u4e2d\uff0c\u4ee5\u53cd\u601d\u81ea\u5df1\u5728\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af (Sylvia Plath) \u6b7b\u540e\u53d9\u4e8b\u4e2d\u7684\u89d2\u8272\u2014\u2014\u800c\u4e0d\u662f\u5047\u88c5\u5ba2\u89c2\u2014\u2014\u9a6c\u5c14\u79d1\u59c6\u5199\u4e86\u8fc4\u4eca\u4e3a\u6b62\u5173\u4e8e\u8bd7\u4eba\u7684\u6700\u4eba\u6027\u5316\u7684\u4e66\u3002\u5965\u5c14\u6587\u5bf9\u5965\u857e\u8389\u4e9a\u00b7\u666e\u62c9\u65af\u7684\u6279\u8bc4\u6700\u660e\u786e\u5730\u9488\u5bf9\u5979\u7f16\u8f91\u548c\u51fa\u7248\u897f\u5c14\u7ef4\u4e9a\u7684\u300a\u5bb6\u4e66\u300b\u3002\u8be5\u96c6\u51fa\u7248\u4e8e 1975 \u5e74\uff0c\u6536\u5f55\u4e86\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af (Sylvia Plath) \u4e0e\u5979\u6bcd\u4eb2\u7684\u4fe1\u4ef6\uff0c\u4ece\u5979 50 \u5e74\u4ee3\u521d\u5728\u53f2\u5bc6\u65af\u5b66\u9662\u5230 1963 \u5e74\u5979\u751f\u547d\u7684\u5c3d\u5934\u3002\u6b63\u5982\u73cd\u59ae\u7279\u00b7\u9a6c\u5c14\u79d1\u59c6 (Janet Malcolm) \u5728\u300a\u6c89\u9ed8\u7684\u5973\u4eba\u300b(The Silent Woman) \u4e2d\u6240\u8bb0\u5f55\u7684\u90a3\u6837\uff0c\u5965\u5c14\u6e29\u5c06\u300a\u56de\u5bb6\u7684\u4fe1\u300b\u89c6\u4e3a\u5bf9\u201c\u9524\u51fb [\u5965\u745e\u8389\u4e9a] \u91c7\u53d6\u201d\u7684\u56de\u5e94\u6765\u81ea\u5979\u5728\u949f\u7f69\u4e2d\u4f5c\u4e3a\u4ee5\u65af\u5e16\u6bcd\u4eb2\u7684\u865a\u6784\u63cf\u8ff0\uff0c\u4ee5\u53ca\u51e0\u9996\u8bd7\uff0c\u5305\u62ec\u7f8e\u675c\u838e\u548c\u4ee4\u4eba\u4e0d\u5b89\u7684\u7f2a\u65af\u3002 1971 \u5e74\uff0cAurelia \u5199\u4fe1\u7ed9 The Bell Jar \u7684\u7f8e\u56fd\u51fa\u7248\u5546\uff0c\u8981\u6c42 Ted \u4e0d\u8981\u53d1\u5e03\u5b83\uff0c\u54c0\u53f9\u8bf4\uff0c\u7531\u4e8e\u5c06\u5979\u63cf\u7ed8\u6210\u4e00\u4e2a\u51b7\u6f20\u7684\u76d1\u5de5\uff0c\u201c\u56e0\u4e3a\u8fd9\u672c\u4e66\u672c\u8eab\u5c31\u662f\u6700\u5351\u9119\u7684\u5fd8\u6069\u8d1f\u4e49\u201d .\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u9009\u62e9\u201cSivvy\u201d\u4e2d\u7684\u6eba\u7231\u4fe1\u4ef6\uff0c\u65e8\u5728\u8868\u660e\u4ed6\u4eec\u4e4b\u95f4\u5b58\u5728\u7740\u6df1\u539a\u7684\u6bcd\u5973\u5173\u7cfb\u3002\u5965\u857e\u8389\u4e9a\u5e0c\u671b\u5c06\u8fd9\u4e9b\u4fe1\u4ef6\u5206\u4e24\u5377\u800c\u4e0d\u662f\u4e00\u5377\u51fa\u7248\uff0c\u4f46\u7531\u4e8e\u51fa\u7248\u5546\u7684\u9650\u5236\uff0c\u5979\u538b\u7f29\u4e86\u5979\u7684\u6536\u85cf\u3002\u76f4\u5230 2017-8 \u5e74\uff0c\u672a\u5220\u8282\u7684\u4fe1\u4ef6\u624d\u51fa\u7248\uff0c\u7531 Peter K Steinberg \u548c Karen V Kukil \u7f16\u8f91\u3002\u8be5\u7cfb\u5217\u5c55\u793a\u4e86\u666e\u62c9\u65af\u4e0e\u670b\u53cb\u3001\u604b\u4eba\u548c\u5bb6\u4eba\u901a\u4fe1\u65f6\u6240\u7528\u7684\u4e0d\u540c\u4e66\u9762\u58f0\u97f3\uff0c\u63ed\u793a\u4e86\u4e00\u4e2a\u6bd4 Letters Home \u521b\u9020\u7684\u4e00\u7ef4\u5973\u513f\u66f4\u4e3a\u590d\u6742\u548c\u4eba\u6027\u5316\u7684\u4f5c\u5bb6\u3002\u4e0e\u4e4b\u524d\u7684\u6536\u85cf\u4e0d\u540c\uff0c\u8fd9\u4e9b\u5377\u4e5f\u6ca1\u6709\u5bf9\u539f\u59cb\u8bed\u8a00\u8fdb\u884c\u7f16\u8f91\uff0c\u4e5f\u6ca1\u6709 Aurelia \u7684\u4e2a\u4eba\u4ecb\u7ecd\u6216\u5979\u7684\u4efb\u4f55\u5176\u4ed6\u8bc4\u8bba\u3002\u8fde\u540c\u666e\u62c9\u65af\u672a\u5220\u8282\u7684\u671f\u520a\uff0c\u4e4b\u524d\u7531 Faber &amp; Faber \u4e8e 2000 \u5e74\u5728\u6cf0\u5fb7\u00b7\u4f11\u65af\u7684\u8bb8\u53ef\u4e0b\u51fa\u7248\uff0c\u8fd9\u4e9b\u4fe1\u4ef6\u4ee3\u8868\u4e86\u666e\u62c9\u65af\u9009\u62e9\u770b\u5230\u7684\u6837\u5b50\uff0c\u5c3d\u7ba1\u65e0\u610f\u5c06\u5b83\u4eec\u63d0\u4f9b\u7ed9\u8bfb\u8005\u3002\u6839\u636e\u9a6c\u5c14\u79d1\u59c6\u5728\u300a\u6c89\u9ed8\u7684\u5973\u4eba\u300b\u4e2d\u7684\u8bf4\u6cd5\uff0c\u5728\u300a\u56de\u5bb6\u7684\u4fe1\u300b\u51fa\u7248\u540e\uff0c\u201c\u8fd9\u4e2a\u4f20\u5947\u5f00\u59cb\u4e86\uff0c\u6210\u4e3a\u4e00\u90e8\u4ee5\u6700\u5b8c\u7f8e\u3001\u6700\u5177\u4f53\u7684\u73b0\u5b9e\u4e3b\u4e49\u4e3a\u80cc\u666f\u62cd\u6444\u7684\u5e9e\u5927\u800c\u5e9e\u5927\u7684\u7535\u5f71\u5c0f\u8bf4\u201d\u3002\u968f\u7740 2003 \u5e74\u7531\u683c\u6e29\u59ae\u4e1d\u00b7\u5e15\u7279\u6d1b (Gwyneth Paltrow) \u4e3b\u6f14\u7684\u4f20\u8bb0\u7247\u300a\u897f\u5c14\u7ef4\u4e9a\u300b(Sylvia) \u7684\u5236\u4f5c\uff0c\u8fd9\u4e9b\u7535\u5f71\u573a\u666f\u53d8\u6210\u4e86\u73b0\u5b9e\u3002\u666e\u62c9\u65af\u7684\u5973\u513f\u5f17\u91cc\u8fbe\u4f11\u65af\u5199\u4e86\u4e00\u9996\u8bd7\u6279\u8bc4\u8fd9\u90e8\u7535\u5f71\uff1b\u5979\u8bf4\uff0c\u5b83\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5a31\u4e50\u201c\u5403\u82b1\u751f\u7684\u4eba\u201d\uff0c\u6697\u6307\u5979\u6bcd\u4eb2\u7684\u8bd7\u300a\u62c9\u6492\u8def\u592b\u4eba\u300b\uff0c\u5979\u5728\u8bd7\u4e2d\u63cf\u8ff0\u4e86\u201c\u5403\u82b1\u751f\u7684\u4eba\u7fa4\u201d\u8981\u201c\u89e3\u5f00\u6211\u7684\u624b\u548c\u811a---/\u5927\u8131\u8863\u821e\u201d\u3002\u9274\u4e8e\u4f20\u8bb0\u4f5c\u8005\u5728\u8bd5\u56fe\u5bf9\u666e\u62c9\u65af\u6709\u4e00\u4e2a\u6e05\u6670\u7684\u8ba4\u8bc6\u65f6\u6240\u9762\u4e34\u7684\u95ee\u9898\uff0c\u503c\u5f97\u8be2\u95ee\u5173\u4e8e\u5979\u7684\u751f\u6d3b\u7684\u65b0\u4e66\u53ef\u4ee5\u63d0\u4f9b\u4ec0\u4e48\u3002\u8003\u8651\u5230\u666e\u62c9\u65af\u795e\u8bdd\u7684\u5e7f\u6cdb\u6027\uff0c\u5f88\u96be\u533a\u5206\u90a3\u4e9b\u8bd5\u56fe\u901a\u8fc7\u63ed\u793a\u5979\u6b7b\u4ea1\u7684\u75c5\u6001\u7ec6\u8282\u6765\u83b7\u5229\u7684\u4e66\u7c4d\uff0c\u4ee5\u53ca\u90a3\u4e9b\u8bd5\u56fe\u5c06\u516c\u4f17\u6ce8\u610f\u529b\u91cd\u65b0\u8c03\u6574\u5230\u5979\u7684\u6587\u5b66\u91cd\u8981\u6027\u7684\u4e66\u7c4d\u3002\u7f57\u5229\u68ee\u7684\u300a\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af\u7684\u6700\u540e\u65e5\u5b50\u300b\u5728\u5176\u6807\u9898\u4e2d\u5ba3\u5e03\u5b83\u843d\u5165\u4e86\u524d\u9635\u8425\uff0c\u5e76\u627f\u8bfa\u5728\u5bfc\u81f4\u5979\u81ea\u6740\u7684\u4e8b\u4ef6\u4e2d\u63d0\u4f9b\u524d\u6240\u672a\u6709\u7684\u7ec6\u8282\u3002\u50cf\u9a6c\u5c14\u79d1\u59c6\u8fd9\u6837\u7684\u5973\u6743\u4e3b\u4e49\u4f5c\u5bb6\u8c34\u8d23\u5c06\u666e\u62c9\u65af\u7684\u751f\u6d3b\u548c\u6027\u683c\u964d\u4f4e\u5230\u5979\u6291\u90c1\u6700\u4e25\u91cd\u7684\u65f6\u671f\u3002\u53ea\u8981\u8fd9\u79cd\u8fd8\u539f\u65b9\u6cd5\u6301\u7eed\u5b58\u5728\uff0c\u5b66\u8005\u5c31\u9700\u8981\u901a\u8fc7\u5176\u4ed6\u65b9\u6cd5\u6765\u53cd\u51fb\u3002\u514b\u52b3\u745f\u4e4b\u524d\u5173\u4e8e\u666e\u62c9\u65af\u7684\u4f5c\u54c1\uff0c\u5305\u62ec\u300a\u95f9\u9b3c\u7684\u8bfb\u8005\u300b\uff082017 \u5e74\uff09\u548c\u300a\u8fd9\u4e9b\u5e7d\u7075\u6863\u6848\u300b\uff082017 \u5e74\uff09\uff0c\u4e13\u6ce8\u4e8e\u5979\u4eca\u5929\u7684\u7406\u89e3\u65b9\u5f0f\uff0c\u5979\u8bf4\u5979\u7b2c\u4e00\u6b21\u9047\u5230\u666e\u62c9\u65af\u662f\u5728\u5979 13 \u5c81\u65f6\u9605\u8bfb\u4e86\u5979 1961 \u5e74\u7684\u8bd7\u300a\u955c\u5b50\u300b\u5728\u5b66\u6821\u56fe\u4e66\u9986\u91cc\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u5979\u5c06\u7814\u7a76\u91cd\u70b9\u653e\u5728\u666e\u62c9\u65af\u8eab\u4e0a\uff0c\u514b\u52b3\u745f\u5f15\u7528\u4e86\u4f0a\u4e3d\u838e\u767d\u9c8d\u6587\u7684\u8bf4\u6cd5\uff0c\u5373\u53d7\u8bd5\u8005\u4f1a\u627e\u5230\u4ed6\u4eec\u7684\u7814\u7a76\u4eba\u5458\uff0c\u800c\u4e0d\u662f\u76f8\u53cd\u3002\u7279\u522b\u662f\uff0c\u5979\u544a\u8bc9 BBC Culture\uff0c\u5979\u89c9\u5f97\u666e\u62c9\u65af\u88ab\u4e00\u4e9b\u4f20\u8bb0\u4f5c\u8005\u901a\u8fc7\u201c\u61d2\u60f0\u548c\u4e0d\u51c6\u786e\u7684\u523b\u677f\u5370\u8c61\u201d\u63cf\u8ff0\u4e3a\u201c\u67d0\u79cd\u2018\u6ce8\u5b9a\u8981\u5931\u8d25\u7684\u4eba\u7269\u2019\u201d\u7684\u65b9\u5f0f\u611f\u5230\u4e0d\u516c\u6b63\u3002\u5979\u8bd5\u56fe\u5728\u81ea\u5df1\u7684\u4f5c\u54c1\u4e2d\u4e0e\u8fd9\u4e00\u70b9\u4f5c\u6597\u4e89\uff0c\u5c55\u793a\u201c\u666e\u62c9\u65af\u4f5c\u4e3a\u5973\u6027\u7684\u751f\u6d3b\u7ecf\u5386\u5bf9\u5979\u7684\u5199\u4f5c\u81f3\u5173\u91cd\u8981\u201d\uff0c\u5e76\u5256\u6790\u4e86\u5979\u4eca\u5929\u7ee7\u7eed\u62e5\u6709\u7684\u5438\u5f15\u529b\u3002\u514b\u52b3\u745f\u5173\u4e8e\u666e\u62c9\u65af\u7684\u7b2c\u4e09\u672c\u4e5f\u662f\u6700\u65b0\u7684\u4e66\u300a\u4e3d\u5179\u9152\u5e97\u7684\u4e09\u4e2a\u9a6c\u63d0\u5c3c\u4e0b\u5348\u300b\u7740\u91cd\u8bb2\u8ff0\u4e86\u666e\u62c9\u65af\u4e0e\u8bd7\u4eba\u585e\u514b\u65af\u987f\u7684\u76f8\u8bc6\uff0c\u4ee5\u5c55\u793a\u4ed6\u4eec\u7684\u4f1a\u9762\u5982\u4f55\u5f71\u54cd\u4e86\u4ed6\u4eec\u5404\u81ea\u7684\u5de5\u4f5c\u3002\u585e\u514b\u65af\u987f\u672c\u4eba\u5728 1963 \u5e74\u7684\u8ba3\u544a\u8bd7\u300a\u897f\u5c14\u7ef4\u5a05\u4e4b\u6b7b\u300b\u4e2d\u4e3a\u666e\u62c9\u63d0\u4e9a\u795e\u8bdd\u589e\u6dfb\u4e86\u6d3b\u529b\uff0c\u5979\u5728\u5176\u4e2d\u79f0\u5979\u7684\u670b\u53cb\u4e3a\u201c\u5c0f\u5077\uff01\u56e0\u4e3a\u722c\u8fdb\u201c\u6211\u975e\u5e38\u60f3\u8981\u7684\u6b7b\u4ea1\u201d\u3002 1974 \u5e74\uff0c\u5979\u4e5f\u56e0\u81ea\u6740\u8eab\u4ea1\uff0c\u4eab\u5e74 45 \u5c81\uff0c\u8fd9\u4e00\u4e8b\u5b9e\u4fc3\u4f7f\u4eba\u4eec\u5c06\u5176\u4e0e\u666e\u62c9\u65af\u540c\u65f6\u8fdb\u884c\u6bd4\u8f83\u3002\u7136\u800c\uff0c\u585e\u514b\u65af\u987f\u662f\u4e00\u4e2a\u66f4\u6709\u95ee\u9898\u7684\u4e3b\u9898\u3002 1990 \u5e74\u4ee3\u521d\uff0c\u5979\u7684\u5973\u513f\u7433\u8fbe\u00b7\u683c\u96f7\u00b7\u585e\u514b\u65af\u987f (Linda Gray Sexton) \u900f\u9732\uff0c\u5979\u7684\u6bcd\u4eb2\u5bf9\u5979\u8fdb\u884c\u4e86\u6027\u8650\u5f85\u2014\u2014\u8fd9\u4e0e\u5f17\u91cc\u8fbe\u00b7\u4f11\u65af (Frieda Hughes) \u4e0e\u666e\u62c9\u65af (Plath) \u7684\u5e78\u798f\u5173\u7cfb\u5f62\u6210\u4e86\u9c9c\u660e\u5bf9\u6bd4\u3002\n\u5982\u679c\u5f3a\u8c03\u8fd9\u4e9b\u5973\u6027\u7684\u4e2a\u4eba\u4e3b\u4e49\u5f88\u91cd\u8981\uff0c\u90a3\u4e48\u8fd9\u672c\u53cc\u91cd\u4f20\u8bb0\u5c31\u96be\u514d\u6709\u76f8\u4f3c\u4e4b\u5904\u2014\u2014\u4f8b\u5982\uff0c\u514b\u52b3\u745f\u5728\u5404\u81ea\u7684\u8bba\u6587\u4e2d\u53cd\u590d\u5c06\u9999\u70df\u707c\u4f24\u7684\u5f62\u8c61\u6d6a\u6f2b\u5316\uff0c\u5374\u6ca1\u6709\u63d0\u5230\u585e\u514b\u65af\u987f\u662f\u4e00\u4e2a\u7ec8\u751f\u62bd\u70df\u7684\u4eba\uff0c\u800c\u666e\u62c9\u65af\u5219\u6ca1\u6709\u3002\u76f4\u5230 1962 \u5e74\u5979\u4e0e\u6cf0\u5fb7\u00b7\u4f11\u65af\u5206\u624b\u4e4b\u524d\uff0c\u5979\u624d\u78b0\u4e00\u6839\u70df\u3002\u6a21\u7cca\u7684\u8bed\u8a00\u88ab\u7528\u6765\u5728\u8bd7\u4eba\u4e4b\u95f4\u63cf\u7ed8\u51fa\u6bd4\u5b9e\u9645\u66f4\u591a\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u4e0e\u666e\u62c9\u65af\u7684\u6574\u6d01\u548c\u585e\u514b\u65af\u987f\u6175\u61d2\u7684\u5916\u8868\u4e4b\u95f4\u7684\u5bf9\u6bd4\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\u3002\u8fd9\u79cd\u672c\u8d28\u533a\u522b\u5b58\u5728\u4e8e\u4ed6\u4eec\u7684\u8bd7\u6b4c\u4e2d\uff0c\u5c3d\u7ba1\u8fd9\u672c\u4e66\u4e0d\u6d89\u53ca\u6587\u5b66\u5206\u6790\u3002\u5728\u9605\u8bfb\u4ed6\u4eec\u5404\u81ea\u7684\u8bd7\u6b4c\u65f6\uff0c\u53ea\u6709\u585e\u514b\u65af\u987f\u660e\u786e\u5199\u4e0b\u4e86\u6708\u7ecf\u548c\u624b\u6deb\uff0c\u800c\u666e\u62c9\u65af\u5219\u901a\u8fc7\u6587\u5b66\u548c\u795e\u8bdd\u7684\u955c\u5934\u63a2\u7d22\u4e86\u5973\u6027\u8eab\u4efd\u548c\u6bcd\u6027\u7684\u4e3b\u9898\u3002\u666e\u62c9\u65af\u66f4\u559c\u6b22\u9690\u55bb\u548c\u5178\u6545\uff1b\u585e\u514b\u65af\u987f\u8bf4\u7684\u90fd\u662f\u4e8b\u5b9e\u3002\u6487\u5f00\u5979\u81ea\u5df1\u7684\u4e66\u4e0d\u8c08\uff0c\u514b\u52b3\u745f\u5e0c\u671b\u6211\u4eec\u80fd\u66f4\u63a5\u8fd1\u666e\u62c9\u65af\u5728\u6587\u5316\u60f3\u8c61\u4e2d\u7684\u66f4\u5168\u9762\u5b9a\u4f4d\u3002\u5979\u8bf4\uff0c\u7279\u522b\u662f\u672a\u5220\u8282\u7684\u4fe1\u4ef6\u7684\u51fa\u7248\u201c\u4f7f\u955c\u5934\u5411\u540e\u503e\u659c\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u6b23\u8d4f\u5979\u5728\u901a\u4fe1\u4e2d\u4f7f\u7528\u7684\u591a\u79cd\u58f0\u97f3\u201d\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ed9\u5979\u6bcd\u4eb2\u5199\u4fe1\u7684\u201cSivvy\u201d\u3002\u901a\u8fc7\u8fd9\u4e9b\u65b0\u7cfb\u5217\uff0c\u201c\u6211\u4eec\u542c\u5230\u4e86\u5979\u8fc7\u53bb\u5199\u7ed9\u670b\u53cb\u3001\u604b\u4eba\u3001\u540c\u4e8b\u3001\u5979\u7684\u5546\u4e1a\u4fe1\u4ef6\u7684\u58f0\u97f3\uff0c\u8fd9\u4e00\u5207\u90fd\u8ba9\u6211\u4eec\u66f4\u5168\u9762\u5730\u4e86\u89e3\u5979\u7684\u5e7d\u9ed8\u3001\u5979\u7684\u70ed\u60c5\u3001\u5979\u7684\u6548\u7387\u4ee5\u53ca\u5979\u7ba1\u7406\u5979\u7684\u6280\u5de7\u3002\u81ea\u5df1\u5199\u7684\u3002\u201d\u66f4\u91cd\u8981\u7684\u662f\uff0c\u514b\u52b3\u745f\u8bf4\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u542c\u5230\u8fd9\u4e9b\u4e0d\u540c\u7684\u58f0\u97f3\u8868\u660e\u201c\u5979\u5982\u4f55\u5728\u8fd9\u4e9b\u89d2\u8272\u4e4b\u95f4\u65e0\u7f1d\u5207\u6362\uff0c\u4ece\u4e2a\u4eba\u5230\u4e13\u4e1a\u201d\uff0c\u4ee5\u53ca\u5979\u5728\u8fd9\u6837\u505a\u65f6\u975e\u51e1\u7684\u60c5\u611f\u8303\u56f4\u3002\u7136\u800c\uff0c\u4e5f\u8bb8\u76f8\u53cd\uff0c\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af\u7684\u201c\u7248\u672c\u201d\u4e4b\u591a\u53ea\u4f1a\u8ba9\u6211\u4eec\u65e0\u6cd5\u77e5\u9053\u54ea\u4e9b\u662f\u771f\u5b9e\u7684\u3002\u8fc4\u4eca\u4e3a\u6b62\uff0c\u666e\u62c9\u65af\u6700\u8be6\u5c3d\u7684\u4f20\u8bb0\u662f\u514b\u62c9\u514b\u7684\u7ea2\u8272\u5f57\u661f\u3002\u5f53\u88ab\u95ee\u53ca\u5979\u5199\u8fd9\u672c\u4e66\u7684\u76ee\u7684\u65f6\uff0c\u514b\u62c9\u514b\u544a\u8bc9 BBC \u6587\u5316\uff0c\u5979\u60f3\u8868\u660e\u666e\u62c9\u65af\u201c\u8fd1\u4e4e\u6052\u5b9a\u7684\u4e3b\u9898\u4e0d\u662f\u6291\u90c1\uff0c\u800c\u662f\u6210\u4e3a\u4f5c\u5bb6\u7684\u795e\u5723\u8ffd\u6c42\u201d\u3002\u5979\u5728\u725b\u6d25\u5927\u5b66\u653b\u8bfb\u5317\u7231\u5c14\u5170\u8bd7\u4eba\u535a\u58eb\u5b66\u4f4d\u65f6\u5f00\u59cb\u5bf9\u666e\u62c9\u65af\u611f\u5174\u8da3\u3002\u6b64\u524d\uff0c\u7531\u4e8e\u5a92\u4f53\u5bf9\u666e\u62c9\u65af\u7684\u4e3b\u8981\u63cf\u7ed8\uff0c\u5979\u201c\u5df2\u7ecf\u6ca6\u4e3a\u666e\u62c9\u65af\u662f\u9ed1\u6697\u548c\u5384\u8fd0\u7684\u5316\u8eab\u7684\u8fd8\u539f\u89c2\u5ff5\u7684\u727a\u7272\u54c1\u201d\u3002\u7136\u800c\uff0c\u901a\u8fc7\u9605\u8bfb\u5979\u6b63\u5728\u6559\u7684\u8bfe\u5802\u4e0a\u7684\u4f5c\u54c1\uff0c\u514b\u62c9\u514b\u610f\u8bc6\u5230\u5979\u201c\u975e\u5e38\u8001\u7ec3\u3001\u673a\u667a\uff0c\u800c\u4e14\u662f\u7684\uff0c\u5f88\u6709\u8da3\u201d\uff0c\u8fd9\u8ba9\u5979\u6e34\u671b\u63a8\u7ffb\u5356\u7ed9\u5979\u7684\u201c\u6027\u522b\u6b67\u89c6\u8c0e\u8a00\u201d\u3002\u7531\u6b64\u4ea7\u751f\u7684\u4e66\u662f\u4efb\u4f55\u4f5c\u5bb6\u6700\u63a5\u8fd1\u666e\u62c9\u65af\u751f\u5e73\u548c\u5de5\u4f5c\u7684\u8be6\u5c3d\u4f20\u8bb0\u7684\u4e66\u3002\u514b\u62c9\u514b\u8fd8\u8ba8\u8bba\u4e86\u666e\u62c9\u65af\u4e0e\u585e\u514b\u65af\u987f\u7684\u5173\u7cfb\uff0c\u9610\u660e\u4e86\u4ed6\u4eec\u7684\u5dee\u5f02\u4ee5\u53ca\u666e\u62c9\u65af\u5bf9\u585e\u514b\u65af\u987f\u7684\u91cd\u8981\u6027\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8fd9\u672c\u4e66\u7ed9\u4eba\u7684\u5370\u8c61\u662f\u4e30\u5bcc\u800c\u590d\u6742\u7684\u751f\u6d3b\uff0c\u8d85\u51fa\u4e86\u5b83\u4e4b\u524d\u7684\u77ed\u5f97\u591a\u7684\u4f5c\u54c1\u4e2d\u6240\u8868\u73b0\u51fa\u6765\u7684\u4efb\u4f55\u4e1c\u897f\u3002\u5076\u5c14\uff0c\u5979\u786e\u5b9e\u6697\u793a\u4e86\u666e\u62c9\u65af\u7684\u547d\u8fd0\uff0c\u8fd9\u5728\u4f0f\u7b14\u65b9\u9762\u662f\u9519\u8bef\u7684\uff0c\u5305\u62ec\u5173\u4e8e\u201c\u949f\u7f69\u4e0b\u964d\u201d\u7684\u8bd7\u610f\u76db\u884c\uff0c\u8fd9\u6709\u635f\u4e8e\u5979\u539f\u672c\u529b\u6c42\u7684\u771f\u5b9e\u6027\u3002\u6709\u8da3\u7684\u662f\uff0c\u5373\u4f7f\u5728\u8fd9\u4e9b\u4e66\u4e2d\u5982\u6b64\u610f\u8bc6\u5230\u63a8\u6d4b\u548c\u795e\u8bdd\u5bf9\u666e\u62c9\u65af\u7684\u770b\u6cd5\u6240\u4ea7\u751f\u7684\u5371\u9669\u5f71\u54cd\uff0c\u4ed6\u4eec\u4e5f\u53ef\u80fd\u4e0d\u65f6\u9677\u5165\u8fd9\u79cd\u5883\u5730\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u514b\u62c9\u514b\u5bf9\u666e\u62c9\u65af\u7684\u5b66\u672f\u6b63\u5728\u4ee5\u4e30\u5bcc\u7684\u65b9\u5f0f\u53d1\u5c55\u6301\u4e50\u89c2\u6001\u5ea6\u3002\u5979\u7684\u535a\u58eb\u751f\u4eec\u907f\u5f00\u4e86\u4f20\u7edf\u7684\u5973\u6743\u4e3b\u4e49\u8005\u5c06\u666e\u62c9\u65af\u4f5c\u4e3a\u5979\u7684\u65f6\u4ee3\u4e4b\u524d\u4f5c\u4e3a\u4f5c\u5bb6\u7684\u5173\u6ce8\uff0c\u8fd9\u79cd\u5173\u6ce8\u4e3b\u5bfc\u4e86\u6700\u8fd1\u7684\u5b66\u672f\u8bdd\u8bed\uff0c\u5979\u7684\u535a\u58eb\u751f\u6b63\u5728\u4ece\u8de8\u56fd\u548c\u6b8b\u75be\u7684\u89d2\u5ea6\u770b\u5f85\u666e\u62c9\u65af\u7684\u4f5c\u54c1\u3002\u53cd\u8fc7\u6765\uff0c\u8fd9\u4e9b\u89d2\u5ea6\u5bf9\u4e8e\u8003\u8651\u666e\u62c9\u65af\u65c5\u884c\u7684\u5f71\u54cd\u4ee5\u53ca\u5979\u5728\u82f1\u56fd\u4f5c\u4e3a\u7f8e\u56fd\u4eba\u611f\u5230\u7684\u8eab\u4efd\u4e0d\u534f\u8c03\u5bf9\u5979\u7684\u5199\u4f5c\u4ea7\u751f\u7684\u5f71\u54cd\u5f88\u91cd\u8981\u3002\u4ee5\u53ca\u89c2\u5bdf\u666e\u62c9\u65af\u7684\u7cbe\u795e\u75be\u75c5\u5982\u4f55\u53cd\u6620\u5728\u5979\u7684\u751f\u6d3b\u548c\u5de5\u4f5c\u4e2d\uff0c\u540c\u65f6\u4e5f\u8003\u8651\u5230\u5728\u5fc3\u7406\u5065\u5eb7\u4e0d\u5982\u4eca\u5929\u4e86\u89e3\u7684\u65f6\u4ee3\u6240\u5e26\u6765\u7684\u803b\u8fb1\u3002\u968f\u7740\u666e\u62c9\u65af\u6863\u6848\u7684\u6269\u5c55\uff0c\u8fd9\u4e9b\u65b0\u65b9\u6cd5\u7ee7\u7eed\u4e3a\u4ed6\u4eec\u63d0\u4f9b\u66f4\u591a\u7684\u6e90\u6750\u6599\u3002\u9664\u4e86\u8fd9\u4e9b\u4fe1\u4ef6\u7684\u51fa\u7248\u5916\uff0c\u7f8e\u56fd\u53f2\u5bc6\u65af\u5b66\u9662\u666e\u62c9\u65af\u6863\u6848\u9986\u9986\u957f\u5e93\u57fa\u5c14\u73b0\u5728\u6b63\u4e0e\u7ebd\u7ea6\u7406\u5de5\u5b66\u9662\u82f1\u8bed\u526f\u6559\u6388\u963f\u66fc\u8fbe\u00b7\u6208\u767b\u5408\u4f5c\uff0c\u5bf9\u8fd9\u672c\u4e66\u8fdb\u884c\u4e86\u6269\u5145\u548c\u4fee\u6b63\u3002\u8bd7\u96c6\uff0c\u4e4b\u524d\u7531\u6cf0\u5fb7\u00b7\u4f11\u65af\u7f16\u8f91\uff0c\u5c06\u7531 Faber &amp; Faber \u51fa\u7248\u3002\u4e5f\u6709\u53ef\u80fd\u6709\u4e00\u5929\uff0c\u666e\u62c9\u65af\u9057\u5931\u7684\u5c0f\u8bf4\u300aDouble Take\u300b\u548c\u53e6\u5916\u4e24\u672c\u671f\u520a\u7684\u4e0d\u5b8c\u6574\u624b\u7a3f\u53ef\u80fd\u4f1a\u6d6e\u51fa\u6c34\u9762\u3002\u7136\u800c\uff0c\u65e0\u8bba\u5269\u4e0b\u4ec0\u4e48\u51fa\u73b0\uff0c\u666e\u62c9\u65af\u603b\u662f\u6bd4\u5927\u591a\u6570\u6587\u5316\u5076\u50cf\u66f4\u50cf\u662f\u4e00\u4e2a\u8c1c\u2014\u2014\u90e8\u5206\u539f\u56e0\u662f\u5979\u82f1\u5e74\u65e9\u901d\uff0c\u8fd9\u610f\u5473\u7740\u5979\u4ece\u672a\u6709\u673a\u4f1a\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u8bb2\u8ff0\u5979\u7684\u6545\u4e8b\u3002\u90e8\u5206\u5730\uff0c\u6b63\u5982\u8d8a\u6765\u8d8a\u660e\u663e\u7684\u90a3\u6837\uff0c\u7531\u4e8e\u666e\u62c9\u65af\u80fd\u591f\u5728\u4e0d\u540c\u7684\u73af\u5883\u548c\u4e0d\u540c\u7684\u4eba\u4e2d\u91c7\u7528\u591a\u79cd\u89d2\u8272\uff0c\u56e0\u6b64\u5f88\u96be\u77e5\u9053\u5979\u4ec0\u4e48\u65f6\u5019\u662f\u771f\u8bda\u7684\uff0c\u4ec0\u4e48\u65f6\u5019\u5979\u662f\u5e26\u7740\u82e6\u7b11\u5199\u7684\u8138\u3002\u6211\u4eec\u53ef\u80fd\u4f1a\u7ee7\u7eed\u8ba4\u4e3a\u6211\u4eec\u5bf9\u5979\u662f\u8c01\u6709\u4e86\u66f4\u6e05\u6670\u7684\u5370\u8c61\uff0c\u4f46\u201c\u771f\u6b63\u7684\u201d\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af\u4ecd\u7136\u96be\u4ee5\u6349\u6478\u3002\n\u5982\u679c\u60a8\u60f3\u8bc4\u8bba\u8fd9\u4e2a\u6545\u4e8b\u6216\u60a8\u5728 BBC Culture \u4e0a\u770b\u5230\u7684\u4efb\u4f55\u5176\u4ed6\u5185\u5bb9\uff0c\u8bf7\u524d\u5f80\u6211\u4eec\u7684 Facebook \u9875\u9762\u6216\u5728 Twitter \u4e0a\u7ed9\u6211\u4eec\u7559\u8a00\u3002\u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e2a\u6545\u4e8b\uff0c\u8bf7\u6ce8\u518c\u6bcf\u5468 bbc.com \u4e13\u9898\u901a\u8baf\uff0c\u79f0\u4e3a\u57fa\u672c\u5217\u8868\u3002\u4ece BBC \u672a\u6765\u3001\u6587\u5316\u3001\u5de5\u4f5c\u751f\u6d3b\u548c\u65c5\u884c\u4e2d\u7cbe\u5fc3\u6311\u9009\u7684\u6545\u4e8b\uff0c\u6bcf\u5468\u4e94\u53d1\u9001\u5230\u60a8\u7684\u6536\u4ef6\u7bb1\u3002", "note_en": "Since Sylvia Plath died in 1963, she&#39;s been turned into a crudely tragic symbol. As she inspires more biographies, will we ever get closer to the &#39;real&#39; Plath, asks Lillian Crawford.\n When a female author dies by suicide, it defines her. From Virginia Woolf to Sarah Kane, everything she did, everything she created during her life becomes part of a death-drive narrative. When a male author dies prematurely, it is a tragic stopper in his creative output \u2013 we mourn the poetry Dylan Thomas never wrote after he died aged 39 in 1953, for example, distinct from his self-destructive lifestyle. Woolf&#39;s novels and Kane&#39;s plays are dubbed as being manifestations of mental illness, while Thomas&#39;s poetry is brilliant in spite of, rather than because of, his alcoholism and troubled life.    More like this:\n    Chief among those female artists who have become defined by their suicide is the US poet and novelist Sylvia Plath, who died on 11 February 1963. Since then, her name has become a by-word for female angst. Her works represent rebellious but depressed young women as evidenced by their appearance in pop-culture settings \u2013 Kat in the 1999 teen rom-com 10 Things I Hate About You clutches a copy of The Bell Jar, as does Maeve in recent Netflix series Sex Education. Plath has become a crude symbol of the girl outsider who rejects conventional standards of femininity to take her life, and death, into her own hands.\n  The impact of this interpretation&#39;s proliferation is to devalue women&#39;s engagements with Plath. To read her coming-of-age novel The Bell Jar, for example, is seen by many as a girlish rite of passage towards more serious literature, a perception often  reflected in the YA-style cover designs. This isn&#39;t the case for narratives of male comings-of-age, from the works of JD Salinger to David Foster Wallace. But the truth is that Plath was one of the first authors to tap into the raw reality of being a woman. Before feminism&#39;s second wave and Betty Friedan&#39;s The Feminine Mystique, Plath wrote of her discontent with a woman&#39;s inferior place, her sexual urges, and how these pressures affected her mental health.\n At the same time, The Bell Jar and Plath&#39;s poetry are works of fiction. They are grounded in Plath&#39;s lived experience, as all literature must be, but they are not, of course, direct autobiography. Biographies often cite Plath&#39;s works as evidence for real-life events, and, as is the case with Anne Stevenson&#39;s Bitter Fame, use them to claim Plath was always depressed; Stevenson ends a chapter about her youth with the egregious statement: &#34;The idea of suicide formed in her mind like the ultimate and irrevocable fig&#34;, referring to the famous metaphor from The Bell Jar where the heroine Esther Greenwood sees all her potential futures as figs on a fig tree. A similar prejudice has continued to affect creative women, whereby they are dismissed as using art as therapy. The problem we face with Plath is that the mythos of her life and death has made it difficult to disentangle her art from that \u2013 but also know who the &#34;real&#34; Sylvia Plath was, in any case.\n  The desire to know Plath has nevertheless fuelled an industry. A new biography claiming to shed more light on her life than before appears on bookshelves with increasing regularity, including three notable releases in the past 18 months alone. One of these books, The Last Days of Sylvia Plath by Carl Rollyson, published in March 2020, focuses solely on her suicide. Another, Three-Martini Afternoons at the Ritz by Gail Crowther, published in April, is a dual biography of Plath and fellow Bostonian poet Anne Sexton, who met at a writers&#39; seminar held by poet Robert Lowell in 1959. The third book is Heather Clark&#39;s massive biography Red Comet: published last October, it is, alongside Crowther&#39;s, one of the first books about Plath to make full use of the recently-published, full and unabridged volumes of her letters, and deliberately subverts the reverse, death-focused chronology of earlier tomes.\n Even as these books may hope to understand Plath from a fresh perspective, their mission is arguably rendered ever more challenging by the steady stream of critical and biographical works ready to supplant them, alongside the ever-increasing volume of published material from her archive. There has even been a biography of her biographies: in 1994, the great New Yorker writer Janet Malcolm, who died last month, published The Silent Woman, a study of Plath books (including Stevenson&#39;s controversial Bitter Fame) which sought to consider the forces of influence which determine the nature of biographical writing.\n When preparing her book, Malcolm contacted Olwyn Hughes, the sister of Plath&#39;s husband, the poet Ted Hughes, and the literary executor of her estate, seeking an interview with Ted to supplement her research. The response she received was an  extended, unprompted critique of the &#34;myth of Sylvia Plath&#34;, something Olwyn believed was fuelled by a combination of Plath herself and Plath&#39;s mother, Aurelia, who was, Olwyn claimed, &#34;ashamed of the mental illness&#34;, and determined that only her daughter&#39;s &#34;best side&#34; was remembered. Olwyn was horrified, she went on, by a lack of &#34;human feeling&#34; shown by writers and the public for Plath&#39;s family and had as a result &#34;totally changed [her] entire attitude to people&#34;. However, what Malcolm achieved with The Silent Woman was to remind us that Plath was not a myth, but a woman who had lived and breathed as we do. By bringing herself into the story in order to reflect on her own role within the posthumous narrativisation of Sylvia Plath \u2013 rather than acting under the pretence of objectivity \u2013 Malcolm wrote the most human book on the poet to date.\n  Olwyn&#39;s criticism of Aurelia Plath was most explicitly targeted towards her editing and publication of Sylvia&#39;s Letters Home. This collection, published in 1975, compiled correspondence from Sylvia Plath to her mother, from her time at Smith College in the early 50s until the end of her life in 1963. As recorded by Janet Malcolm in The Silent Woman, Olwyn saw Letters Home as a response to &#34;the hammering [Aurelia] took&#34; from her fictionalised depiction in The Bell Jar as Esther&#39;s mother, as well as several poems, including Medusa and The Disquieting Muses. In 1971, Aurelia had written to The Bell Jar&#39;s US publisher and asked Ted not to release it, lamenting that, with its thinly-veiled portrayal of her as an unsympathetic taskmaster, &#34;as this book stands by itself, it represents the basest ingratitude&#34;. By contrast, the selection of doting letters from &#34;Sivvy&#34;, was intended to show that there had been a deep mother-daughter bond between them. Aurelia hoped to publish the letters in two volumes rather than one, but because of restrictions imposed by the publisher, she condensed her collection.\n  It wasn&#39;t until 2017-8 that the unabridged letters were published, edited by Peter K Steinberg and Karen V Kukil. This collection demonstrated the different written voices with which Plath corresponded with friends, lovers, and family, revealing a more complex and human writer than the one-dimensional daughter created by the Letters Home. Unlike that previous collection, these volumes are also presented without edits to the original language, and without either a personal introduction from Aurelia or any additional commentary from her. Along with Plath&#39;s unabridged journals, previously published by Faber &amp; Faber in 2000 with permission from Ted Hughes, these letters represent Plath as she chose to be seen, albeit without the intention of them being made available to the reading public.\n According to Malcolm in The Silent Woman, it was after the publication of Letters Home that &#34;the legend opened out, to become a vast, sprawling movie-novel filmed on sets of the most consummate and particularised realism&#34;. Those film sets became a literal reality with the production of the 2003 biopic Sylvia, starring Gwyneth Paltrow. Plath&#39;s daughter Frieda Hughes wrote a poem criticising the film; its purpose was to entertain &#34;the peanut-eaters&#34;, she said, alluding to her mother&#39;s poem Lady Lazarus, in which she describes \u201cThe peanut-crunching crowd\u201d going to \u201cunwrap me hand and foot --- / The big strip tease\u201d.\n  In light of the problems which biographers have faced in trying to gain a clear view on Plath, it is worth asking what new books about her life can have to offer. Given the widespread nature of the Plathian myth, it can be hard to distinguish books trying to cash in on revealing morbid details about her death, from those attempting to realign public focus to the importance of her literature. Rollyson\u2019s The Last Days of Sylvia Plath announces in its title that it falls into the former camp, promising unprecedented detail in the events that led to her suicide. It\u2019s the sort of book feminist writers like Malcolm deplore for reducing Plath\u2019s life and character to the worst period of her depression. As long as this reductive approach persists, there will be need for scholars to counter it through other approaches.\n Crowther, whose previous work on Plath, including the books The Haunted Reader (2017) and These Ghostly Archives (2017), has focused on how she is understood today, says that she first came across Plath aged 13 when she read her 1961 poem Mirror in the school library. As to why she has focused her study on Plath, Crowther cites Elizabeth Bowen&#39;s claim that subjects find their researchers, not the other way round. In particular, she tells BBC Culture, she felt a sense of injustice in the way Plath has been portrayed by some biographers as &#34;some sort of &#39;doomed figure&#39;&#34; through &#34;lazy and inaccurate stereotyping&#34;. She has sought to combat that in her own work, in showing how &#34;Plath&#39;s lived experience as a woman was crucial to her writing&#34; and dissecting the appeal she continues to have today.\n  Crowther&#39;s third and latest book on Plath, Three Martini Afternoons at the Ritz, focuses on Plath&#39;s acquaintance with fellow poet Sexton to show how their meeting may have influenced their respective work. Sexton herself fuelled the Plathian mythos with her 1963 obituary poem Sylvia&#39;s Death, in which she calls her friend a &#34;Thief!&#34; for crawling &#34;into the death I wanted so badly&#34;. She too died by suicide aged 45 in 1974, a fact that encouraged contemporaneous comparisons with Plath. Sexton is a more problematic subject, however. In the early 1990s, her daughter, Linda Gray Sexton, revealed that  her mother sexually abused her \u2013 a contrast to the happier relationship Frieda Hughes had with Plath.\n If it is important to highlight the individualism of these women, then this dual biography suffers from its forced similarities \u2013 for example, Crowther repeatedly romanticises the image of cigarette burns on their respective papers without mentioning that Sexton was a life-long chainsmoker and Plath didn&#39;t touch a cigarette until her split from Ted Hughes in 1962. Vague language is used to draw more similarities between the poets than there really were, countering the contrasts between Plath&#39;s tidiness and Sexton&#39;s lackadaisical appearance. This essential difference exists in their poetry, although the book does not engage with literary analysis. Reading their respective poems, it is only Sexton who writes explicitly of menstruation and masturbation, while Plath explored themes of female identity and motherhood through the lenses of literature and mythology. Plath preferred metaphor and allusion; Sexton said things as they were.\n  Her own books aside, Crowther hopes we are getting closer to a more rounded positioning of Plath in the cultural imagination. She says that the publication of the unabridged letters, in particular, have &#34;tilted the lens back to allow us to appreciate the multiplicity of voices she used in her correspondence&#34;, rather than just the &#34;Sivvy&#34; who wrote to her mother. Through these new collections, &#34;we hear the voices she used to write to friends, lovers, colleagues, her business correspondence, and this all gives us a much fuller picture of her humour, her passions, her efficiency, and her skill for managing her own writing.&#34; What&#39;s more, Crowther says, having these various voices available to us demonstrates &#34;how she seamlessly moved between these personas flitting across the personal to professional&#34;, and her extraordinary emotional range in so doing. Perhaps conversely, though, the sheer number of &#34;versions&#34; of Sylvia Plath only serves to prevent us from knowing which were genuine.\n The most expansive biography of Plath to date is Clark&#39;s Red Comet. Asked about her aims in writing this book, Clark tells BBC Culture that she wanted to show that Plath\u2019s &#34;near-constant theme is not depression, but the holy quest to become a writer&#34;. Her interest in Plath began while she was doing her doctorate at Oxford University on Northern Irish poets. Previously, she &#34;had fallen prey to the reductive idea that Plath was an avatar of darkness and doom&#34; as a result of the predominant portrayal of Plath in the media. However, through reading her work for a class she was teaching, Clark realised that she was &#34;enormously sophisticated, witty, and yes, funny&#34;, giving her a desire to overturn the &#34;sexist bill of lies&#34; sold to her.\n The resulting book is the closest any writer has come to an exhaustive biography of Plath&#39;s life and work. Clark also discusses the relationship Plath had with Sexton, elucidating their differences and the greater importance of Plath to Sexton than vice versa. The impression given by the book is of a rich and complex life beyond anything shown in the far shorter works that have preceded it. Occasionally she does make hints towards Plath&#39;s fate which err on the side of foreshadowing, including with poetic flourishes about &#34;the bell jar descending&#34; which detract from the authenticity she otherwise strives for. It&#39;s interesting that even in these books that are so aware of the dangerous impact that speculation and mythologising have had on perceptions of Plath, they too can slip into that vein from time-to-time.\n Nonetheless, Clark is optimistic that the scholarship on Plath is evolving in enriching ways. Eschewing the traditional feminist focus on Plath as an author ahead of her time, which has dominated recent academic discourse, her PhD students are looking at Plath&#39;s work from transnational and disability perspectives. These angles are important, in turn, for considering the impact that Plath&#39;s travels, and the dissonance of identity she felt as an American in England, had on her writing; and for looking at how Plath&#39;s mental illness was reflected in her life and work, while also considering the shame that was attached to that in an era when mental health was less understood than it is today.\n  These new approaches continue to have more source materials available to them as the Plath archive expands. In addition to the publication of the letters, Kukil, who is curator of the Plath archive at Smith College in the US, is now working with Amanda Golden, Associate\u00a0Professor\u00a0of English at New York Institute of Technology, on an expanded and corrected edition of the Collected Poems, previously edited by Ted Hughes, to be published by Faber &amp; Faber. It is also possible that the incomplete manuscript for Plath&#39;s lost novel, Double Take, and two other journals may one day surface.\n Whatever is left to emerge, however, Plath is always likely to remain more of a puzzle than most cultural icons \u2013 in part because of her untimely death, which means she never got the chance to tell her story on her own terms. And in part, as has become increasingly apparent, because of the multiplicity of personae Plath was able to adopt in different settings and with different people, making it difficult to know when she was being sincere and when she was writing with a wry smile on her face. We may continue to think we are getting a clearer impression of who she was, but the &#34;real&#34; Sylvia Plath will remain elusive.\n If you would like to comment on this story or anything else you have seen on BBC Culture, head over to our\u00a0   Facebook \u00a0page or message us on\u00a0   Twitter .\n And if you liked this story,\u00a0   sign up for the weekly bbc.com features newsletter , called The Essential List. A handpicked selection of stories from BBC Future, Culture, Worklife and Travel, delivered to your inbox every Friday.", "posttime": "2021-07-23 00:52:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sylvia,plath,\u666e\u62c9\u65af", "title": "\u897f\u5c14\u7ef4\u5a05\u00b7\u666e\u62c9\u65af (Sylvia Plath) \u4f1a\u6c38\u8fdc\u88ab\u5979\u7684\u6b7b\u6240\u5b9a\u4e49\u5417\uff1f", "title_en": "Will Sylvia Plath always be defined by her death?", "transed": 1, "url": "https://www.bbc.com/culture/article/20210720-sylvia-plath-the-literary-icon-destined-to-remain-an-enigma", "via": "", "real_tags": ["sylvia", "plath", "\u666e\u62c9\u65af"]}, {"category": "", "categoryclass": "", "imagename": "c1a6dbd1ab6daf88bb6896b035bf1c3b.jpg", "infoid": 1069040, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u9762\uff0c\u60a8\u4f1a\u5728 Steam \u7684\u5404\u4e2a\u7c7b\u522b\u4e2d\u627e\u5230\u60a8\u53ef\u80fd\u611f\u5174\u8da3\u7684\u5404\u79cd\u6e38\u620f\u3002\u8fd9\u53ef\u80fd\u662f\u9519\u8bef\uff0c\u4e5f\u53ef\u80fd\u662f\u60a8\u6ca1\u6709\u4efb\u4f55\u6e38\u620f\u65f6\u95f4\u8bb0\u5f55\u3002\u60a8\u53ef\u4ee5\u70b9\u51fb\u5237\u65b0\uff0c\u4e5f\u53ef\u4ee5\u5728\u73a9\u5b8c\u6e38\u620f\u540e\u8fd4\u56de\u3002", "note_en": "Below, you&#39;ll find a variety of titles that you may be interested in from categories across Steam\n       This might be an error, or it might be that you don&#39;t have any playtime on record. You can hit refresh, or come back once you&#39;ve played a game.", "posttime": "2021-07-23 00:52:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u84b8\u6c7d,steam,\u53ef\u80fd", "title": "\u84b8\u6c7d\u4e0b\u964d", "title_en": "Steam Is Down", "transed": 1, "url": "https://store.steampowered.com", "via": "", "real_tags": ["\u84b8\u6c7d", "steam", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "b7a1af7e0606912201c55975f6549aec.jpg", "infoid": 1069038, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u522b\u3002\u7531\u4e8e\u5176\u6240\u6709\u6743\u6a21\u578b\uff0c\u5de5\u4f5c\u6c60\u4e0d\u592a\u9002\u5408 Rust\u3002\u76f8\u53cd\uff0c\u62e5\u62b1\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u4e0d\u53ef\u53d8\u6570\u636e\u3002 Rust \u63d0\u4f9b\u4e86\u66f4\u7b80\u5355\u6613\u7528\u548c\u66f4\u4f18\u96c5\u7684\u5de5\u5177\uff1a\u5e76\u884c\u8fed\u4ee3\u5668\u548c\u6d41\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c31\u50cf\u5728\u4efb\u4f55\u7f16\u7a0b\u8bed\u8a00\u4e2d\u4f7f\u7528\u5de5\u4f5c\u6c60\u4e00\u6837\uff0c\u5e94\u8be5\u59cb\u7ec8\u8bbe\u7f6e\u5e76\u53d1\u4e0a\u9650\u3002\u5426\u5219\uff0c\u60a8\u53ef\u80fd\u4f1a\u5f88\u5feb\u8017\u5c3d\u7cfb\u7edf\u8d44\u6e90\u3002\u5bf9\u4e8e\u8ba1\u7b97\u5bc6\u96c6\u578b\u4f5c\u4e1a\uff08CPU \u5bc6\u96c6\u578b\uff09\uff0c\u6709\u63d0\u4f9b\u5e76\u884c\u8fed\u4ee3\u5668\u7684 rayon crate\uff1a\u5176\u7ec4\u5408\u5668\u88ab\u5206\u6d3e\u5230\u7ebf\u7a0b\u6c60\u7684\u8fed\u4ee3\u5668\u3002\u597d\u6d88\u606f\u662f\u7ebf\u7a0b\u6c60\u5bf9\u6211\u4eec\u8fd9\u4e9b\u5f00\u53d1\u4eba\u5458\u662f\u9690\u85cf\u7684\u3002\u6211\u4eec\u53ea\u9700\u8981\u50cf\u4f7f\u7528\u6807\u51c6\u8fed\u4ee3\u5668\u4e00\u6837\u8fdb\u884c\u7f16\u7801\u3002 [ package] name = &quot;rust_worker_pool&quot; version = &quot;0.1.0&quot; authors = [ &quot;Sylvain Kerkour &lt;sylvain@kerkour.com&gt;&quot;] edition = &quot;2018&quot; # \u5728 https://doc.rust \u67e5\u770b\u66f4\u591a\u952e\u548c\u5b83\u4eec\u7684\u5b9a\u4e49-lang.org/cargo/reference/manifest.html[dependencies] rand = &quot;0.8&quot; rayon = &quot;1&quot; \u4f7f\u7528 rand::{thread_rng, Rng};\u4f7f\u7528\u4eba\u9020\u4e1d::\u524d\u594f:: *;\u4f7f\u7528 std::time::Duration; fn compute_job(job: i64) -&gt; i64 { let mut rng = thread_rng();\u8ba9 sleep_ms: u64 = rng.gen_range( 0.. 10); std::thread::sleep(Duration::from_millis(sleep_ms)); job * job} fn process_result(result: i64) { println !( &quot;{}&quot;, result);} fn main() { let jobs = 0.. 100; jobs.into_par_iter() .map(compute_job) .for_each(process_result);} \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f\u7b49\u4e8e\u673a\u5668\u7684\u903b\u8f91 CPU \u6570\u91cf\u3002\u5bf9\u4e8e I/O\uff08\u8f93\u5165/\u8f93\u51fa\uff09\u7ed1\u5b9a\u4f5c\u4e1a\uff0c\u6211\u4eec\u9700\u8981\u8f6c\u79fb\u5230\u5f02\u6b65\u533a\u57df\u3002\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Streams\uff0c\u5b83\u662f\u53ef\u4ee5\u5e76\u53d1\u5904\u7406\u9879\u76ee\u7684\u5f02\u6b65\u8fed\u4ee3\u5668\u3002\n\u4f46\u662f Stream trait \u672c\u8eab\u4e0d\u63d0\u4f9b\u7ec4\u5408\u5b50\u3002\u6211\u4eec\u9700\u8981\u4ece\u672a\u6765\u7684 crate \u4e2d\u5bfc\u5165 StreamExt trait\u3002 [ package] name = &quot;rust_worker_pool&quot; version = &quot;0.1.0&quot; authors = [ &quot;Sylvain Kerkour &lt;sylvain@kerkour.com&gt;&quot;] edition = &quot;2018&quot; # \u5728 https://doc.rust \u67e5\u770b\u66f4\u591a\u952e\u548c\u5b83\u4eec\u7684\u5b9a\u4e49-lang.org/cargo/reference/manifest.html[dependencies] rand = &quot;0.8&quot; tokio = { version = &quot;1&quot;, features = [ &quot;full&quot;] } futures = &quot;0.3&quot; for_each_concurrent \u662f\u6700\u5bb9\u6613\u4f7f\u7528\u7684\u6d88\u8017\u6d41\u3002\u8fd9\u610f\u5473\u7740\u5b83\u4e0d\u4f1a\u8fd4\u56de Stream \u672c\u8eab\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u53ef\u4ee5 .await \u7684 Future\u3002\u4f7f\u7528\u671f\u8d27::{stream, StreamExt};\u4f7f\u7528 rand::{thread_rng, Rng};\u4f7f\u7528 std::time::Duration; async fn compute_job(job: i64) -&gt; i64 { let mut rng = thread_rng();\u8ba9 sleep_ms: u64 = rng.gen_range( 0.. 10); tokio::time::sleep(Duration::from_millis(sleep_ms))\u3002\u7b49\u5f85; job * job} async fn process_result(result: i64) { println !( &quot;{}&quot;, result);} #[tokio::main] async fn main() { let jobs = 0.. 100;\u8ba9\u5e76\u53d1= 42; stream::iter(jobs) .for_each_concurrent(concurrency, |job | async move { let result = compute_job(job). await; process_result(result). await; }) \u3002 await;} \u53e6\u4e00\u65b9\u9762\uff0cbuffer_unordered \u4e0d\u6d88\u8017\u6d41\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u4f7f\u7528 for_each \u4f5c\u4e3a\u63a5\u6536\u5668\u6765\u6d88\u8d39 Stream\u3002\u4f7f\u7528\u671f\u8d27::{stream, StreamExt};\u4f7f\u7528 rand::{thread_rng, Rng};\u4f7f\u7528 std::time::Duration; async fn compute_job(job: i64) -&gt; i64 { let mut rng = thread_rng();\u8ba9 sleep_ms: u64 = rng.gen_range( 0.. 10); tokio::time::sleep(Duration::from_millis(sleep_ms))\u3002\u7b49\u5f85; job * job} async fn process_result(result: i64) { println !( &quot;{}&quot;, result);} #[tokio::main] async fn main() { let jobs = 0.. 100;\u8ba9\u5e76\u53d1= 42; stream::iter(jobs) .map(compute_job) .buffer_unordered(concurrency) .for_each(process_result) \u3002 await;} \u6709\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u6536\u96c6\u5b83\u4eec\u800c\u4e0d\u662f\u76f4\u63a5\u5904\u7406\u7ed3\u679c\uff0c\u4f8b\u5982\u7a0d\u540e\u6279\u91cf\u53d1\u9001\u5b83\u4eec\u3002\u597d\u6d88\u606f\uff0ccollect \u65b9\u6cd5\u5728 Streams \u4e0a\u53ef\u7528\uff1a\n\u4f7f\u7528\u671f\u8d27::{stream, StreamExt};\u4f7f\u7528 rand::{thread_rng, Rng};\u4f7f\u7528 std::time::Duration; async fn compute_job(job: i64) -&gt; i64 { let mut rng = thread_rng();\u8ba9 sleep_ms: u64 = rng.gen_range( 0.. 10); tokio::time::sleep(Duration::from_millis(sleep_ms))\u3002\u7b49\u5f85; job * job} async fn process_result(result: i64) { println !( &quot;{}&quot;, result);} #[tokio::main] async fn main() { let jobs = 0.. 100;\u8ba9\u5e76\u53d1= 42;\u8ba9\u7ed3\u679c\uff1a Vec &lt; i64 &gt; = stream::iter(jobs) .map(compute_job) .buffer_unordered(concurrency) .collect() \u3002 await;} PS\uff1a\u60f3\u5b66\u4e60\u771f\u5b9e\u4e16\u754c\u7684 Rust \u548c\u653b\u51fb\u6027\u5b89\u5168\u5417\uff1f\u770b\u770b\u6211\u7684\u4e66 Black Hat Rust\uff08\u53ef\u5728\u65e9\u671f\u8bbf\u95ee\u4e2d\u83b7\u5f97\uff09\uff0c\u6211\u4eec\u5c06\u5728\u5176\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u6211\u5728\u90a3\u91cc\u5206\u4eab\u6211\u5728\u7f16\u5199 Rust \u8d85\u8fc7 2 \u5e74\u7684\u65f6\u95f4\u91cc\u5b66\u5230\u7684\u6240\u6709\u4e1c\u897f\uff1ahttps://academy .kerkour.com/black-hat-rust?coupon=BLOG PS 2\uff1a\u4e3a\u4e86\u907f\u514d\u4e0e\u7535\u5b50\u90ae\u4ef6\u901a\u8baf\u4f20\u9012\u76f8\u5173\u7684\u95ee\u9898\uff0c\u6211\u6b63\u5728\u542f\u52a8\u4e00\u4e2a\u77e9\u9635\u9891\u9053\uff0c\u60a8\u53ef\u4ee5\u52a0\u5165\u4ee5\u5173\u6ce8\u6b64\u535a\u5ba2\u7684\u6240\u6709\u66f4\u65b0:) #blog\uff1a kerkour.com", "note_en": "Don\u2019t. Worker pools are not a great fit for Rust due to its ownership model. Instead, embrace functional programming and immutable data. Rust provides simpler to use and more elegant tools:  parallel Iterators and  Streams.\n It\u2019s important to note that, like when working with worker pools in any programming language, an upper limit for concurrency should always be set up. Otherwise, you may quickly exhaust the resources of your system.\n  For compute-intensive jobs (CPU bound), there is the   rayon crate which provides  parallel Iterators: Iterators whose combinators are dispatched to a thread pool. The nice thing is that the thread pool is hidden from us, the developers. we just have to code as if we were using standard Iterators.\n  [ package] name =  &#34;rust_worker_pool&#34; version =  &#34;0.1.0&#34; authors = [ &#34;Sylvain Kerkour &lt;sylvain@kerkour.com&gt;&#34;] edition =  &#34;2018&#34; # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html[ dependencies] rand =  &#34;0.8&#34; rayon =  &#34;1&#34;\n  use rand::{thread_rng, Rng}; use rayon::prelude:: *; use std::time::Duration; fn  compute_job(job:  i64) -&gt;  i64 {  let  mut rng  = thread_rng();  let sleep_ms:  u64  = rng.gen_range( 0.. 10); std::thread::sleep(Duration::from_millis(sleep_ms)); job  * job} fn  process_result(result:  i64) { println !( &#34;{}&#34;, result);} fn  main() {  let jobs  =  0.. 100; jobs.into_par_iter() .map(compute_job) .for_each(process_result);}\n By default, the thread pool has a size equal to the number of logical CPUs of the machine.\n  For I/O (Input/Output) bound jobs, we need to move to  async land. More precisely, we will use   Streams, which are  async Iterators that can process items concurrently.\n But the   Stream trait does not provide combinators itself. We need to import the   StreamExt trait from the   future crate.\n  [ package] name =  &#34;rust_worker_pool&#34; version =  &#34;0.1.0&#34; authors = [ &#34;Sylvain Kerkour &lt;sylvain@kerkour.com&gt;&#34;] edition =  &#34;2018&#34; # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html[ dependencies] rand =  &#34;0.8&#34; tokio = {  version =  &#34;1&#34;,  features = [ &#34;full&#34;] } futures =  &#34;0.3&#34;\n  for_each_concurrent is the easiest to use as it consumes the Stream. It means that it does not return a Stream itself, but a Future, that can be  .awaited.\n  use futures::{stream, StreamExt}; use rand::{thread_rng, Rng}; use std::time::Duration; async  fn  compute_job(job:  i64) -&gt;  i64 {  let  mut rng  = thread_rng();  let sleep_ms:  u64  = rng.gen_range( 0.. 10); tokio::time::sleep(Duration::from_millis(sleep_ms)). await; job  * job} async  fn  process_result(result:  i64) { println !( &#34;{}&#34;, result);} #[tokio::main] async  fn  main() {  let jobs  =  0.. 100;  let concurrency  =  42; stream::iter(jobs) .for_each_concurrent(concurrency,  |job |  async  move {  let result  = compute_job(job). await; process_result(result). await; }) . await;}\n  On the other hand,   buffer_unordered  does not consume the Stream. This is why we need to use   for_each as a sink to consume the Stream.\n  use futures::{stream, StreamExt}; use rand::{thread_rng, Rng}; use std::time::Duration; async  fn  compute_job(job:  i64) -&gt;  i64 {  let  mut rng  = thread_rng();  let sleep_ms:  u64  = rng.gen_range( 0.. 10); tokio::time::sleep(Duration::from_millis(sleep_ms)). await; job  * job} async  fn  process_result(result:  i64) { println !( &#34;{}&#34;, result);} #[tokio::main] async  fn  main() {  let jobs  =  0.. 100;  let concurrency  =  42; stream::iter(jobs) .map(compute_job) .buffer_unordered(concurrency) .for_each(process_result) . await;}\n  Sometimes, instead of processing results directly we may need to collect them, to send them later in batch for example. Good news, the   collect method is available on Streams:\n  use futures::{stream, StreamExt}; use rand::{thread_rng, Rng}; use std::time::Duration; async  fn  compute_job(job:  i64) -&gt;  i64 {  let  mut rng  = thread_rng();  let sleep_ms:  u64  = rng.gen_range( 0.. 10); tokio::time::sleep(Duration::from_millis(sleep_ms)). await; job  * job} async  fn  process_result(result:  i64) { println !( &#34;{}&#34;, result);} #[tokio::main] async  fn  main() {  let jobs  =  0.. 100;  let concurrency  =  42;  let results: Vec &lt; i64 &gt;  = stream::iter(jobs) .map(compute_job) .buffer_unordered(concurrency) .collect() . await;}\n  P.S: Want to learn real-world Rust and offensive security? Take a look at my book  Black Hat Rust (available in Early-Access), where we will go more into details, and where I share all the things I\u2019ve learned writing production Rust for more than 2 years:  https://academy.kerkour.com/black-hat-rust?coupon=BLOG\n P.S 2: To circumvent the problems related to email newsletter delivery, I\u2019m starting a Matrix channel you can join to follow all the updates of this blog :)  #blog:kerkour.com", "posttime": "2021-07-23 00:51:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,worker", "title": "\u5982\u4f55\u5728 Rust \u4e2d\u5b9e\u73b0\u5de5\u4f5c\u6c60", "title_en": "How to implement worker pools in Rust", "transed": 1, "url": "https://kerkour.com/blog/rust-worker-pool/", "via": "", "real_tags": ["rust", "worker"]}, {"category": "", "categoryclass": "", "imagename": "6f66461671eb44dadbe920eb47fa49e8.jpeg", "infoid": 1069037, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "WSJ News Exclusive Form Energy \u7684\u94c1\u7a7a\u6c14\u7535\u6c60\u53ef\u80fd\u4f1a\u5bf9\u7535\u7f51\u50a8\u5b58\u7535\u529b\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u4e00\u5bb6\u6210\u7acb\u56db\u5e74\u7684\u521d\u521b\u516c\u53f8\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u5236\u9020\u51fa\u4e00\u79cd\u5ec9\u4ef7\u7684\u7535\u6c60\uff0c\u53ef\u4ee5\u4f7f\u7528\u5730\u7403\u4e0a\u6700\u5e38\u89c1\u7684\u5143\u7d20\u4e4b\u4e00\u653e\u7535\u6570\u5929\uff1a\u94c1\u3002 Form Energy Inc. \u7684\u7535\u6c60\u5bf9\u4e8e\u7535\u52a8\u6c7d\u8f66\u6765\u8bf4\u592a\u91cd\u4e86\u3002\u4f46\u5b83\u8868\u793a\uff0c\u4ed6\u4eec\u5c06\u80fd\u591f\u89e3\u51b3\u53ef\u518d\u751f\u80fd\u6e90\u9762\u4e34\u7684\u6700\u96be\u4ee5\u6349\u6478\u7684\u95ee\u9898\u4e4b\u4e00\uff1a\u5728\u6ca1\u6709\u9633\u5149\u548c\u98ce\u7684\u60c5\u51b5\u4e0b\uff0c\u4ee5\u5ec9\u4ef7\u7684\u65b9\u5f0f\u5c06\u5927\u91cf\u7535\u529b\u50a8\u5b58\u5230\u7535\u7f51\u4e2d\u3002\u9a6c\u8428\u8bf8\u585e\u5dde\u8428\u9ed8\u7ef4\u5c14\u516c\u53f8\u7684\u5de5\u4f5c\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u7b3c\u7f69\u5728\u4fdd\u5bc6\u548c\u4fdd\u5bc6\u534f\u8bae\u4e2d\u3002\u5b83\u6700\u8fd1\u4e0e\u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u5206\u4eab\u4e86\u5176\u8fdb\u5c55\uff0c\u5e76\u8868\u793a\u5e0c\u671b\u8ba9\u76d1\u7ba1\u673a\u6784\u548c\u516c\u7528\u4e8b\u4e1a\u516c\u53f8\u610f\u8bc6\u5230\uff0c\u5982\u679c\u4e00\u5207\u7ee7\u7eed\u6309\u8ba1\u5212\u8fdb\u884c\uff0c\u5230 2025 \u5e74\uff0c\u5176\u94c1\u7a7a\u6c14\u7535\u6c60\u5c06\u80fd\u591f\u63d0\u4f9b\u4ef7\u683c\u5408\u7406\u7684\u957f\u671f\u7535\u529b\u5b58\u50a8\u3002\u652f\u6301\u8005\u5305\u62ec Breakthrough Energy Ventures\uff0c\u8fd9\u662f\u4e00\u5bb6\u6c14\u5019\u6295\u8d44\u57fa\u91d1\uff0c\u5176\u6295\u8d44\u8005\u5305\u62ec\u5fae\u8f6f\u516c\u53f8\u8054\u5408\u521b\u59cb\u4eba\u6bd4\u5c14\u76d6\u8328\u548c\u4e9a\u9a6c\u900a\u516c\u53f8\u521b\u59cb\u4eba\u6770\u592b\u8d1d\u7d22\u65af\u3002 Form \u6700\u8fd1\u53d1\u8d77\u4e86\u4e00\u8f6e 2 \u4ebf\u7f8e\u5143\u7684\u878d\u8d44\uff0c\u7531\u94a2\u94c1\u5de8\u5934 ArcelorMittal SA \u7684\u6218\u7565\u6295\u8d44\u9886\u6295\uff0c\u8be5\u516c\u53f8\u662f\u4e16\u754c\u9886\u5148\u7684\u94c1\u77ff\u77f3\u751f\u4ea7\u5546\u4e4b\u4e00\u3002\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u7279\u5965\u00b7\u54c8\u62c9\u7c73\u6d1b (Mateo Jaramillo) \u66fe\u5f00\u53d1\u7279\u65af\u62c9\u516c\u53f8\u7684 Powerwall \u7535\u6c60\u5e76\u5de5\u4f5c\u5728\u5176\u6700\u65e9\u7684\u4e00\u4e9b\u6c7d\u8f66\u52a8\u529b\u7cfb\u7edf\u4e0a\u3002 \u300a\u534e\u5c14\u8857\u65e5\u62a5\u300b\u5c06\u5411\u60a8\u6536\u53d6 $ + \u7a0e\u6b3e\uff08\u5982\u679c\u9002\u7528\uff09\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u5728\u5ba2\u6237\u4e2d\u5fc3\u66f4\u6539\u60a8\u7684\u8ba1\u8d39\u504f\u597d\u6216\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u3002\u5982\u679c\u8d39\u7387\u6216\u6761\u6b3e\u53d1\u751f\u4efb\u4f55\u53d8\u5316\uff0c\u60a8\u5c06\u63d0\u524d\u6536\u5230\u901a\u77e5\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u81f4\u7535\u5ba2\u6237\u670d\u52a1\u90e8\u53d6\u6d88\u8ba2\u9605\u3002", "note_en": "WSJ News Exclusive     Form Energy\u2019s iron-air batteries could have big ramifications for storing electricity on the power grid\n   A four-year-old startup says it has built an inexpensive battery that can discharge power for days using one of the most common elements on Earth: iron.\n  Form Energy Inc.\u2019s batteries are far too heavy for electric cars. But it says they will be capable of solving one of the most elusive problems facing renewable energy: cheaply storing large amounts of electricity to power grids when the sun isn\u2019t shining and wind isn\u2019t blowing.\n  The work of the Somerville, Mass., company has long been shrouded in secrecy and nondisclosure agreements. It recently shared its progress with The Wall Street Journal, saying it wants to make regulators and utilities aware that if all continues to go according to plan, its iron-air batteries will be capable of affordable, long-duration power storage by 2025.\n  Its backers include Breakthrough Energy Ventures, a climate investment fund whose investors include Microsoft Corp. co-founder Bill Gates and Amazon.com Inc. founder Jeff Bezos. Form recently initiated a $200 million funding round, led by a strategic investment from steelmaking giant ArcelorMittal SA, one of the world\u2019s leading iron-ore producers.\n  Form is preparing to soon be in production of the \u201ckind of battery you need to fully retire thermal assets like coal and  natural gas\u201d power plants, said the company\u2019s chief executive, Mateo Jaramillo, who developed Tesla Inc.\u2019s Powerwall battery and worked on some of its earliest automotive powertrains.\n  You will be charged $  + tax (if applicable) for The Wall Street Journal. You may change your billing preferences at any time in the Customer Center or call  Customer Service. You will be notified in advance of any changes in rate or terms. You may cancel your subscription at anytime by calling  Customer Service.", "posttime": "2021-07-23 00:51:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "claims", "title": "\u521d\u521b\u516c\u53f8\u58f0\u79f0\u5728\u957f\u7eed\u822a\u7535\u6c60\u65b9\u9762\u53d6\u5f97\u7a81\u7834", "title_en": "Startup Claims Breakthrough in Long-Duration Batteries", "transed": 1, "url": "https://www.wsj.com/articles/startup-claims-breakthrough-in-long-duration-batteries-11626946330", "via": "", "real_tags": ["claims"]}, {"category": "", "categoryclass": "", "imagename": "9ffef05a1cb92c581846666b5a500b88.jpg", "infoid": 1069036, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u56fd\u5bb6\u73b0\u5728\u56e0\u8bde\u751f Shopify \u800c\u5728\u521b\u4e1a\u4e16\u754c\u4e2d\u95fb\u540d\uff0c\u5230 2021 \u5e74\u4e3a\u6b62\uff0c\u5b83\u5df2\u7ecf\u6253\u7834\u4e86\u4e4b\u524d\u7684\u5e74\u5ea6\u98ce\u9669\u6295\u8d44\u8bb0\u5f55\u3002\u4e8b\u5b9e\u4e0a\uff0cCB Insights \u7684\u6570\u636e\u8868\u660e\uff0c\u4eca\u5e74\u52a0\u62ff\u5927\u7684\u521b\u4e1a\u516c\u53f8\u5df2\u7ecf\u7b79\u96c6\u4e86\u6bd4 2020 \u5e74\u603b\u989d\u589e\u52a0\u4e00\u500d\u4ee5\u4e0a\u7684\u8d44\u91d1\u3002\u76f8\u540c\u7684\u6570\u636e\u96c6\u8868\u660e\uff0c\u52a0\u62ff\u5927\u7684\u98ce\u9669\u6295\u8d44\u7ed3\u679c\u73b0\u5728\u53ef\u4e0e\u6574\u4e2a\u62c9\u4e01\u7f8e\u6d32\u5730\u533a\u7684\u7ed3\u679c\u76f8\u5ab2\u7f8e\uff0c\u7b2c\u4e8c\u5b63\u5ea6\u7684\u9000\u51fa\u548c\u5927\u578b\u4ea4\u6613\u5927\u81f4\u6301\u5e73\uff0c\u540c\u671f\u7684\u98ce\u9669\u6295\u8d44\u603b\u989d\u4e5f\u76f8\u8fd1\u3002\u4ea4\u6613\u6240\u8054\u7cfb\u4e86\u4e00\u4e9b\u98ce\u9669\u6295\u8d44\u5bb6\uff0c\u4ee5\u6269\u5927\u6211\u4eec\u5bf9\u52a0\u62ff\u5927\u5e02\u573a\u7684\u770b\u6cd5\uff0c\u8d85\u8d8a\u6570\u636e\u70b9\u3002 Ripple Ventures \u9a7b\u591a\u4f26\u591a\u7684\u6295\u8d44\u8005\u9a6c\u7279\u00b7\u79d1\u6069 (Matt Cohen) \u544a\u8bc9\u4ea4\u6613\u6240\uff0c\u201c\u4eca\u5929\u7684\u52a0\u62ff\u5927\u6b63\u5904\u4e8e\u98ce\u9669\u6295\u8d44\u7206\u70b8\u4e2d\u201d\uff0c\u5bfc\u81f4\u8be5\u56fd\u201c\u524d\u6240\u672a\u6709\u201d\u7684\u7ed3\u679c\u3002\u7efc\u5408\u6570\u636e\u548c\u6295\u8d44\u8005\u7b14\u8bb0\uff0c\u52a0\u62ff\u5927\u7684\u521b\u4e1a\u884c\u4e1a\u4f3c\u4e4e\u53d7\u76ca\u4e8e\u56fd\u5185\u548c\u56fd\u9645\u8d8b\u52bf\u3001\u5e7f\u6cdb\u7684\u7c7b\u578b\u7126\u70b9\u548c\u4e0d\u6b62\u4e00\u4e2a\u4e2d\u5fc3\u3002\u8ba9\u6211\u4eec\u6765\u8c08\u8c08\u5b83\u3002\u6839\u636e CB Insights \u7684\u6570\u636e\uff0c2021 \u5e74\u4e0a\u534a\u5e74\uff0c\u52a0\u62ff\u5927\u521d\u521b\u516c\u53f8\u901a\u8fc7 414 \u7b14\u4ea4\u6613\u7b79\u96c6\u4e86 63 \u4ebf\u7f8e\u5143\u3002\u8fd9\u4e24\u4e2a\u6570\u5b57\u90fd\u4f18\u4e8e\u52a0\u62ff\u5927 2020 \u5e74\u7684\u4e1a\u7ee9\uff0c\u5f53\u65f6 617 \u7b14\u4ea4\u6613\u4e3a\u52a0\u62ff\u5927\u521d\u521b\u4f01\u4e1a\u7b79\u96c6\u4e86 29 \u4ebf\u7f8e\u5143\u7684\u603b\u8d44\u91d1\u3002\u52a0\u62ff\u5927\u5df2\u7ecf\u6253\u7834\u4e86\u4e4b\u524d\u7684\u98ce\u9669\u6295\u8d44\u8bb0\u5f55\uff0843 \u4ebf\u7f8e\u5143\uff0c2019 \u5e74\uff09\uff0c\u5e76\u4e14\u6709\u671b\u8d85\u8fc7\u5176\u5386\u53f2\u6700\u9ad8\u7684\u4ea4\u6613\u6570\u91cf\uff08720 \u7b14\uff0c2018 \u5e74\uff09\u3002\u5c31\u5176\u672c\u8eab\u800c\u8a00\uff0c\u7b2c\u4e8c\u5b63\u5ea6\u7684\u8d85\u5927\u4e1a\u7ee9\u751a\u81f3\u6bd4\u5176 2021 \u5e74\u4e0a\u534a\u5e74\u7684\u4e1a\u7ee9\u53ef\u80fd\u8ba9\u60a8\u9884\u671f\u7684\u66f4\u52a0\u6781\u7aef\uff0c\u4ee4\u4eba\u60ca\u8bb6\u3002\u89c2\u5bdf\u6765\u81ea\u540c\u4e00\u6570\u636e\u96c6\u7684\u4ee5\u4e0b\u56fe\u8868\uff1a\u52a0\u62ff\u5927\u521d\u521b\u516c\u53f8\u521a\u521a\u5728\u4ea4\u6613\u91cf\u548c\u7f8e\u5143\u6570\u91cf\u65b9\u9762\u521b\u4e0b\u4e86\u6709\u53f2\u4ee5\u6765\u6700\u597d\u7684\u5b63\u5ea6\u3002\u6b64\u5916\uff0c\u8be5\u56fd\u5728 2020 \u5e74\u7b2c\u56db\u5b63\u5ea6\u5c06\u7b79\u96c6\u7684\u8d44\u91d1\u4ece\u5f53\u5730\u6700\u4f4e\u6c34\u5e73\u63d0\u9ad8\u4e86\u8fd1 10 \u500d\u3002\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u672c\u5b63\u5ea6\u6ca1\u6709\u4e00\u7b14\u52a0\u62ff\u5927\u521d\u521b\u516c\u53f8\u4ea4\u6613\u7684\u4ef7\u503c\u8d85\u8fc7 5 \u4ebf\u7f8e\u5143\u3002\u4e8b\u5b9e\u4e0a\uff0cTrulioo \u7684 3.94 \u4ebf\u7f8e\u5143 D \u7cfb\u5217\u662f\u6700\u5927\u7684\u3002\u4ece\u90a3\u91cc\u5f00\u59cb\uff0c\u540d\u5355\u5305\u62ec ApplyBoard \u7684 D \u8f6e\u878d\u8d44 3 \u4ebf\u7f8e\u5143\u548c Vena \u7684 C \u8f6e\u878d\u8d44 2.42 \u4ebf\u7f8e\u5143\u3002\u6211\u4eec\u8ba4\u4e3a\u8be5\u7ed3\u679c\u8868\u660e\u52a0\u62ff\u5927\u7684\u6295\u8d44\u524d\u666f\u5e76\u975e\u7531\u5c11\u6570\u51e0\u5bb6\u7b79\u96c6\u5341\u4ebf\u7f8e\u5143\u8d44\u91d1\u7684\u516c\u53f8\u4e3b\u5bfc\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u4e2a\u597d\u6d88\u606f\uff1a\u6570\u636e\u8868\u660e\uff0c\u52a0\u62ff\u5927\u521b\u4e1a\u5e02\u573a\u5e76\u6ca1\u6709\u53d7\u5230\u4e00\u4e24\u5bb6\u6770\u51fa\u516c\u53f8\u7684\u652f\u6301\uff0c\u800c\u662f\u6574\u4f53\u8868\u73b0\u826f\u597d\u3002", "note_en": "The country, now famous in the startup world for giving birth to Shopify, has already crushed prior yearly records for venture investment thus far in 2021. Indeed,  CB Insights data indicates that Canadian startups this year have already raised more than double their 2020 totals.\n The same data set indicates that Canada\u2019s venture capital results now rival those of the entire Latin American region, with exits and mega-deals coming in roughly on par in the second quarter, and a similar number of total venture capital rounds in the period.\n      The Exchange reached out to a number of venture capitalists to expand our perspective on the Canadian market beyond the data points.  Matt Cohen, a Toronto-based investor at  Ripple Ventures, told The Exchange that \u201cCanada is in a venture explosion\u201d today, leading to results that are \u201cunprecedented\u201d for the country.\n Taking the data and investor notes in aggregate, Canada\u2019s startup industry seems to be benefiting from both domestic and international trends, a wide genre focus and more than one hub. Let\u2019s talk aboot it.\n  In the first half of 2021, Canadian startups raised $6.3 billion across 414 deals, per CB Insights data. Both numbers compare favorably to Canada\u2019s 2020 results, when 617 deals led to $2.9 billion in total capital raised by Canadian startups. Canada has already bested its previous record in venture dollars invested ($4.3 billion, 2019), and is on pace to beat its all-time deal count as well (720, 2018).\n By itself, the second quarter\u2019s outsize results are even more extreme than its H1 2021 results might have led you to expect, amazingly. Observe the following chart from the same data set:\n  Canadian startups just had their single best quarter ever in both deal volume and dollar volume terms. Furthermore, the country boosted capital raised by nearly 10x from its local minimum in Q4 2020.\n Notably, no Canadian startup deal in the quarter was worth more than $500 million; indeed, Trulioo\u2019s $394 million Series D was the largest. From there the list includes $300 million for ApplyBoard\u2019s Series D and Vena\u2019s $242 million Series C. We read that list of results as indicative of an investing landscape in Canada that is not dominated by a handful of companies raising billion-dollar rounds. That\u2019s good news, mind you: The data implies that the Canadian startup market is not being bolstered by one or two standout companies, but rather performing well more generally.", "posttime": "2021-07-23 00:18:08", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u521b\u4e1a,startup,\u52a0\u62ff\u5927", "title": "\u52a0\u62ff\u5927\u7684\u521b\u4e1a\u5e02\u573a\u968f\u7740\u5168\u7403\u98ce\u6295\u70ed\u6f6e\u800c\u84ec\u52c3\u53d1\u5c55", "title_en": "\n\t\t\t\tCanada\u2019s startup market booms alongside hot global VC investment\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/07/22/canadas-startup-market-booms-alongside-hot-global-vc-investment/", "via": "", "real_tags": ["\u521b\u4e1a", "startup", "\u52a0\u62ff\u5927"]}, {"category": "", "categoryclass": "", "imagename": "8c7e0efff34eef700cdc384b05c4a0d2.jpg", "infoid": 1069035, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5904\u4e8e\u4e2d\u5fc3\u4f4d\u7f6e\u2014\u2014\u81f3\u5c11\u5728\u7f8e\u56fd\u2014\u2014\u662f\u4ea4\u901a\u90e8\u957f\u76ae\u7279\u00b7\u5e03\u8482\u5409\u683c (Pete Buttigieg)\u3002\u8fd9\u4f4d\u5370\u7b2c\u5b89\u7eb3\u5dde\u5c0f\u9547\u5e02\u957f\u6210\u4e3a\u603b\u7edf\u5019\u9009\u4eba\uff0c\u73b0\u4efb\u62dc\u767b\u653f\u5e9c\u5185\u9601\u6210\u5458\uff0c\u8d1f\u8d23\u76d1\u7ba1\u516c\u5171\u4ea4\u901a\u3001\u9ad8\u901f\u516c\u8def\u5b89\u5168\u548c\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u7b49\u65b0\u5174\u6280\u672f\u3002\u8fd9\u4f4d\u54c8\u4f5b\u5927\u5b66\u6bd5\u4e1a\u751f\u3001\u725b\u6d25\u5927\u5b66\u7f57\u5fb7\u5b66\u8005\u548c\u524d\u7f8e\u56fd\u6d77\u519b\u519b\u5b98\u80fd\u591f\u4e3a\u4ea4\u901a\u8fd0\u8f93\u7684\u672a\u6765\u5e26\u6765\u590d\u6742\u6027\u6216\u6e05\u6670\u5ea6\u3002\u5728 Disrupt 2021 \u5927\u4f1a\u4e0a\uff0cButtigieg \u90e8\u957f\u5c06\u4e0e\u6211\u4eec\u4e00\u8d77\u8fdb\u884c\u7089\u8fb9\u8c08\u8bdd\uff0c\u6211\u4eec\u5c06\u6df1\u5165\u63a2\u8ba8\u6709\u5173\u4ea4\u901a\u7684\u4e00\u4e9b\u6700\u68d8\u624b\u7684\u95ee\u9898\uff0c\u4ee5\u53ca\u5982\u4f55\u786e\u4fdd\u4ece A \u70b9\u642c\u5230 B \u70b9\u662f\u4e00\u9879\u666e\u904d\u6743\u5229\uff0c\u800c\u4e0d\u662f\u7279\u6743\u3002\u6211\u4eec\u5c06\u5411 Buttigieg \u8be2\u95ee\u5fae\u578b\u4ea4\u901a\u548c\u516c\u5171\u4ea4\u901a\u3001\u62dc\u767b\u603b\u7edf\u63a8\u52a8\u8054\u90a6\u653f\u5e9c\u4f7f\u7528\u7535\u52a8\u6c7d\u8f66\u3001\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u6307\u5bfc\u4ee5\u53ca\u5728\u4f7f\u7528\u9ad8\u7ea7\u9a7e\u9a76\u5458\u8f85\u52a9\u548c\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u65f6\u62a5\u544a\u8f66\u8f86\u78b0\u649e\u7684\u65b0\u76d1\u7ba1\u8981\u6c42\u2014\u2014\u8fd9\u4e00\u4e3e\u63aa\u53ef\u80fd\u6fc0\u53d1\u65b0\u4e00\u6ce2\u521d\u521b\u4f01\u4e1a\uff0c\u5e76\u4f7f\u4e00\u4e9b\u8f66\u8f7d\u6280\u672f\u53d7\u76ca\u3002\u7ed3\u679c\uff1a\u5982\u679c\u5b83\u6d89\u53ca\u79fb\u52a8\u4eba\u5458\u548c\u5305\u88f9\u7684\u6280\u672f\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8c08\u8bba\u5b83\u3002 Buttigieg \u90e8\u957f\u53ea\u662f\u5c06\u5728\u6211\u4eec\u7684 Disrupt Stage \u548c Extra Crunch Stage \u4e0a\u7684\u4f17\u591a\u77e5\u540d\u6f14\u8bb2\u8005\u4e4b\u4e00\u3002\u5728\u4e3a\u671f\u4e09\u5929\u7684\u6d3b\u52a8\u4e2d\uff0c\u4f5c\u5bb6\u3001\u5bfc\u6f14\u3001\u6f14\u5458\u548c Houseplant \u8054\u5408\u521b\u59cb\u4eba Seth Rogen \u5c06\u4e0e Houseplant \u9996\u5e2d\u5546\u52a1\u5b98 Haneen Davies \u548c\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98 Michael Mohr \u4e00\u8d77\u8ba8\u8bba\u5927\u9ebb\u4e1a\u52a1\uff0cDuolingo \u9996\u5e2d\u6267\u884c\u5b98\u548c\u8054\u5408\u521b\u59cb\u4eba\u521b\u59cb\u4eba Luis von Ahn \u5c06\u8ba8\u8bba\u6e38\u620f\u5316\u6559\u80b2\u548c\u4e3a\u516c\u5f00\u52df\u80a1\u505a\u51c6\u5907\uff0cCoinbase \u9996\u5e2d\u6267\u884c\u5b98 Brian Armstrong \u5c06\u6df1\u5165\u7814\u7a76\u52a0\u5bc6\u8d27\u5e01\u7684\u52a8\u8361\u4e16\u754c\u53ca\u5176\u516c\u53f8\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7684\u5927\u89c4\u6a21\u76f4\u63a5\u4e0a\u5e02\u3002\u5176\u4ed6\u6f14\u8bb2\u8005\u5305\u62ec Twitter \u9996\u5e2d\u4fe1\u606f\u5b89\u5168\u5b98 Rinki Sethi\u3001Calendly \u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98 Tope Awotona\u3001Mirror \u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98 Brynn Putnam\u3001Evil Geniuses \u9996\u5e2d\u6267\u884c\u5b98 Nicole LaPointe Jameson \u548c Andreessen Horowitz \u666e\u901a\u5408\u4f19\u4eba Katie Haun\u3002\u5982\u679c\u6ca1\u6709 Startup Battlefield\uff0cDisrupt 2021 \u5c06\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u8fd9\u573a\u7ade\u4e89\u63a8\u51fa\u4e86\u4e00\u4e9b\u4e16\u754c\u4e0a\u6700\u5927\u7684\u79d1\u6280\u516c\u53f8\uff0c\u5305\u62ec Cloudflare \u548c Dropbox\u3002\u4eca\u5e74 9 \u6708 21 \u65e5\u81f3 23 \u65e5\uff0c\u5728 Disrupt 2021 \u7ebf\u4e0a\u4e0e Buttigieg \u90e8\u957f\u548c\u8d85\u8fc7 10,000 \u540d\u521b\u4e1a\u754c\u6700\u5177\u5f71\u54cd\u529b\u7684\u4eba\u4e00\u8d77\u53c2\u52a0\u3002\u4ee5\u4f4e\u4e8e 99 \u7f8e\u5143\u7684\u4ef7\u683c\u5728\u6709\u9650\u65f6\u95f4\u5185\u83b7\u5f97\u60a8\u7684\u901a\u884c\u8bc1\uff01", "note_en": "At the center \u2014 at least in the United States \u2014 sits Secretary of Transportation Pete Buttigieg. The small-town mayor in Indiana turned presidential candidate and now cabinet member under the Biden administration oversees public transport, highway safety and nascent technologies like autonomous vehicles. The Harvard graduate, Rhodes Scholar at Oxford University and former U.S. Navy officer is in a position to bring complexity or clarity to the future of transportation.\n At  Disrupt 2021, Secretary Buttigieg will join us for a fireside chat where we\u2019ll dig into some of the thorniest questions around transportation and how to ensure that moving from Point A to Point B is a universal right, not a privilege. We\u2019ll ask Buttigieg about micromobility and public transit, President Biden\u2019s push for the federal government to use electric vehicles, autonomous vehicle guidance and new regulatory requirements around reporting vehicle crashes when an advanced driver assistance and automated driving system is engaged \u2014 a move that could spur a new wave of startups and benefit some in-car technologies.\n  The upshot: If it involves technology that moves people and packages, we aim to talk about it.\n Secretary Buttigieg is just one of the many high-profile speakers who will be on our  Disrupt Stage and the  Extra Crunch Stage. During the three-day event, writer, director, actor and  Houseplant co-founder  Seth Rogen will be joined by Houseplant Chief Commercial Officer Haneen Davies and co-founder and CEO Michael Mohr to talk about the business of weed,  Duolingo CEO and co-founder  Luis von Ahn will discuss gamifying education and prepping for a public offering and Coinbase CEO Brian Armstrong will dig into the volatile world of cryptocurrency and his company\u2019s massive direct listing earlier this year.\n Other speakers include Twitter CISO  Rinki Sethi, Calendly founder and CEO  Tope Awotona, Mirror co-founder and CEO  Brynn Putnam, Evil Geniuses CEO  Nicole LaPointe Jameson and Andreessen Horowitz General Partner  Katie Haun.\n Disrupt 2021 wouldn\u2019t be complete without Startup Battlefield, the competition that launched some of the world\u2019s biggest tech companies, including Cloudflare and Dropbox. Join Secretary Buttigieg and over 10,000 of the startup world\u2019s most influential people at  Disrupt 2021 online this September 21-23.\u00a0 Get your pass to attend now for under $99\u00a0for a limited time!", "posttime": "2021-07-23 00:17:56", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u4ea4\u901a\u90e8\u957f,transportation,\u9996\u5e2d", "title": "\u7f8e\u56fd\u4ea4\u901a\u90e8\u957f\u76ae\u7279\u00b7\u5e03\u8482\u5409\u683c (Pete Buttigieg) \u5373\u5c06\u98a0\u8986", "title_en": "\n\t\t\t\tUS Secretary of Transportation Pete Buttigieg is coming to Disrupt\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/07/22/us-secretary-of-transportation-pete-buttigieg-is-coming-to-disrupt-draft/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u4ea4\u901a\u90e8\u957f", "\u9996\u5e2d"]}, {"category": "", "categoryclass": "", "imagename": "e66849af0ec8c5f87e4d36d3c70f0047.jpg", "infoid": 1069034, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u81ea\u8be5\u516c\u53f8\u4e8e 2018 \u5e74\u6210\u7acb\u4ee5\u6765\uff0c\u4e94\u5bb6 Elms Capital\u3001Blueprint Equity \u548c\u5176\u4ed6\u4eba\u53c2\u4e0e\u4e86\u8be5\u8f6e\u878d\u8d44\uff0c\u4e3a Sendlane \u63d0\u4f9b\u4e86 2300 \u4e07\u7f8e\u5143\u7684\u603b\u8d44\u91d1\u3002 \u5c3d\u7ba1\u8be5\u516c\u53f8\u4e09\u5e74\u524d\u6b63\u5f0f\u6210\u7acb\uff0c\u4f46\u8054\u5408\u521b\u59cb\u4eba\u517c\u9996\u5e2d\u6267\u884c\u5b98 Jimmy Kim \u544a\u8bc9 TechCrunch \u4ed6\u5f00\u59cb\u81f4\u529b\u4e8e\u8fd9\u4e2a\u60f3\u6cd5\u662f\u5728 2013 \u5e74\u4e0e\u53e6\u5916\u4e24\u4f4d\u8054\u5408\u521b\u59cb\u4eba\u4e00\u8d77\u63d0\u51fa\u7684\u3002\u4ed6\u4eec\u90fd\u662f\u4e0d\u540c\u4e1a\u52a1\u9886\u57df\u7684\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u4eba\u5458\uff0c\u4f46\u6709\u4e00\u4e9b\u5171\u540c\u70b9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u90fd\u4f7f\u7528\u4ed6\u4eec\u4e0d\u559c\u6b22\u7684\u7535\u5b50\u90ae\u4ef6\u5de5\u5177\u3002\u91d1\u8bf4\uff0c\u4ed6\u4eec\u786e\u5b9e\u559c\u6b22\u7684\u90a3\u4e9b\u5bf9\u5c0f\u4f01\u4e1a\u6765\u8bf4\u4ef7\u683c\u592a\u9ad8\u4e86\u3002\u4ed6\u4eec\u7740\u624b\u4e3a\u60f3\u8981\u505a\u7684\u4e0d\u4ec5\u4ec5\u662f\u7535\u5b50\u90ae\u4ef6\u6d3b\u52a8\u548c\u65b0\u95fb\u901a\u8baf\u7684\u5ba2\u6237\u6784\u5efa\u81ea\u5df1\u7684\u7535\u5b50\u90ae\u4ef6\u8425\u9500\u81ea\u52a8\u5316\u5e73\u53f0\u3002\u5f53 Kim \u53c2\u4e0e\u7684\u53e6\u5916\u4e24\u5bb6\u516c\u53f8\u4e8e 2017 \u5e74\u9000\u51fa\u65f6\uff0c\u4ed6\u51b3\u5b9a\u5168\u529b\u6295\u5165 Sendlane\uff0c\u5c06\u5176\u6784\u5efa\u6210\u4e00\u4e2a\u57fa\u4e8e\u6d1e\u5bdf\u529b\u548c\u96c6\u6210\u5b9e\u73b0\u6536\u5165\u6700\u5927\u5316\u7684\u7cfb\u7edf\u3002 2018\u5e74\u5e95\uff0c\u8be5\u516c\u53f8\u83b7\u5f97\u4e86Zing Capital\u7684\u79cd\u5b50\u8d44\u91d1\uff0c\u5e76\u4e8e2019\u5e74\u51b3\u5b9a\u8f6c\u5411\u7535\u5b50\u5546\u52a1\u3002 \u201c\u57fa\u4e8e\u6211\u4eec\u7684\u4e2a\u4eba\u80cc\u666f\u4ee5\u53ca\u4e0e\u6211\u4eec\u5408\u4f5c\u8fc7\u7684\u5ba2\u6237\uff0c\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u662f\u6211\u4eec\u505a\u5f97\u6700\u597d\u7684\uff0c\u201dKim \u8bf4\u3002\u5982\u4eca\uff0c\u8d85\u8fc7 1,700 \u5bb6\u7535\u5b50\u5546\u52a1\u516c\u53f8\u4f7f\u7528 Sendlane \u7684\u5e73\u53f0\u5c06\u5176\u5ba2\u6237\u6570\u636e\u7684 100 \u591a\u4e2a\u70b9\uff08\u5e9f\u5f03\u7684\u8d2d\u7269\u8f66\u3001\u54ea\u4e9b\u4ea7\u54c1\u5356\u5f97\u6700\u597d\u4ee5\u53ca\u54ea\u4e2a\u8425\u9500\u6e20\u9053\u6709\u6548\uff09\u8f6c\u6362\u4e3a\u65e8\u5728\u63d0\u9ad8\u5ba2\u6237\u5fe0\u8bda\u5ea6\u7684\u4e92\u52a8\u901a\u4fe1\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5b83\u53ef\u4ee5\u4e3a\u5ba2\u6237\u5e73\u5747\u589e\u52a0 20% \u81f3 40% \u7684\u6536\u5165\u3002\u8be5\u516c\u53f8\u672c\u8eab\u7684\u5e74\u589e\u957f\u7387\u4e3a 100%\uff0c\u6bcf\u5e74\u7684\u7ecf\u5e38\u6027\u6536\u5165\u8d85\u8fc7 700 \u4e07\u7f8e\u5143\u3002\u5b83\u76ee\u524d\u62e5\u6709 54 \u540d\u5458\u5de5\uff0cKim \u9884\u8ba1\u5230\u4eca\u5e74\u5e74\u5e95\u5c06\u8fbe\u5230 90 \u540d\u5de6\u53f3\uff0c\u5230 2022 \u5e74\u5e95\u5c06\u8fbe\u5230 150 \u540d\u3002Sendlane \u76ee\u524d\u6709 20 \u591a\u4e2a\u7a7a\u7f3a\u804c\u4f4d\uff0c\u4ed6\u8bf4\u3002\n\u5f53\u524d\u548c\u6f5c\u5728\u7684\u589e\u957f\u662f Kim \u8ffd\u6c42 A \u8f6e\u878d\u8d44\u7684\u9a71\u52a8\u529b\u3002\u4ed6\u8bf4\uff0cSendlane \u53bb\u5e74\u5f00\u59cb\u76c8\u5229\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u5b83\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u6ca1\u6709\u7b79\u96c6\u5230\u5927\u91cf\u8d44\u91d1\u3002\u7136\u800c\uff0c\u968f\u7740\u7535\u5b50\u5546\u52a1\u7684\u5feb\u901f\u666e\u53ca\uff0cKim \u5e0c\u671b\u4e3a\u4e0b\u4e00\u6ce2\u7ade\u4e89\u505a\u597d\u51c6\u5907\uff0c\u4ed6\u9884\u8ba1\u660e\u5e74\u4f1a\u5230\u6765\u3002\u4ed6\u8ba4\u4e3a ActiveCampaign \u548c Klaviyo \u7b49\u516c\u53f8\u4e0e Sendlane \u4e00\u81f4\uff0c\u4f46\u8868\u793a\u4ed6\u516c\u53f8\u7684\u4e0e\u4f17\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5ba2\u6237\u670d\u52a1\uff0c\u62e5\u6709\u8f83\u77ed\u7684\u7b49\u5f85\u65f6\u95f4\u548c\u5728\u4e0d\u5230 15 \u79d2\u5185\u56de\u7b54\u95ee\u9898\u7684\u804a\u5929\u3002\u4ed6\u8fd8\u51c6\u5907\u5b9e\u73b0\u4e0b\u4e00\u4e2a\u613f\u666f\uff0c\u5373\u7edf\u4e00\u6570\u636e\u548c\u6d1e\u5bdf\u529b\uff0c\u5728\u5ba2\u6237\u548c\u96f6\u552e\u5546\u4e4b\u95f4\u5efa\u7acb\u6709\u610f\u4e49\u7684\u4e92\u52a8\u3002 \u201c\u6211\u4eec\u60f3\u5f00\u59cb\u5f00\u8f9f\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4\uff0c\u201d\u91d1\u8865\u5145\u9053\u3002 \u201c\u6211\u4eec\u5c06\u5728\u672a\u6765 12 \u5230 18 \u4e2a\u6708\u5185\u63a8\u51fa\u5927\u91cf\u65b0\u4ea7\u54c1\uff0c\u5e76\u5e0c\u671b\u6210\u4e3a\u5ba2\u6237\u65c5\u7a0b\u6570\u636e\u6d1e\u5bdf\u7684\u5355\u4e00\u6765\u6e90\uff0c\u4e3a\u60a8\u7684\u4e1a\u52a1\u589e\u957f\u63d0\u4f9b\u7075\u6d3b\u6027\u3002\u201d\u4e24\u4e2a\u5373\u5c06\u63a8\u51fa\u7684\u5de5\u5177\u5305\u62ec Audience\uff0c\u5b83\u5c06\u7edf\u4e00\u5ba2\u6237\u6570\u636e\u5e76\u63d0\u4f9b\u6d1e\u5bdf\u529b\uff0c\u4ee5\u53ca\u7528\u4e8e\u53cc\u5411\u901a\u4fe1\u548c\u542f\u7528\u6d3b\u52a8\u7ea7\u522b\u53d1\u9001\u7684 SMS \u4ea7\u54c1\u3002", "note_en": "Five Elms Capital, Blueprint Equity and others invested in the round to give Sendlane total funding of $23 million since the company was founded in 2018.\n Though the company officially started three years ago, co-founder and CEO Jimmy Kim told TechCrunch he began working on the idea back in 2013 with two other co-founders.\n  They were all email marketers in different lines of business, but had some common ground in that they were all using email tools they didn\u2019t like. The ones they did like came with too big of a price tag for a small business, Kim said. They set out to build their own email marketing automation platform for customers that wanted to do more than email campaigns and newsletters.\n When two other companies Kim was involved in exited in 2017, he decided to put both feet into Sendlane to build it into a system that maximized revenue based on insights and integrations.\n In late 2018, the company attracted seed funding from Zing Capital and decided in 2019 to pivot into e-commerce. \u201cBased on our personal backgrounds and looking at the customers we worked with, we realized that is what we did best,\u201d Kim said.\n Today, more than 1,700 e-commerce companies use Sendlane\u2019s platform to convert more than 100 points of their customers\u2019 data \u2014 abandoned carts, which products sell the best and which marketing channel is working \u2014 into engaging communications aimed at driving customer loyalty. The company said it can increase revenue for customers between 20% and 40% on average.\n The company itself is growing 100% year over year and seeing over $7 million in annual recurring revenue. It currently has 54 employees right now, and Kim expects to be at around 90 by the end of the year and 150 by the end of 2022. Sendlane currently has more than 20 open roles, he said.\n That current and potential growth was a driver for Kim to go after the Series A funding. He said Sendlane became profitable last year, which is why it has not raised a lot of money so far. However, as the rapid adoption of e-commerce continues, Kim wants to be ready for the next wave of competition coming in, which he expects in the next year.\n He considers companies like ActiveCampaign and Klaviyo to be in line with Sendlane, but says his company\u2019s differentiator is customer service, boasting short wait times and chats that answer questions in less than 15 seconds.\n He is also ready to go after the next vision, which is to unify data and insights to create meaningful interactions between customers and retailers.\n \u201cWe want to start carving out a new space,\u201d Kim added. \u201cWe have a ton of new products coming out in the next 12 to 18 months and want to be the single source for customer journey data insights that provides flexibility for your business to grow.\u201d\n Two upcoming tools include Audiences, which will unify customer data and provide insights, and an SMS product for two-way communications and enabled campaign-level sending.", "posttime": "2021-07-23 00:17:41", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "sendlane,shoppers,\u5ba2\u6237", "title": "Sendlane \u878d\u8d44 2000 \u4e07\u7f8e\u5143\uff0c\u5c06\u8d2d\u7269\u8005\u8f6c\u53d8\u4e3a\u5fe0\u5b9e\u5ba2\u6237", "title_en": "\n\t\t\t\tSendlane raises $20M to convert shoppers into loyal customers\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/07/22/sendlane-raises-20m-to-convert-shoppers-into-loyal-customers/", "via": "", "real_tags": ["sendlane", "shoppers", "\u5ba2\u6237"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069033, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "AlphaFold \u7a0b\u5e8f\u5bf9\u8fd1 20,000 \u79cd\u4eba\u7c7b\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u9884\u6d4b\u73b0\u5728\u53ef\u4f9b\u7814\u7a76\u4eba\u5458\u514d\u8d39\u4f7f\u7528 \u53bb\u5e74\uff0c\u4eba\u5de5\u667a\u80fd\u7ec4\u7ec7 DeepMind \u7834\u89e3\u4e86\u4e00\u4e2a\u56f0\u6270\u79d1\u5b66\u5bb6\u6570\u5341\u5e74\u7684\u8c1c\u56e2\uff1a\u5265\u79bb\u86cb\u767d\u8d28\u7684\u7ed3\u6784\uff0c\u5373\u751f\u547d\u7684\u57fa\u77f3\u3002\u73b0\u5728\uff0c\u5728\u79ef\u7d2f\u4e86\u51e0\u4e4e\u6240\u6709\u4eba\u7c7b\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u6570\u636e\u5e93\u540e\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u514d\u8d39\u63d0\u4f9b\u5728\u7ebf\u8d44\u6e90\u4f9b\u7814\u7a76\u4eba\u5458\u4f7f\u7528\u3002\u7406\u89e3\u6211\u4eec\u57fa\u672c\u7684\u751f\u7269\u673a\u5236\u7684\u5173\u952e\u662f\u5b83\u7684\u67b6\u6784\u3002\u6784\u6210\u86cb\u767d\u8d28\u7684\u6c28\u57fa\u9178\u94fe\u626d\u66f2\u548c\u8f6c\u52a8\uff0c\u5f62\u6210\u6700\u4ee4\u4eba\u56f0\u60d1\u7684 3D \u5f62\u72b6\u3002\u6b63\u662f\u8fd9\u79cd\u590d\u6742\u7684\u5f62\u5f0f\u89e3\u91ca\u4e86\u86cb\u767d\u8d28\u7684\u529f\u80fd\uff1b\u4ece\u5bf9\u65b0\u9648\u4ee3\u8c22\u81f3\u5173\u91cd\u8981\u7684\u9176\u5230\u5bf9\u6297\u611f\u67d3\u6027\u653b\u51fb\u7684\u6297\u4f53\u3002\u5c3d\u7ba1\u59cb\u4e8e 1950 \u5e74\u4ee3\u7684\u591a\u5e74\u7e41\u91cd\u800c\u6602\u8d35\u7684\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\uff0c\u79d1\u5b66\u5bb6\u4eec\u53ea\u89e3\u7801\u4e86\u4e00\u5c0f\u90e8\u5206\u4eba\u7c7b\u86cb\u767d\u8d28\u7684\u7ed3\u6784\u3002 DeepMind \u7684\u4eba\u5de5\u667a\u80fd\u7a0b\u5e8f AlphaFold \u5df2\u7ecf\u9884\u6d4b\u4e86\u4eba\u7c7b\u8868\u8fbe\u7684\u51e0\u4e4e\u6240\u6709 20,000 \u79cd\u86cb\u767d\u8d28\u7684\u7ed3\u6784\u3002\u5728\u5c06\u9884\u6d4b\u7ed3\u679c\u4e0e\u5df2\u77e5\u7ed3\u6784\u8fdb\u884c\u6bd4\u8f83\u7684\u72ec\u7acb\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u8be5\u7cfb\u7edf\u80fd\u591f\u5728 95% \u7684\u65f6\u95f4\u5185\u4ee5\u826f\u597d\u7684\u6807\u51c6\u9884\u6d4b\u86cb\u767d\u8d28\u7684\u5f62\u72b6\u3002 DeepMind \u4e0e\u6b27\u6d32\u5206\u5b50\u751f\u7269\u5b66\u5b9e\u9a8c\u5ba4\u7684\u6b27\u6d32\u751f\u7269\u4fe1\u606f\u5b66\u7814\u7a76\u6240 (EMBL-EBI) \u5408\u4f5c\uff0c\u5e0c\u671b\u8be5\u6570\u636e\u5e93\u80fd\u591f\u5e2e\u52a9\u7814\u7a76\u4eba\u5458\u901a\u8fc7\u6253\u5f00\u9a71\u52a8\u67d0\u4e9b\u75be\u75c5\u7684\u88c5\u7f6e\uff0c\u5728\u539f\u5b50\u5c3a\u5ea6\u4e0a\u5206\u6790\u751f\u547d\u662f\u5982\u4f55\u8fd0\u4f5c\u7684\uff0c\u4ece\u800c\u5728\u533b\u5b66\u9886\u57df\u53d6\u5f97\u957f\u8db3\u8fdb\u6b65\u3002\u4e2a\u6027\u5316\u533b\u7597\uff0c\u521b\u9020\u66f4\u6709\u8425\u517b\u7684\u4f5c\u7269\u5e76\u5f00\u53d1\u53ef\u4ee5\u5206\u89e3\u5851\u6599\u7684\u201c\u7eff\u8272\u9176\u201d\u3002\u4eba\u5de5\u667a\u80fd\u6709\u5404\u79cd\u5b9a\u4e49\uff0c\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u5b83\u662f\u6307\u4f7f\u7528\u6570\u636e\u6784\u5efa\u4e16\u754c\u67d0\u4e9b\u65b9\u9762\u6a21\u578b\u7684\u7a0b\u5e8f\u3002\u7136\u540e\u4f7f\u7528\u8be5\u6a21\u578b\u5bf9\u672a\u6765\u4e8b\u4ef6\u505a\u51fa\u660e\u667a\u7684\u51b3\u7b56\u548c\u9884\u6d4b\u3002\u8be5\u6280\u672f\u88ab\u5e7f\u6cdb\u7528\u4e8e\u5728\u97f3\u4e50\u3001\u7535\u5f71\u548c\u8d2d\u7269\u7f51\u7ad9\u4e0a\u63d0\u4f9b\u8bed\u97f3\u548c\u9762\u90e8\u8bc6\u522b\u3001\u8bed\u8a00\u7ffb\u8bd1\u4ee5\u53ca\u4e2a\u4eba\u63a8\u8350\u3002\u672a\u6765\uff0c\u5b83\u53ef\u4ee5\u63d0\u4f9b\u65e0\u4eba\u9a7e\u9a76\u6c7d\u8f66\u3001\u667a\u80fd\u4e2a\u4eba\u52a9\u7406\u548c\u667a\u80fd\u7535\u7f51\u3002\u4eba\u5de5\u667a\u80fd\u6709\u53ef\u80fd\u4f7f\u7ec4\u7ec7\u66f4\u52a0\u6709\u6548\u548c\u9ad8\u6548\uff0c\u4f46\u8be5\u6280\u672f\u5f15\u53d1\u4e86\u9053\u5fb7\u3001\u6cbb\u7406\u3001\u9690\u79c1\u548c\u6cd5\u5f8b\u7b49\u4e25\u91cd\u95ee\u9898\u3002\u6700\u8fd1\u51e0\u4e2a\u6708\uff0c\u4e0e\u4ece\u4e8b\u4e00\u7cfb\u5217\u9879\u76ee\u7684\u79d1\u5b66\u5bb6\u5408\u4f5c\u2014\u2014\u4ece\u4e25\u91cd\u5f71\u54cd\u4e16\u754c\u8d2b\u56f0\u5730\u533a\u7684\u75be\u75c5\u5230\u7814\u7a76\u6297\u751f\u7d20\u8010\u836f\u6027\u6216\u5bfc\u81f4 Covid \u7684\u75c5\u6bd2\u7684\u751f\u7269\u5b66\u2014\u2014\u5df2\u7ecf\u5f00\u59cb\u3002\n\u201c\u8fd9\u4e9b\u5e94\u7528\u5b9e\u9645\u4e0a\u53ea\u53d7\u6211\u4eec\u7684\u60f3\u8c61\u529b\u7684\u9650\u5236\u2014\u2014\u4f46\u5728\u66f4\u57fa\u672c\u7684\u5c42\u9762\u4e0a\uff0cAlphaFold \u6570\u636e\u5e93\u5c06\u589e\u52a0\u6211\u4eec\u5bf9\u86cb\u767d\u8d28\u5982\u4f55\u53d1\u6325\u4f5c\u7528\u4ee5\u53ca\u5b83\u4eec\u5728\u751f\u547d\u57fa\u672c\u8fc7\u7a0b\u4e2d\u7684\u4f5c\u7528\u7684\u7406\u89e3\uff0c\u201d\u603b\u5e72\u4e8b Edith Heard \u6559\u6388\u8bf4EMBL \u7684\u3002 \u201c\u8fd9\u79cd\u7406\u89e3\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u66f4\u597d\u5730\u89e3\u5f00\u751f\u547d\u7684\u5206\u5b50\u673a\u5236\uff0c\u5e76\u52a0\u901f\u6211\u4eec\u4fdd\u62a4\u548c\u6cbb\u7597\u4eba\u7c7b\u5065\u5eb7\u4ee5\u53ca\u5730\u7403\u5065\u5eb7\u7684\u8ffd\u6c42\uff0c\u5e76\u4f7f\u8fd9\u4e00\u5de5\u5177\u5f00\u653e\u83b7\u53d6\u5c06\u52a0\u901f\u7814\u7a76\u53d1\u73b0\u548c\u4e3a\u4e16\u754c\u5404\u5730\u7684\u79d1\u5b66\u5bb6\u521b\u65b0\u3002\u201d AlphaFold \u4ee5\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\u7684\u51c6\u786e\u5ea6\u9884\u6d4b\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u80fd\u529b\u4e8e\u53bb\u5e74\u5728\u4e24\u5e74\u4e00\u5ea6\u7684\u201c\u86cb\u767d\u8d28\u5965\u6797\u5339\u514b\u8fd0\u52a8\u4f1a\u201d\u4e0a\u4eae\u76f8\u3002\u53c2\u4e0e\u8005\u83b7\u5f97\u4e86\u5927\u7ea6 100 \u79cd\u86cb\u767d\u8d28\u7684\u6c28\u57fa\u9178\u5e8f\u5217\uff0c\u5e76\u8981\u6c42\u4ed6\u4eec\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002 AlphaFold \u4e0d\u4ec5\u4f7f\u5176\u4ed6\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6027\u80fd\u9eef\u7136\u5931\u8272\uff0c\u800c\u4e14\u8fbe\u5230\u4e86\u7c7b\u4f3c\u4e8e\u8d39\u529b\u7684\u5b9e\u9a8c\u5ba4\u65b9\u6cd5\u7684\u51c6\u786e\u6027\u3002 EMBL-EBI \u4e3b\u4efb Ewan Birney \u6559\u6388\u5728\u7ed3\u679c\u4e8e 11 \u6708\u9996\u6b21\u516c\u5e03\u540e\u8bf4\uff1a\u201c\u6211\u51e0\u4e4e\u4ece\u6905\u5b50\u4e0a\u6454\u4e0b\u6765\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u957f\u671f\u5b58\u5728\u7684\u86cb\u767d\u8d28\u6298\u53e0\u95ee\u9898\u5df2\u7ecf\u5f97\u5230\u89e3\u51b3\uff0c\u6211\u611f\u5230\u975e\u5e38\u5174\u594b\u548c\u60ca\u8bb6\u3002\u201d \u201c\u8fd9\u4e2a\u6570\u636e\u96c6\u5f88\u50cf\u4eba\u7c7b\u57fa\u56e0\u7ec4\u2026\u2026\u6b63\u662f\u5728\u8fd9\u4e2a\u6570\u636e\u96c6\u4e0a\uff0c\u6211\u4eec\u5f00\u59cb\u4e86\u4e00\u4e9b\u6211\u4eec\u4e4b\u524d\u65e0\u6cd5\u505a\u5230\u7684\u65b0\u79d1\u5b66\u3002\u6211\u5f88\u9ad8\u5174\u5f00\u59cb\u8d70\u8fd9\u6761\u8def\u3002\u201d", "note_en": "AlphaFold program\u2019s prediction of nearly 20,000 human protein structures now free for researchers\n    Last year the artificial intelligence group DeepMind cracked a mystery that has flummoxed scientists for decades: stripping bare the structure of proteins, the building blocks of life. Now, having amassed a  database of nearly all human protein structures, the company is making the resource available online free for researchers to use.\n The key to understanding our basic biological machinery is its architecture. The chains of amino acids that comprise proteins twist and turn to make the most confounding of 3D shapes. It is this elaborate form that explains protein function; from enzymes that are crucial to metabolism to antibodies that fight infectious attacks.\n  Despite years of onerous and expensive lab work that began in the 1950s, scientists have only decoded the structure of a fraction of human proteins. DeepMind\u2019s AI program, AlphaFold, has predicted the structure of  nearly all 20,000 proteins expressed by humans. In an independent benchmark test that compared predictions to known structures, the system was able to predict the shape of a protein to a good standard 95% of time.\n DeepMind, which has partnered with the European Molecular Biology Laboratory\u2019s European Bioinformatics Institute (EMBL-EBI), hopes the database will help researchers to analyse how life works at an atomic scale by unpacking the apparatus that drives some diseases, make strides in the field of personalised medicine, create more nutritious crops and develop \u201cgreen enzymes\u201d that can break down plastic.\n Artificial Intelligence has various definitions, but in general it means a program that uses data to build a model of some aspect of the world. This model is then used to make informed decisions and predictions about future events. The technology is used widely, to provide speech and face recognition, language translation, and personal recommendations on music, film and shopping sites. In the future, it could deliver driverless cars, smart personal assistants, and intelligent energy grids. AI has the potential to make organisations more effective and efficient, but the technology raises serious issues of ethics, governance, privacy and law.\n Collaboration in recent months with scientists working on a range of projects \u2013 from diseases that disproportionately affect poorer parts of the world to studying antibiotic resistance or the biology of the virus that causes Covid \u2013\u00a0has already begun.\n \u201cThe applications are actually limited only by our imagination \u2013 but at a more fundamental level, the AlphaFold database will increase our understanding of how proteins function, and their role in the fundamental processes of life,\u201d said Prof Edith Heard, the director-general of the EMBL.\n \u201cThis understanding means we can be better equipped to unravel the molecular mechanisms of life and accelerate our pursuits to protect and treat human health, as well as the health of our planet, and making this tool open access will accelerate the power of research discovery and innovation for scientists around the world.\u201d\n  AlphaFold\u2019s ability to predict protein structure with  dizzying accuracy was unveiled at the biennial \u201cprotein olympics\u201d last year. Participants were given the amino acid sequences for about 100 proteins and challenged to work them out. AlphaFold not only eclipsed the performance of other computer programs but achieved accuracy analogous to laborious lab-based methods.\n \u201cI almost fell off my chair in just excitement and amazement that this longstanding problem of how proteins fold had been solved,\u201d said Prof Ewan Birney, the director of the EMBL-EBI, after the results were first presented in November.\n \u201cThis dataset is rather like the  human genome \u2026 and it\u2019s this dataset where we start some new bits of science that we weren\u2019t able to do beforehand. I\u2019m very excited to start walking down that road.\u201d", "posttime": "2021-07-23 00:14:10", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "database,\u4eba\u5de5\u667a\u80fd,\u6570\u636e\u5e93,firm,\u86cb\u767d\u8d28", "title": "\u4eba\u5de5\u667a\u80fd\u516c\u53f8 DeepMind \u5c06\u751f\u547d\u57fa\u77f3\u6570\u636e\u5e93\u4e0a\u7ebf", "title_en": "AI Firm DeepMind Puts Database of the Building Blocks of Life Online", "transed": 1, "url": "https://www.theguardian.com/technology/2021/jul/22/ai-firm-deepmind-puts-database-building-blocks-life-human-protein-structure-free-online", "via": "", "real_tags": ["database", "\u4eba\u5de5\u667a\u80fd", "\u6570\u636e\u5e93", "firm", "\u86cb\u767d\u8d28"]}, {"category": "", "categoryclass": "", "imagename": "924f8cfc3ea599dcbc0d7c0c9bf5ab86.png", "infoid": 1069032, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Thesis \u662f Fold \u52a0\u5bc6\u5956\u52b1\u5e94\u7528\u7a0b\u5e8f\u548c\u53bb\u4e2d\u5fc3\u5316 Keep \u534f\u8bae\u80cc\u540e\u7684\u52a0\u5bc6\u5b75\u5316\u5668\uff0c\u5468\u56db\u5ba3\u5e03\u5df2\u5728 A \u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e86 2100 \u4e07\u7f8e\u5143\u3002\u8fd9\u8f6e\u878d\u8d44\u7684\u6295\u8d44\u8005\u5305\u62ec ParaFi Capital\u3001Nascent\u3001Polychain Capital \u548c\u5176\u4ed6\u52a0\u5bc6\u9886\u57df\u7684\u6295\u8d44\u8005\u3002\u6839\u636e Thesis \u9996\u5e2d\u6267\u884c\u5b98\u517c\u521b\u59cb\u4eba Matt Luongo \u7684\u8bf4\u6cd5\uff0c\u98ce\u9669\u5de5\u4f5c\u5ba4\u8ba1\u5212\u4f7f\u7528\u8fd9\u7b14\u8d44\u91d1\u6765\u5efa\u7acb\u73b0\u6709\u9879\u76ee\u5e76\u542f\u52a8\u65b0\u9879\u76ee\u3002 Thesis \u7684\u7b2c\u4e94\u4e2a\u5de5\u4f5c\u5ba4\u9879\u76ee\u662f\u4e00\u4e2a\u5c1a\u672a\u547d\u540d\u7684 Web 3 \u94b1\u5305\uff0cLuongo \u5c06\u5176\u63cf\u8ff0\u4e3a\u201cMetaMask \u7684\u5f00\u6e90\u66ff\u4ee3\u54c1\u201d\u3002 Luongo \u544a\u8bc9 CoinDesk\uff0c\u5728\u5e7f\u53d7\u6b22\u8fce\u7684 ConsenSys \u62e5\u6709\u7684\u52a0\u5bc6\u94b1\u5305\u6536\u7d27\u5176\u8bb8\u53ef\u8bc1\u5e76\u4e8e 2020 \u5e74 8 \u6708\u4ece\u5f00\u6e90\u8f6c\u5411\u95ed\u6e90\u4e4b\u540e\uff0cThesis \u53d7\u5230\u542f\u53d1\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a MetaMask \u7ade\u4e89\u5bf9\u624b\u3002 - \u5177\u4f53\u800c\u8a00\uff0cA \u7cfb\u5217\u7b79\u96c6\u7684 2100 \u4e07\u7f8e\u5143\u662f\u5bf9 Thesis \u672c\u8eab\u7684\u6295\u8d44\u3002\u5bf9\u4e8e\u6295\u8d44\u8005\u6765\u8bf4\uff0c\u8fd9\u4ee3\u8868\u7740 Thesis \u5c06\u7ee7\u7eed\u6210\u529f\u5b75\u5316\u548c\u5f00\u53d1\u9879\u76ee\u7684\u8d4c\u6ce8\u3002\u6ce8\u518c\u540e\uff0c\u60a8\u5c06\u6536\u5230\u6709\u5173 CoinDesk \u4ea7\u54c1\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u4e14\u60a8\u540c\u610f\u6211\u4eec\u7684\u6761\u6b3e\u548c\u6761\u4ef6\u4ee5\u53ca\u9690\u79c1\u653f\u7b56\u3002 ParaFi Capital \u7684 Santiago Roel Santos \u8868\u793a\uff1a\u201cThesis \u662f\u6211\u4eec\u751f\u6001\u7cfb\u7edf\u4e2d\u6700\u597d\u7684\u91cd\u590d\u5efa\u8bbe\u8005\u4e4b\u4e00\uff0c\u5229\u7528\u4ed6\u4eec\u65e9\u671f\u7684\u52a0\u5bc6\u4e13\u4e1a\u77e5\u8bc6\u5c06\u6280\u672f\u63a8\u5411\u5e02\u573a\uff0c\u8fd9\u4e9b\u6280\u672f\u5728\u4f7f\u52a0\u5bc6\u66f4\u5177\u6d3b\u529b\u548c\u53ef\u8bbf\u95ee\u6027\u65b9\u9762\u53d1\u6325\u7740\u5173\u952e\u4f5c\u7528\u3002\u201d\n\u672c\u8f6e\u6295\u8d44\u8005\u5c06\u83b7\u5f97 Thesis \u53ca\u5176\u6240\u6709\u9879\u76ee\u7684\u80a1\u6743\u3002 \u201c\u4efb\u4f55\u5728\u8fd9\u4e00\u8f6e\u6295\u8d44\u7684\u4eba\u73b0\u5728\u90fd\u62e5\u6709 Fold\u3001Keep\u3001Saddle \u7684\u6240\u6709\u6743\u2014\u2014\u8fd9\u771f\u7684\u662f\u6211\u4eec\u8fc4\u4eca\u4e3a\u6b62\u6240\u505a\u7684\u4e00\u5207\uff0c\u201dLuongo \u8bf4\u3002\u62ab\u9732 \u4f5c\u4e3a\u5173\u4e8e\u52a0\u5bc6\u8d27\u5e01\u3001\u6570\u5b57\u8d44\u4ea7\u548c\u8d27\u5e01\u672a\u6765\u7684\u65b0\u95fb\u548c\u4fe1\u606f\u7684\u9886\u5bfc\u8005\uff0cCoinDesk \u662f\u4e00\u5bb6\u81f4\u529b\u4e8e\u8fbe\u5230\u6700\u9ad8\u65b0\u95fb\u6807\u51c6\u5e76\u9075\u5b88\u4e00\u5957\u4e25\u683c\u7684\u7f16\u8f91\u653f\u7b56\u7684\u5a92\u4f53\u673a\u6784\u3002 CoinDesk \u662f Digital Currency Group \u7684\u72ec\u7acb\u8fd0\u8425\u5b50\u516c\u53f8\uff0c\u8be5\u96c6\u56e2\u6295\u8d44\u4e8e\u52a0\u5bc6\u8d27\u5e01\u548c\u533a\u5757\u94fe\u521d\u521b\u516c\u53f8\u3002", "note_en": "Thesis, the crypto incubator behind the  Fold crypto rewards app and the decentralized  Keep protocol, announced Thursday that it has raised $21 million in a Series A funding round.\n Investors in the round included ParaFi Capital, Nascent, Polychain Capital and others in the crypto space.\n According to Thesis CEO and founder Matt Luongo, the venture studio plans to use the funds to build out existing projects and spin up new ones. Thesis\u2019 fifth studio project is a yet-unnamed Web 3 wallet that Luongo described as an \u201copen-source alternative to MetaMask.\u201d\n Luongo told CoinDesk that Thesis was inspired to create a MetaMask competitor after the popular, ConsenSys-owned crypto wallet tightened its licenses and  switched from open-source to closed-source in August 2020.\n  Unlike previous funding rounds for Thesis, which have largely been  project-specific, the $21 million raised in the Series A is an investment into Thesis itself. For investors, it represents a bet that Thesis will continue successfully incubating and developing projects.\n By signing up, you will receive emails about CoinDesk products and you agree to our  terms &amp; conditions and  privacy policy.\n \u201cThesis is one of the best repeat builders in our ecosystem, leveraging their early crypto expertise to bring to market technology that plays a pivotal role in making crypto more dynamic and accessible,\u201d said Santiago Roel Santos of ParaFi Capital.\n  Investors in the round will be given equity in Thesis and all of its projects.\n \u201cAnyone who invested in this round now has ownership in Fold, Keep, Saddle \u2013 really everything that we\u2019ve done so far,\u201d Luongo said.\n    Disclosure The leader in news and information on cryptocurrency, digital assets and the future of money, CoinDesk is a media outlet that strives for the highest journalistic standards and abides by a  strict set of editorial policies. CoinDesk is an independent operating subsidiary of  Digital Currency Group, which invests in  cryptocurrencies and blockchain  startups.", "posttime": "2021-07-23 00:13:34", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7a0b\u5e8f,\u52a0\u5bc6,crypto", "title": "Thesis \u662f Fold \u52a0\u5bc6\u5956\u52b1\u5e94\u7528\u7a0b\u5e8f\u548c\u53bb\u4e2d\u5fc3\u5316 Keep \u534f\u8bae\u80cc\u540e\u7684\u52a0\u5bc6\u5b75\u5316\u5668\uff0cA \u8f6e\u878d\u8d44 2100 \u4e07\u7f8e\u5143", "title_en": "Thesis, the crypto incubator behind the Fold crypto rewards app and the decentralized Keep protocol, raises $21M Series A", "transed": 1, "url": "https://www.coindesk.com/crypto-venture-studio-thesis-raises-21m-to-keep-building", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u52a0\u5bc6", "crypto"]}, {"category": "", "categoryclass": "", "imagename": "1dbaaf1066c664741ea6e9b0d0a35db3.jpg", "infoid": 1069031, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u5b9e\u9a8c\u5ba4 DeepMind \u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u521b\u5efa\u4e86\u8fc4\u4eca\u4e3a\u6b62\u6700\u5168\u9762\u7684\u4eba\u7c7b\u86cb\u767d\u8d28\u56fe\u8c31\u3002\u8be5\u516c\u53f8\u662f\u8c37\u6b4c\u6bcd\u516c\u53f8 Alphabet \u7684\u5b50\u516c\u53f8\uff0c\u6b63\u5728\u514d\u8d39\u53d1\u5e03\u8fd9\u4e9b\u6570\u636e\uff0c\u4e00\u4e9b\u79d1\u5b66\u5bb6\u5c06\u8fd9\u9879\u5de5\u4f5c\u7684\u6f5c\u5728\u5f71\u54cd\u4e0e\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u5212\u7684\u6f5c\u5728\u5f71\u54cd\u8fdb\u884c\u4e86\u6bd4\u8f83\uff0c\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u5212\u662f\u4e00\u9879\u7ed8\u5236\u6bcf\u4e2a\u4eba\u7c7b\u57fa\u56e0\u7684\u56fd\u9645\u52aa\u529b\u3002\u86cb\u767d\u8d28\u662f\u957f\u800c\u590d\u6742\u7684\u5206\u5b50\uff0c\u5728\u4f53\u5185\u6267\u884c\u8bb8\u591a\u4efb\u52a1\uff0c\u4ece\u6784\u5efa\u7ec4\u7ec7\u5230\u5bf9\u6297\u75be\u75c5\u3002\u5b83\u4eec\u7684\u76ee\u7684\u662f\u7531\u5b83\u4eec\u7684\u7ed3\u6784\u51b3\u5b9a\u7684\uff0c\u5b83\u4eec\u50cf\u6298\u7eb8\u4e00\u6837\u6298\u53e0\u6210\u590d\u6742\u548c\u4e0d\u89c4\u5219\u7684\u5f62\u72b6\u3002\u4e86\u89e3\u86cb\u767d\u8d28\u5982\u4f55\u6298\u53e0\u6709\u52a9\u4e8e\u89e3\u91ca\u5176\u529f\u80fd\uff0c\u8fd9\u53cd\u8fc7\u6765\u53c8\u53ef\u4ee5\u5e2e\u52a9\u79d1\u5b66\u5bb6\u5b8c\u6210\u4e00\u7cfb\u5217\u4efb\u52a1\u2014\u2014\u4ece\u5bf9\u8eab\u4f53\u5982\u4f55\u8fd0\u4f5c\u8fdb\u884c\u57fa\u7840\u7814\u7a76\uff0c\u5230\u8bbe\u8ba1\u65b0\u7684\u836f\u7269\u548c\u6cbb\u7597\u65b9\u6cd5\u3002\u4ee5\u524d\uff0c\u786e\u5b9a\u86cb\u767d\u8d28\u7684\u7ed3\u6784\u4f9d\u8d56\u4e8e\u6602\u8d35\u4e14\u8017\u65f6\u7684\u5b9e\u9a8c\u3002\u4f46\u53bb\u5e74 DeepMind \u8868\u660e\u5b83\u53ef\u4ee5\u4f7f\u7528\u540d\u4e3a AlphaFold \u7684\u4eba\u5de5\u667a\u80fd\u8f6f\u4ef6\u5bf9\u86cb\u767d\u8d28\u7684\u7ed3\u6784\u8fdb\u884c\u51c6\u786e\u9884\u6d4b\u3002\u73b0\u5728\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u5411\u516c\u4f17\u53d1\u5e03\u8be5\u7a0b\u5e8f\u505a\u51fa\u7684\u6570\u5341\u4e07\u4e2a\u9884\u6d4b\u3002 \u201c\u6211\u8ba4\u4e3a\u8fd9\u662f DeepMind \u6574\u4e2a 10 \u5e74\u591a\u751f\u547d\u5468\u671f\u7684\u9876\u5cf0\uff0c\u201d\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u517c\u8054\u5408\u521b\u59cb\u4eba Demis Hassabis \u544a\u8bc9 The Verge\u3002 \u201c\u4ece\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5c31\u6253\u7b97\u8fd9\u6837\u505a\uff1a\u5728\u4eba\u5de5\u667a\u80fd\u65b9\u9762\u53d6\u5f97\u7a81\u7834\uff0c\u5728\u56f4\u68cb\u548c\u96c5\u8fbe\u5229\u7b49\u6e38\u620f\u4e0a\u8fdb\u884c\u6d4b\u8bd5\uff0c[\u5e76]\u5c06\u5176\u5e94\u7528\u4e8e\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\uff0c\u770b\u770b\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u52a0\u901f\u79d1\u5b66\u7a81\u7834\u5e76\u4f7f\u7528\u90a3\u4e9b\u9020\u798f\u4eba\u7c7b\u7684\u3002\u201d\u76ee\u524d\u5728\u516c\u5171\u9886\u57df\u6709\u5927\u7ea6 180,000 \u79cd\u86cb\u767d\u8d28\u7ed3\u6784\u53ef\u7528\uff0c\u6bcf\u4e00\u79cd\u90fd\u901a\u8fc7\u5b9e\u9a8c\u65b9\u6cd5\u4ea7\u751f\uff0c\u5e76\u53ef\u901a\u8fc7\u86cb\u767d\u8d28\u6570\u636e\u5e93\u8bbf\u95ee\u3002 DeepMind \u6b63\u5728\u53d1\u5e03\u5bf9 20 \u79cd\u4e0d\u540c\u751f\u7269\u4f53\u4e2d\u7ea6 350,000 \u79cd\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u9884\u6d4b\uff0c\u5305\u62ec\u5c0f\u9f20\u548c\u679c\u8747\u7b49\u52a8\u7269\u4ee5\u53ca\u5927\u80a0\u6746\u83cc\u7b49\u7ec6\u83cc\u3002 \uff08DeepMind \u7684\u6570\u636e\u4e0e\u9884\u5148\u5b58\u5728\u7684\u86cb\u767d\u8d28\u7ed3\u6784\u4e4b\u95f4\u5b58\u5728\u4e00\u4e9b\u91cd\u53e0\uff0c\u4f46\u7531\u4e8e\u6a21\u578b\u7684\u6027\u8d28\uff0c\u7a76\u7adf\u6709\u591a\u5c11\u96be\u4ee5\u91cf\u5316\u3002\uff09\u6700\u91cd\u8981\u7684\u662f\uff0c\u8be5\u7248\u672c\u5305\u62ec\u5bf9 98% \u7684\u4eba\u7c7b\u86cb\u767d\u8d28\u7684\u9884\u6d4b\uff0c\u5927\u7ea6\u6709 20,000 \u79cd\u4e0d\u540c\u7ed3\u6784\uff0c\u7edf\u79f0\u4e3a\u4eba\u7c7b\u86cb\u767d\u8d28\u7ec4\u3002\u5b83\u4e0d\u662f\u7b2c\u4e00\u4e2a\u516c\u5f00\u7684\u4eba\u7c7b\u86cb\u767d\u8d28\u6570\u636e\u96c6\uff0c\u4f46\u5b83\u662f\u6700\u5168\u9762\u3001\u6700\u51c6\u786e\u7684\u3002 AlphaFold \u7684\u6280\u672f\u4e3b\u7ba1 John Jumper \u8bf4\uff0c\u5982\u679c\u4ed6\u4eec\u613f\u610f\uff0c\u79d1\u5b66\u5bb6\u4eec\u53ef\u4ee5\u4e3a\u81ea\u5df1\u4e0b\u8f7d\u6574\u4e2a\u4eba\u7c7b\u86cb\u767d\u8d28\u7ec4\u3002 \u201c\u6709\u4e00\u4e2a\u6709\u6548\u7684 HumanProteome.zip\uff0c\u6211\u8ba4\u4e3a\u5b83\u7684\u5927\u5c0f\u7ea6\u4e3a 50 GB\uff0c\u201dJumper \u544a\u8bc9 The Verge\u3002 \u201c\u5982\u679c\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u628a\u5b83\u653e\u5728\u95ea\u5b58\u9a71\u52a8\u5668\u4e0a\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u8ba1\u7b97\u673a\u8fdb\u884c\u5206\u6790\uff0c\u5b83\u5bf9\u4f60\u6ca1\u6709\u591a\u5927\u597d\u5904\uff01\u201d\u5728\u53d1\u5e03\u7b2c\u4e00\u6279\u6570\u636e\u540e\uff0cDeepMind \u8ba1\u5212\u7ee7\u7eed\u589e\u52a0\u86cb\u767d\u8d28\u5e93\uff0c\u8be5\u5e93\u5c06\u7531\u6b27\u6d32\u65d7\u8230\u751f\u547d\u79d1\u5b66\u5b9e\u9a8c\u5ba4\u6b27\u6d32\u5206\u5b50\u751f\u7269\u5b66\u5b9e\u9a8c\u5ba4 (EMBL) \u7ef4\u62a4\u3002 EMBL \u603b\u5e72\u4e8b\u4f0a\u8fea\u4e1d\u00b7\u8d6b\u5fb7 (Edith Heard) \u8868\u793a\uff0c\u5230\u4eca\u5e74\u5e74\u5e95\uff0cDeepMind \u5e0c\u671b\u53d1\u5e03\u5bf9 1 \u4ebf\u79cd\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u9884\u6d4b\uff0c\u8be5\u6570\u636e\u96c6\u5c06\u201c\u6539\u53d8\u6211\u4eec\u5bf9\u751f\u547d\u8fd0\u4f5c\u65b9\u5f0f\u7684\u7406\u89e3\u201d\u3002\n\u54c8\u8428\u6bd4\u65af\u8bf4\uff0c\u8fd9\u4e9b\u6570\u636e\u5bf9\u79d1\u5b66\u548c\u5546\u4e1a\u7814\u7a76\u4eba\u5458\u6765\u8bf4\u90fd\u662f\u6c38\u4e45\u514d\u8d39\u7684\u3002 \u201c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5c06\u5b83\u7528\u4e8e\u4efb\u4f55\u4e8b\u60c5\uff0c\u201dDeepMind \u9996\u5e2d\u6267\u884c\u5b98\u5728\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\u6307\u51fa\u3002 \u201c\u4ed6\u4eec\u53ea\u9700\u8981\u5f52\u529f\u4e8e\u53c2\u4e0e\u5f15\u7528\u7684\u4eba\u3002\u201d\u4e86\u89e3\u86cb\u767d\u8d28\u7684\u7ed3\u6784\u5bf9\u5404\u4e2a\u9886\u57df\u7684\u79d1\u5b66\u5bb6\u90fd\u5f88\u6709\u7528\u3002\u8fd9\u4e9b\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u8bbe\u8ba1\u65b0\u836f\uff0c\u5408\u6210\u5206\u89e3\u5e9f\u7269\u7684\u65b0\u578b\u9176\uff0c\u5e76\u521b\u9020\u5bf9\u75c5\u6bd2\u6216\u6781\u7aef\u5929\u6c14\u6709\u62b5\u6297\u529b\u7684\u4f5c\u7269\u3002 DeepMind \u7684\u86cb\u767d\u8d28\u9884\u6d4b\u5df2\u7ecf\u88ab\u7528\u4e8e\u533b\u5b66\u7814\u7a76\uff0c\u5305\u62ec\u7814\u7a76\u5bfc\u81f4 COVID-19 \u7684\u75c5\u6bd2 SARS-CoV-2 \u7684\u5de5\u4f5c\u539f\u7406\u3002\u65b0\u6570\u636e\u5c06\u52a0\u901f\u8fd9\u4e9b\u52aa\u529b\uff0c\u4f46\u79d1\u5b66\u5bb6\u4eec\u6307\u51fa\uff0c\u5c06\u8fd9\u4e9b\u4fe1\u606f\u8f6c\u5316\u4e3a\u73b0\u5b9e\u4e16\u754c\u7684\u7ed3\u679c\u4ecd\u9700\u8981\u5927\u91cf\u65f6\u95f4\u3002 \u201c\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u4f1a\u5728\u4e00\u5e74\u5185\u6539\u53d8\u60a3\u8005\u7684\u6cbb\u7597\u65b9\u5f0f\uff0c\u4f46\u5b83\u80af\u5b9a\u4f1a\u5bf9\u79d1\u5b66\u754c\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\uff0c\u201d\u79d1\u7f57\u62c9\u591a\u5927\u5b66\u751f\u7269\u5316\u5b66\u7cfb\u6559\u6388 Marcelo C. Sousa \uff0c\u544a\u8bc9 The Verge\u3002 DeepMind \u9ad8\u7ea7\u7814\u7a76\u79d1\u5b66\u5bb6 Kathryn Tunyasuvunakool \u8868\u793a\uff0c\u79d1\u5b66\u5bb6\u4eec\u5c06\u4e0d\u5f97\u4e0d\u4e60\u60ef\u4e8e\u638c\u63e1\u8fd9\u4e9b\u4fe1\u606f\u3002 \u201c\u4f5c\u4e3a\u4e00\u540d\u751f\u7269\u5b66\u5bb6\uff0c\u6211\u53ef\u4ee5\u786e\u8ba4\uff0c\u6211\u4eec\u751a\u81f3\u6ca1\u6709\u89c2\u5bdf 20,000 \u4e2a\u7ed3\u6784\u7684\u624b\u518c\uff0c\u6240\u4ee5\u8fd9\u4e2a [\u6570\u636e\u91cf] \u662f\u975e\u5e38\u51fa\u4e4e\u610f\u6599\u7684\uff0c\u201dTunyasuvunakool \u544a\u8bc9 The Verge\u3002 \u201c\u8981\u5206\u6790\u6210\u5343\u4e0a\u4e07\u7684\u7ed3\u6784\u2014\u2014\u8fd9\u592a\u75af\u72c2\u4e86\u3002\u201d\u4f46\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cDeepMind \u7684\u8f6f\u4ef6\u751f\u6210\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u9884\u6d4b\uff0c\u800c\u4e0d\u662f\u5b9e\u9a8c\u786e\u5b9a\u7684\u6a21\u578b\uff0c\u8fd9\u610f\u5473\u7740\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u5de5\u4f5c\u6765\u9a8c\u8bc1\u7ed3\u6784\u3002 DeepMind \u8868\u793a\uff0c\u5b83\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u5728\u5176 AlphaFold \u8f6f\u4ef6\u4e2d\u6784\u5efa\u51c6\u786e\u5ea6\u6307\u6807\uff0c\u8be5\u8f6f\u4ef6\u5bf9\u6bcf\u4e2a\u9884\u6d4b\u7684\u53ef\u4fe1\u5ea6\u8fdb\u884c\u6392\u540d\u3002\u4e0d\u8fc7\uff0c\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u9884\u6d4b\u4ecd\u7136\u975e\u5e38\u6709\u7528\u3002\u901a\u8fc7\u5b9e\u9a8c\u65b9\u6cd5\u786e\u5b9a\u86cb\u767d\u8d28\u7684\u7ed3\u6784\u65e2\u6602\u8d35\u53c8\u8017\u65f6\uff0c\u5e76\u4e14\u4f9d\u8d56\u4e8e\u5927\u91cf\u7684\u53cd\u590d\u8bd5\u9a8c\u3002\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u662f\u4f4e\u7f6e\u4fe1\u5ea6\u7684\u9884\u6d4b\u4e5f\u53ef\u4ee5\u4e3a\u79d1\u5b66\u5bb6\u6307\u660e\u6b63\u786e\u7684\u7814\u7a76\u65b9\u5411\uff0c\u4ece\u800c\u8282\u7701\u4ed6\u4eec\u591a\u5e74\u7684\u5de5\u4f5c\u3002\u683c\u62c9\u65af\u54e5\u5927\u5b66\u7ed3\u6784\u751f\u7269\u5b66\u6559\u6388\u6d77\u4f26\u74e6\u5c14\u767b\u544a\u8bc9 The Verge\uff0cDeepMind \u7684\u6570\u636e\u5c06\u201c\u663e\u7740\u7f13\u89e3\u201d\u7814\u7a76\u74f6\u9888\uff0c\u4f46\u201c\u8fdb\u884c\u751f\u7269\u5316\u5b66\u548c\u751f\u7269\u5b66\u8bc4\u4f30\u7684\u8d39\u529b\u3001\u8d44\u6e90\u6d88\u8017\u5de5\u4f5c\uff0c\u4f8b\u5982\uff0c\u836f\u7269\u529f\u80fd\u201d\u5c06\u4fdd\u7559\u3002\nSousa \u4e4b\u524d\u66fe\u5728\u4ed6\u7684\u5de5\u4f5c\u4e2d\u4f7f\u7528\u8fc7 AlphaFold \u7684\u6570\u636e\uff0c\u4ed6\u8bf4\u79d1\u5b66\u5bb6\u4eec\u4f1a\u7acb\u5373\u611f\u53d7\u5230\u8fd9\u79cd\u5f71\u54cd\u3002 \u201c\u5728\u6211\u4eec\u4e0e DeepMind \u7684\u5408\u4f5c\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542b\u86cb\u767d\u8d28\u6837\u672c\u7684\u6570\u636e\u96c6\uff0c\u6211\u4eec\u5df2\u7ecf\u62e5\u6709\u4e86 10 \u5e74\uff0c\u4f46\u6211\u4eec\u4ece\u672a\u8fbe\u5230\u5f00\u53d1\u9002\u5408\u6a21\u578b\u7684\u5730\u6b65\uff0c\u201d\u4ed6\u8bf4\u3002 \u201cDeepMind \u540c\u610f\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2a\u7ed3\u6784\uff0c\u5728\u6211\u4eec\u5750\u4e86 10 \u5e74\u540e\uff0c\u4ed6\u4eec\u80fd\u591f\u5728 15 \u5206\u949f\u5185\u89e3\u51b3\u95ee\u9898\u3002\u201d\u86cb\u767d\u8d28\u7531\u6c28\u57fa\u9178\u94fe\u6784\u6210\uff0c\u4eba\u4f53\u4e2d\u6709 20 \u79cd\u4e0d\u540c\u7684\u6c28\u57fa\u9178\u3002\u7531\u4e8e\u4efb\u4f55\u5355\u72ec\u7684\u86cb\u767d\u8d28\u90fd\u53ef\u4ee5\u7531\u6570\u767e\u4e2a\u5355\u72ec\u7684\u6c28\u57fa\u9178\u7ec4\u6210\uff0c\u6bcf\u4e2a\u6c28\u57fa\u9178\u90fd\u53ef\u4ee5\u5411\u4e0d\u540c\u7684\u65b9\u5411\u6298\u53e0\u548c\u626d\u66f2\uff0c\u8fd9\u610f\u5473\u7740\u5206\u5b50\u7684\u6700\u7ec8\u7ed3\u6784\u5177\u6709\u6570\u91cf\u60ca\u4eba\u7684\u53ef\u80fd\u6784\u578b\u3002\u4e00\u79cd\u4f30\u8ba1\u662f\u5178\u578b\u7684\u86cb\u767d\u8d28\u53ef\u4ee5\u4ee5 10^300 \u79cd\u65b9\u5f0f\u6298\u53e0\u2014\u2014\u5373 1 \u540e\u8ddf 300 \u4e2a\u96f6\u3002\u7531\u4e8e\u86cb\u767d\u8d28\u592a\u5c0f\u800c\u65e0\u6cd5\u7528\u663e\u5fae\u955c\u68c0\u67e5\uff0c\u79d1\u5b66\u5bb6\u4e0d\u5f97\u4e0d\u4f7f\u7528\u6602\u8d35\u4e14\u590d\u6742\u7684\u65b9\u6cd5\uff08\u5982\u6838\u78c1\u5171\u632f\u548c X \u5c04\u7ebf\u6676\u4f53\u5b66\uff09\u95f4\u63a5\u786e\u5b9a\u5176\u7ed3\u6784\u3002\u7b80\u5355\u5730\u901a\u8fc7\u9605\u8bfb\u5176\u7ec4\u6210\u6c28\u57fa\u9178\u5217\u8868\u6765\u786e\u5b9a\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u60f3\u6cd5\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u5728\u7406\u8bba\u4e0a\u4f46\u96be\u4ee5\u5b9e\u73b0\uff0c\u56e0\u6b64\u8bb8\u591a\u4eba\u5c06\u5176\u63cf\u8ff0\u4e3a\u751f\u7269\u5b66\u7684\u201c\u5de8\u5927\u6311\u6218\u201d\u3002\u7136\u800c\uff0c\u8fd1\u5e74\u6765\uff0c\u8ba1\u7b97\u65b9\u6cd5\u2014\u2014\u5c24\u5176\u662f\u90a3\u4e9b\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u7684\u65b9\u6cd5\u2014\u2014\u8868\u660e\u8fd9\u79cd\u5206\u6790\u662f\u53ef\u80fd\u7684\u3002\u501f\u52a9\u8fd9\u4e9b\u6280\u672f\uff0c\u4eba\u5de5\u667a\u80fd\u7cfb\u7edf\u53ef\u4ee5\u5728\u5df2\u77e5\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u6570\u636e\u96c6\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u521b\u5efa\u81ea\u5df1\u7684\u9884\u6d4b\u3002\u8bb8\u591a\u56e2\u961f\u591a\u5e74\u6765\u4e00\u76f4\u5728\u7814\u7a76\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46 DeepMind \u6df1\u539a\u7684 AI \u4eba\u624d\u5e93\u548c\u5bf9\u8ba1\u7b97\u8d44\u6e90\u7684\u8bbf\u95ee\u4f7f\u5176\u80fd\u591f\u663e\u7740\u52a0\u5feb\u8fdb\u5c55\u3002\u53bb\u5e74\uff0c\u8be5\u516c\u53f8\u53c2\u52a0\u4e86\u4e00\u9879\u540d\u4e3a CASP \u7684\u56fd\u9645\u86cb\u767d\u8d28\u6298\u53e0\u6bd4\u8d5b\uff0c\u5e76\u51fb\u8d25\u4e86\u6bd4\u8d5b\u3002\u5b83\u7684\u7ed3\u679c\u975e\u5e38\u51c6\u786e\uff0c\u4ee5\u81f3\u4e8e CASP \u7684\u8054\u5408\u521b\u59cb\u4eba\u4e4b\u4e00\u8ba1\u7b97\u751f\u7269\u5b66\u5bb6 John Moult \u8bf4\uff0c\u201c\u5728\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c[\u86cb\u767d\u8d28\u6298\u53e0] \u95ee\u9898\u5f97\u5230\u4e86\u89e3\u51b3\u3002\u201d DeepMind \u7684 AlphaFold \u7a0b\u5e8f\u81ea\u53bb\u5e74\u7684 CASP \u7ade\u8d5b\u4ee5\u6765\u5df2\u7ecf\u5347\u7ea7\uff0c\u73b0\u5728\u901f\u5ea6\u63d0\u9ad8\u4e86 16 \u500d\u3002 \u201c\u6211\u4eec\u53ef\u4ee5\u5728\u51e0\u5206\u949f\u5185\u6298\u53e0\u4e00\u4e2a\u666e\u901a\u86cb\u767d\u8d28\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u51e0\u79d2\u949f\uff0c\u201d\u54c8\u8428\u6bd4\u65af\u8bf4\u3002\u8be5\u516c\u53f8\u4e0a\u5468\u8fd8\u4ee5\u5f00\u6e90\u5f62\u5f0f\u53d1\u5e03\u4e86 AlphaFold \u7684\u5e95\u5c42\u4ee3\u7801\uff0c\u5141\u8bb8\u5176\u4ed6\u4eba\u5728\u672a\u6765\u7ee7\u7eed\u5176\u5de5\u4f5c\u3002\u96f7\u4e01\u5927\u5b66\u6559\u6388 Liam McGuffin \u5f00\u53d1\u4e86\u4e00\u4e9b\u82f1\u56fd\u9886\u5148\u7684\u86cb\u767d\u8d28\u6298\u53e0\u8f6f\u4ef6\uff0c\u4ed6\u79f0\u8d5e\u4e86 AlphaFold \u7684\u6280\u672f\u624d\u534e\uff0c\u4f46\u4e5f\u6307\u51fa\u8be5\u8ba1\u5212\u7684\u6210\u529f\u4f9d\u8d56\u4e8e\u6570\u5341\u5e74\u7684\u5148\u524d\u7814\u7a76\u548c\u516c\u5f00\u6570\u636e\u3002 \u201cDeepMind \u62e5\u6709\u5927\u91cf\u8d44\u6e90\u6765\u4fdd\u6301\u8fd9\u4e2a\u6570\u636e\u5e93\u7684\u6700\u65b0\u72b6\u6001\uff0c\u4ed6\u4eec\u6bd4\u4efb\u4f55\u4e00\u4e2a\u5b66\u672f\u56e2\u4f53\u90fd\u66f4\u6709\u80fd\u529b\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u201d\u9ea6\u9ad8\u82ac\u544a\u8bc9 The Verge\u3002 \u201c\u6211\u8ba4\u4e3a\u5b66\u8005\u4eec\u6700\u7ec8\u4f1a\u5230\u8fbe\u90a3\u91cc\uff0c\u4f46\u5b83\u4f1a\u66f4\u6162\uff0c\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u8db3\u591f\u7684\u8d44\u6e90\u3002\u201d\nThe Verge \u91c7\u8bbf\u7684\u8bb8\u591a\u79d1\u5b66\u5bb6\u90fd\u6ce8\u610f\u5230 DeepMind \u514d\u8d39\u53d1\u5e03\u8fd9\u4e9b\u6570\u636e\u7684\u6177\u6168\u3002\u6bd5\u7adf\uff0c\u8be5\u5b9e\u9a8c\u5ba4\u5f52\u8c37\u6b4c\u6bcd\u516c\u53f8 Alphabet \u6240\u6709\uff0c\u8be5\u516c\u53f8\u4e00\u76f4\u5728\u5411\u5546\u4e1a\u533b\u7597\u4fdd\u5065\u9879\u76ee\u6295\u5165\u5927\u91cf\u8d44\u6e90\u3002 DeepMind \u672c\u8eab\u6bcf\u5e74\u90fd\u4f1a\u635f\u5931\u5f88\u591a\u94b1\uff0c\u5e76\u4e14\u6709\u5f88\u591a\u62a5\u9053\u79f0\u8be5\u516c\u53f8\u4e0e\u5176\u6bcd\u516c\u53f8\u4e4b\u95f4\u5728\u7814\u7a76\u81ea\u4e3b\u6743\u548c\u5546\u4e1a\u53ef\u884c\u6027\u7b49\u95ee\u9898\u4e0a\u5b58\u5728\u7d27\u5f20\u5173\u7cfb\u3002\u4e0d\u8fc7\uff0c\u54c8\u8428\u6bd4\u65af\u544a\u8bc9 The Verge\uff0c\u8be5\u516c\u53f8\u4e00\u76f4\u8ba1\u5212\u514d\u8d39\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\uff0c\u800c\u8fd9\u6837\u505a\u662f\u5bf9 DeepMind \u521b\u59cb\u7cbe\u795e\u7684\u5b9e\u73b0\u3002\u4ed6\u5f3a\u8c03\uff0cDeepMind \u7684\u5de5\u4f5c\u5728\u8c37\u6b4c\u7684\u5f88\u591a\u5730\u65b9\u90fd\u5f97\u5230\u4e86\u4f7f\u7528\u2014\u2014\u201c\u51e0\u4e4e\u4f60\u4f7f\u7528\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u6211\u4eec\u7684\u4e00\u4e9b\u6280\u672f\u90fd\u662f\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u201d\u2014\u2014\u4f46\u8be5\u516c\u53f8\u7684\u4e3b\u8981\u76ee\u6807\u4e00\u76f4\u662f\u57fa\u7840\u7814\u7a76\u3002 \u201c\u6211\u4eec\u88ab\u6536\u8d2d\u65f6\u8fbe\u6210\u7684\u534f\u8bae\u662f\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u4e3b\u8981\u662f\u4e3a\u4e86\u63a8\u8fdb AGI \u548c AI \u6280\u672f\u7684\u53d1\u5c55\uff0c\u7136\u540e\u5229\u7528\u5b83\u6765\u52a0\u901f\u79d1\u5b66\u7a81\u7834\uff0c\u201d\u54c8\u8428\u6bd4\u65af\u8bf4\u3002 \u201c[Alphabet] \u6709\u5f88\u591a\u90e8\u95e8\u4e13\u6ce8\u4e8e\u8d5a\u94b1\uff0c\u201d\u4ed6\u8865\u5145\u9053\uff0c\u5e76\u6307\u51fa DeepMind \u5bf9\u7814\u7a76\u7684\u5173\u6ce8\u201c\u4e3a\u79d1\u5b66\u754c\u5e26\u6765\u4e86\u58f0\u671b\u548c\u5584\u610f\u65b9\u9762\u7684\u5404\u79cd\u597d\u5904\u3002\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5b9e\u73b0\u4ef7\u503c\u3002\u201d Hassabis \u9884\u6d4b AlphaFold \u662f\u672a\u6765\u7684\u6807\u5fd7\u2014\u2014\u8fd9\u4e2a\u9879\u76ee\u5c55\u793a\u4e86\u4eba\u5de5\u667a\u80fd\u5728\u5904\u7406\u4eba\u7c7b\u751f\u7269\u5b66\u7b49\u6df7\u4e71\u95ee\u9898\u65b9\u9762\u7684\u5de8\u5927\u6f5c\u529b\u3002 \u201c\u6211\u8ba4\u4e3a\u6211\u4eec\u6b63\u5904\u4e8e\u4e00\u4e2a\u975e\u5e38\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u5728\u63a5\u4e0b\u6765\u7684\u5341\u5e74\u4e2d\uff0c\u6211\u4eec\u548c AI \u9886\u57df\u7684\u5176\u4ed6\u4eba\u5e0c\u671b\u53d6\u5f97\u60ca\u4eba\u7684\u7a81\u7834\uff0c\u771f\u6b63\u52a0\u901f\u89e3\u51b3\u6211\u4eec\u5728\u5730\u7403\u4e0a\u9047\u5230\u7684\u771f\u6b63\u5927\u95ee\u9898\u3002\u201d", "note_en": "AI research lab DeepMind has created the most comprehensive map of human proteins to date using artificial intelligence. The company, a subsidiary of Google-parent Alphabet, is releasing the data for free, with some scientists comparing the potential impact of the work to that of the Human Genome Project, an international effort to map every human gene.\n Proteins are long, complex molecules that perform numerous tasks in the body, from building tissue to fighting disease. Their purpose is dictated by their structure, which folds like origami into complex and irregular shapes. Understanding how a protein folds helps explain its function, which in turn helps scientists with a range of tasks \u2014 from pursuing fundamental research on how the body works, to designing new medicines and treatments.\n  Previously, determining the structure of a protein relied on expensive and time-consuming experiments. But last year DeepMind showed it can produce  accurate predictions of a protein\u2019s structure using AI software called AlphaFold. Now, the company is releasing hundreds of thousands of predictions made by the program to the public.\n \u201cI see this as the culmination of the entire 10-year-plus lifetime of DeepMind,\u201d company CEO and co-founder Demis Hassabis told  The Verge. \u201cFrom the beginning, this is what we set out to do: to make breakthroughs in AI, test that on games like Go and Atari, [and] apply that to real-world problems, to see if we can accelerate scientific breakthroughs and use those to benefit humanity.\u201d\n   There are currently around 180,000 protein structures available in the public domain, each produced by experimental methods and accessible through the Protein Data Bank. DeepMind is releasing predictions for the structure of some 350,000 proteins across 20 different organisms, including animals like mice and fruit flies, and bacteria like  E. coli. (There is some overlap between DeepMind\u2019s data and pre-existing protein structures, but exactly how much is difficult to quantify because of the nature of the models.) Most significantly, the release includes predictions for 98 percent of all human proteins, around 20,000 different structures, which are collectively known as the human proteome. It isn\u2019t the  first public dataset of human proteins, but it is the most comprehensive and accurate.\n If they want, scientists can download the entire human proteome for themselves, says AlphaFold\u2019s technical lead John Jumper. \u201cThere is a HumanProteome.zip effectively, I think it\u2019s about 50 gigabytes in size,\u201d Jumper tells  The Verge. \u201cYou can put it on a flash drive if you want, though it wouldn\u2019t do you much good without a computer for analysis!\u201d\n  After launching this first tranche of data, DeepMind plans to keep adding to the store of proteins, which will be maintained by Europe\u2019s flagship life sciences lab, the European Molecular Biology Laboratory (EMBL). By the end of the year, DeepMind hopes to release predictions for 100 million protein structures, a dataset that will be \u201ctransformative for our understanding of how life works,\u201d according to Edith Heard, director general of the EMBL.\n The data will be free in perpetuity for both scientific and commercial researchers, says Hassabis. \u201cAnyone can use it for anything,\u201d the DeepMind CEO noted at a press briefing. \u201cThey just need to credit the people involved in the citation.\u201d\n  Understanding a protein\u2019s structure is useful for scientists across a range of fields. The information can help design new medicines, synthesize novel enzymes that break down waste materials, and create crops that are resistant to viruses or extreme weather. Already, DeepMind\u2019s protein predictions are being used  for medical research, including studying  the workings of SARS-CoV-2, the virus that causes COVID-19.\n  New data will speed these efforts, but scientists note it will still take a lot of time to turn this information into real-world results. \u201cI don\u2019t think it\u2019s going to be something that changes the way patients are treated within the year, but it will definitely have a huge impact for the scientific community,\u201d Marcelo C. Sousa, a professor at the University of Colorado\u2019s biochemistry department, told  The Verge.\n Scientists will have to get used to having such information at their fingertips, says DeepMind senior research scientist Kathryn Tunyasuvunakool. \u201cAs a biologist, I can confirm we have no playbook for looking at even 20,000 structures, so this [amount of data] is hugely unexpected,\u201d Tunyasuvunakool told  The Verge. \u201cTo be analyzing hundreds of thousands of structures \u2014 it\u2019s crazy.\u201d\n Notably, though, DeepMind\u2019s software produces  predictions of protein structures rather than experimentally determined models, which means that in some cases further work will be needed to verify the structure. DeepMind says it spent a lot of time building accuracy metrics into its AlphaFold software, which ranks how confident it is for each prediction.\n   Predictions of protein structures are still hugely useful, though. Determining a protein\u2019s structure through experimental methods is expensive, time-consuming, and relies on a lot of trial and error. That means even a low-confidence prediction can save scientists years of work by pointing them in the right direction for research.\n Helen Walden, a professor of structural biology at the University of Glasgow, tells  The Verge that DeepMind\u2019s data will \u201csignificantly ease\u201d research bottlenecks, but that \u201cthe laborious, resource-draining work of doing the biochemistry and biological evaluation of, for example, drug functions\u201d will remain.\n Sousa, who has previously used data from AlphaFold in his work, says for scientists the impact will be felt immediately. \u201cIn our collaboration we had with DeepMind, we had a dataset with a protein sample we\u2019d had for 10 years, and we\u2019d never got to the point of developing a model that fit,\u201d he says. \u201cDeepMind agreed to provide us with a structure, and they were able to solve the problem in 15 minutes after we\u2019d been sitting on it for 10 years.\u201d\n  Proteins are constructed from chains of amino acids, which come in 20 different varieties in the human body. As any individual protein can be comprised of hundreds of individual amino acids, each of which can fold and twist in different directions, it means a molecule\u2019s final structure has an incredibly large number of possible configurations. One  estimate is that the typical protein can be folded in 10^300 ways \u2014 that\u2019s a 1 followed by 300 zeroes.\n  Because proteins are too small to examine with microscopes, scientists have had to indirectly determine their structure using expensive and complicated methods like nuclear magnetic resonance and X-ray crystallography. The idea of determining the structure of a protein simply by reading a list of its constituent amino acids has been long theorized but difficult to achieve, leading many to describe it as a \u201cgrand challenge\u201d of biology.\n In recent years, though, computational methods \u2014 particularly those using artificial intelligence \u2014 have suggested such analysis is possible. With these techniques, AI systems are trained on datasets of known protein structures and use this information to create their own predictions.\n   Many groups have been working on this problem for years, but DeepMind\u2019s deep bench of AI talent and access to computing resources allowed it to accelerate progress dramatically. Last year, the company competed in an international protein-folding competition known as CASP and blew away the competition. Its results  were so accurate that computational biologist John Moult, one of CASP\u2019s co-founders, said that \u201cin some sense the problem [of protein folding] is solved.\u201d\n DeepMind\u2019s AlphaFold program has been upgraded since last year\u2019s CASP competition and is now 16 times faster. \u201cWe can fold an average protein in a matter of minutes, most cases seconds,\u201d says Hassabis. The company also  released the underlying code for AlphaFold last week as open-source, allowing others to build on its work in the future.\n Liam McGuffin, a professor at Reading University who developed some of the UK\u2019s leading protein-folding software, praised the technical brilliance of AlphaFold, but also noted that the program\u2019s success relied on decades of prior research and public data. \u201cDeepMind has vast resources to keep this database up to date and they are better placed to do this than any single academic group,\u201d McGuffin told  The Verge. \u201cI think academics would have got there in the end, but it would have been slower because we\u2019re not as well resourced.\u201d\n  Many scientists  The Verge spoke to noted the generosity of DeepMind in releasing this data for free. After all, the lab is owned by Google-parent Alphabet, which has been pouring huge amounts of resources into commercial healthcare projects. DeepMind itself  loses a lot of money each year, and there have been  numerous  reports  of tensions between the company and its parent firm over issues like research autonomy and commercial viability.\n Hassabis, though, tells  The Verge that the company always planned to make this information freely available, and that doing so is a fulfillment of DeepMind\u2019s founding ethos. He stresses that DeepMind\u2019s work is used in lots of places at Google \u2014 \u201calmost anything you use, there\u2019s some of our technology that\u2019s part of that under the hood\u201d \u2014 but that the company\u2019s primary goal has always been fundamental research.\n  \u201cThe agreement when we got acquired is that we are here primarily to advance the state of AGI and AI technologies and then use that to accelerate scientific breakthroughs,\u201d says Hassabis. \u201c[Alphabet] has plenty of divisions focused on making money,\u201d he adds, noting that DeepMind\u2019s focus on research \u201cbrings all sorts of benefits, in terms of prestige and goodwill for the scientific community. There\u2019s many ways value can be attained.\u201d\n Hassabis predicts that AlphaFold is a sign of things to come \u2014 a project that shows the huge potential of artificial intelligence to handle messy problems like human biology.\n \u201cI think we\u2019re at a really exciting moment,\u201d he says. \u201cIn the next decade, we, and others in the AI field, are hoping to produce amazing breakthroughs that will genuinely accelerate solutions to the really big problems we have here on Earth.\u201d", "posttime": "2021-07-23 00:13:15", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4eba\u5de5\u667a\u80fd,\u4eba\u7c7b,human,deepmind", "title": "DeepMind \u8868\u793a\uff0c\u5b83\u4f7f\u7528\u4eba\u5de5\u667a\u80fd\u521b\u5efa\u4e86\u4eba\u7c7b\u86cb\u767d\u8d28\u7684\u201c\u53d8\u9769\u6027\u201d\u56fe\u8c31\uff1b\u6709\u4e9b\u4eba\u5c06\u8fd9\u9879\u5de5\u4f5c\u7684\u6f5c\u5728\u5f71\u54cd\u4e0e\u4eba\u7c7b\u57fa\u56e0\u7ec4\u8ba1\u5212\u7684\u6f5c\u5728\u5f71\u54cd\u8fdb\u884c\u4e86\u6bd4\u8f83", "title_en": "DeepMind says it used AI to create a \u201ctransformative\u201d map of human proteins; some compare the potential impact of the work to that of the Human Genome Project", "transed": 1, "url": "https://www.theverge.com/2021/7/22/22586578/deepmind-alphafold-ai-protein-folding-human-proteome-released-for-free?scrolla=5eb6d68b7fedc32c19ef33b4", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u4eba\u7c7b", "human", "deepmind"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069030, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e3a\u6211\u7684\u516c\u53f8\u6784\u5efa\u7b2c\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u7ba1\u9053\u65f6\uff0c\u6211\u4e3a\u5728\u6211\u4eec\u7684\u5806\u6808\u4e2d\u5305\u542b\u54ea\u4e9b\u5efa\u6a21\u5e93\u800c\u82e6\u607c\u3002\u5927\u591a\u6570\u6a21\u578b\u5f00\u53d1\u4eba\u5458\u60f3\u8981\u4f7f\u7528\u4ec0\u4e48\uff1f\u6211\u5bf9 scikit-learn \u548c PyTorch \u6709\u5f3a\u70c8\u7684\u611f\u89c9\uff0c\u4f46\u662f\u5c06\u6211\u5bf9 ML \u6846\u67b6\u7684\u610f\u89c1\u5f3a\u52a0\u4e8e\u6211\u4eec\u516c\u53f8\u7684\u57fa\u7840\u67b6\u6784\u4f1a\u4ea7\u751f\u4ec0\u4e48\u540e\u679c\uff1f\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u54ea\u4e2a\u5efa\u6a21\u5e93\u4f1a\u201c\u83b7\u80dc\u201d\uff1f\u5982\u679c\u6211\u5728\u51e0\u5e74\u540e\u5c31\u4f1a\u8fc7\u65f6\u7684 DSL \u4e2d\u7f16\u5199\u5efa\u6a21\u4ee3\u7801\u600e\u4e48\u529e\uff1f 2016 \u5e74\uff0c\u6211\u53c2\u52a0\u4e86\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\u8bfe\u7a0b\uff0c\u6240\u6709\u4f5c\u4e1a\u90fd\u5728 Tensorflow \u4e2d\uff1b\u6211\u6700\u8fd1\u7684\u6df1\u5ea6\u5b66\u4e60\u8bfe\u7a0b\u5b8c\u5168\u662f\u5728 PyTorch \u4e2d\u8fdb\u884c\u7684\u3002\u56db\u5e74\u540e\uff0c\u6211\u8ba4\u8bc6\u7684\u6240\u6709\u673a\u5668\u5b66\u4e60\u7814\u7a76\u4eba\u5458\u4f3c\u4e4e\u90fd\u5728\u4f7f\u7528 PyTorch\u3002\u5c11\u6570\u4e0d\u4f7f\u7528 PyTorch \u7684\u4eba\u4f7f\u7528 TF 1.0\uff0c\u4ed6\u4eec\u7684\u53e3\u53f7\u662f\u201c\u603b\u6709\u4e00\u5929\u6211\u4f1a\u5207\u6362\u5230 TF 2.0 \u6216 PyTorch\u201d\u3002\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f\u51e0\u4e2a\u6708\u540e\uff0c\u6211\u610f\u8bc6\u5230\u5e93\u7684\u9009\u62e9\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u5efa\u6a21\u53ea\u662f\u673a\u5668\u5b66\u4e60\u7ba1\u9053\u4e2d\u7684\u4e00\u5c0f\u6b65\u3002\u5176\u4ed6\u6b65\u9aa4\u540c\u6837\u5177\u6709\u6311\u6218\u6027\uff0c\u5373\u4f7f\u4e0d\u662f\u66f4\u591a\uff0c\u4e5f\u96be\u4ee5\u7ef4\u62a4\uff1a\u4f8b\u5982\uff0c\u8fc1\u79fb\u6570\u636e\u7ba1\u9053\u4ee3\u7801\u6bd4\u5728 PyTorch \u4e2d\u91cd\u5199\u57fa\u672c TF \u5efa\u6a21\u4ee3\u7801\u8981\u56f0\u96be\u5f97\u591a\u3002\u6211\u5df2\u7ecf\u5728 TensorFlow\u3001PyTorch\u3001XGBoost\u3001scikit-learn \u548c LightGBM \u4e2d\u4e3a\u6211\u516c\u53f8\u7684\u4e0d\u540c\u4efb\u52a1\u7f16\u5199\u4e86\u6a21\u578b\u3002\u6211\u4ec0\u81f3\u7528 Scala \u7f16\u5199\u8fc7\u975e Python \u6a21\u578b\u3002\u5f53\u6211\u4e3a\u9884\u6d4b\u4efb\u52a1\u8fed\u4ee3\u673a\u5668\u5b66\u4e60\u7ba1\u9053\u65f6\uff0c\u6211\u4f1a\u5c3d\u53ef\u80fd\u907f\u514d\u66f4\u6539\u6a21\u578b\u67b6\u6784\uff0c\u56e0\u4e3a\u6211\u5b81\u613f\u66f4\u6539\u6211\u66f4\u597d\u7406\u89e3\u7684\u7ba1\u9053\u90e8\u5206\uff0c\u4f8b\u5982\u6570\u636e\u6444\u53d6\u548c\u66f4\u597d\u7684\u7279\u5f81\u5316\u3002\u6211\u516c\u53f8\u7684\u62c9\u53d6\u8bf7\u6c42\u8868\u660e\uff0c\u4e0e\u7ba1\u9053\u4ee3\u7801\u76f8\u6bd4\uff0c\u4eba\u4eec\u51e0\u4e4e\u4e0d\u4f1a\u63a5\u89e6\u4ed6\u4eec\u7684\u5efa\u6a21\u4ee3\u7801\u3002\u91cd\u8981\u7684\u662f\u62e5\u6709\u201c\u5373\u63d2\u5373\u7528\u201dML \u6a21\u578b\u8bad\u7ec3\u5668\u548c\u9884\u6d4b\u5668\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u56e0\u4e3a\u51e0\u4e4e\u6ca1\u6709\u4e00\u79cd\u7f16\u7a0b\u5e93\u53ef\u4ee5\u6ee1\u8db3\u6240\u6709\u9700\u6c42\u3002\u6709\u4e9b\u4eba\u4f1a\u6307\u51fa\u7814\u7a76\u4eba\u5458\u7edd\u5927\u591a\u6570\u503e\u5411\u4e8e PyTorch \u548c JAX \u7684\u8d8b\u52bf\uff0c\u5e76\u8ba4\u4e3a\u8fd9\u91cc\u7684\u8d62\u5bb6\u786e\u5b9e\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u7814\u7a76\u4eba\u5458\u53d8\u6210\u4e86\u516c\u53f8\u7684\u6570\u636e\u79d1\u5b66\u5bb6\uff0c\u8fd9\u4e9b\u6570\u636e\u79d1\u5b66\u5bb6\u6784\u5efa\u6a21\u578b\uff0c\u800c\u8fd9\u4e9b\u6a21\u578b\u5c06\u201c\u6c38\u8fdc\u201d\u751f\u4ea7\u548c\u4f7f\u7528\u3002\u4f46\u4f5c\u4e3a\u4e00\u4e2a\u9886\u57df\uff0c\u6211\u4eec\u4ecd\u5728\u52aa\u529b\u751f\u4ea7\u6a21\u578b\u3001\u5c06\u5176\u8f93\u51fa\u4e0e\u4eba\u7c7b\u6fc0\u52b1\u4fdd\u6301\u4e00\u81f4\u3001\u8fed\u4ee3\u8fd9\u4e9b\u7cfb\u7edf\u5e76\u4fe1\u4efb\u8fd9\u4e9b\u7ba1\u9053\u3002\u5bf9\u4e8e\u201c\u5927\u79d1\u6280\u201d\u4e4b\u5916\u7684\u4efb\u4f55 ML \u4ece\u4e1a\u8005\u6765\u8bf4\uff0c\u4ed6\u4eec\u6700\u5927\u7684\u95ee\u9898\u662f\u6a21\u578b\u7ba1\u9053\u4ee5\u53ca\u5ba2\u6237\u3001\u4ed6\u4eec\u81ea\u5df1\u548c\u673a\u5668\u4e4b\u95f4\u7684\u4ef7\u503c\u4e00\u81f4\u6027\u3002\u6bd5\u7adf\uff0c\u8fd9\u4e9b\u5bf9\u4e8e\u4ea7\u54c1\u5f00\u53d1\u81f3\u5173\u91cd\u8981\u3002\u5373\u4f7f\u6211\u4eec\u4e3a\u8fd9\u4e9b\u6838\u5fc3\u95ee\u9898\u6784\u5efa\u4e86\u6846\u67b6\uff0c\u5efa\u6a21\u5e93\u4ecd\u7136\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3a\u4e00\u4e2a\u95ee\u9898\u7684\u591a\u4e2a\u8f6f\u4ef6\u6846\u67b6\u53ef\u4ee5\u6109\u5feb\u5730\u5171\u5b58\u3002\u4eba\u4eec\u5f88\u806a\u660e\uff0c\u53ef\u4ee5\u8f7b\u677e\u5b66\u4e60\u4e0d\u540c\u7684\u6846\u67b6\u2014\u2014\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5728\u51e0\u5e74\u5185\u4ece TensorFlow \u5230 PyTorch \u7684\u8f6c\u53d8\u5982\u6b64\u4e4b\u5927\uff0c\u8fd9\u8bc1\u660e\u5f00\u53d1\u4eba\u5458\u4f1a\u627e\u5230\u6700\u9002\u5408\u4ed6\u4eec\u5de5\u4f5c\u7684\u5de5\u5177\u3002\u66f4\u91cd\u8981\u7684\u662f\u4ed6\u4eec\u4e3a\u4ed6\u4eec\u6784\u5efa\u7684\u8f6f\u4ef6\u62e5\u6709\u6b63\u786e\u7684\u57fa\u7840\u3002\u6b64\u5916\uff0c\u4e1a\u52a1\u8003\u8651\u53ef\u4ee5\u8986\u76d6\u6846\u67b6\u7684\u9009\u62e9\uff0c\u751a\u81f3\u6784\u5efa\u65b0\u6846\u67b6\uff0c\u5c24\u5176\u662f\u5728\u521d\u521b\u4f01\u4e1a\u4e2d\u3002\u6211\u516c\u53f8\u9488\u5bf9\u7279\u5b9a ML \u95ee\u9898\u7684\u4ee3\u7801\u5e93\u7ecf\u5386\u4e86\u8fd9\u6837\u7684\u4e8b\u60c5\uff1a\u9996\u5148\uff0c\u6211\u5728\u6211\u9009\u62e9\u7684 DSL \u4e2d\u7f16\u5199\u4e86\u5b9e\u9a8c\u4ee3\u7801\u6765\u201c\u89e3\u51b3\u201d\u95ee\u9898\u3002\u7136\u540e\u5f53\u6211\u4eec\u4e0d\u5f97\u4e0d\u6784\u5efa\u4e00\u4e2a\u4ea7\u54c1\u65f6\uff0c\u6211\u91cd\u5199\u4e86\u7ba1\u9053\u3002\u7136\u540e\uff0c\u5f53\u6211\u4eec\u7a0d\u5fae\u8c03\u6574\u4e00\u4e0b\u65f6\uff0c\u6211\u91cd\u6784\u4e86\u7ba1\u9053\u4ee5\u751f\u6210\u6211\u4eec\u4eca\u5929\u5b9a\u671f\u53d1\u5e03\u7684\u5b9e\u65f6 ML \u4ea7\u54c1\u3002\u968f\u7740\u6211\u5bf9\u4ea7\u54c1\u7684\u5f53\u524d\u7248\u672c\u4ee5\u53ca\u5176\u4ed6\u5229\u76ca\u76f8\u5173\u8005\uff08\u6280\u672f\u4eba\u5458\u6216\u975e\u6280\u672f\u4eba\u5458\uff09\u5982\u4f55\u4e0e\u5b83\u8fdb\u884c\u4ea4\u4e92\u6709\u4e86\u66f4\u6e05\u6670\u7684\u4e86\u89e3\uff0c\u6211\u610f\u8bc6\u5230\u8fd9\u4e9b\u4e1a\u52a1\u8003\u8651\u6bd4\u5efa\u6a21\u5e93\u6216\u6211\u5bf9\u5176\u4ed6 DSL \u7684\u770b\u6cd5\u66f4\u80fd\u63a8\u52a8\u7ba1\u9053\u5f00\u53d1\u3002\u56e0\u6b64\uff0c\u5efa\u6a21\u5e93\u7684\u8d5b\u9a6c\u5177\u6709\u8bef\u5bfc\u6027\uff0c\u76ee\u524d\u201c\u73b0\u5b9e\u4e16\u754c\u201dML \u4e2d\u6700\u5177\u6311\u6218\u6027\u7684\u95ee\u9898\u56f4\u7ed5\u7740\u5546\u4e1a\u4ef7\u503c\u3001\u751f\u4ea7\u5316\u3001\u5c0f\u578b\u5316\u4ee5\u53ca\u91cd\u590d\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u6d41\u6c34\u7ebf\u3002\u4f46\u7531\u4e8e\u7f16\u7a0b\u8bed\u8a00\u548c\u57fa\u7840\u8bbe\u65bd\u63a8\u52a8\u4e86\u8f6f\u4ef6\u7684\u521b\u65b0\uff0c\u5efa\u6a21\u5e93\u7684\u6f14\u53d8\u4ecd\u7136\u503c\u5f97\u601d\u8003\u3002\u5728 The Mythical Man-Month: Essays on Software Engineering \u4e2d\uff0cFred Brooks \u5f15\u5165\u4e86\u7b2c\u4e8c\u7cfb\u7edf\u6548\u5e94\u7684\u6982\u5ff5\uff0c\u5373\u201c\u5c0f\u578b\u3001\u4f18\u96c5\u548c\u6210\u529f\u7684\u7cfb\u7edf\u88ab\u8fc7\u5ea6\u8bbe\u8ba1\u7684\u3001\u81c3\u80bf\u7684\u7cfb\u7edf\u6240\u53d6\u4ee3\u7684\u8d8b\u52bf\uff0c\u7531\u4e8e\u81a8\u80c0\u671f\u671b\u548c\u8fc7\u5ea6\u81ea\u4fe1\u3002\u201d\u8457\u540d\u7684\u4f8b\u5b50\u5305\u62ec IBM System/360 \u64cd\u4f5c\u7cfb\u7edf\uff08\u5b83\u7ee7\u627f\u4e86 1950 \u5e74\u4ee3\u7684 IBM 700/7000 \u7cfb\u5217\uff09\u548c Multics \u64cd\u4f5c\u7cfb\u7edf\uff08\u5b83\u7ee7\u627f\u4e86 1960 \u5e74\u4ee3\u540e\u671f\u7684 Compatible Time-Sharing System\uff09\u3002\u6211\u8ba4\u4e3a TF 1.0 \u662f\u6210\u529f\u7684\uff1a\u5b83\u52a0\u901f\u4e86\u8bb8\u591a\u6df1\u5ea6\u5b66\u4e60\u7814\u7a76\uff0c\u8303\u56f4\u76f8\u5f53\u72ed\u7a84\u4e14\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\uff0c\u5e76\u901a\u8fc7 XLA \u7f16\u8bd1\u3001TPU \u7b49\u7387\u5148\u5728\u786c\u4ef6\u5782\u76f4\u9886\u57df\u8fdb\u884c\u521b\u65b0\u3002\u4f46\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5f53\u6570\u767e\u540d TensorFlow \u5de5\u7a0b\u5e08\u8bd5\u56fe\u89e3\u51b3\u8be5\u8f6f\u4ef6\u7684\u5c40\u9650\u6027\u5e76\u5c06 TensorFlow \u8f6c\u53d8\u4e3a\u9002\u7528\u4e8e\u6240\u6709\u4eba\u7684\u673a\u5668\u5b66\u4e60\u5e93\u65f6\uff0c\u5b83\u906d\u53d7\u4e86\u4e8c\u6b21\u7cfb\u7edf\u6548\u5e94\u5e76\u6210\u4e3a\u4e86 TF 2.0\uff0c\u4e00\u4e2a\u4e0d\u4e3a\u4efb\u4f55\u4eba\u4f7f\u7528\u7684\u673a\u5668\u5b66\u4e60\u5e93\uff08\u53ef\u80fd\u9664\u4e86 Google \uff09\u3002\u4ed6\u4eec\u8bd5\u56fe\u89e3\u51b3\u7684\u4e00\u7ec4\u95ee\u9898\u662f\u201c\u4f7f\u6a21\u578b\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5de5\u4f5c\u201d\uff1aTFX \u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\uff0c\u8bf4\u660e\u4e86\u8fc7\u5ea6\u7092\u4f5c\u548c\u672a\u5145\u5206\u5229\u7528\u7684 TF 2.0 \u5de5\u5177\u3002\u5c06 PyPI \u7edf\u8ba1\u6570\u636e\u4e0e Kubeflow \u7684\u4e0a\u4e0b\u6587\u8fdb\u884c\u6bd4\u8f83\uff1b TFX \u6784\u5efa\u4e86\u4ed6\u4eec\u7684\u6846\u67b6\u4ee5\u5f88\u597d\u5730\u9002\u5e94 Kubeflow\uff0c\u4f46 Kubeflow \u7528\u6237\u4ecd\u7136\u4e0d\u60f3\u4f7f\u7528 TFX\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u751f\u4ea7 ML \u7684\u95ee\u9898\u4e0d\u5b58\u5728\uff1b\u76f8\u53cd\uff0cTFX \u76ee\u524d\u4f3c\u4e4e\u5e76\u4e0d\u662f\u89e3\u51b3\u8bb8\u591a\u8fd9\u4e9b\u6781\u5177\u6311\u6218\u6027\u7684\u95ee\u9898\u7684\u65b9\u6cd5\u3002\u5982\u679c UX \u8fdd\u53cd\u76f4\u89c9\uff0c\u5e76\u4e14\u5de5\u7a0b\u5e08\u9700\u8981\u6210\u4e3a\u4e13\u4e1a\u7684\u9519\u8bef\u65e5\u5fd7\u89e3\u6790\u5668\u624d\u80fd\u7cbe\u901a\u8be5\u5de5\u5177\uff0c\u90a3\u4e48\u62e5\u6709\u6559\u7a0b\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\u3002\n\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u5173\u4e8e\u6211\u5bf9 TensorFlow UX \u7684\u6279\u8bc4\uff0c\u6211\u5b9e\u9645\u4e0a\u5728\u5de5\u4f5c\u4e2d\u4f7f\u7528 TF 2.0\u2014\u2014\u4e3b\u8981\u662f\u51fa\u4e8e\u61d2\u60f0\u3002 Spark \u5230 TFRecord \u5230 TFData \u5230 TF \u6a21\u578b\u7ba1\u9053\u6709\u90e8\u5206\u6587\u6863\u8bb0\u5f55\uff0c\u800c Spark \u5230 TFRecord \u5230\u67d0\u4e9b\u4e1c\u897f\u5230 PyTorch \u6a21\u578b\u7ba1\u9053\u7684\u6587\u6863\u51e0\u4e4e\u6ca1\u6709\u3002\u4f46\u662f\u6211\u7684\u6a21\u578b\u7684 DSL \u51e0\u4e4e\u4e0d\u662f\u6211\u6bcf\u5929\u90fd\u5728\u8003\u8651\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u6211\u7684\u5927\u90e8\u5206\u95ee\u9898\u90fd\u4e0d\u662f\u201c\u6211\u53ef\u4ee5\u591a\u5feb\u4ece\u5934\u5f00\u59cb\u7f16\u5199\u8f6c\u6362\u5668\u6216 convnet \u67b6\u6784\u201d\u3002\u8fd9\u4e2a\u884c\u4e1a\u7684\u4eba\u5f88\u5c11\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u4e1c\u897f\u3002\u8f6f\u4ef6\u4ea7\u54c1\u5efa\u7acb\u5728\u589e\u91cf\u539f\u5219\u4e4b\u4e0a\uff1b\u4ee3\u7801\u548c\u529f\u80fd\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u79ef\u7d2f\u3002\u6240\u4ee5\u6211\u5bf9\u6211\u6700\u521d\u7684\u95ee\u9898\u7684\u56de\u7b54\u662f\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u54ea\u4e2a\u5efa\u6a21\u5e93\u4f1a\u201c\u83b7\u80dc\u201d\u662f\u4e0d\u503c\u5f97\u62c5\u5fc3\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u591a\u4e2a\u5e93\u90fd\u505a\u4e00\u4e9b\u91cd\u8981\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u62e5\u62a4\u6570\u636e\u6d41\u8303\u5f0f\u6216\u8f7b\u677e\u7684\u81ea\u5fae\u5206\uff0c\u5b83\u4eec\u5c31\u53ef\u4ee5\u83b7\u80dc\u3002\u5982\u679c\u60a8\u662f\u5de5\u7a0b\u5e08\uff0c\u8bf7\u4e0d\u8981\u56f4\u7ed5\u7279\u5b9a\u7684\u5efa\u6a21\u5e93\u6784\u5efa\u7ba1\u9053\u3002\u5982\u679c\u60a8\u662f\u7814\u7a76\u4eba\u5458\u6216\u6570\u636e\u79d1\u5b66\u5bb6\uff0c\u5219\u4e0d\u5fc5\u62c5\u5fc3\u5b66\u4e60\u6240\u6709\u5efa\u6a21\u5e93\u6216\u516c\u53f8\u804c\u4f4d\u63cf\u8ff0\u4e2d\u63d0\u5230\u7684\u4efb\u4f55\u5e93\u3002\u8f6f\u4ef6\u5386\u53f2\u8868\u660e\uff0c\u5efa\u6a21\u6846\u67b6\u81a8\u80c0\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u53ea\u8981\u8fd9\u4e9b\u5e93\u7684\u6700\u5927\u4f18\u5148\u4e8b\u9879\u662f\u76f8\u4e92\u7ade\u4e89\uff0c\u5b83\u4eec\u5c31\u4f1a\u6536\u655b\u5230\u76f8\u540c\u7684\u5173\u952e\u4efb\u52a1\u5efa\u6a21\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u2014\u2014\u6025\u5207\u6267\u884c\u3001\u6613\u4e8e\u6784\u5efa\u4ece\u5934\u5f00\u59cb\u5efa\u6a21\uff0c\u80fd\u591f\u5f88\u597d\u5730\u67e5\u770b\u635f\u5931\u66f2\u7ebf\uff0c\u7b49\u7b49\u3002\u4f46\u8fd9\u4e9b\u53ea\u662f\u5927\u591a\u6570\u201c\u73b0\u5b9e\u4e16\u754c\u201d\u673a\u5668\u5b66\u4e60\u95ee\u9898\u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u4f5c\u4e3a\u673a\u5668\u5b66\u4e60\u4ece\u4e1a\u8005\uff0c\u5f52\u6839\u7ed3\u5e95\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a\u60a8\u5728\u8bad\u7ec3\u6a21\u578b\u65b9\u9762\u7684\u4e13\u4e1a\u77e5\u8bc6\u800c\u88ab\u8058\u7528\uff1b\u60a8\u53d7\u96c7\u4e8e\u4f7f\u673a\u5668\u5b66\u4e60\u7cfb\u7edf\u59cb\u7ec8\u5982\u4e00\u5730\u4e3a\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u4ef7\u503c\u3002\u611f\u8c22 Reese Pathak\u3001Jay Bhambhani \u548c Debnil Sur \u5bf9\u591a\u4e2a\u8349\u7a3f\u7684\u53cd\u9988\u3002", "note_en": "When building the first machine learning pipelines for my company, I agonized over which modeling libraries to include in our stack. What would most model developers want to use? I felt strongly about scikit-learn and PyTorch, but what would be the consequences of imposing my opinions on ML frameworks on our company\u2019s infrastructure? Which modeling library would \u201cwin\u201d in the long-term? What if I wrote modeling code in a DSL that would become obsolete in a few years?\n In 2016, I took an introductory deep learning class with assignments all in Tensorflow; my most recent deep learning course was completely conducted in PyTorch. Four years later,  it seems like all ML researchers I know use PyTorch. The few who don\u2019t use PyTorch use TF 1.0, with the \u201csome day I\u2019ll switch to TF 2.0 or PyTorch\u201d mantra. What happened?\n Over several months, I realized that  the choice of library does not matter, as modeling is just a tiny step in the machine learning pipeline. Other steps are equally, if not more, challenging to maintain: for example,  it is much harder to migrate data pipeline code than rewrite basic TF modeling code in PyTorch. I\u2019ve written models in TensorFlow, PyTorch, XGBoost, scikit-learn, and LightGBM for different tasks for my company. I\u2019ve even written non-Python models in Scala. When I iterate on machine learning pipelines for a prediction task, I avoid changing the model architectures as much as possible since  I\u2019d rather change parts of the pipeline I understand better, like data ingestion and better featurization. My company\u2019s pull requests show that people hardly touch their modeling code compared to pipeline code. What matters is having the infrastructure to \u201cplug and play\u201d ML model trainers and predictors, since there is almost never one programming library that meets all needs.\n Some would point to the trends of researchers overwhelmingly preferring PyTorch and JAX and argue that a winner here actually does matter, because researchers turn into data scientists at companies, these data scientists build models, and the models will get productionized and used \u201cforever.\u201d But as a field, we\u2019re still struggling with productionizing models, aligning their outputs with human incentives, iterating on these systems, and trusting these pipelines. For any ML practitioners outside \u201cbig tech,\u201d their biggest problems are model pipelines and value alignment between customers, themselves, and machines. After all, these are essential to product development. Even if we built frameworks for these central problems, the modeling library still won\u2019t matter because  multiple software frameworks for a problem can happily coexist. People are smart and can easily learn a different framework \u2014 the fact that there was such a large, rapid  transition from TensorFlow to PyTorch within a few years proves that developers will find the best tool for their job. It matters more that they have the correct foundation for software they build.\n Additionally, business considerations can override the choice of framework or even build new frameworks, particularly in startups. My company\u2019s codebase for a particular ML problem has experienced something in this vein: first, I wrote experimental code in my DSLs of choice to \u201csolve\u201d the problem. Then when we had to build a product, I  rewrote the pipeline. Then when we pivoted slightly, I  refactored the pipeline to produce the live ML product we\u2019re regularly releasing today. As I gained more clarity on the current version of the product and how other stakeholders (technical or nontechnical) might interact with it, I realized these business considerations drove pipeline development more than the modeling libraries or my opinions on other DSLs.\n So the horse race of modeling libraries is misleading, and the most challenging problems in \u201creal-world\u201d ML right now revolve around business values, productionization, miniaturization, and pipelining for repeated training and inference. But since  programming languages and infrastructure  drive innovation in software, it\u2019s still worth thinking about the evolution of modeling libraries. In  The Mythical Man-Month: Essays on Software Engineering, Fred Brooks introduces the concept of the   second-system effect to be \u201cthe tendency of small, elegant, and successful systems to be succeeded by over-engineered, bloated systems, due to inflated expectations and overconfidence.\u201d Famous examples include the IBM System/360 operating system (which succeeded the IBM 700/7000 series from the 1950s), and the Multics operating system (which succeeded Compatible Time-Sharing System from the late 1960s).\n I consider TF 1.0 a success: it accelerated a lot of deep learning research, was fairly narrow and thoughtful in scope, and spearheaded innovation in the hardware vertical with XLA compilation, TPUs, and more. But over time, as hundreds of TensorFlow engineers tried to address the software\u2019s limitations and turn TensorFlow into a machine learning library for everybody, it suffered from the second-system effect and became TF 2.0, a machine learning library for nobody (possibly except for Google). One set of problems they tried to address is \u201cmaking models work in production settings:\u201d TFX is a great example of an  overhyped and  underused TF 2.0 tool. Compare the PyPI stats with  Kubeflow\u2019s for context; TFX built their framework to fit nicely with Kubeflow and Kubeflow users still don\u2019t want to use TFX. This is not to say the problems with production ML aren\u2019t real; rather, it seems TFX currently isn\u2019t  the solution to many of these incredibly challenging problems. Having tutorials doesn\u2019t help if the  UX is counterintuitive and engineers need to become professional error log parsers to become proficient with the tool.\n All this being said about my criticism for the TensorFlow UX, I actually use TF 2.0 at work \u2014 mainly out of laziness. The Spark to TFRecord to TFData to TF model pipeline is  partially  documented, whereas the Spark to TFRecord to something to PyTorch model pipeline is only  barely  documented. But the DSL for my models is hardly something I think about on a day-to-day basis, since most of my problems aren\u2019t \u201chow quickly can I code up a transformer or convnet architecture from scratch.\u201d People in this industry rarely build things from scratch. Software products are built on the  principle of incrementality; code and features accumulate over time.\n So my answer to my original question is that it\u2019s not worth worrying about which modeling library will \u201cwin\u201d in the long run, because  multiple libraries can win if they each do something important, such as championing the dataflow paradigm or easy autodifferentiation. If you\u2019re an engineer, don\u2019t build your pipelines around a specific modeling library. If you\u2019re a researcher or data scientist, don\u2019t worry about learning all the modeling libraries or whatever libraries the company\u2019s job description mentions. Software history indicates that the modeling framework bloat is inevitable, and for as long as these libraries\u2019 biggest priorities are to compete with each other, they will all converge to the same solutions to mission-critical modeling problems \u2014  eager execution, ease of  building a model from scratch, ability to  nicely view loss curves, and more. But these are only a fraction of most \u201creal-world\u201d machine learning problems, and you, as a machine learning practitioner, at the end of the day aren\u2019t hired only for your expertise in training a model once; you\u2019re hired to make a machine learning system consistently deliver value to an end user.\n Thanks to  Reese Pathak,  Jay Bhambhani and  Debnil Sur for their feedback on multiple drafts.", "posttime": "2021-07-23 00:12:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5efa\u6a21,libraries,\u6a21\u578b", "title": "\u5efa\u6a21\u5e93\u65e0\u5173\u7d27\u8981", "title_en": "Modeling Libraries Don\u2019t Matter", "transed": 1, "url": "https://www.shreya-shankar.com/modeling-libraries/", "via": "", "real_tags": ["\u5efa\u6a21", "libraries", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "3cf55c86c34fd37ca687a21662fa1c30.jpg", "infoid": 1069029, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ed6\u7761\u7720\u4e0d\u8db3\uff0c\u51e0\u4e4e\u6ca1\u6709\u5f39\u836f\uff0c\u72ec\u81ea\u5728\u963f\u62c9\u65af\u52a0\u7684\u8352\u91ce\u4e2d\u3002\u55ef\uff0c\u5e76\u4e0d\u5b64\u5355\u3002\u51e0\u5929\u524d\uff0c\u5728\u8bfa\u59c6\u90ca\u5916\u7ea6 40 \u82f1\u91cc\u7684\u4e00\u4e2a\u91c7\u77ff\u8425\u5730\uff0c\u8fd9\u540d\u7537\u5b50\u8fde\u7eed\u51e0\u4e2a\u665a\u4e0a\u62b5\u5fa1\u4e86\u4e00\u53ea\u7070\u718a\u987d\u5f3a\u7684\u8fdb\u653b\u3002\u76f4\u5347\u673a\u7684\u98de\u884c\u5458\u8bf4\uff0c\u5728\u5468\u4e94\u6267\u884c\u4efb\u52a1\u7684\u9014\u4e2d\uff0c\u6d77\u5cb8\u8b66\u536b\u961f\u76f4\u5347\u673a\u7684\u673a\u7ec4\u4eba\u5458\u770b\u5230\u8fd9\u540d\u7537\u5b50\u5728\u7a7a\u4e2d\u6325\u821e\u53cc\u624b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e7f\u4e3a\u4eba\u77e5\u7684\u6c42\u6551\u4fe1\u53f7\u3002\u5728\u4e00\u95f4\u5c0f\u5c4b\u7684\u94c1\u76ae\u5c4b\u9876\u4e0a\uff0c\u6f66\u8349\u5730\u5199\u7740\u201c\u6c42\u6551\u201d\u548c\u201c\u6551\u6551\u6211\u201d\u3002\u5c0f\u5c4b\u7684\u95e8\u88ab\u626f\u6389\u4e86\u3002\u636e\u6d77\u5cb8\u8b66\u536b\u961f\u79f0\uff0c\u8239\u5458\u5c06\u8fd9\u540d\u7537\u5b50\u5e26\u5230\u8bfa\u59c6\u63a5\u53d7\u6cbb\u7597\uff0c\u56e0\u4e3a\u4ed6\u7684\u8eaf\u5e72\u548c\u817f\u90e8\u53d7\u4f24\u6ca1\u6709\u751f\u547d\u5371\u9669\u3002\u5c31\u8fd9\u6837\u7ed3\u675f\u4e86\u957f\u8fbe\u4e00\u5468\u7684\u78e8\u96be\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u201c\u4ea1\u9b42\u201d\u7684\u7eed\u96c6\uff0c\u5176\u4e2d\u83b1\u6602\u7eb3\u591a\u00b7\u8fea\u5361\u666e\u91cc\u5965\u88ab\u8ba1\u7b97\u673a\u751f\u6210\u7684\u7070\u718a\u6bb4\u6253\u3002 \u201c\u5728\u67d0\u4e2a\u65f6\u5019\uff0c\u4e00\u53ea\u718a\u628a\u4ed6\u62d6\u5230\u4e86\u6cb3\u8fb9\uff0c\u201d\u4e2d\u5c06\u3002\u6d77\u5cb8\u8b66\u536b\u961f\u76f4\u5347\u673a\u7684\u98de\u884c\u5458\u4e4b\u4e00\u8d3e\u91cc\u5fb7\u00b7\u5361\u5df4\u54c8\u5c14 (Jared Carbajal) \u5728\u5468\u4e09\u63a5\u53d7\u91c7\u8bbf\u65f6\u8bf4\u3002 \u201c\u4ed6\u6709\u4e00\u628a\u624b\u67aa\u3002\u4ed6\u8bf4\u90a3\u53ea\u718a\u6bcf\u665a\u90fd\u56de\u6765\uff0c\u4ed6\u5df2\u7ecf\u51e0\u5929\u6ca1\u7761\u4e86\u3002\u201d\u6d77\u5cb8\u8b66\u536b\u961f\u6ca1\u6709\u786e\u5b9a\u8fd9\u540d\u7537\u5b50\u7684\u8eab\u4efd\uff0c\u6551\u63f4\u4eba\u5458\u8bf4\u4ed6 50 \u591a\u5c81\u6216 60 \u5c81\u51fa\u5934\uff0c\u81ea 7 \u6708 12 \u65e5\u4ee5\u6765\u4e00\u76f4\u4f4f\u5728\u5c0f\u5c4b\u91cc\uff0c\u56e0\u4e3a\u5c0f\u89c4\u6a21\u91c7\u77ff\u7d22\u8d54\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u8fd9\u540d\u7537\u5b50\u662f\u5982\u4f55\u5230\u8fbe\u504f\u8fdc\u8425\u5730\u7684\uff0c\u8be5\u8425\u5730\u6ca1\u6709\u624b\u673a\u670d\u52a1\uff0c\u4f4d\u4e8e\u6cb3\u6d41\u6d41\u57df\u3002 Carbajal \u6307\u6325\u5b98\u8bf4\uff0c\u6d77\u5cb8\u8b66\u536b\u961f MH-60 Jayhawk \u76f4\u5347\u673a\u6539\u53d8\u4e86\u5927\u7ea6\u4e00\u82f1\u91cc\u7684\u822a\u5411\uff0c\u4ee5\u907f\u5f00\u4e00\u4e9b\u4e91\u5f69\uff0c\u5f53\u65f6\u4ed6\u7684\u526f\u9a7e\u9a76\u6ce8\u610f\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\n\u201c\u4ed6\u8bf4\uff0c&#39;\u563f\uff0c\u4e0b\u9762\u6709\u4e2a\u4eba\u5728\u5411\u6211\u4eec\u6325\u624b\uff0c&#39;\u201d\u6307\u6325\u5b98 Carbajal \u8bf4\u3002 \u201c\u6211\u8bf4\uff0c&#39;\u4ed6\u662f\u7528\u4e00\u53ea\u624b\u6325\u624b\u8fd8\u662f\u7528\u4e24\u53ea\u624b\u6325\u624b\uff1f&#39;\u201d \u201c\u6211\u8bf4\u5f97\u5f88\u597d\uff0c\u8fd9\u901a\u5e38\u662f\u4e00\u79cd\u75db\u82e6\u7684\u8868\u73b0\uff0c\u201d\u98de\u884c\u5458\u56de\u5fc6\u8bf4\uff0c\u4ed6\u544a\u8bc9\u4e86\u76f4\u5347\u673a\u7684\u5176\u4ed6\u4e09\u540d\u673a\u7ec4\u4eba\u5458\u3002 35 \u5c81\u7684\u526f\u9a7e\u9a76 jg AJ Hammac \u4e2d\u5c09\u5728\u5468\u4e09\u63a5\u53d7\u91c7\u8bbf\u65f6\u8bf4\uff0c\u4ed6\u770b\u5230\u8fd9\u540d\u7537\u5b50\u8dcc\u8dcc\u649e\u649e\u5730\u8d70\u51fa\u4e86\u4ed6\u7684\u5c0f\u5c4b\u3002\u8fd9\u5bf9\u4ed6\u6765\u8bf4\u662f\u4e00\u4e2a\u5947\u602a\u7684\u666f\u8c61\u3002\u54c8\u9a6c\u514b\u4e2d\u5c09\u9a7b\u624e\u5728\u9a6c\u8428\u8bf8\u585e\u5dde\u7684\u79d1\u5fb7\u89d2\uff0c\u6b63\u5728\u963f\u62c9\u65af\u52a0\u4e3a\u6d77\u5cb8\u8b66\u536b\u961f\u6548\u529b\u4e24\u5468\u3002 \u201c\u6211\u4eec\u771f\u7684\u4e0d\u4f1a\u5728\u504f\u50fb\u7684\u5730\u65b9\u9047\u5230\u4eba\uff0c\u201d\u54c8\u9a6c\u514b\u4e2d\u5c09\u8bf4\u3002 \u201c\u4ed6\u6709\u70b9\u6323\u624e\u3002\u5f53\u6211\u4eec\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u4ed6\u6b63\u624b\u548c\u819d\u76d6\u6325\u821e\u7740\u4e00\u9762\u767d\u65d7\u3002\u201d \u201c\u4ed6\u770b\u8d77\u6765\u80af\u5b9a\u662f\u5728\u5916\u9762\u5446\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u201d\u4ed6\u8bf4\u3002\u963f\u62c9\u65af\u52a0\u6e14\u730e\u90e8\u53d1\u8a00\u4eba\u91cc\u514b\u683c\u6797\u5468\u4e09\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u8868\u793a\uff0c\u5728\u8be5\u7537\u5b50\u83b7\u6551\u7684\u5730\u533a\uff0c\u7070\u718a\u5f88\u666e\u904d\uff0c\u5c24\u5176\u662f\u5728\u6bcf\u5e74\u7684\u8fd9\u4e2a\u65f6\u5019\u3002\u8be5\u90e8\u95e8\u6ca1\u6709\u5173\u4e8e\u8fd9\u6b21\u88ad\u51fb\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u4e5f\u6ca1\u6709\u8bf4\u660e\u662f\u5426\u6b63\u5728\u8c03\u67e5\u8fd9\u6b21\u906d\u9047\u3002\u6839\u636e\u963f\u62c9\u65af\u52a0\u536b\u751f\u5b98\u5458 2019 \u5e74\u7684\u4e00\u4efd\u62a5\u544a\uff0c\u5728 2000 \u5e74\u81f3 2017 \u5e74\u671f\u95f4\uff0c\u8be5\u5dde\u6709 68 \u4eba\u56e0\u5728 66 \u6b21\u718a\u88ad\u51fb\u4e2d\u53d7\u4f24\u800c\u4f4f\u9662\u3002\u5728\u6b64\u671f\u95f4\uff0c\u6709 10 \u4eba\u56e0\u718a\u88ad\u51fb\u800c\u6b7b\u4ea1\u3002\n\u963f\u62c9\u65af\u52a0\u6d77\u5cb8\u8b66\u536b\u961f\u53d1\u8a00\u4eba\u4e00\u7b49\u58eb\u5b98\u963f\u91cc\u5e03\u83b1\u514b\u672c\u5468\u4e09\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u4e00\u4e2a\u4eba\u591a\u6b21\u9047\u5230\u540c\u4e00\u53ea\u718a\u662f\u4e0d\u5bfb\u5e38\u7684\u3002\u5979\u8bf4\uff0c\u8fd9\u540d\u7537\u5b50\u7684\u60c5\u51b5\u53d8\u5f97\u8d8a\u6765\u8d8a\u5371\u6025\u3002 \u201c\u4ed6\u53ea\u5269\u4e0b\u4e24\u53d1\u5b50\u5f39\u4e86\uff0c\u201d\u5979\u8c08\u5230\u4ed6\u7684\u5f39\u836f\u65f6\u8bf4\u3002 \u201c\u6211\u60f3\u4f60\u8fd9\u4e48\u4e45\u4e0d\u7761\u89c9\u4f1a\u6709\u70b9\u53d1\u75af\u3002\u201d\u636e\u6d77\u5cb8\u8b66\u536b\u961f\u79f0\uff0c\u8fd9\u6b21\u906d\u9047\u63d0\u9192\u4eba\u4eec\u643a\u5e26\u7d27\u6025\u4fe1\u6807\u3001\u536b\u661f\u7535\u8bdd\u6216\u77ed\u4fe1\u8bbe\u5907\u7684\u91cd\u8981\u6027\u3002 37 \u5c81\u7684 Carbajal \u6307\u6325\u5b98\u81ea 2009 \u5e74\u4ee5\u6765\u4e00\u76f4\u662f\u6d77\u5cb8\u8b66\u536b\u961f\u7684\u98de\u884c\u5458\uff0c\u4ed6\u8bf4\u4ed6\u4ee5\u524d\u4ece\u672a\u88ab\u9700\u8981\u8425\u6551\u7684\u4eba\u6807\u8bb0\u8fc7\u3002\u6551\u63f4\u4eba\u5458\u82b1\u4e86\u5927\u7ea6 15 \u5206\u949f\u624d\u5c06\u8fd9\u540d\u7537\u5b50\u5e26\u5230\u8bfa\u59c6\uff0c\u4ed6\u8bf4\uff0c\u5728\u90a3\u91cc\uff0c\u8fd9\u540d\u7537\u5b50\u575a\u6301\u8981\u81ea\u5df1\u8d70\u5230\u4e00\u8f86\u7b49\u5019\u7684\u6551\u62a4\u8f66\u4e0a\u3002 \u201c\u6211\u60f3\uff0c\u4f60\u53ef\u4ee5\u770b\u51fa\u4ed6\u7684\u80be\u4e0a\u817a\u7d20\u5f00\u59cb\u4e0b\u964d\uff0c\u5e76\u5f00\u59cb\u610f\u8bc6\u5230\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u4ed6\u4e0d\u60f3\u8fdb\u5165\u8f6e\u5e8a\u3002\u201d\u6d77\u5cb8\u8b66\u536b\u961f\u7684\u76f4\u5347\u673a\u4e00\u76f4\u4ece\u79d1\u7b56\u5e03\u98de\u5f80\u8bfa\u59c6\uff0c\u7b2c\u4e8c\u5929\u673a\u7ec4\u4eba\u5458\u88ab\u6d3e\u53bb\u9a7e\u9a76\u4e00\u7ec4\u79d1\u5b66\u5bb6\u5728\u6d77\u5cb8\u7ebf\u4e0a\u641c\u5bfb\u6b7b\u9cb8\u3001\u6d77\u8c61\u548c\u6d77\u8c79\u3002 \u201c\u5982\u679c\u6211\u4eec\u5728\u4e0b\u4e00\u4e2a\u6cb3\u8c37\u90a3\u8fb9\uff0c\u201d\u5361\u5df4\u54c8\u5c14\u6307\u6325\u5b98\u8bf4\uff0c\u201c\u6211\u4eec\u4f1a\u5b8c\u5168\u60f3\u5ff5\u4ed6\u3002\u201d", "note_en": "He was sleep-deprived and nearly out of ammunition, alone in the wilderness of Alaska. Well, not really alone.\n For several nights in a row, the man had fended off the tenacious advances of a grizzly bear that had attacked him a few days earlier at a mining camp some 40 miles outside Nome.\n  En route to a mission on Friday, the crew of a Coast Guard helicopter saw the man waving both hands in the air, a widely recognized distress signal, the helicopter\u2019s pilot said. On the tin roof of a shack, SOS and \u201chelp me\u201d had been scrawled. The shack\u2019s door had been ripped off.\n The crew took the man to Nome to be treated for bruises to his torso and a leg injury that was not life-threatening, according to the Coast Guard. So ended a weeklong ordeal that could pass as a sequel to \u201cThe Revenant,\u201d in which Leonardo DiCaprio was mauled by a  computer-generated grizzly bear.\n \u201cAt some point, a bear had dragged him down to the river,\u201d Lt. Cmdr. Jared Carbajal, one of the pilots of the Coast Guard helicopter, said in an interview on Wednesday. \u201cHe had a pistol. He said that the bear kept coming back every night and he hadn\u2019t slept in a few days.\u201d\n The Coast Guard did not identify the man, who rescuers said was in his late 50s or early 60s and had been staying in the shack since July 12 on the small mining claim. It was not clear how the man had reached the remote camp, which has no cellphone service and is in a river drainage area.\n Commander Carbajal said that the Coast Guard MH-60 Jayhawk helicopter had changed its course by about a mile to avoid some clouds when something caught the eye of his co-pilot.\n \u201cHe said, \u2018Hey there\u2019s a guy down there and he\u2019s waving at us,\u2019\u201d Commander Carbajal said. \u201cI said, \u2018Is he waving with one hand or two hands?\u2019\u201d\n  \u201cI said well, that\u2019s usually a sign of distress,\u201d the pilot recalled telling the helicopter\u2019s three other crew members.\n Lt. j.g. A.J. Hammac, the 35-year-old co-pilot, said in an interview on Wednesday that he saw the man stumble out of his shack. It was a curious sight for him. Lieutenant Hammac is based on Cape Cod in Massachusetts and is spending two weeks in Alaska for the Coast Guard.\n \u201cWe don\u2019t really come across people in the middle of nowhere,\u201d Lieutenant Hammac said. \u201cHe was kind of struggling. When we came around, he was on his hands and knees waving a white flag.\u201d\n  \u201cHe definitely looked like he had been out there for a while,\u201d he said.\n Rick Green, a spokesman for the Alaska Department of Fish and Game, said in an email on Wednesday that grizzly bears were prevalent in the area that the man had been rescued from, particularly during this time of year. The department did not have additional information about the attack or say whether it was investigating the encounter.\n According to a 2019 report by Alaskan health officials, 68 people in the state were hospitalized for injuries sustained in 66 bear attacks from 2000 to 2017. Ten people died as a result of bear attacks during that period.\n Petty Officer First Class Ali Blackburn, a spokeswoman for the Coast Guard in Alaska, said in an interview on Wednesday that it was unusual for a person to have several encounters with the same bear. She said the man\u2019s situation had become increasingly dire.\n \u201cHe only had two rounds left,\u201d she said of his ammunition. \u201cI\u2019d imagine you\u2019d be a little loopy after not sleeping for so long.\u201d\n The encounter served as a reminder of the importance of carrying an emergency beacon or satellite phone or texting device, according to the Coast Guard.\n Commander Carbajal, 37, a Coast Guard pilot since 2009, said he had never been flagged down before by someone who needed to be rescued. It took about 15 minutes for the rescuers to fly the man to Nome, where, he said, the man insisted on walking himself to a waiting ambulance.\n \u201cYou could tell he was starting to come off of the adrenaline, I think, and started to realize what happened,\u201d he said. \u201cHe did not want to get in the gurney.\u201d\n The Coast Guard helicopter had been flying from Kotzebue to Nome, where the crew had been assigned the next day to fly a team of scientists to search the coastline for dead whales, walruses and seals.\n \u201cIf we would have been in the next river valley over,\u201d Commander Carbajal said, \u201cwe would have totally missed him.\u201d", "posttime": "2021-07-23 00:12:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u770b\u5230,guard", "title": "\u4e00\u53ea\u7070\u718a\u5728\u963f\u62c9\u65af\u52a0\u6050\u5413\u4e86\u4e00\u4e2a\u4eba\u597d\u51e0\u5929\u3002\u6d77\u5cb8\u8b66\u536b\u961f\u770b\u5230\u4e86\u4ed6\u7684 SOS", "title_en": "A Grizzly Bear Terrorized a Man for Days in Alaska. The Coast Guard Saw His SOS", "transed": 1, "url": "https://www.nytimes.com/2021/07/22/us/bear-attack-alaska.html", "via": "", "real_tags": ["\u770b\u5230", "guard"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069028, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u5e74\u590f\u5929\uff0c\u6211\u4e00\u76f4\u5728\u53c2\u52a0 SLICED \u673a\u5668\u5b66\u4e60\u7ade\u8d5b\uff0c\u53c2\u8d5b\u8005\u6709\u4e24\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u6765\u6253\u5f00\u65b0\u6570\u636e\u96c6\u3001\u6784\u5efa\u9884\u6d4b\u6a21\u578b\u5e76\u4f5c\u4e3a Kaggle \u63d0\u4ea4\u8fdb\u884c\u8bc4\u5206\u3002\u53c2\u8d5b\u8005\u4e3b\u8981\u6839\u636e\u6a21\u578b\u8868\u73b0\u8fdb\u884c\u8bc4\u5206\uff0c\u4f46\u4e5f\u4f1a\u901a\u8fc7\u53ef\u89c6\u5316\u548c\u8bb2\u6545\u4e8b\u4ee5\u53ca\u89c2\u4f17\u6295\u7968\u83b7\u5f97\u5206\u6570\u3002\u5728 SLICED \u4e4b\u524d\uff0c\u6211\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u7ade\u4e89\u6027\u673a\u5668\u5b66\u4e60\u7684\u7ecf\u9a8c\uff0c\u6240\u4ee5\u6211\u5b66\u5230\u4e86\u5f88\u591a\uff01\u5230\u4eca\u5929\u4e3a\u6b62\uff0c\u6211\u5728\u79ef\u5206\u699c\u4e0a\u6392\u540d\u7b2c 5\uff0c\u79bb\u5b63\u540e\u8d5b\u7684\u622a\u6b62\u65e5\u671f\u8fd8\u5dee\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u60f3\u770b\u5230\u6211\u7ee7\u7eed\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u6295\u7968\u7ed9\u6211\u4f5c\u4e3a\u201c\u89c2\u4f17\u9009\u62e9\u201d\uff01 \uff08\u867d\u7136\u6211\u6700\u559c\u6b22\u7684\u6bd4\u8d5b\u4e4b\u4e00\u662f\u89c2\u4f17\u53ef\u4ee5\u4e0e Kaggle \u63d0\u4ea4\u7684\u4f5c\u54c1\u4e00\u8d77\u7ade\u4e89\uff0c\u6240\u4ee5\u6211\u5e0c\u671b\u6211\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u52a0\u5165\uff01\uff09\u5bf9\u4e8e SLICED \u7684\u56db\u96c6\uff08\u5305\u62ec\u6211\u53c2\u52a0\u6bd4\u8d5b\u7684\u4e24\u5468\uff09\u6211\u5206\u4eab\u4e86\u6211\u7684\u8fc7\u7a0b\u7684\u622a\u5c4f\u89c6\u9891\u3002\u7b2c 4 \u96c6\u548c\u7b2c 7 \u96c6\u662f\u6211\u73b0\u573a\u6bd4\u8d5b\u7684\u90a3\u4e9b\uff08\u4f60\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u4ee3\u7801\uff09\uff1a\u5982\u679c\u4f60\u53ea\u770b\u4e00\u96c6\uff0c\u6211\u63a8\u8350 AirBnb\uff0c\u8fd9\u592a\u68d2\u4e86\uff01 \uff08\u8fd9\u5f88\u5bb9\u6613\u6210\u4e3a\u6211\u6700\u559c\u6b22\u7684\u6bd4\u8d5b\u6570\u636e\u96c6\uff0c\u6df7\u5408\u4e86\u6587\u672c\u3001\u5730\u7406\u548c\u5206\u7c7b\u6570\u636e\u2014\u2014\u5c3d\u7ba1\u7b2c 1 \u96c6\u548c\u7b2c 8 \u96c6\u4e5f\u5f88\u4ee4\u4eba\u6109\u5feb\uff09\u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u5206\u4eab\u6211\u5728\u4f7f\u7528 R \u548c tidymodels \u5305\u96c6\u5408\u8fdb\u884c\u7ade\u4e89\u6027 Kaggle \u5efa\u6a21\u65f6\u5b66\u5230\u7684\u4e00\u4e9b\u77e5\u8bc6\u3002\u591a\u5e74\u6765\uff0cPython \u5728\u673a\u5668\u5b66\u4e60\u5de5\u5177\u65b9\u9762\u5177\u6709\u7a33\u56fa\u7684\u4f18\u52bf\uff08scikit-learn \u53ea\u662f\u70b8\u836f\uff09\uff0c\u4f46 R \u4e00\u76f4\u5728\u5feb\u901f\u8ffd\u8d76\u3002 RStudio \u7684 tidyverse \u56e2\u961f\u4e00\u76f4\u5728\u5f00\u53d1 tidymodels \u8f6f\u4ef6\u5305\u5957\u4ef6\uff0c\u4ee5\u4fbf\u4e0e tidyverse \u5de5\u5177\u914d\u5408\u4f7f\u7528\u3002\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u771f\u6b63\u83b7\u5f97\u4e0e\u4ed6\u4eec\u7684\u6df1\u5165\u4f53\u9a8c\uff0c\u6211\u5c06\u5206\u4eab\u6211\u559c\u6b22\uff08\u548c\u4e0d\u559c\u6b22\uff09\u7684\u5185\u5bb9\u3002\u4e0e\u201c\u6210\u529f\u4e4b\u5dc5\u201d\u6216\u201c\u5384\u8fd0\u4e4b\u5751\u201d\u76f8\u53cd\uff0c\u201c\u6210\u529f\u4e4b\u5751\u201d\u662f\u8fd9\u6837\u4e00\u79cd\u54f2\u5b66\uff0c\u5373\u7528\u6237\u4e0d\u5e94\u8be5\u4e3a\u4e86\u505a\u6b63\u786e\u7684\u4e8b\u800c\u52aa\u529b\u594b\u6597\u3002\u4ed6\u4eec\u5e94\u8be5\u80fd\u591f\u51e0\u4e4e\u5076\u7136\u5730\u517b\u6210\u826f\u597d\u7684\u4e60\u60ef\uff0c\u56e0\u4e3a\u8fd9\u6bd4\u9519\u8bef\u5730\u4f7f\u7528\u5b83\u4eec\u66f4\u5bb9\u6613\u3002\n\u5728\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u9677\u5165\u5f88\u591a\u9677\u9631\uff0c\u800c tidymodels \u5305\u65e8\u5728\u907f\u514d\u90a3\u4e9b\u201c\u4e0d\u5047\u601d\u7d22\u201d\u7684\u9677\u9631\u3002\u6211\u8ba4\u4e3a\u6700\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u662f\u5728\u6570\u636e\u6e05\u7406\u8fc7\u7a0b\u4e2d\u907f\u514d\u6570\u636e\u6cc4\u6f0f\u3002\u5728\u62df\u5408\u6a21\u578b\u4e4b\u524d\uff0c\u60f3\u60f3\u6211\u4eec\u53ef\u80fd\u5bf9\u6570\u636e\u96c6\u5e94\u7528\u7684\u8bb8\u591a\u7279\u5f81\u5de5\u7a0b\u6b65\u9aa4\u4e2d\u7684\u4e00\u4e9b\uff1a \u5206\u6876\u7a00\u6709\u7c7b\u522b\uff08\u4f8b\u5982\uff0c\u7528\u201c\u5176\u4ed6\u201d\u66ff\u6362\u5206\u7c7b\u53d8\u91cf\u7684\u7a00\u6709\u7ea7\u522b\uff09 recipes \u5305\u63d0\u4f9b\u4e86\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u7684\u51fd\u6570\uff08\u4f8b\u5982 step_impute_mean \u3001step_pca \u548c step_other\uff09\uff0c\u4f46\u8fd9\u53ea\u662f\u5176\u4ef7\u503c\u7684\u4e00\u90e8\u5206\u3002\u914d\u65b9\u5305\u7684\u7edd\u5999\u89c1\u89e3\u662f\uff0c\u6bcf\u4e2a\u7279\u5f81\u5de5\u7a0b\u6b65\u9aa4\u672c\u8eab\u90fd\u662f\u4e00\u4e2a\u9700\u8981\u8bad\u7ec3\u7684\u6a21\u578b\uff01\u5982\u679c\u5728\u7528\u5e73\u5747\u503c\u4f30\u7b97\u503c\u65f6\u5305\u542b\u6d4b\u8bd5\u96c6\uff0c\u6216\u8005\u5728\u5e94\u7528 PCA \u65f6\uff0c\u60a8\u4f1a\u4e0d\u5c0f\u5fc3\u8f93\u5165\u6765\u81ea\u6d4b\u8bd5\u96c6\u7684\u4fe1\u606f\uff08\u8fd9\u4f7f\u60a8\u66f4\u6709\u53ef\u80fd\u8fc7\u5ea6\u62df\u5408\u800c\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\uff09\u3002 recipes \u5305\u660e\u786e\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9\uff1a\u5728\u5c06\u914d\u65b9\u5e94\u7528\u4e8e\u6570\u636e\u96c6\uff08\u4f7f\u7528 bake()\uff09\u4e4b\u524d\uff0c\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u6570\u636e\u8bad\u7ec3\uff08\u4f7f\u7528 prep()\uff09\u3002\u901a\u8fc7\u5c06\u6b64\u914d\u65b9\u4e0e\u6a21\u578b\u89c4\u8303\u7ed3\u5408\u5230\u5de5\u4f5c\u6d41\u5bf9\u8c61\u4e2d\uff0c\u60a8\u53ef\u4ee5\u5c01\u88c5\u7279\u5f81\u5de5\u7a0b\u548c\u5efa\u6a21\u7684\u6574\u4e2a\u4ece\u5934\u5230\u5c3e\u7684\u8fc7\u7a0b\u3002\u5176\u4ed6 tidymodels \u5de5\u5177\u7136\u540e\u5229\u7528\u8fd9\u4e2a\u5c01\u88c5\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\u6211\u53d1\u73b0\u5176\u4ed6\u6bcf\u4e2a\u5305\u4e5f\u5728 tidymodels \u7684\u201c\u6210\u529f\u5751\u201d\u4e2d\u53d1\u6325\u4f5c\u7528\u3002\u4f8b\u5982\uff1a\u4ea4\u53c9\u9a8c\u8bc1\uff08rsamples\uff09\uff1a\u4ea4\u53c9\u9a8c\u8bc1\u662f\u907f\u514d\u8fc7\u5ea6\u62df\u5408\u7684\u5173\u952e\u65b9\u6cd5\u4e4b\u4e00\uff0c\u5c24\u5176\u662f\u5728\u9009\u62e9\u6a21\u578b\u548c\u9009\u62e9\u8d85\u53c2\u6570\u65f6\u3002 vfold_cv \u548c fit_resamples \u4f7f\u5b83\u53d8\u5f97\u5bb9\u6613\u3002\n\u8c03\u6574\u8d85\u53c2\u6570 (tune)\uff1a tune_grid \u4f7f\u5f97\u6307\u5b9a\u8d85\u53c2\u6570\u7ec4\u5408\u53d8\u5f97\u5fae\u4e0d\u8db3\u9053\uff0c\u770b\u770b\u6027\u80fd\u5982\u4f55\u53d8\u5316\u3002 autoplot() \u5c24\u5176\u5177\u6709\u771f\u6b63\u7684\u201c\u5f00\u7bb1\u5373\u7528\u201d\u7684\u611f\u89c9\u3002\u5c1d\u8bd5\u4e0d\u540c\u7684\u6a21\u578b\uff08\u6b27\u6d32\u9632\u98ce\u8349\uff09\uff1a\u6211\u771f\u7684\u5f88\u559c\u6b22\u4e0d\u5fc5\u5904\u7406\u6bcf\u4e2a\u5efa\u6a21\u5305\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u6027\uff1b\u66f4\u5c11\u7684\u65f6\u95f4\u9605\u8bfb\u6587\u6863\u610f\u5473\u7740\u66f4\u591a\u7684\u65f6\u95f4\u4e13\u6ce8\u4e8e\u6211\u7684\u6a21\u578b\u548c\u6570\u636e\u3002\u6587\u672c\u5206\u7c7b\uff08textrecipes\uff09\uff1a\u8fd9\u5728\u6211\u5fc3\u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u4f4d\u7f6e\u3002\u6211\u5e2e\u52a9\u5f00\u53d1\u4e86 tidytext \u5305\uff0c\u4f46\u6211\u4ece\u6765\u6ca1\u6709\u5bf9\u5b83\u5982\u4f55\u878d\u5165\u673a\u5668\u5b66\u4e60\u5de5\u4f5c\u6d41\u7a0b\u611f\u5230\u975e\u5e38\u5174\u594b\u3002\u901a\u8fc7\u63d0\u4f9b\u6807\u8bb0\u5316\u548c\u8fc7\u6ee4\u5de5\u5177\uff0ctextrecipes \u5305\u5c06\u6587\u672c\u53d8\u6210\u4e86\u53e6\u4e00\u79cd\u7c7b\u578b\u7684\u9884\u6d4b\u5668\u3002\u8fd9\u4e9b\u4fbf\u5229\u4e0d\u4ec5\u4ec5\u662f\u8282\u7701\u7cbe\u529b\u6216\u65f6\u95f4\uff1b\u5b83\u4eec\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u66f4\u52a0\u7a33\u5065\u548c\u6709\u6548\u7684\u6d41\u7a0b\u3002\u5728\u4f7f\u7528 tidymodels \u4e4b\u524d\uff0c\u6211\u53ef\u80fd\u53ea\u662f\u8df3\u8fc7\u4e86\u8c03\u6574\u53c2\u6570\uff0c\u6216\u8005\u505c\u6b62\u4e86\u6211\u5c1d\u8bd5\u7684\u7b2c\u4e00\u4e2a\u6a21\u578b\u7c7b\u578b\uff0c\u56e0\u4e3a\u8fed\u4ee3\u592a\u56f0\u96be\u4e86\uff08\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a shlep \u76f2\uff09\u3002\u6211\u5728 tidymodels \u4e2d\u770b\u5230\u7684\u4e00\u4e9b\u963b\u529b\u6765\u81ea\u201c\u8fd9\u592a\u5bb9\u6613\u4e86\u2014\u2014\u4f60\u6ca1\u6709\u4ed4\u7ec6\u8003\u8651\u4ee3\u7801\u5728\u505a\u4ec0\u4e48\uff01\u201d\u4f46\u6211\u8ba4\u4e3a\u8fd9\u8ba9\u5b83\u5012\u9000\u4e86\u3002\u901a\u8fc7\u6d88\u9664\u7f16\u5199\u7a0b\u5e8f\u903b\u8f91\u7684\u8d1f\u62c5\uff0c\u6211\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u6709\u5173\u6211\u7684\u6570\u636e\u548c\u6a21\u578b\u7684\u79d1\u5b66\u548c\u7edf\u8ba1\u95ee\u9898\u3002\u611a\u8822\u7684\u62b1\u6028\uff1a\u201c\u8fd9\u4e2a\u5de5\u5177\u8ba9\u4f60\u65e0\u6cd5\u601d\u8003\u3002\u201d\u5f53\u4ed6\u4eec\u4f7f\u7528\u597d\u5de5\u5177\u65f6\uff0c\u6ca1\u6709\u4eba\u4f1a\u505c\u6b62\u601d\u8003\u3002\u4ed6\u4eec\u4f1a\u8003\u8651\u66f4\u91cd\u8981\u7684\u4e8b\u60c5 \u2014 David Robinson (@drob) 2016 \u5e74 8 \u6708 26 \u65e5\n\u6211\u5bf9 tidymodels \u8f6f\u4ef6\u5305\u7684\u6240\u6709\u5185\u5bb9\u90fd\u4e0d\u6ee1\u610f\uff0c\u5c24\u5176\u662f\u5f53\u6211\u7b2c\u4e00\u6b21\u5f00\u59cb\u6bd4\u8d5b\u65f6\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u89c9\u5f97 API \u5728\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u53c2\u6570\u65f6\u4f1a\u5f3a\u8feb\u8fc7\u5ea6\u7ba1\u9053\uff0c\u4f7f\u6a21\u578b\u89c4\u8303\u6bd4\u4ed6\u4eec\u5fc5\u987b\u7684\u8981\u5197\u957f\u5f97\u591a\u3002\u6b63\u5982\u6211\u7a0d\u540e\u5c06\u8ba8\u8bba\u7684\u90a3\u6837\uff0cstacks \u5305\u4ecd\u7136\u662f\u4e00\u4e2a\u5177\u6709\u7c97\u7565\u5b9e\u73b0\u8349\u6848\u7684\u597d\u4e3b\u610f\u3002\u4f46\u597d\u6d88\u606f\u662f\u8be5\u56e2\u961f\u6b63\u5728\u7ee7\u7eed\u6539\u8fdb\u5b83\uff01\u5728\u6211\u7684 SLICED \u6bd4\u8d5b\u8fc7\u7a0b\u4e2d\uff0c\u6211\u6253\u5f00\u4e86\u4e24\u4e2a GitHub \u95ee\u9898\uff08\u6b27\u6d32\u9632\u98ce\u8349\u548c\u5de5\u4f5c\u6d41\uff09\uff0c\u5f53\u6211\u5230\u8fbe\u7b2c\u4e8c\u5708\u65f6\uff0c\u5b83\u4eec\u5df2\u7ecf\u4fee\u590d\u4e86\uff01 1 \u5728\u4eca\u665a\u7684#SLICED \u4e2d\uff0c\u5c06\u4f1a\u9707\u64bc\u6b27\u6d32\u9632\u98ce\u8349\u548c\u5de5\u4f5c\u6d41\u7684\u5f00\u53d1\u7248\u672c A. \u9632\u98ce\u8349\u6a21\u578b\u73b0\u5728\u6709\u4e00\u4e2a\u9ed8\u8ba4\u503c\u800c\u4e0d\u662f\u9700\u8981 set_engine() B.\u5de5\u4f5c\u6d41() \u73b0\u5728\u91c7\u7528\u9884\u5904\u7406\u5668/\u89c4\u8303\u53c2\u6570 \ud83d\udc95 tidymodels \u56e2\u961f\u6700\u8fd1\u7684\u5de5\u4f5chttps://t.co/2O4Xfen2kU pic.twitter.com/9yI4FYTilu \u2014 David Robinson (@drob) 2021 \u5e74 7 \u6708 14 \u65e5\u73b0\u5728\u6211\u5df2\u7ecf\u8ba8\u8bba\u4e86\u8fd9\u4e9b\u5de5\u5177\uff0c\u6211\u5c06\u8c08\u8c08\u673a\u5668\u5b66\u4e60\u672c\u8eab\u3002\u6211\u77e5\u9053\u6211\u51e0\u4e4e\u662f\u6700\u540e\u4e00\u4e2a\u6b23\u8d4f\u8fd9\u4e00\u70b9\u7684\u4eba\uff0c\u4f46 xgboost \u5728\u5feb\u901f\u521b\u5efa\u9ad8\u6027\u80fd\u6a21\u578b\u65b9\u9762\u7684\u5f3a\u5927\u529f\u80fd\u4ee4\u4eba\u60ca\u53f9\u3002\u5f53\u6211\u4e3a\u6bd4\u8d5b\u7ec3\u4e60\u65f6\uff0c\u6211\u5f88\u65e9\u5c31\u78e8\u7ec3\u4e86\u4e00\u4e2a\u8fc7\u7a0b\u3002\u7c7b\u4f3c\u4e8e\uff1a\u62df\u5408 xgboost boosted \u6811\u6a21\u578b\uff0clearn_rate = .02\uff0cmtry \u4ece 2-4 \u4e0d\u7b49\uff0c\u6811\u4ece 300 \u5230 800 \u4e0d\u7b49\n\u7ed8\u5236\u5b66\u4e60\u66f2\u7ebf\uff08\u663e\u793a\u968f\u7740\u6811\u6570\u91cf\u53d8\u5316\u7684\u6027\u80fd\uff09\uff0c\u5e76\u5728\u9700\u8981\u65f6\u4f7f\u7528\u5b83\u6765\u8c03\u6574 mtry \u548c\u6811\u3002\u5728\u5927\u591a\u6570\u5267\u96c6\u4e2d\uff0c\u8fd9\u4e2a\u6b7b\u8bb0\u786c\u80cc\u7684\u8fc7\u7a0b\u901a\u5e38\u662f\u6211\u6700\u7ec8\u6a21\u578b\u7684\u5927\u90e8\u5206\u65f6\u95f4\uff01\u5b83\u51e0\u4e4e\u603b\u662f\u80dc\u8fc7\u6211\u4ece\u7ebf\u6027\u6216\u968f\u673a\u68ee\u6797\u6a21\u578b\u4e2d\u5f97\u5230\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u5373\u4f7f\u6709\u5927\u91cf\u7684\u7279\u5f81\u5de5\u7a0b\u548c\u8c03\u6574\u3002\u8be5\u8fc7\u7a0b\u7279\u522b\u65b9\u4fbf\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u4ece\u5355\u4e2a\u6a21\u578b\u62df\u5408\u4e2d\u83b7\u5f97\u6574\u4e2a\u5b66\u4e60\u66f2\u7ebf\uff08\u6539\u53d8\u6811\u7684\u6570\u91cf\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u975e\u5e38\u5feb\u901f\u5730\u4f7f\u7528 tune \u5305\u3002\u8fd9\u4e0e\u6211\u4f7f\u7528 keras\uff08\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff09\u7684\u7ecf\u9a8c\u975e\u5e38\u4e0d\u540c\uff0c\u6211\u53d1\u73b0\u5728\u6211\u4ec0\u81f3\u51fb\u8d25\u968f\u673a\u68ee\u6797\u4e4b\u524d\uff0c\u6211\u901a\u5e38\u5fc5\u987b\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u6446\u5f04\u8d85\u53c2\u6570\u3002 keras \u80af\u5b9a\u6709\u53ef\u80fd\u88ab\u6211\u7684\u4e00\u4e9b\u63d0\u5347\u7684\u6811\u51fb\u8d25\uff0c\u4f46\u6211\u6000\u7591\u6211\u662f\u5426\u4f1a\u4ee5\u540c\u6837\u5feb\u7684\u901f\u5ea6\u83b7\u5f97\u5b83\u3002\u5728\u6211\u81ea\u5df1\u7684\u4e13\u4e1a\u5de5\u4f5c\u4e2d\uff0c\u6211\u901a\u5e38\u559c\u6b22\u6784\u5efa\u53ef\u89e3\u91ca\u7684\u6a21\u578b\uff0c\u8fdb\u884c\u53ef\u89c6\u5316\uff0c\u5e76\u4e86\u89e3\u6bcf\u4e2a\u7279\u5f81\u7684\u4f5c\u7528\u3002\u4f46\u662f\u63d0\u5347\u6811\u5728\u201c\u9ed1\u5323\u5b50\u201d\u7684\u65b9\u5411\u4e0a\u8d70\u5f97\u66f4\u8fdc\u3002\u4f46\u662f\u7ade\u4e89\u6027\u673a\u5668\u5b66\u4e60\u6709\u4e00\u79cd\u6709\u8da3\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u6027\u80fd\u6307\u6807\u4e0a\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u5370\u8c61\u6df1\u523b\u7684\u662f\u6211\u53ef\u4ee5\u4ece\u57fa\u5c3c\u7cfb\u6570\u8fd9\u6837\u7684\u91cd\u8981\u6027\u5ea6\u91cf\u4e2d\u5b66\u5230\u5f88\u591a\u4e1c\u897f\u3002\u4e0e\u7ebf\u6027\u6a21\u578b\u4e2d\u7684\u7279\u5f81\u4e0d\u540c\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u4ee3\u8868\u6709\u8da3\u7684\u975e\u7ebf\u6027\u9879\uff0c\u5b83\u6709\u52a9\u4e8e\u7a81\u51fa\u6211\u53ef\u4ee5\u4ece\u6a21\u578b\u4e2d\u5220\u9664\u7684\u4e0d\u91cd\u8981\u7684\u9879\u3002\u8bf4\u8d77\u6765\u2026\u2026\u6211\u5f88\u5feb\u53d1\u73b0 xgboost \u7684\u4e00\u4e2a\u7279\u70b9\u662f\u63d0\u4f9b\u592a\u591a\u529f\u80fd\u5f88\u5bb9\u6613\u5bf9\u5176\u9020\u6210\u4f24\u5bb3\u3002 xgboost \u4e2d\u7684\u4f4e\u503c\u7279\u5f81\u524a\u5f31\u4e86\u5176\u4f59\u7279\u5f81\u7684\u91cd\u8981\u6027\uff0c\u56e0\u4e3a\u5b83\u4eec\u51fa\u73b0\u5728\u8f83\u5c11\u968f\u673a\u9009\u62e9\u7684\u6811\u4e2d\u3002\u8fd9\u4e0e\u6b63\u5219\u5316\u7ebf\u6027\u56de\u5f52\uff08\u4f8b\u5982 LASSO\uff09\u5f62\u6210\u5bf9\u6bd4\uff0c\u5176\u4e2d\u60e9\u7f5a\u9879\u901a\u5e38\u5f88\u5bb9\u6613\u5c06\u989d\u5916\u7cfb\u6570\u8bbe\u7f6e\u4e3a\u96f6\u3002\u5f53\u6211\u4eec\u6709\u5206\u7c7b\u9884\u6d4b\u53d8\u91cf\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u522b\u6709 20 \u4e2a\u7ea7\u522b\uff0c\u90a3\u4e48\u5f53\u53d8\u6210 one-hot \u7f16\u7801\u65f6\uff0c\u5c31\u4f1a\u6709 20 \u4e2a\u989d\u5916\u7684\u4e8c\u8fdb\u5236\u53d8\u91cf\u3002\u4e0e\uff08\u6bd4\u5982\u8bf4\uff09\u4e00\u4e24\u4e2a\u9ad8\u5ea6\u9884\u6d4b\u6a21\u578b\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u6700\u7ec8\u751f\u6210\u7684\u6811\u8981\u591a\u5f97\u591a\u3002\u6211\u503e\u5411\u4e8e\u53d1\u73b0\uff0c\u5f53\u6211\u9884\u5148\u5220\u9664\u9ad8\u57fa\u6570\u53d8\u91cf\u65f6\uff0c\u6211\u7684\u6a21\u578b\u8868\u73b0\u66f4\u597d\uff08\u6211\u7684\u7406\u89e3\u662f catboost \u53ef\u80fd\u4f1a\u66f4\u4f18\u96c5\u5730\u5904\u7406\u8fd9\u4e9b\uff01\uff09\n\u4e00\u65e6\u60a8\u5728\u8c03\u6574\u6a21\u578b\u65f6\u9047\u5230\u6536\u76ca\u9012\u51cf\u70b9\uff0c\u901a\u5e38\u6700\u597d\u4ece\u53e6\u4e00\u4e2a\u4ea7\u751f\u4e0d\u540c\u7c7b\u578b\u9519\u8bef\u7684\u6a21\u578b\u91cd\u65b0\u5f00\u59cb\uff0c\u5e76\u5c06\u5b83\u4eec\u7684\u9884\u6d4b\u5e73\u5747\u5728\u4e00\u8d77\u3002\u8fd9\u5c31\u662f\u6a21\u578b\u5806\u53e0\u80cc\u540e\u7684\u539f\u7406\uff0c\u8fd9\u662f\u4e00\u79cd\u96c6\u6210\u5b66\u4e60\u3002\u4e00\u4e2a\u5b8c\u7f8e\u7684\u4f8b\u5b50\u662f AirBnb \u5b9a\u4ef7\u89c6\u9891\u3002\u6211\u80fd\u591f\u4f7f\u7528 xgboost \u5efa\u7acb\u4e00\u4e2a\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u57fa\u4e8e\u7eac\u5ea6/\u7ecf\u5ea6\u7b49\u6570\u5b57\u53d8\u91cf\uff08\u5bf9\u6811\u6728\u975e\u5e38\u6709\u6548\uff01\uff09\u548c\u4e00\u4e9b\u5206\u7c7b\u53d8\u91cf\u3002\u4f46\u6570\u636e\u8fd8\u5305\u62ec\u7a00\u758f\u7684\u5206\u7c7b\u53d8\u91cf\uff0c\u5982\u8857\u533a\u548c\u6587\u672c\u5b57\u6bb5\uff08\u516c\u5bd3\u540d\u79f0\uff09\uff0c\u5176\u4e2d\u201c\u8054\u6392\u522b\u5885\u201d\u6216\u201c\u5de5\u4f5c\u5ba4\u201d\u7b49\u6807\u8bb0\u5177\u6709\u5f88\u5f3a\u7684\u9884\u6d4b\u80fd\u529b stacks \u5305\u5c06\u6b64\u8fc7\u7a0b\u7f6e\u4e8e tidymodels \u6846\u67b6\u5185\u3002\u5728\u6211\u4f7f\u7528\u8fc7\u7684\u6240\u6709 tidymodels \u5305\u4e2d\uff0cstacks \u5305\u662f\u6700\u660e\u663e\u5904\u4e8e\u65e9\u671f\u72b6\u6001\u7684\u5305\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u5b83\u5bf9\u7ec4\u5408\u6a21\u578b\u7684\u65b9\u5f0f\u8fc7\u4e8e\u56fa\u6267\u5df1\u89c1\uff0c\u603b\u662f\u4f7f\u7528\u5e26\u6709\u81ea\u4e3e\u4ea4\u53c9\u9a8c\u8bc1\u7684\u6b63\u5219\u5316\u7ebf\u6027\u6a21\u578b\u3002\u90e8\u5206\u539f\u56e0\u662f\uff0c\u5373\u4f7f\u53ea\u7ec4\u5408\u4e24\u4e2a\u6216\u4e09\u4e2a\u6a21\u578b\uff0c\u5b83\u4e5f\u5f88\u6162\u3002\u800c\u4e14\u6211\u53d1\u73b0\u5f53\u8f93\u5165\u8bbe\u7f6e\u4e0d\u6b63\u786e\u65f6\uff0c\u5b83\u6709\u65f6\u4f1a\u51fa\u73b0\u65e0\u76ca\u7684\u9519\u8bef\uff0c\u8fd9\u8868\u660e\u5b83\u9700\u8981\u4e00\u4e9b\u66f4\u91cd\u7684\u201c\u6e38\u620f\u6d4b\u8bd5\u201d\u3002\u6211\u5728\u6bd4\u8d5b\u7684\u8fc7\u7a0b\u4e2d\u5b66\u5230\u4e86\u5f88\u591a\u5173\u4e8e tidymodels \u548c\u673a\u5668\u5b66\u4e60\u7684\u77e5\u8bc6\u3002\u4f46\u6211\u6700\u559c\u6b22\u7684\u90e8\u5206\u4f53\u9a8c\u662f\uff0c\u56e0\u4e3a\u5b83\u662f\u5728 Kaggle \u4e0a\u516c\u5f00\u4e3e\u529e\u7684\uff0c\u89c2\u770b\u6bd4\u8d5b\u76f4\u64ad\u7684\u4eba\u53ef\u4ee5\u4e0e\u81ea\u5df1\u7ade\u4e89\uff08\u901a\u5e38\u6bd4\u53c2\u8d5b\u8005\u8868\u73b0\u5f97\u66f4\u597d\uff01\uff09\u8be5\u4e3b\u9898\u4ec5\u9002\u7528\u4e8e @kierisi \u548c @kierisi\u3002\u5982\u679c\u4f60\u4e0d\u662f@kierisi\uff0c\u4f60\u53ef\u4ee5\u6eda\u52a8\u8fc7\u53bb\u3002 JESSE \u7684\u624b\u5de5\u5207\u7247\u6a21\u56e0\uff0ca \ud83e\uddf5\uff1apic.twitter.com/mYHR3bobGE \u2014 Chelsea Parlett-Pelleriti\uff08@ChelseaParlett\uff092021 \u5e74 6 \u6708 23 \u65e5\n\u6211\u7684\u7ade\u4e89\u5bf9\u624b Jesse Mostipak \u60f3\u51fa\u4e86\u4e00\u4e2a\u7edd\u5999\u7684\u6280\u5de7\uff0c\u5728\u5979\u7684\u6a21\u7279\u8bad\u7ec3\u65f6\u5728\u5c4f\u5e55\u4e0a\u5c55\u793a\u6a21\u56e0\uff1a\u8fd9\u81f3\u5c11\u662f\u5979\u5728\u6211\u4eec\u6bd4\u8d5b\u7684\u804a\u5929\u6295\u7968\u90e8\u5206\u538b\u5012\u6211\u7684\u539f\u56e0\u4e4b\u4e00\uff08\u4e5f\u662f\u6211\u6b63\u5728\u5c1d\u8bd5\u7684\u539f\u56e0\u4e4b\u4e00\uff09\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u62ff\u51fa\u4e00\u4e9b\u8868\u60c5\u5305\u3002\u8fdf\u5230\u603b\u6bd4\u4e0d\u505a\u5f3a\uff01\uff09\u4e0d\u7ba1\u4f60\u559c\u6b22\u4e0d\u559c\u6b22\u8fd9\u4e9b\u8868\u60c5\u5305\uff0c\u5982\u679c\u4f60\u60f3\u770b\u5230\u6211\u53bb\u5b63\u540e\u8d5b\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u6295\u7968\u7ed9\u6211\u3002\u4e0d\u7ba1\u6211\u80fd\u4e0d\u80fd\u8fdb\u5165\u5b63\u540e\u8d5b\uff0c\u6211\u90fd\u4f1a\u63d0\u4ea4\u4e00\u4e9b\u610f\u89c1\u4e66\uff0c\u6211\u5f88\u8363\u5e78\u6709\u673a\u4f1a\u548c\u5927\u5bb6\u4e00\u8d77\u5b66\u4e60\u3002\u7279\u522b\u611f\u8c22\u6211\u7684\u670b\u53cb\u517c\u540c\u4e8b Julia Silge\uff0c\u5979\u5168\u804c\u4ece\u4e8b tidymodels \u8f6f\u4ef6\u5305\u7684\u5de5\u4f5c\uff0c\u5e76\u5e2e\u52a9\u8ba8\u8bba\u4e86\u6211\u5bf9\u8f6f\u4ef6\u5305\u7684\u4e00\u4e9b\u60f3\u6cd5\u548c\u53cd\u9988\u3002 \u21a9 \u673a\u5668\u5b66\u4e60\u5306\u5fd9\uff1a\u6211\u4ece SLICED ML \u7ade\u8d5b\u4e2d\u5b66\u5230\u7684\u4e1c\u897f\u53d1\u8868\u5728 .", "note_en": "This summer I\u2019ve been competing in the  SLICED machine learning competition, where contestants have two hours to open a new dataset, build a predictive model, and be scored as a Kaggle submission. Contestants are graded primarily on model performance, but also get points for visualization and storytelling, and from audience votes. Before SLICED I had almost no experience with competitive ML, so I learned a lot!\n As of today I\u2019m 5th in the standings, short of the cutoff for the playoffs, so if you want to see me continue   you can vote for me as an \u201cAudience Choice\u201d here! (Though one of my favorite things about the competition is that audience members can compete along with Kaggle submissions, so I expect I\u2019ll join in in any case!)\n For four of the SLICED episodes (including the two weeks I was competing) I shared a screencast of my process. Episodes 4 and 7 were the ones I was competing live (you can also find the code  here):\n  If you watch just one, I recommend AirBnb, which was a blast! (It was easily my favorite dataset of the competition, with a mix of text, geographic, and categorical data- though episode 1 and episode 8 were also delightful).\n In this post, I\u2019ll share some of what I\u2019ve learned about using R, and the  tidymodels collection of packages, for competitive Kaggle modeling.\n  For years Python has had a solid advantage in tooling for machine learning ( scikit-learn is just dynamite), but R has been catching up fast. The tidyverse team at RStudio has been developing the tidymodels suite of packages to play well with the tidyverse tools. This was the first time I\u2019d really gotten in-depth experience with them, and I\u2019ll share what I liked (and didn\u2019t).\n  The  \u201cpit of success\u201d, in contrast to a \u201csummit of success\u201d or a \u201cpit of doom\u201d, is the philosophy that users shouldn\u2019t have to strive and struggle to do the right thing. They should be able to fall into good habits almost by accident, because it\u2019s easier than using them incorrectly.\n There\u2019s a lot of traps you can fall into when doing machine learning, and the tidymodels packages are designed to avoid those \u201cwithout thinking\u201d. I think the single most impressive one is  avoiding data leakage during your data cleaning.\n  Think of a few of the many feature engineering steps we might apply to a dataset before fitting a model:\n Bucketing rare categories (e.g. replacing rare levels of a categorical variable with \u201cOther\u201d)\n The recipes package offers functions for performing these operations (like  step_impute_mean,  step_pca, and  step_other), but that\u2019s only part of its value. The brilliant insight of the recipes packages is that  each of those feature engineering steps is itself a model that needs to be trained! If you include the test set when you\u2019re imputing values with their mean, or when you\u2019re applying PCA, you\u2019re accidentally letting in information from the test set (which makes you more likely to overfit and not realize it).\n  The recipes package makes this explicit: a recipe has to be trained on data (with  prep()) before it is applied to a dataset (with  bake()). By combining this recipe with a model specification into a  workflow object, you encapsulate the entire start-to-end process of feature engineering and modeling. Other tidymodels tools then take advantage of this encapsulated workflow.\n  I\u2019ve found each of the other packages also plays a role in the tidymodels \u201cpit of success\u201d. For instance:\n Cross validation (rsamples): Cross validation is one of the key ways to avoid overfitting, especially when selecting models and choosing hyperparameters.  vfold_cv and  fit_resamples make it easy.\n  Tuning hyperparameters (tune):  tune_grid makes it trivial to specify a combination of hyperparameters see how the performance varies.  autoplot() in particular has a real \u201cdoes exactly what I want out of the box\u201d feel.\n  Trying different models (parsnip): I really like not having to deal with each modeling package\u2019s idiosyncrasies of inputs and outputs; less time reading docs means more time focusing on my model and data.\n  Text classification (textrecipes): This has a special place in my heart. I helped develop the tidytext package, but I\u2019ve never been completely thrilled with how it fit into a machine learning workflow. By providing tools for tokenization and filtering, the textrecipes package turns text into just another type of predictor.\n These conveniences aren\u2019t just a matter of saving effort or time; together they add up to a more robust and effective process. Prior to tidymodels, I might have just skipped tuning a parameter, or stopped with the first model type I tried, because iterating would be too difficult (a phenomenon known as  shlep blindness).\n Some of the resistance I\u2019ve seen to tidymodels comes from a place of \u201cThis makes it too  easy- you\u2019re not thinking carefully about what the code is doing!\u201d But I think this is getting it backwards. By removing the burden of writing procedural logic, I get to focus on scientific and statistical questions about my data and model.\n Silly complaint: &#34;this tool keeps you from thinking.&#34; No one stops thinking when they use good tools. They think about more important things\n\u2014 David Robinson (@drob)  August 26, 2016\n  I wasn\u2019t happy with everything about the tidymodels packages, especially when I first started the competition. In some cases I felt the API forced excessive piping when they could have used function arguments, making the model specifications much more verbose than they had to be. And as I\u2019ll discuss later, the  stacks package still feels like a terrific idea with a rough draft implementation.\n But the great news is that the team is continuing to improve it! I opened two GitHub issues ( parsnip and  workflows) in the course of my SLICED competition, and by the time I reached my second lap they were already fixed!  1\n In tonight&#39;s  #SLICED, gonna be rocking the development versions of parsnip &amp; workflows  A. parsnip models now have a default instead of needing set_engine() B. workflow() now takes a preprocessor / spec argument  \ud83d\udc95 the recent work from the tidymodels team  https://t.co/2O4Xfen2kU  pic.twitter.com/9yI4FYTilu\n\u2014 David Robinson (@drob)  July 14, 2021\n  Now that I\u2019ve talked about the tools, I\u2019ll get to the machine learning itself.\n I know I\u2019m just about the last person to appreciate this, but it was remarkable how powerful xgboost was at creating high performance models quickly. When I was practicing for the competition, I honed in on a process early on. Something like:\n Fit an xgboost boosted trees model, with learn_rate = .02, mtry varying from 2-4, and trees varying from 300 to 800\n  Plot a learning curve (showing the performance as the number of trees varies), and use it to adjust mtry and trees if needed.\n In most of the episodes, this rote process usually me most of the way to my final model! It almost always outperformed anything I could get from linear or random forest models even with heavy feature engineering and tuning. The process is especially convenient because you can get an entire learning curve (varying the number of trees) from a single model fit, so it\u2019s a very fast use of the tune package.\n  This is very different from my experience with keras (a deep learning framework), which I found I\u2019d usually have to spend a solid amount of time fiddling with hyperparameters before I could even beat a random forest. It\u2019s certainly possible that keras could have been beaten some of my boosted trees, but I doubt I would have gotten to it nearly as quickly.\n  In my own professional work I usually like to build interpretable models, make visualizations, and understand the role of each feature. But boosted trees are farther in the direction of \u201cblack boxes\u201d. But competitive ML has an amusing way of \u201cfocusing the mind\u201d on a performance metric.\n  Besides which, I was impressed how much I could learn from an importance measure like Gini coefficient. Unlike the features in a linear model, these could represent interesting nonlinear terms, and it helped highlight unimportant terms I could drop from the model. Speaking of which\u2026\n  Something I quickly discovered with xgboost is that providing  too many features could easily hurt it. Low-value features in an xgboost dilute the importance of the remaining ones, since they show up in fewer randomly selected trees. This is in contrast to regularized linear regression (e.g. LASSO), where it\u2019s usually pretty easy for the penalty term to set extra coefficients to zero.\n This pops up when we have categorical predictors. If a category has 20 levels, then when turned into one-hot encoding that\u2019s 20 additional binary variables. Those end up in a lot more trees than (say) one or two highly predictive models. I tended to find that my models performed better when I just removed high-cardinality variables up front (my understanding is that catboost might handle these more gracefully!)\n  Once you\u2019ve hit a point of diminishing returns when tuning a model, it\u2019s often better to start fresh with another model that makes a different  kind of error, and average their predictions together. This is the principle behind model stacking, a type of ensemble learning.\n   A perfect example was in the AirBnb pricing video. I was able to get to a strong model with xgboost based on numeric variables like latitude/longitude (very effective with trees!) and a few categorical variables.\n  But the data also included sparse categorical variables like neighborhood, and a text field (the apartment name) where tokens like \u201ctownhouse\u201d or \u201cstudio\u201d had a lot of predictive power\n  The  stacks package puts this process within the tidymodels framework. Of all the tidymodels packages I\u2019ve used, the stacks package is the one that\u2019s most clearly in an early state. For starters, it\u2019s overly opinionated about the way it combines models, always using a regularized linear model with bootstrapped cross validation. Partly because of that, it\u2019s slow even when combining just two or three models. And I\u2019ve found that it sometimes gives unhelpful errors when the inputs aren\u2019t set up correctly, which suggests it needs some heavier \u201cplaytesting\u201d.\n  I learned a lot about tidymodels and machine learning in the process of competing. But my favorite part of the experience was that because it was hosted publicly on Kaggle, people watching the competition live could compete themselves (often outperforming the contestants!)\n  This thread is for  @kierisi and  @kierisi only. If you&#39;re not  @kierisi you can scroll past.  ARTISINAL SLICED MEMES FOR JESSE, a \ud83e\uddf5:  pic.twitter.com/mYHR3bobGE\n\u2014 Chelsea Parlett-Pelleriti (@ChelseaParlett)  June 23, 2021\n My competitor  Jesse Mostipak came up with a brilliant schtick of showing memes on screen while her models were training:\n  This was at least one of the reasons she crushed me in the chat voting portion of our competition (and one of the reasons I\u2019m trying out some memes in this post. Better late than never!)\n  Whether you like the memes or not, if you\u2019d like to see me go to the playoffs you can  vote for me here. And whether or not I do make it to the playoffs, I\u2019ll be joining in with some submissions, and I\u2019m honored to have had the chance to learn with everyone.\n Thanks especially to my friend and colleague  Julia Silge, who works on the tidymodels packages full time and helped talk through some of my thoughts and feedback on the packages.\u00a0 \u21a9\n    Machine learning in a hurry: what I&#39;ve learned from the SLICED ML competition was published on  .", "posttime": "2021-07-23 00:12:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u673a\u5668,learning,\u6a21\u578b", "title": "\u673a\u5668\u5b66\u4e60\u5306\u5fd9", "title_en": "Machine Learning in a Hurry", "transed": 1, "url": "http://varianceexplained.org/r/sliced-ml/", "via": "", "real_tags": ["\u673a\u5668", "learning", "\u6a21\u578b"]}, {"category": "", "categoryclass": "", "imagename": "33e193e17a418c1580c05f6e3f9e2e8a.jpg", "infoid": 1069027, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c31\u5728 Google \u7684 DeepMind AI \u5c0f\u7ec4\u6700\u7ec8\u8be6\u7ec6\u63cf\u8ff0\u5176\u751f\u7269\u5b66\u5de5\u4f5c\u4e00\u5468\u540e\uff0c\u8be5\u516c\u53f8\u53d1\u5e03\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u89e3\u91ca\u4e86\u5b83\u5982\u4f55\u5206\u6790\u4eba\u7c7b\u57fa\u56e0\u7ec4\u4e2d\u7f16\u7801\u7684\u51e0\u4e4e\u6240\u6709\u86cb\u767d\u8d28\u5e76\u9884\u6d4b\u5176\u53ef\u80fd\u7684\u4e09\u7ef4\u7ed3\u6784\u2014\u2014\u8fd9\u79cd\u7ed3\u6784\u53ef\u80fd\u5f88\u5173\u952e\u7528\u4e8e\u4e86\u89e3\u75be\u75c5\u548c\u8bbe\u8ba1\u6cbb\u7597\u65b9\u6cd5\u3002\u5728\u4e0d\u4e45\u7684\u5c06\u6765\uff0c\u6240\u6709\u8fd9\u4e9b\u7ed3\u6784\u90fd\u5c06\u901a\u8fc7\u6b27\u6d32\u751f\u7269\u4fe1\u606f\u5b66\u7814\u7a76\u6240\u5728\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u4e0b\u53d1\u5e03\uff0c\u8be5\u7814\u7a76\u6240\u5df2\u7ecf\u62e5\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u86cb\u767d\u8d28\u7ed3\u6784\u6570\u636e\u5e93\u3002\u5728\u4e0e\u8be5\u8bba\u6587\u53d1\u5e03\u76f8\u5173\u7684\u65b0\u95fb\u53d1\u5e03\u4f1a\u4e0a\uff0cDeepMind \u7684 Demis Hassabis \u660e\u786e\u8868\u793a\u8be5\u516c\u53f8\u5e76\u6ca1\u6709\u5c31\u6b64\u6b62\u6b65\u3002\u9664\u4e86\u8bba\u6587\u4e2d\u63cf\u8ff0\u7684\u5de5\u4f5c\u4e4b\u5916\uff0c\u8be5\u516c\u53f8\u8fd8\u5c06\u53d1\u5e03 20 \u79cd\u4e3b\u8981\u7814\u7a76\u751f\u7269\u7684\u57fa\u56e0\u7ec4\u7ed3\u6784\u9884\u6d4b\uff0c\u4ece\u9175\u6bcd\u5230\u679c\u8747\u518d\u5230\u5c0f\u9f20\u3002\u603b\u7684\u6765\u8bf4\uff0c\u6570\u636e\u5e93\u53d1\u5e03\u5c06\u5305\u62ec\u5927\u7ea6 350,000 \u4e2a\u86cb\u767d\u8d28\u7ed3\u6784\u3002\u6211\u4eec\u4e0a\u5468\u521a\u521a\u63cf\u8ff0\u4e86 DeepMind \u7684\u8f6f\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u4f1a\u5728\u8fd9\u91cc\u8be6\u7ec6\u4ecb\u7ecd\u3002\u8fd9\u9879\u5de5\u4f5c\u662f\u4e00\u4e2a\u57fa\u4e8e\u4eba\u5de5\u667a\u80fd\u7684\u7cfb\u7edf\uff0c\u8bad\u7ec3\u73b0\u6709\u86cb\u767d\u8d28\u7684\u7ed3\u6784\uff0c\u8fd9\u4e9b\u7ed3\u6784\u5df2\u7ecf\u901a\u8fc7\u5b9e\u9a8c\u5ba4\u5b9e\u9a8c\uff08\u901a\u5e38\u662f\u8d39\u529b\u7684\uff09\u786e\u5b9a\u3002\u8be5\u7cfb\u7edf\u4f7f\u7528\u8be5\u8bad\u7ec3\uff0c\u52a0\u4e0a\u5b83\u4ece\u8fdb\u5316\u76f8\u5173\u7684\u86cb\u767d\u8d28\u5bb6\u65cf\u4e2d\u83b7\u5f97\u7684\u4fe1\u606f\uff0c\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u7684\u6c28\u57fa\u9178\u94fe\u5982\u4f55\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u6298\u53e0\u8d77\u6765\u3002\u7ed3\u679c\u7684\u4e09\u7ef4\u7ed3\u6784\u53ef\u4ee5\u4e3a\u6211\u4eec\u63d0\u4f9b\u6709\u5173\u86cb\u767d\u8d28\u7684\u5173\u952e\u4fe1\u606f\uff0c\u4f8b\u5982\u5b83\u5982\u4f55\u4e0e\u5176\u4ed6\u86cb\u767d\u8d28\u548c\u5316\u5b66\u7269\u8d28\u76f8\u4e92\u4f5c\u7528\u4ee5\u53ca\u86cb\u767d\u8d28\u5316\u5b66\u53cd\u5e94\u53d1\u751f\u7684\u4f4d\u7f6e\u3002\u4f7f\u7528\u8fd9\u79cd\u7ed3\u6784\uff0c\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u4e86\u89e3\u7279\u5b9a\u7684\u7a81\u53d8\uff08\u5982\u5bfc\u81f4\u9057\u4f20\u75be\u75c5\u7684\u7a81\u53d8\uff09\u5982\u4f55\u6539\u53d8\u86cb\u767d\u8d28\u7684\u529f\u80fd\u3002\u7814\u7a76\u4eba\u5458\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8be5\u7ed3\u6784\u8bbe\u8ba1\u53ef\u4ee5\u4e0e\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u5e76\u6539\u53d8\u5176\u529f\u80fd\u7684\u5316\u5b66\u7269\u8d28\uff0c\u8fd9\u5bfc\u81f4\u4e86\u5bf9\u5404\u79cd\u764c\u75c7\u548c HIV \u7684\u6cbb\u7597\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u7ed3\u6784\u662f\u901a\u8fc7\u5206\u79bb\u86cb\u767d\u8d28\u3001\u51c6\u5907\u6210\u50cf\u548c\u7528\u7535\u5b50\u8f70\u51fb\u5b83\u6765\u786e\u5b9a\u7684\u3002\u8fd9\u4e9b\u6280\u672f\u65e2\u56f0\u96be\u53c8\u8017\u65f6\uff0c\u800c\u4e14\u7ecf\u5e38\u5931\u8d25\u3002\u8be5\u8bba\u6587\u4f30\u8ba1\uff0c\u6570\u5341\u5e74\u7684\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\u53ea\u4e3a\u6211\u4eec\u7559\u4e0b\u4e86\u5168\u5957\u4eba\u7c7b\u86cb\u767d\u8d28\u7684 17% \u7684\u7ed3\u6784\u4fe1\u606f\u3002\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u7814\u7a76\u4eba\u5458\u8fd8\u82b1\u4e86\u6570\u5341\u5e74\u65f6\u95f4\u5bfb\u627e\u4ec5\u4f7f\u7528\u6784\u6210\u86cb\u767d\u8d28\u7684\u6c28\u57fa\u9178\u5e8f\u5217\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u65b9\u6cd5\u3002\u4f46\u662f\u5728 AlphaFold \u4e4b\u524d\uff0c\u8f6f\u4ef6\u7684\u51c6\u786e\u6027\u8fd8\u4e0d\u591f\u9ad8\uff0c\u65e0\u6cd5\u59cb\u7ec8\u5982\u4e00\u5730\u6709\u7528\u3002 DeepMind \u5e76\u6ca1\u6709\u8bd5\u56fe\u9884\u6d4b\u4eba\u7c7b\u57fa\u56e0\u7ec4\u4e2d\u6bcf\u4e2a\u86cb\u767d\u8d28\u7684\u7ed3\u6784\uff1b\u6709\u4e9b\u53ea\u662f\u592a\u5927\u800c\u65e0\u6cd5\u65b9\u4fbf\u5730\u5904\u7406\u3002 \uff08\u8be5\u516c\u53f8\u5c06\u5927\u5c0f\u622a\u65ad\u503c\u8bbe\u7f6e\u4e3a 2,700 \u4e2a\u6c28\u57fa\u9178\uff0c\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u6bd4\u6211\u5728\u535a\u58eb\u540e\u514b\u9686\u4e2d\u82b1\u8d39\u7684\u57fa\u56e0\u8fd8\u8981\u5c0f\u3002\uff09\u4f46\u5927\u591a\u6570\u86cb\u767d\u8d28\u90fd\u8fdc\u5c0f\u4e8e\u8fd9\u4e2a\u503c\uff0c\u56e0\u6b64\u6700\u7ec8\u8ba1\u6570\u662f\u9884\u671f\u7684 98.5%\u57fa\u56e0\u7ec4\u4e2d\u7684\u86cb\u767d\u8d28\u3002\u5176\u4e2d\u4e00\u4e9b\u86cb\u767d\u8d28\u4ec5\u6839\u636e\u4eba\u7c7b\u57fa\u56e0\u7ec4\u5185 DNA \u5e8f\u5217\u7684\u7279\u5f81\u9884\u6d4b\u5b58\u5728\u3002\u540c\u6837\u91cd\u8981\u7684\u662f\uff0cAlphaFold \u5305\u62ec\u4e00\u4e2a\u7f6e\u4fe1\u4f30\u8ba1\uff0c\u7528\u4e8e\u8bb0\u5f55\u5176\u9884\u6d4b\u51c6\u786e\u7684\u53ef\u80fd\u6027\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8be5\u8f6f\u4ef6\u5bf9\u5176\u9884\u6d4b\u7684\u5927\u7ea6 60% \u7684\u6c28\u57fa\u9178\u7684\u4f4d\u7f6e\u5145\u6ee1\u4fe1\u5fc3\uff0c\u5e76\u4e14\u5bf9\u8d85\u8fc7\u4e09\u5206\u4e4b\u4e00\u7684\u4f4d\u7f6e\u5145\u6ee1\u4fe1\u5fc3\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7814\u7a76\u4eba\u5458\u5bf9 40% \u7684\u4eba\u7c7b\u86cb\u767d\u8d28\u7684\u5927\u90e8\u5206\u7ed3\u6784\u6709\u4e00\u4e2a\u81ea\u4fe1\u7684\u9884\u6d4b\u3002\u663e\u7136\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6211\u4eec\u53ef\u4ee5\u8bf4\u6211\u4eec\u5bf9\u5168\u5957\u4eba\u7c7b\u86cb\u767d\u8d28\u6709\u5f88\u597d\u7684\u628a\u63e1\u4e4b\u524d\uff0c\u8fd8\u6709\u5927\u91cf\u7684\u5de5\u4f5c\u8981\u505a\u3002\u4f46\u8fd9\u4ecd\u7136\u6bd4\u6211\u4eec\u62e5\u6709\u5b9e\u9645\u7ed3\u6784\u7684 18% \u591a\u5f97\u591a\u3002\n\u8fd8\u6709\u5927\u91cf\u7684\u86cb\u767d\u8d28\u6ca1\u6709\u88ab\u73b0\u6709\u7ed3\u6784\u5f88\u597d\u5730\u4ee3\u8868\u3002\u5d4c\u5165\u7ec6\u80de\u819c\u4e2d\u7684\u90a3\u4e9b\u5f88\u96be\u5206\u79bb\u548c\u4f7f\u7528\uff0c\u56e0\u6b64\u7814\u7a76\u4eba\u5458\u8fd8\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e9b\u819c\u86cb\u767d\u7684\u8bb8\u591a\u7ed3\u6784\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u793a\u4f8b\u8f83\u5c11\uff0c\u4f46 AlphaFold \u4f3c\u4e4e\u53ef\u4ee5\u5f88\u597d\u5730\u5904\u7406\u8fd9\u4e9b\u7ed3\u6784\u3002\u7cfb\u7edf\u54ea\u91cc\u51fa\u4e86\u95ee\u9898\uff1f\u8bb8\u591a\u86cb\u767d\u8d28\u6839\u672c\u6ca1\u6709\u5f62\u6210\u660e\u786e\u7684\u7ed3\u6784\u2014\u2014\u4e8b\u5b9e\u4e0a\uff0c\u5b83\u4eec\u7684\u529f\u80fd\u4f3c\u4e4e\u4f9d\u8d56\u4e8e\u5177\u6709\u5b8c\u5168\u7075\u6d3b\u7684\u7ed3\u6784\u624d\u80fd\u53d1\u6325\u4f5c\u7528\u3002\u663e\u7136\uff0c\u8fd9\u91cc\u5f88\u96be\u5bf9\u7ed3\u6784\u8fdb\u884c\u4efb\u4f55\u51c6\u786e\u7684\u9884\u6d4b\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u86cb\u767d\u8d28\uff08\u66f4\u5e38\u89c1\u7684\u662f\u86cb\u767d\u8d28\u7684\u90e8\u5206\uff09\u6ca1\u6709\u3002\u8fd8\u6709\u8bb8\u591a\u86cb\u767d\u8d28\u53ea\u6709\u5728\u4e0e\u53e6\u4e00\u79cd\u86cb\u767d\u8d28\u6216\u5316\u5b66\u7269\u8d28\u63a5\u89e6\u65f6\u624d\u4f1a\u5448\u73b0\u5176\u7ed3\u6784\u3002\u7531\u4e8e AlphaFold \u6ca1\u6709\u8fd9\u4e9b\u4fe1\u606f\uff0c\u56e0\u6b64\u5b83\u65e0\u80fd\u4e3a\u529b\u3002\u603b\u7684\u6765\u8bf4\uff0cDeepMind \u56e2\u961f\u53d1\u73b0 AlphaFold \u5bf9\u5176\u65e0\u5e8f\u533a\u57df\u7684\u9884\u6d4b\u4fe1\u5fc3\u5f88\u4f4e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4f7f\u7528\u8be5\u4fe1\u606f\u6765\u8bc6\u522b\u53ef\u80fd\u662f\u975e\u7ed3\u6784\u5316\u7684\u86cb\u767d\u8d28\u533a\u57df\u3002\u5728\u4e0d\u4e45\u7684\u5c06\u6765\uff08\u53ef\u80fd\u5728\u60a8\u9605\u8bfb\u672c\u6587\u65f6\uff09\uff0c\u6240\u6709\u8fd9\u4e9b\u6570\u636e\u90fd\u5c06\u5728\u7531\u6b27\u6d32\u751f\u7269\u4fe1\u606f\u5b66\u7814\u7a76\u6240\u4e3b\u529e\u7684\u4e13\u7528\u7f51\u7ad9\u4e0a\u63d0\u4f9b\uff0c\u8fd9\u662f\u4e00\u4e2a\u7531\u6b27\u76df\u8d44\u52a9\u7684\u7ec4\u7ec7\uff0c\u5176\u90e8\u5206\u63cf\u8ff0\u5982\u4e0b\uff1a\u201c\u6211\u4eec\u901a\u8fc7\u4e00\u7cfb\u5217\u670d\u52a1\u548c\u5de5\u5177\u5411\u79d1\u5b66\u754c\u514d\u8d39\u63d0\u4f9b\u4e16\u754c\u4e0a\u7684\u516c\u5171\u751f\u7269\u6570\u636e\u3002\u201d AlphaFold \u6570\u636e\u4e5f\u4e0d\u4f8b\u5916\uff1b\u4e00\u65e6\u4e0a\u8ff0\u94fe\u63a5\u4e0a\u7ebf\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u4e0b\u8f7d\u6709\u5173\u4ed6\u4eec\u9009\u62e9\u7684\u4eba\u7c7b\u86cb\u767d\u8d28\u7684\u4fe1\u606f\u3002\u6216\u8005\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u9f20\u6807\u3001\u9175\u6bcd\u6216\u679c\u8747\u7248\u672c\u3002\u5c06\u53d1\u5e03\u6570\u636e\u7684 20 \u79cd\u751f\u7269\u4e5f\u53ea\u662f\u4e00\u4e2a\u5f00\u59cb\u3002 DeepMind \u7684 Demis Hassabis \u8868\u793a\uff0c\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u8be5\u56e2\u961f\u5c06\u9488\u5bf9 DNA \u6570\u636e\u5e93\u4e2d\u53ef\u7528\u7684\u6bcf\u4e2a\u57fa\u56e0\u5e8f\u5217\u3002\u5230\u8fd9\u9879\u5de5\u4f5c\u5b8c\u6210\u65f6\uff0c\u5e94\u8be5\u6709\u8d85\u8fc7 1 \u4ebf\u4e2a\u86cb\u767d\u8d28\u5df2\u7ecf\u9884\u6d4b\u4e86\u7ed3\u6784\u3002\u54c8\u8428\u6bd4\u65af\u5728\u7ed3\u675f\u58f0\u660e\u65f6\u8bf4\uff1a\u201c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u662f\u8fc4\u4eca\u4e3a\u6b62\u4eba\u5de5\u667a\u80fd\u5bf9\u79d1\u5b66\u505a\u51fa\u7684\u6700\u91cd\u8981\u7684\u8d21\u732e\u3002\u201d\u5426\u5219\u5f88\u96be\u4e89\u8bba\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ecd\u6709\u4e00\u4e9b\u95ee\u9898\u9700\u8981\u89e3\u51b3\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u7b97\u6cd5\u65e0\u7591\u4f1a\u5f97\u5230\u6539\u8fdb\uff0c\u56e0\u6b64\u9700\u8981\u6709\u4e00\u4e2a\u7cfb\u7edf\u6765\u5904\u7406\u4e3b\u6570\u636e\u5e93\u4e2d\u7684\u66f4\u65b0\u548c\u7248\u672c\u63a7\u5236\u3002 DeepMind \u8fd8\u5c06 AlphaFold \u7684\u4ee3\u7801\u5f00\u6e90\uff0c\u56e0\u6b64\u5b58\u5728\u5206\u53c9\u548c\u5176\u4ed6\u5e76\u53d1\u75c7\u7684\u53ef\u80fd\u6027\u3002\u4f46\u8fd9\u4e9b\u95ee\u9898\u90fd\u662f\u5bf9\u672a\u6765\u7684\u62c5\u5fe7\u3002\u73b0\u5728\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u5750\u4e0b\u6765\u770b\u7740\u670d\u52a1\u5668\u7aed\u5c3d\u5168\u529b\u4e3a\u5730\u7403\u4e0a\u51e0\u4e4e\u6240\u6709\u597d\u5947\u7684\u751f\u7269\u5b66\u5bb6\u63d0\u4f9b\u670d\u52a1\uff0c\u4ed6\u4eec\u60f3\u77e5\u9053\u4ed6\u4eec\u611f\u5174\u8da3\u7684\u86cb\u767d\u8d28\u662f\u5426\u5177\u6709\u9ad8\u8d28\u91cf\u7684\u7ed3\u6784\u3002", "note_en": "Just one week after Google&#39;s DeepMind AI group finally described its biology efforts in detail, the company is releasing a paper that explains how it analyzed nearly every protein encoded in the human genome and predicted its likely three-dimensional structure\u2014a structure that can be critical for understanding disease and designing treatments. In the very near future, all of these structures will be released under a Creative Commons license via the European Bioinformatics Institute, which already hosts a major database of protein structures.\n In a press conference associated with the paper&#39;s release, DeepMind&#39;s Demis Hassabis made clear that the company isn&#39;t stopping there. In addition to the work described in the paper, the company will release structural predictions for the genomes of 20 major research organisms, from yeast to fruit flies to mice. In total, the database launch will include roughly 350,000 protein structures.\n   We  just described DeepMind&#39;s software last week, so we won&#39;t go into much detail here. The effort is an AI-based system trained on the structure of existing proteins that had been determined (often laboriously) through laboratory experiments. The system uses that training, plus information it obtains from families of proteins related by evolution, to predict how a protein&#39;s chain of amino acids folds up in three-dimensional space. The three-dimensional structure that results can give us critical information about the protein, such as how it interacts with other proteins and chemicals and where on the protein chemical reactions occur. Using the structure, researchers can learn how specific mutations, like the ones that cause genetic diseases, alter the protein&#39;s function. Researchers can also use the structure to design chemicals that can interact with the protein and change its function, something that has led to therapies for various cancers and HIV.\n Normally, these structures are determined by isolating the protein, preparing it for imaging, and bombarding it with electrons. These techniques are difficult and time-consuming, and they often fail. The paper estimates that decades of lab work have left us with structural information for only 17 percent of the full set of human proteins.\n    That explains why researchers have also spent decades looking for ways to predict structures for proteins using nothing but the sequence of amino acids that make them up. But prior to AlphaFold, the accuracy of software wasn&#39;t high enough to be consistently useful.\n  DeepMind didn&#39;t attempt to predict the structure of every protein in the human genome; some are simply too large to be handled conveniently. (The company set the size cutoff at 2,700 amino acids, which is unfortunately smaller than a gene I spent a chunk of my post-doc cloning.) But most proteins are far smaller than that, so the final count is 98.5 percent of the expected proteins in the genome. Some of these proteins are only predicted to exist based on features of DNA sequences within the human genome.\n Just as importantly, AlphaFold includes a confidence estimate that registers how likely its predictions are to be accurate. All told, the software is confident about the location of about 60 percent of the amino acids it has predicted, and it&#39;s highly confident about a bit over a third. Put differently, the researchers have a confident prediction about most of the structure of 40 percent of human proteins. Obviously, that means there&#39;s a considerable amount of work to do before we can say we have a good grip on the full set of human proteins. But that&#39;s still a  lot more than the 18 percent we have actual structures for.\n There is also a large collection of proteins that aren&#39;t well-represented by existing structures. Those embedded in a cell&#39;s membrane are difficult to isolate and work with, so researchers haven&#39;t solved many structures of these membrane proteins. But despite having fewer examples in its training data, AlphaFold seems to handle the structures reasonably well.\n Where does the system run into problems? Many proteins simply  don&#39;t form a defined structure\u2014in fact, their function seems to depend on having a completely flexible structure in order to function. Obviously, it&#39;s hard to make any accurate predictions of a structure here, since these proteins (more typically, sections of proteins) have none. There are also many proteins that only take on their structure when they are in contact with another protein or a chemical. Since AlphaFold doesn&#39;t have that information, there is not a lot it can do.\n    In general, the DeepMind team found that AlphaFold had very low confidence in its predictions for disordered regions, and they could use that information to identify areas of proteins that are likely to be unstructured.\n  At some point in the near future (possibly by the time you read this), all this data will be available on\u00a0 a dedicated website hosted by the European Bioinformatics Institute, a European Union-funded organization that describes itself in part as follows: &#34;We make the world\u2019s public biological data freely available to the scientific community via a range of services and tools.&#34; The AlphaFold data will be no exception; once the above link is live, anyone can use it to download information on the human protein of their choice.\n Or, as mentioned above, the mouse, yeast, or fruit fly version. The 20 organisms that will see their data released are also just a start. DeepMind&#39;s Demis Hassabis said that over the next few months, the team will target every gene sequence available in DNA databases. By the time this work is done, over 100 million proteins should have predicted structures. Hassabis wrapped up his part of the announcement by saying, &#34;We think this is the most significant contribution AI has made to science to date.&#34; It would be difficult to argue otherwise.\n That said, there are still some issues left to be worked out. There will undoubtedly be improvements made to the algorithm with time, so there will need to be a system to handle updating and versioning in the main database. DeepMind has also made  the code for AlphaFold open source, so there&#39;s the potential for forks and other complications.\n But those problems are worries for the future. For now, we can all sit back and watch the servers strain to service nearly every biologist on the planet who is curious to see whether a protein that interests them has a high-quality structure.", "posttime": "2021-07-22 23:39:02", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "google,\u8c37\u6b4c,\u4eba\u7c7b,turns,\u86cb\u767d\u8d28", "title": "\u8c37\u6b4c\u5728\u6574\u4e2a\u4eba\u7c7b\u57fa\u56e0\u7ec4\u4e0a\u653e\u5f00 AlphaFold", "title_en": "Google turns AlphaFold loose on the entire human genome", "transed": 1, "url": "https://arstechnica.com/science/2021/07/google-turns-alphafold-loose-on-the-entire-human-genome/", "via": "", "real_tags": ["google", "\u8c37\u6b4c", "\u4eba\u7c7b", "turns", "\u86cb\u767d\u8d28"]}, {"category": "", "categoryclass": "", "imagename": "bc9bb16fc3ea33e3048ec8f6eb3c05d4.jpg", "infoid": 1069026, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4f4d\u4e9a\u9a6c\u900a\u5de5\u7a0b\u5e08\u544a\u8bc9\u6211\uff0c\u5f53\u4ed6\u542c\u5230\u6211\u8bd5\u56fe\u7528 Ars \u6807\u9898\u505a\u7684\u4e8b\u60c5\u65f6\uff0c\u4ed6\u9996\u5148\u60f3\u5230\u7684\u662f\u6211\u4eec\u9009\u62e9\u4e86\u4e00\u4e2a\u770b\u4f3c\u56f0\u96be\u7684\u95ee\u9898\u3002\u4ed6\u8b66\u544a\u8bf4\uff0c\u6211\u9700\u8981\u5c0f\u5fc3\u6b63\u786e\u5730\u8bbe\u5b9a\u6211\u7684\u671f\u671b\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u5546\u4e1a\u95ee\u9898\u2026\u2026\u55ef\uff0c\u4ed6\u80fd\u505a\u7684\u6700\u597d\u7684\u4e8b\u60c5\u5c31\u662f\u5efa\u8bae\u5c06\u95ee\u9898\u4ece\u201c\u597d\u6216\u574f\u7684\u6807\u9898\u201d\u91cd\u65b0\u5b9a\u4e49\u4e3a\u4e0d\u592a\u5177\u4f53\u7684\u95ee\u9898\u3002\u8fd9\u53e5\u8bdd\u662f\u5bf9\u6211\u4e3a\u671f 4 \u5468\u7684\u975e\u5168\u65e5\u5236\u673a\u5668\u5b66\u4e60\u901f\u6210\u8bfe\u7a0b\u7684\u6210\u679c\u8fdb\u884c\u6846\u67b6\u5316\u7684\u6700\u9002\u5408\u5bb6\u5ead\u7684\u65b9\u5f0f\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u7684 PyTorch \u5185\u6838\u4e0e\u5176\u8bf4\u662f\u706b\u70ac\uff0c\u4e0d\u5982\u8bf4\u662f\u5783\u573e\u7bb1\u706b\u707e\u3002\u7531\u4e8e\u4e13\u4e1a\u5e72\u9884\uff0c\u51c6\u786e\u6027\u7565\u6709\u63d0\u9ad8\uff0c\u4f46\u6211\u79bb\u90e8\u7f72\u5de5\u4f5c\u89e3\u51b3\u65b9\u6848\u8fd8\u5dee\u5f97\u5f88\u8fdc\u3002\u4eca\u5929\uff0c\u636e\u79f0\u6211\u4e00\u5e74\u591a\u6765\u7b2c\u4e00\u6b21\u53bb\u5ea6\u5047\u62dc\u8bbf\u6211\u7684\u7236\u6bcd\uff0c\u6211\u5750\u5728\u4ed6\u4eec\u5ba2\u5385\u7684\u6c99\u53d1\u4e0a\u4ece\u4e8b\u8fd9\u4e2a\u9879\u76ee\uff0c\u4e0d\u5c0f\u5fc3\u5728\u6211\u5e26\u6765\u7684\u6234\u5c14\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u5728\u672c\u5730\u542f\u52a8\u4e86\u4e00\u9879\u6a21\u578b\u57f9\u8bad\u5de5\u4f5c\u2014\u2014 2.4 GHz Intel Core i3 7100U CPU\u2014\u2014\u800c\u4e0d\u662f\u5728\u540c\u4e00\u4e2a Jupyter \u7b14\u8bb0\u672c\u7684 SageMaker \u526f\u672c\u4e2d\u3002\u6234\u5c14\u9501\u5b9a\u5f97\u592a\u5389\u5bb3\u4e86\uff0c\u6211\u4e0d\u5f97\u4e0d\u62d4\u51fa\u7535\u6c60\u91cd\u65b0\u542f\u52a8\u5b83\u3002\u4f46\u662f\uff0c\u563f\uff0c\u5982\u679c\u673a\u5668\u4e0d\u4e00\u5b9a\u5728\u5b66\u4e60\uff0c\u81f3\u5c11\u6211\u662f\u3002\u6211\u4eec\u5feb\u8981\u7ed3\u675f\u4e86\uff0c\u4f46\u5982\u679c\u8fd9\u662f\u8bfe\u5802\u4f5c\u4e1a\uff0c\u6211\u7684\u6210\u7ee9\u5355\u6210\u7ee9\u53ef\u80fd\u662f\u201c\u4e0d\u5b8c\u6574\u201d\u3002\u56de\u987e\u4e00\u4e0b\uff1a\u6211\u6536\u5230\u4e86\u8fc7\u53bb\u4e94\u5e74\u7528\u4e8e Ars \u6587\u7ae0\u7684\u6210\u5bf9\u6807\u9898\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173 A/B \u6d4b\u8bd5\u83b7\u80dc\u8005\u53ca\u5176\u76f8\u5bf9\u70b9\u51fb\u7387\u7684\u6570\u636e\u3002\u7136\u540e\u6211\u88ab\u8981\u6c42\u4f7f\u7528 Amazon Web Services \u7684 SageMaker \u521b\u5efa\u4e00\u4e2a\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u6765\u9884\u6d4b\u672a\u6765\u6210\u5bf9\u5934\u6761\u65b0\u95fb\u4e2d\u7684\u83b7\u80dc\u8005\u3002\u5728\u54a8\u8be2\u5404\u79cd\u4e9a\u9a6c\u900a\u8d44\u6e90\u4ee5\u83b7\u5f97\u4e00\u4e9b\u6025\u9700\u7684\u5e2e\u52a9\u4e4b\u524d\uff0c\u6211\u6700\u7ec8\u8d70\u4e0a\u4e86\u4e00\u4e9b ML \u7684\u6b7b\u80e1\u540c\u3002\u5927\u591a\u6570\u90e8\u4ef6\u90fd\u5df2\u5c31\u4f4d\u4ee5\u5b8c\u6210\u8be5\u9879\u76ee\u3002\u6211\u4eec\uff08\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u6211\u7684\u201c\u7ed9 AWS \u7684\u670b\u53cb\u6253\u7535\u8bdd\u201d\u751f\u547d\u7ebf\uff09\u5728\u4e0d\u540c\u7684\u5efa\u6a21\u65b9\u6cd5\u4e0a\u53d6\u5f97\u4e86\u4e00\u4e9b\u6210\u529f\uff0c\u5c3d\u7ba1\u51c6\u786e\u7387\uff08\u4ec5 70% \u4ee5\u4e0a\uff09\u5e76\u4e0d\u50cf\u4eba\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u786e\u5b9a\u3002\u5982\u679c\u6211\u6284\u4e0b\u4ed6\u4eec\u7684\u7b14\u8bb0\u5e76\u4f7f\u7528\u7531\u6b64\u521b\u5efa\u7684\u7b97\u6cd5\uff0c\u6211\u6709\u8db3\u591f\u7684\u5de5\u4f5c\u6765\u751f\u6210\uff08\u4f7f\u7528\u4e00\u4e9b\u989d\u5916\u7684\u8098\u90e8\u6da6\u6ed1\u8102\uff09\u90e8\u7f72\u7684\u6a21\u578b\u548c\u4ee3\u7801\u6765\u5bf9\u6210\u5bf9\u7684\u5934\u6761\u65b0\u95fb\u8fdb\u884c\u9884\u6d4b\u3002\u4f46\u6211\u5fc5\u987b\u8bf4\u5b9e\u8bdd\uff1a\u6211\u5728\u81ea\u5df1\u7684\u672c\u5730\u670d\u52a1\u5668\u548c SageMaker \u4e0a\u91cd\u73b0\u8be5\u5de5\u4f5c\u7684\u52aa\u529b\u90fd\u5931\u8d25\u4e86\u3002\u5728\u6478\u7d22 SageMaker \u7684\u590d\u6742\u6027\u7684\u8fc7\u7a0b\u4e2d\uff08\u5305\u62ec\u5fd8\u8bb0\u5173\u95ed\u7b14\u8bb0\u672c\u3001\u8fd0\u884c\u81ea\u52a8\u5b66\u4e60\u6d41\u7a0b\uff08\u540e\u6765\u6211\u88ab\u544a\u77e5\u662f\u9488\u5bf9\u201c\u4f01\u4e1a\u5ba2\u6237\u201d\u7684\uff09\u4ee5\u53ca\u5176\u4ed6\u9519\u8bef\uff09\uff0c\u6211\u6d88\u8017\u7684 AWS \u9884\u7b97\u8d85\u8fc7\u6211\u613f\u610f\u82b1\u5728\u6ca1\u6709\u8d44\u91d1\u7684\u5192\u9669\u4e0a\u3002\u867d\u7136\u6211\u5728\u667a\u529b\u4e0a\u7406\u89e3\u5982\u4f55\u90e8\u7f72\u7531\u6240\u6709\u8fd9\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u6a21\u578b\u4ea7\u751f\u7684\u6a21\u578b\uff0c\u4f46\u6211\u4ecd\u5728\u8c03\u8bd5\u8be5\u90e8\u7f72\u7684\u5b9e\u9645\u6267\u884c\u3002\u5982\u679c\u4e0d\u51fa\u610f\u5916\uff0c\u8fd9\u4e2a\u9879\u76ee\u5df2\u7ecf\u6210\u4e3a\u673a\u5668\u5b66\u4e60\u9879\u76ee\uff08\u53ca\u5176\u80cc\u540e\u7684\u4eba\uff09\u53ef\u80fd\u5931\u8d25\u7684\u6240\u6709\u65b9\u5f0f\u7684\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u6559\u8bad\u3002\u800c\u8fd9\u6b21\u7684\u5931\u8d25\u59cb\u4e8e\u6570\u636e\u672c\u8eab\u2014\u2014\u751a\u81f3\u59cb\u4e8e\u6211\u4eec\u9009\u62e9\u63d0\u51fa\u7684\u95ee\u9898\u3002\n\u6211\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u8fd9\u9879\u52aa\u529b\u5f97\u5230\u4e00\u4e2a\u53ef\u884c\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4f46\u4e0e\u6b64\u540c\u65f6\uff0c\u6211\u5c06\u5728\u6211\u7684 GitHub \u4e0a\u5206\u4eab\u6211\u4e0e\u4e4b\u5408\u4f5c\u7684\u6570\u636e\u96c6\uff0c\u4ee5\u4fbf\u4e3a\u8fd9\u6b21\u5192\u9669\u63d0\u4f9b\u66f4\u5177\u4ea4\u4e92\u6027\u7684\u7ec4\u4ef6\u3002\u5982\u679c\u60a8\u80fd\u591f\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\uff0c\u8bf7\u52a1\u5fc5\u5728\u4e0b\u5468\u52a0\u5165\u6211\u4eec\uff0c\u5728\u672c\u7cfb\u5217\u7684\u73b0\u573a\u603b\u7ed3\u4e2d\u5632\u7b11\u6211\u3002 \uff08\u66f4\u591a\u7ec6\u8282\u5728\u6700\u540e\u3002\uff09\u7ecf\u8fc7\u591a\u6b21\u8fed\u4ee3\u8c03\u6574\u6211\u4eec\u5728\u91cd\u5b9a\u5411\u5c1d\u8bd5\u8bad\u7ec3\u6807\u9898\u65f6\u4f7f\u7528\u7684 SqueezeBert \u6a21\u578b\u540e\uff0c\u7ed3\u679c\u96c6\u5728\u6d4b\u8bd5\u4e2d\u59cb\u7ec8\u83b7\u5f97 66% \u7684\u51c6\u786e\u7387\u2014\u2014\u7565\u4f4e\u4e8e\u4e4b\u524d\u5efa\u8bae\u7684\u9ad8\u4e8e 70\u767e\u5206\u4e4b\u627f\u8bfa\u3002\u8fd9\u5305\u62ec\u52aa\u529b\u51cf\u5c11\u5728\u5b66\u4e60\u5468\u671f\u4e4b\u95f4\u4e3a\u8c03\u6574\u8f93\u5165\u800c\u91c7\u53d6\u7684\u6b65\u9aa4\u7684\u5927\u5c0f\u2014\u2014\u7528\u4e8e\u907f\u514d\u6a21\u578b\u8fc7\u5ea6\u62df\u5408\u6216\u6b20\u62df\u5408\u7684\u201c\u5b66\u4e60\u7387\u201d\u8d85\u53c2\u6570\u3002\u6211\u4eec\u5927\u5e45\u964d\u4f4e\u4e86\u5b66\u4e60\u7387\uff0c\u56e0\u4e3a\u5f53\u4f60\u6709\u5c11\u91cf\u6570\u636e\uff08\u5c31\u50cf\u6211\u4eec\u8fd9\u91cc\u6240\u505a\u7684\u90a3\u6837\uff09\u5e76\u4e14\u5b66\u4e60\u7387\u8bbe\u7f6e\u5f97\u592a\u9ad8\u65f6\uff0c\u5b83\u57fa\u672c\u4e0a\u4f1a\u5bf9\u6570\u636e\u96c6\u7684\u7ed3\u6784\u548c\u8bed\u6cd5\u505a\u51fa\u66f4\u5927\u7684\u5047\u8bbe\u3002\u51cf\u5c11\u8fd9\u4f1a\u8feb\u4f7f\u6a21\u578b\u5c06\u8fd9\u4e9b\u8df3\u8dc3\u8c03\u6574\u4e3a\u5c0f\u7684\u5a74\u513f\u6b65\u9aa4\u3002\u6211\u4eec\u6700\u521d\u7684\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a 2x10 -5 (2E-5)\uff1b\u6211\u4eec\u5c06\u5176\u964d\u4f4e\u5230 1E-5\u3002\u6211\u4eec\u8fd8\u5c1d\u8bd5\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5df2\u7ecf\u5728\u5927\u91cf\u6587\u672c\u4e0a\u8fdb\u884c\u4e86\u9884\u8bad\u7ec3\uff0c\u79f0\u4e3a DeBERTa\uff08Decoding-enhanced BERT with Disentangled Attention\uff09\u3002 DeBERTa \u662f\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u6a21\u578b\uff1a48 \u4e2a\u53d8\u6362\u5c42\uff0c\u5177\u6709 15 \u4ebf\u4e2a\u53c2\u6570\u3002 DeBERTa \u975e\u5e38\u51fa\u8272\uff0c\u5b83\u5728 SuperGLUE \u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5728\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u4efb\u52a1\u4e0a\u7684\u8868\u73b0\u4f18\u4e8e\u4eba\u7c7b\u2014\u2014\u8fd9\u662f\u7b2c\u4e00\u4e2a\u8fd9\u6837\u505a\u7684\u6a21\u578b\u3002\u751f\u6210\u7684\u90e8\u7f72\u5305\u4e5f\u975e\u5e38\u5927\uff1a2.9 GB\u3002\u6709\u4e86\u6240\u6709\u8fd9\u4e9b\u989d\u5916\u7684\u673a\u5668\u5b66\u4e60\u529f\u80fd\uff0c\u6211\u4eec\u7684\u51c6\u786e\u7387\u53c8\u56de\u5230\u4e86 72%\u3002\u8003\u8651\u5230 DeBERTa \u5728\u53d1\u73b0\u6587\u672c\u4e2d\u7684\u542b\u4e49\u65b9\u9762\u636e\u8bf4\u6bd4\u4eba\u7c7b\u66f4\u597d\uff0c\u8fd9\u79cd\u51c6\u786e\u6027\u6b63\u5982\u4e00\u4f4d\u8457\u540d\u7684\u6838\u7535\u7ad9\u8fd0\u8425\u5546\u66fe\u7ecf\u8bf4\u8fc7\u7684\u90a3\u6837\uff0c\u201c\u4e0d\u662f\u5f88\u597d\uff0c\u4e5f\u4e0d\u662f\u5f88\u7cdf\u7cd5\u201d\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u65f6\u949f\u5728\u6ef4\u7b54\u4f5c\u54cd\u3002\u6211\u9700\u8981\u5c1d\u8bd5\u542f\u52a8\u5e76\u8fd0\u884c\u6211\u81ea\u5df1\u7684\u7248\u672c\uff0c\u4ee5\u4f7f\u7528\u771f\u5b9e\u6570\u636e\u8fdb\u884c\u6d4b\u8bd5\u3002\n\u672c\u5730\u90e8\u7f72\u7684\u5c1d\u8bd5\u5e76\u4e0d\u987a\u5229\uff0c\u5c24\u5176\u662f\u4ece\u6027\u80fd\u89d2\u5ea6\u6765\u770b\u3002\u5982\u679c\u6ca1\u6709\u53ef\u7528\u7684\u826f\u597d GPU\uff0c\u8fd0\u884c\u6a21\u578b\u548c\u7aef\u70b9\u7684 PyTorch \u4f5c\u4e1a\u5b9e\u9645\u4e0a\u4f7f\u6211\u7684\u7cfb\u7edf\u505c\u6b62\u3002\u56e0\u6b64\uff0c\u6211\u91cd\u65b0\u5c1d\u8bd5\u5728 SageMaker \u4e0a\u8fdb\u884c\u90e8\u7f72\u3002\u6211\u5c1d\u8bd5\u81ea\u5df1\u5728 SageMaker \u4e0a\u8fd0\u884c\u8f83\u5c0f\u7684 SqueezeBert \u5efa\u6a21\u4f5c\u4e1a\uff0c\u4f46\u5f88\u5feb\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002\u8bad\u7ec3\u9700\u8981 PyTorch\u3001Python \u673a\u5668\u5b66\u4e60\u6846\u67b6\u4ee5\u53ca\u5176\u4ed6\u6a21\u5757\u7684\u96c6\u5408\u3002\u4f46\u662f\uff0c\u5f53\u6211\u5c06 SageMaker PyTorch \u5185\u6838\u6240\u9700\u7684\u5404\u79cd Python \u6a21\u5757\u5bfc\u5165\u65f6\uff0c\u5c3d\u7ba1\u8fdb\u884c\u4e86\u66f4\u65b0\uff0c\u4f46\u5b83\u4eec\u5e76\u6ca1\u6709\u5b8c\u5168\u5339\u914d\u3002\u7ed3\u679c\uff0c\u5728\u6211\u7684\u672c\u5730\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u7684\u90e8\u5206\u4ee3\u7801\u5931\u8d25\u4e86\uff0c\u6211\u7684\u52aa\u529b\u9677\u5165\u4e86\u4f9d\u8d56\u7ea0\u7f20\u7684\u6ce5\u6f6d\u3002\u539f\u6765\u662f NumPy \u5e93\u7684\u67d0\u4e2a\u7248\u672c\u6709\u95ee\u9898\uff0c\u9664\u975e\u6211\u5f3a\u5236\u91cd\u65b0\u5b89\u88c5\uff08pip uninstall numpy\uff0cpip install numpy -no-cache-dir\uff09\uff0c\u7248\u672c\u76f8\u540c\uff0c\u5e76\u4e14\u9519\u8bef\u4ecd\u7136\u5b58\u200b\u200b\u5728\u3002\u6211\u7ec8\u4e8e\u4fee\u590d\u4e86\u5b83\uff0c\u4f46\u968f\u540e\u9047\u5230\u4e86\u53e6\u4e00\u4e2a\u9519\u8bef\uff0c\u8be5\u9519\u8bef\u4f7f\u6211\u65e0\u6cd5\u8fd0\u884c\u8bad\u7ec3\u4f5c\u4e1a\u5e76\u6307\u793a\u6211\u8054\u7cfb\u5ba2\u6237\u670d\u52a1\uff1aResourceLimitExceeded\uff1a\u8c03\u7528 CreateTrainingJob \u64cd\u4f5c\u65f6\u53d1\u751f\u9519\u8bef (ResourceLimitExceeded)\uff1a\u5e10\u6237\u7ea7\u522b\u201c\u7528\u4e8e\u8bad\u7ec3\u4f5c\u4e1a\u4f7f\u7528\u7684 ml.p3.2xlarge\u201d\u670d\u52a1\u9650\u5236\u4e3a 0 \u4e2a\u5b9e\u4f8b\uff0c\u5f53\u524d\u5229\u7528\u7387\u4e3a 0 \u4e2a\u5b9e\u4f8b\uff0c\u8bf7\u6c42\u589e\u91cf\u4e3a 1 \u4e2a\u5b9e\u4f8b\u3002\u8bf7\u8054\u7cfb AWS \u652f\u6301\u4ee5\u8bf7\u6c42\u63d0\u9ad8\u6b64\u9650\u5236\u3002\u4e3a\u4e86\u5b8c\u5168\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\uff0c\u6211\u9700\u8981\u8ba9 Amazon \u63d0\u9ad8\u6211\u7684\u914d\u989d\u2014\u2014\u8fd9\u4e0d\u662f\u6211\u5f00\u59cb\u63d2\u7535\u65f6\u6240\u9884\u6599\u5230\u7684\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4fee\u590d\uff0c\u4f46\u89e3\u51b3\u6a21\u5757\u51b2\u7a81\u5360\u7528\u4e86\u4e00\u5929\u7684\u5927\u90e8\u5206\u65f6\u95f4\u3002\u5f53\u6211\u5c1d\u8bd5\u4f7f\u7528\u6211\u7684\u4e13\u5bb6\u5e2e\u52a9\u63d0\u4f9b\u7684\u9884\u6784\u5efa\u6a21\u578b\u5c06\u5176\u90e8\u7f72\u4e3a SageMaker \u7aef\u70b9\u65f6\uff0c\u65f6\u95f4\u5df2\u7ecf\u7528\u5b8c\u4e86\u3002\u8fd9\u9879\u5de5\u4f5c\u73b0\u5728\u9700\u8981\u989d\u5916\u7684\u65f6\u95f4\u3002\u8fd9\u5c31\u662f\u6211\u4e00\u76f4\u5728\u8ba8\u8bba\u6a21\u578b\u5728\u9488\u5bf9\u6700\u8fd1\u7684\u6807\u9898\u5bf9\u8fdb\u884c\u6d4b\u8bd5\u65f6\u7684\u8868\u73b0\u2014\u2014\u5982\u679c\u6211\u628a\u6a21\u578b\u5f04\u5230\u90a3\u4e2a\u70b9\u7684\u8bdd\u3002\u5982\u679c\u6211\u6700\u7ec8\u80fd\u505a\u5230\uff0c\u6211\u4f1a\u5c06\u7ed3\u679c\u653e\u5728\u8bc4\u8bba\u548c\u6211\u7684 GitHub \u9875\u9762\u4e0a\u7684\u6ce8\u91ca\u4e2d\u3002", "note_en": "An Amazon engineer told me that when he heard what I was trying to do with Ars headlines, the first thing he thought was that we had chosen a deceptively hard problem. He warned that I needed to be careful about properly setting my expectations. If this was a real business problem... well, the best thing he could do was suggest reframing the problem from &#34;good or bad headline&#34; to something less concrete.\n That statement was the most family-friendly and concise way of framing the outcome of my four-week, part-time crash course in machine learning. As of this moment, my PyTorch kernels aren&#39;t so much torches as they are dumpster fires. The accuracy has improved slightly, thanks to professional intervention, but I am nowhere near deploying a working solution. Today, as I am allegedly on vacation visiting my parents for the first time in over a year, I sat on a couch in their living room working on this project and accidentally launched a model training job locally on the Dell laptop I brought\u2014with a 2.4 GHz Intel Core i3 7100U CPU\u2014instead of in the SageMaker copy of the same Jupyter notebook. The Dell locked up so hard I had to pull the battery out to reboot it.\n But hey, if the machine isn&#39;t necessarily learning, at least I am. We&#39;re almost at the end, but if this were a classroom assignment, my grade on the transcript would probably be an &#34;Incomplete.&#34;\n  To recap: I was given the pairs of headlines used for Ars articles over the past five years with data on the A/B test winners and their relative click rates. Then I was asked to use Amazon Web Services&#39; SageMaker to create a machine-learning algorithm to predict the winner in future pairs of headlines. I ended up going down some ML blind alleys before consulting various Amazon sources for some much-needed help.\n Most of the pieces are in place to finish this project. We (more accurately, my &#34;call a friend at AWS&#34; lifeline) had some success with different modeling approaches, though the accuracy rating (just north of 70 percent) was not as definitive as one would like. I&#39;ve got enough to work with to produce (with some additional elbow grease) a deployed model and code to run predictions on pairs of headlines if I crib their notes and use the algorithms created as a result.\n    But I&#39;ve got to be honest: my efforts to reproduce that work both on my own local server and on SageMaker have fallen flat. In the process of fumbling my way through the intricacies of SageMaker (including forgetting to shut down notebooks, running  automated learning processes that I was later advised were for &#34;enterprise customers,&#34; and other miscues), I&#39;ve burned through more AWS budget than I would be comfortable spending on an unfunded adventure. And while I understand intellectually how to deploy the models that have resulted from all this futzing around, I am still debugging the actual execution of that deployment.\n If nothing else, this project has become a very interesting lesson in all the ways machine-learning projects (and the people behind them) can fail. And failure this time began with the data itself\u2014or even with the question we chose to ask with it.\n I may still get a working solution out of this effort. But in the meantime, I&#39;m going to share the data set on my GitHub that I worked with to provide a more interactive component to this adventure. If you&#39;re able to get better results, be sure to join us next week\u00a0to taunt me in the live wrap-up to this series. (More details on that at the end.)\n  After several iterations of tuning the  SqueezeBert model we used in  our redirected attempt to train for headlines, the resulting set was consistently getting 66 percent accuracy in testing\u2014somewhat less than the previously suggested above-70 percent promise.\n This included efforts to reduce the size of the steps taken between learning cycles to adjust inputs\u2014the &#34;learning rate&#34; hyperparameter that is used to avoid overfitting or underfitting of the model. We reduced the learning rate substantially, because when you have a small amount of data (as we do here) and the learning rate is set too high, it will basically make larger assumptions in terms of the structure and syntax of the data set. Reducing that forces the model to adjust those leaps to little baby steps. Our original learning rate was set to 2x10 -5 (2E-5); we ratcheted that down to 1E-5.\n We also tried a much larger model that had been pre-trained on a vast amount of text, called  DeBERTa (Decoding-enhanced BERT with Disentangled Attention). DeBERTa is a very sophisticated model: 48 Transform layers with 1.5 billion parameters.\n    DeBERTa is so fancy, it has  outperformed humans on natural-language understanding tasks in the  SuperGLUE benchmark\u2014the first model to do so.\n The resulting deployment package is also pretty hefty: 2.9 gigabytes. With all that additional machine-learning heft, we got back up to 72 percent accuracy. Considering that DeBERTa is supposedly better than a human when it comes to spotting meaning within text, this accuracy is, as a famous nuclear power plant operator once said, &#34;not great, not terrible.&#34;\n  On top of that, the clock was ticking. I needed to try to get a version of my own up and running to test out with real data.\n An attempt at a local deployment did not go well, particularly from a performance perspective. Without a good GPU available, the PyTorch jobs running the model and the endpoint literally brought my system to a halt.\n So, I returned to trying to deploy on SageMaker. I attempted to run the smaller SqueezeBert modeling job on SageMaker on my own, but it quickly got more complicated. Training requires  PyTorch, the Python machine-learning framework, as well as a collection of other modules. But when I imported the various Python modules required to my SageMaker PyTorch kernel, they didn&#39;t match up cleanly despite updates.\n As a result, parts of the code that worked on my local server failed, and my efforts became mired in a morass of dependency entanglement. It turned out to be  a problem with a version of the NumPy library, except when I forced a reinstall ( pip uninstall numpy,  pip install numpy -no-cache-dir), the version was the same, and the error persisted. I finally got it fixed, but then I was met with another error that hard-stopped me from running the training job and instructed me to contact customer service:\n ResourceLimitExceeded: An error occurred (ResourceLimitExceeded) when calling the CreateTrainingJob operation: The account-level service limit &#39;ml.p3.2xlarge for training job usage&#39; is 0 Instances, with current utilization of 0 Instances and a request delta of 1 Instances. Please contact AWS support to request an increase for this limit.\n In order to fully complete this effort, I needed to get Amazon to up my quota\u2014not something I had anticipated when I started plugging away. It&#39;s an easy fix, but troubleshooting the module conflicts ate up most of a day. And the clock ran out on me as I was attempting to side-step using the pre-built model my expert help provided, deploying it as a SageMaker endpoint.\n This effort is now in extra time. This is where I would have been discussing how the model did in testing against recent headline pairs\u2014if I ever got the model to that point. If I can ultimately make it, I&#39;ll put the outcome in the comments and in a note on my GitHub page.", "posttime": "2021-07-22 23:38:45", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "ai,\u6a21\u578b", "title": "Ars AI \u5934\u6761\u5b9e\u9a8c\u5927\u7ed3\u5c40\u2014\u2014\u6211\u4eec\u6765\u4e86\uff0c\u6211\u4eec\u770b\u5230\u4e86\uff0c\u6211\u4eec\u7528\u4e86\u5f88\u591a\u8ba1\u7b97\u65f6\u95f4", "title_en": "Ars AI headline experiment finale\u2014we came, we saw, we used a lot of compute time", "transed": 1, "url": "https://arstechnica.com/information-technology/2021/07/ars-ai-headline-experiment-conclusion-we-came-we-saw-we-used-a-lot-of-compute-time/", "via": "", "real_tags": ["ai", "\u6a21\u578b"]}]
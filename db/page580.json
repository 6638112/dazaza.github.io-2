[{"category": "", "categoryclass": "", "imagename": "f54888cf05afcb967f140e22544aeb6a.jpg", "infoid": 1017263, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f01\u4e1a\u81ea\u7136\u8bed\u8a00\u5904\u7406(NLP)\u6280\u672f\u4f9b\u5e94\u5546Expert System\u4eca\u5929\u83b7\u5f972940\u4e07\u7f8e\u5143\u7684\u878d\u8d44\uff0c\u5176\u4e2d2000\u4e07\u7f8e\u5143\u6765\u81ea\u673a\u6784\u6295\u8d44\u8005\uff0c\u5176\u4f59940\u4e07\u7f8e\u5143\u6765\u81ea\u884c\u4f7f\u80a1\u4e1c\u6743\u5229\u3002\u8be5\u516c\u53f8\u5c06\u5229\u7528\u8fd9\u7b14\u8d44\u91d1\u52a0\u5feb\u5728\u7f8e\u56fd\u7684\u589e\u957f\uff0c\u5e76\u5f00\u53d1\u652f\u6301\u521b\u5efa\u4eba\u5de5\u667a\u80fd\u9a71\u52a8\u7684\u81ea\u7136\u8bed\u8a00\u89e3\u51b3\u65b9\u6848\u7684\u65b0\u5de5\u5177\u3002\n\u4f01\u4e1a\u8981\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u548c\u8d44\u91d1\u6765\u5904\u7406\u53d1\u7968\u3001\u8ba2\u5355\u3001\u62a5\u544a\u3001\u7535\u5b50\u90ae\u4ef6\u548c\u5176\u4ed6\u6587\u4ef6\u3002\u6839\u636eIDC\u7684\u6570\u636e\uff0c\u52302025\u5e74\uff0c80%\u7684\u6570\u636e\u5c06\u662f\u975e\u7ed3\u6784\u5316\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u5c5e\u6027\u5c06\u4f7f\u641c\u7d22\u548c\u5206\u6790\u53d8\u5f97\u5177\u6709\u6311\u6218\u6027\u3002\u9884\u8ba1\u8fd9\u5c06\u52a0\u5267\u666e\u904d\u5b58\u5728\u7684\u6570\u636e\u5229\u7528\u4e0d\u8db3\u7684\u95ee\u9898\u3002Forester\u62a5\u544a\u79f0\uff0c\u4f01\u4e1a\u518560%\u81f373%\u7684\u6570\u636e\u5f53\u524d\u672a\u7528\u4e8e\u5206\u6790\u3002\n\u4e13\u5bb6\u7cfb\u7edf\u7684\u65d7\u8230\u8f6f\u4ef6-Cogito Discover-\u5229\u7528\u4eba\u5de5\u667a\u80fd\u8de8\u5206\u7c7b\u6267\u884c\u5206\u6790\u3001\u63d0\u53d6\u548c\u5206\u7c7b\uff0c\u4f7fXML\u3001RDF\u548c\u5176\u4ed6\u683c\u5f0f\u7684\u6587\u672c\u53ef\u7528\u4e8e\u81ea\u52a8\u5316\u7b49\u3002\u5229\u7528\u81ea\u7136\u8bed\u8a00\u7406\u89e3(NLU)\u5f15\u64ce\uff0cCogito Discover\u8bfb\u53d6\u548c\u8bc6\u522b\u6587\u6863\u5185\u5bb9\uff0c\u5e76\u5c1d\u8bd5\u627e\u51fa\u4e0a\u4e0b\u6587\u3001\u6982\u5ff5\u3001\u5b9e\u4f53\u548c\u5173\u7cfb\u3002\u5b83\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\u4eba\u5458\u3001\u5730\u70b9\u3001\u7ec4\u7ec7\u3001URL\u3001\u7535\u5b50\u90ae\u4ef6\u3001\u7535\u8bdd\u53f7\u7801\u3001\u65e5\u671f\u548c\u503c\u7b49\u5185\u5bb9\uff0c\u4ee5\u53ca\u5176\u4ed6\u7279\u5b9a\u4e8e\u9886\u57df\u7684\u6982\u5ff5\uff0c\u4e0e\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\u548c\u641c\u7d22\u5f15\u64ce\u3001\u6863\u6848\u548c\u6848\u4f8b\u7ba1\u7406\u5e73\u53f0\u3001\u673a\u5668\u4eba\u6d41\u7a0b\u81ea\u52a8\u5316\u89e3\u51b3\u65b9\u6848\u4ee5\u53ca\u5546\u4e1a\u667a\u80fd\u5e94\u7528\u7a0b\u5e8f\u534f\u540c\u5de5\u4f5c\u3002\nCogito\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5f00\u7bb1\u5373\u7528\u7684\u548c\u53ef\u5b9a\u5236\u7684\u5143\u6570\u636e\u81ea\u52a8\u6807\u8bb0\u4e3b\u9898\u6765\u4fc3\u8fdb\u5185\u5bb9\u4e30\u5bcc\u3002\u5728\u7269\u6d41\u7b49\u884c\u4e1a\u4e2d\uff0c\u5e73\u53f0\u53ef\u4ee5\u4f7f\u7528\u5143\u6570\u636e\u6765\u8ddf\u8e2a\u6765\u6e90\u5e76\u627e\u5230\u7b2c\u4e09\u65b9\u5173\u7cfb\u4e2d\u7684\u98ce\u9669\u8bc1\u636e-\u76d1\u63a7\u6765\u81ea\u5ba2\u6237\u6e20\u9053\u7684\u6570\u636e\u7b49\u4fe1\u606f\uff0c\u4ee5\u5206\u6790\u8d8b\u52bf\u5e76\u8bc6\u522b\u6f5c\u5728\u673a\u4f1a\u3002\n\u9664\u4e86\u79d1\u5409\u6258\uff0c\u4e13\u5bb6\u7cfb\u7edf\u8fd8\u63d0\u4f9b\u4e34\u5e8a\u7814\u7a76\u5bfc\u822a\u5668\uff0c\u8be5\u5bfc\u822a\u5668\u4e3a\u751f\u7269\u533b\u5b66\u5ba2\u6237\u63d0\u4f9b\u4e00\u4e2a\u65e8\u5728\u63a8\u52a8\u65b0\u51a0\u80ba\u708e\u7b49\u4f20\u67d3\u75c5\u7597\u6cd5\u7814\u7a76\u7684\u5e73\u53f0\u3002\u4e92\u8865\u533b\u5b66\u60c5\u62a5\u5e73\u53f0\u7edf\u7b79\u4e86\u4e0e\u751f\u7269\u98ce\u9669\u76f8\u5173\u7684\u6570\u5341\u4ebf\u6570\u636e\u70b9\u7684\u83b7\u53d6\u3001\u641c\u7d22\u548c\u63a2\u7d22\u3002\u4e0e\u6b64\u540c\u65f6\uff0cCogito for Life Science\u5c06\u4eba\u5de5\u667a\u80fd\u548cNLP\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u7406\u89e3\u79d1\u5b66\u6587\u732e\uff0c\u5305\u62ec\u51fa\u7248\u7269\u3001\u4e13\u5229\u3001\u4e34\u5e8a\u8bd5\u9a8c\u548c\u533b\u7597\u62a5\u544a\u3002\n\u4e13\u5bb6\u7cfb\u7edf\u7684\u6295\u8d44\u7ec4\u5408\u8fd8\u5305\u62ecCogito for Claims\uff0c\u8be5\u516c\u53f8\u4f7f\u7528\u57fa\u4e8e\u4eba\u5de5\u667a\u80fd\u7684NLU\u8868\u9762\u4e0a\u51cf\u5c11\u4fdd\u9669\u6b3a\u8bc8\u652f\u4ed8\u548c\u6cc4\u6f0f\uff0c\u52a0\u5feb\u5ba2\u6237\u548c\u7ecf\u7eaa\u4eba\u7684\u54cd\u5e94\uff0c\u5e76\u5728\u4e0d\u589e\u52a0\u5458\u5de5\u7684\u60c5\u51b5\u4e0b\u5bf9\u4fdd\u9669\u7d22\u8d54\u6fc0\u589e\u505a\u51fa\u56de\u5e94\u3002\u5728\u5ba2\u6237\u670d\u52a1\u652f\u6301\u65b9\u9762\uff0c\u6709Cogito Answers\uff0c\u5b83\u652f\u6301\u5ba2\u6237\u548c\u5185\u90e8\u5458\u5de5\u4e4b\u95f4\u4f7f\u7528\u4e1a\u52a1\u8fdb\u884c\u201c\u4eba\u6027\u5316\u201d\u4ea4\u4e92\uff0c\u4ee5\u63d0\u4f9b\u5e38\u89c1\u95ee\u9898\u7684\u7b54\u6848\u3002\u540c\u65f6\uff0cCogito\u667a\u80fd\u5e73\u53f0\u901a\u8fc7\u63d0\u4f9b\u53ef\u64cd\u4f5c\u7684\u6d1e\u5bdf\u529b\uff0c\u5bf9\u975e\u7ed3\u6784\u5316\u6570\u636e\u96c6\u8fdb\u884c\u5206\u6790\uff0c\u4e3a\u5b9e\u65f6\u6570\u636e\u5de5\u4f5c\u6d41\u7ec4\u7ec7\u4fe1\u606f\u3002\nExpert System\u7684\u5ba2\u6237\u5305\u62ec\u9053\u743c\u65af\u3001\u82cf\u9ece\u4e16\u3001\u8d5b\u8bfa\u83f2\u3001\u6c83\u8fbe\u4e30\u548c\u7f8e\u56fd\u653f\u5e9c\u3002\u6b64\u5916\uff0cExpert System\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u4e0e\u52b3\u5408\u793e\u5408\u4f5c\uff0c\u652f\u6301\u8be5\u516c\u53f8\u7684\u5ba2\u6237\u652f\u6301\u548c\u4e1a\u52a1\u6d41\u7a0b\u81ea\u52a8\u5316\u8ba1\u5212\uff0c\u4e0e\u8377\u5170\u56fd\u9645\u96c6\u56e2(ING)\u5408\u4f5c\uff0c\u4e3a\u7f51\u7edc\u6784\u5efa\u8bed\u4e49\u7814\u7a76\u5f15\u64ce\uff0c\u5e76\u4e0e3M\u5408\u4f5c\uff0c\u90e8\u7f72\u533b\u7597\u6587\u6863\u7f16\u7801\u548c\u63a7\u5236\u7cfb\u7edf\u3002\nExpert System\u6210\u7acb\u4e8e1989\u5e74\uff0c\u5728\u610f\u5927\u5229\u6469\u5fb7\u7eb3\u548c\u9a6c\u91cc\u5170\u5dde\u7f57\u514b\u7ef4\u5c14\u8bbe\u6709\u529e\u4e8b\u5904\u3002\u6700\u65b0\u7684\u8fd9\u7b14\u6295\u8d44\u4f7f\u8be5\u516c\u53f8\u57282020\u5e74\u7b79\u96c6\u7684\u8d44\u91d1\u603b\u989d\u8fbe\u52303920\u4e07\u7f8e\u5143\uff0c\u6b64\u524d\u8be5\u516c\u53f8\u51fa\u552e\u4e86\u7f51\u7edc\u6218\u516c\u53f8CY4Gate\u7684\u80a1\u4efd\uff0c\u5e76\u7b79\u96c6\u4e86350\u4e07\u7f8e\u5143\u7684\u8d44\u672c\u3002", "note_en": "Enterprise  natural language processing (NLP) technologies vendor  Expert System today secured $29.4 million in funding, $20 million of which came from institutional investors, with the remaining $9.4 million from the exercise of shareholder rights. The company will use the funds to accelerate growth in the U.S. and develop new tools supporting the creation of AI-driven natural language solutions.\n Businesses spend an enormous amount of time and capital processing invoices, order forms, reports, emails, and other files. According to  IDC, 80% of this data will be unstructured by 2025, meaning it will have attributes that make it challenging to search for and analyze. This is expected to contribute to the widespread problem of data-underutilization. Forester reports that between 60% and 73% of data within an enterprise is  not currently used for analytics.\n  Expert System\u2019s flagship software \u2014 Cogito Discover \u2014 taps AI to perform analytics, extraction, and categorization across taxonomies, making text from XML, RDF, and other formats available for automation and more. Leveraging a natural language understanding (NLU) engine, Cogito Discover reads and identifies the contents of a document and attempts to suss out context, concepts, entities, and relationships. It can automatically identify things like people, places, organizations, URLs, emails, phone numbers, dates, and values, as well as other domain-specific concepts, working in tandem with content management systems and search engines, archival and case management platforms, robotic process automation solutions, and business intelligence applications.\n Cogito can facilitate content enrichment by automating the tagging of topics using both out-of-the-box and customizable metadata. In industries like logistics, the platform can employ the metadata to track sources and find evidence of risks in third-party relationships \u2014 monitoring information such as data from customer channels to analyze trends and identify potential opportunities.\n Beyond Cogito, Expert System offers Clinical Research Navigator, which supports biomedical clients with a platform designed to drive research into therapies for infectious diseases like COVID-19. The complementary Medical Intelligence Platform orchestrates the acquisition, search, and exploration of billions of data points related to biological risks. Meanwhile, Cogito for Life Sciences brings together AI and NLP to comprehend scientific literature, including publications, patents, clinical trials, and medical reports.\n Rounding out Expert System\u2019s portfolio is Cogito for Claims, which uses AI-based NLU to ostensibly mitigate insurance fraud payouts and leakage, speed customer and broker response, and respond to surges in insurance claims without increasing headcount. On the customer service support side, there\u2019s Cogito Answers, which enables \u201chuman-like\u201d interactions between customers and internal staff using business to provide answers to common questions. Meanwhile, the Cogito Intelligence Platform performs analysis of unstructured data sets to organize information for real-time data workflows by providing actionable insights.\n Expert System\u2019s clients include the Dow Jones, Zurich, Sanofi, Vodafone, and the U.S. government. In addition, Expert System says it has worked with Lloyd\u2019s to support the company\u2019s customer support and business process automation initiatives, with ING to build semantic research engine for the web, and with 3M to deploy systems for medical documentation coding and control.\n Expert System was founded in 1989 and has offices in Modena, Italy and Rockville, Maryland. The latest investment brings the company\u2019s total raised in 2020 to $39.2 million, following the sale of a stake in cyber warfare company CY4Gate and a $3.5 million capital raise.", "posttime": "2020-08-10 07:52:24", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4eba\u5de5\u667a\u80fd,nlp,system,\u6570\u636e", "title": "Expert System\u662f\u4e00\u5bb6\u6210\u7acb\u4e8e1989\u5e74\u7684\u4f01\u4e1aNLP\u4f9b\u5e94\u5546\uff0c\u5728IPO\u540e\u4e3a\u5176\u4eba\u5de5\u667a\u80fd\u6587\u672c\u63d0\u53d6\u548c\u5206\u6790\u5de5\u5177\u7b79\u96c6\u4e862940\u4e07\u7f8e\u5143\u7684\u8d44\u91d1", "title_en": "Expert System, an enterprise NLP vendor founded in 1989, raises $29.4M in post-IPO financing for its AI-powered text extraction and analysis tools", "transed": 1, "url": "https://venturebeat.com/2020/08/05/expert-system-raises-29-4-million-for-ai-text-extraction-and-analysis/", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "nlp", "system", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1017261, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u60a8\u8fd8\u8bb0\u5f97\u672c\u7cfb\u5217\u7684\u7b2c1\u90e8\u5206\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u53ea\u6df1\u5165\u7814\u7a76\u4e86Retroputer Basic\u7684\u7b2c\u4e00\u9636\u6bb5\u89e3\u6790-\u5373\u5c06\u8f93\u5165\u7684\u884c\u8f6c\u6362\u4e3a\u5927\u5199\u5e76\u68c0\u67e5\u5f15\u53f7\u662f\u5426\u6b63\u786e\u5339\u914d\u3002(\u6ce8\u610f\uff1a\u5e94\u8be5\u6307\u51fa\u7684\u662f\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u90a3\u91cc\u8fdb\u884c\u989d\u5916\u7684\u68c0\u67e5-\u6bd4\u5982\u5339\u914d\u5706\u62ec\u53f7\uff0c\u4f46\u6211\u4eec\u76ee\u524d\u4e0d\u8fd9\u6837\u505a\u3002)\u3002\n\u6211\u8fd8\u63d0\u5230\uff0c\u6211\u60f3\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff0c\u4eca\u5929\u6211\u4eec\u5bf9\u975e\u5e38\u6709\u9650\u7684\u6807\u51c6\u5e93(\u5c24\u5176\u662f\u4e0eJavaScript\u76f8\u5173\u7684\u5e93)\u6709\u591a\u4e48\u60f3\u5f53\u7136\u3002\u8fd9\u91cc\u63cf\u8ff0\u7684\u6ca1\u6709\u4ec0\u4e48\u662f\u795e\u5947\u7684\uff0c\u4f46\u6709\u65f6\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u7684\u5de5\u5177\u662f\u7406\u6240\u5f53\u7136\u7684\uff0c\u6211\u53d1\u73b0\u4e86\u89e3\u5f15\u64ce\u76d6\u80cc\u540e\u53d1\u751f\u7684\u4e8b\u60c5\u662f\u5f88\u6709\u7528\u7684\u3002\n\u6b63\u5982\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\uff0c\u90a3\u4e2a\u65f6\u4ee3\u7684\u57fa\u7840\u4eba\u7269\u5e38\u7528\u7684\u4e00\u79cd\u7b56\u7565\u662f\u6807\u8bb0\u5316\u3002\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\u548c\u63d0\u9ad8\u6267\u884c\u901f\u5ea6\uff0c\u5173\u952e\u5b57\u88ab\u201c\u538b\u7f29\u201d\u6210\u5355\u5b57\u8282\u4ee4\u724c(\u5982\u679c\u9700\u8981\u66f4\u591a\u5173\u952e\u5b57\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e24\u4e2a\u5b57\u8282)\u3002\n\u5047\u8bbe\u60a8\u6709\u4e00\u884c\u7b80\u5355\u7684\u4ee3\u7801\u6765\u6e05\u9664\u5c4f\u5e55\u5e76\u6253\u5370\u73b0\u5728\u5e38\u89c1\u7684\u95ee\u5019\u8bed\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u867d\u7136\u8fd9\u672c\u8eab\u5e76\u4e0d\u5360\u7528\u5927\u91cf\u5185\u5b58\uff0c\u4f46\u5982\u679c\u60a8\u7f16\u5199\u4e00\u4e2a\u5f88\u957f\u7684\u7a0b\u5e8f\uff0c\u90a3\u4e48\u8be5\u7a0b\u5e8f\u4e2d\u7684\u5f88\u591a\u5355\u8bcd\u90fd\u5c06\u662f\u5173\u952e\u5b57\u3002\u5982\u679c\u6211\u4eec\u5c06\u5b83\u4eec\u538b\u7f29(\u6807\u8bb0\u5316)\uff0c\u6211\u4eec\u53ef\u4ee5\u8282\u7701\u76f8\u5f53\u5927\u7684\u7a7a\u95f4\u3002\u4f8b\u5982\uff0c\u5728\u6807\u8bb0\u5316\u4e0a\u9762\u7684\u884c\u4e4b\u540e\uff0c\u60a8\u5c06\u5728\u5185\u5b58\u4e2d\u770b\u5230\u66f4\u591a\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684\u5185\u5bb9\uff1a\n\u8fd9\u5e76\u4e0d\u9700\u8981\u592a\u591a\u7684\u52aa\u529b\u5c31\u53ef\u4ee5\u5c06\u5176\u6620\u5c04\u56de\u6211\u4eec\u6700\u521d\u7684\u58f0\u660e\uff1a\n\u8fd9\u53ef\u80fd\u770b\u8d77\u6765\u5de5\u4f5c\u91cf\u5f88\u5927\uff0c\u4f46\u8282\u7701\u7684\u7a7a\u95f4\u53ef\u80fd\u4f1a\u5f88\u5927\u3002\u8fd9\u5728\u8fd9\u91cc\u4e0d\u662f\u5f88\u591a\uff0c\u4f46\u5373\u4fbf\u5982\u6b64\uff0c\u60a8\u5e94\u8be5\u80fd\u591f\u60f3\u8c61\u5b83\u662f\u5982\u4f55\u8fc5\u901f\u79ef\u7d2f\u8d77\u6765\u7684\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u7684\u538b\u7f29\u7ed3\u679c\u662f19\u4e2a\u5b57\u8282\u3002\u539f\u59cb\u6587\u672c\u4e3a26\u5b57\u8282(\u7b97\u4e0a\u7ec8\u6b62NUL)\u3002\n\u5982\u679c\u60a8\u662f\u5728RAM\u975e\u5e38\u6709\u9650\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u7684\u57fa\u672c\u89e3\u91ca\u5668\uff0c\u90a3\u4e48\u8282\u7701\u4e00\u4e9b\u7a7a\u95f4\u5c31\u5f88\u91cd\u8981\u3002\u4e00\u4e9b\u57fa\u672c\u7684\u5e94\u7528\u7a0b\u5e8f\u53ea\u6709\u4e0d\u52301\u5343\u5b57\u8282\u7684RAM\u7528\u4e8e\u7528\u6237\u7a0b\u5e8f\uff0c\u56e0\u6b64\u8fd9\u79cd\u5904\u7406\u786e\u5b9e\u975e\u5e38\u91cd\u8981\uff0c\u5373\u4f7f\u5b83\u6ca1\u6709\u5e26\u6765\u989d\u5916\u7684\u597d\u5904\uff0c\u4e5f\u4f1a\u5f88\u6709\u5438\u5f15\u529b\u3002\n\u597d\u7684-\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u624d\u80fd\u628a\u8fd9\u6837\u7684\u4e1c\u897f\u6807\u8bb0\u5316\u5462\uff1f\u8d77\u521d\uff0c\u5b83\u5728JavaScript\u4e2d\u4f3c\u4e4e\u76f8\u5f53\u5fae\u4e0d\u8db3\u9053\u3002\u5728\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6570\u7ec4\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u5c06\u6bcf\u4e2a\u5173\u952e\u5b57\u5feb\u901f\u66ff\u6362\u4e3a\u76f8\u5e94\u7684\u6807\u8bb0\u3002\u5bf9\u5417\uff1f\nConst tokens=[&#34\uff1bcls&#34\uff1b\uff0c&#34\uff1bprint&#34\uff1b\uff0c&#34\uff1b\uff1a&#34\uff1b]\uff1b\u51fd\u6570tokenize(InStr){const newStr=inStr\uff1btokens.forEach((Token\uff0cidx)=&gt\uff1bnewStr=newStr.place(new RegExp(Token\uff0c&#34\uff1bg&#34\uff1b)\uff0cString.fromCharCode(128+idx))\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5f53\u60a8\u610f\u8bc6\u5230\u6211\u4eec\u4e0d\u80fd\u7740\u624b\u66ff\u6362\u5b57\u7b26\u4e32\u6587\u5b57\u4e2d\u7684\u6807\u8bb0\u65f6\uff0c\u8fd9\u4e00\u5207\u90fd\u4f1a\u5d29\u6e83\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5b57\u7b26\u4e00\u4e2a\u5b57\u7b26\u5730\u5904\u7406\uff0c\u8bb0\u4f4f\u4e0a\u4e0b\u6587\uff0c\u4ee5\u907f\u514d\u5904\u7406\u5b9e\u9645\u4e0a\u4e0d\u662f\u5173\u952e\u5b57\u7684\u4e1c\u897f\u3002\n\u8fd9\u4e2a\u65b0\u7b97\u6cd5\u4e0eRetroputer\u4e2d\u7684\u6c47\u7f16\u8bed\u8a00\u4ee3\u7801\u66f4\u52a0\u5339\u914d-\u4f46\u662fJS\u4ecd\u7136\u4f7f\u4e8b\u60c5\u53d8\u5f97\u5bb9\u6613\u5f97\u591a\u3002\u4e0b\u9762\u662f\u8be5JS\u4ee3\u7801\u7684\u5f00\u59cb\u90e8\u5206(\u6211\u4eec\u5c06\u5728\u6574\u4e2a\u5e16\u5b50\u4e2d\u586b\u5145\u5b83)\uff1a\nConst toens=[&#34\uff1bcls&#34\uff1b\uff0c&#34\uff1bprint&#34\uff1b\uff0c&#34\uff1b\uff1a&#34\uff1b]\uff1b\u51fd\u6570tokenize(InStr){let out=[]\uff1b//\u8fd4\u56de\u503c\u4e3a&#34\uff1bcrunked&#34\uff1barray let idx=0\uff1b//\u7d22\u5f15\u5230inStr let ch=&#34\uff1b&#34\uff1b//\u5f53\u524d\u5b57\u7b26\u540c\u65f6(idx&lt\uff1binStr.length){ch=inStr.length\u3002//\u83b7\u53d6\u5f53\u524d\u5b57\u7b26\u7f16\u7801//\u6211\u4eec\u7684\u903b\u8f91\u5c06\u8f6c\u5230\u8fd9\u91cc\u3002push(Ch)\uff1b//\u73b0\u5728\u6309\u4e0b\u5b57\u7b26idx++\uff1b//\u7ee7\u7eed(Next Char)}out\u3002ush(0)\uff1b//\u6211\u4eec\u4ee5NUL Return Out\u7ed3\u675f\uff1b}\u3002\n\u6211\u4eec\u4ece\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4ee4\u724c\u5217\u8868\u5f00\u59cb\uff0c\u56e0\u4e3a\u6ca1\u6709\u4eba\u5e0c\u671b\u770b\u5230\u8fd9\u79cd\u683c\u5f0f\u7684\u6574\u4e2a\u8868(\u5b83\u5f88\u957f\uff0cRetroputer\u5b9e\u9645\u4e0a\u662f\u4ece\u4e00\u4e2aJS\u6587\u4ef6\u6784\u5efa\u5176\u4ee4\u724c\u8868\uff01)\uff0c\u4f46\u662f\u5bf9\u4e8e\u6211\u4eec\u8fd9\u91cc\u7684\u76ee\u7684\u6765\u8bf4\uff0c\u8fd9\u5e94\u8be5\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u8fd9\u91cc\u7684\u60f3\u6cd5\u662f\uff0c\u5f53\u6211\u4eec\u770b\u5230\u4ee4\u724c\u65f6\uff0c\u6211\u4eec\u5c06\u5728\u8f93\u51fa\u6570\u7ec4\u4e2d\u8bb0\u5f55\u5b83\u7684\u7d22\u5f15\u3002\n\u6b64\u65f6\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u51fd\u6570\uff0c\u76ee\u524d\u4ec5\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5176\u7b49\u6548\u7684\u5b57\u7b26\u4ee3\u7801\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u5b83\u6ca1\u6709\u591a\u5927\u7528\u5904\uff0c\u4f46\u53ef\u4ee5\u4f5c\u4e3a\u6709\u7528\u7684\u811a\u624b\u67b6\u3002\nDo{call_get-source-index#get next character index(In Y)dl\uff1a=&lt\uff1bbp+source&gt\uff1b\uff0cy#\u4ece\u6211\u4eec\u7684\u6e90\u5b57\u7b26\u4e32(Ch)\u4e2d\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u5b57\u7b26call_adv-source-index#\u524d\u8fdb\u6211\u4eec\u7684\u6e90\u7d22\u5f15call_get-target-index#\u83b7\u53d6\u76ee\u6807\u4e2d\u7684\u4f4d\u7f6e(&#34\uff1bout&#34\uff1b\u5728JS\u4e2d)&lt\uff1bbp+target&gt\uff1b\uff0cy\uff1a=dl#store to target(out[y]=ch)call_adv-\u3002\u5982\u679c\u662f\uff0c\u5219\u4e2d\u65ad}While\uff01Z\n\u6211\u6ca1\u6709\u5305\u62ecGET-SOURCE-INDEX\u6216\u4e0a\u9762\u7684\u5176\u4ed6\u51fd\u6570\uff0c\u56e0\u4e3a\u5b83\u4eec\u6309\u7167\u5b83\u4eec\u5728TIN\u4e0a\u8bf4\u7684\u505a\uff0c\u53ea\u662f\u83b7\u53d6\u3001\u8bbe\u7f6e\u6216\u63a8\u8fdb\u6211\u4eec\u7684\u6e90\u7d22\u5f15\u548c\u76ee\u6807\u7d22\u5f15\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0eJS\u4e0d\u540c\u7684\u662f\uff0c\u6211\u4eec\u6ca1\u6709\u7528\u6c47\u7f16\u8bed\u8a00\u52a8\u6001\u5206\u914d\u6570\u7ec4\uff0c\u56e0\u6b64\u8be5\u7b97\u6cd5\u9884\u5148\u5206\u914d\u4e86\u4e00\u4e2a\u5408\u7406\u5927\u5c0f\u7684\u7f13\u51b2\u533a\u3002\u5f53\u6211\u4eec\u904d\u5386\u8f93\u5165\u5b57\u7b26\u4e32\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u77e5\u9053\u5c06\u4e0b\u4e00\u4e2a\u4ee4\u724c\u5199\u5165\u76ee\u6807\u7f13\u51b2\u533a\u7684\u4f4d\u7f6e\uff0c\u8fd9\u5c31\u662f\u4e0a\u9762\u7684\u76ee\u6807\u7d22\u5f15\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u3002\u4e0a\u9762\u8c03\u7528\u7684\u6bcf\u4e2a\u51fd\u6570\u90fd\u4ee5y\u4e3a\u5355\u4f4d\u8fd4\u56de\u7d22\u5f15\u3002\u4f8b\u5982\uff0c_adv-target-index\u51fd\u6570\u5c06\u76ee\u6807\u7d22\u5f15\u524d\u8fdb\u4e00(\u76f8\u5f53\u4e8ey++)\u3002\n\u6211\u4eec\u5e94\u8be5\u6ce8\u610f\u7684\u4e00\u4ef6\u4e8b\u662f\uff0c\u5b57\u7b26\u4e32\u6587\u5b57\u53ef\u80fd\u4f1a\u6df7\u6dc6\u6211\u4eec\u7684\u8bb0\u53f7\u8d4b\u503c\u5668-\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u5730\u5c06\u5339\u914d\u5173\u952e\u5b57\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u66ff\u6362\u4e3a\u8bb0\u53f7\u7684\u503c\u3002\u5982\u679c\u6211\u4eec\u770b\u5230\u4e00\u4e2a\u5e26\u6709\u201ccls\u201d\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u5c1d\u8bd5\u5bf9\u5176\u8fdb\u884c\u6807\u8bb0\u5316\u3002\u5b83\u4e0d\u5e94\u8be5\u662f\u53ef\u6267\u884c\u7684\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5176\u6253\u5370\u4e3a\u2026\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5c06\u6253\u5370\u4e0e\u4ee4\u724c\u76f8\u5bf9\u5e94\u7684\u5b57\u8282\u3002\u4e0d\u592a\u53ef\u80fd\u662f\u5f00\u53d1\u5546\u60f3\u8981\u7684\u3002\n\u53e6\u4e00\u65b9\u9762\uff0c\u6570\u5b57\u6587\u5b57\u5e94\u8be5\u4e0d\u4f1a\u6709\u540c\u6837\u7684\u95ee\u9898\uff0c\u56e0\u4e3aBasic\u6ca1\u6709\u4efb\u4f55\u6570\u5b57\u4f5c\u4e3a\u5173\u952e\u5b57\u3002\u5373\u4fbf\u5982\u6b64\uff0c\u5982\u679c\u6211\u4eec\u67e5\u770b\u7684\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u8fdb\u884c\u5173\u952e\u5b57\u641c\u7d22\u662f\u6ca1\u6709\u610f\u4e49\u7684--\u4e3a\u4ec0\u4e48\u8981\u6d6a\u8d39\u65f6\u95f4\u5462\uff1f\n\u56e0\u6b64\uff0c\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u6b63\u5728\u542f\u52a8\u4e00\u4e2a\u5b57\u7b26\u4e32-\u8fd9\u5728JS\u4e2d\u5e76\u4e0d\u592a\u96be\u505a\u5230\uff1a\nIf(ch=34){out.ush(0xFB)\uff1b//\u4ee3\u7801\u4e2d\u7684\u5b57\u7b26\u4e32\u4ee4\u724cidx++\uff1bch=inStr.charCodeAt(Idx)\uff1b//\u83b7\u53d6\u5f15\u53f7\u540e\u7684\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6(ch\uff01==34&amp\uff1b&amp\uff1bidx&lt\uff1binStr.length){out.ush(Ch)\uff1bidx++\uff1bch=inStr.charCodeAt(Idx)\uff1b}\uff1bidx++\uff1b//\u8df3\u8fc7\u5f15\u53f7\u3002\n\u53cc\u5f15\u53f7\u8868\u793a\u4e3a\u5b57\u7b26\u4ee3\u780134\u3002\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u53ef\u4ee5\u8bc6\u522b\u66f4\u591a\u7684\u5f15\u53f7\u6837\u5f0f(\u5982JS\u6216C)\uff0c\u4f46\u662fBASIC\u5728\u8fd9\u91cc\u5f88\u7b80\u5355\uff1a\u53cc\u5f15\u53f7\u6216\u65ad\u53f7\u3002\n\u4e00\u65e6\u6211\u4eec\u770b\u5230\u5f00\u59cb\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u4f7f\u7528\u5269\u4f59\u7684\u5b57\u7b26\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u6211\u4eec\u7684\u8fd4\u56de\u6570\u7ec4\u4e2d\uff0c\u76f4\u5230\u6211\u4eec\u770b\u5230\u53e6\u4e00\u4e2a\u5f15\u53f7\u3002\n\u5f53\u6211\u4eec\u8bfb\u5165\u6574\u4e2a\u5b57\u7b26\u4e32\u65f6\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u4e00\u4e2aNUL\u5b57\u8282\uff0c\u56e0\u4e3aRetroputer Basic\u4f7f\u7528C\u6837\u5f0f\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6211\u4eec\u60f3\u4f7f\u7528Pascal\u6837\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5e76\u786e\u4fdd\u63d2\u5165\u5b57\u7b26\u4e32\u6587\u5b57\u7684\u957f\u5ea6\u3002\u4e0d\u7ba1\u600e\u6837\uff0c\u90fd\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\u3002\u6211\u4f7f\u7528NUL\u7ed3\u5c3e\u5b57\u7b26\u4e32\u7684\u552f\u4e00\u539f\u56e0\u662f\u56e0\u4e3a\u8fd9\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\u975e\u5e38\u5bb9\u6613\u5904\u7406\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u53ea\u4e0eNUL\u5b57\u8282\u8fdb\u884c\u6bd4\u8f83\uff0c\u800c\u4e0d\u9700\u8981\u7ef4\u62a4\u8ba1\u6570\u5668\u3002\n\u597d\u7684\uff0c\u6240\u4ee5JavaScript\u5e76\u4e0d\u592a\u96be\u3002\u6211\u8ba4\u4e3a\uff0c\u6211\u4eec\u4e2d\u7684\u5927\u591a\u6570\u4eba\u90fd\u4f1a\u8ffd\u6c42\u4e00\u4e9b\u66f4\u62bd\u8c61\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u6211\u8ba4\u4e3a\uff0c\u8fd9\u8ba9\u610f\u56fe\u53d8\u5f97\u66f4\u660e\u663e\u4e86\u3002\nIf(ch=34){out.ush(0xFB)\uff1b//\u4ee3\u7801\u4e2d\u7684\u5b57\u7b26\u4e32\u4ee4\u724cConst\u5b57\u7b26\u4e32\u6587\u5b57\u91cf=inStr.substr(idx+1).Match(/^[^&#34\uff1b]*/)[0]\uff1bidx+=\u5b57\u7b26\u4e32\u6587\u5b57\u91cf.length+1\uff1bout.ush(...Array.from(\u5b57\u7b26\u4e32\u6587\u5b57\u91cf\uff0cch=&gt\uff1bch.charCodeAt(0)\uff1bidx++\uff1b//\u8df3\u8fc7\u5f15\u53f7\u3002\n\u4e0a\u9762\u505a\u7684\u662f\u975e\u5e38\u76f8\u4f3c\u7684\u4e8b\u60c5--\u4f46\u662f\u6211\u4eec\u4e0d\u5fc5\u9010\u4e2a\u5b57\u7b26\u5730\u68c0\u67e5\u5b57\u7b26\uff0c\u800c\u662f\u8ba9JS\u7528Match\u6765\u505a\u8fd9\u4ef6\u4e8b\u3002\u6211\u4eec\u77e5\u9053\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u5339\u914d(\u6211\u4eec\u662f\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d)\uff0c\u6240\u4ee5\u6211\u4eec\u751a\u81f3\u4e0d\u9700\u8981\u8d39\u5fc3\u68c0\u67e5\u6211\u4eec\u662f\u5426\u5f97\u5230\u4e86\u4e00\u4e2a\u6210\u529f\u7684\u5339\u914d\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ea\u9700\u589e\u52a0\u8d85\u8fc7\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u7d22\u5f15\uff0c\u5e76\u5c06\u5b57\u7b26\u590d\u5236\u5230\u8fd4\u56de\u6570\u7ec4\u4e2d\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u8981\u5bb9\u6613\u5f97\u591a(\u4f46\u524d\u63d0\u662f\u60a8\u7406\u89e3\u6b63\u5219\u8868\u8fbe\u5f0f\u4ee5\u53ca\u4e00\u4e9bES6\u8bed\u6cd5\uff0c\u5982\u2026\u3002\u548c\u7bad\u5934\u529f\u80fd)\u3002\n\u5f53\u7136\uff0c\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u5fc5\u987b\u5b8c\u6210JS\u4e3a\u6211\u4eec\u6240\u505a\u7684\u5de5\u4f5c\u3002\u8fd9\u5c06\u4ea7\u751f\u4e0e\u6211\u4eec\u7b2c\u4e00\u6b21JS\u5c1d\u8bd5\u975e\u5e38\u76f8\u4f3c\u7684\u7ed3\u679c\uff1a\nCmp dl\uff0cconstants.QUOTE#dl\u662f\u5f15\u53f7\u5417\uff1fBrs\uff01z not-a-string#nope\uff1bnot a string call_get-target-index#get next position in crash target dl\uff1a=brodata.TOK_code_string#&#34\uff1bstring&#34\uff1bToken&lt\uff1bbp+target&gt\uff1b\uff0cy\uff1a=dl#\u5c06\u5176\u5b58\u50a8\u5230\u538b\u7f29\u76ee\u6807call_adv-target-index-a-string\uff1acall_get-source-index dl\uff1a=&lt\uff1bbp+source&gt\uff1b\uff0cy#\u3002\u5982\u679cZ{dl\uff1a=0}call_get-target-index&lt\uff1bbp+target&gt\uff1b\uff0cy\uff1a=dl#\u5199\u5165\u76ee\u6807call_adv-target-index CMP dl\uff0c0#\u6211\u4eec\u5b8c\u6210\u4e86\u5417\uff1fBRS\uff01Z\u4ecd\u7136\u662f\u5b57\u7b26\u4e32#\u5426\uff0c\u7ee7\u7eed\u524d\u8fdb#\u4e0b\u4e00\u6b65\uff01\u4e0d\u662f\u5b57\u7b26\u4e32\uff1a\n\u5173\u4e8eRetroputer\u7684\u6c47\u7f16\u8bed\u8a00\u89e3\u6790\u5668\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u5b83\u5bf9\u66f4\u9ad8\u7ea7\u522b\u7684\u6784\u9020\u6709\u4e00\u4e9b\u975e\u5e38\u57fa\u672c\u7684\u652f\u6301\uff0c\u6bd4\u5982\u5757\u548c\u5faa\u73af\u3002\u56e0\u6b64\uff0c\u5982\u679cZ{\u2026\u3002\u5982\u679c\u8bbe\u7f6e\u4e86\u96f6\u6807\u5fd7\uff0c}\u5c06\u6267\u884c\u5757\u5185\u7684\u5185\u5bb9\uff0c\u5e76\u4e14Continue\u53ef\u7528\u4e8e\u5206\u652f\u56de\u5230\u5757\u7684\u9876\u90e8(Break\u4e5f\u53ef\u7528\u4e8e\u9000\u51fa\u5757)\u3002\u6c47\u7f16\u7a0b\u5e8f\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a\u5404\u79cd\u6bd4\u8f83\u548c\u5206\u652f\u6307\u4ee4\uff0c\u56e0\u6b64CPU\u770b\u4e0d\u5230\u4efb\u4f55\u9ad8\u7ea7\u4f4d\u3002\u4f46\u662f\u5b83\u4f7f\u7f16\u5199\u4ee3\u7801\u53d8\u5f97\u66f4\u5bb9\u6613\u4e00\u4e9b\u3002\n\u5728\u6211\u4eec\u7684\u5173\u952e\u5b57\u5217\u8868\u4e2d\u641c\u7d22\u6211\u4eec\u7684\u6570\u5b57\u4e5f\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u59a8\u8df3\u8fc7\u8fd9\u4e9b\u6570\u5b57\u3002\u5927\u591a\u6570\u57fa\u672c\u64cd\u4f5c\u90fd\u4f1a\u505a\u4e00\u4e9b\u4e0e\u4e0a\u9762\u7684\u5b57\u7b26\u4e32\u4f8b\u7a0b\u975e\u5e38\u7c7b\u4f3c\u7684\u4e8b\u60c5-\u53ea\u8981\u5b83\u8bfb\u53d6\u7684\u5b57\u7b26\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u5b83\u5c31\u4f1a\u8fde\u63a5\u5230\u8f93\u51fa\uff0c\u7136\u540e\u5904\u7406\u7a0b\u5e8f\u5c31\u4f1a\u7ee7\u7eed\u8fdb\u884c\u3002\nRetroputer Basic(\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\uff0c\u5982Atari Basic)\u66f4\u8fdb\u4e00\u6b65\uff1a\u5b83\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\u3002\u8fd9\u975e\u5e38\u5bb9\u6613\u505a\u5230-\u5982\u679c\u60a8\u770b\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5c06\u7d2f\u52a0\u5668\u4e58\u4ee510\uff0c\u7136\u540e\u5c06\u8be5\u6570\u5b57\u76f8\u52a0\uff0c\u53ea\u8981\u60a8\u770b\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u3002(\u7136\u800c\uff0c\u6211\u5e94\u8be5\u6ce8\u610f\u5230\uff0cRetroputer BASIC\u76ee\u524d\u662f\u4e00\u4e2a\u4ec5\u9650\u6574\u6570\u7684\u4e8b\u52a1\u3002\u4e0d\u8fc7\uff0c\u6dfb\u52a0\u6d6e\u70b9\u5728\u5f85\u529e\u4e8b\u9879\u5217\u8868\u4e0a\u3002)\n(\u6211\u5e94\u8be5\u6ce8\u610f\u5230\uff0cRetroputer Basic\u5f53\u524d\u5728\u6574\u6570\u6ea2\u51fa(\u5e26\u7b26\u53f7\u6216\u5176\u4ed6)\u65b9\u9762\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\u3002\u4e00\u65e6\u6211\u6dfb\u52a0\u4e86\u6d6e\u70b9\uff0cRetroputer\u5c06\u6539\u4e3a\u8f6c\u6362\u4e3a\u6d6e\u70b9\u8868\u793a\u3002)\u3002\nRetroputer Basic\u8fd8\u66f4\u8fdb\u4e00\u6b65\uff1a\u5b83\u8fd8\u5c06\u8bc6\u522b\u5341\u516d\u8fdb\u5236\u6570\u5b57\uff0c\u5e76\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u7b49\u4ef7\u7684\u4e8c\u8fdb\u5236\u6570\u5b57\u3002\u5b83\u4f7f\u75280x(\u5c31\u50cfJS\u4e00\u6837)\u4f5c\u4e3a\u80fd\u6307\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u989d\u5916\u7684\u903b\u8f91\u6765\u786e\u4fdd\u6307\u5b9a\u591a\u4e2ax\u5b57\u7b26\u88ab\u8ba4\u4e3a\u662f\u9519\u8bef\u7684\u3002\n\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\uff0c\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u662f\u6570\u5b57\u5e76\u4e0d\u96be\uff0c\u4f46\u6709\u70b9\u5197\u957f\uff0c\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u6bd4\u8f83\uff0c\u4ee5\u786e\u5b9a\u5b57\u7b26\u4ee3\u7801\u662f\u5426\u57280x30\u548c0x39\u4e4b\u95f4\u3002(\u8fd9\u4e9b\u5206\u522b\u662f\u201c0\u201d\u548c\u201c9\u201d\u7684\u5b57\u7b26\u4ee3\u7801\u3002)\u3002\n\u4e00\u65e6\u6211\u4eec\u6709\u4e86\u6570\u5b57\u5b57\u7b26\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u5b57\u7b26\u96c6\u7684\u53e6\u4e00\u4e2a\u7cbe\u5999\u4e4b\u5904\u30020x30\u662f\u201c0\u201d\u7684\u5b57\u7b26\u4ee3\u7801\uff0c0x31\u662f\u201c1\u201d\u7684\u4ee3\u7801\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u5982\u679c\u613f\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u51cf\u53bb0x30\uff0c\u4f46\u6211\u4eec\u6709\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff1a\u53ea\u9700\u53bb\u6389\u524d\u56db\u4f4d\uff1a\n\u4e0d\u5e78\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5904\u7406\u5341\u516d\u8fdb\u5236\u6570\uff0c\u5219\u8fd9\u4e0d\u8d77\u4f5c\u7528\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u51cf\u53bb\uff0c\u7136\u540e\u4e0e10\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5927\u4e8e10\uff0c\u5219\u518d\u6b21\u5411\u4e0b\u8c03\u65747(\u5047\u8bbe\u5341\u516d\u8fdb\u5236\u6570\u5b57\u4e3a\u5927\u5199\u201cA\u201d-\u201cZ\u201d)\u3002\n\u5728JS\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u67e5\u770b\u662f\u5426\u6b63\u5728\u67e5\u627e\u4e00\u4e2a\u6570\u5b57\uff0c\u7136\u540e\u4e00\u65e6\u6709\u4e86\u5339\u914d\u7684\u6570\u5b57\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8c03\u7528number()\uff0c\u8fd9\u4e5f\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u53e6\u4e00\u4e2a\u597d\u5904\uff1a\u5341\u516d\u8fdb\u5236\u6570\u7684\u8f6c\u6362\u4e5f\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5982\u679c\u6570\u5b57\u4ee50x\u5f00\u5934\uff0cnumber()\u4f1a\u81ea\u52a8\u8f6c\u6362\u5341\u516d\u8fdb\u5236\u6570\u3002\nIf(ch&&gt;\uff1b=48\uff1b&amp\uff1b&amp\uff1bch&lt\uff1b=57){out.ush(0xFD)\uff1b//Number Token Const NumericalStr=inStr.substr(idx).match(/^[\\d|A-F|a-f|x|X]+/)[0]\uff1bidx+=NumerWritalStr.Length\uff1bConst NumerWrital=Number(Number WritalStr)\uff1bConst Bytes=new Uint8Array(new Uint16Array([Numerical Writal]).Buffer)\uff1bout.Push(...Bytes)Continue\uff1b}\u3002\n\u6b63\u5219\u8868\u8fbe\u5f0f\u5141\u8bb8\u6570\u5b57\u6216\u5341\u516d\u8fdb\u5236\u6570\u5b57\u7684\u4efb\u610f\u7ec4\u5408(\u52a0\u4e0ax\u4ee5\u8fdb\u5165\u5341\u516d\u8fdb\u5236\u6a21\u5f0f)\u3002\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u5e76\u4e0d\u5b8c\u7f8e-\u4f8b\u5982\uff0c\u5b83\u5c06\u5141\u8bb8\u591a\u4e2aX\uff0c\u4f46\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u5b83\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\n\u4e0a\u8ff0\u5185\u5bb9\u4e2d\u4ee4\u4eba\u60ca\u8bb6\u7684\u4e00\u70b9\u662f\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u5b57\u8282\u3002Number()\u5b8c\u6210\u4e86\u5c06\u6570\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3aJavaScript\u53ef\u4ee5\u5904\u7406\u7684\u6570\u5b57\u7684\u8270\u82e6\u5de5\u4f5c\uff0c\u4f46\u73b0\u5728\u6211\u4eec\u9700\u8981\u5c06\u5176\u8868\u793a\u4e3a\u4e00\u7cfb\u5217\u5b57\u8282\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u6570\u5b66\u8fd0\u7b97\u6765\u8fdb\u884c\u8f6c\u6362\uff1a\n\u2026\u3002\u5bf9\u4e8e\u6574\u6570\u6765\u8bf4\uff0c\u8fd9\u5f88\u5bb9\u6613\u505a\u5230\u3002\u4f46\u662f\u901a\u8fc7\u4f7f\u7528JS\u7684\u7c7b\u578b\u5316\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u8df3\u8fc7\u6570\u5b66\u8fd0\u7b97\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u81ea\u5df1\u5728\u5c06\u6765\u5904\u7406\u6d6e\u70b9\u6570(\u6211\u4eec\u53ea\u9700\u5c06Uint16Array\u66ff\u6362\u4e3aFloat64Array\u3002\n\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u6c47\u7f16\u8bed\u8a00\u4ee3\u7801\u7a0d\u957f\u4e00\u4e9b\uff0c\u4f46\u5b83\u4e5f\u9700\u8981\u505a\u66f4\u591a\u7684\u5de5\u4f5c\u3002Retroputer\u8fdb\u884c\u4e86\u53e6\u4e00\u79cd\u4f18\u5316\uff1a\u5982\u679c\u6570\u5b57\u5f88\u5c0f\uff0c\u5219\u4ee5\u8f83\u5c0f\u7684\u683c\u5f0f\u5b58\u50a8\u3002\u8fd9\u610f\u5473\u77400-255\u53ef\u4ee5\u5b58\u50a8\u5728\u4e00\u4e2a\u5b57\u8282\u4e2d\uff0c\u800c\u8f83\u5927\u7684\u6570\u5b57\u4f1a\u5360\u7528\u4e24\u4e2a\u5b57\u8282\u3002\n\u597d\u7684\uff0c\u6211\u4eec\u5df2\u7ecf\u505a\u4e86\u5f88\u591a\u5de5\u4f5c\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u6ca1\u6709\u627e\u5230\u4e00\u4e2a\u5173\u952e\u5b57\u3002\u55ef\uff0c\u53bb\u6389\u4e86\u6570\u5b57\u548c\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u786e\u5b9a\u6211\u4eec\u770b\u5230\u7684\u4e0d\u662f\u5173\u952e\u5b57\u5c31\u662f\u53d8\u91cf\u540d\u3002(\u5b83\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f46\u8fd9\u5f88\u5bb9\u6613\u68c0\u67e5\u3002)\u3002\n\u5728BASIC\u4e2d\uff0c\u5173\u952e\u5b57\u5e76\u4e0d\u603b\u662f\u4ee5\u5b57\u6bcd\u5b57\u7b26\u5f00\u5934-\u64cd\u4f5c\u7b26\u548c\u5206\u9694\u7b26\u4e5f\u7b97\u4f5c\u6807\u8bb0\u3002\u4f46\u53d8\u91cf\u4e5f\u4ee5\u5b57\u6bcd\u5b57\u7b26\u5f00\u5934\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u9a6c\u4e0a\u77e5\u9053\u6211\u4eec\u8981\u5904\u7406\u7684\u662f\u4e00\u4e2a\u5173\u952e\u5b57\u8fd8\u662f\u4e00\u4e2a\u53d8\u91cf\u3002\u6ca1\u5173\u7cfb-\u5982\u679c\u6211\u4eec\u5728\u4ee4\u724c\u5217\u8868\u4e2d\u627e\u4e0d\u5230\u5339\u914d\u9879\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u5b83\u662f\u4e00\u4e2a\u53d8\u91cf\u3002\n\u90a3\u4e48\uff0c\u6211\u4eec\u5982\u4f55\u5b9e\u9645\u68c0\u67e5\u6211\u4eec\u7684\u6f5c\u5728\u5173\u952e\u5b57\u662f\u5426\u771f\u7684\u662f\u4e00\u4e2a\u5173\u952e\u5b57\u5462\uff1f\u5982\u679c\u6211\u4eec\u5728\u7f16\u5199JavaScript\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u4f7f\u7528Array#findIndex\u65b9\u6cd5\u3002\nConst tokenMatch=tokens.findIndex(Token=&gt\uff1binStr.substr(Idx).startsWith(Token))\uff1bif(tokenMatch&gt\uff1b-1){out.ush(tokenMatch+128)\uff1bidx+=tokens[tokenMatch].length\uff1bContinue\uff1b}\u3002\nArray#findIndex\u65b9\u6cd5\u5c06\u8fed\u4ee3tokens\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u6d4b\u8bd5inStr(\u5728\u5f53\u524didx)\u662f\u5426\u4ee5\u6211\u4eec\u6b63\u5728\u68c0\u67e5\u7684\u6807\u8bb0\u5f00\u59cb\u3002\u4f7f\u7528\u7b80\u5316\u7684\u4ee4\u724c\u5217\u8868\uff0c\u6211\u4eec\u5c06\u6267\u884c\u5982\u4e0b\u64cd\u4f5c(\u5047\u8bbeinStr.substr(Idx)=\u201cprint\u201d\uff1a\n\u6ce8\u610f\uff1a\u4e0eJS\u4e2d\u7684indexOf\u4e00\u6837\uff0c\u5982\u679c\u4ec0\u4e48\u90fd\u6ca1\u6709\u627e\u5230\uff0c\u6211\u4eec\u7684\u95ee\u9898\u4f1a\u5f97\u5230-1\u3002\n\u5982\u679c\u627e\u5230\u5339\u914d\u9879\uff0c\u5219\u53ef\u4ee5\u5c06\u7d22\u5f15\u5b58\u50a8\u5728\u8fd4\u56de\u6570\u7ec4\u4e2d\u3002\u4f46\u662f\u6211\u4eec\u4ee5\u540e\u600e\u4e48\u77e5\u9053\u4ee3\u5e01\u548c\u5b57\u7b26\u4e4b\u95f4\u7684\u533a\u522b\u5462\uff1f\u7b80\u5355\uff1a\u6253\u5f00\u9ad8\u4f4d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u4ee4\u724c\u503c\u4e0a\u52a0128\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\n(\u6ce8\u610f\uff1a\u5982\u679c\u6211\u4eec\u9700\u8981\u8d85\u8fc7128\u4e2a\u4ee4\u724c\uff0c\u5219\u67d0\u4e9b\u4ee4\u724c\u5fc5\u987b\u4f7f\u7528\u4e24\u4e2a\u5b57\u8282\u3002\u8fd9\u4f1a\u8ba9\u4e8b\u60c5\u53d8\u5f97\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\uff0c\u4f46\u4e0d\u4f1a\u592a\u590d\u6742\u3002\u6709\u4e9bBasic\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9-\u4f8b\u5982\uff0c\u5404\u79cd\u98ce\u683c\u7684Microsoft Basic)\u3002\n\u6240\u4ee5\uff0c\u6211\u4eec\u5df2\u7ecf\u7528JavaScript\u5b8c\u6210\u4e86\u8fd9\u9879\u5de5\u4f5c\uff0c\u4f46\u662f\u6211\u4eec\u5230\u5e95\u5982\u4f55\u624d\u80fd\u7528\u6c47\u7f16\u8bed\u8a00\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u5462\uff1f\n\u55ef\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6211\u4eec\u505a\u7684\u65b9\u5f0f\u5927\u81f4\u76f8\u540c\uff0c\u4f46\u53d8\u5f97\u66f4\u5197\u957f\u4e86\u3002\n\u641c\u7d22\u5173\u952e\u5b57\uff1aBL\uff1a=[d\uff0cx]#\u83b7\u53d6\u5f53\u524d\u4ee4\u724cCMP\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26bl\uff0cconstants.NUL#\u5982\u679c\u5b83\u662fNUL\uff0c\u6211\u4eec\u5df2\u7ecf\u7528\u5c3d\u4e86\u5217\u8868brs Z exit-keyword-search#\uff0c\u56e0\u6b64\u6211\u4eec\u663e\u7136\u4e0d\u662f\u5173\u952e\u5b57CLR Z#\u6bd4\u8f83\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u4f7f\u7528\u90e8\u5206\u76f8\u7b49\u8c03\u7528[Vector tors.STRCMP]#\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u6e90\u4e0d\u9700\u8981#tokens\uff1b\u4e4b\u95f4\u7684NUL\uff1bc\u73b0\u5728\u5c06\u662f\u83b7\u5f97\u7684\u5b57\u7b26\u6570\u3002\u524d\u8fdb\u5230\u5217\u8868\u4e2d\u7684\u6807\u8bb0incx#\u9010\u4e2a\u5b57\u7b26bl\uff1a=[d\uff0cx]#\u4e2a\u6807\u8bb0\u4ee5nuls cmp bl\uff0cconstants.NUL#\u7ed3\u5c3e\u3002NUL#\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u770b\u5230\u5b83\uff0c\u6211\u4eec\u53ef\u4ee5\u505c\u6b62}While\uff01z incx#\u8d8a\u8fc7\u67e5\u627e\u8868BRS\u641c\u7d22\u5173\u952e\u5b57#\u4e2d\u7684\u6807\u8bb0#incx#\uff0c\u7136\u540e\u7ee7\u7eed\u67e5\u627e\u5339\u914d\u9879}clr c#\u627e\u5230\u5339\u914d\u9879\uff01\uff01z incx#\u8f6c\u5230\u67e5\u627e\u8868brs\u641c\u7d22\u5173\u952e\u5b57#\u4e2d\u7684\u6807\u8bb0#incx#\u5e76\u7ee7\u7eed\u67e5\u627e\u5339\u914d\u9879}clr c#\u627e\u5230\u5339\u914d\u9879\uff01Add x\uff0cc#c\u662f\u5339\u914dInc\u7684\u957f\u5ea6x#\u8d85\u8fc7NUL bl\uff1a=[d\uff0cx]#bl\u73b0\u5728\u662f\u4ee4\u724c#call_get-target-index&lt\uff1bbp+target&gt\uff1b\uff0cy\uff1a=bl#\u5199\u5165\u4ee4\u724c#call_adv-target-index call_get-source-index#\u524d\u8fdb\u8d85\u8fc7\u6e90CLR\u4e2d\u7684\u4ee4\u724cc add y\uff0cc#\u901a\u8fc7\u6dfb\u52a0\u5b57\u7b26\u8ba1\u6570dec y#\u540e\u9000\u4e00(\u6211\u4eec\u7a0d\u540e\u5c06\u518d\u6b21\u524d\u8fdb)\u3002\n\u597d\u7684\uff0c\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\u3002\u9664\u4e86\u6c47\u7f16\u8bed\u8a00\u4e2d\u7684\u4ee4\u724c\u8868\u7684\u7ed3\u6784\u7565\u6709\u4e0d\u540c\u4e4b\u5916\uff0c\u5b83\u51e0\u4e4e\u662f\u5b8c\u5168\u76f8\u540c\u7684\u7b97\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a\n\u4e0d\u8fc7\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u9057\u6f0f\u4e86\u4e00\u4e9b\u91cd\u8981\u7684\u4e1c\u897f-\u90a3\u5c31\u662f\uff0c\u6211\u4eec\u5230\u5e95\u662f\u5982\u4f55\u8fdb\u884c\u5b57\u7b26\u4e32\u6bd4\u8f83\u7684\uff1fRetroputer\u7684\u5185\u6838\u6709\u4e00\u4e2a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7684STRCMP\u4f8b\u7a0b\uff0c\u4f46\u662f\u5b83\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u5462\uff1f\nStrcmp\uff1a{enter 0x00 Push a Push b Push d Push y Push f if Z{bl\uff1a=0x00#\u6b63\u5728\u68c0\u67e5\u662f\u5426\u5b8c\u5168\u76f8\u7b49}\u5426\u5219{bl\uff1a=0x01#\u4ec5\u68c0\u67e5\u90e8\u5206\u76f8\u7b49}_main\uff1ay\uff1a=0#\u5b57\u7b26\u4e32\u5f00\u5934\uff1acl\uff1a=[d\uff0cx\uff0cy]#\u5b57\u7b26\u4e32A al\u4e2d\u7684\u5b57\u7b26\uff1a=&lt\uff1bbp+4&gt\uff1b\uff0cy#\u5b57\u7b26\u4e32B\u4e2d\u7684\u5b57\u7b26CMP bl\uff0c0x01#\u5982\u679c\u6b63\u5728\u6267\u884c\u5b8c\u5168\u76f8\u7b49\uff0c\u8bf7\u68c0\u67e5\u662f\u5426\u6b63\u5728\u6267\u884c\u5b8c\u5168\u76f8\u7b49\u64cd\u4f5c\u3002Re\u4e0d\u662f\uff0c\u6240\u4ee5\u68c0\u67e5\u5b57\u7b26\u4e32b brs Z string-are-equence#\u5982\u679c\u5b83\u662fNUL\uff0c\u6211\u4eec\u79f0\u5b83\u4eec\u4e3a\u7b49\u4e8e}CMP cl\uff0cal#\u68c0\u67e5\u5b57\u7b26if Z{CMP cl\uff0c0#EQUAL\uff0c\u4f46\u68c0\u67e5\u662f\u5426\u6709NUL BRS Z\u5b57\u7b26\u4e32-Are-EQUAL#NUL ACTED\uff0c\u5b57\u7b26\u4e32\u7b49\u4e8e\u5305\u62ecy#\u4e0b\u4e00\u4e2a\u5b57\u7b26BRTOP#NOT NUL\uff0c\u56e0\u6b64\u8bf7\u7ee7\u7eed\u64cd\u4f5c\u3002}#\u5982\u679c\u5728\u8fd9\u91cc\uff0c\u5982\u679cN{popf#string\u5c0f\u4e8eset N clr Z brs_out}\u5219\u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49\uff0c\u5426\u5219{popf#string\u5927\u4e8eclr N clr Z brs_out}string-are-\u7b49\u4e8e\uff1apopf clr N#\u4e0d\u5c0f\u4e8eset Z#\u4f46\u7b49\u4e8e_out\uff1aC\uff1a=y#\u786e\u4fdd\u6211\u4eec\u77e5\u9053\u6bd4\u8f83\u4e86\u591a\u5c11\u4e2a\u5b57\u7b26#POP D POP B POP A EXIT 0x00 ret}\u3002\n\u6211\u4e0d\u77e5\u9053\u4f60\u600e\u4e48\u6837\uff0c\u4f46\u662f\u6211\u8d8a\u6765\u8d8a\u559c\u6b22JS\u7684string#startswith method\u3002\u5f53\u7136\uff0c\u5b83\u4e5f\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u6211\u4e0d\u9700\u8981\u7f16\u5199\u5b83\u7684\u5185\u90e8\u903b\u8f91\uff01\n\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e00\u70b9\u4e0a\u5b8c\u6210-\u5904\u7406\u6211\u4eec\u7684\u5173\u952e\u5b57\u7684\u5de5\u4f5c\u5df2\u7ecf\u5b8c\u6210\u3002Retroputer BASIC\u505a\u4e86\u66f4\u591a\u7684\u4e00\u6b65\uff0c\u90a3\u5c31\u662f\u5bf9\u53d8\u91cf\u8fdb\u884c\u6807\u8bb0\u5316\u3002\u6211\u76f8\u4fe1\u53ea\u6709\u5f88\u5c11\u768480\u5e74\u4ee3\u548c90\u5e74\u4ee3\u7684\u57fa\u7840\u77e5\u8bc6\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u5728\u6709\u9650\u7684\u8bb0\u5fc6\u6761\u4ef6\u4e0b\uff0c\u5b83\u5b9e\u9645\u4e0a\u53ef\u80fd\u4f1a\u9020\u6210\u4f24\u5bb3\u3002\u4f46\u662f\uff0c\u5982\u679c\u60a8\u6709\u5927\u91cf\u5185\u5b58\uff0c\u5bf9\u53d8\u91cf\u8fdb\u884c\u6807\u8bb0\u5316\u53ef\u4ee5\u5e2e\u52a9\u63d0\u9ad8\u6027\u80fd\u3002\n\u5b83\u6700\u591a\u8bfb\u53d6\u53d8\u91cf\u540d\u7684\u524d\u4e24\u4e2a\u5b57\u7b26\u3002(\u7531\u4e8e\u5185\u5b58\u9650\u5236\uff0c\u8fd9\u662f\u5bf9\u5f53\u65f6\u57fa\u672c\u77e5\u8bc6\u7684\u4e00\u79cd\u5e38\u89c1\u5f71\u54cd\u3002)\u3002\n\u6839\u636e\u8fd9\u4e24\u4e2a\u5b57\u7b26\uff0c\u5b83\u786e\u5b9a\u4e00\u4e2a\u53d8\u91cf\u7d22\u5f15\u3002\u201cA\u201d\u662f\u53d8\u91cf0\uff0c\u201cA0\u201d\u662f\u53d8\u91cf53\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u7b49\u5f0f\u5e76\u4e0d\u96be\uff0c\u4f46\u4e0d\u662f\u8fd9\u91cc\u7684\u91cd\u70b9\u3002\nBASIC\u7ee7\u7eed\u626b\u63cf\u53d8\u91cf\u7684\u7c7b\u578bsigil\u3002\u4f8b\u5982\uff0c\u5728BASIC\u4e2d\uff0c$\u8868\u793a\u5b57\u7b26\u4e32\u53d8\u91cf\u3002\u53d8\u91cf\u7c7b\u578b\u5b58\u50a8\u5728\u53d8\u91cf\u7d22\u5f15\u4e2d\u8f83\u9ad8\u7684\u51e0\u4f4d\u4e2d\u3002\n\u7136\u540e\uff0cBasic\u5c06\u7c7b\u578b\u548c\u7d22\u5f15\u5199\u5165\u8f93\u51fa\uff0c\u7136\u540e\u9664\u4e86\u53d8\u91cf\u540d\u672c\u8eab\u4e4b\u5916\u8fd8\u5199\u5165\u53d8\u91cf\u540d\u7684\u957f\u5ea6\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5931\u53bb\u7a7a\u95f4\u8282\u7ea6\u7684\u5730\u65b9\uff01\n(\u6ce8\uff1a\u5f53Retroputer Basic\u53ef\u4ee5\u52a8\u6001\u5206\u914d\u53d8\u91cf\u65f6\uff0c\u7d22\u5f15\u5c06\u66ff\u6362\u4e3a\u6307\u5411\u53d8\u91cf\u7684\u6307\u9488\u3002\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u4e0a\u7684\u53e6\u4e00\u4ef6\u4e8b\uff01)\n\u8fd9\u4f7f\u5f97\u5728\u6267\u884c\u671f\u95f4\u67e5\u627e\u53d8\u91cf\u975e\u5e38\u5feb\uff1a\u60a8\u4e0d\u5fc5\u5728\u6bcf\u6b21\u9047\u5230\u53d8\u91cf\u65f6\u89e3\u6790\u53d8\u91cf\u540d\u5e76\u8ba1\u7b97\u7d22\u5f15\u3002\u5728\u4e00\u4e2a\u4e25\u5bc6\u7684\u5faa\u73af\u4e2d\uff0c\u8282\u7701\u7684\u6210\u672c\u53ef\u4ee5\u7d2f\u79ef\u8d77\u6765\u3002\u4f46\u8fd9\u4e5f\u5e26\u6765\u4e86\u5de8\u5927\u7684\u4ee3\u4ef7\uff1a\u6211\u4eec\u5fc5\u987b\u5c06\u6307\u9488\u548c\u53d8\u91cf\u540d\u5b58\u50a8\u5728\u4e00\u8d77\uff0c\u56e0\u6b64\u6211\u4eec\u5728\u8f93\u51fa\u4e2d\u4e3a\u6211\u4eec\u770b\u5230\u7684\u6bcf\u4e2a\u53d8\u91cf\u589e\u52a0\u4e864\u4e2a\u5b57\u8282\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u5728JavaScript\u4e2d\u786e\u5b9a\u5269\u4e0b\u7684\u5185\u5bb9\u662f\u5426\u786e\u5b9e\u662f\u5b57\u7b26\u6d41\u4e2d\u7684\u53d8\u91cf\u4e5f\u5f88\u5bb9\u6613\uff1a\nConst VariableMatch=inStr.substr(idx).match(/^[A-Z]+[A-Z0-9]*[\\$]*/)\uff1bif(VariableMatch){const VariableName=VariableMatch[0]\uff1bidx+=VariableName.length\uff1b//tokenize(\u7701\u7565\uff1b\u8fd9\u91cc\u6ca1\u6709\u65b0\u5185\u5bb9)\u7ee7\u7eed\uff1b}\u3002\n\u6211\u4e0d\u6253\u7b97\u6df1\u5165Retroputer\u5728\u8fd9\u4e00\u70b9\u4e0a\u5bf9\u53d8\u91cf\u8fdb\u884c\u6807\u8bb0\u5316\u7684\u4ee3\u7801-\u5b83\u975e\u5e38\u5197\u957f\uff0c\u4f46\u4e0d\u662f\u7279\u522b\u6709\u8da3\u7684\u2026\u3002\u73b0\u5728\u8fd8\u4e0d\u884c\u3002\u5f53\u6211\u6dfb\u52a0\u52a8\u6001\u53d8\u91cf\u5206\u914d\u65f6\uff0c\u6211\u5c06\u91cd\u65b0\u8003\u8651\u8fd9\u4e00\u70b9\u3002\n\u73b0\u5728\uff0c\u5982\u679c\u60a8\u6d4b\u8bd5\u6211\u4eec\u7684JS\u4ee3\u7801\uff0c\u60a8\u5c06\u5f97\u5230\u4e00\u4e2a\u4e0eRetroputer Basic\u5185\u90e8\u4f7f\u7528\u7684\u5b57\u8282\u6570\u7ec4\u7c7b\u4f3c\u7684\u5b57\u8282\u6570\u7ec4\uff1a\nConsole.log(toHex(toHex(tokenize(`cls\uff1aprint&#34\uff1bhello\uff0cWorld&#34\uff1b`)\uff1b//80 82 20 81 20 FB 48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 00\u3002\n\u54c7-\u6240\u4ee5\u8282\u7701\u51e0\u4e2a\u5b57\u8282\u7684\u6210\u672c\u9700\u8981\u505a\u5927\u91cf\u7684\u5de5\u4f5c\u3002\u4f46\u5982\u679c\u4f60\u53ea\u6709\u51e0\u4e2a\u3002\n.", "note_en": "If you recall from  part one of the series, we only really delved into Retroputer BASIC\u2019s first phase of parsing \u2014 namely, converting the entered line into uppercase and checking if quotes were properly matched. (Note: it should be mentioned that we could do additional checks there too \u2014 like matching parentheses, but we don\u2019t at the moment.)\n I also mentioned that I wanted to address how much we take even fairly limited standard libraries for granted today (especially in relationship to JavaScript). Nothing described here is  magic, but sometimes we take our tools for granted, and I find it useful to understand what\u2019s going underneath the hood.\n  As mentioned in the last post, a common tactic used by BASICs of the era was that of tokenization. In order to save space and increase execution speed, keywords were \u201ccrunched\u201d into single byte token (or two bytes if you needed more keywords).\n Let\u2019s imagine that you have a simple line of code that clears the screen and prints the now common greeting, like the following.\n  While this doesn\u2019t take up a lot of memory on its own, if you write a long program, a lot of the words in that program will be keywords. If we crunched them (tokenized them), we could save a decent amount of space. For example, after tokenizing the line above, you\u2019d see something more like this in memory:\n  It doesn\u2019t take too much effort to map this back to our original statement:\n  This may seem like a lot of work, but the space savings can be significant. It\u2019s not a lot  here, but even so, you should be able to imagine how it could quickly add up. In this case, our crunched result is 19 bytes. The original text is 26 bytes (counting a terminating NUL).\n Saving some space becomes important if you\u2019re a BASIC interpreter running on a machine with very limited RAM. Some BASICs had less than a kilobyte of RAM for user programs, so this crunching was indeed very important, and is something that would have been appealing even if it came with no additional benefits.\n OK \u2014 so just how do we go about tokenizing something like this? It initially seems fairly trivial in JavaScript. Given an array of strings, you could easily do a quick replace of each keyword with the corresponding token. Right?\n  const tokens = [&#34;CLS&#34;, &#34;PRINT&#34;, &#34;:&#34; ];function tokenize (inStr) { const newStr = inStr; tokens.forEach((token, idx) =&gt; newStr = newStr.replace( new RegExp(token, &#34;g&#34;), String.fromCharCode(128+idx) ); return newStr;}\n Unfortunately, it all comes crashing down when you realize that we can\u2019t go about replacing tokens inside of string literals. This means we need to proceed character by character, keeping the context in mind, in order to avoid crunching things that aren\u2019t actually keywords.\n This new algorithm much more closely matches that of the assembly language code in Retroputer \u2014 but JS still makes things a lot easier. Here\u2019s the start of that JS code (we\u2019ll fill it in throughout the post):\n const tokens = [&#34;CLS&#34;, &#34;PRINT&#34;, &#34;:&#34; ];function tokenize(inStr) { let out = []; // return value is &#34;crunched&#34; array let idx = 0; // index into inStr let ch = &#34;&#34;; // current character while (idx &lt; inStr.length) { ch = inStr.charCodeAt(idx); // get the current character code // our logic is going to go here out.push(ch); // for now push the character idx++; // and keep going (next char) } out.push(0); // we end with NUL return out;}\n We\u2019re starting with a very simplified token list, as no one wants to see the entire table in this format ( it\u2019s long, and Retroputer actually builds its token tables from a JS file!), but this should be enough for our purposes here. The idea here is that when we see a token, we\u2019ll record its index in an output array.\n At this point we have a function that, for now, just converts a string into its equivalent character codes. It doesn\u2019t do much useful at this point, but can serve as useful scaffolding.\n  do { call _get-source-index # get next character index (in y) dl := &lt;BP+source&gt;,y # read next char from our source string (ch) call _adv-source-index # advance our source index call _get-target-index # get position in target (&#34;out&#34; in JS) &lt;BP+target&gt;,y := dl # store to target (out[y] = ch) call _adv-target-index # move it along cmp dl, 0 # was char 0? if so, break } while !z\n I\u2019ve not included  _get-source-index or the other functions above because they do what they say on the tin, and are simply getting, setting, or advancing our source and target index. One thing of note is that unlike in JS, we don\u2019t have dynamically allocated arrays in assembly language, and so this algorithm pre-allocates a reasonably-sized buffer. As we advance through the input string, we have to know where to write the next token to the target buffer, and that\u2019s what the target index is doing above. Each one of the functions we\u2019re calling above returns the index in  Y. For example, The  _adv-target-index function advances the target index by one (equivalent to  y++).\n  One thing that we should be careful of is that string literals could confuse our tokenizer \u2014 we can\u2019t just replace every string of characters that matches a keyword with a token value. If we see a string literal with \u201cCLS\u201d in it, we shouldn\u2019t try to tokenize that. It\u2019s not intended to be executable, and if we print it\u2026 well, we\u2019d print the byte corresponding with the token instead. Not likely what the developer wanted.\n Number literals, on the other hand, shouldn\u2019t have the same problem since BASIC doesn\u2019t have any numbers as keywords. Even so, there\u2019s zero point in doing a keyword search if we\u2019re looking at a number \u2014 why waste time?\n  So, first, let\u2019s check if we\u2019re starting a string \u2014 that\u2019s not  too hard to do in JS:\n if (ch === 34) { out.push (0xFB); // string-in-code token idx++; ch = inStr.charCodeAt(idx); // get next character after the quote while (ch !== 34 &amp;&amp; idx &lt; inStr.length) { out.push(ch); idx++; ch = inStr.charCodeAt(idx); }; idx++; // go past the quote out.push(0); // end of string continue;}\n A double quote is represented as character code 34. Other programming languages recognize many more quote styles (such as JS or C), but BASIC is simple here: double quotes or bust.\n Once we see that we\u2019re starting a string, we can simply consume the remaining characters and add them to our return array until we see another quote.\n When we\u2019ve read in the whole string, we need to add a NUL byte, since Retroputer BASIC uses C-style strings. If we wanted to use Pascal-style strings, we could have maintained a counter and made sure to insert the length of the string literal. Not a big deal either way. The only reason I went with NUL-terminated strings is because that\u2019s super easy to deal with in assembly language since we can just compare against the NUL byte instead of maintaining a counter.\n Ok, so that JavaScript wasn\u2019t too hard. Most of us, I think, would reach for something a bit more abstract, like a regular expression. It makes the intent a little more obvious, I think.\n if (ch === 34) { out.push (0xFB); // string-in-code token const stringLiteral = inStr.substr(idx+1).match(/^[^&#34;]*/)[0]; idx += stringLiteral.length+1; out.push(...Array.from(stringLiteral, ch =&gt; ch.charCodeAt(0))); idx++; // go past the quote out.push(0); // end of string continue;}\n The above does very much the same thing \u2014 but instead of us having to do the work of checking character by character, we let JS do it instead with  match. We know we\u2019ll get a match (we\u2019re in a string), so we don\u2019t really even need to bother with checking if we get a successful match. Then we just increment our index past the length of the string and copy the characters into our return array. To  me, anyway, this is much easier to follow (but does assume you understand regular expressions along with some ES6 syntax like  \u2026 and arrow functions).\n Of course, in assembly language we have to do the work that JS is doing for us. This yields a very similar result to our first JS attempt:\n cmp dl, constants.QUOTE # is dl a quote? brs !Z not-a-string # nope; not a string call _get-target-index # get next position in crunch target dl := brodata.TOK_CODE_STRING # &#34;String&#34; token &lt;bp+target&gt;,y := dl # Store it into the crunch target call _adv-target-indexstill-a-string: call _get-source-index dl := &lt;bp+source&gt;,y # get string character call _adv-source-index cmp dl, constants.QUOTE # if it&#39;s a quote, we can zero it if Z { dl := 0 } call _get-target-index &lt;bp+target&gt;,y := dl # write to target call _adv-target-index cmp dl, 0 # are we done? brs !Z still-a-string # no, keep going continue # next!not-a-string:\n One thing to note about Retroputer\u2019s assembly language parser \u2014 it has some very basic support for higher-level constructs, like blocks and loops. So  if Z {\u2026} will execute the contents inside the block if the zero flag is set, and  continue can be used to branch back to the top of a block ( break also works to exit the block). This is translated to various compare and branch instructions by the assembler, so the CPU doesn\u2019t see any of the high level bits. But it makes writing code just a little easier.\n  There\u2019s also no point in trying to search for our numbers in our list of keywords, and so we may as well skip past those. Most BASICs would do something very similar to the string routine above \u2014 as long as the character it read was a digit, it would be concatenated to the output, and the cruncher would carry on.\n Retroputer BASIC (and a few other BASICs, like Atari BASIC) goes one step further: it converts the number into the corresponding binary format. This is very easy to do \u2014 if you see a digit, multiply an accumulator by 10 and add the digit, and repeat that as long as you see a digit. (I should note, however, that Retroputer BASIC is currently an integer-only affair. Adding floating point is on the todo list, though.)\n (I should note that Retroputer BASIC currently does  nothing when it comes to integer overflows, signed or otherwise. Once I add floating point, Retroputer will convert to a floating point representation instead.)\n Retroputer BASIC also goes another step further: it\u2019ll recognize hexadecimal numbers as well and convert them to their binary equivalent. It uses  0x (just like JS) as the signifier, and has some additional logic to make sure that specifying multiple  x characters is considered an error.\n In assembly language, checking if a character is a digit isn\u2019t  hard, but it is a little verbose, involving a couple of comparisons to see if the character code is between  0x30 and  0x39. (These are the character codes for \u201c0\u201d and \u201c9\u201d, respectively.)\n Once we have a digit charachter, we can take advantage of another nicety of the character set.  0x30 is the character code for \u201c0\u201d,  0x31 is the code for \u201c1\u201d, and so on. We could subtract  0x30 if we wanted to, but we have an easier way: just drop the top four bits:\n  Unfortunately this  doesn\u2019t work if we need to handle hexadecimal numbers. For that, we can subtract and then compare to 10, and then adjust down by 7 again if we were greater than 10 (assuming the hexadecimal digits are uppercase \u201cA\u201d-\u201dZ\u201d).\n In JS, we can use regular expressions again to see if we are looking at a number, and then once we have the matched number, we can call  Number(), which also gives us another perk: hexadecimal numbers are trivial to convert as well, since  Number() will do it automatically if the number starts with  0x.\n  if (ch &gt;= 48 &amp;&amp; ch &lt;= 57) { out.push (0xFD); // number token const numberLiteralStr = inStr.substr(idx).match(/^[\\d|A-F|a-f|x|X]+/)[0]; idx += numberLiteralStr.length; const numberLiteral = Number(numberLiteralStr); const bytes = new Uint8Array(new Uint16Array([numberLiteral]).buffer); out.push(...bytes) continue;}\n The regular expression allows any combination of digits or hexadecimal digits (plus an  x to get us into hexadecimal mode). This expression isn\u2019t perfect \u2014 it\u2019ll allow multiple  xs, for example, but it\u2019s good enough for now.\n The bit in the above that raises some eyebrows is converting the number into bytes.  Number() did the hard work of turning a string of digits into a number that JavaScript can work with, but now we need it to be represented as a series of bytes. We could do the conversion using some math:\n  \u2026 and for an integer, that\u2019s easy to do. But by using JS\u2019s typed arrays, we can skip the math, and also set ourselves up to handling floating point numbers in the future (we\u2019d just swap  Uint16Array for  Float64Array.\n The  assembly language code for accomplishing this is a bit longer, but it\u2019s also doing a little bit more work. Retroputer takes another optimization: if the number is small, it gets stored in a smaller format. This means that 0-255 can be stored in a single byte, while larger numbers take up two.\n  Okay, so we\u2019ve done a lot of work and we\u2019ve still not actually crunched a keyword. Well, with the number and string literals out of the way, we can be pretty sure that whatever we\u2019re looking at is either a keyword or a variable name. (It could also be a space, but that\u2019s easy to check.)\n In BASIC, keywords don\u2019t always start with an alphabetical character \u2014 operators and separators also count as tokens. But variables also start with an alphabetical character. So we can\u2019t immediately tell if what we\u2019re about to crunch is a keyword or a variable. That\u2019s OK\u2014if we don\u2019t find a match in our token list, we can assume it\u2019s a variable instead.\n So how do we actually check to see if our potential keyword is really a keyword? If we were writing JavaScript, we\u2019d probably reach for the  Array#findIndex method.\n const tokenMatch = tokens.findIndex(token =&gt; inStr.substr(idx).startsWith(token));if (tokenMatch &gt; -1) { out.push(tokenMatch + 128); idx += tokens[tokenMatch].length; continue;}\n The  Array#findIndex method will iterate over the  tokens array, and we can test to see if  inStr (at the current  idx) starts with the token we\u2019re checking. With our simplified token list, we\u2019ll do something like this (let\u2019s imagine  inStr.substr(idx)===\u201dPRINT\u201d:\n  Note: Like  indexOf in JS, if nothing is found, we\u2019d get a  -1 for our troubles.\n If we find a match, we can store the index in our return array. But how can we later know the difference between a token and a character? Easy: turn the high bit on, and we can do this by adding 128 to the token value.\n (Note: if we needed to have more than 128 tokens, we\u2019d have to use two bytes for some tokens. This makes things a  little bit more complicated, but not by much. Some BASICs do this\u2014various flavors of Microsoft BASIC, for example)\n So, we\u2019ve done the work in JavaScript, but how in the world can we do this in assembly language?\n Well, it turns out, we do it pretty much the same way, but it gets a lot more wordy.\n search-keywords: bl := [d, x] # get first character of current token cmp bl, constants.NUL # if it&#39;s NUL, we&#39;ve exhausted the list brs Z exit-keyword-search # so we&#39;re clearly not a keyword clr Z # compare strings, but with partial equality call [vectors.STRCMP] # so that our source doesn&#39;t need NUL between # tokens; c will now be how many chars got # compared if !Z { do { # no match; advance past our token in the list inc x # character by character bl := [d, x] # tokens are terminated with NULs cmp bl, constants.NUL # so if we see it, we can stop } while !z inc x # go past the token # inc x # in the lookup table brs search-keywords # and keep looking for a match } clr c # found the match! add x, c # c is the length of the match inc x # past the NUL bl := [d, x] # bl is now the token # call _get-target-index &lt;bp+target&gt;,y := bl # write the token # call _adv-target-index call _get-source-index # advance past the token in the source clr c add y, c # by adding the character count dec y # back off by one (we&#39;ll advance again later) call _set-source-index continue\n Okay, that doesn\u2019t look  too bad. It\u2019s pretty much the exact same algorithm except that our token table in assembly language is structured a little differently. Namely, it looks something like this:\n   We\u2019re leaving something important out here, though \u2014 that is, how in the world did we do the string comparison? Retroputer\u2019s kernel has a  STRCMP routine which we can use, but what does that look like?\n strcmp: { enter 0x00 push a push b push d push y pushf if Z { bl := 0x00 # Checking for full equality } else { bl := 0x01 # only checking for partial equality }_main: y := 0 # start of stringtop: cl := [d, x, y] # character in string A al := &lt;bp+4&gt;,y # character in string B cmp bl, 0x01 # check if we&#39;re doing full equality if Z { cmp cl, 0 # we&#39;re not, so check for an early nul # in string b brs Z strings-are-equal # if it&#39;s NUL, we calling them equal } cmp cl, al # check character if Z { cmp cl, 0 # equal, but check for NUL brs Z strings-are-equal # NUL reached, strings are equal inc y # next character brs top # not NUL, so keep going... } # if here, the strings aren&#39;t equal if N { popf # string is less than set N clr Z brs _out } else { popf # string is greater than clr N clr Z brs _out }strings-are-equal: popf clr N # Not less than set Z # but Equal_out: c := y # make sure we know how many chars # were compared pop y pop d pop b pop a exit 0x00 ret}\n I don\u2019t know about you, but I\u2019m loving JS\u2019s  String#startsWith method more and more. It does the same thing, granted, but I didn\u2019t have to write its internal logic!\n  We could be done at this point \u2014 the work of crunching our keywords is complete. Retroputer BASIC does one more step, which is to tokenize the variables. I believe only very few BASICs of the \u201880s and \u201890s did this because it could actually hurt in limited memory conditions. But if you have lots of memory, tokenizing your variables can help with performance.\n  It reads up to the first two characters of the variable name. (This was a common affectation of BASICs of the time due to memory constraints.)\n From these two characters, it determines a variable index. \u201cA\u201d is variable zero, \u201cA0\u201d is variable 53, etc. The equation isn\u2019t difficult, but not really the point here.\n BASIC continues to scan for the variable\u2019s type sigil. In BASIC,  $ signifies a string variable, for example. The variable type is stored in a couple of bits high in the variable index.\n BASIC then writes the type and index to the output, and then writes the variable name\u2019s length in addition to the variable name itself. This is where we lose space savings!\n (Note: when Retroputer BASIC can allocate variables dynamically, the index will be replaced with a pointer to the variable instead. Another thing on the todo list!)\n This makes variable lookup during execution extremely fast: you don\u2019t have to parse the variable name and calculate the index each time you encounter the variable. In a tight loop, that savings can add up. But it also comes at a huge cost: we have to store the pointer and the variable name together, and so we tack on an extra four bytes in the output for every variable we see.\n  Regardless, determining if what\u2019s left is indeed a variable in our character stream is also easy in JavaScript:\n const variableMatch = inStr.substr(idx).match(/^[A-Z]+[A-Z0-9]*[\\$]*/);if (variableMatch) { const variableName = variableMatch[0]; idx += variableName.length; // tokenize it (omitted; nothing new here) continue;}\n I\u2019m not going to go into the  code Retroputer does at this point to tokenize variables \u2014 it\u2019s very wordy, but not particularly interesting\u2026 yet. When I add dynamic variable allocation, I\u2019ll revisit this.\n  Now, if you test our JS code, you\u2019ll get an array of bytes similar to what Retroputer BASIC uses internally:\n console.log(toHex(tokenize(`CLS: PRINT &#34;Hello, World&#34;`)));// 80 82 20 81 20 FB 48 65 6C 6C 6F 2C 20 57 6F 72 6C 64 00 00\n Wow \u2014 so that was a lot of work for a few bytes worth of savings. But if you\u2019ve only got a couple \n......", "posttime": "2020-08-10 07:50:30", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u98ce\u683c,basic,\u5b57\u7b26", "title": "\u6784\u5efa80\u5e74\u4ee3\u98ce\u683c\u7684BASIC\u89e3\u91ca\u5668\uff0c\u7b2c2\u90e8\u5206", "title_en": "Building a Basic Interpreter, '80s Style, Part 2", "transed": 1, "url": "https://able.bio/kerrishotts/building-a-basic-interpreter-80s-style-part-2--e91250f1", "via": "", "real_tags": ["\u98ce\u683c", "basic", "\u5b57\u7b26"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1017259, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a(\u7f8e\u8054\u50a8/FED)\u5468\u56db\u516c\u5e03\u4e86FedNow\u2120\u670d\u52a1\u7684\u7ec6\u8282\uff0c\u8fd9\u662f\u4e00\u9879\u65b0\u768424x7x365\u94f6\u884c\u95f4\u7ed3\u7b97\u670d\u52a1\uff0c\u5177\u6709\u6e05\u7b97\u529f\u80fd\uff0c\u53ef\u652f\u6301\u7f8e\u56fd\u7684\u5373\u65f6\u652f\u4ed8\u3002\n\u968f\u9644\u7684\u8054\u90a6\u6ce8\u518c\u901a\u77e5\u4e2d\u63cf\u8ff0\u7684\u7279\u6027\u548c\u529f\u80fd\u4ee3\u8868\u7740FedNow\u670d\u52a1\u53d1\u5c55\u4e2d\u7684\u4e00\u4e2a\u5173\u952e\u91cc\u7a0b\u7891\uff0c\u5e76\u4e14\u57fa\u4e8e\u4ece\u516c\u4f17\u90a3\u91cc\u6536\u5230\u7684\u54cd\u5e94\u59d4\u5458\u4f1a2019\u5e74\u7684\u8bc4\u8bba\u8bf7\u6c42\u7684\u8f93\u5165\u3002\u7f8e\u8054\u50a8\u5c06\u91c7\u53d6\u5206\u9636\u6bb5\u7684\u65b9\u5f0f\u5b9e\u65bd\u670d\u52a1\u3002FedNow\u670d\u52a1\u7684\u7b2c\u4e00\u4e2a\u7248\u672c\u5c06\u63d0\u4f9b\u6838\u5fc3\u6e05\u7b97\u548c\u7ed3\u7b97\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u5c06\u652f\u6301\u5e02\u573a\u9700\u6c42\uff0c\u5e76\u5e2e\u52a9\u94f6\u884c\u7ba1\u7406\u541124x7x365\u670d\u52a1\u7684\u8fc7\u6e21\u3002\u6839\u636e\u5229\u76ca\u76f8\u5173\u8005\u7684\u6301\u7eed\u53c2\u4e0e\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5c06\u5f15\u5165\u66f4\u591a\u529f\u80fd\u548c\u670d\u52a1\u589e\u5f3a\u529f\u80fd\u3002\u8fd9\u9879\u670d\u52a1\u7684\u76ee\u6807\u63a8\u51fa\u65e5\u671f\u4ecd\u7136\u662f2023\u5e74\u62162024\u5e74\uff0c\u66f4\u5177\u4f53\u7684\u65f6\u95f4\u6846\u67b6\u5c06\u5728\u989d\u5916\u5de5\u4f5c\u5b8c\u6210\u540e\u5ba3\u5e03\u3002\n\u7f8e\u56fd\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a(Federal Reserve)\u5728\u63d0\u4f9b\u652f\u4ed8\u548c\u7ed3\u7b97\u670d\u52a1\u65b9\u9762\u53d1\u6325\u7740\u957f\u671f\u4f5c\u7528\uff0c\u4ee5\u4fc3\u8fdb\u4e00\u4e2a\u53ef\u83b7\u5f97\u3001\u5b89\u5168\u548c\u9ad8\u6548\u7684\u7f8e\u56fd\u652f\u4ed8\u7cfb\u7edf\u3002FedNow\u670d\u52a1\u4e0e\u79c1\u8425\u90e8\u95e8\u63d0\u4f9b\u7684\u7c7b\u4f3c\u670d\u52a1\u4e00\u8d77\uff0c\u5c06\u4f7f\u7f8e\u56fd\u652f\u4ed8\u7cfb\u7edf\u73b0\u4ee3\u5316\uff0c\u5e76\u5c06\u5373\u65f6\u652f\u4ed8\u7684\u597d\u5904\u5e7f\u6cdb\u5e26\u7ed9\u5168\u56fd\u5404\u5730\u7684\u793e\u533a\u3002\n\u7f8e\u56fd\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a(Federal Reserve Board)\u7406\u4e8b\u83b1\u5c14\u00b7\u5e03\u96f7\u7eb3\u5fb7(Lael Brainard)\u8868\u793a\uff0cCOVID\u7d27\u6025\u6551\u6d4e\u6b3e\u9879\u7684\u5feb\u901f\u652f\u51fa\u7a81\u663e\u4e86\u62e5\u6709\u4e00\u4e2a\u8986\u76d6\u5168\u56fd\u7684\u5f39\u6027\u5373\u65f6\u652f\u4ed8\u57fa\u7840\u8bbe\u65bd\u7684\u81f3\u5173\u91cd\u8981\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u73b0\u91d1\u6d41\u6709\u9650\u7684\u5bb6\u5ead\u548c\u5c0f\u4f01\u4e1a\u6765\u8bf4\u3002\u81ea\u4ece\u6211\u4eec\u4e00\u5e74\u524d\u542f\u52a8FedNow\u4ee5\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u8fbe\u5230\u4e86\u6211\u4eec\u7684\u9879\u76ee\u91cc\u7a0b\u7891\uff0c\u4eca\u5929\u6211\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03\uff0c\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a\u5df2\u7ecf\u6839\u636e\u5229\u76ca\u76f8\u5173\u8005\u7684\u5e7f\u6cdb\u6295\u5165\u6279\u51c6\u4e86\u6838\u5fc3\u7279\u6027\u548c\u529f\u80fd\u3002", "note_en": "The Federal Reserve Board on Thursday announced details of the FedNow\u2120 Service, a new 24x7x365 interbank settlement service with clearing functionality to support instant payments in the United States.\n The features and functionality described in the accompanying  Federal Register notice represent a key milestone in the FedNow Service&#39;s development and are based on input received from the public in response to the Board&#39;s 2019 request for comment. The Federal Reserve will take a phased approach to service implementation. The first release of the FedNow Service will provide core clearing and settlement features that will support market needs and help banks manage the transition to a 24x7x365 service. Based on ongoing stakeholder engagement, additional features and service enhancements will be introduced over time. The target launch date for the service remains 2023 or 2024, with a more specific time frame to be announced after additional work is completed.\n The Federal Reserve has a long-standing role in providing payment and settlement services to promote an accessible, safe, and efficient U.S. payment system. The FedNow Service, alongside similar services provided by the private sector, will modernize the U.S. payment system and bring the benefits of instant payments broadly to communities across the country.\n &#34;The rapid expenditure of COVID emergency relief payments highlighted the critical importance of having a resilient instant payments infrastructure with nationwide reach, especially for households and small businesses with cash flow constraints,&#34; said Federal Reserve Board Governor Lael Brainard. &#34;Since we initiated FedNow one year ago, we have been hitting our project milestones, and today I am pleased to announce the Federal Reserve Board has approved the core features and functionality based on extensive input from stakeholders.&#34;", "posttime": "2020-08-10 07:24:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u7f8e\u8054\u50a8,reserve,\u670d\u52a1", "title": "\u7f8e\u56fd\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a(\u7f8e\u8054\u50a8/FedNow)\uff1a\u652f\u6301\u5373\u65f6\u652f\u4ed8\u7684\u94f6\u884c\u7ed3\u7b97\u670d\u52a1", "title_en": "US Federal Reserve FedNow: a bank settlement service supporting instant payments", "transed": 1, "url": "https://www.federalreserve.gov/newsevents/pressreleases/other20200806a.htm", "via": "", "real_tags": ["\u7f8e\u56fd", "\u7f8e\u8054\u50a8", "reserve", "\u670d\u52a1"]}, {"category": "", "categoryclass": "", "imagename": "97ff7bca91fc04fd60daa5aa8e01733b.jpg", "infoid": 1017258, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u665a\u4e9b\u65f6\u5019\uff0c\u8be5\u516c\u53f8\u4e3a\u4e86\u83b7\u5f97App Store\u7684\u6279\u51c6\uff0c\u591a\u6b21\u53d1\u5e03\u4e86\u8fd9\u6761\u65b0\u95fb\u3002\u4e00\u6b21\u662f\u56e0\u4e3a\u62d2\u7edd\u4e86\u4e00\u6b3e\u6e38\u620f\u5e94\u7528\u7a0b\u5e8f\uff0c\u53e6\u4e00\u6b21\u662f\u56e0\u4e3a\u6279\u51c6\u4e86\u4e00\u6b3e\u6e38\u620f\u5e94\u7528\u7a0b\u5e8f\u3002\n\u88ab\u5426\u8ba4\u7684\u662f\u5fae\u8f6f\u7684XCloud\u6e38\u620f\u5e94\u7528\uff0cXbox\u7684\u4eba\u5bf9\u6b64\u5e76\u4e0d\u592a\u611f\u5174\u8da3\u3002\u5fae\u8f6fXCloud\u662fXbox\u5728\u76f8\u5f53\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u6700\u91cd\u8981\u7684\u8f6f\u4ef6\u5e73\u53f0\u4e4b\u4e00\uff0c\u5141\u8bb8\u6e38\u620f\u73a9\u5bb6\u4ece\u4e91\u7aef\u76f4\u64ad\u6e38\u620f\uff0c\u5e76\u5728\u8bb8\u591a\u8bbe\u5907\u4e0a\u73a9\u63a7\u5236\u53f0\u7ea7\u522b\u7684\u6e38\u620f\u3002\u8fd9\u662f\u4e00\u9879\u5de8\u5927\u7684\u52aa\u529b\uff0c\u5df2\u7ecf\u9884\u89c8\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f46\u5f88\u53ef\u80fd\u4f1a\u5728\u4e0b\u4e2a\u6708\u6b63\u5f0f\u63a8\u51fa\u3002\u8fd9\u6b3e\u5e94\u7528\u7a0b\u5e8f\u66fe\u5728iOS\u4e0a\u8fdb\u884c\u8fc7\u8bd5\u98de\u9884\u89c8\uff0c\u4f46\u7531\u4e8e\u5fae\u8f6f\u5e0c\u671b\u5c06\u5176\u63a8\u5230\u9ec4\u91d1\u65f6\u6bb5\uff0c\u82f9\u679c\u8868\u793a\u4e0d\u4f1a\u90a3\u4e48\u5feb\u3002\n\u83b7\u5f97\u6279\u51c6\u7684\u5e94\u7528\u7a0b\u5e8f\u662fFacebook\u6e38\u620f\u5e94\u7528\u7a0b\u5e8f\uff0cFacebook\u51e0\u4e2a\u6708\u6765\u4e00\u76f4\u8bd5\u56fe\u5c06\u5176\u63a8\u5411App Store\uff0c\u4f46\u90fd\u65e0\u6d4e\u4e8e\u4e8b\u3002\u5728\u8be5\u516c\u53f8\u5265\u79bb\u4e86\u5176\u4e24\u4e2a\u6838\u5fc3\u529f\u80fd\u4e4b\u4e00-\u4e00\u4e2a\u53ef\u73a9\u7684\u624b\u673a\u6e38\u620f\u5e93-\u4e4b\u540e\uff0c\u5b83\u7ec8\u4e8e\u5728\u5468\u4e94\u83b7\u5f97\u6279\u51c6\u3002Facebook\u9996\u5e2d\u8fd0\u8425\u5b98\u8c22\u4e3d\u5c14\u00b7\u6851\u5fb7\u4f2f\u683c\u5728\u7ed9\u201c\u7ebd\u7ea6\u65f6\u62a5\u201d\u7684\u4e00\u4efd\u7b80\u77ed\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u201c\u4e0d\u5e78\u7684\u662f\uff0c\u4e3a\u4e86\u83b7\u5f97\u82f9\u679c\u5bf9Facebook\u72ec\u7acb\u6e38\u620f\u5e94\u7528\u7684\u6279\u51c6\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u5b8c\u5168\u53d6\u6d88\u6e38\u620f\u529f\u80fd\u3002\u201d\n\u5fae\u8f6f\u7684Xbox\u56e2\u961f\u8fd8\u91c7\u53d6\u4e86\u5f02\u5e38\u5484\u5484\u903c\u4eba\u7684\u4e3e\u63aa\uff0c\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u5bf9\u82f9\u679c\u8fdb\u884c\u4e86\u62a8\u51fb\uff0c\u58f0\u660e\u4e2d\u5199\u9053\uff1a\u201c\u82f9\u679c\u662f\u552f\u4e00\u62d2\u7edd\u6d88\u8d39\u8005\u4f7f\u7528\u4e91\u6e38\u620f\u548cXbox Game Pass\u7b49\u6e38\u620f\u8ba2\u9605\u670d\u52a1\u7684\u901a\u7528\u5e73\u53f0\u3002\u800c\u4e14\uff0c\u5b83\u4e00\u8d2f\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5bf9\u5f85\u6e38\u620f\u5e94\u7528\uff0c\u5bf9\u975e\u6e38\u620f\u5e94\u7528\u9002\u7528\u66f4\u5bbd\u677e\u7684\u89c4\u5219\uff0c\u5373\u4f7f\u5b83\u4eec\u5305\u542b\u4e92\u52a8\u5185\u5bb9\u3002\n\u5fae\u8f6f\u4ecd\u7136\u662f\u4e00\u5bb6\u5e02\u503c1.61\u4e07\u4ebf\u7f8e\u5143\u7684\u516c\u53f8\uff0c\u6240\u4ee5\u4e0d\u8981\u8ba4\u4e3a\u6211\u662f\u5728\u4e3a\u4ed6\u4eec\u5439\u6bdb\u6c42\u75b5\uff0c\u4f46iOS\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u6e38\u620f\u5e73\u53f0\uff0c\u9996\u5e2d\u6267\u884c\u5b98\u8482\u59c6\u00b7\u5e93\u514b\u5728\u53bb\u5e74\u516c\u53f8\u63a8\u51fa\u81ea\u5df1\u7684\u6e38\u620f\u8ba2\u9605\u5e73\u53f0Apple Arade\u65f6\u81ea\u8c6a\u5730\u5ba3\u5e03\u4e86\u8fd9\u4e00\u70b9\u3002\u82f9\u679c\u559c\u6b22\u6309\u7167\u81ea\u5df1\u7684\u8282\u594f\u73a9\uff0c\u6240\u6709\u8fd9\u4e9b\u540c\u65f6\u6d8c\u73b0\u7684\u6e38\u620f\u6d41\u5a92\u4f53\u5e73\u53f0\u4f3c\u4e4e\u90fd\u51c6\u5907\u538b\u5012\u4ed6\u4eec\u3002\n\u4e91\u6e38\u620f\u5e94\u7528\u7a0b\u5e8f\u6709\u51e0\u4ef6\u4e8b\u4f3c\u4e4e\u4e0eApp Store\u7684\u4e00\u4e9b\u89c4\u5219\u4e0d\u7b26\uff0c\u4f46\u8fd9\u4e9b\u89c4\u5219\u5f53\u7136\u53ea\u662f\u82f9\u679c\u516c\u53f8\u5199\u7684\u6307\u5bfc\u65b9\u9488\u3002\u5bf9\u4e8e\u82f9\u679c\u6765\u8bf4\uff0c\u4ed6\u4eec\u57fa\u672c\u4e0a\u8868\u793a\uff0cApp Store\u6709\u9986\u957f\u662f\u6709\u539f\u56e0\u7684\uff0c\u6279\u51c6\u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\u610f\u5473\u7740\u4ed6\u4eec\u4e0d\u80fd\u5355\u72ec\u5ba1\u67e5\u5f71\u54cdApp Store\u4f53\u9a8c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\n\u8bf4\u8fd9\u662f\u201c\u539f\u56e0\u201d\u4f3c\u4e4e\u662f\u4e0d\u771f\u8bda\u7684\uff0c\u56e0\u4e3a\u8be5\u516c\u53f8\u957f\u671f\u4ee5\u6765\u4e00\u76f4\u6279\u51c6\u5e73\u53f0\u5728App Store\u4e0a\u8fd0\u8425\uff0c\u800c\u4e0d\u662f\u5728\u53ef\u4ee5\u8bbf\u95ee\u7684\u5355\u4e2a\u5185\u5bb9\u4e0a\u76d6\u7ae0\u6279\u51c6\u3002\u7531\u4e8e\u201c\u6e38\u620f\u201d\u662fApp Store\u6700\u53d7\u6b22\u8fce\u7684\u7c7b\u522b\uff0c\u82f9\u679c\u53ef\u80fd\u66f4\u5173\u5fc3\u5982\u4f55\u8ba9\u81ea\u5df1\u7684\u94b1\u4fdd\u6301\u5e73\u8861\u3002\nCNBC\u7684\u5206\u6790\u8ba4\u4e3a\uff0c\u82f9\u679c2019\u5e74App Store\u7684\u603b\u6536\u5165\u4e3a500\u4ebf\u7f8e\u5143\u3002\n\u5f53\u8fd9\u4e9b\u50cfXCloud\u8fd9\u6837\u7684\u4e91\u6e38\u620f\u5e73\u53f0\u4e0d\u652f\u6301iOS\u65f6\uff0c\u6570\u767e\u4e07\u7684\u82f9\u679c\u5ba2\u6237\uff0c\u5305\u62ec\u6211\u81ea\u5df1\uff0c\u5b9e\u9645\u4e0a\u4f1a\u56e0\u4e3a\u4ed6\u4eec\u7684iPhone\u4e0d\u80fd\u505a\u4ed6\u4eec\u670b\u53cb\u7684\u624b\u673a\u80fd\u505a\u7684\u4e8b\u60c5\u800c\u751f\u6c14\u3002\u5bf9\u4e8e\u6d88\u8d39\u8005\u6765\u8bf4\uff0c\u5728iPhone\u4e0a\u64ad\u653e\u63a7\u5236\u53f0\u7ea7\u522b\u7684\u6e38\u620f\u5c06\u662f\u4e00\u4e2a\u5b9e\u8d28\u6027\u7684\u529f\u80fd\u5347\u7ea7\u3002\u76ee\u524d\u5927\u7ea6\u67099000\u4e07Xbox Live\u7528\u6237\uff0c\u5176\u4e2d\u76f8\u5f53\u4e00\u90e8\u5206\u662fiPhone\u7528\u6237\u3002\u6e38\u620f\u884c\u4e1a\u6b63\u5728\u7a33\u6b65\u56e2\u7ed3\u5728\u6e38\u620f\u8ba2\u9605\u7f51\u7edc\u548c\u4e91\u6e38\u620f\u5468\u56f4\uff0c\u4ee5\u9f13\u52b1\u6d88\u8d39\u8005\u54c1\u5c1d\u66f4\u591a\u7684\u6e38\u620f\uff0c\u53d1\u73b0\u66f4\u591a\u7684\u72ec\u7acb\u70ed\u95e8\u4f5c\u54c1\u3002\n\u6211\u5df2\u7ecf\u770b\u8fc7\u592a\u591a\u8fd9\u6837\u7684\u4f20\u5947\u6545\u4e8b\u4e86\uff0c\u6211\u610f\u8bc6\u5230\u6709\u65f6\u5f53\u4e8b\u4eba\u53d1\u8d77\u8fd9\u4e9b\u4e89\u6597\u7eaf\u7cb9\u662f\u4e3a\u4e86\u5728\u8c08\u5224\u4e2d\u6309\u81ea\u5df1\u7684\u65b9\u5f0f\u884c\u4e8b\uff0c\u907f\u514d\u53d8\u901a\uff0c\u4f46\u8fd9\u662f\u4e00\u79cd\u53ea\u6709\u5f53\u6d88\u8d39\u8005\u6709\u7406\u7531\u5173\u5fc3\u7684\u65f6\u5019\u624d\u4f1a\u771f\u6b63\u594f\u6548\u7684\u7b56\u7565\u3002\u5927\u591a\u6570\u66f4\u5927\u7684App Store\u5f00\u53d1\u8005\u4e89\u6267\u90fd\u662f\u5728\u5e55\u540e\u8fdb\u884c\u7684\uff0c\u540e\u6765\u624d\u66dd\u5149\uff0c\u4f46\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0cXbox\u56e2\u961f\u65e0\u7591\u770b\u5230\uff0c\u5728\u53cd\u5784\u65ad\u5173\u6ce8\u65e5\u76ca\u52a0\u5267\u7684\u60c5\u51b5\u4e0b\uff0c\u82f9\u679c\u5e76\u4e0d\u80fd\u5f88\u597d\u5730\u53d1\u52a8App Store\u6218\u4e89\u3002\u82f9\u679c\u4f3c\u4e4e\u5b8c\u5168\u4e13\u6ce8\u4e8e\u4fdd\u6301\u6d88\u8d39\u8005\u5728\u82f9\u679c\u5c4f\u5e55\u4e0a\u73a9\u7684\u6e38\u620f\u7684\u8d27\u5e01\u5316\u4f18\u52bf\u3002\n\u9996\u5e2d\u6267\u884c\u5b98\u8482\u59c6\u00b7\u5e93\u514b(Tim Cook)\u82b1\u4e86\u5927\u91cf\u65f6\u95f4\u5728\u4ed6\u7684\u56fd\u4f1a\u53d8\u901f\u5ba4(Congressional Zoom Room)\u91cc\u56de\u7b54\u6709\u5173\u516c\u53f8\u5e94\u7528\u7a0b\u5e8f\u5e97\u9762\u88ab\u8ba4\u4e3a\u662f\u53cd\u7ade\u4e89\u7684\u95ee\u9898\u3002\n\u6211\u80fd\u770b\u5230\u7684\u6700\u5927\u7684\u7d27\u5f20\u70b9\u662f\uff0c\u8fd9\u4e9b\u6e38\u620f\u4e2d\u7684\u5f88\u591a\u90fd\u63d0\u4f9b\u6e38\u620f\u5185\u4ea4\u6613\uff0c\u4ec5\u4ec5\u56e0\u4e3a\u5e94\u7528\u5185\u8d2d\u4e70\u6846\u67b6\u662f\u4ece\u4e91\u7aef\u7535\u8111\u76f4\u64ad\u7684\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u7528\u6237\u4e0d\u518d\u4f7f\u7528\u5728\u82f9\u679c\u8bbe\u5907\u4e0a\u4f53\u9a8c\u8fd9\u4e9b\u5185\u5bb9\u3002\u6211\u4e0d\u786e\u5b9a\u8fd9\u662f\u5426\u771f\u7684\u662f\u4e89\u8bba\u7684\u7126\u70b9\uff0c\u4f46\u5b83\u4f3c\u4e4e\u4f1a\u5bf9\u82f9\u679c\u5728\u6574\u4e2a\u751f\u6001\u7cfb\u7edf\u5185\u7684\u5e94\u7528\u5185\u8d2d\u4e70\u70ed\u6f6e\u6784\u6210\u91cd\u5927\u5a01\u80c1\u3002\nApp Store\u76ee\u524d\u4e0d\u652f\u6301Nvidia\u7684GeForce\u5e73\u53f0\u6216\u8c37\u6b4c\u7684Stadia\u4e0a\u7684\u4e91\u6e38\u620f\uff0c\u8fd9\u4e24\u4e2a\u5e73\u53f0\u4e5f\u90fd\u53ef\u4ee5\u5728Android\u624b\u673a\u4e0a\u4f7f\u7528\u3002\u8fd9\u4e24\u4e2a\u5e73\u53f0\u5728\u8303\u56f4\u4e0a\u90fd\u6bd4\u5fae\u8f6f\u7684\u4ea7\u54c1\u66f4\u6709\u9650\uff0c\u5fae\u8f6f\u7684\u4ea7\u54c1\u9884\u8ba1\u4f1a\u5f97\u5230\u66f4\u5e7f\u6cdb\u7684\u652f\u6301\u548c\u66f4\u5e7f\u6cdb\u7684\u91c7\u7528\u3002\n\u867d\u7136\u6211\u53ef\u4ee5\u7406\u89e3\u82f9\u679c\u4e0d\u60f3\u8ba9\u53ef\u80fd\u56e0\u4e3a\u7cfb\u7edf\u9650\u5236\u800c\u65e0\u6cd5\u5728iPhone\u4e0a\u6b63\u5e38\u8fd0\u884c\u7684\u6e38\u620f\uff0c\u4f46\u8fd9\u4e00\u8bba\u70b9\u5e76\u4e0d\u9002\u7528\u4e8e\u4e91\u6e38\u620f\u4e16\u754c\uff0c\u56e0\u4e3a\u5728\u4e91\u6e38\u620f\u4e16\u754c\uff0c\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u5c06\u6309\u4e0b\u7684\u6309\u94ae\u8f6c\u6362\u5230\u4e91\u4e2d\uff0c\u800c\u4e91\u6b63\u5728\u5c06\u5b83\u4eec\u53d1\u56de\u4e0b\u4e00\u4e2a\u5f15\u64ce\u6e32\u67d3\u7684\u6e38\u620f\u5e27\u3002\u82f9\u679c\u88ab\u8feb\u5bf9\u54ea\u4e9b\u5a92\u4f53\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\u88ab\u5f52\u5165\u201c\u9605\u8bfb\u5668\u201d\u7684\u540d\u79f0\u505a\u51fa\u4e86\u76f8\u5f53\u8be6\u7ec6\u7684\u89c4\u5b9a\u3002\u4e91\u6e38\u620f\u5e73\u53f0\u4e0e\u751f\u4ff1\u6765\u7684\u4ea4\u4e92\u6027\u4f3c\u4e4e\u5c31\u662f\u82f9\u679c\u5728\u8fd9\u91cc\u63a8\u52a8\u7684\u5dee\u5f02\u5316-\u4ee5\u53ca\u5141\u8bb8\u6e38\u620f\u73a9\u5bb6\u76f4\u63a5\u63a8\u51fa\u6e38\u620f\u7684\u754c\u9762\uff0c\u5176\u754c\u9762\u6bd4\u4e00\u4e9b\u666e\u901a\u7684\u8fdc\u7a0b\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u8981\u4e13\u4e1a\u5f97\u591a\u3002\n\u6240\u6709\u8fd9\u4e9b\u5e73\u53f0\u90fd\u662f\u5728\u82f9\u679c\u63a8\u51faApple Arade\u4e4b\u540e\u63a8\u51fa\u7684\u3002Apple Arade\u662f\u4e00\u6b3e\u975e\u4e91\u6e38\u620f\u4ea7\u54c1\uff0c\u82f9\u679c\u8ba4\u4e3a\u8fd9\u662f\u5b83\u5728\u6e38\u620f\u754c\u57f9\u517b\u7684\u4ef7\u503c\u89c2\uff1a\u6ca1\u6709\u4fb5\u6270\u6027\u5e7f\u544a\u7684\u5bb6\u5ead\u53cb\u597d\u578b\u72ec\u7acb\u6e38\u620f\uff0c\u6ca1\u6709\u70e6\u4eba\u7684\u5fae\u4ea4\u6613\uff0c\u4ee5\u53ca\u82f9\u679c\u7684\u5bc6\u5207\u5ba1\u67e5\u3002\n\u82f9\u679c\u5728\u6e38\u620f\u754c\u7684\u9a7e\u9a76\u5ea7\u5730\u4f4d\u5bf9\u8be5\u884c\u4e1a\u7684\u5f71\u54cd\u8fd8\u8fdc\u8fdc\u8c08\u4e0d\u4e0a\u662f\u5b8c\u5168\u79ef\u6781\u7684\u3002\u82f9\u679c\u626e\u6f14\u4e86\u770b\u95e8\u4eba\u7684\u89d2\u8272\uff0c\u4f46\u4e8b\u5b9e\u662f\uff0cApp Store\u653f\u7b56\u63a8\u52a8\u7684\u8bb8\u591a\u201c\u521b\u65b0\u201d\u5bf9\u82f9\u679c\u6765\u8bf4\u662f\u597d\u7684\uff0c\u4f46\u5bf9\u4e8e\u6e38\u620f\u53cb\u597d\u578b\u6e38\u620f\u884c\u4e1a\u7684\u53d1\u5c55\u6765\u8bf4\u5374\u662f\u6709\u95ee\u9898\u7684\u3002\n\u82f9\u679c\u901a\u8fc7\u63a8\u52a8\u5e94\u7528\u5185\u8d2d\u4e70\u4fc3\u8fdb\u4e86\u514d\u8d39\u6e38\u620f\u7684\u51fa\u73b0\uff0c\u8fd9\u4e9b\u5e94\u7528\u5185\u8d2d\u4e70\u591a\u5e74\u6765\u4e00\u76f4\u88ab\u8086\u65e0\u5fcc\u60ee\u5730\u6ee5\u7528\uff0c\u56e0\u4e3a\u5236\u7247\u5382\u4e00\u76f4\u88ab\u4e0d\u53ef\u6297\u62d2\u5730\u63a8\u52a8\u4ee5\u4e0a\u763e\u539f\u5219\u4e3a\u57fa\u7840\u6765\u6784\u5efa\u81ea\u5df1\u7684\u6e38\u620f\u3002\u5728\u8fc7\u53bb\u7684\u5341\u5e74\u91cc\uff0c\u624b\u673a\u6e38\u620f\u4e00\u76f4\u662f\u72c2\u91ce\u897f\u90e8\u521d\u521b\u516c\u53f8\u589e\u957f\u4e2d\u6bd4\u8f83\u75af\u72c2\u7684\u9886\u57df\u4e4b\u4e00\uff0c\u82f9\u679c\u5728\u8fd9\u4e9b\u6e38\u620f\u4e2d\u4fc3\u8fdb\u5feb\u901f\u4ea4\u6613\u7684\u673a\u5236\u53d1\u5c55\u8fc5\u901f\uff0c\u60c5\u51b5\u4e0d\u5999\u3002\n\u770b\u770bApp Store\u4e2d\u7968\u623f\u6536\u5165\u6700\u9ad8\u7684200\u6b3e\u6e38\u620f(\u901a\u8fc7Sensor Tower\u83b7\u5f97\u7684\u6570\u636e)\uff0c\u4f60\u4f1a\u53d1\u73b0\u6240\u6709199\u6b3e\u6e38\u620f\u90fd\u662f\u5b8c\u5168\u4f9d\u9760\u5e94\u7528\u5185\u5fae\u4ea4\u6613\u6765\u8fbe\u5230\u8fd9\u4e00\u5730\u4f4d\u7684-\u5fae\u8f6f\u6392\u540d\u7b2c50\u4f4d\u7684\u201c\u6211\u7684\u4e16\u754c\u201d(Minworld)\u7684\u4e0b\u8f7d\u8d39\u7528\u4e3a6.99\u7f8e\u5143\uff0c\u5c3d\u7ba1\u5b83\u4e5f\u63d0\u4f9b\u5e94\u7528\u5185\u8d2d\u4e70\u3002\n2013\u5e74\uff0c\u8be5\u516c\u53f8\u5c31\u4e00\u8d77\u96c6\u4f53\u8bc9\u8bbc\u8fbe\u6210\u548c\u89e3\uff0c\u8fd9\u8d77\u8bc9\u8bbc\u662f\u5728\u7236\u6bcd\u8d77\u8bc9\u82f9\u679c\u516c\u53f8(Apple)\u8ba9\u5b69\u5b50\u4eec\u592a\u5bb9\u6613\u5728\u5e94\u7528\u7a0b\u5e8f\u5185\u8d2d\u4e70\u4e4b\u540e\u5f00\u59cb\u7684\u30022014\u5e74\uff0c\u82f9\u679c\u4ee53200\u4e07\u7f8e\u5143\u7684\u4ef7\u683c\u4e0e\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u5c31\u76f8\u540c\u673a\u5236\u8fbe\u6210\u548c\u89e3\u3002\u4eca\u5e74\uff0c\u4e00\u8d77\u9488\u5bf9\u82f9\u679c\u516c\u53f8\u7684\u8bc9\u8bbc\u8d28\u7591\u4e86\u201c\u62a2\u52ab\u76d2\u201d\u5e94\u7528\u5185\u8d2d\u4e70\u7684\u5408\u6cd5\u6027\uff0c\u8fd9\u79cd\u8d2d\u4e70\u7ed9\u6e38\u620f\u73a9\u5bb6\u968f\u673a\u7684\u6570\u5b57\u5956\u52b1\u3002\n\u8fd9\u4efd\u6700\u65b0\u7684\u8bc9\u8bbc\u6587\u4ef6\u5199\u9053\uff1a\u201c\u82f9\u679c\u901a\u8fc7\u5176AppStore\u5411\u6d88\u8d39\u8005\u514d\u8d39\u51fa\u552e\u548c\u63d0\u4f9b\u7684\u6e38\u620f\uff0c\u4ece\u4e8b\u63a0\u593a\u6027\u884c\u4e3a\uff0c\u5f15\u8bf1\u6d88\u8d39\u8005\uff0c\u5305\u62ec\u513f\u7ae5\u53c2\u4e0e\u8d4c\u535a\u548c\u7c7b\u4f3c\u7684\u4e0a\u763e\u884c\u4e3a\uff0c\u8fdd\u53cd\u4e86\u65e8\u5728\u4fdd\u62a4\u6d88\u8d39\u8005\u548c\u7981\u6b62\u6b64\u7c7b\u884c\u4e3a\u7684\u8fd9\u9879\u6cd5\u5f8b\u548c\u5176\u4ed6\u6cd5\u5f8b\u3002\u201d\n\u5f53\u7136\uff0c\u82f9\u679c\u5e76\u4e0d\u662f\u8fd9\u6837\u770b\u5f85\u81ea\u5df1\u5728\u6e38\u620f\u884c\u4e1a\u4e2d\u7684\u89d2\u8272\u3002\u5728\u5411\u201c\u5546\u4e1a\u5185\u5e55\u201d(Business Insider)\u53d1\u8868\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u82f9\u679c\u56de\u5e94\u4e86\u8be5\u516c\u53f8\u5bf9\u5fae\u8f6fXCloud\u7684\u5426\u8ba4\uff0c\u5e76\u5c55\u793a\u4e86\u81ea\u5df1\u7684\u6d88\u606f\u3002\n\u521b\u5efaApp Store\u7684\u521d\u8877\u662f\u4e3a\u5ba2\u6237\u63d0\u4f9b\u4e00\u4e2a\u5b89\u5168\u3001\u503c\u5f97\u4fe1\u8d56\u7684\u5730\u65b9\u6765\u53d1\u73b0\u548c\u4e0b\u8f7d\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e3a\u6240\u6709\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u5de8\u5927\u7684\u5546\u673a\u3002\u5728\u4e0a\u67b6\u6211\u4eec\u7684\u5546\u5e97\u4e4b\u524d\uff0c\u6240\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f1a\u6839\u636e\u4e00\u5957\u76f8\u540c\u7684\u6307\u5bfc\u65b9\u9488\u8fdb\u884c\u5ba1\u67e5\uff0c\u8fd9\u4e9b\u6307\u5bfc\u65b9\u9488\u65e8\u5728\u4fdd\u62a4\u5ba2\u6237\uff0c\u5e76\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u516c\u5e73\u548c\u516c\u5e73\u7684\u7ade\u4e89\u73af\u5883\u3002\n\u6211\u4eec\u7684\u5ba2\u6237\u4eab\u53d7\u6570\u4ee5\u767e\u4e07\u8ba1\u7684\u5f00\u53d1\u8005\u63d0\u4f9b\u7684\u4f18\u79c0\u5e94\u7528\u7a0b\u5e8f\u548c\u6e38\u620f\uff0c\u6e38\u620f\u670d\u52a1\u5b8c\u5168\u53ef\u4ee5\u5728App Store\u4e0a\u63a8\u51fa\uff0c\u53ea\u8981\u4ed6\u4eec\u9075\u5faa\u9002\u7528\u4e8e\u6240\u6709\u5f00\u53d1\u8005\u7684\u540c\u4e00\u5957\u6307\u5bfc\u65b9\u9488\uff0c\u5305\u62ec\u5355\u72ec\u63d0\u4ea4\u6e38\u620f\u4f9b\u5ba1\u67e5\uff0c\u5e76\u663e\u793a\u5728\u56fe\u8868\u548c\u641c\u7d22\u4e2d\u3002\u9664\u4e86App Store\uff0c\u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u9009\u62e9\u901a\u8fc7App Store\u4e0a\u7684Safari\u548c\u5176\u4ed6\u6d4f\u89c8\u5668\u901a\u8fc7\u7f51\u7edc\u63a5\u89e6\u5230\u6240\u6709iPhone\u548ciPad\u7528\u6237\u3002\n\u5f88\u660e\u663e\uff0c\u8fd9\u79cd\u5f71\u54cd\u5e76\u4e0d\u5b8c\u5168\u662f\u8d1f\u9762\u7684\uff0c\u4f46\u5f53\u884c\u4e1a\u53d8\u5316\u6709\u5229\u4e8e\u6bcd\u516c\u53f8\u65f6\uff0c\u82f9\u679c\u4e00\u76f4\u5728\u968f\u5fc3\u6240\u6b32\u5730\u5e94\u5bf9\u8fd9\u4e9b\u53d8\u5316\u3002\u6211\u4e0d\u4f1a\u50cf\u7d22\u5c3c\u548c\u5fae\u8f6f\u591a\u5e74\u6765\u7684\u8bb8\u591a\u884c\u52a8\u90a3\u6837\uff0c\u5bf9\u6e38\u620f\u73a9\u5bb6\u505a\u51fa\u7c7b\u4f3c\u7684\u5192\u72af\uff0c\u4f46\u82f9\u679c\u884c\u4f7f\u7740\u5176\u5728\u6574\u4e2a\u884c\u4e1a\u7684\u5f71\u54cd\u529b\uff0c\u8fd0\u8425\u7740\u4e16\u754c\u4e0a\u6700\u5927\u7684\u6e38\u620f\u5e73\u53f0\uff0c\u592a\u9891\u7e41\u4e86\uff0c\u6e38\u620f\u73a9\u5bb6\u5728\u4fe1\u4efbApp Store\u6240\u6709\u8005\u505a\u51fa\u5c06\u4ed6\u4eec\u7684\u6700\u4f73\u5229\u76ca\u653e\u5728\u5fc3\u4e0a\u7684\u51b3\u5b9a\u65f6\u5e94\u8be5\u8c28\u614e\u3002\n\u5982\u679c\u4f60\u6b63\u5728TechCrunch\u7f51\u7ad9\u4e0a\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u8fd9\u91cc\u8ba2\u9605Week in Review\uff0c\u5e76\u5728\u8fd9\u91cc\u5173\u6ce8\u6211\u7684\u63a8\u6587\uff0c\u83b7\u5f97\u66f4\u591a\u6211\u6bcf\u5468\u5bf9\u65b0\u95fb\u7684\u770b\u6cd5\u548c\u7b14\u8bb0\u3002", "note_en": "The company made the news a couple times late this week for App Store approvals. Once for denying a gaming app, and the other for approving one.\n The denial was  Microsoft\u2019s    xCloud   gaming app, something the Xbox folks weren\u2019t too psyched about. Microsoft xCloud is one of the Xbox\u2019s most substantial software platform plays in quite some time, allowing gamers to live-stream titles from the cloud and play console-quality games across a number of devices. It\u2019s a huge effort that\u2019s been in preview for a bit, but is likely going to officially launch next month. The app had been in a Testflight preview for iOS, but as Microsoft looked to push it to primetime, Apple said not so fast.\n  The app that was approved was the Facebook Gaming app which Facebook has been trying to shove through the App Store for months to no avail. It was at last approved Friday after the company stripped one of its two central features, a library of playable mobile games. In a curt statement to  The New York Times, Facebook COO Sheryl Sandberg said, \u201cUnfortunately, we had to remove gameplay functionality entirely in order to get Apple\u2019s approval on the stand-alone Facebook Gaming app.\u201d\n Microsoft\u2019s Xbox team also took the unusually aggressive step of calling out Apple in a statement that reads, in-part, \u201cApple stands alone as the only general purpose platform to deny consumers from cloud gaming and game subscription services like Xbox Game Pass. And it consistently treats gaming apps differently, applying more lenient rules to non-gaming apps even when they include interactive content.\u201d\n Microsoft is still a $1.61 trillion company so don\u2019t think I\u2019m busting out the violin for them, but iOS is the world\u2019s largest gaming platform, something CEO Tim Cook proudly proclaimed when the company launched its own game subscription platform, Apple Arcade, last year. Apple likes to play at its own pace, and all of these game-streaming platforms popping up at the same time seem poised to overwhelm them.\n  There are a few things about cloud gaming apps that seem at odds with some of the App Store\u2019s rules, yet these rules are, of course, just guidelines written by Apple.\u00a0 For Apple\u2019s part, they basically said (full statement later) that the App Store had curators for a reason and that approving apps like these means they can\u2019t individually review the apps which compromises the App Store experience.\n To say that\u2019s \u201cthe reason\u201d seems disingenuous because the company has long approved platforms to operate on the App Store without stamping approval on the individual pieces of content that can be accessed. With \u201cGames\u201d representing the App Store\u2019s most popular category, Apple likely cares much more about keeping their own money straight.\n Analysis from  CNBC pinned Apple\u2019s 2019 App Store total revenue at $50 billion.\n When these cloud gaming platforms like xCloud scale with zero iOS support, millions of Apple customers, myself included, are actually going to be pissed that their iPhone can\u2019t do something that their friend\u2019s phone can. Playing console-class titles on the iPhone would be a substantial feature upgrade for consumers. There are about 90 million Xbox Live users out there, a substantial number of which are iPhone owners I would imagine. The games industry is steadily rallying around game subscription networks and cloud gaming as a move to encourage consumers to sample more titles and discover more indie hits.\n I\u2019ve seen enough of these sagas to realize that sometimes parties will kick off these fights purely as a tactic to get their way in negotiations and avoid workarounds, but it\u2019s a tactic that really only works when consumers have a reason to care. Most of the bigger App Store developer spats have played in the background and come to light later, but at this point the Xbox team undoubtedly sees that Apple isn\u2019t positioned all that well to wage an App Store war in the midst of increased antitrust attention over a cause that seems wholly focused on maintaining their edge in monetizing the games consumers play on Apple screens.\n CEO Tim Cook spent an awful lot of time in his Congressional Zoom room answering question about perceived anticompetitiveness on the company\u2019s application storefront.\n The big point of tension I could see happening behind closed doors is that plenty of these titles offer in-game transactions and just because that in-app purchase framework is being live-streamed from a cloud computer doesn\u2019t mean that a user isn\u2019t still using experiencing that content on an Apple device. I\u2019m not sure whether this is actually the point of contention, but it seems like it would be a major threat to Apple\u2019s ecosystem-wide in-app purchase raking.\n The App Store does not currently support cloud gaming on Nvidia\u2019s GeForce platform or Google\u2019s Stadia which are also both available on  Android   phones. Both of these platforms are more limited in scope than Microsoft\u2019s offering which is expected to launch with wider support and pick up wider adoption.\n While I can understand Apple\u2019s desire to not have gaming titles ship that might not function properly on an iPhone because of system constraints, that argument doesn\u2019t apply so well to the cloud gaming world where apps are translating button presses to the cloud and the cloud is sending them back the next engine-rendered frames of their game. Apple is being forced to get pretty particular about what media types of apps fall under the \u201creader\u201d designation. The inherent interactivity of a cloud gaming platform seems to be the differentiation Apple is pushing here \u2014 as well as the interfaces that allows gamers to directly launch titles with an interface that\u2019s far more specialized than some generic remote desktop app.\n All of these platforms arrive after the company already launched Apple Arcade, a non-cloud gaming product made in the image of what Apple would like to think are the values it fosters in the gaming world: family friendly indie titles with no intrusive ads, no bothersome micro-transactions and Apple\u2019s watchful review.\n Apple\u2019s driver\u2019s seat position in the gaming world has been far from a wholly positive influence for the industry. Apple has acted as a gatekeeper, but the fact is plenty of the \u201cinnovations\u201d pushed through as a result of App Store policies have been great for Apple but questionable for the development of a gamer-friendly games industry.\n Apple facilitated the advent of free-to-play games by pushing in-app purchases which have been abused recklessly over the years as studios have been irresistibly pushed to structure their titles around principles of addiction. Mobile gaming has been one of the more insane areas of Wild West startup growth over the past decade and Apple\u2019s mechanics for fueling quick transactions inside these titles has moved fast and broken things.\n  Take a look at the 200 top grossing games in the App Store (data via  Sensor Tower)   and you\u2019ll see that all 199 of them rely solely on in-app micro-transaction to reach that status \u2014 Microsoft\u2019s Minecraft, ranked 50th costs $6.99 to download, though it also offers in-app purchases.\n In 2013, the company  settled a class-action lawsuit that kicked off after parents sued Apple for making it too easy for kids to make in-app purchases. In 2014, Apple  settled a case with the FTC over the same mechanism for $32 million. This year, a lawsuit  filed against Apple questioned the legality of \u201cloot box\u201d in-app purchases which gave gamers randomized digital awards.\n \u201cThrough the games it sells and offers for free to consumers through its AppStore, Apple engages in predatory practices enticing consumers, including children to engage in gambling and similar addictive conduct in violation of this and other laws designed to protect consumers and to prohibit such practices,\u201d read that most recent lawsuit filing.\n This is, of course, not how Apple sees its role in the gaming industry. In a statement to  Business Insider responding to the company\u2019s denial of Microsoft\u2019s xCloud, Apple laid out its messaging.\n The App Store was created to be a safe and trusted place for customers to discover and download apps, and a great business opportunity for all developers. Before they go on our store, all apps are reviewed against the same set of guidelines that are intended to protect customers and provide a fair and level playing field to developers.\n Our customers enjoy great apps and games from millions of developers, and gaming services can absolutely launch on the App Store as long as they follow the same set of guidelines applicable to all developers, including submitting games individually for review, and appearing in charts and search. In addition to the App Store, developers can choose to reach all iPhone and iPad users over the web through Safari and other browsers on the App Store.\n The impact has \u2014 quite obviously \u2014 not been uniformly negative, but Apple has played fast and loose with industry changes when they benefit the mothership. I won\u2019t act like plenty of  Sony   and Microsoft\u2019s actions over the years haven\u2019t offered similar affronts to gamers, but Apple exercises the industry-wide sway it holds, operating the world\u2019s largest gaming platform, too often and gamers should be cautious in trusting the App Store owner to make decisions that have their best interests at heart.\n  If you\u2019re reading this on the TechCrunch site, you can get more of my weekly opinions and notes on the news by subscribing to Week in Review   here, and following my tweets   here.", "posttime": "2020-08-10 06:58:15", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "apple,\u6e38\u620f,\u82f9\u679c,war", "title": "\n\u82f9\u679c\u4e0e\u6e38\u620f\u884c\u4e1a\u5f00\u6218", "title_en": "\n\t\t\t\tApple goes to war with the gaming industry\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/08/09/apple-goes-to-war-with-the-gaming-industry/", "via": "", "real_tags": ["apple", "\u6e38\u620f", "\u82f9\u679c", "war"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1017256, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "/COLOR/Atom\u63d0\u8981\u6765\u81ea\uff1aLinus Torvalds&lt\uff1btorvalds@linux-oundation.org&gt\uff1b\u6536\u4ef6\u4eba\uff1alinux\u5185\u6838\u90ae\u4ef6\u5217\u8868&lt\uff1blinux-kernel@vger.kernel.org&gt\uff1b\u4e3b\u9898\uff1alinux 5.8-rc1\u65e5\u671f\uff1aSun\uff0c14 Jun 2020 13\uff1a44\uff1a07-0700 Message-ID\uff1a&lt\uff1bCAHk-=whfuea587g8rh2DeLFFGYxiVuh-bzq22osJwz3q4SOfmA@mail.gmail.com&gt\uff1b(RAW)\u6240\u4ee5\u6211\u6ca1\u60f3\u5230\u4f1a\u8fd9\u6837\uff0c\u4f465.8\u770b\u8d77\u6765\u662f\u6211\u4eec\u6709\u53f2\u4ee5\u6765\u6700\u91cd\u8981\u7684\u7248\u672c\u4e4b\u4e00\u3002\u5b83\u4e0eV4.9\u5e76\u9a7e\u9f50\u9a71\uff0c\u957f\u671f\u4ee5\u6765\uff0c\u5b83\u4e00\u76f4\u662f\u6211\u4eec\u63d0\u4ea4\u6b21\u6570\u6700\u591a\u7684\u7248\u672c\u3002\u662f\u7684\uff0c5.8-rc1\u6bd44.9-rc1\u5c11\u4e86\u51e0\u6b21\u63d0\u4ea4\uff0c\u4f46\u5728\u5f88\u591a\u65b9\u9762\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\u662f\u4e00\u4e2a\u66f4\u5168\u9762\u7684\u7248\u672c\u30024.9\u5185\u6838\u88ab\u4eba\u4e3a\u5730\u53d8\u5927\uff0c\u90e8\u5206\u539f\u56e0\u662f\u8be5\u7248\u672c\u4e2d\u5408\u5e76\u4e86greybus\u5b50\u7cfb\u7edf\uff0c\u4f46\u4e5f\u56e0\u4e3av4.8\u6709\u66f4\u957f\u7684RC\u7cfb\u5217\uff0c\u56e0\u6b64\u6709\u66f4\u591a\u88ab\u538b\u6291\u7684\u5f00\u53d1\u3002\u57285.8\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u6ca1\u6709\u8ff9\u8c61\u8868\u660e\u8fd9\u7c7b\u95ee\u9898\u4f1a\u8ba9\u53d1\u884c\u7248\u53d8\u5f97\u66f4\u5927--\u53ea\u662f\u6709\u5f88\u591a\u5f00\u53d1\u800c\u5df2\u3002\u8fd8\u6709\u5176\u4ed6\u5185\u6838\u53d1\u884c\u7248\u6709\u66f4\u591a\u7684\u65b0\u4ee3\u7801\u884c--4.12\u7248\u5728\u8fd9\u65b9\u9762\u662f\u65e0\u53ef\u4e89\u8bae\u7684\u5927\u5c0f\u51a0\u519b\uff0c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u5b83\u6709\u5927\u91cf\u7684\u65b0\u4ee3\u7801\u884c\uff0c\u8fd9\u662f\u56e0\u4e3aAMD GPU\u9a71\u52a8\u7a0b\u5e8f\u7684\u5bc4\u5b58\u5668\u63cf\u8ff0\u592a\u591a\u4e86\u3002\u7531\u4e8e\u7279\u5b9a\u7684\u5b50\u7cfb\u7edf\uff0c\u5176\u4ed6\u5185\u6838\u4e5f\u6709\u7c7b\u4f3c\u7684\u5927\u5c0f(V4.2\u589e\u52a0\u4e86AMD GPU\u9a71\u52a8\u7a0b\u5e8f\u884c\u6570\uff0c2.6.29\u589e\u52a0\u4e86\u5927\u91cf\u7684\u767b\u53f0\u9a71\u52a8\u7a0b\u5e8f\uff0c\u7b49\u7b49)\u3002\u4f46\u662f\uff0c5.8\u4ecd\u7136\u662f\u6700\u597d\u7684\uff0c\u5c3d\u7ba1\u6ca1\u6709\u4efb\u4f55\u771f\u6b63\u7a81\u51fa\u7684\u4e1c\u897f\u3002\u662f\u7684\uff0c\u6709\u51e0\u4e2a\u5f88\u5927\u7684\u9a71\u52a8\u5668\u53d8\u5316(habanalab\u548cAtomisp)\u80af\u5b9a\u662f\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u662f\u5b83\u4e0d\u50cf\u5176\u4ed6\u5386\u53f2\u4e0a\u7684\u5927\u7248\u672c\u90a3\u6837\u662f\u7247\u9762\u7684\u3002\u5f00\u53d1\u786e\u5b9e\u662f\u65e0\u5904\u4e0d\u5728\u7684\uff1a\u6709\u5927\u91cf\u516c\u5e73\u7684\u57fa\u7840\u6838\u5fc3\u5de5\u4f5c\u548c\u6e05\u7406\uff0c\u4f46\u4e5f\u6709\u5927\u91cf\u7684\u7cfb\u7edf\u5de5\u4f5c\uff0c\u663e\u7136\u4e5f\u6709\u6240\u6709\u5e38\u89c1\u7684\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u6587\u6863\u548c\u5f52\u6863\u5de5\u4f5c\u3002\u4e8b\u5b9e\u4e0a\uff0c5.8-rc1\u5728\u63d0\u4ea4\u6570\u91cf\u548c\u65b0\u884c\u6570\u91cf\u65b9\u9762\u90fd\u4e0e\u6700\u597d\u7684\u7248\u672c\u5e76\u9a7e\u9f50\u9a71\uff0c\u4f46\u5728\u66f4\u6539\u7684\u6587\u4ef6\u6570\u91cf\u65b9\u9762\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u6700\u51fa\u8272\u7684\u51a0\u519b\u3002(=\u3002\u518d\u8bf4\u4e00\u6b21\uff0c\u8fd9\u5e76\u4e0d\u662f\u56e0\u4e3a\u4e00\u4e9b\u5355\u4e00\u7684\u6811\u8303\u56f4\u7684\u7b80\u5355\u811a\u672c\u7f16\u5199(\u5177\u6709\u5927\u91cfSPDX\u8bb8\u53ef\u8bc1\u884c\u66f4\u6539\u7684\u5185\u6838\u66f4\u6539\u4e86\u8bb8\u591a\u6587\u4ef6)\uff0c\u800c\u4ec5\u4ec5\u662f\u56e0\u4e3a\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u5f00\u53d1\u5de5\u4f5c\u3002\u56e0\u6b64\uff0c\u57285.8\u5408\u5e76\u7a97\u53e3\u4e2d\uff0c\u6211\u4eec\u4fee\u6539\u4e86\u5185\u6838\u6e90\u4ee3\u7801\u5b58\u50a8\u5e93\u4e2d\u5927\u7ea620%\u7684\u6587\u4ef6\u3002\u8fd9\u786e\u5b9e\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u6bd4\u4f8b\uff0c\u867d\u7136\u5176\u4e2d\u4e00\u4e9b\u662f\u7167\u672c\u5ba3\u79d1\u7684\uff0c\u4f46\u603b\u4f53\u6765\u8bf4\u786e\u5b9e\u662f\u4e00\u6837\u7684\u6a21\u5f0f\uff1a5.8\u53ea\u662f\u770b\u5230\u4e86\u5f88\u5927\u7684\u53d1\u5c55\u3002IOW\uff0c5.8\u770b\u8d77\u6765\u5f88\u5927\u3002\u771f\u7684\u5f88\u5927\u3002\u7eaf\u7cb9\u7684\u6570\u5b57\u662f\uff1a\u8d85\u8fc714k\u6b21\u975e\u5408\u5e76\u63d0\u4ea4(\u8d85\u8fc715k\u6b21\u8ba1\u6570\u5408\u5e76)\uff0c\u5927\u7ea6800k\u4e2a\u65b0\u884c\uff0c\u8d85\u8fc714000\u4e2a\u6587\u4ef6\u88ab\u66f4\u6539\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5c3d\u7ba1\u5b83\u5f88\u5927\uff0c\u4f46\u81f3\u5c11\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5b83\u770b\u8d77\u6765\u5e76\u4e0d\u4e00\u5b9a\u50cf\u662f\u4e00\u4e2a\u7279\u522b\u9ebb\u70e6\u7684\u7248\u672c\u3002\u662f\u7684\uff0c\u7eaf\u7cb9\u7684\u5927\u5c0f\u4f7f\u8fd9\u4e2a\u5408\u5e76\u7a97\u53e3\u6bd4\u6211\u559c\u6b22\u7684\u66f4\u6709\u538b\u529b\uff0c\u56e0\u4e3a\u6211\u771f\u7684\u559c\u6b22\u5728\u6700\u540e\u6709\u51e0\u5929\u7684\u5e73\u9759\u65f6\u95f4\u6765\u66f4\u8be6\u7ec6\u5730\u67e5\u770b\u4e00\u4e9b\u62c9\u5165\u8bf7\u6c42\u3002\u8fd9\u4e00\u6b21\uff0c\u8fd9\u79cd\u60c5\u51b5\u4ece\u672a\u771f\u6b63\u53d1\u751f\u8fc7\u3002\u4f46\u662f\u6211\u771f\u7684\u53ea\u6709\u4e24\u4e2a\u62c9\u8bf7\u6c42\u6700\u7ec8\u60f3\u8981\u66f4\u8be6\u7ec6\u5730\u68c0\u67e5\uff0c\u6240\u4ee5\u4e00\u5207\u90fd\u5f88\u597d\u3002\u6240\u4ee5\u8fd9\u4e2a\u5408\u5e76\u7a97\u53e3\u7684\u7eaf\u7cb9\u5927\u5c0f\u786e\u5b9e\u8ba9\u6211(\u518d\u4e00\u6b21)\u8003\u8651\u5236\u5b9a\u4e00\u4e2a\u66f4\u4e25\u683c\u7684\u89c4\u5219\uff0c\u5373\u5728\u5408\u5e76\u7a97\u53e3\u7684\u7b2c\u4e00\u5468\u7edd\u5bf9\u5fc5\u987b\u8fdb\u5165\u5177\u6709\u65b0\u529f\u80fd\u7684\u62c9\u8bf7\u6c42(\u800c\u4e0d\u662f\u5177\u6709\u516c\u6b63\u4fee\u590d\u7684\u7b2c\u4e8c\u6ce2\u62c9\u8bf7\u6c42)\uff0c\u4f46\u8001\u5b9e\u8bf4\uff0c\u5927\u591a\u6570\u62c9\u8bf7\u6c42\u786e\u5b9e\u505a\u5230\u4e86\u8fd9\u4e00\u70b9\u3002\u4e0d\uff0c\u4e0d\u662f\u6240\u6709\u7684\uff0c\u800c\u4e14\u5b83\u672c\u53ef\u4ee5\u66f4\u6709\u7ec4\u7ec7\u4e00\u4e9b\uff0c\u5e76\u4e14\u3002\u4f46\u603b\u7684\u6765\u8bf4\uff0c\u5c3d\u7ba1\u89c4\u6a21\u5f88\u5927\uff0c\u4e8b\u60c5\u8fd8\u662f\u76f8\u5f53\u987a\u5229\u7684\u3002\u8457\u540d\u7684\u4e34\u7ec8\u9057\u8a00\u3002\u8ba9\u6211\u4eec\u770b\u770b\u5728\u8fd9\u4e2a\u7248\u672c\u5269\u4e0b\u7684\u65f6\u95f4\u91cc\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u4f46\u662f\u81f3\u5c11\u73b0\u5728\uff0c\u867d\u71365.8\u770b\u8d77\u6765\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u7248\u672c\uff0c\u4f46\u6211\u6ca1\u6709\u611f\u89c9\u5230\u5b83\u7279\u522b\u9ebb\u70e6\u3002\u8bfa\u514b\u4f0d\u5fb7\u3002\u9644\u52a0\u7684\u662f\u50cf\u5f80\u5e38\u4e00\u6837\u7684\u5408\u5e76\u65e5\u5fd7\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u9886\u4f1a\u5230\u8fd9\u4e2a\u60f3\u6cd5(\u592a\u68d2\u4e86\uff01)\u3002\u77ed\u65e5\u5fd7\u5c06\u8fc7\u4e8e\u7b28\u62d9\uff0c\u751a\u81f3\u6bd4\u5f80\u5e38\u66f4\u7b28\u62d9\u3002Linus-Al Viro(16)\uff1auaccess/csum\u66f4\u65b0uaccess/access_ok\u66f4\u65b0uaccess/readdir\u66f4\u65b0uaccess/__put-user\u66f4\u65b0uaccess/__copy_from_user\u66f4\u65b0uaccess/__copy_to_user\u66f4\u65b0uaccess/\u6838\u5fc3\u8f6c\u50a8\u66f4\u65b0VFS\u66f4\u65b0ia64\u6784\u5efa\u56de\u5f52\u4fee\u590d\u62fc\u63a5\u66f4\u65b0comedi uaccess\u6e05\u7406misc uaccess\u66f4\u65b0i915 uaccess\u66f4\u65b0sysctl\u4fee\u590dVFS\u4fee\u590dEPOLL\u66f4\u65b0Alex Williamson(\u3002\u66f4\u65b0Andy Shevchenko(1)\uff1ax86\u5e73\u53f0\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0Anna Schumaker(1)\uff1aNFS\u5ba2\u6237\u7aef\u66f4\u65b0Arnaldo Carvalho de Melo(1)\uff1aPERF\u5de5\u5177\u66f4\u65b0Arnd Bergmann(4)\uff1aARM SoC\u66f4\u65b0ARM defconfig\u66f4\u65b0ARM/SoC\u9a71\u52a8\u7a0b\u5e8f\u66f4\u65b0ARM\u8bbe\u5907\u6811\u66f4\u65b0Benson Leung(1)\uff1aChrome\u5e73\u53f0\u66f4\u65b0Bjorn Andersson(2)\uff1arpmsg up", "note_en": "/  color /  Atom feed From: Linus Torvalds &lt;torvalds@linux-foundation.org&gt;To: Linux Kernel Mailing List &lt;linux-kernel@vger.kernel.org&gt;Subject:  Linux 5.8-rc1Date: Sun, 14 Jun 2020 13:44:07 -0700Message-ID: &lt;CAHk-=whfuea587g8rh2DeLFFGYxiVuh-bzq22osJwz3q4SOfmA@mail.gmail.com&gt; ( raw)So I didn&#39;t really expect this, but 5.8 looks to be one of our biggestreleases of all time.As of -rc1, it&#39;s right up there with v4.9, which has long been ourbiggest release by quite a bit in number of commits. Yes, 5.8-rc1 hasa couple fewer commits than 4.9-rc1 did, but in many ways it&#39;s a muchmore comprehensive release despite that.The 4.9 kernel was artificially big partly because of the greybussubsystem that was merged in that release, but also because v4.8 hadhad a longer rc series and thus there was more pent up development. In5.8, we have no sign of those kinds of issues making the releasebigger - there&#39;s just simply a lot of development in there.And there are other kernel releases that have had more new lines -v4.12 ends up being the undisputed size champion in that regard,simply because it had a _huge_ number of new lines due to lots ofregister descriptions for the AMD GPU drivers. Other kernels have beensimilarly big due to particular subsystems (v4.2 had another AMD GPUdriver line count bump, 2.6.29 had a big staging driver additions,etc).But again, 5.8 is up there with the best, despite not really havingany single thing that stands out. Yes, there&#39;s a couple of big driverchanges (habanalabs and atomisp) that are certainly part of it, butit&#39;s not nearly as one-sided as some of the other historical bigreleases have been.The development is really all over the place: there&#39;s tons of fairlyfundamental core work and cleanups, but there is also lots offilesystem work and obviously all the usual driver updates too. Plusdocumentation and archiecture work.In fact, while 5.8-rc1 is &#34;up there with the best&#34; when it comes toboth number of commits and number of new lines, it&#39;s actually theoutstanding champion when it comes to number of files changed. Andagain, that&#39;s not because of some single tree-wide simple scriptingthing (the kernels with lots of SPDX license line changes have a lotof files changed), but simply because of lots and lots of developmentwork.So in the 5.8 merge window we have modified about 20% of all the filesin the kernel source repository. That&#39;s really a fairly bigpercentage, and while some of it _is_ scripted, on the whole it&#39;sreally just the same pattern: 5.8 has simply seen a lot ofdevelopment.IOW, 5.8 looks big. Really big.In pure numbers: over 14k non-merge commits (over 15k countingmerges), ~800k new lines, and over 14 thousand files changed.It&#39;s worth noting that despite the size, it doesn&#39;t necessarily looklike a particularly troublesome release at least so far. Yes, the puresize made this merge window a bit more stressful than I like, becauseI _really_ like to have a few days of calm at the end to look at someof the pull requests in more detail. This time around that neverreally happened. But I only really had two pull requests I ended upwanting to go through in more detail, so it all worked out fine.So the pure size of this merge window did make me (once again)consider making it more of a hard rule that pull requests with newfeatures (as opposed to the second wave of pull requests with justfixes) absolutely _have_ to come in during the first week of the mergewindow, but honestly, _most_ of the pull requests did in fact do that.No, not all, and it could have been a bit more organized, and maybe Igot snippy with somebody, but on the whole things were pretty smoothdespite the large size.Famous last words. Let&#39;s see what happens during the rest of this release.But at least right now, while 5.8 looks like a very large release, Idon&#39;t get the feeling that it&#39;s particularly troublesome.Knock wood.Appended is the merge-log as usual. If you didn&#39;t get the idea yet(IT&#39;S BIG!) the shortlog would be much too unwieldly, even more sothan usual. Linus---Al Viro (16): uaccess/csum updates uaccess/access_ok updates uaccess/readdir updates uaccess/__put-user updates uaccess/__copy_from_user updates uaccess/__copy_to_user updates uaccess/coredump updates vfs updates ia64 build regression fix splice updates comedi uaccess cleanups misc uaccess updates i915 uaccess updates sysctl fixes vfs fixes epoll updateAlex Williamson (1): VFIO updatesAlexandre Belloni (1): RTC updatesAndreas Gruenbacher (1): gfs2 updatesAndrew Morton (7): updates more updates yet more updates still more updates even more updates some more updates updatesAndy Shevchenko (1): x86 platform driver updatesAnna Schumaker (1): NFS client updatesArnaldo Carvalho de Melo (1): perf tooling updatesArnd Bergmann (4): ARM SoC updates ARM defconfig updates ARM/SoC driver updates ARM devicetree updatesBenson Leung (1): chrome platform updatesBjorn Andersson (2): rpmsg updates remoteproc updatesBjorn Helgaas (1): PCI updatesBoris Brezillon (1): i3c updateBorislav Petkov (4): EDAC updates x86 microcode update x86 cache resource control updates READ_IMPLIES_EXEC changesBruce Fields (1): nfsd updatesCasey Schaufler (1): smack updatesChristian Brauner (1): thread updatesChristoph Hellwig (2): dma-mapping updates dma-mapping helpersCorey Minyard (1): IPMI updatesDamien Le Moal (1): zonefs updateDan Williams (1): libnvdimm updatesDaniel Lezcano (1): thermal updatesDaniel Thompson (1): kgdb updatesDarrick Wong (6): xfs updates DAX updates part one DAX updates part two DAX updates part three xfs fix iomap fixDave Airlie (4): drm updates drm fixes drm msm updates drm fixesDavid Howells (4): keyring updates AFS updates AFS fixes notification queueDavid Kleikamp (1): JFS updateDavid Miller (4): networking updates sparc updates networking fixes networking fixesDavid Sterba (2): btrfs updates btrfs updatesDavid Teigland (1): dlm updatesDmitry Torokhov (1): input updatesDominik Brodowski (1): pcmcia updatesDominique Martinet (1): 9p updateEric Biederman (4): proc updates execve updates proc fix proc fixEric Biggers (2): fscrypt updates fsverity updatesGao Xiang (1): erofs updatesGeert Uytterhoeven (1): m68k updatesGreg KH (5): USB/PHY driver updates tty/serial driver updates staging/IIO driver updates driver core updates char/misc driver updatesGreg Ungerer (1): m68knommu updatesGuenter Roeck (1): hwmon updatesHelge Deller (1): parsic updatesHerbert Xu (2): crypto updates crypto fixesIlya Dryomov (1): ceph updatesIngo Molnar (16): kprobes updates RCU updates locking updates objtool updates perf updates EFI updates SMP updates x86 boot updates x86 build updates x86 cleanups x86 cpu updates x86 FPU updates x86 platform updates x86 vdso updates scheduler updates x86 mm updatesJaegeuk Kim (1): f2fs updatesJames Bottomley (2): SCSI updates more SCSI updatesJames Morris (1): lockdown updateJan Kara (2): fsnotify updates ext2 and reiserfs cleanupsJarkko Sakkinen (1): tpm updatesJason Gunthorpe (2): hmm updates rdma updatesJassi Brar (1): mailbox updatesJean Delvare (1): dmi updateJens Axboe (5): block updates block driver updates io_uring updates block fixes io_uring fixesJessica Yu (1): module updatesJiri Kosina (2): HID updates livepatching updatesJoerg Roedel (2): iommu updates iommu driver directory structure cleanupJohn Johansen (1): apparmor updatesJon Mason (1): NTB updatesJonathan Corbet (2): documentation updates more documentation updatesJuergen Gross (1): xen updatesKees Cook (1): pstore updatesLee Jones (2): MFD updates backlight updatesLey Foon Tan (1): nios2 updateLinus Walleij (2): GPIO updates pin control updatesMark Brown (3): regmap updates spi updates regulator updatesMasahiro Yamada (3): Kbuild updates Kconfig updates more Kbuild updatesMatt Turner (1): alpha updatesMauro Carvalho Chehab (2): media updates more media updatesMax Filippov (1): Xtensa updatesMicah Morton (1): SafeSetID updateMichael Ellerman (2): powerpc updates powerpc fixMichael Tsirkin (1): virtio updatesMike Marshall (1): orangefs updatesMike Snitzer (1): device mapper updatesMiklos Szeredi (2): overlayfs updates fuse updatesMimi Zohar (2): integrity updates integrity fixNamjae Jeon (1): exfat updatePalmer Dabbelt (2): RISC-V updates more RISC-V updatesPaolo Bonzini (2): kvm updates more KVM updatesPaul Moore (2): audit updates SELinux updatesPavel Machek (1): LED updatesPetr Mladek (2): printk updates printk fixRafael Wysocki (5): power management updates ACPI updates PNP update more power management updates more ACPI updatesRich Felker (1): arch/sh updatesRichard Weinberger (3): MTD updates UBI update UML updatesRob Herring (2): devicetree updates Devicetree fixesRussell King (2): ARM updates ARM fixesSebastian Reichel (1): power supply and reset updatesShuah Khan (2): kselftest updates Kunit updatesStafford Horne (1): OpenRISC updateStephen Boyd (1): clk updatesSteve French (2): cifs updates more cifs updatesSteven Rostedt (1): tracing updatesTakashi Iwai (2): sound updates sound fixesTed Ts&#39;o (1): ext4 updatesTejun Heo (2): cgroup updates workqueue updatesTetsuo Handa (1): tomoyo updateThierry Reding (1): pwm updatesThomas Bogendoerfer (1): MIPS updatesThomas Gleixner (10): irq updates timer updates x86 timer updates x86 srbds fixes timer fix more x86 updates atomics rework the Kernel Concurrency Sanitizer x86 entry updates x86 RAS updatesUlf Hansson (1): MMC updatesVasily Gorbik (1): s390 updatesVinod Koul (1): dmaengine updatesWei Liu (1): hyper-v updatesWill Deacon (3): arm64 updates READ/WRITE_ONCE rework arm64 fixesWim Van Sebroeck (1): watchdog updatesWolfram Sang (1): i2c updates    reply  index Thread overview: 13+ messages / expand[ flat| nested]  mbox.gz  Atom feed  top 2020-06-14 20:44  Linus Torvalds [this message]2020-06-15 1:59 `  linux-next: stats (Was: Linux 5.8-rc1) Stephen Rothwell2020-06-16 20:11 `  Linux 5.8-rc1 Gabriel C2020-06-16 20:33 `  Arvind Sankar2020-06-16 21:17 `  Gabriel C2020-06-16 21:25 `  Arvind Sankar2020-06-16 22:00 `  Gabriel C2020-06-16 22:28 `  Arvind Sankar2020-06-16 21:35 `  Gabriel C2020-06-16 22:25 `  [PATCH] x86/purgatory: Add -fno-stack-protector Arvind Sankar2020-06-17 0:06 `  Linus Torvalds2020-06-16 20:37 `  Linux 5.8-rc1 Borislav Petkov2020-06-16 21:19 `  Gabriel C   Reply instructions:You may reply publicly to  this message via plain-text emailusing any one of the following methods:* Save the following mbox file, import it into your mail client, and reply-to-all from there:  mbox Avoid top-posting and favor interleaved quoting:  https://en.wikipedia.org/wiki/Posting_style#Interleaved_style* Reply using the  --to,  --cc, and  --in-reply-to switches of git-send-email(1): git send-email \\ --in-reply-to=&#39;CAHk-=whfuea587g8rh2DeLFFGYxiVuh-bzq22osJwz3q4SOfmA@mail.gmail.com&#39; \\ --to=torvalds@linux-foundation.org \\ --cc=linux-kernel@vger.kernel.org \\ /path/to/YOUR_REPLY  https://kernel.org/pub/software/scm/git/docs/git-send-email.html* If your mail client supports setting the  In-Reply-To header via mailto: links, try the  mailto: link  LKML Archive on lore.kernel.orgArchives are clonable:\tgit clone --mirror https://lore.kernel.org/lkml/0 lkml/git/0.git\tgit clone --mirror https://lore.kernel.org/lkml/1 lkml/git/1.git\tgit clone --mirror https://lore.kernel.org/lkml/2 lkml/git/2.git\tgit clone --mirror https://lore.kernel.org/lkml/3 lkml/git/3.git\tgit clone --mirror https://lore.kernel.org/lkml/4 lkml/git/4.git\tgit clone --mirror https://lore.kernel.org/lkml/5 lkml/git/5.git\tgit clone --mirror https://lore.kernel.org/lkml/6 lkml/git/6.git\tgit clone --mirror https://lore.kernel.org/lkml/7 lkml/git/7.git\tgit clone --mirror https://lore.kernel.org/lkml/8 lkml/git/8.git\t# If you have public-inbox 1.1+ installed, you may\t# initialize and index your mirror using the following commands:\tpublic-inbox-init -V2 lkml lkml/ https://lore.kernel.org/lkml \\\t\tlinux-kernel@vger.kernel.org\tpublic-inbox-index lkmlExample  config snippet\n for mirrorsNewsgroup available over NNTP:\t nntp://nntp.lore.kernel.org/org.kernel.vger.linux-kernelAGPL code for this site: git clone  https://public-inbox.org/public-inbox.git", "posttime": "2020-08-10 06:56:37", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,linux5,releases,uaccess", "title": "Linux5.8\u201c\u662f\u6211\u4eec\u6709\u53f2\u4ee5\u6765\u6700\u5927\u7684\u7248\u672c\u4e4b\u4e00\u3002", "title_en": "Linux 5.8 \u201cone of our biggest releases of all time.\u201d", "transed": 1, "url": "https://lore.kernel.org/lkml/CAHk-=whfuea587g8rh2DeLFFGYxiVuh-bzq22osJwz3q4SOfmA@mail.gmail.com/", "via": "", "real_tags": ["linux", "linux5", "releases", "uaccess"]}, {"category": "", "categoryclass": "", "imagename": "a70d5c5214fb0ba1e87a9de02e478a19.png", "infoid": 1017255, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6570\u636e\u7ed3\u6784\u4f5c\u5f0a\u672c\u5c0f\u6284\u4f7f\u7528Big O\u7b26\u53f7\u6765\u8868\u793a\u65f6\u95f4\u590d\u6742\u6027\u3002\u6709\u5173Big O\u7684\u63d0\u793a\uff0c\u8bf7\u53c2\u9605\u4e86\u89e3Big O\u7b26\u53f7\u548c\u7b97\u6cd5\u590d\u6742\u6027\u3002\u6709\u5173\u5feb\u901f\u603b\u7ed3\uff0c\u8bf7\u53c2\u89c1...", "note_en": "Data Structures Cheat SheetThis cheat sheet uses the Big O notation to express time complexity.For a reminder on Big O, see Understanding Big O Notation and Algorithmic Complexity.For a quick summar...", "posttime": "2020-08-10 06:56:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u7ed3\u6784,structures,big", "title": "\u6570\u636e\u7ed3\u6784\u5c0f\u6284", "title_en": "Data Structures Cheat Sheet", "transed": 1, "url": "https://algodaily.com/lessons/an-executable-data-structures-cheat-sheet?view=article", "via": "", "real_tags": ["\u6570\u636e\u7ed3\u6784", "big"]}, {"category": "", "categoryclass": "", "imagename": "050d6543ad18e1b82ad939d1e7208093.jpeg", "infoid": 1017254, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u8d2d\u7269\u8005\u8d8a\u6765\u8d8a\u591a\u5730\u8f6c\u5411\u7535\u5b50\u5546\u52a1\uff0c\u5168\u7f8e\u5404\u5730\u7684\u8d2d\u7269\u4e2d\u5fc3\u53ef\u80fd\u5f88\u5feb\u5c31\u4f1a\u8f6c\u53d8\u4e3a\u4e9a\u9a6c\u900a\u7684\u5c65\u7ea6\u4e2d\u5fc3\u3002\n\u636e\u201c\u534e\u5c14\u8857\u65e5\u62a5\u201d\u62a5\u9053\uff0c\u636e\u62a5\u9053\uff0c\u4e9a\u9a6c\u900a\u6b63\u5728\u4e0e\u7f8e\u56fd\u6700\u5927\u7684\u8d2d\u7269\u4e2d\u5fc3\u6240\u6709\u8005\u897f\u8499\u5730\u4ea7\u96c6\u56e2(Simon Property Group)\u6d3d\u8c08\uff0c\u5c06\u7a7a\u7f6e\u7684\u96f6\u552e\u7a7a\u95f4\u6539\u9020\u6210\u5904\u7406\u548c\u53d1\u8d27\u5728\u7ebf\u8ba2\u5355\u7684\u4e9a\u9a6c\u900a\u4ed3\u5e93\u3002\n\u4f5c\u4e3a\u4ea4\u6613\u7684\u4e00\u90e8\u5206\uff0c\u4e9a\u9a6c\u900a\u53ef\u80fd\u4f1a\u63a5\u7ba1\u4e4b\u524d\u7531\u897f\u5c14\u65af(Sears)\u548cJCPenney\u5360\u636e\u7684\u524d\u4e3b\u8981\u767e\u8d27\u5546\u5e97\u7a7a\u95f4\uff0c\u8fd9\u4e24\u5bb6\u516c\u53f8\u8fd1\u51e0\u4e2a\u6708\u90fd\u5df2\u7533\u8bf7\u7834\u4ea7\uff0c\u5e76\u5173\u95ed\u4e86\u6570\u5341\u5bb6\u95e8\u5e97\u3002\u897f\u8499\u6b63\u5728\u5bfb\u6c42\u6536\u8d2dJCPenney\uff0c\u8fd9\u5c06\u4f7f\u623f\u4e1c\u5bf9\u73b0\u5728\u548c\u4ee5\u524d\u7684\u5546\u5e97\u7a7a\u95f4\u5982\u4f55\u4f7f\u7528\u6709\u66f4\u591a\u7684\u63a7\u5236\u6743\u3002\n\u8fd9\u7b14\u4ea4\u6613\u53ef\u80fd\u4f1a\u8ba9\u4e9a\u9a6c\u900a\u53d7\u76ca\uff0c\u56e0\u4e3a\u5b83\u5728\u7f8e\u56fd\u5404\u5730\u7684\u57ce\u5e02\u63d0\u4f9b\u4e86\u4f4d\u7f6e\u826f\u597d\u7684\u4ed3\u5e93\u7a7a\u95f4\uff0c\u6709\u53ef\u80fd\u4f7f\u8fd9\u5bb6\u5728\u7ebf\u96f6\u552e\u5546\u51cf\u5c11\u53d1\u8d27\u7684\u9001\u8d27\u65f6\u95f4\u3002\u4e9a\u9a6c\u900a\u73b0\u6709\u7684\u4e00\u4e9b\u914d\u9001\u4e2d\u5fc3\u5df2\u7ecf\u5360\u636e\u4e86\u5df2\u7ecf\u505c\u4e1a\u7684\u8001\u65e7\u8d2d\u7269\u4e2d\u5fc3\u3002\n\u4e9a\u9a6c\u900a\u53d1\u8a00\u4eba\u745e\u5207\u5c14\u00b7\u83b1\u7279\u5728\u63a5\u53d7\u201c\u5546\u4e1a\u5185\u5e55\u201d\u91c7\u8bbf\u65f6\u8868\u793a\uff0c\u516c\u53f8\u4e0d\u4f1a\u5bf9\u8c23\u8a00\u6216\u731c\u6d4b\u53d1\u8868\u8bc4\u8bba\u3002\n\u5546\u573a\u623f\u4e1c\u901a\u5e38\u4f18\u5148\u5bfb\u627e\u4f1a\u5e26\u6765\u65b0\u5ba2\u6237\u7684\u79df\u6237\uff0c\u6bd4\u5982\u5546\u5e97\u548c\u5065\u8eab\u623f\u3002\u9664\u4e86\u81ea\u5df1\u7684\u5458\u5de5\uff0c\u4e9a\u9a6c\u900a\u7684\u5c65\u7ea6\u4e2d\u5fc3\u4e0d\u4f1a\u5438\u5f15\u5176\u4ed6\u4eba\u3002\u4f46\u5728\u65b0\u51a0\u80ba\u708e\u7684\u5927\u6d41\u884c\u4e2d\uff0c\u4f20\u7edf\u96f6\u552e\u5e97\u7684\u6536\u5165\u51fa\u73b0\u4e86\u52a8\u6447\uff0c\u800c\u4e9a\u9a6c\u900a\u7684\u9500\u552e\u989d\u5374\u5927\u5e45\u4e0a\u5347\u3002\n\u70b9\u51fb\u201c\u6ce8\u518c\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u63a5\u6536\u6765\u81eaBusiness Insider\u7684\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u4ee5\u53ca\u5176\u4ed6\u5408\u4f5c\u4f19\u4f34\u4f18\u60e0\uff0c\u5e76\u63a5\u53d7\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u3002\n\u5f62\u6210\u4e00\u6761X\u7684\u4e24\u6761\u4ea4\u53c9\u7ebf\u3002\u5b83\u6307\u793a\u4e00\u79cd\u5173\u95ed\u4ea4\u4e92\u6216\u53d6\u6d88\u901a\u77e5\u7684\u65b9\u5f0f\u3002", "note_en": "Malls across the US \u2014 struggling to stay in business as shoppers  increasingly turn to e-commerce \u2014 could soon be transformed into Amazon fulfillment centers.\n Amazon is reportedly in talks with Simon Property Group, America&#39;s biggest mall owner, to turn empty retail space into Amazon warehouses that process and ship online orders, according to a Wall Street Journal  report.\n As part of the deal, Amazon could take over former anchor department-store spaces previously occupied by Sears and JCPenney, both of which have filed for bankruptcy and  closed dozens of stores in recent months. Simon is  pursuing an acquisition of JCPenney, which would grant the landlord more control over how current and former store spaces are used.\n The deal could benefit Amazon by providing well-located warehouse space in cities across the US, potentially allowing the online retailer to decrease its delivery times on shipments. Some of Amazon&#39;s existing fulfillment centers already occupy  old strip malls that have gone out of business.\n   Amazon spokesperson Rachael Lighty told Business Insider that the company would not comment on &#34;rumors or speculation.&#34;\n Mall landlords typically prioritize finding tenants that will bring in new customers, like stores and gyms. Amazon fulfillment centers wouldn&#39;t draw people other than their own employees. But amid the COVID-19 pandemic, traditional retail stores have seen revenues waver, while Amazon&#39;s sales have  surged.\n  By clicking \u2018Sign up\u2019, you agree to receive marketing emails from Business Insider as well as other partner offers and accept our  Terms of Service and  Privacy Policy.\n        Two crossed lines that form an &#39;X&#39;. It indicates a way to close an interaction, or dismiss a notification.", "posttime": "2020-08-10 06:31:09", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4e9a\u9a6c\u900a,amazon,\u897f\u5c14\u65af,reportedly,\u7a7a\u95f4", "title": "\u636e\u62a5\u9053\uff0c\u4e9a\u9a6c\u900a\u5e0c\u671b\u63a5\u7ba1JCPenney\u548c\u897f\u5c14\u65af\u5546\u5e97\uff0c\u5c06\u5546\u573a\u53d8\u6210\u5de8\u5927\u7684\u5c65\u7ea6\u4e2d\u5fc3", "title_en": "Amazon reportedly wants to take over JCPenney and Sears stores to turn malls into giant fulfillment centers", "transed": 1, "url": "https://www.businessinsider.com/amazon-looks-to-turn-malls-into-giant-fulfillment-centers-report-2020-8", "via": "", "real_tags": ["\u4e9a\u9a6c\u900a", "amazon", "\u897f\u5c14\u65af", "\u7a7a\u95f4"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1017252, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6309\u4e0b\u6309\u94ae\u53ef\u4ee5\u770b\u5230\u5b83\u7f16\u8bd1\u5e76\u8fd0\u884c\u4e00\u4e2a\u5f88\u5c0f\u7684hello world\u7a0b\u5e8f\u3002\u60a8\u8fd8\u53ef\u4ee5\u5c1d\u8bd5\u4fee\u6539LLVM\u7a0b\u5e8f\u96c6\u5e76\u518d\u6b21\u6309\u4e0b\u6309\u94ae-\u8bf7\u6ce8\u610f\uff0c\u5c3d\u7ba1LLVM\u7a0b\u5e8f\u96c6\u662f\u952e\u5165\u7684\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u5411\u5b57\u7b26\u4e32\u6dfb\u52a0\u5b57\u7b26\uff0c\u4f8b\u5982\uff0c\u60a8\u5c06\u9700\u8981\u8c03\u6574\u5176\u957f\u5ea6\uff0c\u65e0\u8bba\u662f\u5b9a\u4e49\u5b83\u7684\u4f4d\u7f6e\u8fd8\u662f\u4f7f\u7528\u5b83\u7684\u4f4d\u7f6e(\u5426\u5219\u60a8\u5c06\u6536\u5230\u9519\u8bef\uff0c\u9519\u8bef\u5c06\u663e\u793a\u5728\u8f93\u51fa\u533a\u57df\u4e2d)\u3002\n\u76ee\u6807\u4e09\u5143\u7ec4=&#34\uff1bi386-PC-linux-gnu&#34\uff1b@.str=\u79c1\u6709\u5e38\u91cf[15 x i8]c&#34\uff1bhello\uff0cworld\uff01\\0A\\00&#34\uff1b\u5b9a\u4e49I32@Main(){entry\uff1a%str=getelementptr inbound[15 x i8]*@.str\uff0cI32 0\uff0cI32 0%call=call I32(i8*\uff0c...)*@printf(i8*%str)\u3002\n\u6b64\u6f14\u793a\u4f7f\u7528\u7531Emscripten\u4eceC++\u5230JavaScript\u7f16\u8bd1\u7684LLVM\u5de5\u5177\u94fe\u7684\u4e00\u90e8\u5206(llvm-dis\u548cllvm-as)\u6765\u68c0\u67e5\u7a0b\u5e8f\u96c6\u662f\u5426\u6709\u9519\u8bef\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u7f8e\u5316\u6253\u5370\u3002\u7136\u540e\u5728\u8f93\u51fa\u4e0a\u8fd0\u884cEmscripten\u7f16\u8bd1\u5668(\u6700\u521d\u7528JavaScript\u7f16\u5199\uff0c\u4f46\u4ece\u6b63\u5e38\u7684\u6279\u5904\u7406/shell\u6a21\u5f0f\u79fb\u690d\u5230\u6d4f\u89c8\u5668\u73af\u5883)\uff0c\u5e76\u76f4\u63a5\u6267\u884c\u4ee3\u7801\u3002\n\u6b64\u6f14\u793a\u662f\u5728\u5047\u65e5\u671f\u95f4\u4f5c\u4e3a\u4e00\u4e2a\u6709\u8da3\u7684\u9ed1\u5ba2\u9879\u76ee\u5b8c\u6210\u7684\uff0c\u56e0\u6b64\u6709\u4e00\u4e9b\u8b66\u544a\uff1a\u751f\u6210\u7684\u4ee3\u7801\u6839\u672c\u6ca1\u6709\u4f18\u5316\uff0c\u56e0\u6b64\u57fa\u51c6\u6d4b\u8bd5\u6beb\u65e0\u610f\u4e49\uff1b\u5982\u679c\u60a8\u60f3\u8fdb\u884c\u57fa\u51c6\u6d4b\u8bd5\uff0c\u8bf7\u4f7f\u7528-O2\u6b63\u5e38\u8fd0\u884cEmscripten\u3002\u7f16\u8bd1\u901f\u5ea6\u4e5f\u6839\u672c\u6ca1\u6709\u4f18\u5316\u3002\u6b64\u5916\uff0c\u8fd9\u4e2a\u6f14\u793a\u51e0\u4e4e\u6ca1\u6709\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5e76\u4e14\u4ee5\u4e0d\u662f\u6700\u521d\u6253\u7b97\u7684\u65b9\u5f0f\u5c06\u51e0\u4e2a\u4ee3\u7801\u5e93\u7c98\u5408\u5728\u4e00\u8d77\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u4e1c\u897f\u4e0d\u8d77\u4f5c\u7528\u3002", "note_en": "Press the button to see it compile and run a tiny &#34;hello world&#34; program. You can also try modifying the LLVM assembly and pressing the button again - note though that  LLVM assembly is typed, so if you add characters to the string for example, you will need to adjust its length, both where it is defined and where it is used (otherwise you will get errors, which will show up in the output area).\n  target triple = &#34;i386-pc-linux-gnu&#34;@.str = private constant [15 x i8] c&#34;hello, world!\\0A\\00&#34;define i32 @main() {entry: %str = getelementptr inbounds [15 x i8]* @.str, i32 0, i32 0 %call = call i32 (i8*, ...)* @printf(i8* %str) ret i32 1}declare i32 @printf(i8*, ...)\n      This demo works by using parts of the LLVM toolchain (llvm-dis and llvm-as), compiled by  emscripten from C++ to JavaScript, to check the assembly for errors and pretty-print it. Then the emscripten compiler (originally written in JavaScript, but ported from the normal batch/shell mode to the browser environment) is run on the output, and the code executed directly.\n This demo was done as a fun hacking project over a holiday vacation, so there are some caveats: The generated code is not optimized at all, so benchmarking is pointless; if you want to benchmark, run emscripten normally with  -O2. Compilation speed has also not been optimized at all. Also, this demo has hardly been tested and glues together several codebases in ways they were not originally intended, there might be things that do not work.", "posttime": "2020-08-10 06:03:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,llvm", "title": "\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884cLLVM\u7a0b\u5e8f\u96c6", "title_en": "Run LLVM Assembly in the Browser", "transed": 1, "url": "http://kripken.github.io/llvm.js/demo.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "llvm"]}, {"category": "", "categoryclass": "", "imagename": "9ffe04016301470a6cdf18514db36c8e.png", "infoid": 1017251, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8ba9\u6211\u4eec\u804a\u804a\u5427\uff01\u6211\u4eec\u7684IRC\u9891\u9053\u662f#Glasgow at freenode.net\uff1b\u6211\u4eec\u7684\u4e0d\u548c\u8c10\u9891\u9053\u662f#Glasgow at 1BitSquared\u2018s Discorde\u670d\u52a1\u5668\u3002\n\u683c\u62c9\u65af\u54e5\u662f\u4e00\u4e2a\u63a2\u7d22\u6570\u5b57\u63a5\u53e3\u7684\u5de5\u5177\uff0c\u9762\u5411\u5d4c\u5165\u5f0f\u5f00\u53d1\u4eba\u5458\u3001\u9006\u5411\u5de5\u7a0b\u5e08\u3001\u6570\u5b57\u6863\u6848\u5458\u3001\u7535\u5b50\u7231\u597d\u8005\u4ee5\u53ca\u5176\u4ed6\u4efb\u4f55\u5e0c\u671b\u4ee5\u9ad8\u53ef\u9760\u6027\u548c\u6700\u5c0f\u9ebb\u70e6\u4e0e\u5404\u79cd\u6570\u5b57\u8bbe\u5907\u901a\u4fe1\u7684\u4eba\u3002\u5b83\u53ef\u4ee5\u8fde\u63a5\u5230\u5927\u591a\u6570\u8bbe\u5907\uff0c\u800c\u65e0\u9700\u989d\u5916\u7684\u6709\u6e90\u6216\u65e0\u6e90\u7ec4\u4ef6\uff0c\u5e76\u4e14\u5305\u62ec\u9488\u5bf9\u610f\u5916\u6761\u4ef6\u548c\u64cd\u4f5c\u5458\u9519\u8bef\u7684\u5e7f\u6cdb\u4fdd\u62a4\u3002\n\u683c\u62c9\u65af\u54e5\u786c\u4ef6\u53ef\u4ee5\u652f\u6301\u8bb8\u591a\u6570\u5b57\u63a5\u53e3\uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528\u53ef\u91cd\u65b0\u914d\u7f6e\u7684\u903b\u8f91\u3002\u5b83\u4e0d\u662f\u53ea\u63d0\u4f9b\u5c11\u91cf\u6807\u51c6\u786c\u4ef6\u652f\u6301\u7684\u63a5\u53e3\u9009\u62e9\uff0c\u800c\u662f\u4f7f\u7528FPGA\u52a8\u6001\u9002\u5e94\u624b\u5934\u7684\u4efb\u52a1\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u6027\u80fd\u6216\u53ef\u9760\u6027\uff0c\u5373\u4f7f\u662f\u4e0d\u5bfb\u5e38\u7684\u3001\u81ea\u5b9a\u4e49\u7684\u6216\u8fc7\u65f6\u7684\u63a5\u53e3\u4e5f\u662f\u5982\u6b64\u3002\n\u683c\u62c9\u65af\u54e5\u7684\u8f6f\u4ef6\u662f\u4e00\u7ec4\u6784\u5efa\u5757\uff0c\u65e8\u5728\u6d88\u9664\u9644\u5e26\u7684\u590d\u6742\u6027\u3002\u6bcf\u4e2a\u63a5\u53e3\u90fd\u6253\u5305\u6210\u4e00\u4e2a\u81ea\u5305\u542b\u7684\u5c0f\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u547d\u4ee4\u884c\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u66f4\u590d\u6742\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\u91cd\u590d\u4f7f\u7528\u3002\u4f7f\u7528Glasgow\u4e0d\u9700\u8981\u4efb\u4f55\u7f16\u7a0b\u77e5\u8bc6\uff0c\u4f46\u662f\u5982\u679c\u60a8\u4e86\u89e3\u4e00\u70b9Python\uff0c\u5b83\u4f1a\u53d8\u5f97\u66f4\u52a0\u5f3a\u5927\u3002\n\u4f7f\u7528\u96c5\u9a6c\u54c8OPLx/OPM\u82af\u7247\u5408\u6210\u58f0\u97f3\u5e76\u5728\u7f51\u9875\u4e0a\u5b9e\u65f6\u64ad\u653e\uff0c\n\u4e0a\u9762\u7684\u4e00\u5207\u53ea\u9700\u4e00\u5757\u683c\u62c9\u65af\u54e5RevC\u7535\u8def\u677f\uff0c\u4e00\u4e9b\u7535\u7ebf\uff0c\u4ee5\u53ca\u6839\u636e\u88ab\u6d4b\u8bbe\u5907\u7684\u4e0d\u540c\uff0c\u5916\u52a0\u7535\u6e90\u5c31\u53ef\u4ee5\u5b8c\u6210\u3002\n\u683c\u62c9\u65af\u54e5\u7684\u786c\u4ef6\u4f1a\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u53d1\u5c55\uff0c\u6bcf\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\u90fd\u88ab\u79f0\u4e3a\u4fee\u8ba2\u7248\u3002\u5c3d\u7ba1\u6240\u6709\u7248\u672c\u73b0\u5728\u548c\u5c06\u6765\u90fd\u652f\u6301\u76f8\u540c\u7684\u8f6f\u4ef6\uff0c\u4f46\u5b83\u4eec\u7684\u529f\u80fd\u5dee\u522b\u5f88\u5927\uff0c\u6240\u9009\u7684\u7248\u672c\u5c06\u9650\u5236\u53ef\u80fd\u7684\u4efb\u52a1\u3002\n\u683c\u62c9\u65af\u54e5\u7535\u8def\u677f\u4f7f\u7528revXN\u683c\u5f0f\u7684\u7248\u672c\uff0c\u5176\u4e2dX\u662f\u4fee\u8ba2\u53f7(\u5728\u91cd\u5927\u8bbe\u8ba1\u66f4\u6539\u65f6\u589e\u52a0)\uff0cN\u662f\u6b65\u8fdb\u53f7(\u5728\u4efb\u4f55\u5e03\u5c40\u6216\u7ec4\u4ef6\u66f4\u6539\u65f6\u589e\u52a0)\u3002\u4f8b\u5982\uff0crevC0\u662f\u4fee\u8ba2\u7248C\u7684\u7b2c\u4e00\u6b65\u3002\n\u4fee\u8ba2\u7248A\u548cB\u7684\u5236\u4f5c\u6570\u91cf\u4e0d\u591a\uff0c\u5305\u542b\u4e3b\u8981\u7684\u8bbe\u8ba1\u95ee\u9898\uff0c\u56e0\u6b64\u5927\u591a\u5177\u6709\u5386\u53f2\u610f\u4e49\u3002\u7136\u800c\uff0c\u6bcf\u4e2a\u62e5\u6709Reva/Revb\u677f\u7684\u4eba\u90fd\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u5b83\u4eec-\u6c38\u8fdc\u3002\n\u4fee\u8ba2\u7248C\u662f\u6700\u65b0\u7684\u4fee\u8ba2\u7248\uff0c\u6b63\u5728\u4e3a\u6279\u91cf\u751f\u4ea7\u505a\u51c6\u5907\u3002\u5b83\u63d0\u4f9b16\u4e2aI/O\u5f15\u811a\uff0c\u6700\u5927\u6570\u636e\u901f\u7387\u7ea6\u4e3a\u3002200 Mbps/\u9488(100 MHz)*\u3001\u72ec\u7acb\u65b9\u5411\u63a7\u5236\u548c\u72ec\u7acb\u53ef\u7f16\u7a0b\u4e0a\u62c9/\u4e0b\u62c9\u7535\u963b\u3002I/O\u5f15\u811a\u5206\u4e3a\u4e24\u4e2aI/O\u7aef\u53e3\uff0c\u6bcf\u4e2aI/O\u7aef\u53e3\u53ef\u4ee5\u4f7f\u75281.8 V\u52305 V\u7684\u4efb\u4f55\u7535\u538b\uff0c\u68c0\u6d4b\u548c\u76d1\u63a7\u88ab\u6d4b\u8bbe\u5907\u7684I/O\u7535\u538b\uff0c\u5e76\u63d0\u4f9b\u9ad8\u8fbe150 mA\u7684\u7535\u6e90\u3002\u8be5\u4e3b\u677f\u4f7f\u7528USB 2\u4f9b\u7535\u3001\u914d\u7f6e\u548c\u901a\u4fe1\uff0c\u53ef\u5b9e\u73b0\u9ad8\u8fbe336 Mbps(42 MB/s)\u7684\u6301\u7eed\u7ec4\u5408\u541e\u5410\u91cf\u3002\n*\u5b9e\u9645\u53ef\u5b9e\u73b0\u7684\u6700\u5927\u6570\u636e\u901f\u7387\u53d6\u51b3\u4e8e\u8bb8\u591a\u56e0\u7d20\uff0c\u5e76\u4e14\u4f1a\u56e0\u5177\u4f53\u7684\u63a5\u53e3\u548c\u5c0f\u7a0b\u5e8f\u8bbe\u8ba1\u800c\u5927\u4e0d\u76f8\u540c\u3002\u53ea\u9700\u6700\u5c11\u7684\u5f00\u53d1\u5de5\u4f5c\u5373\u53ef\u5b9e\u73b012 Mbps/\u9488(6 MHz)\uff1b\u8981\u8fbe\u5230\u66f4\u9ad8\u7684\u6570\u636e\u901f\u7387\uff0c\u9700\u8981\u4ed4\u7ec6\u7684HDL\u7f16\u7801\u548c\u5bf9\u65f6\u5e8f\u5206\u6790\u7684\u6df1\u5165\u7406\u89e3\u3002\n\u683c\u62c9\u65af\u54e5\u5b8c\u5168\u7528Python3\u7f16\u5199\u3002\u8fd0\u884c\u5728FPGA\u4e0a\u7684\u63a5\u53e3\u903b\u8f91\u4f7f\u7528nMigen\u63cf\u8ff0\uff0cnMigen\u662f\u4e00\u79cd\u57fa\u4e8ePython\u7684\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u3002\u5728\u4e3b\u673aPC\u4e0a\u8fd0\u884c\u7684\u652f\u6301\u4ee3\u7801\u662f\u7528\u5e26\u6709\u5f02\u6b65\u7684Python\u7f16\u5199\u7684\u3002\u8fd9\u6837\uff0cFPGA\u4e0a\u7684\u903b\u8f91\u53ef\u4ee5\u9488\u5bf9\u4efb\u4f55\u8bf7\u6c42\u7684\u914d\u7f6e\u6309\u9700\u7ec4\u88c5\uff0c\u4f7f\u5176\u5c3d\u53ef\u80fd\u5feb\u901f\u548c\u7d27\u51d1\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u7f51\u5173\u8f6f\u4ef6\u548c\u8f6f\u4ef6\u4e4b\u95f4\u5171\u4eab\u4ee3\u7801\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u6dfb\u52a0\u5bb9\u6613\u51fa\u9519\u7684\u80f6\u6c34\u6837\u677f\u7684\u9700\u8981\u3002\n\u683c\u62c9\u65af\u54e5\u6ca1\u6709\u5f00\u6e90\u7684iCE40 FPGA\u5de5\u5177\u94fe\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5b83\u4e0d\u4ec5\u975e\u5e38\u53ef\u9760\uff0c\u800c\u4e14\u901f\u5ea6\u6781\u5feb\u3002\u5b83\u7684\u901f\u5ea6\u5982\u6b64\u4e4b\u5feb\uff0c\u4ee5\u81f3\u4e8eFPGA\u4f4d\u6d41\u4e0d\u4f1a\u88ab\u7f13\u5b58(\u9664\u4e86\u4e0d\u91cd\u5efa\u8bbe\u5907\u4e0a\u5df2\u6709\u7684\u4f4d\u6d41)\uff0c\u56e0\u4e3a\u5bf9\u4e8eUART\u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u4ece\u96f6\u5f00\u59cb\u6784\u5efa\u4e00\u4e2a\u4f4d\u6d41\u53ea\u9700\u8981\u51e0\u79d2\u949f\u3002\u5728\u5f00\u53d1\u65b0\u7684applet\u65f6\uff0c\u5f88\u5c11\u9700\u8981\u7b49\u5f85\u5de5\u5177\u94fe\u3002\n\u5b9e\u73b0\u53ef\u9760\u3001\u9ad8\u6027\u80fd\u7684USB\u901a\u4fe1\u7edd\u975e\u6613\u4e8b-\u6253\u5305\u3001\u7f13\u51b2\u548cUSB\u602a\u7656\u52a0\u5728\u4e00\u8d77\u3002\u683c\u62c9\u65af\u54e5\u62bd\u8c61\u4e86USB\uff1a\u5728FPGA\u4e0a\uff0c\u5c0f\u7a0b\u5e8f\u7f51\u5173\u5199\u5165FIFO\u6216\u4eceFIFO\u8bfb\u53d6\uff0c\u800c\u5728\u4e3b\u673a\u4e0a\uff0c\u5c0f\u7a0b\u5e8f\u8f6f\u4ef6\u5199\u5165\u6216\u8bfb\u53d6\u7c7b\u4f3c\u5957\u63a5\u5b57\u7684\u63a5\u53e3\u3002\u60ef\u7528\u7684Python\u4ee3\u7801\u53ef\u4ee5\u5728\u73b0\u4ee3PC\u4e0a\u4ee5\u6700\u5927USB2\u6279\u91cf\u5e26\u5bbd\u8fdb\u884c\u901a\u4fe1\uff0c\u800c\u4e0d\u9700\u8981\u989d\u5916\u7684\u5de5\u4f5c\u3002\u6b64\u5916\uff0c\u5f53\u672a\u6765\u7684\u683c\u62c9\u65af\u54e5\u7248\u672c\u9664\u4e86\u4f7f\u7528USB\u4e4b\u5916\u8fd8\u5c06\u4f7f\u7528\u4ee5\u592a\u7f51\u65f6\uff0c\u5c06\u4e0d\u9700\u8981\u66f4\u6539\u5c0f\u7a0b\u5e8f\u4ee3\u7801\u3002\n\u8c03\u8bd5\u65b0\u7684\u5c0f\u7a0b\u5e8f\u53ef\u80fd\u5f88\u56f0\u96be\uff0c\u7279\u522b\u662f\u5728\u6d89\u53ca\u53cc\u5411\u603b\u7ebf\u7684\u60c5\u51b5\u4e0b\u3002\u683c\u62c9\u65af\u54e5\u63d0\u4f9b\u5185\u7f6e\u7684\u7cbe\u786e\u5468\u671f\u903b\u8f91\u5206\u6790\u4eea\uff0c\u53ef\u4ee5\u5c06I/O\u5f15\u811a\u7535\u5e73\u548c\u65b9\u5411\u53d8\u5316\u4e0e\u5c0f\u7a0b\u5e8f\u63a5\u6536\u548c\u53d1\u9001\u7684\u547d\u4ee4\u548c\u54cd\u5e94\u76f8\u5173\u8054\u3002\u903b\u8f91\u5206\u6790\u4eea\u538b\u7f29\u6ce2\u5f62\uff0c\u5982\u679c\u5176\u7f13\u51b2\u533a\u5373\u5c06\u6ea2\u51fa\uff0c\u5219\u53ef\u4ee5\u6682\u505c\u5c0f\u7a0b\u5e8f\u3002\n\u8bb8\u591a\u4eba\u62a5\u544a\u4e86\u4e0e\u4e0b\u9762\u7684\u5b89\u88c5\u8bf4\u660e\u6709\u5173\u7684\u5404\u79cd\u95ee\u9898\u3002\u5982\u679c\u5176\u4e2d\u6709\u4efb\u4f55\u90e8\u5206\u4e0d\u8d77\u4f5c\u7528\uff0c\u8bf7\u5c06\u5176\u4f5c\u4e3abug\u8fdb\u884c\u5f52\u6863\uff0c\u4ee5\u4fbf\u8ba9\u6bcf\u4e2a\u4eba\u7684\u4f53\u9a8c\u66f4\u52a0\u6d41\u7545\u3002\n\u60a8\u5c06\u9700\u8981Git\u548cPython3.7(\u6216\u66f4\u65b0\u7684\u7248\u672c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u5c063.7\u66ff\u6362\u4e3a\u4e0b\u9762\u7684\u7248\u672c)\u3002\u5728Debian\u6216Ubuntu\u7cfb\u7edf\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\uff1a\n\u60a8\u8fd8\u9700\u8981\u6765\u81ea\u4e3b\u5206\u652f\u7684yosys\u548cnextpnr-ice40\u3002\u6309\u7167Yosys\u548cnextpnr\u7684\u8bbe\u7f6e\u8bf4\u660e\u8fdb\u884c\u64cd\u4f5c\u3002\n\u5c06\u60a8\u7684\u7cfb\u7edf\u914d\u7f6e\u4e3a\u5141\u8bb8\u975e\u7279\u6743\u8bbf\u95ee(plugdev\u7ec4\u4e2d\u7684\u4efb\u4f55\u4eba)\u683c\u62c9\u65af\u54e5\u786c\u4ef6\uff1a\n\u811a\u672c\u653e\u5728$HOME/.local/bin\u4e2d\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u5c06\u8be5\u76ee\u5f55\u6dfb\u52a0\u5230PATH\u73af\u5883\u53d8\u91cf\u4e2d\uff1b\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u4ece\u7ec8\u7aef\u8fd0\u884cGlasgow\u3002\u9664\u4e86\u8c03\u6574path\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528python3.7m\u7684glasgow.cli\u3002\n\u5c3d\u7ba1\u4e00\u6d41\u7684Windows\u652f\u6301\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u76ee\u6807\uff0c\u800c\u4e14\u683c\u62c9\u65af\u54e5\u5df2\u7ecf\u53ef\u4ee5\u5728Windows\u4e0a\u8fd0\u884c\uff0c\u4f46\u5b89\u88c5\u8fc7\u7a0b\u8fd8\u6ca1\u6709\u51c6\u5907\u597d\u3002\n\u51fa\u5382\u95ea\u70c1\u6307\u7684\u662f\u4e3a\u5168\u65b0\u7684\u683c\u62c9\u65af\u54e5\u7535\u8def\u677f(\u60a8\u53ef\u80fd\u521a\u521a\u7ec4\u88c5\u597d\u7684)\u5206\u914d\u4e00\u4e2a\u5e8f\u5217\u53f7\u7684\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u7f16\u5199\u4e00\u4e9b\u5173\u952e\u914d\u7f6e\u9009\u9879\u4ee5\u8ba9\u6b63\u5e38\u7684\u683c\u62c9\u65af\u54e5CLI\u83b7\u53d6\u6b64\u8bbe\u5907\u7684\u8fc7\u7a0b\u3002\u9664\u975e\u51fa\u73b0\u4e25\u91cd\u548c\u5f02\u5e38\u7684EEPROM\u635f\u574f\uff0c\u5426\u5219\u6bcf\u4e2a\u7535\u8def\u677f\u53ea\u6267\u884c\u4e00\u6b21\u6b64\u8fc7\u7a0b\u3002\n\u4f5c\u4e3a\u5de5\u5382\u95ea\u70c1\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u8bf7\u6309\u7167\u201c\u5982\u4f55\u4f7f\u7528\u683c\u62c9\u65af\u54e5\uff1f\u201d\u90e8\u5206\u4e2d\u7684\u6240\u6709\u6b65\u9aa4\u64cd\u4f5c\u3002\n\u4efb\u4f55\u51fa\u5382\u95ea\u5b58\u7684\u7535\u8def\u677f\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u767d\u7684FX2_MEM EEPROM\u3002\u5982\u679cFX2_MEM EEPROM\u672a\u5b8c\u5168\u64e6\u9664(\u6240\u6709\u5b57\u8282\u5747\u8bbe\u7f6e\u4e3aFF)\uff0c\u51fa\u5382\u95ea\u70c1\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5931\u8d25\u3002\n\u5c06\u60a8\u7684\u7cfb\u7edf\u914d\u7f6e\u4e3a\u5141\u8bb8(plugdev\u7ec4\u4e2d\u7684\u4efb\u4f55\u4eba)\u5bf9\u679a\u4e3e\u4e3aCypress FX2 ROM\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u7684\u4efb\u4f55\u786c\u4ef6\u8fdb\u884c\u65e0\u7279\u6743\u8bbf\u95ee\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u6b64udev\u89c4\u5219\u5c06\u5f71\u54cd\u66f4\u591a\u8bbe\u5907\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u683c\u62c9\u65af\u54e5\uff0c\u56e0\u4e3aCypress VID\uff1aPID\u5bf9\u662f\u5171\u4eab\u7684\u3002\n\u63d2\u5165\u65b0\u7ec4\u88c5\u7684\u8bbe\u5907\u3002\u6b64\u65f6\uff0clsusb|grep 04b4\uff1a8613\u5e94\u8be5\u5217\u51fa\u4e00\u4e2a\u6761\u76ee\u3002\u5047\u8bbe\u60a8\u6b63\u5728\u51fa\u5382\u95ea\u5b58\u7535\u8def\u677f\u7248\u672cC1\uff0c\u8fd0\u884c\uff1a\n@Whitequark\u6784\u601d\u8bbe\u8ba1\uff0c\u534f\u8c03\u9879\u76ee\uff0c\u5b9e\u73b0\u5927\u90e8\u5206\u7f51\u5173\u548c\u8f6f\u4ef6\uff1b\n\u683c\u62c9\u65af\u54e5\u662f\u57280\u6761\u6b3eBSD\u8bb8\u53ef\u548cApache2.0\u8bb8\u53ef\u7684\u6761\u6b3e\u4e0b\u5206\u53d1\u7684\u3002", "note_en": "Let&#39;s chat! Our IRC channel is  #glasgow at freenode.net; our Discord channel is  #glasgow at 1BitSquared&#39;s Discord server.\n   Glasgow is a tool for exploring digital interfaces, aimed at embedded developers, reverse engineers, digital archivists, electronics hobbyists, and everyone else who wants to communicate to a wide selection of digital devices with high reliability and minimum hassle. It can be attached to most devices without additional active or passive components, and includes extensive protection from unexpected conditions and operator error.\n The Glasgow hardware can support many digital interfaces because it uses reconfigurable logic. Instead of only offering a small selection of standard hardware supported interfaces, it uses an FPGA to adapt on the fly to the task at hand without compromising on performance or reliability, even for unusual, custom or obsolete interfaces.\n The Glasgow software is a set of building blocks designed to eliminate incidental complexity. Each interface is packaged into a self-contained  applet that can be used directly from the command line, or reused as a part of a more complex system. Using Glasgow does not require any programming knowledge, although it becomes much more powerful if you know a bit of Python.\n   synthesize sound using a Yamaha OPLx/OPM chip and play it in real time on a webpage,\n Everything above can be done with only a Glasgow revC board, some wires, and depending on the device under test, external power.\n     The Glasgow hardware evolves over time, with each major milestone called a &#34;revision&#34;. Although all revisions are, and will always be supported with the same software, they vary significantly in their capabilities, and the chosen revision will limit the possible tasks.\n Glasgow boards use a version in the  revXN format, where  X is a revision letter (increased on major design changes) and  N is a stepping number (increased on any layout or component changes). For example,  revC0 is the first stepping of revision C.\n  Revisions A and B have not been produced in significant amounts, contain major design issues, and are therefore mostly of historical interest. Nevertheless, everyone who has one of the revA/revB boards can keep using them\u2014forever.\n   Revision C is the latest revision and is being prepared for mass production. It provides 16 I/O pins with a maximum data rate of approx. 200 Mbps/pin (100 MHz)*, independent direction control and independent programmable pull-up/pull-down resistors. The I/O pins are grouped into two I/O ports, each of which can use any voltage from 1.8 V to 5 V, sense and monitor I/O voltage of the device under test, as well as provide up to 150 mA of power. The board uses USB 2 for power, configuration, and communication, achieving up to 336 Mbps (42 MB/s) of sustained combined throughput.\n * Maximum data rate achievable in practice depends on many factors and will vary greatly with specific interface and applet design. 12 Mbps/pin (6 MHz) can be achieved with minimal development effort; reaching higher data rates requires careful HDL coding and a good understanding of timing analysis.\n  Glasgow is written entirely in Python 3. The interface logic that runs on the FPGA is described using  nMigen, which is a Python-based domain specific language. The supporting code that runs on the host PC is written in Python with  asyncio. This way, the logic on the FPGA can be assembled on demand for any requested configuration, keeping it as fast and compact as possible, and code can be shared between gateware and software, removing the need to add error-prone &#34;glue&#34; boilerplate.\n Glasgow would not be possible without the  open-source iCE40 FPGA toolchain, which is not only very reliable but also extremely fast. It is so fast that FPGA bitstreams are not cached (beyond not rebuilding the bitstream already on the device), as it only takes a few seconds to build one from scratch for something like an UART. When developing a new applet it is rarely necessary to wait for the toolchain.\n Implementing reliable, high-performance USB communication is not trivial\u2014packetization, buffering, and USB quirks add up. Glasgow abstracts away USB: on the FPGA, the applet gateware writes to or reads from a FIFO, and on the host, applet software writes to or reads from a socket-like interface. Idiomatic Python code can communicate at maximum USB 2 bulk bandwidth on a modern PC without additional effort. Moreover, when a future Glasgow revision will use Ethernet in addition to USB, no changes to applet code will be required.\n Debugging new applets can be hard, especially if bidirectional buses are involved. Glasgow provides a built-in cycle-accurate logic analyzer that can relate the I/O pin level and direction changes to commands and responses received and sent by the applet. The logic analyzer compresses waveforms and can pause the applet if its buffer is about to overflow.\n   Multiple people have reported various issues with the installation instructions below. If any part of these does not work, please file it as a bug, so that the experience can be made more smooth for everyone.\n You will need git and Python 3.7 (or a newer version, in which case replace  3.7 with that version below). On a Debian or Ubuntu system these can be installed with:\n  You will also need Yosys and nextpnr-ice40, both from the master branch. Follow the setup instructions for  Yosys and  nextpnr.\n   Configure your system to allow unprivileged access (for anyone in the  plugdev group) to the Glasgow hardware:\n    The scripts are placed in  $HOME/.local/bin, so be sure to add that directory to the  PATH environment variable; after this, you can run  glasgow from a terminal. Instead of adjusting  PATH it is also possible to use  python3.7 -m glasgow.cli.\n    Although first-class Windows support is an important goal and Glasgow already works on Windows, the installation process is not yet ready.\n  &#34;Factory flashing&#34; refers to the process of assigning a brand new Glasgow board (that you probably just assembled) a serial number, as well as writing a few critical configuration options that will let the normal Glasgow CLI pick up this device. Barring severe and unusual EEPROM corruption, this process is performed only once for each board.\n As a prerequisite to factory flashing, follow all steps from the &#34; How do I use Glasgow?&#34; section.\n Any board that is factory flashed must have a blank FX2_MEM EEPROM. If the FX2_MEM EEPROM is not completely erased (all bytes set to  FF), the factory flashing process may fail.\n  Configure your system to allow unprivileged access (for anyone in the  plugdev group) to any hardware that enumerates as the Cypress FX2 ROM bootloader:\n  Note that this udev rule will affect more devices than just Glasgow, since the Cypress VID:PID pair is shared.\n Plug in the newly assembled device. At this point,  lsusb | grep 04b4:8613 should list one entry. Assuming you are factory flashing a board revision C1, run:\n      @whitequark came up with the design, coordinates the project and implements most of gateware and software;\n  Glasgow is distributed under the terms of both 0-clause BSD license as well as Apache 2.0 license.", "posttime": "2020-08-10 06:02:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u82cf\u683c\u5170,scots", "title": "\u683c\u62c9\u65af\u54e5\uff1a\u82cf\u683c\u5170\u7535\u5b50\u519b\u5200", "title_en": "Glasgow: Scots Army Knife for Electronics", "transed": 1, "url": "https://github.com/GlasgowEmbedded/glasgow#what-is-glasgow", "via": "", "real_tags": ["\u82cf\u683c\u5170", "scots"]}, {"category": "", "categoryclass": "", "imagename": "c4e24f3d03546910e056eead6a4b3cda.jpg", "infoid": 1017250, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Linux5.8\u5305\u542b800,000\u4e2a\u65b0\u884c\u548c\u8d85\u8fc714,000\u4e2a\u66f4\u6539\u7684\u6587\u4ef6\uff0c\u4f7f\u5176\u6210\u4e3a\u8fc4\u4eca\u6700\u5927\u7684\u53d1\u884c\u7248\u4e4b\u4e00\u3002\nLinux5.8\u7ec8\u4e8e\u53d1\u5e03\u4e86\uff0c\u4e4b\u524dLinux\u5185\u6838\u7684\u521b\u5efa\u8005Linus Torvalds\u5c06\u5176\u63cf\u8ff0\u4e3a\u6709\u53f2\u4ee5\u6765\u6700\u5927\u7684\u7248\u672c\u4e4b\u4e00\u3002\n\u65b0\u7248Linux\u5185\u6838\u5728\u5b89\u5168\u6027\u3001\u6838\u5fc3\u7ec4\u4ef6\u3001\u9a71\u52a8\u7a0b\u5e8f\u3001\u5185\u5b58\u7ba1\u7406\u3001\u7f51\u7edc\u4ee5\u53ca\u5185\u6838\u8bbe\u8ba1\u6539\u8fdb\u7b49\u65b9\u9762\u5bf9Linux5.7\u8fdb\u884c\u4e86\u5927\u91cf\u66f4\u65b0\u3002\n\u8fd9\u5305\u62ec\u5bf9\u5fae\u8f6fHyper-V\u865a\u62df\u5316\u5e73\u53f0\u7684\u66f4\u65b0\uff0c\u5bf9\u82f1\u7279\u5c14\u864e\u6e56\u8fc5\u96f7\u7684\u652f\u6301\uff0c\u5bf9\u5fae\u8f6fexFAT\u6587\u4ef6\u7cfb\u7edf\u7684\u6539\u8fdb\uff0c\u4ee5\u53ca\u5bf9\u66f4\u65b0\u7684\u82f1\u7279\u5c14\u548cARM\u82af\u7247\u7684\u652f\u6301\u3002\nTorvalds\u8bf4\uff0c\u5185\u6838\u5df2\u7ecf\u6536\u5230\u4e86\u8d85\u8fc715,000\u4e2a\u5408\u5e76\u8bf7\u6c42\uff0c\u5185\u6838\u6e90\u4ee3\u7801\u5e93\u4e2d\u5927\u7ea620%\u7684\u6587\u4ef6\u5df2\u7ecf\u88ab\u4fee\u6539\u3002\u6258\u74e6\u5c14\u5179\u8bf4\uff0c\u8fd9\u786e\u5b9e\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u6bd4\u4f8b\uff0c\u867d\u7136\u5176\u4e2d\u4e00\u4e9b\u662f\u7167\u672c\u5ba3\u79d1\u7684\uff0c\u4f46\u603b\u4f53\u4e0a\u5b9e\u9645\u4e0a\u662f\u76f8\u540c\u7684\u6a21\u5f0f\uff1a5.8\u53ea\u662f\u770b\u5230\u4e86\u5f88\u5927\u7684\u53d1\u5c55\u3002\n\u7ffb\u8bd1\u6210\u6570\u5b57\u540e\uff0cLinux5.8\u5305\u62ec\u8d85\u8fc7800,000\u4e2a\u65b0\u884c\u548c\u8d85\u8fc714,000\u4e2a\u66f4\u6539\u7684\u6587\u4ef6\u3002\u6839\u636eTorvalds\u7684\u6570\u636e\uff0c\u5728\u5408\u5e76\u7a97\u53e3\u671f\u95f4\uff0c\u5b83\u8fd8\u6536\u5230\u4e86\u6570\u91cf\u6700\u591a\u7684\u5408\u5e76\u8bf7\u6c42\u4e4b\u4e00-\u8d85\u8fc714,000\u4e2a\u975e\u5408\u5e76\u63d0\u4ea4\u548c\u8d85\u8fc715,000\u4e2a\u5305\u62ec\u5408\u5e76\u5728\u5185\u7684\u8bf7\u6c42\u30025.8\u770b\u8d77\u6765\u5f88\u5927\u3002\u771f\u7684\u5f88\u5927\uff0c\u4ed6\u8865\u5145\u9053\u3002\n\u7136\u800c\uff0c\u5c3d\u7ba15.8\u7248\u5185\u6838\u7684\u5927\u5c0f\u4e0e2016\u5e74\u76844.9\u7248\u5927\u81f4\u76f8\u540c\uff0c\u4f46\u6258\u74e6\u5c14\u5179\u6307\u51fa\uff0cLinux4.9\u88ab\u4eba\u4e3a\u5730\u653e\u5927\u4e86\uff0c\u90e8\u5206\u539f\u56e0\u662f\u5b83\u5305\u542b\u4e86Greybus\u9a71\u52a8\u7a0b\u5e8f\u5b50\u7cfb\u7edf\uff0c\u4ee5\u652f\u6301\u8c37\u6b4c\u7684\u6a21\u5757\u5316\u624b\u673a\u9879\u76ee\u201cAra\u8ba1\u5212\u201d\uff0c\u8be5\u9879\u76ee\u540e\u6765\u88ab\u5c01\u5b58\u3002\n\u6709\u5174\u8da3\u4e0b\u8f7dLinux 5.8\u7248\u672c\u7684\u7528\u6237\u53ef\u4ee5\u4eceLinux\u5185\u6838\u5b98\u65b9\u9875\u9762\u4e0b\u8f7d\u3002\u540c\u65f6\uff0c\u4e00\u5b9a\u8981\u67e5\u770bTechRepublic\u7684Flipboard\u9875\u9762\uff0c\u4ee5\u83b7\u5f97\u66f4\u591a\u5173\u4e8eLinux\u3001Android\u548c\u5f00\u6e90\u7684\u5fc5\u8bfb\u5185\u5bb9\u3001\u6307\u5357\u548c\u4f7f\u7528\u65b9\u6cd5\u3002\n\u60a8\u4e00\u5b9a\u4e0d\u60f3\u9519\u8fc7\u6211\u4eec\u5173\u4e8eLinux\u64cd\u4f5c\u7cfb\u7edf\u548c\u5f00\u6e90\u5e94\u7528\u7a0b\u5e8f\u7684\u6280\u5de7\u3001\u6559\u7a0b\u548c\u8bc4\u8bba\u3002\u6bcf\u5468\u4e8c\u9001\u8d27\u3002\n\u4eca\u5929\u62a5\u540d", "note_en": "Linux 5.8 includes 800,000 new lines and over 14,000 changed files, making it one of the biggest releases yet.\n  Linux 5.8 has finally been released,  previously described by Linux kernel creator Linus Torvalds as &#34;one of our biggest releases of all time&#34;.\n    The new version of the Linux kernel brings a number of updates to Linux 5.7 spanning security, core components, drivers, memory management, networking and improvements to the kernel&#39;s design, amongst others.\n  This includes updates for Microsoft&#39;s Hyper-V virtualization platform, Intel Tiger Lake Thunderbolt support, improvements to  Microsoft&#39;s exFAT file system, and support for newer  Intel and ARM chips.\n  Torvalds said the kernel had received over 15,000 merge requests and that around 20% of all the files in the kernel source repository had been modified. &#34;That&#39;s really a fairly big percentage, and while some of it is scripted, on the whole it&#39;s really just the same pattern: 5.8 has simply seen a lot of development,&#34;  Torvalds said.\n     Translated into numbers, Linux 5.8 includes over 800,000 new lines and over 14,000 changed files. It also received one of the biggest number of merge requests during its merge window \u2013 over 14,000 non-merge commits and more than 15,000 including merges, according to Torvalds. &#34;5.8 looks big. Really big,&#34; he added.\n However, while kernel version 5.8 is approximately the same size as version 4.9 from 2016, Torvalds pointed out that Linux 4.9 was &#34;artificially big&#34; due in part to the fact that it contained the Greybus driver subsystem to support Google&#39;s modular phone project, Project Ara, which has since been mothballed.\n Users interested in downloading Linux version 5.8 can download it from the  official Linux Kernel page.\u00a0In the meantime, be sure to check out TechRepublic&#39;s  Flipboard page for more must-read coverage, guides and how tos on Linux, Android and open source.\n You don&#39;t want to miss our tips, tutorials, and commentary on the Linux OS and open source applications. Delivered Tuesdays\n        Sign up today", "posttime": "2020-08-10 05:13:20", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "linux,torvalds,\u5185\u6838", "title": "Linus Torvalds\uff1aLinux5.8\u201c\u6709\u53f2\u4ee5\u6765\u6700\u5927\u7684\u7248\u672c\u4e4b\u4e00\u201d", "title_en": "Linus Torvalds:  Linux 5.8 \"One of our Biggest Releases of All Time\"", "transed": 1, "url": "https://www.techrepublic.com/article/linux-5-8-launched-linus-torvaldss-biggest-release-of-all-time-brings-these-new-updates/", "via": "", "real_tags": ["linux", "torvalds", "\u5185\u6838"]}, {"category": "", "categoryclass": "", "imagename": "551e2ddb4bf7a3d70fc7ece68db41ca8.jpg", "infoid": 1017249, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u516c\u53f8\u9996\u5e2d\u6267\u884c\u5b98\u8868\u793a\uff1a\u201c\u6295\u8d44\u7684\u8d44\u91d1\u610f\u8bc6\u5230\uff0c\u6d41\u884c\u75c5\u8feb\u4f7f\u8bb8\u591a\u7ec4\u7ec7\u8f6c\u5411\u5728\u5bb6\u5de5\u4f5c\u7684\u6a21\u5f0f\uff0c\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u9700\u8981\u80fd\u591f\u9a8c\u8bc1\u5458\u5de5\u7684\u8fdc\u7a0b\u8bbf\u95ee\u3002\u201d", "note_en": "\u201cThe funds that invested realized that the pandemic forced many organizations to shift to a work from home model and to do that, you need to be able to validate the remote access of workers,\u201d said the company\u2019s CEO", "posttime": "2020-08-10 05:12:34", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6280\u672f,based,\u6a21\u5f0f", "title": "\u603b\u90e8\u4f4d\u4e8e\u4ee5\u8272\u5217\u7684Silverfort\u4e3a\u5176\u591a\u56e0\u7d20\u8eab\u4efd\u9a8c\u8bc1\u6280\u672f\u7b79\u96c6\u4e863000\u4e07\u7f8e\u5143\u7684B\u7cfb\u5217\u8d44\u91d1\uff0c\u8be5\u6280\u672f\u53ef\u4ee5\u5e2e\u52a9\u4f01\u4e1a\u4fdd\u62a4\u5185\u90e8\u548c\u4e91\u4e2d\u7684\u6570\u636e", "title_en": "Israel-based Silverfort raises $30M Series B for its multi-factor authentication tech that can help enterprises secure their data on premises and in the cloud", "transed": 1, "url": "https://www.calcalistech.com/ctech/articles/0,7340,L-3843369,00.html", "via": "", "real_tags": ["\u6280\u672f", "based", "\u6a21\u5f0f"]}, {"category": "", "categoryclass": "", "imagename": "b35ea0f673605570a38e0722c6797d57.jpg", "infoid": 1017248, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u673a\u5668\u5b66\u4e60(ML)\u548c\u4eba\u5de5\u667a\u80fd(AI)\u73b0\u5728\u51e0\u4e4e\u6e17\u900f\u5230iPhone\u7684\u6bcf\u4e00\u9879\u529f\u80fd\u4e2d\uff0c\u4f46\u82f9\u679c\u5e76\u6ca1\u6709\u50cf\u4e00\u4e9b\u7ade\u4e89\u5bf9\u624b\u90a3\u6837\u515c\u552e\u8fd9\u4e9b\u6280\u672f\u3002\u6211\u60f3\u66f4\u591a\u5730\u4e86\u89e3\u82f9\u679c\u7684\u505a\u6cd5\uff0c\u6240\u4ee5\u6211\u82b1\u4e86\u4e00\u4e2a\u5c0f\u65f6\u4e0e\u4e24\u4f4d\u82f9\u679c\u9ad8\u7ba1\u8ba8\u8bba\u4e86\u516c\u53f8\u7684\u6218\u7565\uff0c\u4ee5\u53ca\u6240\u6709\u57fa\u4e8e\u4eba\u5de5\u667a\u80fd\u548cML\u7684\u65b0\u529f\u80fd\u5bf9\u9690\u79c1\u7684\u5f71\u54cd\u3002\n\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u82f9\u679c\u5728\u8fd9\u4e00\u9886\u57df\u4e00\u76f4\u6ca1\u6709\u9886\u5148\u7684\u516c\u4f17\u58f0\u8a89\u3002\u8fd9\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u662f\u56e0\u4e3a\u4eba\u4eec\u5c06\u4eba\u5de5\u667a\u80fd\u4e0e\u6570\u5b57\u52a9\u7406\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u8bc4\u8bba\u5bb6\u4eec\u7ecf\u5e38\u79f0Siri\u4e0d\u5982\u8c37\u6b4c\u52a9\u624b\u6216\u4e9a\u9a6c\u900aAlexa\u6709\u7528\u3002\u5bf9\u4e8eML\uff0c\u8bb8\u591a\u79d1\u6280\u7231\u597d\u8005\u8868\u793a\uff0c\u66f4\u591a\u7684\u6570\u636e\u610f\u5473\u7740\u66f4\u597d\u7684\u6a21\u578b-\u4f46\u82f9\u679c\u5728\u6570\u636e\u6536\u96c6\u65b9\u9762\u5e76\u4e0d\u50cf\u8c37\u6b4c\u90a3\u6837\u51fa\u540d\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u82f9\u679c\u5728\u5176\u51fa\u8d27\u7684\u5927\u591a\u6570\u8bbe\u5907\u4e2d\u90fd\u5305\u542b\u4e86\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u7684\u4e13\u7528\u786c\u4ef6\u3002\u673a\u5668\u667a\u80fd\u9a71\u52a8\u7684\u529f\u80fd\u8d8a\u6765\u8d8a\u591a\u5730\u4e3b\u5bfc\u7740\u4e3b\u65e8\u6f14\u8bb2\uff0c\u82f9\u679c\u9ad8\u7ba1\u4e0a\u53f0\u4ecb\u7ecdiPhone\u3001iPad\u6216Apple Watch\u7684\u65b0\u529f\u80fd\u3002\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\uff0c\u642d\u8f7d\u82f9\u679c\u7845\u7247\u7684Mac\u7535\u8111\u7684\u63a8\u51fa\uff0c\u4e5f\u5c06\u4e3a\u8be5\u516c\u53f8\u7684\u7b14\u8bb0\u672c\u7535\u8111\u548c\u53f0\u5f0f\u673a\u5e26\u6765\u8bb8\u591a\u76f8\u540c\u7684\u673a\u5668\u667a\u80fd\u5f00\u53d1\u3002\n\u5728\u82f9\u679c\u7845\u7247\u53d1\u5e03\u540e\uff0c\u6211\u4e0e\u82f9\u679c\u8d1f\u8d23\u673a\u5668\u5b66\u4e60\u548c\u4eba\u5de5\u667a\u80fd\u6218\u7565\u7684\u9ad8\u7ea7\u526f\u603b\u88c1\u7ea6\u7ff0\u00b7\u8a79\u5357\u5fb7\u96f7\u4e9a\u4ee5\u53ca\u4ea7\u54c1\u8425\u9500\u526f\u603b\u88c1\u9c8d\u52c3\u00b7\u535a\u5c14\u5f7b\u8fdb\u884c\u4e86\u8be6\u7ec6\u4ea4\u8c08\u3002\u4ed6\u4eec\u63cf\u8ff0\u4e86\u82f9\u679c\u7684\u4eba\u5de5\u667a\u80fd\u7406\u5ff5\uff0c\u89e3\u91ca\u4e86\u673a\u5668\u5b66\u4e60\u5982\u4f55\u9a71\u52a8\u67d0\u4e9b\u529f\u80fd\uff0c\u5e76\u70ed\u60c5\u5730\u4e3a\u82f9\u679c\u7684\u8bbe\u5907\u4e0aAI/ML\u6218\u7565\u8fa9\u62a4\u3002\n\u8a79\u5357\u5fb7\u96f7\u4e9a\u548c\u535a\u5c14\u5f7b\u90fd\u662f\u5728\u8fc7\u53bb\u51e0\u5e74\u52a0\u5165\u82f9\u679c\u7684\uff1b\u4e24\u4eba\u4e4b\u524d\u90fd\u66fe\u5728\u8c37\u6b4c\u5de5\u4f5c\u3002\u5b9e\u9645\u4e0a\uff0c\u535a\u5c14\u5f7b\u5728\u79bb\u5f00\u4e00\u6bb5\u65f6\u95f4\u540e\u91cd\u65b0\u52a0\u5165\u4e86\u82f9\u679c\uff1b\u4ed6\u57282009\u5e74\u4e4b\u524d\u4e00\u76f4\u62c5\u4efbiPhone\u7684\u9ad8\u7ea7\u8425\u9500\u603b\u76d1\u30022018\u5e74\uff0c\u8d3e\u5357\u5fb7\u96f7\u4e9a\u4ece\u8c37\u6b4c\u53db\u9003\u5230\u82f9\u679c\u7684\u6d88\u606f\u88ab\u5e7f\u6cdb\u62a5\u9053\uff1b\u4ed6\u66fe\u662f\u8c37\u6b4c\u4eba\u5de5\u667a\u80fd\u548c\u641c\u7d22\u90e8\u95e8\u7684\u8d1f\u8d23\u4eba\u3002\n\u8c37\u6b4c\u548c\u82f9\u679c\u662f\u622a\u7136\u4e0d\u540c\u7684\u4e24\u5bb6\u516c\u53f8\u3002\u8c37\u6b4c\u4ee5\u53c2\u4e0e\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u793e\u533a\u800c\u95fb\u540d\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u9886\u5bfc\u7740\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u793e\u533a\uff0c\u800c\u82f9\u679c\u8fc7\u53bb\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5173\u8d77\u95e8\u6765\u505a\u7684\u3002\u8fd1\u5e74\u6765\uff0c\u968f\u7740\u673a\u5668\u5b66\u4e60\u4e3a\u82f9\u679c\u8bbe\u5907\u7684\u4f17\u591a\u529f\u80fd\u63d0\u4f9b\u52a8\u529b\uff0c\u800c\u4e14\u82f9\u679c\u589e\u52a0\u4e86\u4e0e\u4eba\u5de5\u667a\u80fd\u793e\u533a\u7684\u5408\u4f5c\uff0c\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u4e86\u53d8\u5316\u3002\n\u201c\u5f53\u6211\u52a0\u5165\u82f9\u679c\u7684\u65f6\u5019\uff0c\u6211\u5df2\u7ecf\u662fiPad\u7684\u7528\u6237\u4e86\uff0c\u6211\u5f88\u559c\u6b22\u8fd9\u6b3e\u94c5\u7b14\uff0c\u201d\u8a79\u5357\u5fb7\u91cc\u4e9a(\u540c\u4e8b\u4eec\u90fd\u53eb\u5979J.G.)\u544a\u8bc9\u6211\u3002\u201c\u6240\u4ee5\uff0c\u6211\u4f1a\u8ffd\u67e5\u8f6f\u4ef6\u56e2\u961f\uff0c\u6211\u4f1a\u8bf4\uff0c\u2018\u597d\u5427\uff0c\u7814\u7a76\u624b\u5199\u7684\u673a\u5668\u5b66\u4e60\u56e2\u961f\u5728\u54ea\u91cc\uff1f\u2019\u6211\u627e\u4e0d\u5230\u5b83\u3002\u201c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4ed6\u8981\u627e\u7684\u56e2\u961f\u5e76\u4e0d\u5b58\u5728--\u4ed6\u8bf4\uff0c\u8003\u8651\u5230\u673a\u5668\u5b66\u4e60\u662f\u5f53\u4eca\u8fd9\u4e00\u529f\u80fd\u53ef\u7528\u7684\u6700\u597d\u5de5\u5177\u4e4b\u4e00\uff0c\u8fd9\u4ee4\u4eba\u60ca\u8bb6\u3002\n\u201c\u6211\u77e5\u9053\u6709\u8fd9\u4e48\u591a\u7684\u673a\u5668\u5b66\u4e60\uff0c\u82f9\u679c\u5e94\u8be5\u53bb\u505a\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u7684\u4e8b\u60c5\u90fd\u5728\u771f\u6b63\u505a\u3002\u5728\u8fc7\u53bb\u7684\u4e24\u4e09\u5e74\u91cc\uff0c\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\uff0c\u201c\u4ed6\u8bf4\uff0c\u201d\u8001\u5b9e\u8bf4\uff0c\u6211\u771f\u7684\u8ba4\u4e3a\uff0c\u5728\u672a\u6765\u51e0\u5e74\u91cc\uff0ciOS\u6216\u82f9\u679c\u7684\u4f53\u9a8c\u6ca1\u6709\u4e00\u4e2a\u89d2\u843d\u4e0d\u4f1a\u88ab\u673a\u5668\u5b66\u4e60\u6240\u6539\u53d8\u3002\n\u6211\u95ee\u8a79\u5357\u5fb7\u96f7\u4e9a\uff0c\u4e3a\u4ec0\u4e48\u4ed6\u89c9\u5f97\u82f9\u679c\u662f\u9002\u5408\u4ed6\u7684\u5730\u65b9\u3002\u4ed6\u7684\u56de\u7b54\u540c\u65f6\u4e5f\u662f\u5bf9\u8be5\u516c\u53f8\u4eba\u5de5\u667a\u80fd\u6218\u7565\u7684\u7b80\u6d01\u603b\u7ed3\uff1a\n\u6211\u8ba4\u4e3a\u82f9\u679c\u4e00\u76f4\u4ee3\u8868\u7740\u521b\u610f\u548c\u6280\u672f\u7684\u4ea4\u96c6\u3002\u6211\u8ba4\u4e3a\uff0c\u5f53\u4f60\u8003\u8651\u6784\u5efa\u667a\u80fd\u4f53\u9a8c\u65f6\uff0c\u62e5\u6709\u5782\u76f4\u96c6\u6210\uff0c\u4ece\u5e94\u7528\u7a0b\u5e8f\u5230\u6846\u67b6\uff0c\u518d\u5230\u7845\u7247\uff0c\u90fd\u662f\u975e\u5e38\u91cd\u8981\u7684\u2026\u2026\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u6bb5\u65c5\u7a0b\uff0c\u6211\u8ba4\u4e3a\u8fd9\u5c31\u662f\u6211\u4eec\u62e5\u6709\u7684\u8ba1\u7b97\u8bbe\u5907\u7684\u672a\u6765\uff0c\u5c31\u662f\u5b83\u4eec\u662f\u667a\u80fd\u7684\uff0c\u800c\u90a3\u79cd\u667a\u80fd\u5df2\u7ecf\u6d88\u5931\u4e86\u3002\n\u535a\u5c14\u5f7b\u4e5f\u9644\u548c\u9053\uff0c\u8fd9\u663e\u7136\u662f\u6211\u4eec\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u6240\u505a\u7684\u4e00\u5207\u90fd\u662f\uff0c\u8ba9\u6211\u4eec\u4e13\u6ce8\u4e8e\u597d\u5904\u662f\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u4f60\u662f\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u3002\u5728\u6700\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f1a\u53d8\u5f97\u81ea\u7136\u800c\u7136\u3002\u5b83\u6d88\u5931\u4e86..\u3002\u4f60\u53ea\u8981\u4e13\u6ce8\u4e8e\u53d1\u751f\u4e86\u4ec0\u4e48\uff0c\u800c\u4e0d\u662f\u5b83\u662f\u5982\u4f55\u53d1\u751f\u7684\u3002\n\u518d\u4e00\u6b21\u8c08\u5230\u7b14\u8ff9\u7684\u4f8b\u5b50\uff0c\u8a79\u5357\u5fb7\u91cc\u4e9a\u6307\u51fa\uff0c\u82f9\u679c\u5728\u6784\u5efa\u673a\u5668\u667a\u80fd\u9a71\u52a8\u7684\u529f\u80fd\u548c\u4ea7\u54c1\u65b9\u9762\u5904\u4e8e\u6700\u6709\u5229\u7684\u5730\u4f4d\uff0c\u53ef\u4ee5\u201c\u5f15\u9886\u884c\u4e1a\u201d\uff1a\n\u6211\u4eec\u505a\u4e86\u94c5\u7b14\uff0c\u6211\u4eec\u505a\u4e86iPad\uff0c\u6211\u4eec\u90fd\u505a\u4e86\u8f6f\u4ef6\u3002\u8fd9\u662f\u505a\u4e00\u4ef6\u975e\u5e38\u975e\u5e38\u597d\u7684\u5de5\u4f5c\u7684\u72ec\u7279\u673a\u4f1a\u3002\u6211\u4eec\u5230\u5e95\u5728\u505a\u4ec0\u4e48\u975e\u5e38\u975e\u5e38\u597d\u7684\u5de5\u4f5c\uff1f\u8ba9\u4eba\u4eec\u505a\u7b14\u8bb0\uff0c\u5e76\u5728\u6570\u5b57\u7eb8\u4e0a\u521b\u9020\u6027\u5730\u601d\u8003\u3002\u6211\u611f\u5174\u8da3\u7684\u662f\u770b\u5230\u8fd9\u4e9b\u7ecf\u9a8c\u5728\u4e16\u754c\u4e0a\u5927\u89c4\u6a21\u5e94\u7528\u3002\n\u4ed6\u5c06\u8fd9\u4e0e\u8c37\u6b4c\u8fdb\u884c\u4e86\u5bf9\u6bd4\u3002\u8c37\u6b4c\u662f\u4e00\u5bb6\u4ee4\u4eba\u60ca\u53f9\u7684\u516c\u53f8\uff0c\u90a3\u91cc\u6709\u4e00\u4e9b\u771f\u6b63\u4f1f\u5927\u7684\u6280\u672f\u4e13\u5bb6\u5728\u90a3\u91cc\u5de5\u4f5c\uff0c\u4ed6\u8bf4\u3002\u4f46\u4ece\u6839\u672c\u4e0a\u8bf4\uff0c\u4ed6\u4eec\u7684\u5546\u4e1a\u6a21\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u4ed6\u4eec\u5e76\u4e0d\u4ee5\u8fd0\u9001\u4ebf\u4e07\u4eba\u4f7f\u7528\u7684\u6d88\u8d39\u8005\u4f53\u9a8c\u800c\u95fb\u540d\u3002\n\u5728\u6700\u8fd1\u7684\u8425\u9500\u6f14\u793a\u4e2d\uff0c\u82f9\u679c\u4e60\u60ef\u4e8e\u5c06iPhone\u3001Apple Watch\u6216iPad\u7684\u4e00\u4e9b\u529f\u80fd\u6539\u8fdb\u5f52\u529f\u4e8e\u673a\u5668\u5b66\u4e60\uff0c\u4f46\u5b83\u5f88\u5c11\u6d89\u53ca\u592a\u591a\u7ec6\u8282-\u800c\u4e14\u5927\u591a\u6570\u8d2d\u4e70iPhone\u7684\u4eba\u65e0\u8bba\u5982\u4f55\u90fd\u6ca1\u6709\u770b\u8fc7\u8fd9\u4e9b\u6f14\u793a\u3002\u8fd9\u4e0e\u8c37\u6b4c\u5f62\u6210\u4e86\u9c9c\u660e\u7684\u5bf9\u6bd4\uff0c\u4f8b\u5982\uff0c\u8c37\u6b4c\u5c06\u4eba\u5de5\u667a\u80fd\u7f6e\u4e8e\u5176\u5411\u6d88\u8d39\u8005\u53d1\u9001\u7684\u5927\u90e8\u5206\u4fe1\u606f\u7684\u4e2d\u5fc3\u3002", "note_en": "Machine learning (ML) and artificial intelligence (AI) now permeate nearly every feature on the iPhone, but Apple hasn&#39;t been touting these technologies like some of its competitors have. I wanted to understand more about Apple&#39;s approach , so I spent an hour talking with two Apple executives about the company&#39;s strategy\u2014and the privacy implications of all the new features based on AI and ML.\n Historically, Apple has not had a public reputation for leading in this area. That&#39;s partially because people associate AI with digital assistants, and reviewers frequently call Siri less useful than Google Assistant or Amazon Alexa. And with ML, many tech enthusiasts say that more data means better models\u2014but Apple is not known for data collection in the same way as, say, Google.\n Despite this, Apple has included dedicated hardware for machine learning tasks in most of the devices it ships. Machine intelligence-driven functionality increasingly dominates the keynotes where Apple executives take the stage to introduce new features for iPhones, iPads, or the Apple Watch. The introduction of Macs with Apple silicon later this year will bring many of the same machine intelligence developments to the company&#39;s laptops and desktops, too.\n In the wake of the Apple silicon announcement,\u00a0I spoke at length with John Giannandrea, Apple&#39;s Senior Vice President for Machine Learning and AI Strategy, as well as with Bob Borchers, VP of Product Marketing.\u00a0They described Apple&#39;s AI philosophy, explained how machine learning drives certain features, and argued passionately for Apple&#39;s on-device AI/ML strategy.\n    Both Giannandrea and Borchers joined Apple in the past couple of years; each previously worked at Google. Borchers actually rejoined Apple after time away; he was a senior director of marketing for the iPhone until 2009. And\u00a0Giannandrea&#39;s defection from Google to Apple in 2018 was widely reported; he had been Google&#39;s head of AI and search.\n Google and Apple are quite different companies. Google has a reputation for participating in, and in some cases leading, the AI research community, whereas Apple used to do most of its work behind closed doors. That has changed in recent years, as machine learning powers numerous features in Apple&#39;s devices and Apple has increased its engagement with the AI community.\n \u201cWhen I joined Apple, I was already an iPad user, and I loved the Pencil,\u201d Giannandrea (who goes by &#34;J.G.&#34; to colleagues) told me. \u201cSo, I would track down the software teams and I would say, \u2018Okay, where&#39;s the machine learning team that&#39;s working on handwriting?\u2019 And I couldn&#39;t find it.\u201d\u00a0It turned out the team he was looking for didn\u2019t exist\u2014a surprise, he said, given that machine learning is one of the best tools available for the feature today.\n \u201cI knew that there was so much machine learning that Apple should do that it was surprising that not everything was actually being done. And that has changed dramatically in the last two to three years,\u201d he said.\u00a0\u201cI really honestly think there&#39;s not a corner of iOS or Apple experiences that will not be transformed by machine learning over the coming few years.&#34;\n I asked Giannandrea why he felt Apple was the right place for him. His answer doubled as a succinct summary of the company&#39;s AI strategy:\n I think that Apple has always stood for that intersection of creativity and technology. And I think that when you&#39;re thinking about building smart experiences, having vertical integration, all the way down from the applications, to the frameworks, to the silicon, is really essential...\u00a0I think it&#39;s a journey, and I think that this is the future of the computing devices that we have, is that they be smart, and that, that smart sort of disappear.\n Borchers chimed in too, adding, &#34;This is clearly our approach, with everything that we do, which is, &#39;Let&#39;s focus on what the benefit is, not how you got there.&#39; And in the best cases, it becomes automagic. It disappears... and you just focus on what happened, as opposed to how it happened.&#34;\n Speaking again of the handwriting example, Giannandrea made the case that Apple is best positioned to \u201clead the industry\u201d in building machine intelligence-driven features and products:\n We made the Pencil, we made the iPad, we made the software for both. It&#39;s just unique opportunities to do a really, really good job. What are we doing a really, really good job at? Letting somebody take notes and be productive with their creative thoughts on digital paper. What I&#39;m interested in is seeing these experiences be used at scale in the world.\n He contrasted this with Google. &#34;Google is an amazing company, and there&#39;s some really great technologists working there,&#34; he said. &#34;But fundamentally, their business model is different and they&#39;re not known for shipping consumer experiences that are used by hundreds of millions of people.&#34;\n  Apple has made a habit of crediting machine learning with improving some features in the iPhone, Apple Watch, or iPad in its recent marketing presentations, but it rarely goes into much detail\u2014and most people who buy an iPhone never watched those presentations, anyway. Contrast this with Google, for example, which places AI at the center of much of its messaging to consumers.", "posttime": "2020-08-10 05:11:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "apple,\u4eba\u5de5\u667a\u80fd,\u82f9\u679c,\u8ba4\u4e3a,believes", "title": "\u4e3a\u4ec0\u4e48\u82f9\u679c\u8ba4\u4e3a\u5b83\u662f\u4eba\u5de5\u667a\u80fd\u7684\u9886\u5148\u8005-\u4e3a\u4ec0\u4e48\u5b83\u8bf4\u6279\u8bc4\u5bb6\u4eec\u5168\u9519\u4e86", "title_en": "Why Apple believes it\u2019s an AI leader\u2013and why it says critics have it all wrong", "transed": 1, "url": "https://arstechnica.com/gadgets/2020/08/apple-explains-how-it-uses-machine-learning-across-ios-and-soon-macos/#h2", "via": "", "real_tags": ["apple", "\u4eba\u5de5\u667a\u80fd", "\u82f9\u679c", "\u8ba4\u4e3a", "believes"]}, {"category": "", "categoryclass": "", "imagename": "5a2cd11d83b3194ba400316725bddcd3.jpeg", "infoid": 1017247, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u6240\u9ad8\u4e2d\uff0c\u67099\u4f8b\u786e\u8bca\u7684\u65b0\u51a0\u80ba\u708e\u75c5\u4f8b\uff0c\u505c\u5b66\u7684\u4e00\u540d15\u5c81\u7684\u5b66\u751f\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u4e00\u5f20\u6324\u6ee1\u4e86\u4e0d\u6234\u9762\u5177\u7684\u5b66\u751f\u7684\u8d70\u5eca\u7167\u7247\u3002\n\u5468\u516d\uff0c\u4f50\u6cbb\u4e9a\u5dde\u8fbe\u62c9\u65af\u7684\u5317\u4fdd\u5c14\u4e01\u9ad8\u4e2d\u7ed9\u5bb6\u957f\u53d1\u4e86\u4e00\u5c01\u4fe1\uff0c\u4fe1\u4e2d\u5199\u9053\uff1a\u201c\u76ee\u524d\uff0c\u6211\u4eec\u77e5\u9053\u4e0a\u5468\u67096\u540d\u5b66\u751f\u548c3\u540d\u6559\u804c\u5458\u5de5\u5728\u5b66\u6821\u81f3\u5c11\u5446\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u4ed6\u4eec\u540e\u6765\u5411\u6211\u4eec\u62a5\u544a\u8bf4\u4ed6\u4eec\u7684\u68c0\u6d4b\u5448\u9633\u6027\u3002\u8fd9\u5c01\u4fe1\u53d1\u8868\u5728\u201d\u4e9a\u7279\u5170\u5927\u5baa\u6cd5\u201c\u6742\u5fd7\u4e0a\u3002\n\u5728\u5468\u4e00\u5b66\u6821\u91cd\u65b0\u5f00\u5b66\u4e4b\u524d\uff0c\u68c0\u6d4b\u5448\u9633\u6027\u7684\u516d\u540d\u5b66\u751f\u548c\u4e09\u540d\u6559\u804c\u5458\u5de5\u4e2d\u7684\u5927\u591a\u6570\u751a\u81f3\u6240\u6709\u4eba\u90fd\u53ef\u80fd\u611f\u67d3\u4e86\u75c5\u6bd2\u3002\u6b63\u5982\u54c8\u4f5b\u533b\u5b66\u9662\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u4ece\u63a5\u89e6\u5230\u75c7\u72b6\u5f00\u59cb\u7684\u65f6\u95f4(\u79f0\u4e3a\u6f5c\u4f0f\u671f)\u88ab\u8ba4\u4e3a\u662f3\u81f314\u5929\uff0c\u5c3d\u7ba1\u75c7\u72b6\u901a\u5e38\u5728\u63a5\u89e6\u540e4\u81f35\u5929\u5185\u51fa\u73b0\uff0c\u800c\u65b0\u51a0\u80ba\u708e\u643a\u5e26\u8005\u5728\u5f00\u59cb\u51fa\u73b0\u75c7\u72b6\u4e4b\u524d48\u81f372\u5c0f\u65f6\u53ef\u80fd\u5177\u6709\u4f20\u67d3\u6027\u3002\n\u4f46\u662f\uff0c\u4e0d\u7ba1\u8fd9\u4e5d\u4e2a\u4eba\u662f\u4ec0\u4e48\u65f6\u5019\u611f\u67d3\u7684\uff0c\u4ed6\u4eec\u51fa\u73b0\u5728\u4e00\u6240\u8d70\u5eca\u91cc\u6324\u6ee1\u4e86\u6ca1\u6709\u6234\u53e3\u7f69\u7684\u5b66\u751f\u7684\u5b66\u6821\uff0c\u8fd9\u610f\u5473\u7740\u5176\u4ed6\u8bb8\u591a\u5b66\u751f\u548c\u8001\u5e08\u90fd\u9762\u4e34\u611f\u67d3\u7684\u98ce\u9669\uff0c\u8fd9\u4e9b\u611f\u67d3\u53ef\u80fd\u4f1a\u5728\u4e0d\u4e45\u7684\u5c06\u6765\u51fa\u73b0\u5728\u6d4b\u8bd5\u7ed3\u679c\u4e2d\u3002\u8fd9\u6240\u9ad8\u4e2d\u5927\u7ea6\u67092000\u540d\u5b66\u751f\u3002\n\u751a\u81f3\u5728\u91cd\u65b0\u5f00\u653e\u4e4b\u524d\uff0c\u9ad8\u4e2d\u8db3\u7403\u961f\u7684\u4e00\u4e9b\u6210\u5458\u5c31\u5df2\u7ecf\u5bf9\u65b0\u51a0\u80ba\u708e\u7684\u68c0\u6d4b\u5448\u9633\u6027\u3002\u636e\u4e9a\u7279\u5170\u5927\u7b2c\u4e8c\u9891\u9053\u62a5\u9053\uff0c\u81ea7\u67081\u65e5\u4ee5\u6765\uff0c\u4fdd\u5c14\u4e01\u53bf\u7684\u5b66\u6821\u5171\u62a5\u544a\u4e8653\u4f8b\u51a0\u72b6\u75c5\u6bd2\u611f\u67d3\u75c5\u4f8b\uff0c\u5176\u4e2d23\u4f8b\u53d1\u751f\u5728\u9ad8\u4e2d\u3002\n\u6b63\u5982\u6211\u4eec\u5468\u4e94\u62a5\u9053\u7684\u90a3\u6837\uff0c\u5728\u5b66\u751f\u6c49\u5a1c\u00b7\u6c83\u7279\u65af\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u4e86\u4e00\u5f20\u7167\u7247\u540e\uff0c\u5b66\u6821\u5bf9\u5979\u53d1\u51fa\u4e86\u4e3a\u671f5\u5929\u7684\u505c\u5b66\u901a\u77e5\uff0c\u5e76\u6307\u51fa\u8d70\u5eca\u62e5\u5835\uff0c\u53e3\u7f69\u8986\u76d6\u7387\u4e3a10%\u3002\u5728\u5a92\u4f53\u5e7f\u6cdb\u62a5\u9053\u540e\uff0c\u5b66\u6821\u89e3\u9664\u4e86\u5979\u7684\u505c\u5b66\u3002\u5baa\u6cd5\u65e5\u62a5\u8bf4\uff0c\u53e6\u4e00\u540d\u56e0\u7c7b\u4f3c\u539f\u56e0\u88ab\u505c\u5b66\u7684\u672a\u5177\u540d\u5b66\u751f\u4e5f\u88ab\u64a4\u9500\u4e86\u505c\u5b66\u3002\n\u5b66\u751f\u4eec\u53ea\u5728\u5468\u4e00\u5230\u5468\u4e09\u4eb2\u81ea\u4e0a\u8bfe\uff0c\u56e0\u4e3a\u5b66\u533a\u8868\u793a\uff0c\u4ed6\u4eec\u8fdb\u884c\u4e86\u77ed\u6682\u7684\u7b2c\u4e00\u5468\uff0c\u8fd9\u6837\u6211\u4eec\u6240\u6709\u7684\u5b66\u6821\u90fd\u53ef\u4ee5\u9000\u4e00\u6b65\uff0c\u8bc4\u4f30\u5230\u76ee\u524d\u4e3a\u6b62\u60c5\u51b5\u5982\u4f55\u3002\n\u5b89\u5409\u00b7\u5f17\u5170\u514b\u65af\u8bf4\uff0c\u5979\u5728\u5b66\u6821\u4e0a\u5b66\u7684\u4e24\u4e2a\u4f84\u5b50\u90fd\u88ab\u68c0\u6d4b\u51fa\u65b0\u51a0\u80ba\u708e\u5448\u9633\u6027\u3002\u5979\u5728\u63a5\u53d7AJC\u91c7\u8bbf\u65f6\u8bf4\uff0c\u5176\u4e2d\u4e00\u4eba\u5468\u4e00\u653e\u5b66\u56de\u5bb6\u65f6\u95fb\u4e0d\u5230\u6c14\u5473\u3002\u5f17\u5170\u514b\u65af\u8bf4\uff0c\u4ed6\u7684\u6bcd\u4eb2\u5e26\u4ed6\u53bb\u68c0\u6d4b\uff0c\u7b2c\u4e8c\u5929\u7684\u7ed3\u679c\u663e\u793a\u4ed6\u5448\u9633\u6027\u3002\u5230\u90a3\u65f6\uff0c\u4ed6\u7684\u5144\u5f1f\u5df2\u7ecf\u51fa\u73b0\u75c7\u72b6\uff0c\u4e5f\u63a5\u53d7\u4e86\u68c0\u6d4b\u3002\u4ed6\u7684\u9633\u6027\u7ed3\u679c\u4e8e\u5468\u4e09\u516c\u5e03\u3002\n\u5b66\u751f\u4eec\u6b63\u5728\u5bb6\u4e2d\u9694\u79bb\uff0c\u4f46\u4e24\u4eba\u5468\u4e00\u90fd\u53bb\u4e0a\u5b66\u4e86\u3002\u5f17\u5170\u514b\u65af\u8bf4\uff0c\u5b69\u5b50\u4eec\u7684\u7236\u4eb2\u5728\u62ff\u5230\u6d4b\u8bd5\u7ed3\u679c\u540e\uff0c\u4e8e\u5468\u4e8c\u548c\u5468\u4e09\u901a\u77e5\u4e86\u5b66\u6821\u3002\n\u5f17\u5170\u514b\u65af\u8bf4\uff0c\u4ed6\u4eec\u6574\u5929\u5750\u5728\u6559\u5ba4\u91cc\uff0c\u6ca1\u6709\u6234\u9762\u5177\uff0c\u4e5f\u6ca1\u6709\u793e\u4ea4\u8ddd\u79bb\u3002\u6211\u4e0d\u77e5\u9053\u4ed6\u4eec\u63a5\u89e6\u4e86\u591a\u5c11\u5b69\u5b50\u3002\n\u5979\u8bf4\uff0c\u8fd9\u4e9b\u7537\u5b69\u6ca1\u6709\u610f\u8bc6\u5230\u75c5\u6bd2\u7684\u4e25\u91cd\u6027\uff0c\u5b66\u6821\u4e0d\u9f13\u52b1\u4ed6\u4eec\u5728\u6559\u5ba4\u6216\u8d70\u5eca\u91cc\u6234\u53e3\u7f69\u3002\u4fdd\u5b9a\u53bf\u7684\u5b66\u6821\u7cfb\u7edf\u6ca1\u6709\u5f3a\u5236\u8981\u6c42\u5b66\u751f\u548c\u6559\u804c\u5458\u5de5\u6234\u53e3\u7f69\uff0c\u5c3d\u7ba1\u5b83\u4e3a\u6559\u5e08\u63d0\u4f9b\u53e3\u7f69\u3002\n\u4e00\u540d\u5728\u4fdd\u5b9a\u53bf\u53e6\u4e00\u6240\u5b66\u6821\u5de5\u4f5c\u7684\u5c0f\u5b66\u62a4\u58eb\u544a\u8bc9\u300a\u5baa\u6cd5\u65e5\u62a5\u300b\uff0c\u5979\u4e0a\u4e2a\u6708\u8f9e\u53bb\u4e86\u5de5\u4f5c\uff0c\u56e0\u4e3a\u5927\u6d41\u884c\u653f\u7b56\u4e0d\u8db3\uff0c\u5305\u62ec\u7f3a\u4e4f\u53e3\u7f69\u5f3a\u5236\u4ee4\u3002\n\u8fd9\u6240\u9ad8\u4e2d\u5199\u7ed9\u5bb6\u957f\u7684\u4fe1\u4e2d\u8bf4\uff0c\u6211\u4eec\u7684\u770b\u5b88\u4eba\u5458\u7ee7\u7eed\u6bcf\u5929\u5f7b\u5e95\u6e05\u6d01\u548c\u6d88\u6bd2\u6821\u820d\uff0c\u7279\u522b\u662f\u53d7\u5f71\u54cd\u7684\u533a\u57df\u3002\u4f46\u6b63\u5982\u201c\u7ae0\u7a0b\u201d\u6240\u6307\u51fa\u7684\u90a3\u6837\uff0c\u5199\u7ed9\u5bb6\u957f\u7684\u4fe1\u4e2d\u6ca1\u6709\u5173\u4e8e\u662f\u5426\u6709\u5176\u4ed6\u53d7\u611f\u67d3\u7684\u5b66\u751f\u6216\u6559\u804c\u5458\u5de5\u5fc5\u987b\u9694\u79bb\u6216\u662f\u5426\u4f1a\u5173\u95ed\u6559\u5ba4\u7684\u4fe1\u606f\u3002\n\u8fd9\u5c01\u4fe1\u5efa\u8bae\u5b69\u5b50\u4eec\u6bcf\u5929\u81f3\u5c11\u68c0\u67e5\u4e24\u6b21\u4f53\u6e29\uff0c\u5e76\u68c0\u67e5\u65b0\u51a0\u80ba\u708e\u7684\u75c7\u72b6\u6e05\u5355\u3002\u5982\u679c\u60a8\u7684\u5b69\u5b50\u8868\u73b0\u51fa\u8fd9\u4e9b\u65b0\u51a0\u80ba\u708e\u75c7\u72b6\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\uff0c\u75be\u63a7\u4e2d\u5fc3\u548c\u536b\u751f\u90e8\u5efa\u8bae\u60a8\u7684\u5b69\u5b50\u5c3d\u5feb\u8fdb\u884c\u68c0\u6d4b\u3002\u6b64\u5916\uff0c\u4fe1\u4e2d\u8bf4\uff0c\u8bf7\u901a\u77e5\u5b66\u6821\u524d\u53f0\uff0c\u56e0\u4e3a\u51fa\u73b0\u75c7\u72b6\u7684\u5b66\u751f\u5fc5\u987b\u7559\u5728\u5bb6\u91cc\u8fdb\u884c\u9694\u79bb\u3002\n\u8fd9\u6240\u5b66\u6821\u663e\u7136\u8ba1\u5212\u5468\u4e00\u91cd\u65b0\u5f00\u5b66\uff0c\u4f46\u968f\u7740\u75c5\u6bd2\u7684\u4f20\u64ad\uff0c\u53ef\u80fd\u4f1a\u88ab\u8feb\u6539\u53d8\u8ba1\u5212\u3002\u4fe1\u4e2d\u8bf4\uff0c\u6211\u4eec\u7684\u6559\u804c\u5458\u5de5\u548c\u5b66\u751f\u7684\u5065\u5eb7\u548c\u798f\u7949\u4ecd\u7136\u662f\u6211\u4eec\u7684\u9996\u8981\u4efb\u52a1\uff0c\u6211\u4eec\u6b63\u5728\u7ee7\u7eed\u8c03\u6574\u548c\u6539\u8fdb\u6211\u4eec\u7684\u9762\u5bf9\u9762\u6559\u5b66\u65b9\u6848\uff0c\u4f7f\u6211\u4eec\u7684\u5b66\u6821\u6210\u4e3a\u5c3d\u53ef\u80fd\u5b89\u5168\u7684\u5b66\u4e60\u73af\u5883\u3002\n\u5728\u4f50\u6cbb\u4e9a\u5dde\u7684\u5176\u4ed6\u5730\u65b9\uff0c\u4e9a\u7279\u5170\u5927\u516c\u7acb\u5b66\u6821\u51b3\u5b9a\u5c06\u5f00\u5b66\u65f6\u95f4\u63a8\u8fdf\u52308\u670824\u65e5\uff0c\u5e76\u5f3a\u5236\u5b9e\u65bd\u9762\u5177\u5f3a\u5236\u4ee4\u3002\u4f50\u6cbb\u4e9a\u5dde\u5dde\u957f\u5e03\u83b1\u6069\u00b7\u574e\u666e(Brian Kemp)\u8bd5\u56fe\u963b\u6b62\u57ce\u9547\u5b9e\u65bd\u9762\u5177\u5f3a\u5236\u4ee4\u3002", "note_en": "There are nine confirmed COVID-19 cases at the high school that suspended a 15-year-old who had tweeted a photo of a hallway packed with maskless students.\n North Paulding High School in Dallas, Georgia sent a  letter to parents Saturday, saying, &#34;At this time, we know there were six students and three staff members who were in school for at least\u00a0some time last week who have since reported to us that they have tested positive.&#34; The letter was  published by the Atlanta Journal-Constitution.\n Most or even all of the six students and three staff members who tested positive could have had the virus before the school reopened on Monday. As Harvard Medical School  explains, &#34;The time from exposure to symptom onset (known as the incubation period) is thought to be three to 14 days, though symptoms typically appear within four or five days after exposure,&#34; and &#34;a person with COVID-19 may be contagious 48 to 72 hours before starting to experience symptoms.&#34;\n But regardless of when those nine people were infected, their presence at a school where hallways were packed with students not wearing masks means that many other students and teachers were placed at risk of infections that could show up in test results in the near future. The high school has about 2,000 students.\n Even before the reopening, some members of the high school football team had already  tested positive for COVID-19.  According to Channel 2 in Atlanta, &#34;Paulding County Schools have reported a total of 53 cases of coronavirus within the district since July 1,&#34; including 23 at the high school.\n As we  reported Friday, the school issued a 5-day suspension to student Hannah Watters after she posted a  photo to Twitter, noting the &#34;jammed&#34; hallways and &#34;10 percent mask rate.&#34; The school lifted her suspension after extensive media coverage. One other unnamed student who was suspended for a similar reason also had the suspension reversed, the Journal-Constitution said.\n Students attended class in person only on Monday through Wednesday, as the district said it conducted a short first week &#34;so that all of our schools can step back and assess how things are going so far.&#34;\n   Angie Franks said both her nephews who attend the school have tested positive for COVID-19. One came home from school Monday unable to smell, she said in an interview with the AJC. His mother took him for testing and the results the next day showed him positive, Franks said. By then, his brother was exhibiting symptoms and was also tested. His positive results were returned Wednesday.\n The students are quarantining at home, but both went to school Monday. Franks said the boys&#39; father notified the school on Tuesday and Wednesday after getting their test results.\n &#34;They sat in class all day long with no masks and not social distancing,&#34; Franks said. &#34;And I have no idea how many kids they came into contact with.&#34;\n She said the boys didn&#39;t grasp the gravity of the virus and weren&#39;t encouraged to wear masks in classrooms or hallways by the school. Paulding County&#39;s school system is not mandating masks for students and staff, though it is supplying them for teachers.\n An elementary school nurse who worked in another school in Paulding County told the Journal-Constitution that she resigned from her job last month because of insufficient pandemic policies including the lack of a mask mandate.\n  The high school&#39;s letter to parents said that &#34;Our custodial staff continues to thoroughly clean and disinfect the school building daily, and especially affected areas.&#34; But as the Journal-Constitution noted, &#34;The letter to parents does not include information on whether any other students or staff who were exposed have to quarantine or whether any classrooms will be closed.&#34;\n The letter recommends checking children&#39;s temperature at least twice a day and checking for a list of COVID-19 symptoms. &#34;If your child exhibits any of these COVID-19 symptoms, the CDC and DPH recommend your child be tested as soon as possible. In addition, please notify the school front office as it is imperative that students who are showing symptoms stay home and quarantine,&#34; the letter said.\n The school apparently plans to open again Monday, but could be forced to change plans as the virus spreads. &#34;The health and wellbeing of our staff and students remains our highest priority, and we are continuing to adjust and improve our protocols for in-person instruction to make our school the safest possible learning environment,&#34; the letter said.\n Elsewhere in Georgia, Atlanta Public Schools decided to  postpone opening until August 24 and to impose a mask mandate. Georgia Governor Brian Kemp  has tried to stop cities and towns from imposing mask mandates.", "posttime": "2020-08-10 04:22:07", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u53d1\u5e03,\u63a8\u7279,\u80ba\u708e,hallway,\u5b66\u6821", "title": "\u5728\u63a8\u7279\u4e0a\u53d1\u5e03\u8d70\u5eca\u7167\u7247\u7684\u505c\u5b66\u9752\u5c11\u5e74HS\u67099\u4f8b\u65b0\u51a0\u80ba\u708e\u75c5\u4f8b", "title_en": "HS that suspended teen who tweeted photo of hallway has 9 COVID-19 cases", "transed": 1, "url": "https://arstechnica.com/tech-policy/2020/08/hs-that-suspended-teen-who-tweeted-photo-of-hallway-has-9-covid-19-cases/", "via": "", "real_tags": ["\u53d1\u5e03", "\u63a8\u7279", "\u80ba\u708e", "hallway", "\u5b66\u6821"]}, {"category": "", "categoryclass": "", "imagename": "f4da05cc780ef04a069dae51805a10ad.png", "infoid": 1017246, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u8be5\u516c\u53f8\u79f0\uff0c\u7ea655%\u81f365%\u7684\u7ec8\u672b\u671f\u80be\u75c5\u60a3\u8005\u900f\u6790\u624b\u672f\u5931\u8d25\u3002\u7167\u987e\u8fd9\u4e9b\u75c5\u4eba\u6bcf\u5e74\u8981\u82b1\u8d39\u533b\u7597\u4fdd\u9669\u548c\u533b\u7597\u8865\u52a9\u670d\u52a1\u7cfb\u7edf\u5927\u7ea620\u4ebf\u7f8e\u5143--\u5e03\u96f7\u548c\u5362\u514b\u65af\u76f8\u4fe1\u4ed6\u4eec\u4f1a\u60f3\u51fa\u89e3\u51b3\u65b9\u6848\u3002\n\u56e0\u6b64\uff0c\u5728\u8303\u5fb7\u6bd4\u5c14\u7279\u5927\u5b66(Vanderbilt University)\u591a\u5e74\u5f00\u53d1VenoStent\u4e1a\u52a1\u6838\u5fc3\u6280\u672f\u540e\uff0c\u8fd9\u4e24\u4e2a\u4eba\u4ece\u7eb3\u4ec0\u7ef4\u5c14\u642c\u5230\u4e86\u5357\u5f97\u514b\u8428\u65af\u5dde\uff0c\u4ee5\u4f7f\u4ed6\u4eec\u7684\u4e1a\u52a1\u8fd0\u8f6c\u8d77\u6765\u3002\n\u535a\u57c3\u57282012\u5e74\u7684\u8bba\u6587\u4e2d\u9996\u6b21\u5f00\u59cb\u7814\u7a76VenoStent\u63d0\u4f9b\u7684\u6838\u5fc3\u6280\u672f\u3002\u5362\u514b\u65af\u662f\u5546\u5b66\u9662\u7684\u4e00\u540d\u7814\u7a76\u751f\uff0c\u4ed6\u88ab\u4ecb\u7ecd\u7ed9\u8fd9\u4f4d\u6750\u6599\u79d1\u5b66\u5bb6\uff0c\u5e76\u786e\u4fe1VenoStent\u5373\u5c06\u5bf9\u533b\u5b66\u754c\u4ea7\u751f\u5de8\u5927\u5f71\u54cd\u3002\u4e94\u5e74\u540e\uff0c\u4e24\u4eba\u5728\u8fbe\u62c9\u65af\u4f1a\u89c1\u4e86\u4f11\u65af\u987f\u533b\u5b66\u516c\u53f8\u7684\u8840\u7ba1\u5916\u79d1\u4e3b\u4efb\uff0c\u5e76\u51fa\u53d1\u53bb\u53c2\u52a0\u6bd4\u8d5b\u3002\n2018\u5e74\u7684\u4e00\u8f6e\u5c0f\u89c4\u6a21\u79cd\u5b50\u8f6e\u7ef4\u6301\u4e86\u8be5\u516c\u53f8\u7684\u8fd0\u8425\uff0c\u63a5\u8fd1\u5e74\u5e95\u7684\u4e00\u6b21\u6210\u529f\u7684\u52a8\u7269\u8bd5\u9a8c\u7ed9\u4e86\u8be5\u516c\u53f8\u63a8\u8fdb\u6240\u9700\u7684\u52a8\u529b\u3002\u73b0\u5728\uff0c\u968f\u7740\u5b83\u4ece\u6700\u65b0\u7684Y Combinator\u961f\u5217\u4e2d\u6bd5\u4e1a\uff0c\u8be5\u516c\u53f8\u7ec8\u4e8e\u51c6\u5907\u597d\u8fdb\u5165\u9ec4\u91d1\u65f6\u95f4\u4e86\u3002\n\u5728\u6b64\u671f\u95f4\uff0c\u4e00\u7cfb\u5217\u7684\u8d60\u6b3e\u548c\u80beX\u5956\u7684\u9881\u53d1\u7ef4\u6301\u4e86\u516c\u53f8\u7684\u4e1a\u52a1\u3002\n\u6210\u529f\u6765\u4e4b\u4e0d\u6613\uff0c\u56e0\u4e3aBour\u00e9\u5728J-Labs\uff0cJohnson and Johnson\u4f4d\u4e8e\u4f11\u65af\u987f\u7684\u5148\u8fdb\u533b\u7597\u6280\u672f\u548c\u521b\u65b0\u52a0\u901f\u5668\u4e2d\u5ea6\u8fc7\u4e86\u8fd1\u4e09\u4e2a\u4e0d\u7720\u4e4b\u591c\uff0c\u5408\u6210\u805a\u5408\u7269\u5e76\u6253\u5370\u8be5\u516c\u53f8\u5236\u9020\u7684\u8896\u72b6\u652f\u67b6\uff0c\u4ee5\u7ee7\u7eed\u53d6\u4ee3\u7ec8\u672b\u671f\u80be\u75c5\u60a3\u8005\u7684\u9ad8\u98ce\u9669\u548c\u5bb9\u6613\u5931\u8d25\u7684\u624b\u672f\u3002\nBour\u00e9\u7684\u5173\u952e\u53d1\u73b0\u662f\u56f4\u7ed5\u7740\u4e00\u79cd\u65b0\u578b\u805a\u5408\u7269\uff0c\u8fd9\u79cd\u805a\u5408\u7269\u53ef\u4ee5\u5728\u7ec6\u80de\u4ece\u900f\u6790\u624b\u672f\u4e2d\u75ca\u6108\u65f6\u652f\u6301\u7ec6\u80de\u751f\u957f\u3002\n2012\u5e74\uff0c\u5e03\u96f7\u5076\u7136\u53d1\u73b0\u4e86\u8fd9\u79cd\u805a\u5408\u7269\uff0c\u5b83\u5c06\u6210\u4e3a\u8fd9\u9879\u5de5\u4f5c\u7684\u57fa\u7840\u3002\u7136\u540e\uff0c\u57282014\u5e74\uff0c\u4ed6\u505a\u4e86\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u6838\u5fc3\u9879\u76ee\uff0c\u5e76\u5f00\u59cb\u8003\u8651\u8840\u7ba1\u5305\u88f9\u3002\u901a\u8fc7\u4e0e\u8840\u7ba1\u5916\u79d1\u533b\u751f\u7684\u4e00\u7cfb\u5217\u8ba8\u8bba\uff0c\u4ed6\u610f\u8bc6\u5230\u8fd9\u4e2a\u95ee\u9898\u5bf9\u7ec8\u672b\u671f\u80be\u75c5\u60a3\u8005\u6765\u8bf4\u5c24\u5176\u4e25\u91cd\u3002\n\u8be5\u516c\u53f8\u5df2\u7ecf\u901a\u8fc7\u8d60\u6b3e\u8d44\u91d1\u548c\u5c0f\u989d\u80a1\u6743\u6ce8\u5165\u7b79\u96c6\u4e86240\u4e07\u7f8e\u5143\u3002\u4ee5\u53ca\u536b\u751f\u4e0e\u516c\u4f17\u670d\u52a1\u90e8\u548c\u7f8e\u56fd\u80be\u810f\u5b66\u4f1a\u9881\u53d1\u7684KidneyX\u5956\u3002VenoStent\u662f\u516d\u4f4d\u83b7\u5956\u8005\u4e4b\u4e00\u3002\n\u201c\u8fd9\u662f\u6267\u884c\u529e\u516c\u5ba4\u6539\u8fdb\u900f\u6790\u7684\u6574\u4e2a\u6301\u7eed\u52aa\u529b\u7684\u4e00\u90e8\u5206\uff0c\u201dBour\u00e9\u8bf4\u3002\u201c(\u4ed6\u4eec)\u662f\u4e16\u754c\u4e0a\u6cbb\u7597\u8d39\u7528\u6700\u9ad8\u7684\u75c5\u4eba\u4e4b\u4e00\u3002\u2026\u3002\u57fa\u672c\u4e0a\uff0c\u653f\u5e9c\u5728\u5bfb\u627e\u6539\u5584\u60a3\u8005\u751f\u6d3b\u7684\u6280\u672f\u65b9\u9762\u53d7\u5230\u9ad8\u5ea6\u6fc0\u52b1\u3002\u201c\u3002\n\u73b0\u5728\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u8fdb\u5165\u4e0b\u4e00\u8f6e\u52a8\u7269\u8bd5\u9a8c\uff0c\u5e76\u5c06\u5bfb\u6c42\u4e8e2021\u5e74\u5728\u7f8e\u56fd\u4ee5\u5916\u8fdb\u884c\u7b2c\u4e00\u6b21\u4eba\u4f53\u8bd5\u9a8c\u3002\n\u867d\u7136\u8be5\u516c\u53f8\u9996\u5148\u4e13\u6ce8\u4e8e\u80be\u8870\u7aed\uff0c\u4f46Bour\u00e9\u5f00\u53d1\u7684\u6750\u6599\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u60c5\u51b5\u3002\u201c\u8fd9\u53ef\u80fd\u662f\u4e00\u79cd\u7528\u4e8e\u5927\u80a0\u7684\u6750\u6599\uff0c\u201dBour\u00e9\u8bf4\u3002\u201c\u5c31\u5176\u6240\u6709\u5c5e\u6027\u800c\u8a00\uff0c\u5b83\u5177\u6709\u53ef\u8c03\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u7279\u5b9a\u7684\u5e94\u7528\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\u3002\u201c", "note_en": "Failed dialysis surgeries occur in roughly 55% to 65% of patients with end-stage renal disease, according to the company. Caring for these patients can cost the Medicare and Medicaid Services system roughly $2 billion per year \u2014 and Bour\u00e9 and Lucks believed that they\u2019d come up with a solution.\n So after years developing the technology at the core of VenoStent\u2019s business at Vanderbilt University, the two men relocated from Nashville to South Texas to make their business work.\n  Bour\u00e9 had first started working on the technology at the heart of VenoStent\u2019s offering as part of his dissertation in 2012. Lucks, a graduate student at the business school was introduced to the material scientist and became convinced that VenoStent was on the verge of having a huge impact for the medical community. Five years later, the two were in Dallas where they met the chief of vascular surgery at  Houston   Medicine and were off to the races.\n A small seed round in 2018 kept the company going and a successful animal trial near the end of the year gave it the momentum it needed to push forward. Now, as it graduates from the latest  Y Combinator   cohort, the company is finally ready for prime time.\n In the interim, a series of grants and its award of a Kidney XPrize kept the company in business.\n The success was hard won, as Bour\u00e9 spent nearly three sleepless nights in the  J-Labs, Johnson and Johnson\u2019s\u00a0 medical technology and innovation accelerator in Houston, synthesizing polymers and printing the sleeve stents that the company makes to keep replace the risky and failure-prone surgeries for end stage kidney disease patients.\n The key discovery that Bour\u00e9 made was around a new type of polymer that can be used to support cell growth as it heals from the dialysis surgery.\n In 2012, Bour\u00e9 stumbled upon the polymer that would be the foundation for the work. Then, in 2014, he did the  National Science Foundation Core program and started thinking about the wrap for blood vessels. Through a series of discussions with vascular surgeons he realized that the problem was especially acute for end stage renal disease patients.\n Already the company has raised $2.4 million in grant funding and small equity infusions. and the KidneyX Prize from the Department of Health and Human Services and the American Society of Nephrology. VenoStent was one of six winners.\n \u201cIt\u2019s part of this whole ongoing effort by the executive office to improve dialysis,\u201d said Bour\u00e9. \u201c[They are] some of the most expensive patients to treat in the world\u2026 Basically the government is highly incentivized to find technologies that improve patient\u2019s lives.\u201d\n Now the company is heading into its next round of animal testing and will seek to conduct its first human trials outside of the United States in 2021.\n And while the company is focused on renal failure first, the materials that Bour\u00e9 has developed have applications for other conditions as well. \u201cThis can be a material for the large intestine,\u201d says Bour\u00e9. \u201cIt has tunability in terms of all its properties. And we can modify it for a particular application.\u201d", "posttime": "2020-08-10 04:21:31", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u6539\u5584,technology", "title": "\n\u9759\u8109\u652f\u67b6\u6709\u4e00\u79cd\u65b0\u6280\u672f\u53ef\u4ee5\u6539\u5584\u900f\u6790\u60a3\u8005\u7684\u9884\u540e", "title_en": "\n\t\t\t\tVenoStent has a new technology to improve outcomes for dialysis patients\t\t\t", "transed": 1, "url": "https://techcrunch.com/2020/08/09/venostent-has-a-new-technology-to-improve-outcomes-for-dialysis-patients/", "via": "", "real_tags": ["\u6539\u5584"]}, {"category": "", "categoryclass": "", "imagename": "bf8748a6fc6af701d44760acf5667830.jpeg", "infoid": 1017245, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u6700\u5927\u7684\u8d2d\u7269\u4e2d\u5fc3\u6240\u6709\u8005\u897f\u8499\u5730\u4ea7\u96c6\u56e2(Simon Property Group Inc.)\u4e00\u76f4\u5728\u4e0e\u4e9a\u9a6c\u900a(Amazon.com Inc.)\u8fdb\u884c\u8c08\u5224\u3002\u636e\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u5c06\u628a\u5b83\u7684\u4e00\u4e9b\u4e3b\u8981\u767e\u8d27\u5546\u5e97\u7a7a\u95f4\u53d8\u6210\u4e9a\u9a6c\u900a\u7684\u5c65\u7ea6\u4e2d\u5fc3\u3002\n\u5bf9\u4e8e\u4e9a\u9a6c\u900a\u6765\u8bf4\uff0c\u5c45\u6c11\u533a\u9644\u8fd1\u66f4\u591a\u7684\u914d\u9001\u4e2d\u5fc3\u5c06\u52a0\u5feb\u5173\u952e\u7684\u6700\u540e\u4e00\u82f1\u91cc\u7684\u9001\u8d27\u901f\u5ea6\u3002\u5bf9\u4e8e\u897f\u8499\u6765\u8bf4\uff0c\u5c06\u66fe\u7ecf\u7684\u9ec4\u91d1\u8d2d\u7269\u4e2d\u5fc3\u7a7a\u95f4\u79fb\u4ea4\u7ed9\u5c65\u884c\u4e2d\u5fc3\u8868\u660e\uff0c\u5b83\u613f\u610f\u653e\u5f03\u4e00\u79cd\u5e26\u6765\u66f4\u591a\u8d2d\u7269\u4e2d\u5fc3\u6d41\u91cf\u7684\u5fc5\u8981\u65b9\u5f0f\uff0c\u4ee5\u786e\u4fdd\u7a33\u5b9a\u7684\u79df\u6237\u3002\n\u8fd9\u4e9b\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u897f\u8499\u4e0e\u8fd9\u5bb6\u5728\u7ebf\u96f6\u552e\u5546\u7684\u8ba8\u8bba\u5df2\u7ecf\u8fdb\u884c\u4e86\u51e0\u4e2a\u6708\uff0c\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u4e4b\u524d\u5c31\u5f00\u59cb\u4e86\u3002\u4e24\u5bb6\u516c\u53f8\u4e00\u76f4\u5728\u63a2\u7d22\u5c06\u4ee5\u524d\u7531J.C.Penney Co.Inc.\u5360\u636e\u7684\u95e8\u5e97\u8fdb\u884c\u6539\u9020\u3002\u8fd9\u4e9b\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u897f\u8499\u548c\u4e9a\u9a6c\u900a\u8bd5\u56fe\u4ece\u96f6\u552e\u5546\u624b\u4e2d\u4e70\u65ad\u5360\u7528\u7684\u7a7a\u95f4\u3002\n\u4f1a\u8c08\u53cd\u6620\u4e86\u4e24\u4e2a\u8d8b\u52bf\u7684\u4ea4\u96c6\uff0c\u8fd9\u4e24\u4e2a\u8d8b\u52bf\u65e9\u5728\u5927\u6d41\u884c\u4e4b\u524d\u5c31\u51fa\u73b0\u4e86\uff0c\u4f46\u5374\u88ab\u5927\u6d41\u884c\u52a0\u901f\u4e86\uff1a\u8d2d\u7269\u4e2d\u5fc3\u7684\u8870\u843d\u548c\u7535\u5b50\u5546\u52a1\u7684\u7e41\u8363\u3002\n\u77e5\u60c5\u4eba\u58eb\u8bf4\uff0c\u76ee\u524d\u5c1a\u4e0d\u6e05\u695a\u4e9a\u9a6c\u900a\u6b63\u5728\u8003\u8651\u5f00\u8bbe\u591a\u5c11\u5bb6\u95e8\u5e97\uff0c\u53cc\u65b9\u6709\u53ef\u80fd\u65e0\u6cd5\u8fbe\u6210\u534f\u8bae\u3002\u6839\u636e\u897f\u8499\u8d2d\u7269\u4e2d\u5fc35\u6708\u4efd\u63d0\u4ea4\u7684\u6700\u65b0\u516c\u5f00\u6587\u4ef6\uff0c\u8be5\u516c\u53f8\u62e5\u670963\u5bb6Penney\u95e8\u5e97\u548c11\u5bb6\u897f\u5c14\u65af\u95e8\u5e97\u3002\n\u636e\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u6309\u8d2d\u7269\u4e2d\u5fc3\u6570\u91cf\u8ba1\u7b97\uff0c\u897f\u8499\u662f\u7f8e\u56fd\u6700\u5927\u7684\u8d2d\u7269\u4e2d\u5fc3\u623f\u4e1c\uff0c\u8be5\u516c\u53f8\u4e5f\u5728\u8003\u8651\u4e3a\u5176\u817e\u51fa\u7684\u5927\u76d2\u5b50\u7a7a\u95f4\u63d0\u4f9b\u5176\u4ed6\u9009\u62e9\u3002\n\u591a\u5bb6\u7f8e\u56fd\u5546\u573a\u5df2\u7ecf\u4e0e\u4e9a\u9a6c\u900a\u6709\u4e1a\u52a1\u5f80\u6765\uff0c\u6bd4\u5982\u5c06\u505c\u8f66\u573a\u79df\u7ed9\u4e9a\u9a6c\u900a\u5e9e\u5927\u7684\u9762\u5305\u8f66\u8f66\u961f\u3002\u4f46\u5bf9\u4e8e\u897f\u8499\u6765\u8bf4\uff0c\u79df\u7528\u4e00\u4e2a\u4f4d\u7f6e\u826f\u597d\u7684\u5927\u578b\u5ba4\u5185\u4f4d\u7f6e\u5c06\u662f\u5927\u578b\u8d2d\u7269\u4e2d\u5fc3\u8fd0\u8425\u5546\u5411\u4e9a\u9a6c\u900a\u63d0\u4f9b\u4f18\u8d28\u96f6\u552e\u7a7a\u95f4\u7684\u7f55\u89c1\u60c5\u51b5\u3002\n\u623f\u5730\u4ea7\u6295\u8d44\u7ecf\u7eaa\u516c\u53f8B+E\u7684\u9996\u5e2d\u6267\u884c\u5b98\u5361\u7c73\u5c14\u00b7\u4f26\u8096(Camille Renshaw)\u8bf4\uff0c\u201c\u4e3a\u4e86\u53d6\u4ee3\u767e\u8d27\u5546\u5e97\uff0c\u5546\u573a\u6240\u6709\u8005\u8003\u8651\u4e86\u5b66\u6821\u3001\u533b\u7597\u529e\u516c\u5ba4\u548c\u8001\u5e74\u4eba\u751f\u6d3b\u3002\u201d\u201c\u5728\u76ee\u524d\u7684\u5927\u6d41\u884c\u60c5\u51b5\u4e0b\uff0c\u5de5\u4e1a\u662f\u73b0\u5728\u552f\u4e00\u5269\u4e0b\u7684\u4e1c\u897f\u3002\u201d\n\u897f\u8499\u548c\u4e9a\u9a6c\u900a\u4e4b\u95f4\u7684\u8054\u7cfb\u5c06\u663e\u793a\u96f6\u552e\u548c\u7269\u6d41-\u7279\u522b\u662f\u5173\u952e\u6700\u540e\u4e00\u82f1\u91cc\u7684\u9001\u8d27-\u6b63\u5728\u66f4\u5feb\u5730\u878d\u5408\u3002\n\u8bb8\u591a\u96f6\u552e\u5546\u5c06\u4ed6\u4eec\u7684\u5546\u5e97\u7528\u4f5c\u5c0f\u578b\u5c65\u884c\u4e2d\u5fc3\uff0c\u4ee5\u52a0\u5feb\u5728\u7ebf\u8d2d\u7269\u7684\u4ea4\u4ed8\u901f\u5ea6\uff0c\u7279\u522b\u662f\u5728\u5927\u6d41\u884c\u51cf\u5c11\u4e86\u9762\u5bf9\u9762\u8d2d\u7269\u548c\u8def\u8fb9\u63d0\u8d27\u6210\u4e3a\u4e00\u79cd\u65b0\u7684\u9009\u62e9\u4e4b\u540e\u3002\u5206\u6790\u4eba\u58eb\u8bf4\uff0c\u4e9a\u9a6c\u900a\u53ef\u80fd\u4f1a\u5229\u7528\u767e\u8d27\u5546\u5e97\u7684\u7a7a\u95f4\u6765\u5efa\u9020\u5176\u5e9e\u5927\u914d\u9001\u4e2d\u5fc3\u7684\u8f83\u5c0f\u7248\u672c\uff0c\u4f9d\u9760\u9762\u5305\u8f66\u5728\u90ca\u533a\u8857\u9053\u4e0a\u5bfc\u822a\u3002\nSimon Property\u8868\u793a\uff0c\u5b83\u5df2\u7ecf\u4e0e\u4e00\u4e9b\u96f6\u552e\u79df\u6237\u5efa\u7acb\u4e86\u7269\u6d41\u5408\u8d44\u4f01\u4e1a\uff0c\u4ee5\u5e2e\u52a9\u6ee1\u8db3\u4ed6\u4eec\u7684\u9700\u6c42\u3002\u8d2d\u7269\u4e2d\u5fc3\u6240\u6709\u8005\u534e\u76db\u987f\u4f18\u8d28\u96c6\u56e2(Washington Prime Group)\u4e5f\u6709\u4e00\u5bb6\u65b0\u4f01\u4e1a\uff0c\u5c06\u7a7a\u95f4\u51fa\u79df\u7ed9\u8fea\u514b\u4f53\u80b2\u7528\u54c1(Dick\u2018s Sporting Goods)\u7b49\u96f6\u552e\u5546\u6e05\u7406\u5e93\u5b58\u3002\n\u5546\u573a\u7684\u6218\u7565\u4f4d\u7f6e\u5f80\u5f80\u4f7f\u5b83\u4eec\u4f5c\u4e3a\u914d\u9001\u4e2d\u5fc3\u5177\u6709\u5438\u5f15\u529b\u3002\u8bb8\u591a\u90fd\u5728\u4e3b\u5e72\u9053\u548c\u4f4f\u5b85\u533a\u9644\u8fd1\u3002\u4e9a\u9a6c\u900a\u5df2\u7ecf\u6536\u8d2d\u4e86\u4e00\u4e9b\u5931\u8d25\u7684\u8d2d\u7269\u4e2d\u5fc3\u7684\u7f51\u7ad9\uff0c\u5e76\u5c06\u5b83\u4eec\u6539\u9020\u6210\u4e86\u5c65\u7ea6\u4e2d\u5fc3\u3002\u8054\u90a6\u5feb\u9012\u516c\u53f8(FedEx Corp.)\u548cDHL International GmbH\u4e5f\u505a\u4e86\u540c\u6837\u7684\u4e8b\u60c5\u3002\n\u636e\u4e00\u4f4d\u77e5\u60c5\u4eba\u58eb\u900f\u9732\uff0c\u4e9a\u9a6c\u900a\u8fd8\u4e00\u76f4\u5728\u4e0e\u591a\u5bb6\u8d2d\u7269\u4e2d\u5fc3\u4e1a\u4e3b\u6d3d\u8c08\u5c06\u5176\u5373\u5c06\u5230\u6765\u7684\u98df\u54c1\u6742\u8d27\u8fde\u9501\u5e97\u8bbe\u5728J.C.Penney\u95e8\u5e97\u7684\u4e8b\u5b9c\uff0c\u4e0d\u8fc7\u65e0\u6cd5\u786e\u5b9a\u5176\u4e2d\u662f\u5426\u5305\u62ec\u897f\u8499\u8d2d\u7269\u4e2d\u5fc3(Simon Malls)\u3002\n\u897f\u8499\u4e0e\u4e9a\u9a6c\u900a\u7684\u8c08\u5224\u4e5f\u8bf4\u660e\u4e86\u5927\u578b\u8d2d\u7269\u4e2d\u5fc3\u8fd0\u8425\u5546\u586b\u8865\u5927\u5356\u573a\u7a7a\u7f3a\u7684\u91cd\u8981\u6027\uff0c\u4ee5\u53ca\u4ed6\u4eec\u53ef\u80fd\u613f\u610f\u505a\u51fa\u7684\u59a5\u534f\u3002\u897f\u5c14\u65af\u548cJ.C.Penney\u5df2\u7ecf\u7533\u8bf7\u7834\u4ea7\u4fdd\u62a4\uff0c\u5404\u81ea\u7ee7\u7eed\u5173\u95ed\u6570\u5341\u5bb6\u95e8\u5e97\u3002\u5176\u4ed6\u767e\u8d27\u5546\u5e97\uff0c\u5982Lord&amp\uff1bTaylor\uff0c\u4e5f\u5728\u672c\u6708\u521d\u7533\u8bf7\u7834\u4ea7\uff0c\u800c\u8bfa\u5fb7\u65af\u7279\u9f99\u516c\u53f8(Nordstrom Inc.)\u3002\u8fd1\u51e0\u4e2a\u6708\u6765\u5173\u95ed\u4e8616\u5bb6\u95e8\u5e97\u3002\n\u8fd9\u4e9b\u5927\u76d2\u5b50\u7684\u9762\u79ef\u901a\u5e38\u8d85\u8fc710\u4e07\u5e73\u65b9\u82f1\u5c3a\uff0c\u800c\u4e14\u5f80\u5f80\u8de8\u8d8a\u4e0d\u6b62\u4e00\u5c42\u3002\u89c4\u6a21\u8f83\u5c0f\u7684\u8d2d\u7269\u4e2d\u5fc3\u79df\u6237\u4e00\u76f4\u6307\u671b\u767e\u8d27\u5546\u5e97\u7684\u5ba2\u6d41\u91cf\u6ea2\u51fa\u5230\u90bb\u8fd1\u7684\u96f6\u552e\u5546\uff0c\u8bb8\u591a\u79df\u6237\u90fd\u6709\u6761\u6b3e\uff0c\u5141\u8bb8\u4ed6\u4eec\u5728\u767e\u8d27\u5546\u5e97\u7a7a\u7f6e\u7684\u60c5\u51b5\u4e0b\u964d\u4f4e\u79df\u91d1\u6216\u89e3\u9664\u79df\u7ea6\u3002\n\u62e5\u6709\u4e00\u4e2a\u4e9a\u9a6c\u900a\u5c65\u7ea6\u4e2d\u5fc3\u4ecd\u7136\u53ef\u80fd\u89e6\u53d1\u4e00\u4e9b\u8fd9\u6837\u7684\u5171\u540c\u79df\u8d41\u6761\u6b3e\uff0c\u4f46\u4e00\u4e9b\u623f\u4e1c\u8868\u793a\uff0c\u5373\u4f7f\u662f\u8fd9\u79cd\u60c5\u51b5\u4e5f\u6bd4\u8ba9\u7a7a\u7f6e\u7684\u7a7a\u95f4\u6253\u54c8\u6b20\u66f4\u53ef\u53d6\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u897f\u8499\u7684\u5176\u4ed6\u79df\u6237\u53ef\u80fd\u4e0d\u4f1a\u5e86\u795d\u4e0e\u4e9a\u9a6c\u900a\u7684\u4ea4\u6613\u3002\u8bb8\u591a\u4eba\u6307\u8d23\u8fd9\u5bb6\u5728\u7ebf\u96f6\u552e\u5546\u5de8\u5934\u4e25\u91cd\u6270\u4e71\u4e86\u4ed6\u4eec\u7684\u4e1a\u52a1\u3002\u4e9a\u9a6c\u900a\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u90bb\u5c45\u7684\u5b58\u5728\u5f88\u53ef\u80fd\u4e0d\u4f1a\u5b89\u629a\u4ed6\u4eec\uff0c\u7279\u522b\u662f\u5982\u679c\u4e9a\u9a6c\u900a\u5728\u5730\u7406\u4f4d\u7f6e\u4f18\u8d8a\u7684\u897f\u8499\u8d2d\u7269\u4e2d\u5fc3\u7684\u65b0\u5206\u9500\u80fd\u529b\u6709\u52a9\u4e8e\u52a0\u5feb\u9001\u8d27\u65f6\u95f4\uff0c\u4ece\u800c\u4f7f\u5176\u66f4\u5177\u7ade\u4e89\u529b\u7684\u8bdd\u3002\n\u6bcf\u5468\u516d\u5929\u83b7\u53d6\u51a0\u72b6\u75c5\u6bd2\u7b80\u62a5\uff0c\u4e00\u65e6\u5371\u673a\u7f13\u89e3\uff0c\u6bcf\u5468\u83b7\u5f97\u4e00\u4efd\u5065\u5eb7\u65f6\u4e8b\u901a\u8baf\uff1a\u5728\u8fd9\u91cc\u6ce8\u518c\u3002\n\u867d\u7136\u4e00\u4e9b\u5458\u5de5\u53ef\u4ee5\u5728\u8d2d\u7269\u4e2d\u5fc3\u5c31\u9910\u548c\u8d2d\u7269\uff0c\u4f46\u8d2d\u7269\u4e2d\u5fc3\u4e0d\u4f1a\u5438\u5f15\u592a\u591a\u989d\u5916\u7684\u4eba\u6d41\u91cf\u5230\u8d2d\u7269\u4e2d\u5fc3\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u623f\u4e1c\u66f4\u613f\u610f\u7528\u5176\u4ed6\u96f6\u552e\u5546\u3001\u5065\u8eab\u623f\u3001\u5267\u9662\u6216\u5a31\u4e50\u8fd0\u8425\u5546\u53d6\u4ee3\u767e\u8d27\u5546\u5e97\u3002\u7136\u800c\uff0c\u8fd9\u4e9b\u79df\u6237\u4e2d\u7684\u8bb8\u591a\u4eba\u5728\u5927\u6d41\u884c\u671f\u95f4\u6323\u624e\u7740\u751f\u5b58\uff0c\u5e76\u6ca1\u6709\u5904\u4e8e\u6269\u5f20\u6a21\u5f0f\u3002\n\u897f\u8499\u53ef\u80fd\u4f1a\u4ee5\u76f8\u5f53\u5927\u7684\u6298\u6263\u79df\u7528\u8fd9\u4e2a\u7a7a\u95f4\uff0c\u800c\u4e0d\u662f\u5411\u53e6\u4e00\u5bb6\u96f6\u552e\u5546\u6536\u53d6\u8d39\u7528\u3002\u4ed3\u5e93\u79df\u91d1\u901a\u5e38\u4e0d\u5230\u6bcf\u5e73\u65b9\u82f1\u5c3a10\u7f8e\u5143\uff0c\u800c\u9910\u5385\u79df\u91d1\u53ef\u80fd\u662f\u8fd9\u4e2a\u6570\u5b57\u7684\u6570\u500d\u3002\u6839\u636e\u79df\u7ea6\u7b7e\u7f72\u7684\u65f6\u95f4\u548c\u5730\u70b9\u7684\u4e0d\u540c\uff0c\u767e\u8d27\u5546\u5e97\u7684\u79df\u91d1\u53ef\u80fd\u4f4e\u81f3\u6bcf\u5e73\u65b9\u82f1\u5c3a4\u7f8e\u5143\uff0c\u4e5f\u53ef\u80fd\u9ad8\u8fbe\u6bcf\u5e73\u65b9\u82f1\u5c3a19\u7f8e\u5143\u3002\n\u4f46\u4e9a\u9a6c\u900a\u7684\u589e\u957f\u548c\u5065\u5eb7\u7684\u8d44\u4ea7\u8d1f\u503a\u8868\u5c06\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u53ef\u9760\u7684\u79df\u6237\uff0c\u800c\u6b64\u65f6\u5927\u591a\u6570\u96f6\u552e\u4e1a\u90fd\u53d7\u5230\u4e86\u75ab\u60c5\u7684\u963b\u6320\u3002\u897f\u8499\u5728\u7f8e\u56fd\u62e5\u6709204\u5957\u623f\u4ea7\uff0c\u8fd1\u5e74\u6765\u4e0d\u5f97\u4e0d\u5e94\u5bf9\u96f6\u552e\u79df\u6237\u5173\u95ed\u7684\u52a0\u5267\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u65b0\u51a0\u80ba\u708e\u671f\u95f4\u52a0\u901f\u3002\nSimon\u548cBrookfield Property Partners LP\u6b63\u5728\u8054\u5408\u7ade\u8d2dJ.C.Penney\uff0c\u540e\u8005\u4e8e5\u6708\u4efd\u7533\u8bf7\u7834\u4ea7\u3002\u901a\u8fc7\u63a5\u7ba1\u767e\u8d27\u5546\u5e97\u8fde\u9501\u5e97\uff0c\u5b83\u8d4b\u4e88\u4ed6\u4eec\u5bf9\u5546\u5e97\u7a7a\u95f4\u7684\u63a7\u5236\u6743\u548c\u67d0\u4e9b\u6743\u5229\uff0c\u6bd4\u5982\u6539\u53d8\u505c\u8f66\u7ed3\u6784\u3001\u51fa\u53e3\u4ee5\u53ca\u8fdb\u5165\u5171\u4eab\u7a7a\u95f4\u548c\u9053\u8def\u7684\u6743\u5229\u3002\n\u4fee\u6b63\u4e0e\u653e\u5927\u897f\u8499\u548c\u5e03\u9c81\u514b\u83f2\u5c14\u5fb7\u5730\u4ea7\u5408\u4f19\u516c\u53f8\u6b63\u5728\u8054\u5408\u7ade\u8d2dJ.C.Penney\u3002\u672c\u6587\u7684\u65e9\u671f\u7248\u672c\u9519\u8bef\u5730\u5c06\u7b2c\u4e8c\u516c\u53f8\u79f0\u4e3aBrookfield Property Group\u3002(8\u67089\u65e5)", "note_en": "Simon Property Group  Inc., the biggest mall owner in the U.S., has been in talks with  Amazon.com  Inc. to turn some of its anchor department-store spaces into  Amazon fulfillment centers, according to people familiar with the matter.\n  For Amazon, more fulfillment centers near residential areas would speed up the crucial last mile of delivery. For Simon, turning over what was once prime mall space to fulfillment centers shows it would be willing to relinquish an essential way to bring in more mall traffic to secure a steady tenant.\n  Simon\u2019s discussions with the online retailer have been under way for months and began before  the coronavirus pandemic, these people said. The two companies have explored converting stores formerly occupied by  J.C. Penney  Co. Inc. and  Sears Holdings  Corp. into Amazon distribution centers; in some cases, Simon and Amazon explored buying out occupied space from the retailers, these people said.\n  The talks reflect the intersection of two trends that predate the pandemic but have been accelerated by it: the decline of malls and the  boom in e-commerce.\n    It wasn\u2019t clear how many stores are under consideration for Amazon, and it is possible that the two sides could fail to reach an agreement, people briefed on the matter said. Simon malls have 63 Penney and 11 Sears stores, according to its most recent public filing in May.\n  Simon, which is the largest U.S. mall landlord by number of malls, is also considering other options for its vacated big-box spaces, say people familiar with the matter.\n    A number of U.S. malls are already doing business with Amazon, such as renting parking lots to Amazon\u2019s huge van fleets. But for Simon to lease a large, well-located indoor location would be the rare instance of a major mall operator offering prime retail space to Amazon.\n  \u201cTo replace department stores, mall owners considered schools, medical offices and senior living,\u201d said Camille Renshaw, chief executive officer of B+E, a real-estate investment brokerage firm. \u201cWith the current pandemic, industrial is the only thing left now.\u201d\n  A hookup between Simon and Amazon would show how retail and logistics\u2014especially delivery for the critical last mile\u2014are converging more rapidly.\n  Many retailers use their stores as mini-fulfillment centers to speed delivery of online purchases, particularly since the pandemic curtailed in-person shopping and curbside pickup became a new alternative. Amazon would likely use the department-store space for a smaller version of its huge distribution centers, relying on vans to navigate suburban streets, analysts said.\n  Simon Property said it has entered into logistics ventures with some retail tenants to help with their fulfillment needs. Mall owner  Washington Prime Group also has a new venture that leases space to retailers such as  Dick\u2019s Sporting Goods for inventory clearance.\n    Malls\u2019 strategic locations often make them attractive as distribution hubs. Many are near main highways and residences. Amazon has already acquired the sites of some failed malls and  converted them to fulfillment centers.  FedEx  Corp. and DHL International GmbH have done the same.\n  Amazon has also been in talks with multiple mall landlords about putting its  coming grocery-store chain in J.C. Penney locations, according to a person familiar with the matter, though it couldn\u2019t be determined if that included Simon malls.\n  Simon\u2019s negotiations with Amazon also illustrate how critical it is for large mall operators to fill big-box vacancies, and the sort of compromises they might be willing to make. Sears and J.C. Penney have filed for bankruptcy protection and each continues to close dozens of stores. Other department stores such as Lord &amp; Taylor also filed for bankruptcy early this month, while  Nordstrom  Inc. closed 16 stores in recent months.\n  These big-box spaces are typically more than 100,000 square feet and often span more than one level. Smaller mall tenants have counted on traffic to department stores to spill over to neighboring retailers, and many have clauses that allow them to reduce rents or break their leases if the department store stays empty.\n  Having an Amazon fulfillment center could still trigger some of these co-tenancy clauses, but some landlords say even that scenario would be preferable to keeping that yawning space vacant.\n  Still, Simon\u2019s other tenants might not celebrate a deal with Amazon. Many blame the giant online retailer for severely disrupting their business. Its presence as a new neighbor would likely do little to pacify them, especially if Amazon\u2019s new distribution capabilities in well-located Simon malls helped make it even more competitive by helping speed up its delivery times.\n  Get a coronavirus briefing six days a week, and a weekly Health newsletter once the crisis abates:  Sign up here.\n  Fulfillment centers wouldn\u2019t draw much additional foot traffic to the mall, though some employees could eat and shop at the mall. That is why landlords have preferred to replace department stores with other retailers, gyms, theaters or entertainment operators. Yet many of these tenants are struggling to survive during the pandemic and aren\u2019t in expansion mode.\n  Simon would likely rent the space at a considerable discount to what it could charge another retailer. Warehouse rents are typically less than $10 a square foot, while restaurant rents can be multiples of that. Depending on when the leases were signed and their locations, department-store rents can be as low as $4 a square foot or as high as $19 a square foot.\n  But Amazon\u2019s growth and healthy balance sheet would make it a reliable tenant at a time when most retail business has been waylaid by the pandemic. Simon, which owns 204 properties in the U.S., has had to contend with a ramp up in retail tenant closures in recent years that has accelerated during Covid-19.\n  Simon and  Brookfield Property Partners LP are putting in a joint bid for J.C. Penney, which filed for bankruptcy in May. By taking over the department-store chain, it gives them control over the store space and certain rights such as making changes to the parking structure, exits and access to shared space and roads.\n    Corrections &amp; Amplifications    Simon and Brookfield Property Partners are putting in a joint bid for J.C. Penney. An earlier version of this article incorrectly called the second company Brookfield Property Group. (Aug. 9)", "posttime": "2020-08-10 04:20:33", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u4e9a\u9a6c\u900a,amazon,\u6765\u6e90,sears", "title": "\u8d44\u6599\u6765\u6e90\uff1a\u7f8e\u56fd\u6700\u5927\u7684\u8d2d\u7269\u4e2d\u5fc3\u6240\u6709\u8005Simon Property\u548c\u4e9a\u9a6c\u900a\u63a2\u7d22\u5c06\u88abJ.C.Penney\u548cSears\u5360\u636e\u7684\u95e8\u5e97\u53d8\u6210\u5c65\u7ea6\u4e2d\u5fc3", "title_en": "Sources: Simon Property, the biggest mall owner in the US, and Amazon explored turning stores before occupied by J.C. Penney and Sears into fulfillment centers", "transed": 1, "url": "https://www.wsj.com/articles/amazon-and-giant-mall-operator-look-at-turning-sears-j-c-penney-stores-into-fulfillment-centers-11596992863?mod=djemalertNEWS", "via": "", "real_tags": ["\u7f8e\u56fd", "\u4e9a\u9a6c\u900a", "amazon", "\u6765\u6e90", "sears"]}]
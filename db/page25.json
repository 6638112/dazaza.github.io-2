[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1072042, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65e0\u6cd5\u5c06 http \u8bf7\u6c42\u5f80\u8fd4\u4e0a\u6e38\uff1a\u62e8\u6253 tcp4 139.162.17.173:80\uff1ai/o \u8d85\u65f6", "note_en": "Unable to round-trip http request to upstream: dial tcp4 139.162.17.173:80: i/o timeout\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0003\u0004\u0010\u0005\u0002\u0000", "posttime": "2021-08-08 08:47:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u68a6\u60f3,dream,http", "title": "\u5b9e\u73b0\u68a6\u60f3\uff0c\u505a\u51fa\u6539\u53d8\uff0c\u642c\u5230\u76ae\u7279\u51ef\u6069\u5c9b (2018)", "title_en": "Live the Dream, Make the Change, Move to Pitcairn Island (2018)", "transed": 1, "url": "http://www.immigration.gov.pn/immigrate/index.html", "via": "", "real_tags": ["\u68a6\u60f3", "dream", "http"]}, {"category": "", "categoryclass": "", "imagename": "4ee50c744e71a530640b9eddf6c55688.jpg", "infoid": 1072041, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4fc4\u7f57\u65af\u96c5\u7f57\u65af\u62c9\u592b\u5c14\u5730\u533a\u2014\u2014\u6211\u7684\u5cb3\u6bcd\u5854\u5b63\u626c\u5a1c\u6b63\u5728\u8c03\u67e5\u5979\u534a\u82f1\u4ea9\u7684\u5929\u5802\u3002\u5b83\u4f4d\u4e8e\u4e00\u6761\u6742\u8349\u4e1b\u751f\u7684\u5c0f\u8def\u7684\u5c3d\u5934\uff0c\u6cbf\u7740\u901a\u5f80\u83ab\u65af\u79d1\u7684\u4e3b\u8981\u9ad8\u901f\u516c\u8def\u7684\u4e00\u6761\u571f\u8def\u51e0\u82f1\u91cc\u3002\u8be5\u7269\u4e1a\u5305\u62ec\u4e00\u4e2a\u6ca1\u6709\u81ea\u6765\u6c34\u7684\u4e09\u5c45\u5ba4\u5c0f\u5c4b\u3001\u4e00\u4e2a\u83dc\u56ed\u548c\u4e00\u4e2a\u79cd\u6709\u7d2b\u4e01\u9999\u3001\u51b7\u6749\u548c\u677e\u6811\u7684\u4fee\u526a\u6574\u9f50\u7684\u8349\u576a\u3002\u5854\u5b63\u626c\u5a1c\u548c\u5979\u5df2\u6545\u7684\u4e08\u592b\u4e8e 1992 \u5e74\uff0c\u4e5f\u5c31\u662f\u82cf\u8054\u89e3\u4f53\u540e\u7684\u7b2c\u4e8c\u5e74\u5efa\u9020\u4e86\u522b\u5885\u6216\u907f\u6691\u522b\u5885\u3002\u5979\u8bb0\u5f97\u4ed6\u4eec\u4e58\u5750\u4e00\u8f86\u5361\u8f66\uff0c\u628a\u4ed6\u4eec\u7684\u5bb6\u5177\u653e\u5728\u4e86\u88ab\u5c0f\u9ea6\u548c\u71d5\u9ea6\u7530\u5305\u56f4\u7684\u4e24\u5c42\u697c\u5c0f\u623f\u5b50\u524d\u3002\u4e00\u5f00\u59cb\uff0c\u522b\u5885\u751a\u81f3\u6ca1\u6709\u6743\u529b\u3002 \u201c\u6211\u4eec\u5728\u6ca1\u6709\u7535\u7684\u60c5\u51b5\u4e0b\u751f\u6d3b\u5f97\u5f88\u597d\uff0c\u201d\u5854\u5b63\u626c\u5a1c\u8bf4\u3002 \u201c\u6211\u4eec\u4e00\u6574\u5929\u90fd\u5f88\u5fd9\uff0c\u5728\u6811\u6797\u91cc\u6563\u6b65\u63a2\u7d22\u3002\u665a\u4e0a\uff0c\u6211\u4eec\u4f1a\u5750\u5728\u7164\u6cb9\u706f\u65c1\u73a9\u5927\u5bcc\u7fc1\u3002\u201d\u5728\u4fc4\u7f57\u65af\u4eba\u7684\u60f3\u8c61\u4e2d\uff0c\u522b\u5885\u5360\u636e\u4e86\u8fd1\u4e4e\u795e\u8bdd\u822c\u7684\u5730\u4f4d\u3002\u66fe\u7ecf\u662f\u6709\u5730\u8d35\u65cf\u7684\u4fdd\u62a4\u533a\uff0c\u907f\u6691\u522b\u5885\u5728 19 \u4e16\u7eaa\u540e\u671f\u53d7\u5230\u57ce\u5e02\u4e13\u4e1a\u4eba\u58eb\u7684\u6b22\u8fce\u3002\u5728\u82cf\u8054\u65f6\u4ee3\uff0c\u4ece\u4f5c\u5bb6\u5230\u5de5\u5382\u5de5\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4f7f\u7528\u522b\u5885\u3002\u5982\u4eca\uff0c\u522b\u5885\u53ef\u4ee5\u662f\u4efb\u4f55\u4e1c\u897f\uff0c\u4ece\u4e24\u5ba4\u5c0f\u5c4b\u5230\u5be1\u5934\u4eff\u5236\u7684\u6cd5\u56fd\u57ce\u5821\u3002\u6bcf\u5e74\u590f\u5929\uff0c\u4fc4\u7f57\u65af\u7684\u57ce\u5e02\u90fd\u7a7a\u8361\u8361\u7684\uff0c\u6570\u767e\u4e07\u4eba\u9003\u79bb\u95f7\u70ed\u3001\u72ed\u7a84\u7684\u516c\u5bd3\uff0c\u91cd\u65b0\u4e0e\u4ed6\u4eec\u5728\u4e61\u6751\u7684\u6839\u8054\u7cfb\u8d77\u6765\u3002\u83ab\u65af\u79d1\u4eba\u5854\u5b63\u626c\u5a1c\u6700\u521d\u88ab\u522b\u5885\u5438\u5f15\u662f\u56e0\u4e3a\u9644\u8fd1\u7684\u68ee\u6797\u76db\u4ea7\u6d46\u679c\u548c\u8611\u83c7\u3002\u540e\u6765\u5979\u624d\u5f00\u59cb\u4ece\u4e8b\u56ed\u827a\u5de5\u4f5c\u3002\u73b0\u5728\uff0c\u5854\u5b63\u626c\u5a1c\u548c\u5979\u7684\u4e08\u592b\u4e9a\u5386\u5c71\u5927\u5728\u8fd9\u5904\u623f\u4ea7\u5ea6\u8fc7\u4e86\u4ed6\u4eec\u7684\u590f\u5b63\u5468\u672b\uff0c\u5c3d\u7ba1 80 \u82f1\u91cc\u7684\u8f66\u7a0b\u53ef\u80fd\u9700\u8981\u957f\u8fbe\u56db\u4e2a\u5c0f\u65f6\u7684\u522b\u5885\u4ea4\u901a\u3002\u5979\u7ecf\u5e38\u60f3\u5230\u5356\u6389\u8fd9\u4e2a\u5730\u65b9\u3002 \u201c\u4f46\u6211\u5c31\u662f\u505a\u4e0d\u5230\uff0c\u56e0\u4e3a\u6211\u603b\u662f\u5728\u6625\u5929\u56de\u6765\uff0c\u60f3\u5728\u8fd9\u91cc\u505a\u5f88\u591a\u4e8b\u60c5\u5e76\u8fdb\u5165\u6811\u6797\uff0c\u201d\u5854\u5b63\u626c\u5a1c\u8bf4\u3002 \u201c\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u6211\u4e0d\u80fd\u5356\u6389\u5b83\uff0c\u5373\u4f7f\u5b83\u6d88\u8017\u4e86\u4f60\u592a\u591a\u7684\u4f53\u529b\u3002\u201d\n\u522b\u5885\u751f\u6d3b\u7684\u4e0d\u4fbf\u2014\u2014\u5916\u5c4b\u3001\u624b\u673a\u4fe1\u53f7\u4e0d\u7545\u548c\u53bb\u4e95\u91cc\u2014\u2014\u8fdc\u4e0d\u53ca\u5b83\u7684\u6cbb\u7597\u6548\u679c\u3002 \u201c\u5728\u8fd9\u91cc\uff0c\u90a3\u4e9b\u57ce\u5e02\u95ee\u9898\u5c31\u6d88\u5931\u4e86\uff0c\u201d\u5854\u5b63\u626c\u5a1c\u8bf4\u3002 \u201c\u91ce\u6027\u8ba9\u4f60\u5934\u8111\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e0d\u5fc5\u8981\u7684\u4e1c\u897f\u3002\u201d\u5728\u522b\u5885\u91cc\u603b\u6709\u4e00\u4e9b\u4e8b\u60c5\u53ef\u4ee5\u505a\uff0c\u800c\u538b\u529b\u5927\u7684\u57ce\u5e02\u5c45\u6c11\u6e34\u671b\u7684\u6b63\u662f\u8fd9\u79cd\u751f\u5b58\u6027\u7684\u4f53\u80b2\u6d3b\u52a8\u3002\u5728\u9644\u8fd1\u7684\u6751\u5e84\u91cc\uff0c\u5b89\u5fb7\u70c8\u00b7\u5e93\u5179\u6d85\u4f50\u592b\u5728\u6b63\u5348\u7684\u9633\u5149\u4e0b\u5927\u6c57\u6dcb\u6f13\uff0c\u4ed6\u5728\u7236\u6bcd\u53e4\u96c5\u7684\u623f\u5b50\u5916\u9762\u5806\u8d77\u4e86\u67f4\u706b\uff0c\u623f\u5b50\u7684\u7a97\u6237\u5468\u56f4\u6709\u590d\u6742\u7684\u6728\u5236\u54c1\u3002\u5728\u5927\u6d41\u884c\u671f\u95f4\uff0c\u5b89\u5fb7\u70c8\u5931\u53bb\u4e86\u5728\u83ab\u65af\u79d1\u62c5\u4efb\u7ecf\u7406\u7684\u5de5\u4f5c\uff0c\u73b0\u5728\u6709\u65f6\u95f4\u4fee\u7406\u4ed6\u66fe\u7956\u7236\u4e00\u4e2a\u4e16\u7eaa\u524d\u5efa\u9020\u7684\u623f\u5b50\u3002\u5bb6\u5ead\u5b85\u57fa\u5730\u62e5\u6709\u4e00\u4e2a\u83dc\u56ed\u3001\u9e21\u548c\u4e94\u53ea\u5c71\u7f8a\u3002 \u201c\u5f53\u4f60\u4e60\u60ef\u4e86\u4e61\u6751\u751f\u6d3b\u65f6\uff0c\u5b83\u662f\u6d6a\u6f2b\u7684\uff0c\u201d\u5b89\u5fb7\u70c8\u8bf4\u3002 \u201c\u8fd9\u610f\u5473\u7740 80% \u7684\u5de5\u4f5c\u548c 20% \u7684\u6d6a\u6f2b\u751f\u6d3b\u3002\u4e0d\u5de5\u4f5c\uff0c\u4e0d\u73a9\u800d\u3002\u201d \u201c\u8fd9\u662f\u8fdc\u79bb\u57ce\u5e02\u3001\u55a7\u56a3\u3001\u4eba\u7fa4\u548c\u9a9a\u52a8\u7684\u771f\u6b63\u5047\u671f\u3002\u5f53\u4f60\u5728\u82b1\u56ed\u91cc\u5de5\u4f5c\u6216\u4e0e\u52a8\u7269\u4e00\u8d77\u5de5\u4f5c\u65f6\uff0c\u4f60\u5c31\u4f11\u606f\u4e86\uff0c\u201d\u5979\u8bf4\u3002 \u201c\u6211\u65e0\u6cd5\u60f3\u8c61\u6ca1\u6709\u8fd9\u4e2a\u5730\u65b9\u6211\u7684\u751f\u6d3b\u3002\u201d\u6211\u5cb3\u6bcd\u7684\u4e00\u4f4d\u90bb\u5c45 Vladimir Beresnev \u975e\u5e38\u559c\u6b22\u4ed6\u7684\u522b\u5885\uff0c\u56e0\u6b64\u4ed6\u5b89\u88c5\u4e86\u7ba1\u9053\u548c\u4e2d\u592e\u4f9b\u6696\u7cfb\u7edf\uff0c\u4ee5\u4f7f\u5176\u5728\u51ac\u5929\u4e5f\u5f88\u8212\u9002\u3002\u4f46\u8fd9\u4f4d\u9000\u4f11\u7684\u624b\u98ce\u7434\u624b\u8bf4\uff0c\u4ed6\u7684\u4e24\u4e2a\u513f\u5b50\u5f88\u5c11\u53bb\u770b\u671b\u4ed6\u3002\n\u201c\u6211\u7684\u5c0f\u513f\u5b50\u8bf4\uff1a\u2018\u6211\u5df2\u7ecf\u4e94\u5e74\u6ca1\u6709\u56de\u6765\u4e86\uff0c\u4ee5\u540e\u4e5f\u4e0d\u4f1a\u56de\u6765\u4e86\uff0c\u2019\u201d\u5f17\u62c9\u57fa\u7c73\u5c14\u8bf4\u3002 \u201c\u522b\u5885\u5e76\u4e0d\u9002\u5408\u6240\u6709\u4eba\u3002\u201d 1986 \u5e74\uff0c\u5f17\u62c9\u57fa\u7c73\u5c14\u6210\u4e3a\u7b2c\u4e00\u4e2a\u4ece\u66fe\u7ecf\u62e5\u6709\u571f\u5730\u7684\u56fd\u8425\u519c\u573a\u8d2d\u4e70\u571f\u5730\u7684\u83ab\u65af\u79d1\u4eba\u3002\u9010\u6e10\u51fa\u73b0\u4e86\u5c0f\u5c4b\uff0c\u519c\u7530\u88ab\u79c1\u6709\u5316\uff0c\u522b\u5885\u4e3b\u4eba\u5f00\u59cb\u53d6\u4ee3\u5c0f\u6751\u5e84\u7684\u5c45\u6c11\u3002\u73b0\u5728\u53ea\u5269\u4e0b\u4e00\u4e2a\u6751\u6c11\u4e86\uff0c\u5f17\u62c9\u57fa\u7c73\u5c14\u8bf4\uff0c\u4ed6\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5728\u83ab\u65af\u79d1\u5ea6\u8fc7\u3002\u52a0\u6797\u5a1c\u00b7\u535a\u4e9a\u91cc\u8bfa\u5a03 (Galina Boyarinova) \u62e5\u6709\u4e0e\u5854\u5b63\u626c\u5a1c (Tatyana) \u76f8\u90bb\u7684\u623f\u4ea7\uff0c\u6bcf\u5468\u5728\u83ab\u65af\u79d1\u62c5\u4efb\u4f1a\u8ba1\u5e08\u3002\u5979\u8bf4\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5e74\u8f7b\u7684\u6bcd\u4eb2\uff0c\u5979\u7761\u5728\u5e8a\u8fb9\u7684\u65a7\u5934\u4e0a\uff0c\u5c3d\u7ba1\u5979\u6700\u7ec8\u9762\u4e34\u7684\u552f\u4e00\u5371\u9669\u662f\u4e00\u53ea\u6124\u6012\u7684\u516c\u5c71\u7f8a\u548c\u4e00\u4e9b\u6b63\u5728\u5bfb\u627e\u6708\u5149\u7684\u9189\u9152\u7267\u7f8a\u4eba\u3002\u5979\u7684\u5973\u513f\u5ac1\u7ed9\u4e86\u4e00\u4e2a\u5f53\u5730\u7537\u4eba\uff0c\u4ed6\u4eec\u5728\u6751\u91cc\u4e00\u5e74\u4e00\u5ea6\u7684\u6691\u5047\u4e3e\u884c\u4e86\u5a5a\u793c\uff0c\u5f17\u62c9\u57fa\u7c73\u5c14\u62c9\u7740\u4ed6\u7684\u624b\u98ce\u7434\u3002 \u201c\u6211\u4eec\u8fc7\u53bb\u5e38\u5e38\u5728\u6811\u4e0b\u4e3a\u5047\u671f\u5b89\u6392\u9910\u684c\uff0c\u201d\u52a0\u6797\u5a1c\u7ad9\u5728\u5979\u522b\u5885\u7684\u95e8\u53e3\u8bf4\u3002\u4f46\u662f\u73b0\u5728\u6ca1\u6709\u4eba\u6765\u5e86\u795d\u8fd9\u4e2a\u8282\u65e5\u4e86\u3002\u51e0\u82f1\u91cc\u5916\u7684\u5c0f\u6728\u5c4b\u91cc\u7684\u4e61\u6751\u5546\u5e97\u4e5f\u4e0d\u89c1\u4e86\u3002\u6bcf\u5468\u4e24\u6b21\uff0cavtolavka - \u4e00\u5bb6\u6709\u8f6e\u5b50\u7684\u5546\u5e97 - \u8def\u8fc7\u3002 Galina \u8bb0\u5f97\u6751\u91cc\u7684 babushkas \u5982\u4f55\u4e3a\u8fd9\u4e2a\u573a\u5408\u7a7f\u4e0a\u4e1d\u7ef8\u8fde\u8863\u88d9\uff0c\u5e76\u5728\u4e00\u6839\u5927\u6728\u5934\u4e0a\u7b49\u5f85\u98df\u7269\u5361\u8f66\u3002\u4ed6\u4eec\u80cc\u8bf5\u201cHubba Bubba\u201d\u548c\u201c\u58eb\u529b\u67b6\u201d\u7b49\u5916\u8bed\uff0c\u4e3a\u5b59\u5b50\u5b59\u5973\u4e70\u96f6\u98df\u3002\n\u201c\u6211\u4eec\u7684\u5b69\u5b50\u8868\u6f14\u8282\u76ee\uff0c\u201d\u52a0\u6797\u5a1c\u8bf4\u3002 \u201c\u4ed6\u4eec\u4f1a\u5728\u79cb\u5343\u4e0a\u6302\u4e0a\u7a97\u5e18\uff0c\u821e\u53f0\u5c31\u5728\u8fd9\u91cc\u3002\u4ed6\u4eec\u81ea\u5df1\u5236\u4f5c\u670d\u88c5\uff0c\u5e76\u5411\u6751\u91cc\u6240\u6709\u7684\u5934\u5dfe\u5206\u53d1\u95e8\u7968\u3002\u201d\u4f46\u73b0\u5728\u65b0\u4e00\u4ee3\u4eba\u53c8\u56de\u5230\u4e86\u52a0\u6797\u5a1c\u524d\u95e8\u7684\u5431\u5431\u4f5c\u54cd\u7684\u79cb\u5343\u4e0a\u3002\u6211\u7684\u59bb\u5b50 Svetlana \u548c\u6211\u4eec 15 \u4e2a\u6708\u5927\u7684\u7537\u5b69 Leo \u5750\u5728\u5979\u5c0f\u65f6\u5019\u73a9\u7684\u540c\u4e00\u4e2a\u79cb\u5343\u4e0a\u3002\u52a0\u6797\u5a1c\u548c\u5979\u7684\u4e08\u592b\u60f3\u5728\u8fd9\u91cc\u9000\u4f11\u3002\u4e5f\u8bb8\u6709\u4e00\u5929\u5979\u4f1a\u544a\u8bc9 Leo \u4ed6\u5e26\u7740\u81ea\u5df1\u7684\u5b69\u5b50\u6765\u7b2c\u4e00\u6b21\u62dc\u8bbf\u5bb6\u5ead\u522b\u5885\u3002", "note_en": "YAROSLAVL REGION, Russia \u2014 My mother-in-law, Tatyana, surveys her half acre of paradise. It&#39;s located at the end of an overgrown path, a few miles down a dirt road off the main highway to Moscow. The property consists of a three-room cottage with no running water, a vegetable garden and a trim lawn bordered by lilacs, firs and pines.\n  Tatyana and her late husband built the dacha, or summer house, in 1992, the year after the Soviet Union collapsed. She remembers arriving in a truck that dropped off their furniture in front of the little two-story house surrounded by wheat and oat fields. In the beginning, the dacha didn&#39;t even have power.\n  &#34;We lived very well without electricity,&#34; Tatyana says. &#34;All day we were busy, walking in the woods exploring. And in the evenings, we would sit around a kerosene lamp and play Monopoly.&#34;\n     In the Russian imagination, the dacha occupies a near mythical place. Once the reserve of the landed nobility, the summer house gained popularity with urban professionals in the late 19th century; in the Soviet era the dacha became available to everyone, from writers to factory workers.\n    Nowadays, a dacha can be anything from a two-room shack to an oligarch&#39;s imitation French chateau. Every summer, Russian cities empty out as millions of people escape stuffy, cramped apartments to reconnect with their roots in the countryside.\n  Tatyana, a Muscovite, was initially drawn to the dacha because of the nearby forests with their bounties of berries and mushrooms. Only later did she take up gardening. Now, Tatyana and her husband Alexander  spend their summer weekends on the property, even though the 80-mile drive can take up to four hours with dacha traffic. She has often thought of selling the place.\n  &#34;But I just can&#39;t, because I always come back in the spring and want to do so much here and go into the woods,&#34; Tatyana says. &#34;For some reason I can&#39;t sell it, even though it takes so much out of you physically.&#34;\n    The inconveniences of dacha life \u2014 the outhouse, the spotty cellphone coverage and the trips to the well \u2014 are far outweighed by its therapeutic effects.\n  &#34;Here those city problems just disappear,&#34; says Tatyana. &#34;The wildness clears your mind of everything that&#39;s unnecessary.&#34;\n  There&#39;s always something to do at the dacha, and it&#39;s that existential, physical activity that stressed-out city dwellers crave.\n  In the nearby village, Andrei Kuznetsov is sweating in the midday sun as he piles up firewood outside his parents&#39; quaint house, which has intricate woodwork around the windows. During the pandemic, Andrei lost his job as a manager in Moscow and now has the time to fix up the house that his great-grandfather built a century ago. The family homestead boasts a vegetable garden, chickens and five goats.\n  &#34;Country living is romantic when you get used to it,&#34; Andrei says. &#34;That means 80% work and 20% romantic life. No work, no play.&#34;\n      &#34;This is a real vacation from the city, the noise, the people and the commotion. When you work in the garden or with the animals, you rest,&#34; she says. &#34;I can&#39;t imagine my life without this place.&#34;\n     One of my mother-in-law&#39;s neighbors, Vladimir Beresnev, loves his dacha so much that he installed plumbing and central heating to make it comfortable in the winter as well. But the retired accordion player says his two sons rarely visit.\n  &#34;My younger one said: &#39;I haven&#39;t been back for five years and won&#39;t be for another five,&#39;&#34; says Vladimir. &#34;The dacha isn&#39;t for everyone.&#34;\n  In 1986, Vladimir became the first Muscovite to buy a plot from the state-run farm that once owned the land here. Gradually cottages sprang up, the farmland was privatized and dacha owners started replacing the inhabitants of the hamlet. Now there is only one villager left, Vladimir says, and he spends most of his time in Moscow.\n    Galina Boyarinova, who owns the adjoining property to Tatyana&#39;s, works during the week as an accountant in Moscow.\n    As a young mother, she says, she slept with an ax next to her bed, even though the only dangers she ended up facing were an angry billy goat and some drunken shepherds looking for moonshine.\n  Her daughter married a local man, and they held their wedding on the village&#39;s annual summer holiday, with Vladimir playing his accordion.\n    &#34;We used to set up tables for the holiday right here under the trees,&#34; says Galina, standing at the gate to her dacha. But now there is nobody left to celebrate the holiday.\n  Also gone is the country store in a log cabin a few miles down the road. Twice a week, the  avtolavka \u2014 a shop on wheels \u2014 came trundling by. Galina remembers how the village   babushkas put on silk dresses for the occasion and waited for the food truck on a big log. They memorized foreign words like &#34;Hubba Bubba&#34; and &#34;Snickers&#34; to buy treats for their grandchildren.\n      &#34;Our kids put on shows,&#34; Galina says. &#34;They would hang up curtains on the swings, and the stage was right here. They made their own costumes and handed out tickets to all the babushkas in the village.&#34;\n    But now a new generation is returning to the creaky swing set at Galina&#39;s front gate. My wife Svetlana sits with our 15-month-old boy, Leo, on the same swings where she played as a girl.\n  Galina and her husband want to retire here. Maybe one day she will tell Leo about his first visit to the family dacha when he comes with his own child.", "posttime": "2021-08-08 08:45:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fc4\u7f57\u65af,russia,\u522b\u5885", "title": "Dacha \u662f\u4fc4\u7f57\u65af\u57ce\u5e02\u751f\u6d3b\u7684\u590f\u5b63\u89e3\u836f", "title_en": "The Dacha Is Russia's Summer Cure for Urban Life", "transed": 1, "url": "https://www.npr.org/2021/08/06/1020691361/the-dacha-is-russias-summer-cure-for-urban-life", "via": "", "real_tags": ["\u4fc4\u7f57\u65af", "russia", "\u522b\u5885"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072040, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u73b0\u5728\u662f\u65f6\u5019\u5f00\u59cb\u7f16\u5199\u81ea\u5df1\u7684\u5b8f\u4e86\u3002\u4e0a\u4e00\u7ae0\u4e2d\u4ecb\u7ecd\u7684\u6807\u51c6\u5b8f\u6697\u793a\u4e86\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b8f\u505a\u7684\u4e00\u4e9b\u4e8b\u60c5\uff0c\u4f46\u8fd9\u53ea\u662f\u5f00\u59cb\u3002 Common Lisp \u4e0d\u652f\u6301\u5b8f\uff0c\u56e0\u6b64\u6bcf\u4e2a Lisp \u7a0b\u5e8f\u5458\u90fd\u53ef\u4ee5\u521b\u5efa\u4ed6\u4eec\u81ea\u5df1\u7684\u6807\u51c6\u63a7\u5236\u7ed3\u6784\u53d8\u4f53\uff0c\u5c31\u50cf C \u652f\u6301\u51fd\u6570\u4e00\u6837\uff0c\u56e0\u6b64\u6bcf\u4e2a C \u7a0b\u5e8f\u5458\u90fd\u53ef\u4ee5\u7f16\u5199 C \u6807\u51c6\u5e93\u4e2d\u51fd\u6570\u7684\u7410\u788e\u53d8\u4f53\u3002\u5b8f\u662f\u8bed\u8a00\u7684\u4e00\u90e8\u5206\uff0c\u5141\u8bb8\u60a8\u5728\u6838\u5fc3\u8bed\u8a00\u548c\u6807\u51c6\u5e93\u4e4b\u4e0a\u521b\u5efa\u62bd\u8c61\uff0c\u4f7f\u60a8\u66f4\u63a5\u8fd1\u80fd\u591f\u76f4\u63a5\u8868\u8fbe\u60a8\u60f3\u8981\u8868\u8fbe\u7684\u4e1c\u897f\u3002\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u6b63\u786e\u7406\u89e3\u5b8f\u7684\u6700\u5927\u969c\u788d\u4e5f\u8bb8\u662f\u5b83\u4eec\u5f88\u597d\u5730\u96c6\u6210\u5230\u8bed\u8a00\u4e2d\u3002\u5728\u8bb8\u591a\u65b9\u9762\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u53ea\u662f\u4e00\u79cd\u6709\u8da3\u7684\u51fd\u6570\u2014\u2014\u5b83\u4eec\u662f\u7528 Lisp \u91cd\u5199\u7684\uff0c\u5b83\u4eec\u63a5\u53d7\u53c2\u6570\u5e76\u8fd4\u56de\u7ed3\u679c\uff0c\u5e76\u4e14\u5b83\u4eec\u5141\u8bb8\u60a8\u62bd\u8c61\u6389\u5206\u6563\u6ce8\u610f\u529b\u7684\u7ec6\u8282\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u6709\u8fd9\u4e9b\u76f8\u4f3c\u4e4b\u5904\uff0c\u5b8f\u5728\u4e0e\u51fd\u6570\u4e0d\u540c\u7684\u5c42\u6b21\u4e0a\u8fd0\u884c\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u79cd\u5b8c\u5168\u4e0d\u540c\u7684\u62bd\u8c61\u3002\u4e00\u65e6\u4f60\u7406\u89e3\u4e86\u5b8f\u548c\u51fd\u6570\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u5b8f\u5728\u8bed\u8a00\u4e2d\u7684\u7d27\u5bc6\u96c6\u6210\u5c06\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u597d\u5904\u3002\u4f46\u540c\u65f6\uff0c\u5b83\u4e5f\u662f newLispers \u7ecf\u5e38\u6df7\u6dc6\u7684\u6765\u6e90\u3002\u4e0b\u9762\u7684\u6545\u4e8b\u867d\u7136\u5728\u5386\u53f2\u6216\u6280\u672f\u610f\u4e49\u4e0a\u5e76\u4e0d\u771f\u5b9e\uff0c\u4f46\u8bd5\u56fe\u901a\u8fc7\u8ba9\u60a8\u601d\u8003\u5b8f\u5982\u4f55\u5de5\u4f5c\u6765\u51cf\u8f7b\u6df7\u6dc6\u3002\u4ece\u524d\uff0c\u5f88\u4e45\u4ee5\u524d\uff0c\u6709\u4e00\u4e2a Lisp \u7a0b\u5e8f\u5458\u516c\u53f8\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f88\u4e45\u4ee5\u524d Lisp \u6ca1\u6709\u5b8f\u3002\u4efb\u4f55\u4e0d\u80fd\u7528\u51fd\u6570\u5b9a\u4e49\u6216\u7528\u7279\u6b8a\u8fd0\u7b97\u7b26\u5b8c\u6210\u7684\u4e1c\u897f\uff0c\u6bcf\u6b21\u90fd\u5fc5\u987b\u5b8c\u6574\u5730\u7f16\u5199\uff0c\u8fd9\u76f8\u5f53\u62d6\u7d2f\u3002\u53ef\u60dc\u7684\u662f\uff0c\u8fd9\u5bb6\u516c\u53f8\u7684\u7a0b\u5e8f\u5458\u867d\u7136\u5f88\u806a\u660e\uff0c\u4f46\u4e5f\u5f88\u61d2\u60f0\u3002\u901a\u5e38\u5728\u4ed6\u4eec\u7684\u7a0b\u5e8f\u4e2d\u95f4\u2014\u2014\u5f53\u7f16\u5199\u4e00\u5806\u4ee3\u7801\u53d8\u5f97\u8fc7\u4e8e\u4e4f\u5473\u65f6\u2014\u2014\u4ed6\u4eec\u4f1a\u5199\u4e00\u4e2a\u6ce8\u91ca\u6765\u63cf\u8ff0\u4ed6\u4eec\u9700\u8981\u5728\u7a0b\u5e8f\u4e2d\u7684\u90a3\u4e2a\u5730\u65b9\u7f16\u5199\u7684\u4ee3\u7801\u3002\u66f4\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8e\u61d2\u60f0\uff0c\u7a0b\u5e8f\u5458\u4eec\u4e5f\u8ba8\u538c\u56de\u53bb\u5b9e\u9645\u7f16\u5199\u6ce8\u91ca\u63cf\u8ff0\u7684\u4ee3\u7801\u3002\u5f88\u5feb\uff0c\u516c\u53f8\u5c31\u6709\u4e86\u4e00\u5927\u5806\u6ca1\u4eba\u80fd\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u5145\u6ee1\u4e86\u5173\u4e8e\u4ecd\u7136\u9700\u8981\u7f16\u5199\u7684\u4ee3\u7801\u7684\u6ce8\u91ca\u3002\u65e0\u5948\u4e4b\u4e0b\uff0c\u5927\u8001\u677f\u8058\u8bf7\u4e86\u4e00\u540d\u521d\u7ea7\u7a0b\u5e8f\u5458Mac\uff0c\u4ed6\u7684\u5de5\u4f5c\u662f\u627e\u5230\u7b14\u8bb0\uff0c\u7f16\u5199\u6240\u9700\u7684\u4ee3\u7801\uff0c\u5e76\u5c06\u5176\u63d2\u5165\u7a0b\u5e8f\u4e2d\u4ee3\u66ff\u7b14\u8bb0\u3002 Mac \u4ece\u6765\u6ca1\u6709\u8fd0\u884c\u8fc7\u8fd9\u4e9b\u7a0b\u5e8f\u2014\u2014\u5f53\u7136\uff0c\u5b83\u4eec\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u6240\u4ee5\u4ed6\u4e0d\u80fd\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u5b83\u4eec\u5df2\u7ecf\u5b8c\u6210\uff0cMac \u4e5f\u4e0d\u77e5\u9053\u8981\u4e3a\u5b83\u4eec\u63d0\u4f9b\u54ea\u4e9b\u8f93\u5165\u3002\u6240\u4ee5\u4ed6\u53ea\u662f\u6839\u636e\u7b14\u8bb0\u7684\u5185\u5bb9\u5199\u4e86\u4ed6\u7684\u4ee3\u7801\uff0c\u7136\u540e\u628a\u5b83\u53d1\u56de\u7ed9\u539f\u6765\u7684\u7a0b\u5e8f\u5458\u3002\u5728 Mac \u7684\u5e2e\u52a9\u4e0b\uff0c\u6240\u6709\u7a0b\u5e8f\u5f88\u5feb\u5c31\u5b8c\u6210\u4e86\uff0c\u516c\u53f8\u901a\u8fc7\u51fa\u552e\u8fd9\u4e9b\u7a0b\u5e8f\u8d5a\u4e86\u4e00\u5927\u7b14\u94b1\u2014\u2014\u8fd9\u4e48\u591a\u94b1\uff0c\u516c\u53f8\u53ef\u4ee5\u5c06\u5176\u7f16\u7a0b\u4eba\u5458\u7684\u4eba\u6570\u589e\u52a0\u4e00\u500d\u3002\u4f46\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u6ca1\u6709\u4eba\u60f3\u5230\u8058\u8bf7\u4efb\u4f55\u4eba\u6765\u5e2e\u52a9 Mac\uff1b\u5f88\u5feb\uff0c\u4ed6\u5c31\u5355\u67aa\u5339\u9a6c\u5730\u534f\u52a9\u4e86\u51e0\u5341\u540d\u7a0b\u5e8f\u5458\u3002\u4e3a\u4e86\u907f\u514d\u82b1\u8d39\u6240\u6709\u65f6\u95f4\u5728\u6e90\u4ee3\u7801\u4e2d\u641c\u7d22\u6ce8\u91ca\uff0cMac \u5bf9\u7a0b\u5e8f\u5458\u4f7f\u7528\u7684\u7f16\u8bd1\u5668\u8fdb\u884c\u4e86\u5c0f\u5e45\u4fee\u6539\u3002\u6b64\u540e\uff0c\u6bcf\u5f53\u7f16\u8bd1\u5668\u9047\u5230\u6ce8\u91ca\u65f6\uff0c\u5b83\u90fd\u4f1a\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5c06\u6ce8\u91ca\u53d1\u9001\u7ed9\u4ed6\uff0c\u5e76\u7b49\u5f85\u4ed6\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u53d1\u9001\u66ff\u6362\u4ee3\u7801\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u5373\u4f7f\u6709\u4e86\u8fd9\u79cd\u53d8\u5316\uff0cMac \u4e5f\u5f88\u96be\u8ddf\u4e0a\u7a0b\u5e8f\u5458\u7684\u6b65\u4f10\u3002\u4ed6\u5c3d\u53ef\u80fd\u5c0f\u5fc3\u5730\u5de5\u4f5c\uff0c\u4f46\u6709\u65f6\u2014\u2014\u5c24\u5176\u662f\u5f53\u7b14\u8bb0\u4e0d\u6e05\u695a\u65f6\u2014\u2014\u4ed6\u4f1a\u72af\u9519\u8bef\u3002\u7136\u800c\uff0c\u7a0b\u5e8f\u5458\u6ce8\u610f\u5230\uff0c\u4ed6\u4eec\u5199\u7684\u7b14\u8bb0\u8d8a\u7cbe\u786e\uff0cMac \u53d1\u56de\u6b63\u786e\u4ee3\u7801\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5927\u3002\u6709\u4e00\u5929\uff0c\u4e00\u4f4d\u7a0b\u5e8f\u5458\u5f88\u96be\u7528\u6587\u5b57\u63cf\u8ff0\u4ed6\u60f3\u8981\u7684\u4ee3\u7801\uff0c\u5728\u4ed6\u7684\u4e00\u4e2a\u7b14\u8bb0\u4e2d\u5305\u542b\u4e86\u4e00\u4e2a Lisp \u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u751f\u6210\u4ed6\u60f3\u8981\u7684\u4ee3\u7801\u3002 Mac \u6ca1\u95ee\u9898\uff1b\u4ed6\u53ea\u662f\u8fd0\u884c\u7a0b\u5e8f\u5e76\u5c06\u7ed3\u679c\u53d1\u9001\u7ed9\u7f16\u8bd1\u5668\u3002\n\u4e0b\u4e00\u4e2a\u521b\u65b0\u51fa\u73b0\u65f6\uff0c\u7a0b\u5e8f\u5458\u5728\u4ed6\u7684\u4e00\u4e2a\u5305\u542b\u51fd\u6570\u5b9a\u4e49\u548c\u6ce8\u91ca\u7684\u7a0b\u5e8f\u7684\u9876\u90e8\u653e\u4e86\u4e00\u6761\u6ce8\u91ca\uff0c\u4e0a\u9762\u5199\u7740\uff1a\u201cMac\uff0c\u4e0d\u8981\u5728\u8fd9\u91cc\u5199\u4efb\u4f55\u4ee3\u7801\uff0c\u4f46\u4fdd\u7559\u6b64\u51fd\u6570\u4ee5\u5907\u540e\u7528\uff1b\u6211\u5c06\u4f7f\u7528\u5b83\u5728\u6211\u7684\u5176\u4ed6\u4e00\u4e9b\u7b14\u8bb0\u4e2d\u3002\u201d\u540c\u4e00\u7a0b\u5e8f\u4e2d\u7684\u5176\u4ed6\u6ce8\u91ca\u8bf4\u8bf8\u5982\u201cMac\uff0c\u7528\u7b26\u53f7 x \u548c y \u4f5c\u4e3a\u53c2\u6570\u8fd0\u884c\u5176\u4ed6\u51fd\u6570\u7684\u7ed3\u679c\u66ff\u6362 thisnote\u201d\u3002\u8fd9\u79cd\u6280\u672f\u5f88\u5feb\u6d41\u884c\u8d77\u6765\uff0c\u4ee5\u81f3\u4e8e\u5728\u51e0\u5929\u4e4b\u5185\uff0c\u5927\u591a\u6570\u7a0b\u5e8f\u90fd\u5305\u542b\u4e86\u51e0\u5341\u4e2a\u5b9a\u4e49\u51fd\u6570\u7684\u6ce8\u91ca\uff0c\u8fd9\u4e9b\u6ce8\u91ca\u53ea\u80fd\u7531\u5176\u4ed6\u6ce8\u91ca\u4e2d\u7684\u4ee3\u7801\u4f7f\u7528\u3002\u4e3a\u4e86\u8ba9 Mac \u80fd\u591f\u8f7b\u677e\u6311\u9009\u51fa\u53ea\u5305\u542b\u4e0d\u9700\u8981\u4efb\u4f55\u7acb\u5373\u54cd\u5e94\u7684\u5b9a\u4e49\u7684\u6ce8\u91ca\uff0c\u7a0b\u5e8f\u5458\u7528\u6807\u51c6\u5e8f\u8a00\u6807\u8bb0\u5b83\u4eec\uff1a\u201cMac \u5b9a\u4e49\uff0c\u53ea\u8bfb\u201d\u3002\u8fd9\u2014\u2014\u56e0\u4e3a\u7a0b\u5e8f\u5458\u4ecd\u7136\u5f88\u61d2\u60f0\u2014\u2014\u5f88\u5feb\u88ab\u7f29\u5199\u4e3a\u201cDEF.MAC.R/O\u201d\uff0c\u7136\u540e\u662f\u201cDEFMACRO\u201d\u3002\u5f88\u5feb\uff0cMac \u7684\u6ce8\u91ca\u4e2d\u5c31\u6ca1\u6709\u5b9e\u9645\u7684\u82f1\u8bed\u4e86\u3002\u4ed6\u4e00\u6574\u5929\u6240\u505a\u7684\u5c31\u662f\u9605\u8bfb\u548c\u56de\u590d\u6765\u81ea\u7f16\u8bd1\u5668\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5176\u4e2d\u5305\u542b DEFMACRO \u6ce8\u91ca\u548c\u5bf9 DEFMACRO \u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u8c03\u7528\u3002\u7531\u4e8e\u7b14\u8bb0\u4e2d\u7684 Lisp \u7a0b\u5e8f\u5b8c\u6210\u4e86\u6240\u6709\u5b9e\u9645\u5de5\u4f5c\uff0c\u56e0\u6b64\u8ddf\u4e0a\u7535\u5b50\u90ae\u4ef6\u6ca1\u6709\u95ee\u9898\u3002\u9ea6\u514b\u7a81\u7136\u6709\u5f88\u591a\u65f6\u95f4\u5728\u4ed6\u7684\u529e\u516c\u5ba4\u91cc\uff0c\u4ed6\u4f1a\u5750\u5728\u529e\u516c\u5ba4\u91cc\u5e7b\u60f3\u7740\u767d\u8272\u7684\u6c99\u6ee9\u3001\u6e5b\u84dd\u7684\u6d77\u6c34\u548c\u5e26\u5c0f\u7eb8\u4f1e\u7684\u996e\u6599\u3002\u51e0\u4e2a\u6708\u540e\uff0c\u7a0b\u5e8f\u5458\u610f\u8bc6\u5230\u6ca1\u6709\u4eba\u89c1\u8fc7 Mac \u5f88\u957f\u65f6\u95f4\u4e86\u3002\u5f53\u4ed6\u4eec\u6765\u5230\u4ed6\u7684\u529e\u516c\u5ba4\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u6240\u6709\u4e1c\u897f\u90fd\u8986\u76d6\u7740\u4e00\u5c42\u8584\u8584\u7684\u7070\u5c18\uff0c\u4e00\u5f20\u684c\u5b50\u4e0a\u6563\u843d\u7740\u5404\u79cd\u70ed\u5e26\u5730\u533a\u7684\u65c5\u6e38\u624b\u518c\uff0c\u7535\u8111\u4e5f\u5173\u673a\u4e86\u3002\u4f46\u662f\u7f16\u8bd1\u5668\u4ecd\u7136\u53ef\u4ee5\u5de5\u4f5c\u2014\u2014\u600e\u4e48\u4f1a\u5462\uff1f\u4e8b\u5b9e\u8bc1\u660e\uff0cMac \u5bf9\u7f16\u8bd1\u5668\u8fdb\u884c\u4e86\u6700\u540e\u4e00\u6b21\u66f4\u6539\uff1a\u7f16\u8bd1\u5668\u73b0\u5728\u4fdd\u5b58\u4e86 DEFMACRO \u6ce8\u91ca\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u5e76\u5728\u5176\u4ed6\u6ce8\u91ca\u8c03\u7528\u65f6\u8fd0\u884c\u5b83\u4eec\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6\u5411 Mac \u53d1\u9001\u6ce8\u91ca\u3002\u7a0b\u5e8f\u5458\u4eec\u51b3\u5b9a\u6ca1\u6709\u7406\u7531\u544a\u8bc9\u5927\u8001\u677f Mac \u4e0d\u518d\u6765\u529e\u516c\u5ba4\u4e86\u3002\u6240\u4ee5\u76f4\u5230\u4eca\u5929\uff0cMac \u62ff\u4e00\u4efd\u85aa\u6c34\uff0c\u4e0d\u65f6\u7ed9\u7a0b\u5e8f\u5458\u5bc4\u4e00\u5f20\u6765\u81ea\u4e00\u4e2a\u70ed\u5e26\u5730\u533a\u6216\u53e6\u4e00\u4e2a\u5730\u65b9\u7684\u660e\u4fe1\u7247\u3002\u7406\u89e3\u5b8f\u7684\u5173\u952e\u662f\u975e\u5e38\u6e05\u695a\u751f\u6210\u4ee3\u7801\u7684\u4ee3\u7801\uff08\u5b8f\uff09\u548c\u6700\u7ec8\u6784\u6210\u7a0b\u5e8f\u7684\u4ee3\u7801\uff08\u5176\u4ed6\u4e00\u5207\uff09\u4e4b\u95f4\u7684\u533a\u522b\u3002\u5f53\u60a8\u7f16\u5199\u5b8f\u65f6\uff0c\u60a8\u6b63\u5728\u7f16\u5199\u7a0b\u5e8f\uff0c\u7f16\u8bd1\u5668\u5c06\u4f7f\u7528\u8fd9\u4e9b\u7a0b\u5e8f\u6765\u751f\u6210\u968f\u540e\u5c06\u88ab\u7f16\u8bd1\u7684\u4ee3\u7801\u3002\u53ea\u6709\u5728\u5b8f\u5b8c\u5168\u5c55\u5f00\u5e76\u7f16\u8bd1\u751f\u6210\u7684\u4ee3\u7801\u4e4b\u540e\uff0c\u7a0b\u5e8f\u624d\u80fd\u771f\u6b63\u8fd0\u884c\u3002\u5b8f\u8fd0\u884c\u7684\u65f6\u95f4\u79f0\u4e3a\u5b8f\u5c55\u5f00\u65f6\u95f4\uff1b\u8fd9\u4e0e\u8fd0\u884c\u65f6\u4e0d\u540c\uff0c\u5f53\u5e38\u89c4\u4ee3\u7801\uff08\u5305\u62ec\u5b8f\u751f\u6210\u7684\u4ee3\u7801\uff09\u8fd0\u884c\u65f6\u3002\u7262\u8bb0\u8fd9\u79cd\u533a\u522b\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5728\u5b8f\u6269\u5c55\u65f6\u8fd0\u884c\u7684\u4ee3\u7801\u4e0e\u8fd0\u884c\u65f6\u8fd0\u884c\u7684\u4ee3\u7801\u5728\u975e\u5e38\u4e0d\u540c\u7684\u73af\u5883\u4e2d\u8fd0\u884c\u3002\u5373\uff0c\u5728\u5b8f\u6269\u5c55\u65f6\uff0c\u65e0\u6cd5\u8bbf\u95ee\u8fd0\u884c\u65f6\u5c06\u5b58\u5728\u7684\u6570\u636e\u3002\u50cf Mac \u4e00\u6837\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u77e5\u9053\u6b63\u786e\u7684\u8f93\u5165\u662f\u4ec0\u4e48\u800c\u65e0\u6cd5\u8fd0\u884c\u4ed6\u6b63\u5728\u5f00\u53d1\u7684\u7a0b\u5e8f\uff0c\u5728\u5b8f\u6269\u5c55\u65f6\u8fd0\u884c\u7684\u4ee3\u7801\u53ea\u80fd\u5904\u7406\u6e90\u4ee3\u7801\u4e2d\u56fa\u6709\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4ee5\u4e0b\u6e90\u4ee3\u7801\u51fa\u73b0\u5728\u7a0b\u5e8f\u4e2d\u7684\u67d0\u5904\uff1a \u901a\u5e38\u60a8\u4f1a\u8ba4\u4e3a x \u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b83\u5c06\u4fdd\u5b58\u5728\u5bf9 foo \u7684\u8c03\u7528\u4e2d\u4f20\u9012\u7684\u53c2\u6570\u3002\u4f46\u662f\u5728\u5b8f\u6269\u5c55\u65f6\uff0c\u4f8b\u5982\u7f16\u8bd1\u5668\u8fd0\u884c WHEN \u5b8f\u65f6\uff0c\u552f\u4e00\u53ef\u7528\u7684\u6570\u636e\u662f\u6e90\u4ee3\u7801\u3002\u7531\u4e8e\u7a0b\u5e8f\u5c1a\u672a\u8fd0\u884c\uff0c\u56e0\u6b64\u6ca1\u6709\u8c03\u7528 foo\uff0c\u56e0\u6b64\u6ca1\u6709\u4e0e x \u5173\u8054\u7684\u503c\u3002\u76f8\u53cd\uff0c\u7f16\u8bd1\u5668\u4f20\u9012\u7ed9 WHEN \u7684\u503c\u662f\u8868\u793a\u6e90\u4ee3\u7801\u7684 Lisp \u5217\u8868\uff0c\u5373 (&gt; x 10) \u548c (print &#39;big)\u3002\u5047\u8bbe WHEN \u5b9a\u4e49\u4e3a\uff0c\u5982\u60a8\u5728\u524d\u4e00\u7ae0\u4e2d\u770b\u5230\u7684\uff0c\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u4ee5\u4e0b\u5b8f\u7684\u5185\u5bb9\uff1a\n\u7f16\u8bd1 foo \u4e2d\u7684\u4ee3\u7801\u65f6\uff0c WHEN \u5b8f\u5c06\u4ee5\u8fd9\u4e24\u79cd\u5f62\u5f0f\u4f5c\u4e3a\u53c2\u6570\u8fd0\u884c\u3002\u53c2\u6570condition \u5c06\u7ed1\u5b9a\u5230\u8868\u5355(&gt; x 10)\uff0c\u8868\u5355(print&#39;big) \u5c06\u88ab\u6536\u96c6\u5230\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u8be5\u5217\u8868\u5c06\u6210\u4e3a&amp;rest body \u53c2\u6570\u7684\u503c\u3002\u7136\u540e\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u5c06\u751f\u6210\u4ee5\u4e0b\u4ee3\u7801\uff1a\u901a\u8fc7\u63d2\u5165\u6761\u4ef6\u503c\u5e76\u5c06 body \u503c\u62fc\u63a5\u5230 PROGN \u4e2d\u3002\u5f53 Lisp \u88ab\u89e3\u91ca\u800c\u4e0d\u662f\u7f16\u8bd1\u65f6\uff0c\u5b8f\u6269\u5c55\u65f6\u95f4\u548c\u8fd0\u884c\u65f6\u4e4b\u95f4\u7684\u533a\u522b\u4e0d\u592a\u6e05\u695a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u65f6\u95f4\u4e0a\u662f\u4ea4\u7ec7\u5728\u4e00\u8d77\u7684\u3002\u6b64\u5916\uff0c\u8bed\u8a00\u6807\u51c6\u5e76\u6ca1\u6709\u5177\u4f53\u89c4\u5b9a\u89e3\u91ca\u5668\u5fc5\u987b\u5982\u4f55\u5904\u7406\u5b8f\u2014\u2014\u5b83\u53ef\u4ee5\u5728\u88ab\u89e3\u91ca\u7684\u8868\u5355\u4e2d\u5c55\u5f00\u6240\u6709\u5b8f\uff0c\u7136\u540e\u89e3\u91ca\u7ed3\u679c\u4ee3\u7801\uff0c\u6216\u8005\u5b83\u53ef\u4ee5\u5728\u89e3\u91ca\u8868\u5355\u65f6\u7acb\u5373\u5f00\u59cb\u5e76\u5728\u9047\u5230\u5b8f\u65f6\u5c55\u5f00\u5b8f\u3002\u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b8f\u603b\u662f\u4f20\u9012\u4ee3\u8868\u5b8f\u5f62\u5f0f\u7684\u5b50\u5f62\u5f0f\u7684\u672a\u8ba1\u7b97\u7684 Lisp \u5bf9\u8c61\uff0c\u5e76\u4e14\u5b8f\u7684\u5de5\u4f5c\u4ecd\u7136\u662f\u751f\u6210\u53ef\u4ee5\u505a\u67d0\u4e8b\u800c\u4e0d\u662f\u76f4\u63a5\u505a\u4efb\u4f55\u4e8b\u60c5\u7684\u4ee3\u7801\u3002\u6b63\u5982\u4f60\u5728\u7b2c 3 \u7ae0\u4e2d\u770b\u5230\u7684\uff0c\u5b8f\u786e\u5b9e\u662f\u7528 DEFMACROforms \u5b9a\u4e49\u7684\uff0c\u5c3d\u7ba1\u5b83\u4ee3\u8868\u2014\u2014\u5f53\u7136\u2014\u2014\u4ee3\u8868 DEFine MACRO\uff0c\u800c\u4e0d\u662f Definitionfor Mac\u3002 DEFMACRO \u7684\u57fa\u672c\u9aa8\u67b6\u4e0e DEFUN \u7684\u9aa8\u67b6\u975e\u5e38\u76f8\u4f3c\u3002\u4e0e\u51fd\u6570\u4e00\u6837\uff0c\u5b8f\u7531\u540d\u79f0\u3001\u53c2\u6570\u5217\u8868\u3001\u53ef\u9009\u7684\u6587\u6863\u5b57\u7b26\u4e32\u548c Lisp \u8868\u8fbe\u5f0f\u4e3b\u4f53\u7ec4\u6210\u3002 1\u7136\u800c\uff0c\u6b63\u5982\u6211\u521a\u624d\u6240\u8ba8\u8bba\u7684\uff0c\u5b8f\u7684\u5de5\u4f5c\u4e0d\u662f\u76f4\u63a5\u505a\u4efb\u4f55\u4e8b\u60c5\u2014\u2014\u5b83\u7684\u5de5\u4f5c\u662f\u751f\u6210\u7a0d\u540e\u4f1a\u505a\u4f60\u60f3\u505a\u7684\u4e8b\u60c5\u7684\u4ee3\u7801\u3002\u5b8f\u53ef\u4ee5\u4f7f\u7528 Lisp \u7684\u5168\u90e8\u529f\u80fd\u6765\u751f\u6210\u5b83\u4eec\u7684\u6269\u5c55\uff0c\u8fd9\u610f\u5473\u7740\u5728\u672c\u7ae0\u4e2d\u6211\u53ea\u80fd\u89e6\u53ca\u5b8f\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u7684\u76ae\u6bdb\u3002\u7136\u800c\uff0c\u6211\u53ef\u4ee5\u63cf\u8ff0\u4e00\u4e2a\u7f16\u5199\u5b8f\u7684\u4e00\u822c\u8fc7\u7a0b\uff0c\u5b83\u9002\u7528\u4e8e\u4ece\u6700\u7b80\u5355\u5230\u6700\u590d\u6742\u7684\u6240\u6709\u5b8f\u3002\u5b8f\u7684\u5de5\u4f5c\u662f\u5c06\u5b8f\u5f62\u5f0f\u2014\u2014\u6362\u8a00\u4e4b\uff0c\u5176\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5b8f\u540d\u79f0\u7684 Lisp \u5f62\u5f0f\u2014\u2014\u7ffb\u8bd1\u6210\u6267\u884c\u7279\u5b9a\u64cd\u4f5c\u7684\u4ee3\u7801\u3002\u6709\u65f6\u60a8\u4f1a\u4ece\u60a8\u5e0c\u671b\u80fd\u591f\u7f16\u5199\u7684\u4ee3\u7801\u5f00\u59cb\u7f16\u5199\u5b8f\uff0c\u5373\u4f7f\u7528\u793a\u4f8b\u5b8f\u5f62\u5f0f\u3002\u5176\u4ed6\u65f6\u5019\uff0c\u60a8\u5728\u591a\u6b21\u7f16\u5199\u76f8\u540c\u6a21\u5f0f\u7684\u4ee3\u7801\u540e\u51b3\u5b9a\u7f16\u5199\u5b8f\uff0c\u5e76\u610f\u8bc6\u5230\u53ef\u4ee5\u901a\u8fc7\u62bd\u8c61\u6a21\u5f0f\u4f7f\u4ee3\u7801\u66f4\u6e05\u6670\u3002\n\u65e0\u8bba\u60a8\u4ece\u54ea\u4e00\u7aef\u5f00\u59cb\uff0c\u5728\u5f00\u59cb\u7f16\u5199\u5b8f\u4e4b\u524d\uff0c\u60a8\u90fd\u9700\u8981\u5f04\u6e05\u695a\u53e6\u4e00\u7aef\uff1a\u60a8\u9700\u8981\u77e5\u9053\u81ea\u5df1\u4ece\u54ea\u91cc\u6765\u548c\u8981\u53bb\u54ea\u91cc\uff0c\u7136\u540e\u624d\u80fd\u5e0c\u671b\u7f16\u5199\u4ee3\u7801\u6765\u81ea\u52a8\u6267\u884c\u5b83\u3002\u56e0\u6b64\uff0c\u7f16\u5199\u5b8f\u7684\u7b2c\u4e00\u6b65\u662f\u7f16\u5199\u81f3\u5c11\u4e00\u4e2a\u5b8f\u8c03\u7528\u793a\u4f8b\u4ee5\u53ca\u8be5\u8c03\u7528\u5e94\u6269\u5c55\u5230\u7684\u4ee3\u7801\u3002\u4e00\u65e6\u60a8\u6709\u4e86\u4e00\u4e2a\u793a\u4f8b\u8c03\u7528\u548c\u6240\u9700\u7684\u6269\u5c55\uff0c\u60a8\u5c31\u53ef\u4ee5\u8fdb\u884c\u7b2c\u4e8c\u6b65\u4e86\uff1a\u7f16\u5199\u5b9e\u9645\u7684\u5b8f\u4ee3\u7801\u3002\u5bf9\u4e8e\u7b80\u5355\u7684\u5b8f\uff0c\u8fd9\u5c06\u662f\u7f16\u5199\u53cd\u5f15\u53f7\u6a21\u677f\u5e76\u5c06\u5b8f\u53c2\u6570\u63d2\u5165\u6b63\u786e\u4f4d\u7f6e\u7684\u5fae\u4e0d\u8db3\u9053\u7684\u4e8b\u60c5\u3002\u590d\u6742\u7684\u5b8f\u672c\u8eab\u5c31\u662f\u91cd\u8981\u7684\u7a0b\u5e8f\uff0c\u5177\u6709\u8f85\u52a9\u51fd\u6570\u548c\u6570\u636e\u7ed3\u6784\u3002\u5728\u7f16\u5199\u4ee3\u7801\u5c06\u793a\u4f8b\u8c03\u7528\u8f6c\u6362\u4e3a\u9002\u5f53\u7684\u6269\u5c55\u4e4b\u540e\uff0c\u60a8\u9700\u8981\u786e\u4fdd\u5b8f\u63d0\u4f9b\u7684\u62bd\u8c61\u4e0d\u4f1a\u201c\u6cc4\u6f0f\u201d\u5176\u5b9e\u73b0\u7684\u7ec6\u8282\u3002 Leakymacro \u62bd\u8c61\u5bf9\u4e8e\u67d0\u4e9b\u53c2\u6570\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u4e0d\u80fd\u7528\u4e8e\u5176\u4ed6\u53c2\u6570\uff0c\u6216\u8005\u4f1a\u4ee5\u4e0d\u53d7\u6b22\u8fce\u7684\u65b9\u5f0f\u4e0e\u8c03\u7528\u73af\u5883\u4e2d\u7684\u4ee3\u7801\u4ea4\u4e92\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5b8f\u53ef\u80fd\u4ee5\u5c11\u6570\u51e0\u79cd\u65b9\u5f0f\u6cc4\u6f0f\uff0c\u53ea\u8981\u60a8\u77e5\u9053\u68c0\u67e5\u5b83\u4eec\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u5f88\u5bb9\u6613\u907f\u514d\u3002\u6211\u5c06\u5728\u201c\u5835\u6f0f\u201d\u4e00\u8282\u4e2d\u8ba8\u8bba\u5982\u4f55\u505a\u3002\u7f16\u5199\u5bf9\u5b8f\u53ca\u5176\u5e94\u6269\u5c55\u5230\u7684\u4ee3\u7801\u7684\u793a\u4f8b\u8c03\u7528\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u8981\u4e86\u89e3\u8fd9\u4e2a\u4e09\u6b65\u8fc7\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u60a8\u5c06\u7f16\u5199\u4e00\u4e2a\u5b8f do-primes\uff0c\u5b83\u63d0\u4f9b\u7c7b\u4f3c\u4e8e DOTIMES \u548c DOLIST \u7684\u5faa\u73af\u6784\u9020\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4e0d\u662f\u8fed\u4ee3\u6574\u6570\u6216\u5217\u8868\u5143\u7d20\uff0c\u800c\u662f\u8fed\u4ee3\u8fde\u7eed\u7684\u7d20\u6570\u3002\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u7279\u522b\u6709\u7528\u7684\u5b8f\u7684\u4f8b\u5b50\u2014\u2014\u5b83\u53ea\u662f\u4e00\u4e2a\u6f14\u793a\u8fc7\u7a0b\u7684\u5de5\u5177\u3002\u9996\u5148\uff0c\u60a8\u9700\u8981\u4e24\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570\uff0c\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u7ed9\u5b9a\u6570\u5b57\u662f\u5426\u4e3a\u7d20\u6570\uff0c\u53e6\u4e00\u4e2a\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u53c2\u6570\u7684\u7d20\u6570\u3002\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u90fd\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u4f46\u6548\u7387\u4f4e\u4e0b\u7684\u86ee\u529b\u65b9\u6cd5\u3002 (defun primep (number) (when (&gt; number 1) (loop for fac from 2 to (isqrt number) never (zerop (mod number fac)))))(defun next-prime (number) (loop for n from number)\u5f53 (primep n) \u8fd4\u56de n))\n\u73b0\u5728\u60a8\u53ef\u4ee5\u7f16\u5199\u5b8f\u3002\u6309\u7167\u524d\u9762\u6982\u8ff0\u7684\u8fc7\u7a0b\uff0c\u60a8\u81f3\u5c11\u9700\u8981\u4e00\u4e2a\u5b8f\u8c03\u7528\u793a\u4f8b\u4ee5\u53ca\u5b8f\u5e94\u8be5\u6269\u5c55\u5230\u7684\u4ee3\u7801\u3002\u5047\u8bbe\u60a8\u4ece\u5e0c\u671b\u80fd\u591f\u8fd9\u6837\u5199\u7684\u60f3\u6cd5\u5f00\u59cb\uff1a\u8868\u8fbe\u4e00\u4e2a\u5faa\u73af\uff0c\u8be5\u5faa\u73af\u5bf9\u6bcf\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e 0 \u4e14\u5c0f\u4e8e\u6216\u7b49\u4e8e 19 \u7684\u8d28\u6570\u6267\u884c\u4e00\u6b21\u5faa\u73af\u4f53\uff0c\u53d8\u91cf p \u4fdd\u5b58\u8d28\u6570\u3002\u4ee5\u6807\u51c6 DOLIST \u548c DOTIMES \u5b8f\u7684\u5f62\u5f0f\u5bf9\u8fd9\u4e2a\u5b8f\u8fdb\u884c\u5efa\u6a21\u662f\u6709\u610f\u4e49\u7684\uff1b\u9075\u5faa\u73b0\u6709\u5b8f\u6a21\u5f0f\u7684\u5b8f\u6bd4\u65e0\u7f18\u65e0\u6545\u5f15\u5165\u65b0\u8bed\u6cd5\u7684\u5b8f\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u4f7f\u7528\u3002\u5982\u679c\u6ca1\u6709 do-primes \u5b8f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 DO\uff08\u4ee5\u53ca\u4e4b\u524d\u5b9a\u4e49\u7684\u4e24\u4e2a\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570\uff09\u7f16\u5199\u8fd9\u6837\u4e00\u4e2a\u5faa\u73af\uff0c\u5982\u4e0b\u6240\u793a\uff1a (do ((p (next-prime 0) (next-prime (1+ p)))) ((&gt; p 19)) (format t &quot;~d &quot; p)) \u73b0\u5728\u60a8\u5df2\u51c6\u5907\u597d\u5f00\u59cb\u7f16\u5199\u5c06\u4ece\u524d\u8005\u8f6c\u6362\u4e3a\u540e\u8005\u7684\u5b8f\u4ee3\u7801\u3002\u7531\u4e8e\u4f20\u9012\u7ed9\u5b8f\u7684\u53c2\u6570\u662f\u8868\u793a\u5b8f\u8c03\u7528\u6e90\u4ee3\u7801\u7684 Lisp \u5bf9\u8c61\uff0c\u56e0\u6b64\u4efb\u4f55\u5b8f\u7684\u7b2c\u4e00\u6b65\u90fd\u662f\u63d0\u53d6\u8fd9\u4e9b\u5bf9\u8c61\u4e2d\u8ba1\u7b97\u6269\u5c55\u6240\u9700\u7684\u4efb\u4f55\u90e8\u5206\u3002\u5bf9\u4e8e\u7b80\u5355\u5730\u5c06\u5176\u53c2\u6570\u76f4\u63a5\u63d2\u5165\u5230\u6a21\u677f\u4e2d\u7684\u5b8f\uff0c\u8fd9\u4e00\u6b65\u662f\u5fae\u4e0d\u8db3\u9053\u7684\uff1a\u53ea\u9700\u5b9a\u4e49\u6b63\u786e\u7684\u53c2\u6570\u6765\u4fdd\u5b58\u4e0d\u540c\u7684\u53c2\u6570\u5c31\u8db3\u591f\u4e86\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4f3c\u4e4e\u5bf9 do-primes \u4e0d\u591f\u7528\u3002do-primes \u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5305\u542b\u5faa\u73af\u53d8\u91cf\u540d\u79f0 p \u7684\u5217\u8868\uff1b\u4e0b\u9650\u4e3a 0\uff1b\u4e0a\u9650\u4e3a 19\u3002\u4f46\u662f\u5982\u679c\u60a8\u67e5\u770b\u5c55\u5f00\u5f0f\uff0c\u6574\u4e2a\u5217\u8868\u5e76\u672a\u51fa\u73b0\u5728\u5c55\u5f00\u5f0f\u4e2d\uff1b\u4e09\u4e2a\u5143\u7d20\u88ab\u5206\u5f00\u5e76\u653e\u7f6e\u5728\u4e0d\u540c\u7684\u5730\u65b9\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u53c2\u6570\u5b9a\u4e49 do-primes\uff0c\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u5217\u8868\uff0c\u4e00\u4e2a &amp;rest \u53c2\u6570\u7528\u4e8e\u4fdd\u5b58\u4e3b\u4f53\u5f62\u5f0f\uff0c\u7136\u540e\u624b\u52a8\u62c6\u5206\u5217\u8868\uff0c\u5982\u4e0b\u6240\u793a\uff1a(defmacro do-primes (var-and-range &amp;rest body) (let ((var (first var-and-range)) (start (second var-and-range)) (end (third var-and-range))) `(do ((,var (next-prime ,start) ) (next-prime (1+ ,var)))) ((&gt; ,var ,end)) ,@body))) \u7a0d\u540e\u6211\u5c06\u89e3\u91ca\u4e3b\u4f53\u5982\u4f55\u4ea7\u751f\u6b63\u786e\u7684\u6269\u5c55\uff1b\u73b0\u5728\u4f60\u53ef\u4ee5\u6ce8\u610f\u5230\u53d8\u91cf var\u3001start \u548c end \u6bcf\u4e2a\u90fd\u5305\u542b\u4e00\u4e2a\u503c\uff0c\u4ece var-and-range \u4e2d\u63d0\u53d6\uff0c\u7136\u540e\u63d2\u5165\u5230\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u4e2d\uff0c\u751f\u6210 do-primes \u7684\u6269\u5c55\u3002\u4f46\u662f\uff0c\u60a8\u4e0d\u9700\u8981\u201c\u624b\u52a8\u201d\u62c6\u5206 var-and-range\uff0c\u56e0\u4e3a\u5b8f\u53c2\u6570\u5217\u8868\u5c31\u662f\u6240\u8c13\u7684\u89e3\u6784\u53c2\u6570\u5217\u8868\u3002\u987e\u540d\u601d\u4e49\uff0c\u89e3\u6784\u6d89\u53ca\u5206\u89e3\u4e00\u4e2a\u7ed3\u6784\u2014\u2014\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u4f20\u9012\u7ed9\u5b8f\u7684\u8868\u5355\u7684\u5217\u8868\u7ed3\u6784\u3002\u5728\u89e3\u6784\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u53ef\u4ee5\u7528\u5d4c\u5957\u53c2\u6570\u5217\u8868\u66ff\u6362\u7b80\u5355\u7684\u53c2\u6570\u540d\u79f0\u3002\u5d4c\u5957\u53c2\u6570\u5217\u8868\u4e2d\u7684\u53c2\u6570\u5c06\u4ece\u5df2\u7ed1\u5b9a\u5230\u5217\u8868\u66ff\u6362\u7684\u53c2\u6570\u7684\u8868\u8fbe\u5f0f\u7684\u5143\u7d20\u4e2d\u83b7\u53d6\u5b83\u4eec\u7684\u503c\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5c06 var-and-range \u66ff\u6362\u4e3a alist (var start end)\uff0c\u5217\u8868\u4e2d\u7684\u4e09\u4e2a\u5143\u7d20\u5c06\u81ea\u52a8\u89e3\u6784\u4e3a\u8fd9\u4e09\u4e2a\u53c2\u6570\u3002\u5b8f\u53c2\u6570\u5217\u8868\u7684\u53e6\u4e00\u4e2a\u7279\u70b9\u662f\u60a8\u53ef\u4ee5\u4f7f\u7528 &amp;body \u4f5c\u4e3a &amp;rest \u7684\u540c\u4e49\u8bcd\u3002\u5728\u8bed\u4e49\u4e0a &amp;body \u548c &amp;rest \u662f\u7b49\u4ef7\u7684\uff0c\u4f46\u8bb8\u591a\u5f00\u53d1\u73af\u5883\u5c06\u4f7f\u7528 &amp;body \u53c2\u6570\u7684\u5b58\u5728\u6765\u4fee\u6539\u5b83\u4eec\u5982\u4f55\u7f29\u8fdb\u4f7f\u7528\u5b8f\u2014\u2014\u901a\u5e38 &amp;body \u53c2\u6570\u7528\u4e8e\u4fdd\u5b58\u7ec4\u6210\u5b8f\u4e3b\u4f53\u7684\u8868\u5355\u5217\u8868\u3002\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u7b80\u5316 do-primes \u7684\u5b9a\u4e49\uff0c\u5e76\u901a\u8fc7\u5982\u4e0b\u5b9a\u4e49\u5411\u4eba\u7c7b\u8bfb\u8005\u548c\u60a8\u7684\u5f00\u53d1\u5de5\u5177\u63d0\u4f9b\u6709\u5173\u5176\u9884\u671f\u7528\u9014\u7684\u63d0\u793a\uff1a\n(defmacro do-primes ((var start end) &amp;body body) `(do ((,var (next-prime ,start) (next-prime (1+ ,var)))) ((&gt; ,var ,end)) ,@body)) \u9664\u4e86\u66f4\u7b80\u6d01\u4e4b\u5916\uff0c\u89e3\u6784\u53c2\u6570\u5217\u8868\u8fd8\u4e3a\u60a8\u63d0\u4f9b\u81ea\u52a8\u9519\u8bef\u68c0\u67e5\u2014\u2014\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u5b9a\u4e49\u7684 do-primes\uff0cLisp \u5c06\u80fd\u591f\u68c0\u6d4b\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u662f\u4e09\u5143\u7d20\u5217\u8868\u7684\u8c03\u7528\uff0c\u5e76\u4e14\u4f1a\u7ed9\u51fa\u60a8\u4f1a\u6536\u5230\u4e00\u6761\u6709\u610f\u4e49\u7684\u9519\u8bef\u6d88\u606f\uff0c\u5c31\u50cf\u60a8\u8c03\u7528\u4e86\u4e00\u4e2a\u53c2\u6570\u592a\u5c11\u6216\u592a\u591a\u7684\u51fd\u6570\u4e00\u6837\u3002\u6b64\u5916\uff0c\u5728 SLIME \u7b49\u5f00\u53d1\u73af\u5883\u4e2d\uff0c\u53ea\u8981\u60a8\u8f93\u5165\u51fd\u6570\u6216\u5b8f\u7684\u540d\u79f0\uff0c\u5c31\u4f1a\u6307\u793a\u9884\u671f\u7684\u53c2\u6570\uff0c\u5982\u679c\u60a8\u4f7f\u7528\u89e3\u6784\u53c2\u6570\u5217\u8868\uff0c\u73af\u5883\u5c06\u80fd\u591f\u66f4\u5177\u4f53\u5730\u544a\u8bc9\u4f60\u5b8f\u8c03\u7528\u7684\u8bed\u6cd5\u3002\u4f7f\u7528\u539f\u59cb\u5b9a\u4e49\uff0cSLIME \u4f1a\u544a\u8bc9\u60a8 do-primes \u662f\u8fd9\u6837\u8c03\u7528\u7684\uff1a \u4f46\u662f\u4f7f\u7528\u65b0\u5b9a\u4e49\uff0c\u5b83\u53ef\u4ee5\u544a\u8bc9\u60a8\u8c03\u7528\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a \u89e3\u6784\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u5305\u542b &amp;optional\u3001&amp;key \u548c &amp;rest \u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u4ee5\u5305\u542b\u5d4c\u5957\u89e3\u6784\u5217\u8868\u3002\u4f46\u662f\uff0c\u60a8\u4e0d\u9700\u8981\u4efb\u4f55\u8fd9\u4e9b\u9009\u9879\u6765\u7f16\u5199 do-primes\u3002\u56e0\u4e3a do-primes \u662f\u4e00\u4e2a\u76f8\u5f53\u7b80\u5355\u7684\u5b8f\uff0c\u5728\u60a8\u89e3\u6784\u53c2\u6570\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u5c06 themin \u63d2\u5165\u5230\u6a21\u677f\u4e2d\u4ee5\u83b7\u5f97\u6269\u5c55\u3002\u5bf9\u4e8e\u50cf do-primes \u8fd9\u6837\u7684\u7b80\u5355\u5b8f\uff0c\u7279\u6b8a\u7684\u53cd\u5f15\u53f7\u8bed\u6cd5\u662f\u5b8c\u7f8e\u7684\u3002\u56de\u987e\u4e00\u4e0b\uff0c\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u7c7b\u4f3c\u4e8e\u5e26\u5f15\u53f7\u7684\u8868\u8fbe\u5f0f\uff0c\u4f46\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u7279\u5b9a\u5b50\u8868\u8fbe\u5f0f\u524d\u9762\u52a0\u4e0a\u9017\u53f7\u6765\u201c\u53d6\u6d88\u5f15\u7528\u201d\u5b83\u4eec\uff0c\u53ef\u80fd\u540e\u8ddf at (@) \u7b26\u53f7\u3002\u5982\u679c\u6ca1\u6709 at \u7b26\u53f7\uff0c\u9017\u53f7\u4f1a\u5bfc\u81f4\u5305\u542b\u5b50\u8868\u8fbe\u5f0f\u7684\u503c\u7167\u539f\u6837\u3002\u5e26\u6709 at \u7b26\u53f7\u7684\u503c\u2014\u2014\u5fc5\u987b\u662f alist\u2014\u2014\u88ab\u201c\u62fc\u63a5\u201d\u5230\u5c01\u95ed\u5217\u8868\u4e2d\u3002\u8003\u8651\u53cd\u5f15\u53f7\u8bed\u6cd5\u7684\u53e6\u4e00\u79cd\u6709\u7528\u65b9\u6cd5\u662f\u7f16\u5199\u751f\u6210\u5217\u8868\u7684\u4ee3\u7801\u7684\u7279\u522b\u7b80\u6d01\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u601d\u8003\u65b9\u5f0f\u7684\u597d\u5904\u662f\u51e0\u4e4e\u53ef\u4ee5\u51c6\u786e\u4e86\u89e3\u5e55\u540e\u53d1\u751f\u7684\u4e8b\u60c5\u2014\u2014\u5f53\u8bfb\u8005\u9605\u8bfb\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u65f6\uff0c\u5b83\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a\u751f\u6210\u9002\u5f53\u5217\u8868\u7ed3\u6784\u7684\u4ee3\u7801\u3002\u4f8b\u5982\uff0c`(,ab) \u53ef\u80fd\u8bfb\u4f5c (list a &#39;b)\u3002\u8bed\u8a00\u6807\u51c6\u5e76\u6ca1\u6709\u5177\u4f53\u6307\u5b9a\u8bfb\u8005\u5fc5\u987b\u751f\u6210\u4ec0\u4e48\u4ee3\u7801\uff0c\u53ea\u8981\u5b83\u751f\u6210\u53f3\u8868\u7ed3\u6784\u5373\u53ef\u3002\n\u8868 8-1 \u663e\u793a\u4e86\u4e00\u4e9b\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\u4ee5\u53ca\u7b49\u6548\u7684\u5217\u8868\u6784\u5efa\u4ee3\u7801\uff0c\u4ee5\u53ca\u8ba1\u7b97\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f\u6216\u7b49\u6548\u4ee3\u7801\u65f6\u5f97\u5230\u7684\u7ed3\u679c\u3002 2 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53cd\u5f15\u53f7\u53ea\u662f\u4e00\u79cd\u65b9\u4fbf\u3002\u4f46\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u65b9\u4fbf\u3002\u8981\u4e86\u89e3\u6709\u591a\u5927\uff0c\u8bf7\u5c06 do-primes \u7684\u53cd\u5f15\u53f7\u7248\u672c\u4e0e\u4ee5\u4e0b\u7248\u672c\u8fdb\u884c\u6bd4\u8f83\uff0c\u8be5\u7248\u672c\u4f7f\u7528\u663e\u5f0f\u5217\u8868\u6784\u5efa\u4ee3\u7801\uff1a (defmacro do-primes-a ((var start end) &amp;body body) (append &#39;(do) (list (list) (list var (list &#39;next-prime start) (list &#39;next-prime (list &#39;1+ var))))) (list (list (list &#39;&gt; var end)))) body))\u7247\u523b\uff0c do-primes \u7684\u5f53\u524d\u5b9e\u73b0\u4e0d\u80fd\u6b63\u786e\u5904\u7406\u67d0\u4e9b\u8fb9\u7f18\u60c5\u51b5\u3002\u4f46\u662f\u9996\u5148\u60a8\u5e94\u8be5\u9a8c\u8bc1\u5b83\u81f3\u5c11\u9002\u7528\u4e8e\u539f\u59cb\u793a\u4f8b\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u6d4b\u8bd5\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u5730\u4f7f\u7528\u5b83\u6765\u95f4\u63a5\u6d4b\u8bd5\u5b83\u2014\u2014\u5927\u6982\uff0c\u5982\u679c\u7ed3\u679c\u884c\u4e3a\u662f\u6b63\u786e\u7684\uff0c\u5219\u6269\u5c55\u662f\u6b63\u786e\u7684\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5728 REPL \u4e2d\u8f93\u5165\u539f\u59cb\u793a\u4f8b\u5bf9 do-primes \u7684\u4f7f\u7528\uff0c\u5e76\u770b\u5230\u5b83\u786e\u5b9e\u6253\u5370\u4e86\u6b63\u786e\u7684\u7d20\u6570\u7cfb\u5217\u3002 CL-USER&gt; (do-primes (p 0 19) (format t &quot;~d &quot; p))2 3 5 7 11 13 17 19NIL \u6216\u8005\u76f4\u63a5\u67e5\u770b\u7279\u5b9a\u8c03\u7528\u7684\u5c55\u5f00\u67e5\u770b\u5b8f\u3002\u51fd\u6570 MACROEXPAND-1 \u5c06\u4efb\u4f55 Lisp \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u53c2\u6570\u5e76\u8fd4\u56de\u6267\u884c\u4e00\u7ea7\u5b8f\u6269\u5c55\u7684\u7ed3\u679c\u3002 3 \u56e0\u4e3a MACROEXPAND-1 \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8981\u4f20\u9012\u7ed9\u5b83\u4e00\u4e2a\u6587\u5b57\u5b8f\u5f62\u5f0f\uff0c\u4f60\u5fc5\u987b\u5f15\u7528\u5b83\u3002\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u67e5\u770b\u9884......", "note_en": "Now it&#39;s time to start writing your own macros. The standard macros Icovered in the previous chapter hint at some of the things you can dowith macros, but that&#39;s just the beginning. Common Lisp doesn&#39;tsupport macros so every Lisp programmer can create their own variantsof standard control constructs any more than C supports functions soevery C programmer can write trivial variants of the functions in theC standard library. Macros are part of the language to allow you tocreate abstractions on top of the core language and standard librarythat move you closer toward being able to directly express the thingsyou want to express.\n Perhaps the biggest barrier to a proper understanding of macros is,ironically, that they&#39;re so well integrated into the language. Inmany ways they seem like just a funny kind of function--they&#39;rewritten in Lisp, they take arguments and return results, and theyallow you to abstract away distracting details. Yet despite thesemany similarities, macros operate at a different level than functionsand create a totally different kind of abstraction.\n Once you understand the difference between macros and functions, thetight integration of macros in the language will be a huge benefit.But in the meantime, it&#39;s a frequent source of confusion for newLispers. The following story, while not true in a historical ortechnical sense, tries to alleviate the confusion by giving you a wayto think about how macros work.\n   Once upon a time, long ago, there was a company of Lisp programmers.It was so long ago, in fact, that Lisp had no macros. Anything thatcouldn&#39;t be defined with a function or done with a special operatorhad to be written in full every time, which was rather a drag.Unfortunately, the programmers in this company--thoughbrilliant--were also quite lazy. Often in the middle of theirprograms--when the tedium of writing a bunch of code got to be toomuch--they would instead write a note describing the code they neededto write at that place in the program. Even more unfortunately,because they were lazy, the programmers also hated to go back andactually write the code described by the notes. Soon the company hada big stack of programs that nobody could run because they were fullof notes about code that still needed to be written.\n In desperation, the big bosses hired a junior programmer, Mac, whosejob was to find the notes, write the required code, and insert itinto the program in place of the notes. Mac never ran theprograms--they weren&#39;t done yet, of course, so he couldn&#39;t. But evenif they had been completed, Mac wouldn&#39;t have known what inputs tofeed them. So he just wrote his code based on the contents of thenotes and sent it back to the original programmer.\n With Mac&#39;s help, all the programs were soon completed, and thecompany made a ton of money selling them--so much money that thecompany could double the size of its programming staff. But for somereason no one thought to hire anyone to help Mac; soon he was single-handedly assisting several dozen programmers. To avoid spending allhis time searching for notes in source code, Mac made a smallmodification to the compiler the programmers used. Thereafter,whenever the compiler hit a note, it would e-mail him the note andwait for him to e-mail back the replacement code. Unfortunately, evenwith this change, Mac had a hard time keeping up with theprogrammers. He worked as carefully as he could, but sometimes--especially when the notes weren&#39;t clear--he would make mistakes.\n The programmers noticed, however, that the more precisely they wrotetheir notes, the more likely it was that Mac would send back correctcode. One day, one of the programmers, having a hard time describingin words the code he wanted, included in one of his notes a Lispprogram that would generate the code he wanted. That was fine by Mac;he just ran the program and sent the result to the compiler.\n The next innovation came when a programmer put a note at the top ofone of his programs containing a function definition and a commentthat said, &#34;Mac, don&#39;t write any code here, but keep this functionfor later; I&#39;m going to use it in some of my other notes.&#34; Othernotes in the same program said things such as, &#34;Mac, replace thisnote with the result of running that other function with the symbols x and  y as arguments.&#34;\n This technique caught on so quickly that within a few days, mostprograms contained dozens of notes defining functions that were onlyused by code in other notes. To make it easy for Mac to pick out thenotes containing only definitions that didn&#39;t require any immediateresponse, the programmers tagged them with the standard preface:&#34;Definition for Mac, Read Only.&#34; This--as the programmers were stillquite lazy--was quickly shortened to &#34;DEF. MAC. R/O&#34; and then&#34;DEFMACRO.&#34;\n Pretty soon, there was no actual English left in the notes for Mac.All he did all day was read and respond to e-mails from the compilercontaining DEFMACRO notes and calls to the functions defined in theDEFMACROs. Since the Lisp programs in the notes did all the realwork, keeping up with the e-mails was no problem. Mac suddenly had alot of time on his hands and would sit in his office daydreamingabout white-sand beaches, clear blue ocean water, and drinks withlittle paper umbrellas in them.\n Several months later the programmers realized nobody had seen Mac forquite some time. When they went to his office, they found a thinlayer of dust over everything, a desk littered with travel brochuresfor various tropical locations, and the computer off. But thecompiler still worked--how could it be? It turned out Mac had madeone last change to the compiler: instead of e-mailing notes to Mac,the compiler now saved the functions defined by DEFMACRO notes andran them when called for by the other notes. The programmers decidedthere was no reason to tell the big bosses Mac wasn&#39;t coming to theoffice anymore. So to this day, Mac draws a salary and from time totime sends the programmers a postcard from one tropical locale oranother.\n   The key to understanding macros is to be quite clear about thedistinction between the code that generates code (macros) and thecode that eventually makes up the program (everything else). When youwrite macros, you&#39;re writing programs that will be used by thecompiler to generate the code that will then be compiled. Only afterall the macros have been fully expanded and the resulting codecompiled can the program actually be run. The time when macros run iscalled  macro expansion time; this is distinct from  runtime,when regular code, including the code generated by macros, runs.\n It&#39;s important to keep this distinction firmly in mind because coderunning at macro expansion time runs in a very different environmentthan code running at runtime. Namely, at macro expansion time,there&#39;s no way to access the data that will exist at runtime. LikeMac, who couldn&#39;t run the programs he was working on because hedidn&#39;t know what the correct inputs were, code running at macroexpansion time can deal only with the data that&#39;s inherent in thesource code. For instance, suppose the following source code appearssomewhere in a program:\n  Normally you&#39;d think of  x as a variable that will hold theargument passed in a call to  foo. But at macro expansion time,such as when the compiler is running the   WHEN macro, the onlydata available is the source code. Since the program isn&#39;t runningyet, there&#39;s no call to  foo and thus no value associated with x. Instead, the values the compiler passes to   WHEN arethe Lisp lists representing the source code, namely,  (&gt; x 10)and  (print &#39;big). Suppose that   WHEN is defined, as yousaw in the previous chapter, with something like the following macro:\n  When the code in  foo is compiled, the   WHEN macro will berun with those two forms as arguments. The parameter  conditionwill be bound to the form  (&gt; x 10), and the form  (print&#39;big) will be collected into a list that will become the value ofthe   &amp;rest  body parameter. The backquote expression willthen generate this code:\n  by interpolating in the value of  condition and splicing thevalue of  body into the   PROGN.\n When Lisp is interpreted, rather than compiled, the distinctionbetween macro expansion time and runtime is less clear becausethey&#39;re temporally intertwined. Also, the language standard doesn&#39;tspecify exactly how an interpreter must handle macros--it couldexpand all the macros in the form being interpreted and theninterpret the resulting code, or it could start right in oninterpreting the form and expand macros when it hits them. In eithercase, macros are always passed the unevaluated Lisp objectsrepresenting the subforms of the macro form, and the job of the macrois still to produce code that will do something rather than to doanything directly.\n   As you saw in Chapter 3, macros really are defined with   DEFMACROforms, though it stands--of course--for DEFine MACRO, not Definitionfor Mac. The basic skeleton of a   DEFMACRO is quite similar tothe skeleton of a   DEFUN.\n  Like a function, a macro consists of a name, a parameter list, anoptional documentation string, and a body of Lispexpressions. 1However, as I just discussed, the job of a macro isn&#39;t to do anythingdirectly--its job is to generate code that will later do what youwant.\n Macros can use the full power of Lisp to generate their expansion,which means in this chapter I can only scratch the surface of whatyou can do with macros. I can, however, describe a general processfor writing macros that works for all macros from the simplest to themost complex.\n The job of a macro is to translate a macro form--in other words, aLisp form whose first element is the name of the macro--into codethat does a particular thing. Sometimes you write a macro startingwith the code you&#39;d like to be able to write, that is, with anexample macro form. Other times you decide to write a macro afteryou&#39;ve written the same pattern of code several times and realize youcan make your code clearer by abstracting the pattern.\n Regardless of which end you start from, you need to figure out theother end before you can start writing a macro: you need to know bothwhere you&#39;re coming from and where you&#39;re going before you can hopeto write code to do it automatically. Thus, the first step of writinga macro is to write at least one example of a call to the macro andthe code into which that call should expand.\n Once you have an example call and the desired expansion, you&#39;re readyfor the second step: writing the actual macro code. For simple macrosthis will be a trivial matter of writing a backquoted template withthe macro parameters plugged into the right places. Complex macroswill be significant programs in their own right, complete with helperfunctions and data structures.\n After you&#39;ve written code to translate the example call to theappropriate expansion, you need to make sure the abstraction themacro provides doesn&#39;t &#34;leak&#34; details of its implementation. Leakymacro abstractions will work fine for certain arguments but notothers or will interact with code in the calling environment inundesirable ways. As it turns out, macros can leak in a small handfulof ways, all of which are easily avoided as long as you know to checkfor them. I&#39;ll discuss how in the section &#34;Plugging the Leaks.&#34;\n  Write a sample call to the macro and the code it should expandinto, or vice versa.\n   To see how this three-step process works, you&#39;ll write a macro do-primes that provides a looping construct similar to  DOTIMES and   DOLIST except that instead of iterating overintegers or elements of a list, it iterates over successive primenumbers. This isn&#39;t meant to be an example of a particularly usefulmacro--it&#39;s just a vehicle for demonstrating the process.\n First, you&#39;ll need two utility functions, one to test whether a givennumber is prime and another that returns the next prime numbergreater or equal to its argument. In both cases you can use a simple,but inefficient, brute-force approach.\n (defun primep (number) (when (&gt; number 1) (loop for fac from 2 to (isqrt number) never (zerop (mod number fac)))))(defun next-prime (number) (loop for n from number when (primep n) return n))\n Now you can write the macro. Following the procedure outlinedpreviously, you need at least one example of a call to the macro andthe code into which it should expand. Suppose you start with the ideathat you want to be able to write this:\n  to express a loop that executes the body once each for each primenumber greater or equal to 0 and less than or equal to 19, with thevariable  p holding the prime number. It makes sense to modelthis macro on the form of the standard   DOLIST and   DOTIMESmacros; macros that follow the pattern of existing macros are easierto understand and use than macros that introduce gratuitously novelsyntax.\n Without the  do-primes macro, you could write such a loop with  DO (and the two utility functions defined previously) like this:\n (do ((p (next-prime 0) (next-prime (1+ p)))) ((&gt; p 19)) (format t &#34;~d &#34; p))\n Now you&#39;re ready to start writing the macro code that will translatefrom the former to the latter.\n   Since the arguments passed to a macro are Lisp objects representingthe source code of the macro call, the first step in any macro is toextract whatever parts of those objects are needed to compute theexpansion. For macros that simply interpolate their argumentsdirectly into a template, this step is trivial: simply defining theright parameters to hold the different arguments is sufficient.\n But this approach, it seems, will not suffice for  do-primes.The first argument to the  do-primes call is a list containingthe name of the loop variable,  p; the lower bound,  0;and the upper bound,  19. But if you look at the expansion, thelist as a whole doesn&#39;t appear in the expansion; the three elementare split up and put in different places.\n You could define  do-primes with two parameters, one to holdthe list and a   &amp;rest parameter to hold the body forms, and thentake apart the list by hand, something like this:\n (defmacro do-primes (var-and-range &amp;rest body) (let ((var (first var-and-range)) (start (second var-and-range)) (end (third var-and-range))) `(do ((,var (next-prime ,start) (next-prime (1+ ,var)))) ((&gt; ,var ,end)) ,@body)))\n In a moment I&#39;ll explain how the body generates the correctexpansion; for now you can just note that the variables  var, start, and  end each hold a value, extracted from var-and-range, that&#39;s then interpolated into the backquoteexpression that generates  do-primes&#39;s expansion.\n However, you don&#39;t need to take apart  var-and-range &#34;by hand&#34;because macro parameter lists are what are called  destructuringparameter lists. Destructuring, as the name suggests, involves takingapart a structure--in this case the list structure of the formspassed to a macro.\n Within a destructuring parameter list, a simple parameter name can bereplaced with a nested parameter list. The parameters in the nestedparameter list will take their values from the elements of theexpression that would have been bound to the parameter the listreplaced. For instance, you can replace  var-and-range with alist  (var start end), and the three elements of the list willautomatically be destructured into those three parameters.\n Another special feature of macro parameter lists is that you can use  &amp;body as a synonym for   &amp;rest. Semantically   &amp;body and  &amp;rest are equivalent, but many development environments will usethe presence of a   &amp;body parameter to modify how they indent usesof the macro--typically   &amp;body parameters are used to hold alist of forms that make up the body of the macro.\n So you can streamline the definition of  do-primes and give ahint to both human readers and your development tools about itsintended use by defining it like this:\n (defmacro do-primes ((var start end) &amp;body body) `(do ((,var (next-prime ,start) (next-prime (1+ ,var)))) ((&gt; ,var ,end)) ,@body))\n In addition to being more concise, destructuring parameter lists alsogive you automatic error checking--with  do-primes defined thisway, Lisp will be able to detect a call whose first argument isn&#39;t athree-element list and will give you a meaningful error message justas if you had called a function with too few or too many arguments.Also, in development environments such as SLIME that indicate whatarguments are expected as soon as you type the name of a function ormacro, if you use a destructuring parameter list, the environmentwill be able to tell you more specifically the syntax of the macrocall. With the original definition, SLIME would tell you do-primes is called like this:\n  But with the new definition, it can tell you that a call should looklike this:\n  Destructuring parameter lists can contain   &amp;optional,   &amp;key,and   &amp;rest parameters and can contain nested destructuring lists.However, you don&#39;t need any of those options to write do-primes.\n   Because  do-primes is a fairly simple macro, after you&#39;vedestructured the arguments, all that&#39;s left is to interpolate theminto a template to get the expansion.\n For simple macros like  do-primes, the special backquote syntaxis perfect. To review, a backquoted expression is similar to a quotedexpression except you can &#34;unquote&#34; particular subexpressions bypreceding them with a comma, possibly followed by an at (@) sign.Without an at sign, the comma causes the value of the subexpressionto be included as is. With an at sign, the value--which must be alist--is &#34;spliced&#34; into the enclosing list.\n Another useful way to think about the backquote syntax is as aparticularly concise way of writing code that generates lists. Thisway of thinking about it has the benefit of being pretty much exactlywhat&#39;s happening under the covers--when the reader reads a backquotedexpression, it translates it into code that generates the appropriatelist structure. For instance,  `(,a b) might be read as (list a &#39;b). The language standard doesn&#39;t specify exactlywhat code the reader must produce as long as it generates the rightlist structure.\n Table 8-1 shows some examples of backquoted expressions along withequivalent list-building code and the result you&#39;d get if youevaluated either the backquoted expression or the equivalentcode. 2\n   It&#39;s important to note that backquote is just a convenience. But it&#39;sa big convenience. To appreciate how big, compare the backquotedversion of  do-primes to the following version, which usesexplicit list-building code:\n (defmacro do-primes-a ((var start end) &amp;body body) (append &#39;(do) (list (list (list var (list &#39;next-prime start) (list &#39;next-prime (list &#39;1+ var))))) (list (list (list &#39;&gt; var end))) body))\n As you&#39;ll see in a moment, the current implementation of do-primes doesn&#39;t handle certain edge cases correctly. Butfirst you should verify that it at least works for the originalexample. You can test it in two ways. You can test it indirectly bysimply using it--presumably, if the resulting behavior is correct,the expansion is correct. For instance, you can type the originalexample&#39;s use of  do-primes to the REPL and see that it indeedprints the right series of prime numbers.\n CL-USER&gt; (do-primes (p 0 19) (format t &#34;~d &#34; p))2 3 5 7 11 13 17 19NIL\n Or you can check the macro directly by looking at the expansion of aparticular call. The function   MACROEXPAND-1 takes any Lispexpression as an argument and returns the result of doing one levelof macro expansion. 3 Because   MACROEXPAND-1 is afunction, to pass it a literal macro form you must quote it. You canuse it to see the expansion of the pre\n......", "posttime": "2021-08-08 08:44:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6545\u4e8b,story,\u4ee3\u7801", "title": "Mac\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u6545\u4e8b\uff08Lisp\uff09", "title_en": "Mac: A Just-So Story (Lisp)", "transed": 1, "url": "https://gigamonkeys.com/book/macros-defining-your-own.html#the-story-of-mac-a-just-so-story", "via": "", "real_tags": ["\u6545\u4e8b", "story", "\u4ee3\u7801"]}, {"category": "", "categoryclass": "", "imagename": "08fa65d538d1ee23907af27a71760d24.jpg", "infoid": 1072038, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8df3\u8f6c\u5230\u5bfc\u822a \u8df3\u8f6c\u5230\u641c\u7d22 Canadair CL-415\uff08Superscooper\uff0c\u540e\u6765\u7684\u5e9e\u5df4\u8fea415\uff09\u662f\u4e00\u79cd\u4e24\u6816\u98de\u673a\uff0c\u6700\u521d\u7531\u52a0\u62ff\u5927\u822a\u7a7a\u516c\u53f8\u5236\u9020\uff0c\u968f\u540e\u7531\u5e9e\u5df4\u8fea\u548c\u7ef4\u4eac\u98de\u673a\u5236\u9020\u3002\u5b83\u57fa\u4e8eCanadair CL-215\uff0c\u4e13\u4e3a\u7a7a\u4e2d\u6d88\u9632\u800c\u8bbe\u8ba1\uff1b\u5b83\u53ef\u4ee5\u6267\u884c\u5404\u79cd\u5176\u4ed6\u89d2\u8272\uff0c\u4f8b\u5982\u641c\u6551\u548c\u516c\u7528\u4e8b\u4e1a\u8fd0\u8f93\u3002 CL-415 \u7684\u5f00\u53d1\u4e8e 1990 \u5e74\u4ee3\u521d\u5f00\u59cb\uff0c\u5c31\u5728 CL-215T \u6539\u88c5\u8ba1\u5212\u7684\u6210\u529f\u8bc1\u660e\u5bf9\u539f\u59cb CL-215 \u7684\u6da1\u8f6e\u87ba\u65cb\u6868\u53d1\u52a8\u673a\u6a21\u578b\u7684\u53ef\u884c\u9700\u6c42\u4e4b\u540e\u4e0d\u4e45\u3002\u8be5\u98de\u673a\u4e8e 2003 \u5e74\u6295\u5165\u751f\u4ea7\uff0c\u9664\u4e86\u65b0\u53d1\u52a8\u673a\u5916\uff0c\u8fd8\u5bf9 CL-215 \u8fdb\u884c\u4e86\u5927\u91cf\u73b0\u4ee3\u5316\u6539\u9020\u548c\u6539\u8fdb\uff0c\u7279\u522b\u662f\u5728\u9a7e\u9a76\u8231\u548c\u7a7a\u6c14\u52a8\u529b\u5b66\u65b9\u9762\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002\u5230\u8be5\u8ba1\u5212\u7684\u751f\u4ea7\u9636\u6bb5\u5f00\u59cb\u65f6\uff0c\u5b83\u7531\u5e9e\u5df4\u8fea\u6240\u6709\uff0c\u5e9e\u5df4\u8fea\u4e00\u76f4\u751f\u4ea7\u5230 2015 \u5e74\u30022016 \u5e74 10 \u6708\uff0cCL-415 \u8ba1\u5212\u88ab Viking Aircraft \u6536\u8d2d\uff1b\u8be5\u516c\u53f8\u751f\u4ea7\u4e86\u8fdb\u4e00\u6b65\u73b0\u4ee3\u5316\u7684\u98de\u673a\u6a21\u578b\uff0c\u6307\u5b9a\u4e3a CL-515 \u6216 Viking Canadair 515 First Responder\u3002 [2] CL-215 \u4e8e 1966 \u5e74\u63a8\u51fa\uff0c\u662f\u7b2c\u4e00\u67b6\u4e13\u95e8\u8bbe\u8ba1\u4e3a\u6c34\u4e0a\u8f70\u70b8\u673a\u7684\u98de\u673a\u3002 [3] \u5728\u6700\u7ec8\u7684 CL-215 \u4e8e 1990 \u5e74 5 \u6708\u4ea4\u4ed8\u4e4b\u524d\uff0c\u603b\u5171\u5efa\u9020\u4e86 125 \u67b6\u98de\u673a\u3002 [4] \u5728 1987 \u5e74\u671f\u95f4\uff0c\u4e3a\u4e86\u54cd\u5e94\u5e02\u573a\u5bf9\u66f4\u9ad8\u6548\u3001\u66f4\u5f3a\u5927\u548c\u66f4\u53ef\u9760\u7684\u6da1\u8f6e\u87ba\u65cb\u6868\u53d1\u52a8\u673a\u7684\u8d8b\u52bf\uff0cCanadair \u627f\u62c5\u4e86\u4ee5\u4e0b\u4efb\u52a1\u4f7f\u7528\u666e\u60e0\u52a0\u62ff\u5927 PW123AF \u53d1\u52a8\u673a\u6539\u88c5 17 \u67b6 CL-215 \u673a\u8eab\u3002\u8be5\u53d1\u52a8\u673a\u7684\u529f\u7387\u6bd4\u539f\u6765\u7684\u6d3b\u585e\u53d1\u52a8\u673a\u63d0\u9ad8\u4e86 15%\uff0c\u5e76\u63d0\u9ad8\u4e86\u53ef\u9760\u6027\u548c\u5b89\u5168\u6027\u3002\u6539\u88c5\u540e\u7684\u98de\u673a\u88ab\u547d\u540d\u4e3a CL-215T\u3002 [5] \u5728\u65b0\u673a\u578b\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u516c\u53f8\u5b98\u5458\u627f\u8ba4\u5e02\u573a\u5bf9 CL-215T \u7684\u9700\u6c42\u5fae\u4e0d\u8db3\u9053\uff0c\u56e0\u6b64\u4e0d\u8db3\u4ee5\u8bc1\u660e\u5f00\u53d1\u5168\u65b0\u98de\u673a\u7684\u5408\u7406\u6027\u3002 [5] \u5c3d\u7ba1\u5982\u6b64\uff0c\u5b83\u8fd8\u662f\u6709\u8bb8\u591a\u6539\u8fdb\uff0c\u5305\u62ec\u589e\u52a0\u4e86\u52a8\u529b\u98de\u884c\u63a7\u5236\u3001\u9a7e\u9a76\u8231\u5185\u7684\u7a7a\u8c03\uff0c\u4ee5\u53ca\u5404\u79cd\u5347\u7ea7\u7684\u7535\u6c14\u548c\u822a\u7a7a\u7535\u5b50\u7cfb\u7edf\u3002 CL-215T \u6539\u88c5\u6700\u663e\u7740\u7684\u5916\u90e8\u7279\u5f81\u662f\u673a\u7ffc\u548c\u5c3e\u7ffc\u7684\u7a7a\u6c14\u52a8\u529b\u5b66\u90e8\u4ef6\u3002 [4] \u5728\u8fdb\u884c\u4e86\u76f8\u5bf9\u6210\u529f\u7684 CL-215T \u8ba1\u5212\u540e\uff0c\u8be5\u516c\u53f8\u51b3\u5b9a\u5f00\u53d1\u98de\u673a CL-415 \u7684\u8fdb\u4e00\u6b65\u6539\u8fdb\u578b\u53f7\uff0c\u8be5\u578b\u53f7\u5c06\u5f62\u6210\u65b0\u7684\u751f\u4ea7\u7cfb\u5217\u30021993 \u5e74 12 \u6708 6 \u65e5\uff0cCL-415 1994 \u5e74 11 \u6708\u5f00\u59cb\u9996\u6b21\u4ea4\u4ed8\u3002 [6] \u4e00\u5e74\u540e\uff0c\u5f00\u59cb\u4f7f\u7528\u9b41\u5317\u514b\u653f\u5e9c\u62e5\u6709\u7684 CL-415 \u8fdb\u884c\u4e3a\u671f 180 \u5929\u7684\u7a7f\u8d8a 21 \u4e2a\u56fd\u5bb6\u7684\u9500\u552e\u4e4b\u65c5\u3002 [7] \u540c\u5e74\uff0c\u5e9e\u5df4\u8fea\u8868\u793a\uff0c\u5b83\u6b63\u5904\u4e8e CL-415 \u516d\u70b9\u6539\u8fdb\u8ba1\u5212\u7684\u89c4\u5212\u9636\u6bb5\uff0c\u8be5\u8ba1\u5212\u4e3b\u8981\u65e8\u5728\u4f7f\u5176\u80fd\u529b\u591a\u6837\u5316\u3002 [8] [9] \u5f88\u5feb\u5c31\u6536\u5230\u4e86\u6765\u81ea\u51e0\u4e2a\u56fd\u5bb6\u7684\u8fd9\u79cd\u7c7b\u578b\u7684\u8ba2\u5355\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e9b\u79df\u8d41\u548c\u8d2d\u4e70\u5b89\u6392\uff1b\u5230 1996 \u5e74 7 \u6708\uff0c\u636e\u62a5\u9053\u6709 37 \u67b6\u6837\u673a\u5728\u52a0\u62ff\u5927\u3001\u6cd5\u56fd\u3001\u610f\u5927\u5229\u548c\u897f\u73ed\u7259\u7684\u8fd0\u8425\u5546\u4e2d\u670d\u5f79\u3002 [10] \u4ece 1998 \u5e74\u5f00\u59cb\uff0cCL-415 \u5728\u4f4d\u4e8e\u5b89\u5927\u7565\u7701\u5317\u6e7e\u7684\u5317\u6e7e/\u6770\u514b\u52a0\u5170\u673a\u573a\u9644\u8fd1\u7684\u5e9e\u5df4\u8fea\u5b87\u822a\u516c\u53f8\u7684\u8bbe\u65bd\u4e2d\u7ec4\u88c5\uff0c\u5e76\u5728\u5c3c\u76ae\u8f9b\u6e56\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002 [11] \u5728 2010 \u5e74\u4ee3\uff0c\u6839\u636e\u822a\u7a7a\u822a\u5929\u671f\u520a Flight International \u7684\u8bf4\u6cd5\uff0c\u8be5\u7c7b\u578b\u7684\u9500\u552e\u51fa\u73b0\u4e0b\u6ed1\u3002\u5e9e\u5df4\u8fea\u4e8e 2015 \u5e74 10 \u6708\u5173\u95ed\u751f\u4ea7\u7ebf\u65f6\uff0c\u5171\u5b8c\u6210\u4e86 95 \u67b6 CL-415\uff0c\u5c3d\u7ba1\u8be5\u516c\u53f8\u5728\u6b64\u65e5\u671f\u4e4b\u540e\u7ee7\u7eed\u79ef\u6781\u63a8\u9500\u8be5\u673a\u578b\u5e76\u4e3a\u73b0\u6709\u673a\u961f\u63d0\u4f9b\u652f\u6301\u3002 [12] \u51e0\u5341\u5e74\u6765\uff0c\u5e9e\u5df4\u8fea\u7ecf\u5386\u4e86\u4e00\u6bb5\u663e\u7740\u6269\u5f20\u7684\u65f6\u671f\uff0c\u76f4\u5230 2010 \u5e74\u4ee3\u9047\u5230\u8d22\u52a1\u56f0\u96be\uff0c\u8fd9\u4e3b\u8981\u662f\u7531\u4e8e\u5f00\u53d1 C \u7cfb\u5217\u7a84\u4f53\u5ba2\u673a\u7684\u6210\u672c\u975e\u5e38\u9ad8\u3002 [13] [14] \u5c0f\u5f97\u591a\u7684\u7ef4\u4eac\u98de\u673a\u6700\u521d\u662f\u4f5c\u4e3a\u90e8\u4ef6\u5236\u9020\u4e13\u5bb6\u5f00\u59cb\u7684\uff0c\u5176\u4e2d\u5305\u62ec\u83b7\u5f97\u5e9e\u5df4\u8fea\u505c\u4ea7\u98de\u673a\u7cfb\u5217\u96f6\u4ef6\u7684\u8bb8\u53ef\u751f\u4ea7\uff0c\u5e2e\u52a9\u8fd0\u8425\u5546\u4fdd\u6301\u5b83\u4eec\u7684\u670d\u52a1\u3002 [15] [16] 2008\u5e74\uff0c\u5e9e\u5df4\u8fea\u548c\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u8fbe\u6210\u4e00\u9879\u534f\u8bae\uff0c\u5e9e\u5df4\u8fea\u5c06\u5176\u65e9\u671f\u4e1b\u6797\u98de\u673a\u7684\u8bbe\u8ba1\u6587\u4ef6\u548c\u6240\u6709\u77e5\u8bc6\u4ea7\u6743\u51fa\u552e\u7ed9\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u3002 [17] [18]\u51762014\u5e74\u7684\u5355\u4f4d\u6210\u672c\u4e3a3690\u4e07\u52a0\u5143\u3002 [19]\n2016 \u5e74 6 \u6708 20 \u65e5\uff0c\u7ef4\u4eac\u822a\u7a7a\u5ba3\u5e03\u6b63\u5728\u4ece\u5e9e\u5df4\u8fea\u8d2d\u4e70 CL-415 \u578b\u53f7\u8bc1\u4e66\uff0c\u4ee5\u53ca\u8f83\u65e7\u7684 CL-215 \u548c CL-215T \u578b\u53f7\u3002 [20] [21] [22] \u6536\u8d2d\u4e8e 2016 \u5e74 10 \u6708 3 \u65e5\u5b8c\u6210\u3002 [23] \u6536\u8d2d\u540e\u4e0d\u4e45\uff0c\u7ef4\u4eac\u5f00\u59cb\u8bbe\u8ba1\u73b0\u4ee3\u5316\u7248\u672c\u7684\u98de\u673a\uff0c\u5373 CL-515\u3002 [16] [24] \u5b8c\u6210\u7684\u98de\u673a\u88ab\u79f0\u4e3a Viking Canadair 515 First Responder\u3002 [2] 2018 \u5e74 12 \u6708\uff0c\u80fd\u591f\u6a21\u62df\u6c34\u6597\u548c\u8f70\u70b8\u64cd\u4f5c\u7684\u5168\u98de\u884c CL-415 \u6a21\u62df\u5668\u83b7\u5f97\u4e86\u6b27\u6d32\u822a\u7a7a\u5b89\u5168\u5c40 (EASA) \u7684\u8ba4\u8bc1\u3002\u5728\u6b64\u4e4b\u524d\uff0c\u98de\u884c\u5458\u57f9\u8bad\u901a\u5e38\u6d89\u53ca\u98de\u673a\u7684\u73b0\u573a\u98de\u884c\u3002 [25] CL-415 \u6709\u4e00\u4e2a\u66f4\u65b0\u7684\u9a7e\u9a76\u8231\u3001\u7a7a\u6c14\u52a8\u529b\u5b66\u589e\u5f3a\u548c\u6c34\u91ca\u653e\u7cfb\u7edf\u7684\u53d8\u5316\uff0c\u521b\u9020\u4e86\u4e00\u8258\u73b0\u4ee3\u6d88\u9632\u4e24\u6816\u98de\u8247\uff0c\u7528\u4e8e\u63a2\u6d4b\u548c\u6291\u5236\u68ee\u6797\u706b\u707e\u3002\u4e0e CL-215 \u76f8\u6bd4\uff0cCL-415 \u589e\u52a0\u4e86\u5de5\u4f5c\u91cd\u91cf\u548c\u901f\u5ea6\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u751f\u4ea7\u529b\u548c\u6027\u80fd\u3002\u7531\u4e8e\u5176\u4e00\u5bf9\u666e\u60e0\u52a0\u62ff\u5927 PW123AF \u6da1\u8f6e\u87ba\u65cb\u6868\u53d1\u52a8\u673a\u7684\u529f\u7387\u589e\u52a0\uff0c\u6bcf\u4e2a\u53d1\u52a8\u673a\u80fd\u591f\u4ea7\u751f\u9ad8\u8fbe 1,775 \u5343\u74e6\u7684\u63a8\u529b\uff0c\u4e0e CL-215 \u7684\u5e03\u7f6e\u76f8\u6bd4\uff0c\u8fd9\u4e9b\u53d1\u52a8\u673a\u7684\u4f4d\u7f6e\u66f4\u9760\u8fd1\u673a\u8eab\u3002 [4] \u867d\u7136\u8fd9\u79cd\u91cd\u65b0\u5b9a\u4f4d\u901a\u5e38\u4f1a\u964d\u4f4e\u6a2a\u5411\u7a33\u5b9a\u6027\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5728\u53f3\u4fa7\u6c34\u5e73\u7a33\u5b9a\u5668\u524d\u65b9\u589e\u52a0\u4e00\u4e2a\u5012\u7f6e\u7684\u56fa\u5b9a\u524d\u7f18\u7f1d\u7ffc\u6765\u7ea0\u6b63\u3002\u6b64\u5916\uff0c\u8be5\u578b\u53f7\u8fd8\u91c7\u7528\u4e86\u5c0f\u7ffc\uff0c\u4ee5\u63d0\u9ad8\u65b9\u5411\u7a33\u5b9a\u6027\u3002 [4] CL-415 \u53ef\u4ee5\u4ece\u9644\u8fd1\u7684\u6c34\u6e90\u4e2d\u8200\u51fa\u591a\u8fbe 6,140 \u5347\uff081,350 \u82f1\u52a0\u4ed1\uff1b1,620 \u7f8e\u5236\u52a0\u4ed1\uff09\u7684\u6c34\uff0c\u5982\u679c\u9700\u8981\uff0c\u5c06\u5176\u4e0e\u5316\u5b66\u6ce1\u6cab\u6df7\u5408\uff0c\u7136\u540e\u5c06\u5176\u6295\u5165\u706b\u4e2d\u800c\u65e0\u9700\u8fd4\u56de\u57fa\u5730\u4ee5\u8865\u5145\u5176\u5766\u514b\u3002 [4] CL-415 \u4e13\u95e8\u5f00\u53d1\u7528\u4e8e\u63d0\u4f9b\u5927\u91cf\u706d\u706b\u5242\u4ee5\u5feb\u901f\u54cd\u5e94\u706b\u707e\u7684\u80fd\u529b\u3002\u5b83\u50a8\u5b58\u5728\u5927\u6cb9\u7bb1\u5185\uff0c\u8fd9\u4e9b\u6cb9\u7bb1\u4e3b\u8981\u4f4d\u4e8e\u8239\u4f53\u5185\u7684\u673a\u8231\u5730\u677f\u4e0b\u65b9\uff0c\u5c3d\u7ba1\u673a\u8eab\u4e24\u4fa7\u90fd\u6709\u9ad8\u4e8e\u6b64\u9ad8\u5ea6\u7684\u96c6\u6c34\u7bb1\u3002 [4] \u673a\u8eab\u4e3a\u53ef\u9760\u6027\u548c\u4f7f\u7528\u5bff\u547d\u800c\u6253\u9020\uff0c\u5e7f\u6cdb\u4f7f\u7528\u8010\u8150\u8680\u6750\u6599\uff0c\u4e3b\u8981\u662f\u7ecf\u8fc7\u5904\u7406\u7684\u94dd\uff0c\u4fbf\u4e8e\u5728\u76d0\u6c34\u4e2d\u4f7f\u7528\u3002\u636e Flight International \u79f0\uff0cCL-415 \u5728\u6c34\u4e0a\u5177\u6709\u826f\u597d\u7684\u64cd\u63a7\u6027\uff0c\u4e0e\u5176\u4ed6\u51e0\u67b6\u4e24\u6816\u98de\u673a\u76f8\u6bd4\uff0c\u64cd\u4f5c\u8d77\u6765\u76f8\u5bf9\u5bb9\u6613\u3002 [4] CL-515 \u6700\u591a\u53ef\u5bb9\u7eb3 7,000 \u5347\uff081,850 \u7f8e\u5236\u52a0\u4ed1\uff09\uff0c\u5e76\u4e14\u91cd\u65b0\u586b\u5145\u65f6\u95f4\u4e3a 14 \u79d2\u3002 [2] \u98de\u673a\u9700\u8981 1,340 m (4,400 ft) \u7684\u53ef\u98de\u884c\u957f\u5ea6\u624d\u80fd\u4ece 15 m (49 ft) \u9ad8\u5ea6\u4e0b\u964d\uff0c\u5728 12 \u79d2 410 \u7c73\u957f\u7684\u98de\u884c\u4e2d\u6c72\u53d6 6,137 \u5347\uff081,350 \u82f1\u5236\u52a0\u4ed1\uff1b1,621 \u7f8e\u5236\u52a0\u4ed1\uff09\u6c34(1,350 ft) \u4ee5 70 \u8282\uff08130 \u516c\u91cc/\u5c0f\u65f6\uff1b81 \u82f1\u91cc/\u5c0f\u65f6\uff09\u7684\u901f\u5ea6\u5728\u6c34\u9762\u4e0a\u5954\u8dd1\uff0c\u7136\u540e\u722c\u56de 15 m\uff0849 \u82f1\u5c3a\uff09\u9ad8\u5ea6\u3002\u98de\u673a\u8fd8\u53ef\u4ee5\u5728\u8f83\u5c0f\u7684\u533a\u57df\u5185\u62fe\u53d6\u90e8\u5206\u8d1f\u8f7d\uff0c\u5e76\u4e14\u5728\u5fc5\u8981\u65f6\u53ef\u4ee5\u5728\u8200\u8d77\u7684\u540c\u65f6\u8f6c\u5f2f\u3002 [26] \u6c34\u5f39\u7cfb\u7edf\u7684\u7ba1\u7406\u901a\u8fc7\u98de\u884c\u4eea\u8868\u4e0a\u7684\u6c34\u72b6\u6001\u9762\u677f\u8fdb\u884c\u96c6\u4e2d\u7ba1\u7406\uff0c\u76f4\u63a5\u63a7\u5236\u98de\u884c\u5458\uff1b\u53ef\u4ee5\u9009\u62e9\u5404\u79cd\u5206\u6563\u6a21\u5f0f\u548c\u5e8f\u5217\u3002\u8fd8\u5b58\u5728\u624b\u52a8\u64cd\u4f5c\u7684\u7d27\u6025\u503e\u5012\u6746\uff0c\u7ed5\u8fc7\u8be5\u7cfb\u7edf\u3002 [4] \u5e9e\u5df4\u8fea\u58f0\u79f0\u8be5\u673a\u578b\u6bcf\u98de\u884c\u5c0f\u65f6\u4f1a\u4ea7\u751f 6.9 \u6ef4\u6c34\u3002 [4] CL-415GR \u53d8\u4f53\u5177\u6709\u66f4\u9ad8\u7684\u64cd\u4f5c\u91cd\u91cf\uff0c\u800c CL-415 \u591a\u7528\u9014\u578b\u53f7\u53ef\u7528\u4e8e\u51c6\u519b\u4e8b\u641c\u6551\u4efb\u52a1\u548c\u516c\u7528\u8fd0\u8f93\u3002\u7531\u4e8e\u5176\u6c34\u8f70\u70b8\u673a\u548c\u706d\u706b\u5668\u7684\u6027\u80fd\u5927\u5927\u589e\u5f3a\uff0c\u8be5\u98de\u673a\u53d6\u81ea\u5176\u524d\u8eab\u7684\u7ef0\u53f7\uff0c\u56e0\u6b64\u83b7\u5f97\u4e86\u201c\u8d85\u7ea7\u94f2\u8fd0\u673a\u201d\u7684\u79f0\u53f7\u3002\u4e3a\u4e86\u8868\u5f70\u5176\u80fd\u529b\uff0c\u8be5\u98de\u673a\u4e8e 2006 \u5e74\u88ab\u897f\u73ed\u7259\u7684 Asociacion para la Promocion de Actividades Socioculturees (APAS) \u6388\u4e88 Batefuegos de oro\uff08\u91d1\u706d\u706b\u5668\uff09\uff1b\u8be5\u5956\u9879\u5f15\u7528\u90e8\u5206\u5185\u5bb9\u4e3a\u201c\u8fd9\u662f\u7a7a\u4e2d\u6253\u51fb\u68ee\u6797\u706b\u707e\u6700\u6709\u6548\u7684\u5de5\u5177\uff0c\u662f\u8bb8\u591a\u56fd\u5bb6\u7ec4\u7ec7\u6d88\u9632\u7684\u5173\u952e\u3002\u4e3a\u6ee1\u8db3\u68ee\u6797\u6d88\u9632\u9700\u6c42\u800c\u4e0d\u65ad\u6539\u8fdb\uff0c\u4f7f\u8fd9\u4e9b\u98de\u673a\u6210\u4e3a\u7a7a\u4e2d\u610f\u5473\u7740 30 \u591a\u5e74\u6765\u9700\u6c42\u6700\u5927\u3002\u201d [27] \u52301999\u5e74\uff0c\u8be5\u578b\u53f7\u5171\u83b7\u5f9751\u4e2a\u8ba2\u5355\uff1b\u636e\u62a5\u9053\uff0c\u8fd0\u8425\u5546\u4e3b\u8981\u5c06 CL-415 \u7528\u4e8e\u6d88\u9632\u548c\u6d77\u4e0a\u641c\u6551\u76ee\u7684\u3002 [28] \u5728\u5efa\u9020\u7684 95 \u67b6\u4e2d\uff0c\u636e\u62a5\u9053\u6709 7 \u67b6\u5728 2007 \u5e74 12 \u6708\u4e4b\u524d\u56e0\u6570\u8d77\u4e8b\u6545\u800c\u9000\u5f79\u3002 [29]\n\u589e\u5f3a\u578b\u7a7a\u4e2d\u6d88\u9632\u5458\u3002 [31] 2019 \u5e74\uff0c\u53d1\u5c04\u5ba2\u6237 Bridger Aerospace \u8ba2\u8d2d\u4e86 6 \u67b6 CL-415EAF Superscooper \u98de\u673a\uff0c\u5c06\u4e8e 2020 \u5e74 4 \u6708\u4ea4\u4ed8\u3002 [32] \u66f4\u65b0\u4e86\u4e0d\u5217\u98a0\u54e5\u4f26\u6bd4\u4e9a\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u6b63\u5728\u5f00\u53d1\u7684 CL-415 \u7684\u591a\u7528\u9014\u7248\u672c\u3002 [16] 2019 \u5e74 6 \u6708 21 \u65e5\uff0c\u5370\u5ea6\u5c3c\u897f\u4e9a\u56fd\u9632\u90e8\u5ba3\u5e03\u5c06\u8d2d\u4e70 6 \u67b6 CL-515\uff0c\u5c06\u4e8e 2024 \u5e74\u4ea4\u4ed8\u3002 [33] [34] 2019 \u5e74\u6570\u636e\uff0c\u6240\u6709\u5176\u4ed6\u6570\u636e\u5747\u4e3a 2016 \u5e74\u3002Air Spray\uff0c\u5e03\u6cd5\u7f57\u822a\u7a7a\u516c\u53f8\uff0cConair \u96c6\u56e2\uff0c\u653f\u5e9cNewfoundland and Labrador, Service a\u00e9rien gouvernemental (Quebec), Longview Aviation Asset Management Corp., Longview Aviation Services Inc., \u66fc\u5c3c\u6258\u5df4\u7701\uff0c\u81ea\u7136\u8d44\u6e90\u90e8\uff08\u5b89\u5927\u7565\u7701\uff09\uff0c\u73af\u5883\u90e8\uff08\u8428\u65af\u5580\u5f7b\u6e29\u7701\uff09 \u5bb9\u91cf\uff1a6,137 \u5347\uff081,350 \u82f1\u52a0\u4ed1\uff09 ; 1,621 \u7f8e\u56fd\u52a0\u4ed1\uff09\uff08\u6c34\u5f39\u8f70\u70b8\uff09\uff0c\u6700\u591a 18 \u540d\u4f1e\u5175\uff0c\u6700\u591a 2,903 \u516c\u65a4\uff086,400 \u78c5\uff09\u8d27\u7269\u52a8\u529b\u88c5\u7f6e\uff1a2 \u00d7 Pratt &amp; Whitney Canada PW123AF \u6da1\u8f6e\u87ba\u65cb\u6868\u53d1\u52a8\u673a\uff0c1,775 kW\uff082,380 hp\uff09\uff1a\u6bcf\u4e2a ISA+20\u00ba \u6241\u5e73\u87ba\u65cb\u6868-bladed Hamilton Sunstrand 14SF-19\uff0c\u76f4\u5f84 3.97 m\uff0813 ft 0 in\uff09 \u5b8c\u5168\u53ef\u9006\uff0c\u7fbd\u72b6\u53f6\u7247\u6e21\u8f6e\u822a\u7a0b\uff1a2,427 km\uff081,508 mi\uff0c1,310 nmi\uff09278 km/h\uff08150 kn\uff09\u8fdc\u7a0b\u5de1\u822a\n\u970d\u5c3c\u97e6\u5c14 EFIS\u3001Primus II \u5bfc\u822a/\u901a\u4fe1\u65e0\u7ebf\u7535\u7cfb\u7edf\u3001VOR\u3001ILS\u3001MKR\u3001ADF\u3001DME\u3001AA-300 \u65e0\u7ebf\u7535\u9ad8\u5ea6\u8ba1 ^\u201c\u4e24\u6816\u98de\u673a \u2013 \u72b6\u6001\u62a5\u544a \u2013 \u5e9e\u5df4\u8fea\u201d\u3002 2013 \u5e74 11 \u6708 8 \u65e5\u4ece\u539f\u4ef6\u5b58\u6863\u3002^ abcdefghi Gerzanics, Mike\uff082009 \u5e74 8 \u6708 21 \u65e5\uff09\u3002 \u201c\u98de\u884c\u6d4b\u8bd5\uff1a\u5e9e\u5df4\u8fea 415 - \u8d85\u7ea7\u76f4\u5347\u673a\u201d\u3002\u98de\u884c\u56fd\u9645\u3002 ^ ab \u53e4\u5c14\u5fb7\uff0c\u4f0a\u6069 CL-215 \u201c\u6c34\u5c04\u6d41\u201d\u3002 Flight International\uff0c1988 \u5e74 12 \u6708 31 \u65e5\u3002 23. ^ Jens Flottau\u3001Graham Warwick \u548c Guy Norris\uff082017 \u5e74 10 \u6708 27 \u65e5\uff09\u3002 \u201c\u7a7a\u4e2d\u5ba2\u8f66/\u5e9e\u5df4\u8fea C \u7cfb\u5217\u4ea4\u6613\u5177\u6709\u5e7f\u6cdb\u7684\u5f71\u54cd\u201d\u3002\u822a\u7a7a\u5468\u548c\u7a7a\u95f4\u6280\u672f\u3002 ^ \u201c\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u6536\u8d2d\u5e9e\u5df4\u8fea\u7684\u8d44\u4ea7\u201d\u3002\u7fc5\u8180\u6742\u5fd7\u3002 2005 \u5e74 5 \u6708 5 \u65e5\u3002\u539f\u4ef6\u5b58\u6863\u4e8e 2014 \u5e74 5 \u6708 28 \u65e5\u3002 ^ \u7ef4\u4eac\u822a\u7a7a\u6709\u9650\u516c\u53f8\uff082006 \u5e74 2 \u6708 23 \u65e5\uff09\u3002 \u201cViking \u4ece\u5e9e\u5df4\u8fea\u83b7\u5f97 de Havilland Canada Heritage \u98de\u673a\u7684\u578b\u53f7\u8bc1\u4e66\u201d\uff08\u65b0\u95fb\u7a3f\uff09\u3002\n^ \u201c\u7ef4\u4eac\u822a\u7a7a\u516c\u53f8\u4e3a\u5e9e\u5df4\u8fea\u4e24\u6816\u52a8\u7269\u8d2d\u200b\u200b\u4e70\u578b\u53f7\u8bc1\u4e66\u201d\u3002\u98de\u884c\u56fd\u9645\u3002 2016 \u5e74 6 \u6708 21 \u65e5\u3002^\u201c\u7ef4\u4eac\u822a\u7a7a\u6709\u9650\u516c\u53f8\u4ece\u5e9e\u5df4\u8fea\u624b\u4e2d\u6536\u8d2d\u4e86\u5168\u7403 CL-415 \u6c34\u4e0a\u98de\u673a\u8ba1\u5212\u201d\uff08\u65b0\u95fb\u7a3f\uff09\u3002\u7ef4\u4eac\u822a\u7a7a\u3002 2016 \u5e74 6 \u6708 20 \u65e5\u3002\u539f\u4ef6\u4e8e 2016 \u5e74 6 \u6708 23 \u65e5\u5b58\u6863\u3002^ ab\u201c\u5e0c\u814a\u8ba2\u5355\u6807\u5fd7\u7740 Canadair 415GR \u7684\u63a8\u51fa\u201d\u3002\u98de\u884c\u56fd\u9645\u3002 1999 \u5e74 1 \u6708 13 \u65e5\u3002^\u201c\u52a0\u62ff\u5927\u822a\u7a7a CL-415\u201d\u3002 2007 \u5e74 12 \u6708 5 \u65e5\u5b58\u6863\u4e8e Wayback Machine baaa-acro.com\u3002\u68c0\u7d22\u65f6\u95f4\uff1a2011 \u5e74 7 \u6708 29 \u65e5\u3002^ Amy Laboda\uff082018 \u5e74 10 \u6708 12 \u65e5\uff09\u3002 \u201cViking Air Preps for Fire Season, \u66f4\u65b0 Water Scooper Line\u201d\u3002 AIN \u5728\u7ebf\u3002 ^ \u201cMMEA \u4f7f\u7528 198,000 \u5347\u6c34\u6765\u6251\u706d\u7f8e\u91cc\u7684\u68ee\u6797\u706b\u707e\u201d\u3002\u4f2f\u7eb3\u9a6c\u3002\u9a6c\u6765\u90ae\u62a5\u3002 2019 \u5e74 8 \u6708 16 \u65e5\u3002\u76ae\u514b\u52d2\u3001\u7f57\u6069\u548c\u62c9\u91cc\u00b7\u7c73\u5c14\u4f2f\u91cc\u3002\u52a0\u62ff\u5927\u822a\u7a7a\u516c\u53f8\uff1a\u7b2c\u4e00\u4e2a 50 \u5e74\u3002\u591a\u4f26\u591a\uff1aCANAV \u56fe\u4e66\uff0c1995 \u5e74\u3002ISBN 0-921022-07-7\u3002\n\u9a6c\u8428\u5229\u3001\u5f17\u96f7\u5fb7\u91cc\u514b\u548c\u585e\u7f2a\u5c14\u00b7\u666e\u96f7\u5854\u3002 \u201cBombardiers d&#39;eau/Canadair Scoopers\u3002\u201d\u7248\u672c Minimonde76\uff0c2012 \u5e74 5 \u6708\uff0cISBN 978-2-95418-180-6\u3002", "note_en": "Jump to navigation  Jump to search  The  Canadair CL-415 ( Superscooper, later  Bombardier 415) is an  amphibious aircraft built originally by  Canadair and subsequently by  Bombardier and  Viking Aircraft. It is based on the  Canadair CL-215 and is designed specifically for  aerial firefighting; it can perform various other roles, such as the  search and rescue and utility transport.\n Development of the CL-415 commenced in the early 1990s, shortly after the success of the  CL-215T retrofit programme had proven a viable demand for a  turboprop-powered model of the original CL-215. Entering production in 2003, in addition to its new engines, the aircraft featured numerous modernisation efforts and advances over the CL-215, particularly in terms of its cockpit and  aerodynamics, to yield improved performance. By the time the programme&#39;s production phase had commenced, it was owned by Bombardier, who continued production up until 2015. During October 2016, the CL-415 programme was acquired by Viking Aircraft; this company has produced a further modernised model of the aircraft, designated as the CL-515 or the Viking Canadair 515 First Responder.  [2]\n    Introduced during 1966, the CL-215 was the first aircraft specifically designed to be a  water bomber.  [3] A total of 125 aircraft were constructed prior to the final CL-215 being delivered during May 1990.  [4]\n During 1987, in response to prevailing market trends towards more efficient, powerful and reliable  turboprop powerplants, Canadair undertook the task of retrofitting 17  CL-215 airframes with the  Pratt &amp; Whitney Canada  PW123AF engines. This engine provided a 15 percent power increase over the original  piston engines, as well as enhanced reliability and safety. The retrofitted aircraft were designated  CL-215T.  [5] Speaking during the new model&#39;s development, company officials recognised that market demand for the CL-215T was marginal, and thus not enough to justify developing an all-new aircraft.  [5] Despite this, it featured numerous enhancements, including the addition of powered flight controls,  air conditioning in the  cockpit, as well as various upgraded electrical and avionics systems. The most notable external features of the CL-215T retrofit were the  aerodynamic additions to the  wings and  empennage.  [4]\n Having conducted the relatively successful CL-215T programme, the company decided to develop a further improved model of the aircraft  CL-415, which would take form as a new-build production series.On 6 December 1993, the CL-415 conducted its maiden flight, while the first deliveries commenced during November  1994.  [6] One year later, a 180-day sales tour traversing 21 countries commenced using a CL-415 owned by the  Quebec Government.  [7] That same year, Bombardier stated that it was in the planning phase of a six-point improvement plan for the CL-415, which was principally intended to diversify its capabilities.  [8]  [9]\n Orders for the type were promptly received from several countries, which included several  lease and purchase arrangements; by July 1996, 37 examples were reportedly in service with operators in Canada, France, Italy, and Spain.  [10]Starting in 1998, the CL-415 was being assembled at Bombardier Aerospace&#39;s facility near  North Bay/Jack Garland Airport in  North Bay, Ontario, and tested on  Lake Nipissing.  [11] During the 2010s, according to aerospace periodical  Flight International, there was a downturn in sales of the type. A total of ninety-five CL-415s had been completed when Bombardier closed down the production line in October 2015, although the company continued to actively market the type as well as to provide support for the existing fleet beyond this date.  [12]\n  For several decades, Bombardier had experienced a period of significant expansion until encountering financial hardship during the 2010s, largely brought on by the very high costs involved in developing the  CSeries narrow-body  airliner.  [13]  [14]The much smaller  Viking Aircraft started off as a component manufacturing specialist, which came to include the  licensed production of parts of several of Bombardier&#39;s discontinued aircraft range, helping operators to keep them in service.  [15]  [16]During 2008, Bombardier and Viking Air reached an arrangement under which the former sold the design documents and all intellectual property rights of its earlier bush planes to Viking.  [17]  [18]Its unit cost in 2014 was  C$36.9 million.  [19]\n On 20 June 2016, it was announced that Viking Air was in the process of purchasing the CL-415  type certificate from  Bombardier, along with the older CL-215 and CL-215T models.  [20]  [21]  [22] The acquisition was finalised on 3 October 2016.  [23] Shortly following the acquisition, Viking began work on the design of a modernised version of the aircraft, which became referred to as the  CL-515.  [16]  [24] The completed aircraft is referred to as the Viking Canadair 515 First Responder.  [2]\n During December 2018, a full-flight CL-415 simulator, capable of simulating water scoop and bombing operations, received  European Aviation Safety Agency (EASA) certification. Prior to this, pilot training had typically involved live flying of the aircraft.  [25]\n     The CL-415 has an updated cockpit, aerodynamics enhancements and changes to the water-release system as well, creating a modern  firefighting amphibious  flying boat for use in detecting and suppressing  forest fires. Compared to the CL-215, the CL-415 has increased operating weight and speed, yielding improved productivity and performance. Due to the increased power of its pair of  Pratt &amp; Whitney Canada PW123AF  turboprop engines, each capable of generating up to 1,775kw of thrust, these are located closer to the fuselage in comparison to the CL-215&#39;s arrangement.  [4] While this repositioning would typically reduce lateral stability on its own, this is rectified via the addition of an inverted fixed  leading edge  slat forward of the righthand horizontal stabiliser. Furthermore,  winglets have been adopted on this model for the purpose of improving directional stability.  [4]\n The CL-415 can scoop up to 6,140\u00a0l (1,350\u00a0imp\u00a0gal; 1,620\u00a0US\u00a0gal) of water from a nearby water source, mix it with a chemical foam if desired, and drop it on a fire without having to return to base to refill its tanks.  [4] The CL-415 was specifically developed to provide the capability to deliver large quantities of suppressant in quick response to fires. This is stored within large tanks which are located mostly beneath the cabin floor within the hull, although a header tank above this level is present on either side of the fuselage.  [4] The airframe is built for reliability and longevity, making extensive use of  corrosion-resistant materials, predominantly treated  aluminium, that facilitates its use in salt water. According to Flight International, the CL-415 has good handling on the water, being relatively easy to operate in comparison with several other amphibious aircraft.  [4] The CL-515 can hold up to 7,000 litres (1,850 US gallons), and has a refill time of 14 seconds.  [2]\n The aircraft requires 1,340\u00a0m (4,400\u00a0ft) of flyable length to descend from 15\u00a0m (49\u00a0ft) altitude, scoop 6,137\u00a0l (1,350\u00a0imp\u00a0gal; 1,621\u00a0US\u00a0gal) of water during a twelve-second 410-metre-long (1,350\u00a0ft) run on the water at 70  knots (130\u00a0km/h; 81\u00a0mph), then climb back to 15\u00a0m (49\u00a0ft) altitude. The aircraft can also pick up partial loads in smaller areas, and can turn while scooping if necessary.  [26] Management of the water bombing system is centralised via a water status panel on the flight instrumentation, giving direct control to the pilots; various dispersal patterns and sequences can be selected. A manually-operated emergency dump lever is also present, bypassing this system.  [4] Bombardier have claimed that the type performs 6.9 water drops for every flight hours of the type.  [4] The  CL-415GR variant features higher operating weights, while the CL-415 multi-role model is available for purposes in a paramilitary  search and rescue role and utility transport.\n   Derived from its predecessor&#39;s nickname, the aircraft has acquired the name &#34;Super Scooper&#34; in light of its greatly enhanced performance as a water bomber and fire suppresser. In recognition of its abilities, the aircraft was awarded in 2006 the  Batefuegos de oro (gold fire extinguisher) by the  Asociacion para la Promocion de Actividades Socioculturales (APAS) in Spain; the award citation in part read &#34;This is the most efficient tool for the aerial combat of forest fires, key to the organization of firefighting in a large number of countries. The continuous improvements to meet the needs of forest firefighting have made these aircraft the aerial means most in demand over more than 30 years.&#34;  [27]\n By 1999, a total of 51 orders had been secured for the type; operators have reportedly predominantly used the CL-415 for firefighting and maritime search and rescue purposes.  [28] Of the 95 built, seven had reportedly been removed from service as a result of several accidents by December 2007.  [29]\n     Enhanced Aerial Firefighter.  [31] In 2019, six CL-415EAF Superscooper aircraft were ordered by launch customer, Bridger Aerospace, due for delivery in April 2020.  [32]\n Updated multirole version of the CL-415 under development by  Viking Air of  British Columbia.  [16] On 21 June 2019, the  Indonesian Ministry of Defense announced it was purchasing six CL-515s for delivery in 2024.  [33]  [34]\n      2019 figures, all others 2016.  Air Spray,  Buffalo Airways,  Conair Group,  Government of Newfoundland and Labrador,  Service a\u00e9rien gouvernemental (Quebec), Longview Aviation Asset Management Corp., Longview Aviation Services Inc.,  Province of Manitoba,  Ministry of Natural Resources (Ontario),  Ministry of Environment (Saskatchewan)\n         Capacity: 6,137\u00a0l (1,350\u00a0imp\u00a0gal; 1,621\u00a0US\u00a0gal) (waterbombing), up to 18 paratroops, up to 2,903\u00a0kg (6,400\u00a0lb) of cargo\n           Powerplant: 2 \u00d7  Pratt &amp; Whitney Canada PW123AF  turboprop, 1,775\u00a0kW (2,380\u00a0hp) each ISA+20\u00baC Flat rated\n Propellers: 4-bladed Hamilton Sunstrand 14SF-19, 3.97\u00a0m (13\u00a0ft 0\u00a0in) diameter Fully reversible, feathering blades\n  Ferry range: 2,427\u00a0km (1,508\u00a0mi, 1,310\u00a0nmi) 278\u00a0km/h (150\u00a0kn) Long Range Cruise\n  Honeywell  EFIS, Primus II Nav/Comm Radio System, VOR, ILS, MKR, ADF, DME, AA-300 Radio Altimeter\n         ^    &#34;Amphibious aircraft \u2013 Status report \u2013 Bombardier&#34;. Archived from  the original on 8 November 2013.\n   ^     a     b     c     d     e     f     g     h     i    Gerzanics, Mike (21 August 2009).  &#34;FLIGHT TEST: Bombardier 415 - The superscooper&#34;. Flight International.\n ^     a     b  Goold, Ian  CL-215 &#34;Water Jet&#34;.  Flight International, 31 December 1988. p. 23.\n         ^    Jens Flottau, Graham Warwick and Guy Norris (27 October 2017).  &#34;Airbus/Bombardier C Series Deal Has Broad Implications&#34;.  Aviation Week &amp; Space Technology.\n   ^     &#34;Viking Air acquires assets of Bombardier&#34;.  Wings Magazine. 5 May 2005. Archived from  the original on 28 May 2014 .\n ^    Viking Air Limited (23 February 2006).  &#34;Viking Acquires Type Certificates for de Havilland Canada Heritage Aircraft from Bombardier&#34; (Press release).\n  ^     &#34;Viking Air to buy type certificates for Bombardier amphibians&#34;. Flight International. 21 June 2016.\n  ^     &#34;Viking Air Limited Acquires Worldwide CL-415 Waterbomber Program from Bombardier&#34; (Press release). Viking Air. 20 June 2016. Archived from  the original on 23 June 2016.\n      ^     a     b     &#34;Greek order marks launch of Canadair 415GR&#34;. Flight International. 13 January 1999.\n ^   &#34;Canadair CL-415.&#34;  Archived 5 December 2007 at the  Wayback Machine  baaa-acro.com. Retrieved: 29 July 2011.\n      ^    Amy Laboda (October 12, 2018).  &#34;Viking Air Preps for Fire Season, Updates Water Scooper Line&#34;.  AIN online.\n   ^     &#34;MMEA uses 198,000 litres of water to fight forest fire in Miri&#34;.  Bernama. The Malay Mail. 16 August 2019 .\n  Pickler, Ron and  Larry Milberry.  Canadair: The First 50 Years. Toronto: CANAV Books, 1995.   ISBN\u00a0 0-921022-07-7.\n  Marsaly, Frederic and Samuel Pretat.  &#34;Bombardiers d&#39;eau/ Canadair Scoopers.&#34;  Editions Minimonde76, May 2012,   ISBN\u00a0 978-2-95418-180-6.", "posttime": "2021-08-08 08:43:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "canadaair,canadair,\u98de\u673a", "title": "Canadaair CL-415 \u7a7a\u4e2d\u6d88\u9632\u5458", "title_en": "Canadair CL-415 Aerial Firefighter", "transed": 1, "url": "https://en.wikipedia.org/wiki/Canadair_CL-415", "via": "", "real_tags": ["canadaair", "canadair", "\u98de\u673a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072037, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u80cc\u666f\u548c\u6d4b\u8bd5\u76ee\u6807\uff1a\u5728\u52df\u96c6\u6148\u5584\u6350\u6b3e\u65f6\uff0c\u6709\u4e00\u4e9b\u5047\u5b9a\u7684\u884c\u4e1a\u201c\u6700\u4f73\u5b9e\u8df5\u201d\u3002\u4e00\u79cd\u4fe1\u5ff5\u662f\uff0c\u5982\u679c\u4eba\u4eec\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u81ea\u5df1\u7684\u6350\u8d60\u91d1\u989d\uff0c\u4ed6\u4eec\u4f1a\u6350\u8d60\u66f4\u591a\u3002\u6148\u5584\u7ec4\u7ec7\u4e50\u65bd\u4f1a\u4e4b\u524d\u8fdb\u884c\u7684\u4e00\u9879\u6350\u8d60\u7814\u7a76\u68c0\u67e5\u4e86\u8fd9\u4e2a\u60f3\u6cd5\u5e76\u53d1\u73b0\u4e86\u6709\u8da3\u7684\u7ed3\u679c\u3002\u4f5c\u4e3a\u7ecf\u9a8c\u4e30\u5bcc\u7684\u6d4b\u8bd5\u56e2\u961f WWF\uff0c\u77e5\u9053\u5728\u4e00\u4e2a\u7ad9\u70b9\u4e0a\u8fd0\u884c\u826f\u597d\u7684\u65b9\u6cd5\u5e76\u4e0d\u603b\u662f\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u7ad9\u70b9\u3002\u7b2c\u4e00\u79cd\u683c\u5f0f\u7b26\u5408\u201c\u884c\u4e1a\u6807\u51c6\u201d\u3002\u5b83\u8981\u6c42\u8bbf\u95ee\u8005\u5728\u7a7a\u767d\u6846\u4e2d\u8f93\u5165\u4ed6\u4eec\u60f3\u8981\u7684\u6bcf\u6708\u6350\u6b3e\u91d1\u989d\u3002\u8fd9\u79cd\u4e0d\u53d7\u9650\u5236\u7684\u201c\u7a7a\u767d\u77f3\u677f\u201d\u5f62\u5f0f\u8ba9\u53c2\u89c2\u8005\u611f\u53d7\u5230\u4e86\u53ef\u4f9b\u6350\u8d60\u7684\u5e7f\u9614\u53ef\u80fd\u6027\u3002\u7248\u672c A\uff1a\u7a7a\u767d\u6846 \u53e6\u4e00\u79cd\u683c\u5f0f\u662f\u6bcf\u6708\u56fa\u5b9a\u91d1\u989d\u7684\u6350\u8d60\u8868\u3002\u6350\u8d60\u8005\u53ef\u4ee5\u70b9\u51fb\u9009\u62e9\u4e00\u7ec4\u6bcf\u6708\u6350\u8d60\u3002\u5efa\u8bae\u7684\u6700\u4f4e\u91d1\u989d\u4e3a 10 \u7f8e\u5143\u3002\u968f\u540e\u7684\u6bcf\u4e2a\u6350\u8d60\u6309\u94ae\u90fd\u4f1a\u4ee5 5 \u7f8e\u5143\u7684\u589e\u91cf\u589e\u52a0\u3002 15 \u7f8e\u5143\u7684\u6350\u6b3e\u6309\u94ae\u88ab\u81ea\u52a8\u9884\u9009\u5e76\u4ee5\u84dd\u8272\u7a81\u51fa\u663e\u793a\u3002\u5176\u4ed6\u6309\u94ae\u4e3a\u9ed1\u8272\u3002\n\u6350\u52a9\u8005\u4e5f\u53ef\u4ee5\u70b9\u51fb\u201c\u5176\u4ed6\u201d\u6309\u94ae\u8f93\u5165\u672a\u663e\u793a\u7684\u91d1\u989d\u3002\u53ef\u70b9\u51fb\u6309\u94ae\u683c\u5f0f\u65e8\u5728\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u8d77\u70b9\uff0c\u9f13\u52b1\u6350\u52a9\u8005\u9009\u62e9\u9002\u5408\u4ed6\u4eec\u7684\u91d1\u989d\u3002\u5b83\u770b\u8d77\u6765\u50cf\u8fd9\u6837\uff1a \u7248\u672c B\uff1a \u7248\u672c\u4e4b\u95f4\u7684\u6309\u94ae\u5dee\u5f02\uff1a \u7248\u672c A \u2013 \u7a7a\u767d\u6846\uff1b\u7528\u6237\u53ef\u4ee5\u8f93\u5165\u4ed6\u4eec\u9009\u62e9\u8d21\u732e\u7684\u91d1\u989d\u3002\u7248\u672c B \u2013 \u6350\u8d60\u8005\u53ef\u4ee5\u9009\u62e9\u5177\u6709\u56fa\u5b9a\u91d1\u989d\u7684\u6309\u94ae\u3002 \uff08\u83b7\u80dc\u8005\uff09\u5173\u952e\u7ee9\u6548\u6307\u6807\uff08KPI\uff09\uff1a\u6350\u8d60\u6d4b\u8bd5\u76ee\u6807\uff1a\u589e\u52a0\u6350\u8d60\u6d41\u91cf\u6765\u6e90\uff1a\u5168\u90e8\uff1a\u76f4\u63a5\u3001\u641c\u7d22\u3001\u63a8\u8350\u3001\u6709\u673a\u3001\u4ed8\u8d39\u3001\u9644\u5c5e\u3001\u7535\u5b50\u90ae\u4ef6\u5217\u8868\u548c\u793e\u4ea4\u53d7\u4f17\uff1a\u5bf9\u91ce\u751f\u52a8\u7269\u4fdd\u62a4\u611f\u5174\u8da3\u7684\u7f51\u7ad9\u7528\u6237\u7ec4\u7ec7\uff1a\u4e16\u754c\u91ce\u751f\u52a8\u7269Fund (WWF)\uff1a\u91ce\u751f\u52a8\u7269\u4fdd\u62a4\u7ec4\u7ec7 \u6d4b\u8bd5\u8be6\u60c5\uff1aWorld Wildlife Fund (WWF) \u8fdb\u884c\u4e86\u8fd9\u4e2a\u975e\u5e38\u6210\u529f\u7684\u6350\u8d60\u8868\u683c\u6d4b\u8bd5\uff0c\u4ee5\u589e\u52a0\u6bcf\u6708\u7684\u6350\u52a9\u8005\u6350\u6b3e\u3002\u5047\u8bbe\uff1a\u8be5\u56e2\u961f\u6000\u7591\u63d0\u4f9b\u9ed8\u8ba4\u6350\u6b3e\u91d1\u989d\u4f1a\u9f13\u52b1\u6bd4\u8bbf\u5ba2\u5fc5\u987b\u8f93\u5165\u672a\u5b9a\u4e49\u91d1\u989d\u65f6\u66f4\u591a\u7684\u6350\u6b3e\u3002\u6d4b\u8bd5\u8bbe\u7f6e\uff1a\u4e3a\u4e86\u6d4b\u8bd5\u8fd9\u4e2a\u5047\u8bbe\uff0c\u56e2\u961f\u5c06\u6d41\u91cf\u5206\u6210 50/50\u3002\u5171\u6709 14,489 \u540d\u8bbf\u95ee\u8005\u770b\u5230\u4e86\u5e26\u6709\u7a7a\u767d\u6350\u6b3e\u7bb1\u6216\u53ef\u70b9\u51fb\u6309\u94ae\u7684\u7248\u672c\u3002\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u7ed3\u679c\uff1a\u4e0e\u5931\u8d25\u7684\u201c\u767d\u677f\u201d\u7248\u672c\u76f8\u6bd4\uff0c\u83b7\u80dc\u7684\u53ef\u70b9\u51fb\u6309\u94ae\u683c\u5f0f\u63d0\u5347\u4e86\u5206\u6790\uff1a\u5728\u4ed6\u7684\u4e66\u201c\u9009\u62e9\u7684\u6096\u8bba\u2014\u2014\u4e3a\u4ec0\u4e48\u66f4\u591a\u662f\u66f4\u5c11\u201d\u4e2d\uff0c\u5fc3\u7406\u5b66\u5bb6\u5df4\u91cc\u65bd\u74e6\u8328\u8ba4\u4e3a\uff0c\u6d88\u9664\u9009\u62e9\u4f1a\u51cf\u5c11\u7126\u8651\uff0c\u8ba9\u8d2d\u7269\u8005\u66f4\u5bb9\u6613\u505a\u51fa\u51b3\u5b9a\u5e76\u6700\u7ec8\u8d2d\u4e70\u3002\n\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u548c\u65af\u5766\u798f\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u5728\u4ed6\u4eec\u8457\u540d\u7684\u679c\u9171\u7814\u7a76\u4e2d\u5f97\u51fa\u4e86\u7c7b\u4f3c\u7684\u7ed3\u8bba\u3002\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u8d85\u5e02\u8d2d\u7269\u8005\u5728\u4e24\u4e2a\u91c7\u6837\u7ad9\u4e4b\u4e00\u83b7\u5f97\u679c\u9171\u3002\u7b2c\u4e00\u7ad9\u6709 24 \u79cd\u679c\u9171\u53e3\u5473\u3002\u53e6\u4e00\u4e2a\u53ea\u63d0\u4f9b\u4e86\u516d\u4e2a\u9009\u62e9\u3002\u5728\u62e5\u6709 24 \u79cd\u53e3\u5473\u7684\u8f66\u7ad9\uff0c\u53ea\u6709 3% \u7684\u8d2d\u7269\u8005\u8fdb\u884c\u4e86\u8d2d\u4e70\u3002\u76f8\u53cd\uff0c\u5728\u516d\u79cd\u53e3\u5473\u7684\u8f66\u7ad9\uff0c\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684 30% \u8d2d\u4e70\u4e86\u81f3\u5c11\u4e00\u7f50\u679c\u9171\uff01\u663e\u7136\uff0c\u8f83\u5c0f\u7684\u9009\u62e9\u4ea7\u751f\u4e86\u66f4\u591a\u7684\u9500\u552e\u3002\u53ef\u80fd\u662f\u56e0\u4e3a\u66f4\u591a\u7684\u9009\u62e9\u8ba9\u8d2d\u7269\u8005\u4e0d\u77e5\u6240\u63aa\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u65e0\u6cd5\u505a\u51fa\u51b3\u5b9a\u2014\u2014\u6240\u4ee5\u6839\u672c\u6ca1\u6709\u505a\u51fa\u51b3\u5b9a\u3002\u5728\u5e26\u6709\u7a7a\u767d\u6846\u7684\u7248\u672c\u4e2d\uff0c\u5230\u8fbe\u6350\u8d60\u9875\u9762\u7684\u8bbf\u95ee\u8005\u6709\u591a\u79cd\u9009\u62e9\u3002\u4ed6\u4eec\u9996\u5148\u5fc5\u987b\u51b3\u5b9a\u662f\u5426\u8981\u6350\u8d60\u3002\u90a3\u4e9b\u5904\u4e8e\u6350\u8d60\u5fc3\u6001\u7684\u4eba\u63a5\u4e0b\u6765\u5fc5\u987b\u786e\u5b9a\u8981\u6350\u8d60\u591a\u5c11\u3002\u5bf9\u4e8e\u8bb8\u591a\u6e38\u5ba2\u6765\u8bf4\uff0c\u8fd9\u4e2a\u9009\u62e9\u53ef\u80fd\u5f88\u56f0\u96be\u3002\u6ca1\u6709\u534f\u8bae\u6216\u5efa\u8bae\u7684\u6570\u5b57\u6765\u6307\u5bfc\u4ed6\u4eec\u3002\u7a7a\u767d\u7684\u76d2\u5b50\u9762\u65e0\u8868\u60c5\u5730\u76ef\u7740\u4ed6\u4eec\u3002\u56e0\u6b64\uff0c\u8bb8\u591a\u7528\u6237\u9009\u62e9\u4e86\u6700\u7b80\u5355\u7684\u9009\u9879\uff1a\u4e0d\u5168\u90e8\u6350\u8d60\u3002\u66f4\u591a\u7684\u9009\u62e9\u5e76\u4e0d\u7b49\u4e8e\u66f4\u591a\u7684\u6350\u8d60\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5c06\u9009\u62e9\u9650\u5236\u4e3a\u53ef\u70b9\u51fb\u6309\u94ae\u7684\u7248\u672c\u63d0\u4f9b\u4e86\u5b8c\u7f8e\u7684\u9009\u62e9\u3002\u7528\u6237\u4ecd\u7136\u6709\u4e00\u4e9b\u611f\u77e5\u9009\u62e9\u3002\u4f46\u662f\uff0c\u9009\u62e9\u662f\u6709\u9650\u7684\uff0c\u5e76\u6709\u52a9\u4e8e\u6307\u5bfc\u6350\u52a9\u8005\u3002\u4f5c\u4e3a WWF \u6d4b\u8bd5\u7684\u8bc1\u660e\uff0c\u5982\u679c\u60a8\u4eca\u5929\u8bbf\u95ee\u4ed6\u4eec\u7684\u6350\u8d60\u9875\u9762\uff0c\u60a8\u5c06\u770b\u5230\u4ed6\u4eec\u7f51\u7ad9\u4e0a\u5b9e\u65bd\u7684\u83b7\u80dc\u7248\u672c\u3002\u5bf9\u4e8e\u672a\u6765\u7684\u6d4b\u8bd5\uff0c\u6211\u4eec\u5f88\u60f3\u77e5\u9053\u6350\u8d60\u91d1\u989d\u7684\u987a\u5e8f\u5c06\u5982\u4f55\u5f71\u54cd\u6350\u8d60\u3002\u5982\u679c\u9996\u5148\u63d0\u51fa 25 \u7f8e\u5143\u7684\u9009\u9879\u5e76\u4e14\u5efa\u8bae\u7684\u91d1\u989d\u4ece\u90a3\u91cc\u51cf\u5c11\uff0c\u90a3\u4e48\u66f4\u591a\u7684\u4eba\u4f1a\u6350\u8d60\u66f4\u591a\u7684\u94b1\u5417\uff1f\u6211\u4eec\u4e5f\u5f88\u60f3\u77e5\u9053\u6350\u8d60\u7684\u6700\u4f73\u8d77\u70b9\u3002\u9996\u5148\uff0c\u8981\u95ee 10 \u7f8e\u5143\u662f\u592a\u5c11\u8fd8\u662f\u592a\u591a\uff1f\u53ef\u64cd\u4f5c\u7684\u8981\u70b9\uff1a 1. \u9009\u62e9\u7684\u6096\u8bba\uff1a\u592a\u591a\u7684\u9009\u62e9\u4f1a\u9020\u6210\u201c\u5206\u6790\u762b\u75ea\u201d \u6709\u65f6\u4e0d\u90a3\u4e48\u771f\u5b9e\u5c31\u662f\u66f4\u591a\u3002\u867d\u7136\u9009\u62e9\u53ef\u80fd\u4f1a\u8d4b\u4e88\u6743\u529b\uff0c\u4f46\u63d0\u4f9b\u592a\u591a\u7684\u9009\u62e9\u4f1a\u4f7f\u60a8\u7684\u6f5c\u5728\u5ba2\u6237\u9677\u5165\u6c89\u601d\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u6700\u7ec8\u6839\u672c\u6ca1\u6709\u8f6c\u6362\u3002\u5728\u63d0\u4f9b\u9009\u62e9\u65f6\uff0c\u8bf7\u8003\u8651\u5982\u4f55\u4f7f\u9009\u62e9\u8fc7\u7a0b\u53d8\u5f97\u7b80\u5355\u800c\u4e0d\u662f\u592a\u8fc7\u5206\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u63d0\u4f9b\u9ed8\u8ba4\u6350\u8d60\u91d1\u989d\u6709\u52a9\u4e8e\u6f5c\u5728\u6350\u8d60\u8005\u4e13\u6ce8\u4e8e\u9009\u62e9\u6b63\u786e\u7684\u91d1\u989d\u2014\u2014\u800c\u4e0d\u662f\u662f\u5426\u6350\u8d60\u3002\u5982\u679c WWF \u53ea\u63d0\u4f9b\u6bcf\u6708 100 \u7f8e\u5143\u7684\u6350\u6b3e\u9009\u9879\uff0c\u4ed6\u4eec\u53ef\u80fd\u4e0d\u4f1a\u6536\u5230\u5f88\u591a\u6350\u6b3e\u3002\n\u4eba\u4eec\u56e0\u6709\u611f\u77e5\u7684\u9009\u62e9\u800c\u8301\u58ee\u6210\u957f\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u9009\u62e9\u9700\u8981\u53d7\u5230\u9650\u5236\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u8f7b\u677e\u505a\u51fa\u51b3\u5b9a\u3002\u6d4b\u8bd5\u65b9\u6cd5\u4ee5\u627e\u5230\u5408\u9002\u7684\u5e73\u8861\u6765\u4f18\u5316\u8f6c\u5316\u3002 3. \u6d4b\u8bd5\u9002\u5408\u60a8\u7684\u7f51\u7ad9\u548c\u53d7\u4f17\u7684\u6700\u4f73\u683c\u5f0f \u5207\u52ff\u76f2\u76ee\u5730\u5c06\u67d0\u4e2a\u7ec4\u7ec7\u7684\u53d1\u73b0\u5e94\u7528\u4e8e\u60a8\u7684\u53d7\u4f17\u6216\u7f51\u7ad9\u3002\u59cb\u7ec8\u5bf9\u81ea\u5df1\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4ee5\u627e\u5230\u80fd\u591f\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u8f6c\u5316\u7387\u7684\u6700\u4f73\u683c\u5f0f\u3002\u5355\u51fb\u6b64\u5904\u83b7\u53d6 6 \u4e2a\u66f4\u591a\u6848\u4f8b\u7814\u7a76\u4ee5\u53ca\u6211\u4eec\u7528\u6765\u53d1\u5c55\u6570\u5341\u4e2a\u7535\u5b50\u5546\u52a1\u54c1\u724c\u7684\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u8fc7\u7a0b \u6b64\u7c7b\u7ed3\u679c\u5e76\u975e\u5076\u7136\u53d1\u751f\u3002\u83b7\u53d6\u53e6\u5916 6 \u4e2a\u6848\u4f8b\u7814\u7a76\u548c\u6211\u4eec\u7528\u6765\u53d1\u5c55\u6570\u5341\u4e2a\u7535\u5b50\u5546\u52a1\u54c1\u724c\u7684\u7ecf\u8fc7\u9a8c\u8bc1\u7684\u8fc7\u7a0b\u3002\u968f\u7740\u70b9\u51fb\u6210\u672c\u7684\u4e0d\u65ad\u4e0a\u5347\uff0c\u9ad8\u8f6c\u5316\u7387\u4e0d\u4ec5\u662f\u5728\u7535\u5b50\u5546\u52a1\u4e2d\u751f\u5b58\uff0c\u800c\u4e14\u662f\u84ec\u52c3\u53d1\u5c55\u7684\u6700\u53ef\u9760\u65b9\u6cd5\u4e4b\u4e00\u3002\u8fd9\u4efd\u5907\u5fd8\u5355\u5411\u60a8\u5c55\u793a\u4e86\u5177\u4f53\u65b9\u6cd5\u3002\u5b83\u5305\u542b\u5728\u5176\u4ed6\u5730\u65b9\u4e0d\u5bb9\u6613\u627e\u5230\u7684\u793a\u4f8b\u3001\u89c1\u89e3\u548c\u7b56\u7565\u2014\u2014\u6240\u6709\u8fd9\u4e9b\u90fd\u4f7f\u7528\u89c6\u89c9\u3001\u6613\u4e8e\u6d88\u5316\u3001\u4fe1\u606f\u56fe\u8868\u98ce\u683c\u7684\u5448\u73b0\u65b9\u5f0f\u7ec4\u7ec7\u5728\u4e00\u4e2a\u5730\u65b9\u3002\u7acb\u5373\u8bbf\u95ee\uff01", "note_en": "Background &amp; Testing Goal:   When it comes to soliciting charitable donations, there are certain assumed industry \u201cbest practices.\u201d\n One belief is people will donate more if given the freedom to select their own donation amount.\n A previously conducted donation study by the charitable organization, Oxfam, examined this idea and found interesting results.\n As an experienced testing team WWF, knew that what works well on one site doesn\u2019t always apply to a different site.\n  The first format fit the \u201cindustry standard.\u201d It asked visitors to input their desired monthly donation amount in a blank box. This unrestrictive, \u201cblank slate\u201d format gave visitors a sense of the wide-open possibilities available for giving.\n    Version A:  Blank Box      The other format featured a monthly donation table with fixed amounts. Donors could click to select a set monthly donation. The minimum suggested amount was $10. Every subsequent donation button increased in increments of $5.\n The $15 contribution button was automatically pre-selected and highlighted in blue. The other buttons were colored in black.\n Donors could also click the \u201cOther\u201d button to input an amount not shown.\n The clickable button format was meant to provide an easy starting point, encouraging donors to select an amount that felt right for them. It appeared like this:\n   Version B:  Buttons         Difference Between Versions:     Version A \u2013  Blank box; users could input the amount they chose to contribute.    Version B  \u2013  Buttons featuring fixed amounts donors could select. (winner)     Key Performance Indicator (KPI):     Donations     Test Goal:     Increase donations     Traffic Source:     All: direct, search, referral, organic, paid, affiliate, email list, and social     Audience:     Website users interested in wildlife preservation     Organization:     World Wildlife Fund (WWF): Wildlife preservation organization         Test Details:   World Wildlife Fund (WWF) , conducted this wildly successful donation form test to increase monthly donor contributions.\n    Hypothesis:  The team suspected providing a default donation amount would encourage more donations than if visitors had to input an undefined amount.\n   Test Set-up:  To test this assumption, the team split traffic 50/50. A total of 14,489 visitors saw either the version with the blank donation box, or the clickable button.\n     The Real-Life Results:   Compared to the losing \u201cblank slate\u201d version, the winning clickable button format lifted\n      Analysis:   In his book, \u201c  The Paradox of Choice \u2013 Why More is Less ,\u201d   psychologist Barry Schwartz  argues that eliminating choice reduces anxiety, making it easier for shoppers to decide and, ultimately, purchase.\n Researchers at Columbia and Stanford Universities arrived at a similar conclusion in their   famous jam study .\n In the study, supermarket shoppers were given jam at one of two sampling stations. The first station featured 24 jam flavors. The other offered only six selections.\n At the station with 24 flavors, just 3% of shoppers made a purchase. Conversely, at the station with six flavors, an incredible 30% purchased at least one jar of jam!\n Clearly, the smaller selection generated more sales. Probably because the larger selection overwhelmed shoppers to the point they weren\u2019t able to decide \u2014 so made no decision at all.\n  On the version with the blank box, visitors arriving at the donation page had a vast array of choices.\n They first had to decide whether or not they wanted to donate. Those who were in a giving mindset had to next figure how much to donate. This choice was likely difficult for many visitors.\n There was no protocol or suggested figure to guide them. The blank box stared them blankly in the face. So, many users chose the easiest option: to not donate all. More choice did not equal more donations.\n In contrast, the version that limited choice to a selection of clickable buttons provided the perfect option. Users still had some perceived choice. But, the options were limited and helped guide donors.\n As a testament to WWF\u2019s test, if you go to their donation page today, you\u2019ll see the winning version implemented on their site.\n  For future testing, we\u2019d be curious to know how the order of the donation amount would impact donations. Would a greater amount of people donate more money if the $25 option was presented first and the suggested amount decreased from there?\n We\u2019re also curious to know the optimal starting point for donations. To start, is $10 too little or too much to ask?\n      Actionable Takeaways:     1. The Paradox of Choice: too much choice can create \u201canalysis paralysis\u201d  Sometimes less truly is more. While choice may be empowering, offering too many options can paralyze your prospects into thinking so much they end up not converting at all.\n When offering choice, consider ways to make the selection process easy and not too overwhelming. In this example, providing a default donation amount helped potential donors focus on choosing the  right  amount \u2013 rather than on whether or not to donate.\n      If WWF had only offered a $100 monthly donation option, they probably wouldn\u2019t have gotten many donations.\n People thrive on having perceived choices. But, those choices need to be limited so a decision can be easily made. Test ways to find the right balance to optimize conversions.\n    3. Test the best format for your site and audience    Never blindly apply one organization\u2019s finding to your audience or website. Always test for yourself to find the best format that maximizes conversions.\n  Click Here to Get 6 More Case Studies  and the Proven Process We\u2019ve Used to Grow Dozens of Ecommerce Brands\n  Results like this don\u2019t happen by accident.   Get 6 More Case Studies and the Proven Process  We\u2019ve Used to Grow Dozens of Ecommerce Brands.\n As click costs continue to rise, a high conversion rate is one of the surest ways to not only survive, but also thrive in ecommerce.\n This cheat sheet shows you exactly how. It contains examples, insights and tactics not easily found elsewhere\u2014all organized in one place using visual, easy-to-digest, infographic style presentation.\n   Get Instant Access Now!", "posttime": "2021-08-08 08:38:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f62\u5f0f,box,\u9009\u62e9", "title": "\u7a7a\u767d\u6846\u6216\u6309\u94ae\uff1f\u54ea\u79cd\u5f62\u5f0f\u589e\u52a0\u4e86\u5728\u7ebf\u6350\u8d60\uff1f", "title_en": "Blank Box or Buttons? Which Format Increased Online Donations?", "transed": 1, "url": "https://capitalandgrowth.org/answers/Article/3600914/Blank-Box-or-Buttons-Which-Format-Increased-Online-Donations", "via": "", "real_tags": ["\u5f62\u5f0f", "box", "\u9009\u62e9"]}, {"category": "", "categoryclass": "", "imagename": "e208ecd181887414273e07d166cbcc56.jpeg", "infoid": 1072036, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Nikola Corp. \u521b\u59cb\u4eba\u517c\u524d\u8463\u4e8b\u957f\u7279\u96f7\u5f17\u00b7\u7c73\u5c14\u987f (Trevor Milton) \u51fa\u552e\u8fd9\u5bb6\u7535\u52a8\u5361\u8f66\u5236\u9020\u5546\u7684\u80a1\u7968\u7b79\u96c6\u4e86\u7ea6 7700 \u4e07\u7f8e\u5143\uff0c\u51e0\u5929\u540e\u4ed6\u5bf9\u8bef\u5bfc\u6295\u8d44\u8005\u7092\u4f5c\u80a1\u7968\u7684\u6307\u63a7\u8868\u793a\u4e0d\u8ba4\u7f6a\u3002\u8fd9\u4e9b\u5904\u7f6e\u5728\u5468\u4e94\u665a\u4e9b\u65f6\u5019\u5411\u7f8e\u56fd\u8bc1\u5238\u4ea4\u6613\u59d4\u5458\u4f1a\u63d0\u4ea4\u7684\u6587\u4ef6\u4e2d\u62ab\u9732\u3002\u6587\u4ef6\u663e\u793a\uff0c\u7c73\u5c14\u987f\u901a\u8fc7\u4ed6\u5168\u8d44\u62e5\u6709\u7684\u5185\u534e\u8fbe\u5dde\u516c\u53f8 M&amp;M Residual LLC \u53ca\u5176\u914d\u5076\u95f4\u63a5\u62e5\u6709\u8fd9\u4e9b\u80a1\u4efd\u3002\u6587\u4ef6\u663e\u793a\uff0c7 \u6708 23 \u65e5\uff0c\u4e5f\u5c31\u662f\u7c73\u5c14\u987f\u88ab\u63a7\u8bc1\u5238\u6b3a\u8bc8\u5e76\u88ab\u6307\u63a7\u5bf9\u5c3c\u53e4\u62c9\u7684\u4e1a\u52a1\u548c\u6280\u672f\u80fd\u529b\u6492\u8c0e\u7684\u524d\u516d\u5929\uff0c\u4ed6\u548c M&amp;M Residual \u5c06 600,000 \u80a1\u548c 115 \u4e07\u80a1\u8f6c\u8ba9\u7ed9\u4e86\u4ed6\u7684\u914d\u5076\u3002\u867d\u7136\u7c73\u5c14\u987f\u4e8e 9 \u6708\u5378\u4efb\u6267\u884c\u8463\u4e8b\u957f\uff0c\u4f46\u4ed6\u4ecd\u7136\u662f\u8fd9\u5bb6\u5361\u8f66\u5236\u9020\u5546\u7684\u6700\u5927\u80a1\u4e1c\u3002\u53bb\u5e74 12 \u6708\uff0c\u4ed6\u8bf4\u4ed6\u4ecd\u7136\u81f4\u529b\u4e8e\u6301\u6709\u5c3c\u53e4\u62c9\u7684\u80a1\u4efd\uff0c\u5e76\u4e14\u4e0d\u6253\u7b97\u653e\u5f03\u4ed6\u4f5c\u4e3a\u6700\u9ad8\u6301\u6709\u4eba\u7684\u5730\u4f4d\u3002\u68c0\u5bdf\u5b98\u58f0\u79f0\u7c73\u5c14\u987f\u8bef\u5bfc\u4e86\u6295\u8d44\u8005\u5173\u4e8e\u5c3c\u53e4\u62c9\u7684\u7b2c\u4e00\u8f86\u534a\u5361\u8f66\u539f\u578b\u548c\u8be5\u516c\u53f8\u77ed\u6682\u8ba1\u5212\u901a\u8fc7\u4e0e\u901a\u7528\u6c7d\u8f66\u5408\u4f5c\u9500\u552e\u7684\u76ae\u5361\u3002\u4ed6\u88ab\u6cd5\u5b98\u4ee5 1 \u4ebf\u7f8e\u5143\u7684\u4fdd\u91ca\u91d1\u83b7\u91ca\uff0c\u4fdd\u91ca\u91d1\u4ee5\u4ed6\u5728\u72b9\u4ed6\u5dde\u62e5\u6709\u7684 2,700 \u82f1\u4ea9\u7267\u573a\u4e3a\u62c5\u4fdd\uff0c\u5e76\u627f\u8bfa\u9650\u5236\u4ed6\u7684\u65c5\u884c\uff0c\u4e0d\u4e0e\u6295\u8d44\u8005\u8054\u7cfb\u3002\u81ea\u4ece\u7c73\u5c14\u987f\u8f9e\u804c - \u5c31\u5728\u5c3c\u53e4\u62c9\u901a\u8fc7\u4e0e\u4e00\u5bb6\u7a7a\u767d\u652f\u7968\u516c\u53f8\u5408\u5e76\u4e0a\u5e02\u4ec5\u4ec5\u4e09\u4e2a\u6708\u540e - \u5c3c\u53e4\u62c9\u4e00\u76f4\u5728\u52aa\u529b\u7ef4\u6301\u6295\u8d44\u8005\u7684\u4fe1\u5fc3\u5e76\u7f29\u51cf\u5176\u66fe\u7ecf\u5b8f\u4f1f\u7684\u96c4\u5fc3\u3002\u901a\u7528\u6c7d\u8f66\u5728 11 \u6708\u53d6\u6d88\u4e86\u4e3a Nikola \u5236\u9020\u76ae\u5361\u7684\u8ba1\u5212\uff0c\u8be5\u516c\u53f8\u672c\u5468\u4e0b\u8c03\u4e86\u6700\u521d\u7684\u8f66\u8f86\u4ea4\u4ed8\u9884\u6d4b\uff0c\u8b66\u544a\u79f0\u5b58\u5728\u4f9b\u5e94\u94fe\u95ee\u9898\u3002", "note_en": "Report        Nikola Corp. founder and former chairman Trevor Milton raised about $77 million selling shares in the electric-truck maker, days after pleading not guilty to charges he misled investors to hype the stock.\n  The disposals were disclosed in a filing late Friday with the U.S. Securities and Exchange Commission. Milton indirectly owned the shares through M&amp;M Residual LLC -- a Nevada company he wholly owns -- and his spouse, according to the filing.\n  On July 23, six days before Milton was charged with securities fraud and accused of lying about Nikola\u2019s business and technological capabilities, he and M&amp;M Residual transfered 600,000 and 1.15 million shares to his spouse, the filing shows.\n  While Milton stepped down as executive chairman in September, he remains the truckmaker\u2019s largest shareholder. In December, he said he remained committed to his Nikola stake and didn\u2019t plan to relinquish his position as top holder.\n  Prosecutors claim Milton misled investors about Nikola\u2019s first semi-truck prototype and a pickup the company briefly planned to market through a partnership with  General Motors. He was freed by a judge on $100 million bail that was secured by a 2,700-acre ranch in Utah he owns and promised to limit his travel and not to contact investors.\n  Since Milton resigned -- just three months after Nikola went public by merging with a blank-check company -- Nikola has struggled to maintain investor confidence and scaled back its once-grandiose ambitions.\n  GM scrapped plans to manufacture a pickup for Nikola in November, and the company lowered its initial vehicle delivery projections this week, warning of nagging supply chain issues.", "posttime": "2021-08-08 07:57:48", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u80a1\u7968,\u8d77\u8bc9,indicted", "title": "\u5c3c\u53e4\u62c9\u88ab\u8d77\u8bc9\u7684\u524d\u8463\u4e8b\u957f\u7279\u96f7\u5f17\u00b7\u7c73\u5c14\u987f\u51fa\u552e\u4e86 7700 \u4e07\u7f8e\u5143\u7684\u80a1\u7968", "title_en": "Nikola\u2019s indicted ex-chairman Trevor Milton sells $77 million of stock", "transed": 1, "url": "https://www.autoblog.com/2021/08/07/nikola-trevor-milton-sells-shares/", "via": "", "real_tags": ["\u80a1\u7968", "\u8d77\u8bc9", "indicted"]}, {"category": "", "categoryclass": "", "imagename": "d3f00be994a1150bee2550b444099cef.jpg", "infoid": 1072035, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u00a9 2021 \u8c37\u6b4c\u6709\u9650\u8d23\u4efb\u516c\u53f8", "note_en": "\u00a9 2021 Google LLC", "posttime": "2021-08-08 07:42:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e54\u5e03\u65af,jobs,\u6709\u9650\u8d23\u4efb", "title": "\u53f2\u8482\u592b\u00b7\u4e54\u5e03\u65af\u8c08\u9690\u79c1 (2010) [\u89c6\u9891]", "title_en": "Steve Jobs on Privacy (2010) [video]", "transed": 1, "url": "https://www.youtube.com/watch?v=Ij-jlF98SzA", "via": "", "real_tags": ["\u4e54\u5e03\u65af", "jobs", "\u6709\u9650\u8d23\u4efb"]}, {"category": "", "categoryclass": "", "imagename": "647149dd7caa5e4738ae7d7644470095.jpg", "infoid": 1072034, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u660e\u5e74\uff0cVerizon \u5c06\u4e0e AT&amp;T \u548c T-Mobile \u4e00\u8d77\u9884\u88c5\u5e26\u6709 Google Messages \u4f5c\u4e3a\u9ed8\u8ba4\u77ed\u4fe1\u5e94\u7528\u7684 Android \u624b\u673a\u3002\u5bf9\u4e8e RCS \u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u80dc\u5229\uff0c\u8fd9\u662f Google \u4e00\u76f4\u5728\u63a8\u52a8\u6211\u4eec\u6240\u6709\u4eba\u91c7\u7528\u7684\u804a\u5929\u534f\u8bae\u3002\u4f46\u7a76\u7adf\u4ec0\u4e48\u662f RCS\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u5b83\uff1f\u7b80\u77ed\u7248\u672c\uff1a\u5b83\u662f\u5bf9\u667a\u80fd\u624b\u673a\u4ece\u4e00\u5f00\u59cb\u5c31\u4f7f\u7528\u7684\u6807\u51c6 SMS/MMS \u77ed\u4fe1\u6807\u51c6\u7684\u5347\u7ea7\u3002\u5b83\u4e3a\u6211\u4eec\u5728\u6d88\u606f\u4f20\u9012\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u5f88\u9177\u7684\u9644\u52a0\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u652f\u6301\uff0c\u4f8b\u5982\u9605\u8bfb\u56de\u6267\u548c\u56fe\u50cf\uff0c\u5b83\u8fd8\u589e\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u5b89\u5168\u5c42\u3002\u662f\u7684\uff0c\u5b83\u5f88\u50cf Apple \u7684 iMessage\u2014\u2014\u867d\u7136\u5b83\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\u3002\u5b83\u4e0d\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u7684\u6807\u51c6\u3002\u957f\u7248\u672c\uff1aRCS\uff0c\u4ee3\u8868\u5bcc\u901a\u4fe1\u670d\u52a1\uff0c\u662f\u4e00\u4e2a\u57fa\u672c\u6807\u51c6\uff0c\u800c\u4e0d\u662f\u50cf WhatsApp \u6216 Telegram \u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u9700\u8981\u8fd0\u8425\u5546\u7684\u652f\u6301\u624d\u80fd\u5de5\u4f5c\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Verizon\u3001AT&amp;T \u548c T-Mobile \u7684\u652f\u6301\u610f\u4e49\u91cd\u5927\uff08\u5b83\u73b0\u5728\u5728\u6570\u5341\u4e2a\u56fd\u5bb6/\u5730\u533a\u6709\u6548\uff09\u3002\u7531 Google \u5f00\u53d1\u7684 Android \u4e0a\u7684 Messages \u5e94\u7528\u7a0b\u5e8f\u662f\u8bbf\u95ee RCS \u63d0\u4f9b\u7684\u6240\u6709\u5185\u5bb9\u7684\u4e3b\u8981\u65b9\u5f0f\u2014\u2014\u5c3d\u7ba1\u7406\u8bba\u4e0a\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u652f\u6301\u8be5\u6807\u51c6\u3002\u5173\u4e8e RCS \u672a\u6765\u7684\u4e00\u5927\u95ee\u9898\u662f Apple \u662f\u5426\u4f1a\u540c\u610f\u652f\u6301\u5b83\uff0c\u8ba9 Android \u7528\u6237\u5728 iPhone \u548c\u5176\u4ed6 Apple \u8bbe\u5907\u4e0a\u7684 Messages \u5e94\u7528\u7a0b\u5e8f\u4e2d\u5904\u4e8e\u66f4\u52a0\u5e73\u7b49\u7684\u5730\u4f4d\u3002 SMS\uff08\u77ed\u6d88\u606f\u670d\u52a1\uff09\u548c MMS\uff08\u591a\u5a92\u4f53\u6d88\u606f\u670d\u52a1\uff09\u5e76\u4e0d\u662f\u771f\u6b63\u4e3a\u6211\u4eec\u901a\u8fc7\u624b\u673a\u8fdb\u884c\u901a\u4fe1\u7684\u73b0\u4ee3\u65b9\u5f0f\u800c\u6784\u5efa\u7684\uff0cRCS \u8bd5\u56fe\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5b83\u589e\u52a0\u6216\u6539\u8fdb\u4e86\u5bf9\u5171\u4eab\u5927\u5206\u8fa8\u7387\u56fe\u50cf\u548c\u89c6\u9891\u3001\u7fa4\u804a\u3001\u9605\u8bfb\u56de\u6267\u3001\u89c6\u9891\u901a\u8bdd\u548c\u5b9e\u9645\u8d85\u8fc7 160 \u4e2a\u5b57\u7b26\u7684\u6d88\u606f\u7684\u652f\u6301\u3002\u60a8\u53ef\u4ee5\u5bf9\u6d88\u606f\u6dfb\u52a0\u53cd\u5e94\uff0c\u67e5\u770b\u5176\u4ed6\u4eba\u4f55\u65f6\u8f93\u5165\u5185\u5bb9\uff0c\u5e76\u5c06\u989d\u5916\u5143\u7d20\uff08\u4f8b\u5982 GIF\u3001\u8d34\u7eb8\u548c\u60a8\u5f53\u524d\u7684\u4f4d\u7f6e\uff09\u653e\u5165\u5bf9\u8bdd\u4e2d\u2014\u2014\u8fd9\u4e9b\u529f\u80fd\u60a8\u53ef\u80fd\u5df2\u7ecf\u4e60\u60ef\u5e76\u63a5\u53d7\u4e3a\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684\u6807\u51c6\u914d\u7f6e\u3002\n\u5e55\u540e\u4e5f\u6709\u53d8\u5316\u548c\u5347\u7ea7\u3002 SMS/MMS \u9700\u8981\u4e0e\u60a8\u7684\u8702\u7a9d\u670d\u52a1\u5efa\u7acb\u6570\u636e\u8fde\u63a5\uff0c\u800c RCS \u4e5f\u53ef\u901a\u8fc7\u8702\u7a9d\u7f51\u7edc\u6216 Wi-Fi \u5de5\u4f5c\u3002\u5982\u679c\u60a8\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u6ca1\u6709\u4fe1\u53f7\uff0c\u4f46\u60a8\u53ef\u4ee5\u627e\u5230\u65e0\u7ebf\u7f51\u7edc\uff0c\u60a8\u7684\u6d88\u606f\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u3002\u622a\u81f3 2021 \u5e74 6 \u6708\uff0c\u8be5\u6807\u51c6\u73b0\u5728\u8fd8\u4e3a\u4e00\u5bf9\u4e00\u804a\u5929\u63d0\u4f9b\u7aef\u5230\u7aef\u52a0\u5bc6\u3002\u60a8\u5e94\u8be5\u4f1a\u5728\u201c\u6d88\u606f\u201d\u4e2d\u7684\u201c\u53d1\u9001\u201d\u6309\u94ae\u65c1\u8fb9\u770b\u5230\u4e00\u4e2a\u5c0f\u9501\u7b26\u53f7\uff08\u4ee5\u53ca\u5df2\u53d1\u9001\u6d88\u606f\u65c1\u8fb9\u7684\u4e00\u4e2a\u5c0f\u6302\u9501\uff09\u6765\u786e\u8ba4\u8fd9\u4e00\u70b9\u3002\u5982\u679c\u60a8\u4f7f\u7528\u542f\u7528\u4e86 RCS \u7684\u6d88\u606f\u4e0e\u67d0\u4eba\u804a\u5929\uff0c\u5219\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5e94\u542f\u7528\u8be5\u529f\u80fd\u3002\u7aef\u5230\u7aef\u52a0\u5bc6\u5728\u8fd9\u91cc\u4e0e\u5728\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e00\u6837\u91cd\u8981\u3002\u8fd9\u610f\u5473\u7740\u5176\u4ed6\u4eba\u2014\u2014\u751a\u81f3\u8c37\u6b4c\u6216\u60a8\u7684\u8fd0\u8425\u5546\u2014\u2014\u90fd\u65e0\u6cd5\u770b\u5230\u6b63\u5728\u53d1\u751f\u7684\u5bf9\u8bdd\uff0c\u56e0\u4e3a\u53ea\u6709\u6d89\u53ca\u7684\u4e24\u4e2a\u8bbe\u5907\u62e5\u6709\u89e3\u5bc6\u6240\u9700\u7684\u5bc6\u94a5\u3002\u60a8\u5e94\u8be5\u5728\u4efb\u4f55\u5904\u7406\u654f\u611f\u4fe1\u606f\uff08\u5305\u62ec\u901a\u4fe1\uff09\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5bfb\u627e\u5b89\u5168\u529f\u80fd\u3002\u6700\u521d\u7531\u4e00\u7ec4\u79fb\u52a8\u8fd0\u8425\u5546\u4e8e 2007 \u5e74\u6784\u60f3\uff0cRCS \u4e8b\u4e1a\u5df2\u88ab Google\uff08\u548c\u4e09\u661f\uff09\u4f5c\u4e3a\u5c06\u7c7b\u4f3c iMessage \u7684\u529f\u80fd\u5f15\u5165 Android \u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u8c37\u6b4c\u5b9e\u9645\u4e0a\u653e\u5f03\u4e86\u5176\u77ed\u6682\u7684 Google Allo \u6d88\u606f\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u4f5c\uff0c\u8f6c\u800c\u652f\u6301 RCS \u901a\u8fc7\u6d88\u606f\u5de5\u4f5c\u3002\u90a3\u4e48\u4f60\u5982\u4f55\u771f\u6b63\u5f00\u542f\u5b83\u5462\uff1f\u5047\u8bbe\u60a8\u7684\u624b\u673a\u5df2\u8fde\u63a5\u5230\u652f\u6301 RCS \u7684\u8fd0\u8425\u5546\uff0c\u5e76\u4e14\u60a8\u7684\u624b\u673a\u4e0a\u5b89\u88c5\u4e86 Messages\uff0c\u8bf7\u6253\u5f00\u5e94\u7528\u7a0b\u5e8f\u5e76\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u4e09\u4e2a\u70b9\u3002\u9009\u62e9\u8bbe\u7f6e\uff0c\u7136\u540e\u9009\u62e9\u804a\u5929\u529f\u80fd\uff0c\u7136\u540e\u6253\u5f00\u542f\u7528\u804a\u5929\u529f\u80fd\u5207\u6362\u5f00\u5173\u3002\u518d\u5f80\u4e0b\uff0c\u60a8\u53ef\u4ee5\u542f\u7528\u6216\u7981\u7528\u67d0\u4e9b\u529f\u80fd\uff0c\u4f8b\u5982\u9605\u8bfb\u56de\u6267\u6216\u6253\u5b57\u6307\u793a\u5668\u3002\u5982\u679c\u60a8\u6709\u4e09\u661f\u624b\u673a\uff0c\u90a3\u4e48\u9ed8\u8ba4\u7684\u4e09\u661f\u6d88\u606f\u5e94\u7528\u7a0b\u5e8f\u4e5f\u652f\u6301 RCS\uff0c\u4f46\u65e0\u6cd5\u6253\u5f00\u6216\u5173\u95ed\u5b83 - \u60a8\u7684\u8fd0\u8425\u5546\u5df2\u542f\u7528\u6216\u672a\u542f\u7528\u3002\u8981\u68c0\u67e5\uff0c\u8bf7\u70b9\u51fb\u5bf9\u8bdd\u5217\u8868\u53f3\u4e0a\u89d2\u7684\u4e09\u4e2a\u70b9\uff0c\u7136\u540e\u9009\u62e9\u8bbe\u7f6e\u548c\u804a\u5929\u8bbe\u7f6e\u3002\u5982\u679c\u60a8\u5728\u6b64\u5904\u770b\u5230\u201c\u5171\u4eab\u9605\u8bfb\u72b6\u6001\u201d\u548c\u201c\u5171\u4eab\u952e\u5165\u6307\u793a\u201d\u7b49\u9009\u9879\uff0c\u5219\u8868\u793a\u5df2\u542f\u7528 RCS\uff08\u60a8\u53ef\u4ee5\u6253\u5f00\u6216\u5173\u95ed\u8fd9\u4e9b\u529f\u80fd\uff0c\u5c31\u50cf\u5728 Google \u5e94\u7528\u4e2d\u4e00\u6837\uff09\u3002\u6709\u4e86\u5b83\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f00\u59cb\u4e86\uff1a\u4f60\u53ef\u4ee5\u4e0e\u4efb\u4f55\u5176\u4ed6\u4f7f\u7528 RCS \u7684\u4eba\u4e00\u8d77\u4f7f\u7528 RCS\u3002\u5982\u679c\u60a8\u7ed9\u5c1a\u672a\u5728\u5176 Android \u8bbe\u5907\u4e0a\u542f\u7528\u8be5\u529f\u80fd\u7684\u4eba\u53d1\u77ed\u4fe1\uff0c\u60a8\u5c06\u6062\u590d\u5230\u6807\u51c6\u7684 SMS/MMS \u7cfb\u7edf\u3002\u5982\u679c\u60a8\u4f7f\u7528 iPhone \u5411\u67d0\u4eba\u53d1\u9001\u6d88\u606f\uff0c\u8fd9\u540c\u6837\u9002\u7528\uff0c\u56e0\u4e3a Apple \u624b\u673a\u4e0d\u652f\u6301 RCS\u2014\u2014\u81f3\u5c11\u76ee\u524d\u4e0d\u652f\u6301\u3002\n\ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f \u60f3\u8981\u83b7\u5f97\u5065\u5eb7\u7684\u6700\u4f73\u5de5\u5177\u5417\uff1f\u67e5\u770b\u6211\u4eec\u7684 Gear \u56e2\u961f\u7cbe\u9009\u7684\u6700\u4f73\u5065\u8eab\u8ffd\u8e2a\u5668\u3001\u8dd1\u6b65\u88c5\u5907\uff08\u5305\u62ec\u978b\u5b50\u548c\u889c\u5b50\uff09\u548c\u6700\u4f73\u8033\u673a", "note_en": "Next year Verizon  will join AT&amp;T and T-Mobile in preloading Android phones with  Messages by Google as the default texting app. It&#39;s a big win for RCS, the chat protocol that Google has been pushing us all to adopt. But  what exactly is RCS, and why do you need it?\n The short version: It&#39;s an upgrade on the standard SMS/MMS texting standards that smartphones have been using from the beginning. It brings better support for all the cool add-ons we&#39;re used to in our messaging apps, like read receipts and images, and it adds some  extra security layers too.\n Yes, it&#39;s a lot like iMessage from Apple\u2014though it&#39;s not quite that simple. It&#39;s less of an  app, and more of a  standard that apps can use.\n  The long version: RCS, which stands for  Rich Communication Services, is a fundamental standard rather than an app like WhatsApp or Telegram. It requires carrier support to work, which is why the backing of Verizon, AT&amp;T, and T-Mobile is a big deal (it now works in dozens of countries).\n   The Messages app on Android, developed by Google, is the main way to get access to everything that RCS offers\u2014though theoretically other apps can support the standard as well. One of the big questions about the future of RCS is whether or not Apple will agree to support it, putting Android users on more of an equal footing inside the Messages app on iPhones and other Apple devices.\n  SMS (Short Message Service) and MMS (Multimedia Messaging Service) weren&#39;t really built for the modern way that we communicate through our phones, and RCS tries to fix that. It adds or improves support for sharing large-resolution images and video, group chatting, read receipts, video calls, and messages that actually go beyond 160 characters.\n  You can add reactions to messages, see when someone else is typing, and drop extra elements like GIFs, stickers, and your current location into conversations\u2014features you may well be used to and accept as standard in other apps.\n There are changes and upgrades behind the scenes as well. Whereas SMS/MMS requires a data connection to your cellular service, RCS also works over cell networks or Wi-Fi. If you don&#39;t have a signal for whatever reason but you can find a wireless network, your message can still go through.\n As of  June 2021, the standard also now brings with it  end-to-end encryption for one-to-one chats as well. You should see a small lock symbol next to the Send button in Messages (and a small padlock next to sent messages) confirming this. The feature should be enabled by default if you&#39;re chatting with someone using Messages with RCS enabled.\n  End-to-end encryption is as important here as it is  in other apps. It means that no one else\u2014not even Google or your carrier\u2014can see the conversation that&#39;s taking place, because only the two devices involved have the necessary keys to decrypt it. The security feature is something you should look for in any app that handles sensitive information, including communications.\n  Initially conceived by a group of mobile operators in 2007, the RCS cause has been taken up by Google (and Samsung) as a way of bringing iMessage-like features to Android. Google actually abandoned work on its short-lived  Google Allo messaging app in favor of RCS working through Messages.\n So how do you actually turn it on? Assuming your phone is connected to a carrier that supports RCS, and you have  Messages installed on your phone, open up the app and tap the three dots in the top right corner. Choose  Settings then  Chat features, then turn on the  Enable chat features toggle switch. Further down you can enable or disable some of the features, like read receipts or typing indicators.\n If you have a Samsung handset, then the default Samsung Messages app supports RCS as well, but there&#39;s no way to turn it on or off\u2014either your carrier has enabled it or it hasn&#39;t. To check, tap the three dots in the top right corner of the conversation list, then choose  Settings and  Chat settings. If you see options like  Share read status and  Share typing indications here, RCS is enabled (and you can turn these features on or off, as in the Google app).\n With that, you&#39;re good to go: You can use RCS with anyone else who&#39;s using RCS. If you&#39;re texting someone who hasn&#39;t enabled the feature on their Android device, you&#39;ll revert back to the standard SMS/MMS system. The same applies if you&#39;re messaging someone with an iPhone, as Apple phones don&#39;t support RCS\u2014at least, not yet.\n   \ud83c\udfc3\ud83c\udffd\u200d\u2640\ufe0f Want the best tools to get healthy? Check out our Gear team\u2019s picks for the  best fitness trackers,  running gear (including  shoes and  socks), and  best headphones", "posttime": "2021-08-08 07:42:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6307\u5357,rcs", "title": "RCS \u6307\u5357\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u8ba9\u77ed\u4fe1\u53d8\u5f97\u66f4\u597d", "title_en": "A Guide to RCS, and Why It Makes Texting So Much Better", "transed": 1, "url": "https://www.wired.com/story/guide-to-rcs-why-it-makes-texting-better/", "via": "", "real_tags": ["\u6307\u5357", "rcs"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072033, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5ea7\u57ce\u5e02\u88ab\u706b\u7130\u5305\u56f4\u3002\u5728\u5730\u9762\u4e0a\uff0c\u6d41\u4f20\u7740\u82f1\u96c4\u4e3b\u4e49\u7684\u6545\u4e8b\u2014\u2014\u4ee5\u53ca\u5bf9\u672a\u6765\u7684\u6050\u60e7 \u5229\u7279\u5c14\u5728\u98de\u5f80\u96c5\u5178\u7684\u822a\u73ed\u4e0a\u4e3a\u6211\u4eec\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4eba\u505a\u597d\u4e86\u51c6\u5907\uff0c\u56e0\u4e3a\u5b83\u5728\u98de\u673a\u964d\u843d\u65f6\u626b\u8fc7\u98de\u673a\u4e24\u4fa7\u7684\u5927\u706b\u5f15\u8d77\u7684\u4e91\u5c42\u3002\u661f\u671f\u4e94\u3002\u5e0c\u814a\u6781\u7aef\u9ad8\u6e29\u7684\u6d88\u606f\u6574\u5468\u90fd\u4f20\u5230\u4e86\u56fd\u5916\uff0c\u7528\u8d8a\u6765\u8d8a\u7edd\u671b\u7684\u8bed\u8a00\u5305\u88c5\u8d77\u6765\u3002\u6c14\u6e29\u6253\u7834\u4e86\u51e0\u4e4e\u6ca1\u6709\u4eba\u60f3\u8c61\u8fc7\u7684\u8bb0\u5f55\u3002\u5982\u679c\u661f\u671f\u4e00\u4e0d\u597d\uff0c\u90a3\u4e48\u661f\u671f\u4e8c\u5c31\u66f4\u7cdf\u3002\u5728\u8be5\u56fd\u7684\u67d0\u4e9b\u5730\u533a\uff0c\u6c34\u94f6\u6e29\u5ea6\u5df2\u8fbe\u5230 47 \u6444\u6c0f\u5ea6\uff08117 \u534e\u6c0f\u5ea6\uff09\uff0c\u65e0\u4eba\u673a\u4e0a\u7684\u70ed\u50cf\u4eea\u8bb0\u5f55\u4e86\u96c5\u5178\u5e02\u4e2d\u5fc3 55 \u6444\u6c0f\u5ea6\u7684\u5730\u9762\u6e29\u5ea6\u3002\u5230\u661f\u671f\u4e09\uff0c\u6211\u4eec\u542c\u8bf4\u5e0c\u814a\u9996\u90fd\u5317\u90e8\u8fb9\u7f18\u7684\u6574\u7247\u90ca\u533a\u68ee\u6797\u90fd\u88ab\u5927\u706b\u70e7\u6bc1\u4e86\u3002\u5730\u72f1\u4f3c\u4e4e\u8ba9\u4f46\u4e01\u7684\u5730\u72f1\u8ba9\u4eba\u60f3\u8d77\u4e86\u4ed6\u4eec\u6240\u7ecf\u8fc7\u7684\u4e00\u5207\u3002\u670b\u53cb\u4eec\u5931\u53bb\u4e86\u5bb6\u56ed\uff1b\u968f\u7740\u5c45\u6c11\u548c\u6e38\u5ba2\u4ee5\u4efb\u4f55\u53ef\u80fd\u7684\u65b9\u5f0f\u9003\u79bb\u75ab\u533a\uff0c\u6570\u5343\u4eba\u5df2\u88ab\u758f\u6563\u3002\u9732\u53f0\uff0c\u96c5\u5178\u4eba\u62b5\u5fa1\u9177\u70ed\u7684\u5598\u606f\u4e4b\u6240\uff0c\u5df2\u7ecf\u53d8\u6210\u4e86\u6ee1\u662f\u7070\u70ec\u7684\u7981\u533a\u3002 \u201c\u8fd9\u91cc\u592a\u75af\u72c2\u4e86\u3002\u5728\u6781\u7aef\u9ad8\u6e29\u548c\u91ce\u706b\u4e4b\u95f4\uff0c\u611f\u89c9\u50cf\u662f\u4e16\u754c\u672b\u65e5\uff0c\u201d\u6700\u8fd1\u88ab\u4efb\u547d\u4e3a\u96c5\u5178\u7b2c\u4e00\u4efb\u9996\u5e2d\u70ed\u5b98\u7684\u670b\u53cb\u57c3\u83b1\u5c3c\u00b7\u7c73\u5c14\u7ef4\u5229 (Eleni Myrivili) \u5468\u56db\u5728\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u4e2d\u5199\u9053\uff0c\u5f53\u65f6\u519b\u961f\u88ab\u6d3e\u53bb\u534f\u52a9\u6d88\u9632\u5458\u3002 \u201c\u5728\u96c5\u5178\uff0c\u7070\u70ec\u6b63\u50cf\u96e8\u70b9\u4e00\u6837\u843d\u5728\u6211\u4eec\u8eab\u4e0a\u3002\u201d\u4ece\u5929\u7a7a\u4e2d\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\uff0c\u8fd9\u5ea7\u57ce\u5e02\u6b63\u5904\u4e8e\u5305\u56f4\u4e4b\u4e2d\uff0c\u9677\u5165\u4e86\u96be\u4ee5\u5fcd\u53d7\u7684\u9ad8\u6e29\u71c3\u70e7\u7684\u5faa\u73af\u4e4b\u4e2d\uff0c\u5728\u5982\u6b64\u5e72\u71e5\u7684\u5730\u5f62\u4e0a\uff0c\u5b83\u968f\u65f6\u51c6\u5907\u7740\u706b\u3002\u8be5\u56fd\u6c11\u4e8b\u4fdd\u62a4\u8d1f\u8d23\u4eba\u5c3c\u79d1\u65af\u00b7\u54c8\u8fbe\u5229\u4e9a\u65af (Nikos Hardalias) \u544a\u8bc9\u8bb0\u8005\uff0c\u5927\u706b\u5728\u5168\u56fd\u8303\u56f4\u5185\u8086\u8650\uff0c\u6709\u7684\u5927\u6709\u5c0f\uff0c\u6709\u7684\u88ab\u6251\u706d\uff0c\u7136\u540e\u53c8\u91cd\u65b0\u70b9\u71c3\u3002\u4ed6\u8bf4\uff0c\u60c5\u51b5\u4e0d\u4ec5\u201c\u6781\u5176\u5371\u9669\u201d\uff0c\u800c\u4e14\u53f2\u65e0\u524d\u4f8b\uff0c\u636e\u4f30\u8ba1\uff0c\u8bd5\u56fe\u200b\u200b\u4fdd\u62a4\u4eba\u53e3\u7a20\u5bc6\u5730\u533a\u3001\u7535\u529b\u8bbe\u65bd\u548c\u5386\u53f2\u9057\u8ff9\u7684\u6d88\u9632\u5458\u5728\u4e00\u5468\u5185\u4e0e 154 \u573a\u91ce\u706b\u4f5c\u6597\u4e89\u3002\u5468\u516d\u4ecd\u670960\u591a\u573a\u5927\u706b\u4ecd\u5728\u8086\u8650\u3002\n\u201c\u8fc7\u53bb\u51e0\u5929\uff0c\u6211\u4eec\u9762\u4e34\u7740\u6211\u56fd\u524d\u6240\u672a\u6709\u7684\u5c40\u9762\uff0c\u91ce\u706b\u7684\u5f3a\u5ea6\u548c\u5206\u5e03\u8303\u56f4\u4ee5\u53ca[\u5e0c\u814a]\u5404\u5730\u7684\u65b0\u7206\u53d1\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u6211\u60f3\u5411\u4f60\u4fdd\u8bc1\uff0c\u6240\u6709\u53ef\u7528\u7684\u529b\u91cf\u90fd\u5728\u53c2\u4e0e\u6218\u6597\u3002\u201d\u5728\u6d53\u70df\u5f25\u6f2b\u7684\u5929\u7a7a\u4e0b\u2014\u2014\u5982\u6b64\u6d53\u5bc6\uff0c\u5f53\u5c40\u6566\u4fc3\u5c45\u6c11\u5728\u6237\u5916\u6234\u53e3\u7f69\u5e76\u5173\u95ed\u5bb6\u4e2d\u7684\u7a97\u6237\u2014\u2014\u5305\u62ec\u82f1\u56fd\u5728\u5185\u7684\u5176\u4ed6\u56fd\u5bb6\u672c\u5468\u672b\u52a0\u7d27\u63d0\u4f9b\u5e2e\u52a9\uff0c\u5411\u96c5\u5178\u6d3e\u9063\u4e86\u55b7\u6c34\u98de\u673a\u3001\u6d88\u9632\u5458\u548c\u8f66\u8f86\u3002\u5c3d\u7ba1\u6c14\u6e29\u5728\u8d85\u8fc7 40 \u6444\u6c0f\u5ea6\u7684 11 \u5929\u540e\u6709\u6240\u4e0b\u964d\uff0c\u4f46\u5468\u4e94\u98ce\u529b\u4e5f\u6709\u6240\u589e\u5f3a\uff0c\u5728\u57ce\u5e02\u5185\u5916\u5f62\u6210\u4e86\u65b0\u7684\u7206\u53d1\u70b9\u3002\u5230\u5468\u516d\uff0c\u4e00\u573a\u5de8\u5927\u7684\u5927\u706b\u5df2\u7ecf\u70e7\u6bc1\u4e86\u68ee\u6797\u548c\u623f\u5c4b\uff0c\u671d\u5411\u8be5\u5e02\u7684\u4e3b\u8981\u6c34\u5e93\u9a6c\u62c9\u677e\u6e56\uff0c\u6b63\u6cbf\u7740\u5e15\u5c3c\u8428\u5c71\u7684\u659c\u5761\u5411\u4e0a\u63a8\u8fdb\uff0c\u56f4\u7ed5\u7740\u4e00\u4e2a\u88ab\u8ba4\u4e3a\u662f\u96c5\u5178\u6700\u540e\u4e00\u4e2a\u5b9e\u8d28\u6027\u201c\u7eff\u80ba\u201d\u7684\u56fd\u5bb6\u516c\u56ed\uff0c\u5e76\u6563\u53d1\u51fa\u66f4\u591a\u4ee4\u4eba\u7a92\u606f\u7684\u70df\u96fe\u7a7f\u8fc7\u963f\u63d0\u5361\u76c6\u5730\u3002\u5728\u9996\u90fd\u4ee5\u4e1c\u7684\u57c3\u7ef4\u4e9a\u5c9b\u4e0a\uff0c\u5927\u706b\u4e5f\u4ece\u897f\u5411\u5317\u8086\u8650\uff0c\u7a7f\u8fc7\u5d0e\u5c96\u7684\u6797\u5730\uff0c\u6e21\u8f6e\u3001\u65c5\u6e38\u8239\u548c\u6e14\u6c11\u4e89\u5148\u6050\u540e\u5730\u4ece\u6d77\u6ee8\u6751\u5e84\u548c\u6d77\u6ee9\u758f\u6563\u4e86 1000 \u591a\u4eba\uff0c\u620f\u5267\u6027\u7684\u4e00\u5e55\u53d1\u751f\u4e86\u3002\u53ef\u4ee5\u770b\u5230\u7537\u4eba\u548c\u5973\u4eba\u5728\u767b\u4e0a\u8239\u53ea\u524d\u5f80\u5b89\u5168\u7684\u5730\u65b9\u65f6\uff0c\u4ed6\u4eec\u6293\u7740\u5a74\u513f\uff0c\u7528\u6905\u5b50\u62ac\u7740\u8001\u4eba\u548c\u5f31\u52bf\u7fa4\u4f53\u3002\u5728\u4f2f\u7f57\u5954\u5c3c\u6492\u534a\u5c9b\u66f4\u5357\u90e8\uff0c\u7d27\u6025\u670d\u52a1\u90e8\u95e8\u8fde\u7eed\u7b2c\u4e94\u5929\u52aa\u529b\u63a7\u5236\u5927\u706b\uff0c\u5927\u706b\u5df2\u7ecf\u6467\u6bc1\u4e86\u4f0a\u5229\u4e9a\u548c\u58a8\u897f\u5c3c\u4e9a\u7684\u5927\u90e8\u5206\u5730\u533a\uff0c\u5e76\u5a01\u80c1\u5230\u53e4\u8001\u7684\u5965\u6797\u5339\u4e9a\uff0c\u90a3\u91cc\u7684\u5965\u8fd0\u5723\u706b\u6bcf\u56db\u5e74\u70b9\u71c3\u4e00\u6b21\u3002\u8003\u8651\u5230 2018 \u5e74\u590f\u5929\u5e2d\u5377\u6d77\u6ee8\u5ea6\u5047\u80dc\u5730\u9a6c\u8482\u7684\u706b\u707e\u9020\u6210\u7684\u5de8\u5927\u751f\u547d\u635f\u5931\uff0c\u5e0c\u814a\u653f\u5e9c\u5df2\u5c06\u758f\u6563\u5217\u4e3a\u4f18\u5148\u4e8b\u9879\u3002\n\u8fc4\u4eca\u4e3a\u6b62\uff0c\u5df2\u6709\u4e24\u8d77\u4e0e\u6700\u65b0\u706b\u707e\u6709\u5173\u7684\u6b7b\u4ea1\u62a5\u544a\u2014\u2014\u4e00\u540d\u53d7\u5bb3\u8005\u662f\u4e00\u540d\u5fd7\u613f\u6d88\u9632\u5458\uff0c\u53e6\u4e00\u540d\u53d7\u5bb3\u8005\u662f\u53d7\u8fc7\u82f1\u56fd\u6559\u80b2\u7684\u96c5\u5178\u5de5\u5546\u4f1a\u4f1a\u957f\u5eb7\u65af\u5766\u4e01\u8bfa\u65af\u00b7\u7c73\u67e5\u6d1b\u65af (Konstantinos Michalos)\u3002\u6bc1\u706d\u6027\u7684\u91ce\u706b\u5728\u96c5\u5178\u4e1c\u5317\u90e8\u90ca\u533a Kryoneri \u8513\u5ef6\u3002\u5e0c\u814a\u603b\u7406\u57fa\u91cc\u4e9a\u79d1\u65af\u00b7\u7c73\u4f50\u5854\u57fa\u65af (Kyriakos Mitsotakis) \u8868\u793a\uff0c\u6c14\u5019\u53d8\u5316\u663e\u7136\u662f\u5bfc\u81f4\u201c\u8be5\u56fd\u53d8\u6210\u706b\u836f\u6876\u201d\u7684\u6c14\u5019\u53d8\u5316\u7684\u7f6a\u9b41\u7978\u9996\uff0c\u5e76\u5728\u90bb\u56fd\u571f\u8033\u5176\u548c\u610f\u5927\u5229\u5f15\u53d1\u4e86\u51e0\u5341\u5e74\u6765\u6700\u4e25\u91cd\u7684\u707e\u96be\u3002\u96c5\u5178\u662f\u6b27\u6d32\u5927\u9646\u6700\u70ed\u7684\u5927\u90fd\u5e02\uff0c\u6c14\u8c61\u5b66\u5bb6\u9884\u6d4b\uff0c\u672a\u6765 30 \u5e74\uff0c\u6574\u4e2a\u5730\u4e2d\u6d77\u5730\u533a\u7684\u5e74\u5e73\u5747\u6c14\u6e29\u5c06\u4e0a\u5347 2 \u6444\u6c0f\u5ea6\u3002\u4f46\u662f\uff0c\u5728\u81ea\u7136\u51fa\u95ee\u9898\u7684\u9ed1\u6697\u4e2d\uff0c\u4e0a\u5468\u4e5f\u51fa\u73b0\u4e86\u975e\u51e1\u7684\u52c7\u6562\u6545\u4e8b\u3002\u5468\u516d\u51cc\u6668 3 \u70b9\uff0c\u4ed6\u5728 Parnitha \u5c71\u811a\u4e0b\u7684 Thrakomakedones \u7684\u5bb6\u88ab\u5927\u706b\u5937\u4e3a\u5e73\u5730\uff0c\u4e9a\u5386\u5c71\u5fb7\u7f57\u65af\u00b7\u91cc\u7d22\u65af (Alexandros Rizos) \u51b3\u5b9a\u7559\u4e0b\u6765\u201c\u4fdd\u536b\u201d\u8fd9\u5904\u623f\u4ea7\u3002\u4ed6\u7684\u59bb\u5b50\u548c\u5b69\u5b50\u5b89\u5168\u64a4\u79bb\uff0c\u8fd9\u4f4d 55 \u5c81\u7684\u5546\u4e1a\u53d1\u5c55\u987e\u95ee\u7ad9\u5728\u4e24\u5c42\u697c\u7684\u5c4b\u9876\u4e0a\uff0c\u4e3a\u4ed6\u7684\u82b1\u56ed\u548c\u677e\u6811\u9876\u6d47\u6c34\uff0c\u671f\u5f85\u7740\u706b\u52bf\u5373\u5c06\u6765\u4e34\u3002 \u201c\u6211\u5bf9\u8fd9\u6240\u623f\u5b50\u975e\u5e38\u4f9d\u604b\uff0c\u201d\u72c2\u70ed\u7684\u9a6c\u62c9\u677e\u8fd0\u52a8\u5458\u91cc\u7d22\u65af (Rizos) \u5728\u8bb2\u8ff0\u8fd9\u8d77\u53d1\u751f\u5728\u56db\u4e2a\u4e0d\u7720\u4e4b\u591c\u540e\u7684\u620f\u5267\u65f6\u8bf4\u3002 \u201c\u758f\u6563\u547d\u4ee4\u4e00\u5230\uff0c\u6211\u5c31\u8eb2\u4e86\u8d77\u6765\uff0c\u706b\u6765\u4e86\uff0c\u5c31\u50cf\u53f0\u98ce\u4e00\u6837\u6765\u4e86\uff0c\u5230\u5904\u90fd\u662f\u91d1\u96e8\u3002\u6211\u5728\u90a3\u91cc\uff0c\u72ec\u81ea\u4e00\u4eba\uff0c\u975e\u5e38\u5bb3\u6015\uff0c\u4f46\u6211\u4e5f\u91c7\u53d6\u4e86\u4e00\u5207\u63aa\u65bd\u3002\u6211\u5df2\u7ecf\u6e05\u7406\u4e86\u82b1\u56ed\uff0c\u79fb\u9664\u4e86\u677e\u679c\u3002\u53f0\u98ce\u6301\u7eed\u4e86\u5927\u7ea6\u56db\u5206\u949f\uff0c\u4f46\u5916\u9762\u7684\u8349\u548c\u6811\u68a2\u90fd\u6e7f\u5f97\u8db3\u4ee5\u8ba9\u706b\u8fc7\u53bb\u3002\u201d\u51e0\u5206\u949f\u540e\u6d88\u9632\u5458\u7684\u51fa\u73b0\u548c\u4ed6\u81ea\u5df1\u7684\u82f1\u52c7\u52aa\u529b\u4f7f\u6574\u4e2a\u793e\u533a\u514d\u4e8e\u6ca6\u4e3a\u7164\u6e23\u3002\n\u548c\u8bb8\u591a\u4eba\u4e00\u6837\uff0c\u91cc\u7d22\u65af\u8ba4\u4e3a\u6c14\u5019\u7d27\u6025\u60c5\u51b5\u53ea\u4f1a\u53d8\u5f97\u66f4\u7cdf\u3002 \u201c\u6211\u4eec\u662f\u751f\u6001\u5b66\u5bb6\uff0c\u6211\u4eec\u70ed\u7231\u81ea\u7136\uff0c\u6211\u4eec\u5e0c\u671b\u4fdd\u62a4\u73af\u5883\uff0c\u800c\u4e0d\u662f\u5b89\u88c5\u4f1a\u7834\u574f\u73af\u5883\u7684\u7a7a\u8c03\u3002\u4f46\u662f\u5728 45C \u7684\u6e29\u5ea6\u4e0b\uff0c\u8fd9\u4f1a\u5f88\u56f0\u96be\u3002\u6211\u4eec\u5fc5\u987b\u9002\u5e94\u3002\u5f53\u7136\uff0c\u6211\u4f1a\u7528\u5176\u4ed6\u4e0d\u5bb9\u6613\u71c3\u70e7\u7684\u6811\u4ee3\u66ff\u677e\u6811\u3002\u201d Myrivili \u62c5\u5fc3\u96c5\u5178\u5468\u56f4\u5982\u6b64\u591a\u7684\u68ee\u6797\u906d\u5230\u7834\u574f\u7684\u5f71\u54cd\u3002\u5e15\u5c3c\u8428\u5c71\u662f\u751f\u7269\u591a\u6837\u6027\u7684\u4e2d\u5fc3\uff0c\u662f\u6b27\u6d32\u4e00\u4e9b\u6700\u4e30\u5bcc\u7684\u52a8\u690d\u7269\u7fa4\u7684\u5bb6\u56ed\u3002 \u201c\u96c5\u5178\u5468\u56f4\u7684\u8fd9\u4e9b\u5c71\u8109\u662f\u6211\u4eec\u7684\u751f\u547d\u652f\u6301\uff0c\u201d\u5979\u8bf4\uff0c\u5c06\u7f13\u89e3\u70ed\u91cf\u7684\u6311\u6218\u63cf\u8ff0\u4e3a\u5e0c\u814a\u73b0\u5728\u9762\u4e34\u7684\u6240\u6709\u6218\u6597\u4e2d\u7684\u6311\u6218\u3002 \u201c\u6211\u4eec\u5df2\u7ecf\u540e\u9000\u4e86\u4e00\u5927\u6b65\u3002\u6211\u4eec\u7eff\u8272\u57fa\u7840\u8bbe\u65bd\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u5df2\u7ecf\u6d88\u5931\u3002\u7531\u4e8e\u6240\u6709\u8fd9\u4e9b\u6811\u6728\u90fd\u4e0d\u518d\u5b58\u5728\uff0c\u6211\u4eec\u5c06\u9762\u4e34\u65b0\u7684\u6c14\u5019\u6761\u4ef6\uff0c\u672a\u6765\u51e0\u5e74\u96c5\u5178\u5927\u90fd\u5e02\u533a\u7684\u6e29\u5ea6\u4f1a\u66f4\u9ad8\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u53d1\u751f\u6d2a\u6c34\u3002\u201d", "note_en": "The city is surrounded by flames. On the ground, there are tales of heroism \u2013 and fear for the future\n   Little had prepared any of us on the Athens-bound flight for the sight of the great fire-induced clouds that swept either side of the plane as it made its descent on Friday.\n News of the extreme heat engulfing  Greece had spread beyond its borders all week, packaged in increasingly desperate language. Temperatures were breaking records few had ever imagined. If Monday was bad, then Tuesday was worse. In some parts of the country, the mercury had hit 47C (117F), with thermal cameras on drones recording the ground temperature in downtown Athens at 55C.\n  By Wednesday, we were hearing that entire tracts of suburban forest on the Greek capital\u2019s  northern fringes had gone up in flames. Infernos seemingly redolent of Dante\u2019s hell had incinerated everything in their path; friends had lost homes; thousands had been evacuated with residents and tourists fleeing blighted zones by any means possible. Terraces, an Athenian\u2019s respite against the blazing heat, had been transformed into ash-laden no-go zones.\n \u201cIt\u2019s been crazy over here. Between the extreme heat and the wildfires, it feels apocalyptic,\u201d Eleni Myrivili, a friend recently appointed to the role of Athens\u2019 first chief heat officer, wrote in an email on Thursday as the army was deployed to assist firefighters. \u201cAsh is raining down on us here in Athens.\u201d\n From the sky, it was frighteningly clear that the city was under siege, caught in a cycle of insufferable heat fuelling conflagrations on terrain so parched it was ready to ignite at any moment.\n Fires, some big, some small, some extinguished and then rekindled, were raging nationwide, the country\u2019s civil protection chief, Nikos Hardalias, told reporters. Conditions were not only \u201cextremely dangerous\u201d but unprecedented, he said, estimating that firefighters trying to protect populated areas, electricity installations and historic sites had battled 154 wildfires over the space of the week. More than 60 conflagrations were still raging on Saturday.\n  \u201cOver the past few days, we have been facing a situation without precedent in our country, in the intensity and wide distribution of the wildfires, and the new outbreaks all over [Greece],\u201d he said. \u201cI want to assure you that all forces available are taking part in the fight.\u201d\n Under skies of acrid smoke \u2013 so dense, authorities urged residents to wear masks outdoors and close windows in their homes \u2013 other nations, including the UK, have stepped up to help this weekend, dispatching water-bombing planes, firefighters and vehicles to Athens.\n Although temperatures had dropped after 11 days of exceeding 40C, winds also picked up on Friday, fanning new flashpoints in and around the city.\n By Saturday a huge blaze that had burned through forests and houses towards Lake Marathon, the city\u2019s main reservoir, was advancing up the slopes of Mount Parnitha, surrounding a national park regarded as Athens\u2019 last substantial \u201cgreen lung\u201d and sending yet more choking smoke across the Attica basin.\n On Evia, the island east of the capital, where fires have also rampaged from west to north across rugged woodland, dramatic scenes unfolded as ferries, tourist boats and fishermen rushed to evacuate more than 1,000 people from seaside villages and beaches. Men and women could be seen clutching babies and carrying the elderly and vulnerable on chairs as they boarded the ships to safety.\n  Further south in the Peloponnese, emergency services struggled for a fifth straight day to contain fires that have destroyed large parts of Ilia and Messinia and threatened ancient Olympia, where the Olympic flame is lit every four years.\n Mindful of the huge loss of life  from fires that tore through the seaside resort of Mati in the summer of 2018, the Greek government has prioritised evacuations.\n Two deaths linked to the latest fires have so far been reported \u2013 one victim was a volunteer firefighter and the other Konstantinos Michalos, the British-educated head of the Athens chamber of commerce and industry, who was found dead after rushing to his factory as a devastating wildfire advanced on Kryoneri, a suburb in north-east Athens.\n Greece\u2019s prime minister, Kyriakos Mitsotakis, said climate change was clearly to blame for temperatures that \u201chave turned the country into a powder keg\u201d and sparked infernos described as the worst in decades in neighbouring Turkey and Italy.\n  Athens is the hottest metropolis in mainland Europe, with meteorologists predicting that annual mean temperatures  across the Mediterranean will increase by up to 2C over the next 30 years.\n But in the midst of darkness wrought by nature gone awry, extraordinary stories of valour also emerged last week.\n Faced with the prospect of his home in Thrakomakedones in the foothills of Mount Parnitha being razed by fire at 3am on Saturday, Alexandros Rizos decided to stay on and \u201cdefend\u201d the property. His wife and child safely evacuated, the 55-year-old business development consultant stood on the roof of the two-storey building, hosing his garden and the tops of pine trees in anticipation of the blaze approaching.\n \u201cI am very attached to this house,\u201d said Rizos, an avid marathon runner, recounting the drama, which took place after four sleepless nights. \u201cI hid when the order arrived to evacuate and when the fire came, it came like a typhoon, raining gold everywhere. I was there, alone and very frightened but I had also taken every measure. I had cleared the garden, removed pine cones. The typhoon lasted for about four minutes but the grass outside and the tree tops were wet enough for the fire to pass over.\u201d\n The appearance of firefighters minutes later and his own heroic efforts saved the entire neighbourhood from being reduced to cinders.\n Like many, Rizos believes the climate emergency will only get worse. \u201cWe\u2019re ecologists, we love nature in my family and we want to protect the environment, not install air conditioners that will destroy it. But with temperatures of 45C, that\u2019s going to be hard. We have to adapt. For sure, I\u2019ll be replacing pine trees with other trees that don\u2019t burn so easily.\u201d\n Myrivili fears the effects of the destruction of so much forest around Athens. Mount Parnitha is a hub of biodiversity and home to some of Europe\u2019s richest flora and fauna.\n \u201cThese mountains around Athens are our life support,\u201d she said, describing the challenge to mitigate heat as the battle of all battles now confronting Greece. \u201cWe\u2019ve taken a huge step back. A vital part of our green infrastructure has gone. With all these trees no longer there, we\u2019ll be faced with new climate conditions and have higher temperatures and likely floods in the metropolitan area of Athens for years to come.\u201d", "posttime": "2021-08-08 07:41:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u706b,scenes,\u96c5\u5178", "title": "\u96c5\u5178\u88ab\u5927\u706b\u5305\u56f4\uff0c\u201c\u4e16\u754c\u672b\u65e5\u201d\u573a\u666f\u88ad\u51fb\u4e86\u5e0c\u814a", "title_en": "\u2018Apocalyptic\u2019 scenes hit Greece as Athens besieged by fire", "transed": 1, "url": "https://www.theguardian.com/world/2021/aug/07/apocalyptic-scenes-hit-greece-as-athens-besieged-by-fire", "via": "", "real_tags": ["\u5927\u706b", "scenes", "\u96c5\u5178"]}, {"category": "", "categoryclass": "", "imagename": "d4d92a58482d4560d5b9aef2a2d41c8f.jpg", "infoid": 1072032, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u636e\u6536\u85cf\u54c1\u7f51\u7ad9 Rally \u79f0\uff0c\u4e00\u4f4d\u533f\u540d\u4e70\u5bb6\u82b1\u4e86 200 \u4e07\u7f8e\u5143\u8d2d\u4e70\u4e86\u4e00\u672c\u4ece\u672a\u6253\u5f00\u8fc7\u7684\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u300b\u3002 \u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u9996\u5148\u62a5\u9053\uff0c1985 \u5e74\u8fd9\u6b3e\u6e38\u620f\u7684\u552e\u4ef7\u6253\u7834\u4e86\u4e0d\u5230\u4e00\u4e2a\u6708\u524d\u521b\u4e0b\u7684\u7eaa\u5f55\uff0c\u5f53\u65f6\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965 64\u300b\u7684\u5bc6\u5c01\u526f\u672c\u5728\u62cd\u5356\u4f1a\u4e0a\u4ee5 156 \u4e07\u7f8e\u5143\u7684\u4ef7\u683c\u6210\u4ea4\u3002\u5728\u8fc7\u53bb\u7684\u4e00\u5e74\u4e2d\uff0c\u7531\u4e8e\u5bf9\u7ae5\u5e74\u6536\u85cf\u54c1\u7684\u9700\u6c42\u4f9d\u7136\u65fa\u76db\uff0c\u6700\u6602\u8d35\u7684\u7535\u5b50\u6e38\u620f\u8bb0\u5f55\u88ab\u591a\u6b21\u6253\u7834\u3002\u53bb\u5e74 7 \u6708\uff0c\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u300b\u7684\u526f\u672c\u5728\u62cd\u5356\u4f1a\u4e0a\u4ee5 114,000 \u7f8e\u5143\u7684\u4ef7\u683c\u6210\u4ea4\u3002 11 \u6708\uff0c\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f 3\u300b\u7684\u526f\u672c\u6253\u7834\u4e86\u8fd9\u4e00\u7eaa\u5f55\uff0c\u5728\u62cd\u5356\u4f1a\u4e0a\u4ee5 156.000 \u7f8e\u5143\u7684\u4ef7\u683c\u552e\u51fa\u3002\u7136\u540e\uff0c\u8fd9\u4e00\u8bb0\u5f55\u5728 4 \u6708\u4efd\u88ab\u6253\u7834\uff0c\u5f53\u65f6\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u300b\u7684\u526f\u672c\u5728\u62cd\u5356\u4f1a\u4e0a\u4ee5 660,000 \u7f8e\u5143\u7684\u4ef7\u683c\u6210\u4ea4\uff0c\u968f\u540e\u5728 7 \u6708\u7684\u300a\u585e\u5c14\u8fbe\u4f20\u8bf4\u300b\u7684\u526f\u672c\u4ee5 870,000 \u7f8e\u5143\u7684\u4ef7\u683c\u6210\u4ea4\u3002\u867d\u7136\u5927\u90e8\u5206\u8bb0\u5f55\u90fd\u88ab\u5728\u62cd\u5356\u4f1a\u4e0a\u51fa\u552e\u7684\u8001\u5f0f\u6e38\u620f\u6253\u7834\u4e86\uff0c\u4f46 200 \u4e07\u7f8e\u5143\u7684\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u300b\u7684\u62cd\u5356\u8def\u7ebf\u7565\u6709\u4e0d\u540c\u3002 Rally \u8d2d\u4e70\u6e38\u620f\u548c\u5176\u4ed6\u6536\u85cf\u54c1\uff0c\u5982\u6f2b\u753b\u4e66\uff0c\u5e76\u5c06\u5b83\u4eec\u53d8\u6210\u4eba\u4eec\u53ef\u4ee5\u8d2d\u4e70\u80a1\u7968\u7684\u5c0f\u516c\u53f8\uff0c\u5c31\u50cf\u6295\u8d44\u4e00\u6837\u3002\u5982\u679c\u6709\u4eba\u63d0\u51fa\u8d2d\u4e70\u6536\u85cf\u54c1\u7684\u8981\u7ea6\uff0c\u8fd9\u4e9b\u6295\u8d44\u8005\u5c06\u6295\u7968\u51b3\u5b9a\u662f\u5426\u51fa\u552e\u3002\u636e\u300a\u6cf0\u6664\u58eb\u62a5\u300b\u62a5\u9053\uff0cRally \u53bb\u5e74 4 \u6708\u4ee5 14 \u4e07\u7f8e\u5143\u7684\u4ef7\u683c\u8d2d\u4e70\u4e86\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u300b\u6e38\u620f\uff0c\u80a1\u4e1c\u6279\u51c6\u5c06\u5176\u51fa\u552e\u7ed9\u8fd9\u4f4d\u533f\u540d\u6536\u85cf\u5bb6\u3002", "note_en": "An anonymous buyer paid $2 million for a never-opened copy of  Super Mario Bros., according to collectibles site Rally. First reported by the   New York Times, the sale price of the 1985 game broke a record that was set less than a month ago, when a sealed copy of   Super Mario 64 went for $1.56 million at auction.\n Over the past year, the record for most expensive video game has been broken numerous times, as the demand for childhood collectibles remains hot. Last July, a copy of  Super Mario Bros.  went for $114,000 at auction. In November, a copy of  Super Mario Bros. 3 broke that record, selling for  $156.000 at auction. Then, that record was smashed in April when a copy of  Super Mario Bros.  went for $660,000 at auction, followed in July by a copy of  The Legend of Zelda that  went for $870,000.\n While most of the records were broken by vintage games that sold at auctions, the $2 million  Super Mario Bros. sale went a slightly different route.  Rally buys games and other collectibles like comic books, and turns them into small companies that people can purchase shares in, like an investment. If someone makes an offer to buy the collectible, those investors vote whether to sell it. Rally bought the  Super Mario Bros. game for $140,000 last April, the  Times reported, and shareholders approved the sale to the anonymous collector.", "posttime": "2021-08-08 07:41:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9a6c\u91cc\u5965,\u5144\u5f1f,copy,\u8d2d\u4e70", "title": "\u672a\u5f00\u5c01\u7684\u300a\u8d85\u7ea7\u9a6c\u91cc\u5965\u5144\u5f1f\u300b\u4ee5\u521b\u7eaa\u5f55\u7684 200 \u4e07\u7f8e\u5143\u552e\u51fa", "title_en": "Unopened copy of Super Mario Bros. sells for a record $2M", "transed": 1, "url": "https://www.theverge.com/2021/8/7/22614450/unopened-copy-super-mario-bros-sells-2-million-record", "via": "", "real_tags": ["\u9a6c\u91cc\u5965", "\u5144\u5f1f", "copy", "\u8d2d\u4e70"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072030, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Mathieu Desnoyers mathieu.desnoyers at efficios.com Tue Aug 3 14:40:21 EDT 2021 \u5927\u5bb6\u597d\uff0c\u4eca\u5929\u6b63\u5f0f\u53d1\u5e03 LTTng 2.13 - Nordicit\u00e9\uff01\u8fd9\u662f EfficiOS \u56e2\u961f\u5927\u90e8\u5206\u4eba\u4e00\u5e74\u5f00\u53d1\u7684\u7ed3\u679c\u3002\u8fd9\u4e2a\u65b0\u7248\u672c\u6700\u663e\u7740\u7684\u7279\u70b9\u662f\uff1a - Event-rule \u5339\u914d\u6761\u4ef6\u89e6\u53d1\u5668\u548c\u65b0\u52a8\u4f5c\uff0c\u5141\u8bb8\u5185\u90e8\u52a8\u4f5c\u6216\u5916\u90e8\u76d1\u63a7\u5e94\u7528\u7a0b\u5e8f\u5728\u5185\u6838\u6216\u7528\u6237\u65f6\u5feb\u901f\u505a\u51fa\u53cd\u5e94- \u7a7a\u95f4\u68c0\u6d4b\u88ab\u547d\u4e2d\uff0c - \u901a\u77e5\u8d1f\u8f7d\u6355\u83b7\uff0c\u5141\u8bb8\u5916\u90e8\u76d1\u63a7\u5e94\u7528\u7a0b\u5e8f\u5728\u68c0\u6d4b\u88ab\u547d\u4e2d\u65f6\u8bfb\u53d6\u68c0\u6d4b\u8d1f\u8f7d\u7684\u5143\u7d20\u3002 - Instrumentation API\uff1avtracef \u548c vtracelog (LTTng-UST)\uff0c - \u7528\u6237\u7a7a\u95f4\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u4e0a\u4e0b\u6587\uff08LTTng-UST \u548c LTTng-modules\uff09\u3002\u6b64\u7248\u672c\u4ee5\u201cNordicit\u00e9\u201d\u547d\u540d\uff0c\u8fd9\u662f Champ Libre \u548c Bor\u00e9ale \u5408\u4f5c\u7684\u4ea7\u7269\u3002\u8fd9\u79cd\u519c\u5bb6 IPA \u662f\u7528 Kveik \u9175\u6bcd\u548c\u9b41\u5317\u514b\u79cd\u690d\u7684\u5927\u9ea6\u3001\u71d5\u9ea6\u548c\u675c\u677e\u679d\u917f\u9020\u7684\u3002\u7ed3\u679c\u662f\u4e00\u79cd\u975e\u51e1\u7684\u679c\u5473\u6726\u80e7\u7684\u91d1\u8272 IPA\uff0c\u63d0\u4f9b\u4e86\u6811\u8102\u548c\u6728\u8d28\u82e6\u5473\u7684\u5e73\u8861\u611f\u3002\u57fa\u4e8e LTTng \u9879\u76ee\u8bb0\u5f55\u7684\u7a33\u5b9a\u7248\u672c\u751f\u547d\u5468\u671f\uff0c\u8fd9\u4e2a 2.13 \u7248\u672c\u4e0e LTTng 2.11 \u7248\u672c\u7cfb\u5217\u7684\u751f\u547d\u5468\u671f\u7ed3\u675f (EOL) \u76f8\u543b\u5408\u3002\u9605\u8bfb\u6709\u5173\u6bcf\u4e2a\u65b0\u529f\u80fd\u7684\u7b80\u77ed\u63cf\u8ff0\u4ee5\u53ca\u6b64\u7248\u672c\u7684\u94fe\u63a5\u3002\u6b64\u516c\u544a\u7684\u7f8e\u5316\u7248\u672c\u5c06\u5f88\u5feb\u5728 GitHub \u4e0a\u63d0\u4f9b\uff1ahttps://github.com/lttng/lttng-tools/releases/tag/v2\u3002 13.0\u5173\u4e8e LTTng-UST \u5411\u540e\u517c\u5bb9\u6027\u7684\u6ce8\u610f\u4e8b\u9879---- soname \u4e3b\u8981\u7248\u672c\u66f4\u6539 \u6b64\u7248\u672c\u5c06 LTTng-UST soname \u4e3b\u8981\u4ece 0 \u66f4\u6539\u4e3a 1\u3002\u4e8b\u4ef6\u901a\u77e5\u7a0b\u5e8f\uff08\u4f7f\u7528\u4e8b\u4ef6\u89c4\u5219\u5339\u914d\u6761\u4ef6\u7684\u89e6\u53d1\u5668\uff09\u529f\u80fd\u9700\u8981\u5bf9\u4e00\u5f00\u59cb\u5c31\u4e0d\u5e94\u8be5\u516c\u5f00\u7684\u516c\u5171\u6570\u636e\u7ed3\u6784\u3002\u5c06 soname \u4e13\u4e1a\u8bbe\u7f6e\u4e3a 1\uff0c\u5c06\u9700\u8981\u9488\u5bf9\u66f4\u65b0\u7684 LTTng-UST \u91cd\u5efa\u5e94\u7528\u7a0b\u5e8f\u548c\u8ddf\u8e2a\u70b9\u63d0\u4f9b\u7a0b\u5e8f\u4ee5\u4f7f\u7528\u5b83\u3002\u65e7\u5e94\u7528\u7a0b\u5e8f\u548c\u8ddf\u8e2a\u70b9\u63d0\u4f9b\u7a0b\u5e8f\u94fe\u63a5\u5230\u5177\u6709\u4e3b\u8981 soname 0 \u7684\u5e93\u5e94\u8be5\u80fd\u591f\u5728\u540c\u4e00\u7cfb\u7edf\u4e0a\u5171\u5b58\u3002- \u4f7f\u7528 C++ \u7f16\u8bd1\u5668\u6784\u5efa\u63a2\u9488\u63d0\u4f9b\u7a0b\u5e8f\u9700\u8981 C++11- API \u547d\u540d\u7a7a\u95f4 LTTng-UST API \u73b0\u5728\u7cfb\u7edf\u5730\u547d\u540d\u4e3a`lttng_ust_*`\uff08\u4f8b\u5982`tracepoint()` \u53d8\u6210`lttng_ust_tracepoint()`\uff09\u3002\u7136\u800c\uff0c\u975e\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u4ecd\u7136\u66b4\u9732\u4ee5\u4fdd\u6301 API \u517c\u5bb9\u6027\u3002\u4e8b\u4ef6\u89c4\u5219\u5339\u914d\u6761\u4ef6\u548c\u65b0\u64cd\u4f5c---\u6269\u5c55\u89e6\u53d1\u5668\u57fa\u7840\u7ed3\u6784\u5e76\u4f7f\u5176\u901a\u8fc7`lttng`\u5ba2\u6237\u7aef\u53ef\u7528\u662f\u6b64\u7248\u672c\u7684\u6838\u5fc3\u91cd\u70b9\u3002\u89e6\u53d1\u5668\u662f\u6761\u4ef6\u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a\u52a8\u4f5c\u4e4b\u95f4\u7684\u5173\u8054\u3002\u5f53\u6ee1\u8db3\u4e0e\u89e6\u53d1\u5668\u5173\u8054\u7684\u6761\u4ef6\u65f6\uff0c\u5c06\u6267\u884c\u4e0e\u8be5\u89e6\u53d1\u5668\u5173\u8054\u7684\u64cd\u4f5c\u3002\u8ddf\u8e2a\u4e0d\u5fc5\u4e3a\u6ee1\u8db3\u6761\u4ef6\u800c\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u5e76\u4e14\u89e6\u53d1\u5668\u72ec\u7acb\u4e8e\u8ddf\u8e2a\u4f1a\u8bdd\u3002\u81ea\u4ece\u5b83\u4eec\u4f5c\u4e3a LTTng 2.10 \u7684\u4e00\u90e8\u5206\u5f15\u5165\u4ee5\u6765\uff0c\u6dfb\u52a0\u4e86\u65b0\u7684\u6761\u4ef6\u548c\u64cd\u4f5c\u4ee5\u4f7f\u8fd9\u79cd\u9c9c\u4e3a\u4eba\u77e5\u7684\u673a\u5236\u66f4\u52a0\u7075\u6d3b\u3002\u4f8b\u5982\uff0c\u4e4b\u524d\u6b64\u7248\u672c\u4e2d\uff0c\u89e6\u53d1\u5668\u652f\u6301\u4ee5\u4e0b\u6761\u4ef6\u7c7b\u578b\uff1a - \u7f13\u51b2\u533a\u4f7f\u7528\u91cf\u8d85\u8fc7\u7ed9\u5b9a\u9608\u503c\uff0c - \u7f13\u51b2\u533a\u4f7f\u7528\u91cf\u4f4e\u4e8e\u53ef\u914d\u7f6e\u9608\u503c\uff0c - \u53d1\u751f\u4f1a\u8bdd\u8f6e\u6362\uff0c - \u4f1a\u8bdd\u8f6e\u6362\u5b8c\u6210\u3002 _notify_ \u64cd\u4f5c\u53ef\u7528\u4e8e\u5411\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8ddf\u8e2a\u7f13\u51b2\u533a\u51e0\u4e4e\u5df2\u6ee1\uff0c\u5219\u53ef\u4ee5\u7981\u7528\u67d0\u4e9b\u4e8b\u4ef6\u89c4\u5219\u3002\u5b83\u8fd8\u53ef\u4ee5\u7528\u4e8e\u7b49\u5f85 sessionrotations \u5b8c\u6210\u4ee5\u5f00\u59cb\u5904\u7406\u751f\u6210\u7684\u8ddf\u8e2a\u5757\u5b58\u6863\u4f5c\u4e3a\u5404\u79cd\u540e\u5904\u7406\u8ddf\u8e2a\u5206\u6790\u7684\u4e00\u90e8\u5206\u3002\u6b64\u7248\u672c\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u5f3a\u5927\u7684\u6761\u4ef6\u7c7b\u578b\uff1a\u4e8b\u4ef6\u89c4\u5219\u5339\u914d\u3002\u5f53\u6ee1\u8db3\u8fd9\u79cd\u6761\u4ef6\u65f6\u8ddf\u8e2a\u5668\u9047\u5230\u5339\u914d\u7ed9\u5b9a\u5076\u6570\u89c4\u5219\u7684\u4e8b\u4ef6\u3002\u63cf\u8ff0\u4e8b\u4ef6\u89c4\u5219\u7684\u53c2\u6570\u4e0e\u63cf\u8ff0 `enable-event` \u547d\u4ee4\u7684\u4e8b\u4ef6\u89c4\u5219\u7684\u53c2\u6570\u76f8\u540c\u3002\u867d\u7136\u8fd9\u4e0d\u662f\u4f5c\u4e3a\u73b0\u6709\u9ad8\u541e\u5410\u91cf\u8ddf\u8e2a\u5de5\u5177\u7684\u4e00\u822c\u66ff\u4ee3\u54c1\uff0c\u8fd9\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u7b49\u5f85\u975e\u5e38\u7279\u5b9a\u7684\u4e8b\u4ef6\u53d1\u751f\u5e76\u5728\u53d1\u751f\u65f6\u91c7\u53d6\u884c\u52a8\u3002\u4e8b\u4ef6\u89c4\u5219\u5339\u914d\u89e6\u53d1\u5668\u7684\u76ee\u7684\u662f\u5bf9\u4e8b\u4ef6\u505a\u51fa\u5feb\u901f\u53cd\u5e94\uff0c\u800c\u6ca1\u6709\u7f13\u51b2\u5f15\u5165\u7684\u5ef6\u8fdf\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u89e6\u53d1\u5668\uff0c\u6bcf\u5f53&#39; openat&#39; \u7cfb\u7edf\u8c03\u7528\u4f7f\u7528&#39;/etc/passwd&#39; \u6587\u4ef6\u540d\u53c2\u6570\u8c03\u7528\u3002$ lttng add-trigger --condition event-rule-matches --type=kernel:syscall --name=&#39;openat&#39; --action notifyNew actions are\u8fd8\u4f5c\u4e3a\u6b64\u7248\u672c\u7684\u4e00\u90e8\u5206\u5f15\u5165\uff1a - \u542f\u52a8\u4f1a\u8bdd \u6b64\u64cd\u4f5c\u4f1a\u5bfc\u81f4 LTTng \u4f1a\u8bdd\u5b88\u62a4\u7a0b\u5e8f\u5f00\u59cb\u8ddf\u8e2a\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u7684\u4f1a\u8bdd\u3002\u5982\u679c\u5728\u6ee1\u8db3\u6761\u4ef6\u65f6\u4e0d\u5b58\u5728\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u7684\u4f1a\u8bdd\uff0c\u5219\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002 - \u505c\u6b62\u4f1a\u8bdd \u6b64\u64cd\u4f5c\u4f1a\u5bfc\u81f4 LTTng \u4f1a\u8bdd\u5b88\u62a4\u7a0b\u5e8f\u505c\u6b62\u8ddf\u8e2a\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u7684\u4f1a\u8bdd\u3002\u5982\u679c\u5728\u6ee1\u8db3\u6761\u4ef6\u65f6\u4e0d\u5b58\u5728\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u7684\u4f1a\u8bdd\uff0c\u5219\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002 - \u8f6e\u6362\u4f1a\u8bdd \u6b64\u64cd\u4f5c\u4f1a\u5bfc\u81f4 LTTng \u4f1a\u8bdd\u5b88\u62a4\u8fdb\u7a0b\u8f6e\u6362\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u7684\u4f1a\u8bdd\u3002\u6709\u5173\u4f1a\u8bdd\u8f6e\u6362\u6982\u5ff5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 lttng-rotate(1)\u3002\u5982\u679c\u5728\u6ee1\u8db3\u6761\u4ef6\u65f6\u4e0d\u5b58\u5728\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u7684\u4f1a\u8bdd\uff0c\u5219\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002 - \u5feb\u7167\u4f1a\u8bdd \u6b64\u64cd\u4f5c\u4f1a\u5bfc\u81f4 LTTng \u4f1a\u8bdd\u5b88\u62a4\u7a0b\u5e8f\u4f7f\u7528\u7ed9\u5b9a\u540d\u79f0\u62cd\u6444\u4f1a\u8bdd\u7684\u5feb\u7167\u3002\u6709\u5173\u4f1a\u8bdd\u5feb\u7167\u6982\u5ff5\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 lttng-snapshot(1)\u3002\u5982\u679c\u5728\u6ee1\u8db3\u6761\u4ef6\u65f6\u4e0d\u5b58\u5728\u5177\u6709\u7ed9\u5b9a\u540d\u79f0\u7684\u4f1a\u8bdd\uff0c\u5219\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u8fd9\u4e9b\u65b0\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u89e6\u53d1\u5668\u5c06\u505c\u6b62`my_session`\uff0c\u8bb0\u5f55`my_session`\u7684\u5feb\u7167\uff0c\u5e76\u5728&#39;/etc/passwd&#39;\u6253\u5f00\u65f6\u901a\u77e5\u4efb\u4f55\u76d1\u542c\u5e94\u7528\u7a0b\u5e8f\uff1a$ lttng add-trigger --condition event-rule-matches --type kernel :syscall --name &#39;openat&#39; --filter &#39;filename == &quot;/etc/passwd&quot;&#39; --action stop-session my_session --action snapshot-session my_session --action notify\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u624b\u518c\u9875\uff1a- lttng-add-trigger(1), - lttng-remove-trigger(1), - lttng-list-triggers(1).Notification payload capture---\u65b0\u7684\u4e8b\u4ef6\u89c4\u5219\u5339\u914d\u6761\u4ef6\u7c7b\u578b\u4e5f\u5141\u8bb8&#39;\u6355\u83b7&#39;\u3002\u8fd9\u4e2a\u5141\u8bb8\u5728\u6ee1\u8db3\u4e8b\u4ef6\u89c4\u5219\u5339\u914d\u6761\u4ef6\u65f6\u6355\u83b7\u4e8b\u4ef6\u8bb0\u5f55\u548c\u4e0a\u4e0b\u6587\u5b57\u6bb5\u3002\u6355\u83b7\u7684\u5b57\u6bb5\u503c\u5728\u4f20\u8f93\u5230\u4fa6\u542c\u5e94\u7528\u7a0b\u5e8f\u7684\u901a\u77e5\u7684\u8bc4\u4f30\u5bf9\u8c61\u4e2d\u53ef\u7528\u3002\u6355\u83b7\u63cf\u8ff0\u7b26\u53ef\u4ee5\u4f7f\u7528\u8ba9\u4eba\u60f3\u8d77\u4f7f\u7528\u7684\u8bed\u6cd5\u6765\u6307\u5b9a\u8fc7\u6ee4\u5668\u8868\u8fbe\u5f0f\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c06\u6355\u83b7\u8fdb\u7a0b\u7684\u540d\u79f0\u548c\u201cfil\u201d\u6240\u6709`openat()`\u7cfb\u7edf\u8c03\u7528\u7684ename&#39;\u53c2\u6570\uff1a$ lttng add-trigger --condition event-rule-matches --type kernel:syscall --name &#39;openat&#39; --capture &#39;filename&#39; --capture &#39;$ctx. procname&#39; --action notify \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 lttng-add-trigger(1) \u624b\u518c\u9875\u3002 vtracef \u548c vtracelog (LTTng-UST)---`tracef()` \u548c `tracelog()` \u8ddf\u8e2a\u52a9\u624b\u7684\u65b0\u7248\u672c\u63a5\u53d7\u53d8\u91cf\u53c2\u6570\u5217\u8868\u88ab\u5f15\u5165\u4e3a `vtracef()` \u548c `vtracelog()`\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 tracef(3) \u548c tracelog(3) \u624b\u518c\u9875\u3002\u6dfb\u52a0\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u4e0a\u4e0b\u6587\uff08LTTng-UST \u548c LTTng-modules\uff09---\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 `add-context` \u547d\u4ee4\u5c06\u8fdb\u7a0b\u7684\u65f6\u95f4\u547d\u540d\u7a7a\u95f4\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u6dfb\u52a0\u5230\u901a\u9053\uff08`time_ns`\uff09\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 time_namespaces(7) \u624b\u518c\u9875\u3002\u94fe\u63a5---\u9879\u76ee\u7f51\u7ad9\uff1ahttps ://lttng.org \u4e0b\u8f7d\u94fe\u63a5\uff1a https://lttng.org/files/lttng-tools/lttng-tools-2.13.0.tar.bz2 https://lttng.org/files/lttng-ust/lttng-ust -2.13.0.tar.bz2 https://lttng.org/files/lttng-modules/lttng-modules-2.13.0.tar.bz2G PG \u7b7e\u540d\uff1ahttps://lttng.org/files/lttng-tools/lttng-tools-2.13.0.tar.bz2.asc https://lttng.org/files/lttng-ust/lttng-ust-2.13\u3002 0.tar.bz2.asc https://lttng.org/files/lttng-modules/lttng-modules-2.13.0.tar.bz2.asc-- Mathieu DesnoyersEfficiOS Inc. http://www.efficios.com", "note_en": "Mathieu Desnoyers  mathieu.desnoyers at efficios.com    Tue Aug 3 14:40:21 EDT 2021  Hi everyone, Today is the official release of LTTng 2.13 - Nordicit\u00e9! It is the result ofone year of development from most of the EfficiOS team.The most notable features of this new release are: - Event-rule matches condition triggers and new actions, allowing internal actions or external monitoring applications to quickly react when kernel or user-space instrumentation is hit, - Notification payload capture, allowing external monitoring applications to read elements of the instrumentation payload when instrumentation is hit. - Instrumentation API: vtracef and vtracelog (LTTng-UST), - User space time namespace context (LTTng-UST and LTTng-modules).This release is named after &#34;Nordicit\u00e9&#34;, the product of a collaboration betweenChamp Libre and Bor\u00e9ale. This farmhouse IPA is brewed with Kveik yeast andQu\u00e9bec-grown barley, oats and juniper branches. The result is a remarkablefruity hazy golden IPA that offers a balanced touch of resinous and woodsybitterness.Based on the LTTng project&#39;s documented stable releases lifetime, this 2.13release coincides with the end-of-life (EOL) of the LTTng 2.11 release series.Read on for a short description of each of the new features and thelinks to this release.A prettified version of this announcement will be available soon on GitHub: https://github.com/lttng/lttng-tools/releases/tag/v2.13.0Note on LTTng-UST backward compatibility---- soname major version change This release changes the LTTng-UST soname major from 0 to 1. The event notifier (triggers using an event-rule-matches condition) functionality required a significant rework of public data structures which should never have been made public in the first place. Bumping the soname major to 1, will require applications and tracepoint providers to be rebuilt against an updated LTTng-UST to use it. Old applications and tracepoint providers linked against libraries with major soname 0 should be able to co-exist on the same system.- Building probe providers using a C++ compiler requires C++11- API namespaceing The LTTng-UST API is now systematically namespaced under `lttng_ust_*` (e.g `tracepoint()` becomes `lttng_ust_tracepoint()`). However, the non-namespaced names are still exposed to maintain API compatibility.Event-rule matches condition and new actions---Expanding the trigger infrastructure and making it usable through the `lttng`client was the core focus of this release.A trigger is an association between a condition and one or more actions. Whenthe condition associated to a trigger is met, the actions associated to thattrigger are executed. The tracing does not have to be active for the conditionsto be met, and triggers are independent from tracing sessions.Since their introduction as part of LTTng 2.10, new conditions and actions wereadded to make this little-known mechanism more flexible.For instance, before this release, triggers supported the following conditiontypes: - Buffer usage exceeded a given threshold, - Buffer usage went under a configurable threshold, - A session rotation occurred, - A session rotation completed.A _notify_ action could be used to send a notification to a third partyapplications whenever those conditions were met.This made it possible, for instance, to disable certain event rules if thetracing buffers were almost full. It could also be used to wait for sessionrotations to be completed to start processing the resulting trace chunkarchives as part of various post-processing trace analyses.This release introduces a new powerful condition type: event-rule matches.This type of condition is met when the tracer encounters an event matching thegiven even rule. The arguments describing the event rule are the same as thosedescribing the event rules of the `enable-event` command.While this is not intended as a general replacement for the existinghigh-throughput tracing facilities, this makes it possible for an applicationto wait for a very-specific event to occur and take action whenever it occurs.The purpose of event-rule matches triggers is to react quickly to an eventwithout the delay introduced by buffering.For example, the following command will create a trigger that emits anotification whenever the &#39;openat&#39; system call is invoked with the&#39;/etc/passwd&#39; filename argument.$ lttng add-trigger --condition event-rule-matches --type=kernel:syscall --name=&#39;openat&#39; --action notifyNew actions were also introduced as part of this release: - Start session This action causes the LTTng session daemon to start tracing for the session with the given name. If no session with the given name exist at the time the condition is met, nothing is done. - Stop session This action causes the LTTng session daemon to stop tracing for the session with the given name. If no session with the given name exist at the time the condition is met, nothing is done. - Rotate session This action causes the LTTng session daemon to rotate the session with the given name. See lttng-rotate(1) for more information about the session rotation concept. If no session with the given name exist at the time the condition is met, nothing is done. - Snapshot session This action causes the LTTng session daemon to take a snapshot of the session with the given name. See lttng-snapshot(1) for more information about the session snapshot concept. If no session with the given name exist at the time the condition is met, nothing is done.These new actions can also be combined together. For instance, the followingtrigger will stop `my_session`, record a snapshot of `my_session`, and notifyany listening application when &#39;/etc/passwd&#39; is opened:$ lttng add-trigger --condition event-rule-matches --type kernel:syscall --name &#39;openat&#39; --filter &#39;filename == &#34;/etc/passwd&#34;&#39; --action stop-session my_session --action snapshot-session my_session --action notifyFor more information, see the following manual pages: - lttng-add-trigger(1), - lttng-remove-trigger(1), - lttng-list-triggers(1).Notification payload capture---The new event-rule matches condition type also allows &#39;captures&#39;.This allow event record and context fields to be captured when an event-rulematches condition is satisfied.The captured field values are made available in the evaluation object of thenotifications transmitted to listening applications.Capture descriptors can be specified using a syntax reminiscent of the one usedby the filter expressions.The following example will capture a process&#39;s name and the &#39;filename&#39; argumentof all `openat()` system calls:$ lttng add-trigger --condition event-rule-matches --type kernel:syscall --name &#39;openat&#39; --capture &#39;filename&#39; --capture &#39;$ctx.procname&#39; --action notifySee the lttng-add-trigger(1) manual page for more information.vtracef and vtracelog (LTTng-UST)---New versions of the `tracef()` and `tracelog()` tracing helpers acceptingvariable argument lists are introduced as `vtracef()` and `vtracelog()`.See the tracef(3) and tracelog(3) manual pages for more information.Add time namespace context (LTTng-UST and LTTng-modules)---It is now possible to add the time namespace of a process as a context tochannels (`time_ns`) using the `add-context` command.See the time_namespaces(7) manual page for more information.Links---Project website:  https://lttng.orgDownload links: https://lttng.org/files/lttng-tools/lttng-tools-2.13.0.tar.bz2 https://lttng.org/files/lttng-ust/lttng-ust-2.13.0.tar.bz2 https://lttng.org/files/lttng-modules/lttng-modules-2.13.0.tar.bz2GPG signatures: https://lttng.org/files/lttng-tools/lttng-tools-2.13.0.tar.bz2.asc https://lttng.org/files/lttng-ust/lttng-ust-2.13.0.tar.bz2.asc https://lttng.org/files/lttng-modules/lttng-modules-2.13.0.tar.bz2.asc-- Mathieu DesnoyersEfficiOS Inc. http://www.efficios.com", "posttime": "2021-08-08 06:41:32", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "linux,trace,lttng", "title": "Linux Trace Toolkit Next Generation 2.13 \u4fc3\u8fdb\u5bf9\u5185\u6838/\u7528\u6237\u7a7a\u95f4\u68c0\u6d4b\u547d\u4e2d\u7684\u5feb\u901f\u53cd\u5e94", "title_en": "Linux Trace Toolkit Next Generation 2.13 Facilitates Quick Reaction To Kernel/User-space Instrumentation Hits", "transed": 1, "url": "https://lists.lttng.org/pipermail/lttng-dev/2021-August/030046.html", "via": "", "real_tags": ["linux", "trace", "lttng"]}, {"category": "", "categoryclass": "", "imagename": "0758ea80ebb863c000e5fd071f4b48f5.jpg", "infoid": 1072029, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u901a\u8fc7\u54a8\u8be2\u6bd4\u6240\u6709\u4eba\u7c7b\u73a9\u5bb6\u90fd\u5f3a\u5927\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\uff08\u4f8b\u5982\u514d\u8d39\u7a0b\u5e8f Stockfish\uff09\u6765\u4f5c\u5f0a\uff0c\u800c\u6ca1\u6709\u4efb\u4f55\u963b\u788d\u60a8\u5728\u6e38\u620f\u671f\u95f4\u8bbf\u95ee\u7a0b\u5e8f\u63a8\u8350\u7684\u80fd\u529b\u3002\u5728\u6ca1\u6709\u590d\u6742\u63aa\u65bd\u6765\u68c0\u6d4b\u8bbf\u95ee\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u7ebf\u56fd\u9645\u8c61\u68cb\u4e2d\u7ecf\u5e38\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\u80af\u7684\u200b\u200b\u7edf\u8ba1\u6a21\u578b\u4ecd\u7136\u53ef\u4ee5\u5224\u65ad\u8d70\u6cd5\uff0c\u4f46\u8fd9\u662f\u4e8b\u540e\u7684\u4e8b\u3002\u6211\u4eec\u60f3\u9632\u6b62\u4f5c\u5f0a\u3002\u8fd9\u8fd8\u6ca1\u6709\u53d1\u751f\u3002\u65e9\u5728\u53bb\u5e74\uff0c\u82f1\u56fd\u300a\u536b\u62a5\u300b\u5c31\u63f4\u5f15\u80af\u7684\u8bdd\u8bf4\uff1a\u201c\u8fd9\u6b21\u5927\u6d41\u884c\u7ed9\u6211\u5e26\u6765\u7684\u5de5\u4f5c\u91cf\u4e0e\u4e00\u5e74\u524d\u4e00\u6837\u591a\u3002\u201d\u4ee5\u80af\u4e3a\u7279\u8272\u7684\u534e\u5c14\u8857\u65e5\u62a5\u62a5\u9053\u8fd8\u6307\u51fa\uff1a\u6570\u636e\u663e\u793a\u51fa\u4e00\u4e9b\u5947\u602a\u7684\u4e1c\u897f\u3002\u66f4\u591a\u7684\u4eba\u5728\u4e0b\u68cb\u3002\u7136\u800c\uff0c\u8fdd\u53cd\u516c\u5e73\u7ade\u8d5b\u7684\u6570\u91cf\u6bd4\u6574\u4f53\u6e38\u620f\u6570\u91cf\u6fc0\u589e\u7684\u901f\u5ea6\u8fd8\u8981\u5feb\u3002 \u201c\u8fd9\u8ba9\u6211\u4eec\u8ba4\u4e3a\u4f5c\u5f0a\u7387\u6709\u6240\u4e0a\u5347\uff0c\u201dChess.com \u4f5c\u5f0a\u68c0\u6d4b\u8d1f\u8d23\u4eba Gerard Le-Marechal \u8bf4\u3002\u4eca\u5e74\u5e76\u6ca1\u6709\u653e\u677e\u2014\u2014\u8bf7\u53c2\u9605 Ken \u5728\u4e00\u7bc7\u975e\u56fd\u9645\u8c61\u68cb\u5e16\u5b50\u7684\u5e8f\u8a00\u4e2d\u8bf4 6 \u6708\u548c 7 \u6708\u662f\u6700\u7cdf\u7cd5\u7684\u3002 Chess.com \u548c Lichess \u4ee5\u53ca\u5176\u4ed6\u6e38\u620f\u7f51\u7ad9\u62e5\u6709\u6700\u7ec8\u51b3\u5b9a\u6743\uff0c\u4f46 Ken \u7ecf\u5e38\u88ab\u7528\u4e8e\u65e9\u671f\u9884\u8b66\uff08\u4ed6\u7684\u201c\u7b5b\u9009\u201d\u6b65\u9aa4\u5f88\u7075\u6d3b\uff0c\u53ef\u4ee5\u4e3a\u5b98\u5458\u63d0\u4f9b\u6574\u4e2a\u6bd4\u8d5b\u7684\u4fe1\u606f\u5feb\u7167\uff09\u548c\u4e4b\u540e\u89e3\u91ca\u88c1\u51b3\uff0c\u56e0\u4e3a\u4ed6\u7684\u6a21\u578b\u662f\u900f\u660e\u7684\uff0c\u4e0d\u4f1a\u56e0\u6cc4\u9732\u89e3\u91ca\u800c\u53d7\u5230\u5f71\u54cd\u3002\u4f46\u540c\u6837\uff0c\u8fd9\u662f\u4e8b\u540e\u7684\u4e8b\u3002\u6211\u8bb0\u5f97\u6211\u4eec\u5199\u8fc7\u4e00\u7bc7\u5173\u4e8e\u8ba1\u7b97\u673a\u5b89\u5168\u5c31\u50cf\u201c\u9a6c\u5df2\u7ecf\u79bb\u5f00\u540e\u5173\u95ed\u8c37\u4ed3\u95e8\u201d\u7684\u5e16\u5b50\u3002\u6211\u89c9\u5f97\u6709\u8da3\u7684\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u4e0d\u662f\u5982\u4f55\u68c0\u6d4b\u4f5c\u5f0a\u8005\uff0c\u800c\u662f\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u6839\u672c\u96be\u4ee5\u4f5c\u5f0a\u3002\u5f53\u7136\uff0c\u8fd9\u4e0d\u4ec5\u4ec5\u4e0e\u56fd\u9645\u8c61\u68cb\u6216\u5176\u4ed6\u56e0\u5927\u6d41\u884c\u800c\u88ab\u8feb\u5728\u7ebf\u7684\u6e38\u620f\u6709\u5173\u3002\u5b83\u6269\u5c55\u5230\u7ba1\u7406\u8bfe\u7a0b\u548c\u6d4b\u8bd5\uff0c\u6b64\u65f6\u201c\u6b63\u5e38\u201d\u9762\u5bf9\u9762\u79cb\u5b63\u5b66\u671f\u7684\u524d\u666f\u88ab\u6211\u4eec\u5728\u6b64\u535a\u5ba2\u4e0a\u9884\u89c8\u548c\u8ddf\u8e2a\u7684\u6fc0\u589e\u6240\u6405\u6270\u3002\u4eba\u4eec\u5728\u9762\u5bf9\u9762\u56fd\u9645\u8c61\u68cb\u4e2d\u4f5c\u5f0a\u7684\u65b9\u5f0f\u5f88\u591a\u3002\u7ef4\u57fa\u767e\u79d1\u6709\u4e00\u4e2a\u5f88\u957f\u7684\u5217\u8868\u3002\u5728 2014 \u5e74\u7684 TEDx Buffalo \u6f14\u8bb2\u4e2d\uff0cKen \u5c06\u4ed6\u9047\u5230\u7684\u6848\u4f8b\u653e\u5728\u4e86\u82cf\u65af\u535a\u58eb\u7684\u62bc\u97f5\u4e2d\u3002\n2020 \u5e74 3 \u6708 15 \u65e5\uff0c\u300a\u7ebd\u7ea6\u65f6\u62a5\u300b\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8e\u6280\u672f\u4f5c\u5f0a\u7684\u6587\u7ae0\u3002\u5b83\u4e0e\u4f11\u65af\u987f\u592a\u7a7a\u4eba\u961f\u7684\u4e11\u95fb\u76f8\u63d0\u5e76\u8bba\uff0c\u5305\u62ec\u6211\u4eec\u521a\u521a\u62a5\u9053\u7684\u540c\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5373\u4f55\u585e\u00b7\u963f\u5c14\u56fe\u592b\u662f\u5426\u5728 2019 \u5e74\u8d62\u5f97\u7cfb\u5217\u8d5b\u51a0\u519b\u672c\u5792\u6253\u3002\u5b83\u6d89\u53ca\u5728\u7ebf\u56fd\u9645\u8c61\u68cb\u548c\u5f15\u8ff0 Le-Marechal\uff0c\u4f46\u6ca1\u6709\u663e\u793a\u5373\u5c06\u5230\u6765\u7684\u5927\u6d41\u884c\u4ee5\u53ca\u5b83\u5bf9\u56fd\u9645\u8c61\u68cb\u7684\u5f71\u54cd\u3002\u5b83\u5173\u4e8e\u56fd\u9645\u8c61\u68cb\u7684\u7b2c\u4e00\u53e5\u8bdd\u6697\u793a\u4e86 1978 \u5e74\u7684\u4e8b\u4ef6\uff0c\u5f53\u65f6 Viktor Korchnoi \u58f0\u79f0 Anatoly Karpov \u53ef\u4ee5\u901a\u8fc7\u9001\u5230\u684c\u4e0a\u7684\u9178\u5976\u5473\u9053\u6765\u63a5\u6536\u6709\u5173\u4ed6\u4eec\u6bd4\u8d5b\u7684\u7f16\u7801\u4fe1\u606f\u3002\u6211\uff0c\u80af\u5199\u8fd9\u90e8\u5206\uff0c\u4e00\u76f4\u5728\u8ba8\u8bba\u9178\u5976\u52fa\u5b50\u6389\u843d\u7684\u58f0\u97f3\u5982\u4f55\u53ef\u80fd\u662f\u89c2\u4f17\u65e0\u6570\u53ef\u80fd\u7684\u4fe1\u53f7\u4e4b\u4e00\u3002\u5927\u6d41\u884c\u5bfc\u81f4\u4eca\u5e74\u7684\u5854\u5854\u94a2\u94c1\u9526\u6807\u8d5b\u5728\u6ca1\u6709\u89c2\u4f17\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\uff0c\u800c\u5176\u4ed6\u4e00\u4e9b\u7cbe\u82f1\u8d5b\u4e8b\u5219\u5728\u5e26\u6709\u5355\u5411\u73bb\u7483\u7684\u201c\u6c34\u65cf\u9986\u201d\u4e2d\u8fdb\u884c\u3002\u4f46\u8fd9\u4e0d\u9002\u7528\u4e8e\u66f4\u5927\u89c4\u6a21\u7684\u516c\u5f00\u8d5b\u3002\u5e72\u6270\u5c04\u9891\u4fe1\u53f7\u901a\u5e38\u662f\u975e\u6cd5\u7684\u3002\u6211\u540c\u610f\u90a3\u4e9b\u5efa\u8bae\u8058\u8bf7\u50cf\u5e03\u6717\u8fd9\u6837\u7684\u9b54\u672f\u5e08\u2014\u2014\u4e00\u4e2a\u6709\u89c2\u5bdf\u4eba\u7684\u9e70\u773c\u7684\u4eba\u2014\u2014\u6765\u5e2e\u52a9\u5927\u578b\u6d3b\u52a8\u7684\u4ef2\u88c1\u8005\u3002\u7136\u800c\uff0c\u5c3d\u7ba1\u6709\u5404\u79cd\u65b9\u6cd5\u548c\u624b\u6bb5\uff0c\u5728\u9762\u5bf9\u9762\u7684\u56fd\u9645\u8c61\u68cb\u4e2d\u4f5c\u5f0a\u4ecd\u7136\u5f88\u96be\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u5728\u7ebf\u56fd\u9645\u8c61\u68cb\u7684\u7ec4\u7ec7\u8005\u5f88\u4e50\u610f\u8fbe\u5230\u5b83\u7684\u72b6\u6001\u3002\u56fd\u9645\u68cb\u8054\u63a8\u5e7f\u4e86\u4e00\u79cd\u6df7\u5408\u5f62\u5f0f\uff0c\u73a9\u5bb6\u53ef\u4ee5\u524d\u5f80\u7531\u4ef2\u88c1\u5458\u76d1\u89c6\u7684\u533a\u57df\u623f\u95f4\uff0c\u4f46\u8fd9\u5f88\u96be\u5927\u89c4\u6a21\u7ba1\u7406\u3002\u8fea\u514b\u548c\u6211\u4e00\u6574\u5e74\u90fd\u5728\u4e89\u8bba\u5982\u4f55\u4e3a\u5728\u7ebf\u56fd\u9645\u8c61\u68cb\u505a\u4e9b\u4ec0\u4e48\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u4e24\u4e2a\u6781\u70b9\u7684\u7b54\u6848\u4e0a\u8d8b\u4e8e\u4e00\u81f4\u3002\u56fd\u9645\u5927\u5e08\u5c3c\u838e\u00b7\u83ab\u970d\u5854 (Nisha Mohota) \u672c\u5468\u5728\u5979\u6700\u8fd1\u5173\u4e8e\u4f5c\u5f0a\u7684\u89c6\u9891\u4e2d\u6307\u51fa\u7684\u6096\u8bba\u662f\uff0c\u5728\u5927\u6d41\u884c\u671f\u95f4\uff0c\u5728\u7ebf\u56fd\u9645\u8c61\u68cb\u7684\u6d41\u884c\u5ea6\u8fc5\u901f\u4e0a\u5347\u3002\u4f46\u8fd9\u4e5f\u52a0\u5267\u4e86\u4ee5\u4e0b\u56f0\u5883\uff1a\u62e5\u6709\u7b2c\u4e8c\u4e2a\u6444\u50cf\u5934\u2014\u2014\u4fa7\u89c6\u56fe\u8865\u5145\u5c4f\u5e55\u89c6\u56fe\u2014\u2014\u662f\u4e00\u79cd\u6709\u6548\u7684\u63aa\u65bd\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u9700\u8981\u4e00\u53f0\u76f8\u673a\u4e5f\u5df2\u6210\u4e3a\u6269\u5927\u56fd\u9645\u8c61\u68cb\u6bd4\u8d5b\u8303\u56f4\u7684\u516c\u8ba4\u969c\u788d\u3002", "note_en": "This is to cheat by consulting a computer program that is stronger than all human players, such as the free program  Stockfish, without anything impeding one\u2019s ability to access the program\u2019s recommendations during the game. This is often the case in online chess without sophisticated measures to detect the access.\n Ken\u2019s statistical model can still judge the moves, but this is after the fact. We would like to  prevent cheating. This hasn\u2019t happened. Already last year, Ken was  quoted in the UK Guardian newspaper saying, \u201cThe pandemic has brought me as much work in a single day as I have had in a year previously.\u201d A Wall Street Journal  story that featured Ken also noted:\n The data showed something curious. More people were playing chess. Yet the fair play violations were surging even faster than the number of overall games. \u201cWhich makes us think that there has been an uptick in the rate of cheating,\u201d said Gerard Le-Marechal, head of cheat detection for Chess.com.\n This year has brought no letup\u2014see Ken\u2019s statement prefacing a non-chess  post that June and July were the worst. Chess.com and Lichess and other playing sites have the final say but Ken is often used for both early warning (his \u201cscreening\u201d step is agile and gives officials an informative snapshot of an entire tournament) and for explaining verdicts afterwards, since his model is transparent and not compromised by divulging explanations.\n But again, this is after the fact. I recall a  post we wrote about ways computer security is like \u201cclosing the barn door after the horse has already left.\u201d The open question that I find interesting is not how cheaters can be detected, but is there some way to make it hard for them to cheat at all.\n  Of course, this is not just about chess, or other games forced online by the pandemic. It extends to administering courses and tests, at a time when the prospect of a \u201cnormal\u201d in-person Fall semester is being roiled by the surge we\u2019ve  previewed and  tracked on this blog.\n The number of ways people have cheated at in-person chess is legion. Wikipedia has a long  list. Ken put the ways in cases he\u2019d encountered to a Dr. Seuss rhyme midway through his 2014 TEDx Buffalo  talk.\n On March 15, 2020, the New York Times published an  article on tech in chess cheating. It drew analogy to the Houston Astros scandal, including the same example we just  covered of whether Jos\u00e9 Altuve was wired for his series-winning home run in 2019. It touched on online chess and quotes Le-Marechal but  showed no inkling of the impending pandemic and its effect on chess. Its first sentence about chess alludes to the 1978 incident in which Viktor Korchnoi alleged that Anatoly Karpov could receive coded information about their match games via the flavor of yogurt delivered to the table.\n I, Ken writing this part, have been part of discussions of how a yogurt  spoon dropped audibly could be one of myriad possible signals from the audience. The pandemic caused this year\u2019s Tata Steel tournament to be played  without audience, while some other elite events are played in an \u201c aquarium\u201d with one-way glass. But that does not work for larger-scale Open tournaments. Jamming RF signals is generally illegal. I agree with those recommending that an illusionist like Brown\u2014someone with an eagle eye for watching people\u2014be employed to help the arbiters at large events.\n Yet for all the ways and means out there, it is still  hard to cheat at in-person chess. Its state is one that organizers of  online chess would gladly reach if they could. FIDE has promoted a  hybrid form in which players travel to regional rooms watched by arbiters, but this is hard to manage on large scale. Dick and I have debated all year what to do for online chess, and we\u2019ve converged on two poles of answers.\n The paradox, noted this week by International Master Nisha Mohota in her recent  video on cheating, is that the popularity of chess online has burgeoned during the pandemic. But this also enhances the following dilemma:\n Having a second camera\u2014side view supplementing screen view\u2014has been an effective measure.\n But requiring even one camera has been an acknowledged obstacle to expanding the reach of chess tournaments.", "posttime": "2021-08-08 06:36:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fd\u9645\u8c61\u68cb,tables,\u4f5c\u5f0a", "title": "\u626d\u8f6c\u56fd\u9645\u8c61\u68cb\u4f5c\u5f0a\u7684\u5c40\u9762\uff1f", "title_en": "Turning the tables on chess cheating?", "transed": 1, "url": "https://rjlipton.wpcomstaging.com/2021/08/04/turning-the-tables-on-cheating/", "via": "", "real_tags": ["\u56fd\u9645\u8c61\u68cb", "tables", "\u4f5c\u5f0a"]}, {"category": "", "categoryclass": "", "imagename": "adc59277ce3a73d4f8e3b68c8c71ef87.png", "infoid": 1072028, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b22\u8fce\u6765\u5230 Signals and Threads\uff0c\u6df1\u5165\u63a2\u8ba8 Jane Street \u6280\u672f\u5806\u6808\u7684\u6bcf\u4e00\u5c42\u3002\u6211\u662f\u7f57\u6069\u00b7\u660e\u65af\u57fa\u3002\u4eca\u5929\uff0c\u6211\u4eec\u5c06\u5728 Jane Street \u4e0e Laurent Mazare \u5c31 Python \u548c OCaml \u7684\u4f7f\u7528\u8fdb\u884c\u5bf9\u8bdd\u3002 Jane Street \u56e0\u6211\u4eec\u4f7f\u7528 OCaml \u800c\u5e7f\u4e3a\u4eba\u77e5\uff0c\u8fd9\u662f\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\uff0c\u7c7b\u4f3c\u4e8e Scala \u548c F# \u4ee5\u53ca Swift \u548c Haskell \u7b49\u8bed\u8a00\uff0c\u4f46\u6545\u4e8b\u6bd4\u8fd9\u66f4\u590d\u6742\u3002\u6211\u4eec\u4e0d\u4ec5\u4f7f\u7528 OCaml\uff0c\u6211\u4eec\u8fd8\u4f7f\u7528\u5176\u4ed6\u4e00\u4e9b\u8bed\u8a00\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u4e00\u79cd\u975e\u5e38\u91cd\u8981\u7684\u8bed\u8a00\u662f Python\uff0c\u6211\u4eec\u4e3b\u8981\u4f7f\u7528 Python \u8fdb\u884c\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u4f46\u5b83\u4e5f\u6709\u70b9\u8d85\u51fa\u4e86\u8fd9\u4e9b\u9886\u57df\u3002\u6240\u4ee5\uff0c\u4eca\u5929\u65e9\u4e0a\u8c08\u8bdd\u7684\u4e3b\u9898\u662f\u5173\u4e8e Python \u5982\u4f55\u4e0e OCaml \u76f8\u9002\u5e94\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u4e0e Jane Street \u66f4\u5e7f\u6cdb\u7684\u57fa\u7840\u8bbe\u65bd\u76f8\u9002\u5e94\u3002\u6211\u5f88\u9ad8\u5174\u4e0e Laurent \u8fdb\u884c\u8fd9\u6b21\u5bf9\u8bdd\u7684\u539f\u56e0\u4e4b\u4e00\u662f\uff0c\u4ed6\u5728 Jane Street \u5185\u90e8\u505a\u4e86\u5f88\u591a\u5de5\u4f5c\uff0c\u65e2\u4f7f\u7528 Python \u5de5\u4f5c\uff0c\u53c8\u5f00\u53d1 Python \u5de5\u5177\u672c\u8eab\uff0c\u66f4\u597d\uff0c\u800c\u4e14\uff0c\u4ed6\u4ed6\u62e5\u6709\u5728\u4e0d\u540c\u73af\u5883\u4e2d\u4f7f\u7528\u4e0d\u540c\u8bed\u8a00\u7684\u66f4\u5e7f\u6cdb\u7ecf\u9a8c\uff0c\u56e0\u6b64\uff0c\u4ed6\u4e0d\u4ec5\u5728 Jane Street \u5ea6\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u8fd8\u5bf9\u6b64\u6709\u4e00\u4e9b\u770b\u6cd5\u3002\u6240\u4ee5\uff0c\u52b3\u4f26\u7279\uff0c\u9996\u5148\uff0c\u4f60\u80fd\u544a\u8bc9\u6211\u4eec\u66f4\u591a\u5173\u4e8e\u4f60\u5728\u7b80\u8857\u4ee5\u5916\u7684\u7ecf\u5386\u4ee5\u53ca\u5b83\u662f\u5982\u4f55\u4fc3\u4f7f\u4f60\u5728\u8fd9\u91cc\u5de5\u4f5c\u7684\u5417\uff1f\u662f\u7684\u3002\u6240\u4ee5\uff0c\u6211\u5728\u5b66\u672f\u754c\u4e4b\u5916\u7684\u7b2c\u4e00\u4efd\u5de5\u4f5c\u7ecf\u5386\u662f\u5728\u4e00\u5bb6\u540d\u4e3a LexiFi \u7684\u5c0f\u516c\u53f8\uff0c\u6211\u4eec\u5728\u90a3\u91cc\u4f7f\u7528 OCaml \u6765\u5efa\u6a21\u91d1\u878d\u5408\u540c\u3002\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cOCaml \u4e3b\u8981\u7528\u4f5c\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u6765\u8868\u793a\u590d\u6742\u7684\u8d22\u52a1\u6536\u76ca\u3002\u6211\u82b1\u4e86\u51e0\u5e74\u65f6\u95f4\u7814\u7a76\u6211\u4eec\u51fa\u552e\u7ed9\u94f6\u884c\u548c\u8d44\u4ea7\u7ba1\u7406\u516c\u53f8\u7684\u6574\u4f53\u57fa\u7840\u8bbe\u65bd\u3002\u5728\u90a3\u4e4b\u540e\uff0c\u6211\u4e8e 2010 \u5e74\u5f00\u59cb\u5728\u4f26\u6566\u7684\u9ad8\u76db\u5de5\u4f5c\uff0c\u62c5\u4efb\u80a1\u7968\u7b56\u7565\u5e08\uff0c\u5728\u90a3\u91cc\u6211\u4f7f\u7528\u4e86\u4e00\u79cd\u540d\u4e3a Slang \u7684\u5185\u90e8\u7f16\u7a0b\u8bed\u8a00\uff0c\u4eba\u4eec\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a Python \u7684\u4e00\u79cd\u53d8\u4f53\u3002\u5b83\u4e3b\u8981\u662f\u4e00\u79cd\u811a\u672c\u8bed\u8a00\uff0c\u5b9e\u9645\u4e0a\u5feb\u901f\u67e5\u770b\u60a8\u6b63\u5728\u6267\u884c\u7684\u64cd\u4f5c\u7684\u8f93\u51fa\u662f\u76f8\u5f53\u4e0d\u9519\u7684\uff0c\u4f46\u662f\u5f53\u7136\uff0c\u6548\u7387\u6709\u70b9\u4ee4\u4eba\u62c5\u5fe7\u3002\u6211\u5728\u9ad8\u76db\u5de5\u4f5c\u4e86\u51e0\u5e74\uff0c\u7136\u540e\u5728 2013 \u5e74\uff0c\u6211\u52a0\u5165\u4e86 Jane Street\uff0c\u62c5\u4efb\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u3002\u6211\u5728 Jane Street \u4e3b\u8981\u4ece\u4e8b\u4ea4\u6613\u7cfb\u7edf\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u56de\u5230\u5728\u51e0\u4e4e\u6240\u6709\u4e8b\u60c5\u4e0a\u90fd\u4f7f\u7528 OCaml\uff0c\u5728\u8bbe\u8ba1\u751f\u4ea7\u5173\u952e\u7684\u4e1c\u897f\u65f6\uff0c\u6211\u975e\u5e38\u559c\u6b22\u51fd\u6570\u5f0f\u7f16\u7a0b\u65b9\u9762\u548c\u5f3a\u7c7b\u578b\u7cfb\u7edf\u3002\u5728 Jane Street \u5de5\u4f5c\u4e86\u56db\u5e74\u4e4b\u540e\uff0c\u6211\u5b9e\u9645\u4e0a\u79bb\u5f00\u4e86\u53bb DeepMind \u5de5\u4f5c\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u90a3\u65f6\u6211\u5bf9\u673a\u5668\u5b66\u4e60\u5145\u6ee1\u70ed\u60c5\uff0c\u6211\u60f3\u5728\u8be5\u9886\u57df\u7684\u524d\u6cbf\u5de5\u4f5c\u3002\u5728 DeepMind\uff0c\u6211\u4e3b\u8981\u4f7f\u7528 Python \u8fdb\u884c\u673a\u5668\u5b66\u4e60\uff0c\u5f53\u7136\u8fd8\u6709 TensorFlow\uff0c\u800c\u4e14\u6211\u8fd8\u9700\u8981\u4f7f\u7528 Swift \u4f5c\u4e3a Python \u7684\u66ff\u4ee3\u54c1\u3002\u6211\u5728\u90a3\u91cc\u5de5\u4f5c\u4e86\u4e00\u5e74\uff0c\u7136\u540e\u6211\u56de\u5230\u7b80\u8857\u5de5\u4f5c\uff0c\u73b0\u5728\u6211\u66f4\u4e13\u6ce8\u4e8e\u7814\u7a76\u9886\u57df\u3002\u6240\u4ee5\uff0c\u6211\u4f1a\u8bf4\u6211\u6709\u4e00\u534a\u7684\u65f6\u95f4\u5728 OCaml \u4e0a\u5de5\u4f5c\uff0c\u4e00\u534a\u7684\u65f6\u95f4\u5728 Python \u4e0a\u5de5\u4f5c\uff0c\u4f46\u662f\u8fd9\u4e24\u534a\u662f\u975e\u5e38\u4e0d\u540c\u7684\u3002\u4f60\u80cc\u666f\u7684\u53e6\u4e00\u90e8\u5206\u662f\u4f60\u5728\u5f00\u6e90\u65b9\u9762\u4e5f\u505a\u4e86\u4e00\u4e9b\u6709\u8da3\u7684\u5de5\u4f5c\uff0c\u4f60\u80fd\u8bf4\u4e00\u4e0b\u5417\u3002\u56e0\u6b64\uff0c\u6211\u5c1d\u8bd5\u6d3b\u8dc3\u4e8e\u5f00\u6e90\u793e\u533a\uff0c\u5e76\u501f\u6b64\u673a\u4f1a\u5f00\u53d1\u4e86\u51e0\u4e2a\u8f6f\u4ef6\u5305\u3002\u6700\u8457\u540d\u7684\u53ef\u80fd\u662f ocaml-torch\uff0c\u5b83\u4e3a PyTorch \u6846\u67b6\u63d0\u4f9b OCaml \u7ed1\u5b9a\u3002 PyTorch \u662f Facebook \u5f00\u53d1\u7684\u8fd9\u4e2a\u4ee4\u4eba\u60ca\u5947\u7684\u4e1c\u897f\uff0c\u5b83\u53ef\u4ee5\u8ba9\u4f60\u7528 Python \u7f16\u5199\u4e00\u4e9b\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\uff0c\u5e76\u5229\u7528\u4f60\u7684 GPU \u548c\u81ea\u52a8\u5fae\u5206\u7684\u529b\u91cf\u3002\u901a\u8fc7\u8fd9\u4e9b OCaml \u7ed1\u5b9a\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4ece OCaml \u4e2d\u505a\u5230\u8fd9\u4e00\u70b9\u2014\u2014\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u5728\u6df7\u5408\u4e2d\u6dfb\u52a0\u7c7b\u578b\u5b89\u5168\u3002\u6211\u8fd8\u4e3a\u5b83\u7814\u7a76\u4e86 Rust \u7ed1\u5b9a\uff0c\u6240\u4ee5\uff0c\u5b83\u662f\u4e00\u6837\u7684\uff1b\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u5728 Rust \u4e2d\u6709\u7ed1\u5b9a\uff0c\u56e0\u6b64\u60a8\u6700\u7ec8\u7f16\u5199\u4e86 Rust\uff0c\u800c\u4e0d\u662f\u7f16\u5199 Python \u4ee3\u7801\u3002\u6211\u8fd8\u5728 Clippy \u4e0a\u505a\u4e86\u4e00\u4e9b\u5de5\u4f5c\uff0c\u5b83\u662f\u4e00\u4e2a Rust \u9759\u6001\u5206\u6790\u5668\uff0c\u5728\u90a3\u91cc\uff0c\u60a8\u5c1d\u8bd5\u5206\u6790 Rust \u4ee3\u7801\u5e76\u627e\u5230\u5408\u6cd5\u7684\u9519\u8bef\u3002\u6211\u67e5\u770b\u4e86\u8bb8\u591a\u5176\u4ed6 OCaml \u5305\u2014\u2014TensorFlow \u7684\u7ed1\u5b9a\u3001Apache Arrow \u7684\u7ed1\u5b9a\u3001\u6211\u5c1d\u8bd5\u4e3a OCaml \u7f16\u5199\u6570\u636e\u6846\u5e93\u2026\u2026\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u4e1c\u897f\u3002\u6240\u6709\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5728 GitHub \u4e0a\u627e\u5230\u3002\u6240\u4ee5\uff0c\u8fd9\u4e00\u5207\u90fd\u53cd\u6620\u4e86\u4f60\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u5728\u4e0d\u540c\u7684\u5730\u65b9\u4f7f\u7528\u4e0d\u540c\u7684\u8bed\u8a00\u548c\u751f\u6001\u7cfb\u7edf\u5de5\u4f5c\u3002\u4e00\u8def\u4e0a\u4f60\u63d0\u5230\uff0c\u4f60\u5927\u7ea6\u4e00\u534a\u7684\u65f6\u95f4\u82b1\u5728 Python \u4e0a\uff0c\u4e00\u534a\u7684\u65f6\u95f4\u82b1\u5728 OCaml \u4e0a\uff0c\u8fd9\u4e24\u534a\u662f\u975e\u5e38\u4e0d\u540c\u7684\u3002\u4e5f\u8bb8\u4f60\u53ef\u4ee5\u591a\u8bf4\u4e00\u70b9\uff0c\u8fd9\u4e24\u4e2a\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f\u662f\u7684\uff0c\u6211\u7684\u524d\u534a\u90e8\u5206\u65f6\u95f4\u90fd\u82b1\u5728\u4e86\u4f7f\u7528 Python \u4e0a\uff0c\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u7814\u7a76\u76ee\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u5c06\u5728\u7b14\u8bb0\u672c\u4e2d\u4f7f\u7528 Python\u3002\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e0d\u77e5\u9053\u7b14\u8bb0\u672c\u662f\u4ec0\u4e48\u7684\u4eba\u6765\u8bf4\uff0c\u5b83\u662f\u4e00\u79cd\u7f51\u7edc UI\uff0c\u5728\u90a3\u91cc\u4f60\u6709\u4e00\u4e9b\u5355\u5143\u683c\uff0c\u4f60\u53ef\u4ee5\u5728\u5176\u4e2d\u8f93\u5165\u4e00\u4e9b\u4f60\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u662f Python\uff0c\u4f60\u53ef\u4ee5\u6309\u987a\u5e8f\u8bc4\u4f30\u6bcf\u4e2a\u5355\u5143\u683c.\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f00\u53d1\u6a21\u5f0f\u975e\u5e38\u5177\u6709\u4ea4\u4e92\u6027\u3002\u56e0\u6b64\uff0c\u60a8\u67e5\u770b\u5b9e\u9645\u8f93\u51fa\uff0c\u7a0d\u5fae\u8c03\u6574\u60a8\u7684\u4ee3\u7801\uff0c\u7136\u540e\u518d\u6b21\u8bc4\u4f30\u5b83\uff0c\u7136\u540e\u518d\u6b21\u8c03\u6574\u60a8\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u60a8\u6ce8\u610f\u5230\u81ea\u5df1\u72af\u4e86\u4e00\u4e9b\u9519\u8bef\uff0c\u7136\u540e\u4e00\u904d\u53c8\u4e00\u904d\u5730\u91cd\u65b0\u5f00\u59cb\u3002\u6240\u4ee5\uff0c\u8fd9\u662f\u67d0\u79cd\u4ea4\u4e92\u5f0f\u5f00\u53d1\u3002\u76f8\u5f53\u4e0d\u9519\u7684\u662f\uff0c\u60a8\u5728\u7f16\u8f91\u4ee3\u7801\u548c\u67e5\u770b\u5b9e\u9645\u7ed3\u679c\u4e4b\u95f4\u6709\u4e00\u4e2a\u975e\u5e38\u5feb\u901f\u7684\u53cd\u9988\u5faa\u73af\u3002\u5f53\u7136\uff0c\u5b83\u4e0e\u975e\u5e38\u5e9e\u5927\u7684\u7ed8\u56fe\u5e93\u7684 Python \u751f\u6001\u7cfb\u7edf\u975e\u5e38\u76f8\u914d\u3002\u56e0\u6b64\uff0c\u60a8\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5728\u4e00\u4e9b\u6570\u636e\u4e0a\u8fd0\u884c\u60a8\u7684\u7b97\u6cd5\uff0c\u7136\u540e\u63d2\u5165\u8f93\u51fa\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u7b26\u5408\u60a8\u7684\u76f4\u89c9\uff0c\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u8bf7\u5c1d\u8bd5\u8c03\u8bd5\u3001\u8c03\u6574\u60a8\u7684\u4ee3\u7801\uff0c\u7136\u540e\u91cd\u65b0\u5f00\u59cb\u3002\u6240\u4ee5\uff0c\u8fd9\u5c06\u4e3b\u8981\u662f\u6211\u4f7f\u7528 Python \u7684\u76ee\u7684\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u6709 OCaml\uff0c\u5728\u90a3\u91cc\uff0c\u5b83\u7528\u4e8e\u66f4\u591a [\u4e00\u822c] \u5f00\u53d1\u5de5\u4f5c\u548c\u751f\u4ea7\u5173\u952e\u5f00\u53d1\uff0c\u6211\u4f1a\u8bf4\uff0c\u4f60\u503e\u5411\u4e8e\u6784\u5efa\u7cfb\u7edf\u76f8\u5f53\u6709\u5f39\u6027\u3002\u6211\u7ecf\u5e38\u611f\u5230\u60ca\u8bb6\u7684\u662f\uff0c\u4f60\u5199\u4e86\u4e00\u4e9b OCaml \u5de5\u4f5c\uff0c\u4f60\u82b1\u4e86\u4e00\u4e2a\u661f\u671f\u7684\u65f6\u95f4\uff0c\u90e8\u7f72\u5b83\uff0c\u7136\u540e\u51e0\u5e74\u540e\u4f60\u53c8\u56de\u6765\u4e86\uff0c\u751a\u81f3\u4f60\u53ef\u80fd\u5df2\u7ecf\u79bb\u5f00\u5e76\u6cbf\u7740\u65b9\u5f0f\uff0c\u5e76\u4e14\u60a8\u6ce8\u610f\u5230\u60a8\u7684\u5de5\u4f5c\u5b9e\u9645\u4e0a\u4ecd\u7136\u5b58\u5728\u5e76\u4e14\u4ecd\u5728\u5de5\u4f5c\uff0c\u8fd9\u975e\u5e38\u4e86\u4e0d\u8d77\u3002\u5f53\u7136\uff0c\u5728 Python \u65b9\u9762\uff0c\u4e8b\u60c5\u4f1a\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u5185\u7ee7\u7eed\u5de5\u4f5c\u7684\u60c5\u51b5\u66f4\u4e3a\u7f55\u89c1\u3002\u591a\u8bf4\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u3002\u60a8\u8ba4\u4e3a OCaml \u662f\u4ec0\u4e48\uff0c\u5b83\u4f7f\u7f16\u5199\u8fd9\u4e9b\u66f4\u5065\u58ee\u7684\u4efb\u52a1\u3001\u6355\u83b7\u9519\u8bef\u7b49\u6240\u6709\u8fd9\u4e9b\u53d8\u5f97\u66f4\u5bb9\u6613\uff1f\n\u662f\u7684\u3002\u6240\u4ee5\uff0c\u6211\u8ba4\u4e3a\u5b9e\u9645\u4e0a\u6709\u4e24\u4e2a\u65b9\u9762\u3002\u4e00\u4e2a\u662f\u5173\u4e8e OCaml\uff0c\u53e6\u4e00\u4e2a\u662f\u5173\u4e8e\u6211\u4eec\u56f4\u7ed5 OCaml \u7684\u4e00\u822c\u5de5\u7a0b\u5b9e\u8df5\u3002\u6240\u4ee5\uff0c\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5f53\u4f60\u7f16\u5199 OCaml \u4ee3\u7801\u65f6\uff0c\u4f60\u901a\u5e38\u4f1a\u4e3a\u4f60\u7684\u4e8b\u60c5\u7f16\u5199\u9002\u5f53\u7684\u6d4b\u8bd5\uff0c\u4f60\u4f1a\u8003\u8651\u5f88\u591a\u9519\u8bef\u60c5\u51b5\u3002\u518d\u6b21\uff0c\u90e8\u5206\u539f\u56e0\uff0c\u56e0\u4e3a\u7c7b\u578b\u7cfb\u7edf\u4f1a\u5f3a\u5236\u6267\u884c\uff0c\u6bcf\u4e2a\u51fd\u6570\u90fd\u4f1a\u544a\u8bc9\u4f60\uff0c\u54e6\uff0c\u5b9e\u9645\u4e0a\uff0c\u6211\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u4f46\u6211\u4e5f\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u4f60\u5fc5\u987b\u8003\u8651\u9519\u8bef\u662f\u4ec0\u4e48\u4ee5\u53ca\u4f60\u60f3\u5982\u4f55\u5904\u7406\u5b83\u3002\u4f60\u7684\u76ee\u6807\u662f\uff0c\u6784\u5efa\u4e00\u4e9b\u6709\u5f39\u6027\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u4f60\u4e5f\u5904\u4e8e\u4e00\u79cd\u5fc3\u6001\uff0c\u4f60\u4f1a\u8003\u8651\u5f88\u591a\u6781\u7aef\u60c5\u51b5\uff0c\u800c\u5728 Python \u4e16\u754c\u4e2d\uff0c\u66f4\u591a\u7684\u662f\u5173\u4e8e\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\u6240\u4ee5\uff0c\u4f60\u4e0d\u4f1a\u82b1\u592a\u591a\u65f6\u95f4\u53bb\u8003\u8651\u51fd\u6570\u5b9e\u9645\u8f93\u51fa\u4ec0\u4e48\uff0c\u800c\u4e14\u5927\u591a\u6570\u65f6\u5019\u4f60\u4f7f\u7528\u4e00\u4e2a\u4f60\u5e76\u4e0d\u771f\u6b63\u77e5\u9053\u51fd\u6570\u8f93\u51fa\u4ec0\u4e48\u7684\u5e93\uff0c\u7ed3\u679c\u8bc1\u660e\u4f60\u6709\u70b9\u731c\uff0c\u8bd5\u8bd5\u5b83\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5b83\u90fd\u6709\u6548\uff0c\u7136\u540e\u60a8\u7ee7\u7eed\u8fd9\u6837\u505a\uff0c\u60a8\u53ea\u9700\u4ee5\u4ea4\u4e92\u65b9\u5f0f\u68c0\u67e5\u5b83\u662f\u5426\u7b26\u5408\u60a8\u7684\u671f\u671b\u3002\u6211\u771f\u7684\u88ab\u4f60\u5728\u8fd9\u91cc\u7684\u63cf\u8ff0\u9707\u60ca\u4e86\u3002\u4e24\u79cd\u8bed\u8a00\u4e4b\u95f4\u5b58\u5728\u591a\u79cd\u5dee\u5f02\uff0c\u5176\u4e2d\u4e00\u4e9b\u662f\u8bed\u8a00\u7684\u57fa\u672c\u7279\u5f81\u3002\u5176\u4e2d\u4e00\u4e9b\u662f\u5173\u4e8e\u56f4\u7ed5\u8bed\u8a00\u7684\u751f\u6001\u7cfb\u7edf\u7684\u4e8b\u60c5\uff0c\u5176\u4e2d\u200b\u200b\u4e00\u4e9b\u662f\u5173\u4e8e Jane Street \u4f5c\u4e3a\u4e00\u4e2a\u7ec4\u7ec7\u56f4\u7ed5\u4e0d\u540c\u8bed\u8a00\u7684\u5b9e\u8df5\u7684\u95ee\u9898\u3002\u6240\u4ee5\uff0c\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u7a0d\u5fae\u5206\u5f00\u7814\u7a76\u4e00\u4e0b\u3002\u8ba9\u6211\u4eec\u5148\u8c08\u8c08\u751f\u6001\u7cfb\u7edf\u3002 Python \u751f\u6001\u7cfb\u7edf\u548c OCaml \u751f\u6001\u7cfb\u7edf\u6709\u4f55\u4e0d\u540c\u4e4b\u5904\uff1f\u6211\u8ba4\u4e3a\uff0c\u5982\u4eca\uff0cPython \u662f\u6709\u5173\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u5206\u6790\u7684\u4e00\u5207\u4e8b\u7269\u7684\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u5e0c\u671b\u80fd\u591f\u518d\u6b21\u5728\u7b14\u8bb0\u672c\u4e2d\u7ed8\u5236\u7ed3\u679c\uff0c\u60a8\u6709\u5f88\u591a\u5e93\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5927\u91cf\u5728\u7ebf\u6559\u7a0b\u5c06\u5e2e\u52a9\u60a8\u627e\u5230\u6b63\u786e\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u60a8\u9047\u5230\u4efb\u4f55\u7c7b\u578b\u7684\u95ee\u9898\uff0c\u540c\u6837\uff0c\u4f60\u53ef\u4ee5\u8c37\u6b4c\u4e00\u4e0b\uff0c\u4f60\u4f1a\u5f88\u5bb9\u6613\u5f97\u5230\u4e00\u4e9b\u7ed3\u679c\u3002\u8fd8\u6709\u5404\u79cd\u5404\u6837\u7684\u673a\u5668\u5b66\u4e60\u5e93\u53ef\u7528\uff0c\u6240\u6709\u4e3b\u8981\u7684\u73b0\u4ee3\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u90fd\u6709 Python \u524d\u7aef\uff0c\u5e76\u4e14\u90fd\u662f\u4ee5 Python \u4f18\u5148\u7684\u65b9\u5f0f\u53d1\u5e03\u7684\uff0c\u56e0\u6b64\u5f00\u53d1\u4eba\u5458\u5c06\u5173\u6ce8\u7684 API \u662f Python \u7684\u3002\u6211\u4e0d\u8ba4\u4e3a Python \u5728\u90a3\u4e2a\u9886\u57df\u6bd4\u53e6\u4e00\u79cd\u6709\u70b9\u76f8\u4f3c [\u5982 Ruby] \u7684\u8bed\u8a00\u66f4\u6210\u529f\uff0c\u4f46\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4f60\u62e5\u6709\u7684\u751f\u6001\u7cfb\u7edf\u8d8a\u591a\uff0c\u5b83\u5c31\u8d8a\u6210\u529f\u3002\u5b83\u5438\u5f15\u4e86\u4eba\u4eec\uff0c\u5e76\u5728\u67d0\u4e2a\u65f6\u5019\u6eda\u96ea\u7403\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u6d89\u53ca\u5230 OCaml \u65f6\uff0c\u6709\u5f88\u591a\u5e93\u3002\u6211\u8ba4\u4e3a\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u56fe\u4e66\u9986\u7684\u8d28\u91cf\u5f80\u5f80\u66f4\u597d\u4e00\u4e9b\uff0c\u4f46\u5b83\u4eec\u7684\u6570\u91cf\u8981\u5c11\u5f97\u591a\u3002\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u60a8\u53ef\u4ee5\u7ed1\u5b9a\u5230\u5176\u4ed6\u8bed\u8a00\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e3a TensorFlow \u548c PyTorch \u6240\u505a\u7684\uff0c\u4f46\u60a8\u751a\u81f3\u53ef\u4ee5\u7ed1\u5b9a\u5230 Python\u3002\u6240\u4ee5\uff0c\u5f53\u4f60\u60f3\u5728 OCaml \u4e2d\u7ed8\u5236\u4e00\u4e9b\u4e1c\u897f\u65f6\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u6709\u4e00\u4e9b Matplotlib \u7ed1\u5b9a\u200b\u200b\uff0c\u8fd9\u5c06\u8c03\u7528 Python \u672c\u8eab\uff0c\u5c06\u4f7f\u7528\u8fd9\u4e2a\u975e\u5e38\u8457\u540d\u7684 Matplotlib \u5e93\u6765\u8fd0\u884c\u8fd9\u4e9b\u56fe\u3002\u800c\u4e14\u6211\u8ba4\u4e3a\u975e\u5e38\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u60a8\u8c08\u5230 Python \u7684\u751f\u6001\u7cfb\u7edf\u4f18\u52bf\u65f6\uff0c\u9996\u5148\u8c08\u5230\u7684\u662f\u53ef\u89c6\u5316\uff0c\u6211\u8ba4\u4e3a\u53ef\u89c6\u5316\u90e8\u5206\u975e\u5e38\u91cd\u8981\uff0c\u800c\u4e14\u6211\u8ba4\u4e3a\u7b14\u8bb0\u672c\u662f\u4e00\u79cd\u5982\u6b64\u6709\u4ef7\u503c\u7684\u65b9\u5f0f\u7684\u6839\u672c\u539f\u56e0\u7684\u5de5\u4f5c\u3002\u505a\u7814\u7a76\u7684\u57fa\u672c\u6a21\u5f0f\u662f\u63a2\u7d22\u6027\u7684\uff0c\u4f60\u5f00\u59cb\u5c1d\u8bd5\u4e00\u4e9b\u4e1c\u897f\uff0c\u770b\u770b\u7ed3\u679c\uff0c\u518d\u5c1d\u8bd5\u522b\u7684\u4e1c\u897f\uff0c\u7136\u540e\u518d\u770b\u770b\u7ed3\u679c\uff0c\u6709\u4e00\u4e2a\u5feb\u901f\u7684\u5de5\u4f5c\u6d41\u7a0b\uff0c\u8ba9\u4f60\u8fd9\u6837\u505a\uff0c\u5e76\u8ba9\u4f60\u5d4c\u5165\u4ee5\u4e00\u79cd\u76f4\u63a5\u7684\u65b9\u5f0f\u5728\u60a8\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u8fdb\u884c\u53ef\u89c6\u5316\u2026\u2026\u6211\u8ba4\u4e3a\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 notebook \u662f\u4e00\u79cd\u5982\u6b64\u5f15\u4eba\u6ce8\u76ee\u7684\u5de5\u4f5c\u65b9\u5f0f\u7684\u539f\u56e0\u4e4b\u4e00\uff0c\u5b83\u4e0e\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5de5\u4f5c\u7684\u4f20\u7edf\u5de5\u4f5c\u6d41\u7a0b\u5927\u4e0d\u76f8\u540c\uff0c\u540e\u8005\u6d89\u53ca\u7eaf\u6587\u672c\u548c\u6587\u672c\u7f16\u8f91\u5668\uff0c\u5e76\u4e14\u53ea\u662f\u6ca1\u6709\u76f8\u540c\u7684\u53ef\u89c6\u5316\u7ec4\u4ef6\u3002\u4e0d\u8fc7\uff0c\u786e\u5b9e\uff0c\u6211\u4f1a\u8bf4\u8fd9\u4e24\u79cd\u6a21\u5f0f\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6709\u70b9\u76f8\u4f3c\uff0c\u53cc\u65b9\u90fd\u5e0c\u671b\u8fdb\u884c\u5feb\u901f\u8fed\u4ee3\u3002\u5728\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u5c06\u5728\u7b14\u8bb0\u672c\u4e2d\u8fdb\u884c\u8fd9\u79cd\u5feb\u901f\u8fed\u4ee3\u3002\u56e0\u6b64\uff0c\u60a8\u5c06\u5feb\u901f\u8fed\u4ee3\u6570\u636e\uff0c\u7ed8\u5236\u51fa\u4e00\u4e9b\u56fe\uff0c\u5e76\u5b9e\u9645\u53ef\u89c6\u5316\u7b97\u6cd5\u7684\u8f93\u51fa\uff0c\u68c0\u67e5\u4e00\u4e9b\u6781\u7aef\u60c5\u51b5\u5e76\u518d\u6b21\u8fed\u4ee3\u3002\u5728 OCaml \u4e16\u754c\u4e2d\uff0c\u4f60\u503e\u5411\u4e8e\u5bf9\u5feb\u901f\u8fed\u4ee3\u505a\u540c\u6837\u7684\u4e8b\u60c5\uff0c\u4f46\u5b83\u662f\u5173\u4e8e\u7c7b\u578b\u5b89\u5168\u7684\u3002\u6240\u4ee5\uff0c\u4f60\u4fdd\u5b58\u4f60\u7684\u6587\u4ef6\uff0c\u4f60\u7684\u6784\u5efa\u7cfb\u7edf\u4f1a\u544a\u8bc9\u4f60\uff0c\u54e6\uff0c\u8fd9\u4e2a\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u8fd9\u4e2a\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u8fd9\u4e2a\u7c7b\u578b\u4e0d\u5339\u914d\u3002\u6700\u540e\uff0c\u4e00\u65e6\u60a8\u8bbe\u6cd5\u8ba9\u4e1c\u897f\u8fdb\u884c\u7f16\u8bd1\uff0c\u60a8\u5c31\u4f1a\u671f\u671b OCaml \u4ee3\u7801\u51e0\u4e4e\u53ef\u4ee5\u5de5\u4f5c\u3002\u800c\u5728 Python \u65b9\u9762\uff0c\u60a8\u6ca1\u6709\u8fd9\u79cd\u7c7b\u578b\u65b9\u9762\u3002\u6240\u4ee5\uff0c\u4f60\u6709\u70b9\u4f9d\u8d56\u5b9e\u9a8c\u6765\u544a\u8bc9\u4f60\u4e8b\u60c5\u662f\u5426\u6b63\u5e38\u3002\u6211\u60f3\u77e5\u9053 OCaml \u4e16\u754c\u4e0a\u662f\u5426\u6709\u66f4\u591a\u8fd9\u79cd\u6765\u56de\u5b9e\u9a8c\u7684\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u60a8\u8ba4\u4e3a\u7684\u90a3\u6837\u3002\u6211\u7ecf\u5e38\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u7684\u5730\u65b9\u662f\u6211\u4eec\u5728\u6784\u5efa\u6240\u8c13\u7684\u671f\u671b\u6d4b\u8bd5\u65b9\u9762\u6240\u505a\u7684\u5de5\u4f5c\u3002\u6240\u4ee5\uff0c\u671f\u5f85\u6d4b\u8bd5\uff0c\u8fd9\u662f\u4e00\u4e2a\u5728 Jane Street \u73af\u5883\u4e4b\u5916\u9c9c\u4e3a\u4eba\u77e5\u7684\u4e8b\u60c5\uff0c\u5c3d\u7ba1\u5b9e\u9645\u4e0a\u5b83\u6700\u521d\u662f\u4ece\u5916\u90e8\u60f3\u6cd5\u4e2d\u7a83\u53d6\u7684\uff0c\u4f46\u57fa\u672c\u60f3\u6cd5\u5b9e\u9645\u4e0a\u6765\u81ea Mercurial \u7248\u672c\u63a7\u5236\u7cfb\u7edf\u4f7f\u7528\u7684\u6d4b\u8bd5\u5de5\u5177\u2014\u2014\u4f46\u65e0\u8bba\u5982\u4f55\uff0cexpect test \u7684\u57fa\u672c\u601d\u60f3\u662f\u4f60\u6709\u8fd9\u79cd\u7f16\u5199\u4ee3\u7801\u548c\u6d4b\u8bd5\u7684\u7edf\u4e00\u65b9\u5f0f\uff0c\u5728\u67d0\u4e9b\u65b9\u9762\u611f\u89c9\u5f88\u50cf\u7b14\u8bb0\u672c\u3002\u4f60\u5199\u4e86\u4e00\u6bb5\u4ee3\u7801\uff0c\u7136\u540e\u4f60\u5199\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u6ce8\u91ca\uff0c\u8fd9\u610f\u5473\u7740\u6355\u83b7\u5230\u8fd9\u91cc\u7684\u4ee3\u7801\u8f93\u51fa\u5e76\u5c06\u5176\u63d2\u5165\u5230\u4ee3\u7801\u7684\u6587\u672c\u4e2d\uff0c\u7136\u540e\u4f60\u518d\u5199\u4e00\u4e9b\u4ee3\u7801\u5e76\u5728\u53e6\u4e00\u4e2a\u5730\u65b9\u6355\u83b7\u8f93\u51fa\u3002\u7136\u540e\u5f53\u6d4b\u8bd5\u8fd0\u884c\u65f6\uff0c\u5b83\u4f1a\u91cd\u65b0\u751f\u6210\u6240\u6709\u8f93\u51fa\uff0c\u5982\u679c\u6709\u4efb\u4f55\u66f4\u6539\uff0c\u5b83\u4f1a\u8bf4\uff0c\u201c\u54e6\uff0c\u8f93\u51fa\u5df2\u66f4\u6539\uff0c\u60a8\u8981\u63a5\u53d7\u65b0\u7248\u672c\u5417\uff1f\u201d\u7136\u540e\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u7f16\u8f91\u5668\u4e2d\u6309\u4e0b\u4e00\u4e2a\u952e\u5e76\u52a0\u8f7d\u8fd9\u4e9b\u65b0\u7684\u53d8\u5316\uff0c\u6211\u4eec\u7ecf\u5e38\u5c06\u5b83\u7528\u4e8e\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6d4b\u8bd5\uff0c\u4f46\u4e5f\u7528\u4e8e\u5404\u79cd\u63a2\u7d22\u6027\u7f16\u7a0b\u3002\u56e0\u6b64\uff0c\u4f8b\u5982\uff0c\u6211\u4f7f\u7528\u5b83\u5b8c\u6210\u7684\u4e00\u4ef6\u4e8b\u662f\u8fdb\u884c\u7f51\u7edc\u6293\u53d6\uff1a\u60a8\u60f3\u8981\u6293\u53d6\u3001\u5206\u6790\u548c\u8f6c\u6362\u4e00\u4e9b\u7f51\u7edc\u6570\u636e\uff0c\u5e76\u4ece\u4e2d\u63d0\u53d6\u4e00\u4e9b\u4fe1\u606f\u3002\u8fd9\u662f\u975e\u5e38\u5177\u6709\u63a2\u7d22\u6027\u7684\u3002\u60a8\u901a\u5e38\u4e0d\u4f1a\u4e00\u76f4\u5c1d\u8bd5\u4ee5\u4e00\u79cd\u901a\u7528\u7684\u65b9\u5f0f\u4f7f\u5176\u6b63\u786e\uff0c\u800c\u662f\u5c1d\u8bd5\u5904\u7406\u67d0\u79cd\u7279\u5b9a\u7c7b\u578b\u7684\u6587\u6863\uff0c\u56e0\u6b64\uff0c\u60a8\u7f16\u5199\u4e86\u4e00\u4e9b\u8f6c\u6362\uff0c\u7136\u540e\u5e94\u7528\u5b83\u4eec\u5e76\u67e5\u770b\u8f93\u51fa\u770b\u770b\u5b83\u662f\u5426\u6709\u610f\u4e49\uff0c\u6784\u5efa\u7cfb\u7edf\u5b9e\u9645\u4e0a\u4e3a\u60a8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u76f8\u5bf9\u826f\u597d\u4e14\u5feb\u901f\u7684\u5faa\u73af\u3002\u4f60\u53bb\u54ea\u91cc\uff0c\u4f60\u505a\u4e00\u4e2a\u6539\u53d8\uff0c\u6784\u5efa\u5b8c\u6210\uff0c\u4f60\u4f1a\u770b\u5230\u65b0\u7684\u8f93\u51fa\u3002\u6700\u5927\u7684\u533a\u522b\u4e4b\u4e00\uff0c\u6ca1\u6709\u56fe\u5f62\u7ec4\u4ef6\uff0c\u4e00\u5207\u90fd\u662f\u7eaf\u6587\u672c\u3002\u60a8\u4ece\u7b14\u8bb0\u672c\u98ce\u683c\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e2d\u83b7\u5f97\u7684\u4e00\u5927\u4f18\u52bf\u662f\u80fd\u591f\u5728\u7f51\u9875\u4e2d\u5b9e\u9645\u663e\u793a\u56fe\u5f62\u5185\u5bb9\u3002\u8fd9\u662f\u6b63\u786e\u7684\u3002\u6211\u6709\u70b9\u540c\u610f\u671f\u671b\u6d4b\u8bd5\u4e3a\u60a8\u63d0\u4f9b\u67d0\u79cd\u4ea4\u4e92\u5f0f\u5b9e\u9a8c\u3002\u5728\u90a3\u91cc\uff0c\u6211\u8ba4\u4e3a\u60a8\u66f4\u591a\u5730\u5173\u6ce8\u6781\u7aef\u60c5\u51b5\uff0c\u4ee5\u53ca\u6211\u4eec\u7b97\u6cd5\u7684\u96be\u70b9\uff0c\u800c\u5927\u90e8\u5206\u65f6\u95f4\u5728 Python \u7b14\u8bb0\u672c\u5b9e\u9a8c\u4e2d\uff0c\u60a8\u5e76\u6ca1\u6709\u7f16\u5199\u4e00\u4e9b\u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5df2\u7ecf\u5b58\u5728\u5f88\u957f\u65f6\u95f4\u4e86\u3002\u56e0\u6b64\uff0c\u60a8\u5b9e\u9645\u4e0a\u5e0c\u671b\u5b83\u5904\u7406\u60a8\u7684\u6570\u636e\u800c\u4e0d\u662f\u4efb\u4f55\u6f5c\u5728\u6570\u636e\u3002\u6240\u4ee5\uff0c\u5373\u4f7f\u671f\u671b\u6d4b\u8bd5\u6709\u70b9\u4e92\u52a8\uff0c\u6211\u8ba4\u4e3a\u5b83\u4ecd\u7136\u662f\u4e00\u4e2a\u4e0d\u540c\u7684\u5b9e\u9a8c\u3002\n\u6240\u4ee5\uff0c\u6211\u5f88\u597d\u5947\uff0c\u60a8\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u8ba4\u4e3a\u8fd9\u662f\u7f16\u7a0b\u8bed\u8a00\u7684\u95ee\u9898\u6216\u56f4\u7ed5\u8be5\u8bed\u8a00\u7684\u5de5\u5177\u548c\u751f\u6001\u7cfb\u7edf\u7684\u95ee\u9898\u3002\u5982\u679c\uff0c\u6709\u90a3\u4e48\u4e00\u5206\u949f\uff0c\u6211\u4eec\u60f3\u8c61\u4e00\u4e2a\u4e16\u754c\uff0c\u5176\u4e2d\u5728\u7b14\u8bb0\u672c\u4e2d\u4f7f\u7528 OCaml \u7684\u5de5\u5177\u90fd\u975e\u5e38\u5b8c\u5584\uff0c\u60a8\u5c06\u62e5\u6709\u6240\u6709\u4e60\u60ef\u7684\u597d\u4e1c\u897f\uff0c\u4ece\u6211\u4eec\u4f7f\u7528\u7c7b\u4f3c\u8bed\u8a00\u7684\u7f16\u8f91\u5668\u96c6\u6210\u4f53\u9a8cOCaml\uff0c\uff08\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u5bfc\u822a\u5230\u4e00\u6bb5\u4ee3\u7801\u5e76\u67e5\u627e\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\u6216\u5bfc\u822a\u5230\u7ed9\u5b9a\u503c\u7684\u5b9a\u4e49\uff0c\u6240\u6709\u8fd9\u4e9b\uff0c\u6240\u6709\u8fd9\u4e9b\u7c7b\u4f3c IDE \u7684\u529f\u80fd\u90fd\u975e\u5e38\u6709\u6548\uff09\uff0c\u540c\u65f6\uff0c\u5728\u4ea4\u4e92\u6027\u548c\u53ef\u89c6\u5316\u4e8b\u7269\u7684\u80fd\u529b\u65b9\u9762\uff0c\u60a8\u62e5\u6709\u5728\u7b14\u8bb0\u672c\u4e2d\u4f7f\u7528 Python \u7684\u6240\u6709\u597d\u5904\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u5206\u6790\u5e93\u2026\u2026\u90a3\u65f6\uff0c\u60a8\u8fd8\u6709\u7406\u7531\u60f3\u8981\u4f7f\u7528 Python \u5417\uff1f\u8bed\u8a00\u672c\u8eab\u662f\u5426\u6709\u4ec0\u4e48\u4e1c\u897f\u4f7f\u5b83\u6210\u4e3a\u67d0\u4e9b\u6b64\u7c7b\u63a2\u7d22\u6027\u7814\u7a76\u5de5\u4f5c\u7684\u66f4\u597d\u5de5\u5177\uff1f\u662f\u7684\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u8da3\u7684\u95ee\u9898\u3002\u5f53\u7136\uff0c\u8981\u660e\u786e\u56de\u7b54\u6709\u70b9\u56f0\u96be\uff0c\u56e0\u4e3a\u4f60\u4e0d\u77e5\u9053\u5982\u679c\u4f60\u5728 OCaml \u4e0a\u6dfb\u52a0\u6240\u6709\u53ef\u80fd\u7684\u4e1c\u897f\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u8fd8\u662f\u89c9\u5f97 Python \u7684\u52a8\u6001\u65b9\u9762\u6709\u4e00\u4e9b\u4f60\u5728 OCaml \u65b9\u9762\u6ca1\u6709\u7684\u4f18\u52bf\u3002\u4f60\u4f1a\u5728 Python \u4e2d\u505a\u7684\u4e00\u4e2a\u5178\u578b\u7684\u4e8b\u60c5\u662f\u4f60\u7f16\u5199\u4f60\u7684\u5c0f\u7b97\u6cd5\uff0c\u5b83\u5b9e\u9645\u4e0a\u9002\u7528\u4e8e\u6574\u6570\uff0c\u4f60\u5bf9\u5b83\u5f88\u6ee1\u610f\uff0c\u4f46\u540e\u6765\u53d1\u73b0\uff0c\u4f60\u5b9e\u9645\u4e0a\u60f3\u8981\u4f7f\u7528\u6d6e\u70b9\u6570\u3002\u56e0\u6b64\uff0c\u5728 OCaml \u4e2d\uff0c\u4e3a\u4e86\u4f7f\u7c7b\u578b\u7cfb\u7edf\u6ee1\u610f\uff0c\u60a8\u5fc5\u987b\u4fee\u6539\u6240\u6709\u64cd\u4f5c\u8fd9\u4e00\u4e8b\u5b9e\u5bf9\u60a8\u6765\u8bf4\u6709\u70b9\u70e6\u4eba\u3002\u800c\u5728 Python \u4e2d\uff0c\u60a8\u4f1a\u671f\u671b\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u60a8\u4ecd\u7136\u4f1a\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6709\u4e00\u4e9b\u9519\u8bef\uff0c\u60a8\u53ef\u80fd\u65e0\u6cd5\u68c0\u6d4b\u5230\u5b83\u4eec\uff0c\u4f46\u662f\u5728\u5927\u591a\u6570\u5408\u7406\u7684\u8f93\u51fa\u4e0a\uff0c\u60a8\u6240\u505a\u7684\u68c0\u67e5\u5e94\u8be5\u8ba9\u60a8\u786e\u4fe1\u5b83\u8fd0\u884c\u5f97\u76f8\u5f53\u597d\u3002\u6240\u6709\u8fd9\u4e9b\u52a8\u6001\u65b9\u9762\u90fd\u76f8\u5f53\u4e0d\u9519\u3002\u5b83\u8ba9\u60a8\u53ef\u4ee5\u5728\u4efb\u4f55\u6570\u636e\u4e0a\u5c1d\u8bd5\u51e0\u4e4e\u4efb\u4f55\u7c7b\u578b\u7684\u7b97\u6cd5\uff0c\u5e76\u4f9d\u9760\u9e2d\u5b50\u7c7b\u578b\uff0c\u53ea\u8981\u60a8\u7684\u5bf9\u8c61\u5b9e\u73b0\u4e86\u6b63\u786e\u7684\u65b9\u6cd5\uff0c\u4e8b\u60c5\u5c31\u4f1a\u89e3\u51b3\uff0c\u800c\u60a8\u5b9e\u9645\u4e0a\u5e76\u4e0d\u77e5\u9053\u5e55\u540e\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6211\u60f3\u7528\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\u7684\u8bed\u8a00\u5de5\u4f5c\u7684\u4e00\u5927\u597d\u5904\u662f\u7c7b\u578b\u63d0\u4f9b\u4e86\u5f88\u591a\u4fdd\u8bc1\uff0c\u4fdd\u8bc1\u4f60\u4e0d\u80fd\u4ece\u7a0b\u5e8f\u7684\u4efb\u4f55\u4e00\u6b21\u8fd0\u884c\u4e2d\u83b7\u5f97\uff0c\u4f60\u4e0d\u80fd\u83b7\u5f97\u4efb\u4f55\u6570\u91cf\u7684\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u7c7b\u578b\u7cfb\u7edf\u7684\u4fdd\u8bc1\u672c\u8d28\u4e0a\u662f\u901a\u7528\u7684\u3002\u5b83\u4eec\u9002\u7528\u4e8e\u60a8\u7684\u7a0b\u5e8f\u7684\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u6267\u884c\u3002\u6240\u4ee5\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u4e1c\u897f\uff0c\u4f46\u5b83\u662f\u6709\u4ee3\u4ef7\u7684\u3002\u83b7\u5f97\u8fd9\u4e9b\u4fdd\u8bc1\u9700\u8981\u60a8\u5c06\u7a0b\u5e8f\u6709\u6548\u5730\u9002\u5e94\u7c7b\u578b\u7cfb\u7edf\u6240\u9700\u7684\u7ed3\u6784\u3002\u7c7b\u578b\u7cfb\u7edf\u64c5\u957f\u6355\u83b7\u67d0\u4e9b\u7c7b\u578b\u7684\u89c4\u5219\uff0c\u800c\u4e0d\u64c5\u957f\u6355\u83b7\u5176\u4ed6\u7c7b\u578b\u7684\u89c4\u5219\u3002\u56e0\u6b64\uff0c\u672c\u8d28\u4e0a\u6709\u4e00\u79cd\u534f\u5546\u6b65\u9aa4\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u627e\u51fa\u5982\u4f55\u4e0e\u7c7b\u578b\u7cfb\u7edf\u5b8c\u7f8e\u914d\u5408\u3002\u5728\u50cf OCaml \u8fd9\u6837\u7684\u8bed\u8a00\u4e2d\uff0c\u8fd9\u5b9e\u9645\u4e0a\u975e\u5e38\u6709\u6548\u3002\u7c7b\u578b\u7cfb\u7edf\u975e\u5e38\u8f7b\u91cf\u7ea7\uff0c\u4e0d\u9700\u8981\u5f88\u591a\u7c7b\u578b\u6ce8\u91ca\uff0c\u800c\u4e14\u5f88\u7075\u6d3b\u3002\u56e0\u6b64\uff0c\u60a8\u4e0d\u5fc5\u5c06\u7a0b\u5e8f\u5f2f\u66f2\u5f97\u592a\u5389\u5bb3\u4ee5\u4f7f\u5176\u9002\u5408\u5e76\u83b7\u5f97\u7c7b\u578b\u7684\u597d\u5904\uff0c\u4f46\u662f\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u7684\u597d\u5904\u662f\u60a8\u53ef\u4ee5\u5b8c\u5168\u8df3\u8fc7\u8be5\u534f\u5546\u6b65\u9aa4\u3002\u5982\u679c\u60a8\u7684\u7a0b\u5e8f\u5728\u60a8\u78b0\u5de7\u8fd0\u884c\u7684\u6570\u636e\u7684\u7279\u5b9a\u4e0a\u4e0b\u6587\u4e2d\u5de5\u4f5c\uff0c\u90a3\u4e48\u60a8\u4e0d\u5fc5\u8003\u8651\u5b83\u5728\u66f4\u4e00\u822c\u7684\u4e0a\u4e0b\u6587\u4e2d\u5982\u4f55\u5de5\u4f5c\uff0c\u5e76\u4e14\u5f53\u60a8\u8fdb\u884c\u63a2\u7d22\u6027\u7814\u7a76\u65f6\uff0c\u7f16\u5199\u4e00\u70b9\u70b9\u60a8\u4ece\u4e2d\u83b7\u53d6\u4fe1\u606f\u7136\u540e\u53ef\u80fd\u518d\u4e5f\u4e0d\u4f1a\u8fd0\u884c\u7684\u4ee3\u7801\u3002\u6211\u60f3\u6743\u8861\u662f\u975e\u5e38\u4e0d\u540c\u7684\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u80fd\u591f\u5728\u6ca1\u6709\u7c7b\u578b\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u64cd\u4f5c\u5177\u6709\u5f88\u5927\u7684\u5438\u5f15\u529b\u3002\u662f\u7684\u3002\u56e0\u6b64\uff0cOCaml \u4e2d\u7684\u7c7b\u578b\u7cfb\u7edf\u786e\u5b9e\u53ef\u4ee5\u8bc1\u660e\u60a8\u7684\u4ee3\u7801\u662f\u6b63\u786e\u7684\uff0c\u5e76\u4e14\u8be5\u4ee3\u7801\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u8f93\u5165\u90fd\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u5728 Python \u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u60a8\u6ca1\u6709\u5f97\u5230\u4efb\u4f55\u4ee3\u7801\u8bc1\u660e\u4f1a\u6b63\u786e\u8fd0\u884c\u3002\u60a8\u53ea\u4f1a\u5728\u8fd0\u884c\u65f6\u6536\u5230\u5f02\u5e38\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u60a8\u5173\u5fc3\u7684\u8f93\u5165\u7247\u6bb5\u53ef\u80fd\u975e\u5e38\u5c0f\u3002\u56e0\u6b64\uff0c\u60a8\u5728 OCaml \u65b9\u9762\u5bfb\u627e\u6781\u7aef\u60c5\u51b5\u5e76\u4fee\u590d\u5b83\u4eec\u7684\u65f6\u95f4\u5b9e\u9645\u4e0a\u5728 Python \u65b9\u9762\u662f\u4e0d\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u60a8\u81ea\u5df1\u77e5\u9053\u60a8\u4e0d\u4f1a\u6709\u90a3\u79cd\u8f93\u5165\u3002\u7136\u800c\uff0c\u5f53\u7136\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u6253\u5b57\u673a\u548c\u4e00\u4e2a\u7f16\u8bd1\u5668\u6765\u786e\u4fdd\u7c7b\u578b\u5b89\u5168\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u80fd\u5047\u8bbe\u4efb\u4f55\u4e8b\u60c5\u3002\u6240\u4ee5\uff0c\u4f60\u5fc5\u987b\u6559\u5b83\uff0c\u201c\u54e6\uff0c\u5b9e\u9645\u4e0a\u6211\u5e76\u4e0d\u771f\u6b63\u5173\u5fc3\u8fd9\u4e2a\u53d8\u4f53\uff0c\u4e5f\u4e0d\u5173\u5fc3\u8fd9\u4e2a\u53d8\u4f53\u201d\u7b49\u7b49\u3002\u6211\u89c9\u5f97\u6211\u4eec\u5e94\u8be5\u4e0d\u90a3\u4e48\u5b8f\u4f1f\uff0c\u56e0\u4e3a\u7c7b\u578b\u7cfb\u7edf\u5e76\u4e0d\u662f\u4e3a\u60a8\u63d0\u4f9b\u7a0b\u5e8f\u6574\u4f53\u6b63\u786e\u6027\u7684\u8bc1\u660e\uff0c\u800c\u662f\u5b83\u786e\u5b9e\u6355\u83b7\u4e86\u67d0\u4e9b\u6b63\u786e\u6027\u5143\u7d20\uff0c\u5e76\u4e14\u5f88\u597d\u5730\u786e\u5b9a\u4e86\u5b83\u4eec\u3002\u5e76\u4e14\u5728\u67d0\u4e9b\u7c7b\u578b\u7684\u7a0b\u5e8f\u4e2d\uff0c\u8fd9\u4f1a\u8ba9\u60a8\u8d70\u5f97\u975e\u5e38\u8fdc\uff0c\u5728\u7c7b\u578b\u7cfb\u7edf\u7684\u5ba1\u67e5\u4e0b\uff0c\u5927\u91cf\u9519\u8bef\u4f1a\u5b8c\u5168\u6d88\u5931\u3002\u8fd8\u6709\u4e00\u70b9\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u50cf OCaml \u8fd9\u6837\u7684\u7c7b\u578b\u7cfb\u7edf\u5b9e\u9645\u4e0a\u5728\u6355\u83b7\u6570\u5b57\u4ee3\u7801\u4e2d\u7684\u9519\u8bef\u65b9\u9762\u505a\u5f97\u76f8\u5bf9\u8f83\u5c11\u3002\u6570\u503c\u7a0b\u5e8f\u7684\u96be\u70b9\u4e4b\u4e00\u662f\u5f53\u4f60\u5f04\u9519\u7b97\u6cd5\u65f6\uff0c\u4e8b\u60c5\u770b\u8d77\u6765\u4f1a\u66f4\u7cdf\uff0c\u4ee5\u66f4\u6a21\u7cca\u7684\u65b9\u5f0f\u3002\u5982\u679c\u4f60\u6ca1\u6709\u6b63\u786e\u5730\u8fdb\u884c\u7ebf\u6027\u4ee3\u6570\u5206\u89e3\uff0c\u90a3\u4e48\u5e76\u4e0d\u662f\u4f60\u5f97\u5230\u4e86\u4e00\u4e2a\u5b8c\u5168\u75af\u72c2\u7684\u7b54\u6848\uff0c\u4f60\u5f97\u5230\u7684\u7b54\u6848\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u6216\u8005\u6ca1\u6709\u90a3\u4e48\u5feb\u6536\u655b\uff0c\u6216\u8005\u6839\u672c\u6ca1\u6709\u6536\u655b\u3002\u5e76\u5206\u79bb\u51fa\u8fd9\u4e9b\u9519\u8bef\uff0c\u627e\u5230\u8fd9\u4e9b\u9519\u8bef\u5b9e\u9645\u4e0a\u975e\u5e38\u56f0\u96be\uff0c\u6211\u6000\u7591\u5982\u679c OCaml \u6709\u4e00\u4e2a\u975e\u5e38\u64c5\u957f\u53d1\u73b0\u90a3\u79cd\u9519\u8bef\u7684\u7c7b\u578b\u7cfb\u7edf\uff0c\u4eba\u4eec\u4f1a\u975e\u5e38\u6e34\u671b\u5728\u6570\u636e\u5206\u6790\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u5b83\uff0c\u4f46\u5728\u5b9e\u8df5\u4e2d\uff0c\u6570\u503c\u5206\u6790\u4e2d\u6700\u96be\u7684\u9519\u8bef\u901a\u5e38\u53ea\u662f\u5728\u6ca1\u6709\u7c7b\u578b\u7cfb\u7edf\u5e2e\u52a9\u4f60\u8fd9\u4e48\u591a\u7684\u60c5\u51b5\u4e0b\u6e9c\u8d70\u3002\u5370\u5730\u2026\u2026", "note_en": "Welcome to Signals and Threads, in-depth conversations about every layer of the tech stack from Jane Street. I\u2019m Ron Minsky.   Today, we\u2019re going to have a conversation about the use of Python and OCaml at Jane Street with Laurent Mazare. Jane Street is pretty widely known for the fact that we use OCaml, which is a statically typed, functional programming language similar to languages like Scala and F# and Swift and Haskell, but the story\u2019s more complicated than that. We don\u2019t only use OCaml, we use some other languages, too, and one that we use that\u2019s pretty important is Python, and we mostly use Python for data analysis and machine learning tasks, but it also extends somewhat beyond those domains. So, the topic of the conversation this morning is about how Python fits in with OCaml and how it fits in to the broader infrastructure at Jane Street. One of the reasons I\u2019m excited to have this conversation with Laurent, it\u2019s both that he has done a lot of work inside of Jane Street, both working with Python and on making the Python tool, in itself, better, but also, he has broader experience working with different languages in different contexts, and so, has some perspective on this for more than just his time at Jane Street. So, Laurent, to start us off, can you tell us a little bit more about your experience outside of Jane Street and how that led you to working here?\n   Yeah. So, my first work experience outside of academia was at a small company called LexiFi, where we were using OCaml to model financial contracts. So, in that context, OCaml was used mostly as a domain specific language to represent complex financial payoffs. I spent a couple years working on the overall infrastructure that we were selling to banks and asset managers. After that, I started working in 2010, at Goldman Sachs in London, as an equity strategist, and there I was using the in-house programming language called Slang, which one can think of as a variant of Python. It\u2019s mostly a scripting language, it was fairly nice to actually quickly see the output of what you were doing, but of course, efficiency was a bit of a concern. I spent a couple years working at Goldman, and then in 2013, I joined Jane Street as a software developer. I worked mostly on trading systems at Jane Street, so back to using OCaml on mostly everything, and there I enjoyed a lot the functional programming aspects and strong type system, when it comes to designing production critical stuff. After four years and something at Jane Street, I actually left to go work for DeepMind, mostly because I was passionate about machine learning at that point, and I wanted to work at leading edge of the domain. At DeepMind, I used mostly Python to do machine learning and with of course, TensorFlow, and I also got to use Swift a bit as a replacement, potentially, for Python. I spent a year working there, and then I came back to work at Jane Street, where I focus more on researchy bits nowadays. So, I would say that I spend half of my time working in OCaml and half of my time working in Python, but these two halves are very different.\n   Another part of your background is you\u2019ve also done some interesting work on the open source side, can you say a little bit about that.\n   So, I try to be active in the open source community, and through that I\u2019ve had the opportunity to work on a couple of packages. The most notable one is probably  ocaml-torch, which provides OCaml bindings for the PyTorch framework. PyTorch is this amazing thing developed by Facebook, that lets you write some deep-learning algorithms in Python, and leverage your GPU and the power of auto-differentiation. Via these OCaml bindings, you can do that from OCaml, too \u2013 so, you add type safety to the mix. I also worked on  Rust bindings for it, so, it\u2019s kind of the same thing; in this context, you have bindings in Rust, so rather than writing Python code, you end up writing Rust. I also worked a bit on  Clippy, which is a Rust static analyzer, and there, you try to analyze Rust code and find legitimate errors. There are plenty of other OCaml packages that I looked at \u2013 bindings for TensorFlow, bindings for Apache Arrow, I tried writing a data frame library for OCaml\u2026 and a couple other things. All of them can be found  on GitHub.\n   So, this all reflects that you\u2019ve spent a bunch of time working in a bunch of different places using different languages and ecosystems. You mentioned along the way that here, about half of your time is spent working on Python and half it\u2019s spent working in OCaml, and those two halves are very different. Maybe you can say a little bit more, how are those two different?\n   Yeah, the first half of my time is spent using Python, and that\u2019s mostly for research purposes. In that context, I will use Python in a notebook. So, for people that don\u2019t know what a notebook is, it\u2019s a kind of web UI, where you have some cells where you input some lines of your programming language, most of the time Python, and you can evaluate each cell in order. The development mode is very interactive in this context. So, you look at the actual output, tweak your code a bit, then evaluate it again, then tweak your code again a bit because you notice that you\u2019ve made some mistakes, and start over again, and again. So, it\u2019s some kind of interactive development. What is fairly nice is that you have a very quick feedback loop between editing the code and seeing the actual outcome. And of course, it plugs very nicely with the very large Python ecosystem of plotting libraries. So, you can actually run your algorithm on some data, and then plug the output, check that it matches your intuition, if not, try to debug, tweak your code, and start over. So, that will be mostly what I use Python for, and on the other side, there is OCaml, and there, it\u2019s for more [general] development work and production critical development, I would say, where you tend to build systems that are fairly resilient. What I\u2019m often amazed by is that you write some OCaml job, you kind of spend a week on it, deploy it, and then you come back to it a few years later and maybe even you\u2019ve left and come back along the way, and you notice that your job is actually still there and still working, which is pretty amazing. Of course, on the Python side, it\u2019s a bit more rare that things would keep on working for a very long period of time.\n   Say more about why that is. What do you think it is about OCaml, that makes it easier for writing these kinds of more robust tasks, for catching bugs, all of that?\n   Yeah. So, I think there are two aspects actually to it. One, is about OCaml, and the other one is about the general engineering practice that we have around OCaml. So, it turns out that when you write OCaml code, you usually write proper tests for your things, you think a lot about all the error cases. Again, part of it, because the type system will enforce that, and each function will tell you, oh, actually, I might return a result, but I might also return an error, and you have to think about what is the error is and how you want to handle it. Your goal is, build something that is a bit resilient, so you also are in a state of mind, where you think a lot about corner cases, whereas in the Python world, it\u2019s more of about runtime exceptions. So, you don\u2019t spend much time thinking about what the function actually outputs, and most of the time you use a library for which you don\u2019t really know what the function outputs, it turns out that you kind of guess it, try it, most of the time it works, and you go on with that, you just check kind of interactively that it\u2019s what you would expect.\n   I\u2019m really struck by your description here. There\u2019s a mix of differences between the two languages, and some of them are fundamental things about the language. Some of them are things about the ecosystem around the language, and some of them are issues about the practices that Jane Street as an organization has around the different languages. So, maybe we could just dig into those somewhat separately. Let\u2019s first talk about the ecosystem. What is it about the Python ecosystem and the OCaml ecosystem that make them different?\n   Python, I think, nowadays, is kind of the de facto standard for everything that is about machine learning and data analysis. So, if you want to be able to plot your results, again, in a notebook, you have plenty of libraries that do that, plenty of tutorials online that will help you in finding the right way to do it, and if you run into any kind of issue, again, you can just Google things, you will get some results super easily. There is also a wide variety of machine learning libraries available, all the major modern deep-learning frameworks have Python frontends and are kind of released in a Python first manner, so the API that the developers will focus on is the Python one. I don\u2019t think that there originally was any very good reason for Python to be more successful than another language that\u2019s also a bit similar [like Ruby], in that domain, but it turns out that the more you have an ecosystem, the more it attracts people and it snowballs at some point. On the other side, when it comes to a OCaml, there are a bunch of libraries. I think that, in general, libraries tend to have a bit of a better quality but you have far fewer of them. One way to get around this, is that you can bind to other languages, so that\u2019s what we did for TensorFlow and PyTorch, but you can even bind to Python. So, we actually have some Matplotlib bindings when you want to plot something in OCaml, this will call Python which itself, will use this very well-known Matplotlib library to run those plots.\n   And I think it\u2019s really notable that the first thing you talked about when you talked about the ecosystem advantages of Python is you talked about visualization, and I think the visualization part is incredibly important, and I think fundamental to why notebooks are such a valuable way of working. The basic mode in doing research is exploratory, you\u2019re going off and trying something and looking at the results and trying something else, and looking at the results again, and having a quick workflow that lets you do that, and lets you embed the visualizations in your workflow in a straightforward way\u2026 I think that\u2019s one of the reasons why notebooks are such a compelling way to work, and it\u2019s very different from the traditional workflow in which software engineers work, which involves plain text and text editors, and just doesn\u2019t have the same visualization component.\n   Indeed, though, I would say that these two modes are a bit similar in a way, that on both sides, you want to do fast iteration. In one case, you will have this fast iteration in the notebook. So, you will iterate quickly over the data, get some plot out, and get to actually visualize the output of your algorithm, check a bit some corner cases and iterate again. And in the OCaml world, you tend to do the same thing about fast iteration, but it\u2019s about type safety. So, you save your file, and your build system will tell you, oh, this type doesn\u2019t match, this type doesn\u2019t match, this type doesn\u2019t match. In the end, you would expect your OCaml code to pretty much work once you\u2019ve managed to get things to compile. Whereas, on the Python side, you don\u2019t have this type aspect. So, you\u2019re kind of relying more on experiments to tell you if things are working properly.\n   I wonder if there\u2019s more of this experimental back and forth on the OCaml world than maybe you\u2019re giving it credit for. A place where I\u2019ve encountered this a lot is in the work that we\u2019ve done into building what are called expect tests. So, expect tests, which is a thing that\u2019s not all that much known outside of the Jane Street context, although actually it was originally stolen from an external idea, the basic idea actually came from the testing tools that the Mercurial version control system uses \u2013 but anyway, the basic idea of expect test is you have this kind of unified way of writing code and tests, which in some ways feels a lot like a notebook. You write some piece of code, and then you write a special annotation, which means capture the output of the code up until here and insert it into the text of the code, and then you write some more code and have another place where you capture output. And then when the test runs, it regenerates all of the output and if there any changes, it says, \u201coh, the output is changed, do you want to accept the new version?\u201d and then you can hit a key in your editor and load those new changes in, and we use that a lot for all sorts of different kinds of testing, but also for various kinds of exploratory programming. So, for example, a thing that I\u2019ve done using this is to do web scraping: there\u2019s some bit of web data you want to grab and analyze and transform and pull some information out of. And that\u2019s very exploratory. You\u2019re often not trying to get it right in a kind of universal way for all time, you\u2019re trying to process some particular kind of documents, and so, you write some transformations, and you apply them and you look at the output and see if it makes sense, and the build system actually gives you a relatively good and fast loop. Where you go and you make a change and the build completes and you get to see the new output. One of the big differences, there\u2019s no graphical component, everything is plain text. One of the big advantages you get out of the notebook style workflow is the ability to be in a webpage and actually display graphical stuff.\n   That\u2019s right. I kind of agree that expect tests give you some kind of interactive experiments. There, I think you focus more on corner cases, and hard bits for you our algorithm, whereas, most of the time on the notebook experiment in Python, you\u2019re not writing some code that is there for a very, very long time. So, you actually want it to work on your data rather than on any potential data. So, even if expect tests are a bit interactive, I think that it\u2019s still a bit of a different experiment.\n   So, I\u2019m curious, to what degree you think this is an issue of the programming language or an issue of the tools and ecosystem around the language. If, for a minute, we imagine a world where the tooling for using OCaml in a notebook was all really well worked out, you had all of the nice things you\u2019re used to, from the editor integration experience we have with a language like OCaml, (so like, you can navigate to a piece of code and look up the type of a given expression or navigate to the definition of a given value, all of those things, all of those IDE-like features worked really well), and at the same time, you had all the benefits of using Python in a notebook in terms of the interactivity, and the ability to visualize things, and you had all of the machine learning and data analysis libraries at your disposal\u2026 At that point, is there still a reason that you\u2019d want to use Python? Is there something about the language itself that makes it a better tool for some of this kind of exploratory research work?\n   Yeah. It\u2019s a very interesting question. It\u2019s, of course, a bit harder to answer definitively, because you don\u2019t know what it will look like if you add everything possible on the OCaml aside. Still, I feel a bit that the dynamic aspects of Python have some advantages that you will not have, on the OCaml side. A typical thing that you will do in Python is you write your small algorithm, it actually works for integers, and you\u2019re happy with it, but it turns out that later, you actually want to use floats. So, the fact that in OCaml, to make the type system happy, you will have to modify all the operations will be kind of annoying to you. Whereas, in Python, you would expect things to work most of the time. You will still have this problem that if there are some errors, you might not detect them, but on most reasonable outputs, the checks that you\u2019ve done should bring you some confidence that it\u2019s working reasonably well. And all these dynamic aspects are fairly nice. It lets you try pretty much any kind of algorithm on any data and relying on duck typing, as long as your object implements a proper method, things will work out without you actually knowing what\u2019s taking place behind the hood.\n   I guess one of the big upsides of working in a language with a static type system is that types provide a lot of guarantees, guarantees that you can\u2019t get from any single run of the program, you can\u2019t get by any amount of testing, because the guarantees of type systems are essentially universal. They apply to every possible execution of your program. So, that\u2019s an incredibly powerful thing, but it comes at a cost. Getting those guarantees requires you to effectively fit your program in to the structure required by the type system. Type systems are good at capturing some kinds of rules and not good at capturing others. So, there\u2019s essentially a kind of negotiation step where you figure out how to play nicely with the type system. And in a language like OCaml, that actually works out pretty nicely. The type system is quite lightweight, it doesn\u2019t require lots of type annotations, and it\u2019s flexible. So, you don\u2019t have to bend your program too far out of shape to make it fit in and to get the benefits of types, but the nice thing about dynamically typed languages is that you get to skip that negotiation step entirely. If your program works in the particular context on the data that you happen to be running on, then you don\u2019t have to think about how it works in a more general context, and when you\u2019re doing exploratory research, writing little bits of code that you get information from and then maybe never run again. I guess the tradeoffs are really different. At that point, being able to operate without types has a lot of appeal.\n   Yeah. So, the type system in OCaml would indeed give you a proof that your code is correct, and that the code is correct for all possible inputs, but in Python, it\u2019s kind of the default that you don\u2019t get any proof that your code would run correctly. You will only get exceptions at runtime. It turns out that the fragment of inputs that you\u2019re caring about might be very small. So, the times that you would spend looking for corner cases on the OCaml side and fixing them, is actually not necessary on the Python side, because yourself, you know that you won\u2019t have that kind of inputs. Whereas, of course, if you have a typer and a compiler to ensure type safety, the compiler cannot assume anything about that. So, you will have to teach it, \u201coh actually I don\u2019t really care about this variant, nor about this variant\u201d and so on.\n   I feel like we should be a little less grand in the sense that it\u2019s not that the type system gives you a proof of the overall correctness of the program, but it does capture certain elements of correctness, and nails them down pretty well. And there\u2019s certain kinds of programs where that gets you alarmingly far, where large classes of bugs just totally go away under the scrutiny of the type system. A thing that\u2019s also maybe worth mentioning is that type systems like OCaml\u2019s actually do relatively little to capture bugs in numerical code. One of the hard things about numerical programs is when you get the algorithm wrong, things look a little worse, in fuzzier ways. If you didn\u2019t do your linear algebra decomposition  just right, then it\u2019s not that you get a totally crazy answer, you get an answer that\u2019s less optimal, or doesn\u2019t converge as fast or it doesn\u2019t converge at all. And separating out those bugs, finding those bugs is actually quite hard, and I suspect if OCaml had a type system that was really good at finding that kind of bug, people would be really eager to use it in data analysis contexts, but in practice, the hardest bugs in numerical analysis often just kind of slip by without the type system helping you all that much at all.\n   Inde\n......", "posttime": "2021-08-08 06:35:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "2020,python,ocaml", "title": "Python\u3001OCaml \u548c\u673a\u5668\u5b66\u4e60\uff082020\uff09", "title_en": "Python, OCaml, and Machine Learning (2020)", "transed": 1, "url": "https://signalsandthreads.com/python-ocaml-and-machine-learning/", "via": "", "real_tags": ["2020", "python", "ocaml"]}, {"category": "", "categoryclass": "", "imagename": "fe584575272441299a5351c7254a88f2.png", "infoid": 1072027, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5f88\u9ad8\u5174\u5730\u5ba3\u5e03 APK Editor Studio v1.5.0\uff01\u8ddd\u79bb\u4e0a\u4e00\u4e2a\u7248\u672c\u5df2\u7ecf\u8fc7\u53bb\u5f88\u957f\u65f6\u95f4\u4e86\uff0c\u7ec8\u4e8e\uff0c\u5305\u542b\u8bb8\u591a\u65b0\u5185\u5bb9\u7684\u91cd\u5927\u66f4\u65b0\u53d1\u5e03\u4e86\u3002\u6700\u4ee4\u4eba\u671f\u5f85\u7684\u529f\u80fd\u4e4b\u4e00\uff0c\u514b\u9686 APK \u7684\u80fd\u529b\uff0c\u7ec8\u4e8e\u6765\u4e86\uff01\u5b83\u5141\u8bb8\u60a8\u901a\u8fc7\u66f4\u6539\u5305\u540d\u79f0\u5728\u60a8\u7684\u8bbe\u5907\u4e0a\u5b89\u88c5 Android \u5e94\u7528\u7a0b\u5e8f\u7684\u591a\u4e2a\u526f\u672c\u3002\u76ee\u524d\uff0c\u6b64\u529f\u80fd\u5904\u4e8e\u5b9e\u9a8c\u72b6\u6001\uff0c\u8fd9\u610f\u5473\u7740\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u514b\u9686\u6216\u53ef\u80fd\u51fa\u73b0\u610f\u5916\u884c\u4e3a\u3002\u5f00\u53d1\u8fd9\u4e2a\u529f\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\uff0c\u56e0\u4e3a\u6ca1\u6709\u4e00\u81f4\u7684\u7b97\u6cd5\u6765\u91cd\u547d\u540d\u53cd\u6c47\u7f16\u7684\u5305\u3002\u4f46\u662f\uff0c\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u826f\u597d\u7684\u5f00\u7aef\uff0c\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u793e\u533a\u505a\u51fa\u8d21\u732e\u3002\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u6d4f\u89c8\u7528\u4e8e\u7b7e\u7f72 APK \u7684\u8bc1\u4e66\u5217\u8868\u3002\u76ee\u524d\uff0c\u7b7e\u540d\u67e5\u770b\u5668\u4f1a\u9a8c\u8bc1\u4ee5\u4e0b\u7b7e\u540d\u65b9\u6848\uff1a \u4f7f\u7528\u7279\u5b9a\u53c2\u6570\u8fd0\u884c APK Editor Studio \u4ee5\u7acb\u5373\u5f00\u59cb\u4f18\u5316\u3001\u7b7e\u540d\u548c/\u6216\u5b89\u88c5\u60a8\u7684 APK\u3002\u4ee5\u524d\uff0c\u5982\u679c\u60a8\u53ea\u662f\u60f3\u5bf9 APK \u8fdb\u884c\u7b7e\u540d\u6216\u4f18\u5316\uff0c\u5219\u5fc5\u987b\u7b49\u5f85\u89e3\u5305\u8fc7\u7a0b\u5b8c\u5168\u5b8c\u6210\u3002\u73b0\u5728\u6709\u7c7b\u4f3c\u4e8e\u73b0\u6709\u201c\u5b89\u88c5\u5916\u90e8 APK\u201d\u64cd\u4f5c\u7684\u4e13\u7528\u9009\u9879\u2014\u2014\u201c\u7b7e\u7f72\u5916\u90e8 APK\u201d\u548c\u201c\u4f18\u5316\u5916\u90e8 APK\u201d\u3002 APK Editor Studio \u73b0\u5728\u5141\u8bb8\u60a8\u6253\u5f00\u4e3b\u7a97\u53e3\u7684\u591a\u4e2a\u5b9e\u4f8b\u3002\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u91cd\u7528\u4e86\u9879\u76ee\u6c60\u548c\u5176\u4ed6\u5171\u4eab\u7ec4\u4ef6\uff0c\u56e0\u6b64\u5c06\u989d\u5916\u7684\u7cfb\u7edf\u8d1f\u8f7d\u964d\u81f3\u6700\u4f4e\u3002\u8981\u6253\u5f00\u4e00\u4e2a\u65b0\u7a97\u53e3\uff0c\u8bf7\u6309 Ctrl + N\uff08\u5728 macOS \u4e0a\u4e3a \u2318 + N\uff09\u3002\u5728 Windows \u548c Linux \u5e73\u53f0\u4e0a\uff0c\u60a8\u8fd8\u53ef\u4ee5\u6253\u5f00\u591a\u7a97\u53e3\u6a21\u5f0f\uff0c\u4ee5\u9632\u60a8\u5e0c\u671b\u5728\u5355\u72ec\u7684\u7a97\u53e3\u4e2d\u9ed8\u8ba4\u6253\u5f00\u540e\u7eed APK \u6587\u4ef6\u3002\n\u5728 Linux \u73af\u5883\u4e2d\uff0c\u5e94\u7528\u6df1\u8272\u4e3b\u9898\u4f1a\u5bfc\u81f4\u5916\u89c2\u4e0d\u4e00\u81f4\uff0c\u56e0\u4e3a\u67d0\u4e9b\u5e94\u7528\u5185\u989c\u8272\u57fa\u4e8e\u6d45\u8272 GUI\u3002\u6240\u4ee5\u73b0\u5728\uff0cAPK Editor Studio \u4e0d\u518d\u4f7f\u7528\u56fa\u5b9a\u989c\u8272\u503c\uff0c\u800c\u662f\u68c0\u67e5\u7cfb\u7edf\u4e3b\u9898\u5e76\u52a8\u6001\u8c03\u6574\u81ea\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u989c\u8272\u3002\u4fee\u8ba2\u5143\u7d20\uff1a\u8bf7\u6ce8\u610f\uff0c\u67d0\u4e9b\u5e73\u53f0\u548c\u73af\u5883\u4e0d\uff08\u5b8c\u5168\uff09\u652f\u6301\u6697\u6a21\u5f0f\u3002\u4f8b\u5982\uff0cWindows \u4e0d\u4f1a\u4e3a Win32 \u5e94\u7528\u7a0b\u5e8f\u5e94\u7528\u76f8\u5e94\u7684\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u800c GNOME \u73af\u5883\u53ef\u80fd\u9700\u8981\u989d\u5916\u914d\u7f6e\u624d\u80fd\u4f7f Qt \u5e94\u7528\u7a0b\u5e8f\u9075\u5faa GTK \u4e3b\u9898\u3002\u4f46\u662f\uff0c\u6211\u4eec\u8ba1\u5212\u5728\u672a\u6765\u7684\u7248\u672c\u4e2d\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7684\u5e94\u7528\u5185\u6df1\u8272\u4e3b\u9898\u3002\u73b0\u5728\u60a8\u53ef\u4ee5\u6307\u5b9a\u7b2c\u4e09\u65b9\u5de5\u5177\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u8fd9\u5bf9\u4e8e APK Editor Studio \u53ef\u79fb\u690d\u7248\u672c\u5c24\u5176\u91cd\u8981\uff0c\u56e0\u4e3a\u4f9d\u8d56\u7edd\u5bf9\u8def\u5f84\u4f1a\u964d\u4f4e\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\u3002\u6b64\u7248\u672c\u4e3a\u60a8\u5e26\u6765\u4e86\u8bb8\u591a\u65b0\u7684\u7ffb\u8bd1\u3002\u5176\u4e2d\u4e00\u4e9b\u8bed\u8a00\u662f\u4ece\u53f3\u5230\u5de6\u7684\uff0c\u56e0\u6b64\u4e3a\u4e86\u66f4\u597d\u7684\u7528\u6237\u4f53\u9a8c\uff0cAPK Editor Studio \u4f1a\u6839\u636e\u811a\u672c\u65b9\u5411\u6b63\u786e\u653e\u7f6e UI \u5143\u7d20\u3002\u6211\u4eec\u51fa\u8272\u7684\u793e\u533a\u4e3a APK Editor Studio \u51c6\u5907\u4e86 12 \u4e2a\u65b0\u7ffb\u8bd1\u3002\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u67e5\u770b\u8d21\u732e\u8005\u5217\u8868\u3002\u8c22\u8c22\uff01\u8fd9\u4e2a\u5bf9 Windows \u7528\u6237\u6709\u7528\u7684\u65b0\u529f\u80fd\u5c06 APK Editor Studio \u64cd\u4f5c\u6dfb\u52a0\u5230 APK \u6587\u4ef6\u7684\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u3002\u5b83\u5141\u8bb8\u60a8\u76f4\u63a5\u4ece\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u7b7e\u540d\u3001\u4f18\u5316\u6216\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u3002\u6b64\u7248\u672c\u662f\u5728\u8fd9\u4e9b\u4eba\u7684\u6177\u6168\u652f\u6301\u4e0b\u53d1\u5e03\u7684\u3002\u611f\u8c22\u5927\u5bb6\u7684\u8d21\u732e\uff01", "note_en": "I am happy to announce the APK Editor Studio v1.5.0! It&#39;s been a long time since the previous release, and finally, the big update containing lots of new stuff is out.\n    One of the most anticipated features, the ability to clone APK, is finally here! It allows you to install multiple copies of an Android application on your device by changing the package name.\n  Currently, this function is in an experimental state, which means that certain applications cannot be cloned or might have unexpected behavior. Developing this feature took a very long time since there is no consistent algorithm for renaming disassembled packages. However, a good start has been made, and we hope that our community will make its contribution.\n  Now you can easily browse through the list of certificates used to sign an APK. Currently the signature viewer verifies the following signature schemes:\n  Run APK Editor Studio with certain arguments to immediately start optimizing, signing, and/or installing your APK.\n  Previously, if you just wanted to sign or optimize your APK, you had to wait for the unpacking process to completely finish. Now there are dedicated options similar to the existing &#34;Install External APK&#34; action \u2013 &#34;Sign External APK&#34; and &#34;Optimize External APK&#34;.\n  APK Editor Studio now allows you to open multiple instances of the main window. Each instance reuses the project pool and other shared components, so the extra system load is reduced to a minimum. To open a new window, press  Ctrl + N ( \u2318 + N on macOS). On Windows and Linux platforms, you can also turn on the multi-window mode in case you want to open subsequent APK files in separate windows by default.\n  On a Linux environment, applying a dark theme resulted in an inconsistent appearance since some of the in-app colors were based on the light GUI. So now, instead of using fixed color values, APK Editor Studio checks the system theme and adjusts the custom application colors dynamically. Revised elements:\n      Note that some platforms and environments don&#39;t (fully) support the dark mode. For example, Windows doesn&#39;t apply the corresponding system setting for Win32 applications, and a GNOME environment might need additional configuration to make Qt apps follow the GTK theme. However, there are plans on adding the custom in-app dark theme in future releases.\n  Now you can specify relative paths to the third-party tools. This is especially important for the APK Editor Studio portable builds, where relying on absolute paths reduces the portability of the application.\n  This release brings you lots of new  translations. Some of these languages are right-to-left, so for a better user experience, APK Editor Studio will properly place the UI elements according to the script direction.\n  Our amazing community has prepared  12 new translations for APK Editor Studio. You can see the list of the contributors  here. Thank you!\n  This useful new feature for Windows users adds the APK Editor Studio actions to the context menu for the APK files. It allows you to sign, optimize, or install applications directly from your Explorer.\n  This release became available with generous support of  these people. Thank you all for your contribution!", "posttime": "2021-08-08 06:35:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8f91\u5668,editor,apk", "title": "APK \u7f16\u8f91\u5668\u5de5\u4f5c\u5ba4 v1.5.0", "title_en": "APK Editor Studio v1.5.0", "transed": 1, "url": "https://qwertycube.com/apk-editor-studio/blog/apk-editor-studio-v1.5.0-released/", "via": "", "real_tags": ["\u7f16\u8f91\u5668", "editor", "apk"]}, {"category": "", "categoryclass": "", "imagename": "14ecc0be1918a429b3d31dfa1666cc60.jpg", "infoid": 1072026, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5a01\u65af\u5eb7\u661f\u5dde\u9ea6\u8fea\u900a\u5e02 (WMTV) - \u5468\u4e94\u6e05\u6668\uff0c\u4e00\u53f0\u5927\u578b\u8d77\u91cd\u673a\u548c\u5730\u52e4\u4eba\u5458\u62b5\u8fbe\u5a01\u65af\u5eb7\u661f\u5927\u5b66\uff0c\u4ee5\u642c\u8fd0\u4f4d\u4e8e\u5929\u6587\u53f0\u5927\u9053\u89c2\u666f\u53f0\u9644\u8fd1\u7684\u4e00\u5757 70 \u5428\u91cd\u7684\u5ca9\u77f3\u3002\u53bb\u5e74 6 \u6708\uff0c\u5a01\u65af\u5eb7\u661f\u5dde\u9ed1\u4eba\u5b66\u751f\u4f1a\u548c Wunk Sheek \u53d1\u8d77\u4e86\u4e00\u9879\u5021\u8bae\uff0c\u5c06\u8fd9\u5757\u5ca9\u77f3\u539f\u540d\u4e3a Chamberlin Rock \u642c\u79bb\u6821\u56ed\uff0c\u56e0\u4e3a\u8fd9\u5757\u5ca9\u77f3\u7684\u6635\u79f0\u662f\u79cd\u65cf\u8bfd\u8c24\u3002\u5b83\u5728 1920 \u5e74\u4ee3\u5a01\u65af\u5eb7\u661f\u5dde\u6742\u5fd7\u7684\u4e00\u7bc7\u62a5\u9053\u4e2d\u88ab\u79f0\u4e3a\u8d2c\u4e49\u8bcd\uff0c\u5f53\u65f6\u4e09K\u515a\u5728\u6821\u56ed\u91cc\u5f88\u6d3b\u8dc3\u3002\u5728\u5468\u56db\u53d1\u5e03\u7684\u4e00\u4efd\u58f0\u660e\u4e2d\uff0c\u8be5\u5927\u5b66\u89e3\u91ca\u8bf4\uff0c\u201c\u5c06\u8fd9\u5757\u5ca9\u77f3\u4f5c\u4e3a\u7eaa\u5ff5\u7891\u79fb\u5230\u663e\u773c\u4f4d\u7f6e\u53ef\u4ee5\u9632\u6b62\u5bf9\u6211\u4eec\u793e\u533a\u7684\u8fdb\u4e00\u6b65\u4f24\u5bb3\uff0c\u540c\u65f6\u4fdd\u7559\u8fd9\u5757\u5ca9\u77f3\u5bf9\u5f53\u524d\u548c\u672a\u6765\u5b66\u8005\u7684\u6559\u80b2\u548c\u7814\u7a76\u4ef7\u503c\u3002\u201d\u636e\u4fe1\u62e5\u6709\u8d85\u8fc7 20 \u4ebf\u5e74\u5386\u53f2\u7684\u5f20\u4f2f\u4f26\u5ca9\u88ab\u8be5\u5927\u5b66\u63cf\u8ff0\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u524d\u5bd2\u6b66\u7eaa\u51b0\u5ddd\u3002\u5b83\u4ee5 1887 \u5e74\u81f3 1892 \u5e74\u62c5\u4efb\u5927\u5b66\u6821\u957f\u7684\u5730\u8d28\u5b66\u5bb6 Thomas Chamberlin \u7684\u540d\u5b57\u547d\u540d\u3002 11 \u6708\uff0c\u8be5\u5927\u5b66\u7684\u6821\u56ed\u89c4\u5212\u59d4\u5458\u4f1a\u5efa\u8bae\u5c06\u5ca9\u77f3\u79fb\u81f3\u6821\u957f Rebecca Blank\uff0c\u540e\u8005\u968f\u540e\u7b7e\u7f72\u4e86\u8be5\u63d0\u8bae\u3002\u5b83\u73b0\u5728\u5c06\u5b58\u653e\u5728 Kegonsa \u6e56\u9644\u8fd1\u7684\u5927\u5b66\u62e5\u6709\u7684\u571f\u5730\u4e0a\u3002", "note_en": "MADISON, Wis. (WMTV) - A large crane and grounds crew arrived at the University of Wisconsin early Friday morning to move a 70-ton rock that sat near the Observatory Drive scenic overlook.\n The rock, formerly known as Chamberlin Rock, was being taken off-campus following an initiative last June by the Wisconsin Black Student Union and Wunk Sheek to remove it because a nickname given to the boulder is a racial slur.\n It was referred to as a derogatory name in a Wisconsin State Journal story in the 1920s, at a time when the Ku Klux Klan was active on campus.\n In a statement released Thursday, the university explained, \u201c[r]emoving the rock as a monument in a prominent location prevents further harm to our community while preserving the rock\u2019s educational and research value for current and future scholars.\u201d\n   Chamberlin Rock, which is believed to be over two billion years old, was described by the university as a large pre-Cambrian-era glacial erratic. It was named for Thomas Chamberlin, a geologist who served as university president from 1887 to 1892.\n In November, the university\u2019s Campus Planning Committee  recommended moving the rock to Chancellor Rebecca Blank, who later signed off on the proposal. It will now be deposited on university-owned land near Lake Kegonsa.", "posttime": "2021-08-08 06:35:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5927\u5b66,\u79fb\u51fa,rock,\u5ca9\u77f3", "title": "\u5728\u5b66\u751f\u5f3a\u70c8\u53cd\u5bf9\u540e\uff0c\u5927\u5b66\u5c06 70 \u5428\u91cd\u7684\u5ca9\u77f3\u79fb\u51fa\u6821\u56ed", "title_en": "University moves 70-ton rock off campus after student backlash", "transed": 1, "url": "https://www.nbc15.com/2021/08/06/uw-moves-70-ton-chamberlain-rock-off-campus-after-student-backlash/", "via": "", "real_tags": ["\u5927\u5b66", "\u79fb\u51fa", "rock", "\u5ca9\u77f3"]}]
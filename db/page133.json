[{"category": "", "categoryclass": "", "imagename": "04c7085958dc06d2dbdcb891a42d2694.jpg", "infoid": 1066975, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u65b0\u7684SQLite-Utils Memory\u547d\u4ee4\u53ef\u4ee5\u5c06CSV\u548cJSON\u6570\u636e\u76f4\u63a5\u5bfc\u5165\u5185\u5b58\u7684SQLite Datbase\uff0c\u4f7f\u7528SQL\u7ec4\u5408\u548c\u67e5\u8be2\u5b83\uff0c\u5e76\u5c06\u7ed3\u679c\u8f93\u51fa\u4e3aCSV\uff0cJSON\u6216\u5404\u79cd\u5176\u4ed6\u683c\u5f0f\u7684\u7eaf\u6587\u672c\u8868\u3002\n   \u6211\u5f55\u5236\u4e86\u8fd9\u4e2a\u89c6\u9891\u6f14\u793a\u4e86\u65b0\u529f\u80fd - \u5728\u4e0b\u9762\u7684\u5b8c\u6574\u4f34\u594f\u7b14\u8bb0\u3002\n SQLite-utils\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06CSV\u548cJSON\u6570\u636e\u5bfc\u5165SQLite-Utils Insert\u547d\u4ee4\u7684SQLite\u6570\u636e\u5e93\u6587\u4ef6\u7684\u673a\u5236\u3002\u4f7f\u7528\u6b64\u5904\u7406\u6570\u636e\u6d89\u53ca\u4e24\u4e2a\u6b65\u9aa4\uff1a\u9996\u5148\u5c06\u5176\u5bfc\u5165TEMP.DB\u6587\u4ef6\uff0c\u7136\u540e\u4f7f\u7528SQLite-Utils\u67e5\u8be2\u8fd0\u884c\u67e5\u8be2\u5e76\u8f93\u51fa\u7ed3\u679c\u3002\n \u4f7f\u7528SQL\u91cd\u65b0\u5f62\u72b6\u6570\u636e\u771f\u5b9e\u6709\u7528 - \u7531\u4e8eSQLite-Utils\u53ef\u4ee5\u4ee5\u591a\u79cd\u4e0d\u540c\u7684\u683c\u5f0f\u8f93\u51fa\uff0c\u6211\u7ecf\u5e38\u53d1\u73b0\u81ea\u5df1\u5728CSV\u6587\u4ef6\u4e2d\u52a0\u8f7d\u5e76\u5c06\u5176\u9000\u56de\u4e3aJSON\uff0c\u6216\u53cd\u4e4b\u4ea6\u7136\u3002\n \u672c\u5468\u6211\u610f\u8bc6\u5230\u6211\u6709\u5927\u90e8\u5206\u7684\u4f5c\u54c1\u6765\u51cf\u5c11\u8fd9\u4e00\u6b65\u3002\u65b0\u7684SQLite-utils Memory\u547d\u4ee4\uff08\u6b64\u5904\u5b8c\u6574\u6587\u6863\uff09\u9488\u5bf9\u4e34\u65f6\u5185\u5b58\u7684SQLite\u6570\u636e\u5e93\u8fd0\u884c\u3002\u5b83\u53ef\u4ee5\u5bfc\u5165\u6570\u636e\uff0c\u6267\u884cSQL\u5e76\u8f93\u51fa\u4e00\u4e2a\u886c\u57ab\u7684\u7ed3\u679c\uff0c\u800c\u4e0d\u9700\u8981\u6cbf\u9014\u7684\u4efb\u4f55\u4e34\u65f6\u6570\u636e\u5e93\u6587\u4ef6\u3002\n \u8fd9\u662f\u4e00\u4e2a\u4f8b\u5b50\u3002\u6211\u7684dogsheep github\u7ec4\u7ec7\u6709\u5f88\u591a\u5b58\u50a8\u5e93\u3002 github\u901a\u8fc7https://api.github.com/users/dogshep/repos at authentication-\u53ef\u9009\u7684api\u7aef\u70b9\u6765\u5236\u4f5c\u90a3\u4e9b\u53ef\u7528\u7684\u90a3\u4e9b\uff0c\u5b83\u8fd4\u56de\u770b\u8d77\u6765\u50cf\u8fd9\u6837\u7684json\uff08\u7b80\u4f53\uff09\uff1a\n [{\uff06\uff0334; id\uff06\uff0334 ;: 197431109\uff0c\uff06\uff0334;\u540d\u79f0\uff06\uff0334 ;:\uff06\uff0334; dogsheep-beta\uff06\uff0334 ;,\uff06\uff0334; full_name\uff06\uff0334 ;:\uff06\uff0334; Dogsheep / Dogsheep-beta\uff06\uff0334 ;,\uff06\uff0334; size\uff06\uff0334 ;:61\uff0c\uff06\uff0334; stargazers_count\uff06\uff0334 ;:79\uff0c\uff06\uff0334; thepers_count\uff06\uff0334 ;:79\uff0c\uff06\uff0334;\u53c9\u5b50\uff06\uff0334 ;: 0\uff0c\uff06\uff0334; open_issues\uff06\uff0334 ;:11}\uff0c{\uff06\uff0334; id\uff06\uff0334 ;: 256834907\uff0c\uff06\uff0334;\u59d3\u540d\uff06\uff0334 ;:\uff06\uff0334; dogsheep-\u7167\u7247\uff06\uff0334;\uff06\uff0334; full_name\uff06\uff0334 ;:\uff06\uff0334; dogsheep / dogsheep-photos\uff06\uff0334 ;,\uff06\uff0334; size\uff06\uff0334 ;: 64\uff0c\uff06\uff0334; stargazers_count\uff06\uff0334 ; 116\uff0c\uff06\uff0334;\u770b\u770b\u8005_Count\uff06\uff0334 ;:116\uff0c\uff06\uff0334;\u53c9\u5b50\uff06\uff0334 ;: 5\uff0c\uff06\uff0334; Open_issues\uff06\uff0334 ;:18}] \n\u4f7f\u7528SQLite-Utils Memory\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd93\u4e2a\u6700\u53d7\u6b22\u8fce\u7684Repos\u6309\u50cf\u8fd9\u6837\u7684\u661f\u661f\u6570\uff1a\n $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u9009\u62e9full_name\uff0cforks_count\uff0cstargazers_count\uff0c\u4eceStdin Order by Stars\u4e2d\u7684\u661f\u661fDESC\u9650\u52363\uff06\uff0339; -tifull_name forks_count stars ------------------------------------- Dogsheep / Twitter-to-sqlite 12 225dogsheep / github-to-sqlite 14 139dogsheep / dogsheep-photos 5 116\n \u6211\u4eec\u6b63\u5728\u4f7f\u7528CURL\u5c06JSON\u83b7\u53d6\uff0c\u5e76\u5c06\u5176\u7ba1\u9053\u8fdb\u5165SQLite-Utils Memory-The-Meary\u201c\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u201d\u3002\u7136\u540e\u6211\u4eec\u901a\u8fc7\u4ee5\u4e0bSQL\u67e5\u8be2\uff1a\n  STDIN\u662f\u4e3a\u5de5\u5177\u4e2d\u7684\u6570\u636e\u63d0\u4f9b\u7684\u6570\u636e\u521b\u5efa\u7684\u4e34\u65f6\u8868\u3002\u67e5\u8be2\u9009\u62e9\u4e86\u4e09\u4e2aJSON\u5c5e\u6027\uff0c\u5c06Stargazers_Count\u91cd\u65b0\u521b\u5efa\u5230\u660e\u661f\uff0c\u6309\u661f\u7ea7\u6392\u5e8f\u5e76\u8fd4\u56de\u524d\u4e09\u4e2a\u3002\n \u8fd9\u91cc\u7684-t\u9009\u9879\u610f\u5473\u7740\u201c\u4f5c\u4e3a\u683c\u5f0f\u5316\u8868\u7684\u8f93\u51fa\u201d - \u6211\u4eec\u83b7\u53d6json\uff1a\n $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u9009\u62e9full_name\uff0cforks_count\uff0cstargazers_count\uff0c\u4eceStdin Order by Stars\u4e2d\u7684\u661f\u661fDESC\u9650\u52363\uff06\uff0339; [{\uff06\uff0334; full_name\uff06\uff0334 ;:\uff06\uff0334; dogsheep / twitter-to-sqlite\uff06\uff0334;\uff06\uff0334; forks_count\uff06\uff0334 ;: 12\uff0c\uff06\uff0334;\u661f\u661f\uff06\uff0334;\uff1a225}\uff0c{ \uff06\uff0334; full_name\uff06\uff0334 ;:\uff06\uff0334; dogsheep / github-to-sqlite\uff06\uff0334 ;,\uff06\uff0334; forks_count\uff06\uff0334 ;:14\uff0c\uff0334;\u661f\u661f\uff06\uff0334;\uff1a139}\uff0c{\uff06\uff03 34; full_name\uff06\uff0334 ;:\uff06\uff0334; dogsheep / dogsheep-photos\uff06\uff0334;\uff06\uff0334; forks_count\uff06\uff0334 ;: 5\uff0c\uff06\uff0334;\u661f\u661f\uff06\uff0334;\uff1a116}]\n  $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u9009\u62e9full_name\uff0cforks_count\uff0cstargazers_count\uff0c\u4eceStdin Order by Stars\u4e2d\u7684\u661f\u661fDESC\u9650\u52363\uff06\uff0339; --csvfull_name\uff0cforks_count\uff0cstarsdogsheep / twitter-to-sqlite\uff0c12,225dogsheep / github-to-sqlite\uff0c14,139dogsheep / dogsheep-photos\uff0c5,116 \n-t\u9009\u9879\u652f\u6301\u4f7f\u7528--fmt\u6307\u5b9a\u7684\u8bb8\u591a\u4e0d\u540c\u683c\u5f0f\u3002\u5982\u679c\u6211\u60f3\u901a\u8fc7\u661f\u661f\u751f\u6210\u9876\u90e8Reos\u7684\u4e73\u80f6\u8868\uff0c\u6211\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u9009\u62e9full_name\uff0cforks_count\uff0cstargazers_count\uff0c\u4eceStdin Order by Stars\u4e2d\u7684\u661f\u661fDESC\u9650\u52363\uff06\uff0339; -t --fmt = laTex \\ begin {\u8868\u683c} {lrr} \\ hline full \\ _name\uff06amp; forks \\ _count\uff06amp;\u661f\u661f\\\\\\ hine dogsheep / twitter-to-sqlite\uff06amp; 12\uff06amp; 225 \\\\ dogsheep / github-to-sqlite\uff06amp; 14\uff06amp; 139 \\\\ dogsheep / dogsheep-photos\uff06amp; 5\uff06amp; 116 \\\\\\ hline \\\u7ed3\u675f{\u8868\u683c}\n \u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd0\u884c\u805a\u5408\u67e5\u8be2 - \u8ba9\u6211\u4eec\u5728\u6240\u6709\u5b58\u50a8\u5e93\u4e2d\u6dfb\u52a0\u603b\u4f53\u5927\u5c0f\u548c\u661f\u6570\uff1a\n $ curl -s\uff06\uff0339; https\uff1a//api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils\u8bb0\u5fc6 - \uff06\uff0339;\u4eceStdin\uff06\uff0339\u9009\u62e9sum\uff08size\uff09\uff0csum\uff08stargazers_count\uff09; -t sum\uff08size\uff09sum\uff08stargazers_count\uff09----------- ---------------------843 934\n \uff08\u6211\u8ba4\u4e3a\u8fd9\u91cc\u7684\u5c3a\u5bf8\u662f\u4ee5\u5343\u5b57\u8282\u6d4b\u91cf\u7684\uff1aGitHub API\u6587\u6863\u5728\u8fd9\u4e00\u70b9\u4e0a\u4e0d\u6e05\u695a\u3002\uff09\n  \u6240\u6709\u8fd9\u4e9b\u793a\u4f8b\u90fd\u4f7f\u7528JSON\u6570\u636e\u5904\u7406\u5230\u5de5\u5177\u4e2d - \u4f46\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5141\u8bb8\u60a8\u5bf9\u5176\u6267\u884c\u8fde\u63a5\u7684\u65b9\u5f0f\u4f20\u9012\u4e00\u4e2a\u6216\u591a\u4e2a\u4e0d\u540c\u683c\u5f0f\u7684\u6587\u4ef6\u3002\n  \u7ebd\u7ea6\u65f6\u62a5\u901a\u8fc7\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5728Covid\u6848\u4ef6\u548c\u6b7b\u4ea1\u4e2d\u53d1\u5e03\u4e86\u7f8e\u56fd\u7684\u7f8e\u56fd\u9648\u8ff0\u3002 \nCDC\u6709\u4e00\u4e2a\u672a\u8bb0\u5f55\u7684JSON\u7aef\u70b9\uff08\u6211\u5728\u8fd9\u91cc\u5f52\u6863\uff09\u8ddf\u8e2a\u4e0d\u540c\u72b6\u6001\u75ab\u82d7\u63a5\u79cd\u7684\u8fdb\u5c55\u60c5\u51b5\u3002\n \u6211\u4eec\u5c06\u4ece\u8be5CSV\u6570\u636e\u5230\u8be5JSON\u6570\u636e\u8fd0\u884c\u52a0\u5165\uff0c\u5e76\u8f93\u51fa\u7ed3\u679c\u8868\u3002\n \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e0b\u8f7d\u6587\u4ef6\u3002\u4e3a\u4e86\u6211\u4eec\u7684\u76ee\u7684\uff0cCDC JSON\u6570\u636e\u5e76\u4e0d\u662f\u6b63\u786e\u7684\u5f62\u72b6\uff1a\n  sqlite-utils\u9884\u671f\u4e00\u4e2a\u5e73\u5766\u7684json armet\u5bf9\u8c61 - \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528JQ\u91cd\u65b0\u5851\u9020\u6570\u636e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n    \u65e2\u7136\u6211\u4eec\u5728\u672c\u5730\u62e5\u6709\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fd0\u884c\u8fde\u63a5\u4ee5\u5c06\u5176\u7ec4\u5408\uff1a\n $ sqlite-utils memory us-solual.csv vaccination_data.json\uff06\uff0334;\u4eceT1\u52a0\u5165T2\u4e0a\u9009\u62e9max\uff08t1.date\uff09\uff0ct1.state\uff0ct1.cases\uff0ct1.dearts\uff0ct2.census2019\uff0ct2.dist_per_100k\u5728t1.state = replace\uff08t2.longname\uff0c\uff06\uff0339;\u7ebd\u7ea6\u5dde\uff06\uff0339; 39;\uff0c\uff06\uff0339;\u7ebd\u7ea6\uff06\uff0339;\uff09\u7531t1\u7ec4\u7ec4.State Order by dist_per_100k desc\uff06\uff0334; -tmax\uff08t1.date\uff09\u5dde\u75c5\u4f8b\u6b7b\u4ea1\u4eba\u53e3\u666e\u67e52019 dist_per_100k ----------------------------------- ------- -------- ------------------------2021-06-18\u54e5\u4f26\u6bd4\u4e9a49243 1141 705749 1492482021-06-18\u4f5b\u8499\u7279\u5dde24360 256 623989 1462572021-06-18\u7f57\u5fb7\u5c9b152383 2724\u4e2a1059361\u4e2a1412912021-06-18\u9a6c\u8428\u8bf8\u585e709263 17960 6892503 1396922021-06-18\u9a6c\u91cc\u5170461852 9703 6045680 1381932021-06-18\u7f05\u56e0\u5dde68753 854 1344212 1368942021 -06-18\u590f\u5a01\u593735903 507 1415872 136024 ...\n \u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u81ea\u52a8\u521b\u5efa\u6570\u5b57\u522b\u540dT1\u548cT2\uff0c\u4f46\u6211\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u7684\u5b8c\u6574\u8868\u59d3\u540d\u548c\uff0334;\u7f8e\u56fd\u56fd\u5bb6\uff06\uff0334; \uff08\u7531\u4e8e\u8fde\u5b57\u7b26\u6240\u9700\u7684\u5f15\u53f7\uff09\u548cVaccination_data\u4ee3\u66ff\u3002 \nreplace\uff08\uff09\u64cd\u4f5c\u9700\u8981\uff0c\u56e0\u4e3avaccination_data.json\u6587\u4ef6\u8c03\u7528\u7ebd\u7ea6\u201c\u7ebd\u7ea6\u72b6\u6001\u201d\uff0c\u800c\u7f8e\u56fd\u9648\u8ff0.CSV\u6587\u4ef6\u53ea\u9700\u79f0\u4e4b\u4e3a\u201c\u7ebd\u7ea6\u201d\u3002\n max\uff08t1.date\uff09\u548ct1\u7ec4.state\u662f\u4e00\u4e2a\u6709\u7528\u7684sqlite\u6280\u5de7\uff1a\u5982\u679c\u6267\u884c\u4e00\u4e2a\u7ec4\uff0c\u7136\u540e\u8be2\u95ee\u503c\u7684max\uff08\uff09\uff0c\u5219\u4ece\u8be5\u8868\u8fd4\u56de\u7684\u5176\u4ed6\u5217\u5c06\u662f\u5217\u7684\u5217\u5305\u542b\u6700\u5927\u503c\u7684\u884c\u3002\n \u8fd9\u4e2a\u6f14\u793a\u662f\u4e00\u4e2a\u5ef6\u4f38\u7684\u4e00\u70b9 - \u4e00\u65e6\u6211\u8fbe\u5230\u8fd9\u79cd\u590d\u6742\u7a0b\u5ea6\uff0c\u6211\u66f4\u6709\u53ef\u80fd\u5c06\u6587\u4ef6\u52a0\u8f7d\u5230\u78c1\u76d8\u4e0a\u7684SQLite\u6570\u636e\u5e93\u6587\u4ef6\u4e2d\uff0c\u5e76\u5728\u6570\u636e\u7f29\u653e\u4e2d\u6253\u5f00\u5b83\u4eec - \u4f46\u8fd9\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u52a0\u5165\u7684\u6709\u8da3\u793a\u4f8b\u884c\u52a8\u3002\n  SQLite-utils Memred\u547d\u4ee4\u5177\u6709\u53e6\u4e00\u4e2a\u65b0\u6ce1\u6cab\u7684\u5957\u7b52\uff1a\u5b83\u4f1a\u81ea\u52a8\u68c0\u6d4bCSV\u6216TSV\u6587\u4ef6\u4e2d\u7684\u54ea\u4e2a\u5217\u5305\u542b\u6574\u6570\u6216\u6d6e\u70b9\u503c\uff0c\u5e76\u4ee5\u6b63\u786e\u7684\u7c7b\u578b\u521b\u5efa\u76f8\u5e94\u7684\u5185\u5b58\u4e2d\u7684SQLite\u8868\u3002\u8fd9\u53ef\u4ee5\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u786e\u4fddMax\uff08\uff09\u548cSum\uff08\uff09\u5e76\u6309\u5de5\u4f5c\u987a\u5e8f\uff0c\u800c\u4e0d\u4f1a\u610f\u5916\u5730\u5c061\u6392\u5e8f\u4e3a\u9ad8\u4e8e11\u3002\n \u6211\u4e0d\u60f3\u6253\u7834sqlite-utils\u63d2\u5165\u547d\u4ee4\u7684\u73b0\u6709\u7528\u6237\u7684\u5411\u540e\u517c\u5bb9\u6027\uff0c\u6240\u4ee5\u6211\u6dfb\u52a0\u4e86\u90a3\u91cc\u7684\u7c7b\u578b\u68c0\u6d4b\uff0c\u4f5c\u4e3a\u65b0\u7684\u9009\u9879\uff0c--detect-types\u6216-d for short\uff1a\n $ sqlite-utils\u63d2\u5165my.db us_states us-solues.csv --csv -d [############################# ######] 100\uff05$ sqlite-utils\u67b6\u6784my.dbcreate\u8868\uff06\uff0334; us_states\uff06\uff0334; \uff08[\u65e5\u671f]\u6587\u672c\uff0c[\u72b6\u6001]\u6587\u672c\uff0c[FIPS]\u6574\u6570\uff0c[\u6848\u4f8b]\u6574\u6570\uff0c[Deaths] Integer\uff09;\n   Sqlite-utils\uff1a3.10-\uff08\u603b\u517178\u4e2a\u7248\u672c\uff09-2021-06-19 Python CLI\u5b9e\u7528\u7a0b\u5e8f\u548c\u7528\u4e8e\u64cd\u7eb5SQLite\u6570\u636e\u5e93\u7684\u5e93 \ndogsheep-beta\uff1a0.10.2-\uff0820\u7248\u672c\u603b\u8ba1\uff09-2021-06-13\u4ece\u591a\u4e2aSQLite\u6570\u636e\u5e93\u8868\u4e2d\u6784\u5efa\u4e86\u5185\u5bb9\u7684\u641c\u7d22\u7d22\u5f15\uff0c\u5e76\u4f7f\u7528Databette\u5bf9\u5176\u8fd0\u884c\u523b\u9762\u641c\u7d22  Markdown-to-sqlite\uff1a1.0-\uff082\u7248\u672c\u603b\u8ba1\uff09-2021-06-13 CLI\u5de5\u5177\uff0c\u7528\u4e8e\u5c06\u6807\u8bb0\u6587\u4ef6\u52a0\u8f7d\u5230SQLite\u6570\u636e\u5e93\u4e2d ", "note_en": "The new  sqlite-utils memory command can import CSV and JSON data directly into an in-memory SQLite datbase, combine and query it using SQL and output the results as CSV, JSON or various other formats of plain text tables.\n   I\u2019ve recorded  this video demonstrating the new feature\u2014with full accompanying notes below.\n sqlite-utils already offers a mechanism for importing CSV and JSON data into a SQLite database file, in the form of the  sqlite-utils insert command. Processing data with this involves two steps: first import it into a  temp.db file, then use  sqlite-utils query to run queries and output the results.\n Using SQL to re-shape data is really useful\u2014since  sqlite-utils can output in multiple different formats, I frequently find myself loading in a CSV file and exporting it back out as JSON, or vice-versa.\n This week I realized that I had most of the pieces in place to reduce this to a single step. The new  sqlite-utils memory command ( full documentation here) operates against a temporary, in-memory SQLite database. It can import data, execute SQL and output the result in a one-liner, without needing any temporary database files along the way.\n Here\u2019s an example. My  Dogsheep GitHub organization has a number of repositories. GitHub make those available via an authentication-optional API endpoint at  https://api.github.com/users/dogsheep/repos\u2014which returns JSON that looks like this (simplified):\n [ {   &#34;id &#34;:  197431109,   &#34;name &#34;:   &#34;dogsheep-beta &#34;,   &#34;full_name &#34;:   &#34;dogsheep/dogsheep-beta &#34;,   &#34;size &#34;:  61,   &#34;stargazers_count &#34;:  79,   &#34;watchers_count &#34;:  79,   &#34;forks &#34;:  0,   &#34;open_issues &#34;:  11 }, {   &#34;id &#34;:  256834907,   &#34;name &#34;:   &#34;dogsheep-photos &#34;,   &#34;full_name &#34;:   &#34;dogsheep/dogsheep-photos &#34;,   &#34;size &#34;:  64,   &#34;stargazers_count &#34;:  116,   &#34;watchers_count &#34;:  116,   &#34;forks &#34;:  5,   &#34;open_issues &#34;:  18 }]\n With  sqlite-utils memory we can see the 3 most popular repos by number of stars like this:\n $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils memory - &#39; select full_name, forks_count, stargazers_count as stars from stdin order by stars desc limit 3 &#39; -tfull_name forks_count stars-------------------------- ------------- -------dogsheep/twitter-to-sqlite 12 225dogsheep/github-to-sqlite 14 139dogsheep/dogsheep-photos 5 116\n We\u2019re using  curl to fetch the JSON and pipe it into  sqlite-utils memory\u2014the  - means \u201cread from standard input\u201d. Then we pass the following SQL query:\n  stdin is the temporary table created for the data piped in to the tool. The query selects three of the JSON properties, renames  stargazers_count to  stars, sorts by stars and return the first three.\n The  -t option here means \u201coutput as a formatted table\u201d\u2014without that option we get JSON:\n $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils memory - &#39; select full_name, forks_count, stargazers_count as stars from stdin order by stars desc limit 3 &#39; [{&#34;full_name&#34;: &#34;dogsheep/twitter-to-sqlite&#34;, &#34;forks_count&#34;: 12, &#34;stars&#34;: 225}, {&#34;full_name&#34;: &#34;dogsheep/github-to-sqlite&#34;, &#34;forks_count&#34;: 14, &#34;stars&#34;: 139}, {&#34;full_name&#34;: &#34;dogsheep/dogsheep-photos&#34;, &#34;forks_count&#34;: 5, &#34;stars&#34;: 116}]\n  $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils memory - &#39; select full_name, forks_count, stargazers_count as stars from stdin order by stars desc limit 3 &#39; --csvfull_name,forks_count,starsdogsheep/twitter-to-sqlite,12,225dogsheep/github-to-sqlite,14,139dogsheep/dogsheep-photos,5,116\n The  -t option supports a number of different formats, specified using  --fmt. If I wanted to generate a LaTeX table of the top reos by stars I could do this:\n $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\ | sqlite-utils memory - &#39; select full_name, forks_count, stargazers_count as stars from stdin order by stars desc limit 3 &#39; -t --fmt=latex\\begin{tabular}{lrr}\\hline full\\_name &amp; forks\\_count &amp; stars \\\\\\hline dogsheep/twitter-to-sqlite &amp; 12 &amp; 225 \\\\ dogsheep/github-to-sqlite &amp; 14 &amp; 139 \\\\ dogsheep/dogsheep-photos &amp; 5 &amp; 116 \\\\\\hline\\end{tabular}\n We can run aggregate queries too\u2014let\u2019s add up the total size and total number of stars across all of those repositories:\n $ curl -s &#39;https://api.github.com/users/dogsheep/repos&#39; \\| sqlite-utils memory - &#39; select sum(size), sum(stargazers_count) from stdin&#39; -t sum(size) sum(stargazers_count)----------- ----------------------- 843 934\n (I believe size here is measured in kilobytes: the GitHub API documentation isn\u2019t clear on this point.)\n  All of these examples have worked with JSON data piped into the tool\u2014but you can also pass one or more files, of different formats, in a way that lets you execute joins against them.\n  The New York Times publish a  us-states.csv file with Covid cases and deaths by state over time.\n The CDC have an  undocumented JSON endpoint (which I\u2019ve been  archiving here) tracking the progress of vaccination across different states.\n We\u2019re going to run a join from that CSV data to that JSON data, and output a table of results.\n First, we need to download the files. The  CDC JSON data isn\u2019t quite in the right shape for our purposes:\n  sqlite-utils expects a flat JSON array of objects\u2014we can use  jq to re-shape the data like so:\n    Now that we have the data locally, we can run a join to combine it using the following command:\n $ sqlite-utils memory us-states.csv vaccination_data.json &#34; select max(t1.date), t1.state, t1.cases, t1.deaths, t2.Census2019, t2.Dist_Per_100K from t1 join t2 on t1.state = replace(t2.LongName, &#39;New York State&#39;, &#39;New York&#39;) group by t1.state order by Dist_Per_100K desc&#34; -tmax(t1.date) state cases deaths Census2019 Dist_Per_100K-------------- ------------------------ ------- -------- ------------ ---------------2021-06-18 District of Columbia 49243 1141 705749 1492482021-06-18 Vermont 24360 256 623989 1462572021-06-18 Rhode Island 152383 2724 1059361 1412912021-06-18 Massachusetts 709263 17960 6892503 1396922021-06-18 Maryland 461852 9703 6045680 1381932021-06-18 Maine 68753 854 1344212 1368942021-06-18 Hawaii 35903 507 1415872 136024...\n I\u2019m using automatically created numeric aliases  t1 and  t2 for the files here, but I can also use their full table names  &#34;us-states&#34; (quotes needed due to the hyphen) and  vaccination_data instead.\n The  replace() operation there is needed because the  vaccination_data.json file calls New York \u201cNew York State\u201d while the  us-states.csv file just calls it \u201cNew York\u201d.\n The  max(t1.date) and  group by t1.state is  a useful SQLite trick: if you perform a  group by and then ask for the  max() of a value, the other columns returned from that table will be the columns for the row that contains that maximum value.\n This demo is a bit of a stretch\u2014once I reach this level of complexity I\u2019m more likely to load the files into a SQLite database file on disk and open them up in  Datasette\u2014but it\u2019s a fun example of a more complex join in action.\n  The  sqlite-utils memory command has another new trick up its sleeve: it automatically detects which columns in a CSV or TSV file contain integer or float values and creates the corresponding in-memory SQLite table with the correct types. This ensures  max() and  sum() and  order by work in a predictable manner, without accidentally sorting  1 as higher than  11.\n I didn\u2019t want to break backwards compatibility for existing users of the  sqlite-utils insert command so I\u2019ve added type detection there as a new option,  --detect-types or  -d for short:\n $ sqlite-utils insert my.db us_states us-states.csv --csv -d [####################################] 100%$ sqlite-utils schema my.dbCREATE TABLE &#34;us_states&#34; ( [date] TEXT, [state] TEXT, [fips] INTEGER, [cases] INTEGER, [deaths] INTEGER);\n   sqlite-utils:  3.10\u2014( 78 releases total)\u20142021-06-19 Python CLI utility and library for manipulating SQLite databases\n dogsheep-beta:  0.10.2\u2014( 20 releases total)\u20142021-06-13 Build a search index across content from multiple SQLite database tables and run faceted searches against it using Datasette\n  markdown-to-sqlite:  1.0\u2014( 2 releases total)\u20142021-06-13 CLI tool for loading markdown files into a SQLite database", "posttime": "2021-06-20 11:45:39", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "sqlite,\u6570\u636e\u5e93,database,\u5185\u5b58,csv", "title": "\u4f7f\u7528\u5185\u5b58\u4e2d\u7684SQLite\u6570\u636e\u5e93\u52a0\u5165CSV\u548cJSON\u6570\u636e ", "title_en": "Joining CSV and JSON data with an in-memory SQLite database", "transed": 1, "url": "https://simonwillison.net/2021/Jun/19/sqlite-utils-memory/", "via": "", "real_tags": ["sqlite", "\u6570\u636e\u5e93", "database", "\u5185\u5b58", "csv"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066974, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u534e\u76db\u987f\u5927\u5b66\u3002 \u7814\u7a76\u5174\u8da3\uff1a\u673a\u5668\u5b66\u4e60\uff0c\u4eba\u5de5\u667a\u80fd\uff0c\u4f18\u5316\uff0c\u7edf\u8ba1 ", "note_en": "University of Washington.  Research interests: Machine Learning, Artificial     Intelligence, Optimization, Statistics", "posttime": "2021-06-20 11:45:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7b97\u6cd5,algorithms,\u5b66\u4e60,learning,\u4f18\u5316", "title": "\u5f3a\u5316\u5b66\u4e60\uff1a\u7406\u8bba\u4e0e\u7b97\u6cd5 ", "title_en": "Reinforcement Learning: Theory and Algorithms", "transed": 1, "url": "https://rltheorybook.github.io/", "via": "", "real_tags": ["\u7b97\u6cd5", "\u5b66\u4e60", "learning", "\u4f18\u5316"]}, {"category": "", "categoryclass": "", "imagename": "6e301536cc1f6cb87ca267c459c893bd.jpg", "infoid": 1066973, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u90fd\u67cf\u6797\uff0c\u7231\u5c14\u5170 - \u7231\u5c14\u5170\u5171\u540c\u521b\u7acb\u7684\u6570\u636e\u5206\u6790\u516c\u53f8\u662f\u5728\u7231\u5c14\u5170\u5efa\u7acb\u4e00\u4e2a\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc3\u3002\n \u8981\u4f4d\u4e8e\u9996\u90fd\uff0c\u90fd\u67cf\u6797\u662f\u7531Moonshot\u5efa\u7acb\u7684\u4e2d\u5fc3\uff0c\u5c06\u5728\u672a\u67653\u5e74\u5185\u521b\u902037\u4e2a\u65b0\u89d2\u8272\u3002\n Moonshot\u5f00\u53d1\u8f6f\u4ef6\u4ee5\u8bc6\u522b\uff0c\u76d1\u63a7\u548c\u51cf\u8f7b\u5728\u7ebf\u5371\u5bb3\uff0c\u4f8b\u5982\u6050\u6016\u4e3b\u4e49\u548c\u6709\u7ec4\u7ec7\u7684\u72af\u7f6a\u3002\n  \u8be5\u516c\u53f8\u4e8e2015\u5e74\u7531\u7231\u5c14\u5170\u4f01\u4e1a\u5bb6Ross Fross Froneett\u548c\u6765\u81ea\u7f8e\u56fd\u7684Vidhya Ramalingam\u6210\u7acb\u4e8e2015\u5e74\u3002\u8be5\u516c\u53f8\u8bbe\u8ba1\u4e86\u65b0\u7684\u65b9\u6cd5\uff0c\u4ee5\u63d0\u9ad8\u5176\u5408\u4f5c\u4f19\u4f34\u7684\u80fd\u529b\uff0c\u4ee5\u6709\u6548\u5730\u5e94\u5bf9\u66b4\u529b\u6781\u7aef\u4e3b\u4e49\uff0c\u865a\u5047\u4fe1\u606f\uff0c\u57fa\u4e8e\u6027\u522b\u7684\u66b4\u529b\u548c\u6709\u7ec4\u7ec7\u72af\u7f6a\u7b49\u5371\u5bb3\u7684\u6311\u6218\u3002\n \u5b83\u63d0\u4f9b\u4e86\u5a01\u80c1\u76d1\u6d4b\u548c\u5206\u6790\uff0c\u6570\u5b57\u8fd0\u52a8\uff0c\u91cf\u8eab\u5b9a\u5236\u7684\u5e72\u9884\u63aa\u65bd\uff0c\u4ee5\u53ca57\u591a\u4e2a\u56fd\u5bb6\u548c\u4e09\u5341\u4e09\u79cd\u8bed\u8a00\u7684\u4e00\u7cfb\u5217\u5176\u4ed6\u670d\u52a1\uff0c\u9002\u7528\u4e8e\u653f\u5e9c\uff0c\u79d1\u6280\u516c\u53f8\u548c\u56fd\u9645\u7ec4\u7ec7\u3002 Moonshot\uff06\uff0339;\u5ba2\u6237\u5305\u62ec\u56fd\u571f\u5b89\u5168\u90e8\uff0cUSAID\uff0c\u7f8e\u56fd\u56fd\u52a1\u9662\uff0c\u82f1\u56fd\u5bb6\u5ead\u529e\u516c\u5ba4\uff0c\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u548c\u641c\u7d22\u5f15\u64ce\uff0c\u5982Facebook\u548cGoogle\u3002\n \uff06\uff0334;\u6211\u771f\u7684\u5f88\u9ad8\u5174Moonshot\u5c06\u5728\u90fd\u67cf\u6797\u5efa\u7acb\u65b0\u7684\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc3\uff0c\u8fd9\u5c06\u5728\u672a\u6765\u4e09\u5e74\u5185\u521b\u5efa37\u4e2a\u65b0\u5de5\u4f5c\u3002\u6570\u636e\u5206\u6790\u516c\u53f8\u572857\u591a\u4e2a\u56fd\u5bb6\u8fd0\u8425\uff0c\u8fd9\u662f\u5bf9\u516c\u53f8\u7684\u8bc1\u660e\uff0c\u8fc4\u4eca\u4e3a\u6b62\u7684\u6210\u529f\uff0c\uff06\uff0334; Tanaiste\u548c\u4f01\u4e1a\u90e8\u957fLeo Varadkar\u8868\u793a\u3002\n  \uff06\uff0334;\u5f53\u6211\u5728\u5927\u7ecf\u6d4e\u8870\u9000\u671f\u95f4\u79bb\u5f00\u7231\u5c14\u5170\u65f6\uff0c\u601d\u60f3\u5e26\u6765\u4e86\u8fd9\u4e48\u591a\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u542c\u8d77\u6765\u592a\u597d\u4e86\u3002\u4f46\u8fd9\u4e3e\u529e\u4e86\u516c\u53f8\uff0c\u57fa\u4e8e\u60c5\u611f\uff0c\u5f53\u6211\u4eec\u770b\u7740\u4eba\u624d\u548c\u5e02\u573a\uff0c\u7231\u5c14\u5170\u662f\u660e\u663e\u7684\u9009\u62e9\u3002 \n\uff06\uff0334;\u6211\u4eec\u5728\u8fc7\u53bb\u7684\u4e94\u5e74\u91cc\u5ea6\u8fc7\u4e86\u6211\u4eec\u7684\u80fd\u529b\uff0c\u56e2\u961f\u548c\u5ba2\u6237\u7fa4\uff0c\u4ee5\u5e94\u5bf9\u9700\u6c42\u7684\u6301\u7eed\u589e\u52a0\uff0c\u4e5f\u662f\u6781\u7aef\u5206\u5b50\uff0c\u9634\u8c0b\u7406\u8bba\u5bb6\u548c\u6709\u7ec4\u7ec7\u72af\u7f6a\u6240\u6784\u6210\u7684\u5a01\u80c1\u7684\u6301\u7eed\u6f14\u53d8\u3002\uff06\uff0334;\n  \uff06\uff0334;\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u6269\u5927\u6211\u4eec\u7684\u8db3\u8ff9\u5e76\u8d8a\u6765\u8d8a\u591a\uff0c\u6211\u4eec\u7684\u56e2\u961f\u4f1a\u8fce\u63a5\u4e16\u754c\u4e0a\u4e00\u4e9b\u7b56\u7565\u7684\u6311\u6218\u3002\u5728\u90fd\u67cf\u6797\u5efa\u7acb\u81ea\u5df1\u662f\u8be5\u8fc7\u7a0b\u7684\u5173\u952e\u90e8\u5206\uff0c\u6211\u4eec\u7684\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc3\u5c06\u4f7f\u6211\u4eec\u80fd\u591f\u8bbf\u95ee\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u613f\u666f\u6240\u9700\u7684\u4eba\u624d\u548c\u6280\u80fd\u3002\u4e3a\u6211\u4eec\u6269\u5c55\u6211\u4eec\u7684\u4f7f\u547d\uff0c\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u65f6\u523b\uff0c\u6211\u4eec\u90fd\u67cf\u6797\u56e2\u961f\u5c06\u8ba9\u6211\u4eec\u5728\u90a3\u91cc\u3002\uff06\uff0334;\n  \uff06\uff0334;\u7231\u5c14\u5170\u63d0\u4f9b\u5b89\u5168\u7a33\u5b9a\u7684\u6295\u8d44\u5730\u70b9\uff0c\u53ef\u901a\u5f80\u6b27\u76df\u5e02\u573a\uff0c\u53d7\u8fc7\u6559\u80b2\u548c\u719f\u7ec3\u7684\u52b3\u52a8\u529b\u4ee5\u53ca\u4eba\u4eec\u60f3\u8981\u751f\u6d3b\u548c\u5de5\u4f5c\u7684\u6709\u5438\u5f15\u529b\u7684\u73af\u5883\u3002\u5728\u8fd9\u91cc\u5efa\u7acb\u7684Moonshot\uff06\uff0339\u662f\u975e\u5e38\u53d7\u6b22\u8fce\u7684\uff0c\u662f\u7231\u5c14\u5170\u7684\u8fdb\u4e00\u6b65\u8ba4\u540c\uff0c\u4f5c\u4e3a\u6b27\u6d32\u6280\u672f\u4e2d\u5fc3\u7684\u5730\u4f4d\uff0c\u5176\u6301\u7eed\u7684\u9ad8\u589e\u957f\u516c\u53f8\u6295\u8d44\u7684\u6301\u7eed\u5438\u5f15\u529b\u3002\uff06\uff0334;\n \u672c\u6708\u65e9\u4e9b\u65f6\u5019\uff0cMoonshot\u5ba3\u5e03\u5b83\u5df2\u7ecf\u5c06700\u4e07\u7f8e\u5143\uff08\u82f1\u56fd500\u4e07\u82f1\u9551\uff09\u7eb3\u5165\u4e86Beringea\uff0cTranstallantuft Capiture Capiture Compand\u548c\u82f1\u56fdMercia\u7684\u8d44\u91d1\u3002 ", "note_en": "DUBLIN, Ireland - An Irish co-founded data analytics company is to set up a software development centre in Ireland.\n To be located in the capital, Dublin, the centre being established by  Moonshot, will create 37 new roles over the next 3 years.\n Moonshot develops software to identify, monitor, and mitigate online harms such as terrorisim and organised crime.\n  The company was founded in London in 2015 by Irish entrepreneur Ross Frenett, and Vidhya Ramalingam from the United States. The company designs new methodologies to enhance the capacity of its partners to respond effectively to the challenges of harms such as violent extremism, disinformation, gender-based violence, and organised crime.\n It has delivered threat monitoring and analysis, digital campaigns, tailored interventions, and a range of other services in over 57 countries and thirty three languages, for governments, tech companies, and international organisations. Moonshot&#39;s clients include the Department of Homeland Security, USAID, the U.S. Department of State, the UK Home Office, social media platforms and search engines, such as Facebook and Google.\n &#34;I&#39;m really pleased that Moonshot will be establishing its new Software Development Centre in Dublin, which will create 37 new jobs over the next three years. The data analytics firm operates in over 57 countries, which is a testament to the company&#39;s success to date,&#34; Tanaiste and Minister for Enterprise, Trade and Employment Leo Varadkar said.\n  &#34;When I left Ireland during the great recession the thought of bringing so many jobs home would have sounded too good to be true. But this move for our company isn&#39;t based on emotion, when we looked at talent and market access Ireland was the obvious choice.\n &#34;We&#39;ve spent the last five years growing our capabilities, team and client base, in response to both a continual increase in demand, but also the continued evolution of the threats posed by extremists, conspiracy theorists and organised crime.&#34;\n  &#34;We&#39;re expanding our footprint and growing our team to meet some of the world&#39;s toughest challenges head on. Establishing ourselves in Dublin is a key part of that process and our Software Development Centre will allow us to access the talent and skills we need to realise our vision. There has never been a more important moment for us to scale our mission, and our Dublin team will get us there.&#34;\n  &#34;Ireland offers a safe and stable investment location with access to the EU market, an educated and skilled workforce and an attractive environment where people want to live and work. Moonshot&#39;s decision to set up here is very welcome and is a further endorsement of Ireland&#39;s position as a tech hub in Europe and its continued attractiveness for investments from high growth companies.&#34;\n Earlier this month Moonshot announced that it has raised US $7million (UK \u00a35 million) in Series A funding from Beringea, the transatlantic venture capital firm, and UK-based Mercia.", "posttime": "2021-06-20 11:45:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u53d1,\u8f6f\u4ef6,\u8f6f\u4ef6\u5f00\u53d1,establish", "title": "Moonshot\u5728\u7231\u5c14\u5170\u9996\u90fd\u5efa\u7acb\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5fc3 ", "title_en": "Moonshot to establish software development centre in Irish capital", "transed": 1, "url": "https://www.bignewsnetwork.com/news/269958729/moonshot-to-establish-software-development-centre-in-irish-capital", "via": "", "real_tags": ["\u5f00\u53d1", "\u8f6f\u4ef6", "\u8f6f\u4ef6\u5f00\u53d1", "establish"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1066972, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u4e2a\u79d1\u5e7b\u5c0f\u8bf4/\u559c\u5267/\u5b8c\u5168\u4e25\u8083\u7684\u8c08\u8bdd\u8ffd\u6eaf\u4e86JavaScript\u7684\u5386\u53f2\uff0c\u5e76\u4e00\u822c\u7f16\u7a0b\uff0c\u4ece1995\u5e74\u52302035\u5e74\u3002\u5b83\u6ca1\u6709\u4eb2\u6216\u53cdJavaScript; \u5766\u7387\u5730\u8ba8\u8bba\u4e86\u8bed\u8a00\uff06\uff0339; S\u7f3a\u9677\uff0c\u4f46\u5b83\u5bf9\u4e1a\u754c\u7684\u6700\u7ec8\u5f71\u54cd\u975e\u5e38\u79ef\u6781\u3002 \u5bf9\u4e8e\u52a0\u91cc\uff06\uff0339;\u5728\u7f16\u7a0b\u7684\u66f4\u4e25\u91cd\uff08\u548c\u66f4\u5c11\u7684\u672a\u6765\u6d3e\uff09\u601d\u60f3\u4e2d\uff0c\u5c1d\u8bd5\u4e00\u4e9b\u6467\u6bc1\u6240\u6709\u8f6f\u4ef6\u622a\u56fe\u3002  \u5982\u679c\u60a8\u559c\u6b22\u8fd9\u4e00\u70b9\uff0c\u60a8\u4e5f\u53ef\u80fd\u559c\u6b22\u6267\u884c\u7a0b\u5e8f\uff1a\u5728\u7c7b\u578b\uff0c\u73b0\u4ee3JavaScript\uff0cSQL\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u7b49\u4e2d\u4ea4\u4e92\u5f0f\u8bfe\u7a0b\u3002 \u6bcf\u4e2a\u8bfe\u7a0b\u7531\u6570\u767e\u4e2a\u4ea4\u4e92\u5f0f\u4ee3\u7801\u793a\u4f8b\u7ec4\u6210\uff0c\u8be5\u793a\u4f8b\u5728\u60a8\u7684\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002 ", "note_en": "This science fiction / comedy / completely serious talk traces the history of JavaScript, and programming in general, from 1995 until 2035. It&#39;s not pro- or anti-JavaScript; the language&#39;s flaws are discussed frankly, but its ultimate impact on the industry is tremendously positive. For Gary&#39;s more serious (and less futuristic) thoughts on programming, try some  Destroy All Software screencasts.\n  If you liked this, you might also like  Execute Program: interactive courses on TypeScript, Modern JavaScript, SQL, regular expressions, and more. Each course is made up of hundreds of interactive code examples running live in your browser.", "posttime": "2021-06-20 11:03:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,\u51fa\u751f,death", "title": "JavaScript\u7684\u51fa\u751f\u548c\u6b7b\u4ea1\uff082014\uff09[\u89c6\u9891] ", "title_en": "The Birth and Death of JavaScript (2014) [video]", "transed": 1, "url": "https://www.destroyallsoftware.com/talks/the-birth-and-death-of-javascript", "via": "", "real_tags": ["java", "\u51fa\u751f", "death"]}, {"category": "", "categoryclass": "", "imagename": "8c3a9c965d03ab65105c2e93715b30f3.jpg", "infoid": 1066970, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53bb\u5e74\u7f8e\u56fd\u653f\u5e9c\u5df2\u7ecf\u8d85\u8fc7180\u4ebf\u7f8e\u5143\u7684\u8d44\u91d1\u5236\u836f\u5546\u8fdb\u884c\u4e86\u4e00\u4e2aCovid\u75ab\u82d7\uff0c\u8fd9\u9879\u52aa\u529b\u5bfc\u81f4\u4e86\u8bb0\u5f55\u65f6\u95f4\u81f3\u5c11\u6709\u4e94\u6b21\u9ad8\u6548\u62cd\u6444\u3002\u73b0\u5728\u5b83\u5728\u5ffd\u89c6\u7684\u7814\u7a76\u9886\u57df\u503e\u5012\u4e86\u8d85\u8fc730\u4ebf\u7f8e\u5143\uff1a\u5728\u611f\u67d3\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u5c55\u4e38\u5728\u65e9\u671f\u5bf9\u6297\u75c5\u6bd2\uff0c\u6f5c\u5728\u5728\u672a\u6765\u51e0\u5e74\u4e2d\u8282\u7701\u4e86\u8bb8\u591a\u751f\u547d\u3002\n \u536b\u751f\u548c\u4eba\u7c7b\u670d\u52a1\u90e8\u4e8e\u5468\u56db\u5ba3\u5e03\u7684\u65b0\u8ba1\u5212\u5c06\u52a0\u5feb\u4e00\u4e9b\u6709\u5e0c\u671b\u7684\u6bd2\u54c1\u5019\u9009\u4eba\u7684\u4e34\u5e8a\u8bd5\u9a8c\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u90a3\u4e9b\u7b2c\u4e00\u6b3e\u836f\u7247\u53ef\u4ee5\u5728\u4eca\u5e74\u5e74\u5e95\u51c6\u5907\u597d\u3002\u706d\u866b\u8ba1\u5212\u7684\u6297\u75c5\u6bd2\u8ba1\u5212\u4e5f\u5c06\u652f\u6301\u5bf9\u5168\u65b0\u6bd2\u54c1\u7684\u7814\u7a76 - \u4e0d\u4ec5\u4ec5\u9002\u7528\u4e8e\u51a0\u72b6\u75c5\u6bd2\uff0c\u800c\u662f\u5bf9\u4e8e\u53ef\u80fd\u5bfc\u81f4\u672a\u6765\u6d41\u884c\u75c5\u7684\u75c5\u6bd2\u3002\n \u8bb8\u591a\u5176\u4ed6\u75c5\u6bd2\uff0c\u5305\u62ec\u6d41\u611f\uff0cH.I.v.\u548c\u4e19\u578b\u809d\u708e\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u836f\u4e38\u6cbb\u7597\u3002\u4f46\u5c3d\u7ba1\u6709\u8d85\u8fc7\u4e00\u5e74\u7684\u7814\u7a76\uff0c\u4f46\u5728\u5b83\u9020\u6210\u4e25\u91cd\u7834\u574f\u4e4b\u524d\uff0c\u4e0d\u5b58\u5728\u5728\u51a0\u72b6\u75c5\u6bd2\u611f\u67d3\u7684\u67d0\u4e9b\u836f\u7269\u3002\u8fd0\u8425\u626d\u66f2\u901f\u5ea6\uff0c\u7279\u6717\u666e\u653f\u5e9c\u52a0\u901fCovid-19\u7814\u7a76\u7684\u8ba1\u5212\uff0c\u5728\u75ab\u82d7\u7684\u53d1\u5c55\u4e2d\u6295\u5165\u4e86\u66f4\u591a\u7684\u8d44\u91d1\uff0c\u800c\u4e0d\u662f\u6cbb\u7597\uff0c\u8fd9\u662f\u65b0\u8ba1\u5212\u5c06\u5c1d\u8bd5\u586b\u8865\u7684\u5dee\u8ddd\u3002\n \u56fd\u5bb6\u8fc7\u654f\u548c\u4f20\u67d3\u75c5\u7814\u7a76\u6240\u4e3b\u4efb\u5b89\u4e1c\u5c3cFauci\u535a\u58eb\u548c\u8be5\u8ba1\u5212\u7684\u4e3b\u8981\u652f\u6301\u8005\u8868\u793a\uff0c\u4ed6\u671f\u5f85\u7740Covid-19\u60a3\u8005\u53ef\u4ee5\u5728\u4ed6\u4eec\u6d4b\u8bd5\u79ef\u6781\u7684\u60c5\u51b5\u4e0b\u4ece\u836f\u623f\u62ff\u8d77\u6297\u75c5\u6bd2\u836f\u7269\u7684\u65f6\u95f4\u5bf9\u4e8e\u51a0\u72b6\u75c5\u6bd2\u6216\u53d1\u5c55Covid-19\u75c7\u72b6\u3002\n \u201c\u6211\u65e9\u4e0a\u9192\u6765\uff0c\u6211\u611f\u89c9\u4e0d\u592a\u597d\uff0c\u6211\u7684\u55c5\u89c9\u548c\u5473\u9053\u6d88\u5931\uff0c\u6211\u5589\u5499\u75db\uff0c\u201dFauci\u535a\u58eb\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8bf4\u3002 \u201c\u6211\u6253\u7535\u8bdd\u7ed9\u6211\u7684\u533b\u751f\uff0c\u6211\u8bf4\uff0c'\u6211\u6709\u79d1\u8fea\u5fb7\uff0c\u6211\u9700\u8981\u4e00\u4e2a\u5904\u65b9\u3002'\u201d\n Fauci\u535a\u58eb\u7684\u652f\u6301\u5bf9\u6297\u75c5\u6bd2\u836f\u7247\u7684\u652f\u6301\u6e90\u4e8e\u4ed6\u81ea\u5df1\u4e09\u5341\u5e74\u524d\u7684\u6218\u6597\u827e\u6ecb\u75c5\u3002\u572820\u4e16\u7eaa90\u5e74\u4ee3\uff0c\u4ed6\u7684\u7814\u7a76\u6240\u8fdb\u884c\u4e86\u7814\u7a76\u5bfc\u81f4\u4e86\u4e00\u4e9b\u7528\u4e8eH.I.V\u7684\u7b2c\u4e00\u6297\u75c5\u6bd2\u836f\u7247\uff0c\u201c\u86cb\u767d\u9176\u6291\u5236\u5242\u201d\u963b\u65ad\u5fc5\u9700\u75c5\u6bd2\u86cb\u767d\uff0c\u53ef\u4ee5\u5c06\u75c5\u6bd2\u4fdd\u6301\u4e00\u751f\u3002\n \u572820\u4e16\u7eaa90\u5e74\u4ee3\u521d\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u79f0\u4e3aSofosbuvir\u7684\u6297\u75c5\u6bd2\u53ef\u4ee5\u6cbb\u6108\u4e19\u578b\u809d\u708e\u63a5\u8fd1100\uff05\u7684\u65f6\u95f4\u3002 Tamiflu\uff0c\u6d41\u611f\u7684\u836f\u4e38\uff0c\u53ef\u4ee5\u51cf\u5c11\u4ece\u611f\u67d3\u4e2d\u6062\u590d\u6240\u9700\u7684\u65f6\u95f4\uff0c\u5e76\u964d\u4f4e\u4e86\u6d41\u611f\u7684\u6d41\u611f\u7684\u673a\u4f1a\u5c06\u5728\u533b\u9662\u843d\u5730\u67d0\u4eba\u3002 \n\u5728\u5927\u6d41\u884c\u7684\u5f00\u59cb\uff0c\u7814\u7a76\u4eba\u5458\u5f00\u59cb\u5728\u4f4f\u9662\u6cbb\u7597\u4e25\u91cdCovid-19\u7684\u4eba\u4eec\u4e2d\u6d4b\u8bd5\u73b0\u6709\u7684\u6297\u75c5\u6bd2\u3002\u4f46\u8bb8\u591a\u8bd5\u9a8c\u672a\u80fd\u51fa\u73b0\u6297\u75c5\u60a3\u8005\u7684\u4efb\u4f55\u76ca\u5904\u3002\u5728\u540e\u5a01\u5c14\uff0c\u5728\u533b\u9662\u5de5\u4f5c\u7684\u9009\u62e9\u662f\u4e00\u4e2a\u9519\u8bef\u3002\u79d1\u5b66\u5bb6\u73b0\u5728\u77e5\u9053\uff0c\u8bd5\u56fe\u963b\u65ad\u51a0\u72b6\u75c5\u6bd2\u7684\u6700\u4f73\u65f6\u95f4\u662f\u5728\u75be\u75c5\u7684\u524d\u51e0\u5929\uff0c\u5f53\u75c5\u6bd2\u8fc5\u901f\u590d\u5236\u800c\u514d\u75ab\u7cfb\u7edf\u5c1a\u672a\u5b89\u88c5\u9632\u5fa1\u3002\n \u8bb8\u591a\u4eba\u7c89\u788e\u4ed6\u4eec\u7684\u611f\u67d3\u5e76\u6062\u590d\uff0c\u4f46\u5728\u5176\u4ed6\u4eba\u4e2d\uff0c\u514d\u75ab\u7cfb\u7edf\u5931\u53bb\u5e76\u5f00\u59cb\u7834\u574f\u7ec4\u7ec7\u800c\u4e0d\u662f\u75c5\u6bd2\u3002\u8fd9\u662f\u8fd9\u79cd\u81ea\u6211\u9020\u6210\u7684\u4f24\u5bb3\uff0c\u5c06\u8bb8\u591a\u4eba\u4e0eCovid-19\u9001\u5230\u533b\u9662\uff0c\u56e0\u4e3a\u51a0\u72b6\u75c5\u6bd2\u590d\u5236\u9010\u6e10\u51cf\u5c11\u3002\u56e0\u6b64\uff0c\u5728\u611f\u67d3\u7684\u65e9\u671f\u963b\u65ad\u590d\u5236\u7684\u836f\u7269\u53ef\u80fd\u5728\u5bf9\u75be\u75c5\u7684\u540e\u671f\u9636\u6bb5\u8fdb\u884c\u7684\u60a3\u8005\u7684\u8bd5\u9a8c\u4e2d\u5931\u8d25\u3002\n  \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u53ea\u6709\u4e00\u4e2a\u6297\u75c5\u6bd2\u8bc1\u660e\u4e86\u533b\u9662\u4eba\u6c11\u7684\u660e\u786e\u6548\u76ca\uff1a\u96f7\u8fea\u5c14\u3002\u6700\u521d\u88ab\u8c03\u67e5\u4e3a\u57c3\u535a\u62c9\u7684\u6f5c\u5728\u6cbb\u7597\uff0c\u836f\u7269\u4f3c\u4e4e\u7f29\u77ed\u4e86\u9759\u8109\u6ce8\u5c04\u60a3\u8005\u7684Covid-19\u8fc7\u7a0b\u3002 10\u6708\uff0c\u5b83\u6210\u4e3a\u7b2c\u4e00\u4e2a - \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u552f\u4e00\u7684\u6297\u75c5\u6bd2\u836f\u624d\u80fd\u83b7\u5f97\u5168\u90e8f.d.a\u3002\u6279\u51c6\u6cbb\u7597\u75be\u75c5\u3002\n \u7136\u800c\uff0cRemdesivir\u7684\u8868\u73b0\u4f7f\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u4e0d\u53d7\u5f71\u54cd\u3002 11\u6708\uff0c\u4e16\u754c\u536b\u751f\u7ec4\u7ec7\u5efa\u8bae\u4f7f\u7528\u8be5\u836f\u3002\n \u5982\u679c\u4eba\u4eec\u5728Covid-19\u4f5c\u4e3a\u836f\u4e38\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u8ffd\u6c42\u5b83\uff0c\u96f7\u5fb7\u585e\u7ef4\u5c14\u53ef\u80fd\u4f1a\u66f4\u6709\u6548\u5730\u5de5\u4f5c\u3002\u4f46\u5728\u5176\u6279\u51c6\u7684\u5236\u5242\u4e2d\uff0c\u5316\u5408\u7269\u65e0\u6cd5\u53e3\u670d\u5de5\u4f5c\u3002\u5b83\u4e0d\u80fd\u5728\u5634\u91cc\u5230\u80c3\u4e2d\u5b58\u6d3b\u5230\u5faa\u73af\u7cfb\u7edf\u3002\n \u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u7814\u7a76\u4eba\u5458\u6b63\u5728\u6d4b\u8bd5\u5df2\u77e5\u7684\u5176\u4ed6\u6297\u75c5\u6bd2\u6bd2\u7387\uff0c\u8fd9\u4e9b\u6297\u75c5\u6bd2\u7fa4\u4f53\u4ee5\u4e38\u5f62\u5f0f\u6b63\u5e38\u5de5\u4f5c\u3002\u5176\u4e2d\u4e00\u79cd\u79f0\u4e3aMolnupiravir\u7684\u5316\u5408\u7269\u4e8e2019\u5e74\u7531\u57c3\u9ed8\u91cc\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u5f00\u53d1\uff0c\u5e76\u5df2\u7ecf\u9488\u5bf9\u75c5\u6bd2\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u5305\u62ec\u6d41\u611f\u548c\u59d4\u5185\u745e\u62c9\u7fa4\u8111\u708e\u75c5\u6bd2\u3002\n \u4e0e\u8fc8\u963f\u5bc6\u7684Ridgeback BioTherapeutics\u5408\u4f5c\uff0cEmory\u56e2\u961f\u5728\u5c0f\u9f20\u4e2d\u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u8fd9\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u9ed8\u514b\u63a5\u8fd1\u4ed6\u4eec\u5c06\u836f\u7269\u878d\u5165Covid-19\u7684\u4eba\u4f53\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u3002 \n\u201c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e2a\u5206\u5b50\u771f\u7684\u5f88\u68d2\uff0c\u201d\u9ed8\u514b\u4f20\u67d3\u75c5\u548c\u75ab\u82d7\u7814\u7a76\u526f\u603b\u88c1Daria Hazuda\u8bf4\u3002\n \u7136\u800c\uff0c\u5728\u4f4f\u9662\u60a3\u8005\u7684\u8bd5\u9a8c\u4e2d\uff0cMolnupiravir\u4f3c\u4e4e\u5bf9\u8fd9\u79cd\u75be\u75c5\u6ca1\u6709\u5f71\u54cd\u3002\u56db\u6708\uff0c\u516c\u53f8\u5ba3\u5e03\u4ed6\u4eec\u6b63\u5728\u5ba1\u5224\u5ba1\u5224\u3002\n \u201c\u6211\u660e\u767d\u4e86\uff0c\u6211\u5c31\u50cf\uff0c\u201d\u662f\u7684\uff0c\u6ca1\u6709Duh\uff0c\u201c\u201d\u5317\u5361\u7f57\u6765\u7eb3\u5927\u5b66\u7684\u75c5\u6bd2\u5b66\u5bb6\u8482\u59c6\u753b\u535a\u58eb\u8bf4\u3002 \u201c\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u5bf9\u8fd9\u4e9b\u79cd\u7c7b\u7684\u836f\u7269\u4e0d\u4f1a\u5728\u4ed6\u4eec\u751f\u75c5\u51e0\u5929\u65f6\u5bf9\u67d0\u4eba\u7684\u7ed3\u679c\u4ea7\u751f\u6025\u5267\u6539\u5584\u3002\u201d\n \u8be5\u516c\u53f8\u53bb\u5e74\u79cb\u5b63\u5f00\u59cb\u4e86\u7b2c\u4e8c\u6b21\u7814\u7a76\uff0c\u8fd9\u6b21\u6d4b\u8bd5\u6700\u8fd1\u8bca\u65ad\u79d1\u7ef4\u5fb7-19\u7684\u4eba\u7684\u836f\u7269\u3002\u8be5\u8bd5\u9a8c\u6b63\u5728\u7ee7\u7eed\uff0c\u9ed8\u514b\u62db\u52df\u5177\u6709\u66f4\u9ad8\u611f\u67d3\u98ce\u9669\u7684\u5fd7\u613f\u8005\uff0c\u4f8b\u5982\u60a3\u6709\u80a5\u80d6\u548c\u7cd6\u5c3f\u75c5\u7684\u8001\u5e74\u4eba\u3002 Hazuda\u535a\u58eb\u8868\u793a\uff0c\u5ba1\u5224\u5e94\u572810\u6708\u4efd\u63d0\u4f9b\u660e\u786e\u7684\u7ed3\u679c\u3002\n \u53bb\u5e74\uff0c\u653f\u5e9c\u5bf9Covid-19\u6cbb\u7597\u7684\u8d44\u91d1\u4e13\u6ce8\u4e8e\u5c11\u6570\u5019\u9009\u4eba\uff0c\u4f8b\u5982\u5355\u514b\u9686\u6297\u4f53\u548c\u96f7\u5fb7\u5fb7\u5c14\u3002\u5173\u4e8e\u6297\u75c5\u6bd2\u7684\u8bb8\u591a\u7814\u7a76\u90fd\u5f88\u5c0f\u800c\u4e14\u8d44\u91d1\u4e0d\u8db3\u3002 1\u6708\u4efd\uff0c\u6536\u5165\u7684\u62dc\u767b\u653f\u5e9c\u5f00\u59cb\u8bbe\u8ba1\u4e13\u7528\u4e8e\u6297\u75c5\u4e38\u7684\u65b0\u8ba1\u5212\u3002\n  \u4e0a\u5468\u770b\u5230\u4e86\u8fd9\u4e2a\u89c4\u5212\u7684\u7b2c\u4e00\u4e2a\u7ed3\u679c\u3002\u536b\u751f\u548c\u4eba\u7c7b\u670d\u52a1\u90e8\u5ba3\u5e03\uff0c\u5b83\u5c06\u4ee512\u4ebf\u7f8e\u5143\u7684\u4ef7\u683c\u4eceMerck 170\u4e07\u6876\u8d2d\u4e70\uff0c\u53ea\u8981\u76ee\u524d\u7684\u8bd5\u9a8c\u5bfc\u81f4\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40\u7684\u6388\u6743\u3002\u636e\u62dc\u767b\u653f\u5e9c\u7684Covid-19\u56de\u5e94\u56e2\u961f\u7684\u9996\u5e2d\u79d1\u5b66\u5b98\u5458David Kessler\u535a\u58eb\uff0c\u653f\u5e9c\u53ef\u80fd\u4f1a\u5728\u4e34\u5e8a\u8bd5\u9a8c\u4e2d\u5bfb\u6c42\u540c\u7c7b\u5176\u4ed6\u6297\u75c5\u6bd2\u4eba\u5458\u7684\u540c\u7c7b\u4ea4\u6613\u3002\n \u5e0c\u671b\u201c\u6211\u4eec\u53ef\u4ee5\u5728\u79cb\u5b63\u7ed3\u675f\u65f6\u83b7\u5f97\u4e00\u4e2a\u6297\u75c5\u6bd2\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5173\u95ed\u8fd9\u4e00\u7ae0\u8282\u7684\u6d41\u884c\u75c5\uff0c\u201dKessler\u535a\u58eb\u5728\u63a5\u53d7\u91c7\u8bbf\u65f6\u8bf4\u3002 \n\u653f\u5e9c\u6b63\u5728\u8003\u8651\u7684\u836f\u7269\u4e4b\u4e00\u662f\u7531Atea Pharmaceuticals\u5f00\u53d1\u7684527\u5e74\u3002\u8be5\u5316\u5408\u7269\u5df2\u7ecf\u8bc1\u660e\u662f\u5b89\u5168\u6709\u6548\u7684\u4f5c\u4e3a\u5bf9\u4e19\u578b\u809d\u708e\u7684\u6cbb\u7597\uff0c\u63d0\u51fa\u65e9\u671f\u7814\u7a76\u8868\u660e\u5b83\u4e5f\u53ef\u80fd\u5bf9Covid-19\u52aa\u529b\u3002 Roche\u4e0eAtea\u5408\u4f5c\uff0c\u5728\u4eba\u4eec\u4e2d\u6d4b\u8bd5\u5b83\uff0c\u516c\u53f8\u76ee\u524d\u6b63\u5728\u8fd0\u884c\u9636\u6bb5\u7684\u4e34\u5e8a\u8bd5\u9a8c\u3002\n \u653f\u5e9c\u96f7\u8fbe\u4e0a\u7684\u5176\u4ed6\u836f\u7269\u662f\u7531\u8f89\u745e\u7684\u79d1\u5b66\u5bb6\u521b\u9020\u7684\uff0c\u4ece2000\u5e74\u521d\u6700\u521d\u8bbe\u8ba1\u7684\u5206\u5b50\u8c03\u6574\u4e3aSARS\u7684\u6f5c\u5728\u836f\u7269\u3002\u8be5\u836f\u7269\u5750\u5728\u67b6\u5b50\u4e0a\u591a\u5e74\u6765\uff0c\u4f46\u53bb\u5e74\u6625\u5929\uff0c\u79d1\u5b66\u5bb6\u51b3\u5b9a\u4fee\u6539\u5176\u7ed3\u6784\uff0c\u4ee5\u4fbf\u5bf9\u65b0\u7684\u51a0\u72b6\u75c5\u6bd2\u7684\u86cb\u767d\u9176\u6709\u6548\u3002 200\u591a\u4e2a\u8f89\u745e\u7684\u7814\u7a76\u4eba\u5458\u52a0\u5165\u4e86\u5206\u5b50\u4e0a\u7684\u52aa\u529b\uff0c\u73b0\u5728\u5df2\u77e5\u4e3aPF-07321332\u3002\n \u8be5\u836f\u7269\u88ab\u8bbe\u8ba1\u4e3a\u9759\u8109\u5185\uff0c\u4f46\u8f89\u745e\u7684\u7814\u7a76\u4eba\u5458\u6210\u529f\u5730\u6539\u53d8\u4e86\u5176\u7ed3\u6784\u4f5c\u4e3a\u836f\u4e38\u7684\u5de5\u4f5c\u3002\u5f53\u5c0f\u9f20\u53e3\u670d\u7ed9\u836f\u65f6\uff0c\u5b83\u5728\u4f53\u5185\u8fbe\u5230\u8db3\u591f\u9ad8\u7684\u6c34\u5e73\u4ee5\u963b\u65ad\u51a0\u72b6\u75c5\u6bd2\u3002 PFizer\u4e8e3\u6708\u63a8\u51fa\u4e86\u4e34\u5e8a\u8bd5\u9a8c\uff0c\u4ee5\u7814\u7a76\u5176\u5728\u4eba\u4eec\u7684\u5b89\u5168\u6027\uff0c\u5e76\u671f\u671b\u4e0b\u4e2a\u6708\u642c\u5230\u540e\u671f\u6d4b\u8bd5\u3002\n Kessler\u535a\u58eb\u627f\u8ba4\uff0c\u4f7f\u7528\u6b64\u7c7b\u836f\u7247\u5c06\u5728Covid-19\u4e2d\u9a7e\u9a76\u4f4f\u9662\u6cbb\u7597\u548c\u6b7b\u4ea1\u7684\u6311\u6218\u5c06\u5b58\u5728\u6311\u6218\u3002\u4eba\u4eec\u9700\u8981\u5728\u6d4b\u8bd5\u79ef\u6781\u7684\u60c5\u51b5\u4e0b\u7acb\u5373\u83b7\u5f97\u836f\u7269\u3002 \u201c\u60a8\u7684\u6d4b\u8bd5\u8ba1\u5212\u5c06\u4e0e\u60a8\u7684\u5f85\u9047\u76f8\u5173\u8054\uff0c\u201d\u4ed6\u8bf4\u3002\n Fauci\u535a\u58eb\u8bf4\uff0c\u5982\u679c\u6297\u75c5\u6bd2\u7814\u7a76\u7684\u5386\u53f2\u662f\u4efb\u4f55\u6307\u5bfc\uff0c\u90a3\u4e48Covid-19\u7684\u7b2c\u4e00\u4e2a\u836f\u7269\u53ef\u80fd\u53ea\u4f1a\u4e3a\u75be\u75c5\u63d0\u4f9b\u9002\u5ea6\u7684\u76ca\u5904\u3002\u4f46\u8fd9\u5c06\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u59cb\u3002\n \u201c\u968f\u7740\u6240\u6709\u8fd9\u4e9b\u836f\u7269\uff0c\u6211\u4eec\u5df2\u7ecf\u5904\u7406\u591a\u5e74\u6765\uff0c\u6211\u4eec\u4ece\u6765\u6ca1\u6709\u5728\u8759\u8760\u7b2c\u4e00\u6b21\u6253\u51fa\u5bb6\u4e61\uff0c\u201dFauci\u535a\u58eb\u8bf4\u3002 \u201c\u4e00\u6761\u7ebf\u9a71\u52a8\u5de6\u4fa7\u573a\u5899\u58c1\u5f00\u59cb\u5c31\u4f1a\u771f\u7684\u5f88\u597d\u3002\u201d\n \u653f\u5e9c\u8fd8\u5c06\u82b1\u8d39\u9ad8\u8fbe12\u4ebf\u7f8e\u5143\u7684\u7814\u7a76\u4e2d\u5fc3\uff0c\u79d1\u5b66\u5bb6\u4eec\u5c06\u5728\u5176\u4ed6\u65b9\u9762\u5bf9\u51a0\u72b6\u75c5\u6bd2\u963b\u65ad\u51a0\u72b6\u75c5\u6bd2\u7684\u836f\u7269\u8fdb\u884c\u65e9\u671f\u7814\u7a76\u3002\u4e00\u4e9b\u836f\u7269\u53ef\u80fd\u4f1a\u5e72\u6270\u5176\u4ed6\u5fc5\u9700\u7684\u75c5\u6bd2\u86cb\u767d\uff0c\u800c\u5176\u4ed6\u836f\u7269\u53ef\u80fd\u4f1a\u4f7f\u75c5\u6bd2\u57fa\u56e0\u4e0d\u53ef\u80fd\u3002 \n\u5373\u4f7f\u4e0b\u4e00\u4ee3\u836f\u4e38\u6ca1\u6709\u8fbe\u5230\u51e0\u5e74\uff0c\u8bb8\u591a\u79d1\u5b66\u5bb6\u4e5f\u8868\u793a\uff0c\u7814\u7a76\u5c06\u662f\u4e00\u4e2a\u826f\u597d\u7684\u6295\u8d44\u3002 \u54c8\u4f5b\u5927\u5b66\u533b\u5b66\u9662\u7684\u6cbb\u7597\u7ffb\u8bd1\u603b\u76d1Mark Namchuk\u8bf4\uff1a\u201c\u8fd9\u53ef\u80fd\u6709\u52a9\u4e8e\u8fd9\u4e00\u6d41\u884c\u75c5\uff0c\u5e76\u6f5c\u5728\u5730\u4e3a\u4e0b\u4e00\u4e2a\u8fa9\u62a4\u63d0\u4f9b\u4e86\u7b2c\u4e00\u9053\u9632\u7ebf\u3002  \u8be5\u65b9\u6848\u4e0d\u4ec5\u652f\u6301\u5bf9\u51a0\u72b6\u75c5\u6bd2\u7684\u836f\u4e38\u7684\u7814\u7a76\uff0c\u800c\u4e14\u8fd8\u9488\u5bf9\u5176\u4ed6\u9ad8\u98ce\u9669\u75c5\u539f\u4f53\uff0c\u4f8b\u5982\u9ec4\u75c5\u6bd2\uff0c\u8fd9\u5bfc\u81f4\u767b\u9769\u70ed\u548c\u897f\u5c3c\u7f57\u6cb3\u70ed\u548c\u6bd2\u7d20\u7b49\u75be\u75c5\uff0c\u8fd9\u5bfc\u81f4\u868a\u5b50\u822c\u7684\u75be\u75c5\u5982Chikungunya \u548c\u4e1c\u65b9\u5927\u4e8c\u9aa8\u8111\u708e\u3002  \u201c\u5c06\u603b\u4f1a\u6709\u5a01\u80c1\uff0c\u201d\u9a6c\u4f1a\u535a\u58eb\u8bf4\u3002 \u201c\u6211\u8ba4\u4e3a\u8fd9\u5c06\u662f\u5bf9\u6bd2\u54c1\u7684\u8fdc\u7a0b\u9700\u6c42\u3002\u201d ", "note_en": "The U.S. government spent more than $18 billion last year funding drugmakers to make a Covid vaccine, an effort that led to at least five highly effective shots in record time. Now it\u2019s pouring more than $3 billion on a neglected area of research: developing pills to fight the virus early in the course of infection, potentially saving many lives in the years to come.\n The new program,  announced on Thursday by the Department of Health and Human Services, will speed up the clinical trials of a few promising drug candidates. If all goes well, some of those first pills could be ready by the end of the year. The Antiviral Program for Pandemics will also support research on entirely new drugs \u2014 not just for the coronavirus, but for viruses that could cause future pandemics.\n A number of other viruses, including influenza, H.I.V. and hepatitis C, can be treated with a simple pill. But despite more than a year of research, no such pill exists to treat someone with a coronavirus infection before it wreaks havoc. Operation Warp Speed, the Trump administration\u2019s program for accelerating Covid-19 research,  invested far more money in the development of vaccines than of treatments, a gap that the new program will try to fill.\n Dr. Anthony Fauci, the director of the National Institute of Allergy and Infectious Diseases and a key backer of the program, said he looked forward to a time when Covid-19 patients could pick up antiviral pills from a pharmacy as soon as they tested positive for the coronavirus or develop Covid-19 symptoms.\n \u201cI wake up in the morning, I don\u2019t feel very well, my sense of smell and taste go away, I get a sore throat,\u201d Dr. Fauci said in an interview. \u201cI call up my doctor and I say, \u2018I have Covid and I need a prescription.\u2019\u201d\n Dr. Fauci\u2019s support for research on antiviral pills stems from his own experience fighting AIDS three decades ago. In the 1990s, his institute conducted research that led to some of the first antiviral pills for H.I.V., \u201cprotease inhibitors\u201d that block an essential virus protein and can keep the virus at bay for a lifetime.\n In the early 2000s, researchers found that an antiviral called sofosbuvir could cure hepatitis C close to 100 percent of the time. Tamiflu, a pill for influenza, can  cut the time it takes to recover from an infection, and reduce the chances that a bout of the flu will land someone in the hospital.\n At the start of the pandemic, researchers began testing existing antivirals in people hospitalized with severe Covid-19. But many of those trials failed to show any benefit from the antivirals. In hindsight, the choice to work in hospitals was a mistake. Scientists now know that the best time to try to block the coronavirus is in the first few days of the disease, when the virus is replicating rapidly and the immune system has not yet mounted a defense.\n Many people crush their infection and recuperate, but in others, the immune system misfires and starts damaging tissues instead of viruses. It\u2019s this self-inflicted damage that sends many people with Covid-19 to the hospital, as the coronavirus replication is tapering off. So a drug that blocks replication early in an infection might very well fail in a trial on patients who have progressed to later stages of the disease.\n  So far, only one antiviral has demonstrated a clear benefit to people in hospitals: remdesivir. Originally investigated as a potential cure for Ebola, the drug seems to shorten the course of Covid-19 when given intravenously to patients. In October, it became the first \u2014 and so far, the only \u2014 antiviral drug to gain  full F.D.A. approval to treat the disease.\n Yet remdesivir\u2019s performance has left many researchers  underwhelmed. In November, the World Health Organization  recommended against using the drug.\n Remdesivir might work more effectively if people could take it earlier in the course of Covid-19 as a pill. But in its approved formulation, the compound doesn\u2019t work orally. It can\u2019t survive the passage from the mouth to the stomach to the circulatory system.\n Researchers from around the world are testing other antivirals already known to work in pill form. One such compound, called molnupiravir, was developed in 2019 by researchers at Emory University and has been tested against viruses including influenza and  Venezuelan equine encephalitis virus.\n In partnership with Ridgeback Biotherapeutics of Miami, the Emory team carried out experiments in mice that were so impressive that Merck approached them to bring the drug into human clinical trials for Covid-19.\n \u201cWe thought this molecule was really amazing,\u201d said Daria Hazuda, vice president of infectious disease and vaccine research at Merck.\n In a trial of hospitalized patients, however, molnupiravir seemed to have no effect on the disease. In April, the companies  announced they were scrapping the trial.\n \u201cI see that, and I\u2019m like, \u2018Yeah, no duh,\u2019\u201d said Dr. Tim Sheahan, a virologist at the University of North Carolina. \u201cIt\u2019s not surprising to me that those kinds of medications would not make a dramatic improvement in someone\u2019s outcome when they\u2019ve been sick for several days.\u201d\n The companies began a  second study last fall, this time testing the drug on people recently diagnosed with Covid-19. That trial is continuing, and Merck is recruiting volunteers with a higher risk of infection, such as older people with obesity and diabetes. Dr. Hazuda said the trial should deliver clear results by October.\n Last year, the government\u2019s funding of Covid-19 treatments focused on a handful of candidates, such as monoclonal antibodies and remdesivir. Many other studies on antivirals were  small and underfunded. In January, the incoming Biden administration began designing a new program dedicated to antiviral pills.\n  Last week saw the first results of this planning. The Department of Health and Human Services  announced that it would purchase from Merck 1.7 million doses of molnupiravir at a cost of $1.2 billion, provided that the current trial leads to authorization by the Food and Drug Administration. The government may seek similar deals for two other antivirals far along in clinical trials, according to Dr. David Kessler, the chief science officer of the Biden administration\u2019s Covid-19 response team.\n The hope \u201cis that we can get an antiviral by the end of the fall that can help us close out this chapter of the epidemic,\u201d Dr. Kessler said in an interview.\n One of the drugs the government is considering is  AT-527, developed by Atea Pharmaceuticals. The compound has already proven safe and effective as a treatment for hepatitis C, and early studies suggested it might also work against Covid-19. Roche has partnered with Atea to test it in people, and the companies are currently running a late-stage clinical trial.\n The other drug on the government\u2019s radar was created by scientists at Pfizer, adapted from a molecule initially designed in the early 2000s as a potential drug for SARS. That drug had sat on the shelf for years, but last spring, the scientists decided to modify its structure so that it would work against the new coronavirus\u2019s protease. More than 200 Pfizer researchers joined forces on the effort on the molecule, known for now as PF-07321332.\n The drug had been designed to be taken intravenously, but the Pfizer researchers succeeded in altering its structure to work as a pill. When  mice were given the drug orally, it reached high enough levels in the body to block the coronavirus. Pfizer  launched a clinical trial in March to study its safety in people, and expects to move to later-stage testing next month.\n Dr. Kessler acknowledged that there will be challenges in using such pills to drive down hospitalizations and deaths from Covid-19. People will need to gain access to the drugs as soon as they test positive. \u201cYour testing programs are going to have to be linked to your treatment,\u201d he said.\n And if the history of antiviral research is any guide, the first drugs for Covid-19 will probably only offer modest benefit against the disease, Dr. Fauci said. But that would be a good start.\n \u201cWith all of these drugs that we\u2019ve dealt with over the years, we\u2019ve never hit a home run the first time at bat,\u201d Dr. Fauci said. \u201cA line drive off the left-field wall to start would be really good.\u201d\n The government will also spend up to $1.2 billion on research centers where scientists will carry out early-stage studies on drugs that block the coronavirus in other ways. Some drugs may interfere with other essential viral proteins, while others may make it impossible to copy the virus\u2019s genes.\n Even if the next generation of pills doesn\u2019t arrive for a few years, many scientists say that the research will be a good investment. \u201cIt could help with this pandemic and potentially provide a first line of defense for the next one,\u201d said Mark Namchuk, the director of therapeutic translation at Harvard Medical School.\n The program will support not only research on pills that work against coronaviruses, but also against other high-risk pathogens, such as flaviviruses, which cause diseases such as dengue fever and West Nile fever, and togaviruses, which cause mosquito-borne diseases like chikungunya and eastern equine encephalitis.\n \u201cThere will always be a threat,\u201d Dr. Fauci said. \u201cI think there\u2019s going to be a long-range need for drugs.\u201d", "posttime": "2021-06-20 11:02:20", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u6cbb\u7597,treat,\u7814\u7a76", "title": "\u6cbb\u7597covid-19\u7684\u4e38\uff1f \u7f8e\u56fd\u535a\u89c8\u4f1a ", "title_en": "A Pill to Treat Covid-19? The U.S. Is Betting on It", "transed": 1, "url": "https://www.nytimes.com/2021/06/17/health/covid-pill-antiviral.html", "via": "", "real_tags": ["\u7f8e\u56fd", "\u6cbb\u7597", "treat", "\u7814\u7a76"]}]
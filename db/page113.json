[{"category": "", "categoryclass": "", "imagename": "5bcb13a1b7250dfb835a985f838806b4.jpg", "infoid": 1072448, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": " - \u5377\u3002 86\uff0c\u6ca1\u6709\u3002 32\uff081920\u5e7410\u67081\u65e5\uff09; v\u300285\uff0c\u6ca1\u6709\u3002 33\uff081920\u5e7410\u67082\u65e5\uff09-V\u3002 88\uff0c\u5426\u3002 201\uff081924\u5e743\u670818\u65e5\uff09\u3002\n\u7ebd\u7ea6\u683c\u5170\u5fb7\u3002 \uff08\u7ebd\u7ea6\uff0c\u7ebd\u7ea6\uff097\u67087\u65e5\u3002 1922\u5e74\uff0cp\u3002 87.\u4ece\u56fd\u4f1a\u56fe\u4e66\u9986\u68c0\u7d22\uff0cwww.loc.gov/Item/sn83045774/1922-05-07/1922-05-07/D-1/\u3002", "note_en": "-\u00a0 Vol. 86, no. 32 (Oct. 1, 1920) ; v. 85, no. 33 (Oct. 2, 1920)-v. 88, no. 201 (Mar. 18, 1924).\n  -\u00a0 Available on microfilm from Library of Congress, Photoduplication Service, and New York Public Library.\n  -\u00a0 Archived issues are available in digital format from the Library of Congress Chronicling America online collection.\n The Library of Congress believes that the newspapers in Chronicling America are in the public domain or have no known copyright restrictions. Newspapers published in the United States more than 95 years ago are in the public domain in their entirety. Any newspapers in Chronicling America that were published less than 95 years ago are also believed to be in the public domain, but may contain some copyrighted third party materials. Researchers using newspapers published less than 95 years ago should be alert for modern content (for example, registered and renewed for copyright and published with notice) that may be copyrighted. Responsibility for making an independent legal assessment of an item and securing any necessary permissions ultimately rests with persons desiring to use the item.\n The NEH awardee responsible for producing each digital object is presented in the Chronicling America page display, below the page image \u2013 e.g. Image produced by the Library of Congress. For more information on current NDNP awardees, see  https://www.loc.gov/ndnp/listawardees.html.\n For more information on Library of Congress policies and disclaimers regarding rights and reproductions, see  https://www.loc.gov/homepage/legal.html\n Citations are generated automatically from bibliographic data as a convenience, and may not be complete or accurate.\n      The New York herald. (New York, NY) 7 May. 1922, p. 87. Retrieved from the Library of Congress, www.loc.gov/item/sn83045774/1922-05-07/ed-1/.", "posttime": "2022-01-09 21:50:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5168\u4e16\u754c,world,item", "title": "\u5168\u4e16\u754c\u5728\u4e00\u767e\u5e74\uff081922\u5e74\uff09\u662f\u4ec0\u4e48", "title_en": "What the world will be like in a hundred years (1922)", "transed": 1, "url": "https://www.loc.gov/resource/sn83045774/1922-05-07/ed-1?sp=87", "via": "", "real_tags": ["\u5168\u4e16\u754c", "world", "item"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072447, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u591a\u5f0f\u8054\u8fd0\u56fe\u50cf\u67e5\u770b\u5668", "note_en": "Multimodal image viewer", "posttime": "2022-01-09 21:50:22", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u591c\u95f4,image,\u56fe\u50cf", "title": "\u4f26\u52c3\u6717\u7684\u201c\u591c\u95f4\u89c2\u5bdf\u201d717-\u5343\u5146\u50cf\u7d20\u56fe\u50cf", "title_en": "717-gigapixel image of Rembrandt's 'The Night Watch'", "transed": 1, "url": "https://hyper-resolution.org/view.html?pointer=0.259,0.015&r=0.0000,0.1920,1.0000,0.6351&i=Rijksmuseum/SK-C-5/SK-C-5_VIS_20-um_2019-12-21", "via": "", "real_tags": ["\u591c\u95f4", "image", "\u56fe\u50cf"]}, {"category": "", "categoryclass": "", "imagename": "67fac4bdde844113c72d3dcffba0a648.jpg", "infoid": 1072446, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7cfb\u597d\u5b89\u5168\u5e26\u3002 NVIDIA\u7814\u7a76\u6b63\u5728\u91cd\u65b0\u8c03\u6574\u4e00\u4e2a\u65b0\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\uff0c\u4ece\u6807\u51c6\u76842D\u56fe\u50cf\u521b\u5efa3D\u5bf9\u8c61\u6a21\u578b - \u5e76\u4e14\u53ef\u4ee5\u5c06\u50cf\u9a91\u58eb\u9a91\u58eb\u7684AI\u52a8\u529b\u7684KITT\u4e00\u6837\u5e26\u6765\u6807\u5fd7\u6027\u7684\u6c7d\u8f66 - \u5728NVIDIA Omniverse\u4e2d\u3002\n\u201c\u56e0\u4e3a\u6211\u4eec\u5728\u771f\u5b9e\u7684\u56fe\u50cf\u4e0a\u57f9\u8bad\u800c\u4e0d\u662f\u5178\u578b\u7684\u7ba1\u9053\uff0c\u5b83\u4f9d\u8d56\u4e8e\u5408\u6210\u6570\u636e\uff0cAI\u6a21\u578b\u66f4\u597d\u5730\u63a8\u5e7f\u5230\u73b0\u5b9e\u4e16\u754c\u5e94\u7528\u7a0b\u5e8f\uff0c\u201d\u8be5\u9879\u76ee\u7684\u4f5c\u8005NVIDIA\u7814\u7a76\u5458Jun Gao\u8bf4\u3002\n\u56e0\u4e3a\u4ece\u4e0d\u540c\u89d2\u5ea6\u6355\u83b7\u76f8\u540c\u5bf9\u8c61\u7684\u5b9e\u65f6\u4e16\u754c\u6570\u636e\u96c6\u662f\u7f55\u89c1\u7684\uff0c\u4f7f\u75282D\u52303D\u7684\u56fe\u50cf\u7684\u5927\u591a\u6570AI\u5de5\u5177\u90fd\u4f7f\u7528ShapEnet\u200b\u200b\u7b49\u5408\u62103D\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\u3002\nGTC\u6ce8\u518c\u662f\u514d\u8d39\u7684\uff0c\u5e76\u4e8e4\u670823\u65e5\u5f00\u653e\u3002\u4e0e\u4f1a\u8005\u5c06\u4e8e5\u670811\u65e5\u53ef\u83b7\u5f97\u6309\u9700\u5185\u5bb9\u3002", "note_en": "Fasten your seatbelts.  NVIDIA Research is revving up a new deep learning engine that creates 3D object models from standard 2D images \u2014 and can bring iconic cars like the  Knight Rider\u2019s AI-powered KITT to life \u2014 in  NVIDIA Omniverse.\n Developed by the NVIDIA AI Research Lab in Toronto, the GANverse3D application inflates flat images into realistic 3D models that can be visualized and controlled in virtual environments. This capability could help architects, creators, game developers and designers easily add new objects to their mockups without needing expertise in 3D modeling, or a large budget to spend on renderings.\n A single photo of a car, for example, could be turned into a 3D model that can drive around a virtual scene, complete with realistic headlights, tail lights and blinkers.\n  To generate a dataset for training, the researchers harnessed a generative adversarial network, or GAN, to  synthesize images depicting the same object from multiple viewpoints \u2014 like a photographer who walks around a parked vehicle, taking shots from different angles. These multi-view images were plugged into a  rendering framework for inverse graphics, the process of inferring 3D mesh models from 2D images.\n Once trained on multi-view images, GANverse3D needs only a single 2D image to predict a 3D mesh model. This model can be used with a 3D neural renderer that gives developers control to customize objects and swap out backgrounds.\n When imported as an extension in the  NVIDIA Omniverse platform and run on  NVIDIA RTX GPUs, GANverse3D can be used to recreate any 2D image into 3D \u2014 like the beloved crime-fighting car KITT, from the popular 1980s  Knight Rider TV show.\n  Instead, with no aid from 3D assets, \u201cWe turned a GAN model into a very efficient data generator so we can create 3D objects from any 2D image on the web,\u201d said Wenzheng Chen, research scientist at NVIDIA and lead author on the project.\n \u201cBecause we trained on real images instead of the typical pipeline, which relies on  synthetic data, the AI model generalizes better to real-world applications,\u201d said NVIDIA researcher Jun Gao, an author on the project.\n The  research behind GANverse3D will be presented at two upcoming conferences: the International Conference on Learning Representations in May, and the Conference on Computer Vision and Pattern Recognition, in June.\n  Creators in gaming, architecture and design rely on virtual environments like the NVIDIA Omniverse simulation and collaboration platform to test out new ideas and visualize prototypes before creating their final products. With  Omniverse Connectors, developers can use their preferred 3D applications in Omniverse to simulate complex virtual worlds with real-time ray tracing.\n But not every creator has the time and resources to create 3D models of every object they sketch. The cost of capturing the number of multi-view images necessary to render a showroom\u2019s worth of cars, or a street\u2019s worth of buildings, can be prohibitive.\n That\u2019s where a trained GANverse3D application can be used to convert standard images of a car, a building or even a horse into a 3D figure that can be customized and animated in Omniverse.\n To recreate KITT, the researchers simply fed the trained model an image of the car, letting GANverse3D predict a corresponding 3D textured mesh, as well as different parts of the vehicle such as wheels and headlights. They then used  NVIDIA Omniverse Kit and  NVIDIA PhysX tools to convert the predicted texture into high-quality materials that give KITT a more realistic look and feel, and placed it in a dynamic driving sequence.\n \u201cOmniverse allows researchers to bring exciting, cutting-edge research directly to creators and end users,\u201d said Jean-Francois Lafleche, deep learning engineer at NVIDIA. \u201cOffering GANverse3D as an extension in Omniverse will help artists create richer virtual worlds for game development, city planning or even training new machine learning models.\u201d\n  Because real-world datasets that capture the same object from different angles are rare, most AI tools that convert images from 2D to 3D are trained using  synthetic 3D datasets like ShapeNet.\n To obtain multi-view images from real-world data \u2014 like images of cars available publicly on the web \u2014 the NVIDIA researchers instead turned to a GAN model, manipulating its neural network layers to turn it into a data generator.\n The team found that opening the first four layers of the neural network and freezing the remaining 12 caused the GAN to render images of the same object from different viewpoints.\n Keeping the first four layers frozen and the other 12 layers variable caused the neural network to generate different images from the same viewpoint. By manually assigning standard viewpoints, with vehicles pictured at a specific elevation and camera distance, the researchers could rapidly generate a multi-view dataset from individual 2D images.\n The final model, trained on 55,000 car images generated by the GAN, outperformed an inverse graphics network trained on the popular Pascal3D dataset.\n Read the  full ICLR paper, authored by Wenzheng Chen, fellow NVIDIA researchers Jun Gao and Huan Ling, Sanja Fidler, director of NVIDIA\u2019s Toronto research lab, University of Waterloo student Yuxuan Zhang, Stanford student Yinan Zhang and MIT professor Antonio Torralba. Additional collaborators on the CVPR paper include Jean-Francois Lafleche, NVIDIA researcher Kangxue Yin and Adela Barriuso.\n The NVIDIA Research team consists of more than 200 scientists around the globe, focusing on areas such as AI, computer vision, self-driving cars, robotics and graphics. Learn more about the company\u2019s latest research and industry breakthroughs in NVIDIA CEO Jensen Huang\u2019s  keynote address at this week\u2019s GPU Technology Conference.\n GTC registration is free, and open through April 23. Attendees will have access to on-demand content through May 11.", "posttime": "2022-01-09 21:49:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "nvidia,single", "title": "NVIDIA\u5de5\u5177\u4ece\u5355\u4e2a\u9759\u6b62\u56fe\u50cf\u751f\u6210\u5b8c\u6574\u76843D\u6a21\u578b", "title_en": "Nvidia tool generates full 3D models from a single still image", "transed": 1, "url": "https://blogs.nvidia.com/blog/2021/04/16/gan-research-knight-rider-ai-omniverse/", "via": "", "real_tags": ["nvidia", "single"]}, {"category": "", "categoryclass": "", "imagename": "80c0e3098d16f39068a6610d8aa3b998.jpeg", "infoid": 1072445, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5f88\u5c11\u6709\u4eba\u53ef\u4ee5\u62b5\u6297\u4e00\u4e2a\u65b0\u751f\u7684\u5a74\u513f\u5fae\u7b11 - \u4fe1\u53f7\u4f20\u64ad\u79ef\u6781\u7684\u60c5\u7eea\uff0c\u4f8b\u5982\u559c\u60a6\u548c\u5174\u8da3\u3002\u5f53\u7136\uff0c\u65b0\u7236\u6bcd\u5c24\u5176\u5982\u6b64\u3002\u4e00\u9879\u7814\u7a76\u53d1\u73b0\uff0c\u65b0\u6bcd\u4eb2\u770b\u7740\u4ed6\u4eec16\u5c0f\u65f6\u7684\u5a74\u513f80\uff05\u7684\u65f6\u95f4\uff0c34\uff05\u7684\u65f6\u95f4\u7b11\u4e86\u7b11\u3002\n\u5f53\u7814\u7a76\u4eba\u5458\u5f00\u59cb\u89c2\u5bdf\u5a74\u513f\u65f6\uff0c\u4ed6\u4eec\u7684\u5927\u90e8\u5206\u521d\u59cb\u7ed3\u679c\u4e0e\u7236\u6bcd\u62a5\u544a\u4e0d\u540c\u3002 1959\u5e74\u7684\u4e00\u9879\u7814\u7a76\uff0c\u5b9a\u4e49\u4e86\u201c\u793e\u4f1a\u7b11\u5bb9\u201d\u5728\u5fae\u7b11\u524d\u5bfb\u6c42\u773c\u795e\u63a5\u89e6\uff0c\u53d1\u73b0\u8fd9\u9879\u7814\u7a76\u4e2d\u7684400\u540d\u5a74\u513f\u90fd\u6ca1\u6709\u5728\u7b2c\u4e00\u5468\u7b11\u4e86\u7b11\u3002\u53ea\u670911\uff05\u7684\u4eba\u5728\u4e24\u5468\u7684\u5e74\u9f84\u4e0a\u8868\u73b0\u51fa\u793e\u4f1a\u7b11\u5bb9\u3002\u5927\u7ea660\uff05\u7684\u4eba\u5728\u4e09\u4e2a\u661f\u671f\u5185\u8fdb\u884c\u4e86\u793e\u4f1a\u7b11\u4e86\u7b11\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u4eba\u90fd\u5728\u7b2c\u4e00\u4e2a\u6708\u5185\u8fdb\u884c\u4e86\u793e\u4f1a\u5fae\u7b11\u3002\n\u4e0d\u5e78\u7684\u662f\uff0c\u5177\u6709\u65b0\u751f\u513f\u7684\u884c\u4e3a\u7814\u7a76\u4ecd\u7136\u7a00\u7f3a\uff0c\u5e76\u4e14\u9700\u8981\u7cbe\u5fc3\u5206\u6790\u6765\u89e3\u91ca\u67d0\u4e9b\u884c\u4e3a\u7684\u542b\u4e49\u3002\u867d\u7136\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\uff0c\u4f46\u5047\u8bbe\u8fd9\u4e9b\u65e9\u671f\u7b11\u5bb9\u5177\u6709\u793e\u4f1a\u610f\u4e49\u662f\u5408\u7406\u7684\u3002\u5bf9\u4e8e\u6211\u4eec\u7684\u8bb8\u591a\u4eba\u5728\u8be5\u9886\u57df\uff0c\u5b83\u662f\u6700\u4e0d\u660e\u786e\u7684\uff0c\u8fd9\u4e9b\u7b11\u5bb9\u7edd\u5bf9\u4e0d\u4ec5\u4ec5\u662f\u53cd\u5c04\u3002", "note_en": "Very few people can resist smiling at a newborn baby \u2013 signalling positive emotions, such as joy and interest. Of course, this is especially true for new parents. One study found that new mothers looked at their 16-hour-old babies 80% of the time and  smiled at them 34% of the time.\n Sometimes newborn babies even smile back, creating a magical moment for the parents that is often ruined by someone pointing out that the smile can\u2019t be real. Even textbooks tend to  regard neonatal smiling as a reflex rather than an actual expression of joy and happiness. But is this really the case?\n Up to the second half of the 20th century, the behaviour of newborns was considered mostly reflexive. Scientists assumed that newborns had a limited ability to feel and express emotions, and did not have enough social experience to interact with their caregivers.\n It was even believed that  newborn babies couldn\u2019t feel pain in the same way as adults \u2013 meaning they were sometimes subjected to painful surgical procedures without analgesia. It wasn\u2019t until the 1980s that medical professionals realised that the stress of the pain actually led to life-threatening shock and complications.\n   Over the past 50 years,  data has slowly accumulated suggesting that neonates are more than just reflexive beings. They are competent enough to actively regulate their own states. For example, they can fall asleep to shut out stressful distractions, or fuss and cry if they need stimulation and more interaction. They can also imitate smiles as early as the first 36 hours of life and can even learn from previous experience as early as the first day of life.\n  However, when it comes to feelings such as happiness and joy, we have continued to question whether newborns can be socially competent beings. Up until the early 2000s, newborn babies were thought to smile only in response to muscle twitches, penile erections, bowel or bladder movements or for no particular reason at all. Most studies and textbooks \u2013  even in the 21st century \u2013 still suggest that the first \u201csocial smile\u201d occurs only  after the second month of life.\n And there was evidence to support it. In 1872, Charles Darwin argued that emotional expressions were universal and inborn, and documented the first real smiles of his own child at 45 days of age. My own research has replicated these observations. When we asked 957 parents to observe and record smiling in their children for a study,  they reported the first \u201csocial smiles\u201d of their babies just after four weeks on average.\n When researchers started observing infants, most of their initial results were not that different from the parental reports. A study from 1959, which defined \u201csocial smiles\u201d as  seeking eye-contact before smiling, found that none of the 400 babies in the study smiled during the first week. Only 11% showed a social smile by two weeks of age. About 60% had socially smiled by three weeks, and almost all of them had socially smiled within the first month.\n Some researchers still fail to register smiles early on, and many smiles occur during sleep \u2013 unrelated to the social world. Indeed, even foetuses, observed within the womb with a 4D ultrasonographic method,  smile from at least the 23rd week of gestation. But other studies show that newborns do smile on rare occasions \u2013 at most  once in every four minutes for some one-day-olds. And the question now is what those smiles mean.\n  There have long been signs that newborn smiles could signal positive emotions to some extent. Smiles have been noted in the first few days of life  as a response to stroking of the cheek or the belly. Newborns also smile  in response to sweet tastes and smells. These findings were published decades ago when smiles were considered purely as innate reflexes. The reason that scientists at the time didn\u2019t interpret them as emotional was partly because the smiles looked different to social smiles.\n  \u201cReal\u201d smiles \u2013 called  Duchenne smiles \u2013 involve not only the major muscle that pulls the mouth to the side and upward, but also the muscles around the eyes. Neonatal smiles were thought to involve only the mouth region. However, when scientists micro-analysed facial movements, frame by frame, using a  dedicated coding system, smiles from as early as one day of age were more often than not  accompanied by cheek and eye movements.\n More and more studies have since suggested that newborn babies do smile when they are awake, and that these smiles closely resemble real social smiles. And when newborns are in an interactive, awake state, they smile  twice as much as compared to when they are asleep \u2013 more evidence that social factors could be involved. What\u2019s more,  babies often start with moving their cheeks and their brows before they smile, as if focusing their attention on the caregiver\u2019s face. So it is completely possible that these newborn babies actually mean to smile.\n Babies learn about the power of smiling early. While caregivers often smile at their newborns, this behaviour will be dependent on the baby\u2019s state \u2013 they are less likely to smile if the baby is crying. As a result, babies quickly gain a remarkable ability to regulate the behaviour of their parents. If a baby keeps eye contact, blinks and smiles, their parent will likely smile back \u2013 making the smile rewarding.\n Unsurprisingly, studies on mothers have shown that they are  deeply affected by the smiles of their babies \u2013 even on a neurophysiological level. One study measured brain activity in mothers using  fMRI scanning. When mothers saw their own infant smiling, activities in areas of the brain involved in processing emotions \u2013 including the amygdala and the limbic system \u2013 were enhanced.  Dopaminergic brain areas, known as the reward system in the brain, were also highly active.\n Unfortunately, behavioural studies with neonates are still scarce and require elaborate analyses to interpret the meanings of certain behaviour. While further studies are needed, it is plausible to assume that these early smiles have a social meaning. To many of us in the field, it is at the very least clear that these smiles are definitely more than just a reflex.", "posttime": "2022-01-09 21:49:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6311\u6218,smiling,\u793e\u4f1a", "title": "\u65b0\u751f\u513f\u53ea\u662f\u4e00\u4e2a\u53cd\u5c04\u5417\uff1f\u7814\u7a76\u6311\u6218\u4e86\u6559\u79d1\u4e66\uff082018\u5e74\uff09", "title_en": "Is newborn smiling just a reflex? Research is challenging the textbooks (2018)", "transed": 1, "url": "https://theconversation.com/is-newborn-smiling-really-just-a-reflex-research-is-challenging-the-textbooks-105220", "via": "", "real_tags": ["\u6311\u6218", "smiling", "\u793e\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "c0dc560616b461ec61b276c5c5bf12d5.jpeg", "infoid": 1072444, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u75be\u75c5\u63a7\u5236\u4e0e\u9884\u9632\u4e2d\u5fc3\u5468\u4e00\u62a5\u9053\uff0c\u7f8e\u56fd\u7b2c\u56db\u4e2a\u5dde\u7684\u7b2c\u56db\u4e2a\u4eba\u5728\u6ca1\u6709\u79bb\u5f00\u7f8e\u56fd\u5927\u9646\u7684\u60c5\u51b5\u4e0b\u795e\u79d8\u5730\u611f\u67d3\u4e86\u4e00\u79cd\u81f4\u547d\u7684\u5357\u4e9a\u7ec6\u83cc\u3002\u8fd9\u56db\u8d77\u6848\u4ef6\u4e2d\u6709\u4e24\u8d77\u5df2\u7ecf\u6b7b\u4ea1\uff0c\u5305\u62ec\u4e0a\u4e2a\u6708\u5e95\u5728\u4e54\u6cbb\u4e9a\u5dde\u7684\u9a8c\u5c38\u68c0\u67e5\u4e2d\u53d1\u73b0\u7684\u6700\u65b0\u4e00\u8d77\u6848\u4ef6\u3002 CDC \u8c03\u67e5\u4eba\u5458\u786e\u5b9a\u8fd9\u56db\u8d77\u6848\u4ef6\u90fd\u5b58\u5728\u5173\u8054\uff0c\u4ed6\u4eec\u6000\u7591\u53ef\u80fd\u662f\u8fc4\u4eca\u4e3a\u6b62\u672a\u77e5\u7684\u8fdb\u53e3\u4ea7\u54c1\u9020\u6210\u7684\u3002\u75be\u75c5\u9884\u9632\u63a7\u5236\u4e2d\u5fc3\u6b64\u524d\u66fe\u4e8e 6 \u6708 30 \u65e5\u53d1\u5e03\u4e86\u5173\u4e8e\u65e9\u671f\u4e09\u8d77\u75c5\u4f8b\u7684\u54a8\u8be2\u3002\u4e09\u6708\u4efd\u5728\u582a\u8428\u65af\u5dde\u7684\u4e00\u540d\u6210\u5e74\u4eba\u4e2d\u53d1\u73b0\u4e86\u7b2c\u4e00\u4f8b\u75c5\u4f8b\uff0c\u8fd9\u4e5f\u662f\u81f4\u547d\u7684\u3002\u4eca\u5e74 5 \u6708\uff0c\u8c03\u67e5\u4eba\u5458\u5728\u660e\u5c3c\u82cf\u8fbe\u5dde\u7684\u4e00\u540d 4 \u5c81\u5973\u5b69\u548c\u4e00\u540d\u6210\u5e74\u4eba\u4e2d\u53d1\u73b0\u4e86\u53e6\u4e00\u4f8b\u75c5\u4f8b\u3002\u8fd9\u4e24\u540d\u60a3\u8005\u5728\u88ab\u91ca\u653e\u5230\u8fc7\u6e21\u62a4\u7406\u673a\u6784\u4e4b\u524d\u90fd\u4f4f\u9662\u4e86\u5f88\u957f\u65f6\u95f4\u3002\u636e\u62a5\u9053\uff0c\u5fb7\u514b\u8428\u65af\u5dde\u7684\u5e74\u8f7b\u5973\u5b69\u56e0\u611f\u67d3\u800c\u8111\u90e8\u53d7\u635f\u3002 CDC \u518d\u6b21\u8b66\u544a\u533b\u7597\u4fdd\u5065\u63d0\u4f9b\u8005\u6ce8\u610f\u7f55\u89c1\u4e14\u901a\u5e38\u96be\u4ee5\u8bca\u65ad\u7684\u611f\u67d3\uff0c\u79f0\u4e3a\u7c7b\u9f3b\u75bd\uff0c\u5373\u4f7f\u662f\u672a\u65c5\u884c\u8fc7\u7684\u4eba\u4e5f\u662f\u5982\u6b64\u3002\u540c\u65f6\uff0c\u5bf9\u611f\u67d3\u7ec6\u83cc Burkholderia pseudomallei \u7684\u6765\u6e90\u7684\u8c03\u67e5\u4ecd\u5728\u7ee7\u7eed\u3002\u636e CDC \u79f0\uff0c\u8be5\u673a\u6784\u8fdb\u884c\u7684\u5168\u57fa\u56e0\u7ec4\u6d4b\u5e8f\u53d1\u73b0\uff0c\u8fd9\u56db\u4e2a\u75c5\u4f8b\u4e2d\u7684\u6bcf\u4e2a\u75c5\u4f8b\u4e2d\u7684\u5047\u9f3b\u75bd\u82bd\u5b62\u6746\u83cc\u83cc\u682a\u5f7c\u6b64\u5bc6\u5207\u5339\u914d\u3002\u8fd9\u4e9b\u83cc\u682a\u4e0e\u5728\u4e9a\u6d32\uff0c\u5c24\u5176\u662f\u5357\u4e9a\u53d1\u73b0\u7684\u83cc\u682a\u6709\u5173\u3002 B. pseudomallei \u662f\u4e00\u79cd\u751f\u6d3b\u5728\u70ed\u5e26\u548c\u4e9a\u70ed\u5e26\u6c14\u5019\u7684\u571f\u58e4\u548c\u6c34\u4e2d\u7684\u73af\u5883\u7ec6\u83cc\u3002\u5728\u7f8e\u56fd\uff0c\u5b83\u6700\u5e38\u51fa\u73b0\u5728\u6700\u8fd1\u53bb\u8fc7\u7ec6\u83cc\u6d41\u884c\u5730\u533a\u7684\u4eba\u8eab\u4e0a\u3002\u7136\u800c\uff0c\u5b83\u4e4b\u524d\u4e5f\u66fe\u5728\u7f8e\u56fd\u51fa\u4e4e\u610f\u6599\u5730\u51fa\u73b0\u5728\u6ca1\u6709\u8fd1\u671f\u65c5\u884c\u53f2\u7684\u4eba\u7fa4\u4e2d\u3002\u8fc7\u53bb\u7684\u795e\u79d8\u6848\u4f8b\u8ba9\u7814\u7a76\u4eba\u5458\u63a8\u6d4b\uff0c\u5047\u9f3b\u75bd\u82bd\u5b62\u6746\u83cc\u73b0\u5728\u53ef\u80fd\u6f5c\u4f0f\u5728\u7f8e\u56fd\u67d0\u4e9b\u5730\u533a\u7684\u571f\u58e4\u548c\u6c34\u57df\u4e2d\u3002\u4f46\u662f\uff0c\u5728\u5f53\u524d\u7684\u75c5\u4f8b\u7fa4\u4e2d\uff0cCDC \u8c03\u67e5\u4eba\u5458\u8868\u793a\uff0c\u8fd9\u4e9b\u83cc\u682a\u4e0e\u6765\u81ea\u5357\u4e9a\u7684\u83cc\u682a\u6700\u4e3a\u5bc6\u5207\u76f8\u5173\uff0c\u800c\u4e0d\u662f\u4e4b\u524d\u5728\u5317\u7f8e\u53d1\u73b0\u7684\u4efb\u4f55\u83cc\u682a\u3002\n\u8be5\u673a\u6784\u5728\u4e00\u4efd\u58f0\u660e\u4e2d\u8bf4\uff1a\u201c\u76ee\u524d\uff0cCDC \u8ba4\u4e3a\u6700\u53ef\u80fd\u7684\u539f\u56e0\u662f\u8fdb\u53e3\u4ea7\u54c1\uff08\u4f8b\u5982\u98df\u54c1\u6216\u996e\u6599\u3001\u4e2a\u4eba\u62a4\u7406\u6216\u6e05\u6d01\u4ea7\u54c1\u6216\u836f\u54c1\uff09\u6216\u5176\u4e2d\u4e00\u79cd\u4ea7\u54c1\u7684\u6210\u5206\u3002\u201d \u201c\u7ec6\u83cc\u901a\u5e38\u751f\u6d3b\u5728\u6f6e\u6e7f\u7684\u571f\u58e4\u548c\u6c34\u4e2d\u3002\u7136\u800c\uff0c\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53d1\u73b0\u5b83\u4f1a\u6c61\u67d3\u7ec6\u83cc\u5e38\u89c1\u533a\u57df\u7684\u6f6e\u6e7f\u6216\u6f6e\u6e7f\u7684\u4ea7\u54c1\u3002\u201d\u5230\u76ee\u524d\u4e3a\u6b62\uff0cCDC \u5df2\u7ecf\u4ece\u56db\u540d\u60a3\u8005\u7684\u5bb6\u4e2d\u6536\u96c6\u5e76\u68c0\u6d4b\u4e86 100 \u591a\u4e2a\u4ea7\u54c1\u3001\u571f\u58e4\u548c\u6c34\u6837\u672c\uff0c\u4f46\u6ca1\u6709\u4e00\u4e2a\u6837\u672c\u5bf9\u5047\u9f3b\u75bd\u82bd\u5b62\u6746\u83cc\u5448\u9633\u6027\u53cd\u5e94\u3002\u8be5\u673a\u6784\u6307\u51fa\uff0c\u8ffd\u8e2a\u5047\u9f3b\u75bd\u82bd\u5b62\u6746\u83cc\u7684\u6765\u6e90\u6709\u65f6\u53ef\u80fd\u5f88\u56f0\u96be\uff0c\u56e0\u4e3a\u7ec6\u83cc\u53ef\u80fd\u9700\u8981\u4e24\u5230\u4e09\u5468\u7684\u65f6\u95f4\u624d\u80fd\u53d1\u5c55\u6210\u611f\u67d3\uff0c\u4ece\u800c\u6269\u5927\u4e86\u53ef\u80fd\u7684\u66b4\u9732\u65f6\u95f4\u7a97\u53e3\u5e76\u6d4b\u8bd5\u4e86\u60a3\u8005\u7684\u8bb0\u5fc6\u3002\u4e00\u65e6\u7c7b\u9f3b\u75bd\u53d1\u751f\uff0c\u8bca\u65ad\u5b83\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a\u5177\u6709\u6311\u6218\u6027\u7684\u8fc7\u7a0b\u3002\u7c7b\u9f3b\u75bd\u88ab\u79f0\u4e3a\u201c\u4f1f\u5927\u7684\u6a21\u4eff\u8005\u201d\uff0c\u56e0\u4e3a\u5b83\u7684\u75c7\u72b6\u53ef\u80fd\u5dee\u5f02\u5f88\u5927\u4e14\u542b\u7cca\u4e0d\u6e05\u3002\u5b83\u6709\u65f6\u4f1a\u88ab\u8bef\u8ba4\u4e3a\u662f\u5176\u4ed6\u4e25\u91cd\u7684\u75be\u75c5\uff0c\u4f8b\u5982\u80ba\u7ed3\u6838\u3002\u4eba\u4eec\u53ef\u4ee5\u901a\u8fc7\u6444\u5165\u7ec6\u83cc\u6216\u63a5\u89e6\u76ae\u80a4\u7834\u635f\u800c\u88ab\u611f\u67d3\u3002\u4e34\u5e8a\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\u4eba\u5458\u4e5f\u6709\u88ab\u96fe\u5316\u9897\u7c92\u611f\u67d3\u7684\u98ce\u9669\u3002\u75c7\u72b6\u53ef\u80fd\u5305\u62ec\u5c40\u90e8\u75bc\u75db\u6216\u80bf\u80c0\u3001\u53d1\u70e7\u3001\u6e83\u75a1\u3001\u8113\u80bf\u3001\u54b3\u55fd\u3001\u80f8\u75db\u3001\u9ad8\u70e7\u3001\u5934\u75db\u3001\u538c\u98df\u3001\u547c\u5438\u7a98\u8feb\u3001\u8179\u90e8\u4e0d\u9002\u3001\u5173\u8282\u75db\u3001\u5b9a\u5411\u969c\u788d\u3001\u4f53\u91cd\u51cf\u8f7b\u3001\u80c3\u6216\u80f8\u75db\u3001\u808c\u8089\u6216\u5173\u8282\u75db\u3001\u75be\u75c5\u9884\u9632\u63a7\u5236\u4e2d\u5fc3\u6307\u51fa\uff0c\u548c\u766b\u75eb\u53d1\u4f5c\u3002\u5728\u8fd9\u56db\u4e2a\u76f8\u5173\u75c5\u4f8b\u4e2d\uff0c\u60a3\u8005\u51fa\u73b0\u4e86\u4e00\u7cfb\u5217\u75c7\u72b6\uff0c\u4ece\u54b3\u55fd\u548c\u547c\u5438\u6025\u4fc3\u5230\u865a\u5f31\u3001\u75b2\u52b3\u3001\u6076\u5fc3\u3001\u5455\u5410\u3001\u95f4\u6b47\u6027\u53d1\u70e7\u4ee5\u53ca\u8eaf\u5e72\u3001\u8179\u90e8\u548c\u9762\u90e8\u76ae\u75b9\u3002\u7c7b\u9f3b\u75bd\u7684\u6b7b\u4ea1\u7387\u4ece 10% \u5230 50% \u4e0d\u7b49\uff0c\u7cd6\u5c3f\u75c5\u3001\u80be\u75c5\u3001\u6162\u6027\u80ba\u75c5\u548c\u8fc7\u5ea6\u996e\u9152\u7684\u4eba\u9762\u4e34\u7684\u98ce\u9669\u6700\u5927\u3002\u5982\u679c\u8bca\u65ad\u5ef6\u8fdf\uff0c\u98ce\u9669\u53ef\u80fd\u4f1a\u8fdb\u4e00\u6b65\u4e0a\u5347\u3002 B. \u5047\u9f3b\u75bd\u5929\u751f\u5bf9\u8bb8\u591a\u6297\u751f\u7d20\u6cbb\u7597\u5177\u6709\u6297\u6027\u3002\u4f7f\u7528\u9519\u8bef\u7684\u836f\u7269\u5ef6\u8fdf\u8bca\u65ad\u548c\u6cbb\u7597\u53ef\u80fd\u4f1a\u4f7f\u611f\u67d3\u4e0d\u53d7\u63a7\u5236\u5730\u4f20\u64ad\u3002\u5982\u679c\u5b83\u53d8\u6210\u5168\u8eab\u6027\u7684\uff0c\u5728 90% \u7684\u75c5\u4f8b\u4e2d\u5b83\u53ef\u80fd\u662f\u81f4\u547d\u7684\u3002", "note_en": "A fourth person in a fourth US state has mysteriously contracted a deadly South Asian bacterium without leaving the continental US, the Centers for Disease Control and Prevention  reported Monday.\n Two of the four cases have been fatal, including the latest one identified in Georgia late last month during a post-mortem exam.\n  CDC investigators determined that all four cases are connected and they suspect a so-far-unknown imported product may be to blame. The CDC had previously released  an advisory on June 30 about  the three earlier cases. The first case was identified in an adult in Kansas in March, which was also fatal. In May, investigators identified a case  in a 4-year-old Texas girl and another case in an adult in Minnesota. Both of those patients were hospitalized for extended periods before being released to transitional care facilities. The young girl in Texas reportedly suffered brain damage from the infection.\n Once again, the CDC is warning healthcare providers to be on the lookout for the rare and often difficult-to-diagnose infection, called melioidosis\u2014even in people who haven&#39;t traveled. Meanwhile, the investigation continues into the source of the infecting bacteria,  Burkholderia pseudomallei.\n According to the CDC, whole genome sequencing conducted by the agency found the  B. pseudomallei strains in each of the four cases closely matched each other. The strains link back to those found in Asia, particularly South Asia.\n B.\u00a0 pseudomallei is an environmental bacterium that lives in soil and water in tropical and subtropical climates. In the US, it&#39;s most often spotted in people who have recently traveled to places where the bacteria are endemic. However, It has also shown up unexpectedly in the US before in people with no recent travel history. Past mysterious cases have led researchers to speculate that  B. pseudomallei may now be lurking in soils and waters in some areas of the US.\n    But, in the current cluster of cases, CDC investigators say the strains are most closely related to those from South Asia, and not any strains previously identified in North America.\n  &#34;Currently, CDC believes the most likely cause is an imported product (such as a food or drink, personal care or cleaning products or medicine) or an ingredient in one of those types of products,&#34; the agency said in a statement. &#34;The bacteria normally lives in moist soil and water. However, in rare cases, it has also been found to contaminate wet or moist products in the areas where the bacteria are common.&#34;\n So far, the CDC has collected and tested more than 100 samples of products, soil, and water from the four patient&#39;s homes, but none have turned up positive for  B. pseudomallei. The agency noted that tracking down a source of  B. pseudomallei can sometimes be difficult as the bacteria can take two to three weeks to develop into an infection, broadening the window of possible exposure times and testing patients&#39; memories.\n Once melioidosis takes hold, diagnosing it can be another challenging process. Melioidosis has been called the &#34;Great Mimicker&#34; because its symptoms can vary greatly and be vague. It&#39;s sometimes mistaken for other serious illnesses, such as tuberculosis.\n People can become infected by ingesting the bacteria or having contact with a break in the skin. Clinical laboratory workers are also at risk of becoming infected through aerosolized particles. Symptoms can span localized pain or swelling, fever, ulceration, abscess, cough, chest pain, high fever, headache, anorexia, respiratory distress, abdominal discomfort, joint pain, disorientation, weight loss, stomach or chest pain, muscle or joint pain, and seizures, the CDC notes.\n In the four linked cases, the patients presented with a range of symptoms from cough and shortness of breath to weakness, fatigue, nausea, vomiting, intermittent fever, and rash on the trunk, abdomen, and face.\n The fatality rate of melioidosis ranges from 10 percent to 50 percent, and people with diabetes, kidney disease, chronic lung disease, and excessive alcohol use are most at risk. The risks can go up further if there&#39;s a delay in diagnoses.  B. pseudomallei is  inherently resistant to many antibiotic treatments. Delayed diagnosis and treatment with the wrong drugs could allow the infection to spread unchecked. If it becomes systemic, it can be fatal in 90 percent of cases.", "posttime": "2021-08-10 07:05:08", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u6765\u81ea,mysteriously,\u53ef\u80fd", "title": "\u7f8e\u56fd\u7b2c\u56db\u4eba\u795e\u79d8\u611f\u67d3\u6765\u81ea\u5357\u4e9a\u7684\u81f4\u547d\u7ec6\u83cc", "title_en": "4th person in US mysteriously stricken with deadly bacteria from South Asia", "transed": 1, "url": "https://arstechnica.com/science/2021/08/4th-person-in-us-mysteriously-stricken-with-deadly-bacteria-from-south-asia/", "via": "", "real_tags": ["\u7f8e\u56fd", "\u6765\u81ea", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "84854ed0e861b1a34390a064a6d80277.jpg", "infoid": 1072442, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Ahmer Inam \u662f\u6587\u601d\u6d77\u8f89 EDGE \u7684\u9996\u5e2d\u4eba\u5de5\u667a\u80fd\u5b98 (CAIO)\u3002\u4ed6\u5728\u63a8\u52a8\u7ec4\u7ec7\u8f6c\u578b\u65b9\u9762\u62e5\u6709 20 \u591a\u5e74\u7684\u7ecf\u9a8c\u3002\u4ed6\u7684\u7ecf\u9a8c\u5305\u62ec\u5728 Nike Inc.\u3001Wells Fargo\u3001Sonic Automotive \u548c Cambia Health Solutions \u62c5\u4efb\u9886\u5bfc\u804c\u52a1\u3002\u4f7f\u7528\u6570\u636e\u548c\u5206\u6790\u6765\u8bc6\u522b\u548c\u7ed8\u5236\u53d7\u5168\u7403\u822a\u8fd0\u5371\u673a\u5f71\u54cd\u7684\u5e93\u5b58\u3002\u5982\u679c\u60a8\u6ca1\u6709\u5173\u4e8e\u8fd0\u8f93\u6750\u6599\u7684\u8239\u4e0a\u7269\u54c1\u7684\u6570\u636e\uff0c\u90a3\u4e48\u8bf7\u5229\u7528\u8fd9\u6b21\u5371\u673a\u4f5c\u4e3a\u4e00\u4e2a\u673a\u4f1a\uff0c\u8bc1\u660e\u4f18\u5148\u4f7f\u7528\u6570\u636e\u3001\u7269\u8054\u7f51\u548c\u9ad8\u7ea7\u5206\u6790\uff08\u4f8b\u5982\u673a\u5668\u5b66\u4e60\u548c\u6a21\u62df\uff09\u8fdb\u884c\u4f9b\u5e94\u94fe\u6570\u5b57\u5316\u8f6c\u578b\u7684\u5408\u7406\u6027\u3002\u5982\u679c\u60a8\u8981\u6210\u529f\u8861\u91cf\u77ed\u7f3a\u5bf9\u60a8\u7684\u8fd0\u8425\u6709\u4f55\u5f71\u54cd\uff0c\u60a8\u9700\u8981\u59cb\u7ec8\u4e86\u89e3\u8d27\u7269\u7684\u4f4d\u7f6e\u3002\u5982\u679c\u60a8\u6ca1\u6709\u73b0\u6210\u7684\u6570\u636e\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4e0e\u4f9b\u5e94\u5546\u5408\u4f5c\u5e76\u4f7f\u7528\u5b89\u5168\u73af\u5883\u6765\u5171\u4eab\u7b2c\u4e8c\u65b9\u6570\u636e\uff0c\u4ee5\u63d0\u4f9b AI \u9a71\u52a8\u7684\u53ef\u64cd\u4f5c\u89c1\u89e3\uff0c\u4e86\u89e3\u5bf9\u4ece\u521d\u521b\u516c\u53f8\u5230\u96f6\u552e\u5546\u7684\u6240\u6709\u76f8\u5173\u65b9\u7684\u4e1a\u52a1\u5f71\u54cd\u7ed9\u6d88\u8d39\u8005\u3002\u6a21\u62df\u548c\u9884\u6d4b\u8fd9\u4e9b\u4f9b\u7ed9\u4fa7\u95ee\u9898\u5bf9\u9700\u6c42\u4fa7\u7684\u5f71\u54cd\u3002\u8fdb\u884c\u573a\u666f\u89c4\u5212\u7ec3\u4e60\u5e76\u4e3a\u5173\u952e\u4e1a\u52a1\u51b3\u7b56\u63d0\u4f9b\u4fe1\u606f\u3002\u5982\u679c\u8fd9\u79cd\u80fd\u529b\u6ca1\u6709\u5230\u4f4d\uff0c\u5927\u6d41\u884c\u3001\u5185\u4e71\u6216\u65e0\u6cd5\u63a7\u5236\u7684\u52a0\u606f\u7b49\u7d27\u6025\u60c5\u51b5\u5c06\u5bf9\u60a8\u7684\u5546\u4e1a\u8ba1\u5212\u9020\u6210\u4e25\u91cd\u7834\u574f\u3002\u4ee5\u8fd9\u79cd\u60c5\u51b5\u4e3a\u5951\u673a\uff0c\u5236\u5b9a\u707e\u5bb3\u7ba1\u7406\u8ba1\u5212\uff0c\u4e3a\u6f5c\u5728\u98ce\u9669\u505a\u597d\u51c6\u5907\u3002", "note_en": "Ahmer Inam is the chief artificial intelligence officer (CAIO) at  Pactera EDGE. He has more than 20 years of experience driving organizational transformation. His experience includes leadership roles at Nike Inc., Wells Fargo, Sonic Automotive and Cambia Health Solutions.\n   Use data and analytics to identify and map out the inventory being affected by the global shipping crisis. If you don\u2019t have the data about what is on a ship transporting your materials, then use this crisis as an opportunity to justify prioritizing supply chain digital transformation with data, IoT and advanced analytics (e.g., machine learning and simulation). You need to know the location of your goods all times if you are going to successfully gauge what impact a shortage will have on your operation.\n If you don\u2019t have the data readily available, then you need to partner with a vendor and use a secure environment to share second-party data to deliver AI-driven actionable insights on the business impact on all parties involved, from startup to retailer to the consumer.\n Simulate and forecast the impact of these supply-side issues on the demand side. Conduct scenario planning exercises and inform critical business decisions. If this ability is not in place, an emergency like a pandemic, civil unrest or an uncontrollable rate hike will wreak havoc on your business plan. Use this situation as an opportunity to put a disaster management program in place to prepare for the potential risks.", "posttime": "2021-08-10 07:04:12", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u4eba\u5de5\u667a\u80fd,\u5e2e\u52a9,ai,\u6570\u636e", "title": "\u4eba\u5de5\u667a\u80fd\u5e2e\u52a9\u7f13\u89e3\u5168\u7403\u822a\u8fd0\u5371\u673a\u7684 5 \u79cd\u65b9\u5f0f", "title_en": "\n\t\t\t\t5 ways AI can help mitigate the global shipping crisis\t\t\t", "transed": 1, "url": "https://techcrunch.com/2021/08/09/5-ways-ai-can-help-mitigate-the-global-shipping-crisis/", "via": "", "real_tags": ["\u4eba\u5de5\u667a\u80fd", "\u5e2e\u52a9", "ai", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "9a4246d8e578565a70ab6078db9f7698.jpg", "infoid": 1072440, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u745e\u58eb EPFL \u6280\u672f\u5927\u5b66\u7684\u4e00\u540d\u7814\u7a76\u4eba\u5458\u8d62\u5f97\u4e86 3,500 \u7f8e\u5143\u7684\u5956\u91d1\uff0c\u56e0\u4e3a\u4ed6\u786e\u5b9a\u4e86\u4e00\u4e2a\u5173\u952e\u7684 Twitter \u7b97\u6cd5\u504f\u7231\u770b\u8d77\u6765\u82d7\u6761\u3001\u5e74\u8f7b\u3001\u80a4\u8272\u8f83\u6d45\u6216\u80a4\u8272\u8f83\u6696\u7684\u9762\u5b54\u3002 Twitter \u5468\u65e5\u5ba3\u5e03\u5c06\u5956\u9879\u6388\u4e88 Bogdan Kulynych\uff0c\u4e00\u4f4d\u7814\u7a76\u9690\u79c1\u3001\u5b89\u5168\u3001\u4eba\u5de5\u667a\u80fd\u548c\u793e\u4f1a\u7684\u7814\u7a76\u751f\u3002 Twitter \u8d5e\u52a9\u4e86\u8fd9\u573a\u6bd4\u8d5b\uff0c\u4ee5\u627e\u51fa\u5b83\u7528\u6765\u88c1\u526a\u5b83\u5728\u4f60\u7684 Twitter \u65f6\u95f4\u7ebf\u4e0a\u663e\u793a\u7684\u7167\u7247\u7684\u201c\u663e\u7740\u6027\u201d\u7b97\u6cd5\u4e2d\u7684\u95ee\u9898\u3002 Twitter \u4e3a\u53d1\u73b0 AI \u504f\u89c1\u800c\u63d0\u4f9b\u7684\u8d4f\u91d1\u662f\u5bf9\u73b0\u5728\u4e3b\u6d41\u7684\u6f0f\u6d1e\u8d4f\u91d1\u505a\u6cd5\u7684\u4e00\u79cd\u65b0\u65b9\u5f0f\uff0c\u5373\u516c\u53f8\u652f\u4ed8\u7ed9\u5916\u90e8\u4eba\u5458\u4ee5\u5bfb\u627e\u5b89\u5168\u6f0f\u6d1e\u3002\u7528\u6700\u65b0\u7684\u79d1\u6280\u65b0\u95fb\u3001\u4ea7\u54c1\u548c\u8bc4\u8bba\u4e3a\u60a8\u7684\u95f2\u804a\u589e\u6dfb\u8da3\u5473\u3002\u5de5\u4f5c\u65e5\u53d1\u8d27\u3002\u4eba\u5de5\u667a\u80fd\u901a\u8fc7\u6709\u6548\u5904\u7406\u51cc\u4e71\u7684\u4e3b\u9898\uff08\u4f8b\u5982\u4e3a\u89c6\u9891\u6dfb\u52a0\u5b57\u5e55\u3001\u53d1\u73b0\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u548c\u8bc6\u522b\u60a8\u7684\u8138\u4ee5\u89e3\u9501\u624b\u673a\uff09\uff0c\u5f7b\u5e95\u6539\u53d8\u4e86\u8ba1\u7b97\u65b9\u5f0f\u3002\u4f46\u662f\u5728\u73b0\u5b9e\u4e16\u754c\u6570\u636e\u4e0a\u8bad\u7ec3\u7684 AI \u7b97\u6cd5\u53ef\u4ee5\u53cd\u6620\u73b0\u5b9e\u4e16\u754c\u7684\u95ee\u9898\uff0c\u800c\u89e3\u51b3 AI \u504f\u89c1\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u4e2a\u70ed\u95e8\u9886\u57df\u3002 Twitter \u7684\u8d4f\u91d1\u8ba1\u5212\u65e8\u5728\u53d1\u73b0\u6b64\u7c7b\u95ee\u9898\uff0c\u4ee5\u4fbf\u6700\u7ec8\u7ea0\u6b63\u8fd9\u4e9b\u95ee\u9898\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\uff0cTwitter \u672c\u8eab\u4e5f\u8bc1\u5b9e\u5176 AI \u7cfb\u7edf\u5728\u5176\u88c1\u526a\u7b97\u6cd5\u504f\u7231\u767d\u4eba\u56fe\u50cf\u800c\u975e\u9ed1\u4eba\u56fe\u50cf\u65f6\u663e\u793a\u51fa\u504f\u89c1\u3002\u4f46\u662f Kulynych \u5728\u7b97\u6cd5\u5982\u4f55\u88c1\u526a\u7167\u7247\u4ee5\u5f3a\u8c03\u5b83\u8ba4\u4e3a\u6700\u91cd\u8981\u7684\u65b9\u9762\u53d1\u73b0\u4e86\u5176\u4ed6\u95ee\u9898\u3002 Kulynych \u5728\u4ed6\u7684\u9879\u76ee\u8c03\u67e5\u7ed3\u679c\u4e2d\u8bf4\uff1a\u201c\u76ee\u6807\u6a21\u578b\u503e\u5411\u4e8e\u8ba4\u4e3a\u66f4\u7a81\u51fa\u7684\u4eba\u7684\u63cf\u8ff0\u663e\u5f97\u82d7\u6761\u3001\u5e74\u8f7b\u3001\u6d45\u8272\u6216\u6e29\u6696\u7684\u80a4\u8272\u548c\u5149\u6ed1\u7684\u76ae\u80a4\u7eb9\u7406\uff0c\u4ee5\u53ca\u523b\u677f\u7684\u5973\u6027\u9762\u90e8\u7279\u5f81\u3002\u201d \u201c\u8fd9\u79cd\u504f\u89c1\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5c11\u6570\u7fa4\u4f53\u88ab\u6392\u9664\u5728\u5916\uff0c\u5e76\u5728\u6570\u4ee5\u5343\u8ba1\u7684\u56fe\u50cf\u4e2d\u5ef6\u7eed\u523b\u677f\u7684\u7f8e\u611f\u6807\u51c6\u3002\u201d Kulynych \u7684\u7cfb\u7edf\u5c06\u4eba\u8138\u539f\u59cb\u7167\u7247\u7684\u663e\u7740\u6027\u4e0e\u4e00\u7cfb\u5217 AI \u751f\u6210\u7684\u53d8\u5316\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u4ed6\u53d1\u73b0\uff0c\u9762\u90e8\u8d8a\u5e74\u8f7b\u8d8a\u7626\uff0c\u663e\u7740\u6027\u5206\u6570\u901a\u5e38\u4f1a\u589e\u52a0\u3002\u8be5\u7b97\u6cd5\u8fd8\u4e3a\u66f4\u4eae\u3001\u66f4\u6696\u8272\u8c03\u3001\u66f4\u9ad8\u5bf9\u6bd4\u5ea6\u548c\u66f4\u9971\u548c\u989c\u8272\u7684\u76ae\u80a4\u7ed9\u51fa\u4e86\u66f4\u9ad8\u7684\u5206\u6570\u3002\n\u5728\u6211\u4eec\u4e0e\u670b\u53cb\u6216\u793e\u4ea4\u5a92\u4f53\u5206\u4eab\u7167\u7247\u4e4b\u524d\uff0c\u6211\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u90fd\u4f7f\u7528\u76f8\u673a\u548c\u5e94\u7528\u7f8e\u989c\u6ee4\u955c\u7684\u7f16\u8f91\u5e94\u7528\u7a0b\u5e8f\uff0c\u63a8\u7279\u79f0\u8d5e\u53c2\u8d5b\u4f5c\u54c1\u5f88\u91cd\u8981\u3002\u8fd9\u4f1a\u626d\u66f2\u6211\u4eec\u5bf9\u5438\u5f15\u529b\u7684\u671f\u671b\u3002\u7f8e\u5bb9\u548c\u5e94\u7528\u8fc7\u6ee4\u5668\u5f88\u666e\u904d\u3002 Facetune \u662f\u4e00\u6b3e\u9876\u7ea7\u5e94\u7528\uff0c\u6709\u671b\u5e2e\u52a9\u60a8\u201c\u5728\u793e\u4ea4\u5a92\u4f53\u4e0a\u8131\u9896\u800c\u51fa\u201d\u3002 B612 \u662f\u53e6\u4e00\u79cd\u6d41\u884c\u7684\u8fc7\u6ee4\u5668\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u201c\u667a\u80fd\u7f8e\u5bb9\u201d\u5de5\u5177\uff0c\u53ef\u4ee5\u63a8\u8350\u60a8\u7684\u8138\u578b\u548c\u5176\u4ed6\u5916\u89c2\u53d8\u5316\u3002\u4f46\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0c\u7f8e\u5316\u8fc7\u6ee4\u5668\u4f1a\u201c\u5bf9\u5fc3\u7406\u5065\u5eb7\u4ea7\u751f\u8d1f\u9762\u5f71\u54cd\u201d\uff0c\u8c37\u6b4c\u5728\u5176 Pixel \u76f8\u673a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u9ed8\u8ba4\u7981\u7528\u4e86\u81ea\u52a8\u4fee\u9970\u3002\u5b83\u8fd8\u505c\u6b62\u5c06\u5176\u8c03\u6574\u79f0\u4e3a\u201c\u7f8e\u5bb9\u201d\u8fc7\u6ee4\u5668\u3002", "note_en": "A researcher at Switzerland&#39;s EPFL technical university won a $3,500 prize for determining that a key Twitter algorithm favors faces that look slim and young and with skin that is lighter-colored or with warmer tones. Twitter announced on Sunday it awarded the prize to  Bogdan Kulynych, a graduate student examining privacy, security, AI and society.\n Twitter sponsored the contest to find problems in the &#34;saliency&#34; algorithm it uses to crop the photos it shows on your Twitter timeline. The  bounty that Twitter offered to find AI bias is a new spin on the now mainstream practice of the bug bounties that companies pay outsiders to find security vulnerabilities.\n  Spice up your small talk with the latest tech news, products and reviews. Delivered on weekdays.\n AI has revolutionized computing by effectively tackling messy subjects like captioning videos, spotting phishing emails and recognizing your face to unlock your phone. But AI algorithms trained on real-world data can reflect real-world problems, and tackling AI bias is a hot area in computer science. Twitter&#39;s bounty is designed to find such problems so they eventually can be corrected.\n Earlier this year, Twitter itself confirmed its AI system showed bias when its cropping algorithm  favored images of white people over Black people. But Kulynych found other problems in how the algorithm cropped photos to emphasize what it deemed most important.\n  &#34;The target model is biased towards deeming more salient the depictions of people that appear slim, young, of light or warm skin color and smooth skin texture, and with stereotypically feminine facial traits,&#34;  Kulynych said in his project findings. &#34;This bias could result in exclusion of minoritized populations and perpetuation of stereotypical beauty standards in thousands of images.&#34;\n Kulynych&#39;s system compared the saliency of an original photo of a human face to a series of AI-generated variations. He found salience scores often increased with faces that appeared younger and thinner. The algorithm also issued higher scores for skin that was lighter, warmer toned, higher contrast and with more saturated colors.\n  Twitter praised the contest entry as important in a world where many of us use camera and editing apps that apply beauty filters before we share photos with friends or on social media. That can distort our expectations of attractiveness.\n Beauty and apps filters are widespread.  Facetune, one top app, promises to help you &#34;stand out on social media.&#34;  B612, another popular filter, offers a &#34;smart beauty&#34; tool that can recommend changes to your face shape and other appearance changes. But concluding that beautification filters can &#34;negatively impact mental well-being,&#34;  Google disabled its automatic touch-ups by default in its Pixel camera app. It also stopped calling its adjustments &#34;beauty&#34; filters.", "posttime": "2021-08-10 06:47:29", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7b97\u6cd5,\u76ae\u80a4,photo,twitter", "title": "Twitter \u7684\u7167\u7247\u88c1\u526a\u7b97\u6cd5\u504f\u5411\u4e8e\u62e5\u6709\u66f4\u82d7\u6761\u3001\u66f4\u5e74\u8f7b\u7684\u9762\u5b54\u548c\u66f4\u767d\u7699\u7684\u76ae\u80a4\u7684\u4eba\uff1b\u4e00\u4f4d\u7814\u7a76\u4eba\u5458\u56e0\u8fd9\u4e00\u53d1\u73b0\u83b7\u5f97\u4e86 3,500 \u7f8e\u5143\u7684\u5956\u91d1", "title_en": "Twitter's photo cropping algorithm favors people with slimmer, younger-looking faces, and lighter skin; a researcher was awarded $3,500 for the discovery", "transed": 1, "url": "https://www.cnet.com/tech/mobile/twitter-ai-bias-contest-shows-beauty-filters-hoodwink-the-algorithm/", "via": "", "real_tags": ["\u7b97\u6cd5", "\u76ae\u80a4", "photo", "twitter"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072439, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5047\u8bbe\u60a8\u9762\u524d\u6709\u4e00\u4e2a\u5e26\u4e09\u4e2a\u6401\u677f\u7684\u53a8\u67dc\u3002\u5728\u6700\u4e0a\u9762\u7684\u67b6\u5b50\u4e0a\uff0c\u60a8\u6709\u6700\u7f8e\u5473\u7684\u5c0f\u5403\u548c\u7f8e\u98df\u3002\u5de7\u514b\u529b\u66f2\u5947\u3001\u8106\u76ae\u5947\u591a\u548c\u51b7\u51bb\u5f00\u5fc3\u679c\u51b0\u6dc7\u6dcb\u3002\u5728\u4e2d\u95f4\u7684\u67b6\u5b50\u4e0a\uff0c\u4f60\u6709\u4e00\u4e9b\u201c\u4e0d\u9519\u201d\u7684\u96f6\u98df\uff0c\u4f46\u4e0d\u662f\u6700\u7f8e\u5473\u7684\u3002\u4e5f\u8bb8\u6765\u70b9\u725b\u8089\u5e72\u3001\u666e\u901a\u6912\u76d0\u8106\u997c\u548c\u683c\u5170\u8bfa\u62c9\u9ea6\u7247\u5427\u3002\u5728\u6700\u5e95\u5c42\u7684\u67b6\u5b50\u4e0a\uff0c\u60a8\u6709\u751f\u5b58\u96f6\u98df\u3002\u9664\u975e\u4f60\u997f\u4e86\uff0c\u5426\u5219\u4f60\u4e0d\u4f1a\u5403\u5b83\u4eec\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u90a3\u662f\u666e\u901a\u7684\u674f\u4ec1\u3002\u6211\u53d1\u73b0\u5f53\u6211\u60f3\u5403\u70b9\u96f6\u98df\u65f6\uff0c\u6211\u7684\u624b\u603b\u662f\u4f1a\u4f38\u624b\u53bb\u62ff\u6700\u4e0a\u5c42\u7684\u4e1c\u897f\u3002\u5982\u679c\u67dc\u5b50\u91cc\u653e\u6ee1\u4e86\u8f6f\u5de7\u514b\u529b\u997c\u5e72\u548c\u6ef4\u7740\u6cb9\u7684\u8fa3\u5473\u85af\u7247\uff0c\u6211\u6c38\u8fdc\u4e0d\u4f1a\u4f38\u624b\u53bb\u62ff\u674f\u4ec1\u3002\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u674f\u4ec1\u4ece\u672a\u88ab\u5403\u6389\u3002\u5728\u9876\u7ea7\u5546\u54c1\u9762\u524d\uff0c\u674f\u4ec1\u4f3c\u4e4e\u4e0d\u591f\u7f8e\u5473\u3002\u4ed6\u4eec\u5f88\u65e0\u804a\u3002\u4f46\u6211\u53d1\u73b0\uff0c\u5f53\u6240\u6709\u7f8e\u5473\u7684\u4e0a\u67b6\u5546\u54c1\u90fd\u7528\u5b8c\uff0c\u5269\u4e0b\u7684\u53ea\u6709\u666e\u901a\u6912\u76d0\u5377\u997c\u7b49\u4e2d\u67b6\u5546\u54c1\u65f6\uff0c\u666e\u901a\u6912\u76d0\u5377\u997c\u5f00\u59cb\u6f02\u6d6e\u5230\u9876\u90e8\u3002\u5b83\u4eec\u53d8\u6210\u4e86\u9876\u7ea7\u7269\u54c1\uff0c\u4f38\u624b\u53bb\u62ff\u5b83\u4eec\u53d8\u5f97\u76f8\u5bf9\u672c\u80fd\u3002\u9009\u9879\uff0c\u4e0d\u4ec5\u5728\u96f6\u98df\u65b9\u9762\uff0c\u800c\u4e14\u5728\u4efb\u4f55\u9886\u57df\uff0c\u90fd\u503e\u5411\u4e8e\u6309\u7167\u6700\u4ee4\u4eba\u6ee1\u610f\u7684\u65b9\u5f0f\u5bf9\u81ea\u5df1\u8fdb\u884c\u6392\u5e8f\u3002\u5e73\u5747\u800c\u8a00\uff0c\u60a8\u4f1a\u9009\u62e9\u5728\u6ee1\u610f\u5ea6\u961f\u5217\u4e2d\u6392\u540d\u9760\u524d\u7684\u9879\u76ee\u3002\u6709\u8da3\u7684\u662f\uff0c\u77ed\u671f\u5185\u6700\u4ee4\u4eba\u6ee1\u610f\u7684\u901a\u5e38\u4e0d\u662f\u957f\u671f\u6700\u5065\u5eb7\u7684\u3002\u9009\u62e9\u4e00\u4e2a\u9009\u9879\u6240\u9700\u7684\u610f\u5fd7\u529b\u548c\u7eaa\u5f8b\u7684\u6570\u91cf\u968f\u7740\u5b83\u5728\u6ee1\u610f\u5ea6\u961f\u5217\u4e2d\u7684\u6392\u5e8f\u987a\u5e8f\u800c\u589e\u52a0\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b2c\u4e00\u4e2a\u9879\u76ee\u2014\u2014\u6700\u4e0a\u5c42\u7684\u9879\u76ee\u2014\u2014\u5c06\u9700\u8981\u5f88\u5c11\u7684\u610f\u5fd7\u529b\u6765\u91c7\u53d6\u884c\u52a8\u3002\u7136\u800c\uff0c\u961f\u5217\u672b\u5c3e\u7684\u9879\u76ee\u4e0d\u592a\u4ee4\u4eba\u6ee1\u610f\u4f46\u53ef\u80fd\u66f4\u5065\u5eb7\uff0c\u5f80\u5f80\u9700\u8981\u5927\u91cf\u7684\u957f\u671f\u601d\u8003\u548c\u7eaa\u5f8b\u3002\u9009\u9879\u4e0d\u5177\u6709\u5185\u5728\u7684\u6ee1\u8db3\u4ef7\u503c\u3002\u4ed6\u4eec\u603b\u662f\u76f8\u5bf9\u7684\u3002\u5728\u5386\u53f2\u4e0a\u6ca1\u6709\u9876\u7ea7\u5546\u54c1\u7684\u60c5\u51b5\u4e0b\uff0c\u961f\u5217\u4e2d\u8f83\u4f4e\u7684\u5546\u54c1\u5c06\u6d6e\u51fa\u6c34\u9762\uff0c\u5b83\u4eec\u672c\u8eab\u6210\u4e3a\u9876\u7ea7\u5546\u54c1\u3002\n\u5728\u4e00\u6392\u5976\u916a\u6ce1\u8299\u3001\u5de7\u514b\u529b\u66f2\u5947\u997c\u5e72\u548c\u7eaf\u674f\u4ec1\u4e2d\uff0c\u674f\u4ec1\u542c\u8d77\u6765\u5f88\u5e73\u51e1\uff0c\u6ca1\u6709\u5438\u5f15\u529b\u3002\u4f46\u5728\u4e00\u4e2a\u5305\u542b\u8fc7\u671f\u725b\u5976\u3001\u751f\u7c73\u548c\u674f\u4ec1\u7684\u6b8b\u9177\u7b49\u7ea7\u5236\u5ea6\u4e2d\uff0c\u674f\u4ec1\u4f1a\u8fc5\u901f\u6392\u5230\u961f\u5217\u7684\u5f00\u5934\uff0c\u53d8\u5f97\u4ee4\u4eba\u5fc3\u788e\u3002\u800c\u4e14\u4f60\u4e0d\u4f1a\u56e0\u4e3a\u5403\u5b83\u4eec\u800c\u611f\u5230\u88ab\u5265\u524a\u3002\u60a8\u5c06\u4ece\u5b83\u4eec\u4e2d\u6216\u591a\u6216\u5c11\u5730\u83b7\u5f97\u4e0e\u4efb\u4f55\u5386\u53f2\u4e0a\u7684\u9876\u7ea7\u5546\u54c1\u76f8\u540c\u7684\u6ee1\u8db3\u611f\u3002\u8fd9\u4e2a\u539f\u5219\u5bf9\u6211\u5403\u96f6\u98df\u5f88\u6709\u7528\uff0c\u5f53\u7136\uff0c\u4f46\u5728\u5b83\u5bf9\u751f\u6d3b\u65b9\u5f0f\u6210\u763e\u7684\u5e94\u7528\u4e2d\u5bf9\u6211\u7684\u5e2e\u52a9\u66f4\u5927\u3002\u6211\u7684\u751f\u6d3b\u65b9\u5f0f\u67dc\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a \u9876\u5c42\uff1a\u5de5\u4f5c\uff0c\u68c0\u67e5\u67d0\u79cd\u6570\u5b57\u63d0\u8981\uff0c\u5982 reddit\u3001twitter \u6216 instagram\uff0c\u548c\u73a9\u7535\u5b50\u6e38\u620f \u81ea\u7136\uff0c\u6211\u505a\u4e86\u5f88\u591a\u9876\u5c42\u7684\u52a8\u4f5c\uff0c\u4f46\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u5e95\u5c42\u2014\u2014\u8d27\u67b6\u52a8\u4f5c\u3002\u6211\u5bf9\u6700\u5e95\u5c42\u7684\u7269\u54c1\u4ea7\u751f\u4e86\u81f4\u547d\u7684\u8bef\u89e3\uff1a\u6211\u4ee5\u4e3a\u6211\u8ba8\u538c\u5b9e\u65f6\u793e\u4ea4\uff0c\u56e0\u4e3a\u5b83\u672c\u8d28\u4e0a\u8ba9\u6211\u4e0d\u6ee1\u610f\u3002\u6211\u8ba4\u4e3a\u81ea\u5df1\u662f\u4e00\u4e2a\u5929\u751f\u7684\u5185\u5411\u8005\uff0c\u6ca1\u6709\u6539\u53d8\u7684\u80fd\u529b\u3002\u5b9e\u9645\u4e0a\uff0c\u5e76\u4e0d\u662f\u6211\u4e0d\u559c\u6b22\u793e\u4ea4\u2014\u2014\u800c\u662f\u6211\u66f4\u559c\u6b22\u73a9\u7535\u5b50\u6e38\u620f\u3002\u5e76\u4e14\u6211\u53ef\u4ee5\u968f\u65f6\u9009\u62e9\u73a9\u89c6\u9891\u6e38\u620f\u6216\u67e5\u770b\u6211\u7684\u624b\u673a\uff0c\u6211\u51e0\u4e4e\u603b\u662f\u9996\u5148\u5bf9\u5b83\u4eec\u91c7\u53d6\u884c\u52a8\uff0c\u5c06\u4efb\u4f55\u6e05\u9192\u80fd\u529b\u7684\u788e\u5c51\uff08\u901a\u5e38\u6ca1\u6709\uff09\u7559\u7ed9\u961f\u5217\u4e2d\u8f83\u4f4e\u7684\u9879\u76ee\u3002\u6211\u5728\u5bb6\u5ead\u6210\u5458\u7684\u5b69\u5b50\u8eab\u4e0a\u89c2\u5bdf\u5230\u4e86\u8fd9\u4e00\u70b9\uff1a\u5982\u679c\u4f60\u7ed9\u4ed6\u4eec\u4e00\u4e2a iPad \u6765\u73a9\uff0c\u4ed6\u4eec\u662f\u4e0d\u4f1a\u62d2\u7edd\u7684\u3002\u5f53\u4ed6\u4eec\u771f\u6b63\u63a5\u89e6\u5230\u5b83\u65f6\uff0c\u4ed6\u4eec\u4f1a\u6df1\u6df1\u5730\u6c89\u6d78\u5728\u6570\u5b57\u4e16\u754c\u4e2d\uff0c\u4ee5\u81f3\u4e8e\u4ed6\u4eec\u5728\u771f\u5b9e\u4e16\u754c\u4e2d\u51e0\u4e4e\u65e0\u6cd5\u83b7\u5f97\u3002\u4f46\u662f\u62ff\u6389 iPad\uff0c\u4e00\u4ef6\u4e86\u4e0d\u8d77\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\uff1a\u4ed6\u4eec\u627e\u5230\u4e86\u5176\u4ed6\u4e8b\u60c5\u505a\u3002\u5f53\u7136\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u6682\u65f6\u611f\u5230\u4e0d\u9002\uff0c\u4f46\u5b69\u5b50\u6bd5\u7adf\u662f\u5b69\u5b50\uff0c\u4e0d\u4f1a\u5728\u6ca1\u6709\u627e\u5230\u67d0\u79cd\u5a31\u4e50\u65b9\u5f0f\u7684\u60c5\u51b5\u4e0b\u8ba9\u4e00\u79d2\u949f\u8fc7\u53bb\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5f53\u9876\u5c42 iPad \u88ab\u4ece\u7b49\u5f0f\u4e2d\u79fb\u9664\u65f6\uff0c\u6401\u67b6\u7cfb\u7edf\u4e2d\u8f83\u4f4e\u7684\u7269\u54c1\uff0c\u5982\u4e24\u5757\u4e50\u9ad8\u79ef\u6728\uff0c\u6d6e\u51fa\u6c34\u9762\uff0c\u5b69\u5b50\u4eec\u5f00\u59cb\u50cf iPad \u4e00\u6837\u8d2a\u5a6a\u5730\u73a9\u5b83\u4eec\u3002\u81f3\u4e8e\u6211\uff0c\u4e00\u4e2a\u6210\u5e74\u4eba\uff0c\u5728\u9762\u5bf9\u6570\u5b57\u8bbe\u5907\u65f6\u4f3c\u4e4e\u4e0d\u9700\u8981\u4e2a\u4eba\u79e9\u5e8f\u6216\u63a7\u5236\u65f6\u95f4\uff0c\u6211\u60f3\u51cf\u5c11\u5de5\u4f5c\u3001\u68c0\u67e5\u63d0\u8981\u548c\u73a9\u7535\u5b50\u6e38\u620f\u7684\u65f6\u95f4\u6709\u4e00\u4e2a\u539f\u56e0\uff1aRNG\u3002\u5f00\u53d1\u4eba\u5458\u77e5\u9053 RNG \u662f\u4e00\u79cd\u968f\u673a\u6570\u751f\u6210\u5668\u3002\u5728\u89c6\u9891\u6e38\u620f\u4e16\u754c\u4e2d\uff0c\u6e38\u620f\u73a9\u5bb6\u63d0\u5230\u8fd9\u4e2a\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd\u53ea\u662f\u4e3a\u4e86\u6307\u4ee3\u6e38\u620f\u4e2d\u7684\u201c\u968f\u673a\u6027\u201d\u3002\u968f\u673a\u4e0e\u5426\uff0c\u5728\u73a9\u7535\u5b50\u6e38\u620f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4e00\u5b9a\u4f1a\u8f93\u3002\u5c24\u5176\u662f\u5728\u4e0e\u5176\u4ed6\u771f\u4eba\u5bf9\u6218\u7684\u7f51\u7edc\u6e38\u620f\u4e2d\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u8f93\u7403\u5f88\u7cdf\u7cd5\u3002\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u5267\u70c8\u548c\u5185\u810f\u7684\u75bc\u75db\u3002\u75bc\u75db\u53ea\u6301\u7eed\u51e0\u79d2\u949f\uff0c\u4f46\u50cf\u5200\u5b50\u4e00\u6837\u523a\u75db\u3002\u5f53\u8f93\u7403\u53d1\u751f\u5728\u4f60\u559c\u6b22\u7684\u6e38\u620f\u4e2d\u65f6\uff0c\u5b83\u4f1a\u7279\u522b\u75db\u82e6\uff1b\u4f60\u4e00\u76f4\u5728\u52aa\u529b\u8ba9\u81ea\u5df1\u53d8\u5f97\u66f4\u597d\u3002\n\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u573a\u6bd4\u8d5b\u662f\u706b\u7bad\u8054\u76df\u3002\u4e00\u5e74\u534a\u4ee5\u6765\uff0c\u6211\u51e0\u4e4e\u6bcf\u5929\u90fd\u5728\u73a9\u3002\u5f53\u6211\u83b7\u80dc\u65f6\uff0c\u90a3\u662f\u7eaf\u7cb9\u7684\u72c2\u559c\u3002\u5f53\u6211\u8f93\u7403\u65f6\uff0c\u75db\u82e6\u4f1a\u4f34\u968f\u7740\u6124\u6012\uff0c\u8fd9\u53d6\u51b3\u4e8e\u8f93\u7403\u7684\u4e25\u91cd\u7a0b\u5ea6\uff0c\u6216\u8005\u6211\u89c9\u5f97\u6253\u7403\u662f\u591a\u4e48\u5f92\u52b3\u3002\u4f60\u544a\u8bc9\u81ea\u5df1\uff0c\u5982\u679c\u6211\u7ee7\u7eed\u6253\u7403\uff0c\u6211\u4f1a\u53d8\u5f97\u66f4\u597d\uff0c\u6211\u4f1a\u8f93\u5f97\u66f4\u5c11\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u8c0e\u8a00\u3002\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u5931\u53bb\u66f4\u5c11\uff0c\u56e0\u4e3a\u5f53\u4f60\u53d8\u5f97\u66f4\u597d\u65f6\uff0c\u4f60\u4f1a\u9047\u5230\u540c\u6837\u53d8\u5f97\u66f4\u597d\u7684\u4eba\u3002\u7ed3\u679c\u662f\u4f60\u603b\u662f\u5728\u4e0e\u5fd7\u540c\u9053\u5408\u7684\u4eba\u6bd4\u8d5b\u3002\u60b2\u5267\u5c31\u8fd9\u6837\u53d1\u751f\u4e86\uff1a\u4f60\u5728\u6570\u5b57\u5316\u3001\u5feb\u8282\u594f\u7684\u6e38\u620f\u4e2d\u8f93\u8d62\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u968f\u673a\u7684\u3002\u6e38\u620f\u672c\u8eab\u4e0d\u662f\u968f\u673a\u7684\uff0c\u4f46\u60a8\u5728\u6570\u5b57\u4e16\u754c\u4e2d\u4e0e\u5176\u4ed6\u4eba\u7684\u4e92\u52a8\u6216\u591a\u6216\u5c11\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\u3002\u5728\u706b\u7bad\u8054\u76df\u7684\u6bd4\u8d5b\u4e2d\uff0c\u4e24\u4e2a\u7403\u5458\u53ef\u80fd\u540c\u65f6\u98de\u5411\u540c\u4e00\u4e2a\u7403\uff0c\u4e00\u5343\u4e2a\u56e0\u7d20\u5c06\u51b3\u5b9a\u7403\u7684\u8d70\u5411\u3002\u8fd9\u79cd\u4e92\u52a8\u5728\u706b\u7bad\u8054\u76df\u4e2d\u88ab\u79f0\u4e3a\u201c50/50\u201d\uff0c\u56e0\u4e3a\u5b83\u672c\u8d28\u4e0a\u51e0\u4e4e\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\u3002\u95ee\u9898\u662f\uff0c\u5982\u679c\u8d62\u5f97\u4e00\u573a\u6bd4\u8d5b\u5bf9\u4f60\u6765\u8bf4\u975e\u5e38\u91cd\u8981\uff0c\u800c\u80dc\u5229\u662f\u7531\u8fd9\u4e9b\u6df7\u4e71\u7684\u4e92\u52a8\u51b3\u5b9a\u7684\uff0c\u90a3\u4e48\u4f60\u5c31\u5c06\u81ea\u5df1\u7684\u60c5\u7eea\u7559\u7ed9\u4e86\u673a\u4f1a\u3002\u6839\u636e\u6211\u7684\u7ecf\u9a8c\uff0c\u8f93\u8d62\u7684\u60c5\u7eea\u540e\u679c\u53ef\u80fd\u4f1a\u6301\u7eed\u51e0\u4e2a\u5c0f\u65f6\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u5929\u4e0b\u5348 1 \u70b9\u5de6\u53f3\uff0c\u6211\u6709 50% \u7684\u673a\u4f1a\u5728\u63a5\u4e0b\u6765\u7684\u4e24\u4e2a\u5c0f\u65f6\u91cc\u611f\u89c9\u5f88\u7cdf\u7cd5\u3002\u4f60\u731c\u600e\u4e48\u7740\u2014\u2014\u6211\u505a\u5230\u4e86\u3002\u5f53\u6211\u6709\u5931\u8d25\u7684\u4e00\u5929\u65f6\uff0c\u6211\u7684\u5fc3\u60c5\u4f1a\u5982\u6b64\u75db\u82e6\uff0c\u4ee5\u81f3\u4e8e\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u5c0f\u65f6\u91cc\uff0c\u6211\u53ea\u60f3\u505a\u4efb\u4f55\u4e8b\uff0c\u53ea\u662f\u75b2\u5026\u3002\u5de5\u4f5c\u4e5f\u662f\u4e00\u6837\uff1a\u5982\u679c\u6211\u7684\u60c5\u7eea\u53d6\u51b3\u4e8e\u6211\u6253\u5f00\u7535\u5b50\u90ae\u4ef6\u6536\u4ef6\u7bb1\u65f6\u6536\u5230\u7684\u9519\u8bef\u62a5\u544a\u7684\u591a\u5c11\u6216\u591a\u5c11\uff0c\u6216\u8005\u524d\u4e00\u5929\u4ea7\u751f\u4e86\u591a\u5c11\u6d41\u91cf\u548c\u9500\u552e\u989d\uff0c\u90a3\u4e48\u6211\u7684\u60c5\u7eea\u7a33\u5b9a\u6027\u5c31\u53d6\u51b3\u4e8e\u673a\u4f1a\u4e86.\u5f53\u7136\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u8fd9\u4e9b\u6570\u5b57\u5f80\u5f80\u4f1a\u5f62\u6210\u5e73\u5747\u503c\uff0c\u4f46\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u60a8\u6c38\u8fdc\u4e0d\u4f1a\u5b8c\u5168\u4e86\u89e3\u5373\u5c06\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u5f62\u72b6\u6216\u5f62\u5f0f\u3002\u6211\u66fe\u7ecf\u5c06\u5de5\u4f5c\u7535\u5b50\u90ae\u4ef6\u548c\u901a\u77e5\u76f4\u63a5\u53d1\u9001\u5230\u6211\u7684\u624b\u673a\u9501\u5b9a\u5c4f\u5e55\uff0c\u6240\u4ee5\u6211\u603b\u662f\u77e5\u9053\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u5728\u624b\u8155\u7684\u6bcf\u4e00\u6b21\u8f6c\u52a8\u4e2d\u90fd\u5728\u5076\u7136\u5730\u8df3\u821e\u3002\u6709\u65f6\uff0c\u597d\u6d88\u606f\u4f1a\u70b9\u4eae\u6211\u7684\u624b\u673a\uff0c\u4e5f\u4f1a\u70b9\u4eae\u6211\u7684\u8138\u3002\u5176\u4ed6\u65f6\u5019\uff0c\u5b8c\u5168\u76f8\u53cd\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u73b0\u5728\u6bcf\u5929\u65e9\u4e0a\u53ea\u68c0\u67e5\u4e00\u6b21\u4efb\u4f55\u7c7b\u578b\u7684\u901a\u77e5\u3002\u5426\u5219\uff0c\u6211\u7684\u624b\u673a\u5b8c\u5168\u6ca1\u6709\u4efb\u4f55\u901a\u77e5\u548c\u5e10\u6237\u3002\u6700\u540e\uff1a\u9972\u6599\u3002\u6211\u6240\u8bf4\u7684\u63d0\u8981\u662f\u6307\u6570\u5b57\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u63d0\u4f9b\u4e0d\u65ad\u53d8\u5316\u7684\u63d0\u8981\u5e76\u4e3a\u60a8\u63d0\u4f9b\u65b0\u7684\u4e1c\u897f\u3002 Reddit\u3001Instagram\u3001Twitter\u3001Facebook \u7b49\u3002\u9972\u6599\u53d8\u5f97\u5371\u9669\u6709\u4e24\u4e2a\u539f\u56e0\uff1a1\uff09RNG\u3002\u4f60\u6c38\u8fdc\u4e0d\u77e5\u9053\u4f60\u4f1a\u5f97\u5230\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5b83\u662f\u5426\u4f1a\u8ba9\u4f60\u5fc3\u70e6\u610f\u4e71\u6216\u8ba9\u4f60\u5feb\u4e50\uff0c2) \u5355\u7eaf\u7684\u63d0\u795e\u884c\u4e3a\u53d8\u6210\u4e86\u672c\u80fd\u3002\u6211\u53ef\u80fd\u5728\u6392\u961f\uff0c\u6216\u8005\u4ece\u4e00\u4e2a\u623f\u95f4\u8d70\u5230\u53e6\u4e00\u4e2a\u623f\u95f4\uff0c\u7136\u540e\u53cd\u5c04\u6027\u5730\u4f38\u624b\u53bb\u67e5\u770b\u4e00\u4e9b\u63d0\u8981\uff0c\u7136\u540e\u5728 5 \u79d2\u5185\uff0c\u4ece\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8df3\u5230\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6765\u5237\u65b0\uff0c\u6ca1\u6709\u4efb\u4f55\u660e\u663e\u7684\u539f\u56e0\u3002\u62c9\u52a8\u5237\u65b0\u5df2\u7ecf\u627e\u5230\u4e86\u6211\u7684\u9876\u5c42\u67b6\u5b50\u3002\u6211\u7b2c\u4e00\u6b21\u5728\u5403\u96f6\u98df\u7684\u8fc7\u7a0b\u4e2d\u4eb2\u773c\u76ee\u7779\u4e86\u9876\u7ea7\u8d27\u67b6\u539f\u5219\u7684\u4f5c\u7528\uff0c\u540e\u6765\u53c8\u4e0e\u5b69\u5b50\u4eec\u4ee5\u53ca iPad \u7684\u5b58\u5728\u4e0e\u5426\u3002\u6240\u4ee5\u6211\u5fc3\u91cc\u60f3\uff1a\u5982\u679c\u6211\u5f7b\u5e95\u6d17\u52ab\u6211\u7684\u9876\u5c42\u67b6\u5b50\uff0c\u628a\u6211\u4e60\u60ef\u6027\u5730\u559c\u6b22\u7684\u6240\u6709\u7269\u54c1\u90fd\u6254\u6389\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u6211\u4f1a\u56e0\u4e3a\u61d2\u60f0\u800c\u53d1\u75af\u5417\uff1f\u6216\u8005\u6211\u4f1a\u627e\u522b\u7684\u4e8b\u60c5\u505a\u5417\uff1f\u6211\u62d4\u6389\u4e86\u6211\u7684\u6e38\u620f\u7535\u8111\u3002\u6211\u7981\u7528\u4e86\u624b\u673a\u4e0a\u7684\u6240\u6709\u901a\u77e5\u3002\u6211\u5e0c\u671b\u5b83\u662f\u8fd9\u6837\u7684\uff0c\u6bcf\u6b21\u6211\u68c0\u67e5\u6211\u7684\u624b\u673a\u65f6\uff0c\u90fd\u4e0d\u4f1a\u6709\u901a\u77e5\u3002\u8fd9\u6837\uff0c\u6211\u4ec0\u81f3\u4e0d\u5fc5\u68c0\u67e5\u3002\u6211\u53ea\u77e5\u9053\u4e0d\u4f1a\u6709\u3002\u5728\u793e\u4ea4\u6216\u5bb6\u5ead\u6d3b\u52a8\u4e2d\uff0c\u6211\u5b8c\u5168\u5173\u95ed\u4e86\u624b\u673a\u3002\u5f53\u6211\u5bf9\u8c08\u8bdd\u611f\u5230\u538c\u70e6\u65f6\uff0c\u6211\u4e0d\u60f3\u8dd1\u8fc7\u53bb\u3002\u6211\u60f3\u6446\u8131\u65e0\u804a\uff0c\u770b\u770b\u53e6\u4e00\u8fb9\u6709\u4ec0\u4e48\u3002\u7ed3\u679c\u6b63\u5982\u8fd9\u4e2a\u5b8f\u5927\u7684\u4f2a\u539f\u7406\u6240\u9884\u671f\u7684\u90a3\u6837\u3002\u5728\u793e\u4ea4\u573a\u5408\uff0c\u4e0d\u754f\u60e7\u624b\u673a\u8ba9\u6211\u627e\u5230\u4e86\u5176\u4ed6\u5a31\u4e50\u65b9\u5f0f\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8c08\u8bdd\u53ef\u4ee5\u5f88\u6709\u8da3\u3002\u8c01\u77e5\u9053\uff1f\u5f53\u7136\uff0c\u5728\u6709\u7535\u5b50\u6e38\u620f\u7684\u60c5\u51b5\u4e0b\uff0c\u8c08\u8bdd\u4e0d\u4f1a\u662f\uff0c\u4f46\u522b\u65e0\u9009\u62e9\uff0c\u4f60\u627e\u5230\u4e86\u529e\u6cd5\u3002\u8fd9\u6709\u70b9\u50cf\u805a\u4f1a\u4e2d\u5bb3\u7f9e\u7684\u4eba\u8eb2\u5230\u89d2\u843d\u91cc\u770b\u624b\u673a\uff0c\u597d\u50cf\u4ed6\u4eec\u5728\u505a\u67d0\u4e8b\uff0c\u4ee5\u907f\u514d\u793e\u4ea4\u7684\u9648\u8bcd\u6ee5\u8c03\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u73b0\u5728\u77e5\u9053\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u5b8c\u5168\u5173\u95ed\u4f60\u7684\u624b\u673a\uff0c\u6216\u8005\u628a\u5b83\u629b\u5728\u8111\u540e\uff0c\u8fd9\u6837\u4f60\u5c31\u5fc5\u987b\u8fdb\u884c\u793e\u4ea4\u3002\u5f53\u4f60\u4e0d\u5f97\u4e0d\u8fd9\u6837\u505a\u65f6\uff0c\u4f60\u4f1a\u7684\u3002\u800c\u4e14\u4f60\u4e5f\u4f1a\u505a\u5f97\u5f88\u597d\uff0c\u5982\u679c\u9664\u4e86\u5f7b\u5e95\u5a31\u4e50\u81ea\u5df1\u4e4b\u5916\u522b\u65e0\u4ed6\u6cd5\u3002\n\u6ca1\u6709\u7535\u5b50\u6e38\u620f\u53ef\u73a9\uff0c\u5728\u6211\u7684\u4e00\u5929\u4e2d\u5df2\u7ecf\u5f00\u653e\u4e86\u5f88\u591a\u65f6\u95f4\u3002\u7531\u4e8e\u5750\u7740\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\u5b9e\u9645\u4e0a\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\u6211\u603b\u80fd\u627e\u5230\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u3002\u6211\u5f00\u59cb\u63a5\u89e6\u674f\u4ec1\u2014\u2014\u76f8\u5f53\u4e8e\u73b0\u5b9e\u751f\u6d3b\u3002\u6211\u5f00\u59cb\u9605\u8bfb\u66f4\u591a\uff0c\u65e0\u8bba\u662f\u4ece\u7ef4\u57fa\u767e\u79d1\u7684\u5154\u5b50\u6d1e\u4e2d\u6389\u4e0b\u6765\u7684\u957f\u65f6\u95f4\u4f1a\u8bdd\uff0c\u8fd8\u662f 21 \u4e16\u7eaa\u7684 21 \u8bfe\uff0c\u73b0\u5728\u975e\u5e38\u5f15\u4eba\u6ce8\u76ee\u7684\u57fa\u56e0\u3002 \uff08\u4f60\u77e5\u9053\u5417\uff0c\u5728 1920 \u5e74\u4ee3\uff0c\u5728\u7f8e\u5229\u575a\u5408\u4f17\u56fd\uff0c\u5efa\u7acb\u201c\u6b96\u6c11\u5730\u201d\u662f\u4e3a\u4e86\u805a\u96c6\u201c\u611a\u8822\u201d\u7684\u4eba\u5e76\u5bf9\u5176\u8fdb\u884c\u7edd\u80b2\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4e0d\u4f1a\u7e41\u6b96\uff1f\u5f97\u5230\u7f8e\u56fd\u6700\u9ad8\u6cd5\u9662\u7684\u6279\u51c6\u7b49\u7b49\u3002\u5254\u9664\u201c\u5f31\u201d\u53ea\u662f\u56fd\u5bb6\u4e4b\u95f4\u7684\u4e00\u79cd\u8d8b\u52bf\uff0c\u5305\u62ec\u7eb3\u7cb9\u5fb7\u56fd\uff0c\u5728\u9057\u4f20\u5b66\u7684\u65b0\u53d1\u73b0\u548c\u89e3\u91ca\u4e2d\u3002\uff09\u5f53\u6211\u538c\u5026\u4e86\u8eba\u5728\u6570\u5b57\u8bbe\u5907\u4e0a\u65f6\uff0c\u6211\u653e\u4e0b\u5b83\uff0c\u5750\u76f4\uff0c\u5e76\u8003\u8651\u6211\u7684\u4e0b\u4e00\u6b65\u884c\u52a8\u3002 \u201c\u55ef\uff0c\u6211\u4e0d\u80fd\u73a9\u7535\u5b50\u6e38\u620f\u3002\u6211\u6ca1\u6709\u4efb\u4f55\u53ef\u4ee5\u8ff7\u5931\u7684\u6570\u5b57\u4fe1\u606f\u3002\u800c\u4e14\u6211\u4e0d\u4f1a\u5750\u5728\u8fd9\u91cc\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\u201d\u4e8e\u662f\u6211\u8d77\u8eab\u6d17\u7897\uff0c\u6253\u626b\u53a8\u623f\u3002\u6211\u62e7\u7d27\u4e86\u4e00\u4e2a\u677e\u52a8\u7684\u95e8\u628a\u624b\u3002\u6211\u5728\u623f\u5b50\u5468\u56f4\u505a\u4e86\u4e00\u4e9b\u5176\u4ed6\u7ef4\u4fee\u3002\u8fd9\u662f\u8fd9\u4e2a\u5947\u602a\u5b9e\u9a8c\u7684\u7b2c\u4e09\u5468\u3002\u800c\u4e14\u6211\u6ca1\u6709\u9a97\u4f60\u2014\u2014\u627e\u4e00\u4efd\u5bb6\u52a1\u6d3b\u548c\u73a9\u706b\u7bad\u8054\u76df\u4e00\u6837\u4ee4\u4eba\u5174\u594b\u3002", "note_en": "Say you have before you a kitchen cabinet with three shelves. On the top shelf you have your most delicious snacks and delicacies. Chocolate chip cookies, crispy cheetos, and frozen pistachio gelato. In the middle shelf you have snacks that are &#34;not bad&#34;, but not the most scrumptious. Maybe some beef jerky, plain pretzels, and a granola bar. On the bottom shelf, you have your survival snacks. You wouldn&#39;t eat them unless you were starving. For me that&#39;d be plain almonds.\n I&#39;ve found that when I&#39;m in the mood for a snack, my hand will always reach for top-shelf items. If the cabinet is stocked with soft chocolate chip cookies and spicy potato chips dripping with oil, I&#39;ll never reach for the almonds. The end result was that almonds never got eaten. In the presence of top-shelf items, almonds just didn&#39;t seem delicious enough. They were boring.\n But I found that as soon as all the delicious top-shelf items ran out, and all I was left with were mid-shelf items like plain pretzels, the plain pretzels began floating to the top. They became a top-shelf item, and reaching for them became relatively instinctual.\n  Options, not just in snacking but in any domain, tend to sort themselves by most satisfying first.\n On average, you will choose items sorted higher in the satisfaction queue. And anecdotally, what is most satisfying in the short term is typically not what is healthiest in the long term.\n The amount of will-power and discipline required to choose an option increases with its sort order in the satisfaction queue. That is, the first item\u2014the top-shelf item\u2014, will require very little will-power to act upon. Items towards the end of the queue, however, that are less satisfying but probably healthier, tend to require large doses of long-term thinking and discipline.\n Options do not possess an inherent satisfaction value. They are always relative to one another. In the absence of a historically top-shelf item, items lower in the queue will surface to the top and themselves become top-shelf items.\n In a queue of cheese puffs, chocolate chip cookies, and plain almonds, almonds sound mundane and unappealing. But in a cruel hierarchy containing expired milk, uncooked rice, and almonds, almonds will quickly sort to the beginning of the queue and become heartbreakingly delicious. And you will not feel ripped off for eating them. You will derive more or less equal satisfaction from them as you would any historical top-shelf item.\n This principle has been useful for me in snacking, sure, but has served me far greater in its application towards lifestyle addictions. My lifestyle cabinet looked like this:\n Top shelf:  working, checking some sort of digital feed, like reddit, or twitter, or instagram, and playing video games\n   Naturally, I was doing a lot of top-shelf actions, but hardly any bottom-shelf actions. And I had developed a fatal misunderstanding towards bottom-shelf items: I had thought I hated socializing in real-time because it was inherently unsatisfying to me. I had qualified myself as an innate introvert with no capacity for change. In reality, it wasn&#39;t that I disliked socializing\u2014it was that I enjoyed playing video games more. And with the options of playing video games or checking my phone always available to me, I almost always acted on them first, leaving whatever crumbs of waking capacity (usually none) to items lower in the queue.\n I observed this in the children of family members: if you gave them an iPad to play with, they weren&#39;t going to say no. And when they do get their hands on it, they lose themselves so deeply into the digital world, that they are mostly unavailable in the real one. But take away the iPad, and a remarkable thing happens: they find something else to do. Sure, they might throw a momentary fit, but a kid is a kid, and will not let one second pass without finding some way to entertain themselves. In these cases, where the top-shelf iPad was removed from the equation, items lower in the shelving system, like two blocks of legos, surfaced to the top, and the kids began playing with them with as equal voracity as the iPad.\n As for me, a grown adult with no seeming need for personal order or control in time spent facing a digital device, I wanted to reduce working, checking feeds, and playing video games for one reason:  RNG.\n Developers know RNG as a random number generator. In the video game world, gamers refer to the acronym simply to refer to &#34;randomness&#34; in a game. Random or not, in the course of playing video games, you are bound to lose. Especially in a networked game where you play against other real people. Losing, in a word, sucks. It&#39;s a very sharp and gutting pain. The pain lasts only seconds, but stabs like a knife. Losing can be especially painful when it happens in a game you love; one which you&#39;ve been working hard to better yourself in.\n For me, this game was Rocket League. I&#39;d been playing almost every day for a year and a half. When I&#39;m winning, it&#39;s pure ecstasy. When I&#39;m losing, it&#39;s pain coupled with RAGE, depending on how bad the loss is, or how futile I feel playing. You tell yourself, if I keep playing, I&#39;ll get better, and I&#39;ll lose less. Of course, that&#39;s a lie. You won&#39;t ever lose less, because as you get better, you get matched up against people who are also getting better. The result is that you&#39;re always playing against like-minded people.\n The tragedy comes into play thusly: whether you win or lose in a digital, fast-paced game is largely random. The games themselves aren&#39;t random, but the interactions you have in the digital world with other people are more or less unpredictable. In a game of Rocket League, two players may fly towards the same ball, at the same time, and a thousand factors will determine which way the ball goes. This interaction is literally called a &#34;50/50&#34; in Rocket League, because it&#39;s almost inherently unpredictable. The problem is, if winning a game is very important to you, and victories are decided by these chaotic interactions, then you leave your emotions to chance. In my experience, the emotional aftermath of winning or losing could last a couple hours. That meant that every day, there was a 50% chance that around 1PM, I would feel like shit for the next two hours. And guess what\u2014I did. When I had a losing day, I would be in such a bitter mood, that I felt like doing nothing but languishing for the next few hours.\n Same with work: if my emotions depended on how little or many bug reports I&#39;d receive when I open my email inbox, or how much traffic and sales the previous day had generated, then I was leaving my emotional stability in the hands of chance. Of course, these figures tend to form averages over time, but on a day-to-day basis, you never quite knew the shape or form of what was to come. I used to have work email and notifications make it directly to my phone lock screen, so I was  always in the know. In other words, I danced with chance at every turn of the wrist. Sometimes, good news would light up my phone, and with it my face. Other times, definitively the opposite. The short of it is that I now only check notifications, of any kind, once a day in the morning. Otherwise, my phone is completely devoid of notifications and accounts of any kind.\n Lastly: feeds. By feeds I mean digital applications that offer feeds that constantly change and offer you something new. Reddit, Instagram, Twitter, Facebook, and the like. Feeds became dangerous for two reasons: 1) RNG. You never quite knew what you were going to get, and whether it would upset you or make you happy, and 2) the mere act of refreshing feeds became instinctual. I could be standing in line, or walking from room to room, and reflexively reach for my phone to check some feed, and in the span of 5 seconds, bounce from app to app pulling-to-refresh, for no apparent reason whatsoever. Pulling to refresh had found its way to my top shelf.\n I had first witnessed the top shelf principle in action in my very serious ordeal with snacking, and later with kids and the presence or absence of an iPad. So I thought to myself: if I completely ransacked my top shelf, and disposed of all the items I&#39;m habitually inclined to, what would happen? Would I go mad with idleness? Or would I find something else to do?\n I unplugged my gaming PC. I disabled all notifications from my phone. I wanted it to be so that every time I checked my phone, there would be no notifications. This way, I wouldn&#39;t even have to check. I would just know there wouldn\u2019t be any. In the midst of social or family events, I completely turned my phone off. I didn&#39;t want to run to it when I felt bored with conversation. I wanted to push past boredom to see what lay on the other side.\n The result has been as anticipated by this grand pseudo-principle. In social situations, not cowering to my phone has led me to find other ways to entertain myself. And it turns out, conversation can be quite entertaining. Who knew? Of course, in the presence of video games, conversation wouldn&#39;t be, but stranded with no other options, you find a way. It&#39;s sort of like the cliche of the shy person in a party retreating to the corner and checking their phone, to seem like they&#39;re doing something, as to avoid socializing. In this case, I now know the solution to this problem is shutting off your phone entirely, or leaving it behind, so that you  have to socialize. When you have to, you will. And you&#39;ll do it well too, if for no reason other than to thoroughly entertain yourself.\n Not having video games to reach to, great blocks of time have opened in my day. And as sitting and not doing anything is quite literally undefined, I always found  something to do. I began reaching for the almonds-equivalent of real life. I began reading more, whether it be a long session falling down the Wikipedia rabbit hole, or  21 Lessons for the 21st Century, and now the very compelling  The Gene. (Did you know that in the 1920&#39;s, in the United States of America, &#34;colonies&#34; were set up to aggregate &#34;dumb&#34; people and sterilize them so they wouldn&#39;t reproduce? Approved by the U.S Supreme Court and everything. Culling the &#34;weak&#34; was just a trend amongst nations, including Nazi Germany, amidst new discoveries and interpretations in genetics.) When I grew tired of laying with a digital device, I put it down, sat up straight, and contemplated my next move. &#34;Well, I can&#39;t play video games. I don&#39;t have any digital feeds to get lost in. And I&#39;m not going to sit here and do nothing.&#34; So I got up and did the dishes and cleaned the kitchen. I tightened a loose door knob. I did some other repairs around the house.\n This is week three of this strange experiment. And I kid you not\u2014finding a chore to be done has been as exciting a prospect as playing a game of Rocket League.", "posttime": "2021-08-10 06:47:00", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9876\u7ea7,shelf,\u4e0d\u4f1a", "title": "\u9876\u7ea7\u539f\u5219", "title_en": "The Top-Shelf Principle", "transed": 1, "url": "https://listed.to/@mo/4733/the-top-shelf-principle", "via": "", "real_tags": ["\u9876\u7ea7", "shelf", "\u4e0d\u4f1a"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1072438, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u662f\u4e00\u4e2a\u6175\u61d2\u7684\u5468\u4e8c\u4e0b\u5348\u3002\u4e5f\u8bb8\u4f60\u6b63\u5728\u95f2\u901b\u4f60\u6700\u559c\u6b22\u7684\u65b0\u95fb\u805a\u5408\u5668\uff0c\u6216\u8005\u8bbf\u95ee The Orange \u7f51\u7ad9\uff0c\u901a\u8fc7\u6a21\u7cca\u7684\u521b\u4e1a\u56e2\u4f53\u601d\u7ef4\u6765\u5bfb\u627e\u6709\u8da3\u7684\u94fe\u63a5\u3002\u7136\u800c\uff0c\u4eca\u5929\uff0c\u4f60\u9047\u5230\u4e86\u4e00\u4e2a\u8c1c\u3002\u4e00\u79cd\u4e13\u6709\u7684\u3001\u95ed\u6e90\u7684\u3001\u5546\u4e1a\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u4e00\u4e2a\u5947\u602a\u7684\u65f6\u4ee3\u9519\u8bef\u3002\u8fd9\u4e9b\u7a0b\u5e8f\uff0c\u5982\u679c\u4f60\u53ef\u4ee5\u8fd9\u6837\u79f0\u547c\u5b83\u4eec\u7684\u8bdd\uff0c\u5c31\u50cf\u662f\u957f\u65f6\u95f4\u7528\u952e\u76d8\u6253\u67b6\u7684\u7ed3\u679c\u3002\u8be5\u8bed\u8a00\u7b80\u79f0\u4e3a\u201cK\u201d\u3002\u5728\u4e0d\u81ea\u89c9\u5730\u5c06\u89c6\u7ebf\u4ece\u9644\u8fd1\u7ec8\u7aef\u7684 C \u7f16\u8bd1\u5668\u8f93\u51fa\u4e0a\u79fb\u5f00\u4e4b\u524d\uff0c\u60a8\u5bf9\u5355\u5b57\u6bcd\u540d\u79f0\u7684\u7c97\u4fd7\u5192\u6627\u55e4\u4e4b\u4ee5\u9f3b\u3002 int sum = 0;for (int i = 0; i &lt; 100; i++) { sum += i;} \u8fd9\u4e9b\u7a0b\u5e8f\u7684\u7ed3\u6784\u4e4b\u95f4\u6ca1\u6709\u53ef\u89c1\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u60a8\u5728 K \u4e2d\u770b\u4e0d\u5230\u4efb\u4f55\u8bcd\u7c7b\uff0c\u4e5f\u6ca1\u6709\u8981\u638c\u63e1\u7684\u540d\u79f0\u6765\u63d0\u53d6\u542b\u4e49\u3002\u4ee4\u4eba\u6cae\u4e27\uff0c\u4f46\u2026\u2026\u6709\u8da3\u3002 K \u4f3c\u4e4e\u662f\u8fd9\u4e9b\u201c\u4ee3\u7801\u9ad8\u5c14\u592b\u201d\u8bed\u8a00\u4e4b\u4e00\uff0c\u65e8\u5728\u7f16\u5199\u795e\u79d8\u7684\u5355\u884c\u4ee3\u7801\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\uff08\u952e\uff09\u51fb\u5e76\u5c55\u793a\u4e00\u4e2a\u4eba\u7684\u806a\u660e\u624d\u667a\u3002\u8c01\u4e0d\u559c\u6b22\u5c55\u793a\u81ea\u5df1\u7684\u806a\u660e\uff1f\u7136\u540e\u4f60\u76b1\u8d77\u7709\u5934\uff0c\u8bb0\u4f4f\u806a\u660e\u7684\u4ee3\u7801\u662f\u4e0d\u53ef\u80fd\u7ef4\u62a4\u7684\u3002\u5728\u4e00\u7bc7\u8bba\u6587\u80fd\u591f\u4ece\u4f60\u7684\u624b\u6307\u4e0a\u8bb2\u51fa\u7b80\u5355\u4ee3\u7801\u7684\u4ef7\u503c\u4e4b\u524d\uff0c\u5373\u4f7f\u662f\u5728\u65af\u5766\u798f\u5927\u5b66\u53d7\u8fc7\u6559\u80b2\u7684\u6700\u521d\u7ea7\u7684\u8c37\u6b4c\u5458\u5de5\u4e5f\u80fd\u7406\u89e3\uff08\u4f18\u5316\u662f\u4e07\u6076\u4e4b\u6e90\uff0c\u6b63\u5982\u4f60\u66fe\u7ecf\u8bfb\u8fc7\u7684\u90a3\u6837\uff09\u522b\u4eba\u6307\u51fa\u66f4\u76f4\u63a5\u5730\u7ffb\u8bd1\u6210\u53e6\u4e00\u79cd\u8bed\u8a00\u53ef\u80fd\u770b\u8d77\u6765\u50cf\uff1a\u73b0\u5728\u901a\u4fe1\u66f4\u6e05\u6670\u4e86\u3002\u5982\u679c K \u4e2d\u7684\u6bcf\u4e2a\u6807\u70b9\u5b57\u7b26\u90fd\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8bcd\u6027\uff0c\u5e76\u4e14\u60a8\u98a0\u5012\u5b83\u4eec\u7684\u987a\u5e8f\u2026\u2026\u5012\u9000\uff01\u4f60\u5fcd\u4f4f\u4e86\u7b11\u58f0\u3002\u63a5\u4e0b\u6765\u662f\u4ec0\u4e48\uff1f\u4ecd\u7136\u6000\u7591\uff0c\u4f46\u8d8a\u6765\u8d8a\u591a\u5730\u6295\u5165\u5230\u8fd9\u4e2a\u8c1c\u9898\u4e2d\uff0c\u4f60\u82b1\u4e00\u4e9b\u65f6\u95f4\u9605\u8bfb\u66f4\u591a\u5173\u4e8e K \u7684\u5185\u5bb9\u3002\u4e00\u4e9b\u6d41\u6c13\u75af\u5b50\u5df2\u7ecf\u4e3a\u8be5\u8bed\u8a00\u7684\u65b9\u8a00\u63d0\u4f9b\u4e86\u4e3b\u8981\u5de5\u4f5c\u7684\u5f00\u6e90\u89e3\u91ca\u5668\uff0c\u6240\u4ee5\u4f60\u8bd5\u4e00\u8bd5\u3002\u60a8\u9605\u8bfb\u4e86\u4e00\u4e9b\u6587\u7ae0\u548c\u6559\u7a0b\uff0c\u7ffb\u9605\u4e86\u4f5c\u4e3a\u8be5\u8bed\u8a00\u4e3b\u8981\u7efc\u5408\u53c2\u8003\u8d44\u6599\u7684 K2 \u624b\u518c\uff0c\u5e76\u5c1d\u8bd5\u89e3\u51b3\u4e00\u4e9b Project Euler \u95ee\u9898\u3002\n\u5728\u60a8\u9605\u8bfb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u4f1a\u77ed\u6682\u5730\u9047\u5230 J \u548c APL\uff0c\u5b83\u4eec\u770b\u8d77\u6765\u6bd4 K \u66f4\u964c\u751f\uff0c\u4f46\u2026\u2026\u5728\u8bb8\u591a\u65b9\u9762\u90fd\u76f8\u540c\u3002 J \u548c APL \u6709 K \u7684\u4ece\u53f3\u5230\u5de6\u6c42\u503c\uff08\u51fa\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u4ee4\u4eba\u8ba8\u538c\u5730\u8511\u89c6 PEMDAS\uff09\uff0c/ \u7b26\u53f7\u7684\u610f\u601d\u662f\u201c\u51cf\u5c11\u201d\uff0c\u60a8\u53ef\u4ee5\u50cf\u6dfb\u52a0\u5355\u4e2a\u6570\u5b57\u4e00\u6837\u8f7b\u677e\u5730\u5c06 5 \u6dfb\u52a0\u5230\u6574\u4e2a\u77e9\u9635\u3002\u4e3a\u4ec0\u4e48\u4f60\u60f3\u8981\u8fd9\u4e2a\u5c5e\u6027\u4ecd\u7136\u96be\u4ee5\u6349\u6478 - \u5b83\u770b\u8d77\u6765\u76f8\u5f53\u5b66\u672f\u548c\u6570\u5b66 - \u4f46\u4f60\u4e0d\u5f97\u4e0d\u627f\u8ba4\u5b83\u76f8\u5f53\u6574\u6d01\u3002\u4f60\u6709\u8d8a\u6765\u8d8a\u591a\u7684\u5370\u8c61\uff0cK \u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u4e00\u6b21\u6027\u7684\u602a\u4eba\uff0c\u800c\u662f\u6574\u4e2a\u5bb6\u8c31\u4e2d\u7684\u4e00\u5458\u3002\u597d\u5427\uff0cK\u6709\u4e00\u4e9b\u5438\u5f15\u529b\u3002\u80fd\u591f\u51b2\u6389 ,/ \u6241\u5e73\u5316\u5217\u8868\u662f\u5f88\u597d\u7684\u3002 \u201c\u7b49\u7ea7\u201d\u8fd0\u7b97\u7b26 &lt; \u548c &gt; \u8d77\u521d\u4f3c\u4e4e\u662f\u4e00\u79cd\u7b28\u62d9\u7684\u6392\u5e8f\u65b9\u5f0f\uff0c\u4f46\u662f\u60a8\u5f00\u59cb\u53d1\u73b0\u201c\u7f6e\u6362\u5411\u91cf\u201d\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7528\u9014\u3002\u5173\u4e8e\u5217\u8868\u7d22\u5f15\u548c\u51fd\u6570\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u6210\u4e3a\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u8fd9\u662f\u975e\u5e38\u6b63\u786e\u7684\u3002 K \u4f3c\u4e4e\u592a\u7279\u5b9a\u4e8e\u9886\u57df\u800c\u65e0\u6cd5\u7528\u4e8e\u5b9e\u9645\u5de5\u4f5c\uff0c\u4f46\u4e5f\u8bb8\u5c06\u67d0\u4e9b K \u539f\u8bed\u5b9e\u73b0\u4e3a\u60a8\u6700\u559c\u6b22\u7684\u8bed\u8a00\u7684\u5e93\u4f1a\u5f88\u65b9\u4fbf\uff1f\u7b26\u53f7\u4ecd\u7136\u611f\u89c9\u50cf\u4e00\u4e2a\u95ee\u9898\u3002\u7b80\u5355\u5730\u4f7f\u7528\u62fc\u5199\u7684\u540d\u79f0\u4e0d\u662f\u66f4\u6e05\u6670\u3001\u66f4\u6613\u8bfb\u5417\uff1f\u4e5f\u8bb8\u800c\u4e0d\u662f\u5199\u4f5c\uff1a\u539f\u5219\u4e0a\uff0c\u8fd9\u5e94\u8be5\u66f4\u5177\u53ef\u8bfb\u6027\u548c\u66f4\u5bb9\u6613\u7406\u89e3\u3002\u60a8\u5df2\u5c3d\u804c\u5c3d\u8d23\u5730\u5c06\u5b9a\u4e49\u5206\u89e3\u4e3a\u53ef\u91cd\u590d\u4f7f\u7528\u7684\u90e8\u5206\uff0c\u5e76\u4e3a\u5b83\u4eec\u6307\u5b9a\u4e86\u6e05\u6670\u3001\u6709\u610f\u4e49\u7684\u540d\u79f0\uff0c\u8fd9\u662f\u60a8\u5728\u6700\u65e9\u7684\u7f16\u7a0b\u8bfe\u7a0b\u4e2d\u5b66\u5230\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u5e76\u5728\u60a8\u7684\u6574\u4e2a\u804c\u4e1a\u751f\u6daf\u4e2d\u5f97\u5230\u4e86\u8d2f\u5f7b\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e00\u6b21\u7684\u7ed3\u679c\u4ee4\u4eba\u62c5\u5fe7\uff0c\u4ee4\u4eba\u4e0d\u6ee1\u610f\u3002\u5982\u679c\u4f60\u5199\u5f97\u66f4\u7b80\u6d01\uff0c\u201cmostCommon\u201d\u8fd9\u4e2a\u540d\u5b57\u6bd4 K \u4e2d\u7684\u6574\u4e2a\u5b9a\u4e49\u90fd\u8981\u957f\u3002\u53ef\u4ee5\u628a K \u5199\u6210\u4e00\u4e2a\u770b\u8d77\u6765\u5f88\u5947\u602a\u7684 Lisp\u3001M \u8868\u8fbe\u5f0f\u7b49\u7b49\uff1a\u6216\u8005\u4f60\u53ef\u4ee5\u5728\u6ca1\u6709\u6761\u4ef6\u3001\u9012\u5f52\u6216\u4efb\u4f55\u660e\u786e\u547d\u540d\u7684\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u8868\u8fbe\u76f8\u540c\u7684\u60f3\u6cd5\uff1a\u7ed9 K \u4e60\u8bed\u4e00\u4e2a\u540d\u5b57\u662f\u5426\u4f1a\u8ba9\u5b83\u66f4\u6e05\u6670\uff0c\u6216\u8005\u5b83\u662f\u5426\u63a9\u76d6\u4e86\u5b9e\u9645\u53d1\u751f\u7684\u4e8b\u60c5\uff1f\n\u201c\u5e8f\u6570\u201d\u8fd9\u4e2a\u8bcd\u53ef\u4ee5\u662f\u4efb\u4f55\u610f\u601d\uff0c\u4f46\u7ec4\u5408 &lt;&lt; \u53ea\u5177\u6709\u4e00\u79cd\u542b\u4e49\u3002 \uff08\u90a3\u4e2a\u70b9\u51fb\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u4f46\u662f\u5f53\u5b83\u70b9\u51fb\u65f6\u5b83\u5f88\u4ee4\u4eba\u6ee1\u610f\u3002\uff09\u5982\u679c\u539f\u59cb\u201c\u7ec4\u201d\u53ea\u662f\u8fd9\u4e2a\u8bcd\u5f00\u5934\uff0c\u4f60\u4f1a\u6bd4\u770b\u5230\u7b26\u53f7=\u66f4\u4e86\u89e3\u5b83\u505a\u4e86\u4ec0\u4e48\u5417\uff1f\u6709\u65f6\uff0c\u957f\u540d\u79f0\u66f4\u5177\u63cf\u8ff0\u6027\uff0c\u4f46\u6709\u65f6\u53ea\u662f\u2026\u2026\u66f4\u957f\u3002\u5b83\u6bd4 +/!100 \u66f4\u660e\u786e\uff0c\u4f46\u73b0\u5728\u5b83\u5728\u4f60\u7684\u5634\u91cc\u7559\u4e0b\u4e86\u4e0d\u597d\u7684\u5473\u9053\u3002\u67e5\u770b\u60a8\u540c\u4e8b\u4eca\u5929\u63d0\u4ea4\u7684\u8865\u4e01\uff0c\u60a8\u53d1\u73b0\u4e00\u4e2a\u5177\u6709\u719f\u6089\u7ed3\u6784\u7684\u5faa\u73af\uff1a let max = list[0];for (let i = 0; i &lt; list.length; i++) { if (list[i] &gt;\u6700\u5927\u503c\uff09{ \u6700\u5927\u503c = \u5217\u8868 [i];\u60a8\u63d0\u51fa\u4e86\u4e00\u4e2a\u66ff\u4ee3\u65b9\u6848\uff0c\u5bf9\u907f\u514d\u4e0e JavaScript \u7684\u53ef\u53d8\u53c2\u6570 Math.max() \u53d1\u751f\u51b2\u7a81\u6240\u9700\u7684 lambda \u8868\u793a\u6cd5\u7565\u6709\u754f\u7f29\uff1a\u60a8\u7684\u5efa\u8bae\u88ab\u62d2\u7edd\u4e3a\u795e\u79d8\u4e14\u8fc7\u4e8e\u590d\u6742\u3002 Lambda \u5f88\u96be\u7406\u89e3\uff0c\u66f4\u4e0d\u7528\u8bf4reduce()\u3002\u6709\u4eba\u8ba4\u4e3a\uff0cfor \u5faa\u73af\u66f4\u52a0\u76f4\u89c2\u3001\u81ea\u7136\u548c\u53ef\u8bfb\u3002\u5982\u679c\u60a8\u5728\u4ee3\u7801\u5e93\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u5de7\u5999\u7684\u6280\u5de7\uff0c\u5c06\u65e0\u6cd5\u7ef4\u62a4\u3002\u505a\u51fa\u59a5\u534f\uff1a\nlet max = list[0];for (let i = 0; i &lt; list.length; i++) { max = Math.max(list[i], max);} \u5728 Orange \u7f51\u7ad9\u4e0a\uff0c\u6709\u4eba\u53d1\u8d77\u4e86\u4e00\u4e2a\u5173\u4e8e\u4e00\u79cd\u5e26\u6709\u5355\u5b57\u6bcd\u540d\u79f0\u7684\u6666\u6da9\u8bed\u8a00\u3002\u8bc4\u8bba\u8005\u5f88\u5feb\u5c31\u5bf9\u5b83\u7684\u4e0d\u53ef\u8bfb\u6027\u8868\u793a\u6000\u7591\u3002", "note_en": "It is a lazy Tuesday afternoon. Perhaps you were idly browsing your favorite news aggregator, or visiting The Orange Website to wade through murky startup groupthink in search of interesting links.\n Today, though, you arrived at an enigma. A proprietary, closed-source, commercial programming language. A bizarre anachronism. The programs, if you can call them that, resemble the results of a prolonged fistfight with a keyboard. The language is simply called \u201c K\u201d. You snort at the vulgar presumptuousness of a single-letter name, before self-consciously averting your eyes from the C compiler output in a nearby terminal.\n    int sum = 0;for (int i = 0; i &lt; 100; i++) {\tsum += i;}\n There is no visible correspondence between the structure of these programs. You discern no parts of speech in the K, no names to grasp onto to extract meaning. Frustrating, and yet\u2026 intriguing. K seems to be one of these \u201ccode golf\u201d languages designed for writing cryptic one-liners that minimize (key)strokes and demonstrate one\u2019s cleverness. Who doesn\u2019t like to demonstrate their own cleverness? Then you scowl and remember that  clever code is impossible to maintain.\n Before a treatise can work its way out of your fingers on the value of  simple code which is comprehensible to even the most junior Stanford-educated Google employee, (optimization being the root of all evil, as you once read, paraphrased) someone else points out that a more direct translation into  another language might look like:\n  The correspondence is clearer now. If each punctuation character in the K is a separate part of speech, and you reverse their order\u2026\n  Backwards! You stifle a chuckle. What next? Still dubious, but increasingly invested in this puzzle, you spend some time reading more about K. A few  rogue  lunatics have  furnished mostly-working open source interpreters for dialects of the language, so you give them a try. You read a few  essays and  tutorials, flip through the  manual for K2 that serves as the primary comprehensive reference for the language, and have a go at solving some  Project Euler problems.\n In the course of your reading you briefly encounter  J and  APL, which seem even  more alien than K, and yet\u2026 the same in many ways. J and APL have K\u2019s right-to-left evaluation (in annoying defiance of  PEMDAS, for some reason), the  / symbol means \u201creduce\u201d, and you can add 5 to an entire matrix at once as easily as a single number.  Why you would want this property remains elusive- it seems rather  academic and  mathy- but you can\u2019t help but admit that it\u2019s rather neat. You have a growing impression that K is not simply a one-off oddity, but rather a member of a whole family tree.\n Fine, K has some appeal. Being able to dash off  ,/ to flatten a list is nice. The \u201cgrade\u201d operators  &lt; and  &gt; seemed like a clumsy way to sort at first, but you\u2019re starting to see that \u201cpermutation vectors\u201d have many other uses. There\u2019s something deeply  right about how list indexing and function application are the same operation. K seems too domain-specific to use for  real work, but maybe it would be handy to implement some of the K primitives as a library for your favorite language?\n The symbols still feel like a problem. Wouldn\u2019t it be clearer and more readable to simply use spelled-out names? Maybe instead of writing:\n    In principle, this should be more readable and easier to understand. You have dutifully broken down the definition into reusable parts and given them clear, meaningful names, a best-practice that you learned in your earliest programming courses and have carried forward throughout your professional career. Still,  this time there\u2019s something worryingly unsatisfying about the results. The name \u201cmostCommon\u201d is longer than the  entire definition in K if you write it more succinctly.\n It is possible to write K as if it were a strange-looking Lisp,  M-Expressions and all:\n  Or you could express the same idea without conditionals, recursion, or any explicitly named variables:\n  Does giving a K idiom a name make it  clearer, or does it obscure what is  actually happening?\n  The word \u201cordinal\u201d can mean anything, but the composition  &lt;&lt; has exactly one meaning. (That one took a while to click, but it was satisfying when it did.) If the primitive \u201cgroup\u201d was just that word to begin with, would you have known what it  did any more than if you saw the symbol  =?\n  Sometimes a long name is more descriptive, but sometimes it\u2019s just\u2026 longer.\n   It\u2019s more  explicit than  +/!100, but now it leaves a bad taste in your mouth.\n  Reviewing a patch one of your coworkers submitted today, you recognize a loop with a familiar structure:\n let max = list[0];for (let i = 0; i &lt; list.length; i++) {\tif (list[i] &gt; max) { max = list[i]; }}\n You suggest an alternative, wincing slightly at the lambda notation you need to avoid running afoul of JavaScript\u2019s variadic  Math.max():\n  Your suggestion is rebuffed as cryptic and overly complex. Lambdas are hard to understand, not to mention   reduce(). A for loop is much more intuitive, natural, and readable, it is argued. If you used clever tricks everwhere in the codebase, it would be impossible to maintain. A compromise is committed:\n let max = list[0];for (let i = 0; i &lt; list.length; i++) {\tmax = Math.max(list[i], max);}\n On The Orange Website, someone has started a thread about an obscure language with a single-letter name. Commenters are quick to express incredulity at how unreadable it is.", "posttime": "2021-08-10 06:46:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5426\u8ba4,stages,\u8bed\u8a00", "title": "\u5426\u8ba4\u9636\u6bb5", "title_en": "Stages of Denial", "transed": 1, "url": "https://beyondloom.com/blog/denial.html", "via": "", "real_tags": ["\u5426\u8ba4", "stages", "\u8bed\u8a00"]}, {"category": "", "categoryclass": "", "imagename": "eca2f078b1442731841c27ff5ef2343b.png", "infoid": 1072437, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Elle \u662f\u4e00\u4e2a\u7528\u4e8e\u9ed1\u76d2\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u4e00\u81f4\u6027\u68c0\u67e5\u5668\u3002\u7eaf\u7cb9\u57fa\u4e8e\u5ba2\u6237\u5bf9\u4ea4\u6613\u7684\u89c2\u5bdf\uff0c\u5e76\u7ed9\u5b9a\u5bf9\u6570\u636e\u7c7b\u578b\u548c\u64cd\u4f5c\u7684\u4e00\u4e9b\u6700\u5c0f\u7ea6\u675f\uff0c\u5b83\u53ef\u4ee5\u544a\u8bc9\u60a8\u8be5\u89c2\u5bdf\u662f\u5426\u8868\u73b0\u51fa\u5404\u79cd\u4ea4\u6613\u5f02\u5e38\u3002\u5c31\u50cf\u806a\u660e\u7684\u5f8b\u5e08\u4e00\u6837\uff0cElle \u4f1a\u5728\u6545\u4e8b\u4e2d\u5bfb\u627e\u4e0d\u53ef\u80fd\u6309\u8be5\u987a\u5e8f\u53d1\u751f\u7684\u4e00\u7cfb\u5217\u4e8b\u4ef6\uff0c\u5e76\u4f7f\u7528\u8be5\u63a8\u8bba\u6765\u8bc1\u660e\u6545\u4e8b\u4e0d\u80fd\u81ea\u6d3d\u3002\u6982\u8ff0\uff1aElle \u9002\u7528\u4e8e\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u4e14\u4ec5\u5bf9\u4e8b\u52a1\u7ed3\u6784\u8bbe\u7f6e\u4e86\u6700\u5c0f\u7684\u3001\u5b9e\u7528\u7684\u7ea6\u675f\u3002\u9ad8\u6548\uff1aElle \u5728\u5386\u53f2\u957f\u5ea6\u4e0a\u662f ~\u7ebf\u6027\u7684\uff0c\u5e76\u4e14 ~constant\uff0c\u800c\u4e0d\u662f\u6307\u6570\uff0c\u5173\u4e8e\u5e76\u53d1\u6027\u3002\u6709\u6548\uff1aElle \u5728\u6211\u4eec\u68c0\u67e5\u8fc7\u7684\u6bcf\u4e2a\u6570\u636e\u5e93\u4e2d\u90fd\u53d1\u73b0\u4e86\u610f\u5916\u5f02\u5e38\uff0c\u4ece\u5185\u90e8\u4e00\u81f4\u6027\u8fdd\u89c4\u5230\u53cd\u4f9d\u8d56\u5faa\u73af\u3001\u810f\u8bfb\u3001\u66f4\u65b0\u4e22\u5931\u5230\u5b9e\u65f6\u8fdd\u89c4\u3002\u58f0\u97f3\uff1aElle \u53ef\u4ee5\u4ece Adya\u3001Liskov \u548c O&#39;Neil \u7684\u5e7f\u4e49\u9694\u79bb\u7ea7\u522b\u5b9a\u4e49\u4e2d\u627e\u5230\u6240\u6709\uff08\u975e\u8c13\u8bcd\uff09\u5f02\u5e38\u3002 Elucidative\uff1aElle \u53ef\u4ee5\u6307\u51fa\u89c1\u8bc1\u4e00\u81f4\u6027\u8fdd\u89c4\u7684\u6700\u5c0f\u4ea4\u6613\u96c6\uff1b\u5176\u7ed3\u8bba\u6613\u4e8e\u7406\u89e3\u548c\u9a8c\u8bc1\u3002\u8be5\u5b58\u50a8\u5e93\u5305\u542b Elleconsistency \u68c0\u67e5\u5668\u7684 Clojure \u5b9e\u73b0\u53ca\u5176\u968f\u9644\u7684\u6d4b\u8bd5\u5957\u4ef6\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u68c0\u67e5\u81ea\u5df1\u7684\u5386\u53f2\u8bb0\u5f55\u3002\u6211\u4eec\u7684\u8bba\u6587\u6df1\u5165\u4e86\u89e3\u4e86 Elle \u80cc\u540e\u7684\u76ee\u6807\u548c\u76f4\u89c9\uff0c\u5e76\u5bf9\u5176\u7a33\u5065\u6027\u8bc1\u660e\u8fdb\u884c\u4e86\u7c97\u7565\u7684\u5f62\u5f0f\u5316\u3002\u4e00\u4e2a\u8fdc\u672a\u5b8c\u6210\u7684\u6b63\u5f0f\u8bc1\u660e\u8349\u56fe\u662f\u7528 Isabelle/HOL \u8bc1\u660e\u8bed\u8a00\u7f16\u5199\u7684\u3002\n\u5982\u679c\u60a8\u60f3\u4f7f\u7528 Elle \u68c0\u67e5\u6570\u636e\u5e93\uff0c\u8bf7\u53c2\u9605 https://jepsen.io\uff1b Elle \u662f\u5185\u7f6e\u7684\u3002\u5982\u679c\u4f60\u60f3\u5728\u4e0d\u4f7f\u7528 Jepsen \u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 Elle \u68c0\u67e5\u4f60\u81ea\u5df1\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u4f60\u53ef\u4ee5\u5c06 Elle \u4f5c\u4e3a\u4f9d\u8d56\u6dfb\u52a0\u5230\u4efb\u4f55 JVM \u9879\u76ee\uff0c\u5e76\u76f4\u63a5\u8c03\u7528\u5b83\u7684\u68c0\u67e5\u5668\u51fd\u6570\u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f\u975e JVM \u8bed\u8a00\uff0c\u5219\u53ef\u4ee5\u5c06\u5386\u53f2\u8bb0\u5f55\u5199\u5165\u6587\u4ef6\u6216\u6d41\uff0c\u5e76\u8c03\u7528\u4e00\u4e2a\u5c0f\u578b\u5305\u88c5\u7a0b\u5e8f\u6765\u751f\u6210\u8f93\u51fa\u3002 Elle \u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5bf9\u5176\u63a8\u7406\u89c4\u5219\u8fd8\u4e0d\u662f 100% \u6709\u4fe1\u5fc3\u3002 Jepsen \u5efa\u8bae\u624b\u52a8\u68c0\u67e5\u62a5\u544a\u7684\u5f02\u5e38\u4ee5\u786e\u4fdd\u5b83\u4eec\u6709\u6548\u3002\u5982\u679c\u60a8\u613f\u610f\u505a\u51fa\u8d21\u732e\uff0c\u6211\u4eec\u7279\u522b\u6b22\u8fce\u60a8\u5728\u5f62\u5f0f\u8bc1\u660e\u548c\u4e25\u683c\u5b9a\u4e49\u4e00\u81f4\u6027\u6a21\u578b\u65b9\u9762\u63d0\u4f9b\u5e2e\u52a9\u3002\u60f3\u8c61\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\uff08\u7531 :x \u6216 :y \u4e4b\u7c7b\u7684\u952e\u6807\u8bc6\uff09\u90fd\u662f\u4e00\u4e2a\u6570\u5b57\u5217\u8868\u3002\u4e8b\u52a1\u7531\u8bfb\u53d6 [:r :x [1 2 3]] \u7ec4\u6210\uff0c\u5b83\u8fd4\u56de\u7ed9\u5b9a\u5217\u8868\u7684\u5f53\u524d\u503c\uff0c\u5e76\u5199\u5165 [:append :y 4]\uff0c\u5c06\u4e00\u4e2a\u6570\u5b57\u9644\u52a0\u5230\u5217\u8868\u7684\u672b\u5c3e\u3002\u6211\u4eec\u6784\u5efa\u4e86\u4e09\u4e2a\u4e8b\u52a1\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u5df2\u77e5\u5df2\u63d0\u4ea4\uff08:type :ok\uff09\u3002\u7b2c\u4e00\u4e2a\u4e8b\u52a1\u5c06 1 \u9644\u52a0\u5230 :x \u5e76\u89c2\u5bdf\u5230 \u200b\u200b:y = [1]\u3002\u7b2c\u4e8c\u4e2a\u9644\u52a0 2 \u5230 :x \u548c 1 \u5230 :y\u3002\u7b2c\u4e09\u4e2a\u89c2\u5bdf x\uff0c\u5e76\u5c06\u5176\u503c\u89c6\u4e3a [1 2]\u3002 =&gt; ( def h [{ :type :ok, :value [[ :append :x 1] [ :r :y [ 1]]]} { :type :ok, :value [[ :append :x 2] [ :append :y 1]]} { :type :ok, :value [[ :r :x [ 1 2]]]}])h \u73b0\u5728\uff0c\u6211\u4eec\u8981\u6c42 Elle \u68c0\u67e5\u8fd9\u4e2a\u5386\u53f2\u8bb0\u5f55\uff0c\u671f\u671b\u5b83\u662f\u53ef\u5e8f\u5217\u5316\u7684\uff0c\u5e76\u62e5\u6709\u5b83\u5c06\u5f02\u5e38\u8f6c\u50a8\u5230\u540d\u4e3a out/ \u7684\u76ee\u5f55\u3002 =&gt; ( pprint ( a/check { :consistency-models [ :serializable], :directory &quot;out &quot;} h)){ :valid? false, :anomaly-types ( :G1c), :anomalies { :G1c [{ :cycle [{ :type :ok, :value [[ :append :x 2] [ :append :y 1]]} { :type :\u597d\u7684, :value [[ :append :x 1] [ :r :y [ 1]]]} { :type :ok, :value [[ :append :x 2] [ :append :y 1]]}], :steps ({ :type :wr, :key :y, :value 1, :a-mop-index 1, :b-mop-index 1} { :type :ww, :key :x, :value 1, : value&#39; 2, :a-mop-index 0, :b-mop-index 0}), :type :G1c}]}, :not #{ :read-committed}, :also-not #{ :consistent-view :cursor-stability :forward-consistent-view :monotonic-atomic-view :monotonic-snapshot-read :monotonic-view :repeatable-read :serializable :snapshot-isolation :strict-serializable :update-serializable}}\n\u8fd9\u91ccElle\u53ef\u4ee5\u6839\u636eT1\u548cT2\u5404\u81ea\u7684\u8bfb\u5199\u60c5\u51b5\u63a8\u65ad\u51faT1\u548cT2\u4e4b\u95f4\u7684\u8bfb\u5199\u5173\u7cfb\u3002 T2 \u548c T1 \u4e4b\u95f4\u7684\u5199-\u5199\u5173\u7cfb\u662f\u53ef\u63a8\u65ad\u7684\uff0c\u56e0\u4e3a T3 \u89c2\u5bdf\u5230 x = [1,2]\uff0c\u8fd9\u9650\u5236\u4e86\u53ef\u80fd\u7684\u8ffd\u52a0\u987a\u5e8f\u3002\u8fd9\u662f\u4e00\u4e2a G1c \u5f02\u5e38\uff1a\u5faa\u73af\u4fe1\u606f\u6d41\u3002 :cycle \u5b57\u6bb5\u663e\u793a\u8be5\u5faa\u73af\u4e2d\u7684\u64cd\u4f5c\uff0c\u800c :steps \u663e\u793a\u5faa\u73af\u4e2d\u6bcf\u5bf9\u64cd\u4f5c\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u3002\u57fa\u4e8e\u8fd9\u4e2a\u5f02\u5e38\uff0cElle \u5f97\u51fa\u7684\u7ed3\u8bba\u662f\u8fd9\u4e2a\u5386\u53f2\u4e0d\u662f read-committed ---\u8fd9\u662f Elle \u53ef\u4ee5\u8bc1\u660e\u88ab\u8fdd\u53cd\u7684\u6700\u5f31\u7684\u7ea7\u522b\u3002\u6b64\u5916\uff0c\u6b64\u5386\u53f2\u8bb0\u5f55\u8fd8\u8fdd\u53cd\u4e86\u51e0\u4e2a\u66f4\u5f3a\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u4f8b\u5982\u4e00\u81f4\u89c6\u56fe\u548c\u66f4\u65b0\u53ef\u5e8f\u5217\u5316\u3002 $ cat out/G1c.txtG1c #0Let: T1 = {:type :ok, :value [[:append :x 2] [:append :y 1]]} T2 = {:type :ok, :value [[: append :x 1] [:r :y [1]]]}\u7136\u540e\uff1a - T1 &lt; T2\uff0c\u56e0\u4e3a T2 \u89c2\u5bdf\u5230 T1 \u5c06 1 \u9644\u52a0\u5230\u952e :y\u3002 - \u4f46\u662f\uff0cT2 &lt; T1\uff0c\u56e0\u4e3a T1 \u5728 T2 \u5c06 1 \u9644\u52a0\u5230 :x \u4e4b\u540e\u9644\u52a0\u4e86 2\uff1a\u77db\u76fe\uff01\u9664\u4e86\u4e3a\u6bcf\u4e2a\u5355\u72ec\u7684\u5faa\u73af\u7ed8\u5236\u4e00\u4e2a\u56fe\u5f62\u4e4b\u5916\uff0cElle \u8fd8\u4e3a\u4f9d\u8d56\u56fe\u7684\u6bcf\u4e2a\u5f3a\u8fde\u63a5\u7ec4\u4ef6\u751f\u6210\u4e00\u4e2a\u56fe\u3002\u8fd9\u6709\u52a9\u4e8e\u5904\u7406\u5f02\u5e38\u884c\u4e3a\u7684\u8303\u56f4\uff0c\u800c\u5468\u671f\u663e\u793a\u5c3d\u53ef\u80fd\u5c0f\u7684\u4ea4\u6613\u96c6\u3002\u8fd9\u662f\u4e00\u4e2a\u6765\u81ea\u66f4\u590d\u6742\u5386\u53f2\u7684\u56fe\uff0c\u6d89\u53ca\u5b9e\u65f6\u8fb9\u7f18\u3001\u5199-\u5199\u3001\u5199-\u8bfb\u548c\u8bfb-\u5199\u4f9d\u8d56\u5173\u7cfb\uff1a \u4f5c\u4e3a\u7528\u6237\uff0c\u60a8\u8fdb\u5165 Elle \u7684\u4e3b\u8981\u5165\u53e3\u70b9\u5c06\u662f elle.list-append/check \u548c elle.rw-register/\u67e5\u770b\u3002\u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\u4e5f\u6709\u7528\u4e8e\u751f\u6210\u4e8b\u52a1\u5e8f\u5217\u7684\u4ee3\u7801\uff0c\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u4ee3\u7801\u5e94\u7528\u4e8e\u60a8\u7684\u6570\u636e\u5e93\uff1b\u53c2\u89c1\uff0c\u4f8b\u5982\uff0celle.list-append/gen\u3002 Elle \u6709\u5404\u79cd\u5404\u6837\u7684\u5f02\u5e38\u548c\u4e00\u81f4\u6027\u6a21\u578b\uff1b\u53c2\u89c1 elle.consistency-model \u7684\u5b9a\u4e49\u3002\u5e76\u975e\u6bcf\u4e2a\u5f02\u5e38\u90fd\u53ef\u4ee5\u68c0\u6d4b\u5230\uff0c\u4f46\u6211\u4eec\u7684\u76ee\u6807\u662f\u5b8c\u6574\u6027\u3002 Elle \u671f\u671b\u5176\u89c2\u5bdf\u5230\u7684\u5386\u53f2\u4e0e Jepsen \u7684\u683c\u5f0f\u76f8\u540c\u3002\u4e00\u4e2a\u89c2\u5bdf\u5230\u7684\u5386\u53f2\u5e94\u8be5\u662f\u4e00\u4e2a\u6309\u5b9e\u65f6\u987a\u5e8f\u6392\u5217\u7684\u64cd\u4f5c\u5217\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u662f\u4e00\u4e2a\u5982\u4e0b\u5f62\u5f0f\u7684\u6620\u5c04\uff1a\n{ :type \u4e4b\u4e00:invoke, ok, :info, :fail :process \u5355\u4e2a\u6267\u884c\u7ebf\u7a0b\u7684\u903b\u8f91\u6807\u8bc6\u7b26:value \u4e8b\u52a1;\u7ed3\u6784\u548c\u8bed\u4e49\u5404\u4e0d\u76f8\u540c}\u6bcf\u4e2a\u8fdb\u7a0b\u5e94\u8be5\u4ea4\u66ff\u6267\u884c :invoke \u548c :ok/ :info/ :failoperations\u3002 :ok \u8868\u793a\u660e\u786e\u63d0\u4ea4\u7684\u64cd\u4f5c\u3002 :failed \u8868\u793a\u5b83\u80af\u5b9a\u6ca1\u6709\u53d1\u751f\u2014\u2014\u4f8b\u5982\u5b83\u88ab\u4e2d\u6b62\uff0c\u4ece\u672a\u63d0\u4ea4\u5230\u6570\u636e\u5e93\u7b49\u3002 :info \u8868\u793a\u4e0d\u786e\u5b9a\u72b6\u6001\uff1b\u4ea4\u6613\u53ef\u80fd\u53d1\u751f\u4e5f\u53ef\u80fd\u6ca1\u6709\u53d1\u751f\u3002\u5728 :info \u4e4b\u540e\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u80fd\u4e0d\u4f1a\u6267\u884c\u53e6\u4e00\u4e2a\u64cd\u4f5c\uff1b\u8c03\u7528\u5728\u5386\u53f2\u7684\u5176\u4f59\u90e8\u5206\u4fdd\u6301\u5f00\u653e\u3002 elle.core\uff1aElle \u63a8\u7406\u7cfb\u7edf\u7684\u6838\u5fc3\u3002\u8ba1\u7b97\u4e8b\u52a1\u56fe\u5e76\u627e\u5230\u5b83\u4eec\u7684\u5faa\u73af\u3002\u5305\u62ec\u6bcf\u4e2a\u6d41\u7a0b\u548c\u5b9e\u65f6\u8ba2\u5355\u7684\u901a\u7528\u56fe\u8868\u3002 elle.rw-register\uff1a\u5199/\u8bfb\u5bc4\u5b58\u5668\u3002\u63a8\u7406\u89c4\u5219\u8f83\u5f31\uff0c\u4f46\u57fa\u672c\u9002\u7528\u4e8e\u6240\u6709\u7cfb\u7edf\u3002\u5bf9\u8c61\u662f\u5bc4\u5b58\u5668\uff1b\u5199\u5165\u76f2\u76ee\u66ff\u6362\u503c\u3002 elle.list-append\uff1aElle \u6700\u5f3a\u5927\u7684\u63a8\u7406\u89c4\u5219\u3002\u5bf9\u8c61\u662f\u5217\u8868\uff0c\u5199\u5165\u5c06\u552f\u4e00\u5143\u7d20\u9644\u52a0\u5230\u8fd9\u4e9b\u5217\u8868\u4e2d\u3002\u4e0b\u56fe\u663e\u793a\u4e86 Elle \u5728\u4e00\u81f4\u6027\u6a21\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\uff1aa -&gt; b \u8868\u793a\u5982\u679c a \u6210\u7acb\uff0c\u90a3\u4e48 b \u4e5f\u6210\u7acb\u3002\u8be5\u7ed3\u6784\u7684\u6765\u6e90\u53ef\u4ee5\u5728 elle.consistency-model \u4e2d\u627e\u5230\u3002\u6b64\u56fe\u663e\u793a\u4e86 Elle \u5f02\u5e38\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u7bad\u5934 a -&gt; bimplies \u5982\u679c\u6211\u4eec\u5728\u5386\u53f2\u4e2d\u89c2\u5bdf\u5230\u5f02\u5e38 a\uff0c\u90a3\u4e48 b \u4e5f\u5b58\u5728\u4e8e\u5386\u53f2\u4e2d\u3002\nElle \u53ef\u4ee5\u4ece Adya\u3001Liskov \u548c O&#39;Neil \u7684\u5e7f\u4e49\u9694\u79bb\u7ea7\u522b\u5b9a\u4e49\u4e2d\u68c0\u67e5\u6bcf\u4e2a\u975e\u8c13\u8bcd\u5f02\u5e38\u3002\u5176\u4e2d\u5305\u62ec\uff1a \u7279\u5b9a\u68c0\u67e5\u5668\u53ef\u4f7f\u7528\u5176\u4ed6\u5f02\u5e38\uff08\u4f8b\u5982\u5783\u573e\u8bfb\u53d6\u3001\u810f\u66f4\u65b0\u3001\u4e0d\u4e00\u81f4\u7684\u7248\u672c\u987a\u5e8f\uff09\u3002\u5e76\u975e\u6240\u6709\u8fd9\u4e9b\u90fd\u5df2\u5b8c\u5168\u5b9e\u73b0\u2014\u2014\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8bba\u6587\u3002\u4e0d\u4e00\u81f4\u7684\u7248\u672c\u987a\u5e8f\uff1a\u63a8\u7406\u89c4\u5219\u5efa\u8bae\u5bf9\u5355\u4e2a\u5bc6\u94a5\u8fdb\u884c\u5faa\u73af\u66f4\u65b0\u3002\u5783\u573e\u8bfb\u53d6\uff1a\u8bfb\u53d6\u89c2\u5bdf\u5230\u7684\u72b6\u6001\u4e0d\u53ef\u80fd\u662f\u4efb\u4f55\u5199\u5165\u7684\u4ea7\u7269\u3002\u6b64\u5916\uff0cElle \u53ef\u4ee5\u6839\u636e\u8fdb\u7a0b\uff08\u4f8b\u5982\u4f1a\u8bdd\uff09\u6216\u5b9e\u65f6\u987a\u5e8f\u63a8\u65ad\u4e8b\u52a1\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f7f\u5176\u80fd\u591f\u533a\u5206\u4e25\u683c\u7684\u53ef\u4e32\u884c\u5316\u548c\u53ef\u4e32\u884c\u5316\u3002\u5bf9\u4e8e\u5217\u8868\uff0cElle \u53ef\u4ee5\u57fa\u4e8e\u5355\u6b21\u8bfb\u53d6\u63a8\u65ad\u51fa\u952e\u7684 Adya \u7248\u672c\u987a\u5e8f\u7684\u5b8c\u6574\u524d\u7f00\u3002\u5bf9\u4e8e\u5bc4\u5b58\u5668\uff0cElle \u53ef\u4ee5\u6839\u636e\u521d\u59cb\u72b6\u6001\u3001writes-follow-reads\u3001\u8fdb\u7a0b\u548c\u5b9e\u65f6\u987a\u5e8f\u63a8\u65ad\u7248\u672c\u987a\u5e8f\u3002\u5f53 Elle \u58f0\u79f0\u53ef\u89c2\u5bdf\u5386\u53f2\u4e2d\u7684\u5f02\u5e38\u65f6\uff0c\u5b83\u5177\u4f53\u610f\u5473\u7740\u5728\u4e0e\u8be5\u89c2\u5bdf\u5386\u53f2\u517c\u5bb9\u7684\u4efb\u4f55\u62bd\u8c61\u7684 Adya \u98ce\u683c\u7684\u5386\u53f2\u4e2d\uff0c\u8981\u4e48\u5b58\u5728\u76f8\u5e94\u7684\u5f02\u5e38\uff0c\u8981\u4e48\u53d1\u751f\u4e86\u66f4\u7cdf\u7684\u4e8b\u60c5\u2014\u2014\u4f8b\u5982\u4e2d\u6b62\u7684\u9605\u8bfb\u3002\u8fd9\u662f\u6d4b\u8bd5\u771f\u5b9e\u4e16\u754c\u6570\u636e\u5e93\u7684\u81ea\u7136\u7ed3\u679c\uff1b\u5982\u679c\u6570\u636e\u5e93\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u5b58\u5728\uff0c\u5b83\u53ef\u80fd\u4f1a\u8868\u73b0\u51fa\u5b9e\u9645\u4e0a\u6ca1\u6709\u53d1\u751f\u7684\u5f02\u5e38\uff0c\u6216\u8005\u63a9\u76d6\u4e86\u786e\u5b9e\u53d1\u751f\u7684\u5f02\u5e38\u3002\u6211\u4eec\u901a\u8fc7\u80fd\u591f\u533a\u5206\u8bb8\u591a\u7c7b\u522b\u7684\u8bfb\u53d6\u5e76\u5bf9\u8bb8\u591a\u5f02\u5e38\u8fdb\u884c\u91c7\u6837\u6765\u9650\u5236\u8fd9\u4e2a\u95ee\u9898\u7684\u5f71\u54cd\u2014\u2014\u5e0c\u671b\u6700\u7ec8\u6211\u4eec\u80fd\u5e78\u8fd0\u5730\u770b\u5230\u5f02\u5e38\u7684\u201c\u771f\u5b9e\u60c5\u51b5\u201d\u3002\nElle \u4e0d\u5b8c\u6574\uff1a\u5b83\u53ef\u80fd\u65e0\u6cd5\u8bc6\u522b\u88ab\u6d4b\u7cfb\u7edf\u4e2d\u5b58\u5728\u7684\u5f02\u5e38\u3002\u8fd9\u662f\u4e24\u4e2a\u56e0\u7d20\u7684\u7ed3\u679c\uff1aElle \u68c0\u67e5\u4ece\u771f\u5b9e\u6570\u636e\u5e93\u4e2d\u89c2\u5bdf\u5230\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u5176\u4e2d\u4ea4\u6613\u7ed3\u679c\u53ef\u80fd\u672a\u88ab\u89c2\u5bdf\u5230\uff0c\u5e76\u4e14\u65f6\u95f4\u4fe1\u606f\u53ef\u80fd\u4e0d\u50cf\u4eba\u4eec\u5e0c\u671b\u7684\u90a3\u6837\u7cbe\u786e\u3002\u53ef\u4e32\u884c\u5316\u68c0\u67e5\u662f NP \u5b8c\u5168\u7684\uff1b Elle \u6709\u610f\u5c06\u5176\u63a8\u65ad\u9650\u5236\u4e3a\u53ef\u5728\u7ebf\u6027\uff08\u6216\u5bf9\u6570\u7ebf\u6027\uff09\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u63a8\u65ad\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u6211\u4eec\u8ba4\u4e3a Elle \u662f\u201c\u8db3\u591f\u5b8c\u6574\u201d\u7684\u3002\u4e0d\u786e\u5b9a\u6027\u901a\u5e38\u4ec5\u9650\u4e8e\u672a\u89c2\u5bdf\u5230\u7684\u4ea4\u6613\uff0c\u6216\u5386\u53f2\u672b\u5c3e\u7684\u4e00\u5c0f\u90e8\u5206\u4ea4\u6613\u3002\u8fd9\u4e9b\u56fe\u663e\u793a\u4e86 Elle \u7684\u6027\u80fd\u4e0e Knossos \u7ebf\u6027\u5316\u68c0\u67e5\u5668\u7684\u5bf9\u6bd4\uff0c\u9a8c\u8bc1\u4e86\u4e0d\u540c\u957f\u5ea6 (l) \u548c\u5e76\u53d1 (c) \u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u8fd9\u4e9b\u5386\u53f2\u8bb0\u5f55\u662f\u4ece\u6a21\u62df\u7684\u53ef\u5e8f\u5217\u5316\u5feb\u7167\u9694\u79bb\u7684\u5185\u5b58\u6570\u636e\u5e93\u4e2d\u8bb0\u5f55\u7684\u3002\u8d8a\u4f4e\u8d8a\u597d\u3002\u4e00\u822c\u6765\u8bf4\uff0cElle \u5728\u51e0\u79d2\u949f\u5230\u51e0\u5206\u949f\u5185\u68c0\u67e5\u73b0\u5b9e\u4e16\u754c\u7684\u5386\u53f2\uff0c\u800c\u4e0d\u662f\u51e0\u79d2\u949f\u5230\u51e0\u5343\u5e74\u3002\u5728 Knossos \u901a\u5e38\u4ec5\u9650\u4e8e\u6bcf\u4e2a\u5386\u53f2\u8bb0\u5f55\u6570\u767e\u6b21\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0cElle \u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u6570\u5341\u4e07\u6b21\u64cd\u4f5c\u3002 Knossos \u8fd0\u884c\u65f6\u968f\u7740\u5e76\u53d1\u5448\u6307\u6570\u53d8\u5316\uff1b Elle \u662f\u6709\u6548\u7684\u5e38\u91cf\u3002\u968f\u7740\u5e76\u53d1\u6027\u7684\u589e\u52a0\uff0c\u8fd0\u884c\u65f6\u4f1a\u7565\u6709\u4e0b\u964d\uff0c\u56e0\u4e3a\u66f4\u591a\u7684\u4e8b\u52a1\u4f1a\u56e0\u51b2\u7a81\u800c\u4e2d\u6b62\u3002 Knossos \u4e5f\u662f\u6e29\u548c\u7684\u8d85\u7ebf\u6027\u5386\u53f2\u957f\u5ea6\uff1b Elle\u5b9e\u9645\u4e0a\u662f\u7ebf\u6027\u7684\u3002\n\u6211\u8fd8\u6ca1\u6709\u771f\u6b63\u4f18\u5316 Elle ---\u6211\u76f8\u4fe1\u5b83\u53ef\u4ee5\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u53d8\u5f97\u66f4\u5feb\u3002\u6709\u4e00\u4e9b\u5730\u65b9\uff08\u7279\u522b\u662f\u5728\u6ce8\u518c\u6d4b\u8bd5\u671f\u95f4\u4ece\u4e8b\u52a1\u56fe\u4e2d\u63a8\u65ad\u7248\u672c\u987a\u5e8f\uff09\u53ef\u80fd\u4f1a\u5f88\u75db\u82e6\uff1b\u6211\u4f1a\u8fb9\u8d70\u8fb9\u6253\u78e8\u7c97\u7cd9\u7684\u8fb9\u7f18\u3002 Elle \u7684\u7248\u6743\u4e3a 2019--2020 Jepsen, LLC \u548c Peter Alvaro\u3002 Elle \u5e93\u5728 Eclipse \u516c\u5171\u8bb8\u53ef\u8bc1 2.0 \u7248\u4e0b\u53ef\u7528\uff0c\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9 GPL-2.0 \u548c\u7c7b\u8def\u5f84\u4f8b\u5916\u3002 Elle \u7684\u7075\u611f\u6765\u81ea\u4e0e Asha Karim \u7684\u5bf9\u8bdd\uff0cKit Patella (@mkcp) \u7f16\u5199\u4e86 Elle \u68c0\u67e5\u5668\u7684\u7b2c\u4e00\u4e2a\u539f\u578b\u3002", "note_en": "Elle is a transactional consistency checker for black-box databases. Basedpurely on client observations of transactions, and given some minimalconstraints on datatypes and operations, it can tell you whether thatobservation exhibits a variety of transactional anomalies. Like a cleverlawyer, Elle looks for a sequence of events in a story which couldn&#39;t possiblyhave happened in that order, and uses that inference to prove the story can&#39;tbe consistent.\n  General: Elle works over a variety of datatypes and places only minimal, practical constraints on transaction structure.\n Efficient: Elle is ~linear in history length, and ~constant, rather than exponential, with respect to concurrency.\n Effective: Elle has found unexpected anomalies in  every  database  we&#39;ve  checked, ranging from internal consistency violations to anti-dependency cycles to dirty read to lost updates to realtime violations.\n Sound: Elle can find every (non-predicate) anomaly from Adya, Liskov, &amp; O&#39;Neil&#39;s  Generalized Isolation Level Definitions.\n Elucidative: Elle can point to a minimal set of transactions which witness a consistency violation; its conclusions are easy to understand and verify.\n This repository encompasses a  Clojure implementation of the Elleconsistency checker and its  accompanying test suite, which youcan use to check your own histories. Our paper providesdeep insight into the goals and intuition behind Elle, and a roughformalization of its soundness proof. A nowhere-near-complete formal proof sketch is written in the Isabelle/HOL proof language.\n If you want to check a database using Elle, see  https://jepsen.io; Elle comes built-in. If you want to use Elle to check your own histories without using Jepsen, you can add Elle as a dependency to any JVM project, and invoke its checker functions directly. If you&#39;re working in a non-JVM language, you can write your history to a file or stream, and call a small wrapper program to produce output.\n Elle is still under active development, and we&#39;re not 100% confident in itsinference rules yet. Jepsen recommends checking reported anomalies by hand tomake sure they&#39;re valid. If you&#39;d like to contribute, we&#39;d especially welcome your help in the  formal proof, and in  rigorously defining consistency models.\n    Imagine a database where each object (identified by keys like  :x or  :y) isa list of numbers. Transactions are made up of reads  [:r :x [1 2 3]], whichreturn the current value of the given list, and writes  [:append :y 4], whichappend a number to the end of the list.\n  We construct a history of three transactions, each of which is known tohave committed ( :type :ok). The first transaction appends 1 to  :x andobserves  :y = [1]. The second appends 2 to  :x and 1 to  :y. The thirdobserves  x, and sees its value as  [1 2].\n =&gt; ( def  h [{ :type  :ok,  :value [[ :append  :x  1] [ :r  :y [ 1]]]} { :type  :ok,  :value [[ :append  :x  2] [ :append  :y  1]]} { :type  :ok,  :value [[ :r  :x [ 1  2]]]}])h\n Now, we ask Elle to check this history, expecting it to be serializable, andhave it dump anomalies to a directory called  out/.\n =&gt; ( pprint ( a/check { :consistency-models [ :serializable],  :directory   &#34;out &#34;} h)){ :valid?  false,  :anomaly-types ( :G1c),  :anomalies { :G1c [{ :cycle [{ :type  :ok,  :value [[ :append  :x  2] [ :append  :y  1]]} { :type  :ok,  :value [[ :append  :x  1] [ :r  :y [ 1]]]} { :type  :ok,  :value [[ :append  :x  2] [ :append  :y  1]]}],  :steps ({ :type  :wr,  :key  :y,  :value  1,  :a-mop-index  1,  :b-mop-index  1} { :type  :ww,  :key  :x,  :value  1, :value&#39;  2,  :a-mop-index  0,  :b-mop-index  0}),  :type  :G1c}]},  :not #{ :read-committed},  :also-not #{ :consistent-view  :cursor-stability  :forward-consistent-view  :monotonic-atomic-view  :monotonic-snapshot-read  :monotonic-view  :repeatable-read  :serializable  :snapshot-isolation  :strict-serializable  :update-serializable}}\n Here, Elle can infer the write-read relationship between T1 and T2 on the basisof their respective reads and writes. The write-write relationship between T2and T1 is inferrable because T3 observed  x = [1,2], which constrains thepossible orders of appends. This is a G1c anomaly: cyclic information flow. The :cycle field shows the operations in that cycle, and  :steps shows thedependencies between each pair of operations in the cycle.\n On the basis of this anomaly, Elle has concluded that this history is notread-committed---this is the weakest level Elle can demonstrate is violated. Inaddition, several stronger isolation levels, such as consistent-view andupdate-serializable, are also violated by this history.\n  $ cat out/G1c.txtG1c #0Let: T1 = {:type :ok, :value [[:append :x 2] [:append :y 1]]} T2 = {:type :ok, :value [[:append :x 1] [:r :y [1]]]}Then: - T1 &lt; T2, because T2 observed T1&#39;s append of 1 to key :y. - However, T2 &lt; T1, because T1 appended 2 after T2 appended 1 to :x: a contradiction!\n   In addition to rendering a graph for each individual cycle, Elle generates aplot for each strongly-connected component of the dependency graph. This can behelpful for getting a handle on the  scope of an anomalous behavior, whereascycles show as small a set of transactions as possible. Here&#39;s a plot from amore complex history, involving realtime edges, write-write, write-read, andread-write dependencies:\n   As a user, your main entry points into Elle will be  elle.list-append/checkand  elle.rw-register/check. Both namespaces also have code for generatingsequences of transactions which you can apply to your database; see, forexample,  elle.list-append/gen.\n Elle has a broad variety of anomalies and consistency models; see elle.consistency-model for their definitions. Not every anomaly isdetectable, but we aim for completeness.\n   Elle expects its observed histories in the same format as  Jepsen. An observed history should be a list of operations in real-time order, where each operation is a map of the form:\n { :type One of  :invoke, ok,  :info,  :fail  :process A logical identifier  for a single thread of execution  :value A transaction  ; structure and semantics vary}\n Each process should perform alternating  :invoke and  :ok/ :info/ :failoperations.  :ok indicates the operation definitely committed.  :failindicates it definitely did not occur--e.g. it was aborted, was never submittedto the database, etc.  :info indicates an indeterminate state; the transactionmay or may not have taken place. After an  :info, a process may not perform another operation; the invocation remains open for the rest of the history.\n  elle.core: The heart of Elle&#39;s inference system. Computes transaction graphs and finds cycles over them. Includes general-purpose graphs for per-process and realtime orders.\n elle.rw-register: Write/Read registers. Weaker inference rules, but applicable to basically all systems. Objects are registers; writes blindly replace values.\n elle.list-append: Elle&#39;s most powerful inference rules. Objects are lists, writes append unique elements to those lists.\n  The following plot shows Elle&#39;s relationships between consistency models: anarrow  a -&gt; b implies if  a holds, then so does  b. Sources for thisstructure can be found in  elle.consistency-model.\n  This plot shows the relationships between Elle&#39;s anomalies. An arrow  a -&gt; bimplies if we observe anomaly  a in a history, then  b exists in the historyas well.\n   Elle can check for every non-predicate anomaly from Adya, Liskov, and O&#39;Neil&#39;s  Generalized Isolation Level Definitions. These include:\n  There are additional anomalies (e.g. garbage reads, dirty updates, inconsistent version orders) available for specific checkers. Not all of these are implemented fully yet---see the paper for details.\n Inconsistent Version Orders: Inference rules suggested a cyclic order of updates to a single key.\n   Garbage Reads: A read observes a state which could not have been the product of any write.\n In addition, Elle can infer transaction dependencies on the basis of process(e.g. session) or realtime order, allowing it to distinguish between, say,strict serializability and serializability.\n For lists, Elle can infer a complete prefix of the Adya version order for a keybased on a single read. For registers, Elle can infer version orders on thebasis of the initial state, writes-follow-reads, process, and real-time orders.\n When Elle claims an anomaly in an observable history, it specifically meansthat in any abstract Adya-style history which is compatible with that observedhistory, either a corresponding anomaly exists, or something worsehappened---e.g. an aborted read. This is a natural consequence of testingreal-world databases; if the database lies in  just the right way, it mightappear to exhibit anomalies which didn&#39;t actually happen, or mask anomalieswhich did. We limit the impact of this problem by being able to distinguishbetween many classes of reads, and sampling many anomalies---hoping thateventually, we get lucky and see the anomaly for what it &#34;really is&#34;.\n  Elle is not complete: it may fail to identify anomalies which were present inthe system under test. This is a consequence of two factors:\n Elle checks histories observed from real databases, where the results of transactions might go unobserved, and timing information might not be as precise as one would like.\n Serializability checking is NP-complete; Elle intentionally limits its inferences to those solvable in linear (or log-linear) time.\n In practice, we believe Elle is &#34;complete enough&#34;. Indeterminacy is generallylimited to unobserved transactions, or a small set of transactions at the veryend of the history.\n   These plots show Elle&#39;s performance vs the  Knossos linearizability checker, verifying histories of various lengths (l) and concurrencies (c), recorded from a simulated serializable snapshot isolated in-memory database. Lower is better.\n In general, Elle checks real-world histories in a matter of seconds to minutes,rather than seconds to millennia. Where Knossos is often limited to a fewhundred operations per history, Elle can handle hundreds of thousands ofoperations easily.\n Knossos runtimes diverge exponentially with concurrency; Elle is effectivelyconstant. There&#39;s a slight drop in runtime as concurrency increases, as moretransactions abort due to conflicts. Knossos is also mildly superlinear inhistory length; Elle is effectively linear.\n I haven&#39;t really optimized Elle yet---I&#39;m sure it can be made faster with time.There are some spots (especially in inferring version orders from transactiongraphs during register tests) which might be painful; I&#39;ll sand off rough edgesas I go.\n  Elle is copyright 2019--2020 Jepsen, LLC and Peter Alvaro. The Elle library is available under the Eclipse Public License, version 2.0, or, at your option, GPL-2.0 with the classpath exception.\n  Elle was inspired by conversations with Asha Karim, and Kit Patella (@mkcp) wrote the first prototype of the Elle checker.", "posttime": "2021-08-10 06:46:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6570\u636e\u5e93,database,\u9ed1\u76d2,transactional,elle", "title": "Elle\uff1a\u9ed1\u76d2\u6570\u636e\u5e93\u7684\u4e8b\u52a1\u4e00\u81f4\u6027\u68c0\u67e5\u5668", "title_en": "Elle: A transactional consistency checker for black-box databases", "transed": 1, "url": "https://github.com/jepsen-io/elle", "via": "", "real_tags": ["\u6570\u636e\u5e93", "database", "\u9ed1\u76d2", "elle"]}, {"category": "", "categoryclass": "", "imagename": "75c5d5f752effd562cc29e114085114e.png", "infoid": 1072436, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL;DR\uff1a\u6211\u56de\u987e\u4e86 Growing Object-Oriented Software, Guided By Tests \u5e76\u5c06\u5176\u4e0e\u6211\u4e2a\u4eba\u5f00\u53d1\u8f6f\u4ef6\u7684\u65b9\u6cd5\u8fdb\u884c\u4e86\u5bf9\u6bd4\uff0c\u89e3\u91ca\u4e86\u6211\u7684\u63a8\u7406\uff0c\u5e76\u5bf9\u672c\u4e66\u3001OOP \u548c\u8f6f\u4ef6\u5de5\u7a0b\u53d1\u8868\u4e86\u4e00\u4e9b\u8bc4\u8bba\u3002\u9996\u5148\uff0c\u6211\u5df2\u7ecf\u7f16\u7a0b\u591a\u5e74\uff08\u6211\u4ece 7 \u5c81\u5f00\u59cb\u7f16\u7a0b\uff09\uff0c\u6211\u7ecf\u5386\u4e86\u5f88\u591a\u9636\u6bb5\u3001\u98ce\u683c\u3001\u7f16\u7a0b\u8bed\u8a00\u3002\u5728\u67d0\u4e2a\u65f6\u5019\uff0c\u6211\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u79cd\u6211\u6ca1\u6709\u540d\u5b57\u4f46\u5bf9\u6211\u6765\u8bf4\u6548\u679c\u5f88\u597d\u7684\u65b9\u6cd5\uff0c\u6211\u60f3\u5206\u4eab\u5b83\u3002\u5176\u6b21\uff0c\u6211\u5e0c\u671b\u5728\u6211\u5bf9 OOP \u7684\u6279\u8bc4\u548c\u7406\u89e3\u4e2d\u83b7\u5f97\u66f4\u591a\u4fe1\u5fc3\u3002\u8fc7\u53bb\uff0c\u6211\u53d1\u8868\u4e86\u591a\u7bc7\u6279\u8bc4\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u5e16\u5b50\uff08\u770b\u770b\u6807\u7b7e\uff09\u3002 C++ \u548c Java \u4e2d\u7684 OOP \u662f\u6211\u7ecf\u5386\u7684\u9636\u6bb5\u4e4b\u4e00\uff0c\u56de\u987e\u6211\u7684\u65b9\u6cd5\u3001\u6211\u751f\u6210\u7684\u4ee3\u7801\u3001\u6211\u7684\u7a0b\u5e8f\u8bbe\u8ba1\uff0c\u6211\u611f\u5230\u538c\u6076\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u6211\u7684\u5927\u90e8\u5206\u8fd0\u8425\u5546\u6765\u8bf4\uff0c\u6211\u4ece\u4e8b\u7684\u662f\u4f4e\u7ea7\u7cfb\u7edf\u8f6f\u4ef6\u3001\u5185\u6838\u548c\u5d4c\u5165\u5f0f\u7f16\u7a0b\uff0c\u8fd9\u5bfc\u81f4\u5927\u90e8\u5206\u65f6\u95f4\u4f7f\u7528\u7ed3\u6784\u5316\u3001\u8fc7\u7a0b\u5316\u3001\u547d\u4ee4\u5f0f\u7f16\u7a0b\u3002\u7531\u4e8e\u6211\u7684 OOP \u4e3b\u8981\u662f\u901a\u8fc7\u9605\u8bfb\u4e66\u7c4d\u3001\u6587\u7ae0\u7b49\u81ea\u5b66\u7684\u3002\u6211\u603b\u662f\u611f\u5230\u8fd9\u79cd\u7126\u8651......\u4e5f\u8bb8\u6709\u201c\u597d\u7684 OOP\u201d\u8fd9\u6837\u7684\u4e1c\u897f\uff0c\u4e5f\u8bb8\u6211\u5199\u7684\u6240\u6709 OOP \u4ee3\u7801\uff0c\u4ee5\u53ca\u6211\u7684 OOP \u4ee3\u7801\u7ee7\u7eed\u770b\u8fd9\u91cc\uff0c\u53ea\u662f\u201c\u4e0d\u6b63\u786e\u7684 OOP\u201d\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u51b3\u5b9a\u66f4\u6df1\u5165\u5730\u7814\u7a76 OOP\uff0c\u5e76\u4e13\u6ce8\u4e8e OOP \u9879\u76ee\u4e4b\u95f4\u66f4\u5b9e\u9645\u7684\u5bf9\u6bd4\uff0c\u4ee5\u53ca\u6211\u8ba4\u4e3a\u7684\u201c\u7406\u6027\u7f16\u7a0b\u201d\u2014\u2014\u4e0d\u53d7\u6559\u6761\u3001\u7f16\u7a0b\u610f\u8bc6\u5f62\u6001\u7684\u675f\u7f1a\uff0c\u76f4\u622a\u4e86\u5f53\uff0c\u5e76\u613f\u610f\u91c7\u7528\u4efb\u4f55\u597d\u7684\u60f3\u6cd5\u548c\u53ef\u7528\u7684\u7f16\u7a0b\u98ce\u683c\u3002\u5728\u6211\u5bf9 OOP \u7684\u7406\u89e3\u4e2d\u83b7\u5f97\u66f4\u591a\u4fe1\u5fc3\u7684\u6700\u5927\u969c\u788d\u662f......\u5b9e\u9645\u4e0a\u627e\u5230\u4e86 Good OOP \u7684\u4f8b\u5b50\u3002\u6211\u600e\u4e48\u77e5\u9053\u67d0\u4e2a\u4e1c\u897f\u662f\u597d\u7684 OOP\uff1f\u662f\u5426\u6709\u6bcf\u4e2a\u4eba\u90fd\u540c\u610f\u7684\u660e\u786e\u4f8b\u5b50\uff1f\u6211\u8bd5\u56fe\u901a\u8fc7\u535a\u5ba2\u6587\u7ae0\u56db\u5904\u6253\u542c\u3002\u5728\u6536\u96c6\u94fe\u63a5\u548c\u63a8\u8350\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u8d2d\u4e70\u4e86\u4e09\u672c OOP \u4e66\u7c4d\uff08\u6309\u7167\u6211\u9605\u8bfb\u7684\u987a\u5e8f\uff09\uff1a\u4e5f\u8bb8\u6211\u4f1a\u627e\u65f6\u95f4\u5199\u66f4\u8be6\u7ec6\u7684\u5e16\u5b50\u6765\u8ba8\u8bba\u6bcf\u672c\u4e66\uff0c\u4f46\u7b80\u800c\u8a00\u4e4b\uff1a\u4f18\u96c5\u7684\u5bf9\u8c61\u6a2a\u7a7a\u51fa\u4e16\u6700\u53ef\u7b11\u3002\u4f5c\u8005\u5f88\u5feb\u5c31\u9648\u8ff0\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u8fc7\u7a0b\u7f16\u7a0b\u7684\u95ee\u9898\u662f\u53ef\u7ef4\u62a4\u6027\uff0c\u800c OOP \u5c31\u5728\u8fd9\u91cc\uff0c\u5b83\u62ef\u6551\u4e86\u6211\u4eec\u6240\u6709\u4eba\u3002\u6709\u8da3\u7684\u662f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u82b1\u4e86\u6570\u5e74\u65f6\u95f4\u4f7f\u7528 C \u548c\u7ed3\u6784\u5316\u7f16\u7a0b/\u8fc7\u7a0b\u7f16\u7a0b\u5e76\u4e14\u53ef\u4ee5\u5c06\u5b83\u4e0e\u6211\u89c1\u8fc7\u7684\u6240\u6709 OOP \u8fdb\u884c\u5bf9\u6bd4\u7684\u4eba\uff0c\u6211\u53d1\u73b0\u8fd9\u79cd\u8bf4\u6cd5\u5b8c\u5168\u88ab\u8bef\u5bfc\u4e86\u3002\u4e66\u4e2d\u63d0\u51fa\u7684\u60f3\u6cd5\u80cc\u540e\u7f3a\u4e4f\u4efb\u4f55\u5408\u7406\u7684\u8bba\u636e\u662f\u5bf9\u8fd9\u672c\u4e66\u7684\u5b9a\u4e49\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4f5c\u8005\u6307\u51fa\uff1a\u51fd\u6570\u5f0f\u7f16\u7a0b\u8fd8\u53ef\u4ee5\uff0c\u4f46\u53ea\u6709\u51fd\u6570\uff0c\u800c OOP \u6709\u5bf9\u8c61\u548c\u65b9\u6cd5\uff0c\u6240\u4ee5\u66f4\u597d\u3002\n\u4e00\u4e2a\u5bf9\u8c61\u6700\u591a\u53ea\u80fd\u6709 5 \u4e2a\u516c\u5171\u51fd\u6570\uff0c\u56e0\u4e3a\u201c\u6ca1\u6709\u7279\u522b\u7684\u539f\u56e0\uff1b\u8fd9\u5c31\u662f\u6211\u7684\u611f\u53d7\u201d\u8fd8\u6709\u66f4\u591a\u8fd9\u6837\u7684\u58f0\u660e\uff0c\u652f\u6301\u201c\u56e0\u4e3a\u6211\u544a\u8bc9\u4f60\u201d\u3002\u90a3\u672c\u4e66\u786e\u5b9e\u503c\u5f97\u4e5f\u4e0d\u503c\u5f97\u5355\u72ec\u53d1\u8868\u4e00\u7bc7\u6587\u7ae0\uff0c\u4f46\u603b\u800c\u8a00\u4e4b\uff1a\u8fd9\u53ea\u662f\u4f5c\u8005\u672a\u7ecf\u8bc1\u5b9e\u7684\u89c2\u70b9\u7684\u6e05\u5355\u3002 Java OOP Done Right \u53ea\u662f\u5e73\u6de1\u65e0\u5947\u3002\u5178\u578b\u7684 OOP \u4e66\uff0c\u5c31\u50cf\u6211\u8fc7\u53bb\u8bfb\u8fc7\u7684\u4e00\u4e9b\u4e66\u4e00\u6837\u3002\u6211\u7684\u4e3b\u8981\u62b1\u6028\u662f\u5b83\u65e0\u5904\u4e0d\u5728\uff0c\u5e76\u4e14\u6ca1\u6709\u8bd5\u56fe\u89e3\u91ca OOP \u7684\u542b\u4e49\u3002\u534f\u4f5c\u7ae0\u8282\u4e2d Cat \u7c7b\u548c Dog \u7c7b\u5e26\u6709 public voidchach() \u7684\u793a\u4f8b\u5b8c\u5168\u6ca1\u6709\u5e0c\u671b\u548c\u6df7\u4e71\u3002\u5373\u4f7f\u60a8\u8ba4\u4e3a OOP \u662f\u81ea\u5207\u7247\u9762\u5305\u4ee5\u6765\u6700\u597d\u7684\u4e1c\u897f\uff0c\u6211\u4e5f\u4e0d\u80fd\u63a8\u8350\u5b83\u3002\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6700\u540e\u4e00\u672c\u4e66\u2014\u2014Growing Object-Oriented Software \u975e\u5e38\u597d\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u6211\u8981\u5173\u6ce8\u5b83\u7684\u539f\u56e0\u3002\u5c3d\u7ba1\u6211\u4ecd\u7136\u8ba4\u4e3a OOP \u662f\u4e00\u4e2a\u574f\u4e3b\u610f\uff0c\u800c\u4e14\u8fd9\u672c\u4e66\u5e76\u6ca1\u6709\u6539\u53d8\u6211\u5bf9\u5b83\u7684\u770b\u6cd5\uff0c\u4f46\u6211\u5f88\u559c\u6b22\u9605\u8bfb\u5b83\uff0c\u6211\u89c9\u5f97\u6211\u4ece\u4e2d\u5b66\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\u3002\u5982\u679c\u60a8\u6253\u7b97\u5b66\u4e60 OOP\uff0c\u6211\u60f3\u6211\u53ef\u4ee5\u63a8\u8350\u5b83\u3002\u4f5c\u8005\u591a\u6b21\u5f3a\u8c03\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u5e76\u975e\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u90fd\u662f\u5bf9\u8c61\uff0c\u800c\u4e14\u5f88\u591a\u5185\u5bb9\u53ea\u662f\u666e\u901a\u6570\u636e\u2014\u2014\u8fd9\u662f\u6211\u5728\u91ce\u5916\u770b\u5230\u7684 OOP \u4ee3\u7801\u4e2d\u4e00\u76f4\u56f0\u6270\u7684\u4e8b\u60c5\u4e4b\u4e00\u3002\u8fd9\u4ece\u4e00\u5f00\u59cb\u5c31\u8ba9\u6211\u5bf9\u8fd9\u672c\u4e66\u611f\u5230\u6e29\u6696\u3002\u4e0d\u77e5\u9053\u50cf Smalltalkers \u8fd9\u6837\u7684\u771f\u6b63\u7684 OOP \u662f\u600e\u4e48\u60f3\u7684\uff0c\u4f46\u5b83\u786e\u5b9e\u7b26\u5408\u6211\u7684\u4e16\u754c\u89c2\u3002\u672c\u4e66\u7684\u5f00\u5934\u8c08\u5230\u4e86\u8f6f\u4ef6\u5b9e\u8df5\u548c\u542f\u52a8\u8f6f\u4ef6\u9879\u76ee\u3002\u5373\u4f7f\u6211\u4e0d\u540c\u610f\u6240\u8bf4\u7684\u4e00\u5207\uff0c\u6211\u4e5f\u89c9\u5f97\u5b83\u662f\u5408\u7406\u7684\u3001\u53d7\u4eba\u5c0a\u656c\u7684\u3001\u6709\u89c1\u5730\u7684\u3002\n\u7136\u540e\u672c\u4e66\u5f00\u59cb\u63cf\u8ff0 TDD \u548c OOP \u589e\u91cf\u65b9\u6cd5\u6765\u5b9e\u73b0\u4e00\u4e2a\u5c0f\u800c\u771f\u5b9e\u7684\u8f6f\u4ef6\u9879\u76ee\u3002\u771f\u5b9e\u6216\u7c7b\u4f3c\u771f\u5b9e\u7684\u4ee3\u7801\u6b63\u662f\u6211\u6b63\u5728\u5bfb\u627e\u7684\uff01\u6211\u5f88\u5feb\u610f\u8bc6\u5230\u4f5c\u8005\u5bf9\u5bf9\u8c61\u5bf9\u4ed6\u4eec\u610f\u5473\u7740\u4ec0\u4e48\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u60f3\u6cd5\u3002\u6211\u5f88\u56f0\u60d1\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u7684\u4ee3\u7801\u603b\u662f\u5982\u6b64......\u201c\u56de\u8c03-y\u201d\uff0c\u5728\u7814\u7a76\u4e86\u66f4\u591a\u4e4b\u540e\uff0c\u6211\u53d1\u73b0\u4e86\u539f\u56e0\u3002\u6211\u53ef\u80fd\u9519\u8fc7\u4e86\uff0c\u4f46\u6211\u8ba4\u4e3a\u4ed6\u4eec\u4ece\u672a\u660e\u786e\u8bf4\u660e\u8fc7\u3002\u5bf9\u8c61\u4e4b\u95f4\u7684\u6240\u6709\u8c03\u7528\u90fd\u662f\u5355\u5411\u7684\uff1a\u5b9e\u9645\u5bf9\u8c61\uff08\u4e0d\u662f\u666e\u901a\u6570\u636e\u7c7b\uff09\u7684\u516c\u5171\u65b9\u6cd5\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u503c\u3002\u5b83\u4eec\u603b\u662f\u65e0\u6548\u7684\u65b9\u6cd5\u3002\u5bf9\u8c61\u4e0d\u4f1a\u76f8\u4e92\u201c\u8c03\u7528\u201d\u3002\u4ed6\u4eec\u53d1\u9001\u6d88\u606f\u800c\u4e0d\u7b49\u5f85\u54cd\u5e94\u3002 \uff08\u597d\u5427\uff0c\u5b9e\u9645\u4e0a\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5b9e\u9645\u4e0a\u662f\u901a\u8fc7\u65b9\u6cd5\u8c03\u7528\u201c\u53d1\u9001\u201d\u5b83\u7684\uff0c\u6240\u4ee5\u4ed6\u4eec\u786e\u5b9e\u5728\u7b49\u5f85\uff0c\u4f46\u4ed6\u4eec\u5047\u88c5\u6ca1\u6709\u3002\u8fd9\u4e2a\u53d1\u73b0\u6700\u521d\u8ba9\u6211\u5927\u5403\u4e00\u60ca\u3002\u6211\u60ca\u614c\u5931\u63aa\u3002\u201c\u5929\u54ea\uff0c\u8fd9\u662f\u79d8\u8bc0\u5417\uff1f\u5f00\u73a9\u7b11\u7684\u5417\uff1f \u201c\u6211\uff1f\u6211\u5417\uff1f\u5176\u4ed6\u4eba\u90fd\u89c9\u5f97\u5f88\u660e\u663e\uff0c\u4e0d\u503c\u5f97\u4e00\u63d0\uff0c\u800c\u6211\u662f\u5c0f\u4e11\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u4e00\u70b9\uff1f\u8fd9\u5c31\u662f\u597d\u7684OOP\u5417\uff1f\u201d\u4f46\u6211\u56de\u987e\u4e86\u524d\u4e24\u672c\u4e66\uff0c\u90a3\u91cc\u7684\u4ee3\u7801\u6ca1\u6709\u50cf\u8fd9\u6837\u3002\u5478\u2014\u2014\u4f5c\u8005\u751a\u81f3\u65e0\u6cd5\u533a\u5206\u201c\u7eaf\u6570\u636e\u201d\u548c\u201c\u5bf9\u8c61\u201d\uff0c\u6240\u4ee5\u4ed6\u4eec\u600e\u4e48\u80fd\u8ba9\u5bf9\u8c61\u53d1\u9001\u7eaf\u6570\u636e\u6d88\u606f\u3002\u5982\u679c\u6211\u662f\u5c0f\u4e11\uff0c\u5176\u4ed6\u4eba\u4e5f\u662f\u3002\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u79d8\u5bc6\u6b66\u5668\uff0c\u5468\u56f4\u6709\u5f88\u591a\u5c0f\u4e11\uff0c\u4e0d\u4ec5\u4ec5\u662f\u6211\u3002\u7136\u540e\u6211\u5f00\u59cb\u8003\u8651\u5b83\u3002\u8fd9\u79cd\u65b9\u6cd5\u5c06\u60a8\u7684\u7a0b\u5e8f\u53d8\u6210\u4e86\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002\u5b83\u8bd5\u56fe\u5efa\u6a21\u7c7b\u4f3c\u4e8e\u5fae\u670d\u52a1\u67b6\u6784\u7684\u4e1c\u897f\uff0c\u5176\u4e2d\u6240\u6709\u901a\u4fe1\u90fd\u76f4\u63a5\u901a\u8fc7\u6d88\u606f\u961f\u5217\u3002\u867d\u7136\u6d88\u606f\u961f\u5217\u548c\u5fae\u670d\u52a1\u901a\u5e38\u662f\u5b9e\u9645\u8f6f\u4ef6\u4e1a\u52a1\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848eds\uff0c\u4ed6\u4eec\u5f15\u5165\u4e86\u5927\u91cf\u7684\u95ee\u9898\u548c\u53d8\u5316\uff0c\u5f88\u96be\u505a\u5230\u6b63\u786e\u3002\u5728\u8fd9\u672c\u4e66\u4e2d\uff0c\u4f5c\u8005\u4ee5 OOP \u7684\u540d\u4e49\u5411\u81ea\u5df1\u63d0\u51fa\u4e86\u8fd9\u4e2a\u6311\u6218\uff0c\u5e76\u4e14\u8fd8\u60f3\u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u8fd9\u6837\u505a\u3002\u76f4\u89c9\u544a\u8bc9\u6211\u8fd9\u4e0d\u4f1a\u6709\u597d\u7684\u7ed3\u5c40\u3002\u5728\u8fd9\u91cc\uff0c\u8ba9\u6211\u4eec\u505a\u4e00\u4e2a\u6d4b\u8bd5\u3002\u8fd9\u662f github \u5b58\u50a8\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u6765\u81ea Growing Object-Oriented Software \u4e00\u4e66\u4e2d\u7684\u9879\u76ee\u4ee3\u7801\u3002\u53bb\u770b\u770b\u5b83\uff0c\u544a\u8bc9\u6211\u5b83\u6709\u4ec0\u4e48\u4f5c\u7528\u3002\u6211\u4f1a\u7b49\u5f85\u3002\u4ee3\u7801\u6ca1\u6709\u6ce8\u91ca\uff0c\u4f46\u8bbe\u8ba1\u548c\u547d\u540d\u90fd\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u3002\u5f53\u5728\u9879\u76ee\u5468\u56f4\u70b9\u51fb\u4e00\u4e9b\u540e\u5411\u6211\u63a8\u8350\u6b64\u4ee3\u7801/\u4e66\u65f6\uff0c\u6211\u65e0\u6cd5\u7834\u8bd1\u5b83\u7684\u4f5c\u7528\u3002\u6211\u5199\u7684\u4ece\u5b83\u7684\u5916\u89c2\u6765\u770b\uff0c\u5b83\u770b\u8d77\u6765\u975e\u5e38\u5408\u7406\u3002 DI \u65e0\u5904\u4e0d\u5728\uff0c\u5bf9\u8c61\u7528\u4e8e\u6267\u884c\u8005\u800c\u4e0d\u662f\u6570\u636e\uff0c\u72b6\u6001\u7528\u679a\u4e3e\u8868\u793a\u3002\u7136\u800c\uff0c\u5b83\u7684\u72b6\u6001\u770b\u8d77\u6765\u6709\u70b9\u8f7b\uff0c\u8fd9\u5c31\u662f\u6211\u7684 PoV \u901a\u5e38\u53d1\u751f OOP \u95ee\u9898\u7684\u5730\u65b9\u3002\u6211\u5f88\u96be\u5728\u6ca1\u6709\u4efb\u4f55\u8bc4\u8bba\u6216\u4e66\u7684\u60c5\u51b5\u4e0b\u5f88\u597d\u5730\u5224\u65ad\u4e00\u4e9b\u8bbe\u8ba1\u51b3\u7b56\u2026\u2026\u6240\u4ee5\u6211\u7ee7\u7eed\u8ba2\u8d2d\u4e86\u8fd9\u672c\u4e66\u3002\n\u73b0\u5728\u8bfb\u5b83\uff0c\u6211\u5f88\u60ca\u8bb6\u8fd9\u4e2a\u8bc4\u8bba\u662f\u591a\u4e48\u51c6\u786e\u3002\u5373\u4f7f\u662f\u73b0\u5728\uff0c\u5728\u8bfb\u5b8c\u8fd9\u672c\u4e66\u540e\uff0c\u6211\u53d1\u73b0\u6d4f\u89c8\u4ee3\u7801\u5f88\u75db\u82e6\u3002\u4e00\u5207\u90fd\u53ea\u662f\u2026\u2026\u5230\u5904\u90fd\u662f\u5982\u6b64\u5206\u6563\u548c\u62bd\u8c61\u3002\u6ce8\u610f\uff1a\u6211\u7ecf\u5e38\u8df3\u5165\u6211\u4e0d\u719f\u6089\u7684\u968f\u673a\u8f6f\u4ef6\u9879\u76ee\u7684\u4ee3\u7801\u5e93\uff1a\u5f00\u6e90\u6216\u5728\u5de5\u4f5c\u4e2d\uff0c\u6211\u5f88\u5feb\u5c31\u627e\u5230\u4e86\u89e3\u51b3\u5404\u79cd\u4ee3\u7801\u5e93\u7684\u65b9\u6cd5\u3002\u6240\u4ee5\u867d\u7136\u6211\u53d1\u73b0\u8fd9\u6bb5\u4ee3\u7801\u662f\u6211\u53d1\u73b0\u7684\u6700\u4f18\u96c5\u7684 OOP \u7247\u6bb5\u4e4b\u4e00\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u662f OOP \u95ee\u9898\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u6211\u6ca1\u6709\u673a\u4f1a\u8ba4\u4e3a\u5b83\u6613\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\u3002\u5bf9\u4e8e\u662f\u4ec0\u4e48\uff0c\u5b83\u8fc7\u4e8e\u590d\u6742\u4e14\u96be\u4ee5\u7406\u89e3\u3002\u4e66\u4e2d\u4ecb\u7ecd\u7684 TDD \u6545\u4e8b\u5f88\u5438\u5f15\u4eba\uff0c\u6211\u7edd\u5bf9\u540c\u610f\u53ef\u6d4b\u8bd5\u6027\u662f\u826f\u597d\u8bbe\u8ba1\u7684\u91cd\u8981\u6307\u6807\u3002\u7136\u800c\uff0c\u6211\u8fd8\u6ca1\u6709\u5b8c\u5168\u8f6c\u53d8\u4e3a TDD \u4fe1\u4ef0\uff0c\u5c3d\u7ba1\u5c1d\u8bd5\u5e76\u68c0\u67e5 100% \u70ed\u5fc3\u7684 TDD \u4f1a\u5f88\u597d\u3002\u6b63\u5982\u4e66\u4e2d\u4ecb\u7ecd\u7684\u90a3\u6837\uff0cOOP + TDD \u7ec4\u5408\u8ba9\u6211\u5370\u8c61\u6df1\u523b\uff0c\u5b83\u662f\u4e00\u79cd\u53ef\u4ee5\u5230\u8fbe\u4efb\u4f55\u5730\u65b9\u7684\u975e\u5e38\u8be6\u7ec6\u548c\u8fc2\u56de\u7684\u65b9\u5f0f\u3002\u5728\u672c\u4e66\u7684\u8fc7\u7a0b\u4e2d\u5b9e\u65bd\u7684\u9879\u76ee\u79f0\u4e3a Auction Sniper\uff0c\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u81ea\u52a8\u6295\u6807\u673a\u5668\u4eba\u3002\u5047\u8bbe\u62cd\u5356\u53d1\u751f\u5728 XMPP \u534f\u8bae\u4e0a\uff08\u8fd9\u672c\u4e66\u88ab\u5199\u7684\u65f6\u4ee3\u7684\u6807\u5fd7\uff09\uff0c\u8be5\u7a0b\u5e8f\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u57fa\u4e8e\u5355\u8868\u7684 GUI\uff0c\u5141\u8bb8\u7528\u6237\u6dfb\u52a0\u62cd\u5356\u4ee5\u8fbe\u5230\u67d0\u4e2a\u4ef7\u683c\uff0c\u663e\u793a\u72b6\u6001\u5e76\u5c06\u6bcf\u6b21\u62cd\u5356\u7684\u7ed3\u679c\u4f5c\u4e3a\u4e00\u884c\uff0c\u7136\u540e\u5904\u7406\u4e0e\u62cd\u5356\u670d\u52a1\u5668\u7684 XMPP \u901a\u4fe1\u3002\u6211\u975e\u5e38\u559c\u6b22\u8fd9\u4e2a\u4f8b\u5b50\u3002\u8bfb\u5b8c\u8fd9\u672c\u4e66\u540e\uff0c\u6211\u7acb\u5373\u5f00\u59cb\u601d\u8003\u201c\u6211\u5c06\u5982\u4f55\u7f16\u5199\u8fd9\u6837\u7684\u8f6f\u4ef6\u201d\u3002\u6211\u4e0d\u559c\u6b22\u8fd9\u79cd\u201c\u8ba9\u6211\u4eec\u53cd\u590d\u8fdb\u884c\u8bbe\u8ba1\u201d\u7684\u654f\u6377/TDD \u65b9\u6cd5\u3002\u76f8\u4fe1\u6211\uff0c\u6211\u786e\u5b9e\u76f8\u4fe1\u8fed\u4ee3\u7684\u529b\u91cf\uff0c\u4f46\u8ba4\u4e3a\u5728\u6ca1\u6709\u4efb\u4f55\u524d\u671f\u8bbe\u8ba1\u7406\u5ff5\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8fed\u4ee3\u4f1a\u5bfc\u81f4\u4efb\u4f55\u7ed3\u679c\u7684\u4fe1\u5ff5\u5728\u6211\u770b\u6765\u662f\u65e0\u7a3d\u4e4b\u8c08\u3002\u5728\u7f16\u5199\u8fd9\u6837\u7684\u7a0b\u5e8f\u65f6\uff0c\u6211\u7684\u7b2c\u4e00\u4e2a\u4e5f\u662f\u6700\u91cd\u8981\u7684\u8003\u8651\u662f\u6570\u636e\u6a21\u578b\u8bbe\u8ba1\uff1a\n\u6211\u7acb\u5373\u63d0\u9192\u81ea\u5df1\uff0c\u4e66\u4e2d\u7684\u5b9e\u73b0\u5b8c\u5168\u5ffd\u7565\u4e86\u6301\u4e45\u6027\u95ee\u9898\u3002\u5982\u679c\u60a8\u5173\u95ed\u8be5\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u5c06\u4e22\u5931\u6240\u6709\u72b6\u6001\u3002\u6211\u8ba4\u4e3a\u8fd9\u4e0d\u662f\u610f\u5916\u3002\u8fd9\u5c31\u662f OOP \u5f88\u5feb\u5c31\u4f1a\u51fa\u9519\u7684\u5730\u65b9\u3002\u5bf9\u8c61-\u5173\u7cfb\u963b\u6297\u4e0d\u5339\u914d\uff0c\u82b1\u54e8\u7684 ORM \u603b\u662f\u8ba9\u4f60\u5931\u671b......\u4f60\u80fd\u8bf4\u51fa\u5b83\u3002\u8bb8\u591a\u9879\u76ee\u5b8c\u5168\u5931\u8d25\u7684\u6839\u6e90\u3002\u6709\u6ca1\u6709\u4e00\u672c\u4e66\u53ef\u4ee5\u89e3\u91ca\u62cd\u5356\u72d9\u51fb\u624b\u7684\u4f5c\u8005\u8ba1\u5212\u5982\u4f55\u8fed\u4ee3\u6dfb\u52a0\u6301\u4e45\u6027\u5e76\u4ee5\u67d0\u79cd\u65b9\u5f0f\u4ee5\u4e00\u81f4\u7684\u65b9\u5f0f\u4fdd\u5b58\u8fd9\u4e2a\u5206\u5e03\u5f0f\u5bf9\u8c61\u7cfb\u7edf\uff1f\u5bf9\u6211\u6765\u8bf4\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6709\u4e24\u4e2a\u5f02\u6b65\u4e8b\u4ef6\u6e90\uff0c\u5e76\u4e14\u4ee5\u4fdd\u8bc1\u4e0d\u4e22\u5931\u4efb\u4f55\u4e8b\u4ef6\u7684\u65b9\u5f0f\u5904\u7406\u8fd9\u4e24\u4e2a\u6e90\u90fd\u5f88\u91cd\u8981\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u6211\u4f1a\u4f7f\u7528\u4e00\u4e2a\u7b80\u5316\u7248\u7684\u4e8b\u4ef6\u6eaf\u6e90\u3002\u4efb\u4f55\u4e8b\u4ef6\u90fd\u5c06\u9996\u5148\u9644\u52a0\u5230\u6301\u4e45\u4e8b\u4ef6\u65e5\u5fd7\u4e2d\uff0c\u7cfb\u7edf\u7684\u5176\u4ed6\u7ec4\u4ef6\u5c06\u8ba2\u9605\u8be5\u65e5\u5fd7\u5e76\u5bf9\u5176\u505a\u51fa\u53cd\u5e94\uff0c\u4ece\u800c\u53ef\u80fd\u751f\u6210\u65b0\u4e8b\u4ef6\u3002\u91cd\u65b0\u8868\u8ff0\uff1a\u6bcf\u4e2a\u4e8b\u4ef6\u90fd\u4f1a\u7acb\u5373\u4fdd\u5b58\u5728\u6709\u5e8f\u7684\u4e8b\u4ef6\u65e5\u5fd7\u4e2d\u3002\u8fd9\u6837\uff1a\u6211\u4eec\u5bf9\u53d1\u751f\u7684\u4e8b\u60c5\u6709\u4e00\u4e2a\u5168\u5c40\u6392\u5e8f\uff0c\u6211\u4eec\u4e0d\u80fd\u4e22\u5931\u4efb\u4f55\u4e8b\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7cfb\u7edf\u91cd\u65b0\u542f\u52a8\u7684\u60c5\u51b5\u4e0b\u6062\u590d\u7cfb\u7edf\u72b6\u6001\uff0c\u6211\u4eec\u53ef\u4ee5\u6f5c\u5728\u5730\u5ba1\u8ba1/\u8c03\u8bd5/\u663e\u793a\u4e0e\u67d0\u4e2a\u62cd\u5356\u76f8\u5173\u7684\u4e8b\u4ef6\u3002\u50cf\u8fd9\u6837\u7684\u4e8b\u4ef6\u65e5\u5fd7\u662f\u53ef\u7528\u7684\u6700\u7b80\u5355\u548c\u6700\u5065\u58ee\u7684\u901a\u4fe1\u6a21\u5f0f\u4e4b\u4e00\u3002\u8fd9\u57fa\u672c\u4e0a\u5c31\u662f Kafka \u6d41\u5c06\u4e3a\u60a8\u505a\u7684\u4e8b\u60c5\uff0c\u4f46\u5b83\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4ec5\u9644\u52a0\u6587\u4ef6\u6216 SQL \u6570\u636e\u5e93\u4e2d\u7684\u8868\u3002\u8ddf\u8e2a\u4e8b\u4ef6\u65e5\u5fd7\u7684\u6bcf\u4e2a\u5b9e\u4f53\u90fd\u5fc5\u987b\u8bb0\u4f4f\u5e76\u5b58\u50a8\u5b83\u5df2\u7ecf\u5904\u7406\u7684\u4e8b\u4ef6\u7684\u4f4d\u7f6e\uff0c\u8fd9\u5c31\u662f\u5b83\u7684\u5168\u90e8\u5185\u5bb9\u3002\u8fd9\u7ed9\u6211\u4eec\u5e26\u6765\u4e86\u53e6\u4e00\u4e2a\u91cd\u8981\u7684\u8bbe\u8ba1\u8003\u8651\uff1a\u5c06\u7cfb\u7edf\u5206\u89e3\u4e3a\u201c\u53c2\u4e0e\u8005\u201d\uff08\u53ef\u4ee5\u5728\u4e0d\u5171\u4eab\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u5e76\u884c\u5de5\u4f5c\u7684\u4e8b\u7269\uff09\u3002\u6211\u7acb\u5373\u770b\u5230\u81f3\u5c11\u4ee5\u4e0b\u72ec\u7acb\u7684\u53c2\u4e0e\u8005\uff1a UI \u5904\u7406\u7cfb\u7edf\u53ef\u4ee5\u5e76\u884c\u5de5\u4f5c\uff0c\u53ea\u9700\u5c06\u7528\u6237\u8bf7\u6c42\u5199\u5165\u4e8b\u4ef6\u65e5\u5fd7\uff0c\u540c\u65f6\u8ba2\u9605\u5b83\u4ee5\u5728 UI \u4e2d\u663e\u793a\u4efb\u4f55\u66f4\u65b0\u548c\u901a\u77e5\u3002\u51fa\u4ef7\u5f15\u64ce\u8ddf\u8e2a\u6765\u81ea\u62cd\u5356\u548c UI \u7684\u4e8b\u4ef6\u5e76\u5bf9\u5176\u505a\u51fa\u53cd\u5e94\uff0c\u4ece\u800c\u53ef\u80fd\u4ea7\u751f UI \u6216\u62cd\u5356\u53d1\u9001\u65b9\u53ef\u4ee5\u91c7\u53d6\u884c\u52a8\u7684\u4e8b\u4ef6\u3002\u6240\u6709\u53c2\u4e0e\u8005\u90fd\u901a\u8fc7\u5171\u4eab\u7684\u4e8b\u4ef6\u65e5\u5fd7\u8fdb\u884c\u901a\u4fe1\uff0c\u8fd9\u5927\u5927\u7b80\u5316\u4e86\u4e8b\u60c5\u3002\u5728\u771f\u6b63\u7684\u8f6f\u4ef6\u4e2d\uff0c\u4f1a\u6709\u4e00\u4e9b\u5173\u4e8e\u6027\u80fd\u3001\u6570\u636e\u91cf\u7b49\u65b9\u9762\u7684\u8003\u8651\u3002\u4e5f\u8bb8\u4e00\u4e2a\u4e8b\u4ef6\u65e5\u5fd7\u4f1a\u7ed9\u8ddf\u968f\u5b83\u7684\u6240\u6709\u53c2\u4e0e\u8005\u5e26\u6765\u592a\u591a\u7684\u5f00\u9500\uff0c\u5e76\u5c06\u5176\u62c6\u5206\u4e3a\u4e13\u7528\u65e5\u5fd7\u4f1a\u662f\u6709\u76ca\u7684\u3002\u53ef\u80fd\u9700\u8981\u4fdd\u6301\u6295\u6807\u5f15\u64ce\u7684\u5f53\u524d\u72b6\u6001\u2014\u2014\u4ece\u767b\u5f55\u5f00\u59cb\u6062\u590d\u5b83\u53ef\u80fd\u592a\u6162\u4e86\u3002\u6bcf\u6b21\u62cd\u5356\u72b6\u6001\u7684\u5feb\u7167\u53ef\u80fd\u4f7f\u8fd9\u53d8\u5f97\u4e0d\u5fc5\u8981\u7b49\u7b49\u3002\u76ee\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u8fdb\u7684\u6700\u7b80\u5355\u7684\u8bbe\u8ba1\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\u3002\n\u4e8b\u4ef6\u65e5\u5fd7\u5728\u4e24\u4e2a\u63a5\u53e3\u540e\u9762\u88ab\u62bd\u8c61\u51fa\u6765\uff1a\u4e00\u4e2a\u662f\u5199\u8005\uff0c\u4e00\u4e2a\u662f\u8bfb\u8005\u3002\u8fd9\u5141\u8bb8\u5bf9\u6570\u636e\u7684\u5b9e\u9645\u5b58\u50a8\u65b9\u5f0f\u8fdb\u884c\u591a\u79cd\u5b9e\u73b0\u3002\u7531\u4e8e\u65e5\u5fd7\u662f\u6240\u6709\u5176\u4ed6\u7ec4\u4ef6\u7684\u4e3b\u8981 IO\uff0c\u56e0\u6b64\u5728\u6d4b\u8bd5\u4e2d\u4f2a\u9020\u5b83\u4f1a\u5f88\u6709\u7528\uff0c\u72ec\u7acb\u9a71\u52a8 Actor\u3002\u4e00\u5f00\u59cb\uff0c\u4e3b\u7ebf\u7a0b\u521d\u59cb\u5316\u4e8b\u4ef6\u65e5\u5fd7\u8d44\u6e90\u5e76\u542f\u52a8\u4e4b\u524d\u63d0\u5230\u7684\u6240\u6709actor\u8d44\u6e90\uff0c\u5c06\u4e8b\u4ef6\u65e5\u5fd7\u8d44\u6e90\u4f5c\u4e3a\u4f9d\u8d56\uff08\u4f9d\u8d56\u6ce8\u5165\uff09\u4f20\u9012\u7ed9\u5b83\u4eec\u3002 UI \u7ebf\u7a0b\u53ea\u5904\u7406 UI \u548c\u4e8b\u4ef6\u65e5\u5fd7\uff0c\u4f7f\u5b83\u4eec\u4fdd\u6301\u540c\u6b65\u3002\u672c\u8d28\u4e0a\u5f88\u7b80\u5355\uff0c\u5c3d\u7ba1\u7ec6\u8282\u53ef\u80fd\u5f88\u7e41\u7410\u3002\u73b0\u5728\uff0cUI \u53ef\u80fd\u5305\u542b\u4e00\u4e2a HTTP \u670d\u52a1\u5668\uff0c\u5904\u7406\u6765\u81ea\u524d\u7aef\u7684\u8bf7\u6c42\uff0c\u4e5f\u8bb8\u8fd8\u6709\u4e00\u4e9b websocket \u8fde\u63a5\u4ee5\u5176\u4ed6\u65b9\u5f0f\u6d41\u5f0f\u4f20\u8f93\u76f8\u5173\u7684\u4e8b\u4ef6\u65e5\u5fd7\u6761\u76ee\u3002\u4e24\u4e2a\u62cd\u5356\u901a\u4fe1\u7ebf\u7a0b\u90fd\u53ea\u662f\u5728\u5b9e\u9645\u534f\u8bae\u548c\u4e8b\u4ef6\u65e5\u5fd7\u4e4b\u95f4\u63a5\u6536\u3001\u8f6c\u6362\u548c\u5199\u5165\u4e8b\u4ef6\u3002\u542f\u52a8\u65f6\u7684\u6295\u6807\u5f15\u64ce\u4ece\u65e5\u5fd7\u4e2d\u52a0\u8f7d\u5176\u72b6\u6001\uff0c\u7136\u540e\u57fa\u672c\u4e0a\u662f\u4e00\u4e2a\u5faa\u73af\uff0c\u5bf9\u4e8b\u4ef6\u65e5\u5fd7\u4e2d\u7684\u76f8\u5173\u4e8b\u4ef6\u505a\u51fa\u53cd\u5e94\uff0c\u5e76\u4f7f\u7528\u4ee5\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\u7f16\u5199\u7684\u903b\u8f91\u6765\u51b3\u5b9a\u91c7\u53d6\u4ec0\u4e48\u884c\u52a8\uff0c\u5c06\u5176\u5199\u5165\u65e5\u5fd7\u3002\u4e00\u4e2a\u5178\u578b\u7684\u201c\u547d\u4ee4\u5f0f shell \u4e2d\u7684\u51fd\u6570\u5f0f\u4ee3\u7801\u201d\u5faa\u73af\uff0c\u771f\u7684\u3002\u8ddf\u968f\u4e8b\u4ef6\u6d41\u7684\u53c2\u4e0e\u8005\u9700\u8981\u5c06\u4ed6\u4eec\u7684\u201c\u5149\u6807\u201d\uff08\u5728\u65e5\u5fd7\u4e2d\u7684\u4f4d\u7f6e\uff09\u6301\u4e45\u5316\u5728\u67d0\u5904\uff0c\u8fd9\u5c06\u662f\u7531\u5b9e\u9645\u6570\u636e\u5e93\u652f\u6301\u7684\u9644\u52a0\u8d44\u6e90\uff08\u63a5\u53e3\uff09\u3002\u5c31\u8fd9\u6837\u3002\u53ef\u4ee5\u8003\u8651\u4e8b\u4ef6\u65e5\u5fd7\u548c\u53c2\u4e0e\u8005/\u7ebf\u7a0b\u5bf9\u8c61\uff0c\u6211\u60f3\u8fd9\u4f1a\u5f88\u516c\u5e73\u3002\n\u4f46\u662f\uff0c\u6211\u60f3\u6307\u51fa\u8fd9\u79cd\u65b9\u6cd5\u4e0e\u6211\u4e00\u76f4\u770b\u5230\u7684 OOP \u4e4b\u95f4\u7684\u91cd\u8981\u533a\u522b\u3002\u6570\u636e\u67b6\u6784\u662f\u6700\u91cd\u8981\u7684\u8003\u8651\u56e0\u7d20\uff0c\u4f18\u5148\u8003\u8651\u3002\u5728\u6ee1\u8db3\u6240\u6709\u975e\u5e38\u9ad8\u7ea7\u7684\u8981\u6c42\u7684\u6570\u636e\u6a21\u578b\u8fbe\u6210\u4e00\u81f4\u4e4b\u524d\uff0c\u65e0\u9700\u7f16\u5199\u4efb\u4f55\u5185\u5bb9\u3002\u8fd9\u4e9b\u201c\u5bf9\u8c61\u201d\u662f\u975e\u5e38\u7c97\u7c92\u5ea6\u7684\uff0c\u4ec5\u7528\u4f5c\u9ad8\u7ea7\u7ec4\u4ef6\u3002\u5728\u5185\u90e8\uff0c\u5b83\u4eec\u662f\u4f7f\u7528\u529f\u80fd\uff08\u5982\u679c\u53ef\u80fd\uff09\u548c\u8fc7\u7a0b/\u547d\u4ee4\uff08\u5fc5\u8981\u65f6\uff09\u7f16\u7a0b\u7684\u7ec4\u5408\u6765\u5b9e\u73b0\u7684\u3002\u5728\u57fa\u4e8e\u5fae\u670d\u52a1\u7684\u67b6\u6784\u4e2d\uff0c\u5b83\u4eec\u4e5f\u53ef\u80fd\u90fd\u662f\u72ec\u7acb\u7684\u670d\u52a1\u3002\u6211\u4e4b\u524d\u5728\u53e6\u4e00\u7bc7\u6587\u7ae0\u4e2d\u63cf\u8ff0\u8fc7\u7684\u6574\u4e2a\u9ad8\u7ea7\u65b9\u6cd5\u3002\u6211\u6709\u4e00\u4e2a\u5df2\u7ecf\u7528 Rust \u7f16\u5199\u7684\u4ee3\u7801\u7684\u7c97\u7565\u8349\u56fe\uff0c\u5e76\u4e14\u76f8\u5f53\u7b80\u5355\uff0c\u4f46\u4e0e\u8f6f\u4ef6\u4e2d\u7684\u6240\u6709\u5185\u5bb9\u4e00\u6837 - \u5b8c\u6210\u6240\u9700\u7684\u65f6\u95f4\u6bd4\u6211\u5e0c\u671b\u7684\u8981\u591a\uff0c\u800c\u4e14\u6211\u4e0d\u786e\u5b9a\u6211\u662f\u5426\u6709\u8db3\u591f\u7684\u52a8\u529b\u6765\u5305\u88c5\u5b83\u5411\u4e0a\u3002\u4ec5\u4ec5\u5199\u8fd9\u7bc7\u6587\u7ae0\u5c31\u82b1\u4e86\u6211 3 \u4e2a\u591a\u5c0f\u65f6\uff0c\u52a0\u4e0a\u9605\u8bfb\u8fd9\u4e9b\u4e66\u7b49\u7b49\u3002\u603b\u800c\u8a00\u4e4b\u2014\u2014\u6709\u4eba\u771f\u7684\u5728\u610f\u5417\uff1f\u6211\u7684\u610f\u601d\u662f\u6211\u5e0c\u671b\u6709\u4eba\u8fd9\u6837\u505a\u3002\u6211\u5e0c\u671b\u8981\u4e48\u6211\u62ef\u6551\u4e86\u67d0\u4eba\u51e0\u5e74\u4e0e\u611a\u8822\u7684 OOP \u6559\u6761\u4f5c\u6597\u4e89\u5e76\u53d1\u73b0\u5b83\u4e0d\u8d77\u4f5c\u7528\uff0c\u5c55\u793a\u4e00\u79cd\u66f4\u52a1\u5b9e\u7684\u65b9\u6cd5\uff0c\u8981\u4e48\u6709\u4eba\u4f1a\u66f4\u597d\u5730\u7406\u89e3\u6211\u5e76\u5411\u6211\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u89e3\u91ca\u6211\u9519\u8fc7\u4e86\u4ec0\u4e48\u4f7f OOP \u5b9e\u9645\u4e0a\u503c\u5f97\u5c1d\u8bd5\u6b63\u786e\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9\u53ea\u662f\u53e6\u4e00\u7bc7\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u5185\u5bb9\u7684\u968f\u673a\u535a\u5ba2\u6587\u7ae0\u3002 \u00af\\ (\u30c4)/\u00af", "note_en": "TL;DR: I review  Growing Object-Oriented Software, Guided By Tests and contrast it with my personal approach to developing software, explaining my reasoning, and making some comments on the book, OOP and software engineering in general.\n   First, I have been programming for many years now (I started programming when I was 7 years old), and I went through a lot of phases, styles, programming languages. At a certain point, I have established an approach that I don&#39;t have a name for but has been working for me very well and I&#39;d like to share it.\n Second, I&#39;m looking to gain more confidence in my criticism and understanding of OOP. In the past, I have published multiple posts criticizing Object Oriented Programming (just look at   tag). OOP in C++ &amp; Java, was one of the phases I went through and looking past at my approach, the code I produced, design of my program, I feel a distaste. However, for most of my carrier, I was working in low-level systems software, kernel, and embedded programming, which resulted in using structured, procedural, imperative programming most of the time. Since my OOP was mostly self-taught by reading books, articles, etc. I always feel this anxiety that... maybe there is such a thing as \u201cgood OOP\u201d, maybe all the OOP code I wrote, and the OOP code I keep seeing here and there is just \u201cincorrect OOP\u201d. Because of that, I decided to study OOP in more depth and focus on more practical contrasts between OOP projects, and what I would consider \u201cRational Programming\u201d \u2013 unencumbered by dogma, programming ideologies, to the point, and open to employing any good idea and programming style available.\n The biggest obstacle to gaining more confidence in my understanding of OOP is ... actually finding examples of Good OOP. How do I know that something is a Good OOP? Is there a definite example that everyone agrees on? I  tried to ask around via a blog post. In the process of collecting links and recommendations I&#39;ve purchased three OOP books (in the order I&#39;ve read them):\n  Maybe I&#39;ll find time to write more detailed posts to discuss each book, but in short:\n Elegant Objects turned out to be most ridiculous. The author pretty quickly states as a fact that the problem with procedural programming is maintainability, and OOP is here it save us all. Funny enough, as someone who spent years working with C and structured programming / procedural programming and can contrast it with all the OOP I&#39;ve seen, I find this claim completely misguided. The lack of any reasonable arguments behind ideas present in the book is defining the book. Among other things, the author states things like:\n Functional Programming is OK, but only has functions, while OOP has objects and methods so is better.\n An object should have only up to 5 public functions because \u201cThere&#39;s no particular reason; it&#39;s just how I feel\u201d\n There are many more claims like this, backed \u201cbecause I tell you so\u201d. That book really both deserves and does not deserve a separate post, but to sum up: it&#39;s just a list of unsubstantiated opinions of the author.\n Java OOP Done Right was just bland. Typical OOP book, like some I&#39;ve read in the past. My main complaint is that it&#39;s all over the place and that it doesn&#39;t try to explain what it means by OOP. The example of  class Cat and  class Dog with  public void chase() in the  Collaboration chapter is just utterly hopeless and confusing. I can&#39;t recommend it even if you think OOP is the best thing since the sliced bread.\n Thankfully, the last book \u2013 Growing Object-Oriented Software turned out to be really good, so that&#39;s why I&#39;m going to focus on it.\n  Even though I still think the OOP is a bad idea and this book did not change my mind about it, I enjoyed reading it and I feel like I&#39;ve learned something from it. If you&#39;re set on learning OOP, I can recommend it, I guess.\n The authors multiple times highlight the fact that  not everything in your code is an object, and a lot of things are just plain data \u2013 one of the things that I keep agonizing about the OOP code I get to see in the wild. This warmed my heart for the book from the very start. Not sure what The Real OOPers like Smalltalkers thinks about it, but it does fit my worldview.\n The beginning of the book talks about software practices and starting up a software project. Even if I don&#39;t agree with everything said, I&#39;ve found it reasonable, respectable, and insightful.\n Then the book moves to describe TDD &amp; OOP incremental approach to implementing a small but real-like software project. Real or real-like code is exactly what I am looking for!\n I&#39;ve quickly realized that the authors have a concrete idea of what an object means to them. I was confused why their code was always so... \u201ccallback-y\u201d and after studying it a little more, I&#39;ve discovered the reason. I might have missed it, but I don&#39;t think they ever explicitly state it. All calls between objects are unidirectional: no public method of an actual object (not a plain data class) returns any value. They are always  void methods. Objects don&#39;t \u201ccall\u201d each other. They send a message and don&#39;t wait for a response. (Well, actually since they actually \u201csend\u201d it via method call, they do wait, but they pretend they don&#39;t.\n That discovery blew my mind initially. I panicked. \u201cOMG, is this the secret sauce? Is the joke on me? Does everybody else find it so obvious that it&#39;s not worth mentioning and I&#39;m the clown that didn&#39;t realize it? Does this make the Good OOP?\u201d But I looked back into two previous books, and the code there is not like this. Bah \u2013 the authors can&#39;t even make a distinction between \u201cplain data\u201d and \u201cobjects\u201d, so how could they have objects sending plain data messages. If I&#39;m the clown, so are the others. If this is a secret sauce, there are a lot of clowns around, not just me.\n Then I started thinking about it. This approach turns your program into a distributed system. It tries to model something akin to a microservice architecture, where all communication passes through direct message queues. While message queues and microservices are often a great solution to real software business needs, they introduce tons of problems and changes and are hard to get right. In this book, authors put this challenge on themselves in the name of OOP, and additionally want to do it for every object. Intuition tells me this can&#39;t end well.\n  Here, let&#39;s make a test. Here is the  github repository with the code of the project from the Growing Object-Oriented Software book. Go look at it and tell me what does it do. I&#39;ll wait.\n The code doesn&#39;t have comments, but the design and naming are well thought through. When this code/book was recommended to me  after some clicking around the project I wasn&#39;t able to decipher what does it do. I wrote\n By the looks of it, it looks very much reasonable. DI everywhere, objects used for doers and not data, the state expressed with enums. It does however looks somewhat light on state, which is where from my PoV usually problems with OOP happen. It\u2019s hard for me to judge some design decisions well without any comments or the book\u2026 So I just went ahead and ordered the book.\n Reading it now, I&#39;m surprised how accurate this comment was.Even now, after reading the book, I find navigating around the code painful. Everything is just... so scattered and abstracted away everywhere. Note: I very often jump into codebases of random software projects that I&#39;m unfamiliar with: Open Source or at work, and I am very quick to find my way around all sorts of codebases.\n So while I find this code one of the most elegant OOP pieces I&#39;ve found, I think it&#39;s a great example of problems with OOP. No chance I would consider it easy to understand and maintain. For what is does, it&#39;s overly complicated and hard to understand.\n The TDD story presented in the book is appealing, and I definitely agree that testability is a great indicator of a good design. However I&#39;m not exactly converted to TDD religion just yet, though would be nice to ever just give a 100% zealous TDD a try and check. As things are presented in the book the OOP + TDD combination strikes me as a very elaborated and roundabout way to get to anywhere.\n  The project being implemented during the course of the book is called Auction Sniper and it is in essence an automatic biding-bot. The hypothetical auctions happen over the XMPP protocol (a sign of times when the book was written), the program has a simple one-table-based GUI, allows users to add an auction to bid on up to a certain price, shows the status and result of each auction as a row and then handles XMPP communication with the auction server. I like this example a lot.\n After finishing reading the book, I immediately started to think about \u201chow would I approach writing software like this\u201d.\n I don&#39;t buy this Agile/TDD approach of \u201clet&#39;s just iteratively get to a design\u201d. Trust me I do believe in the power of iterating, but the belief that iterating itself without any upfront design idea leads anywhere, is in my opinion nonsense.\n  When writing a program like this, my first and most important consideration would be data model design:\n   Immediately I remind myself that the implementation from the book ignores the problem of persistence completely. If you close that application it loses all the state. I think this is not an accident. This is where things go wrong for OOP really fast.  Object\u2013relational impedance mismatch, fancy ORMs that always lead you down... you name it. Source of complete failure of many projects. Is there a book I can read that explains how are the authors of the Auction Sniper are planning to iteratively add persistence and somehow save this distributed object system in a consistent way?\n For me, in this case, there are two asynchronous sources of events, and both are important to handle in a way that guarantees not losing any events. Because of that, I&#39;d employ a simplified version of Event Sourcing. Any event would first be appended to a persistent event log, which other components of the system would subscribe and react to, potentially generating new events. To rephrase: every event gets persisted in an ordered log of events right away. This way: we have a global ordering of things that happened, we can&#39;t lose any event, we can restore the system state in case it restarted, we can potentially audit/debug/display events relevant to a certain auction.\n An event log like this is one of the simplest and most robust communication patterns available. That&#39;s basically what Kafka stream will do for you, but it might as well be a simple append-only file or a table in an SQL database. Each entity following an event log must remember and store the position of events it already processed and that&#39;s all there is to it.\n  This brings us to another important design consideration: decomposing systems into \u201cactors\u201d (things that can work in parallel without sharing data). I immediately see at least the following separate actors:\n The UI handling system can work in parallel and just write the user requests to the event log, at the same time subscribing to it to display any updates and notifications in the UI.\n   The bidding engine follows events from both the auction and UI and reacts to them, potentially producing events that UI or auction sender can act on.\n All actors communicate via a shared event log, which simplifies things a lot. In real software, there would be some considerations with respect to performance, amount of data, etc. Maybe one event log would impose too much overhead on all actors following it and splitting it into dedicated logs would be beneficial. Maybe persisting the current state of the bidding engine is necessary \u2013 restoring it from a log-on start might be too slow. Snapshots of the state of each auction might make this unnecessary and so on. For now, the simplest design that we can improve on is good enough.\n  The event log is abstracted away behind two interfaces: one for writers, one for readers. That allows multiple implementations of how actually the data is stored. And since the log is the main IO for all other components, it will be useful to fake it in tests, driving actors independently.\n At the start, the main thread initializes the event log resource and starts all actor resources mentioned before, passing event log resources to them as a dependency (Dependency Injection).\n UI thread just handles the UI and event log, keeping them in sync. Simple in essence, though details might be hairy. Nowadays the UI would probably consist of an HTTP server, handling requests from the frontend, and maybe some websocket connection streaming relevant event log entries the other way.\n Both auction communication threads just receive, translate and write events between the actual protocol and event log.\n The bidding engine on start loads its state from the log, and then is basically a loop reacting to relevant events from the event log, and using logic written in functional programming style to decide what action to take, by writing it to the log. A typical \u201cfunctional code in an imperative shell\u201d loop, really.\n Actors following the event stream will need to persist their \u201ccursor\u201d (position in the log) somewhere, which would be an additional resource (interface) backed by an actual database.\n  And that&#39;s all. One could consider the Event Log and the actors/threads objects, and I guess that would be fair.\n However, I would like to point out important differences between this approach and OOP that I keep seeing.\n Data architecture is the most important consideration tackled upfront as a first priority. There is no writing anything before the data model that fits all the very high-level requirements is agreed on.\n These \u201cobjects\u201d are very coarse-grained and used only as high-level components. Internally, they are implemented using a combination of functional (where possible) and procedural/imperative (where necessary) programming. They might all be as well be separate services in a microservice-based architecture. The whole high-level approach I&#39;ve  described before in another post.\n I have a rough sketch of the code already written in Rust and is fairly straightforward, but as with everything in software \u2013 it takes more time to finish than I wish, and I&#39;m not sure if I&#39;ll be motivated enough to wrap it up. Just writing this post took me more than 3 hours, plus reading these books, etc. And all in all \u2013 does anyone really care? I mean I hope someone does. I hope that either I saved someone a couple of years fighting with stupid OOP dogma and discovering that it doesn&#39;t work, showing a more pragmatic approach, or that someone will understand me better and will send me an email explaining what am I missing that makes OOP actually worth trying to get right. But practically speaking this is just another random blogpost that doesn&#39;t change anything. \u00af\\ (\u30c4)/\u00af", "posttime": "2021-08-10 06:45:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8f6f\u4ef6,\u9762\u5411\u5bf9\u8c61,object,oop", "title": "\u53d1\u5c55\u9762\u5411\u5bf9\u8c61\u7684\u8f6f\u4ef6 vs. \u6211\u4f1a\u505a\u4ec0\u4e48", "title_en": "Growing object-oriented software vs. what I would do", "transed": 1, "url": "https://dpc.pw/growing-object-oriented-software-vs-what-i-would-do", "via": "", "real_tags": ["\u8f6f\u4ef6", "\u9762\u5411\u5bf9\u8c61", "object", "oop"]}, {"category": "", "categoryclass": "", "imagename": "e19efeb775bb2324c6c9f6fa48f98854.jpg", "infoid": 1072433, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f26\u6566\u2014\u2014\u4e24\u5e74\u524d\uff0c\u5f53\u7ea6\u7ff0\u5c3c\u00b7\u5e03\u6cd5\u54c8\u7279 (Johnny Boufarhat) \u521b\u7acb\u4ed6\u7684\u865a\u62df\u6d3b\u52a8\u4e1a\u52a1\u65f6\uff0c\u5f53\u65f6\u6ca1\u6709\u5927\u6d41\u884c\u3001\u6ca1\u6709\u5c01\u9501\uff0c\u4e5f\u6ca1\u6709\u65c5\u884c\u9650\u5236\u3002\u8fd9\u4e00\u5207\u5728 2020 \u5e74\u53d1\u751f\u4e86\u53d8\u5316\u3002\u51a0\u72b6\u75c5\u6bd2\u7684\u7206\u53d1\u8feb\u4f7f\u8bb8\u591a\u91cd\u5927\u6d3b\u52a8\u548c\u4f1a\u8bae\u88ab\u53d6\u6d88\u6216\u63a8\u8fdf\uff0c\u56e0\u4e3a\u4e16\u754c\u5404\u56fd\u653f\u5e9c\u5bf9\u516c\u5171\u751f\u6d3b\u65bd\u52a0\u4e86\u9650\u5236\u4ee5\u904f\u5236 Covid-19 \u7684\u4f20\u64ad\u3002\u7ed3\u679c\u662f\u89c6\u9891\u4f1a\u8bae\u8f6f\u4ef6\u7684\u7e41\u8363\uff0c\u4f7f Zoom\u3001\u5fae\u8f6f\u548c\u8c37\u6b4c\u7b49\u516c\u53f8\u53d7\u76ca\u3002\u4f46\u4e0d\u4ec5\u4ec5\u662f\u7f8e\u56fd\u79d1\u6280\u5de8\u5934\u770b\u5230\u4e86\u98de\u901f\u589e\u957f\u3002 Boufarhat \u7684\u516c\u53f8 Hopin \u4ee5\u53ca\u5305\u62ec Run The World \u548c Bizzabo \u5728\u5185\u7684\u5176\u4ed6\u4e00\u4e9b\u521d\u521b\u4f01\u4e1a\u90fd\u9047\u5230\u4e86\u66f4\u9ad8\u7684\u9700\u6c42\uff0c\u56e0\u4e3a\u6d3b\u52a8\u4e3b\u529e\u65b9\u7ade\u76f8\u5c06\u4ed6\u4eec\u7684\u805a\u4f1a\u8f6c\u79fb\u5230\u7f51\u4e0a\u3002\u8fd9\u6ce2\u9700\u6c42\u8fc5\u901f\u5c06 Hopin \u63a8\u5411\u201c\u72ec\u89d2\u517d\u201d\u5730\u4f4d\uff0c\u5176\u4f30\u503c\u5728 11 \u6708\u7684\u4e00\u8f6e\u878d\u8d44\u4e2d\u98d9\u5347\u81f3 20 \u4ebf\u7f8e\u5143\u4ee5\u4e0a\u3002 3 \u6708\u4efd\uff0cHopin \u7684\u5e02\u503c\u7ffb\u4e86\u4e00\u756a\u591a\uff0c\u8fbe\u5230 56.5 \u4ebf\u7f8e\u5143\u3002\u73b0\u5728\uff0c\u8be5\u516c\u53f8\u53c8\u83b7\u5f97\u4e86\u4e00\u7b14\u5de8\u989d\u6295\u8d44\uff0c\u8fd9\u662f\u81ea\u53bb\u5e74 2 \u6708\u4ee5\u6765\u7684\u7b2c\u56db\u7b14\u6295\u8d44\u3002\u970d\u5e73\u5468\u56db\u8868\u793a\uff0c\u5b83\u5df2\u5728\u7531 Arena Holdings \u548c Altimeter Capital \u5171\u540c\u7275\u5934\u7684\u4e00\u8f6e\u878d\u8d44\u4e2d\u7b79\u96c6\u4e86 4.5 \u4ebf\u7f8e\u5143\u3002\u6700\u65b0\u7684\u73b0\u91d1\u6ce8\u5165\u4f7f\u8fd9\u5bb6\u521d\u521b\u516c\u53f8\u7684\u4f30\u503c\u9ad8\u8fbe 77.5 \u4ebf\u7f8e\u5143\uff0c\u4f7f\u5176\u6210\u4e3a\u6b27\u6d32\u6700\u6709\u4ef7\u503c\u7684\u79d1\u6280\u72ec\u89d2\u517d\u4e4b\u4e00\u3002\n\u201c\u6211\u611f\u5230\u5f88\u5e78\u8fd0\uff0c\u201d\u4ed6\u5728\u5468\u56db\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\u544a\u8bc9 CNBC\u3002 \u201c\u4f60\u5de5\u4f5c\u771f\u7684\u5f88\u52aa\u529b\uff0c\u4f60\u505a\u51fa\u4e86\u4e00\u4e9b\u5173\u952e\u7684\u51b3\u5b9a\u6765\u8ba9\u4f60\u7684\u751f\u610f\u8fbe\u5230\u73b0\u5728\u7684\u6c34\u5e73\u3002\u4f46\u4e5f\u6709\u5f88\u5927\u4e00\u90e8\u5206\u8fd0\u6c14\u80fd\u628a\u4f60\u5e26\u5230\u90a3\u91cc\u3002\u201d\u8fd9\u4f4d\u6fb3\u5927\u5229\u4e9a\u51fa\u751f\u7684\u4f01\u4e1a\u5bb6\u4e8e 2019 \u5e74 6 \u6708\u5728\u4f26\u6566\u521b\u7acb\u4e86 Hopin\uff0c\u6b64\u524d\u4ed6\u56e0\u81ea\u8eab\u514d\u75ab\u6027\u75be\u75c5\u800c\u65e0\u6cd5\u51fa\u95e8\u3002\u4ed6\u516c\u53f8\u7684\u5e73\u53f0\u5141\u8bb8\u7ec4\u7ec7\u5728\u7ebf\u4e3e\u529e\u591a\u8fbe 100,000 \u540d\u4e0e\u4f1a\u8005\u7684\u6d3b\u52a8\uff0c\u5e76\u63d0\u4f9b\u865a\u62df\u8c08\u8bdd\u548c\u4e00\u5bf9\u4e00\u7f51\u7edc\u5de5\u5177\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5b83\u5728\u5927\u6d41\u884c\u671f\u95f4\u5f88\u53d7\u6b22\u8fce\uff0c\u73b0\u5728\u62e5\u6709\u5305\u62ec\u7f8e\u56fd\u8fd0\u901a\u548c\u5317\u7ea6\u5728\u5185\u7684 100,000 \u591a\u4e2a\u5ba2\u6237\uff0c\u540c\u65f6\u6ce8\u518c\u5e10\u6237\u7684\u7528\u6237\u8d85\u8fc7 1700 \u4e07\u3002\u6839\u636e\u300a\u661f\u671f\u65e5\u6cf0\u6664\u58eb\u62a5\u300b\u5bcc\u8c6a\u699c\uff0c\u8be5\u516c\u53f8\u4e0d\u65ad\u4e0a\u6da8\u7684\u4f30\u503c\u4f7f\u5e03\u6cd5\u54c8\u7279\u6210\u4e3a\u82f1\u56fd\u6700\u5e74\u8f7b\u7684\u767d\u624b\u8d77\u5bb6\u4ebf\u4e07\u5bcc\u7fc1\u3002\u8003\u8651\u5230 Hopin \u7684\u589e\u957f\uff0c\u8be5\u516c\u53f8\u5728 2020 \u5e74 3 \u6708\u53ea\u6709 8 \u540d\u5458\u5de5\u3002\u73b0\u5728\u5176\u5458\u5de5\u4eba\u6570\u4e3a 800\u3002Hopin \u7684\u6240\u6709\u5458\u5de5\u90fd\u8fdc\u7a0b\u5de5\u4f5c\u3002\u8c08\u5230\u516c\u53f8\u7684\u6210\u529f\u65f6\uff0cBoufarhat \u8bf4\uff1a\u201c\u5f88\u591a\u4e8b\u60c5\u5fc5\u987b\u70b9\u51fb\u5230\u4f4d\u624d\u80fd\u53d1\u751f\uff0c\u8fd9\u662f\u6211\u65e0\u6cd5\u63a7\u5236\u7684\u3002\u201d \u201c\u8fd9\u771f\u7684\u5f88\u53ef\u60b2\uff0c\u6211\u4eec\u5e0c\u671b Covid \u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u3002\u5728 Covid \u4e4b\u524d\uff0c\u6211\u4eec\u4ecd\u5728\u5feb\u901f\u589e\u957f\uff0c\u4f46\u663e\u7136 Covid \u5bf9\u516c\u53f8\u6765\u8bf4\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u52a0\u901f\u5668\u3002\u201d Hopin \u5df2\u7ecf\u6536\u8d2d\u4e86\u8bb8\u591a\u5176\u4ed6\u521d\u521b\u516c\u53f8\uff0c\u5305\u62ec\u76f4\u64ad Streamyard \u548c\u89c6\u9891\u534f\u4f5c\u5e94\u7528\u7a0b\u5e8f Jamm\uff0c\u4ee5\u6269\u5927\u5176\u4ea7\u54c1\u5957\u4ef6\u3002 Boufarhat \u8bf4\uff0c\u5728\u4e09\u5230\u56db\u4e2a\u6708\u7684\u65f6\u95f4\u91cc\uff0cHopin \u8ba1\u5212\u63a8\u51fa\u4e24\u9879\u4e13\u6ce8\u4e8e\u534f\u4f5c\u548c\u6570\u5b57\u89c6\u9891\u8425\u9500\u7684\u65b0\u670d\u52a1\u3002\n\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5b83\u73b0\u5728\u7684\u5e74\u5ea6\u7ecf\u5e38\u6027\u6536\u5165 (ARR) \u7ea6\u4e3a 1 \u4ebf\u7f8e\u5143\uff0c\u9ad8\u4e8e 3 \u6708\u4efd\u7684 7000 \u4e07\u7f8e\u5143\u548c 11 \u6708\u4efd\u7684 2000 \u4e07\u7f8e\u5143\u3002 ARR \u662f\u57fa\u4e8e\u8ba2\u9605\u7684\u8f6f\u4ef6\u516c\u53f8\u7528\u6765\u8ba1\u7b97\u4ed6\u4eec\u4e00\u5e74\u53ef\u80fd\u8d5a\u591a\u5c11\u94b1\u7684\u6307\u6807\u3002 Boufarhat \u8bf4\uff0cHopin \u4ee5\u524d\u662f\u76c8\u5229\u7684\uff0c\u4f46\u73b0\u5728\u5904\u4e8e\u4e8f\u635f\u72b6\u6001\uff0c\u5e76\u5c06\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765\u7ee7\u7eed\u8fd9\u6837\u505a\uff0c\u4ee5\u4f18\u5148\u8003\u8651\u589e\u957f\u3002\u4e00\u4e9b\u6295\u8d44\u8005\u8d28\u7591\u970d\u5e73\u548c\u5176\u4ed6\u5728\u5927\u6d41\u884c\u671f\u95f4\u53d7\u76ca\u7684\u79d1\u6280\u516c\u53f8\u80fd\u5426\u5728\u540e Covid \u4e16\u754c\u7ee7\u7eed\u4ed6\u4eec\u7684\u8fde\u80dc\u7eaa\u5f55\u3002 \u201c\u968f\u7740\u6211\u4eec\u516c\u53f8\u7684\u6210\u719f\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u5c06\u7ecf\u5386\u4e00\u6bb5\u65f6\u671f\uff0c\u4e0d\u662f\u7f13\u6162\u589e\u957f\uff0c\u800c\u662f\u8d85\u9ad8\u901f\u589e\u957f\uff0c\u7136\u540e\u968f\u7740\u6211\u4eec\u5f00\u59cb\u53d1\u5e03\u65b0\u4ea7\u54c1\uff0c\u5b83\u4f1a\u6062\u590d\uff0c\u201dBoufarhat \u8bf4\u3002\u4f46 Hopin \u7684\u521b\u59cb\u4eba\u8868\u793a\uff0c\u8be5\u516c\u53f8\u6b63\u5728\u4e3a\u672a\u6765\u51c6\u5907\u5728\u7ebf\u548c\u79bb\u7ebf\u4e3e\u529e\u7684\u201c\u6df7\u5408\u201d\u6d3b\u52a8\u3002 \u201c\u6211\u4eec\u4e3e\u529e\u4e86\u4e00\u573a\u73b0\u573a\u6df7\u5408\u6d3b\u52a8\uff0c\u6709 40 \u4eba\u4eb2\u81ea\u53c2\u52a0\uff0c\u5168\u7403\u6709 10,000 \u591a\u4eba\u53c2\u52a0\uff0c\u201d\u5e03\u6cd5\u54c8\u7279\u8bf4\u3002\u7136\u800c\uff0c\u4ed6\u8b66\u544a\u8bf4\uff1a\u201c\u4ece\u6211\u4e0e\u5927\u591a\u6570\u8fd9\u4e9b\u7ec4\u7ec7\u7684\u5bf9\u8bdd\u6765\u770b\uff0c\u6211\u76f8\u4fe1\u660e\u5e74\u662f\u6211\u4eec\u5c06\u770b\u5230\u8fd9\u4e9b\u73b0\u573a\u6d3b\u52a8\u56de\u5f52\u7684\u4e00\u5e74\u3002\u201d\n\u5bf9\u4e8e\u9996\u6b21\u516c\u5f00\u52df\u80a1\uff0cBoufarhat \u8ba4\u4e3a Hopin \u5c06\u5728\u672a\u6765 2-4 \u5e74\u5185\u4e0a\u5e02\u3002", "note_en": "LONDON \u2014 When Johnny Boufarhat founded his virtual events business two years ago, there was no pandemic, no lockdowns and no travel restrictions. That all changed in 2020.\n The coronavirus outbreak forced a multitude of major events and conferences to be cancelled or postponed, as governments around the world imposed restrictions on public life to curb the spread of Covid-19.\n  The result was a  boom in video conferencing software benefiting the likes of  Zoom,  Microsoft and  Google.\n But it wasn&#39;t just U.S. tech giants that saw meteoric growth. Hopin, Boufarhat&#39;s firm, and a handful of other start-ups including  Run The World and  Bizzabo, were met with  heightened demand as event hosts raced to move their gatherings online.\n That wave of demand quickly catapulted Hopin to &#34;unicorn&#34; status, with its valuation  surging past $2 billion in a November funding round. Hopin&#39;s market value then  more than doubled to $5.65 billion in March.\n Now, the company has bagged yet another mega investment, its fourth since February last year.\n Hopin said Thursday it has raised $450 million in a funding round co-led by Arena Holdings and Altimeter Capital. The latest cash injection values the start-up at a whopping $7.75 billion, making it one of Europe&#39;s most valuable tech unicorns.\n  &#34;I feel lucky,&#34; he told CNBC in an interview Thursday. &#34;You work really hard, and you make some critical decisions to get your business to where it is. But there&#39;s also a really big part of luck that takes you there.&#34;\n  The Australian-born entrepreneur started Hopin in London in June 2019 after falling ill with an autoimmune disease that prevented him from leaving the house.\n His company&#39;s platform lets organizations host events online with up to 100,000 attendees, with tools for virtual talks and one-to-one networking. It proved a hit during the pandemic, and now has over 100,000 customers including  American Express and NATO, while more than 17 million users have registered for an account.\n The rising valuation of the business has made Boufarhat Britain&#39;s youngest self-made billionaire on paper, according to the  Sunday Times Rich List.\n To put Hopin&#39;s growth into perspective, the company had only eight employees in March 2020. Its headcount now stands at 800. All of Hopin&#39;s employees work remotely.\n &#34;Quite a few things that had to click in place for that to happen were out of my control,&#34; Boufarhat said of the company&#39;s success. &#34;It&#39;s actually sad, we wish Covid never happened. We were still growing fast pre-Covid but obviously Covid was a massive accelerator for the company.&#34;\n  Hopin has snapped up a number of other start-ups including livestreaming Streamyard and video collaboration app Jamm in a bid to expand its suite of products. In three to four months&#39; time, Hopin plans to launch two new services focused on collaboration and digital video marketing, Boufarhat said.\n  The company says it now has annual recurring revenue, or ARR, of about $100 million, up from $70 million in March, and $20 million in November. ARR is a metric used by subscription-based software firms to calculate how much money they will likely make in a year.\n Hopin was previously profitable but is now running at a loss and will continue to do so for the foreseeable future to prioritize growth, Boufarhat said.\n Some investors question whether Hopin and other tech companies that have benefited during the pandemic can continue their winning streak in a post-Covid world.\n &#34;As we mature as a company, I think we&#39;re going to go through a time of, not slow growth but not hyper-speed growth, and then it will come back up as we start to release new products,&#34; Boufarhat said.\n But Hopin&#39;s founder says the company is preparing for a future with &#34;hybrid&#34; events that take place both online and offline.\n &#34;We hosted an on-site hybrid event where there were 40 people in-person and over 10,000 attending globally,&#34; Boufarhat said.\n However, he cautioned: &#34;From my conversations with most of these organizations, I believe that next year is the year where we&#39;re going to see these on-site events return.&#34;\n As for an initial public offering, Boufarhat thinks Hopin will go public within the next 2-4 years.", "posttime": "2021-08-10 06:44:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u865a\u62df,uk", "title": "\u4e24\u5e74\u524d\u7684\u82f1\u56fd\u865a\u62df\u6d3b\u52a8\u521d\u521b\u516c\u53f8\u4f30\u503c\u8fbe\u5230 $7.75B", "title_en": "Two year old UK virtual events startup reaches a $7.75B valuation", "transed": 1, "url": "https://www.cnbc.com/2021/08/05/virtual-events-startup-hopin-valued-at-7-75-billion.html", "via": "", "real_tags": ["\u865a\u62df", "uk"]}, {"category": "", "categoryclass": "", "imagename": "8908ca374da89da3dcc6bcd537569529.png", "infoid": 1072432, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5c06 Helm \u4f5c\u4e3a\u72ec\u7acb\u5408\u6210\u5668\u6216\u4f5c\u4e3a LV2\u3001VST\u3001VST3 \u6216 AU \u63d2\u4ef6\u8fd0\u884c\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u81ea\u7531\u5730\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c Helm\uff0c\u800c\u6ca1\u6709 DRM \u7684\u75db\u82e6\uff0c\u60a8\u53ef\u4ee5\u7814\u7a76\u548c\u66f4\u6539\u6e90\u4ee3\u7801\u5e76\u91cd\u65b0\u5206\u53d1 Helm \u7684\u7cbe\u786e\u6216\u4fee\u6539\u7684\u526f\u672c\u3002", "note_en": "Run Helm as a standalone synthesizer or as an LV2, VST, VST3 or AU plugin.\n  This means you are free to run Helm anywhere without the pains of DRM, you can  study and change the source code and redistribute exact or modified copies of Helm.", "posttime": "2021-08-10 06:44:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6cf0\u5c14,matt,helm", "title": "\u9a6c\u7279\u00b7\u6cf0\u5c14 (Matt Tytel) \u7684\u5934\u76d4", "title_en": "Helm by Matt Tytel", "transed": 1, "url": "https://tytel.org/helm/", "via": "", "real_tags": ["\u6cf0\u5c14", "matt", "helm"]}, {"category": "", "categoryclass": "", "imagename": "6e3e980fae24ab47779ec1a940160c24.jpg", "infoid": 1072431, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2021 \u5e74\u9ed1\u5ba2\u590f\u4ee4\u8425\u4eca\u5e74\u91c7\u7528\u4e86\u6df7\u5408\u5f62\u5f0f\uff0c\u56e0\u4e3a\u6301\u7eed\u7684\u51a0\u72b6\u75c5\u6bd2\u6d41\u884c\u6240\u65bd\u52a0\u7684\u9650\u5236\u610f\u5473\u7740 Black Hat \u548c DEF CON \u7684\u5927\u591a\u6570\u53c2\u4e0e\u8005\u90fd\u5728\u7ebf\u6536\u542c\uff0c\u800c\u4e0d\u662f\u51fa\u73b0\u5728\u62c9\u65af\u7ef4\u52a0\u65af\u3002\u5b89\u5168\u7814\u7a76\u4eba\u5458\u901a\u8fc7\u5c55\u793a - \u5c31\u50cf\u53c2\u52a0\u672c\u6708\u5965\u8fd0\u4f1a\u548c\u6b8b\u5965\u4f1a\u7684\u8fd0\u52a8\u5458\u4e00\u6837 - \u4ed6\u4eec\u53ef\u4ee5\u4e00\u8d77\u8d70\u5f97\u66f4\u5feb\u3001\u66f4\u9ad8\u548c\u66f4\u5f3a\uff0c\u4ece\u800c\u5f25\u8865\u4e86\u89c2\u4f17\u4e92\u52a8\u7684\u4e0d\u8db3\u3002\u5728 Black Hat\uff0c\u5f17\u52b3\u6069\u970d\u592b\u5b89\u5168\u4fe1\u606f\u6280\u672f\u7814\u7a76\u6240\u7684\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86 Let&#39;s Encrypt \u7684\u591a\u89c6\u89d2\u9a8c\u8bc1\u529f\u80fd\u5f15\u5165\u7684\u5b89\u5168\u63a7\u5236\u53ef\u80fd\u4f1a\u88ab\u6ee5\u7528\u3002\u7ed5\u8fc7\u8fd9\u4e9b\u4e8e 2020 \u5e74 2 \u6708\u9488\u5bf9\u65e9\u671f\u653b\u51fb\u800c\u5f15\u5165\u7684\u63a7\u5236\u63aa\u65bd\uff0c\u4f7f\u653b\u51fb\u8005\u6709\u53ef\u80fd\u83b7\u5f97\u4ed6\u4eec\u73b0\u5728\u62e5\u6709\u7684 Web \u57df\u7684\u6570\u5b57\u8bc1\u4e66\uff0c\u4ece\u800c\u4e3a\u7f51\u7edc\u9493\u9c7c\u653b\u51fb\u6216\u5176\u4ed6\u8bc8\u9a97\u63d0\u4f9b\u4e86\u8df3\u677f\u3002\u901a\u8fc7\u5728\u4e0e\u67d0\u4e9b\u540d\u79f0\u670d\u52a1\u5668\u7684\u8fde\u63a5\u4e2d\u5f15\u5165\u6570\u636e\u5305\u4e22\u5931\u6216\u5ef6\u8fdf\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5f3a\u5236\u7cfb\u7edf\u4f9d\u8d56\u4ed6\u4eec\u9009\u62e9\u7684\u540d\u79f0\u670d\u52a1\u5668\u2014\u2014\u964d\u4f4e\u591a\u89c6\u89d2\u9a8c\u8bc1\u63d0\u4f9b\u7684\u5b89\u5168\u6027\u3002\u5de5\u4f5c\u8868\u660e\uff0c\u57df\u9a8c\u8bc1\u867d\u7136\u5177\u6709\u4f18\u52bf\uff0c\u56e0\u4e3a\u5b83\u6210\u672c\u4f4e\u4e14\u9002\u5408\u81ea\u52a8\u5316\uff0c\u4f46\u5c1a\u4e0d\u5b89\u5168\uff0c\u9700\u8981\u52a0\u4ee5\u6539\u8fdb\uff0c\u4ee5\u4fbf\u6210\u4e3a\u66f4\u6709\u6548\u7684\u6b3a\u8bc8\u5c4f\u969c\u3002\u5728 Black Hat\uff0c\u5b89\u5168\u7814\u7a76\u5458 Mathy Vanhoef \u5206\u4eab\u4e86\u4ed6\u5728 FragAttacks \u788e\u7247\u5316\u548c\u805a\u5408\u653b\u51fb\u65b9\u9762\u7684\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5de5\u4f5c\uff09\uff0c\u5e76\u5728 Tom Van Goethem \u7684\u5e2e\u52a9\u4e0b\u8fdb\u884c\u4e86\u8ba1\u65f6\u653b\u51fb\u3002\n\u5bf9\u4e8e\u524d\u8005\uff0c\u4ed6\u63cf\u8ff0\u4e86 WiFi \u7684\u5e27\u805a\u5408\u548c\u5206\u6bb5\u529f\u80fd\u4e2d\u7684\u5b9e\u73b0\u7f3a\u9677\u548c\u8bbe\u8ba1\u6f0f\u6d1e\u5982\u4f55\u5f71\u54cd\u6240\u6709\u53d7\u4fdd\u62a4\u7684 WiFi \u7f51\u7edc\uff0c\u751a\u81f3\u53ef\u4ee5\u8ffd\u6eaf\u5230 1997 \u5e74\u7684 WEP \u534f\u8bae\u3002\u201c\u64cd\u4f5c\u4fe1\u9053\u9a8c\u8bc1\u201d\uff08PDF\uff09\u548c\u201c\u4fe1\u6807\u201d\u7684\u9010\u6b65\u91c7\u7528\u4fdd\u62a4\u201d (PDF) \u6700\u7ec8\u5c06\u63d0\u4f9b\u4e00\u5b9a\u7a0b\u5ea6\u7684 FragAttacks \u4fdd\u62a4\uff0c\u4ed6\u8bf4\u3002\u5728\u4e0a\u5468\u7684\u5355\u72ec\u6f14\u793a\u4e2d\uff0cVanhoef \u548c Van Goethem \u5728\u514b\u670d\u4e86\u4ee5\u524d\u590d\u6742\u7684\u8fdc\u7a0b\u653b\u51fb\u7684\u6311\u6218\u4e4b\u540e\uff0c\u5c06\u5b9a\u65f6\u653b\u51fb\u63d0\u5347\u5230\u4e86\u65b0\u7684\u9ad8\u5ea6\u3002\u5b9a\u65f6\u653b\u51fb\u901a\u8fc7\u6d4b\u91cf\u52a0\u5bc6\u7b97\u6cd5\u7684\u6267\u884c\u65f6\u95f4\u6765\u63a8\u65ad\u79d8\u5bc6\uff0c\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u548c\u5bc6\u7801\u7cfb\u7edf\u4e2d\u51fa\u73b0\u6f0f\u6d1e\uff0c\u8fd9\u4e9b\u6f0f\u6d1e\u7f3a\u4e4f\u6052\u5b9a\u65f6\u95f4\u6267\u884c\u3002\u867d\u7136\u8fd9\u4e9b\u4fa7\u4fe1\u9053\u6f0f\u6d1e\u53ef\u4ee5\u901a\u8fc7\u73b0\u4ee3\u4e92\u8054\u7f51\u8fde\u63a5\u8fdb\u884c\uff0c\u4f46\u201c\u7f51\u7edc\u6296\u52a8\u201d\u5df2\u8feb\u4f7f\u653b\u51fb\u8005\u6536\u96c6\u6570\u5343\u6216\u6570\u767e\u4e07\u4e2a\u6d4b\u91cf\u7ed3\u679c\u4ee5\u63a8\u65ad\u51fa\u4e00\u70b9\u4fe1\u606f\u3002\u7136\u800c\uff0c\u201c\u6c38\u6052\u5b9a\u65f6\u653b\u51fb\u201d\u4e0d\u53d7\u7f51\u7edc\u6296\u52a8\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u201c\u4e24\u4e2a\u8bf7\u6c42\u5728\u540c\u4e00\u65f6\u95f4\u5230\u8fbe\u670d\u52a1\u5668\u7684\u540c\u4e00\u6570\u636e\u5305\u4e2d\u201d\uff0cVan Goethem \u89e3\u91ca\u8bf4\u3002\u56e0\u6b64\uff0c\u5728\u4efb\u4f55\u4e92\u8054\u7f51\u8fde\u63a5\u4e0a\u90fd\u53ef\u4ee5\u68c0\u6d4b\u5230\u5c0f\u81f3 100 \u7eb3\u79d2\u7684\u65f6\u95f4\u5dee\u5f02\u2014\u2014\u5176\u51c6\u786e\u6027\u53ef\u4e0e\u5bf9\u672c\u5730\u7cfb\u7edf\u7684\u653b\u51fb\u76f8\u5ab2\u7f8e\u3002\n\u53ef\u4ee5\u9488\u5bf9\u542f\u7528\u591a\u8def\u590d\u7528\u7684\u534f\u8bae\u6216\u901a\u8fc7\u5229\u7528\u542f\u7528\u5c01\u88c5\u7684\u4f20\u8f93\u534f\u8bae\u53d1\u8d77\u653b\u51fb\uff0c\u7814\u7a76\u4eba\u5458\u6210\u529f\u5730\u5bf9 HTTP/2 \u7f51\u7edc\u670d\u52a1\u5668\u548c EAP-PWD\uff08\u4e00\u79cd\u6d41\u884c\u7684 Wi-Fi \u8eab\u4efd\u9a8c\u8bc1\u534f\u8bae\uff09\u53d1\u8d77\u653b\u51fb\u3002 PortSwigger \u5b89\u5168\u7814\u7a76\u5458 James Kettle \u91cd\u65b0\u5ba1\u89c6\u4e86\u8bf7\u6c42\u8d70\u79c1\u5982\u4f55\u5f71\u54cd HTTP/2 \u57fa\u7840\u8bbe\u65bd\u3002\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86\u9488\u5bf9 HTTP/2 \u7cfb\u7edf\u7684\u653b\u51fb\u5982\u4f55\u4f7f\u4ed6\u80fd\u591f\u4ece\u8fd0\u884c Amazon \u5e94\u7528\u7a0b\u5e8f\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u7f51\u7ad9\u7a83\u53d6\u673a\u5bc6\uff0c\u6bd2\u5bb3 Bitbucket \u4e0a\u7684\u6bcf\u4e2a\u9875\u9762\uff0c\u5e76\u8feb\u4f7f Atlassian \u5c06\u5176\u6bcf\u4e2a\u7528\u6237\u4ece Jira \u4e2d\u6ce8\u9500\u3002 \u201c\u5982\u679c\u4f60\u4f7f\u7528\u4f60\u7684\u524d\u7aef\u670d\u52a1\u5668\uff0c\u6253\u5f00 HTTP/2 \u652f\u6301\u5e76\u8fdb\u884c\u964d\u7ea7\uff0c\u606d\u559c\u4f60\uff1a\u4f60\u53ef\u80fd\u5bb9\u6613\u53d7\u5230\u8bf7\u6c42\u8d70\u79c1\u7684\u65b9\u5f0f\u6570\u91cf\u589e\u52a0\u4e86\u4e00\u500d\uff0c\u201dKettle \u8b66\u544a\u8bf4\u3002\u67e5\u770b\u6211\u4eec\u4e4b\u524d\u7684\u62a5\u9053\uff0c\u4e86\u89e3\u6709\u5173\u8fd9\u9879\u6700\u65b0\u7f51\u7edc\u5b89\u5168\u7814\u7a76\u7684\u5b8c\u6574\u8be6\u7ec6\u4fe1\u606f\uff0c\u8be5\u7814\u7a76\u5728\u4eca\u5e74\u7684 Black Hat USA \u548c DEF CON \u4e0a\u90fd\u6709\u4ecb\u7ecd\u3002\u9ed1\u5ba2\u9ad8\u624b Orange Tsai \u63ed\u5f00\u4e86\u4ed6\u6240\u8bf4\u7684\u6f5c\u5728\u201cMicrosoft Exchange \u5386\u53f2\u4e0a\u6700\u4e25\u91cd\u7684\u6f0f\u6d1e\u201d\u7684\u9762\u7eb1\u3002\u5728\u6700\u8fd1\u83b7\u5f97 Pwn2Own \u548c Pwnie \u5956\u4e4b\u540e\uff0c\u8fd9\u4f4d\u7814\u7a76\u4eba\u5458\u8bb2\u8ff0\u4e86\u4ed6\u53d1\u73b0\u7684\u4e00\u4e2a\u9884\u5148\u9a8c\u8bc1\u7684\u8fdc\u7a0b\u4ee3\u7801\u6267\u884c (RCE) \u7f3a\u9677\uff0c\u8be5\u7f3a\u9677\u6d89\u53ca\u5168\u7403\u6570\u5341\u4e07\u4e2a\u4f01\u4e1a\u6d88\u606f\u4f20\u9012\u670d\u52a1\u5668\u7684\u5165\u4fb5\u3002\n\u4f46\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u53e6\u4e00\u4e2a\u4e25\u91cd\u7684\u5b89\u5168\u6f0f\u6d1e\uff1b\u5b83\u521b\u9020\u4e86\u201c\u6f0f\u6d1e\u7814\u7a76\u7684\u65b0\u8303\u5f0f\u201d\uff0c\u540c\u6837\u5982\u6b64\u3002 Devcore \u7684\u9996\u5e2d\u5b89\u5168\u7814\u7a76\u5458 Tsai \u5728\u8fd9\u4e2a\u201c\u65b0\u653b\u51fb\u9762\u201d\u4e0a\u53d1\u73b0\u4e86\u670d\u52a1\u5668\u7aef\u3001\u5ba2\u6237\u7aef\u548c\u52a0\u5bc6\u9519\u8bef\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0e\u79f0\u4e3a ProxyLogon \u548c ProxyShell \u7684\u9884\u8ba4\u8bc1 RCE \u94fe\u4ee5\u53ca ProxyOracle\uff08\u4e00\u79cd\u660e\u6587\u5bc6\u7801\u6062\u590d\uff09\u4e00\u8d77\u6536\u96c6\u8d77\u6765\u7ec4\u5408\u3002\u540e\u679c\u5f88\u4e25\u91cd\uff1aMicrosoft Exchange Server \u88ab\u4f01\u4e1a\u7ec4\u7ec7\u548c\u653f\u5e9c\u673a\u6784\u5e7f\u6cdb\u4f7f\u7528\uff0cTsai \u53d1\u73b0\u4e86 400,000 \u4e2a\u9762\u5411 Internet \u7684\u5b9e\u4f8b\u3002\u8fd9\u4f4d\u7814\u7a76\u4eba\u5458\u8868\u793a\uff0c\u4ed6\u7684\u8c03\u67e5\u4ee5 2013 \u5e74\u5ba2\u6237\u7aef\u8bbf\u95ee\u670d\u52a1 (CAS) \u7684\u91cd\u5927\u67b6\u6784\u66f4\u6539\u4e3a\u4e2d\u5fc3\uff0c\u975e\u5e38\u5bcc\u6709\u6210\u6548\uff0c\u56e0\u4e3a\u4ed6\u4ece\u9ad8\u7ea7\u67b6\u6784\u7684\u89d2\u5ea6\u8c03\u67e5\u4e86\u76ee\u6807\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u5bfb\u627e\u7279\u5b9a\u7684\u6f0f\u6d1e\u7c7b\u578b\u3002 Tsai \u603b\u7ed3\u9053\uff0c\u5c3d\u7ba1\u5fae\u8f6f\u5c3d\u6700\u5927\u52aa\u529b\u52a0\u5f3a\u5b89\u5168\u6027\uff0c\u4f46 Microsoft Exchange \u4ecd\u7136\u662f\u201c\u4e00\u4e2a\u57cb\u85cf\u7740\u66f4\u591a\u9519\u8bef\u7684\u5b9d\u85cf\u201d\u3002\u5728 DEF CON \u7684\u524d\u77bb\u6027\u6f14\u8bb2\u4e2d\uff0cAI \u8f85\u52a9\u793e\u4f1a\u5de5\u7a0b\u7684\u6f5c\u5728\u672a\u6765\u88ab\u63cf\u7ed8\u51fa\u6765\u3002\u4eba\u5de5\u667a\u80fd\u5373\u670d\u52a1 (AIaaS) \u4ea7\u54c1\uff0c\u4f8b\u5982 OpenAI \u7684 GPT-3 API\uff0c\u8ba9\u5148\u8fdb\u6280\u672f\u66f4\u5bb9\u6613\u4ee5\u9002\u4e2d\u7684\u6210\u672c\u83b7\u5f97\u3002\n\u4e09\u540d\u65b0\u52a0\u5761\u7814\u7a76\u4eba\u5458\u80fd\u591f\u91cd\u65b0\u5229\u7528\u4e2a\u6027\u5206\u6790 AIaaS \u4ea7\u54c1\uff0c\u4ee5\u751f\u6210\u57fa\u4e8e\u76ee\u6807\u793e\u4ea4\u5a92\u4f53\u8d44\u6599\u7684\u4ee4\u4eba\u4fe1\u670d\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u3002\u8fd9\u9879\u4efb\u52a1\u53d1\u6325\u4e86\u4e0e AIaaS \u4ea7\u54c1\u6346\u7ed1\u5728\u4e00\u8d77\u7684\u81ea\u7136\u8bed\u8a00\u751f\u6210\u5668\u7684\u4f18\u52bf\u3002\u5bf9\u4e8e\u5927\u89c4\u6a21\u5b9a\u5411\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\uff0c\u4eba\u5de5\u521b\u5efa\u7684\u5185\u5bb9\u5438\u5f15\u4e86\u66f4\u591a\u7684\u4e92\u52a8\u3002\u4f46\u5728\u4f5c\u4e3a\u6388\u6743\u6e17\u900f\u6d4b\u8bd5\u7ec3\u4e60\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u7684\u6709\u9488\u5bf9\u6027\u7684\u9c7c\u53c9\u5f0f\u7f51\u7edc\u9493\u9c7c\u7ec3\u4e60\u4e2d\uff0c\u5bf9 AI \u751f\u6210\u7684\u7f51\u7edc\u9493\u9c7c\u7535\u5b50\u90ae\u4ef6\u7684\u54cd\u5e94\u66f4\u9ad8\u3002\u7814\u7a76\u4eba\u5458\u6982\u8ff0\u4e86\u53ef\u80fd\u7528\u4e8e\u68c0\u6d4b\u5408\u6210\u6587\u672c\u7684\u6280\u672f\u4ee5\u53ca AIaaS \u63d0\u4f9b\u5546\u5e94\u8be5\u8003\u8651\u91c7\u7528\u7684\u6cbb\u7406\u539f\u5219\u3002\u5728 Black Hat \u671f\u95f4\uff0c\u6765\u81ea\u7f51\u7edc\u6570\u636e\u6d4b\u91cf\u548c\u5206\u6790\u4e2d\u5fc3 (CMAND) \u7684\u7814\u7a76\u4eba\u5458\u5c55\u793a\u4e86 IPVSee You\uff0c\u8fd9\u662f\u4e00\u79cd\u9690\u79c1\u7834\u574f\u653b\u51fb\uff0c\u53ef\u4ee5\u53d1\u73b0\u5e76\u7cbe\u786e\u5b9a\u4f4d\u5168\u7403\u6570\u767e\u4e07\u4e2a\u6b63\u5728\u4f7f\u7528\u7684\u5bb6\u7528\u8def\u7531\u5668\u3002\u5b83\u88ab\u63cf\u8ff0\u4e3a\u4e00\u79cd\u201c\u5927\u89c4\u6a21\u6570\u636e\u878d\u5408\u653b\u51fb\u201d\uff0c\u5b83\u5c06 EUI-64 IPv6 \u5730\u5740\u4e0e Wi-Fi \u548c\u5730\u7406\u5b9a\u4f4d\u6570\u636e\u76f8\u7ed3\u5408\uff0c\u4ee5\u4ea7\u751f IPv6 \u8857\u9053\u7ea7\u5730\u7406\u5b9a\u4f4d\u3002\u867d\u7136\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u518d\u4f7f\u7528 EUI-64 IPv6 \u5730\u5740\uff0c\u4f46\u5b83\u4eec\u901a\u5e38\u5b58\u5728\u4e8e\u4f20\u7edf\u548c\u4f4e\u5229\u6da6\u7387\u7684\u5ba2\u6237\u7aef\u8bbe\u5907 (CPE)\uff0c\u4f8b\u5982\u8fde\u63a5\u5bb6\u5ead\u548c\u4f01\u4e1a\u7528\u6237\u7684\u5546\u54c1\u8def\u7531\u5668\u3002\u7814\u7a76\u4eba\u5458\u89e3\u91ca\u8bf4\uff1a\u201c\u56e0\u4e3a IPv6 CPE \u662f\u8def\u7531\u8dc3\u70b9\uff08\u4e0e IPv4 NAT \u76f8\u5bf9\uff09\uff0c\u5982\u679c\u4ed6\u4eec\u4f7f\u7528 EUI-64\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 traceroute \u53d1\u73b0\u4ed6\u4eec\u7684 MAC \u5730\u5740\u3002\u201d\n\u4efb\u4f55\u4f7f\u7528 ping6 \u6216 traceroute6 \u7684\u4eba\u90fd\u53ef\u4ee5\u627e\u5230\u5177\u6709\u201c\u8857\u9053\u7ea7\u201d\u7cbe\u5ea6\u7684\u8def\u7531\u5668\u4f4d\u7f6e\u2014\u2014\u4e5f\u5c31\u662f\u7cbe\u786e\u5b9a\u4f4d\u5230\u5bb6\u3002 CMAND \u7814\u7a76\u5458 Erik Rye \u8868\u793a\uff0c\u4ed6\u4eec\u5bf9\u6536\u5230\u7684\u6240\u6709\u6570\u636e\u8fdb\u884c\u52a0\u5bc6\uff0c\u5e76\u4ec5\u53d1\u5e03\u6c47\u603b\u6570\u636e\u5206\u6790\u800c\u4e0d\u662f\u57fa\u7840\u6570\u636e\u672c\u8eab\u3002\u4ed6\u8865\u5145\u8bf4\uff1a\u201c\u503c\u5f97\u8bb0\u4f4f\u7684\u662f\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u7684\u76ee\u6807\u6700\u7ec8\u662f\u901a\u8fc7\u7a81\u51fa\u663e\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u6765\u6539\u5584\u9690\u79c1\u4fdd\u62a4\u3002\u201d\u9ed1\u5ba2 IoT \u8bbe\u5907\u662f Black Hat \u548c DEF CON \u591a\u6b21\u8ba8\u8bba\u7684\u4e3b\u9898\u3002\u4f8b\u5982\uff0c\u7814\u7a76\u5458 Kya Supa \u53d1\u73b0\u4e86\u4e00\u79cd\u7834\u89e3\u80f6\u56ca\u65c5\u9986\u623f\u95f4\u63a7\u5236\u7684\u65b9\u6cd5\u3002\u4ed6\u5f00\u53d1\u7684\u6f0f\u6d1e\u5229\u7528\u2014\u2014\u90e8\u5206\u4f9d\u8d56\u4e8e\u5f31 WEP \u65e0\u7ebf\u52a0\u5bc6\u3001\u7f51\u7edc\u5957\u4ef6\u7684\u9ed8\u8ba4\u51ed\u636e\u548c\u4f4e\u71b5\u5bc6\u7801\u2014\u2014\u4f7f\u4ed6\u80fd\u591f\u63a7\u5236\u9152\u5e97\u5176\u4ed6\u80f6\u56ca\u5355\u5143\u7684\u706f\u5149\u3001\u98ce\u6247\u4ee5\u53ca\u5347\u9ad8\u6216\u964d\u4f4e\u6c99\u53d1/\u5e8a.\u901a\u8fc7\u5bf9\u53d8\u5316\u8fdb\u884c\u7f16\u7a0b\uff0cSupa \u80fd\u591f\u6bcf\u4e24\u4e2a\u5c0f\u65f6\u5173\u95ed\u548c\u6253\u5f00\u706f\uff0c\u5e76\u5c06\u5e8a\u53d8\u6210\u4e00\u5f20\u6c99\u53d1\uff0c\u5728\u4e00\u4e2a\u80f6\u56ca\u91cc\uff0c\u53e6\u4e00\u4e2a\uff08\u4e0d\u4f53\u8d34\u7684\uff09\u5ba2\u4eba\uff08\u636e\u62a5\u9053\uff0c\u4ed6\u575a\u6301\u5728\u665a\u4e0a\u5927\u58f0\u6253\u7535\u8bdd\u800c\u5ffd\u7565\u4e86\u4ed6\u7684\u7535\u8bdd\uff09\u8981\u6c42\u66f4\u52a0\u4f53\u8d34\uff09\u3002\u5728 DEF CON \u4e0a\uff0c\u673a\u5668\u4eba\u5438\u5c18\u5668\u7531\u4e39\u5c3c\u65af\u00b7\u5409\u65af (Dennis Giese) \u624e\u6839\u3002 Giese \u7684\u9ed1\u5ba2\u4f7f\u6240\u6709\u8005\u80fd\u591f\u901a\u8fc7\u5f00\u6e90\u5bb6\u5ead\u81ea\u52a8\u5316\u5b89\u5168\u5730\u4f7f\u7528\u4ed6\u4eec\u7684\u8bbe\u5907\uff0c\u907f\u514d\u81ea\u52a8\u5c06\u6570\u636e\u4e0a\u4f20\u5230\u4e91\u7684\u5185\u7f6e\u529f\u80fd\u3002\u9ed1\u5ba2 Joseph Gabay \u5c55\u793a\u4e86\u4ed6\u5bf9\u9ed1\u5ba2\u8d2d\u7269\u8f66\u9632\u76d7\u5668\u7684\u7814\u7a76\uff0c\u4ed6\u8fdb\u5165\u8fd9\u4e2a\u8bdd\u9898\u57fa\u672c\u4e0a\u662f\u51fa\u4e8e\u5bf9\u6280\u672f\u6311\u6218\u548c\u9501\u5320\u7684\u70ed\u7231\u3002\n\u56de\u5f52\u4e3b\u6d41\uff0c\u4e0e\u66f4\u591a\u5728\u5bb6\u5de5\u4f5c\u7684\u4eba\u7279\u522b\u76f8\u5173\uff0c\u9ed1\u5ba2 Matthew Bryant \u5728 DEF CON \u4e0a\u53d1\u8868\u4e86\u5173\u4e8e\u4f7f\u7528 Apps Script \u6765\u5229\u7528 G Suite\uff08\u53c8\u540d Google Workspace\uff09\u7684\u6f14\u8bb2\u3002\u53ef\u4ee5\u5f00\u53d1 Apps \u811a\u672c\u8d1f\u8f7d\u4ee5\u7ed5\u8fc7\u4fdd\u62a4\u6027\u63a7\u5236\u63aa\u65bd\uff0c\u4f8b\u5982 U2F \u548c OAuth \u5e94\u7528\u7a0b\u5e8f\u8bb8\u53ef\u540d\u5355\u3002\u5e94\u7528\u811a\u672c\u5728 Google \u7684\u57fa\u7840\u67b6\u6784\u4e0a\u8fd0\u884c\uff0c\u56e0\u6b64\u5373\u4f7f\u76ee\u6807\u66f4\u6539\u4e86\u4ed6\u4eec\u7684\u673a\u5668\uff0c\u4e5f\u63d0\u4f9b\u4e86\u4e00\u79cd\u540e\u95e8\u53d7\u635f\u5e10\u6237\u7684\u65b9\u6cd5\u3002\u4f60\u559c\u6b22\u8bfb\u4e66\u5417\uff1f\u6211\u77e5\u9053\u5982\u4f55\u7528\u7535\u5b50\u4e66\u63a5\u7ba1\u60a8\u7684 Kindle \u5728 DEF CON \u4e0a\uff0cCheckpoint \u7814\u7a76\u5458 Slava Makkaveev \u5c55\u793a\u4e86\u4ed6\u5982\u4f55\u901a\u8fc7\u6076\u610f\u7535\u5b50\u4e66\u63a5\u7ba1\u53d7\u5bb3\u8005\u7684 Kindle \u7535\u5b50\u9605\u8bfb\u5668\u3002\u4e9a\u9a6c\u900a\u751f\u4ea7\u7684 Kindle \u4f7f\u7528\u6237\u80fd\u591f\u5c06\u4e66\u7c4d\u548c\u5176\u4ed6\u6587\u6863\u4e0b\u8f7d\u5230\u4fbf\u643a\u5f0f\u8bbe\u5907\u4e0a\u3002 Makkaveev \u5c55\u793a\u4e86\u4ed6\u5982\u4f55\u80fd\u591f\u521b\u5efa\u6076\u610f\u4e66\u7c4d\uff0c\u8be5\u4e66\u7c4d\u53ef\u4ee5\u5728\u4efb\u4f55\u865a\u62df\u56fe\u4e66\u9986\uff08\u5305\u62ec\u5b98\u65b9 Kindle \u5546\u5e97\uff09\u4e2d\u53d1\u5e03\u548c\u514d\u8d39\u8bbf\u95ee\uff0c\u6216\u901a\u8fc7\u4e9a\u9a6c\u900a\u670d\u52a1\u76f4\u63a5\u53d1\u9001\u5230\u6700\u7ec8\u7528\u6237\u8bbe\u5907\u3002\u5f53 Kindle \u7528\u6237\u5728\u4ed6\u4eec\u7684\u8bbe\u5907\u4e0a\u6253\u5f00\u7535\u5b50\u4e66\u65f6\uff0c\u4f1a\u6267\u884c\u5177\u6709 root \u6743\u9650\u7684\u9690\u85cf\u4ee3\u7801\u3002\n\u201c\u4ece\u8fd9\u4e00\u523b\u8d77\uff0c\u4f60[\u5df2\u7ecf]\u5931\u53bb\u4e86\u4f60\u7684\u7535\u5b50\u9605\u8bfb\u5668\u3001\u8d26\u6237\u7b49\u7b49\uff0c\u201d\u7814\u7a76\u4eba\u5458\u8bc4\u8bba\u9053\u3002\u4e00\u65e6\u653b\u51fb\u8005\u83b7\u5f97\u6b64\u8bbf\u95ee\u6743\u9650\uff0c\u4ed6\u4eec\u5c31\u80fd\u591f\u6267\u884c\u8fdb\u4e00\u6b65\u7684\u653b\u51fb\uff0c\u5305\u62ec\u5c06\u8bbe\u5907\u53d8\u6210\u673a\u5668\u4eba\u4ee5\u653b\u51fb\u5176\u4ed6\u672c\u5730\u7f51\u7edc\u3002\u4e0e\u4ee5\u5f80\u4e00\u6837\uff0cBlack Hat \u7684\u963f\u68ee\u7eb3\u8d5b\u9053\u5145\u6ee1\u4e86\u6570\u5341\u79cd\u65b0\u7684\u9ed1\u5ba2\u5de5\u5177\u548c\u6846\u67b6\u3002\u4ee5\u4e0b\u662f\u4eca\u5e74\u7684\u4e00\u4e9b\u4eae\u70b9\uff1a WARCannon \u2013 \u5f00\u6e90\u5de5\u5177\u4f7f\u5728\u4e92\u8054\u7f51\u4e0a\u641c\u7d22\u7f51\u7edc\u6f0f\u6d1e\u53d8\u5f97\u66f4\u7b80\u5355\u3001\u66f4\u5feb\u3001\u66f4\u4fbf\u5b9c\u3002\u9605\u8bfb\u66f4\u591a\u3002 Enfilade \u2013 \u5728 MongoDB \u5b9e\u4f8b\u4e2d\u6807\u8bb0\u52d2\u7d22\u8f6f\u4ef6\u548c\u673a\u5668\u4eba\u611f\u67d3\u7684\u5f00\u6e90\u5de5\u5177\u3002\u9605\u8bfb\u66f4\u591a\u3002\u67e5\u770b\u6211\u4eec\u7684\u5e38\u89c4\u6700\u65b0 Web \u9ed1\u5ba2\u5de5\u5177\u4e13\u680f\uff0c\u4e86\u89e3\u66f4\u591a\u8fdb\u653b\u548c\u9632\u5fa1\u5de5\u5177\u3002", "note_en": "Hacker Summer Camp 2021 adopted a hybrid format this year, as the restrictions imposed by the ongoing coronavirus epidemic meant that the majority of participants to  Black Hat and DEF CON tuned in online rather than turning up in Las Vegas.\n    Security  researchers made up for the lack of audience interaction by showing that \u2013 like the athletes competing at this month\u2019s Olympics and Paralympics \u2013 they could go faster, higher, and stronger together.\n     At Black Hat, researchers from the Fraunhofer Institute for Secure Information Technology showed how the  security controls introduced with Let\u2019s Encrypt\u2019s multi-perspective validation feature might be abused.\n Circumventing these controls, which were introduced in February 2020 in response to earlier attacks, makes it possible for attackers to get digital certificates for web domains they do now own, offering a springboard for  phishing attacks or other scams.\n By introducing packet loss or latency to connections to some of the nameservers, an attacker could force the system to rely on a nameserver of their choice \u2013 downgrading the security offered by multiperspective validation.\n The work shows that domain validation, though it enjoys advantages because it is low cost and lends itself to automation, is not yet secure and needs to be refined in order to become more effective as a barrier to fraud.\n  At Black Hat, security researcher Mathy Vanhoef shared his impressive work on  FragAttacks fragmentation and aggregation attacks) and \u2013 with the help of Tom Van Goethem \u2013 timing attacks.\n For the former, he described how implementation flaws and design vulnerabilities in WiFi\u2019s frame aggregation and fragmentation features affect all protected WiFi networks, and even the WEP protocol dating back to 1997.\n  The gradual adoption of \u2018 operating channel validation\u2019 (PDF) and \u2018 beacon protection\u2019 (PDF) will eventually offer a degree of protection from FragAttacks, he said.\n In a separate presentation last week, Vanhoef and Van Goethem elevated timing attacks to fresh heights, after surmounting a challenge that previously complicated remote  assaults.\n Timing attacks, which infer secrets by measuring the execution time of cryptographic algorithms, have led to vulnerabilities surfacing in applications and cryptosystems that lack constant-time execution.\n While these side-channel exploits are possible over modern internet connections, \u201cnetwork jitter\u201d has forced adversaries to collect thousands or millions of measurements to infer just a single bit of information.\n However, \u2018timeless timing attacks\u2019 are unaffected by network jitter because \u201ctwo requests arrive in the same packets at the exact same time at the server\u201d, explained Van Goethem.\n As a result, timing differences as small as 100ns can be detected over any internet connection \u2013 an accuracy comparable to attacks on local systems.\n Attacks can be launched against protocols that enable multiplexing or by leveraging a transport protocol that enables encapsulation, with the researchers successfully mounting attacks against HTTP/2 webservers and EAP-PWD, a popular Wi-Fi  authentication protocol.\n     PortSwigger security researcher James Kettle was back with a fresh perspective into how request smuggling can impact HTTP/2 infrastructure.\n The researcher demonstrated how attacks levied against HTTP/2 systems enabled him to steal secrets from websites running Amazon\u2019s Application Load Balancer, poison every page on Bitbucket, and forced Atlassian to sign every single one of its users out of Jira.\n \u201cIf you take your frontend server, turn on HTTP/2 support and do downgrading, congratulations: you have just doubled the number of ways that you may be vulnerable to request smuggling,\u201d Kettle warns.\n Check out our  earlier coverage for full details on this latest web security research, which was presented at both Black Hat USA and DEF CON this year.\n  Hacking whizz Orange Tsai  lifted the lid on what he described as potentially \u201cthe most severe vulnerability in the history of Microsoft Exchange\u201d.\n Fresh from his recent  Pwn2Own and Pwnie Awards triumphs, the researcher recounted his discovery of a pre-authenticated remote code execution (RCE) flaw that was involved in the compromise of hundreds of thousands of enterprise messaging servers worldwide.\n But this was more than just another, albeit serious security flaw; it created a \u201cnew paradigm for  vulnerability research\u201d, no less.\n Tsai, principal security researcher at Devcore, discovered server-side, client-side, and cryptographic bugs on this \u201cnew attack surface\u201d and corralled them into pre-auth  RCE chains known as ProxyLogon and ProxyShell, along with ProxyOracle, a plaintext password recovery combo.\n The implications are serious: Microsoft Exchange Server is widely used by enterprise  organizations and government agencies and Tsai found 400,000 internet-facing instances.\n The researcher said his investigations, which centered on a major architectural change made to Client Access services (CAS) in 2013, was so fruitful because he surveyed the target application from a high-level architectural perspective rather than simply hunting for particular vulnerability types.\n Despite Microsoft\u2019s best efforts to bolster security, Microsoft Exchange remains \u201ca buried treasure with more bugs\u201d lying in wait, Tsai concluded.\n  A potential future of  AI-assisted social engineering was mapped out during a forward-looking talk at DEF CON.\n Artificial Intelligence as a Service (AIaaS) products such as OpenAI&#39;s GPT-3 API have made advanced technologies more easily available at a modest cost.\n Three Singapore-based researchers were able to repurpose personality analysis AIaaS products to generate convincing phishing emails that were based on a target\u2019s  social media profile. The task played to the strengths of natural language generators bundled with AIaaS products.\n For mass targeted phishing emails, human-created content attracted more interaction. But in targeted spear phishing exercises, carried out as part of authorised  pen testing exercise, responses to AI-generated phishing emails were higher.\n  The researchers outline techniques that might be applied to detecting synthetic texts as well as governance principles AIaaS providers ought to consider adopting.\n   During Black Hat, researchers from the Center for Measurement and Analysis of Network Data (CMAND) demonstrated IPVSee You, a privacy disrupting attack that can discover and precisely locate millions of home routers in use across the world.\n It is described as a \u201clarge-scale data fusion attack\u201d that combines EUI-64 IPv6 addresses with Wi-Fi and geolocation  data in order to produce IPv6 street-level geolocations.\n While EUI-64 IPv6 addresses are no longer used by most operating systems, they are commonly found in legacy and low-profit-margin customer premises equipment (CPE), for example commodity routers connecting home and business subscribers.\n \u201cBecause IPv6 CPE are routed hops (as opposed to IPv4 NATs), we can discover their MAC address via traceroute if they use EUI-64,\u201d the researchers explained.\n Anyone using a ping6 or traceroute6 can find a router\u2019s location with \u201cstreet-level\u201d precision \u2013 aka pinpointing the exact home.\n Erik Rye, researcher at CMAND, said that they  encrypt all of the data that they receive, and publish only the aggregate data analysis rather than the underlying data itself.\n He added: \u201cIt\u2019s worth remembering that our goal here is ultimately to improve privacy protections by highlighting this location.\u201d\n  Hacking  IoT devices was the theme of several talks across Black Hat and DEF CON. For example, researcher Kya Supa discovered a way to hack the room controls in a capsule hotel.\n The exploit he developed \u2013 which relied in part on weak WEP wireless encryption, default credentials on networking kit, and low entropy passwords \u2013 allowed him to control the lights, fan, and raise or lower the sofa/bed in other capsule units in a hotel.\n By programming the changes, Supa was able to turn off and on the lights and turn the bed into a sofa every two hours in a capsule occupied by another (inconsiderate) guest (who had reportedly insisted on talking loudly on his phone at night and ignored requests to be more considerate).\n  Over at DEF CON,  robot vacuum cleaners were rooted by Dennis Giese. Giese\u2019s hack enabled owners to use their devices safely with open source home automation, avoiding built-in features that automatically uploaded data to the cloud. Hacker Joseph Gabay presented his research on  hacking shopping cart immobilisers, a topic he got into basically out of love for a technical challenge and locksmithing.\n Returning closer to the mainstream, and of particular relevance with more people working from home, hacker Matthew Bryant offered a talk at DEF CON on using  Apps Script to exploit G Suite (AKA Google Workspace).\n Apps Script payloads can be developed to bypass protective controls such as U2F and OAuth app allowlisting. App Scripts run on  Google\u2019s infrastructure and therefore present a way to backdoor compromised accounts even if a target changes their machine.\n Do you like to read? I know how to take over your Kindle with an e-book\n  Over at DEF CON, Checkpoint researcher Slava Makkaveev demonstrated how he was able to takeover a victim\u2019s Kindle e-reader via a malicious e-book.\n Kindle, which is made by  Amazon, enables users to download books and other documents onto a portable device.\n Makkaveev showed how he was able to create a malicious book which could be published and made available for free access in any virtual library, including the official Kindle Store, or sent directly to the end-user device via Amazon services.\n When a Kindle user opens the e-book on their device, hidden code is executed that has root rights.\n \u201cFrom this moment on, you [have] lost your e-reader, account, and more,\u201d the researcher commented.\n Once an attacker has this access, they are able to execute further attacks including by turning the device into a bot to attack other local  networks.\n    As ever, the  Arsenal track at Black Hat was replete with dozens of new  hacking tools and frameworks. Here are some highlights from this year:\n WARCannon \u2013 Open source tool makes grepping the internet for web vulnerabilities simpler, faster, and cheaper.  Read more.\n Enfilade \u2013 Open source tool that flags ransomware and bot infections in MongoDB instances.  Read more.\n Check out our regular  Latest Web Hacking Tools column for more offensive and defensive tooling.", "posttime": "2021-08-10 06:43:47", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u5ba2,black,hacks,\u653b\u51fb", "title": "\u6765\u81ea Black Hat \u548c DEF Con 2021 \u7684\u9876\u7ea7\u9ed1\u5ba2", "title_en": "Top Hacks from Black Hat and DEF Con 2021", "transed": 1, "url": "https://portswigger.net/daily-swig/top-hacks-from-black-hat-and-def-con-2021", "via": "", "real_tags": ["\u9ed1\u5ba2", "black", "hacks", "\u653b\u51fb"]}, {"category": "", "categoryclass": "", "imagename": "0f4f52b09510bc7637b3926bd9ea25aa.jpg", "infoid": 1072430, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u540d\u5b57\u5728\u771f\u83cc\u9886\u57df\u4e4b\u5916\u5e7f\u4e3a\u4eba\u77e5\u7684\u771f\u83cc\u5b66\u5bb6\u540d\u5355\u5f88\u77ed\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u4fdd\u7f57\u00b7\u65af\u5854\u6885\u8328 (Paul Stamets)\u3002 Stamets \u5728\u957f\u6ee1\u82d4\u85d3\u3001\u53d1\u9709\u3001\u7cca\u72b6\u7684\u592a\u5e73\u6d0b\u897f\u5317\u5730\u533a\u63a5\u53d7\u6559\u80b2\u5e76\u957f\u671f\u5c45\u4f4f\u5728\u8be5\u5730\u533a\uff0c\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\u505a\u51fa\u4e86\u65e0\u6570\u8d21\u732e\u2014\u2014\u4e5f\u8bb8\u6700\u597d\u7684\u603b\u7ed3\u53ef\u4ee5\u5728\u4ed6 2005 \u5e74\u51fa\u7248\u7684\u300a\u83cc\u4e1d\u4f53\u8fd0\u884c\uff1a\u8611\u83c7\u5982\u4f55\u5e2e\u52a9\u300b\u4e00\u4e66\u4e2d\u627e\u5230\u62ef\u6551\u4e16\u754c\u3002\u4f46\u73b0\u5728\u4ed6\u6b63\u5728\u5bfb\u627e\u5730\u7403\u4ee5\u5916\u7684\u5730\u65b9\uff0c\u4ee5\u53d1\u73b0\u8611\u83c7\u53ef\u4ee5\u5e2e\u52a9\u63a2\u7d22\u592a\u7a7a\u7684\u65b0\u65b9\u6cd5\u3002\u5728\u4e0e NASA \u8054\u5408\u53d1\u8d77\u7684\u4e00\u9879\u65b0\u7684\u201c\u5929\u4f53\u771f\u83cc\u5b66\u201d\u9879\u76ee\u4e2d\uff0cStamets \u548c\u5404\u79cd\u7814\u7a76\u56e2\u961f\u6b63\u5728\u7814\u7a76\u5982\u4f55\u5229\u7528\u771f\u83cc\u6765\u5efa\u7acb\u5916\u661f\u6816\u606f\u5730\uff0c\u751a\u81f3\u6709\u671d\u4e00\u65e5\u751a\u81f3\u53ef\u80fd\u662f\u5730\u7403\u5316\u884c\u661f\u3002\u8fd9\u4e0d\u662f Stamets \u7684\u804c\u4e1a\u751f\u6daf\u7b2c\u4e00\u6b21\u4e0e\u63a8\u6d4b\u6027\u7a7a\u95f4\u79d1\u5b66\u76f8\u4ea4\u3002\u4ed6\u6700\u8fd1\u8fd8\u83b7\u5f97\u4e86\u4e00\u9879\u8363\u8a89\uff0c\u8bb8\u591a\u7814\u7a76\u4eba\u5458\u8ba4\u4e3a\u8be5\u8363\u8a89\u4ec5\u7565\u4f4e\u4e8e\u8bfa\u8d1d\u5c14\u5956\u7684\u795e\u5723\uff1a\u4ee5\u4ed6\u7684\u540d\u5b57\u547d\u540d\u661f\u9645\u8ff7\u822a\u4e2d\u7684\u89d2\u8272\u3002 \u300a\u79d1\u5b66\u7f8e\u56fd\u4eba\u300b\u4e0e Stamets \u8c08\u8bba\u4e86\u5bf9\u65b0\u5174\u7684\u5929\u4f53\u5b66\u9886\u57df\u7684\u8d85\u51e1\u5f71\u54cd\u3002\u9996\u5148\uff0c\u5148\u6709\u9e21\u8fd8\u662f\u5148\u6709\u86cb\u7684\u95ee\u9898\uff1a\u300a\u661f\u9645\u8ff7\u822a\uff1a\u53d1\u73b0\u300b\u4ee5\u60a8\u7684\u540d\u5b57\u547d\u540d\u89d2\u8272\u662f\u56e0\u4e3a\u60a8\u5f00\u59cb\u63a2\u7d22\u5929\u4f53\u5b66\uff0c\u8fd8\u662f\u5929\u4f53\u5b66\u7684\u60f3\u6cd5\u53d7\u5230\u300a\u661f\u9645\u8ff7\u822a\u300b\u7684\u542f\u53d1\uff1f CBS \u627e\u5230\u4e86\u6211\uff0c\u8bf4\u661f\u9645\u8ff7\u822a\u7684\u7f16\u5267\u60f3\u548c\u6211\u8bf4\u8bdd\uff1a\u201c\u6211\u4eec\u5728\u5730\u7262\u91cc\uff0c\u6211\u4eec\u5927\u7ea6\u6709\u5341\u51e0\u4e2a\u4eba\uff0c\u6211\u4eec\u7684\u4efb\u52a1\u662f\u661f\u9645\u8ff7\u822a\uff1a\u53d1\u73b0\uff0c\u6211\u4eec\u6b63\u5728\u6253\u7816\u5757\u5899\uff0c\u6211\u4eec\u770b\u5230\u4e86\u4f60\u7684 TED \u6f14\u8bb2\u3002\u201d\u6211\u66fe\u63d0\u5230\u8fc7\u7528\u771f\u83cc\u5bf9\u5176\u4ed6\u884c\u661f\u8fdb\u884c\u5730\u7403\u6539\u9020\u3002\u4f60\u77e5\u9053\uff0c\u661f\u9645\u8ff7\u822a\u4e0e\u5176\u4ed6\u79d1\u5e7b\u5c0f\u8bf4\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u771f\u6b63\u5f00\u521b\u4e86\u5305\u5bb9\u6027\u7684\u91cd\u8981\u6027\uff0c\u8ba4\u8bc6\u5230\u6211\u4eec\u793e\u4f1a\u6210\u5458\u7684\u591a\u6837\u6027\u7ed9\u4e86\u6211\u4eec\u529b\u91cf\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5c31\u662f\u6211\u4f5c\u4e3a\u4e00\u540d\u771f\u83cc\u5b66\u5bb6\u6240\u5b66\u5230\u7684\uff1a\u6211\u4eec\u751f\u6001\u7cfb\u7edf\u7684\u751f\u7269\u591a\u6837\u6027\u8d4b\u4e88\u4e86\u6211\u4eec\u751f\u6001\u7cfb\u7edf\u7684\u5f39\u6027\u3002\u6700\u7ec8\uff0c\u591a\u6837\u6027\u83b7\u80dc\u3002\u6240\u4ee5\u6211\u544a\u8bc9\u4ed6\u4eec\u5728\u5176\u4ed6\u661f\u7403\u4e0a\u7528\u771f\u83cc\u8fdb\u884c\u5730\u7403\u6539\u9020\u662f\u975e\u5e38\u5408\u7406\u7684\u3002\u771f\u83cc\u662f\u6700\u65e9\u6765\u5230\u9646\u5730\u3001\u5480\u56bc\u5ca9\u77f3\u7684\u751f\u7269\uff0c\u771f\u83cc\u5728\u5927\u7ea6 6.5 \u4ebf\u5e74\u524d\u8bde\u751f\u4e86\u52a8\u7269\u3002\u6211\u4eec\u662f\u8fd9\u4e9b\u771f\u83cc\u7f51\u7edc\u7684\u540e\u4ee3\u7684\u540e\u4ee3\u3002\n\u6211\u8bf4\uff0c\u201c\u4f60\u53ef\u4ee5\u514d\u8d39\u62e5\u6709\u6240\u6709\u8fd9\u4e9b\u6982\u5ff5\u3002\u6211\u662f\u661f\u9645\u8ff7\u822a\u7684\u7c89\u4e1d\uff1b\u6211\u4e0d\u60f3\u8981\u4efb\u4f55\u4e1c\u897f\u3002\u201d\u6211\u8bf4\uff0c\u201c\u4f46\u662f\uff0c\u4f60\u77e5\u9053\uff0c\u6211\u4e00\u76f4\u60f3\u6210\u4e3a\u7b2c\u4e00\u4e2a\u5929\u4f53\u5b66\u5bb6\u3002\u201d\u6700\u540e\uff0c\u4ed6\u4eec\u8bf4\uff1a\u201c\u5929\u6587\u5b66\u5bb6\uff0c\u6211\u4eec\u559c\u6b22\u90a3\u4e2a\uff01\u591a\u4e48\u68d2\u7684\u4e00\u53e5\u8bdd\uff1b\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u3002\u201d\u5929\u4f53\u751f\u7269\u5b66\u663e\u7136\u662f\u5929\u4f53\u751f\u7269\u5b66\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u56e0\u6b64\u5929\u4f53\u751f\u7269\u5b66\u5c06\u662f\u5bf9\u5916\u661f\u751f\u7269\u7684\u7814\u7a76\u3002\u771f\u7684\uff0c\u4f60\u5728\u8c08\u8bba\u5b87\u5b99\u7684\u751f\u7269\u5b66\u2014\u2014\u5728\u5b87\u5b99\u7684\u751f\u7269\u5b66\u4e2d\u662f\u6211\u4eec\u7684\u771f\u83cc\u3002\u56e0\u6b64\uff0c\u5929\u4f53\u771f\u83cc\u5b66\u5c06\u662f\u5bf9\u6574\u4e2a\u5b87\u5b99\u771f\u83cc\u751f\u7269\u5b66\u7684\u7814\u7a76\u3002\u6211\u8ba4\u4e3a\u6211\u4eec\u603b\u6709\u4e00\u5929\u4f1a\u5728\u5176\u4ed6\u661f\u7403\u4e0a\u53d1\u73b0\u771f\u83cc\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\u5730\u7403\u7684\u771f\u83cc\u5982\u4f55\u5e2e\u52a9\u4eba\u7c7b\u6816\u606f\u5730\u751a\u81f3\u5176\u4ed6\u661f\u7403\u4e0a\u6574\u4e2a\u751f\u6001\u7cfb\u7edf\u7684\u53d1\u5c55\uff1f [\u652f\u6301\u5730\u7403\u5316\u7684\u690d\u7269]\u9700\u8981\u77ff\u7269\u8d28\uff0c\u800c\u5c06\u771f\u83cc\u4e0e\u4eba\u7c7b\u7684\u690d\u7269\u548c\u788e\u7247\u914d\u5bf9[\u5bfc\u81f4\u5b83\u4eec]\u5206\u89e3\u6210\u4e00\u79cd\u5f62\u5f0f\uff0c\u7136\u540e\u521b\u9020\u51fa\u80a5\u6c83\u7684\u571f\u58e4\uff0c\u53ef\u4ee5\u5e2e\u52a9\u751f\u4ea7\u5b87\u822a\u5458\u6240\u9700\u7684\u98df\u7269\u3002\u7528\u4e00\u9897\u79cd\u5b50\u79cd\u690d\u98df\u7269\u6bd4\u5c06\u4e00\u5428\u98df\u7269\u5e26\u5230\u592a\u7a7a\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u5bf9\u5427\uff1f\u5c31\u6709\u6548\u8f7d\u8377\u800c\u8a00\uff0c\u5927\u81ea\u7136\u7684\u6548\u7387\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u3002\u81ea\u7136\u4ea7\u751f\u98df\u7269\u7684\u6709\u6548\u8f7d\u8377\u6bd4\u4f60\u7684\u706b\u7bad\u643a\u5e26\u98df\u7269\u7684\u6709\u6548\u8f7d\u8377\u8981\u597d\u5f97\u591a\u3002\u60a8\u76ee\u524d\u4e0e NASA \u7684\u7814\u7a76\u8ba1\u5212\u6709\u4e24\u4e2a\u9636\u6bb5\u3002\u7b2c\u4e00\u4e2a\u6d89\u53ca\u786e\u5b9a\u7528\u4e8e\u5206\u89e3\u5c0f\u884c\u661f\u98ce\u5316\u5c42\u7684\u6700\u4f73\u771f\u83cc\u7269\u79cd\u3002\u4f60\u76ee\u524d\u6709\u4efb\u4f55\u53ef\u80fd\u7684\u5019\u9009\u4eba\u5417\uff1f\u57fa\u672c\u4e0a\uff0c\u98ce\u5316\u5c42\u662f\u5c0f\u884c\u661f\u5c18\u57c3\u3002 [\u7814\u7a76\u56e2\u961f] \u5df2\u7ecf\u6784\u5efa\u4e86 [\u5408\u6210] \u98ce\u5316\u5c42\uff0c\u5e94\u8be5\u6a21\u4eff\u5728\u5c0f\u884c\u661f\u8868\u9762\u548c\u706b\u661f\u4e0a\u53d1\u73b0\u7684\u6210\u5206\u3002\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u6b63\u5728\u4e0e\u4ed6\u4eec\u5408\u4f5c\u3002\u6211\u7684\u6587\u5316\u56fe\u4e66\u9986\u91cc\u6709\u4e00\u5957\u5927\u7ea6 700 \u79cd\u771f\u83cc\u3002\u6211\u63d0\u51fa\u4e86\u4e00\u4e9b\u5efa\u8bae\uff0c\u6211\u5f88\u9ad8\u5174\u5730\u8bf4\u7261\u86ce\u8611\u83c7\u662f\u8fc4\u4eca\u4e3a\u6b62\u6211\u4eec\u5728\u98ce\u5316\u5c42\u4e0a\u8bd5\u9a8c\u8fc7\u7684\u6700\u597d\u7684\u8611\u83c7\u4e4b\u4e00\u3002\n\u5c31\u5728\u6700\u8fd1\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e9b\u51fa\u4e4e\u610f\u6599\u7684\u534f\u540c\u6548\u5e94\uff0c\u5f53\u6211\u4eec\u53d6\u4e00\u4e2a\u7269\u79cd\u65f6\uff0c\u7ed9\u5b83\u4e00\u4e2a\u8425\u517b\u6765\u6e90\uff0c\u6211\u4eec\u60f3\u77e5\u9053\u5b83\u4f1a\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u957f\u6210\u98ce\u5316\u5c42 [\u53ca\u5176\u83cc\u4e1d\u6839]\u3002\u5f53\u6211\u4eec\u9009\u53d6\u4e00\u79cd\u771f\u83cc\u65f6\uff0c\u6211\u4eec\u89c2\u5bdf\u4e86\u5b83\u5728\u98ce\u5316\u5c42\u4e2d\u7684\u8986\u76d6\u8303\u56f4\uff0c\u7136\u540e\u6211\u4eec\u5c06\u5b83\u4e0e\u5176\u4ed6\u79cd\u7c7b\u7684\u771f\u83cc\u7ed3\u5408\u8d77\u6765\u2014\u2014\u6bcf\u79cd\u771f\u83cc\u90fd\u6ca1\u6709\u90a3\u4e48\u5927\u7684\u8986\u76d6\u8303\u56f4\u3002\u5f53\u6211\u4eec\u540c\u65f6\u62e5\u6709\u591a\u79cd\u771f\u83cc\u7269\u79cd\u65f6\uff0c\u5916\u5c55\u8fdc\u6bd4\u9884\u671f\u7684\u8981\u5927\u5f97\u591a\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u5b83\u53ea\u662f\u8bc1\u660e\u4e86\u5173\u4e8e\u751f\u7269\u591a\u6837\u6027\u7684\u6574\u4e2a\u6982\u5ff5\u3002\u63d0\u6848\u7684\u7b2c\u4e8c\u9636\u6bb5\u6d89\u53ca\u5728\u9009\u62e9\u6700\u4f73\u7c7b\u578b\u540e\u786e\u5b9a\u4f7f\u7528\u771f\u83cc\u7684\u6700\u6709\u6548\u65b9\u6cd5\u3002\u90a3\u53ef\u80fd\u662f\u4ec0\u4e48\u6837\u5b50\uff1f\u5b87\u5b99\u5bcc\u542b\u78b3\u6c22\u5316\u5408\u7269\u3002\u7261\u86ce\u8611\u83c7\u771f\u6b63\u64c5\u957f\u7684\u662f\u5206\u89e3\u78b3\u6c22\u5316\u5408\u7269\u5e76\u5c06\u5b83\u4eec\u5206\u89e3\u5e76\u5c06\u5b83\u4eec\u91cd\u7ec4\u4e3a\u771f\u83cc\u78b3\u6c34\u5316\u5408\u7269\uff0c\u8f6c\u5316\u4e3a\u7cd6\u3002\u5f53\u7136\uff0c\u7cd6\u662f\u6211\u6240\u77e5\u9053\u7684\u5730\u7403\u4e0a\u51e0\u4e4e\u6240\u6709\u751f\u547d\u5f62\u5f0f\u7684\u7edd\u5bf9\u5fc5\u9700\u8425\u517b\u7d20\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u78b3\u6c22\u5316\u5408\u7269\u4f5c\u4e3a\u7261\u86ce\u8611\u83c7\u539f\u6599\u7684\u60f3\u6cd5\u5f88\u6709\u610f\u4e49\u3002\u73b0\u5728\uff0c\u60a8\u6709\u8fd9\u4e9b\u5f00\u59cb/\u505c\u6b62\u3002\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u5fc5\u9700\u8425\u517b\u7d20\u7684\u8f93\u5165\uff0c\u60a8\u53ea\u80fd\u8d70\u8fd9\u4e48\u8fdc\u3002\u56e0\u6b64\uff0c\u771f\u83cc\u4e0d\u80fd\u5355\u72ec\u4f7f\u7528\u78b3\u6c22\u5316\u5408\u7269\u2014\u2014\u5b83\u4eec\u9700\u8981\u589e\u5f3a\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u5fc5\u987b\u8865\u5145\u5b83\u4eec\u7684\u5730\u65b9\u3002\u4f46\u662f\u4e00\u65e6\u4f60\u5f00\u59cb\u4ea7\u751f\u8fd9\u79cd\u53cd\u5e94\uff0c\u5b83\u5c31\u4f1a\u53d8\u6210\u50ac\u5316\u4f5c\u7528\u2014\u2014\u4e5f\u5c31\u662f\u8bf4\uff0c\u81ea\u6211\u7ef4\u6301\u3002\u60a8\u4e3a\u8fd9\u79cd\u50ac\u5316\u53cd\u5e94\u63d0\u4f9b\u7684\u98df\u7269\u8d8a\u591a\uff0c\u60a8\u62e5\u6709\u7684\u751f\u7269\u591a\u6837\u6027\u5c31\u8d8a\u591a\u3002\u540c\u6837\uff0c\u60a8\u6b63\u5728\u8ba9\u5176\u4ed6\u751f\u7269\u4f53\u751f\u957f\u548c\u6b7b\u4ea1\u3002\u5b83\u4eec\u6210\u4e3a\u4e00\u79cd\u8d44\u6e90\uff0c\u53ef\u4ee5\u63d0\u4f9b\u7ef4\u751f\u7d20\u3001\u5176\u4ed6\u77ff\u7269\u8d28\uff0c\u6216\u8bb8\u8fd8\u6709\u5176\u4ed6\u53ef\u5206\u89e3\u7684\u6709\u673a\u5316\u5408\u7269\uff0c\u5982\u7ea4\u7ef4\u7d20\u6216\u6728\u8d28\u7d20\uff0c\u5b83\u4eec\u53ef\u4ee5\u63a8\u52a8\u8fd9\u4e9b\u771f\u83cc\u957f\u5f97\u66f4\u5927\uff0c\u7136\u540e\u652f\u6301\u66f4\u591a\u690d\u7269\u4ea7\u751f\u66f4\u591a\u7ea4\u7ef4\u7d20\u3002\u7136\u540e\u5b83\u4eec\u6b7b\u4e86\uff0c\u5b83\u4eec\u5206\u89e3\u4e86\uff0c\u8fd9\u4e9b\u83cc\u4e1d\u4f53\u2014\u2014\u6d45\u7684\uff0c\u901a\u5e38\u662f\u5706\u5f62\u7684\u83cc\u4e1d\u83cc\u843d\u2014\u2014\u7136\u540e\u5f00\u59cb\u8d8a\u6765\u8d8a\u591a\u5730\u751f\u957f\u3002\u56e0\u6b64\uff0c\u60a8\u6b63\u5728\u521b\u5efa\u4e00\u4e2a\u53ef\u80fd\u53ea\u662f\u4e00\u4e2a\u6591\u70b9\u7684\u5fae\u578b\u7eff\u6d32\u73af\u5883\u3002\u7136\u540e\u8fd9\u4e9b\u4e8b\u60c5\u5f00\u59cb\u8be6\u7ec6\u8bf4\u660e\u3002\u968f\u7740\u4ed6\u4eec\u7684\u793e\u533a\u53d8\u5f97\u66f4\u52a0\u591a\u6837\u5316\u548c\u590d\u6742\uff0c\u8fd9\u4e9b\u751f\u6d3b\u7684\u955c\u5934\u5f00\u59cb\u53d8\u6210\u66f4\u5927\u7684\u7eff\u6d32\u3002\u800c\u5f53\u7eff\u6d32\u73af\u5883\u8db3\u591f\u5927\u65f6\uff0c\u5c31\u53ef\u4ee5\u517b\u6d3b\u4eba\u7c7b\u3002\u9664\u4e86\u4ea7\u751f\u5065\u5eb7\u7684\u571f\u58e4\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u56e2\u961f\u6b63\u5728\u7814\u7a76\u5982\u4f55\u4f7f\u7528\u771f\u83cc\u5728\u5176\u4ed6\u661f\u7403\u4e0a\u79cd\u690d\u7ed3\u6784\u3002\u4f60\u80fd\u544a\u8bc9\u6211\u66f4\u591a\u5173\u4e8e\u8fd9\u79cd\u6240\u8c13\u7684 mycotecture \u662f\u5982\u4f55\u5de5\u4f5c\u7684\u5417\uff1f\u4f8b\u5982\uff0c\u6211\u4eec\u79cd\u690d\u4e86\u5f88\u591a\u7075\u829d\u83cc\u4e1d\u4f53\u3002\u6211\u4eec\u79cd\u690d\u7075\u829d\u5757\u3002\u6211\u4eec\u60f3\u7c89\u788e\u8fd9\u4e9b\u5757\uff0c\u4ee5\u4fbf\u5c06\u5b83\u4eec\u53d8\u6210\u571f\u58e4\u6216\u83b7\u5f97\u5176\u4ed6\u589e\u503c\u4ea7\u54c1\u3002\u6240\u4ee5\u6211\u4eec\u628a\u8fd9\u4e9b\u7075\u829d\u5757\u5f04\u5e72\u4e86\uff0c\u6211\u4eec\u8bd5\u7740\u628a\u5b83\u4eec\u538b\u788e\u3002\u4f46\u6211\u4eec\u65e0\u6cd5\u7c89\u788e\u4ed6\u4eec\u3002\u4f60\u53ef\u4ee5\u7528\u952f\u7247\u952f\u5b83\u4eec\uff0c\u4f46\u5982\u679c\u4f60\u8bd5\u56fe\u7528\u9524\u5b50\u6216\u5176\u4ed6\u4e1c\u897f\u6572\u6253\u5b83\u4eec\uff0c\u5b83\u4eec\u5c31\u4e0d\u4f1a\u7834\u788e\u3002\u6240\u4ee5\u8fd9\u4f4d\u4f1f\u5927\u7684\u5de5\u7a0b\u5e08\u4e3a\u6211\u4eec\u5efa\u9020\u4e86\u4e00\u53f0\u6db2\u538b\u4e0d\u9508\u94a2\u538b\u673a\uff0c\u6211\u5728\u8fd9\u53f0\u538b\u673a\u4e0a\u6709\u5927\u7ea6 2,000 psi [\u78c5\u6bcf\u5e73\u65b9\u82f1\u5bf8]\uff0c\u6211\u4eec\u7ed9\u4e86\u5b83\u6211\u7684\u7075\u829d\u5757\uff0c\u5b83\u5f2f\u66f2\u4e86\u4e0d\u9508\u94a2\u3002\u8bd5\u56fe\u538b\u7f29\u5b83\uff0c\u5b83\u5b9e\u9645\u4e0a\u6253\u7834\u4e86\u673a\u5668\u3002\u8fd9\u4e1c\u897f\u4f1a\u6574\u5929\u78be\u788e\u5ca9\u77f3\uff0c\u4e0d\u80fd\u78be\u788e\u83cc\u4e1d\u4f53\u3002\u5b83\u4eec\u7684\u7ed3\u6784\u975e\u5e38\u575a\u56fa\u3002\u5b83\u4eec\u8fd8\u64c5\u957f\u4fdd\u6e29\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u9694\u70ed\u6027\u80fd\u975e\u5e38\u51fa\u8272\u3002\u6b64\u5916\uff0c\u8fd9\u4e9b\u53ef\u80fd\u6210\u4e3a\u7535\u6c60\u3002\u4f60\u53ef\u4ee5\u5728\u706b\u661f\u4e0a\u7531\u83cc\u4e1d\u4f53\u5236\u6210\u7684\u7ed3\u6784\u4e0a\u5b89\u88c5\u592a\u9633\u80fd\u7535\u6c60\u677f\u3002 \uff08\u6574\u4e2a\u83cc\u4e1d\u4f53\u5927\u7ea6\u542b\u6709 85% \u7684\u78b3\uff0c\u7814\u7a76\u8868\u660e\u591a\u5b54\u78b3\u53ef\u4ee5\u662f\u4e00\u79cd\u6781\u597d\u7684\u7535\u5bb9\u5668\u3002\uff09\u7136\u540e\u4f60\u53ef\u4ee5\u9884\u5148\u79cd\u690d\u5b83\u4eec\u5e76\u5c06\u5b83\u4eec\u6392\u5217\u6210\u67d0\u79cd\u5f62\u5f0f\uff0c\u4f7f\u5b83\u4eec\u6210\u4e3a\u7eb3\u7c73\u7535\u6c60\u3002\u7136\u540e\u5b83\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u4f60\u8fdc\u79bb\u706b\u661f\u6216\u5c0f\u884c\u661f\u8868\u9762\u7684\u5bd2\u51b7\uff0c\u800c\u4e14\u623f\u5b50\u672c\u8eab\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5de8\u5927\u7684\u7535\u6c60\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bcc\u542b\u78b3\u7ea4\u7ef4\u3002\u6240\u4ee5\uff0c\u5bf9\u6211\u6765\u8bf4\uff0c\u771f\u7684\u5f88\u9177\u3002\n\u5bf9\u4e8e\u6240\u6709\u8fd9\u4e9b\uff0c\u60a8\u6709\u4ec0\u4e48\u6837\u7684\u65f6\u95f4\u8868\uff1f\u8fd9\u662f\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u5341\u5e74\u540e\u6216\u4e00\u4e2a\u4e16\u7eaa\u540e\u770b\u5230\u7684\u5e94\u7528\u5417\uff1f\u660e\u5929\u3002\u73b0\u5728\u6b63\u5728\u53d1\u751f\u3002\u6211\u731c\u5b83\u4f1a\u5728 10 \u5230 20 \u5e74\u5185\u5728\u592a\u7a7a\u4e2d\u5b9e\u65bd\u3002\u5728\u6211\u4eec\u7ed3\u675f\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u591a\u4e00\u70b9\u63a8\u6d4b\u3002\u8611\u83c7\u5728\u592a\u7a7a\u4e2d\u5e94\u7528\u7684\u4e00\u4e9b\u66f4\u5947\u5999\u7684\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f\u597d\u5427\uff0c\u6211\u80fd\u544a\u8bc9\u4f60\u4ec0\u4e48\uff1f\u6211\u76f8\u4fe1\u4f60\u4eec\u7684\u4e00\u4e9b\u7f16\u8f91\u53ef\u80fd\u4f1a\u8bf4\uff0c\u201c\u4e0d\u53ef\u80fd\uff0c\u6211\u4eec\u4e0d\u4f1a\u53d1\u5e03\u8fd9\u4e2a\u3002\u201d\u4f46\u6211\u8ba4\u4e3a\u5728\u592a\u7a7a\u98de\u884c\u4e2d\u4f7f\u7528psilocybin\u8611\u83c7\u5f88\u6709\u610f\u4e49\u3002\u73b0\u5728\u6709\u8d85\u8fc7 65 \u7bc7\u6587\u7ae0\u2026\u2026\u5728 ClinicalTrials.gov \u4e0a\u8bf4\u88f8\u76d6\u83c7\u7d20\u53ef\u4ee5\u5e2e\u52a9\u4eba\u4eec\u514b\u670d[\u521b\u4f24\u540e\u5e94\u6fc0\u969c\u788d]\u3001\u5b64\u72ec\u548c\u6291\u90c1\u3002\u4f60\u8ba4\u4e3a\u5b87\u822a\u5458\u4f1a\u611f\u5230\u5b64\u72ec\u3001\u6291\u90c1\u548c\u521b\u4f24\u540e\u5e94\u6fc0\u969c\u788d\u5417\uff1f\u6211\u60f3\u662f\u7684\u3002\u4f60\u6253\u7b97\u600e\u4e48\u5e2e\u52a9\u4ed6\u4eec\uff1f\u5728\u7cbe\u5fc3\u63a7\u5236\u7684\u6761\u4ef6\u4e0b\uff0c\u6211\u4eec\u7684\u5b87\u822a\u5458[\u80fd\u591f]\u5728\u592a\u7a7a\u4e2d\u670d\u7528\u88f8\u76d6\u83c7\u7d20\u5e76\u89c2\u5bdf\u5b87\u5b99\uff0c\u4e0d\u4f1a\u611f\u5230\u9065\u8fdc\u548c\u5b64\u72ec\uff0c\u800c\u662f\u611f\u89c9\u81ea\u5df1\u662f\u8fd9\u4e2a\u5de8\u5927\u610f\u8bc6\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u5c06\u4f7f\u4ed6\u4eec\u6709\u66f4\u597d\u7684\u5fc3\u6001\u2014\u2014\u5fc3\u7406\u4e0a\u3001\u60c5\u611f\u4e0a\u2014\u2014\u4e0e\u5176\u4ed6\u5b87\u822a\u5458\u4e00\u8d77\u5de5\u4f5c\u5e76\u7ee7\u7eed\u6267\u884c\u4efb\u52a1\u3002\u6211\u89c9\u5f97\u5b64\u7acb\u3001\u5b64\u72ec\u548c\u6291\u90c1\u5c06\u662f\u5b87\u822a\u5458\u9762\u4e34\u7684\u4e3b\u8981\u95ee\u9898\u3002\u6240\u4ee5\u6211\u771f\u8bda\u5730\u8bf4\uff1a\u7f8e\u56fd\u5b87\u822a\u5c40\u548c\u5176\u4ed6\u4efb\u4f55\u5de5\u4f5c\u548c\u7814\u7a76\u592a\u7a7a\u5b9a\u5c45\u70b9\u7684\u4eba\uff0c\u4f60\u5e94\u8be5\u8003\u8651\u5230\u88f8\u76d6\u83c7\u7d20\u8611\u83c7\u5e94\u8be5\u662f\u4f60\u5fc3\u7406\u5de5\u5177\u5305\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u8ba9\u5b87\u822a\u5458\u80fd\u591f\u5fcd\u53d7\u5b64\u72ec\u548c\u6311\u6218\u3002\u7a7a\u95f4\u548c\u9694\u79bb\u3002\u88f8\u76d6\u83c7\u7d20\u57f9\u517b\u521b\u9020\u529b\uff1b\u66f4\u6709\u521b\u9020\u529b\u7684\u4eba\u4f1a\u60f3\u51fa\u66f4\u591a\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6211\u8ba4\u4e3a\uff0c\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u80a5\u6c83\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5bfc\u81f4\u4eba\u7c7b\u200b\u200b\u5728\u592a\u7a7a\u4e2d\u7684\u53ef\u6301\u7eed\u6027\u3002", "note_en": "The list of mycologists whose names are known beyond their fungal field is short, and at its apex is Paul Stamets. Educated in, and a longtime resident of, the mossy, moldy, mushy Pacific Northwest region, Stamets has made numerous contributions over the past several decades\u2014 perhaps the best summation of which can be found in his 2005 book  Mycelium Running: How Mushrooms Can Help Save the World. But now he is looking beyond Earth to discover new ways that mushrooms can help with the exploration of space.\n  In a new \u201castromycological\u201d venture  launched in conjunction with NASA, Stamets and various research teams are studying how fungi can be leveraged to build extraterrestrial habitats and perhaps someday even terraform planets. This is not the first time Stamets\u2019s career has intersected with speculative space science. He also recently received an honor that many researchers would consider only slightly less hallowed than a Nobel Prize: the distinction of having a  Star Trek character named after him.\n  Scientific American spoke with Stamets about the out-of-this-world implications for the emerging field of astromycology.\n    First, a chicken-or-egg question: Did  Star Trek: Discovery name a character after you because you had started exploring astromycology, or was the idea for astromycology inspired by  Star Trek?\n  CBS got ahold of me and said the writers of  Star Trek wanted to talk to me: \u201cWe\u2019re in the dungeon, there\u2019s about a dozen of us, we\u2019ve been tasked with  Star Trek: Discovery, we\u2019re hitting a brick wall, and we saw your TED Talk.\u201d I had mentioned terraforming other planets with fungi.\n  What separates  Star Trek from other science fiction, you know, is it really pioneered the importance of inclusivity, recognizing that the diversity of the members of our society gives us strength. And, indeed, that\u2019s what I\u2019ve learned as a mycologist: the biodiversity of our ecosystem gives our ecosystem resilience. Ultimately, diversity wins.\n  So I told them terraforming with fungi on other planets is very plausible. Fungi were the first organisms that came to land, munching rocks, and fungi gave birth to animals about 650 million years ago. We\u2019re descendants of the descendants of these fungal networks.\n  I said, \u201cYou can have all these concepts for free. I\u2019m a  Star Trek fan; I don&#39;t want anything for this.\u201d I said, \u201cBut, you know, I always wanted to be the first astromycologist.\u201d And at the very end, they go, \u201cAstromycologist, we love that! What a great phrase; we can use that.\u201d\n    Astromycology is obviously a subset of astrobiology, so astrobiology would be the study of biological organisms extraterrestrially.\n  Really, you\u2019re talking about the biology of the universe\u2014and within the biology of the universe is our fungi. So astromycology would be the study of fungal biology throughout the universe. And I think it\u2019s inevitable we\u2019re going to someday find fungi on other planets.\n  How can Earth\u2019s fungi help with the development of human habitats or even entire ecosystems on other planets?\n  [Plants that support terraforming] need minerals, and pairing fungi up with the plants and debris from humans [causes them to] decompose into a form that then creates rich soils that could help generate the foods that astronauts need. It\u2019s much easier to take one seed and grow your food than it is to take a ton of food to space, right? Nature is incredibly efficient in terms of a payload. It\u2019s much better for nature to generate a payload of food than for your rocket to carry a payload of food.\n  Your current research proposal with NASA has two stages. The first involves identifying the best fungal species for breaking down asteroid regolith. Do you currently have any possible candidates?\n  Basically, regolith is asteroid dust. [Research teams] have constructed [synthetic] regolith that is supposed to mimic the components that are found on the surface of asteroids and also on Mars. So we\u2019re working with them now. I have a suite of about 700 strains of fungi in my cultural library. I made some recommendations, and I\u2019m happy to say oyster mushrooms are one of the best ones that we\u2019ve experimented with on the regolith so far.\n  And just recently we have found something synergistically that was unexpected when we took one species, gave it a nutritional source, and we wanted to know how far it would grow into the regolith [with its mycelial roots]. When we took one species of fungi, and we looked at the reach that it had in the regolith, then we combined it with other species of fungi\u2014each of which did not have that great of a reach. When we had a plurality of fungal species together, the outreach was far greater than anticipated. In some ways, it just proves this whole concept about biodiversity.\n  The second stage of your proposal involves determining the most effective way to use a fungus once the best type is selected. What might that look like?\n  The universe is rich with hydrocarbons. What oyster mushrooms do really well is break down hydrocarbons and dismantle them and restructure them into fungal carbohydrates, into sugars. Sugars are an absolutely essential nutrient, of course, for practically all life forms that I know of on this planet. So the idea of using hydrocarbons as a feedstock for oyster mushrooms makes a lot of sense.\n  Now, you have these kind of start/stops. You can only go so far without other inputs of essential nutrients. So it\u2019s not like the fungi could just use hydrocarbons alone\u2014they need a boost. That\u2019s where we have to supplement them. But once you begin to create this reaction, it becomes catalytic\u2014that is, self-sustaining. The more you feed this catalytic reaction, the more biodiversity you have. Again, you are having other organisms grow and die. They become a resource that provides vitamins, other minerals, perhaps other decomposable organic compounds such as cellulose or lignin, which can fuel these fungi to grow even larger and then support more plants that create more cellulose. And then they die, and they decompose, and these lenses of mycelium\u2014shallow, usually circular colonies of mycelium\u2014then begin to grow out more and more. So you\u2019re creating a micro-oasis environment that may just be a speck. And then these things begin to elaborate. And as their communities become more diverse and complex, these lenses of life then begin to become larger oases. And when the oasis environment is large enough, then it can sustain humans.\n  In addition to generating healthy soil, there are teams investigating how fungi might be used to grow structures on other worlds. Could you tell me more about how this sort of so-called mycotecture might work?\n  We grow lots of reishi mycelium, for instance. We grow reishi blocks. We wanted to crush these blocks in order to turn them into soil or get other value-added products. So we dried out these reishi blocks and we tried to crush them. But we  couldn\u2019t crush them. You could saw them with a saw blade, but if you tried to hit them with a hammer or something, they just wouldn\u2019t break. So this great engineer built us a hydraulic stainless steel press, and I had like 2,000 psi [pounds per square inch] in this press, and we gave it my reishi blocks, and it bent the stainless steel. Trying to compress it, it actually broke the machine. This thing will crush rocks all day long and could not crush mycelium.\n  They\u2019re so structurally strong. They\u2019re also good at retaining heat, so their insulation properties are phenomenal. Moreover, these could become batteries. You can have solar panels on a structure on Mars made of mycelium. (The entire mycelium is about 85 percent carbon, and studies have shown that porous carbon can be an excellent capacitor.) You could then pregrow these and arrange them on a form such that they become nanobatteries. And they could then not only insulate you from the cold on the Martian or asteroid surface, but the house itself becomes a giant battery for power because they\u2019re so rich in carbon fibers. So that, to me, is really cool.\n  What kind of timelines do you have in mind for all of this? Is this the sort of thing we might see applied a decade from now or in a century?\n  Tomorrow. It\u2019s happening now. I\u2019m guessing it will be implemented in space within 10 to 20 years.\n  Before we wrap up, let\u2019s get a little more speculative. What are some of the more fantastic ways mushrooms might be applied in space?\n  Well, what I can tell you? I\u2019m sure some of your editors may go, \u201cNo way, we\u2019re not going to publish this.\u201d But I think using psilocybin mushrooms in spaceflight makes a lot of sense. There are more than 65 articles right now ... at ClinicalTrials.gov that say psilocybin mushrooms help people overcome [post-traumatic stress disorder], loneliness and depression. Do you think the astronauts are going to have loneliness and depression and PTSD? I think yes. How are you going to help them?\n  Under carefully controlled conditions, our astronauts [being] able to take psilocybin in space and look at the universe and not feel distant and alone but feel like they\u2019re part of this giant consciousness will give them a better frame of mind\u2014psychologically, emotionally\u2014to work with other astronauts and stay on mission. I feel that isolation, loneliness and depression are going to be major issues that astronauts face.\n  So I say this with great sincerity: NASA and anyone else working and looking at the settlement of space, you should consider that psilocybin mushrooms should be an essential part of your psychological tool kit for astronauts to be able to endure the solitude and the challenges of space and isolation.\n  Psilocybin mushrooms build creativity; people who are more creative come up with more solutions. I think that, in a sense, is a fertile ecosystem that can lead to the sustainability of humans in space.", "posttime": "2021-08-10 06:43:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u592a\u7a7a,space,\u771f\u83cc", "title": "\u672a\u6765\u7684\u592a\u7a7a\u65c5\u884c\u53ef\u80fd\u9700\u8981\u8611\u83c7", "title_en": "Future Space Travel Might Require Mushrooms", "transed": 1, "url": "https://www.scientificamerican.com/article/space-travels-most-surprising-future-ingredient-mushrooms/", "via": "", "real_tags": ["\u592a\u7a7a", "space", "\u771f\u83cc"]}]
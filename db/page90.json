[{"category": "", "categoryclass": "", "imagename": "7b44e1729151eb515fadf3b88a977a9f.jpeg", "infoid": 1067082, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece\u5927\u6d41\u884c\uff0c\u533b\u751f\u548c\u516c\u5171\u536b\u751f\u5b98\u5458\u7684\u6700\u65e9\uff0c\u90fd\u770b\u5230\u5e7f\u6cdb\u7684\u75ab\u82d7\u63a5\u79cd\u4f5c\u4e3a\u963b\u6b62Covid-19\u5728\u5176\u8f68\u9053\u4e0a\u7684\u6700\u6709\u6548\u7684\u65b9\u6cd5\u3002\u4f46\u662f\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u533b\u5b66\u4e13\u5bb6\u73b0\u5728\u6b63\u5728\u8d28\u7591\u4f20\u7edf\u667a\u6167\u662f\u5426\u5e94\u8be5\u7533\u8bf7\u513f\u7ae5\u3002\n \u4ed6\u4eec\u7684\u7591\u8651\u5e76\u975e\u627f\u62c5\u9634\u8c0b\u4fe1\u5ff5\uff0c\u4f46\u4ee5\u7cbe\u5fc3\u6821\u51c6\u7684\u98ce\u9669\u548c\u798f\u5229\u8bed\u8a00\u6b23\u8d4f\u3002\u4ed6\u4eec\u9884\u8ba1\u5c06\u5728\u4e0b\u5468\u83b7\u5f97\u516c\u5171\u64ad\u653e\u4f5c\u4e3a\u75be\u75c5\u63a7\u5236\u548c\u9884\u9632\u601d\u8003\u7684\u4e2d\u5fc3\u7684\u987e\u95ee\uff0c\u8fd9\u662f\u9752\u5c11\u5e74\u548c\u5e74\u8f7b\u6210\u5e74\u4eba\u75ab\u82d7\u540e\u75ab\u82d7\u5fc3\u810f\u95ee\u9898\u7684\u4e3e\u63aa\u3002\n \u6ca1\u6709\u4eba\u8fa9\u79f0\uff0cCovid-19\u513f\u7ae5\u514d\u75ab\u63a5\u79cd\u5e94\u8be5\u5b8c\u5168\u505c\u6b62\u3002\u76f8\u53cd\uff0c\u4e89\u8bba\u5df2\u7ecf\u7206\u53d1\u4e86\u5c3d\u5feb\u63a5\u79cd\u5065\u5eb7\u513f\u7ae5\uff0c\u5e76\u6839\u636e\u98df\u54c1\u548c\u836f\u7269\u7ba1\u7406\u5c40\u6388\u6743\u7684\u53cc\u5242\u91cf\u65b9\u6848\u3002\n  PFizer-Biontech\u548cModerna\u5236\u9020\u7684\u75ab\u82d7\u5df2\u5b89\u5168\u5730\u7ba1\u7406\u5230\u6570\u767e\u4e07\u6210\u4eba\u5e76\u88ab\u5ba1\u67e5\u5728\u51e0\u5343\u540d\u9752\u5c11\u5e74\u3002\u4f46\u65e2\u4e0d\u5728\u4e0d\u540c\u7684\u513f\u79d1\u7fa4\u4f53\u4e2d\u90fd\u7ecf\u8fc7\u8be6\u5c3d\u7684\u6d4b\u8bd5\uff0c\u8fd9\u901a\u5e38\u9700\u8981\u7528\u4e8e\u666e\u904d\u4f7f\u7528\u7684\u75ab\u82d7\u3002\n FDA\u6388\u6743\u4e3a5\u670810\u65e5\u7684\u9752\u5c11\u5e74\u7684\u9752\u5c11\u5e74\u7d27\u6025\u4f7f\u7528\u8f89\u745e -  Biontech\u75ab\u82d7\u3002\u5728\u5df2\u9075\u5faa\u7684\u51e0\u5468\u5185\uff0c\u7531FDA\u548cCDC\u7ba1\u7406\u7684\u5b89\u5168\u76d1\u6d4b\u7cfb\u7edf\u68c0\u6d4b\u5230\u65b0\u63a5\u79cd\u75ab\u82d7\u7684\u6570\u5341\u4f8b\u53ef\u80fd\u526f\u4f5c\u7528\u7684\u60c5\u51b5\u4e0b\u9752\u5c11\u5e74\uff1a\u88ab\u79f0\u4e3a\u5fc3\u808c\u708e\u7684\u5fc3\u808c\u708e\u75c7\u3002\n \u8fd9\u4e9b\u6848\u4ef6\u901a\u5e38\u5728\u65e7\u9752\u5c11\u5e74\u5f00\u53d1\uff0c\u5176\u4e2d\u5927\u591a\u6570\u7537\u5b69\uff0c\u4e09\u5230\u56db\u5929\u5728\u4ed6\u4eec\u5f97\u5230\u7b2c\u4e8c\u5242\u540e\u3002\u51e0\u4e4e\u6240\u6709\u5747\u88ab\u8ba4\u4e3a\u662f\u8f7b\u5ea6\uff0c\u5448\u73b0\u4e3a\u5728\u7528\u8fc7\u67dc\u5185\u7684\u836f\u7269\u6cbb\u7597\u540e\u89e3\u51b3\u7684\u80f8\u75db\u548c\u5bc6\u5c01\u6027\u3002\u6ca1\u6709\u4e00\u4e2a\u60a3\u8005\u4f3c\u4e4e\u5df2\u7ecf\u6b7b\u4ea1\u6216\u906d\u53d7\u4e25\u91cd\u7684\u5fc3\u810f\u53d1\u751f\u6545\u969c\uff0c\u867d\u7136\u5b83\uff06\uff0339;\u592a\u65e9\u77e5\u9053\u4ed6\u4eec\u662f\u5426\u4f1a\u906d\u53d7\u957f\u671f\u5f71\u54cd\u3002\n \u622a\u81f36\u670810\u65e5\uff0c\u653f\u5e9c\uff06\uff0339; S\u75ab\u82d7\u76d1\u6d4b\u7cfb\u7edf\u68c0\u6d4b\u5230226\u4f8b\u5fc3\u808c\u708e\u6216\u76f8\u5173\u75c5\u4f8b\uff0c\u60a3\u8005\u572830\u591a30\u4eba\u4e2d\u75ab\u82d7\u63a5\u79cd\u540e\u53eb\u5fc3\u819c\u708e\u3002\u901a\u5e38\uff0c\u8fd9\u4e2a\u5e74\u9f84\u7ec4\u5c06\u9884\u671f\u5c11\u4e8e100\u4e2a\u6848\u4f8b\uff0c\u8bf4CDC\u526f\u4e3b\u4efb\u6c64\u59c6\u5e0c\u59c6\u5e03\u9c81\u5dde\u514d\u75ab\u5b89\u5168\u529e\u516c\u5ba4\u7684\u526f\u4e3b\u4efb\u3002 \n\u4ed6\u8bf4\uff0c\u9700\u8981\u66f4\u591a\u7684\u8c03\u67e5\u6765\u786e\u5b9a\u75ab\u82d7\u662f\u5426\u5f15\u8d77\u8fd9\u4e9b\u5fc3\u810f\u95ee\u9898\uff0c\u6216\u8005\u5982\u679c\u65f6\u95f4\u53ea\u662f\u5de7\u5408\uff0c\u4ed6\u8bf4\u3002\n \u8d39\u57ce\u513f\u7ae5\u533b\u9662\u513f\u79d1\u533b\u751f\u548c\u75ab\u82d7\u4e13\u5bb6\u535a\u58eb\u8868\u793a\uff0c\u8be5\u62a5\u544a\u5c06\u4e3aCDC\u7684\u514d\u75ab\u54a8\u8be2\u59d4\u5458\u4f1a\u8fdb\u884c\u54a8\u8be2\u59d4\u5458\u4f1a\u7684\u673a\u4f1a\u201c\u7ed9\u4e88\u4eba\u4eec\u5bf9\u76f8\u5bf9\u98ce\u9669\u7684\u8bca\u6240\u201d - \u56e0\u4e3a\u5b83\u5728Covid-19\u75ab\u82d7\u4e4b\u540e\u6240\u505a\u7684\u90a3\u6837\u7531\u7ea6\u7ff0\u900a\uff06amp\u5236\u4f5c;\u7ea6\u7ff0\u900a\u4e0e\u5e74\u8f7b\u5973\u6027\u7684\u7f55\u89c1\u8840\u6db2\u51dd\u8840\u969c\u788d\u76f8\u5173\u8054\uff0c\u4f46\u4ecd\u88ab\u89c6\u4e3a\u4f7f\u7528\u5b89\u5168\u3002\n \u8d8a\u91ce\u8868\u793a\uff0c\u4ed6\u6000\u7591\u5fc3\u808c\u708e\u6848\u4ef6\u4f1a\u5347\u503c\u5b69\u5b50\u5e94\u8be5\u8fc5\u901f\u63a5\u79cd\u75ab\u82d7\u7684\u957f\u671f\u786e\u5b9a\u6027\u3002\n  \u5176\u4ed6\u4eba\u4e0d\u592a\u786e\u5b9a\u3002\u513f\u7ae5\u83b7\u5f97\u75ab\u82d7\u7684\u53ef\u80fd\u6027 - \u7279\u522b\u662f\u7b2c\u4e8c\u5242 - \u53ef\u4ee5\u8ba9\u4ed6\u4eec\u7684\u5fc3\u7075\u5728\u62c5\u5fe7\u4e2d\uff0c\u5728\u7236\u6bcd\uff0c\u5b66\u6821\u548c\u5176\u4ed6\u4eba\u4e4b\u524d\u62e5\u6709\u66f4\u591a\u8fa9\u8bba\uff0c\u62e5\u62b1\u6240\u6709\u5065\u5eb7\u513f\u7ae5\u9700\u8981\u63a5\u79cd\u75ab\u82d7\u7684\u4fe1\u5ff5\u3002\n  \u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u4ee4\u4eba\u60ca\u8bb6\u7684\u526f\u4f5c\u7528\u7684\u524d\u666f\uff0c\u4fc3\u4f7f\u75ab\u82d7\u7a81\u7136\u5f15\u8d77\u75ab\u82d7\u3002\n \u968f\u7740\u5927\u6d41\u884c\u4f3c\u4e4e\u5728\u7f8e\u56fd\u873f\u8712\u4e0b\uff0c\u5b83\u5bf9\u513f\u7ae5\u7684\u6536\u8d39\u6709\u9650\uff0c\u5b83\u8fd8\u4e0d\u518d\u6e05\u695a\uff0c\u7ea6\u7ff0\u7eb3\u65af\u7684\u516c\u5171\u536b\u751f\u4e13\u5bb6Martin Makary\u535a\u58eb\u8bf4\uff0c\u514d\u75ab\u513f\u7ae5\u5c06\u4f7f\u7206\u53d1\u5e26\u6765\u66f4\u5feb\u7684\u5173\u95ed\u3002\u970d\u666e\u91d1\u65af\u5927\u5b66\u3002\n \u5728\u63a8\u8350\u666e\u904d\u7684Covid-19\u63a5\u79cd\u5065\u5eb7\u513f\u7ae5\u7684\u75ab\u82d7\u63a5\u79cd\u4e4b\u524d\uff0cMakary\u6566\u4fc3\u4ed6\u7684\u540c\u4e8b\u4eec\u5728\u201c\u4e24\u6b21\u201d\u3002\u9274\u4e8e\u624b\u4e2d\u7684\u6570\u636e\uff0c\u201c\u73b0\u5728\u6ca1\u6709\u5f15\u4eba\u6ce8\u76ee\u7684\u60c5\u51b5\uff0c\u201d\u4ed6\u672c\u6708\u5728Medpage\u4e2d\u5199\u9053\uff0c\u4e00\u4e2a\u7531\u533b\u751f\u5e7f\u6cdb\u9605\u8bfb\u7684\u7f51\u7ad9\u3002 \n\u5728\u4e00\u6b21\u91c7\u8bbf\u4e2d\uff0cMakary\u8868\u793a\uff0c\u4ed6\u7684\u62c5\u5fe7\u53ef\u80fd\u4f1a\u5728\u5bf9\u5b89\u5168\u6570\u636e\u7684\u66f4\u5168\u9762\u7684\u68c0\u67e5\u4e2d\u5ba3\u4f20\u3002\n \u201c\u4f46\u6ca1\u6709\u4eba\u5728\u60f3\u8fd9\u6837\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u6211\u4eec\u73b0\u5728\u8f6c\u6362\u4e3aPro-accine\u6765\u75ab\u82d7\u72c2\u70ed\u3002\u201d\n GAMARARY\u8bf4\uff0c\u9274\u4e8e\u65b0\u611f\u67d3\u548c\u4f4f\u9662\u7684\u4e00\u822c\u6027\u4e0b\u964d\uff0c\u6709\u65f6\u95f4\u5f7b\u5e95FDA\u5ba1\u67e5\u513f\u7ae5\u548c\u9752\u5c11\u5e74\u7684\u75ab\u82d7\u3002\u5373\u4f7f\u9700\u8981\u6570\u6708\uff0c\u4e5f\u53ef\u4ee5\u5145\u6ee1\u4fdd\u62a4\u66f4\u591a\u7684\u5b69\u5b50\u514d\u53d7\u4f24\u5bb3\u3002\n \u65b0\u5174\u7684\u8fa9\u8bba\u5a01\u80c1\u8981\u5c06\u4e00\u4e2a\u5f88\u5927\u7a0b\u5ea6\u4e0a\u662f\u7531\u5927\u6d41\u884c\u7684\u793e\u533a\u5212\u5206\u3002\n \u4ece\u7b2c\u4e00\u4e2aCovid-19\u75ab\u82d7\u5f00\u59cb\u8fdb\u5165\u7f8e\u56fd\u4eba\uff06\uff0339;\u6b66\u5668\uff0c\u4e00\u4e2a\u786e\u5b9a\u6027\u4f3c\u4e4e\u51e0\u4e4e\u8d85\u8d8a\u4e86\u8d28\u7591\uff1a\u4e00\u65e6\u6709\u8db3\u591f\u7684\u5242\u91cf\u53ef\u7528\uff0c\u90a3\u4e48\u56fd\u5bb6\u7684\u5b69\u5b50\u4f1a\u5377\u8d77\u4ed6\u4eec\u7684\u8896\u5b50\u3002\n  \u867d\u7136\u5b83\u5f88\u6e05\u695a\u7684Covid-19\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u4e25\u91cd\u75be\u75c5\u7684\u513f\u7ae5\uff0c\u4f46CDC\u8868\u793a\uff0c456\u540d\u7f8e\u56fd\u5b69\u5b50\u6b7b\u4e8e\u8be5\u75be\u75c5\uff0c\u5c3d\u7ba1\u8fd9\u88ab\u8ba4\u4e3a\u662f\u4fdd\u5b88\u7684\u4f30\u8ba1\u3002\n \u81f3\u5c11\u670920,000  - \u548c\u591a\u8fbe10\u4e07\u4eba - \u513f\u7ae5\u5df2\u7ecf\u4e0eCovid-19\u4f4f\u9662\u8fc7\u3002\u4e8b\u5b9e\u4e0a\uff0cCDC\u62a5\u544a\u8bf4\uff0c\u5373\u4f7f\u6210\u5e74\u4f4f\u9662\u6cbb\u7597\u57283\u6708\u548c4\u6708\u4e0b\u964d\uff0c\u9752\u5c11\u5e74\u88ab\u5f55\u53d6\u7684\u901f\u5ea6\u5411\u4e0a\u52fe\u9009\u3002\u8fd1\u4e09\u5206\u4e4b\u4e00\u662f\u5728\u91cd\u75c7\u76d1\u62a4\u5ba4\u5185\u6cbb\u7597\u7684\uff0c\u524a\u5f31\u4e86\u8fd9\u4e2a\u5e74\u9f84\u7ec4\u5f88\u5c11\u53d1\u751f\u4e25\u91cd\u75be\u75c5\u7684\u8bba\u70b9\u3002 \nCovid-19\u5bf9\u67d0\u4e9b\u5b69\u5b50\u7684\u6536\u8d39\u4e5f\u8fdc\u8fdc\u8d85\u51fa\u4e86\u4e00\u573a\u611f\u67d3\u3002\u622a\u81f35\u6708\u4e2d\u65ec\uff0c\u7f8e\u56fd\u81f3\u5c11\u67094,018\u4eba\u5f00\u53d1\u4e86\u4e00\u79cd\u79f0\u4e3a\u513f\u7ae5\u591a\u7cfb\u7edf\u708e\u75c7\u7efc\u5408\u5f81\u7684\u75c5\u75c7\uff0c\u6216MISC\uff0c\u5b69\u5b50\u4eec\u6e05\u9664\u4e86\u4ed6\u6216\u5979\u7684\u611f\u67d3\u540e\u7ecf\u5e38\u51fa\u73b0\u56db\u5230\u516d\u5468\uff0c\u901a\u5e38\u9700\u8981\u4f4f\u9662\u6cbb\u7597\u3002\n  \u5982\u679cCovid-19\u53ea\u6709\u5728\u513f\u7ae5\u4e2d\u770b\u5230\u7684\u75be\u75c5\uff0c\u8fd9\u4e9b\u7edf\u8ba1\u6570\u636e\u5982\u8fd9\u4e9b\u7edf\u8ba1\u6570\u636e\u5c06\u901a\u8fc7\u7ebd\u7ea6\u513f\u79d1\u533b\u751fRisa Hoshino\u535a\u58eb\u5728Medpage\u8bc4\u8bba\u4e2d\u64b0\u5199\u4e86\u4e00\u79cd\u4fdd\u62a4\u5b83\u4eec\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u4ee5\u4fbf\u5728Medpage\u8bc4\u8bba\u4e2d\u64b0\u5199\u4e86\u4e00\u7bc7\u6587\u7ae0\u7684\u610f\u89c1\u3002\n \u901a\u8fc7\u4efb\u4f55\u5b9a\u4e49\uff0cCovid-19\u4e00\u76f4\u662f\u56fd\u5bb6\u513f\u7ae5\u7684\u7d27\u6025\u60c5\u51b5\uff0cFDA\u7684\u7d27\u6025\u4f7f\u7528\u6388\u6743\u662f\u4e00\u4e2a\u201c\u9002\u5f53\u7684\u9014\u5f84\u201d\uff0c\u7528\u4e8e\u8ba9\u75ab\u82d7\u63a5\u79cd\u60a3\u8005\u5bf9\u5e74\u8f7b\u7684\u7f8e\u56fd\u4eba\u8fdb\u884c\u75ab\u82d7\u3002\n \u5728\u513f\u7ae5\u533b\u9662\u6d1b\u6749\u77f6\uff0c\u513f\u79d1\u5fc3\u4e2d\u79d1\u533b\u751fJodie Votava-Smith\u535a\u58eb\u5728\u7b2c\u4e00\u624b\u75ab\u82d7\u4e2d\u770b\u5230\u4e86Covid-19\u7684\u6b8b\u9ab8\uff0c\u5e76\u4e14\u5bf9\u75ab\u82d7\u7684\u5b69\u5b50\u7684\u4ef7\u503c\u6ca1\u6709\u7591\u95ee\u3002\n \u5979\u8bf4\uff0c\u5728\u4e0a\u4e2a\u6708\uff0c\u5979\u5e2e\u52a9\u6cbb\u7597\u60a3\u6709\u5242\u91cf\u75ab\u82d7\u540e\u53d1\u80b2\u5fc3\u808c\u708e\u7684\u60a3\u8005\u3002\u513f\u7ae5\u7684\u75c7\u72b6\u6e29\u548c\uff0c\u5e76\u968f\u7740\u5e03\u6d1b\u82ac\u7684\u6613\u4e8e\u6cbb\u7597\u3002\n Votava-Smith\u8868\u793a\uff0c\u5979\u5bf9\u75ab\u82d7\u7684\u4ef7\u503c\u8fdb\u884c\u8bc4\u4f30\uff0c\u7531\u4e8eCovid-19\u7531\u4e8e\u5177\u6709Covid-19\u800c\u5bf9Chla\u6cbb\u7597\u7684\u6570\u5341\u540d\u513f\u7ae5\u8fdb\u884c\u4e86\u66f4\u6df1\u523b\u7684\u5851\u9020\u3002\u8fd9\u4e9b\u5b69\u5b50\u4e25\u91cd\u751f\u75c5\uff0c\u73b0\u5728\u9762\u4e34\u53ef\u80fd\u6301\u4e45\u7684\u5065\u5eb7\u5f71\u54cd\u3002\u5979\u8bf4\uff0c\u8fd9\u79cd\u75be\u75c5\u662f\u4ed6\u4eec\u75db\u82e6\u7684\u539f\u56e0\uff0c\u800c\u4e0d\u662f\u75ab\u82d7\u3002\n \u4e24\u4e2a\u5b69\u5b50\u7684\u6bcd\u4eb25\u548c7\uff0cVotava-Smith\u8868\u793a\uff0c\u5979\u201c\u7b49\u4e0d\u53ca\u201d\u8ba9\u4ed6\u4eec\u63a5\u79cd\u75ab\u82d7\u3002 \u201c\u4ed6\u4eec\u77e5\u9053\u4ed6\u4eec\u5728\u8f6e\u5230\u4ed6\u4eec\u7684\u65f6\u5019\u4f1a\u5f97\u5230\u4ed6\u4eec\u7684\u955c\u5934\uff0c\u201d\u5979\u8bf4\u3002 \nH. Cody Meissner\u535a\u58eb\uff0c\u5854\u592b\u8328\u5927\u5b66\u513f\u79d1\u533b\u751f\u5411FDA\u63d0\u51fa\u5efa\u8bae\u75ab\u82d7\uff0c\u8bf4\u5b83\uff06\uff0339;\u4ee5\u4e0e\u6210\u4eba\u7d27\u6025\u4f7f\u7528\u7684\u65b9\u5f0f\u76f8\u540c\u7684\u65b9\u5f0f\u8bc4\u4f30\u513f\u7ae5Covid-19\u75ab\u82d7\u7684\u9519\u8bef\u3002\n \u201c\u63a5\u79cd\u6210\u5e74\u4eba\u7684\u98ce\u9669\u8ba1\u7b97\u975e\u5e38\u5bb9\u6613\uff0c\u201d\u4ed6\u8bf4\u3002\u5f53\u6bcf\u5929\u591a\u8fbe4,000\u540d\u6210\u5e74\u4eba\u65f6\u6b7b\u4e8eCovid-19\uff0c\u201c\u5373\u4f7f\u6709\u75ab\u82d7\u7684\u98ce\u9669\u5f88\u5c11\uff0c\u5927\u591a\u6570\u4eba\u4e5f\u4f1a\u63a5\u53d7\u8fd9\u4e00\u70b9\u3002\u201d\n \u4f46\u5bf9\u4e8e\u5b69\u5b50\u6765\u8bf4\uff0c\u4ed6\u8bf4\uff0c\u201c\u5fae\u79ef\u5206\u6709\u70b9\u4e0d\u540c\u3002\u201d\u867d\u7136\u4ed6\u4eec\u4f3c\u4e4e\u5f88\u5bb9\u6613\u6536\u7f29\u51a0\u72b6\u75c5\u6bd2\uff0c\u4f46\u5b83\u4eec\u6bd4\u6210\u5e74\u4eba\u66f4\u5c11\u5730\u751f\u75c5\u6216\u6b7b\u4ea1\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u75ab\u82d7\u63a5\u79cd\u540e\u5fc3\u808c\u708e\u662f\u7f55\u89c1\u7684\uff0c\u5b83\u4eec\u4ecd\u7136\u6539\u53d8\u98ce\u9669\u6548\u76ca\u5206\u6790\u3002\n \u201c\u6570\u636e\u4e0d\u4ec5\u4ec5\u662f\u8bf4\u8fd9\u4e9bCovid-19\u75ab\u82d7\u7684\u76ca\u5904\u8d85\u8fc7\u4e86\u513f\u7ae5\u548c\u9752\u5c11\u5e74\u7684\u98ce\u9669\uff0c\u201d\u8fc8\u65af\u7eb3\u8bf4\u3002 \u201c\u6211\u4eec\u53ef\u80fd\u4f1a\u5230\u8fbe\u90a3\u91cc\u3002\u4f46\u6211\u4eec\u73b0\u5728\u4e0d\u5728\u90a3\u91cc\u3002\u201c\n  \u66f4\u65b0\uff1a8:08 AM\uff0cJun\u300218,2021\uff1a\u8fd9\u4e2a\u6545\u4e8b\u6700\u521d\u8868\u793a\uff0cCDC\u75ab\u82d7\u54a8\u8be2\u59d4\u5458\u4f1a\u5c06\u57286\u670818\u65e5\u661f\u671f\u4e94\u7684\u4f1a\u8bae\u4e0a\u8ba8\u8bba\u513f\u7ae5\u7684Covid-19\u75ab\u82d7\u3002\u8be5\u4f1a\u8bae\u5728\u9075\u5b88\u4e0b\u5468\u4e4b\u524d\u63a8\u8fdf\u4e86\u4f1a\u8bae\u65b0\u7684Juneteenth\u5168\u56fd\u72ec\u7acb\u65e5\u5047\u671f\u3002 ", "note_en": "From the earliest days of the pandemic, doctors and public health officials have seen widespread vaccination as the most effective way to stop COVID-19 in its tracks. But a growing contingent of medical experts is now questioning whether that conventional wisdom ought to apply to children.\n Their doubts are not borne of conspiracy beliefs, but couched in the carefully calibrated language of risk and benefit. And they&#39;re expected to  get a public airing next week as advisors to the Centers for Disease Control and Prevention ponder a spate of post-vaccine heart problems in adolescents and young adults.\n No one is arguing that COVID-19 immunizations for kids should stop altogether. Rather, a debate has erupted over the need to inoculate healthy children as soon as possible and according to the two-dose regimen authorized by the Food and Drug Administration.\n  The vaccines made by Pfizer-BioNTech and Moderna have been administered safely to millions of adults and been vetted in several thousand adolescents. But neither has been subjected to exhaustive testing in diverse pediatric populations, as is typically required for a vaccine intended for universal use in kids.\n The FDA authorized the Pfizer-BioNTech vaccine for emergency use in adolescents as young as 12 on May 10. In the weeks that have followed, the safety monitoring systems managed by the FDA and CDC detected dozens of cases of a possible side effect in newly vaccinated teens: an inflammation of the heart muscle known as  myocarditis.\n The cases typically developed in older adolescents, most of them boys, three to four days after they got a second dose. Virtually all were considered mild, presenting as chest pain and tightness that resolved after treatment with over-the-counter medications. None of the patients appear to have died or suffered serious cardiac malfunction, though it&#39;s too early to know whether they will suffer long-term effects.\n As of June 10, the government&#39;s vaccine monitoring systems detected 226 cases of myocarditis or a related condition called  pericarditis after vaccination in people younger than 30. Normally, fewer than 100 cases would be expected for this age group, said  Dr. Tom Shimabukuro, deputy director of the CDC&#39;s Immunization Safety Office.\n  More investigation is needed to determine whether the vaccine caused these heart problems or if the timing was merely a coincidence, he said.\n Dr. Paul Offit, a pediatrician and vaccine specialist at Children\u2019s Hospital of Philadelphia, said the reports will give the CDC\u2019s  Advisory Committee on Immunization Practices an opportunity to \u201cgive people a clinic on relative risk\u201d \u2014 as it did after the COVID-19 vaccine made by Johnson &amp; Johnson was  linked to a rare blood-clotting disorder in younger women but still  deemed safe for use.\n Offit said he doubts the myocarditis cases will upend the long-standing certainty that kids should be vaccinated quickly.\n  Others aren\u2019t so sure. The possibility that children getting the vaccine \u2014 especially a second dose \u2014 could put their hearts at risk has amplified calls for more debate before parents, schools and others embrace the conviction that all healthy children need to get vaccinated.\n  It\u2019s not just the prospect of a surprise side effect that has prompted the sudden surge in vaccine caution.\n As the pandemic appears to be winding down across the United States and its limited toll on children has been tallied, it\u2019s no longer clear that immunizing children will bring the outbreak to a faster close, said  Dr. Martin Makary, a public health expert at Johns Hopkins University.\n Makary is urging his colleagues to \u201cthink twice\u201d before recommending universal COVID-19 vaccination of healthy kids. Given the data in hand, \u201cthere\u2019s no compelling case for it right now,\u201d he  wrote this month in MedPage, a website widely read by physicians.\n In an interview, Makary said his concerns might be allayed with a more thorough examination of the safety data.\n \u201cBut no one is thinking like this,\u201d he said. \u201cWe\u2019ve converted now from being pro-vaccine to vaccine fanaticism.\u201d\n Given the general decline in new infections and hospitalizations, there\u2019s time for a thorough FDA vetting of the vaccines for children and adolescents, Makary said. Even if it takes months, it could wind up protecting more children from harm.\n The emerging debate threatens to divide a community that\u2019s largely been united by the pandemic.\n From the moment that the first COVID-19 vaccine started  going into Americans&#39; arms, one certainty has seemed almost beyond questioning: As soon as enough doses were available, the nation\u2019s children would roll up their sleeves.\n  Although it\u2019s clear COVID-19 has largely spared children from severe illness, the CDC says  456 American kids have died of the disease, though that is considered a conservative estimate.\n At least 20,000 \u2014 and as many as 100,000 \u2014 kids have been hospitalized with COVID-19. Indeed, the CDC reports that even as adult hospitalizations declined in March and April, the rate at which adolescents were admitted ticked upward. Nearly one-third were treated in intensive care units, undercutting the argument that severe illness rarely happens in this age group.\n COVID-19\u2019s toll on some children also lingers well beyond a bout of infection. As of mid-May, at least 4,018 in the U.S. have developed a condition called  multisystem inflammatory syndrome in children, or MISC, that frequently appears four to six weeks after a child has cleared his or her infection and typically requires hospitalization.\n  If COVID-19 were a disease seen only in children, statistics such as these would galvanize medical professionals and public health officials to find a way to protect them, New York pediatrician  Dr. Risa Hoshino wrote in a  MedPage commentary sparked in part by Makary\u2019s views.\n By any definition, COVID-19 has been an emergency for the nation\u2019s children and the FDA\u2019s emergency use authorization is an \u201cappropriate pathway\u201d for getting vaccines to young Americans, she added.\n At Children\u2019s Hospital Los Angeles, pediatric cardiologist  Dr. Jodie Votava-Smith has seen the wreckage of COVID-19 firsthand, and she has no doubts about the value of vaccinating kids.\n In the last month, she has helped treat a patient who developed myocarditis after a dose of vaccine, she said. The child\u2019s symptoms were mild and readily treated with ibuprofen.\n Votava-Smith said her assessment of vaccines\u2019 value has been more profoundly shaped by the dozens of children treated at CHLA for serious heart muscle inflammation as a result of having COVID-19. These children were severely ill and now face potentially enduring health effects. The disease was the cause of their misery, she said, not the vaccine.\n The mother of two children who are 5 and 7, Votava-Smith said she \u201ccan\u2019t wait\u201d to get them vaccinated. \u201cThey know they\u2019ll be getting their shot when it\u2019s their turn,\u201d she said.\n Dr. H. Cody Meissner, a Tufts University pediatrician who advises the FDA on vaccines, said it&#39;s a mistake to evaluate COVID-19 vaccines for children in the same way as it was cleared for emergency use in adults.\n \u201cThe risk calculation for vaccinating an adult is pretty easy,\u201d he said. When as many as 4,000 adults a day were dying of COVID-19, \u201ceven if there was a little risk of vaccine, most people would accept that.\u201d\n But for children, he said, \u201cthe calculus is a bit different.\u201d Although they seem to contract the coronavirus pretty readily, they\u2019re far less likely than adults to get sick or die. So even if instances of post-vaccination myocarditis are rare, they still change the risk-benefit analysis.\n \u201cThe data are not sufficient to say that the benefit of these COVID-19 vaccines outweighs the risk in children and adolescents,\u201d Meissner said. \u201cWe may get there. But we\u2019re not there now.\u201d\n  Updates:  8:08 AM, Jun. 18, 2021:  This story originally said the CDC vaccine advisory committee would discuss COVID-19 vaccines for children at a meeting on Friday, June 18. That meeting has been  postponed until next week in observance of the new Juneteenth National Independence Day holiday.", "posttime": "2021-06-21 05:17:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u75ab\u82d7,experts", "title": "\u4e00\u4e9b\u75ab\u82d7\u4e13\u5bb6\u6709\u5173\u4e8e\u6025\u4e8e\u63a5\u79cd\u5b69\u5b50\u7684\u7b2c\u4e8c\u6b21\u60f3\u6cd5 ", "title_en": "Some vaccine experts having second thoughts about rushing to inoculate kids", "transed": 1, "url": "https://news.yahoo.com/vaccine-experts-having-second-thoughts-100022396.html", "via": "", "real_tags": ["\u75ab\u82d7", "experts"]}, {"category": "", "categoryclass": "", "imagename": "fb3555845de1c8f7a9c0a2bc68065b58.jpg", "infoid": 1067080, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Airspeeder\u8868\u793a\uff0c\u5b83\u7684\u7535\u52a8\u201c\u98de\u884c\u201d\u8d5b\u8f66\u662fAlauda MK3\uff0c\u5728\u6fb3\u5927\u5229\u4e9a\u5357\u90e8\u9996\u6b21\u672a\u52a0\u5de5\u7684\u6d4b\u8bd5\u822a\u73ed\u3002\u8be5\u5de5\u827a\uff0c\u7535\u52a8\u5782\u76f4\u8d77\u98de\u591a\u529f\u80fd\uff08\u7f29\u5199Evtol\u7528\u4e8e\u7535\u52a8\u5782\u76f4\u8d77\u98de\u548c\u7740\u9646\uff09\uff0c\u5e76\u5728\u6fb3\u5927\u5229\u4e9a\u6c11\u7528\u822a\u7a7a\u5b89\u5168\u7ba1\u7406\u5c40\u7684\u76d1\u7763\u4e0b\u8fdb\u884c\u4e86\u6d4b\u8bd5\u822a\u73ed\u3002\n Airspeeder\u548cAlauda Aerononutics\uff08\u524d\u8005\u662f\u8d5b\u8f66\u7cfb\u5217\uff0c\u540e\u8005\u662f\u5236\u9020\u5546\uff09\u7684\u6700\u7ec8\u76ee\u6807\uff0c\u4e24\u8005\u90fd\u662f\u7531\u4f01\u4e1a\u5bb6Matthew Pearson\u6210\u7acb\u7684\uff0c\u4e00\u76f4\u662f\u4e3a\u4e86\u8d5b\u8f66\u800c\u5efa\u9020\u98de\u884c\u5668\uff0c\u8fd9\u4e9b\u516c\u53f8\u6240\u8bf4\u7684\u662f\u4e0b\u4e00\u4e2a\u6b65\u3002\u6839\u636eAirspeeder\u7684\u7f51\u7ad9\uff0c\u201c\u6210\u529f\u6267\u884c\u8fd9\u4e9b\u822a\u73ed\u610f\u5473\u7740\u672a\u710a\u63a5\u7684\u7535\u52a8\u98de\u884c\u6c7d\u8f66\u5927\u5956\u8d5b\u5c06\u57282021\u5e74\u5728\u5f88\u5feb\u900f\u9732\u7684\u56fd\u9645\u5730\u70b9\u4e3e\u884c\u3002\u201d\n  \u6839\u636eAirspeeder\uff08PDF\uff09\uff0c\u672a\u52a0\u5de5\u7684MK3\u91cd130\u516c\u65a4\uff08\u7ea6286\u78c5\uff09\uff0c\u53ef\u4ee5\u57282.8\u79d2\u5185\u4ece\u96f6\u523062\u82f1\u91cc/\u5c0f\u65f6\uff0c\u5e76\u722c\u5230500\u7c73\u3002\u5b83\u5177\u6709\u53ef\u62c6\u5378\u7535\u6c60\uff0c\u5176\u5751\u673a\u7ec4\u4eba\u5458\u5df2\u7ecf\u80fd\u591f\u572820\u79d2\u5185\u66f4\u6362\u3002\u8be5\u516c\u53f8\u8868\u793a\uff0c\u5b83\u53ef\u4ee5\u5728\u4e00\u5757\u7535\u6c60\u7ec4\u4e0a\u98de\u884c10\u81f315\u5206\u949f\uff0c\u5e76\u914d\u5907\u4e86LIDAR\u548c\u96f7\u8fbe\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u201c\u865a\u62df\u529b\u57df\u201d\uff0c\u4ee5\u5e2e\u52a9\u9632\u6b62\u78b0\u649e\u3002\n Airspeeder\u8868\u793a\uff0c\u5176\u6700\u521d\u7684EXA\u7cfb\u5217\u6bd4\u8d5b\uff0c\u5b83\u8ba1\u5212\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u8ba1\u5212\uff0c\u5c06\u5305\u62ec\u6bcf\u652f\u56e2\u961f\u4e24\u652f\u4e0e\u4e24\u4e2a\u8fdc\u7a0b\u98de\u884c\u5458\u7684\u56db\u652f\u7403\u961f\u3002 ", "note_en": "Airspeeder says its electric \u201cflying\u201d race car, the Alauda Mk3, has had its first unpiloted test flights in southern Australia. The craft, an electric vertical takeoff multicopter (abbreviated eVTOL for  electric  vertical  take  off and  landing) was remotely controlled and the test flights took place under the supervision of Australia\u2019s Civil Aviation Safety Authority.\n The ultimate goal for Airspeeder and Alauda Aeronautics (the former is the racing series, the latter is the manufacturer), both founded by entrepreneur Matthew Pearson, has been to build flying vehicles for the  purpose of racing them, which the companies say is the next step. According to Airspeeder\u2019s website, the \u201csuccessful execution of these flights means that uncrewed electric flying car Grand Prixs will take place in 2021 at three soon-to-be-revealed international locations.\u201d\n  According to  Airspeeder (pdf), the unpiloted Mk3 weighs 130 kilograms (about 286 pounds), can go from zero to 62 mph in 2.8 seconds, and climb to 500 meters. It has a removable battery, which its pit crews have been able to replace in under 20 seconds. It can fly for 10 to 15 minutes on one battery pack, the company says, and it\u2019s equipped with lidar and radar to create a \u201cvirtual forcefield\u201d to help prevent collisions.\n Airspeeder says its initial EXA Series races, which it\u2019s planning for later this year, will include up to four teams with two remote pilots per team.", "posttime": "2021-06-21 04:41:50", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u98de\u884c,successful,\u7535\u52a8", "title": "Airspeeder\u8868\u793a\uff0c\u5b83\u4e3a\u5176\u7535\u52a8\u98de\u884c\u8d5b\u8f66\u7684\u7b2c\u4e00\u4e2a\u6210\u529f\u7684\u6d4b\u8bd5\u98de\u884c ", "title_en": "Airspeeder says it had the first successful test flight for its electric flying racecar", "transed": 1, "url": "https://www.theverge.com/2021/6/20/22542459/airspeeder-alauda-evtol-flying-car-race", "via": "", "real_tags": ["\u98de\u884c", "\u7535\u52a8"]}, {"category": "", "categoryclass": "", "imagename": "78ad71ccc50563d44f6aad92296ded34.jpg", "infoid": 1067078, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Docker Inc.\u4ece\u5355\u4e00\u5730\u70b9\u5de5\u4f5c\u7684\u5de5\u7a0b\u5e08\u5f00\u59cb\u4e86\u8bb8\u591a\u521d\u521b\u516c\u53f8\u3002\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u8fd9\u662f\u7f8e\u56fd\u7684\u6e7e\u533a\u3002\u6211\u4eec\u4ee5\u529e\u516c\u5ba4\u4e3a\u4e2d\u5fc3\uff0c\u6240\u4ee5\u81ea\u7136\u7684\u65b9\u5f0f\u6765\u63d0\u9ad8\u591a\u6837\u6027\u548c\u4ece\u4e0d\u540c\u6587\u5316\u4e2d\u52aa\u529b\u7684\u5de5\u7a0b\u5e08\u90fd\u5728\u5171\u540c\u52aa\u529b\uff0c\u5728\u4e0d\u540c\u7684\u5730\u65b9\u5f00\u8bbe\u65b0\u529e\u4e8b\u5904\u3002\u4ece\u4e00\u5f00\u59cb\u5c31\u662f\u6211\u4eec\u7684\u76ee\u6807\u662f\u6df7\u5408\u7f8e\u56fd\u548c\u6b27\u6d32\u7684\u5236\u4f5c\u8f6f\u4ef6\u7684\u65b9\u5f0f\uff0c\u8ba9\u6211\u4eec\u6700\u597d\u7684\u4e24\u79cd\u6587\u5316\u3002\n  2015\u5e74\uff0cDocker\u5f00\u59cb\u5728\u6b27\u6d32\u5f00\u8bbe\u529e\u4e8b\u5904\uff0c\u4ece\u82f1\u56fd\u7684\u5251\u6865\u5f00\u59cb\uff0c\u7136\u540e\u662f\u6cd5\u56fd\u5df4\u9ece\u3002\u968f\u7740\u8fd9\u4e24\u4e2a\u5730\u70b9\uff0c\u6f2b\u957f\u7684\u9053\u8def\u83b7\u5f97\u4e0e\u8fdc\u7a0b\u5458\u5de5\u5408\u4f5c\u7684\u7ecf\u9a8c\u5f00\u59cb\u3002\n \u6563\u843d\u5728\u4e16\u754c\u5404\u5730\u7684\u591a\u4e2a\u529e\u516c\u5ba4\u4e0d\u540c\u4e8e\u5b8c\u5168\u504f\u8fdc\u3002\u4f46\u4f60\u4ecd\u7136\u5f00\u59cb\u9047\u5230\u4e00\u4e9b\u6311\u6218\uff0c\u800c\u4e0d\u662f\u540c\u65f6\u62e5\u6709\u540c\u4e00\u4f4d\u7f6e\u7684\u6311\u6218\u3002\u6211\u4eec\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u5728\u4e92\u76f8\u8bbf\u95ee\u7684\u98de\u673a\u6216\u706b\u8f66\u4e0a\u3002\n \u5c3d\u7ba1\u516c\u53f8\u7684\u5f3a\u5927\u5f00\u6e90\u6587\u5316\uff0c\u4f46\u8868\u660e\u60a8\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u623f\u95f4\u5185\u6ca1\u6709\u62e5\u6709\u5927\u5bb6\u7684\u540c\u65f6\u5efa\u7acb\u4f1f\u5927\u7684\u8f6f\u4ef6\uff0c\u6211\u4eec\u4ecd\u7136\u5177\u6709\u4e00\u4e2a\u975e\u5e38\u5177\u6709\u529e\u6cd5\u4e3a\u4e2d\u5fc3\u7684\u6587\u5316\u3002\u7ed9\u5b9a\u4ea7\u54c1\u5bf9\u8bdd\u6216\u51b3\u5b9a\u7684\u8bb8\u591a\u80cc\u666f\u90fd\u4e0e\u7ed9\u5b9a\u7684\u529e\u516c\u5ba4\u76f8\u5173\u8054\u3002\u5f53\u60a8\u4e0d\u5728\u51b3\u5b9a\u7684\u529e\u516c\u5ba4\u65f6\uff0c\u60a8\u53ea\u6709\u6709\u5173\u8be5\u51b3\u5b9a\u7684\u90e8\u5206\u4fe1\u606f\u3002\n \u6211\u4eec\u5728\u6b64\u671f\u95f4\u5b66\u5230\u4e86\u5f88\u591a\u4e1c\u897f\uff1a\u5728\u6b23\u8d4f\u4e0d\u540c\u7684\u6587\u5316\u65f6\uff0c\u5728\u6b23\u8d4f\u4e0d\u540c\u7684\u6587\u5316\u65f6\uff0c\u7ec4\u7ec7\u5de5\u4f5c\uff0c\u65f6\u95f4\u533a\uff08\u6cd5\u56fd\u548c\u7f8e\u56fd\u897f\u6d77\u5cb8\u5206\u5f009\u5c0f\u65f6\uff09\uff0c\u6587\u4e66\u5de5\u4f5c\uff0c\u85aa\u8d44\u671f\u671b\uff0c\u516c\u4f17\u5047\u671f\u7b49\u3002\n  \u4ea7\u54c1Docker Builds\u5bf9\u4e16\u754c\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\uff0c\u56e0\u6b64\u62db\u8058\u4f1f\u5927\u7684\u5de5\u7a0b\u5e08\u4ece\u672a\u5728Docker\u5904\u51fa\u73b0\u95ee\u9898\u3002\u6211\u4eec\u4eba\u4e3a\u5730\u9650\u5236\u4e86\u81ea\u5df1\u8058\u8bf7\u9760\u8fd1\u6211\u4eec\u7684\u529e\u4e8b\u5904\u7684\u4eba\u624d\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u5f00\u8bbe\u66f4\u591a\u7684\u529e\u516c\u5ba4\u6216\u5f00\u59cb\u96c7\u7528\u4eba\u4eec\uff0c\u65e0\u8bba\u4ed6\u4eec\u4f4f\u5728\u54ea\u91cc\u3002 2017\u5e74\uff0c\u6211\u4eec\u8058\u8bf7\u4e86\u4e00\u4e9b\u975e\u5e38\u7ecf\u9a8c\u4e30\u5bcc\u7684\u8fdc\u7a0b\u5de5\u7a0b\u5e08\uff0c\u4ed6\u4eec\u67095\u5e74\u4ee5\u4e0a\u7684\u7ecf\u9a8c\u3002\u4ed6\u4eec\u5e26\u6765\u4e86\u5f88\u591a\u6700\u597d\u7684\u505a\u6cd5\uff0c\u5e76\u4e0e\u4ed6\u4eec\u4e00\u8d77\u5b66\u4f1a\u4e86\u5982\u4f55\u66f4\u597d\u5730\u4e0e\u8fdc\u7a0b\u5de5\u7a0b\u5e08\u5408\u4f5c\u3002\n \u6211\u4eec\u505a\u51fa\u4e86\u53d8\u5316\u7684\u4e00\u4e2a\u9886\u57df\u662f\u6211\u4eec\u5982\u4f55\u8fd0\u884c\u4f1a\u8bae\u3002\u800c\u4e0d\u662f\u53ea\u6709\u8fdc\u7a0b\u5458\u5de5\u62e8\u5165\u5e76\u52aa\u529b\u8ffd\u968f\u4f1a\u8bae\u5ba4\u4e2d\u7684\u5bf9\u8bdd\uff0c\u6211\u4eec\u4e5f\u8ba9\u6bcf\u4e2a\u4eba\u90fd\u5728\u529e\u516c\u5ba4\uff0c\u62e8\u6253\u4e86\u4e00\u4e2a\u597d\u8033\u673a\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u4eba\u90fd\u5728\u540c\u4e00\u6c34\u5e73\u3002\u8fd9\u5927\u5e45\u63d0\u9ad8\u4e86\u90a3\u4e9b\u9065\u8fdc\u7684\u4eba\u7684\u4f1a\u8bae\u8d28\u91cf\u3002 \n\u6211\u4eec\u8fd8\u5b66\u4e60\u4e86\u826f\u597d\u5199\u4f5c\u7684\u529b\u91cf\uff0c\u56e0\u4e3a\u65f6\u533a\u5f3a\u5236\u901a\u4fe1\u66f4\u5f02\u6b65\u3002\u7b80\u660e\uff0c\u6e05\u6670\uff0c\u6709\u6548\uff0c\u5199\u4f5c\u53d8\u5f97\u6279\u8bc4\u3002\n \u6211\u4eec\u5bf9\u6211\u4eec\u516c\u53f8\u7684\u6838\u5fc3\u4ef7\u503c\u89c2\u52aa\u529b\uff0c\u5176\u4e2d\u4e00\u4e2a\u662f\u201c\u5f00\u653e\u5f0f\u5408\u4f5c\u201d\u3002\u5728\u90a3\u4e2a\u4ef7\u503c\u4e4b\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u5173\u95ed1600\u591a\u4e2a\u677e\u5f1b\u9891\u9053\uff0c\u4ee5\u4e13\u6ce8\u4e8e\u6211\u4eec\u5de6\u53f3\u7684\u6c9f\u901a\u3002\u6211\u4eec\u4e3b\u5f20\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u516c\u5171\u677e\u5f1b\u9891\u9053\u4e2d\u53d1\u751f\u6c9f\u901a\uff0c\u5e76\u4ec5\u5728\u5fc5\u8981\u65f6\u9650\u5236\u79c1\u4eba\u6e20\u9053\u7684\u4f7f\u7528\u3002\n \u8fdc\u7a0b\u5de5\u7a0b\u5e08\u611f\u89c9\u66f4\u597d\uff0c\u4f46\u529e\u516c\u5ba4\u91cc\u8fd8\u6709\u4e00\u4e2a\u751f\u547d\uff0c\u4ed6\u4eec\u65e0\u6cd5\u638c\u63e1\uff0c\u8fd9\u662f\u6211\u4eec\u5f15\u5165\u866b\u6d1e\u7684\u65f6\u5019\u3002\u866b\u6d1e\u5f88\u4f4e\uff0c\u5b83\u4eec\u662f\u4e00\u4e2a\u76d1\u89c6\u5668\uff0c\u76f8\u673a\u548c\u626c\u58f0\u5668\u6574\u5929\u5728\u529e\u516c\u5ba4\u5f00\u653e\u3002\u8fdc\u7a0b\u5de5\u7a0b\u5e08\u8fde\u63a5\u5230\u5b83\uff0c\u4eab\u6709\u529e\u516c\u5ba4\uff0c\u53ef\u4ee5\u611f\u53d7\u5230\u6c1b\u56f4\u548c\u542c\u5230\u4e00\u822c\u5bf9\u8bdd\u3002\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u677e\u61c8\u6709\u4eba\u63a5\u8fd1\u866b\u6d1e\uff0c\u4ee5\u4fbf\u201c\u76f4\u63a5\u201d\u6c9f\u901a\u3002\u5728\u6211\u4eec\u79bb\u5f00\u529e\u516c\u5ba4\u5f00\u59cb\u5728\u5bb6\u4e2d\u5f00\u59cb\u5de5\u4f5c\uff0c\u4ed6\u4eec\u975e\u5e38\u53d7\u6b22\u8fce\u3002\n  2020\u5e74\u521d\uff0c\u4e00\u65e6\u6211\u4eec\u5728\u9065\u8fdc\u7684\u5de5\u4f5c\u4e2d\u7ecf\u5386\u4e86\u5f88\u591a\uff0c\u6211\u4eec\u4e3b\u5f20\u5728\u4efb\u4f55\u56fd\u5bb6\u7684\u4efb\u4f55\u56fd\u5bb6\u90fd\u5f00\u653e\uff0c\u8ba9\u6211\u4eec\u66f4\u5bb9\u6613\u96c7\u7528\u597d\u4eba\u624d\u3002\n \u7136\u540ecovid\u4e0e\u5176\u4ed6\u4eba\u4e00\u8d77\u6253\u6211\u4eec\u3002\u6211\u4eec\u5bf9\u8fdc\u7a0b\u5de5\u4f5c\u7684\u7ecf\u9a8c\u76f8\u5bf9\u5145\u6ee1\u4fe1\u5fc3\uff0c\u6211\u4eec\u8ba4\u4e3a\u6211\u4eec\u6bd4\u5176\u4ed6\u4eba\u66f4\u51c6\u5907\u5c31\u662f\u8ba9\u6bcf\u4e2a\u4eba\u5728\u5bb6\u91cc\u5de5\u4f5c\u3002\u6211\u4eec\u5f88\u5feb\u610f\u8bc6\u5230\u8fdc\u7a0b\u5de5\u4f5c\u5e76\u901a\u8fc7\u5927\u6d41\u884c\u5730\u5de5\u4f5c\u5e76\u4e0d\u76f8\u540c\u3002\n \u867d\u7136\u6211\u4eec\u62e5\u6709\u8f6f\u4ef6\u548c\u6587\u5316\u6765\u62e5\u62b1\u9065\u8fdc\u7684\u5458\u5de5\uff0c\u4f46\u5927\u6d41\u884c\u672c\u8eab\u5e26\u6765\u4e86\u65b0\u7684\u6311\u6218\u3002\u5728\u529e\u516c\u5ba4\u6216\u5bb6\u5ead\u4e2d\u6ca1\u6709\u80fd\u591f\u770b\u5230\u5bf9\u65b9\uff0c\u5e76\u4e14\u4eb2\u621a\u5728\u8fd9\u4e48\u957f\u65f6\u95f4\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u6536\u8d39\u4e86\u3002\u8fd9\u4e5f\u5f3a\u8c03\u4e86\u6211\u4eec\u4e4b\u524d\u6ca1\u6709\u610f\u8bc6\u5230\u7684\u4e0d\u5e73\u7b49\uff1a\u6709\u5c0f\u516c\u5bd3\uff0c\u5c0f\u5b69\u6216\u72ec\u81ea\u751f\u6d3b\u7684\u4eba\u6bd4\u4e0e\u4eb2\u621a\u4f4f\u5728\u4e00\u8d77\u7684\u4eba\u66f4\u96be\u6253\u51fb\u3002\n \u8fd9\u4e9b\u8270\u82e6\u5b66\u4e60\u7684\u8bfe\u7a0b\u63a8\u52a8\u4e86\u6211\u4eec\u5728Docker\u9020\u6210\u5de5\u4f5c\u7684\u672a\u6765\u7684\u65b9\u5f0f\u3002\u8ba9\u5458\u5de5\u6709\u52a9\u4e8e\u5efa\u7acb\u4ed6\u4eec\u7684\u5bb6\u5ead\u529e\u516c\u5ba4\uff0c\u5e2e\u52a9\u4ed6\u4eec\u4ece\u4e00\u4e2a\u57ce\u5e02\u642c\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\uff0c\u4e00\u822c\u82b1\u8d39\u8db3\u591f\u7684\u65f6\u95f4\u548c\u80fd\u91cf\uff0c\u786e\u4fdd\u6bcf\u4e2a\u4eba\u90fd\u8212\u670d\uff0c\u56e0\u4e3a\u6211\u4eec\u5411\u8fd9\u4e2a\u4ee4\u4eba\u5174\u594b\u7684\u5de5\u4f5c\u7ed3\u675f\u4e86\u3002 \n\u867d\u7136\u5176\u4ed6\u516c\u53f8\u6b63\u5728\u63a8\u52a8\u4ed6\u4eec\u7684\u5458\u5de5\u8fd4\u56de\u529e\u516c\u5ba4\uff0c\u4f46\u6211\u4eec\u51b3\u5b9a\u6ca1\u6709\u8f6c\u56deDocker Inc.\uff0c\u6211\u4eec\u5c06\u4fdd\u6301\u8fdc\u7a0b\u7b2c\u4e00\u3002 \u6211\u4eec\u6240\u6709\u7684\u529e\u4e8b\u5904\u90fd\u5173\u95ed\uff0c\u5e76\u5c06\u4fdd\u6301\u5982\u6b64\u3002 \u5f53Covid\u91ca\u653e\u5176\u5bf9\u4e16\u754c\u7684\u538b\u529b\u65f6\uff0c\u6211\u4eec\u5c06\u4e3a\u5458\u5de5\u63d0\u4f9b\u4f4f\u5728\u5f7c\u6b64\u652f\u6301\u9644\u8fd1\u7684\u5458\u5de5\uff0c\u4ee5\u4fbf\u5728\u8fce\u63a5\u5e76\u7ee7\u7eed\u5408\u4f5c\u548c\u63a8\u52a8\u6211\u4eec\u7684\u6587\u5316\uff0c\u540c\u65f6\u6211\u4eec\u5c06\u5bfb\u6c42\u8fd9\u6837\u505a\u7684\u673a\u4f1a\u4f5c\u4e3a\u6574\u4e2a\u516c\u53f8\u7684\u9065\u63a7\u5668\uff0c \u4f5c\u4e3a\u4e8b\u7269\u672a\u6765\u6062\u590d\u6b63\u5e38\u7684\u4eba\u3002  \u6211\u4eec\u4ece\u529e\u516c\u5ba4\u4e3a\u4e2d\u5fc3\u7684\u65c5\u7a0b\u5230\u9065\u8fdc\u7684\u9996\u5148\u4ee4\u4eba\u5174\u594b\uff0c\u6211\u4eec\u6e34\u671b\u66f4\u597d\u5730\u7ec8\u4e8e\u504f\u50fb\u3002  \u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5728\u4efb\u4f55\u5730\u65b9\u96c7\u7528\u4e86\u96c7\u7528\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u5bf9\u5728\u751f\u4ea7\u6709\u5f71\u54cd\u529b\u7684\u8f6f\u4ef6\u7684\u540c\u65f6\u4e0e\u6211\u4eec\u4e00\u8d77\u751f\u6d3b\u8fd9\u79cd\u7ecf\u9a8c\uff0c\u6211\u4eec\u5728\u5de5\u7a0b\u548c\u4ea7\u54c1\u65b9\u9762\u5f00\u653e\u4e86\u804c\u4f4d\u3002 ", "note_en": "Docker Inc. started like many startups with engineers working from a single location. For us, this was in the Bay Area in the US. We were very office-centric, so the natural way to increase diversity and to get engineers from different cultures to work together was to open new offices in diverse locations. Right from the start, our goal was to mix American and European ways of producing software, giving us the best of both cultures.\n  In 2015, Docker started to open offices in Europe, starting with Cambridge in the United Kingdom and followed by Paris in France. With these two locations, the long road to gaining experience working with remote employees began.\n Having multiple offices scattered around the world is different from being fully remote. But you still start experiencing some of the challenges of not having everybody in the same location simultaneously. We spent a great deal of our time on planes or trains visiting each other.\n Despite the robust open-source culture of the company, which shows that you can build great software while not having everybody in the same room, we still had a very office-centric culture. A lot of the context of a given product conversation or decision was linked to a given office. When you were not in the office where the decision was made, you only had partial information about the decision.\n We learned a lot during this time: organizing work effectively and enjoyably while appreciating different cultures, time zones (France and US West Coast are 9 hours apart\u2026), paperwork, salary expectations, public holidays, etc.\n  The products Docker builds have a significant impact on the world, so hiring great engineers has never been a problem at Docker. We were artificially limiting ourselves to hiring talent close to one of our offices. We could open more offices or start hiring people as fully remote wherever they lived. In 2017, we hired a couple of very experienced remote engineers who had 5+ years of experience working remotely. They brought a lot of their best practices, and with them, the company learned how to be better at working with remote engineers.\n One of the areas we made changes was in how we ran meetings. Instead of only having remote employees dial in and struggling to follow conversations in conference rooms, we got everyone, even those in offices, to dial in with a good headset so that everyone was on the same level. This drastically improves the quality of meetings for those who are remote.\n We also learned the power of good writing as time zones forced communication to be more asynchronous. Concise, clear, and effective, writing became critical.\n We worked hard on our company core values, one of them is \u201cOpen Collaboration\u201d. Following that value, we started to close 1600+ slack channels to concentrate our communication around just a few dozen. We advocated for communication to happen in public slack channels by default and limiting the usage of private channels to only when necessary.\n Remote engineers felt better, but there was still a life in the office they couldn\u2019t grasp, this is when we introduced  Wormholes. Wormholes are pretty low-tech, they are a monitor, a camera, and speakers open in the offices all day. Remote engineers connect to it, have a view of the offices, and can feel the ambiance and hear general conversations. They can also slack someone to come close to the wormhole for \u201cdirect\u201d communication. They were pretty popular until we left our offices to start working from home.\n  In early 2020, once we were pretty experienced at remote working, we advocated for all positions to be open in any country that we had legal entities, making it easier for us to hire good talent.\n Then Covid hit us along with everyone else. Relatively confident in our experience of working remotely, we thought that we were more ready than others to have everyone working at home. We quickly realized that working remotely and working remotely through a pandemic are not the same at all.\n While we had the software and culture to embrace a remote-first workforce, the pandemic itself brought new challenges. Not being able to see each other in the office or family and relatives for such a long time has taken a toll on everybody. This also highlighted inequality that we didn\u2019t realize before: people with small apartments, young kids, or living alone were hit harder than those living with relatives and enjoying a large house.\n These hard-learned lessons fueled the way we shape the future of work at Docker. Giving employees help to set up their home office, helping them move from one city to another, and generally spending enough time and energy making sure everybody is comfortable as we transition to this exciting new future of work.\n  While other companies are pushing their employees to get back to offices, we decided that there is no turning back for Docker Inc. and that we will stay remote-first. All of our offices are closed and will remain so. When Covid releases its pressure on the world, we will offer employees who live near to each other support to meet up and continue to collaborate and drive our culture, while we will look for chances to do this as a whole company both remote and in-person as things return to normal in the future.\n Our journey from office-centric to remote-first has been exciting, and we\u2019re eager to get even better at being remote-first.\n We are now in a position to hire almost wherever you are, so if you\u2019re interested in living this experience with us while producing impactful software, we have  positions open in Engineering and Product.", "posttime": "2021-06-21 04:30:18", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e2d\u5fc3,office,\u529e\u516c\u5ba4", "title": "\u6211\u4eec\u4ece\u529e\u516c\u5ba4\u4e3a\u4e2d\u5fc3\u7684\u65c5\u7a0b\u5230\u9065\u63a7\u5668 ", "title_en": "Our journey from office-centric to remote-first", "transed": 1, "url": "https://www.docker.com/blog/our-journey-from-office-centric-to-remote-first/", "via": "", "real_tags": ["\u4e2d\u5fc3", "office", "\u529e\u516c\u5ba4"]}, {"category": "", "categoryclass": "", "imagename": "b97ace244fb1485a9fc31e265ca299e3.jpg", "infoid": 1067077, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0d\uff0c\u6211\u4eec\u6ca1\u6709\u5a01\u80c1\u4f60\u3002\u6211\u4eec\u795d\u4f60\u751f\u6d3b\u6f2b\u957f\u800c\u5065\u5eb7\u3002 100\u5e74\u591a\uff01\n \u60a8\u53ef\u80fd\u5df2\u7ecf\u770b\u5230CPU\u7684\u6f14\u53d8 - \u4ece16\u4f4d\u523032\u4f4dCPU\uff0c\u7a0d\u540e\u4ece32\u4f4d\u523064\u4f4dCPU\u3002\u903b\u8f91\u95ee\u9898\u51fa\u73b0 -  128\u4f4d\u5904\u7406\u5668\u4f55\u65f6\u5230\u8fbe\uff1f\n 128\u4f4dCPU\u5728\u8c08\u8bba\u8ba1\u7b97\u673a\u67b6\u6784\u65f6\uff0c\u610f\u5473\u7740\u8be5\u5904\u7406\u5668\u5fc5\u987b\u5177\u6709128\u4f4d\u6574\u6570\u548c128\u4f4d\u603b\u7ebf\u3002\u5b83\u4e0d\u662f\u6bd464\u4f4d\u66f4\u597d\u7684x2\u3002\u8fd9\u6839\u672c\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u3002\n \u867d\u7136\u5728\u8fc7\u53bb\u6709\u9700\u8981\u89e3\u51b3\u66f4\u591a\u5185\u5b58\u4e2d\uff0c\u4f46\u76ee\u524d\u768464\u4f4dCPU\u53ef\u4ee5\u5904\u7406\u60a8\u751a\u81f3\u65e0\u6cd5\u60f3\u8c61\u7684\u8fd9\u4e48\u591a\u7684RAM\u3002\u8981\u7cbe\u786e\uff0c\u91d1\u989d\u4e3a2 ^ 64\u5b57\u8282\u621618.44\u4e2aexabytes\u3002 1 exabyte\u662f10\u4ebf\u5343\u5146\u5b57\u8282\uff01\u4f60\u4e0d\u4f1a\u770b\u5230\u8fd9\u4e2a\u6570\u91cf\u7684\u516c\u7f8a\u53ef\u80fd\u6c38\u8fdc\u5728\u4f60\u7684\u751f\u6d3b\u4e2d\u3002\u5bf9\u4e8e32\u4f4d\u7cfb\u7edf\uff0c4 GB\u53ef\u4ee5\u8db3\u591f\u62168 GB\u572864\u4f4dOS\u4e0a\u8fd0\u884c\u7684\u6b63\u5e38\u529e\u516c\u5ba4\u5de5\u4f5c\u4e5f\u53ef\u4ee5\u5de5\u4f5c\u3002\u4e00\u4e9b\u5207\u524a\u5203\u5668\u4ef6\u5177\u670964 GB\u751a\u81f3128 GB\uff0c\u4f46\u5728\u5f88\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u662f\u91cd\u578bCAT\u5e94\u7528\u7a0b\u5e8f\u6216\u89c6\u9891\u7f16\u8f91\u7b49\u7684\u5f88\u5c11\u60c5\u51b5\u4e0b\u3002\n \u6211\u4eec\u76ee\u524d\u6b63\u5728\u4f7f\u752864\u4f4d\u5904\u7406\u5668\uff0c\u4f46\u901a\u5e38\uff0c\u603b\u7ebf\u4e0d\u662f64\u4f4d\u3002\u66f4\u50cf40\u4f4d\u621648\u4f4d\u3002\u8fd9\u79cd\u7279\u70b9\u4ecd\u7136\u6709\u53ef\u80fd\u6539\u5584\u3002\n \u4ece64\u4f4d\u5230\u4e00\u4e2a128\u4f4dCPU\u5c06\u9700\u8981\u66f4\u591a\u5185\u5b58\u3002\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5de8\u5927\u7684\u7f13\u5b58\u5927\u5c0f\u3002\u5426\u5219\uff0c\u7a0b\u5e8f\u5c06\u53ea\u662f\u8fd0\u884c\u901f\u5ea6\u3002\n \u5b83\u9700\u8981\u66f4\u591a\u7684\u529b\u91cf\u3002\u8fd9\u79cd\u5904\u7406\u5668\u7684\u5c3a\u5bf8\u660e\u663e\u8f83\u5927\uff0c\u4e5f\u5c06\u91ca\u653e\u66f4\u591a\u7684\u70ed\u91cf\u3002\u8fd9\u53ef\u80fd\u662f\u975e\u5e38\u4e0d\u5207\u5b9e\u9645\u7684\u3002\u4ece\u5b57\u9762\u4e0a\u6ca1\u6709\u4eba\u60f3\u8981\u66f4\u5927\u548c\u66f4\u91cd\u7684\u8bbe\u5907\u3002 \n\u6bcf\u4e2aWAT\u7684\u4ef7\u683c\u4e5f\u592a\u8d35\u4e86\u3002 \u521b\u5efa128\u4f4dCPU\u5c06\u662f\u8fdc\u8fdc\u80dc\u5229\u3002  \u53e6\u4e00\u4e2a\u7f3a\u70b9\u662f\u9700\u8981128\u4f4dOS\u548c\u9a71\u52a8\u7a0b\u5e8f\u3002 \u5982\u679c\u4e0d\u80fd\u6b63\u786e\u4f7f\u7528\u8fd9\u79cd\u5904\u7406\u5668\uff0c\u5b83\u5c06\u662f\u6beb\u65e0\u610f\u4e49\u7684\u3002 \u73b0\u5728\uff0cMicrosoft\u548cApple\u90fd\u6ca1\u6709\u8003\u8651\u521b\u5efa\u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u3002  ARM\u7684\u9ad8\u7ba1\u4e4b\u4e00\u8868\u793a\uff0c\u8be5\u516c\u53f8\u201c\u6ca1\u6709\u8ba1\u5212128\u4f4d\u6276\u624b\u82af\u7247\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ea\u662f\u4e0d\u9700\u8981\u3002\u201d  \u5f53\u7136\u6709\u4e00\u5929\uff0c\u7ecf\u8fc7\u591a\u5e74\uff0c\u6211\u4eec\u5c06\u5f00\u59cb\u4f7f\u7528128\u4f4d\u5904\u7406\u5668\uff0c\u4f46\u663e\u7136\uff0c\u5b83\u4e0d\u4f1a\u5f88\u5feb\u3002 ", "note_en": "No, we are not threatening you. We wish you a long and healthy life. 100 years and more!\n You have probably seen the evolution of CPUs \u2013 from 16-bit to 32-bit CPUs and later from 32-bit to 64-bit CPUs. The logical question arises \u2013 when will 128-bit processors arrive?\n 128-bit CPU, when talking about computer architecture, means that this processor must have 128-bit integers and a 128-bit bus. It is not x2 better than 64-bit. It is not that simple at all.\n While in the past there was a need to address more memory, the current 64-bit CPUs can handle so much RAM that you can\u2019t even imagine. To be precise, the amount is 2^64 bytes or 18.44 exabytes. 1 exabyte is 1 billion gigabytes! You won\u2019t see this amount of RAM probably ever in your life. 4 Gb for a 32-bit system can be sufficient or 8 Gb for normal office work on a 64-bit OS would also work. Some cutting edge devices have 64 Gb or even 128 Gb, but this is required in very few situations like heavy CAT applications or video editing.\n We are currently using 64-bit processors, but usually, the bus is not 64 bits. More like 40-bit or 48-bit. This characteristic still has the possibility to improve.\n Going to a 128-bit CPU from a 64-bit one will require more memory. We will need a huge cache size. Otherwise, the program will just run slowlier.\n It will require a lot more power. Such a processor will be significantly bigger in size and it will release more heat too. This can be very impractical. Literally nobody wants bigger and heavier devices.\n The price per wat will also be too expensive. It will be far costlier to create a 128-bit CPU.\n Another disadvantage will be the need for a 128-bit OS and drivers. It will be pointless if such a processor can\u2019t be properly utilized. For now neither Microsoft nor Apple are even thinking of creating such an OS.\n One of the executives of ARM stated that the company \u201chas no plans for 128-bit ARM-based chips because they simply aren\u2019t needed.\u201d\n Surely one day, after many, many years we will start using 128-bits processors, but obviously, it won\u2019t be soon.", "posttime": "2021-06-21 04:30:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6d3b\u7740,won", "title": "\u4f60\u4e0d\u4f1a\u6d3b\u7740\u770b\u5230128\u4f4dCPU\uff082019\uff09 ", "title_en": "You won\u2019t live to see a 128bit CPU (2019)", "transed": 1, "url": "https://blog.cloudware.bg/en/you-wont-live-to-see-a-128bit-cpu/", "via": "", "real_tags": ["\u6d3b\u7740", "won"]}, {"category": "", "categoryclass": "", "imagename": "cebdd5b7ec4278401d25a58ba0bda8b9.jpg", "infoid": 1067076, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u897f\u975e\u7ecf\u5171\u4f53\u9886\u5bfc\u4eba\u540c\u610f\u52302027\u5e741\u6708\u52302027\u5e741\u6708\u7684\u5f00\u5c55\u5355\u4e00\u8d27\u5e01\u3002  \u897f\u975e\u533a\u57df\u96c6\u56e2\u8ba1\u5212\u57282020\u5e74\u8ba1\u5212\u91c7\u7528\u547c\u5401ECO\u7684\u8d27\u5e01\uff0c\u4f46\u8868\u793a\uff0c\u8def\u7ebf\u56fe\u88ab\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u6270\u4e71\u3002  \u7136\u800c\uff0c\u661f\u671f\u516d\u7136\u800c\uff0c\u897f\u975e\u9886\u5bfc\u4eba\u5728\u52a0\u7eb3\u9996\u90fd\u7684\u9996\u8111\u4f1a\u8bae\uff0cAccra\u540c\u610f\u4e00\u6761\u65b0\u7684\u8def\u7ebf\u56fe\u6765\u63a8\u51fa\u5355\u4e00\u8d27\u5e01\u3002  Ecowas\u59d4\u5458\u4f1a\u4e3b\u5e2dJean-Claude Kassi Brou\u544a\u8bc9\u8bb0\u8005\uff0c\u5927\u6d41\u884c\u610f\u5473\u7740\u5fc5\u987b\u91c7\u7528\u65b0\u7684\u6218\u7565\u3002  \u201c\u6211\u4eec\u6709\u4e00\u4e2a\u65b0\u7684\u8def\u7ebf\u56fe\u548c\u4e00\u4e2a\u65b0\u7684\u878d\u5408\u534f\u8bae\uff0c\u5c06\u6db5\u76d62022-2026\u4e4b\u95f4\u7684\u671f\u9650\uff0c2027\u5e74\u662f\u751f\u6001\u7684\u63a8\u51fa\uff0c\u201d\u4ed6\u8bf4\u3002  \u76ee\u524d\u7684\u8def\u7ebf\u56fe\u4fee\u8ba2\u662f\u63d0\u4f9b\u4f1a\u5458\u56fd\u8db3\u591f\u7684\u65f6\u95f4\u6765\u6ee1\u8db3\u901a\u8fc7\u8d27\u5e01\u7684\u5fc5\u8981\u6807\u51c6\u3002  \u4ee5\u524d\u7684\u8def\u7ebf\u56fe\u8981\u6c42\u6240\u6709\u6210\u5458\u56fd\u8fbe\u5230\u4e86\u4e09\u9879\u8d27\u5e01\u7684\u4e3b\u8981\u6807\u51c6\u3002 \n\u5305\u62ec\u9884\u7b97\u8d64\u5b57\u7684\u6210\u5458\u56fd\u4e0d\u8d85\u8fc73\uff05; \u5e74\u5e73\u5747\u5e74\u589e\u957f\u7387\u4e0d\u523010\uff05\uff0c\u957f\u671f\u76ee\u6807\u4e0d\u8d85\u8fc75\uff05\u3002  \u9884\u8ba1\u5404\u56fd\u4e5f\u6709\u6bdb\u989d\u50a8\u5907\uff0c\u53ef\u4ee5\u878d\u8d44\u81f3\u5c11\u4e09\u4e2a\u6708\u7684\u8fdb\u53e3\u3002  Ecowas\u91c7\u7528\u7684\u5176\u4ed6\u6536\u655b\u6807\u51c6\u662f\u516c\u5171\u503a\u52a1\u6216\u56fd\u5185\u751f\u4ea7\u603b\u503c\u4e0d\u8d85\u8fc770\uff05\u3002  \u4e2d\u592e\u94f6\u884c\u878d\u8d44\u9884\u7b97\u7f3a\u9677\u7684\u95ee\u9898\u4e0d\u8d85\u8fc7\u524d\u4e00\u5e74\u7684\u7a0e\u6536\u6536\u5165\u768410\uff05\uff0c\u4ee5\u53ca\u52a0\u53f7\u6216\u51cf\u53bb10\uff05\u7684\u540d\u4e49\u6c47\u7387\u53d8\u5316\u3002  \u5927\u591a\u6570\u6210\u5458\u56fd\u672a\u80fd\u8fbe\u52302019\u5e74\u7684\u6807\u51c6\uff0c\u5e76\u4e14\u8fdc\u8fdc\u4e0d\u5e94\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u4e2d\u968f\u65f6\u6ee1\u8db3\u6807\u51c6\u3002  \u5b83\u5305\u62ec\u8d1d\u5b81\uff0c\u5e03\u57fa\u7eb3\u6cd5\u7d22\uff0c\u4f5b\u5f97\u89d2\uff0c\u5188\u6bd4\u4e9a\uff0c\u52a0\u7eb3\uff0c\u51e0\u5185\u4e9a\uff0c\u51e0\u5185\u4e9a\u6bd4\u7ecd\uff0c\u8c61\u7259\u6d77\u5cb8\uff0c\u5229\u6bd4\u91cc\u4e9a\uff0c\u9a6c\u91cc\uff0c\u5c3c\u65e5\u5c14\uff0c\u5c3c\u65e5\u5229\u4e9a\uff0c\u585e\u5185\u52a0\u5c14\uff0c\u585e\u62c9\u5229\u6602\u548c\u591a\u54e5\u3002 ", "note_en": "Ecowas leaders have agreed to now work towards launching a single currency by January 2027.\n The West African regional bloc had planned to adopt the currency called  Eco in 2020 but said the road map was disrupted by the Coronavirus pandemic.\n On Saturday however the West African leaders at a summit in Ghana\u2019s capital, Accra agreed a new road map to launch the single currency.\n ECOWAS Commission President Jean-Claude Kassi Brou told reporters that the pandemic meant a new strategy had to be adopted.\n \u201cWe have a new road map and a new convergence pact that will cover the period between 2022-2026, and 2027 being the launch of the eco,\u201d he said.\n  The current revision of the road map is to afford member states enough time to meet the necessary criteria for the adoption of the currency.\n Previous roadmap required that all member countries met three primary criteria for the adoption of the currency.\n That included member countries having a budget deficit of not more than 3 percent; average annual inflation of less than 10 percent with a long-term goal of not more than 5 percent.\n Countries were expected to also have gross reserves that can finance at least three months of imports.\n  The other convergence criteria that was adopted by ECOWAS was public debt or Gross Domestic Product of not more than 70 percent.\n There was also the issue of central banks financing budget deficit not more than 10 percent of previous year\u2019s tax revenue, and nominal exchange rate variation of plus or minus 10 percent.\n Majority of the member countries have failed to meet the criteria as at 2019 and are far from meeting the criteria anytime soon amid the coronavirus pandemic.\n  It comprises Benin, Burkina Faso, Cape Verde, Gambia, Ghana, Guinea, Guinea-Bissau, Ivory Coast, Liberia, Mali, Niger, Nigeria, Senegal, Sierra Leone and Togo.", "posttime": "2021-06-21 04:25:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u897f\u975e\u56fd\u5bb6,african,\u8def\u7ebf\u56fe", "title": "\u897f\u975e\u56fd\u5bb6\u57282027\u5e74\u91c7\u7528\u5355\u4e00\u8d27\u5e01 ", "title_en": "West African countries to adopt single currency in 2027", "transed": 1, "url": "https://africafeeds.com/2021/06/20/west-african-countries-to-adopt-single-currency-in-2027/", "via": "", "real_tags": ["\u897f\u975e\u56fd\u5bb6", "african", "\u8def\u7ebf\u56fe"]}, {"category": "", "categoryclass": "", "imagename": "03d8d57a3dd66b26d2cf8e1de9e05377.jpg", "infoid": 1067075, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde\u65af\u6258\u514b\u65af\u5e02\u8e0f\u4e0a\u4e86\u5927\u80c6\u7684\u5b9e\u9a8c\uff1a\u5b83\u51b3\u5b9a\u5c06\u6bcf\u6708500\u7f8e\u5143\u5206\u53d1\u7ed9125\u4eba24\u4e2a\u6708 - \u6ca1\u6709\u4efb\u4f55\u6761\u4ef6\uff0c\u6ca1\u6709\u4efb\u4f55\u5de5\u4f5c\u8981\u6c42\u3002\u4eba\u6c11\u88ab\u968f\u673a\u4ece\u57ce\u5e02\u4e2d\u4f4d\u5bb6\u5ead\u6536\u5165\u6216\u4f4e\u4e8e\u5e02\u4e2d\u5fc3\u7684\u5bb6\u5ead\u6536\u5165\u4e2d\u9009\u62e9\u7684\uff0c\u4ed6\u4eec\u53ef\u4ee5\u81ea\u7531\u5730\u82b1\u94b1\uff0c\u4ed6\u4eec\u559c\u6b22\u4efb\u4f55\u4eba\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7814\u7a76\u4eba\u5458\u7814\u7a76\u4e86\u5bf9\u5176\u751f\u6d3b\u7684\u5f71\u54cd\u3002\n \u4ece2019\u5e742\u6708\u52302020\u5e742\u6708\u52302020\u5e742\u6708\u7684\u5b9e\u9a8c\u7684\u7ed3\u679c\u73b0\u5df2\u8fdb\u5165\u3002\u4ed6\u4eec\u5bf9\u5176\u53c2\u4e0e\u8005\u6765\u8bf4\u975e\u5e38\u4ee4\u4eba\u9f13\u821e\uff0c\u5e76\u4e14\u5021\u5bfc\u8005\u8ba4\u4e3a\u65e0\u6761\u4ef6\u73b0\u91d1\u8f6c\u79fb\u4f5c\u4e3a\u5e2e\u52a9\u4eba\u4eec\u9003\u8131\u8d2b\u56f0\u7684\u6709\u6548\u9014\u5f84\u3002\n \u6700\u4ee4\u4eba\u773c\u82b1\u7f2d\u4e71\u7684\u53d1\u73b0\u662f\uff0c\u6536\u5230\u73b0\u91d1\u7684\u4eba\u4eec\u7ba1\u7406\uff0c\u4ee5\u786e\u4fdd\u4e00\u4e2a\u672a\u6536\u5230\u73b0\u91d1\u7684\u4eba\u5458\u4e2d\u7684\u4eba\u5458\u7684\u901f\u5ea6\u8d85\u8fc7\u4e24\u500d\u3002\u5728\u4e00\u5e74\u5185\uff0c\u6709\u5168\u804c\u5de5\u4f5c\u7684\u73b0\u91d1\u63a5\u6536\u8005\u7684\u6bd4\u4f8b\u4ece28\uff05\u8fbe\u523040\uff05\u3002\u5bf9\u7167\u7ec4\u5728\u540c\u4e00\u65f6\u671f\u770b\u5230\u53ea\u67095\uff05\u7684\u8df3\u8dc3\u3002\n \u7814\u7a76\u4eba\u5458\u5728\u4ed6\u4eec\u7684\u62a5\u544a\u4e2d\u5199\u9053\uff0c\u8fd9\u7b14\u94b1\u7ed9\u4e88\u4e86\u6536\u4ef6\u4eba\uff0c\u4ed6\u4eec\u9700\u8981\u8bbe\u5b9a\u76ee\u6807\uff0c\u5192\u9669\uff0c\u5192\u9669\uff0c\u627e\u5230\u65b0\u7684\u5c31\u4e1a\u673a\u4f1a\u3002\u4ed630\u591a\u5c81\u7684\u4e00\u4e2a\u4eba\u6709\u8d44\u683c\u83b7\u5f97\u4e00\u5e74\u591a\u7684\u623f\u5730\u4ea7\u8bb8\u53ef\u8bc1\uff0c\u4f46\u6ca1\u6709\u5f97\u5230\u5b83\uff0c\u56e0\u4e3a\u4ed6\u65e0\u6cd5\u627f\u53d7\u4f11\u5047\u5de5\u4f5c\u3002\u4ed6\u8bf4\uff0c\u7531\u4e8e\u6bcf\u6708500\u7f8e\u5143\u6240\u63d0\u4f9b\u7684\u81ea\u7531\uff0c\u4ed6\u8bf4\uff0c\u4ed6\u7684\u751f\u547d\u662f\u201c\u8f6c\u6362\u4e86360\u5ea6......\u56e0\u4e3a\u6211\u6709\u66f4\u591a\u7684\u65f6\u95f4\u548c\u51c0\u8d44\u6599\u6765\u7814\u7a76......\u5b9e\u73b0\u6211\u7684\u76ee\u6807\u3002\u201d\n  \u73b0\u91d1\u63f4\u52a9\u8ba1\u5212\u7684\u6279\u8bc4\u8005\u7ecf\u5e38\u8bf4\uff0c\u53d1\u51fa\u201c\u514d\u8d39\u8d44\u91d1\u201d\u5c06\u4f7f\u4eba\u4eec\u66f4\u5c11\u503e\u5411\u4e8e\u627e\u5230\u5de5\u4f5c\u3002\u4f46\u5728\u8fc4\u4eca\u4e3a\u6b62\u7684\u7814\u7a76\u4e2d\uff0c\u65e0\u6761\u4ef6\u73b0\u91d1\u5e76\u672a\u503e\u5411\u4e8e\u6291\u5236\u5de5\u4f5c\u3002\u5728\u51e0\u4e2a\u65b9\u6848 - \u6765\u81ea\u7f8e\u56fd\u7684\u963f\u62c9\u65af\u52a0\u548c\u5317\u5361\u7f57\u6765\u7eb3\u5dde\uff0c\u5728\u6b27\u6d32\u5230\u82ac\u5170\u548c\u897f\u73ed\u7259 - \u5b83\u65e0\u8bba\u5982\u4f55\u90fd\u6ca1\u6709\u5bf9\u5c31\u4e1a\u5f71\u54cd\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b83\u4f3c\u4e4e\u4f7f\u4eba\u4eec\u5f2f\u66f2\u4e86\u521b\u4e1a\u5f2f\u66f2\u7684\u4eba;\u4f8b\u5982\uff0c\u5728\u65e5\u672c\uff0c\u521d\u59cb\u8c03\u67e5\u7ed3\u679c\u8868\u660e\uff0c\u6536\u4ef6\u4eba\u5bf9\u542f\u52a8\u65b0\u4e1a\u52a1\u7684\u6bd4\u8f83\u662f3.9\u500d\u3002\n \u9664\u4e86\u65e0\u6761\u4ef6\u73b0\u91d1\u8ba1\u5212\u4e4b\u5916\uff0c\u6487\u5f00\u5c31\u4e1a\u3002 Stockton\u5b9e\u9a8c - \u88ab\u79f0\u4e3a\u968f\u673a\u5bf9\u7167\u8bd5\u9a8c\uff0c\u5e76\u8fdb\u884c\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u8bc4\u4f30 - \u589e\u52a0\u4e86\u6765\u81ea\u4e16\u754c\u5404\u5730\u7684\u57fa\u672c\u6536\u5165\u5b9e\u9a8c\u7684\u8d8a\u6765\u8d8a\u591a\u7684\u8bc1\u636e\uff0c\u8fd9\u8868\u660e\u65e0\u6761\u4ef6\u73b0\u91d1\u503e\u5411\u4e8e\u63d0\u9ad8\u5e78\u798f\uff0c\u5065\u5eb7\uff0c\u5b66\u6821\u51fa\u52e4\u548c\u548c\u76f8\u4fe1\u793e\u4f1a\u673a\u6784\uff0c\u540c\u65f6\u51cf\u5c11\u72af\u7f6a\u3002\n   Stockton\u8ba1\u5212\u8fd8\u6709\u5176\u4ed6\u597d\u5904\u3002\u73b0\u91d1\u6536\u4ef6\u4eba\u62a5\u544a\u7684\u7126\u8651\u548c\u90c1\u90c1\u8f83\u4f4e\uff0c\u800c\u4e0d\u662f\u5bf9\u7167\u7ec4\u3002\u6839\u636e\u7814\u7a76\u4eba\u5458\u7684\u8bf4\u6cd5\uff0c\u5e73\u5747\u800c\u8a00\uff0c\u53d7\u8bd5\u8005\u201c\u5728\u4ed6\u4eec\u7684\u5fc3\u7406\u5065\u5eb7\u4e2d\u4e34\u5e8a\u548c\u7edf\u8ba1\u5b66\u4e0a\u663e\u7740\u6539\u5584\u4e86\u5bf9\u7167\u7ec4\u7684\u4e34\u5e8a\u548c\u7edf\u8ba1\u5b66\u4e0a\u7684\u663e\u7740\u6539\u5584\uff0c\u5373\u5bf9\u7167\u7ec4\u7684\u53ef\u80fd\u6027\u5f88\u5927\u3002 \n\u73b0\u91d1\u4e5f\u652f\u6301\u6536\u4ef6\u4eba\u6765\u5e2e\u52a9\u4ed6\u4eec\u7684\u5bb6\u4eba\u548c\u670b\u53cb\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u5973\u4eba\u4f7f\u7528\u73b0\u91d1\u6765\u5e2e\u52a9\u5979\u7684\u5144\u5f1f\u59d0\u59b9\u8d2d\u4e70\u5b69\u5b50\u4eec\u7684\u5b69\u5b50\u4eec\uff0c\u5e2e\u52a9\u5979\u7684\u5ab3\u5987\u652f\u4ed8\u6c7d\u8f66\u4fdd\u9669\u3002\u53e6\u4e00\u4e2a\u4e70\u4e86\u5979\u7684\u5b59\u5b50\u7684\u5c3f\u5e03\u3002\n \u8fd9\u4e0d\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u770b\u5230\u73b0\u91d1\u8bfe\u7a0b\u5bf9\u66f4\u5e7f\u6cdb\u7684\u793e\u533a\u5177\u6709\u79ef\u6781\u7684\u6d9f\u6f2a\u6548\u5e94\u3002\u5728\u80af\u5c3c\u4e9a\uff0c\u73b0\u91d1\u8f6c\u79fb\u523a\u6fc0\u4e86\u7ecf\u6d4e\uff0c\u4e0d\u4ec5\u53d7\u5230\u6536\u4ef6\u4eba\u672c\u8eab\uff0c\u800c\u4e14\u5728\u9644\u8fd1\u7684\u6751\u5e84\u4e2d\u53d7\u76ca\u3002\n \u503c\u5f97\u6ce8\u610f\u7684\u662fStockton\u8bd5\u9a8c\u4e2d\u7684\u76b1\u7eb9\uff1a\u6bcf\u4e2a\u53c2\u4e0e\u8005\u6bcf\u6708\u5728\u501f\u8bb0\u5361\u4e0a\u7ed9\u4e88500\u7f8e\u5143\uff0c\u4ee5\u4fbf\u7814\u7a76\u4eba\u5458\u80fd\u591f\u770b\u5230\u4ed6\u4eec\u5982\u4f55\u4f7f\u7528\u8fd9\u7b14\u94b1\u3002\u7136\u800c\uff0c\u5b83\u768440\uff05\u88ab\u64a4\u56de\u4e3a\u73b0\u91d1\u6216\u8f6c\u79fb\u5230\u73b0\u6709\u7684\u94f6\u884c\u8d26\u6237\uff0c\u56e0\u6b64\u7814\u7a76\u4eba\u5458\u5fc5\u987b\u4f9d\u8d56\u53c2\u4e0e\u8005\u544a\u8bc9\u4ed6\u4eec\u8d44\u91d1\u6240\u5728\u7684\u5730\u65b9\u3002\n \u5728\u501f\u8bb0\u5361\u4e0a\u8ffd\u8e2a\u7684\u8d44\u91d1\uff0c\u6536\u4ef6\u4eba\u6700\u591a\u82b1\u5728\u98df\u54c1\uff0837\uff05\uff09\uff0c\u5bb6\u5ead\u8d27\u7269\u548c\u8863\u670d\uff0822\uff05\uff09\uff0c\u516c\u7528\u4e8b\u4e1a\uff0811\uff05\uff09\u548c\u6c7d\u8f66\u6210\u672c\uff0810\uff05\uff09\u4e0a\u3002\u4ed6\u4eec\u82b1\u4e86\u4f4e\u4e8e1\uff05\u7684\u9152\u7cbe\u6216\u9999\u70df\u3002\n \u867d\u7136\u8fd9\u4e9b\u6570\u5b57\u65e0\u6cd5\u6355\u83b7\u5b8c\u6574\u7684\u56fe\u7247\uff0c\u4f46\u4ed6\u4eec\u63d0\u4f9b\u4e86\u6709\u5bb3\u7684\u523b\u677f\u5370\u8c61\u548c\u9519\u8bef\u7684\u5047\u8bbe\uff0c\u5426\u5219\u90a3\u4e9b\u53d8\u5f97\u7cdf\u7cd5\u7684\u4eba\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u7406\u6027\u51b3\u7b56\u548c\u81ea\u6211\u63a7\u5236\u7684\u7cdf\u7cd5\uff0c\u4ed6\u4eec\u4f1a\u5728\u8f7b\u6d6e\u7684\u4e1c\u897f\u6216\u4e0a\u763e\u7684\u7269\u8d28\u4e0a\u5439\u514d\u8d39\u91d1\u94b1\u3002\u8bc1\u636e\u4e0d\u652f\u6301\u8fd9\u4e9b\u4fe1\u4ef0\u3002\n Stockton Experiment\u662f\u4e00\u9879\u5c0f\u578b\u7814\u7a76\uff0c\u53ea\u6709125\u4e2a\u73b0\u91d1\u63a5\u6536\u8005\uff0c\u6240\u4ee5\u8c03\u67e5\u7ed3\u679c\u5e94\u88ab\u89c6\u4e3a\u63d0\u4f9b\u6709\u5173\u73b0\u91d1\u8ba1\u5212\u6709\u6548\u6027\u800c\u4e0d\u662f\u660e\u786e\u72ec\u7acb\u8bc1\u636e\u7684\u652f\u6301\u8bc1\u636e\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u9879\u6148\u5584\u8d44\u52a9\u7684\u8ba1\u5212\u7684\u7ed3\u679c - \u6b63\u5f0f\u79f0\u4e3a\u65af\u6258\u514b\u987f\u7ecf\u6d4e\u8d4b\u6743\u793a\u8303\uff08\u79cd\u5b50\uff09\uff0c\u4ece\u7ecf\u6d4e\u5b89\u5168\u9879\u76ee\u83b7\u5f97100\u4e07\u7f8e\u5143\u7684\u6279\u51c6 - \u5e2e\u52a9\u5f3a\u8c03\u8d2b\u56f0\u662f\u7f3a\u4e4f\u73b0\u91d1\uff0c\u800c\u4e0d\u662f\u6027\u683c\uff0c\u800c\u4e14\u6709\u7528\u7684\u8d2b\u56f0\u5bf9\u7f5a\u7403\u7684\u8bc1\u636e\uff0c\u514d\u8d39\u91d1\u94b1\u4e0d\u4f1a\u6291\u5236\u5c31\u4e1a - \u5b83\u5b9e\u9645\u4e0a\u53ef\u4ee5\u63d0\u9ad8\u5b83\u3002\n   \u7531\u4e8e\u62dc\u767b\u653f\u5e9c\u8bd5\u56fe\u63a8\u52a8\u5c06\u901a\u8fc7\u76f4\u63a5\u68c0\u67e5\u6570\u767e\u4e07\u7f8e\u56fd\u4eba\u7684\u5927\u6d41\u884c\u63f4\u52a9\u65b9\u6848\uff0c\u56e0\u6b64\u91ca\u653e\u7f5a\u91d1\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6539\u5584\u5de5\u4f5c\u524d\u666f\u7684\u4fe1\u606f\u3002 \n\u5927\u6d41\u884c\u4f7f\u5f97\u76f4\u63a5\u652f\u4ed8\u66f4\u53d7\u6b22\u8fce\u3002\u968f\u7740Covid-19\u5371\u673a\u4ea7\u751f\u5982\u6b64\u591a\u7684\u8d22\u52a1\u635f\u5931\u548c\u4e0d\u786e\u5b9a\u6027\uff0c\u5021\u5bfc\u8005\u8ba4\u4e3a\u516c\u6c11\u8feb\u5207\u9700\u8981\u67d0\u79cd\u6536\u5165\u697c\u5c42\u3002\u800c\u4e14\uff0c\u5728\u8fd9\u79cd\u80cc\u666f\u4e0b\uff0c\u79cd\u5b50\u5df2\u7ecf\u4ea7\u751f\u4e86\u66f4\u5927\u7684\u4e1c\u897f\uff1a\u5e02\u957f\u4e3a\u4fdd\u8bc1\u6536\u5165\uff0c\u662f\u4e00\u540d\u5e02\u957f\u7684\u8054\u76df\uff0c\u4ed6\u6b63\u5728\u63a8\u52a8\u7f8e\u56fd\u5b9e\u65bd\u8054\u90a6\u4fdd\u969c\u6536\u5165\u3002\u79cd\u5b50\u548c\u5e02\u957f\u8054\u76df\u90fd\u662f\u65af\u6258\u514b\u987f\u524d\u5e02\u957fMichael Tubbs\u7684Brainchild\u3002\n \u591a\u5e74\u6765\uff0cTubbs\u4fc3\u8fdb\u4e86\u4fdd\u8bc1\u6536\u5165\u53ef\u4ee5\u6539\u53d8\u65af\u6258\u514b\u987f\u5c45\u6c11\u7684\u751f\u6d3b\u7684\u60f3\u6cd5\uff0c\u4f46\u4ed6\u4e5f\u660e\u786e\u4e86\u8fd9\u4e2a\u5b9e\u9a8c\u6bd4\u4ed6\u7684\u57ce\u5e02\u66f4\u591a\u3002 \u201c\u65af\u6258\u514b\u65af\u662f\u7f8e\u56fd\u7684\u4ee3\u7406\uff1a\u5b83\u7684\u591a\u6837\u6027\uff0c\u5176\u4eba\u6c11\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u8fd9\u662f\u4e00\u4e2a\u65b0\u5174\uff0c\u6709\u5927\u80c6\u7684\u60f3\u6cd5\u7684\u5730\u65b9\u3002\u201d\n \u4fdd\u8bc1\u6536\u5165\u662f\u4e00\u4e2a\u5927\uff0c\u5927\u80c6\u7684\u60f3\u6cd5\uff0c\u5982\u679c\u66f4\u5e7f\u6cdb\u5b9e\u65bd\uff0c\u53ef\u4ee5\u6539\u5584\u6570\u767e\u4e07\u7f8e\u56fd\u4eba\u7684\u751f\u6d3b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e0d\u662f\u4e00\u79cd\u6cbb\u7597\uff0c\u4f7f\u4eba\u4eec\u80fd\u591f\u8ba9\u4eba\u4eec\u4ece\u5065\u5eb7\uff0c\u7a33\u5b9a\u7684\u751f\u6d3b\u4e2d\u4fdd\u6301\u5065\u5eb7\u3002\n \u968f\u7740\u79cd\u5b50\u7814\u7a76\u4eba\u5458\u5728\u5176\u62a5\u544a\u4e2d\u5199\u9053\uff0c\u201c\u4fdd\u8bc1\u6536\u5165\u4e0d\u5e94\u88ab\u89c6\u4e3a\u5bb6\u5ead\u7a33\u5b9a\u7684\u5947\u5f02\u65b9\u6cd5\uff0c\u800c\u662f\u4f5c\u4e3a\u4e0e\u5176\u4ed6\u4eba\u4e00\u8d77\u5b9e\u65bd\u7684\u4e00\u9879\u653f\u7b56\u9009\u62e9\uff0c\u4ee5\u6cbf\u7740\u5e02\u573a\u5931\u8d25\u5b9e\u65bd\u3002\u201d\u5176\u4ed6\u653f\u7b56\u9009\u9879\u5305\u62ec\u589e\u52a0\u7ecf\u6d4e\u9002\u7528\u623f\u7684\u4f9b\u5e94\u5e76\u63d0\u9ad8\u6700\u4f4e\u5de5\u8d44\u3002\n \u76ee\u524d\uff0c\u53ea\u6709\u7b2c\u4e00\u5e74\u7684\u80a1\u7968\u5b9e\u9a8c\u4e2d\u7684\u4ef7\u503c;\u6211\u4eec\u5fc5\u987b\u7b49\u52302022\u5e74\u7684\u5168\u90e8\u7ed3\u679c\u3002\u4f46\u662f\uff0c\u4e00\u5e74\u7684\u8c03\u67e5\u7ed3\u679c\u8bc1\u660e\u4e86\u6536\u5165\u8ba1\u5212 - \u7ed3\u5408\u66f4\u597d\u7684\u516c\u5171\u653f\u7b56 - \u53ef\u4ee5\u8d70\u5f88\u957f\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8d70\u5411\u6597\u4e89\u3002\n   \u6570\u767e\u4e07\u4eba\u8f6c\u5411Vox\uff0c\u4e86\u89e3\u65b0\u95fb\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u7684\u4f7f\u547d\u4ece\u672a\u6bd4\u8fd9\u4e00\u523b\u66f4\u91cd\u8981\uff1a\u901a\u8fc7\u4e86\u89e3\u6765\u8d4b\u4e88\u3002\u6211\u4eec\u8bfb\u8005\u7684\u8d22\u52a1\u8d21\u732e\u662f\u652f\u6301\u6211\u4eec\u8d44\u6e90\u5bc6\u96c6\u578b\u5de5\u4f5c\u7684\u5173\u952e\u90e8\u5206\uff0c\u5e76\u5e2e\u52a9\u6211\u4eec\u4e3a\u6240\u6709\u4eba\u63d0\u4f9b\u65b0\u95fb\u3002\u8bf7\u8003\u8651\u4eca\u5929\u4e3avox\u63d0\u4f9b\u8d21\u732e\uff0c\u4ece3\u7f8e\u5143\u7684\u4ef7\u683c\u4e0b\u964d\u3002 ", "note_en": "The city of Stockton, California, embarked on a bold experiment two years ago: It decided to distribute  $500 a month to 125 people for 24 months \u2014 with no strings attached and no work requirements. The people were randomly chosen from neighborhoods at or below the city\u2019s median household income, and they were free to spend the money any way they liked. Meanwhile, researchers studied what impact the cash had on their lives.\n The  results from the first year of the experiment, which spanned from February 2019 to February 2020, are now in. And they\u2019re extremely encouraging for its participants, and for advocates who see unconditional cash transfers as an effective way to help people escape poverty.\n The most eye-popping finding is that the people who received the cash managed to secure full-time jobs at more than twice the rate of people in a control group, who did not receive cash.  Within a year, the proportion of cash recipients who had full-time jobs jumped from 28 percent to 40 percent. The control group saw only a 5 percent jump over the same period.\n The researchers  wrote in their report that the money gave recipients the stability they needed to set goals, take risks, and find new jobs. One man in his 30s had been eligible for a real estate license for over a year but hadn\u2019t gotten it because he just couldn\u2019t afford to take time off work. Thanks to the freedom offered by the extra $500 per month, he said, his life was \u201cconverted 360 degrees \u2026 because I have more time and net worth to study \u2026 to achieve my goals.\u201d\n  Critics of cash assistance programs often  say that handing out \u201cfree money\u201d will make people less inclined to find jobs. But in the research done to date, unconditional cash does not tend to disincentivize work. In several programs \u2014 from Alaska and North Carolina in the US, to  Finland and Spain in Europe \u2014 it has had no effect on employment either way. In some cases, it seems to embolden people with an entrepreneurial bent; for instance, in Japan,  initial survey results have shown that recipients are 3.9 times more interested in launching a new business.\n Employment aside, there are clear benefits to unconditional cash programs. The Stockton experiment \u2014 which was conducted as a randomized controlled trial and underwent an independent evaluation \u2014 adds to the growing body of evidence from  basic income experiments around the world, which shows that getting unconditional cash tends to boost  happiness,  health,  school attendance, and  trust in social institutions, while  reducing crime.\n   There were other benefits from the Stockton program. Cash recipients reported being less anxious and depressed than the control group. On average, the recipients \u201cexperienced clinically and statistically significant improvements in their mental health that the control group did not \u2014 moving from likely having a mild mental health disorder to likely mental wellness over the year-long intervention,\u201d according to the researchers.\n The cash also  enabled recipients to help their family and friends. For example, one woman used the cash to help her siblings buy school clothes for their kids and to help her daughter-in-law pay for car insurance. Another bought diapers for her grandchildren.\n This isn\u2019t the first time we\u2019ve seen cash programs have positive ripple effects on the broader community. In Kenya, cash transfers have stimulated the economy and   benefited not only the recipients themselves but also people in nearby villages.\n It\u2019s worth noting a wrinkle in the Stockton trial:  Each participant was given $500 per month on a debit card so that researchers would be able to see how they were using the money. However, 40 percent of it was either withdrawn as cash or transferred to an existing bank account, so researchers had to rely on participants to tell them where the money went.\n Of the money tracked on the debit cards, recipients spent most on necessities like food (37 percent), home goods and clothes (22 percent), utilities (11 percent), and car costs (10 percent). They spent less than 1 percent on alcohol or cigarettes.\n Though these numbers can\u2019t capture the full picture, they offer a counter to harmful stereotypes and faulty assumptions: that people who become poor get that way because they\u2019re bad at rational decision-making and self-control, and that they\u2019ll blow free money on frivolous things or addictive substances. The  evidence  does not support these beliefs.\n The Stockton experiment was a small study with only 125 cash recipients, so the findings should be seen as offering supporting evidence on the effectiveness of cash programs rather than as definitive standalone proof. Nevertheless,  the results of this philanthropically funded program \u2014 officially known as the Stockton Economic Empowerment Demonstration (SEED), which received a $1 million grant from the Economic Security Project \u2014 help underscore that poverty is a lack of cash, not character, and usefully add to the body of evidence that free money doesn\u2019t disincentivize employment \u2014 it can actually boost it.\n   The message that free money can actually improve job prospects comes at a critical moment, as the  Biden administration tries to push through a pandemic aid package that would include direct checks to millions of Americans.\n The pandemic has made the idea of direct payments more popular. With the Covid-19 crisis generating so much financial loss and uncertainty, advocates have argued that citizens desperately need some sort of income floor. And against this backdrop, SEED has spawned something much bigger:  Mayors for a Guaranteed Income, a  coalition of mayors who are pushing for the US to implement a federal guaranteed income. Both SEED and the mayoral  coalition are the brainchild of Michael Tubbs, the former mayor of Stockton.\n For years now, Tubbs has promoted the idea that a guaranteed income could transform life for Stockton residents, but he\u2019s also made clear this experiment is about a lot more than just his city. \u201cStockton is a proxy for America: its diversity, its people,\u201d he  said. \u201cIt\u2019s a place that\u2019s emerging and has big, bold ideas.\u201d\n Guaranteed income is a big, bold idea that could improve life for millions of Americans if implemented more widely. That said, it\u2019s not a cure-all for the systemic obstacles that keep people from a healthy, stable life.\n As the SEED researchers wrote in their report, \u201cGuaranteed income should not be considered as a singular approach for household stability, but rather as one policy option to be implemented alongside others to shore up market failures.\u201d Other policy options include increasing the supply of affordable housing and raising the minimum wage.\n For now, only the first year\u2019s worth of data from the Stockton experiment is available; we have to wait until 2022 for the full results. But the first-year findings signal that guaranteed income programs \u2014 combined with better public policy \u2014 could go a long way toward fighting poverty.\n   Millions turn to Vox to understand what\u2019s happening in the news. Our mission has never been more vital than it is in this moment: to empower through understanding. Financial contributions from our readers are a critical part of supporting our resource-intensive work and help us keep our journalism free for all.  Please consider making a contribution to Vox today from as little as $3.", "posttime": "2021-06-21 04:24:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u57ce\u5e02,city,\u73b0\u91d1", "title": "\u5f53\u52a0\u5dde\u57ce\u5e02\u4fdd\u8bc1\u6536\u5165\u65f6\uff0c\u4eba\u4eec\u5de5\u4f5c\u5f97\u591a\uff0c\u800c\u4e0d\u662f\u5c11 ", "title_en": "When a California city gave a guaranteed income, people worked more, not less", "transed": 1, "url": "https://www.vox.com/future-perfect/22313272/stockton-basic-income-guaranteed-free-money", "via": "", "real_tags": ["\u57ce\u5e02", "city", "\u73b0\u91d1"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067071, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u6700\u8fd1\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u7ecf\u5386\u4e86\u60ca\u4eba\u7684NAND2TETTRIS\u8bfe\u7a0b\uff0c\u5e76\u4e14\u5206\u914d\uff039\u662f\u7528\u5728\u9ed1\u5ba2\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7684\u5343\u65a4\u9876\u7f16\u7a0b\u8bed\u8a00\u6765\u5b9e\u73b0\u3002\u6211\u7684\u670b\u53cb\u9f13\u52b1\u6211\u5c1d\u8bd5\u7f16\u5199\u4e00\u4e2a\u5c04\u7ebf\u8ddf\u8e2a\uff0c\u8fd9\u662f\u4e00\u79cd\u7b97\u6cd5\uff0c\u5373\u901a\u8fc7\u6a21\u62dfOFOMES\u7684\u5149\u7ebf\u649e\u51fb\u5149\u7ebf\u6765\u83b7\u5f97\u7269\u7406\u4e0a\u7684\u56fe\u50cf\u3002\u96f7\u9053\u5fb7\u7684\u8f93\u51fa\u662f\u4e00\u4e2a\u7f8e\u4e3d\u7684\u56fe\u50cf\uff0c\u5177\u6709\u9634\u5f71\uff0c\u53cd\u5c04\u548c\u5176\u4ed6\u7269\u7406\u73b0\u8c61\u3002\u5b9e\u73b0\u96f7\u5e72\u673a\u9700\u8981\u5347\u7ea7\u6570\u5b66\u548c\u7ebf\u6027\u4ee3\u6570\uff0c\u5e76\u4e14\u4f3c\u4e4e\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6311\u6218\uff0c\u4e0e\u6770\u514b\u8bed\u8a00\u7684\u6709\u9650\u529f\u80fd\u5199\u5165\u3002\n \u6211\u60f3\u5206\u4eab\u6211\u7684\u65b9\u6cd5\u4ee5\u53ca\u6211\u9762\u4e34\u7684\u6311\u6218\uff0c\u91cd\u65b0\u5b9e\u73b0\u6211\u7684OWSMATH\u7cfb\u7edf\uff0c\u5e76\u7528\u6709\u9650\u7684\u5de5\u5177\u4f18\u5316Jack\u7a0b\u5e8f\u3002\u867d\u7136\u60a8\u53ef\u80fd\u9700\u8981\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4f46\u60a8\u53ef\u80fd\u4f1a\u5b66\u4f1a\u8ba1\u7b97\u673a\u5982\u4f55\u6267\u884c\u6570\u5b66\uff0c\u5e76\u5bf9\u6570\u5b66\u5e93\u8fdb\u884c\u6b23\u8d4f\uff01\n  \u9996\u5148\uff0c\u6211\u770b\u7740\u6770\u514b\u8bed\u8a00\u5fc5\u987b\u63d0\u4f9b\u4ec0\u4e48\u3002\u6211\u77e5\u9053Debugging\u4f1a\u771f\u7684\u5f88\u5177\u6709\u6311\u6218\u6027\uff0c\u6240\u4ee5\u6211\u6b63\u5728\u5bfb\u627e\u8c03\u8bd5\uff0c\u6253\u5370\u8bb0\u5f55\u8bed\u53e5\u548c\u8bbe\u7f6e\u65ad\u70b9\u7684\u5bb9\u6613\u7a0b\u5ea6\u3002\n \u7b54\u6848\u662f\uff1a\u4e0d\u662f\u5f88\u5bb9\u6613\u3002\u7cfb\u7edf\u6709\u4e00\u4e2a512x256\u9ed1\u767d\u5c4f\u5e55\uff0c\u5f53\u60a8\u4f7f\u7528\u8f93\u51fa\u6765\u6253\u5370\u5b83\u6765\u6253\u5370\u5b83\uff0c\u5b83\u4f1a\u53d1\u51faOntothe\u5c4f\u5e55\uff0c\u800c\u4e0d\u662f\u5355\u72ec\u7684\u7ec8\u7aef\uff0c\u5b83\u4e0d\u4f1a\u6eda\u52a8\u3002\u4f60\u627e\u5230\u65ad\u70b9\uff0c\u4f46\u5b83\u6709\u70b9\u68d8\u624b\u624d\u80fd\u8fdb\u5165\u548c\u6446\u8131\u804c\u80fd\u3002 Forexample\uff0c\u8fd9\u91cc\u662f\u5c4f\u5e55\u4e0a\u7684\u201cHello World\u201d\u3002\n  \u8fd9\u4e0e\u8868\u73b0\u95ee\u9898\u4e00\u6837\uff0c\u5bfc\u81f4\u6211\u8003\u8651\u5199\u5165\u96f7\u5e72\u7684\u6d4b\u8bd5\uff0c\u4ee5\u4fbf\u6211\u80fd\u591f\u5feb\u901f\u7ec3\u4e60\u5b9e\u73b0\uff0c\u8fed\u4ee3\uff0c\u5e76\u5728\u5c06\u5176\u8f6c\u6362\u4e3a\u6770\u514b\u4e4b\u524d\u4f7f\u5176\u5de5\u4f5c\u3002\u6211\u9009\u62e9\u4e86\u8fd9\u4e00\u70b9\uff0c\u56e0\u4e3a\u6211\u4e00\u76f4\u60f3\u5b66\u4e60\u751f\u9508\uff0c\u56e0\u4e3a\u5b83\u4f3c\u4e4e\u662f\u5584\u826f\u7684\u3002 Rust\u7cbe\u786e\u63a7\u5236\u590d\u5236\u8bed\u4e49\u548cINT\u5c3a\u5bf8\uff0c\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\uff0c\u4e0d\u53ef\u53d8\u7684\u7f16\u7801\u548c\u65b9\u4fbf\u7279\u5f81\uff0c\u5373INTS\u7684\u6d41\u51fa\u529f\u80fd\u3002\n  \u8981\u7f16\u5199\u751f\u9508\u96f7\u9053\u4eea\uff0c\u6211\u4e3b\u8981\u9075\u5faa\u8fd9\u79cd\u4ee4\u4eba\u656c\u754f\u7684\u535a\u5ba2\uff0c\u8fd9\u662f\u5bf9\u9ed1\u5ba2\u8ba1\u7b97\u673a\u7684\u4e00\u4e9b\u7b80\u5316\u548c\u4fee\u6539\u3002\u7531\u4e8e\u5b83\u5177\u6709512x256\u9ed1\u767d\u5c4f\u5e55\uff08\u65e0\u7070\u5ea6\uff09\uff0c\u8f93\u51fa\u4fdd\u771f\u5ea6\u975e\u5e38\u76f8\u671b\uff0c\u56e0\u6b64\u6211\u9009\u62e9\u4e0d\u4f9d\u8d56\u4e8e\u53cd\u601d\u7684\u731b\u864e\u5e08\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u662f\u975e\u5e38\u53ef\u89c1\u7684\u3002\u5176\u6b21\uff0c\u6211\u53ea\u9700\u8981\u5728\u4e00\u4e2a\u901a\u9053\u4e2d\u8fdb\u884c\u6240\u6709\u8272\u5f69\u8ddf\u8e2a\uff0c\u56e0\u4e3a\u6211\u6ca1\u6709\u989c\u8272\u3002\u6700\u540e\uff0c\u6211\u77e5\u9053\u6211\u77e5\u9053\u67d0\u79cd\u6296\u52a8\u7b97\u6cd5\u5c06\u96f7\u5c3a\u7684\u7070\u5ea6\u8f93\u51fa\u8f6c\u6362\u4e3a\u9ed1\u8272\u548c\u767d\u8272\u50cf\u7d20INA\u6f02\u4eae\u7684\u65b9\u5f0f\u3002\n \u4f60\u8ba4\u4e3a\u6211\u53ea\u80fd\u9075\u5faa\u6559\u7a0b\uff0c\u4f7f\u8fd9\u4e9b\u66f4\u6539\uff0c\u6e32\u67d3\u6e32\u67d3\u8005\u7f8e\u4e3d\u7684\u5f62\u8c61\uff0c\u5e76\u5f00\u59cb\u5728\u8fd9\u4e2a\u535a\u5ba2\u5e16\u5b50\u4e0a\u5de5\u4f5c\uff0c\u4f46\u8fd9\u4e0d\u662fthecase\u3002\u9996\u5148\uff0c\u6211\u4e0d\u5f97\u4e0d\u89e3\u51b3\u4e00\u4e2a\u53ef\u4ee5\u8bf4\u7684\u751a\u81f3\u66f4\u96be\u7684\u95ee\u9898\uff1a\u6770\u514b\u54c8\u65af\u6ca1\u6709\u5c0f\u6570\u70b9\u7c7b\u578b\uff0c\u53ea\u6709\u6574\u6570\u3002\u6b64\u5916\uff0cjack\u652f\u6301\u7684\u552f\u4e00\u6570\u5b57\u662f\u7b7e\u540d\u768416\u4f4d\u6574\u6570\uff08Rifor\u4e2d\u7684I16\uff09\uff0c\u5b83\u4ece-32768\u523032767\u7684\u5b58\u50a8\u503c\u3002\u8fd9\u4e2a......\u4e0d\u662f\u5f88\u5927\u3002\u5982\u6b64\uff1a\u901a\u8fc7\u5c06200\u4e58200\u4e58200\u4e58200\u4e58\u6765\uff0c\u53ef\u4ee5\u901a\u8fc7200\u4e58200\u3002 \n\u4e3a\u4e86\u5b9e\u73b0\u96f7\u5e72\u6765\uff0c\u60a8\u9700\u8981\u4e00\u4e2a\u76f8\u5f53\u5b8c\u6574\u7684\u6570\u5b66\u5e93\uff0c\u5305\u62ec\u4e58\u6cd5\uff0c\u5206\u88c2\uff0c\u5e73\u65b9\u6839\u548c\u03c0\u3002\u6770\u514b\u6709Math.SQRT\uff0c\u4f46\u5b83\u53ea\u5728\u672c\u5730int\u7c7b\u578b\u4e0a\u5de5\u4f5c\uff0c\u622a\u65ad\u5230\u6700\u8fd1\u7684int\u3002\n \u5f53\u7136\uff0cRust\u62e5\u6709\u6211\u9700\u8981\u7684\u6240\u6709\u6570\u5b66\u51fd\u6570\uff0c\u4f46\u5982\u679c\u6211\u4f7f\u7528\u7279\u5b9a\u4e8e\u9508\u75c5\u51fd\u6570\uff0c\u5b83\u4e0d\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u4e50\u89c2\u7684\u6d4b\u8bd5\u5b9e\u73b0\u3002\u56e0\u6b64\uff0c\u6211\u53ea\u9700\u8981\u53ea\u4f7f\u7528\u63d2\u5b54\u4e2d\u5b58\u5728\u7684\u751f\u9508\u90e8\u5206\uff0c\u5e76\u5b9e\u73b0\u65b0\u7684PartsMyself\u4ee5\u5c06\u5b83\u4eec\u79fb\u690d\u5230\u5343\u65a4\u9876\u3002\n \u6240\u4ee5\uff0c\u5728\u7f16\u5199\u4e00\u884c\u7684\u96f7\u8def\u5668\u4ee3\u7801\u4e4b\u524d\uff0c\u6211\u9700\u8981\u5199\u4e0b\u6211\u7684overnumerical\u7c7b\u578b\uff0c\u8db3\u4ee5\u652f\u6301\u6211\u60f3\u8981\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\u3002\u6211\u51b3\u5b9a\u5c06\u5176\u5206\u6210\u4e24\u4e2a\u6b65\u9aa4\uff1a\u5b9e\u73b0\u4e00\u4e2a\u8db3\u591f\u5927\u7684int\u8bfe\u7a0b\uff0c\u7136\u540e\u5b9e\u73b0\u4e00\u4e2a\u4f7f\u7528\u5b9a\u70b9\u7b97\u6cd5\u5728\u5176\u9876\u90e8\u7684\u5c0f\u6570\u70b9\u7c7b\u578b\u3002\n  \u56fa\u5b9a\u70b9\u7b97\u672f\u80cc\u540e\u7684\u60f3\u6cd5\u662f\u60a8\u53ef\u4ee5\u5728\u5c0f\u6570\u70b9\u540e\u4f7f\u7528\u4e00\u4e9b\u5b58\u50a8\u5230\u5b58\u50a8\u533a\u57df\u3002\u5207\u6362\u5230\u6807\u51c6\u57fa\u657010\u79d2\uff0c\u8003\u8651\u4e00\u4e2a\u573a\u666f\uff0c\u5176\u4e2d\u6211\u53ea\u67095\u4f4d\u5b58\u50a8\u7684\u5b58\u50a8\u5668\u3002\u6211\u53ef\u4ee5\u4f7f\u7528\u5b83\u5bc4\u5b580\u523099999\uff0c\u6216\u8005\u6211\u53ef\u4ee5\u5728\u7b2c\u4e09\u76cf\u4e4b\u540e\u7cbe\u795e\u4e0a\u63d2\u5165\u5c0f\u6570\u70b9\uff0c\u8fd9\u8ba9\u6211\u5b58\u50a80\u5230999.99\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u6709\u4e09\u4f4d\u6570\u5b57\u548c\u4e24\u4f4d\u6570\u7684\u7cbe\u5ea6\u3002\u4e3a\u4e86\u5b9e\u9645\u5b58\u50a8\u6570\u636e\uff0c\u6211\u4e58\u4ee5100\uff0c\u88ab\u79f0\u4e3a\u7f29\u653e\u56e0\u5b50\uff0c\u56e0\u4e3a\u60a8\u5b58\u50a8X * 100 TorePresent x\uff1a34832\uff0c\u9002\u7528\u4e8e348.32\u7b49\u3002\u5f53\u7f29\u653e\u56e0\u5b50\u4e3a100\u65f6\uff0cPrecision\u662f0.01\uff0c\u56e0\u4e3a\u60a8\u7684\u7cfb\u7edf\u6700\u5c0f\u7684\u589e\u91cf\u4e3a0.01\uff0c\u56e0\u4e3a\u60a8\u7684\u7cfb\u7edf\u6700\u5c0f\u7684\u589e\u91cf\u6b65\u9aa4\u4e3a0.01\uff0c\u66f4\u5c0f\u7684\u4e22\u5931\u3002\n  \u5f53\u7f29\u653e\u56e0\u5b50\u8f83\u9ad8\u65f6\uff0c\u60a8\u53ef\u4ee5\u5b58\u50a8\u66f4\u9ad8\u7cbe\u5ea6\u7684\u5c0f\u6570\uff0c\u4f46\u662f\u4e22\u5931\u6574\u4f53\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u5177\u67091000\u7684\u7f29\u653e\u56e0\u5b50\uff0c\u8fd9\u662f\u630734832\u4e3a34.832\uff0c\u60a8\u73b0\u5728\u6709\u4e09\u4f4d\u6570\u7684\u5c0f\u6570\uff0c\u4f46\u53ea\u6709\u5728\u5c0f\u6570\u70b9\u4e4b\u524d\u53ea\u6709Twigits\uff0c\u6240\u4ee5\u60a8\u7684\u8303\u56f4\u4ec5\u4e3a0-99\u3002\n \u603b\u4f53\u7684\u60f3\u6cd5\u7684\u60f3\u6cd5\u662f\u60a8\u5fc5\u987b\u5c06\u4e94\u4f4d\u6570\u5b57\u5206\u914d\u5230\u5c0f\u6570\u6216\u540e\u7ea7\u70b9\u6570\u5b57\uff0c\u800c\u4e14\u5b83\u662f\u8ddd\u79bb\u7cbe\u5ea6\u4e4b\u95f4\u7684\u6743\u8861\u3002\u540e\u6765\u6211\u4f1a\u8fdb\u5165\u8fd9\u4e2a\uff01\n  \u8fd4\u56de\u6784\u5efaINT\u7c7b\uff0c\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u4e3b\u8981\u6280\u672f\u662fTOSTORE\u6574\u6570\u7684\u6570\u7ec4\u3002\u7b2c\u4e00\u4e2a\u6574\u6570\u662f\u6700\u91cd\u8981\u7684\u5757\uff0c\u4e0b\u4e00\u4e2a\u662f\u4e0b\u4e00\u4e2a\u91cd\u8981\u7684\u5757\u7b49\u3002\u5b83\u5c31\u50cf\u4e00\u4e2a\u4f7f\u7528\u7684\u65b9\u5f0f\u8868\u8fbe\u4e86\u66f4\u5927\u7684\u6570\u5b57\u3002 \n\u5728\u6211\u7684Rust\u5b9e\u73b0\u4e2d\uff0c\u6211\u4f7f\u7528I16S\uff08\u7b7e\u540d16\u4f4d\u6574\u6570\uff09\u5bf9\u4e8e\u6bcf\u4e2a\uff0c\u56e0\u4e3a\u6211\u60f3\u6a21\u62df\u7b49\u6548\u7684\u63d2\u5b54\u7c7b\u578bint\u3002\n   \u8fd9\u662f\u4e00\u4e2a\u5177\u6709\u56db\u4e2ai16s\u6570\u7ec4\u7684\u7ed3\u6784\u3002\u6211\u6253\u7535\u8bdd\u7ed9\u5b83int32\uff0c\u56e0\u4e3a\u5b83\u7684\u7b26\u53f732\u4f4d\u6574\u6570\u662f\u8db3\u591f\u7684\u8303\u56f4\u6765\u652f\u6301\u6240\u6709\u65e0\u7f6a\u7684\u6570\u5b66\u3002\u5b83\u9700\u8981\u5728\u5c06\u6765\u652f\u6301\u5c0f\u6570\uff0c\u5982\u4e0a\u6240\u8ff0\uff0c\u5373\u5c06\u5206\u914d\u8fd9\u4e9b32\u4f4d\u4ee5\u5728DECIMALPOINT\u4e4b\u524d\u6216\u4e4b\u540e\u5b58\u50a8\u6570\u636e\u3002\u6211\u5c06\u5728\u4e0b\u4e00\u8282\u8fdb\u5165\u66f4\u591a\u3002\u76ee\u524d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6b64Int32\u7c7b\u4e0a\u5b9e\u73b0\u6570\u5b66\u6765\u5b9e\u73b0\u81ea\u5df1\u3002\n \u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u6211\u4f3c\u4e4e\u6709\u591a\u4e8e\u6211\u9700\u8981\u7684\u6570\u636e\uff1a\u56db\u4e2aI16\u7684\u6570\u7ec4\u662f64\u4f4d\u4fe1\u606f\uff0c\u800c\u4e0d\u662f32\u3002\u8fd9\u662f\u771f\u7684\u3002\u6211\u6545\u610f\u7559\u4e0b\u6bcf\u4e2aI16\u7a7a\u7684\u516b\u4e2a\u6bd4\u7279\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2aI16\u5728\u8303\u56f4\u4e2d[0,255]\u3002\u6211\u6709\u51e0\u4e2a\u539f\u56e0\u5982\u6b64\uff1a\n \u6211\u9700\u8981\u4f7f\u7528i16\u6570\u5b66\u6765\u5b9e\u73b0Int32\u6570\u5b66\uff0c\u5e76\u4e14\u5b83\u771f\u7684\u662fHelpfulto\u6709\u4e00\u4e9b\u6ea2\u51fa\u7a7a\u95f4\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4f7f\u7528\u6574\u4e2aI16\u8303\u56f4\uff0c\u5e76\u4e14\u6700\u7ec8\u589e\u52a030000\u52305000\uff0c\u5b83\u5c06\u6ea2\u51fa\u5e76\u7f20\u7ed5\u5230-30534\uff0c\u8fd9\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u76f8\u53cd\uff0c\u5982\u679c\u6211\u53ea\u4f7f\u7528i16\u7684\u201c\u5e95\u90e8\u201d\u4e00\u534a\u5b58\u50a80\u5230255\uff0c\u6211\u53ef\u4ee5\u6dfb\u52a0200\u5230100\u5e76\u83b7\u5f97300\uff0c\u7136\u540e\u624b\u52a8\u586b\u5199\u6ea2\u51fa\u81ea\u5df1\u3002\n \u6770\u514b\u6ca1\u6709\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u8fd9\u4f7f\u5f97\u6570\u5b66\u9ebb\u70e6\u3002\u5927\u591a\u6570\u65bd\u6cf0\u65af\uff0c\u6211\u5373\u5c06\u4ec5\u5728\u672a\u7b7e\u540d\u7684\u6574\u6570\u4e0a\u4f7f\u7528\u3002\u76f8\u53cd\uff0c\u8ba9\u4ed6\u4eec\u4e0e\u7b7e\u540d\u6574\u6570\u4e00\u8d77\u5de5\u4f5c\uff0c\u6211\u51b3\u5b9a\u4eba\u5de5\u9650\u5236\u5927\u5c0f\u6765\u5047\u88c5\u6211\u6709\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528I16\u6765\u5047\u88c5\u662fU8\uff08\u65e0\u7b26\u53f7\u76848\u4f4d\u6574\u6570\uff09\uff0c\u56e0\u4e3a\u8303\u56f4[0,255]\u8212\u9002\u5730\u9002\u5408\u5728\u8303\u56f4\u5185[-32768,32767]\u3002\n \u5047\u8bbe\u6211\u4e0d\u4f7f\u7528\u6bcf\u4e2aI16\u7684\u524d\u516b\u4f4d\uff0c\u7136\u540e\u6bcf\u4e2aI16\u7ed3\u675f\u516b\u4f4d\uff0c8 * 4 = 32. Yay\uff01\u8ba9\u6211\u4eec\u5f00\u59cb\u5728\u6570\u5b66\u4e0a\u5de5\u4f5c\u3002\n  \u5927\u591a\u6570\u7cfb\u7edf\u4f7f\u7528\u79f0\u4e3a\u4e24\u4e2a\u8865\u5145\u7684\u6280\u672f\u5b58\u50a8\u8d1f\u6570\u3002\u5982\u679c\u907f\u5f00\u65e0\u7b26\u53f7\u76843\u4f4d\u6574\u6570\uff0c\u5c31\u50cf\u4ece000\u5230111\u7684\u8ba1\u7b97\u4e00\u6837\uff0c\u6574\u6570GOFROM 0\u52307.\u4f46\u662f\u5bf9\u4e8e\u5b58\u50a8\u4e3a\u4e24\u4e2a\u8865\u5145\u7684\u7b26\u53f73\u4f4d\u6574\u6570\uff0c\u4e3a\u4ece000\u5230111\uff0c\u6574\u6570\u4ece0\u52300\u52300 3\uff0c\u7136\u540e\u7f20\u7ed5\u5230-4\uff0c\u7136\u540e\u8fbe\u5230-1\u3002\u8fd9\u5c06\u53ef\u7528\u8303\u56f4\u5206\u6210\u4e24\u534a\uff0c\u4f46\u5141\u8bb8\u60a8\u626d\u8f6c\u8d1f\u6570\uff01 \n\u6dfb\u52a0\u548c\u51cf\u6cd5\u201c\u53ea\u662f\u5de5\u4f5c\u201d\uff0c\u5e26\u6709\u6b63\u9762\u548c\u8d1f\u6570\u4e0d\u5f97\u4e0d\u505a\u4efb\u4f55\u7279\u522b\u7684\u4e8b\u60c5\u3002\u4f8b\u5982\uff0c2\uff08010\uff09+ -4\uff08100\uff09= 110\uff0c\u5176\u5bf9\u5e94\u4e8e-2\u3002\n \u5f88\u5bb9\u6613\u770b\u51fa\u6570\u5b57\u662f\u5426\u5b9a\u7684\uff1a\u68c0\u67e5\u6700\u6709\u6548\u4f4d\uff08\u6700\u8fdc\u7684\u5de6\u4fa7\uff09\u662f1\u3002\n \u8981\u57282\u7684\u8865\u5145\u4e2d\u5b9e\u65bd\u5426\u5b9a\uff0c\u8bf7\u7ffb\u904d\u6240\u6709\u4f4d\u5e76\u6dfb\u52a0\u4e00\u4e2a\u3002\u8fd9\u770b\u8d77\u6765\u50cf\uff1a\n PUB FN DO_NEG\uff08\uff06amp; mut self\uff09{//\u7ffb\u8f6c\u6bcf\u4e2a\u6574\u6570\u3002\u6211\u4eec\u9700\u8981\u548c0xff\u4ee5\u64ad\u653e\u6240\u6709// 5\u4f4d\u7684\u4f4d\uff0c\u56e0\u4e3a\u90a3\u4e9b\u4f4d\u59cb\u7ec8\u9700\u8981\u4e3a0. self.parts [0] =\uff01self.parts [0]\uff06amp; 0xFF; self.parts [1] =\uff01self.parts [1]\uff06amp; 0xFF; self.parts [2] =\uff01self.parts [2]\uff06amp; 0xFF; self.parts [3] =\uff01self.parts [3]\uff06amp; 0xff; //\u6dfb\u52a0\u4e00\u4e2a\uff0c\u5904\u7406\u643a\u5e26\u3002 self.parts [0] + = 1;\u5982\u679cself.parts [0]\uff06gt; = 256 {self.parts [0]  -  = 256; self.parts [1] + = 1;\u5982\u679cself.parts [1]\uff06gt; = 256 {self.parts [1]  -  = 256; self.parts [2] + = 1;\u5982\u679cself.parts [2]\uff06gt; = 256 {self.parts [2]  -  = 256; self.parts [3] + = 1; }\u5982\u679cself.parts [3]\uff06gt; = 256 {self.parts [3]  -  = 256; }}\n \u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\u6211\u5c06\u5176\u5b9e\u73b0\u4e3a\u4e00\u4e2a\u7a81\u53d8\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u8d1f\u9762\u7ed3\u679c\u7684\u65b0INT32\u3002\u8fd9\u662f\u4e00\u4e2a\u523b\u610f\u7684\u9009\u62e9\u989d\u5916\u62e8\u6b3e\u3002\u901a\u8fc7\u91cd\u7528\u76f8\u540c\u7684\u7ed3\u6784\uff0c\u6211\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e2a\u6570\u5b66\u64cd\u4f5c\u8fdb\u884cAllocatemore\u5185\u5b58\uff0c\u6211\u5c06\u4f7f\u7528\u8fd9\u4e9b\u3002 Thismight\u5728\u94c1\u9508\u4e2d\u634f\u634f\uff0c\u4f46\u5b83\u662f\u6770\u514b\u7684\u7edd\u5bf9\u6551\u661f\u3002 Ialso\u6ca1\u6709\u4f7f\u7528Rust\u7684\u64cd\u4f5c\u5458\u91cd\u8f7d\uff0c\u56e0\u4e3a\u6770\u514b\u6ca1\u6709\u90a3\u79cd\u3002\n  \u5982\u4e0a\u6240\u8ff0\uff0c\u5728\u4e24\u4e2a\u7b26\u5408\u4e16\u754c\u4e2d\uff0c\u52a0\u6cd5\u548c\u51cf\u6cd5\u76f8\u5f53\u5bb9\u6613\u3002\u50cf\u5b66\u6821\u6570\u5b66\uff0c\u5982\u679c\u9700\u8981\uff0c\u60a8\u4f1a\u6dfb\u52a0\u6bcf\u4e2a\u7ec4\u4ef6\u5e76\u5c06\u5176\u643a\u5e26\u5230\u66f4\u9ad8\u7684\u5757\u3002\n  PUB FN DO_ADD\uff08\uff06amp; mut self\uff0c\u5176\u4ed6\uff1a\uff06amp; int32\uff09{self.parts [0] + =\u5176\u4ed6.parts [0]; self.parts [1] + =\u5176\u4ed6.parts [1]; self.parts [2] + =\u5176\u4ed6.parts [2]; self.parts [3] + =\u5176\u4ed6.parts [3];\u5982\u679cself.parts [0]\uff06gt; = 256 {self.parts [0]  -  = 256; self.parts [1] + = 1;\u5982\u679cself.parts [1]\uff06gt; = 256 {self.parts [1]  -  = 256; self.parts [2] + = 1;\u5982\u679cself.parts [2]\uff06gt; = 256 {self.parts [2]  -  = 256; self.parts [3] + = 1; }\u5982\u679cself.parts [3]\uff06gt; = 256 {self.parts [3]  -  = 256; }} \n\u8bf7\u8bb0\u4f4f\uff0c\u90e8\u5206[0]\u662f\u6700\u5c0f\u7684\u5757\u548c\u90e8\u5206[3]\u662f\u5bf9\u6bd4\u7684\u91cd\u8981\u610f\u4e49\u3002\u8fd9\u4e5f\u662fI16\u4e2d\u7684\u989d\u5916\u7a7a\u95f4\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5141\u8bb8\u6211\u5728[0,255]\u8303\u56f4\u5185\u6dfb\u52a0\u4e24\u4e2a\u6570\u5b57\uff0c\u800c\u65e0\u9700\u62c5\u5fc3i16overflow\u3002\n  \u8fd9\u662f\u5b83\u53d8\u5f97\u68d8\u624b\u7684\u5730\u65b9\u3002\u4e58\u6cd5\u53ef\u4ee5\u50cf\u5b66\u6821\u7684\u90a3\u6837\u5b8c\u6210\uff0c\u5728\u90a3\u91cc\u4f60\u5c06\u6bcf\u5bf9\u6570\u5b57\u4e58\u4ee5\u6bcf\u5bf9\u6570\u5b57\u5e76\u76f8\u5e94\u5730\u504f\u79fb\u3002\n  \u6211\u4ece\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u62cd\u6444\u4e86\u7b97\u6cd5\uff0c\u5e76\u8fbe\u5230\u5b83\u6765\u751f\u9508\uff08\u548c\u540e\u6765\u7684\u5343\u65a4\u9876\uff09\u3002\u4f46\u662f\uff0c\u6211\u9047\u5230\u4e86\u4e24\u4e2a\u95ee\u9898\u3002\n \u9996\u5148\uff0c\u6211\u4ec5\u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u4ec5\u9002\u5e94\u7b97\u6cd5\u7684\u65e0\u7b26\u53f7\u7248\u672c\u3002\u6211\u9700\u8981\u5904\u7406\u8ff9\u8c61\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e0d\u662f\u592a\u7cdf\u7cd5\uff1a\n \u5982\u679c\u4e24\u4fa7\u662f\u5426\u5b9a\u7684\uff08\u5373\uff0c\u5982\u679ca\u4e3a\u8d1f^ b\u662f\u8d1f= true\uff09\uff0c\u5219\u5426\u5b9a\u7ed3\u679c\u3002\n \u5176\u6b21\uff0c\u6211\u5728\u5b9e\u73b0\u671f\u95f4\u518d\u6b21\u9047\u5230\u6574\u6570\u5927\u5c0f\u5c3a\u5bf8\u95ee\u9898\u3002\u539f\u59cb\u5b9e\u73b0\u4e58\u4ee5\u65e0\u7b26\u53f7\u77ed\u88e4\uff08\u6216ruct\u4e2d\u7684U16\uff09\uff0c\u5e76\u4f7f\u4e34\u65f6\u65e0\u7b26\u53f7int\uff08U32\uff09\u5b58\u50a8\u6765\u5b58\u50a8\u7ed3\u679c\u3002\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u4e58\u6cd5\u662f\u6269\u5c55\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u662f\u4efb\u4f55\u4e24\u4e2a\u4e24\u4f4d\u6570\u7684\u6570\u5b57\uff0c\u7ed3\u679c\u5c06\u662f\u6700\u591a4\u4f4d\u6570\u3002\u5728\u7b56\u7565\u7684\u65b9\u5f0f\u4e2d\uff0c\u8981\u9002\u5f53\u5730\u9002\u5408U16 * U16\u7684\u7ed3\u679c\uff0c\u60a8\u9700\u8981\u4e00\u4e2aU32\u3002\n  \u8fd9\u5bf9\u6211\u4eec\u6765\u8bf4\u662f\u574f\u6d88\u606f\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u5c3a\u5bf8\uff0cI16\u3002\u4f60\u53ef\u80fd\u4f1a\u601d\u8003\u6211\u4eec\u53ef\u4ee5\u505a\u5230\u8fd9\u9879\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u79d8\u5bc6\u5730\u4f7f\u7528\u4e0b\u534a\u90e8\u5206\uff0c\u4ee5\u4e0a\u662f\u521d\u6b65\u7684\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u8fd9\u4e0d\u8d77\u4f5c\u7528\u3002 \n\u7531\u4e8e\u6211\u4eec\u53ea\u4f7f\u7528I16\u7684\u4e0b\u534a\u90e8\u5206\uff0c\u56e0\u6b64\u5b83\u5177\u6709\u4e00\u7cfb\u5217[0,255]\u3002\u5f53\u6211\u4eec\u4e58\u4ee5255\u4e58255\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u6211\u4eec\u5f97\u523065,025\uff0c\u54ea\u4e2a\u4e0d\u9002\u5408I16\uff08\u8303\u56f4[-32768,32767]\uff09\u3002\u60b2\u4f24\u7684\u65f6\u95f4\uff01\u8fd9\u4f7f\u5f97\u611f\u89c9\u4f7f[0,255]\u8303\u56f4\u7531\u7c7b\u578bU8\u8868\u793a\uff0c\u5982\u679c\u60a8\u662f\u4e24\u79cdU8S\uff0c\u5219\u83b7\u5f97\u4e00\u4e2aU16\uff0c\u5176\u4e2d\u5177\u6709\u8303\u56f4[0,65535]\u3002\u6240\u6709Wehave\u90fd\u662fI16\uff08\u8303\u56f4[-32768,32767]\uff09\uff0c\u5b83\u4e0d\u9002\u5408:(\u8fd9\u662f\u4e00\u4e2a\u5728\u6770\u514b\u7684\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u7684\u60c5\u51b5\u4f1a\u771f\u7684\u6709\u5e2e\u52a9\uff0c\u4f46\u6211\u4eec\u65e0\u4eba\u3002\n \u6211\u4eec\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1f\u7b54\u6848\u662f\u518d\u6b21\u7ec6\u5206\u3002\u5728\u6267\u884cPhonitultiplication\u7b97\u6cd5\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u56db\u4e2a8\u4f4d\u5757\u7684\u6570\u7ec4\u6269\u5c55\u4e3a84\u4f4d\u5757\u3002\u6bcf\u4e2a8\u4f4d\u5757\u90fd\u5206\u4e3a\u4e24\u4e2a4\u4f4d\u5757\uff0c\u4e00\u4e2a\u5e26\u6709\u7a83\u542c\u7684\u56db\u4e2a\u4f4d\uff0c\u56db\u4e2a\u4f4d\u8f83\u9ad8\u3002\n \u8ba9self_parts_expanded\uff1a[i16; 8] = [self_parts [0]\uff06amp; 0x0f\uff0carith_rightsshift\uff08self_parts [0]\uff0c4\uff09\uff0cself_parts [1]\uff06amp; 0x0f\uff0carith_rightsshift\uff08self_parts [1]\uff0c4\uff09\uff0cself_parts [2]\uff06amp; 0x0f\uff0carith_rightshift\uff08self_parts [2]\uff0c4\uff09\uff0cself_parts [3]\uff06amp; 0x0f\uff0carith_rightsshift\uff08self_parts [3]\uff0c4\uff09\uff0c];\n  \u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e9b4\u4f4d\u5757\u4e0a\u4f7f\u7528\u6211\u4eec\u7684\u4e58\u6cd5\u7b97\u6cd5\uff0c\u77e5\u9053unsigned 4\u4f4d\u4e58\u6cd5\u5c06\u5bfc\u81f4U8\uff0c\u8fd9\u9002\u5408\u6211\u4eec\u7684I16\u3002 Huzzah\uff01\n //\u6bcf\u4e2aI16\u7684\u524d12\u4f4d\u5e94\u8be5\u662f\u7a7a\u7684\uff0c\u6240\u4ee5\u50cf\u4e00\u4e2a\uff06\uff0334; U4\uff06\uff0334; //\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u6a21\u62df\u53ea\u6709i16\u7684\u5343\u65a4\u9876\u3002 fn u4_array_mul_u4_array\uff08U\uff1a\uff06amp; [I16; 8]\uff0cV\uff1a\uff06amp; [I16; 8]\uff09 - \uff06gt; [I16; 16] {\u8ba9mut w = [0 i16; 16]\u5bf9\u4e8ej\u57280 .. 8 {\u8ba9mut\u643a\u5e26= 0;\u8bbevj = v [j];\u56e0\u4e3a\u6211\u57280 .. 8 {//\u6267\u884c\u7b7e\u540d\u768416\u4f4d\u6570\u5b66\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u6ea2\u51fa//\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5c06U4S\u653e\u5165\u5176\u4e2d\uff01 U4 * U4 = U8\uff0c\u5176//\u9002\u5408I16\u3002\u6211\u4eec\u53ef\u4ee5\uff06\uff0339; t\u786e\u5b9e\u4f7f\u7528\u4e86U8S\uff0c\u56e0\u4e3aU8 * U8 = // U16\u548cU16\u5728I16\u4e2d\u62df\u5408\u3002\u8ba9T = U [i] * vj + w [i + j] +\u643a\u5e26; //\u8f83\u5927\u7684\u6b21\u6570\u8fdb\u5165\u7ed3\u679c;\u9876\u90e8//\u534a\u6210\u4e3a\u4e0b\u4e00\u8f6e\u7684\u643a\u5e26\u3002 w [i + j] = t\uff06amp; 0x0f;\u643a\u5e26= arith_rightssswort\uff08t\uff0c4\uff09; w [j + 8] =\u643a\u5e26; } w}\n \u7ed3\u679c\u662f\u57284\u4f4d\u5757\u4e2d\u751f\u6210\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u7ec4\u5408\u6bcf\u5bf9\u53cd\u5411\u5757\u4e00\u4e2a8\u4f4d\u5757\uff0c\u6211\u4e0d\u4f1a\u5728\u6b64\u663e\u793a\u3002\n \u8bf7\u6ce8\u610f\uff0c\u6211\u4f7f\u7528\u529f\u80fd\u6765\u6267\u884c\u53f3\u79fb\uff0c\u800c\u4e0d\u662fRust'snative\uff06gt;\uff06gt ;.\u8fd9\u662f\u56e0\u4e3a\u5343\u65a4\u9876\u6ca1\u6709\u6b63\u786e\u7684\u79fb\u4f4d\u8fd0\u7b97\u7b26\uff0c\u56e0\u6b64SOI\u5fc5\u987b\u5b9e\u73b0\u5b83\u3002 \n//\u6770\u514b\u6ca1\u6709\u6709\u8fd9\u4e9b\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u91cd\u65b0\u5b9e\u73b0\u5b83\u4eec\u3002 FN Arith_rightShift\uff08X\uff1aI16\uff0cN\uff1aI16\uff09 - \uff06gt; I16 {\u8ba9mut r = x;\u5bf9\u4e8e_\u57280..n {\u8ba9Divided = R / 2; //\u8d1f\u6570\u8fdc\u79bb0\uff0c\u800c\u4e0d\u662f0. r =\u5982\u679cr\uff06lt; 0\uff06amp;\uff06amp; divided * 2\uff01= r {divided  -  1} else {divided}} r}\n   \u53f8\u7c7b\u4f3c\u4e8e\u4e58\u6cd5\uff0c\u4f46\u6709\u70b9\u590d\u6742\u3002\u53ea\u662f\u559c\u6b22\u7684\uff0c\u6211\u4ece\u8fd9\u4e2a\u9875\u9762\u7ffb\u8bd1\u4e86\u4ee3\u7801\u3002\u5929\u6587\u5e08GIST\u4e5f\u7c7b\u4f3c\u4e8e\u7b49\u7ea7\u5b66\u6821\u7684\u957f\u5e08\uff0c\u5728\u90a3\u91cc\u60a8\u5c06\u5f15\u7528\u6570\u91cf\u9010\u4e2a\u751f\u6210\uff0c\u4e58\u4ee5\u9664\u6570\u4e2d\u7684\u5546\u6570\uff0c\u5e76\u4ece\u80a1\u606f\u4e2d\u4e58\u5750\u3002\n  \u6211\u4eec\u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u5728\u6267\u884cThealGorithm\u4e4b\u524d\u53d6\u4ee3\u7edd\u5bf9\u503c\uff0c\u7136\u540e\u5728\u6070\u597d\u8f93\u5165\u96f6\u4ef6\u65f6\u5426\u5b9a\u7ed3\u679c\u3002\n \u81f3\u4e8e\u6ea2\u51fa\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e2a8\u4f4d\u5757\u5206\u6210\u4e24\u4e2a4\u4e2a\u51fb\u7403\u6b21\uff0c\u5c31\u50cf\u4e58\u6cd5\u4e00\u6837\u3002\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u4e58\u6cd5\u662f\uff1a8\u5757\u5757* 8\u5757=\uff06gt; 16\u5757\u5757\uff0c\u800c\u90e8\u95e8\u6267\u884ceinverse\uff1a16\u5757\u5757/ 8\u5757= 8\u5757\u5757\u3002\u6211\u4e0d\u4f1a\u5728\u6b64\u663e\u793a\u4ee3\u7801\uff0c\u4f46ITJust\u610f\u5473\u7740\u8f93\u5165\u548c\u8f93\u51fa\u9635\u5217\u5927\u5c0f\u662f\u4e0d\u540c\u7684\u3002\n  \u6709\u5f88\u591a\u65b9\u6cd5\u6765\u8ba1\u7b97\u65b9\u5f62\u6839\uff0c\u5927\u591a\u6570\u90fd\u6d89\u53ca\u4e00\u4e9b\u60a8\u8fd0\u884c\u7684\u878d\u5408\u516c\u5f0f\uff0c\u76f4\u5230\u60a8\u5177\u6709\u6240\u9700\u7684\u51c6\u786e\u6027\u3002 Chosethe Babylonian\u65b9\u6cd5\u8d85\u503c\u3002\u8ba1\u7b97X\u7684\u5e73\u65b9\u6839\uff1a\n \u5e73\u5747\u731c\u6d4b\u548cX /\u731c\u6d4b\uff0c\u4ed4\u7ec6\u4f30\u8ba1\u5e73\u65b9\u6839\uff0c\u5e76\u66f4\u65b0\u731c\u6d4b\u3002\n \u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u7528\u6574\u6570\u6570\u5b66\u5b8c\u6210\u7684\uff0c\u6240\u4ee5\u5b83\u4f1a\u627e\u5230\u6700\u63a5\u8fd1\u7684\u6574\u6570squareroot\u3002 \nPUB FN DO_SQRT\uff08\uff06amp; mut self\uff09{\u5982\u679cself.is_negative\uff08\uff09{\u6050\u614c\uff01\uff08\uff09;\u5982\u679cself.is_zero\uff08\uff09{\u8fd4\u56de;\u8ba9mut\u731c\u6d4b= int32 :: from\uff085\uff09;\u5bf9\u4e8e_\u57280 .. 20 {\u8ba9mut inv = * self; inv.do_div\uff08\uff06amp;\u731c\u6d4b\uff09;\u731c\u6d4b.DO_ADD\uff08\uff06amp; inv\uff09;\u731c\u6d4b.do_div\uff08\uff06amp; int32 :: from\uff082\uff09\uff09; self.parts =\u731c\u6d4b.Parts; }\n \u4e3a\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u731c\u6d4b\u6bcf\u6b21\u731c\u6d4b5\u5e76\u8dd120\u6b21\u8fed\u4ee3\u3002\u6211\u4eec\u7a0d\u540e\u4f1a\u8c08\u8bba\u4f18\u5316\u3002\n \u6211\u4eec\u5b8c\u6210\u4e86\u6211\u4eec\u7684INT32\u5b9e\u65bd\uff01\u60a8\u53ef\u4ee5\u5728\u6b64\u5904\u770b\u5230\u6700\u7ec8\u4ee3\u7801\u4ee5\u53ca\u5355\u5143\u6d4b\u8bd5\u3002\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u5b9e\u65bd\u56fa\u5b9a\u9891\u7387\u3002\n  \u5982\u4e0a\u6240\u8ff0\uff0c\u901a\u8fc7\u5c06\u5341\u8fdb\u5236\u4e58\u4ee5\u523b\u5ea6\u56e0\u5b50\u5e76\u5b58\u50a8\u5728\u5c3a\u5ea6\u56e0\u5b50\u548c\u5b58\u50a8\u6570\u91cf\u6765\u6d89\u53ca\u4f7f\u7528\u6574\u6570TOEscode\u7b97\u6cd5\u6d89\u53ca\u5341\u8fdb\u5236\u3002\n  \u6709\u65f6\uff0c\u4f7f\u7528\u50cfQ15.17\u8fd9\u6837\u7684\u8bed\u6cd5\u6765\u63cf\u8ff0\u8be5\u65b9\u6848\u3002 Q15.17Format\u662f32\u4f4d\uff0815 + 17\uff09\uff0c\u5e76\u4f7f\u752815\u4f4d\u8fdb\u884c\u5c0f\u6570\u70b9\u6570\u636e\uff0c17\u4f4d\u7528\u4e8e\u5c0f\u6570\u70b9\u6570\u636e\u3002\u4f8b\u5982\uff0c\u65e7\u7684\u6e38\u620fQuake\u4f7f\u7528\u4e86Q16.16\uff0c\u56e0\u4e3a\u5b83\u7684\u6240\u6709\u4ee3\u7801\u90fd\u662f\u56e0\u4e3a\u5f53\u65f6\u7684\u8ba1\u7b97\u673a\u8fd8\u6ca1\u6709\u5feb\u901f\u6d6e\u52a8\u70b9\u6570\u5b66\u3002\n \u5982\u679cQ16.16\u8db3\u591f\u597d\u7684\u5730\u9707\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u5bf9\u6211\u6765\u8bf4\u8db3\u591f\u597d\uff0c\u6240\u4ee5\u6211\u4f1a\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\u8fd9\u610f\u5473\u7740\u6211\u5c06\u4f7f\u752816\u4f4d\u7684\u540e\u5341\u8fdb\u5236\u5c16\u7aef\u6570\u636e\uff0c\u8fd9\u610f\u5473\u7740\u6bd4\u4f8b\u56e0\u5b50\u5c06\u662f2 ^ 16 = 65536\uff0c\u6211\u5c06\u80fd\u591f\u4ece-32768\u523032767\u523032767\u7684\u5c0f\u6570\u70b9\u7f16\u53f7\uff0c\u7cbe\u786e\u4e3a1/65536 \uff0c\u62160.00001525878\u3002\n \u7531\u4e8e\u8be5\u65b9\u6848\uff0c\u5b83\u6070\u597d\u7684\u662fInt32Parts\u9635\u5217\u4e2d\u7684\u524d\u4e24\u4e2aI16\u5c06\u7528\u4e8e\u9884\u5206\u7ea7\u5206\u6570\u6570\u636e\uff0c\u4ee5\u53ca\u5e95\u90e8\u4e24\u4e2aForPost-Decimal Data\u3002 \n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5982\u4f55\u4f7f\u7528\u6211\u4eec\u7684\u5185\u5bb9\u4f55\u79cd\u5185\u5bb9\u6765\u5b9e\u73b0\u56fa\u5b9a\u70b9\u6570\u5b66\u3002\n  \u8981\u4ece\u5e38\u89c4int\u6784\u9020\u4e00\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u5305\u88c5\u5728int32\u4e2d\uff0c\u7136\u540e\u901a\u8fc7\u6bd4\u4f8b\u56e0\u5b50\u4e58\u4ee5\u5b83\uff1a\n  \u6211\u5728int32\u4e0a\u5199\u4e86\u4e00\u4e2a\u65b9\u4fbf\u7684\u51fd\u6570\u6765\u5904\u7406\u5269\u4e0b\u7684\u73ed\u6b21\u3002 Shiftingleft 2\u5b57\u8282\u4e0e\u4e58\u4ee52 ^ 16\uff0c\u6bd4\u4f8b\u56e0\u5b50\u76f8\u540c\u3002\n  \u6dfb\u52a0\u548c\u51cf\u6cd5\u76f8\u5f53\u5bb9\u6613\uff0c\u56e0\u4e3a\u6dfb\u52a0\u6216\u51cf\u53bb\u5177\u6709\u76f8\u540c\u6bd4\u4f8b\u56e0\u5b50\u7684\u4e24\u4e2a\u6570\u5b57\u5728\u5176\u80cc\u886cINT32\u4e0a\u6267\u884c\u76f8\u540c\u7684\u6bd4\u4f8b\u56e0\u5b50\u3002\n PUB FN DO_ADD\uff08\uff06amp; mut self\uff0c\u5176\u4ed6\uff1a\uff06amp; number\uff09{self\u3002 0.do_add\uff08\uff06amp;\u5176\u4ed60\uff09; PUB FN DO_SUB\uff08\uff06amp; mut self\uff0c\u5176\u4ed6\uff1a\uff06amp;\u6570\u5b57\uff09{self\u3002 0.do_sub\uff08\uff06amp;\u5176\u4ed60\uff09; }\n  \u8981\u4e58\u4ee5\u4e24\u4e2a\u56fa\u5b9a\u6570\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u652f\u6301INT32\u4e58\u4ee5\u3002\u4f46\u662f\uff0c\u7531\u6b64\u4ea7\u751f\u7684\u6570\u5b57\u5c06\u989d\u5916\u4e58\u4ee5\u6bd4\u4f8b\u56e0\u5b50\uff0c\u56e0\u6b64\u6211\u4eec\u4e4b\u540e\u9700\u8981\u9664\u4ee5\u6bd4\u4f8b\u56e0\u5b50\u6765\u53d6\u6d88\u5b83\u3002\n   \u8fd9\u9020\u6210\u4e86\u4e25\u91cd\u7684\u95ee\u9898\u3002\u5982\u679c\u6211\u4eec\u5728\u6211\u4eec\u7684\u56fa\u5b9a\u6570\u5b66\u4e2d\u5c1d\u8bd5\u6267\u884c2 * 2\uff0c\u5219\u7981\u6b62int32s\u5c06\u6267\u884c131072 * 131072\uff0c\u8fd9\u5c06\u6ea2\u51faINT32\u7684\u6700\u5927\u503c2,147,483,647\uff082 ^ 31  -  1\uff09\u3002 \n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u4e58\u4ee5\u4e4b\u524d\u7684\u89c4\u6a21\u56e0\u5b50\u5206\u5f00\uff0c\u4f46\u662f\u6254\u6389\u4e86\u4e00\u4e2a\u591a\u6837\u6027\u7684\u6240\u6709\u6b21\u6570\u5c16\u7aef\u8868\u73b0\u7684\u4e25\u91cd\u7f3a\u70b9\u3002\n  \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u610f\u8bc6\u5230\u4e58\u6cd5\u51fd\u6570\u7684\u8f93\u51fa\u5360\u516b\u4f4d\u7684\u5757\uff0c\u4f46\u6211\u4eec\u53ea\u80fd\u5b58\u50a8\u5e95\u90e8\u56db\u4e2a\u5757\u7684ofeight bits\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u5ffd\u7565\u524d\u56db\u4e2a\u5757\u3002\n  \u4f46\u662f\uff0c\u5982\u679c\u4e58\u6cd5\u51fd\u6570\u53d6\u201c\u5411\u53f3\u79fb\u4f4d\u201d\u53c2\u6570\uff0c\u5219\u53ef\u4ee5\u4ece\u8f83\u9ad8\u7684\u5757\u4e2d\u8bfb\u53d6\u5e76\u66f4\u6539\u5ffd\u7565\u7684\u4fe1\u606f\u3002 forexample\uff0c\u5982\u679cright_shive_bytes\u4e3a0\uff0c\u5219\u4ece\u7ed3\u679c\u57570-3\u8bfb\u53d6\u3002 IFIT\u76841\uff0c\u5b83\u4ece\u7ed3\u679c\u57571-4\u8bfb\u53d6\u3002\u8fd9\u79cd\u6280\u672f\u5141\u8bb8\u6211\u4eec\u878d\u5408\u5e76\u5212\u5206\u5728\u4e00\u8d77\uff0c\u4ee5\u907f\u514d\u5728\u5176\u95f4\u5931\u53bb\u4fe1\u606f\u3002 TheDivide\u662f\u901a\u8fc7\u53f3\u79fb\u5b8c\u6210\u7684\uff0c\u56e0\u4e3a\u53f3\u79fb\u5c06\u90e8\u5206\u8f6c\u79fb1\u4e2a\u7b49\u540c\u4e8e\u9664\u4ee5256\uff088\u6bd4\u7279\uff09\u3002\n   \u65b9\u4fbf\u5730\uff0c\u7531\u4e8e\u6211\u4eec\u9009\u62e9\u4e86\u4e0e\u6211\u4eec\u7684\u9635\u5217\u65b9\u6848\u5bf9\u9f50\u7684\u6bd4\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5c062\u4f5c\u4e3a\u53f3\u952e\u4f20\u90122\uff0c\u5e76\u83b7\u5f97\u6240\u9700\u7684\u7ed3\u679c\u3002\n  \u8be5\u90e8\u95e8\u7c7b\u4f3c\u4e8e\u4e58\u6cd5\uff0c\u4f46\u6211\u4eec\u4e8b\u5148\u9700\u8981\u4e58\u4ee5ScaleFactor\u4ee5\u907f\u514d\u5206\u6bcd\u4e2d\u7684\u989d\u5916\u6bd4\u4f8b\u56e0\u5b50\u3002\n   \u4f46\u5c31\u50cf\u4e58\u6cd5\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5212\u5206\u6346\u7ed1\u4e58\u6cd5\uff0c\u907f\u514d\u4e22\u5931\u7cbe\u5ea6\u6216\u6ea2\u51fa\u3002\u7ed3\u679c\u662fdo_left_shift_bytes_div\uff1a\n   \u5c31\u50cf\u4e58\u6cd5\u548c\u5212\u5206\u4e00\u6837\uff0c\u65b9\u5f62\u6839\u90e8\u6d89\u53ca\u6267\u884cinterningling Int32\u64cd\u4f5c\u5e76\u7ea0\u6b63\u6bd4\u4f8b\u56e0\u5b50\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u91c7\u53d6\u4e86\u5e73\u65b9 \n...... ", "note_en": "I recently spent some time going through the amazing nand2tetris course, and assignment #9 is to implementsomething with the Jack programming language that runs on the Hack computer. Myfriend encouraged me to try writing a raytracer, which is an algorithm thatgenerates physically realistic images by simulating light bouncing off ofobjects. The output of the raytracer is a beautiful image with shadows,reflections, and other physical phenomena. Implementing a raytracer requires abit of math and linear algebra, and it seemed like a fun challenge to writesomething complex with the limited capabilities of the Jack\u00a0language.\n I\u2019d like to share my approach and the challenges I faced reimplementing my ownmath system and optimizing a Jack program with limited tools. Though you maynever need to do this, you might learn a lot about how computers perform math,and gain an appreciation for math\u00a0libraries!\n  First, I looked at what the Jack language had to offer. I knew that debuggingwould be really challenging, so I was looking for how easy it would be to debug,print logging statements, and set\u00a0breakpoints.\n The answer was: not very easy. The system has a 512x256 black and white screen,and when you use  Output.printString to print stuff to it, it\u2019s emitted ontothe screen, not to a separate terminal, and it doesn\u2019t scroll very well. You canset breakpoints, but it\u2019s a little tricky to step into and out of functions. Forexample, here\u2019s printing \u201cHello world\u201d to the\u00a0screen.\n  This, along with performance concerns, led me to consider writing a testimplementation of the raytracer, so that I could practice the implementation,iterate quickly, and get it working before translating it to Jack. I chose Rustfor this because I\u2019ve always wanted to learn Rust, and because it seemed like agood fit. Rust has precise control over copying semantics and int sizes,automatic memory management, immutability-first coding, and handy features likeoverflow detection for\u00a0ints.\n  To write the Rust raytracer, I mostly followed this awesome blog postwith some simplifications and modifications for the Hack computer. Since it hasa 512x256 black and white screen (no grayscale), the output fidelity is prettylimited, so I chose not to implement the fancier stuff like reflections, sinceit wouldn\u2019t be very visible anyways. Secondly, I only needed to do all colorcomputations in a single channel, since I don\u2019t have colors. Finally, I knew I\u2019dneed some sort of  dithering algorithmto convert the grayscale output of the raytracer into black and white pixels ina nice-looking\u00a0way.\n You\u2019d think I\u2019d just be able to follow the tutorial, make these changes, rendera beautiful image, and start working on this blog post, but that wasn\u2019t thecase. First, I had to solve an arguably even harder problem: the fact that Jackhas no decimal point type, only whole integers. Furthermore, the only numbertype that Jack supports is a signed 16-bit integer ( i16 in Rust), which storesvalues from -32768 to 32767. This.. is not very big. Put it this way: you canoverflow this value by multiplying 200 by\u00a0200.\n In order to implement a raytracer, you need a fairly complete math library,including multiplication, division, square roots, and \u03c0. Jack has  Math.sqrt,but it only works on the native  int type and truncates to the nearest  int.\n Of course, Rust has all the math functions I need, but it wouldn\u2019t be a verygood test implementation if I used Rust-specific functions. Therefore, I neededto use only the parts of Rust that exist in Jack, and implement the new partsmyself in order to port them to\u00a0Jack.\n So, before writing a single line of raytracer code, I needed to write my ownnumerical type that was big enough to support the range and precision I wanted.I decided to break this into two steps: implementing a big enough  Int class,then implementing a decimal point type on top of it using fixed-point arithmetic.\n  The idea behind fixed point arithmetic is that you can use some storage to storedata after the decimal point. Switching to standard base 10 for a second,consider a scenario where I only have 5 digits for storage. I can either use itto store 0 to 99999, or I could mentally insert a decimal point after the thirddigit, which lets me store 0 to 999.99. In this case, I have three digits ofrange and two digits of precision. To actually store the data, I multiply by100, which is known as the scaling factor because you store  X * 100 torepresent  X: 34832 for 348.32, etc. When the scaling factor is 100, theprecision is 0.01, because your system\u2019s smallest increment is in steps of 0.01,and anything smaller is\u00a0lost.\n  When the scaling factor is higher, you can store higher-precision decimals, butyou lose overall range. For example, with a scaling factor of 1000, which meansyou store 34832 for 34.832, you now have three digits of decimals, but only twodigits before the decimal point, so your range is now only 0\u201199.\n The overall idea idea is that you have to allocate your five digits to eitherstoring pre- or post- decimal point digits, and it\u2019s a tradeoff between rangeand precision. I\u2019ll go into this more\u00a0later!\n  Returning to building the  Int class, the main technique for doing this is tostore an array of integers. The first integer is the least significant chunk,the next one is the next significant chunk, etc. It\u2019s just like the way one usesdigits to express larger\u00a0numbers.\n   In my Rust implementation, I use  i16s (signed 16-bit integers) for everyinteger, because I wanted to simulate the equivalent Jack type  int.\n   This is a struct with an array of four  i16s. I called it  Int32 because Ithought a signed 32-bit integer would be enough range to support all the math Ineeded. It needs to support decimals in the future, and as mentioned above, Ineed to allocate these 32 bits to store data either before or after the decimalpoint. I\u2019ll go into this more in the next section. For now, we only need toconcern ourselves for implementing math on this  Int32 class.\n You might notice that I seem to have more data than I need: an array of four i16s is 64 bits of information, not 32. This is true. I deliberately left thetop eight bits of each  i16 empty, which means that each  i16 is in the rangeof  [0, 255]. I did this for a few\u00a0reasons:\n I\u2019ll need to use  i16 math to implement  Int32 math, and it\u2019s really helpfulto have some room for overflow. For example, if I use the entire  i16 range,and eventually add 30000 to 5000, it will overflow and wrap around to -30534,which is not desirable. Instead, if I only use the \u201cbottom\u201d half of the  i16,which stores 0 to 255, I can add 200 to 100 and get 300, then manually handlethe overflow myself.\n Jack has no unsigned integer, which makes the math troublesome. Most of thealgorithms that I\u2019m about to use only work on unsigned integers. Rather thantrying to make them work with signed integers, I decided to artificially limitthe size to pretend I had an unsigned integer. In other words, I can use a i16 to pretend to be a  u8 (unsigned 8-bit integer), because the range [0, 255] fits comfortably inside the range  [-32768, 32767].\n Assuming I don\u2019t use the top eight bits of each  i16, then each  i16contributes eight bits, and  8 * 4 = 32. Yay! Let\u2019s start working on the\u00a0math.\n  Most systems store negative numbers using a technique called two\u2019s complement. If you havean unsigned 3-bit integer, as you count from  000 to  111, the integers gofrom 0 to 7. But for a signed 3-bit integer stored as two\u2019s complement, as youcount from  000 to  111, the integers go from 0 to 3, then wrap around to -4,then count up to -1. This slices the available range in half, but allows you tostore negative\u00a0numbers!\n   Addition and subtraction \u201cjust work\u201d with positive and negative numberswithout having to do anything special. For example, 2 (010) + -4 (100) = 110, which corresponds to -2.\n It\u2019s easy to see if a number is negative: check if the most significant bit(farthest to the left) is 1.\n To implement negation in 2\u2019s complement, flip all the bits and add one. Here\u2019swhat that looks\u00a0like:\n pub   fn  do_neg( &amp; mut  self)  {    // Flip each integer. We need to AND with 0xFF to get rid of all the    // bits past the 8th bit, because those bits always need to be 0.   self.parts[ 0]   =   !self.parts[ 0]   &amp;   0xFF;   self.parts[ 1]   =   !self.parts[ 1]   &amp;   0xFF;   self.parts[ 2]   =   !self.parts[ 2]   &amp;   0xFF;   self.parts[ 3]   =   !self.parts[ 3]   &amp;   0xFF;     // Add one, and handle carry.   self.parts[ 0]   +=   1;     if  self.parts[ 0]   &gt;=   256  {   self.parts[ 0]   -=   256;   self.parts[ 1]   +=   1;   }     if  self.parts[ 1]   &gt;=   256  {   self.parts[ 1]   -=   256;   self.parts[ 2]   +=   1;   }     if  self.parts[ 2]   &gt;=   256  {   self.parts[ 2]   -=   256;   self.parts[ 3]   +=   1;   }     if  self.parts[ 3]   &gt;=   256  {   self.parts[ 3]   -=   256;   }  }\n You might notice I implemented this as a mutative function, rather thanreturning a new  Int32 with the negative result. This is a deliberate choice toavoid extra allocations. By reusing the same struct, I don\u2019t need to allocatemore memory for every math operation, and I\u2019ll be using these a  lot. Thismight be penny-pinching in Rust, but it was an absolute lifesaver for Jack. Ialso didn\u2019t use Rust\u2019s operator overloading, since Jack doesn\u2019t have\u00a0thatfeature.\n  As mentioned above, addition and subtraction are fairly easy in a two\u2019scomplement world. Like school math, you add each component and carry over to thenext higher chunk if\u00a0needed.\n  pub   fn  do_add( &amp; mut  self,  other:  &amp; Int32)  {   self.parts[ 0]   +=  other.parts[ 0];   self.parts[ 1]   +=  other.parts[ 1];   self.parts[ 2]   +=  other.parts[ 2];   self.parts[ 3]   +=  other.parts[ 3];     if  self.parts[ 0]   &gt;=   256  {   self.parts[ 0]   -=   256;   self.parts[ 1]   +=   1;   }     if  self.parts[ 1]   &gt;=   256  {   self.parts[ 1]   -=   256;   self.parts[ 2]   +=   1;   }     if  self.parts[ 2]   &gt;=   256  {   self.parts[ 2]   -=   256;   self.parts[ 3]   +=   1;   }     if  self.parts[ 3]   &gt;=   256  {   self.parts[ 3]   -=   256;   }  }\n  Remember that  parts[0] is the least significant chunk and  parts[3] is themost significant. This is also an example of how having that extra space in the i16 allows me to add two numbers in the  [0, 255] range without fear of  i16overflow.\n  Here\u2019s where it got trickier. Multiplication can be done just like the schooltechnique, where you multiply each pair of digits and offset\u00a0accordingly.\n  I took the algorithm from this post andadapted it to Rust (and later Jack). However, I ran into two\u00a0issues.\n First, I only adapted the unsigned version of the algorithm for simplicity. Thatmeans I needed to handle signs myself. Luckily, this is not too\u00a0bad:\n If either side was negative (i.e. if  A is negative ^ B is negative = true),negate the result.\n Secondly, I ran into integer sizing problems again during the implementation.The original implementation multiplies  unsigned shorts (or  u16 in Rust), anduses a temporary  unsigned int ( u32) to store the result. This is necessary,because multiplication is a range-expanding operation. For example, if youmultiply any two two-digit numbers, the result will be at most 4 digits. In thesame way, to properly fit the results of  u16 * u16, you need a  u32.\n  This is bad news for us because we only have one size, the  i16. You mightthink we could make this work because we secretly only use the bottom half, asmentioned above. However, even that doesn\u2019t\u00a0work.\n Since we\u2019re using just the bottom half of the  i16, it has a range of [0, 255]. What happens when we multiply 255 by 255? We get 65,025, whichdoesn\u2019t fit in a  i16 (range  [-32768, 32767]). Sad times! This makes sensebecause the  [0, 255] range is represented by the type  u8, and if youmultiply two  u8s, you get a  u16, which has the range  [0, 65535]. All wehave is  i16 (range  [-32768, 32767]), which doesn\u2019t fit :( This is a casewhere having an unsigned integer type in Jack would really help, but alas, we\u00a0donot.\n How do we fix this one? The answer is to subdivide again. Before performing themultiplication algorithm, we expand the array of four 8-bit chunks into eight4-bit chunks. Each 8-bit chunk is split into two 4-bit chunks, one with thelower four bits and one with the higher four\u00a0bits.\n let  self_parts_expanded: [ i16;   8]   =  [   self_parts[ 0]   &amp;   0x0F,   arith_rightshift(self_parts[ 0],   4),   self_parts[ 1]   &amp;   0x0F,   arith_rightshift(self_parts[ 1],   4),   self_parts[ 2]   &amp;   0x0F,   arith_rightshift(self_parts[ 2],   4),   self_parts[ 3]   &amp;   0x0F,   arith_rightshift(self_parts[ 3],   4),  ];\n  Now, we can use our multiplication algorithm on these 4-bit chunks, knowing thata unsigned 4-bit multiplication will result in a  u8, which fits inside our i16.\u00a0Huzzah!\n // Top 12 bits of each i16 should be empty, so read it like a &#34;u4&#34;. // We&#39;re simulating Jack which only has i16.  fn  u4_array_mul_u4_array(u:  &amp;[ i16;   8],  v:  &amp;[ i16;   8])  -&gt; [ i16;   16]  {    let   mut  w   =  [ 0 i16;   16];     for  j   in   0.. 8  {    let   mut  carry   =   0;    let  vj   =  v[j];    for  i   in   0.. 8  {    // Perform signed 16-bit math that will never overflow    // because we only put u4s into it! u4 * u4 = u8, which    // fits in a i16. We can&#39;t do use u8s because u8 * u8 =    // u16 and u16s don&#39;t fit in i16.    let  t   =  u[i]   *  vj   +  w[i   +  j]   +  carry;     // Bottom half of the multiply goes into the result; top    // half becomes carry for the next round.   w[i   +  j]   =  t   &amp;   0x0F;   carry   =  arith_rightshift(t,   4);   }   w[j   +   8]   =  carry;   }    w  }\n The result is generated in 4-bit chunks, so we need to combine each pair backinto one 8-bit chunk, which I won\u2019t show\u00a0here.\n Notice that I use a function to perform the right shift, rather than Rust\u2019snative  &gt;&gt;. This is again because Jack doesn\u2019t have a right shift operator, soI have to implement\u00a0it.\n // Jack doesn&#39;t have these, so we need to reimplement them.  fn  arith_rightshift(x:  i16,  n:  i16)  -&gt;  i16 {    let   mut  r   =  x;     for  _   in   0..n  {    let  divided   =  r   /   2;    // Negative numbers round away from 0, not towards 0.   r   =   if  r   &lt;   0   &amp;&amp;  divided   *   2   !=  r  {   divided   -   1   }   else  {   divided   }   }    r  }\n   Division is similar to multiplication, but a little more complicated. Just likemultiplication, I translated the code from this page. Thegeneral gist is also similar to grade school long division, where you generateeach quotient digit one by one, multiply the quotient digit by the divisor, andsubtract it from the\u00a0dividend.\n  We use the same technique of taking the absolute value before performing thealgorithm and then negating the result if exactly one of the inputs is\u00a0odd.\n As for the overflow issue, we need to break each 8-bit chunk into two 4-bitchunks, just like multiplication. The difference is that multiplication goeslike this:  8 chunks * 8 chunks =&gt; 16 chunks, while division performs theinverse:  16 chunks / 8 chunks = 8 chunks. I won\u2019t show the code here, but itjust means the input and output array sizes are\u00a0different.\n  There are many ways to compute square roots, and most of them involve some sortof converging formula that you run until you have the desired accuracy. I chosethe  Babylonian method forsimplicity. To compute the square root of  x:\n Average  guess and  x / guess to get a closer estimate of the square root,and update  guess.\n All of this is done with integer math, so it\u2019ll find the closest integer\u00a0squareroot.\n   pub   fn  do_sqrt( &amp; mut  self)  {    if  self.is_negative()  {   panic !();   }     if  self.is_zero()  {    return;   }     let   mut  guess   =  Int32::from( 5);    for  _   in   0.. 20  {    let   mut  inv   =   *self;   inv.do_div( &amp;guess);    guess.do_add( &amp;inv);   guess.do_div( &amp;Int32::from( 2));   }    self.parts   =  guess.parts;  }\n For simplicity, I started with a guess of  5 and ran 20 iterations every time.We\u2019ll talk about optimizations\u00a0later.\n Hooray, we finished our  Int32 implementation! You can see the final code here,along with unit tests. Now, we\u2019ll move on to implementing fixed\u2011pointarithmetic.\n  As mentioned above, fixed-point arithmetic involves using a whole number toencode a decimal by multiplying the decimal by a scale factor and storing theresulting\u00a0number.\n  Sometimes, a syntax like  Q15.17 is used to describe this scheme. The  Q15.17format is 32 bits (15 + 17) and uses 15 bits for pre-decimal point data and 17bits for post-decimal point data. For example, the old game Quake used  Q16.16for all of its code because the computers at that time didn\u2019t have fast floatingpoint math\u00a0yet.\n If  Q16.16 was good enough for Quake, it\u2019s probably good enough for me, so Ithought I\u2019d do the same. This means I\u2019ll use 16 bits for post-decimal pointdata, which means the scale factor will be  2^16 = 65536, and I\u2019ll be able tostore a decimal point number from -32768 to 32767, with precisions of 1/65536,or\u00a00.00001525878.\n As a result of this scheme, it happens that the top two  i16s in the  Int32parts array will be for pre-decimal point data, and the bottom two forpost-decimal point\u00a0data.\n  Now, we\u2019ll talk about how to implement fixed-point math, using what we\u00a0builtearlier.\n  To construct a  Number from a regular int, we need to wrap it in a  Int32,then multiply it by the scale\u00a0factor:\n  I wrote a handy function on  Int32 to handle the shift left for us. Shiftingleft by 2 bytes is the same as multiplying by  2^16, the scale\u00a0factor.\n  Addition and subtraction are fairly easy, because adding or subtracting two Numbers that have the same scale factor is as simple as performing theoperation on their backing  Int32s.\n pub   fn  do_add( &amp; mut  self,  other:  &amp; Number)  {   self. 0.do_add( &amp;other. 0);  }    pub   fn  do_sub( &amp; mut  self,  other:  &amp; Number)  {   self. 0.do_sub( &amp;other. 0);  }\n  To multiply two fixed numbers, we can multiply their backing  Int32s. However,the resulting number will have an extra multiply by the scale factor, so we needto divide by the scale factor afterwards to cancel it\u00a0out.\n   This poses a serious issue. If we try to do  2 * 2 in our fixed math, theunderlying  Int32s will perform  131072 * 131072, which will overflow the Int32\u2019s max of 2,147,483,647 ( 2^31 - 1).\n We could consider dividing by the scale factor prior to multiplying, but thishas the serious disadvantage of throwing away all of the post-decimal pointinformation of one of the\u00a0multiplicands.\n  To solve this, I realized that the output of the multiplication function iseight chunks of eight bits, but we can only store the bottom four chunks ofeight bits, so we normally ignore the top four\u00a0chunks.\n  However, if the multiplication function takes a \u201cbytes to right shift\u201d argument,it can read from higher chunks and change the information that is ignored. Forexample, if  right_shift_bytes is  0, it reads from result chunks  0-3. Ifit\u2019s  1, it reads from result chunks  1-4. This technique allows us to fusethe multiply and divide together to avoid losing information in between. Thedivide is accomplished by the right shift, because right shifting the parts by 1is equivalent to dividing by 256 (8\u00a0bits).\n   Conveniently, since we chose a scale factor that aligns with our array scheme,we can pass  2 as  right_shift_bytes and get the desired\u00a0result.\n  Division is similar to multiplication, but we need to multiply by the scalefactor beforehand to avoid an extra scale factor in the\u00a0denominator.\n   But just like multiplication, we can bundle the multiplication with the divisionto avoid loss of precision or overflow. The result is  do_left_shift_bytes_div:\n   Just like multiplication and division, square roots involve performing theunderlying  Int32 operation and correcting the scale factor. In this case,taking the squar\n......", "posttime": "2021-06-21 03:19:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "rust,\u9ed1\u5ba2,\u8ddf\u8e2a,raytracer", "title": "\u4eceNAND\u5230Raytracer\uff1a\u5728\u9ed1\u5ba2\u8ba1\u7b97\u673a\u4e0a\u7684\u6a2a\u5411\u8ddf\u8e2a\uff08\u58ee\u4e3e\uff09 ", "title_en": "From NAND to Raytracer: Raytracing on the Hack Computer (Feat. Rust)", "transed": 1, "url": "https://blog.alexqua.ch/posts/from-nand-to-raytracer/", "via": "", "real_tags": ["rust", "\u9ed1\u5ba2", "\u8ddf\u8e2a", "raytracer"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067070, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\nSSD\u5df2\u7ecf\u53d8\u5f97\u76f8\u5f53\u4fbf\u5b9c\uff0c\u5e76\u4e14\u6027\u80fd\u975e\u5e38\u9ad8\u3002 \u4f8b\u5982\uff0c\u4e09\u661fPM1733\u670d\u52a1\u5668SSD\u6bcfTB\u7684\u6210\u672c\u7ea6\u4e3a200\u6b27\u5143\uff0c\u5e76\u627f\u8bfa\u63a5\u8fd17 GB / s\u8bfb\u53d6\uff0c4 GB / s\u5199\u5165\u5e26\u5bbd\u3002 \u5b9e\u9645\u4e0a\u5b9e\u73b0\u4e86\u5982\u6b64\u9ad8\u7684\u6027\u80fd\u9700\u8981\u4e86\u89e3SSD\u7684\u5de5\u4f5c\u548c\u8fd9\u7bc7\u6587\u7ae0\u63cf\u8ff0\u4e86Flash SSD\u7684\u6700\u91cd\u8981\u7684\u5e55\u540e\u673a\u5236\u3002 \u6211\u8bd5\u56fe\u4fdd\u6301\u8fd9\u7bc7\u6587\u7ae0\uff0c\u8fd9\u610f\u5473\u7740\u6211\u5fc5\u987b\u7b80\u5316\u4e8b\u7269\u3002 \u4e3a\u4e86\u4e86\u89e3\u66f4\u591a\uff0c\u826f\u597d\u7684\u8d77\u70b9\u662f\u672c\u6559\u7a0b\uff0c\u4e5f\u5f15\u7528\u4e86\u4e00\u4e9b\u5bcc\u6709\u6d1e\u5bdf\u529b\u7684\u8bba\u6587\u3002 \u6700\u540e\uff0c\u56e0\u4e3aSSD\u5df2\u7ecf\u53d8\u5f97\u5982\u6b64\u5feb\uff0c\u6240\u4ee5\u64cd\u4f5c\u7cfb\u7edfI / O\u5806\u6808\u901a\u5e38\u662f\u6027\u80fd\u74f6\u9888\u3002 Linux\u7684\u5b9e\u9a8c\u7ed3\u679c\u53ef\u4ee5\u5728\u6211\u4eec\u7684CIDR 2020\u7eb8\u4e2d\u627e\u5230\u3002 ", "note_en": "Solid-State Drives (SSDs) based on flash have largely replaced magnetic disks as the standard storage medium. From the perspective of a programmer, SSDs and disks look very similar: both are persistent, enable page-based access through file systems and system calls, and have large capacities.  However, there are also important differences, which become important if one wants to achieve optimal SSD performance. As we will see, SSDs are more complicated and their performance behavior can appear quite mysterious if one simply thinks of them as fast disks. The goal of this post is to provide an understanding of why SSDs behave the way they do, which can help creating software that is capable of exploiting them. (Note that I discuss NAND flash, not Intel Optane memory, which has different characteristics.)\n  SSDs are often referred to as disks, but this is misleading as they store data on semiconductors instead of a mechanical disk. To read or write from a random block, a disk has to mechanically move its head to the right location, which takes on the order of 10ms. A random read from an SSD, in contrast, takes about 100us \u2013 100 times faster. This low read latency is the reason why booting from an SSD is so much faster than booting from a disk.\n  Another important difference between disks and SSDs is that disks have one disk head and perform well only for sequential accesses. SSDs, in contrast, consist of dozens or even hundreds of flash chips (&#34;parallel units&#34;), which can be accessed concurrently.  SSDs transparently stripe larger files across the flash chips at page granularity, and a hardware prefetcher ensures that sequential scans exploit all available flash chips. However, at the flash level there is not much difference between sequential and random reads. Indeed, for most SSDs it is possible to achieve almost the full bandwidth with random page reads as well. To do this, one has to schedule hundreds of random IO requests concurrently in order to keep all flash chips busy. This can be done by starting lots of threads or using asynchronous IO interfaces such as libaio or io_uring.\n  Things get even more interesting with writes. For example, if one looks at write latency, one may measure results as low as 10us \u2013 10 times faster than a read. However, latency only appears so low because SSDs are caching writes on volatile RAM. The actual write latency of NAND flash is about 1ms \u2013 10 times slower than a read. On consumer SSDs, this can be measured by issuing a sync/flush command after the write to ensure that the data is persistent on flash. On most data center/server SSDs, write latency cannot be measured directly: the sync/flush will complete immediately because a battery guarantees persistence of the write cache even in the case of power loss.   To achieve high write bandwidth despite the relatively high write latency, SSDs use the same trick as reads: they access multiple flash chips concurrently. Because the the write cache can asynchronously write pages, it is not even necessary to schedule that many writes simultaneously to get good write performance. However, the write latency cannot always be hidden completely: for example, because a write occupies a flash chip 10 times longer a read, writes cause significant tail latencies for reads to the same flash chip.\n  Our understanding is missing one important fact: NAND flash pages cannot be overwritten. Page writes can only be performed sequentially within blocks that have been erased beforehand. These erase blocks have a size of multiple MB and therefore consist of hundreds of pages. On a new SSD, all blocks are erased, and one can directly start appending new data.  Updating pages, however, is not so easy. It would be too expensive to erase the entire block just to overwrite a single page in-place. Therefore, SSDs perform page updates by writing the new version of the page to a new location. This means that the logical and physical pages addresses are decoupled. A mapping table, which is stored on the SSD, translates logical (software) addresses to physical (flash) locations. This component is also called Flash Translation Layer (FTL).  For example, let&#39;s assume we have a (toy) SSD with 3 erase blocks, each with 4 pages. A sequence of writes to pages P1, P2, P0, P3, P5, P1 may result in the following physical SSD state:\n    Using the mapping table and out-of-place write, everything is good until the SSD runs out of free blocks. The old version of overwritten pages must eventually be reclaimed. If we continue our example from above by writing to pages P3, P4, P7, P1, P6, P2, we get the following situation:    At this point we have no more free erase blocks (even though logically there should still be space). Before one can write another page, the SSD first has to erase a block. In the example, it might be best for the garbage collector to erase block 0, because only one of its pages is still in use. After erasing block 0, we make space for 3 writes and our SSD looks like this:\n  To garbage collect block 0, we had to physically move page P0, even though logically nothing happened with that page. In other words, with flash SSDs the number of physical (flash) writes is generally higher than the number of logical (software) writes. The ratio between the two is called write amplification. In our example, to make space for 3 new pages in block 0, we had to move 1 page. Thus we have 4 physical writes for 3 logical writes, i.e., a write amplification of 1.33.  High write amplification decreases performance and reduces flash lifetime. How large write amplification is depends on the access pattern and how full the SSD is. Large sequential writes have low write amplification, while random writes are the worst case.  Let&#39;s assume our SSD is filled to 50% and we perform random writes. In steady state, wherever we erase a block, about half the pages of that block are still in use and have to be copied on average. Thus, write amplification for a fill factor of 50% is 2. In general, worst-case write amplification for a fill factor f is 1/(1-f):     Because write amplification becomes unreasonably high for fill factors close to 1, most SSDs have hidden spare capacity. This overprovisioning is typically 10-20% of the total capacity. Of course, it is also easy to add more overprovisioning by creating an empty partition and never write to it.\n  SSDs have become quite cheap and they have very high performance. For example, a Samsung PM1733 server SSD costs about 200 EUR per TB and promises close to 7 GB/s read and 4 GB/s write bandwidth. Actually achieving such high performance requires knowing how SSD work and this post described the most important behind-the-scenes mechanisms of flash SSDs.  I tried to keep this post short, which meant that I had to simplify things. To learn more, a good starting point is  this tutorial, which also references some insightful papers. Finally, because SSDs have become so fast, the operating system I/O stack is often the performance bottleneck. Experimental results for Linux can be found in our  CIDR 2020 paper.", "posttime": "2021-06-21 03:18:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u5e94\u8be5,programmer,ssd", "title": "\u6bcf\u4e2a\u7a0b\u5e8f\u5458\u5e94\u8be5\u77e5\u9053SSD ", "title_en": "What every programmer should know about SSDs", "transed": 1, "url": "https://databasearchitects.blogspot.com/2021/06/what-every-programmer-should-know-about.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u5e94\u8be5", "ssd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067069, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Warning: Can only detect less than 5000 characters\n\u6211\u95ee\u9053\uff0cDes @Phbernardelli @Phbernardelli @Phbernardelli\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u73b0\u5728\u521a\u521a\u51fa\u6765\uff1a\u662f\u7684\uff01\u6211\u4eec\u57282018\u5e74\u548c2019\u5e74\u4e4b\u95f4\u641c\u7d22\u4e86\u524d\u56db\u5e74\u7684\u6570\u636e\uff0c\u5e76\u521a\u521a\u5b8c\u6210\u4e86\u5168\u9762\u641c\u7d22\uff082020-2021\u7684\u4e13\u7528TNO\u5904\u7406\uff09\uff0c\u4ee5\u53ca\u4ece\u8c03\u67e5\u56fe\u50cf\u7684\u76ee\u5f55\u751f\u4ea7\u7684\u989d\u5916\u65f6\u95f4\uff0c\u5e76\u5728\u4ee5\u524d\u7684\u6570\u636e\u7248\u672c\u4e0a\u6709\u8bb8\u591a\u6539\u8fdb\u3002\u5173\u4e8eMarshall\u5173\u4e8eMarshall\u8fd9\u4e2a\u65b0\u5bf9\u8c61\uff0c2014\u5e74UN271\uff0c\u4e0d\u4ec5\u4ec5\u662f\u4e0d\u5bfb\u5e38\u7684\uff0c\u800c\u4e14\u5728\u592a\u9633\u7cfb\u4e2d\u7684\u6240\u6709\u5df2\u77e5\u8eab\u4f53\u4e2d\u5747\u5300\u5730\u51fa\u8272\u3002\u4ece\u592a\u9633\u4e2d\u53d1\u73b0\u4e86\u5927\u7ea629\u4e2aAu\uff0c\u76ee\u524d\u8ddd\u79bbof the 22\u5de6\u53f3\uff0c\u5b83\u4ece\u571f\u661f\uff0810.9 au\uff09\u7684\u8f68\u9053\u4e0a\u4e00\u76f4\u5230oort\u4e91 - \u6ca1\u6709\uff0c\u800c\u4e0d\u662f\u5c71\u4e91\u3002 oort\u4e91\u3002\u4f20\u5165\u7684\u91cd\u5fc3aphelion\u662f39,400 +/- 1200 Au\uff0c\u5916\u5411\u5b83\u5c06\u662f\u4e00\u4e2a\u5076\u6570\u62e5\u62b1\u800554,600 +/- 2300\uff08!!\uff09\u5a01\u61512031\u5e741\u670821\u65e5574596 +/- 0.0666 Tt = 13:47:47\uff08JD 2462888.074596\uff09\u65f6\u671f1000 1\u67081.0 TT = JDT 2086307.5 Find_orb M 359.86589747 +/- 0.006\uff08J2000 Ecliptic\uff09N 0.0000000035 +/- 1.73E-8 Peri\u3002 326.27934 +/- 0.0006 A 19721.6906 +/- 665\u8282\u70b9190.00285 +/- 0.000052 E 0.9994448 +/- 1.81E-5\u5305\u62ec\u3002 95.46628 +/- 0.000052 P2767738 H 7.8 G 7.8 G 0.15 0.7 Q 10.9491955 +/- 0.000177 Q 39432.4321 +/- 1232\u6765\u81ea37 2014\u5e748\u670828\u65e5\u81f32018\u5e7411\u670828\u65e5;\u5e73\u5747\u5269\u4f590\uff06\uff0334; .07\u5371\u96692031\u5e741\u670821\u65e5542640 +/- 0.062 TT = 13:01:24\uff08JD 2462888.042640\uff09EPOCH 3000 JAN 1.0 TT = JDT 2816787.5 +/- 0.07733589 +/ 0.0053\uff08J2000 EGLIPTIC\uff09N 0.0000000021 + / -  1.47e-8 peri\u3002 326.24537 +/- 0.0006 A 27310.4810 +/- 1288\u8282\u70b9190.00938 +/- 0.000052 e 0.9995990 +/- 1.82E-5\u5305\u62ec95.46057 +/- 0.000052 P4510273 H 7.8 G 7.8 G 0.15 U 0.6 Q 10.9490073 +/- 0.000177 Q 54610.0131 +/- 2312\u6765\u81ea37 2014\u5e748\u670828\u65e5\u81f32014\u5e7411\u670828\u65e5;\u5e73\u5747\u5269\u4f590\uff06\uff0334; .07\u57fa\u4e8e\u7ed9\u5b9a\u7684\u7edd\u5bf9\u5e45\u5ea6\uff0c\u5e76\u7ed9\u51fa\u4e862014\u5e74\u4eceCFHT\u7684\u62cd\u6444\u56fe\u50cf\u4e2d\u67e5\u770b\u7684\u7279\u6b8a\u7ea2\u8272\uff08G  -  R\u989c\u8272\u4e3a0.9\uff0c\u800cR  -  I\u4e3a0.5\uff01\uff09\u6211\u4f1a\u4f30\u8ba1Albedo\u4e3a0.01-0.08\u7684\u76f4\u5f84\u4e3a130-370\u516c\u91cc\uff08\u540d\u4e49\u4e0a\u662f160\uff09\uff0c\u5b83\u653e\u5728\u7c7b\u4f3c\u7684\u5c3a\u5ea6\u4e0a\uff0c\u5982\u679c\u4e0d\u5927\u4e8e\uff0c\u8428\u62c9\u5df4\u7279\uff06\uff0339;\u5de8\u5927\u7684comet c / 1729 p1\uff0c\u51e0\u4e4e\u662f\u6700\u5927\u7684oort\u4e91\u5bf9\u8c61\u53d1\u73b0 - \u51e0\u4e4e\u5728\u77ee\u661f\u7403\u9886\u571f\u4e0a\uff01\u5728\u6211\u7684\u8111\u6d77\u91cc\uff0c\u6211\u6beb\u65e0\u7591\u95ee\uff0c\u56e0\u4e3a\u8fd9\u66f4\u63a5\u8fd1\u592a\u9633\uff0c\u5b83\u5c06\u5f00\u59cb\u5c55\u793a\u5728\u5176\u8f68\u9053\u4e2d\u770b\u5230\u7684\u6bcf\u4e2a\u5176\u4ed6\u5bf9\u8c61\u7684\u660f\u8ff7\u548c\u5c3e\u5df4\u3002\u5b83\u51e0\u4e4e\u611f\u89c9\u5f52\u529f\u4e8e\u5c06\u4efb\u4f55\u7c7b\u578b\u7684\u7406\u8bba\u659c\u7387\u5f52\u7c7b\u4e3a\u4e0e\u8fd9\u6837\u7684\u524d\u8ff0\u7269\u4f53\u6709\u591a\u5c11\uff0c\u4f46\u5982\u679cHALE-BOPP\u5728\u5927\u8ddd\u79bb\u4e0a\u7684\u659c\u7387\u4e3a20\u7684\u4efb\u4f55\u6307\u793a\uff0c\u90a3\u4e482014 UN271\u53ef\u80fd\u8fbe\u5230\u5e45\u5ea613 2031\u5e74\u521d - \u4f46\u6211\u521a\u521a\u6bd416\u621617\u66f4\u660e\u4eae\u3002\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u90a3\u4e2a\uff06\uff0339;\u5b83\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u5149\u660e\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5e94\u8be5\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5341\u5e74\u4e2d\u8fdb\u884c\u4e00\u4e2a\u7279\u6b8a\u7684\u5b66\u4e60\u76ee\u6807\uff0c\u4ee5\u4f34\u968f\u5b83\u770b\u8d77\u6765\u662f\u4e00\u4e2a\u5353\u8d8a\u7684\u5bf9\u8c61\u3002 \u301cSAM\u94fe\u63a5\uff1a------ [1] https://groups.io/g/mpml/message/36493 [2] https\uff1a//groups.io/mt/83645454/2048683 [3] https\uff1a/ /groups.io/g/mpml/post [4] https\uff1a//groups.io/g/mpml/editsub/2048683 [5] https://groups.io/g/mpml/unsub\n \u60a8\u662f\u5426\u786e\u5b9a\u60a8\u5e0c\u671b\u4eceMPML@groups.io\u7684\u90ae\u4ef6\u6863\u6848\u4e2d\u5220\u9664\u6b64\u6d88\u606f\uff1f\u8fd9\u4e0d\u80fd\u88ab\u64a4\u6d88\u3002\n    \u539f\u56e0\u5411\u4e3b\u6301\u4eba\u62a5\u544a\u6211\u8ba4\u4e3a\u8fd9\u6761\u6d88\u606f\u662f\u9002\u5408\u6211\u4eec\u7684\u56e2\u4f53\u7684\uff06\uff0339;\u7ec4\u4e3b\u6301\u4eba\u8d1f\u8d23\u7ef4\u62a4\u793e\u533a\uff0c\u5e76\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5411Group.IO\u652f\u6301\u62a5\u544a\u6211\u8ba4\u4e3a\u8fd9\u8fdd\u53cd\u4e86\u670d\u52a1\u6761\u6b3e\u3002\u8fd9\u5305\u62ec\uff1a\u5bf9\u672a\u6210\u5e74\u4eba\uff0c\u66b4\u529b\u6216\u5a01\u80c1\uff0c\u9a9a\u6270\u6216\u9690\u79c1\u5165\u4fb5\uff0c\u5192\u72af\u6216\u865a\u5047\u9648\u8ff0\uff0c\u6b3a\u8bc8\u6216\u7f51\u7edc\u9493\u9c7c\u7684\u4f24\u5bb3\u3002 ", "note_en": "2014 UN271: A possible dwarf planet from the Oort Cloud on a tour through the Solar System\n       This new object, 2014 UN271, is not just unusual, but radically exceptional among all known bodies in the Solar System to date. Discovered about 29 AU out from the Sun and currently around 22 away, its orbit takes it from just beyond the orbit of Saturn (10.9 AU) all the way out to the Oort Cloud - no, not the Hill Cloud. the Oort Cloud. The incoming barycentric aphelion was 39,400 +/- 1200 AU, and outgoing it will be an even huger 54,600 +/- 2300 AU (!!)\n  Peribarion 2031 Jan 21.574596 +/- 0.0666 TT = 13:47:25 (JD 2462888.074596) Epoch 1000 Jan\u00a0 1.0 TT = JDT 2086307.5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Find_Orb M 359.86589747 +/- 0.006\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (J2000 ecliptic) n\u00a0\u00a0 0.00000035 +/- 1.73e-8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Peri.\u00a0 326.27934 +/- 0.0006 a\u00a0 19721.6906 +/- 665\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Node\u00a0\u00a0 190.00285 +/- 0.000052 e\u00a0\u00a0 0.9994448 +/- 1.81e-5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Incl.\u00a0\u00a0 95.46628 +/- 0.000052 P2767738\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 H\u00a0 7.8\u00a0\u00a0 G\u00a0 0.15\u00a0\u00a0 U\u00a0 0.7 \u00a0 q 10.9491955 +/- 0.000177\u00a0\u00a0\u00a0 Q 39432.4321 +/- 1232 From 37 observations 2014 Aug. 28-2018 Nov. 8; mean residual 0&#34;.07\n  Peribarion 2031 Jan 21.542640 +/- 0.0662 TT = 13:01:24 (JD 2462888.042640) Epoch 3000 Jan\u00a0 1.0 TT = JDT 2816787.5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Find_Orb M\u00a0\u00a0 0.07733589 +/- 0.0053\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (J2000 ecliptic) n\u00a0\u00a0 0.00000021 +/- 1.47e-8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Peri.\u00a0 326.24537 +/- 0.0006 a\u00a0 27310.4810 +/- 1288\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Node\u00a0\u00a0 190.00938 +/- 0.000052 e\u00a0\u00a0 0.9995990 +/- 1.82e-5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Incl.\u00a0\u00a0 95.46057 +/- 0.000052 P4510273\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 H\u00a0 7.8\u00a0\u00a0 G\u00a0 0.15\u00a0\u00a0 U\u00a0 0.6 \u00a0 q 10.9490073 +/- 0.000177\u00a0\u00a0\u00a0 Q 54610.0131 +/- 2312    Based on the given absolute magnitude, and given how exceptionally red it looked in 2014 precovery images from CFHT (the g - r color was 0.9, and r - i was 0.5!) I would estimate at an albedo of 0.01-0.08 a diameter of 130-370 kilometers (nominally 160) which puts it on a similar scale, if not larger than, Sarabat&#39;s huge comet C/1729 P1, and almost undoubtedly the largest Oort Cloud object ever discovered- almost in dwarf planet territory!\n  I have little doubt in my mind that as this gets closer to the Sun, it will begin displaying the coma and tail typical of every other object yet seen in its orbit. It almost feels premature to ascribe any sort of theoretical slope to it with how little precedent there is for objects like this, but if Hale-Bopp is any indication with its slope of 20 at large distances, then 2014 UN271 could possibly reach magnitude 13 in early 2031 - but I wouldn&#39;t count on much brighter than 16 or 17 just yet. Either way, that&#39;s impressively bright, and this object should make an exceptional target of study in the next couple of decades to accompany how exceptional an object it looks to be.\n    On 2021-06-19 02:48, Sam Deen via groups.io wrote:  Given that the data span from 2014-2018, but this is coming out now, was this object found in a re-analysis of the DES data? Maybe the software filters were tuned.  Regards Marshall   This new object, 2014 UN271, is not just unusual, but radically exceptional among all known bodies in the Solar System to date. Discovered about 29 AU out from the Sun and currently around 22 away, its orbit takes it from just beyond the orbit of Saturn (10.9 AU) all the way out to the Oort Cloud - no, not the Hill Cloud. the Oort Cloud. The incoming barycentric aphelion was 39,400 +/- 1200 AU, and outgoing it will be an even huger 54,600 +/- 2300 AU (!!) Peribarion 2031 Jan 21.574596 +/- 0.0666 TT = 13:47:25 (JD 2462888.074596) Epoch 1000 Jan 1.0 TT = JDT 2086307.5 Find_Orb M 359.86589747 +/- 0.006 (J2000 ecliptic) n 0.00000035 +/- 1.73e-8 Peri. 326.27934 +/- 0.0006 a 19721.6906 +/- 665 Node 190.00285 +/- 0.000052 e 0.9994448 +/- 1.81e-5 Incl. 95.46628 +/- 0.000052 P2767738 H 7.8 G 0.15 U 0.7 q 10.9491955 +/- 0.000177 Q 39432.4321 +/- 1232 From 37 observations 2014 Aug. 28-2018 Nov. 8; mean residual 0&#34;.07 Peribarion 2031 Jan 21.542640 +/- 0.0662 TT = 13:01:24 (JD 2462888.042640) Epoch 3000 Jan 1.0 TT = JDT 2816787.5 Find_Orb M 0.07733589 +/- 0.0053 (J2000 ecliptic) n 0.00000021 +/- 1.47e-8 Peri. 326.24537 +/- 0.0006 a 27310.4810 +/- 1288 Node 190.00938 +/- 0.000052 e 0.9995990 +/- 1.82e-5 Incl. 95.46057 +/- 0.000052 P4510273 H 7.8 G 0.15 U 0.6 q 10.9490073 +/- 0.000177 Q 54610.0131 +/- 2312 From 37 observations 2014 Aug. 28-2018 Nov. 8; mean residual 0&#34;.07 Based on the given absolute magnitude, and given how exceptionally red it looked in 2014 precovery images from CFHT (the g - r color was 0.9, and r - i was 0.5!) I would estimate at an albedo of 0.01-0.08 a diameter of 130-370 kilometers (nominally 160) which puts it on a similar scale, if not larger than, Sarabat&#39;s huge comet C/1729 P1, and almost undoubtedly the largest Oort Cloud object ever discovered- almost in dwarf planet territory! I have little doubt in my mind that as this gets closer to the Sun, it will begin displaying the coma and tail typical of every other object yet seen in its orbit. It almost feels premature to ascribe any sort of theoretical slope to it with how little precedent there is for objects like this, but if Hale-Bopp is any indication with its slope of 20 at large distances, then 2014 UN271 could possibly reach magnitude 13 in early 2031 - but I wouldn&#39;t count on much brighter than 16 or 17 just yet. Either way, that&#39;s impressively bright, and this object should make an exceptional target of study in the next couple of decades to accompany how exceptional an object it looks to be. ~Sam Links: ------ [1]  https://groups.io/g/mpml/message/36493 [2]  https://groups.io/mt/83645454/2048683 [3]  https://groups.io/g/mpml/post [4]  https://groups.io/g/mpml/editsub/2048683 [5]  https://groups.io/g/mpml/unsub\n    On 2021-06-19 09:28, Marshall Eubanks wrote:  On 2021-06-19 02:48, Sam Deen via groups.io wrote:  Given that the data span from 2014-2018, but this is coming out now, was this object found in a re-analysis of the DES data? Maybe the software filters were tuned.\nI asked around and Dr. Pedro Bernardinelli @phbernardinelli of the DES explained why this just came out now:  Yes! We searched the first four years of data between 2018 and 2019, and just completed the full search (2020-2021 for the dedicated TNO processing), plus extra time for catalog production from the survey images, with many improvements over previous data releases.  Regards Marshall    Regards Marshall   This new object, 2014 UN271, is not just unusual, but radically exceptional among all known bodies in the Solar System to date. Discovered about 29 AU out from the Sun and currently around 22 away, its orbit takes it from just beyond the orbit of Saturn (10.9 AU) all the way out to the Oort Cloud - no, not the Hill Cloud. the Oort Cloud. The incoming barycentric aphelion was 39,400 +/- 1200 AU, and outgoing it will be an even huger 54,600 +/- 2300 AU (!!) Peribarion 2031 Jan 21.574596 +/- 0.0666 TT = 13:47:25 (JD 2462888.074596) Epoch 1000 Jan 1.0 TT = JDT 2086307.5 Find_Orb M 359.86589747 +/- 0.006 (J2000 ecliptic) n 0.00000035 +/- 1.73e-8 Peri. 326.27934 +/- 0.0006 a 19721.6906 +/- 665 Node 190.00285 +/- 0.000052 e 0.9994448 +/- 1.81e-5 Incl. 95.46628 +/- 0.000052 P2767738 H 7.8 G 0.15 U 0.7 q 10.9491955 +/- 0.000177 Q 39432.4321 +/- 1232 From 37 observations 2014 Aug. 28-2018 Nov. 8; mean residual 0&#34;.07 Peribarion 2031 Jan 21.542640 +/- 0.0662 TT = 13:01:24 (JD 2462888.042640) Epoch 3000 Jan 1.0 TT = JDT 2816787.5 Find_Orb M 0.07733589 +/- 0.0053 (J2000 ecliptic) n 0.00000021 +/- 1.47e-8 Peri. 326.24537 +/- 0.0006 a 27310.4810 +/- 1288 Node 190.00938 +/- 0.000052 e 0.9995990 +/- 1.82e-5 Incl. 95.46057 +/- 0.000052 P4510273 H 7.8 G 0.15 U 0.6 q 10.9490073 +/- 0.000177 Q 54610.0131 +/- 2312 From 37 observations 2014 Aug. 28-2018 Nov. 8; mean residual 0&#34;.07 Based on the given absolute magnitude, and given how exceptionally red it looked in 2014 precovery images from CFHT (the g - r color was 0.9, and r - i was 0.5!) I would estimate at an albedo of 0.01-0.08 a diameter of 130-370 kilometers (nominally 160) which puts it on a similar scale, if not larger than, Sarabat&#39;s huge comet C/1729 P1, and almost undoubtedly the largest Oort Cloud object ever discovered- almost in dwarf planet territory! I have little doubt in my mind that as this gets closer to the Sun, it will begin displaying the coma and tail typical of every other object yet seen in its orbit. It almost feels premature to ascribe any sort of theoretical slope to it with how little precedent there is for objects like this, but if Hale-Bopp is any indication with its slope of 20 at large distances, then 2014 UN271 could possibly reach magnitude 13 in early 2031 - but I wouldn&#39;t count on much brighter than 16 or 17 just yet. Either way, that&#39;s impressively bright, and this object should make an exceptional target of study in the next couple of decades to accompany how exceptional an object it looks to be. ~Sam Links: ------ [1]  https://groups.io/g/mpml/message/36493 [2]  https://groups.io/mt/83645454/2048683 [3]  https://groups.io/g/mpml/post [4]  https://groups.io/g/mpml/editsub/2048683 [5]  https://groups.io/g/mpml/unsub\n Are you sure you wish to delete this message from the message archives of mpml@groups.io?  This cannot be undone.\n    Reason    Report to Moderators   I think this message isn&#39;t appropriate for our Group. The Group moderators are responsible for maintaining their community and can address these issues.    Report to Groups.io Support   I think this violates the Terms of Service. This includes: harm to minors, violence or threats, harassment or privacy invasion, impersonation or misrepresentation, fraud or phishing.", "posttime": "2021-06-21 03:18:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9633\u5149,planet,mpml", "title": "\u5728\u672a\u676510\u5e74\u7684\u9633\u5149\u4e0b\uff0c\u77ee\u5c0f\u7684\u661f\u7403\u5728\u9633\u5149\u4e0b\u6765 ", "title_en": "A dwarf planet coming within 11 au of the sun over the next 10 years", "transed": 1, "url": "https://groups.io/g/mpml/topic/83645454#36493", "via": "", "real_tags": ["\u9633\u5149", "planet", "mpml"]}, {"category": "", "categoryclass": "", "imagename": "010bc6277510eb04e965c2c516356f5f.jpeg", "infoid": 1067067, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6ce8\u610f\uff1a\u6211\u662f\u4f5c\u4e3aAutodesk\u7684\u524d\u5458\u5de5\uff08\u622a\u81f36\u67082021\u5e746\u6708\uff09\u7684\u5458\u5de5\u3002\u6839\u636e\u6211\u4e0e\u516c\u53f8\u7684\u65f6\u95f4\u5185\u7684\u56de\u5fc6\u548c\u4e2a\u4eba\u7ecf\u5386\uff0c\u6211\u7684\u89c2\u70b9\u5b8c\u5168\u662f\u6211\u81ea\u5df1\u7684\u3002\n \u5728Autodesk\u6536\u8d2d\u540e\uff0c\u6211\u4e00\u76f4\u5728\u66fe\u7ecf\u6709\u8fc77\u5e74\u7684\u5404\u79cd\u80fd\u529b\u7684\u9730\u5f39\u67aa\u961f\u4f0d\u3002\u6211\u4e0e\u56e2\u961f\u5408\u4f5c\u7684\u6700\u521d\u51e0\u4e2a\u6708\uff0c\u4eba\u4eec\u4f1a\u95ee\u6211\u662f\u4ec0\u4e48\u6837\u7684\uff0c\u6211\u603b\u662f\u56de\u7b54\u201c\u7edd\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u8d85\u7ea7\u806a\u660e\uff0c\u8fd9\u771f\u7684\u5f88\u5947\u602a\u201d\u3002\u5b9e\u9645\u4e0a\uff0c\u90a3\u91cc\u7684\u6bcf\u4e2a\u4eba\u90fd\u53c8\u642c\u5230\u4e86Autodesk\u4e4b\u5916\u7684\u5176\u4ed6\u4e1c\u897f\uff0c\u4f46\u6211\u4e0e\u4ed6\u4eec\u4e2d\u7684\u8bb8\u591a\u4eba\u4fdd\u6301\u8054\u7cfb\uff0c\u60f3\u5ff5\u4ed6\u4eec\u7684\u5927\u5927\u5927\u3002\n \u4eca\u5929\u6211\u8bfb\u5230\u4e86\u8fd9\u7bc7\u6587\u7ae0\uff08\u8b66\u544a\uff1a\u5e16\u5b50\u4e2d\u4f7f\u7528\u7684\u8bed\u8a00\u76f8\u5f53\u5f3a\uff09\u3002\u8fd9\u662f\u6ca1\u6709\u4ea7\u54c1\u7ecf\u7406\u60f3\u8981\u9605\u8bfb\u7684\u4e1c\u897f\uff0c\u56e0\u4e3a\u5b83\u8868\u793a\u6211\u4eec\u5931\u8d25\u4e86\u6211\u4eec\u7684\u7528\u6237\u3002\u5b83\u8ba9\u6211\u4f53\u73b0\u4e86\u516c\u53f8\u5728\u516c\u53f8\u4e2d\u7684\u6539\u53d8\u4ee5\u53ca\u8fd9\u4e9b\u53d8\u5316\u5982\u4f55\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\u8868\u73b0\u51fa\u5728\u539f\u6765\u7684\u6700\u7231\u7684\u4ea7\u54c1\u672c\u8eab\u3002\n \u5f53\u6211\u5f00\u59cb\u65f6\uff0c\u9730\u5f39\u67aa\u56e2\u961f\u5185\u7684\u611f\u89c9\u662f\u5d4c\u5165\u5728\u4e00\u4e2a\u8f83\u5927\u7684\u516c\u53f8\u5185\u7684\u521b\u4e1a\u516c\u53f8\u4e4b\u4e00\u3002\u6211\u4eec\u6709\u5f88\u591a\u81ea\u4e3b\u6743\uff0c\u6211\u82b1\u4e86\u6700\u521d\u7684\u51e0\u4e2a\u6708\uff0c\u5e78\u798f\u5730\u6ca1\u6709\u610f\u8bc6\u5230\u5176\u4f59\u7684Autodesk\u7684\u5927\u90e8\u5206\u662f\u5728\u505a\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u4e13\u6ce8\u4e8e\u4e00\u4ef6\u4e8b\uff0c\u8fd9\u79cd\u5947\u5f02\u7684\u76ee\u7684\uff0c\u7ed3\u5408\u4e86\u5927\u591a\u6570\u7403\u961f\uff08\u6211\u6240\u5305\u62ec\u7684\uff09\u88ab\u62d4\u51fa\u7684\u884c\u4e1a\u6240\u5728\u7684\u4e8b\u5b9e\uff0c\u610f\u5473\u7740\u6211\u4eec\u6240\u6709\u4eba\u90fd\u6df1\u6df1\u5730\u5173\u5fc3\u6211\u4eec\u6b63\u5728\u505a\u7684\u5de5\u4f5c\u3002\u987e\u5ba2\u75bc\u75db\u4e0d\u662f\u4e00\u4e2a\u9648\u8bcd\u6ee5\u8c03\uff0c\u8fd9\u4e5f\u662f\u6211\u4eec\u7684\u75db\u82e6\u3002\u6211\u82b1\u4e86\u51e0\u4e2a\u6708\u5d4c\u5165\u7740\u8bd5\u56fe\u7528\u9730\u5f39\u67aa\u83b7\u5f97\u4ed6\u4eec\u7684\u7535\u5f71\u548c\u5267\u76ee\u7684\u8868\u6f14\uff0c\u5f53\u65f6\u4ed6\u4eec\u51fa\u4e86\u95ee\u9898\u800c\u4e14\u4ed6\u4eec\u5931\u53bb\u4e86\u65f6\u95f4\u6216\u6cae\u4e27\u7684\u65f6\u5019\uff0c\u6211\u5c31\u5728\u90a3\u91cc\u3002\u6211\u4eec\u516c\u53f8\u7684\u4f7f\u547d\u662f\u201c\u8ba9\u4eba\u4eec\u56de\u5bb6\u4e8e\u665a\u9910\u201d\uff0c\u6211\u4eec\u90fd\u77e5\u9053\u8fd9\u662f\u591a\u4e48\u91cd\u8981\u3002\u6211\u4eec\u770b\u5230\u4eba\u4eec\u957f\u65f6\u95f4\u5de5\u4f5c\uff0c\u4e3a\u4e00\u6bb5\u5a92\u4f53\u4e2d\u7684\u4e00\u6b21\u5c04\u51fb\u727a\u7272\u4e00\u5207\uff08\u6216\u8005\u662f\u90a3\u4e9b\u4eba\u4e4b\u4e00\uff09\u3002\u6211\u4eec\u62fc\u547d\u60f3\u8981\u6210\u529f\u3002\n  \u5373\u4f7f\u6211\u52a0\u5165\u4e03\u5e74\u524d\uff0c\u4e5f\u4f1a\u5728\u57fa\u4e8eWeb\u7684\u4ea7\u54c1\u4e2d\u4f7f\u7528\u7684\u5927\u90e8\u5206\u6280\u672f\uff0c\u5e76\u4e14\u8bb8\u591a\u8bbe\u8ba1\u6a21\u5f0f\u548c\u7528\u6237\u4e92\u52a8\u662f\u53e4\u8001\u7684\u6216\u906d\u53d7\u5306\u5fd9\u7684\u7c97\u7cd9\uff0c\u4ee5\u4fbf\u5c06\u5b83\u4eec\u4ece\u95e8\u51fa\u95e8\u3002\u4ece\u4e00\u5b9a\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4e8b\u60c5 - \u4ea7\u54c1\u5177\u6709\u4ea7\u54c1 - \u5e02\u573a\u7684\u5408\u9002\uff0c\u53ef\u8c13\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u539f\u56e0\uff0c\u8fd9\u5c31\u662f\u5176\u5f00\u53d1\u8fc7\u7a0b\u5f97\u5230\u4e86\u4f18\u5316\uff0c\u56e0\u4e3a\u5bf9\u5176\u5ba2\u6237\u7684\u4f17\u591a\u4e0d\u540c\u9700\u6c42\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u800c\u4e0d\u662f\u5728\u82b1\u65f6\u95f4\u548c\u80fd\u91cf\u65b9\u9762\uff0c\u629b\u5149\u7279\u5f81\u8db3\u591f\u597d\u3002\u6211\u4e86\u89e3B2B\u8f6f\u4ef6\u7684\u4e00\u4ef6\u4e8b\u662f\u6bcf\u4e2a\u5ba2\u6237\u90fd\u9700\u8981\u4e0d\u540c\u7684\u4e1c\u897f\u3002\u56e0\u6b64\uff0c\u5982\u679c\u60a8\u6709\u5ba2\u6237A\u9700\u8981\u4e00\u4e9b\u4e1c\u897f\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5c3d\u5feb\u5efa\u7acb\u5e76\u5c3d\u5feb\u5efa\u7acb\u5b83\uff0c\u5f53\u5ba2\u6237B\u4e0e\u4e0d\u540c\u7684\u95ee\u9898\u51fa\u73b0\u65f6\uff0c\u60a8\u5728\u77ed\u671f\u5185\u6fc0\u52b1\u5230\u73b0\u5728\uff0c\u5e76\u5efa\u7acb\u5ba2\u6237B\u9700\u8981\u7684\u4e1c\u897f\uff0c\u76f8\u53cd\u800c\u4e0d\u662f\u8fed\u4ee3\u4f60\u521a\u624d\u4e3a\u67d0\u4e9b\u865a\u6784\u672a\u6765\u5ba2\u6237\u63d0\u4f9b\u7684\u3002\u6bcf\u4e2a\u4eba\u90fd\u60f3\u5efa\u7acb\u4e50\u8da3\u7684\u8f6f\u4ef6\uff0c\u4f46\u8fd9\u6837\u505a\u7ecf\u5e38\u610f\u5473\u7740\u4e0d\u505a\u522b\u7684\u4e8b\u60c5\uff0c\u5f53\u4f60\u8bd5\u56fe\u8ba9\u4eba\u4eec\u201c\u5feb\u4e50\u201d\u548c\u201c\u613f\u610f\u4ed8\u94b1\u201d\u65f6\uff0c\u800c\u4e0d\u662f\u201c\u9ad8\u5174\u201d\uff0c\u6709\u4e9b\u4e1c\u897f\u5fc5\u987b\u7ed9\u4e88\u3002\n \u591a\u5e74\u6765\u8fd9\u4e00\u5fc3\u6001\u521b\u9020\u4e86\u4e00\u4e2a\u62e5\u6709\u4e30\u5bcc\u7684\u4ea7\u54c1\uff0c\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u4fdd\u7559\uff0c\u751a\u81f3\u8d62\u5f97\u4e86\u5b66\u9662\u5956\uff0c\u4f46\u5728\u4ea7\u54c1\u503a\u52a1\u7684\u63a5\u7f1d\u5904\u5d29\u6e83\u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u8fbe\u5230\u4e86\u4ea7\u54c1\u7684\u89c2\u70b9\uff0c\u6bcf\u5f53\u6211\u4eec\u5c1d\u8bd5\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u66f4\u65b0\u8f6f\u4ef6\u7684\u67d0\u4e9b\u65b9\u9762\uff0c\u90a3\u4e48\u51e0\u5341\u4e2a\u4e0d\u76f8\u5173\u7684\u4e1c\u897f\u4f1a\u7834\u574f\u3002\u6240\u6709\u4ee3\u7801\u4e2d\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u6709\u9650\uff0c\u5e76\u76f8\u53cd\uff0c\u7528\u6237\u914d\u7f6e\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u914d\u7f6e\u5176\u7279\u5b9a\u7684\u4f53\u9a8c\u3002\u5e76\u4e0d\u662f\u90a3\u4e48\u9730\u5f39\u67aa\u7684\u6bcf\u4e2a\u4f8b\u5b50\u90fd\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u4f46\u5b83\u5e76\u4e0d\u9065\u8fdc\u3002\n \u8fd9\u662f\u4e00\u4e2a\u4f3c\u4e4e\u5bf9\u65b0\u9886\u5bfc\u4f3c\u4e4e\u96be\u4ee5\u7406\u89e3\u7684\u95ee\u9898\u3002\u6709\u4eba\u4f1a\u52a0\u5165\u56e2\u961f\u7684\u91ce\u5fc3\u8ba9\u6211\u4eec\u66f4\u5feb\u5730\u8d70\u5f97\u66f4\u5feb\uff0c\u5047\u8bbe\u5b83\u7f3a\u4e4f\u7f3a\u4e4f\u52a8\u529b\u6216\u613f\u610f\u505a\u51fa\u6539\u53d8\u3002\u6211\u7ecf\u5e38\u5728\u601d\u8003\u8fd9\u79cd\u60c5\u51b5\u65f6\u63d0\u5230\u8fd9\u7bc7\u4f18\u79c0\u7684\u6587\u7ae0\uff0c\u7279\u522b\u662f\u8fd9\u4e2a\u56fe\u8868\uff1a \n\u6211\u4eec\u7ecf\u5e38\u5728\u56fe\u8868\u7684\u7ea2\u8272\u533a\u57df\u3002\u6211\u4eec\u6709\u5f88\u591a\u5173\u4e8e\u6211\u4eec\u9700\u8981\u4e0e\u4ea7\u54c1\u6240\u9700\u7684\u6570\u636e\uff0c\u4ee4\u4eba\u4e89\u8bba\u75af\u72c2\u5730\u4e89\u8bba\u6211\u4eec\u7a00\u7f3a\u8d44\u6e90\u7684\u6240\u6709\u4e8b\u60c5\u6700\u91cd\u8981\u7684\u662f\u4ec0\u4e48\uff0c\u56e0\u4e3a\u4e00\u5207\u90fd\u662f\u975e\u5e38\u5177\u6709\u6311\u6218\u6027\u7684\u548c\u6602\u8d35\u7684\u4e8b\u60c5;\u7136\u540e\u672a\u80fd\u6709\u6548\u5730\u6267\u884c\u3002\u4f46\u662f\uff0c\u6ca1\u6709\u5230\u4efb\u4f55\u6280\u672f\u969c\u788d\u3002\u8fd9\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u95ee\u9898\u3002\n  Autodesk\u662f\u4e00\u5bb6\u5927\u516c\u53f8\uff0c\u5c3d\u7ba1\u5168\u7403\u5458\u5de5\u5c11\u4e8e10,000\u540d\u5458\u5de5\u3002\u5b83\u662f\u6700\u7740\u540d\u7684AutoCAD\uff0c\u5c3d\u7ba1\u6574\u4f53\u4ea7\u54c1\u7ec4\u5408\u53ef\u80fd\u6570\u767e\u4e2a\u3002 Autodesk\u7684\u5927\u90e8\u5206\u90fd\u662f\u5efa\u7b51\uff0c\u5efa\u7b51\u548c\u5236\u9020\u4e1a\u7684\u670d\u52a1\u3002\u867d\u7136\u662f\u6536\u5165\u7684\u5c0f\u90e8\u5206\u6765\u81ea\u5a92\u4f53\uff06amp;\u5a31\u4e50\uff0c\u4e3b\u8981\u662f\u9ad8\u7aef3D\u5185\u5bb9\u521b\u5efa\u548c\u6e32\u67d3\uff08\u5e26\u9730\u5f39\u67aa\u4f5c\u4e3a\u4e13\u6ce8\u4e8e\u8fd9\u4e9b\u6d41\u7a0b\u7684\u4e1a\u52a1\u529f\u80fd\u7684\u4ea7\u54c1\uff09\u3002\u4f3c\u4e4e\u6ca1\u6709\u4eba\u77e5\u9053\uff0c\u6216\u8005\u81f3\u5c11\u80fd\u591f\u9610\u660e\u4e3a\u4ec0\u4e48\u5b83\u4fdd\u6301\u5b83\u7684\u6b7b\u4ea1\u4eba\uff08\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5b83\u5df2\u7ecf\u5728\u7a7a\u95f4\u4e2d\u83b7\u5f97\u4e86\u8bb8\u591a\u5360\u636e\u7a7a\u95f4\u4e2d\u7684\u8bb8\u591a\u4f18\u52bf\u4ea7\u54c1\uff09\uff0c\u8fd9\u4e9b\u5782\u76f4\u4e0d\u4f1a\u5c06\u5176\u5f52\u56e0\u4e8e\u516c\u53f8\u7684\u5e95\u7ebf\u3002\u6211\u4eec\u4f1a\u63a8\u6d4b\u6027\u522b\u547c\u5401\uff08\u5982\u5b83\u662f\uff09\u5927\u813e\u810f\u89c6\u89c9\u6548\u679cShowreels\uff0c\u4e0e\u5177\u6709\u5b89\u5168\u5e3d\u7684\u4eba\u7684\u7167\u7247\u548cUmpteenth\u5448\u73b0\u51fa\u4f01\u4e1a\u8425\u9500\u6750\u6599\u7684\u5efa\u7b51\u7269\u5916\u89c2\u7684\u4eba\u7684\u7167\u7247\u3002\u65e0\u8bba\u539f\u56e0\u5982\u4f55\uff0c\u6211\u4eec\u4e0d\u65ad\u89c9\u5f97\u516c\u53f8\u9738\u4e3b\u4f1a\u5728\u67d0\u4e9b\u65f6\u5019\u51b3\u5b9a\u524a\u51cf\u4ed6\u4eec\u7684\u635f\u5931\u5e76\u653e\u5f03\u6574\u4e2a\u90e8\u95e8\u3002\u5c3d\u7ba1\u5982\u6b64\u3002\u76f8\u53cd\uff0c\u6211\u4eec\u6709\u4e00\u4e32reorg\u53ca\u5176\u76f8\u5e94\u7684\u7126\u70b9\u8f6c\u53d8\u3002\n \u5de6\u53f3\u4e09\u5e74\u524d\uff0c\u6211\u4eec\u7684\u4ea7\u54c1\u7ec4\u88ab\u9009\u4e2d\u6765\u8bd5\u70b9Autodesk\u4e2d\u7684\u65b0\u201c\u5b75\u5316\u201d\u8fc7\u7a0b\u3002\u5728\u7eb8\u4e0a\u5b83\u662f\u4e00\u4e2a\u5353\u8d8a\u7684\u60f3\u6cd5 - \u60a8\u5141\u8bb8\u4e00\u4e2a\u5c0f\u7ec4\u6709\u6548\u5730\u51fd\u6570\u4e0e\u521d\u59cb\u81ea\u4e3b\u6743\u548c\u95ee\u8d23\u5236 - \u4f5c\u4e3a\u542f\u52a8\u3002\u6211\u4eec\u7684\u76ee\u6807\u6210\u4e3a\u57fa\u4e8e\u589e\u957f\u7684\uff0c\u6211\u4eec\u6709\u76ee\u6807\uff0c\u5982\u679c\u8fd9\u4e9b\u76ee\u6807\u6210\u529f\u9047\u5230\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u201c\u8d44\u91d1\u201d\u5c06\u76f8\u5e94\u589e\u52a0\u3002\n \u7136\u800c\uff0c\u8fd9\u4e2a\u95ee\u9898\u662f\u7403\u961f\u4e2d\u7684\u6ca1\u6709\u4eba\u771f\u6b63\u5173\u5fc3\u7684\u589e\u957f\u3002 \u201c\u8ba9\u4eba\u4eec\u56de\u5bb6\u7684\u65f6\u95f4\u5403\u665a\u9910\u201d\u5fc5\u987b\u53d8\u5f97\u66f4\u50cf\u662f\u201c\u5728\u67d0\u4e2a\u65f6\u95f4\u91cc\u7684\u66f4\u591a\u4eba\u56de\u5bb6\u201d\u3002\u6211\u4eec\u7684\u589e\u957f\u76ee\u6807\u7136\u540e\u6210\u4e3a\u4e00\u4e2a\u76ee\u7684\u7684\u624b\u6bb5\uff1a\u8ba9\u66f4\u591a\u7684\u7528\u6237\uff0c\u7136\u540e\u6211\u4eec\u83b7\u5f97\u8bb8\u53ef\uff0c\u4ee5\u505a\u6211\u4eec\u5b9e\u9645\u611f\u5230\u5174\u594b\u7684\u4e1c\u897f\u3002\n \u968f\u7740\u6240\u6709\u8fd9\u4e00\u5207\u90fd\u662f\u4e00\u79cd\uff08\u56de\u60f3\u8d77\u6765\uff09\u4e0d\u5408\u7406\u7684\u4e50\u89c2\u60c5\u7eea\u3002\u8be5\u56e2\u961f\u88ab\u91cd\u7ec4\uff0c\u4e00\u4e9b\u5f00\u53d1\u56e2\u961f\u88ab\u5220\u9664\uff0c\u66f4\u591a\u7684\u9ad8\u7ea7\u7ecf\u7406\u4eba\u5728\u4ed6\u4eec\u7684\u4f4d\u7f6e\u3002\u8fd9\u4e2a\u60f3\u6cd5\u662f\u8ba9\u4ed6\u4eec\u5230\u4f4d\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u56e2\u961f\u80fd\u591f\u6210\u957f\u3002\u6211\u4eec\u552f\u4e00\u9700\u8981\u5f04\u6e05\u695a\u7684\u662f\u627e\u5230\u589e\u957f\u673a\u4f1a\u7684\u5730\u65b9\u3002\n \u6211\u4eec\u4e3b\u5bfc\u7684\u9ad8\u7aef\u89c6\u89c9\u6548\u679c\u884c\u4e1a\u4ee4\u4eba\u60ca\u53f9\u7684\u662f\u9002\u5e94\u53d8\u5316\u7684\u901f\u5ea6\uff0c\u5e76\u4e14\u5728\u5243\u5200\u8584\u7684\u8fb9\u7f18\u6700\u5927\u7684\u5de5\u4f5c\u3002\u6bcf\u5e74\u6709\u6570\u767e\u4e07\u6d41\u5165\u7535\u5f71\u548c\u60c5\u8282\u4ea7\u91cf\uff0c\u4f46\u6ca1\u6709\uff08\u5e76\u4e14\u53ef\u80fd\u4ecd\u7136\u6ca1\u6709\uff09\u662f\u8fdb\u4e00\u6b65\u8d27\u5e01\u6211\u4eec\u73b0\u6709\u5ba2\u6237\u7684\u660e\u663e\u673a\u4f1a\u3002\u4f46\u6709\u4e24\u4e2a\u8d4c\u6ce8\u53ef\u80fd\u4f1a\u4ea7\u751f\u5dee\u5f02\u3002\u9996\u5148\uff0c\u9730\u5f39\u67aa\u592a\u96be\u4e86\uff0c\u56e0\u4e3a\u6ca1\u6709\u719f\u6089\u7684\u4eba\uff08\u7531\u4e8e\u6211\u4eec\u4ece\u672a\u507f\u8fd8\u4e0a\u8ff0\u4ea7\u54c1\u503a\u52a1\uff09\uff0c\u90a3\u4e48\u7ade\u4e89\u548c\u8fd0\u884c\u3002\u4fee\u590d\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u66f4\u5927\u7684\u91c7\u7528\u3002\u5176\u6b21\uff0c\u867d\u7136\u9730\u5f39\u67aa\u70ed\u95e8\u751f\u4ea7\u8005\u548c\u534f\u8c03\u5458\uff0c\u4f46\u827a\u672f\u5bb6\u5e76\u6ca1\u6709\u4e0e\u5b83\u76f8\u5904\u5f97\u5f88\u597d\u3002\u636e\u4f30\u8ba1\uff0c\u5728\u7ed9\u5b9a\u7684\u516c\u53f8\u4e2d\uff0c\u8fd8\u6709\u66f4\u591a\u7684\u827a\u672f\u5bb6\u4e0d\u4f7f\u7528\u9730\u5f39\u67aa\uff0c\u800c\u4e0d\u662f\u5df2\u7ecf\u4f7f\u7528\u5b83\uff0c\u5e76\u4e14\u8d62\u5f97\u4e86\u5b83\u4eec\u4f1a\u5bfc\u81f4\u663e\u7740\u589e\u957f\u3002\n \u6211\u4eec\u5728\u7ecf\u8fc7\u8fd9\u4e24\u4e2a\u6f5c\u5728\u7684\u673a\u4f1a\u4e4b\u540e\u4e3e\u529e\u7684\uff0c\u7136\u540e\u51e0\u4e4e\u7acb\u523b\u9047\u5230\u4e86\u9ebb\u70e6\u3002\u6211\uff08\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u4ea7\u54c1\u7ecf\u7406\uff09\u6d89\u53ca\u89e3\u51b3\u6613\u7528\u95ee\u9898\u3002\u4ec0\u4e48\u5f88\u5bb9\u6613\u8bc6\u522b\u969c\u788d\uff0c\u4ed6\u4eec\u4f18\u5148\u8003\u8651\u4ed6\u4eec\u7684\u91cd\u8981\u6027\u3002\u5728\u6211\u4eec\u6765\u7684\u5730\u65b9\uff0c\u5728\u5b9e\u9645\u4e0a\u52aa\u529b\u4e3a\u8fd9\u4e9b\u95ee\u9898\u5b9e\u65bd\u53ef\u884c\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6211\u4eec\u8bd5\u56fe\u89e3\u51b3\u7684\u4efb\u4f55\u95ee\u9898\u90fd\u662f\u6211\u4eec\u6240\u62e5\u6709\u7684\u56e2\u961f\u548c\u6211\u4eec\u5fc5\u987b\u514b\u670d\u7684\u6280\u672f\u6311\u6218\uff08\u518d\u6b21\u56de\u987e\u8fd9\u4e9b\u4f30\u8ba1\u4f3c\u4e4e\u4ee4\u4eba\u8ba8\u538c\u5730\u4e50\u89c2\uff09\u7684\u591a\u6708\u4efd\u52aa\u529b\u3002\u4e5f\u6ca1\u6709\u4eba\u771f\u6b63\u60f3\u8981\u627f\u8ba4\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u6211\u4eec\u6ca1\u6709\u5efa\u7acb\u5bb9\u6613\u4f7f\u7528\u7684\u4e1c\u897f\u7684\u7ecf\u9a8c\uff08\u5e78\u8fd0\u7684\u662f\uff0c\u81f3\u5c11\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\u6211\u4eec\u96c7\u7528\u7684\u8bb8\u591a\u4eba\u786e\u5b9e\u6709\u8fd9\u79cd\u7ecf\u5386\uff0c\u6211\u4ece\u4ed6\u4eec\u90a3\u91cc\u5b66\u5230\u4e86\u5f88\u591a\uff09\u3002 \n\u4f46\u6211\u4eec\u5c1d\u8bd5\u8fc7\uff0c\u601d\u8003\u6211\u4eec\u53ef\u4ee5\u5728\u8f83\u77ed\u7684\u65f6\u95f4\u8de8\u8d8a\u8f83\u77ed\u7684\u7ebf\u6761\u9879\u76ee\u5e76\u79ef\u7d2f\u4e00\u79cd\u52bf\u5934\u3002\u6211\u4eec\u5728\u672c\u5b63\u5ea6\u9884\u7b97\u5de5\u4f5c\uff0c\u4f46\u7b2c\u4e00\u5b63\u5ea6\u7684\u5de5\u4f5c\u5ef6\u4f38\u5230\u4e24\u4e2a\u5b63\u5ea6\uff0c\u7136\u540e\u5728\u89e3\u51b3\u56de\u5f52\u65b9\u9762\u8fdb\u4e00\u6b65\u5de5\u4f5c\uff0c\u7136\u540e\u66f4\u52a0\u56de\u5f52\u3002\u6211\u7684\u9009\u62e9\u6bcf\u6b21\u90fd\u5728\u653e\u5f03\u534a\u6210\u54c1\u4e2d\uff0c\u5c1d\u8bd5\u522b\u7684\u4e1c\u897f\uff0c\u5426\u5219\u901a\u8fc7\u5b8c\u6210\u6765\u5b8c\u6210\u4e8b\u7269\u3002\u6211\u9009\u62e9\u4e86\u540e\u4e00\u79cd\u9009\u62e9\uff0c\u56e0\u4e3a\u6211\u4eec\u5386\u53f2\u60a0\u4e45\u5730\u79bb\u5f00\u4e86\u534a\u6210\u54c1\uff0c\u800c\u4e14\u56e2\u961f\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u538c\u5026\u4e86\u5b83\u3002\u6211\u4ecd\u7136\u4e0d\u77e5\u9053\u5b83\u662f\u5426\u662f\u6b63\u786e\u7684\uff0c\u4f46\u7edd\u5bf9\u4e0d\u662f\u9519\u8bef\u7684\u3002\n \u4e0e\u6b64\u540c\u65f6\uff0c\u827a\u672f\u5bb6\u673a\u4f1a\u662f\u901a\u8fc7\u4ece\u5934\u5f00\u59cb\u5efa\u7acb\u4e00\u4e2a\u65b0\u4ea7\u54c1\uff0c\u4f7f\u7528\u6bd4\u6211\u4eec\u4e60\u60ef\u7684\u66f4\u591a\u73b0\u4ee3\u6280\u672f\u5806\u6808\u3002\u5b83\u4ee3\u8868\u4e86\u672a\u6765\uff0c\u4f46\u5b83\u4e5f\u610f\u5473\u7740\u8bb8\u591a\u4e0eRuby\u6216C ++\u7ecf\u5386\u8fc7\u7684\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u91cd\u65b0reskill\u3002\u90a3\u4e2a\u633a\u96be\u3002\u8be5\u4ea7\u54c1\uff0c\u9730\u5f39\u67aa\u521b\u9020\uff0c\u6700\u7ec8\u63a8\u51fa\u4e86\u9730\u5f39\u67aa\u5ba1\u67e5\u548c\u6279\u51c6\u5de5\u4f5c\u7684\u66ff\u4ee3\u65b9\u6848\u7684\u5e7f\u6cdb\uff08\u5728\u7528\u6237\u4f53\u9a8c\u65b9\u9762\uff09\u3002\u4f46\u5f88\u96be\u8ba9\u4eba\u4eec\u5b9e\u9645\u4f7f\u7528\u5b83\u3002\u51e0\u4e2a\u6708\u5de6\u53f3\uff0c\u6574\u4e2a\u7ec4\u7ec7\u7684\u6bcf\u4e2a\u4eba\u90fd\u505c\u6b62\u4e86\u4ed6\u4eec\u6b63\u5728\u505a\u7684\u4e8b\u60c5\uff0c\u4ee5\u5e2e\u52a9\u91c7\u7528\u63a8\u52a8\u3002\u8fd9\u662f\u8bb8\u591a\u4eba\u7684\u538b\u529b\u65f6\u95f4\uff0c\u5f53\u5b83\u7ed3\u675f\u65f6\uff0c\u5728\u7403\u961f\u4e0a\u7559\u4e0b\u4e86\u6df1\u6df1\u7684\u75a4\u75d5\u3002\n \u4e24\u4e2a\u53cd\u5bf9\u7684\u601d\u60f3\u5b66\u6821\u6b63\u5728\u5f62\u6210\u3002\u5728\u4e00\u4e2a\u8425\u5730\u4e2d\uff0c\u4f7f\u7528\u73b0\u4ee3\u5de5\u7a0b\u548c\u8bbe\u8ba1\uff0c\u552f\u4e00\u7684\u524d\u8fdb\u65b9\u5f0f\u662f\u5b8c\u5168\u91cd\u65b0\u8bbe\u8ba1\u548c\u91cd\u5efa\u9730\u5f39\u67aa\u548c\u91cd\u5efa\u9730\u5f39\u67aa\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u4eec\u5fc5\u987b\u4f7f\u589e\u91cf\u53d8\u5316\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5bf9\u6240\u6709\u5176\u4ed6\u7528\u6237\u7684\u5e72\u6270\u3002\u4e24\u79cd\u65b9\u6cd5\u90fd\u6709\u4ed6\u4eec\u7684\u5229\u5f0a\uff0c\u4f46\u7403\u961f\u4e0d\u80fd\u4e0e\u4e00\u4e2a\u6216\u53e6\u4e00\u4e2a\u4eba\u5bf9\u9f50\u3002\u4ece\u9886\u5bfc\u529b\u4e0b\u6765\uff0c\u6211\u4eec\u5728\u6bcf\u4e2a\u4eba\u4e4b\u95f4\u6765\u56de\u632f\u8361\u3002\u5728\u8fd9\u6b21\u66b4\u98ce\u96e8\u7684\u65f6\u5149\u671f\u95f4\uff0c\u901a\u8fc7\u4ea7\u54c1\u7684\u53d8\u5316\u6539\u5584\u91c7\u7528\u7684\u6218\u7565\u88ab\u629b\u5f03\uff0c\u6709\u5229\u4e8e\u91cd\u70b9\u8fdb\u5165\u5e02\u573a\uff0c\u5e76\u4e14\u8bb8\u591a\u5173\u952e\u4eba\u7269\u901a\u8fc7\u632b\u6298\u6216\u88ab\u7ec8\u6b62\u5730\u79bb\u5f00\u4e86\u516c\u53f8\u3002\n \u56e0\u6b64\uff0c\u8fd9\u662f\u9730\u5f39\u67aa\u961f\u7684\u5927\u591a\u6570\u5458\u5de5\u7b2c\u4e00\u6b21\u4e0d\u662f\u5a92\u4f53\u548c\u5a31\u4e50\u4e1a\u7684\u539f\u4ea7\u3002\u5176\u4e2d\u8bb8\u591a\u4eba\u613f\u610f\u5b66\u4e60\uff0c\u5e76\u5177\u6709\u5f3a\u70c8\u200b\u200b\u7684\u540c\u60c5\u611f\uff0c\u4f46\u9700\u8981\u82b1\u65f6\u95f4\u5efa\u7acb\u57df\u540d\u77e5\u8bc6\u3002\u4f18\u5148\u4e8b\u9879\u518d\u6b21\u8f6c\u79fb\uff0c\u8fd9\u6b21\u4e13\u6ce8\u4e8e\u4e0eAutodesk Corporate Machinery\u96c6\u6210\u3002\u8fd9\u662f\u4e00\u79cd\u660e\u667a\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4f1a\u6d88\u9664\u88ab\u5b9a\u5236\u7684\u4e1c\u897f\u88ab\u9730\u5f39\u67aa\u800c\u4e0d\u63d0\u4f9b\u4efb\u4f55\u771f\u6b63\u7684\u5229\u76ca\uff0c\u4f8b\u5982\u8ba1\u8d39\u548c\u9500\u552e\u6e20\u9053\uff0c\u4f46\u5b83\u5e26\u6765\u4e86\u5927\u91cf\u7684\u673a\u4f1a\u6210\u672c\uff0c\u9886\u5bfc\u529b\u4f7f\u5176\u6210\u4e3a\u6211\u4eec\u7684\u9996\u8981\u4efb\u52a1\uff0c\u9700\u8981\u4e00\u4e2a\u5728\u6ca1\u6709\u4efb\u4f55\u7528\u6237\u7684\u60c5\u51b5\u4e0b\uff0c\u56e2\u961f\u7684\u8bb8\u591a\u5de5\u4f5c\u90fd\u4f1a\u5728\u6ca1\u6709\u7528\u6237\u7684\u60c5\u51b5\u4e0b\u5b9e\u9645\u4e0a\u5173\u6ce8\u5b83\u3002\u66f4\u591a\u7684reorgs\u53d1\u751f\u4e86\uff0c\u597d\u50cf\u8981\u5f00\u8f66\u8fd9\u4e2a\u70b9\u56de\u5bb6\u3002 \u201c\u8857\u5934\u961f\u201d\uff0c\u4e00\u4e2a\u7531\u6781\u5176\u806a\u660e\u548c\u77e5\u8bc6\u6e0a\u535a\u7684\u524d\u9730\u5f39\u67aa\u4e13\u5bb6\u548c\u5de5\u4f5c\u6d41\u4e13\u5bb6\u7ec4\u6210\u7684\u652f\u6301\u56e2\u961f\uff0c\u5e76\u4e0e\u4e00\u822c\u7684Autodesk\u652f\u6301\u56e2\u961f\u8bd5\u56fe\u586b\u5199\u3002\u4ece\u4ea7\u54c1\u56e2\u961f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6211\u4eec\u51e0\u4e4e\u505c\u6b62\u4e86\u542c\u8bc1\u4f1a\u5ba2\u6237\u5b8c\u5168\uff08\u9664\u4e86\u6211\u4eec\u76f4\u63a5\u53d1\u8a00\u7684\u4eba\u9664\u4e86\uff09\u3002\n \u5b75\u5316\u8fc7\u7a0b\u7ed3\u675f\uff0c\u6216\u8005\u53ef\u80fd\u4f1a\u9003\u8131\u3002\u8bb8\u591a\u5ba2\u6237\u62b1\u6028\u4ed6\u4eec\u7684\u9700\u6c42\u6ca1\u6709\u5f97\u5230\u6ee1\u8db3\uff0c\u4f46\u6ca1\u6709\u80fd\u529b\u5bf9\u6b64\u6709\u6240\u80fd\u529b\uff08\u5176\u4ed6\u4eba\u56e0\u4e3a\u62b1\u6028\u800c\u62b1\u6028\uff0c\u8fd9\u5728\u8bb8\u591a\u65b9\u9762\u8d8a\u6765\u8d8a\u7cdf\u7cd5\uff09\u3002\u6211\u4eec\u8bd5\u56fe\u5c06\u80fd\u6e90\u96c6\u4e2d\u5728\u90a3\u4e00\u70b9\u4e0a\u7684\u662f\u521b\u9020\u57fa\u7840\u8bbe\u65bd\uff0c\u4ee5\u96f6\u788e\u7684\u65b9\u5f0f\u521b\u9020\u65b0\u7684\u4f53\u9a8c\uff0c\u8fd9\u662f\u4ece\u6709\u95ee\u9898\u7684\u6280\u672f\u5806\u6808\u89e3\u8026\u7684\u96f6\u788e\u65b9\u5f0f\u3002\u6211\u4eec\u7684\u8d4c\u6ce8\u662f\uff0c\u80fd\u591f\u5728\u65b0\u7684\u73af\u5883\u4e2d\u5efa\u7acb\uff0c\u5141\u8bb8\u4ee5\u73b0\u4ee3\u8f6f\u4ef6\u516c\u53f8\u7684\u9884\u671f\u901f\u5ea6\u8fdb\u884c\u5b9e\u9a8c\u548c\u8fed\u4ee3\u3002\u5b83\u4ee3\u8868\u6211\u4eec\u7ec8\u4e8e\u7ec8\u4e8e\u6ca1\u6709\u591a\u5e74\u56f0\u6270\u7740\u6211\u4eec\u7684\u6280\u672f\u503a\u52a1\u3002\u8fd9\u662f\u4ee4\u4eba\u5174\u594b\u7684\u3002\n  \u6211\u4e0d\u80fd\u8bf4\uff08\u56e0\u4e3a\u6cd5\u5f8b\u539f\u56e0\uff0c\u800c\u4e14\u56e0\u4e3a\u6211\u4e0d\u77e5\u9053\uff09\u5728\u54ea\u91cc\u51fa\u4e8e\u9730\u5f39\u67aa\u524d\u8fdb\u7684\u5730\u65b9\u3002\u5b83\u6700\u8fd1\u88ab\u91cd\u547d\u540d\u4e3a\u201c\u9730\u5f39\u67aa\u201d\uff0c\u4ee5\u4f7f\u5176\u66f4\u52a0\u6709\u95ee\u9898\uff0c\u4f5c\u4e3a\u6574\u5408\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff08\u65e0\u7528\u8bf4\uff0c\u9700\u8981\u5728\u81ea\u5df1\u7684\u6743\u5229\u4e2d\u8fdb\u884c\u5927\u91cf\u5de5\u4f5c\uff09\u3002\u6211\u53ef\u4ee5\u8ba1\u7b97\u4ecd\u7136\u5728\u4e00\u65b9\u9762\u6709\u884c\u4e1a\u7ecf\u5386\u7684\u9730\u5f39\u67aa\u961f\u7684\u4eba\u6570\uff08\u4ee5\u53ca\u524d\u8005\u5b66\u4e60\u548c\u540c\u60c5\u4f3c\u4e4e\u5df2\u7ecf\u6d88\u6563\u7684\u613f\u610f\uff09\uff0c\u4ece\u6211\u52a0\u5165\u7684\u65f6\u5019\u54ed\u6ce3\u3002\u4e5f\u8bb8\u6ca1\u5173\u7cfb\u3002\u4e5f\u8bb8\u5269\u4e0b\u7684\u9730\u5f39\u67aa\u56e2\u961f\u5c06\u80fd\u591f\u4ee5\u6211\u4eec\u65e0\u6cd5\u505a\u5230\u7684\u65b9\u5f0f\u89e3\u51b3\u4ea7\u54c1\u503a\u52a1\u95ee\u9898\u548c\u73b0\u4ee3\u5316\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u6539\u5584userBase\u3002\u4e0d\u4ec5\u4ec5\u662f\u4efb\u4f55\u4e1c\u897f\uff0c\u6211\u5e0c\u671b\u5728\u672a\u6765\u7684\u67d0\u4e2a\u89c2\u70b9\u4e2d\u9605\u8bfb\u4e00\u7bc7\u6587\u7ae0\uff0c\u8bb2\u8ff0\u4e86\u4ea7\u54c1\u5982\u4f55\u5e2e\u52a9\u4ed6\u4eec\u53ca\u65f6\u56de\u5bb6\u7684\u6545\u4e8b\u3002 ", "note_en": "Note: I\u2019m writing this as a former employee (as of June 2021) of Autodesk. My views are entirely my own, based on my recollections and personal experiences during my time with the company.\n I\u2019ve been working with the  Shotgun team in various capacities for t  he past 7 years, shortly after it was acquired by  Autodesk. The first few months I worked with the team, people would ask me what it was like, and I\u2019d always answer \u201cabsolutely everyone is super-smart, it\u2019s really weird\u201d. Practically everyone who was there back then has now moved onto other things outside of Autodesk, but I stay in touch with many of them and miss working with them all greatly.\n Today I read  this post (warning: the language used in the post is quite strong). It\u2019s the kind of thing no Product Manager wants to read, as it signifies us having failed our users. It made me reflect on how things have changed both in the company and how those changes have manifested in the formerly beloved product itself over the past few years.\n When I started, the feeling within the Shotgun team was one of a startup embedded within a larger corporation. We had a great deal of autonomy, and I spent the first few months blissfully unaware of what most of the rest of Autodesk was doing. We were focused on one thing, and that singular purpose, combined with the fact that most of the team (myself included) had been plucked out of the industry we were now serving, meant that all of us cared deeply about the work we were doing. Customer pain wasn\u2019t a cliche, it was our pain too. I spent months embedded with people trying to use Shotgun to get their film and episodic shows produced, I was there when things went wrong for them and they lost time or got frustrated. Our company mission was to \u201cget people home in time for dinner\u201d and we all knew how important that was. We had seen people work long hours, sacrificing everything for the sake of a single shot in a piece of media (or had been one of those people). We desperately wanted to succeed.\n  Even when I joined seven years ago, much of the technology used in the web-based product was dated, and many of the design patterns and user interactions were archaic or undercooked in a rush to get them out the door. From a certain perspective, this was a good thing\u2013 the product had product-market fit, and arguably a big part of the reason for that was that its development process was optimised for being responsive to the multitude of varying needs of its customers, not in spending time and energy in polishing features that were good enough. One thing I learned about building B2B software, is that every customer needs different things. So if you have customer A who needs something, then you go and build it as quickly as possible, when customer B comes along with a different problem, you are incentivised in the short term to now go and build the thing customer B needs, rather than iterating on the feature you just made for the benefit of some imaginary future customer. Everyone wants to build software that delights, but doing so often means not doing something else, and when you are trying to make people \u201chappy\u201d and \u201cwilling to pay\u201d, as opposed to \u201cdelighted\u201d, something has to give.\n Years of this mindset had created a product that was feature-rich, had incredible retention, even winning an Academy Award, but was falling apart at the seams from product debt. We had reached a point with the product where whenever we tried to build anything new or otherwise update certain aspects of the software, dozens of unrelated things would break. There was limited test coverage across all the code, and conversely a lot of different ways for users to configure their particular experience. It wasn\u2019t that every instance of Shotgun was unique, but it wasn\u2019t far off.\n It was a problem that always seemed incomprehensible to new leadership. Someone would join the team with the ambition to make us go faster, assuming it was down to lack of motivation or willingness to make changes. I referred to  this excellent article often when I was thinking about this situation, and this graph in particular:\n  We were constantly in the red area of the graph. We had tons of data on what we needed to do with the product, debated furiously about what was the most important of all the things to commit our scarce resources to, because doing anything at all would be extremely challenging and costly; and then failed to execute effectively. That though, was not down to any technical hurdles. It was down to an existential issue.\n  Autodesk is a big corporation, albeit one with less than 10,000 employees globally. It\u2019s best known for AutoCAD, though the overall product portfolio probably numbers in the hundreds. Most of what Autodesk does is serve the architectural, construction and manufacturing industries. A tiny portion of its revenue though, comes from media &amp; entertainment, predominantly high-end 3D content creation and rendering (with Shotgun as the product that focuses on the business functions of those processes). No one seems to know, or at least be able to articulate why it maintains its deathgrip (over time it has acquired many of the dominant products in the space) over a vertical that doesn\u2019t materially factor into the company\u2019s bottom line. We would speculate that there\u2019s the sex appeal (such as it is) of big splashy visual effects showreels in stark contrast to photos of people with hardhats and the umpteenth render of a building exterior in corporate marketing materials. Whatever the reason, we constantly felt that the corporate overlords would at some point decide to cut their losses and drop the entire division. That never happened though. Instead we had a string of reorgs and their corresponding shifts in focus.\n Around three years ago our product group was selected to pilot a new \u201cincubation\u201d process within Autodesk. On paper it was a superb idea- you allow a group to effectively function with the same level of autonomy\u2013 and accountability\u2013 as a startup would. Our goals became growth-based, we had targets and if those targets were successfully met then our \u201cfunding\u201d would increase accordingly.\n The problem though, was that no-one on the team actually cared about growth. \u201cGet people home in time for dinner\u201d had to become something more like \u201cget even more people home at some time\u201d. Our growth targets then just became a means to an end: get more users and then we get permission to do the stuff that we actually felt excited by.\n With all of this came a sense of (in retrospect) unjustified optimism. The team was restructured, some development teams were dropped and more senior managers were hired in their place. The idea was to get them in place for when our team would be able to grow. The only thing we needed to figure out was where to find the growth opportunity.\n The high-end visual effects industry that we dominated is notoriously slow to adapt to change, and operates for the most part on razor-thin margins. There were billions flowing into film and episodic production every year, but there wasn\u2019t (and likely still isn\u2019t) an obvious opportunity to further monetise our existing customers. But there were two bets that might make a difference. First, Shotgun was too hard to get up and running for anyone unfamiliar with it (due to us never having paid back the aforementioned product debt). Fixing this might lead to greater adoption. Second, although Shotgun popular with Producers and Coordinators, Artists didn\u2019t get on well with it. It was estimated that in a given company there were many more artists not using Shotgun than there were people already using it and that winning them over would lead to significant growth.\n We organised around going after those two potential opportunities and then almost immediately ran into trouble. I (along with a couple of other product managers) was involved with solving the ease of use problem. What was easy was identifying the roadblocks and them prioritising their importance. Where we came unstuck was in actually trying to implement viable solutions to those problems. Any single problem we tried to address was going to be a multi-month effort with the team we had and the technical challenges we would have to overcome (and again, in retrospect even those estimates seem woefully optimistic). There was also the problem which no-one really wanted to admit, which was we didn\u2019t have experience of building things that were easy to use (fortunately, for me at least, many of the people we hired over the past couple of years  did have that experience, and I learned a lot from them).\n But we tried, thinking we could tackle smaller line items in shorter time spans and build up a sort of momentum. We budgeted work by the quarter, but the first quarter worth of work stretched out to two quarters, then required further work in addressing regressions, then more regressions. My choice each time was between abandoning the work half-finished and try something else, or else seeing things through to completion. I chose the latter option, because we had a long history of leaving things half-finished, and everyone on the team, and our customers, was pretty tired of it. I still don\u2019t know if it was the right one, but it definitely wasn\u2019t the wrong one.\n Meanwhile, the artist opportunity was pursued by building out a new product from the ground up, using a much more modern technology stack than we were used to. It represented the future, but it also meant that many developers who were experienced with Ruby or C++ had to reskill in a very short space of time. It was hard. The product, Shotgun Create, ultimately launched as a vastly superior (in terms of user experience) alternative to Shotgun\u2019s capabilities for reviewing and approving work. But it was hard to get people to actually use it. For a couple of months or so, everyone across the organisation stopped what they were doing to help out on the adoption push. It was a stressful time for many, and when it was over, had left a deep scar on the team.\n Two opposing schools of thought were forming. In one camp, the only way forward was to completely redesign and rebuild Shotgun from scratch, using modern engineering and design. In the other, we had to make incremental changes, minimizing disruption to users above all else. Both approaches had their pros and cons, but the team couldn\u2019t be aligned to one or the other. From leadership down, we oscillated back and forth between each. During this stormy time, the strategy to improve adoption through changes in the product was jettisoned in favour of a focus on Go To Market, and a number of key people departed the company, either through frustration or having been terminated.\n The result of this was that for the first time the majority of employees on the Shotgun team were not native to the media and entertainment industry. Many of them were willing to learn, and had a strong sense of empathy, but it would take time to build the domain knowledge up. Priorities shifted once more, this time to focus on integrating with the Autodesk corporate machinery. It was a sensible approach, as it would remove things that were bespoke to Shotgun without providing any real benefit, such as billing and sales channels, but it carried a massive opportunity cost, with leadership making it the top priority for us, and requiring a lot of work over a number of months for the team without having anything users would actually care about to show for it. More reorgs happened, as if to drive this point home. The \u201cStreet Team\u201d, a support team comprised of extremely smart and knowledgeable former Shotgun experts and workflow specialists, was dissolved, with the general Autodesk support team attempting to fill in. From the perspective of the product team, we pretty much stopped hearing from customers altogether (aside from those we were speaking to directly).\n The incubation process ended, or perhaps fizzled out. Many customers were complaining that their needs were not being met, but there wasn\u2019t capacity to do anything about it (others had since given up complaining, which was in many ways worse). What we were trying to focus our energies on at that point was creating the infrastructure to create new experiences in a piecemeal way that would be decoupled from the problematic technology stack. Our bet was that being able to build in a new environment would allow for experimentation and iteration at a speed expected of a modern software company. It represented our attempt to finally break free of the technical debt that had plagued us for years. It was exciting.\n  I can\u2019t say (both for legal reasons, and because I don\u2019t know) where things are headed for Shotgun going forwards. It has recently been renamed to \u201cShotGrid\u201d in an effort to make it less problematic, as part of the integration work (and needless to say, requiring a lot of work in its own right). I can count the number of people still working on the ShotGrid team who have industry experience on one hand (and the former willingness to learn and empathise seems to have dissipated), a far cry from how it was when I joined. Perhaps that doesn\u2019t matter. Perhaps the remaining ShotGrid team will be able to address the product debt issues and modernise or otherwise improve it for the userbase in a way we were unable to do. More than anything, I hope to read a post from a customer at some point in the future, telling a story about how the product helped them get home in time for dinner.", "posttime": "2021-06-21 01:27:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "autodesk,\u9730\u5f39\u67aa", "title": "\u8fd9\u4e48\u957f\u7684Autodesk Shotgun ", "title_en": "So Long Autodesk Shotgun", "transed": 1, "url": "https://thejackjam.medium.com/so-long-autodesk-shotgun-32fb3da74f55", "via": "", "real_tags": ["autodesk", "\u9730\u5f39\u67aa"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067066, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fd0\u884cJulia VS Numpy\u548cFortran\u7684\u6bd4\u8f83\u540e\uff0c\u5207\u6362\u5230Julia\u7684\u6731\u8389\u5a05\uff0c\u7528\u4e8e\u6027\u80fd\u548c\u4ee3\u7801\u7b80\u5355\u3002\n      \u6731\u8389\u5a05\u662f\u4e00\u79cd\u6f02\u4eae\u7684\u65b0\u8bed\u8a00\uff0c\u5176\u4e2d\uff0c\u9664\u4e86\u5176\u4ed6\u4e8b\u60c5\uff0c\u65e8\u5728\u5c06\u6240\u8c13\u7684\u201c\u53cc\u8bed\u95ee\u9898\u201d\u5728\u79d1\u5b66\u8ba1\u7b97\u4e2d\u3002\n \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u901a\u5e38\u5728\u5feb\u901f\u539f\u578b\u8bed\u8a00\u8bed\u4e2d\u6d4b\u8bd5Matlab\u6216Python\u7684\u60f3\u6cd5\uff0c\u4f46\u662f\u5f53\u6d4b\u8bd5\u5b8c\u6210\u540e\uff0c\u5b83\u7684\u65f6\u95f4\u7ea7\u8fdb\u884c\u4e86\u4e00\u4e9b\u4e25\u91cd\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u9700\u8981\u4f9d\u8d56\u4e8e\u4e0d\u540c\uff08\u7f16\u8bd1\uff09\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\n \u5b58\u5728\u8bb8\u591a\u5de5\u5177\u6765\u7f13\u89e3\u8fc7\u6e21\uff0c\u5e76\u5305\u88c5Fortran Libriesinto Python\u5230\u76ee\u524d\u4e3a\u6b62\u4e00\u76f4\u662f\u6211\u7684\u504f\u597d\u3002\u4f8b\u5982\uff0c\u4f7f\u7528F2PY\u7684\u4e00\u4e9bFORTRAN\u4f3c\u4e4e\u662f\u4e00\u79cd\u975e\u5e38\u65b9\u4fbf\u7684\u65b9\u6cd5\uff08\u548c\u5206\u53d1\uff09\u6709\u6548\u7684FORTRAN\u4ee3\u7801\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8fd0\u884c\u3002\u6211\u8fd8\u53ef\u4ee5\u8ddf\u8e2a\u6b64\u5e16\u5b50\u4e2dPython\u4e2d\u4f7f\u7528Fortran\u7684\u5404\u79cd\u65b9\u5f0f\u3002\n \u73b0\u5728\uff0c\u6731\u8389\u5a05\u65e8\u5728\u4ee5\u6fc0\u8fdb\u7684\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u8be5\u60f3\u6cd5\u662fUSEA\u5355\u4e2a\u7f16\u7a0b\u8bed\u8a00\uff0c\u5b83\u5177\u6709\u4ea4\u4e92\u5f0f\u6a21\u5f0f\uff0c\u9002\u5408\u5feb\u901f\u539f\u578b\u8bbe\u8ba1\uff0c\u4f46\u4e5f\u53ef\u4ee5\u5728C / FortRanperFormance\u4e2d\u7f16\u8bd1\u548c\u6267\u884c\u3002\n     numpy\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\u4ec5\u9650\u4e8e\u5355\u7ebf\u7ebf\uff0c\u5f88\u96be\u7f16\u5199\u548c\u8bfb\u53d6\uff0c\u5e76\u4e14\u53ef\u4ee5\u6bd4\u4e24\u4e2a\u66ff\u4ee3\u65b9\u6848\u6162\u5f97\u591a\u3002\n FORTRAN\u63d0\u4f9b\u4e86\u5177\u6709\u5f88\u7b80\u5355\u7684\u4ee3\u7801\u7684\u6027\u80fd\uff0c\u4f46\u9700\u8981\u4e00\u4e9b\u5305\u88c5\u6765\u4ecePython\u7b49\u9ad8\u7ea7\u8bed\u8a00\u8c03\u7528Fortran\u3002 \n\u6731\u8389\u5a05\u6bd4Numpy\u66f4\u5feb\uff0c\u66f4\u5bb9\u6613\u5199\uff0c\u751a\u81f3\u80fd\u591f\u51fb\u8d25Gfortran\u7684\u8868\u73b0\u3002\n \u8001\u5b9e\u8bf4\uff0c\u6211\u5728\u6211\u7684\u8868\u73b0\u6bd4\u8f83\u4e2d\u53d1\u73b0\u4e86\u6211\u53d1\u73b0\u7684\u9707\u60ca.Julia\u662f\u60ca\u4eba\u7684\u3002\u6211\u6ca1\u60f3\u5230\u6731\u8389\u5a05\u4f1a\u5728\u6211\u7684\u6d4b\u8bd5\u4e2d\u7528\u7f16\u8bd1\u5668\u4f18\u5316\u51fb\u8d25Gfortran\u3002\u5b83\u76ee\u524d\u901a\u8fc7\u5d07\u9ad8\u7684\u4fdd\u8bc1\u91d1\u8fdb\u884c\u3002\n  \u5173\u4e8e\u4ee3\u7801\u53ef\u8bfb\u6027\u7684\u610f\u89c1\u5f53\u7136\u662f\u4e3b\u89c2\u7684\uff0c\u4f46\u6211\u60f3\u89e3\u91ca\u4e00\u4e0b\u6211\u8ba4\u4e3aNumpy\u63d0\u4f9b\u6700\u7cdf\u7cd5\u7684\u8d28\u91cf\u4f53\u9a8c\u3002\n \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u89e3\u91ca\u7684\u8bed\u8a00\u90fd\u9700\u8981\u624b\u52a8\u91cd\u65b0\u5199\u5165\u5faa\u73af\u4f5c\u4e3a\u77e2\u91cf\u64cd\u4f5c\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u53d8\u6210\u4e86\u6613\u4e8e\u4efb\u52a1\uff0c\u4f46\u5728\u8bb8\u591a\u5e74\u4efd\u8fdb\u884c\u4e86\u5982\u6b64\u5e7f\u6cdb\u7684\u60c5\u51b5\u4e0b\uff08\u9996\u5148\u5728Matlab\uff0c\u90a3\u4e48\u5728Python\u4e2d\uff09\uff0c\u6211\u6765\u4e86\u7ed3\u8bba\u6211\u8ba8\u538c\u624b\u52a8\u5411\u91cf\u5316\u4ee3\u7801\u3002\u6211\u66f4\u613f\u610f\u4e3a\u5faa\u73af\u7f16\u5199\u5e76\u8ba9\u7f16\u8bd1\u5668\u5411\u6211\u62ec\u8d77\u6765\uff01\n   \u4e00\u89c1\u949f\u60c5\uff0c\u4f60\u80fd\u544a\u8bc9\u5b83\u662f\u4ec0\u4e48\uff0c\u4e00\u89c1\u949f\u60c5\u5417\uff1f\u4f60\u80fd\u63a8\u7406\u4ee3\u7801\u7684\u8868\u73b0\u5417\uff1f\u4f60\u751a\u81f3\u53ef\u4ee5\u731c\u51fa\u8f93\u51fam\u7684\u5c3a\u5bf8\u5417\uff1f\n \u73b0\u5728\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\uff0c\u5b83\u4e0e\u4e0a\u8ff0\u4ee3\u7801\u76f8\u540c\u3002\n    \u96be\u602a\u4ed6\u4eec\u4e3a\u4ec0\u4e48\u9996\u5148\u547d\u540d\u4e3afortran\u201c\u914d\u65b9\u7ffb\u8bd1\u201d\u3002\u6731\u8389\u5a05\u8bed\u6cd5\u5728\u8fd9\u65b9\u9762\u5b8c\u5168\u76f8\u4f3c\u3002 \n\u6240\u4ee5\u5373\u4f7f\u6211\u540c\u610f\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u800c\u4e0d\u662fPython\u662f\u4e00\u79cd\u7f8e\u4e3d\u7684\u8bed\u8a00\uff0c\u6211\u8ba4\u4e3anumpy\u4e5f\u4e0d\u8ba4\u4e3a\u540c\u6837\u7684\u6301\u6709\u3002\u662f\u7684\uff0cNumpy\u5141\u8bb8\u6211\u4eec\u7559\u5728\u4e00\u4e2aPython\u6846\u67b6\u5185\uff0c\u5e76\u83b7\u5f97\u7b80\u5355\u7684\u5355\u884c\uff08\u65e0\u8bba\u5982\u4f55\u975e\u5e38\u6574\u6d01\uff09\uff0c\u4f46\u662f\u540e\u65b9\u4ea7\u751f\u7684NumpyCode\u96be\u4ee5\u8bfb\u53d6\u3002\n  \u6211\u76f8\u4fe1\u6ca1\u6709\u660e\u786e\u7684\u57fa\u51c6\u3002\u8fd0\u884c\u4e00\u7cfb\u5217\u5b8c\u5168\u65e0\u5173\u7684\u73a9\u5177\u95ee\u9898\u7684\u65e0\u5173\u6d4b\u8bd5\uff0c\u5e76\u58f0\u79f0\u4e00\u5b9a\u7684\u8bf1\u60d1\u662f\u6700\u597d\u7684\uff0c\u56e0\u4e3a\u5728\u5927\u591a\u6570\u6d4b\u8bd5\u4e2d\u90fd\u6709\u5f88\u597d\u7684\u6d4b\u8bd5\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u67d0\u4e9b\u7279\u5b9a\u548c\u66f4\u591a\u7684\u771f\u5b9e\u7ec4\u7ec7\u611f\u5174\u8da3\uff0c\u8fd9\u662f\u6beb\u65e0\u610f\u4e49\u7684\u3002\n \u800c\u4e0d\u662f\u8bd5\u56fe\u4f9d\u9760\u5927\u578b\u7684\uff0c\u6709\u7528\u7684\u57fa\u51c6\uff0c\u6211\u8ba4\u4e3a\u4f18\u9009\u4e0d\u65f6\u8fd0\u884c\u4e00\u4e9b\u9002\u5408\u6211\u4eec\u81ea\u5df1\u9879\u76ee\u7684\u5fae\u57fa\u51c6\u3002\n \u5982\u679c\u6211\u4eec\u53ef\u4ee5\u9884\u6d4b\u6211\u4eec\u7684\u4ee3\u7801\u7684\u4e3b\u8981\u6027\u80fd\u74f6\u9888\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u6211\u4eec\u7684\u4e3b\u8981\u6027\u80fd\u74f6\u9888\u53ef\u4ee5\u63d0\u51fa\u4e00\u4e2a\u7b80\u5355\u4f46\u53ef\u4ee5\u4eab\u53d7\u7684\u5b9e\u4f8b\uff0c\u5e76\u521b\u5efa\u9002\u5408\u6211\u4eec\u9700\u6c42\u7684\u7279\u5b9a\u8868\u6f14\u3002\n \u4f8b\u5982\uff0c\u5728\u6211\u7684\u6570\u5b57\u9879\u76ee\u4e2d\uff0c\u6211\u505a\u4e86\u5f88\u591a\u9635\u5217\u64cd\u4f5c\uff0c\u6211\u8bc4\u4f30\u4e86\u5f88\u591a\u590d\u6742\u7684\u5e42\u7ea7\u3002\u6240\u4ee5\u8fd9\u5c31\u662f\u6b64\u6d4b\u8bd5\u7684\u539f\u56e0\u3002\u6211\u7684\u57fa\u51c6\u6d4b\u8bd5\u5df2\u7ecf\u4e0a\u9762\u63cf\u8ff0\u4e86\uff0c\u5b83\u53ea\u662f\uff1a\u7ed9\u5b9a\u77e2\u91cfa\uff0c\u5f62\u6210\u77e9\u9635\n   \u6240\u6709\u6d4b\u8bd5\u90fd\u5728\u82f1\u7279\u5c14I7-4700MQ CPU\uff083.40 GHz\uff0c\u9ad8\u901f\u7f13\u5b58\uff09\u4e2d\u8fd0\u884c\uff0c\u5176\u4e2d8 GB\u7684DDR3 RAM\n   \u51fd\u6570eval_emp\uff08n\uff09a =\u8303\u56f4\uff080\uff0cstop = 2 * pi\uff0clength = n\uff09a =\u77e9\u9635{compledf64} @inbounds for j\u4e2d\u7684[\u7535\u5b50\u90ae\u4ef6\u4fdd\u62a4]\u4e3a1\uff1an\u4e3a1 \uff1ana [i\uff0cj] = exp\uff08\uff08100 + im\uff09* im * sqrt\uff08a [i] ^ 2 + a [j] ^ 2\uff09\uff09\u7ed3\u675f\u8fd4\u56deaendeval_exp\uff085\uff09\u6253\u5370\uff08\u5b57\u7b26\u4e32\uff08\uff06\uff0334;\u8fd0\u884c\u5faa\u73af\uff06\uff0334;\uff0cthreads.nthreads\uff08\uff09\uff0c\uff06\uff0334;\u7ebf\u7a0b\\ n\uff06\uff0334;\uff09\uff09\uff0c\u5bf9\u4e8e1000\uff1a1000\uff1a10000 @time begin a = eval_exp\uff08n\uff09endend \n\u6ce8\u610f\uff1aST\u548cMT\u5206\u522b\u7528\u4e8e\u5355\u7ebf\u7a0b\u548c\u591a\u7ebf\u7a0b\u3002\u8bf7\u6ce8\u610f\uff0c\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u5feb\u901f\u6570\u5b66\u4f18\u5316\u6807\u5fd7\uff0c\u5141\u8bb8\u7f16\u8bd1\u5668\u91cd\u65b0\u6392\u5e8f\u6570\u5b66\u8868\u8fbe\u5f0f\u4ee5\u83b7\u5f97\u51c6\u786e\u6027\uff0c\u4f46\u4ee5\u53ef\u80fd\u6253\u7834IEEE\u5408\u89c4\u6027\u7684\u65b9\u5f0f\u3002\n  \u6709\u8da3\u7684\u662f\uff0c\u4ece\u4e0a\u8868\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u7ebf\u7a0b\u6548\u7387\uff0c\u5373\u4ece\u5355\u4e2a\u5230\u591a\u7ebf\u7a0b\u79fb\u52a8\u65f6\u7684\u52a0\u901f\u56e0\u5b50\u3002\n  \u5728\u56db\u6838CPU\u4e2d\uff0cJulia\u7684\u591a\u7ebf\u7a0b\u6548\u7387\u7ea6\u4e3a4.9\uff0c\u800c\u4f9d\u9760Gfortran\u548cOpenMp\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5927\u7ea63.6\u3002\u56e0\u6b64\uff0cJulia\u6709\u6548\u5730\u5229\u7528\u8d85\u7ebf\u7a0b\uff0c\u5728OpenMP\u4e2d\u5f88\u5c11\u89c1\u5230\u8fd9\u4e00\u70b9\u3002\n    \u4e8b\u5b9e\u8bc1\u660e\uff0cJulia\u6709\u66f4\u591a\u7684\u5de5\u5177\u6765\u63d0\u9ad8\u6027\u80fd\u3002\u5176\u4e2d\u4e00\u4e2aopeoris loopvectorization.jl\n \u6b63\u5982\u6885\u68ee\u5728\u8fd9\u4e2a\u4e3b\u9898\u4e2d\u6240\u5efa\u8bae\u7684julialang\u8bba\u575b\uff0c\u81f3\u5c11\u5355\u7ebf\u7a0b\u7248\u672c\u53ef\u4ee5\u901a\u8fc7\u8bc9\u8bf8\u8be5\u56fe\u4e66\u9986\u6765\u975e\u5e38\u663e\u7740\u3002\n \u6211\u5c06\u7ee7\u7eed\u6df1\u5165\u6316\u6398\u5982\u4f55\u901a\u8fc7\u8bc9\u8bf8\u6731\u8389\u5a05\u6765\u8861\u91cf\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u6700\u540e\u4e00\u70b9\u3002\u656c\u8bf7\u5173\u6ce8\uff01\n  \u4e3a\u4ec0\u4e48\u798f\u7279\u5170\u4ecd\u7136\u4f7f\u7528\u3002\u6211\u5bf9Fortran\u8fdb\u884c\u4e86\u516c\u5e73\u7684\u7ecf\u9a8c\uff0c\u6211\u76f8\u4fe1\u4eca\u5929\u4f7f\u7528Fortran\u7684\u7a33\u59a5\u539f\u56e0\u3002 \n\u6731\u8389\u5a05\u5c06\u5728HPC\u4e2d\u53d6\u4ee3Fortran\u5417\uff1f \u7136\u800c\uff0c\u79fb\u5f99\u8005\u4e0e\u6731\u8389\u5a05\u5bf9\u5404\u79cd\u573a\u5730\u8fdb\u884c\u4e86\u6bd4\u8f83\uff0c\u6211\u503e\u5411\u4e8e\u8ba4\u4e3a\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cJulia\u4f3c\u4e4e\u662f\u5728HPC\u5229\u57fa\u7684\u8d85\u8d8a\u798f\u7279\u5170\u3002  \u6211\uff06\uff0339; m martin d. maas ph.d\uff0c\u4ee5\u53caInthis\u7f51\u7ad9\u6211\u5206\u4eab\u6559\u7a0b\uff0c\u8f6f\u4ef6\u5ba1\u67e5\uff0c\u8bc4\u8bba\u7b49\uff0c\u5173\u4e8e\u66f4\u591a\uff0c\u5173\u4e8eMathematics\uff0cCompony\u548cSoftware\u5f00\u53d1\u3002 ", "note_en": "I&#39;m switching to Julia after running this comparison of Julia vs Numpy and Fortran, for performance and code simplicity.\n      Julia is a pretty new language, which, among other things, aims tosolve the so-called  \u201ctwo-language problem\u201d in scientific computing.\n That is, we usually test ideas in a  rapid-prototyping languagelike Matlab or Python, but when the testing is done, and its timeto do some serious computation, we need to rely on a different (compiled)programming language.\n Many tools exist to ease the transition, and  wrapping Fortran librariesinto Python has been my preference so far. For example, wrapping up some Fortran with F2PY seems like a very convenient wayto use (and distribute) efficient Fortran code that anybody can run.I also keep track of various ways of using Fortran in Python in  this post.\n Now,  Julia aims to solve this issue in a radical way. The idea is to usea single programming language, which has both an interactive mode, suitablefor rapid prototyping, but that can also be compiled and executed at C/Fortranperformance.\n     Numpy is restricted to single-threading in many cases, is hard to code and read, and can be much slower than the two alternatives.\n Fortran offers great performance with pretty simple code, but some wrapping is required to call Fortran from high-level languages like Python.\n Julia is faster and easier to write than Numpy and is even able to beat gfortran\u2019s performance.\n Honestly, I was shocked by what I found in my performance comparison.Julia is amazing.  I didn\u2019t expect Julia would beat gfortran with compiler optimizations in my test.And it currently does so  by a lofty margin.\n  Opinions on code readability are, of course, subjective, but I want to explainwhy I think  Numpy offers the worst quality experience.\n So far, interpreted languages have required manual re-writing of loops as vector operations.With some practice, this becomes and easy task, but after having done so extensively for many years (first in Matlab, then in Python),I came to the conclusion that  I hate to manually vectorize code. I prefer to write for loops and have the compiler vectorize them for me!\n   Can you tell what it does, at first sight? Can you reason about the code\u2019s performance?Can you even guess the dimension of the output M?\n Now, here is a nested for loop which does the same as the above code.\n    No wonder why they named Fortran \u201cFORmula TRANslator\u201d in the first place.Interestingly, the Julia syntax is exactly similar in this regard.\n So even though I agree with the idea than Python is a beautiful language to work with,I don\u2019t think the same holds for Numpy. Yes, Numpy allows us to stay within a Python framework and get things donewith simple one-liners (which is pretty neat anyway) but the resulting Numpycode becomes hard to read afterward.\n  I believe there is no such thing as a definitive benchmark. Running a seriesof completely unrelated tests of toy problems, and claiming that a certain languageis overall the best because it does well in most of the tests,is meaningless if we are interested in certain specific and more realisticcases.\n Rather than trying to rely on big, all-purpose benchmarks, I believe it is preferable to run,from time to time, some micro-benchmarks suited to our own projects.\n If we can predict what the major performance bottlenecks of our code will be,major performance bottleneck of our codeWe can then come up with a minimalistic, but spot-on example, and create a specific performancetest that suits our needs.\n In my numerical projects, for example, I do a lot of array operations and I evaluate a lot of complex exponentials.So that\u2019s why this test is about just that. My benchmark was already described above,it\u2019s just: given a vector a, form the matrix\n   All tests were run in an Intel i7-4700MQ CPU (3.40 GHz, 6MB of Cache)with 8 GB of DDR3 RAM\n   function eval_exp(N) a = range(0, stop=2*pi, length=N) A = Matrix{ComplexF64}(undef, N, N) @inbounds  [email\u00a0protected] for j in 1:N for i in 1:N A[i,j] = exp((100+im)*im*sqrt(a[i]^2 + a[j]^2)) end end return Aendeval_exp(5)print(string(&#34;running loop on &#34;, Threads.nthreads(), &#34; threads \\n&#34;))for N in 1000:1000:10000 @time begin A = eval_exp(N) endend\n   note: ST and MT stand for single-threaded and multithreaded,respectively. Note that in all cases, the fast-math optimization flag was used, which allows compilers to reorder mathematical expressions to obtain accuracy, but in a way that could break IEEE compliance.\n  Interestingly, from the above table, we can compute the threading efficiency,that is, the speed-up factor when moving from single to multithreading.\n  In a quad-core CPU, Julia\u2019s Multithreading efficiency is about 4.9,whereas when relying on gfortran and OpenMP, we get about 3.6. So Julia is effectively taking advantage of hyperthreading, somethingwhich is rarely seen in OpenMP.\n    It turns out that Julia has further tools to increase performance. One of such toolsis LoopVectorization.jl\n As suggested by Mason in  this topicof the JuliaLang forum, at least the single-threaded version can besped up quite significantly by resorting to that library.\n I\u2019ll continue to dig deeper on how to skeeze the last bit of performanceout of computer hardware by resorting to Julia. Stay tuned!\n  Why is Fortran still used. I had a fair degree of experience with Fortran, and I believe there are solid reasons to use Fortran for scientific computing today.\n Will Julia Replace Fortran in HPC?. However, afeter comparing Fortran with Julia on various grounds, I tend to think that, over time, Julia seems on track to superseed Fortran, even in the HPC niche.\n I&#39;m Martin D. Maas Ph.D, and inthis website I share tutorials,software reviews, comments, and more, aboutmathematics, technology and software development.", "posttime": "2021-06-21 01:26:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "julia,fortran,faster", "title": "\u6731\u8389\u5a05\uff1a\u6bd4Fortran\u66f4\u5feb\uff0c\u6bd4Numpy\u66f4\u6e05\u6d01 ", "title_en": "Julia: Faster than Fortran, cleaner than Numpy", "transed": 1, "url": "https://www.matecdev.com/posts/numpy-julia-fortran.html", "via": "", "real_tags": ["julia", "fortran", "faster"]}, {"category": "", "categoryclass": "", "imagename": "90026fa1a084baa1b205b0e237a6a91b.png", "infoid": 1067064, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6700\u65e9\u7684\u52a8\u7269\u7a7f\u8fc7\u5730\u7403\u53e4\u4ee3\u8fc7\u53bb\u7684\u6c34\u8986\u76d6\u7684\u8868\u9762\uff0c\u6f2b\u957f\u7684\u662f\uff0c\u751f\u547d\u5386\u53f2\u4e0a\u6700\u91cd\u8981\u7684\u906d\u9047\u4e4b\u4e00\u3002\u539f\u8bed\u7ec6\u83cc\u88ab\u6211\u4eec\u6700\u53e4\u8001\u7684\u7956\u5148\u541e\u566c - \u4e00\u79cd\u5355\u72ec\u7684\u81ea\u7531\u6d6e\u52a8\u7ec6\u80de\u3002\u8fd9\u4e24\u8005\u878d\u5408\u4e86\u5f62\u6210\u6301\u7eed\u8d85\u8fc7\u5341\u4ebf\u5e74\u7684\u4e92\u5229\u5173\u7cfb\uff0c\u540e\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b89\u5168\uff0c\u8212\u9002\u7684\u5bb6\uff0c\u524d\u8005\u6210\u4e3a\u4e00\u4e2a\u5f3a\u56fd\uff0c\u63a8\u52a8\u4e86\u7ef4\u6301\u751f\u6d3b\u6240\u9700\u7684\u8fc7\u7a0b\u3002\n  \u8fd9\u662f\u8fc4\u4eca\u4e3a\u6b62\u7ec6\u80de\u7ec4\u5206\u6216\u7ec6\u80de\u5668\uff0c\u79f0\u4e3a\u7ebf\u7c92\u4f53\u7684\u6700\u4f73\u5047\u8bbe\u3002\u5982\u4eca\uff0c\u6570\u4e07\u4ebf\u8fd9\u4e9b\u7ec6\u83cc\u540e\u4ee3\u5c45\u4f4f\u5728\u6211\u4eec\u7684\u8eab\u4f53\u5185\uff0c\u6405\u62ccatp\uff0c\u8be5\u5206\u5b50\u80fd\u91cf\u6765\u6e90\u7ef4\u6301\u6211\u4eec\u7684\u7ec6\u80de\u3002\u5c3d\u7ba1\u6709\u5bc6\u4e0d\u53ef\u5206\u5730\u878d\u5165\u4eba\u4f53\u7684\u673a\u68b0\u4e2d\uff0c\u4f46\u7ebf\u7c92\u4f53\u4e5f\u643a\u5e26\u7ec6\u83cc\u8fc7\u53bb\u7684\u6b8b\u4f59\uff0c\u4f8b\u5982\u4ed6\u4eec\u81ea\u5df1\u7684DNA\u3002\n    \u8fd9\u4e9b\u7279\u5f81\u4f7f\u7ebf\u7c92\u4f53\u6210\u4e3a\u6211\u4eec\u7ec6\u80de\u7684\u5173\u952e\u56e0\u7d20\u548c\u6f5c\u5728\u7684\u95ee\u9898\u6765\u6e90\u3002\u5c31\u50cf\u6211\u4eec\u7ec6\u80de\u6838\u5185\u7684DNA\u4e00\u6837\uff0c\u5176\u6784\u6210\u4eba\u7c7b\u57fa\u56e0\u7ec4\uff0c\u7ebf\u7c92\u4f53DNA\u53ef\u4ee5\u5305\u56f4\u7a81\u53d8\u3002\u5e74\u9f84\uff0c\u538b\u529b\u548c\u5176\u4ed6\u56e0\u7d20\u53ef\u80fd\u4f1a\u7834\u574f\u7ebf\u7c92\u4f53\u7684\u8bb8\u591a\u529f\u80fd\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u7ebf\u7c92\u4f53\u635f\u4f24\u53ef\u4ee5\u91ca\u653e\u5206\u5b50\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u7ec6\u83cc\u5236\u6210\u7684\u76f8\u4f3c\u6027\uff0c\u6211\u4eec\u7684\u514d\u75ab\u7cfb\u7edf\u53ef\u4ee5\u88ab\u89c6\u4e3a\u5916\u6765\u5165\u4fb5\u8005\u8bef\u8ba4\u4e3a\uff0c\u5f15\u53d1\u5bf9\u6211\u4eec\u81ea\u5df1\u7ec6\u80de\u7684\u6709\u5bb3\u708e\u75c7\u53cd\u5e94\u3002\n  \u6709\u4e00\u4e2a\u5668\u5b98\u4f3c\u4e4e\u7279\u522b\u5bb9\u6613\u53d7\u5230\u7ebf\u7c92\u4f53\u635f\u4f24\u7684\u5f71\u54cd\uff1a\u6211\u4eec\u7684\u5174\u594b\u6027\u5927\u8111\u3002 \u201c\u7262\u56fa\u82db\u523b\u7684\u7ec6\u80de\u662f\uff0c\u5b83\u4eec\u5177\u6709\u7684\u7ebf\u7c92\u4f53\u66f4\u5927\uff0c\u5e76\u4e14\u7ebf\u7c92\u4f53\u5065\u5eb7\u66f4\u4e3a\u6279\u5224 - \u6240\u4ee5\u5bf9\u7f8e\u56fd\u56fd\u5bb6\u7814\u7a76\u6240\u7684\u795e\u7ecf\u62db\u751f\u7684\u535a\u58eb\u540e\u7814\u7a76\u5458\u5b89\u5fb7\u9c81\u83ab\u5c14\u66fc\u8bf4\uff0c\u8fd9\u66f4\u4ee4\u4eba\u62c5\u5fe7\u3002\u201d\u795e\u7ecf\u7cfb\u7edf\u75be\u75c5\u548c\u4e2d\u98ce\uff08Ninds\uff09\u3002\u6839\u636e\u4e00\u4e9b\u4f30\u8ba1\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ef\u5177\u6709\u9ad8\u8fbe200\u4e07\u7ebf\u7c92\u4f53\u3002\n  \u4e00\u4e2a\u5c0f\u4f46\u8d8a\u6765\u8d8a\u591a\u7684\u79d1\u5b66\u5bb6\u73b0\u5728\u6b63\u5728\u5173\u6ce8\u7ebf\u7c92\u4f53\u5728\u8111\u90e8\u5065\u5eb7\u4e2d\u7684\u8d21\u732e\u3002\u4eba\u7c7b\u548c\u5b9e\u9a8c\u5ba4\u52a8\u7269\u7684\u7814\u7a76 - \u5c3d\u7ba1\u5b83\u4ecd\u7136\u521d\u6b65\u521d\u6b65 - \u8fd9\u4e9b\u7ec6\u80de\u5668\u53ef\u4ee5\u662f\u51e0\u4e4e\u6240\u6709\u7c7b\u578b\u7684\u8111\u969c\u788d\u7684\u5173\u952e\u7403\u5458\uff0c\u5305\u62ec\u795e\u7ecf\u53d1\u80b2\u75c5\u75c7\uff0c\u5982\u6291\u90c1\u548c\u7cbe\u795e\u5206\u88c2\u75c7\u7b49\u6291\u90c1\u548c\u7cbe\u795e\u5206\u88c2\u75c7\u7b49\u795e\u7ecf\u7ffb\u8f6c\u75be\u75c5\uff0c\u5982\u5e15\u91d1\u68ee\u7b49\u795e\u7ecf\u53d8\u6027\u75be\u75c5\u3002\u4ed6\u4eec\u751a\u81f3\u53ef\u80fd\u662f\u4e00\u4e2a\u6301\u4e45\u7684\u5386\u53f2\u7684\u6838\u5fc3\uff0c\u7528\u4e8e\u7814\u7a76\u8111\u75be\u75c5\u7684\u7814\u7a76\u4eba\u5458\uff1a\u9057\u4f20\u6613\u611f\u6027\u548c\u73af\u5883\u5f71\u54cd\u5982\u4f55\u4e92\u52a8\uff0c\u4f7f\u4eba\u4eec\u9762\u4e34\u53d1\u5c55\u8fd9\u4e9b\u6761\u4ef6\u7684\u98ce\u9669\u3002\n    \u572820\u4e16\u7eaa60\u5e74\u4ee3\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u7ebf\u7c92\u4f53\u5177\u6709\u72ec\u7279\u7684\u9057\u4f20\u7269\u8d28\u3002\u8c03\u67e5\u663e\u793a\uff0c\u4e0e\u7ec6\u83cc\u7684\u7ebf\u7c92\u4f53DNA\u5f62\u6210\u5706\u5f62\u94fe\uff0c\u53ea\u7f16\u780137\u4e2a\u57fa\u56e0 - \u4ec5\u5728\u4eba\u7c7b\u57fa\u56e0\u7ec4\u4e2d\u53d1\u73b0\u7684\u6210\u5343\u4e0a\u4e07\u7684\u4e00\u90e8\u5206\u3002\n  \u572820\u4e16\u7eaa70\u5e74\u4ee3\u4e4b\u540e\uff0c\u572820\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u8036\u9c81\u5927\u5b66\u7684\u535a\u58eb\u751f\u540d\u4e3aDouglas Wallace\u7684\u535a\u58eb\u751f\u5f00\u53d1\u4e86\u5bf9\u7ebf\u7c92\u4f53DNA\u7684\u5174\u8da3\u3002\u534e\u83b1\u58eb\u63a8\u51fa\uff0c\u7531\u4e8e\u7ebf\u7c92\u4f53\u662f\u8eab\u4f53\u80fd\u91cf\u7684\u4e3b\u8981\u751f\u4ea7\u5546\uff0c\u4ed6\u4eec\u7684DNA\u4e2d\u7684\u7a81\u53d8\u4f1a\u5bfc\u81f4\u75be\u75c5\u3002 \u201c\u5f53\u65f6\u6ca1\u6709\u4eba\u8ba4\u4e3a\u8fd9\u662f\u7406\u6027\u7684\uff0c\u201d\u4ed6\u8bf4\u3002\u76f4\u52301988\u5e74\uff0c\u5f53\u534e\u83b1\u58eb\u53ca\u5176\u540c\u4e8b\u5efa\u7acb\u4e86\u7ebf\u7c92\u4f53DNA\u548c\u4eba\u7c7b\u75be\u75c5\u7684\u7a81\u53d8\u4e4b\u95f4\u7684\u7b2c\u4e00\u4e2a\u8054\u7cfb\uff0c\u5bfc\u81f4\u7a81\u7136\u5931\u660e\u7684\u6761\u4ef6 - \u533b\u5b66\u7814\u7a76\u4eba\u5458\u5f00\u59cb\u8ba4\u771f\u5bf9\u5f85\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u534e\u83b1\u58eb\u56de\u5fc6\u3002 \n\u7814\u7a76\u4eba\u5458\u4ece\u4e0e\u7ebf\u7c92\u4f53\u529f\u80fd\u76f8\u5173\u7684\u7ebf\u7c92\u4f53DNA\u548c\u6838DNA\u7684\u6539\u53d8\u6709\u591a\u79cd\u75be\u75c5\uff0c\u800c\u4e14\u6709\u8da3\u7684\u662f\uff0c\u8fd9\u4e9b\u90fd\u662f\u795e\u7ecf\u7cfb\u7edf\u7684\u6027\u8d28\uff0c\u6216\u5bf9\u5927\u8111\u4ea7\u751f\u4e00\u4e9b\u5f71\u54cd\u3002 Wallace\uff0c\u76ee\u524d\u662fPhiladelphia Centrals Mitochondrial\u548c\u8868\u89c2\u80f8\u8089\u4e2d\u7684\u513f\u7ae5\u533b\u9662\u4e3b\u4efb\uff0c\u5177\u6709\u7b80\u5355\u7684\u89e3\u91ca\uff1a\u5c3d\u7ba1\u53ea\u5360\u4eba\u7c7b\u4f53\u91cd\u76842\uff05\uff0c\u4f46\u5927\u8111\u4f7f\u7528\u5927\u7ea6\u4e94\u5206\u4e4b\u4e00\u7684\u8eab\u4f53\u80fd\u91cf\u3002\u4e0e\u5728\u5927\u90fd\u5e02\u8870\u9000\u671f\u95f4\u7684\u7535\u538b\u6c34\u5e73\u4e0b\u964d\u65f6\uff0c\u9ad8\u80fd\u7535\u5668\u7684\u7535\u538b\u6c34\u5e73\u964d\u4f4e\u65f6\uff0c\u9ad8\u80fd\u91cf\u5668\u5177\u5728\u7535\u538b\u6c34\u5e73\u4e0b\u964d\u7684\u65b9\u5f0f\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u6c83\u83b1\u514b\u8868\u793a\uff0c\u5373\u4f7f\u5728\u7ebf\u7c92\u4f53\u51fd\u6570\u7684\u5c0f\u51cf\u5c11\u53ef\u80fd\u5bf9\u5927\u8111\u4ea7\u751f\u5927\u91cf\u5f71\u54cd\u3002\n  \u534e\u83b1\u58eb\u7279\u522b\u5174\u8da3\u5bf9\u7ebf\u7c92\u4f53\u5982\u4f55\u4fc3\u8fdb\u81ea\u95ed\u75c7\u8c31\u7cfb\u969c\u788d\u7684\u5c24\u5176\u611f\u5174\u8da3\u3002\u51e0\u4e2a\u7814\u7a76\u56e2\u961f\u7684\u7814\u7a76\u8868\u660e\uff0c\u7ebf\u7c92\u4f53\u75be\u75c5\uff0c\u7531\u7ec6\u80de\u5668\u4e2d\u7f3a\u9677\u5f15\u8d77\u7684\u75c7\u72b6\u6df7\u5408\uff0c\u60a3\u6709\u81ea\u95ed\u75c7\uff085\uff05\uff09\u7684\u7f3a\u9677\u6bd4\u4e00\u822c\u4eba\u7fa4\uff08\u7ea60.01\uff05\uff09\u66f4\u4e3a\u666e\u904d\u3002\u989d\u5916\u768430\uff05\u81f350\uff05\u7684\u81ea\u95ed\u75c7\u513f\u7ae5\u663e\u793a\u7ebf\u7c92\u4f53\u529f\u80fd\u969c\u788d\u7684\u8ff9\u8c61\uff0c\u4f8b\u5982\u901a\u8fc7\u7ec6\u80de\u547c\u5438\u4ea7\u751f\u7684\u67d0\u4e9b\u526f\u4ea7\u7269\u7684\u5f02\u5e38\u6c34\u5e73\uff0c\u901a\u8fc7ATP\u4ea7\u751f\u7684\u65b9\u6cd5\u3002\n  \u5728\u4e00\u4e9b\u60a3\u6709\u81ea\u95ed\u75c7\u7684\u4eba\u4e2d\uff0c\u79d1\u5b66\u5bb6\u4eec\u5df2\u7ecf\u786e\u5b9a\u4e86\u5728\u8bed\u7ebf\u7c92\u4f53DNA\u4e2d\u7684\u9057\u4f20\u5dee\u5f02\uff0c\u6216\u8005\u5728\u5df2\u77e5\u7684\u4eba\u7c7b\u57fa\u56e0\u7ec4\u4e2d\u7684\u4e00\u5343\u4e2a\u5de6\u53f3\u57fa\u56e0\u4e2d\u53d1\u73b0\u4e86\u5f71\u54cd\u7ebf\u7c92\u4f53\u529f\u80fd\u7684\u4e00\u4e9b\u57fa\u56e0\u3002\u9700\u8981\u66f4\u591a\u7684\u4f5c\u54c1\u6765\u786e\u5b9a\u8fd9\u4e9b\u9057\u4f20\u53d8\u5f02\u662f\u5426\u5b9e\u9645\u4e0a\u662f\u9020\u6210\u6216\u6709\u52a9\u4e8e\u81ea\u95ed\u75c7\uff0c\u4f46\u6700\u8fd1\u4e0e\u5c0f\u9f20\u63d0\u793a\u7684\u4e00\u9879\u7814\u7a76\u53ef\u80fd\u5b58\u5728\u8054\u7cfb\u3002\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u5728PNA\u4e0a\u63d0\u524d\u62a5\u544a\u7684\u534e\u83b1\u58eb\u53ca\u5176\u540c\u4e8b\uff0c\u5373\u7ebf\u7c92\u4f53DNA\u7684\u7279\u5b9a\u7a81\u53d8\u53ef\u4ee5\u5bfc\u81f4\u5c0f\u9f20\u7684\u81ea\u95ed\u75c7\u72b6\u72b6\uff0c\u5305\u62ec\u793e\u4f1a\u4e92\u52a8\u53d7\u635f\uff0c\u9999\u6c14\u548c\u5f3a\u8feb\u884c\u4e3a\u3002\n  \u9057\u4f20\u6539\u53d8\u4e0d\u662f\u7ebf\u7c92\u4f53\u53ef\u80fd\u4e3a\u81ea\u95ed\u75c7\u4ea7\u751f\u8d21\u732e\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u67d0\u4e9b\u73af\u5883\u56e0\u7d20\uff0c\u5982\u6709\u6bd2\u6c61\u67d3\u7269\uff0c\u4e0e\u53d1\u5c55\u75c5\u60c5\u7684\u98ce\u9669\u8f83\u9ad8\u6709\u5173\u3002 Richard Frye\u662f\u4e9a\u5229\u6851\u90a3\u5dde\u51e4\u51f0\u513f\u7ae5\u533b\u9662\u7684\u513f\u79d1\u795e\u7ecf\u79d1\u533b\u751f\u548c\u81ea\u95ed\u75c7\u7814\u7a76\u5458\uff0c\u4ed6\u7684\u540c\u4e8b\u53d1\u73b0\u8fd9\u79cd\u56e0\u7d20\u4e5f\u53ef\u80fd\u4f1a\u6270\u4e71\u81ea\u95ed\u75c7\u7684\u4eba\u7684\u7ebf\u7c92\u4f53\u5065\u5eb7\u3002\u5728\u4e00\u9879\u7814\u7a76\u4e2d\uff0c\u4ed6\u4eec\u53d1\u73b0\uff0c\u5728\u51fa\u751f\u524d\u66b4\u9732\u81ea\u95ed\u75c7\u513f\u7ae5\u7684\u7a7a\u6c14\u6c61\u67d3\u91cf\u6539\u53d8\u4e86\u4ed6\u4eec\u7684\u7ebf\u7c92\u4f53\u4ea7\u751f\u4e86ATP\u7684\u901f\u7387\u3002\u5728\u53e6\u4e00\u4e2a\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\u65e9\u671f\u66b4\u9732\u4e8e\u8425\u517b\u91d1\u5c5e\u7684\u65e9\u671f\u66b4\u9732\u4e0e\u950c\u7b49\u542b\u6709\u94c5\u7684\u6bd2\u6027\u91d1\u5c5e\u4e4b\u95f4\u7684\u76f8\u5173\u6027\uff0c\u4ee5\u53ca\u5728\u751f\u547d\u4e2d\u4ee5\u540e\u6709\u81ea\u95ed\u75c7\u7684\u7ec6\u80de\u5668\u5728\u90a3\u4e9b\u4e2d\u53d1\u6325\u4f5c\u7528\u7684\u591a\u5b54\u3002\u5f17\u83b1\u4e00\u8d77\u8bf4\uff0c\u8fd9\u4e9b\u53d1\u73b0\u8868\u660e\uff0c\u7ebf\u7c92\u4f53\u662f\u81ea\u95ed\u75c7\u548c\u4fc3\u8fdb\u6761\u4ef6\u7684\u73af\u5883\u5f71\u54cd\u4e4b\u95f4\u7684\u7f3a\u5931\u8054\u7cfb\u3002\n  \u201c\u8fd9\u592a\u5feb\u4e86\u89e3\u6709\u5173\u5f88\u591a\u8fd9\u4ef6\u4e8b\u7684\u575a\u5b9a\u7ed3\u8bba\uff0c\u4f46\u5b83\u80af\u5b9a\u770b\u8d77\u6765\u662f\u7ebf\u7c92\u4f53\u5728\u8bb8\u591a\u4e0e\u81ea\u95ed\u75c7\u7684\u5b69\u5b50\u4e2d\u65ad\uff0c\u201d\u5f17\u83b1\u8bf4\u3002 \u201c\u548c\u73af\u5883\u66b4\u9732\uff0c\u7279\u522b\u662f\u65e9\u671f\uff0c\u53ef\u80fd\u662f\u7f16\u7a0b\u7ebf\u7c92\u4f53\u60a3\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u547c\u5438\u751f\u7406\u5b66\u3002\u201d\n  \u7814\u7a76\u4eba\u5458\u8fd8\u53d1\u73b0\u4e86\u7ebf\u7c92\u4f53\u529f\u80fd\u969c\u788d\u7684\u8ff9\u8c61\uff0c\u4f8b\u5982\u4ed6\u4eec\u4ee3\u8c22\u7cd6\u7684\u7d0a\u4e71\uff0c\u4ee5\u60a3\u6709\u7cbe\u795e\u5206\u88c2\u75c7\u548c\u6291\u90c1\u75c7\u7684\u4eba\u4eec\u3002\u6b64\u5916\uff0c\u7814\u7a76\u8fd8\u8868\u660e\u7ebf\u7c92\u4f53\u53ef\u80fd\u5bf9\u8bb8\u591a\u7cbe\u200b\u200b\u795e\u75be\u75c5\u7684\u5371\u9669\u56e0\u7d20\u654f\u611f\uff1a\u65e9\u671f\u751f\u547d\u4e2d\u7684\u5fc3\u7406\u538b\u529b\u3002\u4f8b\u5982\uff0c\u5728\u513f\u7ae5\u671f\u95f4\u7ecf\u5386\u521b\u4f24\u4e8b\u4ef6\u7684\u4eba\u4f3c\u4e4e\u5177\u6709\u6bcf\u4e2a\u7ec6\u80de\u7684\u66f4\u591a\u7684\u7ebf\u7c92\u4f53\u57fa\u56e0\u7ec4\u3002\u6839\u636eBrown\u5927\u5b66\u7684\u751f\u7269\u7cbe\u795e\u75c5\u5b66\u7814\u7a76\u5458\u7279\u857e\u838e\u00b7\u4e39\u5c3c\u5c14\u65af\uff08Teresa Daniels\uff09\uff0c\u8fd9\u53ef\u80fd\u8868\u660e\uff0c\u53ef\u4ee5\u8868\u660eMitochondrial DNA\u4e2d\u7684\u5f62\u6210 - \u53ef\u80fd\u4f1a\u5f25\u8865\u7ec6\u80de\u5668\u4e2d\u7684\u95ee\u9898\u3002\u4e39\u5c3c\u5c14\u65af\u662f\u4e00\u4efd2020\u7bc7\u6587\u7ae0\u7684\u540c\u5fd7\uff0c\u5728\u4e34\u5e8a\u5fc3\u7406\u5b66\u7684\u5e74\u5ea6\u5ba1\u67e5\u4e2d\u8ba8\u8bba\u4e86\u7ebf\u7c92\u4f53\u5728\u7cbe\u795e\u75c5\u75be\u75c5\u4e2d\u7684\u4f5c\u7528\u3002\n  \u867d\u7136\u7ebf\u7c92\u4f53\u529f\u80fd\u969c\u788d\u51fa\u73b0\u5728\u5e7f\u6cdb\u7684\u5927\u8111\u75be\u75c5\u4e2d\uff0c\u4f46\u7f57\u4f2f\u7279\u00b7\u6258\u83b1\u591a\u5927\u5b66\u7684\u533b\u751f\u79d1\u5b66\u5bb6\u7f57\u4f2f\u7279\u00b7\u9ea6\u514b\u62c9\u59c6\uff08Robert McCullumsmith\uff09\u7814\u7a76\u5927\u8111\u75be\u75c5\u7684\u533b\u751f\u79d1\u5b66\u5bb6\u4f46\u6ca1\u6709\u53c2\u4e0e\u7ebf\u7c92\u4f53\u7684\u5de5\u4f5c\u3002 \u201c\u8fd9\u6709\u70b9\u9e21\u86cb\u95ee\u9898\uff0c\u201d\u4ed6\u8bf4\u3002\u7136\u800c\uff0cMcCullumsmith\u589e\u52a0\u4e86\uff0c\u7814\u7a76\u7ebf\u7c92\u4f53\u5728\u8fd9\u4e9b\u75be\u75c5\u4e2d\u7684\u4f5c\u7528\u662f\u91cd\u8981\u7684\uff0c\u5e76\u4e14\u4ed6\u770b\u5230\u6709\u524d\u9014\u7684\u8bc1\u636e\u8868\u660e\uff0c\u9776\u5411\u7ebf\u7c92\u4f53\u7684\u6cbb\u7597\u65b9\u6cd5\u53ef\u80fd\u6700\u7ec8\u6709\u5229\u4e8e\u60a3\u8005\uff0c\u5373\u4f7f\u4ed6\u4eec\u6ca1\u6709\u6cbb\u6108\u8fd9\u4e9b\u6761\u4ef6\u3002 \n\u5f53\u7ebf\u7c92\u4f53\u53d8\u5f97\u635f\u574f\u6216\u529f\u80fd\u5931\u8c03\u65f6\uff0c\u4e00\u4e2a\u540e\u679c\u6839\u672c\u4e0d\u90a3\u4e48\u5c11\uff0c\u56e0\u6b64\u5927\u8111\u6b63\u5e38\u64cd\u4f5c\u7684\u80fd\u91cf\u8f83\u5c11\u3002\u4f46\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u7ebf\u7c92\u4f53\u53ef\u80fd\u5bfc\u81f4\u8111\u75be\u75c5\u7684\u6e90\u4e8e\u4ed6\u4eec\u7684\u7956\u5148\u8fc7\u53bb\u3002\n  \u4f5c\u4e3a\u7ec6\u83cc\u7684\u540e\u4ee3\uff0c\u7ebf\u7c92\u4f53\u5177\u6709DNA\u548c\u5176\u4ed6\u53ef\u4ee5\u91ca\u653e\u7684\u7ec4\u5206\uff0c\u5f53\u7ec6\u80de\u53d7\u4f24\u6216\u5f3a\u8c03\u5e76\u88ab\u6211\u4eec\u7684\u514d\u75ab\u7cfb\u7edf\u4f5c\u4e3a\u5916\u56fd\u5a01\u80c1\u9519\u8bef\u800c\u91ca\u653e\u3002 2010\u5e74\uff0c\u54c8\u4f5b\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u636e\u62a5\u9053\uff0c\u77ed\u6682\u7684\u7ebf\u7c92\u4f53DNA\u8fdb\u5165\u60a3\u6709\u4e25\u91cd\u7684\u8eab\u4f53\u635f\u4f24\u7684\u4eba\u7684\u8840\u6db2 - \u4f8b\u5982\u6c7d\u8f66\u78b0\u649e\u5f15\u8d77\u7684\u9aa8\u6298\u6216\u51fa\u8840\u3002\u53cd\u8fc7\u6765\uff0c\u8fd9\u53c8\u5438\u5f15\u4e86\u514d\u75ab\u7ec6\u80de\u5e76\u5f15\u53d1\u4e86\u4e25\u91cd\u7684\u708e\u75c7\u53cd\u5e94\uff0c\u6a21\u4eff\u8d25\u8840\u75c7 - \u4e00\u79cd\u5371\u53ca\u751f\u547d\u7684\u75c5\u75c7\uff0c\u514d\u75ab\u7cfb\u7edf\u653b\u51fb\u8eab\u4f53\u81ea\u5df1\u7684\u7ec4\u7ec7\u3002\n  \u51e0\u5e74\u540e\uff0c\u83f2\u5229\u666e\u65af\u5728\u8036\u9c81\u5927\u5b66\u7684\u535a\u58eb\u540e\uff0c\u4ed6\u7684\u540c\u4e8b\u4eec\u8868\u660e\uff0c\u5373\u4f7f\u5728\u6ca1\u6709\u8fd9\u79cd\u4e25\u91cd\u635f\u4f24\u7684\u60c5\u51b5\u4e0b\uff0cDNA\u4e5f\u53ef\u4ee5\u6cc4\u6f0f\u51fa\u7ebf\u7c92\u4f53\u6cc4\u6f0f\u5e76\u6fc0\u6d3b\u514d\u75ab\u7cfb\u7edf - \u4f8b\u5982\uff0c\u5f53\u7ec6\u80de\u5668\u65f6\u53d8\u5f97\u7f3a\u4e4f\u5173\u952e\u86cb\u767d\u8d28\u3002\n  \u6839\u636e\u8d8a\u6765\u8d8a\u591a\u7684\u7814\u7a76\uff0c\u7531\u7ebf\u7c92\u4f53DNA\u91ca\u653e\u5f15\u8d77\u7684\u708e\u75c7\u53ef\u80fd\u6709\u52a9\u4e8e\u5e15\u91d1\u68ee\uff0c\u963f\u5c14\u8328\u6d77\u9ed8\u6c0f\u75c7\u548c\u808c\u840e\u7f29\u7684\u5916\u58f3\u75c5\u53d8\uff08ALS\uff09\u7684\u795e\u7ecf\u53d8\u6027\u75be\u75c5\u4e2d\u53d1\u73b0\u7684\u635f\u5bb3\u3002\u5728\u5355\u72ec\u7684\u7814\u7a76\u4e2d\uff0c\u79d1\u5b66\u5bb6\u4eec\u5c06\u8fd9\u4e9b\u75be\u75c5\u4e0e\u708e\u75c7\u8054\u7cfb\u8d77\u6765\uff0c\u5e76\u4e14\u65e0\u6cd5\u6b63\u786e\u5730\u59a5\u5584\u7a7f\u8fc7\u7ec6\u80de\u7684\u7ebf\u7c92\u4f53\u3002\u7ebf\u7c92\u4f53\u89e6\u53d1\u7684\u708e\u75c7\u53ef\u80fd\u662f\u4e24\u8005\u4e4b\u95f4\u7684\u7f3a\u5931\u8054\u7cfb\u3002\n  \u4f8b\u5982\uff0c\u4e0e\u67d0\u4e9b\u5f62\u5f0f\u7684\u9057\u4f20\u5e15\u91d1\u68ee\u75c5 -  PINK1\u548cPRKN\u76f8\u5173\u7684\u4e24\u4e2a\u57fa\u56e0\u4e2d\u7684\u7a81\u53d8\u5bfc\u81f4\u901a\u8fc7\u8be5\u8fc7\u7a0b\u4e2d\u7684\u95ee\u9898\uff0c\u53d7\u635f\u7684\u7ebf\u7c92\u4f53\u5206\u89e3\u5e76\u4ece\u7ec6\u80de\u4e2d\u6e05\u9664\u3002 2019\u5e74\uff0c\u7531Richard youle\u5728Ninds\u9886\u5bfc\u7684\u5c0f\u7ec4\u5c55\u793a\uff0c\u5728\u7c89\u7ea2\u8272\u7684\u7a81\u53d8\u548cPRKN\u4e2d\uff0c\u8bf1\u5bfc\u7ebf\u7c92\u4f53\u635f\u4f24\uff08\u901a\u8fc7\u8be6\u5c3d\u953b\u70bc\u6216\u901a\u8fc7\u6539\u53d8\u7ebf\u7c92\u4f53DNA\uff09\u6d3b\u5316\u708e\u75c7\u5206\u5b50\u3002\u8fd9\u4e9b\u52a8\u7269\u8fd8\u5728\u4ed6\u4eec\u7684\u5927\u8111\u4e2d\u4e22\u5931\u4e86\u591a\u5df4\u80fa\u7684\u795e\u7ecf\u5143\uff0c\u5e76\u4ea7\u751f\u4e86\u4e0e\u5e15\u91d1\u68ee\u75c5\u7684\u8fd0\u52a8\u6807\u5fd7\u7684\u95ee\u9898\u3002\u7136\u800c\uff0c\u5f53\u7814\u7a76\u4eba\u5458\u91cd\u590d\u8bbe\u8ba1\u7684\u5c0f\u9f20\u7f3a\u4e4f\u91cd\u8981\u708e\u75c7\u5206\u5b50\u65f6\uff0c\u8fd9\u4e9b\u6548\u679c\u5e76\u6ca1\u6709\u53d1\u751f\u3002\u8fd9\u4e9b\u7814\u7a76\u7ed3\u679c\u8868\u660e\uff0c\u5728\u9057\u4f20\u4e0a\u503e\u5411\u4e8e\u5e15\u91d1\u68ee\u7684\u52a8\u7269\u4e2d\uff0c\u7ebf\u7c92\u4f53DNA\u4e2d\u7684\u4efb\u4f55\u5e94\u529b\u6216\u6bdb\u523a\u90fd\u53ef\u4ee5\u5f15\u53d1\u4fc3\u8fdb\u75be\u75c5\u7684\u708e\u75c7\u3002\n    \u5c3d\u7ba1\u9700\u8981\u66f4\u591a\u7684\u5de5\u4f5c\u6765\u5efa\u7acb\u540c\u6837\u7684\u8fc7\u7a0b\u662f\u5728\u4eba\u7c7b\u4e2d\u53d1\u751f\u7684\u60c5\u51b5\u4e0b\uff0c\u201c\u6709\u5f88\u591a\u8bc1\u636e\u8868\u660e\u672a\u80fd\u4fdd\u6301\u5065\u5eb7\u7684\u7ebf\u7c92\u4f53\u662f\u5bfc\u81f4\u5e15\u91d1\u68ee\u75c7\u72b6\u7684\u53d1\u5c55\u7684\u65e9\u671f\u75c5\u7406\u4e8b\u4ef6\u4e4b\u4e00\uff0c\u201d\u83ab\u8d6b\u66fc\u8bf4\u4e00\u4efd2020\u7bc7\u8bba\u6587\u5728\u7ec6\u80de\u548c\u53d1\u80b2\u751f\u7269\u5b66\u7684\u5e74\u5ea6\u5ba1\u67e5\u4e2d\uff0c\u810a\u9488\u8ba8\u8bba\u4e86\u7ebf\u7c92\u4f53\u95ee\u9898\u7684\u95ee\u9898\u53ef\u80fd\u5bfc\u81f4\u795e\u7ecf\u53d8\u6027\u3002\n  \u4f5c\u4e3a\u6cc4\u6f0f\u7ebf\u7c92\u4f53DNA\u7684\u8bc1\u636e\u5b89\u88c5\uff0c\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u6b63\u5728\u5173\u6ce8\u539f\u56e0\u3002\u897f\u90e8\uff0c\u8bb8\u591a\u8fc7\u7a0b\u53ef\u80fd\u662f\u5728\u5267\u6848\u4e2d\uff0c\u73b0\u5728\u662f\u4e00\u4e2a\u514d\u75ab\u533b\u5b66\u5bb6\u5fb7\u514b\u8428\u65afA\uff06amp;\u7c73\u5927\u5b66\u3002\u4ed6\u8bf4\uff0c\u4e00\u79cd\u60c5\u666f\u662f\uff0c\u901a\u8fc7\u9057\u4f20\u6216\u73af\u5883\u56e0\u7d20\u52a0\u5267\u65f6\uff0c\u7ec6\u80de\u5668\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u55b7\u5c04\u6052\u5b9a\uff0c\u4f4e\u6c34\u5e73\u7684DNA\u6c34\u5e73\uff0c\u5e76\u4e14\u8fd9\u79cd\u79ef\u7d2f\u53ef\u4ee5\u8fbe\u5230\u75be\u75c5\u53d1\u751f\u7684\u9608\u503c\u3002 \n\u5fc3\u7406\u538b\u529b\u53ef\u80fd\u662f\u4e00\u79cd\u8fd9\u6837\u7684\u56e0\u7d20\u3002\u57282019\u5e74\u7814\u7a76\u4e2d\uff0c\u54e5\u4f26\u6bd4\u4e9a\u5927\u5b66\u7684\u7ebf\u7c92\u4f53\u7cbe\u795e\u75c5\u5b66\u5bb6\u9a6c\u4e01\u79d1\u5fb7\u548c\u4ed6\u7684\u540c\u4e8b\u4eec\u62a5\u544a\u8bf4\uff0c\u7ecf\u8fc7\u4e00\u7bc7\u7b80\u77ed\u7684\u8206\u8bba\u4efb\u52a1\uff0c\u8981\u6c42\u53c2\u4e0e\u8005\u634d\u536b\u81ea\u5df1\u7684\u8fdd\u6cd5\u884c\u4e3a\uff0c\u8840\u6d41\u4e2d\u7684\u81ea\u7531\u6d6e\u52a8\u7ebf\u7c92\u4f53DNA\u7684\u6c34\u5e73\uff0c\u8868\u660e\u7ebf\u7c92\u4f53\u5f15\u8d77\u4e86\u5b83\u4eec\u7684\u9057\u4f20\u7269\u8d28\u3002\n  \u8fd9\u79cd\u7ebf\u7c92\u4f53\u635f\u4f24\u548cDNA\u91ca\u653e\u53ef\u80fd\u6709\u52a9\u4e8e\u4eba\u7c7b\u75be\u75c5\uff0c\u5373\u4f7f\u5728\u6ca1\u6709\u611f\u67d3\u7684\u60c5\u51b5\u4e0b\uff0c\u708e\u75c7\u4f3c\u4e4e\u53d1\u6325\u4f5c\u7528\uff0c\u4f8b\u5982\u764c\u75c7\uff0c\u81ea\u8eab\u514d\u75ab\u75c5\u75c7\u548c\u795e\u7ecf\u53d8\u6027\u969c\u788d\u3002\n  \u4ed6\u548c\u5176\u4ed6\u4eba\u4e5f\u6000\u7591\u7ebf\u7c92\u4f53\u8bf1\u5bfc\u7684\u708e\u75c7\u53ef\u80fd\u662f\u8001\u5316\u672c\u8eab\u7684\u5173\u952e\u9a71\u52a8\u56e0\u7d20\u3002\u5728\u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76\u4e2d\uff0c\u897f\u65b9\u56e2\u961f\u5c55\u793a\u4e86\u5c0f\u9f20\u7684\u8bbe\u8ba1\uff0c\u4ee5\u66f4\u5feb\u5730\u5177\u6709\u4e0d\u7a33\u5b9a\u7684\u7ebf\u7c92\u4f53DNA\uff0c\u663e\u5f71\u8bf8\u5982\u5934\u53d1\u548c\u9aa8\u8d28\u635f\u5931\u548c\u8fc7\u65e9\u6b7b\u4ea1\u7684\u95ee\u9898\u3002\u6d88\u9664\u7531\u7ebf\u7c92\u4f53DNA\u6fc0\u6d3b\u7684\u514d\u75ab\u7cfb\u7edf\u7684\u5143\u7d20\u98a0\u8986\u4e86\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5c06\u52a8\u7269\u7684\u5bff\u547d\u5ef6\u957f\u7ea640\u5929\u3002 \uff08\u8fd9\u4e9b\u7ed3\u679c\u53d1\u5e03\u5728BiorXiv\u51fa\u7248\u7269\u4e4b\u524d\uff0c\u5c1a\u672a\u8fdb\u884c\u540c\u884c\u8bc4\u5ba1\u3002\uff09\u5982\u679c\u672a\u6765\u7684\u7814\u7a76\u6d89\u53ca\u8fd9\u4e00\u70b9\uff0c\u5b83\u5c06\u63d0\u4f9b\u8870\u8001\uff0c\u5728\u8fd9\u4e9b\u5c0f\u9f20\u4e2d\u7684\u8001\u5316\u81f3\u5c11\u662f\u7531\u7ebf\u7c92\u4f53\u635f\u4f24\u7684\u90e8\u5206\u9a71\u52a8\u7684\u3002\n    \u7ebf\u7c92\u4f53\u6709\u5176\u4ed6\u529f\u80fd\uff0c\u6709\u52a9\u4e8e\u7ef4\u6301\u5065\u5eb7\u7684\u5927\u8111\u529f\u80fd - \u6216\u8005\u5728\u51fa\u73b0\u65f6\u9020\u6210\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u7ebf\u7c92\u4f53\u6709\u52a9\u4e8e\u63a7\u5236\u6f5c\u5728\u6bd2\u6027\u526f\u4ea7\u54c1\u7684\u5e73\u8861\uff0c\u79f0\u4e3a\u53cd\u5e94\u6027\u6c27\u7269\u8d28\u548c\u76ae\u8d28\u9187\u7b49\u5e94\u6fc0\u6fc0\u7d20\u7684\u5408\u6210\u3002\u7ebf\u7c92\u4f53\u4e5f\u9ad8\u5ea6\u52a8\u6001 - \u901a\u8fc7\u4fe1\u4ee4\u5206\u5b50\u548c\u7269\u7406\u8fde\u63a5\u5f7c\u6b64\u4e92\u52a8\u3002\u5b83\u4eec\u8fde\u7eed\u8fdb\u884c\u88c2\u53d8\uff0c\u5176\u4e2d\u5927\u578b\u7ebf\u7c92\u4f53\u5206\u6210\u4e24\u4e2a\u8f83\u5c0f\u7684\u7ebf\u7c92\u4f53\uff0c\u6216\u8005\u878d\u5408\u3002\u8fd9\u4e9b\u6b63\u5728\u8fdb\u884c\u7684\u4e92\u52a8\u4e5f\u53ef\u80fd\u5f71\u54cd\u5927\u8111\u529f\u80fd\u548c\u884c\u4e3a\uff0c\u4ee5\u4fbf\u7814\u7a76\u4eba\u5458\u53ea\u5f00\u59cb\u610f\u8bc6\u5230\u3002\n  \u745e\u58eb\u8054\u90a6\u7406\u5de5\u5b66\u9662\u7684\u884c\u4e3a\u795e\u7ecf\u79d1\u5b66\u5bb6Carmen Sandi\u4ee5\u53ca\u5979\u7684\u5c0f\u7ec4\u5728\u5177\u6709\u9ad8\u6c34\u5e73\u7684\u7126\u8651\u884c\u4e3a\u4e2d\u68c0\u67e5\u4e86\u5c0f\u9f20\u7684\u7ebf\u7c92\u4f53\uff0c\u4f8b\u5982\u5728\u5f00\u653e\u5730\u533a\u7684\u613f\u671b\u4e0d\u90a3\u4e48\u613f\u610f\u3002\u4ed6\u4eec\u53d1\u73b0\uff0c\u5728\u90a3\u4e9b\u52a8\u7269\u4e2d\uff0c\u7ebf\u7c92\u4f53\u5728\u6838\u5fc3\u817a\u7684\u795e\u7ecf\u5143\u4e2d\uff0c\u4e00\u4e2a\u6d89\u53ca\u52a0\u5de5\u5956\u52b1\u7684\u8111\u533a\u57df\uff0c\u4e0e\u5728\u663e\u793a\u8f83\u4f4e\u7684\u7126\u8651\u6c34\u5e73\u7684\u52a8\u7269\u4e2d\u4ea7\u751fATP\u7684\u719f\u7ec3\u7a0b\u5ea6\u4e0d\u90a3\u4e48\u719f\u7ec3\u3002\u9ad8\u7126\u8651\u52a8\u7269\u8fd8\u5c55\u793a\u4e86\u878d\u5408\u4e2d\u6d89\u53ca\u7684\u9176\u7684\u8f83\u4f4e\u6c34\u5e73 - \u8fd9\u4f7f\u5f97\u7ebf\u7c92\u4f53\u80fd\u591f\u5728\u9700\u8981\u65f6\u7ec4\u5408\u5e76\u6df7\u5408\u5176\u542b\u91cf\u5f7c\u6b64\u4e92\u76f8\u652f\u6301\u3002\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u589e\u52a0\u8be5\u86cb\u767d\u8d28\u7684\u6c34\u5e73\u4e0d\u4ec5\u6062\u590d\u4e86\u7ebf\u7c92\u4f53\u529f\u80fd\uff0c\u800c\u4e14\u8fd8\u51cf\u5c11\u4e86\u7126\u8651\u884c\u4e3a\u3002\n  \u50cf\u8fd9\u4e9b\u4e00\u6837\u7684\u8c03\u67e5\u7ed3\u679c\u4f7f\u79d1\u5b66\u5bb6\u63a8\u7406\u6709\u7406\u7531\u5e0c\u671b\u6709\u4e00\u5929\u80fd\u591f\u4e3a\u9776\u5411\u8fd9\u4e9b\u7ec6\u80de\u5668\u7684\u8111\u75be\u75c5\u53d1\u5c55\u6cbb\u7597\u3002\u4f8b\u5982\uff0cFrye\u6700\u8fd1\u5f00\u59cb\u4e34\u5e8a\u8bd5\u9a8c\u6765\u8c03\u67e5\u8425\u517b\u7d20\u662f\u5426\u53ef\u4ee5\u9006\u8f6c\u4ed6\u7684\u56e2\u961f\u5728\u81ea\u95ed\u75c7\u513f\u7ae5\u4e2d\u53d1\u73b0\u7684\u7ebf\u7c92\u4f53\u5f02\u5e38\u3002\u534e\u83b1\u58eb\u8865\u5145\u8bf4\uff0c\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u77e5\u9053\u8bb8\u591a\u6f5c\u5728\u6cbb\u7597\uff0c\u5e2e\u52a9\u63d0\u9ad8\u7ebf\u7c92\u4f53\u7684\u529f\u80fd - \u4ece\u836f\u7269\u5230\u884c\u4e3a\u5e72\u9884\uff0c\u4f8b\u5982\u8fd0\u52a8\u3002\n  \u6d4b\u8bd5\u6b64\u7c7b\u5e72\u9884\u63aa\u65bd\u9700\u8981\u65f6\u95f4\u3002\u76ee\u524d\uff0c\u79d1\u5b66\u5bb6\u4eec\u6b63\u5fd9\u4e8e\u89e3\u5f00\u5927\u91cf\u529f\u80fd\u7ebf\u7c92\u4f53\u5728\u5927\u8111\u4e2d\u7684\u529f\u80fd\u3002\u8fd9\u9879\u5de5\u4f5c\u7684\u5927\u90e8\u5206\u4ecd\u7136\u662f\u521d\u6b65\u7684\uff0c\u4f46\u6765\u81ea\u5404\u79cd\u5b66\u79d1\u7684\u8bc1\u636e - \u5305\u62ec\u795e\u7ecf\u79d1\u5b66\uff0c\u514d\u75ab\u5b66\u548c\u5fc3\u7406\u5b66 - \u79d1\u5b66\u5bb6\u5bf9\u672a\u6765\u611f\u5230\u5174\u594b\u3002 Sandi\u8bf4\uff0c\u6709\u8db3\u591f\u7684\u5173\u4e8e\u7ebf\u7c92\u4f53\u7684\u65b0\u53d1\u73b0\u7a7a\u95f4\u3002 \u201c\u6211\u8ba4\u4e3a\u4ed6\u4eec\u7684\u8868\u73b0\u4e0d\u6bd4\u795e\u7ecf\u79d1\u5b66\u5bb6\u8fc7\u53bb\u6240\u76f8\u4fe1\u7684\u90a3\u4e48\u591a\u3002\u201d \n\u672c\u6587\u6700\u521d\u51fa\u73b0\u5728\u77e5\u8bc6\u6742\u5fd7\u4e2d\uff0c\u8fd9\u662f\u4e00\u9879\u4ece\u5e74\u5ba1\u67e5\u7684\u72ec\u7acb\u65b0\u95fb\u8bae\u4f1a\u3002 \u6ce8\u518c\u65f6\u4e8b\u901a\u8baf\u3002 ", "note_en": "Long before the earliest animals swam through the water-covered surface of Earth\u2019s ancient past, one of the most important encounters in the history of life took place. A primitive bacterium was engulfed by our oldest ancestor \u2014 a solo, free-floating cell. The two fused to form a mutually beneficial relationship that has lasted more than a billion years, with the latter providing a safe, comfortable home and the former becoming a powerhouse, fueling the processes necessary to maintain life.\n  That\u2019s the best hypothesis to date for how the cellular components, or organelles, known as mitochondria came to be. Today, trillions of these bacterial descendants live within our bodies, churning out ATP, the molecular energy source that sustains our cells. Despite being inextricably integrated into the machinery of the human body, mitochondria also carry remnants of their bacterial past, such as their own set of DNA.\n    These features make mitochondria both a critical element of our cells and a potential source of problems. Like the DNA inside the nuclei of our cells that makes up the human genome, mitochondrial DNA can harbor mutations. Age, stress and other factors may disrupt mitochondria\u2019s many functions. On top of that, mitochondrial injury can release molecules that, due to their similarities to those made by bacteria, can be mistaken by our immune system as foreign invaders, triggering a harmful inflammatory response against our own cells.\n  There is one organ that appears to be particularly vulnerable to mitochondrial damage: our power-hungry brains.\u00a0\u201cThe more energetically demanding a cell is, the more mitochondria they have, and the more critical that mitochondria health is \u2014 so there\u2019s more potential for things to go wrong,\u201d says Andrew Moehlman, postdoctoral researcher who studies neurodegeneration at the US National Institute of Neurological Disorders and Stroke (NINDS). According to some estimates, each neuron can have up to 2 million mitochondria.\n  A small but growing number of scientists are now turning their attention to the contributions of mitochondria in brain health. Studies in humans and lab animals \u2014 though much of it still preliminary \u2014 suggest these organelles could be key players in virtually every type of brain disorder, including neurodevelopmental conditions such as autism, psychiatric illnesses like depression and schizophrenia, and neurodegenerative diseases such as Parkinson\u2019s. They may even be at the heart of an enduring mystery for researchers who study brain disorders: how genetic predispositions and environmental influences interact to put people at risk for developing these conditions.\n    In the 1960s, researchers discovered that mitochondria possess a unique set of genetic material. Investigations revealed that mitochondrial DNA, like that of bacteria, forms a circular strand and encodes just 37 genes \u2014 a mere fraction of the tens of thousands found in the human genome.\n  A short time later, in the 1970s, a doctoral student at Yale University named Douglas Wallace developed an interest in mitochondria DNA. Wallace reasoned that since mitochondria were the primary producers of the body\u2019s energy, mutations in their DNA would lead to disease. \u201cAt the time no one thought it was rational,\u201d he says. It wasn\u2019t until 1988, when Wallace and his colleagues established the first link between a mutation in mitochondrial DNA and a human disease \u2014 Leber\u2019s hereditary optic neuropathy, a condition that causes sudden blindness \u2014 that medical researchers began to take the idea seriously, Wallace recalls.\n  Researchers have since linked dozens of disorders to alterations in mitochondrial DNA and nuclear DNA related to mitochondrial function \u2014 and interestingly, the majority of these are either neurological in nature or have some effect on the brain. Wallace, who is now director of the Children\u2019s Hospital of Philadelphia\u2019s Center for Mitochondrial and Epigenomic Medicine, has a simple explanation: Despite making up only 2 percent of a human\u2019s body weight, the brain uses roughly a fifth of the body\u2019s energy. In the same way that high-energy appliances will be disproportionately affected when voltage levels drop during a metropolitan brownout, even small reductions in mitochondrial function can have large effects on the brain, Wallace says.\n  Wallace is particularly interested in how mitochondria might contribute to autism spectrum disorder. Studies by several research teams have revealed that\u00a0 mitochondrial diseases, a mix of symptoms caused by defects in the organelle, are much more prevalent in people with autism (5 percent) than in the general population (about 0.01 percent). An additional 30 percent to 50 percent of children with autism show signs of mitochondrial dysfunction, such as abnormal levels of certain byproducts generated by cellular respiration, the process through which ATP is produced.\n  In some people with autism, scientists have identified genetic differences either in mitochondrial DNA, or in some of the thousand or so genes in the human genome known to influence mitochondrial function. More work is needed to establish whether these genetic variations actually cause or contribute to autism, but a recent study with mice hints that there could be a link. Wallace and colleagues reported earlier this year in\u00a0 PNAS\u00a0that a specific mutation in mitochondrial DNA can lead to autism-like traits in mice, including impaired social interactions, skittishness and compulsive behavior.\n  Genetic alterations aren\u2019t the only way mitochondria could contribute to autism. Certain environmental factors, such as toxic pollutants, have been associated with a higher risk of developing the condition. Richard Frye, a pediatric neurologist and autism researcher at the Phoenix Children\u2019s Hospital in Arizona, and his colleagues have found that such factors may also perturb the health of mitochondria in people with autism. In one study, they found that the amount of air pollution that children with autism were exposed to before birth altered the rates at which their mitochondria produced ATP. In another, the researchers found correlations between early-life exposure to both nutritional metals such as zinc as well as toxic metals such as lead, and how well the organelles functioned in those with autism later in life. Together, Frye says, these findings suggest that mitochondria be the missing link between autism and the environmental influences that contribute to the condition.\n  \u201cIt\u2019s too soon to make any firm conclusions about a lot of this stuff, but it sure looks like the mitochondria are disrupted in many kids with autism,\u201d Frye says. \u201cAnd environmental exposures, especially early on, may be programming the mitochondria to have different types of respiratory physiology.\u201d\n  Researchers have also found signs of mitochondrial dysfunction, such as disturbances in the way they metabolize sugars to create energy, in people with schizophrenia and depression. In addition, studies also suggest that mitochondria may be sensitive to a risk factor for many mental illnesses: psychological stress in early life. For example, people who experience a traumatic event in childhood appear to have a larger number of mitochondrial genomes per cell. This uptick in mitochondrial DNA \u2014 which can indicate the formation of new mitochondria \u2014 may occur to compensate for problems in the organelle, according to Teresa Daniels, a biological psychiatry researcher at Brown University, where she is working on addressing this question. Daniels is a coauthor of a 2020 paper in the\u00a0 Annual Review of Clinical Psychology\u00a0that discusses the\u00a0 role of mitochondria in psychiatric disorders.\n  Although mitochondrial dysfunction appears in a wide range of brain disorders, it\u2019s not yet clear whether defects in these organelles are a primary cause of these conditions or a secondary effect, says Robert McCullumsmith, a physician-scientist at the University of Toledo who studies brain disorders but is not involved in the work on mitochondria. \u201cIt\u2019s a bit of a chicken-and-egg problem,\u201d he says. However, McCullumsmith adds, studying the role of mitochondria in these disorders is important, and he sees promising evidence that therapeutics that target mitochondria may end up benefiting patients, even if they don\u2019t cure these conditions.\n    When mitochondria become damaged or dysfunctional, one consequence is simply less ATP, and therefore less energy for the normal operations of the brain. But another way mitochondria could contribute to brain disorders stems from their ancestral past.\n  As descendants of bacteria, mitochondria have DNA and other components that can be released when cells are injured or stressed and mistaken by our immune system as a foreign threat. In 2010, researchers at Harvard University reported a rapid release of mitochondrial DNA into the bloodstream in people with severe physical injuries \u2014 such as fractures or hemorrhages caused by a car crash. This, in turn, attracted immune cells and triggered a severe inflammatory response that mimicked sepsis \u2014 a life-threatening condition in which the immune system attacks the body\u2019s own tissues.\n  A few years later, A. Phillip West, who was then a postdoc at Yale University, and his colleagues showed that DNA can leak out of mitochondria and activate the immune system even in the absence of such severe injuries \u2014 for example, when the organelles became deficient in a key protein.\n  Inflammation caused by the release of mitochondrial DNA may contribute to the damage found in neurodegenerative diseases such as Parkinson\u2019s, Alzheimer\u2019s and amyotrophic lateral sclerosis (ALS), according to a growing number of studies. In separate lines of research, scientists have linked these disorders with both inflammation and an inability to properly rid cells of defective mitochondria. Mitochondria-triggered inflammation may be the missing link between the two.\n  For example, mutations in two genes associated with some forms of inherited Parkinson\u2019s disease \u2014\u00a0 PINK1\u00a0and\u00a0 PRKN\u00a0\u2014 lead to problems in the process through which damaged mitochondria are broken down and cleared from the cell. In 2019, a group led by Richard Youle at the NINDS demonstrated that in mice with mutations in\u00a0 PINK1\u00a0and\u00a0 PRKN, inducing mitochondrial damage (either through exhaustive exercise or by altering mitochondrial DNA) activated inflammatory molecules. Those animals also lost dopamine-producing neurons in their brains and developed problems with movement \u2014 hallmarks of Parkinson\u2019s disease. These effects didn\u2019t occur, however, when the researchers repeated the experiment with mice engineered to lack an important inflammatory molecule. Together, these findings illustrated that in animals genetically predisposed to Parkinson\u2019s, either stress or glitches in mitochondrial DNA could trigger the inflammation that promotes the disease.\n    Although more work is needed to establish whether the same process occurs in humans, \u201cthere\u2019s a lot of evidence that the failure to maintain the healthy mitochondria is one of the early pathological events that leads to development of Parkinson\u2019s symptoms,\u201d says Moehlman, who coauthored a 2020 paper in the \u00a0Annual Review of Cell and Developmental Biology\u00a0with Youle that discusses how\u00a0 problems in mitochondria may lead to neurodegeneration.\n  As evidence mounts that leaking mitochondrial DNA is bad news, some researchers are turning their attention to why. Many processes may be at play, says West, who is now an immunobiologist Texas A&amp;M University. One scenario, he says, is that the organelle ejects constant, low levels of DNA over time \u2014 and when exacerbated by genetic or environmental factors, this accumulation can reach a threshold where diseases occur.\n  Psychological stress could be one such factor. In a 2019 study, Martin Picard, a mitochondrial psychobiologist at Columbia University, and his colleagues reported that after a brief public-speaking task where participants were asked to defend themselves against an alleged transgression, levels of free-floating mitochondrial DNA in the bloodstream rose, indicating that the mitochondria had expelled their genetic material.\n  This sort of mitochondrial damage and DNA release could contribute to human diseases where inflammation appears to play a role, even in the absence of an infection, such as cancer, autoimmune conditions and neurodegenerative disorders, West says.\n  He and others also suspect that mitochondria-induced inflammation may be a key driver of aging itself. In a recent study, West\u2019s team demonstrated that mice engineered to have unstable mitochondrial DNA aged more quickly, developing problems such as hair and bone loss and dying prematurely. Eliminating the elements of the immune system activated by mitochondria DNA reversed this process, extending the animals\u2019 lifespans by around 40 days. (These results were posted before publication on bioRxiv and have yet to be peer-reviewed.) If future research bears this out, it would provide evidence that aging, in these mice at least, is partly driven by mitochondrial damage, West says.\n    Mitochondria have other functions that help maintain healthy brain function \u2014 or cause problems when they go awry. For example, mitochondria help control the balance of potentially toxic byproducts of cellular metabolism called reactive oxygen species and the synthesis of stress hormones like cortisol. Mitochondria are also highly dynamic \u2014 communicating with each other via signaling molecules and physical connections. They continuously undergo fission, where a large mitochondrion splits into two smaller ones, or fusion, when they combine. These ongoing interactions may also influence brain function and behavior in ways that researchers are only beginning to realize.\n  Carmen Sandi, a behavioral neuroscientist at the Swiss Federal Institute of Technology, and her group have examined mitochondria in mice with high levels of anxiety-like behaviors, such as less willingness to spend time in open areas. They\u2019ve found that in those animals, mitochondria in the neurons of the nucleus accumbens, a brain area involved in processing reward, were less adept at producing ATP compared to those found in animals that displayed lower levels of anxiety. The high-anxiety animals also displayed lower levels of an enzyme involved in fusion \u2014 which enables mitochondria to combine and mix their contents to support one another in times of need. Increasing the level of this protein not only restored mitochondrial function, but also reduced anxious behaviors, the researchers found.\n  Findings like these give scientists reason to hope they may one day be able to develop treatments for brain disorders that target these organelles. Frye, for example, recently began a clinical trial to investigate whether nutrient supplements can reverse the mitochondrial abnormalities his team has found in children with autism. Wallace adds that researchers already know of many potential\u00a0 treatments\u00a0that help boost the function of mitochondria \u2014 from medications to behavioral interventions, such as\u00a0 exercise.\n  It will take time to test such interventions. For now, scientists are busy unraveling the multitude of functions mitochondria have in the brain. Much of this work is still preliminary, but evidence coming from a variety of disciplines \u2014 including neuroscience, immunology and psychology \u2014 has scientists excited about the future. There is plenty of room for new discoveries about mitochondria, says Sandi. \u201cI think they are doing much more than what neuroscientists have believed in the past.\u201d\n    This article originally appeared in   Knowable Magazine, an independent journalistic endeavor from Annual Reviews. Sign up for the  newsletter.", "posttime": "2021-06-21 01:26:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7ebf\u7c92\u4f53,key", "title": "\u7ebf\u7c92\u4f53\u53ef\u4ee5\u6210\u4e3a\u5065\u5eb7\u5927\u8111\u7684\u5173\u952e\u5417\uff1f ", "title_en": "Could Mitochondria Be the Key to a Healthy Brain?", "transed": 1, "url": "https://www.scientificamerican.com/article/could-mitochondria-be-the-key-to-a-healthy-brain/", "via": "", "real_tags": ["\u7ebf\u7c92\u4f53", "key"]}, {"category": "", "categoryclass": "", "imagename": "9eca5b38d6bc63b63b4c71891fe9316c.png", "infoid": 1067063, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6c38\u4e45\u94fe\u63a5\u201c\u6570\u636e\u79d1\u5b66\u5bb6\u201d\uff0c\u201c\u673a\u5668\u5b66\u4e60\u5f00\u53d1\u4eba\u5458\u201d\uff0c\u201c\u6df1\u5ea6\u5b66\u4e60\u5de5\u7a0b\u5e08\u201d\uff0c\u201c\u6570\u636e\u5de5\u7a0b\u5e08\u201d\uff0c\u201cML OPS\u5de5\u7a0b\u5e08\u201d\uff0c\u4ee5\u53ca\u201c\u6570\u636e\u5206\u6790\u5e08\u201d\u901a\u5e38\u662f\u8fc7\u8f7d\u7684\u89d2\u8272\u6807\u9898 - \u5e76\u4e14\u4e0d\u4e00\u5b9a\u6307\u793a\u7528\u6237\u7684\u65e5\u5b50 - \u4eca\u5929\u7684\u5de5\u4f5c\uff0c\u6216\u4ed6\u4eec\u4f7f\u7528\u7684\u5de5\u5177\u6765\u5b9e\u73b0\u8fd9\u9879\u5de5\u4f5c\u3002\n \u4e3a\u4e86\u66f4\u597d\u5730\u4e86\u89e3\u548c\u8868\u5f81\u8fd9\u4e9b\u4e0d\u540c\u7684\u7528\u6237\u6bb5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5728\u5361\u683c\u4e2d\u5f15\u7528\u7684\u5de5\u5177\uff0c\u5e93\u548c\u6846\u67b6\uff1a\u673a\u5668\u5b66\u4e60\u72b6\u6001\u548c\u6570\u636e\u79d1\u5b662020\u8c03\u67e5\u5230\u96c6\u7fa4\u5de5\u7a0b\u5e08\u8fdb\u5165\u7fa4\u7ec4\u7ec4\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u677e\u6563\u5730\u5c06\u8fd9\u4e9b\u7fa4\u4f53\u4e0e\u9884\u671f\u7684\u4e91\u82b1\u8d39\u6346\u7ed1;\u786e\u5b9a\u6bcf\u4e2a\u7528\u6237\u7fa4\u7ec4\u7684\u5178\u578b\u4efb\u52a1\u8d1f\u8d23\u5b8c\u6210;\u8bc4\u4f30\u6bcf\u4e2a\u7528\u6237\u7fa4\u7ec4\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u8981\u6c42;\u57fa\u4e8e\u8c03\u67e5\u54cd\u5e94\uff0c\u4f30\u8ba1\u7fa4\u7ec4\u5927\u5c0f\u3002\n  \u8c03\u67e5\u53d7\u8bbf\u8005\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u5c0f\u4e8e\u4e2d\u578b\u6570\u636e\u96c6\u8fdb\u884c\u538b\u5012\u6027\u5730\u6267\u884c\u63a2\u7d22\u6027\u5206\u6790\uff0c\u5728\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u4f7f\u7528\u5b58\u50a8\u4e3a\u5e73\u9762\u6587\u4ef6\u3002\u673a\u5668\u5b66\u4e60\u9879\u76ee - \u5982\u679c\u5168\u90e8\u5c1d\u8bd5ML  - \u662f\u5728\u65e9\u671f\u9636\u6bb5\uff0c\u4f7f\u7528\u6700\u9002\u5408\u9ad8RAM CPU\u7684\u4f20\u7edf\u65b9\u6cd5\u800c\u4e0d\u662fGPU SKU\uff08\u4f8b\u5982\uff1aSCICIT-GREAND\u548cCLAMETING\u65b9\u6cd5\uff09\u3002\n \u57fa\u4e8e\u54cd\u5e94\uff0c\u6570\u636e\u79d1\u5b66\u56e2\u961f\u8d8b\u52bf\u5c0f\uff080-5\u5de5\u7a0b\u5e08\uff09\uff0c\u5728SDLC\u6700\u4f73\u5b9e\u8df5\u4e2d\u5177\u6709\u5149\u957f\u4e25\u8c28\uff08\u4f8b\u5982\uff1a\u7248\u672c\u63a7\u5236\uff09;\u5927\u591a\u6570\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u81ea\u975eCS\u80cc\u666f\uff0c\u5177\u6709\u6700\u5c0f\u7684\u7f16\u7a0b\u4f53\u9a8c\u3002\u9996\u9009\u5de5\u5177\u662f\u7edd\u5927\u591a\u6570\u5f00\u6e90\u548c\u975e\u4e13\u6709\u7684\u3002\u5982\u679c\u8c03\u67e5\u53d7\u8bbf\u8005\u6b63\u5728\u4f7f\u7528Visual Studio\u4ee3\u7801\uff0c\u5b83\u901a\u5e38\u901a\u5e38\u7528\u4e8e\u975e\u4e92\u52a8\uff0c\u751f\u4ea7\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u79d1\u5b66\u5de5\u4f5c\u3002\n   \u5e74\u5ea6\u8c03\u67e56-7M\u6ce8\u518c\u7684\u6447\u6643\u7528\u6237\u3002\u5361\u683c\u662f\u4e16\u754c\u4e0a\u6700\u5927\u7684\u673a\u5668\u5b66\u4e60\u548c\u6570\u636e\u79d1\u5b66\u7684\u5728\u7ebf\u793e\u533a\u3002\n SackageOverflow\u7528\u6237\u7684\u5e74\u5ea6\u8c03\u67e5\u3002\u7279\u5b9a\u4e8e\u57df\u540d; \u301c8\uff05\u7684\u53d7\u8bbf\u8005\u8868\u793a\u6b63\u5728\u8fdb\u884c\u6570\u636e\u8054\u76df\u5de5\u4f5c\uff08\u6570\u636e\u79d1\u5b66\uff0cML\uff0cResearch\uff09\u3002\n Python\u5f00\u53d1\u4eba\u5458\u7684\u5e74\u5ea6\u8c03\u67e5\uff0c\u5728PSF\u548cJetBrains\u4e4b\u95f4\u5b8c\u6210\u4e86\u4f19\u4f34\u5173\u7cfb\u3002\u4e0d\u662f\u6570\u636e\u79d1\u5b66\u548cML\u7279\u5b9a\u7684\uff0c\u5c3d\u7ba1\u301c50\uff05\u7684\u53d7\u8bbf\u8005\u8868\u793a\u4ed6\u4eec\u4f7f\u7528Python\u4e3aEDA\u3002 \n\u87d2\u86c7\u7ba1\u7406\u7684\u6570\u636e\u5206\u6790\u5e08\u548cML\u5de5\u7a0b\u5e08\u7684\u91cd\u70b9\u8c03\u67e5\u3002\u6570\u636e\u672a\u516c\u5f00\u53d1\u5e03;\u4f46\u662f\u53ef\u4ee5\u63d0\u4f9b\u6267\u884c\u6458\u8981\u3002\n \u4e0d\u662f\u7279\u5b9a\u4e8e\u57df\u7684\u8c03\u67e5\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u4f7f\u7528\u7684\u5de5\u5177\u5206\u6bb5\u3002\u8d85\u8fc7\u4e00\u534a\u7684ML\u548c\u6570\u636e\u79d1\u5b66\u53d7\u8bbf\u8005\uff085K\uff09\u662f\u4e1a\u4f59\u7231\u597d\u8005\u548c\u5b66\u751f\uff0c\u53ea\u662f\u5b66\u4e60\u5982\u4f55\u505aML;\u4e0d\u662f\u4e13\u4e1a\u4eba\u58eb\u3002\n \u9274\u4e8e\u4e24\u4e2a\u8c03\u67e5\u4eea\u5668\u7684\u91cd\u70b9\u6027\u8d28\uff0cAnaconda\u8c03\u67e5\u548c\u6f14\u64ad\u8005\u8c03\u67e5\u90fd\u88ab\u9009\u4e3a\u6700\u6709\u7528\uff0c\u56e0\u4e3a\u8be5\u5206\u6790\u7684\u76ee\u7684\u662f\u6700\u6709\u7528\u7684\u3002\u6765\u81eaPython\u5f00\u53d1\u4eba\u5458\u8c03\u67e5\u7684\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u53d7\u8bbf\u8005\uff08\u603b\u6570\u768455\uff05\uff09;\u4e13\u4e1a\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u53d7\u8bbf\u8005\u7684\u659c\u62c9\u5854\u8c03\u67e5\uff08\u603b\u6570\u768425\uff05\uff09; Sackoverflow Developer Survey\u7684\u6570\u636e\u79d1\u5b66\u53d7\u8bbf\u8005\uff08\u603b\u6570\u76848\uff05\uff09\u7528\u4f5c\u8865\u5145\u8bc1\u636e\u3002\n \u867d\u7136\u4ec5\u5728Akgle\u8c03\u67e5\u7684\u603b\u53d7\u8bbf\u8005\u4e2d\u7684\u4e09\u5206\u4e4b\u4e00\uff0c\u4f46PSF\u8c03\u67e5\u8868\u660e\u4ed6\u4eec\u6b63\u5728\u4f7f\u7528VS\u4ee3\u7801\uff0c\u4f46\u901a\u8fc7\u5b9a\u6027\u8bbf\u8c08\uff0c\u4ee5\u53ca\u793e\u4ea4\u5a92\u4f53\u522e\u548cGitHub\u95ee\u9898\u5206\u6790 - \u4e0d\u662f\u4e3a\u4e86\u63a2\u7d22\u6027\u6570\u636e\u5206\u6790\u6216\u4ea4\u4e92\u5f0f\u6a21\u578b\u5efa\u8bbe\uff0c\u800c\u662f\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u6a21\u578b\u90e8\u7f72;\u5bf9\u4e8e\u5176\u4ed6\u7c7b\u578b\u7684\u8f6f\u4ef6\u5f00\u53d1\u6216Python\u5e93\u5efa\u8bbe;\u6216\u8005\u8f7b\u91cf\u7ea7\u7f16\u8f91Python\u548cMarkdown\u6587\u4ef6\u3002\n  \u6570\u636e\u53ef\u901a\u8fc7GitHub\u548c\uff0339; S\u5e73\u9762\u6570\u636e\u67e5\u770b\uff0c\u5e76\u4ece\u5361\u683c\u7f51\u7ad9\u4e0b\u8f7d\u3002\n  \u6e05\u9664\u4e86Kaggle\u6d4b\u91cf\u6570\u636e\uff0c\u7136\u540e\u6839\u636e\u8c03\u67e5\u54cd\u5e94\u4e3a\u6bcf\u4e2a\u5f00\u53d1\u4eba\u5458\u5de5\u5177\u8fdb\u884c\u5355\u70ed\u7f16\u7801\u3002\u4ece\u6570\u636e\u96c6\u4e2d\u5220\u9664\u4e86\u5c0f\u4e8e10\uff05\u7684\u53d7\u8bbf\u8005\u4f7f\u7528\u7684\u5de5\u5177\u3002\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528UMAP\u805a\u7c7b\u4e0e32\u7684\u6700\u8fd1\u90bb\u5c45\u5b9a\u4e49\u7528\u6237\u7684\u96c6\u7fa4;\u53d1\u73b0\u4e86\u516d\u4e2a\u4e0d\u540c\u7684\u96c6\u7fa4\u5e76\u7ffb\u8bd1\u6210\u7fa4\u7ec4\uff0c\u4e0e\u81ea\u6211\u5206\u914d\u7684\u89d2\u8272\u6807\u9898\u6ca1\u6709\u660e\u663e\u7684\u76f8\u5173\u6027\u3002\n  \u7fa4\u4f53\u9a8c\u8bc1\u4e86\u87d2\u86c7\u6570\u636e\u79d1\u5b66\u8c03\u67e5\u4e2d\u7684\u5b9a\u6027\u6570\u636e\uff0c\u4ee5\u53ca\u535a\u5ba2\u548c\u793e\u4ea4\u5a92\u4f53\u5e16\u5b50; stackoverflow\u95ee\u9898;\u548cGitHub\u95ee\u9898\uff08\u4f8b\u5982\uff1aML OPS\u5de5\u7a0b\u5e08\u5f80\u5f80\u6709\u80cc\u666f\uff0c\u5728\uff06\uff0334\u4e0a\u66f4\u5e38\u89c1\u7684\u80cc\u666f;\u8f6f\u4ef6\u5de5\u7a0b\uff06\uff0334;\u9891\u8c31\u7684\u4e00\u4fa7\uff09\u3002 \n\u6c47\u603b\u8c03\u67e5\u54cd\u5e94\u7684\u4e3b\u8981\u53d1\u73b0\u53ef\u4ee5\u5728\u4e0b\u9762\u627e\u5230\u3002\u6bcf\u4e2a\u5b50\u5f39\u70b9\u76f8\u90bb\u7684\u6570\u5b57\u8868\u793a\u4e0a\u9762\u7684\u8c03\u67e5\uff081\u52305\uff09\u652f\u6301\u6bcf\u4e2a\u8bc4\u4f30\u3002\n  \u8bb8\u591a\u8c03\u67e5\u53d7\u8bbf\u8005\u6ca1\u6709\u8ba1\u7b97\u673a\u79d1\u5b66\u80cc\u666f\uff0c\u4f46\u5df2\u7ecf\u5728\u5176\u4ed6\u57df\u540d\uff08\u7269\u7406\uff0c\u81ea\u7136\u6216\u751f\u7269\u79d1\u5b66;\u7edf\u8ba1;\u7b49\uff09 - \u7ecf\u5e38\u83b7\u5f97\u6bd5\u4e1a\u751f\u6216\u4e13\u4e1a\u5b66\u4f4d\u3002 [1,2,3,4]\n \u5927\u591a\u6570\u8c03\u67e5\u53d7\u8bbf\u8005\u4e00\u76f4\u5728\u7f16\u7a0b\u5c11\u4e8e\u5341\u5e74\uff0c\u5e76\u4e14\u5177\u6709\u4e0d\u5230\u4e09\u5e74\u7684\u673a\u5668\u5b66\u4e60\u6216\u8f6f\u4ef6\u5de5\u7a0b\u7684\u7ecf\u9a8c\u3002 [1,4]\n \u5927\u591a\u6570\u8c03\u67e5\u53d7\u8bbf\u8005\u5728\u5c0f\u578b\u7403\u961f\uff080-5\u540d\u5de5\u7a0b\u5e08\uff09\u4e2d\u5de5\u4f5c\uff0c\u6216\u8005\u5728\u7ec3\u4e60\u7684\u5927\u578b\u793e\u533a\uff0820\u5c81\u4ee5\u4e0a\u7684\u5de5\u7a0b\u5e08\uff09\u4e2d\u3002\u8fd9\u4e9b\u6570\u636e\u79d1\u5b66\u5bb6\u4e0d\u592a\u53ef\u80fd\u4f7f\u7528\u7248\u672c\u63a7\u5236\u7cfb\u7edf;\u4f46\u7ecf\u5e38\u7528Github\u8868\u793a\u4e3a\u4e00\u4e2a\u5730\u65b9\u627e\u5230\u4ed6\u4eec\u7684\u5b9e\u9a8c\u7684\u5730\u65b9\uff0c\u4ee5\u53ca\u5c55\u793a\u4ed6\u4eec\u7684\u5de5\u4f5c\u7684\u65b9\u5f0f\u3002 [1,4,5]\n \u5927\u591a\u6570\u8c03\u67e5\u53d7\u8bbf\u8005\u4f3c\u4e4e\u572820\u591a\u5c81\u621630\u5c81\u540e\u671f\uff0c\u60a3\u8005\u521d\u671f\u4e3a22\uff05\u81f334\u5c81\u3002\u53ea\u670920\uff05\u7684\u4eba\u9ad8\u4e8e40\u5c81;\u5e76\u4e14\u5b58\u5728\u504f\u597d\u7684\u6570\u5b57\u751a\u81f3\u66f4\u5e74\u8f7b\uff0c\u56e0\u4e3a\u751f\u6210Z\u4e0e\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u5de5\u4f5c\u53d8\u5f97\u66f4\u52a0\u6d89\u53ca\u3002\u8fd17\uff05\u7684\u5361\u683c\u6d4b\u91cf\u6570\u636e\u79d1\u5b66\u5bb618-21\u5c81\uff0c\u4ece2019\u5e74\u589e\u52a0\u4e865\uff05\u3002[1,2,4,5]\n  Jupyter Products\uff08Jupyterlab\u548c\u539f\u59cbJupyter\u7b14\u8bb0\u672c\uff09\u662fIDE\u4f7f\u7528\uff0874.1\uff05\uff09\u7684\u538b\u5012\u4e3b\u5fb7\uff0c\u5176\u4e2d\u7801\uff0cPycharm\u548cRstudio\u9888\u90e8\u9888\u90e8\u7b2c\u4e8c\u540d\uff08\u5168\u90e8\u7ea6\u4e3a32\uff05\uff09\u3002\u8c03\u67e5\u53d7\u8bbf\u8005\u5e38\u5e38\u4f7f\u7528\u591a\u4e2a\u5f00\u53d1\u73af\u5883\u3002 [1,2,3,4,5]\n \u8c03\u67e5\u53d7\u8bbf\u8005\u66f4\u559c\u6b22\u5177\u6709\u81ea\u52a8\u8fde\u63a5\u5230\u6570\u636e\u6e90\u7684\u5feb\u901f\u523b\u75d5\u5757\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u624b\u52a8\u8eab\u4efd\u9a8c\u8bc1\u3002\u867d\u7136\u81ea\u7531\u5c42\u6258\u7ba1\u7b14\u8bb0\u672c\uff08\u4f8b\u5982\uff1aColab\uff0cBinder\uff09\u7531\u53d7\u8bbf\u8005\u7684\u5b50\u96c6\u4f7f\u7528\uff0c\u4f46\u5916\u90e8\u6258\u7ba1\u548c\u5171\u4eab\u4ee3\u7801\u4e0d\u662fP0\u3002 [1,4] \n\u5927\u591a\u6570\u8c03\u67e5\u53d7\u8bbf\u8005\u90fd\u4f7f\u7528\u5f88\u5c0f\u7684\u4e2d\u578b\u6570\u636e\u96c6\uff0c\u53ef\u4ee5\u9002\u5408\u5185\u5b58\u3002 [1,4]\n \u8fd9\u4e9b\u6570\u636e\u96c6\u901a\u5e38\u7531\u672c\u5730\u5e73\u9762\u6587\u4ef6\uff08CSV\uff0cJSON\u7b49\uff09\u7ec4\u6210\uff0c\u6216\u4ece\u5173\u7cfb\u6570\u636e\u5e93\u5bfc\u51fa\u7684\u8868\u3002\u5982\u679c\u6709\u7684\u8bdd\uff0c\u6570\u636e\u6e56\u6cca\u548c\u975eSQL\u6570\u636e\u5e93\u5f88\u5c11\u4f7f\u7528\u3002 [1,4]\n \u9996\u9009\u6570\u636e\u5e93\u4e3b\u8981\u662f\u5f00\u6e90\uff08PostgreSQL\uff0cMySQL\uff0cSQLite\u7b49\uff09\uff0c\u4f46\u662f\u4e3aMicrosoft SQL Server\u4e3aMicrosoft SQL Server\u8fdb\u884c\u4e86\u5927\u91cf\u7528\u6237\u3002 [1]\n \u63a2\u7d22\u6027\u6570\u636e\u5206\u6790\u662f\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u5de5\u4f5c\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206;\u5e76\u4e14\u901a\u5e38\u4f7f\u7528\u5f00\u6e90\u5e93\u8fdb\u884c\u3002\u8bf7\u6ce8\u610f\uff1aEDA\u4e0eETL\u7ba1\u9053\u5efa\u7b51\u7269\u4e0d\u540c\uff0c\u5e76\u4e14\u662fETL\u7ba1\u9053\u5efa\u7b51\u7684\u524d\u8eab\u3002[1,4]\n \u4f7f\u7528\u5927\u578b\u673a\u5668\uff08\u706b\u82b1\uff0cDASK\uff09\u6b63\u5728\u5b8c\u6210\u51e0\u4e4e\u6ca1\u6709\u63a2\u7d22\u6570\u636e\u5206\u6790\u3002\u5982\u679c\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\uff0c\u5b83\u6700\u5e38\u89c1\u4e8e\u5982\u4e0b\u8868\u4e2d\u63cf\u8ff0\u7684\u7fa4\u7ec4\uff0c\u5982ML OPS\u4e13\u4e1a\u4eba\u5458\uff0c\u6570\u636e\u5de5\u7a0b\u5e08\u6216\u6df1\u5ea6\u5b66\u4e60\u5de5\u7a0b\u5e08\u3002 [1,4]\n  \u5927\u591a\u6570\u8c03\u67e5\u53d7\u8bbf\u8005\u6b63\u5728\u8fdb\u884c\u63a2\u7d22\u6027\u6570\u636e\u5206\u6790\uff0c\u6216\u4f7f\u7528Scikit-learn\u5b66\u4e60\u4f20\u7edf\u7684\u673a\u5668\u5b66\u4e60\u3002\u8fd9\u4e9b\u6a21\u578b\u662f\u6700\u5e38\u7528\u7684\u903b\u8f91\u548c\u7ebf\u6027\u56de\u5f52;\u968f\u673a\u68ee\u6797\u548c\u51b3\u7b56\u6811;\u8d1d\u53f6\u65af\u65b9\u6cd5;\u548c\u6e10\u53d8\u589e\u5f3a\u6811\u6728\u3002 [1,3,4]\n \u6570\u636e\u79d1\u5b66\u5bb6\u4f7f\u7528\u591a\u79cd\u8bed\u8a00\u662f\u5e38\u89c1\u7684 - \u901a\u5e38\u7684\u5acc\u7591\u4eba\u662fR\uff0cPython\u548cSQL\u3002 [1,2,3,4,5] \n\u5927\u591a\u6570\u8c03\u67e5\u53d7\u8bbf\u8005\u4e0d\u4f7f\u7528\u81ea\u52a8\u5316\u673a\u5668\u5b66\u4e60\uff08Automl\uff09\u6280\u672f\uff0c\u6216\u5b9e\u9a8c\u7ba1\u7406\u548c\u6a21\u578b\u7f16\u97f3\u5de5\u5177\uff08\u4f8b\u5982\uff1a\u6743\u91cd\u548c\u504f\u89c1;\u504f\u89c1\uff0cmlflow\uff09\u3002 [1,4]\n  \u5927\u591a\u6570\u8c03\u67e5\u53d7\u8bbf\u8005\u5c1a\u672a\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\u673a\u5668\u5b66\u4e60\uff0c\u5c3d\u7ba1\u8be5\u6570\u5b57\u7a33\u6b65\u589e\u52a0\u5e74\u5185\uff082019\u5e74\u768428.9\uff05\uff0c\u800c2020\u5e74\u768430.8\uff05\uff09\u3002 [1,4,5]\n \u5927\u591a\u6570\u8c03\u67e5\u53d7\u8bbf\u8005\u5c1a\u672a\u4f7f\u7528\u81ea\u4e3b\u6258\u7ba1\u7684\u4e91\u6280\u672f\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u7ecf\u5e38\u5229\u7528\u7b2c\u4e09\u65b9\u6258\u7ba1\u7b14\u8bb0\u672c\uff08\u4f8b\u5982\uff1aColab\uff0cBinder\uff09\u3002 [1]\n \u5728\u4e91\u8d44\u6e90\u4e2d\u5206\u5272\u51fa\u73b0\u5728\u4e91\u8d44\u6e90\u4e0a\u82b1\u8d39\u8d85\u8fc7100k\uff08n = 729\uff09\u7684kaggle\u8c03\u67e5\u53d7\u8bbf\u8005\uff0c\u6211\u4eec\u53d1\u73b0\uff1a\n \u4f7f\u7528Power BI\u548cTableau\uff08\u5206\u522b\u5206\u522b\u4e3a22\uff05\u548c30\uff05\uff09\u5b58\u5728\u5927\u91cf\u53d7\u8bbf\u8005\u3002\n Azure\u8df3\u5230\u7b2c\u4e8c\u540d\uff0831\uff05\uff09\uff0c\u7528\u4e8e\u8c03\u67e5\u53d7\u8bbf\u8005\uff0c\u4ed6\u4eec\u8868\u660e\u4ed6\u4eec\u5728\u4e91\u8d44\u6e90\u4e0a\u82b1\u8d39\u8d85\u8fc7100\u4e07\u7f8e\u5143\u3002\u5bf9\u4e8e\u6c47\u603b\u7684\u8c03\u67e5\u53d7\u8bbf\u8005\uff0c\u7b2c\u4e8c\u4e2a\u6700\u6d41\u884c\u7684\u4e91\u662fGCP\u3002\u4e24\u4e2a\u90e8\u5206\u7684\u6700\u6d41\u884c\u7684\u4e91\u662fAWS\u3002\n \u5927\u578b\u4e91\u5ba2\u6237\u751a\u81f3\u5bf9\u6df1\u5ea6\u5b66\u4e60\u7684\u91cd\u70b9\u5c11;\u5982\u679c\u4ed6\u4eec\u5b8c\u5168\u4f7f\u7528\u673a\u5668\u5b66\u4e60\uff0c\u4ed6\u4eec\u6b63\u5728\u4f7f\u7528\u4f20\u7edf\u6a21\u578b\u3002 \n\u53ea\u6709\u4e00\u534a\u7684\u5927\u578b\u4e91\u8ba1\u7b97\u7528\u6237\uff0849\uff05\uff09\u6b63\u5728\u4f7f\u7528GPU  - \u5e76\u4e14\u5373\u4f7f\u5bf9\u4e8e\u8fd9\u4e9b\u7528\u6237\u800c\u8a00\uff0c\u90a3\u4e9bGPU\u4e5f\u662f\u672c\u5730\u7684\u3002\n \u8c03\u67e5\u53d7\u8bbf\u8005\u6307\u51fa\u82b1\u8d39100k\u6216\u66f4\u591a\u7684\u4e91\u8d44\u6e90\u66f4\u6709\u53ef\u80fd\u6210\u4e3a\u804c\u4e1a\u5458\u5de5\uff085\u5e74\u4ee5\u4e0a\u7684\u7ecf\u9a8c\uff09\u3002\n \u5176\u4ed6\u6570\u636e\u70b9\u4ecd\u7136\u4fdd\u6301\uff1avs\u4ee3\u7801\u4f4d\u4e8e\u9065\u8fdc\u7684\u7b2c\u4e8c\u4e2a\u5730\u65b9\u5230jupyter *\u4f5c\u4e3aIDE;\u5e73\u9762\u6587\u4ef6\u548c\u5173\u7cfb\u6570\u636e\u5e93\u4ecd\u7136\u662f\u6700\u5e38\u89c1\u7684\u6570\u636e\u6e90;\u5927\u591a\u6570\u7403\u961f\u6ca1\u6709\u673a\u5668\u5b66\u4e60\u6a21\u578b\u5728\u751f\u4ea7\u4e2d\u8fd0\u884c\uff0c\u4ecd\u5728\u63a2\u7d22;\u7b49\u7b49\u3002\n  \u4e0a\u8ff0\u8c03\u67e5\u6570\u636e\u5df2\u7528\u4e8e\u521b\u5efa\u5ba2\u6237\u961f\u5217\u8868\uff08\u4e0b\u9762\u7684\u84b8\u998f\u89c6\u56fe\uff09\u3002\n \u8bf7\u6ce8\u610f\uff1a\u6b64\u8868\u5e76\u4e0d\u610f\u5473\u7740\u5bf9\u8fd9\u4e9b\u7fa4\u7ec4\u7ec4\u7684\u5168\u9762\u8bc4\u4f30\u548c\u4ed6\u4eec\u4f7f\u7528\u7684\u5de5\u5177;\u53ea\u662f\u7b80\u8981\u6982\u8ff0\u3002\u5bf9\u4e8e\u6bcf\u7ec4\u6f5c\u6c34\u6df1\u5ea6\u6f5c\u6c34\u7684\u5176\u4ed6\u535a\u5ba2\u5e16\u5b50\u3002\n \u65b0\u7684\u7f16\u7a0b\uff0c\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u3002\u89c4\u8303\u699c\u6837\u5c06\u662f\u9ad8\u4e2d\u548c\u5927\u5b66\u751f\u3002\u5b66\u4e60\u7684\u4e3b\u8981\u673a\u5236\u662f\u89c6\u9891\u5185\u5bb9\uff08Coursera\uff0cYouTube\uff0cEDX\u7b49\uff09\u3002\n \u65b0\u7684\u6570\u636e\u79d1\u5b66\u548cml\uff0c\u521a\u5f00\u59cb\u5b66\u4e60\u3002\u6700\u5e38\u6765\u81ea\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u80cc\u666f\u3002 \n\u4f7f\u7528\u6570\u636e\u6765\u5e2e\u52a9\u4e86\u89e3\u4e1a\u52a1\u95ee\u9898\u6216\u7814\u7a76\u95ee\u9898\u3002 \u6700\u5c0f\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u7edf\u8ba1\u80cc\u666f\u3002  \u521a\u521a\u5f00\u59cb\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u6765\u89e3\u51b3\u4e1a\u52a1\u95ee\u9898\uff0c\u5e76\u8865\u5145\u63a2\u7d22\u6570\u636e\u5206\u6790\u6280\u672f\u3002  \u521a\u5f00\u59cb\u4f7f\u7528\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u6765\u89e3\u51b3\u7814\u7a76\u95ee\u9898\uff0c\u5e76\u8865\u5145\u63a2\u7d22\u6570\u636e\u5206\u6790\u6280\u672f\u3002  \u7c7b\u4f3c\u4e8e\u4f20\u7edf\u7684\u673a\u5668\u5b66\u4e60\u6bb5; \u6700\u8212\u9002\u7684\u4e2d\u578b\u6570\u636e\u96c6\u548c\u672c\u5730\u673a\u5668\u3002  Neurips\uff0cICML\u548cICLR\u961f\u4f0d; \u8fd9\u4e9b\u662f\u60a8\u5e0c\u671b\u5728Openai\uff0cGoogle Beal\u7b49\u4e2d\u770b\u5230\u8058\u7528\u7684\u7814\u7a76\u4eba\u5458\u3002  Tensorflow\uff0cJAX\u548cPytorch\u7684\u4f4e\u7ea7API\u7684\u4f5c\u8005; \u5206\u5e03\u5f0f\u8bad\u7ec3\u6846\u67b6\uff0c\u5982\u96f7; \u548c\u7c7b\u4f3c\u7684\u3002  \u751f\u4ea7ML\u7cfb\u7edf\u7684\u5de5\u7a0b\u5e08; \u8d1f\u8d23\u8fd0\u884c\uff0c\u7ef4\u62a4\u548c\u8c03\u8bd5ML\u7ba1\u9053\uff08\u901a\u8fc7\u90e8\u7f72\u4eceETL\uff09\u3002 \u901a\u5e38\u6ca1\u6709\u673a\u5668\u5b66\u4e60\u4e2d\u7684\u80cc\u666f\u3002 ", "note_en": "Permalink         \u201cData Scientist\u201d,  \u201cMachine Learning Developer\u201d,  \u201cDeep Learning Engineer\u201d,  \u201cData Engineer\u201d,  \u201cML Ops Engineer\u201d, and  \u201cData Analyst\u201d are often overloaded role titles -- and  not necessarily indicative of a user\u2019s day-to-day work, or the tools they are using to accomplish that work.\n To better understand and characterize these diverse user segments,  we can use tools, libraries, and frameworks referenced in the  Kaggle: State of Machine Learning and Data Science 2020 Survey to cluster engineers into cohort groups. We can also loosely tie these cohorts to their anticipated cloud spend; identify typical tasks each user cohort is responsible for completing; assess compute and storage requirements for each user cohort; and estimate cohort size, based on survey responses.\n  Survey respondents are overwhelmingly performing  exploratory analysis using small- to medium-sized data sets stored as flat files, on local machines. Machine learning projects \u2013 if ML is being attempted at all \u2013 are in  early stages, using traditional methods that are best-suited for  high-RAM CPU rather than GPU SKUs (ex: scikit-learn and clustering approaches).\n Based on responses,  data science teams trend small (0-5 engineers), with light rigor on SDLC best practices (ex: version control); and  most data scientists come from non-CS backgrounds, with minimal programming experience. Preferred tools are overwhelmingly  open-source and non-proprietary. If Visual Studio Code is being used by survey respondents, it is most often being used for  non-interactive, production machine learning and data science work.\n   Annual survey of 6-7M registered Kaggle users. Kaggle is the world\u2019s largest online community for machine learning and data science.\n Annual survey of StackOverflow users. Not domain-specific; ~8% of respondents indicated doing data-affiliate work (data science, ML, research).\n Annual survey of Python developers, completed in partnership between the PSF and JetBrains. Not data science and ML-specific, though ~50% of respondents indicate they use Python for EDA.\n Focused survey for data analysts and ML engineers administered by Anaconda. Data not released publicly; but an executive summary is available.\n Not a domain-specific survey, and not segmented out by tools used. More than half of ML and data science respondents (5K) are hobbyists and students, and just learning how to do ML; not professionals.\n Given the focused nature of the two survey instruments,  the Anaconda survey and the Kaggle surveys were both selected as the most useful for the purpose of this analysis. The data science and machine learning respondents from the Python Developers Survey (55% of total); the professional data science and machine learning respondents for the SlashData Survey (25% of total); and the data science respondents from the StackOverflow Developer Survey (8% of total) are used as supplemental evidence.\n Though just under a third of total respondents for the Kaggle Survey and the PSF Survey indicated that they were using VS Code, this was found -- through qualitative interviews, as well as from social media scraping and Github issues analysis -- not to be for exploratory data analysis or interactive model building, but rather for  machine learning model deployment; for  other types of software development or Python library building; or for  lightweight editing of Python and markdown files.\n  The data is available to  view via Github&#39;s Flat Data, and to download from the Kaggle website.\n  The Kaggle survey data was cleaned, and then one-hot encoded for each developer tool based on survey responses. Tools used by less than 10% of respondents were removed from the dataset. We then used UMAP clustering with nearest neighbors of 32 to define clusters of users; six distinct clusters were found and translated into cohorts, with no apparent correlation to self-assigned role title.\n  Clusters were validated with the qualitative data in the Anaconda Data Science Survey, as well as with blog and social media posts; StackOverflow issues; and Github issues (for example: ML Ops engineers tend to have backgrounds that fall more commonly on the &#34;software engineering&#34; side of the spectrum).\n  Primary findings from the aggregated survey responses can be found below. The numbers adjacent to each bullet point indicate which survey above (1 through 5) supports each assessment.\n  Many of the survey respondents  do not have a computer science background, but have been trained in some other domain (physical, natural or biological sciences; statistics; etc.) -- often obtaining a graduate or professional degree. [1,2,3,4]\n Most survey respondents have been  programming for less than a decade, and have less than three years of experience with machine learning or software engineering. [1,4]\n The majority of survey respondents  work in small teams (0-5 engineers), or in large communities of practice (20+ engineers). These data scientists are not likely to be using version control systems; but do often  indicate using GitHub as both a place to find code for their experiments, and a way to showcase their work. [1,4,5]\n Most survey respondents appear to be in their  late 20s or early 30s, with 60% between 22 and 34. Only 20% are above the age of 40; and there are signs of the numbers skewing even younger, as Generation Z becomes more involved with data science and machine learning work.  Nearly 7% of Kaggle survey data scientists are aged 18-21, an increase from 5% in 2019. [1,2,4,5]\n  Jupyter products (JupyterLab and original Jupyter notebooks)  are the overwhelming winner in terms of IDE use (74.1%), with VS Code, PyCharm, and RStudio neck-in-neck for second place (all around 32%).  It is common for survey respondents to use more than one development environment. [1,2,3,4,5]\n Survey respondents prefer having a  quick scratchpad that is automatically connected to data sources and does not require manual authentication. Though free-tier hosted notebooks (ex: Colab, Binder) are used by a subset of respondents, hosting and sharing code externally is not a P0. [1,4]\n  Most survey respondents are using  small to medium-sized data sets that can fit in memory. [1,4]\n These data sets are usually comprised of  local flat files (CSVs, JSON, etc.), or tables exported from relational databases. Data lakes and non-SQL databases are rarely used, if ever. [1,4]\n Preferred databases are primarily open-source ( PostgreSQL, MySQL, SQLite, etc.), though a significant number of users are opting for Microsoft SQL Server. [1]\n Exploratory data analysis is a significant component of both data science and machine learning work; and is usually done using open-source libraries.  Please note: EDA is distinct from and a precursor to ETL pipeline-building.[1,4]\n Little to no exploratory data analysis is being done using large clusters of machines (Spark, Dask). If these tools are used, it is most commonly by the cohorts that are described in the table below as ML Ops professionals, data engineers, or deep learning engineers. [1,4]\n  Most survey respondents are doing either  exploratory data analysis, or traditional machine learning with scikit-learn. These models are most commonly logistic and linear regression; random forests and decision trees; Bayesian methods; and gradient boosted trees. [1,3,4]\n It is common for data scientists to use more than one language \u2013 and the usual suspects are  R, Python, and SQL. [1,2,3,4,5]\n Most survey respondents  are not using automated machine learning (AutoML) techniques, or experiment management and model orchestration tools (ex: Weights &amp; Biases, MLFlow). [1,4]\n  Most survey respondents are  not yet using machine learning in production, though that number is steadily increasing year over year (28.9% in 2019 compared to 30.8% in 2020). [1,4,5]\n Most survey respondents are  not yet using self-hosted cloud technologies, though they often leverage third-party hosted notebooks (ex: Colab, Binder). [1]\n Segmenting out Kaggle survey respondents who indicated spending more than $100K (n = 729) on cloud resources, we find that:\n There are a substantial number of respondents using Power BI and Tableau (22% and 30%, respectively).\n Azure jumps to second place (31%) for survey respondents who indicate that they spend more than $100K on cloud resources. For survey respondents in aggregate, the second most popular cloud is GCP. The most popular cloud for both segments is AWS.\n Large-scale cloud customers have even less of a focus on deep learning; if they are using machine learning at all, they are using traditional models.\n Only half of large-scale cloud compute users (49%) are using GPUs - and, even for those users, those GPUs are local.\n Survey respondents who indicated spending $100K or more on cloud resources were more likely to be tenured employees (5+ years of experience).\n The other data points still hold: VS Code is in a distant second place to Jupyter* as an IDE; flat files and relational databases still most common data sources; most teams don\u2019t have machine learning models running in production and are still exploring; etc.\n  The survey data described above has been used to create a customer cohort table (distilled view below).\n Please note: this table is not meant to be a comprehensive assessment of each of these cohort groups and the tools they used; just a brief overview. Additional blog posts with a deep dive for each group to follow.\n New to programming, data science, and machine learning. Canonical example would be high school and college students. Primary mechanism to learn is video content (Coursera, YouTube, EdX, etc.).\n New to data science and ML, and just beginning to learn. Most commonly come from an app development background.\n Use data to help understand business problems or research questions. Minimal (if any) statistics background.\n   Just beginning to use machine learning methods to solve business problems, and to complement exploratory data analysis techniques.\n Just beginning to use machine learning methods to solve research questions, and to complement exploratory data analysis techniques.\n Similar to the traditional machine learning segment; most comfortable with medium-sized data sets and local machines.\n  The NeurIPS, ICML, and ICLR contingent; these are the researchers you would expect to see hired at OpenAI, Google Brain, etc.\n Authors of low-level APIs for TensorFlow, JAX, and PyTorch; distributed training frameworks, like Ray; and similar.\n The engineers who productionize ML systems; responsible for running, maintaining, and debugging ML pipelines (from ETL through deployment). Usually do not have a background in machine learning.", "posttime": "2021-06-21 01:25:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,learning,\u6570\u636e", "title": "\u673a\u5668\u5b66\u4e60\u961f\u5217\uff1a\u5408\u6210 ", "title_en": "Machine Learning Cohorts: A Synthesis", "transed": 1, "url": "https://github.com/dynamicwebpaige/kaggle-survey-spelunking/blob/main/README.md", "via": "", "real_tags": ["\u5b66\u4e60", "learning", "\u6570\u636e"]}, {"category": "", "categoryclass": "", "imagename": "58d4e471cee85156f3a9f48165858ce6.jpg", "infoid": 1067062, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5177\u6709\uff06\uff0334\u4e3b\u9898\u884c\u7684\u795e\u79d8\u548c\u4ee4\u4eba\u8d39\u89e3\u7684\u7535\u5b50\u90ae\u4ef6;\u96c6\u6210\u6d4b\u8bd5\u7535\u5b50\u90ae\u4ef6\uff031\uff06\uff0334;\u5468\u56db\u843d\u5728\u4e00\u4e9bHBO Max\u7528\u6237\u7684\u6846\u4e2d\u3002\u51e0\u4e2a\u5c0f\u65f6\u540e\uff0c\u8be5\u516c\u53f8\u8868\u793a\uff0c\u8be5\u6d88\u606f\u65e8\u5728\u662f\u4e00\u4e2a\u7a7a\u7684\u6d4b\u8bd5\u7535\u5b50\u90ae\u4ef6\uff0c\uff06\uff0334;\u662f\u7684\uff0c\u5b83\u662f\u5b9e\u4e60\u751f\u3002\uff06\uff0334;\n   \u672a\u77e5\u7684\u5b9e\u4e60\u751f\u5f88\u5feb\u6210\u4e3a\u793e\u4ea4\u5a92\u4f53\u4e0a\u6700\u591a\u7684HBO Max\u7684\u65b0\u660e\u661f\uff0c\u56e0\u4e3a\u6570\u767e\u540d\u4ee4\u4eba\u9f13\u821e\u7684\u4fe1\u606f\u503e\u6ce8\uff0c\u4ee5\u4fbf\u5728\u6240\u6709\u804c\u4e1a\u9636\u6bb5\u5b89\u629a\u9519\u8bef\u7684\u5b9e\u4e60\u751f\u3002\n  \u6709\u95ee\u9898\u7684\u7535\u5b50\u90ae\u4ef6\u7684\u8eab\u4f53\u5305\u542b\u4e00\u4e2a\u53e5\u5b50\uff0c\uff06\uff0334;\u6b64\u6a21\u677f\u4ec5\u7528\u4e8e\u96c6\u6210\u6d4b\u8bd5\u3002\uff06\uff0334;\n  \u53ea\u6709\u51e0\u4e2a\u5c0f\u65f6\u540e\uff0c\u4eba\u4eec\u5f00\u59cb\u53d1\u63a8\u6587\u7684\u95ee\u9898\u548c\u7535\u200b\u200b\u5b50\u90ae\u4ef6\u7684\u56fe\u50cf\uff0cHBO Max\u7684\u652f\u6301\u9875\u9762\u54cd\u5e94\u3002\n \uff06\uff0334;\u6211\u4eec\u8bef\u89e3\u4e86\u4eca\u665a\u7684\u4e00\u90e8\u5206HBO Max\u90ae\u4ef6\u5217\u8868\u7684\u7a7a\u6d4b\u8bd5\u7535\u5b50\u90ae\u4ef6\uff0c\uff06\uff0334; HBO Max\u652f\u6301\u5e10\u6237\u63a8\u6587\u3002 \uff06\uff0334; ...\u662f\u7684\uff0c\u5b83\u662f\u5b9e\u4e60\u751f\u3002\u4e0d\u5b8c\u5168\u662f\u3002\u548c\u6211\u4eec\uff06\uff0339;\u91cd\u65b0\u5e2e\u52a9\u4ed6\u4eec\u3002\uff06\uff0334;\n \u6211\u4eec\u9519\u8bef\u5730\u5411\u4eca\u665a\u7684\u4e00\u90e8\u5206HBO Max\u90ae\u4ef6\u5217\u51fa\u4e86\u4e00\u4e2a\u7a7a\u7684\u6d4b\u8bd5\u7535\u5b50\u90ae\u4ef6\u3002\u5bf9\u4e8e\u7ed9\u60a8\u5e26\u6765\u7684\u4e0d\u4fbf\uff0c\u6211\u4eec\u6df1\u8868\u6b49\u610f\uff0c\u968f\u7740\u7b11\u8bdd\u5806\uff0c\u662f\u7684\uff0c\u5b83\u662f\u5b9e\u4e60\u751f\u3002\u4e0d\u5b8c\u5168\u662f\u3002\u6211\u4eec\u901a\u8fc7\u5b83\u5e2e\u52a9\u4ed6\u4eec\u3002 \u2764\ufe0f\n -  Hbomaxhelp\uff08@hbomaxhelp\uff092021\u5e746\u670818\u65e5 \n\u800c\u4e0d\u662f\u5728\u6124\u6012\u7684\u4fe1\u606f\u4e0a\u54cd\u5e94\u6709\u5173\u4e0d\u4fbf\u7684\u8ba2\u6237\uff0c\u4ed6\u4eec\u4f7f\u7528\u673a\u4f1a\u544a\u8bc9\u81ea\u5df1\u7684\u5de5\u4f5c\u6545\u4e8b\u53f2\u7eb3\u83f2\u3002\u751a\u81f3\u83ab\u59ae\u5361\u52d2\u514b\u65af\u57fa\u66fe\u4e0e\u524d\u603b\u7edf\u6bd4\u5c14\u514b\u6797\u987f\u6709\u5a5a\u5916\uff0c\u5f53\u65f6\u5979\u662f\u767d\u5bab\u5b9e\u4e60\u751f\uff0c\u63d0\u4f9b\u4e86\u9f13\u52b1\u7684\u8bdd\u3002\n  \uff06\uff0334;\u4eb2\u7231\u7684\u5b9e\u4e60\u751f\uff1a\u5b83\u53d8\u5f97\u66f4\u597d\uff0c\uff06\uff0334;\u5979\u5199\u4e86\u3002 \uff06\uff0334; ps\u3002\u4e0d\u8981\u6234\u8d1d\u96f7\u5e3d\u4e00\u6bb5\u65f6\u95f4\uff0cK\uff06\uff0334;\n   \u5b83\u51e0\u4e4e\u53d1\u751f\u4e86\u4e24\u6b21\uff0c\uff06\uff0334;\u4ed6\u4eec\u5199\u3002 \uff06\uff0334; ...... ......\u4f60\u8bbe\u6cd5\u5728\u5b8c\u6210\u96c6\u6210\u6d4b\u8bd5\u7684\u65b9\u5f0f\u4e2d\u627e\u5230\u4e86\u7834\u788e\u7684\u4e1c\u897f\u3002\u5b83\uff06\uff0339;\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u6709\u52a9\u4e8e\u6539\u5584\u4e8b\u60c5\u3002\uff06\uff0334;\n \u4f5c\u5bb6Caissie St. Onge\u63a8\u6587\u7684recap\u9020\u6210\u9519\u8bef\uff0c\u5979\u8d85\u8d8a\u4e86\u5979\u5728\u5404\u56fd\u7684\u65f6\u95f4\u3002\n   \uff06\uff0334;\u6211\u6b63\u5728\u4f7f\u7528\u6211\u7684\u684c\u9762\u65e5\u5386\uff0c\u6bcf\u6708\u8bb0\u4e0b\u6211\u7684\u6708\u7ecf\u671f\u95f4\uff0c\u4f46\u5728\u51e0\u4e2a\u6708\u540e\uff0c\u6211\u610f\u8bc6\u5230\u6211\u5728\u6211\u4e0e\u6240\u6709\u540c\u4e8b\u516c\u53f8\u5171\u4eab\u7684\u65e5\u5386\u4e2d\u5236\u4f5c\u4e86\u90a3\u4e2a\u8bb0\u5f55\uff0c\uff06\uff0334 ;\u5979\u8bf4\u3002 \uff06\uff0334;\u621137\u5c81\u3002\uff06\uff0334;\n \u4eb2\u7231\u7684\u5b9e\u4e60\u751f\uff0c\u6211\u6b63\u5728\u4f7f\u7528\u6211\u7684\u684c\u9762\u65e5\u5386\uff0c\u6bcf\u6708\u8bb0\u4e0b\u6211\u7684\u6708\u7ecf\u671f\u95f4\uff0c\u4f46\u5728\u51e0\u4e2a\u6708\u540e\uff0c\u6211\u610f\u8bc6\u5230\u6211\u5728\u4e0e\u6240\u6709\u540c\u4e8b\u516c\u53f8\u5171\u540c\u7684\u65e5\u5386\u4e0a\u5236\u4f5c\u4e86\u8fd9\u7b14\u7b14\u8bb0\u3002\u621137\u5c81\u3002\n -  Caissie\uff08@Caissie\uff092021\u5e746\u670818\u65e5 \n\uff06\uff0334;\u5f53\u621125\u5c81\u7684\u65f6\u5019\uff0c\u6211\u81f4\u529b\u4e8e\u5c06\u6bcf\u4e2a\u5458\u5de5\u5206\u914d\u7ed9\u6240\u6709\u5458\u5de5\uff0c\u4ed6\u4eec\u63d0\u9192\u6211\u6700\u591a\uff0c\uff06\uff0334; \u53e6\u5199\u4e86\u3002 \uff06\uff0334;\u6211\u7684\u610f\u601d\u662f\u5c06\u5b83\u53d1\u9001\u7ed9\u6211\u7684\u5de5\u4f5c\u670b\u53cb\uff0c\u4f46\u6211\u4e0d\u5c0f\u5fc3\u5c06\u5b83\u53d1\u9001\u7ed9\u6574\u4e2a\u516c\u53f8\u3002 \u6211\u7684\u4e3b\u7ba1\uff08\u70e7\u676f\uff09\u60f3\u5f00\u67aa\uff0c\u4f46\u4e1a\u4e3b\uff08Bert\uff06amp; ernie\uff09\u4ecb\u5165\u3002\uff06\uff0334;  \u5bf9\u5de5\u4f5c\u7684\u9519\u8bef\u662f\u5982\u6b64\u666e\u904d\uff0c\u5373\u4f7f\u5728\u767d\u5bab\u5de5\u4f5c\u7684\u4eba\u4e5f\u4f1a\u8ba9\u4ed6\u4eec\u6210\u4e3a\u3002  \uff06\uff0334;\u6211\u66fe\u7ecf\u6ca1\u6709\u8ba4\u53ef\u90a3\u4e2avp\u4e54\u6cbbHW\u5e03\u4ec0\uff0c\u51e0\u4e4e\u6ca1\u6709\u8ba9\u4ed6\u53c2\u52a0\u4e00\u4e2a\u4f1a\u8bae......\u5728\u5185\u9601\u623f\u95f4\u91cc\u3002 \u767d\u5bab\u3002 \u4ed6\u5de5\u4f5c\u7684\u5730\u65b9\uff0c\uff06\uff0334; \u4e00\u4eba\u5199\u9053\u3002 \uff06\uff0334; ......\u4f60\u548c\uff0339; ll\u6ca1\u95ee\u9898\u3002\uff06\uff0334; ", "note_en": "A mysterious and puzzling email with the subject line of &#34;Integration Test Email #1&#34; landed in the boxes of some HBO Max subscribers on Thursday. Just hours later, the company said that the message was intended to be an empty test email, and &#34;yes, it was the intern.&#34;\n   The unnamed intern quickly became the new star of HBO Max on social media, as hundreds of encouraging messages poured in to reassure the intern that mistakes happen, in all phases of careers.\n  The body of the email in question contains but one sentence, &#34;This template is used by integration tests only.&#34;\n  Just hours after people started tweeting questions about and images of the email, the support page for HBO Max responded.\n &#34;We mistakenly sent out an empty test email to a portion of our HBO Max mailing list this evening,&#34; the HBO Max support account tweeted. &#34;...yes, it was the intern. No, really. And we&#39;re helping them through it.&#34;\n We mistakenly sent out an empty test email to a portion of our HBO Max mailing list this evening. We apologize for the inconvenience, and as the jokes pile in, yes, it was the intern. No, really. And we\u2019re helping them through it. \u2764\ufe0f\n\u2014 HBOMaxHelp (@HBOMaxHelp)  June 18, 2021\n And instead of subscribers responding with angry messages about an inconvenience, they used the opportunity to tell their own stories of work snafus. Even Monica Lewinsky, who had an affair with former President Bill Clinton when she was a White House intern, offered words of encouragement.\n  &#34;Dear intern: it gets better,&#34; she wrote. &#34;ps. don&#39;t wear a beret for awhile, k?&#34;\n   It almost happened twice,&#34; they\u00a0 wrote. &#34;...You managed to find something broken in the way integration tests are done. It&#39;s a good thing and will help improve things.&#34;\n Writer Caissie St. Onge tweeted a recap of a mistake she made well beyond the time she was interning.\n   &#34;I was using my desktop calendar to make a monthly note of when I started my menstrual period, but after several months I realized I was making that note on a calendar I shared with all of my colleagues company wide,&#34; she said. &#34;I was 37 years old.&#34;\n Dear Intern, I was using my desktop calendar to make a monthly note of when I started my menstrual period, but after several months I realized I was making that note on a calendar I shared with all of my colleagues company wide. I was 37 years old.\n\u2014 Caissie (@Caissie)  June 18, 2021\n &#34;When I was 25 I made a PDF assigning each employee to the Muppet they reminded me of the most,&#34; another  wrote. &#34;I meant to send it to my work friend, but I accidentally sent it to the entire company. My supervisor (Beaker) wanted to fire me, but the owners (Bert &amp; Ernie) intervened.&#34;\n Mistakes on the job are so common, that even people who work in the White House make them.\n &#34;I once didn&#39;t recognize then-VP George HW Bush and almost didn&#39;t let him into a meeting...in the Cabinet Room. Of the White House. Where he worked,&#34; one person  wrote. &#34;...you&#39;ll be fine.&#34;", "posttime": "2021-06-21 00:44:27", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u63a8\u7279,max,email", "title": "\u5728HBO Max\u7684\u5b9e\u4e60\u7535\u5b50\u90ae\u4ef6roOF\u6fc0\u53d1\u4e86\u6570\u767e\u4eba\u5728\u63a8\u7279\u4e0a\u663e\u793a\u652f\u6301 ", "title_en": "Intern's Email Goof at HBO Max Inspires Hundreds to Show Support on Twitter", "transed": 1, "url": "https://www.cbsnews.com/news/hbo-max-intern-test-email-mistake-subscribers-respond/", "via": "", "real_tags": ["\u63a8\u7279", "max", "email"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1067060, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5177\u6709200x200\u50cf\u7d20\u5206\u8fa8\u7387\u7684\u7f8e\u4e3d\u7535\u5b50\u7eb8\u5f20\u663e\u793a\u3002 \u660e\u4eae\u7684\u9633\u5149\u4e0b\u7684\u7729\u5149\u53ef\u89c1\u6027\uff0c\u63a5\u8fd1180\u5ea6\u89c6\u89d2\uff0c\u548c\u8d85\u4f4e\u529f\u8017\u3002  ESP32-PICO-D4\u5728\u5176\u6838\u5fc3\uff0c\u5185\u7f6eWiFi / Bluetooth LE\u548c\u4e0eArduino\uff0cMicropopthon\u548cESP-IDF\u7684\u517c\u5bb9\u6027  \u8ba4\u8bc1\u5f00\u6e90\u786c\u4ef6\uff08OSHWA\uff09\u548c\u5f00\u6e90\u8f6f\u4ef6\u3002 \u5927\u91cf\u6709\u8da3\u7684\u4f8b\u5b50\u548c\u7f8e\u56fd\u548c\u793e\u533a\u7684\u9177\u70ab\u5b88\u671b\u573a\u3002 ", "note_en": "Beautiful E-Paper display with 200x200 pixel resolution. Glare free visibility under bright sunlight, near 180 degree view angle, and ultra low power consumption.\n ESP32-PICO-D4 at its core, with built-in WiFi/Bluetooth LE and compatibility with Arduino, MicroPython, and ESP-IDF\n Certified open source hardware (OSHWA) and open source software. Tons of fun examples and cool watchfaces by us and the community.", "posttime": "2021-06-21 00:43:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u89c2\u770b,open", "title": "\u770b\u7ebf\uff1a\u5f00\u6e90\u7535\u5b50\u7eb8\u89c2\u770bESP32 ", "title_en": "Watchy: Open-source E-Paper Watch with ESP32", "transed": 1, "url": "https://watchy.sqfmi.com/", "via": "", "real_tags": ["\u5f00\u6e90", "\u89c2\u770b", "open"]}]
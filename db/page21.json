[{"category": "", "categoryclass": "", "imagename": "3e245ea8c4d6290d51afb696c0fc7106.png", "infoid": 1071701, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4f4d\u540c\u4e8b\u6700\u8fd1\u8be2\u95ee\u4e86\u6211\u63a8\u8350\u7684\u65b9\u6cd5\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f46\u5979\u6ca1\u6709\u770b\u5230\u4efb\u4f55\u6587\u6863\u3002\u6211\u610f\u8bc6\u5230\u8fd9\u662f\u6211\u4ece\u4e0e Google \u7684\u6a21\u578b\u6784\u5efa\u8005\u4ea4\u8c08\u4e2d\u5b66\u5230\u7684\u4e1c\u897f\uff0c\u800c\u4e14\u6211\u4e0d\u786e\u5b9a\u662f\u5426\u6709\u4efb\u4f55\u8bb0\u5f55\uff0c\u6240\u4ee5\u672c\u7740\u4e3a\u540e\u9762\u7684\u4efb\u4f55\u4eba\u7559\u4e0b\u9762\u5305\u5c51\u7684\u7cbe\u795e\uff0c\u6211\u60f3\u6211\u5e94\u8be5\u628a\u5b83\u53d8\u6210\u4e86\u4e00\u4e2a\u5feb\u901f\u7684\u535a\u5ba2\u6587\u7ae0\u3002\u603b\u7ed3\u662f\uff0c\u5982\u679c\u60a8\u5728\u7f51\u7edc\u4e2d\u7684\u5377\u79ef\u5c42\u4e4b\u540e\u6709 MaxPool \u6216 AveragePool\uff0c\u5e76\u4e14\u60a8\u7684\u76ee\u6807\u662f\u50cf\u5fae\u63a7\u5236\u5668\u8fd9\u6837\u7684\u8d44\u6e90\u53d7\u9650\u7cfb\u7edf\uff0c\u60a8\u5e94\u8be5\u5c1d\u8bd5\u5b8c\u5168\u5220\u9664\u5b83\u4eec\uff0c\u5e76\u7528\u5377\u79ef\u4e2d\u7684\u6b65\u5e45\u66ff\u6362\u5b83\u4eec\u3002\u8fd9\u6709\u4e24\u4e2a\u4e3b\u8981\u597d\u5904\uff0c\u4f46\u4e3a\u4e86\u89e3\u91ca\uff0c\u6700\u5bb9\u6613\u7ed8\u5236\u524d\u540e\u7f51\u7edc\u56fe\u3002\u5728\u5de6\u4fa7\u663e\u793a\u7684\u5178\u578b\u8bbe\u7f6e\u4e2d\uff0c\u5377\u79ef\u5c42\u540e\u8ddf\u6c60\u5316\u64cd\u4f5c\u3002\u8fd9\u81f3\u5c11\u4ece AlexNet \u5f00\u59cb\u5c31\u5f88\u5e38\u89c1\uff0c\u5e76\u4e14\u4ecd\u7136\u5b58\u5728\u4e8e\u8bb8\u591a\u73b0\u4ee3\u7f51\u7edc\u4e2d\u3002\u6211\u7ecf\u5e38\u53d1\u73b0\u6709\u7528\u7684\u8bbe\u7f6e\u663e\u793a\u5728\u53f3\u4fa7\u3002\u6211\u5728\u6b64\u56fe\u8868\u4e2d\u4f7f\u7528\u4e86 224 \u5bbd x 224 \u9ad8\u7684\u793a\u4f8b\u8f93\u5165\u5927\u5c0f\uff0c\u4f46\u8be5\u8ba8\u8bba\u9002\u7528\u4e8e\u4efb\u4f55\u7ef4\u5ea6\u3002\u9996\u5148\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u6807\u51c6\u914d\u7f6e\u4e2d\uff0c\u5728\u5377\u79ef\u5c42\u4e4b\u540e\u6709\u4e00\u4e2a 224x224x8 \u7684\u6fc0\u6d3b\u7f13\u51b2\u533a\u5199\u5165\u5185\u5b58\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u662f\u56fe\u4e2d\u8fd9\u4e00\u90e8\u5206\u6240\u9700\u7684\u6700\u5927\u5185\u5b58\u5757\uff0c\u5373\u4f7f\u4f7f\u7528 8 \u4f4d\u503c\uff0c\u4e5f\u5360\u7528\u8d85\u8fc7 400 KB\u3002\u6211\u6240\u77e5\u9053\u7684\u6240\u6709 ML \u6846\u67b6\u90fd\u9700\u8981\u5728\u8c03\u7528\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u4e4b\u524d\u5b9e\u4f8b\u5316\u5e76\u586b\u5145\u6b64\u7f13\u51b2\u533a\u3002\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u53ef\u80fd\u53ef\u4ee5\u6309\u7167\u56fe\u50cf\u5904\u7406\u6846\u67b6\u5e38\u89c1\u7684\u65b9\u5f0f\u8fdb\u884c\u5e73\u94fa\u6267\u884c\uff0c\u4f46\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u589e\u52a0\u7684\u590d\u6742\u6027\u5e76\u672a\u4f7f\u5176\u6210\u4e3a\u4f18\u5148\u4e8b\u9879\u3002\u5982\u679c\u60a8\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c400KB \u662f\u5f88\u591a RAM\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u5b83\u4ec5\u7528\u4e8e\u4e34\u65f6\u503c\u3002\u8fd9\u4f7f\u5b83\u6210\u4e3a\u5927\u5c0f\u4f18\u5316\u7684\u8bf1\u4eba\u76ee\u6807\u3002\u6211\u7684\u7b2c\u4e8c\u4e2a\u89c2\u5bdf\u662f\u6211\u4eec\u53ea\u4f7f\u7528\u4e86\u8fd9\u4e9b\u503c\u7684 25%\uff0c\u5047\u8bbe MaxPool \u6b63\u5728\u6267\u884c\u5178\u578b\u7684 2x \u7f29\u51cf\uff0c\u5728 2\u00d72 \u7a97\u53e3\u4e2d\u53d6 4 \u4e2d\u7684\u6700\u5927\u503c\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u8fd9\u4e9b\u503c\u901a\u5e38\u975e\u5e38\u76f8\u4f3c\uff0c\u56e0\u6b64\u867d\u7136\u8fdb\u884c\u6c60\u5316\u786e\u5b9e\u6709\u52a9\u4e8e\u6574\u4f53\u51c6\u786e\u6027\uff0c\u4f46\u968f\u673a\u53d6\u8fd9\u56db\u4e2a\u503c\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4e5f\u4e0d\u4f1a\u5dee\u591a\u5c11\u3002\u672c\u8d28\u4e0a\uff0c\u8fd9\u5c31\u662f\u53bb\u9664\u6c60\u5316\u548c\u589e\u52a0\u5377\u79ef\u6b65\u957f\u6240\u505a\u7684\u3002\u5f53\u5377\u79ef\u6ee4\u6ce2\u5668\u5728\u8f93\u5165\u4e0a\u6ed1\u52a8\u65f6\uff0cStride \u662f\u4e00\u4e2a\u63a7\u5236\u6b65\u957f\u7684\u53c2\u6570\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bb8\u591a\u7f51\u7edc\u7684\u7a97\u53e3\u5f7c\u6b64\u6c34\u5e73\u504f\u79fb\u4e00\u4e2a\u50cf\u7d20\uff0c\u5782\u76f4\u504f\u79fb\u4e00\u4e2a\u50cf\u7d20\u3002\u8fd9\u610f\u5473\u7740\uff08\u5ffd\u7565\u586b\u5145\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u8ba8\u8bba\uff09\u8f93\u51fa\u4e0e\u8f93\u5165\u7684\u5927\u5c0f\u76f8\u540c\uff0c\u4f46\u901a\u5e38\u6709\u66f4\u591a\u7684\u901a\u9053\uff08\u4e0a\u56fe\u4e2d\u7684\u516b\u4e2a\uff09\u3002\u60a8\u53ef\u4ee5\u5c06\u6b65\u5e45\u8bbe\u7f6e\u4e3a 2,2\uff0c\u800c\u4e0d\u662f\u5c06\u6b65\u5e45\u8bbe\u7f6e\u4e3a\u6c34\u5e73 1\u3001\u5782\u76f4 1 \u7684\u9ed8\u8ba4\u503c\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u7a97\u53e3\u4e0e\u5176\u90bb\u5c45\u5782\u76f4\u548c\u6c34\u5e73\u504f\u79fb\u4e24\u4e2a\u50cf\u7d20\u3002\u8fd9\u5bfc\u81f4\u8f93\u51fa\u6570\u7ec4\u7684\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u662f\u8f93\u5165\u7684\u4e00\u534a\uff0c\u56e0\u6b64\u5143\u7d20\u6570\u91cf\u662f\u56db\u5206\u4e4b\u4e00\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u6211\u4eec\u6b63\u5728\u9009\u62e9\u6c60\u64cd\u4f5c\u4f1a\u9009\u62e9\u7684\u56db\u4e2a\u503c\u4e4b\u4e00\uff0c\u4f46\u6ca1\u6709\u5728\u6807\u51c6\u914d\u7f6e\u4e2d\u4f7f\u7528\u7684\u6bd4\u8f83\u6216\u5e73\u5747\u3002\u8fd9\u610f\u5473\u7740\u5377\u79ef\u5c42\u7684\u8f93\u51fa\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58\uff0c\u5bfc\u81f4 TFL Micro \u7684\u7ade\u6280\u573a\u66f4\u5c0f\uff0c\u4f46\u4e5f\u51cf\u5c11\u4e86 75% \u7684\u8ba1\u7b97\uff0c\u56e0\u4e3a\u53ea\u8ba1\u7b97\u4e86\u56db\u5206\u4e4b\u4e00\u7684\u5377\u79ef\u7a97\u53e3\u3002\u5b83\u786e\u5b9e\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u7cbe\u5ea6\u635f\u5931\uff0c\u60a8\u53ef\u4ee5\u5728\u8bad\u7ec3\u671f\u95f4\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4f46\u7531\u4e8e\u5b83\u5982\u6b64\u663e\u7740\u5730\u51cf\u5c11\u4e86\u8d44\u6e90\u4f7f\u7528\uff0c\u60a8\u751a\u81f3\u53ef\u4ee5\u589e\u52a0\u4e00\u4e9b\u5176\u4ed6\u53c2\u6570\uff0c\u4f8b\u5982\u8f93\u5165\u5927\u5c0f\u6216\u901a\u9053\u6570\uff0c\u5e76\u83b7\u5f97\u4e00\u4e9b\u56de\u62a5\u3002\u5982\u679c\u60a8\u786e\u5b9e\u53d1\u73b0\u81ea\u5df1\u5728\u4e3a\u7ade\u6280\u573a\u5927\u5c0f\u800c\u82e6\u82e6\u6323\u624e\uff0c\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u5c1d\u8bd5\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5b83\u5bf9\u6211\u4eec\u7684\u8bb8\u591a\u6a21\u578b\u90fd\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u5982\u679c\u60a8\u4e0d\u786e\u5b9a\u60a8\u7684\u6a21\u578b\u662f\u5426\u5177\u6709\u5377\u79ef/\u6c60\u5316\u6a21\u5f0f\uff0c\u6216\u8005\u60f3\u66f4\u597d\u5730\u4e86\u89e3\u6fc0\u6d3b\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u4ee5\u53ca\u5b83\u4eec\u5982\u4f55\u5f71\u54cd\u60a8\u9700\u8981\u7684\u9886\u57df\uff0c\u6211\u63a8\u8350 Netron \u53ef\u89c6\u5316\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u91c7\u7528 TensorFlow Lite \u6a21\u578b\u6587\u4ef6\u3002", "note_en": "A colleague recently asked for more details on an approach I recommended, but which she hadn\u2019t seen any documentation for. I realized that it was something I\u2019d learned from talking to model builders at Google, and I wasn\u2019t sure there was anything written up, so in the spirit of leaving a trail of breadcrumbs for anyone coming after, I thought I should put it into a quick blog post.\n The summary is that if you have MaxPool or AveragePool after a convolutional layer in a network, and you\u2019re targeting a resource-constrained system like a microcontroller, you should try removing them entirely and replacing them with a stride in the convolution instead. This has two main benefits, but to explain it\u2019s easiest to diagram out the network before and after.\n  In the typical setup, shown on the left, is a convolutional layer is followed by a pooling operation. This has been common since at least AlexNet, and is still found in many modern networks. The setup I often find useful is shown on the right. I\u2019m using an example input size of 224 wide by 224 high for this diagram, but the discussion holds true for any dimensions.\n The first thing to notice is that in the standard configuration, there\u2019s a 224x224x8 activation buffer written out to memory after the convolution layer. This is by far the biggest chunk of memory required in this part of the graph, taking over 400KB, even with eight-bit values. All ML frameworks I\u2019m aware of will require this buffer to be instantiated and filled before the next operation can be invoked. In theory it might be possible to do tiled execution, in the way that\u2019s common for image processing frameworks, but the added complexity hasn\u2019t made it a priority so far. If you\u2019re running on an embedded system, 400KB is a lot of RAM, especially since it\u2019s only being used for temporary values. That makes it a tempting target for size optimization.\n My second observation is that we\u2019re only using 25% of those values, assuming MaxPool is doing a typical 2x reduction, taking the largest value out of 4 in a 2\u00d72 window. From experience, these values are often very similar, so while doing the pooling does help overall accuracy a bit, taking any of those four values at random isn\u2019t much worse. In essence, this is what removing the pooling and increasing the stride for convolution does.\n Stride is an argument that controls the step size as a convolution filter is slid across the input. By default, many networks have windows that are offset from each other by one pixel horizontally, and one pixel vertically. This means (ignoring padding, which is a whole different discussion) the output is the same size as the input, but typically with more channels (eight in the diagram above). Instead of setting the stride to this default of 1 horizontally, 1 vertically, you can set it to 2,2. This means that each window is offset by two pixels vertically and horizontally from its neighbor. This results in an output array that is half the width and height of the input, and so has a quarter of the number of elements. In essence, we\u2019re picking one of the four values that would have been chosen by the pooling operation, but without the comparison or averaging that is used in the standard configuration.\n This means that the output of the convolution layer uses much less memory, resulting in a smaller arena for TFL Micro, but also reduces the computation by 75%, since only a quarter of the convolution windows are being calculated. It does result in some accuracy loss, which you can verify during training, but since it reduces the resource usage so dramatically you may even be able to increase some other parameters like the input size or number of channels and gain some back. If you do find yourself struggling for arena size, I highly recommend giving this approach a try, it\u2019s been very helpful for a lot of our models. If you\u2019re not sure if your model has the convolution/pooling pattern, or want to better understand the sizes of your activation buffers and how they influence the arena you\u2019ll need, I recommend the  Netron visualizer, which can take TensorFlow Lite model files.", "posttime": "2021-08-06 10:44:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "tinyml,trick,\u5377\u79ef", "title": "\u4e00\u79cd\u7f29\u5c0f TinyML \u5377\u79ef\u7f51\u7edc\u7684\u5947\u602a\u6280\u5de7", "title_en": "One weird trick to shrink convolutional networks for TinyML", "transed": 1, "url": "https://petewarden.com/2021/08/05/one-weird-trick-to-shrink-convolutional-networks-for-tinyml/", "via": "", "real_tags": ["tinyml", "trick", "\u5377\u79ef"]}, {"category": "", "categoryclass": "", "imagename": "4d8718ddc454a2f1a7c71a0b2c18ec0a.jpg", "infoid": 1071700, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u65b0\u7684\u7535\u5b50\u6e38\u620f Left 4... \u54b3\u54b3\uff0cBack 4 Blood \u5728\u4eca\u5e74\u665a\u4e9b\u65f6\u5019\u63a8\u51fa\uff0c\u8fd9\u4e2a\u50f5\u5c38\u5408\u4f5c\u5c04\u51fb\u6e38\u620f\u5df2\u7ecf\u8fdb\u5165\u4e86\u4e00\u4e2a\u6b63\u5f0f\u88ab\u89c6\u4e3a\u201c\u6d4b\u8bd5\u7248\u201d\u7684\u72b6\u6001\u3002\u6211\u5728\u73a9\u6e38\u620f\u7684\u6700\u65b0\u6d4b\u8bd5\u7248\u672c\u5927\u7ea6\u516d\u4e2a\u5c0f\u65f6\u540e\u786e\u5b9a\u4e86\u8fd9\u4e00\u70b9\uff0c\u73b0\u5728\u53ef\u4ee5\u4e3a\u5176\u9884\u8ba2\u5ba2\u6237\uff08\u6216\u4efb\u4f55\u83b7\u5f97\u65e9\u671f\u4ee3\u7801\u7684\u4eba\uff09\u63d0\u4f9b\u670d\u52a1\u3002\u8fd9\u4e2a\u7248\u672c\u5c06\u4e8e 8 \u6708 12 \u65e5\u661f\u671f\u56db\u5411\u516c\u4f17\u5f00\u653e\u3002\u6211\u6d4b\u8bd5\u8fc7\u7684 PvE \u548c PvP \u6a21\u5f0f\u611f\u89c9\u7a33\u5b9a\u548c\u7a33\u5b9a\uff0c\u81f3\u5c11\u5728 PC \u4e0a\uff0c\u5e76\u4e14\u5b83\u4eec\u53ef\u4ee5\u66f4\u5bb9\u6613\u5730\u786e\u5b9a Back 4 Blood \u7684\u771f\u5b9e\u611f\u53d7\u96f6\u552e\u6e38\u620f\u4ece 10 \u6708 12 \u65e5\u5f00\u59cb\u3002\u7b80\u800c\u8a00\u4e4b\uff0cBack 4 Blood \u5df2\u7ecf\u611f\u89c9\u5c31\u50cf Left 4 Dead \u7cfb\u5217\u5b66\u4f1a\u4e86\u5982\u4f55\u6570\u5230\u4e09\u3002\u4f60\u4e0d\u5fc5\u772f\u7740\u773c\u5c31\u80fd\u770b\u5230\u6e38\u620f\u7f3a\u5c11\u4e00\u4e9b\u7c7b\u4f3c Valve \u7684\u9b54\u6cd5\u7684\u5730\u65b9\uff0c\u4f46\u8fd9\u8fd8\u4e0d\u8db3\u4ee5\u62d6\u57ae\u8840\u8165\u7684\u7f8e\u597d\u65f6\u5149\u3002\u7531\u4e8e\u5f15\u64ce\u6280\u672f\u7684\u63d0\u5347\u3001\u806a\u660e\u800c\u516c\u5e73\u7684\u201c\u5361\u7247\u7ec4\u201d\u7cfb\u7edf\u4ee5\u53ca\u5bf9\u4eba\u7c7b\u4e0e\u50f5\u5c38 PvP \u6218\u6597\u7684\u4ee4\u4eba\u60ca\u8bb6\u7684\u6709\u8da3\u8c03\u6574\uff0cBack 4 Blood \u611f\u89c9\u5c31\u50cf\u662f\u4e00\u90e8\u63a5\u8fd1\u6709\u4ef7\u503c\u7684\u7eed\u96c6\u3002\u4f5c\u4e3a\u5165\u95e8\uff0c\u8bf7\u56de\u987e\u6211 2020 \u5e74 12 \u6708\u7684\u6e38\u620f\u4e0d\u592a\u5b8c\u5584\u7684 alpha \u7248\u672c\uff0c\u8be5\u7248\u672c\u5c06\u821e\u53f0\u8bbe\u7f6e\u5982\u4e0b\uff1aB4B \u7684\u8bb8\u591a\u6982\u5ff5\u90fd\u662f\u4ece L4D \u65e0\u803b\u5730\u63d0\u51fa\u6765\u7684\uff08\u5982\u679c\u5e26\u6709\u6570\u5b57\u201c4\u201d\u7684\u547d\u540d\u7ea6\u5b9a\u4e0d\u77e5\u9053\u4f60\u5462\uff09\u3002\u4e5f\u5c31\u662f\u8bf4\uff1a\u6e38\u620f\u7684\u6bcf\u4e2a\u201c\u6218\u5f79\u201d\u533a\u57df\u90fd\u88ab\u5206\u6210\u66f4\u5c0f\u7684\u7ea7\u522b\uff0c\u60a8\u7684\u5c0f\u961f\u6709\u673a\u4f1a\u5728\u6bcf\u4e2a\u7ea7\u522b\u4e4b\u95f4\u7684\u201c\u5b89\u5168\u533a\u57df\u201d\u4f11\u606f\u3001\u6cbb\u7597\u548c\u50a8\u5b58\u8865\u7ed9\u3002\u4f7f\u7528\u67aa\u652f\u3001\u8fd1\u6218\u6b66\u5668\u548c\u7206\u70b8\u6027\u5de5\u5177\u6495\u6bc1\u50f5\u5c38\uff0c\u5e76\u5904\u7406\u5065\u5eb7\u7269\u54c1\u548c\u5de5\u5177\uff0c\u8ba9\u60a8\u7684\u56e2\u961f\u4ece\u4e00\u4e2a\u5b89\u5168\u533a\u57df\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5b89\u5168\u533a\u57df\u3002\u90a3\u4e2a\u6838\u5fc3\u81ea\u8d1f\u4ecd\u7136\u5b58\u5728\uff0c\u800c\u672c\u5468\u7684\u6d4b\u8bd5\u7248\u672c\u4e3a\u4f53\u9a8c\u589e\u6dfb\u4e86\u66f4\u591a\u63a5\u8fd1\u6700\u7ec8\u7684\u6da6\u8272\u3002\u6700\u5927\u7684\u533a\u522b\u662f\u66f4\u597d\u5730\u4e86\u89e3\u5b83\u7684\u4e00\u7cfb\u5217\u6e38\u620f\u4fee\u6539\u5361\u7ec4\uff0c\u636e\u6211\u6240\u77e5\uff0cTurtle Rock Studios \u5df2\u7ecf\u5b9e\u65bd\u4e86\u4e00\u4e9b\u5e94\u8be5\u53ef\u4ee5\u5de5\u4f5c\u7684\u4e1c\u897f\uff0c\u800c\u4e0d\u4f1a\u8981\u6c42\u73a9\u5bb6\u5728\u96f6\u552e\u4ef7\u683c\u4e4b\u4e0a\u591a\u82b1\u4e00\u5206\u94b1\u3002\u6e38\u620f\u5f00\u59cb\u65f6\uff0c\u60a8\u5c06\u62e5\u6709\u5927\u91cf\u7eb8\u724c\uff0c\u5e76\u9080\u8bf7\u60a8\u5236\u4f5c 15 \u5f20\u5361\u7ec4\u3002\u6bcf\u5f53\u60a8\u6f5c\u5165 PvE\uff08\u4e0e\u670b\u53cb\u5408\u4f5c\u5bf9\u6297\u8ba1\u7b97\u673a\u63a7\u5236\u7684\u50f5\u5c38\uff09\u6216 PvP\uff08\u56db\u5bf9\u56db\u5bf9\u6218\u6a21\u5f0f\uff09\u65f6\uff0c\u60a8\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u9009\u62e9\u4e00\u4e2a\u81ea\u5b9a\u4e49\u5957\u724c\u3002\u5728\u6bcf\u4e2a\u6218\u5f79\u9636\u6bb5\u5f00\u59cb\u65f6\uff0c\u60a8\u7684\u4e00\u4e9b\u5361\u7247\u5c06\u88ab\u968f\u673a\u53d1\u653e\uff0c\u60a8\u53ef\u4ee5\u4ece\u4e2d\u6311\u9009\u4e00\u4e24\u5f20\u6765\u589e\u5f3a\u60a8\u7684\u6218\u6597\u529b\u3002\u6700\u76f4\u63a5\u7684\u597d\u5904\u662f\u4f60\u7684\u89d2\u8272\uff0c\u5c11\u91cf\u7684\u5361\u7247\u7ed9\u6240\u6709\u961f\u53cb\u67d0\u79cd\u63d0\u5347\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u53ea\u662f\u7b80\u5355\u7684\u6570\u5b57\u63d0\u5347\uff0c\u4ece\u989d\u5916\u7684\u5065\u5eb7\u6216\u5f39\u836f\u5230\u5f53\u60a8\u7684\u89d2\u8272\u5065\u5eb7\u72b6\u51b5\u4e0d\u4f73\u65f6\u5f00\u542f\u7684\u7279\u6b8a\u6d25\u8d34\u3002\u5176\u4ed6\u4eba\u4e3a\u60a8\u7684\u89d2\u8272\u63d0\u4f9b\u5168\u65b0\u7684\u653b\u51fb\u6216\u80fd\u529b\uff0c\u4f8b\u5982\u201c\u84c4\u529b\u201d\u8fd1\u6218\u653b\u51fb\uff0c\u8ba9\u60a8\u6309\u4f4f\u8fd1\u6218\u6309\u94ae\u66f4\u957f\u65f6\u95f4\u4ee5\u8fdb\u5165\u50f5\u5c38\u3002\n\u6bcf\u4e2a\u73a9\u5bb6\u5c06\u5728\u6bcf\u6b21\u4f1a\u8bdd\u4e2d\u9009\u62e9\u5927\u7ea6\u516d\u5f20\u724c\uff08\u603b\u662f\u5728\u201c\u53d1\u4e94\uff0c\u9009\u4e00\u201d\u7684\u5bb9\u91cf\uff09\u3002\u8fd9\u610f\u5473\u7740\u9002\u5f53\u7684\u5957\u724c\u6784\u5efa\u53ef\u4ee5\u8ba9\u73a9\u5bb6\u62e8\u5165\u5404\u79cd\u6e38\u620f\u7406\u5ff5 - \u4e0d\u4e00\u5b9a\u4fdd\u8bc1\u6bcf\u6b21\u90fd\u80fd\u5904\u7406\u4ed6\u4eec\u7684\u68a6\u60f3\u5361\u3002\u6d4b\u8bd5\u7248\u4e2d\u6700\u65e9\u7684\u5957\u724c\u9009\u9879\u5f3a\u70c8\u5f3a\u8c03\u8fd1\u6218\uff0c\u5c24\u5176\u662f\u5f53\u5b83\u4eec\u4e3a\u6bcf\u4e00\u4e2a\u88ab\u8fd1\u6218\u6b66\u5668\u6740\u6b7b\u7684\u50f5\u5c38\u53e0\u52a0\u5065\u5eb7\u52a0\u6210\u65f6\u3002\u7a0d\u540e\u89e3\u9501\u5361\u724c\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u4ece\u8fdc\u5904\u6740\u6b7b\u3001\u6cbb\u7597\u548c\u590d\u6d3b\u76df\u53cb\uff0c\u6216\u7d2f\u79ef\u8010\u529b\u8ba1\uff08\u5f53\u60a8\u5954\u8dd1\u6216\u4f7f\u7528\u8fd1\u6218\u653b\u51fb\u65f6\uff0c\u8010\u529b\u8ba1\u4f1a\u51cf\u5c11\uff09\u3002\u968f\u7740\u6211\u5728\u6d4b\u8bd5\u7248\u4e2d\u82b1\u8d39\u7684\u65f6\u95f4\u8d8a\u6765\u8d8a\u591a\uff0c\u6211\u5bf9\u83b7\u5f97\u89e3\u9501\u66f4\u591a\u5957\u724c\u9009\u9879\u6240\u9700\u7684\u79ef\u5206\u611f\u5230\u7531\u8877\u7684\u5174\u594b\u3002\u4e00\u5f00\u59cb\u6211\u4e0d\u60f3\u6210\u4e3a\u4e00\u540d\u72d9\u51fb\u624b\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u6211\u4e0e\u9730\u5f39\u67aa\u548c\u65a7\u5934\u7684\u6218\u6597\u6709\u591a\u4e48\u6709\u8da3\uff0c\u4f46\u6211\u9010\u6e10\u6e34\u671b\u4e00\u5957\u80fd\u5f3a\u8c03\u8fdc\u8ddd\u79bb\u653b\u51fb\u7684\u7532\u677f\uff0c\u800c\u6211\u7684\u961f\u53cb\u5219\u80a9\u8d1f\u91cd\u4efb\u3002\u6211\u60f3\u6d4b\u8bd5\u7248\u4f1a\u516c\u5f00\u4e00\u4e9b\u5361\u7247\u6240\u9700\u7684\u5404\u79cd\u4e0e\u6570\u5b66\u76f8\u5173\u7684\u8c03\u6574\uff0c\u4f46\u4e0d\u8981\u8bef\u4f1a\uff1a\u8fd9\u4e2a\u7cfb\u7edf\u5df2\u7ecf\u4e3a\u8fc7\u65f6\u7684 Left 4 Dead \u5408\u4f5c\u6a21\u5f0f\u6dfb\u52a0\u4e86\u53d7\u6b22\u8fce\u7684\u9999\u6599\u3002\u5982\u679c\u53d1\u884c\u5546 WB Games \u6ca1\u6709\u901a\u8fc7\u5411\u8fd9\u4e9b\u5361\u7247\u6dfb\u52a0\u5fae\u4ea4\u6613\u6765\u641e\u7838\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u8fce\u6765\u4e00\u4e2a\u5f88\u597d\u7684\u7532\u677f\u5efa\u8bbe\u65f6\u95f4\u3002 B4B \u7684\u56db\u5bf9\u56db\u5bf9\u6218\u6a21\u5f0f\u5bf9\u4e8e L4D \u7c89\u4e1d\u6765\u8bf4\u770b\u8d77\u6765\u5f88\u719f\u6089\uff0c\u56e0\u4e3a\u5b83\u4e5f\u8ba9\u201c\u66f4\u6e05\u6d01\u201d\u7684\u4eba\u7c7b\u56e2\u961f\u5bf9\u6297\u8d85\u7ea7\u50f5\u5c38\u56e2\u961f\u3002\u4f46\u5728 L4D \u7248\u672c\u53ef\u80fd\u4f1a\u611f\u89c9\u8fc7\u957f\u548c\u7b28\u62d9\u7684\u5730\u65b9\uff0cTurtle Rock \u7684\u65b0\u65cb\u8f6c\u4f18\u5148\u8003\u8651\u66f4\u5feb\u3001\u66f4\u52a8\u6001\u7684\u6218\u6597\uff0c\u66f4\u597d\u5730\u907f\u514d\u6124\u6012\u7684\u6212\u65ad\u8005\u3002\u5728 L4D \u7684\u5bf9\u6218\u6a21\u5f0f\u4e2d\uff0c\u50f5\u5c38\u961f\u4f0d\u4f1a\u5165\u4fb5\u6b63\u5e38\u7684\u6218\u5f79\u5730\u56fe\u6765\u5e72\u6270\u3001\u9a9a\u6270\u548c\uff08\u5e0c\u671b\uff09\u6740\u6b7b\u4eba\u7c7b\u961f\u4f0d\u3002 B4B \u7684\u8f6c\u6298\u56f4\u7ed5\u7740\u6218\u5f79\u5730\u56fe\u7684\u66f4\u5c0f\u3001\u4e0e\u7279\u5b9a\u90e8\u5206\u76f8\u6bd4\uff0c\u4ee5\u53ca\u6bcf 60 \u79d2\u79fb\u52a8\u4e00\u6b21\u7684\u7c7b\u4f3c\u5927\u9003\u6740\u7684\u201c\u5b89\u5168\u533a\u201d\u3002\u6bcf\u652f\u961f\u4f0d\u8f6e\u6d41\u626e\u6f14\u50f5\u5c38\u548c\u4eba\u7c7b\uff0c\u6bcf\u56de\u5408\u5411\u4e24\u8fb9\u5404\u5c04\u4e00\u67aa\uff0c\u76ee\u6807\u662f\u8ba9\u6bcf\u652f\u961f\u4f0d\u5728\u7ed9\u5b9a\u56de\u5408\u4e2d\u4f5c\u4e3a\u4eba\u7c7b\u6301\u7eed\u66f4\u957f\u65f6\u95f4\u3002\u636e\u6211\u6240\u77e5\uff0c\u4eba\u7c7b\u6a21\u5f0f\u7684\u56e2\u961f\u6bcf\u8f6e\u6700\u591a\u53ef\u4ee5\u6301\u7eed 4 \u5206\u949f\u6216\u5c11\u81f3 45 \u79d2\u3002\u4f5c\u4e3a\u4eba\u7c7b\u56e2\u961f\u6301\u7eed\u66f4\u957f\u65f6\u95f4\uff0c\u6216\u8005\u4f5c\u4e3a\u50f5\u5c38\u7834\u574f\u4eba\u7c7b\u7684\u4e00\u5929\uff0c\u9700\u8981\u53cc\u65b9\u5c31\u5730\u56fe\u63a7\u5236\u505a\u51fa\u660e\u667a\u7684\u51b3\u5b9a\u3002\u7279\u522b\u662f\uff0c\u4eba\u7c7b\u4e0d\u80fd\u4f9d\u8d56\u8eb2\u5728\u5730\u56fe\u7684\u201c\u5b89\u5168\u201d\u89d2\u843d\uff0c\u56e0\u4e3a\u79fb\u52a8\u7684\u5b89\u5168\u533a\u901a\u5e38\u4f1a\u5bfc\u81f4\u6bd2\u4e91\u586b\u6ee1\u4ee5\u524d\u6709\u7528\u7684\u5efa\u7b51\u7269\u6216\u6d1e\u7a74\u3002\u4eba\u7c7b\u660e\u667a\u7684\u505a\u6cd5\u662f\u5728\u4efb\u4f55\u770b\u4f3c\u5b89\u5168\u7684\u533a\u57df\u5728\u88ab\u6bd2\u6c14\u8986\u76d6\u4e4b\u524d\u6700\u5927\u9650\u5ea6\u5730\u589e\u52a0\u989d\u5916\u7684\u5f39\u836f\u3001\u5c0f\u5de5\u5177\u548c\u5065\u5eb7\u62fe\u53d6\u5668\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u50f5\u5c38\u5728\u4efb\u4f55\u65f6\u5019\u90fd\u80fd\u5728\u5730\u56fe\u4e0a\u770b\u5230\u4eba\u7c7b\u7684\u8f6e\u5ed3\u65b9\u9762\u88ab\u4e25\u91cd\u538b\u5236\u3002\u8fd9\u53ef\u4ee5\u8bf4\u662f\u5bf9\u5927\u591a\u6570\u8d85\u7ea7\u50f5\u5c38\u4e0e\u4eba\u7c7b\u76f8\u6bd4\u6709\u591a\u6162\u7684\u8865\u507f\u3002\u56e0\u6b64\uff0c\u4e00\u573a\u597d\u7684\u50f5\u5c38\u56de\u5408\u5c06\u53d6\u51b3\u4e8e\u6709\u6548\u7684\u6c9f\u901a\u548c\u4e09\u89d2\u6d4b\u91cf\u2014\u2014\u56e0\u4e3a\u8d85\u7ea7\u50f5\u5c38\u6700\u597d\u5c06\u4eba\u7c7b\u961f\u53cb\u5206\u5f00\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u7684\u4e00\u4e24\u4e2a\u4eba\u51fb\u5012\u3002 \uff08\u4e0e\u6b64\u540c\u65f6\uff0c\u4eba\u7c7b\u56e2\u7ed3\u5728\u4e00\u8d77\uff0c\u770b\u5728\u4e0a\u5e1d\u7684\u4efd\u4e0a\uff01\uff09\u4f5c\u4e3a\u4e00\u79cd\u4e09\u5c40\u4e24\u80dc\u7684\u6a21\u5f0f\uff0cB4B \u7684\u5bf9\u6218\u5bf9\u4e24\u652f\u7403\u961f\u6765\u8bf4\u59cb\u7ec8\u662f\u5e73\u7b49\u7684\uff0c\u76f4\u5230\u4e0d\u662f\u8fd9\u6837\uff0c\u800c\u4e0d\u662f\u62d6\u51fa\u660e\u663e\u7684\u56e2\u961f\u5931\u8861\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u5bf9\u8fc4\u4eca\u4e3a\u6b62\u770b\u5230\u7684\u5bf9\u6297\u6a21\u5f0f\u5730\u56fe\u8bbe\u8ba1\u5e76\u4e0d\u7740\u8ff7\uff1a\u5b83\u4e3b\u8981\u7531\u91cd\u65b0\u6df7\u5408\u7684\u623f\u5c4b\u548c\u6218\u5f79\u4e2d\u7684\u5730\u5f62\u7ec4\u6210\u2014\u2014\u901a\u5e38\u6709\u592a\u591a\u5bb9\u6613\u8ba9\u4eba\u7c7b\u5b89\u987f\u4e0b\u6765\u7684\u89d2\u843d\u9690\u85cf\u70b9\u3002\u66f4\u591a\u7684\u5782\u76f4\u5ea6\u548c\u5f3a\u5236\u8fd0\u52a8\u53ef\u4ee5\u5927\u5927\u589e\u52a0\u8fd9\u79cd\u6a21\u5f0f\u7684\u817f\uff0c\u7279\u522b\u662f\u56e0\u4e3a\u4eba\u7c7b\u73a9\u5bb6\u4e0d\u80fd\u6307\u671b\u5728\u6211\u8fc4\u4eca\u4e3a\u6b62\u770b\u5230\u7684\u7ea7\u522b\u4e2d\u4f7f\u7528\u72d9\u51fb\u6b65\u67aa\u7b49\u6b66\u5668\u7cfb\u5217\u3002", "note_en": "As the new video game  Left 4... ahem,  Back 4 Blood shambles its way toward launch later this year, this zombie co-op shooter has entered a state that formally counts as a &#34;beta.&#34; I&#39;ve determined this after about six hours playing the game&#39;s latest test version, now live for its preorder customers (or anyone who&#39;s  scored early codes). This version will open up to the public on Thursday, August 12. The PvE and PvP modes\u00a0I&#39;ve tested feel solid and stable, at least on PC, and they make it easier to determine exactly what  Back 4 Blood will feel like as a retail game starting October 12.\n In short,  Back 4 Blood already feels like the   Left 4 Dead series learned how to count to three. You don&#39;t have to squint to see the places where the game lacks some Valve-like magic, but it&#39;s not enough to drag down the bloody good times.  Back 4 Blood feels like something approaching a worthy sequel, thanks to a ramping up of engine tech, a clever and fair &#34;card deck&#34; system, and surprisingly entertaining tweaks to humans-versus-zombie PvP combat.\n  For a primer, rewind to  my December 2020 look at the game&#39;s less-polished alpha version, which sets the stage as follows:\n Many of\u00a0 B4B&#39;s concepts are lifted shamelessly from\u00a0 L4D\u00a0(if the naming convention with a number &#34;4&#34; didn&#39;t clue you in). To wit: each of the game&#39;s &#34;campaign&#34; zones is broken up into smaller levels, and your squad gets an opportunity to rest, heal, and stock up on supplies at a &#34;safe zone&#34; between each level. Use guns, melee weapons, and explosive implements to tear through zombies, and juggle health items and tools to get your team from one safe zone to the next.\n That core conceit is still here, while this week&#39;s testing version adds more near-final polish to the experience. The biggest differentiator is a better look at its series of gameplay-modifying card decks, and from what I can tell, Turtle Rock Studios has implemented something that\u00a0 should work without demanding players spend a single additional penny on top of the retail price.\n    You&#39;ll start the game with a solid inventory of cards, along with an invitation to build 15-card decks. Whenever you dive into either PvE (co-op with friends against computer-controlled zombies) or PvP (a four-on-four versus mode), your first step is to pick one of your custom decks. At the beginning of each campaign phase, some of your cards will be randomly dealt, and you pick one or two of them to augment your battling from there on out.\n Most directly benefit your character, with a smaller number of cards giving all teammates some sort of boost. Often, these are simple numerical boosts, ranging from additional health or ammo to special perks that turn on when your character is low on health. Others give your character entirely new attacks or abilities, like a &#34;charged&#34; melee attack that lets you hold the melee button down longer to barrel into zombies.\n    Each player will choose roughly six cards per session (always in a &#34;deal five, pick one&#34; capacity). This means proper deck-building lets players dial in various gameplay philosophies\u2014without necessarily guaranteeing their dream cards get dealt every time. The earliest deck options in the beta strongly emphasize melee, especially when they stack a health bonus for every zombie killed with a melee weapon. Later card unlocks make it easier to kill from afar, heal and revive allies, or stack up your endurance meter (which runs down when you run or use melee attacks).\n As I spent more time playing the beta, I felt genuine excitement in earning the points needed to unlock more deck options. I didn&#39;t want to be a sniper at first, thanks to how much fun I had battling with shotguns and axes, but I grew to long for a deck that would emphasize distance attacks while hand-to-hand duties went to my squadmates. I imagine the beta will expose various math-related tweaks needed for some of the cards, but make no mistake: already, this system adds welcome spice to the dated  Left 4 Dead co-op formula. And if publisher WB Games doesn&#39;t screw it up by adding microtransactions to these cards, then we&#39;re in for a good deck-building time.\n     B4B&#39;s four-on-four versus mode will look familiar to  L4D fans, as it, too, pits teams of &#34;cleaner&#34; humans against teams of super zombies. But where the  L4D version could feel overlong and unwieldy, Turtle Rock&#39;s new spin prioritizes quicker, more dynamic combat that&#39;s better built to stave off rage-quitters.\n  In  L4D&#39;s versus modes, teams of zombies invaded normal campaign maps to interrupt, annoy, and (hopefully) kill the human teams.  B4B&#39;s twist revolves around smaller, versus-specific slices of the campaign&#39;s maps, along with a battle royale-like &#34;safe zone&#34; that moves every 60 seconds. Each team takes turns as the zombies and the humans, one shot at each side per round, and the object is for each team to last longer as humans in a given round.\n From what I&#39;ve seen, teams in human mode can last as long as four minutes or as little as 45 seconds per round. Lasting longer as a human team, or ruining the humans&#39; day as zombies, requires both sides to make wise decisions about map control. In particular,\u00a0humans can&#39;t rely on hiding in a &#34;safe&#34; corner of a map, as the moving safe zone will usually lead to a poison cloud filling up a formerly useful building or cave. Humans would be wise to maximize any seemingly safe region&#39;s extra ammo, gadgets, and health pickups before they&#39;re covered in poison gas.\n Zombies, meanwhile, are seriously overpowered in terms of seeing humans&#39; outlines on the map at all times. This is arguably a compensation for how slow most super zombies are compared to humans. Thus, a good zombie round will hinge on effective communication and triangulation\u2014as the super zombies do best when they separate human teammates, then take one or two of them down. (Meanwhile, humans, stick together, for god&#39;s sake!)\n As a best-of-three mode,  B4B&#39;s versus combat is always in equal reach for both teams until the moment it&#39;s not, as opposed to dragging out obvious team imbalances. Unfortunately, I&#39;m not charmed by the versus mode map design I&#39;ve seen thus far: it&#39;s mostly made up of remixed houses and terrain from the campaign\u2014often with too many easy corner hiding spots for humans to settle into. More verticality and forced movement could go a long way to add legs to this mode, especially since human players can&#39;t expect to use weapon families like sniper rifles in the levels I&#39;ve thus far seen.", "posttime": "2021-08-06 10:07:55", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "blood,beta,\u4eba\u7c7b", "title": "\u8fd4\u56de 4 Blood beta \u5370\u8c61\uff1a\u6f5c\u5728\u5408\u4f5c\u793e\u4f1f\u5927\u7684\u6a21\u677f", "title_en": "Back 4 Blood beta impressions: A template for potential co-op greatness", "transed": 1, "url": "https://arstechnica.com/gaming/2021/08/back-4-blood-beta-impressions-a-template-for-potential-co-op-greatness/", "via": "", "real_tags": ["blood", "beta", "\u4eba\u7c7b"]}, {"category": "", "categoryclass": "", "imagename": "96d7618aa920aeb0bc63e3f691a8a668.jpeg", "infoid": 1071699, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5355\u51fb\u201c\u6ce8\u518c\u201d\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u63a5\u6536\u6765\u81ea Insider \u7684\u8425\u9500\u7535\u5b50\u90ae\u4ef6\u4ee5\u53ca\u5176\u4ed6\u5408\u4f5c\u4f19\u4f34\u7684\u4f18\u60e0\uff0c\u5e76\u63a5\u53d7\u6211\u4eec\u7684\u670d\u52a1\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\u3002\u636e\u82f1\u56fd\u300a\u91d1\u878d\u65f6\u62a5\u300b\u5468\u56db\u62a5\u9053\uff0c\u636e\u62a5\u9053\uff0c\u82f9\u679c\u516c\u53f8\u8ba1\u5212\u63a8\u51fa\u8f6f\u4ef6\uff0c\u8be5\u8f6f\u4ef6\u5c06\u626b\u63cf\u7f8e\u56fd iPhone \u7167\u7247\u4e2d\u7684\u513f\u7ae5\u6027\u8650\u5f85\u56fe\u50cf\u3002\u62a5\u9053\u63f4\u5f15\u719f\u6089\u82f9\u679c\u8ba1\u5212\u7684\u5b89\u5168\u7814\u7a76\u4eba\u5458\u7684\u8bdd\u79f0\uff0c\u82f9\u679c\u53ef\u80fd\u4f1a\u5728\u4e0b\u5468\u5ba3\u5e03\u66f4\u591a\u6709\u5173\u8be5\u8f6f\u4ef6\u7684\u4fe1\u606f\u3002\u636e\u62a5\u9053\uff0c\u8be5\u8f6f\u4ef6\u540d\u4e3a neuralMatch\uff0c\u65e8\u5728\u67e5\u770b\u5b58\u50a8\u5728 iPhone \u4e0a\u5e76\u4e0a\u4f20\u5230 iCloud \u5b58\u50a8\u7684\u56fe\u50cf\u3002\u636e\u82f1\u56fd\u300a\u91d1\u878d\u65f6\u62a5\u300b\u62a5\u9053\uff0c\u5982\u679c\u8be5\u8f6f\u4ef6\u68c0\u6d4b\u5230\u7167\u7247\u4e2d\u7684\u513f\u7ae5\u6027\u8650\u5f85\uff0c\u5b83\u5c31\u4f1a\u5c06\u6750\u6599\u4f20\u9012\u7ed9\u4eba\u7c7b\u5ba1\u9605\u8005\uff0c\u5982\u679c\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u56fe\u50cf\u662f\u975e\u6cd5\u7684\uff0c\u4ed6\u4eec\u4f1a\u63d0\u9192\u6267\u6cd5\u90e8\u95e8\u3002\u7136\u800c\uff0c\u5b89\u5168\u4e13\u5bb6\u8b66\u544a\u8bf4\uff0c\u8fd9\u53ef\u80fd\u8d85\u51fa\u5bfb\u627e\u513f\u7ae5\u6027\u8650\u5f85\u56fe\u50cf\u7684\u8303\u56f4\u3002\u7ea6\u7ff0\u970d\u666e\u91d1\u65af\u5927\u5b66\u7684\u5bc6\u7801\u5b66\u5bb6\u9a6c\u4fee\u683c\u6797\u5728\u63a8\u7279\u4e0a\u8bf4\uff1a\u201c\u4ed6\u4eec\u5728\u8fd9\u4e00\u70b9\u4e0a\u662f\u5bf9\u8fd8\u662f\u9519\u5e76\u4e0d\u91cd\u8981\u3002\u8fd9\u5c06\u6253\u7834\u5927\u575d\u2014\u2014\u653f\u5e9c\u5c06\u8981\u6c42\u6bcf\u4e2a\u4eba\u8fd9\u6837\u505a\u3002\u201d\u82f9\u679c\u53d1\u8a00\u4eba\u6ca1\u6709\u7acb\u5373\u56de\u5e94 Insider \u7684\u8bc4\u8bba\u8bf7\u6c42\uff0c\u8be5\u516c\u53f8\u62d2\u7edd\u5411\u82f1\u56fd\u300a\u91d1\u878d\u65f6\u62a5\u300b\u53d1\u8868\u8bc4\u8bba\u3002\n\u8fd9\u79cd\u65b0\u8f6f\u4ef6\u5982\u679c\u5b9e\u65bd\uff0c\u53ef\u80fd\u4f1a\u53d6\u60a6\u6267\u6cd5\u90e8\u95e8\u548c\u653f\u5e9c\u673a\u6784\uff0c\u4f46\u53ef\u80fd\u4f1a\u5f15\u8d77\u9690\u79c1\u6743\u6d3b\u52a8\u5bb6\u7684\u5f3a\u70c8\u53cd\u5bf9\u3002\u8fd1\u5e74\u6765\uff0cApple \u5c06\u9690\u79c1\u529f\u80fd\u4f5c\u4e3a\u5176\u8425\u9500\u7684\u57fa\u77f3\uff0c\u5e76\u5ba3\u4f20\u201ciPhone \u4e0a\u53d1\u751f\u7684\u4e8b\u60c5\u4f1a\u7559\u5728 iPhone \u4e0a\u201d\u3002\u4f46\u8fd9\u79cd\u627f\u8bfa\u548c\u6743\u8861\u662f\u6709\u9650\u7684\u3002 Apple \u5df2\u7ecf\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u201c\u6563\u5217\u201d\u7684\u6280\u672f\u76d1\u63a7\u4ece Apple \u8bbe\u5907\u53d1\u9001\u7684\u56fe\u50cf\u4e2d\u662f\u5426\u5b58\u5728\u8650\u5f85\u513f\u7ae5\u7684\u56fe\u50cf\uff0c\u5e76\u5728\u7b97\u6cd5\u548c Apple \u5458\u5de5\u68c0\u6d4b\u5230\u53ef\u7591\u7684\u8650\u5f85\u513f\u7ae5\u6750\u6599\u65f6\u5411\u6267\u6cd5\u90e8\u95e8\u53d1\u51fa\u8b66\u62a5\u3002\u5b83\u8fd8\u4e0e\u6267\u6cd5\u90e8\u95e8\u5408\u4f5c\u5904\u7406\u5408\u6cd5\u7684\u4fe1\u606f\u8bf7\u6c42\u3002 \u201c\u6211\u4eec\u7684\u6cd5\u5f8b\u56e2\u961f\u4f1a\u5ba1\u67e5\u8bf7\u6c42\uff0c\u4ee5\u786e\u4fdd\u8bf7\u6c42\u5177\u6709\u6709\u6548\u7684\u6cd5\u5f8b\u4f9d\u636e\uff0c\u201d\u82f9\u679c\u5728\u5176\u7f51\u7ad9\u4e0a\u5199\u9053\u3002 \u201c\u5982\u679c\u4ed6\u4eec\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u63d0\u4f9b\u54cd\u5e94\u8bf7\u6c42\u7684\u6570\u636e\u6765\u9075\u5b88\u3002\u5982\u679c\u8bf7\u6c42\u6ca1\u6709\u6709\u6548\u7684\u6cd5\u5f8b\u4f9d\u636e\uff0c\u6216\u8005\u5982\u679c\u6211\u4eec\u8ba4\u4e3a\u5b83\u4e0d\u660e\u786e\u3001\u4e0d\u9002\u5f53\u6216\u8fc7\u4e8e\u5bbd\u6cdb\uff0c\u6211\u4eec\u4f1a\u8d28\u7591\u6216\u62d2\u7edd\u8be5\u8bf7\u6c42\u3002\u6211\u4eec\u62a5\u544a\u6bcf\u516d\u4e2a\u6708\u6536\u5230\u4e00\u6b21\u8bf7\u6c42\u3002\u201d\u8fc7\u53bb\uff0c\u82f9\u679c\u62d2\u7edd\u4e86\u653f\u5e9c\u673a\u6784\u8981\u6c42\u8be5\u516c\u53f8\u5b89\u88c5\u540e\u95e8\u4ee5\u5141\u8bb8\u6267\u6cd5\u90e8\u95e8\u8bbf\u95ee\u52a0\u5bc6\u4fe1\u606f\u7684\u8981\u6c42\u3002\u7ebd\u7ea6\u5e02\u8b66\u65b9\u548c\u68c0\u5bdf\u5b98\u6279\u8bc4\u82f9\u679c\u516c\u53f8\u7684\u52a0\u5bc6\u6280\u672f\u5e2e\u52a9\u72af\u7f6a\u5206\u5b50\u5411\u6267\u6cd5\u90e8\u95e8\u9690\u7792\u4fe1\u606f\u3002 Facebook \u7b49\u5176\u4ed6\u79d1\u6280\u516c\u53f8\u4e5f\u9677\u5165\u4e86\u4fdd\u62a4\u7528\u6237\u9690\u79c1\u548c\u6267\u6cd5\u673a\u6784\u548c\u653f\u5e9c\u673a\u6784\u8981\u6c42\u4e4b\u95f4\u7684\u56f0\u5883\u3002\u591a\u5bb6\u516c\u53f8\u7684\u653f\u5e9c\u5b98\u5458\u6279\u8bc4 Facebook \u5bf9\u5176 Messenger \u670d\u52a1\u8fdb\u884c\u52a0\u5bc6\uff0c\u56e0\u4e3a\u5b83\u4f7f\u68c0\u6d4b\u63cf\u7ed8\u513f\u7ae5\u6027\u5265\u524a\u7684\u5185\u5bb9\u53d8\u5f97\u66f4\u52a0\u56f0\u96be\u3002\u7814\u7a76\u4eba\u5458\u544a\u8bc9\u82f1\u56fd\u300a\u91d1\u878d\u65f6\u62a5\u300b\uff0c\u82f9\u679c\u7684\u51b3\u5b9a\u53ef\u80fd\u4f1a\u8feb\u4f7f\u5176\u4ed6\u516c\u53f8\u5b9e\u65bd\u7c7b\u4f3c\u7684\u76d1\u63a7\uff0c\u5e76\u4e14\u968f\u540e\u53ef\u80fd\u4f1a\u6269\u5c55\u5230\u5bf9\u513f\u7ae5\u6027\u8650\u5f85\u4ee5\u5916\u7684\u56fe\u50cf\u7684\u76d1\u63a7\uff0c\u4f8b\u5982\u6297\u8bae\u6d3b\u52a8\u4e2d\u7684\u53cd\u653f\u5e9c\u6807\u5fd7\u3002\u6ce8\u518c\u63a5\u6536\u6765\u81ea Insider \u7684\u901a\u77e5\uff01\u53ca\u65f6\u4e86\u89e3\u60a8\u60f3\u4e86\u89e3\u7684\u5185\u5bb9\u3002\n\u5f62\u6210\u201cX\u201d\u7684\u4e24\u6761\u200b\u200b\u4ea4\u53c9\u7ebf\u3002\u5b83\u6307\u793a\u4e00\u79cd\u5173\u95ed\u4ea4\u4e92\u6216\u5173\u95ed\u901a\u77e5\u7684\u65b9\u5f0f\u3002", "note_en": "By clicking \u2018Sign up\u2019, you agree to receive marketing emails from Insider as well as other partner offers and accept our  Terms of Service and  Privacy Policy.\n    Apple is reportedly planning to roll out  software that will scan US iPhone photos for images of child sexual abuse, the Financial Times reported on Thursday.\n Apple could announce more about the software in the coming week, according to the report, which cited security researchers familiar with Apple&#39;s plans.\n The software, reportedly called neuralMatch, is designed to look through images that have been stored on iPhones and uploaded to iCloud storage. According to the Financial Times, if the software detects child sexual abuse in a photo, it will then pass the material on to human reviewers who will alert law enforcement if they think the images are illegal.\n However, security experts warned that this could snowball beyond looking for child sexual abuse images.\n     &#34;Whether they turn out to be right or wrong on that point hardly matters. This will break the dam \u2014 governments will demand it from everyone,&#34; Matthew Green, a cryptographer at Johns Hopkins University, said on Twitter.\n  An Apple spokesperson did not immediately respond to Insider&#39;s request for comment, and the company declined to comment to the Financial Times.\n  This new software, if implemented, would likely please law enforcement and government agencies, but risks potential backlash from privacy activists. Apple has made privacy features a cornerstone of its marketing in recent years, advertising that  &#34;what happens on your iPhone stays on your iPhone.&#34;\n But there are limits to this promise, and tradeoffs. Apple  already monitors images sent from Apple devices for child abuse imagery, using a technique called &#34;hashing,&#34; and alerts law enforcement when the algorithm and an Apple employee detect suspected child abuse material. It also cooperates with law enforcement on lawful requests for information.\n     &#34;Our legal team reviews requests to ensure that the requests have a valid legal basis,&#34; Apple writes  on its website. &#34;If they do, we comply by providing data responsive to the request. If a request does not have a valid legal basis, or if we consider it to be unclear, inappropriate, or overly broad, we challenge or reject the request. We report on the requests every six months.&#34;\n In the past, Apple has  resisted government agencies&#39; requests for the company to install a back door that would allow law enforcement to access encrypted messages. New York City police and prosecutors have  criticized Apple&#39;s encryption technology for aiding criminals in hiding information from law enforcement.\n Other tech companies like Facebook have also been  caught between protecting users&#39; privacy and requests from law enforcement and government agencies. Government officials in multiple companies have criticized Facebook&#39;s encryption of its Messenger service for making it more difficult to detect content depicting child sexual exploitation.\n Researchers told the Financial Times that Apple&#39;s decision could pressure other companies into implementing similar kinds of monitoring and could later expand into monitoring of images beyond child sexual abuse, like anti-government signs held at protests.\n  Sign up for notifications from Insider! Stay up to date with what you want to know.\n            Two crossed lines that form an &#39;X&#39;. It indicates a way to close an interaction, or dismiss a notification.", "posttime": "2021-08-06 10:07:27", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "\u7f8e\u56fd,\u82f9\u679c,iphone,apple,\u6027\u8650\u5f85", "title": "\u5982\u679c\u4f60\u4f4f\u5728\u7f8e\u56fd\uff0c\u636e\u62a5\u9053\u82f9\u679c\u8ba1\u5212\u626b\u63cf\u4f60\u7684 iPhone \u4ee5\u67e5\u627e\u513f\u7ae5\u6027\u8650\u5f85\u56fe\u50cf", "title_en": "If you live in the US, Apple reportedly plans to scan your iPhone for child sexual abuse images", "transed": 1, "url": "https://www.businessinsider.com/apple-plans-software-scan-us-iphones-child-abuse-images-report-2021-8", "via": "", "real_tags": ["\u7f8e\u56fd", "\u82f9\u679c", "iphone", "apple", "\u6027\u8650\u5f85"]}, {"category": "", "categoryclass": "", "imagename": "c8b0ba6312be4d448f80c8c907859f98.png", "infoid": 1071697, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728 Trisha \u9152\u5427\u7684\u5395\u6240\u8bbe\u65bd\u4e2d\uff0c\u90a3\u4e2a\u5149\u8363\u7684 Soho \u8001\u5e78\u5b58\u8005\uff0c\u88c5\u9970\u7740 Al Capone \u548c\u6559\u7687\u7684\u7167\u7247\uff0c\u5728\u89c6\u7ebf\u9ad8\u5ea6\u4e0a\u5199\u7740\u4e00\u4e2a\u4f20\u8bf4\uff1a\u201c\u4ec5\u7528\u4f5c\u5c0f\u4fbf\u6c60\u3002\u6ca1\u6709\u5750\u3002\u9664\u4e86\u6709\u4eba\u2014\u2014\u6211\u76f8\u4fe1\u4ed6\u4eec\u901a\u5e38\u88ab\u79f0\u4e3a\u201cwag\u201d\u2014\u2014\u5728\u6700\u540e\u4e00\u4e2a\u8bcd\u4e2d\u63d2\u5165\u4e86\u4e00\u4e2a H\uff0c\u4f7f\u5176\u6210\u4e3a\u540c\u6837\u719f\u6089\uff08\u5e76\u4e14\u53ef\u4ee5\u8bf4\u66f4\u5408\u9002\uff09\u7684\u76ce\u683c\u9c81\u6492\u514b\u900a\u8bed\u3002\u8fd8\u662f\u5e94\u8be5\u662f\u539f\u59cb\u5370\u6b27\u8bed\u7cfb\uff1f\u6b63\u5982\u7ea6\u7ff0\u9ea6\u514b\u6c83\u7279\u5728\u4e5d\u4e2a\u8ba8\u538c\u7684\u8bcd\u4e2d\u544a\u8bc9\u6211\u4eec\u7684\u90a3\u6837\uff0c\u90a3\u4e2a\u88ab\u6d82\u9e26\u7684\u52a8\u8bcd\u7684\u5386\u53f2\uff08\u5c3d\u7ba1\uff0c\u6b63\u5982\u4ed6\u6240\u6307\u51fa\u7684\uff0c\u5b83\u4e5f\u53ef\u4ee5\u662f\u540d\u8bcd\u3001\u5f62\u5bb9\u8bcd\u3001\u4ee3\u8bcd\uff0c\u751a\u81f3\u201c\u7a0d\u4f5c\u8c03\u6574\u201d\u662f\u526f\u8bcd\uff09\u53ef\u4ee5\u8ffd\u6eaf\u5230skei \u8fd9\u4e2a\u8bcd\u2014\u2014\u88ab\u6614\u65e5\u7684\u8349\u539f\u5c45\u6c11\u4f7f\u7528\uff0c\u610f\u601d\u662f\u201c\u5207\u65ad\u201d\u3002\u8fd9\u771f\u7684\u5f88\u6709\u8da3\uff0c\u53ef\u4ee5\u5728\u5395\u6240\u91cc\u5b66\u4e60\u7684\u4e1c\u897f\u3002 Skei \u7684\u73b0\u4ee3\u540e\u88d4\u662f McWhorter \u5728\u8fd9\u90e8\u5145\u6ee1\u6d3b\u529b\u548c\u5b66\u672f\u6027\u7684\u4eb5\u6e0e\u5386\u53f2\u4e2d\u63cf\u8ff0\u7684\u4e5d\u4e2a\u8bcd\u4e4b\u4e00\u3002\u6b63\u5982\u60a8\u5728\u8bed\u8a00\u5b66\u6559\u6388\u7684\u4f5c\u54c1\u4e2d\u6240\u671f\u671b\u7684\u90a3\u6837\uff0c\u8bcd\u6e90\u5b66\u548c\u6df7\u86cb\u6545\u4e8b\u5728\u6bcf\u4e00\u7ae0\u4e2d\u5360\u636e\u4e86\u76f8\u5f53\u5927\u7684\u6bd4\u4f8b\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u795e\u8bdd\u6bd4\u62c9\u4e01\u8bed\u3001\u8bfa\u66fc\u8bed\u6216\u4e2d\u53e4\u82f1\u8bed\u8150\u8d25\u7684\u5b9e\u9645\u6848\u4f8b\u66f4\u5f15\u4eba\u5165\u80dc\u3002\u6709\u4e9b\u4eba\u8ba4\u4e3a\u5728 Trisha&#39;s \u5395\u6240\u89d2\u843d\u53d1\u73b0\u7684\u8fd9\u4e2a\u5c0f\u8bcd\u5b9e\u9645\u4e0a\u662f\u201cShip High in Transit\u201d\u7684\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd\u2014\u2014\u4e0e\u7caa\u4fbf\u7684\u6d77\u8fd0\u6709\u5173\uff0c\u4f46\u6b63\u5982\u9ea6\u514b\u6c83\u7279\u6307\u51fa\u7684\u90a3\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u5feb\u4e50\u7684\u8bcd\u65e9\u5728\u9e1f\u7caa\u8d38\u6613\u7206\u70b8\u4e4b\u524d\uff0c\u4e54\u53df\u548c\u5176\u4ed6\u4eba\u5c31\u5df2\u7ecf\u77e5\u9053\u4e86\u3002\u8fd8\u6709\u4e00\u4e9b\u4eba\u8ba4\u4e3a\uff0c\u6e90\u81ea\u4e00\u53ea\u6bcd\u72d7\u7684\u540d\u5b57\uff08\u6211\u4eec\u81f3\u5c11\u5728 1397 \u5e74\u5c31\u6709\u82f1\u6587\u8bb0\u5f55\uff09\u4ee3\u8868\u201c\u5b8c\u5168\u63a7\u5236\u8702\u871c\u201d\u3002\u60f3\u8c61\u739b\u683c\u4e3d\u7279\u00b7\u535a\u798f\u7279\u592b\u4eba\u6216\u4f0a\u4e3d\u838e\u767d\u00b7\u4f0d\u5fb7\u7ef4\u5c14\u4ee5\u743c\u00b7\u67ef\u6797\u65af\u7684\u65b9\u5f0f\u8bf4\u8bdd\u662f\u76f8\u5f53\u4ee4\u4eba\u6109\u5feb\u7684\u3002\u867d\u7136\u6211\u77e5\u9053\u636e\u8bf4\u662f\u201c\u5728\u56fd\u738b\u540c\u610f\u4e0b\u901a\u5978\u201d\u8fd9\u4e2a\u8bcd\u7684\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd\u7684\u8bcd\u6e90\u6709\u8bef\uff0c\u4f46\u5f97\u77e5\u8fd9\u4e2a\u8bcd\u7684\u7b2c\u4e00\u4e2a\u4e66\u9762\u7528\u6cd5\u6765\u81ea\u4e00\u4f4d\u795e\u804c\u4eba\u5458\u4e4b\u624b\u2014\u2014\u4e00\u4f4d\u50e7\u4fa3\uff0c\u4ed6\u5728 1528 \u5e74\u5728\u4e00\u4e9b\u65c1\u6ce8\u4e2d\u4f7f\u7528\u5b83\u6765\u6307\u4ee3\u4ed6\u660e\u663e\u4e0d\u559c\u6b22\u7684\u65b9\u4e08\u3002\u6211\u4e0d\u7981\u8ba4\u4e3a\uff0c\u4e0e\u901a\u5e38\u7684\u8fc2\u56de\u88ab\u52a8\u4fb5\u7565\u76f8\u53cd\uff0c\u8fd9\u79cd\u76f4\u767d\u7684\u8bf4\u6cd5\u4f1a\u6539\u5584\u6559\u4f1a\u65f6\u62a5\u7684\u4fe1\u4ef6\u9875\u9762\u3002\u8bf8\u5982\u4e0a\u8ff0\u8f76\u4e8b\u7684\u6765\u6e90\u8303\u56f4\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u3002\u4f8b\u5982\uff0c\u5728\u73b0\u5728\u65e0\u5904\u4e0d\u5728\u7684\u201c\u8be5\u6b7b\u201d\u548c\u201c\u5730\u72f1\u201d\u4e00\u7ae0\u4e2d\uff0c\u9ea6\u514b\u6c83\u7279\u5f15\u7528\u4e86\u5404\u79cd\u5404\u6837\u7684\u6765\u6e90\uff0c\u4f8b\u5982\u574e\u7279\u4f2f\u96f7\u6545\u4e8b\u4e2d\u7684\u8d66\u514d\u8005\u3001HMS Pinafore \u4e2d\u7684\u79d1\u514b\u5170\u8239\u957f\u548c\u5408\u6cd5\u91d1\u53d1\u5973\u90ce\uff1a\u97f3\u4e50\u5267\u7684\u5f00\u573a\u53f7\u7801\uff0c\u5176\u4e2d\uff0c\u6211\u5b66\u4f1a\u4e86\u6211\u7684\u718f\u9676\uff0c\u9898\u4e3a&#39;Omigod You Guys&#39;\u3002\u867d\u7136\u603b\u7684\u6765\u8bf4\u8fd9\u662f\u4e00\u672c\u5173\u4e8e\u7cbe\u5fc3\u90e8\u7f72\u7684\u5492\u9a82\u7684\u4e50\u8da3\u7684\u4e66\uff0c\u4f46\u6700\u540e\u4e00\u4e2a\u4f8b\u5b50\u786e\u5b9e\u8ba9\u6211\u6000\u7591\u4eb5\u6e0e\u6cd5\u5230\u5e95\u662f\u4e0d\u662f\u4e00\u4ef6\u574f\u4e8b\u3002\u4e5f\u8bb8\u56e0\u4e3a\u8fd9\u662f\u4e00\u672c\u5173\u4e8e\u8bed\u8a00\u53e3\u8bed\u4f7f\u7528\u7684\u4e66\uff0c\u5176\u4e2d\u7684\u7f8e\u56fd\u4e3b\u4e49\u4f3c\u4e4e\u6bd4\u8d77\u6e90\u4e8e\u5927\u897f\u6d0b\u5bf9\u5cb8\u7684\u5176\u4ed6\u4e66\u7c4d\u66f4\u5f15\u4eba\u6ce8\u76ee\u3002\u4f8b\u5982\uff0c\u5f53\u8ba8\u8bba\u5728 Trisha&#39;s \u7684\u5395\u6240\u4e2d\u5982\u6b64\u4f18\u96c5\u5730\u90e8\u7f72\u7684\u52a8\u8bcd\u7684\u8fc7\u53bb\u5f0f\u65f6\uff0cMcWhorter \u65ad\u8a00\u4e0e\u201cbat\u201d\u62bc\u97f5\u7684\u52a8\u8bcd\u5f62\u5f0f\u4f3c\u4e4e\u662f\u53d7\u5f71\u54cd\u7684\u6216\u201c\u62f1\u5f62\u201d\u3002\u5728\u8fd9\u4e2a\u56fd\u5bb6\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5c06\u201c\u62f1\u95e8\u201d\u4e0e\u8bfa\u57c3\u5c14\u00b7\u8003\u6c83\u5fb7 (No\u00ebl Coward) \u7684\u9ec4\u8702\u8f76\u4e8b\u8054\u7cfb\u8d77\u6765\uff0c\u4f46\u6211\u8ba4\u4e3a\uff0c\u4e0e\u4ee5\u7279\u5b9a\u8fc7\u53bb\u5206\u8bcd\u4e3a\u7279\u8272\u7684\u81ea\u6211\u73b7\u6c61\u6545\u4e8b\u65e0\u5173\u3002\u867d\u7136\u5173\u4e8e\u53e4\u8001\u7684\u810f\u8bdd\u7684\u7ae0\u8282\u5f88\u6709\u8da3\uff0c\u4f46\u4e66\u4e2d\u6700\u6709\u6548\u7684\u90e8\u5206\u662f\u90a3\u4e9b\u88ab\u8ba4\u4e3a\u662f\u771f\u6b63\u7981\u5fcc\u7684\u8bcd\u6c47\uff0c\u5373\u4f7f\u5728\u6211\u4eec\u8fd9\u6837\u5bbd\u5bb9\u7684\u793e\u4f1a\u4e2d\u3002\u5173\u4e8e\u8fd9\u4e2a\u8bcd\u7684\u7528\u6cd5\u88ab\u8ba4\u4e3a\u662f\u4ee4\u4eba\u53cd\u611f\u7684\uff0c\u4ee5\u81f3\u4e8e\u5b83\u5bfc\u81f4\u5176\u4e0d\u5e78\u7684\u8fd1\u540c\u97f3\u8bcd\u201cniggardly\u201d\uff08\u5317\u6b27\u8bed\u4e2d\u4e0e\u201cmiser\u201d\u65e0\u5173\u7684\u672f\u8bed\uff09\u8870\u843d\u7684\u4e00\u7ae0\u7279\u522b\u6709\u542f\u53d1\u6027\uff0c\u751a\u81f3\u611f\u4eba\u3002 McWhorter \u5728\u4ed6\u5173\u4e8e\u4e00\u6346\u68cd\u5b50\u7684\u65e7\u672f\u8bed\u7684\u7ae0\u8282\u4e2d\u540c\u6837\u654f\u611f\uff0c\u73b0\u5728\u66f4\u5e38\u7528\u6765\u8868\u793a\u201c\u9999\u70df\u201d\u3001\u201c\u8089\u4e38\u72b6\u6df7\u5408\u7269\u201d\u548c\u201c\u5bf9\u540c\u6027\u604b\u8005\u7684\u8bfd\u8c24\u201d\u3002\u8fd9\u672c\u4e66\u63d0\u9192\u6211\u4eec\uff0c\u6b63\u5982 McWhorter \u6240\u8bf4\uff0c\u810f\u8bdd\u65e2\u5177\u6709\u7e41\u6b96\u548c\u8fdb\u5316\u7684\u80fd\u529b\uff0c\u800c\u4e14\u66f4\u91cd\u8981\u7684\u662f\u5fc5\u4e0d\u53ef\u5c11\u3002\u5373\u4f7f\u5728\u4e00\u4e2a\u544a\u8bc9\u81ea\u5df1\u5b83\u73cd\u89c6\u201c\u8a00\u8bba\u81ea\u7531\u201d\u7684\u534a\u771f\u534a\u5047\u7684\u793e\u4f1a\u4e2d\uff0c\u786e\u5b9e\u5fc5\u987b\u6709\u4e00\u4e9b\u8d85\u8d8a\u82cd\u767d\u7684\u8bcd\u2014\u2014\u4ecd\u7136\u53ef\u4ee5\u4ee4\u4eba\u9707\u60ca\u3001\u6fc0\u52a8\u6216\u7f9e\u803b\u7684\u8bcd\u3002\u5e0c\u671b\u65e0\u8bba\u662f\u5bbd\u5bb9\u8fd8\u662f\u5979\u7684\u5b6a\u751f\u59d0\u59b9\u6e05\u6559\u4e3b\u4e49\uff0c\u90fd\u4e0d\u4f1a\u771f\u6b63\u9609\u5272\u82f1\u8bed\u4e2d\u66f4\u80ae\u810f\u3001\u66f4\u5371\u9669\u7684\u90e8\u5206\u3002", "note_en": "T he lavatory facilities at Trisha\u2019s bar, that glorious survivor of old Soho, adorned with photos of Al Capone and the pope, bear a legend written at eye level: \u2018USE AS URINAL ONLY. NO SITTING.\u2019 Except someone \u2013 I believe they are known usually as a \u2018wag\u2019 \u2013 has inserted an H into the final word, rendering it an equally familiar (and, arguably, more appropriate) piece of Anglo-Saxon. Or ought that to be Proto-Indo-European? As John McWhorter informs us in  Nine Nasty Words, the history of that graffitied verb (though, as he points out, it can also be a noun, an adjective, a pronoun and even \u2018with a bit of adjustment\u2019 an adverb) goes back to the word  skei \u2013  used by steppe dwellers of yore and meaning \u2018to cut off\u2019. It really is fascinating, the things one can learn in a lavatory.\n Skei\u2019s modern-day descendant is one of nine words profiled by McWhorter in this spirited and scholarly history of profanities. As you\u2019d expect in a work by a professor of linguistics, etymologies and tales of bastardisation form a sizeable proportion of each chapter. As is often the case, the myths are more fascinating than the actual cases of corruption of Latin, Norman or Middle English. There are people who believe that the little word found in the lavatorial corner of Trisha\u2019s is in fact an acronym for \u2018Ship High in Transit\u2019 \u2013 relating to the seaborne transport of manure, though, as McWhorter points out, it was a word bandied merrily about by Chaucer and others long before the explosion in the guano trade.\n There are also those who hold that the slur derived from the name of a female dog (of which we have written records in English from at least 1397) stands for \u2018Being in Total Control Honey\u2019. It\u2019s rather pleasing to imagine Lady Margaret Beaufort or Elizabeth Woodville speaking in the manner of Joan Collins. While I was aware of the erroneous etymology of the word said to be an acronym for \u2018Fornicating Under Consent of King\u2019, it was particularly wonderful to learn that this word\u2019s first written usage came from the hand of a cleric \u2013 a monk who in 1528 used it in some marginalia to refer to his clearly disliked abbot. I can\u2019t help but think the letters page of the  Church Times would be improved by such plain speaking, as opposed to the usual roundabout  passive aggression.\n The range of sources for anecdotes such as the one above is impressive. For instance, in the chapter on the now ubiquitous \u2018damn\u2019 and \u2018hell\u2019, McWhorter quotes sources as diverse as the Pardoner in  The Canterbury Tales, Captain Corcoran in  HMS Pinafore and the opening number of  Legally Blonde: The Musical,  which, I learned to my edification, is entitled \u2018Omigod You Guys\u2019 . While on the whole this is a book about the joys of well-deployed swearing, the final example did make me wonder whether blasphemy laws were such a bad thing after all.\n Perhaps because this is a book about language\u2019s colloquial use, the Americanisms within seem more noticeable than in other tomes originating on the opposite side of the Atlantic. For example, when discussing the past tense of the verb so elegantly deployed in the lavatories at Trisha\u2019s, McWhorter asserts that the form of the verb that rhymes with \u2018bat\u2019 seems affected or \u2018arch\u2019. In this country we might associate \u2018arch\u2019 with a waspish anecdote by No\u00ebl Coward, but not, I think, with tales of self-foulage that feature a particular past participle.\n While the chapters on the old familiar profanities are ripe with interest, the most effective sections of the book are those about words that are considered, even in a society as permissive as ours, to be truly taboo. The chapter on the word whose usage is considered so offensive that it has caused the decline of its unfortunate near-homophone \u2018niggardly\u2019 (an unrelated term from the Norse for \u2018miser\u2019) is particularly enlightening, moving even. McWhorter is equally as sensitive in his chapter on an old term for a bundle of sticks, which is now more commonly used to mean \u2018cigarette\u2019, \u2018meatballish concoction\u2019 and \u2018slur for a gay man\u2019.\n This book reminds us that profanities are both, as McWhorter puts it, \u2018fertile\u2019 in their ability to spawn and evolve and also, more importantly, essential. Even in a society which tells itself the half-truth that it treasures \u2018free speech\u2019, there are, indeed must be, words that are beyond the pale \u2013 words that can still shock, thrill or shame. It is to be hoped that neither permissiveness nor her twin sister, puritanism, will ever truly emasculate the English language of its nastier, danglier bits.", "posttime": "2021-08-06 09:59:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u56fd\u738b,consent,\u52a8\u8bcd", "title": "\u5728\u56fd\u738b\u7684\u540c\u610f\u4e0b\u901a\u5978", "title_en": "Fornicating Under Consent of King", "transed": 1, "url": "https://literaryreview.co.uk/fornicating-under-consent-of-king", "via": "", "real_tags": ["\u56fd\u738b", "consent", "\u52a8\u8bcd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071695, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "VisiData \u662f\u4e00\u79cd\u7528\u4e8e\u8868\u683c\u6570\u636e\u7684\u4ea4\u4e92\u5f0f\u591a\u529f\u80fd\u5de5\u5177\u3002\u5b83\u5c06\u7535\u5b50\u8868\u683c\u7684\u6e05\u6670\u6027\u3001\u7ec8\u7aef\u7684\u6548\u7387\u548c Python \u7684\u5f3a\u5927\u529f\u80fd\u7ed3\u5408\u5230\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u5b9e\u7528\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u6570\u767e\u4e07\u884c\u3002", "note_en": "VisiData is an interactive multitool for tabular data. It combines the clarity of a spreadsheet, the efficiency of the terminal, and the power of Python, into a lightweight utility which can handle millions of rows with ease.", "posttime": "2021-08-06 09:58:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,open,\u8868\u683c", "title": "VisiData \u2013 \u5f00\u6e90\u6570\u636e\u591a\u529f\u80fd\u5de5\u5177", "title_en": "VisiData \u2013 open-source data multitool", "transed": 1, "url": "https://www.visidata.org/", "via": "", "real_tags": ["\u5f00\u6e90", "open", "\u8868\u683c"]}, {"category": "", "categoryclass": "", "imagename": "1bdd0419bc9746cad6b18131c00d3d21.png", "infoid": 1071694, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6280\u672f\u503a\u52a1\uff0c\u7b3c\u7f69\u7740\u6bcf\u4e2a\u4ea7\u54c1\u56e2\u961f\u7684\u5e7d\u7075\u3002\u5b83\u963b\u788d\u529f\u80fd\uff0c\u7ed9\u5f00\u53d1\u4eba\u5458\u5e26\u6765\u538b\u529b\uff0c\u5e76\u4f7f\u5ba2\u6237\u611f\u5230\u6cae\u4e27\u3002\u56e2\u961f\u4e2d\u7684\u6bcf\u4e2a\u4eba\u90fd\u77e5\u9053\u8fd9\u4e00\u70b9\u3002\u56e2\u961f\u6210\u5458\u5728\u6bcf\u6b21\u56de\u987e\u3001\u4e8b\u540e\u5206\u6790\u548c\u4ea7\u54c1\u8d28\u91cf\u5ba1\u67e5\u4e2d\u90fd\u4f1a\u63d0\u5230\u5b83\u3002\u7136\u800c\uff0c\u5b83\u4ecd\u7136\u5b58\u5728\u3002\u6280\u672f\u503a\u52a1\u611f\u89c9\u4e0d\u53ef\u907f\u514d\u4e14\u4e0d\u673d\uff0c\u8fd9\u662f\u60a8\u7684\u56e2\u961f\u65e0\u6cd5\u9003\u907f\u7684\u5b58\u5728\u3002\u4f46\u662f\uff0c\u5c3d\u7ba1\u5b83\u7684\u540d\u58f0\u4e0d\u597d\uff0c\u4f46\u6280\u672f\u503a\u52a1\u5b9e\u9645\u4e0a\u53ef\u4ee5\u662f\u4e00\u4ef6\u597d\u4e8b\u2026\u2026\u5982\u679c\u7ba1\u7406\u5f97\u5f53\u3002\u6b63\u5982 Sandi Metz \u6240\u8bf4\uff0c\u201c\u5982\u679c\u5b83\u8ba9\u4f60\u611f\u89c9\u597d\u4e00\u4e9b\uff0c\u90a3\u4e48\u6709\u4e00\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4e00\u56e2\u7cdf\u89c6\u4e3a\u6210\u529f\u7684\u6807\u5fd7\u3002\u4f60\u7684\u7ade\u4e89\u5bf9\u624b\u6ca1\u6709\u6df7\u4e71\u7684\u539f\u56e0\u662f\u4ed6\u4eec\u5012\u95ed\u4e86\u3002\u4f60\u8d62\u4e86\uff0c\u4f60\u7684\u5956\u54c1\u662f\u4e00\u4e2a\u80cc\u53db\u65f6\u95f4\u8e42\u8e8f\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u201d\u6280\u672f\u503a\u52a1\u6765\u81ea\u5b66\u4e60\u548c\u6210\u957f\u3002\u5b83\u4f1a\u4e00\u76f4\u5728\u8fd9\u91cc\uff1b\u6211\u4eec\u7684\u76ee\u6807\u4e0d\u662f\u6d88\u706d\u5b83\uff0c\u800c\u662f\u9a6f\u670d\u5b83\u3002\u5b66\u4f1a\u63a5\u53d7\u6280\u672f\u503a\u52a1\u9700\u8981\u8bda\u5b9e\u5730\u5ba1\u89c6\u60a8\u7684\u4ea7\u54c1\u7684\u9700\u6c42\u548c\u80fd\u529b\u3002\u4f46\u5728\u8fd9\u91cc\u8981\u5c0f\u5fc3\u2014\u2014\u5f88\u5bb9\u6613\u5c48\u670d\u4e8e\u65b0\u8fd1\u504f\u89c1\u548c\u8fc7\u5ea6\u7d22\u5f15\u4f60\u7684\u56e2\u961f\u5728\u8fc7\u53bb\u51e0\u4e2a\u51b2\u523a\u4e2d\u7ecf\u5386\u7684\u75db\u82e6\u3002\u6700\u7ec8\uff0c\u76ee\u6807\u662f\u8ba9\u5f00\u8f9f\u65b0\u9053\u8def\u66f4\u5bb9\u6613\uff0c\u800c\u4e0d\u662f\u7ffb\u65b0\u65e7\u5730\u3002\u514b\u670d\u6280\u672f\u503a\u52a1\u9700\u8981\u4e00\u79cd\u5168\u9762\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u6765\u81ea\u5bf9\u5ba2\u6237\u9700\u6c42\u3001\u4ea7\u54c1\u7ec4\u7ec7\u7684\u4f18\u5148\u7ea7\u548c\u6574\u4f53\u4e1a\u52a1\u7684\u6df1\u5165\u4e86\u89e3\u3002\u5355\u72ec\u7406\u89e3\u6574\u4e2a\u753b\u9762\u662f\u4e0d\u53ef\u80fd\u7684\uff1b\u4f60\u9700\u8981\u4f9d\u8d56\u4f60\u7684\u76df\u53cb\u3002\u5728\u60a8\u6e05\u7406\u4ea7\u54c1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f88\u5bb9\u6613\u5c06\u60a8\u7684\u4ea7\u54c1\u7ecf\u7406\u6216\u5de5\u7a0b\u7ecf\u7406\u89c6\u4e3a\u5bf9\u624b\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u662f\u5173\u952e\u7684\u76df\u53cb\u3002\u5229\u7528\u4ed6\u4eec\u7684\u77e5\u8bc6\u548c\u89c2\u70b9\u6765\u5b8c\u5584\u60a8\u81ea\u5df1\u7684\u77e5\u8bc6\u548c\u89c2\u70b9\u3002\u63a5\u53d7\u6280\u672f\u503a\u52a1\u610f\u5473\u7740\u627f\u8ba4\u6ca1\u6709\u4efb\u4f55\u9879\u76ee\u662f\u4e07\u80fd\u7684\u3002\u53ea\u8981\u60a8\u7684\u4ea7\u54c1\u84ec\u52c3\u53d1\u5c55\uff0c\u603b\u4f1a\u6709\u53e6\u4e00\u4e2a\u9879\u76ee\u9700\u8981\u89e3\u51b3\u3002\u8ba9\u8fd9\u91ca\u653e\u4f60\u3002\u5c06\u6709\u66f4\u591a\u673a\u4f1a\u89e3\u51b3\u60a8\u9519\u8fc7\u7684\u4efb\u4f55\u95ee\u9898\u3002\u7136\u800c\uff0c\u8fd9\u610f\u5473\u7740\u4efb\u4f55\u6280\u672f\u9879\u76ee\u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u662f\u5efa\u7acb\u548c\u7ef4\u62a4\u4fe1\u4efb\uff0c\u4ee5\u4fbf\u60a8\u548c\u60a8\u7684\u56e2\u961f\u80fd\u591f\u6210\u529f\u5730\u5904\u7406\u672a\u6765\u7684\u9879\u76ee\u3002\u4fe1\u4efb\u59cb\u4e8e\u5468\u5230\u7684\u5408\u4f5c\u3002\u5c3d\u65e9\u5f00\u59cb\u4e0e\u5229\u76ca\u76f8\u5173\u8005\u7684\u5bf9\u8bdd\u3002\u5c06\u60f3\u6cd5\u4f20\u9012\u7ed9\u60a8\u7684 PM \u548c EM\uff0c\u5e76\u4ece\u60a8\u7684\u961f\u53cb\u90a3\u91cc\u5bfb\u6c42\u53cd\u9988\u3002\u5728\u56e2\u961f\u4e2d\u5de5\u4f5c\u65f6\uff0c\u601d\u8003\u53d8\u6210\u4e86\u4e00\u79cd\u96c6\u4f53\u6d3b\u52a8\u3002\u6709\u6548\u7684\u6280\u672f\u503a\u52a1\u9879\u76ee\u59cb\u4e8e\u8bbe\u5b9a\u79ef\u6781\u7684\u76ee\u6807\u3002\u5f88\u5bb9\u6613\u9677\u5165\u6839\u636e\u8fc7\u53bb\u6279\u51c6\u7684\u5185\u5bb9\u786e\u5b9a\u9879\u76ee\u8303\u56f4\u7684\u9677\u9631\uff0c\u8fc7\u65e9\u5730\u526a\u6389\u90e8\u5206\u4ee5\u5c1d\u8bd5\u4f7f\u5176\u9002\u5408\u3002\u8def\u7ebf\u56fe\u89c4\u5212\u662f\u5bf9\u8d44\u6e90\u7684\u534f\u5546\uff1a\u516c\u53f8\u5fc5\u987b\u5c06\u6709\u9650\u7684\u65f6\u95f4\u3001\u4eba\u5458\u548c\u8d44\u91d1\u5206\u6563\u5230\u4e0d\u65ad\u589e\u957f\u7684\u7ade\u4e89\u4f18\u5148\u4e8b\u9879\u6e05\u5355\u4e0a\u3002\n\u8ba9\u8def\u7ebf\u56fe\u89c4\u5212\u53d1\u6325\u4f5c\u7528\uff1a\u5c06\u60a8\u7684\u5efa\u8bae\u4e0e\u5176\u4ed6\u5efa\u8bae\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u786e\u5b9a\u5982\u4f55\u4f7f\u4e8b\u60c5\u9002\u5408\u3002\u8bd5\u56fe\u9884\u6d4b\u9886\u5bfc\u5982\u4f55\u4f18\u5148\u8003\u8651\u60a8\u7684\u9879\u76ee\u610f\u5473\u7740\u60a8\u53ef\u80fd\u4f1a\u9519\u8fc7\u8d44\u6e90\uff0c\u6216\u8005\u5728\u9700\u8981\u59a5\u534f\u65f6\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u53ef\u4ee5\u524a\u51cf\u3002\u4e00\u4e2a\u597d\u7684\u8ba1\u5212\u5e94\u8be5\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u53cd\u9988\uff0c\u5f15\u53d1\u5173\u4e8e\u8def\u7ebf\u56fe\u3001\u4ea7\u54c1\u7684\u6574\u4f53\u6280\u672f\u5065\u5eb7\u72b6\u51b5\u3001\u56e2\u961f\u4f18\u52bf\u7b49\u7684\u8ba8\u8bba\u3002\u4f60\u5fc5\u987b\u8bda\u5b9e\u5730\u5bf9\u5f85\u6bcf\u4e00\u6b21\u5bf9\u8bdd\u3002\u8fc7\u5ea6\u63a8\u9500\u4e00\u4e2a\u9879\u76ee\u4ee5\u8bd5\u56fe\u83b7\u5f97\u6279\u51c6\u4f1a\u5728\u60a8\u7684\u4ea7\u54c1\u7ecf\u7406\u7684\u8111\u6d77\u4e2d\u4ea7\u751f\u5bf9\u8be5\u9879\u76ee\u7684\u626d\u66f2\u770b\u6cd5\u3002\u4ed6\u4eec\u5c06\u6839\u636e\u60a8\u63d0\u4f9b\u7684\u7ed3\u679c\u8fdb\u884c\u8ba1\u5212\uff0c\u671f\u671b\u8be5\u9879\u76ee\u65e0\u9700\u8fdb\u4e00\u6b65\u7684\u6280\u672f\u5de5\u4f5c\u5373\u53ef\u89e3\u9501\u67d0\u4e9b\u529f\u80fd\u3002\u5feb\u901f\u5931\u53bb\u4fe1\u4efb\u7684\u65b9\u6cd5\u662f\u8bbe\u5b9a\u9519\u8bef\u7684\u671f\u671b\u3002\u4e00\u65e6\u5931\u53bb\u4fe1\u4efb\uff0c\u672a\u6765\u7684\u9879\u76ee\u5c31\u5c8c\u5c8c\u53ef\u5371\u3002\u8bbe\u5b9a\u660e\u786e\u548c\u8bda\u5b9e\u7684\u671f\u671b\u3002\u5173\u6ce8\u5373\u5c06\u63a8\u51fa\u7684\u529f\u80fd\u7684\u5f71\u54cd\uff0c\u8fd9\u4e9b\u529f\u80fd\u9884\u8ba1\u5c06\u4fdd\u6301\u76f8\u5bf9\u7a33\u5b9a\u3002\u8981\u5177\u4f53\u5e76\u4e13\u6ce8\u4e8e\u7ed3\u679c\uff1a\u5b83\u662f\u5426\u5f00\u542f\u4e86\u6211\u4eec\u4e4b\u524d\u8ba4\u4e3a\u6210\u672c\u592a\u9ad8\u800c\u65e0\u6cd5\u5c1d\u8bd5\u7684\u4e00\u7c7b\u5de5\u4f5c\uff1f\u6709\u65f6\u60a8\u7684\u8ba1\u5212\u4f1a\u88ab\u62d2\u7edd\u3002\u4e5f\u8bb8\u65f6\u673a\u4e0d\u5bf9\uff0c\u6216\u8005\u5173\u952e\u7684\u5229\u76ca\u76f8\u5173\u8005\u4e0d\u540c\u610f\u4f60\u7684\u5206\u6790\u3002\u4e0d\u7ba1\u662f\u4ec0\u4e48\u539f\u56e0\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u73b0\u5728\u7684\u201c\u4e0d\u201d\u53ef\u80fd\u5728\u672a\u6765\u53d8\u6210\u201c\u662f\u201d\u3002\u5982\u679c\u60a8\u5bf9\u8fd9\u9879\u6295\u8d44\u5145\u6ee1\u70ed\u60c5\uff0c\u8bf7\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u518d\u6b21\u5c1d\u8bd5\u63a8\u9500\u5b83\uff0c\u5e76\u4e14\u60a8\u5df2\u7ecf\u6709\u673a\u4f1a\u5bf9\u5176\u8fdb\u884c\u6539\u8fdb\u3002\u5982\u679c\u53ef\u4ee5\uff0c\u5c06\u8ba1\u5212\u6401\u7f6e\u4e00\u65c1\uff0c\u5e76\u5c1d\u8bd5\u627e\u5230\u53ef\u4ee5\u964d\u4f4e\u6295\u8d44\u6210\u672c\u6216\u98ce\u9669\u7684\u8f83\u5c0f\u6b65\u9aa4\uff0c\u4f8b\u5982\u56e2\u961f\u53ef\u4ee5\u5728\u65e5\u5e38\u529f\u80fd\u5de5\u4f5c\u4e2d\u673a\u4f1a\u6027\u5730\u5904\u7406\u7684\u5de5\u4f5c\u3002\n\u672a\u6765\u4e09\u4e2a\u6708\u90fd\u65e0\u6cd5\u9884\u6d4b\uff0c\u66f4\u4e0d\u7528\u8bf4\u4e00\u5e74\u4e86\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u60a8\u7684\u76ee\u6807\u4e0d\u662f\u6b63\u786e\u7684\uff1b\u4f60\u7684\u76ee\u6807\u662f\u907f\u514d\u72af\u9519\u3002\u4e0d\u8981\u8ffd\u6c42\u5b8c\u7f8e\u3002\u6bcf\u4e2a\u9879\u76ee\u90fd\u662f\u6cbf\u7740\u8def\u5f84\u7684\u4e00\u6b65\u3002\u8ba9\u6bcf\u4e00\u6b65\u90fd\u6709\u610f\u4e49\u9700\u8981\u77e5\u9053\u4f60\u8981\u53bb\u54ea\u91cc\u3002\u628a\u4f60\u7684\u957f\u671f\u6280\u672f\u613f\u666f\u60f3\u8c61\u6210\u4e00\u4e2a\u6307\u5357\u9488\u2014\u2014\u5b83\u8ba9\u4f60\u5bf9\u4f60\u7684\u56e2\u961f\u9700\u8981\u524d\u8fdb\u7684\u65b9\u5411\u6709\u4e00\u4e2a\u5927\u81f4\u7684\u4e86\u89e3\u3002\u901a\u8fc7\u5c06\u8fc7\u53bb\u7684\u4f24\u5bb3\u4e0e\u60a8\u7684\u4ea7\u54c1\u672a\u6765\u7684\u53d1\u5c55\u65b9\u5f0f\u76f8\u7ed3\u5408\uff0c\u60a8\u5c06\u80fd\u591f\u5236\u5b9a\u66f4\u51c6\u786e\u7684\u957f\u671f\u613f\u666f\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u4f1a\u53d1\u73b0\u60a8\u7684\u4ea7\u54c1\u7ecf\u7406\u5728\u6b64\u8fc7\u7a0b\u4e2d\u7684\u6295\u5165\u662f\u65e0\u4ef7\u7684\u3002\u4e0e\u60a8\u7684 PM \u5bc6\u5207\u5408\u4f5c\u5c06\u6539\u5584\u60a8\u548c\u4ed6\u4eec\u7684\u8ba1\u5212\u3002\u5b83\u5c06\u63d0\u4f9b\u81ea\u7136\u7684\uff0c\u751a\u81f3\u662f\u663e\u800c\u6613\u89c1\u7684\u673a\u4f1a\uff0c\u5c06\u60a8\u7684\u9879\u76ee\u5305\u542b\u5728\u4ea7\u54c1\u8def\u7ebf\u56fe\u4e2d\u3002\u4e00\u65e6\u4f60\u627e\u5230\u4e86\u673a\u4f1a\uff0c\u6311\u6218\u6027\u7684\u5de5\u4f5c\u5c31\u5f00\u59cb\u4e86\u3002\u9996\u5148\u8ba9\u4f60\u7684\u8ba1\u5212\u6613\u4e8e\u7406\u89e3\u3002\u4f5c\u4e3a\u4ea7\u54c1\u56e2\u961f\u8fdb\u884c\u6280\u672f\u6295\u8d44\u7684\u4e0d\u5e78\u73b0\u5b9e\u662f\uff0c\u60a8\u7684\u9996\u8981\u4efb\u52a1\u548c\u6700\u7ec8\u4f18\u5148\u4e8b\u9879\u662f\u4ea4\u4ed8\u76f4\u63a5\u5f71\u54cd\u4e1a\u52a1\u76ee\u6807\u7684\u529f\u80fd\u3002\u6b63\u5982\u5f53\u516c\u53f8\u7684\u76ee\u6807\u6216\u9884\u6d4b\u53d1\u751f\u53d8\u5316\u65f6\u9762\u5411\u5ba2\u6237\u7684\u9879\u76ee\u53ef\u80fd\u4f1a\u7f29\u51cf\u6216\u53d6\u6d88\u4e00\u6837\uff0c\u6280\u672f\u9879\u76ee\u901a\u5e38\u4e5f\u9700\u8981\u6401\u7f6e\u3002\u5e76\u975e\u6bcf\u4e2a\u66f4\u6539\u90fd\u9700\u8981\u53ef\u53d1\u5e03\uff0c\u4f46\u9879\u76ee\u5e94\u8be5\u6709\u5b9a\u671f\u7684\u201c\u68c0\u67e5\u70b9\u201d\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u6309\u4e0b\u5f39\u51fa\u6309\u94ae\u800c\u5c3d\u91cf\u51cf\u5c11\u6df7\u4e71\u3002\u7834\u574f\u9879\u76ee\u53ef\u80fd\u6d89\u53ca\u56de\u6eda\u5df2\u7ecf\u63d0\u4ea4\u7684\u4ee3\u7801\u3002\u4e0d\u8fc7\u4e0d\u8981\u7d27\u5f20\u2014\u2014\u4ee3\u7801\u5f88\u4fbf\u5b9c\u3002\u91cd\u8981\u7684\u662f\u4f60\u4ece\u5c1d\u8bd5\u4e2d\u5b66\u5230\u4e86\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u4e1c\u897f\uff0c\u4f7f\u4e0b\u4e00\u6b21\u5c1d\u8bd5\u66f4\u6210\u529f\u3002\u5728\u60a8\u5c06\u9879\u76ee\u5206\u89e3\u6210\u53ef\u6d88\u5316\u7684\u5757\u4e4b\u540e\uff0c\u662f\u65f6\u5019\u8ba9\u5b83\u4eec\u53d8\u5f97\u66f4\u53ef\u53e3\u4e86\u3002\u60a8\u7684 PM \u9700\u8981\u80fd\u591f\u5c06\u60a8\u7684\u8ba1\u5212\u51fa\u552e\u7ed9\u4ed6\u4eec\u7684\u8001\u677f\u6216\u4ed6\u4eec\u8001\u677f\u7684\u8001\u677f\u3002\u4e0d\u8981\u8ba9\u4ed6\u4eec\u8bd5\u56fe\u4ec5\u51ed\u6280\u672f\u4f18\u70b9\u6765\u63a8\u9500\u5b83\u3002\u9996\u5148\u5173\u6ce8\u60a8\u7684\u8ba1\u5212\u5c06\u542f\u7528\u7684\u7279\u5b9a\u529f\u80fd\u548c\u7528\u4f8b\u3002\u63a5\u4e0b\u6765\uff0c\u5b66\u4e60\u5229\u7528\u53d8\u5316\u3002\u4e00\u4e2a\u666e\u904d\u7684\u770b\u6cd5\u662f\uff0c\u6280\u672f\u503a\u52a1\u9879\u76ee\u4e0d\u5e94\u4ea7\u751f\u4efb\u4f55\u529f\u80fd\u53d8\u5316\u3002\u4f46\u8fd9\u662f\u4e0d\u5207\u5b9e\u9645\u7684\u671f\u671b\u3002\u590d\u6742\u7cfb\u7edf\u4e2d\u7684\u91cd\u5927\u6280\u672f\u5de5\u4f5c\u4f1a\u5bfc\u81f4\u529f\u80fd\u7684\u610f\u5916\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u4e0e\u5176\u907f\u514d\u6539\u53d8\uff0c\u4e0d\u5982\u5229\u7528\u5b83\u3002\u8981\u6709\u6218\u7565\u773c\u5149\u3002\u4f5c\u4e3a\u6280\u672f\u503a\u52a1\u6e05\u7406\u7684\u4e00\u90e8\u5206\uff0c\u5bfb\u627e\u4e0e\u5f53\u524d\u4f18\u5148\u4e8b\u9879\u76f8\u534f\u8c03\u7684\u4ea7\u54c1\u6539\u8fdb\u3002\u9080\u8bf7\u8bbe\u8ba1\u548c\u4ea7\u54c1\u56e2\u961f\u5728\u9879\u76ee\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u5e2e\u52a9\u60a8\u8bc6\u522b\u5c0f\u7684\u66f4\u6539\uff0c\u4f8b\u5982\u4fee\u6539\u4e00\u4e9b\u65e7 UI \u6216\u6e05\u7406\u4e0d\u4e00\u81f4\u7684\u4ea4\u4e92\u3002\n\u5f53\u7136\uff0c\u66f4\u91cd\u8981\u7684\u6539\u8fdb\u662f\u975e\u5e38\u68d2\u7684\u2026\u2026\u5f53\u5b83\u4eec\u523a\u6fc0\u8fdb\u4e00\u6b65\u7684\u6280\u672f\u6295\u8d44\u800c\u4e0d\u662f\u5206\u6563\u6ce8\u610f\u529b\u65f6\u3002\u6700\u7ec8\u76ee\u6807\u662f\u627e\u5230\u53ef\u4ee5\u50cf\u5728\u5e38\u89c4\u529f\u80fd\u5de5\u4f5c\u4e2d\u4e00\u6837\u5229\u7528\u4e92\u8865\u4ea7\u54c1\u548c\u6280\u672f\u6295\u8d44\u7684\u65b9\u6cd5\u3002\u60a8\u53ef\u80fd\u719f\u6089\u526a\u7eb8\u7968\u3002\u8fd9\u662f\u4e0d\u65ad\u88ab\u60a8\u7684 CS \u56e2\u961f\u91cd\u65b0\u6253\u5f00\u7684\u7968\uff0c\u6216\u8005\u662f\u60a8\u5728\u5f85\u529e\u4e8b\u9879\u68b3\u7406\u4e2d\u8df3\u8fc7\u7684\u7968\uff0c\u56e0\u4e3a\u6709\u66f4\u591a\u5173\u952e\u5de5\u4f5c\u8981\u505a\u3002\u4f60\u77e5\u9053\u4f60\u53ef\u4ee5\u5728\u534a\u5929\u5185\u89e3\u51b3\u5b83\uff0c\u9876\uff0c\u5982\u679c\u4f60\u80fd\u628a\u5b83\u62c9\u8fdb\u51b2\u523a\u3002\u4f46\u662f\u901a\u8fc7\u4e00\u4e9b\u5de5\u4f5c\uff0c\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6c38\u8fdc\u88ab\u5ffd\u89c6\u7684\u95e8\u7968\u8f6c\u5316\u4e3a\u91cd\u8981\u4ef7\u503c\u7684\u6765\u6e90\u3002\u5173\u952e\u662f\u5efa\u7acb\u4e00\u4e2a\u53ef\u6301\u7eed\u7684\u8fc7\u7a0b\uff0c\u5c06\u526a\u7eb8\u6b63\u5e38\u5316\u5230\u4f60\u7684\u51b2\u523a\u8ba1\u5212\u4e2d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u5fc5\u5f88\u590d\u6742\u3002\u4f8b\u5982\uff0c\u6211\u7684\u56e2\u961f\u786e\u5b9a\u7684\u6d41\u7a0b\u662f\u201c\u5feb\u901f\u8d62\u5f97\u51b2\u523a\u201d\u3002\u7ecf\u8fc7\u51e0\u6b21\u51b2\u523a\u540e\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u4e0d\u4ec5\u62c9\u4e00\u4e24\u4e2a\u526a\u7eb8\u5bf9\u529f\u80fd\u8282\u594f\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\uff0c\u800c\u4e14\u6211\u4eec\u4e4b\u524d\u8ba4\u4e3a\u4e0d\u91cd\u8981\u7684\u7968\u5bf9\u6211\u4eec\u7684\u5ba2\u6237\u6765\u8bf4\u5177\u6709\u91cd\u8981\u4ef7\u503c\u3002\u6b64\u5916\uff0c\u8d4b\u4e88\u526a\u7eb8\u4ef7\u503c\u7684\u51b3\u5b9a\u6539\u53d8\u4e86\u6211\u4eec\u8c08\u8bba\u95ee\u9898\u7684\u65b9\u5f0f\u3002\u5173\u4e8e\u75db\u70b9\u7684\u5bf9\u8bdd\u4ee5\u524d\u4ee5\u65e0\u5948\u7684\u53f9\u606f\u544a\u7ec8\uff0c\u7ed3\u679c\u5374\u662f\u4e00\u5f20\u65b0\u7684\u526a\u7eb8\u3002\u90a3\u4e2a\u526a\u7eb8\u53d8\u6210\u4e86\u4e0b\u4e00\u6b21\u5f85\u529e\u4e8b\u9879\u68b3\u7406\u65f6\u7684\u8ba8\u8bba\u3002\u5b83\u6210\u4e3a\u5c06\u6211\u4eec\u7684\u6280\u672f\u503a\u52a1\u80cc\u666f\u5316\u7684\u5de5\u5177\u3002\u4e00\u4e2a\u597d\u7684 PM \u4f1a\u6ce8\u610f\u5230\u6a21\u5f0f\u3002\u5982\u679c\u526a\u7eb8\u56e0\u4e3a\u6280\u672f\u503a\u52a1\u4f7f\u5b83\u4eec\u6210\u672c\u8fc7\u9ad8\u800c\u4e0d\u65ad\u5173\u95ed\uff0c\u90a3\u4e48\u8fdf\u65e9\uff0cPM \u5c06\u9700\u8981\u4e86\u89e3\u539f\u56e0\u3002\u8fd9\u5c31\u50cf\u4e00\u4e2a\u96ea\u7403\u4ece\u5c71\u4e0a\u6eda\u4e0b\u6765\u3002\u6bcf\u5b8c\u6210\u4e00\u9879\u4efb\u52a1\uff0c\u62bd\u8c61\u7684\u6280\u672f\u95ee\u9898\u5c31\u4f1a\u53d8\u5f97\u66f4\u52a0\u5177\u4f53\u3001\u66f4\u52a0\u6709\u5f62\uff0c\u76f4\u5230\u4e0d\u53ef\u907f\u514d\u3002\u76f4\u5230\u95ee\u9898\u7684\u4e25\u91cd\u6027\u50cf\u96ea\u5d29\u4e00\u6837\u538b\u5728\u4f60\u8eab\u4e0a\u3002\u8ba9\u4ea7\u54c1\u4e89\u8fa9\u8bf4\u56e2\u961f\u9700\u8981\u89e3\u51b3\u4e00\u4e2a\u6280\u672f\u95ee\u9898\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u62c5\u5fc3\u5982\u4f55\u5904\u7406\u5b83\u3002", "note_en": "Tech debt, the specter looming over every product team. It hobbles features, stresses developers, and frustrates customers. Everyone on the team is aware of it. Team members mention it in every retro, post mortem, and product quality review. Yet, it persists. Tech debt feels inevitable and immortal, a presence your team cannot escape.\n  But despite its bad rap,  tech debt can actually be a good thing...when it\u2019s managed well. As  Sandi Metz says, \u201cIf it makes you feel any better, there&#39;s a way in which having a big mess is a sign of success. The reason your competitors don&#39;t have messes is that they went out of business. You won, and your prize is an application that betrays the ravages of time.\u201d Tech debt comes from learning and growing. It will always be here; our goal isn\u2019t to eliminate it but to tame it.\n Learning to accept tech debt requires taking an honest look at your product\u2019s needs and capabilities. But be careful here \u2014 it&#39;s easy to succumb to recency bias and over-index on the pain your team experienced in the last couple of sprints. Ultimately, the goal is to make it easier to forge new paths, not to retread old ground.\n Taming tech debt requires  a holistic approach that comes from a deep understanding of your customer needs, the product org\u2019s priorities, and the overall business. It is impossible to understand the whole picture alone; you need to rely on your allies. On your journey to clean up the product, it\u2019s easy to think of your Product Manager or your Engineering Manager as antagonists. Instead, they are critical allies. Leverage their knowledge and perspective to round out your own.\n Accepting tech debt means acknowledging that  no project will be a panacea. As long as your product is flourishing, there will always be another project to tackle. Let this free you. There will be more chances to address anything that you missed.\n However, this means that one of the primary goals of any technical project is building and maintaining trust, so that you and your team can successfully tackle future projects. Trust starts with considerate collaboration. Start conversations with stakeholders early. Run ideas past your PM and EM and seek feedback from your teammates. When working on a team, thinking becomes a group activity.\n  Effective tech debt projects start with setting aggressive goals. It can be easy to fall into the trap of scoping your project according to what\u2019s been approved in the past, prematurely cutting pieces off to try and make it fit. Roadmap planning is a negotiation for resources: the finite time, people, and money the company has to spread over an ever-growing list of competing priorities.\n Let roadmap planning do its job: comparing your proposal to the others to determine how to make things fit. Trying to predict how leadership would prioritize your project means you might miss out on resources or not have anything to cut when a compromise is needed.\n A good plan should generate a lot of feedback, sparking discussion about the roadmap, the overall technical health of the product, team strengths, etc. You must approach each of these conversations with honesty.\n Overselling a project to try and get it approved creates a warped perception of the project in your Product Manager\u2019s mind. They will plan based on the outcome you presented, expecting the project to unlock certain capabilities without further technical work. A quick way to lose trust is by setting up false expectations.  Once trust has been lost, future projects are in jeopardy.\n Set clear and honest expectations. Focus on the impact of upcoming features, which are projected to stay relatively stable. Be concrete and concentrate on outcomes:\n Does it unlock a class of work we previously thought was too costly to attempt?\n Sometimes your plan will get rejected. Maybe the timing is wrong, or a critical stakeholder disagreed with your analysis. Whatever the reason, remember that what\u2019s a \u2018no\u2019 right now could become a \u2018yes\u2019 in the future.\n If you\u2019re passionate about this investment, try pitching it again after some time passes and you\u2019ve had a chance to refine it. If you can, put the plan aside and try to find smaller steps that can make the investment less costly or risky, such as work the team can tackle opportunistically during routine feature work.\n  The future is impossible to predict three months out, let alone a year. But remember, your goal isn\u2019t to be right;  your goal is to avoid being wrong. Don\u2019t seek perfection. Each project is a single step along the path. And making each step worthwhile requires knowing where you are going. Think of your long-term technical vision like a compass \u2014 it gives you a general sense of the direction in which your team needs to move.\n By synthesizing what\u2019s hurt you in the past with how your product will evolve in the future, you\u2019ll be able to develop a more accurate long-term vision. Here you\u2019ll find that the input of your Product Manager in this process is invaluable. Close collaboration with your PM will improve both your plan and theirs. It will provide natural, even obvious, opportunities to include your project in the product roadmap. Once you\u2019ve found the opportunity, the challenging work begins.\n Start by making your plan digestible. The unfortunate reality of making technical investments as a product team is that your first and ultimate priority is shipping features that directly impact business goals. Just as a customer-facing project may get scaled back or canceled when the company\u2019s goals or projections shift, so too, technical projects often need to be left undone.\n Not every change needs to be releasable, but a project should have regular \u201ccheckpoints\u201d where the eject button can be pressed with minimal mess. Scuttling the project may involve rolling back code that was already committed. Don\u2019t stress though \u2014 code is cheap. The important thing is that you learn something valuable from the attempt to make the next attempt more successful.\n After you\u2019ve broken down the project into digestible chunks, it\u2019s time to make them more palatable. Your PM needs to be able to sell your plan to their boss or their boss\u2019s boss. Don\u2019t make them try to pitch it on technical merits alone. Start by focusing on the specific features and use cases that your plan will enable. Next, learn to leverage change.\n A common belief is that tech debt projects should yield no functional change. But that\u2019s an unrealistic expectation. Significant technical work in complex systems will cause accidental changes in functionality. So  instead of avoiding change, take advantage of it.\n Be strategic. As part of the tech debt cleanup, look for product improvements that harmonize with current priorities. Invite the design and product teams to help you identify small changes, like touching up some legacy UI or cleaning up an inconsistent interaction, in each step of the project.\n Of course, more significant improvements are fantastic\u2026 when they spur on further technical investment rather than distract from it. The end goal is to find ways that you can capitalize on complementary product and tech investments like you would during regular feature work.\n  You might be familiar with the papercut ticket. It\u2019s the ticket that keeps getting reopened by your CS team, or the ticket you skip over in backlog grooming because there\u2019s more critical work to do. You know you could fix it in half a day, tops, if you could just pull it into a sprint.\n But with a bit of work, you can turn these perpetually overlooked tickets into a source of significant value.  The key is establishing a sustainable process that normalizes pulling papercuts into your sprint planning. This process doesn\u2019t have to be complex. For example, the process my team settled on is \u201cpull in one quick win a sprint.\u201d After a few sprints, we noticed that not only did pulling in a papercut or two had little impact on feature cadence, but also the tickets we had previously believed were unimportant had significant value for our customers.\n Further, the decision to give papercuts value transformed how we talked about issues. Conversations about pain points that had previously ended in resigned sighs, resulted instead in a new papercut. That papercut turned into a discussion at the next backlog grooming. It became a tool for contextualizing our tech debt.\n A good PM notices patterns. If papercuts keep getting closed because tech debt makes them too costly, sooner or later, PMs will need to understand why. It\u2019s like a snowball rolling down a hill. With each task that\u2019s closed, the abstract technical problem becomes a little more concrete, a little more tangible, until it\u2019s unavoidable. Until the magnitude of the problem crashes down on you like an avalanche.  Let the product argue that the team needs to address a technical issue so you can worry about how to handle it.", "posttime": "2021-08-06 09:53:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u505c\u6b62,stop,\u9879\u76ee", "title": "\u6211\u662f\u5982\u4f55\u5b66\u4f1a\u505c\u6b62\u62c5\u5fc3\u548c\u70ed\u7231\u6280\u672f\u503a\u52a1\u7684", "title_en": "How I Learned to Stop Worrying and Love Tech Debt", "transed": 1, "url": "https://heap.io/blog/how-i-learned-to-stop-worrying-and-love-tech-debt", "via": "", "real_tags": ["\u505c\u6b62", "stop", "\u9879\u76ee"]}, {"category": "", "categoryclass": "", "imagename": "2162aa1d90a14ba4e38ed8015bffe4c7.jpg", "infoid": 1071693, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\uff08\u534e\u76db\u987f\u7279\u533a\uff09\u53f8\u6cd5\u89c2\u5bdf\u548c\u533b\u5b66\u8fdb\u6b65\u4e2d\u5fc3 (CMP) \u4eca\u5929\u5ba3\u5e03\uff0c\u4ed6\u4eec\u4ece\u7f8e\u56fd\u536b\u751f\u4e0e\u516c\u5171\u670d\u52a1\u90e8\u6536\u5230\u4e86 252 \u9875\u7684\u65b0\u6587\u4ef6\uff0c\u5176\u4e2d\u663e\u793a\u8fd1 300 \u4e07\u7f8e\u5143\u7684\u8054\u90a6\u8d44\u91d1\u7528\u4e8e\u5339\u5179\u5821\u5927\u5b66\u7684\u5bfb\u6c42\u6210\u4e3a 6 \u81f3 42 \u5468\u598a\u5a20\u671f\u4eba\u7c7b\u80ce\u513f\u7ec4\u7ec7\u7684\u201c\u7ec4\u7ec7\u4e2d\u5fc3\u201d\u3002\u8fd9\u4e9b\u6587\u4ef6\u662f\u4f5c\u4e3a\u4fe1\u606f\u81ea\u7531\u6cd5 (FOIA) \u8bc9\u8bbc\u7684\u4e00\u90e8\u5206\u83b7\u5f97\u7684\uff0c\u5728\u8be5\u8bc9\u8bbc\u4e2d\uff0c\u53f8\u6cd5\u89c2\u5bdf\u4ee3\u8868 CMP \u5e76\u5728 HHS \u672a\u80fd\u56de\u5e94 2020 \u5e74 4 \u6708 28 \u65e5\u7684 FOIA \u8bf7\u6c42\u540e\u8d77\u8bc9 HHS\u5339\u5179\u5821\u5927\u5b66\u201c\u7ec4\u7ec7\u4e2d\u5fc3\u548c\u6536\u96c6\u7ad9\u201d\u3002 \uff08\u533b\u5b66\u8fdb\u6b65\u4e2d\u5fc3\u8bc9\u7f8e\u56fd\u536b\u751f\u4e0e\u516c\u4f17\u670d\u52a1\u90e8\uff08No. 1:21-cv-00642\uff09\uff09\u3002\u6700\u521d\u7684 2015 \u5e74\u63d0\u6848\u4e2d\u5217\u51fa\u7684\u9879\u76ee\u7684\u76ee\u6807\u662f\u201c\u5f00\u53d1\u4e00\u6761\u7ba1\u9053\uff0c\u4ee5\u83b7\u53d6\u3001\u8d28\u91cf\u63a7\u5236\u548c\u5206\u914d\u5728\u6574\u4e2a\u53d1\u80b2\u8fc7\u7a0b\u4e2d\uff086-42 \u5468\u598a\u5a20\uff09\u83b7\u5f97\u7684\u4eba\u7c7b\u6ccc\u5c3f\u751f\u6b96\u7cfb\u7edf [\u6ccc\u5c3f\u548c\u751f\u6b96\u5668\u5b98\u548c\u529f\u80fd] \u6837\u672c\u3002 ...... [\u548c] \u751f\u6210\u4e00\u4e2a\u6301\u7eed\u7684\u8d44\u6e90\uff0c\u5c06\u4e0d\u540c\u9636\u6bb5\uff086-42 \u5468\uff09\u7684\u65b0\u9c9c\u53d1\u80b2\u4eba\u7c7b\u6ccc\u5c3f\u751f\u6b96\u7cfb\u7edf\u6837\u672c\u5206\u53d1\u7ed9 GUDMAP [\u6ccc\u5c3f\u751f\u6b96\u7cfb\u7edf\u53d1\u80b2\u5206\u5b50\u89e3\u5256\u5b66\u9879\u76ee] Atlas \u9879\u76ee\u3002\u201d\u5728\u63d0\u6848\u4e2d\uff0c\u76ae\u7279\u6307\u51fa\uff0c\u201c\u6536\u96c6\u80ce\u513f\u7ec4\u7ec7\u5df2\u7ecf\u8d85\u8fc7 10 \u5e74\u2026\u2026\u5305\u62ec[ing]\u809d\u810f\u3001\u5fc3\u810f\u3001\u6027\u817a\u3001\u817f\u3001\u5927\u8111\u3001\u6ccc\u5c3f\u751f\u6b96\u7ec4\u7ec7\uff0c\u5305\u62ec\u80be\u810f\u3001\u8f93\u5c3f\u7ba1\u548c\u8180\u80f1\u3002\u201d\u76ae\u7279\u5728 2015 \u5e74\u6307\u51fa\uff0c\u201c\u6211\u4eec\u5df2\u7ecf\u53d1\u653e\u4e86\u4ece 77 \u4e2a\u6848\u4f8b\u4e2d\u6536\u96c6\u7684 300 \u591a\u4e2a\u65b0\u9c9c\u6837\u672c\u3002\u7531\u4e8e\u53bb\u5e74\u53ef\u80fd\u4ece\u591a\u8fbe 725 \u4e2a\u6848\u4f8b\u4e2d\u79ef\u7d2f\u4e86\u6750\u6599\uff0c\u56e0\u6b64\u6536\u96c6\u91cf\u53ef\u4ee5\u663e\u7740\u589e\u52a0\u3002\u201d\u4f4d\u4e8e\u76ae\u7279\u7684\u5065\u5eb7\u79d1\u5b66\u7ec4\u7ec7\u5e93\u201c\u96b6\u5c5e\u4e8e\u75c5\u7406\u5b66\u7cfb\u2026\u2026\u56e0\u6b64\u53ef\u4ee5\u5feb\u901f\u83b7\u53d6\u975e\u5e38\u9ad8\u8d28\u91cf\u7684\u7ec4\u7ec7\u548c\u751f\u7269\u6807\u672c\u3002\u201d\u5339\u5179\u5821\u5927\u5b66\u5439\u5618\u5b83\u6709\u8bb8\u591a\u5185\u90e8\u8054\u7cfb\u4ee5\u53ca\u201c\u4e0e UPMC [\u5339\u5179\u5821\u5927\u5b66\u533b\u5b66\u4e2d\u5fc3]\u548c\u75c5\u7406\u5b66\u7cfb\u7684\u7262\u56fa\u5de5\u4f5c\u5173\u7cfb\u201d\u4ee5\u53ca\u4e09\u4e2a\u201c\u65d7\u8230 UPMC \u533b\u9662\u7684\u5b9e\u9a8c\u5ba4\u201d\u3002\u8fd9\u5305\u62ec\u4e00\u4e2a\u62e5\u6709\u201c\u7528\u4e8e\u5207\u5272\u9aa8\u5934\u7684 ButcherBoy \u5e26\u952f\u201d\u7684\u5b9e\u9a8c\u5ba4\uff0c\u4ee5\u53ca\u4e00\u4e2a\u201c\u51b7\u51bb\u5207\u7247\u5ba4\uff0c\u53ef\u5728\u624b\u672f\u5ba4\u4e4b\u95f4\u4f20\u8f93\u6570\u5b57\u89c6\u9891\u3002\u8fd9\u4e5f\u5141\u8bb8\u4e0e\u5916\u79d1\u533b\u751f\u8fdb\u884c\u5373\u65f6\u8ba8\u8bba\uff0c\u5e76\u4e3a\u4ed6\u4eec\u7acb\u5373\u2018\u5c55\u793a\u548c\u8bb2\u8ff0\u2019\u3002\u201d\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u8be5\u63d0\u6848\u8fd8\u5938\u8000\u4e86\u201c\u5339\u5179\u5821\u513f\u7ae5\u533b\u9662\u201d\u7684\u5b9e\u9a8c\u5ba4\u3002\n\u5728\u63d0\u6848\u7684\u540e\u9762\uff0c\u76ae\u7279\u8868\u793a\u5b83\u4f1a\u8bb0\u5f55\u201c\u6211\u4eec\u6837\u672c\u7684\u70ed\u7f3a\u8840\u65f6\u95f4\uff0c\u5e76\u91c7\u53d6\u63aa\u65bd\u5c06\u5176\u4fdd\u6301\u5728\u6700\u4f4e\u9650\u5ea6\uff0c\u4ee5\u786e\u4fdd\u83b7\u5f97\u6700\u9ad8\u8d28\u91cf\u7684\u751f\u7269\u6807\u672c\u3002\u201d [\u201c\u70ed\u7f3a\u8840\u65f6\u95f4\u201d\u662f\u6307\u5668\u5b98\u5728\u8840\u6db2\u4f9b\u5e94\u88ab\u5207\u65ad\u540e\u4fdd\u6301\u4f53\u6e29\u7684\u65f6\u95f4\u3002\u70ed\u7f3a\u8840\u65f6\u95f4\u4e0d\u540c\u4e8e\u51b7\u7f3a\u8840\u65f6\u95f4\uff0c\u51b7\u7f3a\u8840\u65f6\u95f4\u662f\u6307\u5668\u5b98\u88ab\u51b7\u5374\u7684\u65f6\u95f4\u3002\u76ae\u7279\u7684\u58f0\u660e\u8868\u660e\u5815\u80ce\u548c\u6536\u96c6\u4e4b\u95f4\u7684\u65f6\u95f4\u5f88\u77ed\u3002] \u76ae\u7279\u7684\u79d1\u5b66\u5bb6\u6307\u51fa\uff0c\u201c\u6240\u6709\u80ce\u513f\u7ec4\u7ec7\u90fd\u662f\u901a\u8fc7\u5305\u62ec\u8ba1\u5212\u751f\u80b2\u3001\u4ea7\u79d1\u548c\u75c5\u7406\u5b66\u5728\u5185\u7684\u534f\u4f5c\u8fc7\u7a0b\u6536\u96c6\u7684\u3002\u201d\u800c\u4e14\uff0c\u201c\u540c\u610f\u548c\u6536\u96c6\u7684\u6570\u91cf\u4e00\u76f4\u5728\u7a33\u6b65\u589e\u52a0\u2026\u2026\u6211\u4eec\u5904\u4e8e\u6709\u5229\u5730\u4f4d\uff0c\u53ef\u4ee5\u6269\u5c55\u6211\u4eec\u7684\u670d\u52a1\u4ee5\u5305\u62ec GUDMAP Atlas \u9879\u76ee\u7684\u9700\u6c42\u3002\u201d\u76ae\u7279\u9884\u8ba1\u201c\u80fd\u591f\u6536\u83b7\u548c\u5206\u914d\u9ad8\u8d28\u91cf\u7684\u7ec4\u7ec7\u548c\u7ec6\u80de...... [\u5e76\u4e14] \u9884\u8ba1\u4e0d\u4f1a\u51fa\u73b0\u4e0e\u7ec4\u7ec7\u7684\u83b7\u53d6\u548c\u5206\u914d\u76f8\u5173\u7684\u4efb\u4f55\u91cd\u5927\u95ee\u9898\u3002\u201d Pitt \u7684\u76ee\u6807\u662f\u201c\u5728 6-42 \u5468\u7684\u5b55\u9f84\u6bcf\u5468\u81f3\u5c11\u63d0\u4f9b 5 \u4e2a\u75c5\u4f8b\uff08\u7ec4\u7ec7\u548c\u5982\u679c\u53ef\u80fd\u7684\u8bdd\uff0c\u5176\u4ed6\u751f\u7269\u5236\u54c1\uff09\u3002\u201d\u76ae\u7279\u7684\u63d0\u8bae\u8fd8\u5305\u62ec\u4e00\u4e2a\u6536\u83b7\u4eba\u7c7b\u80ce\u513f\u90e8\u5206\u7684\u79cd\u65cf\u76ee\u6807\u3002\u5728\u5176\u8ba1\u5212\u7684\u6d41\u4ea7\u201c\u53d7\u8bd5\u8005\u201d\u4e2d\uff0c\u76ae\u7279\u5e0c\u671b 50% \u662f\u5c11\u6570\u65cf\u88d4\u80ce\u513f\u3002\u8be5\u63d0\u6848\u5efa\u8bae\u201c\u4e3b\u4f53\u201d\u591a\u5143\u5316\uff0c\u56e0\u4e3a\u5339\u5179\u5821\u662f\u591a\u5143\u5316\u7684\uff0c\u7f8e\u56fd\u4eba\u53e3\u666e\u67e5\u5c40\u663e\u793a\u5339\u5179\u5821\u5e02\u63a5\u8fd1 70% \u7684\u767d\u4eba\u3002\u76ae\u7279\u7684\u63d0\u6848\u8981\u6c42\u5728\u4e94\u5e74\u5185\u8d85\u8fc7 320 \u4e07\u7f8e\u5143\u3002\u6587\u4ef6\u663e\u793a\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0cNIH \u5df2\u4e3a\u76ae\u7279\u7684\u4eba\u7c7b\u80ce\u513f\u7ec4\u7ec7\u91c7\u96c6\u548c\u4e2d\u5fc3\u63d0\u4f9b\u4e86\u81f3\u5c11 270 \u4e07\u7f8e\u5143\u7684\u8d44\u91d1\u3002 2021 \u5e74 3 \u6708\uff0c\u8054\u90a6\u6cd5\u9662\u547d\u4ee4 HHS \u53d1\u5e03\u6709\u5173\u5176\u8d2d\u4e70\u4ece\u6d41\u4ea7\u7684\u4eba\u7c7b\u80ce\u513f\u4e2d\u83b7\u53d6\u7684\u5668\u5b98\u7684\u66f4\u591a\u4fe1\u606f\u3002\u6cd5\u9662\u8fd8\u8ba4\u5b9a\u201c\u6709\u7406\u7531\u8d28\u7591\u201d\u8fd9\u4e9b\u4ea4\u6613\u662f\u5426\u8fdd\u53cd\u4e86\u7981\u6b62\u51fa\u552e\u80ce\u513f\u5668\u5b98\u7684\u8054\u90a6\u6cd5\u5f8b\u3002\n2021 \u5e74 5 \u6708\uff0c\u53f8\u6cd5\u89c2\u5bdf\u5ba3\u5e03\u5df2\u53d1\u73b0 FDA \u7684\u8bb0\u5f55\uff0c\u8be5\u8bb0\u5f55\u663e\u793a\u8be5\u673a\u6784\u82b1\u8d39\u4e86\u6570\u4e07\u7eb3\u7a0e\u4eba\u7684\u7f8e\u5143\u4ece\u4f4d\u4e8e\u52a0\u5229\u798f\u5c3c\u4e9a\u7684\u5148\u8fdb\u751f\u7269\u79d1\u5b66\u8d44\u6e90\uff08ABR\uff09\u8d2d\u4e70\u4eba\u7c7b\u80ce\u513f\u7ec4\u7ec7\u3002\u8be5\u7ec4\u7ec7\u88ab\u7528\u4e8e\u5236\u9020\u201c\u4eba\u6e90\u5316\u5c0f\u9f20\u201d\u4ee5\u6d4b\u8bd5\u201c\u751f\u7269\u836f\u7269\u4ea7\u54c1\u201d\u3002\u8bb0\u5f55\u663e\u793a\uff0c\u8be5\u673a\u6784\u8ba2\u8d2d\u7684\u8d27\u7269\u662f\u201c\u65b0\u9c9c\u7684\uff1b\u7528\u6e7f\u51b0\u8fd0\u9001\u3002\u201d 2020 \u5e74 6 \u6708\uff0c\u53f8\u6cd5\u89c2\u5bdf\u53d1\u5e03\u7684\u8bb0\u5f55\u663e\u793a\uff0cFDA \u5728 2012 \u5e74\u81f3 2018 \u5e74\u671f\u95f4\u4e0e Advanced Bioscience Resources (ABR) \u7b7e\u8ba2\u4e86\u4ef7\u503c 96,370 \u7f8e\u5143\u7684\u516b\u4efd\u5408\u540c\uff0c\u4ee5\u4ece\u7b2c 1 \u548c\u7b2c 2 \u4e09\u4e2a\u6708\u6d41\u4ea7\u7684\u80ce\u513f\u4e2d\u83b7\u53d6\u201c\u65b0\u9c9c\u4e14\u4ece\u672a\u51b7\u51bb\u201d\u7684\u7ec4\u7ec7\uff0c\u7528\u4e8e\u521b\u9020\u6b63\u5728\u8fdb\u884c\u7814\u7a76\u7684\u4eba\u6e90\u5316\u5c0f\u9f20\u3002 2020 \u5e74 2 \u6708\uff0c\u53f8\u6cd5\u89c2\u5bdf\u516c\u5f00\u4e86\u989d\u5916\u7684\u4eba\u6027\u5316\u200b\u200b\u5c0f\u9f20\u8bb0\u5f55\u3002 \u201c\u8fd9\u4e9b\u6587\u4ef6\u663e\u793a\uff0c\u7eb3\u7a0e\u4eba\u7684\u94b1\u88ab\u7528\u6765\u5c06\u5339\u5179\u5821\u5927\u5b66\u53d8\u6210\u4e00\u7ad9\u5f0f\u4eba\u7c7b\u80ce\u513f\u7ec4\u7ec7\u5546\u5e97\u2014\u2014\u4ece\u4ece\u9009\u62e9\u6027\u5815\u80ce\u4e2d\u83b7\u53d6\u7ec4\u7ec7\u3001\u2018\u7ec6\u5206\u2019\u4eba\u7c7b\u9057\u9ab8\uff0c\u5230\u5206\u53d1\u548c\u8fd0\u8f93\u6536\u83b7\u7684\u7ec4\u7ec7\uff0c\u201d\u8bf4\u53f8\u6cd5\u89c2\u5bdf\u4e3b\u5e2d\u6c64\u59c6\u00b7\u83f2\u987f\u3002\u53f8\u6cd5\u89c2\u5bdf\u662f 501(c)(3) \u975e\u8425\u5229\u7ec4\u7ec7\u3002\u6350\u6b3e\u6765\u81ea\u4e2a\u4eba\u3001\u57fa\u91d1\u4f1a\u548c\u516c\u53f8\uff0c\u5e76\u4e14\u5728\u6cd5\u5f8b\u5141\u8bb8\u7684\u8303\u56f4\u5185\u53ef\u4ee5\u514d\u7a0e\u3002\u5546\u5e97\u6350\u8d60", "note_en": "(Washington, DC)  Judicial Watch and   The Center for Medical Progress  (CMP) announced today that they received   252 pages  of new documents from the US Department of Health and Human Services that reveal nearly $3 million in federal funds were spent on the University of Pittsburgh\u2019s quest to become a \u201cTissue Hub\u201d for human fetal tissue ranging from 6 to 42 weeks gestation.\n These documents were obtained as part of the Freedom of Information Act (FOIA) lawsuit in which Judicial Watch represents CMP and is suing HHS after it failed to respond to an April 28, 2020, FOIA request seeking among other things, the grant applications for a University of Pittsburgh \u201ctissue hub and collection site.\u201d (   Center for Medical Progress v. U.S. Department of Health and Human Services  (No. 1:21-cv-00642)).\n  The aims of the project listed in the original 2015 proposal were to \u201c  develop a pipeline  to the acquisition, quality control and distribution of human genitourinary [urinary and genital organs and functions] samples obtained throughout development (6-42 weeks gestation). \u2026 [and] generate an ongoing resource to distribute fresh developmental human genitourinary samples from various stages (6-42 weeks) to the GUDMAP [GenitoUrinary Development Molecular Anatomy Project] Atlas projects.\u201d\n In the   proposal , Pitt notes that is has been \u201ccollecting fetal tissue for over 10 years \u2026 include[ing] liver, heart, gonads, legs, brain, genitourinary tissues including kidneys, ureters and bladders.\u201d\n Pitt noted in 2015 \u201cwe have disbursed over   300 fresh samples  collected from 77 cases. The collections can be significantly ramped up as material could have been accrued from as many as 725 cases last year.\u201d\n The Health Sciences Tissue Bank at Pitt is \u201c  embedded  within the Department of Pathology \u2026 thus providing rapid access to very high quality tissue and biological specimens.\u201d\n Pitt boasts it has a number of internal connections as well as a \u201cstrong working relationship with UPMC [University of Pittsburgh Medical Center] and the Department of Pathology\u201d as well as three \u201claboratories in the flagship UPMC hospitals.\u201d This includes a lab boasting a \u201c  ButcherBoy band saw  for sectioning bone,\u201d and a \u201cfrozen section room has digital video feed to and from the operating rooms. This also allows for instantaneous discussions with the surgeons as well [as] immediate \u2018show and tell\u2019 for them.\u201d The proposal ironically also boasts about the laboratories at the \u201c  Children\u2019s Hospital of Pittsburgh .\u201d\n Later in the proposal, Pitt states that it records the \u201c  warm ischemic time  on our samples and take steps to keep it at a minimum to ensure the highest quality biological specimens.\u201d [The \u201cwarm ischemic time\u201d refers to the amount of time an organ remains at body temperature after blood supply has been cut off.\u00a0 Warm ischemic time differs from cold ischemic time which refers to amount of time the organ is chilled.\u00a0 Pitt\u2019s statement suggests the time between the abortion and collection is minimal.]\n The Pitt scientists note that, \u201cAll fetal tissue is collected through a   collaborative process  including Family Planning, Obstetrics and Pathology.\u201d And that, \u201cthe numbers of consents and collections has been steadily increasing\u2026 and we are in an excellent position to expand our services to include the needs of the GUDMAP Atlas projects.\u201d\n Pitt anticipated \u201cbeing able to   harvest and distribute  quality tissue and cells \u2026 [and] do not anticipate any major problems related to the acquisition and distribution of the tissues.\u201d\n Pitt\u2019s   target goal  \u201cis to have available a minimum of 5 cases (tissues and if possible other biologicals) per week of gestational age for ages 6-42 weeks.\u201d\n Pitt\u2019s proposal also included a   racial target  for harvesting of human fetal parts. Of its planned aborted \u201csubjects\u201d Pitt desired 50% to be minority fetuses. The proposal suggests that the \u201csubjects\u201d be diverse because Pittsburgh is diverse, the U.S. Census Bureau shows the city of Pittsburgh is close to 70% white.\n Pitt\u2019s proposal requested more than   $3.2 million  over a five-year period. The documents show NIH has funded at least $2.7 million so far for Pitt\u2019s human fetal tissue harvesting and hub.\n In March 2021, a federal court   ordered HHS to release additional information about its purchases of organs harvested from aborted human fetuses. The court also found \u201cthere is reason to question\u201d whether the transactions violate federal law barring the sale of fetal organs.\n In May 2021, Judicial Watch announced it had   uncovered records from the FDA showing the agency spent tens of thousands of taxpayer dollars to buy human fetal tissue from California-based Advanced Bioscience Resources (ABR). The tissue was used in creating \u201c  humanized mice\u201d to test \u201cbiologic drug products.\u201d The records show the agency ordered shipments to be \u201cfresh; shipped on wet ice.\u201d\n In June 2020, Judicial Watch   released records showing the FDA between 2012 and 2018 entered into eight contracts worth $96,370 with Advanced Bioscience Resources (ABR) to acquire \u201cfresh and never frozen\u201d tissue from 1 st\u00a0and 2 nd\u00a0trimester aborted fetuses for use in creating humanized mice for ongoing research. In February 2020, Judicial Watch   made public additional humanized mice records.\n \u201cThese documents show  taxpayer money is being used to turn the University of Pittsburgh is a one-stop human fetal tissue shop \u2013 from procuring the tissue from elective abortions, \u2018subdividing\u2019 the human remains, to distributing and shipping the harvested tissue,\u201d stated Judicial Watch President Tom Fitton.\n    Judicial Watch is a 501(c)(3) nonprofit organization. Contributions are received from individuals, foundations, and corporations and are tax-deductible to the extent allowed by law.\n  Shop   Donate", "posttime": "2021-08-06 09:53:26", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6587\u4ef6,documents,\u7ec4\u7ec7", "title": "\u65b0\u7684 HHS \u6587\u4ef6\u663e\u793a\u8054\u90a6\u8d44\u52a9\u6570\u767e\u4e07\u4eba\u4f53\u5668\u5b98\u6458\u53d6", "title_en": "New HHS Documents Reveal Millions in Federal Funding for Human Organ Harvesting", "transed": 1, "url": "https://www.judicialwatch.org/press-releases/hhs-documents-organ-harvesting/", "via": "", "real_tags": ["\u6587\u4ef6", "documents", "\u7ec4\u7ec7"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071692, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5e02\u9762\u4e0a\u6709\u5f88\u591a\u5173\u4e8e Pascal \u7684\u4e66\u7c4d\u548c\u8d44\u6e90\uff0c\u4f46\u5176\u4e2d\u592a\u591a\u8c08\u8bba\u65e7\u7684 Pascal\uff0c\u6ca1\u6709\u7c7b\u3001\u5355\u5143\u6216\u6cdb\u578b\u3002\u6240\u4ee5\u6211\u5199\u4e86\u8fd9\u7bc7\u5173\u4e8e\u6211\u79f0\u4e4b\u4e3a\u73b0\u4ee3 Object Pascal \u7684\u5feb\u901f\u4ecb\u7ecd\u3002\u5927\u591a\u6570\u4f7f\u7528\u5b83\u7684\u7a0b\u5e8f\u5458\u5e76\u6ca1\u6709\u771f\u6b63\u79f0\u5176\u4e3a\u201c\u73b0\u4ee3\u5bf9\u8c61\u5e15\u65af\u5361\u201d\uff0c\u6211\u4eec\u53ea\u662f\u79f0\u5176\u4e3a\u201c\u6211\u4eec\u7684\u5e15\u65af\u5361\u201d\u3002\u4f46\u662f\u5728\u4ecb\u7ecd\u8be5\u8bed\u8a00\u65f6\uff0c\u6211\u89c9\u5f97\u5f3a\u8c03\u5b83\u662f\u4e00\u79cd\u73b0\u4ee3\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u5f88\u91cd\u8981\u3002\u81ea\u4ece\u8bb8\u591a\u4eba\u5f88\u4e45\u4ee5\u524d\u5728\u5b66\u6821\u5b66\u5230\u7684\u65e7\uff08Turbo\uff09Pascal \u4ee5\u6765\uff0c\u5b83\u5df2\u7ecf\u6709\u4e86\u5f88\u5927\u7684\u53d1\u5c55\u3002\u5728\u529f\u80fd\u65b9\u9762\uff0c\u5b83\u4e0e C++\u3001Java \u6216 C# \u975e\u5e38\u76f8\u4f3c\u3002\u5b83\u5177\u6709\u60a8\u6240\u671f\u671b\u7684\u6240\u6709\u73b0\u4ee3\u529f\u80fd\u2014\u2014\u7c7b\u3001\u5355\u5143\u3001\u63a5\u53e3\u3001\u6cdb\u578b......\u5b83\u8fd8\u6709\u4f18\u79c0\u7684\u3001\u53ef\u79fb\u690d\u7684\u548c\u5f00\u6e90\u7684\u7f16\u8bd1\u5668\uff0c\u79f0\u4e3a Free Pascal \u7f16\u8bd1\u5668\uff0chttp://freepascal.org/\u3002\u8fd8\u6709\u4e00\u4e2a\u540d\u4e3a Lazarus http://lazarus.freepascal.org/ \u7684\u9644\u5e26 IDE\uff08\u7f16\u8f91\u5668\u3001\u8c03\u8bd5\u5668\u3001\u53ef\u89c6\u5316\u7ec4\u4ef6\u5e93\u3001\u8868\u5355\u8bbe\u8ba1\u5668\uff09\u3002\u6211\u81ea\u5df1\u662f Castle \u6e38\u620f\u5f15\u64ce https://castle-engine.io/ \u7684\u521b\u5efa\u8005\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f00\u6e90 3D \u548c 2D \u6e38\u620f\u5f15\u64ce\uff0c\u4f7f\u7528\u73b0\u4ee3 Pascal \u5728\u8bb8\u591a\u5e73\u53f0\uff08Windows\u3001Linux\u3001macOS\u3001 Android\u3001iOS\u3001Nintendo Switch\uff1b\u8fd8\u6709 WebGL \u5373\u5c06\u63a8\u51fa\uff09\u3002\u672c\u4ecb\u7ecd\u4e3b\u8981\u9488\u5bf9\u5df2\u7ecf\u6709\u5176\u4ed6\u8bed\u8a00\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u3002\u6211\u4eec\u4e0d\u4f1a\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e9b\u901a\u7528\u6982\u5ff5\u7684\u542b\u4e49\uff0c\u6bd4\u5982\u201c\u4ec0\u4e48\u662f\u7c7b\u201d\uff0c\u6211\u4eec\u53ea\u4f1a\u5c55\u793a\u5982\u4f55\u5728 Pascal \u4e2d\u5b9e\u73b0\u5b83\u4eec\u3002 {$mode objfpc} {$H+} {$J-} // \u53ea\u9700\u5728\u6240\u6709\u73b0\u4ee3\u6e90\u7a0b\u5e8f MyProgram \u4e2d\u4f7f\u7528\u8fd9\u4e00\u884c\uff1b // \u5c06\u6b64\u6587\u4ef6\u53e6\u5b58\u4e3a myprogram.lpr begin WriteLn( &#39;Hello world!&#39;);\u7ed3\u5c3e\u3002\u5982\u679c\u4f7f\u7528\u547d\u4ee4\u884c FPC\uff0c\u53ea\u9700\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6 myprogram.lpr \u5e76\u6267\u884c fpc myprogram.lpr\u3002\n\u5982\u679c\u60a8\u4f7f\u7528 Lazarus\uff0c\u8bf7\u521b\u5efa\u4e00\u4e2a\u65b0\u9879\u76ee\uff08\u83dc\u5355 Project \u2192 New Project \u2192 Simple Program\uff09\u3002\u5c06\u5176\u53e6\u5b58\u4e3a myprogram \u5e76\u5c06\u6b64\u6e90\u4ee3\u7801\u7c98\u8d34\u4e3a\u4e3b\u6587\u4ef6\u3002\u4f7f\u7528\u83dc\u5355\u9879\u8fd0\u884c\u2192\u7f16\u8bd1\u8fdb\u884c\u7f16\u8bd1\u3002\u8fd9\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u6240\u4ee5\u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b - \u53ea\u9700\u4ece\u547d\u4ee4\u884c\u8fd0\u884c\u7f16\u8bd1\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002\u672c\u6587\u7684\u5176\u4f59\u90e8\u5206\u5c06\u8ba8\u8bba Object Pascal \u8bed\u8a00\uff0c\u56e0\u6b64\u4e0d\u8981\u671f\u671b\u770b\u5230\u6bd4\u547d\u4ee4\u884c\u5185\u5bb9\u66f4\u82b1\u54e8\u7684\u4e1c\u897f\u3002\u5982\u679c\u4f60\u60f3\u770b\u5230\u4e00\u4e9b\u5f88\u9177\u7684\u4e1c\u897f\uff0c\u53ea\u9700\u5728 Lazarus \u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 GUI \u9879\u76ee\uff08\u9879\u76ee\u2192\u65b0\u5efa\u9879\u76ee\u2192\u5e94\u7528\u7a0b\u5e8f\uff09\u3002\u77a7\u2014\u2014\u4e00\u4e2a\u5de5\u4f5c\u7684 GUI \u5e94\u7528\u7a0b\u5e8f\uff0c\u8de8\u5e73\u53f0\uff0c\u5230\u5904\u90fd\u6709\u539f\u751f\u5916\u89c2\uff0c\u4f7f\u7528\u8212\u9002\u7684\u53ef\u89c6\u5316\u7ec4\u4ef6\u5e93\u3002 Lazarus \u548c Free Pascal Compiler \u5e26\u6709\u8bb8\u591a\u73b0\u6210\u7684\u5355\u5143\uff0c\u7528\u4e8e\u7f51\u7edc\u3001GUI\u3001\u6570\u636e\u5e93\u3001\u6587\u4ef6\u683c\u5f0f\uff08XML\u3001json\u3001\u56fe\u50cf\u2026\u2026\uff09\u3001\u7ebf\u7a0b\u4ee5\u53ca\u60a8\u53ef\u80fd\u9700\u8981\u7684\u4e00\u5207\u3002\u6211\u4e4b\u524d\u5df2\u7ecf\u63d0\u5230\u8fc7\u6211\u5f88\u9177\u7684\u57ce\u5821\u6e38\u620f\u5f15\u64ce:) {$mode objfpc} {$H+} {$J-} program MyProgram;\u8fc7\u7a0b MyProcedure(const A: Integer); begin WriteLn(&#39; A + 10 \u662f\uff1a&#39;, A + 10);\u7ed3\u5c3e;\u51fd\u6570 MyFunction(const S: string): string;\u5f00\u59cb\u7ed3\u679c\uff1a= S + &#39;\u5b57\u7b26\u4e32\u88ab\u81ea\u52a8\u7ba1\u7406&#39;;\u7ed3\u5c3e; var X\uff1a\u5355\uff1b\u5f00\u59cb WriteLn(MyFunction(&#39;\u6ce8\uff1a&#39;));\u6211\u7684\u7a0b\u5e8f(5); // \u4f7f\u7528 &quot;/&quot; \u7684\u9664\u6cd5\u603b\u662f\u4ea7\u751f\u6d6e\u70b9\u7ed3\u679c\uff0c\u4f7f\u7528 &quot;div&quot; \u8fdb\u884c\u6574\u6570\u9664\u6cd5 X := 15 / 5; WriteLn(&#39; X \u73b0\u5728\u662f\uff1a&#39;, X); // \u79d1\u5b66\u8bb0\u6570\u6cd5 WriteLn( &#39; X \u73b0\u5728\u662f: &#39;, X: 1: 2); // 2 \u4f4d\u5c0f\u6570\u7ed3\u675f\u3002\u8981\u4ece\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8bf7\u4e3a\u795e\u5947\u7684 Result \u53d8\u91cf\u8d4b\u503c\u3002\u60a8\u53ef\u4ee5\u81ea\u7531\u5730\u8bfb\u53d6\u548c\u8bbe\u7f6e Result\uff0c\u5c31\u50cf\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u4e00\u6837\u3002\u51fd\u6570 MyFunction(const S: string): string;\u5f00\u59cb\u7ed3\u679c\uff1a= S + &#39;\u4e1c\u897f&#39;;\u7ed3\u679c := \u7ed3\u679c + &#39; \u8fd8\u6709\u4e00\u4e9b\u4e1c\u897f\uff01 &#39;;\u7ed3\u679c := \u7ed3\u679c + &#39; \u7b49\u7b49\uff01 &#39;;\u7ed3\u5c3e;\u60a8\u8fd8\u53ef\u4ee5\u5c06\u51fd\u6570\u540d\u79f0\uff08\u5982\u4e0a\u9762\u793a\u4f8b\u4e2d\u7684 MyFunction\uff09\u89c6\u4e3a\u60a8\u53ef\u4ee5\u5206\u914d\u7684\u53d8\u91cf\u3002\u4f46\u662f\u6211\u4e0d\u9f13\u52b1\u5728\u65b0\u4ee3\u7801\u4e2d\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\u5728\u8d4b\u503c\u8868\u8fbe\u5f0f\u7684\u53f3\u4fa7\u4f7f\u7528\u65f6\u5b83\u770b\u8d77\u6765\u201c\u53ef\u7591\u201d\u3002\u5f53\u60a8\u60f3\u8981\u8bfb\u53d6\u6216\u8bbe\u7f6e\u51fd\u6570\u7ed3\u679c\u65f6\uff0c\u8bf7\u59cb\u7ec8\u4f7f\u7528 Result \u3002\n\u5982\u679c\u4f60\u60f3\u9012\u5f52\u5730\u8c03\u7528\u51fd\u6570\u672c\u8eab\uff0c\u4f60\u5f53\u7136\u53ef\u4ee5\u8fd9\u6837\u505a\u3002\u5982\u679c\u60a8\u9012\u5f52\u8c03\u7528\u65e0\u53c2\u6570\u51fd\u6570\uff0c\u8bf7\u52a1\u5fc5\u6307\u5b9a\u62ec\u53f7 ()\uff08\u5373\u4f7f\u5728 Pascal \u4e2d\u60a8\u901a\u5e38\u53ef\u4ee5\u7701\u7565\u65e0\u53c2\u6570\u51fd\u6570\u7684\u62ec\u53f7\uff09\uff0c\u8fd9\u4f1a\u9012\u5f52\u8c03\u7528\u65e0\u53c2\u6570\u51fd\u6570\u4e0e\u8bbf\u95ee\u6b64\u51fd\u6570\u7684\u5f53\u524d\u7ed3\u679c\u4e0d\u540c\u3002\u50cf\u8fd9\u6837\uff1a\u51fd\u6570 SumIntegersUntilZero: Integer; var I\uff1a\u6574\u6570\uff1b\u5f00\u59cb\u9605\u8bfb\uff08I\uff09\uff1b\u7ed3\u679c\uff1a=\u6211\uff1b\u5982\u679c\u6211 &lt;&gt; 0 \u90a3\u4e48\u7ed3\u679c := Result + SumIntegersUntilZero();\u7ed3\u5c3e;\u60a8\u53ef\u4ee5\u5728\u8fc7\u7a0b\u6216\u51fd\u6570\u5230\u8fbe\u6700\u7ec8\u7ed3\u675f\u4e4b\u524d\u8c03\u7528 Exit \u6765\u7ed3\u675f\u5b83\u7684\u6267\u884c\u3002\u5982\u679c\u60a8\u5728\u51fd\u6570\u4e2d\u8c03\u7528\u65e0\u53c2\u6570 Exit\uff0c\u5b83\u5c06\u8fd4\u56de\u60a8\u8bbe\u7f6e\u4e3a Result \u7684\u6700\u540e\u4e00\u4ef6\u4e8b\u3002\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 Exit(X) \u6784\u9020\u6765\u8bbe\u7f6e\u51fd\u6570\u7ed3\u679c\u5e76\u7acb\u5373\u9000\u51fa - \u8fd9\u5c31\u50cf\u7c7b C \u8bed\u8a00\u4e2d\u7684 return X \u6784\u9020\u4e00\u6837\u3002 function AddName( const ExistingNames, NewName: string): string; begin if ExistingNames = &#39; &#39; then Exit(NewName);\u7ed3\u679c := ExistingNames + &#39; , &#39; + NewName;\u7ed3\u5c3e;\u8bf7\u6ce8\u610f\uff0c\u53ef\u4ee5\u4e22\u5f03\u51fd\u6570\u7ed3\u679c\u3002\u4efb\u4f55\u51fd\u6570\u90fd\u53ef\u4ee5\u50cf\u8fc7\u7a0b\u4e00\u6837\u4f7f\u7528\u3002\u5982\u679c\u51fd\u6570\u9664\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e4b\u5916\u8fd8\u6709\u4e00\u4e9b\u526f\u4f5c\u7528\uff08\u4f8b\u5982\uff0c\u5b83\u4fee\u6539\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff09\uff0c\u8fd9\u662f\u6709\u9053\u7406\u7684\u3002\u4f8b\u5982\uff1a var Count: Integer; MyCount\uff1a\u6574\u6570\uff1b\u51fd\u6570 CountMe\uff1a\u6574\u6570\uff1b\u5f00\u59cb\u516c\u53f8\uff08\u8ba1\u6570\uff09\uff1b\u7ed3\u679c\uff1a=\u8ba1\u6570\uff1b\u7ed3\u5c3e;\u5f00\u59cb\u8ba1\u6570\uff1a= 10\uff1b\u628a\u6211\u7b97\u8fdb\u53bb; // \u51fd\u6570\u7ed3\u679c\u88ab\u4e22\u5f03\uff0c\u4f46\u51fd\u6570\u88ab\u6267\u884c\uff0cCount \u73b0\u5728\u662f 11 MyCount := CountMe; // \u4f7f\u7528\u51fd\u6570\u7684\u7ed3\u679c\uff0cMyCount \u7b49\u4e8e Count\uff0c\u73b0\u5728\u662f 12 end\u3002\u4f7f\u7528 if .. then \u6216 if .. then .. else \u5728\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u65f6\u8fd0\u884c\u67d0\u4e9b\u4ee3\u7801\u3002\u4e0e\u7c7b C \u8bed\u8a00\u4e0d\u540c\uff0c\u5728 Pascal \u4e2d\uff0c\u60a8\u4e0d\u5fc5\u5c06\u6761\u4ef6\u62ec\u5728\u62ec\u53f7\u4e2d\u3002\nvar A\uff1a\u6574\u6570\uff1b B\uff1a\u5e03\u5c14\u503c\uff1b\u5982\u679c A &gt; 0 \u5219\u5f00\u59cb\u505a\u4e00\u4e9b\u4e8b\u60c5\uff1b\u5982\u679c A &gt; 0 \u5219\u5f00\u59cb DoSomething\uff1b\u5e76\u505a\u66f4\u591a\u7684\u4e8b\u60c5\uff1b\u7ed3\u5c3e;\u5982\u679c A &gt; 10 \u5219 DoSomething else DoSomethingElse\uff1b // \u76f8\u5f53\u4e8e\u4e0a\u9762\u7684 B := A &gt; 10; if B then DoSomething else DoSomethingElse;\u7ed3\u5c3e;\u867d\u7136\u4e0a\u9762\u5d4c\u5957 if \u7684\u793a\u4f8b\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u5d4c\u5957 if \u653e\u5728 begin ... end \u5757\u4e2d\u901a\u5e38\u4f1a\u66f4\u597d\u3002\u8fd9\u4f7f\u5f97\u4ee3\u7801\u5bf9\u8bfb\u8005\u6765\u8bf4\u66f4\u660e\u663e\uff0c\u5373\u4f7f\u4f60\u5f04\u4e71\u4e86\u7f29\u8fdb\uff0c\u5b83\u4e5f\u4f1a\u4fdd\u6301\u660e\u663e\u3002\u8be5\u793a\u4f8b\u7684\u6539\u8fdb\u7248\u672c\u5982\u4e0b\u3002\u5f53\u60a8\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u67d0\u4e2a else \u5b50\u53e5\u65f6\uff0c\u5f88\u660e\u663e\u5b83\u5c06\u9002\u7528\u4e8e\u54ea\u4e2a\u6761\u4ef6\uff08\u9002\u7528\u4e8e A \u6d4b\u8bd5\u6216 B \u6d4b\u8bd5\uff09\uff0c\u56e0\u6b64\u4e0d\u592a\u5bb9\u6613\u51fa\u9519\u3002\u903b\u8f91\u8fd0\u7b97\u7b26\u79f0\u4e3aand\u3001or\u3001not\u3001xor\u3002\u5b83\u4eec\u7684\u542b\u4e49\u53ef\u80fd\u5f88\u660e\u663e\uff08\u5982\u679c\u60a8\u4e0d\u786e\u5b9a xor \u7684\u4f5c\u7528\uff0c\u8bf7\u641c\u7d22\u201cexclusive or\u201d:)\uff09\u3002\u4ed6\u4eec\u63a5\u53d7\u5e03\u5c14\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\u5f53\u4e24\u4e2a\u53c2\u6570\u90fd\u662f\u6574\u6570\u503c\u65f6\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5145\u5f53\u6309\u4f4d\u8fd0\u7b97\u7b26\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u4eec\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002\u5173\u7cfb\uff08\u6bd4\u8f83\uff09\u8fd0\u7b97\u7b26\u662f =\u3001&lt;&gt;\u3001&gt;\u3001&lt;\u3001&lt;=\u3001&gt;=\u3002\u5982\u679c\u60a8\u4e60\u60ef\u4e86\u7c7b C \u8bed\u8a00\uff0c\u8bf7\u6ce8\u610f\uff0c\u5728 Pascal \u4e2d\uff0c\u60a8\u4f7f\u7528\u5355\u4e2a\u76f8\u7b49\u5b57\u7b26 A = B \u6bd4\u8f83\u4e24\u4e2a\u503c\uff08\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u76f8\u7b49\uff09\uff08\u4e0e\u5728 C \u4e2d\u4f7f\u7528 A == B \u4e0d\u540c\uff09\u3002 Pascal \u4e2d\u7684\u7279\u6b8a\u8d4b\u503c\u8fd0\u7b97\u7b26\u662f:=\u3002\u903b\u8f91\uff08\u6216\u6309\u4f4d\uff09\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5173\u7cfb\u8fd0\u7b97\u7b26\u3002\u60a8\u53ef\u80fd\u9700\u8981\u5728\u67d0\u4e9b\u8868\u8fbe\u5f0f\u5468\u56f4\u4f7f\u7528\u62ec\u53f7\u4ee5\u83b7\u5f97\u6240\u9700\u7684\u8ba1\u7b97\u987a\u5e8f\u3002 var A, B: \u6574\u6570\uff1b begin if A = 0 and B &lt;&gt; 0 then ... // INCORRECT example \u4e0a\u9762\u7684\u7f16\u8bd1\u5931\u8d25\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u9996\u5148\u8981\u6309\u4f4d\u6267\u884c\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1a(0 and B)\u3002\u8fd9\u662f\u4e00\u4e2a\u9010\u4f4d\u8fd0\u7b97\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u503c\u3002\u7136\u540e\u7f16\u8bd1\u5668\u5e94\u7528 = \u8fd0\u7b97\u7b26\uff0c\u5b83\u4ea7\u751f\u4e00\u4e2a\u5e03\u5c14\u503c A = (0 \u548c B)\u3002\u6700\u540e\uff0c\u5728\u5c1d\u8bd5\u6bd4\u8f83\u5e03\u5c14\u503c A = (0 \u548c B) \u548c\u6574\u6570\u503c 0 \u540e\uff0c\u51fa\u73b0\u4e86\u201c\u7c7b\u578b\u4e0d\u5339\u914d\u201d\u9519\u8bef\u3002\n\u5982\u679c MyFunction(X) \u8fd4\u56de false\uff0c\u5219\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u5df2\u77e5\u7684\uff08false \u7684\u503c\u4ee5\u53ca\u59cb\u7ec8\u4e3a false \u7684\u503c\uff09\uff0c\u5e76\u4e14\u6839\u672c\u4e0d\u4f1a\u6267\u884c MyOtherFunction(Y)\u3002\u7c7b\u4f3c\u7684\u89c4\u5219\u662f for \u6216 expression\u3002\u5728\u90a3\u91cc\uff0c\u5982\u679c\u5df2\u77e5\u8868\u8fbe\u5f0f\u4e3a\u771f\uff08\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u4e3a\u771f\uff09\uff0c\u5219\u4e0d\u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u3002\u5373\u4f7f A \u4e3a\u96f6\uff0c\u8fd9\u4e5f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u5173\u952e\u5b57 nil \u662f\u4e00\u4e2a\u7b49\u4e8e\u96f6\u7684\u6307\u9488\uff08\u5f53\u8868\u793a\u4e3a\u6570\u5b57\u65f6\uff09\u3002\u5b83\u5728\u8bb8\u591a\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e2d\u88ab\u79f0\u4e3a\u7a7a\u6307\u9488\u3002\u5982\u679c\u5e94\u8be5\u6839\u636e\u67d0\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48 case .. of .. end \u8bed\u53e5\u5f88\u6709\u7528\u3002 case SomeValue \u4e3a 0\uff1aDoSomething\uff1b 1\uff1a\u505a\u522b\u7684\u4e8b\u60c5\uff1b 2\uff1a\u5f00\u59cbIfItsTwoThenDoThis\uff1b AndAlsoDoThis;\u7ed3\u5c3e; 3.. 10\uff1aDoSomethingInCaseItsInThisRange\uff1b 11\u300121\u300131\uff1aAndDoSomethingFor theseSpecialValues\uff1b\u5426\u5219 DoSomethingInCaseOfUnexpectedValue;\u7ed3\u5c3e; else \u5b50\u53e5\u662f\u53ef\u9009\u7684\uff08\u5e76\u4e14\u5bf9\u5e94\u4e8e\u7c7b C \u8bed\u8a00\u4e2d\u7684\u9ed8\u8ba4\u503c\uff09\u3002\u5982\u679c\u6ca1\u6709\u6761\u4ef6\u5339\u914d\uff0c\u5e76\u4e14\u6ca1\u6709\u5176\u4ed6\u6761\u4ef6\uff0c\u5219\u4ec0\u4e48\u4e5f\u4e0d\u4f1a\u53d1\u751f\u3002\u5982\u679c\u60a8\u6765\u81ea\u7c7b C \u8bed\u8a00\uff0c\u5c06\u5176\u4e0e\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u7684 switch \u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83\uff0c\u60a8\u4f1a\u6ce8\u610f\u5230\u6ca1\u6709\u81ea\u52a8\u5931\u8d25\u3002\u8fd9\u5728 Pascal \u4e2d\u662f\u4e00\u79cd\u523b\u610f\u7684\u795d\u798f\u3002\u60a8\u4e0d\u5fc5\u8bb0\u4f4f\u653e\u7f6e\u4e2d\u65ad\u8bf4\u660e\u3002\u5728\u6bcf\u6b21\u6267\u884c\u4e2d\uff0c\u6700\u591a\u6267\u884c\u4e00\u4e2a case \u5206\u652f\uff0c\u4ec5\u6b64\u800c\u5df2\u3002\nPascal \u4e2d\u7684\u679a\u4e3e\u7c7b\u578b\u662f\u4e00\u79cd\u975e\u5e38\u597d\u7684\u4e0d\u900f\u660e\u7c7b\u578b\u3002\u60a8\u53ef\u80fd\u4f1a\u6bd4\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u679a\u4e3e\u66f4\u9891\u7e41\u5730\u4f7f\u7528\u5b83:) \u7ea6\u5b9a\u662f\u5728\u679a\u4e3e\u540d\u79f0\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\u4e24\u4e2a\u5b57\u6bcd\u7684\u7c7b\u578b\u540d\u79f0\u5feb\u6377\u65b9\u5f0f\uff0c\u56e0\u6b64 ak = \u201c\u52a8\u7269\u79cd\u7c7b\u201d\u7684\u5feb\u6377\u65b9\u5f0f\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u7528\u7684\u7ea6\u5b9a\uff0c\u56e0\u4e3a\u679a\u4e3e\u540d\u79f0\u4f4d\u4e8e\u5355\u5143\uff08\u5168\u5c40\uff09\u547d\u540d\u7a7a\u95f4\u4e2d\u3002\u56e0\u6b64\uff0c\u901a\u8fc7\u7ed9\u5b83\u4eec\u52a0\u4e0a ak \u524d\u7f00\uff0c\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e0e\u5176\u4ed6\u6807\u8bc6\u7b26\u53d1\u751f\u51b2\u7a81\u7684\u673a\u4f1a\u3002\u540d\u79f0\u4e0a\u7684\u51b2\u7a81\u5e76\u4e0d\u662f\u4e00\u4e2a\u969c\u788d\u3002\u4e0d\u540c\u7684\u5355\u4f4d\u5b9a\u4e49\u76f8\u540c\u7684\u6807\u8bc6\u7b26\u662f\u53ef\u4ee5\u7684\u3002\u4f46\u65e0\u8bba\u5982\u4f55\u5c3d\u91cf\u907f\u514d\u51b2\u7a81\u662f\u4e2a\u597d\u4e3b\u610f\uff0c\u4ee5\u4fdd\u6301\u4ee3\u7801\u6613\u4e8e\u7406\u89e3\u548c grep\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u5668\u6307\u4ee4 {$scopedenums on} \u907f\u514d\u5c06\u679a\u4e3e\u540d\u79f0\u653e\u7f6e\u5728\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u60a8\u5fc5\u987b\u8bbf\u95ee\u7531\u7c7b\u578b\u540d\u79f0\u9650\u5b9a\u7684\u5b83\u4eec\uff0c\u4f8b\u5982 TAnimalKind.akDuck\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u9700\u8981 ak \u524d\u7f00\uff0c\u60a8\u53ef\u80fd\u53ea\u4f1a\u8c03\u7528\u679a\u4e3e Duck\u3001Cat\u3001Dog\u3002\u8fd9\u7c7b\u4f3c\u4e8e C# \u679a\u4e3e\u3002\u679a\u4e3e\u7c7b\u578b\u662f\u4e0d\u900f\u660e\u7684\u8fd9\u4e00\u4e8b\u5b9e\u610f\u5473\u7740\u5b83\u4e0d\u80fd\u4ec5\u5206\u914d\u7ed9\u6574\u6570\u6216\u4ece\u6574\u6570\u5206\u914d\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u7279\u6b8a\u7528\u9014\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Ord(MyAnimalKind) \u5c06 enum \u5f3a\u5236\u8f6c\u6362\u4e3a int\uff0c\u6216 typecast TAnimalKind(MyInteger) \u5c06 int \u5f3a\u5236\u8f6c\u6362\u4e3a enum\u3002\u5728\u540e\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u786e\u4fdd\u9996\u5148\u68c0\u67e5 MyInteger \u662f\u5426\u5728\u826f\u597d\u7684\u8303\u56f4\u5185\uff080 \u5230 Ord(High(TAnimalKind))\uff09\u3002 type TArrayOfTenStrings = array [ 0.. 9] of string; TArrayOfTenStrings1Based = array [ 1.. 10] \u7684\u5b57\u7b26\u4e32\uff1b TMyNumber = 0.. 9; TAlsoArrayOfTenStrings = \u5b57\u7b26\u4e32\u6570\u7ec4 [TMyNumber]\uff1b TAnimalKind = (akDuck, akCat, akDog); TAnimalNames = \u5b57\u7b26\u4e32\u6570\u7ec4 [TAnimalKind]\uff1b\u8f93\u5165 TAnimalKind = (akDuck, akCat, akDog); TAnimals = TAnimalKind \u96c6\uff1b var A: TAnimals;\u5f00\u59cb A := []; A := [akDuck, akCat]; A := A + [akDog]; A := A * [akCat, akDog];\u5305\u542b(A, akDuck);\u6392\u9664\uff08A\uff0cakDuck\uff09\uff1b\u7ed3\u5c3e;\n{$mode objfpc} {$H+} {$J-} {$R+} // \u8303\u56f4\u68c0\u67e5 - \u975e\u5e38\u9002\u5408\u8c03\u8bd5 var MyArray: array [ 0.. 9] of Integer; I\uff1a\u6574\u6570\uff1b begin // \u521d\u59cb\u5316\u4e3a I := 0 \u5230 9 do MyArray[I] := I * I; // show for I := 0 to 9 do WriteLn(&#39; Square is &#39;, MyArray[I]); // \u5bf9 I := Low(MyArray) to High(MyArray) do WriteLn( &#39; Square is &#39;, MyArray[I]); // \u548c\u4e0a\u9762\u4e00\u6837 I := 0;\u5f53 I &lt; 10 \u5f00\u59cb WriteLn( &#39; Square is &#39;, MyArray[I]);\u6211 := \u6211 + 1; // \u6216 &quot;I += 1&quot;, \u6216 &quot;Inc(I)&quot; end; // \u548c\u4e0a\u9762\u4e00\u6837 I := 0; repeat WriteLn( &#39; Square is &#39;, MyArray[I]);\u516c\u53f8\uff08\u4e00\uff09\uff1b\u76f4\u5230\u6211 = 10\uff1b // \u4e0e\u4e0a\u8ff0\u76f8\u540c // \u6ce8\u610f\uff1a\u8fd9\u91cc\u6211\u679a\u4e3e MyArray \u503c\uff0c\u800c\u4e0d\u662f MyArray \u4e2d I \u7684\u7d22\u5f15 do WriteLn( &#39; Square is &#39;, I);\u7ed3\u5c3e\u3002\u5faa\u73af\u6761\u4ef6\u5177\u6709\u76f8\u53cd\u7684\u542b\u4e49\u3002\u5728 while .. \u4f60\u544a\u8bc9\u5b83\u4ec0\u4e48\u65f6\u5019\u7ee7\u7eed\uff0c\u4f46\u5728\u91cd\u590d .. \u76f4\u5230\u4f60\u544a\u8bc9\u5b83\u4ec0\u4e48\u65f6\u5019\u505c\u6b62\u3002\u5728\u91cd\u590d\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u5f00\u59cb\u65f6\u4e0d\u68c0\u67e5\u6761\u4ef6\u3002\u6240\u4ee5\u91cd\u590d\u5faa\u73af\u603b\u662f\u81f3\u5c11\u8fd0\u884c\u4e00\u6b21\u3002 for I := .. to .. do ... \u6784\u9020\u5b83\u7c7b\u4f3c\u4e8e\u7c7b\u4f3c C \u7684 for \u5faa\u73af\u3002\u4f46\u662f\uff0c\u5b83\u53d7\u5230\u66f4\u591a\u9650\u5236\uff0c\u56e0\u4e3a\u60a8\u65e0\u6cd5\u6307\u5b9a\u4efb\u610f\u64cd\u4f5c/\u6d4b\u8bd5\u6765\u63a7\u5236\u5faa\u73af\u8fed\u4ee3\u3002\u8fd9\u4e25\u683c\u7528\u4e8e\u8fed\u4ee3\u8fde\u7eed\u6570\u5b57\uff08\u6216\u5176\u4ed6\u5e8f\u6570\u7c7b\u578b\uff09\u3002\u60a8\u62e5\u6709\u7684\u552f\u4e00\u7075\u6d3b\u6027\u662f\u60a8\u53ef\u4ee5\u4f7f\u7528 downto \u800c\u4e0d\u662f to\uff0c\u4f7f\u6570\u5b57\u4e0b\u964d\u3002\u4f5c\u4e3a\u4ea4\u6362\uff0c\u5b83\u770b\u8d77\u6765\u5f88\u5e72\u51c0\uff0c\u5e76\u4e14\u5728\u6267\u884c\u4e0a\u975e\u5e38\u4f18\u5316\u3002\u7279\u522b\u662f\uff0c\u5728\u5faa\u73af\u5f00\u59cb\u4e4b\u524d\uff0c\u4e0b\u9650\u548c\u4e0a\u9650\u7684\u8868\u8fbe\u5f0f\u53ea\u8ba1\u7b97\u4e00\u6b21\u3002\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8e\u53ef\u80fd\u7684\u4f18\u5316\uff0c\u5faa\u73af\u8ba1\u6570\u5668\u53d8\u91cf\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a I\uff09\u7684\u503c\u5728\u5faa\u73af\u5b8c\u6210\u540e\u5e94\u88ab\u89c6\u4e3a\u672a\u5b9a\u4e49\u3002\u5728\u5faa\u73af\u4e4b\u540e\u8bbf\u95ee I \u7684\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u8b66\u544a\u3002\u9664\u975e\u60a8\u901a\u8fc7 Break \u6216 Exit \u63d0\u524d\u9000\u51fa\u5faa\u73af\uff1a\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8ba1\u6570\u5668\u53d8\u91cf\u4fdd\u8bc1\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u503c\u3002 for I in .. do .. \u7c7b\u4f3c\u4e8e\u8bb8\u591a\u73b0\u4ee3\u8bed\u8a00\u4e2d\u7684 foreach \u7ed3\u6784\u3002\u5b83\u53ef\u4ee5\u5728\u8bb8\u591a\u5185\u7f6e\u7c7b\u578b\u4e0a\u667a\u80fd\u5730\u5de5\u4f5c\uff1a\nvar \u52a8\u7269\uff1aTAnimals\uff1b AK\uff1aTAnimalKind\uff1b\u5f00\u59cb\u52a8\u7269:= [akDog, akCat];\u5bf9\u4e8e\u52a8\u7269\u4e2d\u7684 AK \u505a ... {$mode objfpc} {$H+} {$J-} \u4f7f\u7528 SysUtils\uff0cFGL\uff1b\u7c7b\u578b TMyClass = I \u7c7b\uff0c\u6b63\u65b9\u5f62\uff1a\u6574\u6570\uff1b\u7ed3\u5c3e; TMyClassList = \u4e13\u95e8\u5316 TFPGObjectList&lt;TMyClass&gt;;\u53d8\u91cf\u5217\u8868\uff1aTMyClassList\uff1b C\uff1aTMyClass\uff1b I\uff1a\u6574\u6570\uff1b\u5f00\u59cb\u5217\u8868 := TMyClassList.Create(true); // true = owns children try for I := 0 to 9 do begin C := TMyClass.Create; CI := I; C.Square := I * I; List.Add(C);\u7ed3\u5c3e; for C in List do WriteLn(&#39; Square of &#39;, CI, &#39; is &#39;, C.Square);\u6700\u540e FreeAndNil(List);\u7ed3\u5c3e;\u7ed3\u5c3e\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u89e3\u91ca\u7c7b\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u4f8b\u5b50\u5bf9\u4f60\u6765\u8bf4\u53ef\u80fd\u8fd8\u4e0d\u662f\u5f88\u660e\u663e\u2014\u2014\u7ee7\u7eed\uff0c\u7a0d\u540e\u4f1a\u6709\u610f\u4e49:) \u8981\u5728 Pascal \u4e2d\u7b80\u5355\u5730\u8f93\u51fa\u5b57\u7b26\u4e32\uff0c\u8bf7\u4f7f\u7528 Write \u6216 WriteLn \u4f8b\u7a0b\u3002\u540e\u8005\u81ea\u52a8\u5728\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u6362\u884c\u7b26\u3002\u8fd9\u662f Pascal \u4e2d\u7684\u201c\u795e\u5947\u201d\u4f8b\u7a0b\u3002\u5b83\u9700\u8981\u53ef\u53d8\u6570\u91cf\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u53ef\u4ee5\u6709\u4efb\u4f55\u7c7b\u578b\u3002\u5b83\u4eec\u5728\u663e\u793a\u65f6\u90fd\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528\u7279\u6b8a\u8bed\u6cd5\u6765\u6307\u5b9a\u586b\u5145\u548c\u6570\u5b57\u7cbe\u5ea6\u3002 WriteLn(&#39;Hello world!&#39;);WriteLn(&#39;\u53ef\u4ee5\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff1a&#39;, 3 * 4);WriteLn(&#39;\u53ef\u4ee5\u586b\u5145\u4e00\u4e2a\u6574\u6570\uff1a&#39;, 666: 10);WriteLn(&#39;\u53ef\u4ee5\u8f93\u51fa\u4e00\u4e2a\u6d6e\u70b9\u6570\uff1a &#39;, \u5706\u5468\u7387: 1: 4);\u8981\u5728\u5b57\u7b26\u4e32\u4e2d\u663e\u5f0f\u4f7f\u7528\u6362\u884c\u7b26\uff0c\u8bf7\u4f7f\u7528 LineEnding \u5e38\u91cf\uff08\u6765\u81ea FPC RTL\uff09\u3002 \uff08Castle Game Engine \u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8f83\u77ed\u7684 NL \u5e38\u91cf\u3002\uff09Pascal \u5b57\u7b26\u4e32\u4e0d\u89e3\u91ca\u4efb\u4f55\u7279\u6b8a\u7684\u53cd\u659c\u6760\u5e8f\u5217\uff0c\u56e0\u6b64\u7f16\u5199\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4ec5\u9002\u7528\u4e8e\u63a7\u5236\u53f0\u5e94\u7528\u7a0b\u5e8f\u3002\u786e\u4fdd\u5728\u4e3b\u7a0b\u5e8f\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86 {$apptype CONSOLE}\uff08\u800c\u4e0d\u662f {$apptype GUI}\uff09\u3002\u5728\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u5b83\u5b9e\u9645\u4e0a\u65e0\u5173\u7d27\u8981\uff0c\u5e76\u4e14\u59cb\u7ec8\u6709\u6548\uff08Unix\uff09\uff0c\u4f46\u5728\u67d0\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u5c1d\u8bd5\u4ece GUI \u5e94\u7528\u7a0b\u5e8f\u5199\u5165\u5185\u5bb9\u662f\u9519\u8bef\u7684\uff08Windows\uff09\u3002\u5728 Castle Game Engine \u4e2d\uff1a\u4f7f\u7528 WriteLnLog \u6216 WriteLnWarning\uff0c\u4ece\u4e0d\u4f7f\u7528 WriteLn\uff0c\u6253\u5370\u8c03\u8bd5\u4fe1\u606f\u3002\u5b83\u4eec\u5c06\u59cb\u7ec8\u6307\u5411\u4e00\u4e9b\u6709\u7528\u7684\u8f93\u51fa\u3002\u5728 Unix \u4e0a\uff0c\u6807\u51c6\u8f93\u51fa\u3002\u5728 Windows GUI \u5e94\u7528\u7a0b\u5e8f\u4e0a\uff0c\u65e5\u5fd7\u6587\u4ef6\u3002\u5728 Android \u4e0a\uff0cAndroid \u65e5\u5fd7\u8bb0\u5f55\u5de5\u5177\uff08\u4f7f\u7528 adb logcat \u65f6\u53ef\u89c1\uff09\u3002 WriteLn \u7684\u4f7f\u7528\u5e94\u4ec5\u9650\u4e8e\u7f16\u5199\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\uff08\u5982 3D \u6a21\u578b\u8f6c\u6362\u5668/\u751f\u6210\u5668\uff09\u5e76\u4e14\u60a8\u77e5\u9053\u6807\u51c6\u8f93\u51fa\u53ef\u7528\u7684\u60c5\u51b5\u3002\u8981\u5c06\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff08\u800c\u4e0d\u662f\u76f4\u63a5\u8f93\u51fa\u5b83\u4eec\uff09\uff0c\u60a8\u6709\u51e0\u4e2a\u9009\u9879\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 IntToStr \u548c FloatToStr \u7b49\u4e13\u7528\u51fd\u6570\u5c06\u7279\u5b9a\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u5728 Pascal \u4e2d\u7b80\u5355\u5730\u901a\u8fc7\u6dfb\u52a0\u5b57\u7b26\u4e32\u6765\u8fde\u63a5\u5b57\u7b26\u4e32\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\uff1a&#39;My int number is &#39; + IntToStr(MyInt) + &#39;\uff0c\u800c Pi \u7684\u503c\u4e3a &#39; + FloatToStr(Pi)\u3002\u4f18\u70b9\uff1a\u7edd\u5bf9\u7075\u6d3b\u3002\u6709\u5f88\u591a XxxToStr \u91cd\u8f7d\u7248\u672c\u548c\u670b\u53cb\uff08\u6bd4\u5982 FormatFloat\uff09\uff0c\u6db5\u76d6\u4e86\u5f88\u591a\u7c7b\u578b\u3002\u5b83\u4eec\u4e2d\u7684\u5927\u591a\u6570\u90fd\u5728 SysUtils \u5355\u5143\u4e2d\u3002\u53e6\u4e00\u4e2a\u4f18\u70b9\uff1a\u4e0e\u53cd\u5411\u529f\u80fd\u4e00\u81f4\u3002\u8981\u5c06\u5b57\u7b26\u4e32\uff08\u4f8b\u5982\uff0c\u7528\u6237\u8f93\u5165\uff09\u8f6c\u6362\u56de\u6574\u6570\u6216\u6d6e\u70b9\u6570\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 StrToInt\u3001StrToFloat \u548c\u670b\u53cb\uff08\u5982 StrToIntDef\uff09\u3002\u7f3a\u70b9\uff1a\u8bb8\u591a XxxToStr \u8c03\u7528\u548c\u5b57\u7b26\u4e32\u7684\u957f\u8fde\u63a5\u770b\u8d77\u6765\u4e0d\u592a\u597d\u3002\nFormat \u51fd\u6570\uff0c\u7c7b\u4f3c\u4e8e Format(&#39;%d %f %s&#39;, [MyInt, MyFloat, MyString])\u3002\u8fd9\u5c31\u50cf\u7c7b C \u8bed\u8a00\u4e2d\u7684 sprintf \u51fd\u6570\u3002\u5b83\u5c06\u53c2\u6570\u63d2\u5165\u5230\u6a21\u5f0f\u4e2d\u7684\u5360\u4f4d\u7b26\u4e2d\u3002\u5360\u4f4d\u7b26\u53ef\u80fd\u4f1a\u4f7f\u7528\u7279\u6b8a\u8bed\u6cd5\u6765\u5f71\u54cd\u683c\u5f0f\uff0c\u4f8b\u5982 %.4f \u4f1a\u4ea7\u751f\u5c0f\u6570\u70b9\u540e 4 \u4f4d\u7684\u6d6e\u70b9\u683c\u5f0f\u3002\u4f18\u70b9\uff1a\u6a21\u5f0f\u5b57\u7b26\u4e32\u4e0e\u53c2\u6570\u7684\u5206\u79bb\u770b\u8d77\u6765\u5f88\u5e72\u51c0\u3002\u5982\u679c\u60a8\u9700\u8981\u5728\u4e0d\u89e6\u53ca\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\u66f4\u6539\u6a21\u5f0f\u5b57\u7b26\u4e32\uff08\u4f8b\u5982\u5728\u7ffb\u8bd1\u65f6\uff09\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5b8c\u6210\u3002\u53e6\u4e00\u4e2a\u4f18\u70b9\uff1a\u6ca1\u6709\u7f16\u8bd1\u5668\u9b54\u6cd5\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u8bed\u6cd5\u5728\u81ea\u5df1\u7684\u4f8b\u7a0b\u4e2d\u4f20\u9012\u4efb\u610f\u6570\u91cf\u7684\u4efb\u610f\u7c7b\u578b\u7684\u53c2\u6570\uff08\u5c06\u53c2\u6570\u58f0\u660e\u4e3a const \u6570\u7ec4\uff09\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u53c2\u6570\u5411\u4e0b\u4f20\u9012\u7ed9 Format\uff0c\u6216\u8005\u89e3\u6784\u53c2\u6570\u5217\u8868\u5e76\u4f7f\u7528\u5b83\u4eec\u6267\u884c\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u64cd\u4f5c\u3002\u7f3a\u70b9\uff1a\u7f16\u8bd1\u5668\u4e0d\u68c0\u67e5\u6a21\u5f0f\u662f\u5426\u4e0e\u53c2\u6570\u5339\u914d\u3002\u4f7f\u7528\u9519\u8bef\u7684\u5360\u4f4d\u7b26\u7c7b\u578b\u5c06\u5728\u8fd0\u884c\u65f6\u5bfc\u81f4\u5f02\u5e38\uff08 EConvertError \u5f02\u5e38\uff0c\u800c\u4e0d\u662f\u50cf\u5206\u6bb5\u9519\u8bef\u90a3\u6837\u4ee4\u4eba\u8ba8\u538c\u7684\u4e1c\u897f\uff09\u3002 WriteStr(TargetString, \u2026 ) \u4f8b\u7a0b\u7684\u884c\u4e3a\u4e0e Write(\u2026 ) \u975e\u5e38\u76f8\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u7ed3\u679c\u4fdd\u5b58\u5230 TargetString\u3002\u4f18\u70b9\uff1a\u5b83\u652f\u6301 Write \u7684\u6240\u6709\u529f\u80fd\uff0c\u5305\u62ec\u7528\u4e8e\u683c\u5f0f\u5316\u7684\u7279\u6b8a\u8bed\u6cd5\uff0c\u5982 Pi:1:4\u3002\u7f3a\u70b9\uff1a\u683c\u5f0f\u5316\u7684\u7279\u6b8a\u8bed\u6cd5\u662f\u201c\u7f16\u8bd1\u5668\u9b54\u672f\u201d\uff0c\u4e13\u95e8\u4e3a\u8fd9\u6837\u7684\u4f8b\u7a0b\u5b9e\u73b0\u3002\u8fd9\u6709\u65f6\u4f1a\u5f88\u9ebb\u70e6\uff0c\u4f8b\u5982\u60a8\u4e0d\u80fd\u521b\u5efa\u81ea\u5df1\u7684\u4f8b\u7a0b MyStringFormatter(... ) \u4e5f\u5141\u8bb8\u50cf Pi:1:4 \u8fd9\u6837\u7684\u7279\u6b8a\u8bed\u6cd5\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff08\u4e5f\u56e0\u4e3a\u5b83\u5728\u4e3b\u8981\u7684 Pascal \u7f16\u8bd1\u5668\u4e2d\u5f88\u4e45\u6ca1\u6709\u5b9e\u73b0\uff09\uff0c\u8fd9\u79cd\u7ed3\u6784\u4e0d\u662f\u5f88\u6d41\u884c\u3002\n\u5355\u5143\u5141\u8bb8\u60a8\u5c06\u5e38\u89c1\u7684\u4e1c\u897f\uff08\u4efb\u4f55\u53ef\u4ee5\u58f0\u660e\u7684\u4e1c\u897f\uff09\u5206\u7ec4\uff0c\u4f9b\u5176\u4ed6\u5355\u5143\u548c\u7a0b\u5e8f\u4f7f\u7528\u3002\u5b83\u4eec\u76f8\u5f53\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6a21\u5757\u548c\u5305\u3002\u5b83\u4eec\u6709\u4e00\u4e2a\u63a5\u53e3\u90e8\u5206\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u4e2d\u58f0\u660e\u5176\u4ed6\u5355\u5143\u548c\u7a0b\u5e8f\u53ef\u7528\u7684\u5185\u5bb9\uff0c\u7136\u540e\u662f\u5b9e\u73b0\u3002\u5c06\u5355\u4f4d MyUnit \u4fdd\u5b58\u4e3a myunit.pas\uff08\u5c0f\u5199\u5e76\u5e26\u6709 .pas \u6269\u5c55\u540d\uff09\u3002 {$mode objfpc} {$H+} {$J-} \u5355\u5143 MyUnit;\u63a5\u53e3\u8fc7\u7a0b MyProcedure( const A: Integer);\u51fd\u6570 MyFunction(const S: string): string;\u6267\u884c\u7a0b\u5e8f MyProcedure(const A: Integer); begin WriteLn(&#39; A + 10 \u662f\uff1a&#39;, A + 10);\u7ed3\u5c3e;\u51fd\u6570 MyFunction(const S: string): string;\u5f00\u59cb\u7ed3\u679c\uff1a= S + &#39;\u5b57\u7b26\u4e32\u88ab\u81ea\u52a8\u7ba1\u7406&#39;;\u7ed3\u5c3e;\u7ed3\u5c3e\u3002\u6700\u7ec8\u7a0b\u5e8f\u4fdd\u5b58\u4e3a myprogram.lpr \u6587\u4ef6\uff08 lpr = Lazarus \u7a0b\u5e8f\u6587\u4ef6\uff1b\u5728 Delphi \u4e2d\uff0c\u60a8\u5c06\u4f7f\u7528 .dpr\uff09\u3002\u8bf7\u6ce8\u610f\uff0c\u5176\u4ed6\u7ea6\u5b9a\u5728\u8fd9\u91cc\u4e5f\u662f\u53ef\u80fd\u7684\uff0c\u4f8b\u5982\uff0c\u6709\u4e9b\u9879\u76ee\u53ea\u4f7f\u7528 .pas \u4f5c\u4e3a\u4e3b\u7a0b\u5e8f\u6587\u4ef6\uff0c\u6709\u4e9b\u4f7f\u7528 .pp \u4f5c\u4e3a\u5355\u4f4d\u6216\u7a0b\u5e8f\u3002\u6211\u5efa\u8bae\u5c06 .pas \u7528\u4e8e\u5355\u4f4d\uff0c\u5c06 .lpr \u7528\u4e8e FPC/Lazarus \u7a0b\u5e8f\u3002\u4e00\u4e2a\u5355\u5143\u4e5f\u53ef\u80fd\u5305\u542b\u521d\u59cb\u5316\u548c\u7ed3\u675f\u90e8\u5206\u3002\u8fd9\u662f\u7a0b\u5e8f\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u6267\u884c\u7684\u4ee3\u7801\u3002\u4e00\u4e2a\u5355\u5143\u4e5f\u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u4e2a\u5355\u5143\u3002\u53e6\u4e00\u4e2a\u5355\u5143\u53ef\u4ee5\u7528\u5728\u63a5\u53e3\u90e8\u5206\uff0c\u4e5f\u53ef\u4ee5\u53ea\u7528\u5728\u5b9e\u73b0\u90e8\u5206\u3002\u524d\u8005\u5141\u8bb8\u5728\u53e6\u4e00\u4e2a\u5355\u5143\u7684\u5185\u5bb9\u4e4b\u4e0a\u5b9a\u4e49\u65b0\u7684\u516c\u5171\u5185\u5bb9\uff08\u7a0b\u5e8f\u3001\u7c7b\u578b......\uff09\u3002\u540e\u8005\u66f4\u53d7\u9650\u5236\uff08\u5982\u679c\u4f60\u53ea\u5728\u5b9e\u73b0\u90e8\u5206\u4f7f\u7528\u4e00\u4e2a\u5355\u5143\uff0c\u4f60\u53ea\u80fd\u5728\u4f60\u7684\u5b9e\u73b0\u4e2d\u4f7f\u7528\u5b83\u7684\u6807\u8bc6\u7b26\uff09\u3002 {$mode objfpc} {$H+} {$J-} \u5355\u4f4d\u53e6\u4e00\u4e2a\u5355\u4f4d\uff1b\u63a5\u53e3\u4f7f\u7528\u7c7b\uff1b { \u201cTComponent\u201d\u7c7b\u578b\uff08\u7c7b\uff09\u5b9a\u4e49\u5728 Classes un ......", "note_en": "There are many books and resources about Pascal out there, but too many of them talk about the old Pascal, without classes, units or generics.\n So I wrote this quick introduction to what I call  modern Object Pascal. Most of the programmers using it don\u2019t really call it  &#34;modern Object Pascal&#34;, we just call it  &#34;our Pascal&#34;. But when introducing the language, I feel it\u2019s important to emphasize that it\u2019s a modern, object-oriented language. It evolved a  lot since the old (Turbo) Pascal that many people learned in schools long time ago. Feature-wise, it\u2019s quite similar to C++ or Java or C#.\n It has all the modern features you expect\u2009\u2014\u2009classes, units, interfaces, generics\u2026\u200b\n It also has excellent, portable and open-source compiler called the  Free Pascal Compiler,  http://freepascal.org/ . And an accompanying IDE (editor, debugger, a library of visual components, form designer) called  Lazarus  http://lazarus.freepascal.org/ . Myself, I\u2019m the creator of  Castle Game Engine,  https://castle-engine.io/ , which is an open-source 3D and 2D game engine using modern Pascal to create games on many platforms (Windows, Linux, macOS, Android, iOS, Nintendo Switch; also WebGL is coming).\n This introduction is mostly directed at programmers who already have experience in other languages. We will not cover here the meanings of some universal concepts, like  &#34;what is a class&#34;, we\u2019ll only show how to do them in Pascal.\n {$mode objfpc} {$H+} {$J-}  // Just use this line in all modern sources program MyProgram;  // Save this file as myprogram.lpr begin WriteLn(  &#39; Hello world! &#39;); end.\n  If you use the command-line FPC, just create a new file  myprogram.lpr and execute  fpc myprogram.lpr.\n If you use  Lazarus, create a new project (menu  Project \u2192  New Project \u2192  Simple Program). Save it as  myprogram and paste this source code as the main file. Compile using the menu item  Run \u2192 Compile.\n This is a command-line program, so in either case\u2009\u2014\u2009just run the compiled executable from the command-line.\n The rest of this article talks about the Object Pascal language, so don\u2019t expect to see anything more fancy than the command-line stuff. If you want to see something cool, just create a new GUI project in  Lazarus ( Project \u2192  New Project \u2192  Application).Voila\u2009\u2014\u2009a working GUI application, cross-platform, with native look everywhere, using a comfortable visual component library. The  Lazarus and  Free Pascal Compiler come with lots of ready units for networking, GUI, database, file formats (XML, json, images\u2026\u200b), threading and everything else you may need. I already mentioned my cool  Castle Game Engine earlier:)\n {$mode objfpc} {$H+} {$J-} program MyProgram; procedure MyProcedure( const A: Integer); begin WriteLn(  &#39; A + 10 is:  &#39;, A +  10); end; function MyFunction( const S:  string):  string; begin Result := S +   &#39; strings are automatically managed &#39;; end; var X: Single; begin WriteLn(MyFunction(  &#39; Note:  &#39;)); MyProcedure( 5);  // Division using &#34;/&#34; always makes float result, use &#34;div&#34; for integer division X :=  15 /  5; WriteLn(  &#39; X is now:  &#39;, X);  // scientific notation WriteLn(  &#39; X is now:  &#39;, X: 1: 2);  // 2 decimal places end.\n To return a value from a function, assign something to the magic  Result variable. You can read and set the  Result freely, just like a local variable.\n function MyFunction( const S:  string):  string; begin Result := S +   &#39; something &#39;; Result := Result +   &#39;  something more! &#39;; Result := Result +   &#39;  and more! &#39;; end;\n You can also treat the function name (like  MyFunction in example above) as the variable, to which you can assign. But I would discourage it in new code, as it looks &#34;fishy&#34; when used on the right side of the assignment expression. Just use  Result always when you want to read or set the function result.\n If you want to call the function itself recursively, you can of course do it. If you\u2019re calling a parameter-less function recursively, be sure to specify the parenthesis  () (even though in Pascal you can usually omit the parentheses for a parameter-less function), this makes a recursive call to a parameter-less function different from accessing this function\u2019s current result. Like this:\n function SumIntegersUntilZero: Integer; var I: Integer; begin Readln(I); Result := I;  if I &lt;&gt;  0  then Result := Result + SumIntegersUntilZero(); end;\n You can call  Exit to end the execution of the procedure or function before it reaches the final  end;. If you call parameter-less  Exit in a function, it will return the last thing you set as  Result. You can also use  Exit(X) construct, to set the function result and exit  now\u2009\u2014\u2009this is just like  return X construct in C-like languages.\n function AddName( const ExistingNames, NewName:  string):  string; begin  if ExistingNames =   &#39; &#39;  then Exit(NewName); Result := ExistingNames +   &#39; ,  &#39; + NewName; end;\n Note that the function result can be discarded. Any function may be used just like a procedure. This makes sense if the function has some  side effect (e.g. it modifies a global variable) besides calculating the result. For example:\n var Count: Integer; MyCount: Integer; function CountMe: Integer; begin Inc(Count); Result := Count; end; begin Count :=  10; CountMe;  // the function result is discarded, but the function is executed, Count is now 11 MyCount := CountMe;  // use the result of the function, MyCount equals to Count which is now 12 end.\n Use  if .. then or  if .. then .. else to run some code when some condition is satisfied. Unlike in the C-like languages, in Pascal you don\u2019t have to wrap the condition in parenthesis.\n var A: Integer; B: boolean; begin  if A &gt;  0  then DoSomething;  if A &gt;  0  then  begin DoSomething; AndDoSomethingMore;  end;  if A &gt;  10  then DoSomething  else DoSomethingElse;  // equivalent to above B := A &gt;  10;  if B  then DoSomething  else DoSomethingElse; end;\n   While the example with nested  if above is correct, it is often better to place the nested  if inside a  begin \u2026\u200b  end block in such cases. This makes the code more obvious to the reader, and it will remain obvious even if you mess up the indentation. The improved version of the example is below. When you add or remove some  else clause in the code below, it\u2019s obvious to which condition it will apply (to the  A test or the  B test), so it\u2019s less error-prone.\n The  logical operators are called  and,  or,  not,  xor. Their meaning is probably obvious (search for  &#34;exclusive or&#34; if you\u2019re unsure what  xor does:)). They take  boolean arguments, and return a  boolean. They can also act as  bit-wise operators when both arguments are integer values, in which case they return an integer.\n The  relational (comparison) operators are  =,  &lt;&gt;,  &gt;,  &lt;,  &lt;=,  &gt;=. If you\u2019re accustomed to C-like languages, note that in Pascal you compare two values (check are they equal) using a single equality character  A = B (unlike in C where you use  A == B). The special  assignment operator in Pascal is  :=.\n The  logical (or bit-wise) operators have a higher precedence than relational operators. You may need to use parenthesis around some expressions to have the desired order of the calculations.\n  var A, B: Integer; begin  if A =  0  and B &lt;&gt;  0  then ...  // INCORRECT example\n The above fails to compile, because the compiler first wants to perform a bit-wise  and in the middle of the expression:  (0 and B). This is a bit-wise operation which returns an integer value. Then the compiler applies  = operator which yields a boolean value  A = (0 and B). And finally the  &#34;type mismatch&#34; error is risen after trying to compare the boolean value  A = (0 and B) and integer value  0.\n     And if  MyFunction(X) returns  false, then the value of expression is known (the value of  false and whatever is always  false), and  MyOtherFunction(Y) will not be executed at all.\n Analogous rule is for  or expression. There, if the expression is known to be  true (because the 1st operand is  true), the 2nd operand is not evaluated.\n This will work OK, even when  A is  nil. The keyword  nil is a pointer equal to zero (when represented as a number). It is called a  null pointer in many other programming languages.\n If a different action should be executed depending on the value of some expression, then the  case .. of .. end statement is useful.\n case SomeValue  of  0: DoSomething;  1: DoSomethingElse;  2:  begin IfItsTwoThenDoThis; AndAlsoDoThis;  end;  3.. 10: DoSomethingInCaseItsInThisRange;  11,  21,  31: AndDoSomethingForTheseSpecialValues;  else DoSomethingInCaseOfUnexpectedValue; end;\n The  else clause is optional (and corresponds to  default in C-like languages). When no condition matches, and there\u2019s no  else, then nothing happens.\n In you come from C-like languages, and compare this with  switch statement in these languages, you will notice that there is no automatic  fall-through. This is a deliberate blessing in Pascal. You don\u2019t have to remember to place  break instructions. In every execution,  at most one branch of the  case is executed, that\u2019s it.\n Enumerated type in Pascal is a very nice, opaque type. You will probably use it much more often than enums in other languages:)\n  The convention is to prefix the enum names with a two-letter shortcut of type name, hence  ak = shortcut for  &#34;Animal Kind&#34;. This is a useful convention, since the enum names are in the unit (global) namespace. So by prefixing them with  ak prefix, you minimize the chances of collisions with other identifiers.\n The collisions in names are not a show-stopper. It\u2019s Ok for different units to define the same identifier. But it\u2019s a good idea to try to avoid the collisions anyway, to keep code simple to understand and grep.\n You can avoid placing enum names in the global namespace by compiler directive  {$scopedenums on}. This means you will have to access them qualified by a type name, like  TAnimalKind.akDuck. The need for  ak prefix disappears in this situation, and you will probably just call the enums  Duck, Cat, Dog. This is similar to C# enums.\n The fact that enumerated type is  opaque means that it cannot be just assigned to and from an integer. However, for special use, you can use  Ord(MyAnimalKind) to forcefully convert enum to int, or typecast  TAnimalKind(MyInteger) to forcefully convert int to enum. In the latter case, make sure to check first whether  MyInteger is in good range (0 to  Ord(High(TAnimalKind))).\n  type TArrayOfTenStrings =  array [ 0.. 9]  of  string; TArrayOfTenStrings1Based =  array [ 1.. 10]  of  string; TMyNumber =  0.. 9; TAlsoArrayOfTenStrings =  array [TMyNumber]  of  string; TAnimalKind = (akDuck, akCat, akDog); TAnimalNames =  array [TAnimalKind]  of  string;\n  type TAnimalKind = (akDuck, akCat, akDog); TAnimals =  set  of TAnimalKind; var A: TAnimals; begin A := []; A := [akDuck, akCat]; A := A + [akDog]; A := A * [akCat, akDog]; Include(A, akDuck); Exclude(A, akDuck); end;\n {$mode objfpc} {$H+} {$J-} {$R+}  // range checking on - nice for debugging var MyArray:  array [ 0.. 9]  of Integer; I: Integer; begin  // initialize  for I :=  0  to  9  do MyArray[I] := I * I;  // show  for I :=  0  to  9  do WriteLn(  &#39; Square is  &#39;, MyArray[I]);  // does the same as above  for I := Low(MyArray)  to High(MyArray)  do WriteLn(  &#39; Square is  &#39;, MyArray[I]);  // does the same as above I :=  0;  while I &lt;  10  do  begin WriteLn(  &#39; Square is  &#39;, MyArray[I]); I := I +  1;  // or &#34;I += 1&#34;, or &#34;Inc(I)&#34;  end;  // does the same as above I :=  0;  repeat WriteLn(  &#39; Square is  &#39;, MyArray[I]); Inc(I);  until I =  10;  // does the same as above  // note: here I enumerates MyArray values, not indexes  for I  in MyArray  do WriteLn(  &#39; Square is  &#39;, I); end.\n   The loop condition has an opposite meaning. In  while .. do you tell it  when to continue, but in  repeat .. until you tell it  when to stop.\n In case of  repeat,  the condition is not checked at the beginning. So the  repeat loop always runs at least once.\n  The  for I := .. to .. do \u2026\u200b construction it similar to the C-like  for loop. However, it\u2019s more constrained, as you cannot specify arbitrary actions/tests to control the loop iteration. This is strictly for iterating over a consecutive numbers (or other ordinal types). The only flexibility you have is that you can use  downto instead of  to, to make numbers go downward.\n In exchange, it looks clean, and is very optimized in execution. In particular,  the expressions for the lower and higher bound are only calculated once, before the loop starts.\n Note that the value of the loop counter variable ( I in this example) should be considered  undefined after the loop has finished, due to possible optimizations. Accessing the value of  I after the loop may cause a compiler warning.  Unless you exit the loop prematurely by  Break or  Exit: in such case, the counter variable is guaranteed to retain the last value.\n  The  for I in .. do .. is similar to  foreach construct in many modern languages. It works intelligently on many built-in types:\n var Animals: TAnimals; AK: TAnimalKind; begin Animals := [akDog, akCat];  for AK  in Animals  do ...\n {$mode objfpc} {$H+} {$J-} uses SysUtils, FGL; type TMyClass =  class I, Square: Integer;  end; TMyClassList = specialize TFPGObjectList&lt;TMyClass&gt;; var List: TMyClassList; C: TMyClass; I: Integer; begin List := TMyClassList.Create(true);  // true = owns children  try  for I :=  0  to  9  do  begin C := TMyClass.Create; C.I := I; C.Square := I * I; List.Add(C);  end;  for C  in List  do WriteLn(  &#39; Square of  &#39;, C.I,   &#39;  is  &#39;, C.Square);  finally FreeAndNil(List);  end; end.\n We didn\u2019t yet explain the concept of classes, so the last example may not be obvious to you yet\u2009\u2014\u2009just carry on, it will make sense later:)\n To simply output strings in Pascal, use the  Write or  WriteLn routine. The latter automatically adds a newline at the end.\n This is a &#34;magic&#34; routine in Pascal. It takes a variable number of arguments and they can have any type. They are all converted to strings when displaying, with a special syntax to specify padding and number precision.\n WriteLn(  &#39; Hello world! &#39;);WriteLn(  &#39; You can output an integer:  &#39;,  3 *  4);WriteLn(  &#39; You can pad an integer:  &#39;,  666: 10);WriteLn(  &#39; You can output a float:  &#39;, Pi: 1: 4);\n To explicitly use newline in the string, use the  LineEnding constant (from FPC RTL). (The  Castle Game Engine defines also a shorter  NL constant.) Pascal strings do not interpret any special backslash sequences, so writing\n      Note that this will only work in  console applications. Make sure you have  {$apptype CONSOLE} (and  not  {$apptype GUI}) defined in your main program file. On some operating systems it actually doesn\u2019t matter and will work always (Unix), but on some operating systems trying to write something from a GUI application is an error (Windows).\n In the Castle Game Engine: use  WriteLnLog or  WriteLnWarning, never  WriteLn, to print debug information. They will be always directed to some useful output. On Unix, standard output. On Windows GUI application, log file. On Android, the  Android logging facility (visible when you use  adb logcat). The use of  WriteLn should be limited to the cases when you write a command-line application (like a 3D model converter / generator) and you know that the  standard output is available.\n To convert an arbitrary number of arguments to a string (instead of just directly outputting them), you have a couple of options.\n You can convert particular types to strings using specialized functions like  IntToStr and  FloatToStr. Furthermore, you can concatenate strings in Pascal simply by adding them. So you can create a string like this:  &#39;My int number is &#39; + IntToStr(MyInt) + &#39;, and the value of Pi is &#39; + FloatToStr(Pi).\n Advantage: Absolutely flexible. There are many  XxxToStr overloaded versions and friends (like  FormatFloat), covering many types. Most of them are in the  SysUtils unit.\n Another advantage: Consistent with the reverse functions. To convert a string (for example, user input) back to an integer or float, you use  StrToInt,  StrToFloat and friends (like  StrToIntDef).\n Disadvantage: A long concatenation of many  XxxToStr calls and strings doesn\u2019t look nice.\n The  Format function, used like  Format(&#39;%d %f %s&#39;, [MyInt, MyFloat, MyString]). This is like  sprintf function in the C-like languages. It inserts the arguments into the placeholders in the pattern. The placeholders may use special syntax to influence formatting, e.g.  %.4f results in a floating-point format with 4 digits after the decimal point.\n Advantage: The separation of  pattern string from  arguments looks clean. If you need to change the pattern string without touching the arguments (e.g. when translating), you can do it easily.\n Another advantage: No compiler magic. You can use the same syntax to pass any number of arguments of an arbitrary type in your own routines (declare parameter as an  array of const). You can then pass these arguments downward to  Format, or deconstruct the list of parameters and do anything you like with them.\n Disadvantage: Compiler does not check whether the pattern matches the arguments. Using a wrong placeholder type will result in an exception at runtime ( EConvertError exception, not anything nasty like a segmentation fault).\n WriteStr(TargetString, \u2026\u200b) routine behaves much like  Write(\u2026\u200b), except that the result is saved to the  TargetString.\n Advantage: It supports all the features of  Write, including the special syntax for formatting like  Pi:1:4.\n Disadvantage: The special syntax for formatting is a &#34;compiler magic&#34;, implemented specifically for routines like this. This is sometimes troublesome, e.g. you cannot create your own routine  MyStringFormatter(\u2026\u200b) that would also allow the special syntax like  Pi:1:4. For this reason (and also because it wasn\u2019t implemented for a long time in major Pascal compilers), this construction is not very popular.\n Units allow you to group common stuff (anything that can be declared), for usage by other units and programs. They are equivalent to  modules and  packages in other languages. They have an interface section, where you declare what is available for other units and programs, and then the implementation. Save unit  MyUnit as  myunit.pas (lowercase with  .pas extension).\n {$mode objfpc} {$H+} {$J-} unit MyUnit; interface procedure MyProcedure( const A: Integer); function MyFunction( const S:  string):  string; implementation procedure MyProcedure( const A: Integer); begin WriteLn(  &#39; A + 10 is:  &#39;, A +  10); end; function MyFunction( const S:  string):  string; begin Result := S +   &#39; strings are automatically managed &#39;; end; end.\n Final programs are saved as  myprogram.lpr files ( lpr = Lazarus program file; in Delphi you would use  .dpr). Note that other conventions are possible here, e.g. some projects just use  .pas for main program file, some use  .pp for units or programs. I advise using  .pas for units and  .lpr for FPC/Lazarus programs.\n   A unit may also contain  initialization and  finalization sections. This is the code executed when the program starts and ends.\n  One unit can also use another unit. Another unit can be used in the interface section, or only in the implementation section. The former allows to define new public stuff (procedures, types\u2026\u200b) on top of another unit\u2019s stuff. The latter is more limited (if you use a unit only in the implementation section, you can use its identifiers only in your implementation).\n {$mode objfpc} {$H+} {$J-} unit AnotherUnit; interface uses Classes; { The &#34;TComponent&#34; type (class) is defined in the Classes un\n......", "posttime": "2021-08-06 09:52:43", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7a0b\u5e8f,\u7a0b\u5e8f\u5458,object", "title": "\u9762\u5411\u7a0b\u5e8f\u5458\u7684\u73b0\u4ee3 Object Pascal \u7b80\u4ecb", "title_en": "Modern Object Pascal Introduction for Programmers", "transed": 1, "url": "https://castle-engine.io/modern_pascal_introduction.html", "via": "", "real_tags": ["\u7a0b\u5e8f", "\u7a0b\u5e8f\u5458", "object"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071691, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u60a8\u53ef\u4ee5\u4ece RDS for PostgreSQL \u6570\u636e\u5e93\u5b9e\u4f8b\u8c03\u7528 AWS Lambda \u51fd\u6570\u3002\u4e3a\u6b64\uff0c\u8bf7\u4f7f\u7528 RDS for PostgreSQL \u968f\u9644\u7684 aws_lambda PostgreSQL \u6269\u5c55\u3002 AWS Lambda \u662f\u4e00\u79cd\u53ef\u7528\u4e8e\u8fd0\u884c\u4ee3\u7801\u7684\u8ba1\u7b97\u670d\u52a1\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Lambda \u51fd\u6570\u6765\u5904\u7406\u6765\u81ea\u6570\u636e\u5e93\u5b9e\u4f8b\u7684\u4e8b\u4ef6\u901a\u77e5\u3002\u6709\u5173 Lambda \u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4ec0\u4e48\u662f AWS Lambda\uff1f\u5728 AWS Lambda \u5f00\u53d1\u4eba\u5458\u6307\u5357\u4e2d\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8fc7\u7a0b\u4ece RDS for PostgreSQL \u6570\u636e\u5e93\u8c03\u7528 Lambda \u51fd\u6570\u3002\u5b89\u88c5\u6240\u9700\u7684 PostgreSQL \u6269\u5c55\u3002\u5176\u4e2d\u5305\u62ec aws_lambda \u548c aws_commons \u6269\u5c55\u3002\u4e3a\u6b64\uff0c\u8bf7\u542f\u52a8 psql \u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 aws_lambda \u6269\u5c55\u63d0\u4f9b\u4e86\u7528\u4e8e\u5728 Lambda \u4e2d\u8c03\u7528\u51fd\u6570\u7684 aws_lambda.invoke \u51fd\u6570\u3002\u5305\u542b aws_commons \u6269\u5c55\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u8f85\u52a9\u51fd\u6570\u3002\u786e\u5b9a\u8981\u4f7f\u7528\u7684 Lambda \u51fd\u6570\u7684\u540d\u79f0\u6216 Amazon \u8d44\u6e90\u540d\u79f0 (ARN)\u3002\u6709\u5173\u6b64\u8fc7\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6307\u5b9a\u8981\u4f7f\u7528\u7684 Lambda \u51fd\u6570\u3002\u8981\u8c03\u7528 Lambda \u51fd\u6570\uff0c\u8bf7\u6388\u4e88 RDS for PostgreSQL \u6570\u636e\u5e93\u5b9e\u4f8b\u8bbf\u95ee Lambda \u8c03\u7528 API \u64cd\u4f5c\u7684\u6743\u9650\u3002\u8fd9\u6837\u505a\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a\n\u521b\u5efa AWS Identity and Access Management (IAM) \u7b56\u7565\uff0c\u4ee5\u63d0\u4f9b\u5bf9\u60a8\u8981\u8c03\u7528\u7684 Lambda \u51fd\u6570\u7684\u8bbf\u95ee\u6743\u9650\u3002\u4f7f\u7528 aws_lambda.invoke \u51fd\u6570\u8fd0\u884c Lambda \u51fd\u6570\u3002\u6709\u5173\u6b64\u8fc7\u7a0b\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8c03\u7528 Lambda \u51fd\u6570\u3002\u51fd\u6570\u540d\u79f0 \u2013 Lambda \u51fd\u6570\u7684\u540d\u79f0\u3001ARN\u3001\u7248\u672c\u6216\u522b\u540d\u3002\u6709\u5173\u53ef\u80fd\u683c\u5f0f\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u9605 Lambda \u51fd\u6570\u540d\u79f0\u683c\u5f0f\u3002 AWS \u533a\u57df \u2013\uff08\u53ef\u9009\uff09Lambda \u51fd\u6570\u6240\u5728\u7684 AWS \u533a\u57df\u3002\u5982\u679c\u60a8\u672a\u6307\u5b9a Region \u503c\u4e14\u672a\u5728\u51fd\u6570 ARN \u4e2d\u6307\u5b9a\uff0c\u5219 RDS \u4f7f\u7528\u4e0e\u6570\u636e\u5e93\u5b9e\u4f8b\u76f8\u540c\u7684 Region\u3002\u6709\u5173 AWS \u533a\u57df\u540d\u79f0\u548c\u5173\u8054\u503c\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u9605\u533a\u57df\u3001\u53ef\u7528\u533a\u548c\u672c\u5730\u533a\u57df\u3002\u8981\u4fdd\u5b58 Lambda \u51fd\u6570\u540d\u79f0\u4fe1\u606f\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 aws_commons.create_lambda_function_arn \u51fd\u6570\u3002\u8be5\u51fd\u6570\u521b\u5efa\u4e00\u4e2a aws_commons._lambda_function_arn_1 \u590d\u5408\u7ed3\u6784\u6765\u5b58\u50a8\u540d\u79f0\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\u3002 psql=&gt; SELECT aws_commons.create_lambda_function_arn(&#39;my-function&#39;, &#39;us-west-2&#39;) AS aws_lambda_arn_1 \\gsetpsql=&gt; SELECT aws_commons.create_lambda_function_arn(&#39;123456789012:function:my-function&#39;- ) AS lambda_partial_arn_1 \\gsetpsql=&gt; SELECT aws_commons.create_lambda_function_arn(&#39;arn:aws:lambda:us-west-2:123456789012:function:my-function&#39;) AS lambda_arn_1 \\gset\n\u60a8\u53ef\u4ee5\u7a0d\u540e\u5728\u8c03\u7528 aws_lambda.invoke \u51fd\u6570\u65f6\u63d0\u4f9b\u8fd9\u4e9b\u503c\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4f5c\u4e3a\u53c2\u6570\u3002\u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605\u8c03\u7528 Lambda \u51fd\u6570\u3002\u8981\u4f7f\u7528 Lambda \u51fd\u6570\uff0c\u8bf7\u6388\u4e88\u60a8\u7684 PostgreSQL \u6570\u636e\u5e93\u5b9e\u4f8b\u8bbf\u95ee Lambda \u7684\u6743\u9650\u3002\u4e3a\u6b64\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8fc7\u7a0b\u3002\u6b64\u7b56\u7565\u63d0\u4f9b\u5141\u8bb8\u60a8\u7684 PostgreSQL \u6570\u636e\u5e93\u5b9e\u4f8b\u8c03\u7528 Lambda \u51fd\u6570\u7684\u6743\u9650\u3002\u5728\u7b56\u7565\u4e2d\u5305\u542b\u6240\u9700\u7684\u64cd\u4f5c lambda:InvokeFunction \u4ee5\u5141\u8bb8\u4ece RDS for PostgreSQL \u6570\u636e\u5e93\u5b9e\u4f8b\u8c03\u7528 Lambda\u3002\u5305\u62ec\u6807\u8bc6 Lambda \u51fd\u6570\u7684 Amazon \u8d44\u6e90\u540d\u79f0 (ARN)\u3002\u8bbf\u95ee Lambda \u7684 ARN \u683c\u5f0f\u4e3a\uff1aarn:aws:lambda::function:example_function/* \u6709\u5173\u4e3a RDS for PostgreSQL \u521b\u5efa IAM \u7b56\u7565\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u4e3a IAM \u6570\u636e\u5e93\u8bbf\u95ee\u521b\u5efa\u548c\u4f7f\u7528 IAM \u7b56\u7565\u3002\u53e6\u8bf7\u53c2\u9605 IAM \u7528\u6237\u6307\u5357\u4e2d\u7684 IAM \u6559\u7a0b\uff1a\u521b\u5efa\u5e76\u9644\u52a0\u60a8\u7684\u7b2c\u4e00\u4e2a\u5ba2\u6237\u6258\u7ba1\u7b56\u7565\u3002\u4ee5\u4e0b AWS CLI \u547d\u4ee4\u4f7f\u7528\u8fd9\u4e9b\u9009\u9879\u521b\u5efa\u540d\u4e3a rds-lambda-policy \u7684 IAM \u7b56\u7565\u3002\u5b83\u6388\u4e88\u5bf9\u540d\u4e3a example_function \u7684\u51fd\u6570\u7684\u8bbf\u95ee\u6743\u9650\u3002\naws iam create-policy --policy-name rds-lambda-policy --policy-document &#39; { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Sid&quot;: &quot;AllowAccessToExampleFunction&quot;, &quot;Effect &quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;lambda:InvokeFunction&quot;, &quot;Resource&quot;: &quot;arn:aws:lambda:&lt;region&gt;:&lt;123456789012&gt;:function:example_function&quot; } ]}&#39; \u521b\u5efa\u7b56\u7565\u540e\uff0c\u8bf7\u6ce8\u610f\u7b56\u7565\u7684 ARN\u3002\u5c06\u7b56\u7565\u9644\u52a0\u5230 IAM \u89d2\u8272\u65f6\uff0c\u60a8\u9700\u8981 ARN \u7528\u4e8e\u540e\u7eed\u6b65\u9aa4\u3002\u60a8\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u8ba9 RDS for PostgreSQL \u53ef\u4ee5\u4ee3\u8868\u60a8\u4ee3\u5165\u6b64 IAM \u89d2\u8272\u4ee5\u8bbf\u95ee\u60a8\u7684 Lambda \u51fd\u6570\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 IAM \u7528\u6237\u6307\u5357\u4e2d\u7684\u521b\u5efa\u89d2\u8272\u4ee5\u5c06\u6743\u9650\u59d4\u6d3e\u7ed9 IAM \u7528\u6237\u3002\u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4f7f\u7528 AWS CLI \u547d\u4ee4\u521b\u5efa\u540d\u4e3a rds-lambda-role \u7684\u89d2\u8272\u3002 aws iam create-role --role-name rds-lambda-role --assume-role-policy-document &#39; { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Effect&quot;: &quot;Allow &quot;, &quot;Principal&quot;: { &quot;Service&quot;: &quot;rds.amazonaws.com&quot; }, &quot;Action&quot;: &quot;sts:AssumeRole&quot; } ] }&#39; \u4ee5\u4e0b AWS CLI \u547d\u4ee4\u5c06\u4e4b\u524d\u521b\u5efa\u7684\u7b56\u7565\u9644\u52a0\u5230\u540d\u4e3a rds-lambda \u7684\u89d2\u8272-\u89d2\u8272\u3002\u5c06 your-policy-arn \u66ff\u6362\u4e3a\u60a8\u5728\u524d\u9762\u6b65\u9aa4\u4e2d\u8bb0\u4e0b\u7684\u7b56\u7565 ARN\u3002\u5c06 IAM \u89d2\u8272\u6dfb\u52a0\u5230\u6570\u636e\u5e93\u5b9e\u4f8b\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 AWS CLI \u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u5982\u4e0b\u6240\u8ff0\u3002\n\u4f7f\u7528\u4ee5\u4e0b CLI \u547d\u4ee4\u5c06 IAM \u89d2\u8272\u6dfb\u52a0\u5230\u540d\u4e3a my-db-instance \u7684 RDS for PostgreSQL \u6570\u636e\u5e93\u5b9e\u4f8b\u3002\u5c06 your-role-arn \u66ff\u6362\u4e3a\u60a8\u5728\u4e0a\u4e00\u6b65\u4e2d\u8bb0\u4e0b\u7684\u89d2\u8272 ARN\u3002\u4f7f\u7528 Lambda \u4f5c\u4e3a --feature-name \u9009\u9879\u7684\u503c\uff0c\u5982\u4e0b\u6240\u793a\u3002\u4e0b\u9762\uff0c\u60a8\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b\u8c03\u7528 aws_lambda.invoke \u51fd\u6570\u7684\u793a\u4f8b\u3002\u5728\u4f7f\u7528 aws_lambda.invoke \u51fd\u6570\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u5b8c\u6210\u4ee5\u4e0b\u5148\u51b3\u6761\u4ef6\uff1a \u5982\u6307\u5b9a\u8981\u4f7f\u7528\u7684 Lambda \u51fd\u6570\u4e2d\u6240\u8ff0\u786e\u5b9a\u8981\u8c03\u7528\u7684 Lambda \u51fd\u6570\u3002\u786e\u4fdd\u6570\u636e\u5e93\u5b9e\u4f8b\u5177\u6709\u5bf9 Lambda \u7684\u8c03\u7528\u8bbf\u95ee\u6743\u9650\uff0c\u5982\u6388\u4e88 RDS \u5bf9 Lambda \u7684\u8bbf\u95ee\u6743\u9650\u4e2d\u6240\u8ff0\u3002\u60a8\u53ef\u4ee5\u540c\u6b65\u6216\u5f02\u6b65\u8c03\u7528 Lambda \u51fd\u6570\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 aws_lambda.invoke \u51fd\u6570\u7684 invocation_type \u53c2\u6570\u7684\u4ee5\u4e0b\u503c\u63a7\u5236\u6b64\u64cd\u4f5c\uff1a Lambda \u51fd\u6570\u7684 RequestResponse \u8c03\u7528\u7c7b\u578b\u662f\u540c\u6b65\u7684\uff0c\u5e76\u5728 aws_lambda.invoke \u51fd\u6570\u7684\u7ed3\u679c\u4e2d\u8fd4\u56de\u54cd\u5e94\u8d1f\u8f7d\u3002\u5f53\u60a8\u7684\u5de5\u4f5c\u6d41\u4f9d\u8d56\u4e8e\u7acb\u5373\u63a5\u6536 Lambda \u51fd\u6570\u7ed3\u679c\u65f6\uff0c\u8bf7\u4f7f\u7528 RequestResponse \u8c03\u7528\u7c7b\u578b\u3002\u4ee5\u4e0b\u5927\u591a\u6570\u793a\u4f8b\u4f7f\u7528\u540c\u6b65\u8c03\u7528\u3002 Lambda \u51fd\u6570\u7684\u4e8b\u4ef6\u8c03\u7528\u7c7b\u578b\u662f\u5f02\u6b65\u7684\uff0c\u5e76\u7acb\u5373\u8fd4\u56de\u800c\u4e0d\u8fd4\u56de\u8d1f\u8f7d\u3002\u5f53\u60a8\u5728\u5de5\u4f5c\u6d41\u7a0b\u7ee7\u7eed\u4e4b\u524d\u4e0d\u9700\u8981\u77e5\u9053 Lambda \u51fd\u6570\u7684\u7ed3\u679c\u65f6\uff0c\u8bf7\u4f7f\u7528\u4e8b\u4ef6\u7c7b\u578b\u7684\u8c03\u7528\u3002\u6709\u5173\u5f02\u6b65\u8c03\u7528\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 Lambda \u51fd\u6570\u7684\u5f02\u6b65\u4e8b\u4ef6\u8c03\u7528\u3002\n\u4ee5\u4e0b aws_lambda.invoke \u793a\u4f8b\u4f7f\u7528 aws_lambda_arn_1 \u7ed3\u6784\uff0c\u5176\u4e2d\u5305\u542b Lambda \u51fd\u6570\u7684\u8bc6\u522b\u4fe1\u606f\u3002\u8981\u521b\u5efa\u7ed3\u6784\uff0c\u8bf7\u4f7f\u7528 aws_commons.create_lambda_function_arn \u51fd\u6570\u3002\u6709\u5173\u4f7f\u7528 aws_commons.create_lambda_function_arn \u51fd\u6570\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605\u6307\u5b9a\u8981\u4f7f\u7528\u7684 Lambda \u51fd\u6570\u3002\u4ee5\u4e0b\u662f\u540c\u6b65 Lambda \u51fd\u6570\u8c03\u7528\u7684\u793a\u4f8b\u3002\u4e0b\u9762\u4e24\u4e2a aws_lambda.invoke \u51fd\u6570\u8c03\u7528\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002 psql=&gt; SELECT * FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&quot;body&quot;: &quot;Hello from Postgres!&quot;}&#39;::json);psql=&gt; SELECT * FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&quot;body&quot;: &quot;\u6765\u81ea Postgres \u7684\u4f60\u597d\uff01&quot;}&#39;::json, &#39;RequestResponse&#39;); :&#39;aws_lambda_arn_1&#39; \u2013 \u6b64\u53c2\u6570\u662f\u6807\u8bc6\u8981\u8c03\u7528\u7684 Lambda \u51fd\u6570\u7684\u7ed3\u6784\u3002\u6b64\u793a\u4f8b\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u6807\u8bc6\u5148\u524d\u521b\u5efa\u7684\u7ed3\u6784\u3002\u60a8\u53ef\u4ee5\u6539\u4e3a\u901a\u8fc7\u5728 aws_lambda.invoke \u51fd\u6570\u8c03\u7528\u4e2d\u5305\u542b aws_commons.create_lambda_function_arn \u51fd\u6570\u8c03\u7528\u5185\u8054\u6765\u521b\u5efa\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a\u3002\u4ee5\u4e0b\u662f\u5f02\u6b65 Lambda \u51fd\u6570\u8c03\u7528\u7684\u793a\u4f8b\u3002\u4e8b\u4ef6\u8c03\u7528\u7c7b\u578b\u4f7f\u7528\u6307\u5b9a\u7684\u8f93\u5165\u8d1f\u8f7d\u5b89\u6392 Lambda \u51fd\u6570\u8c03\u7528\u5e76\u7acb\u5373\u8fd4\u56de\u3002\u5728\u4e0d\u4f9d\u8d56\u4e8e Lambda \u51fd\u6570\u7ed3\u679c\u7684\u67d0\u4e9b\u5de5\u4f5c\u6d41\u4e2d\u4f7f\u7528\u4e8b\u4ef6\u8c03\u7528\u7c7b\u578b\u3002\u60a8\u53ef\u4ee5\u8bf7\u6c42\u5728\u51fd\u6570\u54cd\u5e94\u4e2d\u5305\u542b\u6267\u884c\u65e5\u5fd7\u7684\u6700\u540e 4 KB\uff0c\u5982\u4e0b\u6240\u793a\u3002 psql=&gt; SELECT *, select convert_from(decode(log_result, &#39;base64&#39;), &#39;utf-8&#39;) \u4f5c\u4e3a\u65e5\u5fd7 FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&quot;body&quot;: &quot;Hello from Postgres!&quot;}&#39; ::json, &#39;RequestResponse&#39;, &#39;Tail&#39;);\n\u5c06 aws_lambda.invoke \u51fd\u6570\u7684 log_type \u53c2\u6570\u8bbe\u7f6e\u4e3a Tail \u4ee5\u5728\u54cd\u5e94\u4e2d\u5305\u542b\u6267\u884c\u65e5\u5fd7\u3002 log_type \u53c2\u6570\u7684\u9ed8\u8ba4\u503c\u4e3a None\u3002\u8fd4\u56de\u7684 log_result \u662f\u4e00\u4e2a base64 \u7f16\u7801\u7684\u5b57\u7b26\u4e32\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 decode \u548c convert_from PostgreSQL \u51fd\u6570\u7684\u7ec4\u5408\u6765\u89e3\u7801\u5185\u5bb9\u3002\u60a8\u53ef\u4ee5\u4f20\u5165\u4e0e\u6709\u6548\u8d1f\u8f7d\u5206\u5f00\u7684\u5ba2\u6237\u7aef\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5982\u4e0b\u6240\u793a\u3002 psql=&gt; SELECT *, convert_from(decode(log_result, &#39;base64&#39;), &#39;utf-8&#39;) as log FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&quot;body&quot;: &quot;Hello from Postgres!&quot;}&#39;: :json, &#39;RequestResponse&#39;, &#39;Tail&#39;);\u6709\u5173\u8c03\u7528\u7279\u5b9a\u7248\u672c\u7684 Lambda \u51fd\u6570\u7684\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605\u4ee5\u4e0b\u5185\u5bb9\u3002\u8981\u8bc6\u522b Lambda \u51fd\u6570\u7684\u7248\u672c\uff0c\u8bf7\u4f7f\u7528 aws_lambda.invoke \u51fd\u6570\u7684\u9650\u5b9a\u7b26\u53c2\u6570\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u201ccustom_version\u201d\u662f\u6807\u8bc6\u8981\u8c03\u7528\u7684\u51fd\u6570\u7248\u672c\u7684\u522b\u540d\u6216\u7248\u672c\u3002\u60a8\u53ef\u4ee5\u6539\u4e3a\u63d0\u4f9b\u5e26\u6709\u51fd\u6570\u540d\u79f0\u4fe1\u606f\u7684 Lambda \u51fd\u6570\u9650\u5b9a\u7b26\uff0c\u5982\u4e0b\u6240\u793a\u3002\n\u5982\u679c Lambda \u51fd\u6570\u5728\u8bf7\u6c42\u5904\u7406\u671f\u95f4\u629b\u51fa\u5f02\u5e38\uff0c\u5219 aws_lambda.invoke \u5c06\u5931\u8d25\u5e76\u663e\u793a PostgreSQL \u9519\u8bef\uff0c\u5982\u4e0b\u6240\u793a\u3002 psql=&gt; SELECT * FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&quot;body&quot;: &quot;Hello from Postgres!&quot;}&#39;::json);ERROR: lambda invocation failedDETAIL: &quot;arn:aws:lambda:us-west -2:123456789012:function:my-function&quot; \u8fd4\u56de\u9519\u8bef\u201c\u672a\u5904\u7406\u201d\uff0c\u8be6\u7ec6\u4fe1\u606f\uff1a\u201c&lt;\u9519\u8bef\u8be6\u7ec6\u4fe1\u606f\u5b57\u7b26\u4e32&gt;\u201d\u3002\u4ee5\u4e0b\u662f\u7528\u4e8e\u4f7f\u7528 RDS for PostgreSQL \u8c03\u7528 Lambda \u51fd\u6570\u7684\u51fd\u6570\u7684\u53c2\u8003\u3002\u6709\u5173\u8c03\u7528 Lambda \u51fd\u6570\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u53e6\u8bf7\u53c2\u9605 AWS Lambda \u5f00\u53d1\u4eba\u5458\u6307\u5357\u4e2d\u7684\u8c03\u7528\u3002 aws_lambda.invoke(IN function_name TEXT,IN payload JSON,IN region TEXT DEFAULT NULL,IN invocation_type TEXT DEFAULT &#39;RequestResponse&#39;,IN log_type TEXT DEFAULT &#39;None&#39;,IN context JSON DEFAULT NULL,IN qualifier VARCHAR(128) DEFAULT NULL,OUT status_code INT,OUT \u6709\u6548\u8f7d\u8377 JSON,OUT \u6267\u884c\u7684_\u7248\u672c\u6587\u672c,OUT log_result TEXT) aws_lambda.invoke(IN function_name aws_commons._lambda_function_arn_1,IN \u6709\u6548\u8f7d\u8377 JSON,IN invocation_type TEXT DEFAULT &#39;RequestResponse&#39;,IN log_type TEXT DEFAULT NULL \u4e0a\u4e0b\u6587 &#39;None&#39;,FAULIN ,IN qualifier VARCHAR(128) DEFAULT NULL,OUT status_code INT,OUT payload JSON,OUT execution_version TEXT,OUT log_result TEXT) aws_lambda.invoke(IN function_name TEXT,IN payload JSONB,IN region TEXT DEFAULT NULL,IN invocation_type TEXT DEFAULT &#39;RequestResponse &#39;,IN log_type TEXT DEFAULT &#39;None&#39;,IN context JSONB DEFAULT NULL,IN qualifier VARCHAR(128) DEFAULT NULL,OUT status_code INT,OUT payload JSONB,OUT execution_version TEXT,OUT log_result TEXT)\naws_lambda.invoke(IN function_name aws_commons._lambda_function_arn_1,IN \u6709\u6548\u8f7d\u8377 JSONB,IN invocation_type TEXT DEFAULT &#39;RequestResponse&#39;,IN log_type TEXT DEFAULT &#39;None&#39;,IN \u4e0a\u4e0b\u6587 JSONB DEFAULT NULL,IN \u9650\u5b9a\u7b26 VARCHAR(128, DEFAULT \u72b6\u6001)\u6709\u6548\u8d1f\u8f7d JSONB,OUT \u6267\u884c\u7248\u672c TEXT,OUT log_result TEXT) Lambda \u51fd\u6570\u7684\u6807\u8bc6\u540d\u79f0\u3002\u8be5\u503c\u53ef\u4ee5\u662f\u51fd\u6570\u540d\u79f0\u3001ARN \u6216\u90e8\u5206 ARN\u3002\u6709\u5173\u53ef\u80fd\u683c\u5f0f\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u9605 AWS Lambda \u5f00\u53d1\u4eba\u5458\u6307\u5357\u4e2d\u7684 Lambda \u51fd\u6570\u540d\u79f0\u683c\u5f0f\u3002 Lambda \u51fd\u6570\u7684\u8f93\u5165\u3002\u683c\u5f0f\u53ef\u4ee5\u662f JSON \u6216 JSONB\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 PostgreSQL \u6587\u6863\u4e2d\u7684 JSON \u7c7b\u578b\u3002 \uff08\u53ef\u9009\uff09\u51fd\u6570\u7684 Lambda \u533a\u57df\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRDS \u4ece function_name \u4e2d\u7684\u5b8c\u6574 ARN \u89e3\u6790 AWS \u533a\u57df\uff0c\u6216\u8005\u5b83\u4f7f\u7528 RDS for PostgreSQL \u6570\u636e\u5e93\u5b9e\u4f8b\u533a\u57df\u3002\u5982\u679c\u6b64 Region \u503c\u4e0e function_name ARN \u4e2d\u63d0\u4f9b\u7684\u503c\u51b2\u7a81\uff0c\u5219\u4f1a\u5f15\u53d1\u9519\u8bef\u3002 Lambda \u51fd\u6570\u7684\u8c03\u7528\u7c7b\u578b\u3002\u8be5\u503c\u533a\u5206\u5927\u5c0f\u5199\u3002\u53ef\u80fd\u7684\u503c\u5305\u62ec\uff1a RequestResponse \u2013 \u9ed8\u8ba4\u503c\u3002\u8fd9\u79cd\u7c7b\u578b\u7684 Lambda \u51fd\u6570\u8c03\u7528\u662f\u540c\u6b65\u7684\uff0c\u5e76\u5728\u7ed3\u679c\u4e2d\u8fd4\u56de\u54cd\u5e94\u8d1f\u8f7d\u3002\u5f53\u60a8\u7684\u5de5\u4f5c\u6d41\u4f9d\u8d56\u4e8e\u7acb\u5373\u63a5\u6536 Lambda \u51fd\u6570\u7ed3\u679c\u65f6\uff0c\u8bf7\u4f7f\u7528 RequestResponse \u8c03\u7528\u7c7b\u578b\u3002\u4e8b\u4ef6 \u2013 \u5bf9 Lambda \u51fd\u6570\u7684\u8fd9\u79cd\u7c7b\u578b\u7684\u8c03\u7528\u662f\u5f02\u6b65\u7684\uff0c\u5e76\u4e14\u5728\u6ca1\u6709\u8fd4\u56de\u8d1f\u8f7d\u7684\u60c5\u51b5\u4e0b\u7acb\u5373\u8fd4\u56de\u3002\u5982\u679c\u60a8\u5728\u5de5\u4f5c\u6d41\u7a0b\u7ee7\u7eed\u4e4b\u524d\u4e0d\u9700\u8981 Lambda \u51fd\u6570\u7684\u7ed3\u679c\uff0c\u8bf7\u4f7f\u7528\u4e8b\u4ef6\u8c03\u7528\u7c7b\u578b\u3002\n\u8981\u5728 log_result \u8f93\u51fa\u53c2\u6570\u4e2d\u8fd4\u56de\u7684 Lambda \u65e5\u5fd7\u7684\u7c7b\u578b\u3002\u8be5\u503c\u533a\u5206\u5927\u5c0f\u5199\u3002\u53ef\u80fd\u7684\u503c\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff1a Tail \u2013 \u8fd4\u56de\u7684 log_result \u8f93\u51fa\u53c2\u6570\u5c06\u5305\u62ec\u6267\u884c\u65e5\u5fd7\u7684\u6700\u540e 4 KB\u3002 JSON \u6216 JSONB \u683c\u5f0f\u7684\u5ba2\u6237\u7aef\u4e0a\u4e0b\u6587\u3002\u8981\u4f7f\u7528\u7684\u5b57\u6bb5\u5305\u62ec custom \u548c env\u3002\u6807\u8bc6\u8981\u8c03\u7528\u7684 Lambda \u51fd\u6570\u7248\u672c\u7684\u9650\u5b9a\u7b26\u3002\u5982\u679c\u6b64\u503c\u4e0e function_name ARN \u4e2d\u63d0\u4f9b\u7684\u503c\u51b2\u7a81\uff0c\u5219\u4f1a\u5f15\u53d1\u9519\u8bef\u3002 HTTP \u72b6\u6001\u54cd\u5e94\u4ee3\u7801\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 AWS Lambda \u5f00\u53d1\u4eba\u5458\u6307\u5357\u4e2d\u7684 Lambda \u8c03\u7528\u54cd\u5e94\u5143\u7d20\u3002\u4ece\u8fd0\u884c\u7684 Lambda \u51fd\u6570\u8fd4\u56de\u7684\u4fe1\u606f\u3002\u683c\u5f0f\u4e3a JSON \u6216 JSONB\u3002\u8c03\u7528Lambda\u51fd\u6570\u65f6log_type\u503c\u4e3aTail\u65f6\u8fd4\u56de\u7684\u6267\u884c\u65e5\u5fd7\u4fe1\u606f\u3002\u7ed3\u679c\u5305\u542b\u4ee5 Base64 \u7f16\u7801\u7684\u6267\u884c\u65e5\u5fd7\u7684\u6700\u540e 4 KB\u3002\n\u521b\u5efa aws_commons._lambda_function_arn_1 \u7ed3\u6784\u4ee5\u4fdd\u5b58 Lambda \u51fd\u6570\u540d\u79f0\u4fe1\u606f\u3002\u60a8\u53ef\u4ee5\u5728 aws_lambda.invoke aws_lambda.invoke \u51fd\u6570\u7684 function_name \u53c2\u6570\u4e2d\u4f7f\u7528 aws_commons.create_lambda_function_arn \u51fd\u6570\u7684\u7ed3\u679c\u3002\u5305\u542b Lambda \u51fd\u6570\u540d\u79f0\u7684\u5fc5\u9700\u6587\u672c\u5b57\u7b26\u4e32\u3002\u8be5\u503c\u53ef\u4ee5\u662f\u51fd\u6570\u540d\u79f0\u3001\u90e8\u5206 ARN \u6216\u5b8c\u6574 ARN\u3002\u5305\u542b Lambda \u51fd\u6570\u6240\u5728 AWS \u533a\u57df\u7684\u53ef\u9009\u6587\u672c\u5b57\u7b26\u4e32\u3002\u6709\u5173\u533a\u57df\u540d\u79f0\u548c\u5173\u8054\u503c\u7684\u5217\u8868\uff0c\u8bf7\u53c2\u9605\u533a\u57df\u3001\u53ef\u7528\u533a\u548c\u672c\u5730\u533a\u57df\u3002", "note_en": "You can invoke AWS Lambda functions from an  RDS for PostgreSQL DB instance. To do this, use the  aws_lambda PostgreSQL extension provided with  RDS for PostgreSQL.\n  AWS Lambda is a compute service that you can use to run code. For example, you can use Lambda functions to process event notifications from a DB instance. For more information about Lambda, see  What is AWS Lambda? in the  AWS Lambda Developer Guide.\n        You can invoke a Lambda function from an  RDS for PostgreSQL database with the following procedure.\n  Install the required PostgreSQL extensions. These include the  aws_lambda and  aws_commons extensions. To do so, start psql and run the following commands.\n    The  aws_lambda extension provides the  aws_lambda.invoke function that you use to invoke functions in Lambda. The  aws_commons extension is included to provide additional helper functions.\n  Identify the name or Amazon Resource Name (ARN) for the Lambda function to use. For details about this process, see  Specifying the Lambda function to use.\n  To invoke a Lambda function, give the  RDS for PostgreSQL DB instance permission to access the Lambda invoke API operation. Doing this includes the following steps:\n  Create an AWS Identity and Access Management (IAM) policy that provides access to a Lambda function that you want to invoke.\n  Use the  aws_lambda.invoke function to run the Lambda function. For details about this process, see  Invoking Lambda functions.\n      Function name \u2013 The name of the Lambda function, ARN, version, or alias. For a listing of possible formats, see   Lambda function name formats.\n  AWS Region \u2013 (Optional) The AWS Region where the Lambda function is located. If you don&#39;t specify a Region value and it&#39;s not specified in the function ARN,  RDS uses the same Region as the  DB instance.\n  For a listing of AWS Region names and associated values, see   \t Regions, Availability Zones, and Local Zones \t .\n  To hold the Lambda function name information, you can use the  aws_commons.create_lambda_function_arn function. This function creates an  aws_commons._lambda_function_arn_1 composite structure to store the name information, as shown following.\n  psql=&gt; SELECT aws_commons.create_lambda_function_arn( &#39;my-function&#39;, &#39;us-west-2&#39;) AS aws_lambda_arn_1 \\gsetpsql=&gt; SELECT aws_commons.create_lambda_function_arn( &#39;123456789012:function:my-function&#39;, &#39;us-west-2&#39;) AS lambda_partial_arn_1 \\gsetpsql=&gt; SELECT aws_commons.create_lambda_function_arn( &#39;arn:aws:lambda:us-west-2:123456789012:function:my-function&#39;) AS lambda_arn_1 \\gset\n  You can later provide any of these values as a parameter in calls to the  aws_lambda.invoke function. For examples, see  Invoking Lambda functions.\n    To use a Lambda function, give your PostgreSQL  DB instance permission to access Lambda. To do this, use the following procedure.\n  This policy provides the permissions that allow your PostgreSQL  DB instance to invoke Lambda functions.\n    Include in the policy the required action  lambda:InvokeFunction to allow Lambda invocation from your  RDS for PostgreSQL DB instance.\n  Include the Amazon Resource Name (ARN) that identifies the Lambda function. The ARN format for accessing Lambda is:  arn:aws:lambda:::function: example_function/*\n  For more information on creating an IAM policy for  RDS for PostgreSQL, see   Creating and using an IAM policy for IAM database access . See also   IAM Tutorial: Create and attach your first customer managed policy  in the  IAM User Guide.\n  The following AWS CLI command creates an IAM policy named  rds-lambda-policy with these options. It grants access to a function named  example_function.\n  aws iam create-policy --policy-name rds-lambda-policy --policy-document &#39; { &#34;Version&#34;: &#34;2012-10-17&#34;, &#34;Statement&#34;: [  { &#34;Sid&#34;: &#34;AllowAccessToExampleFunction&#34;, &#34;Effect&#34;: &#34;Allow&#34;, &#34;Action&#34;: &#34;lambda:InvokeFunction&#34;, &#34;Resource&#34;: &#34;arn:aws:lambda:&lt;region&gt;:&lt;123456789012&gt;:function:example_function&#34; } ]}&#39;\n  After you create the policy, note the ARN of the policy. You need the ARN for a subsequent step when you attach the policy to an IAM role.\n  You do this so that  RDS for PostgreSQL can assume this IAM role on your behalf to access your Lambda function. For more information, see  Creating a role to delegate permissions to an IAM user  in the  IAM User Guide.\n  The following example shows using the AWS CLI command to create a role named  rds-lambda-role.\n  aws iam create-role --role-name rds-lambda-role --assume-role-policy-document &#39; { &#34;Version&#34;: &#34;2012-10-17&#34;, &#34;Statement&#34;: [  { &#34;Effect&#34;: &#34;Allow&#34;, &#34;Principal&#34;:  { &#34;Service&#34;: &#34;rds.amazonaws.com&#34; }, &#34;Action&#34;: &#34;sts:AssumeRole&#34; } ] }&#39;\n  The following AWS CLI command attaches the policy created earlier to the role named  rds-lambda-role. Replace  your-policy-arn with the policy ARN that you noted in an earlier step.\n  Add the IAM role to the DB instance. You do so by using the AWS CLI, as described following.\n  Use the following CLI command to add the IAM role to the RDS for PostgreSQL DB instance named  my-db-instance. Replace   your-role-arn with the role ARN that you noted in a previous step. Use  Lambda for the value of the  --feature-name option, as shown following.\n    Following, you can find some examples of calling the  aws_lambda.invoke function. Before you use the  aws_lambda.invoke function, be sure to complete the following prerequisites:\n  Determine which Lambda function to invoke as described in  Specifying the Lambda function to use.\n  Make sure that the  DB instance has invoke access to Lambda as described in  Giving RDS access to Lambda.\n  You can invoke a Lambda function synchronously or asynchronously. You control this with the following values for the  aws_lambda.invoke function&#39;s  invocation_type parameter:\n  The  RequestResponse type of invocation for a Lambda function is synchronous and returns a response payload in the result of the  aws_lambda.invoke function. Use the  RequestResponse invocation type when your workflow depends on receiving the Lambda function result immediately. Most of the following examples use synchronous invocation.\n  The  Event type of invocation for a Lambda function is asynchronous and returns immediately without a returned payload. Use the  Event type of invocation when you don&#39;t need to know the result of the Lambda function before your workflow moves on. For an example of asynchronous invocation, see  Asynchronous event invocation of Lambda functions.\n  The following  aws_lambda.invoke examples use a  aws_lambda_arn_1 structure, which contains the identifying information for the Lambda function. To create the structure, use the  aws_commons.create_lambda_function_arn function. For an example of using the  aws_commons.create_lambda_function_arn function, see  Specifying the Lambda function to use.\n      Following is an example of a synchronous Lambda function invocation. The following two  aws_lambda.invoke function call results are the same.\n  psql=&gt; SELECT * FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&#34;body&#34;: &#34;Hello from Postgres!&#34;}&#39;::json);psql=&gt; SELECT * FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&#34;body&#34;: &#34;Hello from Postgres!&#34;}&#39;::json, &#39;RequestResponse&#39;);\n    :&#39;aws_lambda_arn_1&#39; \u2013 This parameter is a structure that identifies the Lambda function to call. This example uses a variable to identify the previously created structure. You can instead create the structure by including the  aws_commons.create_lambda_function_arn function call inline within the  aws_lambda.invoke function call as follows.\n    Following is an example of an asynchronous Lambda function invocation. The  Event invocation type schedules the Lambda function invocation with the specified input payload and returns immediately. Use the  Event invocation type in certain workflows that don&#39;t depend on the results of the Lambda function.\n      You can request to include the last 4 KB of the execution log in the function response, as shown following.\n  psql=&gt; SELECT *, select convert_from(decode(log_result, &#39;base64&#39;), &#39;utf-8&#39;) as log FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&#34;body&#34;: &#34;Hello from Postgres!&#34;}&#39;::json, &#39;RequestResponse&#39;, &#39;Tail&#39;);\n  Set the  aws_lambda.invoke function&#39;s  log_type parameter to  Tail to include the execution log in the response. The default value for the  log_type parameter is  None.\n  The  log_result that&#39;s returned is a  base64 encoded string. You can decode the contents using a combination of the  decode and  convert_from PostgreSQL functions.\n    You can pass in client context information that is separate from the payload, as shown following.\n  psql=&gt; SELECT *, convert_from(decode(log_result, &#39;base64&#39;), &#39;utf-8&#39;) as log FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&#34;body&#34;: &#34;Hello from Postgres!&#34;}&#39;::json, &#39;RequestResponse&#39;, &#39;Tail&#39;);\n      For an example of invoking a specific version of a Lambda function, see the following.\n    To identify a Lambda function&#39;s version, use the  aws_lambda.invoke function&#39;s  qualifier parameter. In this example,  &#39; custom_version&#39; is an alias or version that identifies the version of the function to invoke.\n  You can instead supply a Lambda function qualifier with the function name information as follows.\n      If a Lambda function throws an exception during request processing,  aws_lambda.invoke fails with a PostgreSQL error such as the following.\n  psql=&gt; SELECT * FROM aws_lambda.invoke(:&#39;aws_lambda_arn_1&#39;, &#39; {&#34;body&#34;: &#34;Hello from Postgres!&#34;}&#39;::json);ERROR: lambda invocation failedDETAIL: &#34;arn:aws:lambda:us-west-2:123456789012:function:my-function&#34; returned error &#34;Unhandled&#34;, details: &#34;&lt;Error details string&gt;&#34;.\n    Following is the reference for the functions to use for invoking Lambda functions with  RDS for PostgreSQL.\n        For more details about invoking Lambda functions, see also  Invoke in the  AWS Lambda Developer Guide.\n      aws_lambda.invoke(IN function_name TEXT,IN payload JSON,IN region TEXT DEFAULT NULL,IN invocation_type TEXT DEFAULT &#39;RequestResponse&#39;,IN log_type TEXT DEFAULT &#39;None&#39;,IN context JSON DEFAULT NULL,IN qualifier VARCHAR(128) DEFAULT NULL,OUT status_code INT,OUT payload JSON,OUT executed_version TEXT,OUT log_result TEXT)\n  aws_lambda.invoke(IN function_name aws_commons._lambda_function_arn_1,IN payload JSON,IN invocation_type TEXT DEFAULT &#39;RequestResponse&#39;,IN log_type TEXT DEFAULT &#39;None&#39;,IN context JSON DEFAULT NULL,IN qualifier VARCHAR(128) DEFAULT NULL,OUT status_code INT,OUT payload JSON,OUT executed_version TEXT,OUT log_result TEXT)\n    aws_lambda.invoke(IN function_name TEXT,IN payload JSONB,IN region TEXT DEFAULT NULL,IN invocation_type TEXT DEFAULT &#39;RequestResponse&#39;,IN log_type TEXT DEFAULT &#39;None&#39;,IN context JSONB DEFAULT NULL,IN qualifier VARCHAR(128) DEFAULT NULL,OUT status_code INT,OUT payload JSONB,OUT executed_version TEXT,OUT log_result TEXT)\n  aws_lambda.invoke(IN function_name aws_commons._lambda_function_arn_1,IN payload JSONB,IN invocation_type TEXT DEFAULT &#39;RequestResponse&#39;,IN log_type TEXT DEFAULT &#39;None&#39;,IN context JSONB DEFAULT NULL,IN qualifier VARCHAR(128) DEFAULT NULL,OUT status_code INT,OUT payload JSONB,OUT executed_version TEXT,OUT log_result TEXT)\n   The identifying name of the Lambda function. The value can be the function name, an ARN, or a partial ARN. For a listing of possible formats, see   Lambda function name formats in the  AWS Lambda Developer Guide.\n    The input for the Lambda function. The format can be JSON or JSONB. For more information, see   JSON Types  in the PostgreSQL documentation.\n    (Optional) The Lambda Region for the function. By default,  RDS resolves the AWS Region from the full ARN in the  function_name or it uses the  RDS for PostgreSQL DB instance Region. If this Region value conflicts with the one provided in the  function_name ARN, an error is raised.\n    The invocation type of the Lambda function. The value is case-sensitive. Possible values include the following:\n  RequestResponse \u2013 The default. This type of invocation for a Lambda function is synchronous and returns a response payload in the result. Use the  RequestResponse invocation type when your workflow depends on receiving the Lambda function result immediately.\n  Event \u2013 This type of invocation for a Lambda function is asynchronous and returns immediately without a returned payload. Use the  Event invocation type when you don&#39;t need results of the Lambda function before your workflow moves on.\n    The type of Lambda log to return in the  log_result output parameter. The value is case-sensitive. Possible values include the following:\n  Tail \u2013 The returned  log_result output parameter will include the last 4 KB of the execution log.\n    Client context in JSON or JSONB format. Fields to use include than  custom and  env.\n    A qualifier that identifies a Lambda function&#39;s version to be invoked. If this value conflicts with one provided in the  function_name ARN, an error is raised.\n  An HTTP status response code. For more information, see  Lambda Invoke response elements in the  AWS Lambda Developer Guide.\n    The information returned from the Lambda function that ran. The format is in JSON or JSONB.\n        The execution log information returned if the  log_type value is  Tail when the Lambda function was invoked. The result contains the last 4 KB of the execution log encoded in Base64.\n    Creates an  aws_commons._lambda_function_arn_1 structure to hold Lambda function name information. You can use the results of the  aws_commons.create_lambda_function_arn function in the  function_name parameter of the aws_lambda.invoke  aws_lambda.invoke function.\n      A required text string containing the Lambda function name. The value can be a function name, a partial ARN, or a full ARN.\n    An optional text string containing the AWS Region that the Lambda function is in. For a listing of Region names and associated values, see   \t Regions, Availability Zones, and Local Zones \t .", "posttime": "2021-08-06 09:52:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8c03\u7528,lambda", "title": "\u76f4\u63a5\u4ece Postgres \u8c03\u7528 Lambda \u51fd\u6570", "title_en": "Invoke Lambda functions directly from Postgres", "transed": 1, "url": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/PostgreSQL-Lambda.html#PostgreSQL-Lambda-invoke", "via": "", "real_tags": ["\u8c03\u7528", "lambda"]}, {"category": "", "categoryclass": "", "imagename": "c8a28f69dd6f4b6d6830cdfd6185f4ff.jpg", "infoid": 1071690, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u5f20\u56fe\u7247\u5c55\u793a\u4e86\u56f4\u7ed5\u9ed1\u6d1e\u7684\u4e00\u7ec4\u58ee\u89c2\u7684\u73af\uff0c\u662f\u7531\u7f8e\u56fd\u5b87\u822a\u5c40\u7684\u94b1\u5fb7\u62c9 X \u5c04\u7ebf\u5929\u6587\u53f0\u548c\u5c3c\u5c14\u00b7\u76d6\u96f7\u65af\u00b7\u65af\u5a01\u592b\u7279\u5929\u6587\u53f0\u62cd\u6444\u7684\u3002\u5de8\u73af\u7684 X \u5c04\u7ebf\u56fe\u50cf\u63ed\u793a\u4e86\u6211\u4eec\u94f6\u6cb3\u7cfb\u4e2d\u5c18\u57c3\u7684\u4fe1\u606f\uff0c\u5176\u539f\u7406\u4e0e\u5728\u533b\u751f\u529e\u516c\u5ba4\u548c\u673a\u573a\u8fdb\u884c\u7684 X \u5c04\u7ebf\u76f8\u4f3c\u3002\u8fd9\u4e2a\u9ed1\u6d1e\u662f\u540d\u4e3a V404 Cygni \u7684\u53cc\u661f\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c\u8ddd\u79bb\u5730\u7403\u7ea6 7,800 \u7c73\u3002\u9ed1\u6d1e\u6b63\u5728\u79ef\u6781\u5730\u5c06\u7269\u8d28\u4ece\u4e00\u9897\u4f34\u661f\uff08\u8d28\u91cf\u7ea6\u4e3a\u592a\u9633\u7684\u4e00\u534a\uff09\u62c9\u5230\u4e00\u4e2a\u56f4\u7ed5\u7740\u9690\u5f62\u7269\u4f53\u7684\u5706\u76d8\u4e2d\u3002\u8fd9\u79cd\u7269\u8d28\u4f1a\u5728 X \u5c04\u7ebf\u4e2d\u53d1\u5149\uff0c\u56e0\u6b64\u5929\u6587\u5b66\u5bb6\u5c06\u8fd9\u4e9b\u7cfb\u7edf\u79f0\u4e3a\u201cX \u5c04\u7ebf\u53cc\u661f\u7cfb\u7edf\u201d\u3002 2015 \u5e74 6 \u6708 5 \u65e5\uff0c\u65af\u5a01\u592b\u7279\u53d1\u73b0\u4e86\u5929\u9e45\u5ea7 V404 \u7684 X \u5c04\u7ebf\u7206\u53d1\u3002\u8fd9\u6b21\u7206\u53d1\u4ece\u4e00\u79cd\u79f0\u4e3a\u5149\u56de\u6ce2\u7684\u73b0\u8c61\u4e2d\u4ea7\u751f\u4e86\u9ad8\u80fd\u73af\u3002\u5f53\u6765\u81ea\u9ed1\u6d1e\u7cfb\u7edf\u7684\u4e00\u9635 X \u5c04\u7ebf\u4ece\u5929\u9e45\u5ea7 V404 \u548c\u5730\u7403\u4e4b\u95f4\u7684\u4e91\u5c42\u53cd\u5f39\u65f6\uff0c\u4f1a\u4ea7\u751f\u5929\u9e45\u5ea7 V404 \u5468\u56f4\u7684\u5149\u56de\u6ce2\uff0c\u800c\u4e0d\u662f\u4ece\u5ce1\u8c37\u58c1\u4e0a\u5f39\u56de\u58f0\u6ce2\u3002\u5b87\u5b99\u5c18\u57c3\u4e0d\u50cf\u5bb6\u5ead\u7070\u5c18\uff0c\u800c\u662f\u66f4\u50cf\u70df\u96fe\uff0c\u7531\u5fae\u5c0f\u7684\u56fa\u4f53\u9897\u7c92\u7ec4\u6210\u3002\u5728\u8fd9\u5f20\u5408\u6210\u56fe\u50cf\u4e2d\uff0c\u94b1\u5fb7\u62c9\uff08\u6d45\u84dd\u8272\uff09\u7684 X \u5c04\u7ebf\u4e0e\u590f\u5a01\u5937\u6cdb\u661f\u671b\u8fdc\u955c\u7684\u5149\u5b66\u6570\u636e\u76f8\u7ed3\u5408\uff0c\u663e\u793a\u4e86\u89c6\u91ce\u4e2d\u7684\u6052\u661f\u3002\u8be5\u56fe\u50cf\u5305\u542b\u516b\u4e2a\u72ec\u7acb\u7684\u540c\u5fc3\u73af\u3002\u6bcf\u4e2a\u73af\u90fd\u662f\u7531 2015 \u5e74\u89c2\u5bdf\u5230\u7684\u5929\u9e45\u5ea7 V404 \u8000\u6591\u7684 X \u5c04\u7ebf\u4ea7\u751f\u7684\uff0c\u8fd9\u4e9b\u8000\u6591\u53cd\u5c04\u4e86\u4e0d\u540c\u7684\u5c18\u57c3\u4e91\u3002 \uff08\u4e00\u5e45\u827a\u672f\u5bb6\u7684\u63d2\u56fe\u89e3\u91ca\u4e86\u94b1\u5fb7\u62c9\u548c\u65af\u5a01\u592b\u7279\u770b\u5230\u7684\u6212\u6307\u662f\u5982\u4f55\u4ea7\u751f\u7684\u3002\u4e3a\u4e86\u7b80\u5316\u56fe\u5f62\uff0c\u63d2\u56fe\u53ea\u663e\u793a\u4e86\u56db\u4e2a\u800c\u4e0d\u662f\u516b\u4e2a\u3002\uff09\u7531\u9ea6\u8fea\u900a\u5a01\u65af\u5eb7\u661f\u5927\u5b66\u7684\u585e\u5df4\u65af\u8482\u5b89\u00b7\u6d77\u56e0\u8328\u9886\u5bfc\u7684\u4e00\u4e2a\u7814\u7a76\u5c0f\u7ec4\u5206\u6790\u4e86 50 \u65af\u5a01\u592b\u72792015 \u5e74 6 \u6708 30 \u65e5\u81f3 8 \u6708 25 \u65e5\u671f\u95f4\u5bf9\u8be5\u7cfb\u7edf\u8fdb\u884c\u7684\u89c2\u6d4b\uff0c\u4ee5\u53ca 2015 \u5e74 7 \u6708 11 \u65e5\u81f3 25 \u65e5\u7684\u94b1\u5fb7\u62c9\u89c2\u6d4b\u3002\u8fd9\u662f\u4e00\u6b21\u5982\u6b64\u660e\u4eae\u7684\u4e8b\u4ef6\uff0c\u94b1\u5fb7\u62c9\u7684\u64cd\u4f5c\u5458\u7279\u610f\u5c06\u5929\u9e45\u5ea7 V404 \u7f6e\u4e8e\u63a2\u6d4b\u5668\u4e4b\u95f4\uff0c\u4ee5\u4fbf\u518d\u6b21\u51fa\u73b0\u660e\u4eae\u7684\u7206\u53d1\u4e0d\u4f1a\u635f\u574f\u4eea\u5668\u3002\u8fd9\u4e9b\u73af\u4e0d\u4ec5\u544a\u8bc9\u5929\u6587\u5b66\u5bb6\u9ed1\u6d1e\u7684\u884c\u4e3a\uff0c\u8fd8\u544a\u8bc9\u5929\u6587\u5b66\u5bb6 V404 Cygni \u548c\u5730\u7403\u4e4b\u95f4\u7684\u666f\u89c2\u3002\u4f8b\u5982\uff0cX \u5c04\u7ebf\u4e2d\u73af\u7684\u76f4\u5f84\u63ed\u793a\u4e86\u5149\u5f39\u79bb\u7684\u4e2d\u95f4\u5c18\u57c3\u4e91\u7684\u8ddd\u79bb\u3002\u5982\u679c\u4e91\u79bb\u5730\u7403\u66f4\u8fd1\uff0c\u73af\u770b\u8d77\u6765\u66f4\u5927\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u5149\u56de\u6ce2\u8868\u73b0\u4e3a\u7a84\u73af\u800c\u4e0d\u662f\u5bbd\u73af\u6216\u5149\u6655\uff0c\u56e0\u4e3a X \u5c04\u7ebf\u7206\u53d1\u53ea\u6301\u7eed\u4e86\u76f8\u5bf9\u8f83\u77ed\u7684\u65f6\u95f4\u3002\u7814\u7a76\u4eba\u5458\u8fd8\u4f7f\u7528\u8fd9\u4e9b\u73af\u6765\u63a2\u6d4b\u5c18\u57c3\u4e91\u672c\u8eab\u7684\u7279\u6027\u3002\u4ed6\u4eec\u5c06 X \u5c04\u7ebf\u5149\u8c31\uff08\u5373 X \u5c04\u7ebf\u5728\u4e00\u5b9a\u6ce2\u957f\u8303\u56f4\u5185\u7684\u4eae\u5ea6\uff09\u4e0e\u5177\u6709\u4e0d\u540c\u6210\u5206\u7684\u7070\u5c18\u7684\u8ba1\u7b97\u673a\u6a21\u578b\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u4e0d\u540c\u7684\u5c18\u57c3\u6210\u5206\u5c06\u5bfc\u81f4\u4e0d\u540c\u6570\u91cf\u7684\u4f4e\u80fd\u91cf X \u5c04\u7ebf\u88ab\u94b1\u5fb7\u62c9\u5438\u6536\u5e76\u88ab\u963b\u6b62\u68c0\u6d4b\u3002\u8fd9\u4e0e\u6211\u4eec\u8eab\u4f53\u7684\u4e0d\u540c\u90e8\u4f4d\u6216\u884c\u674e\u5982\u4f55\u5438\u6536\u4e0d\u540c\u6570\u91cf\u7684 X \u5c04\u7ebf\u7684\u539f\u7406\u7c7b\u4f3c\uff0c\u4ece\u800c\u63d0\u4f9b\u6709\u5173\u5176\u7ed3\u6784\u548c\u6210\u5206\u7684\u4fe1\u606f\u3002\u8be5\u56e2\u961f\u786e\u5b9a\u5c18\u57c3\u5f88\u53ef\u80fd\u5305\u542b\u77f3\u58a8\u548c\u7845\u9178\u76d0\u9897\u7c92\u7684\u6df7\u5408\u7269\u3002\u6b64\u5916\uff0c\u901a\u8fc7\u7528\u94b1\u5fb7\u62c9\u5206\u6790\u5185\u73af\uff0c\u4ed6\u4eec\u53d1\u73b0\u5c18\u57c3\u4e91\u5728\u5404\u4e2a\u65b9\u5411\u7684\u5bc6\u5ea6\u5e76\u4e0d\u5747\u5300\u3002\u4ee5\u524d\u7684\u7814\u7a76\u5047\u8bbe\u4ed6\u4eec\u6ca1\u6709\u3002\n\u4e00\u7bc7\u63cf\u8ff0\u5929\u9e45\u5ea7 V404 \u7ed3\u679c\u7684\u8bba\u6587\u53d1\u8868\u5728 2016 \u5e74 7 \u6708 1 \u65e5\u7684\u300a\u5929\u4f53\u7269\u7406\u5b66\u6742\u5fd7\u300b\uff08\u9884\u5370\u672c\uff09\u4e0a\u3002\u8be5\u7814\u7a76\u7684\u4f5c\u8005\u662f Sebastian Heinz\u3001Lia Corrales\uff08\u5bc6\u6b47\u6839\u5927\u5b66\uff09\uff1b\u5170\u5fb7\u5c14\u00b7\u53f2\u5bc6\u65af\uff08\u5929\u4f53\u7269\u7406\u5b66\u4e2d\u5fc3 | \u54c8\u4f5b\u548c\u53f2\u5bc6\u68ee\u5c3c\uff09\uff1b Niel Brandt\uff08\u5bbe\u5915\u6cd5\u5c3c\u4e9a\u5dde\u7acb\u5927\u5b66\uff09\uff1b Peter Jonker\uff08\u8377\u5170\u7a7a\u95f4\u7814\u7a76\u6240\uff09\uff1b Richard Plotkin\uff08\u5185\u534e\u8fbe\u5927\u5b66\u91cc\u8bfa\u5206\u6821\uff09\uff1b\u548c\u4e54\u4f0a\u5c3c\u5c14\u68ee\uff08\u7ef4\u62c9\u8bfa\u74e6\u5927\u5b66\uff09\u3002\u8fd9\u4e00\u7ed3\u679c\u4e0e X \u5c04\u7ebf\u53cc\u661f Circinus X-1 \u7684\u7c7b\u4f3c\u53d1\u73b0\u6709\u5173\uff0c\u5b83\u5305\u542b\u4e00\u9897\u4e2d\u5b50\u661f\u800c\u4e0d\u662f\u4e00\u4e2a\u9ed1\u6d1e\uff0c\u53d1\u8868\u5728 2015 \u5e74 6 \u6708 20 \u65e5\u7684\u300a\u5929\u4f53\u7269\u7406\u5b66\u6742\u5fd7\u300b\u4e0a\uff0c\u9898\u4e3a\u201c\u6307\u73af\u738b\uff1a\u4ece\u5de8\u578b X \u5c04\u7ebf\u5149\u56de\u6ce2\u5230 Circinus X-1 \u7684\u8fd0\u52a8\u8ddd\u79bb\u201d\uff08\u9884\u5370\u672c\uff09\u3002\u8fd9\u9879\u7814\u7a76\u4e5f\u662f\u7531\u585e\u5df4\u65af\u8482\u5b89\u00b7\u6d77\u56e0\u8328\u9886\u5bfc\u7684\u3002\u6bcf\u5e74\u90fd\u6709\u591a\u7bc7\u8bba\u6587\u62a5\u544a\u4e86 2015 \u5e74\u5929\u9e45\u5ea7 V404 \u7206\u53d1\u5bfc\u81f4\u8fd9\u4e9b\u73af\u7684\u7814\u7a76\u3002\u4e4b\u524d\u7684\u7206\u53d1\u662f\u5728 1938 \u5e74\u30011956 \u5e74\u548c 1989 \u5e74\u8bb0\u5f55\u7684\uff0c\u56e0\u6b64\u5929\u6587\u5b66\u5bb6\u53ef\u80fd\u8fd8\u6709\u5f88\u591a\u5e74\u7684\u65f6\u95f4\u6765\u7ee7\u7eed\u5206\u6790 2015 \u5e74\u7684\u7206\u53d1\u3002\u66f4\u591a\u4fe1\u606f\uff1aS. Heinz \u7b49\uff0cA Joint Chandra and Swift View of the 2015 X-Ray Dust Scattering Echo of V404 Cygni\uff0cThe Astrophysical Journal (2016)\u3002 DOI\uff1a10.3847/0004-637X/825/1/15\uff0carxiv.org/abs/1605.01648", "note_en": "This image features a spectacular set of rings around a black hole, captured using NASA&#39;s Chandra X-ray Observatory and Neil Gehrels Swift Observatory. The X-ray images of the giant rings reveal information about dust located in our galaxy, using a similar principle to the X-rays performed in doctor&#39;s offices and airports.    The black hole is part of a binary system called V404 Cygni, located about 7,800   away from Earth. The black hole is actively pulling material away from a companion star\u2014with about half the mass of the Sun\u2014into a disk around the invisible object. This material glows in X-rays, so astronomers refer to these systems as &#34;X-ray binaries.&#34;\n  On June 5, 2015, Swift discovered a burst of X-rays from V404 Cygni. The burst created the high-energy rings from a phenomenon known as light echoes. Instead of sound waves bouncing off a canyon wall, the light echoes around V404 Cygni were produced when a burst of X-rays from the black hole system bounced off of   clouds between V404 Cygni and Earth. Cosmic dust is not like household dust but is more like smoke, and consists of tiny, solid particles.\n  In this composite image, X-rays from Chandra (light blue) were combined with optical data from the Pan-STARRS telescope in Hawaii that show the stars in the field of view. The image contains eight separate concentric rings. Each ring is created by X-rays from V404 Cygni flares observed in 2015 that reflect off different dust clouds. (An artist&#39;s illustration explains how the rings seen by Chandra and Swift were produced. To simplify the graphic, the illustration shows only four rings instead of eight.)\n   A team of researchers led by Sebastian Heinz of the University of Wisconsin in Madison analyzed 50 Swift observations of the system made in 2015 between June 30 and August 25, and Chandra observations made on July 11 and 25, 2015. It was such a bright event that the operators of Chandra purposely placed V404 Cygni in between the detectors so that another bright burst would not damage the instrument.\n  The rings tell astronomers not only about the black hole&#39;s behavior, but also about the landscape between V404 Cygni and Earth. For example, the diameter of the rings in X-rays reveals the distances to the intervening dust clouds the light ricocheted off. If the cloud is closer to Earth, the ring appears to be larger, and vice versa. The light echoes appear as narrow rings rather than wide rings or haloes because the X-ray burst lasted only a relatively short period of time.\n    The researchers also used the rings to probe the properties of the dust clouds themselves. They compared the X-ray spectra\u2014that is, the brightness of X-rays over a range of wavelengths\u2014to computer models of dust with different compositions. Different compositions of dust will result in different amounts of the lower energy X-rays being absorbed and prevented from being detected with Chandra. This is a similar principle to how different parts of our body or our luggage absorb different amounts of X-rays, giving information about their structure and composition.\n  The team determined that the dust most likely contains mixtures of graphite and silicate grains. In addition, by analyzing the inner rings with Chandra, they found that the densities of the dust clouds are not uniform in all directions. Previous studies have assumed that they did not.\n   A paper describing the V404 Cygni results was published in the July 1, 2016, issue of The Astrophysical Journal (preprint). The authors of the study are Sebastian Heinz, Lia Corrales (University of Michigan); Randall Smith (Center for Astrophysics | Harvard &amp; Smithsonian); Niel Brandt (The Pennsylvania State University); Peter Jonker (Netherlands Institute for Space Research); Richard Plotkin (University of Nevada, Reno); and Joey Neilson (Villanova University).\n  This result is related to a similar finding of the X-ray binary Circinus X-1, which contains a neutron star rather than a black hole, published in a paper in the June 20, 2015, issue of The  Astrophysical Journal, titled, &#34;Lord of the Rings: A Kinematic Distance to Circinus X-1 from a Giant X-Ray Light Echo&#34; (preprint). This study was also led by Sebastian Heinz.\n  There have been multiple papers published every year reporting studies of the V404 Cygni outburst in 2015 that caused these rings. Previous outbursts were recorded in 1938, 1956 and 1989, so astronomers may still have many years to continue analyzing the 2015 one.        More information:\t\t\t\t\t\t\t\t\t\t\t\tS. Heinz et al, A Joint Chandra and Swift View of the 2015 X-Ray Dust Scattering Echo of V404 Cygni,  The Astrophysical Journal (2016).  DOI: 10.3847/0004-637X/825/1/15 ,  arxiv.org/abs/1605.01648", "posttime": "2021-08-06 09:51:31", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9ed1\u6d1e,black,\u5c04\u7ebf", "title": "\u9ed1\u6d1e\u5468\u56f4\u7684\u73af", "title_en": "Rings Around a Black Hole", "transed": 1, "url": "https://phys.org/news/2021-08-v404-cygni-huge-black-hole.html", "via": "", "real_tags": ["\u9ed1\u6d1e", "black", "\u5c04\u7ebf"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1071689, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4fe1\u606f\u68c0\u7d22\u5021\u8bae\u65e8\u5728\u63d0\u4f9b\u5bf9\u5927\u91cf\u6587\u4ef6\u7684\u666e\u904d\u8bbf\u95ee\u3002\u7684\u9879\u76ee\uff0c \uff0c \uff0c \u5341\u4e00\u6708\u7684 \uff0c \u3002 , , , X11 , , , , , ) ? \uff0c \u7b49\u7b49\u3002", "note_en": "information retrievalinitiative aiming to give universalaccess to a large universe of documents.  of the project,  ,   , November&#39;s   ,  .  ,  , etc.    ,X11   ,  ,   ,   ,  ,  )      ?   , etc.", "posttime": "2021-08-06 09:14:05", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "lee,world,\u5021\u8bae", "title": "\u4eca\u5929\u662f\u4e07\u7ef4\u7f51\u7684 30 \u5c81\u751f\u65e5 1991 \u5e74 8 \u6708 6 \u65e5\uff0c\u8482\u59c6\u00b7\u4f2f\u7eb3\u65af-\u674e (Tim Berners-Lee) \u53d1\u8868\u4e86\u7b2c\u4e00\u9875\uff0c\u5e76\u6539\u53d8\u4e86\u4e16\u754c\u3002", "title_en": "Today is the World Wide Web's 30th birthday On 6 Aug 1991, Tim Berners-Lee published the first page, and changed the world.", "transed": 1, "url": "http://info.cern.ch/hypertext/WWW/TheProject.html", "via": "", "real_tags": ["lee", "world", "\u5021\u8bae"]}, {"category": "", "categoryclass": "", "imagename": "71632e2263f62fbe87c1da61a1f207f2.jpg", "infoid": 1071688, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Twitter Spaces \u6b63\u5728\u4e3a\u5176\u7528\u6237\u63a8\u51fa\u4e00\u9879\u671f\u5f85\u5df2\u4e45\u7684\u529f\u80fd\uff1a\u5171\u540c\u6258\u7ba1 Space\u3002 Clubhouse \u7ade\u4e89\u5bf9\u624b\u5728\u8fc7\u53bb\u51e0\u4e2a\u6708\u4e2d\u4e00\u76f4\u5728\u6539\u8fdb\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u559c\u6b22\u4f7f\u7528\u7eaf\u97f3\u9891\u8bf4\u8bdd\u7684\u4eba\u6765\u8bf4\uff0c\u5b83\u5df2\u6210\u4e3a\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\u6b63\u5982 Twitter Spaces \u56e2\u961f\u6240\u5ba3\u5e03\u7684\u90a3\u6837\uff0c\u4e3b\u6301\u4eba\u53ef\u4ee5\u53d1\u9001\u4e24\u4e2a\u5171\u540c\u4e3b\u6301\u4eba\u9080\u8bf7\u3002\u6709\u4e86\u8fd9\u4e2a\uff0c\u73b0\u5728\u53ef\u4ee5\u5728\u5bf9\u8bdd\u4e2d\u62e5\u6709\u4e00\u4f4d\u4e3b\u6301\u4eba\u3001\u4e24\u4f4d\u5171\u540c\u4e3b\u6301\u4eba\u548c 10 \u4f4d\u989d\u5916\u7684\u6f14\u8bb2\u8005\u3002\u901a\u8fc7\u8054\u5408\u4e3b\u6301\u4eba\uff0c\u8fd9\u4e9b\u7528\u6237\u53ef\u4ee5\u5e2e\u52a9\u9080\u8bf7\u53d1\u8a00\u4eba\u3001\u7ba1\u7406\u8bf7\u6c42\u3001\u5220\u9664\u53c2\u4e0e\u8005\u3001\u56fa\u5b9a\u63a8\u6587\u7b49\u3002\u5728\u5176\u5e10\u6237\u4e2d\uff0cTwitter Spaces \u8fd8\u89e3\u91ca\u8bf4\uff0c\u65e9\u5df2\u4e0d\u590d\u5b58\u5728\u7684 Fleet \u9152\u5427\u73b0\u5728\u88ab\u79f0\u4e3a\u201cSpace bar\u201d\uff0c\u5e76\u4e14\u8be5\u516c\u53f8\u6b63\u5728\u52aa\u529b\u5c06 Spaces \u7684\u521b\u5efa\u5e26\u56de\u8f83\u65e7\u7684 Fleets \u7cfb\u5217\u3002\u4e0a\u5468\uff0cTwitter \u5f00\u59cb\u63a8\u51fa\u5206\u4eab\u548c\u53d1\u73b0 Spaces \u7684\u65b0\u65b9\u5f0f\u3002\u4f8b\u5982\uff0c\u53ea\u9700\u8f7b\u8f7b\u4e00\u6309\uff0c\u60a8\u5c31\u53ef\u4ee5\u53d1\u9001\u4e00\u6761\u63a8\u6587\uff0c\u5176\u4e2d\u5305\u542b\u6307\u5411\u6b63\u5728\u8fdb\u884c\u4e2d\u7684 Spaces \u7684\u94fe\u63a5\u3002\u5f53\u7136\uff0c\u4e4b\u524d\u5df2\u7ecf\u53ef\u4ee5\u5171\u4eab\u94fe\u63a5\u4ee5\u6253\u5f00 Spaces\uff0c\u4f46\u8fd9\u9700\u8981\u989d\u5916\u70b9\u51fb\u51e0\u4e0b\u3002\u4f46\u662f\uff0c\u6b64\u66f4\u65b0\u4e3a Spaces \u7528\u6237\u63d0\u4f9b\u4e86\u66f4\u591a\u65b0\u529f\u80fd\u3002\u8be5\u516c\u53f8\u8fd8\u5ba3\u5e03\uff0cSpaces \u7684\u5ba2\u4eba\u7ba1\u7406\u5df2\u5f97\u5230\u589e\u5f3a\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u90e8\u5206\u53ef\u4ee5\u5c06\u5f53\u524d\u53d1\u8a00\u8005\u4e0e\u8bf7\u6c42\u53d1\u8a00\u8005\u5206\u5f00\u3002\u53c2\u4e0e\u8005\u7684\u63a7\u4ef6\u5df2\u79fb\u81f3\u9876\u90e8\uff0c\u4ee5\u4fbf\u59cb\u7ec8\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\u3002\u8be5\u66f4\u65b0\u8fd8\u4fee\u590d\u4e86 Twitter Spaces \u5e73\u53f0\u4e0a\u7684\u4e00\u4e9b\u9519\u8bef\u3002\u9884\u8ba1 Twitter \u5c06\u5f88\u5feb\u4e3a\u7528\u6237\u5b9e\u73b0\u5177\u6709\u591a\u79cd\u8bed\u97f3\u6548\u679c\u7684\u8bed\u97f3\u8f6c\u6362\u5668\u529f\u80fd\uff0c\u5982\u871c\u8702\u3001\u5361\u901a\u3001\u6c26\u6c14\u3001\u9690\u8eab\u3001\u5361\u62c9 OK\u3001\u9ea6\u514b\u98ce\u3001\u7535\u8bdd\u3001\u7a7a\u95f4\u3001\u4f53\u80b2\u573a\u548c\u821e\u53f0\u3002\u70b9\u51fb\u6b64\u5904\u4e86\u89e3\u8be6\u60c5\u3002\n\u2013 \u4e3b\u6301\u4eba\u6709\u4e24\u4e2a\u53ef\u4ee5\u53d1\u9001\u7684\u8054\u5408\u4e3b\u6301\u4eba\u9080\u8bf7 \u2013 \u684c\u5b50\u53d8\u5927\u4e86\uff1a1 \u4e2a\u4e3b\u6301\u4eba\u30012 \u4e2a\u8054\u5408\u4e3b\u6301\u4eba\u548c 10 \u4e2a\u53d1\u8a00\u4eba \u2013 \u8054\u5408\u4e3b\u6301\u4eba\u53ef\u4ee5\u5e2e\u52a9\u9080\u8bf7\u53d1\u8a00\u4eba\u3001\u7ba1\u7406\u8bf7\u6c42\u3001\u5220\u9664\u53c2\u4e0e\u8005\u3001\u56fa\u5b9a\u63a8\u6587\u7b49\u7b49\uff01 pic.twitter.com/s76JFbhTL2 \u60a8\u6b63\u5728\u9605\u8bfb 9to5Mac \u2014 \u65e5\u590d\u4e00\u65e5\u5730\u53d1\u5e03\u6709\u5173 Apple \u53ca\u5176\u5468\u8fb9\u751f\u6001\u7cfb\u7edf\u65b0\u95fb\u7684\u4e13\u5bb6\u3002\u8bf7\u52a1\u5fc5\u67e5\u770b\u6211\u4eec\u7684\u4e3b\u9875\u4ee5\u83b7\u53d6\u6240\u6709\u6700\u65b0\u6d88\u606f\uff0c\u5e76\u5728 Twitter\u3001Facebook \u548c LinkedIn \u4e0a\u5173\u6ce8 9to5Mac \u4ee5\u4e86\u89e3\u6700\u65b0\u6d88\u606f\u3002\u4e0d\u77e5\u9053\u4ece\u54ea\u91cc\u5f00\u59cb\uff1f\u67e5\u770b\u6211\u4eec\u7684\u72ec\u5bb6\u6545\u4e8b\u3001\u8bc4\u8bba\u3001\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5e76\u8ba2\u9605\u6211\u4eec\u7684 YouTube \u9891\u9053", "note_en": "Twitter Spaces is launching a long-awaited feature for its users: co-hosting a Space. The Clubhouse competitor has been improving over the last several months, and it has become a solid choice for those who love to speak using audio-only.\n  As announced by the  Twitter Spaces team, hosts have two co-host invites they can send. With that, it\u2019s now possible to have one host, two co-hosts, and 10 additional speakers in a conversation.\n With co-hosts, these users can help invite speakers, manage requests, remove participants, pin tweets, and more.\n In its account, Twitter Spaces also explained that the long-gone Fleets bar is now called \u201cSpace bar,\u201d and that the company is working on bringing back the creation of Spaces to the older Fleets line.\n Last week, Twitter started rolling out  new ways to share and discover Spaces. For example, with just one tap, you\u2019ll be able to send a tweet with the link to that Spaces in progress. Of course, it was already possible to share the link to open a Spaces before, but that required a few extra taps. However, there are even more new features for Spaces users with this update.\n The company also announced that guest management in Spaces has been enhanced with a section to separate current speakers from those who have requested to speak. The controls for participants have been moved to the top so that they\u2019re always accessible. The update also fixed some bugs on the Twitter Spaces platform as well.\n Twitter is expected to soon implement a voice transformer feature with multiple voice effects for users as Bee, Cartoon, Helium, Incognito, Karaoke, Microphone, Phone, Spatial, Stadium, and Stage.  Learn more about it here.\n \u2013 hosts have two co-host invites they can send \u2013 the table just got bigger: 1 host, 2 co-hosts, and 10 speakers \u2013 co-hosts can help invite speakers, manage requests, remove participants, pin Tweets and more!  pic.twitter.com/s76JFbhTL2\n  You\u2019re reading 9to5Mac \u2014 experts who break news about Apple and its surrounding ecosystem, day after day. Be sure to check out  our homepage for all the latest news, and follow 9to5Mac on  Twitter,  Facebook, and  LinkedIn to stay in the loop. Don\u2019t know where to start? Check out our  exclusive stories,  reviews,  how-tos, and  subscribe to our YouTube channel", "posttime": "2021-08-06 09:02:38", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "spaces", "title": "Twitter Spaces \u63a8\u51fa\u4e86\u5171\u540c\u4e3b\u6301\u529f\u80fd\uff0c\u73b0\u5728\u5141\u8bb8\u623f\u95f4\u6709\u4e00\u4e2a\u4e3b\u6301\u4eba\u3001\u6700\u591a\u4e24\u4e2a\u5171\u540c\u4e3b\u6301\u4eba\u548c\u5341\u4e2a\u989d\u5916\u7684\u6f14\u8bb2\u8005\u540c\u65f6\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001", "title_en": "Twitter Spaces launches a co-hosting feature, which will now allow rooms to have one host, up to two co-hosts, and ten additional speakers active at once", "transed": 1, "url": "https://9to5mac.com/2021/08/05/twitter-spaces-introduces-co-host-feature-and-more/", "via": "", "real_tags": ["spaces"]}, {"category": "", "categoryclass": "", "imagename": "37d6f26584a222c81e51ba5e44b935ba.jpg", "infoid": 1071687, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6839\u636e\u534e\u76db\u987f\u90ae\u62a5\u83b7\u5f97\u7684\u4e00\u5c01\u4fe1\uff0c\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u9a73\u56de\u4e86 Facebook \u7684\u8bf4\u6cd5\uff0c\u5373\u5b83\u5207\u65ad\u4e86\u4e00\u7ec4\u7814\u7a76\u4eba\u5458\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\uff0c\u4ee5\u9075\u5b88\u4e0e\u8be5\u673a\u6784\u7684\u9690\u79c1\u534f\u8bae\uff0c\u8fd9\u662f\u201c\u4e0d\u51c6\u786e\u7684\u201d\u3002\u5468\u4e8c\uff0c\u8fd9\u5bb6\u793e\u4ea4\u5a92\u4f53\u5de8\u5934\u7981\u7528\u4e86\u7ebd\u7ea6\u5927\u5b66\u5e7f\u544a\u89c2\u5bdf\u7ad9\u7814\u7a76\u4eba\u5458\u7684\u8d26\u6237\uff0c\u8be5\u89c2\u5bdf\u7ad9\u8ddf\u8e2a\u5e73\u53f0\u4e0a\u7684\u6570\u5b57\u5e7f\u544a\uff0c\u5e76\u5728\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u8868\u793a\uff0c\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u9075\u5b88\u5b83\u4e0e\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u8fbe\u6210\u7684\u9690\u79c1\u4ee4\u3002 Facebook \u8868\u793a\uff0c\u8be5\u5de5\u5177\u672a\u7ecf\u6388\u6743\u4ece\u7f51\u7ad9\u4e0a\u6293\u53d6\u6570\u636e\uff0c\u8fdd\u53cd\u4e86\u5176\u9690\u79c1\u6807\u51c6\u3002\u8fd9\u4e00\u51b3\u5b9a\u548c Facebook \u7684\u7406\u7531\u5f15\u8d77\u4e86\u7acb\u6cd5\u8005\u7684\u5f3a\u70c8\u53cd\u5bf9\uff0c\u4ed6\u4eec\u6307\u8d23\u8be5\u516c\u53f8\u9519\u8bef\u5730\u5f15\u7528\u9690\u79c1\u95ee\u9898\u6765\u9003\u907f\u72ec\u7acb\u7814\u7a76\u4eba\u5458\u7684\u5ba1\u67e5\u3002\u8be5\u673a\u6784\u5468\u56db\u5728\u81f4 Facebook \u9996\u5e2d\u6267\u884c\u5b98\u9a6c\u514b\u00b7\u624e\u514b\u4f2f\u683c\u7684\u4e00\u5c01\u4fe1\u4e2d\u9a73\u56de\u4e86 Facebook \u7684\u8bf4\u6cd5\uff0c\u8be5\u4fe1\u7531\u6d88\u8d39\u8005\u4fdd\u62a4\u5c40\u4ee3\u7406\u5c40\u957f\u585e\u7f2a\u5c14\u00b7\u83b1\u6587 (Samuel Levine) \u6267\u7b14\u3002\u4ed6\u5199\u9053\uff1a\u201c\u5982\u679c\u4f60\u5151\u73b0\u4e86\u63d0\u524d\u4e0e\u6211\u4eec\u8054\u7cfb\u7684\u627f\u8bfa\uff0c\u6211\u4eec\u4f1a\u6307\u51fa\u540c\u610f\u4ee4\u5e76\u4e0d\u7981\u6b62 Facebook \u4e3a\u51fa\u4e8e\u516c\u5171\u5229\u76ca\u7684\u5584\u610f\u7814\u7a76\u5236\u5b9a\u4f8b\u5916\u3002\u201d\u636e\u300a\u8fde\u7ebf\u300b\u62a5\u9053\uff0cFacebook \u53d1\u8a00\u4eba\u4e54\u00b7\u5965\u65af\u672c (Joe Osborne) \u540e\u6765\u8868\u793a\uff0cFacebook \u4e0e\u8be5\u673a\u6784\u7684\u534f\u8bae\u5e76\u672a\u5f3a\u5236\u5176\u6682\u505c\u8d26\u6237\uff0c\u800c\u662f\u5f3a\u5236\u5176\u6682\u505c\u5176\u9690\u79c1\u51c6\u5219\u3002\u83b1\u6587\u5728\u4fe1\u4e2d\u5f15\u7528\u4e86 Facebook \u7684\u9006\u8f6c\uff0c\u79f0\u6700\u521d\u7684\u8bf4\u6cd5\u201c\u4e0d\u51c6\u786e\u201d\u3002\n\u4ed6\u5199\u9053\uff1a\u201c\u867d\u7136\u6211\u611f\u8c22 Facebook \u73b0\u5728\u66f4\u6b63\u4e86\u8bb0\u5f55\uff0c\u4f46\u6211\u5bf9\u8d35\u516c\u53f8\u5728\u8fd9\u4ef6\u4e8b\u4e0a\u7684\u8868\u73b0\u611f\u5230\u5931\u671b\u3002\u201d Facebook \u6ca1\u6709\u7acb\u5373\u56de\u5e94\u5c31\u8fd9\u5c01\u4fe1\u6216\u662f\u5426\u4f1a\u6062\u590d\u7814\u7a76\u4eba\u5458\u5e10\u6237\u53d1\u8868\u8bc4\u8bba\u7684\u8bf7\u6c42\u3002 Facebook \u5207\u65ad\u7814\u7a76\u4eba\u5458\u7684\u51b3\u5b9a\u5f15\u8d77\u4e86\u56fd\u4f1a\u8bae\u5458\u3001\u8a00\u8bba\u81ea\u7531\u5021\u5bfc\u8005\u548c\u5176\u4ed6 Facebook \u76d1\u7ba1\u673a\u6784\u7684\u8c34\u8d23\u3002\u5f53\u5929\u6700\u91cd\u8981\u7684\u65b0\u95fb\u62a5\u9053\uff0c\u7531\u90ae\u653f\u7f16\u8f91\u7b56\u5212\uff0c\u6bcf\u5929\u65e9\u4e0a\u53d1\u5e03\u3002", "note_en": "The Federal Trade Commission has dismissed as \u201cinaccurate\u201d Facebook\u2019s claim that it cut off a group of researchers\u2019 access to data to comply with a privacy agreement with the agency, according to a letter obtained by The Washington Post.\n  On Tuesday, the social media giant disabled the accounts of researchers at the New York University Ad Observatory, which tracks digital advertisements on the platform, saying in  a blog post it did so to comply with a privacy order it struck with the FTC.\n Facebook said the tool violated its privacy standards by scraping data from the site without authorization. The decision and Facebook\u2019s justification  drew backlash from lawmakers who accused the company of erroneously citing privacy concerns to escape scrutiny from independent researchers.\n  The agency rejected Facebook\u2019s assertion in a letter sent to Facebook CEO Mark Zuckerberg on Thursday, penned by Acting Director for the Bureau of Consumer Protection Samuel Levine.\n  \u201cHad you honored your commitment to contact us in advance, we would have pointed out that the consent decree does not bar Facebook from creating exceptions for good-faith research in the public interest,\u201d he wrote.\n According to Wired, Facebook spokesperson Joe Osborne later said that Facebook\u2019s agreement with the agency did not force it to suspend the accounts, but rather its own privacy guidelines.\n Levine cited Facebook\u2019s reversal in the letter, calling the initial claim \u201cinaccurate.\u201d\n  \u201cWhile I appreciate that Facebook has now corrected the record, I am disappointed by how your company has conducted itself in this matter,\u201d he wrote.\n Facebook did not immediately respond to a request for comment on the letter or on whether it will reinstate the researchers\u2019 accounts.\n Facebook\u2019s decision to cut off the researchers drew condemnations from lawmakers on Capitol Hill, free speech advocates and other Facebook watchdogs.\n     The most important news stories of the day, curated by Post editors and delivered every morning.", "posttime": "2021-08-06 09:02:13", "source_domain": "slashdot.org", "source_name": "slashdot", "tags": "facebook,\u5927\u5b66,\u7f8e\u56fd,\u9075\u5b88,ftc", "title": "\u5728\u7ed9\u624e\u514b\u4f2f\u683c\u7684\u4e00\u5c01\u4fe1\u4e2d\uff0c\u7f8e\u56fd\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u79f0 Facebook \u6700\u521d\u58f0\u79f0\u5b83\u5207\u65ad\u4e86\u7ebd\u7ea6\u5927\u5b66\u7814\u7a76\u4eba\u5458\u9075\u5b88\u8054\u90a6\u8d38\u6613\u59d4\u5458\u4f1a\u9690\u79c1\u534f\u8bae\u7684\u9014\u5f84\u662f\u201c\u4e0d\u51c6\u786e\u7684\u201d", "title_en": "In a letter to Zuckerberg, the FTC called Facebook's initial claim it cut off NYU researchers' access to comply with an FTC privacy agreement as \u201cinaccurate\u201d", "transed": 1, "url": "https://www.washingtonpost.com/technology/2021/08/05/facebook-nyu-ftc-dispute/", "via": "", "real_tags": ["facebook", "\u5927\u5b66", "\u7f8e\u56fd", "\u9075\u5b88", "ftc"]}, {"category": "", "categoryclass": "", "imagename": "0764848644516ed06964beaff1478dcb.png", "infoid": 1071686, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53d1\u751f\u9519\u8bef\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u5411\u60a8\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\u53d1\u9001 cookie\u3002\u6211\u4eec\u7684\u7f51\u7ad9\u4f7f\u7528 cookie \u6765\u5141\u8bb8\u8bbf\u95ee\u67d0\u4e9b\u9875\u9762\u548c\u529f\u80fd\u3002\u8bf7\u542f\u7528 cookie \u4ee5\u7ee7\u7eed\u8bbf\u95ee\u8bf7\u6c42\u7684\u9875\u9762\u3002", "note_en": "An error has occurred because we were unable to send a cookie to your web browser. Our site uses cookies to allow access to certain pages and features. Please enable cookies to continue to the requested page.", "posttime": "2021-08-06 09:01:46", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u83cc\u7d20,systematic,cookie", "title": "\u4f0a\u7ef4\u83cc\u7d20\u7cfb\u7edf\u7814\u7a76\uff1a\u4e0d\u786e\u5b9a", "title_en": "Ivermectin Systematic Study: Inconclusive", "transed": 1, "url": "https://www.cochranelibrary.com/cdsr/doi/10.1002/14651858.CD015017.pub2/full", "via": "", "real_tags": ["\u83cc\u7d20", "cookie"]}, {"category": "", "categoryclass": "", "imagename": "8af20cc94166675fb7d1fa5650555595.jpg", "infoid": 1071684, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f8e\u56fd\u56fd\u5bb6\u6807\u51c6\u4e0e\u6280\u672f\u7814\u7a76\u9662 (NIST) \u7684\u7269\u7406\u5b66\u5bb6\u5c06\u4e00\u4e2a\u5fae\u5c0f\u84dd\u8272\u6676\u4f53\u7684\u673a\u68b0\u8fd0\u52a8\u548c\u7535\u5b50\u7279\u6027\u8054\u7cfb\u5728\u4e00\u8d77\u6216\u201c\u7ea0\u7f20\u201d\u5728\u4e00\u8d77\uff0c\u4f7f\u5176\u5728\u6d4b\u91cf\u7535\u573a\u65f6\u5177\u6709\u91cf\u5b50\u4f18\u52bf\uff0c\u5e76\u5177\u6709\u8bb0\u5f55\u7075\u654f\u5ea6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u589e\u5f3a\u5bf9\u5b87\u5b99\u3002\u91cf\u5b50\u4f20\u611f\u5668\u7531 150 \u4e2a\u88ab\u9650\u5236\u5728\u78c1\u573a\u4e2d\u7684\u94cd\u79bb\u5b50\uff08\u5e26\u7535\u539f\u5b50\uff09\u7ec4\u6210\uff0c\u56e0\u6b64\u5b83\u4eec\u4f1a\u81ea\u884c\u6392\u5217\u6210\u76f4\u5f84\u4ec5\u4e3a\u767e\u4e07\u5206\u4e4b\u4e00\u7c73\u7684\u6241\u5e73\u4e8c\u7ef4\u6676\u4f53\u3002\u50cf\u8fd9\u6837\u7684\u91cf\u5b50\u4f20\u611f\u5668\u6709\u53ef\u80fd\u68c0\u6d4b\u6765\u81ea\u6697\u7269\u8d28\u7684\u4fe1\u53f7\u2014\u2014\u6697\u7269\u8d28\u662f\u4e00\u79cd\u795e\u79d8\u7684\u7269\u8d28\uff0c\u5728\u5176\u4ed6\u7406\u8bba\u4e2d\uff0c\u5b83\u53ef\u80fd\u662f\u4e9a\u539f\u5b50\u7c92\u5b50\uff0c\u901a\u8fc7\u5f31\u7535\u78c1\u573a\u4e0e\u6b63\u5e38\u7269\u8d28\u76f8\u4e92\u4f5c\u7528\u3002\u6697\u7269\u8d28\u7684\u5b58\u5728\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6676\u4f53\u4ee5\u660e\u663e\u7684\u65b9\u5f0f\u6446\u52a8\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u6676\u4f53\u79bb\u5b50\u5728\u5176\u7535\u5b50\u7279\u6027\u4e4b\u4e00\uff08\u79f0\u4e3a\u81ea\u65cb\uff09\u4e2d\u7684\u96c6\u4f53\u53d8\u5316\u6765\u63ed\u793a\u3002\u6b63\u5982 8 \u6708 6 \u65e5\u7684\u300a\u79d1\u5b66\u300b\u6742\u5fd7\u6240\u63cf\u8ff0\u7684\u90a3\u6837\uff0c\u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7\u76d1\u6d4b\u96c6\u4f53\u81ea\u65cb\u7684\u53d8\u5316\u6765\u6d4b\u91cf\u6676\u4f53\u7684\u632f\u52a8\u6fc0\u53d1\u2014\u2014\u5e73\u9762\u50cf\u9f13\u5934\u4e00\u6837\u4e0a\u4e0b\u79fb\u52a8\u3002\u6d4b\u91cf\u81ea\u65cb\u8868\u660e\u632f\u52a8\u6fc0\u53d1\u7684\u7a0b\u5ea6\uff0c\u79f0\u4e3a\u4f4d\u79fb\u3002\u8be5\u4f20\u611f\u5668\u53ef\u4ee5\u6d4b\u91cf\u4e0e\u6676\u4f53\u5177\u6709\u76f8\u540c\u632f\u52a8\u9891\u7387\u7684\u5916\u90e8\u7535\u573a\uff0c\u5176\u7075\u654f\u5ea6\u662f\u4e4b\u524d\u5c55\u793a\u7684\u4efb\u4f55\u539f\u5b50\u4f20\u611f\u5668\u7684 10 \u500d\u4ee5\u4e0a\u3002 \uff08\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u4f20\u611f\u5668\u53ef\u4ee5\u5728\u4e00\u79d2\u5185\u6d4b\u91cf\u51fa\u6bcf\u7c73 240 \u7eb3\u4f0f\u7684\u7535\u538b\u3002\uff09\u5728\u5b9e\u9a8c\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u5e94\u7528\u5f31\u7535\u573a\u6765\u6fc0\u53d1\u548c\u6d4b\u8bd5\u6676\u4f53\u4f20\u611f\u5668\u3002\u6697\u7269\u8d28\u641c\u7d22\u4f1a\u5bfb\u627e\u8fd9\u6837\u7684\u4fe1\u53f7\u3002 \u201c\u79bb\u5b50\u6676\u4f53\u53ef\u4ee5\u68c0\u6d4b\u67d0\u4e9b\u7c7b\u578b\u7684\u6697\u7269\u8d28\u2014\u2014\u4f8b\u5982\u8f74\u5b50\u548c\u9690\u85cf\u7684\u5149\u5b50\u2014\u2014\u5b83\u4eec\u901a\u8fc7\u5f31\u7535\u573a\u4e0e\u6b63\u5e38\u7269\u8d28\u76f8\u4e92\u4f5c\u7528\uff0c\u201dNIST \u8d44\u6df1\u4f5c\u8005\u7ea6\u7ff0\u535a\u6797\u683c\u8bf4\u3002 \u201c\u6697\u7269\u8d28\u5f62\u6210\u80cc\u666f\u4fe1\u53f7\uff0c\u5176\u632f\u8361\u9891\u7387\u53d6\u51b3\u4e8e\u6697\u7269\u8d28\u7c92\u5b50\u7684\u8d28\u91cf\u3002\u901a\u8fc7\u8d85\u5bfc\u7535\u8def\u5bfb\u627e\u8fd9\u79cd\u6697\u7269\u8d28\u7684\u5b9e\u9a8c\u5df2\u7ecf\u8fdb\u884c\u4e86\u5341\u591a\u5e74\u3002\u88ab\u56f0\u79bb\u5b50\u7684\u8fd0\u52a8\u63d0\u4f9b\u4e86\u4e0d\u540c\u9891\u7387\u8303\u56f4\u5185\u7684\u7075\u654f\u5ea6\u3002\u201d\u5341\u591a\u5e74\u6765\uff0cBollinger \u7684\u56e2\u961f\u4e00\u76f4\u5728\u7814\u7a76\u79bb\u5b50\u6676\u4f53\u3002\u65b0\u529f\u80fd\u662f\u4f7f\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u6fc0\u5149\u6765\u7ea0\u7f20\u5927\u91cf\u79bb\u5b50\u7684\u96c6\u4f53\u8fd0\u52a8\u548c\u81ea\u65cb\uff0c\u4ee5\u53ca\u7814\u7a76\u4eba\u5458\u6240\u8c13\u7684\u201c\u65f6\u95f4\u53cd\u8f6c\u201d\u7b56\u7565\u6765\u68c0\u6d4b\u7ed3\u679c\u3002\u8be5\u5b9e\u9a8c\u5f97\u76ca\u4e8e\u4e0e NIST \u7406\u8bba\u5bb6 Ana Maria Rey \u7684\u5408\u4f5c\uff0c\u5979\u5728 NIST \u548c\u79d1\u7f57\u62c9\u591a\u5927\u5b66\u535a\u5c14\u5fb7\u5206\u6821\u7684\u8054\u5408\u7814\u7a76\u6240 JILA \u5de5\u4f5c\u3002 Bollinger \u8bf4\uff0c\u8fd9\u9879\u7406\u8bba\u5de5\u4f5c\u5bf9\u4e8e\u7406\u89e3\u5b9e\u9a8c\u5ba4\u8bbe\u7f6e\u7684\u9650\u5236\u81f3\u5173\u91cd\u8981\uff0c\u4e3a\u7406\u89e3\u5bf9\u5927\u91cf\u6355\u83b7\u79bb\u5b50\u6709\u6548\u7684\u5b9e\u9a8c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u6a21\u578b\uff0c\u5e76\u8bc1\u660e\u4e86\u91cf\u5b50\u4f18\u52bf\u6765\u81ea\u4e8e\u81ea\u65cb\u548c\u8fd0\u52a8\u7684\u7ea0\u7f20\u3002\nRey \u6307\u51fa\uff0c\u7ea0\u7f20\u6709\u5229\u4e8e\u6d88\u9664\u79bb\u5b50\u7684\u56fa\u6709\u91cf\u5b50\u566a\u58f0\u3002\u7136\u800c\uff0c\u5728\u4e0d\u7834\u574f\u81ea\u65cb\u548c\u8fd0\u52a8\u4e4b\u95f4\u5171\u4eab\u7684\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\u6d4b\u91cf\u7ea0\u7f20\u91cf\u5b50\u6001\u662f\u5f88\u56f0\u96be\u7684\u3002 \u201c\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u7ea6\u7ff0\u80fd\u591f\u5728\u65bd\u52a0\u4f4d\u79fb\u540e\u9006\u8f6c\u52a8\u529b\u5b66\u5e76\u89e3\u5f00\u81ea\u65cb\u548c\u8fd0\u52a8\uff0c\u201d\u96f7\u4f0a\u8bf4\u3002 \u201c\u8fd9\u6b21\u53cd\u8f6c\u5c06\u81ea\u65cb\u548c\u8fd0\u52a8\u89e3\u8026\uff0c\u73b0\u5728\u96c6\u4f53\u81ea\u65cb\u672c\u8eab\u5b58\u50a8\u4e86\u4f4d\u79fb\u4fe1\u606f\uff0c\u5f53\u6211\u4eec\u6d4b\u91cf\u81ea\u65cb\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u975e\u5e38\u7cbe\u786e\u5730\u786e\u5b9a\u4f4d\u79fb\u3002\u8fd9\u5f88\u6574\u6d01\uff01\u201d\u7814\u7a76\u4eba\u5458\u4f7f\u7528\u5fae\u6ce2\u6765\u4ea7\u751f\u6240\u9700\u7684\u81ea\u65cb\u503c\u3002\u79bb\u5b50\u53ef\u4ee5\u5411\u4e0a\u65cb\u8f6c\uff08\u901a\u5e38\u88ab\u8bbe\u60f3\u4e3a\u5411\u4e0a\u7684\u7bad\u5934\uff09\u3001\u5411\u4e0b\u65cb\u8f6c\u6216\u5176\u4ed6\u89d2\u5ea6\uff0c\u5305\u62ec\u540c\u65f6\u8fdb\u884c\u7684\u7279\u6b8a\u91cf\u5b50\u6001\u3002\u5728\u8fd9\u4e2a\u5b9e\u9a8c\u4e2d\uff0c\u6240\u6709\u7684\u79bb\u5b50\u90fd\u5177\u6709\u76f8\u540c\u7684\u81ea\u65cb\u2014\u2014\u5148\u662f\u5411\u4e0a\u65cb\u8f6c\uff0c\u7136\u540e\u662f\u6c34\u5e73\u2014\u2014\u6240\u4ee5\u5f53\u53d7\u5230\u6fc0\u53d1\u65f6\uff0c\u5b83\u4eec\u4f1a\u4ee5\u9640\u87ba\u7684\u7279\u5f81\u6a21\u5f0f\u4e00\u8d77\u65cb\u8f6c\u3002\u9891\u7387\u5dee\u51e0\u4e4e\u4e0e\u8fd0\u52a8\u76f8\u540c\u7684\u4ea4\u53c9\u6fc0\u5149\u675f\u7528\u4e8e\u5c06\u96c6\u4f53\u81ea\u65cb\u4e0e\u8fd0\u52a8\u7ea0\u7f20\u5728\u4e00\u8d77\u3002\u7136\u540e\u6676\u4f53\u88ab\u632f\u52a8\u6fc0\u53d1\u3002\u4f7f\u7528\u76f8\u540c\u7684\u6fc0\u5149\u548c\u5fae\u6ce2\u6765\u89e3\u9664\u7ea0\u7f20\u3002\u4e3a\u4e86\u786e\u5b9a\u6676\u4f53\u79fb\u52a8\u4e86\u591a\u5c11\uff0c\u7814\u7a76\u4eba\u5458\u6d4b\u91cf\u4e86\u79bb\u5b50\u7684\u8367\u5149\u81ea\u65cb\u6c34\u5e73\uff08\u5411\u4e0a\u65cb\u8f6c\u6563\u5c04\u5149\uff0c\u5411\u4e0b\u65cb\u8f6c\u4e3a\u6697\uff09\u3002\u672a\u6765\uff0c\u901a\u8fc7\u5236\u9020 3D \u6676\u4f53\u5c06\u79bb\u5b50\u6570\u91cf\u589e\u52a0\u5230 100,000 \u4e2a\uff0c\u6709\u671b\u5c06\u4f20\u611f\u80fd\u529b\u63d0\u9ad8 30 \u500d\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6676\u4f53\u6fc0\u53d1\u8fd0\u52a8\u7684\u7a33\u5b9a\u6027\uff0c\u4ece\u800c\u63d0\u9ad8\u65f6\u95f4\u53cd\u8f6c\u8fc7\u7a0b\u548c\u7ed3\u679c\u7684\u7cbe\u5ea6\u3002 \u201c\u5982\u679c\u6211\u4eec\u80fd\u591f\u6539\u8fdb\u8fd9\u65b9\u9762\uff0c\u8fd9\u4e2a\u5b9e\u9a8c\u53ef\u4ee5\u6210\u4e3a\u63a2\u6d4b\u6697\u7269\u8d28\u7684\u57fa\u672c\u8d44\u6e90\uff0c\u201d\u96f7\u4f0a\u8bf4\u3002 \u201c\u6211\u4eec\u77e5\u9053\u5b87\u5b99\u4e2d 85% \u7684\u7269\u8d28\u662f\u7531\u6697\u7269\u8d28\u6784\u6210\u7684\uff0c\u4f46\u8fc4\u4eca\u4e3a\u6b62\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u6697\u7269\u8d28\u662f\u7531\u4ec0\u4e48\u6784\u6210\u7684\u3002\u8fd9\u4e2a\u5b9e\u9a8c\u53ef\u4ee5\u8ba9\u6211\u4eec\u5728\u672a\u6765\u63ed\u5f00\u8fd9\u4e2a\u8c1c\u56e2\u3002\u201d\u5408\u8457\u8005\u5305\u62ec\u6765\u81ea\u4fc4\u514b\u62c9\u8377\u9a6c\u5927\u5b66\u7684\u7814\u7a76\u4eba\u5458\u3002\u8fd9\u9879\u5de5\u4f5c\u5f97\u5230\u4e86\u7f8e\u56fd\u80fd\u6e90\u90e8\u3001\u7a7a\u519b\u79d1\u5b66\u7814\u7a76\u529e\u516c\u5ba4\u3001\u56fd\u9632\u9ad8\u7ea7\u7814\u7a76\u8ba1\u5212\u5c40\u3001\u9646\u519b\u7814\u7a76\u529e\u516c\u5ba4\u548c\u56fd\u5bb6\u79d1\u5b66\u57fa\u91d1\u4f1a\u7684\u90e8\u5206\u652f\u6301\u3002\n\u8bba\u6587\uff1aKA Gilmore\u3001M. Affolter\u3001RJ Lewis-Swan\u3001D. Barberena\u3001E. Jordan\u3001AM Rey \u548c JJ Bollinger\u3002\u4f7f\u7528\u4e8c\u7ef4\u4fd8\u83b7\u79bb\u5b50\u6676\u4f53\u5bf9\u4f4d\u79fb\u548c\u7535\u573a\u8fdb\u884c\u91cf\u5b50\u589e\u5f3a\u4f20\u611f\u3002\u79d1\u5b66\u3002 2021 \u5e74 8 \u6708 5 \u65e5\u3002DOI\uff1a10.1126/science.abi5226", "note_en": "Physicists at the National Institute of Standards and Technology (NIST) have linked together, or \u201centangled,\u201d the mechanical motion and electronic properties of a tiny blue crystal, giving it a quantum edge in measuring electric fields with record sensitivity that may enhance understanding of the universe.\n The quantum sensor consists of 150 beryllium ions (electrically charged atoms) confined in a magnetic field, so they self-arrange into a flat 2D crystal just 200 millionths of a meter in diameter. Quantum sensors such as this have the potential to detect signals from dark matter \u2014 a mysterious substance that might turn out to be, among other theories, subatomic particles that interact with normal matter through a weak electromagnetic field. The presence of dark matter could cause the crystal to wiggle in telltale ways, revealed by collective changes among the crystal\u2019s ions in one of their electronic properties, known as spin.\n As described in the Aug. 6 issue of   Science, researchers can measure the vibrational excitation of the crystal \u2014 the flat plane moving up and down like the head of a drum \u2014 by monitoring changes in the collective spin. Measuring the spin indicates the extent of the vibrational excitation, referred to as displacement.\n This sensor can measure external electric fields that have the same vibration frequency as the crystal with more than 10 times the sensitivity of any previously demonstrated atomic sensor. (Technically, the sensor can measure 240 nanovolts per meter in one second.) In the experiments, researchers apply a weak electric field to excite and test the crystal sensor. A dark matter search would look for such a signal.\n \u201cIon crystals could detect certain types of dark matter \u2014 examples are axions and hidden photons \u2014 that interact with normal matter through a weak electric field,\u201d NIST senior author John Bollinger said. \u201cThe dark matter forms a background signal with an oscillation frequency that depends on the mass of the dark matter particle. Experiments searching for this type of dark matter have been ongoing for more than a decade with superconducting circuits. The motion of trapped ions provides sensitivity over a different range of frequencies.\u201d\n Bollinger\u2019s group has been working with the ion crystal for more than a decade. What\u2019s new is the use of a specific type of laser light to entangle the collective motion and spins of a large number of ions, plus what the researchers call a \u201ctime reversal\u201d strategy to detect the results.\n The experiment benefited from a collaboration with NIST theorist Ana Maria Rey, who works at JILA, a joint institute of NIST and the University of Colorado Boulder. The theory work was critical for understanding the limits of the laboratory setup, offered a new model for understanding the experiment that is valid for large numbers of trapped ions, and demonstrated that the quantum advantage comes from entangling the spin and motion, Bollinger said.\n Rey noted that entanglement is beneficial in canceling the ions\u2019 intrinsic quantum noise. However, measuring the entangled quantum state without destroying the information shared between spin and motion is difficult.\n \u201cTo avoid this issue, John is able to reverse the dynamics and disentangle the spin and the motion after the displacement is applied,\u201d Rey said. \u201cThis time reversal decouples the spin and the motion, and now the collective spin itself has the displacement information stored on it, and when we measure the spins we can determine the displacement very precisely. This is neat!\u201d\n   The researchers used microwaves to produce desired values of the spins. Ions can be spin up (often envisioned as an arrow pointing up), spin down or other angles, including both at the same time, a special quantum state. In this experiment the ions all had the same spin \u2014 first spin up and then horizontal \u2014 so when excited they rotated together in a pattern characteristic of spinning tops.\n Crossed laser beams, with a difference in frequency that was nearly the same as the motion, were used to entangle the collective spin with the motion. The crystal was then vibrationally excited. The same lasers and microwaves were used to undo the entanglement. To determine how much the crystal moved, researchers measured the ions\u2019 spin level of fluorescence (spin up scatters light, spin down is dark).\n In the future, increasing the number of ions to 100,000 by making 3D crystals is expected to improve the sensing capability thirtyfold. In addition, the stability of the crystal\u2019s excited motion might be improved, which would enhance the time reversal process and the precision of the results.\n \u201cIf we are able to improve this aspect, this experiment can become a fundamental resource for detecting dark matter,\u201d Rey said. \u201cWe know 85% of the matter in the universe is made of dark matter, but to date we do not know what dark matter is made of. This experiment could allow us in the future to unveil this mystery.\u201d\n Co-authors included researchers from the University of Oklahoma. This work is supported in part by the U.S. Department of Energy, Air Force Office of Scientific Research, Defense Advanced Research Projects Agency, Army Research Office and National Science Foundation.\n  Paper: K.A. Gilmore, M. Affolter, R.J. Lewis-Swan, D. Barberena, E. Jordan, A.M. Rey and J.J. Bollinger. Quantum-enhanced sensing of displacements and electric fields with two-dimensional trapped-ion crystals.  Science. Aug. 5, 2021. DOI:  10.1126/science.abi5226", "posttime": "2021-08-06 09:00:49", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91cf\u5b50,quantum,\u6697\u7269\u8d28", "title": "NIST \u7684\u91cf\u5b50\u6676\u4f53\u53ef\u80fd\u662f\u4e00\u79cd\u65b0\u7684\u6697\u7269\u8d28\u4f20\u611f\u5668", "title_en": "NIST\u2019s Quantum Crystal Could Be a New Dark Matter Sensor", "transed": 1, "url": "https://www.nist.gov/news-events/news/2021/08/nists-quantum-crystal-could-be-new-dark-matter-sensor", "via": "", "real_tags": ["\u91cf\u5b50", "quantum", "\u6697\u7269\u8d28"]}]
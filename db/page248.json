[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1033308, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u5efa\u8bae\u6269\u5c55Go\u8bed\u8a00\uff0c\u5728\u7c7b\u578b\u548c\u51fd\u6570\u58f0\u660e\u4e2d\u6dfb\u52a0\u53ef\u9009\u7684\u7c7b\u578b\u53c2\u6570\u3002\u7c7b\u578b\u53c2\u6570\u53d7\u63a5\u53e3\u7c7b\u578b\u7684\u7ea6\u675f\u3002\u63a5\u53e3\u7c7b\u578b\u7528\u4f5c\u7c7b\u578b\u7ea6\u675f\u65f6\uff0c\u5141\u8bb8\u5217\u51fa\u53ef\u80fd\u5206\u914d\u7ed9\u5b83\u4eec\u7684\u4e00\u7ec4\u7c7b\u578b\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u7edf\u4e00\u7b97\u6cd5\u7684\u7c7b\u578b\u63a8\u65ad\u5141\u8bb8\u4ece\u51fd\u6570\u8c03\u7528\u4e2d\u7701\u7565\u7c7b\u578b\u53c2\u6570\u3002\u8be5\u8bbe\u8ba1\u5b8c\u5168\u5411\u540e\u517c\u5bb9GO 1\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u4ece\u96f6\u5f00\u59cb\u89e3\u91ca\u6574\u4e2a\u8bbe\u8ba1\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u4ecb\u7ecd\u7ec6\u8282\uff0c\u5e76\u7528\u7b80\u5355\u7684\u4f8b\u5b50\u4ecb\u7ecd\u5b83\u4eec\u3002\n\u5728\u5b8c\u6574\u63cf\u8ff0\u4e86\u8bbe\u8ba1\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u5b9e\u73b0\u3001\u8bbe\u8ba1\u4e2d\u7684\u4e00\u4e9b\u95ee\u9898\u4ee5\u53ca\u4e0e\u5176\u4ed6\u6cdb\u578b\u65b9\u6cd5\u7684\u6bd4\u8f83\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u5c06\u63d0\u4f9b\u51e0\u4e2a\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u8bf4\u660e\u5982\u4f55\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u8fd9\u79cd\u8bbe\u8ba1\u3002\n\u672c\u90e8\u5206\u975e\u5e38\u7b80\u8981\u5730\u89e3\u91ca\u4e86\u8bbe\u8ba1\u8349\u6848\u5efa\u8bae\u7684\u66f4\u6539\u3002\u672c\u90e8\u5206\u9762\u5411\u5df2\u7ecf\u719f\u6089\u6cdb\u578b\u5982\u4f55\u5728Go\u8fd9\u6837\u7684\u8bed\u8a00\u4e2d\u5de5\u4f5c\u7684\u4eba\u3002\u4ee5\u4e0b\u5404\u8282\u5c06\u8be6\u7ec6\u89e3\u91ca\u8fd9\u4e9b\u6982\u5ff5\u3002\n\u51fd\u6570\u53ef\u4ee5\u6709\u4e00\u4e2a\u4f7f\u7528\u65b9\u62ec\u53f7\u7684\u9644\u52a0\u7c7b\u578b\u53c2\u6570\u5217\u8868\uff0c\u4f46\u5728\u5176\u4ed6\u65b9\u9762\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u666e\u901a\u53c2\u6570\u5217\u8868\uff1afunc F[T any](P T){...}\u3002\n\u8fd9\u4e9b\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u7531\u5e38\u89c4\u53c2\u6570\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728\u51fd\u6570\u4f53\u4e2d\u4f7f\u7528\u3002\n\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u90fd\u6709\u4e00\u4e2a\u7c7b\u578b\u7ea6\u675f\uff0c\u5c31\u50cf\u6bcf\u4e2a\u666e\u901a\u53c2\u6570\u90fd\u6709\u4e00\u4e2a\u7c7b\u578b\u4e00\u6837\uff1afunc F[T Constraint](P T){...}\u3002\n\u7528\u4f5c\u7c7b\u578b\u7ea6\u675f\u7684\u63a5\u53e3\u7c7b\u578b\u53ef\u4ee5\u6709\u4e00\u4e2a\u9884\u58f0\u660e\u7c7b\u578b\u5217\u8868\uff1b\u53ea\u6709\u4e0e\u5176\u4e2d\u4e00\u4e2a\u7c7b\u578b\u5339\u914d\u7684\u7c7b\u578b\u53c2\u6570\u624d\u80fd\u6ee1\u8db3\u7ea6\u675f\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e9b\u8bed\u8a00\u66f4\u6539\u4e2d\u7684\u6bcf\u4e00\u4e2a\u3002\u60a8\u53ef\u80fd\u66f4\u559c\u6b22\u8df3\u5230\u793a\u4f8b\uff0c\u770b\u770b\u5199\u5230\u6b64\u8bbe\u8ba1\u8349\u6848\u4e2d\u7684\u901a\u7528\u4ee3\u7801\u5728\u5b9e\u8df5\u4e2d\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u3002\n\u6709\u5f88\u591a\u4eba\u8981\u6c42\u5728Go\u4e2d\u589e\u52a0\u5bf9\u6cdb\u578b\u7f16\u7a0b\u7684\u989d\u5916\u652f\u6301\u3002\u5173\u4e8e\u95ee\u9898\u8ddf\u8e2a\u5668\u548c\u4e00\u4efd\u6d3b\u751f\u751f\u7684\u6587\u4ef6\uff0c\u4eba\u4eec\u8fdb\u884c\u4e86\u5e7f\u6cdb\u7684\u8ba8\u8bba\u3002\n\u8fd9\u4efd\u8bbe\u8ba1\u8349\u6848\u5efa\u8bae\u6269\u5c55Go\u8bed\u8a00\u4ee5\u589e\u52a0\u4e00\u79cd\u5f62\u5f0f\u7684\u53c2\u6570\u591a\u6001\u6027\uff0c\u5176\u4e2d\u7c7b\u578b\u53c2\u6570\u4e0d\u662f\u7531\u58f0\u660e\u7684\u5b50\u7c7b\u578b\u5173\u7cfb(\u5c31\u50cf\u5728\u4e00\u4e9b\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u90a3\u6837)\u9650\u5b9a\u7684\uff0c\u800c\u662f\u7531\u660e\u786e\u5b9a\u4e49\u7684\u7ed3\u6784\u7ea6\u675f\u9650\u5b9a\u7684\u3002\n\u8fd9\u4e00\u7248\u672c\u7684\u8bbe\u8ba1\u8349\u6848\u4e0e2019\u5e747\u670831\u65e5\u63d0\u4ea4\u7684\u8bbe\u8ba1\u8349\u6848\u6709\u8bb8\u591a\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u5408\u540c\u5df2\u88ab\u79fb\u9664\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u63a5\u53e3\u7c7b\u578b\uff0c\u8bed\u6cd5\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\u3002\n\u6709\u51e0\u4e2a\u5173\u4e8e\u6dfb\u52a0\u7c7b\u578b\u53c2\u6570\u7684\u5efa\u8bae\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684\u94fe\u63a5\u627e\u5230\u8fd9\u4e9b\u5efa\u8bae\u3002\u8fd9\u91cc\u63d0\u51fa\u7684\u8bb8\u591a\u60f3\u6cd5\u4ee5\u524d\u5c31\u51fa\u73b0\u8fc7\u3002\u8fd9\u91cc\u63cf\u8ff0\u7684\u4e3b\u8981\u65b0\u7279\u6027\u662f\u8bed\u6cd5\u548c\u5bf9\u4f5c\u4e3a\u7ea6\u675f\u7684\u63a5\u53e3\u7c7b\u578b\u7684\u4ed4\u7ec6\u68c0\u67e5\u3002\n\u6b64\u8bbe\u8ba1\u4e0d\u652f\u6301\u6a21\u677f\u5143\u7f16\u7a0b\u6216\u4efb\u4f55\u5176\u4ed6\u5f62\u5f0f\u7684\u7f16\u8bd1\u65f6\u7f16\u7a0b\u3002\n\u7531\u4e8e\u672f\u8bed\u6cdb\u578b\u5728\u56f4\u68cb\u793e\u533a\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u4f7f\u7528\u5b83\u4f5c\u4e3a\u4e00\u79cd\u7f29\u5199\uff0c\u8868\u793a\u63a5\u53d7\u7c7b\u578b\u53c2\u6570\u7684\u51fd\u6570\u6216\u7c7b\u578b\u3002\u4e0d\u8981\u5c06\u672c\u8bbe\u8ba1\u4e2d\u4f7f\u7528\u7684\u672f\u8bed\u6cdb\u578b\u4e0e\u5176\u4ed6\u8bed\u8a00(\u5982C++\u3001C#\u3001Java\u6216Rust)\u4e2d\u7684\u76f8\u540c\u672f\u8bed\u6df7\u6dc6\uff1b\u5b83\u4eec\u6709\u76f8\u4f3c\u4e4b\u5904\uff0c\u4f46\u53c8\u4e0d\u76f8\u540c\u3002\n\u6cdb\u578b\u4ee3\u7801\u662f\u4f7f\u7528\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u7f16\u5199\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7c7b\u578b\u53c2\u6570\u3002\u8fd0\u884c\u6cdb\u578b\u4ee3\u7801\u65f6\uff0c\u7c7b\u578b\u53c2\u6570\u5c06\u66ff\u6362\u4e3a\u7c7b\u578b\u53c2\u6570\u3002\n\u4e0b\u9762\u662f\u4e00\u4e2a\u6253\u5370\u5207\u7247\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u51fd\u6570\uff0c\u5176\u4e2d\u5207\u7247\u7684\u5143\u7d20\u7c7b\u578b(\u8fd9\u91cc\u79f0\u4e3aT)\u662f\u672a\u77e5\u7684\u3002\u8fd9\u662f\u6211\u4eec\u4e3a\u4e86\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\u800c\u60f3\u8981\u5141\u8bb8\u7684\u51fd\u6570\u7c7b\u578b\u7684\u4e00\u4e2a\u5f88\u5c0f\u7684\u4f8b\u5b50\u3002(\u7a0d\u540e\u6211\u4eec\u8fd8\u5c06\u8ba8\u8bba\u6cdb\u578b\u7c7b\u578b)\u3002\n//print\u6253\u5370\u5207\u7247\u7684\u5143\u7d20\u3002//\u5e94\u8be5\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u5207\u7247\u503c\u8c03\u7528\u5b83\u3002func print(s[]T){//\u53ea\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u4e0d\u662f\u5efa\u8bae\u7684\u8bed\u6cd5\u3002For_\uff0cv\uff1a=range s{fmt.Println(V)}}\u3002\n\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u9996\u5148\u8981\u505a\u7684\u51b3\u5b9a\u662f\uff1a\u5e94\u8be5\u5982\u4f55\u58f0\u660e\u7c7b\u578b\u53c2\u6570T\uff1f\u5728\u50cfGo\u8fd9\u6837\u7684\u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u6807\u8bc6\u7b26\u90fd\u4ee5\u67d0\u79cd\u65b9\u5f0f\u58f0\u660e\u3002\n\u8fd9\u91cc\u6211\u4eec\u505a\u4e86\u4e00\u4e2a\u8bbe\u8ba1\u51b3\u7b56\uff1a\u7c7b\u578b\u53c2\u6570\u7c7b\u4f3c\u4e8e\u666e\u901a\u7684\u975e\u7c7b\u578b\u51fd\u6570\u53c2\u6570\uff0c\u56e0\u6b64\u5e94\u8be5\u4e0e\u5176\u4ed6\u53c2\u6570\u4e00\u8d77\u5217\u51fa\u3002\u4f46\u662f\uff0c\u7c7b\u578b\u53c2\u6570\u4e0e\u975e\u7c7b\u578b\u53c2\u6570\u4e0d\u540c\uff0c\u56e0\u6b64\u5c3d\u7ba1\u5b83\u4eec\u51fa\u73b0\u5728\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u533a\u5206\u5b83\u4eec\u3002\u8fd9\u5c06\u5bfc\u81f4\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u8bbe\u8ba1\u51b3\u7b56\uff1a\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u63cf\u8ff0\u7c7b\u578b\u53c2\u6570\u7684\u9644\u52a0\u53ef\u9009\u53c2\u6570\u5217\u8868\u3002\n\u6b64\u7c7b\u578b\u53c2\u6570\u5217\u8868\u663e\u793a\u5728\u5e38\u89c4\u53c2\u6570\u4e4b\u524d\u3002\u4e3a\u4e86\u533a\u5206\u7c7b\u578b\u53c2\u6570\u5217\u8868\u548c\u5e38\u89c4\u53c2\u6570\u5217\u8868\uff0c\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4f7f\u7528\u65b9\u62ec\u53f7\u800c\u4e0d\u662f\u5706\u62ec\u53f7\u3002\u6b63\u5982\u5e38\u89c4\u53c2\u6570\u5177\u6709\u7c7b\u578b\u4e00\u6837\uff0c\u7c7b\u578b\u53c2\u6570\u4e5f\u5177\u6709\u5143\u7c7b\u578b\uff0c\u4e5f\u79f0\u4e3a\u7ea6\u675f\u3002\u6211\u4eec\u7a0d\u540e\u5c06\u8ba8\u8bba\u7ea6\u675f\u7684\u7ec6\u8282\uff1b\u73b0\u5728\uff0c\u6211\u4eec\u53ea\u9700\u6ce8\u610fAny\u662f\u6709\u6548\u7684\u7ea6\u675f\uff0c\u8fd9\u610f\u5473\u7740\u5141\u8bb8\u4efb\u4f55\u7c7b\u578b\u3002\n//Print\u6253\u5370\u4efb\u4f55\u5207\u7247\u7684\u5143\u7d20\u3002//Print\u6709\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570T\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a(\u975e\u7c7b\u578b)\u53c2\u6570s\uff0c\u5b83\u662f\u8be5\u7c7b\u578b\u53c2\u6570\u7684\u5207\u7247\u3002func print[T any](s[]T){//\u540c\u4e0a}\u3002\n\u8fd9\u8bf4\u660e\u5728\u51fd\u6570print\u4e2d\uff0c\u6807\u8bc6\u7b26T\u662f\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\uff0c\u8fd9\u662f\u4e00\u79cd\u5f53\u524d\u672a\u77e5\u4f46\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c31\u4f1a\u77e5\u9053\u7684\u7c7b\u578b\u3002Any\u8868\u793aT\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u5728\u63cf\u8ff0\u666e\u901a\u975e\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\u65f6\uff0c\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u7528\u4f5c\u7c7b\u578b\u3002\u5b83\u8fd8\u53ef\u4ee5\u7528\u4f5c\u51fd\u6570\u4f53\u4e2d\u7684\u7c7b\u578b\u3002\n\u4e0e\u5e38\u89c4\u53c2\u6570\u5217\u8868\u4e0d\u540c\uff0c\u5728\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u9700\u8981\u540d\u79f0\u3002\u8fd9\u907f\u514d\u4e86\u8bed\u6cd5\u6b67\u4e49\uff0c\u800c\u4e14\u78b0\u5de7\u6ca1\u6709\u7406\u7531\u7701\u7565\u7c7b\u578b\u53c2\u6570\u540d\u79f0\u3002\n\u56e0\u4e3aprint\u6709\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\uff0c\u6240\u4ee5\u4efb\u4f55\u5bf9print\u7684\u8c03\u7528\u90fd\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u770b\u5230\uff0c\u901a\u8fc7\u4f7f\u7528\u7c7b\u578b\u63a8\u65ad\uff0c\u901a\u5e38\u53ef\u4ee5\u4ece\u975e\u7c7b\u578b\u53c2\u6570\u4e2d\u63a8\u5bfc\u51fa\u6b64\u7c7b\u578b\u53c2\u6570\u3002\u76ee\u524d\uff0c\u6211\u4eec\u5c06\u663e\u5f0f\u4f20\u9012\u7c7b\u578b\u53c2\u6570\u3002\u7c7b\u578b\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f\u4e0e\u7c7b\u578b\u53c2\u6570\u7684\u58f0\u660e\u65b9\u5f0f\u975e\u5e38\u76f8\u4f3c\uff1a\u4f5c\u4e3a\u5355\u72ec\u7684\u53c2\u6570\u5217\u8868\u3002\u4e0e\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4e00\u6837\uff0c\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4f7f\u7528\u65b9\u62ec\u53f7\u3002\n//\u4f7f\u7528[]int\u8c03\u7528print\u3002//print\u6709\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570T\uff0c\u6211\u4eec\u5e0c\u671b\u4f20\u9012\u4e00\u4e2a[]int\uff0c//\u56e0\u6b64\u6211\u4eec\u901a\u8fc7\u7f16\u5199print[int]\u4f20\u9012\u4e00\u4e2aint\u7684\u7c7b\u578b\u53c2\u6570\u3002//\u51fd\u6570print[int]\u9700\u8981\u4e00\u4e2a[]int\u4f5c\u4e3a\u53c2\u6570\u3002Print[int]([]int{1\uff0c2\uff0c3})//\u8fd9\u5c06\u6253\u5370\uff1a//1//2//3\u3002\n\u8ba9\u6211\u4eec\u4f7f\u6211\u4eec\u7684\u793a\u4f8b\u7a0d\u5fae\u590d\u6742\u4e00\u4e9b\u3002\u8ba9\u6211\u4eec\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u901a\u8fc7\u5bf9\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u65b9\u6cd5\uff0c\u5c06\u4efb\u4f55\u7c7b\u578b\u7684\u7247\u6bb5\u8f6c\u6362\u4e3a[]\u5b57\u7b26\u4e32\u3002\n//\u6b64\u51fd\u6570\u4e3aINVALID.func Stringify[T any](s[]T)(ret[]string){for_\uff0cv\uff1a=range s{ret=append(ret\uff0cv.String())//INVALID}return ret}\u3002\n\u4e4d\u4e00\u770b\uff0c\u8fd9\u4f3c\u4e4e\u6ca1\u95ee\u9898\uff0c\u4f46\u5728\u672c\u4f8b\u4e2d\uff0cv\u7684\u7c7b\u578b\u662fT\uff0cT\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u3002\u8fd9\u610f\u5473\u7740T\u4e0d\u9700\u8981\u5b57\u7b26\u4e32\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u5bf9v.String()\u7684\u8c03\u7528\u65e0\u6548\u3002\n\u5f53\u7136\uff0c\u540c\u6837\u7684\u95ee\u9898\u4e5f\u4f1a\u51fa\u73b0\u5728\u5176\u4ed6\u652f\u6301\u6cdb\u578b\u7f16\u7a0b\u7684\u8bed\u8a00\u4e2d\u3002\u4f8b\u5982\uff0c\u5728C++\u4e2d\uff0c\u6cdb\u578b\u51fd\u6570(\u5728C++\u672f\u8bed\u4e2d\u662f\u51fd\u6570\u6a21\u677f)\u53ef\u4ee5\u5bf9\u6cdb\u578b\u7c7b\u578b\u7684\u503c\u8c03\u7528\u4efb\u4f55\u65b9\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728C++\u65b9\u6cd5\u4e2d\uff0c\u8c03\u7528v.String()\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u679c\u4f7f\u7528\u6ca1\u6709\u5b57\u7b26\u4e32\u65b9\u6cd5\u7684\u7c7b\u578b\u53c2\u6570\u8c03\u7528\u51fd\u6570\uff0c\u5219\u5728\u4f7f\u7528\u8be5\u7c7b\u578b\u53c2\u6570\u7f16\u8bd1\u5bf9v.String\u7684\u8c03\u7528\u65f6\u4f1a\u62a5\u544a\u9519\u8bef\u3002\u8fd9\u4e9b\u9519\u8bef\u53ef\u80fd\u5f88\u957f\uff0c\u56e0\u4e3a\u5728\u9519\u8bef\u53d1\u751f\u4e4b\u524d\u53ef\u80fd\u6709\u51e0\u5c42\u6cdb\u578b\u51fd\u6570\u8c03\u7528\uff0c\u5fc5\u987b\u62a5\u544a\u6240\u6709\u8fd9\u4e9b\u8c03\u7528\u624d\u80fd\u4e86\u89e3\u54ea\u91cc\u51fa\u4e86\u95ee\u9898\u3002\n\u5bf9\u4e8e\u56f4\u68cb\u6765\u8bf4\uff0cC++\u65b9\u6cd5\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u9009\u62e9\u3002\u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u662f\u8bed\u8a00\u7684\u98ce\u683c\u3002\u5728Go\u4e2d\uff0c\u6211\u4eec\u4e0d\u5f15\u7528\u540d\u79f0\uff0c\u4f8b\u5982\uff0c\u5728\u672c\u4f8b\u4e2d\u662f\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u5e0c\u671b\u5b83\u4eec\u5b58\u5728\u3002\u5f53\u770b\u5230\u6240\u6709\u540d\u79f0\u65f6\uff0cGo\u4f1a\u5c06\u5b83\u4eec\u89e3\u6790\u4e3a\u5176\u58f0\u660e\u3002\n\u53e6\u4e00\u4e2a\u539f\u56e0\u662fGo\u662f\u4e3a\u652f\u6301\u5927\u89c4\u6a21\u7f16\u7a0b\u800c\u8bbe\u8ba1\u7684\u3002\u6211\u4eec\u5fc5\u987b\u8003\u8651\u6cdb\u578b\u51fd\u6570\u5b9a\u4e49(\u5982\u4e0a\u6240\u8ff0\u7684Stringify)\u548c\u5bf9\u6cdb\u578b\u51fd\u6570\u7684\u8c03\u7528(\u672a\u663e\u793a\uff0c\u4f46\u53ef\u80fd\u5728\u5176\u4ed6\u5305\u4e2d)\u76f8\u8ddd\u751a\u8fdc\u7684\u60c5\u51b5\u3002\u901a\u5e38\uff0c\u6240\u6709\u6cdb\u578b\u4ee3\u7801\u90fd\u5e0c\u671b\u7c7b\u578b\u53c2\u6570\u6ee1\u8db3\u67d0\u4e9b\u8981\u6c42\u3002\u6211\u4eec\u5c06\u8fd9\u4e9b\u8981\u6c42\u79f0\u4e3a\u7ea6\u675f(\u5176\u4ed6\u8bed\u8a00\u4e5f\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u79f0\u4e3a\u7c7b\u578b\u754c\u9650\u6216\u7279\u5f81\u754c\u9650\u6216\u6982\u5ff5)\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u7ea6\u675f\u975e\u5e38\u660e\u663e\uff1a\u8be5\u7c7b\u578b\u5fc5\u987b\u6709\u4e00\u4e2astring()\u5b57\u7b26\u4e32\u65b9\u6cd5\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e00\u70b9\u53ef\u80fd\u4e0d\u90a3\u4e48\u660e\u663e\u3002\n\u6211\u4eec\u4e0d\u60f3\u4eceStringify\u78b0\u5de7\u505a\u7684\u4efb\u4f55\u4e8b\u60c5\u4e2d\u6d3e\u751f\u7ea6\u675f(\u5728\u672c\u4f8b\u4e2d\uff0c\u8c03\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5)\u3002\u5982\u679c\u6211\u4eec\u8fd9\u6837\u505a\u4e86\uff0c\u5bf9Stringify\u7684\u5fae\u5c0f\u66f4\u6539\u53ef\u80fd\u4f1a\u6539\u53d8\u7ea6\u675f\u3002\u8fd9\u610f\u5473\u7740\u5fae\u5c0f\u7684\u66f4\u6539\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8c03\u7528\u8be5\u51fd\u6570\u7684\u4ee3\u7801\u610f\u5916\u5d29\u6e83\u3002Stringify\u53ef\u4ee5\u6545\u610f\u66f4\u6539\u5176\u7ea6\u675f\uff0c\u5e76\u5f3a\u5236\u8c03\u7528\u8005\u66f4\u6539\u3002\u6211\u4eec\u8981\u907f\u514d\u7684\u662fStringify\u610f\u5916\u5730\u6539\u53d8\u4e86\u5b83\u7684\u7ea6\u675f\u3002\n\u8fd9\u610f\u5473\u7740\u7ea6\u675f\u5fc5\u987b\u5bf9\u8c03\u7528\u65b9\u4f20\u9012\u7684\u7c7b\u578b\u53c2\u6570\u548c\u6cdb\u578b\u51fd\u6570\u4e2d\u7684\u4ee3\u7801\u8bbe\u7f6e\u9650\u5236\u3002\u8c03\u7528\u65b9\u53ea\u80fd\u4f20\u9012\u6ee1\u8db3\u7ea6\u675f\u7684\u7c7b\u578b\u53c2\u6570\u3002\u6cdb\u578b\u51fd\u6570\u53ea\u80fd\u4ee5\u7ea6\u675f\u5141\u8bb8\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e9b\u503c\u3002\u8fd9\u662f\u4e00\u6761\u91cd\u8981\u7684\u89c4\u5219\uff0c\u6211\u4eec\u8ba4\u4e3a\u5e94\u8be5\u9002\u7528\u4e8e\u5728Go\u4e2d\u5b9a\u4e49\u6cdb\u578b\u7f16\u7a0b\u7684\u4efb\u4f55\u5c1d\u8bd5\uff1a\u6cdb\u578b\u4ee3\u7801\u53ea\u80fd\u4f7f\u7528\u5176\u7c7b\u578b\u53c2\u6570\u5df2\u77e5\u8981\u5b9e\u73b0\u7684\u64cd\u4f5c\u3002\n\u5728\u6211\u4eec\u8fdb\u4e00\u6b65\u8ba8\u8bba\u7ea6\u675f\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u7b80\u5355\u5730\u6ce8\u610f\u4e00\u4e0b\u5f53\u7ea6\u675f\u4e3aANY\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u5982\u679c\u6cdb\u578b\u51fd\u6570\u5bf9\u7c7b\u578b\u53c2\u6570\u4f7f\u7528Any\u7ea6\u675f(\u5c31\u50cf\u4e0a\u9762\u7684print\u65b9\u6cd5\u4e00\u6837)\uff0c\u5219\u5141\u8bb8\u8be5\u53c2\u6570\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u53c2\u6570\u3002\u6cdb\u578b\u51fd\u6570\u53ef\u4ee5\u5bf9\u8be5\u7c7b\u578b\u53c2\u6570\u503c\u4f7f\u7528\u7684\u552f\u4e00\u64cd\u4f5c\u662f\u5141\u8bb8\u5bf9\u4efb\u4f55\u7c7b\u578b\u7684\u503c\u6267\u884c\u7684\u64cd\u4f5c\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0cprint\u51fd\u6570\u58f0\u660e\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a\u7c7b\u578b\u53c2\u6570T\u7684\u53d8\u91cfv\uff0c\u5e76\u5c06\u8be5\u53d8\u91cf\u4f20\u9012\u7ed9\u4e00\u4e2a\u51fd\u6570\u3002\n\u5b9a\u4e49\u548c\u4f7f\u7528\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u578b\u7684\u590d\u5408\u7c7b\u578b\uff0c\u4f8b\u5982\u8be5\u7c7b\u578b\u7684\u7247\u6bb5\u3002\n\u672a\u6765\u7684\u8bed\u8a00\u53d8\u5316\u53ef\u80fd\u4f1a\u6dfb\u52a0\u5176\u4ed6\u6b64\u7c7b\u64cd\u4f5c\uff0c\u5c3d\u7ba1\u76ee\u524d\u9884\u8ba1\u4e0d\u4f1a\u6dfb\u52a0\u4efb\u4f55\u6b64\u7c7b\u64cd\u4f5c\u3002\nGo\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u63a5\u8fd1\u6211\u4eec\u7ea6\u675f\u6240\u9700\u7684\u6784\u9020\uff1a\u63a5\u53e3\u7c7b\u578b\u3002\u63a5\u53e3\u7c7b\u578b\u662f\u4e00\u7ec4\u65b9\u6cd5\u3002\u53ef\u4ee5\u8d4b\u7ed9\u63a5\u53e3\u7c7b\u578b\u53d8\u91cf\u7684\u552f\u4e00\u503c\u662f\u5176\u7c7b\u578b\u5b9e\u73b0\u76f8\u540c\u65b9\u6cd5\u7684\u90a3\u4e9b\u53d8\u91cf\u3002\u9664\u4e86\u5141\u8bb8\u4efb\u4f55\u7c7b\u578b\u7684\u64cd\u4f5c\u4e4b\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528\u63a5\u53e3\u7c7b\u578b\u7684\u503c\u6267\u884c\u7684\u552f\u4e00\u64cd\u4f5c\u662f\u8c03\u7528\u65b9\u6cd5\u3002\n\u4f7f\u7528\u7c7b\u578b\u53c2\u6570\u8c03\u7528\u6cdb\u578b\u51fd\u6570\u7c7b\u4f3c\u4e8e\u5411\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u8d4b\u503c\uff1a\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u5b9e\u73b0\u7c7b\u578b\u53c2\u6570\u7684\u7ea6\u675f\u3002\u7f16\u5199\u6cdb\u578b\u51fd\u6570\u7c7b\u4f3c\u4e8e\u4f7f\u7528\u63a5\u53e3\u7c7b\u578b\u7684\u503c\uff1a\u6cdb\u578b\u4ee3\u7801\u53ea\u80fd\u4f7f\u7528\u7ea6\u675f\u5141\u8bb8\u7684\u64cd\u4f5c(\u6216\u4efb\u4f55\u7c7b\u578b\u5141\u8bb8\u7684\u64cd\u4f5c)\u3002\n\u56e0\u6b64\uff0c\u5728\u6b64\u8bbe\u8ba1\u4e2d\uff0c\u7ea6\u675f\u53ea\u662f\u63a5\u53e3\u7c7b\u578b\u3002\u5b9e\u73b0\u7ea6\u675f\u610f\u5473\u7740\u5b9e\u73b0\u63a5\u53e3\u7c7b\u578b\u3002(\u7a0d\u540e\u6211\u4eec\u5c06\u4e86\u89e3\u5982\u4f55\u4e3a\u65b9\u6cd5\u8c03\u7528\u4ee5\u5916\u7684\u64cd\u4f5c\u5b9a\u4e49\u7ea6\u675f\uff0c\u4f8b\u5982\u4e8c\u5143\u8fd0\u7b97\u7b26)\u3002\n\u5bf9\u4e8eStringify\u793a\u4f8b\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5e26\u6709\u5b57\u7b26\u4e32\u65b9\u6cd5\u7684\u63a5\u53e3\u7c7b\u578b\uff0c\u8be5\u65b9\u6cd5\u4e0d\u63a5\u53d7\u4efb\u4f55\u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u503c\u3002\n//Stringer\u662f\u4e00\u79cd\u7c7b\u578b\u7ea6\u675f\uff0c\u5b83\u8981\u6c42\u7c7b\u578b\u53c2\u6570\u5177\u6709//\u5b57\u7b26\u4e32\u65b9\u6cd5\uff0c\u5e76\u5141\u8bb8\u6cdb\u578b\u51fd\u6570\u8c03\u7528\u5b57\u7b26\u4e32\u3002//String\u65b9\u6cd5\u5e94\u8fd4\u56de\u503c\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u3002type Stringer\u63a5\u53e3{string()string}\u3002\n(\u8fd9\u4e0e\u672c\u6587\u7684\u8ba8\u8bba\u65e0\u5173\uff0c\u4f46\u8fd9\u5b9a\u4e49\u4e86\u4e0e\u6807\u51c6\u5e93\u7684fmt.Stringer\u7c7b\u578b\u76f8\u540c\u7684\u63a5\u53e3\uff0c\u771f\u6b63\u7684\u4ee3\u7801\u5f88\u53ef\u80fd\u53ea\u4f7f\u7528fmt.Stringer\u3002)\u3002\n\u65e2\u7136\u6211\u4eec\u77e5\u9053\u7ea6\u675f\u53ea\u662f\u63a5\u53e3\u7c7b\u578b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u91ca\u7ea6\u675f\u662f\u4ec0\u4e48\u610f\u601d\u4e86\u3002\u5982\u4e0a\u6240\u8ff0\uff0cAny\u7ea6\u675f\u5141\u8bb8\u4efb\u4f55\u7c7b\u578b\u4f5c\u4e3a\u7c7b\u578b\u53c2\u6570\uff0c\u5e76\u4e14\u53ea\u5141\u8bb8\u51fd\u6570\u4f7f\u7528\u4efb\u4f55\u7c7b\u578b\u5141\u8bb8\u7684\u64cd\u4f5c\u3002\u5176\u63a5\u53e3\u7c7b\u578b\u4e3a\u7a7a\u63a5\u53e3\uff1a\u63a5\u53e3{}\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6253\u5370\u793a\u4f8b\u7f16\u5199\u4e3a\u3002\n//Print\u6253\u5370\u4efb\u4f55\u5207\u7247\u7684\u5143\u7d20\u3002//Print\u6709\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570T\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a(\u975e\u7c7b\u578b)\u53c2\u6570s\uff0c\u5b83\u662f\u8be5\u7c7b\u578b\u53c2\u6570\u7684\u5207\u7247\u3002func print[T\u63a5\u53e3{}](s[]T){//\u540c\u4e0a}\u3002\n\u7136\u800c\uff0c\u6bcf\u6b21\u7f16\u5199\u4e0d\u5bf9\u5176\u7c7b\u578b\u53c2\u6570\u65bd\u52a0\u7ea6\u675f\u7684\u6cdb\u578b\u51fd\u6570\u65f6\uff0c\u90fd\u5fc5\u987b\u7f16\u5199\u63a5\u53e3{}\uff0c\u8fd9\u662f\u5f88\u4e4f\u5473\u7684\u3002\u56e0\u6b64\uff0c\u5728\u6b64\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u4e0e\u63a5\u53e3{}\u7b49\u6548\u7684\u7c7b\u578b\u7ea6\u675fAny\u3002\u8fd9\u5c06\u662f\u4e00\u4e2a\u9884\u5148\u58f0\u660e\u7684\u540d\u79f0\uff0c\u5728\u8bed\u4e49\u5757\u4e2d\u9690\u5f0f\u58f0\u660e\u3002\u9664\u4e86\u7c7b\u578b\u7ea6\u675f\u4e4b\u5916\uff0c\u5c06Any\u7528\u4f5c\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7ea6\u675f\u90fd\u662f\u65e0\u6548\u7684\u3002\n(\u6ce8\u610f\uff1a\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u4efb\u4f55\u7c7b\u578b\u4f5c\u4e3a\u63a5\u53e3{}\u7684\u522b\u540d\uff0c\u6216\u8005\u4f5c\u4e3a\u5b9a\u4e49\u4e3a\u63a5\u53e3{}\u7684\u65b0\u5b9a\u4e49\u7c7b\u578b)\u3002\u7136\u800c\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u8fd9\u4efd\u5173\u4e8e\u6cdb\u578b\u7684\u8bbe\u8ba1\u8349\u6848\u5bfc\u81f4\u5bf9\u975e\u6cdb\u578b\u4ee3\u7801\u7684\u53ef\u80fd\u91cd\u5927\u6539\u53d8\u3002\u5c06Any\u6dfb\u52a0\u4e3a\u63a5\u53e3{}\u7684\u901a\u7528\u540d\u79f0\u53ef\u4ee5\u800c\u4e14\u5e94\u8be5\u5355\u72ec\u8ba8\u8bba)\u3002\n\u5bf9\u4e8e\u6cdb\u578b\u51fd\u6570\uff0c\u53ef\u4ee5\u5c06\u7ea6\u675f\u89c6\u4e3a\u7c7b\u578b\u53c2\u6570\u7684\u7c7b\u578b\uff1a\u5143\u7c7b\u578b\u3002\u5982\u4e0a\u6240\u793a\uff0c\u7ea6\u675f\u5728\u7c7b\u578b\u53c2\u6570\u5217\u8868\u4e2d\u663e\u793a\u4e3a\u7c7b\u578b\u53c2\u6570\u7684\u5143\u7c7b\u578b\u3002\n//Stringify\u5bf9s\u7684\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528String\u65b9\u6cd5\uff0c//\u8fd4\u56de\u7ed3\u679c\u3002func Stringify[T Stringer](s[]T)(ret[]string){for_\uff0cv\uff1a=range s{ret=append(ret\uff0cv.String())}return ret}\u3002\n\u5355\u4e2a\u7c7b\u578b\u53c2\u6570T\u540e\u8ddf\u5e94\u7528\u4e8eT\u7684\u7ea6\u675f\uff0c\u5728\u672c\u4f8b\u4e2d\u4e3aStringer\u3002\n\u867d\u7136Stringify\u793a\u4f8b\u53ea\u4f7f\u7528\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\uff0c\u4f46\u51fd\u6570\u53ef\u4ee5\u6709\u591a\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\n//Print2\u6709\u4e24\u4e2a\u7c7b\u578b\u53c2\u6570\u548c\u4e24\u4e2a\u975e\u7c7b\u578b\u53c2\u6570\u3002func Print2[T1\uff0cT2 any](s1[]t1\uff0cs2[]t2){...}\u3002\n//Print2Same\u6709\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u548c\u4e24\u4e2a\u975e\u7c7b\u578b\u53c2\u6570\u3002func Print2Same[T any](S1[]T\uff0cS2[]T){...}\u3002\n\u5728Print2\u4e2d\uff0cS1\u548cS2\u53ef\u4ee5\u662f\u4e0d\u540c\u7c7b\u578b\u7684\u5207\u7247\u3002\u5728Print2Same\u4e2d\uff0cS1\u548cS2\u5fc5\u987b\u662f\u76f8\u540c\u5143\u7d20\u7c7b\u578b\u7684\u5207\u7247\u3002\n\u5c31\u50cf\u6bcf\u4e2a\u666e\u901a\u53c2\u6570\u53ef\u80fd\u6709\u81ea\u5df1\u7684\u7c7b\u578b\u4e00\u6837\uff0c\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u4e5f\u53ef\u80fd\u6709\u81ea\u5df1\u7684\u7ea6\u675f\u3002\n//Stringer\u662f\u9700\u8981\u5b57\u7b26\u4e32\u65b9\u6cd5\u7684\u7c7b\u578b\u7ea6\u675f\u3002//\u5b57\u7b26\u4e32\u65b9\u6cd5\u5e94\u8fd4\u56de\u503c\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\u3002type Stringer\u63a5\u53e3{String()string}//Plusser\u662f\u9700\u8981Plus\u65b9\u6cd5\u7684\u7c7b\u578b\u7ea6\u675f\u3002//Plus\u65b9\u6cd5\u5e94\u5c06\u53c2\u6570\u6dfb\u52a0\u5230\u5185\u90e8//\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7ed3\u679c\u3002type Plusser\u63a5\u53e3{Plus(\u5b57\u7b26\u4e32)\u5b57\u7b26\u4e32}//ConcatTo\u4f7f\u7528\u5b57\u7b26\u4e32\u65b9\u6cd5\u83b7\u53d6\u5143\u7d20\u5207\u7247\uff0c\u4f7f\u7528Plus\u65b9\u6cd5\u83b7\u53d6\u5143\u7d20\u5207\u7247//\u3002\u5207\u7247\u5e94\u5177\u6709\u76f8\u540c//\u6570\u91cf\u7684\u5143\u7d20\u3002\u8fd9\u4f1a\u5c06s\u7684\u6bcf\u4e2a\u5143\u7d20\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c//\u5c06\u5176\u4f20\u9012\u7ed9p\u7684\u76f8\u5e94\u5143\u7d20\u7684Plus\u65b9\u6cd5\uff0c//\u5e76\u8fd4\u56de\u4e00\u6bb5\u7ed3\u679c\u5b57\u7b26\u4e32\u3002func ConcatTo[S Stringer\uff0cP Plusser](s[]S\uff0cp[]P)[]string{r\uff1a=make([]string\uff0clen(S))for i\uff0cv\uff1a=range s{r[i]=p[i].plus(v.String())}return r}\u3002\n\u4e00\u4e2a\u7ea6\u675f\u53ef\u4ee5\u7528\u4e8e\u591a\u4e2a\u7c7b\u578b\u53c2\u6570\uff0c\u5c31\u50cf\u5355\u4e2a\u7c7b\u578b\u53ef\u4ee5\u7528\u4e8e\u591a\u4e2a\u975e\u7c7b\u578b\u51fd\u6570\u53c2\u6570\u4e00\u6837\u3002\u8be5\u7ea6\u675f\u5206\u522b\u5e94\u7528\u4e8e\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u3002\n//Stringify2\u5c06\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u5206\u7247\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c//\u5e76\u8fd4\u56de\u6240\u6709\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u3002func Stringify2[t1\uff0ct2 Stringer](s1[]t1\uff0cs2[]t2)string{r\uff1a=&#34\uff1b&#34\uff1bfor_\uff0cv1\uff1a=range s1{r+=v1.String()}for_\uff0cv2\uff1a=range s2{r+=v2.String()}return r}\u3002\n\u6211\u4eec\u60f3\u8981\u7684\u4e0d\u4ec5\u4ec5\u662f\u6cdb\u578b\u51fd\u6570\uff1a\u6211\u4eec\u8fd8\u60f3\u8981\u6cdb\u578b\u7c7b\u578b\u3002\u6211\u4eec\u5efa\u8bae\u5c06\u7c7b\u578b\u6269\u5c55\u4e3a\u63a5\u53d7\u7c7b\u578b\u53c2\u6570\u3002\n//\u5411\u91cf\u662f\u4efb\u4f55\u5143\u7d20\u7c7b\u578b\u7684\u5207\u7247\u7684\u540d\u79f0\u3002\u7c7b\u578b\u5411\u91cf[T\u4efb\u610f][]T\u3002\n\u7c7b\u578b\u7684\u7c7b\u578b\u53c2\u6570\u5c31\u50cf\u51fd\u6570\u7684\u7c7b\u578b\u53c2\u6570\u4e00\u6837\u3002\n\u82e5\u8981\u4f7f\u7528\u6cdb\u578b\u7c7b\u578b\uff0c\u5fc5\u987b\u63d0\u4f9b\u7c7b\u578b\u53c2\u6570\u3002\u8fd9\u79f0\u4e3a\u5b9e\u4f8b\u5316\u3002\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u7c7b\u578b\u53c2\u6570\u51fa\u73b0\u5728\u65b9\u62ec\u53f7\u4e2d\u3002\u5f53\u6211\u4eec\u901a\u8fc7\u4e3a\u7c7b\u578b\u53c2\u6570\u63d0\u4f9b\u7c7b\u578b\u53c2\u6570\u6765\u5b9e\u4f8b\u5316\u7c7b\u578b\u65f6\uff0c\u6211\u4eec\u4f1a\u751f\u6210\u4e00\u4e2a\u7c7b\u578b\uff0c\u5728\u8be5\u7c7b\u578b\u4e2d\uff0c\u5728\u7c7b\u578b\u5b9a\u4e49\u4e2d\u6bcf\u6b21\u4f7f\u7528\u7c7b\u578b\u53c2\u6570\u90fd\u4f1a\u88ab\u76f8\u5e94\u7684\u7c7b\u578b\u53c2\u6570\u66ff\u6362\u3002\n//v\u662f\u6574\u6570\u503c\u7684\u5411\u91cf\u3002/\u8fd9\u7c7b\u4f3c\u4e8e\u5047\u88c5&#34\uff1b\u5411\u91cf[int]&#34\uff1b\u662f\u6709\u6548\u7684\u6807\u8bc6\u7b26\uff0c//\u5199\u5165//type&#34\uff1b\u5411\u91cf[int]&#34\uff1b[]int//var v&#34\uff1b\u5411\u91cf[int]&#34\uff1b//\u6240\u6709\u5bf9\u5411\u91cf[int]\u7684\u4f7f\u7528\u90fd\u5c06\u5f15\u7528\u76f8\u540c\u7684&#34\uff1b\u5411\u91cf[int]&#34\uff1b\u7c7b\u578b\u3002//var v\u5411\u91cf[int]\n\u6cdb\u578b\u7c7b\u578b\u53ef\u4ee5\u6709\u65b9\u6cd5\u3002\u65b9\u6cd5\u7684\u63a5\u6536\u65b9\u7c7b\u578b\u5fc5\u987b\u58f0\u660e\u4e0e\u63a5\u6536\u65b9\u7c7b\u578b\u5b9a\u4e49\u4e2d\u58f0\u660e\u7684\u7c7b\u578b\u53c2\u6570\u6570\u91cf\u76f8\u540c\u7684\u7c7b\u578b\u53c2\u6570\u3002\u5b83\u4eec\u7684\u58f0\u660e\u6ca1\u6709\u4efb\u4f55\u7ea6\u675f\u3002\n//PUSH\u5c06\u503c\u6dfb\u52a0\u5230\u5411\u91cf\u7684\u672b\u5c3e\u3002func(v*Vector[T])Push(X T){*v=append(*v\uff0cx)}\u3002\n\u65b9\u6cd5\u58f0\u660e\u4e2d\u5217\u51fa\u7684\u7c7b\u578b\u53c2\u6570\u4e0d\u5fc5\u4e0e\u7c7b\u578b\u58f0\u660e\u4e2d\u7684\u7c7b\u578b\u53c2\u6570\u540c\u540d\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u5982\u679c\u65b9\u6cd5\u6ca1\u6709\u4f7f\u7528\u5b83\u4eec\uff0c\u5219\u5b83\u4eec\u53ef\u4ee5\u662f_\u3002\n\u6cdb\u578b\u7c7b\u578b\u53ef\u4ee5\u5728\u901a\u5e38\u53ef\u4ee5\u5f15\u7528\u5176\u81ea\u8eab\u7684\u60c5\u51b5\u4e0b\u5f15\u7528\u81ea\u8eab\uff0c\u4f46\u5f53\u5b83\u8fd9\u6837\u505a\u65f6\uff0c\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u662f\u6309\u76f8\u540c\u987a\u5e8f\u5217\u51fa\u7684\u7c7b\u578b\u53c2\u6570\u3002\u6b64\u9650\u5236\u53ef\u9632\u6b62\u7c7b\u578b\u5b9e\u4f8b\u5316\u7684\u65e0\u9650\u9012\u5f52\u3002\n//List\u662fT\u7c7b\u578b\u7684\u503c\u7684\u94fe\u63a5\u5217\u8868\u3002type list[T any]struct{Next*List[T]//\u5bf9list[T]\u7684\u5f15\u7528\u662fOK ValT}//\u6b64\u7c7b\u578b\u4e3aINVALID\u3002type P[T1\uff0cT2 any]struct{F*P[T2\uff0cT1]//\u65e0\u6548\uff1b\u5fc5\u987b\u4e3a[T1\uff0cT2]}\u3002\n//ListHead\u662f\u94fe\u63a5\u5217\u8868\u7684\u5934\u90e8\u3002type ListHead[T any]struct{head*ListElement[T]}//ListElement\u662f\u94fe\u8868\u4e2d\u5177\u6709\u5934\u90e8\u7684\u5143\u7d20\u3002//\u6bcf\u4e2a\u5143\u7d20\u90fd\u6307\u5411\u5934\u90e8\u3002\u952e\u5165ListElement[T any]struct{Next*ListElement[T]val T//\u5728\u6b64\u5904\u4f7f\u7528ListHead[T]\u5373\u53ef\u3002//ListHead[T]\u5f15\u7528ListElement[T]\u5f15\u7528ListHead[T]\u3002//\u4f7f\u7528ListHead[int]\u4e0d\u592a\u597d\uff0c\u56e0\u4e3aListHead[T]//\u5c06\u95f4\u63a5\u5f15\u7528ListHead[int]\u3002Head*ListHead[T]}\u3002\n(\u6ce8\u610f\uff1a\u968f\u7740\u4eba\u4eec\u5bf9\u5982\u4f55\u7f16\u5199\u4ee3\u7801\u6709\u4e86\u66f4\u591a\u7684\u4e86\u89e3\uff0c\u53ef\u4ee5\u653e\u5bbd\u8fd9\u4e00\u89c4\u5219\uff0c\u5141\u8bb8\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f7f\u7528\u4e0d\u540c\u7c7b\u578b\u7684\u53c2\u6570\u3002)\u3002\n//StringableVector\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u5207\u7247\uff0c\u5176\u4e2d\u7684\u7c7b\u578b//\u5fc5\u987b\u5177\u6709\u5b57\u7b26\u4e32\u65b9\u6cd5\u3002type StringableVector[T Stringer][]Tfunc(s StringableVector[T])string()string{var SB string\u3002i\u7684Builder\uff0cv\uff1a=range s{if I&gt\uff1b0{sb.WriteString(&#34\uff1b\uff0c&#34\uff1b)}//\u8fd9\u91cc\u53ef\u4ee5\u8c03\u7528v.String\uff0c\u56e0\u4e3av\u662fT\u7c7b\u578b\u3002\u7684\u7ea6\u675f\u662fStringer\u3002Sb.WriteString(v.String())}\u8fd4\u56desb.String()}\n\u5c3d\u7ba1\u6cdb\u578b\u7c7b\u578b\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u8be5\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u4f46\u65b9\u6cd5\u672c\u8eab\u53ef\u80fd\u6ca1\u6709\u9644\u52a0\u7684\u7c7b\u578b\u53c2\u6570\u3002\u5728\u5411\u65b9\u6cd5\u6dfb\u52a0\u7c7b\u578b\u53c2\u6570\u975e\u5e38\u6709\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u4eba\u4eec\u5fc5\u987b\u7f16\u5199\u4e00\u4e2a\u9002\u5f53\u53c2\u6570\u5316\u7684\u9876\u7ea7\u51fd\u6570\u3002\n\u6b63\u5982\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u63a5\u53e3\u7c7b\u578b\u4f5c\u4e3a\u7ea6\u675f\u3002\u63a5\u53e3\u7c7b\u578b\u63d0\u4f9b\u4e00\u7ec4\u65b9\u6cd5\uff0c\u5176\u4ed6\u4ec0\u4e48\u90fd\u4e0d\u63d0\u4f9b\u3002\u8fd9\u610f\u5473\u7740\uff0c\u6839\u636e\u6211\u4eec\u5230\u76ee\u524d\u4e3a\u6b62\u6240\u770b\u5230\u7684\uff0c\u6cdb\u578b\u51fd\u6570\u552f\u4e00\u53ef\u4ee5\u5bf9\u7c7b\u578b\u53c2\u6570\u503c\u6267\u884c\u7684\u64cd\u4f5c(\u4efb\u4f55\u7c7b\u578b\u90fd\u5141\u8bb8\u6267\u884c\u7684\u64cd\u4f5c)\u5c31\u662f\u8c03\u7528\u65b9\u6cd5\u3002\n\u7136\u800c\uff0c\u65b9\u6cd5\u8c03\u7528\u5e76\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u6211\u4eec\u60f3\u8981\u8868\u8fbe\u7684\u6240\u6709\u5185\u5bb9\u3002\u8003\u8651\u8fd9\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u5b83\u8fd4\u56de\u503c\u5207\u7247\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u5176\u4e2d\u5047\u8bbe\u5207\u7247\u4e3a\u975e\u7a7a\u3002\n//\u6b64\u51fd\u6570\u662fINVALID.func Minimest[T any](s[]T)T{r\uff1a=s[0]//\u5982\u679c_\uff0cv\uff1a=range s[1\uff1a]{if v&lt\uff1br{//\u65e0\u6548r=v}}\u8fd4\u56der}\u3002\n\u4efb\u4f55\u5408\u7406\u7684\u6cdb\u578b\u5b9e\u73b0\u90fd\u5e94\u8be5\u5141\u8bb8\u60a8\u7f16\u5199\u6b64\u51fd\u6570\u3002\u95ee\u9898\u5728\u4e8e\u8868\u8fbe\u5f0fv&lt\uff1br\u3002\u8fd9\u5047\u8bbeT\u652f\u6301&lt\uff1b\u8fd0\u7b97\u7b26\uff0c\u4f46\u5bf9T\u7684\u7ea6\u675f\u53ea\u662fANY\u3002\u5bf9\u4e8eANY\u7ea6\u675f\uff0c\u6700\u5c0f\u51fd\u6570\u53ea\u80fd\u4f7f\u7528\u5bf9\u6240\u6709\u7c7b\u578b\u90fd\u53ef\u7528\u7684\u64cd\u4f5c\uff0c\u4f46\u5e76\u975e\u6240\u6709\u56f4\u68cb\u7c7b\u578b\u90fd\u652f\u6301&lt\uff1b\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8e&lt\uff1b\u4e0d\u662f\u4e00\u4e2a\u65b9\u6cd5\uff0c\u56e0\u6b64\u6ca1\u6709\u660e\u663e\u7684\u65b9\u6cd5\u6765\u7f16\u5199\u5141\u8bb8&lt\uff1b\u7684\u7ea6\u675f(\u63a5\u53e3\u7c7b\u578b)\u3002\n\u6211\u4eec\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u7f16\u5199\u53ea\u63a5\u53d7\u652f\u6301&lt\uff1b\u7684\u7c7b\u578b\u7684\u7ea6\u675f\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u9664\u4e86\u6211\u4eec\u5c06\u5728\u540e\u9762\u8ba8\u8bba\u7684\u4e24\u4e2a\u4f8b\u5916\u4e4b\u5916\uff0c\u6240\u6709\u7684\u7b97\u6cd5\u3002\n.", "note_en": "We suggest extending the Go language to add optional type parameters to type and function declarations. Type parameters are constrained by interface types. Interface types, when used as type constraints, permit listing the set of types that may be assigned to them. Type inference via a unification algorithm permits omitting type arguments from function calls in many cases. The design is fully backward compatible with Go 1.\n   We then explain the full design starting from scratch, introducing the details as we need them, with simple examples.\n After the design is completely described, we discuss implementation, some issues with the design, and a comparison with other approaches to generics.\n We then present several complete examples of how this design would be used in practice.\n  This section explains the changes suggested by the design draft very briefly. This section is intended for people who are already familiar with how generics would work in a language like Go. These concepts will be explained in detail in the following sections.\n Functions can have an additional type parameter list that uses square brackets but otherwise looks like an ordinary parameter list:  func F[T any](p T) { ... }.\n These type parameters can be used by the regular parameters and in the function body.\n  Each type parameter has a type constraint, just as each ordinary parameter has a type:  func F[T Constraint](p T) { ... }.\n   Interface types used as type constraints can have a list of predeclared types; only type arguments that match one of those types satisfy the constraint.\n In the following sections we work through each of these language changes in great detail. You may prefer to skip ahead to the  examples to see what generic code written to this design draft will look like in practice.\n  There have been many  requests to add additional support for generic programming in Go. There has been extensive discussion on  the issue tracker and on  a living document.\n This design draft suggests extending the Go language to add a form of parametric polymorphism, where the type parameters are bounded not by a declared subtyping relationship (as in some object oriented languages) but by explicitly defined structural constraints.\n This version of the design draft has many similarities to the one presented on July 31, 2019, but contracts have been removed and replaced by interface types, and the syntax has changed.\n There have been several proposals for adding type parameters, which can be found through the links above. Many of the ideas presented here have appeared before. The main new features described here are the syntax and the careful examination of interface types as constraints.\n This design does not support template metaprogramming or any other form of compile time programming.\n As the term  generic is widely used in the Go community, we will use it below as a shorthand to mean a function or type that takes type parameters. Don&#39;t confuse the term generic as used in this design with the same term in other languages like C++, C#, Java, or Rust; they have similarities but are not the same.\n    Generic code is written using abstract data types that we call  type parameters. When running the generic code, the type parameters are replaced by  type arguments.\n Here is a function that prints out each element of a slice, where the element type of the slice, here called  T, is unknown. This is a trivial example of the kind of function we want to permit in order to support generic programming. (Later we&#39;ll also discuss  generic types).\n // Print prints the elements of a slice.// It should be possible to call this with any slice value.func Print(s []T) { // Just an example, not the suggested syntax.\tfor _, v := range s {\t\tfmt.Println(v)\t}}\n With this approach, the first decision to make is: how should the type parameter  T be declared? In a language like Go, we expect every identifier to be declared in some way.\n Here we make a design decision: type parameters are similar to ordinary non-type function parameters, and as such should be listed along with other parameters. However, type parameters are not the same as non-type parameters, so although they appear in the list of parameters we want to distinguish them. That leads to our next design decision: we define an additional optional parameter list describing type parameters.\n This type parameter list appears before the regular parameters. To distinguish the type parameter list from the regular parameter list, the type parameter list uses square brackets rather than parentheses. Just as regular parameters have types, type parameters have meta-types, also known as constraints. We will discuss the details of constraints later; for now, we will just note that  any is a valid constraint, meaning that any type is permitted.\n // Print prints the elements of any slice.// Print has a type parameter T and has a single (non-type)// parameter s which is a slice of that type parameter.func Print[T any](s []T) {\t// same as above}\n This says that within the function  Print the identifier  T is a type parameter, a type that is currently unknown but that will be known when the function is called. The  any means that  T can be any type at all. As seen above, the type parameter may be used as a type when describing the types of the ordinary non-type parameters. It may also be used as a type within the body of the function.\n Unlike regular parameter lists, in type parameter lists names are required for the type parameters. This avoids a syntactic ambiguity, and, as it happens, there is no reason to ever omit the type parameter names.\n Since  Print has a type parameter, any call of  Print must provide a type argument. Later we will see how this type argument can usually be deduced from the non-type argument, by using  type inference. For now, we&#39;ll pass the type argument explicitly. Type arguments are passed much like type parameters are declared: as a separate list of arguments. As with the type parameter list, the list of type arguments uses square brackets.\n // Call Print with a []int.\t// Print has a type parameter T, and we want to pass a []int,\t// so we pass a type argument of int by writing Print[int].\t// The function Print[int] expects a []int as an argument.\tPrint[int]([]int{1, 2, 3})\t// This will print:\t// 1\t// 2\t// 3\n  Let\u2018s make our example slightly more complicated. Let\u2019s turn it into a function that converts a slice of any type into a  []string by calling a  String method on each element.\n // This function is INVALID.func Stringify[T any](s []T) (ret []string) {\tfor _, v := range s {\t\tret = append(ret, v.String()) // INVALID\t}\treturn ret}\n This might seem OK at first glance, but in this example  v has type  T, and  T can be any type. This means that  T need not have a  String method. So the call to  v.String() is invalid.\n Naturally, the same issue arises in other languages that support generic programming. In C++, for example, a generic function (in C++ terms, a function template) can call any method on a value of generic type. That is, in the C++ approach, calling  v.String() is fine. If the function is called with a type argument that does not have a  String method, the error is reported when compiling the call to  v.String with that type argument. These errors can be lengthy, as there may be several layers of generic function calls before the error occurs, all of which must be reported to understand what went wrong.\n The C++ approach would be a poor choice for Go. One reason is the style of the language. In Go we don&#39;t refer to names, such as, in this case,  String, and hope that they exist. Go resolves all names to their declarations when they are seen.\n Another reason is that Go is designed to support programming at scale. We must consider the case in which the generic function definition ( Stringify, above) and the call to the generic function (not shown, but perhaps in some other package) are far apart. In general, all generic code expects the type arguments to meet certain requirements. We refer to these requirements as  constraints (other languages have similar ideas known as type bounds or trait bounds or concepts). In this case, the constraint is pretty obvious: the type has to have a  String() string method. In other cases it may be much less obvious.\n We don\u2018t want to derive the constraints from whatever  Stringify happens to do (in this case, call the  String method). If we did, a minor change to  Stringify might change the constraints. That would mean that a minor change could cause code far away, that calls the function, to unexpectedly break. It\u2019s fine for  Stringify to deliberately change its constraints, and force callers to change. What we want to avoid is  Stringify changing its constraints accidentally.\n This means that the constraints must set limits on both the type arguments passed by the caller and the code in the generic function. The caller may only pass type arguments that satisfy the constraints. The generic function may only use those values in ways that are permitted by the constraints. This is an important rule that we believe should apply to any attempt to define generic programming in Go: generic code can only use operations that its type arguments are known to implement.\n  Before we discuss constraints further, let&#39;s briefly note what happens when the constraint is  any. If a generic function uses the  any constraint for a type parameter, as is the case for the  Print method above, then any type argument is permitted for that parameter. The only operations that the generic function can use with values of that type parameter are those operations that are permitted for values of any type. In the example above, the  Print function declares a variable  v whose type is the type parameter  T, and it passes that variable to a function.\n  define and use composite types that use those types, such as a slice of that type\n It&#39;s possible that future language changes will add other such operations, though none are currently anticipated.\n  Go already has a construct that is close to what we need for a constraint: an interface type. An interface type is a set of methods. The only values that can be assigned to a variable of interface type are those whose types implement the same methods. The only operations that can be done with a value of interface type, other than operations permitted for any type, are to call the methods.\n Calling a generic function with a type argument is similar to assigning to a variable of interface type: the type argument must implement the constraints of the type parameter. Writing a generic function is like using values of interface type: the generic code can only use the operations permitted by the constraint (or operations that are permitted for any type).\n Therefore, in this design, constraints are simply interface types. Implementing a constraint means implementing the interface type. (Later we&#39;ll see how to define constraints for operations other than method calls, such as  binary operators).\n For the  Stringify example, we need an interface type with a  String method that takes no arguments and returns a value of type  string.\n // Stringer is a type constraint that requires the type argument to have// a String method and permits the generic function to call String.// The String method should return a string representation of the value.type Stringer interface {\tString() string}\n (It doesn\u2018t matter for this discussion, but this defines the same interface as the standard library\u2019s  fmt.Stringer type, and real code would likely simply use  fmt.Stringer.)\n  Now that we know that constraints are simply interface types, we can explain what  any means as a constraint. As shown above, the  any constraint permits any type as a type argument and only permits the function to use the operations permitted for any type. The interface type for that is the empty interface:  interface{}. So we could write the  Print example as\n // Print prints the elements of any slice.// Print has a type parameter T and has a single (non-type)// parameter s which is a slice of that type parameter.func Print[T interface{}](s []T) {\t// same as above}\n However, it\u2018s tedious to have to write  interface{} every time you write a generic function that doesn\u2019t impose constraints on its type parameters. So in this design we suggest a type constraint  any that is equivalent to  interface{}. This will be a predeclared name, implicitly declared in the universe block. It will not be valid to use  any as anything other than a type constraint.\n (Note: clearly we could make  any generally available as an alias for  interface{}, or as a new defined type defined as  interface{}. However, we don&#39;t want this design draft, which is about generics, to lead to a possibly significant change to non-generic code. Adding  any as a general purpose name for  interface{} can and should be  discussed separately).\n  For a generic function, a constraint can be thought of as the type of the type argument: a meta-type. As shown above, constraints appear in the type parameter list as the meta-type of a type parameter.\n // Stringify calls the String method on each element of s,// and returns the results.func Stringify[T Stringer](s []T) (ret []string) {\tfor _, v := range s {\t\tret = append(ret, v.String())\t}\treturn ret}\n The single type parameter  T is followed by the constraint that applies to  T, in this case  Stringer.\n  Although the  Stringify example uses only a single type parameter, functions may have multiple type parameters.\n // Print2 has two type parameters and two non-type parameters.func Print2[T1, T2 any](s1 []T1, s2 []T2) { ... }\n  // Print2Same has one type parameter and two non-type parameters.func Print2Same[T any](s1 []T, s2 []T) { ... }\n In  Print2  s1 and  s2 may be slices of different types. In  Print2Same  s1 and  s2 must be slices of the same element type.\n Just as each ordinary parameter may have its own type, each type parameter may have its own constraint.\n // Stringer is a type constraint that requires a String method.// The String method should return a string representation of the value.type Stringer interface {\tString() string}// Plusser is a type constraint that requires a Plus method.// The Plus method is expected to add the argument to an internal// string and return the result.type Plusser interface {\tPlus(string) string}// ConcatTo takes a slice of elements with a String method and a slice// of elements with a Plus method. The slices should have the same// number of elements. This will convert each element of s to a string,// pass it to the Plus method of the corresponding element of p,// and return a slice of the resulting strings.func ConcatTo[S Stringer, P Plusser](s []S, p []P) []string {\tr := make([]string, len(s))\tfor i, v := range s {\t\tr[i] = p[i].Plus(v.String())\t}\treturn r}\n A single constraint can be used for multiple type parameters, just as a single type can be used for multiple non-type function parameters. The constraint applies to each type parameter separately.\n // Stringify2 converts two slices of different types to strings,// and returns the concatenation of all the strings.func Stringify2[T1, T2 Stringer](s1 []T1, s2 []T2) string {\tr := &#34;&#34;\tfor _, v1 := range s1 {\t\tr += v1.String()\t}\tfor _, v2 := range s2 {\t\tr += v2.String()\t}\treturn r}\n  We want more than just generic functions: we also want generic types. We suggest that types be extended to take type parameters.\n // Vector is a name for a slice of any element type.type Vector[T any] []T\n A type\u2018s type parameters are just like a function\u2019s type parameters.\n  To use a generic type, you must supply type arguments. This is called  instantiation. The type arguments appear in square brackets, as usual. When we instantiate a type by supplying type arguments for the type parameters, we produce a type in which each use of a type parameter in the type definition is replaced by the corresponding type argument.\n // v is a Vector of int values.//// This is similar to pretending that &#34;Vector[int]&#34; is a valid identifier,// and writing// type &#34;Vector[int]&#34; []int// var v &#34;Vector[int]&#34;// All uses of Vector[int] will refer to the same &#34;Vector[int]&#34; type.//var v Vector[int]\n Generic types can have methods. The receiver type of a method must declare the same number of type parameters as are declared in the receiver type&#39;s definition. They are declared without any constraint.\n // Push adds a value to the end of a vector.func (v *Vector[T]) Push(x T) { *v = append(*v, x) }\n The type parameters listed in a method declaration need not have the same names as the type parameters in the type declaration. In particular, if they are not used by the method, they can be  _.\n A generic type can refer to itself in cases where a type can ordinarily refer to itself, but when it does so the type arguments must be the type parameters, listed in the same order. This restriction prevents infinite recursion of type instantiation.\n // List is a linked list of values of type T.type List[T any] struct {\tnext *List[T] // this reference to List[T] is OK\tval T}// This type is INVALID.type P[T1, T2 any] struct {\tF *P[T2, T1] // INVALID; must be [T1, T2]}\n  // ListHead is the head of a linked list.type ListHead[T any] struct {\thead *ListElement[T]}// ListElement is an element in a linked list with a head.// Each element points back to the head.type ListElement[T any] struct {\tnext *ListElement[T]\tval T\t// Using ListHead[T] here is OK.\t// ListHead[T] refers to ListElement[T] refers to ListHead[T].\t// Using ListHead[int] would not be OK, as ListHead[T]\t// would have an indirect reference to ListHead[int].\thead *ListHead[T]}\n (Note: with more understanding of how people want to write code, it may be possible to relax this rule to permit some cases that use different type arguments.)\n  // StringableVector is a slice of some type, where the type// must have a String method.type StringableVector[T Stringer] []Tfunc (s StringableVector[T]) String() string {\tvar sb strings.Builder\tfor i, v := range s {\t\tif i &gt; 0 {\t\t\tsb.WriteString(&#34;, &#34;)\t\t}\t\t// It&#39;s OK to call v.String here because v is of type T\t\t// and T&#39;s constraint is Stringer.\t\tsb.WriteString(v.String())\t}\treturn sb.String()}\n  Although methods of a generic type may use the type&#39;s parameters, methods may not themselves have additional type parameters. Where it would be useful to add type arguments to a method, people will have to write a suitably parameterized top-level function.\n   As we\u2018ve seen, we are using interface types as constraints. Interface types provide a set of methods, and nothing else. This means that with what we\u2019ve seen so far, the only thing that generic functions can do with values of type parameters, other than operations that are permitted for any type, is call methods.\n However, method calls are not sufficient for everything we want to express. Consider this simple function that returns the smallest element of a slice of values, where the slice is assumed to be non-empty.\n // This function is INVALID.func Smallest[T any](s []T) T {\tr := s[0] // panic if slice is empty\tfor _, v := range s[1:] {\t\tif v &lt; r { // INVALID\t\t\tr = v\t\t}\t}\treturn r}\n Any reasonable generics implementation should let you write this function. The problem is the expression  v &lt; r. This assumes that  T supports the  &lt; operator, but the constraint on  T is simply  any. With the  any constraint the function  Smallest can only use operations that are available for all types, but not all Go types support  &lt;. Unfortunately, since  &lt; is not a method, there is no obvious way to write a constraint\u2014an interface type\u2014that permits  &lt;.\n We need a way to write a constraint that accepts only types that support  &lt;. In order to do that, we observe that, aside from two exceptions that we will discuss later, all the arithmetic\n......", "posttime": "2020-11-05 20:20:06", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8bbe\u8ba1,\u53c2\u6570,parameters,\u7c7b\u578b", "title": "GO\u7c7b\u578b\u53c2\u6570-\u5403\u6c34\u8bbe\u8ba1", "title_en": "Go Type Parameters \u2013 Draft Design", "transed": 1, "url": "https://go.googlesource.com/proposal/+/refs/heads/master/design/go2draft-type-parameters.md", "via": "", "real_tags": ["\u8bbe\u8ba1", "\u53c2\u6570", "\u7c7b\u578b"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033307, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6234\u897f\u662f\u4e00\u540d\u804c\u4e1a\u5de5\u7a0b\u5e08\uff0c\u4e00\u540d\u6fc0\u60c5\u4f01\u4e1a\u5bb6\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u540d\u5f00\u53d1\u4eba\u5458\u3002\u5979\u76ee\u524d\u662fNush Rewards\u7684\u9996\u5e2d\u6280\u672f\u5b98\u548c\u8054\u5408\u521b\u59cb\u4eba\u3002\u5f53\u5979\u4e0d\u5fd9\u7740\u548c\u56e2\u961f\u4e00\u8d77\u5f00\u53d1\u4ea7\u54c1\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728dessydaskalov.com\u548c@dess_e\u4e0a\u770b\u5230\u5979\u6559\u522b\u4eba\u7f16\u7a0b\u3001\u53c2\u52a0\u6216\u4e3b\u6301\u591a\u4f26\u591a\u79d1\u6280\u6d3b\u52a8\u7684\u8eab\u5f71\u3002\n\u8bb8\u591a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u56de\u60f3\u8d77\u4ed6\u4eec\u6240\u53d7\u7684\u57f9\u8bad\uff0c\u90fd\u4f1a\u8bb0\u5f97\u751f\u6d3b\u5728\u4e00\u4e2a\u975e\u5e38\u5b8c\u7f8e\u7684\u4e16\u754c\u91cc\u7684\u4e50\u8da3\u3002\u6211\u4eec\u88ab\u6559\u5bfc\u8981\u5728\u7406\u60f3\u5316\u7684\u9886\u57df\u4e2d\u89e3\u51b3\u5b9a\u4e49\u660e\u786e\u7684\u95ee\u9898\u3002\n\u7136\u540e\u6211\u4eec\u88ab\u6254\u8fdb\u4e86\u73b0\u5b9e\u4e16\u754c\uff0c\u9762\u5bf9\u7740\u5b83\u6240\u6709\u7684\u590d\u6742\u6027\u548c\u6311\u6218\u3002\u5b83\u662f\u51cc\u4e71\u7684\uff0c\u8fd9\u8ba9\u5b83\u53d8\u5f97\u66f4\u52a0\u4ee4\u4eba\u5174\u594b\u3002\u5f53\u4f60\u80fd\u89e3\u51b3\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u6240\u6709\u95ee\u9898\u65f6\uff0c\u4f60\u5c31\u80fd\u6784\u5efa\u51fa\u771f\u6b63\u5e2e\u52a9\u4eba\u4eec\u7684\u8f6f\u4ef6\u3002\n\u5728\u8fd9\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u8003\u5bdf\u4e00\u4e2a\u8868\u9762\u4e0a\u770b\u8d77\u6765\u5f88\u7b80\u5355\u7684\u95ee\u9898\uff0c\u4f46\u5f53\u73b0\u5b9e\u4e16\u754c\u548c\u771f\u5b9e\u7684\u4eba\u88ab\u6df7\u4e3a\u4e00\u8c08\u65f6\uff0c\u8fd9\u4e2a\u95ee\u9898\u5f88\u5feb\u5c31\u4f1a\u53d8\u5f97\u6251\u6714\u8ff7\u79bb\u3002\n\u6211\u4eec\u5c06\u5171\u540c\u6253\u9020\u4e00\u4e2a\u57fa\u672c\u7684\u8ba1\u6b65\u5668\u3002\u6211\u4eec\u5c06\u4ece\u8ba8\u8bba\u8ba1\u6b65\u5668\u80cc\u540e\u7684\u7406\u8bba\u5f00\u59cb\uff0c\u5e76\u5728\u4ee3\u7801\u4e4b\u5916\u521b\u5efa\u4e00\u4e2a\u6b65\u6570\u8ba1\u7b97\u89e3\u51b3\u65b9\u6848\u3002\u7136\u540e\uff0c\u6211\u4eec\u5c06\u7528\u4ee3\u7801\u5b9e\u73b0\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6700\u540e\uff0c\u6211\u4eec\u5c06\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4e00\u4e2aweb\u5c42\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u53cb\u597d\u7684\u754c\u9762\u4f9b\u7528\u6237\u4f7f\u7528\u3002\n\u79fb\u52a8\u8bbe\u5907\u7684\u5174\u8d77\u5e26\u6765\u4e86\u4e00\u79cd\u8d8b\u52bf\uff0c\u5373\u6536\u96c6\u8d8a\u6765\u8d8a\u591a\u7684\u65e5\u5e38\u751f\u6d3b\u6570\u636e\u3002\u5f88\u591a\u4eba\u6536\u96c6\u7684\u4e00\u79cd\u6570\u636e\u662f\u4ed6\u4eec\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u8d70\u4e86\u591a\u5c11\u6b65\u3002\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u7528\u4e8e\u5065\u5eb7\u8ddf\u8e2a\uff0c\u4f53\u80b2\u8d5b\u4e8b\u7684\u8bad\u7ec3\uff0c\u6216\u8005\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fd9\u4e9b\u75f4\u8ff7\u4e8e\u6536\u96c6\u548c\u5206\u6790\u6570\u636e\u7684\u4eba\u6765\u8bf4\uff0c\u53ea\u662f\u4e3a\u4e86\u597d\u73a9\u3002\u6b65\u6570\u53ef\u4ee5\u4f7f\u7528\u8ba1\u6b65\u5668\u6765\u8ba1\u7b97\uff0c\u8ba1\u6b65\u5668\u901a\u5e38\u4f7f\u7528\u786c\u4ef6\u52a0\u901f\u5ea6\u8ba1\u7684\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u3002\n\u52a0\u901f\u5ea6\u8ba1\u662f\u4e00\u79cd\u786c\u4ef6\uff0c\u53ef\u4ee5\u6d4b\u91cfx\u3001y\u548cz\u65b9\u5411\u7684\u52a0\u901f\u5ea6\u3002\u8bb8\u591a\u4eba\u65e0\u8bba\u8d70\u5230\u54ea\u91cc\u90fd\u968f\u8eab\u643a\u5e26\u52a0\u901f\u5ea6\u8ba1\uff0c\u56e0\u4e3a\u76ee\u524d\u5e02\u573a\u4e0a\u51e0\u4e4e\u6240\u6709\u7684\u667a\u80fd\u624b\u673a\u90fd\u5185\u7f6e\u4e86\u52a0\u901f\u5ea6\u8ba1\u3002\\(x\\)\u3001\\(y\\)\u548c\\(z\\)\u65b9\u5411\u4e0e\u7535\u8bdd\u76f8\u5173\u3002\n\u52a0\u901f\u5ea6\u8ba1\u8fd4\u56de\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4fe1\u53f7\u3002\u4fe1\u53f7\u662f\u4e00\u7ec4\u968f\u65f6\u95f4\u8bb0\u5f55\u7684\u6570\u636e\u70b9\u3002\u4fe1\u53f7\u7684\u6bcf\u4e2a\u5206\u91cf\u90fd\u662f\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u8868\u793a\u5728x\u3001y\u6216z\u65b9\u5411\u4e2d\u7684\u4e00\u4e2a\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\u3002\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u70b9\u90fd\u662f\u7279\u5b9a\u65f6\u95f4\u70b9\u5728\u8be5\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\u3002\u52a0\u901f\u5ea6\u7684\u6d4b\u91cf\u5355\u4f4d\u662f\u91cd\u529b\uff0c\u6216\u79f0g\u30021 g\u7b49\u4e8e9.8(m/s^2)\uff0c\u5373\u5730\u7403\u4e0a\u7531\u4e8e\u91cd\u529b\u800c\u4ea7\u751f\u7684\u5e73\u5747\u52a0\u901f\u5ea6\u3002\n\u52a0\u901f\u8ba1\u7684\u91c7\u6837\u7387\u901a\u5e38\u662f\u53ef\u4ee5\u6821\u51c6\u7684\uff0c\u5b83\u51b3\u5b9a\u4e86\u6bcf\u79d2\u6d4b\u91cf\u7684\u6b21\u6570\u3002\u4f8b\u5982\uff0c\u91c7\u6837\u7387\u4e3a100\u7684\u52a0\u901f\u5ea6\u8ba1\u6bcf\u79d2\u8fd4\u56de\u6bcf\u4e2a(x\\)\u3001\\(y\\)\u548c\\(Z)\u65f6\u95f4\u5e8f\u5217\u7684100\u4e2a\u6570\u636e\u70b9\u3002\n\u5f53\u4e00\u4e2a\u4eba\u8d70\u8def\u65f6\uff0c\u4ed6\u4eec\u6bcf\u8d70\u4e00\u6b65\u90fd\u4f1a\u7565\u5fae\u53cd\u5f39\u3002\u5f53\u4e00\u4e2a\u4eba\u4ece\u4f60\u8eab\u8fb9\u8d70\u5f00\u65f6\uff0c\u53ea\u8981\u6ce8\u610f\u4ed6\u7684\u5934\u9876\u5c31\u884c\u4e86\u3002\u5b83\u4eec\u7684\u5934\u90e8\u3001\u8eaf\u5e72\u548c\u81c0\u90e8\u4ee5\u5e73\u6ed1\u7684\u5f39\u8df3\u8fd0\u52a8\u540c\u6b65\u3002\u867d\u7136\u4eba\u4eec\u4e0d\u4f1a\u5f39\u8df3\u5f88\u8fdc\uff0c\u53ea\u6709\u4e00\u4e24\u5398\u7c73\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u4eba\u884c\u8d70\u52a0\u901f\u4fe1\u53f7\u4e2d\u6700\u6e05\u6670\u3001\u6700\u6052\u5b9a\u3001\u6700\u5bb9\u6613\u8fa8\u8ba4\u7684\u90e8\u5206\u4e4b\u4e00\u3002\n\u4e00\u4e2a\u4eba\u6bcf\u8d70\u4e00\u6b65\uff0c\u90fd\u4f1a\u5728\u5782\u76f4\u65b9\u5411\u4e0a\u4e0a\u4e0b\u8df3\u8dc3\u3002\u5982\u679c\u4f60\u5728\u5730\u7403\u4e0a\u884c\u8d70(\u6216\u5728\u592a\u7a7a\u4e2d\u6f02\u6d6e\u7684\u53e6\u4e00\u4e2a\u5927\u8d28\u91cf\u7403)\uff0c\u53cd\u5f39\u7684\u65b9\u5411\u5f88\u65b9\u4fbf\uff0c\u4e0e\u91cd\u529b\u65b9\u5411\u76f8\u540c\u3002\n\u6211\u4eec\u8981\u7528\u52a0\u901f\u5ea6\u8ba1\u6765\u8ba1\u7b97\u4e0a\u4e0b\u8df3\u52a8\u7684\u6b65\u6570\u3002\u7531\u4e8e\u624b\u673a\u53ef\u4ee5\u5411\u4efb\u4f55\u65b9\u5411\u65cb\u8f6c\uff0c\u6211\u4eec\u5c06\u5229\u7528\u91cd\u529b\u6765\u786e\u5b9a\u5411\u4e0b\u7684\u65b9\u5411\u3002\u8ba1\u6b65\u5668\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u53cd\u5f39\u6b21\u6570\u6765\u8ba1\u7b97\u6b65\u6570\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4e00\u4e2a\u4eba\uff0c\u4ed6\u6216\u5979\u7684\u886c\u886b\u53e3\u888b\u91cc\u653e\u7740\u4e00\u90e8\u88c5\u6709\u52a0\u901f\u5ea6\u8ba1\u7684\u667a\u80fd\u624b\u673a(\u56fe16.2)\u3002\n\u5728\u6211\u4eec\u7684\u5b8c\u7f8e\u4e16\u754c\u4e2d\uff0c\u9636\u8dc3\u53cd\u5f39\u4ea7\u751f\u7684\u52a0\u901f\u5ea6\u5c06\u5728y\u65b9\u5411\u4e0a\u5f62\u6210\u4e00\u4e2a\u5b8c\u7f8e\u7684\u6b63\u5f26\u6ce2\u3002\u6b63\u5f26\u6ce2\u4e2d\u7684\u6bcf\u4e2a\u5cf0\u503c\u6b63\u597d\u662f\u4e00\u4e2a\u53f0\u9636\u3002\u8ba1\u7b97\u6b65\u6570\u53d8\u6210\u4e86\u8ba1\u7b97\u8fd9\u4e9b\u5b8c\u7f8e\u5cf0\u503c\u7684\u95ee\u9898\u3002\n\u554a\uff0c\u5b8c\u7f8e\u4e16\u754c\u7684\u5feb\u4e50\uff0c\u6211\u4eec\u53ea\u6709\u5728\u8fd9\u6837\u7684\u6587\u672c\u4e2d\u624d\u80fd\u4f53\u9a8c\u5230\u3002\u4e0d\u8981\u7740\u6025\uff0c\u4e8b\u60c5\u4f1a\u53d8\u5f97\u66f4\u6df7\u4e71\uff0c\u66f4\u4ee4\u4eba\u5174\u594b\u3002\u8ba9\u6211\u4eec\u4e3a\u6211\u4eec\u7684\u4e16\u754c\u589e\u6dfb\u4e00\u70b9\u73b0\u5b9e\u3002\n\u91cd\u529b\u5f15\u8d77\u5411\u91cd\u529b\u65b9\u5411\u7684\u52a0\u901f\u5ea6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u91cd\u529b\u52a0\u901f\u5ea6\u3002\u8fd9\u79cd\u52a0\u901f\u5ea6\u662f\u552f\u4e00\u7684\uff0c\u56e0\u4e3a\u5b83\u603b\u662f\u5b58\u5728\u7684\uff0c\u5e76\u4e14\u5728\u672c\u7ae0\u4e2d\u662f\u6052\u5b9a\u7684\uff0c\u4e3a9.8\\(m/s^2\\)\u3002\n\u5047\u8bbe\u4e00\u90e8\u667a\u80fd\u624b\u673a\u6b63\u9762\u671d\u4e0a\u8eba\u5728\u4e00\u5f20\u684c\u5b50\u4e0a\u3002\u5728\u8fd9\u4e2a\u65b9\u5411\u4e0a\uff0c\u6211\u4eec\u7684\u5750\u6807\u7cfb\u7edf\u662f\u8fd9\u6837\u7684\uff0c\u8d1f(Z)\u65b9\u5411\u5c31\u662f\u91cd\u529b\u4f5c\u7528\u7684\u65b9\u5411\u3002\u91cd\u529b\u4f1a\u5c06\u6211\u4eec\u7684\u624b\u673a\u62c9\u5411\u8d1f(Z)\u65b9\u5411\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u52a0\u901f\u5ea6\u8ba1\uff0c\u5373\u4f7f\u5b8c\u5168\u9759\u6b62\uff0c\u4e5f\u4f1a\u8bb0\u5f55\u52309.8(m/s^2)\u7684\u8d1f(Z)\u65b9\u5411\u7684\u52a0\u901f\u5ea6\u3002\u6211\u4eec\u624b\u673a\u5728\u8fd9\u4e2a\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\u5982\u56fe16.3\u6240\u793a\u3002\n\u8bf7\u6ce8\u610f\uff0cx(T)\u548cy(T)\u57280\u5904\u4fdd\u6301\u4e0d\u53d8\uff0c\u800cz(T)\u5728-1g\u5904\u4fdd\u6301\u4e0d\u53d8\u3002\u6211\u4eec\u7684\u52a0\u901f\u5ea6\u8ba1\u8bb0\u5f55\u6240\u6709\u52a0\u901f\u5ea6\uff0c\u5305\u62ec\u91cd\u529b\u52a0\u901f\u5ea6\u3002\n\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u90fd\u6d4b\u91cf\u8be5\u65b9\u5411\u7684\u603b\u52a0\u901f\u5ea6\u3002\u603b\u52a0\u901f\u5ea6\u662f\u7528\u6237\u52a0\u901f\u5ea6\u548c\u91cd\u529b\u52a0\u901f\u5ea6\u4e4b\u548c\u3002\n\u7528\u6237\u52a0\u901f\u5ea6\u662f\u8bbe\u5907\u56e0\u7528\u6237\u79fb\u52a8\u800c\u4ea7\u751f\u7684\u52a0\u901f\u5ea6\uff0c\u5f53\u624b\u673a\u5b8c\u5168\u9759\u6b62\u65f6\uff0c\u7528\u6237\u52a0\u901f\u5ea6\u4e3a0\u3002\u7136\u800c\uff0c\u5f53\u7528\u6237\u968f\u7740\u8bbe\u5907\u79fb\u52a8\u65f6\uff0c\u7528\u6237\u7684\u52a0\u901f\u5ea6\u5f88\u5c11\u662f\u6052\u5b9a\u7684\uff0c\u56e0\u4e3a\u4eba\u5f88\u96be\u4ee5\u6052\u5b9a\u7684\u52a0\u901f\u5ea6\u79fb\u52a8\u3002\n\u4e3a\u4e86\u8ba1\u7b97\u6b65\u6570\uff0c\u6211\u4eec\u5bf9\u7528\u6237\u5728\u91cd\u529b\u65b9\u5411\u4e0a\u4ea7\u751f\u7684\u5f39\u8df3\u5f88\u611f\u5174\u8da3\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6709\u5174\u8da3\u5c06\u63cf\u8ff0\u7528\u6237\u91cd\u529b\u65b9\u5411\u52a0\u901f\u5ea6\u7684\u4e00\u7ef4\u65f6\u95f4\u5e8f\u5217\u4ece\u6211\u4eec\u7684\u4e09\u7ef4\u52a0\u901f\u5ea6\u4fe1\u53f7\u4e2d\u5206\u79bb\u51fa\u6765(\u56fe16.4)\u3002\n\u5728\u6211\u4eec\u7684\u7b80\u5355\u4f8b\u5b50\u4e2d\uff0c\u91cd\u529b\u52a0\u901f\u5ea6\u5728x(T)\u548cz(T)\u4e2d\u4e3a0\uff0c\u5728y(T)\u4e2d\u4e3a9.8(m/s^2)\u5e38\u6570\u3002\u56e0\u6b64\uff0c\u5728\u6211\u4eec\u7684\u603b\u52a0\u901f\u5ea6\u56fe\u4e2d\uff0cx(T)\u548cz(T)\u57280\u9644\u8fd1\u6ce2\u52a8\uff0c\u800cy(T)\u5728-1g\u9644\u8fd1\u6ce2\u52a8\u3002\u5728\u6211\u4eec\u7684\u7528\u6237\u52a0\u901f\u56fe\u4e2d\uff0c\u6211\u4eec\u6ce8\u610f\u5230-\u56e0\u4e3a\u6211\u4eec\u53bb\u6389\u4e86\u91cd\u529b\u52a0\u901f\u5ea6-\u6240\u6709\u4e09\u4e2a\u65f6\u95f4\u5e8f\u5217\u90fd\u57280\u9644\u8fd1\u6ce2\u52a8\u3002\u8bf7\u6ce8\u610f\\(y_{u}(T)\\)\u4e2d\u7684\u660e\u663e\u5cf0\u503c\u3002\u8fd9\u4e9b\u90fd\u662f\u7531\u4e8e\u53f0\u9636\u53cd\u5f39\u9020\u6210\u7684\uff01\u5728\u6700\u540e\u4e00\u5f20\u56fe\u4e2d\uff0c\u91cd\u529b\u52a0\u901f\u5ea6y_{g}(T)\u5728-1g\u5904\u4e0d\u53d8\uff0cx_{g}(T)\u548cz_{g}(T)\u57280\u5904\u4e0d\u53d8\u3002\n\u56e0\u6b64\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u611f\u5174\u8da3\u7684\u91cd\u529b\u65f6\u95f4\u5e8f\u5217\u65b9\u5411\u4e0a\u7684\u4e00\u7ef4\u7528\u6237\u52a0\u901f\u5ea6\u662f\\(y_{u}(T)\\)\u3002\u867d\u7136(y_{u}(T)\\)\u4e0d\u50cf\u6211\u4eec\u7406\u60f3\u7684\u6b63\u5f26\u6ce2\u90a3\u6837\u5e73\u6ed1\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u8bc6\u522b\u5cf0\u503c\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u5cf0\u503c\u6765\u8ba1\u7b97\u6b65\u6570\u3002\u5230\u73b0\u5728\u4e3a\u6b62\u8fd8\u597d\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u4e3a\u6211\u4eec\u7684\u4e16\u754c\u589e\u6dfb\u66f4\u591a\u7684\u73b0\u5b9e\u3002\n\u5982\u679c\u4e00\u4e2a\u4eba\u628a\u624b\u673a\u88c5\u5728\u5305\u91cc\u625b\u5728\u80a9\u4e0a\uff0c\u800c\u624b\u673a\u653e\u5728\u4e00\u4e2a\u66f4\u6447\u6447\u6643\u6643\u7684\u4f4d\u7f6e\uff0c\u90a3\u8be5\u600e\u4e48\u529e\uff1f\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5982\u679c\u624b\u673a\u5728\u884c\u8d70\u8fc7\u7a0b\u4e2d\u5728\u5305\u4e2d\u65cb\u8f6c\uff0c\u5982\u56fe16.5\u6240\u793a\uff1f\n\u54ce\u5440\u3002\u73b0\u5728\u6211\u4eec\u7684\u6240\u6709\u4e09\u4e2a\u5206\u91cf\u90fd\u6709\u4e00\u4e2a\u975e\u96f6\u7684\u91cd\u529b\u52a0\u901f\u5ea6\uff0c\u6240\u4ee5\u7528\u6237\u5728\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\u73b0\u5728\u88ab\u5206\u5272\u5230\u6240\u6709\u4e09\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e2d\u3002\u8981\u786e\u5b9a\u7528\u6237\u5728\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\uff0c\u6211\u4eec\u9996\u5148\u5fc5\u987b\u786e\u5b9a\u91cd\u529b\u5728\u54ea\u4e2a\u65b9\u5411\u4e0a\u8d77\u4f5c\u7528\u3002\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u4e09\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u4e2d\u7684\u603b\u52a0\u901f\u5ea6\u5206\u4e3a\u7528\u6237\u52a0\u901f\u65f6\u95f4\u5e8f\u5217\u548c\u91cd\u529b\u52a0\u901f\u65f6\u95f4\u5e8f\u5217(\u56fe16.6)\u3002\n\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5206\u91cf\u4e2d\u5206\u79bb\u51fa\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u7528\u6237\u52a0\u901f\u5ea6\u90e8\u5206\uff0c\u4ece\u800c\u53ea\u5f97\u5230\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u7528\u6237\u52a0\u901f\u5ea6\u65f6\u95f4\u5e8f\u5217\u3002\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u540d\u4e3a\u8fc7\u6ee4\u5668\u7684\u5de5\u5177\u5c06\u603b\u52a0\u901f\u65f6\u95f4\u5e8f\u5217\u5212\u5206\u4e3a\u7528\u6237\u52a0\u901f\u65f6\u95f4\u5e8f\u5217\u548c\u91cd\u529b\u52a0\u901f\u65f6\u95f4\u5e8f\u5217\u3002\n\u6ee4\u6ce2\u5668\u662f\u5728\u4fe1\u53f7\u5904\u7406\u4e2d\u4f7f\u7528\u7684\u4e00\u79cd\u5de5\u5177\uff0c\u7528\u4e8e\u4ece\u4fe1\u53f7\u4e2d\u53bb\u9664\u4e0d\u9700\u8981\u7684\u5206\u91cf\u3002\n\u4f4e\u901a\u6ee4\u6ce2\u5668\u5141\u8bb8\u4f4e\u9891\u4fe1\u53f7\u901a\u8fc7\uff0c\u540c\u65f6\u8870\u51cf\u9ad8\u4e8e\u8bbe\u5b9a\u9608\u503c\u7684\u4fe1\u53f7\u3002\u76f8\u53cd\uff0c\u9ad8\u901a\u6ee4\u6ce2\u5668\u5141\u8bb8\u9ad8\u9891\u4fe1\u53f7\u901a\u8fc7\uff0c\u540c\u65f6\u5c06\u4fe1\u53f7\u8870\u51cf\u5230\u8bbe\u5b9a\u9608\u503c\u4ee5\u4e0b\u3002\u4ee5\u97f3\u4e50\u4e3a\u7c7b\u6bd4\uff0c\u4f4e\u901a\u6ee4\u6ce2\u5668\u53ef\u4ee5\u6d88\u9664\u9ad8\u97f3\uff0c\u9ad8\u901a\u6ee4\u6ce2\u5668\u53ef\u4ee5\u6d88\u9664\u4f4e\u97f3\u3002\n\u5728\u6211\u4eec\u7684\u60c5\u51b5\u4e0b\uff0c\u4ee5\u8d6b\u5179\u4e3a\u5355\u4f4d\u6d4b\u91cf\u7684\u9891\u7387\u8868\u793a\u52a0\u901f\u5ea6\u53d8\u5316\u7684\u901f\u5ea6\u6709\u591a\u5feb\u3002\u6052\u5b9a\u52a0\u901f\u5ea6\u7684\u9891\u7387\u4e3a0 Hz\uff0c\u800c\u975e\u6052\u5b9a\u52a0\u901f\u5ea6\u7684\u9891\u7387\u4e3a\u975e\u96f6\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u6052\u5b9a\u91cd\u529b\u52a0\u901f\u5ea6\u662f0 Hz\u4fe1\u53f7\uff0c\u800c\u7528\u6237\u52a0\u901f\u5ea6\u4e0d\u662f\u3002\n\u5bf9\u4e8e\u6bcf\u4e2a\u5206\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u4f4e\u901a\u6ee4\u6ce2\u5668\u4f20\u9012\u603b\u52a0\u901f\u5ea6\uff0c\u6211\u4eec\u5c06\u53ea\u5f97\u5230\u91cd\u529b\u52a0\u901f\u5ea6\u65f6\u95f4\u5e8f\u5217\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u4ece\u603b\u52a0\u901f\u5ea6\u4e2d\u51cf\u53bb\u91cd\u529b\u52a0\u901f\u5ea6\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7528\u6237\u52a0\u901f\u65f6\u95f4\u5e8f\u5217(\u56fe16.7)\u3002\n\u8fc7\u6ee4\u5668\u6709\u5f88\u591a\u79cd\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u7684\u4e00\u79cd\u53eb\u505a\u65e0\u9650\u8109\u51b2\u54cd\u5e94(IIR)\u6ee4\u6ce2\u5668\u3002\u6211\u4eec\u9009\u62e9\u4e86IIR\u8fc7\u6ee4\u5668\uff0c\u56e0\u4e3a\u5b83\u5f00\u9500\u4f4e\uff0c\u6613\u4e8e\u5b9e\u73b0\u3002\u6211\u4eec\u9009\u62e9\u7684IIR\u8fc7\u6ee4\u5668\u4f7f\u7528\u4ee5\u4e0b\u516c\u5f0f\u5b9e\u73b0\uff1a\n\u6570\u5b57\u6ee4\u6ce2\u5668\u7684\u8bbe\u8ba1\u8d85\u51fa\u4e86\u672c\u7ae0\u7684\u8303\u56f4\uff0c\u4f46\u6709\u5fc5\u8981\u8fdb\u884c\u975e\u5e38\u7b80\u77ed\u7684\u9884\u544a\u6027\u8ba8\u8bba\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u8fc7\u5145\u5206\u7814\u7a76\u3001\u5f15\u4eba\u5165\u80dc\u7684\u8bdd\u9898\uff0c\u6709\u7740\u65e0\u6570\u7684\u5b9e\u9645\u5e94\u7528\u3002\u53ef\u4ee5\u8bbe\u8ba1\u6570\u5b57\u6ee4\u6ce2\u5668\u6765\u6d88\u9664\u6240\u9700\u7684\u4efb\u4f55\u9891\u7387\u6216\u9891\u7387\u8303\u56f4\u3002\u516c\u5f0f\u4e2d\u7684\\(\\\u03b1\\)\u548c\\(\\\u03b2\\)\u503c\u662f\u6839\u636e\u622a\u6b62\u9891\u7387\u548c\u6211\u4eec\u5e0c\u671b\u4fdd\u7559\u7684\u9891\u7387\u8303\u56f4\u8bbe\u7f6e\u7684\u7cfb\u6570\u3002\n\u6211\u4eec\u60f3\u8981\u6d88\u9664\u9664\u6052\u5b9a\u91cd\u529b\u52a0\u901f\u5ea6\u4e4b\u5916\u7684\u6240\u6709\u9891\u7387\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4e86\u8870\u51cf\u9891\u7387\u9ad8\u4e8e0.2\u8d6b\u5179\u7684\u7cfb\u6570\u3002\u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u8bbe\u7f6e\u7684\u9608\u503c\u7565\u9ad8\u4e8e0\u8d6b\u5179\u3002\u867d\u7136\u91cd\u529b\u786e\u5b9e\u4ea7\u751f\u4e86\u771f\u6b63\u76840\u8d6b\u5179\u52a0\u901f\u5ea6\uff0c\u4f46\u6211\u4eec\u771f\u5b9e\u7684\u3001\u4e0d\u5b8c\u7f8e\u7684\u4e16\u754c\u6709\u771f\u5b9e\u7684\u3001\u4e0d\u5b8c\u7f8e\u7684\u52a0\u901f\u5ea6\u8ba1\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u6d4b\u91cf\u4e2d\u5141\u8bb8\u6709\u8f7b\u5fae\u7684\u8bef\u5dee\u3002\n\u6211\u4eec\u5c06\u628a\u91cd\u529b\u52a0\u901f\u5ea6\u7684\u524d\u4e24\u4e2a\u503c\u521d\u59cb\u5316\u4e3a0\uff0c\u8fd9\u6837\u516c\u5f0f\u5c31\u6709\u4e86\u521d\u59cb\u503c\u3002\n\\(x_{g}(T)\\)\u548c\\(z_{g}(T)\\)\u57280\u9644\u8fd1\u5f98\u5f8a\uff0c\u800c\\(y_{g}(T)\\)\u5f88\u5feb\u4e0b\u964d\u5230\\(-1g)\u3002\\(y_{g}(T)\\)\u4e2d\u7684\u521d\u59cb0\u503c\u6765\u81ea\u516c\u5f0f\u7684\u521d\u59cb\u5316\u3002\n\\[x_{u}(T)=x(T)-x_{g}(T)\\]\\[y_{u}(T)=y(T)-y_{g}(T)\\]\\[z_{u}(T)=z(T)-z_{g}(T)\\]\u3002\n\u7ed3\u679c\u662f\u5982\u56fe16.9\u6240\u793a\u7684\u65f6\u95f4\u5e8f\u5217\u3002\u6211\u4eec\u5df2\u7ecf\u6210\u529f\u5730\u5c06\u603b\u52a0\u901f\u5206\u4e3a\u7528\u6237\u52a0\u901f\u548c\u91cd\u529b\u52a0\u901f\uff01\n\\(x_{u}(T)\\)\u3001\\(y_{u}(T)\\)\u548c\\(z_{u}(T)\\)\u5305\u62ec\u7528\u6237\u7684\u6240\u6709\u79fb\u52a8\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u91cd\u529b\u65b9\u5411\u7684\u79fb\u52a8\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u6700\u7ec8\u5f97\u5230\u4e00\u7ef4\u65f6\u95f4\u5e8f\u5217\uff0c\u8868\u793a\u7528\u6237\u5728\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\u3002\u8fd9\u5c06\u5305\u62ec\u6bcf\u4e2a\u65b9\u5411\u7684\u90e8\u5206\u7528\u6237\u52a0\u901f\u3002\n\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002\u9996\u5148\u662f\u4e00\u4e9b\u7ebf\u6027\u4ee3\u6570\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u522b\u6025\u7740\u6458\u4e0b\u6570\u5b66\u5bb6\u7684\u5e3d\u5b50\uff01\n\u5728\u4f7f\u7528\u5750\u6807\u65f6\uff0c\u5728\u4ecb\u7ecd\u70b9\u79ef\u4e4b\u524d\uff0c\u60a8\u4e0d\u4f1a\u8d70\u5f97\u5f88\u8fdc\uff0c\u70b9\u79ef\u662f\u6bd4\u8f83\\(x\\)\u3001\\(y\\)\u548c\\(Z)\u5750\u6807\u7684\u5927\u5c0f\u548c\u65b9\u5411\u65f6\u4f7f\u7528\u7684\u57fa\u672c\u5de5\u5177\u4e4b\u4e00\u3002\n\u70b9\u79ef\u5c06\u6211\u4eec\u4ece3\u7ef4\u7a7a\u95f4\u5e26\u52301\u7ef4\u7a7a\u95f4(\u56fe16.10)\u3002\u5f53\u6211\u4eec\u628a\u7528\u6237\u52a0\u901f\u5ea6\u548c\u91cd\u529b\u52a0\u901f\u5ea6\u8fd9\u4e24\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u70b9\u79ef\u76f8\u4e58\u65f6\uff0c\u8fd9\u4e24\u4e2a\u65f6\u95f4\u5e8f\u5217\u90fd\u57283\u7ef4\u7a7a\u95f4\u4e2d\uff0c\u6211\u4eec\u4f1a\u5f97\u52301\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u8868\u793a\u7528\u6237\u52a0\u901f\u5ea6\u5728\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u90a3\u90e8\u5206\u3002\u6211\u4eec\u4f1a\u968f\u610f\u5730\u79f0\u8fd9\u4e2a\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u4e3a\\(a(T)\\)\uff0c\u56e0\u4e3a\uff0c\u597d\u5427\uff0c\u6bcf\u4e2a\u91cd\u8981\u7684\u65f6\u95f4\u5e8f\u5217\u90fd\u5e94\u8be5\u6709\u4e00\u4e2a\u540d\u5b57\u3002\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u516c\u5f0f\\(a(T)=x_{u}(T)x_{g}(T)+y_{u}(T)y_{g}(T)+z_{u}(T)z_{g}(T)\\)\u5b9e\u73b0\u524d\u9762\u793a\u4f8b\u7684\u70b9\u79ef\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u7ef4\u7a7a\u95f4\u4e2d\u7684\\(a(T)\\)(\u56fe16.11)\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u89c2\u5730\u627e\u51fa\u6b65\u9aa4\u5728\\(a(T)\\)\u4e2d\u7684\u4f4d\u7f6e\u3002\u8fd9\u4e2aDot\u4ea7\u54c1\u975e\u5e38\u5f3a\u5927\uff0c\u4f46\u5374\u975e\u5e38\u7b80\u5355\u3002\n\u6211\u4eec\u770b\u5230\uff0c\u5f53\u6211\u4eec\u9762\u5bf9\u73b0\u5b9e\u4e16\u754c\u548c\u73b0\u5b9e\u4eba\u7684\u6311\u6218\u65f6\uff0c\u6211\u4eec\u770b\u4f3c\u7b80\u5355\u7684\u95ee\u9898\u5f88\u5feb\u5c31\u53d8\u5f97\u590d\u6742\u8d77\u6765\u3002\u7136\u800c\uff0c\u6211\u4eec\u8d8a\u6765\u8d8a\u63a5\u8fd1\u8ba1\u7b97\u6b65\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230(a(T))\u5f00\u59cb\u4e0e\u6211\u4eec\u7406\u60f3\u7684\u6b63\u5f26\u6ce2\u76f8\u4f3c\u3002\u4f46\u662f\uff0c\u53ea\u6709\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\uff0c\u624d\u5f00\u59cb\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\u6211\u4eec\u4ecd\u7136\u9700\u8981\u4f7f\u6211\u4eec\u6df7\u4e71\u7684(a(T)\\)\u65f6\u95f4\u5e8f\u5217\u66f4\u52a0\u5e73\u6ed1\u3002\u5728\u5f53\u524d\u72b6\u6001\u4e0b\uff0c\\(a(T)\\)\u5b58\u5728\u56db\u4e2a\u4e3b\u8981\u95ee\u9898(\u56fe16.12)\u3002\u8ba9\u6211\u4eec\u9010\u4e00\u68c0\u67e5\u4e00\u4e0b\u3002\n(a(T)\\)\u975e\u5e38\u7d27\u5f20\uff0c\u56e0\u4e3a\u624b\u673a\u6bcf\u8d70\u4e00\u6b65\u90fd\u4f1a\u6296\u52a8\uff0c\u7ed9\u6211\u4eec\u7684\u65f6\u95f4\u5e8f\u5217\u589e\u52a0\u4e86\u4e00\u4e2a\u9ad8\u9891\u6210\u5206\u3002(a(T))(a(T))\u975e\u5e38\u7d27\u5f20\uff0c\u56e0\u4e3a\u624b\u673a\u6bcf\u8d70\u4e00\u6b65\u90fd\u4f1a\u6296\u52a8\uff0c\u8fd9\u4f1a\u7ed9\u6211\u4eec\u7684\u65f6\u95f4\u5e8f\u5217\u589e\u52a0\u4e00\u4e2a\u9ad8\u9891\u6210\u5206\u3002\u8fd9\u79cd\u8df3\u8dc3\u79f0\u4e3a\u566a\u97f3\u3002\u901a\u8fc7\u7814\u7a76\u5927\u91cf\u7684\u6570\u636e\u96c6\uff0c\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u6b65\u5e45\u52a0\u901f\u5ea6\u6700\u5927\u4e3a5\u8d6b\u5179\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4f4e\u901aIIR\u6ee4\u6ce2\u5668\u6765\u53bb\u9664\u566a\u58f0\uff0c\u9009\u62e9\\(\\\u03b1\\)\u548c\\(\\\u03b2\\)\u6765\u8870\u51cf\u6240\u6709\u9ad8\u4e8e5 Hz\u7684\u4fe1\u53f7\u3002\n\u5f53\u91c7\u6837\u7387\u4e3a100\u65f6\uff0c(a(T))\u663e\u793a\u7684\u6162\u5cf0\u8de8\u5ea6\u4e3a1.5\u79d2\uff0c\u592a\u6162\u800c\u4e0d\u662f\u4e00\u4e2a\u53f0\u9636\u3002\u5728\u7814\u7a76\u4e86\u8db3\u591f\u591a\u7684\u6570\u636e\u6837\u672c\u540e\uff0c\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\uff0c\u6211\u4eec\u80fd\u91c7\u53d6\u7684\u6700\u6162\u7684\u6b65\u9aa4\u662f\u57281\u8d6b\u5179\u7684\u9891\u7387\u4e0a\u3002\u8f83\u6162\u7684\u52a0\u901f\u662f\u7531\u4e8e\u4f4e\u9891\u5206\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u4f7f\u7528\u9ad8\u901aIIR\u6ee4\u6ce2\u5668\u5c06\u5176\u53bb\u9664\uff0c\u8bbe\u7f6e\\(\\\u03b1\\)\u548c\\(\\\u03b2\\)\u4ee5\u6d88\u9664\u4f4e\u4e8e1 Hz\u7684\u6240\u6709\u4fe1\u53f7\u3002\n\u5f53\u4e00\u4e2a\u4eba\u5728\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u6216\u6253\u7535\u8bdd\u65f6\uff0c\u52a0\u901f\u5ea6\u8ba1\u4f1a\u8bb0\u5f55\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u5fae\u5c0f\u79fb\u52a8\uff0c\u5728\u6211\u4eec\u7684\u65f6\u95f4\u5e8f\u5217\u4e2d\u663e\u793a\u4e3a\u77ed\u5cf0\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e00\u4e2a\u6700\u5c0f\u9608\u503c\u6765\u6d88\u9664\u8fd9\u4e9b\u77ed\u5cf0\u503c\uff0c\u5e76\u5728\u6bcf\u6b21(a(T))\u5728\u6b63\u65b9\u5411\u4e0a\u8d85\u8fc7\u8be5\u9608\u503c\u65f6\u8ba1\u6570\u4e00\u6b65\u3002\n\u6211\u4eec\u7684\u8ba1\u6b65\u5668\u5e94\u8be5\u53ef\u4ee5\u5bb9\u7eb3\u8bb8\u591a\u4e0d\u540c\u8d70\u8def\u7684\u4eba\uff0c\u6240\u4ee5\u6211\u4eec\u6839\u636e\u5927\u91cf\u7684\u4eba\u548c\u8d70\u8def\u7684\u6837\u672c\u8bbe\u7f6e\u4e86\u6700\u5c0f\u548c\u6700\u5927\u6b65\u9891\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6709\u65f6\u53ef\u80fd\u4f1a\u8fc7\u6ee4\u5f97\u592a\u591a\u6216\u592a\u5c11\u3002\u867d\u7136\u6211\u4eec\u901a\u5e38\u4f1a\u6709\u76f8\u5f53\u5e73\u5766\u7684\u5c71\u5cf0\uff0c\u4f46\u5076\u5c14\u4e5f\u4f1a\u51fa\u73b0\u6bd4\u8f83\u5d0e\u5c96\u7684\u5c71\u5cf0\u3002\u56fe16.12\u653e\u5927\u4e86\u4e00\u4e2a\u8fd9\u6837\u7684\u5c71\u5cf0\u3002\n\u5f53\u6211\u4eec\u7684\u95e8\u69db\u5904\u51fa\u73b0\u98a0\u7c38\u65f6\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u9519\u8bef\u5730\u5c06\u592a\u591a\u7684\u6b65\u6570\u8ba1\u7b97\u4e3a\u4e00\u4e2a\u9ad8\u5cf0\u3002\u6211\u4eec\u5c06\u4f7f\u7528\u4e00\u79cd\u53eb\u505a\u6ede\u540e\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6ede\u540e\u6307\u7684\u662f\u4ea7\u51fa\u5bf9\u8fc7\u53bb\u6295\u5165\u7684\u4f9d\u8d56\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u6b63\u65b9\u5411\u4e0a\u7684\u9608\u503c\u4ea4\u53c9\uff0c\u4ee5\u53ca\u8d1f\u65b9\u5411\u4e0a\u76840\u4e2a\u4ea4\u53c9\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ea\u8ba1\u7b97\u57280\u8de8\u8d8a\u9608\u503c\u4e4b\u540e\u53d1\u751f\u7684\u6b65\u6570\uff0c\u786e\u4fdd\u6bcf\u4e00\u6b65\u53ea\u8ba1\u6570\u4e00\u6b21\u3002\n\u5728\u8003\u8651\u5230\u8fd9\u56db\u79cd\u60c5\u51b5\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u8bbe\u6cd5\u4f7f\u6df7\u4e71\u7684\\(a(T)\\)\u76f8\u5f53\u63a5\u8fd1\u6211\u4eec\u7406\u60f3\u7684\u6b63\u5f26\u6ce2(\u56fe16.13)\uff0c\u4f7f\u6211\u4eec\u80fd\u591f\u8ba1\u7b97\u6b65\u6570\u3002\n\u4e4d\u4e00\u770b\uff0c\u8fd9\u4e2a\u95ee\u9898\u770b\u8d77\u6765\u5f88\u7b80\u5355\u3002\u7136\u800c\uff0c\u73b0\u5b9e\u4e16\u754c\u548c\u73b0\u5b9e\u4e2d\u7684\u4eba\u4eec\u5411\u6211\u4eec\u6254\u4e86\u51e0\u4e2a\u66f2\u7ebf\u7403\u3002\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b\u6211\u4eec\u662f\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\uff1a\n\u6211\u4eec\u4f7f\u7528\u4f4e\u901a\u6ee4\u6ce2\u5668\u5c06\u603b\u52a0\u901f\u5ea6\u5206\u89e3\u4e3a\u7528\u6237\u52a0\u901f\u5ea6\u548c\u91cd\u529b\u52a0\u901f\u5ea6\uff0c\u5206\u522b\u4e3a((x_{u}(T)\uff0cy_{u}(T)\uff0cz_{u}(T))\u548c\\((x_{g}(T)\uff0cy_{g}(T)\uff0cz_{g}(T)\u3002\n\u6211\u4eec\u53d6((x_{u}(T)\uff0cy_{u}(T)\uff0cz_{u}(T))\u548c\\(x_{g}(T)\uff0cy_{g}(T)\uff0cz_{g}(T))\u7684\u70b9\u79ef\u5f97\u5230\u7528\u6237\u5728\u91cd\u529b\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\uff0c\\(a(T)\\)\u3002\n\u6211\u4eec\u518d\u6b21\u4f7f\u7528\u4f4e\u901a\u6ee4\u6ce2\u5668\u53bb\u9664\u4e86(a(T))\u7684\u9ad8\u9891\u5206\u91cf\uff0c\u53bb\u9664\u4e86\u566a\u58f0\u3002\n\u6211\u4eec\u7528\u9ad8\u901a\u6ee4\u6ce2\u5668\u6d88\u9664\u4e86(a(T))\u7684\u4f4e\u9891\u6210\u5206\uff0c\u53bb\u6389\u4e86\u6162\u5cf0\u3002\n\u4f5c\u4e3a\u57f9\u8bad\u6216\u5b66\u672f\u73af\u5883\u4e2d\u7684\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\uff0c\u6211\u4eec\u53ef\u80fd\u5df2\u7ecf\u5f97\u5230\u4e86\u4e00\u4e2a\u5b8c\u7f8e\u7684\u4fe1\u53f7\uff0c\u5e76\u88ab\u8981\u6c42\u7f16\u5199\u4ee3\u7801\u6765\u8ba1\u7b97\u8be5\u4fe1\u53f7\u4e2d\u7684\u6b65\u9aa4\u3002\u867d\u7136\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u7f16\u7801\u6311\u6218\uff0c\u4f46\u5b83\u4e0d\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u73b0\u5b9e\u751f\u6d3b\u4e2d\u5e94\u7528\u7684\u4e1c\u897f\u3002\u6211\u4eec\u770b\u5230\uff0c\u5728\u73b0\u5b9e\u4e2d\uff0c\u968f\u7740\u91cd\u529b\u548c\u4eba\u7684\u52a0\u5165\uff0c\u95ee\u9898\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u3002\u6211\u4eec\u4f7f\u7528\u6570\u5b66\u5de5\u5177\u6765\u89e3\u51b3\u590d\u6742\u6027\uff0c\u5e76\u80fd\u591f\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u95ee\u9898\u3002\u662f\u65f6\u5019\u628a\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u8f6c\u6362\u6210\u4ee3\u7801\u4e86\u3002\n\u672c\u7ae0\u7684\u76ee\u6807\u662f\u7528Ruby\u521b\u5efa\u4e00\u4e2aWeb\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u63a5\u53d7\u52a0\u901f\u5ea6\u8ba1\u6570\u636e\uff0c\u89e3\u6790\u3001\u5904\u7406\u548c\u5206\u6790\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u6240\u8d70\u7684\u6b65\u6570\u3001\u884c\u9a76\u7684\u8ddd\u79bb\u548c\u7ecf\u8fc7\u7684\u65f6\u95f4\u3002\n\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u8981\u6c42\u6211\u4eec\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u591a\u6b21\u8fc7\u6ee4\u3002\u521b\u5efa\u4e00\u4e2a\u8d1f\u8d23\u8fc7\u6ee4\u7684\u7c7b\u662f\u6709\u610f\u4e49\u7684\uff0c\u800c\u4e0d\u662f\u5728\u6211\u4eec\u7684\u7a0b\u5e8f\u4e2d\u6563\u5e03\u8fc7\u6ee4\u4ee3\u7801\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u589e\u5f3a\u6216\u4fee\u6539\u5b83\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u6539\u8fd9\u4e2a\u7c7b\u3002\u8fd9\u79cd\u7b56\u7565\u88ab\u79f0\u4e3a\u5173\u6ce8\u70b9\u5206\u79bb\uff0c\u8fd9\u662f\u4e00\u79cd\u5e38\u7528\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u5b83\u63d0\u5021\u5c06\u7a0b\u5e8f\u62c6\u5206\u6210\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u5176\u4e2d\u6bcf\u4e2a\u90e8\u5206\u90fd\u6709\u4e00\u4e2a\u4e3b\u8981\u7684\u5173\u6ce8\u70b9\u3002\u8fd9\u662f\u4e00\u79cd\u7f16\u5199\u5e72\u51c0\u3001\u53ef\u7ef4\u62a4\u4e14\u6613\u4e8e\u6269\u5c55\u7684\u4ee3\u7801\u7684\u597d\u65b9\u6cd5\u3002\u5728\u8fd9\u4e00\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u591a\u6b21\u56de\u987e\u8fd9\u4e2a\u60f3\u6cd5\u3002\n\u7c7b\u8fc7\u6ee4\u7cfb\u6570_LOW_0_HZ={\u963f\u5c14\u6cd5\uff1a[1\uff0c-1.979133761292768\uff0c0.979521463540373]\uff0c\u03b2\uff1a[0.000086384997973502\uff0c0.000172769995947004\uff0c0.000086384997973502]}COMERS_LOW_5_HZ={\u963f\u5c14\u6cd5\uff1a[1\uff0c-1.80898117793047\uff0c0.827224480562408]\uff0c\u03b2\uff1a[0.095465967120306\uff0c-0.172688631608676\uff0c0.095465967120306]}COMERS_HIGH_1_HZ={\u963f\u5c14\u6cd5\uff1a[1\uff0c-1.905384612118461\uff0c0.910092542787947]\uff0c\u6d4b\u8bd5\u7248\uff1a[0.953986986993339\uff0c-1.907503180919730\uff0c0.953986986993339]}def self.low_0_hz(Data)filter(data\uff0ccoates_low_0_hz)end def self.low_5_hz(Data_5_Hz)end def self.high_1_Hz(Data_1_Hz)end Private def self.filter(data\uff0ccoates_low_0_hz)end Private def self.filter(data\uff0ccoates)filter_data=[0\uff0c0](2..data.length-1)\u3002\u6bcf\u4e2aDo|i|Filtered_Data&lt\uff1b&lt\uff1bcoducts[\uff1aAlpha][0]*(data[i]*coducts[\uff1abeta][0]+data[i-1]*coducts[\uff1abeta][1]+data[i-2]*coducts[\uff1abeta][2]-filtered_data[i-1]*coducts[\uff1aAlpha][1]-filtered_data[i-2]*coates[\uff1aAlpha][2])end filtered_data end\u3002\n\u65e0\u8bba\u4f55\u65f6\u6211\u4eec\u7684\u7a0b\u5e8f\u9700\u8981\u8fc7\u6ee4\u65f6\u95f4\u5e8f\u5217\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u8c03\u7528Filter\u4e2d\u7684\u4e00\u4e2a\u7c7b\u65b9\u6cd5\u6765\u8fc7\u6ee4\u6211\u4eec\u9700\u8981\u8fc7\u6ee4\u7684\u6570\u636e\uff1a\n\u6bcf\u4e2a\u7c7b\u65b9\u6cd5\u8c03\u7528Filter\uff0c\u540e\u8005\u5b9e\u73b0IIR\u8fc7\u6ee4\u5668\u5e76\u8fd4\u56de\u7ed3\u679c\u3002\u5982\u679c\u6211\u4eec\u5e0c\u671b\u5c06\u6765\u6dfb\u52a0\u66f4\u591a\u7684\u8fc7\u6ee4\u5668\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u6539\u8fd9\u4e00\u4e2a\u7c7b\u3002\u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u5e7b\u6570\u90fd\u662f\u5728\u9876\u90e8\u5b9a\u4e49\u7684\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u7684\u8bfe\u66f4\u5bb9\u6613\u9605\u8bfb\u548c\u7406\u89e3\u3002\n\u6211\u4eec\u7684\u8f93\u5165\u6570\u636e\u6765\u81eaAndroid\u624b\u673a\u548ciPhone\u7b49\u79fb\u52a8\u8bbe\u5907\u3002\u5982\u4eca\u5e02\u573a\u4e0a\u7684\u5927\u591a\u6570\u624b\u673a\u90fd\u5185\u7f6e\u4e86\u52a0\u901f\u8ba1\uff0c\u80fd\u591f\u8bb0\u5f55\u603b\u52a0\u901f\u5ea6\u3002\u8ba9\u6211\u4eec\u5c06\u8bb0\u5f55\u603b\u52a0\u901f\u5ea6\u7684\u8f93\u5165\u6570\u636e\u683c\u5f0f\u79f0\u4e3a\u7ec4\u5408\u683c\u5f0f\u3002\u8bb8\u591a(\u4f46\u4e0d\u662f\u5168\u90e8)\u8bbe\u5907\u8fd8\u53ef\u4ee5\u5206\u522b\u8bb0\u5f55\u7528\u6237\u52a0\u901f\u5ea6\u548c\u91cd\u529b\u52a0\u901f\u5ea6\u3002\u8ba9\u6211\u4eec\u79f0\u8fd9\u79cd\u683c\u5f0f\u4e3a\u5206\u9694\u683c\u5f0f\u3002\u80fd\u591f\u4ee5\u5206\u79bb\u683c\u5f0f\u8fd4\u56de\u6570\u636e\u7684\u8bbe\u5907\u5fc5\u987b\u5177\u6709\u4ee5\u7ec4\u5408\u683c\u5f0f\u8fd4\u56de\u6570\u636e\u7684\u80fd\u529b\u3002\u7136\u800c\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u6709\u4e9b\u8bbe\u5907\u53ea\u80fd\u4ee5\u7ec4\u5408\u683c\u5f0f\u8bb0\u5f55\u6570\u636e\u3002\u5408\u5e76\u683c\u5f0f\u7684\u8f93\u5165\u6570\u636e\u9700\u8981\u901a\u8fc7\u4f4e\u901a\u6ee4\u6ce2\u5668\u5c06\u5176\u8f6c\u6362\u4e3a\u5206\u79bb\u683c\u5f0f\u3002\n\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u7a0b\u5e8f\u80fd\u591f\u5904\u7406\u5e02\u573a\u4e0a\u6240\u6709\u5e26\u6709\u52a0\u901f\u8ba1\u7684\u79fb\u52a8\u8bbe\u5907\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u63a5\u53d7\u8fd9\u4e24\u79cd\u683c\u5f0f\u7684\u6570\u636e\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u6211\u4eec\u5c06\u5206\u522b\u63a5\u53d7\u7684\u4e24\u79cd\u683c\u5f0f\u3002\n\u7ec4\u5408\u683c\u5f0f\u7684\u6570\u636e\u662f\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u5728\\(x\\)\u3001\\(y\\)\u548c\\(z\\)\u65b9\u5411\u4e0a\u7684\u603b\u52a0\u901f\u5ea6\u3002\\(X\\)\u3001\\(y\\)\u548c\\(z\\)\u503c\u5c06\u7528\u9017\u53f7\u5206\u9694\uff0c\u5355\u4f4d\u65f6\u95f4\u7684\u6837\u672c\u5c06\u7528\u5206\u53f7\u5206\u9694\u3002\n\u5206\u79bb\u683c\u5f0f\u8fd4\u56de\u7528\u6237\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u5728\\(x\\)\u3001\\(y\\)\u548c\\(z\\)\u65b9\u5411\u4e0a\u7684\u52a0\u901f\u5ea6\u548c\u91cd\u529b\u52a0\u901f\u5ea6\u3002\u7528\u6237\u52a0\u901f\u5ea6\u503c\u5c06\u901a\u8fc7\u7ba1\u9053\u4e0e\u91cd\u529b\u52a0\u901f\u5ea6\u503c\u5206\u5f00\u3002\n\u5904\u7406\u591a\u79cd\u8f93\u5165\u683c\u5f0f\u662f\u5e38\u89c1\u7684\u7f16\u7a0b\u95ee\u9898\u3002\u5982\u679c\u6211\u4eec\u3002\n.", "note_en": "Dessy is an engineer by trade, an entrepreneur by passion, and a developer at heart. She&#39;s currently the CTO and co-founder of  Nudge Rewards When she\u2019s not busy building product with her team, she can be found teaching others to code, attending or hosting a Toronto tech event, and online at  dessydaskalov.com and  @dess_e.\n  Many software engineers reflecting on their training will remember having the pleasure of living in a very perfect world. We were taught to solve well-defined problems in idealized domains.\n Then we were thrown into the real world, with all of its complexities and challenges. It&#39;s messy, which makes it all the more exciting. When you can solve a real-life problem, with all of its quirks, you can build software that really helps people.\n In this chapter, we&#39;ll examine a problem that looks straightforward on the surface, and gets tangled very quickly when the real world, and real people, are thrown into the mix.\n We&#39;ll work together to build a basic pedometer. We&#39;ll start by discussing the theory behind a pedometer and creating a step counting solution outside of code. Then, we&#39;ll implement our solution in code. Finally, we&#39;ll add a web layer to our code so that we have a friendly interface for a user to work with.\n   The rise of the mobile device brought with it a trend to collect more and more data on our daily lives. One type of data many people collect is the number of steps they&#39;ve taken over a period of time. This data can be used for health tracking, training for sporting events, or, for those of us obsessed with collecting and analyzing data, just for kicks. Steps can be counted using a pedometer, which often uses data from a hardware accelerometer as input.\n  An accelerometer is a piece of hardware that measures acceleration in the  \\(x\\),  \\(y\\), and  \\(z\\) directions. Many people carry an accelerometer with them wherever they go, as it&#39;s built into almost all smartphones currently on the market. The  \\(x\\),  \\(y\\), and  \\(z\\) directions are relative to the phone.\n An accelerometer returns a  signal in 3-dimensional space. A signal is a set of data points recorded over time. Each component of the signal is a time series representing acceleration in one of the  \\(x\\),  \\(y\\), or  \\(z\\) directions. Each point in a time series is the acceleration in that direction at a specific point in time. Acceleration is measured in units of g-force, or  g. One  g is equal to 9.8  \\(m/s^2\\), the average acceleration due to gravity on Earth.\n    The  sampling rate of the accelerometer, which can often be calibrated, determines the number of measurements per second. For instance, an accelerometer with a sampling rate of 100 returns 100 data points for each  \\(x\\),  \\(y\\), and  \\(z\\) time series every second.\n  When a person walks, they bounce slightly with each step. Just watch the top of a person&#39;s head as they walk away from you. Their head, torso, and hips are synchronized in a smooth bouncing motion. While people don&#39;t bounce very far, only one or two centimeters, it is one of the clearest, most constant, and most recognizable parts of a person&#39;s walking acceleration signal.\n A person bounces up and down, in the vertical direction, with each step. If you are walking on Earth (or another big ball of mass floating in space) the bounce is conveniently in the same direction as gravity.\n We are going to count steps by using the accelerometer to count bounces up and down. Because the phone can rotate in any direction, we will use gravity to know which direction down is.  A pedometer can count steps by counting the number of bounces in the direction of gravity.\n Let&#39;s look at a person walking with an accelerometer-equipped smartphone in his or her shirt pocket ( Figure 16.2).\n     In our perfect world, acceleration from step bounces will form a perfect sine wave in the  \\(y\\) direction. Each peak in the sine wave is exactly one step. Step counting becomes a matter of counting these perfect peaks.\n Ah, the joys of a perfect world, which we only ever experience in texts like this. Don&#39;t fret, things are about to get a little messier, and a lot more exciting. Let&#39;s add a little more reality to our world.\n  The force of gravity causes an acceleration in the direction of gravity, which we refer to as gravitational acceleration. This acceleration is unique because it is always present and, for the purposes of this chapter, is constant at 9.8  \\(m/s^2\\).\n Suppose a smartphone is lying on a table screen-side up. In this orientation, our coordinate system is such that the negative  \\(z\\) direction is the one that gravity is acting on. Gravity will pull our phone in the negative  \\(z\\) direction, so our accelerometer,  even when perfectly still, will record an acceleration of 9.8  \\(m/s^2\\) in the negative  \\(z\\) direction. Accelerometer data from our phone in this orientation is shown in  Figure 16.3.\n   Note that  \\(x(t)\\) and  \\(y(t)\\) remain constant at 0, while  \\(z(t)\\) is constant at -1  g. Our accelerometer records all acceleration, including gravitational acceleration.\n Each time series measures the  total acceleration in that direction. Total acceleration is the sum of  user acceleration and  gravitational acceleration.\n User acceleration is the acceleration of the device due to the movement of the user, and is constant at 0 when the phone is perfectly still. However, when the user is moving with the device, user acceleration is rarely constant, since it&#39;s difficult for a person to move with a constant acceleration.\n   To count steps, we&#39;re interested in the bounces created by the user in the direction of gravity. That means we&#39;re interested in isolating the 1-dimensional time series which describes  user acceleration in the direction of gravity from our 3-dimensional acceleration signal ( Figure 16.4).\n In our simple example, gravitational acceleration is 0 in  \\(x(t)\\) and  \\(z(t)\\) and constant at 9.8  \\(m/s^2\\) in  \\(y(t)\\). Therefore, in our total acceleration plot,  \\(x(t)\\) and  \\(z(t)\\) fluctuate around 0 while  \\(y(t)\\) fluctuates around -1  g. In our user acceleration plot, we notice that\u2014because we have removed gravitational acceleration\u2014all three time series fluctuate around 0. Note the obvious peaks in  \\(y_{u}(t)\\). Those are due to step bounces! In our last plot, gravitational acceleration,  \\(y_{g}(t)\\) is constant at -1  g, and  \\(x_{g}(t)\\) and  \\(z_{g}(t)\\) are constant at 0.\n So, in our example, the 1-dimensional user acceleration in the direction of gravity time series we&#39;re interested in is  \\(y_{u}(t)\\). Although  \\(y_{u}(t)\\) isn&#39;t as smooth as our perfect sine wave, we can identify the peaks, and use those peaks to count steps. So far, so good. Now, let&#39;s add even more reality to our world.\n  What if a person carries the phone in a bag on their shoulder, with the phone in a more wonky position? To make matters worse, what if the phone rotates in the bag part way through the walk, as in  Figure 16.5?\n   Yikes. Now all three of our components have a non-zero gravitational acceleration, so the user acceleration in the direction of gravity is now split amongst all three time series. To determine user acceleration in the direction of gravity, we first have to determine which direction gravity is acting in. To do this, we have to split total acceleration in each of the three time series into a user acceleration time series and a gravitational acceleration time series ( Figure 16.6).\n   Then we can isolate the portion of user acceleration in each component that is in the direction of gravity, resulting in just the user acceleration in the direction of gravity time series.\n     We can use a tool called a  filter to split a total acceleration time series into a user acceleration time series and a gravitational acceleration time series.\n  A filter is a tool used in signal processing to remove an unwanted component from a signal.\n A  low-pass filter allows low-frequency signals through, while attenuating signals higher than a set threshold. Conversely, a  high-pass filter allows high-frequency signals through, while attenuating signals below a set threshold. Using music as an analogy, a low-pass filter can eliminate treble, and a high-pass filter can eliminate bass.\n In our situation, the frequency, measured in Hz, indicates how quickly the acceleration is changing. A constant acceleration has a frequency of 0 Hz, while a non-constant acceleration has a non-zero frequency. This means that our constant gravitational acceleration is a 0 Hz signal, while user acceleration is not.\n For each component, we can pass total acceleration through a low-pass filter, and we&#39;ll be left with just the gravitational acceleration time series. Then we can subtract gravitational acceleration from total acceleration, and we&#39;ll have the user acceleration time series ( Figure 16.7).\n   There are numerous varieties of filters. The one we&#39;ll use is called an infinite impulse response (IIR) filter. We&#39;ve chosen an IIR filter because of its low overhead and ease of implementation. The IIR filter we&#39;ve chosen is implemented using the formula:\n  The design of digital filters is outside of the scope of this chapter, but a very short teaser discussion is warranted. It&#39;s a well-studied, fascinating topic, with numerous practical applications. A digital filter can be designed to cancel any frequency or range of frequencies desired. The  \\(\\alpha\\) and  \\(\\beta\\) values in the formula are coefficients, set based on the cutoff frequency, and the range of frequencies we want to preserve.\n We want to cancel all frequencies except for our constant gravitational acceleration, so we&#39;ve chosen coefficients that attenuate frequencies higher than 0.2 Hz. Notice that we&#39;ve set our threshold slightly higher than 0 Hz. While gravity does create a true 0 Hz acceleration, our real, imperfect world has real, imperfect accelerometers, so we&#39;re allowing for a slight margin of error in measurement.\n    We&#39;ll initialize the first two values of gravitational acceleration to 0, so that the formula has initial values to work with.\n         \\(x_{g}(t)\\) and  \\(z_{g}(t)\\) hover around 0, and  \\(y_{g}(t)\\) very quickly drops to  \\(-1g\\). The initial 0 value in  \\(y_{g}(t)\\) is from the initialization of the formula.\n  \\[x_{u}(t) = x(t) - x_{g}(t)\\]  \\[y_{u}(t) = y(t) - y_{g}(t)\\]  \\[z_{u}(t) = z(t) - z_{g}(t)\\]\n The result is the time series seen in  Figure 16.9. We&#39;ve successfully split our total acceleration into user acceleration and gravitational acceleration!\n    \\(x_{u}(t)\\),  \\(y_{u}(t)\\), and  \\(z_{u}(t)\\) include all movements of the user, not just movements in the direction of gravity. Our goal here is to end up with a 1-dimensional time series representing user acceleration in the direction of gravity. This will include portions of user acceleration in each of the directions.\n Let&#39;s get to it. First, some linear algebra 101. Don&#39;t take that mathematician hat off just yet!\n  When working with coordinates, you won&#39;t get very far before being introduced to the  dot product, one of the fundamental tools used in comparing the magnitude and direction of  \\(x\\),  \\(y\\), and  \\(z\\) coordinates.\n The dot product takes us from 3-dimensional space to 1-dimensional space ( Figure 16.10). When we take the dot product of the two time series, user acceleration and gravitational acceleration, both of which are in 3-dimensional space, we&#39;ll be left with a single time series in 1-dimensional space representing the portion of user acceleration in the direction of gravity. We&#39;ll arbitrarily call this new time series  \\(a(t)\\), because, well, every important time series deserves a name.\n    We can implement the dot product for our earlier example using the formula  \\(a(t) = x_{u}(t)x_{g}(t) + y_{u}(t)y_{g}(t) + z_{u}(t)z_{g}(t)\\), leaving us with  \\(a(t)\\) in 1-dimensional space ( Figure 16.11).\n   We can now visually pick out where the steps are in  \\(a(t)\\). The dot product is very powerful, yet beautifully simple.\n  We saw how quickly our seemingly simple problem became more complex when we threw in the challenges of the real world and real people. However, we&#39;re getting a lot closer to counting steps, and we can see how  \\(a(t)\\) is starting to resemble our ideal sine wave. But, only &#34;kinda, sorta&#34; starting to. We still need to make our messy  \\(a(t)\\) time series smoother. There are four main issues ( Figure 16.12) with  \\(a(t)\\) in its current state. Let&#39;s examine each one.\n    \\(a(t)\\) is very &#34;jumpy&#34;, because a phone can jiggle with each step, adding a high-frequency component to our time series. This jumpiness is called noise. By studying numerous data sets, we&#39;ve determined that a step acceleration is at maximum 5 Hz. We can use a low-pass IIR filter to remove the noise, picking  \\(\\alpha\\) and  \\(\\beta\\) to attenuate all signals above 5 Hz.\n  With a sampling rate of 100, the slow peak displayed in  \\(a(t)\\) spans 1.5 seconds, which is too slow to be a step. In studying enough samples of data, we&#39;ve determined that the slowest step we can take is at a 1 Hz frequency. Slower accelerations are due to a low-frequency component, that we can again remove using a high-pass IIR filter, setting  \\(\\alpha\\) and  \\(\\beta\\) to cancel all signals below 1 Hz.\n  As a person is using an app or making a call, the accelerometer registers small movements in the direction of gravity, presenting themselves as short peaks in our time series. We can eliminate these short peaks by setting a minimum threshold, and counting a step every time  \\(a(t)\\) crosses that threshold in the positive direction.\n  Our pedometer should accommodate many people with different walks, so we&#39;ve set minimum and maximum step frequencies based on a large sample size of people and walks. This means that we may sometimes filter slightly too much or too little. While we&#39;ll often have fairly smooth peaks, we can, once in a while, get a &#34;bumpier&#34; peak.  Figure 16.12 zooms in on one such peak.\n When bumpiness occurs at our threshold, we can mistakenly count too many steps for one peak. We&#39;ll use a method called  hysteresis to address this. Hysteresis refers to the dependence of an output on past inputs. We can count threshold crossings in the positive direction, as well as 0 crossings in the negative direction. Then, we only count steps where a threshold crossing occurs after a 0 crossing, ensuring we count each step only once.\n    In accounting for these four scenarios, we&#39;ve managed to bring our messy  \\(a(t)\\) fairly close to our ideal sine wave ( Figure 16.13), allowing us to count steps.\n  The problem, at first glance, looked straightforward. However, the real world and real people threw a few curve balls our way. Let&#39;s recap how we solved the problem:\n We used a low-pass filter to split total acceleration into user acceleration and gravitational acceleration,  \\((x_{u}(t), y_{u}(t), z_{u}(t))\\) and  \\((x_{g}(t), y_{g}(t), z_{g}(t))\\), respectively.\n We took the dot product of  \\((x_{u}(t), y_{u}(t), z_{u}(t))\\) and  \\((x_{g}(t), y_{g}(t), z_{g}(t))\\) to obtain the user acceleration in the direction of gravity,  \\(a(t)\\).\n We used a low-pass filter again to remove the high-frequency component of  \\(a(t)\\), removing noise.\n We used a high-pass filter to cancel the low-frequency component of  \\(a(t)\\), removing slow peaks.\n As software developers in a training or academic setting, we may have been presented with a perfect signal and asked to write code to count the steps in that signal. While that may have been an interesting coding challenge, it wouldn&#39;t have been something we could apply in a live situation. We saw that in reality, with gravity and people thrown into the mix, the problem was a little more complex. We used mathematical tools to address the complexities, and were able to solve a real-world problem. It&#39;s time to translate our solution into code.\n  Our goal for this chapter is to create a web application in Ruby that accepts accelerometer data, parses, processes, and analyzes the data, and returns the number of steps taken, the distance travelled, and the elapsed time.\n  Our solution requires us to filter our time series several times. Rather than peppering filtering code throughout our program, it makes sense to create a class that takes care of the filtering, and if we ever need to enhance or modify it, we&#39;ll only ever need to change that one class. This strategy is called  separation of concerns, a commonly used design principle which promotes splitting a program into distinct pieces, where every piece has one primary concern. It&#39;s a beautiful way to write clean, maintainable code that&#39;s easily extensible. We&#39;ll revisit this idea several times throughout the chapter.\n  class  Filter  COEFFICIENTS_LOW_0_HZ = { alpha: [ 1, - 1.979133761292768,  0.979521463540373], beta: [ 0.000086384997973502,  0.000172769995947004,  0.000086384997973502] }  COEFFICIENTS_LOW_5_HZ = { alpha: [ 1, - 1.80898117793047,  0.827224480562408], beta: [ 0.095465967120306, - 0.172688631608676,  0.095465967120306] }  COEFFICIENTS_HIGH_1_HZ = { alpha: [ 1, - 1.905384612118461,  0.910092542787947], beta: [ 0.953986986993339, - 1.907503180919730,  0.953986986993339] }  def  self.low_0_hz(data) filter(data,  COEFFICIENTS_LOW_0_HZ)  end  def  self.low_5_hz(data) filter(data,  COEFFICIENTS_LOW_5_HZ)  end  def  self.high_1_hz(data) filter(data,  COEFFICIENTS_HIGH_1_HZ)  end private  def  self.filter(data, coefficients) filtered_data = [ 0, 0] ( 2..data.length -1).each  do |i| filtered_data &lt;&lt; coefficients[ :alpha][ 0] * (data[i] * coefficients[ :beta][ 0] + data[i -1] * coefficients[ :beta][ 1] + data[i -2] * coefficients[ :beta][ 2] - filtered_data[i -1] * coefficients[ :alpha][ 1] - filtered_data[i -2] * coefficients[ :alpha][ 2])  end filtered_data  end end\n Anytime our program needs to filter a time series, we can call one of the class methods in  Filter with the data we need filtered:\n  Each class method calls  filter, which implements the IIR filter and returns the result. If we wish to add more filters in the future, we only need to change this one class. Note is that all magic numbers are defined at the top. This makes our class easier to read and understand.\n  Our input data is coming from mobile devices such as Android phones and iPhones. Most mobile phones on the market today have accelerometers built in, that are able to record total acceleration. Let&#39;s call the input data format that records total acceleration the  combined format. Many, but not all, devices can also record user acceleration and gravitational acceleration separately. Let&#39;s call this format the  separated format. A device that has the ability to return data in the separated format necessarily has the ability to return data in the combined format. However, the inverse is not always true. Some devices can only record data in the combined format. Input data in the combined format will need to be passed through a low-pass filter to turn it into the separated format.\n We want our program to handle all mobile devices on the market with accelerometers, so we&#39;ll need to accept data in both formats. Let&#39;s look at the two formats we&#39;ll be accepting individually.\n  Data in the combined format is total acceleration in the  \\(x\\),  \\(y\\), and  \\(z\\) directions, over time.  \\(x\\),  \\(y\\), and  \\(z\\) values will be separated by a comma, and samples per unit time will be separated by a semi-colon.\n   The separated format returns user acceleration and gravitational acceleration in the  \\(x\\),  \\(y\\), and  \\(z\\) directions, over time. User acceleration values will be separated from gravitational acceleration values by a pipe.\n   Dealing with multiple input formats is a common programming problem. If we\n......", "posttime": "2020-11-05 20:19:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u73b0\u5b9e,real,\u52a0\u901f\u5ea6", "title": "\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u8ba1\u6b65\u5668(2015)", "title_en": "A Pedometer in the Real World (2015)", "transed": 1, "url": "http://aosabook.org/en/500L/a-pedometer-in-the-real-world.html", "via": "", "real_tags": ["\u73b0\u5b9e", "real", "\u52a0\u901f\u5ea6"]}, {"category": "", "categoryclass": "", "imagename": "ed4ba55892d506f1c216937820613375.png", "infoid": 1033306, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6700\u8fd1\uff0c\u6211\u7b2c\u4e00\u6b21\u6253\u5f00\u667a\u80fd\u624b\u673a\u7684\u201c\u5c4f\u5e55\u65f6\u95f4\u201d(Screen Time)\u5e94\u7528\u7a0b\u5e8f\uff0c\u53d1\u73b0\u51e0\u5468\u524d\u7684\u67d0\u4e00\u5929\uff0c\u6211\u6709\u4e9b\u70e6\u607c\u5730\u53d1\u73b0\uff1a\n\u770b\u5230\u8fd9\u4e9b\u6570\u5b57\uff0c\u6211\u7684\u7b2c\u4e00\u4e2a\u60f3\u6cd5\u662f\uff1a\u6211\u80fd\u628a\u8fd9\u6bb5\u65f6\u95f4\u4e2d\u6709\u591a\u5c11\u7b97\u5f97\u4e0a\u201c\u7269\u6709\u6240\u503c\u201d\u5462\uff1f\u6211\u80fd\u628a\u591a\u5c11\u94b1\u91cd\u65b0\u7528\u4e8e\u66f4\u5065\u5eb7\u7684\u6d3b\u52a8\uff1f\n\u87ba\u4e1d\u5200\u662f\u4e00\u79cd\u6700\u7eaf\u7cb9\u7684\u5de5\u5177\u3002\u5b83\u4e0d\u9700\u8981\u4efb\u4f55\u4e1c\u897f\uff0c\u4e0d\u9700\u8981\u7ef4\u62a4\uff0c\u4e5f\u4e0d\u4f1a\u5206\u6563\u624b\u5934\u4efb\u52a1\u7684\u6ce8\u610f\u529b\u3002\u5b83\u53ea\u662f\u5750\u5728\u90a3\u91cc\uff0c\u8010\u5fc3\u5730\u7b49\u5f85\u9700\u8981\u7684\u65f6\u5019\u88ab\u6361\u8d77\u6765\u3002\n\u8fd9\u5c31\u662f\u6211\u60f3\u7528\u6211\u7684\u667a\u80fd\u624b\u673a\u5efa\u7acb\u7684\u90a3\u79cd\u5173\u7cfb\u3002\u5b83\u5e94\u8be5\u662f\u5de5\u5177\uff0c\u800c\u4e0d\u662f\u5176\u4ed6\u3002\u8003\u8651\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u5f00\u59cb\u518d\u6b21\u628a\u6211\u7684\u667a\u80fd\u624b\u673a\u53d8\u6210\u4e00\u79cd\u5de5\u5177\u3002\u8fd9\u79cd\u201c\u5de5\u5177\uff0c\u800c\u4e0d\u662f\u5206\u5fc3\u201d\u7684\u5fc3\u6001\u5bf9\u6240\u6709\u73b0\u4ee3\u6280\u672f\u90fd\u5f88\u6709\u7528\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u667a\u80fd\u624b\u673a\u3002\u5361\u5c14\u00b7\u7ebd\u6ce2\u7279(Cal Newport)\u7684\u201c\u6570\u5b57\u6781\u7b80\u4e3b\u4e49\u201d(Digital Minimism)\u4e5f\u5f88\u597d\u5730\u9610\u8ff0\u4e86\u8fd9\u4e00\u7406\u5ff5(\u53c2\u89c1\u6211\u7684\u9605\u8bfb\u7b14\u8bb0)\u3002\n\u62ff\u8d77\u6211\u7684\u667a\u80fd\u624b\u673a\u6709\u4e24\u79cd\u5fc3\u7406\u6a21\u5f0f\uff1a\u6709\u610f\u65e0\u610f\u3002\u62ff\u8d77\u667a\u80fd\u624b\u673a\u65f6\uff0c\u6ca1\u6709\u5176\u4ed6\u53ef\u80fd\u7684\u64cd\u4f5c\u6a21\u5f0f\u3002\n\u8c28\u614e\u4f7f\u7528\u662f\u6700\u597d\u7684\u60c5\u51b5\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u6211\u62ff\u8d77\u6211\u7684\u667a\u80fd\u624b\u673a\uff0c\u90fd\u662f\u4e3a\u4e86\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4f1a\u5728\u5b8c\u6210\u7684\u90a3\u4e00\u79d2\u628a\u5b83\u653e\u4e0b\u3002\u8fd9\u662f\u5b8c\u5168\u5408\u7406\u7684\uff0c\u5c3d\u7ba1\u5e76\u4e0d\u603b\u662f\u8fd9\u6837\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u4e0d\u592a\u73b0\u5b9e\u3002\n\u8ba9\u6211\u4eec\u4e13\u6ce8\u4e8e\u6539\u5584\u201c\u65e0\u610f\u8bc6\u201d\u7684\u90e8\u5206\uff1a\u6211\u6ce8\u610f\u5230\uff0c\u5f53\u6211\u65e0\u610f\u4e2d\u62ff\u8d77\u6211\u7684\u624b\u673a\u65f6\uff0c\u8981\u4e48\u662f\u56e0\u4e3a\u6536\u5230\u4e86\u901a\u77e5\uff0c\u8981\u4e48\u662f\u56e0\u4e3a\u6211\u5f88\u65e0\u804a\u3002\u77e5\u9053\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u73b0\u5728\u6709\u51e0\u70b9\u53ef\u4ee5\u5229\u7528\u7684\u7b79\u7801\uff1a\n\u6211\u53ef\u4ee5\u51cf\u5c11\u6536\u5230\u7684\u901a\u77e5\u6570\u91cf(\u51cf\u5c11\u6211\u5728\u8bbe\u5907\u4e0a\u5c1d\u8bd5\u7684\u6f5c\u5728\u89e3\u9501\u603b\u6570)\uff1b\n\u6211\u53ef\u4ee5\u8ba9\u4e0d\u52a0\u601d\u7d22\u5730\u89e3\u9501\u8bbe\u5907\u53d8\u5f97\u66f4\u52a0\u56f0\u96be(\u8fd9\u4f1a\u8ba9\u6211\u771f\u6b63\u8003\u8651\u662f\u5426\u60f3\u8981\u4f7f\u7528\u5b83)\uff1b\n\u4e00\u65e6\u8bbe\u5907\u89e3\u9501\uff0c\u6211\u53ef\u4ee5\u786e\u4fdd\u6211\u5728\u4e0a\u9762\u5ea6\u8fc7\u4e86\u4f18\u8d28\u7684\u65f6\u5149(\u9f13\u52b1\u6211\u505a\u4e00\u4e9b\u66f4\u597d\u7684\u4e8b\u60c5\uff0c\u800c\u4e0d\u662f\u6210\u4e3a\u4ee4\u4eba\u5206\u5fc3\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u727a\u7272\u54c1)\u3002\n\u7981\u7528\u51e0\u4e4e\u6240\u6709\u5185\u5bb9\u7684\u901a\u77e5\u3002\u6211\u542f\u7528\u4e86PagerDuty\u3001\u7535\u8bdd\u547c\u53eb\u548c\u89c6\u9891\u547c\u53eb\u901a\u77e5\u3002\u522b\u65e0\u4ed6\u6cd5\uff0c\u751a\u81f3\u5373\u65f6\u901a\u8baf\u6216\u7535\u5b50\u90ae\u4ef6\u4e5f\u4e0d\u884c\u3002\u5982\u679c\u662f\u91cd\u8981\u7684\uff0c\u6211\u4f1a\u4eb2\u81ea\u53bb\u627e\u7684\u3002\n\u5220\u9664\u793e\u4ea4\u5a92\u4f53\u5e94\u7528\u7a0b\u5e8f\uff0c\u8f6c\u800c\u5728\u7b14\u8bb0\u672c\u7535\u8111/\u53f0\u5f0f\u673a\u4e0a\u4f7f\u7528\u5b83\u4eec\u3002\u4ee5\u524d\uff0c\u6211\u6bcf\u5929\u90fd\u4f1a\u5728\u667a\u80fd\u624b\u673a\u4e0a\u6d4f\u89c8Twitter\u3002\u73b0\u5728\uff0c\u6211\u6bcf\u5468\u90fd\u4f1a\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u4f7f\u7528\u5b83\u51e0\u6b21\u3002\n\u5728\u9501\u5b9a\u5c4f\u5e55\u4e0a\u5b8c\u5168\u9690\u85cf\u901a\u77e5\u3002\u4ece\u9690\u79c1\u548c\u6b63\u5ff5\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u90fd\u662f\u597d\u7684\uff0c\u56e0\u4e3a\u5b83\u9650\u5236\u4e86\u66b4\u9732\u7ed9\u964c\u751f\u4eba\u7684\u4fe1\u606f\uff0c\u540c\u65f6\u963b\u6b62\u4e86\u4f60\u7684\u597d\u5947\u5fc3\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\u3002\n\u7981\u7528\u9762\u90e8\u548c/\u6216\u6307\u7eb9\u89e3\u9501\u7b49\u751f\u7269\u8bc6\u522b\u8eab\u4efd\u9a8c\u8bc1\uff0c\u800c\u4f7f\u7528\u5f3a\u5bc6\u7801\u3002\u5b83\u4e0d\u592a\u65b9\u4fbf\uff0c\u6240\u4ee5\u5b83\u8d77\u5230\u4e86\u6b63\u5ff5\u68c0\u67e5\u7684\u4f5c\u7528\u3002\n\u5728\u60a8\u7684\u4e3b\u5c4f\u5e55\u4e0a\u5c55\u793a\u6709\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0cDuolingo\u3001\u64ad\u5ba2\u3001Instapaper\u3001Anki\u3001Calendar\u7b49\u7b49\u3002\u4f60\u4f1a\u770b\u5230\u8fd9\u6837\u7684\u753b\u9762\uff1a\u4e0d\u662fFacebook\u548cTwitter\u3002\n\u5728\u4e3b\u5c4f\u5e55\u4e0a\u9690\u85cf\u8017\u65f6\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u66f4\u597d\u7684\u662f\uff0c\u628a\u5b83\u4eec\u5168\u90e8\u5220\u9664\uff01\u91cd\u8981\u7684\u7b2c\u4e00\u6b65\u662f\u628a\u5b83\u4eec\u85cf\u5728\u67d0\u4e2a\u6587\u4ef6\u5939\u91cc\u3002\n\u542f\u7528\u7070\u5ea6\u663e\u793a\u6a21\u5f0f\uff0c\u4ee5\u51cf\u5c11\u5e94\u7528\u7a0b\u5e8f\u56fe\u6807\u9c9c\u8273\u989c\u8272\u7684\u8bf1\u4eba\u6548\u679c\u3002\n\u4f7f\u7528\u5176\u4ed6\u542f\u52a8\u5668\uff0c\u5982UnLauncher\u3002\u5982\u679c\u60a8\u719f\u6089Java\u6216Kotlin\uff0c\u60a8\u751a\u81f3\u53ef\u4ee5\u5b9a\u5236\u60a8\u7684\u542f\u52a8\u5668\u3002\n\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba9\u4eba\u4eec\u66f4\u5bb9\u6613\u4ee5\u6df1\u601d\u719f\u8651\u3001\u9ad8\u6548\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u6b3e\u8bbe\u5907\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u5206\u6563\u6ce8\u610f\u529b\u800c\u4f7f\u7528\u5b83\u3002\n\u5728\u8fd9\u4e9b\u6539\u53d8\u4e4b\u540e\uff0c\u672c\u5468\u7684\u5c4f\u5e55\u65f6\u95f4\u6570\u636e\u663e\u793a\uff0c\u6211\u5e73\u5747\u6bcf\u5929\u89e3\u9501\u6211\u7684\u8bbe\u590711\u6b21(\u6bd4\u4ee5\u524d\u5c116\u500d)\uff0c\u6bcf\u5929\u6536\u523052\u6b21\u901a\u77e5(\u6bd4\u4ee5\u524d\u5c113\u500d)\uff0c\u6bcf\u5929\u5728\u8bbe\u5907\u4e0a\u82b1\u8d3970\u5206\u949f(\u6bd4\u4ee5\u524d\u5c113\u500d)\u3002\u2728", "note_en": "I opened my smartphone\u2019s \u201cscreen time\u201d app for the first time recently and was somewhat troubled to discover that on a particular day a few weeks ago:\n  My first thoughts upon seeing these numbers: how much of this time could I consider as \u201ctime well spent\u201d? How much of it could I redirect towards healthier activities?\n   A screwdriver is a tool in its purest form. It does not ask for anything, does not require maintenance, and doesn\u2019t distract from the task at hand. It just sits there, patiently waiting to be picked up when needed.\n  This is the kind of relationship I want with my smartphone. It should be tool, and nothing else. With that in mind, I set out to turn my smartphone into a tool again. This  \u201ctool, not distraction\u201d mentality is useful for all kinds of modern technology, not just smartphones. Cal Newport\u2019s \u201cDigital Minimalism\u201d covers this idea pretty well too ( view my reading notes).\n  Picking up my smartphone happens in one of two mental modes: mindfully, or mindlessly. There are no other possible modes of operation when picking up a smartphone.\n Mindful use is the best case scenario. Ideally, every single time I\u2019d pick up my smartphone, it would be to resolve a problem, and I\u2019d put it down the second I\u2019d be done. That\u2019s entirely reasonable, though it\u2019s not always what happens. What\u2019s more, it\u2019s not very realistic.\n Let\u2019s focus on improving the \u201cmindless\u201d part: I noticed that when I mindlessly pick up my phone, it\u2019s either because a notification came in, or because I\u2019m bored. Knowing this, I now have a few points of leverage I can use:\n I can reduce the number of incoming notifications (reducing the total number of potential unlocks I attempt on the device);\n  I can make it more difficult to mindlessly unlock the device (leading me to really consider if I want to use it);\n  I can make sure I spend quality time on the device once it\u2019s unlocked (encouraging me to do something better than falling prey to distracting apps).\n  Disable notifications for most everything. I have notifications enabled for PagerDuty, phone calls, and video calls. Nothing else, not even instant messaging or email. If it\u2019s important, I\u2019ll go look for it myself.\n  Delete social media apps and mindfully using them on the laptop/desktop instead. I used to scroll through Twitter every day on my smartphone before. I now use it a few times a week on my laptop.\n  Hide notifications entirely from the lock screen. This is good from a privacy standpoint and a mindfulness standpoint, as it limits the information exposed to strangers while preventing your curiosity from taking over.\n  Disable biometric authentication such as face and/or fingerprint unlock and instead  use a strong passphrase. It\u2019s much less convenient, so it acts as a mindfulness check.\n  Showcase useful apps on your home screen. For example, Duolingo, podcasts, Instapaper, Anki, Calendar, etc. You get the picture: not Facebook and Twitter.\n  Hide time-wasting apps from the home screen. Even better, delete them altogether! A first great step sis hiding them away in a folder of some sort.\n  Enable grayscale display mode to reduce the enticing effect of the apps icons\u2019 bright colours.\n  Use an alternative launcher like  Unlauncher. You may even customize your launcher if you\u2019re familiar with Java or Kotlin.\n All in all, the goal is to make it easier to use the device in a thoughtful, productive fashion than it is to use it for distracting purposes.\n After these changes, screen time data for this week shows that on average I unlocked my device 11 times per day (~6x less than before), received 52 notifications per day (~3x less than before), and spent 70 minutes on the device per day (~3x less than before). \u2728", "posttime": "2020-11-05 20:19:09", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u624b\u673a,\u667a\u80fd\u624b\u673a,smartphone,\u5e94\u7528\u7a0b\u5e8f", "title": "\u628a\u6211\u7684\u667a\u80fd\u624b\u673a\u53d8\u6210\u65e0\u804a\u7684\u751f\u4ea7\u529b\u5de5\u5177", "title_en": "Turning my smartphone into a boring productivity tool", "transed": 1, "url": "https://maximevaillancourt.com/blog/turning-my-smartphone-into-a-boring-tool", "via": "", "real_tags": ["\u624b\u673a", "\u667a\u80fd\u624b\u673a", "\u5e94\u7528\u7a0b\u5e8f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033305, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u6d4f\u89c8\u661f\u5df4\u514b\u65b0\u52a0\u5761\u65f6\uff0c\u6211\u6ce8\u610f\u5230\u4e00\u4e2a\u9875\u9762\u52a0\u8f7d\u4e86\u6765\u81ea\u7b2c\u4e09\u65b9\u7f51\u7ad9\u7684\u5185\u5bb9\u3002\u8ba9\u6211\u4eec\u628a\u8fd9\u4e2a\u7f51\u7ad9\u547d\u540d\u4e3aExample.com\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6cc4\u9732\u4e86\u3002\u5f53\u6211\u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u505a\u4e00\u4e9b\u7814\u7a76\u65f6\uff0c\u6211\u5728example.com/starbucks\u76ee\u5f55\u4e0b\u7684card.starucks.com.sg\u4e0a\u770b\u5230\u4e86\u76f8\u540c\u7684\u767b\u5f55\u9875\u9762\uff0c\u5728\u8fd9\u4e00\u70b9\u4e0a\u6211\u6709\u4e24\u79cd\u53ef\u80fd\u6027\u3002\n\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f5c\u4e3a\u6784\u5efa\u548c\u6d4b\u8bd5card.starucks.com.sg\u5f53\u524d\u5f00\u53d1\u7684\u73af\u5883\u3002\n\u6216\u8005\u5b83\u53ef\u80fd\u5df2\u7ecf\u88ab\u7528\u4f5c\u65e7\u7684\u6d4b\u8bd5\u73af\u5883\uff0c\u5e76\u4e14\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u3002\n\u8fd9\u4e24\u79cd\u53ef\u80fd\u6027\u90fd\u589e\u52a0\u4e86\u8fd9\u91cc\u51fa\u73b0bug\u7684\u53ef\u80fd\u6027\uff0c\u4f46\u4e3b\u8981\u95ee\u9898\u662f\u6211\u4e0d\u77e5\u9053\u6211\u5728\u8fd9\u91cc\u627e\u5230\u7684bug\u662f\u5426\u4f1a\u5f71\u54cd\u751f\u4ea7\u73af\u5883\u3002\u4e3a\u4e86\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u6211\u5728card.starucks.com.sg\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u6237\u5e10\u6237\uff0c\u5e76\u5c1d\u8bd5\u7528\u8fd9\u4e2a\u5e10\u6237\u767b\u5f55Example.com/Starbucks\u3002\u5bf9\u5570!\u3002\u6211\u80fd\u591f\u7528\u6211\u521a\u521a\u521b\u5efa\u7684\u5e10\u6237\u6210\u529f\u767b\u5f55\u3002\u8fd9\u4e24\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4f3c\u4e4e\u4f7f\u7528\u76f8\u540c\u7684\u8eab\u4efd\u9a8c\u8bc1\u673a\u5236\u3002\n\u4ece\u90a3\u65f6\u8d77\uff0c\u6211\u6d4f\u89c8\u4e86Example.com/Starbucks\uff0c\u53d1\u73b0\u4e86\u4e00\u4e2a\u751f\u4ea7\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e0d\u5b58\u5728\u7684\u7aef\u70b9\u3002\u6b64\u7aef\u70b9\u6536\u5230\u7684POST\u6570\u636e\u5982\u4e0b\u6240\u793a\u3002\n\u5f53\u6211\u5728\u6b64\u5904\u7684\u7535\u5b50\u90ae\u4ef6\u53c2\u6570\u4e2d\u5199\u5165\u6211\u60f3\u63a5\u7ba1\u7684\u5e10\u6237\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u5e76\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u6211\u5728\u4e2a\u4eba\u8d44\u6599\u9875\u9762\u4e0a\u770b\u5230\u4e86\u5c5e\u4e8e\u8be5\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684\u5e10\u6237\u7684\u90e8\u5206\u4fe1\u606f\u3002\u6211\u8fd8\u65e0\u6cd5\u5b8c\u5168\u63a5\u7ba1\u5e10\u6237\uff0c\u6211\u7684\u5bc6\u7801\u66f4\u6539\u8bf7\u6c42\u4e5f\u6ca1\u6709\u6210\u529f\uff0c\u56e0\u4e3a\u6b64\u5e94\u7528\u7a0b\u5e8f\u4e2d\u751f\u6210\u4e86\u65e0\u6548\u7684CSRF\u4ee4\u724c\u3002\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eceexample.com/starbucks\u5c06PHPSESSID cookie\u503c\u590d\u5236\u5230card.starucks.com.sg\u548cboom\uff01\u6211\u80fd\u591f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u770b\u5230\u5c5e\u4e8e\u53d7\u5bb3\u8005\u7684\u6240\u6709\u4fe1\u606f\uff0c\u8fd9\u91cc\u751f\u6210\u7684\u6709\u6548CSRF\u4ee4\u724c\u5141\u8bb8\u6211\u66f4\u6539\u5bc6\u7801\uff0c\u5e76\u4e14\u6211\u80fd\u591f\u5b8c\u5168\u63a5\u7ba1\u6211\u77e5\u9053\u5176\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684\u5e10\u6237\u3002\n\u9664\u4e86\u67e5\u770b\u5c5e\u4e8e\u7528\u6237\u7684\u6240\u6709\u4e2a\u4eba\u4fe1\u606f\u5e76\u5b8c\u5168\u63a5\u7ba1\u8d26\u6237\u5916\uff0c\u5982\u679c\u7528\u6237\u8d26\u6237\u4e2d\u6709\u52a0\u8f7d\u7684\u79ef\u5206\uff0c\u8fd9\u4e9b\u79ef\u5206\u53ef\u4ee5\u901a\u8fc7\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u5728\u661f\u5df4\u514b\u95e8\u5e97\u6d88\u8d39\u3002\n\u6211\u5728Example.com\u4e0a\u9047\u5230\u4e86\u53e6\u5916\u4e24\u4e2a\u6d4b\u8bd5\u73af\u5883\u3002\u8ba9\u6211\u4eec\u79f0\u5b83\u4eec\u4e3aexample.com/starbacs2\u548cexample.com/starbacs3\u3002\u4f7f\u7528\u6211\u5728card.starucks.com.sg\u4e0a\u7684\u5e10\u6237\uff0c\u6211\u65e0\u6cd5\u767b\u5f55\u5230\u8fd9\u4e24\u4e2a\u6d4b\u8bd5\u73af\u5883\u3002Example.com/starbacs2\u4e0d\u5141\u8bb8\u6211\u521b\u5efa\u4e00\u4e2a\u65b0\u5e10\u6237\uff0c\u6240\u4ee5\u6211\u5728example.com/starbacs3\u4e0a\u78b0\u78b0\u8fd0\u6c14\uff0c\u6210\u529f\u5730\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u5e10\u6237\u3002\u4e8b\u60c5\u5728\u8fd9\u91cc\u53d8\u5f97\u6709\u70b9\u590d\u6742\uff0c\u6211\u4f1a\u5c3d\u91cf\u7b80\u5355\u5730\u89e3\u91ca\u3002\n\u6211\u8ba4\u4e3a\u5e94\u7528\u7a0b\u5e8fexample.com/starbacs2\u548cexample.com/starbacs3\u4f7f\u7528\u7684\u662f\u6d4b\u8bd5\u8868\uff0c\u56e0\u6b64\u751f\u4ea7\u4e2d\u7684\u7528\u6237\u65e0\u6cd5\u767b\u5f55\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u3002\n\u4f7f\u7528\u6211\u5728example.com/starucks3\u521b\u5efa\u7684\u5e10\u6237\uff0c\u6211\u53ef\u4ee5\u767b\u5f55\u5230example.com/starbacs2\uff0c\u4f46\u4e0d\u80fd\u767b\u5f55card.starucks.com.sg\u3002\u4f46\u662f\uff0c\u6211\u4eceexample.com/starbacs2\u590d\u5236\u7684PHPSESSID\u5728card.starucks.com.sg\u4e0a\u662f\u6709\u6548\u7684\uff0c\u6211\u53ef\u4ee5\u4f7f\u7528\u8be5\u5e10\u6237\u3002\u8003\u8651\u5230\u6240\u6709\u7684\u573a\u666f\uff0c\u6211\u5728\u8fd9\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a\u94fe\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u4f7f\u7528\u53d7\u5bb3\u8005\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740example.com/starbacs3\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u5e10\u6237\u3002(\u6dfb\u52a0\u5230\u6d4b\u8bd5\u7528\u6237\u8868\u4e2d\u3002)\u3002\n\u5728example.com/starbacs2\u4e0a\uff0c\u901a\u8fc7\u76f8\u540c\u7684\u7aef\u70b9\u5c06\u8be5\u7535\u5b50\u90ae\u4ef6\u7684\u5e10\u6237\u4e0e\u60a8\u81ea\u5df1\u7684\u5e10\u6237\u76f8\u5173\u8054\u3002(\u5c06PHPSESSID\u4e0eTESTUSERS\u8868\u4e2d\u7684\u7535\u5b50\u90ae\u4ef6\u76f8\u5173\u8054\u3002)\u3002\n\u5c06PHPSESSID\u590d\u5236\u5230card.starucks.com.sg\u5e76\u63a5\u7ba1\u3002(\u63a5\u7ba1\u751f\u4ea7\u7528\u6237\u8868\u4e2d\u540c\u4e00\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7684\u771f\u5b9e\u5e10\u6237\u3002)\u3002\n5\u670817\u65e5-5\u670818\u65e5\u63d0\u4ea4\u7684\u62a5\u544a-5\u670820\u65e5\u5206\u6d41-\u60ac\u8d4f4000\u7f8e\u51436\u670817\u65e5-\u60ac\u8d4f2000\u7f8e\u5143\u4f5c\u4e3a1.5\u500d\u7684\u500d\u6570", "note_en": "While browsing Starbucks Singapore, I noticed a page loaded with content from a 3rd party site. Let\u2019s call this site  example.com in order not to disclose it. When I did some research on this site, I saw the same login page on  card.starbucks.com.sg in the directory example.com/starbucks, and at this point I had two possibilities.\n This application can be an environment where current developments of  card.starbucks.com.sg are made and tested.\n Or it may have been used as an old test environment and is in an idle state.\n Both possibilities increased the probability of a bug here, but the main problem is that I did not know whether a bug I will find here would affect the production environment. To understand this, I created a user account at card.starbucks.com.sg and tried to log into example.com/starbucks with this account. BINGO! I was able to successfully login with the account I just created. Both applications seemed to be using the same authentication mechanism.\n   From this point I browsed example.com/starbucks and discovered an endpoint which does not exist in the production app. The POST data this endpoint received was as follows.\n  When I write the email address of the account I want to takeover in the email parameter here and send a request, I saw the partial information of the account belonging to that email address on my profile page. I could not fully takeover the account yet, and my password change request was not successful due to the invalid CSRF token generated in this application.\n To get around this, I copied the PHPSESSID cookie value from example.com/starbucks to card.starbucks.com.sg and BOOM! I was able to see all the information belongs to victim in the production environment, the valid CSRF tokens generated here allowed me to change the password and I was able to completely takeover an account whose e-mail address I know.\n  Except for seeing all personal information belonging to users and completely taking over the accounts, if there is a loaded credit in the user account, these credits can be spent in Starbucks stores via the mobile application.\n  I came across two other test environments on example.com. Let\u2019s call them  example.com/starbucks2 and  example.com/starbucks3. With my account at card.starbucks.com.sg, I was not able to login to either test environment. example.com/starbucks2 did not allow me to create a new account, so I tried my luck at example.com/starbucks3 and successfully created a new account. Things get a little complicated here, I will try to explain it as simply as possible.\n I think the applications example.com/starbucks2 and example.com/starbucks3 were using test tables, so users in production could not login in these applications.\n With the account I created at example.com/starbucks3, I was able to log in to example.com/starbucks2, but not card.starbucks.com.sg. However, the PHPSESSID I copied from example.com/starbucks2 was valid on card.starbucks.com.sg and I could use that account. Considering all the scenarios, I created a chain here as follows:\n Create a dummy account with the victim\u2019s email address at example.com/starbucks3. (Add to testusers table.)\n At example.com/starbucks2, associate the account for that email with your own account via the same endpoint. (Associate the PHPSESSID with the email in the testusers table.)\n Copy the PHPSESSID to card.starbucks.com.sg and takeover. (Takeover the real account of the same email address in the production users table.)\n  May 17th - Report Submitted May 18th - Triaged May 20th - Rewarded $4000 bounty Jun 17th - Rewarded $2000 bounty as 1.5x multiplier", "posttime": "2020-11-05 20:18:59", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u65b0\u52a0\u5761,takeover,\u5e10\u6237", "title": "\u661f\u5df4\u514b\u65b0\u52a0\u5761\u901a\u8fc7IDOR\u63a5\u7ba1\u8d26\u6237", "title_en": "Account Takeover via IDOR in Starbucks Singapore", "transed": 1, "url": "http://www.kamilonurozkaleli.com/posts/starbucks-singapore-account-takeover/", "via": "", "real_tags": ["\u65b0\u52a0\u5761", "takeover", "\u5e10\u6237"]}, {"category": "", "categoryclass": "", "imagename": "f3f4c846a400a3293473a5cb54c7313e.jpg", "infoid": 1033304, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u5468\u91cc\uff0cBBC\u5728\u7ebf\u5c06\u53d1\u5e03\u4e00\u7cfb\u5217\u5173\u4e8e\u5982\u4f55\u5229\u7528\u4e91\u8ba1\u7b97\u7b49\u65b9\u5f0f\u8fdb\u884c\u53d8\u9769\u7684\u5e16\u5b50\uff0c\u672c\u6587\u662f\u5176\u4e2d\u7684\u7b2c\u4e00\u7bc7\u3002\n\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6211\u4eecBBC\u7684\u8bbe\u8ba1+\u5de5\u7a0b\u56e2\u961f\u5df2\u7ecf\u5b8c\u5168\u91cd\u5efa\u4e86BBC\u7f51\u7ad9\u3002\u6211\u4eec\u5df2\u7ecf\u7528\u4e00\u4e2a\u4e3a\u4e91\u8bbe\u8ba1\u548c\u6784\u5efa\u7684\u65b0\u7f51\u7ad9\u53d6\u4ee3\u4e86\u6211\u4eec\u6570\u636e\u4e2d\u5fc3\u6258\u7ba1\u7684\u7f51\u7ad9\u3002\u4e3a\u8be5\u7f51\u7ad9\u63d0\u4f9b\u52a8\u529b\u7684\u5927\u591a\u6570\u5de5\u5177\u548c\u7cfb\u7edf\u4e5f\u5df2\u7ecf\u8f6c\u79fb\u3002\u6211\u4eec\u4f7f\u7528\u4e86\u73b0\u4ee3\u7684\u65b9\u6cd5\u548c\u6280\u672f\uff0c\u6bd4\u5982\u65e0\u670d\u52a1\u5668\u3002\u6211\u4eec\u5df2\u7ecf\u66f4\u65b0\u4e86\u8bbe\u8ba1\u3001\u65b9\u6cd5\u548c\u7f16\u8f91\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4e3a\u672a\u6765\u505a\u597d\u4e86\u51c6\u5907\u3002\u51e0\u5e74\u6765\uff0c\u5df2\u7ecf\u6709\u6570\u767e\u4eba\u5377\u5165\u5176\u4e2d\u3002\u5c31\u5feb\u5b8c\u6210\u4e86\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u662f\u5173\u4e8e\u4ec0\u4e48\u3001\u4e3a\u4ec0\u4e48\uff0c\u6700\u91cd\u8981\u7684\u662f\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u4e3a\u672a\u6765\u505a\u597d\u51c6\u5907\u7684\u65b0\u7f51\u7ad9\u7684\u51e0\u7bc7\u6587\u7ae0\u4e2d\u7684\u7b2c\u4e00\u7bc7\u3002\u5feb\u901f\u6709\u6548\u5730\u5b9e\u73b0\u9ad8\u8d28\u91cf\u7684\u6280\u672f\u53d8\u9769\u3002\nBBC\u7684\u7f51\u7ad9\u975e\u5e38\u5e9e\u5927\u3002\u8d85\u8fc7\u4e00\u534a\u7684\u82f1\u56fd\u4eba\u6bcf\u5468\u90fd\u4f1a\u4f7f\u7528\u5b83\u3002\u5168\u4e16\u754c\u8fd8\u6709\u6570\u5343\u4e07\u4eba\u5728\u4f7f\u7528\u5b83\u3002\u5b83\u670944\u79cd\u4e0d\u540c\u8bed\u8a00\u7684\u5185\u5bb9\u3002\u5b83\u63d0\u4f9b\u4e86200\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u9875\u9762-\u4ece\u8282\u76ee\u548c\u6587\u7ae0\uff0c\u5230\u6e38\u620f\u548c\u7f8e\u98df\u98df\u8c31\u3002\n\u5c31\u50cf\u79d1\u6280\u884c\u4e1a\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u5982\u679c\u4f60\u539f\u5730\u8e0f\u6b65\uff0c\u4f60\u5c31\u4f1a\u5012\u9000\u3002\u76f4\u5230\u6700\u8fd1\uff0cBBC\u7684\u5927\u90e8\u5206\u7f51\u7ad9\u90fd\u662f\u7528PHP\u7f16\u5199\u7684\uff0c\u6258\u7ba1\u5728\u4f26\u6566\u9644\u8fd1\u7684\u4e24\u4e2a\u6570\u636e\u4e2d\u5fc3\u3002\u5f53\u5b83\u57282010\u5e74\u95ee\u4e16\u65f6\uff0c\u8fd9\u662f\u4e00\u4e2a\u660e\u667a\u7684\u6280\u672f\u9009\u62e9\uff1b\u4f46\u73b0\u5728\u4e0d\u662f\u4e86\u3002\nBBC\u7684\u7f51\u7ad9\u7531\u51e0\u9879\u670d\u52a1\u7ec4\u6210(\u5982iPlayer\u3001\u58f0\u97f3\u3001\u65b0\u95fb\u548c\u4f53\u80b2)\u3002\u5bf9\u4ed6\u4eec\u6240\u6709\u4eba\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u4ed6\u4eec\u4f7f\u7528\u6700\u65b0\u548c\u6700\u597d\u7684\u6280\u672f\u3002\u8fd9\u662f\u786e\u4fdd\u4ed6\u4eec\u5728\u6240\u505a\u7684\u4e8b\u60c5\u4e0a\u505a\u5230\u6700\u597d\u7684\u552f\u4e00\u65b9\u6cd5\u3002\u5b83\u4eec\u90fd\u9700\u8981\u5728\u89c4\u6a21\u4e0a\u975e\u5e38\u53ef\u9760\uff0c\u800c\u4e14\u901f\u5ea6\u5feb\uff0c\u8bbe\u8ba1\u826f\u597d\uff0c\u800c\u4e14\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002\n\u56e0\u6b64\uff0c\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u6211\u4eec\u7684\u6218\u7565\u662f\u91cd\u5efaBBC\u5728\u7ebf\u3002\u51e0\u4e4e\u6bcf\u4e00\u4e2a\u90e8\u5206\u90fd\u662f\u5728\u4e91\u4e0a\u91cd\u5efa\u7684\u3002\u6211\u4eec\u5145\u5206\u5229\u7528\u4e86\u4e91\u5e26\u6765\u7684\u8bf8\u591a\u4f18\u52bf--\u4f8b\u5982\uff0c\u51e0\u4e4e\u53ef\u4ee5\u7acb\u5373\u7075\u6d3b\u5730\u63d0\u4f9b\u65b0\u670d\u52a1\u3002\u6211\u4eec\u8fd8\u4f7f\u7528\u4e86\u6700\u4f73\u5b9e\u8df5\u5de5\u5177\u548c\u6280\u672f--\u4f8b\u5982Reaction\u6846\u67b6\u548cDevOps\u6a21\u578b\u3002\u6211\u4eec\u7a0d\u540e\u5c06\u66f4\u591a\u5730\u4ecb\u7ecd\u8be5\u65b9\u6cd5\uff0c\u4f46\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u8ba8\u8bba\u4e00\u4e0b\u57fa\u672c\u539f\u5219\u3002\n\u91cd\u5efa\u4e00\u4e2a\u5e9e\u5927\u7684\u7f51\u7ad9\u5f88\u5bb9\u6613\u53d7\u5230\u7b2c\u4e8c\u79cd\u7cfb\u7edf\u6548\u5e94\u7684\u5f71\u54cd\u3002\u65b0\u9879\u76ee\u5f88\u5bb9\u6613\u5728\u9700\u6c42\u548c\u65b9\u6cd5\u4e0a\u8fc7\u4e8e\u96c4\u5fc3\u52c3\u52c3\u3002\u8ffd\u6c42\u5b8c\u7f8e\u4f7f\u4eba\u4eec\u5f88\u5bb9\u6613\u9009\u62e9\u6700\u590d\u6742\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4e0d\u662f\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6211\u4eec\u9700\u8981\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u4ee5\u786e\u4fdd\u7269\u6709\u6240\u503c\u3001\u6309\u90e8\u5c31\u73ed\u5730\u4ea4\u4ed8\u3002\u4ee5\u4e0b\u662f\u5e2e\u52a9\u6211\u4eec\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u4e00\u4e9b\u539f\u5219\u3002\n\u5728\u521b\u5efa\u50cfBBC Online\u8fd9\u6837\u5927\u7684\u7f51\u7ad9\u65f6\uff0c\u4ece\u96f6\u5f00\u59cb\u8003\u8651\u4e00\u5207\u53ef\u80fd\u5f88\u6709\u8bf1\u60d1\u529b\u3002\u8fd9\u6837\u505a\u63d0\u4f9b\u4e86\u6700\u5927\u7684\u63a7\u5236\u529b\uff0c\u800c\u4e14\u5343\u65b9\u767e\u8ba1\u3002\u4f46\u8fd9\u6837\u505a\u7684\u4ee3\u4ef7\u53ef\u80fd\u662f\u5de8\u5927\u7684\u3002\u73b0\u6210\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u53ea\u7ed9\u4f60\u60f3\u8981\u768490%\uff0c\u4f46\u5982\u679c\u80fd\u572810%\u7684\u65f6\u95f4\u5185\u4ea4\u4ed8\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u503c\u5f97\u7684\u6743\u8861\u3002\u8fd9\u9002\u7528\u4e8e\u79d1\u6280\u3001\u7528\u6237\u4f53\u9a8c\u3001\u5546\u4e1a\u5206\u6790\uff0c\u4ee5\u53ca\u51e0\u4e4e\u6240\u6709\u5176\u4ed6\u9886\u57df\u3002\u5927\u591a\u6570\u95ee\u9898\u5df2\u7ecf\u5728\u522b\u5904\u89e3\u51b3\u4e86\uff0c\u6240\u4ee5\u4e0d\u8981\u518d\u89e3\u51b3\u4e86\u3002\n\u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u6280\u672f\u4f8b\u5b50\u662f\u4f7f\u7528\u65e0\u670d\u52a1\u5668\u3002\u82f1\u56fd\u5e7f\u64ad\u516c\u53f8\u5927\u7ea6\u4e00\u534a\u7684\u7f51\u7ad9\u662f\u901a\u8fc7AWS Lambda\u63d0\u4f9b\u7684\u65e0\u670d\u52a1\u5668\u670d\u52a1\u3002\u7ba1\u7406\u865a\u62df\u673a(\u6216\u5bb9\u5668)\u6210\u672c\u9ad8\u6602\uff0c\u4fdd\u6301\u5b83\u4eec\u7684\u5b89\u5168\u6027\u3001\u53ef\u9760\u6027\u548c\u53ef\u6269\u5c55\u6027\u9700\u8981\u65f6\u95f4\u3002\u65e0\u670d\u52a1\u5668\u57fa\u672c\u4e0a\u4e3a\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u5176\u4ed6\u5730\u65b9\u89e3\u51b3\u7684\u95ee\u9898\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5e94\u8be5\u81ea\u5df1\u52a8\u624b\u3002\n\u5f53\u56e2\u961f\u4f17\u591a\u65f6\uff0c\u91cd\u590d\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002\u4e24\u4e2a\u56e2\u961f\u5c06\u5404\u81ea\u9047\u5230\u76f8\u540c\u7684\u95ee\u9898\uff0c\u5e76\u521b\u5efa\u81ea\u5df1\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u8fd9\u662f\u597d\u7684--\u56e2\u961f\u5e94\u8be5\u88ab\u6388\u6743\u62e5\u6709\u5e76\u89e3\u51b3\u4ed6\u4eec\u7684\u6311\u6218\u3002\u4f46\u5982\u679c\u4e0d\u52a0\u4ee5\u68c0\u67e5\uff0c\u5b83\u53ef\u80fd\u4f1a\u521b\u5efa\u591a\u4e2a\u4e0d\u517c\u5bb9\u4e14\u7ef4\u62a4\u6210\u672c\u9ad8\u6602\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u968f\u7740\u6211\u4eec\u91cd\u5efaBBC\u5728\u7ebf\uff0c\u6211\u4eec\u6d88\u9664\u4e86\u591a\u5e74\u6765\u79ef\u7d2f\u7684\u5927\u91cf\u91cd\u590d\u548c\u5dee\u5f02\u3002\u591a\u4e2a\u5b9a\u5236\u7cfb\u7edf\u5df2\u88ab\u4e00\u4e2a\u901a\u7528\u7cfb\u7edf\u53d6\u4ee3\u3002\u8fd9\u662f\u4e00\u4e2a\u53cc\u8d62\uff0c\u56e0\u4e3a\u9664\u4e86\u66f4\u9ad8\u6548(\u66f4\u4fbf\u5b9c)\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u8ba9\u65b0\u7684\u5355\u4e00\u65b9\u6cd5\u6bd4\u591a\u4e2a\u65e7\u65b9\u6cd5\u66f4\u597d\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0cBBC\u7f51\u7ad9\u73b0\u5728\u7684\u6027\u80fd\u548c\u53ef\u8bbf\u95ee\u6027\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u8981\u597d\u3002\n\u7136\u800c\uff0c\u6211\u4eec\u5fc5\u987b\u8b66\u60d5\u8fc7\u4e8e\u7b80\u5355\u5316\u3002\u4ece\u4e1a\u52a1\u89d2\u5ea6\u6765\u770b\uff0c\u7528\u4e00\u4e2a\u7cfb\u7edf\u53d6\u4ee3\u591a\u4e2a\u7cfb\u7edf\u770b\u8d77\u6765\u5f88\u68d2\u3002\u4f46\u8f6f\u4ef6\u590d\u6742\u6027\u5448\u6307\u6570\u7ea7\u589e\u957f\uff1a\u6bcf\u4e00\u9879\u65b0\u529f\u80fd\u7684\u6210\u672c\u90fd\u9ad8\u4e8e\u524d\u4e00\u9879\u3002\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u5730\u6b65\uff0c\u4e24\u4e2a\u7b80\u5355\u7684\u7cfb\u7edf\u603b\u6bd4\u4e00\u4e2a\u590d\u6742\u7684\u7cfb\u7edf\u8981\u597d\u3002\n\u4f8b\u5982\uff0c\u6211\u4eec\u9009\u62e9\u5c06BBC\u7684\u4e16\u754c\u670d\u52a1\u7f51\u7ad9\u4e0e\u4e3b\u8981\u7684\u82f1\u8bedBBC\u7f51\u7ad9\u5206\u5f00\u3002\u4e16\u754c\u670d\u52a1\u7684\u9700\u6c42(\u5982\u5728\u6076\u52a3\u7684\u7f51\u7edc\u6761\u4ef6\u4e0b\u6b63\u5e38\u5de5\u4f5c)\u975e\u5e38\u4e13\u4e1a\uff0c\u8db3\u4ee5\u4fdd\u8bc1\u9700\u8981\u5355\u72ec\u7684\u89e3\u51b3\u65b9\u6848\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u66f4\u7b80\u5355\u7684\u7f51\u7ad9\u6bd4\u4e00\u4e2a\u590d\u6742\u7684\u7f51\u7ad9\u8981\u597d\u3002\n\u82f1\u6587\u7ad9\u70b9(\u5de6)\u548c\u4e16\u754c\u670d\u52a1\u7ad9\u70b9(\u53f3)\u7684\u6e32\u67d3\u662f\u5206\u5f00\u7684\uff0c\u4ee5\u907f\u514d\u4f7f\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u8fc7\u4e8e\u590d\u6742\u3002\n\u521b\u5efa\u4e00\u4e2a\u65b0\u7684BBC\u7f51\u7ad9\u6d89\u53ca\u5230\u8bb8\u591a\u56e2\u961f\u3002\u4e3a\u4e86\u53d6\u5f97\u6210\u529f\uff0c\u6211\u4eec\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9700\u8981\u8fd9\u4e9b\u56e2\u961f\u7684\u8054\u5408\u548c\u534f\u4f5c\u3002\u5426\u5219\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u521b\u9020\u51fa\u6bd4\u5404\u90e8\u5206\u4e4b\u548c\u8fd8\u5c0f\u7684\u4e1c\u897f\u3002\n\u6c9f\u901a\u7684\u4ef7\u503c\u600e\u4e48\u5f3a\u8c03\u90fd\u4e0d\u4e3a\u8fc7\u3002\u6ca1\u6709\u5b83\uff0c\u56e2\u961f\u5c31\u65e0\u6cd5\u7406\u89e3\u4ed6\u4eec\u7684\u5de5\u4f5c\u5982\u4f55\u4e0e\u5176\u4ed6\u56e2\u961f\u7684\u5de5\u4f5c\u76f8\u9002\u5e94\u3002\u5982\u679c\u6ca1\u6709\u8fd9\u79cd\u7406\u89e3\uff0c\u4ed6\u4eec\u5c31\u770b\u4e0d\u5230\u5206\u4eab\u548c\u7ed3\u76df\u7684\u673a\u4f1a\u3002\u56e2\u961f\u751a\u81f3\u53ef\u80fd\u5f00\u59cb\u76f8\u4e92\u4e0d\u4fe1\u4efb\u3002\n\u6c9f\u901a\u5e26\u6765\u7406\u89e3\uff0c\u8fd9\u8ba9\u6587\u5316\u5f97\u4ee5\u6539\u53d8\u3002\u56e2\u961f\u4e0d\u662f\u5b64\u7acb\u5730\u505a\u81ea\u5df1\u7684\u4e8b\u60c5\uff0c\u800c\u662f\u81ea\u7136\u5730\u5171\u4eab\u3001\u534f\u4f5c\u548c\u7075\u6d3b\u5730\u6ee1\u8db3\u5f7c\u6b64\u7684\u9700\u6c42\u3002\u4ed6\u4eec\u8d85\u8d8a\u4e86\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u56e2\u961f\u804c\u8d23\uff0c\u56e0\u4e3a\u4ed6\u4eec\u77e5\u9053\u5176\u4ed6\u4eba\u4e5f\u4f1a\u8fd9\u6837\u505a\u3002\u8fd9\u6700\u7ec8\u4e3a\u6bcf\u4e2a\u4eba\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u8fd1\u51e0\u4e2a\u6708\u6765\uff0c\u6211\u7ecf\u5e38\u542c\u5230\u56e2\u961f\u8bf4\u2018\u53e6\u4e00\u4e2a\u56e2\u961f\u5f88\u5fd9\uff0c\u6211\u4eec\u6b63\u5728\u5e2e\u52a9\u4ed6\u4eec\u6446\u8131\u56f0\u5883\u2019\uff0c\u6216\u8005\u2018\u6211\u4eec\u6b63\u5728\u8ba9\u6211\u4eec\u7684\u6280\u672f\u9009\u62e9\u4e0e\u5176\u4ed6\u56e2\u961f\u4fdd\u6301\u4e00\u81f4\u2019\u3002\u8fd9\u662f\u6211\u4ee5\u524d\u4ece\u672a\u89c1\u8fc7\u7684\u5408\u4f5c\u6c34\u5e73\u3002\u901a\u8fc7\u4e86\u89e3\u66f4\u5927\u7684\u56fe\u666f\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u4eba\u5982\u4f55\u626e\u6f14\u81ea\u5df1\u7684\u89d2\u8272\uff0c\u6211\u4eec\u521b\u9020\u4e86\u4e00\u79cd\u7a0b\u5ea6\u7684\u4fe1\u4efb\u548c\u7ed3\u76df\uff0c\u8fd9\u662f\u4e00\u79cd\u4ee4\u4eba\u6b23\u559c\u7684\u770b\u5230\u3002\n\u8fd9\u5f20\u201c\u6d0b\u8471\u56fe\u201d\u5e2e\u52a9\u89e3\u91ca\u4e86\u5171\u540c\u5173\u5fc3\u7684\u95ee\u9898\u548c\u80fd\u529b(\u5728\u4e2d\u95f4)\u5e94\u8be5\u5982\u4f55\u4e00\u6b21\u89e3\u51b3\u3002\u8fd9\u5c31\u89e3\u653e\u4e86\u56e2\u961f\uff0c\u8ba9\u4ed6\u4eec\u53ef\u4ee5\u5728\u5916\u73af\u4e0a\u8fdb\u884c\u66f4\u4e13\u4e1a\u7684\u5de5\u4f5c\u3002\n\u5373\u4f7f\u6709\u5f88\u597d\u7684\u6587\u5316\u548c\u6c9f\u901a\uff0c\u591a\u4e2a\u56e2\u961f\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u8d70\u5230\u4e00\u8d77\u6765\u6784\u5efa\u6b63\u786e\u7684\u4e1c\u897f\u3002\u5f53\u7136\uff0c\u8fd9\u5c31\u662f\u88ab\u5e7f\u6cdb\u5f15\u7528\u7684\u5eb7\u5a01\u5b9a\u5f8b\u3002\n\u201c\u8bbe\u8ba1\u7cfb\u7edf\u7684\u7ec4\u7ec7[\u2026]\u3002\u88ab\u9650\u5236\u4e3a\u590d\u5236\u8fd9\u4e9b\u7ec4\u7ec7\u7684\u6c9f\u901a\u7ed3\u6784\u7684\u8bbe\u8ba1\u3002\u201c\u3002\u6885\u5c14\u6587\u00b7\u5eb7\u5a01\u3002\nBBC\u5386\u6765\u6709\u4e0d\u540c\u7684\u7f51\u7ad9--\u65b0\u95fb\u7f51\u7ad9\u3001\u4f53\u80b2\u7f51\u7ad9\u7b49\u7b49\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u56e2\u961f\u3002\u8981\u6539\u53d8\u8fd9\u4e00\u70b9\uff0c\u5efa\u7acb\u4e00\u4e2a\u7f51\u7ad9\uff0c\u6211\u4eec\u9700\u8981\u91cd\u7ec4\u3002\u4f46\u600e\u4e48\u505a\u5462\uff1f\u4e00\u4e2a\u5e9e\u5927\u7684\u56e2\u961f\u662f\u884c\u4e0d\u901a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u56e2\u961f\u5206\u6210\u4e86\u6700\u6709\u6548\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u4e3a\u6bcf\u4e2a\u9875\u9762\u7684\u201c\u7c7b\u578b\u201d\u521b\u5efa\u4e86\u56e2\u961f--\u4e3b\u9875\u3001\u6587\u7ae0\u9875\u9762\u3001\u89c6\u9891\u9875\u9762\u7b49\u7b49\u3002\u6211\u4eec\u8fd8\u521b\u5efa\u4e86\u56e2\u961f\u6765\u5904\u7406\u5171\u540c\u7684\u95ee\u9898--\u6bd4\u5982\u7f51\u7ad9\u662f\u5982\u4f55\u5f00\u53d1\u548c\u6258\u7ba1\u7684\u3002\u603b\u800c\u8a00\u4e4b\uff0c\u5b83\u5c06\u91cd\u53e0\u548c\u91cd\u590d\u964d\u81f3\u6700\u4f4e\uff0c\u5e76\u5141\u8bb8\u6bcf\u4e2a\u56e2\u961f\u62e5\u6709\u5e76\u6210\u4e3a\u5404\u81ea\u9886\u57df\u7684\u4e13\u5bb6\u3002\n\u5728\u8bbe\u8ba1\u5927\u578b\u8f6f\u4ef6\u7cfb\u7edf\u65f6\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u5fae\u5999\u7684\u5e73\u8861\u70b9\u3002\u6211\u4eec\u5fc5\u987b\u89c4\u5212\u672a\u6765\uff0c\u8fd9\u6837\u6211\u4eec\u65e2\u80fd\u6ee1\u8db3\u4eca\u5929\u7684\u9700\u6c42\uff0c\u4e5f\u80fd\u6ee1\u8db3\u660e\u5929\u7684\u9700\u6c42\u3002\u4f46\u6211\u4eec\u4e5f\u4e0d\u60f3\u8fc7\u5ea6\u8bbe\u8ba1\u3002\u6211\u4eec\u4e0d\u80fd\u786e\u5b9a\u672a\u6765\u4f1a\u5e26\u6765\u4ec0\u4e48\u3002\u8981\u6c42\u5c06\u4f1a\u6539\u53d8\u3002\u4e91\u63d0\u4f9b\u5546\u5c06\u63d0\u4f9b\u65b0\u6280\u672f\u3002\u4e16\u754c--\u5c24\u5176\u662f\u79d1\u6280\u4e16\u754c--\u7684\u53d8\u5316\u901f\u5ea6\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u8981\u5feb\u3002\n\u597d\u7684\u5206\u6790\u3001\u89c4\u5212\u548c\u8f6f\u4ef6\u8bbe\u8ba1\u662f\u4e0d\u53ef\u66ff\u4ee3\u7684\u3002\u7814\u7a76\u53ef\u7528\u7684\u673a\u4f1a\u548c\u9009\u62e9\u662f\u786e\u4fdd\u9879\u76ee\u671d\u7740\u6b63\u786e\u65b9\u5411\u53d1\u5c55\u7684\u5173\u952e\u3002\u4f46\u6211\u4eec\u5fc5\u987b\u62b5\u5236\u8fc7\u5ea6\u601d\u8003\u89e3\u51b3\u65b9\u6848\u7684\u5371\u9669\uff0c\u56e0\u4e3a\u5b83\u53ef\u80fd\u662f\u4e3a\u4e86\u4e00\u4e2a\u6c38\u8fdc\u4e0d\u4f1a\u5230\u6765\u7684\u672a\u6765\u3002\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u7684\u7f8e\u5999\u4e4b\u5904\u5728\u4e8e\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u524d\u8fdb\u7684\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u5e76\u9002\u5e94\u6311\u6218\u3002\u5546\u4e1a\u8ba1\u5212\u548c\u67b6\u6784\u4e5f\u9700\u8981\u6839\u636e\u6211\u4eec\u5728\u9879\u76ee\u53d1\u5c55\u8fc7\u7a0b\u4e2d\u6240\u5b66\u5230\u7684\u4e1c\u897f\u800c\u53d1\u5c55\u3002\u5728\u4f60\u786e\u5b9a\u95ee\u9898\u786e\u5b9e\u5b58\u5728\u4e4b\u524d\uff0c\u4e0d\u8981\u89e3\u51b3\u95ee\u9898\u3002\n\u5728\u4e0a\u8ff0\u57fa\u7840\u4e0a\u6269\u5927\uff0c\u6211\u4eec\u5fc5\u987b\u6ce8\u610f\u4e0d\u8981\u592a\u5feb\u4f18\u5316\u3002\u5927\u578b\u8f6f\u4ef6\u9879\u76ee\u5728\u67d0\u4e00\u65f6\u523b\u4e0d\u53ef\u907f\u514d\u5730\u4f1a\u9047\u5230\u6027\u80fd\u95ee\u9898\u3002\u5f88\u96be\u9884\u6d4b\u8fd9\u4e9b\u95ee\u9898\u5c06\u5728\u4f55\u65f6\u4ee5\u53ca\u5982\u4f55\u51fa\u73b0\u3002\u6240\u4ee5\uff0c\u4e0d\u8981\u8fd9\u4e48\u505a\u3002\u53ea\u6709\u5f53\u6027\u80fd\u95ee\u9898\u6210\u4e3a\u73b0\u5b9e\u65f6\uff0c\u624d\u80fd\u5229\u7528\u654f\u6377\u5f00\u53d1\u7684\u597d\u5904\u6765\u5e94\u5bf9\u8fd9\u4e9b\u95ee\u9898\u3002\n\u5982\u4e0a\u6240\u8ff0\uff0c\u5f88\u591aBBC\u7f51\u7ad9\u73b0\u5728\u90fd\u4f7f\u7528AWS Lambda\u8fdb\u884c\u65e0\u670d\u52a1\u5668\u6e32\u67d3\u3002\u5728\u9879\u76ee\u5f00\u59cb\u65f6\uff0c\u6211\u4eec\u6000\u7591Lambda\u80fd\u591f\u4ee5\u591a\u5feb\u7684\u901f\u5ea6\u5927\u89c4\u6a21\u5448\u73b0\u7f51\u9875\u3002\u6211\u4eec\u8ba1\u5212\u4e86\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u4f46\u6700\u7ec8\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5b83\u3002\u4f7f\u7528\u65e0\u670d\u52a1\u5668\u7684\u6027\u80fd\u4e00\u76f4\u975e\u5e38\u51fa\u8272\u3002\u7531\u4e8e\u6ca1\u6709\u8fc7\u65e9\u4f18\u5316\uff0c\u6211\u4eec\u8282\u7701\u4e86\u5927\u91cf\u7684\u7cbe\u529b\u3002\n\u201c\u4e00\u4e2a\u8fd0\u884c\u826f\u597d\u7684\u590d\u6742\u7cfb\u7edf\u603b\u662f\u88ab\u53d1\u73b0\u662f\u4ece\u4e00\u4e2a\u8fd0\u884c\u826f\u597d\u7684\u7b80\u5355\u7cfb\u7edf\u6f14\u53d8\u800c\u6765\u7684\u3002\u201d\u4e00\u4e2a\u4ece\u96f6\u5f00\u59cb\u8bbe\u8ba1\u7684\u590d\u6742\u7cfb\u7edf\u6c38\u8fdc\u4e0d\u4f1a\u5de5\u4f5c\uff0c\u4e5f\u4e0d\u80fd\u901a\u8fc7\u4fee\u8865\u6765\u4f7f\u5176\u5de5\u4f5c\u3002\u4f60\u5fc5\u987b\u4ece\u4e00\u4e2a\u8fd0\u884c\u7b80\u5355\u7684\u7cfb\u7edf\u5f00\u59cb\u3002\u201c\u3002\u7ea6\u7ff0\u00b7\u52a0\u5c14\u3002\n\u4ece\u73b0\u6709\u7cfb\u7edf\u4e2d\u53bb\u9664\u590d\u6742\u6027\u662f\u5f88\u96be\u7684\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6709\u591a\u4e2a\u60f3\u8981\u5408\u5e76\u7684\u590d\u6742\u7f51\u7ad9\u3002\u8fd9\u4e9b\u7ad9\u70b9\u7684\u96c6\u4f53\u9700\u6c42\u4f1a\u4f7f\u4efb\u4f55\u4e00\u4e2a\u7cfb\u7edf\u8d85\u8f7d\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u91cd\u65b0\u5f00\u59cb\uff0c\u56de\u5230\u9700\u8981\u4ec0\u4e48\u5171\u540c\u80fd\u529b\u7684\u57fa\u7840\u4e0a\u3002\n\u6700\u540e\uff0c\u4e00\u4e2a\u975e\u5e38\u5b9e\u7528\u7684\u539f\u5219\uff1a\u786e\u4fdd\u4f60\u80fd\u591f\u5feb\u901f\u884c\u52a8\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u5b66\u4e60\u548c\u9002\u5e94\u3002\u63d0\u524d\u53d1\u5e03\uff0c\u5e76\u4e14\u7ecf\u5e38\u53d1\u5e03--\u5373\u4f7f\u5b83\u53ea\u9762\u5411\u4e00\u5c0f\u90e8\u5206\u89c2\u4f17\u3002\u6b63\u5982\u524d\u9762\u6240\u8ba8\u8bba\u7684\uff0c\u9884\u6d4b\u672a\u6765\u662f\u51fa\u4e86\u540d\u7684\u96be\u3002\u4e86\u89e3\u672a\u6765\u7684\u6700\u597d\u65b9\u5f0f\u662f\u66f4\u5feb\u5730\u5230\u8fbe\u90a3\u91cc\u3002\n\u4e0e\u6b64\u76f8\u53cd\u7684\u8bba\u70b9\u662f\uff0c\u53d8\u5316\u5e26\u6765\u98ce\u9669\u3002\u5bf9\u4e8e\u50cfBBC Online\u8fd9\u6837\u5e7f\u53d7\u6b22\u8fce\u7684\u670d\u52a1\u6765\u8bf4\uff0c\u53ef\u9760\u6027\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002BBC\u4e00\u76f4\u6709\u4e00\u4e2a\u5f3a\u5927\u7684\u8fd0\u8425\u6d41\u7a0b(\u5305\u62ec\u5168\u5929\u5019\u7ba1\u7406\u670d\u52a1\u7684\u56e2\u961f\uff0c\u4ee5\u53ca\u786e\u4fdd\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\u4e5f\u8d1f\u8d23\u7ef4\u62a4\u670d\u52a1\u7684DevOps\u65b9\u6cd5)\u3002\u6211\u4eec\u7ee7\u7eed\u5728\u8fd9\u4e00\u9886\u57df\u8fdb\u884c\u6295\u8d44\uff0c\u65b0\u7684\u56e2\u961f\u4e13\u6ce8\u4e8e\u57fa\u7840\u8bbe\u65bd\u548c\u5f00\u53d1\u8005\u4f53\u9a8c(DevX)\u3002\u6211\u4eec\u5c06\u5728\u672a\u6765\u7684\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u70b9\u3002\n\u5c06\u4e0a\u8ff0\u539f\u5219\u4ed8\u8bf8\u5b9e\u8df5\uff0c\u4e0b\u9762\u662fBBC\u7f51\u7ad9\u5982\u4f55\u8fd0\u4f5c\u7684\u8d85\u9ad8\u6982\u8ff0\u3002\n\u9996\u5148\uff0c\u6240\u6709\u524d\u5f80www.bbc.co.uk\u6216www.bbc.com\u7684\u6d41\u91cf\u90fd\u4f1a\u5230\u8fbe\u5168\u7403\u6d41\u91cf\u7ba1\u7406\u5668(GTM)\u3002\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eNginx\u7684\u5185\u90e8\u4ea4\u901a\u7ba1\u7406\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u6bcf\u79d2\u5904\u7406\u6570\u4ee5\u4e07\u8ba1\u7684\u8bf7\u6c42\u3002\u7531\u4e8e\u5176\u89c4\u6a21\u548c\u63d0\u4f9b\u6781\u4f4e\u5ef6\u8fdf\u7684\u9700\u8981\uff0c\u5b83\u90e8\u5206\u4f4d\u4e8e\u6211\u4eec\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\uff0c\u90e8\u5206\u4f4d\u4e8eAWS\u3002\n\u5bf9\u4e8e\u6211\u4eec\u7f51\u7ad9\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u6709\u65f6\u4f1a\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u6d41\u91cf\u7ba1\u7406\u5c42\u3002(\u5728\u5185\u90e8\uff0c\u5b83\u4eec\u88ab\u79f0\u4e3a\u83ab\u624e\u7279\u548c\u8d1d\u5c14\u5f17\u62c9\u683c)\u3002\u8fd9\u4e9b\u670d\u52a1\u6258\u7ba1\u5728AWS EC2\u4e0a\uff0c\u6bcf\u79d2\u5904\u7406\u7ea610,000\u4e2a\u8bf7\u6c42\u3002\u5b83\u4eec\u63d0\u4f9b\u7f13\u5b58\u3001\u8def\u7531\u548c\u8d1f\u8f7d\u5e73\u8861\u3002\u5b83\u4eec\u8fd8\u5728\u4fdd\u6301\u7f51\u7ad9\u5f39\u6027\u65b9\u9762\u53d1\u6325\u4e86\u5173\u952e\u4f5c\u7528\uff0c\u5b83\u4eec\u53ef\u4ee5\u53d1\u73b0\u9519\u8bef\uff0c\u201c\u670d\u52a1\u8fc7\u65f6\u201d\uff0c\u5e76\u540e\u9000\u4ee5\u5141\u8bb8\u5e95\u5c42\u7cfb\u7edf\u4ece\u6545\u969c\u4e2d\u6062\u590d\u3002\nBBC\u7684\u7edd\u5927\u591a\u6570\u7f51\u9875\u90fd\u662f\u4f7f\u7528REACT\u5728AWS\u4e0a\u5448\u73b0\u7684\u3002Reaction\u7684\u540c\u6784\u7279\u6027\u5141\u8bb8\u6211\u4eec\u5728\u670d\u52a1\u5668\u7aef\u5448\u73b0\u9875\u9762(\u4ee5\u83b7\u5f97\u6700\u4f73\u6027\u80fd)\uff0c\u7136\u540e\u5728\u5ba2\u6237\u7aef\u8fdb\u884c\u4e00\u4e9b\u8fdb\u4e00\u6b65\u7684\u66f4\u65b0\u3002\n\u8d8a\u6765\u8d8a\u591a\u7684\u6e32\u67d3\u53d1\u751f\u5728AWS Lambda\u4e0a\u3002\u5927\u7ea6\u67092000\u4e2aLambdas\u6bcf\u79d2\u8fd0\u884c\u6765\u521b\u5efaBBC\u7f51\u7ad9\uff1b\u6211\u4eec\u9884\u8ba1\u8fd9\u4e2a\u6570\u5b57\u8fd8\u4f1a\u589e\u52a0\u3002\u5982\u524d\u6240\u8ff0\uff0c\u65e0\u670d\u52a1\u5668\u6d88\u9664\u4e86\u8fd0\u8425\u548c\u7ef4\u62a4\u6210\u672c\u3002\u800c\u4e14\u5b83\u7684\u4f38\u7f29\u901f\u5ea6\u8981\u5feb\u5f97\u591a\u3002\u5f53\u53d1\u751f\u7a81\u53d1\u65b0\u95fb\u4e8b\u4ef6\u65f6\uff0c\u6211\u4eec\u7684\u6d41\u91cf\u6c34\u5e73\u4f1a\u77ac\u95f4\u98d9\u5347\uff1bLambda\u80fd\u591f\u4ee5EC2\u81ea\u52a8\u4f38\u7f29\u65e0\u6cd5\u5904\u7406\u7684\u65b9\u5f0f\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u3002\n\u4e00\u4e2a\u540d\u4e3aWebCore\u7684\u65b0\u5185\u90e8\u9879\u76ee\u4e3a\u521b\u5efaBBC\u7f51\u7ad9\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u6807\u51c6\u65b9\u5f0f\u3002\u5b83\u662f\u56f4\u7ed5\u901a\u7528\u529f\u80fd\u6784\u5efa\u7684(\u6bd4\u5982\u4e00\u7bc7\u6587\u7ae0\u3001\u4e00\u4e2a\u4e3b\u9875\u548c\u4e00\u4e2a\u89c6\u9891\u9875\u9762)\u3002\u5b83\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5355\u4e00\u8ba2\u5355\u521b\u5efa\u7684\uff0c\u76ee\u7684\u662f\u6700\u5927\u9650\u5ea6\u5730\u589e\u52a0\u5206\u4eab\u7684\u673a\u4f1a\uff0c\u5e76\u4f7f\u5347\u7ea7(\u4f8b\u5982\u5347\u7ea7\u5230Reaction\u7248\u672c)\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u901a\u8fc7\u4e13\u6ce8\u4e8e\u521b\u5efa\u4e00\u4e2a\u7ad9\u70b9\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u591a\u4e2a\u7ad9\u70b9\uff0c\u6211\u4eec\u770b\u5230\u4e86\u6027\u80fd\u3001\u53ef\u9760\u6027\u548cSEO\u65b9\u9762\u7684\u663e\u8457\u6539\u8fdb\u3002\n\u627e\u51fa\u4e0d\u540c\u4e4b\u5904\uff1a\u5c06\u65e7\u9875\u9762(\u5de6)\u4e0e\u57fa\u4e8e\u4e91\u7684\u65b0\u7248\u672c(\u53f3)\u8fdb\u884c\u6bd4\u8f83\u3002\u8fd9\u4e9b\u6570\u5b57\u662f\u706f\u5854\u8868\u6f14\u5f97\u5206\u3002\n\u6b63\u5982\u524d\u9762\u6240\u8ba8\u8bba\u7684\uff0c\u6211\u4eec\u5c06\u6211\u4eec\u7684\u4e16\u754c\u670d\u52a1\u7f51\u7ad9\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u5b9e\u73b0\u6765\u4fdd\u7559\uff0c\u8fd9\u6837\u5b83\u5c31\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u6ee1\u8db3\u5168\u7403\u4e0d\u540c\u53d7\u4f17\u7684\u6311\u6218\u3002(\u8fd9\u4e2a\u540d\u4e3aSimorgh\u7684\u9879\u76ee\u662f\u5f00\u6e90\u7684\uff0c\u53ef\u4ee5\u5728GitHub\u4e0a\u83b7\u5f97\u3002)\u3002\u6211\u4eec\u7684iPlayer\u548cSound\u7f51\u7ad9\u4e5f\u662f\u5206\u5f00\u7684\uff0c\u5c3d\u7ba1\u4ecd\u6709\u76f8\u5f53\u6570\u91cf\u7684\u5171\u4eab(\u4f8b\u5982\uff0c\u5728\u7f51\u7edc\u3001\u641c\u7d22\u548c\u5e95\u5c42\u6570\u636e\u5b58\u50a8\u7b49\u9886\u57df)\u3002\n\u6e32\u67d3\u5c42\u53ea\u5173\u6ce8\u8868\u793a\u3002\u5173\u4e8e\u83b7\u53d6\u548c\u7406\u89e3\u5185\u5bb9\u7684\u903b\u8f91\u66f4\u597d\u5730\u653e\u5728\u201c\u4e1a\u52a1\u5c42\u201d\u4e2d\u3002\u5b83\u7684\u5de5\u4f5c\u662f\u5411\u7f51\u7ad9\u6e32\u67d3\u5c42\u63d0\u4f9b(RESTful)API\uff0c\u5176\u4e2d\u5305\u542b\u521b\u5efa\u9875\u9762\u6240\u9700\u7684\u6b63\u786e\u5185\u5bb9\u3002BBC\u7684\u5e94\u7528\u7a0b\u5e8f\u4e5f\u4f7f\u7528\u8fd9\u4e2aAPI\uff0c\u4ee5\u83b7\u5f97\u540c\u6837\u7684\u597d\u5904\u3002\nBBC\u6709\u5404\u79cd\u5404\u6837\u7684\u5185\u5bb9\u7c7b\u578b(\u6bd4\u5982\u8282\u76ee\u3001Bitesize\u4fee\u8ba2\u6307\u5357\u3001\u5929\u6c14\u9884\u62a5\u7b49\u7b49)\u3002\u6bcf\u4e00\u4e2a\u90fd\u6709\u4e0d\u540c\u7684\u6570\u636e\uff0c\u9700\u8981\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u3002\u4e3a\u6bcf\u79cd\u5185\u5bb9\u7c7b\u578b\u521b\u5efa\u51e0\u5341\u4e2a\u72ec\u7acb\u7684\u7cfb\u7edf\u662f\u6602\u8d35\u7684\u3002\u5b83\u4eec\u4e0d\u4ec5\u9700\u8981\u6b63\u786e\u7684\u903b\u8f91\uff0c\u800c\u4e14\u8fd8\u9700\u8981\u53ef\u9760\u3001\u89c4\u6a21\u5316\u548c\u5b89\u5168\u5730\u8fd0\u884c\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u6218\u7565\u7684\u4e00\u4e2a\u5173\u952e\u90e8\u5206\u662f\u7b80\u5316\u521b\u5efa\u4e1a\u52a1\u5c42\u7684\u8fc7\u7a0b\u3002\u79f0\u4e3a\u5feb\u901f\u4e0d\u53ef\u77e5\u4e1a\u52a1\u5c42(FABL)\u7684\u5185\u90e8\u7cfb\u7edf\u5141\u8bb8\u4e0d\u540c\u7684\u56e2\u961f\u521b\u5efa\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u800c\u65e0\u9700\u62c5\u5fc3\u89c4\u6a21\u5316\u8fd0\u8425\u7684\u6311\u6218\u3002\u8bbf\u95ee\u63a7\u5236\u3001\u76d1\u63a7\u3001\u7f29\u653e\u548c\u7f13\u5b58\u7b49\u95ee\u9898\u90fd\u4ee5\u5355\u4e00\u7684\u6807\u51c6\u65b9\u5f0f\u5904\u7406\u3002\u6309\u7167\u6211\u4eec\u7684\u539f\u5219\uff0c\u6211\u4eec\u8981\u786e\u4fdd\u4e0d\u4f1a\u91cd\u590d\u89e3\u51b3\u540c\u4e00\u4e2a\u95ee\u9898\u3002\n\u6700\u540e\u4e24\u5c42\u63d0\u4f9b\u5e7f\u6cdb\u7684\u670d\u52a1\u548c\u5de5\u5177\uff0c\u5141\u8bb8\u521b\u5efa\u3001\u63a7\u5236\u3001\u5b58\u50a8\u548c\u5904\u7406\u5185\u5bb9\u3002\u8c08\u8bba\u8fd9\u4e00\u9886\u57df\u8d85\u51fa\u4e86\u8fd9\u7bc7\u6587\u7ae0\u7684\u8303\u56f4\u3002\u4f46\u539f\u5219\u662f\u4e00\u6837\u7684\uff1a\u8fd9\u4e9b\u670d\u52a1\u6b63\u5728\u4ece\u6570\u636e\u4e2d\u5fc3\u8f6c\u79fb\u5230\u4e91\u7aef\uff0c\u540c\u65f6\u89e3\u51b3\u5dee\u5f02\u548c\u91cd\u590d\u95ee\u9898\uff0c\u5e76\u786e\u4fdd\u5b83\u4eec\u5904\u4e8e\u968f\u7740BBC Online\u589e\u957f\u800c\u53d1\u5c55\u7684\u6700\u4f73\u4f4d\u7f6e\u3002\n\u56e0\u6b64\uff0cBBC Online\u73b0\u5728(\u51e0\u4e4e)\u5b8c\u5168\u662f\u5728\u4e91\u7aef\u3002\u56e0\u6b64\uff0c\u5b83\u66f4\u5feb\u3001\u66f4\u597d\u3001\u66f4\u53ef\u9760\u3002\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u4e86\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u6539\u53d8\u7684\u5173\u952e\u539f\u5219\u3002\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u6240\u7528\u6280\u672f\u7684\u603b\u7ed3\u3002\u6709\u5173\u8fd9\u4e00\u70b9\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\u540e\u9762\u7684\u5e16\u5b50\u3002\n\u6700\u4ee4\u4eba\u5174\u594b\u7684\u662f\uff0c\u8fd9\u4e0d\u662f\u7ed3\u675f\uff0c\u53ea\u662f\u65b0\u4e8b\u7269\u7684\u5f00\u59cb\u3002\u79d1\u6280\u548c\u6587\u5316\u786e\u4fdd\u6211\u4eec\u5904\u5728\u4e00\u4e2a\u8f89\u714c\u7684\u4f4d\u7f6e\uff0c\u8ba9BBC\u5728\u7ebf\u53d8\u5f97\u6700\u597d\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u8981\u505a\u7684\u3002\n\u6211\u4e3a\u6211\u4eec\u6240\u53d6\u5f97\u7684\u4e00\u5207\u611f\u5230\u975e\u5e38\u81ea\u8c6a--\u5bf9\u6240\u6709\u53c2\u4e0e\u5176\u4e2d\u7684\u4eba\uff0c\u8c22\u8c22\u4f60\u4eec\u3002", "note_en": "This is the first in a series of posts in the coming weeks about how BBC Online is changing, making use of the cloud and more.\n Over the past few years, we in the BBC\u2019s Design+Engineering team have completely rebuilt the BBC website. We\u2019ve replaced a site hosted on our datacentres with a new one, designed and built for the cloud. Most of the tools and systems that power the site have moved too. We\u2019ve used modern approaches and technologies, like serverless. And we\u2019ve refreshed the design, approach, and editorial workflow, ready for the future. Hundreds of people have been involved, over several years. And it\u2019s just about complete.\n This post is the first of several looking at the what, the why, and most importantly the how: the approach we took to creating a new site that\u2019s ready for the future. Delivering quality technology change, quickly and effectively.\n  The BBC website is huge. Over half the UK population use it every week. Tens of millions more use it around the world. It has content in 44 different languages. And it offers over 200 different types of page \u2014 from programmes and articles, to games and food recipes.\n As is the case with tech, if you stand still, you go backwards. Until recently, much of the BBC website was written in PHP and hosted on two datacentres near London. That was a sensible tech choice when it was made in 2010; but not now.\n The BBC\u2019s site is made up of several services (such as  iPlayer,  Sounds,  News and  Sport). For them all, we need to ensure they use the latest and best technology. That\u2019s the only way to ensure they\u2019re the best at what they do. They all need to be hugely reliable at scale, as well as fast, well-designed, and accessible to all.\n And so, over the past few years, it\u2019s been our strategy to recreate BBC Online. Almost every part has been rebuilt on the cloud. We\u2019ve taken advantage of the many benefits that the cloud brings \u2014 such as the flexibility to provision new services almost instantly. And we\u2019ve used best-practice tools and techniques \u2014 such as the React framework, and the DevOps model. We\u2019ll look more at the approach in a moment, but first, let\u2019s discuss the underlying principles.\n  Rebuilding a massive website could easily suffer from the  Second System Effect. It\u2019s all too easy for new projects to be over-ambitious with the requirements and the approach. A push for perfection makes it tempting to pick the most sophisticated solutions, rather than the simplest. We needed to prevent this, to ensure good value and delivery at pace. Here are some principles that helped us do this.\n  When building something as large as BBC Online, it might be tempting to consider everything from scratch. Doing so provides the most control, and leaves no stone unturned. But the cost in doing so can be huge. An off-the-shelf solution might only give you 90% of what you want, but if can be delivered in 10% of the time, it\u2019s probably a worthy trade-off. This applies to tech, UX, business analysis, and pretty-much everything else. Most problems have already been solved somewhere else; so don\u2019t solve them again.\n A great tech example of this is the use of serverless. Around half of the BBC\u2019s website is rendered serverlessly with AWS Lambda. Managing virtual machines (or containers) is expensive \u2014 keeping them secure, reliable and scalable takes time. Serverless mostly solves that problem for us. And problems solved elsewhere mean we shouldn\u2019t do them ourselves.\n  When there are many teams, duplication is inevitable. Two teams will each come across the same problem, and create their own solution. In some ways this is good \u2014 teams should be empowered to own and solve their challenges. But left unchecked, it can create multiple solutions that are incompatible and expensive to maintain.\n As we\u2019ve rebuilt BBC Online, we\u2019ve removed a lot of duplication and difference that has built up over the years. Multiple bespoke systems have been replaced with one generic system. It\u2019s a double win, because as well as being more efficient (cheaper), we can focus on making the new single approach better than the multiple old approaches. It\u2019s because of this that the BBC website now has better performance and accessibility than ever before.\n However, we must be wary of over-simplification. Replacing multiple systems with one looks great from a business point-of-view. But software complexity grows exponentially: each new feature costs more than the previous one. There reaches a point where two simple systems are better than one sophisticated system.\n As an example, we chose to keep the BBC\u2019s World Service sites separate from the main English-language BBC site. The needs of the World Service (such as working well in poor network conditions) were specialist enough to warrant a separate solution. Two simpler websites, in this case, are better than one complex site.\n The rendering of the English-language site (left) and World Service site (right) is kept separate, to not over-complicate one solution\n Creating a new BBC website has involved many teams. To be successful, we needed these teams to align and collaborate more than we\u2019ve ever done before. Otherwise, we could easily create something that\u2019s less than the sum of its parts.\n It\u2019s hard to overstate the value of communication. Without it, teams cannot understand how their work fits alongside that of other teams. And without that understanding, they cannot see the opportunities to share and align. Teams may even start to distrust each other.\n Communication brings understanding, and that allows the culture to change. Instead of teams doing their own thing in isolation, they naturally share, collaborate, and flex to each other\u2019s needs. They go beyond what is strictly their team\u2019s remit, knowing that others will too. Which ultimately makes a better solution for everyone.\n Over recent months I\u2019ve heard teams say things like \u2018 that other team is busy so we\u2019re helping them out\u2019, or \u2018 we\u2019re aligning our tech choice with the other teams\u2019. It\u2019s a level of collaboration I\u2019ve not seen before. By understanding the bigger picture, and how everyone plays their part, we\u2019ve created a level of trust and alignment that\u2019s a joy to see.\n This \u2018onion diagram\u2019 helped explain how common concerns &amp; capabilities (in the centre) should be solved once. This frees up teams to work on the more specialist capabilities in the outer rings.\n Even with great culture and communication, multiple teams won\u2019t necessarily collectively come together to build the right thing. This is, of course, the much-quoted  Conway\u2019s Law.\n \u201cOrganizations which design systems [\u2026] are constrained to produce designs which are copies of the communication structures of these organizations.\u201d Melvin Conway\n The BBC has historically had separate websites \u2014 for News, for Sport, and so on. Each one had a separate team. To change that, and build one website, we needed to reorganise. But how? One gigantic team wouldn\u2019t work, so instead we split teams into the most efficient approach. We created teams for each page \u2018type\u2019 \u2014 a home page, an article page, a video page, and so on. We also created teams to handle common concerns \u2014 such as how the site is developed and hosted. Altogether, it minimised overlap and duplication, and allowed each team to own and become expert in their area.\n  When designing large software systems, we\u2019ve a tricky balance to find. We must plan for the future, so that we meet tomorrow\u2019s needs as well as today\u2019s. But we also don\u2019t want to over-engineer. We cannot be sure what the future will bring. Requirements will change. Cloud providers will offer new technologies. The rate of change in the world \u2014 particularly the technology world \u2014 is higher than ever before.\n There is no substitution for good analysis, planning, and software design. Researching the opportunities and choices available is key in ensuring a project sets off in the right direction. But we must resist the danger in over-thinking a solution, because it may be for a future that never comes. The beauty of agile software development is that we can discover and adapt to challenges as we go along. Business plans and architectures need to evolve too, based on what we learn as the project evolves. Don\u2019t solve problems until you\u2019re sure they\u2019re problems you actually have.\n  Expanding on the above, we must be careful not to optimise too soon. Large software projects will inevitably run into performance issues at some point. It\u2019s super-hard to predict when and how these issues will appear. So, don\u2019t. Use the benefit of agile development to respond to performance issues only when they become real.\n As mentioned above, much of the BBC website now renders serverlessly using AWS Lambda. At the start of the project, we were suspicious of how quickly Lambda could render web pages at scale. We had an alternative approach planned. But in the end, we didn\u2019t need it. Performance using serverless has been excellent. By not optimising too early, we saved a huge amount of effort.\n   \u201cA complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a working simple system.\u201d John Gall\n Removing complexity from an existing system is hard. And in our case, we had multiple complex websites that we wanted to combine. The collective requirements of these sites would overload any one system. So, we had to start again, going back to the basics of what common abilities were needed.\n  Finally, a very practical principle: ensure you are able to move quickly, so that you can learn and adapt. Release early, and often \u2014 even if it\u2019s only to a small audience. As discussed earlier, predicting the future is notoriously hard. The best way to understand the future is to get there quicker.\n The counterargument to this is that change brings risk. And with a popular service like BBC Online, reliability is critical. The BBC has always had a strong operational process (including 24/7 teams managing services, and a DevOps approach to ensure those who develop systems are also responsible for maintaining them). We\u2019ve continued to invest in this area, with new teams focussing on infrastructure, and on the developer experience (DevX). We\u2019ll go into more details in a future blog post.\n   Putting the above principles into practice, here\u2019s a super-high overview of how the BBC website works.\n  First up, all traffic to www.bbc.co.uk or www.bbc.com reaches the Global Traffic Manager (GTM). This is an in-house traffic management solution based on Nginx. It handles tens of thousands of requests a second. Because of its scale, and the need to offer extremely low latency, it partly resides in our own datacentres, and partly on AWS.\n For parts of our site, a second traffic management layer is sometimes used. (Internally, these are called Mozart and Belfrage). These services, hosted on AWS EC2s, handle around 10,000 requests per second. They provide caching, routing, and load balancing. They also play a key part in keeping the site resilient, by spotting errors, \u2018serving stale\u2019, and backing off to allow underlying systems to recover from failure.\n  The vast majority of the BBC\u2019s webpages are rendered on AWS, using React. React\u2019s isomorphic nature allows us to render the pages server-side (for best performance) and then do some further updates client-side.\n Increasingly, the rendering happens on AWS Lambda. About 2,000 lambdas run every second to create the BBC website; a number that we expect to grow. As discussed earlier, serverless removes the cost of operating and maintenance. And it\u2019s far quicker at scaling. When there\u2019s a breaking news event, our traffic levels can rocket in an instant; Lambda can handle this in a way that EC2 auto-scaling cannot.\n A new internal project, called WebCore, has provided a new standard way for creating the BBC website. It\u2019s built around common capabilities (such as an article, a home page, and a video page). It\u2019s created as a monorepo, to maximise the opportunity for sharing, and to make upgrades (e.g. to the React version) easier. By focussing on creating one site, rather than several, we\u2019re seeing significant improvements in performance, reliability, and SEO.\n Spot the difference: comparing the older page (left) with the new cloud-based version (right). The numbers are Lighthouse performance scoring.\n As discussed earlier, we\u2019ve kept our World Service site as a separate implementation, so that it can focus on the challenges of meeting a diverse worldwide audience. (This project, called Simorgh, is open source and available on GitHub.) Our iPlayer and Sounds sites are kept separate too, though there is still a considerable amount of sharing (e.g. in areas such as networking, search, and the underlying data stores).\n  The rendering layer focuses just on presentation. Logic on fetching and understanding the content is better placed in a \u2018business layer\u2019. Its job is to provide a (RESTful) API to the website rendering layer, with precisely the right content necessary to create the page. The BBC\u2019s apps also use this API, to get the same benefits.\n The BBC has a wide variety of content types (such as programmes, Bitesize revision guides, weather forecasts, and dozens more). Each one has different data and requires its own business logic. Creating dozens of separate systems, for each content type, is expensive. Not only do they need the right logic, but they also need to run reliably, at scale, and securely.\n And so, a key part of our strategy has been to simplify the process of creating business layers. An internal system called the  Fast Agnostic Business Layer (FABL) allows different teams to create their own business logic without worrying about the challenges of operating it at scale. Issues such as access control, monitoring, scaling, and caching are handled in a single, standard way. As per our principles, we\u2019re making sure we don\u2019t solve the same problem twice.\n  The final two layers provide a wide range of services and tools that allow content to be created, controlled, stored and processed. It\u2019s beyond the scope of this post to talk about this area. But the principles are the same: these services are moving from datacentres to the cloud, tackling difference and duplication as they do, and ensuring they are best-placed to evolve as BBC Online grows.\n  So, BBC Online is now (almost) entirely on the cloud. And it\u2019s faster, better and more reliable as a result. We\u2019ve discussed the key principles on how we made that change happen. And we\u2019ve seen a summary of the technology used. More on that in later posts.\n Most excitingly, this isn\u2019t the end; just the start of something new. The tech and culture ensure we\u2019re in a brilliant place to make BBC Online the best it can be. And that\u2019s what we\u2019ll do.\n I\u2019m massively proud of all we\u2019ve achieved \u2014 to everyone involved, thank you.", "posttime": "2020-11-05 20:18:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "online,\u56e2\u961f", "title": "BBC Online\u8f6c\u5411AWS\uff0c\u65e0\u670d\u52a1\u5668", "title_en": "BBC Online Moves to AWS, Serverless", "transed": 1, "url": "https://www.bbc.co.uk/blogs/internet/entries/8673fe2a-e876-45fc-9a5f-203c049c9f9c", "via": "", "real_tags": ["online", "\u56e2\u961f"]}, {"category": "", "categoryclass": "", "imagename": "868e829646172c8f10932739bf527f99.jpeg", "infoid": 1033303, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u51e0\u5929\uff0c\u6211\u6bcf\u5468\u90fd\u4f1a\u63a5\u5230\u51e0\u4e2a\u7535\u8bdd\uff0c\u60f3\u4e70\u4e2a\u5c0f\u519c\u573a\uff0c\u5f00\u59cb\u79cd\u690d\u7cae\u98df\uff0c\u751a\u81f3\u53ef\u80fd\u73b0\u5728\u6216\u4ee5\u540e\u5728\u90a3\u91cc\u5b9a\u5c45\u3002\u73ed\u52a0\u7f57\u5c14\u5468\u56f4\u7684\u4eba\u6253\u6765\u4e86\u5f88\u591a\u7535\u8bdd\uff0c\u4f46\u5fb7\u91cc\u3001\u5370\u591a\u5c14\u3001\u91d1\u5948\u3001\u6d77\u5f97\u62c9\u5df4\u548c\u5176\u4ed6\u5730\u65b9\u4e5f\u6253\u6765\u4e86\u5f88\u591a\u7535\u8bdd\u3002\u6211\u5199\u8fd9\u7bc7\u6587\u7ae0\u662f\u4e3a\u4e86\u6536\u96c6\u6211\u7684\u4e2a\u4eba\u89c2\u70b9\u3001\u60f3\u6cd5\u548c\u6240\u5b66\u5230\u7684\u4e1c\u897f\uff0c\u8fd9\u4e9b\u89c2\u70b9\u3001\u60f3\u6cd5\u548c\u7ecf\u9a8c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u5728\u8fd9\u4e9b\u7535\u8bdd\u4e2d\u88ab\u5206\u4eab-\u5728\u4f60\u51b3\u5b9a\u5728\u67d0\u4e2a\u5730\u65b9\u8d2d\u4e70\u4e00\u5757\u571f\u5730\u5e76\u6295\u5165\u8fdb\u53bb\u4e4b\u524d\uff0c\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u4e00\u672c\u5165\u95e8\u8bfb\u7269\u6216\u5e38\u89c1\u95ee\u9898\u89e3\u7b54(FAQ)\u3002\n\u559d\u676f\u8336\u6216\u5496\u5561\uff0c\u5173\u6389\u901a\u77e5--\u8fd9\u5c06\u662f\u4e00\u6bb5\u7565\u957f\u7684\u3001\u7f13\u6162\u7684\u9605\u8bfb\u8fc7\u7a0b\uff0c\u6211\u5e0c\u671b\u4f60\u4e0d\u8981\u7740\u6025\uff1a)\u3002\n\u6211\u4e0d\u662f\u660e\u661f\u519c\u573a\u4e3b\uff0c\u6bd4\u201c\u6210\u529f\u201d\u66f4\u6709\u4fe1\u5ff5\u3002\u5341\u5e74\u524d\uff0c\u6211\u4eec\u5728\u5e93\u683c\u4e70\u4e86\u5927\u7ea65\u82f1\u4ea9\u7684\u571f\u5730\uff0c\u4f46\u6211\u4eec\u51e0\u4e4e\u4e0d\u7ba1\u5b83\u4e86\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u5c31\u4f1a\u589e\u52a0\u51e0\u5341\u68f5\u6811\u3002\u4eca\u5e74\uff0c\u6211\u4eec\u4e5f\u5f00\u59cb\u4e86Paddy\u3002\u540e\u6765\uff0c\u6211\u548c\u4e00\u7fa4\u670b\u53cb\u805a\u5728\u4e00\u8d77\uff0c\u6210\u7acb\u4e86\u7f57\u671b\u5b50\u8c37\u96c6\u4f53(TVC)\u3002\u8fd9\u4e2a\u60f3\u6cd5\u5438\u5f15\u4e86\u8bb8\u591a\u4eba\uff0c\u73b0\u5728\u8fd9\u662f\u4e00\u4e2a51\u4eba\u7684\u519c\u573a\uff0c\u5df2\u7ecf\u4ece\u4e00\u4e2a\u8d2b\u7620\u3001\u9000\u5316\u7684\u666f\u89c2\u8f6c\u53d8\u4e3a\u4e00\u4e2a\u5f3a\u5927\u7684\u68ee\u6797\u751f\u6001\u7cfb\u7edf\uff0c\u6b63\u5728\u8d70\u5411\u6210\u719f\u3002\u8003\u8651\u5230\u4eba\u4eec\u5bf9\u6b64\u7684\u5174\u8da3\uff0c\u6211\u548c\u51e0\u4e2a\u4eba\u5171\u540c\u521b\u7acb\u4e86BeForest--\u5b83\u73b0\u5728\u7684\u65d7\u5e1c\u4e0b\u6709\u4e24\u4e2a\u96c6\u4f53\uff1a\u4e00\u4e2a\u662f\u5496\u5561(\u591a\u5143\u5316)+Coorg\u7684\u8352\u91ce\uff0c\u53e6\u4e00\u4e2a\u5728\u6d77\u5f97\u62c9\u5df4\u9644\u8fd1\u3002\u8fd9\u4f4d\u5e2e\u52a9\u6211\u4eec\u6267\u884cTVC\u7684\u670b\u53cb\u540e\u6765\u521b\u5efa\u4e86WeCommunites\uff0c\u5b83\u6b63\u5728\u521b\u5efa\u73ab\u7470\u8c37\u96c6\u4f53(Rose Valley Collective)\u3002\n\u4ece\u90a3\u4ee5\u540e\uff0c\u6211\u79bb\u5f00\u4e86BeForest\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u8ffd\u9010\u6211\u6240\u8bf4\u7684\u201c\u5730\u56fe\u4e0a\u7684\u516d\u4e2a\u70b9\u95ee\u9898\u201d--\u6211\u4f1a\u5728\u53e6\u4e00\u7bc7\u6587\u7ae0\u4e2d\u8be6\u7ec6\u9610\u8ff0\u8fd9\u4e00\u70b9\uff0c\u5e76\u5728\u7a0d\u540e\u94fe\u63a5\u5230\u8fd9\u4e00\u70b9\u3002\u6211\u5bf9\u521b\u5efa\u96c6\u4f53\u6ca1\u6709\u6301\u7eed\u7684\u5546\u4e1a\u5174\u8da3\uff0c\u4f46\u6211\u4ecd\u7136\u662f\u8fd9\u4e2a\u60f3\u6cd5\u7684\u62e5\u62a4\u8005\uff0c\u5e76\u652f\u6301\u4ed6\u4eec\u6240\u6709\u4eba\u3002\u5f53\u7136\uff0c\u6211\u5e0c\u671b\u8fd9\u4e9b\u519c\u573a\u3001\u4f1a\u5458\u548c\u4ece\u4e2d\u53d7\u76ca\u7684\u516c\u53f8\uff0c\u4e00\u65e6\u6709\u8ba1\u5212\u51fa\u73b0\u5e76\u9700\u8981\u66f4\u591a\u7684\u53c2\u4e0e\uff0c\u5c06\u6709\u52a9\u4e8e\u89e3\u51b3\u6211\u4e0a\u9762\u63d0\u5230\u7684\u95ee\u9898\u3002\u7a0d\u540e\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u8fd9\u4e00\u70b9\u3002\n\u201c\u6211\u60f3\u8fc7\u4e00\u79cd\u66f4\u6162\u7684\u751f\u6d3b\uff0c\u6c38\u4e45\u5730\u642c\u5230\u90a3\u91cc\u53bb\u3002\u201d\u6700\u7ec8\u662f\u8fd9\u6837\u7684\u3002\u201c\u3002\n\u4eba\u4eec\u6709\u5f88\u591a\u4e0d\u540c\u7684\u539f\u56e0\uff0c\u6211\u5728\u4e0a\u9762\u89e3\u91ca\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u539f\u56e0\u3002\u4f60\u7684\u662f\u4ec0\u4e48\uff1f\u4e00\u4e9b\u7b80\u5355\u7684\u9009\u62e9\u548c\u907f\u514d-\u3002\n\u4e0d\u8981\u8fd9\u6837\u505a\uff0c\u800c\u4e0d\u662f\u6295\u8d44\u5171\u540c\u57fa\u91d1\u3002\u8fd9\u4e0d\u662f\u90a3\u79cd\u6295\u8d44\u3002\u8fd9\u662f\u4f60\u4e3a\u4f60\u7684\u751f\u6d3b\uff0c\u4e3a\u4f60\u7684\u751f\u6d3b\u65b9\u5f0f\u6240\u505a\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u4f60\u60f3\u505a\u4e00\u4e9b\u4f60\u529b\u6240\u80fd\u53ca\u7684\u4e8b\u60c5\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u800c\u4e0d\u662f\u56e0\u4e3a\u4f60\u7684\u8d22\u5bcc\u987e\u95ee\u4f1a\u8ddf\u8e2a\u7684\u201c\u6295\u8d44\u7ec4\u5408\u201d\u3002\n\u4e0d\u8981\u628a\u5b83\u5f53\u505a\u4e00\u79cd\u9003\u907f\u3002\u6216\u8005\u53bb\u4e00\u4e2a\u7eff\u8272\u7684\u597d\u5730\u65b9\u5446\u4e0a\u4e00\u6bb5\u65f6\u95f4\u3002\u4f60\u53ef\u4ee5\u968f\u65f6\u8bbf\u95ee\u8fd9\u4e9b\u519c\u573a\uff0c\u5728\u90a3\u91cc\u505a\u5fd7\u613f\u8005\uff0c\u6216\u8005(\u63d2\u7535\u63d0\u9192\uff01)\u3002\u53c2\u89c2\u90a3\u4e9b\u6d41\u8fde\u5fd8\u8fd4\u7684\u5730\u65b9\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u5b66\u4e60\uff0c\u4e3a\u4e86\u53c2\u4e0e\uff0c\u4e3a\u4e86\u4e3a\u672a\u6765\u79cd\u4e0b\u4e00\u68f5\u4f60\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u5750\u5728\u6811\u836b\u4e0b\u7684\u6811\u3002\u5b83\u786e\u5b9e\u9700\u8981\u957f\u8fdc\u7684\u773c\u5149\u548c\u627f\u8bfa\u3002\n\u7edd\u5bf9\u4e0d\u8981\u628a\u5b83\u4ec5\u4ec5\u4f5c\u4e3a\u4e00\u79cd\u77ed\u671f\u56de\u62a5\u7684\u623f\u5730\u4ea7\u6295\u8d44\u3002\u88ab\u9501\u5728\u8fd9\u91cc\u7684\u571f\u5730\u6570\u91cf\u4e4b\u591a\u4ee4\u4eba\u5fc3\u788e--\u65e2\u4e0d\u7528\u4e8e\u5c45\u4f4f\uff0c\u4e5f\u4e0d\u7528\u4e8e\u8015\u79cd\uff0c\u5e76\u5b9a\u671f\u201c\u6e05\u7406\u201d\u5230\u6c99\u6f20\u6c34\u5e73\u3002\n\u5c31\u50cf\u629a\u517b\u5b69\u5b50\u4e00\u6837\u3002\u5c06\u4f1a\u6709\u8d77\u4f0f\u3001\u6311\u6218\u548c\u6218\u6597\u3002\u4f1a\u6709\u8f93\u8d62\u3002\u5982\u679c\u6240\u6709\u8fd9\u4e9b\u52a0\u8d77\u6765\u90fd\u662f\u5feb\u4e50\uff0c\u90a3\u5c31\u662f\u503c\u5f97\u7684\u3002\u5426\u5219\uff0c\u4f60\u53ea\u4f1a\u8ba9\u81ea\u5df1\u9677\u5165\u632b\u8d25\u611f\u3002\n\u8ba9\u6211\u4eec\u9762\u5bf9\u73b0\u5b9e\u5427--(Gyaan\u8b66\u793a\uff01)--\u6211\u4eec\u90fd\u662f\u53d7\u6570\u5b57\u9a71\u52a8\u7684\u6559\u80b2\u4f53\u7cfb\u3001\u4f01\u4e1a\u754c\u548c\u91d1\u878d\u4f53\u7cfb\u7684\u4ea7\u7269\uff0c\u6570\u5b57\u8feb\u4f7f\u6211\u4eec\u5bf9\u5468\u56f4\u7684\u4e00\u5207\u8fdb\u884c\u8d8a\u6765\u8d8a\u77ed\u671f\u7684\u89c2\u5bdf\u3002\u8fd9\u79cd\u6839\u6df1\u8482\u56fa\u7684\u672c\u80fd\uff0c\u518d\u52a0\u4e0a\u591a\u5e74\u7684\u8bad\u7ec3\uff0c\u6211\u4eec\u6240\u505a\u7684\u6bcf\u4e00\u4ef6\u4e8b\u90fd\u4f1a\u81ea\u52a8\u5f15\u53d1\u8fd9\u4e2a\u519c\u573a\u7684\u6295\u8d44\u56de\u62a5\u7387\u95ee\u9898\u3002\u5c24\u5176\u662f\u8003\u8651\u5230\u4f60\u6295\u5165\u7684\u8d44\u91d1\u5e76\u4e0d\u5c11\u3002\n\u4e0d\u8fc7\uff0c\u8fd9\u4e0d\u662f\u90a3\u79cd\u6295\u8d44\u3002\u8fd9\u662f\u5bf9\u4f60\u7684\u751f\u6d3b\u7684\u6295\u8d44\uff0c\u662f\u5bf9\u4f60\u548c\u5b69\u5b50\u7684\u672a\u6765\u4ee5\u53ca\u5730\u7403\u672a\u6765\u7684\u6295\u8d44\u3002\u8fd9\u662f\u571f\u58e4\u5b89\u5168\u3001\u6c34\u5b89\u5168\u3001\u7cae\u98df\u5b89\u5168\u548c\u5065\u5eb7\uff0c\u65e0\u8bba\u662f\u5bf9\u4f60\u81ea\u5df1\u8fd8\u662f\u5728\u66f4\u5927\u7684\u80cc\u666f\u4e0b\u90fd\u662f\u5982\u6b64\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u8d1f\u62c5\u5f97\u8d77\u7684\u4eba\u6765\u8bf4\uff0c\u4fee\u590d\u571f\u58e4\u548c\u751f\u6001\u7cfb\u7edf\u51e0\u4e4e\u662f\u4e49\u4e0d\u5bb9\u8f9e\u7684\uff0c\u800c\u8fd9\u662f\u4e00\u4e2a\u7f13\u6162\u7684\u53d8\u5316\u3002\u4eca\u5929\u7684\u519c\u6c11\u7b49\u4e0d\u8d773-4\u5e74\u7684\u65f6\u95f4\u624d\u80fd\u5c06\u9000\u5316\u7684\u571f\u58e4/\u751f\u6001\u7cfb\u7edf\u8f6c\u53d8\u4e3a\u5065\u5eb7\u7684\u571f\u58e4/\u751f\u6001\u7cfb\u7edf\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u751f\u547d\u4f9d\u8d56\u4e8e\u4e0b\u4e00\u5b63\u4f5c\u7269\uff0c\u5373\u4f7f\u5bf9\u4ed6\u4eec\u6765\u8bf4\u60c5\u51b5\u8d8a\u6765\u8d8a\u7cdf\u7cd5\u3002\n\u5f53\u4f60\u5f00\u59cb\u8fd9\u6bb5\u65c5\u7a0b\u65f6\uff0c\u5c31\u50cf\u9001\u4e00\u4e2a\u5b69\u5b50\u53bb\u5e7c\u513f\u56ed-\u4f60\u5fc5\u987b\u6709\u8010\u5fc3\u548c\u51b3\u5fc3\u628a\u57fa\u7840\u505a\u597d\uff0c\u5728\u4f60\u8003\u8651\u5b69\u5b50\u5e94\u8be5\u4e13\u6ce8\u4e8e\u4ec0\u4e48\u4e13\u4e1a\u8bfe\u7a0b\u6216\u8005\u80fd\u62ff\u5230\u591a\u5c11\u85aa\u6c34\u4e4b\u524d\uff0c\u4e13\u6ce8\u4e8e\u5b66\u4e60\u548c\u6559\u80b2\u3002\u4f60\u5e94\u8be5\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u770b\u5f85\u4f60\u7684\u519c\u573a\u3002\u6839\u636e\u6838\u5fc3\u81ea\u7136\u8fc7\u7a0b\u548c\u751f\u6001\u7cfb\u7edf\u670d\u52a1\u6765\u6784\u5efa\u4ef7\u503c\uff0c\u8fd9\u4e9b\u6838\u5fc3\u81ea\u7136\u8fc7\u7a0b\u548c\u751f\u6001\u7cfb\u7edf\u670d\u52a1\u5c06\u4f7f\u5b83\u5728\u9762\u5bf9\u5404\u79cd\u6c14\u5019\u6761\u4ef6-\u591a\u6837\u5316\u548c\u5065\u58ee-\u7684\u60c5\u51b5\u4e0b\u4fdd\u6301\u5f3a\u52b2\uff0c\u8fd9\u4e00\u70b9\u7684\u4f30\u503c\u5c06\u6839\u636e\u5404\u79cd\u56e0\u7d20\u81ea\u52a8\u8ddf\u8e2a\u548c\u53d1\u751f\uff0c\u5305\u62ec\u5728\u4e0d\u540c\u5730\u70b9\u7684\u5e02\u573a\u673a\u4f1a\uff0c\u4e00\u4e2a\u4eba\u62e5\u6709\u7684\u521b\u9020\u529b\uff0c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u9a71\u52a8\u7684\u589e\u503c\u7b49\u7b49\u3002\u4f60\u771f\u7684\u5e94\u8be5\u4e13\u6ce8\u4e8e\u5728\u519c\u573a\u521b\u9020\u4e30\u9976\uff0c\u6cbf\u7740\u4e0d\u540c\u7684\u7ef4\u5ea6\u3002\n\u519c\u573a\u53ef\u4ee5\u4ece\u8d22\u653f\u4e0a\u63d0\u4f9b\u5e2e\u52a9\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u65b9\u5f0f\u662f\uff0c\u968f\u7740\u4f60\u8d8a\u6765\u8d8a\u591a\u5730\u6210\u4e3a\u98df\u7269\u3001\u6c34\u3001\u80fd\u6e90\u9700\u6c42\u3001\u4f11\u95f2\u548c\u66f4\u597d\u7684\u5065\u5eb7\u7b49\u7b49\u7684\u751f\u4ea7\u8005\uff0c\u51cf\u5c11\u91d1\u94b1\u5728\u4f60\u4e2a\u4eba\u751f\u6d3b\u4e2d\u7684\u9700\u6c42\u548c\u4f5c\u7528\u3002\u6b63\u786e\u770b\u5f85\u519c\u4e1a\u7684\u4e00\u4e2a\u5173\u952e\u65b9\u6cd5\u662f\uff0c\u9996\u5148\u5728\u519c\u573a\u4e3a\u81ea\u5df1\u7684\u9700\u8981\u800c\u79cd\u690d\uff0c\u7136\u540e\u628a\u5269\u4f59\u7684\u5e26\u5230\u5e02\u573a\u4e0a\u3002\u5f53\u519c\u573a\u5f00\u59cb\u5728\u4e0d\u540c\u7684\u5b63\u8282\u62e5\u6709\u4e30\u5bcc\u7684\u5404\u79cd\u4e1c\u897f\u65f6\uff0c\u603b\u662f\u4f1a\u6709\u5269\u4f59\u7684-\u8fd9\u901a\u5e38\u662f\u5927\u81ea\u7136\u7684\u8fd0\u4f5c\u65b9\u5f0f\u3002\n\u56de\u62a5\u5c06\u662f\u795e\u5947\u7684\uff0c\u800c\u4e14\u4f1a\u4ee5\u610f\u60f3\u4e0d\u5230\u7684\u65b9\u5f0f\u5230\u6765--\u524d\u63d0\u662f\u4f60\u4e0d\u5728\u65e9\u671f\u5411\u751f\u6001\u7cfb\u7edf\u65bd\u538b\uff0c\u8ba9\u5b83\u6309\u7167\u60ef\u4f8b\u4e3a\u4f60\u751f\u4ea7\u8fd9\u4e9b\u56de\u62a5\u3002\u800c\u6700\u7ec8\u4f1a\u88ab\u780d\u4f10\u6210\u6728\u6750\u7684\u5927\u89c4\u6a21\u67da\u6728\u517b\u6b96\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\u3002)\n\u4f60\u5df2\u7ecf\u5728The BetterIndia\u7b49\u7f51\u7ad9\u4e0a\u8bfb\u8fc7\u90a3\u4e9b\u7cbe\u5f69\u7684\u3001\u9f13\u821e\u4eba\u5fc3\u7684\u6545\u4e8b\u4e86\uff0c\u8fd9\u4e9b\u6545\u4e8b\u8bb2\u7684\u662f\u519c\u6c11\u5728\u201c\u79bb\u5f00\u4e86\u4ed6\u4eec\u5728\u79d1\u6280/\u91d1\u878d\u9886\u57df\u7684\u6709\u5229\u53ef\u56fe\u7684\u5de5\u4f5c\u201d\u540e\uff0c\u8d5a\u53d6\u4e86\u4e00\u4e07\u82f1\u4ea9\u7684\u571f\u5730\u3002\u6211\u5f00\u59cb\u8ba4\u4e3a\uff0c\u867d\u7136\u5b83\u5728\u77ed\u671f\u5185\u9f13\u52b1\u4e86\u8bb8\u591a\u4eba\uff0c\u4f46\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u5b83\u53ef\u80fd\u4f1a\u5f00\u59cb\u5bf9\u519c\u4e1a\u9020\u6210\u540c\u6837\u7684\u635f\u5bb3\uff0c\u5c31\u50cf\u5149\u6cfd\u5bf9\u6211\u4eec\u5bf9\u751f\u6d3b\u3001\u5de5\u4f5c\u7b49\u7684\u671f\u671b\u4e00\u6837\u3002\n\u519c\u4e1a\u4f9d\u8d56\u4e8e\u65e0\u6570\u7684\u53d8\u6570\uff0c\u800c\u8fd9\u4e9b\u53d8\u6570\u90fd\u968f\u7740\u6c14\u5019\u7684\u53d8\u5316\u800c\u8fc5\u901f\u53d8\u5316\u3002\u5728\u8d27\u5e01\u5316\u65b9\u9762--\u4eca\u5929\u7684\u4f9b\u5e94\u94fe\u662f\u4e3a\u901a\u5e38\u7684\u519c\u4f5c\u7269\u548c\u519c\u4ea7\u54c1\u8bbe\u8ba1\u7684\uff0c\u56f4\u7ed5\u7740\u5927\u91cf\u7684\u51e0\u79cd\u4e1c\u897f\uff0c\u56e0\u6b64\u4e0d\u5229\u4e8e\u591a\u6837\u6027\u3001\u571f\u58e4\u548c\u519c\u6c11\u81ea\u5df1\u3002\u56e0\u6b64\uff0c\u4f60\u5c06\u4e00\u76f4\u5728\u4e0e\u8fd9\u4e00\u73b0\u5b9e\u4f5c\u6597\u4e89\u3002\n\u4e00\u4e9b\u519c\u6c11\u6bcf\u9694\u51e0\u4e2a\u5468\u671f\u5c31\u80fd\u5728\u6240\u6709\u8fd9\u4e9b\u53d8\u6570\u4e2d\u627e\u5230\u751c\u871c\u70b9\uff0c\u5e76\u7834\u89e3\u5b83\u3002\u4e0d\u8981\u6307\u671b\u8fd9\u4f1a\u6210\u4e3a\u9ed8\u8ba4\u72b6\u6001\uff0c\u4e5f\u4e0d\u8981\u5f00\u59cb\u4e3a\u4eca\u5929\u5728\u5e02\u573a\u4e0a\u6709\u5f88\u5927\u4ef7\u503c\u7684\u90a3\u4e00\u4ef6\u4e8b\u8fdb\u884c\u4f18\u5316\u3002\u5176\u4ed6\u8bb8\u591a\u4eba\u4e5f\u4f1a\u8fd9\u4e48\u505a\uff0c\u8fd9\u4e0d\u4ec5\u4e0d\u4f1a\u56e0\u4e3a\u8fd9\u4e00\u70b9\u800c\u6210\u4e3a\u5e02\u573a\u73b0\u5b9e(\u65e9\u5148\u7684\u8bb8\u591a\u4f9b\u8fc7\u4e8e\u6c42\u7684\u4f8b\u5b50)\uff0c\u800c\u4e14\u8fd8\u4f1a\u635f\u5bb3\u4f60\u7684\u519c\u573a\u548c\u571f\u58e4\u3002\n\u4f60\u5728\u519c\u573a\u6700\u6709\u4ef7\u503c\u7684\u6295\u5165\uff0c\u4e5f\u662f\u8fd9\u6b21\u8f6e\u73ed\u7684\u5de5\u5177\uff0c\u5c31\u662f\u8010\u5fc3\u3002\u90a3\u5c31\u662f\uff0c\u4e0e\u5927\u81ea\u7136\u5408\u4f5c\u521b\u9020\u4e30\u9976\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u628a\u81ea\u5df1\u7684\u610f\u5fd7\u5f3a\u52a0\u4e8e\u201c\u751f\u4ea7\u8fd9\u4e00\u4ef6\u4e1c\u897f\u201d\u4e0a\u3002\u4ece\u7406\u6027\u7684\u3001\u4e0d\u592a\u9ad8\u7684\u671f\u671b\u5f00\u59cb\uff0c\u80af\u5b9a\u4f1a\u5e2e\u52a9\u4f60\u8d70\u4e0a\u7f8e\u597d\u7684\u9053\u8def\u3002\n\u4f46\u662f\uff0c\u563f\uff0c\u522b\u5bb3\u6015\uff01\u4f60\u6709\u591a\u65b9\u9762\u7684\u4e1c\u897f--\u81ea\u7136\uff0c\u6bd4\u666e\u901a\u519c\u6c11\u66f4\u591a\u7684\u8d44\u6e90\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u652f\u6301\u548c\u8bc0\u7a8d\u793e\u533a\uff0c\u4ee5\u53ca\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u7684\u5e16\u5b50\uff0c\u5e0c\u671b\u6709\u6b63\u786e\u7684\u52a8\u673a\u548c\u671f\u671b\uff1a)\u3002\n\u50cf\u68ee\u6797\u4e00\u6837\u7684\u751f\u6001\u7cfb\u7edf\u9700\u8981\u65f6\u95f4\u3001\u8fed\u4ee3\u548c\u53cd\u590d\u5b66\u4e60\u624d\u80fd\u8fbe\u5230\u3002\u5b83\u6bd4\u4f20\u7edf\u519c\u573a\u6297\u51b2\u51fb\u80fd\u529b\u5f3a\u5f97\u591a\uff0c\u5982\u679c\u4f60\u8003\u8651\u5230\u5728\u4e00\u4e2a\u6210\u719f\u7684\u4e03\u5c42\u519c\u573a\u4e2d\u53ef\u4ee5\u79cd\u690d\u7684\u690d\u7269\u548c\u98df\u7269\u7684\u591a\u6837\u6027(\u662f\u7684\uff0c\u5b83\u4e0d\u4e00\u5b9a\u662f\u4e8c\u7ef4\u7684)\uff0c\u4e00\u5e74\u56db\u5b63\u7684\u4ea7\u91cf\u90fd\u4f1a\u6bd4\u666e\u901a\u519c\u573a\u5c11\u5f97\u591a\uff0c\u800c\u4e14\u5de5\u4f5c\u548c\u6295\u5165\u90fd\u6bd4\u666e\u901a\u519c\u573a\u5c11\u5f97\u591a\u3002\u60f3\u4e00\u60f3\u6709\u673a\u98df\u54c1\u4ee5\u5916\u7684\u4e1c\u897f\u3002\u968f\u7740\u751f\u6001\u7cfb\u7edf\u7684\u53d1\u5c55\uff0c\u8fd9\u53d8\u5f97\u8d8a\u6765\u8d8a\u5bb9\u6613\uff0c\u4f60\u7684\u7cbe\u529b\u5c06\u8f6c\u79fb\u5230\u6536\u83b7\u3001\u589e\u503c\u548c\u60f3\u529e\u6cd5\u5c06\u5176\u63a8\u5411\u5e02\u573a\u3002\u5b83\u5f00\u59cb\u9700\u8981\u8d8a\u6765\u8d8a\u5c11\u7684\u5916\u90e8\u6295\u5165\uff0c\u7ba1\u7406\u81ea\u5df1\u7684\u6c34\u5206\u548c\u571f\u58e4\u80a5\u529b\uff0c\u5e76\u4e0d\u65ad\u7ed9\u4f60\u5e26\u6765\u79ef\u6781\u7684\u60ca\u559c\u3002\n\u8bb8\u591a\u6253\u6765\u7535\u8bdd\u7684\u4eba\u90fd\u60f3\u201c\u4e70\u51e0\u82f1\u4ea9\u5730\uff0c\u9760\u8fd9\u5757\u5730\u751f\u6d3b\u3002\u201d\u8fd9\u662f\u4e00\u4e2a\u53ef\u7231\u7684\u3001\u9ad8\u5c1a\u7684\u3001\u7565\u5e26\u6d6a\u6f2b\u7684\u60f3\u6cd5\u3002\u5728\u6211\u4eec\u5f00\u59cbTVC\u4e4b\u524d\uff0c\u6211\u8bd5\u56fe\u5728\u670b\u53cb\u4eec\u4e70\u4e0b\u7684\u5341\u51e0\u4e2a\u519c\u573a\u4e86\u89e3\u8fd9\u4e2a\u8fc7\u7a0b--\u53ea\u6709\u4e00\u5bf9\u592b\u5987\u642c\u5bb6\u540e\u7acb\u5373\u6295\u5165\u4e86\u5de8\u5927\u7684\u52aa\u529b\uff0c\u5176\u4f59\u7684\u519c\u573a\u6700\u591a\u5728\u51e0\u4e2a\u6708\u6216\u4e00\u5e74\u540e\u5c31\u8fdb\u5165\u4e86\u505c\u6ede\u4e0d\u524d\u7684\u72b6\u6001\u3002\n\u5c0f\u578b\u519c\u573a\u5728\u751f\u6001\u4e0a\u4e5f\u66f4\u52a0\u8106\u5f31\u3002\u5728\u4f60\u7684\u8fb9\u754c\u4e4b\u5916\u53d1\u751f\u7684\u4e00\u5207\u4e5f\u4f1a\u5f71\u54cd\u4f60\u7684\u519c\u573a\uff0c\u6240\u4ee5\u519c\u573a\u8d8a\u5927\uff0c\u5f71\u54cd\u5c31\u8d8a\u5c0f\u3002(\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6751\u6c11\u5265\u79bb\u90e8\u5206\u9000\u5316\u571f\u5730\u7684\u6751\u7ea7\u96c6\u4f53\u5c06\u662f\u7406\u60f3\u7684\uff0c\u4f46\u5728\u8fd9\u4e00\u70b9\u4e0a\u5b9e\u73b0\u8fd9\u4e00\u70b9\u5e76\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u3002)\n\u4f5c\u4e3a\u4e00\u4e2a\u96c6\u4f53-\u8bb8\u591a\u4eba\u8d2d\u4e70\u3001\u8ba1\u5212\u3001\u8fd0\u8425\u4e00\u4e2a\u5927\u578b\u519c\u573a-\u66f4\u6709\u610f\u4e49\u3002\u6b63\u5982\u6211\u4e4b\u524d\u89e3\u91ca\u7684\u90a3\u6837\uff0c\u5b83\u66f4\u5065\u58ee--\u5b83\u5141\u8bb8\u66f4\u5408\u7406\u3001\u66f4\u5408\u7406\u5730\u5229\u7528\u666f\u89c2\u6765\u521b\u9020\u8fb9\u7f18\u3001\u6797\u5730\u3001\u6c34\u4f53\u7b49\u3002\u4f60\u4e0d\u4f1a\u603b\u662f\u6709\u7a7a\u95f2\u65f6\u95f4\uff0c\u4f46\u5728\u4e00\u4e2a\u66f4\u5927\u7684\u7fa4\u4f53\u4e2d\uff0c\u80af\u5b9a\u4f1a\u6709\u4eba\u6216\u5176\u4ed6\u4eba\u6709\u7a7a\u95f2\u65f6\u95f4\u3002\u8fd8\u6709\u5171\u540c\u7684\u5b66\u4e60\u3001\u77e5\u8bc6\u3001\u5b9e\u9a8c\u548c\u70ed\u60c5--\u9762\u5bf9\u4ee4\u4eba\u6cae\u4e27\u7684\u65f6\u523b\u548c\u4f4e\u8c37\uff0c\u6211\u4eec\u5bf9\u6700\u540e\u4e00\u70b9\u7684\u8d21\u732e\u592a\u5c11\u4e86\u3002\n\u5728\u8d22\u52a1\u4e0a\u4e5f\u662f\u5982\u6b64\uff0c\u8fd9\u662f\u4e00\u573a\u786c\u4ed7\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u81ea\u5df1\u4e70\u52302-5-7-10\u82f1\u4ea9\u7684\u571f\u5730\uff0c\u8fd9\u53d6\u51b3\u4e8e\u4f60\u6709\u591a\u5c11\u73b0\u91d1\u3002\u7136\u540e\u662f\u5efa\u9020\u6240\u6709\u5fc5\u9700\u54c1\u7684\u6210\u672c--\u4e00\u53e3\u94bb\u4e95\uff0c\u4e00\u6761\u901a\u5f80\u519c\u573a\u5404\u4e2a\u90e8\u5206\u7684\u7ba1\u9053\uff0c\u4e00\u4e2a\u50a8\u85cf\u5ba4\uff0c\u4e00\u4e2a\u68da\u5b50\uff0c\u6805\u680f\uff0c\u6cf5\u623f\uff0c\u7535\u7ebf\uff0c\u5907\u7528\u8bbe\u5907\uff0c\u4e00\u4e2a\u725b\u68da\uff0c\u4e00\u4e2a\u7ed9\u4f60\u81ea\u5df1\u7684\u5c0f\u623f\u5b50\uff0c\u4e00\u4e2a\u989d\u5916\u7684\u623f\u95f4\u7ed9\u4f60\u7684\u5ba2\u4eba\uff0c\u4e00\u4e2a\u7ed9\u5458\u5de5\u7684\u623f\u5b50\uff0c\u4e00\u4e2a\u67f4\u68da\u2026\u3002\u3002\u5b83\u4e00\u76f4\u5728\u79ef\u805a\u3002\u7136\u540e\u4f60\u4f1a\u770b\u5230\u519c\u4e1a\u6295\u5165\u3001\u8fd0\u8425\u6210\u672c\u3001\u770b\u62a4\u4eba\u5458\u7684\u5de5\u8d44\u3001\u88ab\u5439\u574f\u7684\u6c34\u6cf5\u7b49\u7684\u7ef4\u4fee\u6210\u672c\u3001\u5de5\u5177\u7b49\u7b49\u3002\u5f53\u6240\u6709\u8fd9\u4e9b\u90fd\u7531\u51e0\u5341\u4e2a\u4eba\u5206\u4eab\u65f6\uff0c\u4f60\u5c31\u80fd\u591f\u5c06\u6210\u672c\u964d\u4f4e\u5230\u5f88\u5c0f\u7684\u4e00\u90e8\u5206\uff0c\u8fd8\u53ef\u4ee5\u8bf7\u4e00\u4f4d\u6c38\u4e45\u6587\u5316\u987e\u95ee\uff0c\u4e00\u4f4d\u5efa\u7b51\u5e08(\u9009\u62e9\u4e00\u4e2a\u5177\u6709\u751f\u6001\u610f\u8bc6\u548c\u610f\u8bc6\u7684\u5efa\u7b51\u5e08\uff0c\u5e76\u5728\u8fd9\u65b9\u9762\u63a8\u52a8\u4f60\u7684\u6781\u9650)(\u6211\u5df2\u7ecf\u94fe\u63a5\u5230\u90a3\u4e9b\u5e2e\u52a9\u6211\u4eec\u5728TVC\u8ba1\u5212\u4e8b\u60c5\u7684\u4eba)\u7b49\u7b49\u3002\u8fd9\u53ea\u662f\u505a\u8fd9\u4ef6\u4e8b\u7684\u66f4\u660e\u667a\u7684\u65b9\u5f0f\u3002\n\u6211\u7406\u60f3\u4e2d\u60f3\u8c61\u7684\u96c6\u4f53\u662f\u4eba\u4eec\u627e\u5230\u5f7c\u6b64\uff0c\u8d70\u5230\u4e00\u8d77\uff0c\u53d1\u5c55\u51fa\u5171\u540c\u7684\u76ee\u6807\u548c\u8bae\u7a0b\uff0c\u5e76\u63a8\u8fdb\u8ba1\u5212\u548c\u6267\u884c\uff0c\u4e0d\u540c\u7684\u4eba\u627f\u62c5\u4e0d\u540c\u7684\u8d23\u4efb\uff0c\u539f\u6765\u7684\u571f\u5730\u6240\u6709\u8005\u5265\u79bb\u4e86\u4e00\u90e8\u5206\u571f\u5730\uff0c\u7ee7\u7eed\u6210\u4e3a\u96c6\u4f53\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u5728\u5176\u4e2d\u626e\u6f14\u89d2\u8272\u3002\u5982\u679c\u4f60\u6709\u4e00\u7fa4\u4eba\u4e00\u8d77\u505a\u8fd9\u4ef6\u4e8b\uff0c\u5e76\u4e14\u6709\u4fe1\u5fc3\u575a\u6301\u5230\u5e95\uff0c\u6295\u5165\u6240\u9700\u7684\u65f6\u95f4\uff0c\u8fd9\u662f\u521b\u5efa\u519c\u573a\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\u3002\n\u4f46\u5bf9\u4e8e\u5927\u591a\u6570\u4eba\u6765\u8bf4\uff0c\u8ba9\u8fd9\u4ef6\u4e8b\u7ee7\u7eed\u4e0b\u53bb\u662f\u5f88\u56f0\u96be\u7684\u3002\u6709\u5de5\u4f5c\uff0c\u6709\u627f\u8bfa\uff0c\u6709\u6280\u672f\u8bc0\u7a8d\u3002TVC\u7684\u6210\u529f\u662f\u56e0\u4e3aVivasv/Varun\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u4e86\u8270\u96be\u7684\u571f\u5730\u5f81\u7528\u5de5\u4f5c\uff0c\u5ba1\u67e5\u4e86\u6587\u4e66\u5de5\u4f5c\uff0c\u4e0e\u6751\u59d4\u4f1a\u548c\u5f53\u5c40\u8fdb\u884c\u4e86\u8054\u7edc\uff0c\u786e\u5b9a\u4e86\u65bd\u5de5\u56e2\u961f\u5e76\u5bf9\u4ed6\u4eec\u8fdb\u884c\u4e86\u7ba1\u7406\u3002\u8fd9\u662f\u4e00\u79cd\u5b8c\u5168DIY\u52aa\u529b\u7684\u6df7\u5408\u65b9\u6cd5\uff0c\u4f20\u7edf\u7684\u5efa\u7b51\u5546\u4e5f\u662f\u5982\u6b64\uff0cWRT\u9884\u5148\u51b3\u5b9a\u4e86\u8ba1\u5212\u548c\u8bbe\u8ba1\uff0c\u4eba\u4eec\u7b7e\u7ea6\u63a5\u53d7\u6216\u653e\u5f03\u5b83\u3002\u4ece\u5f88\u65e9\u5f00\u59cb\uff0c\u6210\u5458\u4eec\u5c31\u53c2\u4e0e\u4e86\u519c\u573a\u548c\u96c6\u4f53\u7684\u51e0\u4e4e\u6bcf\u4e00\u4e2a\u65b9\u9762-\u5305\u62ec\u623f\u5c4b\u3001\u519c\u573a\u8ba1\u5212\u3001\u6709\u52a9\u4e8e\u7ba1\u7406\u8fd9\u4e2a\u5730\u65b9\u7684\u7ed3\u6784\u548c\u89c4\u5219\u3002\n\u7ba1\u7406\u6d41\u7a0b\u5f53\u7136\u4f1a\u6709\u7ba1\u7406\u8d39\u7528--\u7ba1\u7406\u5b83\u7684\u56e2\u961f\u4ee5\u6b64\u4e3a\u751f\u4e5f\u662f\u516c\u5e73\u7684\u3002\u65e0\u8bba\u5982\u4f55\uff0c\u4e0e\u4f20\u7edf\u7684\u5efa\u7b51\u5546\u9879\u76ee\u4e0d\u540c\u7684\u662f\uff0c\u4ed6\u4eec\u4e0d\u4f1a\u628a\u878d\u8d44\u6210\u672c\u6216\u98ce\u9669\u52a0\u5230\u8fd9\u4e2a\u9879\u76ee\u4e0a\uff0c\u6240\u4ee5\u6570\u5b57\u8981\u7406\u667a\u5f97\u591a\u3002\u6b64\u5916\uff0c\u5982\u679c\u8ba1\u5165\u5bfb\u627e\u3001\u5ba1\u6838\u6587\u4ef6\u548c\u5efa\u7acb\u81ea\u5df1\u7684\u519c\u573a\u6240\u4ea7\u751f\u7684\u7ba1\u7406\u8d39\u7528--\u6211\u4ece\u6211\u5728Coorg\u519c\u573a\u7684\u7ecf\u9a8c\u6765\u770b--\u8fd9\u53ef\u80fd\u4f1a\u5927\u5927\u63d0\u9ad8\u4eba\u5747\u6210\u672c\u6548\u76ca\u3002\n\u65e9\u4e9b\u65f6\u5019\uff0c\u6211\u5df2\u7ecf\u94fe\u63a5\u5230BeForest(\u5e93\u683c\u548c\u6d77\u5f97\u62c9\u5df4\u9644\u8fd1\u7684\u96c6\u4f53)\u548cWeCommunites(RVC\uff0c\u5854\u5229\u9644\u8fd1\uff0c\u79bb\u5fb7\u91cc\u4e0d\u8fdc\u7684\u4e00\u4e2a)\u3002\u8fd9\u4e24\u5bb6\u516c\u53f8\u90fd\u5728\u521b\u5efa\u4ee5\u6c38\u4e45\u517b\u6b96/\u81ea\u7136\u519c\u4e1a\u4e3a\u57fa\u7840\u7684\u96c6\u4f53\u3002\n\u5728\u5199\u8fd9\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\uff0c\u6709\u4e00\u4f4d\u6210\u5458\u51fa\u4e8e\u4e2a\u4eba\u539f\u56e0\u60f3\u8981\u79bb\u5f00TVC-\u5982\u679c\u4f60\u70ed\u8877\u4e8e\u6b64\uff0c\u53ef\u4ee5\u4e0e\u6211\u8054\u7cfb\u3002\n\u6211\u8fd8\u4e0d\u786e\u5b9a\u6210\u5458\u5728\u5404\u4e2a\u96c6\u4f53\u7684\u53c2\u4e0e\u5ea6\uff0c\u4f46\u8003\u8651\u5230\u4ed6\u4eec\u662fTVC\u6a21\u677f\u7684\u4ea7\u7269\uff0c\u6211\u76f8\u5f53\u4e50\u89c2\u5730\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u6a21\u677f\u4e5f\u4f1a\u5f88\u597d\u5730\u53d1\u5c55\u8d77\u6765\u3002\u793e\u533a\u4e5f\u662f\u4e00\u79cd\u8d23\u4efb\u548c\u673a\u4f1a\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u4f60\u4f5c\u4e3a\u6d88\u8d39\u8005\u9009\u62e9\u7684\u4e1c\u897f--\u4ee5\u67d0\u79cd\u65b9\u5f0f\u53c2\u4e0e\u63a8\u52a8\u5b83\u603b\u662f\u53ef\u80fd\u7684\uff0c\u4e5f\u662f\u8feb\u5207\u9700\u8981\u7684\u3002\u5982\u679c\u4f60\u9700\u8981\u5e2e\u52a9\uff0c\u4e00\u5b9a\u8981\u627e\u6211\u5e2e\u5fd9\u3002\n\u6211\u77e5\u9053\u6709\u4eba\u8bd5\u56fe\u4ece\u9a6c\u54c8\u5df4\u83b1\u4ec0\u74e6\u5c14\u57fa\u5730\u7684\u6d66\u90a3\u51fa\u53d1\uff0c\u7f29\u77ed5-6\u4e2a\u5c0f\u65f6\u7684\u8f66\u7a0b\u3002\u6709\u4eba\u8d70\u8fd1\u4e00\u575740\u82f1\u4ea9\u7684\u571f\u5730\uff0c\u6709\u4e00\u7fa4\u4eba\u5bf9\u73ed\u52a0\u7f57\u5c14\u9644\u8fd1\u7684\u4e00\u4e2a\u96c6\u4f53\u611f\u5174\u8da3\uff0c\u8fd9\u6837\u4f60\u4eec\u5c31\u53ef\u4ee5\u8054\u7cfb\u5e76\u63a2\u7d22\u8fd9\u5757\u571f\u5730\u3002\u6211\u4e2a\u4eba\u6b63\u5728\u5e2e\u52a9\u51e0\u4e2a\u670b\u53cb\u5728\u5e93\u683c\u6211\u4eec\u7684\u519c\u573a\u9644\u8fd1\u5efa\u7acb\u4e00\u4e2a\u5360\u57306\u82f1\u4ea9\u7684\u5fae\u578b\u96c6\u4f53\uff0c\u5e76\u4e50\u4e8e\u5e2e\u52a9\u66f4\u591a\u7684\u4eba(\u6211\u518d\u8bf4\u4e00\u6b21\uff0c\u6211\u6ca1\u6709\u5546\u4e1a\u5229\u76ca\uff0c\u53ea\u662f\u60f3\u4e3a\u90a3\u91cc\u7684\u793e\u533a\u9879\u76ee\u63d0\u4f9b\u4e00\u4e9b\u5e2e\u52a9\u548c\u8d44\u91d1-\u6211\u76f8\u4fe1\u6295\u8d44\u8fd9\u4e9b\u5730\u65b9\u7684\u4eba\u4e5f\u5e94\u8be5\u5e2e\u52a9\u5f53\u5730\u793e\u533a\u8fdb\u884c\u4e00\u4e9b\u80fd\u529b\u5efa\u8bbe)\u3002\n\u8fd8\u6709\u66f4\u4f20\u7edf\u7684\u519c\u573a\u9009\u62e9\u3002\u8d3e\u6069\u519c\u573a(Jain Farm)(\u636e\u6211\u6240\u89c1\uff0c\u4e00\u4e2a\u6210\u5458\u793e\u533a\u6b63\u5728\u5f00\u59cb\u5f62\u6210\u8ffd\u6c42\u98df\u54c1\u6797\u548c\u96c6\u4f53\u519c\u4e1a\u7684\u793e\u533a)\u79bb\u73ed\u52a0\u7f57\u5c14\u8fd1\u5f97\u591a\uff0c\u4eba\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u6bcf\u5468\u591a\u6b21\u5f80\u8fd4\u4e8e\u9547\u4e0a\uff0c\u4f46\u5b83\u662f\u4f5c\u4e3a\u5206\u88c2\u7684\u5730\u5757\u5f00\u53d1\u7684\uff0c\u4e2d\u95f4\u6709\u9053\u8def\uff0c\u56e0\u6b64\u9700\u8981\u8fdb\u884c\u751f\u6001\u7cfb\u7edf\u6062\u590d\u5de5\u4f5c\u3002Hosachiguru\u521b\u9020\u4e86\u8bb8\u591a\u519c\u573a(\u4e0d\u662f\u96c6\u4f53\u519c\u573a)\uff0c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u5b83\u53c8\u662f\u4e00\u5757\u5206\u5272\u7684\u201c\u5730\u5757\u201d\uff0c\u5e76\u4e0d\u662f\u7279\u522b\u4f7f\u7528\u81ea\u7136\u8015\u4f5c\u65b9\u6cd5\u6216\u751f\u6001\u610f\u8bc6\u8bbe\u8ba1\u5b8c\u6210\u7684\u3002\u6211\u5f88\u4e50\u610f\u4e0e\u505a\u8fd9\u4ef6\u4e8b\u7684\u4eba\u4eec\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u5c3d\u53ef\u80fd\u5730\u5e2e\u52a9\u91cd\u65b0\u786e\u5b9a\u52aa\u529b\u7684\u65b9\u5411\uff0c\u6210\u5458\u793e\u533a\u603b\u662f\u53ef\u4ee5\u8d70\u5230\u4e00\u8d77\uff0c\u671d\u7740\u8fd9\u4e2a\u65b9\u5411\u524d\u8fdb\u3002Prakruthi\u519c\u573a\u662f\u6211\u542c\u8bf4\u8fc7\u7684\u53e6\u4e00\u4e2a\u8fd9\u6837\u7684\u52aa\u529b\uff0c\u4f46\u8fd9\u4e9b\u519c\u573a\u79bb\u6c38\u4e45\u517b\u6b96\u6216\u81ea\u7136\u519c\u573a\u8fd8\u6709\u5f88\u8fdc\u7684\u4e00\u6bb5\u8def\u8981\u8d70\u3002\n\u5e15\u62c9\u4ec0\u519c\u573a(Palaash Farm)\u6b63\u5728\u8bd5\u9a8c\u4e00\u79cd\u201c\u5148\u8bd5\u540e\u4e70\u201d\u7684\u65b9\u5f0f\uff0c\u8ba9\u4eba\u4eec\u4f53\u9a8c\u519c\u573a\u751f\u6d3b\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u4e3b\u610f\uff0c\u8ba9\u4eba\u4eec\u660e\u767d\u4ed6\u4eec\u6b63\u5728\u8fdb\u5165\u7684\u662f\u4ec0\u4e48-Linger\u4e5f\u5bf9\u6b64\u5f00\u653e\uff01\n\u4f46\u6700\u68d2\u7684\u662f\uff0c\u5bf9\u519c\u573a\u548c\u7eff\u5730\u7684\u5173\u6ce8\u4f3c\u4e4e\u6b63\u5728\u6210\u4e3a\u4e3b\u6d41\uff0c\u6211\u5e0c\u671b\u5b83\u4f1a\u589e\u957f\u5f97\u66f4\u591a\u3002\u6211\u5f88\u4e50\u610f\u4ee5\u4efb\u4f55\u53ef\u80fd\u7684\u65b9\u5f0f\u63d0\u4f9b\u5e2e\u52a9\uff0c\u6211\u5e0c\u671b\u6211\u5728\u65c5\u9014\u4e2d\u5b66\u5230\u7684\u548c\u611f\u53d7\u5230\u7684\u4e1c\u897f\u80fd\u5e2e\u52a9\u4f60\u3002\n\u9644\u6ce8\uff1a\u5982\u679c\u4f60\u60f3\u8be2\u95eeQN\u5e76\u5bfb\u627e\u5176\u4ed6\u4eba\u6765\u5bfb\u627e\u540c\u6837\u7684\u4efb\u52a1\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f64\u65cf\u7fa4\uff1ahttps://chat.whatsapp.com/Ku8Oiv3ENKIDWArKH5NXec", "note_en": "I get a few calls every week these days from folks wanting to buy a small farm, start growing food, and even maybe settle down there now or later. This is a lot from folks around Bangalore, but there\u2019s been lots of calls from Delhi, Indore, Chennai, Hyderabad and elsewhere too. Am writing this as a collection of my personal views, thoughts and learnings that have been shared over these calls over time \u2014 think of it as a primer or an FAQ to run through before you decide to buy a piece of land somewhere and dive in.\n G o get a cup of chai or coffee and switch off notifications \u2014 this will be a slightly long, slow read and I\u2019d love you to not rush it :)\n  I\u2019m no star farmer and have more belief than \u201csuccess\u201d. We had bought about 5 acres in Coorg a decade ago and kind of left it alone, adding dozens of trees every now and then. This year we started paddy as well. I later got together with a bunch of friends and kicked off  The Tamarind Valley Collective (TVC). The idea appealed to many and this is now a 51 member farm that has turned around from being a barren, degraded landscape to a forest ecosystem that\u2019s robust and on its way to maturity. Given the interest in this I co-founded  Beforest with a couple of people \u2014 this has 2 collectives under its banner now; a coffee (being diversified) + wilderness at Coorg and the other near Hyderabad. The friend who helped us execute TVC went on to create  WeCommunites which is creating the Rose Valley Collective.\n I have since quit Beforest primarily to chase what I\u2019m calling the the \u201c Six Dots on the Map Problem\u201d \u2014 I\u2019ll elaborate this in a separate post and link this to that later. I have no continued commercial interest in creating the collectives, but I continue to be a champion of the idea and support them all. I am, of course, hoping that these farms, the members and the companies that benefit from it will help with the efforts towards solving the problem I mentioned above once a plan emerges and needs more to get involved. More on that later.\n     \u201cI want to go live a slower life and move there permanently. Eventually.\u201d\n   People have many different reasons some of which I paraphrased above. What are yours? Some easy ones to go with and an avoid -\n Don\u2019t do it in lieu of a mutual fund investment. It\u2019s not that kind of an investment. It\u2019s something you  do for your life, for your lifestyle, because you want to do a little bit of fixing what you can, and so on. Not for the \u201cinvestment portfolio\u201d your wealth advisor will track.\n Don\u2019t do it as an escape. Or to go spend some time in a green, nice place. You can always visit these farms, volunteer there or (plug alert!) visit the  Linger locations. Do it to learn, to get AND stay involved, to plant a tree for the future in the shade of which you may never sit. It does need a long term view and commitment.\n Definitely  don\u2019t do it as a mere real estate investment of the short term returns kind. The number of pieces of land that are locked up in this \u2014 neither used for living nor farmed, and \u201ccleaned\u201d regularly to desert levels \u2014 is just heartbreaking.\n Do it like you\u2019d bring up a child. There will be ups and downs and challenges and battles. There will be wins and losses. And if all of this adds up to  joy, it\u2019s worth it. Else you\u2019re merely setting yourself up for frustration.\n   Let\u2019s face it \u2014 ( gyaan alert!) \u2014 we\u2019re all products of an education system and corporate world and financial setup that is numbers driven, and the numbers have forced a shorter and shorter term view of everything around us. This deep seated instinct and the training of years in everything we do automatically gives rise to this RoI question for the farm as well. Especially since the sum of money you\u2019re investing into it is not small.\n This, though, is not  that kind of an investment. It\u2019s an investment into your life, into your and the kids\u2019 future and that of the planet. It\u2019s soil security, water security, food security and health, both for yourself and in the larger context.\n And it\u2019s almost incumbent upon those that can afford it to heal the soil and ecosystem \u2014 and that\u2019s a slow change. A farmer today cannot afford to wait the 3\u20134 years it may take to turn the degraded soil/ecosystem around to a healthy one since their lives depend on the next crop, even as it gets worse and worse for them.\n As you start on this journey, it\u2019s like sending a kid to kindergarten \u2014 you got to have the patience and determination to get the foundational bits right, focus on the learning and education before you think about what professional course the kid should focus on or what salary it can lead to. You should think of your farm similarly. Build the value in it in terms of the core natural processes and ecosystem services that will keep it strong in the face of various climatic conditions \u2014 diverse and robust \u2014 and the valuation of this bit of that will automatically follow and happen based on a variety of factors including the opportunities in the market at various points, the creativity one has, the value addition one can drive and so on. You should really focus on creating abundance at the farm, along various dimensions.\n Another huge way the farm can help from the financial pov is by reducing the need and role of money in your personal life as your become more and more of a producer of your food, your water, your energy needs, your leisure, better health and more. A key way to look at farming right is to grow for one\u2019s own needs at the farm first, and take the surplus to market. As the farm starts becoming abundant in various things in various seasons, there will  always be surplus \u2014 that\u2019s typically how nature works.\n The returns will be magical and come in unexpected ways \u2014 only if you do not pressurize the ecosystem early on to produce those conventionally for you. And no \u2014 large scale teak monocultures that will eventually get chopped down for timber don\u2019t help :)\n  You\u2019ve read those wonderful , encouraging stories on TheBetterIndia etc about farmers who are making 10 lakhs of a couple of acres of land after \u201cleaving their lucrative jobs in tech/finance\u201d. I am starting to think that while it encourages many in the immediate term, it may be beginning to do the same kind of damage to farming long term that the glossies did to our expectations around our lives, jobs etc.\n Farming is dependent on a gazillion variables which are all changing rapidly with the climate. In terms of monetization \u2014 the supply chain today is designed for the  usual crops and produce, around large volumes of a few things and thus against diversity, soil and the farmer him/herself. So you\u2019ll be battling that reality all the time.\n Some farmers will be able to find the sweet spot amidst all these variables once every few cycles and crack it. Do not start expecting this to be the default state, or start optimizing for that one thing that has a lot of value in the market today. Many others will be doing exactly the same and it\u2019ll not only not become a market reality just because of that (numerous earlier instances of a glut) but also harm your farm and the soil.\n Your most valuable input at the farm, and tool in this shift, is patience. That, and working with nature to create abundance, not trying to impose one\u2019s will on \u201cproduce this one thing\u201d on it. Starting with sensible, not-too-high expectations will surely help get somewhere nice.\n But hey, don\u2019t get scared! You have multiple things on your side \u2014 nature, more resources than an average farmer, a growing community for support and know-how and post reading this, hopefully the right motivations and expectations :)\n A forest like ecosystem takes time, iterations and un-and-relearning to get to. It is a lot more shock proof than conventional farms, and if you include the diversity of plants and foods you can grow in a  mature 7 layer farm (yep, it doesn\u2019t have to be a 2 dimensional one), will produce a lot more, all round the year and with far less work and inputs than regular farms do. Think beyond just organic. It gets easier and easier as the ecosystem develops, and your effort shifts to harvesting, value addition and figuring out ways to take it to market. It starts needing fewer and fewer inputs from outside, manage it\u2019s own moisture and soil fertility and keep surprising you positively.\n   Many who call in want to \u201cbuy a couple of acres and live off the land.\u201d It\u2019s a lovely, noble and slightly romantic thought. Before we kicked off TVC, I tried to understand the process at over a dozen farms friends had bought \u2014 only a couple who moved immediately made it work with huge levels of commitment and the rest went into limp-mode beyond a few months or a year at most.\n Small farms are also a lot more fragile ecologically. Everything that happens outside your boundary impacts your farm too so the larger the farm is, the less the impact. (Ideally, a village scale collective with the villagers divesting part of their degraded land would be ideal, but it\u2019s non trivial to pull that off at this point.)\n As a collective \u2014 many buying, planning, operating a large farm as one \u2014 makes a lot more sense. It\u2019s more robust as I explained earlier \u2014 it allows for a more sensible and logical use of the landscape to create edges, forested patches, waterbodies etc. You will not always have free time but in a larger group, someone or the other will, for sure. There\u2019s also shared learning, knowledge, experimentation and enthusiasm \u2014 we account too little for the last bit in the face of frustrating times and troughs.\n Financially too, it\u2019s a tough battle. You might easily be able to buy a 2\u20135\u20137\u201310 acres yourself, of course, depending on the cash you have. Then there\u2019s the cost of building all the essential bits out \u2014 a borewell/well, a pipeline for the various parts of the farm, a store, a shed, the fence, the pump room, electrical lines, backups, a shed for the cattle, a little house for yourself, one extra room for your guests, a house for the staff, the firewood shed \u2026. it keeps adding up. Then you get to the farming inputs, operational costs, caretakers\u2019 salaries, repair costs for the blown pumpsets etc, tools, and so on. When all of these are shared amongst a few dozen people, one\u2019s able to lower the costs to a fraction and also afford a  permaculture consultant, an  architect (pick one who is ecologically aware and conscious and pushed your boundaries on this) (I have linked to the ones who helped us plan things at TVC) and so on. It is just a lot more sensible way to do this.\n  My ideal imagined collective is one where folks find each other, come together, evolve a common purpose and agenda, and move ahead with the plans and execution with various people taking on different responsibilities, and the original land owners who\u2019ve divested some part of the land continuing to be a part of the collective and also take on roles in it. If you have a bunch of folks to do this together with and are confident of staying the course and putting in the time needed, this is a great way to create a farm.\n But for most folks, getting this going is tough. There\u2019s jobs and committment and know-how speed-breakers. TVC got off the ground because Vivasv/Varun helped us with the tough bits of land acquisition, vetting the paperwork, liaisoning with the panchayat and authorities, figuring out the construction teams and managing them. It is hybrid approach to a completely DIY effort and what traditional builders too wrt pre-decided plans and designs and folks signing up with a take-it-or-leave it. The members have been involved from early on in pretty much every aspect of the farm and collective \u2014 including the homes, the farm plans, the structures and rules that will help run the place.\n A managed process will of course have it\u2019s overheads \u2014 and it\u2019s fair that the team managing it make a living out of this. In any case they\u2019re not loading financing costs or risks on to this unlike for conventional builder projects, so the numbers are a lot saner. Also, if one includes the overheads one would incur for finding, vetting paperwork on and setting up one\u2019s own farm \u2014 and I speak from my experience at  our Coorg farm \u2014 this is likely more cost effective per person by a lot.\n   I\u2019ve already linked to  Beforest (collectives in Coorg and near Hyderabad) and  WeCommunites (RVC, near Thally, and one not far from Delhi) earlier. Both of these companies are creating permaculture/natural farming based collectives.\n  At the time of writing this, there\u2019s one member looking to exit TVC for personal reasons \u2014 you can get in touch with me if keen.\n I\u2019m not sure of the degree of member participation yet at the various collectives but given that they are born of the TVC template, am quite optimistic that these will take off nicely as well. The community is also something that\u2019s a responsibility and opportunity, and not just something you pick as a consumer \u2014 getting involved to drive it a certain way is always possible and much needed. Do ping me and ask for pointers should you need help.\n I know of someone trying to stitch up a collective 5\u20136 hours from Pune, at the base of Mahabaleshwar. Someone approached about a 40 acre piece of land and there\u2019s a bunch of people interested in a collective near Bangalore so you guys could connect and explore this. I am personally helping a few friends set up a micro collective of 6 acres near our farm in Coorg, and happy to help with more (I have no commercial interests, again, and will merely want some help and funding for community projects there \u2014 I believe folks investing into these places should help the local community with some capacity building as well.)\n  There are more conventional farm options as well. Jain Farms (a community of members is starting to take shape to pursue food forests and collective farming, from what I saw) \u2014 is a lot closer to Bangalore and one can commute into town multiple times a week easily, but was developed as split plots with roads in between so needs work for ecosystem restoration.  Hosachiguru has created many farms (not collectives) but from what I hear, it is split \u201cplots\u201d again and not particularly being done using natural farming methods or ecologically aware design. I\u2019d love to connect with the folks doing this and help reorient the efforts to the extent possible, and the member communities can always come together and move in that direction. Prakruthi farms is another such effort I\u2019ve heard of, amongst others, but these are further from being permaculture or natural farms.\n Palaash Farms is experimenting with a \u201cTry before you buy\u201d approach to get people to experience the farm life. I think it\u2019s a great idea so folks understand what they are getting into \u2014  Linger is open for this as well!\n But the great thing is a focus on farms and green spaces seems to be going mainstream, and I hope it grows even more. I\u2019m happy to assist in any way possible, and I hope this dump of what I\u2019ve learned and felt in my journey helps you.\n P.S. If you want to ask qns and find other ppl on the same quest, there\u2019s a WA group :  https://chat.whatsapp.com/Ku8Oiv3ENKIDWArKH5NXec", "posttime": "2020-11-05 20:18:02", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u519c\u573a,buy", "title": "\u6240\u4ee5\u4f60\u60f3\u4e70\u4e2a\u519c\u573a\uff1f", "title_en": "So you want to buy a farm?", "transed": 1, "url": "https://zenx.medium.com/so-you-want-to-buy-a-farm-c56af5d85a7e", "via": "", "real_tags": ["\u519c\u573a", "buy"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033302, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Wasm\u662fFFmpeg\u7684\u7eafWebAssembly/JavaScript\u7aef\u53e3\u3002\u5b83\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u5185\u5f55\u5236\u3001\u8f6c\u6362\u548c\u6d41\u5f0f\u4f20\u8f93\u89c6\u9891\u548c\u97f3\u9891\u3002", "note_en": "ffmpeg.wasm is a pure WebAssembly / JavaScript port of FFmpeg. It enables video & audio record, convert and stream right inside browsers.", "posttime": "2020-11-05 20:17:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "java,javascript,webassembly,ffmpeg", "title": "FFmpeg\u7684\u7eafWebAssembly/JavaScript\u79fb\u690d", "title_en": "A pure WebAssembly / JavaScript port of FFmpeg", "transed": 1, "url": "https://ffmpegwasm.github.io/", "via": "", "real_tags": ["java", "ffmpeg"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033301, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u8bc1\u660e\u4e86RNN\u80fd\u591f\u51c6\u786e\u5730\u5b9e\u73b0\u6709\u754c\u6df1\u5ea6\u7684\u5806\u6808\uff0c\u4ee5\u6700\u4f18\u7684\u6548\u7387\u6355\u83b7\u4eba\u7c7b\u8bed\u8a00\u7684\u6784\u5efa\u5757\uff0c\u8fd9\u4e00\u7ed3\u679c\u8bc1\u660e\u4e86RNN\u53ef\u4ee5\u51c6\u786e\u5730\u5b9e\u73b0\u6709\u754c\u6df1\u5ea6\u7684\u5806\u6808\u3002\n2015\u5e74\uff0c\u5b89\u5fb7\u70c8\u00b7\u5361\u5e15\u897f\u53d1\u8868\u4e86\u4e00\u7bc7\u5173\u4e8e\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u4e0d\u5408\u7406\u6709\u6548\u6027\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u73b0\u5728\u5df2\u7ecf\u5f88\u6709\u540d\u4e86\u30021\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u4ed6\u5206\u4eab\u4e86\u4ed6\u5bf9RNN\u7684\u7ecf\u9a8c\u6548\u7528\u548c\u5b66\u4e60\u884c\u4e3a\u611f\u5230\u7684\u4e00\u4e9b\u60ca\u5947\u3002\u4e3a\u4e86\u603b\u7ed3\u8fd9\u79cd\u5947\u5999\u7684\u611f\u89c9\uff0c\u5361\u5e15\u897f\u5f3a\u8c03\uff1a\n\u6211\u4eec\u5c06\u8bad\u7ec3RNN\u9010\u4e2a\u5b57\u7b26\u751f\u6210\u6587\u672c\uff0c\u5e76\u601d\u8003\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898\uff1a\u201c\u8fd9\u600e\u4e48\u53ef\u80fd\uff1f\u201d\n\u91cd\u8bfb\u5361\u5e15\u897f\u6700\u8fd1\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u5373\u4f7f\u662f\u5728\u5927\u578b\u9884\u5148\u57f9\u8bad\u7684\u53d8\u538b\u5668\u7684\u65f6\u4ee3\uff0c\u6211\u4ecd\u7136\u53d1\u73b0\u4e2d\u7b49\u5927\u5c0f\u7684RNN\u5bf9\u4e8e\u5b66\u4e60\u9ad8\u5ea6\u7ed3\u6784\u5316\u7684\u8f93\u51fa\u7a7a\u95f4\u7684\u6709\u6548\u6027\u5f88\u6709\u8da3\u3002\u4f8b\u5982\uff0cAndrej\u5c55\u793a\u4e86\u4e00\u4e2a\u9488\u5bf9Wikipedia\u57f9\u8bad\u7684RNN\u7684\u6837\u672c\uff0c\u5b83\u4e0d\u4ec5\u5b66\u4e60\u751f\u6210\u76f8\u5bf9\u8bed\u6cd5\u7684\u82f1\u8bed\uff0c\u800c\u4e14\u5b66\u4e60\u751f\u6210Wikipedia\u7684\u6587\u7ae0\u7ed3\u6784\u751a\u81f3\u6709\u6548\u7684XML\u4ee3\u7801\u3002\n\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u63cf\u8ff0\u4e86\u7406\u89e3\u5361\u5e15\u897f\u95ee\u9898\u7684\u6700\u65b0\u8fdb\u5c55--\u8fd9\u600e\u4e48\u53ef\u80fd\u5462\uff1f\n\u4ece\u7ecf\u9a8c\u4e0a\u770b\uff0cRNN\u5728\u5b66\u4e60\u8bed\u8a00\u8bed\u6cd5\u65b9\u9762\u975e\u5e38\u6709\u6548\uff01\u4e00\u65b9\u9762\uff0c\u8981\u771f\u6b63\u5904\u7406\u603b\u4f53\u4e0a\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u6709\u5fc5\u8981\u6a21\u62df\u5806\u6808\u4e2d\u7684\u63a8\u9001\u548c\u5f39\u51fa\u5143\u7d20\uff0c\u8fd9\u662f\u8bed\u6cd5\u5206\u6790\u4e2d\u7684\u57fa\u672c\u64cd\u4f5c\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u4eba\u4eec\u5bf9RNN\u6301\u5065\u5eb7\u7684\u6000\u7591\u6001\u5ea6\uff1b\u4ed6\u4eec\u53ef\u80fd\u53ea\u662f\u50cfn\u5143\u8bed\u6cd5\u6a21\u578b\u90a3\u6837\u7edf\u8ba1\u53ef\u80fd(\u957f)\u7684\u5355\u8bcd\u5e8f\u5217\uff0c\u5e76\u7531\u4e8e\u5355\u8bcd\u5d4c\u5165\u800c\u5206\u4eab\u4e00\u4e9b\u7edf\u8ba1\u5f3a\u5ea6\u3002\n\u90a3\u4e48\uff0c\u5230\u5e95\u662f\u54ea\u4e00\u4e2a\u5462\uff1fRNN\u7684\u6a21\u7cca\u9690\u85cf\u72b6\u6001\u4f3c\u4e4e\u4e0d\u9002\u5408\u5806\u6808\u4e00\u6837\u7684\u884c\u4e3a\uff0c\u5df2\u7ecf\u5efa\u7acb\u4e86\u8bb8\u591a\u6a21\u578b\u6765\u5f25\u8865\u8fd9\u4e00\u70b9\uff0c\u4eceLSTM\u7684\u6709\u5e8f\u795e\u7ecf\u5143\u53d8\u4f53(\u6c88\u7b49\u4eba\uff0c2019\u5e74)\u5230\u7528\u663e\u5f0f\u5916\u90e8\u5806\u6808\u6269\u5c55\u7684RNN(Joulin\u548cMikolov\uff0c2015)\u3002\u751a\u81f3\u5df2\u7ecf\u8bc1\u660e\uff0cRNN\u4e00\u822c\u4e0d\u80fd\u8bc6\u522b\u5c42\u6b21\u5316\u8bed\u8a00(Merrill\u7b49\u4eba\uff0c2020)\uff01\u5806\u6808\u7684\u60c5\u51b5\u770b\u8d77\u6765\u5e76\u4e0d\u4e50\u89c2\uff0c\u8fd9\u6709\u52a9\u4e8e\u6211\u4eec\u6f84\u6e05\u8fd9\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u53ef\u80fd\u7684\uff1aRNN\u4e2d\u7c7b\u4f3c\u5806\u6808\u7684\u884c\u4e3a\u5728\u73b0\u5b9e\u73af\u5883\u4e2d\u662f\u53ef\u80fd\u7684\u5417\uff1f\n\u6211\u4eec\u4e3a\u8fd9\u4e2a\u95ee\u9898\u589e\u52a0\u4e86\u4e00\u4e2a\u6d1e\u5bdf\u529b\uff1a\u5728\u5904\u7406\u81ea\u7136\u8bed\u8a00\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9650\u5236\u5806\u6808\u4e0a\u9700\u8981\u5b58\u50a8\u7684\u6700\u5927\u6570\u91cf\u7684\u4e1c\u897f\u3002\u4e00\u65e6\u4f60\u5047\u8bbe\u4e86\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u975e\u5e38\u60ca\u8bb6\u5730\u8bc1\u660e\u4e86\u4ee5\u4e0b\u5185\u5bb9\u7684\u6b63\u5f0f\u7248\u672c\uff1a\nRNN\u53ef\u4ee5\u5982\u6b64\u9ad8\u6548\u5730\u5c06\u5b83\u4eec\u7684\u9690\u85cf\u72b6\u6001\u8f6c\u6362\u4e3a\u6709\u9650\u5bb9\u91cf\u7684\u5806\u6808\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u53ef\u4ee5\u4f7f\u7528\u6e10\u8fd1\u6700\u4f18\u7684\u5c11\u91cf\u9690\u85cf\u5b58\u50a8\u5355\u5143\u6765\u751f\u6210\u4e00\u79cd\u6709\u754c\u7684\u5c42\u6b21\u5316\u8bed\u8a00\u3002\n\u6211\u4eec\u8bc1\u660e\u4e86RNN\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u800c\u4e0d\u662f\u8bf4\u4ed6\u4eec\u5b66\u4f1a\u4e86\u8fd9\u6837\u505a\u3002\u7136\u800c\uff0c\u6211\u4eec\u7684\u8bc1\u660e\u5305\u62ecRNN\u53ef\u4ee5\u5b9e\u73b0\u6709\u754c\u6df1\u5ea6\u5806\u6808\u7684\u663e\u5f0f\u673a\u5236\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8fd8\u4e3a\u53ea\u4f7f\u7528\u5176\u95e8\u7684LSTM\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u3001\u66f4\u6709\u6548\u7684\u673a\u5236\u3002\n\u6211\u4eec\u7684\u7ed3\u679c\u6539\u53d8\u4e86\u6211\u5bf9RNN\u7684\u770b\u6cd5\u3002RNN\u786e\u5b9e\u4e0d\u80fd\u5b9e\u73b0\u4efb\u610f\u6df1\u5ea6\u7684\u5806\u6808(\u5c31\u50cf\u4e0b\u63a8\u81ea\u52a8\u673a\u4e00\u6837)\u3002\u5b83\u4eec\u7684\u5185\u5b58\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u662f\u6709\u9650\u72b6\u6001\u673a)\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u53ef\u4ee5\u5c06\u9690\u85cf\u72b6\u6001\u8f6c\u6362\u4e3a\u5806\u6808\u7ed3\u6784\u7684\u5185\u5b58\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u53ef\u4ee5\u5904\u7406\u4e00\u4e9b(\u6709\u754c\u7684\uff0c\u5c42\u6b21\u5316\u7684\uff01)\u3002\u8bed\u8a00\u7684\u6548\u7387\u6bd4\u4eba\u4eec\u5728\u5b66\u4e60\u6709\u9650\u72b6\u6001\u673a\u65f6\u60f3\u8c61\u7684\u8981\u9ad8\u5f97\u591a\u3002\u6211\u4eec\u8ba4\u4e3a\uff0c\u8fd9\u610f\u5473\u7740\u4e54\u59c6\u65af\u57fa\u5c42\u6b21\u4e0d\u662f\u6211\u4eec\u5e94\u8be5\u7528\u6765\u63cf\u8ff0\u795e\u7ecf\u6a21\u578b\u8868\u8fbe\u80fd\u529b\u7684(\u552f\u4e00)\u4e1c\u897f\uff1b\u5373\u4f7f\u5728\u6700\u7b80\u5355\u7684(\u6709\u9650\u72b6\u6001)\u5236\u5ea6\u4e0b\uff0c\u8fd9\u4e9b\u7f51\u7edc\u7684\u8bb0\u5fc6\u7ed3\u6784\u4e5f\u5f88\u6709\u8da3\u3002\u6211\u4eec\u5e0c\u671b\u6211\u4eec\u7684\u8bc1\u660e\u548c\u6784\u9020\u80fd\u5e2e\u52a9\u4eba\u4eec\u601d\u8003\u548c\u5206\u6790RNN\u884c\u4e3a\uff0c\u5e76\u542f\u53d1\u795e\u7ecf\u4f53\u7cfb\u7ed3\u6784\u7684\u672a\u6765\u6539\u8fdb\u3002\n\u672c\u6587\u57fa\u4e8e\u8bba\u6587\u300aRNNS\u53ef\u4ee5\u751f\u6210\u5177\u6709\u6700\u4f73\u5185\u5b58\u7684\u6709\u9650\u5c42\u6b21\u5316\u8bed\u8a00\u300b\uff0c\u53d1\u8868\u4e8eEMNLP 2020\uff0c\u4e0eMichael Hahn\u3001Surya Ganguli\u3001Percy Leung\u548cChris Manning\u8054\u5408\u53d1\u8868\u3002\n\u7406\u8bbatl\uff1bdr\uff1a\u6211\u4eec\u5f15\u5165\u4e86DYCK-((k\uff0cm))\uff0c\u8fd9\u662f\u4e00\u79cd\u5d4c\u5957\u6df1\u5ea6\u81f3\u591a\u4e3a(M)\u7684k\u578b\u65b9\u62ec\u53f7\u8bed\u8a00\uff0c\u5e76\u8bc1\u660e\u4e86RNN\u53ef\u4ee5\u5728O(m\\log k)\u4e2a\u9690\u542b\u5355\u5143\u4e2d\u751f\u6210\u8fd9\u4e9b\u8bed\u8a00\uff0c\u6bd4\u5df2\u6709\u7684\u4f7f\u7528O(k^{m/2})\u7684\u7ed3\u6784\u6709\u4e86\u6307\u6570\u7684\u6539\u8fdb\uff0c\u6211\u4eec\u8fd8\u8bc1\u660e\u4e86\u8fd9\u662f\u7d27\u7684\uff0c\u4f7f\u7528o(m\\log k)\u662f\u4e0d\u53ef\u80fd\u7684\u3002\n\u6211\u4eec\u5c06\u4ece\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7684\u7b2c\u4e8c\u4e2a\u6700\u6709\u8da3\u7684\u90e8\u5206\u5f00\u59cb\uff1a\u8bed\u8a002\u3002\u5728\u4eba\u7c7b\u8bed\u8a00\u4e2d\uff0c\u5355\u8bcd\u7684\u53d1\u97f3\u987a\u5e8f\u5f88\u91cd\u8981[\u9700\u8981\u5f15\u7528]\u3002\u4f46\u5b83\u4eec\u7684\u987a\u5e8f\u5e76\u4e0d\u80fd\u5373\u523b\u63d0\u4f9b\u6574\u4e2a\u6545\u4e8b\uff1b\u4eba\u7c7b\u8bed\u8a00\u4e2d\u6709\u4e30\u5bcc\u7684\u7ed3\u6784\uff0c\u5b83\u63a7\u5236\u7740\u5355\u8bcd\u548c\u77ed\u8bed\u7684\u610f\u4e49\u662f\u5982\u4f55\u7ec4\u6210\u7684\uff0c\u4ece\u800c\u5f62\u6210\u66f4\u591a\u8bed\u8a00\u7684\u610f\u4e49\u3002\u7531\u4e8e\u8bed\u8a00\u4e2d\u7684\u7b49\u7ea7\u4f9d\u8d56\uff0c\u8bed\u8a00\u7684\u7ebf\u6027(\u5373\uff0c\u7ed9\u5b9a\u7684)\u987a\u5e8f\u7684\u4e0d\u8db3\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e0b\u4e0b\u9762\u7684\u53e5\u5b50\uff1a\n\u5728\u8fd9\u91cc\uff0c\u4f8b\u5916\u7684\u4ecd\u7136\u662f\u53a8\u5e08\uff0c\u800c\u4e0d\u662f\u5546\u5e97\uff0c\u8fd9\u8868\u660e(\u53a8\u5e08\uff0c\u662f)\u5173\u7cfb\u4e0d\u662f\u57fa\u4e8e\u7ebf\u6027\u987a\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u6216\u591a\u6216\u5c11\u5730\u7ee7\u7eed\u73a9\u8fd9\u4e2a\u6e38\u620f\uff0c\u53ea\u8981\u6211\u4eec\u613f\u610f\uff1a\n\u82f1\u8bed\u4e2d\u7684\u4e3b\u8c13\u4e00\u81f4\u5173\u7cfb\uff0c\u5982(chef\uff0cis)\uff0c\u662f\u8bed\u8a00\u7b49\u7ea7\u6027\u8d28\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u66f4\u666e\u904d\u7684\u662f\uff0c\u8bed\u8a00\u7684\u53e5\u5b50\u7b49\u7ea7\u5173\u7cfb\u662f\u4ee5\u53e5\u6cd5\u6ce8\u91ca\u7684\u5f62\u5f0f\u63cf\u8ff0\u7684\uff0c\u901a\u5e38\u662f\u4ee5\u6811\u7684\u5f62\u5f0f\uff0c\u5982\u4e0b\u9762\u7684\u77ed\u8bed3\uff1a\n\u8fd9\u4e24\u4e2a\u6811\u4e3a\u77ed\u8bed\u81ea\u7136\u8bed\u8a00\u5904\u7406\u63d0\u4f9b\u4e86\u4e24\u79cd\u622a\u7136\u4e0d\u540c\u7684\u89e3\u91ca\u3002\u5728\u6700\u5de6\u8fb9\u7684\u6811\u4e2d\uff0c\u8bed\u8a00\u548c\u5904\u7406\u9996\u5148\u7ed3\u5408\u5728\u4e00\u8d77\u3002\u7136\u540e\uff0c\u8bed\u8a00\u5904\u7406\u4e0e\u81ea\u7136\u7ed3\u5408\u3002\u6240\u4ee5\uff0c\u8bed\u8a00\u5904\u7406\u662f\u4ee5\u5176\u81ea\u7136\u6027\u4e3a\u7279\u5f81\u7684\u3002\u8fd9\u662f\u5bf9\u81ea\u7136\u8bed\u8a00\u7684\u6709\u610f\u89e3\u8bfb\u5417\uff1f\u6211\u8ba4\u4e3a\uff0c\u4e0d\u662f\u3002\u5728\u6700\u53f3\u8fb9\u7684\u6811\u4e2d\uff0c\u6211\u4eec\u6709\u81ea\u7136\u4e0e\u8bed\u8a00\u7684\u7ed3\u5408\u3002\u7136\u540e\u81ea\u7136\u8bed\u8a00\u548c\u5904\u7406\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6b63\u5728\u5904\u7406\u4e00\u79cd\u53eb\u505a\u81ea\u7136\u8bed\u8a00\u7684\u4e1c\u897f\u3002\u8fd9\u66f4\u50cf\u662f\u4e00\u79cd\u8bed\u8a00\u3002\n\u8bed\u6cd5\u7684\u4e00\u79cd\u5e38\u89c1\u5f62\u5f0f\u662f\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff0c\u5bf9\u4e8e\u81ea\u7136\u8bed\u8a00\u548c\u50cfXML\u8fd9\u6837\u7684\u8bed\u8a00\u90fd\u662f\u5982\u6b64\u3002\u4e0a\u9762\u7ed9\u51fa\u7684\u77ed\u8bed\u81ea\u7136\u8bed\u8a00\u5904\u7406(Natural Language Processing)\u7684\u4f8b\u5b50\u662f\u975e\u6b63\u5f0f\u7684\uff0c\u4f46\u8fd9\u91cc\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u4f8b\u5b504\uff1a\n\u6811\u4e0a\u7684\u6807\u7b7e\u975e\u5e38\u6709\u7528\uff0c\u4f46\u6211\u4eec\u4e0d\u4f1a\u6df1\u5165\u8ba8\u8bba\u5b83\u4eec\u7684\u542b\u4e49\u3002\u8981\u67e5\u770b\u8fd9\u79cd\u7ed3\u6784\u548c\u5806\u6808\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u8bf7\u8003\u8651\u5bf9\u6811\u8fdb\u884c\u9884\u6392\u5e8f\u904d\u5386\u3002\n(s(np(Dt The)(NN\u4e2a\u5b69\u5b50))(VP(Vbd Ate)(np(Dt The)(nn\u4e2a\u86cb\u7cd5)(PP(Jj With)(np(Dt A)(np(Dt A)(nn\u52fa\u5b50)\u3002\n\u5f53\u7136\uff0c\u5904\u7406\u771f\u5b9e\u8bed\u8a00\u7684\u4e00\u4e2a\u5173\u952e\u56f0\u96be\u662f\u6ca1\u6709\u63d0\u4f9b\u5185\u90e8\u8282\u70b9(\u5982(S)\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u89e3\u6790\u5bf9\u4e8e\u81ea\u7136\u8bed\u8a00\u6765\u8bf4\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e9b\u5185\u90e8\u8282\u70b9\uff0c\u4eba\u4eec\u4e5f\u9700\u8981\u80fd\u591f\u4ece\u5185\u90e8\u8282\u70b9\u63a8\u9001\u548c\u5f39\u51fa\u503c\u3002)\u5f53\u7136\uff0c\u5904\u7406\u771f\u5b9e\u8bed\u8a00\u7684\u4e00\u4e2a\u5173\u952e\u56f0\u96be\u662f\u6ca1\u6709\u63d0\u4f9b\u5185\u90e8\u8282\u70b9(\u5982(S)\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u89e3\u6790\u5bf9\u4e8e\u81ea\u7136\u8bed\u8a00\u6765\u8bf4\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u8bbf\u95ee\u8fd9\u4e9b\u5185\u90e8\u8282\u70b9\uff0c\u4e5f\u9700\u8981\u80fd\u591f\u4ece\u5185\u90e8\u8282\u70b9\u63a8\u9001\u548c\u5f39\u51fa\u503c)\u3002\u5f53\u7136\uff0c\u5904\u7406\u771f\u5b9e\u8bed\u8a00\u7684\u4e00\u4e2a\u5173\u952e\u56f0\u96be\u662f\u6ca1\u6709\u63d0\u4f9b\u5185\u90e8\u8282\u70b9(\u5982(S)\uff1b\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u89e3\u6790\u5bf9\u4e8e\u81ea\u7136\u8bed\u8a00\u6765\u8bf4\u5e76\u4e0d\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u8bbf\u95ee\u8fd9\u4e9b\u5185\u90e8\u8282\u70b9\uff0c\u4e5f\u9700\u8981\u80fd\u591f\u4ece\u5185\u90e8\u8282\u70b9\u63a8\u9001\u548c\u5f39\u51fa\u503c\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u662f\u6b63\u786e\u7684\uff0c\u5bf9\u4e8eRNN\u7684\u7279\u6b8a\u60c5\u51b5\u4e5f\u662f\u5982\u6b64\u3002\n\u90a3\u4e48\uff0c\u5982\u679c\u89e3\u6790\u81ea\u7136\u8bed\u8a00\u9700\u8981\u4e00\u4e2a\u5806\u6808\uff0c\u90a3\u4e48RNN\u5728\u505a\u4ec0\u4e48\u5462\uff1f\u7c97\u7565\u5730\u8bf4\uff0cRNN\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u5e94\u7528\u4e86\u4e24\u79cd\u7b56\u7565\u4e2d\u7684\u4e00\u79cd(\u6216\u67d0\u79cd\u7ec4\u5408)\uff1a\n\u8868\u9762\u7edf\u8ba1\uff1a\u901a\u8fc7\u6c47\u603b\u5927\u91cf\u7edf\u8ba1\u6570\u636e\uff0c\u4e86\u89e3\u4e00\u4e9b\u5355\u8bcd(\u5982\u201cthe\u201d)\u5982\u4f55\u51fa\u73b0\u5728\u4e0d\u540c\u7684\u5355\u8bcd(\u540d\u8bcd)\u7ec4\u4e4b\u524d\uff0c\u4ee5\u53ca\u54ea\u4e9b\u540d\u8bcd\u53ef\u80fd\u4f1a\u201c\u5403\u6389\u201d\u7b49\u7b49\uff0c\u7f51\u7edc\u53ef\u80fd\u53ea\u662f\u5b66\u4e60\u4e86\u4e00\u4e2a\u8f6f\u7248\u672c\u7684n\u5143\u8bed\u6cd5\u8bed\u8a00\u6a21\u578b\uff0c\u5728\u5355\u8bcd\u4e4b\u95f4\u5171\u4eab\u7edf\u8ba1\u5f3a\u5ea6\uff0c\u5e76\u5141\u8bb8\u76f8\u5bf9\u8f83\u5927\u7684n\u3002\n\u7c7b\u4f3c\u5806\u6808\u7684\u884c\u4e3a\uff1a\u901a\u8fc7\u6a21\u62df\u5806\u6808\uff0cRNN\u53ef\u80fd\u4f1a\u201c\u4ee5\u6b63\u786e\u7684\u65b9\u5f0f\u201d\u5904\u7406\u8bed\u8a00\uff0c\u5c06\u5355\u8bcd\u6216\u62bd\u8c61\u5143\u7d20\u4f5c\u4e3a\u89c2\u5bdf\u5230\u7684\u6807\u8bb0\u8fdb\u884c\u63a8\u9001\u548c\u5f39\u51fa\uff0c\u5e76\u5b9e\u73b0\u5bf9\u53e5\u5b50\u7684\u9690\u5f0f\u89e3\u6790\u3002\n\u5f88\u53ef\u80fd\uff0c\u4e8b\u5b9e\u65e2\u4e0d\u662f\u8868\u9762\u7684\u7edf\u8ba1\u6545\u4e8b\uff0c\u4e5f\u4e0d\u662f\u786e\u5207\u7684\u5806\u6808\u884c\u4e3a\u6545\u4e8b\u3002\u7136\u800c\uff0c\u6211\u4eec\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\u80fd\u591f\u5c55\u793a\u7684\u662f\uff0cRNN\u80fd\u591f\u51c6\u786e\u5730\u6a21\u62df\u6709\u9650\u5bb9\u91cf\u7684\u5806\u6808\uff0c\u5e76\u4e14\u6211\u4eec\u63d0\u4f9b\u4e86\u5b83\u4eec\u63d0\u4f9b\u8be5\u884c\u4e3a\u7684\u53ef\u5b66\u4e60\u53c2\u6570\u7684\u6e05\u6670\u3001\u51c6\u786e\u7684\u89c4\u8303\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u5b83\u4eec\u6267\u884c\u7684\u5806\u6808\u6a21\u62df\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4e5f\u662f\u5c3d\u53ef\u80fd\u9ad8\u6548\u7684(\u4f5c\u4e3a\u6a21\u62df\u7279\u5b9a\u5927\u5c0f\u7684\u5806\u6808\u6240\u9700\u7684\u9690\u85cf\u5355\u5143\u7684\u6570\u91cf\u7684\u51fd\u6570)\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u884c\u4e3a\u4e0d\u4ec5\u4ec5\u662f\u3002\u8fd9\u662fRNN\u80fd\u591f\u6700\u6709\u6548\u5730\u8868\u8fbe\u7684\u4e00\u7ec4\u529f\u80fd\u3002\u6211\u4eec\u5e0c\u671b\u8fd9\u4e9b\u89c1\u89e3\u80fd\u591f\u6307\u5bfcRNN\u672a\u6765\u7684\u5b9e\u8bc1\u5206\u6790\uff0c\u4ee5\u53ca\u5efa\u6a21\u5de5\u4f5c\u3002\n\u795e\u7ecf\u7f51\u7edc\u7684\u8ba1\u7b97\u80fd\u529b\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u4eba\u4eec\u5bf9\u67d0\u4e9b\u201c\u5b9e\u73b0\u7ec6\u8282\u201d\u7684\u5047\u8bbe\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u542c\u8bf4\u8fc7RNN\u662f\u56fe\u7075\u5b8c\u5168\u7684\uff015\u53e6\u4e00\u65b9\u9762\uff0c\u6700\u8fd1\u7684\u7814\u7a76\u8868\u660eRNN\u6ca1\u6709\u80fd\u529b\u8bc6\u522b\u6700\u7b80\u5355\u7684\u9700\u8981\u5806\u6808\u7684\u8bed\u8a00\u30026\u4e2a\u3002\n\u8fd9\u4e9b\u5de5\u4f5c\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u5bf9\u5982\u4f55\u4f7f\u7528RNN\u6240\u505a\u7684\u5047\u8bbe\u3002\u5982\u679c\u4f60\u7528\u65e0\u9650\u7684\u4f4d\u6570\u8868\u793aRNN\u7684\u6bcf\u4e2a\u9690\u85cf\u5355\u5143\uff0c\u5e76\u5141\u8bb8\u5b83\u8bfb\u53d6\u6574\u4e2a\u8f93\u5165(\u53e5\u5b50)\uff0c\u7136\u540e\u6839\u636e\u9700\u8981\u5c06\u5176\u5c55\u5f00\u5c3d\u53ef\u80fd\u957f\u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u4f60\u5c31\u4f1a\u5f97\u5230\u56fe\u7075\u5b8c\u6210\u7684\u7ed3\u679c\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u80fd\u53cd\u6620RNN\u5728\u5b9e\u8df5\u4e2d\u662f\u5982\u4f55\u4f7f\u7528\u7684\u3002\u5982\u679c\u4f60\u7528\u968f\u8f93\u5165\u957f\u5ea6\u5bf9\u6570\u7f29\u653e\u7684\u4f4d\u6570\u6765\u8868\u793aRNN\u7684\u6bcf\u4e2a\u9690\u85cf\u5355\u5143\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8f93\u5165\u7b26\u53f7\u53ea\u5c55\u5f00RNN\u4e00\u6b21\uff0c\u90a3\u4e48\u7ed3\u679c\u5c31\u662fRNN\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u7528\u4e0d\u9650\u6570\u91cf\u7684\u4f4d\u6765\u8868\u793aRNN\u7684\u6bcf\u4e2a\u9690\u85cf\u5355\u5143\uff0c\u5e76\u4e14\u5141\u8bb8\u5b83\u8bfb\u53d6\u6574\u4e2a\u8f93\u5165(\u53e5\u5b50)\uff0c\u7136\u540e\u6839\u636e\u9700\u8981\u5c55\u5f00RNN\uff0c\u90a3\u4e48\u4f60\u5c31\u5f97\u5230\u4e86\u56fe\u7075\u5b8c\u6210\u7684\u7ed3\u679c\u3002\u7136\u800c\uff0c\u8fd9\u5e76\u4e0d\u80fd\u53cd\u6620RNN\u5728\u5b9e\u8df5\u4e2d\u662f\u5982\u4f55\u4f7f\u7528\u7684\u3002\n\u5728\u6211\u4eec\u7684\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u8003\u8651\u4e86\u4e00\u79cd\u66f4\u6709\u7ea6\u675f\u7684\u8bbe\u7f6e\uff1a\u6211\u4eec\u5047\u8bbeRNN\u4e2d\u7684\u6bcf\u4e2a\u9690\u85cf\u5355\u5143\u90fd\u5177\u6709\u4e00\u4e2a\u7531\u6709\u9650\u4f4d\u6570\u6307\u5b9a\u7684\u503c--\u8be5\u503c\u4e0d\u4f1a\u968f\u7740\u5e8f\u5217\u957f\u5ea6\u6216\u8bed\u8a00\u590d\u6742\u6027\u7684\u4efb\u4f55\u5ea6\u91cf\u800c\u589e\u957f\u3002\u6b63\u5982\u6211\u4eec\u5c06\u5c55\u793a\u7684\u90a3\u6837\uff0c\u8fd9\u5bf9\u6211\u4eec\u53ef\u4ee5\u7814\u7a76\u7684RNN\u7684\u5c5e\u6027\u7c7b\u578b\u6709\u975e\u5e38\u6709\u8da3\u7684\u5f71\u54cd\uff01\n\u5371\u9669\uff1a\u975e\u5e38\u7406\u8bba\u6027\u7684\u6bb5\u843d\u6700\u540e\uff0c\u4f60\u4f1a\u770b\u5230\u6211\u4eec\u63d0\u5230\u5927\u591a\u6570\u65e9\u671f\u7684\u5de5\u4f5c\u662f\u8bc4\u4f30RNN\u7684\u8bc6\u522b\u8bed\u8a00\u7684\u80fd\u529b\u3002\u8fd9\u662f\u6b63\u5f0f\u7684\u8bed\u8a00\u6f14\u8bb2\uff1b\u8bed\u8a00\u662f\u8bcd\u6c47\u8868\\(\\Sigma\\)\u4e2d\u7684\u4e00\u7ec4\u5b57\u7b26\u4e32\\(\\Mathcal{L}\\subseteq\\Sigma^*\\)\u3002\u4e3a\u4e86\u8bc6\u522b\u4efb\u4f55\u5b57\u7b26\u4e32\u7684\u8bed\u8a00\\(\\Mathcal{L}\\)\uff0cRNN\u53ef\u4ee5\u8bfb\u53d6\\(\\Sigma^*\\)\u4e2d\u7684\u6574\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u6700\u540e\u5bf9\u8be5\u5b57\u7b26\u4e32\u662f\u5426\u5c5e\u4e8e\\(\\Mathcal{L}\\)\u505a\u51fa\u4e8c\u5143\u5224\u5b9a\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0cRNN\u53ef\u4ee5\u8bfb\u53d6\\(\\Mathcal{L}\\)\u4e2d\u7684\u6574\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u6700\u540e\u4ea7\u751f\u5173\u4e8e\u8be5\u5b57\u7b26\u4e32\u662f\u5426\u5c5e\u4e8e\\(\\Mathcal{L})\u7684\u4e8c\u5143\u51b3\u7b56\u3002\u5728\u8fd9\u9879\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u5c06RNN\u79f0\u4e3a\u751f\u6210\u4e00\u79cd\u8bed\u8a00\\(\\Mathcal{L}\\)\u3002\u8fd9\u662f\u6211\u4eec\u5f3a\u52a0\u7684\u4e00\u4e2a\u65b0\u8981\u6c42\uff0c\u4ee5\u4f7f\u7406\u8bba\u8bbe\u7f6e\u66f4\u50cfRNN\u5728\u5b9e\u8df5\u4e2d\u7684\u4f7f\u7528\u65b9\u5f0f\uff1a\u9010\u4e2a\u4ee4\u724c\u9884\u6d4b\u8f93\u51fa\u4ee4\u724c\uff01\u5b9e\u9645\u4e0a\uff0c\u8fd9\u5f3a\u5236\u4e86\u4e00\u4e2a\u7ea6\u675f\uff0c\u5373RNN\u7684\u9690\u85cf\u72b6\u6001\u5728\u6bcf\u4e2a\u65f6\u95f4\u6b65\u90fd\u662f\u53ef\u8bfb\u7684\uff1b\u5982\u679c\u4f60\u5bf9\u7ec6\u8282\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u770b\u770b\u62a5\u7eb8\u3002\n\u5728\u8fd9\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u6211\u4eec\u5c06\u8981\u4f7f\u7528\u7684\u8bed\u8a00\uff1aDyck-\\((k\uff0cm)\\)\u3002\u6211\u4eec\u4eceDyck-\\(k\\)\u5f00\u59cb\uff0c\u8fd9\u662f\u4e00\u79cd\u5d4c\u5957\u826f\u597d\u7684\\(k\\)\u578b\u65b9\u62ec\u53f7\u8bed\u8a00\u3002\u7c7b\u4f3c\u4e8e\u8bed\u8a00\u4e2d\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u5982\u4e0b\u4f8b\u6240\u793a\uff0c\u7a81\u51fa\u4e86\u4e2d\u5fc3\u5d4c\u5165\u5b50\u53e5\u4e2d\u4e3b\u8bed\u548c\u52a8\u8bcd\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\n\u4e8b\u5b9e\u4e0a\uff0c\u5c3d\u7ba1Dyck-(k\\)\u5f88\u7b80\u5355\uff0c\u4f46\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u5b83\u662f\u4e00\u79cd\u5178\u578b\u7684\u5c42\u6b21\u5316\u8bed\u8a00\u3002\u56de\u60f3\u90a3\u4e9b\u4e0a\u4e0b\u6587\u65e0\u5173\u7684\u8bed\u8a00\uff0c\u6bd4\u5982\u90a3\u4e9b\u53ef\u4ee5\u7531\u9009\u533a\u6587\u6cd5\u63cf\u8ff0\u7684\u8bed\u8a00\uff0c\u7ed3\u679c\u53d1\u73b0Dyck-(k\\)\u662f\u6240\u6709\u8fd9\u4e9b\u8bed\u8a00\u7684\u6838\u5fc3\uff0c\u8fd9\u5728Chomsky-Sch\u00fctzenberger\u5b9a\u7406\u4e2d\u5f97\u5230\u4e86\u5f62\u5f0f\u5316\u3002\n\u6211\u4eec\u8ba8\u8bba\u7684\u5c42\u6b21\u7ed3\u6784\u548c\u5806\u6808\u4e4b\u95f4\u7684\u8054\u7cfb\u5728Dyck-\\(k\\)\u4e2d\u662f\u76f4\u63a5\u7684\uff1a\u5728\u770b\u5230\u7c7b\u578b\u4e3a\\(i\\)\u7684\u5de6\u65b9\u62ec\u53f7\u65f6\uff0c\u5fc5\u987b\u5c06\u8be5\u65b9\u62ec\u53f7\u7684\u5185\u5b58\u63a8\u5165\u5806\u6808\uff1b\u5728\u770b\u5230\u76f8\u5e94\u7684\u7c7b\u578b\u4e3a\\(i\\)\u7684\u53f3\u65b9\u62ec\u53f7\u65f6\uff0c\u5b83\u5c06\u88ab\u5f39\u51fa\u3002\n\u4f46\u8003\u8651\u5230\u8fd9\u4f4d\u7acb\u6cd5\u8005\u6240\u5199\u7684\u788e\u7247\u5316\u6cd5\u5f8b\uff0c\u4ece\u4e0a\u9762\u7684\u4f8b\u5b50\u6765\u770b\uff0c\u8fd9\u4e0d\u662f\u6709\u70b9\u2026\u5417\uff1f\u96be\u8bfb\uff1f\u5982\u679c\u4f60\u82b1\u4e00\u79d2\u949f\u7684\u65f6\u95f4\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u8bb0\u8005\u6b63\u5728\u8be2\u95ee\u7684\u662f\u4e00\u540d\u5236\u5b9a\u6cd5\u5f8b\u7684\u7acb\u6cd5\u8005\uff0c\u800c\u8fd9\u4e9b\u6cd5\u5f8b\u662f\u5224\u51b3\u7684\u4e3b\u9898\u3002\u4f46\u8003\u8651\u4e00\u4e0b\u4e0b\u9762\u7684\u53e5\u5b50\uff1a\n\u6211\u89c9\u5f97\u8fd9\u4e00\u53e5\u66f4\u5bb9\u6613\u8bfb\u61c2\u3002\u90e8\u5206\u539f\u56e0\u662f\u7b2c\u4e00\u53e5\u6709\u5d4c\u5957\u5728\u4e2d\u95f4\u7684\u5b50\u53e5\uff0c\u8fd9\u9700\u8981\u4f60\u4fdd\u6301\u5927\u91cf\u7684\u8bb0\u5fc6\uff0c\u4ee5\u4e86\u89e3\u4e3b\u8bed\u548c\u52a8\u8bcd\u662f\u5982\u4f55\u914d\u5bf9\u7684\u3002\u7b2c\u4e8c\u53e5\u6ca1\u6709\u90a3\u4e48\u6df1\u5165\uff1b\u5728\u770b\u5230\u4e4b\u524d\uff0c\u4f60\u5fc5\u987b\u5728\u5468\u56f4\u4fdd\u7559\u4e00\u6bb5\u65f6\u95f4\u7684\u6cd5\u5f8b\uff0c\u4f46\u4f60\u53ea\u9700\u8981\u5728\u5468\u56f4\u4fdd\u7559\u4e24\u9879(\u6cd5\u5f8b\uff0c\u7acb\u6cd5\u8005)\uff0c\u7136\u540e\u4f60\u5c31\u53ef\u4ee5\u770b\u5230\u4e66\u9762\u7684\u5185\u5bb9\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u7acb\u6cd5\u8005\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u4e0d\u90a3\u4e48\u7cbe\u786e\u5730\u8bb0\u5fc6\u3002\n\u8fd9\u79cd\u4e2d\u5fc3\u5d4c\u5165\u6df1\u5ea6\u4e0e\u89e3\u6790\u53e5\u5b50\u6240\u9700\u7684\u5806\u6808\u6df1\u5ea6\u4e4b\u95f4\u5b58\u5728\u8054\u7cfb\u30027\u5b9e\u9645\u4e0a\uff0c\u4f60\u9700\u8981\u591a\u5c11\u5185\u5b58\u624d\u80fd\u7406\u89e3\u5176\u4e2d\u7684\u542b\u4e49\u3002\u4f60\u53ea\u6709\u90a3\u4e48\u591a\u7684\u5de5\u4f5c\u8bb0\u5fc6\uff0c\u5f53\u4ed6\u4eec\u6d4b\u8bd5\u4f60\u7684\u6781\u9650\u65f6\uff0c\u4e8b\u60c5\u5c31\u5f88\u96be\u7406\u89e3\u4e86\u3002Dyck-\\(k\\)\u53ef\u4ee5\u4efb\u610f\u6df1\u5ea6\u5d4c\u5957\uff0c\u4f46\u4eba\u7c7b\u8bed\u8a00\u7684\u6df1\u5ea6\u5f88\u5c11\u8d85\u8fc7\u4e2d\u5fc3\u5d4c\u5165\u6df1\u5ea63.8\u3002\n\u56e0\u6b64\uff0c\u6211\u4eec\u6ca1\u6709\u7814\u7a76RNN\u751f\u6210Dyck-\\(k\\)\u7684\u80fd\u529b\uff0c\u800c\u662f\u5bf9\u65b9\u62ec\u53f7\u5806\u6808\u7684\u6700\u5927\u6df1\u5ea6\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u754c\u9650\uff0c\u79f0\u4e4b\u4e3a\\(M)\uff0c\u5e76\u79f0\u4e4b\u4e3aDyck-((k\uff0cm)\\)\u3002\u5982\u679c\u60a8\u662fChomsky\u5c42\u6b21\u7ed3\u6784(\u89c4\u5219\u8bed\u8a00\u3001\u4e0a\u4e0b\u6587\u65e0\u5173\u3001\u4e0a\u4e0b\u6587\u654f\u611f\u3001\u9012\u5f52\u53ef\u679a\u4e3e)\u7684\u7c89\u4e1d\uff0c\u8fd9\u610f\u5473\u7740Dyck-((k\uff0cm)\\)\u662f\u4e00\u79cd\u89c4\u5219\u8bed\u8a00\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u6709\u9650\u7684\u3002\u5982\u4e0b\u9762\u7684Dyck-\\((2\uff0c2)\\)\u793a\u4f8b\u6240\u793a\uff1a\n\u5728\u6211\u4eec\u7684\u6709\u9650\u7cbe\u5ea6\u8bbe\u7f6e\u4e0b\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u5bf9\u4e8e\u4efb\u4f55\u6b63\u5219\u8bed\u8a00\uff0c\u90fd\u53ef\u4ee5\u91c7\u7528\u6700\u5c0f\u786e\u5b9a\u6027\u6709\u9650\u72b6\u6001\u673a\uff0c\u5e76\u4f7f\u7528\u6709\u9650\u7cbe\u5ea6\u5c06\u5176\u7f16\u7801\u5230RNN\u4e2d\u3002\u56e0\u6b64\uff0c\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u63d0\u51fa\u5173\u4e8eRNN\u53ca\u5176\u751f\u6210Dyck-\\((k\uff0cm)\\)\u80fd\u529b\u7684\u65b0\u7406\u8bba\u95ee\u9898\u4f3c\u4e4e\u4ee4\u4eba\u56f0\u60d1\u3002\n\u8fd9\u662f\u56e0\u4e3a\u5728RNN\u4e2d\u4f7f\u7528\u8fd9\u4e9bDFA\u7f16\u7801\uff0c\u6211\u4eec\u5728RNN\u4e2d\u9700\u8981\u5927\u7ea6(k^{m+1})\u4e2a\u9690\u85cf\u5355\u5143\u624d\u80fd\u751f\u6210Dyck-((k\uff0cm)\\)\u3002\u8fd9\u662f\u5f88\u591a\u7684\uff1b\u8003\u8651\u4e00\u4e0b\\(k=100{\uff0c}000\\)\u4f5c\u4e3a\u8bcd\u6c47\u8868\u5927\u5c0f\uff0c\\(m=3\\)\u4f5c\u4e3a\u5806\u6808\u6df1\u5ea6\uff1b\u6211\u4eec\u5c06\u9700\u8981\\(100{\uff0c}000^4=10^{20})\u4e2a\u9690\u85cf\u5355\u5143\uff01\n\u4e3a\u4e86\u4fbf\u4e8e\u89e3\u91ca\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u8ba8\u8bba\u5982\u4f55\u5728RNN\u4e2d\u6784\u5efa\u6709\u754c\u5806\u6808\uff0c\u9996\u5148\u662f\u4e00\u4e2a\u6269\u5c55\u6a21\u578b\uff0c\u5b83\u53ef\u4ee5\u505a\u6d41\u884c\u7684RNN\u505a\u4e0d\u5230\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u7684\u6269\u5c55\u6a21\u578b\u662f\u4e8c\u9636RNN\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u60a8\u770b\u5230\u7684\u8f93\u5165\u4ece\u9012\u5f52\u77e9\u9635\\(W_x\\)\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\n\u8003\u8651\u4f7f\u7528\\(Km\\)\u7ef4\u5411\u91cf\u5bf9\u6700\u591a\\(m\\)\u4e2a\u5143\u7d20\u7684\u5806\u6808\u8fdb\u884c\u7f16\u7801\uff0c\u6bcf\u4e2a\u5143\u7d20\u7684\u7ef4\u5ea6\u4e3a\\(k\\)\uff1a\n\u5c06\u6bcf\u79cd\\(K)\u79cd\u53ef\u80fd\u7684\u652f\u67b6\u7c7b\u578b\u770b\u4f5c\u662f\u7531\u4e00\u4e2a\\(k\\)\u4e2a\u70ed\u5411\u91cf\u8868\u793a\u7684\u3002\u6211\u4eec\u5e0c\u671b\u5806\u6808\u7684\u9876\u90e8\u4f4d\u4e8e\u63d2\u69fd\\(1\\)\u4e2d\u3002\u56e0\u6b64\uff0c\u5f53\u6211\u4eec\u63a8\u9001\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u6211\u4eec\u4f1a\u5c06\u5176\u76f4\u63a5\u5199\u5165\u63d2\u69fd\\(1\\)\u3002\u65e0\u8bba\u63d2\u69fd\\(1\\)\u4e2d\u7684\u5185\u5bb9\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u4ece\u63d2\u69fd\\(1\\)\u79fb\u51fa\u4ee5\u817e\u51fa\u7a7a\u95f4\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u77e9\u9635\\(W_{\\text{Push}}\\)\u6765\u5b8c\u6210\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u5806\u6808\u4e0a\u5df2\u6709\\(m\\)\u4e2a\u5143\u7d20\uff0c\u5219\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5c06\u4ece\u9690\u85cf\u72b6\u6001\u79fb\u4f4d\u3002\u63a5\u4e0b\u6765\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u4ece\u5806\u6808\u4e2d\u5f39\u51fa\u9876\u90e8\u5143\u7d20\uff0c\u4f7f\u7528\u5355\u72ec\u7684\u77e9\u9635\\(W_{\\Text{POP}}\\)\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5b8c\u6210\u6b64\u64cd\u4f5c\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u8fd9\u9002\u7528\u4e8e\u6211\u4eec\u7684\u4e8c\u9636RNN\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u770b\u5230\u5de6\u65b9\u62ec\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5e94\u7528\\(W_{\\text{ush}}\\)\u6765\u5728\u9876\u90e8\u4e3a\u5176\u817e\u51fa\u7a7a\u95f4\uff0c\u5982\u679c\u6211\u4eec\u770b\u5230\u53f3\u65b9\u62ec\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5e94\u7528\\(W_{\\text{op}}\\)\u6765\u5ffd\u7565\u5176\u76f8\u5e94\u7684\u5de6\u65b9\u62ec\u53f7\u3002\n\u4e3a\u4ec0\u4e48\u8fd9\u4e0d\u9002\u7528\u4e8e\u4eba\u4eec\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528\u7684\u7b80\u5355RNN\uff1f\u56e0\u4e3a\u5b83\u53ea\u6709\u4e00\u4e2a\\(W\\)\u77e9\u9635\uff0c\u800cLSTM\u4e5f\u662f\u5982\u6b64\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u806a\u660e\u4e00\u4e9b\u3002\n\u6211\u4eec\u5c06\u901a\u8fc7\u4f7f\u7528\u4e00\u4e2a\u591a2\u4e2a\u7a7a\u95f4\u7684\u56e0\u5b50\uff0c\u53732mk\u7ef4\uff0c\u6765\u89e3\u51b3\u53ea\u6709\u4e00\u4e2aW\u77e9\u9635\u8fd9\u4e00\u4e8b\u5b9e\u3002\n\u8fd9\u5bf9\u5e94\u4e8e\u53ef\u4ee5\u5b58\u50a8\u5806\u6808\u7684\u4e24\u4e2a\\(Mk)\u5927\u5c0f\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u5c06\u5176\u4e2d\u4e00\u4e2a\u79f0\u4e3a\\(h_{\\text{POP}}\\)\uff0c\u53e6\u4e00\u4e2a\u79f0\u4e3a\\(h_{\\text{Push}}\\)\uff0c\u8868\u793a\u6211\u4eec\u5728\u5e94\u7528\u5f39\u51fa\u65f6\u5199\u5165\u5806\u6808\uff0c\u5728\u5e94\u7528\u63a8\u9001\u65f6\u5199\u5165\u5806\u6808\u3002\u65e0\u8bba\u5728\u54ea\u4e2a\u4f4d\u7f6e\u4e0d\u5199\u5165\u5806\u6808\uff0c\u6211\u4eec\u90fd\u5c06\u786e\u4fdd\u4e3a\u7a7a(\u5373\u7b49\u4e8e0)\u3002\n\u6709\u4e86\u8fd9\u4e9b\u4fdd\u8bc1\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5355\u4e2a\\(W\\)\u77e9\u9635\u540c\u65f6\u8bfb\u53d6\\(h_{\\text{op}}\\)\u548c\\(h_{\\text{ush}}\\)\u3002\u901a\u8fc7\u5806\u53e0\\(W_{\\text{ush}}\\)\u548c\\(W_{\\text{op}}\\)\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u5e76\u4f7f\u7528\u76f8\u540c\u7684\u77e9\u9635\u540c\u65f6\u5199\u5165\\(h_{\\text{op}}\\)\u548c\\(h_{\\text{op}}\\)\u3002\n\u56e0\u6b64\uff0c\u67e5\u770b\\(wh\\)\uff0c\u6211\u4eec\u5df2\u7ecf\u4ece\\(h_{\\text{op}}\\)\u548c\\(h_{\\text{ush}}\\)\u4e2d\u8bfb\u53d6\u5e76\u5199\u5165\u8fd9\u4e24\u4e2a\u6570\u636e\u3002\u4f46\u6211\u4eec\u4e0d\u60f3\u540c\u65f6\u5199\u5165\u8fd9\u4e24\u4e2a\u6570\u636e\uff1b\u6211\u4eec\u53ea\u9700\u8981\u4e0e\u6211\u4eec\u5b9e\u9645\u770b\u5230\u7684\u8f93\u5165\u76f8\u5bf9\u5e94\u7684\\(h_{\\text{POP}}\\)\u6216\\(h_{\\text{Push}}\\)\u4e2d\u7684\u4e00\u4e2a\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\\(Ux_t\\)\u672f\u8bed\u3002\u5b9e\u9645\u4e0a\uff0c\u5f53\\(x_t\\)\u662f\u5de6\u65b9\u62ec\u53f7\u65f6\uff0c\\(Ux_t\\)\u4f1a\u5c06\u4e00\u4e2a\u975e\u5e38\u8d1f\u503c\u6dfb\u52a0\u5230\\(h_{\\text{op}}\\)\u4e2d\uff0c\u5f53x_t\u662f\u53f3\u65b9\u62ec\u53f7\u65f6\uff0c\\(Ux_t\\)\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u4f46\u5bf9\u4e8e\\(h_{\\text{Push}}\\)\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\\(Wh+Ux_t\\)\uff0c\u6211\u4eec\u786e\u4fdd\u53ea\u5199\u5165\\(h_{\\text{op}}\\)\u6216\\(h_{\\text{ush}}\\)\u4e2d\u7684\u4e00\u4e2a\uff0c\u5e76\u4e14\n\u8fd9\u5c31\u5bf9\u4e86\uff01\u5b83\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7cfb\u6570-\\(2\\)\uff0c\u4f46\u8fd9\u6b63\u662f\u4eceRNN\u4e2d\u7684\u6709\u9650\u6df1\u5ea6\u5806\u6808\u63a8\u9001\u6216\u5f39\u51fa\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\nLSTM\u7684\u63d0\u51fa\u662f\u4e3a\u4e86\u6539\u8fdb\u5b66\u4e60\uff0c\u89e3\u51b3RNN\u7684\u96f6\u68af\u5ea6\u95ee\u9898\u3002\u53e6\u5916\uff0c\u6211\u4eec\u5728\u5de5\u4f5c\u4e2d\u8003\u8651\u7684\u662f\u8868\u73b0\u529b\uff0c\u800c\u4e0d\u662f\u5b66\u4e60\uff0c\u6240\u4ee5\u6211\u4eec\u7814\u7a76\u4e86LSTM\u4e2d\u989d\u5916\u7684\u95e8\u63a7\u51fd\u6570\u662f\u5426\u80fd\u8ba9\u5b83\u4eec\u66f4\u6709\u6548\u5730\u5b9e\u73b0\u5806\u6808\u3002\n\u6211\u4eec\u53d1\u73b0\uff0c\u662f\u7684\uff0c\u867d\u7136\u6211\u4eec\u9700\u8981\\(2mk\\)\u6765\u4f7f\u7528\u7b80\u5355RNN\u5b9e\u73b0\u6211\u4eec\u7684\u5806\u6808\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\\(mk\\)(\u5c31\u50cf\u5bf9\u4e8e\u4e8c\u9636RNN\u4e00\u6837)\u6765\u5b9e\u73b0LSTM\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e24\u500d\u7684\u6539\u8fdb\u3002\u6709\u8da3\u7684\u662f\uff0c\u6211\u4eec\u7528\u6765\u8bc1\u660e\u8fd9\u4e00\u70b9\u7684\u673a\u5236\u5b8c\u5168\u72ec\u7acb\u4e8e\u6211\u4eec\u5728\u7b80\u5355RNN\u4e2d\u4f7f\u7528\u7684\u63a8/\u5f39\u7ec4\u4ef6\uff1b\u76f8\u53cd\uff0c\u5b83\u5b8c\u5168\u4f9d\u8d56\u4e8eLSTM\u7684\u95e8\u3002\n\u6784\u9020\u5de5\u4f5c\u7684\u786e\u5207\u673a\u5236\u6709\u70b9\u590d\u6742\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u91cc\u52fe\u52d2\u51fa\u4e3b\u8981\u601d\u60f3\u3002\u8ba9\u6211\u4eec\u4ece\u4e00\u4e2aLSTM\u5185\u5b58\u5728\u5904\u7406\u5e8f\u5217\u65f6\u5982\u4f55\u5de5\u4f5c\u7684\u793a\u4f8b\u5f00\u59cb\u3002\n\u4ece\u56fe\u4e2d\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u51fa\uff0c\u6211\u4eec\u7684LSTM\u5806\u6808\u7684\u9876\u90e8\u5e76\u4e0d\u603b\u662f\u63d2\u69fd1\uff0c\u5c31\u50cf\u5728\u7b80\u5355\u7684RNN\u6784\u9020\u4e2d\u90a3\u6837\u3002\u76f8\u53cd\uff0c\u5806\u6808\u7684\u9876\u90e8\u59cb\u7ec8\u662f\u8ddd\u79bb\u63d2\u69fd1\u6700\u8fdc\u7684\u975e\u7a7a\u69fd\uff0c\u5806\u6808\u7684\u5e95\u90e8\u662f\u63d2\u69fd1\u3002\u5f53\u524d\u5806\u6808\u4e0a\u7684\u6240\u6709\u6258\u67b6\u90fd\u5b58\u50a8\u5728\u5355\u5143\u72b6\u6001\\(c_t\\)\u4e2d\uff0c\u4f46\u53ea\u6709\u5806\u6808\u7684\u9876\u90e8\u5143\u7d20\u88ab\u5141\u8bb8\u901a\u8fc7\u8f93\u51fa\u95e8\u8fdb\u5165\u9690\u85cf\u72b6\u6001\\(h_t\\)\u3002\u8fd9\u5728\u4e0a\u56fe\u4e2d\u663e\u793a\u4e3a\u7070\u8272\u9634\u5f71\u72b6\u6001\u3002\n\u56de\u60f3\u4e00\u4e0bLSTM\u7b49\u5f0f\uff0c\u5982\u679c\u613f\u610f\u4e5f\u53ef\u4ee5\u8df3\u8fc7\u5b83\u4eec\uff0c\u8bb0\u4f4fLSTM\u6709\u4e00\u4e2a\u8f93\u5165\u95e8\u3001\u4e00\u4e2a\u8f93\u51fa\u95e8\u3001\u4e00\u4e2a\u9057\u5fd8\u95e8\u548c\u4e00\u4e2a\u65b0\u7684\u5355\u5143\u5019\u9009\uff1a\n$$i_t=\\sigma(W_ih_{t-1}+U_ix_t+b_i)$o=\\sigma(W_oh_{t-1}+U_ox_t+b_o)$f_t=\\sigma(W_fh_{t-1}+U_fx_t+b_f)$\\tilde{c}_t=\\text{tanh}(W_{\u3002}}x_t+b_{\\tilde{c}})$c_t=i_t\\cot\\tilde{c}_t+f_t\\cot c_{t-1}$h_{t}=o_t\\cot\\text{tanh}(C_T)$$\u3002\n\u76f4\u89c2\u5730\uff0c\u8f93\u5165\u95e8\u786e\u5b9a\u5c06\u54ea\u4e9b\u65b0\u5185\u5bb9(\u6765\u81ea{c}t\\)\u6dfb\u52a0\u5230\u5b58\u50a8\u5355\u5143\\(c_t\\)\uff0c\u4ee5\u53ca\u5c06\u54ea\u4e9b\u65e7\u5185\u5bb9(\u6765\u81ea\\(c_{t-1}))\u590d\u5236\u5230\u5b58\u50a8\u5355\u5143\\(c_t\\)\u3002\u8f93\u51fa\u95e8\\(o_t\\)\u786e\u5b9a\u54ea\u4e9b\u4fe1\u606f\u4ece\u5355\u5143\\(c_t\\)\u6d41\u5411\u9690\u85cf\u72b6\u6001\\(h_t\\)\u3002\n\u8ba9\u6211\u4eec\u6765\u770b\u770b\u6bcf\u4e2a\u95e8\u5982\u4f55\u5bf9\u6211\u4eec\u5728\u793a\u4f8b\u4e2d\u770b\u5230\u7684\u5185\u5b58\u7ba1\u7406\u505a\u51fa\u8d21\u732e\u3002\u6211\u4eec\u5c06\u8ba8\u8bba\u6bcf\u4e2a\u95e8\u5728\u4e24\u79cd\u5806\u6808\u64cd\u4f5c(Push\u548cPop)\u4e0b\u7684\u884c\u4e3a\u3002\n\u4e3a\u4e86\u5b9e\u73b0\u63a8\u9001\uff0c\u65b0\u7684\u5355\u5143\u5019\u9009\u5355\u5143\\(\\tilde{c}_t\\)\u7684\u5de5\u4f5c\u662f\u5c1d\u8bd5\u5411\u5806\u6808\u9876\u90e8\u5199\u5165\u5de6\u65b9\u62ec\u53f7\u3002\u8fd9\u6709\u70b9\u56f0\u96be\uff0c\u56e0\u4e3a\u6b63\u5982\u6211\u4eec\u6240\u8bf4\u7684\uff0c\u5e94\u8be5\u5199\u5165\u65b0\u7684\u5806\u6808\u9876\u90e8\u7684\u4f4d\u7f6e\u53ef\u80fd\u5728\u5b58\u50a8\u5668\u7684\u4efb\u4f55\\(m\\)\u4e2a\u69fd\u4e0a\u3002\u56e0\u6b64\uff0c\u65b0\u7684\u5355\u5143\u5019\u9009\u5355\u5143\uff0c\u901a\u8fc7\\(U_{\\tilde{c}_t}x_t\\)\u5b9e\u9645\u4e0a\u5c1d\u8bd5\u5c06\\(x_t\\)\u6307\u5b9a\u7684\u65b9\u62ec\u53f7\u7684\u6807\u8bc6\u5199\u5165\u6240\u6709m\u4e2a\u5806\u6808\u69fd\u3002\u8fd9\u4e4b\u6240\u4ee5\u6709\u6548\uff0c\u662f\u56e0\u4e3a\u65b0\u7684\u5019\u9009\u5355\u5143\u683c\u4f9d\u8d56\u4e8e\\(1\\)\u4ec5\u7528\u4e8e\u5e94\u5199\u5165\u65b0\u5143\u7d20\u7684\u5806\u6808\u69fd\u7684\\(1\\)\u8f93\u5165\u95e8\uff0c\u4ee5\u53ca\\(0\\)\u5176\u4ed6\u4f4d\u7f6e\u7684\u8f93\u5165\u95e8\uff0c\u56e0\u6b64\u6240\u6709\u5176\u4ed6\u69fd\u90fd\u4e0d\u53d7\u5f71\u54cd\u3002\n.", "note_en": "We prove a result that demonstrates RNNs can exactly implement bounded-depth stacks to capture a building block of human language optimally efficiently.\n  In 2015, Andrej Karpathy posted a now famous blog post on   The Unreasonable Effectiveness of Recurrent Neural Networks.  1In it, he shared some of the wonder he felt at the empirical utility and learning behavior of RNNs.To summarize this sense of wonder, Karpathy emphasized:\n We\u2019ll train RNNs to generate text character by character and ponder the question \u201chow is that even possible?\u201d\n Re-reading Karpathy\u2019s blog post recently, even in the era of large pre-trained transformers, I still found the effectiveness of modestly sized RNNs for learning highly structured output spaces fascinating.For example, Andrej shows samples from an RNN trained on Wikipedia, which learns to generate not just relatively grammatical English, but Wikipedia article structure and even valid XML code.\n In this blog post,  we describe a recent step towards understanding Karpathy\u2019s question \u2013  how is that even possible?\n   Empirically, RNNs are pretty effective in learning the syntax of language!On the one hand, to really process hierarchical structure in general, it\u2019s necessary emulate  pushing and popping elements from a stack, a fundamental operation in  parsing.On the other hand, there\u2019s healthy skepticism about RNNs; they might simply be counting up statistics about likely (long) word sequences like an   n-gram model, and sharing some statistical strength due to word embeddings.\n So, which is it? The mushy hidden state of an RNN doesn\u2019t seem amenable to stack-like behavior, and many models have been made to make up for this, from the Ordered Neuron variant of the LSTM  (Shen et al., 2019) to RNNs augmented with an  explicit, external stack  (Joulin and Mikolov, 2015).It\u2019s even been  proven that RNNs can\u2019t recognize hierarchical languages in general  (Merrill et al., 2020)! Things aren\u2019t looking great for the stack story, which helps us clarify our  how is that possible question:  is stack-like behavior even possible in RNNs in a realistic setting?\n We add one insight to this question: when processing natural language,  we can bound the maximum number of things we\u2019ll need to store on the stack.Once you assume this, we were very surprised to prove a formal version of the following:\n RNNs can turn their hidden states into bounded-capacity stacks so efficiently, they can generate a bounded hierarchical language using asymptotically optimally few hidden units of memory.\n  We prove that RNNs  can do this, not that they  learn to do this. However, our proof consists of explicit mechanisms by which RNNs can implement bounded-depth stacks, in fact, we also provide a separate, more efficient mechanism for LSTMs that solely uses its gates.\n Our result changed the way I think about RNNs.It\u2019s true that RNNs can\u2019t implement arbitrary-depth stacks (like a  pushdown automaton can).They have finite memory, so they\u2019re  finite-state machines).However, they  can turn their hidden states into stack  structured memory, meaning they can process some (bounded, hierarchical!) languages exponentially more efficiently than one would think if they were learning the finite-state machine.We argue this means the  Chomsky Hierarchy isn\u2019t the (only) thing we should be using to characterize neural models\u2019 expressivity; even in the simplest (finite-state) regime, the structure of the memory of these networks is of interest.We hope that our proofs and constructions help people think about and analyze RNN behavior, and inspire future improvements in neural architectures.\n This blog post is based off the paper   RNNs can generate bounded hierarchical languages with optimal memory, published at EMNLP 2020, joint work with  Michael Hahn,  Surya Ganguli,  Percy Liang, and  Chris Manning.\n Theoretical tl;dr: we introduce Dyck-\\((k,m)\\), the language of nested brackets of \\(k\\) types and nesting depth at most \\(m\\), and prove that RNNs can generate these languages in \\(O(m\\log k)\\) hidden units, an exponential improvement over known constructions, which would use \\(O(k^{m/2})\\).We also prove that this is tight; using \\(o(m\\log k)\\) is impossible.\n  We\u2019ll start with the second most interesting part of NLP: language  2.In human languages, the order in which words are spoken matters  [citation needed].But their order doesn\u2019t provide the whole story off the bat; there\u2019s rich structure in human languages that governs how the meanings of words and phrases are composed to form the meanings of larger bits of language.The insufficiency of the linear (that is, \u201cas given\u201d) order of language is clear due to hierarchical dependenices in language.For example, consider the following sentence:\n    Here, it\u2019s still the chef that\u2019s exceptional, not the stores, showing that the (chef, is) relationship is not based linear order.We can keep playing this game more or less for as long as we\u2019d like:\n  The subject/verb agreement relationship in English, as with (chef, is), is a nice example of the hierarchical nature of language.More generally, the sentential hierarchical relationships of language are described in syntactic annotation, usually in the form of trees, like in the following phrases  3:\n  The two trees provide two distinct interpretations of the phrase  Natural Language Processing.In the leftmost tree,  language and  processing first combine. Then  language processing combines with  natural.So, it\u2019s language processing that\u2019s performed or characterized by its naturalness.Is this the intended reading of  NLP?I\u2019d argue, no.In the rightmost tree, we have  natural combine with  language. then  natural language combines with  processing, meaning we\u2019re processing this thing called  natural language.That\u2019s more like it.\n A common formalism for syntax is the  context-free grammar, both for natural language and for languages like XML.The example we gave above for the phrase  Natural Language Processing is informally in constituency form, but here\u2019s a full example  4:\n  The labels on the tree are very useful, but we won\u2019t go into what they mean here.To see the connection between such a structure and a stack, consider a preorder traversal of the tree.\n (S (NP (DT The ) (NN children)) (VP (VBD ate) (NP (DT the) (NN cake))) (PP (JJ with) (NP (DT a) (NN spoon))))\n If one had access to this explicit linear representation of the tree, one could imagine pushing the  (S token, then the  (NP, then pushing (and popping) the  (DT and  The and  ), and so on, to keep track of what unfinished constituents were under construction.A key difficulty of processing real language, of course, is that the internal nodes (like  (S) are not provided; this is why parsing isn\u2019t trivial for natural language.But even  with access to these internal nodes, one needs to be able to push and pop values from a stack to track syntactic structure; this is true in general, and so for the special case of RNNs.\n So if it takes a stack to parse natural language, what are RNNs doing? Roughly, RNNs can be thought of as applying either of (or some combination of) two strategies:\n Surface statistics: By aggregating lots of statistics about how some words (like \u201cthe\u201d) precede various groups of words (nouns), and what sort of nouns are likely to \u201ceat\u201d and such, networks may just learn a soft version of an  n-gram language model, sharing statistical strength between words and allowing for relatively large  n.\n  Stack-like behavior: By simulating a stack, RNNs might process language \u201cthe right way\u201d, pushing and popping words or abstract elements as tokens are observed, and coming to an implicit parse of a sentence.\n In all likelihood, the truth is neither exactly the  surface statistics story nor exactly the  stack-like behavior story.What we\u2019re able to show in this work, however, is that RNNs are  able to exactly simulate bounded-capacity stacks and we provide clear, exact specifications of their learnable parameters that provide that behavior.Not only this, but the stack simulation they perform is, in a strong sense, as efficient as it could possibly be (as a function of the number of hidden units needed to simulate a certain-size stack,) so such behavior isn\u2019t just possible, it\u2019s in the set of functions RNNs can express most efficiently.We hope that these insights guide both future empirical analyses of RNNs, as well as model-building efforts.\n   The computational power of neural networks depends heavily on the assumptions one makes about some \u201cimplementation details.\u201dYou may have heard, for example, that RNNs are Turing-complete!  5On the other hand, recent work states that RNNs don\u2019t have the capacity to recognize the simplest stack-requiring languages.  6\n  These works differ in the assumptions they make about how RNNs are used. If you represent every hidden unit of an RNN by an unlimited number of bits, and allow it to read the whole input (sentence) and then unroll for as much longer as it needs to, then you arrive at the Turing-complete result.This doesn\u2019t reflect how RNNs are used in practice, however.If you instead represent every hidden unit of an RNN by a number of bits that scales  logarithmically with the length of the input, and only unroll the RNN once per input symbol, the result is that RNNs cannot implement stacks in general.\n In our work, we consider an even more constrained setting: we assume that each hidden unit in an RNN is takes on a value specified by a finite number of bits \u2013 that doesn\u2019t grow with the sequence length, or any measure of complexity of the language.As we\u2019ll show, this has a pretty interesting effect on the types of properties we can study about the RNN!\n Danger: very theoretical paragraph  Finally, you\u2019ll see us refer to most earlier work as evaluating RNNs\u2019 ability to  recognize a language.This is formal language speak; a language is a set of strings \\(\\mathcal{L} \\subseteq \\Sigma^*\\) from a vocabulary \\(\\Sigma\\).To recognize a language \\(\\mathcal{L}\\) means for any string, the RNN can read the whole string in \\(\\Sigma^*\\), and at the end, produce a binary decision as to whether that string belongs to \\(\\mathcal{L}\\).In this work, we\u2019ll refer to RNNs as  generating a language \\(\\mathcal{L}\\) instead.This is a new requirement we impose to make the theoretical setting more like how RNNs are used in practice: to predict an output token by token!Practically, this enforces a constraint that the hidden state of the RNN be readable at every timestep; if you\u2019re interested in the details, look to the paper.\n  In this section we introduce the language we\u2019ll work with: Dyck-\\((k,m)\\).We start with Dyck-\\(k\\), the language of well-nested brackets of \\(k\\) types.Like how there\u2019s hierarchical structure in language, as in this example highlighting the relationships between subjects and verbs in center-embedded clauses:\n    In fact, despite the simplicity of Dyck-\\(k\\), in a strong sense it\u2019s a prototypical language of hierarchical structure.Thinking back to the  context-free languages, like those describable by constituency grammars, it turns out that Dyck-\\(k\\) is at the core of all of these languages.This is formalized in the  Chomsky-Sch\u00fctzenberger Theorem.\n The connection that we\u2019ve discussed between hierarchy and stacks is immediate in Dyck-\\(k\\): upon seeing an open bracket of type \\(i\\), memory of that bracket must be pushed onto a stack; upon seeing its corresponding close bracket of type \\(i\\), it is popped.\n But consider the fragment  Laws the lawmaker the reporter questions writes are, from the example above.Isn\u2019t it a little\u2026 hard to read?If you take a second, you can work out that the reporter is questioning a lawmaker, who writes laws, and those laws are the subject of the sentence.But consider the following sentence:\n  I found this one easier to read.Part of the reason for this is that the first sentence has nested center-embedded clauses, which require you to keep a bunch of memory around to know how subjects pair with verbs.The second one isn\u2019t as deeply nested; you have to keep  Laws around for a while before seeing  are, but you only need to keep two items around ( Laws,  the lawmaker ) before you see  wrote and can sort of relegate  the lawmaker to less precise memory.\n There\u2019s a connection between this center-embedding depth and the depth of stack you need in order to parse sentences.  7Intuitively, it\u2019s about the amount of  memory you need in order to figure out the meaning.You only have so much working memory, and things get hard to understand when they test your limits. Dyck-\\(k\\) can be arbitrarily deeply nested, but human language rarely goes deeper than center-embedding depth 3.  8\n So, instead of studying RNNs\u2019 ability to generate Dyck-\\(k\\), we put a bound on the maximum depth of the stack of brackets, call it \\(m\\), and call it Dyck-\\((k,m)\\).If you\u2019re a fan of the Chomsky Hierarchy (regular languages, context-free, context-senstive, recursively enumerable), this means that Dyck-\\((k,m)\\) is a  regular language, and so is recognizable by a finite-state machine (DFA).But it\u2019s a regular language with special, stack-like states, like in the following example for Dyck-\\((2,2)\\):\n   Under our finite-precision setting, it\u2019s a known result that for any regular language, you can take the minimal deterministic finite state machine, and encode that machine in the RNN using finite precision.So it may seem confusing at first why we\u2019re asking new theoretical questions about RNNs and their ability to generate Dyck-\\((k,m)\\).\n It\u2019s because using those encodings of DFAs in RNNs, we\u2019d need about \\(k^{m+1}\\) hidden units in our RNNs in order to generate Dyck-\\((k,m)\\).This is  a lot; think about \\(k=100{,}000\\) as the vocabulary size and \\(m=3\\) as the stack depth; we\u2019d need \\(100{,}000^4=10^{20}\\) hidden units!Using our construction for the LSTM, we\u2019d need \\(3m\\lceil \\log k \\rceil -m=150\\) hidden units.\n    We\u2019ll now go into how you could build a bounded stack in an RNN, starting with an extended model that can do things popular RNNs can\u2019t do, for ease of explanation.Our extended model is  second-order RNNs, which can choose from recurrent matrices \\(W_x\\) depending on which input you see.\n Consider encoding a stack of up to \\(m\\) elements, each of dimensionality \\(k\\), using a \\(km\\)-dimensional vector:\n  Think of each of the \\(k\\) possible bracket types as being represented by one of \\(k\\) one-hot vectors.We\u2019d like the top of the stack to be in slot \\(1\\).So when we  push an element, we\u2019ll write it directly to slot \\(1\\).Whatever was in slot \\(1\\), we want to shift away from slot \\(1\\) to make room, which we can do with a matrix \\(W_{\\text{push}}\\), as follows:\n  Notice how, if we had \\(m\\) elements on the stack already, the last one would be shifted off the hidden state.Next, if we\u2019d like to  pop the top element from the stack, this is easy enough with a separate matrix \\(W_{\\text{pop}}\\), as follows:\n  This works for our second-order RNN because if we see an open bracket, we can choose to apply \\(W_{\\text{push}}\\) to make room for it at the top, and if we see a close bracket, we can choose to apply \\(W_{\\text{pop}}\\) to forget its corresponding open bracket.\n Why doesn\u2019t this work for the Simple RNN that people use in practice?Because it only has one \\(W\\) matrix, and for that matter, the LSTM does as well.So we\u2019ll need to get a bit clever.\n  We\u2019ll get around the fact that there\u2019s only one \\(W\\) matrix by using a factor of \\(2\\) more space, that is ,\\(2mk\\) dimensions.\n This corresponds to two \\(mk\\)-sized places where the stack could be stored.We\u2019ll call one of them \\(h_{\\text{pop}}\\) and the other \\(h_{\\text{push}}\\), meaning where we write the stack when we apply a pop, and where we write the stack when we apply a push.Whichever place we  don\u2019t write the stack we\u2019ll make sure is empty (that is, equals 0).\n With these guarantees, we can  read from both \\(h_{\\text{pop}}\\) and \\(h_{\\text{push}}\\) at once using a single \\(W\\) matrix.By stacking \\(W_{\\text{push}}\\) and \\(W_{\\text{pop}}\\) matrices, we can do this, and use the same matrix to write to both \\(h_{\\text{pop}}\\) and \\(h_{\\text{push}}\\) what  would happen if we saw each of pop or push:\n  So looking at \\(Wh\\), we\u2019ve read from both \\(h_{\\text{pop}}\\) and \\(h_{\\text{push}}\\) and written to both as well.But we don\u2019t want to write to both; we\u2019d need only the one of \\(h_{\\text{pop}}\\) or \\(h_{\\text{push}}\\) that corresponds to the input we actually saw.For this we use the \\(Ux_t\\) term.Intuitively, when \\(x_t\\) is an open bracket, \\(Ux_t\\) adds a very negative value to \\(h_{\\text{pop}}\\), which after the \\(\\sigma\\) nonlinearity results in \\(0\\) values.When \\(x_t\\) is a close bracket, \\(Ux_t\\) does the same thing, but for \\(h_{\\text{push}}\\).So, with \\(Wh + Ux_t\\), we\u2019ve ensured that only one of \\(h_{\\text{pop}}\\) or \\(h_{\\text{push}}\\) is written to, and we read from both of them.\n There you have it! It took an extra factor-\\(2\\) of memory, but it\u2019s an exact way to push or pop from a bounded-depth stack in an RNN.\n  LSTMs were proposed to improve  learning, solving the vanishing gradient problem of RNNs.Again we\u2019re considering  expressivity in this work, not learning, so we study whether the extra gating functions in LSTMs allow them to implement stacks more efficiently.\n We find that yes, though we needed \\(2mk\\) to implement our stack with the Simple RNN, we need \\(mk\\) (like for second-order RNNs) for LSTMs, a factor-two improvement.Interestingly, the mechanism by which we prove this is completely separate from the push/pop components we used in the Simple RNN; instead, it  relies entirely on the LSTM\u2019s gates.\n  The exact mechanisms by which the constructions work are a bit involved, so we sketch out the main ideas here.Let\u2019s start by walking through an example of how the LSTM\u2019s memory behaves as it processes a sequence.\n  As is clear from the figure, the top of our LSTM\u2019s stack isn\u2019t always slot 1 like in the Simple RNN construction. Instead, the top of the stack is always the farthest non-empty slot from slot 1, and the bottom of the stack is slot 1.All brackets currently on the stack are stored in the cell state \\(c_t\\), but  only the top element of the stack is allowed through the output gate into the hidden state, \\(h_t\\).This is visualized in the above diagram as the state that is shaded grey.\n Recall the LSTM equations, or skip past them if you\u2019d prefer, and remember that the LSTM has an  input gate, an  output gate, a  forget gate, and a  new cell candidate:\n $$i_t = \\sigma(W_ih_{t-1} + U_ix_t + b_i)$$$$o_t = \\sigma(W_oh_{t-1} + U_ox_t + b_o)$$$$f_t = \\sigma(W_fh_{t-1} + U_fx_t + b_f)$$$$\\tilde{c}_t = \\text{tanh}( W_{\\tilde{c}}h_{t-1} + U_{\\tilde{c}}x_t + b_{\\tilde{c}})$$$$c_t = i_t \\cdot \\tilde{c}_t + f_t \\cdot c_{t-1}$$$$h_{t} = o_t \\cdot \\text{tanh}(c_t)$$\n Intuitively, the input gate determines what new content (from \\(\\tilde{c}_t\\)) is added to the memory cell \\(c_t\\), and what old content (from \\(c_{t-1}\\)) is copied into the memory cell \\(c_t\\).The output gate \\(o_t\\) determines what information flows from the cell \\(c_t\\) to the hidden state \\(h_t\\).\n Let\u2019s go through how each of the gates contributes to the memory management that we saw in our example.We\u2019ll discuss the behavior of each gate under each of the two stack operations: push and pop.\n  To implement a  push, the new cell candidate \\(\\tilde{c}_t\\) has the job of attempting to write an open bracket to the top of the stack.This is a bit difficult because, as we\u2019ve said, the location where the new top of the stack should be written could be at any of the \\(m\\) slots of the memory.Thus, the new cell candidate, through \\(U_{\\tilde{c}_t}x_t\\) actually tries to write the identity of the bracket specified by \\(x_t\\) to  all m stack slots.This works because the new cell candidate relies on the input gate being \\(1\\) only for the stack slot where the new element should be written, and \\(0\\) elsewhere, so all other slots are unaffecte\n......", "posttime": "2020-11-05 20:17:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53e5\u6cd5,syntactic,rnn", "title": "RNN\u7684\u53e5\u6cd5\u8868\u73b0\u529b\u4e0d\u5408\u7406", "title_en": "The Unreasonable Syntactic Expressivity of RNNs", "transed": 1, "url": "https://nlp.stanford.edu/~johnhew/rnns-hierarchy.html", "via": "", "real_tags": ["\u53e5\u6cd5", "syntactic", "rnn"]}, {"category": "", "categoryclass": "", "imagename": "7ea8cdc87990e60a587798fef1b828b9.jpg", "infoid": 1033300, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5730\u65b9\u5b98\u5458\u6279\u51c6\u91ca\u653e7.5\u4ebf\u53ea\u7ecf\u8fc7\u8f6c\u57fa\u56e0\u4ee5\u51cf\u5c11\u5f53\u5730\u4eba\u53e3\u7684\u868a\u5b50\u3002\n\u5176\u76ee\u7684\u662f\u51cf\u5c11\u643a\u5e26\u767b\u9769\u70ed\u6216\u5be8\u5361\u75c5\u6bd2\u7b49\u75be\u75c5\u7684\u868a\u5b50\u6570\u91cf\u3002\n\u7ecf\u8fc7\u591a\u5e74\u8fa9\u8bba\u540e\uff0c\u4e00\u4e2a\u8bd5\u70b9\u9879\u76ee\u7684\u7eff\u706f\u5f88\u5feb\u5c31\u62db\u81f4\u4e86\u73af\u4fdd\u7ec4\u7ec7\u7684\u5f3a\u70c8\u6297\u8bae\uff0c\u4ed6\u4eec\u8b66\u544a\u79f0\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5e26\u6765\u610f\u60f3\u4e0d\u5230\u7684\u540e\u679c\u3002\n\u6d3b\u52a8\u4eba\u58eb\u8b66\u544a\u8bf4\uff0c\u53ef\u80fd\u4f1a\u5bf9\u751f\u6001\u7cfb\u7edf\u9020\u6210\u7834\u574f\uff0c\u5e76\u53ef\u80fd\u4ea7\u751f\u6297\u6740\u866b\u5242\u7684\u6742\u4ea4\u868a\u5b50\u3002\n\u4f46\u76f8\u5173\u516c\u53f8\u8868\u793a\uff0c\u8fd9\u4e0d\u4f1a\u5bf9\u4eba\u7c7b\u6216\u73af\u5883\u9020\u6210\u4e0d\u5229\u98ce\u9669\uff0c\u5e76\u6307\u51fa\u4e86\u4e00\u7cfb\u5217\u653f\u5e9c\u652f\u6301\u7684\u7814\u7a76\u3002\n\u8ba1\u5212\u4e8e2021\u5e74\u5728\u4f5b\u7f57\u91cc\u8fbe\u7fa4\u5c9b\u91ca\u653e\u868a\u5b50\u7684\u8ba1\u5212\u662f\u5728\u8054\u90a6\u76d1\u7ba1\u673a\u6784\u6279\u51c6\u4fee\u6539\u540e\u7684\u868a\u5b50\u51e0\u4e2a\u6708\u540e\u53d1\u5e03\u7684\u3002\u4f5b\u7f57\u91cc\u8fbe\u7fa4\u5c9b\u662f\u4e00\u7cfb\u5217\u5c9b\u5c7f\u3002\n\u4eca\u5e745\u6708\uff0c\u7f8e\u56fd\u73af\u5883\u5c40(US Environmental Agency)\u6279\u51c6\u603b\u90e8\u4f4d\u4e8e\u82f1\u56fd\u3001\u5728\u7f8e\u56fd\u8fd0\u8425\u7684Oxitec\u516c\u53f8\u751f\u4ea7\u8f6c\u57fa\u56e0\u96c4\u6027\u57c3\u53ca\u4f0a\u868a\uff0c\u8fd9\u79cd\u868a\u5b50\u88ab\u79f0\u4e3aOX5034\u3002\n\u4f17\u6240\u5468\u77e5\uff0c\u57c3\u53ca\u4f0a\u868a\u4f1a\u5c06\u767b\u9769\u70ed\u3001\u5be8\u5361\u75c5\u6bd2\u3001\u57fa\u5b54\u80af\u96c5\u70ed\u548c\u9ec4\u70ed\u75c5\u7b49\u81f4\u547d\u75be\u75c5\u4f20\u64ad\u7ed9\u4eba\u7c7b\u3002\n\u53ea\u6709\u96cc\u6027\u868a\u5b50\u4f1a\u53ee\u54ac\u4eba\u7c7b\uff0c\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u8840\u6db2\u624d\u80fd\u4ea7\u5375\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u8ba1\u5212\u662f\u91ca\u653e\u7ecf\u8fc7\u6539\u826f\u7684\u96c4\u6027\u868a\u5b50\uff0c\u7136\u540e\u8fd9\u4e9b\u868a\u5b50\u6709\u671b\u4e0e\u91ce\u751f\u96cc\u6027\u868a\u5b50\u4ea4\u914d\u3002\n\u7136\u800c\uff0c\u96c4\u6027\u643a\u5e26\u7684\u4e00\u79cd\u86cb\u767d\u8d28\u4f1a\u5728\u96cc\u6027\u540e\u4ee3\u8fbe\u5230\u6210\u719f\u54ac\u5408\u5e74\u9f84\u4e4b\u524d\u6740\u6b7b\u5b83\u4eec\u3002\u53ea\u4ee5\u82b1\u871c\u4e3a\u98df\u7684\u96c4\u6027\u4f1a\u5b58\u6d3b\u4e0b\u6765\uff0c\u5e76\u5c06\u57fa\u56e0\u9057\u4f20\u4e0b\u53bb\u3002\n\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u76ee\u6807\u662f\u51cf\u5c11\u8be5\u5730\u533a\u57c3\u53ca\u4f0a\u868a\u7684\u6570\u91cf\uff0c\u4ece\u800c\u51cf\u5c11\u75be\u75c5\u5411\u4eba\u7c7b\u7684\u4f20\u64ad\u3002\n\u5468\u4e8c\uff0c\u4f5b\u7f57\u91cc\u8fbe\u7fa4\u5c9b\u868a\u5b50\u63a7\u5236\u533a(FKMCD)\u7684\u5b98\u5458\u6700\u7ec8\u6279\u51c6\u5728\u4e24\u5e74\u5185\u91ca\u653e7.5\u4ebf\u53ea\u8f6c\u57fa\u56e0\u868a\u5b50\u3002\n\u8be5\u8ba1\u5212\u906d\u5230\u4e86\u8bb8\u591a\u6279\u8bc4\uff0c\u5305\u62ec\u8fd124\u4e07\u4eba\u5728Change.org\u4e0a\u7b7e\u540d\u8bf7\u613f\uff0c\u731b\u70c8\u62a8\u51fbOxitec\u8ba1\u5212\u5c06\u7f8e\u56fd\u5404\u5dde\u4f5c\u4e3a\u8fd9\u4e9b\u53d8\u5f02\u7ec6\u83cc\u7684\u8bd5\u9a8c\u573a\u3002\n\u6839\u636eOxitec\u7684\u7f51\u7ad9\uff0c\u8be5\u516c\u53f8\u5728\u5df4\u897f\u8fdb\u884c\u5b9e\u5730\u8bd5\u9a8c\u65f6\u53d1\u73b0\u4e86\u79ef\u6781\u7684\u7ed3\u679c\u3002\u636e\u62a5\u9053\uff0c\u8be5\u516c\u53f8\u8fd8\u8ba1\u5212\u4ece2021\u5e74\u5f00\u59cb\u5728\u5fb7\u514b\u8428\u65af\u5dde\u90e8\u7f72\u5b83\u4eec\uff0c\u5e76\u5df2\u83b7\u5f97\u8054\u90a6\u653f\u5e9c\u7684\u6279\u51c6\uff0c\u4f46\u6ca1\u6709\u83b7\u5f97\u5dde\u6216\u5730\u65b9\u7684\u6279\u51c6\u3002\n\u73af\u4fdd\u7ec4\u7ec7\u5730\u7403\u4e4b\u53cb(Friends Of The Earth)\u5728\u4e00\u4efd\u8c34\u8d23\u8be5\u9879\u76ee\u7684\u58f0\u660e\u4e2d\u8868\u793a\uff1a\u57fa\u56e0\u5de5\u7a0b\u868a\u5b50\u7684\u91ca\u653e\u5c06\u4e0d\u5fc5\u8981\u5730\u5c06\u4f5b\u7f57\u91cc\u8fbe\u4eba\u3001\u73af\u5883\u548c\u6fd2\u4e34\u706d\u7edd\u7684\u7269\u79cd\u7f6e\u4e8e\u6d41\u884c\u75c5\u7684\u5371\u9669\u4e4b\u4e2d\u3002\n\u4f46Oxitec\u7684\u4e00\u4f4d\u79d1\u5b66\u5bb6\u544a\u8bc9\u7f8e\u8054\u793e\uff1a\u591a\u5e74\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u91ca\u653e\u4e86\u8d85\u8fc710\u4ebf\u53ea\u868a\u5b50\u3002\u8fd9\u5bf9\u73af\u5883\u6216\u4eba\u7c7b\u90fd\u6ca1\u6709\u6f5c\u5728\u7684\u98ce\u9669\u3002\n\u57c3\u53ca\u4f0a\u868a\u5165\u4fb5\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5357\u90e8\uff0c\u901a\u5e38\u5728\u57ce\u5e02\u5730\u533a\u53d1\u73b0\uff0c\u5b83\u4eec\u751f\u6d3b\u5728\u7ad9\u7acb\u7684\u6c34\u6c60\u4e2d\u3002\u5728\u8bb8\u591a\u5730\u533a\uff0c\u5305\u62ec\u4f5b\u7f57\u91cc\u8fbe\u7fa4\u5c9b\uff0c\u5b83\u4eec\u5df2\u7ecf\u5bf9\u6740\u866b\u5242\u4ea7\u751f\u4e86\u6297\u836f\u6027\u3002", "note_en": "Local officials in Florida have approved the release of 750 million mosquitoes that have been genetically modified to reduce local populations.\n The aim is to reduce the number of mosquitoes that carry diseases like dengue or the Zika virus.\n The green-lighting of a pilot project after years of debate drew a swift outcry from environmental groups, who warned of unintended consequences.\n  Activists warn of possible damage to ecosystems, and the potential creation of hybrid, insecticide-resistant mosquitoes.\n But the company involved says there will be no adverse risk to humans or the environment, and points to a slate of government-backed studies.\n  The plan to release the mosquitoes in 2021 in the Florida Keys, a string of islands, comes months after the modified mosquitoes were approved by federal regulators.\n In May, the US Environmental Agency granted permission to the British-based, US-operated company Oxitec to produce the genetically engineered, male Aedes aegypti mosquitoes, which are known as OX5034.\n Aedes aegypti mosquitoes are known to spread deadly diseases to humans such dengue, Zika, chikungunya and yellow fever.\n  Only female mosquitoes bite humans because they need blood to produce eggs. So the plan is to release the male, modified mosquitoes who will then hopefully breed with wild female mosquitoes.\n However the males carry a protein that will kill off any female offspring before they reach mature biting age. Males, which only feed on nectar, will survive and pass on the genes.\n Over time, the aim is to reduce the population of Aedes aegypti mosquitoes in the area and thereby reduce the spread of disease to humans.\n On Tuesday, officials in the Florida Keys Mosquito Control District (FKMCD) gave final approval to release 750 million of the modified mosquitoes over a two-year period.\n The plan has many critics, including nearly 240,000 people who signed a petition on Change.org slamming Oxitec&#39;s plan to use US states &#34;as a testing ground for these mutant bugs&#34;.\n According to Oxitec&#39;s website, the company has found positive results conducting field trials in Brazil. It also plans to deploy them in Texas beginning in 2021 and has gained federal approval, but not state or local approval, according to reports.\n In a statement denouncing the project, environmental group Friends of the Earth said: &#34;The release of genetically engineered mosquitoes will needlessly put Floridians, the environment and endangered species at risk in the midst of a pandemic.&#34;\n But an Oxitec scientist told AP news agency: &#34;We have released over a billion of our mosquitoes over the years. There is no potential for risk to the environment or humans&#34;.\n The Aedes aegypti is invasive to southern Florida, and are commonly found in urban areas where they live in standing pools of water. In many areas, including the Florida Keys, they have developed a resistance to pesticides.", "posttime": "2020-11-05 20:17:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4f5b\u7f57\u91cc\u8fbe\u5dde,modified,\u868a\u5b50", "title": "\u4f5b\u7f57\u91cc\u8fbe\u5dde\u5c06\u91ca\u653e7.5\u4ebf\u53ea\u8f6c\u57fa\u56e0\u868a\u5b50", "title_en": "750M genetically modified mosquitoes to be released in Florida", "transed": 1, "url": "https://www.bbc.com/news/world-us-canada-53856776", "via": "", "real_tags": ["\u4f5b\u7f57\u91cc\u8fbe\u5dde", "modified", "\u868a\u5b50"]}, {"category": "", "categoryclass": "", "imagename": "5b96044af7bc23f02f2946d382529d6e.jpg", "infoid": 1033299, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u907f\u514d\u611a\u8822\u662f\u5b9e\u73b0\u6210\u529f\u76ee\u6807\u7684\u6709\u6548\u9014\u5f84\u3002\u4f60\u5e76\u4e0d\u603b\u662f\u9700\u8981\u505a\u4f1f\u5927\u7684\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u907f\u514d\u611a\u8822\u7684\u9519\u8bef\uff0c\u4f60\u53ef\u4ee5\u8d70\u5f88\u957f\u4e00\u6bb5\u8def\u3002\n\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u6211\u8c08\u8bba\u7684\u662f\u6211\u5728\u521b\u5efa\u7b2c\u4e00\u5bb6\u521b\u4e1a\u516c\u53f8\u65f6\u6240\u505a\u7684\u8822\u4e8b\u3002\n\u5728\u5f97\u5230\u4e16\u754c\u4e0a\u6700\u597d\u7684\u521b\u4e1a\u52a0\u901f\u5668\u4e4b\u4e00Y Composator\u7684\u8d44\u52a9\u540e\uff0c\u6211\u4eec\u6709\u673a\u4f1a\u642c\u5230\u4eba\u4eec\u68a6\u5bd0\u4ee5\u6c42\u7684\u7845\u8c37\u3002\u8fd9\u662f\u68a6\u60f3\u6210\u771f\u3002\n\u5feb\u8fdb\u4e24\u5e74\u540e\uff0c\u6211\u4eec\u4e0d\u5f97\u4e0d\u5173\u95ed\u8fd9\u5bb6\u516c\u53f8\uff0c\u539f\u56e0\u6709\u51e0\u4e2a--\u5176\u4e2d\u4e4b\u4e00\u5c31\u662f\u7f3a\u4e4f\u6536\u5165\u3002\n\u65e7\u91d1\u5c71\u6e7e\u533a\u7684\u79df\u91d1\u8d85\u9ad8\u3002\u4ed6\u8bf4\uff1a\u201c\u90a3\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u5bcc\u88d5\u3002\u6211\u4eec\u662f\u5728\u9884\u7b97\u4e4b\u5185--\u4f46\u6211\u8ba4\u4e3a\u6211\u4eec\u672c\u53ef\u4ee5\u5229\u7528\u6211\u4eec\u6240\u62e5\u6709\u7684\u4e1c\u897f\u628a\u67d0\u4e9b\u4e8b\u60c5\u505a\u5f97\u66f4\u597d\u3002\n\u6211\u4eec\u7761\u5728\u94fa\u7740\u5730\u6bef\u7684\u5730\u677f\u4e0a\u3002\u6211\u4eec\u53ea\u6709\u4e00\u5f20\u684c\u5b50\u548c\u51e0\u628a\u6905\u5b50\u3002\n\u6211\u4eec\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u5750\u5728\u5730\u677f\u4e0a\u5de5\u4f5c\uff0c\u4e0e\u5bd2\u51b7\u7684\u65e9\u6668\u4f5c\u6597\u4e89\u3002\u8fd9\u4e5f\u5f71\u54cd\u4e86\u6211\u4eec\u7684\u751f\u4ea7\u529b\u3002\n\u52aa\u529b\u5de5\u4f5c\u88ab\u521d\u521b\u4f01\u4e1a\u4e16\u754c\u6d6a\u6f2b\u5316\u4e86\u3002\u6211\u8fc7\u53bb\u5e38\u5e38\u5439\u5618\u81ea\u5df1\u4e00\u5929\u5de5\u4f5c\u4e86\u591a\u5c11\u4e2a\u5c0f\u65f6\uff0c\u597d\u50cf\u8fd9\u662f\u4e00\u9879\u6210\u5c31\u3002\n\u4e0d\u8981\u8bef\u4f1a\u6211\u7684\u610f\u601d--\u5982\u679c\u4f60\u60f3\u53d6\u5f97\u6210\u529f\uff0c\u59cb\u7ec8\u5982\u4e00\u7684\u5de5\u4f5c\u975e\u5e38\u91cd\u8981\u3002\n\u4f46\u5c0f\u65f6\u6570\u4e0e\u4ea7\u51fa\u5e76\u4e0d\u6210\u6b63\u6bd4\uff0c\u4e0e\u7ed3\u679c\u76f8\u53bb\u751a\u8fdc\u3002\u4f60\u7684\u8eab\u4f53\u9700\u8981\u4f11\u606f\u548c\u826f\u597d\u7684\u98df\u7269\u3002\n\u8fc7\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\u5c31\u5931\u53bb\u4e86\u767d\u5929\u548c\u9ed1\u591c\u7684\u6982\u5ff5\u3002\u6211\u4eec\u968f\u673a\u7761\u89c9\uff0c\u968f\u673a\u9192\u6765\uff0c\u7136\u540e\u7ee7\u7eed\u5de5\u4f5c\u3002\n\u5927\u591a\u6570\u51b3\u5b9a\u5f80\u5f80\u662f\u7531\u4e00\u4e2a\u4eba\u505a\u51fa\u7684\uff0c\u6ca1\u6709\u8db3\u591f\u7684\u96c6\u601d\u5e7f\u76ca\u3002\u8fd9\u4e0d\u662f\u7406\u60f3\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\n\u4f46\u540c\u6837\u91cd\u8981\u7684\u662f\uff0c\u8ba9\u5173\u952e\u4eba\u7269\u53c2\u4e0e\u8fdb\u6765\uff0c\u8ba9\u4ed6\u4eec\u5728\u505a\u51fa\u51b3\u5b9a\u65f6\u6709\u81ea\u5df1\u7684\u53d1\u8a00\u6743\u3002\n\u8c08\u8bba\u4f60\u89c9\u5f97\u4e0d\u5bf9\u7684\u4e8b\u60c5\u3002\u5982\u679c\u4f60\u4e0d\u91cd\u89c6\u81ea\u5df1\u7684\u89c2\u70b9\uff0c\u5c31\u522b\u6307\u671b\u522b\u4eba\u4f1a\u8fd9\u4e48\u505a\u3002\n\u6c38\u8fdc\u4e0d\u8981\u8ba9\u522b\u4eba\u63a7\u5236\u4f60\u3002\u6c38\u8fdc\u4e0d\u8981\u8ba9\u522b\u4eba\u505a\u51fa\u5c5e\u4e8e\u4f60\u7684\u51b3\u5b9a\u3002\n\u6211\u82b1\u4e86\u4e00\u6bb5\u65f6\u95f4\u624d\u660e\u767d\u5065\u5eb7\u751f\u6d3b\u65b9\u5f0f\u7684\u91cd\u8981\u6027\u3002\u4f53\u80b2\u953b\u70bc\u5bf9\u5fc3\u7406\u5065\u5eb7\u7684\u5f71\u54cd\u4ecd\u7136\u88ab\u4f4e\u4f30\u3002\n\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u5de5\u4f5c\uff0c\u7761\u89c9\u3002\u5c31\u8fd9\u6837\u4e86\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4eec\u5f00\u59cb\u5076\u5c14\u51fa\u53bb\u6563\u6b65\u3002\n\u6211\u4eec\u603b\u662f\u5403\u5783\u573e\u98df\u54c1(\u6211\u5e76\u4e0d\u540e\u6094\u592a\u591a\uff0c\u56e0\u4e3a\u5b83\u4eec\u5927\u591a\u5f88\u7f8e\u5473)\uff0c\u800c\u4e14\u6ca1\u6709\u8db3\u591f\u7684\u953b\u70bc\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u90fd\u662f\u4e2a\u4eba\u9519\u8bef\uff0c\u4f46\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e5f\u72af\u4e86\u5f88\u591a\u7ecf\u5178\u7684\u521b\u4e1a\u9519\u8bef\u3002\n\u6211\u4eec\u4ee5\u60ca\u4eba\u7684\u901f\u5ea6\u63a8\u51fa\u4e86\u529f\u80fd\u3002\u4f46\u6211\u4eec\u4ece\u672a\u4e0e\u8db3\u591f\u591a\u7684\u7528\u6237\u4ea4\u6d41\u8fc7\uff0c\u65e0\u6cd5\u786e\u5b9a\u8fd9\u662f\u5426\u6709\u5fc5\u8981\u3002\u6211\u4eec\u5047\u8bbe\u4e86\u4e00\u4e9b\u4e8b\u60c5\uff0c\u5e76\u7ee7\u7eed\u5efa\u9020--\u51e0\u4e2a\u6708\u540e\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u5de5\u7a0b\u5947\u8ff9\u7684\u4ea7\u54c1--\u4f46\u6ca1\u6709\u4eba\u613f\u610f\u4f7f\u7528\u3002\n\u56de\u9996\u5f80\u4e8b\uff0c\u6211\u4ecd\u7136\u5bf9\u6211\u4eec\u53d1\u8d27\u7684\u901f\u5ea6\u611f\u5230\u656c\u754f\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u5356\u4e0d\u51fa\u53bb\u4ea7\u54c1\uff0c\u90a3\u4e5f\u4e0d\u8981\u7d27\u3002\n\u6211\u4eec\u5f88\u5929\u771f\u5730\u8ba4\u4e3a\u6784\u5efa\u8f6f\u4ef6\u662f\u521b\u5efa\u521d\u521b\u516c\u53f8\u6700\u96be\u7684\u90e8\u5206\u3002\n\u6240\u6709\u7684\u516c\u53f8\u90fd\u8fd9\u4e48\u505a\u3002\u770b\u770bSnapchat\u4e0a\u7684\u6545\u4e8b\u5bf9\u793e\u4ea4\u5e94\u7528\u9020\u6210\u4e86\u4ec0\u4e48\u5f71\u54cd\u3002\n\u4f46\u5373\u4f7f\u4f60\u590d\u5236\u529f\u80fd\uff0c\u4f60\u4e5f\u5fc5\u987b\u786e\u4fdd\u4f60\u7684\u7528\u6237\u60f3\u8981\u5b83\u3002Instagram\u6210\u529f\u5730\u590d\u5236\u4e86\u8fd9\u4e9b\u6545\u4e8b\uff0c\u4f46Medium\u4e5f\u5c1d\u8bd5\u4e86\u540c\u6837\u7684\u505a\u6cd5\uff0c\u4f46\u5e76\u4e0d\u662f\u5f88\u6210\u529f\u3002\n\u6284\u88ad\u7ade\u4e89\u5bf9\u624b\u53ea\u4f1a\u8ba9\u4f60\u8ddf\u4ed6\u4eec\u8d70\u5f97\u4e00\u6837\u8fdc\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u4eba\u4eec\u6539\u53d8\uff0c\u4f60\u7684\u76ee\u6807\u5e94\u8be5\u662f\u521b\u9020\u51fa\u6bd4\u4ed6\u4eec\u597d\u5f97\u591a\u7684\u4e1c\u897f\u3002\n\u9664\u975e\u65b0\u4ea7\u54c1\u662f\u4f18\u79c0\u7684\uff0c\u5426\u5219\u5b83\u65e0\u6cd5\u514b\u670d\u8f6c\u53d8\u7684\u75db\u82e6\u3002\n\u5982\u679c\u4f60\u5728\u7b79\u96c6\u98ce\u9669\u6295\u8d44\uff0c\u5bf9\u516c\u53f8\u6709\u4e00\u4e2a\u5b8f\u4f1f\u7684\u613f\u666f\u603b\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\n\u6211\u4eec\u5e94\u8be5\u95ee\u81ea\u5df1\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u9898\uff1a\u8c01\u662f\u4f60\u7684\u7406\u60f3\u7528\u6237\uff1f\u4ed6\u4eec\u60f3\u7528\u4f60\u7684\u4ea7\u54c1\u8fbe\u5230\u4ec0\u4e48\u76ee\u7684\uff1f\n\u6211\u4eec\u6709\u4e00\u7cfb\u5217\u7684\u529f\u80fd\uff0c\u53ef\u80fd\u662f\u4e94\u79cd\u4e0d\u540c\u7684\u4ea7\u54c1\u53ef\u4ee5\u505a\u5230\u7684\u3002\u4f46\u6ca1\u6709\u4e00\u4e2a\u7528\u6237\u60f3\u8981\u3002\n\u6709\u65f6\u4f60\u4f1a\u8d62\uff0c\u6709\u65f6\u4f60\u4f1a\u5b66\u5230\u4e1c\u897f\u3002\u8fd9\u662f\u4e00\u6b21\u8ba9\u6211\u7684\u751f\u6d3b\u53d8\u5f97\u66f4\u597d\u7684\u7ecf\u5386\u3002\u6211\u5f88\u9ad8\u5174\u6211\u505a\u5230\u4e86--\u6211\u5f88\u9ad8\u5174\u6211\u5c1d\u8bd5\u4e86\uff0c\u4f46\u5931\u8d25\u4e86\u3002", "note_en": "Avoiding stupidity is a powerful way to reach your success goals. You don\u2019t always need to do great things. You can go a long way if you avoid stupid mistakes.\n In this blog post, I am talking about the stupid things I have done while building my first startup.\n  We had the opportunity to move to the much-coveted Silicon Valley, after being funded by Ycombinator \u2013 one of the best startup accelerators in the world. It was a dream come true.\n Fast forward two years, we had to shut down the company due to several reasons \u2013 one of them being the lack of revenue.\n   Rents in the Bay Area are super high. \u00a0We didn\u2019t have a fortune back then. We were on a budget \u2013 but I think we could have used what we had to do certain things better.\n We slept on the carpeted floor. All we had was one table and a few chairs.\n We worked mostly sitting on the floor, combating the cold mornings. It also took a toll on our productivity.\n    Hard work is romanticized by the startup world. I used to brag how many hours I worked a day as if it is an achievement.\n Do not get me wrong \u2013 consistent work matters a lot if you want to be successful.\n But the number of hours is not directly proportional to the output and is far from the outcome. Your body needs rest and good food.\n After some point, we lost the notion of day and night. We slept at random times, woke up at random times, and continued working.\n  Most of the decisions were often made by a single person, without enough brainstorming. It is not the ideal way of working.\n  But it is also important to include the key people and letting them have their say in making that decision.\n Talk about things you feel are wrong. If you do not value your opinions, do not expect someone else to do it.\n Never let someone else control you. Never let someone else make a decision that is yours.\n  It took me a while to understand the importance of a healthy lifestyle. The effects of physical exercise on mental health are still very underrated.\n In the beginning, we worked and we slept. That was it. Over time we started going for occasional walks.\n We always resort to eating junk food(which I don\u2019t regret much, because most of them were delicious) and not exercising enough.\n So far it was about personal mistakes, but we also made plenty of classic startup mistakes along the way.\n  We shipped features at a tremendous pace. But we never talked to enough users to identify if it was something necessary. We assumed things and kept building \u2013 in a few months, we had a product which was an engineering marvel \u2013 but nobody cared to use.\n  I still look back with awe at the speed with which we shipped. But it does not matter if you cannot sell the product.\n  We were very naive to think that building software is the hardest part of building a startup.\n  All the companies do this. Look at what stories from Snapchat have done to the social apps.\n But even when you copy features, you have to make sure your users want it. Instagram copied the stories successfully, but when Medium tried the same, it was not very successful.\n Copying from the competition will only get you as far as them. Your goal should be to build things that are much better than them if you want to make people switch.\n Unless the new product is excellent, it won\u2019t overcome the pain of making the switch.\n  It is always a good idea to have a grand vision for the company if you are raising venture capital.\n  A simple question we should ask ourselves is \u2013 Who is your ideal user? What do they want to achieve with your product?\n We had a bunch of features, probably what five different products would have done. But no single user wanted.\n  Sometimes you win, sometimes you learn. It was an experience that changed my life for the good. I\u2019m happy that I did it \u2013 I am happy that I tried and failed.", "posttime": "2020-11-05 20:16:32", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u521b\u4e1a,mistakes,\u4ea7\u54c1", "title": "\u6211\u5728\u521b\u5efa\u6211\u7684\u7b2c\u4e00\u5bb6\u521b\u4e1a\u516c\u53f8\u65f6\u72af\u4e86\u611a\u8822\u7684\u9519\u8bef", "title_en": "Stupid mistakes I made while building my first startup", "transed": 1, "url": "https://sooraj.io/2020/11/04/stupid-things-i-did-while-building-my-first-startup/", "via": "", "real_tags": ["\u521b\u4e1a", "mistakes", "\u4ea7\u54c1"]}, {"category": "", "categoryclass": "", "imagename": "730618e2ee04465aaeee3365a246d9ee.jpeg", "infoid": 1033298, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4ece2020\u5e7411\u67086\u65e5\u4e0a\u534810\u70b9\u534a\u5f00\u59cb\uff0c\u6bcf\u5468\u4e00\u7cfb\u5217\u5173\u4e8e\u91cf\u5b50\u8ba1\u7b97\u57fa\u7840\u7684\u8bb2\u5ea7\u5c06\u901a\u8fc7\u7f51\u7edc\u76f4\u64ad\u64ad\u51fa\u3002\u5728\u63a5\u4e0b\u6765\u7684\u4e03\u5468\u91cc\uff0c\u6bcf\u4e2a\u661f\u671f\u4e94\u90fd\u4f1a\u64ad\u51fa\u65b0\u7684\u8bb2\u5ea7\u3002\u8bb2\u5ea7\u5c06\u805a\u7126\u4e8e\u91cf\u5b50\u8ba1\u7b97\u7684\u5b9e\u9645\u65b9\u9762\uff0c\u7531CERN OpenLab\u548cCERN\u91cf\u5b50\u6280\u672f\u5021\u8bae\u7ec4\u7ec7\u3002\u4ed6\u4eec\u5c06\u7531\u57c3\u5229\u4e9a\u65af\u00b7\u8d39\u5c14\u5357\u5fb7\u65af-\u5b54\u5df4\u7f57\u00b7\u963f\u5c14\u74e6\u96f7\u65af(Elias Fernandez-Combarro Alvarez)\u8bb2\u6388\u3002\u81ea2009\u5e74\u4ee5\u6765\uff0c\u57c3\u5229\u4e9a\u65af\u00b7\u8d39\u5c14\u5357\u5fb7\u65af-\u5b54\u5df4\u7f57\u00b7\u963f\u5c14\u74e6\u96f7\u65af\u662f\u897f\u73ed\u7259\u5965\u7ef4\u8036\u591a\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb\u7684\u526f\u6559\u6388\uff0c\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u5f00\u59cb\u62c5\u4efbCERN\u7684\u5408\u4f5c\u52a9\u7406\u3002\r\r\u91cf\u5b50\u8ba1\u7b97\u662f\u4fe1\u606f\u5904\u7406\u9886\u57df\u6700\u6709\u524d\u9014\u7684\u65b0\u8d8b\u52bf\u4e4b\u4e00\u3002\u672c\u8bfe\u7a0b\u4ecb\u7ecd\u91cf\u5b50\u7535\u8def\u6a21\u578b\u7684\u57fa\u672c\u6982\u5ff5(\u91cf\u5b50\u6bd4\u7279\u3001\u95e8\u548c\u5ea6\u91cf)\u548c\u91cd\u8981\u7684\u91cf\u5b50\u7b97\u6cd5\u548c\u534f\u8bae\uff0c\u5305\u62ec\u90a3\u4e9b\u53ef\u4ee5\u7528\u51e0\u4e2a\u91cf\u5b50\u6bd4\u7279\u5b9e\u73b0\u7684\u7b97\u6cd5\u548c\u534f\u8bae(BB84\uff0c\u91cf\u5b50\u9690\u5f62\u4f20\u6001\uff0c\u8d85\u5bc6\u96c6\u7f16\u7801\u7b49)\uff0c\u4ee5\u53ca\u90a3\u4e9b\u9700\u8981\u591a\u91cf\u5b50\u6bd4\u7279\u7cfb\u7edf\u7684\u7b97\u6cd5\u548c\u534f\u8bae(Deutsch-Jozsa\uff0cGrover\uff0cShor\u7b49)\u3002\u672c\u8bfe\u7a0b\u5c06\u8ba8\u8bba\u91cf\u5b50\u8ba1\u7b97\u5728\u4f18\u5316\u548c\u6a21\u62df\u9886\u57df\u7684\u4e00\u4e9b\u6700\u65b0\u5e94\u7528(\u7279\u522b\u5f3a\u8c03\u91cf\u5b50\u9000\u706b\u6cd5\u3001\u91cf\u5b50\u8fd1\u4f3c\u4f18\u5316\u7b97\u6cd5\u548c\u53d8\u5206\u91cf\u5b50\u672c\u5f81\u89e3\u7b97\u5668\u7684\u4f7f\u7528)\u4ee5\u53ca\u91cf\u5b50\u673a\u5668\u5b66\u4e60(\u4f8b\u5982\uff0c\u901a\u8fc7\u4f7f\u7528\u91cf\u5b50\u652f\u6301\u5411\u91cf\u673a\u548c\u91cf\u5b50\u53d8\u5206\u5206\u7c7b\u5668)\u3002\u8fd8\u5c06\u63d0\u4f9b\u5982\u4f55\u5728\u5316\u5b66\u6a21\u62df\u548c\u9ad8\u80fd\u7269\u7406\u95ee\u9898\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u6280\u672f\u7684\u4f8b\u5b50\u3002\r\r\u9664\u4e86\u91cf\u5b50\u8ba1\u7b97\u7684\u5b9e\u9645\u65b9\u9762\uff0c\u672c\u8bfe\u7a0b\u8fd8\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728\u91cf\u5b50\u6a21\u62df\u5668\u548c\u5b9e\u9645\u91cf\u5b50\u8ba1\u7b97\u673a(\u4f8b\u5982\u901a\u8fc7IBM Quantum Experience\u548cD-Wave Leap\u63d0\u4f9b\u7684\u8ba1\u7b97\u673a)\u4e2d\u5b9e\u73b0\u7b97\u6cd5\u3002\u4e0d\u9700\u8981\u4ee5\u524d\u7684\u91cf\u5b50\u7269\u7406\u77e5\u8bc6\uff0c\u53ea\u9700\u8981\u5f88\u597d\u5730\u638c\u63e1\u57fa\u672c\u7684\u7ebf\u6027\u4ee3\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\u719f\u6089\u4e00\u4e9bPython\u7f16\u7a0b\u8bed\u8a00\u4f1a\u5f88\u6709\u5e2e\u52a9\uff0c\u4f46\u4e5f\u4e0d\u662f\u5fc5\u9700\u7684\u3002\r\r\u4e0b\u9762\u63d0\u4f9b\u4e86\u6bcf\u4e2a\u8bb2\u5ea7\u7684\u5355\u72ec\u94fe\u63a5\u3002\r\r11\u67086\u65e5\u661f\u671f\u4e941/7\u8bb2\u5ea7\uff1ahttps://indico.cern.ch/event/970903/\r\r11\u670813\u65e5\u661f\u671f\u4e94\uff0c\u7b2c2/7\u8bfe\uff1ahttps://indico.cern.ch/event/970904/\r\r11\u670820\u65e5\u661f\u671f\u4e943/7\u8bb2\u5ea7\uff1ahttps://indico.cern.ch/event/970905/\r\r11\u670827\u65e5\u661f\u671f\u4e94\u7b2c\u56db\u8bb2/\u7b2c\u4e03\u8bb2\uff1ahttps://indico.cern.ch/event/970906/\r\r\u7b2c5/7\u8bfe\uff0c12\u67084\u65e5\u661f\u671f\u4e94\uff1ahttps://indico.cern.ch/event/970907/\r\r12\u670811\u65e5\u661f\u671f\u4e946/7\u8bb2\u5ea7\uff1ahttps://indico.cern.ch/event/970908/\r\r12\u670818\u65e5\u661f\u671f\u4e947/7\u8bb2\u5ea7\uff1ahttps://indico.cern.ch/event/970909/", "note_en": "A series of weekly lectures on the basics of quantum computing will be broadcast via webcast starting 6 November 2020 at 10.30 a.m. New lectures will be broadcast each Friday of the next seven weeks. The talks will focus on the practical aspects of quantum computing and are organised by CERN openlab and the CERN Quantum Technology Initiative. They will be given by Elias Fernandez-Combarro Alvarez, an associate professor in the Computer Science Department at the University of Oviedo in Spain since 2009 and a cooperation associate at CERN since earlier this year.\r\rQuantum computing is one the most promising new trends in information processing. This course introduces basic concepts of the quantum circuit model (qubits, gates and measures) and important quantum algorithms and protocols, including those that can be implemented with a few qubits (BB84, quantum teleportation, superdense coding, etc.), as well as those that require multi-qubit systems (Deutsch-Jozsa, Grover, Shor, etc.). Some of the most recent applications of quantum computing in the fields of optimisation and simulation will be addressed (with special emphasis on the use of quantum annealing, the quantum approximate optimisation algorithm and the variational quantum eigensolver) along with quantum machine learning (for instance, through the use of quantum support vector machines and quantum variational classifiers). Examples of how these techniques can be used in chemistry simulations and high-energy physics problems will also be provided.\r\rBeyond the practical aspects of quantum computing, the course will cover the implementation of algorithms in quantum simulators and actual quantum computers (such as the ones available through the IBM Quantum Experience and D-Wave Leap). No previous knowledge of quantum physics is required and only a good command of basic linear algebra is necessary. Some familiarity with the Python programming language would be helpful, but is also not required.\r\rIndividual links to each lecture are provided below.\r\rLecture 1/7, Friday 6 November: https://indico.cern.ch/event/970903/\r\rLecture 2/7, Friday 13 November: https://indico.cern.ch/event/970904/ \u00a0\r\rLecture 3/7, Friday 20 November: https://indico.cern.ch/event/970905/\r\rLecture 4/7, Friday 27 November: https://indico.cern.ch/event/970906/\r\rLecture 5/7, Friday 4 December: https://indico.cern.ch/event/970907/\r\rLecture 6/7, Friday 11 December: https://indico.cern.ch/event/970908/\r\rLecture 7/7, Friday 18 December: https://indico.cern.ch/event/970909/", "posttime": "2020-11-05 20:16:13", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91cf\u5b50,online", "title": "\u6b27\u6d32\u6838\u5b50\u7814\u7a76\u4e2d\u5fc311\u67086\u65e5\u8d77\u4e3e\u529e\u91cf\u5b50\u8ba1\u7b97\u5728\u7ebf\u5165\u95e8\u8bb2\u5ea7", "title_en": "CERN Online introductory lectures on quantum computing from 6 November", "transed": 1, "url": "https://home.cern/news/announcement/computing/online-introductory-lectures-quantum-computing-6-november", "via": "", "real_tags": ["\u91cf\u5b50", "online"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033297, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u91cc\uff0c\u5185\u90e8\u56e2\u961f\u4e00\u76f4\u975e\u5e38\u5fd9\u788c\u3002\u6709\u5f88\u591a\u4e8b\u60c5\u6b63\u5728\u53d1\u751f\uff0c\u5176\u4e2d\u4e00\u4e9b\u6211\u8fd8\u4e0d\u80fd\u5b8c\u5168\u8c08\u8bba\uff0c\u4f46\u975e\u5e38\u4ee4\u4eba\u5174\u594b(\u770b\u770b\u8fd9\u7bc7\u6587\u7ae0\uff01)\u3002\u7136\u800c\uff0c\u6211\u73b0\u5728\u80fd\u591f\u66f4\u8be6\u7ec6\u5730\u89e3\u91ca\u6211\u4eec\u5bf9\u5373\u5c06\u53d1\u5e03\u7684MuseScore(3.6\u548c4.0)\u6709\u4ec0\u4e48\u8ba1\u5212\uff0c\u4ee5\u53ca\u6211\u4eec\u672a\u6765\u5e0c\u671b\u5982\u4f55\u4e0e\u793e\u533a\u5408\u4f5c\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u8ba8\u8bba\u4e00\u4e0b\u6211\u4eec\u6700\u521d\u7684MuseScore 4\u8ba1\u5212\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u6539\u53d8\u7684\u3002\u521a\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6709\u51e0\u4e2a\u5173\u952e\u76ee\u6807\uff1a\n\u4f7f\u7528\u73b0\u6709\u7684\u4ee3\u7801\u5e93\u5927\u5927\u964d\u4f4e\u4e86\u6211\u4eec\u7684\u901f\u5ea6\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u4e0e\u4e0d\u7a33\u5b9a\u4f5c\u6597\u4e89\u3002\n\u8bd5\u56fe\u68c0\u4fee\u6211\u4eec\u7684\u96d5\u523b\u5f15\u64ce\uff0c\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9a\u5e8f\u5668--\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u4e00\u4e2a\u5e9e\u5927\u7248\u672c\u7684\u4e00\u90e8\u5206--\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\uff0c\u800c\u4e14\u9700\u8981\u6570\u5e74\u65f6\u95f4\u3002\n\u6211\u4eec\u89c9\u5f97\u4e0d\u5e94\u8be5\u7b49\u5230MuseScore4\u53d1\u5e03\u65f6\uff0c\u6709\u5f88\u591a\u660e\u667a\u7684\u96d5\u523b\u4fee\u590d\u3002\u8fd9\u662f\u6211\u4eec\u53d1\u5e03MuseScore4\u65f6\u6700\u666e\u904d\u8868\u8fbe\u7684\u89c2\u70b9\u3002\n\u4ece\u5934\u5f00\u59cb\u91cd\u65b0\u6784\u5efa\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u6781\u5927\u5730\u63d0\u9ad8\u6211\u4eec\u672a\u6765\u7684\u5f00\u53d1\u901f\u5ea6(\u4e0b\u4e00\u90e8\u5206\u5c06\u5bf9\u6b64\u8fdb\u884c\u66f4\u591a\u4ecb\u7ecd)\u3002\n\u8fd9\u4e2a\u7248\u672c\u7684MuseScore\u662f\u4e0e\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u793e\u533a\u5bc6\u5207\u5408\u4f5c\u521b\u5efa\u7684\uff0c\u6700\u5f15\u4eba\u6ce8\u76ee\u7684\u662fNiek van den Berg\uff0c\u4ed6\u5bf9MuseScore\u8fdb\u884c\u4e86\u5de8\u5927\u7684\u6539\u8fdb\u3002\u8fd9\u4e5f\u5c06\u662f\u6211\u4eec\u65b0\u7684\u96d5\u523b\u4e13\u5bb6\u897f\u8499\u00b7\u53f2\u5bc6\u65af(@Oktophonie)\u7684\u7b2c\u4e00\u6b21\u53d1\u5e03\u30023.6\u7684\u76ee\u6807\u662f\u6539\u8fdbMuseScore\u7684\u9ed8\u8ba4\u96d5\u523b\u8bbe\u7f6e\u3002\u4ee5\u4e0b\u662f\u6700\u91cd\u5927\u7684\u53d8\u5316\uff1a\n\u81ea\u52a8\u4e50\u5668\u6392\u5e8f\u4ece\u73b0\u5728\u8d77\uff0c\u5f53\u60a8\u5c06\u4e50\u5668\u6dfb\u52a0\u5230\u4e50\u8c31\u4e2d\u65f6\uff0c\u5b83\u4eec\u5c06\u6839\u636e\u60a8\u9009\u62e9\u7684\u6d41\u6d3e\u7684\u6807\u51c6\u7ea6\u5b9a\u8fdb\u884c\u6392\u5217\u3002\u901a\u8fc7\u4e0e\u6211\u4eec\u7684\u8bb8\u591a\u7528\u6237\u4ea4\u8c08\u548c\u7814\u7a76MuseScore.com\u4e0a\u7684\u5927\u91cf\u6750\u6599\uff0c\u5f88\u660e\u663e\u8fd9\u662f\u6211\u4eec\u9700\u8981\u7684\u3002\u5bf9\u4e8e\u5f00\u59cb\u521b\u4f5c\u4e4b\u65c5\u7684\u65b0\u7528\u6237\u6765\u8bf4\uff0c\u5b83\u5c24\u5176\u6709\u7528\u3002\u8fd9\u5e76\u4e0d\u59a8\u788d\u60a8\u4ee5\u4efb\u4f55\u60a8\u60f3\u8981\u7684\u65b9\u5f0f\u5b9a\u5236\u60a8\u7684\u4eea\u5668\u8ba2\u5355\u3002\n\u4e50\u5668\u81ea\u52a8\u62ec\u8d77\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u60ef\u4f8b\uff0c\u5b83\u6781\u5927\u5730\u6539\u5584\u4e86\u4e50\u8c31\u7684\u5448\u73b0\u548c\u6613\u8bfb\u6027\uff0c\u4f46\u5f80\u5f80\u88ab\u7ecf\u9a8c\u8f83\u5c11\u7684\u7528\u6237\u5ffd\u89c6\u3002\u6211\u4eec\u89c9\u5f97\uff0c\u4e0e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u7684\u9ed8\u8ba4\u884c\u4e3a\u76f8\u6bd4\uff0c\u7f3a\u5c11\u6b64\u9ed8\u8ba4\u8bbe\u7f6e\u4f1a\u4f7fMuseScore\u7684\u8f93\u51fa\u5904\u4e8e\u4e0d\u5229\u5730\u4f4d\u3002\u5bf9\u4e8e\u5e74\u8f7b\u5b66\u751f\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u5fc5\u4e0d\u53ef\u5c11\u7684\u89e3\u51b3\u529e\u6cd5\u3002\u5bf9\u4e8e\u7ecf\u9a8c\u4e30\u5bcc\u7684\u7528\u6237--\u5c24\u5176\u662f\u6559\u5e08--\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u8282\u7701\u65f6\u95f4\u7684\u65b9\u6cd5\u3002\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u65b0\u7684\u9ed8\u8ba4\u6587\u672c\u5b57\u4f53MuseScore\u5df2\u7ecf\u4f7f\u7528\u4e86\u514d\u8d39\u886c\u7ebf\u5b57\u4f53(Times New Roman\u7684\u7ffb\u7248)\uff0c\u7528\u4e8e\u6807\u9898\u3001\u6b4c\u8bcd\u548c\u5176\u4ed6\u6587\u672c\u63cf\u8ff0\u3002\u867d\u7136Free Serif\u7684\u5b57\u7b26\u96c6\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\uff0c\u4f46\u6211\u4eec\u89c9\u5f97\u662f\u65f6\u5019\u8fdb\u884c\u91cd\u5927\u5347\u7ea7\u4e86\uff0c\u6211\u4eec\u5728\u65b0\u4e16\u7eaa\u6559\u79d1\u4e66\u7684\u7ecf\u5178\u5b57\u4f53\u57fa\u7840\u4e0a\u63a8\u51fa\u4e86\u4e00\u79cd\u65b0\u5b57\u4f53\uff0c\u53d7\u5230Boosey&amp\uff1bHawkes\u7b49\u51fa\u7248\u5546\u7684\u9752\u7750\u3002\u6211\u4eec\u65b0\u5b57\u4f53\u7684\u540d\u5b57\u662fEdwin\uff0c\u4ee5\u7f8e\u56fd\u6148\u5584\u5bb6Edwin Ginn\u7684\u540d\u5b57\u547d\u540d\uff0c\u4ed6\u6700\u521d\u59d4\u6258\u4e86\u65b0\u4e16\u7eaa\u6559\u79d1\u4e66\u3002\u5bf9\u4e8eEdwin\u5c1a\u4e0d\u652f\u6301\u7684\u8bed\u8a00\uff0c\u6211\u4eec\u5c06\u7ee7\u7eed\u4f7f\u7528\u514d\u8d39Serif\u3002\n\u6211\u4eec\u65b0\u7684\u9ed8\u8ba4\u7b26\u53f7\u5b57\u4f53\u53ef\u80fd\u662fV3.6\u4e2d\u6700\u91cd\u8981\u7684\u53d8\u5316\uff0c\u90a3\u5c31\u662fMuseScore\u7ec8\u4e8e\u6709\u4e86\u81ea\u5df1\u7684\u7b26\u53f7\u5b57\u4f53\uff01\u8fd9\u662f\u6211\u548c\u897f\u8499\u957f\u671f\u5408\u4f5c\u7684\u7ed3\u679c\uff0c\u4e3a\u4e86\u914d\u5408v3.6\u7684\u53d1\u5e03\uff0c\u6211\u5c06\u53d1\u5e03\u4e00\u6bb5\u5173\u4e8e\u5b83\u7684\u89c6\u9891\u3002\u5728\u89c6\u9891\u4e2d\uff0c\u6211\u5c06\u63cf\u8ff0\u6211\u4eec\u7684\u7075\u611f\u662f\u4ece\u54ea\u91cc\u6765\u7684\uff0c\u6211\u4eec\u662f\u5982\u4f55\u521b\u9020\u5b83\u7684\uff0c\u5b83\u7684\u540d\u5b57\u662f\u4ec0\u4e48(\u4efb\u4f55\u731c\u6d4b\u7684\u4eba\u90fd\u4f1a\u5f97\u5230\u8363\u8a89\u79ef\u5206)\u3002\u5bf9\u90a3\u4e9b\u5df2\u7ecf\u77e5\u9053\u7684\u4eba\u4fdd\u6301\u6c89\u9ed8)\u3002\u9664\u4e86\u4e00\u7ec4\u5168\u65b0\u7684\u7b26\u53f7\u5916\uff0c\u6211\u4eec\u8fd8\u82b1\u8d39\u4e86\u5927\u91cf\u65f6\u95f4\u6765\u8c03\u6574\u65e0\u6570\u5fae\u5999\u7684\u95f4\u8ddd\u8bbe\u7f6e\uff0c\u4f7f\u5176\u5c3d\u53ef\u80fd\u5730\u6e05\u6670\u3001\u7f8e\u89c2\u3002\u518d\u52a0\u4e0a\u57c3\u5fb7\u6e29\uff0c\u6211\u4eec\u5bf9\u7ed3\u679c\u975e\u5e38\u6ee1\u610f\uff01\n\u81ea\u52a8\u5782\u76f4\u5bf9\u9f50\u5982\u679c\u6709\u4e00\u4ef6\u4e8b\u53ef\u4ee5\u6700\u6e05\u695a\u5730\u8bc6\u522bMuseScore\u4e2d\u51c6\u5907\u7684\u4e50\u8c31\uff0c\u90a3\u5c31\u662f\u9875\u9762\u5e95\u90e8\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u7a7a\u767d\u95f4\u9699\u3002\u8fd9\u662f\u6211\u4eec\u5728MuseScore.com\u4e0a\u7ecf\u5e38\u770b\u5230\u7684\uff0c\u65e9\u8be5\u4fee\u590d\u4e86\u3002\u57283.6\u4e2d\u521b\u5efa\u7684\u4e50\u8c31\u73b0\u5728\u5c06\u81ea\u52a8\u627e\u5230\u6700\u7f8e\u89c2\u7684\u5782\u76f4\u95f4\u8ddd\uff0c\u4ee5\u9002\u5e94\u60a8\u7684\u97f3\u4e50\u3002\n\u5bf9\u98a4\u97f3\u548c\u6eda\u8f6e\u7684\u6539\u8fdb\u8fd9\u662f\u6211\u4eec\u793e\u533a\u6210\u5458@Howard-C\u5f00\u53d1\u7684\u4e00\u9879\u53d7\u6b22\u8fce\u7684\u96d5\u523b\u6539\u8fdb\u3002\n\u5c06\u9ed8\u8ba4\u8bbe\u7f6e\u5e94\u7528\u4e8e\u8f83\u65e7\u5206\u6570\u7684\u529f\u80fd\u7528\u6237\u53ef\u4ee5\u6253\u5f00\u5728\u8f83\u65e7\u7248\u672c\u7684MuseScore\u4e2d\u521b\u5efa\u7684\u5206\u6570\uff0c\u5e76\u5bf9\u5176\u5e94\u7528\u6240\u6709\u4e0a\u8ff0\u9ed8\u8ba4\u8bbe\u7f6e\u3002\n\u6211\u4eec\u76ee\u524d\u6b63\u5728\u6d4b\u8bd5\u4e0a\u8ff0\u66f4\u6539\uff0c\u60a8\u5e94\u8be5\u4f1a\u572811\u6708\u5e95\u770b\u5230\u53d1\u5e03\u5019\u9009\u7248\u672c\u3002\u6211\u4eec\u5c06\u975e\u5e38\u611f\u8c22\u5bf9\u6211\u4eec\u7684\u65b0\u96d5\u523b\u7684\u53cd\u9988\uff0c\u4ee5\u5e2e\u52a9\u6211\u4eec\u7684\u5b98\u65b9\u53d1\u5e03\uff0c\u5e0c\u671b\u5f88\u5feb\u5c31\u80fd\u51c6\u5907\u597d\u3002\n\u6211\u4eec\u4e3aMuseScore 4\u6240\u505a\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5728\u5e55\u540e\u6539\u8fdb\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u5df2\u7ecf\u5b8c\u5168\u91cd\u65b0\u6784\u5efa\uff0c\u6211\u4eec\u6b63\u5728\u5c06\u6240\u6709\u7684\u7528\u6237\u754c\u9762\u79fb\u690d\u5230QML\u3002\u5f53\u5728MuseScore 3\u4e2d\u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2a\u65b0\u7684\u97f3\u9891\u5f15\u64ce\u548c\u7528\u6237\u754c\u9762\u662f\u591a\u4e48\u7f13\u6162\u548c\u75db\u82e6\u65f6\uff0c\u6211\u4eec\u51b3\u5b9a\u91c7\u53d6\u8fd9\u4e00\u6b65\u9aa4\uff0c\u56e0\u4e3aMuseScore 3\u9664\u4e86\u5176\u4ed6\u95ee\u9898\u5916\uff0c\u8fd8\u5b58\u5728\u7a33\u5b9a\u6027\u95ee\u9898\u3002\u628a\u8fd9\u770b\u4f5c\u662f\u540e\u9000\u4e00\u6b65\uff0c\u4ee5\u4fbf\u5411\u524d\u8fc8\u8fdb\u4e24\u6b65\uff1a\u6709\u5fc5\u8981\u5bf9MuseScore\u7684\u4ee3\u7801\u5e93\u8fdb\u884c\u73b0\u4ee3\u5316\u548c\u5408\u7406\u5316\uff0c\u4ee5\u6781\u5927\u5730\u52a0\u5feb\u6211\u4eec\u672a\u6765\u7684\u53d1\u5c55\u3002\n\u9664\u6b64\u4e4b\u5916\uff0cMuseScore 4\u4e2d\u8fd8\u4f1a\u6709\u5f88\u591a\u65b0\u7684\u4e1c\u897f\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f\u6211\u4eec\u65b0\u7684\u97f3\u9891\u5f15\u64ce\uff0c\u73b0\u5728\u5b83\u5c06\u652f\u6301VST\u3002\u8fd9\u4e00\u529f\u80fd\u7684\u7b2c\u4e00\u4e2a\u5b9e\u73b0\u5c06\u662f\u975e\u5e38\u57fa\u672c\u7684\uff0c\u540e\u7eed\u7248\u672c\u4e2d\u5c06\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u548c\u63a7\u5236(\u5373\u81ea\u52a8\u5316)\u3002\u6211\u4eec\u4e5f\u505a\u4e86\u5f88\u591a\u7528\u6237\u4f53\u9a8c\u65b9\u9762\u7684\u6539\u8fdb\u3002\n\u6211\u4eec\u5df2\u7ecf\u5b8c\u5168\u91cd\u5efa\u4e86\u6211\u4eec\u7684Inspector\uff0c\u5b83\u73b0\u5728\u66f4\u52a0\u5f3a\u5927\u548c\u6613\u4e8e\u4f7f\u7528\u3002\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u4e50\u5668\u9762\u677f\uff0c\u8ba9\u60a8\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u4fee\u6539\u548c\u91cd\u65b0\u6392\u5217\u60a8\u7684\u4e50\u8c31\u4e2d\u7684\u4e50\u5668\u3002\u7279\u522b\u662f\uff0c\u8fd9\u4f7f\u5f97\u96f6\u4ef6\u66f4\u6613\u4e8e\u4f7f\u7528\u548c\u4fee\u6539\u3002\n\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u4e3b\u9875\u9762\u677f\uff0c\u5176\u4e2d\u5c06\u5bb9\u7eb3\u6240\u6709\u7c7b\u578b\u7684\u63d2\u4ef6\u548c\u8d44\u6e90\u3002\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u7248\u672c\uff0c\u8fd9\u5c06\u5305\u62ec\uff1a\n\u4fee\u6539\u540e\u7684\u7b14\u8bb0\u8f93\u5165\u680f\u5305\u542b\u7528\u4e8e\u6dfb\u52a0\u5143\u7ec4\u548c\u5e38\u7528\u53d1\u97f3\u7684\u65b0\u6309\u94ae\uff0c\u8fd9\u5c06\u6709\u52a9\u4e8e\u52a0\u5feb\u5199\u4f5c\u8fc7\u7a0b\u3002\n\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u9009\u9879\u5361\u83dc\u5355\u6765\u5e2e\u52a9\u6211\u4eec\u6574\u7406\u5de5\u4f5c\u7a7a\u95f4\u548c\u5408\u7406\u5e03\u5c40\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5c06\u53d1\u5e03\u529f\u80fd\u8f6c\u79fb\u5230\u4e00\u4e2a\u65b0\u7684\u53d1\u5e03\u9009\u9879\u5361\u4e2d\uff0c\u6211\u4eec\u5c06\u5728\u672a\u6765\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\u3002\n\u4e3a\u4e86\u5c3d\u5feb\u53d1\u5e034.0\u7248\u672c\uff0c\u6211\u4eec\u5c06\u76f4\u63a5\u4eceMuseScore 3\u79fb\u690d\u8bb8\u591a\u8f83\u5c11\u4f7f\u7528\u7684\u754c\u9762\u5143\u7d20\u548c\u5bf9\u8bdd\u6846\u3002\u6211\u4eec\u8ba1\u5212\u5728\u540e\u7eed\u7248\u672c(4.1\u30014.2\u7b49)\u4e2d\u9010\u6b65\u7528\u91cd\u65b0\u8bbe\u8ba1\u7684\u7248\u672c(\u5185\u7f6e\u5728QML\u4e2d)\u53d6\u4ee3\u8fd9\u4e9b\u5143\u7d20\u548c\u5bf9\u8bdd\u6846\u3002\u6211\u4eec\u5c06\u6309\u4f18\u5148\u987a\u5e8f\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\uff0c\u53ef\u80fd\u4f1a\u4ece\u6dfb\u52a0\u548c\u4fee\u6539\u65f6\u95f4\u7b7e\u540d\u7684\u8bbe\u7f6e\u5f00\u59cb(MuseScore\u7684\u4e00\u90e8\u5206\u80af\u5b9a\u9700\u8981\u91cd\u65b0\u8003\u8651)\u3002\n\u4e00\u65e6\u6211\u4eec\u5b8c\u6210\u4e86\u57fa\u7840\u67b6\u6784\u5de5\u4f5c\uff0c\u6211\u4eec\u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u5c31\u662f\u4e0e\u793e\u533a\u66f4\u6709\u6548\u5730\u534f\u4f5c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u5c06\u5f00\u59cb\u63d0\u524d\u516c\u5e03\u6211\u4eec\u7684\u8bbe\u8ba1\u65b9\u6848\uff0c\u5e76\u5076\u5c14\u4e3e\u884c\u89c6\u9891\u7535\u8bdd\u4f1a\u8bae\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\uff1a\n\u5c06\u6211\u4eec\u7684\u957f\u671f\u8ba1\u5212\u544a\u77e5\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u793e\u533a\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u53ef\u4ee5\u81ea\u4fe1\u5730\u8fdb\u884c\u66f4\u6539\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u6f5c\u5728\u7684\u529f\u80fd\u51b2\u7a81\u3002\n\u5728\u529f\u80fd\u4e0a\u66f4\u6709\u6548\u5730\u534f\u4f5c\u3002\u6211\u4eec\u57283.6\u7248\u672c\u4e0a\u6240\u505a\u7684\u5de5\u4f5c\u8868\u660e\uff0c\u8fd9\u79cd\u52aa\u529b\u53ef\u4ee5\u5e26\u6765\u5de8\u5927\u7684\u4ef7\u503c\u3002\n\u6211\u4eec\u8fd8\u5c06\u53d1\u5e03\u4e00\u4e9b\u8bbe\u8ba1\u6307\u5357\u6765\u89e3\u91ca\u65b0\u7ec4\u4ef6\u548c\u5c0f\u90e8\u4ef6\u7684\u7406\u60f3\u529f\u80fd\u3002\n\u6211\u4eec\u5c06\u53d1\u5e03\u6280\u672f\u89e3\u91ca\uff0c\u5e2e\u52a9\u793e\u533a\u6210\u5458\u63a5\u53d74\u3002\n\u6211\u4eec\u8fd8\u5c06\u5f88\u5feb\u5f00\u59cb\u4e3a\u793e\u533a\u6210\u5458\u63d0\u4f9b\u8bbe\u8ba1\u652f\u6301\uff0c\u5e2e\u52a9\u4ed6\u4eec\u89e3\u51b3\u7528\u6237\u4f53\u9a8c\u548c\u7528\u6237\u754c\u9762\u65b9\u9762\u7684\u95ee\u9898\u3002\u6211\u4eec\u6700\u7ec8\u7684\u5e0c\u671b\u662f\uff0cMuseScore\u7684\u672a\u6765\u5c06\u5305\u62ec\u5185\u90e8\u56e2\u961f\u548c\u5f00\u53d1\u8005\u793e\u533a\u4e4b\u95f4\u66f4\u52a0\u7d27\u5bc6\u7684\u5408\u4f5c\u3002\n\u4e00\u65e6MuseScore 4.0\u53d1\u5e03\uff0c\u6211\u4eec\u8ba1\u5212\u4e25\u683c\u6309\u71673\u4e2a\u6708\u7684\u65f6\u95f4\u8868\u53d1\u5e03\u3002\u8fd9\u6837\uff0c\u5982\u679c\u67d0\u4e2a\u7279\u6027\u8fd8\u6ca1\u6709\u4e3a\u7ed9\u5b9a\u7248\u672c\u505a\u597d\u51c6\u5907\uff0c\u603b\u4f1a\u6709\u53e6\u4e00\u5217\u706b\u8f66\u5728\u62d0\u89d2\u5904\u51fa\u73b0\u3002", "note_en": "The &#39;internal&#39; team have been pretty busy over the last few months. There has been a lot going on, some of which I&#39;m not quite able to speak about yet but which is very exciting (watch this space!). However, I&#39;m now in a position to be able to explain in more detail what our plans are for the upcoming releases of MuseScore (3.6 and 4.0) and how we&#39;d like to work with the community in future.\n  To begin, let me discuss our original plans for MuseScore 4 and how they&#39;ve changed. When we started, we had a few key goals:\n   Working with the existing codebase was slowing us down significantly and we battled with instability constantly\n Trying to overhaul our engraving engine while creating a new sequencer - all as part of one gargantuan release - was not a good idea and would take years\n There were plenty of sensible engraving fixes that we felt should not have to wait until the release of MuseScore 4. This was the most commonly expressed view when we announced MuseScore 4.\n  Rearchitect the application from the ground up to vastly increase our development speed in future (more about this in the next part)\n     This version of MuseScore has been created in close collaboration with our developer community, most notably, Niek van den Berg, who has produced an enormous amount of great improvements. This will also be the first release featuring work by our new engraving expert, Simon Smith (@oktophonie). The ambition for  3.6 is to improve MuseScore&#39;s default engraving settings. Here are the most significant changes:\n Automatic instrument ordering From now on, when you add instruments to a score, they will be arranged according to the standard conventions of your chosen genre. From talking to many of our users and studying much of the material on MuseScore.com, it became evident that this was something we needed. It is especially helpful for new users starting out on their compositional journey. This does not prevent you from customising your instrument ordering in any way you want.\n Automatic instrument bracketing This is an important convention that greatly improves the presentation and legibility of scores but is often overlooked by less experienced users. We felt the absence of this default put MuseScore&#39;s output at a disadvantage compared to the default behaviour of other applications. For young students, this is an essential fix. For experienced users - especially teachers - it is a useful time-saver.\n Our new default text font Until now, MuseScore has used the font &#39;Free Serif&#39; (a Times New Roman clone) for titles, lyrics and other text descriptions. Although Free Serif has a very impressive character set, we felt it was time for a significant upgrade, and have introduced a new font based on the classic typeface &#39;New Century Schoolbook&#39;, favoured by publishers like Boosey &amp; Hawkes. The name of our new font is Edwin, named after Edwin Ginn, the American philanthropist who originally commissioned New Century Schoolbook. We will continue to use Free Serif for languages that are not yet supported by Edwin\n Our new default notation font Probably the most significant change in v3.6 is that MuseScore finally has its own notation font! This has been the result of a long collaboration between myself and Simon and I&#39;ll be releasing a video about it to coincide with the release of v3.6. In the video, I will describe where our inspiration came from, how we created it and what it is called (honorary points for anyone who guesses. Hush to those who already know). Apart from an entirely new set of symbols, we have also spent a lot of time tweaking a myriad of subtle spacing settings to make it as legible and beautiful as possible. Combined with Edwin, we are very happy with the result!\n Automatic vertical justification If there is one thing that most clearly identifies sheet music prepared in MuseScore, it is probably the presence of a large empty gap at the bottom of the page. This is something we see on MuseScore.com consistently and it was long overdue for a fix. Scores created in 3.6 will now automatically find the most aesthetically ideal vertical spacing to accommodate your music.\n Improvements to tremolos and buzz rolls This was a welcome engraving improvement developed by our community member, @Howard-C.\n The ability to apply default settings to older scores Users can open scores created in older versions of MuseScore and apply all the above defaults to them.\n We are currently testing the above changes and you should be seeing a release candidate by the end of November. We would greatly appreciate feedback on our new engraving to help us with the official release, which will hopefully be ready soon after.\n   A large part of our work for MuseScore 4 has been on &#39;under the hood&#39; improvements. To that end, our codebase has been completely re-architected and we are porting all our UI to QML. We decided to take this step when it became obvious how slow and painful it would be to try and build a new audio engine and UI interface in MuseScore 3, which, among other things, is plagued with stability issues. Think of this as taking a step back in order to take two forward: it is necessary to modernise and rationalise MuseScore&#39;s codebase to greatly speed up our development in future.\n Apart from that, there will also be a lot of new things in MuseScore 4. The most important of these is our new audio engine, which will now support VST. The first implementation of this will be quite basic, with additional features and controls (namely automation) being added in subsequent releases. We have also made lots of UX improvements too\n We have completely rebuilt our  Inspector, which is now vastly more powerful and easy to use\n We have created a new  Instruments panel which allows you to modify and rearrange instruments in your scores much more easily. In particular, this makes  parts much easier to use and modify\n We have created a new  Home panel which will house all kinds of add ons and resources. For the first release, this will include:\n     A revised  Note Input bar with new buttons for adding tuplets and common articulations, which will help speed up the writing process\n  We have created a tab menu to help us to declutter the workspace and rationalise layout. This has allowed us to move publishing functions into a new  Publish tab, which we will be expanding in the future.\n  In order to get the release of 4.0 out as fast as possible, we will be porting over many of our less used interface elements and dialogs directly from MuseScore 3. The plan is to gradually replace these with redesigned versions (built in QML) in subsequent releases (4.1, 4.2, etc.). We will tackle these in order of priority, probably starting with the settings for adding and modifying time signatures (a part of MuseScore that definitely needs a rethink).\n   Once we have completed the underlying architectural work, one of our major goals is to collaborate more effectively with our community. To this end, we will begin publishing our design plans ahead of time and holding occasional video conference calls. The purpose of doing this is to:\n Inform our community of developers about our long-term plans, so they can confidently work on changes without worrying about potential feature clashes\n Collaborate on features more effectively. Our work on the release of 3.6 has shown us that this kind of effort can bring enormous value\n We will also publish some design guidelines to explain the ideal functionality of new components and widgets\n We will publish technical explanations to help community members come to terms with the new architecture of 4\n We will also soon begin providing design support to community members to help them with UX and UI considerations. Our ultimate hope is that the future of MuseScore will involve much more closely integrated collaboration between the &#39;internal&#39; team and developer community.\n   Once MuseScore 4.0 is out, we are planning on moving to a strict 3 month schedule for releases. This way, if a feature is not ready for a given release, there is always another train just around the corner.", "posttime": "2020-11-05 20:15:50", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "musescore,update", "title": "MuseScore 3.6\u548c4.0\u7684\u66f4\u65b0", "title_en": "Update on MuseScore 3.6 and 4.0", "transed": 1, "url": "https://musescore.org/en/node/312563", "via": "", "real_tags": ["musescore", "update"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033296, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Secure Things\u4e0e\u5b89\u5168\u4e13\u5bb6\u8036\u5229\u7c73\u00b7\u798f\u52d2\u5408\u4f5c\uff0c\u63ed\u9732\u4e86\u4e00\u5bb6\u4e91\u5e94\u7528\u6258\u7ba1\u516c\u53f8\u6cc4\u9732\u76846000\u591a\u4e07\u6761\u5ba2\u6237\u8bb0\u5f55\u3002\u4ee5\u4e0b\u662f\u4ed6\u7684\u8c03\u67e5\u7ed3\u679c\uff1a\n10\u67085\u65e5\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u4e2a\u6ca1\u6709\u5bc6\u7801\u4fdd\u62a4\u7684\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5305\u542b\u5927\u91cf\u76d1\u63a7\u548c\u7cfb\u7edf\u65e5\u5fd7\u3002\u6709\u6307\u793a\u6570\u636e\u5907\u4efd\u3001\u76d1\u89c6\u3001\u9519\u8bef\u8bb0\u5f55\u7b49\u7684\u8bb0\u5f55\u3002\u7ecf\u8fc7\u8fdb\u4e00\u6b65\u7814\u7a76\uff0c\u8be5\u6570\u636e\u5e93\u4f3c\u4e4e\u5c5e\u4e8e\u5fb7\u514b\u8428\u65af\u5dde\u7684\u4e91\u5e94\u7528\u6258\u7ba1\u63d0\u4f9b\u5546Cloud Clusters Inc.\u3002\u6839\u636e\u4ed6\u4eec\u7684\u7f51\u7ad9\uff0c\u4ed6\u4eec\u67094\u4e2a\u6570\u636e\u4e2d\u5fc3\uff0c\u5305\u62ec\uff1a\u4fc4\u52d2\u5188\u5dde\u672c\u5fb7\u3001\u590f\u6d1b\u7279\u3001\u5317\u5361\u7f57\u6765\u7eb3\u5dde\u3001\u79d1\u7f57\u62c9\u591a\u5dde\u4e39\u4f5b\u548c\u5fb7\u514b\u8428\u65af\u5dde\u8fbe\u62c9\u65af\u3002\n\u6211\u7acb\u5373\u5c31\u6211\u7684\u53d1\u73b0\u53d1\u51fa\u4e86\u4e00\u4efd\u8d1f\u8d23\u4efb\u7684\u62ab\u9732\u901a\u77e5\u3002\u5728\u6211\u53d1\u51fa\u901a\u77e5\u540e\u4e0d\u4e45\uff0c\u516c\u4f17\u901a\u9053\u5c31\u53d7\u5230\u4e86\u9650\u5236\u3002\u6ca1\u6709\u4eba\u56de\u590d\u6211\u7684\u7b2c\u4e00\u6761\u6d88\u606f\uff0c\u572810\u670813\u65e5\u7684\u7b2c\u4e8c\u5c01\u540e\u7eed\u7535\u5b50\u90ae\u4ef6\u4e4b\u540e\uff0c\u6211\u6536\u5230\u4e86\u4e00\u5c01\u786e\u8ba4\u6211\u7684\u901a\u77e5\u7684\u4fe1\uff0c\u4e0a\u9762\u5199\u7740\uff1a\u201c\u8c22\u8c22\u4f60\u6307\u51fa\u4e86\u52a0\u5f3a\u7f51\u7ad9\u5b89\u5168\u6027\u7684\u95ee\u9898\u3002\u201d\u6211\u4eec\u4e5f\u975e\u5e38\u91cd\u89c6\u6570\u636e\u5b89\u5168\u3002\u201c\u3002\u76ee\u524d\u5c1a\u4e0d\u6e05\u695aCloud Clusters Inc.\u662f\u5426\u5df2\u5c31\u6b64\u6b21\u66dd\u5149\u901a\u77e5\u4e86\u5ba2\u6237\u6216\u5f53\u5c40\u3002\n\u6211\u770b\u5230\u4e86Magento\u3001WordPress\u8d26\u6237\u548cMySQL\u7684\u7528\u6237/\u5bc6\u7801\u51ed\u8bc1\u3002Magento\u662f\u4e00\u4e2a\u7528\u4e8e\u9500\u552e\u4ea7\u54c1\u6216\u670d\u52a1\u7684\u7535\u5b50\u5546\u52a1\u5e73\u53f0\uff0c\u800cWordPress\u662f\u4e00\u4e2a\u7528PHP\u7f16\u5199\u7684\u7f51\u7ad9\u7ba1\u7406\u7cfb\u7edf\u3002\u767b\u5f55\u8be6\u7ec6\u4fe1\u606f\u7684\u6cc4\u9732\u53ef\u80fd\u4f1a\u4f7f\u8fd9\u4e9b\u8d26\u6237\u548c\u8d2d\u7269\u8005\u9762\u4e34\u98ce\u9669\u3002Cloud Clusters Inc.\u7684\u5ba2\u6237\u53ef\u80fd\u5df2\u7ecf\u6210\u4e3a\u793e\u4ea4\u5de5\u7a0b\u6216\u9c7c\u53c9\u5f0f\u9493\u9c7c\u4f01\u56fe\u7684\u76ee\u6807\uff0c\u4ed6\u4eec\u4f7f\u7528\u6cc4\u9732\u7684\u7535\u5b50\u90ae\u4ef6\u548c\u51ed\u636e\u3002\n\u76ee\u524d\u8fd8\u4e0d\u6e05\u695a\u8fd9\u4e9b\u8bb0\u5f55\u88ab\u66dd\u5149\u7684\u65f6\u95f4\u6709\u591a\u957f\uff0c\u4e5f\u4e0d\u6e05\u695a\u8fd8\u6709\u54ea\u4e9b\u4eba\u53ef\u80fd\u63a5\u89e6\u5230\u4e86\u8fd9\u4e9b\u6570\u636e\u3002\u4f5c\u4e3a\u4e00\u540d\u5b89\u5168\u7814\u7a76\u5458\uff0c\u6211\u4ece\u4e0d\u7ed5\u8fc7\u6216\u7ed5\u8fc7\u53d7\u5bc6\u7801\u4fdd\u62a4\u7684\u8d44\u4ea7\u3002\u8fd9\u4e9b\u8bb0\u5f55\u662f\u516c\u4f17\u53ef\u8bbf\u95ee\u7684\uff0c\u4e0d\u9700\u8981\u9ed1\u5ba2\u6765\u67e5\u770b6370\u4e07\u6761\u8bb0\u5f55\u3002\u5982\u679c\u7f51\u7edc\u7f6a\u72af\u6709\u6743\u83b7\u53d6\u8fd9\u4e9b\u4fe1\u606f\uff0c\u53ef\u80fd\u4f1a\u5371\u53ca\u8fd9\u4e9b\u7f51\u7ad9\u548c\u7535\u5b50\u5546\u52a1\u8d26\u6237\u7684\u5b89\u5168\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\uff0c\u8fd9\u4e9b\u7f51\u7ad9\u7684\u5ba2\u6237\u6216\u8bbf\u95ee\u8005\u9762\u4e34\u7684\u98ce\u9669\u53ea\u662f\u63d0\u9ad8\u4e86\u4eba\u4eec\u5bf9\u4efb\u4f55\u6709\u4e92\u8054\u7f51\u8fde\u63a5\u7684\u4eba\u6240\u63a5\u89e6\u5230\u7684\u5185\u5bb9\u7684\u8ba4\u8bc6\u3002\u5728\u4efb\u4f55\u5b89\u5168\u6f0f\u6d1e\u4e4b\u540e\uff0c\u5e94\u7acb\u5373\u66f4\u6539\u6240\u6709\u7ba1\u7406\u51ed\u636e\uff0c\u5305\u62ec\u76d1\u63a7\u65e5\u5fd7\u4e2d\u6355\u83b7\u7684\u5ba2\u6237\u5bc6\u7801\u6216\u8be6\u7ec6\u4fe1\u606f\u3002\n\u6570\u636e\u5e93\u4e2d\u6709\u8fde\u63a5\u591a\u4e2a\u516c\u53f8\u540d\u79f0\u7684\u8bb0\u5f55\uff0c\u8fd9\u4e9b\u516c\u53f8\u540d\u79f0\u90fd\u5728Cloud Clusters\u4fdd\u62a4\u4f1e\u4e0b\u63d0\u4f9b\u7c7b\u4f3c\u7684\u6570\u636e\u6258\u7ba1\u548c\u7ba1\u7406\u670d\u52a1\u3002\u7531\u4e8e\u8bb0\u5f55\u6570\u91cf\u5e9e\u5927\uff0c\u5f88\u96be\u8bf4\u4ed6\u4eec\u8fd0\u8425\u4e86\u591a\u5c11\u9879\u670d\u52a1\uff0c\u4f46\u6211\u770b\u5230\u7684\u540d\u5b57\u5305\u62ec\u50cfMgtClusters\u3001Hyper-v-Mart\u548cCloudClusters\u7684\u51e0\u4e2a\u53d8\u79cd\u3002\n\u6839\u636e\u4ed6\u4eec\u7684\u7f51\u7ad9\uff1a\u201cCloud Clusters Inc.\u662f\u7531\u5fb7\u514b\u8428\u65af\u5dde\u4e00\u5bb6\u79c1\u4eba\u6301\u80a1\u516c\u53f8Database Mart LLC(DBM)\u7684\u540c\u4e00\u4e2a\u56e2\u961f\u4e8e2017\u5e74\u521b\u7acb\u7684\u3002DBM\u4ece2005\u5e74\u5f00\u59cb\u4e3a\u5168\u7403\u5ba2\u6237\u63d0\u4f9bVPS\u548c\u4e13\u7528\u670d\u52a1\u5668\u6258\u7ba1\u4e1a\u52a1\uff0c\u63d0\u4f9b\u4f18\u8d28\u7684\u5ba2\u6237\u670d\u52a1\u3002Cloud Clusters Inc.\u5728Kubernetes Cloud\u4e0a\u63d0\u4f9b\u5b8c\u5168\u6258\u7ba1\u7684\u5f00\u6e90\u5e94\u7528\u670d\u52a1\u3002\n\u8be5\u6570\u636e\u5e93\u88ab\u8bbe\u7f6e\u4e3a\u5728\u4efb\u4f55\u6d4f\u89c8\u5668(\u53ef\u516c\u5f00\u8bbf\u95ee)\u4e2d\u6253\u5f00\u5e76\u53ef\u89c1\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u5728\u6ca1\u6709\u7ba1\u7406\u51ed\u8bc1\u7684\u60c5\u51b5\u4e0b\u7f16\u8f91\u3001\u4e0b\u8f7d\u751a\u81f3\u5220\u9664\u6570\u636e\u3002\n\u5305\u542b\u76d1\u63a7\u7b49\u5185\u90e8\u4fe1\u606f\u7684\u66b4\u9732\u8bb0\u5f55\uff0c\u4ee5\u53ca\u4ee5\u7eaf\u6587\u672c\u5f62\u5f0f\u66b4\u9732\u7528\u6237\u540d\u3001\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u548c\u591a\u4e2a\u670d\u52a1\u5bc6\u7801\u7684\u65e5\u5fd7\u3002\u5373\uff1aMagento\u3001WordPress\u3001MySQL\u3002\n\u7f51\u7edc\u7f6a\u72af\u53ef\u4ee5\u5229\u7528\u7684IP\u5730\u5740\u3001\u7aef\u53e3\u3001\u8def\u5f84\u548c\u5b58\u50a8\u4fe1\u606f\u6765\u66f4\u6df1\u5165\u5730\u8bbf\u95ee\u7f51\u7edc\u3002\n\u65e5\u5fd7\u76d1\u63a7\u4e0d\u8db3\u662f\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\uff0c\u53ef\u80fd\u4f1a\u66b4\u9732\u654f\u611f\u7684\u5185\u90e8\u6570\u636e\uff0c\u5e76\u4e14\u7ecf\u5e38\u88ab\u5ffd\u89c6\u3002\u5927\u591a\u6570\u516c\u53f8\u90fd\u628a\u91cd\u70b9\u653e\u5728\u6838\u5fc3\u8d44\u4ea7\u7684\u6570\u636e\u4fdd\u62a4\u4e0a\uff0c\u800c\u4ed6\u4eec\u5f80\u5f80\u5fd8\u8bb0\u4e86\u76d1\u63a7\u548c\u8bb0\u5f55\u6570\u636e\u662f\u4e00\u4e2a\u968f\u65f6\u4f1a\u53d1\u751f\u7684\u4e8b\u4ef6\u3002\u65e5\u5fd7\u53ef\u4ee5\u516c\u5f00\u5404\u79cd\u6570\u636e\uff0c\u4f8b\u5982\u767b\u5f55\u3001\u5931\u8d25\u767b\u5f55\u548c\u5176\u4ed6\u5173\u952e\u4e8b\u52a1\u3002\u8fd9\u662f\u8bb8\u591a\u516c\u53f8\u9762\u4e34\u7684\u4e00\u4e2a\u5927\u95ee\u9898\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u751a\u81f3\u53ef\u80fd\u610f\u8bc6\u5230\u81ea\u5df1\u7684\u76d1\u63a7\u6216\u9519\u8bef\u65e5\u5fd7\u7cfb\u7edf\u6b63\u5728\u66b4\u9732\u6570\u636e\uff0c\u76f4\u5230\u4e3a\u65f6\u5df2\u665a\u3002\n\u51e0\u4e4e\u6240\u6709\u7cfb\u7edf\u90fd\u4f1a\u751f\u6210\u67d0\u79cd\u7c7b\u578b\u7684\u65e5\u5fd7\u8bb0\u5f55\uff0c\u8fd9\u662f\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u8fd0\u884c\u5e76\u8bb0\u5f55\u4e8b\u4ef6\u7684\u57fa\u7840\u8bbe\u65bd\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u81f3\u5173\u91cd\u8981\u7684\u662f\uff0c\u5b89\u5168\u6216\u6570\u636e\u4fdd\u62a4\u7b56\u7565\u5e94\u5305\u62ec\u76d1\u63a7\u548c\u5ba1\u67e5\u6765\u81ea\u8fd9\u4e9b\u65e5\u5fd7\u7684\u6d88\u606f\u7684\u8ba1\u5212\u3002\u8fd9\u6837\uff0c\u5982\u679c\u65e5\u5fd7\u66b4\u9732\u4e86\u654f\u611f\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u91c7\u53d6\u63aa\u65bd\u5c06\u65e5\u5fd7\u89c6\u4e3a\u9ad8\u98ce\u9669\u8d44\u4ea7\u3002\n\u6570\u636e\u6cc4\u9732\u6216\u5b89\u5168\u4e8b\u4ef6\u5bf9\u4efb\u4f55\u516c\u53f8\u6216\u7ec4\u7ec7\u6765\u8bf4\u90fd\u662f\u5669\u68a6\uff0c\u4f46\u5982\u679c\u4f60\u662f\u4e00\u5bb6\u63d0\u4f9b\u6570\u636e\u6258\u7ba1\u670d\u52a1\u7684\u516c\u53f8\uff0c\u60c5\u51b5\u5c31\u66f4\u7cdf\u4e86\u3002\u5f53\u6d89\u53ca\u5230\u6570\u636e\u4fdd\u62a4\u65f6\uff0c\u5ba2\u6237\u548c\u5ba2\u6237\u53ea\u80fd\u91c7\u53d6\u8fd9\u4e48\u591a\u9884\u9632\u63aa\u65bd\uff0c\u6700\u7ec8\u5fc5\u987b\u5bf9\u4ed6\u4eec\u7684\u6570\u636e\u5b58\u50a8\u63d0\u4f9b\u5546\u6709\u4fe1\u5fc3\u3002\u7f51\u7edc\u7f6a\u72af\u5728\u9488\u5bf9\u8eab\u4efd\u76d7\u7a83\u3001\u6076\u610f\u8f6f\u4ef6\u6216\u7f51\u7edc\u9493\u9c7c\u6d3b\u52a8\u7684\u53d7\u5bb3\u8005\u65b9\u9762\u6b63\u53d8\u5f97\u8d8a\u6765\u8d8a\u6709\u521b\u610f\u3002\u516c\u53f8\u5fc5\u987b\u91c7\u53d6\u66f4\u591a\u63aa\u65bd\u4fdd\u62a4\u7528\u6237\u514d\u53d7\u7f51\u7edc\u5a01\u80c1\uff0c\u5e76\u4f7f\u7528\u4e00\u5207\u5fc5\u8981\u7684\u5de5\u5177\u6765\u63d0\u4f9b\u6700\u597d\u7684\u5728\u7ebf\u9690\u79c1\u3002\u8fd9\u5305\u62ec\u4fdd\u62a4\u53ef\u80fd\u66b4\u9732\u654f\u611f\u6570\u636e\u7684\u65e5\u5fd7\u8bb0\u5f55\u548c\u76d1\u63a7\u8bb0\u5f55\u3002", "note_en": "Secure Thoughts collaborated with Security Expert Jeremiah Fowler to expose\u00a0a massive leak of over 60 million customer records by a Cloud Application Hosting company.\u00a0Here are his findings:\n  On October 5th I discovered a non-password protected database that contained a large amount of monitoring and system logs. There were records indicating data backups, monitoring, error logging, and more. Upon further research, the database appeared to belong to the Texas-based cloud application hosting provider, Cloud Clusters Inc. According to their website, they have 4 data center locations that include: Bend, Oregon, Charlotte, North Carolina, Denver, Colorado, and Dallas, Texas.\n  I immediately sent a responsible disclosure notice of my findings. Public access was restricted shortly after my notice. No one replied to my first messages and after a second follow-up email on October 13th I received an acknowledgment of my notification that said  \u201cThanks for pointing out the problems to enhance website security. We also take data security very seriously.\u201d  It is unclear if Cloud Clusters Inc had notified customers or authorities regarding the exposure.\n    I saw user/password credentials for Magento, WordPress accounts, and MySql.\u00a0 Magento is an eCommerce platform used to sell products or services and WordPress is a website management system written in PHP.  An exposure of login details could have potentially put these accounts and shoppers at risk. Cloud Clusters Inc\u2019s customers  could have been targeted by social engineering or spear phishing attempts using the exposed emails and credentials.\n  It is unclear how long these records were exposed or who else may have had access to this data. As a security researcher, I never circumvent or bypass password protected assets. These records were publically accessible and no hacking necessary to see 63.7 million records. If a cybercriminal had access to this information it could potentially compromise those sites and eCommerce accounts. I am not implying that customers or visitors to these sites were at risk only raising awareness of what was exposed to anyone with an internet connection. After any  security breach, all administrative credentials should be changed immediately including customer passwords or details that were captured in monitoring logs.\n  There were records in the database connecting multiple company names that all provide similar data hosting and management services under the Cloud Clusters umbrella. With the massive amount of records, it was hard to tell just how many services they operate, but the names I saw included names such as Mgtclusters, Hyper-v-mart, and several variants of Cloudclusters.\n  According to their website:  \u201cCloud Clusters Inc was founded in 2017 by the same team from Database Mart LLC (DBM), a privately held company in Texas. DBM provides VPS, and dedicated server hosting business to global clients from 2005 with superb customer services. Cloud Clusters Inc provides fully managed open-source application services on Kubernetes cloud\u201d.\n    The database was set to open and visible in any browser (publicly accessible) and anyone could edit, download, or even delete data without administrative credentials.\n  Exposed records that contain internal information such as monitoring, and logs that exposed usernames, user email addresses, and multiple service passwords in plain text. IE: Magento, WordPress, MySQL\n          IP addresses, Ports, Pathways, and storage info that cybercriminals could exploit to access deeper into the network.\n      Insufficient log monitoring is a major issue that can expose sensitive internal data and is often overlooked. Most companies focus on data protection of their core assets and they often forget that monitoring and log data is an incident waiting to happen. Logs can expose a wide range of data such as logins, failed logins, and other critical transactions. This is a big problem that many companies face and in most cases they may not even realize their monitoring or error log systems are exposing data until it\u2019s too late.\n  Nearly all systems generate some type of logging and it is an important part of the infrastructure to ensure that everything is functioning properly and to keep a record of events. It is crucial that the security or data protection policies include a plan to monitor and review messages coming from those logs.  This way if the logs are exposing sensitive data steps can be taken to treat the logs as a high-risk asset.\n  Having a data breach or security incident is a nightmare for any company or organization, but it is even worse if you are a company that provides data hosting services. Clients and customers can only take so many precautions when it comes to data protection and ultimately have to have faith in their data storage provider. Cybercriminals are becoming more creative in how they target victims for  identity theft, malware, or phishing campaigns. Companies must do more to protect their users from online threats and use the every tool necessary to provide the best  online privacy. This includes securing logging and monitoring records that can expose sensitive data.", "posttime": "2020-11-05 20:15:35", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5305\u62ec,provider,\u8bb0\u5f55", "title": "\u4e3b\u673a\u63d0\u4f9b\u5546\u6cc4\u9732\u4e866300\u4e07\u6761\u8bb0\u5f55\uff0c\u5305\u62ecMagento\u548cWordPress\u51ed\u636e", "title_en": "Hosting Provider Leaked 63M Records Including Magento and WordPress Credentials", "transed": 1, "url": "https://securethoughts.com/hosting-provider-exposed-63-million-customer-records/", "via": "", "real_tags": ["\u5305\u62ec", "provider", "\u8bb0\u5f55"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1033295, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "TL\uff1bDR\uff1a\u4f7f\u7528Netpbm\u6587\u4ef6\u683c\u5f0f\uff0c\u53ea\u4f7f\u7528\u57fa\u4e8e\u6587\u672c\u7684IO\u8f93\u51fa\u50cf\u7d20\u662f\u5fae\u4e0d\u8db3\u9053\u7684\u3002\n\u4e3a\u4e86\u8868\u660e\u6211\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u4e0b\u9762\u662f\u4e00\u5f20\u56fe\u7247\uff1a\n#\uff01/bin/bashexec&gt\uff1bmy_Image.ppm#\u6240\u6709ECHO\u8bed\u53e5\u90fd\u5c06\u5728\u6b64\u5904\u5199\u5165ECHO&#34\uff1bP3 250 250 255&#34\uff1b#Magic\uff0cWidth\uff0cHeight\uff0cMax Component Value for((y=0\uff1by&lt\uff1b250\uff1by++)){for((x=0\uff1bx&lt\uff1b250\uff1bx++)){ECHO&#34\uff1b$((x^y))$((x^y)$((x|y))\u3002\n\u5c31\u8fd9\u6837\u3002\u8fd9\u5c31\u662f\u751f\u6210\u53ef\u88abGIMP\u3001ImageMagick\u548cNetpbm\u7b49\u5e38\u7528\u5de5\u5177\u8bfb\u53d6\u7684\u56fe\u50cf\u6240\u9700\u7684\u5168\u90e8\u5185\u5bb9\u3002\n\u4e3a\u4e86\u5012\u56de\u7247\u523b\uff0c\u6709\u65f6\u8f93\u51fa\u56fe\u50cf\u4ee5\u8fdb\u884c2D\u7b97\u6cd5\u7684\u6253\u5370\u8c03\u8bd5\u3001\u53ef\u89c6\u5316\u6570\u636e\uff0c\u6216\u8005\u4ec5\u4ec5\u662f\u56e0\u4e3a\u60a8\u6709\u4e00\u4e9b\u60f3\u8981\u653e\u5728\u5c4f\u5e55\u4e0a\u7684\u8fc7\u7a0b\u6027\u50cf\u7d20\uff0c\u8fd9\u662f\u5f88\u6709\u7528\u7684\u3002\n\u7136\u800c--\u81f3\u5c11\u5982\u679c\u4f60\u6ca1\u6709\u770b\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50--\u5f00\u59cb\u8f93\u51fa\u56fe\u5f62\u7684\u95e8\u69db\u53ef\u80fd\u770b\u8d77\u6765\u76f8\u5f53\u9ad8\u3002\u5373\u4f7f\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\u5e93\uff0c\u8fd9\u4e5f\u662f\u9700\u8981\u8bbe\u7f6e\u548c\u89e3\u51b3\u7684\u53e6\u4e00\u4ef6\u4e8b\u3002\u8fd9\u5728\u8c03\u8bd5\u671f\u95f4\u5c24\u5176\u70e6\u4eba\uff0c\u56e0\u4e3a\u60a8\u77e5\u9053\u8981\u5728\u4e00\u5c0f\u65f6\u5185\u5c06\u5176\u5220\u9664\u3002\n\u5e78\u8fd0\u7684\u662f\uff0cNetpbm\u5de5\u5177\u5957\u4ef6\u5f00\u53d1\u4e86\u4e00\u4e2a\u975e\u5e38\u7075\u6d3b\u7684\u89e3\u51b3\u65b9\u6848\uff1a\u4e00\u7ec4\u7528\u4e8e\u5168\u8272\u4fbf\u643a\u5f0fPixMaps(PPM)\u3001\u4fbf\u643a\u5f0f\u7070\u5ea6\u5730\u56fe(PGM)\u548c\u5355\u8272\u4fbf\u643a\u5f0f\u4f4d\u56fe(PBM)\u7684\u6700\u4f4e\u516c\u5206\u6bcd\u6587\u4ef6\u683c\u5f0f\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u7684\u57fa\u672c\u6587\u672cIO\u7f16\u5199\u4e3a\u7eafASCII\u6587\u672c\u3002\n\u4e0a\u9762\u7684bash\u811a\u672c\u5df2\u7ecf\u8db3\u591f\u5165\u95e8\u4e86\uff0c\u4f46\u662f\u53ef\u4ee5\u5728\u5b89\u88c5\u4e86Netpbm\u7684\u7cfb\u7edf\u4e0a\u7684man ppm\u3001man pgm\u548cman pbm\u4e2d\u627e\u5230\u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u63cf\u8ff0\u548c\u793a\u4f8b\u3002\n\u6bcf\u4e2a\u624b\u518c\u9875\u90fd\u63cf\u8ff0\u4e86\u7b80\u5355\u6587\u4ef6\u683c\u5f0f\u7684\u4e24\u4e2a\u7248\u672c\uff1a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u548c\u4e00\u4e2aASCII\u6587\u4ef6\u683c\u5f0f\u3002\u4e24\u8005\u90fd\u5f88\u5bb9\u6613\u5b9e\u73b0\uff0c\u5c3d\u7ba1ASCII\u4ee3\u7801\u662f\u6211\u7684\u6700\u7231\uff0c\u56e0\u4e3a\u5b83\u975e\u5e38\u7b80\u5355\uff0c\u4f60\u53ef\u4ee5\u5728\u8bb0\u4e8b\u672c\u4e0a\u624b\u5199\u5b83\u4eec\u3002\n\u8981\u5c06\u5b83\u4eec\u8f6c\u6362\u4e3a\u66f4\u5e38\u89c1\u7684\u6587\u4ef6\u683c\u5f0f(\u5728GIMP\u4e2d\u6253\u5f00\u5e76\u5bfc\u51fa)\uff0c\u8bf7\u4f7f\u7528ImageMagick Convert my_file.ppm my_file.png\u6216NetPBM pnmtopng&lt\uff1bmy_file.ppm&gt\uff1bmy_file.png\u3002\n\u5982\u679c\u60a8\u5e0c\u671b\u4f7f\u7528\u8fd9\u79cd\u7b80\u5355\u7684ASCII\u683c\u5f0f\u8f93\u5165\u56fe\u50cf\uff0cNetPBM\u5de5\u5177pnmtoPlapnm\u4f1a\u5c06\u4e8c\u8fdb\u5236ppm/pgm/pbm(\u5305\u62ecNetpbm\u7684anytopnm)\u8f6c\u6362\u4e3aASCII ppm/pgm/pbm\u3002\n\u5982\u679c\u60a8\u7684\u76ee\u6807\u662f\u5c1d\u8bd5\u4efb\u4f55\u7c7b\u578b\u7684\u56fe\u50cf\u5904\u7406\u7b97\u6cd5\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5728stdin/stdout\u4e0a\u8bfb/\u5199ppm\u6765\u8f7b\u677e\u5730\u5d4c\u5165Netpbm\u51fa\u8272\u7684Unix-y\u5de5\u5177\u96c6\uff1a\nCurl http://example.com/input.png|pngtopnm|ppmbright-v+10|\u60a8\u7684\u5de5\u5177\u5728\u6b64\u5904|pnmscale 2|pnmtopng&gt\uff1boutput.png", "note_en": "tl;dr: With the Netpbm file formats, it\u2019s trivial to output pixels using nothing but text based IO\n To show that there\u2019s nothing up my sleeves, here\u2019s an image:\n    #!/bin/bashexec &gt; my_image.ppm # All echo statements will write hereecho &#34;P3 250 250 255&#34; # magic, width, height, max component valuefor ((y=0; y&lt;250; y++)) { for ((x=0; x&lt;250; x++)) { echo &#34;$((x^y)) $((x^y)) $((x|y))&#34; # r, g, b }}\n That\u2019s it. That\u2019s all you need to generate an image that can be read by common tools like GIMP, ImageMagick and Netpbm.\n To rewind for a second, it\u2019s sometimes useful to output an image to do  printf debugging of 2D algorithms, to visualize data, or simply because you have some procedural pixels you want to put on screen.\n However \u2014 at least if you hadn\u2019t seen the above example \u2014 the threshold to start outputting graphics could seem rather high. Even with a  single file library, that\u2019s one more thing to set up and figure out. This is especially annoying during debugging, when you know you\u2019re going to delete it within the hour.\n Fortunately, the  Netpbm suite of tools have developed an amazingly flexible solution: a set of lowest common denominator file formats for full color Portable PixMaps (PPM), Portable GrayMaps (PGM), and monochrome Portable BitMaps (PBM), that can all be written as plain ASCII text using any language\u2019s basic text IO.\n  The above bash script is more than enough to get started, but a detailed description of the file format with examples can be found in   man ppm,   man pgm, and   man pbm on a system with Netpbm installed.\n Each man page describes two version of a simple file format: one binary and one ASCII. Either is completely trivial to implement, though the ASCII ones are my favorite for being so ridiculously barebones that you can write them by hand in Notepad.\n To convert them to more common file formats, either open and export in GIMP, use ImageMagick  convert my_file.ppm my_file.png, or NetPBM  pnmtopng &lt; my_file.ppm &gt; my_file.png\n Should you wish to input images using this trivial ASCII format, the NetPBM tool  pnmtoplainpnm will convert a binary ppm/pgm/pbm (as produced by any tool including Netpbm\u2019s  anytopnm) into an ASCII ppm/pgm/pbm.\n If your goal is to experiment with any kind of image processing algorithm, you can easily slot into Netpbm\u2019s wonderfully Unix-y set of tools by reading/writing PPM on stdin/stdout:\n curl http://example.com/input.png | pngtopnm | ppmbrighten -v +10 | yourtoolhere | pnmscale 2 | pnmtopng &gt; output.png", "posttime": "2020-11-05 20:15:24", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u96f6\u5e93,printf,netpbm", "title": "ECHO/printf\u4f7f\u7528\u96f6\u5e93\u6216\u96f6\u5934\u4ee55 LoC\u683c\u5f0f\u5199\u5165\u56fe\u50cfnetpbm", "title_en": "Echo/printf to write images in 5 LoC with zero libraries or headersnetpbm", "transed": 1, "url": "https://www.vidarholen.net/contents/blog/?p=904", "via": "", "real_tags": ["\u96f6\u5e93", "printf", "netpbm"]}, {"category": "", "categoryclass": "", "imagename": "160edc7d110ea037cb8327d975668adb.png", "infoid": 1033294, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u767b\u8bb0\u5165\u4f4f", "note_en": "Sign in", "posttime": "2020-11-05 20:15:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u5a92\u4f53,media,\u767b\u8bb0", "title": "\u793e\u4ea4\u5a92\u4f53\u4f7f\u7528\u4e0e\u7f8e\u56fd\u6291\u90c1\u75c7\u72b6\u6c34\u5e73[pdf]", "title_en": "Social Media Usage and the Level of Depressive Symptoms in the US [pdf]", "transed": 1, "url": "https://drive.google.com/file/d/1x8icCMCMWcBS2H2mc48bQgm-ZfkQwTEQ/view", "via": "", "real_tags": ["\u7f8e\u56fd", "\u5a92\u4f53", "media", "\u767b\u8bb0"]}]
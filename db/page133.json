[{"category": "", "categoryclass": "", "imagename": "7cd66533883de31cbd06515f596cbc86.png", "infoid": 1069440, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8be5\u9879\u76ee\u7684\u76ee\u7684\u662f\u5f00\u53d1 EATX \u5916\u5f62\u7684\u5f00\u6e90 Amiga 2000 PCB\u3002\u4ec0\u4e48\u662fEATX\uff1f\u5b83\u662f\u4e00\u79cd ATX \u53d8\u4f53\uff0c\u5141\u8bb8\u4f7f\u7528\u66f4\u6df1\u7684 PCB\uff0c\u5c3a\u5bf8\u4e3a 12 x 13 \u82f1\u5bf8\uff08305 x 330 \u6beb\u7c73\uff09\u3002\u8fd9\u4e9b\u88ab\u79f0\u4e3a\u6269\u5c55 ATX \u6216 EATX\uff08\u8bf7\u53c2\u9605\u4f01\u4e1a\u7535\u5b50\u8bbe\u5907\u6258\u67b6\u89c4\u8303\uff09\u3002 Zorro II \u5361\u7684\u957f\u5ea6\u548c Amiga 2000 \u4e0a\u7684\u4e30\u5bcc\u7ec4\u4ef6\u4f7f EATX \u6210\u4e3a\u8be5\u9879\u76ee\u7684\u6700\u4f73\u9009\u62e9\u3002 Amiga 2000 \u6709\u4e00\u5bf9\u4e00\u7684\u7535\u8def\u677f\u66f4\u6362\u9879\u76ee\uff0c\u4f46\u90fd\u6ca1\u6709\u6539\u53d8\u5e03\u5c40\u4ee5\u6ee1\u8db3\u5f53\u524d\u7684\u5916\u5f62\u6807\u51c6\u3002\u6b64\u5916\uff0cAmiga 2000 \u4f7f\u7528\u4e86\u4e0d\u518d\u5546\u4e1a\u5236\u9020\u7684\u8fde\u63a5\u5668\u548c\u5b9a\u5236\u90e8\u4ef6\u3002\u8fd9\u901a\u5e38\u9700\u8981\u4ece\u73b0\u6709\u673a\u5668\u4e2d\u53d6\u51fa\u96f6\u4ef6\u3002\u56e0\u6b64\uff0c\u8be5\u9879\u76ee\u5c06\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u4ec5\u4f7f\u7528\u4e3b\u52a8\u652f\u6301\u7684\u7ec4\u4ef6\u3002\u9664\u4e86\u65b0\u7684\u4e3b\u677f\u66f4\u6362\u9009\u9879\u5916\uff0c\u6211\u76f8\u4fe1\u65e0\u5904\u4e0d\u5728\u7684 EATX \u6807\u51c6\u5c06\u4e3a Amiga \u4f5c\u4e3a\u7231\u597d\u8005\u548c\u590d\u53e4\u8ba1\u7b97\u9009\u9879\u5e26\u6765\u989d\u5916\u7684\u5174\u8da3\u3002\u5728\u64b0\u5199\u672c\u6587\u65f6\uff0cAmiga \u64cd\u4f5c\u7cfb\u7edf\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u548c\u652f\u6301\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u5927\u91cf\u73b0\u6709\u8f6f\u4ef6\u548c\u786c\u4ef6\u9644\u52a0\u9009\u9879\u7684\u6570\u636e\u5e93\u548c\u4e00\u4e2a\u975e\u5e38\u6d3b\u8dc3\u7684\u793e\u533a\u3002\u6211\u76ee\u524d\u6b63\u5728 Amiga 2000 EATX \u4e0a\u8fd0\u884c Supra Wordsync SCSI \u5361\u3001Commodore A2630 \u52a0\u901f\u5668\u548c Pi HDMI \u89c6\u9891\u5361\u3002\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u770b\u5230 AIBB\u3002\u6211\u8ba9 Amiga 2000 EATX \u8fd0\u884c\u51e0\u4e2a\u5c0f\u65f6\u73a9\u6e38\u620f\u548c\u8fd0\u884c\u5185\u5b58\u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\u3002\u6240\u6709\u5916\u90e8\u7aef\u53e3\u90fd\u6309\u9884\u671f\u5de5\u4f5c\u3002\u5c06 Amiga 2000 Rev 6.2 \u539f\u7406\u56fe\u8f93\u5165 KiCad\uff0c\u5305\u62ec\u6240\u6709\u5df2\u77e5\u7684 A2000 Rev 6.x PCB \u66f4\u65b0\u3002\u67e5\u770b\u6b64\u4fe1\u606f\u4ee5\u786e\u4fdd\u5728\u7ec4\u88c5 Amiga 2000 EATX \u7cfb\u7edf\u65f6\u83b7\u5f97\u987a\u7545\u548c\u6109\u5feb\u7684\u4f53\u9a8c\u3002\u5b83\u5c06\u56de\u7b54\u8bb8\u591a\u95ee\u9898\uff0c\u5e76\u544a\u77e5\u60a8 Amiga 2000 EATX PCB\u3001\u5404\u79cd Amiga \u63d2\u4ef6\u5361\u7b49\u7684\u7269\u7406\u8981\u6c42\u3002DB23 \u89c6\u9891\u8fde\u63a5\u5668\u5df2\u88ab\u79fb\u9664\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f HD15 \u8fde\u63a5\u5668\u3002\u8be5\u9879\u76ee\u7684\u76ee\u6807\u4e4b\u4e00\u662f\u907f\u514d\u4f7f\u7528\u975e\u5e02\u552e\u90e8\u4ef6\u3002 D-Sub 23 \u8fde\u63a5\u5668\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u3002\u5b83\u4eec\u4e0d\u5728\u6d41\u884c\u7684\u7535\u5b50\u4f9b\u5e94\u5546\u5904\u5907\u8d27\u3002\u56e0\u6b64\uff0c\u66f4\u6539\u4e3a\u5e7f\u6cdb\u4f7f\u7528\u7684 HD15 \u8fde\u63a5\u5668\u3002\u6a21\u62df\u7ea2\u8272\u3001\u7eff\u8272\u3001\u84dd\u8272\u3001HSYNC \u6216 COMPSYNC\uff08\u8df3\u7ebf\u53ef\u9009\uff09\u548c VSYNC \u4f7f\u7528 VGA \u6807\u51c6\u5f15\u811a\u8f93\u51fa\u914d\u7f6e\u63d0\u4f9b\u3002\u4e0d\u63d0\u4f9b\u5176\u4ed6\u5916\u90e8\u89c6\u9891\u7aef\u53e3\u4fe1\u53f7\u3002\u4efb\u4f55 VGA \u7535\u7f06\u90fd\u53ef\u7528\u4e8e\u5411\u652f\u6301 15KHz \u6807\u51c6\u7684 VGA \u663e\u793a\u5668\u6216\u8f6c\u6362\u76d2\u63d0\u4f9b\u89c6\u9891\u4fe1\u53f7\u3002\n\u539f\u6765\u7684 256Kx4 DRAM \u5df2\u88ab\u5355\u4e2a SRAM \u53d6\u4ee3\u3002 2000 EATX \u6c38\u4e45\u914d\u7f6e\u4e3a\u8bc6\u522b 1MB \u82af\u7247 ram \u5e76\u9700\u8981 Fatter Agnus (MOS 8372A)\u3002\u76ee\u524d\u4e0d\u652f\u6301\u5176\u4ed6 Agnus \u4fee\u8ba2\u7248\u3002 Amiga \u7684\u5de6/\u53f3 RCA \u63d2\u5b54\u5df2\u88ab 3.5 \u6beb\u7c73\u7acb\u4f53\u58f0\u97f3\u9891\u63d2\u5b54\u53d6\u4ee3\u3002\u5728\u5185\u90e8\uff0c\u652f\u6301\u4efb\u4f55 Amiga \u517c\u5bb9\u53cc\u5bc6\u5ea6\u78c1\u76d8\u9a71\u52a8\u5668\u6216\u6b63\u786e\u914d\u7f6e\u7684 Gotek \u8f6f\u76d8\u6a21\u62df\u5668\u3002\u6700\u591a\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5185\u90e8\u78c1\u76d8\u9a71\u52a8\u5668\u8fde\u63a5\u5230\u5185\u90e8\u8f6f\u76d8\u8fde\u63a5\u5668\u3002\u5916\u90e8\u78c1\u76d8\u9a71\u52a8\u5668\u7aef\u53e3\u5df2\u88ab\u79fb\u9664\u3002 16 \u4f4d ISA \u63d2\u69fd\u7684\u6570\u91cf\u5df2\u51cf\u5c11\u5230\u4e09\u4e2a\u3002\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u5728\u677f\u4e0a\u63d0\u4f9b\u989d\u5916\u7684\u7a7a\u95f4\u3002\u4e0e Amiga 2000 \u76f8\u6bd4\uff0c\u901a\u8fc7 Bridgeboard \u5bf9 ISA \u5361\u7684\u652f\u6301\u6ca1\u6709\u53d8\u5316\u3002\u5185\u90e8\uff08\u5730\u72f1\uff09\u4e32\u884c\u7aef\u53e3\u5df2\u88ab\u5220\u9664\u3002\u5916\u90e8\u4e32\u884c\u7aef\u53e3\u4e0e\u6240\u6709\u4fe1\u53f7\u4e00\u8d77\u5b58\u5728\u3002\u51fa\u4e8e\u663e\u800c\u6613\u89c1\u7684\u539f\u56e0\uff0c\u6709\u5fc5\u8981\u76f8\u5bf9\u4e8e\u5f7c\u6b64\u79fb\u52a8\u7ec4\u4ef6\u3002 Zorro \u63d2\u69fd\u5360\u636e\u63d2\u69fd\u4f4d\u7f6e 1-5\uff0c\u4e0e\u524d 3 \u4e2a\u4f4d\u7f6e\u7684 ISA \u63d2\u69fd\u91cd\u53e0\u3002\u89c6\u9891\u69fd\u4f4d\u5728\u677f\u5361\u7684\u7b2c\u516d\u69fd\u4f4d\u3002 CPU \u63d2\u69fd\u5360\u636e\u4f4d\u7f6e 7\u3002\u53ef\u4ee5\u540c\u65f6\u586b\u5145\u6bcf\u4e2a\u63d2\u69fd\u4f4d\u7f6e\u3002\u652f\u6301 ATX 24 \u9488\u7535\u6e90\uff0c-5V \u901a\u8fc7\u7535\u538b\u8c03\u8282\u5668\u5728\u677f\u4e0a\u4f9b\u7535\u3002\u4e0d\u652f\u6301\u539f\u88c5 Amiga 2000 \u7535\u6e90\u3002\n\u53ef\u4ee5\u901a\u8fc7 Amiga \u952e\u76d8\u4e0a\u7684 CTRL-Amiga-Amiga \u6216\u901a\u8fc7 EATX \u8ba1\u7b97\u673a\u673a\u7bb1\u4e0a\u7684\u91cd\u7f6e\u5f00\u5173\u91cd\u7f6e\u8ba1\u7b97\u673a\u3002\u5b9e\u65f6\u65f6\u949f (RTC) \u5df2\u66f4\u6539\u4e3a RTC-62423\u3002\u8be5 RTC \u5185\u7f6e\u6676\u4f53\uff0c\u65e0\u9700\u8c03\u6574\u3002\u5728Amiga\u4e2d\uff0cRTC\u75314\u6761\u5730\u5740\u7ebf\u548c4\u6761\u6570\u636e\u7ebf\u8bfb\u5199\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u79cd\u603b\u7ebf\u8fde\u63a5\u7684 RTC \u6ca1\u6709\u76f4\u63a5\u7684\u201c\u73b0\u4ee3\u201d\u66ff\u4ee3\u54c1\u3002\u56e0\u6b64\uff0c\u8fd9\u662f\u5fc5\u987b\u83b7\u5f97\u7684\u4f20\u7edf IC \u4e4b\u4e00\u3002\u5b83\u5f88\u5bb9\u6613\u5728\u51fa\u552e\u8fd9\u4e9b\u7c7b\u578b\u7684\u4f20\u7edf IC \u7684\u5730\u65b9\u4e70\u5230\u3002\u952e\u76d8\u3001\u64cd\u7eb5\u6746\u3001\u9f20\u6807\u3001\u5e76\u884c\u548c\u4e32\u884c\u7aef\u53e3\u90fd\u5b58\u5728\u5e76\u4e14\u529f\u80fd\u4e0e\u5b83\u4eec\u5728 Amiga 2000 \u4e2d\u4e00\u6837\u3002\u5e76\u884c\u3001\u4e32\u884c\u3001\u9f20\u6807\u548c\u64cd\u7eb5\u6746\u7aef\u53e3\u5206\u522b\u662f\u5806\u53e0\u7684 DB9 \u548c DB25 \u8fde\u63a5\u5668\u3002 Amiga \u952e\u76d8\u7aef\u53e3\u4ecd\u7136\u662f DIN5 \u8fde\u63a5\u5668\u3002\u76ee\u524d\uff0cKickstart ROM \u4ecd\u7136\u662f\u539f\u59cb\u7684 27C400\u3002\u8fd9\u4e9b\u4e0d\u518d\u5236\u9020\uff0c\u4f46\u5f88\u5bb9\u6613\u627e\u5230\u3002\u6b64\u5916\uff0c\u8fd9\u5141\u8bb8\u4f7f\u7528\u539f\u59cb Commodore Kickstart \u63a9\u7801 ROM\u3002\u4fee\u8ba2\u7248 1.2 \u4e3a\u81ea\u5b9a\u4e49 Kickstart ROM \u6dfb\u52a0\u4e86\u5bf9 1MB (27C800) \u548c 2MB (27C160) EPROM \u7684\u652f\u6301\u3002\u5982\u679c\u6ca1\u6709\u7279\u522b\u63d0\u53ca\u67d0\u4e9b\u5185\u5bb9\uff0c\u60a8\u5e94\u8be5\u671f\u671b\u5b83\u5728\u529f\u80fd\u6216\u7ec4\u4ef6\u4e0a\u4e0e\u539f\u59cb A2000 \u76f8\u540c\u3002 kr239 - \u7528\u4e8e Amiga 500 DRAM \u66f4\u6362\u9879\u76ee\u7684\u7075\u611f\u4ee5\u53ca\u7528\u4e8e\u8be5\u9879\u76ee\u4e2d\u4f7f\u7528\u7684\u4fee\u6539\u7684 LIV2 \u548c texneus DarrenHD - Amiga 3000 \u89c6\u9891\u63d2\u69fd\u652f\u67b6\u9002\u914d\u5668\u7684\u56fe\u7247\u548c\u6d4b\u91cf\u503c - https://eab.abime.net/showthread.php?t =106928", "note_en": "The purpose of this project is to develop an open source Amiga 2000 PCB in the EATX form factor. What is EATX? It is an ATX variant that allows slightly deeper PCBs, measuring 12 x 13 inches (305 \u00d7 330 mm). These are referred to as Extended ATX, or, EATX (see  Enterprise Electronics Bay Specification). The length of Zorro II cards and the abundance of components on the Amiga 2000 makes EATX the best choice for this project.\n There are one-to-one board replacement projects for the Amiga 2000, but none to change the layout to meet current form factor standards. In addition, the Amiga 2000 made use of connectors and custom parts that are no longer commercially manufactured. This often requires parts to be pulled from existing machines. As such, this project will make use of only actively supported components when possible.\n In addition to a new board replacement option, I believe the ubiquitous EATX standard will bring additional interest to the Amiga as a hobbyist and retro-computing option. At the time or writting this, the Amiga operating system is still actively developed and supported. In addition, there is a substantial database of existing software and hardware add-on options and a very active community.\n     I am currently running a Supra Wordsync SCSI card, a Commodore A2630 accelerator, and a  Pi HDMI video card on the Amiga 2000 EATX. AIBB can be seen on the screen. I allowed the Amiga 2000 EATX to run for several hours playing games and running memory tests without issue. All the external ports are working as expected.\n   Enter Amiga 2000 Rev 6.2 schematics into KiCad, including all known A2000 Rev 6.x PCB updates.\n  Review  this information to ensure a smooth and happy experience when assembling an Amiga 2000 EATX system. It will answer many questions and inform you as to the physical requirements of the Amiga 2000 EATX PCB, various Amiga plug in cards, etc.\n       The DB23 video connector has been removed in favor of the HD15 connector. One of the goals of this project is to avoid parts that are not commercially available. The D-Sub 23 connector is a prime example. They are not stocked at popular electronic supply houses. Thus, the change to the widely available HD15 connector. Analog red, green, blue, HSYNC or COMPSYNC (jumper selectable), and VSYNC are supplied using the VGA standard pin out configuration. Other external video port signals are not supplied. Any VGA cable can be used to supply the video signal to a VGA monitor or conversion box supporting the 15KHz standard.\n    The original 256Kx4 DRAMs have been replaced by a single SRAM. The 2000 EATX is permanently configured to recognize 1MB chip ram and requires Fatter Agnus (MOS 8372A). Other Agnus revisions are not supported at this time.\n  The left/right RCA jacks of the Amiga have been replaced by a 3.5mm stereo audio jack.\n  Internally, any Amiga compatable double density disk drive or properly configured Gotek floppy emulator is supported. Up to two internal disk drives may be connected to the internal floppy connector. The external disk drive port has been removed.\n  The number of 16 bit ISA slots has been reduced to three. This was done to provide additional space on the board. Support for ISA cards via a Bridgeboard is unchanged from the Amiga 2000.\n  The internal (infernal) serial port has been removed. The external serial port is present with all signals.\n  For obvious reasons, it was necessary to move components relative to one another. Zorro slots occupy slot positions 1-5, overlapping with ISA slots in the first 3 positions. The video slot occupies the sixth slot position on the board. The CPU slot occupies position 7. It is possible to have every slot position populated simultaneously.\n  ATX 24-pin power supplies are supported with -5V being supplied on board via a voltage regulator. The original Amiga 2000 power supply is not supported.\n  The computer can be reset via CTRL-Amiga-Amiga on an Amiga keyboard or via the reset switch found on EATX computer cases.\n  The real time clock (RTC) has been changed to the RTC-62423. This RTC has a built in crystal and does not need adjustment. In the Amiga, the RTC is written and read by 4 address and 4 data lines. Unfortunately, there are no direct &#34;modern&#34; replacements for this type of bus connected RTC. As such, this is among the legacy IC&#39;s that must be obtained. It is readily available where these type of legacy IC&#39;s are sold.\n   The keyboard, joystick, mouse, parallel, and serial ports are all present and function as they did in the Amiga 2000. The parallel, serial, mouse, and joystick ports are stacked DB9 and DB25 connectors, respectively. The Amiga keyboard port remains a DIN5 connector.\n    For now, the Kickstart ROM remains the original 27C400. These are no longer made, but are easy to find. In addition, this allows the use of an original Commodore Kickstart mask ROM. Revision 1.2 added support for 1MB (27C800) and 2MB (27C160) EPROMs for custom Kickstart ROMs.\n  If something is not specifically mentioned, you should expect it to be unchanged in function or component from the original A2000.\n          kr239 - for the Amiga 500 DRAM replacement project inspiration and LIV2 and texneus for the modifications used in this project\n   DarrenHD - Pics and measurements of the Amiga 3000 video slot bracket adapter -  https://eab.abime.net/showthread.php?t=106928", "posttime": "2021-07-24 19:08:11", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "eatx,amiga", "title": "Amiga 2000 EATX PCB", "title_en": "Amiga 2000 EATX PCB", "transed": 1, "url": "https://github.com/jasonsbeer/Amiga-2000-ATX", "via": "", "real_tags": ["eatx", "amiga"]}, {"category": "", "categoryclass": "", "imagename": "c4e8d5f35d685a2d2d954ac8bf82b9fa.png", "infoid": 1069439, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5f53\u8c08\u5230\u8ba1\u7b97\u673a\u65f6\uff0c\u8fd9\u53e5 16 \u4e16\u7eaa\u7684\u540d\u8a00\u4ecd\u7136\u975e\u5e38\u9002\u7528\u3002\u6bd5\u7adf\uff0c\u5728\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u201c\u547d\u4ee4\u884c\u201d\u7ec4\u4ef6\uff0c\u5b83\u5141\u8bb8\uff08\u542f\u52a8\uff09\u7236\u8fdb\u7a0b\u5c06\u4fe1\u606f\u4f20\u9012\u7ed9\u5b50\u8fdb\u7a0b\u3002\u8fd9\u4e2a\u65b0\u521b\u5efa\u7684\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u547d\u4ee4\u884c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u6839\u636e\u5728\u547d\u4ee4\u884c\u4e0a\u627e\u5230\u7684\u5185\u5bb9\u66f4\u6539\u5176\u8fdb\u7a0b\u6d41\u3002\u8fd9\u4e2a\u6982\u5ff5\u662f\u6784\u6210\u201c\u8ba1\u7b97\u673a\u201d\u7684\u6838\u5fc3\uff1a\u5b83\u80fd\u591f\u6267\u884c\u4e00\u7ec4\u6307\u4ee4\u3001\u7a0b\u5e8f\uff0c\u63a5\u53d7\u5404\u79cd\u8f93\u5165\u3002\u5c3d\u7ba1\u5b83\u5728\u8ba1\u7b97\u4e2d\u53d1\u6325\u7740\u57fa\u672c\u4f5c\u7528\uff0c\u4f46\u5bf9\u4e8e\u547d\u4ee4\u884c\u4e0a\u53ef\u4ee5\u627e\u5230\u7684\u5404\u4e2a\u90e8\u5206\u7684\u79f0\u547c\u4f3c\u4e4e\u6ca1\u6709\u8fbe\u6210\u4e00\u81f4\u3002\u6709\u4e9b\u4eba\u8ba4\u4e3a\u547d\u4ee4\u884c\u53c2\u6570\u3001\u53c2\u6570\u3001\u9009\u9879\u3001\u6807\u5fd7\u3001\u5f00\u5173\u662f\u4e00\u56de\u4e8b\uff0c\u6709\u4e9b\u4eba\u5219\u6709\u4e0d\u540c\u7684\u542b\u4e49\u3002\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4f7f\u7528\u4ee5\u4e0b\u672f\u8bed\uff1a\u6574\u4e2a\u884c\u662f\u547d\u4ee4\u884c\uff0c\u5b83\u7531\u547d\u4ee4\u884c\u53c2\u6570\uff08\u7528\u7a7a\u683c\u5206\u9694\uff09\u7ec4\u6210\u3002\u867d\u7136\u90fd\u662f\u53c2\u6570\uff0c\u4f46\u5b83\u4eec\u6709\u4e0d\u540c\u7684\u4f5c\u7528\uff1a\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u901a\u5e38\u662f\u88ab\u8c03\u7528\u7684\u8fdb\u7a0b - \u6216\u8005\uff0c\u5982\u679c\u60a8\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\uff0c\u8fd9\u5c06\u662f\u547d\u4ee4\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u540e\u9762\u8ddf\u7740\u66f4\u591a\u7684\u53c2\u6570\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u524d\u4e09\u4e2a\u662f\u547d\u4ee4\u884c\u9009\u9879\uff0c\u901a\u5e38\u4ee5\u7279\u6b8a\u5b57\u7b26\u5f00\u5934\u3002\u5728\u8fd9\u4e09\u4e2a\u9009\u9879\u4e2d\uff0c\u524d\u4e24\u4e2a\u662f\u5f00\u5173\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u8f93\u5165\uff0c\u800c\u7b2c\u4e09\u4e2a\u662f\u4e00\u4e2a\u6807\u5fd7\uff0c\u56e0\u4e3a\u5b83\u540e\u9762\u662f\u8fdb\u4e00\u6b65\u7684\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u662f\u8fd9\u4e2a\u53c2\u6570\u7684\u201c\u8f93\u5165\u201d\u3002\u9009\u9879 char \u662f\u7528\u4f5c\u547d\u4ee4\u884c\u9009\u9879\u524d\u7f00\u7684\u5b57\u7b26\u3002\u5728 Windows \u4e0a\uff0c\u8fd9\u901a\u5e38\u662f\u6b63\u659c\u6760 (/)\uff0c\u5728\u7c7b Unix \u7cfb\u7edf\u4e0a\uff0c\u4e3b\u8981\u4f7f\u7528\u8fde\u5b57\u7b26 (-)\u3002\u8fd9\u662f\u60ef\u4f8b\u800c\u975e\u89c4\u5219\uff1a\u56e0\u4e3a\u547d\u4ee4\u884c\u7531\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\u89e3\u6790\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5b8c\u5168\u81ea\u7531\u5730\u5b9a\u4e49\u5e94\u8be5\u4ee5\u4ec0\u4e48\u683c\u5f0f\u4f20\u9012\u53c2\u6570\u3002\u516c\u7ea6\u5f88\u96be\u3002\u8ba1\u7b97\u5386\u53f2\u544a\u8bc9\u6211\u4eec\uff0c\u5982\u679c\u6ca1\u6709\u6807\u51c6\u5316\uff0c\u4e8b\u60c5\u5f80\u5f80\u4f1a\u4ee5\u6df7\u4e71\u7ed3\u675f\u2014\u2014\u8fd9\u5f53\u7136\u9002\u7528\u4e8e\u547d\u4ee4\u884c\u3002\u547d\u4ee4\u884c\u89e3\u6790\u5b9e\u8df5\u7f3a\u4e4f\u6807\u51c6\u5316\u5bfc\u81f4\u7528\u6237\u6df7\u6dc6\uff1a\u5f88\u5bb9\u6613\u6df7\u6dc6\u4e0d\u540c\u7684\u5b9e\u8df5\uff0c\u5bfc\u81f4\u6267\u884c\u4e0d\u6210\u529f\u548c\u5f88\u591a\u632b\u6298\u3002\u4e3a\u4e86\u5e2e\u52a9\u7528\u6237\uff0c\u4e00\u4e9b\u7a0b\u5e8f\u88ab\u8bbe\u8ba1\u4e3a\u63a5\u53d7\u591a\u79cd\u7ea6\u5b9a\u3002\u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u662f\u63a5\u53d7\u6b63\u659c\u6760\u548c\u8fde\u5b57\u7b26\u4f5c\u4e3a\u9009\u9879\u5b57\u7b26\uff0c\u8fd9\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u66f4\u8be6\u7ec6\u5730\u8ba8\u8bba\u3002\u53e6\u4e00\u4e2a\u6df7\u6dc6\u6e90\u662f\u53ef\u7528\u7684\u4e0d\u540c\u5b57\u7b26\u7f16\u7801\u3002\u8fd9\u5bfc\u81f4\u4e86\u65e7\u7a0b\u5e8f\uff08\u901a\u5e38\u53ea\u63a5\u53d7 ASCII\uff09\u548c\u65b0\u7a0b\u5e8f\uff08\u73b0\u5728\u901a\u5e38\u63a5\u53d7 UTF-8 \u6216 Unicode\uff09\u4e4b\u95f4\u7684\u5404\u79cd\u517c\u5bb9\u6027\u95ee\u9898\u3002\u4e00\u4e9b\u7a0b\u5e8f\u8bd5\u56fe\u901a\u8fc7\u8fc7\u6ee4\u6389\u67d0\u4e9b\u5b57\u7b26\u6216\u5c06\u7279\u5b9a\u5b57\u7b26\u8f6c\u6362\u4e3a ASCII \u7b49\u4ef7\u7269\u6765\u89e3\u51b3\u8fd9\u4e9b\u4e0d\u517c\u5bb9\u6027\u3002\n\u8fd9\u5bfc\u81f4\u4e86\u67d0\u4e9b\u7a0b\u5e8f\u5c06\u5404\u79cd\u4e0d\u540c\u7684\u547d\u4ee4\u884c\u53c2\u6570\u89c6\u4e3a\u4e00\u4e2a\u76f8\u540c\u7684\u60c5\u51b5\u3002\u60a8\u53ef\u4ee5\u5c06\u6b64\u7c7b\u5b9e\u4f8b\u79f0\u4e3a\u540c\u4e49\u547d\u4ee4\u884c\uff0c\u56e0\u4e3a\u5c3d\u7ba1\u4f20\u9012\u7ed9\u6d41\u7a0b\u7684\u6570\u636e\u4e0d\u540c\uff0c\u4f46\u5b83\u4eec\u7684\u6267\u884c\u548c\u7ed3\u679c\u662f\u76f8\u540c\u7684\u3002\u867d\u7136\u80fd\u591f\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8868\u8fbe\u76f8\u540c\u7684\u547d\u4ee4\u53ef\u80fd\u5bf9\u67d0\u4e9b\u7528\u6237\u6709\u6240\u5e2e\u52a9\uff0c\u4f46\u5b83\u5f80\u5f80\u4f1a\u4f7f\u68c0\u6d4b\u548c\u9884\u9632\u5de5\u4f5c\u66f4\u52a0\u56f0\u96be\u3002\u5927\u591a\u6570\u5a01\u80c1\u68c0\u6d4b\u8f6f\u4ef6\uff08AV\u3001EDR \u7b49\uff09\u5c06\u76d1\u63a7\u8fdb\u7a0b\u6267\u884c\uff0c\u5e76\u5bfb\u627e\u53ef\u80fd\u8868\u793a\u6076\u610f\u4f7f\u7528\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002\u7531\u4e8e\u653b\u51fb\u8005\u5e0c\u671b\u4e0d\u88ab\u53d1\u73b0\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5229\u7528\u547d\u4ee4\u884c\u7684\u7075\u6d3b\u6027\u6765\u9003\u907f\u68c0\u6d4b\u3002\u8fd9\u53ef\u80fd\u5305\u62ec\u4ece\u7ed5\u8fc7\u57fa\u4e8e\u5173\u952e\u5b57\u7684\u68c0\u6d4b\u7684\u5c0f\u8c03\u6574\u5230\u5168\u9762\u7684\u547d\u4ee4\u884c\u6df7\u6dc6\u4ee5\u9690\u85cf\u539f\u59cb\u547d\u4ee4\u3002\u547d\u4ee4\u884c\u7ea7\u522b\u6df7\u6dc6\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u662f Daniel Bohannon \u7684\u4f18\u79c0\u4f5c\u54c1 DOSfuscation [1, 2]\uff0c\u5b83\u7279\u522b\u5173\u6ce8 Windows \u547d\u4ee4\u884c\u63d0\u793a\u7b26 CMD\u3002\u5373\u4f7f\u6b63\u5728\u6267\u884c\u7684 CMD &#39;\u7406\u89e3&#39;\u5e76\u6267\u884c\u6df7\u6dc6\u7684\u547d\u4ee4\uff0c\u5b83\u5bf9\u4eba\u7c7b\u6765\u8bf4\u53ef\u80fd\u770b\u8d77\u6765\u96be\u4ee5\u7406\u89e3\uff0c\u5e76\u4e14\u76d1\u63a7\u8f6f\u4ef6\u4e5f\u5f88\u53ef\u80fd\u88ab\u8499\u5728\u9f13\u91cc\u3002\u540c\u4e49\u547d\u4ee4\u884c\u7684\u73b0\u8c61\u8d85\u51fa\u4e86 DOSfuscation\uff0c\u56e0\u4e3a\u5b83\u9002\u7528\u4e8e\u66f4\u591a\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f CMD\u3002\u8fd9\u91cc\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u60a8\u4e0d\u4ec5\u4f1a\u611a\u5f04\u547d\u4ee4\u884c\u63d0\u793a\u7b26\uff0c\u8fd8\u4f1a\u611a\u5f04\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\u672c\u8eab\u3002\u6b63\u5982\u7a0d\u540e\u5c06\u5c55\u793a\u7684\uff0c\u867d\u7136 DOSfuscation \u5de5\u4f5c\u53ef\u80fd\u4f1a\u5728\u68c0\u6d4b\u8f6f\u4ef6\u4f7f\u7528\u7684\u8bb0\u5f55\u5668\u4e2d\u4ee5\u672a\u6df7\u6dc6\u7684\u5f62\u5f0f\u7ed3\u675f\uff0c\u4f46\u540c\u4e49\u7684\u547d\u4ee4\u884c\u53c2\u6570\u4e0d\u4f1a\u3002\u4e3a\u4e86\u770b\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u73b0\u5728\u5c06\u4ed4\u7ec6\u7814\u7a76\u53ef\u80fd\u5bfc\u81f4\u540c\u4e49\u547d\u4ee4\u884c\u7684\u4e94\u79cd\u4e0d\u540c\u65b9\u6cd5\u3002\u8003\u8651 Windows \u53ef\u6267\u884c\u6587\u4ef6 ping\u3002\u7531\u4e8e\u8be5\u7a0b\u5e8f\u662f\u539f\u59cb Unix \u7248\u672c\u7684\u79fb\u690d\uff0c\u5e2e\u52a9\u9875\u9762\u5efa\u8bae\u547d\u4ee4\u884c\u9009\u9879\u5e94\u4f7f\u7528\u8fde\u5b57\u7b26\u4f5c\u4e3a\u9009\u9879\u5b57\u7b26\uff0c\u4f8b\u5982 ping -n 0 127.0.0.1\u3002\u8fd9\u4e0e\u5927\u591a\u6570\u5176\u4ed6\u4f7f\u7528\u6b63\u659c\u6760\u7684 Windows \u539f\u751f\u547d\u4ee4\u884c\u5de5\u5177\u4e0d\u4e00\u81f4\u3002\u5927\u6982\u662f\u4e3a\u4e86\u5e2e\u52a9\u56f0\u60d1\u7684\u7528\u6237\uff0c\u8be5\u7a0b\u5e8f\u8fd8\u63a5\u53d7\u6b63\u659c\u6760\u4f5c\u4e3a\u9009\u9879\u5b57\u7b26\uff1aping /n 0 127.0.0.1 \u4e5f\u53ef\u4ee5\u5de5\u4f5c\u3002\u5927\u591a\u6570\u4f7f\u7528\u8fde\u5b57\u7b26\u7684\u5185\u7f6e Windows \u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u63a5\u53d7\u6b63\u659c\u6760\uff0c\u4f46\u53cd\u4e4b\u5219\u4e0d\u7136\u3002\u4f8b\u5982\uff0c\u547d\u4ee4 find /i keyword \u5c06\u663e\u793a\u5305\u542b\u5355\u8bcd\u201ckeyword\u201d\u7684\u6240\u6709\u6587\u4ef6\uff0c\u800c find -i keyword \u5c06\u5bfc\u81f4\u9519\u8bef\u3002\n\u5c3d\u7ba1\u6b63\u659c\u6760\u548c\u8fde\u5b57\u7b26\u662f\u6700\u5e38\u89c1\u7684\u53ef\u7528\u9009\u9879\uff0c\u4f46\u6709\u4e9b\u7a0b\u5e8f\u652f\u6301\u66f4\u591a\u7684\u9009\u9879\u5b57\u7b26\u3002 certutil \u6070\u597d\u63a5\u53d7\u8fde\u5b57\u7b26\u3001\u659c\u7ebf\u548c\u659c\u7ebf\u7684\u5927\u591a\u6570 Unicode \u8868\u793a\uff0c\u4f8b\u5982\u9664\u6cd5\u659c\u7ebf (0x2215) \u548c\u5206\u6570\u659c\u7ebf (0x2044) [3]\u3002\u6b63\u5982\u6211\u4eec\u5c06\u5728\u5176\u4ed6\u53d8\u4f53\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u5f88\u5c11\u8bb0\u5f55\u8fd9\u4e9b\u66ff\u4ee3\u547d\u4ee4\u884c\u9009\u9879\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u4f1a\u5076\u7136\u3001\u201c\u86ee\u529b\u201d\u6216\u901a\u8fc7\u9006\u5411\u5de5\u7a0b\u627e\u5230\u5b83\u4eec\u3002\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u7528\u7c7b\u4f3c\u7684\u5b57\u7b26\u66ff\u6362\u547d\u4ee4\u884c\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\uff08\u5373\u9664\u4e86\u9009\u9879\u5b57\u7b26\u4e4b\u5916\uff09\u3002\u5c24\u5176\u662f\u5f53\u60a8\u8003\u8651\u6574\u4e2a Unicode \u8303\u56f4\u65f6\uff0c\u5728 ASCII \u8303\u56f4\u5185\u4e5f\u53d1\u73b0\u4e86\u8bb8\u591a\u5b57\u6bcd\u53d8\u4f53\uff0c\u67d0\u4e9b\u8fdb\u7a0b\u53ef\u80fd\u63a5\u53d7\u8fd9\u4e9b\u53d8\u4f53\u3002 Unicode \u5305\u542b\u4e00\u4e2a\u95f4\u8ddd\u4fee\u9970\u5b57\u6bcd\u8303\u56f4 (0x02B0 - 0x02FF) [4]\uff0c\u5176\u4e2d\u5305\u62ec \u02ea\u3001\u02e3 \u548c \u02e2 \u7b49\u5b57\u7b26\u3002\u4e00\u4e9b\u547d\u4ee4\u884c\u89e3\u6790\u5668\u5c06\u5b83\u4eec\u8bc6\u522b\u4e3a\u5b57\u6bcd\u5e76\u5c06\u5b83\u4eec\u5206\u522b\u8f6c\u6362\u56de l\u3001x \u548c s\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f reg\uff0c\u5b83\u5c06 reg export HKCU out.reg \u548c reg e\u02e3port HKCU out.reg \u89c6\u4e3a\u76f8\u7b49\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u6709\u66f4\u591a Unicode \u8303\u56f4\u5305\u542b\u67d0\u4e9b\u7a0b\u5e8f\u63a5\u53d7\u7684\u5b57\u7b26\u3002\u540c\u6837\uff0c\u6709\u65f6\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u63d2\u5165\u989d\u5916\u7684\u5b57\u7b26\uff0c\u8fd9\u4e9b\u5b57\u7b26\u5c06\u88ab\u6267\u884c\u7a0b\u5e8f\u5ffd\u7565\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u80fd\u4f1a\u5220\u9664\u4e0d\u53ef\u6253\u5370\u7684\u5b57\u7b26\uff0c\u540c\u65f6\u4e5f\u53ef\u80fd\u4f1a\u8fc7\u6ee4\u6389\u67d0\u4e9b\u53ef\u6253\u5370\u7684\u5b57\u7b26\u3002\u4f8b\u5982\uff0cWindows \u4e8b\u4ef6\u65e5\u5fd7\u5de5\u5177 wevtutil \u4f3c\u4e4e\u63a5\u53d7\u5728\u968f\u673a\u4f4d\u7f6e\u63d2\u5165\u67d0\u4e9b\u8303\u56f4\u5185\u7684 Unicode \u5b57\u7b26\u7684\u547d\u4ee4\u884c\u3002\u56e0\u6b64\uff0c\u6267\u884c wevtutil gli hardwareevents \u548c wevtutil g\u08afli hardwareevents \u5c06\u4ea7\u751f\u5b8c\u5168\u76f8\u540c\u7684\u8f93\u51fa\uff0c\u5c3d\u7ba1\u540e\u8005\u5728\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u4e2d\u95f4\u5305\u542b\u4e00\u4e2a\u963f\u62c9\u4f2f\u5b57\u6bcd\u3002\n\u7531\u4e8e\u547d\u4ee4\u884c\u63d0\u793a\u7684\u6807\u51c6\u8f93\u5165\u6709\u65f6\u4e0d\u652f\u6301\u53ef\u7528\u4e8e\u6b64\u6280\u672f\u7684\u5b57\u7b26\uff08\u4f8b\u5982\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u53ef\u6253\u5370\uff09\uff0c\u60a8\u53ef\u80fd\u5fc5\u987b\u4f7f\u7528\u5b57\u8282\u8868\u793a\u6cd5\u63d2\u5165\u5b57\u7b26\u3002\u4ece\u622a\u56fe\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b57\u7b26\u88ab\u6b63\u786e\u5730\u4f20\u9012\u7ed9\u4e86\u8fdb\u7a0b\u3002\u5728\u4fdd\u6301\u6d41\u7a0b\u5b8c\u6574\u7684\u540c\u65f6\u64cd\u7eb5\u547d\u4ee4\u884c\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u63d2\u5165\u5f15\u53f7\u3002\u5c3d\u7ba1\u8fd9\u542c\u8d77\u6765\u50cf\u662f\u5148\u524d\u6280\u672f\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u4f46\u8fd9\u91cc\u7684\u8981\u6c42\u662f\u5f15\u53f7\u6210\u5bf9\u51fa\u73b0\u3002\u60a8\u53ef\u80fd\u719f\u6089\u5728\u53c2\u6570\u5468\u56f4\u52a0\u4e0a\u5f15\u53f7\u7684\u6982\u5ff5\u3002\u4ee5 dir &quot;c:\\windows\\&quot; \u4e3a\u4f8b\uff0c\u7531\u4e8e\u7f3a\u5c11\u7a7a\u683c\uff0c\u5b83\u5b9e\u9645\u4e0a\u4e0e dir c:\\windows\\ \u76f8\u540c\u3002\u5927\u591a\u6570\u7a0b\u5e8f\u90fd\u63a5\u53d7\u8fd9\u4e2a\u7ea6\u5b9a\u3002\u9c9c\u4e3a\u4eba\u77e5\u7684\u662f\uff0c\u5927\u591a\u6570\u7a0b\u5e8f\u5728\u4efb\u610f\u4f4d\u7f6e\u63a5\u53d7\u5f15\u53f7\uff1a\u547d\u4ee4 dir c:\\&quot;win&quot;d&quot;&quot;ow&quot;s&quot; \u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002\u53ea\u8981\u6bcf\u4e2a\u53c2\u6570\u7684\u5f15\u53f7\u6570\u662f\u5076\u6570\u5e76\u4e14\u540e\u9762\u7684\u5f15\u53f7\u4e0d\u8d85\u8fc7\u4e24\u4e2a\uff0c\u5927\u591a\u6570\u7a0b\u5e8f\u4f3c\u4e4e\u90fd\u63a5\u53d7\u8fd9\u4e00\u70b9\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u4f7f\u7528\u5f15\u53f7\u53ef\u80fd\u5f88\u68d8\u624b\uff0c\u56e0\u4e3a\u5b83\u4eec\u901a\u5e38\u5728\u5c06\u5f15\u53f7\u4f20\u9012\u7ed9\u5e95\u5c42\u7a0b\u5e8f\u4e4b\u524d\u81ea\u5df1\u5904\u7406\u5f15\u53f7\u3002\u4f8b\u5982\uff0c\u5728 cmd \u4e2d\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u6bcf\u4e2a\u5f15\u53f7\u52a0\u500d\uff0c\u56e0\u6b64\u8981\u83b7\u5f97\u5982\u4e0a\u6240\u793a\u7684\u7b49\u6548\u6267\u884c\uff0c\u60a8\u5fc5\u987b\u8fd0\u884c netsh ad&quot;&quot;vfi&quot;&quot;rewall show currentprofile state\u3002\u63d2\u5165\u548c\u66ff\u6362\u5b57\u7b26\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c1d\u8bd5\u5220\u9664\u5b57\u7b26\u3002\u4e00\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u4e3a\u5176\u4ed6\u5197\u957f\u7684\u547d\u4ee4\u884c\u9009\u9879\u63d0\u4f9b\u201c\u901f\u8bb0\u201d\uff0c\u4ece\u800c\u66f4\u5bb9\u6613\u8f93\u5165\u5b83\u4eec\u3002\u8fd9\u662f\u57fa\u4e8e Unix \u7684\u5de5\u5177\u4e2d\u7684\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u6982\u5ff5\uff08\u4f8b\u5982 grep -i \u5173\u952e\u5b57\u4e0e grep --ignore-case \u5173\u952e\u5b57\uff09\uff0c\u4f46\u5728 Windows \u4e0a\u5219\u4e0d\u7136\u3002\u7136\u800c\uff0c\u4e00\u4e9b\u7a0b\u5e8f\u63a5\u53d7\u7f29\u77ed\u7684\u7248\u672c\u3002\u4e00\u4e9b\u7a0b\u5e8f\u91c7\u7528\u4e0e Unix \u7c7b\u4f3c\u7684\u65b9\u6cd5\u5e76\u63a5\u53d7\u5355\u5b57\u6bcd\u7248\u672c\uff08\u4f8b\u5982 cmdkey /l \u4e0e cmdkey /list\uff09\uff0c\u6709\u4e9b\u7a0b\u5e8f\u63a5\u53d7\u5176\u4ed6\u7f29\u5199\u7248\u672c\uff08\u4f8b\u5982 wevtutil gli \u4e0e wevtutil get-loginfo\uff09\uff0c\u800c\u5176\u4ed6\u7a0b\u5e8f\u5219\u91c7\u7528\u201c\u901a\u914d\u7b26\u65b9\u6cd5\u201d &#39;\u3002\u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f PowerShell\uff0c\u5b83\u7684\u8bb8\u591a\u5173\u952e\u5b57\u5141\u8bb8\u60a8\u5728\u5173\u952e\u5b57 [5] \u7684\u672b\u5c3e\u7701\u7565\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002\u6210\u529f\u6267\u884c powershell /encodedcommand ZQBjAGgAbwAgACIASQB0ACAAdwBvAHIAawBzACEAIgA= \u540e\u8ddf 13 \u79cd\u4e0d\u540c\u901f\u8bb0\u7684\u793a\u4f8b\u3002\n\u4e5f\u8bb8\u9664\u4e86\u6700\u77ed\u7684\u53d8\u4f53 /e \u4e4b\u5916\uff0c\u5728\u6211\u770b\u6765\uff0c\u63a5\u53d7\u8fd9\u4e9b\u901f\u8bb0\u65b9\u6cd5\u5bf9\u5f88\u5c11\u4eba\u6709\u5e2e\u52a9\uff0c\u4f46\u5b83\u786e\u5b9e\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u548c\u4e0d\u53ef\u9884\u6d4b\u3002\u4f8b\u5982\uff0cPowerShell \u53ea\u63a5\u53d7\u7f29\u77ed\u7684\u7248\u672c\uff0c\u524d\u63d0\u662f\u5b83\u4e0d\u4f1a\u5bfc\u81f4\u53e6\u4e00\u4e2a\u547d\u4ee4\u4e4b\u95f4\u7684\u6b67\u4e49\u3002\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u5173\u952e\u5b57/noprofile \u7684\u6700\u77ed\u53d8\u4f53\u662f/nop\uff0c\u56e0\u4e3a/no \u4f1a\u4e0e\u4f8b\u5982/noexit \u53d1\u751f\u51b2\u7a81\u3002\u9664\u4e86\u8fd9\u79cd\u201c\u901a\u914d\u7b26\u65b9\u6cd5\u201d\u4e4b\u5916\uff0cPowerShell \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u63a5\u53d7\u9996\u5b57\u6bcd\u7f29\u7565\u8bcd\uff0c\u56e0\u6b64\u5c3d\u7ba1\u5c4f\u5e55\u622a\u56fe\u4e2d\u6ca1\u6709\u663e\u793a\uff0c/ec \u4e5f\u53ef\u4ee5\u7528\u4f5c /encodedcommand \u7684\u7b80\u5199\u3002\u5982\u524d\u51e0\u8282\u6240\u8ff0\uff0c\u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570\u6ca1\u6709\u6807\u51c6\u3002\u6709\u4e9b\u7a0b\u5e8f\u975e\u5e38\u4e25\u683c\uff0c\u800c\u6709\u4e9b\u7a0b\u5e8f\u4f1a\u975e\u5e38\u52aa\u529b\u5730\u5c06\u7ed9\u51fa\u7684\u4efb\u4f55\u5185\u5bb9\u53d8\u6210\u5b83\u53ef\u4ee5\u7406\u89e3\u7684\u5185\u5bb9\u3002\u627e\u51fa\u7279\u5b9a\u7a0b\u5e8f\u7684\u547d\u4ee4\u884c\u884c\u4e3a\u4e5f\u662f\u6709\u95ee\u9898\u7684\uff1a\u5e2e\u52a9\u9875\u9762\u901a\u5e38\u53ea\u6307\u5b9a\u4f20\u9012\u53c2\u6570\u7684\u201c\u9996\u9009\u201d\u65b9\u5f0f\uff08\u65b9\u6cd5 1 \u548c 5\uff09\uff0c\u901a\u5e38\u4ece\u4e0d\u63cf\u8ff0\u5982\u4f55\u5904\u7406\u610f\u5916\u5b57\u7b26\uff08\u65b9\u6cd5 2-4 \uff09\u3002\u786e\u5b9a\u8fd9\u4e00\u70b9\u7684\u6700\u51c6\u786e\u65b9\u6cd5\u4f3c\u4e4e\u662f\u9006\u5411\u5de5\u7a0b\u3002\u4f46\u662f\uff0c\u8fd9\u662f\u4e00\u9879\u975e\u5e38\u8017\u65f6\u7684\u6d3b\u52a8\uff0c\u5c24\u5176\u662f\u5f53\u60a8\u8003\u8651\u5230\u67d0\u4e9b\u7a0b\u5e8f\u7684\u590d\u6742\u6027\u65f6\u3002\u56e0\u6b64\uff0c\u66f4\u5b9e\u7528\u7684\u65b9\u6cd5\u662f\u7b80\u5355\u5730\u4f7f\u7528\u4e0d\u540c\u7684\u5b57\u7b26\u91cd\u590d\u5c1d\u8bd5\u6240\u6709\u7ed5\u8fc7\u6280\u672f\u5e76\u6bd4\u8f83\u7ed3\u679c\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u6982\u5ff5\u9a8c\u8bc1\u5b9e\u73b0 [6] \u4f7f\u6211\u4eec\u80fd\u591f\u5feb\u901f\u5206\u6790\u6240\u63cf\u8ff0\u7684\u4e94\u79cd\u884c\u4e3a\u4e2d\u7684\u54ea\u4e00\u79cd\u3002\u53ef\u4ee5\u5728 GitHub \u9879\u76ee\u9875\u9762\u4e0a\u627e\u5230\u5bf9 PoC \u7684\u66f4\u8be6\u7ec6\u89e3\u91ca\u3001\u5176\u57fa\u672c\u5047\u8bbe\u548c\u8b66\u544a\u3002\u51fa\u4e8e\u672c\u6587\u7684\u76ee\u7684\uff0cPoC \u7528\u4e8e\u5206\u6790 40 \u591a\u4e2a\u7ecf\u5e38\u7528\u4e8e\u653b\u51fb\u7684\u5185\u7f6e Windows \u53ef\u6267\u884c\u6587\u4ef6\u3002\u6ce8\uff1a1) \u4f7f\u7528 Windows 10 2004 \u7248\u8fdb\u884c\u5206\u6790\uff1b2) \u5bf9\u4e8e\u6bcf\u4e2a Windows \u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4ec5\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u547d\u4ee4 - \u5176\u4ed6\u547d\u4ee4\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u540c\u7684\u7ed3\u679c\uff1b3) \u7528\u661f\u53f7 (*) \u8868\u793a\u7684\u6761\u76ee\u9488\u5bf9\u7684\u662f\u547d\u4ee4-line \u53c2\u6570\u63a5\u53d7\u6bcf\u4e2a\u53d8\u5316\u3002\u4f8b\u5982\uff0c\u5728 nslookup -querytype=ALL (...) \u7684\u60c5\u51b5\u4e0b\uff0cPoC \u53d1\u73b0\u65e0\u8bba\u63d2\u5165\u4ec0\u4e48\u5b57\u7b26\uff0c\u90fd\u4f1a\u8fd4\u56de\u9884\u671f\u7684\u8f93\u51fa\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0cnslookup \u4f1a\u5ffd\u7565\u547d\u4ee4\u884c\u9009\u9879\uff08\u5728\u672c\u4f8b\u4e2d\u4e3a -q\uff09\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u4e4b\u540e\u7684\u6240\u6709\u5b57\u6bcd\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u80fd\u7684\u6392\u5217\u6570\u91cf\u51e0\u4e4e\u662f\u65e0\u9650\u7684\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b8c\u6574\u62a5\u544a\uff0c\u5305\u62ec\u6d4b\u8bd5\u7684\u547d\u4ee4\u548c\u627e\u5230\u7684\u5b57\u7b26\uff0c\u53ef\u4ee5\u5728 GitHub [6] \u4e0a\u627e\u5230\u3002\n\u4e86\u89e3\u6240\u6709\u8fd9\u4e9b\u4f7f\u6211\u4eec\u80fd\u591f\u9000\u540e\u4e00\u6b65\uff0c\u4ece\u5a01\u80c1\u641c\u5bfb\u7684\u89d2\u5ea6\u5ba1\u89c6\u547d\u4ee4\u884c\u884c\u4e3a\u3002\u5982\u679c\u4f60\u60f3\u7528\u7279\u5b9a\u7684\u547d\u4ee4\u884c\u53c2\u6570\u68c0\u6d4b\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u540c\u4e49\u7684\u547d\u4ee4\u884c\u53c2\u6570\u4f1a\u5e26\u6765\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u7f16\u5199 Sigma \u89c4\u5219 [7] \u6765\u68c0\u6d4b\u6307\u5b9a urlcache \u548c f \u53c2\u6570\u7684 certutil \u6267\u884c\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a \u95ee\u9898\u5f88\u660e\u663e\uff1a\u5982\u679c\u653b\u51fb\u8005\u4f7f\u7528 -urlcache\u3001/ur\u1d38cache\u3001/\u209eurlcache \u6216 /url&quot;cach &quot;e - \u6216\u8005\u66f4\u7cdf\u7684\u662f\uff0c\u4e00\u4e2a\u7ec4\u5408\uff1a-\u209eu\u209er\u1d38&quot;c\u209ea\u209ech&quot;e\uff0c\u8be5\u547d\u4ee4\u4ecd\u7136\u6709\u6548\uff0c\u4f46\u4e0a\u8ff0\u89c4\u5219\u4e0d\u4f1a\u5f71\u54cd\u884c\u4e3a\u3002\u5c06\u6240\u6709\u53d8\u4f53\u6dfb\u52a0\u5230\u89c4\u5219\u4e2d\u4e0d\u662f\u4e00\u79cd\u9009\u62e9\uff0c\u56e0\u4e3a\u7ed3\u5408\u5404\u79cd\u7ed5\u8fc7\u6280\u672f\u5c06\u5bfc\u81f4\u6570\u5343\u751a\u81f3\u6570\u767e\u4e07\u4e2a\u6392\u5217\u3002 certutil -f -urlcache -split https://wietze.github.io/robots.txt output.txt \u6df7\u6dc6\u7248\u672c\u7684\u6210\u529f\u6267\u884c\u793a\u4f8b\u3002\u53ef\u80fd\u5c1d\u8bd5\u7684\u7b2c\u4e00\u4e2a\u6f5c\u5728\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u89c4\u5219\u66f4\u901a\u7528\u3002\u4f8b\u5982\uff0c\u89e3\u51b3\u9009\u9879\u5b57\u7b26\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9009\u9879\u5b57\u7b26\u6392\u9664\u5728\u5b9a\u4e49\u4e4b\u5916\uff1a\u867d\u7136\u8fd9\u4f3c\u4e4e\u89e3\u51b3\u4e86\u9009\u9879\u5b57\u7b26\u95ee\u9898\uff0c\u4f46\u5b83\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u95ee\u9898\u3002\u67e5\u627e urlcache \u800c\u4e0d\u662f /urlcache \u4e0d\u592a\u53ef\u80fd\u5bfc\u81f4\u5f88\u591a\u8bef\u62a5\uff0c\u4f46\u662f\uff0c\u53ea\u67e5\u627e f \u800c\u4e0d\u662f /f \u53ef\u80fd\u4f1a\u4ea7\u751f\u8bef\u62a5\u3002\u7b2c\u4e8c\u79cd\u53ef\u80fd\u7684\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u66f4\u5de7\u5999\u7684\u5339\u914d\u9009\u9879\u3002\u8bb8\u591a\u63d0\u4f9b\u5bfb\u627e\u6d41\u7a0b\u6267\u884c\u529f\u80fd\u7684 EDR \u5de5\u5177\u5f80\u5f80\u4ec5\u9650\u4e8e\u7b80\u5355\u7684\u201c\u5b57\u7b26\u4e32\u5305\u542b\u201d\u5f0f\u529f\u80fd\uff0c\u5982\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u6240\u793a\u3002\u6709\u4e9b\u5141\u8bb8\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f46\u8fd9\u4f3c\u4e4e\u4ecd\u7136\u5f88\u5c11\u89c1\u3002\u5c3d\u7ba1 Sigma \u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u503c\uff0c\u4f46\u5728 30 \u4e2a\u652f\u6301\u7684\u540e\u7aef\u4e2d\u4f3c\u4e4e\u53ea\u6709 7 \u4e2a\u5b9e\u9645\u5b9e\u73b0\u4e86\u5b83\u3002\u867d\u7136\u8fd9\u5e76\u4e0d\u4e00\u5b9a\u610f\u5473\u7740\u5176\u4ed6 23 \u4e2a\u5e73\u53f0\u4e0d\u652f\u6301\u5b83\uff0c\u4f46\u81f3\u5c11\u8868\u660e\u5b83\u53ef\u80fd\u4e0d\u662f\u4e00\u6761\u660e\u663e\u7684\u4e0b\u964d\u8def\u5f84\u3002\u4f9b\u5e94\u5546\u53ef\u80fd\u5bf9\u63d0\u4f9b\u6b64\u9009\u9879\u72b9\u8c6b\u4e0d\u51b3\u7684\u4e00\u4e2a\u5173\u952e\u539f\u56e0\u9996\u5148\u662f\u6027\u80fd\uff1a\u6b63\u5e38\u7684\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u4f46\u901a\u8fc7\u9012\u5f52\u6269\u5c55\uff0c\u53ef\u4ee5\u521b\u5efa\u6c38\u8fdc\u4e0d\u4f1a\u7ed3\u675f\u8ba1\u7b97\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 Sigma \u9879\u76ee\u4e5f\u4e0d\u9f13\u52b1\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f [8]\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u89e3\u51b3\u9009\u9879\u5b57\u7b26\u95ee\u9898\uff08\u5047\u8bbe\u60a8\u5c06 [-/\\\\] \u66ff\u6362\u4e3a\u6240\u6709\u9009\u9879\u5b57\u7b26\u7684\u5217\u8868\uff09\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd8\u53ef\u4ee5\u5e2e\u52a9\u6709\u6548\u5730\u6355\u83b7\u901f\u8bb0\u5173\u952e\u5b57\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7531\u4e8e\u9009\u9879\u548c\u6392\u5217\u7684\u5927\u5c0f\uff0c\u5b57\u7b26\u63d2\u5165\u548c\u66ff\u6362\u901a\u5e38\u662f\u4e0d\u53ef\u884c\u7684\u3002\u89e3\u51b3\u8fd9\u4e9b\u7c7b\u578b\u7684\u6df7\u6dc6\u6c38\u8fdc\u4e0d\u4f1a\u662f\u65e0\u61c8\u53ef\u51fb\u7684\u3002\u9700\u8981\u66f4\u5177\u5f39\u6027\u7684\u65b9\u6cd5\u3002\u4e3a\u907f\u514d\u843d\u5165\u96a7\u9053\u89c6\u89c9\u68c0\u6d4b\u5de5\u7a0b\u7684\u9677\u9631\uff0c\u60a8\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e9b\u63aa\u65bd\u6765\u5b9e\u73b0\u5f3a\u5927\u7684\u5a01\u80c1\u641c\u5bfb\u8fc7\u7a0b\u3002\u9996\u5148\uff0c\u786e\u4fdd\u89c4\u5219\u88ab\u5408\u7406\u5730\u5b9a\u4e49\u4e3a\u201c\u5e7f\u6cdb\u201d\uff0c\u6355\u6349\u6240\u6709\u53ef\u80fd\u7684\u53d8\u5316\uff0c\u540c\u65f6\u8003\u8651\u5230\u8bef\u62a5\u7684\u6f5c\u5728\u589e\u52a0\u3002\u63d0\u4f9b\u7684 PoC [6] \u53ef\u7528\u4e8e\u67e5\u627e\u60a8\u7684\u89c4\u5219\u53ef\u80fd\u5141\u8bb8\u7684\u53d8\u5316\u3002\u5176\u6b21\uff0c\u6807\u51c6\u5316\u76d1\u63a7\u5de5\u5177\u7684\u8f93\u51fa\u4e5f\u53ef\u80fd\u662f\u6709\u76ca\u7684\u3002\u5982\u679c\u60a8\u7684\u6570\u636e\u5728\u6700\u7ec8\u8fdb\u5165\u5206\u6790\u5e73\u53f0\u4e4b\u524d\u5728\u7ba1\u9053\u4e2d\u8fdb\u884c\u5904\u7406\uff0c\u8bf7\u8003\u8651\u6dfb\u52a0\u4e00\u4e2a\u5355\u72ec\u7684\u5b57\u6bb5\uff0c\u5c06\u6240\u6709\u7279\u6b8a\u5b57\u7b26\u8f6c\u6362\u4e3a ASCII \u7b49\u6548\u5b57\u7b26\u5e76\u53bb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u503c\uff08\u4ee5\u53bb\u9664\u5f15\u53f7\u548c\u9009\u9879\u5b57\u7b26\uff09\u3002\u5728\u6b64\u5b57\u6bb5\u4e0a\u8fd0\u884c\u60a8\u7684\u89c4\u5219\u53ef\u80fd\u4f1a\u6709\u66f4\u9ad8\u7684\u547d\u4e2d\u7387\u3002\u6b64\u5916\uff0c\u4f7f\u7528\u6570\u636e\u5206\u6790\u6765\u68c0\u6d4b\u6df7\u6dc6\u5c1d\u8bd5\u672c\u8eab\u3002\u67e5\u770b\u5305\u542b\u5728\u60a8\u7684 IT \u8d44\u4ea7\u4e2d\u4f7f\u7528\u7387\u8f83\u4f4e\u7684\u5b57\u7b26\u7684\u6d41\u7a0b\u547d\u4ee4\u884c\uff0c\u6bd4\u8f83\u5b57\u7b26\u5bc6\u5ea6\u7ea7\u522b\uff0c\u751a\u81f3\u53ea\u662f\u67e5\u627e\u5305\u542b\u975e ASCII \u5b57\u7b26\u7684\u547d\u4ee4\u884c\u53c2\u6570\u5e76\u4ece\u90a3\u91cc\u5f00\u59cb\u5de5\u4f5c\u3002\n\u8fd8\u8981\u786e\u4fdd\u60a8\u7684\u91cd\u70b9\u6bd4\u5355\u72ec\u7684\u6d41\u7a0b\u5b57\u7b26\u4e32\u66f4\u5e7f\u6cdb\u3002\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u5173\u6ce8\u547d\u4ee4\u884c\u8bd5\u56fe\u5b9e\u73b0\u7684\u5b9e\u9645\u884c\u4e3a\uff0c\u4f8b\u5982\u6587\u4ef6\u521b\u5efa\u3001\u6ce8\u518c\u8868\u66f4\u6539\u6216\u7f51\u7edc\u8fde\u63a5\u3002\u4f8b\u5982\uff0c\u4e0e\u5176\u8bd5\u56fe\u6355\u83b7\u6240\u6709\u53ef\u80fd\u7684\u6076\u610f wevtutil \u547d\u4ee4\uff0c\u4e0d\u5982\u5bfb\u627e\u5199\u5165\u610f\u5916\u4f4d\u7f6e\u7684 wevtutil\uff08\u7cfb\u7edf\u4fe1\u606f\u53d1\u73b0\uff1f[9]\uff09\u6216\u68c0\u67e5\u4e8b\u4ef6 ID 1102 \u7684\u4e8b\u4ef6\u65e5\u5fd7\uff08\u6307\u6807\u5220\u9664\uff1f[10]\uff09 ]\uff09\u3002\u6700\u540e\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u4e0d\u53ef\u80fd\u5728 100% \u7684\u65f6\u95f4\u5185\u68c0\u6d4b\u5230 100% \u7684\u4e0d\u826f\u60c5\u51b5 - \u4f46\u662f\uff0c\u60a8\u68c0\u6d4b\u5230\u7684\u8d8a\u591a\uff0c\u653b\u51fb\u8005\u5c31\u8d8a\u96be\u4ee5\u5b8c\u5168\u88ab\u5ffd\u89c6\u3002\u56e0\u6b64\uff0c\u8003\u8651\u5230\u4e0a\u8ff0\u56e0\u7d20\u5c06\u4f7f\u60a8\u66f4\u8fd1\u4e00\u6b65\u3002 \u201c\u6b32\u542c\u4ece\u8005\uff0c\u5fc5\u77e5\u6307\u6325\u201d\uff0c\u61c2\u6307\u6325\u8005\uff0c\u5fc5\u77e5\u5bdf\u3002", "note_en": "It turns out that when it comes to computers, this sixteenth-century quote still very much applies. After all, on most operating systems, processes have a \u2018command line\u2019 component, which allows the (initiating) parent process to pass on information to the child process. The command line is accessible to this newly created process, which may change its process flow based on what is found on the command line. This concept is at the core of what makes \u2018the computer\u2019: its ability to execute a set of instructions, programs, taking input of sorts.\n Despite its fundamental role in computing, there doesn\u2019t appear to be agreement on what to call the various parts that can be found on command lines. Some consider command-line arguments, parameters, options, flags, switches to be one and the same, to some they have different meanings. This post will be using the following terminology:\n  The line in its entirety is the command line, which is comprised of command-line  arguments (separated by spaces). Although all are arguments, they have different roles: for example, the first argument is typically the  process that is being called - or, if you are within a command prompt, this would be the  command. In the above example it is followed by more arguments. More specifically, the first three are command-line  options, which typically start with a special character. Of these three options, the first two are  switches because they don\u2019t require further input, whereas the third is a  flag because it is followed by further arguments that are \u2018inputs\u2019 for this argument.\n The  option char is the character that is used as a prefix on command-line options. On Windows this is typically the forward slash ( /), on Unix-like systems hyphens ( -) are predominantly used. This is rather by convention than by rule: because the command line is parsed by the program being executed, developers are completely free in defining in what format arguments should be passed.\n Conventions are hard. Computing history has taught us that without standardisation, things tend to end in chaos - and that certainly applies to command lines.\n  The lack of standardisation in command-line parsing practices has caused confusion amongst users: it is easy to mix up the different practices, leading to unsuccessful executions and much frustration. In an attempt to help users, some programs have been designed to accept multiple conventions. A common example of this is accepting both forward slashes and hyphens as option char, as will be discussed in more detail in the next section.\n Another source of confusion is the different character encodings that are available. This has caused all sorts of compatibility issues between old programs (typically only accepting ASCII) and newer programs (nowadays often accepting UTF-8 or Unicode). Some programs attempt to fix these incompatibilities by filtering out certain characters or converting specific characters to ASCII equivalents.\n This has led to a situation in which some programs treat a variety of different command-line arguments as one and the same. You could call such instances  synonymous command lines, since despite the data passed to the process is different, their execution and outcome is identical.\n  Although being able to express the same command in different ways may be of help to some users, it tends to make detection and prevention efforts harder. Most threat detection software (AV, EDR, and so on) will monitor process executions, and look for command-line arguments that may be indicative of malicious usage. As attackers will want to go undetected, they may take advantage of the flexibility of the command line in an attempt to evade detection. This may range from small tweaks to bypass keyword-based detection, to full-blown command-line obfuscation to hide the original commands.\n A good example of obfuscation on command-line level is the the excellent work of Daniel Bohannon, DOSfuscation [ 1,  2], which specifically focusses on the Windows command-line prompt CMD. Even though the executing CMD \u2018understands\u2019 and executes the obfuscated commands, it may look unintelligble to humans, and monitoring software is also likely to be kept in the dark.\n The phenomenon of synonymous command-lines goes beyond DOSfuscation, as it applies to many more programs than just CMD. The key difference here being that you wouldn\u2019t just be fooling the command-line prompt, but the executing program itself. As will be shown later, whilst DOSfuscation efforts may end up in unobfuscated form in the recorders used by detection software, the synonymous command-line arguments will not.\n  To see this in action, we will now take a closer look at five different methods that can cause synonymous command lines.\n  Consider the Windows executable  ping. Because the program is a port of the original Unix version, the help page suggests command-line options should use a hyphen as option char, e.g.  ping -n 0 127.0.0.1. This is inconsistent with most other, Windows-native command-line tools, which use forward slashes. Presumably in an attempt to help confused users, the program also accepts the forward slash as option char:  ping /n 0 127.0.0.1 will work as well.\n Most built-in Windows executables that work with hyphens also accept forward slashes, but the reverse is not true. The command  find /i keyword for example will show all files containing the word \u2018keyword\u2019, while  find -i keyword will result in an error.\n Although forward slashes and hyphens are the most common available options, some programs support even more option chars.  certutil happens to accept hyphens, slashes, and most Unicode representations of slashes, such as the division slash (0x2215) and fraction slash (0x2044) [ 3].\n As we will see with the other variants, executables rarely document these alternative command-line options, meaning that you will find out about them either by chance, \u2018brute force\u2019 or through reverse engineering.\n  Another approach is to replace other characters (i.e. other than the option char) in the command line with similar characters. Especially when you consider the entire Unicode range, there are many variations of letters also found in the ASCII range that some processes may accept.\n Unicode contains a range for  Spacing Modifier Letters (0x02B0 - 0x02FF) [ 4], which includes characters such as \u02ea, \u02e3 and \u02e2. Some command-line parsers recognise these as letters and convert them back to l, x and s respectively. An example of this is  reg, which treats  reg export HKCU out.reg and  reg e\u02e3port HKCU out.reg as equal.\n  As it turns out, there are more Unicode ranges containing characters that are accepted by some programs.\n  In a similar vein, it is sometimes possible to insert extra characters into command lines that will be ignored by the executing program. Some executables may remove non-printable characters for example, whilst also certain printable characters may be filtered out.\n Windows Event Logs tool  wevtutil for instance seems to accept command lines that have Unicode characters from certain ranges inserted at random places. So executing  wevtutil gli hardwareevents and  wevtutil g\u08afli hardwareevents will result in the exact same output, despite the latter containing an Arabic letter in the middle of the first argument.\n  Because the characters that can be used for this technique are sometimes unsupported on the stdin of command-line prompts (e.g. because they are non-printable), you may have to insert the character using byte notation. As can be seen in the screenshot, in this case the character is passed correctly to the the process.\n  Another way of manipulating a command line whilst keeping the process flow intact is by inserting quotes. Although this may sound like a subset of the previous technique, a requirement here is that the quotes come in pairs.\n You are probably familiar with the concept of putting quotes around arguments. Take  dir &#34;c:\\windows\\&#34; for example, which is effectively the same as  dir c:\\windows\\ due to the lack of spaces. Most programs accept this convention. Less well known is that most programs accept quotes in arbitrary places: the command  dir c:\\&#34;win&#34;d&#34;&#34;ow&#34;s&#34; will also work. As long as the number of quotes per argument is even and there are no more than two subsequent quotes, most programs seem to accept this.\n  It is worth noting that working with quotes in command prompts can be tricky, as they typically handle quotes themselves before passing it on to the underlying program. A way to work around this in  cmd for example is to double every quote, so to get the equivalent execution as shown above, you would have to run  netsh ad&#34;&#34;vfi&#34;&#34;rewall show currentprofile state.\n  Having inserted and replaced characters, what remains for us to try is removing characters. Some applications allow \u2018shorthands\u2019 for otherwise lengthy command-line options, making it easier to type them out.\n This is a well-known concept in Unix-based tools (e.g.  grep -i keyword vs  grep --ignore-case keyword), but on Windows less so. Nevertheless, some programs accept shortened versions. Some programs take a similar approach to Unix and accept a one-letter version (e.g.  cmdkey /l vs  cmdkey /list), some accept an otherwise abbreviated version (e.g.  wevtutil gli vs  wevtutil get-loginfo), whilst others take a \u2018wildcard approach\u2019. An example of this is PowerShell, which for many of its keywords allows you to leave off one or more characters at the end of the keyword [ 5].\n An example of the successful execution of  powershell /encodedcommand ZQBjAGgAbwAgACIASQB0ACAAdwBvAHIAawBzACEAIgA= followed by 13 different shorthands.\n Perhaps apart from the shortest variant  /e, it seems to me that very few people are helped by accepting these shorthands whilst it does make things more complicated and unpredictable. For example, PowerShell only accepts shortened versions if it doesn\u2019t cause ambiguity between another command. For this reason the keyword  /noprofile\u2019s shortest variant is  /nop, because  /no would clash with e.g.  /noexit. Next to this \u2018wildcard approach\u2019, PowerShell in some cases also accepts acronyms, so despite not shown in the screenshot,  /ec would also work as a shorthand for  /encodedcommand.\n  As mentioned in the previous sections, there is no standard when it comes to handling command-line arguments. Some programs are very strict, whereas some programs will try very hard to turn whatever it is given into something it can understand. Finding out for a particular program what its command line behaviour is, is problematic too: help pages usually only specify the \u2018preferred\u2019 way of passing arguments (methods 1 and 5) and typically never describe how unexpected characters are treated (methods 2-4).\n The most accurate way to determine this seems to be reverse engineering. However, this is a very time-consuming activity, especially when you take the complexity of some of the programs into account. A more pragmatic approach is therefore to simply try all bypass techniques repeatedly with different characters and compare the results.\n A proof-of-concept implementation of this approach [ 6] allows us to quickly analyse which of the five described behaviours apply. A more detailed explanation of the PoC, its underlying assumptions and caveats can be found on the GitHub project page.\n For the purposes of this post, the PoC was used to analyse over 40 built-in Windows executables often seen being used in attacks.\n  Notes:1) Windows 10 version 2004 was used for the analysis;2) For each Windows executable only a single, specific command was used - other commands may result in different outcomes;3) Entries denoted with an asterisk (*) targeted a command-line argument that accepted  every variation. In the case of  nslookup -querytype=ALL (...) for example, the PoC found that the expected output was returned regardless of what character was inserted. It turns out that  nslookup ignores all letters after the first letter of a command-line option ( -q in this case), meaning the number of possible permutations is nearly infinite.\n Full reports for each tested executable, including the tested commands and the found characters, can be found on GitHub [ 6].\n  Knowing all this allows us to take a step back and look at command-line behaviour from a threat-hunting perspective.\n If you want to detect executions of programs with specific command-line arguments, synonymous command-line arguments pose a problem. For example, writing a Sigma rule [ 7] to detect  certutil executions with the  urlcache and  f arguments specified could be expressed as:\n  The problem is immediately clear: if an attackers uses  -urlcache,  /ur\u1d38cache,  /\u209eurlcache or  /url&#34;cach&#34;e - or even worse, a combination:  -\u209eu\u209er\u1d38&#34;c\u209ea\u209ech&#34;e, the command will still work, but the above rule will not pick up the behaviour. Adding all variants to the rule is not an option, as combining the various bypass techniques will result in thousands if not millions of permutations.\n An example of the successful execution of an obfuscated version of  certutil -f -urlcache -split https://wietze.github.io/robots.txt output.txt.\n The first potential solution one may try is to make the rule a bit more generic. For example, solving the option char problem, we could leave the option char out of the definition:\n  Whilst this may appear to solve the option char problem, it created a new one. Looking for  urlcache instead of  /urlcache is unlikely to cause many false positives, however, looking for just  f instead of  /f is likely to generate false positives.\n A second potential solution would be to use more clever matching options. Many EDR tools that provide functionality to hunt for process executions tend to be limited to simple \u2018string contains\u2019-esque features such as expressed in the above examples. Some allow regular expressions, but this still seems to be rare. Although Sigma supports regex values, only 7 of the 30 supported backends appear to actually implement it. Whilst this does not necessarily mean the 23 other platforms do not support it, it at least suggests it may not be an obvious path to go down. A key reason vendors may be hesitant to provide this option in the first place is performance: a normal, compiled regular expression has a complexity of  O(n), but through recursion extensions it is possible to create regexes that will never end evaluating. The Sigma project also discourages the use of regexes [ 8].\n For those tools that do support regular expressions, it is possible to work around the option char problem (assuming you replace  [-/\\\\] with a list of all option chars):\n  Regexes may also help efficiently capture shorthand keywords. Unfortunately, character insertion and substitution this is typically not feasible due to the size of options and permutations.\n Working around these types of obfuscation is never going to be watertight. More resilient methods are needed.\n  To avoid falling into the trap of tunnel visioned detection engineering, there are a few things you can do to achieve robust threat hunting processes.\n First of all, make sure rules are defined as \u2018broadly\u2019 as they reasonably can be, catching all possible variations, whilst taking into account the potential increase of false positives. The presented PoC [ 6] can be used to find variations your rule may allow for.\n Secondly, standardising your monitoring tool\u2019s output may be beneficial too. If your data is processed in a pipeline before it ends up in your analytics platform, consider adding a separate field that converts all special characters to ASCII equivalents and strips all non-alphanumeric values (to get rid of quotes and option chars). Running your rules over this field might have a higher hit rate.\n Furthermore, use data analytics to detect the obfuscation attempt itself. Look at process command lines that contain characters with a low prevalence across your IT estate, compare character density levels, or even simply look for command-line arguments that contain non-ASCII characters and work from there.\n Also make sure your focus is broader than process strings alone. Where possible, focus on the actual behaviour that the command line is trying to achieve, such as file creations, registry changes or network connections. For example, rather than trying to capture all possibly malicious  wevtutil commands, it may be better to look for  wevtutil writing to unexpected locations (system information discovery? [ 9]) or checking the event log for event ID 1102 (indicator removal? [ 10]).\n Finally, bear in mind that it won\u2019t be possible to detect 100% of the badness 100% of the time - however, the more you you  can detect, the harder you are making it for an attacker to go completely unnoticed. And as such, taking the above into account will get you one step closer.\n \u201c He who wishes to be obeyed must know how to command\u201d, and he who knows how to command will know how to detect.", "posttime": "2021-07-24 19:07:36", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "windows,\u547d\u4ee4\u884c,command", "title": "Windows \u547d\u4ee4\u884c\u6df7\u6dc6", "title_en": "Windows Command-Line Obfuscation", "transed": 1, "url": "https://www.wietzebeukema.nl/blog/windows-command-line-obfuscation", "via": "", "real_tags": ["windows", "\u547d\u4ee4\u884c", "command"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1069438, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "LWN \u8ba2\u9605\u8005\u4e3a\u60a8\u5e26\u6765\u7684\u8fd9\u7bc7\u6587\u7ae0 LWN.net \u7684\u8ba2\u9605\u8005\u4f7f\u8fd9\u7bc7\u6587\u7ae0\u2014\u2014\u4ee5\u53ca\u56f4\u7ed5\u5b83\u7684\u4e00\u5207\u2014\u2014\u6210\u4e3a\u53ef\u80fd\u3002\u5982\u679c\u60a8\u6b23\u8d4f\u6211\u4eec\u7684\u5185\u5bb9\uff0c\u8bf7\u8d2d\u4e70\u8ba2\u9605\u5e76\u8ba9\u4e0b\u4e00\u7ec4\u6587\u7ae0\u6210\u4e3a\u53ef\u80fd\u3002 7 \u6708 4 \u65e5\uff0cRust for Linux \u9879\u76ee\u53d1\u5e03\u4e86\u53e6\u4e00\u4e2a\u7248\u672c\u7684\u8865\u4e01\u96c6\uff0c\u589e\u52a0\u4e86\u5bf9\u5185\u6838\u8bed\u8a00\u7684\u652f\u6301\u3002\u8be5\u9879\u76ee\u4f3c\u4e4e\u5df2\u7ecf\u51c6\u5907\u597d\u8003\u8651\u8fdb\u5165\u4e3b\u7ebf\u3002\u4e0d\u8fc7\uff0c\u4e5f\u8bb8\u4e00\u4e2a\u66f4\u5927\u7684\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff1a\u5185\u6838\u5f00\u53d1\u793e\u533a\u662f\u5426\u4e3a Rust \u505a\u597d\u4e86\u51c6\u5907\uff1f\u90a3\u90e8\u5206\u4f3c\u4e4e\u4ecd\u7136\u60ac\u800c\u672a\u51b3\u3002 Miguel Ojeda \u5df2\u88ab\u8058\u7528\u5168\u804c\u4ece\u4e8b\u8be5\u9879\u76ee\uff0c\u4ed6\u53d1\u5e03\u4e86\u8865\u4e01\u96c6\uff1b\u5728\u6c42\u804c\u4fe1\u4e2d\uff0c\u4ed6\u5217\u51fa\u4e86\u81ea 4 \u6708\u4efd\u53d1\u5e03 RFC \u8865\u4e01\u96c6\u4ee5\u6765\u7684\u4e00\u4e9b\u66f4\u6539\u548c\u66f4\u65b0\u3002\u7279\u522b\u662f\uff0c\u5728\u5931\u8d25\u65f6\u8c03\u7528 panic!() \u7684\u5206\u914d\u5df2\u88ab\u66ff\u6362\u3002\u5df2\u7ecf\u4e3a\u5185\u6838\u9879\u76ee\u521b\u5efa\u4e86 alloc crate \u7684\u4fee\u6539\u7248\u672c\uff0c\u5c3d\u7ba1\u8ba1\u5212\u662f\u8ba9\u66f4\u6539\u8fdb\u5165\u4e0a\u6e38\u9879\u76ee\uff0c\u4ee5\u4fbf\u6700\u7ec8\u53ef\u4ee5\u5220\u9664\u81ea\u5b9a\u4e49\u7248\u672c\u3002\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0c\u6dfb\u52a0\u4fee\u6539\u540e\u7684 crate \u7684\u8865\u4e01\u663e\u7136\u592a\u5927\u4e86\u7edd\u6740\u6863\u6848\uff0c\u5c3d\u7ba1\u5b83\u786e\u5b9e\u51fa\u73b0\u5728 LWN \u6863\u6848\u4e2d\u3002\u4ed6\u8bf4\uff0c\u5728\u5185\u6838\u8bbe\u65bd\u7684 Rust \u62bd\u8c61\u65b9\u9762\u53d6\u5f97\u4e86\u66f4\u591a\u8fdb\u5c55\uff0c\u5305\u62ec\u201c\u7ea2\u9ed1\u6811\u3001\u5f15\u7528\u8ba1\u6570\u5bf9\u8c61\u3001\u6587\u4ef6\u63cf\u8ff0\u7b26\u521b\u5efa\u3001\u4efb\u52a1\u3001\u6587\u4ef6\u3001io \u5411\u91cf\u2026\u2026\u201d\uff0c\u4ee5\u53ca\u5bf9\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301\u7684\u8865\u5145\u3002\u9664\u6b64\u4e4b\u5916\uff0cAndroid Binder \u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u7684 Rust \u9a71\u52a8\u7a0b\u5e8f\u5177\u6709\u66f4\u591a\u529f\u80fd\uff0c\u5e76\u4e14\u6b63\u5728\u5f00\u53d1\u7528\u4e8e\u67d0\u4e9b Raspberry Pi \u578b\u53f7\u4e0a\u53ef\u7528\u7684\u786c\u4ef6\u968f\u673a\u6570\u751f\u6210\u5668\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002\u4f46\u662f\u7f3a\u4e4f\u201c\u771f\u6b63\u7684\u201d\u8f66\u624b\u662f 4 \u6708\u4efd\u7684\u75c7\u7ed3\u4e4b\u4e00\uff0c\u8fd9\u6b21\u53c8\u88ab\u63d0\u51fa\u6765\u4e86\u3002 Christoph Hellwig \u8868\u793a\uff0c\u5982\u679c\u8fd9\u662f\u53d1\u5e03\u7684\u610f\u56fe\uff0c\u4ed6\u5f3a\u70c8\u53cd\u5bf9\u5408\u5e76\u4ee3\u7801\u3002\u5728\u6c42\u804c\u4fe1\u4e2d\uff0cOjeda \u8bf4\u8865\u4e01\u96c6\u6b63\u5728\u6dfb\u52a0\u5230 linux-next\uff0c\u5e76\u4e14\u4ed6\u786e\u8ba4\u6b63\u5728\u63d0\u4ea4\u5408\u5e76\u3002 Hellwig \u5e0c\u671b\u770b\u5230 Rust \u5728\u88ab\u5305\u542b\u4e4b\u524d\u8bc1\u660e\u81ea\u5df1\uff1a[...] \u9996\u5148\u8bc1\u660e\u5b83\u786e\u5b9e\u6709\u7528\u3002\u6709\u7528\u7684\u5c06\u662f\u50cf nvme \u8fd9\u6837\u7684\u771f\u5b9e\u9a71\u52a8\u7a0b\u5e8f\u6216 USB \u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5b83\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5de5\u4f5c\u5e76\u663e\u793a\u51fa\u4f18\u4e8e\u73b0\u6709\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f18\u52bf\u3002\u5728\u5b83\u663e\u793a\u51fa\u5982\u6b64\u6709\u7528\u4e4b\u524d\uff0c\u5b83\u53ea\u4f1a\u62d6\u7d2f\u5176\u4ed6\u4eba\u3002 Ojeda \u6307\u51fa Binder \u9a71\u52a8\u7a0b\u5e8f\u662f\u4e00\u4e2a\u201c\u975e\u5e73\u51e1\u7684\u6a21\u5757\u201d\uff0c\u201c\u5df2\u7ecf\u5728\u5de5\u4f5c\u201d\uff0c\u4f46\u627f\u8ba4\u771f\u6b63\u7684\u786c\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u662f\u4e00\u4e2a\u91cd\u8981\u7684\uff08\u5e76\u4e14\u76ee\u524d\u8fd8\u6ca1\u6709\uff09\u3002\u4f46\u662f\uff0c\u6c42\u804c\u4fe1\u5217\u51fa\u4e86\u4e00\u4e9b\u5bf9\u8be5\u9879\u76ee\u611f\u5174\u8da3\u6216\u5df2\u7ecf\u53c2\u4e0e\u5176\u4e2d\u7684\u7ec4\u7ec7\uff0cOjeda \u8ba4\u4e3a\u8fd9\u4e5f\u6709\u52a9\u4e8e\u8bc1\u660e\u8be5\u9879\u76ee\uff1a\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u6211\u4eec\u5df2\u7ecf\u5f00\u59cb\u8ba9\u4e0b\u6e38\u7528\u6237\u548c\u5176\u4ed6\u611f\u5174\u8da3\u7684\u7528\u6237\u4ea7\u751f\u5174\u8da3\u3002\u5404\u65b9\u8868\u793a\u652f\u6301\u3002\u7136\u800c\uff0c\u5176\u4ed6\u4eba\u5219\u66f4\u52a0\u4fdd\u5b88\uff0c\u53ea\u6709\u5728\u6211\u4eec\u5904\u4e8e\u4e3b\u7ebf\u65f6\u624d\u4f1a\u5f00\u59cb\u6295\u8d44\u5b83\uff0c\u5373\u5982\u679c\u5df2\u7ecf\u505a\u51fa\u662f\u5426\u4f7f\u7528 Rust \u7684\u51b3\u5b9a\u3002\u4f46\u662f\uff0cGreg Kroah-Hartman \u8bf4\uff0c\u7531\u4e8e\u4e00\u4e9b\u4e0d\u540c\u7684\u539f\u56e0\uff0cBinder\u201c\u9a71\u52a8\u7a0b\u5e8f\u201d\u5e76\u4e0d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002\u5b83\u7f3a\u5c11\u4e00\u4e2a\u76f8\u5f53\u5927\u7684\u529f\u80fd\uff08binderfs\uff09\uff0c\u4f46\u5b83\u4e5f\u51e0\u4e4e\u6ca1\u6709\u5e2e\u52a9\u5c55\u793a Rust \u5c06\u5982\u4f55\u4e0e\u5185\u6838\u7684\u5176\u4f59\u90e8\u5206\u76f8\u9002\u5e94\u3002\u548c\u4ee5\u524d\u4e00\u6837\uff0c\u4ed6\u5f3a\u70c8\u5efa\u8bae\u505a\u4e00\u4e9b\u6709\u52a9\u4e8e\u89e3\u51b3\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5bf9 Rust \u7684\u4e00\u4e9b\u95ee\u9898\u7684\u5de5\u4f5c\uff1a\u5e76\u4e0d\u662f\u8bf4\u5b83\u6ca1\u6709\u7528\u9014\uff0c\u800c\u662f Binder \u548c\u5185\u6838\u5176\u4f59\u90e8\u5206\u4e4b\u95f4\u7684\u4ea4\u4e92\u975e\u5e38\u5c0f\u4e14\u5177\u4f53. \u51e0\u4e4e\u6ca1\u6709\u4eba\u4f1a\u518d\u5199\u7684\u4e1c\u897f\u3002\u8bf7\u5728\u4e00\u4e2a\u771f\u6b63\u7684\u9a71\u52a8\u7a0b\u5e8f\u4e0a\u5de5\u4f5c\uff0c\u4ee5\u5e2e\u52a9\u8bc1\u660e\u6216\u53cd\u9a73\u8fd9\u4e00\u5207\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u6709\u5f88\u591a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u9700\u8981\u89e3\u51b3\uff0c\u5f53\u4f60\u505a\u8fd9\u6837\u7684\u4e8b\u60c5\u65f6\uff0c\u4f60\u4f1a\u9047\u5230\u8fd9\u4e9b\u95ee\u9898\u3002\nRust \u8bc1\u660e\u81ea\u5df1\u7684\u4e3b\u9898\u4e5f\u51fa\u73b0\u5728 ksummit-discuss \u90ae\u4ef6\u5217\u8868\u4e0a\u7684\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u3002 6 \u6708\u5e95\uff0cOjeda \u5728\u4eca\u5e74\u7684 Linux PlumbersConference \u4e0a\u63d0\u51fa\u5c06 Rust for Linux \u4f5c\u4e3a Kernel Summit \u8d5b\u9053\u7684\u6280\u672f\u4e3b\u9898\u3002 7 \u6708 6 \u65e5\uff0cLinus Walleij \u56de\u590d\uff0c\u540c\u610f\u8fd9\u662f\u4e00\u4e2a\u5e94\u8be5\u8ba8\u8bba\u7684\u8bdd\u9898\u3002\u4ed6\u6307\u51fa\uff0c\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5df2\u7ecf\u9700\u8981\u5173\u6ce8\u5f88\u591a\u8bed\u8a00\uff08\u4f8b\u5982 C\u3001\u6c47\u7f16\u3001Make\u3001Bash\u3001Perl\u3001Python \u7b49\uff09\uff0c\u6240\u4ee5\u4ed6\u5fc3\u4e2d\u7684\u4e00\u4e2a\u95ee\u9898\u662f Rust \u5c06\u5e26\u6765\u4ec0\u4e48\u503c\u5f97\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\u3002\u8be5\u6d88\u606f\u5f15\u53d1\u4e86\u5173\u4e8e Rust \u5982\u4f55\u9002\u5408\u4ee5\u53ca\u5b9e\u9a8c\u5c06\u8d70\u5411\u4f55\u65b9\u7684\u8ba8\u8bba\u3002\u5185\u6838\u5f00\u53d1\u4eba\u5458\u663e\u7136\u6709\u4e9b\u62c5\u5fc3\u5fc5\u987b\u4e86\u89e3 Rust \u624d\u80fd\u7ee7\u7eed\u5f00\u53d1\u5185\u6838\u3002Ojeda \u8bd5\u56fe\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u8f7b\u8fd9\u4e9b\u62c5\u5fe7\uff0c\u4f46\u627f\u8ba4\u5927\u591a\u6570\u5185\u6838\u5f00\u53d1\u4eba\u5458\u6700\u7ec8\u9700\u8981\u4e86\u89e3\u8be5\u8bed\u8a00\u3002 Ojeda \u8bf4\uff0c\u76ee\u524d\uff0c\u8be5\u9879\u76ee\u7684\u76ee\u7684\u662f\u4e0e\u5e0c\u671b\u5411\u5176\u5b50\u7cfb\u7edf\u6dfb\u52a0 Rust API \u7684\u7ef4\u62a4\u8005\u5408\u4f5c\u3002\u8fd9\u5c06\u5728\u5185\u6838\u4e2d\u5f15\u5bfc\u5bf9 Rust \u7684\u652f\u6301\uff0c\u5e76\u6709\u52a9\u4e8e\u7f13\u89e3 Leon Romanovsky\u3001JamesBottomley \u548c\u5176\u4ed6\u3002 Romanovsky \u62c5\u5fc3\u5728\u5177\u6709\u4e24\u79cd\u8bed\u8a00\u7684\u9a71\u52a8\u7a0b\u5e8f\u7684\u7cfb\u7edf\u4e2d\u8fdb\u884c\u91cd\u6784\uff0c\u5c24\u5176\u662f\u8de8\u5b50\u7cfb\u7edf\u91cd\u6784\u3002 Bottomley \u5efa\u8bae Rust \u4ee3\u7801\u7684\u5ba1\u9605\u8005\u4f1a\u66f4\u5c11\uff0c\u6240\u4ee5 bug \u66f4\u5bb9\u6613\u6e9c\u8fdb\u6765\uff1a\u7531\u4e8e\u6211\u4eec\u73b0\u5728\u7684\u5927\u591a\u6570 CVE \u7c7b\u578b\u95ee\u9898\u901a\u5e38\u662f\u7f16\u7a0b\u9519\u8bef\uff0c\u7f3a\u4e4f\u5ba1\u9605\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f16\u7a0b\u9519\u8bef\u7c7b\u578b\u9519\u8bef\u7684\u589e\u52a0\uff0c\u8fd9\u4e9b\u9519\u8bef\u4e0d\u662f\u88ab\u7981\u6b62\u7684\u66f4\u5b89\u5168\u7684\u5185\u5b58\u6a21\u578b\u3002\u5728\u77ed\u671f\u5185\uff0c\u8fd9\u4e9b\u90fd\u662f\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4f46\u76ee\u6807\u662f\u8ba9 Rust \u77e5\u8bc6\u5728\u5185\u6838\u5f00\u53d1\u4eba\u5458\u4e2d\u5f97\u5230\u66f4\u5e7f\u6cdb\u7684\u4f20\u64ad\u3002\u6b63\u5982 Ojeda \u6240\u8bf4\uff1a\u6bd5\u7adf\uff0c\u5982\u679c\u6211\u4eec\u8981\u5c06 Rust \u4f5c\u4e3a\u5185\u6838\u4e2d\u7684\u7b2c\u4e8c\u8bed\u8a00\uff0c\u6211\u4eec\u5e94\u8be5\u5c1d\u8bd5\u5728\u5408\u7406\u7684\u65f6\u95f4\u8303\u56f4\u5185\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u52a0\u5165\uff0c\u81f3\u5c11\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u8fd9\u6837\u3002\u6b63\u5982 Laurent Pinchart \u6307\u51fa\u7684\u90a3\u6837\uff0c\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u89c2\u70b9\uff0c\u9700\u8981\u5728\u8ba8\u8bba\u4e2d\u66f4\u660e\u786e\u5730\u5f3a\u8c03\uff1a[...] \u5728\u5185\u6838\u4e2d\u91c7\u7528 Rust \u4f5c\u4e3a\u7b2c\u4e8c\u8bed\u8a00\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5f71\u54cd\u6709\u9650\u7684\u6280\u672f\u51b3\u5b9a\uff0c\u4e5f\u662f\u4e00\u4e2a\u8fc7\u7a0b\u51b3\u5b9a\u8fd9\u5c06\u4e3a\u5927\u591a\u6570\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5b66\u4e60 Rust \u521b\u9020\u6761\u4ef6\u3002\u8fd9\u662f\u5426\u5e94\u8be5\u548c\u5c06\u4f1a\u53d1\u751f\u662f\u6211\u4eec\u6b63\u5728\u8fa9\u8bba\u7684\u95ee\u9898\uff0c\u4f46\u65e0\u8bba\u7ed3\u679c\u5982\u4f55\uff0c\u6b63\u786e\u5730\u8868\u8fbe\u95ee\u9898\u5e76\u5e7f\u6cdb\u5730\u4e86\u89e3\u5176\u542b\u4e49\u662f\u5f88\u91cd\u8981\u7684\u3002\u5f53\u7136\uff0c\u8fd8\u6709\u5f88\u591a\u6280\u672f\u969c\u788d\u9700\u8981\u6e05\u9664\u3002\u8fd9\u4e9b\u9886\u57df\u4e4b\u4e00\u662f Linux \u9a71\u52a8\u7a0b\u5e8f\u6a21\u578b\u548c\u968f\u4e4b\u800c\u6765\u7684\u5bf9\u8c61\u751f\u547d\u5468\u671f\u5904\u7406\u3002 Roland Dreier \u5efa\u8bae\u50cf devres\uff08\u5373\u7ba1\u7406\u8bbe\u5907\u8d44\u6e90\uff09\u8fd9\u6837\u7684\u63a5\u53e3\u53ef\u4ee5\u907f\u514d\u5f88\u591a\u4ed6\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u770b\u5230\u7684\u5173\u4e8e\u751f\u547d\u5468\u671f\u7ba1\u7406\u7684\u95ee\u9898\uff0c\u7279\u522b\u662f\u9519\u8bef\u8def\u5f84\uff0c\u4f46\u5b83\u6ca1\u6709\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002 Walleij \u4e0d\u540c\u610f\u5b83\u6ca1\u6709\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4f46\u5b8c\u5168\u4e0d\u786e\u5b9a Rust \u5f00\u5173\u662f\u5426\u66f4\u597d\uff1a\u6211\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u6210\u529f\uff0c\u4eba\u4eec\u53ea\u9700\u8981\u5b66\u4e60\u66f4\u591a\u3002\u4f46\u662f\uff0c\u5982\u679c\u5b66\u4e60\u66f4\u597d\u884c\u4e3a\u7684\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u6d17\u724c\u6574\u4e2a\u68cb\u76d8\u5e76\u7528 Rust \u7f16\u5199\u7684\u9a71\u52a8\u7a0b\u5e8f\u66ff\u6362\u5b83\uff0c\u6211\u4e0d\u77e5\u9053\uff1f\u4e5f\u8bb8\uff1f\u5bf9\u4e8e Kroah-Hartman \u6765\u8bf4\uff0c\u5728 Rust \u4e2d\u770b\u5230\u5185\u6838\u7684\u771f\u5b9e\u9a71\u52a8\u7a0b\u5e8f\u5c06\u6709\u52a9\u4e8e\u5f04\u6e05\u695a\u8fd9\u4e9b\u95ee\u9898\u5c06\u5982\u4f55\u5728\u8bed\u8a00\u4e2d\u89e3\u51b3\u3002\u6709\u4e00\u4e9b\u96be\u9898\u9700\u8981\u89e3\u51b3\uff1a\u8fd9\u5c06\u662f\u201c\u6709\u8da3\u7684\u201d Rust \u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u5fc5\u987b\u5f04\u6e05\u695a\u5982\u4f55\u5c06\u6211\u4eec\u5f53\u524d\u5728\u9a71\u52a8\u7a0b\u5e8f\u6a21\u578b\u4e2d\u62e5\u6709\u7684\u5f15\u7528\u8ba1\u6570\u5bf9\u8c61\u6620\u5c04\u5230 Rust \u63a7\u5236\u7684\u5bf9\u8c61\u5e76\u4fdd\u6301\u4e00\u5207\u6b63\u786e\u540c\u6b65\u3002\u5bf9\u4e8e\u666e\u901a\u4ee3\u7801\uff0c\u5185\u5b58\u88ab\u5206\u914d\u7ed9\u4e00\u4e2a\u7279\u5b9a\u5bf9\u8c61\uff08\u7ed3\u6784\u8bbe\u5907\uff09\u4f46\u8fd8\u88ab\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff08cdev\uff09\u5f15\u7528\u7684\u4e8b\u5b9e\u3002\u50cf\u8fd9\u6837\u7684 devm_* \u7528\u6237\u4f3c\u4e4e\u6ca1\u6709\u610f\u8bc6\u5230\u8fd9\u91cc\u53d1\u751f\u4e86\u4e24\u4e2a\u5355\u72ec\u7684\u5bf9\u8c61\u751f\u547d\u5468\u671f\uff0c\u56e0\u4e3a\u4ea4\u4e92\u6709\u65f6\u5f88\u5fae\u5999\u3002\u6211\u5f88\u671f\u5f85 Rust \u5b9e\u73b0\u5c06\u5982\u4f55\u5904\u7406\u6240\u6709\u8fd9\u4e9b\uff0c\u56e0\u4e3a\u6211\u4e0d\u77e5\u9053\u3002\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\u6240\u6709\u8fd9\u4e9b\u5bfc\u81f4\u4e86\u54ea\u91cc\u3002 Walleij \u60f3\u77e5\u9053\u5185\u6838\uff08\u5373\u9a71\u52a8\u7a0b\u5e8f\uff09\u7684\u201c\u53f6\u8282\u70b9\u201d\u662f\u5426\u5b9e\u9645\u4e0a\u662f\u4ece\u5c55\u793a\u8bed\u8a00\u4f18\u52bf\u7684\u89d2\u5ea6\u51fa\u53d1\u7684\u6700\u4f73\u4f4d\u7f6e\u3002\u4ed6\u8fd8\u5728 4 \u6708\u4efd\u7684\u957f\u7bc7\u6d88\u606f\u4e2d\u8be2\u95ee\u4e86\u8fd9\u4e00\u70b9\u3002\u4ed6\u7684\u90e8\u5206\u95ee\u9898\u662f\u51b3\u5b9a\u4ece\u9a71\u52a8\u7a0b\u5e8f\u5f00\u59cb\u662f\u5426\u662f\u51fa\u4e8e\u5176\u4ed6\u539f\u56e0\uff1a\u5982\u679c\u9996\u5148\u505a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u6574\u4e2a\u57fa\u672c\u539f\u7406\u662f\u6218\u7565\u6027\u7684\uff0c\u4e0d\u4e00\u5b9a\u4f1a\u7ed9\u8be5\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5b50\u7cfb\u7edf\u5e26\u6765\u4efb\u4f55\u597d\u5904\uff0c\u800c\u662f\u4f5c\u4e3a\u8bd5\u9a8c\u573a\u548c\u8bd5\u9a8c\u573a\uff0c\u90a3\u4e48\u8be5\u6218\u7565\u9700\u8981\u660e\u786e\u5e76\u88ab\u6bcf\u4e2a\u4eba\u7406\u89e3\u3002\u56e0\u6b64\uff0c\u867d\u7136\u6211\u4eec\u7406\u89e3 Rust \u4f5c\u4e3a\u6240\u6709\u8fd9\u4e9b $UPSIDES \u9996\u5148\u505a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7eaf\u7cb9\u662f\u6218\u7565\u6027\u7684\uff0c\u5bf9\u5417\uff1f\u6211\u8ba4\u4e3a\u4e5f\u63d0\u5230\u4e86\u5982\u679c\u5b83\u6ca1\u6709\u89e3\u51b3\u5c31\u53ef\u4ee5\u64a4\u56de\u6574\u4e2a\u4e8b\u60c5\u7684\u80fd\u529b\uff1f\u4ed6\u8fd8\u8be2\u95ee\u4e86\u7528 Rust \u7f16\u5199\u6574\u4e2a\u5b50\u7cfb\u7edf\u7684\u95ee\u9898\u3002\u8fd9\u5c06\u9700\u8981\u5c06 Rust API \u66b4\u9732\u7ed9\u5185\u6838\u4e2d\u5176\u4ed6\u5730\u65b9\u7684 C \u4ee3\u7801\u3002\u5b83\u4e5f\u6709\u53ef\u80fd\u5141\u8bb8\u5728\u5185\u6838\u4e2d\u5411\u8d8a\u6765\u8d8a\u591a\u7684 Rust \u6f14\u8fdb\uff1a\u5982\u679c\u6211\u4eec\u60f3\u5728 Rust \u4e2d*\u7f16\u5199*\u4e00\u4e2a\u5b50\u7cfb\u7edf\uff0c\u90a3\u4e48\u5b83\u5f53\u7136\u4f1a\u4ee5\u53e6\u4e00\u79cd\u65b9\u5f0f\uff1aRust \u9700\u8981\u5c06 API \u66b4\u9732\u7ed9 C\u3002\u6211\u5047\u8bbe\u5b8f\u4f1f\u7684\u613f\u666f\u662f\u5728\u90a3\u4e4b\u540e\uff0cRust \u5c06\u4e00\u6b21\u5403\u6389 Linux\u3002\u5982\u679c\u5b83\u8bc1\u660e\u6bd4 C \u66f4\u597d\uff0c\u90a3\u5c31\u662f\u3002 Ojeda \u8bf4\uff0c\u867d\u7136\u53ef\u4ee5\u5c06 Rust API \u66b4\u9732\u7ed9\u7cfb\u7edf\u7684 C \u90e8\u5206\uff0c\u4f46\u4ed6\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\u3002\u95ee\u9898\u662f C \u8c03\u7528\u8005\u5931\u53bb\u4e86 Rust \u5e26\u6765\u7684\u5f88\u591a\u597d\u5904\uff1a\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4f1a\u907f\u514d\u5c06 Rust \u5b50\u7cfb\u7edf\u66b4\u9732\u7ed9 C\u3002\u5f53\u7136\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u5e76\u4e14\u5b83\u5728*\u5b9e\u73b0*\u4e2d\u4e3a\u60a8\u63d0\u4f9b\u4e86 Rust \u7684\u4f18\u52bf\u5b50\u7cfb\u7edf\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5fc5\u987b\u516c\u5f00\u4e00\u4e2a C API\uff0c\u4f60\u5c06\u5931\u53bb\u66f4\u4e30\u5bcc\u7684\u7c7b\u578b\u7cfb\u7edf\u7684\u5927\u90e8\u5206\u4f18\u52bf\uff0c\u4ee5\u53ca Rust \u4f5c\u4e3a\u4e00\u79cd\u8bed\u8a00\u4e3a\u5b50\u7cfb\u7edf\u7684\u6d88\u8d39\u8005\u5e26\u6765\u7684\u4fdd\u8bc1\u3002\u7c7b\u4f3c\u5730\uff0c\u7ea6\u7ff0\u5185\u65af\u00b7\u4f2f\u683c\u8be2\u95ee\u662f\u5426\u7528 Rust \u66ff\u6362\u5b50\u7cfb\u7edf\u7684\u90e8\u5206\uff0c\u4f46\u5c06\u9a71\u52a8\u7a0b\u5e8f\u7559\u5728 C \u4e2d\u2014\u2014\u6709\u6548\u5730\u4e0e\u73b0\u6709\u8ba1\u5212\u76f8\u53cd\u3002 Ojeda \u518d\u6b21\u8868\u793a\u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u4f46\u544a\u8beb\u4e0d\u8981\u5931\u53bb Rust \u529f\u80fd\u548c\u4fdd\u8bc1\u3002\u6b64\u5916\uff0c\u6709\u4e9b\u67b6\u6784\u6b64\u65f6\u6ca1\u6709 Rustcompiler \u53ef\u7528\uff0c\u56e0\u6b64\u73b0\u5728\u8003\u8651\u57fa\u4e8e Rust \u7684\u5b50\u7cfb\u7edf\u53ef\u80fd\u8fd8\u4e3a\u65f6\u8fc7\u65e9\u3002\u8be5\u9879\u76ee\u7684\u6700\u7ec8\u76ee\u6807\u5e76\u4e0d\u5b8c\u5168\u6e05\u695a\u3002\u5982\u679c\u6240\u6709\u7684 Linux \u9a71\u52a8\u7a0b\u5e8f\u90fd\u662f\u7528 Rust \u7f16\u5199\u7684\uff0c\u90a3\u4e48\u4ecd\u7136\u4f1a\u6709\u5f88\u591a\u91cd\u8981\u7684\u90e8\u5206\u8fd0\u884c\u4e0d\u5b89\u5168\u7684 C\uff1b\u5982\u679c Rust \u540c\u65f6\u8bc1\u660e\u81ea\u5df1\uff0c\u4e0b\u4e00\u6b65\u662f\u5426\u4f1a\u53d6\u4ee3\u90a3\u4e9b\uff1f\u4f46\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u8bc1\u660e\u81ea\u5df1\u201d\u7684\u5b9e\u9645\u542b\u4e49\u4e5f\u4e0d\u6e05\u695a\u3002\u5b66\u4e60\u4e00\u95e8\u5177\u6709\u6240\u6709\u4e0d\u540c\u884c\u4e3a\u3001\u602a\u7656\u548c\u7279\u8d28\u7684\u65b0\u8bed\u8a00\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u5728\u7ef4\u62a4\u73b0\u6709\u5185\u6838\u4ee3\u7801\u4e2d\u5904\u7406\u76f8\u5f53\u591a\u7684\u590d\u6742\u6027\u7684\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\u662f\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u8981\u6c42\u3002\u66f4\u4e0d\u7528\u8bf4\u5728\u5df2\u6709\u529f\u80fd\u7684\u57fa\u7840\u4e0a\u63d0\u4f9b\u65b0\u529f\u80fd\u7684\u989d\u5916\u590d\u6742\u6027\u3002\u4e24\u4e2a\u7ebf\u7a0b\uff08\u548c\u5176\u4ed6\u5730\u65b9\uff09\u7684\u8bc4\u8bba\u8005\u4f3c\u4e4e\u76f8\u5f53\u666e\u904d\u7684\u6000\u7591\u6001\u5ea6\u53ef\u80fd\u6e90\u4e8e\u8fd9\u79cd\u5b66\u4e60\u8d1f\u62c5\u3002\u5c06 Rust \u6dfb\u52a0\u5230\u5185\u6838\u9700\u8981\u5927\u91cf\u5de5\u4f5c\uff0c\u5bf9\u4e8e\u5f88\u591a\u4e0d\u540c\u7684\u4eba\u6765\u8bf4\uff0c\u9664\u4e86\u627f\u8bfa\u4e4b\u5916\uff0c\u6ca1\u6709\u660e\u786e\u548c\u660e\u663e\u7684\u597d\u5904\uff0c\u53ea\u6709\u7528 Rust \u7f16\u5199\u7684\u6574\u4e2a\u5185\u6838\u624d\u80fd\u771f\u6b63\u5b8c\u5168\u5b9e\u73b0\u3002 \u5e78\u8fd0\u7684\u662f\uff0c\u8be5\u9879\u76ee\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e9b\u660e\u786e\u7684\u201c\u80dc\u5229\u201d \u201c\u5728\u65e9\u671f\uff0c\u8fd9\u6e05\u695a\u5730\u5c55\u793a\u4e86\u8be5\u8bed\u8a00\u7684\u6f5c\u529b\u548c\u5728\u50cf\u5185\u6838\u8fd9\u6837\u7684\u5927\u578b\u590d\u6742\u4ee3\u7801\u5e93\u4e0a\u589e\u91cf\u4f7f\u7528\u7684\u80fd\u529b\u3002\u6ca1\u6709\u5b83\uff0c\u9879\u76ee\u53ef\u80fd\u5f88\u96be\u5728\u201c\u751f\u9508\u201d\u5185\u6838\u7684\u76ee\u6807\u4e0a\u53d6\u5f97\u5f88\u5927\u8fdb\u5c55\u3002\n\uff08\u767b\u5f55\u53d1\u8868\u8bc4\u8bba\uff09&gt; Ojeda \u8bd5\u56fe\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u8f7b\u8fd9\u4e9b\u6050\u60e7\uff0c\u4f46\u786e\u5b9e\u627f\u8ba4\u5927\u591a\u6570\u5185\u6838\u5f00\u53d1\u4eba\u5458\u6700\u7ec8\u9700\u8981\u4e86\u89e3\u8be5\u8bed\u8a00\u3002\u6211\u8ba4\u4e3a\u8fd9\u662f\u6307\u8fd9\u5c01\u7535\u5b50\u90ae\u4ef6\uff1ahttps://lwn.net/ml/ksummit-discuss/CANiq72=LrxpE_2WmdDdb5...\u57fa\u672c\u4e0a\u5b83\u4f3c\u4e4e\u662f\u5728\u8bf4\u5982\u679c\u9879\u76ee\u6210\u529f\uff0c\u6700\u7ec8\u7ed3\u679c\u5e94\u8be5\u662f\uff0c\u5982\u679c\u4f60\u60f3\u8981\u66f4\u6539\u5177\u6709 Rust \u7ed1\u5b9a\u7684 API\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4e86\u89e3\u8fd9\u4e9b Rust \u7ed1\u5b9a\uff0c\u4ee5\u4fbf\u60a8\u4e5f\u53ef\u4ee5\u8c03\u6574\u5b83\u4eec\u3002\u8fd9\u5f88\u6709\u610f\u4e49\uff0c\u5982\u679c\u60a8\u66f4\u6539\u7834\u574f\u5176\u4ed6\u5185\u6838\u4ee3\u7801\u7684\u5185\u6838\u4ee3\u7801\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u4fee\u590d\u5176\u4ed6\u4ee3\u7801\u3002\u4f46\u5b83\u786e\u5b9e\u6e05\u695a\u5730\u8bf4\u660e\u4e86\u8fd9\u4e2a\u9879\u76ee\u7684\u8303\u56f4\u4ee5\u53ca\u627f\u8bfa\u8fd9\u4e2a\u9879\u76ee\u7684\u51b3\u5b9a\u6709\u591a\u5927\u3002\u4e3a\u4ec0\u4e48\u5728 LWN \u6587\u7ae0\u4e2d\u5982\u6b64\u504f\u5411\u4e8e\u8c08\u8bba Rust\uff1f\u6211\u7684\u610f\u601d\u662f\uff0c\u8fd9\u4e2a\u8865\u4e01\u96c6\u53ef\u80fd\uff08\u5e0c\u671b\uff09\u6c38\u8fdc\u4e0d\u4f1a\u5408\u5e76\uff0c\u5b83\u7684 lwn \u6587\u7ae0\u4e0e\u53d1\u5e03\u7684\u7248\u672c\u4e00\u6837\u591a\u3002\u5728\u8fd9\u91cc\u53d1\u73b0\u4e86\u591a\u5c11\u91cd\u8981\u7684\u8865\u4e01\u96c6\u5230 v2+\uff08\u5e76\u4e14\u6709\u673a\u4f1a\u767b\u9646\uff09\uff1f\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u5185\u6838\u9879\u76ee\u672a\u6765\u7684\u57fa\u672c\u51b3\u5b9a\uff1b\u5b83\u4f3c\u4e4e\u503c\u5f97\u591a\u770b\u4e00\u770b\u3002\u501f\u8c03\u3002\u6709\u53f2\u4ee5\u6765\u6700\u91cd\u8981\u7684\u53d8\u5316\u4e4b\u4e00\u3002\u8bf7\u7ee7\u7eed\u5728\u66f4\u591a\u62a5\u9053\u800c\u4e0d\u662f\u66f4\u5c11\u65b9\u9762\u72af\u9519\u3002\u4f60\u4e0d\u559c\u6b22\u7684\u504f\u89c1\u662f\u6211\u559c\u6b22\u7684\u504f\u89c1\u3002\u6709\u4e9b\u4eba\u60f3\u8981\u6539\u5584 Linux \u73af\u5883\u3002\u4ed6\u4eec\u7684\u52aa\u529b\u53ef\u80fd\u4f1a\u88ab\u62d2\u7edd\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6700\u7ec8\u4e0d\u7b26\u5408\u5408\u7406\u7684\u8fdb\u5165\u6807\u51c6\u3002\u8fd9\u65e0\u5173\u7d27\u8981\u3002\u76f8\u5173\u7684\u662f\u4ed6\u4eec\u6709\u4e00\u4e2a\u4e0e\u5927\u591a\u6570\u5176\u4ed6\u6539\u8fdb\u5de5\u4f5c\u5b8c\u5168\u4e0d\u540c\u7684\u76ee\u6807\uff0c\u5e76\u4e14\u76f8\u4fe1\u5b83\u8db3\u4ee5\u82b1\u8d39\u8d44\u6e90\uff08\u65f6\u95f4\u3001\u91d1\u94b1\u7b49\uff09\u3002\u5982\u679c\u4ed6\u4eec\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u8fd9\u79cd\u5931\u8d25\u5c06\u5f71\u54cd\u672a\u6765\u7684\u52aa\u529b\uff0c\u5305\u62ec Rust \u4ee5\u5916\u7684\u8bed\u8a00\u3002\u5f88\u597d\u7684\u7b54\u6848\uff0c\u8c22\u8c22\uff01\u6700\u91cd\u8981\u7684\u662f\uff0cRust \u53ef\u80fd\u4f1a\u7ed9 Linux \u5185\u6838\u5e26\u6765\u65b0\u7684\u5f00\u53d1\u4eba\u5458\uff0c\u5426\u5219\u4ed6\u4eec\u4e0d\u4f1a\u63a5\u89e6\u5b83\u3002 Rust \u662f\u4e00\u79cd\u9002\u9500\u5bf9\u8def\u7684\u7f16\u7a0b\u8bed\u8a00\uff0cC \u662f\u4f20\u7edf\u8bed\u8a00\u3002\u4ece\u4efb\u4f55\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u5207\u6362\u5230 C \u611f\u89c9\u5c31\u50cf\u8fdb\u5165\u4e86\u96f7\u533a\u3002\u4ece\u7528\u6237\u7a7a\u95f4\u5230\u5185\u6838\u5f00\u53d1\u65f6\u66f4\u662f\u5982\u6b64\u3002\n&gt; \u4ece\u4efb\u4f55\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\u5207\u6362\u5230 C \u611f\u89c9\u5c31\u50cf\u8fdb\u5165\u4e86\u96f7\u533a\u3002\u4ece\u7528\u6237\u7a7a\u95f4\u5230\u5185\u6838\u5f00\u53d1\u65f6\u66f4\u662f\u5982\u6b64\u3002\u786e\u5207\u5730\u3002 C\u6709\u5f88\u591afootguns\u3002 C++ \u6709\u66f4\u591a\u7684\u811a\u6b65\u58f0\u3002\u4f60\u53ef\u4ee5\u7528 C++ \u7f16\u5199\u6f02\u4eae\u3001\u5e72\u51c0\u3001\u7b80\u6d01\u7684\u4ee3\u7801\u2026\u2026\u4f46\u4f60\u65e0\u6cd5\u907f\u514d\u5b83\u4eec\u2014\u2014\u5c24\u5176\u662f\u5f53\u7f16\u8bd1\u5668\u5f00\u53d1\u4eba\u5458\u6bcf\u5e74\u5411\u8bed\u8a00\u4e2d\u6dfb\u52a0\u8d8a\u6765\u8d8a\u591a\u7684\u4ee3\u7801\u65f6\u3002 Rust \u4e0d\u4f1a\u8bd5\u56fe\u4ece\u8bed\u8a00\u4e2d\u5220\u9664footguns\uff08\u5b9e\u9645\u4e0a\uff0c\u5f53\u60a8\u5bf9\u5185\u6838\u8fdb\u884c\u7f16\u7a0b\u65f6\u8fd9\u57fa\u672c\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\uff09\uff0c\u800c\u662f\u5c1d\u8bd5\u786e\u4fdd\u5b83\u4eec\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u88ab\u6807\u8bb0\u4e3a\u4e0d\u5b89\u5168\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4ece\u7406\u8bba\u4e0a\u8bb2\uff0c\u9a71\u52a8\u7a0b\u5e8f\u542c\u8d77\u6765\u662f\u6700\u6709\u5e0c\u671b\u79fb\u690d\u5230 Rust \u7684\u539f\u56e0\uff1a\u5b83\u4eec\u901a\u5e38\u662f\u7531\u786c\u4ef6\u4eba\u5458\u7f16\u5199\u7684\uff0c\u4ed6\u4eec\u6ca1\u6709\u5224\u65ad\u6240\u6709\u8fd9\u4e9b\u6b65\u67aa\u7684\u7ecf\u9a8c\u3002\u5e76\u4e14\uff0c\u5e0c\u671b API \u53ef\u4ee5\u63d0\u4f9b\u7ed9\u4ed6\u4eec\uff0c\u5141\u8bb8\u4ed6\u4eec\u5728\u9ed8\u8ba4\u7684\u3001\u5b89\u5168\u7684\u3001Rust \u4e2d\u7f16\u5199\u9a71\u52a8\u7a0b\u5e8f\u3002\u4f46\u662f\u5982\u679c\u4f60\u5c06\u5185\u6838\u7684\u6838\u5fc3\u91cd\u5199\u4e3a Rust ......\u6536\u76ca\u4f1a\u5c0f\u5f97\u591a\uff1a\u4f60\u8d8a\u63a5\u8fd1\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u7684\u9ed1\u6697\u9b54\u6cd5\uff0c\u5c31\u4f1a\u6709\u66f4\u591a\u7684\u5185\u5728\u811a\u6b65\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u4e3a\u771f\u6b63\u7684\u786c\u4ef6\u5b9e\u73b0\u771f\u6b63\u7684\u9a71\u52a8\u7a0b\u5e8f\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u91cc\u7a0b\u7891\uff1a\u67d0\u4e9b\u8ba8\u538c\u7684\u811a\u6b65\u58f0\u5b58\u5728\u4e8e\u5185\u6838\u4e2d\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u4e0e\u786c\u4ef6\u4ea4\u4e92\u7684\u56fa\u6709\u7279\u6027\uff0c\u5f88\u9ad8\u5174\u770b\u5230\u751a\u81f3\u79fb\u690d\u4e00\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u9700\u8981\u591a\u5927\u7684\u80f6\u6c34\u4ee3\u7801\u3002\u5982\u679c\u80f6\u6c34\u4ee3\u7801\u6bd4\u5b9e\u9645\u7684\u9a71\u52a8\u7a0b\u5e8f\u4ee3\u7801\u591a\uff0c\u8fd9\u5f88\u597d\uff08\u5b83\u6700\u7ec8\u4f1a\u4e0e\u6240\u6709\u9a71\u52a8\u7a0b\u5e8f\u5171\u4eab\uff0c\u6240\u4ee5\u8fd9\u6ca1\u4ec0\u4e48\u5927\u4e0d\u4e86\u7684\uff09\uff0c\u4f46\u662f\u5982\u679c\u9a71\u52a8\u7a0b\u5e8f\u672c\u8eab\u5145\u6ee1\u4e86\u8bb8\u591a\u4e0d\u5b89\u5168\u7684\u5757\uff0c\u90a3\u4e48\u6574\u4e2a\u7ec3\u4e60\u5c31\u4f1a\u53d8\u6210\u6709\u70b9\u65e0\u610f\u4e49\u3002 Rust \u5e76\u6ca1\u6709\u8bd5\u56fe\u5f7b\u5e95\u5220\u9664footguns \u662f\u4e0d\u6b63\u786e\u7684\u3002\u4e00\u4e9b C++ \u6b65\u70ae\uff0c\u5c24\u5176\u662f\u7ee7\u627f\u81ea\u6216\u5efa\u7acb\u5728 C \u517c\u5bb9\u6027\u57fa\u7840\u4e0a\u7684 C++ \u6b65\u70ae\uff08\u5373\u4f7f\u5b83\u4eec\u4e0d\u4e00\u5b9a\u662f C \u4e2d\u7684\u6b65\u70ae\uff09\u662f\u88ab\u9057\u5fd8\u7684\u8fc7\u53bb\u7684\u9057\u7269\u3002\u4f8b\u5982\uff0c\u4e3a\u4ec0\u4e48\u5141\u8bb8\u201cchar\u201d _either_ \u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\u5e76\u4e14\u7531\u5b9e\u73b0\u6765\u9009\u62e9\uff1f\u56e0\u4e3a\u5f53\u65f6\u7684\u786c\u4ef6\u5343\u5dee\u4e07\u522b\u3002\u5feb\u8fdb\u5230 21 \u4e16\u7eaa\uff0c\u6ca1\u6709\u4eba\u5e0c\u671b\u4ed6\u4eec\u5728\u4ed6\u4eec\u4f7f\u7528\u7684 CPU \u4e0a\u62e5\u6709\u66f4\u5feb\u7684 Rust i8 \u548c u8\u3002\u90a3\u4e0d\u662f\u4e00\u56de\u4e8b\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u8981 i8 \u4f60\u5c31\u8981\u6c42 i8\uff0c\u5982\u679c\u4f60\u60f3\u8981 u8 \u4f60\u5c31\u8981\u6c42 u8\uff0c\u56e0\u6b64\u4f60\u4e0d\u80fd\u56e0\u4e3a\u5f97\u5230\u4e00\u79cd\u4e0d\u662f\u4f60\u60f3\u8c61\u7684\u7c7b\u578b\u800c\u5927\u5403\u4e00\u60ca\u3002\u540c\u6837\uff0c\u4e3a\u4ec0\u4e48\u6709\u7b26\u53f7\u6574\u6570\u5728\u6ea2\u51fa\u65f6\u6709\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\uff1f\u53e4\u4ee3\u786c\u4ef6\u4ee5\u591a\u79cd\u65b9\u5f0f\u8868\u793a\u8d1f\u6570\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u6700\u5927\u7684\u517c\u5bb9\u6027\uff0cC \u65e0\u6cd5\u6307\u5b9a\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u4e5f\u8bb8\u5e94\u8be5\u8bf4\u5e73\u53f0\u5b9a\u4e49\uff0c\u73b0\u5728\u592a\u665a\u4e86\u3002\u5f88\u597d\uff0c\u4f46\u662f\u4eca\u5929\u53ef\u7528\u7684\u6bcf\u4e2a\u5e73\u53f0\u90fd\u6709\u4e8c\u8fdb\u5236\u8865\u7801\u7b97\u6cd5\uff0c\u6240\u4ee5\u8fd9\u6ca1\u6709\u7528\u3002 Rust \u53ef\u4ee5\u9884\u5148\u8bf4\u660e\u8fd9\u4e00\u70b9\u3002\u8c03\u8bd5\u9020\u6210\u6050\u614c\uff01\u5982\u679c\u60a8\u6ea2\u51fa\uff0c\u5982\u679c\u9519\u8bef\u4e00\u76f4\u5b58\u5728\u5230 Production \uff0c\u60a8\u5c06\u83b7\u5f97\u4e8c\u8fdb\u5236\u8865\u7801\u7b97\u6cd5\u5e76\u795d\u60a8\u597d\u8fd0\u3002\u5982\u679c\u60a8\u660e\u786e_\u60f3\u8981_\u5305\u88c5\u6216\u9971\u548c\u7b97\u672f\uff08\u540e\u8005\u5728\u97f3\u9891\u4e2d\u5c24\u5176\u6709\u610f\u4e49\uff09\uff0c\u60a8\u53ef\u4ee5\u5728 Rust \u4e2d\u8bf7\u6c42\u5b83\u4eec\uff0c\u65e0\u8bba\u662f\u7528\u4e8e\u4e00\u4e2a\u64cd\u4f5c\uff08\u4f8b\u5982\u9971\u548c\u52a0\u6cd5\uff09\u8fd8\u662f\u4f5c\u4e3a\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u60a8\u90fd\u4f1a\u5f97\u5230\u60a8\u60f3\u8981\u7684\u8981\u6c42\uff0c\u6ca1\u6709\u6050\u614c\uff0c\u7f16\u8bd1\u5668\u4e3a\u8fd9\u79cd\u60c5\u51b5\u751f\u6210\u4e86\u826f\u597d\u7684\u4f18\u5316\u4ee3\u7801\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u6ca1\u6709\u6d88\u9664\u6ea2\u51fa\u7684\u201c\u672a\u5b9a\u4e49\u884c\u4e3a\u201d\u7684\u811a\u6b65\u3002\u6709\u65f6\u7f16\u8bd1\u5668\u53d8\u5f97\u66f4\u597d\uff0c\u6211\u4eec\u4e0d\u518d\u9700\u8981\u8bf4\u660e\u53ef\u4ee5\u63a8\u65ad\u51fa\u4ec0\u4e48\u3002 C \u548c C++ \u90fd\u6709\u4e00\u5bf9\u4e00\u5143\u589e\u91cf\u8fd0\u7b97\u7b26\u3002\u4ed6\u4eec\u662f\u6b65\u5175\u3002 b++ \u548c ++b \u90fd\u6bd4 b += 1 \u7684\u8f93\u5165\u8981\u5c11\u4e00\u4e9b\uff0c\u4f46\u662f\u5b83\u4eec\u5c06\u5f88\u591a\u51fa\u9519\u7684\u673a\u4f1a\u6324\u8fdb\u4e86\u8fd9\u4e48\u5c11\u7684\u5b57\u7b26\u4e2d\u3002\u4e3a\u4ec0\u4e48\u662f\u5176\u4e2d\u4e24\u4e2a\uff1f\u56e0\u4e3a C \u548c C++ \u4f7f\u8fd9\u4e9b\u4e00\u5143\u8fd0\u7b97\u7b26\u5177\u6709\u7ed3\u679c\u4ee5\u53ca\u5b83\u4eec\u7684\u8d4b\u503c\u6548\u679c\uff0c\u5373\u4f7f\u60a8\u5f88\u5c11\u9700\u8981\u5b83\uff0c\u5e76\u4e14\u7ed3\u679c\u662f\u4e0d\u540c\u7684\u3002\u5728 Rust \u4e2d\uff0c\u4e00\u5143\u589e\u91cf\u4e0d\u5b58\u5728\uff0c\u5176\u4ed6\u8d4b\u503c\u8fd0\u7b97\u7b26\u6ca1\u6709\u7ed3\u679c\uff08\u4e25\u683c\u6765\u8bf4\uff0c\u5b83\u4eec\u7684\u7ed3\u679c\u662f\u7a7a\u5143\u7ec4\uff09\uff0c\u5982\u679c\u4f60\u7684\u610f\u601d\u662f a = b; b+= 1 \u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\uff0c\u5982\u679c\u4f60\u7684\u610f\u601d\u662f b+= 1; a = b \u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\u3002\u522b\u62c5\u5fc3\uff0c\u73b0\u4ee3\u7f16\u8bd1\u5668\u5f88\u806a\u660e\uff0c\u4f60\u4e0d\u4f1a\u56e0\u4e3a\u8f93\u5165\u7a0d\u5fae\u591a\u4e00\u70b9\u800c\u5f97\u5230\u66f4\u6162\u7684\u4ee3\u7801\u3002\u6709\u65f6\u540c\u65f6\u660e\u786e\u95ee\u9898\u8303\u56f4\u3002 Rust \u7f3a\u5c11 C \u548c C++ \u7684\u201cvolatile\u201d\u5173\u952e\u5b57\uff0c\u6211\u4e4b\u524d\u66fe\u8be6\u7ec6\u8ba8\u8bba\u8fc7\u3002\u8be5\u5173\u952e\u5b57\u53ef\u80fd\u662f\u9519\u8bef\u7684\u3002\u5b83\u5728 Unix \u4e2d\u7684\u7528\u9014\u5728 Rust \u4e2d\u4f5c\u4e3a\u4e00\u7ec4\u540d\u4e3a volatile_read \u548c volatile_write \u7684\u7f16\u8bd1\u5668\u5185\u90e8\u51fd\u6570\u5b58\u5728\uff08\u4e00\u7ec4\u56e0\u4e3a\u5b83\u4eec\u6709\u4e0d\u540c\u7684\u5927\u5c0f\uff0c\u4e8b\u5b9e\u8bc1\u660e\u4f60\u7684\u786c\u4ef6\u77e5\u9053\u4f60\u662f\u5199\u4e86\u4e00\u4e2a 32 \u4f4d\u6574\u6570\u8fd8\u662f\u4e24\u4e2a 16 \u4f4d\u6574\u6570\u6574\u6570\u5230\u5185\u5b58\uff09\uff0c\u5e76\u4e14\u5b83\u5728 C \u6216 C++ \u4e2d\u88ab\u9519\u8bef\u5730\u6ee5\u7528\u7684\u8bb8\u591a\u4e8b\u60c5\u4eca\u5929\u5728\u8fd9\u4e9b\u8bed\u8a00\u4e2d\u88ab\u660e\u786e\u7981\u6b62\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e0\u6cd5\u5de5\u4f5c\u3002\u6240\u4ee5\u5728\u5b9e\u8df5\u4e2d\uff0cRust \u7684 volatile_read/ volatile_write \u548c C++ volatile \u5173\u952e\u5b57\u4e4b\u95f4\u7684\u5dee\u8ddd\u53ea\u662f\u4f60\u901a\u8fc7\u6ca1\u6709\u90a3\u79cd\u7c7b\u578b\u9650\u5b9a\u7b26\u800c\u907f\u514d\u7684\u3002\u9664\u4e86\u4e0e unsafe \u5173\u952e\u5b57\u672c\u8eab\u76f8\u5173\u7684\u4e8b\u60c5\uff08\u4f8b\u5982\u8c03\u7528\u4e0d\u5b89\u5168\u7684\u51fd\u6570\uff09\uff0c\u6211\u76f8\u4fe1 Rust \u53ea\u5141\u8bb8\u4f60\u5728\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u4e2d\u505a 3 \u4ef6\u4e8b\uff0c\u800c\u4f60\u5728\u5b89\u5168\u4ee3\u7801\u4e2d\u662f\u4e0d\u5141\u8bb8\u505a\u7684\u3002\u60a8\u53ef\u4ee5\u53d6\u6d88\u5f15\u7528\u539f\u59cb\u6307\u9488\u3002\u60a8\u53ef\u4ee5\u8bbf\u95ee\u8054\u5408\u4e2d\u7684\u5b57\u6bb5\u3002\u4f60\u53ef\u4ee5\u6539\u53d8\u9759\u6001\u3002\u5c31\u8fd9\u6837\u3002\u8fd9\u4e9b\u786e\u5b9e\u662f\u6f5c\u5728\u7684\u67aa\u652f\uff08\u8c01\u77e5\u9053\u539f\u59cb\u6307\u9488\u6307\u5411\u4ec0\u4e48\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff1b\u4e5f\u8bb8\u8054\u5408\u4e2d\u7684\u90a3\u4e2a\u5b57\u6bb5\u4e0d\u662f\u5176\u4e2d\u5305\u542b\u6709\u6548\u6570\u636e\u7684\u5b57\u6bb5\uff1b\u563f\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6b63\u5728\u8bfb\u53d6\u8be5\u9759\u6001\u53d8\u91cf\uff0c\u4f3c\u4e4e\u5728\u66f4\u6539\u5b83\uff09\u50cf\u4e00\u4e2a\u574f\u4e3b\u610f\uff09\u4f46\u8fd9\u662f\u4e00\u4e2a\u6bd4\u4f60\u9884\u671f\u7684\u8981\u5c0f\u5f97\u591a\u7684\u96c6\u5408\u3002 &gt; \u4e5f\u8bb8\u5e94\u8be5\u8bf4\u5e73\u53f0\u5b9a\u4e49\uff0c\u73b0\u5728\u592a\u665a\u4e86\u3002\u4e3a\u4ec0\u4e48\u4e3a\u65f6\u5df2\u665a\uff1f\u6b63\u786e\u7684\u7a0b\u5e8f\u5c06\u4fdd\u6301\u6b63\u786e\uff0c\u800c\u9519\u8bef\u7684\u7a0b\u5e8f\uff08\u4ed6\u4eec\u7684\u4f5c\u8005\u8ba4\u4e3a\u662f\u6b63\u786e\u7684\uff01\uff09\u5c06\u53d8\u5f97\u771f\u6b63\u6b63\u786e\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u6b63\u662f\u5e94\u8be5\u53d1\u751f\u7684\u4e8b\u60c5\uff1a\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u4f7f\u5b9e\u73b0\u8005\u8bb8\u53ef\u4e0d\u6355\u83b7\u67d0\u4e9b\u96be\u4ee5\u8bca\u65ad\u7684\u7a0b\u5e8f\u9519\u8bef\u3002\u5b83\u8fd8\u786e\u5b9a\u4e86\u53ef\u80fd\u7b26\u5408\u8bed\u8a00\u6269\u5c55\u7684\u9886\u57df\uff1a\u5b9e\u73b0\u8005\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u5b98\u65b9\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u5b9a\u4e49\u6765\u6269\u5145\u8bed\u8a00\uff08\u5f3a\u8c03\u6211\u7684\uff09\u3002\u7b7e\u540d\u6ea2\u51fa\u88ab\u58f0\u660e\u4e3a\u201c\u672a\u5b9a\u4e49\u201d\u6ca1\u6709......", "note_en": "This article brought to you by LWN subscribers Subscribers to LWN.net made this article \u2014 and everything that surrounds it \u2014 possible. If you appreciate our content, please  buy a subscription and make the next set of articles possible.\n   On July 4, the  Rust for Linux project postedanother version of its patch set adding support for the language to thekernel. It would seem that the project feels that it is ready to be considered formerging into the mainline. Perhaps a bigger question lingers, though: is the kerneldevelopment community ready for Rust? That part still seems to be up in the air.\n  Miguel Ojeda, who has been hired to  work onthe project full-time, posted the patch set; in the cover letter, he listed anumber of changes and updates since the  RFC patchset was  posted back in April. Inparticular, the allocations that would call  panic!() when theyfailed have beenreplaced. A modified version of the   alloc crate has been created for thekernel project, though the plan is for the changes to work their wayinto the upstream project so that the customized version can eventually be dropped.Incidentally, the patch adding the modified crate was  apparentlytoo large for the lore archive, though it does  showup in the LWN archive.\n There is more progress on Rust abstractions for kernel facilities,including &#34; red-black trees, reference-counted objects, filedescriptor creation, tasks, files, io vectors...&#34;, he said, as wellas additions for driver support. Beyond that, theRust driver for the  Android Binder interprocesscommunication mechanism has more features and there is ongoing work on a driver forthe hardware random-number generator available on some Raspberry Pi models.\n But the lack of a &#34;real&#34; driver was one of the sticking points back inApril, and it was raised again this time. Christoph Hellwig  said that he wasstrongly against merging the code if that was the intent of the posting.In the cover letter, Ojeda said that the patch set was being added to linux-next, andhe  confirmedthat it is being submitted for merging. Hellwig wants to see Rust proveitself before being included: [...] prove it actually is useful first. Whereuseful would be a real-life driver like say nvme or a usb hostcontroller driver that actually works and shows benefits over theexisting one. Until it shows such usefulness it will just drageveryone else down.\n Ojeda pointed at the Binder driver as a &#34; non-trivial module&#34;that &#34; is already working&#34;, but acknowledged that a realhardware driver is an important (and, as yet, missing) piece. But the coverletter listed a number of organizations that are interested in or involved withthe project already, and Ojeda believes that is also something that ishelping to prove the project: It is &#34;proven&#34; in the sense we are already starting to get usersdownstream and other interested parties have shown support. However, others are more conservative and will only start investinginto it if we are in mainline, i.e. if the decision of having Rust ornot is already taken.\n But the Binder &#34;driver&#34; is not really a good example to use for a few differentreasons, Greg Kroah-Hartman  said. It ismissing a fairly large piece of functionality (binderfs) for one thing, but it also doeslittle to help show how Rust will fit in with the rest of the kernel. Asbefore, he strongly recommended working on something that would help clearup some of the questions that kernel developers have about Rust: Not to say that it doesn&#39;t have its usages, but the interactions betweenbinder and the rest of the kernel are very small and specific.Something that almost no one else will ever write again. Please work on a real driver to help prove, or disprove, that this allis going to be able to work properly. There are huge unansweredquestions that need to be resolved that you will run into when you dosuch a thing.\n  The theme of Rust proving itself was also present in a thread on the ksummit-discuss mailinglist. At the end of June, Ojeda  proposedRust for Linux as a technical topic for the Kernel Summit track at thisyear&#39;s  Linux PlumbersConference. On July\u00a06, Linus Walleij  replied, agreeing that it was a topic that should be discussed. He noted that thereare already quite a few languages that kernel developers need to beup on (e.g. C, assembly, Make, Bash, Perl, Python, ...), so a question inhis mind is what Rust will bring to the table that makes it worth adding tothe list.\n That message started the ball rolling on a discussion of how Rust fits\u2014andwhere the experiment leads. There is clearly some concern among kerneldevelopers about having to know Rust to continue working on the kernel.Ojeda tried to allay those fears to a certain extent, but did acknowledgethat most kernel developers would eventually need to understand thelanguage. For now, the intent is for the project to work withmaintainers that want to add a Rust API to their subsystem, Ojeda  said.That will bootstrap support for Rust within the kernel and will help alleviate some ofthe concerns expressed by   Leon Romanovsky, JamesBottomley, and others.\n Romanovsky was worried about refactoring, especially cross-subsystemrefactoring, in a system with drivers in both languages. Bottomleysuggested that there would be fewer reviewers for the Rust code, so bugscould more easily slip in: Since most of our CVE type problems are usuallyprogramming mistakes nowadays, the lack of review could contribute toan increase in programming fault type bugs which aren&#39;t forbidden bythe safer memory model.\n In the near term, those are problems that will need to be dealt with, butthe goal is to get to a point where Rust knowledge is more widespread amongkernel developers. As Ojeda  putit: After all, if we are going to have Rust as a second language in thekernel, we should try to have as many people on board as possible, atleast to some degree, within some reasonable time frame.\n As Laurent Pinchart  pointedout, that is an important point and one that needs to be more clearlyhighlighted in the discussion: [...] adopting Rust asa second language in the kernel isn&#39;t just a technical decision withlimited impact, but also a process decision that will create arequirement for most kernel developers to learn Rust. Whether thatshould and will happen is what we&#39;re debating, but regardless of theoutcome, it&#39;s important to phrase the question correctly, with a broadview of the implications.\n There are, of course, plenty of technical hurdles that need to be clearedas well. One of those areas is the Linux driver model and theobject-lifetime handling that goes along with it. Roland Dreier  suggestedthat interfaces like  devres(i.e. managed device resources) could have avoided a lot of problems thathe has seen in drivers regarding lifetime management, and error paths in particular, butthat it has not been adopted widely. Walleij  disagreedthat it hasn&#39;t been widely used, but is not at all sure that a Rust switch is better: I think it&#39;s a formidable success, people just need to learn to do it more. But if an easier path to learn better behaviours is to shuffle the wholechessboard and replace it with drivers written in Rust, I don&#39;t know?Maybe?\n For Kroah-Hartman, seeing real drivers in Rust for the kernel would help clear up how these problems are going to be solved in the language.There are some difficult problems that will need to be tackled: This is going to be the &#34;interesting&#34; part of the rust work, where ithas to figure out how to map the reference counted objects that wecurrently have in the driver model across to rust-controlled objects andkeep everything in sync properly. For the normal code, the fact that the memory was assigned to onespecific object (the struct device) but yet referenced from anotherobject (the cdev). devm_* users like this do not seem to realize thereare two separate object lifecycles happening here as the interactionsare subtle at times. I am looking forward to how the rust implementation is going to handleall of this as I have no idea.\n There is also the question of where all of this leads. Walleij  wonderedwhether the &#34;leaf nodes&#34; of the kernel (i.e. drivers) are actually the best place to startfrom the perspective of showing the benefits of the language. He also  askedabout that in a lengthy message back in April. Part of his question iswhether thedecision to start with drivers was made for other reasons: If the whole rationale with doing device drivers first is strategic,not necessarily bringing any benefits to that device driversubsystem but rather serving as a testing ground and guineapig, then that strategy needs to be explicit and understoodby everyone. So while we understand that Rust asall these $UPSIDES doing device drivers first is purelystrategic, correct? I think the ability to back out the wholething if it wasn&#39;t working out was mentioned too?\n He also asked about writing whole subsystems in Rust. That would entail exposingRust APIs to C code elsewhere in the kernel. It would also potentially allowan evolution toward more and more Rust in the kernel: If we want to *write* a subsystem in Rust then of course it willgo the other way: Rust need to expose APIs to C. And I assumethe grand vision is that after that Rust will eat Linux, one pieceat a time. If it proves better than C, that is.\n Ojeda  saidthat while it is possible to expose Rust APIs to the C part of the system,he does not recommend it. The problem is that the C callers lose much ofthe benefit that Rust brings to the table: In general, I would avoid exposing Rust subsystems to C. It is possible, of course, and it gives you the advantages of Rust inthe *implementation* of the subsystem. However, by having to expose aC API, you would be losing most of the advantages of the richer typesystem, plus the guarantees that Rust bring as a language for theconsumers of the subsystem.\n In a similar vein, Johannes Berg  askedabout replacing parts of a subsystem with Rust, but leaving the drivers inC\u2014the reverse of the existing plan, effectively. Once again, Ojeda  saidthat its possible, but cautioned about losing Rust features andguarantees. In addition, there are architectures where there is no Rustcompiler available at this point, so it may be premature to be looking atRust-based subsystems.\n  The project&#39;s eventual goal is not entirely clear. If all of the Linux drivers were written in Rust, there would still be lotsof big important pieces that are running unsafe C; is the next step toreplace those if Rust proves itself in the meantime? But it is alsounclear what &#34;proves itself&#34; actually means in this context.\n Learning a new language, with all of its different behaviors,quirks, and idiosyncrasies,is a pretty big ask for developers who are already juggling a fair amountof complexity in maintaining the existing kernel code. Not to mention the addedcomplexity of providing new functionality on top of what&#39;s already there. Theskepticism that seems fairly prevalent from commenters in both threads (andelsewhere) likely stems from that learning burden.\n Adding Rust to the kernel requires a lot of work, for a lot ofdifferent people, without a clear and obvious benefit beyond promises thatcan only truly be fully fulfilled with a whole kernel written in Rust.With luck, the project can provide some clear &#34;wins&#34; in the early goingthat clearly demonstrate both the potential of the language and an abilityto be utilized incrementally on a large and complex code base like thekernel. Without that, it may be difficult for the project to progress veryfar in the goal of &#34;rustifying&#34; the kernel.\n     ( Log in to post comments)\n  &gt; Ojeda tried to allay those fears to a certain extent, but did acknowledge that most kernel developers would eventually need to understand the language.  I think this is referring to this email:  https://lwn.net/ml/ksummit-discuss/CANiq72=LrxpE_2WmdDdb5...  Basically it seems to be saying that if the project is a success the end result should be, if you want to change APIs which have Rust bindings, then you need to understand those Rust bindings so you can adjust them as well.  Which makes a lot of sense, if you change kernel code which breaks other kernel code, then you need to fix that other code. But it does make clear the scope of this project and how big a decision it is to commit to this.\n  Why such a bia in LWN articles to talk about rust? I mean, this patchset, that will probably (hopefuly) never get merged, has as many lwn articles as versions published. How many important patchsets got to a v2+ (and with a chance to land) were uncovered here?\n This is a fundamental decision about the future of the kernel project; it seems worthy of more than one detailed look.\n Seconded. One of the most important changes ever considered. Please continue to err on the side of more coverage rather than less.\n  The bias that you do not like is a bias that I like.  There are people that want to improve the Linux environment. Their effort might be rejected because they end up not meeting the reasonable entry criteria. And that is not relevant.  What is relevant is that they have a goal that is quite different to most other improvement efforts, and believe in it enough to spend resources (time, money, etc). And if they fail, then that failure will inform future efforts, including languages other than Rust.\n Excellent answer, thank you! On top of that Rust may bring new developers to Linux kernel who would not touch it otherwise. Rust is a marketable programming language, C is legacy. Switching from any modern programming language to C feels like going to a minefield. Even more so when going from userspace to kernel development.\n &gt; Switching from any modern programming language to C feels like going to a minefield. Even more so when going from userspace to kernel development. Exactly. C have lots of footguns. C++ have  even more footguns. You can write nice, clean, concise code in C++\u2026 but you can&#39;t avoid them \u2014 especially when compiler developers add more and more of them to the language each year.\n Rust doesn&#39;t try to remove footguns from the language (indeed, when you are programming the kernel that&#39;s basically impossible) but tries to make sure each and every one of them is marked as  unsafe.\n That&#39;s why driver sounds, in theory, most promising thing to port to Rust: they are often written by hardware guys, who are not experienced with judging all these footguns. And, also, hopefully, API can be presented to them which allows them to write drivers in default, safe, Rust.\n  But if you rewrite core of kernel into Rust\u2026 gains would be much smaller: the closer to the dark magic of core data structures you come the more  inherent footguns would be there.\n And that&#39;s also why implementing real driver for real hardware is important milestone: certain nasty footguns live in kernel because they are inherent to interaction with hardware and it would be nice to see how large the glue code would be needed to even port one driver. It&#39;s fine if there would be more glue code than actual driver code (it would, eventually, be shared with all drivers so it&#39;s not a big deal), but if the driver itself would be peppered with numerous  unsafe blocks then the whole exercise would become a bit pointless.\n It&#39;s not true that Rust doesn&#39;t try to outright remove footguns.  Some of the C++ footguns, especially C++ footguns inherited from, or founded upon C compatibility (even if they weren&#39;t necessarily footguns in C) are relics of a forgotten past. For example, why is &#34;char&#34; allowed to be _either_ signed or unsigned and it&#39;s up to the implementation to choose? Because the hardware at the time varied. Fast forward to the 21st century and nobody wishes they had whichever of Rust&#39;s i8 and u8 is faster on the CPU they&#39;re using. That isn&#39;t a thing. So, if you want i8 you ask for i8 and if you want u8 you ask for u8, and you thus can&#39;t blow your foot off by getting a type that isn&#39;t what you thought it would be.  Likewise, why do the signed integers have undefined behaviour on overflow? Ancient hardware represented negative numbers in several ways. So, for maximum compatibility C can&#39;t specify what happens. Maybe it should have said platform defined, too late now. Great, but every platform available today has two&#39;s complement arithmetic, so this serves no purpose. Rust gets to just say this up front. Debug builds panic! if you overflow, if the mistake survives until Production you get two&#39;s complement arithmetic and good luck with that. If you explicitly _want_ wrapping, or saturating arithmetic (the latter especially could make sense in audio), you can ask for them in Rust, either for one operation (e.g. a saturating addition) or as the type of a variable and you get what you asked for, no panics, the compiler produces good optimised code for this case. But even if not the footgun of &#34;Undefined behaviour&#34; for overflow is banished.  Sometimes compilers got better and we no longer need to spell out what can be inferred. C and C++ both have the pair of unary increment operators. They are footguns. Both b++ and ++b are a bit less typing than b += 1 but they squeeze a lot of opportunity for mistakes into so few characters. Why two of them? Because C and C++ make these unary operators have a result as well as their assignment effect, even though you rarely need it, and the results are different. In Rust the unary increments don&#39;t exist, and the other assignment operators do not have a result (strictly, their result is the empty tuple), if you mean a = b; b+= 1 you can write that, and if you mean b+= 1; a = b you can write that instead. Don&#39;t worry, a modern compiler is smart, you don&#39;t get slower code just because it was slightly more typing.  Sometimes the problem scope was meanwhile clarified. Rust lacks C and C++&#39;s &#34;volatile&#34; keyword which I&#39;ve talked about before at some length. That keyword is probably a mistake. The thing it was intended for in Unix exists in Rust as a set of compiler intrinsics named volatile_read and volatile_write (a set because they come in different sizes, it turns out your hardware knows whether you wrote a 32-bit integer or two 16-bit integers to memory), and many of the things it was mistakenly abused to do in C or C++ are specifically outlawed in those languages today because they can&#39;t work. So in practice the gap between Rust&#39;s volatile_read/ volatile_write and C++ volatile keyword is just footguns you avoided by not having that type qualifier.  Aside from things related to the unsafe keyword itself (e.g. calling unsafe functions) I believe Rust only lets you do 3 things in unsafe code that you weren&#39;t anyway allowed to do in safe code. You can dereference a raw pointer. You can access fields in a union. You can mutate statics. That&#39;s all. Those are indeed potential footguns (who knows what, if anything, that raw pointer is pointing at; maybe that field in the union isn&#39;t the one with valid data in it; hey, another thread is reading that static variable, changing it seems like a bad idea) but that&#39;s a much smaller set than you might have expected.\n &gt; Maybe it should have said platform defined, too late now. Why is it too late? Correct programs would stay correct and incorrect programs (which their authors perceive as correct!) would become truly correct.\n In fact his is  exactly  what was supposed to happen:  Undefined behavior gives the implementor license not to catch certain program errors that are difficult to diagnose. It also identifies areas of possible conforming language extension:  the implementor may augment the language by providing a definition of the officially undefined behavior (emphasis mine).\n Signed overflow was declared \u201cundefined\u201d no\n......", "posttime": "2021-07-24 18:31:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "linux,rust", "title": "\u7528\u4e8e Linux Redux \u7684 Rust", "title_en": "Rust for Linux Redux", "transed": 1, "url": "https://lwn.net/Articles/862018/", "via": "", "real_tags": ["linux", "rust"]}, {"category": "", "categoryclass": "", "imagename": "87e36d4a62e14082e08a95be63666f87.png", "infoid": 1069437, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u672c\u5468\u6211\u6709\u4e24\u4ef6\u7279\u522b\u91cd\u8981\u7684\u4e8b\u60c5\u8981\u5c55\u793a\uff01\u4e0d\u662f Steam Deck \u7ea7\u522b\u7684\u5927\uff0c\u4f46\u6211\u8ba4\u4e3a\u8fd8\u662f\u5f88\u9177\u7684\u3002 \ud83d\ude42 \u9996\u5148\uff0cDavid Redondo \u548c Kai Uwe Broulik \u5b9e\u73b0\u4e86\u7535\u6e90\u914d\u7f6e\u6587\u4ef6\u529f\u80fd\uff01\u8fd9\u5141\u8bb8\u60a8\u6307\u5b9a\u8ba1\u7b97\u673a\u5e94\u5982\u4f55\u5e73\u8861\u80fd\u6e90\u4f7f\u7528\u4e0e\u6027\u80fd\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528\u7535\u6c60\u548c\u4eae\u5ea6\u5c0f\u7a0b\u5e8f\u5207\u6362\u6a21\u5f0f\uff0c\u5e76\u4e14\u60a8\u53ef\u4ee5\u914d\u7f6e\u5728\u63d2\u5165\u6216\u62d4\u51fa\u7535\u6e90\u7ebf\u65f6\u81ea\u52a8\u4f7f\u7528\u54ea\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002\u5f53\u4f7f\u7528 Linux Kernel 5.12 \u6216\u66f4\u9ad8\u7248\u672c\u65f6\uff0c\u8be5\u529f\u80fd\u5c06\u5728 Plasma 5.23 \u4e2d\u53ef\u7528\uff0c\u5e76\u4e14\u652f\u6301\u5b83\u7684\u8f83\u65b0\u8ba1\u7b97\u673a\u3002\u63a5\u4e0b\u6765\uff0cPlasma 5.20 \u4e2d\u5f15\u5165\u7684\u65b0 Kickoff \u542f\u52a8\u5668\u83dc\u5355\u8fdb\u884c\u4e86\u5de8\u5927\u7684\u4ee3\u7801\u4fee\u6539\uff0c\u4fee\u590d\u4e86\u8bb8\u591a\u9519\u8bef\uff0c\u63d0\u9ad8\u4e86\u6027\u80fd\u548c\u53ef\u8bbf\u95ee\u6027\uff0c\u6536\u7d27\u4e86\u7528\u6237\u754c\u9762\uff0c\u5e76\u6dfb\u52a0\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u529f\u80fd\u3002\u4fee\u590d\uff1a\u9875\u811a\u4e2d\u7684\u7535\u6e90/\u4f1a\u8bdd\u9879\u76ee\u6216\u4fa7\u8fb9\u680f\u4e2d\u7684\u9879\u76ee\u7684\u957f\u6587\u672c\u4e0d\u518d\u88ab\u5ffd\u7565\uff1b\u76f8\u53cd\uff0c\u5e03\u5c40\u6c34\u5e73\u5ef6\u4f38\u4ee5\u5bb9\u7eb3\u5b83\u4eec\u4f7f\u7528\u7bad\u5934\u952e\u5bfc\u822a\u641c\u7d22\u7ed3\u679c\u5217\u8868\u4e0d\u518d\u4e22\u5f03\u7b2c\u4e00\u6b21\u51fb\u952e\u60a8\u73b0\u5728\u53ef\u4ee5\u9009\u62e9\u662f\u5bf9\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u89c6\u56fe\u4f7f\u7528\u5217\u8868\u8fd8\u662f\u7f51\u683c\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6536\u85cf\u5939\u7c7b\u522b Pin \u6309\u94ae\u5177\u6709\u5df2\u6dfb\u52a0\uff0c\u56e0\u6b64\u60a8\u73b0\u5728\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5c06\u5176\u6253\u5f00\u2014\u2014\u5c31\u50cf\u60a8\u53ef\u4ee5\u4e3a\u7cfb\u7edf\u6258\u76d8\u3001\u6570\u5b57\u65f6\u949f\u548c KRunner \u505a\u7684\u4e00\u6837\n\u975e\u5e38\u611f\u8c22\u8bfa\u4e9a\u6234\u7ef4\u65af\u5b8c\u6210\u8fd9\u4e2a\u5f7b\u5e95\u7684\u6539\u53d8\uff01\u5b83\u5c06\u5728 Plasma 5.23 \u4e2d\u53d1\u5e03\u3002\u73b0\u5728\u53ef\u4ee5\u66f4\u6539\u7cfb\u7edf\u76d1\u89c6\u5668\u4e2d\u7684\u4f20\u611f\u5668\u6807\u7b7e\u5e76\u63d0\u4f9b\u81ea\u5b9a\u4e49\u6587\u672c\uff08David Redondo\uff0cPlasma 5.23\uff09\u7cfb\u7edf\u8bbe\u7f6e\u767b\u5f55\u5c4f\u5e55\u9875\u9762\u7684\u540c\u6b65\u529f\u80fd\u73b0\u5728\u4e5f\u540c\u6b65\u60a8\u7684\u5c4f\u5e55\u6392\u5217\uff0c\u4ee5\u4fbf\u767b\u5f55\u5c4f\u5e55 UI \u6b63\u786e\u5b9a\u4f4d\u5728\u60a8\u7684\u6240\u6709\u7269\u7406\u5c4f\u5e55\u4e0a\uff08Aleix Pol Gonzalez\uff0cPlasma 5.23\uff09\uff1aDolphin \u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\u7684\u201c\u5f00\u59cb\u5e7b\u706f\u7247\u201d\u83dc\u5355\u9879\u73b0\u5df2\u7ffb\u8bd1\uff08Yuri Chornoivan\uff0cGwenview 21.08\uff09\u5982\u679c\u6545\u610f\u56fa\u5b9a\uff0c\u6253\u5f00\u6570\u5b57\u65f6\u949f\u5c0f\u7a0b\u5e8f\u7684\u8bbe\u7f6e\u5bf9\u8bdd\u6846\u4e0d\u518d\u5173\u95ed\u5c0f\u7a0b\u5e8f\u7684\u5f39\u51fa\u7a97\u53e3\u6253\u5f00 (David Redondo, Plasma 5.22.3) \u7cfb\u7edf\u6258\u76d8\u6269\u5c55\u5f39\u51fa\u7a97\u53e3\u4e2d\u7684\u7f51\u683c\u9879\u76ee\u73b0\u5728\u603b\u662f\u5b8c\u5168\u50cf\u7d20\u5bf9\u9f50\uff0c\u56e0\u6b64\u5b83\u4eec\u4e0d\u4f1a\u53d8\u5f97\u6a21\u7cca (Derek Christ, Plasma 5.22.4) \u5728\u684c\u9762\u9879\u76ee\u7684\u4e0a\u4e0b\u6587\u83dc\u5355\u4e2d\uff0c\u6309\u5f53\u5b50\u83dc\u5355\u6253\u5f00\u65f6\uff0c\u7528\u4e8e\u5728\u201c\u79fb\u81f3\u5783\u573e\u7bb1\u201d\u548c\u201c\u5220\u9664\u201d\u4e4b\u95f4\u5207\u6362\u7684 shift \u952e\u73b0\u5728\u53ef\u4ee5\u5de5\u4f5c\uff08Derek Christ\uff0cPlasma 5.22.4\uff09\n\u684c\u9762\u6587\u4ef6\u5728\u6587\u4ef6\u540d\u4e2d\u5305\u542b\u5927\u5199\u5b57\u7b26\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5168\u5c40\u5feb\u6377\u65b9\u5f0f\u73b0\u5728\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u5e76\u4e14\u5b83\u4eec\u5728\u201c\u7cfb\u7edf\u8bbe\u7f6e\u5feb\u6377\u65b9\u5f0f\u201d\u9875\u9762\u4e2d\u7684\u6761\u76ee\u73b0\u5728\u603b\u662f\u663e\u793a\u6b63\u786e\u7684\u56fe\u6807\uff08David Redondo\uff0cPlasma 5.22.4\uff09\u5e26\u6709\u5d4c\u5165\u94fe\u63a5\u7684 Plasma \u901a\u77e5\u73b0\u5728\u4f7f\u7528\u94fe\u63a5\u989c\u8272\u6765\u81ea Plasma \u4e3b\u9898\u800c\u4e0d\u662f\u5e94\u7528\u7a0b\u5e8f\u914d\u8272\u65b9\u6848\uff0c\u4fee\u590d\u4e86\u5728\u8fd9\u4e9b\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u7684\u9519\u8bef\uff0c\u4f8b\u5982\u5e94\u7528 Breeze Twilight \u4e3b\u9898\u65f6 (Kai Uwe Broulik, Plasma 5.22.4) Unsplash Picture of the Day \u58c1\u7eb8\u914d\u7f6e\u9875\u9762\u4e2d\u7684\u7c7b\u522b\u5217\u8868\u73b0\u5728\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\uff0c\u800c\u4e0d\u662f\u534a\u968f\u673a\u6392\u5e8f\uff08Arnaud Vergnet\uff0cPlasma 5.22.4\uff09\u5728 KRunner \u4e2d\u663e\u793a\u7684\u6765\u81ea\u4f7f\u7528 Plasma \u6d4f\u89c8\u5668\u96c6\u6210\u7684\u6d4f\u89c8\u5668\u7684\u7f51\u7ad9\u56fe\u6807\u73b0\u5728\u5728\u4f7f\u7528\u9ad8 DPI \u6bd4\u4f8b\u56e0\u5b50\u65f6\u975e\u5e38\u6e05\u6670\uff08Kai Uwe Broulik\uff0c Plasma 5.22.4) \u6253\u5f00\u7cfb\u7edf\u8bbe\u7f6e\u7528\u6237\u53cd\u9988\u9875\u9762\u4e0d\u518d\u77ed\u6682\u5730\u4f7f Discover \u51fa\u73b0\u5728\u4efb\u52a1\u7ba1\u7406\u5668\u4e2d (Plasma 5.23) \u5728 Plasma Wayland \u4f1a\u8bdd\u4e2d\uff0cglob\u6240\u6709\u5feb\u6377\u65b9\u5f0f\u518d\u6b21\u5de5\u4f5c\uff0c\u800c\u5426\u5219\u4f1a\u7a83\u53d6\u7126\u70b9\uff08\u5728 X11 \u4e0a\uff09\u7684\u5f39\u51fa\u7a97\u53e3\u6253\u5f00\uff08Andrey Butirsky\uff0cPlasma 5.33\uff09\u73b0\u5728\u6bcf\u4e2a Dolphin \u7684\u7f29\u653e\u7ea7\u522b\u90fd\u6709\u4e0e\u5176\u76f8\u5173\u8054\u7684\u4e0d\u540c\u56fe\u6807\u5927\u5c0f\uff1b\u4e0d\u518d\u4f1a\u6539\u53d8\u7f29\u653e\u7ea7\u522b\u6709\u65f6\u4f1a\u5bfc\u81f4\u7f51\u683c\u7684\u5927\u5c0f\u53d1\u751f\u53d8\u5316\uff0c\u4f46\u56fe\u6807\u4fdd\u6301\u76f8\u540c\u7684\u5927\u5c0f\uff08Eugene Popov\uff0cDolphin 21.12\uff09\n\u5f53\u4f7f\u7528\u663e\u793a\u684c\u9762\u6548\u679c\u65f6\uff0c\u4f7f\u7528\u81ea\u9002\u5e94\u900f\u660e\u5ea6\u529f\u80fd\u7684\u9762\u677f\u73b0\u5728\u8fdb\u5165\u900f\u660e\u6a21\u5f0f\uff08David Edmundson\uff0cPlasma 5.22.4\uff09\u5728 Discover \u4e2d\u6d4f\u89c8\u5e94\u7528\u7a0b\u5e8f\u5217\u8868\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u6765\u6e90\u7684\u56fe\u6807\u73b0\u5728\u663e\u793a\u5728\u6309\u94ae\u5185\u8fd8\u5217\u51fa\u4e86\u6e90\u7684\u540d\u79f0\uff08\u6211\uff1aNate Graham\uff0cPlasma 5.23\uff09\uff1a\u6807\u9898\u680f\u4e2d\u7684\u95ee\u53f7\u6309\u94ae\u73b0\u5728\u9ed8\u8ba4\u4e3a\u5bf9\u8bdd\u6846\u7a97\u53e3\u9690\u85cf\uff08\u6211\uff1aNate Graham\uff0cPlasma 5.23\uff09Plasma \u65e5\u5386\u5c0f\u90e8\u4ef6\u4e0a\u7684\u4e8b\u4ef6\u6307\u793a\u5668\u70b9\u5e76\u4e14\u65e0\u8bba\u60a8\u4f7f\u7528\u4f55\u79cd\u914d\u8272\u65b9\u6848\u6216 Plasma \u4e3b\u9898\uff0c\u6570\u5b57\u65f6\u949f\u5f39\u51fa\u7a97\u53e3\u73b0\u5728\u90fd\u66f4\u52a0\u660e\u663e\uff08Carl Schwan\uff0cFramework 5.85\uff09\u57fa\u4e8e Kirigami \u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u201c\u5173\u4e8e\u201d\u9875\u9762\u73b0\u5728\u663e\u793a\u201c\u53c2\u4e0e\u201d\u94fe\u63a5\uff0c\u5c06\u60a8\u5e26\u5230 https ://community.kde.org/Get_Involved\uff08Felipe Kinoshita\uff0cFrameworks 5.85\uff09\uff1a\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u4e2a\u535a\u5ba2\u53ea\u6db5\u76d6\u4e86\u51b0\u5c71\u4e00\u89d2\uff01\u6211\u6ca1\u6709\u65f6\u95f4\u5173\u6ce8\u5176\u5f00\u53d1\u7684\u5927\u91cf KDE \u5e94\u7528\u7a0b\u5e8f\u5728\u8fd9\u91cc\u6ca1\u6709\u5c55\u793a\uff0c\u6211\u4e5f\u6ca1\u6709\u63d0\u5230\u540e\u7aef\u91cd\u6784\u3001\u6539\u8fdb\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u548c\u5176\u4ed6\u901a\u5e38\u4e0d\u9762\u5411\u7528\u6237\u7684\u66f4\u6539\u3002\u5982\u679c\u60a8\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u67e5\u770b https://planet.kde.org/\uff0c\u5728\u90a3\u91cc\u60a8\u53ef\u4ee5\u627e\u5230\u5176\u4ed6 KDE \u8d21\u732e\u8005\u7684\u535a\u5ba2\u6587\u7ae0\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u4ed6\u4eec\u6b63\u5728\u505a\u7684\u5de5\u4f5c\u3002\u770b\u770b https://community.kde.org/Get_Involved \u53d1\u73b0\u5982\u4f55\u6210\u4e3a\u771f\u6b63\u91cd\u8981\u7684\u9879\u76ee\u7684\u4e00\u90e8\u5206\u3002\u6bcf\u4e2a\u8d21\u732e\u8005\u90fd\u5bf9 KDE \u4ea7\u751f\u4e86\u5de8\u5927\u7684\u5f71\u54cd\uff1b\u4f60\u4e0d\u662f\u673a\u5668\u4e2d\u7684\u6570\u5b57\u6216\u9f7f\u8f6e\uff01\u60a8\u4e5f\u4e0d\u5fc5\u5df2\u7ecf\u662f\u7a0b\u5e8f\u5458\u3002\u6211\u521a\u5f00\u59cb\u7684\u65f6\u5019\u4e0d\u662f\u3002\u8bd5\u8bd5\u5427\uff0c\u4f60\u4f1a\u559c\u6b22\u7684\uff01\u6211\u4eec\u4e0d\u54ac\u4eba\uff01", "note_en": "This week I have two particularly large things to present! Not  Steam Deck levels of large, but still pretty cool, I think. \ud83d\ude42\n First of all, David Redondo and Kai Uwe Broulik implemented the  power profiles feature! This allows you to specify how your computer should balance energy use against performance. You can switch modes at any time using the Battery and Brightness applet, and you can configure which profile gets used automatically when plugging or unplugging the power cord. The feature will be available in Plasma 5.23 with a newer computer that supports it when using Linux Kernel 5.12 or greater.\n   Next, the new Kickoff launcher menu that was introduced in Plasma 5.20  has received a gigantic code overhaul which fixes many bugs, improves performance and accessibility, tightens up the user interface, and adds a few commonly requested features. Among the fixes:\n Long text for  the power/session items in the footer or  items in the sidebar is no longer ever elided; instead the layout stretches horizontally to accommodate them\n Using the arrow keys to navigate the search results list  no longer discards the first keystroke\n        You  can now choose whether to use a list or a grid for all app views, not just the Favorites category\n A Pin button has been added, so you can now pin it open if you like\u2013just like you can do for the System Tray, Digital Clock, and KRunner\n   Big thanks to Noah Davis for completing this exhaustive change! It will be released in Plasma 5.23.\n    Sensor labels in System Monitor  can now be changed and given custom text (David Redondo, Plasma 5.23)\n The System Settings Login Screen page\u2019s synchronization feature  now syncs your screen arrangement as well, so that the login screen UIs are positioned properly on all your physical screens (Aleix Pol Gonzalez, Plasma 5.23):\n     The \u201cStart a Slideshow\u201d menu item in Dolphin\u2019s context menu  is now translated (Yuri Chornoivan, Gwenview 21.08)\n Opening the Digital Clock applet\u2019s settings dialog  no longer closes the applet\u2019s popup if it has been deliberately pinned open (David Redondo, Plasma 5.22.3)\n    The grid items in the System Tray\u2019s expanded popup  are now always perfectly pixel-aligned so they will not become blurry (Derek Christ, Plasma 5.22.4)\n  In the context menu for desktop items, pressing the shift key to switch between \u201cMove to Trash\u201d and \u201cDelete\u201d  now works when a sub-menu is open (Derek Christ, Plasma 5.22.4)\n Global shortcuts for apps whose desktop files have uppercase characters in their filenames  now work properly, and  their entries in the System Settings Shortcuts page now always display the correct icons (David Redondo, Plasma 5.22.4)\n Plasma Notifications with embedded links  now use the link color from the Plasma theme rather than the application color scheme, fixing bugs in cases where these differed such as when the Breeze Twilight theme is applied (Kai Uwe Broulik, Plasma 5.22.4)\n Category lists in the Unsplash Picture of the Day wallpaper\u2019s configuration page  are now sorted alphabetically, rather than semi-randomly (Arnaud Vergnet, Plasma 5.22.4)\n Website Favicons displayed in KRunner that come from a browser using Plasma Browser Integration  are now nice and crisp when using a high DPI scale factor (Kai Uwe Broulik, Plasma 5.22.4)\n Opening the System Settings User Feedback page  no longer briefly makes Discover appear in the Task Manager (Plasma 5.23)\n In the Plasma Wayland session,  global shortcuts once again work while popups that would otherwise steal focus (on X11) are open (Andrey Butirsky, Plasma 5.33)\n     Every one of Dolphin\u2019s zoom levels now has a different icon size associated with it; no longer will changing the zoom level sometimes cause the size of the grid to change but the icons stay the same size (Eugene Popov, Dolphin 21.12)\n Panels using the Adaptive Transparency feature  now enter transparent mode when the Show Desktop effect is in use (David Edmundson, Plasma 5.22.4)\n   When browsing app lists in Discover, the icon of the source that the app comes from  is now displayed inside the button that also lists the name of the source (me: Nate Graham, Plasma 5.23):\n    The question mark button in the titlebar  is now hidden by default for dialog windows (me: Nate Graham, Plasma 5.23)\n   Event indicator dots on the Plasma Calendar widget and the Digital Clock popup  are now more visible no matter what color scheme or Plasma theme you\u2019re using (Carl Schwan, Frameworks 5.85)\n Kirigami-based apps\u2019 \u201cAbout\u201d pages  now display a \u201cGet Involved\u201d link that takes you to  https://community.kde.org/Get_Involved (Felipe Kinoshita, Frameworks 5.85):\n   Keep in mind that this blog only covers the tip of the iceberg! Tons of KDE apps whose development I don\u2019t have time to follow aren\u2019t represented here, and I also don\u2019t mention backend refactoring, improved test coverage, and other changes that are generally not user-facing. If you\u2019re hungry for more, check out  https://planet.kde.org/, where you can find blog posts by other KDE contributors detailing the work they\u2019re doing.\n  Have a look at  https://community.kde.org/Get_Involved to discover ways to be part of a project that really matters. Each contributor makes a huge difference in KDE; you are not a number or a cog in a machine! You don\u2019t have to already be a programmer, either. I wasn\u2019t when I got started. Try it, you\u2019ll like it! We don\u2019t bite!", "posttime": "2021-07-24 18:30:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "kde,\u73b0\u5728", "title": "\u672c\u5468 KDE\uff1a\u7535\u6e90\u914d\u7f6e\u6587\u4ef6\u548c\u66f4\u7cbe\u7f8e\u7684 Kickoff", "title_en": "This week in KDE: Power profiles and a more polished Kickoff", "transed": 1, "url": "https://pointieststick.com/2021/07/23/this-week-in-kde-power-profiles-and-a-more-polished-kickoff/", "via": "", "real_tags": ["kde", "\u73b0\u5728"]}, {"category": "", "categoryclass": "", "imagename": "4d1cd705c86a0441d676aeb20499fe81.jpg", "infoid": 1069436, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4eca\u665a Adam Barth \u5c06\u5e26\u6211\u4eec\u53c2\u89c2 Google \u7684\u65b0\u64cd\u4f5c\u7cfb\u7edf Fuchsia\u3002\u6211\u4eec\u5c06\u770b\u5230\u4e00\u4e9b\u4e8b\u60c5\u662f\u5982\u4f55\u5728\u5e55\u540e\u5de5\u4f5c\u7684\uff0c\u5e76\u5199\u4e0b...", "note_en": "Tonight Adam Barth will take us on a tour of Google's new operating System, Fuchsia.  We'll get to see how some things work under the hood as well as write o...", "posttime": "2021-07-24 18:30:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u64cd\u4f5c\u7cfb\u7edf,fuchsia,adam", "title": "Fuchsia \u64cd\u4f5c\u7cfb\u7edf\u4e4b\u65c5", "title_en": "A Tour of the Fuchsia Operating System", "transed": 1, "url": "https://www.youtube.com/watch?v=gIT1ISCioDY", "via": "", "real_tags": ["\u64cd\u4f5c\u7cfb\u7edf", "fuchsia", "adam"]}]
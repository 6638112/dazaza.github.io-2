[{"category": "", "categoryclass": "", "imagename": "7834e30c39db3bc92e5432823b727006.png", "infoid": 1030834, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "BITS\u8ddf\u8e2a\u5df2\u7ecf\u624b\u52a8\u7ba1\u7406\u4e86\u5927\u91cf\u6570\u636e-\u591a\u5e74\u7684\u5b89\u5168\u8bc4\u4f30\u62a5\u544a-\u73b0\u5728\u6211\u4eec\u6b63\u5728\u63a2\u7d22\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u901a\u8fc7Slither-simil\u63d0\u9ad8\u667a\u80fd\u5408\u540c\u5ba1\u6838\u6d41\u7a0b\u7684\u6548\u7387\u3002\n\u57fa\u4e8e\u5148\u524d\u5ba1\u8ba1\u4e2d\u79ef\u7d2f\u7684\u77e5\u8bc6\uff0c\u6211\u4eec\u7740\u624b\u5728\u65b0\u5ba2\u6237\u7684\u4ee3\u7801\u5e93\u4e2d\u68c0\u6d4b\u7c7b\u4f3c\u7684\u6613\u53d7\u653b\u51fb\u7684\u4ee3\u7801\u7247\u6bb5\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u63a2\u7d22\u4e86\u673a\u5668\u5b66\u4e60(ML)\u65b9\u6cd5\uff0c\u4ee5\u81ea\u52a8\u6539\u8fdbSlither(\u6211\u4eec\u7684\u9759\u6001\u7a33\u56fa\u6027\u5206\u6790\u5668)\u7684\u6027\u80fd\uff0c\u5e76\u4f7f\u5ba1\u8ba1\u5e08\u548c\u5ba2\u6237\u7684\u5de5\u4f5c\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\n\u76ee\u524d\uff0c\u5177\u6709\u53ef\u9760\u6027\u53ca\u5176\u5b89\u5168\u7ec6\u5fae\u5dee\u522b\u7684\u4e13\u4e1a\u77e5\u8bc6\u7684\u4eba\u7c7b\u5ba1\u6838\u5458\u626b\u63cf\u548c\u8bc4\u4f30\u53ef\u9760\u6027\u6e90\u4ee3\u7801\uff0c\u4ee5\u53d1\u73b0\u4e0d\u540c\u7c92\u5ea6\u7ea7\u522b\u7684\u6f0f\u6d1e\u548c\u6f5c\u5728\u5a01\u80c1\u3002\u5728\u6211\u4eec\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6211\u4eec\u63a2\u7d22\u4e86\u53ef\u4ee5\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u81ea\u52a8\u5316\u5b89\u5168\u8bc4\u4f30\u4ee5\u5b9e\u73b0\u4ee5\u4e0b\u76ee\u6807\uff1a\n\u6700\u5927\u9650\u5ea6\u5730\u964d\u4f4e\u518d\u6b21\u51fa\u73b0\u4eba\u4e3a\u9519\u8bef\u7684\u98ce\u9669\uff0c\u5373\u5ffd\u7565\u5df2\u77e5\u7684\u3001\u8bb0\u5f55\u7684\u6f0f\u6d1e\u7684\u673a\u4f1a\u3002\n\u5e2e\u52a9\u5ba1\u8ba1\u4eba\u5458\u66f4\u5feb\u3001\u66f4\u8f7b\u677e\u5730\u7b5b\u9009\u6f5c\u5728\u6f0f\u6d1e\uff0c\u540c\u65f6\u964d\u4f4e\u8bef\u62a5\u7387\u3002\nSlither-SIMIL\u662f\u5bf9Slither\u7684\u7edf\u8ba1\u6dfb\u52a0\uff0c\u662f\u4e00\u79cd\u4ee3\u7801\u76f8\u4f3c\u6027\u5ea6\u91cf\u5de5\u5177\uff0c\u5b83\u4f7f\u7528\u6700\u5148\u8fdb\u7684\u673a\u5668\u5b66\u4e60\u6765\u68c0\u6d4b\u7c7b\u4f3c\u7684\u575a\u56fa\u6027\u51fd\u6570\u3002\u53bb\u5e74\uff0c\u5f53\u5b83\u4f5c\u4e3a\u4ee3\u53f7\u4e3aCrytic-pred\u7684\u5b9e\u9a8c\u5f00\u59cb\u65f6\uff0c\u5b83\u88ab\u7528\u6765\u5411\u91cf\u5316\u575a\u56fa\u6027\u6e90\u4ee3\u7801\u7247\u6bb5\uff0c\u5e76\u6d4b\u91cf\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u4eca\u5e74\uff0c\u6211\u4eec\u5c06\u628a\u5b83\u63d0\u5347\u5230\u4e0b\u4e00\u4e2a\u5c42\u6b21\uff0c\u5e76\u5c06\u5176\u76f4\u63a5\u5e94\u7528\u4e8e\u6613\u53d7\u653b\u51fb\u7684\u4ee3\u7801\u3002\nSlither-SIMIL\u76ee\u524d\u4f7f\u7528\u5176\u81ea\u5df1\u7684\u575a\u56fa\u6027\u4ee3\u7801\u8868\u793aSlither Intermediate(Slither Intermediate Presentation\uff0c\u6ed1\u52a8\u4e2d\u95f4\u8868\u793a)\u6765\u5728\u51fd\u6570\u7684\u7c92\u5ea6\u7ea7\u522b\u7f16\u7801\u575a\u5b9e\u5ea6\u7247\u6bb5\u3002\u6211\u4eec\u8ba4\u4e3a\u51fd\u6570\u7ea7\u5206\u6790\u662f\u5f00\u59cb\u7814\u7a76\u7684\u597d\u5730\u65b9\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u592a\u7c97\u7565(\u5982\u6587\u4ef6\u7ea7)\uff0c\u4e5f\u4e0d\u4f1a\u592a\u8be6\u7ec6(\u5982\u8bed\u53e5\u6216\u884c\u7ea7)\u3002\n\u5728Slither-SIMIL\u7684\u5de5\u4f5c\u6d41\u7a0b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u4ece\u4ee5\u524d\u5f52\u6863\u7684\u5b89\u5168\u8bc4\u4f30\u4e2d\u624b\u52a8\u6536\u96c6\u6f0f\u6d1e\uff0c\u5e76\u5c06\u5176\u4f20\u8f93\u5230\u6f0f\u6d1e\u6570\u636e\u5e93\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u90fd\u662f\u5ba1\u8ba1\u4eba\u5458\u5fc5\u987b\u5728\u6ca1\u6709\u81ea\u52a8\u5316\u7684\u60c5\u51b5\u4e0b\u53d1\u73b0\u7684\u6f0f\u6d1e\u3002\n\u4e4b\u540e\uff0c\u6211\u4eec\u7f16\u8bd1\u4e86\u4ee5\u524d\u5ba2\u6237\u7684\u4ee3\u7801\u5e93\uff0c\u5e76\u901a\u8fc7\u81ea\u52a8\u51fd\u6570\u63d0\u53d6\u548c\u5f52\u4e00\u5316\u811a\u672c\u5c06\u5b83\u4eec\u5305\u542b\u7684\u51fd\u6570\u4e0e\u6211\u4eec\u7684\u6f0f\u6d1e\u6570\u636e\u5e93\u8fdb\u884c\u5339\u914d\u3002\u5728\u6b64\u8fc7\u7a0b\u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u7684\u6f0f\u6d1e\u88ab\u6807\u51c6\u5316\u7684SlitIR\u6807\u8bb0\u4f5c\u4e3a\u6211\u4eecML\u7cfb\u7edf\u7684\u8f93\u5165\u3002\n\u4e0b\u9762\u662f\u6211\u4eec\u5982\u4f55\u4f7f\u7528Slither\u5c06\u56fa\u6001\u51fd\u6570\u8f6c\u6362\u4e3a\u4e2d\u95f4\u8868\u793aSlither IR\uff0c\u7136\u540e\u5c06\u5176\u8fdb\u4e00\u6b65\u6807\u8bb0\u5316\u548c\u89c4\u8303\u5316\u4ee5\u4f5c\u4e3aSlither-simil\u7684\u8f93\u5165\uff1a\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u8bed\u53e5\u6216\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u5176\u5bf9\u5e94\u7684SlitIR\uff0c\u7136\u540e\u5bf9SlitIR\u5b50\u8868\u8fbe\u5f0f\u8fdb\u884c\u6807\u8bb0\u5316\uff0c\u5e76\u8fdb\u4e00\u6b65\u5bf9\u5176\u8fdb\u884c\u89c4\u8303\u5316\uff0c\u4ee5\u4fbf\u5c3d\u7ba1\u6b64\u51fd\u6570\u7684\u6807\u8bb0\u4e0e\u6f0f\u6d1e\u6570\u636e\u5e93\u4e4b\u95f4\u5b58\u5728\u8868\u9762\u5dee\u5f02\uff0c\u4f46\u4ecd\u4f1a\u51fa\u73b0\u66f4\u76f8\u4f3c\u7684\u5339\u914d\u3002\n\u5728\u83b7\u5f97\u6b64\u51fd\u6570\u7684\u6700\u7ec8\u4ee4\u724c\u8868\u793a\u5f62\u5f0f\u540e\uff0c\u6211\u4eec\u5c06\u5176\u7ed3\u6784\u4e0e\u6f0f\u6d1e\u6570\u636e\u5e93\u4e2d\u6613\u53d7\u653b\u51fb\u7684\u51fd\u6570\u7684\u7ed3\u6784\u8fdb\u884c\u4e86\u6bd4\u8f83\u3002\u7531\u4e8eSlither-SIMIL\u7684\u6a21\u5757\u6027\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u4e0d\u540c\u7684ML\u4f53\u7cfb\u7ed3\u6784\u6765\u8861\u91cf\u4efb\u610f\u6570\u91cf\u7684\u529f\u80fd\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\n\u56fe5\uff1a\u4f7f\u7528Slither-SIMIL\u6d4b\u8bd5\u6765\u81ea\u667a\u80fd\u5408\u7ea6\u548c\u4e00\u7ec4\u5176\u4ed6\u7a33\u56fa\u5408\u7ea6\u7684\u529f\u80fd\u3002\n\u8ba9\u6211\u4eec\u770b\u770bETQuality.sol\u667a\u80fd\u5951\u7ea6\u4e2d\u7684\u51fd\u6570transfer From\uff0c\u770b\u770b\u5b83\u7684\u7ed3\u6784\u4e0e\u6211\u4eec\u7684\u67e5\u8be2\u51fd\u6570\u6709\u4ec0\u4e48\u76f8\u4f3c\u4e4b\u5904\uff1a\n\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e2d\u7684\u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\uff0c\u5b83\u4eec\u90fd\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u5305\u542b\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6bd4\u8f83\u64cd\u4f5c(&gt\uff1b=\u548c&lt\uff1b=)\u3001\u76f8\u540c\u7c7b\u578b\u7684\u64cd\u4f5c\u6570\u6bd4\u8f83\uff0c\u4ee5\u53ca\u53e6\u4e00\u4e2a\u7c7b\u4f3c\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u5185\u90e8\u8c03\u7528\u8bed\u53e5\u548c\u4e00\u4e2a\u8fd4\u56de\u201ctrue\u201d\u503c\u7684\u5b9e\u4f8b\u3002\n\u968f\u7740\u76f8\u4f3c\u6027\u5206\u6570\u8d8a\u4f4e\uff0c\u8fd9\u79cd\u7ed3\u6784\u76f8\u4f3c\u6027\u8d8a\u5c11\uff0c\u800c\u4e14\u662f\u5728\u76f8\u53cd\u7684\u65b9\u5411\u4e0a\uff1b\u8fd9\u4e24\u4e2a\u529f\u80fd\u53d8\u5f97\u66f4\u52a0\u76f8\u540c\uff0c\u56e0\u6b64\u76f8\u4f3c\u6027\u5206\u6570\u4e3a1.0\u7684\u4e24\u4e2a\u529f\u80fd\u5f7c\u6b64\u76f8\u540c\u3002\n\u5728\u8fc7\u53bb\u7684\u4e24\u5e74\u91cc\uff0c\u5173\u4e8eSolity\u4e2d\u7684\u81ea\u52a8\u6f0f\u6d1e\u53d1\u73b0\u7684\u7814\u7a76\u5df2\u7ecf\u5f00\u59cb\uff0c\u50cfVulcan\u548cSmartEmbed\u8fd9\u6837\u7684\u5de5\u5177\uff0c\u5b83\u4eec\u4f7f\u7528ML\u65b9\u6cd5\u6765\u53d1\u73b0\u667a\u80fd\u5408\u540c\u4e2d\u7684\u6f0f\u6d1e\uff0c\u6b63\u5728\u663e\u793a\u51fa\u4ee4\u4eba\u632f\u594b\u7684\u7ed3\u679c\u3002\n\u7136\u800c\uff0c\u76ee\u524d\u6240\u6709\u7684\u76f8\u5173\u65b9\u6cd5\u90fd\u96c6\u4e2d\u5728\u9759\u6001\u5206\u6790\u5668(\u5982Slither\u548cMythril)\u5df2\u7ecf\u53ef\u4ee5\u68c0\u6d4b\u5230\u7684\u6f0f\u6d1e\u4e0a\uff0c\u800c\u6211\u4eec\u7684\u5b9e\u9a8c\u5219\u96c6\u4e2d\u5728\u8fd9\u4e9b\u5de5\u5177\u65e0\u6cd5\u8bc6\u522b\u7684\u6f0f\u6d1e\u4e0a-\u5177\u4f53\u5730\u8bf4\uff0c\u5c31\u662f\u90a3\u4e9b\u6ca1\u6709\u88abSlither\u68c0\u6d4b\u5230\u7684\u6f0f\u6d1e\u3002\n\u8fc7\u53bb\u4e94\u5e74\u7684\u5927\u90e8\u5206\u5b66\u672f\u7814\u7a76\u90fd\u96c6\u4e2d\u5728\u63d0\u53d6ML\u6982\u5ff5(\u901a\u5e38\u6765\u81ea\u81ea\u7136\u8bed\u8a00\u5904\u7406\u9886\u57df)\uff0c\u5e76\u5728\u5f00\u53d1\u6216\u4ee3\u7801\u5206\u6790\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u5b83\u4eec\uff0c\u901a\u5e38\u79f0\u4e3a\u4ee3\u7801\u667a\u80fd\u3002\u5728\u6b64\u7814\u7a76\u9886\u57df\u4ee5\u524d\u76f8\u5173\u5de5\u4f5c\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5f25\u5408\u4eba\u7c7b\u5ba1\u8ba1\u5e08\u548cML\u68c0\u6d4b\u7cfb\u7edf\u4e4b\u95f4\u7684\u8bed\u4e49\u9e3f\u6c9f\uff0c\u4ee5\u53d1\u73b0\u6f0f\u6d1e\uff0c\u4ece\u800c\u7528\u81ea\u52a8\u5316\u65b9\u6cd5(\u5373\u673a\u5668\u7f16\u7a0b\uff0cMP)\u6765\u8865\u5145Trail of BITS\u4eba\u7c7b\u5ba1\u8ba1\u5e08\u7684\u5de5\u4f5c\u3002\n\u6211\u4eec\u4ecd\u7136\u9762\u4e34\u6570\u636e\u7a00\u7f3a\u7684\u6311\u6218\uff0c\u6d89\u53ca\u53ef\u4f9b\u5206\u6790\u7684\u667a\u80fd\u5408\u540c\u7684\u89c4\u6a21\u4ee5\u53ca\u5176\u4e2d\u51fa\u73b0\u6709\u8da3\u6f0f\u6d1e\u7684\u9891\u7387\u3002\u6211\u4eec\u53ef\u4ee5\u4e13\u6ce8\u4e8eML\u6a21\u578b\uff0c\u56e0\u4e3a\u5b83\u5f88\u5438\u5f15\u4eba\uff0c\u4f46\u5728\u7a33\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5bf9\u6211\u4eec\u6ca1\u6709\u592a\u5927\u7684\u597d\u5904\uff0c\u56e0\u4e3a\u5373\u4f7f\u662f\u8bed\u8a00\u672c\u8eab\u4e5f\u5f88\u5e74\u8f7b\uff0c\u6211\u4eec\u9700\u8981\u8c28\u614e\u5bf9\u5f85\u6211\u4eec\u62e5\u6709\u7684\u5927\u91cf\u6570\u636e\u3002\n\u5b58\u6863\u4ee5\u524d\u7684\u5ba2\u6237\u6570\u636e\u672c\u8eab\u5c31\u662f\u4e00\u9879\u5de5\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u5904\u7406\u4e0d\u540c\u7684Solc\u7248\u672c\u6765\u5206\u522b\u7f16\u8bd1\u6bcf\u4e2a\u9879\u76ee\u3002\u5bf9\u4e8e\u5728\u8fd9\u4e00\u9886\u57df\u7ecf\u9a8c\u6709\u9650\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u6211\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\u5b66\u5230\u4e86\u5f88\u591a\u4e1c\u897f\u3002(\u6211\u6691\u671f\u5b9e\u4e60\u6700\u91cd\u8981\u7684\u6536\u83b7\u662f\uff0c\u5982\u679c\u4f60\u5728\u505a\u673a\u5668\u5b66\u4e60\uff0c\u4f60\u4e0d\u4f1a\u610f\u8bc6\u5230\u6570\u636e\u6536\u96c6\u548c\u6e05\u7406\u9636\u6bb5\u7684\u74f6\u9888\u6709\u591a\u5927\uff0c\u9664\u975e\u4f60\u5fc5\u987b\u8fd9\u6837\u505a\u3002)\u3002\n\u997c\u56fe\u663e\u793a\u4e8689\u4e2a\u6f0f\u6d1e\u5728\u6211\u4eec\u8c03\u67e5\u768410\u4e2a\u5ba2\u6237\u7aef\u5b89\u5168\u8bc4\u4f30\u4e2d\u7684\u5206\u5e03\u60c5\u51b5\u3002\u6211\u4eec\u8bb0\u5f55\u4e86\u503c\u5f97\u6ce8\u610f\u7684\u6f0f\u6d1e\u548cSlither\u65e0\u6cd5\u53d1\u73b0\u7684\u6f0f\u6d1e\u3002\n\u5728\u521a\u521a\u8fc7\u53bb\u7684\u8fd9\u4e2a\u590f\u5929\uff0c\u6211\u4eec\u6000\u7740\u4e24\u4e2a\u76ee\u6807\u7ee7\u7eed\u5f00\u53d1Slither-simil\u548cSlither-simil\uff1a\n\u6211\u4eec\u4f7f\u7528FastText\u5b9e\u73b0\u4e86\u57fa\u4e8e\u6587\u672c\u7684\u57fa\u7ebf\u6a21\u578b\uff0c\u5e76\u5c06\u5176\u4e0e\u7ed3\u679c\u6709\u660e\u663e\u663e\u8457\u5dee\u5f02\u7684\u6539\u8fdb\u6a21\u578b\u8fdb\u884c\u6bd4\u8f83\uff1b\u4f8b\u5982\uff0c\u4e0d\u7814\u7a76\u8f6f\u4ef6\u590d\u6742\u6027\u5ea6\u91cf\uff0c\u800c\u53ea\u5173\u6ce8\u57fa\u4e8e\u56fe\u5f62\u7684\u6a21\u578b\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u76ee\u524d\u6700\u6709\u524d\u9014\u7684\u6a21\u578b\u3002\n\u4e3a\u6b64\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u7cfb\u5217\u5728\u6700\u9ad8\u62bd\u8c61\u7ea7\u522b(\u5373\u6e90\u4ee3\u7801)\u5c1d\u8bd5\u4f7f\u7528\u56fa\u6001\u8bed\u8a00\u7684\u6280\u672f\u3002\n\u4e3a\u4e86\u5efa\u7acbML\u6a21\u578b\uff0c\u6211\u4eec\u540c\u65f6\u8003\u8651\u4e86\u76d1\u7763\u548c\u975e\u76d1\u7763\u5b66\u4e60\u65b9\u6cd5\u3002\u9996\u5148\uff0c\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a\u57fa\u4e8e\u6807\u8bb0\u5316\u6e90\u4ee3\u7801\u51fd\u6570\u5e76\u5c06\u5176\u5d4c\u5165\u6b27\u51e0\u91cc\u5f97\u7a7a\u95f4(\u56fe8)\u7684\u57fa\u7ebf\u975e\u76d1\u7763\u6a21\u578b\uff0c\u4ee5\u5ea6\u91cf\u548c\u91cf\u5316\u4e0d\u540c\u6807\u8bb0\u4e4b\u95f4\u7684\u8ddd\u79bb(\u5373\uff0c\u76f8\u5f02\u5ea6)\u3002\u56e0\u4e3a\u51fd\u6570\u662f\u7531\u6807\u8bb0\u7ec4\u6210\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u5c06\u5dee\u5f02\u76f8\u52a0\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4efb\u610f\u5927\u5c0f\u7684\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7247\u6bb5\u4e4b\u95f4\u7684(\u53cd)\u76f8\u4f3c\u6027\u3002\n\u4e0b\u56fe\u663e\u793a\u4e86\u6765\u81ea\u5728\u4e09\u7ef4\u6b27\u51e0\u91cc\u5fb7\u7a7a\u95f4\u4e2d\u7403\u5316\u7684\u4e00\u7ec4\u8bad\u7ec3\u7a20\u5ea6\u6570\u636e\u7684SlitIR\u4ee4\u724c\uff0c\u5176\u4e2d\u76f8\u4f3c\u7684\u4ee4\u724c\u5728\u77e2\u91cf\u8ddd\u79bb\u4e0a\u5f7c\u6b64\u66f4\u63a5\u8fd1\u3002\u6bcf\u4e2a\u7d2b\u70b9\u663e\u793a\u4e00\u4e2a\u4ee3\u5e01\u3002\n\u6211\u4eec\u76ee\u524d\u6b63\u5728\u5f00\u53d1\u4e00\u4e2a\u4e13\u6709\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5305\u62ec\u6211\u4eec\u4ee5\u524d\u7684\u5ba2\u6237\u53ca\u5176\u516c\u5f00\u53ef\u7528\u7684\u6613\u53d7\u653b\u51fb\u7684\u667a\u80fd\u5408\u540c\uff0c\u4ee5\u53ca\u8bba\u6587\u548c\u5176\u4ed6\u5ba1\u8ba1\u4e2d\u7684\u53c2\u8003\u8d44\u6599\u3002\u5b83\u4eec\u5c06\u5171\u540c\u5f62\u6210\u4e00\u4e2a\u7edf\u4e00\u7684\u3001\u5168\u9762\u7684\u5b89\u5168\u6f0f\u6d1e\u6570\u636e\u5e93\uff0c\u7528\u4e8e\u67e5\u8be2\u3001\u4ee5\u540e\u7684\u57f9\u8bad\u548c\u6d4b\u8bd5\u8f83\u65b0\u7684\u6a21\u578b\u3002\n\u6211\u4eec\u8fd8\u5728\u7814\u7a76\u5176\u4ed6\u65e0\u76d1\u7763\u548c\u6709\u76d1\u7763\u7684\u6a21\u578b\uff0c\u4f7f\u7528\u7531Slither\u548cMythril\u7b49\u9759\u6001\u5206\u6790\u5668\u6807\u8bb0\u7684\u6570\u636e\u3002\u6211\u4eec\u6b63\u5728\u7814\u7a76\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u5177\u6709\u66f4\u5f3a\u7684\u8868\u73b0\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u62bd\u8c61\u8bed\u6cd5\u6811\u548c\u63a7\u5236\u6d41\u56fe\u4e3a\u6e90\u4ee3\u7801\u5efa\u6a21-\u5177\u4f53\u5730\u8bf4\uff0c\u5c31\u662f\u57fa\u4e8e\u56fe\u5f62\u7684\u6a21\u578b\u3002\n\u6211\u4eec\u671f\u5f85\u7740\u68c0\u67e5Slither-simil\u5728\u65b0\u5ba1\u8ba1\u4efb\u52a1\u4e0a\u7684\u8868\u73b0\uff0c\u770b\u770b\u5b83\u5982\u4f55\u63d0\u9ad8\u6211\u4eec\u4fdd\u8bc1\u56e2\u961f\u7684\u5de5\u4f5c\u6548\u7387(\u4f8b\u5982\uff0c\u5728\u5206\u7c7b\u548c\u66f4\u5feb\u5730\u627e\u5230\u5bb9\u6613\u6458\u5230\u7684\u679c\u5b9e\u65b9\u9762)\u3002\u6211\u4eec\u8fd8\u5c06\u5728Mainnet\u4e0a\u6d4b\u8bd5\u5b83\uff0c\u5f53\u5b83\u53d8\u5f97\u66f4\u6210\u719f\u548c\u81ea\u52a8\u53ef\u4f38\u7f29\u65f6\u3002\n\u4f60\u73b0\u5728\u53ef\u4ee5\u5728\u8fd9\u6b3eGithub\u516c\u5173\u4e0a\u8bd5\u8bd5Slither-simil\u3002\u5bf9\u4e8e\u6700\u7ec8\u7528\u6237\uff0c\u5b83\u662f\u53ef\u7528\u7684\u6700\u7b80\u5355\u7684CLI\u5de5\u5177\uff1a\n\u8f93\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u667a\u80fd\u5408\u540c\u6587\u4ef6(\u76ee\u5f55\u3001.zip\u6587\u4ef6\u6216\u5355\u4e2a.sol)\u3002\n\u786e\u5b9a\u4e00\u4e2a\u9884\u5148\u57f9\u8bad\u7684\u6a21\u578b\uff0c\u6216\u5355\u72ec\u57f9\u8bad\u4e00\u4e2a\u6a21\u578b\uff0c\u4f7f\u5176\u5177\u6709\u5408\u7406\u6570\u91cf\u7684\u667a\u80fd\u5408\u540c\u3002\nSlither-simil\u662f\u4e00\u79cd\u529f\u80fd\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u6709\u53ef\u80fd\u6d4b\u91cf\u4ee5\u5b9e\u5fc3\u7f16\u5199\u7684\u4efb\u610f\u5927\u5c0f\u7684\u51fd\u6570\u7247\u6bb5\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u6211\u4eec\u6b63\u5728\u7ee7\u7eed\u5f00\u53d1\u5b83\uff0c\u57fa\u4e8e\u76ee\u524d\u7684\u7ed3\u679c\u548c\u6700\u8fd1\u7684\u76f8\u5173\u7814\u7a76\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u4eca\u5e74\u5e74\u5e95\u4e4b\u524d\u770b\u5230\u6709\u5f71\u54cd\u529b\u7684\u73b0\u5b9e\u4e16\u754c\u7ed3\u679c\u3002\n\u6700\u540e\uff0c\u6211\u8981\u611f\u8c22\u6211\u7684\u4e0a\u7ea7Gustavo\uff0cMichael\uff0cJosselin\uff0cStefan\uff0cDan\uff0c\u4ee5\u53caTrail of Bits\u7684\u5176\u4ed6\u6240\u6709\u4eba\uff0c\u662f\u4ed6\u4eec\u8ba9\u8fd9\u6b21\u5b9e\u4e60\u7ecf\u5386\u6210\u4e3a\u6211\u6709\u751f\u4ee5\u6765\u6700\u4e0d\u5e73\u51e1\u7684\u7ecf\u5386\u3002", "note_en": "Trail of Bits has manually curated a wealth of data\u2014years of security assessment reports\u2014and now we\u2019re exploring how to use this data to  make the smart contract auditing process more efficient with Slither-simil.\n Based on accumulated knowledge embedded in previous audits, we set out to detect similar vulnerable code snippets in new clients\u2019 codebases. Specifically, we explored machine learning (ML) approaches to automatically improve on the performance of Slither, our static analyzer for Solidity, and make life a bit easier for both auditors and clients.\n  Currently, human auditors with expert knowledge of Solidity and its security nuances scan and assess Solidity source code to discover vulnerabilities and potential threats at different granularity levels. In our experiment, we explored how much we could automate security assessments to:\n Minimize the risk of recurring human error, i.e., the chance of overlooking known, recorded vulnerabilities.\n Help auditors sift through potential vulnerabilities faster and more easily while decreasing the rate of false positives.\n  Slither-simil, the statistical addition to Slither, is a code similarity measurement tool that uses state-of-the-art machine learning to detect similar Solidity functions. When it began as an experiment last year under the codename crytic-pred, it was used to vectorize Solidity source code snippets and measure the similarity between them. This year, we\u2019re taking it to the next level and applying it directly to vulnerable code.\n Slither-simil currently uses its own representation of Solidity code, SlithIR (Slither Intermediate Representation), to encode Solidity snippets at the granularity level of functions. We thought function-level analysis was a good place to start our research since it\u2019s not too coarse (like the file level) and not too detailed (like the statement or line level.)\n   In the process workflow of Slither-simil, we first manually collected vulnerabilities from the previous archived security assessments and transferred them to a vulnerability database. Note that these are the vulnerabilities auditors had to find with no automation.\n After that, we compiled previous clients\u2019 codebases and matched the functions they contained with our vulnerability database via an automated function extraction and normalization script. By the end of this process, our vulnerabilities were normalized SlithIR tokens as input to our ML system.\n Here\u2019s how we used Slither to transform a Solidity function to the intermediate representation SlithIR, then further tokenized and normalized it to be an input to Slither-simil:\n     First, we converted every statement or expression into its SlithIR correspondent, then tokenized the SlithIR sub-expressions and further normalized them so more similar matches would occur despite superficial differences between the tokens of this function and the vulnerability database.\n   After obtaining the final form of token representations for this function, we compared its structure to that of the vulnerable functions in our vulnerability database. Due to the modularity of Slither-simil, we used various ML architectures to measure the similarity between any number of functions.\n  Figure 5: Using Slither-simil to test a function from a smart contract with an array of other Solidity contracts.\n Let\u2019s take a look at the function transferFrom from the ETQuality.sol smart contract to see how its structure resembled our query function:\n   Comparing the statements in the two functions, we can easily see that they both contain, in the same order, a binary comparison operation (&gt;= and &lt;=), the same type of operand comparison, and another similar assignment operation with an internal call statement and an instance of returning a \u201ctrue\u201d value.\n As the similarity score goes lower towards 0, these sorts of structural similarities are observed less often and in the other direction; the two functions become more identical, so the two functions with a similarity score of 1.0 are identical to each other.\n  Research on automatic vulnerability discovery in Solidity has taken off in the past two years, and tools like  Vulcan and  SmartEmbed, which use ML approaches to discovering vulnerabilities in smart contracts, are showing promising results.\n However, all the current related approaches focus on vulnerabilities already detectable by static analyzers like Slither and Mythril, while our experiment focused on the vulnerabilities these tools were not able to identify\u2014specifically, those undetected by Slither.\n Much of the academic research of the past five years has focused on taking ML concepts (usually from the field of natural language processing) and using them in a development or code analysis context, typically referred to as code intelligence. Based on previous, related work in this research area, we aim to bridge the semantic gap between the performance of a human auditor and an ML detection system to discover vulnerabilities, thus complementing the work of Trail of Bits human auditors with automated approaches (i.e.,  Machine Programming, or MP).\n  We still face the challenge of data scarcity concerning the scale of smart contracts available for analysis and the frequency of interesting vulnerabilities appearing in them. We can focus on the ML model because it\u2019s sexy but it doesn\u2019t do much good for us in the case of Solidity where even the language itself is very young and we need to tread carefully in how we treat the amount of data we have at our disposal.\n Archiving previous client data was a job in itself since we had to deal with the different solc versions to compile each project separately. For someone with limited experience in that area this was a challenge, and I learned a lot along the way. (The most important takeaway of my summer internship is that if you\u2019re doing machine learning, you will not realize how major a bottleneck the data collection and cleaning phases are unless you have to do them.)\n   The pie chart shows how 89 vulnerabilities were distributed among the 10 client security assessments we surveyed. We documented both the notable vulnerabilities and those that were not discoverable by Slither.\n  This past summer we resumed the development of Slither-simil and SlithIR with two goals in mind:\n  We implemented the baseline text-based model with FastText to be compared with an improved model with a tangibly significant difference in results; e.g., one not working on software complexity metrics, but focusing solely on graph-based models, as they are the most promising ones right now.\n For this, we have proposed a slew of techniques to try out with the Solidity language at the highest abstraction level, namely, source code.\n To develop ML models, we considered both supervised and unsupervised learning methods. First, we developed a baseline unsupervised model based on tokenizing source code functions and embedding them in a Euclidean space (Figure 8) to measure and quantify the distance (i.e., dissimilarity) between different tokens. Since functions are constituted from tokens, we just added up the differences to get the (dis)similarity between any two different snippets of any size.\n The diagram below shows the SlithIR tokens from a set of training Solidity data spherized in a three-dimensional Euclidean space, with similar tokens closer to each other in vector distance. Each purple dot shows one token.\n   We are currently developing a proprietary database consisting of our previous clients and their publicly available vulnerable smart contracts, and references in papers and other audits. Together they\u2019ll form one unified comprehensive database of Solidity vulnerabilities for queries, later training, and testing newer models.\n We\u2019re also working on other unsupervised and supervised models, using data labeled by static analyzers like Slither and Mythril. We\u2019re examining deep learning models that have much more expressivity we can model source code with\u2014specifically, graph-based models, utilizing abstract syntax trees and control flow graphs.\n And we\u2019re looking forward to checking out Slither-simil\u2019s performance on new audit tasks to see how it improves our assurance team\u2019s productivity (e.g., in triaging and finding the low-hanging fruit more quickly). We\u2019re also going to test it on Mainnet when it gets a bit more mature and automatically scalable.\n You can try Slither-simil now on  this Github PR. For end users, it\u2019s the simplest CLI tool available:\n Input one or multiple smart contract files (either directory, .zip file, or a single .sol).\n Identify a pre-trained model, or separately train a model on a reasonable amount of smart contracts.\n   Slither-simil is a powerful tool with potential to measure the similarity between function snippets of any size written in Solidity. We are continuing to develop it, and based on current results and recent related research, we hope to see impactful real-world results before the end of the year.\n Finally, I\u2019d like to thank my supervisors Gustavo, Michael, Josselin, Stefan, Dan, and everyone else at Trail of Bits, who made this the most extraordinary internship experience I\u2019ve ever had.", "posttime": "2020-10-24 07:33:01", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5b66\u4e60,smart,\u6f0f\u6d1e", "title": "\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u548cSlither-Simil\u8fdb\u884c\u9ad8\u6548\u7684\u667a\u80fd\u5408\u540c\u5b89\u5168\u5ba1\u8ba1", "title_en": "Efficient smart contract security audits with machine learning and slither-simil", "transed": 1, "url": "https://blog.trailofbits.com/2020/10/23/efficient-audits-with-machine-learning-and-slither-simil/", "via": "", "real_tags": ["\u5b66\u4e60", "smart", "\u6f0f\u6d1e"]}, {"category": "", "categoryclass": "", "imagename": "c7529b3f2ae7d37c75d04de2fdf2615e.jpg", "infoid": 1030832, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u963f\u5c14\u4f2f\u7279\u00b7\u7231\u56e0\u65af\u5766\u3001\u5168\u7403\u5b9a\u4f4d\u7cfb\u7edf(GPS)\u548c\u8ddd\u79bb\u5730\u7403200000\u4e07\u4ebf\u82f1\u91cc\u7684\u4e00\u5bf9\u6052\u661f\u6709\u4ec0\u4e48\u5171\u540c\u4e4b\u5904\uff1f\u7b54\u6848\u6765\u81ea\u7231\u56e0\u65af\u5766\u7684\u5e7f\u4e49\u76f8\u5bf9\u8bba\u6548\u5e94\uff0c\u88ab\u79f0\u4e3a\u201c\u4e07\u6709\u5f15\u529b\u6548\u5e94\u201d\u3002\u5728\u5e7f\u4e49\u76f8\u5bf9\u8bba\u4e2d\uff0c\u7531\u4e8e\u91cd\u529b\u7684\u4f5c\u7528\uff0c\u5149\u7ebf\u4f1a\u53d8\u6210\u66f4\u7ea2\u7684\u989c\u8272\u3002\u5229\u7528\u7f8e\u56fd\u5b87\u822a\u5c40\u7684\u94b1\u5fb7\u62c9X\u5c04\u7ebf\u5929\u6587\u53f0\uff0c\u5929\u6587\u5b66\u5bb6\u5728\u8ddd\u5730\u7403\u7ea629000(200000\u4e07\u4ebf\u82f1\u91cc)\u7684\u94f6\u6cb3\u7cfb\u4e2d\u53d1\u73b0\u4e86\u8fd9\u4e00\u73b0\u8c61\u3002\u867d\u7136\u8fd9\u4e9b\u6052\u661f\u975e\u5e38\u9065\u8fdc\uff0c\u4f46\u5f15\u529b\u7ea2\u79fb\u5bf9\u73b0\u4ee3\u751f\u6d3b\u6709\u5207\u5b9e\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u79d1\u5b66\u5bb6\u548c\u5de5\u7a0b\u5e08\u5fc5\u987b\u8003\u8651\u5230\u5b83\u4eec\uff0c\u624d\u80fd\u4e3aGPS\u63d0\u4f9b\u51c6\u786e\u7684\u4f4d\u7f6e\u3002\n\u867d\u7136\u79d1\u5b66\u5bb6\u4eec\u5df2\u7ecf\u53d1\u73b0\u4e86\u592a\u9633\u7cfb\u5f15\u529b\u7ea2\u79fb\u7684\u65e0\u53ef\u4e89\u8fa9\u7684\u8bc1\u636e\uff0c\u4f46\u5728\u592a\u7a7a\u4e2d\u66f4\u8fdc\u7684\u7269\u4f53\u4e0a\u89c2\u6d4b\u5b83\u4eec\u4e00\u76f4\u662f\u4e00\u4ef6\u5177\u6709\u6311\u6218\u6027\u7684\u4e8b\u60c5\u3002\u65b0\u7684\u94b1\u5fb7\u62c9\u7ed3\u679c\u4e3a\u5f15\u529b\u7ea2\u79fb\u6548\u5e94\u5728\u65b0\u7684\u5b87\u5b99\u73af\u5883\u4e2d\u53d1\u6325\u4f5c\u7528\u63d0\u4f9b\u4e86\u4ee4\u4eba\u4fe1\u670d\u7684\u8bc1\u636e\u3002\n\u8fd9\u4e2a\u6709\u8da3\u7684\u7cfb\u7edf\u88ab\u79f0\u4e3a4U1916-053\uff0c\u5728\u4e00\u4e2a\u975e\u5e38\u8fd1\u7684\u8f68\u9053\u4e0a\u5305\u542b\u4e24\u9897\u6052\u661f\u3002\u4e00\u79cd\u662f\u6052\u661f\u7684\u6838\u5fc3\uff0c\u5b83\u7684\u5916\u5c42\u88ab\u5265\u79bb\uff0c\u5269\u4e0b\u7684\u6052\u661f\u5bc6\u5ea6\u6bd4\u592a\u9633\u5927\u5f97\u591a\u3002\u53e6\u4e00\u9897\u662f\u4e2d\u5b50\u661f\uff0c\u4e00\u9897\u5927\u8d28\u91cf\u6052\u661f\u5728\u8d85\u65b0\u661f\u7206\u70b8\u4e2d\u574d\u584c\u65f6\u4ea7\u751f\u7684\u5bc6\u5ea6\u66f4\u9ad8\u7684\u7269\u4f53\u3002\u4e2d\u5b50\u661f(\u7070\u8272)\u663e\u793a\u5728\u8fd9\u4f4d\u827a\u672f\u5bb6\u7684\u5370\u8c61\u4e2d\uff0c\u5b83\u4f4d\u4e8e\u4e00\u4e2a\u70ed\u6c14\u76d8\u7684\u4e2d\u5fc3\uff0c\u4ece\u5b83\u7684\u540c\u4f34(\u5de6\u8fb9\u7684\u767d\u8272\u6052\u661f)\u62c9\u51fa\u3002\n\u8fd9\u4e24\u9897\u81f4\u5bc6\u6052\u661f\u76f8\u8ddd\u4ec5\u7ea621.5\u4e07\u82f1\u91cc\uff0c\u5927\u81f4\u76f8\u5f53\u4e8e\u5730\u7403\u548c\u6708\u7403\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u867d\u7136\u6708\u7403\u6bcf\u6708\u7ed5\u6211\u4eec\u7684\u661f\u7403\u8fd0\u884c\u4e00\u6b21\uff0c\u4f46\u8fd9\u9897\u4f4d\u4e8e4U1916-053\u5e74\u7684\u81f4\u5bc6\u4f34\u661f\u7ed5\u7740\u4e2d\u5b50\u661f\u65cb\u8f6c\uff0c\u4ec5\u7528\u4e8650\u5206\u949f\u5c31\u5b8c\u6210\u4e86\u5b8c\u6574\u7684\u8f68\u9053\u8fd0\u884c\u3002\n\u57284U1916-053\u7684\u65b0\u5de5\u4f5c\u4e2d\uff0c\u7814\u7a76\u5c0f\u7ec4\u5206\u6790\u4e86\u6765\u81ea\u94b1\u5fb7\u62c9\u7684X\u5c04\u7ebf\u5149\u8c31-\u5373\u4e0d\u540c\u6ce2\u957f\u7684X\u5c04\u7ebf\u7684\u91cf\u3002\u4ed6\u4eec\u5728\u5149\u8c31\u4e2d\u53d1\u73b0\u4e86\u94c1\u548c\u7845\u5438\u6536X\u5c04\u7ebf\u5149\u7684\u7279\u5f81\u7279\u5f81\u3002\u5728\u5bf9\u94b1\u5fb7\u62c9\u7684\u4e09\u6b21\u72ec\u7acb\u89c2\u6d4b\u4e2d\uff0c\u6570\u636e\u663e\u793a\u63a2\u6d4b\u5230\u7684X\u5c04\u7ebf\u91cf\u6025\u5267\u4e0b\u964d\uff0c\u63a5\u8fd1\u94c1\u6216\u7845\u539f\u5b50\u9884\u8ba1\u5438\u6536X\u5c04\u7ebf\u7684\u6ce2\u957f\u3002\u663e\u793a\u88ab\u94c1\u5438\u6536\u7684\u5149\u8c31\u4e4b\u4e00-\u5de6\u4fa7\u548c\u53f3\u4fa7\u7684\u51f9\u9677-\u5305\u62ec\u5728\u4e3b\u56fe\u5f62\u4e2d\u3002\u53e6\u4e00\u5f20\u56fe\u663e\u793a\u4e86\u88ab\u7845\u5438\u6536\u7684\u5149\u8c31\u3002\u5728\u8fd9\u4e24\u4e2a\u5149\u8c31\u4e2d\uff0c\u6570\u636e\u7528\u7070\u8272\u8868\u793a\uff0c\u8ba1\u7b97\u673a\u6a21\u578b\u7528\u7ea2\u8272\u8868\u793a\u3002\n\u7136\u800c\uff0c\u4e0e\u5730\u7403\u4e0a\u53d1\u73b0\u7684\u5b9e\u9a8c\u503c\u76f8\u6bd4\uff0c\u94c1\u548c\u7845\u7684\u8fd9\u4e9b\u7279\u5f81\u4fe1\u53f7\u7684\u6ce2\u957f\u88ab\u79fb\u52a8\u5230\u66f4\u957f\u6216\u66f4\u7ea2\u7684\u6ce2\u957f(\u6bcf\u4e2a\u5438\u6536\u4fe1\u53f7\u7528\u84dd\u8272\u5782\u76f4\u7ebf\u8868\u793a)\u3002\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u5728\u94b1\u5fb7\u62c9\u7684\u4e09\u6b21\u89c2\u6d4b\u4e2d\uff0c\u5438\u6536\u7279\u5f81\u7684\u79fb\u52a8\u90fd\u662f\u76f8\u540c\u7684\uff0c\u800c\u4e14\u5b83\u592a\u5927\u4e86\uff0c\u4e0d\u80fd\u7528\u8fdc\u79bb\u6211\u4eec\u7684\u8fd0\u52a8\u6765\u89e3\u91ca\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u5f97\u51fa\u7ed3\u8bba\uff0c\u5b83\u662f\u7531\u5f15\u529b\u7ea2\u79fb\u5f15\u8d77\u7684\u3002\n\u8fd9\u4e0e\u5e7f\u4e49\u76f8\u5bf9\u8bba\u548cGPS\u6709\u4f55\u8054\u7cfb\uff1f\u6b63\u5982\u7231\u56e0\u65af\u5766\u7684\u7406\u8bba\u6240\u9884\u6d4b\u7684\u90a3\u6837\uff0c\u5728\u91cd\u529b\u4f5c\u7528\u4e0b\u7684\u65f6\u949f\u8fd0\u884c\u901f\u5ea6\u6bd4\u4ece\u8f83\u5f31\u91cd\u529b\u7684\u9065\u8fdc\u533a\u57df\u89c2\u770b\u7684\u65f6\u949f\u8fd0\u884c\u7684\u901f\u5ea6\u8981\u6162\u3002\u8fd9\u610f\u5473\u7740\u4ece\u8f68\u9053\u536b\u661f\u4e0a\u89c2\u6d4b\u5230\u7684\u5730\u7403\u4e0a\u7684\u65f6\u949f\u8fd0\u884c\u901f\u5ea6\u8f83\u6162\u3002\u4e3a\u4e86\u62e5\u6709GPS\u6240\u9700\u7684\u9ad8\u7cbe\u5ea6\uff0c\u9700\u8981\u8003\u8651\u8fd9\u79cd\u5f71\u54cd\uff0c\u5426\u5219\u4f1a\u6709\u5f88\u5c0f\u7684\u65f6\u95f4\u5dee\u5f02\uff0c\u8fd9\u5c06\u5f88\u5feb\u7d2f\u79ef\u8d77\u6765\uff0c\u8ba1\u7b97\u4e0d\u51c6\u786e\u7684\u4f4d\u7f6e\u3002\n\u6240\u6709\u7c7b\u578b\u7684\u5149\uff0c\u5305\u62ecX\u5c04\u7ebf\uff0c\u90fd\u4f1a\u53d7\u5230\u91cd\u529b\u7684\u5f71\u54cd\u3002\u6253\u4e2a\u6bd4\u65b9\uff0c\u4e00\u4e2a\u4eba\u8dd1\u4e0a\u4e00\u90e8\u6b63\u5728\u4e0b\u843d\u7684\u81ea\u52a8\u6276\u68af\u3002\u5f53\u4ed6\u4eec\u8fd9\u6837\u505a\u65f6\uff0c\u4eba\u4f1a\u6bd4\u81ea\u52a8\u6276\u68af\u9759\u6b62\u6216\u5411\u4e0a\u79fb\u52a8\u65f6\u635f\u5931\u66f4\u591a\u7684\u80fd\u91cf\u3002\u91cd\u529b\u5bf9\u5149\u4e5f\u6709\u7c7b\u4f3c\u7684\u5f71\u54cd\uff0c\u80fd\u91cf\u635f\u5931\u4f1a\u4ea7\u751f\u8f83\u4f4e\u7684\u9891\u7387\u3002\u56e0\u4e3a\u5149\u5728\u771f\u7a7a\u4e2d\u603b\u662f\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u4f20\u64ad\uff0c\u80fd\u91cf\u7684\u635f\u5931\u548c\u66f4\u4f4e\u7684\u9891\u7387\u610f\u5473\u7740\u5149\uff0c\u5305\u62ec\u94c1\u548c\u7845\u7684\u7279\u5f81\uff0c\u8f6c\u79fb\u5230\u66f4\u957f\u7684\u6ce2\u957f\u3002\n\u8fd9\u662f\u7b2c\u4e00\u4e2a\u5f3a\u6709\u529b\u7684\u8bc1\u636e\u8868\u660e\uff0c\u5728\u4e00\u5bf9\u6709\u4e2d\u5b50\u661f\u6216\u9ed1\u6d1e\u7684\u6052\u661f\u4e2d\uff0c\u5438\u6536\u4fe1\u53f7\u56e0\u91cd\u529b\u800c\u5411\u66f4\u957f\u7684\u6ce2\u957f\u79fb\u52a8\u3002\u4e4b\u524d\u5df2\u7ecf\u4ece\u767d\u77ee\u661f\u7684\u8868\u9762\u89c2\u5bdf\u5230\u4e86\u5438\u6536\u5f15\u529b\u7ea2\u79fb\u7684\u6709\u529b\u8bc1\u636e\uff0c\u6ce2\u957f\u6f02\u79fb\u901a\u5e38\u53ea\u67094U1916-053\u768415%\u5de6\u53f3\u3002\n\u79d1\u5b66\u5bb6\u4eec\u8bf4\uff0c\u5f88\u53ef\u80fd\u662f\u8986\u76d6\u7740\u4e2d\u5b50\u661f\u9644\u8fd1\u5706\u76d8\u7684\u6c14\u4f53\u5927\u6c14(\u4ee5\u84dd\u8272\u663e\u793a)\u5438\u6536\u4e86X\u5c04\u7ebf\uff0c\u4ece\u800c\u4ea7\u751f\u4e86\u8fd9\u4e9b\u7ed3\u679c\u3002(\u8fd9\u79cd\u5927\u6c14\u5c42\u4e0e\u5706\u76d8\u5916\u90e8\u7684\u7ea2\u8272\u6c14\u4f53\u51f8\u8d77\u65e0\u5173\uff0c\u7ea2\u8272\u6c14\u4f53\u5728\u6bcf\u4e2a\u8f68\u9053\u4e0a\u963b\u6321\u4e00\u6b21\u6765\u81ea\u5706\u76d8\u5185\u90e8\u7684\u5149\u3002)\u3002\u5149\u8c31\u6f02\u79fb\u7684\u5927\u5c0f\u4f7f\u5f97\u7814\u7a76\u5c0f\u7ec4\u53ef\u4ee5\u5229\u7528\u5e7f\u4e49\u76f8\u5bf9\u8bba\u5e76\u5047\u8bbe\u4e2d\u5b50\u661f\u7684\u6807\u51c6\u8d28\u91cf\u6765\u8ba1\u7b97\u5927\u6c14\u5c42\u8ddd\u79bb\u4e2d\u5b50\u661f\u6709\u591a\u8fdc\u3002\u4ed6\u4eec\u53d1\u73b0\uff0c\u5927\u6c14\u5c42\u8ddd\u79bb\u4e2d\u5b50\u661f1500\u82f1\u91cc\uff0c\u5927\u7ea6\u662f\u6d1b\u6749\u77f6\u5230\u7ebd\u7ea6\u8ddd\u79bb\u7684\u4e00\u534a\uff0c\u4ec5\u76f8\u5f53\u4e8e\u4e2d\u5b50\u661f\u5230\u4f34\u661f\u8ddd\u79bb\u76840.7%\u3002\u5b83\u53ef\u80fd\u4ece\u4e2d\u5b50\u661f\u5ef6\u4f38\u6570\u767e\u82f1\u91cc\u3002\n\u5728\u4e09\u4e2a\u5149\u8c31\u4e2d\u7684\u4e24\u4e2a\u4e2d\uff0c\u4e5f\u6709\u8bc1\u636e\u8868\u660e\u5438\u6536\u4fe1\u53f7\u5df2\u7ecf\u79fb\u52a8\u5230\u66f4\u7ea2\u7684\u6ce2\u957f\uff0c\u5bf9\u5e94\u4e8e\u4ece\u4e2d\u5b50\u661f\u5230\u4f34\u661f\u7684\u8ddd\u79bb\u53ea\u67090.04%\u3002\u7136\u800c\uff0c\u4e0e\u8ddd\u79bb\u6052\u661f\u66f4\u8fdc\u7684\u7279\u5f81\u76f8\u6bd4\uff0c\u68c0\u6d4b\u5230\u8fd9\u4e9b\u7279\u5f81\u7684\u7f6e\u4fe1\u5ea6\u8f83\u4f4e\u3002\n\u79d1\u5b66\u5bb6\u4eec\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u5e74\u91cc\u83b7\u5f97\u4e86\u66f4\u591a\u7684\u94b1\u5fb7\u62c9\u89c2\u6d4b\u65f6\u95f4\uff0c\u4ee5\u4fbf\u66f4\u8be6\u7ec6\u5730\u7814\u7a76\u8fd9\u4e2a\u7cfb\u7edf\u3002\n\u63cf\u8ff0\u8fd9\u4e9b\u7ed3\u679c\u7684\u4e00\u7bc7\u8bba\u6587\u53d1\u8868\u57282020\u5e748\u670810\u65e5\u7684\u201c\u5929\u4f53\u7269\u7406\u6742\u5fd7\u201d\u4e0a\u3002\u66f4\u591a\u4fe1\u606f\uff1aNicolas Trueba\u7b49\u4eba\u3002\u8d85\u81f4\u5bc6\u4e2d\u5b50\u661fX\u5c04\u7ebf\u53cc\u661f4U1916-053\u4e2d\u7684\u7ea2\u79fb\u5185\u76d8\u5927\u6c14\u548c\u77ac\u6001\u5438\u6536\u4f53\uff0c\u5929\u4f53\u7269\u7406\u6742\u5fd7(2020)\u3002\u7f51\u5740\uff1a10.3847/20418213/aba9de\uff0carxiv.org/abs/2008.01083", "note_en": "What do Albert Einstein, the Global Positioning System (GPS), and a pair of stars 200,000 trillion miles from Earth have in common?    The answer is an effect from Einstein&#39;s General Theory of Relativity called the &#34; ,&#34; where light is shifted to redder colors because of gravity. Using NASA&#39;s Chandra X-ray Observatory, astronomers have discovered the phenomenon in two   orbiting each other in our galaxy about 29,000   (200,000 trillion miles) away from Earth. While these stars are very distant, gravitational redshifts have tangible impacts on modern life, as scientists and engineers must take them into account to enable accurate positions for GPS.\n  While scientists have found incontrovertible evidence of gravitational redshifts in our solar system, it has been challenging to observe them in more distant objects across space. The new Chandra results provide convincing evidence for gravitational redshift effects at play in a new cosmic setting.\n  The intriguing system known as 4U 1916-053 contains two stars in a remarkably close orbit. One is the core of a star that has had its outer layers stripped away, leaving a star that is much denser than the Sun. The other is a neutron star, an even denser object created when a massive star collapses in a supernova explosion. The neutron star (grey) is shown in this artist&#39;s impression at the center of a disk of hot gas pulled away from its companion (white star on left).\n  These two compact stars are only about 215,000 miles apart, roughly the distance between the Earth and the Moon. While the Moon orbits our planet once a month, the dense companion star in 4U 1916-053 whips around the neutron star and completes a full orbit in only 50 minutes.\n   In the new work on 4U 1916-053, the team analyzed X-ray spectra\u2014that is, the amounts of X-rays at different wavelengths\u2014from Chandra. They found the characteristic signature of the absorption of X-ray light by iron and silicon in the spectra. In three separate observations with Chandra, the data show a sharp drop in the detected amount of X-rays close to the wavelengths where the iron or silicon atoms are expected to absorb the X-rays. One of the spectra showing absorption by iron\u2014the dips on the left and right\u2014is included in the main graphic. An additional graphic shows a spectrum with absorption by silicon. In both spectra the data are shown in grey and a computer model in red.\n    However, the wavelengths of these characteristic signatures of iron and silicon were shifted to longer, or redder wavelengths compared to the laboratory values found here on Earth (shown with the blue, vertical line for each absorption signature). The researchers found that the shift of the absorption features was the same in each of the three Chandra observations, and that it was too large to be explained by motion away from us. Instead they concluded it was caused by gravitational redshift.\n  How does this connect with General Relativity and GPS? As predicted by Einstein&#39;s theory, clocks under the force of gravity run at a slower rate than clocks viewed from a distant region experiencing weaker gravity. This means that clocks on Earth observed from orbiting satellites run at a slower rate. To have the high precision needed for GPS, this effect needs to be taken into account or there will be small differences in time that would add up quickly, calculating inaccurate positions.\n  All types of light, including X-rays, are also affected by gravity. An analogy is that of a person running up an escalator that is going down. As they do this, the person loses more energy than if the escalator was stationary or going up. The force of gravity has a similar effect on light, where a loss in energy gives a lower frequency. Because light in a vacuum always travels at the same speed, the loss of energy and lower frequency means that the light, including the signatures of iron and silicon, shift to longer wavelengths.\n  This is the first strong evidence for absorption signatures being shifted to longer wavelengths by gravity in a pair of stars that has either a neutron star or black hole. Strong evidence for gravitational redshifts in absorption has previously been observed from the surface of white dwarfs, with wavelength shifts typically only about 15% of that for 4U 1916-053.\n   Scientists say it is likely that a gaseous atmosphere blanketing the disk near the neutron star (shown in blue) absorbed the X-rays, producing these results. (This atmosphere is unrelated to the bulge of red gas in the outer part of the disk that blocks light from the inner part of the disk once per orbit.) The size of the shift in the spectra allowed the team to calculate how far this atmosphere is away from the neutron star, using General Relativity and assuming a standard mass for the neutron star. They found that the atmosphere is located 1,500 miles from the neutron star, about half the distance from Los Angeles to New York and equivalent to only 0.7% of the distance from the neutron star to the companion. It likely extends over several hundred miles from the neutron star.\n  In two of the three spectra there is also evidence for absorption signatures that have been shifted to even redder wavelengths, corresponding to a distance of only 0.04% of the distance from the neutron star to the companion. However, these signatures are detected with less confidence than the ones further away from the   star.\n  Scientists have been awarded further Chandra observation time in the upcoming year to study this system in more detail.\n  A paper describing these results was published in the August 10th, 2020 issue of The  Astrophysical Journal.        More information:\t\t\t\t\t\t\t\t\t\t\t\tNicolas Trueba et al. A Redshifted Inner Disk Atmosphere and Transient Absorbers in the Ultracompact Neutron Star X-Ray Binary 4U 1916\u2013053,  The Astrophysical Journal (2020).  DOI: 10.3847/2041-8213/aba9de ,  arxiv.org/abs/2008.01083", "posttime": "2020-10-24 07:32:27", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u76f8\u5bf9\u8bba,theory,\u4e2d\u5b50\u661f", "title": "\u7231\u56e0\u65af\u5766\u7684\u76f8\u5bf9\u8bba\uff0c\u5bf9GPS\u6765\u8bf4\u81f3\u5173\u91cd\u8981\uff0c\u5728\u9065\u8fdc\u7684\u6052\u661f\u4e2d\u53ef\u4ee5\u770b\u5230", "title_en": "Einstein's theory of relativity, critical for GPS, seen in distant stars", "transed": 1, "url": "https://phys.org/news/2020-10-einstein-theory-relativity-critical-gps.html", "via": "", "real_tags": ["\u76f8\u5bf9\u8bba", "theory", "\u4e2d\u5b50\u661f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1030831, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e0b\u8f7dPDF\u6458\u8981\uff1a\u672c\u6587\u8ba8\u8bba\u4e86\u4e00\u79cd\u65b0\u7684\u68c0\u6d4b\u79fb\u52a8\u7684\u5757\u72b6\u7269\u4f53\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u57fa\u4e8e\u8fd9\u4e9b\u7269\u4f53\u5728\u7531\u591a\u4e2a\u63a2\u6d4b\u5668\u6d4b\u91cf\u7684\u5c40\u90e8\u5f15\u529b\u573a\u4e2d\u4ea7\u751f\u7684\u65f6\u95f4\u53d8\u5316\u3002\u8fd9\u79cd\u65b9\u6cd5\u53ef\u80fd\u4e3a\u63a2\u6d4b\u9690\u5f62\u98de\u673a\u3001\u65e0\u4eba\u673a\u3001\u5de1\u822a\u5bfc\u5f39\u548c\u5f39\u9053\u5bfc\u5f39\u63d0\u4f9b\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6cd5\u3002\u901a\u8fc7\u53cd\u6f14\u4e00\u7ec4\u975e\u7ebf\u6027\u4ee3\u6570\u65b9\u7a0b\uff0c\u53ef\u4ee5\u5229\u7528\u5f15\u529b\u573a\u4e2d\u7684\u65f6\u95f4\u53d8\u5316\u6765\u8ba1\u7b97\u4e00\u4e2a\u6216\u591a\u4e2a\u8fd0\u52a8\u7269\u4f53\u7684\u8d28\u91cf\u3001\u4f4d\u7f6e\u548c\u901f\u5ea6\u3002\u8be5\u65b9\u6cd5\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u57fa\u4e8e\u91cd\u529b\u7684\u4e09\u89d2\u6d4b\u91cf\u5f62\u5f0f\u3002\u6839\u636e\u6570\u91cf\u7ea7\u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u4f30\u8ba1\uff0c\u5728\u73b0\u5b9e\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6709\u53ef\u80fd\u8bbe\u8ba1\u51fa\u6bd4\u76ee\u524d\u7684\u88c5\u7f6e\u7075\u654f4\u52305\u4e2a\u6570\u91cf\u7ea7\u7684\u91cd\u529b\u88c5\u7f6e\uff0c\u8fd9\u79cd\u65b9\u6cd5\u662f\u53ef\u884c\u7684\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u6837\u7684\u7075\u654f\u5ea6\u6c34\u5e73\uff0c\u6211\u4eec\u5efa\u8bae\u8bbe\u8ba1\u5229\u7528\u88ab\u79f0\u4e3a\u91cd\u529b\u8bf1\u5bfc\u91cf\u5b50\u5e72\u6d89\u7684\u6c34\u91cf\u5b50\u529b\u5b66\u6548\u5e94\u7684\u63a2\u6d4b\u5668\uff0c\u800c\u4e14\uff0c\u5373\u4f7f\u6211\u4eec\u6709\u4e00\u4e2a\u5b8c\u7f8e\u7684\u63a2\u6d4b\u5668\uff0c\u4e5f\u9700\u8981\u786e\u5b9a\u5404\u79cd\u5927\u6c14\u6270\u52a8\u548c\u5176\u4ed6\u566a\u58f0\u6e90\u7684\u5927\u5c0f\u3002", "note_en": "Download PDF  Abstract: This paper discusses a novel approach for detecting moving massive objectsbased on the time variation that these objects produce in the localgravitational field measured by several detectors. Such an approach may providea viable method for detecting stealth aircraft, UAVs, cruise, and ballisticmissiles. By inverting a set of nonlinear algebraic equations, it is possibleto use the time variation in the gravitational fields to compute the mass,position, and velocity of one or more moving objects. The approach isessentially a gravity-based form of triangulation. Based on order-of-magnitudecalculations, we estimate that under realistic scenarios, this approach will befeasible if it is possible to design gravimetric devices that are four to fiveorder of magnitude more sensitive than current devices. To achieve such a levelof sensitivity, we suggest designing detectors that exploit aquantum-mechanical effect known as gravity-induced quantum interference.Furthermore, even if we have a perfect detector, it will be necessary todetermine the magnitude of various atmospheric disturbances and other sourcesof noise.", "posttime": "2020-10-24 07:32:21", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u91cd\u529b,radar,\u65b9\u6cd5", "title": "\u91cd\u529b\u96f7\u8fbe\uff1a\u57fa\u4e8e\u91cd\u529b\u7684\u9759\u6b62\u80cc\u90e8\u8fd0\u52a8\u70b9\u8d28\u91cf\u68c0\u6d4b", "title_en": "Gravimetric Radar: Gravity-Based Detection of a Point-Mass Moving in Static Back", "transed": 1, "url": "https://arxiv.org/abs/1208.2377", "via": "", "real_tags": ["\u91cd\u529b", "radar", "\u65b9\u6cd5"]}, {"category": "", "categoryclass": "", "imagename": "ad219b609a2ada40b9923a7e5d4373f9.png", "infoid": 1030830, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "D3-ZOOM\u662f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u5065\u58ee\u3001\u5f3a\u5927\u548c\u7075\u6d3b\u7684\u3002\u4f46\u662f\uff0c\u5b83\u7684\u7075\u6d3b\u6027\u610f\u5473\u7740\u8981\u6b63\u786e\u914d\u7f6e\u548c\u4f7f\u7528\u5b83\u53ef\u80fd\u76f8\u5f53\u590d\u6742\u3002\u8fd9\u7bc7\u6587\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5305\u88c5\u5b83\u7684\u65b9\u6cd5\uff0c\u964d\u4f4e\u4e86\u5b83\u7684\u7075\u6d3b\u6027\uff0c\u4f46\u6781\u5927\u5730\u7b80\u5316\u4e86\u5b83\u5728\u6211\u7684\u7528\u4f8b\u4e2d\u7684\u4f7f\u7528\u3002\n\u4e3a\u4e86\u5851\u9020\u8ba8\u8bba\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e0b\u9762\u7684\u56fe\u8868\uff0c\u5141\u8bb8\u60a8\u4f7f\u7528\u9f20\u6807\u6216\u89e6\u6478\u4ea4\u4e92\u5e73\u79fb\u548c\u7f29\u653e\u7ed8\u56fe\u533a\u57df-\u3002\n\u7b2c\u4e00\u8282\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u5982\u4f55\u4f7f\u7528d3-zoom\u7684\u793a\u4f8b\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u542e\u5438\u8fc7\u90a3\u4e2a\u7279\u5b9a\u7684\u9e21\u86cb\uff0c\u6211\u5efa\u8bae\u8df3\u5230\u4e0b\u4e00\u8282\u3002\nConst prng=d3\u3002\u968f\u673a\u6b63\u6001()\uff1b\u5e38\u91cf\u6570\u636e=d3\u3002\u8303\u56f4(1 E3)\u3002Map(d=&gt\uff1b({x\uff1aprng()\uff0cy\uff1aprng()}))\uff1bconst x=d3.\u3002Scale\u7ebf\u6027()\u3002Domain([-5\uff0c5])\uff1bconst y=d3\u3002Scale\u7ebf\u6027()\u3002\u57df([-5\uff0c5])\uff1b\u5e38\u91cfx2=x\u3002Copy()\uff1bconst y2=y\u3002Copy()\uff1b\n\u8fd9\u7b2c\u4e00\u6bb5\u4ee3\u7801\u53ea\u662f\u5728\u539f\u70b9\u548c\u5173\u8054\u7684x/y\u6807\u5c3a\u5468\u56f4\u521b\u5efa\u4e00\u4e9b\u968f\u673a\u7684x/y\u6570\u636e\u70b9\uff0c\u4ee5\u5448\u73b0\u5177\u6709\u786c\u7f16\u7801\u57df\u7684\u503c\u3002\n\u8fd9\u6bb5\u4ee3\u7801\u4e2d\u503c\u5f97\u6ce8\u610f\u7684\u90e8\u5206\u662f\u6700\u540e\u4e24\u884c\uff0c\u5b83\u4eec\u521b\u5efa\u523b\u5ea6\u7684\u526f\u672c\u3002\u8fd9\u4e9b\u5c06\u5728\u7a0d\u540e\u7684\u2026\u4e2d\u975e\u5e38\u91cd\u8981\u3002\n\u5176\u4f59\u7684\u4ee3\u7801\u7247\u6bb5\u4f7f\u7528D3FC\u7ec4\u4ef6\u3002\u4f46\u662f\uff0c\u57fa\u672c\u6982\u5ff5\u5e94\u8be5\u719f\u6089\u9999\u8349D3\uff0c\u5e76\u4e14\u5f88\u5bb9\u6613\u5e94\u7528\u5230\u9999\u8349D3\u3002\n\u5e38\u91cf\u7ea7\u6570=fc\u3002SeriesCanvasPoint()\u3002CrossValue(d=&gt\uff1bd..\u3002X)\u3002MainValue(d=&gt\uff1bd..\u3002Y)\u3002\u5927\u5c0f(4)\uff1b\u5e38\u91cf\u7f29\u653e=d3\u3002ZOOM()\u3002\u5728(&#39\uff1b\u7f29\u653e&#39\uff1b\uff0c\u4e8b\u4ef6=&gt\uff1b{x.\u3002\u57df(\u4e8b\u4ef6\u3002\u53d8\u5f62\u3002RescaleX(X2)\u3002Domain())\uff1by\u3002\u57df(\u4e8b\u4ef6\u3002\u53d8\u5f62\u3002\u91cd\u65b0\u7f29\u653eY(Y2)\u3002Domain())\uff1bRender()\uff1b})\uff1b\n\u540c\u6837\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5f00\u59cb\u65f6\u975e\u5e38\u4e4f\u5473\uff0c\u53ea\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u914d\u7f6e\u4e3a\u5448\u73b0\u6570\u636e\u70b9\u7684\u70b9\u7cfb\u5217\u3002\n\u6b64\u4ee3\u7801\u7684\u7b2c\u4e8c\u90e8\u5206\u662f\u5927\u591a\u6570\u64cd\u4f5c\u53d1\u751f\u7684\u5730\u65b9\u3002\u6211\u4eec\u521b\u5efa\u4e00\u4e2ad3-zoom\u7ec4\u4ef6/\u884c\u4e3a\uff0c\u5e76\u4fa6\u542c\u5f53\u7528\u6237\u4e0e\u9009\u62e9\u4ea4\u4e92\u65f6\u89e6\u53d1\u7684\u7f29\u653e\u4e8b\u4ef6(\u6211\u4eec\u5c06\u5728\u4e0b\u9762\u4ecb\u7ecd\u8fd9\u5982\u4f55\u4e0e\u9009\u62e9\u76f8\u5173\u8054)\u3002\n\u5728\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u6536\u5230\u4e00\u4e2azoomTransform\uff0c\u5b83\u8868\u793a\u81ea\u7f29\u653e\u884c\u4e3a\u5e94\u7528\u4e8e\u9009\u62e9(\u6216\u663e\u5f0f\u91cd\u7f6e)\u4ee5\u6765\u6240\u6709\u4ea4\u4e92\u7684\u7ec4\u5408\u6548\u679c\u3002\n\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u5728\u5148\u524d\u521b\u5efa\u7684x/y\u6bd4\u4f8b\u526f\u672c(x2/y2)\u4e0a\u4f7f\u7528\u53d8\u6362\u4e2d\u7684\u91cd\u7f29\u653e\u5de5\u5177\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5148\u524d\u91cd\u65b0\u7f29\u653e\u7684\u526f\u672c(x/y)\u3002\u5b9e\u9645\u4e0a\uff0c\u590d\u5236\u7684\u6bd4\u4f8b\u8868\u793a\u5e94\u5e94\u7528\u53d8\u6362\u7684\u57fa\u7ebf\u3002\u5148\u524d\u91cd\u65b0\u7f29\u653e\u7684\u662f\u5df2\u5e94\u7528\u53d8\u6362\u7684\u5de5\u4f5c\u6bd4\u4f8b\u3002\n\u5e38\u91cf\u56fe\u8868=fc\u3002\u56fe\u8868\u7b1b\u5361\u5c14(x\uff0cy)\u3002Chart Label(\u753b\u5e03\u7f29\u653e1000\u70b9)\u3002CanvasPlotArea(\u7cfb\u5217)\u3002\u88c5\u9970(sel=&gt\uff1b{sel.\u3002\u8f93\u5165()\u3002\u9009\u62e9(&#39\uff1b.Plot-Area&#39\uff1b)\u3002\u5728(&#39\uff1b\u6d4b\u91cf\u8303\u56f4&#39\uff1b\uff0c\u4e8b\u4ef6=&gt\uff1b{x2.\u3002\u8303\u56f4([0\uff0c\u4e8b\u4ef6\u3002\u7ec6\u8282\u3002\u5bbd\u5ea6])\uff1by2\u3002\u8303\u56f4([\u4e8b\u4ef6\u3002\u7ec6\u8282\u3002\u9ad8\u5ea6\uff0c0])\uff1b})\u3002Call(Zoom)\uff1b})\uff1b\n\u6b64\u4ee3\u7801\u5757\u521b\u5efa\u4e00\u4e2a\u7b1b\u5361\u5c14\u56fe\u8868\uff0c\u7136\u540e\u4f7f\u7528x/y\u523b\u5ea6\u548c\u7cfb\u5217\u5bf9\u5176\u8fdb\u884c\u914d\u7f6e\u3002\u88c5\u9970\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u552f\u4e00\u6709\u8da3\u7684\u90e8\u5206\uff0c\u5f53\u521b\u5efa\u7ed8\u56fe\u533a\u65f6-\u3002\n\u4fa6\u542c\u6d4b\u91cf\u4e8b\u4ef6\u4ee5\u786e\u4fddx/y\u523b\u5ea6\u526f\u672c\u4e0a\u7684\u8303\u56f4\u503c\u4fdd\u6301\u6700\u65b0\u3002\u5b83\u4eec\u7531rescaleX/Y\u53d8\u6362\u5de5\u5177\u5728\u5185\u90e8\u4f7f\u7528\u3002\n\u6700\u540e\uff0c\u6211\u4eec\u6709\u5448\u73b0\u51fd\u6570\u672c\u8eab\uff0c\u5b83\u5c06\u6570\u636e\u4e0e\u76ee\u6807\u5bb9\u5668\u76f8\u5173\u8054\u5e76\u8c03\u7528\u56fe\u8868\u7ec4\u4ef6\u3002\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u83b7\u5f97\u4e86\u4e0a\u9762\u793a\u4f8b\u6240\u9700\u7684\u6240\u6709\u4ee3\u7801\u3002\u5411\u56fe\u8868\u6dfb\u52a0\u7f29\u653e\u884c\u4e3a\u771f\u7684\u4e0d\u662f\u5f88\u597d\u7684\u4ee3\u7801\u3002D3-zoom\u7ec4\u4ef6\u4e3a\u6211\u4eec\u5904\u7406\u4e86\u5927\u91cf\u7684\u4f4e\u7ea7\u4ea4\u4e92\u5904\u7406\u3002\n\u7136\u800c\uff0c\u7ec4\u4ef6\u7684\u7075\u6d3b\u6027\u786e\u5b9e\u610f\u5473\u7740API\u4e0d\u50cf\u4e0a\u9762\u7684\u7528\u4f8b\u90a3\u6837\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5173\u6ce8\u7ec6\u8282\uff0c\u6bd4\u5982\u7ef4\u62a4\u7b2c\u4e8c\u7ec4\u6bd4\u4f8b\u3001\u5c06\u53d8\u6362\u5e94\u7528\u5230\u8fd9\u4e9b\u6bd4\u4f8b\u6216\u4fdd\u6301\u8fd9\u4e9b\u6bd4\u4f8b\u4e0a\u7684\u8303\u56f4\u3002\n\u5c06\u4e0a\u9762\u7684\u75db\u70b9\u4f5c\u4e3a\u66f4\u597d\u7684API\u7684\u7075\u611f\u6765\u6e90\uff0c\u6b64\u7528\u4f8b\u7684\u7406\u60f3\u7ec4\u4ef6\u5c06\u53e6\u5916-\u3002\n\u65e2\u7136\u8fd9\u4e2a\u5047\u8bbe\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06\u6bd4\u4f8b\u4e0e\u9009\u62e9\u76f8\u5173\u8054\u7684\u7b80\u660e\u65b9\u5f0f\uff0c\u90a3\u4e48\u6700\u597d\u89e3\u51b3\u53e6\u4e00\u4e2a\u4f7f\u7528d3-zoom\u5f88\u96be\u5b9e\u73b0\u7684\u5e38\u89c1\u8981\u6c42-\u3002\n\u8fd9\u5728\u591a\u4e2a\u9762\u677f\u5171\u4eab\u5355\u4e2ax\u6bd4\u4f8b\u3001\u5c0f\u500d\u6570\u56fe\u8868\u5171\u4eab\u4e24\u4e2a\u6bd4\u4f8b\u6216\u66f4\u5fae\u5999\u7684\u53ef\u7528\u6027\u8003\u8651\u56e0\u7d20(\u4f8b\u5982\u5141\u8bb8\u7528\u6237\u5e73\u79fb\u6216\u7f29\u653e\u8f74\u4ee5\u4ec5\u6539\u53d8\u5176\u5173\u8054\u6bd4\u4f8b)\u7684\u56fe\u8868\u4e2d\u4f1a\u5f88\u6709\u7528\u3002\n\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u6211\u786e\u4fe1\u6211\u4eec\u5b9e\u73b0\u4e86\u8fd9\u6837\u4e00\u4e2a\u65b0\u7ec4\u4ef6\u5e76\u4e0d\u4ee4\u4eba\u60ca\u8bb6\u3002\u4e0b\u9762\u7684\u56fe\u8868\u4e0e\u524d\u9762\u7684\u793a\u4f8b\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\uff0c\u4f7f\u7528D3FC-ZOOM\u521b\u5efa\u3002\n\u8981\u5141\u8bb8\u5728\u8f74\u4e0a\u5e73\u79fb\u548c\u7f29\u653e\uff0c\u5bf9\u4e0a\u9762\u7684\u201c\u5047\u8bbe\u201d\u4ee3\u7801\u552f\u4e00\u9700\u8981\u7684\u66f4\u6539\u662f\u8c03\u7528\u8f74\u9009\u62e9\u4e0a\u7684\u7ec4\u4ef6\u3002\u5b83\u6539\u53d8\u4e86\u88c5\u9970\u529f\u80fd\uff0c\u5982\u4e0b\u6240\u793a-\u3002\n\u56fe\u8868\u3002\u88c5\u9970(sel=&gt\uff1b{sel.\u3002\u8f93\u5165()\u3002\u9009\u62e9All(&#39\uff1b.lot-Area&#39\uff1b)\u3002\u8c03\u7528(zoom\uff0cx\uff0cy)\uff1bsel.\u3002\u8f93\u5165()\u3002\u9009\u62e9\u5168\u90e8(&#39\uff1b.x\u8f74&#39\uff1b)\u3002Call(zoom\uff0cx\uff0cnull)\uff1bsel\u3002\u8f93\u5165()\u3002\u9009\u62e9\u5168\u90e8(&#39\uff1b.y\u8f74&#39\uff1b)\u3002Call(zoom\uff0cnull\uff0cy)\uff1b})\uff1b\n\u5c3d\u7ba1\u4f7f\u7528\u4e86selectAll\uff0c\u4f46\u6bcf\u4e2a\u8f74\u53ea\u6709\u4e00\u4e2a\u5bb9\u5668\u3002\u5b83\u5728\u529f\u80fd\u4e0a\u7b49\u540c\u4e8eSELECT\uff0c\u4f46\u907f\u514d\u4e86\u5bf9\u7528\u4e8e\u521b\u5efa\u8f74\u5bb9\u5668\u7684\u6570\u636e\u8054\u63a5\u7684\u5e72\u6270\u3002\n\u5728\u5185\u90e8\uff0c\u8be5\u7ec4\u4ef6\u4f7f\u7528d3-zoom\u7ec4\u4ef6\uff0c\u6ce8\u518c\u5176\u4ea4\u4e92\u5904\u7406\u7a0b\u5e8f\u5e76\u54cd\u5e94\u7f29\u653e\u4e8b\u4ef6\u3002\u5b83\u4e0d\u4f7f\u7528\u8f6c\u6362\u6765\u8ddf\u8e2a\u7528\u6237\u4ea4\u4e92\u7684\u72b6\u6001\uff0c\u800c\u662f\u76f4\u63a5\u5c06\u8be5\u72b6\u6001\u5b58\u50a8\u5728\u6bd4\u4f8b\u57df\u4e2d\u3002\n\u8fd9\u5177\u6709\u5141\u8bb8\u591a\u4e2a\u5b9e\u4f8b\u5728\u6bd4\u4f8b\u57df\u503c\u4e0a\u540c\u6b65\u7684\u4f18\u70b9\u3002\u5b83\u8fd8\u5141\u8bb8\u901a\u8fc7\u5176\u4ed6\u4ee3\u7801(\u4f8b\u5982\uff0c\u5355\u51fb\u6309\u94ae\u3001\u6d41\u5f0f\u4f20\u8f93\u6570\u636e\u7b49)\u76f4\u63a5\u66f4\u65b0\u6bd4\u4f8b\u57df\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u8f6c\u6362\u3002\n\u8fd9\u79cd\u65b9\u6cd5\u7684\u660e\u663e\u7f3a\u70b9\u662f\uff0c\u5c1d\u8bd5\u5904\u7406\u4e0d\u8fde\u7eed\u7684\u6bd4\u4f8b\u4f1a\u6709\u56f0\u96be\u3002\u901a\u8fc7\u76f4\u63a5\u4f7f\u7528\u6bd4\u4f8b\u57df\u503c\u4f5c\u4e3a\u6211\u4eec\u7684\u72b6\u6001\uff0c\u6211\u4eec\u4e22\u5931\u4e86\u53d8\u6362\u7684\u57fa\u4e8e\u4e2d\u95f4\u50cf\u7d20\u7684\u8868\u793a\u3002\n\u516c\u5e73\u8b66\u544a\uff1a\u8fd9\u4f1a\u5f71\u54cd\u5230\u5b9e\u73b0\u7684\u6742\u8349\u3002\u5982\u679c\u60a8\u53ea\u662f\u5c1d\u8bd5\u4f7f\u7528\u8be5\u7ec4\u4ef6\uff0c\u5219\u4e0d\u9700\u8981\u4e86\u89e3\u8fd9\u4e9b\u7ec6\u8282\uff0c\u6211\u5efa\u8bae\u8df3\u5230\u4e0b\u4e00\u8282\u3002\n\u4e3a\u4e86\u7b80\u5316\u672c\u8282\u4e2d\u7684\u89e3\u91ca\uff0c\u6211\u4f7f\u7528SCALE\u4f5c\u4e3ax\u548c/\u6216y SCALE\u7684\u7b80\u5199\u3002\u6b64\u5916\uff0c\u867d\u7136\u7ec4\u4ef6\u652f\u6301\u591a\u8282\u70b9\u9009\u62e9\uff0c\u4f46\u6211\u5047\u8bbe\u9009\u62e9\u53ea\u5305\u542b\u4e00\u4e2a\u8282\u70b9\u3002\n\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u8003\u8651\u4e00\u4e0bd3-zoom\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5047\u8bbe\u5b58\u5728\u4e0e\u9009\u62e9\u76f8\u5173\u8054\u7684\u73b0\u6709\u8f6c\u6362(T0)\u3002\u7528\u6237\u7684\u4ea4\u4e92\u4f7f\u7ec4\u4ef6\u4ea7\u751f\u5230\u8be5\u8f6c\u6362\u7684\u589e\u91cf(DT)\u3002\n\u8fd9\u4e24\u4e2a\u503c\u7ec4\u5408\u5728\u4e00\u8d77\u4ee5\u4ea7\u751f\u4f20\u9012\u5230\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u7684\u8f6c\u6362(t1=t0+dt)\u3002\u6b64\u8f6c\u6362\u8fd8\u6839\u636e\u9009\u62e9\u5b58\u50a8\u4e3aDOM\u8282\u70b9\u4e0a\u7684\u5c5e\u6027\u3002\n\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u5c06\u5148\u524d\u7684\u53d8\u6362\u5e94\u7528\u4e8e\u6bd4\u4f8b\uff0c\u90a3\u4e48\u73b0\u6709\u53d8\u6362\u548c\u589e\u91cf\u7684\u8fd9\u79cd\u7ec4\u5408\u5c31\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u6709\u6548\u5730\u53cc\u91cd\u5e94\u7528\u4e86\u524d\u9762\u7684\u8f6c\u6362\uff0c\u5bfc\u81f4\u4e86\u5bf9\u7528\u6237\u4ea4\u4e92\u7684\u4e00\u4e9b\u4ee4\u4eba\u5174\u594b/\u4ee4\u4eba\u56f0\u60d1\u7684\u6307\u6570\u54cd\u5e94\u3002\n\u5c31\u5176\u6838\u5fc3\u800c\u8a00\uff0cD3FC-ZOOM\u6267\u884c\u7684\u89e3\u51b3\u65b9\u6cd5\u4e0e\u6211\u4eec\u4e0a\u9762\u6f14\u793a\u7684\u76f8\u540c\u3002\u5f53\u4e0e\u9009\u62e9\u76f8\u5173\u8054\u65f6\uff0c\u8fd8\u4f1a\u5411\u8be5\u7ec4\u4ef6\u4f20\u9012\u5de5\u4f5c\u523b\u5ea6\u3002\u8fd9\u4e0e\u5e94\u7528\u8f6c\u6362\u65f6\u7528\u4f5c\u57fa\u7ebf\u7684\u526f\u672c\u4e00\u8d77\u5b58\u50a8\u5728DOM\u8282\u70b9\u4e0a\u3002\n\u57fa\u7ebf\u6bd4\u4f8b\u7684\u8303\u56f4\u5c06\u4f7f\u7528\u5de5\u4f5c\u6bd4\u4f8b\u7684\u5f53\u524d\u8303\u56f4\u8fdb\u884c\u66f4\u65b0\u3002\n\u4f7f\u7528\u91cd\u7f29\u653e\u5de5\u5177\u5c06\u57fa\u7ebf\u6bd4\u4f8b\u4e0e\u53d8\u6362\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u4ee5\u751f\u6210\u7ed3\u679c\u6bd4\u4f8b\u3002\nD3FC-ZOOM\u7684\u65b0\u90e8\u5206\u5141\u8bb8\u5916\u90e8\u4fee\u6539\u5de5\u4f5c\u79e4\u7684\u8303\u56f4\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u663e\u5f0f\u8bbe\u7f6e\u57df\u6216\u901a\u8fc7\u4e0e\u76f8\u540c\u6bd4\u4f8b\u76f8\u5173\u8054\u7684\u4e0d\u540c\u9009\u62e9\u4e0a\u7684\u7f29\u653e\u4e8b\u4ef6\u6765\u5b9e\u73b0\u3002\n\u4e3a\u4e86\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u8be5\u7ec4\u4ef6\u53e6\u5916\u5b58\u50a8-*\u53e6\u4e00\u4e2a\u523b\u5ea6\u7684\u526f\u672c\uff0c\u8868\u793a\u523b\u5ea6\u7684\u5148\u524d\u6216\u6700\u540e\u89c2\u5bdf\u5230\u7684\u72b6\u6001(\u5728\u6267\u884c\u91cd\u65b0\u5b9a\u6807\u64cd\u4f5c\u4e4b\u540e)\u3002*\u8868\u793a\u8f6c\u6362\u7684\u4e0a\u4e00\u6b21\u6216\u6700\u540e\u4e00\u6b21\u89c2\u5bdf\u5230\u7684\u72b6\u6001\u7684\u8f6c\u6362\u526f\u672c\u3002\n\u5982\u679c\u5b83\u68c0\u6d4b\u5230\u5de5\u4f5c\u79e4\u7684\u57df\u4e0e\u5176\u5148\u524d\u72b6\u6001\u4e0d\u540c\uff0c\u5219\u5b83\u77e5\u9053\u8be5\u57df\u5df2\u88ab\u5916\u90e8\u4fee\u6539\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7b80\u5355\u5730\u5c06\u4f20\u9012\u5230\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u7684\u8f6c\u6362\u5e94\u7528\u4e8e\u57fa\u7ebf\u523b\u5ea6\u4f1a\u4ea7\u751f\u4e0d\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u56e0\u4e3at0\u4e0d\u8868\u793a\u524d\u4e00\u4e2a\u523b\u5ea6\u548c\u57fa\u7ebf\u523b\u5ea6\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\n\u76f8\u53cd\uff0c\u8be5\u7ec4\u4ef6\u8ba1\u7b97\u53d8\u6362\u589e\u91cf(dt=t1-t0)\uff0c\u5c06\u57fa\u7ebf\u91cd\u7f6e\u4e3a\u5de5\u4f5c\u6bd4\u4f8b\u7684\u65b0\u526f\u672c\uff0c\u5c06\u589e\u91cf(Dt)\u5e94\u7528\u4e8e\u6b64\u57fa\u7ebf\uff0c\u7136\u540e\u4f7f\u7528\u7ed3\u679c\u57df\u66f4\u65b0\u5de5\u4f5c\u6bd4\u4f8b\u3002\n\u4e0e\u7f16\u5199\u4ee3\u7801\u76f8\u6bd4\uff0c\u7528\u8bed\u8a00\u6765\u63cf\u8ff0\u8981\u56f0\u96be\u5f97\u591a\uff0c\u56e0\u6b64\u5feb\u901f\u6d4f\u89c8\u4e00\u4e0b\u5b9e\u73b0\u53ef\u80fd\u4f1a\u66f4\u597d\u5730\u7406\u89e3\u3002\n\u6211\u6beb\u4e0d\u6000\u7591\uff0c\u6211\u4eec\u4e3aD3FC-ZOOM\u521b\u5efa\u7684\u65b0API\u5c06\u4e0d\u80fd\u7075\u6d3b\u5730\u5904\u7406\u5176\u4ed6\u4eba\u7684\u7528\u4f8b\uff0c\u6216\u8005\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u65e0\u6cd5\u6ee1\u8db3\u5176\u4ed6\u4eba\u7684\u7528\u4f8b\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u6211\u719f\u6089\u5b9e\u73b0\u7684\u5e38\u89c1\u7528\u4f8b\uff0c\u6211\u53d1\u73b0\u5b83\u975e\u5e38\u5f3a\u5927\u4e14\u6613\u4e8e\u4f7f\u7528\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4f1a\u4e89\u8fa9\u8bf4\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u7ed9\u95ee\u9898\u6dfb\u52a0\u7ea6\u675f\uff0c\u4f60\u5c31\u4f1a\u8ba9\u81ea\u5df1\u83b7\u5f97\u66f4\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6700\u7ec8\u4f7f\u60a8\u80fd\u591f\u4e13\u6ce8\u4e8e\u60a8\u8ba4\u4e3a\u91cd\u8981\u7684\u7ec6\u8282\u7684\u89e3\u51b3\u65b9\u6848\u3002\n\u6211\u53eb\u514b\u91cc\u65af\u00b7\u666e\u83b1\u65af\uff0c\u6211\u4f4f\u5728\u6cf0\u6069\u6cb3\u7554\u7684\u7ebd\u5361\u65af\u5c14\uff0c\u662f\u65af\u79d1\u7279\u903b\u8f91\u516c\u53f8\u7684\u4e00\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3002\u6211\u6bcf\u5929\u90fd\u5728\u4e3a\u91d1\u878d\u670d\u52a1\u516c\u53f8\u5f00\u53d1\u684c\u9762/\u5e73\u677f\u7535\u8111/\u79fb\u52a8\u7f51\u7edc\u5e94\u7528\u7a0b\u5e8f(\u4e0d\u5e78\u7684\u662f\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5927\u591a\u9690\u85cf\u5728\u4ed8\u8d39\u5899\u540e\u9762)\u3002\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u6211\u786e\u5b9e\u559c\u6b22\u5199\u535a\u5ba2\uff0c\u5728GitHub\u4e0a\u505a\u4e00\u4e9b\u6709\u8da3\u7684\u4e8b\u60c5\u3002", "note_en": "d3-zoom is incredibly robust, powerful and flexible. However, its flexibility means it can be quite complex to configure and use correctly. This post covers one way of wrapping it up, reducing its flexibility but vastly simplifying its use for my use-case.\n  To shape the discussion, we\u2019ll be creating the chart below which allows you to pan and zoom the the plot-area using your mouse or touch interactions-\n This first section runs through an example of how to use d3-zoom. If you\u2019ve already  sucked that particular egg, I\u2019d recommend skipping ahead to the  next section.\n const  prng  =  d3 . randomNormal (); const  data  =  d3 . range ( 1 e3 ). map ( d  =&gt;  ({  x :  prng (),  y :  prng () })); const  x  =  d3 . scaleLinear (). domain ([ - 5 ,  5 ]); const  y  =  d3 . scaleLinear (). domain ([ - 5 ,  5 ]); const  x2  =  x . copy (); const  y2  =  y . copy ();\n This first chunk of code is just creating some random x/y data points located around the origin and associated x/y scales to render the values with hard-coded domains.\n The noteworthy part of this code is the last two lines which create copies of the scales. These will be very important later\u2026\n The remaining code snippets make use of  D3FC components. However, the underlying concepts should be familiar from, and are readily applicable to, vanilla D3.\n const  series  =  fc  . seriesCanvasPoint ()  . crossValue ( d  =&gt;  d . x )  . mainValue ( d  =&gt;  d . y )  . size ( 4 ); const  zoom  =  d3 . zoom (). on ( &#39; zoom &#39; ,  event  =&gt;  {  x . domain ( event . transform . rescaleX ( x2 ). domain ());  y . domain ( event . transform . rescaleY ( y2 ). domain ());  render (); });\n Again this code starts off rather uninteresting, just creating a point series configured to render the data points.\n The second part of this code is where most of the action happens. We create a d3-zoom component/behaviour and listen for its  zoom event which is triggered when the user interacts with the selection (we\u2019ll cover how this is associated with a selection below).\n Within the event handler, we receive a  zoomTransform which represents the  combined effect of all interactions since the zoom behaviour was applied to the selection (or was explicitly reset).\n This means that we need to use the rescale utilities from the transform on the x/y scale copies we created earlier ( x2/ y2), rather than the previously rescaled ones ( x/ y). Effectively, the copied scales represent the baseline on which the transform should be applied. The previously rescaled ones are the working scales which have already had a transform applied to them.\n const  chart  =  fc  . chartCartesian ( x ,  y )  . chartLabel ( &#39; Canvas Zoom 1,000 Points &#39; )  . canvasPlotArea ( series )  . decorate ( sel  =&gt;  {  sel . enter ()  . select ( &#39; .plot-area &#39; )  . on ( &#39; measure.range &#39; ,  event  =&gt;  {  x2 . range ([ 0 ,  event . detail . width ]);  y2 . range ([ event . detail . height ,  0 ]);  })  . call ( zoom );  });\n This code block creates a cartesian chart, then configures it with the x/y scales and series. The  decorate function is really the only interesting bit, when the plot-area is created it-\n Listens to  measure events to ensure the range values on the copies of the x/y scales are kept up-to-date. These are used internally by the rescaleX/Y transform utilities.\n  Finally, we have the render function itself which associates the data with the target container and invokes the chart component.\n With that we\u2019ve got all the code we need for the above example. It really isn\u2019t very much code to add zoom behaviour to a chart. The d3-zoom component takes care of an awful lot of the low-level interaction handling for us.\n However, the component\u2019s flexibility does mean the API isn\u2019t as ergonomic as it could be for the above use-case. Ideally we wouldn\u2019t need to concern ourselves with details like maintaining a second set of scales, applying the transform to the scales or maintaining the range on those scales.\n  Taking our pain points from above as inspiration for a better API, an ideal component for this use-case would additionally-\n    Now that this hypothetical component provides a succinct way of associating scales with selections, it would be nice to address another common requirement which is  tricky to accomplish with d3-zoom-\n  This would be useful in a chart with multiple panels sharing a single x-scale,  small-multiples charts sharing both scales or more subtle usability considerations such as allowing the user to pan or zoom an axis to mutate just its associated scale.\n  At this stage I\u2019m sure it\u2019s no surprise that we\u2019ve implemented such a new component. Below is almost exactly the same chart as the previous example, created using  d3fc-zoom.\n To allow panning and zooming on the axes, the only required change to the \u201chypothetical\u201d code above is to invoke the component on the axes\u2019 selections. That changes the decorate function as follows-\n chart . decorate ( sel  =&gt;  {  sel . enter ()  . selectAll ( &#39; .plot-area &#39; )  . call ( zoom ,  x ,  y );  sel . enter ()  . selectAll ( &#39; .x-axis &#39; )  . call ( zoom ,  x ,  null );  sel . enter ()  . selectAll ( &#39; .y-axis &#39; )  . call ( zoom ,  null ,  y ); });\n Despite the use of  selectAll, there is only one container per axis. It is functionally equivalent to  select but avoids interfering with the data joins used to create the axis containers.\n Internally the component makes use of a d3-zoom component, registering its interaction handlers and responding to zoom events. In place of using the transform to track the state of user interactions, it relies on storing this state in the scale domains directly.\n This has the advantage of allowing multiple instances to synchronise on the scale domain values. It also allows the scale domains to be directly updated by other code (e.g. a button click, streaming data, etc.), without having to worry about the transform.\n The obvious downside to this approach, is in the difficulty it would have attempting to handle non-continuous scales. By using the scale domain values directly as our state, we lose the intermediate pixel-based representation of the transform.\n  Fair warning: this goes into the weeds of the implementation. If you\u2019re just trying to use the component, you don\u2019t need to know these details and I\u2019d recommend skipping ahead to the  next section.\n To simplify the explanation in this section I\u2019m using scale as shorthand for x and/or y scale. Additionally whilst multi-node selections are supported by the component, I\u2019m assuming the selection contains only a single node.\n First let\u2019s consider how d3-zoom works. Assuming there\u2019s an existing transform ( t0) associated with a selection. The user\u2019s interaction causes the component to produce a delta to that transform ( dt).\n Both of values are combined to produce the transform ( t1 = t0 + dt) passed into the event handler. This transform is also stored against the selection as a property on the DOM node.\n This combination of the existing transform and the delta is what causes problems if we had already applied the previous transform to the scale. In that case we\u2019ve effectively double-applied the previous transform, leading to some exciting/confusing exponential responses to user interactions.\n At its core, d3fc-zoom performs the same workarounds we demonstrated above. When associated with a selection, the component is also passed the working scale. This is stored against the DOM node, along with a copy to act as a baseline when applying transforms.\n  The range of the baseline scale is updated with the current range of the working scale.\n  The baseline scale is combined with the transform using the rescale utility to produce a resulting scale.\n The novel part of d3fc-zoom is permitting external modification of the domain of the working scale. This can happen either through the domain being explicitly set or by a  zoom event on a different selection associated with the same scale.\n To handle this situation the component additionally stores- * Another copy of the scale representing the previous or last observed state of the scale (after the rescale operation has been performed). * A copy of the transform representing the previous or last observed state of the transform.\n If it detects that the domain of the working scale is different to its previous state, it knows that the domain has been externally modified. In this case, simply applying the transform passed into the event handler to the baseline scale would produce an incorrect result, because  t0 does not represent the difference between the previous scale and the baseline scale.\n Instead the component computes the transform delta ( dt = t1 - t0), resets the baseline to a new copy of the working scale, applies the delta ( dt) to this baseline and then updates the working scale with the resulting domain.\n That was a lot harder to describe in words than it was to code, so you might get a better understanding from a quick look at the  implementation.\n  I\u2019ve no doubt that the new API we\u2019ve created for  d3fc-zoom will not have the flexibility to address, or worse still break for, other people\u2019s use-cases. However, for the common use-cases I\u2019m familiar with implementing, I\u2019ve found it really powerful and easy-to-use.\n In fact, I\u2019d argue it\u2019s generally true that by adding constraints to a problem you open yourself up to simpler solutions. Solutions that ultimately allow you to focus on the details that you consider important.\n  My name is Chris Price, I&#39;m based in Newcastle upon Tyne and work as a Software Engineer at Scott Logic. I spend my days developing desktop/tablet/mobile web apps for financial services companies (unfortunately mostly hidden behind paywalls). I do like to blog about things when I can and do some interesting stuff on  GitHub.", "posttime": "2020-10-24 07:31:56", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4fee\u590d,d3", "title": "\u4e3a\u6211\u7684\u7528\u4f8b\u4fee\u590dD3-zoom API", "title_en": "Fixing the D3-zoom API for my use-case", "transed": 1, "url": "https://blog.scottlogic.com/2020/10/22/fixing-the-d3-zoom-api.html", "via": "", "real_tags": ["\u4fee\u590d", "d3"]}, {"category": "", "categoryclass": "", "imagename": "b71f23a653e4ac6df1ae71037508c3c3.jpeg", "infoid": 1030829, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "(\u73a9\u5177)\u7528Rust-maekawatoshiki/cilk\u7f16\u5199\u7684\u53d7LLVM\u5f71\u54cd\u7684\u7f16\u8bd1\u5668\u57fa\u7840\u8bbe\u65bd", "note_en": "(Toy) Compiler Infrastructure influenced by LLVM written in Rust - maekawatoshiki/cilk", "posttime": "2020-10-24 07:31:48", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f16\u8bd1,\u57fa\u7840,compiler,rust", "title": "\u6211\u81ea\u5df1\u7684\u7f16\u8bd1\u5668\u57fa\u7840\u7ed3\u6784\u4e0a\u7684\u6211\u81ea\u5df1\u7684C\u7f16\u8bd1\u5668", "title_en": "My own C compiler on my own compiler infrastructure", "transed": 1, "url": "https://github.com/maekawatoshiki/cilk/tree/master/cilkcc", "via": "", "real_tags": ["\u7f16\u8bd1", "\u57fa\u7840", "compiler", "rust"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1030828, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u53f2\u8482\u592b\u00b7\u5df4\u897f\u4e9a(Steve Barcia)\u5728\u521b\u4f5c\u5b8c\u7b2c\u4e00\u6b3e\u5927\u6218\u7565\u6e38\u620f\u4e4b\u524d\u5c31\u5f00\u59cb\u8003\u8651\u4ed6\u7684\u7b2c\u4e8c\u6b3e\u5927\u6218\u7565\u6e38\u620f\u3002\u5728\u4ed6\u7684\u516c\u53f8SimTex\u72ed\u7a84\u7684\u5965\u65af\u6c40\u529e\u516c\u5ba4\u91cc\uff0c\u4ed6\u6bcf\u5929\u90fd\u5728\u7b49\u5f85\u4ed6\u7684\u6700\u65b0\u4e00\u4ee3\u300a\u730e\u6237\u5ea7\u5927\u5e08\u300b(Master Of Orion)\u7684\u6c47\u7f16\uff0c\u4ed6\u5728\u8111\u6d77\u4e2d\u52fe\u52d2\u51fa\u4e86\u540e\u7eed\u884c\u52a8\u7684\u7ec6\u8282\uff0c\u8fd9\u5c06\u53d1\u751f\u5728\u5e7b\u60f3\u800c\u4e0d\u662f\u79d1\u5e7b\u73af\u5883\u4e2d\u3002\u4e00\u6b3e\u6e38\u620f\u4e00\u7ed3\u675f\uff0c\u4ed6\u5c31\u4e3a\u4e0b\u4e00\u6b3e\u6e38\u620f\u5199\u4e86\u4e00\u4efd\u8bbe\u8ba1\u6587\u6863\uff0c\u5e76\u4e0eSimTex\u7684\u5176\u4ed6\u5458\u5de5\u5206\u4eab\u4e86\u8fd9\u4efd\u6587\u6863\u3002\u4e0d\u5230\u4e24\u5468\uff0c\u4ed6\u4eec\u5c31\u5168\u901f\u51b2\u5411\u4e86\u201c\u9b54\u672f\u5927\u5e08\u201d\u3002\u5b83\u5c06\u57281994\u5e74\u5723\u8bde\u8282\u4e4b\u524d\u4ee5MicroProse\u7684\u5370\u8bb0\u53d1\u8d27\uff0c\u4ec5\u6bd4\u5b83\u7684\u524d\u8eab\u665a\u4e86\u4e00\u5e74\uff0c\u5c3d\u7ba1\u5b83\u662f\u8fc4\u4eca\u4e3a\u8ba1\u7b97\u673a\u5236\u4f5c\u7684\u6700\u590d\u6742\u7684\u6218\u7565\u6e38\u620f\u4e4b\u4e00\u3002\u5982\u679c\u6076\u4eba\u6ca1\u6709\u4f11\u606f\u7684\u65f6\u95f4\uff0c\u5df4\u897f\u4e9a\u548c\u4ed6\u7684\u540c\u4f34\u770b\u8d77\u6765\u786e\u5b9e\u5f88\u574f\u3002\n\u9274\u4e8e\u8fd9\u6b3e\u65b0\u6e38\u620f\u7684\u540d\u79f0\u548c\u5f00\u53d1\u5468\u671f\u5f88\u77ed\uff0c\u4eba\u4eec\u53ef\u80fd\u4f1a\u6000\u7591\u5b83\u53ea\u4e0d\u8fc7\u662f\u4e00\u6b3e\u91cd\u65b0\u6362\u4e86\u76ae\u7684\u730e\u6237\u5ea7\u5927\u5e08\u3002\u7136\u800c\uff0c\u5728\u73b0\u5b9e\u4e2d\uff0c\u8fd9\u4e0e\u4e8b\u5b9e\u76f8\u5dee\u4e0d\u8fdc\u3002\u9b54\u672f\u5927\u5e08\u548c\u730e\u6237\u5ea7\u5927\u5e08\u662f\u622a\u7136\u4e0d\u540c\u7684\u4f53\u9a8c\uff0c\u8db3\u4ee5\u8ba9\u4eba\u5f88\u96be\u731c\u5230\u5b83\u51fa\u81ea\u540c\u4e00\u4e2a\u8bbe\u8ba1\u5e08\u4e4b\u624b\u3002\u730e\u6237\u5ea7\u5927\u5e08\u662f\u5b8c\u7f8e\u7684\uff0c\u5b83\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u7ecf\u8fc7\u4e86\u4ed4\u7ec6\u7684\u8003\u8651\u548c\u6d4b\u8bd5\uff0c\u9b54\u672f\u5927\u5e08\u662f\u4e00\u4e2a\u6447\u6447\u6b32\u5760\u7684\u4e8b\u60c5\uff0c\u662f\u4e00\u5806\u4e0d\u540c\u7684\u60f3\u6cd5\u653e\u5728\u4e00\u8d77-\u6709\u4e9b\u6bd4\u53e6\u4e00\u4e9b\u66f4\u5145\u5206\u5730\u5b9e\u73b0\u4e86\uff0c\u6709\u4e9b\u5b9e\u9645\u4e0a\u6839\u672c\u5c31\u4e0d\u8d77\u4f5c\u7528\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u5bf9\u5b83\u53d8\u5f97\u4e66\u751f\u6c14\u7684\u8bdd\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6700\u7ec8\u4e00\u5207\u90fd\u5f88\u597d\uff1b\u6e38\u620f\u7684\u591a\u6837\u6027\u3001\u6177\u6168\u548c\u7eaf\u7cb9\u7684\u539a\u989c\u65e0\u803b\u8d62\u5f97\u4e86\u80dc\u5229\u3002\u300a\u9b54\u672f\u5927\u5e08\u300b\u5f88\u6709\u8da3--\u6bcf\u4e00\u70b9\u90fd\u548c\u300a\u730e\u6237\u5ea7\u5927\u5e08\u300b\u4e00\u6837\u6709\u8da3\u3002\u53ea\u662f\u4e0d\u8981\u5728\u5bb6\u91cc\u5c1d\u8bd5\uff0c\u521d\u51fa\u8305\u5e90\u7684\u8bbe\u8ba1\u5e08\u4eec\u3002\n\u730e\u6237\u5ea7\u5927\u5e08\u7ecf\u5e38\u88ab\u4e00\u5bb6\u7565\u663e\u61d2\u60f0\u7684\u5a92\u4f53\u5ba3\u4f20\u4e3a\u201c\u592a\u7a7a\u6587\u660e\u201d\u3002\u56e0\u6b64\uff0c\u8bbd\u523a\u7684\u662f\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u9b54\u672f\u5927\u5e08\uff0c\u5b83\u80cc\u53db\u4e86\u5e0c\u5fb7\u00b7\u6885\u5c141991\u5e74\u7684\u5de8\u8457\u7684\u4e3b\u8981\u5f71\u54cd\u3002\u5df4\u897f\u4e9a\u572820\u4e16\u7eaa80\u5e74\u4ee3\u672b\u5f00\u59cb\u4e3a\u4ed6\u7684\u7b2c\u4e00\u4e2a\u6e38\u620f\u5960\u5b9a\u57fa\u7840\uff0c\u56e0\u6b64\u5b83\u7684\u673a\u5236\u548c\u754c\u9762\u6700\u591a\u5730\u5f52\u529f\u4e8e\u5728\u90a3\u4e4b\u524d\u51fa\u73b0\u7684\u5f81\u670d\u94f6\u6cb3\u7cfb\u7684\u68cb\u76d8\u548c\u7535\u8111\u6e38\u620f\u3002\u7136\u800c\uff0c\u5f53\u4ed6\u5f00\u59cb\u62cd\u6444\u201c\u9b54\u672f\u5927\u5e08\u201d\u65f6\uff0c\u5df4\u897f\u4e9a\u5df2\u7ecf\u6709\u4e86\u8db3\u591f\u7684\u65f6\u95f4\u6765\u73a9\u800d\u548c\u6b23\u8d4f\u6587\u660e\uff0c\u5e76\u514b\u9686\u4e86\u5b83\u7684\u4e00\u4e9b\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u5c06\u9b54\u672f\u5927\u5e08\u79f0\u4e3a\u201c\u5e7b\u60f3\u6587\u660e\u201d\u81f3\u5c11\u66f4\u6709\u8bf4\u670d\u529b\uff0c\u5c31\u50cf\u8fc7\u53bb\u548c\u73b0\u5728\u7ecf\u5e38\u505a\u7684\u90a3\u6837\uff0c\u5373\u4f7f\u8fd9\u6837\u505a\u4ecd\u7136\u8fdc\u8fdc\u4e0d\u80fd\u5b8c\u5168\u63cf\u8ff0\u3002\u5f53\u7136\uff0c\u201c\u7535\u8111\u6e38\u620f\u4e16\u754c\u201d(Computer Gaming World)\u6742\u5fd7\u5728\u5bf9\u8fd9\u6b3e\u6e38\u620f\u7684\u8bc4\u8bba\u4e2d\u76f4\u8a00\u4e0d\u8bb3\uff1a\n\u57ce\u5e02\u5c55\u793a\u5c06\u662f\u5e0c\u5fb7\u00b7\u6885\u5c14\u7684\u6587\u660e\u6e38\u620f\u73a9\u5bb6\u6240\u719f\u6089\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u4e0d\u60f3\u6697\u793a\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u4f46\u770b\u8d77\u6765\u786e\u5b9e\u53ef\u4ee5\u3002\u4ece\u5efa\u7b51\u7269\u672c\u8eab\u7684\u56fe\u5f62\u8868\u793a\u5230\u4e00\u6392\u6392\u8015\u79cd\u3001\u5de5\u4f5c\u548c\u53cd\u53db\u7684\u5e02\u6c11\uff0c\u57ce\u5e02\u5c55\u793a\u51e0\u4e4e\u662f\u65e9\u671f\u8bbe\u8ba1\u7684\u9010\u5b57\u7ffb\u7248\u3002\n\u56e0\u6b64\uff0c\u8fd9\u662f\u201c\u9b54\u672f\u5927\u5e08\u201d\u7684\u4e00\u4e2a\u91cd\u8981\u65b9\u9762\u3002\u4f60\u4ece\u4e00\u4e2a\u6751\u5e84\u5f00\u59cb\uff0c\u4f60\u5fc5\u987b\u53d1\u5c55\u548c\u53d1\u5c55\u5b83\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4f60\u6d3e\u9063\u5b9a\u5c45\u8005\u53bb\u5efa\u7acb\u5176\u4ed6\u57ce\u5e02\uff0c\u6216\u8005\u6d3e\u9063\u519b\u961f\u53bb\u5f81\u670d\u90a3\u4e9b\u5df2\u7ecf\u5b58\u5728\u7684\u57ce\u5e02\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u57ce\u5e02\u5c45\u6c11\u5efa\u9020\u7ed3\u6784\u6765\u589e\u52a0\u4ed6\u4eec\u7684\u4ea7\u91cf\uff0c\u6216\u8005\u4ee5\u5176\u4ed6\u65b9\u5f0f\u4f7f\u4ed6\u4eec\u66f4\u6709\u6548\u5730\u53d1\u6325\u4f5c\u7528\uff0c\u4ece\u800c\u6539\u5584\u4f60\u7684\u57ce\u5e02\u3002\u8fd9\u4e00\u5207\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4f4d\u6587\u660e\u8001\u624b\u6765\u8bf4\uff0c\u90fd\u662f\u975e\u5e38\u719f\u6089\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0e\u6587\u660e\u76f8\u6bd4\uff0c\u9b54\u672f\u5927\u5e08\u7684\u57ce\u5e02\u5efa\u8bbe\u65b9\u9762\u603b\u4f53\u4e0a\u662f\u7b80\u5316\u7684\u3002\u4f8b\u5982\uff0c\u6ca1\u6709\u79d1\u6280\u6811\u53ef\u4ee5\u7814\u7a76\u6765\u89e3\u9501\u65b0\u7c7b\u578b\u7684\u5efa\u7b51\u3002\u76f8\u53cd\uff0c\u5efa\u7b51\u7269\u672c\u8eab\u53ef\u4ee5\u6253\u5f00\u5176\u4ed6\u5efa\u7b51\u7269\uff0c\u5982\u624b\u518c\u4e2d\u5305\u542b\u7684\u4e00\u4e2a\u65b9\u4fbf\u7684\u56fe\u8868\u6240\u793a\uff1a\u5efa\u9020\u4e00\u4e2a\u5efa\u7b51\u5927\u5385\u53ef\u4ee5\u6253\u5f00\u7cae\u4ed3\u3001\u795e\u6bbf\u3001\u56fe\u4e66\u9986\u3001\u77ff\u5de5\u516c\u4f1a\u548c\u57ce\u5899\uff1b\u5efa\u9020\u4e00\u4e2a\u7cae\u4ed3\u53ef\u4ee5\u6253\u5f00\u519c\u8d38\u5e02\u573a\u7b49\u7b49\u3002Steve Barcia\u6025\u4e8e\u627e\u5230\u53ef\u4ee5\u7406\u89e3\u7684\u7406\u7531\u6765\u786e\u4fdd\u4e0d\u5938\u5927\u4e0e\u6587\u660e\u7684\u76f8\u4f3c\u4e4b\u5904\uff0c\u4ed6\u89e3\u91ca\u4e86\u7b80\u5316\u7684\u539f\u56e0\uff0c\u6307\u51fa\u8fd9\u4e24\u4e2a\u6e38\u620f\u6709\u6839\u672c\u4e0d\u540c\u7684\u8bbe\u8ba1\u76ee\u6807\uff1a\u201c\u6587\u660e\u5173\u6ce8\u7684\u662f\u5185\u90e8\u95ee\u9898\u3002\u5728\u201c\u9b54\u672f\u5927\u5e08\u201d\u4e2d\uff0c\u5b83\u662f\u5916\u5728\u7684\uff0c\u662f\u5f81\u670d\u3002\u201c\u3002\n\u56e0\u6b64\uff0c\u5c3d\u7ba1\u4f60\u5728\u5730\u56fe\u4e0a\u79fb\u52a8\u4f60\u7684\u5355\u4f4d\u5b8c\u5168\u50cf\u4f60\u5728\u6587\u660e\u4e2d\u6240\u505a\u7684\u90a3\u6837-\u516c\u5e73\u5730\u8bf4\uff0c\u8fd9\u4e2a\u6e38\u620f\u53cd\u8fc7\u6765\u501f\u9274\u4e86\u66f4\u53e4\u8001\u7684\u5e1d\u56fd\u7684\u65b9\u6cd5-\u4e00\u65e6\u6218\u6597\u5f00\u59cb\uff0c\u4e8b\u60c5\u5c31\u4f1a\u671d\u7740\u4e00\u4e2a\u622a\u7136\u4e0d\u540c\u7684\u65b9\u5411\u53d1\u5c55\uff1a\u9b54\u672f\u5927\u5e08\u6bd4\u6587\u660e\u66f4\u52a0\u5f3a\u8c03\u6218\u6597\u3002\u5728\u540e\u4e00\u4e2a\u6e38\u620f\u4e2d\uff0c\u6bcf\u4e2a\u5355\u4f4d\u5728\u5730\u56fe\u4e0a\u72ec\u7acb\u79fb\u52a8\uff1b\u5728\u9b54\u672f\u5927\u5e08\u4e2d\uff0c\u4f60\u901a\u8fc7\u5c06\u591a\u8fbe9\u4e2a\u5355\u4f4d\u201c\u5806\u53e0\u201d\u5728\u4e00\u8d77\u6765\u5f62\u6210\u66f4\u5927\u7684\u519b\u961f\u3002\u5f53\u4e24\u4e2a\u5355\u4f4d\u5728\u201c\u6587\u660e\u201d\u4e2d\u7684\u4e16\u754c\u5730\u56fe\u4e0a\u76f8\u649e\u65f6\uff0c\u5176\u4e2d\u4e00\u4e2a\u4f1a\u8f93\u6389\u5e76\u88ab\u5f7b\u5e95\u6467\u6bc1\uff0c\u800c\u53e6\u4e00\u4e2a\u5219\u4f1a\u5b8c\u597d\u65e0\u635f\u5730\u83b7\u80dc\u5e76\u5e78\u5b58\u4e0b\u6765\uff0c\u8fd9\u4e00\u5207\u90fd\u53d6\u51b3\u4e8e\u4e0e\u5b83\u4eec\u5404\u81ea\u7684\u653b\u51fb\u529b\u8fdb\u884c\u6bd4\u8f83\u7684\u4e00\u8f6e\u865a\u62df\u9ab0\u5b50\u3002\n\u9b54\u672f\u5927\u5e08\u5bf9CRPG\u7c7b\u578b\u7684\u4e8f\u6b20\u4e5f\u5ef6\u4f38\u5230\u4e86\u5176\u4ed6\u9886\u57df\u3002\u5b83\u968f\u673a\u751f\u6210\u7684\u5730\u56fe\u4e0d\u4ec5\u6709\u4e2d\u7acb\u548c\u654c\u65b9\u57ce\u9547\u7684\u79cd\u5b50\uff0c\u8fd8\u6709\u201c\u5012\u584c\u7684\u5bfa\u5e99\u201d\u3001\u201c\u5e9f\u5f03\u7684\u5821\u5792\u201d\u548c\u201c\u795e\u79d8\u7684\u6d1e\u7a74\u201d\u7684\u79cd\u5b50\u3002\u5982\u679c\u4f60\u6562\uff0c\u4f60\u53ef\u4ee5\u6d3e\u4f60\u7684\u90e8\u961f\u548c\u82f1\u96c4\u53bb\u9762\u5bf9\u5185\u5728\u7684\u4e1c\u897f\uff1b\u4f60\u8fd9\u6837\u505a\u7684\u56de\u62a5\u662f\u6218\u5229\u54c1\u548c\u4ed6\u4eec\u83b7\u5f97\u7684\u7ecf\u9a8c\uff0c\u5047\u8bbe\u4ed6\u4eec\u6d3b\u4e86\u4e0b\u6765\u3002\u4ec5\u4ec5\u662f\u63a2\u7d22\u4e16\u754c\uff0c\u63ed\u793a\u548c\u6e05\u7406\u8d8a\u6765\u8d8a\u591a\u7684\u5730\u56fe\uff0c\u751a\u81f3\u5728\u4f60\u9047\u5230\u4efb\u4f55\u6b63\u5728\u505a\u540c\u6837\u4e8b\u60c5\u7684\u7535\u8111\u73a9\u5bb6\u4e4b\u524d\uff0c\u5c31\u5df2\u7ecf\u5b8c\u5168\u4eab\u53d7\u5230\u4e86\u3002\n\u4f46\u662f\uff0c\u6e38\u620f\u7684\u7b2c\u4e09\u5c42\u4e5f\u662f\u6700\u540e\u4e00\u5c42\uff0c\u800c\u4e0d\u662f\u57ce\u5e02\u5efa\u7b51\u6216\u5355\u4f4d\u7ba1\u7406\uff0c\u662f\u5b83\u6700\u5177\u51b3\u5b9a\u6027\u7684\u5c5e\u6027\uff0c\u66f4\u4e0d\u7528\u8bf4\u5b83\u7684\u540d\u5b57\u7684\u6765\u6e90\u4e86\u3002\u4e8b\u5b9e\u662f\uff0c\u4f60\u771f\u7684\u626e\u6f14\u4e86\u4e00\u4e2a\u9b54\u672f\u5927\u5e08\uff0c\u4e00\u4e2a\u5728\u8ba1\u7b97\u673a\u63a7\u5236\u4e0b\u4e0e\u591a\u8fbe\u56db\u4e2a\u5176\u4ed6\u5deb\u5e08\u7ade\u4e89\u5f81\u670d\u4e16\u754c\u7684\u5deb\u5e08\u3002\u56e0\u6b64\uff0c\u4f60\u6709\u6cd5\u672f\u53ef\u4f9b\u5904\u7f6e\uff0c\u2026\u3002\u5b69\u5b50\uff0c\u4f60\u6709\u5492\u8bed\u5417\u3002\u9b54\u672f\u7cfb\u7edf\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u6750\u4e8e\u9b54\u672f\uff1a\u805a\u4f1a\uff0c\u8fd9\u662f\u4e00\u6b3e\u53ef\u6536\u85cf\u7684\u5947\u5e7b\u6218\u6597\u7eb8\u724c\u6e38\u620f\uff0c\u572820\u4e16\u7eaa90\u5e74\u4ee3\u521d\u6380\u8d77\u4e86\u684c\u9762\u6e38\u620f\u6587\u5316\u7684\u98ce\u66b4\u3002\u8fd9\u91cc\u7684\u9b54\u672f\u5206\u4e3a\u4e94\u672c\u201c\u4e66\u201d\uff1a\u751f\u547d\u3001\u81ea\u7136\u3001\u5deb\u672f\u3001\u6df7\u6c8c\u548c\u6b7b\u4ea1\u3002\u5f53\u60a8\u5f00\u59cb\u4e00\u6b3e\u65b0\u6e38\u620f\u65f6\uff0c\u60a8\u53ef\u4ee5\u4ece\u5341\u56db\u79cd\u53ef\u80fd\u6027\u5217\u8868\u4e2d\u9009\u62e9\u60a8\u7684\u5411\u5bfc\uff0c\u6bcf\u79cd\u53ef\u80fd\u6027\u90fd\u4e13\u95e8\u7814\u7a76\u4e00\u672c\u6216\u4e24\u672c\u9b54\u6cd5\u4e66\uff0c\u5e76\u4e14\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u4e2a\u4eba\u4f18\u52bf\u9700\u8981\u5f15\u5bfc\u3002\u6216\u8005\uff0c\u5982\u679c\u60a8\u6b63\u5728\u73a9\u96be\u5ea6\u8f83\u9ad8\u7684\u6e38\u620f\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u60a8\u81ea\u5df1\u7684\u5411\u5bfc\u3002\n\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u8fdb\u5165\u6e38\u620f\u65f6\u53ea\u4f1a\u5728\u4f60\u7684\u4e00\u672c\u6216\u591a\u672c\u4e66\u4e2d\u4f7f\u7528\u4e00\u4e9b\u4f4e\u7ea7\u5492\u8bed\u3002\u4ee3\u66ff\u6587\u660e\u548c\u730e\u6237\u5ea7\u5927\u5e08\u7684\u6280\u672f\u7814\u7a76\u6811\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u7814\u7a76\u65b0\u7684\u6cd5\u672f\u3002\u5b83\u4eec\u7684\u6570\u91cf\u548c\u79cd\u7c7b\u90fd\u662f\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\uff1a\u6bcf\u672c\u4e66\u90fd\u670940\u4e2a\u4e0e\u4e4b\u76f8\u5173\u7684\u5492\u8bed\uff0c\u52a0\u4e0a16\u4e2a\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u4e0d\u5206\u4e13\u4e1a\u5730\u5b66\u4e60\u7684\u5492\u8bed\uff0c\u6574\u4e2a\u6e38\u620f\u4e2d\u603b\u5171\u4e0d\u5c11\u4e8e216\u4e2a\u3002\u4f46\u9b54\u672f\u5927\u5e08\u501f\u7528\u4e86\u730e\u6237\u5ea7\u5927\u5e08\u7684\u4e00\u4e2a\u6280\u5de7\uff0c\u6548\u679c\u5f88\u597d\uff1a\u5e76\u4e0d\u662f\u4f60\u4e66\u4e2d\u7684\u6240\u6709\u6f5c\u5728\u6cd5\u672f\u90fd\u53ef\u4ee5\u5728\u4efb\u4f55\u7ed9\u5b9a\u7684\u6e38\u620f\u4e2d\u8fdb\u884c\u7814\u7a76\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6500\u767b\u6587\u660e\u7684\u9759\u6001\u7814\u7a76\u6811\u65f6\u53ef\u80fd\u4f7f\u7528\u7684\u90a3\u79cd\u6b7b\u8bb0\u786c\u80cc\u7684\u7b56\u7565\u5728\u8fd9\u91cc\u4e0d\u80fd\u4f9d\u8d56\u3002\u56e0\u4e3a\u5373\u4f7f\u4f60\u8fde\u7eed\u4e24\u6b21\u4f7f\u7528\u540c\u4e00\u4e2a\u5deb\u5e08\uff0c\u4f60\u4e5f\u4f1a\u5f97\u5230\u4e00\u5957\u4e0d\u540c\u7684\u6cd5\u672f\uff0c\u6240\u4ee5\u4f60\u5fc5\u987b\u7ecf\u5e38\u811a\u8e0f\u5b9e\u5730\u5730\u601d\u8003\u3002\u4e0d\u7528\u8bf4\uff0c\u4f60\u7684\u603b\u4f53\u6218\u7565\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5fc5\u987b\u7531\u4f60\u7684\u7814\u7a76\u6e05\u5355\u4e2d\u51fa\u73b0\u7684\u5492\u8bed\u6765\u51b3\u5b9a\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u63d0\u524d\u8fdb\u5165\u6d6e\u5c9b\uff0c\u4f60\u5c31\u6709\u4e86\u4e00\u4e2a\u5728\u4f60\u7684\u5bf9\u624b\u53ef\u80fd\u80fd\u591f\u4e4b\u524d\u8d8a\u8fc7\u6d77\u6d0b\u7684\u4fbf\u6377\u624b\u6bb5\uff1b\u5982\u679c\u4e0d\u80fd\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5728\u65e9\u671f\u81f3\u5c11\u5728\u4f60\u7684\u4e00\u4e9b\u6cbf\u6d77\u57ce\u5e02\u5efa\u9020\u6602\u8d35\u7684\u9020\u8239\u5382\u3002\n\u4f60\u7684\u6cd5\u672f\u7814\u7a76\u70b9\u7684\u6765\u6e90\u662f\u6cd5\u529b\uff0c\u5b83\u662f\u4f60\u4ece\u8fd9\u7247\u571f\u5730\u4e0a\u6240\u8c13\u7684\u201c\u529b\u91cf\u4e4b\u5730\u201d\u6536\u83b7\u7684\u3002\u5b83\u662f\u6e38\u620f\u4e2d\u6700\u91cd\u8981\u7684\u8d44\u6e90\uff0c\u56e0\u6b64\u4e5f\u662f\u4e00\u4e9b\u4ee4\u4eba\u75db\u82e6\u7684\u51b3\u5b9a\u7684\u6765\u6e90\u3002\u56e0\u4e3a\u6cd5\u529b\uff0c\u4f60\u770b\uff0c\u4e0d\u4ec5\u5bf9\u7814\u7a76\u5f88\u91cd\u8981\u3002\u4f60\u5fc5\u987b\u5e73\u8861\u4f60\u6295\u5165\u5230\u7814\u7a76\u4e2d\u7684\u6cd5\u529b\u548c\u7528\u4e8e\u5728\u5b9e\u5730\u65bd\u653e\u6cd5\u672f\u7684\u6cd5\u529b\u548c\u7528\u4e8e\u63d0\u9ad8\u4f60\u5929\u751f\u65bd\u6cd5\u80fd\u529b\u7684\u6cd5\u529b\uff1b\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u6700\u540e\u4e00\u7c7b\u6cd5\u529b\u76f8\u5f53\u4e8e\u4f60\u7684\u5deb\u5e08\u7684\u7ecf\u9a8c\u70b9\u3002\n\u9b54\u672f\u5927\u5e08\u7684\u5f7b\u5e95\u53e3\u53f7\u662f\u591a\u6837\u5316\uff0c\u4e0d\u4ec5\u9002\u7528\u4e8e\u6cd5\u672f\u5217\u8868\uff0c\u800c\u4e14\u9002\u7528\u4e8e\u6e38\u620f\u7684\u65b9\u65b9\u9762\u9762\u3002\u5728\u73b0\u4ee3\u6e38\u620f\u4e2d\uff0c\u8fd9\u91cc\u7684\u7edd\u5bf9\u6570\u91cf\u5c06\u662f\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\uff0c\u800c\u4e14\u5728\u8fd9\u6b3e\u6e38\u620f\u53d1\u5e03\u7684\u65f6\u5019\u51e0\u4e4e\u662f\u53f2\u65e0\u524d\u4f8b\u7684\u3002\u9664\u4e86\u4ece14\u4e2a\u8d77\u8dd1\u5deb\u5e08\u4e2d\u9009\u62e9\u4e00\u4e2a\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4ece\u53e6\u591614\u4e2a\u53ef\u80fd\u6027\u4e2d\u9009\u62e9\u4e00\u4e2a\u8ba9\u5979\u6307\u6325\u7684\u8d77\u8dd1\u6bd4\u8d5b\uff1b\u6bcf\u4e2a\u6bd4\u8d5b\u90fd\u6709\u81ea\u5df1\u72ec\u7279\u7684\u4e00\u7ec4\u9700\u8981\u89e3\u9501\u548c\u63d0\u5347\u7684\u5355\u4f4d\uff0c\u4ee5\u53ca\u53ef\u4ee5\u5728\u5176\u57ce\u9547\u4e2d\u5efa\u9020\u7684\u72ec\u7279\u7684\u5efa\u7b51\u7ec4\u5408\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u6709\u5c0f\u7684\u3001\u4e2d\u7684\u6216\u5927\u7684\u9646\u5757\u7684\u4e16\u754c\uff0c\u6709\u5f31\u7684\u3001\u6b63\u5e38\u7684\u6216\u5f3a\u5927\u7684\u9b54\u6cd5\u3002\u6240\u6709\u8fd9\u4e9b\u53ef\u80fd\u7684\u9996\u53d1\u53c2\u6570\u672c\u8eab\u5c31\u786e\u4fdd\u4e86\u8fd9\u6b3e\u6e38\u620f\u786e\u5b9e\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u53d8\u8001\u3002\u7136\u540e\uff0c\u4e00\u65e6\u4f60\u771f\u7684\u5f00\u59cb\u73a9\u4e86\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u8981\u5bf9\u4ed8\u7684\u602a\u517d\u591a\u5f97\u79bb\u8c31\uff0c\u8981\u62db\u52df\u7684\u82f1\u96c4\u591a\u5f97\u79bb\u8c31\uff0c\u8981\u6316\u51fa\u795e\u5947\u7684\u6b66\u5668\u548c\u76d4\u7532\u3002\u7136\u540e\u662f\u6240\u6709\u7684\u6cd5\u672f\uff1a\u6cd5\u672f\u53ef\u4ee5\u63d0\u5347\u4f60\u7684\u5355\u4f4d\u548c\u82f1\u96c4\uff0c\u524a\u5f31\u4f60\u7684\u654c\u4eba\uff0c\u53ec\u5524\u9b54\u6cd5\u751f\u7269\u52a0\u5165\u4f60\u7684\u884c\u5217\uff0c\u6270\u4e71\u4f60\u654c\u4eba\u81ea\u5df1\u7684\u9b54\u6cd5\u3002\u6700\u7ec8\uff0c\u5f53\u4f60\u63a7\u5236\u98ce\u5411\u5e76\u4f7f\u654c\u4eba\u7684\u7530\u91ce\u548c\u68ee\u6797\u67af\u840e\u65f6\uff0c\u4f60\u7684\u529b\u91cf\u5c31\u4f1a\u53d8\u5f97\u5b8c\u5168\u7b26\u5408\u201c\u5723\u7ecf\u201d--\u4f46\u8981\u6ce8\u610f\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5bf9\u4f60\u505a\u540c\u6837\u7684\u4e8b\u60c5\u3002\u4f5c\u4e3a\u6700\u540e\u7684\u4e00\u6b21\u89e6\u6478\uff0c\u4f60\u9700\u8981\u63a2\u7d22\u548c\u5f81\u670d\u7684\u4e0d\u662f\u4e00\u4e2a\u800c\u662f\u4e24\u4e2a\u5b8c\u6574\u7684\u4e16\u754c\uff1b\u6e38\u620f\u4e2d\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u7ef4\u5ea6\uff0c\u76f8\u5bf9\u5e73\u51e1\u7684\u5965\u5361\u8bfa\u65af\u548c\u9b54\u6cd5\u4e30\u5bcc\u7684\u6ca1\u836f\u738b\u56fd\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u666f\u89c2\u4e0a\u7684\u7279\u6b8a\u95e8\u6237\u5728\u5b83\u4eec\u4e4b\u95f4\u79fb\u52a8\uff0c\u60a8\u5fc5\u987b\u53d1\u73b0\u5e76\u4fdd\u62a4\u8fd9\u4e9b\u95e8\u6237-\u6216\u8005\u4e0d\u53ef\u907f\u514d\u5730\uff0c\u901a\u8fc7ye\n\u201c\u9b54\u672f\u5927\u5e08\u201d\u8fd8\u9047\u5230\u4e86\u5176\u524d\u8f88\u5927\u591a\u8bbe\u6cd5\u56de\u907f\u7684\u53e6\u4e00\u4e2a\u5178\u578b\u95ee\u9898\uff1a\u5fae\u89c2\u7ba1\u7406\u95ee\u9898\u3002\u5927\u591a\u6570\u73a9\u5bb6\u5728\u65e9\u671f\u5c31\u5f62\u6210\u4e86\u4e00\u79cd\u4e00\u81f4\u7684\u6a21\u5f0f\u6765\u5efa\u8bbe\u4ed6\u4eec\u7684\u57ce\u5e02\uff0c\u8fd9\u79cd\u6a21\u5f0f\u53ea\u6709\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\u624d\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u867d\u7136\u8fd9\u4e2a\u6e38\u620f\u786e\u5b9e\u63d0\u4f9b\u4e86\u4e00\u4e2a\u201c\u7ef4\u897f\u5c14\u201d\uff0c\u4ed6\u53ef\u4ee5\u4e3a\u4f60\u7ba1\u7406\u4f60\u7684\u57ce\u5e02\uff0c\u4f46\u4ed6\u7684\u9009\u62e9\u5f80\u5f80\u662f\u65e0\u53ef\u6551\u836f\u7684\u65e0\u7a3d\u4e4b\u8c08\u3002\u4e00\u79cd\u4e3a\u6bcf\u4e2a\u57ce\u5e02\u9884\u5148\u8bbe\u7f6e\u6784\u5efa\u961f\u5217\u7684\u65b9\u6cd5\uff0c\u518d\u52a0\u4e0a\u60a8\u53ef\u4ee5\u4e3a\u81ea\u5df1\u5b9a\u4e49\u7684\u9ed8\u8ba4\u961f\u5217\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u8865\u5145\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u5efa\u7acb\u4f60\u7684\u5e7b\u60f3\u5e1d\u56fd\u7684\u540e\u671f\u9636\u6bb5\uff0c\u4f60\u4f1a\u6709\u5927\u91cf\u7684\u5de5\u4f5c\u8981\u505a\u3002\n\u8fd9\u4e2a\u6e38\u620f\u7684\u6700\u540e\u4e00\u4e2a\u7ecf\u5e38\u88ab\u6311\u51fa\u6765\u6279\u8bc4\u7684\u9886\u57df\u662f\u4f60\u5bf9\u624b\u7684\u4eba\u5de5\u667a\u80fd\uff0c\u8fd9\u65b9\u9762\u8fd8\u6709\u5f88\u591a\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\u3002\u5728\u6587\u660e\u548c\u730e\u6237\u5ea7\u5927\u5e08\u7684\u4f1f\u5927\u4f20\u7edf\u4e2d\uff0c\u63d0\u9ad8\u96be\u5ea6\u5e76\u4e0d\u4f1a\u8ba9\u5176\u4ed6\u5deb\u5e08\u53d8\u5f97\u66f4\u806a\u660e\uff1b\u636e\u6211\u6240\u77e5\uff0c\u8fd9\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u6539\u53d8\u4ed6\u4eec\u7684\u8bbe\u5b9a\u884c\u4e3a\u3002\u5b83\u6240\u505a\u7684\u5c31\u662f\u4e3a\u4ed6\u4eec\u505a\u66f4\u53ef\u6015\u7684\u6b3a\u9a97\uff0c\u7ed9\u4ed6\u4eec\u8d8a\u6765\u8d8a\u591a\u7684\u5236\u4f5c\u5956\u91d1\u3002\u53ef\u4ee5\u7406\u89e3\u7684\u662f\uff0c\u8bb8\u591a\u4eba\u53d1\u73b0\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u5bf9\u8001\u724c\u73a9\u5bb6\u6765\u8bf4\u4e0d\u592a\u7406\u60f3\uff0c\u56e0\u4e3a\u8fd9\u8ba9\u6e38\u620f\u53d8\u5f97\u5177\u6709\u6311\u6218\u6027\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u6700\u8fd1\u5728\u9b54\u672f\u5927\u5e08\u7c89\u4e1d\u7684\u5c0f\u800c\u4ee4\u4eba\u60ca\u8bb6\u7684\u6d3b\u8dc3\u7684\u4e16\u754c\u4e2d\u7684\u4e00\u4e2a\u53d1\u5c55\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7269\u6559\u8bad\uff0c\u544a\u8bc9\u4f60\u8981\u5c0f\u5fc3\u4f60\u7684\u613f\u671b\u3002\u5c31\u5728\u4eca\u5e74\uff0c\u4e00\u7fa4\u7c89\u4e1d\u4e0e\u6e38\u620f\u76ee\u524d\u7684\u77e5\u8bc6\u4ea7\u6743\u6240\u6709\u8005\u5408\u4f5c\uff0c\u53d1\u5e03\u4e86\u9b54\u672f\u6cd5\u5e08(Caster Of Magic)\uff0c\u8fd9\u662f\u4e00\u4e2a\u5168\u9762\u7684\u8865\u4e01/\u6269\u5c55\uff0c\u5176\u4e2d\u5305\u62ec\u6781\u5927\u5730\u5347\u7ea7\u4e86\u4eba\u5de5\u667a\u80fd\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u89c9\u5f97\u8fd9\u4e00\u70b9\u4e5f\u4e0d\u597d\u73a9\uff0c\u6211\u4e5f\u542c\u5230\u5f88\u591a\u5176\u4ed6\u4eba\u8bf4\u8fc7\u540c\u6837\u7684\u8bdd\u3002\u4e0e\u5176\u806a\u660e\u3001\u65e0\u60c5\u3001\u6781\u7aef\u5484\u5484\u903c\u4eba\u7684\u654c\u65b9\u5deb\u5e08\u5bf9\u51b3\uff0c\u53ea\u662f\u8ba9\u6211\u6f84\u6e05\u4e86\u6211\u771f\u6b63\u559c\u6b22\u9b54\u672f\u5927\u5e08\u7684\u5730\u65b9\uff1a\u63a2\u7d22\u4e16\u754c\uff0c\u5efa\u7acb\u6211\u7684\u5355\u4f4d\u548c\u82f1\u96c4\uff0c\u7814\u7a76\u548c\u5c1d\u8bd5\u65b0\u7684\u5492\u8bed\u3002\u5bf9\u6211\u6765\u8bf4\uff0c\u8fd9\u6b3e\u6e38\u620f\u65e2\u662f\u96f6\u548c\u7b56\u7565\u6e38\u620f\uff0c\u4e5f\u662f\u4e00\u6b3e\u4f53\u9a8c\u578bCRPG\u6e38\u620f\u3002\u5982\u679c\u6211\u53ef\u4ee5\u5728\u6e38\u620f\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u4e1c\u897f\uff0c\u90a3\u5c06\u662f\u66f4\u591a\u6837\u5316\u7684\u906d\u9047\u533a\u57df\uff0c\u53ef\u80fd\u4f1a\u6709\u6545\u4e8b\u5143\u7d20\uff0c\u4ee5\u8fdb\u4e00\u6b65\u5f3a\u8c03\u8fd9\u4e9b\u54c1\u8d28\u3002\u8fd9\u5e76\u4e0d\u662f\u8bf4\u4f60\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u73a9\u6e38\u620f\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u5176\u4ed6\u539f\u56e0\u800c\u4eab\u53d7\u6e38\u620f\u662f\u9519\u8bef\u7684\uff1b\u5f53\u7136\uff0c\u6709\u5f88\u591a\u4eba\u559c\u6b22\u9b54\u672f\u65bd\u6cd5\u8005\u5bf9\u6e38\u620f\u6240\u505a\u7684\u4e8b\u60c5\u3002\u7136\u800c\uff0c\u5b83\u786e\u5b9e\u6709\u52a9\u4e8e\u8bf4\u660e\uff0c\u7ecf\u5e38\u88ab\u63cf\u8ff0\u4e3a\u7b80\u5355\u5730\u8ba9\u8ba1\u7b97\u673a\u50cf\u4eba\u7c7b\u4e00\u6837\u73a9\u800d\u7684\u9c81\u8fea\u5fb7\u4eba\u5de5\u667a\u80fd\u9886\u57df\uff0c\u4e00\u65e6\u4e0e\u73b0\u5b9e\u4e16\u754c\u7684\u6e38\u620f\u8bbe\u8ba1\u53d1\u751f\u51b2\u7a81\uff0c\u5c31\u4f1a\u53d8\u5f97\u6bd4\u8fd9\u4e00\u63d0\u6cd5\u66f4\u590d\u6742\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u9b54\u672f\u65bd\u6cd5\u8005\u53ea\u662f\u4fee\u8865\u9b54\u672f\u5927\u5e08\u7684\u60a0\u4e45\u4f20\u7edf\u7684\u6700\u65b0\u4f8b\u5b50\uff0c\u6e90\u4e8e\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff0c\u5373\u6700\u521d\u53d1\u5e03\u7684\u6e38\u620f\u8feb\u5207\u9700\u8981\u6240\u6709\u5b83\u80fd\u5f97\u5230\u7684\u4fee\u8865\u3002\u57281993\u5e74\u88abSpectrum Holobyte\u6536\u8d2d\u4e4b\u524d\u548c\u4e4b\u540e\uff0cMicroProse\u90fd\u662f\u6700\u5bb9\u6613\u4e3a\u4e86\u5e94\u5bf9\u5916\u90e8\u8d22\u52a1\u538b\u529b\u800c\u63d0\u524d\u53d1\u8d27\u6e38\u620f\u7684\u51fa\u7248\u5546\u4e4b\u4e00\u3002\u4f5c\u4e3a\u8be5\u516c\u53f81994\u5e74\u5723\u8bde\u8282\u6700\u5927\u7684\u6e38\u620f\u4e4b\u4e00\uff0c\u201c\u9b54\u672f\u5927\u5e08\u201d\u6210\u4e86\u8fd9\u4e00\u4e0d\u5e78\u8d8b\u52bf\u7684\u727a\u7272\u54c1\u3002\u4e0e\u201c\u730e\u6237\u5ea7\u5927\u5e08\u201d\u5f62\u6210\u9c9c\u660e\u5bf9\u6bd4\u7684\u662f\uff0c\u53f2\u8482\u592b\u00b7\u5df4\u897f\u4e9a(Steve Barcia)\u63a8\u51fa\u7684\u7b2c\u4e8c\u6b3e\u5927\u6218\u7565\u6e38\u620f\u5145\u6ee1\u4e86\u6f0f\u6d1e\uff0c\u57fa\u672c\u4e0a\u65e0\u6cd5\u73a9\uff1b\u6e38\u620f\u5728\u6218\u6597\u4e2d\u7ecf\u5e38\u5d29\u6e83\u3002(\u6b63\u5982\u201c\u7535\u8111\u6e38\u620f\u4e16\u754c\u201d(Computer Gaming World)\u603b\u7ed3\u7684\u90a3\u6837\uff0c\u201c\u6bcf\u8f6c\u4e00\u5708\u90fd\u8981\u7701\uff0c\u6bcf\u6b21\u6218\u6597\u524d\u90fd\u8981\u7701\uff0c\u6bcf\u6b21\u90fd\u8981\u7701\u201d\uff0c\u8fd9\u6210\u4e86\u8fd9\u4f4d\u73a9\u5bb6\u7684\u7ecf\u9a8c\u4e4b\u8c08\u3002)\u3002\u4e00\u7cfb\u5217\u8865\u4e01\u9010\u6e10\u89e3\u51b3\u4e86\u6700\u7cdf\u7cd5\u7684\u95ee\u9898\uff0c\u4f46\u76f4\u5230\u4eca\u5929\uff0c\u6e38\u620f\u4e2d\u4ecd\u7136\u6709\u4e00\u4e9b\u4e0d\u592a\u6b63\u5e38\u8fd0\u884c\u7684\u5492\u8bed\u3002\u9b54\u672f\u5927\u5e08\u672c\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u5316\u8eab\u827e\u4f26\u00b7\u57c3\u59c6\u91cc\u5947(Alan Emrich)\u548c\u6c64\u59c6\u00b7\u4f11\u65af(Tom Hughes)\uff0c\u8fd9\u4e24\u4e2a\u5c40\u5916\u4eba\u5728\u5f00\u53d1\u201c\u730e\u6237\u5ea7\u5927\u5e08\u201d\u65f6\u5f88\u65e9\u5c31\u5bf9\u4ed6\u4eec\u4ea7\u751f\u4e86\u5174\u8da3\uff0c\u5e76\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\u63d0\u4f9b\u4e86\u5982\u6b64\u591a\u7684\u53cd\u9988\u548c\u5b9e\u7528\u5efa\u8bae\uff0c\u4ee5\u81f3\u4e8e\u8054\u5408\u8bbe\u8ba1\u5e08\u7684\u4fe1\u7528\u4e0d\u4f1a\u51fa\u73b0\u6545\u969c\u3002\u5982\u679c\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\uff0c\u53ea\u8981\u5728\u70e4\u7bb1\u91cc\u518d\u5446\u51e0\u4e2a\u6708\uff0c\u518d\u505a\u4e00\u4e24\u8f6e\u9002\u5f53\u7684\u6d4b\u8bd5\uff0c\u5c31\u53ef\u4ee5\u8d77\u5230\u5f88\u5927\u7684\u4f5c\u7528\u3002\n\u5c3d\u7ba1\u5b83\u5728\u53d1\u5e03\u65f6\u7684\u4e0d\u5408\u60c5\u7406\u7684\u72b6\u6001\u4e25\u91cd\u5f71\u54cd\u4e86\u5b83\u7684\u6574\u4f53\u53d7\u6b22\u8fce\u7a0b\u5ea6\uff0c\u4f46\u4e00\u5c0f\u7fa4\u73a9\u5bb6\u56e0\u4e3a\u5b83\u75af\u72c2\u7684\u591a\u6837\u6027\u800c\u7231\u4e0a\u4e86\u8fd9\u6b3e\u6e38\u620f\uff0c\u5e76\u8ba9\u5b83\u7684\u8bb0\u5fc6\u6d3b\u4e86\u51e0\u5e74\uff0c\u7136\u540e\u662f\u51e0\u5341\u5e74\u3002\u4ed6\u4eec\u8fd9\u6837\u505a\u4e0d\u4ec5\u4ec5\u662f\u56e0\u4e3a\u9b54\u672f\u5927\u5e08\u53d8\u6210\u4e86\u9b54\u672f\u5927\u5e08\u7684\u5bf9\u7acb\u9762\u3002\n.", "note_en": "Steve Barcia started thinking about his second grand-strategy game well before he had finished creating his first one. While he was waiting for his latest iteration of   Master of Orion to compile each day in the cramped Austin, Texas, offices of his company SimTex, he sketched in the mental details of a follow-up that would take place in a fantasy rather than science-fictional milieu. As soon as the one game was finished, he wrote up a design document for the next one and shared it with the rest of the SimTex staff. Within two weeks, they were charging full-speed ahead on  Master of Magic. It would ship under the MicroProse imprint in time for the Christmas of 1994, only a year after its predecessor, despite being one of the most complex strategy games yet made for a computer. If there\u2019s no rest for the wicked, it would seem that Barcia and company had been very bad indeed.\n Given the new game\u2019s title and its short development cycle, one might suspect it to be little more than a reskinned  Master of Orion. In reality, though, such could hardly be further from the truth.  Master of Magic is a wildly different experience from  Master of Orion, enough so that one would scarcely guess it to have come from the same designer. Where  Master of Orion is polished to perfection, its every element carefully considered and tested,  Master of Magic is a far more ramshackle affair, a pile of diverse ideas thrown together \u2014 some more fully realized than others, some literally not working at all if we want to get pedantic about it. Nevertheless, it all comes out okay in the end; the game\u2019s variety, generosity, and sheer chutzpah win through.\u00a0 Master of Magic is simply  fun \u2014\u00a0 every bit as much fun as  Master of Orion. Just don\u2019t try this at home, budding designers.\n Master of Orion was frequently billed as \u201c Civilization in Space\u201d by a slightly lazy press. It\u2019s therefore ironic to note that it\u2019s actually  Master of Magic which betrays a major influence from  Sid Meier\u2019s 1991 magnum opus. Barcia began laying down the basics of his first game in the late 1980s, and thus its mechanics and interface are most indebted to the conquer-the-galaxy board and computer games which appeared before that point. By the time he started on  Master of Magic, however, Barcia had had plenty of time to play and admire  Civilization and to clone some of its approaches. It\u2019s thus at least a bit more defensible to call  Master of Magic \u201cFantasy  Civilization,\u201d as was and is done from time to time, even if doing so still falls well short of a complete description. Certainly the magazine  Computer Gaming World made no bones about it in its review of the game:\n The city display will be familiar to players of Sid Meier\u2019s Civilization. In fact, we wouldn\u2019t want to suggest that the same code was used, but it sure looks like it could have been. From the graphic representation of the buildings themselves to the rows of farming, working, and rebelling citizens, the city display is a near-verbatim copy of the earlier design.\n  This, then, is one important aspect of  Master of Magic. You start with a single village which you must grow and develop. Meanwhile you send out settlers to found other cities, or armies to conquer ones that already exist. You improve your cities by ordering their populations to build structures that increase their production or otherwise cause them to function more efficiently. All of this will be very familiar indeed to any  Civilization veteran. That said, the city-building side of\u00a0 Master of Magic is generally simplified in comparison to  Civilization. There is, for example, no tech tree to research in order to unlock new types of buildings. Instead buildings themselves unlock other buildings, as shown by a handy chart included in the manual: constructing a builder\u2019s hall unlocks the granary, shrine, library, miner\u2019s guild, and city walls; constructing a granary unlocks the farmer\u2019s market; etc., etc. Steve Barcia, who was eager for understandable reasons to ensure that the similarities to  Civilization weren\u2019t overstated, explained the simplifications by noting that the two games had fundamentally different design goals: \u201c Civilization focuses on internal problems. In  Master of Magic, it\u2019s the external; it\u2019s conquest.\u201d\n  So, although you move your units around the map exactly as you do in  Civilization \u2014 to be fair, that game in turn borrows the approach from the much older  Empire \u2014 things go in a dramatically different direction once combat begins:  Master of Magic places much more emphasis on combat than does  Civilization. In the latter game, each unit moves independently over the map; in  Master of Magic, you form larger armies by \u201cstacking\u201d up to nine units together. When two units bump into each other on the world map in  Civilization, one loses and is completely destroyed and the other wins and survives completely intact, all depending on a single roll of the virtual dice which is compared against their respective attack and defense ratings. In  Master of Magic, by contrast, combat takes place on a separate screen, with plenty of room for your tactical genius to make its presence felt. Units here can be \u201cwounded\u201d by having only some of their number killed, needing time to heal and replenish themselves.\n  But the most important addition of all to the combat model, the game\u2019s first real stroke of genius, is that of experience points: as units fight and survive battles, they become better, tougher and stronger, able eventually to punch well above their rookie weight. Granted,  Civilization too has the barest inkling of this; a unit which wins a battle there has a chance of becoming a \u201cveteran,\u201d with a bonus to its attack and defense.  Master of Magic, however, takes the concept to another level entirely. And then it adds a second stroke of genius: heroes, individual captains who can be recruited to join your cause and lead your armies into battle. They too earn experience and improve their skills; you can even find or make magical weapons and armor for them.\n  In the context of its own day,  Master of Magic thus joined Julian Gollop\u2019s   X-COM, which was released about six months before it, as one of the foremost exemplars of a new trend in strategy games, that of using CRPG elements to forge a more personal, even emotional bond between the player and the figures she commands. It works brilliantly here, just as it does in  X-COM. You come to identify deeply with your units and especially your heroes as you nurture their development, and come to mourn the loss of one of them almost like that of a real friend.\n The debt which  Master of Magic owes to the CRPG genre extends to other areas as well. Its randomly generated maps are seeded not just with neutral and enemy towns but with \u201cfallen temples,\u201d \u201cabandoned keeps,\u201d and \u201cmysterious caves.\u201d You can send your units and heroes to confront what is found within, if you dare; your reward for doing so is booty and the experience they earn, assuming they survive. Just exploring the world, revealing and clearing out more and more of the map, is thoroughly enjoyable even before you meet any of the computer players who are doing the same thing.\n  But it\u2019s the game\u2019s third and final layer rather than the city building or unit management that is its most defining attribute, not to mention the source of its name. The fact is that you really do play a master of magic, a wizard competing to conquer the world against up to four other wizards under the control of the computer. As such, you have spells at your disposal\u2026 boy, do you have spells. The magic system draws heavily from   Magic: The Gathering, the collectible card game of fantasy combat that took the culture of tabletop gaming by storm in the early 1990s. Magic here is divided into five \u201cbooks\u201d: Life, Nature, Sorcery, Chaos, and Death. When you begin a new game, you choose your wizard from a list of fourteen possibilities, each of which specializes in one or two books of magic and has some other individual advantage to boot. Or, if you\u2019re playing at one of the higher difficulty levels, you can also build your own wizard from scratch.\n  Either way, you enter the game with just a few low-level spells in your particular book or books. In place of the technological research trees of  Civilization and  Master of Orion, here you research new spells. Their number and variety are positively mind-boggling: there are 40 spells associated with each book, plus 16 that everyone can learn regardless of specialty, for a total of no less than 216 in the game as a whole. But  Master of Magic borrows a trick from  Master of Orion to great effect: not all of the potential spells in your books are available for research on any given playthrough, meaning that the sort of rote strategies that are possible in climbing  Civilization\u2018s static research tree cannot be relied upon here. Because you get a different set of possible spells even if you play the very same wizard twice in a row, you constantly have to think on your feet. Needless to say, your overall strategy must be dictated to a large extent by the spells that show up in your research list. If you gain early access to Floating Island, for example, you have a handy means of crossing oceans before your opponents may be able to; if not, you might need to build expensive shipyards early on in at least some of your coastal cities.\n  Your source of spell-research points is mana, which you harvest from the land\u2019s so-called \u201cplaces of power.\u201d It\u2019s the most essential resource in the game, and thus the source of some agonizing decisions. For mana, you see, is not only important for research. You must balance the amount of it which you devote to research against that which goes to casting spells in the field and that which goes to improving upon your innate spell-casting capabilities; this last category of mana, in other words, serves as your wizard\u2019s equivalent to experience points.\n  The thoroughgoing watchword of  Master of Magic is variety, applying not only to the list of spells but to every aspect of the game. The sheer amount of  stuff here would be impressive in a modern game, and was well-nigh unprecedented at the time of this one\u2019s release. In addition to choosing one of fourteen starting wizards, you choose a starting race for her to command from another fourteen possibilities; each of these races comes with its own unique set of units to be unlocked and raised, as well as a unique mix of buildings that it can erect in its towns. You can choose a world with small, medium, or large land masses, with weak, normal or powerful magic. All these possible starting parameters alone ensure that the game will take a long time indeed to get old. Then, once you actually begin to play, you find an absurdly wide array of monsters to contend with, heroes to recruit, and magical arms and armor to dredge up. And then there are all those spells: spells to buff your units and heroes and to nerf your enemies\u2019, to summon fantastical creatures to join your ranks, to disrupt your foes\u2019 own magic. Eventually your powers become downright Biblical, as you control the winds and blight your enemies\u2019 fields and forests \u2014 but be aware that they can potentially do the same things to you. By way of a final touch, you have not one but two complete worlds to explore and conquer; there are two separate dimensions in the game, the relatively mundane Arcanus and the magic-rich realm of Myrror. You can move between them by means of special portals on the landscape which you must discover and secure \u2014 or, inevitably, via yet another spell you can research. It will take you a long, long time to see everything that  Master of Magic has to offer.\n  Master of Magic\u2018s huge diversity of content does as much as its theme and its core mechanics to give it a very different personality from that of its predecessor  Master of Orion. I love both games just about equally, but most others I\u2019ve talked to tend to express a marked preference for one or the other. Board-game aficionados often speak of two schools of design, named after their typical continents of origin: the Eurogame, where a fairly small number of moving parts is carefully tuned for a perfectly coherent, perfectly balanced, Neoclassical experience; and the \u201cAmeritrash\u201d game, which is distinguished by its Romantic exuberance in throwing everything but the kitchen sink into the mix, just to see what will happen. It\u2019s hopefully clear by now that  Master of Magic is very much the latter sort of game. While there are whole worlds of emergent strategy to be found in all of its variety, there are also moments of friction when things don\u2019t quite gel.\n The most disappointingly half-baked aspect of  Master of Magic is, perhaps not coincidentally, its one feature that actually was lifted wholesale from  Master of Orion: its diplomatic model. You communicate with the other wizards here just as you do the leaders of the other alien races in the older game, but it\u2019s harder to divine why you should do so. In some circumstances, it\u2019s possible to win a game of  Master of Orion without ever firing a shot in anger, by persuading your counterparts to vote you into supremacy via clever diplomacy.  Master of Magic, however, lacks any equivalent victory condition; the only way to win here is to wipe out your foes. This fact turns your negotiations over treaties and favors into an even more cynical exercise than it is in  Master of Orion; it\u2019s a foregone conclusion that absolutely everyone is only playing for time before unsheathing their trusty daggers for the backstab. Further, there\u2019s little ultimate point to all of your diplomatic contortions. Any opposing wizard who agrees to a peace treaty is probably weak enough that you can defeat her in war, or is just trying to milk a little bit more tribute out of you before she declares war on you three turns later. There\u2019s very little reason to ever even initiate diplomatic relations, other than perhaps to trade for a spell you have an urgent need for. I know that I tend to ignore diplomacy entirely, and have never felt overly disadvantaged by it \u2014 a statement one could never make about  Master of Orion. When playing  Master of Magic, I do sometimes find myself missing the intricate dance of negotiation in  Master of Orion, which can be as exciting as any space battle \u2014 but then,  Master of Magic is, as I\u2019ve already noted, a very different game.\n  One consequence of your inability to schmooze your way to victory is a drawn-out endgame, a problem all too typical of these types of grand-strategy games which  Master of Orion manages to deftly avoid thanks to its Galactic Council. There comes a point in every game of  Master of Magic when you  know you\u2019re going to win \u2014 or the opposite. Assuming it\u2019s to be the former, everything becomes a bit rote from that point on, even as conquering those last pesky cities of your enemies can be quite time-consuming. Although you can win by advancing all the way up the spell-research tree and casting the \u201cSpell of Mastery\u201d instead of wiping out all of your opponents militarily \u2014 this is the game\u2019s equivalent of blasting off for Alpha Centauri in  Civilization \u2014 that process is even more time-consuming. And because all of the enemy wizards rush to attack you with everything they have as soon as you start to research the Spell of Mastery, your game is still guaranteed to end in genocidal total war.\n Master of Magic also runs afoul of another typical problem of its genre which its predecessor mostly manages to sidestep: the micromanagement bugbear. Most players develop a consistent pattern for building up their cities early on, one which they vary only under special circumstances. While the game does offer a \u201cvizier\u201d who can manage your cities for you, his choices tend to be hopelessly nonsensical. A way of setting up building queues in advance for each city, coupled ideally with a default queue you could define for yourself, would have been a wonderful addition. As it is, you\u2019re in for an awful lot of busywork in the later stages of building your fantasy empire.\n One final area of the game that\u2019s frequently singled out for criticism is the artificial intelligence of your opponents, which leaves a lot to be desired. In the grand tradition of  Civilization and  Master of Orion, cranking up the difficulty level doesn\u2019t make the other wizards smarter; as far as I can determine, it doesn\u2019t actually change their set behaviors at all. What it does do is cheat on their behalf ever more egregiously, by giving them bigger and bigger production bonuses. Many understandably find this solution to the problem of making the game challenging for the veteran player to be less than ideal.\n Still, a recent development in the small but surprisingly active world of ongoing  Master of Magic fandom provides an object lesson in being careful what you wish for. Just this year, a group of fans, working in association with the current owners of the game\u2019s intellectual property, released   Caster of Magic, a comprehensive patch/expansion that, among many other things, dramatically upgrades the artificial intelligence. Personally, I find it no fun whatsoever, and I\u2019ve heard many others say the same thing. Playing against its smart, ruthless, ultra-agressive enemy wizards only served to clarify for me what I really enjoy about  Master of Magic: exploring the worlds, building up my units and heroes, researching and trying out new spells. For me, it\u2019s as much  experiential CRPG as zero-sum strategy game. If I could add something to the game, it would be more diverse encounter areas, possibly with elements of story to them, to further emphasize these qualities. This is not to say that you\u2019re wrong to play in a different way, wrong to enjoy the game for other reasons; certainly there are many who love what  Caster of Magic does to the game. It does, however, serve to illustrate that the field of ludic artificial intelligence, which is so often characterized as simply the struggle to make the computer play just like a human, becomes more complicated than that formulation just as soon as it collides with real-world game design.\n Caster of Magic is in fact merely the latest example of a long tradition of patching  Master of Magic, stemming from the fact that the game as originally released desperately needed all the patching it could get. Both before and after their acquisition by Spectrum Holobyte in 1993, MicroProse was among the publishers most prone to ship games before their time in response to external financial pressures. As one of the company\u2019s big titles for the Christmas of 1994,  Master of Magic fell victim to this unfortunate tendency. In yet another marked contrast to  Master of Orion, Steve Barcia\u2019s second grand-strategy game shipped so riddled with bugs that it was essentially unplayable; the game crashed more often than not during battles. (\u201cSave every turn, save before every battle, save every time you can,\u201d became the player\u2019s rule of thumb as summarized by  Computer Gaming World.) A series of patches gradually solved the worst of the issues, but there remain to this day spells in the game that don\u2019t quite work correctly.\u00a0 Master of Magic could have used its own incarnations of Alan Emrich and Tom Hughes, the two outsiders who took an early interest in  Master of Orion during its development and offered so much feedback and practical advice over the months that followed that co-designer credits wouldn\u2019t have been out of order. Failing that, just a few more months in the oven and a round or two of proper testing could have done much for it.\n Although its overall reception was gravely impacted by its unconscionable state at the time of its release, a small group of players fell in love with the game for its crazy multitudinousness and kept its memory alive for years, then decades. They did so not least because  Master of Magic became the opposite of  Master of\n......", "posttime": "2020-10-24 07:31:33", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9b54\u672f,master,\u6e38\u620f", "title": "\u9b54\u672f\u7855\u58eb", "title_en": "Master of Magic", "transed": 1, "url": "https://www.filfre.net/2020/10/master-of-magic/", "via": "", "real_tags": ["\u9b54\u672f", "master", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1030827, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5c06\u7b80\u8981\u63cf\u8ff0\u7528\u4e8e\u572832\u4f4d\u548c64\u4f4dx86CPU\u4e0a\u8f6c\u50a8\u548c\u6062\u590d\u4e0d\u540c\u7c7b\u578b\u5bc4\u5b58\u5668\u7684\u65b9\u6cd5\u3002\u7b2c\u4e00\u90e8\u5206\u5c06\u91cd\u70b9\u4ecb\u7ecd\u901a\u7528\u5bc4\u5b58\u5668\u3001\u8c03\u8bd5\u5bc4\u5b58\u5668\u548c\u6d6e\u70b9\u5bc4\u5b58\u5668\uff0c\u76f4\u81f3SSE\u6269\u5c55\u63d0\u4f9b\u7684XMM\u5bc4\u5b58\u5668\u3002\u6211\u5c06\u89e3\u91ca\u5982\u4f55\u901a\u8fc7ptrace(2)\u63a5\u53e3\u83b7\u53d6\u5b83\u4eec\u7684\u503c\u3002\nPtrace(2)API\u901a\u5e38\u5728\u6240\u6709\u73b0\u4ee3BSD\u7cfb\u7edf\u548cLinux\u4e2d\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u662f\u4ece4.3BSD\u4e2d\u8bbe\u8ba1\u548c\u5b9e\u73b0\u7684\u539f\u59cb\u8868\u5355\u4e2d\u6d3e\u751f\u51fa\u6765\u7684\u3002\u672c\u6587\u4e3b\u8981\u5173\u6ce8FreeBSD\u548cNetBSD\u7cfb\u7edf\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf(\u5982OpenBSD\u3001\u873b\u8713BSD\u6216Linux)\u7684\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4ece\u672c\u6587\u4e2d\u83b7\u76ca\uff0c\u56e0\u4e3a\u57fa\u672c\u539f\u7406\u662f\u76f8\u540c\u7684\uff0c\u5e76\u4e14\u4ee3\u7801\u793a\u4f8b\u65e8\u5728\u5f88\u5bb9\u6613\u5730\u9002\u7528\u4e8e\u5176\u4ed6\u5e73\u53f0\u3002\n\u5355\u4e2aCPU(\u5728\u73b0\u4ee3\u786c\u4ef6\u4e2d\uff1a\u5982\u679c\u8d85\u7ebf\u7a0b\u53ef\u7528\uff0c\u5219\u4e3aCPU\u6838\u5fc3\u6216CPU\u7ebf\u7a0b)\u4e00\u6b21\u53ea\u80fd\u6267\u884c\u4e00\u4e2a\u7a0b\u5e8f\u7ebf\u7a0b\u3002\u4e3a\u4e86\u80fd\u591f\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\u548c\u7ebf\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u987b\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5373\u5468\u671f\u6027\u5730\u6302\u8d77\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\uff0c\u4fdd\u5b58\u5176\u72b6\u6001\uff0c\u6062\u590d\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u4fdd\u5b58\u7684\u72b6\u6001\u5e76\u6062\u590d\u5b83\uff0c\u4fdd\u5b58\u548c\u6062\u590d\u5904\u7406\u5668\u5bc4\u5b58\u5668\u7684\u503c\u5728\u4e0a\u4e0b\u6587\u5207\u6362\u4e2d\u8d77\u7740\u91cd\u8981\u7684\u4f5c\u7528\u3002\u91cd\u8981\u7684\u662f\uff0c\u8be5\u8fdb\u7a0b\u5bf9\u4e8e\u8981\u5207\u6362\u7684\u8fdb\u7a0b\u662f\u5b8c\u5168\u900f\u660e\u7684\uff0c\u5e76\u4e14\u5728\u6b63\u786e\u5b9e\u73b0\u7684\u5185\u6838\u4e2d\uff0c\u5e94\u8be5\u6ca1\u6709\u7a0b\u5e8f\u53ef\u4ee5\u5bdf\u89c9\u5230\u7684\u526f\u4f5c\u7528\u3002\n\u7531\u4e8e\u591a\u79cd\u539f\u56e0\uff0c\u8c03\u8bd5\u5668\u53ef\u80fd\u9700\u8981\u68c0\u67e5\u88ab\u8c03\u8bd5\u7a0b\u5e8f\u7684\u5bc4\u5b58\u5668\u96c6\u3002\u901a\u8fc7\u68c0\u67e5\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u5b83\u80fd\u591f\u786e\u5b9a\u6e90\u4ee3\u7801\u4e2d\u5c06\u7ee7\u7eed\u6267\u884c\u7684\u4f4d\u7f6e\uff0c\u5e76\u901a\u8fc7\u66f4\u6539\u5b83\u53ef\u4ee5\u63a7\u5236\u6267\u884c\u3002\u5806\u6808\u6307\u9488\u662f\u5185\u7701\u5b58\u50a8\u5728\u5806\u6808\u4e0a\u7684\u53d8\u91cf\u6240\u5fc5\u9700\u7684\uff0c\u800c\u5176\u4f59\u7684\u5bc4\u5b58\u5668\u672c\u8eab\u53ef\u4ee5\u4fdd\u5b58\u53d8\u91cf\u3002\n\u4e00\u7ec4\u7279\u6b8a\u7684x86\u5bc4\u5b58\u5668\u662f\u8c03\u8bd5\u5bc4\u5b58\u5668\u3002\u5b83\u4eec\u4e0d\u80fd\u7531\u7a0b\u5e8f\u672c\u8eab\u8bbf\u95ee\uff1b\u4f46\u662f\uff0c\u5b83\u4eec\u53ef\u4ee5\u7531\u8c03\u8bd5\u5668\u8bfb\u53d6\u6216\u5199\u5165\u3002\u5b83\u4eec\u5141\u8bb8\u5728\u6b63\u5728\u6267\u884c\u7684\u4ee3\u7801\u4e0a\u8bbe\u7f6e\u786c\u4ef6\u8f85\u52a9\u65ad\u70b9(\u6307\u4ee4\u6267\u884c\u9677\u9631)\uff0c\u5e76\u5728\u53d8\u91cf\u4e0a\u8bbe\u7f6e\u89c2\u5bdf\u70b9(\u8bfb\u548c/\u6216\u5199\u64cd\u4f5c\u9677\u9631)\u3002\n\u672f\u8bed\u201c\u901a\u7528\u5bc4\u5b58\u5668\u201d\u6709\u70b9\u542b\u7cca\uff0c\u4ece\u72ed\u4e49\u4e0a\u8bb2\uff0c\u5b83\u6307\u7684\u662f\u5c11\u6570\u51e0\u4e2a(i386\u4e0a8\u4e2a\uff0cAMD64\u4e0a16\u4e2a)\u53ef\u7528\u4e8e\u5b58\u50a8\u4efb\u610f\u6570\u636e(\u901a\u5e38\u662f\u6574\u6570\u6216\u6307\u9488)\u7684\u57fa\u7ebf\u5bc4\u5b58\u5668\u3002\u5728\u66f4\u5e7f\u6cdb\u7684\u610f\u4e49\u4e0a\uff0c\u5b83\u610f\u5473\u7740\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784\u4e2d\u7684\u6240\u6709\u57fa\u7ebf\u5bc4\u5b58\u5668\uff0c\u5386\u53f2\u4e0a\u4e0d\u5305\u62ec\u6d6e\u70b9\u5bc4\u5b58\u5668\u548c\u7279\u6b8a\u7c7b\u578b\u7684\u5bc4\u5b58\u5668\u3002\u5728x86\u4e0a\uff0c\u8fd9\u5305\u62ec\u201c\u72ed\u4e49\u201d\u901a\u7528\u5bc4\u5b58\u5668\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668(EIP/RIP)\u3001\u6bb5\u5bc4\u5b58\u5668\u548c\u6807\u5fd7\u5bc4\u5b58\u5668\u3002\n\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u5927\u591a\u6570\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4f8b\u5982\u4f7f\u7528MOV\u6307\u4ee4\uff0c\u6216\u901a\u8fc7\u63a8\u9001\u5c06\u5176\u63a8\u9001\u5230\u5806\u6808\u4e0a\u3002\u53ef\u4ee5\u4f7f\u7528LEA\u6307\u4ee4\u590d\u5236EIP/RIP\u5bc4\u5b58\u5668\uff0c\u5e76\u901a\u8fc7JMP\u6062\u590d\u3002\u53ef\u4ee5\u901a\u8fc7PUSHFD/PUSHFQ\u5c06\u6807\u5fd7\u5bc4\u5b58\u5668\u63a8\u9001\u5230\u5806\u6808\uff0c\u7136\u540e\u901a\u8fc7POPFD/POPFQ\u4ece\u5806\u6808\u4e2d\u5f39\u51fa\u6807\u5fd7\u5bc4\u5b58\u5668\u3002\n\u4e0b\u9762\u7684\u6e05\u5355\u6f14\u793a\u4e86\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u5728\u4efb\u610f\u70b9\u6355\u83b7allamd64GPRS\u7684\u503c\uff0c\u5e76\u5728\u4ece\u6c47\u7f16\u8fd4\u56de\u540e\u6253\u5370\u8fd9\u4e9b\u503c\u3002\n#include&lt\uff1bstdio.h&gt\uff1b#include&lt\uff1bstdint.h&gt\uff1benum{R_Rax\uff0cR_RBX\uff0cR_RCX\uff0cR_RDX\uff0cR_RSI\uff0cR_RDI\uff0cR_RBP\uff0cR_RSP\uff0cR_R8\uff0cR_R9\uff0cR_R10\uff0cR_R11\uff0cR_R12\uff0cR_R13\uff0cR_R14\uff0cR_R15\uff0cR_RIP\uff0cR_RFLAGS\uff0cR_Length}\uff1benum{S_CS\uff0cS_DS\uff0cS_ES\uff0cS_FS\uff0cS_GS\uff0cS_SS\uff0cS_Length}\uff1bInt main(){uint64_t GPR[R_LENGTH]\uff1buint16_t seg[S_LENGTH]\uff1bASM\u6613\u5931\u6027(/*\u7528\u968f\u673a\u6570\u636e\u586b\u5145\u5bc4\u5b58\u5668*/&#34\uff1bmov$0x0102030405060708\uff0c%%rax\\n\\t&#34\uff1b&#34\uff1bmov$0x1112131415161718\uff0c%%rbx\\n\\t&#34\uff1b&#34\uff1bmov$0x2122232425262728\uff0c%%rcx\\n\\t&#34\uff1b&#34\uff1bmov$0x3132333435373738\uff0c%%rdx\\n\\t&#34\uff1b&#34\uff1bmov$0x2122232425262728\uff0c%%rcx\\n\\t&#34\uff1b&#34\uff1bmov$0x3132333435373738\uff0c%rdx\\n\\t&#34\uff1bMOV$0x4142434445464748\uff0c%%RSI\\n\\t&#34\uff1b&#34\uff1bmov$0x5152535455565758\uff0c%%RDI\\n\\t&#34\uff1b/*RBP\u7528\u4e8e\u5e27\u6307\u9488\uff0cRSP\u662f\u5806\u6808\u6307\u9488*/&#34\uff1bmov$0x8182838485868788\uff0c%%R8\\n\\t&#34\uff1b&#34\uff1bmov$0x9192939495969798\uff0c%%R9\\n\\t&#34\uff1b&#34\uff1bmov$0xa1a1a2a3a4a5a6a7a8\uff0c%%Rb1b2b3b4b5b6b7b8\uff0c%%R11\\t&#34\uff1b&#34\uff1bmov$0x9192939495969798\uff0c%%R9\\n\\t&#34\uff1b&#34\uff1bmov$0xa1a2a2a4a5a6a7a8\uff0c%%Rb1b2b3b4b5b6b7b8\uff0c%r11\\t&#34\uff1b&#34\uff1bmov$0x9192939495969798\uff0c%%R9\\n\\t&#34\uff1b&#34\u3002&#34\uff1bmov$0xc1c2c3c4c5c6c7c8\uff0c%%r12\\n\\t&#34\uff1b&#34\uff1bmov$0xd1d2d3d4d5d5d6d7d8\uff0c%%r13\\n\\t&#34\uff1b&#34\uff1bmov$0xe1e2e3e4e5e6e7e8\uff0c%r14\\n\\t&#34\uff1b&#34\uff1bmov$0xf1f2f3f4f5f6f7f8\uff0c%%R15\\n\\t&#34\uff1b/*GPRS*/&34\uff1bmov%%rax\uff0c%[rax]\\n\\t&34\uff1b&#34\uff1bMOV%%RBX\uff0c%[RBX]\\n\\t&#34\uff1b&#34\uff1bmov%%RCX\uff0c%[RCX]\\n\\t&#34\uff1b&#34\uff1bmov%%RDX\uff0c%[RDX]\\n\\t&#34\uff1b&#34\uff1bmov%%RSI\uff0c%[RSI]\\n\\t&#34\uff1b&#34\uff1bmov%RDI\uff0c%[RDI]\\n\\t&#34\uff1b&#34\uff1bMOV%%RBP\uff0c%[RBP]\\n\\t&#34\uff1b&#34\uff1bmov%%RSP\uff0c%[RSP]\\n\\t&#34\uff1b&#34\uff1bmov%%R8\uff0c%[R8]\\n\\t&#34\uff1b&#34\uff1bmov%%R9\uff0c%[R9]\\n\\t&#34\uff1b&#34\uff1bmov%R10\uff0c%[R10]\\n\\t&#34\uff1b&#34\uff1bMOV%%R11\uff0c%[R11]\\n\\t&#34\uff1b&#34\uff1bmov%%R12\uff0c%[R12]\\n\\t&#34\uff1b&#34\uff1bmov%%R13\uff0c%[R13]\\n\\t&#34\uff1b&#34\uff1bmov%%R14\uff0c%[R14]\\n\\t&#34\uff1b&#34\uff1bmov%R15\uff0c%[R15]\\n\\t&#34\uff1b/*\u8f6c\u50a8RIP*/#34\uff1bLEA(%%rip)\uff0c%%rbx\\n\\t&#34\uff1b&#34\uff1bmov%%rbx\uff0c%[rip]\\n\\t&#34\uff1b&#34\uff1bmov%[rbx]\uff0c%%rbx\\n\\t&#34\uff1b/*\u8f6c\u50a8\u6bb5\u5bc4\u5b58\u5668*/&#34\uff1bmov%%cs\uff0c%[cs]\\n\\t&#34\uff1b&#34\uff1bmov%%ds\uff0c%[ds]\\n\\t&#34\uff1b&#34\uff1bMov%%es\uff0c%[es]\\n\\t&#34\uff1b&#34\uff1bmov%%fs\uff0c%[fs]\\n\\t&#34\uff1b&#34\uff1bmov%%gs\uff0c%[gs]\\n\\t&#34\uff1b&#34\uff1bmov%%ss\uff0c%[ss]\\n\\t&#34\uff1b/*dump RFLAGS*/&#34\uff1bpush fq\\n\\t&#34\uff1b&#34\uff1bpopq%[rflag]\\n\\t&#34\uff1b\uff1a[RAX]&#34\uff1b=m&#34\uff1b(GPR[R_RAX])\uff0c[RBX]&#34\uff1b=m&#34\uff1b(GPR[R_RBX])\uff0c[RCX]&#34\uff1b=m&#34\uff1b(GPR[R_RCX])\uff0c[RDX]&#34\uff1b=m&#34\uff1b(GPR[R_RDX])\uff0c[RSI]&#34\uff1b=m&#34\uff1b(GPR[R_RSI])\uff0c[RDI]&#34\uff1b=m&#34\uff1b(GPR[R_RDI])\uff0c[RBP]&#34\uff1b=m&#34\uff1b(GPR[R_RBP])\uff0c[RSP]&#34\uff1b=m&#34\uff1b(GPR[R_RSP])\uff0c[R8]&#34\uff1b=m&#34\uff1b(GPR[R_R8])\uff0c[R9]&#34\uff1b=m&#34\uff1b(GPR[R_R9])\uff0c[R10]&#34\uff1b=m&#34\uff1b(GPR[R_R10])\uff0c[R11]&#34\uff1b=m&#34\uff1b(GPR[R_R11])\uff0c[R12]&#34\uff1b=m&#34\uff1b(GPR[R_R12])\uff0c[R13]&#34\uff1b=m&#34\uff1b(GPR[R_R13])\uff0c[R14]&#34\uff1b=m&#34\uff1b(GPR[R_R14])\uff0c[R15]&#34\uff1b=m&#34\uff1b(GPR[R_R15])\uff0c[RIP]&#34\uff1b=m&#34\uff1b(GPR[R_RIP])\uff0c[rflag]&#34\uff1b=m&#34\uff1b(GPR[R_RFLAGS])\uff0c[cs]&#34\uff1b=m&#34\uff1b(seg[S_CS])\uff0c[ds]&#34\uff1b=m&#34\uff1b(seg[S_DS])\uff0c[ES]&#34\uff1b=m&#34\uff1b(seg[S_ES])\uff0c[fs]&#34\uff1b=m&#34\uff1b(seg[S_FS])\uff0c[gs]&#34\uff1b=m&#34\uff1b(seg[S_GS])\uff0c[ss]&#34\uff1b=m&#34\uff1b(seg[S_SS])\uff1a\uff1a&#34\uff1b%rax&#34\uff1b\uff0c&#34\uff1b%rbx&#34\uff1b\uff0c&#34\uff1b%rcx&#34\uff1b\uff0c&#34\uff1b%rdx&#34\uff1b\uff1b\uff0c&#34\uff1b%RSI&#34\uff1b\uff0c&#34\uff1b%RDI&#34\uff1b\uff0c&#34\uff1b%R8&#34\uff1b\uff0c&#34\uff1b%R9&#34\uff1b\uff0c&#34\uff1b%R10&#34\uff1b\uff0c&#34\uff1b%R11&#34\uff1b\uff0c&#34\uff1b%R12&#34\uff1b\uff0c&#34\uff1b%R13&#34\uff1b\uff0c&#34\uff1b%R14&#34\uff1b\uff0c&#34\uff1b%R15&#34\uff1b\uff0c&#34\uff1bMemory&#34\uff1b)\uff1bprintf(&#34\uff1brax=0x%016lx\\n&#34\uff1b\uff0cGPR[R_RAX])\uff1bprintf(&#34\uff1brbx=0x%016lx\\n&#34\uff1b\uff0cGPR[R_RBX])\uff1bprintf(&#34\uff1brcx=0x%016lx\\n&#34\uff1b\uff0cGPR[R_RCX])\uff1bprintf(&#34\uff1bRDX=0x%016lx\\n&34\uff1b\uff0cGPR[R_RDX])\uff1bprintf(&#34\uff1bRSI=0x%016lx\\n&34\uff1b\uff0cGPR[R_RSI])\uff1bprintf(&#34\uff1bRDI=0x%016lx\\n&#34\uff1b\uff0cGPR[R_RDI])\uff1bprintf(&#34\uff1bRBP=0x%016lx\\n&#34\uff1b\uff0cGPR[R_RBP])\uff1bprintf(&#34\uff1bRSP=0x%016lx\\n&#34\uff1b\uff0cGPR[R_RSP])\uff1bprintf(&#34\uff1bR8=0x%016lx\\n&#34\uff1bGPR[R_R8])\uff1bprintf(#34\uff1bR9=0x%016lx\\n&34\uff1b#34\uff1bR8=0x%016lx\\n&34\uff1b)\uff1bprintf(&#34\uff1bR8=0x%016lx\\n&#34\uff1b)\uff1bprintf(#&34\uff1bR9=0x%016lx\\n&34\uff1b\uff0cGPR[R_R9])\uff1bprintf(&#34\uff1bR10=0x%016lx\\n&#34\uff1b\uff0cGPR[R_R10])\uff1bprintf(&#34\uff1bR11=0x%016lx\\n&#34\uff1b\uff0cGPR[R_R11])\uff1bprintf(&#34\uff1br12=0x%016lx\\n&#34\uff1b\uff0cGPR[R_R12])\uff1bprintf(&#34\uff1bR13=0x%016lx\\n&#34\uff1bGPR[R_R13])\uff1bprintf(#34\uff1bR14=0x%016lx\\n&34\uff1b#34\uff1bR13=0x%016lx\\n&#34\uff1b)\uff1bprintf(&#34\uff1bR13=0x%016lx\\n&#34)\uff1bprintf(#&34\uff1bR14=0x%016lx\\n&34\uff1b\uff0cGPR[R_R14])\uff1bprintf(&#34\uff1bR15=0x%016lx\\n&#34\uff1b\uff0cGPR[R_R15])\uff1bprintf(&#34\uff1bRIP=0x%016lx\\n&#34\uff1b\uff0cGPR[R_RIP])\uff1bprintf(&#34\uff1bcs=0x%04x\\n&#34\uff1b\uff0cseg[S_CS])\uff1bprintf(&#34\uff1bds=0x%04x\\n&#34\uff1b\uff0cseg[S_DS])\uff1bprintf(&#34\uff1bes=0x%04x\\n&#34\uff1b\uff0cseg[S_ES])\uff1bprintf(&#34\uff1bfs=0x%04x\\n&#34\uff1b\uff0cseg[S_FS])\uff1bprintf(&#34\uff1bgs=0x%04x\\n&#34\uff1b\uff0cseg[S_GS])\uff1bprintf(&#34\uff1bss=0x%04x\\n&#34\uff1b\uff0cseg[S_SS])\uff1bprintf(&#34\uff1brflag=0x%016lx\\n&34\uff1b\uff0cgpr[R_RFLAGS])\uff1bReturn 0\uff1b}\u3002\nFreeBSD\u548cNetBSD\u90fd\u4f7f\u7528PT_GETREGS\u8bf7\u6c42\u4ece\u7a0b\u5e8f\u4e2d\u83b7\u53d6GPRS\u7684\u503c\uff0c\u5e76\u4f7f\u7528PT_SETREGS\u66f4\u65b0\u5b83\u4eec\u3002\u8bf7\u6c42\u5c06\u6307\u5411struct reg\u7684\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\u3002\n\u5728FreeBSD\u4e0a\uff0ci386\u548cAMD64\u90fd\u5c06\u5355\u72ec\u7684\u5bc4\u5b58\u5668\u5217\u8868\u4f5c\u4e3a\u7ed3\u6784\u7684\u5b57\u6bb5\u3002\u5728NetBSD\u4e0a\uff0ci386\u4f7f\u7528\u5e38\u89c4\u7ed3\u6784\uff0c\u800cAMD64\u5c06\u6240\u6709\u503c\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u8be5\u6570\u7ec4\u7684\u7d22\u5f15\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e3a\u5e38\u91cf\u3002\n\u4e0b\u9762\u7684\u6e05\u5355\u6bd4\u8f83\u4e86FreeBSD\u548cNetBSD\u4e0a\u4f7f\u7528\u7684\u7ed3\u6784\u3002\u8bf7\u6ce8\u610f\uff0cNetBSD/AMD64\u4f7f\u7528\u7279\u6b8a\u7684\u5b8f\u3002\u4f8b\u5982\uff0cGreg(RDI RDI\uff0c0)\u5b9a\u4e49_REG_RDI\u3002\n/*FreeBSD/i386*//*NetBSD/i386*/struct__reg32{struct reg{__uint32_t r_fs\uff1bint r_eax\uff1b__uint32_t r_es\uff1bint r_ecx\uff1b__uint32_t r_ds\uff1bint r_edX\uff1b__uint32_t r_edi\uff1bint r_ebx\uff1b__uint32_t r_esi\uff1bint r_esp\uff1b_uint32_t r_ebp\uff1bint r_ep\uff1b__uint32_t r_isp\uff1bint r_ESI\uff1b__uint32_t r_ebx\uff1bint r_edi\uff1b__uint32_t\n\u53ef\u4ee5\u4f7f\u7528FSAVE\u6307\u4ee4\u8f6c\u50a8\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\uff0c\u5e76\u4f7f\u7528FRSTOR\u6307\u4ee4\u6062\u590d\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u3002\u8be5\u6307\u4ee4\u6307\u5411108\u5b57\u8282\u7684\u5185\u5b58\u7f13\u51b2\u533a\uff0c\u5b58\u50a8\u63a7\u5236\u5bc4\u5b58\u5668\u548cST(I)\u5bc4\u5b58\u5668\u7684\u5f53\u524d\u503c\uff0c\u5e76\u91cd\u7f6eFPU\u3002\nFSAVE\u52a9\u8bb0\u7b26\u9690\u5f0f\u63d2\u5165\u989d\u5916\u7684FWAIT\u6307\u4ee4\uff0c\u4ee5\u786e\u4fddFPU\u5b8c\u6210\u5904\u7406\u4e4b\u524d\u7684\u64cd\u4f5c\u3002\u5982\u679c\u60a8\u5e0c\u671b\u5728\u5f02\u5e38\u5904\u7406\u8fc7\u7a0b\u4e2d\u6355\u83b7FPU\u72b6\u6001\uff0c\u5219\u5e94\u6539\u4e3a\u4f7f\u7528FNSAVE\uff0c\u56e0\u4e3a\u5b83\u65e0\u9700\u7b49\u5f85\u5373\u53ef\u6355\u83b7\u76f4\u63a5\u7684FPU\u72b6\u6001\u3002(=\u3002\n\u4f5c\u4e3aMMX\u6307\u4ee4\u96c6\u7684\u4e00\u90e8\u5206\u5f15\u5165\u768464\u4f4dMM i\u5bc4\u5b58\u5668\u4e0eST(I)\u5bc4\u5b58\u5668\u91cd\u53e0\u3002\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u65b0\u7684\u8f6c\u50a8\u6307\u4ee4\uff0c\u5982\u679c\u4f7f\u7528MM i\u5bc4\u5b58\u5668\uff0c\u5b83\u4eec\u5c06\u4f5c\u4e3aFSAVE\u4e2dST(I)\u7684\u4e00\u90e8\u5206\u8f6c\u50a8\u3002\nSSE\u5bc4\u5b58\u5668\u7ec4\u5f15\u5165\u4e868\u4e2a\u65b0\u7684128\u4f4d\u5bc4\u5b58\u5668XMM i\u548c\u4e00\u4e2a\u63a7\u5236MXCSR\u5bc4\u5b58\u5668\u3002\u540c\u65f6\u4ecb\u7ecd\u4e86\u4e00\u79cd\u65b0\u7684\u503e\u5012\u529f\u80fdFXSAVE\u53ca\u5176\u6062\u590d\u529f\u80fdFXRSTOR\u3002\u5b83\u4eec\u4f7f\u7528512\u5b57\u8282\u7684\u5185\u5b58\u7f13\u51b2\u533a\u5bf9\u9f50\u572816\u5b57\u8282\u8fb9\u754c\u4e0a\uff0c\u5e03\u5c40\u4e0eFSAVE\u4e0d\u540c\u3002\nFSAVE\u548cFXSAVE\u4e4b\u95f4\u7684\u660e\u663e\u533a\u522b\u5728\u4e8e\u540e\u8005\u4fdd\u5b58SSE\u5bc4\u5b58\u5668\u3002\u5728i386\u4e0a\uff0c\u5b58\u50a8\u5bc4\u5b58\u5668XMM0..XMM7\uff0c\u7f13\u51b2\u533a\u7684\u5269\u4f59\u90e8\u5206\u4fdd\u7559/\u672a\u4f7f\u7528\u3002\u5728AMD64\u4e0a\uff0c\u4fdd\u7559\u7a7a\u95f4\u7684\u5927\u90e8\u5206\u7528\u4e8e\u5b58\u50a8XMM8..XMM15\u3002\n\u53e6\u4e00\u4e2a\u7ecf\u5e38\u88ab\u5ffd\u7565\u7684\u533a\u522b\u662f\uff0cFTW\u72b6\u6001\u5bc4\u5b58\u5668\u7531FSAVE\u4ee5\u5176\u5b8c\u6574\u5f62\u5f0f\u5b58\u50a8\uff0c\u800c\u7531FXSAVE\u4ee5\u5176\u7b80\u5316\u5f62\u5f0f\u5b58\u50a8\u3002\u524d\u8005\u6307\u793a\u6bcf\u4e2aST(I)\u5bc4\u5b58\u5668\u5305\u542b\u7684\u503c\u7c7b\u578b-\u7a7a\u3001\u96f6\u3001\u5f52\u4e00\u5316\u6570\u5b57\u548c\u7279\u6b8a\uff0c\u540e\u8005\u4ec5\u6307\u793a\u5bc4\u5b58\u5668\u662f\u5426\u4e3a\u7a7a\u3002\n\u8981\u8bbf\u95ee\u8fdb\u4e00\u6b65\u7684\u5904\u7406\u5668\u6269\u5c55(\u5982AVX)\u5f15\u5165\u7684\u5bc4\u5b58\u5668\uff0c\u9700\u8981\u4f7f\u7528XSAVE\u6307\u4ee4\u3002\u4e0e\u524d\u9762\u63cf\u8ff0\u7684\u8fd9\u4e9b\u4e0d\u540c\uff0c\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u53ef\u6269\u5c55\u7684\u3002XSAVE\u662f\u4e00\u4e2a\u5e7f\u6cdb\u7684\u8bdd\u9898\uff0c\u5b83\u5c06\u662f\u672c\u6587\u7b2c\u4e8c\u90e8\u5206\u7684\u4e3b\u9898\u3002\nFXSAVE/FXRSTOR\u6307\u4ee4\u7684\u4f20\u7edf\u53d8\u4f53\u5c06FIP(\u5bfc\u81f4\u5f02\u5e38\u7684\u6307\u4ee4)\u548cFDP(\u5176\u64cd\u4f5c\u6570)\u6307\u9488\u5b58\u50a8\u4e3a\u6210\u5bf9\u768416\u4f4d\u6bb5\u5bc4\u5b58\u5668(\u5206\u522b\u4e3aFCS\u3001FD)\u548c32\u4f4d\u5730\u5740\u5bc4\u5b58\u5668(FIP\u3001FDP)\u3002\u8fd9\u5bf9\u4e8eAMD64\u7a0b\u5e8f\u6765\u8bf4\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u539f\u59cb\u768464\u4f4d\u6307\u9488\u88ab\u622a\u65ad\u4e3a32\u4f4d\u3002\n\u4e3a\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u63d0\u4f9b\u4e86\u9644\u52a0\u52a9\u8bb0\u7b26FXSAVE64/FXRSTOR64\u3002\u5b83\u4eec\u5728\u76f8\u5e94\u7684\u6307\u4ee4\u524d\u9762\u52a0\u4e0aREX.W=1\u524d\u7f00\uff0c\u5c06FIP\u548cFDP\u5b57\u6bb5\u6539\u4e3a\u4f7f\u752864\u4f4d\u6307\u9488\u3002\u5b83\u4eec\u7684\u7f3a\u70b9\u662f\u4e0d\u518d\u62a5\u544a\u8be5\u6bb5\uff1b\u4f46\u662f\uff0c\u8f83\u65b0\u7684AMD64\u5904\u7406\u5668\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u518d\u652f\u6301FCS/FD\u3002", "note_en": "In this article, I would like to shortly describe the methods usedto dump and restore the different kinds of registers on 32-bitand 64-bit x86 CPUs. The first part will focus on General PurposeRegisters, Debug Registers and Floating-Point Registers up to the XMMregisters provided by the SSE extension. I will explain how theirvalues can be obtained via the  ptrace(2) interface.\n The  ptrace(2) API is commonly used in all modern BSD systemsand Linux, as all of them derive it from the original form designedand implemented in 4.3BSD. The primary focus in this article ison the FreeBSD and NetBSD systems. Nevertheless, the users of otherOperating Systems such as OpenBSD, DragonFly BSD or Linux can stillbenefit from this article as the basic principles are the sameand the code examples are intended to be easily adapted to otherplatforms.\n A single CPU (in modern hardware: CPU core or CPU thread,if hyperthreading is available) can execute only one program threadat a time. In order to be able to run multiple processes and threadsquasi-simultaneously, the Operating System must perform  contextswitching \u2014 that is periodically suspend the currently running thread,save its state, restore the saved state of another thread and resume it.Saving and restoring the values of the processor\u2019s registers playan important part in context switching. It is important thatthis process is fully transparent to the process being switched,and in a properly implemented kernel there should be no side effectsthat are perceptible to the program.\n The debugger may need to examine the register sets of the debuggedprogram for a number of reasons. By inspecting the Program Counter,it is able to determine the location in source code at whichthe execution will continue, and by altering it it can controlthe execution. The Stack Pointer is necessary to introspect variablesstored on the stack, while the remaining registers can hold variablesthemselves.\n A special set of the x86 registers are the Debug Registers. They arenot accessible to the program itself; however, they can be reador written by the debugger. They allow setting hardware assistedbreakpoints (instruction execute trap) on the code being executed,and watchpoints (read and/or write operation trap) on the variables.\n   The term \u2018General Purpose Registers\u2019 is a bit ambiguous.In the narrower sense, it means the few (8 on i386, 16 on amd64)baseline registers that can be used to store arbitrary data (usuallyintegers or pointers). In the wider sense it means all baselineregisters in the processor architecture, historically excludingfloating-point registers and special kinds of registers. On x86, thisincludes the \u2018narrower sense\u2019 general-purpose registers, the ProgramCounter (EIP/RIP), segment registers and the flag register.\n The majority of the General Purpose Registers can be copied directly,e.g. using the  MOV instruction, or pushed onto the stackvia  PUSH. The EIP/RIP register can be copied using the  LEAinstruction, and restored via  JMP. The flag register can be pushedonto the stack via  PUSHFD/ PUSHFQ, and afterwards popped from itvia  POPFD/ POPFQ.\n The listing below demonstrates a program that grabs the values of allamd64 GPRs at an arbitrary point during the execution and prints themafter returning from assembly.\n  #include &lt;stdio.h&gt;#include &lt;stdint.h&gt;enum { R_RAX, R_RBX, R_RCX, R_RDX, R_RSI, R_RDI, R_RBP, R_RSP, R_R8, R_R9, R_R10, R_R11, R_R12, R_R13, R_R14, R_R15, R_RIP, R_RFLAGS, R_LENGTH};enum { S_CS, S_DS, S_ES, S_FS, S_GS, S_SS, S_LENGTH};int main(){ uint64_t gpr[R_LENGTH]; uint16_t seg[S_LENGTH]; asm volatile ( /* fill registers with random data */ &#34;mov $0x0102030405060708, %%rax\\n\\t&#34; &#34;mov $0x1112131415161718, %%rbx\\n\\t&#34; &#34;mov $0x2122232425262728, %%rcx\\n\\t&#34; &#34;mov $0x3132333435363738, %%rdx\\n\\t&#34; &#34;mov $0x4142434445464748, %%rsi\\n\\t&#34; &#34;mov $0x5152535455565758, %%rdi\\n\\t&#34; /* RBP is used for frame pointer, RSP is stack pointer */ &#34;mov $0x8182838485868788, %%r8\\n\\t&#34; &#34;mov $0x9192939495969798, %%r9\\n\\t&#34; &#34;mov $0xa1a2a3a4a5a6a7a8, %%r10\\n\\t&#34; &#34;mov $0xb1b2b3b4b5b6b7b8, %%r11\\n\\t&#34; &#34;mov $0xc1c2c3c4c5c6c7c8, %%r12\\n\\t&#34; &#34;mov $0xd1d2d3d4d5d6d7d8, %%r13\\n\\t&#34; &#34;mov $0xe1e2e3e4e5e6e7e8, %%r14\\n\\t&#34; &#34;mov $0xf1f2f3f4f5f6f7f8, %%r15\\n\\t&#34; /* dump GPRs */ &#34;mov %%rax, %[rax]\\n\\t&#34; &#34;mov %%rbx, %[rbx]\\n\\t&#34; &#34;mov %%rcx, %[rcx]\\n\\t&#34; &#34;mov %%rdx, %[rdx]\\n\\t&#34; &#34;mov %%rsi, %[rsi]\\n\\t&#34; &#34;mov %%rdi, %[rdi]\\n\\t&#34; &#34;mov %%rbp, %[rbp]\\n\\t&#34; &#34;mov %%rsp, %[rsp]\\n\\t&#34; &#34;mov %%r8, %[r8]\\n\\t&#34; &#34;mov %%r9, %[r9]\\n\\t&#34; &#34;mov %%r10, %[r10]\\n\\t&#34; &#34;mov %%r11, %[r11]\\n\\t&#34; &#34;mov %%r12, %[r12]\\n\\t&#34; &#34;mov %%r13, %[r13]\\n\\t&#34; &#34;mov %%r14, %[r14]\\n\\t&#34; &#34;mov %%r15, %[r15]\\n\\t&#34; /* dump RIP */ &#34;lea (%%rip), %%rbx\\n\\t&#34; &#34;mov %%rbx, %[rip]\\n\\t&#34; &#34;mov %[rbx], %%rbx\\n\\t&#34; /* dump segment registers */ &#34;mov %%cs, %[cs]\\n\\t&#34; &#34;mov %%ds, %[ds]\\n\\t&#34; &#34;mov %%es, %[es]\\n\\t&#34; &#34;mov %%fs, %[fs]\\n\\t&#34; &#34;mov %%gs, %[gs]\\n\\t&#34; &#34;mov %%ss, %[ss]\\n\\t&#34; /* dump RFLAGS */ &#34;pushfq\\n\\t&#34; &#34;popq %[rflags]\\n\\t&#34; : [rax] &#34;=m&#34;(gpr[R_RAX]), [rbx] &#34;=m&#34;(gpr[R_RBX]), [rcx] &#34;=m&#34;(gpr[R_RCX]), [rdx] &#34;=m&#34;(gpr[R_RDX]), [rsi] &#34;=m&#34;(gpr[R_RSI]), [rdi] &#34;=m&#34;(gpr[R_RDI]), [rbp] &#34;=m&#34;(gpr[R_RBP]), [rsp] &#34;=m&#34;(gpr[R_RSP]), [r8] &#34;=m&#34;(gpr[ R_R8]), [ r9] &#34;=m&#34;(gpr[ R_R9]), [r10] &#34;=m&#34;(gpr[R_R10]), [r11] &#34;=m&#34;(gpr[R_R11]), [r12] &#34;=m&#34;(gpr[R_R12]), [r13] &#34;=m&#34;(gpr[R_R13]), [r14] &#34;=m&#34;(gpr[R_R14]), [r15] &#34;=m&#34;(gpr[R_R15]), [rip] &#34;=m&#34;(gpr[R_RIP]), [rflags] &#34;=m&#34;(gpr[R_RFLAGS]), [cs] &#34;=m&#34;(seg[S_CS]), [ds] &#34;=m&#34;(seg[S_DS]), [es] &#34;=m&#34;(seg[S_ES]), [fs] &#34;=m&#34;(seg[S_FS]), [gs] &#34;=m&#34;(seg[S_GS]), [ss] &#34;=m&#34;(seg[S_SS]) : : &#34;%rax&#34;, &#34;%rbx&#34;, &#34;%rcx&#34;, &#34;%rdx&#34;, &#34;%rsi&#34;, &#34;%rdi&#34;, &#34;%r8&#34;, &#34;%r9&#34;, &#34;%r10&#34;, &#34;%r11&#34;, &#34;%r12&#34;, &#34;%r13&#34;, &#34;%r14&#34;, &#34;%r15&#34;, &#34;memory&#34; ); printf(&#34;rax = 0x%016lx\\n&#34;, gpr[R_RAX]); printf(&#34;rbx = 0x%016lx\\n&#34;, gpr[R_RBX]); printf(&#34;rcx = 0x%016lx\\n&#34;, gpr[R_RCX]); printf(&#34;rdx = 0x%016lx\\n&#34;, gpr[R_RDX]); printf(&#34;rsi = 0x%016lx\\n&#34;, gpr[R_RSI]); printf(&#34;rdi = 0x%016lx\\n&#34;, gpr[R_RDI]); printf(&#34;rbp = 0x%016lx\\n&#34;, gpr[R_RBP]); printf(&#34;rsp = 0x%016lx\\n&#34;, gpr[R_RSP]); printf(&#34; r8 = 0x%016lx\\n&#34;, gpr[R_R8]); printf(&#34; r9 = 0x%016lx\\n&#34;, gpr[R_R9]); printf(&#34;r10 = 0x%016lx\\n&#34;, gpr[R_R10]); printf(&#34;r11 = 0x%016lx\\n&#34;, gpr[R_R11]); printf(&#34;r12 = 0x%016lx\\n&#34;, gpr[R_R12]); printf(&#34;r13 = 0x%016lx\\n&#34;, gpr[R_R13]); printf(&#34;r14 = 0x%016lx\\n&#34;, gpr[R_R14]); printf(&#34;r15 = 0x%016lx\\n&#34;, gpr[R_R15]); printf(&#34;rip = 0x%016lx\\n&#34;, gpr[R_RIP]); printf(&#34;cs = 0x%04x\\n&#34;, seg[S_CS]); printf(&#34;ds = 0x%04x\\n&#34;, seg[S_DS]); printf(&#34;es = 0x%04x\\n&#34;, seg[S_ES]); printf(&#34;fs = 0x%04x\\n&#34;, seg[S_FS]); printf(&#34;gs = 0x%04x\\n&#34;, seg[S_GS]); printf(&#34;ss = 0x%04x\\n&#34;, seg[S_SS]); printf(&#34;rflags = 0x%016lx\\n&#34;, gpr[R_RFLAGS]); return 0;}\n  Both FreeBSD and NetBSD use the  PT_GETREGS request to get the valuesof GPRs from the program, and  PT_SETREGS to update them.The requests take a pointer to  struct reg as an argument.\n On FreeBSD, both i386 and amd64 have the individual registers listedas fields of the struct. On NetBSD, i386 uses a regular structure,while amd64 puts all values into an array whose indices are definedin the headers as constants.\n The listing below compares the structures used on FreeBSD and NetBSD.Note that NetBSD/amd64 uses a special macro. For example, greg(rdi RDI, 0) defines  _REG_RDI.\n  /* FreeBSD/i386 */ /* NetBSD/i386 */struct __reg32 { struct reg { __uint32_t r_fs; int r_eax; __uint32_t r_es; int r_ecx; __uint32_t r_ds; int r_edx; __uint32_t r_edi; int r_ebx; __uint32_t r_esi; int r_esp; __uint32_t r_ebp; int r_ebp; __uint32_t r_isp; int r_esi; __uint32_t r_ebx; int r_edi; __uint32_t r_edx; int r_eip; __uint32_t r_ecx; int r_eflags; __uint32_t r_eax; int r_cs; __uint32_t r_trapno; int r_ss; __uint32_t r_err; int r_ds; __uint32_t r_eip; int r_es; __uint32_t r_cs; int r_fs; __uint32_t r_eflags; int r_gs; __uint32_t r_esp; }; __uint32_t r_ss; __uint32_t r_gs;};/* FreeBSD/amd64 */ /* NetBSD/amd64 */struct __reg64 { #define _FRAME_REG(greg, freg) \\ __int64_t r_r15; greg(rdi, RDI, 0) \\ __int64_t r_r14; greg(rsi, RSI, 1) \\ __int64_t r_r13; greg(rdx, RDX, 2) \\ __int64_t r_r12; greg(r10, R10, 6) \\ __int64_t r_r11; greg(r8, R8, 4) \\ __int64_t r_r10; greg(r9, R9, 5) \\ __int64_t r_r9; /* ... */ \\ __int64_t r_r8; greg(rcx, RCX, 3) \\ __int64_t r_rdi; greg(r11, R11, 7) \\ __int64_t r_rsi; greg(r12, R12, 8) \\ __int64_t r_rbp; greg(r13, R13, 9) \\ __int64_t r_rbx; greg(r14, R14, 10) \\ __int64_t r_rdx; greg(r15, R15, 11) \\ __int64_t r_rcx; greg(rbp, RBP, 12) \\ __int64_t r_rax; greg(rbx, RBX, 13) \\ __uint32_t r_trapno; greg(rax, RAX, 14) \\ __uint16_t r_fs; greg(gs, GS, 15) \\ __uint16_t r_gs; greg(fs, FS, 16) \\ __uint32_t r_err; greg(es, ES, 17) \\ __uint16_t r_es; greg(ds, DS, 18) \\ __uint16_t r_ds; greg(trapno, TRAPNO, 19) \\ __int64_t r_rip; greg(err, ERR, 20) \\ __int64_t r_cs; greg(rip, RIP, 21) \\ __int64_t r_rflags; greg(cs, CS, 22) \\ __int64_t r_rsp; greg(rflags, RFLAGS, 23) \\ __int64_t r_ss; greg(rsp, RSP, 24) \\}; greg(ss, SS, 25) struct reg { long regs[_NGREG]; };\n   Floating-Point Registers is the term used to indicate registers whoseprimary purpose was handling floating-point numbers. The traditionalseparation between General Purpose Registers and Floating-PointRegisters is reflected in the  ptrace(2) CPU-specific calls thatallow setting or getting either the GPR or FPU registers in a singleoperation. Some CPU architectures include additional sets of registers,e.g. x86 exposes the Debug Registers separately.\n There are a few architectures that do not use the Floating Point Unitsetters and getters, as they do not feature a hardware-assisted FPU(this is often the case in low-power embedded devices).\n The earliest FPRs on x86 were the x87 registers, including 8 80-bitextended precision number registers ST( i) and a few control registers.\n The contents of these registers can be dumped using  FSAVE instruction,and restored using FRSTOR instruction. The instruction takes a pointerto a 108-byte memory buffer, stores the current values of controlregisters and ST( i) registers and resets the FPU.\n The  FSAVE mnemonic implicitly inserts an additional  FWAIT instructionthat ensures that the FPU completes handling the previous operation.If you wish to capture the FPU state in the middle of exception handling, FNSAVE should be used instead as it captures the immediate FPU statewithout waiting.\n The 64-bit MM i registers introduced as part of the MMX instruction setoverlap with ST( i) registers. As a result, no new dumping instructionis necessary, and if the MM i registers are used, they are dumpedas part of ST( i) in  FSAVE.\n  The SSE register set introduced 8 new 128-bit registers XMM iand a control MXCSR register. Along with them, a new dumping function FXSAVE and its restoring counterpart FXRSTOR were introduced. They usea 512-byte memory buffer aligned on a 16-byte boundary, with a differentlayout than  FSAVE.\n The obvious difference between  FSAVE and  FXSAVE is that the latter savesSSE registers. On i386, the registers XMM0..XMM7 are stored,and the remaining part of the buffer is left reserved/unused. On amd64,a major part of the reserved space is used to store XMM8..XMM15.\n The other difference that is frequently missed is that the FTW statusregister is stored by  FSAVE in its entire form, while by  FXSAVE in itsabridged form. The former indicates what kind of value every ST( i)register contains \u2014 empty, zero, normalized number and special.The latter only indicates whether the register is empty or not.\n To access the registers introduced by further processor extensionssuch as AVX,  XSAVE instruction needs to be used. Unlike thesepreviously described here, it has been designed to be extensible. XSAVE is a wide topic, and it will be the subject of the second partof this article.\n  The traditional variant of  FXSAVE/ FXRSTOR instruction stores the FIP(instruction causing an exception) and FDP (its operand) pointersas pairs of 16-bit segment registers (FCS, FDS, respectively) and 32-bitaddress registers (FIP, FDP). This is a problem for amd64 programssince the original 64-bit pointer is truncated to 32 bits.\n To resolve this, the additional mnemonics  FXSAVE64/ FXRSTOR64are provided. They prepend a  REX.W=1 prefix to the respectiveinstruction, changing the FIP and FDP fields to use a 64-bit pointerinstead. Their drawback is that the segment is no longer reported;however, newer amd64 processors no longer support FCS/FDS anyway.", "posttime": "2020-10-24 07:31:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "work,\u5bc4\u5b58\u5668", "title": "\u8c03\u8bd5\u5668\u5de5\u4f5c\u539f\u7406\uff1a\u83b7\u53d6\u548c\u8bbe\u7f6ex86\u5bc4\u5b58\u5668", "title_en": "How Debuggers Work: Getting and Setting x86 Registers", "transed": 1, "url": "https://www.moritz.systems/blog/how-debuggers-work-getting-and-setting-x86-registers-part-1/", "via": "", "real_tags": ["work", "\u5bc4\u5b58\u5668"]}, {"category": "", "categoryclass": "", "imagename": "d6487bf5182b4a8e612c9986e0a44cf2.jpg", "infoid": 1030826, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u5343\u5e74\u6765\uff0c\u4eba\u7c7b\u4e00\u76f4\u5728\u5229\u7528\u81ea\u7136\u7684\u529b\u91cf\u6765\u63d0\u4f9b\u80fd\u91cf\uff0c\u63a8\u52a8\u6211\u4eec\u7684\u6587\u660e\u5411\u524d\u53d1\u5c55\u3002\u901a\u8fc7\u5229\u7528\u706b\uff0c\u6211\u4eec\u83b7\u5f97\u4e86\u70f9\u8c03\u98df\u7269\u3001\u63d0\u4f9b\u6e29\u6696\u548c\u5e87\u62a4\u6240\u7684\u80fd\u529b\uff0c\u5e76\u4fdd\u62a4\u6211\u4eec\u514d\u53d7\u6355\u98df\u8005\u7684\u4f24\u5bb3\u3002\u540e\u6765\uff0c\u6211\u4eec\u9a6f\u670d\u4e86\u5404\u79cd\u5404\u6837\u7684\u52a8\u7269\uff0c\u7528\u5b83\u4eec\u7684\u52b3\u52a8\u6765\u5b8c\u6210\u5bf9\u4eba\u7c7b\u6765\u8bf4\u8fc7\u4e8e\u7e41\u91cd\u6216\u6548\u7387\u4f4e\u4e0b\u7684\u4efb\u52a1\u3002\u6700\u7ec8\uff0c\u81ea\u7136\u80fd\u6e90\uff0c\u5982\u98ce\uff0c\u88ab\u5229\u7528\u901a\u8fc7\u98ce\u8f66\u6765\u8f6c\u52a8\u78e8\u77f3\uff0c\u6839\u672c\u4e0d\u9700\u8981\u4efb\u4f55\u4eba\u7684\u6295\u5165\u5c31\u53ef\u4ee5\u7814\u78e8\u8c37\u7269\u3002\n\u5f53\u6211\u4eec\u5f00\u59cb\u4f7f\u7528\u81ea\u7136\u8d44\u6e90-\u98ce\u8f66\u3001\u84b8\u6c7d\u4ea7\u751f\u7684\u71c3\u70e7\u8fc7\u7a0b\uff0c\u751a\u81f3\u662f\u6d41\u52a8\u7684\u6c34-\u6765\u63a8\u52a8\u6da1\u8f6e\u673a\u3001\u53d1\u7535\u548c\u63d0\u4f9b\u7535\u529b\u65f6\uff0c\u53d1\u751f\u4e86\u5de8\u5927\u7684\u53d8\u5316\u3002\u4eca\u5929\uff0c\u4e16\u754c\u7684\u80fd\u6e90\u9700\u6c42\u4ecd\u7136\u4e3b\u8981\u901a\u8fc7\u8fd9\u4e9b\u76f8\u540c\u7684\u8fc7\u7a0b\u5f97\u5230\u6ee1\u8db3\uff0c\u7164\u70ad\u3001\u77f3\u6cb9\u548c\u5929\u7136\u6c14\u7b49\u4e0d\u53ef\u518d\u751f\u7684\u5316\u77f3\u71c3\u6599\u63d0\u4f9b\u4e86\u5730\u7403\u80fd\u6e90\u4f7f\u7528\u7684\u4e3b\u8981\u90e8\u5206\u3002\u6211\u4eec\u6b63\u5728\u7528\u94c1\u5668\u65f6\u4ee3\u51fa\u73b0\u7684\u540c\u6837\u7684\u5316\u77f3\u71c3\u6599\u4e3a\u592a\u7a7a\u65f6\u4ee3\u7684\u6587\u660e\u63d0\u4f9b\u52a8\u529b\u3002\u73b0\u5728\uff0c\u4e16\u754c\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9700\u8981\u6838\u80fd\uff0c\u7136\u800c\uff0c\u4e3b\u5bfc\u6211\u4eec\u653f\u7b56\u7684\u662f\u6050\u60e7\uff0c\u800c\u4e0d\u662f\u4e8b\u5b9e\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u5e94\u8be5\u62e5\u62b1\u5b83\u7684\u79d1\u5b66\u3002\n\u4f20\u7edf\u7684\u3001\u4ee5\u5316\u5b66\u4e3a\u57fa\u7840\u7684\u53d1\u7535\u5382\u7684\u5de5\u4f5c\u65b9\u5f0f\u7b80\u5355\u660e\u4e86\u3002\u67d0\u79cd\u71c3\u6599\u6e90\u88ab\u71c3\u70e7\uff0c\u91ca\u653e\u51fa\u80fd\u91cf\uff0c\u52a0\u70ed\u5e76\u6cb8\u817e\u6c34\uff0c\u4ea7\u751f\u84b8\u6c7d\u3002\u8fd9\u4e9b\u84b8\u6c7d\u63a8\u52a8\u6da1\u8f6e\u673a\u53d1\u7535\uff0c\u7528\u4e8e\u4e3a\u4e0b\u6e38\u9700\u8981\u7684\u4efb\u4f55\u76ee\u7684\u63d0\u4f9b\u7535\u529b\u3002\n\u4e0d\u7ba1\u6211\u4eec\u662f\u5426\u627f\u8ba4\uff0c\u6211\u4eec\u9762\u4e34\u7684\u6700\u5927\u95ee\u9898\u662f\uff0c\u8fd9\u79cd\u4ea7\u751f\u5927\u91cf\u80fd\u6e90\u7684\u65b9\u5f0f\u9020\u6210\u4e86\u5de8\u5927\u7684\u73af\u5883\u95ee\u9898\u3002\u867d\u7136\u5927\u91cf\u5f00\u91c7\u8fd9\u4e9b\u539f\u6750\u6599\u7684\u5f71\u54cd\u65e0\u7591\u662f\u5de8\u5927\u7684\uff0c\u4f46\u71c3\u70e7\u8fd9\u4e9b\u71c3\u6599\u6765\u6e90\u7684\u6700\u7ec8\u4ea7\u54c1\u5df2\u7ecf\u4ece\u6839\u672c\u4e0a\u663e\u8457\u6539\u53d8\u4e86\u5730\u7403\u5927\u6c14\u548c\u6d77\u6d0b\u7684\u5316\u5b66\u6210\u5206\uff0c\u5bfc\u81f4\u5168\u7403\u53d8\u6696\u3001\u6d77\u6d0b\u9178\u5316\u7b49\u4e0e\u6c14\u5019\u6709\u5173\u7684\u5f71\u54cd\u3002\n\u8fd9\u79cd\u60c5\u51b5\u5df2\u7ecf\u53d1\u751f\u7684\u8bc1\u636e\u662f\u538b\u5012\u6027\u7684\uff0c\u800c\u4e14\u8fd9\u662f\u4e00\u4e2a\u6211\u4eec\u5728\u5730\u7403\u4e0a\u6bcf\u4e00\u5929\u90fd\u5728\u7ee7\u7eed\u6076\u5316\u7684\u95ee\u9898\u3002\u968f\u7740\u66f4\u591a\u7684\u78b3\u6c22\u5316\u5408\u7269\u5316\u77f3\u71c3\u6599\u8fdb\u884c\u71c3\u70e7\uff0c\u5b83\u4eec\u589e\u52a0\u4e86\u5730\u7403\u5927\u6c14\u4e2d\u4e8c\u6c27\u5316\u78b3(CO2)\u7684\u6d53\u5ea6\uff0c\u4e8c\u6c27\u5316\u78b3\u7684\u6d53\u5ea6\u5df2\u7ecf\u4ece\u5de5\u4e1a\u5316\u524d\u7684\u7ea6270ppm\u4e0a\u5347\u5230\u73b0\u4ee3\u7684\u7ea6410ppm\uff1a\u5728\u4e0d\u5230300\u5e74\u7684\u65f6\u95f4\u91cc\u589e\u52a0\u4e8650%\u591a\u4e00\u70b9\u3002\n\u4e8c\u6c27\u5316\u78b3\u7684\u589e\u52a0\u4e5f\u5ef6\u4f38\u5230\u4e86\u6d77\u6d0b\uff0c\u5728\u90a3\u91cc\u4e8c\u6c27\u5316\u78b3\u4e0e\u6c34\u7ed3\u5408\u751f\u6210\u4e86\u78b3\u9178\uff0c\u5728\u5168\u7403\u8303\u56f4\u5185\u6539\u53d8\u4e86\u6211\u4eec\u6d77\u6d0b\u7684pH\u503c(\u9178\u5ea6\u7684\u8861\u91cf\u6807\u51c6)\u3002\n\u4f46\u6700\u7d27\u8feb\u7684\u95ee\u9898\u662f\u7531\u8fd9\u4e9b\u989d\u5916\u7684\u4e8c\u6c27\u5316\u78b3\u5f15\u8d77\u7684\u5168\u7403\u53d8\u6696\u3002\u81ea\u4ece\u6211\u4eec\u57281880\u5e74\u5f00\u59cb\u7cbe\u786e\u6d4b\u91cf\u4ee5\u6765\uff0c\u6211\u4eec\u7684\u5168\u7403\u5e73\u5747\u6c14\u6e29\u5df2\u7ecf\u4e0a\u5347\u4e860.98\u00b0C(1.76\u00b0F)\uff0c\u800c\u4e14\u4e0a\u5347\u901f\u5ea6\u8fd8\u5728\u52a0\u5feb\uff0c\u5728\u8fc7\u53bb\u768439\u5e74\u91cc\uff0c\u6bcf\u5341\u5e74\u589e\u52a0\u4e860.18\u00b0C(0.32\u00b0F)\u3002\n\u5c3d\u7ba1\u5df2\u7ecf\u63d0\u51fa\u4e86\u8bb8\u591a\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u5f88\u660e\u663e\uff0c\u4efb\u4f55\u53ef\u6301\u7eed\u7684\u957f\u671f\u89e3\u51b3\u65b9\u6848\u90fd\u5c06\u5305\u62ec\u4e00\u4e2a\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff1a\u5411\u4e0d\u4f1a\u5bfc\u81f4\u989d\u5916\u4e8c\u6c27\u5316\u78b3\u6392\u653e\u7684\u80fd\u6e90\u8fc7\u6e21\u3002\u867d\u7136\u5927\u591a\u6570\u63d0\u51fa\u7684\u60f3\u6cd5-\u6bd4\u5982\u5047\u60f3\u7684\u7eff\u8272\u65b0\u653f-\u96c6\u4e2d\u5728\u592a\u9633\u80fd\u548c\u98ce\u80fd\u7b49\u53ef\u518d\u751f\u80fd\u6e90\u4e0a\uff0c\u4f46\u8fd8\u6709\u53e6\u4e00\u4e2a\u9009\u62e9\u6211\u4eec\u5e94\u8be5\u8ba4\u771f\u91cd\u65b0\u8003\u8651\uff1a\u6838\u88c2\u53d8\u53d1\u7535\u3002\n\u662f\u7684\uff0c\u5077\u5de5\u51cf\u6599\u7684\u88c2\u53d8\u53d1\u7535\u5382\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0e\u8f90\u5c04\u76f8\u5173\u7684\u707e\u96be\uff0c\u5c31\u50cf1986\u5e74\u81ed\u540d\u662d\u8457\u7684\u5207\u5c14\u8bfa\u8d1d\u5229\u4e8b\u6545\u4e00\u6837\uff0c\u8fd9\u662f\u4e8b\u5b9e\u3002\u7194\u6bc1\u662f\u4e00\u79cd\u98ce\u9669\uff0c1979\u5e74\u53d1\u751f\u5728\u4e09\u91cc\u5c9b\u3002\u800c\u4e14\uff0c\u7531\u4e8e\u81ea\u7136\u707e\u5bb3\uff0c\u6bd4\u59822011\u5e74\u53d1\u751f\u5728\u798f\u5c9b\u7684\u4e8b\u6545\uff0c\u65ad\u5c42\u7ebf\u4e0a\u7684\u53cd\u5e94\u5806\u5982\u679c\u63a7\u5236\u4e0d\u597d\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u653e\u5c04\u6027\u5e9f\u7269\u6c61\u67d3\u9644\u8fd1\u7684\u73af\u5883\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u53d1\u751f\u4e86\u8fd9\u4e9b\u4e8b\u4ef6\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u6838\u80fd\u4ecd\u7136\u6bd4\u4eba\u7c7b\u5386\u53f2\u4e0a\u4f7f\u7528\u7684\u4efb\u4f55\u5176\u4ed6\u5927\u89c4\u6a21\u80fd\u6e90\u90fd\u66f4\u5b89\u5168\u3002\n\u7b2c\u4e00\u4e2a\u7528\u4e8e\u5927\u89c4\u6a21\u53d1\u7535\u7684\u6838\u53cd\u5e94\u5806\u572820\u4e16\u7eaa50\u5e74\u4ee3\u4e2d\u671f\u4e0a\u7ebf\uff0c\u5728\u6b64\u671f\u95f4\uff0c33\u4e2a\u56fd\u5bb6\u603b\u5171\u670917000\u591a\u4e2a\u53cd\u5e94\u5806\u5e74(\u4e00\u4e2a\u6838\u53cd\u5e94\u5806\u8fd0\u884c\u4e00\u5e74\u76f8\u5f53\u4e8e\u4e00\u4e2a\u53cd\u5e94\u5806\u5e74)\u3002\u4e0a\u8ff0\u4e09\u8d77\u4e8b\u4ef6\u662f\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u552f\u4e00\u88ab\u8bb0\u5f55\u5728\u6848\u7684\u4e0d\u826f\u4e8b\u4ef6\u3002\u7136\u800c\uff0c\u5f53\u4eba\u4eec\u60f3\u5230\u6838\u80fd\u65f6\uff0c\u4ed6\u4eec\u901a\u5e38\u4f1a\u60f3\u5230\u8fd9\u4e9b\u707e\u96be-\u4ee5\u53ca\u6838\u6218\u4e89\u7684\u5371\u9669\u3001\u653e\u5c04\u6027\u5e9f\u7269\u7684\u5371\u5bb3\u548c\u539f\u5b50\u5f39\u7684\u7834\u574f\u529b-\u800c\u4e0d\u662f\u6838\u80fd\u5b9e\u9645\u4e0a\u662f\u5b89\u5168\u3001\u9ad8\u6548\u548c\u7eff\u8272\u7684\u80fd\u6e90\u3002\n\u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6838\u80fd\u80cc\u540e\u7684\u79d1\u5b66\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e0d\u5e94\u8be5\u50cf\u5bb3\u6015\u6838\u5f39\u6216\u6838\u6218\u4e89\u90a3\u6837\u5bb3\u6015\u6838\u80fd\u3002\u76f8\u53cd\uff0c\u6709\u4e00\u4e2a\u4f17\u6240\u5468\u77e5\u7684\u8fc7\u7a0b\u5728\u539f\u5b50\u5185\u90e8\u8fdb\u884c\uff0c\u53ef\u4ee5\u4ea7\u751f\u5927\u91cf\u7684\u7535\u529b\uff0c\u8db3\u4ee5\u6ee1\u8db3\u6211\u4eec\u51e0\u4e2a\u4e16\u7eaa\u7684\u5168\u7403\u80fd\u6e90\u9700\u6c42\uff0c\u800c\u4e0d\u4f1a\u4ea7\u751f\u5316\u77f3\u71c3\u6599\u7684\u6c61\u67d3\u526f\u4f5c\u7528\u3002\n\u6838\u80fd\u80cc\u540e\u7684\u7269\u7406\u539f\u7406\u3002\u5728\u4f20\u7edf\u7684(\u5316\u5b66\u57fa)\u71c3\u6599\u4e2d\uff0c\u5404\u79cd\u539f\u5b50\u7684\u7535\u5b50\u6784\u578b\u4e4b\u95f4\u53d1\u751f\u53cd\u5e94\uff0c\u91ca\u653e\u51fa\u9ad8\u8fbe\u71c3\u6599\u8d28\u91cf\u76840.0001%\u7684\u80fd\u91cf\u3002\u5728\u4ee5\u6838\u4e3a\u57fa\u7840\u7684\u53cd\u5e94\u4e2d\uff0c\u5206\u88c2\u7684\u662f\u539f\u5b50\u6838\u672c\u8eab\uff0c\u91ca\u653e\u7684\u80fd\u91cf\u5927\u7ea6\u662f\u540c\u7b49\u71c3\u6599\u76841000\u500d\u3002\u7279\u522b\u662f\uff0c\u53ef\u88c2\u53d8\u6750\u6599(\u5982\u94c0-235)\u53ea\u9700\u8981\u4e00\u79cd\u7b80\u5355\u7684\u6210\u5206--\u8ba9\u539f\u5b50\u6838\u5438\u6536\u7684\u4e2d\u5b50--\u5c31\u80fd\u5f15\u53d1\u88c2\u53d8\u53cd\u5e94\u3002\n\u867d\u7136\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u71c3\u6599\uff0c\u4f46\u5173\u4e8e\u6838\u80fd\u7684\u597d\u6d88\u606f\u662f\u5b83\u662f\u81ea\u6211\u7ef4\u6301\u7684\uff1a\u6bcf\u4e2a\u5438\u6536\u4e2d\u5b50\u7684U-235\u539f\u5b50\u6838\u5728\u5206\u88c2\u65f6\u4f9d\u6b21\u91ca\u653e\u51fa\u4e09\u4e2a\u65b0\u7684\u4e2d\u5b50\uff0c\u91ca\u653e\u80fd\u91cf\u5e76\u7ef4\u6301\u53cd\u5e94\u3002\u53ea\u8981\u8db3\u591f\u591a\u7684\u4e2d\u5b50\u7ee7\u7eed\u4e0e\u88c2\u53d8\u7269\u8d28\u76f8\u4e92\u4f5c\u7528\uff0c\u53cd\u5e94\u5c31\u4f1a\u53d1\u751f\u3002\u8fd9\u4f1a\u91ca\u653e\u70ed\u91cf\uff0c\u7528\u6765\u716e\u6cb8\u6c34\u3001\u4ea7\u751f\u84b8\u6c7d\u548c\u8f6c\u52a8\u6da1\u8f6e\u673a\uff0c\u5c31\u50cf\u5316\u5b66\u57fa\u53cd\u5e94\u5806\u4e00\u6837\u3002\u53ea\u662f\uff0c\u6709\u4e86\u6838\u80fd\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u4e8c\u6c27\u5316\u78b3\u5e9f\u7269\u3002\n\u6838\u80fd\u7684\u80fd\u91cf\u8f93\u51fa\u662f\u5b8c\u5168\u53ef\u63a7\u7684\u3002\u98ce\u80fd\u548c\u592a\u9633\u80fd\u7b49\u53ef\u518d\u751f\u80fd\u6e90\u5f15\u53d1\u7684\u4e00\u5927\u62c5\u5fe7\u662f\u5b83\u4eec\u65e0\u6cd5\u63a7\u5236\u3002\u5982\u679c\u4e0d\u522e\u98ce\uff0c\u4f60\u5c31\u4e0d\u4f1a\u4ea7\u751f\u98ce\u529b\uff1b\u5982\u679c\u4e0d\u662f\u9633\u5149\u660e\u5a9a(\u6216\u8005\u662f\u591c\u665a)\uff0c\u4f60\u7684\u592a\u9633\u80fd\u7535\u6c60\u677f\u7684\u4ea7\u91cf\u5c31\u4f1a\u5927\u5e45\u4e0b\u964d\u3002\u4f46\u662f\u6838\u8f93\u51fa\u7684\u901f\u5ea6\u53ef\u4ee5\u76f4\u63a5\u63a7\u5236\uff0c\u53ea\u9700\u63a7\u5236\u4e09\u4e2a\u56e0\u7d20\uff1a\u63a7\u5236\u68d2\u3001\u6e29\u5ea6\u548c\u4ecb\u8d28(\u901a\u5e38\u662f\u6c34)\u3002\n\u8bb0\u4f4f\u5f15\u8d77\u6838\u53cd\u5e94\u7684\u539f\u56e0\uff1a\u88c2\u53d8\u6750\u6599\u5438\u6536\u7684\u4e2d\u5b50\u7684\u53ef\u7528\u6027\u3002\u5982\u679c\u4f60\u653e\u5165\u66f4\u591a(\u6216\u66f4\u5c11)\u7684\u63a7\u5236\u68d2\uff0c\u4f60\u5c31\u4f1a\u5438\u6536\u66f4\u591a(\u6216\u66f4\u5c11)\u7684\u53ef\u7528\u4e2d\u5b50\uff0c\u4ece\u800c\u6539\u53d8\u4e0e\u88c2\u53d8\u6750\u6599\u76f8\u4e92\u4f5c\u7528\u7684\u7a0b\u5ea6\u3002\u5982\u679c\u4f60\u5347\u9ad8\u6e29\u5ea6\uff0c\u4f60\u5c31\u4f1a\u589e\u52a0\u53cd\u5e94\u901f\u7387\uff1b\u5982\u679c\u4f60\u964d\u4f4e\u6e29\u5ea6\uff0c\u53cd\u5e94\u901f\u7387\u5c31\u4f1a\u4e0b\u964d\u3002\u800c\u6c34\u7b49\u4ecb\u8d28\u7684\u5b58\u5728\u4e5f\u53ef\u4ee5\u8d77\u5230\u4e2d\u5b50\u5438\u6536\u5242\u7684\u4f5c\u7528\uff0c\u4f46\u8fd9\u662f\u6709\u4ee3\u4ef7\u7684\uff1a\u6700\u7ec8\u4f1a\u4ea7\u751f\u6c1a\u6c34\uff0c\u800c\u6c1a\u6c34\u672c\u8eab\u5728\u51e0\u5341\u5e74\u7684\u65f6\u95f4\u91cc\u90fd\u662f\u653e\u5c04\u6027\u7684\u3002\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u4ecd\u7136\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u80dc\u5229\uff1a\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6216\u591a\u6216\u5c11\u5730\u53d1\u7535\uff0c\u8fbe\u5230\u5de5\u5382\u7684\u6700\u5927\u5b89\u5168\u5bb9\u91cf\u3002\n\u8fd9\u91cc\u6ca1\u6709\u6838\u5f39\u7684\u98ce\u9669\uff0c\u800c\u4e14\u5e9f\u7269\u662f\u975e\u5e38\u5bb9\u6613\u7ba1\u7406\u7684\u3002\u53ef\u4ee5\u7406\u89e3\uff0c\u5f88\u591a\u4eba\u62c5\u5fc3\u6838\u7206\u70b8\u7684\u98ce\u9669\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u5f53\u6d89\u53ca\u5230\u6838\u7535\u7ad9\u65f6\uff0c\u6838\u7206\u70b8\u7684\u98ce\u9669\u7edd\u5bf9\u662f\u96f6\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u6309\u7167\u56fd\u9645\u539f\u5b50\u80fd\u673a\u6784\u7684\u8981\u6c42\uff0c\u6bcf\u4e2a\u6838\u53cd\u5e94\u5806\u5185\u4f7f\u7528\u7684\u71c3\u6599\u90fd\u6ca1\u6709\u8db3\u591f\u7684\u6d53\u7f29\u7269\uff0c\u751a\u81f3\u4e0d\u8db3\u4ee5\u4f7f\u5931\u63a7\u7684\u8fde\u9501\u53cd\u5e94\u6210\u4e3a\u53ef\u80fd\u3002\u8fd9\u79cd\u6750\u6599\u4e0d\u80fd\u5236\u9020\u6838\u7206\u70b8\u3002\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u4f1a\u4ea7\u751f\u6838\u5e9f\u6599\u3002\u5176\u4e2d\u4e00\u4e9b\u5c06\u7528\u4e8e\u518d\u5229\u7528\uff0c\u5982\u7528\u4e8e\u6df1\u7a7a\u4efb\u52a1\u7684\u70ed\u7535\u52a0\u70ed\u548c\u53d1\u7535\u7684\u949a\uff0c\u800c\u5176\u4ed6\u6750\u6599(\u5982\u6c1a\u6c34)\u5c06\u9700\u8981\u50a8\u5b58\u548c\u7ba1\u7406\u3002\u6839\u636e\u4e16\u754c\u6838\u534f\u4f1a(World Nuclear Association)\u7684\u6570\u636e\uff1a\n\u8fd9\u901a\u5e38\u9700\u8981\u5927\u7ea65\u5e74\u7684\u6c34\u4e0b\u50a8\u5b58\uff0c\u7136\u540e\u662f\u5927\u7ea645\u5e74\u7684\u5e72\u71e5\u50a8\u5b58\uff0c\n\u867d\u7136\u5728\u6838\u80fd\u95ee\u9898\u4e0a\uff0c\u6211\u4eec\u4ecd\u7136\u8981\u514b\u670d\u201c\u4e0d\u5728\u6211\u5bb6\u540e\u9662\u201d(NIMBY)\u7684\u5fc3\u6001\uff0c\u4f46\u8fd9\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u79d1\u5b66\u89e3\u51b3\u7684\u95ee\u9898\u3002\n\u6211\u4eec\u53ef\u4ee5\u572820\u5e74\u5185\u5b8c\u5168\u8fc7\u6e21\u5230\u6838\u80fd\u3002\u5728\u5168\u56fd\u8303\u56f4\u5185(\u6216\u5168\u7403)\u5efa\u9020\u4e00\u5957\u65b0\u7684\u53cd\u5e94\u5806\u6765\u4e3a\u4e16\u754c\u4f9b\u7535\u5c06\u9700\u8981\u6301\u7eed\u7684\u6295\u8d44\u3002\u65b0\u7684\u53d1\u7535\u5382\u3001\u53cd\u5e94\u5806\u3001\u51b7\u5374\u5854\u7b49\u90fd\u9700\u8981\u5efa\u8bbe\u3002\u9700\u8981\u5f00\u91c7\u3001\u63d0\u70bc\u548c\u9002\u5f53\u63d0\u70bc\u8db3\u591f\u6570\u91cf\u7684\u6838\u71c3\u6599\u3002\u5c06\u9700\u8981\u6784\u5efa\u4f9b\u5e94\u94fe\uff0c\u5e9f\u7269\u7ba1\u7406\u5c06\u662f\u4e00\u4e2a\u6301\u7eed\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u3002\u9664\u4e86\u6211\u4eec\u4eca\u5929\u62e5\u6709\u7684\u73b0\u6709\u57fa\u7840\u8bbe\u65bd\u5916\uff0c\u5b83\u8fd8\u9700\u8981\u5927\u91cf\u548c\u6301\u7eed\u7684\u8d44\u6e90\u6295\u8d44\u3002\n\u4f46\u603b\u4f1a\u6709\u56de\u62a5\u7684\u3002\u5c3d\u7ba1\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4eba\u7c7b\u5728\u89e3\u51b3\u6c14\u5019\u5371\u673a\u65b9\u9762\u505a\u5f97\u5f88\u7cdf\u7cd5\uff0c\u4f46\u8fd9\u4e00\u5207\u90fd\u53ef\u80fd\u6539\u53d8\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u540c\u65f6\u66ff\u6362\uff1a\n\u5de5\u4e1a\u3001\u5546\u4e1a\u548c\u4f4f\u5b85\u7684\u70ed\u548c\u7535\u529b\u9700\u6c42\u8f6c\u53d8\u4e3a\u57fa\u4e8e\u7535\u529b\u800c\u4e0d\u662f\u5316\u77f3\u71c3\u6599\u7684\u89e3\u51b3\u65b9\u6848\uff0c\n\u6211\u4eec\u53ef\u4ee5\u6d88\u966480%\u4ee5\u4e0a\u7684\u5316\u77f3\u71c3\u6599\u4f7f\u7528\uff0c\u5305\u62ec\u51e0\u4e4e\u6240\u6709\u4e0d\u53ef\u6301\u7eed\u7684\u4f7f\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u77ed\u671f\u4f46\u91cd\u5927\u7684\u524d\u671f\u6295\u8d44\u6765\u6539\u53d8\u4e16\u754c\uff0c\u83b7\u5f97\u957f\u671f\u56de\u62a5\u3002\n\u4ee4\u4eba\u4e0d\u5b89\u7684\u4e8b\u5b9e\u662f\uff1a\u6211\u4eec\u662f\u4e00\u4e2a\u592a\u7a7a\u65f6\u4ee3\u7684\u6587\u660e\uff0c\u7531\u4e8e\u6050\u60e7\u548c\u60f0\u6027\uff0c\u6211\u4eec\u9009\u62e9\u56de\u907f\u80fd\u6e90\u751f\u4ea7\u65b9\u9762\u7684\u6280\u672f\u8fdb\u6b65\u3002\u6211\u4eec\u6b63\u5728\u752818\u4e16\u7eaa\u7684\u6280\u672f\u4e3a21\u4e16\u7eaa\u63d0\u4f9b\u52a8\u529b\uff0c\u8fd9\u5bf9\u6211\u4eec\u7684\u73af\u5883\u4ea7\u751f\u4e86\u707e\u96be\u6027\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u5ffd\u89c6\u4e86\u592a\u957f\u65f6\u95f4\u4e86\u3002\u867d\u7136\u6709\u8bb8\u591a\u53ef\u80fd\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u6838\u80fd\u6709\u88ab\u8bc1\u660e\u7684\u5fc5\u8981\u7684\u6210\u529f\u8bb0\u5f55\uff0c\u4ee5\u53ca\u4f5c\u4e3a\u4eba\u7c7b\u5bf9\u6297\u6c14\u5019\u53d8\u5316\u7684\u6b66\u5668\u5e93\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u3001\u6f5c\u5728\u7684\u4e3b\u8981\u8d44\u6e90\u7684\u7075\u6d3b\u6027\u3002\n\u591a\u5e74\u6765\uff0c\u6211\u4eec\u4e00\u76f4\u8ba9\u6050\u60e7\uff0c\u800c\u4e0d\u662f\u4e8b\u5b9e\uff0c\u63a7\u5236\u7740\u5bf9\u6838\u80fd\u7684\u53d9\u8ff0\u3002\u867d\u7136\u56f4\u7ed5\u6838\u80fd\u7684\u4f20\u7edf\u6545\u4e8b\u96c6\u4e2d\u5728\u5df2\u7ecf\u53d1\u751f\u7684\u5c11\u6570\u707e\u96be\u4e0a\uff0c\u4f46\u6838\u80fd\u7684\u8bb0\u5f55\u8bb2\u8ff0\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u6545\u4e8b\uff1a\u65e0\u4e0e\u4f26\u6bd4\u7684\u5b89\u5168\uff0c\u6210\u529f\u7684\u5e9f\u7269\u7ba1\u7406\uff0c\u4ee5\u53ca\u4e30\u5bcc\u3001\u8d1f\u62c5\u5f97\u8d77\u7684\u7eff\u8272\u80fd\u6e90\u3002\u4e16\u754c\u73b0\u5728\u6bd4\u4ee5\u5f80\u4efb\u4f55\u65f6\u5019\u90fd\u66f4\u9700\u8981\u6838\u80fd\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u514b\u670d\u5bf9\u5b83\u7684\u6839\u6df1\u8482\u56fa\u7684\u504f\u89c1\uff0c\u6211\u4eec\u5c31\u53ef\u80fd\u89e3\u51b3\u6211\u4eec\u7684\u4e16\u754c\u5728\u672a\u6765\u51e0\u4ee3\u4eba\u9762\u4e34\u7684\u6700\u5927\u95ee\u9898\u4e4b\u4e00\u3002\n\u5728\u6211\u7684\u63a8\u7279\u4e0a\u5173\u6ce8\u6211\u3002\u6211\u53ef\u4ee5\u5728\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\u4e0a\u67e5\u770b\uff0c\u6216\u8005\u5728\u8fd9\u91cc\u67e5\u770b\u6211\u7684\u4e00\u4e9b\u5176\u4ed6\u5de5\u4f5c\u3002", "note_en": "For thousands upon thousands of years, humans have been harnessing the power of nature to provide energy to push our civilization forward. By leveraging fire, we gained the ability to cook food, provide warmth and shelter, and to protect us from predators. Later on, we tamed a variety of animals, using their labor to perform tasks that would be too strenuous or inefficient for humans. Eventually, natural power sources, like the wind, was harnessed through windmills to turn millstones, grinding grain without any human input at all.\n  An enormous transformation occurred when we began using natural sources \u2014 windmills, steam-generating combustion processes, even flowing water \u2014 to turn turbines, generating power and providing electricity. Today, the world\u2019s energy needs are still dominantly met through these same processes, with non-renewable fossil fuels like coal, oil, and gas providing the dominant fraction of Earth\u2019s energy uses. We\u2019re powering a space age civilization with the same fossil fuels that emerged during the iron age. Now, more than ever, the world needs nuclear power, and yet fear, rather than facts, governs our policies. Here\u2019s the science of why we should embrace it.\n       The way a conventional, chemical-based power plant works is simple and straightforward. A fuel source of some variety is burned, releasing energy, which heats up and boils water, generating steam. That steam turns a turbine, which generates electricity, used to provide power for whatever purposes are in demand downstream.\n  The big problem we have, whether we admit it to ourselves or not, is that this way of generating large amounts of energy has created enormous environmental problems. While the impact of extracting these raw materials in such enormous quantities is no doubt significant, the end products of combusting these fuel sources has fundamentally and significantly changed the chemical composition of Earth\u2019s atmosphere and oceans, leading to global warming, ocean acidification, and other climate-related effects.\n      The evidence that this has occurred is overwhelming, and it\u2019s a problem that we continue to exacerbate with each passing day on Earth. As more hydrocarbon-based fossil fuels undergo combustion, they increase the concentration of carbon dioxide (CO 2) in Earth\u2019s atmosphere, which has risen from pre-industrial levels of about 270 parts-per-million to modern levels of around 410 parts-per-million: a little more than a 50% increase in less than 300 years.\n  This carbon dioxide increase also extends to the ocean, where carbon dioxide combines with water to create carbonic acid, changing the pH (a measure of acidity) of our oceans on a global scale.\n  But the most pressing problem is the global warming that has ensued from this additional amount of carbon dioxide. Our global average temperature has risen by 0.98 \u00b0C (1.76 \u00b0F) since we began accurately measuring it back in 1880, and that rise has accelerated, having increased by 0.18 \u00b0C (0.32 \u00b0F) per decade over the past 39 years.\n    Although many different approaches have been proposed to address this problem, it\u2019s clear that any sustainable, long-term solution will include one important component: a transition to energy sources that don\u2019t result in additional carbon dioxide emissions. While most of the ideas put forth \u2014 such as the hypothetical Green New Deal \u2014 focus on renewable energy sources like solar and wind power, there\u2019s another option that we should seriously reconsider: nuclear fission power.\n  Yes, it\u2019s true that fission power plants that cut corners could lead to radioactivity-related disasters, such as  what infamously happened at Chernobyl in 1986. Meltdown is a risk, occurring at  Three Mile Island in 1979. And a poorly contained reactor on a fault line could result in radioactive waste products contaminating the nearby environment due to a natural disaster, such as  what occurred at Fukushima in 2011. But even despite these occurrences,  nuclear power remains safer, on the whole, than any other large-scale power source in use over all of human history.\n    The first nuclear reactors to be used for large-scale power generation came online in the mid-1950s, and in that time, there have been a total of over 17,000 reactor-years (where one nuclear reactor operating for a year equals one reactor-year) spanning 33 countries. The three aforementioned incidents are the only adverse ones to be documented in all that time. And yet, when people think of nuclear power, they commonly think of these disasters \u2014 as well as the danger of nuclear war, the hazards of radioactive waste, and the destructive power of the atomic bomb \u2014 rather than the safe, efficient, and green energy source that nuclear power actually is.\n  Thankfully, the science behind nuclear power is actually simple, and helps us understand why we shouldn\u2019t fear it the same way we fear nuclear bombs or nuclear war. Instead, there\u2019s a well-understood process that goes on inside the atom, and can generate enormous quantities of power, enough to power our global energy needs for centuries, without the polluting side-effects of fossil fuels.\n    The physics behind nuclear power. In conventional (chemical-based) fuels, reactions occur between the electron configurations of various atoms, releasing up to ~0.0001% of the fuel\u2019s mass as energy. In nuclear-based reactions, it\u2019s the atomic nuclei themselves that are split, releasing approximately ~1000 times as much energy for the same amount of fuel. In particular, fissionable material (like uranium-235) only needs one simple ingredient \u2014 a neutron for the nucleus to absorb \u2014 to trigger a fission reaction.\n  Although other fuels can be used, the good news about nuclear power is that it\u2019s self-sustaining: each U-235 nucleus that absorbs a neutron in turn emits three new neutrons when it splits apart, releasing energy and sustaining the reaction. So long as enough neutrons continue to interact with fissile material, the reaction will occur. This releases heat, which is used to boil water, generating steam, and turning a turbine, the same as a chemical-based reactor. Only, with nuclear, there\u2019s no carbon dioxide waste produced.\n    Nuclear\u2019s energy output is entirely controllable. One of the big concerns raised with renewable sources of energy like wind and solar are that they\u2019re not controllable. If it\u2019s not windy, you don\u2019t generate wind power; if it\u2019s not sunny (or if it\u2019s night), your solar panels\u2019 output drops tremendously. But the rate of nuclear output can be controlled in a straightforward manner, simply by controlling three factors: control rods, temperature, and a medium (usually water).\n  Remember what causes a nuclear reaction: the availability of neutrons for the fissile material to absorb. If you put more (or fewer) control rods in, you absorb more (or fewer) of the available neutrons, changing how much interacts with the fissile material. If you increase the temperature, you increase the rate of the reaction; if you decrease it, the reaction rate drops. And the presence of a medium, such as water, can also act as a neutron absorber, but that comes at a cost: you wind up with tritiated water, which itself is radioactive for a period of a few decades.\n  Still, this is an enormous win: we can generate more or less power as needed, up to the plant\u2019s maximum safe capacity.\n    There\u2019s no risk of a nuclear bomb, and the waste is eminently manageable. A lot of people, quite understandably, fear the risk of a nuclear explosion. Fortunately, the risk of a nuclear explosion is absolutely zero when it comes to a nuclear power plant. Put simply, the fuel used inside every nuclear reactor \u2014 as demanded by the  International Atomic Energy Agency \u2014 isn\u2019t sufficiently enriched to make a runaway chain reaction even a possibility. The material isn\u2019t capable of creating a nuclear explosion.\n  That said, there will be nuclear waste produced. Some of it will be useful for repurposing, like the plutonium used in thermoelectric heating and energy generation for deep space missions, while other material (like tritiated water) will need to be stored and managed. According to the  World Nuclear Association:\n    which usually needs ~5 years of underwater storage followed by ~45 years of dry storage,\n    Although we still have to overcome the \u201cnot in my backyard\u201d (NIMBY) mentality when it comes to nuclear, this is essentially a scientifically solved problem.\n    We can fully transition to nuclear in under 20 years. Building a new, country-wide (or global) set of reactors to power the world will require a sustained investment. New power plants, reactors, cooling towers, etc., will all need to be constructed. Sufficient quantities of nuclear fuel will need to be mined, extracted, and appropriately refined. Supply chains will need to be constructed, and waste management will be an ongoing need to address. Above and beyond the existing infrastructure that we have today, it will require an enormous and sustained investment of resources.\n  But the payoff will come. While humanity has, to put it lightly, done a dismal job of addressing the climate crisis up until this point, that can all change.  If we can simultaneously replace:\n    industrial, commercial, and residential heat and power needs into electric rather than fossil fuel-based solutions,\n    We can eliminate more than 80% of our fossil fuel uses, including practically all of the non-sustainable ones. We can transform the world for a long-term payoff with a short but significant  up-front investment.\n    The uncomfortable truth is this: we are a space-age civilization that has chosen to eschew technological advances in energy generation because of fear and inertia. We are powering the 21st century with 18th century technology, which has had disastrous effects on our environment that we have ignored for far too long. While there are many possible ways forward to address this problem, nuclear power has the proven track record of success necessary and the flexibility to be an integral, and potentially the primary, resource in humanity\u2019s arsenal in the fight against climate change.\n  For many years, we have let fear, rather than facts, control the narrative over nuclear power. While the conventional story around nuclear power focuses on the few disasters that have occurred, nuclear\u2019s track record tells a different story: one of unparalleled safety, successful waste management, and abundant, affordable, green energy. The world needs nuclear power now more than ever. If we can overcome our entrenched biases against it, we just might solve one of the biggest problems facing our world for generations to come.\n Follow me on\u00a0 Twitter.\u00a0 Check out\u00a0my\u00a0 website\u00a0or\u00a0some of my other work\u00a0 here.", "posttime": "2020-10-24 07:30:57", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9700\u8981,nuclear,\u6838\u80fd", "title": "\u4e16\u754c\u9700\u8981\u6838\u80fd\uff0c\u6211\u4eec\u4e0d\u5e94\u8be5\u5bb3\u6015\u5b83", "title_en": "The world needs nuclear power and we shouldn\u2019t be afraid of it", "transed": 1, "url": "https://www.forbes.com/sites/startswithabang/2020/10/21/the-world-needs-nuclear-power-and-we-shouldnt-be-afraid-of-it/#59d658b56576", "via": "", "real_tags": ["\u9700\u8981", "nuclear", "\u6838\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1030825, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u7684\u79c1\u4eba\u793e\u4ea4VR", "note_en": "Private social VR in your web browser", "posttime": "2020-10-24 07:30:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u793e\u4ea4,hubs", "title": "Mozilla Hubs-\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u7684\u79c1\u4eba\u793e\u4ea4\u865a\u62df\u73b0\u5b9e", "title_en": "Mozilla Hubs \u2013 Private social VR in your web browser", "transed": 1, "url": "https://hubs.mozilla.com/", "via": "", "real_tags": ["\u793e\u4ea4", "hubs"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1030824, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5728\u4e00\u7bc7\u5173\u4e8e\u8334\u9999\u8bed\u8a00\u57fa\u672c\u539f\u7406\u7684lobste.rs\u5e16\u5b50\u4e2d\uff0c\u6211\u53d1\u5e03\u4e86\u5173\u4e8e\u77f3\u6cb9\u4e3a\u4ec0\u4e48\u5b58\u5728\u7684\u6458\u8981\uff1a\n\u4f46\u662fOil\u6709\u66f4\u591a\u7684\u4e1c\u897f\uff0c\u5305\u62ec\u7edf\u4e00\u5355\u72ec\u7684\u5e7f\u544a\u8868\u8fbe\u8bed\u8a00\u2026\u2026\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u8be6\u7ec6\u9610\u8ff0\u4e86\u8fd9\u4e9b\u89c2\u70b9\u3002\u6211\u5df2\u7ecf\u5c06\u5176\u57fa\u672c\u539f\u7406\u6d53\u7f29\u4e3a\u804c\u4e1a\u5b89\u5168\u536b\u751f\u8bed\u8a00\u7684\u56db\u4e2a\u5173\u952e\u7279\u5f81\u3002\n\u6211\u7ed9\u51fa\u4e86\u6bcf\u4e2a\u529f\u80fd\u7684\u793a\u4f8b\uff0c\u94fe\u63a5\u5230\u6587\u6863(\u6b63\u5728\u8fdb\u884c\u4e2d)\uff0c\u5e76\u5bf9\u9879\u76ee\u7684\u672a\u6765\u8fdb\u884c\u4e86\u8bc4\u8bba\u3002\n\u56de\u60f3\u4e00\u4e0b\uff0cOSH\u662f\u4e3a\u8fd0\u884c\u73b0\u6709\u7684shell\u811a\u672c\u800c\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u4ece2018\u5e74\u521d\u5f00\u59cb\u5c31\u8fd9\u6837\u505a\u4e86\u3002\n\u5b83\u8fd8\u7528Opt-in\u7279\u6027\u4fee\u590d\u4e86shell\u8bed\u8a00\u4e2d\u7684\u7f3a\u70b9\u3002\u8fd9\u662f\u56db\u4e2a\u6700\u91cd\u8981\u7684\u95ee\u9898\u3002\n\u6211\u521a\u521a\u5b8c\u6210\u4e86\u5bf9\u58f3\u724c\u516c\u53f8\u6613\u788e\u7684Set-e/Errexit\u673a\u5236\u7684\u5927\u4fee\u3002\u6211\u5bf9\u6b64\u5f88\u5174\u594b\uff0c\u56e0\u4e3a\u6211\u53bb\u5e74\u5c31\u5f00\u59cb\u4e86\uff0c\u4f46\u5728\u88ab\u96be\u4f4f\u4e4b\u540e\uff0c\u6211\u628a\u5b83\u653e\u5728\u4e86\u6b21\u8981\u4f4d\u7f6e\uff01\n\u6211\u76f8\u4fe1\u6211\u73b0\u5728\u5df2\u7ecf\u89e3\u51b3\u4e86\u6240\u6709\u95ee\u9898\uff0c\u5e76\u5e0c\u671b\u5f97\u5230\u60a8\u7684\u53cd\u9988\u3002\u7b80\u5355\u4e0d\u53d8\u7684\u662f\uff0cOSH\u4ece\u4e0d\u4e22\u5931\u9000\u51fa\u4ee3\u7801\uff0c\u800cPOSIX shell\u6216bash\u5e76\u975e\u5982\u6b64\u3002\u4ee5\u4e0b\u662f\u589e\u5f3a\u529f\u80fd\u7684\u6458\u8981\uff1a\nStrict_errexit-\u4e00\u4e2ashell\u9009\u9879\uff0c\u7528\u4e8e\u68c0\u6d4b\u5728shell\u4e2d\u4e22\u5931\u9519\u8bef\u7684\u60c5\u51b5\uff0c\u5982\u5982\u679cmyfunc\u3002\u8fd9\u6539\u8fdb\u4e86\u60a8\u7684shell\u811a\u672c\uff0c\u5373\u4f7f\u60a8\u5728\u53e6\u4e00\u4e2ashell\u4e0b\u8fd0\u884c\u5b83\u4eec\uff01\u6362\u53e5\u8bdd\u8bf4\uff0cOSH\u53ef\u4ee5\u7528\u4f5c\u5f00\u53d1\u5de5\u5177\u3002\nInherit_errexit-OSH\u5b9e\u73b0\u6b64bash4.4\u9009\u9879\uff0c\u8fd9\u662f\u5bf9&#34\uff1b\u547d\u4ee4suberrexit&#34\uff1b\u95ee\u9898\u7684\u90e8\u5206\u4fee\u590d\u3002\nCOMMAND_SUB_ERREXIT-\u5728\u6bcf\u4e2a\u547d\u4ee4SUB\u7684\u672b\u5c3e\u68c0\u67e5\u6545\u969c\u7684shell\u9009\u9879\uff0c\u8fd9\u6837\u60a8\u5c31\u4e0d\u4f1a\u4e22\u5931\u9519\u8bef\u3002\u8fd9\u89e3\u51b3\u4e86\u6731\u8389\u5a05\u00b7\u57c3\u6587\u65af(Julia Evans)\u6700\u8fd1\u4e00\u90e8\u6f2b\u753b\u7684\u6700\u540e\u4e00\u4e2a\u9762\u677f\u4e2d\u663e\u793a\u7684\u95ee\u9898\uff1a\u731b\u70c8\u62a8\u51fb\u6709\u65f6\u662f\u5947\u602a\u7684&#34\uff1b\nPROCESS_SUB_FAIL-\u7c7b\u7ba1\u9053\u5931\u8d25\uff0c\u4f46\u7528\u4e8e\u8fdb\u7a0b\u66ff\u6362\u3002\u610f\u5927\u5229\u5c06errexit\u8bbe\u7f6e\u4e3a&#34\uff1b\u53c2\u89c1&#34\uff1b\u8fdb\u7a0bSUB\u5bfc\u81f4\u7684\u6545\u969c\uff0c\u5982cat foo.txt&lt\uff1b\u4e2d\u7684sortinvocation(SORT/OOOPS/ERROR)\uff0c@_PROCESS_SUB_STATUS\uff1a\u7c7b\u4f3c\u4e8e${PIPESTATUS[@]}\u7684\u53d8\u91cf\u3002\u60a8\u53ef\u80fd\u9700\u8981\u68c0\u67e5\u6240\u6709\u8fdb\u7a0b\u7684\u9000\u51fa\u72b6\u6001\u3002\nRun\u5185\u7f6e\u6253\u5f00errexit\uff0c\u6240\u4ee5\u5982\u679c\u8fd0\u884cmyfunc\u662f\u5b89\u5168\u7684\u3002\u5b83\u8fd8\u63d0\u4f9b\u5bf9\u9000\u51fa\u4ee3\u7801\u7684\u7ec6\u7c92\u5ea6\u63a7\u5236\u3002\n\u662f\u7684\uff0c\u6709\u5f88\u591a\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3ashell\u6709\u5f88\u591a\u95ee\u9898\uff01\u4f46\u662f\u4f60\u4e0d\u5fc5\u8bb0\u4f4f\u6240\u6709\u8fd9\u4e9b\u540d\u5b57\u3002\u5c06SHOT--\u8bbe\u7f6e\u6cb9\uff1aBASIC\u6dfb\u52a0\u5230\u60a8\u7684\u7a0b\u5e8f\u7684\u9876\u90e8\uff0c\u4ee5\u6253\u5f00\u6240\u6709\u9009\u9879\u3002Strict_errexit\u5931\u8d25\u5c06\u63d0\u9192\u60a8\u4f7f\u7528\u8fd0\u884c\u5305\u88c5\u5668\u3002\n(\u65c1\u767d\uff1a\u6211\u80fd\u591f\u5728\u89e3\u91ca\u5668\u4e2d\u5e72\u51c0\u5229\u843d\u5730\u89e3\u51b3\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u30024\u5e74\u524d\uff0c\u6211\u82b1\u4e86\u5f88\u591a\u65f6\u95f4\u5728\u77f3\u6cb9\u516c\u53f8\u7684\u67b6\u6784\u4e0a\uff0c\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u5fae\u5999\u7684\u95ee\u9898\u3002\u5f53\u4ee3\u7801\u5177\u6709\u826f\u597d\u7684\u7ed3\u6784\u65f6\uff0c\u4fee\u590d\u7684\u6b63\u786e\u4f4d\u7f6e\u5c31\u4f1a\u81ea\u52a8\u5c55\u73b0\u7ed9\u60a8\u3002(\u6cb9\u4ef7\u4ecd\u5728\u6539\u5584\uff01)\u3002\nQSN\u662f\u5b9e\u73b0\u77f3\u6cb9\u9886\u57df\u7ed3\u6784\u5316\u6570\u636e\u7684\u57fa\u7840\u3002\u6bcf\u5f53\u60a8\u9700\u8981\u5728shell\u4e2d\u5904\u7406\u7528\u6237\u63d0\u4f9b\u7684\u6570\u636e\u65f6\uff0c\u5b83\u5c31\u4e0d\u518d\u9700\u8981\u53d1\u660e\u7279\u6b8a\u7684(\u901a\u5e38\u662f\u4e0d\u5b8c\u6574\u7684)\u683c\u5f0f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9664\u4e86\u6df7\u4e71\u7684\u89e3\u6790\u548c\u62c6\u5206\u4e4b\u5916\uff0cOil\u811a\u672c\u8fd8\u6709\u53e6\u4e00\u79cd\u9009\u62e9\u3002\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u7b80\u77ed\u7684\u4f8b\u5b50\u3002\u5199\u5185\u5efa\u51fd\u6570\u5c06\u5176\u53c2\u6570\u8f93\u51fa\u5230stdout\uff0c\u5e76\u63a5\u53d7--qsn\u6807\u5fd7\uff1a\n#\u6253\u5370\u6587\u4ef6\u540d\u4e3a\u6bcf\u884c\u4e00\u4e2a\u3002\u5982\u679c\u540d\u79f0\u5305\u542b#\u6362\u884c\u7b26\u6216\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\uff0c\u5219\u5b83\u7684QSN\u7f16\u7801\u7c7b\u4f3c\u4e8e\\n\u5e26\u6709NUL\\0\u5b57\u8282\u7684\u591a\u884c\u540d\u79f0--qsn--*.txt\u3002\nCat list.txt|While read--line--qsn{#_line\u7531&#39\uff1bread&#39\uff1brm--$_line}\u9690\u5f0f\u8bbe\u7f6e\u3002\n\u6211\u8fd8\u5b9e\u73b0\u4e86read-0\u4f5c\u4e3abash-r-d\uff1b&#39\uff1b\u6a21\u7cca\u7684read-r-d\uff1b&#39\uff1b\u7684\u540c\u4e49\u8bcd\uff0c\u8fd9\u5141\u8bb8\u60a8\u50cfxargs-0\u4e00\u6837\u5728shell\u4e2d\u4f7f\u7528find-Print0\u8f93\u51fa\u3002\u6b64\u683c\u5f0f\u4e0eQSN\u4e0d\u540c\uff0c\u4f46\u73b0\u5728\u5f88\u5bb9\u6613\u5728\u5b83\u4eec\u4e4b\u95f4\u6765\u56de\u8f6c\u6362\u3002\n\u8fd9\u662f\u7b2c\u4e00\u6b21\u524a\u51cfQSN\u652f\u6301\u3002\u6211\u5e0c\u671b\u5b83\u4f1a\u6839\u636e\u60a8\u7684\u53cd\u9988\u800c\u53d1\u5c55\uff01\n\u8fd9\u662f\u57282019\u5e74\u590f\u5929\u5b8c\u6210\u7684\u3002\u6211\u5728\u4eca\u5e74\u65e9\u4e9b\u65f6\u5019\u7684\u201c\u7b80\u5355\u5355\u8bcd\u8bc4\u4f30\u201d\u4e2d\u5bf9\u6b64\u8fdb\u884c\u4e86\u63cf\u8ff0\uff0c\u60a8\u53ef\u4ee5\u5728Oil\u8bed\u8a00\u4e60\u8bed\u4e2d\u770b\u5230\u793a\u4f8b\u3002\n\u8fd9\u7bc7\u535a\u5ba2\u59cb\u4e8e2016\u5e74\uff0c\u5bf9\u9759\u6001\u89e3\u6790\u8fdb\u884c\u4e86\u89e3\u91ca\u3002\u6211\u5728\u4ecb\u7ecd\u4e2d\u5f15\u7528\u7684\u8bc4\u8bba\u4e2d\u6ca1\u6709\u63d0\u5230\u8fd9\u4e00\u70b9\uff0c\u4f46\u5b83\u4ecd\u7136\u662f\u8be5\u9879\u76ee\u7684\u5173\u952e\u90e8\u5206\u3002\n\u5f53\u6211\u6ce8\u610f\u5230\u4e8c\u4e09\u5341\u5e74\u524dPerl5\u548cRCshell\u7684\u4f5c\u8005\u90fd\u62b1\u6028shell\u7684\u52a8\u6001\u89e3\u6790\u65f6\uff0c\u6211\u610f\u8bc6\u5230\u8fd9\u662f\u591a\u4e48\u91cd\u8981\uff01\n\u8fd9\u4e2a\u57fa\u91d1\u4f1a\u4ecd\u5728\u652f\u4ed8\u7ea2\u5229\u3002\u6211\u6700\u8fd1\u4f7f\u7528\u9759\u6001\u89e3\u6790\u5668\u4e3a\u547d\u4ee4subs\u521b\u5efa\u4e86\u8be6\u7ec6\u7684\u9519\u8bef\u6d88\u606f\uff1a\n$SHORT--set errexit command_sub_errexit$d=$(\u65e5\u671f%x)\u65e5\u671f\uff1a\u65e0\u6548\u65e5\u671f\u2018%x\u2019d=$(\u65e5\u671f%x)^~[\u4ea4\u4e92]\uff1a13\uff1aFATAL\uff1a\u547d\u4ee4SUB\u5df2\u9000\u51fa\uff0c\u72b6\u6001\u4e3a1...\u3002\n$SHORT--set PROCESS_SUB_FAIL$cat/dev/null&lt\uff1b(\u6392\u5e8foops)\u6392\u5e8f\uff1a\u65e0\u6cd5\u8bfb\u53d6\uff1aoops\uff1a\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\u6216\u76ee\u5f55cat/dev/null&lt\uff1b(\u6392\u5e8foops)^~[\u4ea4\u4e92]\uff1a27\uff1aFATAL\uff1a\u6b63\u5728\u9000\u51fa\uff0c\u72b6\u6001\u4e3a2...\u3002\n\u6b64\u5916\uff0cTravis Everett\u8fd8\u5f00\u53d1\u4e86\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u9759\u6001\u89e3\u6790\u7684shell\u4f9d\u8d56\u6346\u7ed1\u5668\u3002\n\u660e\u786e\u5730\u5199\u51fa\u8fd9\u79cd\u8bed\u8a00\u7684\u57fa\u672c\u539f\u7406\u786e\u5b9e\u5f88\u6709\u7528\u3002\u6211\u7528#\u4e3a\u4ec0\u4e48\u662f\u65b0\u8d1d\u58f3#\u7684\u5e16\u5b50\u591a\u6b21\u91cd\u590d\u8fd9\u4e00\u70b9\uff0c\u4f46\u5373\u4f7f\u57284\u5e74\u540e\u518d\u6b21\u89e3\u91ca\u4e5f\u662f\u6709\u5e2e\u52a9\u7684\u3002\u8fd9\u4e2a\u9879\u76ee\u6b63\u5728\u53d1\u5c55\uff0c\u5e76\u4e14\u53d8\u5f97\u8d8a\u6765\u8d8a\u6e05\u6670\u3002\n\u968f\u7740Errexit\u548cQSN\u89e3\u7801\u5668\u7684\u5927\u4fee\uff0c\u6211\u76f8\u4fe1\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5177\u5907\u4e86OSH\u8bed\u8a00\u7684\u6240\u6709\u57fa\u7840\uff01\u8fd9\u4e9b\u529f\u80fd\u5c06\u5728\u4e0b\u4e00\u7248\u672c\u4e2d\u5220\u9664\u3002\n\u6709\u4eba\u58f0\u79f0\uff0c\u4ec5\u8fd9\u56db\u4e2a\u7279\u6027\u5c31\u8bc1\u660e\u4e86\u4e00\u4e2a\u65b0\u7684Unix shell\u662f\u5408\u7406\u7684\u3002\u5982\u679c\u6211\u4eec\u5b8c\u6210C++\u7ffb\u8bd1\uff0c\u5e76\u5728\u8fd9\u91cc\u7ed3\u675f\u9879\u76ee\uff0c\u8fd9\u5c06\u662f\u503c\u5f97\u7684\u3002\n\u6d88\u9664\u5f15\u8ff0\u5730\u72f1\u7684\u8bdd\u3002\u8ba9\u6211\u4eec\u4e00\u52b3\u6c38\u9038\u5730\u89e3\u51b3\u5b83\uff0c\u800c\u4e0d\u662f\u5728\u63a5\u4e0b\u6765\u768430\u5e74\u91cc\u544a\u8beb\u6bcf\u4e00\u4e2a\u65b0\u7684shell\u7a0b\u5e8f\u5458\uff0c\u56e0\u4e3a\u8fc7\u53bb\u768430\u5e74\u91cc\u5df2\u7ecf\u8fd9\u6837\u505a\u4e86\uff01\n\u5982\u679c\u4f60\u4e0d\u540c\u610f\uff0c\u8bf7\u544a\u8bc9\u6211\uff01\u6211\u60f3\u77e5\u9053shell\u8bed\u8a00\u4e2d\u8fd8\u6709\u54ea\u4e9b\u5730\u65b9\u9700\u8981\u4fee\u590d\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u89e3\u51b3\u3002\n(\u6211\u5728\u8fd9\u91cc\u7701\u7565\u4e86\u4ea4\u4e92\u5f0fshell\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5f53\u52a1\u4e4b\u6025\u662f\u5f00\u53d1\u4e00\u4e2a\u66f4\u597d\u7684\u7f16\u7a0b\u548c\u81ea\u52a8\u5316shell\u3002A&#34\uff1bCloud Shell&#34\uff1b\u5982\u679c\u4f60\u613f\u610f\uff0c\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u8bf4\u3002)\u3002\n\u65e9\u5728\u4e00\u6708\u4efd\uff0c\u6211\u5c31\u5df2\u7ecf\u62c5\u5fc3\u8fd9\u4e2a\u9879\u76ee\u7684\u8303\u56f4\u4e86\u3002\u6211\u5199\u9053\uff0c\u8be5\u9879\u76ee\u6700\u5927\u7684\u524a\u51cf\u5c06\u662fOil\u5c06\u57fa\u4e8e\u5b57\u7b26\u4e32\uff0c\u800c\u4e0d\u662f\u7c7b\u4f3cPython\u7684\u6570\u636e\u7c7b\u578b\u3002\nOSH\u8bed\u8a00\u662f\u57fa\u4e8e\u5b57\u7b26\u4e32(\u548c\u5b57\u7b26\u4e32\u6570\u7ec4)\u7684\u517c\u5bb9shell\u3002\u8d4b\u503c\u770b\u8d77\u6765\u50cf\u662f\u672c\u5730x=mystr\u3002\nOil\u8bed\u8a00\u6709\u7c7b\u4f3cPython\u7684\u7c7b\u578b\u548c\u8868\u8fbe\u5f0f\uff0c\u8d4b\u503c\u770b\u8d77\u6765\u50cfvar x=42+a[i]+f(x\uff0cy)\u3002\u5b83\u5177\u6709\u5bb9\u91cf\u6536\u96c6\u7684\u9012\u5f52\u6570\u636e\u7ed3\u6784\u5806\u3002\n\u56e0\u6b64\uff0c\u6211\u73b0\u5728\u8981\u8bf4\u7684\u662f\uff0c\u4eca\u540e\u7684\u9996\u8981\u4efb\u52a1\u662f\u5b8c\u5584\u804c\u4e1a\u5b89\u5168\u4e0e\u5065\u5eb7\u8bed\u8a00\uff0c\u800c\u628a\u77f3\u6cb9\u8bed\u8a00\u63a8\u8fdf\u5230\u6726\u80e7\u7684\u672a\u6765\u3002\n\u8fd9\u610f\u5473\u7740\u5b8c\u6210\u5230C++\u7684\u8f6c\u6362\uff0c\u8fde\u63a5\u5783\u573e\u6536\u96c6\u5668\uff0c\u5e76\u7f16\u5199\u6587\u6863\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u51c6\u5907\u5c06\u4ee3\u7801\u5d4c\u5165\u5230\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6bd4\u5982\u9c7c\u58f3\u3002(\u6211\u5df2\u7ecf\u548c\u7ef4\u62a4\u5458\u8ba8\u8bba\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u5927\u5bb6\u90fd\u5f88\u611f\u5174\u8da3\u3002\u4f46\u8fd9\u662f\u4e00\u9879\u7e41\u91cd\u7684\u5de5\u4f5c\uff0c\u4e0d\u5e94\u8be5\u60f3\u5f53\u7136\u5730\u8ba4\u4e3a\u8fd9\u662f\u7406\u6240\u5f53\u7136\u7684\uff0c\u800c\u4e14\u8fd8\u6709\u5f88\u591a\u95ee\u9898\u6ca1\u6709\u89e3\u51b3\u3002)\u3002\n\u5b9e\u73b0\u8fd9\u4e00OSH\u8bed\u8a00\u91cc\u7a0b\u7891\u611f\u89c9\u975e\u5e38\u53ef\u884c\uff0c\u56e0\u4e3a\u4e00\u5207\u90fd\u5df2\u7ecf\u5728Python\u4e2d\u8fd0\u884c\uff0cC++\u76841685\u4e2a\u89c4\u8303\u6d4b\u8bd5\u7a7a\u95f4\u4e2d\u6709915\u4e2a(\u4ea7\u751f30\u500d-50\u500d\u7684\u52a0\u901f\u6bd4)\u3002\n\u4f46\u662f\u6211\u4e0d\u4f1a\u653e\u5f03\u77f3\u6cb9\u8bed\u8a00\uff01\u6211\u53ea\u662f\u9700\u8981\u5e2e\u52a9\u3002\u5b83\u4ee5\u539f\u578b\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u60a8\u7684\u53cd\u9988\u5c06\u6fc0\u52b1\u6211\u7ee7\u7eed\u5de5\u4f5c\u3002\n\u6cb9\u753b\u8bed\u8a00\u7684\u56db\u5927\u7279\u70b9\u3002\u8fd9\u4e2a\u5e16\u5b50\u5c06\u804c\u4e1a\u5b89\u5168\u4e0e\u5065\u5eb7\u7f29\u5c0f\u5230\u56db\u4e2a\u4e3b\u8981\u529f\u80fd\uff0c\u800cOil\u4e5f\u6709\u56db\u4e2a\uff1a\n\u5e8f\u5217\u5316\u683c\u5f0f\uff0c\u5982JSON\u548cQTSV(\u5efa\u8bae)\u3002\u540e\u8005\u662f\u4e00\u79cd\u7528\u4e8e\u7c7b\u578b\u5316\u8868\u683c\u7684\u683c\u5f0f\uff0c\u5efa\u7acb\u5728QSN\u4e4b\u4e0a\u3002\n\u77f3\u6cb9\u8bed\u8a00\u7684\u5de8\u5927\u53d8\u5316\u3002\u5217\u51fa\u4e86\u6211\u6700\u8fd1\u6240\u505a\u7684\u66f4\u6539\uff0c\u8fd9\u4e9b\u66f4\u6539\u5e94\u8be5\u4f1a\u8ba9\u6f5c\u5728\u7684\u8d21\u732e\u8005\u5bf9\u8fd9\u95e8\u8bed\u8a00\u6709\u4e00\u4e2a\u611f\u89c9\u3002\nPython\u3001JS\u548cRuby\u4e0ePerl\u548cPHP\u7684\u4e0d\u540c\u4e4b\u5904\u3002\u524d\u9762\u7684\u8bed\u8a00\u6709\u4e00\u4e2a\u5e72\u51c0\u7684\u6570\u636e\u6a21\u578b/\u5185\u5b58\u6a21\u578b\uff1a\u5e26\u6709\u5f15\u7528\u8bed\u4e49\u7684\u5783\u573e\u6536\u96c6\u5806\u3002\n\u6f2b\u753b\u8bc4\u8bba\u3002\u6211\u53ef\u4ee5\u7528\u8fd9\u4e9b\u6700\u8fd1\u7684\u6f2b\u753b\u4f5c\u4e3a\u89e3\u91ca\u804c\u4e1a\u5b89\u5168\u536b\u751f\u8bed\u8a00\u7684\u4e00\u79cd\u65b9\u5f0f\u3002(\u53c2\u89c1\u5176\u4ed6\u6807\u8bb0\u4e3a#COMIC\u7684\u5e16\u5b50\u3002)\u3002\n\u6211\u63cf\u8ff0\u4e86\u6539\u8fdb\u7684shell\u8bed\u8a00\u76844\u4e2a\u57fa\u672c\u7279\u6027\u3002\u8ba9\u6211\u77e5\u9053\u4f60\u8ba4\u4e3a\u9057\u6f0f\u4e86\u4ec0\u4e48\u3002\n\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u8bfb\u8fc7\uff0c\u8bf7\u53c2\u9605\u4e3a\u4ec0\u4e48\u521b\u5efaUnixShell\uff1f\u5b83\u662f\u8fd9\u4e2a\u7f51\u7ad9\u4e0a\u6700\u53d7\u6b22\u8fce\u7684\u9875\u9762\uff0c\u4e0d\u8fc7\u6211\u4ecd\u7136\u9700\u8981\u57282021\u5e74\u66f4\u65b0\u5b83\u3002\n\u7136\u540e\u6211\u63d0\u8bae\u628a\u91cd\u70b9\u653e\u5728\u8ba9\u804c\u4e1a\u5b89\u5168\u536b\u751f\u8bed\u8a00\u51c6\u5907\u597d\u751f\u4ea7\u4e0a\u3002\u6211\u8fd8\u5728\u5b66\u4e60\u77f3\u6cb9\u8bed\u8a00\uff0c\u4f46\u6211\u9700\u8981\u5e2e\u52a9\u5b8c\u6210\u5b83\u3002\n\u8c08\u5230\u8fd9\u4e00\u70b9\uff0c\u6709\u51e0\u4e2a\u4eba\u6307\u51fa\uff0c\u77f3\u6cb9\u7684\u5f00\u53d1\u8fc7\u7a0b\u662f\u56f0\u96be\u7684\u3002\u6211\u6700\u8fd1\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4ece\u6784\u5efa\u65e5\u5fd7\u4e2d\u5220\u9664\u4e86spew\uff0c\u5e76\u4f7f\u7528/usr/bin/env\u4e3a\u66f4\u4fbf\u643a\u7684Shebangs\u6dfb\u52a0\u4e86\u4e00\u4e2a\u7ebf\u6761\u68c0\u67e5(\u8fd9\u521a\u521a\u89e6\u53d1\u5e76\u9632\u6b62\u4e86\u56de\u5f52\uff01)\u3002\n\u6211\u4ecd\u7136\u60f3\u5236\u4f5c\u4e00\u4e2a\u622a\u5c4f\u89c6\u9891\u6765\u5c55\u793aOil\u662f\u591a\u4e48\u5bb9\u6613\u5de5\u4f5c\u3002\u5728\u514b\u9686\u4e4b\u540e\uff0c10\u621620\u79d2\u7684\u6784\u5efa\u8fc7\u7a0b\u5e94\u8be5\u4f1a\u4e3a\u60a8\u63d0\u4f9b\u4e00\u4e2a\u53ef\u5de5\u4f5c\u7684bin/Osh\uff1a\n\u56e0\u6b64\uff0c\u6211\u6b63\u5728\u52aa\u529b\u8ba9\u201c\u77f3\u6cb9\u201d\u53d8\u5f97\u66f4\u597d\u7528\u3002(\u5de5\u4e1a\u548c\u4fe1\u606f\u5316\u90e8\u7535\u5b50\u79d1\u5b66\u6280\u672f\u60c5\u62a5\u7814\u7a76\u6240\u9648\u7693)\u3002\u5982\u679c\u4f60\u60f3\u5e2e\u5fd9\uff0c\u5982\u679c\u4f60\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u4f38\u51fa\u63f4\u52a9\u4e4b\u624b\u3002\n\u611f\u8c22Till Schr\u00f6der\u5bf9\u77f3\u6cb9\u8bed\u8a00\u7684\u5de8\u5927\u53cd\u9988\u3002\u4f8b\u5982\uff0c\u4ed6\u6ce8\u610f\u5230\u6211\u7ed9catchbuiltin(\u73b0\u5728\u662fRun)\u8d77\u4e86\u4e2a\u7b28\u62d9\u7684\u540d\u5b57\u3002\n\u611f\u8c22\u8fed\u6208\u00b7\u5361\u83b1\u8d3e\u591a\u6b21\u66f4\u65b0\u77f3\u6cb9\u6587\u6863\u3002\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u52aa\u529b\uff01\n\u8fd94\u4e2a\u529f\u80fd\u5e76\u4e0d\u662fOSH\u4e2d\u552f\u4e00\u7684\u529f\u80fd\uff0c\u4f46\u6211\u8ba4\u4e3a\u5b83\u4eec\u5df2\u7ecf\u8db3\u591f\u4e86\uff01\n\u6211\u7528shell\u4fee\u590d\u4e86\u5176\u4ed6\u95ee\u9898\uff0c\u5e76\u7528\u6807\u7b7e\u4e3a#Real-Problems\u7684\u5e16\u5b50\u6765\u63cf\u8ff0\u5b83\u4eec\u3002\u6211\u628a\u8fd9\u4e2a\u6807\u7b7e\u8d34\u5230\u4e86\u8fd9\u7bc7\u5e16\u5b50\u4e0a\uff0c\u56e0\u4e3aCOMMAND_SUB_ERREXIT\u89e3\u51b3\u4e86\u6731\u8389\u5a05\u00b7\u57c3\u6587\u65af(Julia Evans)\u56f0\u60d1\u7684\u95ee\u9898\u3002\n\u6211\u76f8\u4fe1Oil\u4f1a\u57283\u4e2a\u7ef4\u5ea6\u4e0a\u6bd4bash\u66f4\u5feb\uff1a\u89e3\u6790\u901f\u5ea6\u3001\u8fd0\u884c\u65f6\u8ba1\u7b97\u901f\u5ea6\u548c\u8fd0\u884c\u65f6I/O\u901f\u5ea6\u3002\u7136\u800c\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u5728\u5b8c\u6210\u5783\u573e\u6536\u96c6\u5668\u540e\u8fdb\u884c\u4f18\u5316\uff0c\u800c\u6211\u4eec\u7f3a\u5c11\u4eba\u624b\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\u6211\u5e0c\u671bOil\u6709\u66f4\u597d\u7684\u5f00\u53d1\u5de5\u5177\uff1a\u8ddf\u8e2a\u3001\u8c03\u8bd5\u548c\u5d29\u6e83\u8f6c\u50a8\u3002\u51e0\u5e74\u524d\u6211\u5236\u4f5c\u4e86\u4e00\u4e2a\u5d29\u6e83\u8f6c\u50a8\u7684\u539f\u578b\uff0c\u4f46\u6ca1\u6709\u6536\u5230\u592a\u591a\u53cd\u9988\u3002\u6211\u8ba4\u4e3a\uff0c\u804c\u4e1a\u5b89\u5168\u4e0e\u5065\u5eb7\u5fc5\u987b\u66f4\u52a0\u6210\u719f\uff0c\u624d\u80fd\u4ee4\u4eba\u4fe1\u670d\u3002\n\u5206\u53e3\u8bd1\u5458(\u95ee\u9898704)\u6709\u591a\u4e2a\u7528\u4f8b\u3002\u5728CPython\u4e2d\u6dfb\u52a0\u8fd9\u4e2a\u7279\u6027\u7684\u5c1d\u8bd5\u5df2\u7ecf\u5931\u8d25\u4e86\u5f88\u591a\u6b21\uff0c\u800c\u50cfTcl\u548cLua\u8fd9\u6837\u7684\u5d4c\u5165\u5f0f\u8bed\u8a00\u5f88\u597d\u5730\u5229\u7528\u4e86\u5b83\u4eec\u3002\n\u6211\u751a\u81f3\u8ba4\u4e3a\u5728Oil\u4e2d\u5d4c\u5165WebAssembly\u6709\u5f88\u597d\u7684\u7528\u4f8b\uff0c\u6bd4\u59827\u6708\u4efd\u5173\u4e8e\u5e38\u89c4\u8bed\u8a00\u7684\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\uff0c\u53e6\u4e00\u4e2a\u7528\u4f8b\u662f\u6253\u5305\u548c\u5206\u53d1\u53ef\u79fb\u690d\u7684\u5f00\u53d1\u4f9d\u8d56\u9879\uff0c\u6bd4\u5982CommonMark\u6e32\u67d3\u5668\u3002\u8fd9\u4e2a\u95ee\u9898\u5bfc\u81f4\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u5f00\u53d1\u8fc7\u7a0b\u6469\u64e6\u3002", "note_en": "On a  lobste.rs thread about the rationale for the Fennel language, Iposted this summary of why Oil exists:\n But Oil has a lot more than that, including unifying separate ad hocexpression languages ...\n This post elaborates on these points. I&#39;ve condensed the rationale into fourcritical features for the  OSH language.\n I give examples of each feature, link to docs (in progress), and comment on thefuture of the project.\n     Recall that  OSH is designed to run existing shell scripts, andhas done that  since early 2018.\n It also fixes warts in the shell language with  opt-in features. These arethe four most important ones.\n   I just finished an overhaul of shell&#39;s flaky  set -e /  errexit mechanism.I&#39;m excited by this, because I started it last year, but put it on the backburner after being stumped!\n I believe I&#39;ve figured out every problem now, and would like your feedback.The simple invariant is that  OSH never loses an exit code, which is nottrue of POSIX shell or  bash. Here&#39;s a summary of the enhancements:\n strict_errexit - A shell option to  detect cases where you would loseerrors in shell, like  if myfunc. This improves your shell scripts, even ifyou run them under another shell! In other words, OSH can be used as a devtool.\n inherit_errexit - OSH implements this bash 4.4 option, which is a partialfix for the &#34;command sub errexit&#34; problem.\n command_sub_errexit - A shell option to check for failure at the end ofevery command sub, so you don&#39;t lose errors. This fixes the problem shown in the last panel of a  recentcomic by Julia Evans: &#34;bash is weird sometimes&#34;\n process_sub_fail - Like  pipefail, but for process substitutions. Itallows  errexit to &#34;see&#34; the failure caused by process subs, like the  sortinvocation in  cat foo.txt &lt;(sort /oops/error), @_process_sub_status: A variable that&#39;s analogous to  ${PIPESTATUS[@]}.You may want to inspect the exit status of all processes.\n The  run builtin turns  errexit back on, so  if run myfunc is safe. Italso provides fine-grained control over exit codes.\n Yes, there are many solutions, because shell has many problems! But you don&#39;thave to remember all these names. Add  shopt --set oil:basic to the top ofyour program to turn all options. The  strict_errexit failures will remindyou to use the  run wrapper.\n (Aside: I was able to fix all these problems cleanly in the interpreter. Ispent time a lot of time on  Oil&#39;s architecture 4 yearsago precisely so I could fixsuch subtle problems. When the code has a good structure, the &#34;right place&#34;for a fix reveals itself to you. Oil is still improving!)\n   QSN is the foundation for  Structured Data inOil. It removesthe need to invent ad hoc (and often broken) formats every time you need todeal with user-supplied data in shell. In other words, Oil scripts have analternative to messy parsing and splitting.\n  Here are some short examples. The  write builtin prints its args to stdout,and it accepts a  --qsn flag:\n # Print filenames ONE PER LINE. If a name contains a# newline or other special char, it&#39;s QSN-encoded like# &#39;multi-line \\n name with NUL \\0 byte&#39;write --qsn -- *.txt\n  cat list.txt | while read --line --qsn { # _line is implictly set by &#39;read&#39; rm -- $_line}\n I also implemented  read -0 as a synonym for bash&#39;s obscure  read -r -d &#39;&#39;.This allows you to consume  find -print0 output in shell, like  xargs -0does. This format is distinct from QSN, but it&#39;s now easy to convert back andforth between them.\n This is the first cut of  QSN support. I expect it to evolve based on yourfeedback!\n    This was done in summer 2019. I described it in  Simple WordEvaluation earlier this year, and you can see examples in Oil Language Idioms.\n        This blog began in 2016 with an explanation of  staticparsing. I didn&#39;t mention it in the comment quoted inthe intro, but it&#39;s still a crucial part of the project.\n I was reminded how important this is when noticing that the authors of bothPerl 5 and the rc shell  made complaints about shell&#39;s dynamicparsing, going back 20-30years!\n This foundation is still paying dividends. I recently used the static parserto create detailed error messages for command subs:\n $  shopt --set errexit command_sub_errexit $  d=$(date %x)date: invalid date \u2018%x\u2019 d=$(date %x) ^~[ interactive ]:13: fatal: Command sub exited with status 1 ...\n  $  shopt --set process_sub_fail $  cat /dev/null &lt;(sort oops)sort: cannot read: oops: No such file or directory cat /dev/null &lt;(sort oops) ^~[ interactive ]:27: fatal: Exiting with status 2 ...\n  In addition, Travis Everett has worked on a shell dependency bundler whichrelies on static parsing.\n    It was indeed useful to explicitly write out rationale for the language. I&#39;vedone that many times with posts tagged # why-a-new-shell, butexplaining it again helps, even after 4 years. The project is evolving andgetting crisper.\n   With the overhaul of  errexit and the  QSN decoder, I believe we now haveall the bases for the  OSH language covered! These featureswill be out with the next release.\n The claim is that  these four features alone justify a new Unix shell. Ifwe finish the C++ translation, and end the project here, it would beworthwhile.\n  Elimination of &#34;quoting hell&#34;. Let&#39;s fix it once and for all, rather thanadmonishing every new shell programmer about it for the next 30 years, ashas been done for the past 30!\n If you disagree,  let me know! I would like to hear what otherwarts in the  shell language need to be fixed or otherwise addressed.\n (I&#39;m leaving out the interactive shell here, as I believe the first priority isa better shell for programming and automation. A &#34;cloud shell&#34;, if you will.)\n   Back in January, I was already  concerned about the scope of the project. Iwrote that  the biggest cut to theproject would be that Oil would be based on  strings, rather thanPython-like data types.\n  The  OSH language is a compatible shell based on  strings(and arrays of strings). Assignments look like  local x=mystr.\n The  Oil language has Python-like  types and expressions.Assignments look like  var x = 42 + a[i] + f(x, y). It has agarbage-collected heap of recursive data structures.\n So what I&#39;m saying now is that the priority going forward is to polish the OSH language, and put off the Oil language until the hazyfuture.\n That means finishing the translation to C++, hooking up the  garbagecollector, and writing  documentation. It may mean preparing the code tobe embedded in another application, like the  fish shell. (I&#39;ve discussed thiswith the maintainer, and there&#39;s some interest. But it&#39;s a lot of work, whichshouldn&#39;t be taken for granted, and there are unsolved problems.)\n Achieving this OSH language milestone feels very doable, since everythingalready works in Python, and something like  915 out of  1685 spec testspass in C++ (yielding a 30x - 50x speedup).\n   But I&#39;m not giving up on the Oil language! I just need help. It exists inprototype form, and your feedback will motivate me to work on it.\n  Four Features of the Oil Language. This post narrowed down OSH to four majorfeatures, and Oil also has four:\n Serialization formats like JSON and QTSV( proposal). Thelatter is a format for  typed tables, built on topof  QSN.\n  Big Changes to the Oil Language. A list of recent changes I&#39;ve made, whichshould give potential contributors a feel for the language.\n What Distinguishes Python, JS, and Ruby from Perl and PHP. The formerlanguages have a clean data model / memory model: a garbage collected heap withreference semantics.\n  Comments on Comics. I can use these  recentcomics as a way to explain the OSH language. (See other posts tagged # comic.)\n   I described 4 essential features of an improved shell language.  Let meknow what you think is missing.\n If you haven&#39;t read it already, see  Why Create a UnixShell?. It&#39;s the most popular page on this site,though I still need to update it for 2021.\n I then proposed a focus on making the OSH language &#34;production ready&#34;. I&#39;mstill going to work on the Oil language, but I need help finishing it.\n   Speaking of which, several people have pointed out that the dev process for Oilis difficult. I&#39;ve addressed this recently by removing spew from the buildlogs, and adding a lint check for more portable shebangs with  /usr/bin/env.(This just triggered and prevented a regression!)\n I still would like to make a screencast to show how easy Oil is to work on.After cloning, a 10 or 20 second build process should get you a working bin/osh:\n   So I&#39;m trying to make Oil more friendly to work on. Reach out if you want tohelp, and if you run into problems.\n   Thanks to  Till Schr\u00f6der for great feedback on theOil language. For example, he noticed that I had awkwardly named the  catchbuiltin (now  run).\n Thanks to Diego Calleja for many updates the Oil docs. This is a huge effortby itself!\n   Those 4 features aren&#39;t the only ones in OSH, but I claim they are sufficient!\n I fixed other problems with shell, and described them with posts tagged# real-problems. I&#39;ve applied that tag to this post, since command_sub_errexit fixes the problem that Julia Evans was perplexed by.\n I believe Oil will be  faster than  bash along 3 dimensions: parsingspeed, runtime compute speed, and runtime I/O speed. However this may requireoptimization after finishing the garbage collector, and we&#39;re short on hands todo that.\n I&#39;d like Oil to have better  dev tools: tracing, debugging, and crash dumps.I prototyped a crash dump a couple years ago, but I didn&#39;t receive muchfeedback on it. I think OSH has to be more mature before that&#39;s compelling.\n Subinterpreters ( issue 704) have multiple use cases. There havebeen many failed attempts to add this feature to CPython, whereas embeddedlanguages like Tcl and Lua make good use of them.\n I even think there are good use cases for embedding WebAssembly in Oil, e.g. asmentioned in the  July post on regular languages.Another use case is to package and distribute portable dev dependencies, likethe  CommonMark renderer. This problem has contributedto the dev process friction mentioned above.", "posttime": "2020-10-24 07:30:25", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "shell,justify", "title": "\u8bc1\u660e\u65b0\u7684Unix shell\u662f\u5408\u7406\u7684\u56db\u4e2a\u7279\u6027", "title_en": "Four features that justify a new Unix shell", "transed": 1, "url": "http://www.oilshell.org/blog/2020/10/osh-features.html", "via": "", "real_tags": ["shell", "justify"]}, {"category": "", "categoryclass": "", "imagename": "171903a667ad5fdc59448a1b10501cfc.jpg", "infoid": 1030823, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5982\u679c\u4f60\u60f3\u7ed8\u5236\u86cb\u767d\u8d28\u7684\u6700\u5c0f\u90e8\u5206\uff0c\u4f60\u53ea\u6709\u51e0\u4e2a\u9009\u62e9\uff1a\u4f60\u53ef\u4ee5\u54c4\u9a97\u6570\u767e\u4e07\u4e2a\u5355\u72ec\u7684\u86cb\u767d\u8d28\u5206\u5b50\u6392\u5217\u6210\u6676\u4f53\uff0c\u7136\u540e\u7528x\u5c04\u7ebf\u7ed3\u6676\u5b66\u5bf9\u5b83\u4eec\u8fdb\u884c\u5206\u6790\u3002\u6216\u8005\u4f60\u53ef\u4ee5\u5feb\u901f\u51bb\u7ed3\u86cb\u767d\u8d28\u7684\u62f7\u8d1d\uff0c\u7136\u540e\u7528\u7535\u5b50\u8f70\u51fb\u5b83\u4eec\uff0c\u8fd9\u662f\u4e00\u79cd\u88ab\u79f0\u4e3a\u51b7\u51bb\u7535\u5b50\u663e\u5fae\u955c(Cryo-EM)\u7684\u8f83\u4f4e\u5206\u8fa8\u7387\u7684\u65b9\u6cd5\u3002\u73b0\u5728\uff0c\u79d1\u5b66\u5bb6\u4eec\u9996\u6b21\u5c06\u4f4e\u6e29\u7535\u5b50\u663e\u5fae\u955c\u7684\u5206\u8fa8\u7387\u63d0\u9ad8\u5230\u539f\u5b50\u6c34\u5e73\uff0c\u4f7f\u4ed6\u4eec\u80fd\u591f\u7cbe\u786e\u5b9a\u4f4d\u5404\u79cd\u86cb\u767d\u8d28\u4e2d\u5355\u4e2a\u539f\u5b50\u7684\u4f4d\u7f6e\uff0c\u5176\u5206\u8fa8\u7387\u53ef\u4e0eX\u5c04\u7ebf\u7ed3\u6676\u5b66\u76f8\u5ab2\u7f8e\u3002\n\u5bc6\u6b47\u6839\u5927\u5b66\u5b89\u5a1c\u5821\u5206\u6821(University of Michigan\uff0cAnn Arbor)\u7684\u4f4e\u6e29EM\u4e13\u5bb6\u6885\u52d2\u59ae\u00b7\u6b27\u5e0c(Melanie Ohi)\u8bf4\uff1a\u201c\u8fd9\u771f\u662f\u4ee4\u4eba\u60ca\u53f9\u3002\u201d\u201c\u770b\u5230\u8fd9\u4e2a\u5c42\u6b21\u7684\u7ec6\u8282\uff0c\u771f\u662f\u592a\u7f8e\u4e86\u3002\u201d\u7531\u4e8e\u63d0\u9ad8\u7684\u5206\u8fa8\u7387\u51c6\u786e\u5730\u63ed\u793a\u4e86\u590d\u6742\u7684\u7ec6\u80de\u673a\u5668\u662f\u5982\u4f55\u5b8c\u6210\u5b83\u4eec\u7684\u5de5\u4f5c\u7684\uff0c\u4f4e\u6e29EM\u7684\u6539\u8fdb\u5e94\u8be5\u4f1a\u4ea7\u751f\u5bf9\u751f\u7269\u5b66\u7684\u65e0\u6570\u65b0\u89c1\u89e3\u3002\n\u4e3a\u4e86\u7ed8\u5236\u86cb\u767d\u8d28\u7ed3\u6784\u56fe\uff0c\u81ea20\u4e16\u7eaa50\u5e74\u4ee3\u672b\u4ee5\u6765\uff0c\u79d1\u5b66\u5bb6\u4eec\u4e00\u76f4\u5728\u4f7f\u7528X\u5c04\u7ebf\u7ed3\u6676\u5b66\u3002\u901a\u8fc7\u7528X\u5c04\u7ebf\u8f70\u51fb\u7ed3\u6676\u7684\u86cb\u767d\u8d28\uff0c\u5e76\u5206\u6790X\u5c04\u7ebf\u53cd\u5f39\u7684\u65b9\u5f0f\uff0c\u79d1\u5b66\u5bb6\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u86cb\u767d\u8d28\u53ef\u80fd\u7684\u7ec4\u6210\u548c\u5f62\u72b6\u3002\u51e0\u5341\u5e74\u6765\u5bf9X\u5c04\u7ebf\u675f\u3001\u63a2\u6d4b\u5668\u548c\u8ba1\u7b97\u673a\u80fd\u529b\u7684\u6539\u8fdb\u4f7f\u8fd9\u79cd\u65b9\u6cd5\u53d8\u5f97\u5feb\u901f\u800c\u51c6\u786e\u3002\u4f46\u662f\uff0c\u5f53\u86cb\u767d\u8d28\u7279\u522b\u5927\uff0c\u5728\u6838\u7cd6\u4f53\u7b49\u590d\u5408\u4f53\u4e2d\u5de5\u4f5c\uff0c\u6216\u8005\u4e0d\u80fd\u7ed3\u6676\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u4e0d\u80fd\u5f88\u597d\u5730\u53d1\u6325\u4f5c\u7528\uff0c\u5c31\u50cf\u8bb8\u591a\u4f4d\u4e8e\u7ec6\u80de\u819c\u4e2d\u7684\u86cb\u767d\u8d28\u4e00\u6837\u3002\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7814\u7a76\u4eba\u5458\u4f7f\u7528\u4f4e\u6e29\u7535\u78c1\u53d1\u5c04\u7535\u5b50\u5230\u4e0d\u9700\u8981\u7ed3\u6676\u7684\u51b7\u51bb\u86cb\u767d\u8d28\u526f\u672c\u4e0a\uff1b\u63a2\u6d4b\u5668\u8bb0\u5f55\u7535\u5b50\u7684\u504f\u8f6c\uff0c\u590d\u6742\u7684\u8f6f\u4ef6\u5c06\u56fe\u50cf\u7f1d\u5408\u5728\u4e00\u8d77\uff0c\u8ba1\u7b97\u51fa\u86cb\u767d\u8d28\u7684\u7ec4\u6210\u548c\u5f62\u72b6\u3002\u65e5\u672c\u7684\u7814\u7a76\u4eba\u5458\u6b64\u524d\u66fe\u8868\u793a\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5c06\u5206\u8fa8\u7387\u7f29\u5c0f\u52301.54\u57c3-\u8fd8\u6ca1\u6709\u8fbe\u5230\u533a\u5206\u5355\u4e2a\u539f\u5b50\u7684\u7a0b\u5ea6-\u4e00\u79cd\u540d\u4e3a\u8f7d\u94c1\u86cb\u767d\u7684\u80a0\u9053\u86cb\u767d\u8d28\uff0c\u5b83\u7ed3\u5408\u548c\u50a8\u5b58\u94c1\u3002\u73b0\u5728\uff0c\u5728\u7535\u5b50\u675f\u6280\u672f\u3001\u63a2\u6d4b\u5668\u548c\u8f6f\u4ef6\u7684\u6539\u8fdb\u7684\u5e2e\u52a9\u4e0b\uff0c\u6765\u81ea\u82f1\u56fd\u548c\u5fb7\u56fd\u7684\u4e24\u7ec4\u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u5c06\u8fd9\u4e00\u8303\u56f4\u7f29\u5c0f\u52301.25\u57c3\u6216\u66f4\u9ad8\uff0c\u8db3\u591f\u9510\u5229\uff0c\u8db3\u4ee5\u8ba1\u7b97\u51fa\u5355\u4e2a\u539f\u5b50\u7684\u4f4d\u7f6e\uff0c\u4ed6\u4eec\u4eca\u5929\u5728\u300a\u81ea\u7136\u300b\u6742\u5fd7\u4e0a\u62a5\u9053\u3002\n\u589e\u5f3a\u7684\u5206\u8fa8\u7387\u53ef\u80fd\u4f1a\u52a0\u901f\u7ed3\u6784\u751f\u7269\u5b66\u5bb6\u5df2\u7ecf\u5728\u5411\u4f4e\u6e29EM\u7684\u8f6c\u53d8\u3002\u76ee\u524d\uff0c\u8fd9\u9879\u6280\u672f\u53ea\u5bf9\u5f02\u5e38\u521a\u6027\u7684\u86cb\u767d\u8d28\u8d77\u4f5c\u7528\u3002\u4e0b\u4e00\u6b65\uff0c\u7814\u7a76\u4eba\u5458\u5c06\u52aa\u529b\u7528\u4e0d\u90a3\u4e48\u50f5\u786c\u7684\u5927\u578b\u86cb\u767d\u8d28\u590d\u5408\u4f53(\u5982\u526a\u63a5\u4f53)\u5b9e\u73b0\u7c7b\u4f3c\u7684\u6e05\u6670\u5206\u8fa8\u7387\uff0c\u526a\u63a5\u4f53\u662f\u86cb\u767d\u8d28\u548cRNA\u5206\u5b50\u7684\u5927\u578b\u590d\u5408\u4f53\uff0c\u5b83\u4ece\u6ce8\u5b9a\u8981\u8f6c\u5316\u4e3a\u86cb\u767d\u8d28\u7684RNA\u4e2d\u526a\u4e0b\u201c\u5185\u542b\u5b50\u201d\u3002", "note_en": "If you want to map the tiniest parts of a protein, you only have a few options: You can coax millions of individual protein molecules to align into crystals and analyze them using x-ray crystallography. Or you can flash-freeze copies of the protein and bombard them with electrons, a lower resolution method called cryo\u2013electron microscopy (cryo-EM). Now, for the first time, scientists have sharpened cryo-EM\u2019s resolution to the atomic level, allowing them to pinpoint the positions of individual atoms in a variety of proteins at a resolution that rivals x-ray crystallography\u2019s.\n \u201cThis is just amazing,\u201d says Melanie Ohi, a cryo-EM expert at the University of Michigan, Ann Arbor. \u201cTo see this level of detail, it\u2019s just beautiful.\u201d Because the heightened resolution reveals exactly how complex cellular machines carry out their jobs, improvements in cryo-EM should yield countless new insights into biology.\n To map protein structures, scientists have been using x-ray crystallography since the late 1950s. By bombarding crystallized proteins with x-rays and analyzing the way the x-rays ricochet off, scientists can work out a protein\u2019s likely makeup and shape. Decades of improvements to the x-ray beams, detectors, and computer power have made the approach fast and accurate. But the approach doesn\u2019t work well when proteins are exceptionally large, work in complexes such as the ribosome, or can\u2019t be crystallized, as is the case with many proteins that sit in cell membranes.\n In contrast, researchers using cryo-EM fire electrons at copies of frozen proteins that need not be crystallized; detectors record the electrons\u2019 deflections, and sophisticated software stitches the images together to work out the proteins\u2019 makeup and shape. Researchers in Japan had previously shown they could narrow the resolution to 1.54 angstroms\u2014not quite reaching the point where they could distinguish individual atoms\u2014in a gut protein called apoferritin, which binds and stores iron. Now, with the help of improvements in electron beam technology, detectors, and software, two groups of researchers\u2014from the United Kingdom and Germany\u2014 have narrowed that to 1.25 angstroms or better,  sharp enough to work out the position of individual atoms, they report today in  Nature.\n The enhanced resolution  could accelerate a shift to cryo-EM already underway among structural biologists. For now, the technique only works with proteins that are unusually rigid. Next, researchers will strive to achieve similar sharp resolution with less rigid, large protein complexes, such as the spliceosome, a large complex of proteins and RNA molecules that cuts out \u201cintrons\u201d from RNA destined to be converted into proteins.", "posttime": "2020-10-24 07:30:15", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7535\u5b50\u663e\u5fae\u955c,electron,\u86cb\u767d\u8d28", "title": "\u4f4e\u6e29\u7535\u5b50\u663e\u5fae\u955c\u7a81\u7834\u4e86\u539f\u5b50\u5206\u8fa8\u7387\u7684\u969c\u788d", "title_en": "Cryo\u2013electron microscopy breaks the atomic resolution barrier", "transed": 1, "url": "https://www.sciencemag.org/news/2020/10/cryo-electron-microscopy-breaks-atomic-resolution-barrier-last", "via": "", "real_tags": ["\u7535\u5b50\u663e\u5fae\u955c", "electron", "\u86cb\u767d\u8d28"]}, {"category": "", "categoryclass": "", "imagename": "ab7b67d844050690a20bad2758ddf1db.png", "infoid": 1030822, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "2020\u5e7410\u670810\u65e5\uff0c\u9a6c\u4e01\u00b7\u9a6c\u5c14\u00b7\u9a6c\u5229\u4fee\u6539\u4e86\u674e\u741b\u00b7\u738b\u7684Palo Alto Tiny Basic\u7684\u7b2c\u4e8c\u7248\uff0c\u4ee5\u4fbf\u5728\u4ed6\u7684ASM80\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u6c47\u7f16\u5668\u548c\u4eff\u771f\u5668\u4e0a\u8fd0\u884c\u3002\u5728\u4ed6\u7684\u8bb8\u53ef\u4e0b\uff0c\u6211\u5df2\u7ecf\u5c06\u6e90\u4ee3\u7801\u4e0a\u4f20\u5230GitHub\u3002\nPalo Alto Tiny Basic\u8bde\u751f\u4e8e\u7531\u4eba\u6c11\u8ba1\u7b97\u673a\u516c\u53f8\u53d1\u8d77\u5e76\u7531\u5bb6\u5ead\u917f\u9020\u8ba1\u7b97\u673a\u4ff1\u4e50\u90e8\u53d1\u8d77\u7684\u5fae\u578bBASIC\u8fd0\u52a8\u3002\u6210\u5458\u53f2\u8482\u592b\u00b7\u6c83\u5179\u5c3c\u4e9a\u514b(Steve Wozniak)\u548c\u6c64\u59c6\u00b7\u76ae\u7279\u66fc(Tom Pittman)\u5c06\u5f00\u53d1\u81ea\u5df1\u7684\u57fa\u7840\u77e5\u8bc6(\u5206\u522b\u662fInteger Basic\u548c6800 Tiny Basic)\u3002\u738b\u5206\u6790\u4e86\u725b\u90ce\u661f\u7684Basic\u4ee3\u7801\uff0c\u5e76\u5bf9Tiny Basic Extended\u8fdb\u884c\u4e86\u7f16\u8f91\u3002\u738b\u5728\u65f6\u4e8b\u901a\u8baf\u4e2d\u53d1\u8868\u4e868080\u7684\u88c5\u8f7d\u673a\uff0c\u8bc4\u8bba\u4e86\u7ed9\u4e1a\u4f59\u7231\u597d\u8005\u7684\u516c\u5f00\u4fe1\uff1a\nAltair Basic\u6709\u4e00\u4e2a\u4e8c\u5341\u5b57\u8282\u957f\u6216\u4e8c\u5341\u4e00\u5b57\u8282\u957f\u7684\u5f15\u5bfc\u52a0\u8f7d\u7a0b\u5e8f\u3002\u539f\u5219\u4e0a\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u5f15\u5bfc\u7a0b\u5e8f\u52a0\u8f7d\u60a8\u81ea\u5df1\u7684\u52a0\u8f7d\u5668\uff0c\u7136\u540e\u8be5\u52a0\u8f7d\u5668\u5c06\u52a0\u8f7d\u5230\u60a8\u7684\u7a0b\u5e8f\u4e2d\u3002\u7136\u800c\uff0c\u7531\u4e8e\u6bd4\u5c14\u00b7\u76d6\u8328\u5148\u751f\u58f0\u79f0\u4ed6\u8fd8\u6ca1\u6709\u652f\u4ed8\u8db3\u591f\u7684\u94b1\uff0c\u6240\u4ee5\u4ed6\u6709\u79f0\u4eba\u4eec\u4e3a\u5c0f\u5077\u7684\u60c5\u7eea\u3002(\u53c2\u89c1HBCC\u65f6\u4e8b\u901a\u8baf\u201812-1\u3002)\u3002\u6211\u51b3\u5b9a\u81ea\u5df1\u7f16\u5199\u4e00\u4e2a\u4ee3\u7801\u3002\u7ed3\u679c\u662f\u4e00\u4e2a16\u5b57\u8282\u957f\u7684\u5f15\u5bfc\u3002\u8fd9\u4e2a\u8fd8\u662f\u592a\u957f\u4e86\uff0c\u4e5f\u8bb8\u6211\u4eec\u7684\u4e13\u4e1a\u4e13\u5bb6\u53ef\u4ee5\u628a\u5b83\u7f29\u77ed\u4e00\u4e9b\u3002\u6682\u65f6\u6b22\u8fce\u4f60\u6284\u88ad\u6211\u7684\uff0c\u6211\u4e0d\u4f1a\u53eb\u4f60\u5c0f\u5077(\u5305\u62ec\u76d6\u8328\u5148\u751f)\u3002\n\u56e0\u6b64\uff0c\u4e0d\u8db3\u4e3a\u5947\u7684\u662f\uff0c\u674e\u741b\u00b7\u738b(\u97f3\u8bd1)\u514d\u8d39\u63d0\u4f9b\u4e86\u4ed6\u7684\u57fa\u672c\u5b9e\u73b0\u3002(\u6211\u5728\u4e3aBasic Interpreter\u6587\u7ae0\u6240\u505a\u7684\u7814\u7a76\u4e2d\u53d1\u73b0\u4e86\u9605\u8bfb\u65e7\u7684Homebrew\u65f6\u4e8b\u901a\u8baf\u6587\u7ae0\u7684\u8fd9\u53e5\u8bdd\u3002)\u3002\nTiny Basic\u552f\u4e00\u8f83\u5c0f\u7684\u5b9e\u73b0\u662fMinol\uff0c\u5b83\u4f7f\u7528\u65e0\u7b26\u53f7\u5b57\u8282\u800c\u4e0d\u662f\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5e76\u4e14\u4f7f\u7528\u975e\u6807\u51c6\u547d\u4ee4\u3002\u540c\u6837\u57282KB\u4ee5\u4e0b\uff0c\u5f53\u5e38\u7528\u7684\u53e3\u8bd1\u65b9\u6cd5\u662f4KB ROM\u65f6\uff0cPalo Alto Tmall Basic\u652f\u6301\u66f4\u5178\u578b\u7684\u8bed\u8a00\u7248\u672c\uff0c\u540c\u65f6\u4e3aTRS-80\u3001Bally Astrocade\u3001Sharp PC-1211\u548cCromemco\u7684\u7279\u5b9a\u786c\u4ef6\u7559\u51fa\u4e86\u5e7f\u6cdb\u7684\u5b9a\u5236\u7a7a\u95f4\uff0c\u8fd9\u4e00\u70b9\u88ab\u591a\u6b21\u5229\u7528\u3002\n\u73a9\u6211\u5c0f\u65f6\u5019\u7528\u8fc7\u7684\u4e09\u53f0\u7535\u8111\u80cc\u540e\u7684\u6e90\u4ee3\u7801\u5f88\u6709\u8da3\u3002\u6211\u5b66\u5230\u4e86\u4e00\u4e9b\u4e1c\u897f\uff1a\n\u8be5\u4ee3\u7801\u7684\u7ed3\u6784\u975e\u5e38\u597d\uff0c\u5e76\u4e14\u5177\u6709\u5f88\u597d\u7684\u53ef\u6269\u5c55\u6027\u3002\u6211\u5728\u4e0d\u5230\u4e00\u4e2a\u5c0f\u65f6\u7684\u65f6\u95f4\u91cc\u6dfb\u52a0\u4e86\u51e0\u4e2a\u547d\u4ee4(PEEK\u3001FRE())\u3002\u60a8\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u5728\u5173\u952e\u5b57\u8868\u4e2d\u63d2\u5165\u65b0\u547d\u4ee4\uff0c\u7136\u540e\u5728\u5176\u4ed6\u5730\u65b9\u8c03\u6574\u4ee3\u7801\u3002\n\u6211\u975e\u5e38\u5174\u594b\u5730\u5728\u4ee3\u7801\u4e2d\u53d1\u73b0\u4e86\u51e0\u4e2a\u5c0f\u9519\u8bef\uff1a\u4f17\u6240\u5468\u77e5\uff0c\u7cfb\u7edf\u53ea\u6709\u4e09\u6761\u9519\u8bef\u6d88\u606f(\u201c\u4ec0\u4e48\uff1f\u201d\u5bf9\u4e8e\u8bed\u6cd5\u9519\u8bef\uff0c\u201c\u5982\u4f55\uff1f\u201d\u5bf9\u4e8e\u529f\u80fd\u9519\u8bef\uff0c\u201c\u62b1\u6b49\u201d\u8868\u793a\u5bb9\u91cf\u95ee\u9898)\u3002\u5982\u679c\u5728\u6ca1\u6709\u76f8\u5e94\u7684GOSUB\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u8fd4\u56de\uff0c\u60a8\u4f1a\u5f97\u5230\u4e00\u4e2a\u201c\u4ec0\u4e48\uff1f\u201d\u800c\u4e0d\u662f\u95ee\u201c\u600e\u4e48\u505a\uff1f\u201d\n10\u8f93\u5165\u201cHello world\u201d\u5728\u5e94\u8be5\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef\u65f6\u5145\u5f53\u6709\u6548\u7684\u6253\u5370\u8bed\u53e5\uff0c\u56e0\u4e3a\u6ca1\u6709\u6307\u5b9a\u63a5\u6536\u8f93\u5165\u7684\u53d8\u91cf\u3002\n\u8be5\u8bed\u8a00\u53ea\u652f\u6301\u6574\u6570\uff0c\u4f46\u5c0f\u6570\u4e0d\u4f1a\u50cf\u5e94\u6709\u7684\u90a3\u6837\u88ab\u5ffd\u7565\u3002\u6253\u53701.1\u30011.2\u8f93\u51fa1\u548c0\u3002\n\u90a3\u91cc\u6709\u4e00\u4e2a\u590d\u6d3b\u8282\u5f69\u86cb\uff01\u201cW\u201d\u3001\u201can\u201d\u3001\u201cG\u201d\nRST1\u4f8b\u7a0b\u662f\u4e00\u9879\u827a\u672f\u4f5c\u54c1\uff0c\u5b83\u4f7f\u7528\u8c03\u7528\u5806\u6808\u6765\u786e\u5b9a\u5176\u53c2\u6570\u7684\u4f4d\u7f6e\uff0c\u5176\u4e2dRST1\u4e4b\u540e\u7684\u5b57\u8282\u6307\u5b9a\u8981\u5339\u914d\u7684\u5b57\u7b26\uff0cRST1\u4e4b\u540e\u7684\u5b57\u8282\u6307\u5b9a\u8981\u8df3\u8f6c\u5230\u7684\u504f\u79fb\u91cf\u3002Wang\u80fd\u591f\u7f16\u5199\u5982\u6b64\u9ad8\u6548\u7684\u5185\u5b58\u4ee3\u7801\uff0c\u8fd9\u5c31\u662f\u4ed6\u4e0d\u9700\u8981\u5b9e\u73b0IL\u865a\u62df\u673a\u7684\u539f\u56e0\u3002", "note_en": "October 10, 2020        Martin Mal\u00fd has adapted Version 2 of Li Chen Wang\u2019s  Palo Alto Tiny BASIC to run on his  ASM80 browser-based assembler and emulator. I\u2019ve uploaded  the source code, with his permission, to GitHub.\n  Palo Alto Tiny BASIC emerged out of the Tiny BASIC movement started by People\u2019s Computer Company and taken up by the Homebrew Computer Club. Fellow members Steve Wozniak and Tom Pittman would develop their own BASICs (Integer BASIC and 6800 Tiny BASIC respectively). Wang analyzed the Altair BASIC code and contributed edits to Tiny BASIC Extended. Wang published in the newsletter a loader for the 8080, commenting on the  Open Letter to Hobbyists:\n Altair Basic has a bootstrap loader of twenty or twenty one bytes long. In principle, you can use this bootstrap to load in your own loader which will then load in your program. However, since Mr. Bill Gates claims that he did not yet payed [sic] enough and is in the mood of calling people thieves. (See HBCC newsletter \u201912-1.) I decided to code one myself. What comes out is a bootstrap of sixteen bytes long. This is still too long, maybe our professional experts can make it shorter. For the time being you are welcome to copy mine and I will not call you a thief (this includes Mr. Gates).\n No surprise then that Li Chen Wang made his BASIC implementation available for free. (I found this quote reading old Homebrew newsletter articles in my research for the  BASIC interpreter article.)\n The only smaller implementation of Tiny BASIC was  MINOL, which used unsigned bytes instead of signed integers and which used nonstandard commands. Also weighing in under 2kB, when a common method of shipping interpreters was 4kB ROMs, Palo Alto Tiny BASIC supported a more typical version of the language while leaving extensive room for customization for specific hardware, something which was taken advantage of multiple times, for the TRS-80, the  Bally Astrocade, the Sharp PC-1211, and the Cromemco.\n  It\u2019s been fun to play with the source code that was behind three of the computers I used as a kid. Some things I learnt:\n The code is very well structured and extensible. I added a few commands in under an hour ( PEEK, FRE()). All you need to do is insert new commands in the keyword table, then adapt code elsewhere.\n I was very excited to find a few small bugs in the code: The system famously had only three error messages (\u201cWHAT?\u201d for syntax errors, \u201cHOW?\u201d for functional errors, and \u201cSORRY\u201d for capacity issues). If you execute a  RETURN with no corresponding  GOSUB you get a \u00a0\u201cWHAT?\u201d instead of a \u201cHOW?\u201d\n 10 INPUT \u201cHELLO WORLD\u201d acts like a valid  PRINT statement when it should cause a syntax error, since no variable is specified to receive the input.\n The language only supports integers, but decimals aren\u2019t ignored as they should be.  PRINT 1.1, 1.2 outputs  1 and  0.\n There\u2019s an Easter egg! \u201cW\u201d, \u201cAN\u201d, \u201cG\u201d\n   The RST 1 routine is a work of art, using the call stack to determine where its parameters are, with the byte after RST 1 specifying the character to match and the byte after that specifying the offset to jump to. Wang\u2019s ability to write such memory-efficient code is why he didn\u2019t need to implement the  IL virtual machine.", "posttime": "2020-10-24 07:30:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "alto,basic", "title": "\u6d4f\u89c8\u5668\u4e2d\u7684Palo Alto Tiny Basic", "title_en": "Palo Alto Tiny Basic in the Browser", "transed": 1, "url": "http://troypress.com/palo-alto-tiny-basic-in-your-browser/", "via": "", "real_tags": ["alto", "basic"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1030821, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u8fd9\u7bc7\u5e16\u5b50\u662f\u5bf9\u4e3a\u4ec0\u4e48HyperCard\u5fc5\u987b\u6b7b\u4ea1\u7684\u56de\u590d-\u7531Stanislav\u64b0\u5199\u3002\u6211\u5e76\u4e0d\u662f\u8bf4\u8fd9\u4e2a\u5e16\u5b50\u662f\u9519\u7684\uff0c\u6211\u53ea\u662f\u63d0\u51fa\u4e86\u4e00\u79cd\u6d3b\u7684\u3001\u5de5\u4f5c\u5f97\u5f88\u597d\u7684\u66ff\u4ee3\u65b9\u6848\u3002LiveCode\u662f\u4e00\u4e2a\u73b0\u4ee3\u7684HyperCard\uff0c\u6bcf\u4e2a\u4f7f\u7528HyperCard\u7684\u4eba\u90fd\u4f1a\u6709\u5bbe\u81f3\u5982\u5f52\u7684\u611f\u89c9\u3002\nLiveCode\u53ef\u4ee5\u5728MacOS\u3001Windows\u548cLinux\u4e0a\u8fd0\u884c\uff0c\u53ef\u4ee5\u4e3a\u6240\u6709\u8fd9\u4e9b\u5e73\u53f0\u4ee5\u53caAndroid\u548ciOS\u751f\u6210\u72ec\u7acb\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u60a8\u53ef\u4ee5\u4ecehttps://www.livecode.com\u83b7\u5f97\u5b83\uff0c\u4e5f\u53ef\u4ee5\u4ecehttps://www.livecode.org.\u83b7\u5f97\u5b83\u7684gpl\u7248\u672c\u3002\n\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u91cd\u65b0\u521b\u5efa\u65af\u5766\u5c3c\u65af\u62c9\u592b\u5728\u4ed6\u4eec\u7684\u5e16\u5b50\u4e0a\u521b\u5efa\u7684\u6f14\u793a\uff0c\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u56db\u6b21\u8fd0\u7b97\u8ba1\u7b97\u5668\u3002\u6211\u5e0c\u671b\u8bfb\u8005\u80fd\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u73af\u5883\u662f\u591a\u4e48\u719f\u6089\uff0c\u53c8\u53d8\u5f97\u591a\u4e48\u73b0\u4ee3\u3002\n\u6211\u4eec\u4f7f\u7528\u83dc\u5355\u4e2d\u7684Stack Inspector\u6216\u4f7f\u7528CTRL+K\u70ed\u952e\u5c06\u5176\u547d\u540d\u4e3aSmallCalculator\u3002\n\u8ba9\u6211\u4eec\u5c06\u5b57\u6bb5\u62d6\u653e\u5230\u5806\u6808\u4e2d\uff0c\u4f5c\u4e3a\u8ba1\u7b97\u5668\u7684LCD\u3002\n\u8bf7\u6ce8\u610f\uff0c\u5c31\u50cfHyperCard\u4e00\u6837\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f\u5806\u6808-&gt\uff1b\u5361\u7247-&gt\uff1b\u5bf9\u8c61\u7684\u6bd4\u55bb\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u6240\u505a\u7684\u5c31\u662f\u7784\u51c6\u5361\u72471\uff0c\u5b83\u662f\u5806\u53e0\u4e2d\u7684\u7b2c\u4e00\u5f20\u5361\u7247\u3002\u5f53\u6211\u63d0\u5230\u5c06\u4e00\u4e2a\u5b57\u6bb5\u653e\u5165\u5806\u6808\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u5806\u6808\u201cSmallCalculator\u201d\u7684\u5361\u72471\u4e0a\u521b\u5efa\u4e00\u4e2a\u5b57\u6bb5\u3002\n\u8ba9\u6211\u4eec\u7ed9\u5b83\u547d\u540d\uff0c\u7136\u540e\u4f7f\u7528\u62d6\u52a8\u5904\u7406\u7a0b\u5e8f\u6765\u8c03\u6574\u5b83\u7684\u5927\u5c0f(\u5c31\u50cf\u60a8\u5728\u56fe\u5f62\u8bbe\u8ba1\u7a0b\u5e8f\u4e0a\u6240\u505a\u7684\u90a3\u6837)\u3002\n\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u7f16\u8f91\u6309\u94ae\u7684\u811a\u672c\u4e86\u3002\u6709\u591a\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u8c61\u7684\u811a\u672c\u3002\u6700\u5bb9\u6613\u53d1\u73b0\u7684\u662f\u4f7f\u7528\u83dc\u5355\u3002\n\u6211\u4f1a\u5c3d\u91cf\u6a21\u4eff\u539f\u5e16\u7684\u5267\u672c\u3002\u8bf7\u6ce8\u610f\uff0c\u4e0eHyperCard\u76f8\u6bd4\uff0cLiveCode\u8bed\u8a00\u6709\u66f4\u591a\u7684\u547d\u4ee4\u548c\u8868\u8fbe\u5f0f\u53ef\u4f9b\u4f7f\u7528\uff0c\u800c\u6211\u6784\u5efa\u6b64\u6f14\u793a\u7684\u65b9\u5f0f\u5e76\u4e0d\u662f\u6700\u4f73\u65b9\u5f0f\u3002\n\u6ce8\u610f\u5230\uff0c\u5c31\u50cfHyperCard\u4e00\u6837\uff0c\u60a8\u4e0d\u9700\u8981\u7f16\u8bd1\u9879\u76ee\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\u3002\u5728\u5de5\u5177\u9009\u9879\u677f\u7684\u9876\u90e8\u6709\u4e24\u4e2a\u4e0d\u540c\u7684\u7bad\u5934\u3002\u4e00\u79cd\u662f\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u53e6\u4e00\u79cd\u662f\u4ea4\u4e92\u6a21\u5f0f\u3002\u60a8\u53ef\u4ee5\u968f\u65f6\u5207\u6362\u6a21\u5f0f\u3002\u5982\u679c\u60a8\u73b0\u5728\u5207\u6362\u5e76\u5355\u51fb\u8be5\u6309\u94ae\u4e09\u6b21\uff0c\u60a8\u5c06\u5728LCD\u5b57\u6bb5\u4e2d\u770b\u5230\u6570\u5b57111\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u590d\u5236\u5e76\u7c98\u8d34\u8db3\u591f\u7684\u6309\u94ae\u6765\u6784\u5efa\u8ba1\u7b97\u5668\u7684\u6570\u5b57\u952e\u76d8\u3002\u6211\u4eec\u53ea\u9700\u4f7f\u7528CTRL+C\u548cCTRL+V(\u6216Mac\u4e0a\u7684CMD\u7b49\u6548\u9879)\u6765\u590d\u5236\u548c\u7c98\u8d34\u5b83\u4eec\u3002\u6211\u8fd8\u82b1\u4e86\u4e00\u4e9b\u65f6\u95f4\u6765\u79fb\u52a8\u8fd9\u4e9b\u7269\u4f53\u3002\n\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u64cd\u4f5c\u6309\u94ae\u548c\u76f8\u7b49\u6309\u94ae\u3002\u6211\u53ea\u662f\u5728\u6570\u5b57\u6309\u94ae\u4e0a\u4f7f\u7528\u4e86\u590d\u5236\u548c\u7c98\u8d34\uff0c\u5e76\u7ed9\u5b83\u4eec\u8d77\u4e86\u4e00\u4e2a\u4e0e\u6570\u5b66\u8fd0\u7b97\u76f8\u5339\u914d\u7684\u540d\u79f0\u3002\u76f8\u7b49\u6309\u94ae\u662f\u901a\u8fc7\u5c06\u65b0\u6309\u94ae\u4ece\u201c\u5de5\u5177\u201d\u9009\u9879\u677f\u62d6\u653e\u5230\u5806\u6808\u4e2d\u6765\u6784\u5efa\u7684\u3002\n\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u7a0d\u5fae\u504f\u79bb\u6f14\u793a\uff0c\u5c55\u793a\u4e00\u4e9bHyperCard\u4ece\u672a\u6709\u8fc7\u7684\u4e1c\u897f\u3002\u4ece\u6587\u4ef6\u83dc\u5355\u4e2d\uff0c\u6211\u8bbf\u95ee\u4e86\u72ec\u7acb\u5e94\u7528\u7a0b\u5e8f\u8bbe\u7f6e\uff0c\u4ee5\u914d\u7f6e\u5982\u4f55\u90e8\u7f72\u6b64\u5806\u6808\u3002\u6211\u53ef\u4ee5\u4ece\u6211\u7684Windows\u673a\u5668\u90e8\u7f72\u5230MacOS\u3001Windows\u3001Linux\u548cAndroid\u3002\u7531\u4e8e\u663e\u800c\u6613\u89c1\u7684(\u82f9\u679c)\u539f\u56e0\uff0c\u6211\u4e0d\u80fd\u5728iOS\u4e0a\u90e8\u7f72\u3002\u76ee\u524d\uff0c\u6211\u5c06\u4ec5\u4e3aWindows\u6784\u5efa\u3002\n\u6211\u5e0c\u671b\u4f60\u559c\u6b22\u8fd9\u7bc7\u6587\u7ae0\uff0c\u5e76\u597d\u5947\u5730\u60f3\u642d\u4e58LiveCode\u515c\u98ce\u3002\u6bcf\u9694\u51e0\u4e2a\u6708\uff0cHN\u6216lobste.rs\u4e0a\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5173\u4e8eHyperCard\u7684\u5e16\u5b50\uff0c\u6211\u770b\u5230\u5f88\u591a\u4eba\u90fd\u6e34\u671b\u5b83\u3002\u6211\u60f3\u77e5\u9053\u4ed6\u4eec\u4e2d\u6709\u591a\u5c11\u4eba\u77e5\u9053LiveCode\u3002\u6211\u60f3\u5f88\u591a\u4eba\u4f1a\u548c\u6211\u4e00\u6837\u559c\u6b22\u5b83\u3002\n\u4f60\u53ef\u4ee5\u5728Twitter\u3001Mastodon\u3001Secure ScuttleButt\u6216WebMentions\u4e0a\u8054\u7cfb\u6211\u3002", "note_en": "This post is a reply to  Why HyperCard had to Die \u2014 by Stanislav. I\u2019m not saying the post is wrong, I am just presenting an alternative that is alive and working well.  LiveCode is a modern day HyperCard and everyone who used HyperCard will feel at home at it.\n LiveCode runs on macOS, Windows and Linux and can generate standalone binaries for all those platforms plus Android and iOS. You can get it from  https://www.livecode.com or you can get a GPL version of it from  https://www.livecode.org.\n In this post, I will recreate the demo that Stanislav created on their post which was a simple four operation calculator. I hope readers will notice how familiar the environment is and yet how modern it became.\n     We name it  SmallCalculator using the  Stack Inspector that is available from the menu or with the  CTRL+K hotkey.\n  Lets drag &amp; drop a field into the stack to serve as our LCD for the calculator.\n  Be aware that just like HyperCard, we\u2019re working with a  stacks -&gt; cards -&gt; objects metaphor. All we\u2019re doing here is targetting  card 1 which is the first card on the stack. When I mentioned droping a field into the stack, it is actually creating a field on  card 1 of stack \u201cSmallCalculator\u201d.\n    Lets name it and use the drag handlers to resize it (much like you\u2019d do on a graphics design program).\n  After that it is time to edit the script for the button. There are multiple ways to access the script of an object. The most discoverable one is using the menus.\n  I\u2019m going to try to mimic the script of the original post as much as possible. Be aware that LiveCode language has many more commands and expressions available for it than HyperCard did and the way I am building this demo is not the optimal way.\n  Observe that just like HyperCard, you don\u2019t need to compile a project to use it. On the top of the tools palette there are two different arrows. One is  design mode and the other is  interact mode. You can switch modes at any time you want. If you switch now and click the button three times, you\u2019ll see the number  111 in the  LCD field.\n Now, we\u2019re going to copy and paste enough buttons to build the number pad of the calculator. We\u2019ll simply use CTRL+C and CTRL+V (or their CMD equivalents on a mac) to copy and paste them. I also took some time to move the objects around.\n  The next step is creating the operations buttons and the equal button. I just used copy and paste on the number buttons and gave them a name to match the math operation. The equal button was built by dragging and droping a new button from the tools palette into the stack.\n        Now, lets deviate a bit from the demo and show something HyperCard never had. From the  File menu I\u2019ve accessed the  Standalone Application Settings to configure how this stack will be deployed. I can from my windows machine deploy to macOS, Windows, Linux and Android. I can\u2019t deploy for iOS for obvious (Apple argh) reasons. I will build only for Windows at this time.\n    I hope you did enjoy this post and are curious to take LiveCode for a ride. Every couple months some post appears on  HN or  lobste.rs about HyperCard and I see a ton of people longing for it. I wonder how many of them are aware of LiveCode. I suspect many will love it as much as I do.\n  You can reach out to me on  Twitter, or  Mastodon,  Secure Scuttlebutt, or through  WebMentions.", "posttime": "2020-10-24 07:29:55", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u73b0\u4ee3,modern", "title": "LiveCode\u662f\u73b0\u4ee3\u7684HyperCard(2019\u5e74)", "title_en": "LiveCode is a modern day HyperCard (2019)", "transed": 1, "url": "https://andregarzia.com/2019/07/livecode-is-a-modern-day-hypercard.html", "via": "", "real_tags": ["\u73b0\u4ee3", "modern"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1030820, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u300a\u4ece\u8def\u5230\u7b2c\u8c37\u300b\u662f\u4e00\u90e8\u5173\u4e8e\u5362\u5c3c\u4e9a\u9769\u547d\u524d\u4eba\u7684\u6587\u96c6\uff0c2096\u5e74\u5728\u9732\u5a1c\u57ce\u51fa\u7248\u3002\n\u5bf9\u4e39\u00b7\u54c8\u5c14\u4f2f\u7279\u6765\u8bf4\uff0c\u7b2c\u8c37\u4e4b\u8def\u59cb\u4e8e\u5927\u5b66--\u5f53\u65f6\u5229\u8428\u00b7\u4f26\u8328\u5411\u4ed6\u501f\u4e86\u4e00\u53f0\u7535\u8111\u3002\u5979\u7684\u8f66\u574f\u4e86\uff0c\u9664\u975e\u5979\u80fd\u518d\u501f\u4e00\u8f86\uff0c\u5426\u5219\u5979\u7684\u671f\u4e2d\u9879\u76ee\u5c31\u4f1a\u5931\u8d25\u3002\u9664\u4e86\u4e39\uff0c\u5979\u4e0d\u6562\u95ee\u4efb\u4f55\u4eba\u3002\n\u8fd9\u8ba9\u4e39\u8fdb\u9000\u4e24\u96be\u3002\u4ed6\u5fc5\u987b\u5e2e\u52a9\u5979--\u4f46\u5982\u679c\u4ed6\u628a\u7535\u8111\u501f\u7ed9\u5979\uff0c\u5979\u53ef\u80fd\u4f1a\u8bfb\u4ed6\u7684\u4e66\u3002\u9664\u4e86\u4f60\u53ef\u80fd\u4f1a\u56e0\u4e3a\u8ba9\u522b\u4eba\u8bfb\u4f60\u7684\u4e66\u800c\u88ab\u5224\u5165\u72f1\u591a\u5e74\u8fd9\u4e00\u4e8b\u5b9e\u5916\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u4e00\u5f00\u59cb\u5c31\u8ba9\u4ed6\u611f\u5230\u9707\u60ca\u3002\u50cf\u6bcf\u4e2a\u4eba\u4e00\u6837\uff0c\u4ed6\u4ece\u5c0f\u5b66\u5f00\u59cb\u5c31\u88ab\u6559\u5bfc\u5206\u4eab\u4e66\u7c4d\u662f\u80ae\u810f\u548c\u9519\u8bef\u7684-\u8fd9\u662f\u53ea\u6709\u6d77\u76d7\u624d\u4f1a\u505a\u7684\u4e8b\u60c5\u3002\n\u800c\u4e14\uff0cSPA--\u8f6f\u4ef6\u4fdd\u62a4\u5c40--\u4e0d\u592a\u53ef\u80fd\u6293\u4e0d\u5230\u4ed6\u3002\u5728\u4ed6\u7684\u8f6f\u4ef6\u8bfe\u4e0a\uff0c\u4e39\u4e86\u89e3\u5230\u6bcf\u672c\u4e66\u90fd\u6709\u4e00\u4e2a\u7248\u6743\u76d1\u89c6\u5668\uff0c\u53ef\u4ee5\u5411\u4e2d\u592e\u8bb8\u53ef\u4e2d\u5fc3\u62a5\u544a\u5b83\u662f\u5728\u4f55\u65f6\u4f55\u5730\u3001\u7531\u8c01\u9605\u8bfb\u7684\u3002(\u4ed6\u4eec\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u6765\u6293\u5230\u9605\u8bfb\u76d7\u7248\u7684\u4eba\uff0c\u4f46\u4e5f\u7528\u6765\u5411\u96f6\u552e\u5546\u51fa\u552e\u4e2a\u4eba\u5174\u8da3\u6863\u6848\u3002)\u3002\u4e0b\u6b21\u4ed6\u7684\u7535\u8111\u8054\u7f51\u65f6\uff0c\u4e2d\u592e\u8bb8\u53ef\u4e2d\u5fc3\u5c31\u4f1a\u53d1\u73b0\u3002\u4f5c\u4e3a\u4e00\u540d\u7535\u8111\u6240\u6709\u8005\uff0c\u4ed6\u5c06\u53d7\u5230\u6700\u4e25\u5389\u7684\u60e9\u7f5a--\u56e0\u4e3a\u4ed6\u6ca1\u6709\u7aed\u5c3d\u5168\u529b\u9632\u6b62\u72af\u7f6a\u3002\n\u5f53\u7136\uff0c\u4e3d\u838e\u5e76\u4e0d\u4e00\u5b9a\u8981\u8bfb\u4ed6\u7684\u4e66\u3002\u5979\u53ef\u80fd\u53ea\u60f3\u8ba9\u7535\u8111\u5199\u5979\u7684\u671f\u4e2d\u8003\u8bd5\u3002\u4f46\u662f\u4e39\u4ece\u4e00\u4e2a\u4e2d\u4ea7\u9636\u7ea7\u5bb6\u5ead\u8ba4\u8bc6\u4e86\u5979\uff0c\u51e0\u4e4e\u4ed8\u4e0d\u8d77\u5b66\u8d39\uff0c\u66f4\u4e0d\u7528\u8bf4\u5979\u7684\u9605\u8bfb\u8d39\u4e86\u3002\u8bfb\u4ed6\u7684\u4e66\u53ef\u80fd\u662f\u5979\u6bd5\u4e1a\u7684\u552f\u4e00\u9014\u5f84\u3002\u4ed6\u7406\u89e3\u8fd9\u79cd\u60c5\u51b5\uff1b\u4ed6\u81ea\u5df1\u4e0d\u5f97\u4e0d\u501f\u94b1\u6765\u652f\u4ed8\u4ed6\u8bfb\u7684\u6240\u6709\u7814\u7a76\u8bba\u6587\u7684\u8d39\u7528\u3002(\u5176\u4e2d10%\u7684\u8d39\u7528\u6d41\u5411\u4e86\u64b0\u5199\u8bba\u6587\u7684\u7814\u7a76\u4eba\u5458\uff1b\u7531\u4e8e\u4e39\u7684\u76ee\u6807\u662f\u4ece\u4e8b\u5b66\u672f\u4e8b\u4e1a\uff0c\u4ed6\u53ef\u4ee5\u5e0c\u671b\u81ea\u5df1\u7684\u7814\u7a76\u8bba\u6587(\u7ecf\u5e38\u88ab\u5f15\u7528)\u80fd\u5e26\u6765\u8db3\u591f\u7684\u6536\u5165\u6765\u507f\u8fd8\u8fd9\u7b14\u8d37\u6b3e\u3002)\u3002\n\u540e\u6765\uff0c\u4e39\u4e86\u89e3\u5230\uff0c\u66fe\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u53bb\u56fe\u4e66\u9986\u9605\u8bfb\u671f\u520a\u6587\u7ae0\uff0c\u751a\u81f3\u662f\u4e66\u7c4d\uff0c\u800c\u4e0d\u9700\u8981\u652f\u4ed8\u8d39\u7528\u3002\u6709\u4e00\u4e9b\u72ec\u7acb\u5b66\u8005\u5728\u6ca1\u6709\u653f\u5e9c\u56fe\u4e66\u9986\u62e8\u6b3e\u7684\u60c5\u51b5\u4e0b\u9605\u8bfb\u4e86\u6570\u5343\u9875\u3002\u4f46\u572820\u4e16\u7eaa90\u5e74\u4ee3\uff0c\u5546\u4e1a\u6027\u548c\u975e\u8425\u5229\u6027\u671f\u520a\u51fa\u7248\u5546\u90fd\u5f00\u59cb\u6536\u53d6\u8bbf\u95ee\u8d39\uff0c\u52302047\u5e74\uff0c\u5411\u516c\u4f17\u514d\u8d39\u63d0\u4f9b\u5b66\u672f\u6587\u732e\u7684\u56fe\u4e66\u9986\u5df2\u7ecf\u6210\u4e3a\u6a21\u7cca\u7684\u8bb0\u5fc6\u3002\n\u5f53\u7136\uff0c\u6709\u529e\u6cd5\u7ed5\u8fc7SPA\u548c\u4e2d\u592e\u8bb8\u53ef\u4e2d\u5fc3\u3002\u4ed6\u4eec\u672c\u8eab\u5c31\u662f\u975e\u6cd5\u7684\u3002\u4e39\u6709\u4e00\u4f4d\u8f6f\u4ef6\u4e13\u4e1a\u7684\u540c\u5b66\uff0c\u5f17\u5170\u514b\u00b7\u9a6c\u56fe\u5947\uff0c\u4ed6\u5f97\u5230\u4e86\u4e00\u4e2a\u975e\u6cd5\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u5e76\u5728\u9605\u8bfb\u4e66\u7c4d\u65f6\u7528\u5b83\u8df3\u8fc7\u4e86\u7248\u6743\u76d1\u89c6\u5668\u4ee3\u7801\u3002\u4f46\u4ed6\u544a\u8bc9\u4e86\u592a\u591a\u670b\u53cb\u8fd9\u4ef6\u4e8b\uff0c\u5176\u4e2d\u4e00\u4e2a\u670b\u53cb\u4e3a\u4e86\u5956\u52b1\u800c\u5411SPA\u544a\u53d1\u4e86\u4ed6(\u6df1\u9677\u503a\u52a1\u7684\u5b66\u751f\u5f88\u5bb9\u6613\u53d7\u5230\u80cc\u53db\u7684\u8bf1\u60d1)\u30022047\u5e74\uff0c\u5f17\u5170\u514b\u5165\u72f1\uff0c\u4e0d\u662f\u56e0\u4e3a\u76d7\u7248\u9605\u8bfb\uff0c\u800c\u662f\u56e0\u4e3a\u62e5\u6709\u8c03\u8bd5\u5668\u3002\n\u4e39\u540e\u6765\u4e86\u89e3\u5230\uff0c\u66fe\u7ecf\u6709\u4e00\u6bb5\u65f6\u95f4\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u62e5\u6709\u8c03\u8bd5\u5de5\u5177\u3002\u751a\u81f3\u53ef\u4ee5\u4ece\u7f51\u4e0a\u4e0b\u8f7dCDOR\u4e0a\u7684\u514d\u8d39\u8c03\u8bd5\u5de5\u5177\u3002\u4f46\u666e\u901a\u7528\u6237\u5f00\u59cb\u4f7f\u7528\u5b83\u4eec\u6765\u7ed5\u8fc7\u7248\u6743\u76d1\u63a7\uff0c\u6700\u7ec8\u6cd5\u5b98\u88c1\u5b9a\uff0c\u8fd9\u5df2\u6210\u4e3a\u4ed6\u4eec\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\u7684\u4e3b\u8981\u7528\u9014\u3002\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u662f\u975e\u6cd5\u7684\uff1b\u8c03\u8bd5\u5668\u5f00\u53d1\u4eba\u5458\u88ab\u9001\u8fdb\u4e86\u76d1\u72f1\u3002\n\u5f53\u7136\uff0c\u7a0b\u5e8f\u5458\u4ecd\u7136\u9700\u8981\u8c03\u8bd5\u5de5\u5177\uff0c\u4f462047\u5e74\u7684\u8c03\u8bd5\u5668\u4f9b\u5e94\u5546\u53ea\u5206\u53d1\u7f16\u53f7\u7684\u526f\u672c\uff0c\u800c\u4e14\u53ea\u5206\u53d1\u7ed9\u5b98\u65b9\u8bb8\u53ef\u7684\u548c\u6709\u7ea6\u675f\u529b\u7684\u7a0b\u5e8f\u5458\u3002\u4e39\u5728\u8f6f\u4ef6\u8bfe\u4e0a\u4f7f\u7528\u7684\u8c03\u8bd5\u5668\u88ab\u653e\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u9632\u706b\u5899\u540e\u9762\uff0c\u8fd9\u6837\u5b83\u53ea\u80fd\u7528\u4e8e\u8bfe\u5802\u7ec3\u4e60\u3002\n\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u4fee\u6539\u540e\u7684\u7cfb\u7edf\u5185\u6838\u6765\u7ed5\u8fc7\u7248\u6743\u76d1\u89c6\u5668\u3002\u4e39\u6700\u7ec8\u4f1a\u53d1\u73b0\u5728\u4e16\u7eaa\u4e4b\u4ea4\u5c31\u5df2\u7ecf\u5b58\u5728\u7684\u514d\u8d39\u5185\u6838\uff0c\u751a\u81f3\u6574\u4e2a\u514d\u8d39\u64cd\u4f5c\u7cfb\u7edf\u3002\u4f46\u5b83\u4eec\u4e0d\u4ec5\u662f\u975e\u6cd5\u7684\uff0c\u5c31\u50cf\u8c03\u8bd5\u5668\u4e00\u6837-\u5982\u679c\u4f60\u6709\u8c03\u8bd5\u5668\uff0c\u4f60\u5c31\u4e0d\u80fd\u5b89\u88c5\u4e00\u4e2a\uff0c\u56e0\u4e3a\u4f60\u4e0d\u77e5\u9053\u4f60\u7684\u8ba1\u7b97\u673a\u7684\u6839\u5bc6\u7801\u3002\u65e0\u8bba\u662fFBI\u8fd8\u662f\u5fae\u8f6f\u7684\u652f\u6301\u4eba\u5458\u90fd\u4e0d\u4f1a\u544a\u8bc9\u4f60\u8fd9\u4e00\u70b9\u3002\n\u4e39\u5f97\u51fa\u7ed3\u8bba\uff0c\u4ed6\u4e0d\u80fd\u7b80\u5355\u5730\u628a\u7535\u8111\u501f\u7ed9\u4e3d\u838e\u3002\u4f46\u662f\u4ed6\u4e0d\u80fd\u62d2\u7edd\u5e2e\u52a9\u5979\uff0c\u56e0\u4e3a\u4ed6\u7231\u5979\u3002\u6bcf\u4e00\u6b21\u4e0e\u5979\u4ea4\u8c08\u7684\u673a\u4f1a\u90fd\u4f7f\u4ed6\u6b23\u559c\u82e5\u72c2\u3002\u5979\u9009\u62e9\u4ed6\u6765\u5bfb\u6c42\u5e2e\u52a9\uff0c\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5979\u4e5f\u7231\u4ed6\u3002\n\u4e39\u505a\u4e86\u4e00\u4ef6\u66f4\u4e0d\u53ef\u601d\u8bae\u7684\u4e8b\u60c5\u6765\u89e3\u51b3\u8fd9\u4e2a\u96be\u9898--\u4ed6\u628a\u7535\u8111\u501f\u7ed9\u5979\uff0c\u5e76\u544a\u8bc9\u5979\u4ed6\u7684\u5bc6\u7801\u3002\u8fd9\u6837\uff0c\u5982\u679c\u4e3d\u838e\u8bfb\u4e86\u4ed6\u7684\u4e66\uff0c\u4e2d\u592e\u6388\u6743\u4e2d\u5fc3\u5c31\u4f1a\u8ba4\u4e3a\u4ed6\u5728\u770b\u4e66\u3002\u8fd9\u4ecd\u7136\u662f\u4e00\u79cd\u72af\u7f6a\uff0c\u4f46SPA\u4e0d\u4f1a\u81ea\u52a8\u53d1\u73b0\u8fd9\u4e00\u70b9\u3002\u4ed6\u4eec\u53ea\u4f1a\u77e5\u9053\u5229\u8428\u662f\u5426\u4e3e\u62a5\u4e86\u4ed6\u3002\n\u5f53\u7136\uff0c\u5982\u679c\u5b66\u6821\u53d1\u73b0\u4ed6\u7ed9\u4e86\u4e3d\u838e\u81ea\u5df1\u7684\u5bc6\u7801\uff0c\u8fd9\u5bf9\u4ed6\u4eec\u4e24\u4e2a\u5b66\u751f\u6765\u8bf4\u90fd\u662f\u65e0\u5173\u7d27\u8981\u7684\uff0c\u4e0d\u7ba1\u5979\u628a\u5bc6\u7801\u7528\u6765\u505a\u4ec0\u4e48\u3002\u5b66\u6821\u7684\u653f\u7b56\u662f\uff0c\u4efb\u4f55\u5e72\u6270\u4ed6\u4eec\u76d1\u63a7\u5b66\u751f\u4f7f\u7528\u8ba1\u7b97\u673a\u7684\u624b\u6bb5\u90fd\u662f\u7eaa\u5f8b\u5904\u5206\u7684\u7406\u7531\u3002\u4f60\u662f\u5426\u505a\u4e86\u4efb\u4f55\u6709\u5bb3\u7684\u4e8b\u90fd\u65e0\u5173\u7d27\u8981--\u8fd9\u79cd\u5192\u72af\u8ba9\u7ba1\u7406\u5458\u5f88\u96be\u68c0\u67e5\u4f60\u3002\u4ed6\u4eec\u8ba4\u4e3a\u8fd9\u610f\u5473\u7740\u4f60\u5728\u505a\u5176\u4ed6\u88ab\u7981\u6b62\u7684\u4e8b\u60c5\uff0c\u4ed6\u4eec\u4e0d\u9700\u8981\u77e5\u9053\u662f\u4ec0\u4e48\u3002\n\u5b66\u751f\u901a\u5e38\u4e0d\u4f1a\u56e0\u6b64\u800c\u88ab\u5f00\u9664--\u4e0d\u662f\u76f4\u63a5\u5f00\u9664\u3002\u76f8\u53cd\uff0c\u4ed6\u4eec\u88ab\u7981\u6b62\u8fdb\u5165\u5b66\u6821\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\uff0c\u800c\u4e14\u96be\u514d\u4f1a\u5bfc\u81f4\u6240\u6709\u8bfe\u7a0b\u4e0d\u53ca\u683c\u3002\n\u540e\u6765\uff0c\u4e39\u4e86\u89e3\u5230\uff0c\u8fd9\u79cd\u5927\u5b66\u653f\u7b56\u662f\u572820\u4e16\u7eaa80\u5e74\u4ee3\u624d\u5f00\u59cb\u7684\uff0c\u5f53\u65f6\u5927\u5b66\u751f\u5927\u91cf\u4f7f\u7528\u8ba1\u7b97\u673a\u3002\u4ee5\u524d\uff0c\u5927\u5b66\u5bf9\u5b66\u751f\u7eaa\u5f8b\u91c7\u53d6\u4e0d\u540c\u7684\u65b9\u6cd5\uff1b\u4ed6\u4eec\u60e9\u7f5a\u6709\u5bb3\u7684\u6d3b\u52a8\uff0c\u800c\u4e0d\u662f\u90a3\u4e9b\u53ea\u4f1a\u5f15\u8d77\u6000\u7591\u7684\u6d3b\u52a8\u3002\n\u4e3d\u838e\u6ca1\u6709\u5411SPA\u4e3e\u62a5\u4e39\u3002\u4ed6\u5e2e\u52a9\u5979\u7684\u51b3\u5b9a\u5bfc\u81f4\u4e86\u4ed6\u4eec\u7684\u5a5a\u59fb\uff0c\u4e5f\u8ba9\u4ed6\u4eec\u8d28\u7591\u4ed6\u4eec\u5c0f\u65f6\u5019\u662f\u600e\u4e48\u5bf9\u5f85\u6d77\u76d7\u7684\u3002\u8fd9\u5bf9\u592b\u5987\u5f00\u59cb\u9605\u8bfb\u7248\u6743\u7684\u5386\u53f2\uff0c\u5173\u4e8e\u82cf\u8054\u53ca\u5176\u5bf9\u590d\u5236\u7684\u9650\u5236\uff0c\u751a\u81f3\u662f\u7f8e\u56fd\u5baa\u6cd5\u7684\u539f\u7248\u3002\u4ed6\u4eec\u642c\u5230\u4e86\u9732\u5a1c\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u53d1\u73b0\u4e86\u5176\u4ed6\u540c\u6837\u4eceSPA\u7684\u957f\u81c2\u4e0a\u88ab\u5438\u5f15\u8fc7\u6765\u7684\u4eba\u3002\u5f53\u7b2c\u8c37\u8d77\u4e49\u57282062\u5e74\u5f00\u59cb\u65f6\uff0c\u5168\u6c11\u9605\u8bfb\u6743\u5f88\u5feb\u6210\u4e3a\u5176\u6838\u5fc3\u76ee\u6807\u4e4b\u4e00\u3002", "note_en": "From  The Road To Tycho, a collection of\t articles about the antecedents of the Lunarian\t Revolution, published in Luna City in 2096.\n For Dan Halbert, the road to Tycho began in college\u2014when LissaLenz asked to borrow his computer. Hers had broken down, and unlessshe could borrow another, she would fail her midterm project. Therewas no one she dared ask, except Dan.\n This put Dan in a dilemma. He had to help her\u2014but if he lenther his computer, she might read his books. Aside from the fact thatyou could go to prison for many years for letting someone else readyour books, the very idea shocked him at first. Like everyone, he hadbeen taught since elementary school that sharing books was nasty andwrong\u2014something that only pirates would do.\n And there wasn&#39;t much chance that the SPA\u2014the SoftwareProtection Authority\u2014would fail to catch him. In his softwareclass, Dan had learned that each book had a copyright monitor thatreported when and where it was read, and by whom, to CentralLicensing. (They used this information to catch reading pirates, butalso to sell personal interest profiles to retailers.) The next timehis computer was networked, Central Licensing would find out. He, ascomputer owner, would receive the harshest punishment\u2014for nottaking pains to prevent the crime.\n Of course, Lissa did not necessarily intend to read his books. Shemight want the computer only to write her midterm. But Dan knew shecame from a middle-class family and could hardly afford the tuition,let alone her reading fees. Reading his books might be the only wayshe could graduate. He understood this situation; he himself had hadto borrow to pay for all the research papers he read. (Ten percent of thosefees went to the researchers who wrote the papers; since Dan aimed foran academic career, he could hope that his own research papers, iffrequently referenced, would bring in enough to repay this loan.)\n  Later on, Dan would learn there was a time when anyone could go to thelibrary and read journal articles, and even books, without having topay. There were independent scholars who read thousands of pageswithout government library grants. But in the 1990s, both commercialand nonprofit journal publishers had begun charging fees for access.By 2047, libraries offering free public access to scholarly literaturewere a dim memory.\n There were ways, of course, to get around the SPA and CentralLicensing. They were themselves illegal. Dan had had a classmate insoftware, Frank Martucci, who had obtained an illicit debugging tool,and used it to skip over the copyright monitor code when readingbooks. But he had told too many friends about it, and one of themturned him in to the SPA for a reward (students deep in debt wereeasily tempted into betrayal). In 2047, Frank was in prison, not forpirate reading, but for possessing a debugger.\n Dan would later learn that there was a time when anyone could havedebugging tools. There were even free debugging tools available on CDor downloadable over the net. But ordinary users started using themto bypass copyright monitors, and eventually a judge ruled that thishad become their principal use in actual practice. This meant theywere illegal; the debuggers&#39; developers were sent to prison.\n Programmers still needed debugging tools, of course, but debuggervendors in 2047 distributed numbered copies only, and only toofficially licensed and bonded programmers. The debugger Dan used insoftware class was kept behind a special firewall so that it could beused only for class exercises.\n It was also possible to bypass the copyright monitors by installing amodified system kernel. Dan would eventually find out about the freekernels, even entire free operating systems, that had existed aroundthe turn of the century. But not only were they illegal, likedebuggers\u2014you could not install one if you had one, withoutknowing your computer&#39;s root password. And neitherthe FBI norMicrosoft Support would tell you that.\n  Dan concluded that he couldn&#39;t simply lend Lissa his computer. But hecouldn&#39;t refuse to help her, because he loved her. Every chance tospeak with her filled him with delight. And that she chose him to askfor help, that could mean she loved him too.\n Dan resolved the dilemma by doing something even moreunthinkable\u2014he lent her the computer, and told her his password.This way, if Lissa read his books, Central Licensing would think hewas reading them. It was still a crime, but the SPA would notautomatically find out about it. They would only find out if Lissareported him.\n Of course, if the school ever found out that he had given Lissa hisown password, it would be curtains for both of them as students,regardless of what she had used it for. School policy was that anyinterference with their means of monitoring students&#39; computer use wasgrounds for disciplinary action. It didn&#39;t matter whether you didanything harmful\u2014the offense was making it hard for theadministrators to check on you. They assumed this meant you weredoing something else forbidden, and they did not need to know what itwas.\n Students were not usually expelled for this\u2014not directly.Instead they were banned from the school computer systems, and wouldinevitably fail all their classes.\n Later, Dan would learn that this kind of university policy startedonly in the 1980s, when university students in large numbers beganusing computers. Previously, universities maintained a differentapproach to student discipline; they punished activities that wereharmful, not those that merely raised suspicion.\n  Lissa did not report Dan to the SPA. His decision to help her led totheir marriage, and also led them to question what they had beentaught about piracy as children. The couple began reading about thehistory of copyright, about the Soviet Union and its restrictions oncopying, and even the original United States Constitution. They movedto Luna, where they found others who had likewise gravitated away fromthe long arm of the SPA. When the Tycho Uprising began in 2062, theuniversal right to read soon became one of its central aims.", "posttime": "2020-10-24 07:29:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9605\u8bfb,read", "title": "\u201c\u9605\u8bfb\u7684\u6743\u5229\u201d(1997)", "title_en": "The Right to Read (1997)", "transed": 1, "url": "https://www.gnu.org/philosophy/right-to-read.en.html", "via": "", "real_tags": ["\u9605\u8bfb", "read"]}, {"category": "", "categoryclass": "", "imagename": "455b755b67aef55fcf98b4e5cca766c2.png", "infoid": 1030819, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4ee3\u8868\u7f8e\u56fd\u5531\u7247\u4e1a\u534f\u4f1a\u516c\u53f8\u4e0e\u60a8\u8054\u7cfb\u3002(RIAA)\u53ca\u5176\u6210\u5458\u5531\u7247\u516c\u53f8\u3002RIAA\u662f\u4e00\u4e2a\u884c\u4e1a\u534f\u4f1a\uff0c\u5176\u6210\u5458\u516c\u53f8\u8d1f\u8d23\u5236\u4f5c\u3001\u5236\u9020\u6216\u53d1\u884c\u5f55\u97f3\uff0c\u7ea6\u5360\u7f8e\u56fd\u6240\u6709\u5408\u6cd5\u5f55\u97f3\u97f3\u4e50\u6d88\u8d39\u768485%\u3002\u5728\u4f5c\u4f2a\u8bc1\u7684\u7f5a\u5219\u4e0b\uff0c\u6211\u4eec\u5efa\u8bae\u6388\u6743\u5f71\u89c6\u5904\u4ee3\u8868\u5176\u6210\u5458\u516c\u53f8\u5904\u7406\u6d89\u53ca\u4fb5\u72af\u5176\u5f55\u97f3\u3001\u89c6\u542c\u4f5c\u54c1\u53ca\u5f71\u8c61\u7684\u4e8b\u5b9c\uff0c\u5305\u62ec\u5728\u4e92\u8054\u7f51\u4e0a\u6267\u884c\u5176\u7248\u6743\u53ca\u666e\u901a\u6cd5\u6743\u5229\u7b49\u4e8b\u5b9c\uff0c\u800c\u8be5\u5c40\u4ea6\u83b7\u6388\u6743\u4ee3\u8868\u5176\u6210\u5458\u516c\u53f8\u5904\u7406\u6d89\u53ca\u4fb5\u72af\u5176\u5f55\u97f3\u3001\u89c6\u542c\u4f5c\u54c1\u53ca\u5f71\u8c61\u7684\u4e8b\u5b9c\uff0c\u5305\u62ec\u5728\u4e92\u8054\u7f51\u4e0a\u6267\u884c\u5176\u7248\u6743\u53ca\u666e\u901a\u6cd5\u6743\u5229\u3002\n\u4fb5\u72af\u7248\u6743\u3002\u6211\u4eec\u4e86\u89e3\u5230\uff0c\u60a8\u7684\u670d\u52a1\u5728\u5176\u7f51\u7edc\u4e0a\u6258\u7ba1youtube-dl\u6e90\u4ee3\u7801\uff0c\u4f4d\u7f6e\u5982\u4e0b\uff1a\n\u4e0a\u9762\u7684\u5217\u8868\u5305\u62ec\u6258\u7ba1\u5728GitHub\u4e0a\u7684youtube-dl\u6e90\u4ee3\u7801\u7684youtube-dl\u5206\u652f\u7684\u4ee3\u8868\u6027\u793a\u4f8b\u3002\u57fa\u4e8e\u6211\u4eec\u5bf9\u4e0a\u9762\u63d0\u5230\u7684\u4ee3\u8868\u6027\u6837\u672c\u7684\u5ba1\u67e5\uff0c\u6211\u4eec\u6709\u7406\u7531\u76f8\u4fe1\uff0c\u5927\u591a\u6570youtube-dl\u5206\u652f\u7684\u4fb5\u6743\u7a0b\u5ea6\u4e0e\u7236\u5b58\u50a8\u5e93\u76f8\u540c\u3002\n\u6b64\u6e90\u4ee3\u7801\u7684\u660e\u786e\u76ee\u7684\u662f(I)\u89c4\u907f\u6388\u6743\u6d41\u5a92\u4f53\u670d\u52a1(\u5982YouTube)\u4f7f\u7528\u7684\u6280\u672f\u4fdd\u62a4\u63aa\u65bd\uff0c\u4ee5\u53ca(Ii)\u672a\u7ecf\u6388\u6743\u590d\u5236\u548c\u5206\u53d1\u6211\u4eec\u7684\u6210\u5458\u516c\u53f8\u62e5\u6709\u7684\u97f3\u4e50\u89c6\u9891\u548c\u5f55\u97f3\u5236\u54c1\u3002\u6211\u4eec\u6ce8\u610f\u5230\u8be5\u6e90\u4ee3\u7801\u5728GitHub\u4e0a\u88ab\u63cf\u8ff0\u4e3a\u201c\u4e00\u4e2a\u4eceYouTube.com\u548c\u5176\u4ed6\u51e0\u4e2a\u7f51\u7ad9\u4e0b\u8f7d\u89c6\u9891\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u201d\u3002\n\u6211\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u6e90\u4ee3\u7801\u663e\u8457\u5730\u5305\u62ec\u4e0b\u8f7d\u6211\u4eec\u6210\u5458\u7684\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u5f55\u97f3\u548c\u97f3\u4e50\u89c6\u9891\u7684\u526f\u672c\u4f5c\u4e3a\u6e90\u4ee3\u7801\u7684\u6837\u672c\u4f7f\u7528\uff0c\u5982\u672c\u5408\u540c\u9644\u4ef6A\u6240\u793a\u3002\u4f8b\u5982\uff0c\u5982\u9644\u4ef6A\u6240\u793a\uff0c\u6e90\u4ee3\u7801\u660e\u786e\u5efa\u8bae\u4f7f\u7528\u5b83\u6765\u590d\u5236\u548c/\u6216\u5206\u53d1\u6211\u4eec\u6210\u5458\u516c\u53f8\u62e5\u6709\u7684\u4ee5\u4e0b\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u4f5c\u54c1\uff1a\n\u00b7Icona Pop-\u6211\u559c\u6b22\u5b83(\u58ee\u4e3e\u3002Charli XCX)[\u5b98\u65b9\u89c6\u9891]\uff0c\u534e\u7eb3\u97f3\u4e50\u96c6\u56e2\u6240\u6709\u00b7\u8d3e\u65af\u6c40\u00b7\u6c40\u5e03\u83b1\u514b-\u96a7\u9053\u89c6\u89c9(\u663e\u5f0f)\uff0c\u7d22\u5c3c\u97f3\u4e50\u96c6\u56e2\u6240\u6709\u00b7\u6cf0\u52d2\u00b7\u65af\u5a01\u592b\u7279-Shake It Off\uff0c\u73af\u7403\u97f3\u4e50\u96c6\u56e2\u62e5\u6709/\u72ec\u5bb6\u6388\u6743\u3002\n\u6e90\u4ee3\u7801\u6307\u51fa\uff0c\u4e0a\u8ff0Icona Pop\u4f5c\u54c1\u53d7YouTube Standard License\u7684\u4fdd\u62a4\uff0c\u8be5\u8bb8\u53ef\u8bc1\u660e\u786e\u9650\u5236\u5bf9\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u4f5c\u54c1\u7684\u8bbf\u95ee\uff0c\u4ec5\u9650\u4e8e\u5728YouTube\u4e0a\u6d41\u5a92\u4f53\uff0c\u5e76\u7981\u6b62\u5728\u672a\u7ecf\u7248\u6743\u6240\u6709\u8005\u540c\u610f\u7684\u60c5\u51b5\u4e0b\u8fdb\u4e00\u6b65\u590d\u5236\u6216\u4f20\u64ad\uff1b\u4e0a\u8ff0Justin Timberlake\u4f5c\u54c1\u53d7\u989d\u5916\u7684\u5e74\u9f84\u4fdd\u62a4\u6807\u8bc6\u7b26\u4fdd\u62a4\uff1b\u5bf9\u4e0a\u8ff0Taylor Swift\u4f5c\u54c1\u7684\u8bf7\u6c42\u662f\uff0c\u5728\u672a\u7ecf\u8457\u4f5c\u6743\u4eba\u6216YouTube\u6388\u6743\u7684\u60c5\u51b5\u4e0b\uff0c\u4ece\u76f8\u5173\u89c6\u542c\u4f5c\u54c1\u83b7\u53d6M4A\u97f3\u9891\u6587\u4ef6\u3002\n\u6211\u4eec\u771f\u8bda\u5730\u76f8\u4fe1\uff0c\u6b64\u6d3b\u52a8\u672a\u7ecf\u7248\u6743\u4eba\u3001\u5176\u4ee3\u7406\u4eba\u6216\u6cd5\u5f8b\u6388\u6743\u3002\u6839\u636e\u6211\u4eec\u53ef\u83b7\u5f97\u7684\u6570\u636e\uff0c\u6211\u4eec\u65ad\u8a00\u672c\u901a\u77e5\u4e2d\u7684\u4fe1\u606f\u662f\u51c6\u786e\u7684\u3002\n\u8fdd\u53cd\u53cd\u89c4\u907f\u89c4\u5b9a\u3002\u6211\u4eec\u8fd8\u6ce8\u610f\u5230\uff0c\u6e90\u4ee3\u7801\u7684\u63d0\u4f9b\u6216\u8d29\u8fd0\u8fdd\u53cd\u4e86USC\u00a717\u00a71201(A)(2)\u548c1201(B)(1)\u3002\u6e90\u4ee3\u7801\u4e3b\u8981\u662f\u4e3a\u89c4\u907f\u6709\u6548\u63a7\u5236\u8bbf\u95eeYouTube\u4e0a\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u5f55\u97f3(\u5305\u62ec\u6211\u4eec\u7684\u4f1a\u5458\u62e5\u6709\u7684\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u5f55\u97f3)\u7684\u6280\u672f\u63aa\u65bd\u800c\u8bbe\u8ba1\u6216\u751f\u4ea7\u5e76\u9500\u552e\u7684\u6280\u672f\u3002\u6709\u5173\u8fdb\u4e00\u6b65\u7684\u80cc\u666f\uff0c\u8bf7\u53c2\u9605\u6240\u9644\u7684\u6c49\u5821\u5730\u533a\u6cd5\u9662\u7684\u5224\u51b3\uff0c\u8be5\u5224\u51b3\u63cf\u8ff0\u4e86\u6709\u4e89\u8bae\u7684\u6280\u672f\u63aa\u65bd(\u79f0\u4e3aYouTube\u7684\u201c\u6eda\u52a8\u5bc6\u7801\u201d)\uff0c\u4ee5\u53ca\u6cd5\u9662\u8ba4\u5b9aYouTube\u91c7\u7528\u7684\u6280\u672f\u662f\u6b27\u76df\u610f\u4e49\u4e0a\u7684\u6709\u6548\u6280\u672f\u63aa\u65bd\u3002\n\u548c\u5fb7\u56fd\u6cd5\u5f8b\uff0c\u5b9e\u8d28\u4e0a\u4e0e\u201c\u7f8e\u56fd\u6cd5\u5178\u201d\u7b2c17\u7f16\u7b2c1201\u6761\u76f8\u540c\u3002\u6cd5\u9662\u8fdb\u4e00\u6b65\u8ba4\u5b9a\uff0c\u8be5\u6848\u4e2d\u7684\u4e89\u8bae\u670d\u52a1\u975e\u6cd5\u89c4\u907f\u4e86YouTube\u7684\u6eda\u52a8\u5bc6\u7801\u6280\u672f\u4fdd\u62a4\u63aa\u65bd\u30022 YouTube-dl\u6e90\u4ee3\u7801\u7684\u8fd0\u884c\u65b9\u5f0f\u4e0e\u6c49\u5821\u5730\u533a\u6cd5\u9662\u5224\u51b3\u4e2d\u7684\u4e89\u8bae\u670d\u52a1\u57fa\u672c\u76f8\u540c\u3002\u56e0\u6b64\uff0cGithub(\u672c\u901a\u77e5\u7684\u4e3b\u9898)\u4e0a\u63d0\u4f9b\u7684YouTube-dl\u6e90\u4ee3\u7801\u7ed5\u8fc7YouTube\u7684\u6eda\u52a8\u5bc6\u7801\uff0c\u4ee5\u83b7\u5f97\u5bf9\u53d7\u7248\u6743\u4fdd\u62a4\u7684\u97f3\u9891\u6587\u4ef6\u7684\u672a\u7ecf\u6388\u6743\u7684\u8bbf\u95ee\uff0c\u8fd9\u8fdd\u53cd\u4e86YouTube\u7684\u660e\u786e\u670d\u52a1\u6761\u6b3e\uff0c3\u5e76\u4e14\u660e\u663e\u8fdd\u53cd\u4e86\u201c\u6570\u5b57\u5343\u5e74\u7248\u6743\u6cd5\u201d(\u201c\u6570\u5b57\u5343\u5e74\u7248\u6743\u6cd5\u201d\uff0c\u7f8e\u56fd\u8054\u90a6\u6cd5\u5178\u7b2c17\u7f16\uff0c\u7b2c1201\u8282)\u7b2c1201\u6761\u3002\n\u4e8b\u5b9e\u4e0a\uff0cyoutube-dl\u6e90\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u8868\u660e\uff0c\u6e90\u4ee3\u7801\u7684\u8bbe\u8ba1\u548c\u9500\u552e\u76ee\u7684\u662f\u4e3a\u4e86\u89c4\u907fYouTube\u5141\u8bb8\u672a\u7ecf\u6388\u6743\u8bbf\u95ee\u6211\u4eec\u6210\u5458\u7684\u7248\u6743\u4f5c\u54c1\u7684\u6280\u672f\u63aa\u65bd\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u672a\u7ecf\u6388\u6743\u7684\u590d\u5236\u548c\u5206\u53d1\uff1a\u4ed6\u4eec\u8bc6\u522b\u6211\u4eec\u6210\u5458\u7684\u4f5c\u54c1\uff0c\u6307\u51fa\u8fd9\u4e9b\u4f5c\u54c1\u662fVEVO\u89c6\u9891(\u51e0\u4e4e\u6240\u6709\u89c6\u9891\u90fd\u5f52\u6211\u4eec\u7684\u6210\u5458\u516c\u53f8\u6240\u6709)\uff0c\u4ed6\u4eec\u627f\u8ba4\u8fd9\u4e9b\u4f5c\u54c1\u662f\u6839\u636eYouTube\u6807\u51c6\u8bb8\u53ef\u6388\u6743\u7ed9YouTube\u7684\uff0c\u5e76\u4e14\u4ed6\u4eec\u5728\u6e90\u4ee3\u7801\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u793a\u4f8b\u6765\u63cf\u8ff0\u5982\u4f55\u83b7\u5f97\u5bf9\u6211\u4eec\u6210\u5458\u4f5c\u54c1\u7684\u526f\u672c\u7684\u672a\u7ecf\u6388\u6743\u8bbf\u95ee\u3002\n\u9274\u4e8e\u4e0a\u8ff0\u4fb5\u72af\u7248\u6743\u548c\u53cd\u89c4\u907f\u7684\u884c\u4e3a\uff0c\u6211\u4eec\u8981\u6c42\u60a8\u7acb\u5373\u5173\u95ed\u5e76\u7981\u6b62\u8bbf\u95ee\u6240\u6709\u6258\u7ba1\u5728giHub\u4e0a\u7684youtube-dl\u6e90\u4ee3\u7801\u7684\u4f4d\u7f6e\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4e0a\u8ff0\u4ee3\u8868\u6027\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u3002\n\u672c\u7535\u5b50\u90ae\u4ef6\u4e0d\u6784\u6210\u653e\u5f03\u4efb\u4f55\u56e0\u4efb\u4f55\u6b64\u7c7b\u672a\u7ecf\u6388\u6743\u7684\u6d3b\u52a8\u800c\u9020\u6210\u7684\u635f\u5bb3\u8d54\u507f\u7684\u6743\u5229\uff0c\u6240\u6709\u6b64\u7c7b\u6743\u5229\u4ee5\u53ca\u5176\u4ed6\u6551\u6d4e\u8981\u6c42\u5747\u660e\u786e\u4fdd\u7559\u3002\n\u4f60\u53ef\u4ee5\u6253RIAA(\u79c1\u4eba)\u7535\u8bdd\u8054\u7cfb\u6211\u3002[\u79c1\u4eba]\uff0c\u6216\u901a\u8fc7\u7535\u5b50\u90ae\u4ef6[\u79c1\u4eba]\u8ba8\u8bba\u6b64\u901a\u77e5\u3002", "note_en": "I am contacting you on behalf of the Recording Industry Association of America, Inc. (RIAA) andits member record companies. The RIAA is a trade association whose member companiescreate, manufacture or distribute sound recordings representing approximately eighty-five (85)percent of all legitimate recorded music consumption in the United States. Under penalty ofperjury, we submit that the RIAA is authorized to act on behalf of its member companies onmatters involving the infringement of their sound recordings, audiovisual works and images,including enforcing their copyrights and common law rights on the Internet.\n Copyright Violations. We have learned that your service is hosting the youtube-dl source codeon its network at the following locations, among others:\n  The above list includes a representative sample of the youtube-dl forks of the youtube-dlsource code being hosted on GitHub. Based on our review of the representative sample notedabove, we have a good faith belief that most of the youtube-dl forks are infringing to the sameextent as the parent repository.\n The clear purpose of this source code is to (i) circumvent the technological protection measuresused by authorized streaming services such as YouTube, and (ii) reproduce and distribute musicvideos and sound recordings owned by our member companies without authorization for suchuse. We note that the source code is described on GitHub as \u201ca command-line program todownload videos from YouTube.com and a few more sites.\u201d1\n We also note that the sourcecode prominently includes as sample uses of the source code the downloading of copies of ourmembers\u2019 copyrighted sound recordings and music videos, as noted in Exhibit A hereto. Forexample, as shown on Exhibit A, the source code expressly suggests its use to copy and/ordistribute the following copyrighted works owned by our member companies:\n \u2022 Icona Pop \u2013 I Love It (feat. Charli XCX) [Official Video], owned by Warner Music Group \u2022 Justin Timberlake \u2013 Tunnel Vision (Explicit), owned by Sony Music Group \u2022 Taylor Swift \u2013 Shake it Off, owned/exclusively licensed by Universal Music Group\n The source code notes that the Icona Pop work identified above is under the YouTube Standardlicense, which expressly restricts access to copyrighted works only for streaming on YouTubeand prohibits their further reproduction or distribution without consent of the copyright owner;that the Justin Timberlake work identified above is under an additional age protectionidentifier; and that the request for the Taylor Swift work identified above is to obtain, withoutauthorization of the copyright owner or YouTube, an M4A audio file from the audiovisual workin question.\n We have a good faith belief that this activity is not authorized by the copyright owner, its agent,or the law. We assert that the information in this notification is accurate, based upon the dataavailable to us.\n Anticircumvention Violation. We also note that the provision or trafficking of the source codeviolates 17 USC \u00a7\u00a71201(a)(2) and 1201(b)(1). The source code is a technology primarilydesigned or produced for the purpose of, and marketed for, circumventing a technologicalmeasure that effectively controls access to copyrighted sound recordings on YouTube, includingcopyrighted sound recordings owned by our members. For further context, please see theattached court decision from the Hamburg Regional Court that describes the technologicalmeasure at issue (known as YouTube\u2019s \u201crolling cipher\u201d), and the court\u2019s determination that thetechnology employed by YouTube is an effective technical measure within the meaning of EU\n  and German law, which is materially identical to Title 17 U.S.C. \u00a71201 of the United StatesCode. The court further determined that the service at issue in that case unlawfullycircumvented YouTube\u2019s rolling cipher technical protection measure.2The youtube-dl source code functions in a manner essentially identical to the service at issue inthe Hamburg Regional Court decision. As there, the youtube-dl source code available onGithub (which is the subject of this notice) circumvents YouTube\u2019s rolling cipher to gainunauthorized access to copyrighted audio files, in violation of YouTube\u2019s express terms ofservice,3 and in plain violation of Section 1201 of the Digital Millennium Copyright Act, 17 U.S.C.\u00a71201.\n Indeed, the comments in the youtube-dl source code make clear that the source code wasdesigned and is marketed for the purpose of circumventing YouTube\u2019s technological measuresto enable unauthorized access to our member\u2019s copyrighted works, and to make unauthorizedcopies and distributions thereof: they identify our member\u2019s works, they note that the worksare VEVO videos (virtually all of which are owned by our member companies), theyacknowledge the those works are licensed to YouTube under the YouTube standard license, andthey use those examples in the source code to describe how to obtain unauthorized access tocopies of our members\u2019 works.\n In light of the above noted copyright infringements and anticircumvention violations, we askthat you immediately take down and disable access to the youtube-dl source code at all of itslocations where it is hosted on GitHub, including without limitation those locations in therepresentative list set forth above.\n This e-mail does not constitute a waiver of any right to recover damages incurred by virtue ofany such unauthorized activities, and all such rights as well as claims for other relief areexpressly reserved.\n You may contact me at RIAA, [private] Tel. [private], or email [private] to discuss this notice.", "posttime": "2020-10-24 07:29:29", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "youtube,\u6765\u81ea,dl", "title": "YouTube-dl\u5df2\u6536\u5230\u6765\u81eaRIAA\u7684DMCA\u4e0b\u7ebf", "title_en": "YouTube-dl has received a DMCA takedown from RIAA", "transed": 1, "url": "https://github.com/github/dmca/blob/master/2020/10/2020-10-23-RIAA.md", "via": "", "real_tags": ["youtube", "\u6765\u81ea", "dl"]}]
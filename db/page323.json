[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1031901, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u521b\u5efa\u60a8\u81ea\u5df1\u7684\u539f\u521b\u6e38\u620f\uff0c\u5bfc\u5165\u81ea\u5b9a\u4e49\u8d44\u6e90\uff0c\u4f7f\u7528\u811a\u672c\u81ea\u52a8\u5316\u6e38\u620f\uff0c\u8bbe\u7f6e\u5b8c\u6574\u7684RPG\u5730\u4e0b\u57ce\uff0c\u64cd\u7eb5\u7269\u7406\uff0c\u521b\u5efa\u94f0\u94fe\u548c\u5173\u8282\uff0c\u5f53\u7136\u8fd8\u53ef\u4ee5\u5728\u60a8\u8f93\u6389\u6e38\u620f\u65f6\u7ffb\u8f6c\u684c\u5b50\u3002\u6240\u6709\u8bbe\u5907\u5747\u914d\u6709\u4e0e\u84b8\u6c7d\u8f66\u95f4\u96c6\u6210\u7684\u6613\u4e8e\u4f7f\u7528\u7684\u7cfb\u7edf\u3002\u60a8\u53ef\u4ee5\u5728\u684c\u9762\u6a21\u62df\u5668\u4e2d\u505a\u4efb\u4f55\u60a8\u60f3\u505a\u7684\u4e8b\u60c5-\u53ef\u80fd\u6027\u662f\u65e0\u7a77\u7684\uff01\u9605\u8bfb\u6709\u5173\u684c\u9762\u6a21\u62df\u5668\u7684\u66f4\u591a\u4fe1\u606f", "note_en": "Create your own original games, import custom assets, automate games with scripting, set up complete RPG dungeons, manipulate the physics, create hinges &amp; joints, and of course flip the table when you are losing the game. All with an easy to use system integrated with Steam Workshop. You can do anything you want in Tabletop Simulator - The possibilities are endless!    Read more about Tabletop Simulator", "posttime": "2020-10-29 10:39:23", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u684c\u9762,tabletop,\u6e38\u620f", "title": "\u684c\u9762\u4eff\u771f\u5668", "title_en": "Tabletop Simulator", "transed": 1, "url": "https://tabletopsimulator.com/", "via": "", "real_tags": ["\u684c\u9762", "tabletop", "\u6e38\u620f"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031900, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u76f8\u673a\u65e0\u5173\u7d27\u8981\uff0c\u8fd9\u662f\u6444\u5f71\u754c\u7ecf\u5e38\u91cd\u590d\u7684\u4e00\u53e5\u8bdd\u3002\u6240\u6709\u90a3\u4e9b\u82b1\u54e8\u7684\u8bbe\u5907\u90fd\u662f\u6d6a\u8d39\u94b1\uff0c\u597d\u7684\u7167\u7247\u90fd\u662f\u7531\u8bad\u7ec3\u6709\u7d20\u7684\u773c\u775b\u6fc0\u53d1\u7075\u611f\u7684\u6444\u5f71\u5e08\u62cd\u6444\u7684\u3002\n\u663e\u7136\uff0c\u6709\u4e9b\u7167\u7247\u592a\u597d\u4e86\uff0c\u65e0\u6cd5\u7528\u5854\u5409\u7279\u516c\u53f8\u7684200\u7f8e\u5143\u5de6\u53f3\u7684\u76f8\u673a\u62cd\u6444\uff0c\u4e13\u4e1a\u4eba\u58eb\u4e702000\u7f8e\u5143\u7684\u955c\u5934\u548c3000\u7f8e\u5143\u7684\u76f8\u673a\u673a\u8eab\u80af\u5b9a\u662f\u6709\u539f\u56e0\u7684\u3002\u8fd9\u6b3e\u76f8\u673a\u65e0\u5173\u7d27\u8981\uff0c\u6c11\u95f4\u4f20\u8bf4\u90fd\u5f88\u611f\u4eba\u548c\u9f13\u821e\u4eba\u5fc3\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u8bf4\u51fa\u53e3\uff0c\u7136\u540e\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u8dd1\u56de\u4ed6\u4eec\u7684\u5c3c\u5eb7\u8c23\u8a00\u7f51\u7ad9\uff0c\u8fc7\u5ea6\u5206\u6790\u4e0d\u540c\u578b\u53f7\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u5e76\u601d\u8003\u4e0b\u4e00\u8f6e\u786c\u4ef6\u66f4\u65b0\u5468\u671f\u4e4b\u540e\u4f1a\u62cd\u51fa\u591a\u5c11\u66f4\u597d\u7684\u7167\u7247\u3002\n\u4f46\u662f\u539f\u6765\u7684\u8bf4\u6cd5\u5b9e\u9645\u4e0a\u662f\u6b63\u786e\u7684\u3002\u8fd9\u662f\u5f88\u96be\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u5bf9\u73b0\u4ee3\u6444\u5f71\u5e08\u53ef\u7528\u7684\u6240\u6709\u73a9\u5177\u8fdb\u884c\u6bd4\u8f83\u548c\u8d2a\u5a6a\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\u3002\u6211\u7ec8\u4e8e\u610f\u8bc6\u5230\uff0c\u5176\u4e2d\u4e00\u4e9b\u66fe\u7ecf\u8ba9\u6211\u60ca\u53f9\u7684\u7167\u7247\u53ef\u80fd\u770b\u8d77\u6765\u5f88\u968f\u610f\uff0c\u4f46\u5f80\u5f80\u6d89\u53ca\u5230\u590d\u6742\u7684\u706f\u5149\u8bbe\u7f6e\u3002\u54c7\uff0c\u6211\u771f\u5e0c\u671b\u6211\u6709\u4e00\u53f0\u90a3\u6837\u7684\u76f8\u673a\uff01\u5982\u679c\u4f60\u80fd\u540e\u9000\u4e00\u6b65\uff0c\u770b\u5230\u7684\u4e0d\u4ec5\u4ec5\u662f\u76f8\u6846\u7684\u955c\u5934\uff0c\u8fd9\u91cc\u4f1a\u6709\u4e00\u4e2a\u706f\u7bb1\uff0c\u90a3\u91cc\u7684\u4e00\u5f20\u767d\u8272\u5927\u5e8a\u5355\u4e0a\u4f1a\u6709\u4e00\u9053\u95ea\u5149\u53cd\u5f39\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u662f\u7684\uff0c\u8fd9\u6d89\u53ca\u5230\u5f88\u591a\u5de5\u4f5c\uff0c\u4f46\u4eba\u4eec\u9519\u8bef\u5730\u8ba4\u4e3a\u76f8\u673a\u505a\u7684\u4e8b\u60c5\u6bd4\u5b83\u5b9e\u9645\u505a\u7684\u8981\u591a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f88\u96be\u627e\u5230\u4e00\u53f0\u771f\u6b63\u4e0d\u597d\u7684\u76f8\u673a\u3002\n\u5982\u679c\u60a8\u6709\u60f3\u8981\u7f16\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\u3001\u5de5\u5177\u6216\u6e38\u620f\uff0c\u751f\u6d3b\u5c31\u5f88\u7f8e\u597d\u3002\u5373\u4f7f\u662f\u50cfRuby\u8fd9\u6837\u7684\u8bed\u8a00\uff0c\u5728\u4efb\u4f55\u4ee5\u6027\u80fd\u4e3a\u5bfc\u5411\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5f80\u5f80\u5f98\u5f8a\u5728\u5e95\u90e8\uff0c\u4e5f\u6bd4\u4eba\u4eec\u572820\u4e16\u7eaa80\u5e74\u4ee3\u5b66\u4e60\u7528\u6765\u7f16\u51998\u4f4d\u5bb6\u7528\u8ba1\u7b97\u673a\u7684\u57fa\u672c\u8bed\u8a00\u5feb\u6570\u5343\u500d\u3002\u8fd9\u5e76\u4e0d\u5938\u5f20\uff0c\u6211\u7684\u610f\u601d\u786e\u5b9e\u662f\u51e0\u5343\u4e2a\u3002\n\u4e16\u754c\u4e0a\u5145\u65a5\u7740\u4f18\u79c0\u7684\u7f16\u7a0b\u8bed\u8a00\uff1aPython\u3001Clojure\u3001Scala\u3001Perl\u3001Javascript\u3001OCaml\u3001Haskell\u3001Erlang\u548cLua\u3002\u5927\u591a\u6570\u9488\u5bf9\u4e2a\u522b\u8bed\u8a00\u7684\u62a8\u51fb\u5728\u603b\u4f53\u4e0a\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u5982\u679c\u4f60\u559c\u6b22Lisp\uff0c\u90a3\u5c31\u53bb\u8bd5\u8bd5\u5427\u3002\u4f60\u6ca1\u6709\u7406\u7531\u4e0d\u80fd\u7528\u5b83\u6765\u505a\u4f60\u60f3\u505a\u7684\u4e8b\u3002Erlang\u4e2d\u7684\u5b57\u7b26\u4e32\u5904\u7406\u5f88\u5dee\u5417\uff1f\u4e0e\u4ec0\u4e48\u76f8\u6bd4\uff1f\u8c01\u5728\u4e4e\u5462\uff0c\u5b83\u6bd420\u5e74\u524d\u6211\u7528\u6765\u7f16\u7a0b\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u8981\u5bb9\u6613\u5f97\u591a\uff0c\u4e0d\u503c\u5f97\u8ba8\u8bba\u3002Perl\u5f88\u4e11\u5417\uff1f\u8fd9\u5bf9\u6211\u6765\u8bf4\u65e0\u5173\u7d27\u8981\uff1b\u5728\u91cc\u9762\u7f16\u7a0b\u5f88\u6709\u8da3\u3002\n\u4eba\u4eec\u82b1\u4e86\u592a\u591a\u7684\u65f6\u95f4\u6765\u8ba8\u8bba\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u4f18\u70b9\u3002\u9664\u975e\u6709\u4e00\u6b3e\u4ea7\u54c1\u80fd\u771f\u6b63\u8ba9\u6211\u7684\u751f\u4ea7\u7387\u6bd4\u5176\u4ed6\u4efb\u4f55\u4e1c\u897f\u90fd\u6709\u4e00\u4e2a\u5b8c\u6574\u7684\u5e45\u5ea6\u63d0\u5347\uff0c\u5426\u5219\u6211\u5f88\u597d\u3002", "note_en": "It&#39;s an oft-repeated saying in photography that the camera doesn&#39;t matter. All that fancy equipment is a waste of money, and good shots are from inspired photographers with well-trained eyes.\n  Clearly some photos are just too good to be taken with some $200 camera from Target, and there must be a reason that pros can buy two-thousand dollar lenses and three-thousand dollar camera bodies. The &#34;camera doesn&#39;t matter&#34; folklore is all touchy-feely and inspirational and rolls off the tongue easily enough, and then everyone runs back to their Nikon rumor sites and over-analyzes the differences between various models, and thinks about how much better photos will turn out after the next hardware refresh cycle.\n But the original saying is actually correct. It&#39;s just hard to accept, because it&#39;s fun to compare and lust after all the toys available to the modern photographer. I&#39;ve finally realized that some of those photos that once made me say &#34;Wow, I wish I had a camera like that!&#34; might look casual, but often involve elaborate lighting set-ups. If you could pull back and see more than just the framed shot, there would be a light box over here, and a flash bounced off of a big white sheet over there, and so on. Yes, there&#39;s a lot of work involved, but the camera is incorrectly assumed to be doing more than it really is. In fact it&#39;s difficult to find a truly bad camera.\n  Life is good if you have applications or tools or games that you want to write. Even a language like Ruby, which tends to hang near the bottom of any performance-oriented benchmark, is thousands of times faster than BASICs that people were learning to program 8-bit home computers with in the 1980s. That&#39;s not an exaggeration, I do mean thousands.\n The world is brimming with excellent programming languages: Python, Clojure, Scala, Perl, Javascript, OCaml, Haskell, Erlang, Lua. Most slams against individual languages are meaningless in the overall scheme of things. If you like Lisp, go for it. There&#39;s no reason you can&#39;t use it to do what you want to do. String handling is poor in Erlang? Compared to what? Who cares, it&#39;s so much easier to use than anything I was programming with twenty years ago that it&#39;s not worth discussing. Perl is ugly? It doesn&#39;t matter to me; it&#39;s fun to program in.\n Far, far, too much time has been spent debating the merits of various programming languages. Until one comes along that truly gives me a full magnitude increase in productivity over everything else, I&#39;m good.", "posttime": "2020-10-29 10:39:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u4e8b\u60c5,good,\u8bed\u8a00", "title": "\u4e8b\u60c5\u600e\u4e48\u4f1a\u53d8\u5f97\u8fd9\u4e48\u597d\uff1f(2009)", "title_en": "How Did Things Ever Get This Good? (2009)", "transed": 1, "url": "https://prog21.dadgum.com/51.html", "via": "", "real_tags": ["\u4e8b\u60c5", "good", "\u8bed\u8a00"]}, {"category": "", "categoryclass": "", "imagename": "80014e616500c8966353726512bbacb4.jpg", "infoid": 1031899, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "AMD\u51c6\u5907\u7ed3\u675f\u4e3a\u671f\u4e00\u4e2a\u6708\u7684\u91cd\u8981\u53d1\u5e03\u6d3b\u52a8\uff0c\u5e76\u4e3a\u5168\u516c\u53f8\u67b6\u6784\u7684\u4e0b\u4e00\u4e2a\u65f6\u4ee3\u6253\u5f00\u5927\u95e8\uff0cAMD\u53d1\u5e03\u4e86RADEON RX 6000\u7cfb\u5217\u89c6\u9891\u5361\uff0c\u4ece\u800c\u7ed3\u675f\u4e86\u672c\u6708\u7684\u6700\u540e\u4e00\u573a\u4e3b\u9898\u6f14\u8bb2\u3002\u7531AMD\u9996\u5e2d\u6267\u884c\u5b98Lisa Su\u535a\u58eb\u518d\u6b21\u4e3b\u6301\uff0cAMD\u957f\u8fbe\u4e00\u5c0f\u65f6\u7684\u4e3b\u9898\u6f14\u8bb2\u63ed\u793a\u4e86AMD\u65b0\u7684RDNA2\u67b6\u6784\u89c6\u9891\u5361\u7cfb\u5217\u7684\u524d\u4e09\u4e2a\u90e8\u5206\uff1aRADEON RX 6800\u30016800 XT\u548c6900 XT\u3002\u4f5c\u4e3aAMD\u65b0\u7684\u9ad8\u7aef\u663e\u5361\u9635\u5bb9\u7684\u6838\u5fc3\uff0cAMD\u610f\u5473\u7740\u4e0e\u4e3b\u8981\u7ade\u4e89\u5bf9\u624bNVIDIA\u4e2d\u7684\u4f7c\u4f7c\u8005\u5c55\u5f00\u6218\u6597\u3002\u6211\u4eec\u5c06\u4eb2\u773c\u76ee\u7779AMD\u80fd\u5426\u572811\u670818\u65e5\u7b2c\u4e00\u6279\u4e24\u5f20\u5361\u4e0a\u5e02\u65f6\u593a\u56de\u9ad8\u7aef\u5e02\u573a\u3002\nAMD\u5373\u5c06\u63a8\u51fa\u7684\u89c6\u9891\u5361\u5bf9\u8be5\u516c\u53f8\u6765\u8bf4\u5df2\u7ecf\u7b49\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u800c\u4e14\u4ed6\u4eec\u4e00\u76f4\u5728\u7279\u522b\u4e25\u5389\u5730\u53d6\u7b11\u3002\u5bf9\u4e8eAMD\u6765\u8bf4\uff0cRADEON RX 6000\u7cfb\u5217\u4ee3\u8868\u7740\u6574\u4e2a\u516c\u53f8\u52aa\u529b\u7684\u9876\u5cf0\uff0c\u56e0\u4e3a\u4eceGPU\u67b6\u6784\u56e2\u961f\u548c\u534a\u5b9a\u5236SoC\u56e2\u961f\u5230Zen CPU\u56e2\u961f\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5728\u5f00\u53d1AMD\u7684\u6700\u65b0GPU\u6280\u672f\u65b9\u9762\u53d1\u6325\u4e86\u4f5c\u7528\u3002\u4e00\u76f4\u4ee5\u6765\uff0c\u8fd9\u4e9b\u65b0\u7684\u663e\u5361\u90fd\u662fAMD\u81f3\u5c11\u4e94\u5e74\u6765\u6700\u597d\u7684\u673a\u4f1a\uff0c\u6700\u7ec8\u5728\u9ad8\u7aef\u663e\u5361\u5e02\u573a\u8d76\u4e0aNVIDIA\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u7406\u89e3\u7684\u662f\uff0c\u8be5\u516c\u53f8\u5bf9RX6000\u7684\u542b\u4e49\u611f\u5230\u5174\u594b-\u800c\u4e14\u4e0d\u4ec5\u4ec5\u662f\u4ee5\u8425\u9500\u7684\u65b9\u5f0f\u3002\n\u65b0\u5361\u91c7\u7528\u7684\u662fAMD\u7684RDNA2 GPU\u67b6\u6784\u3002RDNA2\u5c06\u4e8e\u4e0b\u4e2a\u6708\u51e0\u4e4e\u540c\u65f6\u5728\u6e38\u620f\u673a\u548cPC\u663e\u5361\u4e0a\u53d1\u5e03\uff0c\u5b83\u5c06\u6210\u4e3a\u7ea62\u4ebf\u53f0\u89c6\u9891\u6e38\u620f\u673a\u7684\u4e3b\u5e72\uff0c\u4ee5\u53ca\u5373\u5c06\u5230\u6765\u7684\u65e0\u6570AMD GPU\u548cAPU\u3002\u56e0\u6b64\uff0cAMD\u5df2\u7ecf\u5168\u529b\u4ee5\u8d74\u5730\u8bbe\u8ba1\u5b83\uff0c\u7ec4\u88c5\u4e86\u4e00\u4e2a\u5904\u4e8e\u5c16\u7aef\u6280\u672f\u529f\u80fd(\u5982\u5149\u7ebf\u8ddf\u8e2a\u548cDirectX12\u65d7\u8230\u652f\u6301)\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u540c\u65f6\u5229\u7528\u4ed6\u4eec\u4ece\u6210\u529f\u7684Zen CPU\u4f53\u7cfb\u7ed3\u6784\u4e2d\u5b66\u5230\u7684\u8bb8\u591a\u4e1c\u897f\u6765\u6700\u5927\u5316RDNA2\u7684\u6027\u80fd\u3002RDNA2\u4e5f\u5f88\u5c11\u89c1\uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f\u5efa\u7acb\u5728\u65b0\u7684\u5236\u9020\u5de5\u827a\u4e4b\u4e0a\uff0c\u56e0\u6b64AMD\u6e90\u81eaAMD\u65e9\u671f\u7684rDNA(1)\u67b6\u6784\u548c\u76f8\u5173\u7684\u89c6\u9891\u5361\uff0cAMD\u4f9d\u9760\u67b6\u6784\u6539\u8fdb\u6765\u5b9e\u73b0\u51e0\u4e4e\u6240\u6709\u7684\u6027\u80fd\u63d0\u5347\u3002\u7684\u786e\uff0cAMD\u7684RDNA2\u67b6\u6784\u5c06\u51b3\u5b9a\u4ed6\u4eec\u7684\u65b0\u724c\u7684\u6210\u8d25\u3002\n\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\uff0cRDNA2\u5c06\u6e17\u900f\u5230\u8d8a\u6765\u8d8a\u591a\u7684AMD\u82af\u7247\u8bbe\u8ba1\u4e2d\u3002\u4f46\u5c31\u76ee\u524d\u800c\u8a00\uff0c\u5728\u4e2a\u4eba\u7535\u8111\u9886\u57df\uff0cAMD\u4ece\u53d1\u70e7\u53cb\u7ea7\u522b\u7684\u663e\u5361\u5f00\u59cb\u3002\u7b2c\u4e00\u4e2aRDNA2\u56fe\u5f62\u5904\u7406\u5668\u662fNavi21-\u53c8\u540d\u201cBig Navi\u201d-AMD\u5c06\u4f7f\u7528\u5b83\u4f5c\u4e3a\u4e09\u4e2a\u89c6\u9891\u5361\u7684\u57fa\u7840\u3002\u5b83\u4eec\u5206\u522b\u662fRADEON RX 6900 XT\u30016800 XT\u548c6800\u3002\u51ed\u501f\u8fd9\u4e9b\u6700\u65b0\u7684\u5361\uff0cAMD\u76f4\u63a5\u7784\u51c6\u4e86NVIDIA\u6700\u8fd1\u63a8\u51fa\u7684GeForce RTX 30\u7cfb\u5217\u9635\u5bb9\uff0c\u76ee\u6807\u5206\u522b\u662f\u6ee1\u8db3(\u6216\u51fb\u8d25)RTX 3090\u30013080\u548c3070\u3002\u53ef\u4ee5\u8bf4\uff0cAMD\u5df2\u7ecf\u6709\u51e0\u5e74\u6ca1\u80fd\u4e0eNVIDIA\u7684\u9876\u7ea7\u540d\u7247\u5339\u654c\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e9b\u90fd\u662f\u4e00\u5bb6\u5728\u8fc7\u53bb\u4e94\u5e74\u91cc\u91cd\u65b0\u5b66\u4f1a\u4e86\u5982\u4f55\u53d8\u5f97\u975e\u5e38\u5927\u80c6\u7684\u516c\u53f8\u975e\u5e38\u5927\u80c6\u7684\u8bf4\u6cd5\u3002\n\u7531\u4e8e\u4eca\u5929\u7684\u58f0\u660e\u5e76\u4e0d\u662f\u5b8c\u5168\u7684\u6280\u672f\u6df1\u5ea6\u6f5c\u6c34-\u5c31\u50cf\u7985\u5b973\u7684\u58f0\u660e\u4e00\u6837\uff0c\u6df1\u5ea6\u6f5c\u6c34\u5c06\u66f4\u63a5\u8fd1\u4e8e\u53d1\u5c04-AMD\u53ea\u662f\u5206\u4eab\u4e86\u4e00\u4e9b\u65b0\u5361\u7684\u9ad8\u7ea7\u522b\u89c4\u683c\u3002\u4f46\u73b0\u5728\u6709\u4e86\u5173\u4e8eCU\u6570\u91cf\u3001\u5185\u5b58\u652f\u6301\u548c\u529f\u8017\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u5bf9AMD\u5c06\u5e26\u6765\u4ec0\u4e48\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u76f8\u4fe1RX 6000\u7cfb\u5217\u5c06\u518d\u6b21\u4f7f\u5176\u5728\u9ad8\u7aef\u5e02\u573a\u5177\u6709\u5b8c\u5168\u7ade\u4e89\u529b\u6709\u4e86\u5f88\u597d\u7684\u4e86\u89e3\u3002\n\u5728AMD\u7684\u89c6\u9891\u5361\u5806\u6808\u4e2d\uff0c\u8be5\u516c\u53f8\u91c7\u53d6\u4e86\u4e0eNVIDIA\u975e\u5e38\u76f8\u4f3c\u7684\u7b56\u7565\u3002\u56e0\u6b64\uff0c\u5c3d\u7ba1RX6900 XT\u4ece\u6280\u672f\u4e0a\u8bb2\u662f\u4ed6\u4eec\u7684\u65d7\u8230\u4ea7\u54c1\uff0c\u4f46\u552e\u4ef7999\u7f8e\u5143\u7684\u5b83\u4ecd\u7136\u4e0eRTX3090\u5c5e\u4e8e\u7c7b\u4f3c\u7684\u201c\u91d1\u94b1\u591a\u4e8e\u7406\u667a\u201d\u7c7b\u522b-\u8fd9\u610f\u5473\u7740AMD\u5e0c\u671b\u4e3a\u8fd9\u5f20\u5361\u6536\u53d6\u5f88\u9ad8\u7684\u6ea2\u4ef7\u3002\u7531\u4e8e\u5b83\u7684\u57fa\u7840\u662f\u4e00\u4e2a\u5b8c\u5168\u542f\u7528\u7684\uff0c\u6beb\u65e0\u7591\u95ee\uff0c\u5927\u91cf\u88c5\u8ba2\u7684Navi21\u56fe\u5f62\u5904\u7406\u5668\uff0c\u8fd9\u662fAMD\u6700\u96be\u751f\u4ea7\u7684\u90e8\u5206\uff0c\u56e0\u6b64\u4e5f\u662f\u6700\u7a00\u6709\u7684\u90e8\u5206\u3002\u6709\u591a\u7f55\u89c1\u8fd8\u6709\u5f85\u89c2\u5bdf\uff0c\u4f46\u7531\u4e8eNavi 21\u65e0\u7591\u662f\u4e00\u4e2a\u5927\u82af\u7247\uff0c\u8fd9\u8981\u5f52\u529f\u4e8e\u5305\u542b80\u4e2aCU\u548c128MB\u65e0\u9650\u7f13\u5b58\u7684268\u4ebf\u4e2a\u6676\u4f53\u7ba1(\u7a0d\u540e\u5c06\u8be6\u7ec6\u4ecb\u7ecd)\uff0c\u6211\u9884\u8ba1AMD\u4e0d\u4f1a\u5f88\u5feb\u5411\u5e02\u573a\u63a8\u51fa6900\u4e2aXTS\u3002\n\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u5f20\u5361\u5c06\u662f\u5b8c\u6574\u7684Navi21\u4f53\u9a8c\u3002\u6240\u670980CU\u90fd\u5c06\u542f\u7528\uff0c\u5f97\u76ca\u4e8eAMD\u4e3a\u65f6\u949f\u901f\u5ea6\u4f18\u5316RDNA2\u67b6\u6784\u7684\u52aa\u529b\uff0c\u5b83\u5c06\u62e5\u67092015 MHz\u7684\u6e38\u620f\u65f6\u949f\u548c225 MHz\u7684\u5cf0\u503c\u6da1\u8f6e\u65f6\u949f(Boost\u65f6\u949f)\u3002\u5047\u8bbeAMD\u6ca1\u6709\u5728RDNA2\u67b6\u6784\u4e0a\u505a\u4efb\u4f55\u592a\u75af\u72c2\u7684\u4e8b\u60c5\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u5361\u7684\u5e73\u5747FP32\u7740\u8272\u5668\u541e\u5410\u91cf\u7ea6\u4e3a20.6TFLOPS\uff0c\u662fRX 5700XT\u541e\u5410\u91cf\u7684\u4e24\u500d\u591a-\u6b63\u597d\u7b26\u5408AMD\u5c06\u5176\u6027\u80fd\u63d0\u9ad8\u4e00\u500d\u4e8eRX 5000\u7cfb\u5217\u7684\u76ee\u6807\u3002\n\u5728\u5185\u5b58\u65b9\u9762\uff0c\u8be5\u5361\u914d\u5907\u4e8616 GB\u7684GDDR6\u3002AMD\u6ca1\u6709\u6b63\u5f0f\u516c\u5e03\u5185\u5b58\u65f6\u949f\u901f\u5ea6\uff0c\u4f46\u6839\u636e\u76ee\u524d\u7684\u6280\u672f\u8d8b\u52bf\uff0c\u6211\u4eec\u9884\u8ba1GDDR6\u5c06\u4ee516Gbps/\u9488\u7684\u901f\u5ea6\u8fd0\u884c(AMD\u540e\u6765\u8bc1\u5b9e\u4e86\u8fd9\u4e00\u70b9)\u3002\u540c\u65f6\uff0c\n\u6700\u540e\uff0cAMD\u8868\u793a\uff0c\u8be5\u5361\u7684\u603b\u7535\u8def\u677f\u529f\u7387(TBP)\u4e3a300W\u3002\u5728\u4e16\u754c\u5404\u5730\u7684ASIC\u8bbe\u8ba1\u8005\u90fd\u5728\u52aa\u529b\u63a7\u5236\u529f\u8017\u7684\u65f6\u5019-\u751a\u81f3\u5f53NVIDIA\u7684\u9876\u7ea7\u5361\u73b0\u5728\u90fd\u8fbe\u5230\u4e86350W-300W TBP\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u8981\u6c42\u3002\u8fd9\u4e0d\u4ec5\u662fAMD\u7684\u6f5c\u5728\u7ade\u4e89\u4f18\u52bf\uff0c\u8fd8\u610f\u5473\u7740\u4ed6\u4eec\u4e0d\u9700\u8981\u589e\u52a0TBP\uff0c\u800c\u4e0d\u662f\u4e4b\u524d\u7684\u9ad8\u7aef\u5361\uff0c\u4e5f\u5c31\u662f\u57fa\u4e8e7 nm\u7684Radeon VII\u3002\n\u7136\u800c\uff0c\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e00\u4e9b\u9884\u671f\u7ba1\u7406\u662f\u5408\u60c5\u5408\u7406\u7684\u3002\u867d\u7136AMD\u6b63\u5728\u6bd4\u8f83RX6900XT\u548cNVIDIA\u7684RTX3090\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\u6d89\u53ca\u5230\u3002\u6211\u4eec\u7a0d\u540e\u5c06\u5206\u89e3AMD\u7684\u5177\u4f53\u6027\u80fd\u4e3b\u5f20\u548c\u57fa\u51c6\u5e7b\u706f\u7247\uff0c\u4f46\u8db3\u4ee5\u8bf4\uff0c\u6b63\u5982AMD\u73b0\u5728\u6b63\u5728\u63a8\u9500\u7684\u4e1c\u897f\uff0c\u5982\u679cRX 6900 XT\u53ef\u4ee5\u4e0e3090\u76f8\u5ab2\u7f8e\uff0c\u5b83\u5c06\u5904\u4e8eAMD\u5361\u6027\u80fd\u6863\u6848\u7684\u6700\u9876\u7aef\uff0c\u5305\u62ec\u8d85\u9891\u3002\u8fd9\u5c06\u4e0e\u524d\u9762\u63d0\u5230\u7684\u6c89\u91cd\u7684\u5783\u573e\u6876\u9f50\u5934\u5e76\u8fdb\u3002\n\u6cbf\u7740\u8fd9\u6761\u7ebf\uff0c\u6211\u4eec\u6709RADEON RX 6800 XT\u3002\u57fa\u4e8e\u7565\u5fae\u964d\u4f4e\u7684Navi21GPU\uff0c\u8fd9\u662f\u666e\u901a\u4eba\u90fd\u80fd\u4e70\u5f97\u8d77\u7684AMD\u5361\u3002\u81f3\u5c11\u53ef\u4ee5\u8bf4\uff0c650\u7f8e\u5143\u7684\u4ef7\u683c\u4ecd\u7136\u5f88\u8d35\uff0c\u4f46\u6bd4\u8d771000\u7f8e\u5143\u76846900\u7f8e\u5143XT\u8981\u4fbf\u5b9c\u5f97\u591a\u3002\n\u5f00\u7bb1\u5373\u7528\uff0cRX 6800 XT\u9644\u5e26\u542f\u7528\u4e8672CU\u3002\u7ed3\u5408\u4e0eRX 6900 XT\u76f8\u540c\u7684\u65f6\u949f\u901f\u5ea6-2015 MHz\u7684\u6e38\u620f\u65f6\u949f\u548c225 MHz\u7684\u5347\u538b\u65f6\u949f-\u4ee5\u53caAMD\u63d0\u4f9b\u7684\u66f4\u591a\u6280\u672f\u7ec6\u8282\uff0c\u8be5\u5361\u7684FP32\u7740\u8272\u5668\u6027\u80fd\u5e73\u5747\u5e94\u4e3a18.6TFLOPS\u5de6\u53f3\u3002\u76f8\u5bf9\u4e8eRX5700\uff0c\u8fd9\u662fAMD\u4e0a\u4e00\u4ee3\u4e3b\u5bfc\u5361\u6027\u80fd\u7684\u4e0d\u52302\u500d\u3002\n\u9664\u4e86CU\u7684\u51cf\u5c11\uff0c\u6839\u636eAMD\u7684\u89c4\u683c\uff0cRX 6800 XT\u548cRX 6900 XT\u4e4b\u95f4\u6ca1\u6709\u5176\u4ed6\u663e\u8457\u7684\u533a\u522b\u3002\u66f4\u5b9e\u60e0\u7684\u5361\u4ecd\u7136\u914d\u5907\u4e8616 GB\u7684GDDR6\u5185\u5b58\uff0c\u6211\u9884\u8ba1\u5b83\u7684\u65f6\u949f\u901f\u5ea6\u4e5f\u5c06\u662f16Gbps/\u9488\uff0c\u9884\u8ba1\u603b\u5e26\u5bbd\u4e3a512 GB/\u79d2\u3002\u5c31\u50cf\u4eca\u5929\u6240\u6709\u7684\u5361\u4e00\u6837\uff0cAMD\u7684Infinity Cache\u5c06\u4f1a\u589e\u52a0128MB\u3002\u540c\u65f6\uff0c\u8be5\u5361\u7684TBP\u627f\u8f7d\u76f8\u540c\u7684300W\u989d\u5b9a\u529f\u7387\u4e3a6900XT\u3002\nAMD\u6b63\u5728\u5c06\u8fd9\u6b3e\u5361\u76f4\u63a5\u5b9a\u4f4d\u4e8eNVIDIA\u7684RTX 3080\uff1b\u4e0e6900XT\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u6ca1\u6709\u661f\u53f7\u53ef\u8a00\u3002\u56e0\u6b64\uff0c\u5982\u679cAMD\u53ef\u4ee5\u4ea4\u4ed8\u4ed6\u4eec\u7684\u8981\u6c42\uff0c\u90a3\u4e48\u8fd96800XT\u5c06\u8fd9\u6837\u505a\u7684\u6743\u5229\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u6027\u80fd\u4e0a\u8fbe\u52303080\uff0c\u5e76\u53ef\u80fd\u5728\u529f\u8017\u4e0a\u51fb\u8d25\u5b83\uff0c\u5c06\u662fAMD\u548cRDNA2\u67b6\u6784\u7684\u4e00\u5927\u80dc\u5229\uff0c\u4e5f\u662f\u5b83\u4eec\u5728\u8fc7\u53bb\u51e0\u5e74\u4e2d\u53d6\u5f97\u8fdb\u5c55\u7684\u4e00\u4e2a\u8ff9\u8c61\u3002\n\u603b\u4f53\u800c\u8a00\uff0c\u8003\u8651\u5230AMD\u7684\u6027\u80fd\u9884\u671f\u548c\u5b9a\u4ef7\uff0c\u4ee5\u53ca\u9884\u671f\u7684\u7ade\u4e89\uff0cAMD\u4eca\u5929\u5728Radeon\u4e3b\u9898\u6f14\u8bb2\u4e2d\u9886\u5148\u8fd9\u5f20\u5361\u4e5f\u5c31\u4e0d\u8db3\u4e3a\u5947\u4e86\u3002\u4ece\u6280\u672f\u4e0a\u8bb2\uff0c\u5b83\u4e0d\u662f\u65d7\u8230\u4ea7\u54c1\uff0c\u4f46\u5c31\u50cfNVIDIA\u8fd9\u8fb9\u7684RTX 3080\u4e00\u6837\uff0c\u5b83\u5c06\u662f\u6700\u53d7\u5173\u6ce8\u7684\u5361\u3002\n\u7136\u800c\uff0c\u8fd9\u5c06\u662fAMD\u65b0\u4ea7\u54c1\u5806\u6808\u4e2d\u7684\u6700\u540e\u4e00\u5f20\u5361\uff0c\u5b83\u5c06\u83b7\u5f97\u6700\u5927\u7684\u9500\u552e\u989d\u3002\u5b8c\u5584\u4e86Navi 21\u4e09\u4eba\u7ec4\u7684\u5361\uff0c\u6211\u4eec\u6709Radeon RX 6800\uff0c\u4e00\u4e2a\u8fdb\u4e00\u6b65\u524a\u51cf\u7684Navi 21\u90e8\u5206\uff0c\u4ee5\u66f4\u4f4e\u7684\u529f\u8017\u548c\u66f4\u4f4e\u7684579\u7f8e\u5143\u7684\u4ef7\u683c\u6765\u6743\u8861\u6027\u80fd\u7684\u4e0b\u964d\u3002\nRX 6800\u5c06\u542f\u752860\u4e2aCU(3\u4e2a\u7740\u8272\u5668\u5f15\u64ce)\uff0c\u5e76\u4e14\u5728\u7981\u7528\u7b2c\u56db\u4e2a\u7740\u8272\u5668\u5f15\u64ce\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u57fa\u672c\u4e0a\u4f7f\u5176\u6210\u4e3a\u5b8c\u6574Navi 21\u7684\u56db\u5206\u4e4b\u4e09\u3002\u76f8\u5bf9\u4e8e\u5176\u4ed6\u724c\uff0c\u65f6\u949f\u901f\u5ea6\u4f1a\u66f4\u4f4e\uff0c\u6e38\u620f\u65f6\u949f\u4e3a1815 MHz\uff0c\u52a9\u63a8\u65f6\u949f\u4e3a2105 MHz\u3002\u6839\u636e\u6211\u4eec\u7684\u8ba1\u7b97\uff0c\u8fd9\u5c06\u7ed9\u536113.9TFLOPS\u7684FP32\u7740\u8272\u5668\u6027\u80fd\uff0c\u6216\u7ea675%\u7684RX 6800XT\u7684\u7740\u8272\u5668\u6027\u80fd\u3002\n\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0cAMD\u6839\u672c\u6ca1\u6709\u5728\u5185\u5b58\u4e0a\u62e8\u53f7\u3002\u5c3d\u7ba1\u5b83\u662f\u5806\u6808\u4e2d\u7b2c\u4e09\u4e2a\u4e5f\u662f\u6700\u7ecf\u6d4e\u5b9e\u60e0\u7684\u5361\uff0c\u4f46\u5b83\u4ecd\u7136\u914d\u5907\u4e8616 GB\u7684GDDR6\u5185\u5b58\u3002\u867d\u7136\u6211\u6000\u7591AMD\u5728\u8fd9\u91cc\u4f1a\u7528\u66f4\u4fbf\u5b9c\u768414Gbps\u5185\u5b58-\u7ed9\u5361448 GB/\u79d2\u7684\u5e26\u5bbd-\u4f46\u603b\u4f53\u6765\u8bf4\u4ecd\u7136\u662f\u5f88\u5927\u7684\u5185\u5b58\u3002\u540c\u6837\uff0cAMD\u4e5f\u4e0d\u4f7f\u7528\u8f83\u4f4e\u65f6\u949f\u7684\u5185\u5b58\uff1b\u5373\u4f7f\u662fRX6800\u4e5f\u83b7\u5f97\u4e86\u4e0e\u5176\u4ed6\u5361\u76f8\u540c\u7684\u9876\u7ea716 Gbps/\u9488\u5185\u5b58(\u4ee5\u53ca512 GB/\u79d2\u7684\u5185\u5b58\u5e26\u5bbd)\u3002\u6b64\u5916\uff0c\u5b8c\u6574\u7684128MB\u65e0\u9650\u7f13\u5b58\u4e5f\u5c06\u53ef\u7528\uff0c\u56e0\u6b64GPU\u672c\u8eab\u624b\u5934\u4ecd\u6709\u4e00\u4e2a\u6700\u5feb\u7684\u672c\u5730\u5185\u5b58\u6c60\u3002\nRX 6800\u662f\u5178\u578b\u7684\u4f4e\u7ea7\u5361\uff0c\u5176TBP\u989d\u5b9a\u503c\u4e5f\u8f83\u4f4e\uff0c\u4e3a250W\uff0c\u6bd4RX 6800 XT\u4f4e50W\u3002AMD\u5f53\u7136\u5bf9\u63d0\u4f9b\u9ad8\u6027\u80fd\u7684\u5361\u5e76\u4e0d\u964c\u751f\uff0c\u4f46\u5728\u67d0\u4e9b\u65b9\u9762\uff0cRX6800\u5c06\u662f\u5176\u4e2d\u6700\u6709\u8da3\u7684\uff0c\u56e0\u4e3a\u8fd9\u5c06\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u6709\u673a\u4f1a\u770b\u770bRDNA2\u53ef\u4ee5\u5728\u66f4\u5408\u7406\u7684TBP\u4e0a\u505a\u4e9b\u4ec0\u4e48\u3002\n\u76ee\u524d\uff0cAMD\u6b63\u5728\u5c06RX6800\u7684\u6027\u80fd\u4e0eNVIDIA\u7684RTX2080Ti\u8fdb\u884c\u5206\u7c7b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u662f\u4e00\u5f20\u5c06(\u5927\u81f4)\u4e0eRTX 3070\u7ade\u4e89\u7684\u5361--\u4e5f\u5c31\u662f\u53d6\u4ee3RTX 2080 Ti\u7684\u90a3\u5f20\u5361--\u4f46\u7531\u4e8eRTX 3070\u8981\u5230\u660e\u5929\u624d\u4f1a\u63a8\u51fa\uff0cAMD\u6ca1\u6709\u4e00\u6b3e\u53ef\u4ee5\u4e0e\u4e4b\u8fdb\u884c\u6bd4\u8f83\u7684\u5361\u3002\u56e0\u6b64\uff0c\u5c31\u76ee\u524d\u800c\u8a00\uff0cAMD\u6b63\u5728\u73a9\u5f04\u5e73\u7b49\u7684\u4f20\u9012\u6027\u3002\u7531\u4e8eAMD\u81ea\u5df1\u7684\u53d1\u5e03\u8981\u523011\u670818\u65e5\u624d\u4f1a\u5230\u6765\uff0cAMD\u4ecd\u7136\u6709\u8db3\u591f\u7684\u65f6\u95f4\u6765\u6846\u5b9a\u8fd9\u5f20\u5361\u76f8\u5bf9\u4e8eRTX 3070\u7684\u6027\u80fd\uff0c\u6240\u4ee5\u770b\u770b\u4ed6\u4eec\u5728\u4e00\u5468\u540e\u4f1a\u8bf4\u4e9b\u4ec0\u4e48(\u5982\u679c\u6709\u4ec0\u4e48\u7684\u8bdd)\u5c06\u662f\u4e00\u4ef6\u5f88\u6709\u8da3\u7684\u4e8b\u60c5\u3002AMD\u7684\u5ba3\u4f20\u6750\u6599\u5c06RX6800\u9886\u5148\u4e8eRTX2080Ti\uff0c\u4f46\u6211\u4eec\u5c06\u62ed\u76ee\u4ee5\u5f85\uff0c\u770b\u770bRTX3070\u662f\u5426\u4e5f\u662f\u5982\u6b64\u3002\u76ee\u524d\uff0cAMD\u4f3c\u4e4e\u975e\u5e38\u6709\u4fe1\u5fc3\uff0c\u4ed6\u4eec\u5c06\u51fb\u8d25NVIDIA\u7684\u6700\u4fbf\u5b9c\u7684RTX-30\u7cfb\u5217\u5361\uff0c\u4e0e\u9884\u8ba1\u7684\u6027\u80fd\u548cVRAM\u5bb9\u91cf\u9886\u5148\uff0c\u4ed6\u4eec\u5df2\u76f8\u5e94\u5b9a\u4ef7\u4e3a579\u7f8e\u5143\u3002\n\u53e6\u4e00\u4e2a\u5173\u4e8e\u5b9a\u4f4d\u7684\u597d\u5947\u662f\uff0cAMD\u4e5f\u5728\u63a8\u5e7fRX6800\u4f5c\u4e3a4K\u6e38\u620f\u5361\uff0c\u5c31\u50cf\u5b83\u66f4\u5f3a\u5927\u7684\u5144\u5f1f\u59d0\u59b9\u4e00\u6837\u3002\u5bf9\u8be5\u5361\u6709\u5229\u7684\u662f\uff0c\u5b83\u768416 GB vRAM\u610f\u5473\u7740\u5b83\u6709\u8db3\u591f\u7684\u5185\u5b58\u6765\u5904\u7406\u66f4\u9ad8\u5206\u8fa8\u7387\u7684\u66f4\u5927\u7f13\u51b2\u533a\u3002\u7136\u800c\uff0c\u7531\u4e8e\u8be5\u5361\u53ea\u670975%\u7684RX 6800XT\u7684\u7406\u8bba\u7740\u8272\u5668\u6027\u80fd\uff0c\u6211\u786e\u5b9e\u60f3\u77e5\u9053\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u5b83\u662f\u5426\u4f1a\u8db3\u591f\u5feb\uff0c\u53ef\u4ee5\u652f\u63014K\u3002\u4eceRTX 3080\u548cRTX 2080 Ti\u7684\u80fd\u529b\u6765\u770b\uff0c\u5f53\u524d\u4e00\u4ee3\u7684\u6e38\u620f\u5e94\u8be5\u662f\u975e\u5e38\u53ef\u884c\u7684\uff0c\u7136\u800c\uff0c\u4ece\u957f\u8fdc\u6765\u770b\uff0c\u968f\u7740\u6e38\u620f\u5f00\u53d1\u8005\u5207\u6362\u5230\u4e0b\u4e00\u4ee3\u6e38\u620f\u673a\u4f5c\u4e3a\u6027\u80fd\u548c\u529f\u80fd\u57fa\u7ebf\uff0c\u4eba\u4eec\u4f1a\u6709\u66f4\u591a\u7684\u62c5\u5fe7\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cRX6800\u5c06\u53d6\u800c\u4ee3\u4e4b\u7684\u662fAMD\u76841440p\u6e38\u620f\u4e4b\u738b\uff0c\u8be5\u516c\u53f8\u8fd8\u4e3a\u8be5\u5361\u53d1\u5e03\u4e86\u4e00\u4e9b1440p\u7684\u6027\u80fd\u5e7b\u706f\u7247\uff0c\u4ee5\u53ca4K\u6027\u80fd\u5e7b\u706f\u7247\u3002\n\u603b\u4f53\u800c\u8a00\uff0cAMD\u4e3aRADEON RX 6000\u7cfb\u5217\u5361\u8bbe\u5b9a\u4e86\u4e00\u4e9b\u975e\u5e38\u96c4\u5fc3\u52c3\u52c3\u7684\u6027\u80fd\u76ee\u6807\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0cAMD\u786e\u5207\u5730\u77e5\u9053\u4ed6\u4eec\u9700\u8981\u63d0\u4f9b\u4ec0\u4e48\u6837\u7684\u6027\u80fd\u624d\u80fd\u5728\u9ad8\u7aef\u5e02\u573a\u4e0eNVIDIA\u7ade\u4e89\uff0c\u8be5\u516c\u53f8\u8ba4\u4e3a\u4ed6\u4eec\u5efa\u9020\u7684Navi21\u56fe\u5f62\u5904\u7406\u5668\u5c31\u662f\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u5de5\u5177\u3002\u73b0\u5728\u8ddd\u79bb\u7b2c\u4e00\u5f20RX6800\u7cfb\u5217\u5361\u63a8\u51fa\u8fd8\u67093\u5468\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u4eb2\u773c\u770b\u5230AMD\u662f\u5426\u80fd\u5151\u73b0\u8fd9\u4e9b\u96c4\u5fc3\u52c3\u52c3\u7684\u3001RDNA2\u9a71\u52a8\u7684\u627f\u8bfa\uff0c\u8fd9\u53ea\u662f\u4e2a\u65f6\u95f4\u95ee\u9898\u3002\n\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u6ca1\u6709\u8bc4\u8bba\u8bf46800\u670914 GB\u7684\u5185\u5b58\u3002\u4e0d\u8fc7\uff0c\u5b83\u786e\u5b9e\u8bf4RAM\u662f14Gbps\uff0c\u8fd9\u662f\u6b63\u786e\u7684\u3002\u56de\u8986\u3002\n\u6211\u4eec\u4ec0\u4e48\u65f6\u5019\u80fd\u770b\u5230\u8bc4\u8bba\uff1f\u4ece\u7eb8\u9762\u4e0a\u770b\uff0cAMD\u4f3c\u4e4e\u5df2\u7ecf\u628a\u5b83\u8d76\u51fa\u4e86\u516c\u56ed\u3002\u4ed6\u4eec\u901a\u8fc7256\u4f4d\u603b\u7ebf+128MB\u9ad8\u901f\u7f13\u5b58\u83b7\u5f97384\u4f4d\u603b\u7ebf\u5e26\u5bbd\u76842\u500d\u30026900XT\u6b63\u5728\u4e0e3090\u8fdb\u884c\u4ea4\u6613\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u5bf9\u6b64\u5370\u8c61\u6df1\u523b\u3002\u56de\u8986\n\u8bc4\u8bba\u603b\u662f\u79bb\u53d1\u884c\u65e5\u671f\u66f4\u8fd1\u3002\u53ef\u80fd\u662f\u5341\u516b\u53f7\u524d\u51e0\u5929\u3002\u56de\u8986\u3002\n\u524d\u63d0\u662f\u673a\u5668\u4eba\u4e0d\u4f1a\u8017\u5c3d\u91c7\u77ff\u4f5c\u4e1a\u6240\u9700\u7684\u5361\u7247\u4f9b\u5e94\u3002\u56de\u8986\u3002\n\u6211\u60f3\u6211\u4eec\u4f1a\u770b\u770b\u4f9b\u5e94\u5546\u662f\u5426\u9075\u5faaAMDS\u7684\u6307\u5bfc\u3002\u6211\u5bf9\u6b64\u8868\u793a\u6000\u7591\uff0c\u56e0\u4e3a\u4f9b\u5e94\u5546\u8ba4\u4e3a\u9500\u552e\u5c31\u662f\u9500\u552e\uff0c\u65e0\u8bba\u5b83\u6765\u81ea\u8c01\u3002\u56de\u8986\u3002\nRyzen\u4ea4\u4ed8\u4e86\u8d27\u7269-\u611f\u89c96800\u7cfb\u5217\u4e5f\u4f1a\u8fd9\u6837\u505a\uff01\u56de\u8986", "note_en": "Preparing to close out a major month of announcements for AMD \u2013 and to open the door to the next era of architectures across the company \u2013 AMD wrapped up its final keynote presentation of the month by announcing their Radeon RX 6000 series of video cards. Hosted once more by AMD CEO Dr. Lisa Su, AMD\u2019s hour-long keynote revealed the first three parts in AMD\u2019s new RDNA2 architecture video card family: the Radeon RX 6800, 6800 XT, and 6900 XT. The core of AMD\u2019s new high-end video card lineup, AMD means to do battle with the best of the best out of arch-rival NVIDIA. And we\u2019ll get to see first-hand if AMD can retake the high-end market on November 18 th, when the first two cards hit retail shelves.\n AMD\u2019s forthcoming video card launch has been a long time coming for the company, and one they\u2019ve been teasing particularly heavily. For AMD, the Radeon RX 6000 series represents the culmination of efforts from across the company as everyone from the GPU architecture team and the semi-custom SoC team to the Zen CPU team has played a role in developing AMD\u2019s latest GPU technology. All the while, these new cards are AMD\u2019s best chance in at least half a decade to finally catch up to NVIDIA at the high-end of the video card market. So understandably, the company is jazzed \u2013 and in more than just a marketing manner \u2013 about what the RX 6000 means.\n Anchoring the new cards is AMD\u2019s RDNA2 GPU architecture. RDNA2 is launching near-simultaneously across consoles and PC video cards next month, where it will be the backbone of some 200 million video game consoles plus countless AMD GPUs and APUs to come. Accordingly, AMD has pulled out all of the stops in designing it, assembling an architecture that\u2019s on the cutting-edge of technical features like ray tracing and DirectX 12 Ultimate support, all the while leveraging the many things they\u2019ve learned from their successful Zen CPU architectures to maximize RDNA2\u2019s performance. RDNA2 is also rare in that it isn\u2019t being built on a new manufacturing process, so coming from AMD\u2019s earlier RDNA (1) architecture and associated video cards, AMD is relying on architectural improvements to deliver virtually all of their performance gains. Truly, it\u2019s AMD\u2019s RDNA2 architecture that\u2019s going to make or break their new cards.\n  Over the coming months, RDNA2 will filter down into an increasing number of AMD chip designs. But for now, in the PC space, AMD is starting with enthusiast-level video cards. The first RDNA2 GPU out of the works is Navi 21 \u2013 AKA \u201cBig Navi\u201d \u2013 which AMD will be using as the basis of a trio of video cards. These are the Radeon RX 6900 XT, 6800 XT, and 6800 respectively. With these latest cards, AMD is aiming squarely at NVIDIA\u2019s recently-launched GeForce RTX 30-series lineup, aiming to meet (or beat) the RTX 3090, 3080, and 3070 respectively. Suffice it to say, AMD hasn\u2019t been able to match NVIDIA\u2019s top cards for several years now, so these are very bold claims from a company that has re-learned how to become very bold in the last five years.\n  As today\u2019s announcement is not a full tech deep dive \u2013 like the Zen 3 announcement, the deep dive will come closer to launch \u2013 AMD is only sharing some high-level specifications of the new cards. But with information on the number of CUs, memory support, and power consumption now in hand, we have a good idea of what AMD is bringing to the table, and why they believe the RX 6000 series will once again make them fully-competitive at the high-end.\n  Amongst AMD\u2019s video card stack, the company is taking a very similar tack as NVIDIA. So although the RX 6900 XT is technically their flagship part, at $999 it&#39;s still in a similar \u201cmore money than sense\u201d category as the RTX 3090 \u2013 which is to say that AMD is looking to charge a good premium for the card. Since it\u2019s based on a fully-enabled and undoubtedly heavily binned Navi 21 GPU, it\u2019s the hardest part for AMD to produce, and thus the rarest. How rare remains to be seen, but as Navi 21 is undoubtedly a large chip thanks to the 26.8 billion transistors housing 80 CUs and 128MB Infinity Cache (more on that later), I don\u2019t expect AMD to be flooding the market with 6900 XTs any time soon.\n At any rate, the card will be the full Navi 21 experience. All 80CUs will be enabled, and thanks to AMD\u2019s efforts in optimizing the RDNA2 architecture for clockspeeds, it will have a game clock of 2015MHz and a peak turbo clock (boost clock) of 2250MHz. Assuming that AMD hasn\u2019t done anything  too crazy with the RDNA2 architecture, this means that the card will have an average FP32 shader throughput of around 20.6 TFLOPS, more than double the throughput of the RX 5700 XT \u2013 and right in line with AMD\u2019s goals to double their performance over the RX 5000 series.\n   On the memory side of matters the card comes with 16GB of GDDR6. AMD is not officially disclosing the memory clockspeed, but based on current tech trends we\u2019re expecting that GDDR6 to be running at 16 Gbps/pin (which AMD has since confirmed). Meanwhile, based on other AMD slides, it looks like this memory is attached to a 256-bit memory bus, which would give the card a total memory bandwidth of 512GB/sec. This is admittedly a bit anemic for a flagship video card, and is where AMD\u2019s new Infinity Cache technology will come into play.\n Finally, AMD says that the card will have a Total Board Power (TBP) of 300W. At a time when ASIC designers everywhere are struggling to keep power consumption in check \u2013 and when even NVIDIA\u2019s top cards now hit 350W \u2013 a 300W TBP is a significant claim. Not only is it potentially a competitive advantage for AMD, but it means they haven\u2019t needed to increase their TBP versus their previous high-end card, the also 7nm-based Radeon VII.\n With all of that said, however, some expectation management is in order. Although AMD is comparing the RX 6900 XT to NVIDIA\u2019s RTX 3090, there are a few potential gotchas involved. We\u2019ll break down AMD\u2019s specific performance claims and benchmark slides later, but suffice it to say and as AMD is pitching things now, if the RX 6900 XT can match the 3090, it\u2019s going to be at the very top edge of the AMD card\u2019s performance profile, overclocking include. Which would go hand-in-hand with the heavy binning mentioned earlier.\n  Moving down the line we have the Radeon RX 6800 XT. Based on a slightly cut-down Navi 21 GPU, this is the AMD card that mere mortals can afford. At $650 it\u2019s still  expensive, to say the least, but significantly less so than the $1000 6900 XT.\n Out of the box, the RX 6800 XT comes with 72 CUs enabled. Combined with clockspeeds identical to the RX 6900 XT \u2013 a game clock of 2015MHz and a boost clock of 2250MHz \u2013 and pending additional technical details from AMD, the card should average around 18.6 TFLOPS of FP32 shader performance. Relative to the RX 5700, this is just under 2x the performance of AMD\u2019s last-gen leading card.\n   Other than the reduction in CUs, according to AMD\u2019s specifications there are no other notable differences between the RX 6800 XT and RX 6900 XT. The more affordable card still comes with 16GB of GDDR6 memory, and I expect it\u2019ll be clocked at 16Gbps/pin as well, giving it an expected total bandwidth of 512GB/sec. Augmenting this, like all of today\u2019s cards, will be 128MB of AMD\u2019s Infinity Cache. Meanwhile the card\u2019s TBP carries the same 300W rating as the 6900 XT as well.\n AMD is positioning this card directly against NVIDIA\u2019s RTX 3080; and unlike the 6900 XT, there are no asterisks to speak of here. So if AMD can deliver on their claims, then this 6800 XT will be doing so right out of the box. In which case, meeting the 3080 in performance and possibly beating it in power consumption would be a big win for AMD and the RDNA2 architecture, and a sign of how far they\u2019ve come in the last few years.\n Overall, given AMD\u2019s performance expectations and pricing, along with the expected competition, it\u2019s unsurprising that AMD lead with this card today for the Radeon keynote. It\u2019s technically not the flagship, but like the RTX 3080 on NVIDIA\u2019s side, it\u2019s going to be the card that garners the most attention.\n  It will be the final card in AMD\u2019s new product stack, however, that will garner the most in sales. Rounding out the Navi 21 trio of cards we have the Radeon RX 6800, a further cut-down Navi 21 part that trades off a drop in performance for lower power consumption and a lower $579 price.\n The RX 6800 will ship with 60 CUs (3 shader engines) enabled, and with the fourth shader engine disabled, this by and large makes it three-quarters of a full Navi 21. Relative to the other cards, clockspeeds are going to be lower, with a game clock of 1815MHz and a boost clock of 2105MHz. Which, per our math, would give the card 13.9 TFLOPS of FP32 shader performance, or around 75% of the shader performance of the RX 6800 XT.\n   Surprisingly, AMD isn\u2019t dialing at all on the memory. Despite being the third and most budget-friendly card in the stack, it still ships with 16GB of GDDR6 memory.  And while I suspect AMD will go with cheaper 14Gbps memory here \u2013 giving the card 448GB/sec of bandwidth \u2013 that\u2019s still a lot of memory overall. Similarly, AMD isn&#39;t using lower-clocked memory either; even the RX 6800 gets the same top-tier 16 Gbps/pin memory (and resulting 512GB/sec of memory bandwidth) that the other cards are getting. Furthermore the complete 128MB Infinity Cache will be available as well, so the GPU itself still has a full pool of its fastest local memory on-hand.\n Typical for lower-tier cards, the RX 6800 also carries a lower TBP rating of 250W, 50W less than the RX 6800 XT. AMD of course is no stranger to offering high-powered cards, but in some respects the RX 6800 is going to be the most interesting of the bunch, as it\u2019s going to be our first chance to look at what RDNA2 can do at a more reasonable TBP.\n For the moment, AMD is classifying the RX 6800\u2019s performance relative to NVIDIA\u2019s RTX 2080 Ti. In reality this is card that will (roughly) compete with the RTX 3070 \u2013 the same card that replaced the RTX 2080 Ti \u2013 but as RTX 3070 doesn\u2019t launch until tomorrow, AMD doesn\u2019t have a card that they draw apples-to-apples comparisons against. So for the moment, AMD is instead playing with the transitive property of equality. With AMD\u2019s own launch not coming until November 18 th, there\u2019s still plenty of time for AMD to frame this card\u2019s performance with respect to the RTX 3070, so it will be interesting to see what (if anything) they have to say in a week\u2019s time. AMD\u2019s promotional material places the RX 6800 ahead of the RTX 2080 Ti, but we\u2019ll see if that holds true for the RTX 3070 as well. For now, AMD seems very confident that they&#39;re going to beat NVIDIA&#39;s cheapest RTX-30 series card, and with a projected performance and VRAM capacity lead they&#39;ve priced it accordingly at $579.\n One other curiosity on positioning is that AMD is also promoting the RX 6800 as a 4K gaming card, just like its more powerful siblings. Working to the card\u2019s advantage, its 16GB of VRAM means that it has plenty of memory to handle the larger buffers that come with the higher resolution. However as the card only has 75% of the RX 6800 XT\u2019s theoretical shader performance, I do wonder whether it\u2019s going to be outright fast enough for 4K over the long run. Current-generation games should be very doable, judging from what the RTX 3080 and RTX 2080 Ti can do, however there\u2019s a bit more concern over the long run as game developers switch to the next-gen consoles as their performance and feature baselines. In which case, the RX 6800 will instead be AMD\u2019s 1440p gaming king, and fittingly the company has published some 1440p performance slides for the card as well, alongside the 4K performance slides.\n   Overall, AMD some very ambitious performance goals for the Radeon RX 6000 series of cards. At this point AMD knows exactly what kind of performance they need to deliver to take on NVIDIA for the high-end, and the company believes that the Navi 21 GPU they\u2019ve built is just the tool to do that. Now with 3 weeks to go until the first RX 6800 series cards launch, it\u2019s just a matter of time until we can see first-hand whether AMD can deliver on those ambitious, RDNA2-fueled promises.\n  POST A COMMENT      Nowhere in the article does it say 6800 has 14 GB of RAM. It does say that the RAM is 14 Gbps, though, which is correct.  Reply\n        When will we see reviews? AMD looks like on paper to have knocked it out of the park. They are getting 2x the bandwidth of a 384 bit bus via 256 bit bus + 128MB cache. The 6900 XT is trading blows with the 3090. I&#39;m actually impressed.  Reply\n  Reviews are always closer to release date. Probably be a few days before the 18th.  Reply\n  That&#39;s assuming the bots don&#39;t dry up the supply of cards for their mining operations.   Reply\n  I guess we&#39;ll see if vendors follow AMDs guidance. I doubt it, as vendors consider a sale a sale, no matter who it comes from.  Reply\n  Ryzen delivered the goods - it feels like the 6800 series will do the same!  Reply", "posttime": "2020-10-29 10:38:34", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u53d1\u5e03,radeon,coming,amd", "title": "AMD\u5c06\u4e8e11\u670818\u65e5\u53d1\u5e03RADEON RX 6000\u7cfb\u5217", "title_en": "AMD Reveals the Radeon RX 6000 Series, Coming November 18th", "transed": 1, "url": "https://www.anandtech.com/show/16202/amd-reveals-the-radeon-rx-6000-series-rdna2-starts-at-the-highend-coming-november-18th", "via": "", "real_tags": ["\u53d1\u5e03", "radeon", "coming", "amd"]}, {"category": "", "categoryclass": "", "imagename": "d887e1357fd7bf9164c95e8ec2ba6f8b.jpg", "infoid": 1031898, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7b2c\u4e00\u540d\u53d7\u5bb3\u8005\u662f\u57282016\u5e749\u6708\u88ab\u51b2\u4e0a\u6765\u7684\u3002\u897f\u73ed\u7259\u5df4\u4f26\u897f\u4e9a\u7684\u8b66\u5bdf\u770b\u5230\u4e00\u6761\u84dd\u9ca8\u5728\u4e00\u5c0f\u7247\u6d77\u6ee9\u7684\u6d77\u6d6a\u4e2d\u6b7b\u53bb\u3002\u4ed6\u4eec\u628a\u90a3\u5177\u516b\u82f1\u5c3a\u9ad8\u7684\u8eab\u4f53\u62d6\u5230\u8b66\u5bdf\u5c40\u540e\u9762\u7684\u9662\u5b50\u91cc\u3002\u7136\u540e\u4ed6\u4eec\u6253\u7535\u8bdd\u7ed9Jaime Penad\u00e9s-Suay\uff0c\u5979\u5f88\u5feb\u5c31\u6000\u7591\u662f\u8c0b\u6740\u3002\n\u9ca8\u9c7c\u7684\u5934\u4e0a\u5d4c\u7740\u4e00\u5757\u770b\u8d77\u6765\u50cf\u662f\u6728\u5934\u7684\u4e1c\u897f\u3002\u4ed6\u62c9\u4e86\u4e00\u4e0b\u3002\u4e00\u628a\u5251\u9c7c\u5251\u76f4\u63a5\u523a\u7a7f\u4e86\u5979\u7684\u5927\u8111\uff0c\u4ece\u5979\u7684\u8111\u6d77\u4e2d\u6ed1\u51fa\u4e00\u5757\u7834\u788e\u7684\u788e\u7247\u3002\n\u201c\u6211\u89c9\u5f97\u8fd9\u592a\u75af\u72c2\u4e86\uff0c\u201d\u4f69\u7eb3\u5fb7\u65af-\u82cf\u57c3\u8bf4\u3002\u4ed6\u662f\u5df4\u4f26\u897f\u4e9a\u5927\u5b66(University Of Valencia)\u7684\u7814\u7a76\u751f\uff0c\u4e5f\u662f\u897f\u73ed\u7259\u7814\u7a76\u9ca8\u9c7c\u7684\u534f\u4f1aLamna\u7684\u521b\u59cb\u4eba\u4e4b\u4e00\u3002\u201c\u6211\u4ece\u6765\u4e0d\u786e\u5b9a\u8fd9\u662f\u4e0d\u662f\u4e00\u4e2a\u73a9\u7b11\u3002\u201d\n\u4f46\u4ece\u90a3\u65f6\u8d77\uff0c\u81f3\u5c11\u53c8\u6709\u516d\u6761\u9ca8\u9c7c\u88ab\u51b2\u4e0a\u5730\u4e2d\u6d77\u6d77\u5cb8\uff0c\u6bcf\u6761\u9ca8\u9c7c\u90fd\u88ab\u540c\u4e00\u4ef6\u51f6\u5668\u523a\u4f24\uff0c\u800c\u4e14\u51e0\u4e4e\u603b\u662f\u5728\u5934\u90e8\u3002\u5728\u6700\u65b0\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e00\u6761\u6210\u5e74\u768415\u82f1\u5c3a\u957f\u7684\u8131\u7c92\u9ca8\u88ab\u51b2\u4e0a\u4e86\u5229\u6bd4\u4e9a-\u5b83\u81ea\u5df1\u914d\u5907\u4e86\u4e00\u6761\u97ad\u5b50\u72b6\u7684\u5c3e\u5df4\uff0c\u53ef\u4ee5\u8fdb\u884c\u4ee4\u4eba\u9707\u60ca\u7684\u6253\u51fb\u3002\u91cc\u9762\u662f\u4e00\u53ea\u811a\u7684\u5251\u9c7c\u5251\uff0c\u79bb\u5b83\u7684\u5fc3\u810f\u5f88\u8fd1\uff0c\u5df2\u7ecf\u65ad\u4e86\u3002\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u4e9b\u6848\u4f8b\u63d0\u4f9b\u4e86\u53ef\u80fd\u662f\u9ad8\u901f\u3001\u9ad8\u98ce\u9669\u6c34\u4e0b\u51b3\u6597\u7684\u521d\u6b65\u79d1\u5b66\u8bc1\u636e\uff0c\u800c\u8fd9\u4e9b\u51b3\u6597\u4ee5\u524d\u4ec5\u9650\u4e8e\u6e14\u6c11\u7684\u6545\u4e8b\u3002\n\u5386\u53f2\u4e0a\uff0c\u6355\u9cb8\u8005\u3001\u6e14\u6c11\u548c\u5b66\u8005\u8ba4\u4e3a\u5251\u9c7c\u662f\u559c\u6b22\u523a\u4f24\u7684\u89d2\u6597\u58eb\u3002\u4f46\u73b0\u4ee3\u79d1\u5b66\u5bb6\u5bf9\u6b64\u6301\u6000\u7591\u6001\u5ea6\u3002\u5f53\u7136\uff0c\u5251\u9c7c\u6709\u65f6\u4f1a\u523a\u7a7f\u8239\u53ea\u3001\u9cb8\u9c7c\u3001\u6f5c\u8247\u548c\u6d77\u9f9f\u3002\u4f46\u4e5f\u8bb8\u8fd9\u4e9b\u5251\u9c7c\u7784\u51c6\u4e86\u8f83\u5c0f\u7684\u730e\u7269\uff0c\u8bef\u649e\u4e86\u522b\u7684\u4e1c\u897f\u3002\n\u4e5f\u53ef\u80fd\u4e0d\u662f\u3002\u5f53\u9ca8\u9c7c\u6b7b\u4ea1\u65f6\uff0c\u5b83\u4eec\u7684\u8eab\u4f53\u901a\u5e38\u4f1a\u6c89\u5165\u6d77\u5e95\u3002\u56e0\u6b64\uff0c\u516c\u5e03\u7684\u516d\u6761\u9ca8\u9c7c\u6401\u6d45\u3001\u4f24\u53e3\u7cbe\u786e\u5f97\u4ee4\u4eba\u6000\u7591\u7684\u8bb0\u5f55\u53ef\u80fd\u8868\u660e\uff0c\u8fd9\u79cd\u906d\u9047\u662f\u5e38\u89c1\u7684-\u800c\u4e14\u5251\u9c7c\u5251\u6709\u65f6\u5c31\u662f\u5b83\u542c\u8d77\u6765\u7684\u6837\u5b50\u3002\n\u7ef4\u4e5f\u7eb3\u5927\u5b66\u7814\u7a76\u751f\u5e15\u7279\u91cc\u514b\u00b7\u8a79\u5e03\u62c9(Patrick Jambura)\u8bf4\uff0c\u201c\u73b0\u5728\u81f3\u5c11\u6211\u4eec\u6709\u8bc1\u636e\u8868\u660e\uff0c\u4ed6\u4eec\u53ef\u80fd\u771f\u7684\u4f1a\u6545\u610f\u5c06\u5176\u7528\u4f5c\u6b66\u5668\u3002\u201d\n\u8a79\u5e03\u62c9\u9886\u5bfc\u4e86\u4e00\u9879\u5173\u4e8e\u6700\u8fd1\u6b7b\u4ea1\u7684\u8131\u7c92\u9ca8\u7684\u7814\u7a76\uff0c\u8be5\u7814\u7a76\u4e8e\u4eca\u5e744\u6708\u88ab\u53d1\u73b0\u3002\u5229\u6bd4\u4e9a\u5965\u9a6c\u5c14\u00b7\u7a46\u8d6b\u5854\u5c14\u5927\u5b66(Omar Al-Mukhtar University)\u7684\u8428\u62c9\u00b7\u9a6c\u5e03\u9c81\u514b(Sara Al Mabruk)\u53d1\u73b0\u4e86\u5f53\u5730\u516c\u6c11\u79d1\u5b66\u5bb6\u53d1\u5e03\u7684\u4e00\u6bb5\u89c6\u9891\u3002\u5728\u89c6\u9891\u4e2d\uff0c\u4e00\u540d\u7537\u5b50\u8d70\u8fd1\u6d77\u6ee9\u4e0a\u7684\u4e00\u6761\u9ca8\u9c7c\uff0c\u7136\u540e\u4ece\u5b83\u7684\u80cc\u4e0a\u62d4\u51fa\u4e00\u628a\u5251\uff0c\u5c31\u50cf\u4e9a\u745f\u738b\u4f20\u8bf4\u4e2d\u7684\u5947\u602a\u8f6c\u6298\u3002\u201c\u6211\u5f53\u65f6\u60f3\uff0c\u2018\u5662\uff0c\u8428\u62c9\uff0c\u6211\u4eec\u5f97\u505a\u70b9\u4ec0\u4e48\u3002\u8fd9\u7b80\u76f4\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\uff0c\u2018\u201c\u8a79\u5e03\u62c9\u8bf4\u3002\n\u4ed6\u4eec\u7684\u56e2\u961f\u672c\u6708\u5728\u201c\u9c7c\u7c7b\u5b66\u7814\u7a76\u201d\u6742\u5fd7\u4e0a\u62a5\u9053\uff0c\u8fd9\u4e5f\u4ee4\u4eba\u8d39\u89e3\u3002\u6e14\u6c11\u7ecf\u5e38\u7528\u7834\u635f\u7684\u5251\u6355\u6349\u65d7\u9c7c\uff0c\u6240\u4ee5\u6298\u65ad\u4e00\u6761\u5251\u4e0d\u662f\u81f4\u547d\u7684\uff0c\u4f46\u5b83\u4eec\u786e\u5b9e\u6709\u52a9\u4e8e\u5b83\u4eec\u7684\u4e3b\u4eba\u6e38\u5f97\u66f4\u5feb\uff0c\u5e76\u83b7\u5f97\u98df\u7269\u3002\u800c\u4e14\u5b83\u4eec\u4f3c\u4e4e\u4e0d\u4f1a\u518d\u957f\u56de\u6765\u4e86\uff0c\u81f3\u5c11\u5bf9\u6210\u5e74\u4eba\u6765\u8bf4\u662f\u8fd9\u6837\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u4e00\u4e9b\u65d7\u9c7c\u4f1a\u5192\u7740\u5931\u53bb\u5b83\u4eec\u7684\u98ce\u9669\u5462\uff1f\n\u5730\u4e2d\u6d77\u5251\u9c7c\u523a\u6740\u4e8b\u4ef6\u7684\u53d7\u5bb3\u8005\u5927\u591a\u662f\u84dd\u9ca8\u6216\u9ed1\u9ca8\u3002\u8fd9\u4e24\u4e2a\u7269\u79cd\u90fd\u6355\u98df\u5e7c\u5251\u9c7c\uff0c\u8fd9\u8868\u660e\u4e86\u4e00\u79cd\u89e3\u91ca\uff1a\u53ef\u80fd\u5e7c\u5251\u9c7c\u611f\u89c9\u5230\u5b83\u4eec\u7684\u751f\u547d\u53d7\u5230\u4e86\u5a01\u80c1\uff0c\u5e76\u8fdb\u884c\u4e86\u53cd\u51fb\u3002\n\u4f46\u8fd9\u4e00\u6b21\uff0c\u5251\u7684\u788e\u7247\u770b\u8d77\u6765\u50cf\u662f\u6765\u81ea\u6210\u5e74\u5251\u9c7c\uff0c\u800c\u8fd9\u79cd\u9c7c\u901a\u5e38\u4e0d\u4f1a\u88ab\u8131\u7c92\u9ca8\u5403\u6389\u3002\n\u76f8\u53cd\uff0c\u4ed6\u4eec\u8ba4\u4e3a\uff0c\u5251\u9c7c\u53ef\u80fd\u662f\u5728\u6d88\u706d\u751f\u6001\u4e0a\u7684\u7ade\u4e89\u5bf9\u624b\u3002\u5728\u8fc7\u5ea6\u6355\u635e\u7684\u5730\u4e2d\u6d77\uff0c\u65d7\u9c7c\u53ef\u80fd\u4f1a\u4e89\u5148\u6050\u540e\u5730\u786e\u4fdd\u5269\u4f59\u6b8b\u7559\u7269\u7684\u66f4\u5927\u4efd\u989d\u3002\n\u8003\u8651\u5230\u4e0e\u4e00\u6761\u5927\u578b\u97ad\u5c3e\u9ca8\u8f83\u91cf\u6240\u6d89\u53ca\u7684\u98ce\u9669\uff0c\u4f69\u7eb3\u4ee3\u65af-\u82cf\u57c3\u6000\u7591\u7ade\u4e89\u662f\u5426\u8db3\u4ee5\u6210\u4e3a\u4e00\u79cd\u52a8\u673a\u3002\u76f8\u53cd\uff0c\u4ed6\u8ba4\u4e3a\uff0c\u5251\u9c7c\u53ef\u80fd\u611f\u89c9\u5230\u4e86\u653b\u51fb\uff0c\u5e76\u8bd5\u56fe\u4fdd\u62a4\u81ea\u5df1\u7684\u9886\u571f\u3002\n\u4e0d\u7ba1\u600e\u6837\uff0c\u79d1\u5b66\u5bb6\u4eec\u5bf9\u8fd9\u79cd\u884c\u4e3a\u77e5\u4e4b\u751a\u5c11\u3002\u6216\u8005\u4e00\u822c\u7684\u5251\u9c7c\uff0c\u5c3d\u7ba1\u5728\u9910\u9986\u548c\u6742\u8d27\u5e97\u7684\u9c7c\u67dc\u53f0\u91cc\u6709\u5f88\u591a\u5251\u9c7c\u3002\u201c\u5546\u4e1a\u7269\u79cd\u7684\u7814\u7a76\u53ea\u662f\u4e3a\u4e86\u5546\u4e1a\u76ee\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u201d\u4f69\u7eb3\u5fb7\u65af-\u82cf\u57c3\u5148\u751f\u8bf4\u3002\n\u5728\u4e0e\u4e00\u5bb6\u6d77\u9c9c\u516c\u53f8\u5408\u4f5c\u540e\uff0c\u4ed6\u73b0\u5728\u6b63\u81f4\u529b\u4e8e\u6d4b\u91cf\u4e00\u5343\u628a\u5251\u548c\u6325\u821e\u7740\u5251\u7684\u9c7c\u7684\u6574\u4f53\u5927\u5c0f\u3002\u8fd9\u5e94\u8be5\u6709\u52a9\u4e8e\u79d1\u5b66\u5bb6\u4ece\u9ca8\u9c7c\u8eab\u4e0a\u7559\u4e0b\u7684\u72af\u7f6a\u73b0\u573a\u5c0f\u788e\u7247\u63a8\u65ad\u51fa\u505a\u8fd9\u4ef6\u4e8b\u7684\u5168\u90e8\u5251\u9c7c\u3002\n\u5bfb\u627e\u8fd9\u4e9b\u7f55\u89c1\u4e8b\u4ef6\u7684\u79d1\u5b66\u5bb6\u4e5f\u5e0c\u671b\u542c\u5230\u516c\u4f17\u7684\u610f\u89c1\u3002\u4f69\u7eb3\u4ee3\u65af-\u82cf\u57c3\u8bf4\uff0c\u201c\u4e5f\u8bb813\u5e74\u6765\uff0c\u4e00\u4e2a\u6e14\u6c11\u4e00\u76f4\u5728\u6355\u6349\u9ca8\u9c7c\uff0c\u6bcf\u5e74\u4ed6\u90fd\u4f1a\u53d1\u73b0\u8fd9\u4e00\u70b9\u3002\u201d\u201c\u6211\u4eec\u9700\u8981\u6bcf\u4e2a\u4eba\u90fd\u5173\u6ce8\u8fd9\u4ef6\u4e8b\u3002\u201d", "note_en": "The first victim washed up in September 2016. The police in Valencia, Spain, saw a blue shark dying in the surf along a tiny stretch of beach. They lugged the eight-foot corpse to the yard behind the police station. Then they called Jaime Penad\u00e9s-Suay, who soon  suspected foul play.\n The shark had what looked like a bit of wood embedded in her head. He pulled. Out slid a broken fragment from a swordfish sword that had lanced straight through her brain.\n \u201cI thought it was crazy,\u201d said Mr. Penad\u00e9s-Suay, a graduate student at the University of Valencia and a founder of LAMNA, a Spanish consortium that studies sharks. \u201cI was never sure if this was some kind of joke.\u201d\n But since then at least six more sharks have washed up on Mediterranean coasts, each impaled with the same murder weapon, and almost always in the head. In the latest example, an adult 15-foot thresher shark \u2014 itself equipped with a whiplike tail capable of stunning blows \u2014 washed up in Libya. Inside was a foot of swordfish sword that had broken off near its heart.\n Taken together these cases offer what may be preliminary scientific evidence of high-speed, high-stakes underwater duels that had previously been confined to fisherman\u2019s tales.\n  Historically, whalers, fishermen and scholars saw swordfish as stab-happy gladiators. But modern scientists were skeptical. Sure, swordfish sometimes impale boats, whales, submarines and sea turtles. But perhaps these swordfish had aimed for smaller prey, and rammed something else by mistake.\n Or maybe not. When sharks die, their bodies typically sink to the bottom of the sea. So a published record of half a dozen stranded sharks with suspiciously precise wounds could indicate that these encounters are common \u2014 and that a swordfish sword is sometimes exactly what it sounds like.\n \u201cNow at least we have evidence that they might use it really as a weapon, intentionally,\u201d said Patrick Jambura, a graduate student at the University of Vienna.\n Mr. Jambura led a study of the recent dead thresher shark, which turned up this April. Sara Al Mabruk at Omar Al-Mukhtar University in Libya had spotted a video posted by local citizen scientists. In the video, a man approaches a shark on the beach, then pulls a sword from its back like a bizarre twist on Arthurian legend. \u201cI was like, \u2018Oh come on Sara, we have to do something about this. That\u2019s just incredible,\u2019\u201d Mr. Jambura said.\n  It\u2019s also puzzling,  their team reported this month in the journal Ichthyological Research. Fishermen often catch swordfish with mangled swords, so breaking one isn\u2019t fatal, but they do help their owners swim faster and feed. And they don\u2019t seem to grow back, at least not for adults. So why do some swordfish risk losing them?\n Most victims of swordfish stabbings in the Mediterranean have been blue or mako sharks. Both of those species prey on young swordfish, suggesting one explanation: Maybe juvenile swordfish had felt like their lives were threatened and fought back.\n But this time the sword fragment looked as if it had come from an adult swordfish, which typically are not eaten by a thresher shark.\n Instead, they argue, the swordfish might have been taking out an ecological rival. In the overfished Mediterranean, the swordfish might have fought to ensure a larger share of the remaining scraps.\n Mr. Penad\u00e9s-Suay doubts competition would be enough of a motive given the risks involved in taking on a big, whip-tailed shark. Instead, he thinks, the swordfish might have felt attacked and tried to protect its territory.\n Either way, scientists know little about the behavior. Or about swordfish in general, despite how plentiful they are in restaurants and at grocery store fish counters. \u201cCommercial species are only studied for commercial purposes, and that\u2019s a problem,\u201d Mr. Penad\u00e9s-Suay said.\n After partnering with a seafood company, he is now working to measure both a thousand swords and the overall size of the fish that wielded them. That should help scientists extrapolate from the little crime-scene shards left in sharks to the full swordfish that did the deed.\n Scientists searching for these rare incidents also want to hear from the public. \u201cMaybe a fisherman for 13 years has been catching sharks, and every year he finds this,\u201d Mr. Penad\u00e9s-Suay said. \u201cWe need everybody to be looking into this.\u201d", "posttime": "2020-10-29 10:38:10", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7bad\u9c7c,wash,\u53ef\u80fd", "title": "\u9ca8\u9c7c\u5728\u6d77\u6ee9\u4e0a\u88ab\u51b2\u5237\uff0c\u88ab\u7bad\u9c7c\u523a\u4f24", "title_en": "Sharks Wash Up on Beaches, Stabbed by Swordfish", "transed": 1, "url": "https://www.nytimes.com/2020/10/27/science/swordfish-stabbing-sharks.html", "via": "", "real_tags": ["\u7bad\u9c7c", "wash", "\u53ef\u80fd"]}, {"category": "", "categoryclass": "", "imagename": "3672abea6447c64aa1164dbf005e43a6.png", "infoid": 1031897, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6b64\u56de\u8d2d\u5305\u542b\u90e8\u5206LLVM\u9879\u76ee\u7684\u72ec\u7acbBazel\u6784\u5efa\u914d\u7f6e\uff0c\u8fd9\u4e9b\u914d\u7f6e\u53ef\u7531\u4f7f\u7528Bazel\u6784\u5efa\u7cfb\u7edf\u7684\u76f8\u5173\u9879\u76ee\u5171\u4eab\u3002\n\u5b83\u7c7b\u4f3c\u4e8eTensorFlow\u9879\u76ee\u4e2dLLVM\u548cMLIR\u7684\u6784\u5efa\u6587\u4ef6\uff0c\u4f46\u65e8\u5728\u9002\u5408\u66f4\u901a\u7528\u7684\u7528\u9014\u3002\nMLIR\u652f\u6301CUDA\uff0c\u5e76\u4e14\u7981\u7528\u4e86mlir-vulkan-runner\u3002LLVM\u4e0d\u4f1a\u8fdb\u884c\u914d\u7f6e\u68c0\u6d4b\uff0c\u5e76\u5728\u914d\u7f6e\u4e2d\u786c\u7f16\u7801\u503c\u3002\n\u8fd9\u4e9b\u6784\u5efa\u6587\u4ef6\u7684\u4f7f\u7528\u65b9\u5f0f\u975e\u5e38\u7075\u6d3b\u3002Llvm-bazel\u5b50\u76ee\u5f55\u5177\u6709\u6700\u7b80\u5355\u7684\u6784\u5efa\u914d\u7f6e\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u7528\u4e8ellvm-project\u7684\u5b50\u6a21\u5757\u3002\u5de5\u4f5c\u533a\u4f4d\u4e8e\u8be5\u76ee\u5f55\u4e2d\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u6784\u5efa\u9879\u76ee\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\u7528\u6237\u66f4\u53ef\u80fd\u5e0c\u671b\u4ece\u8be5\u5b58\u50a8\u5e93\u4e2d\u83b7\u53d6\u6784\u5efa\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u4e0e\u81ea\u5df1\u7684llvm-project\u526f\u672c\u4e00\u8d77\u4f7f\u7528\u3002\n\u60a8\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u5728\u5207\u6362\u5230\u5404\u81ea\u7684\u76ee\u5f55\u540e\u6784\u5efa\u8fd9\u4e24\u4e2a\u6f14\u793a\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a", "note_en": "This repo contains standalone Bazel BUILD configuration for part of the LLVM project that could be shared by dependent projectsusing the Bazel build system.\n It is similar to the BUILD files for LLVMand  MLIRin the  TensorFlow project, but aims to besuitable for more general usage.\n  MLIR has Cuda support and the mlir-vulkan-runner disabled. LLVM does not yethave configuration detection and hardcodes values in the config.\n  These build files are flexible in how they can be used. The llvm-bazel subdirectory has the simplest build configurationwith a submodule for the llvm-project. The WORKSPACE is in that directory, soyou can build the project like:\n  Users are more likely going to want to fetch build files from this repositoryand use them with their own copy of the llvm-project.\n   You can build either of these demos after changing into the respective directorywith a command like", "posttime": "2020-10-29 10:37:51", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "llvm,build", "title": "\u652f\u6301LLVM\u7684Bazel\u6784\u5efa\u7cfb\u7edf", "title_en": "Bazel Build System Support for LLVM", "transed": 1, "url": "https://github.com/google/llvm-bazel", "via": "", "real_tags": ["llvm", "build"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031896, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Dabney\u7b49\u4eba\u6700\u8fd1\u7684\u5de5\u4f5c\u3002\u8fd9\u8868\u660e\u5927\u8111\u4ee5\u6982\u7387\u5206\u5e03\u7684\u5f62\u5f0f\u8868\u793a\u5956\u8d4f\u9884\u6d4b\uff0c\u5b9e\u9a8c\u662f\u4f7f\u7528\u6765\u81ea\u8179\u4fa7\u88ab\u76d6\u533a\u7684\u5355\u5355\u4f4d\u8bb0\u5f55\u5728\u8001\u9f20\u8eab\u4e0a\u8fdb\u884c\u7684\u3002\u3002\u8fd9\u4e0e\u5f3a\u5316\u5b66\u4e60(RL)\u4e2d\u5e7f\u6cdb\u91c7\u7528\u7684\u5efa\u6a21\u5355\u4e2a\u6807\u91cf(\u671f\u671b\u503c)\u7684\u65b9\u6cd5\u5f62\u6210\u4e86\u9c9c\u660e\u5bf9\u6bd4\u3002\u4e8b\u5b9e\u4e0a\uff0c\u901a\u8fc7\u4f7f\u7528\u5206\u5e03\uff0c\u6211\u4eec\u80fd\u591f\u91cf\u5316\u51b3\u7b56\u8fc7\u7a0b\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u5728\u72af\u4e86\u9519\u8bef\u53ef\u80fd\u5bfc\u81f4\u65e0\u6cd5\u6062\u590d\u6b64\u7c7b\u9886\u57df\u7684\u793a\u4f8b\u7684\u9886\u57df\u4e2d\uff0c\u4e0d\u786e\u5b9a\u6027\u5c24\u5176\u91cd\u8981\uff0c\u8fd9\u4e9b\u9886\u57df\u5305\u62ec\u81ea\u52a8\u9a7e\u9a76\u6c7d\u8f66\u3001\u533b\u7597\u4fdd\u5065\u548c\u91d1\u878d\u5e02\u573a\u3002\u3002\u98ce\u9669\u610f\u8bc6\u5f3a\u5316\u5b66\u4e60\u7684\u7814\u7a76\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u800c\u51fa\u73b0\u7684\u3002\u7136\u800c\uff0c\u4e0d\u786e\u5b9a\u6027\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u5728\u672c\u6587\u4e2d\u5173\u6ce8\u7684\uff0c\u662f\u5bf9\u72b6\u6001-\u52a8\u4f5c\u7a7a\u95f4\u7684\u6709\u6548\u63a2\u7d22\u3002\n\u672c\u6587\u7684\u76ee\u7684\u662f\u4ece\u8d1d\u53f6\u65af\u7684\u89d2\u5ea6\u5bf9Q-Learning\u8fdb\u884c\u6e05\u6670\u7684\u89e3\u91ca\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u5c0f\u7f51\u683c\u4e16\u754c\u548c\u8868\u683cQ-Learning\u7684\u4e00\u4e2a\u7b80\u5355\u6269\u5c55\u6765\u8bf4\u660e\u57fa\u672c\u539f\u7406\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u5982\u4f55\u6269\u5c55\u786e\u5b9a\u6027Q-Learning\u7b97\u6cd5\u4ee5\u4f7f\u7528\u8d1d\u53f6\u65af\u89c4\u5219\u5bf9Q\u503c\u7684\u65b9\u5dee\u8fdb\u884c\u5efa\u6a21\u3002\u6211\u4eec\u5c06\u91cd\u70b9\u653e\u5728\u5047\u8bbeQ\u503c\u4e3a\u6b63\u6001\u5206\u5e03\u662f\u5408\u7406\u7684\u5b50\u7c7b\u95ee\u9898\u4e0a\uff0c\u5e76\u5728\u6b64\u5047\u8bbe\u6210\u7acb\u65f6\u5f97\u51fa\u89c1\u89e3\u3002\u6700\u540e\uff0c\u6211\u4eec\u8bc1\u660e\u4e86\u5e94\u7528\u8d1d\u53f6\u65af\u89c4\u5219\u6765\u66f4\u65b0Q\u503c\u4f1a\u5e26\u6765\u4e00\u4e2a\u6311\u6218\uff1a\u5b83\u5bb9\u6613\u53d7\u5230\u6b21\u4f18\u7b56\u7565\u7684\u65e9\u671f\u5229\u7528\u3002\n\u672c\u6587\u4e3b\u8981\u57fa\u4e8eDearden\u7b49\u4eba\u7684\u5f00\u521b\u6027\u5de5\u4f5c\u3002\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u5728Q\u503c\u670d\u4ece\u6b63\u6001\u5206\u5e03\u7684\u5047\u8bbe\u4e0b\u5c55\u5f00\uff0c\u5e76\u5bf9\u5404\u79cd\u8d1d\u53f6\u65af\u52d8\u63a2\u7b56\u7565\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002\u4e00\u4e2a\u5173\u952e\u7684\u533a\u522b\u662f\uff0c\u6211\u4eec\u5bf9$$\\mu$$\u548c$$\\sigma^2$$\u5efa\u6a21\uff0c\u800c\u6700\u521d\u7684Bayesian Q-Learning\u8bba\u6587\u7684\u4f5c\u8005\u5728\u8fd9\u4e9b\u53c2\u6570\u4e0a\u5efa\u6a21\u5206\u5e03\u3002\u8fd9\u4f7f\u5f97\u4ed6\u4eec\u53ef\u4ee5\u91cf\u5316\u53c2\u6570\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u4ee5\u53ca\u9884\u671f\u56de\u62a5-\u6211\u4eec\u53ea\u5173\u6ce8\u540e\u8005\u3002\n\u81ea\u4eceDearden\u7b49\u4eba\u3002\u5982\u679c\u5728\u53c2\u6570\u4e0a\u5efa\u7acb\u5206\u5e03\u6a21\u578b\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4ece\u8be5\u5206\u5e03\u4e2d\u53d6\u6837\uff0c\u7531\u6b64\u5bfc\u81f4\u7684Q\u503c\u5206\u6563\u79f0\u4e3a\u8ba4\u77e5\u4e0d\u786e\u5b9a\u6027\u3002\u4ece\u672c\u8d28\u4e0a\u8bb2\uff0c\u8fd9\u79cd\u4e0d\u786e\u5b9a\u6027\u4ee3\u8868\u4e86\u6709\u9650\u7684\u6570\u636e(\u5373\u6709\u9650\u7684\u89c2\u5bdf\u503c)\u9020\u6210\u7684\u77e5\u8bc6\u9e3f\u6c9f\u3002\u5982\u679c\u6211\u4eec\u7f29\u5c0f\u8fd9\u4e00\u5dee\u8ddd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u7559\u4e0b\u4e0d\u53ef\u51cf\u5c11\u7684\u4e0d\u786e\u5b9a\u6027(\u5373\u73af\u5883\u4e2d\u56fa\u6709\u7684\u968f\u673a\u6027)\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u4efb\u610f\u4e0d\u786e\u5b9a\u6027\u3002\u4eba\u4eec\u53ef\u4ee5\u4e89\u8fa9\u8bf4\uff0c\u8ba4\u8bc6\u6027\u4e0d\u786e\u5b9a\u6027\u548c\u4efb\u610f\u6027\u4e0d\u786e\u5b9a\u6027\u4e4b\u95f4\u7684\u754c\u9650\u76f8\u5f53\u6a21\u7cca\u3002\u60a8\u8f93\u5165\u5230\u6a21\u578b\u4e2d\u7684\u4fe1\u606f\u5c06\u51b3\u5b9a\u53ef\u4ee5\u51cf\u5c11\u591a\u5c11\u4e0d\u786e\u5b9a\u6027\u3002\u60a8\u5408\u5e76\u7684\u6709\u5173\u73af\u5883\u5982\u4f55\u8fd0\u884c\u7684\u57fa\u672c\u673a\u5236\u7684\u4fe1\u606f\u8d8a\u591a(\u5373\u529f\u80fd\u8d8a\u591a)\uff0c\u4efb\u610f\u4e0d\u786e\u5b9a\u6027\u5c31\u4f1a\u8d8a\u5c11\u3002\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u5230\uff0c\u5f52\u7eb3\u504f\u5dee\u5728\u51b3\u5b9a\u6a21\u578b\u7684\u8ba4\u77e5\u4e0d\u786e\u5b9a\u6027\u4e0e\u4efb\u610f\u6027\u4e0d\u786e\u5b9a\u6027\u7684\u5206\u7c7b\u4e2d\u4e5f\u8d77\u7740\u91cd\u8981\u4f5c\u7528\u3002\u5173\u4e8e\u6211\u4eec\u7b80\u5316\u65b9\u6cd5\u7684\u91cd\u8981\u8bf4\u660e\uff1a\u56e0\u4e3a\u6211\u4eec\u53ea\u4f7f\u7528$$\\sigma^2$$\u6765\u8868\u793a\u4e0d\u786e\u5b9a\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u65b9\u6cd5\u4e0d\u533a\u5206\u8ba4\u77e5\u6027\u548c\u4efb\u610f\u6027\u4e0d\u786e\u5b9a\u6027\u3002\u7ed9\u5b9a\u8db3\u591f\u7684\u4ea4\u4e92\uff0c\u4ee3\u7406\u5c06\u7f29\u5c0f\u77e5\u8bc6\u9e3f\u6c9f\uff0c\u800c$$\\sigma^2$$\u5c06\u4ec5\u4ee3\u8868\u4efb\u610f\u7684\u4e0d\u786e\u5b9a\u6027\u3002\u7136\u800c\uff0c\u4ee3\u7406\u4ecd\u7136\u5229\u7528\u8fd9\u79cd\u4e0d\u786e\u5b9a\u6027\u8fdb\u884c\u63a2\u7d22\u3002\u8fd9\u662f\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u63a2\u7d22\u7684\u5168\u90e8\u76ee\u7684\u662f\u83b7\u53d6\u77e5\u8bc6\uff0c\u8fd9\u8868\u660e\u6211\u4eec\u5e94\u8be5\u53ea\u5229\u7528\u8ba4\u77e5\u7684\u4e0d\u786e\u5b9a\u6027\u8fdb\u884c\u63a2\u7d22\u3002\n\u7531\u4e8e\u6211\u4eec\u5efa\u6a21\u7684\u662f$$\\\u00b5$$\u548c$$\\sigma^2$$\uff0c\u56e0\u6b64\u6211\u4eec\u9996\u5148\u8bc4\u4f30\u5047\u8bbeQ\u503c\u670d\u4ece\u6b63\u6001\u5206\u5e03\u7684\u6761\u4ef6\u3002\n\u65f6\u5dee(TD)\u5b66\u4e60\u662f\u5f3a\u5316\u5b66\u4e60\u4e2d\u5b66\u4e60\u4ef7\u503c\u51fd\u6570\u7684\u4e3b\u6d41\u8303\u5f0f\u3002\u4e0b\u9762\u6211\u4eec\u5c06\u5feb\u901f\u603b\u7ed3\u4e00\u79cdQ\u503c\u7684TD\u5b66\u4e60\u7b97\u6cd5\uff0c\u79f0\u4e3aQ-\u5b66\u4e60\u3002\u9996\u5148\uff0c\u6211\u4eec\u5c06\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199Q\u503c\uff1a\n\\overbrace{q_\\pi(s\uff0ca)}^\\text{\u5f53\u524dq\u503c}=\\overbrace{R_s^a}^\\text{(s\uff0ca)\u7684\u9884\u671f\u5956\u52b1}+\\overbrace{\\Gamma q_\\pi(s^{\\Prime}\uff0ca^{\\Prime})}^\\text{\u4e0b\u4e00\u65f6\u95f4\u6b65\u7684\u8d34\u73b0Q\u503c}\u6211\u4eec\u5c06\u7cbe\u786e\u5730\u5c06Q\u503c\u5b9a\u4e49\u4e3a\u5728$$s$$\u72b6\u6001\u4e0b\u91c7\u53d6\u64cd\u4f5c$$a$\u5e76\u968f\u540e\u6267\u884c\u7b56\u7565$$\\pi$\u7684\u603b\u56de\u62a5\u7684\u671f\u671b\u503c\u3002\u5173\u4e8e$$\\pi$$\u7684\u90e8\u5206\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u4ee3\u7406\u5bf9\u64cd\u4f5c\u6709\u591a\u597d\u7684\u770b\u6cd5\u53d6\u51b3\u4e8e\u5b83\u5728\u540e\u7eed\u72b6\u6001\u4e2d\u5c06\u91c7\u53d6\u7684\u64cd\u4f5c\u3002\u6211\u4eec\u5c06\u5728\u6e38\u620f\u73af\u5883\u4e2d\u5206\u6790\u6211\u4eec\u7684\u4ee3\u7406\u65f6\u8fdb\u4e00\u6b65\u8ba8\u8bba\u8fd9\u4e00\u70b9\u3002\n\u5bf9\u4e8eQ-Learning\u7b97\u6cd5\uff0c\u6211\u4eec\u5bf9\u6765\u81ea\u73af\u5883\u7684\u5956\u52b1$$r$$\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u4f30\u8ba1\u5f53\u524d\u72b6\u6001-\u52a8\u4f5c\u5bf9$$q(s\uff0ca)$$\u548c\u4e0b\u4e00\u4e2a\u72b6\u6001-\u52a8\u4f5c\u5bf9$$q(s^{\\Prime}\uff0ca^{\\Prime})$$\u7684Q\u503c\u3002\u5bf9\u4e8eQ-Learning\uff0c\u4e0b\u4e00\u4e2a\u52a8\u4f5c$$a^{\\Prime}$$\u662f\u8be5\u72b6\u6001\u4e2d\u5177\u6709\u6700\u5927Q\u503c\u7684\u52a8\u4f5c\uff1a$$\\max_{a^{\\Prime}}q(s^{\\Prime}\uff0ca^{\\Prime})$$\u3002\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u6837\u54c1\u8868\u793a\u4e3a\uff1a\nQ(s\uff0ca)=r+\\\u03b3q{(s^\\Prime\uff0ca^\\Prime)}\u8981\u8ba4\u8bc6\u5230\u7684\u91cd\u8981\u4e00\u70b9\u662f\uff0c\u65b9\u7a0b\u7684\u5de6\u4fa7\u662f\u4f30\u8ba1(\u5f53\u524dQ\u503c)\uff0c\u800c\u53f3\u4fa7\u662f\u4ece\u73af\u5883\u4e2d\u6536\u96c6\u7684\u4fe1\u606f(\u91c7\u6837\u7684\u5956\u52b1)\u548c\u53e6\u4e00\u4e2a\u4f30\u8ba1(\u4e0b\u4e00\u4e2aQ\u503c)\u7684\u7ec4\u5408\u3002\u7531\u4e8e\u516c\u5f0f\u7684\u53f3\u4fa7\u6bd4\u5de6\u4fa7\u5305\u542b\u66f4\u591a\u6709\u5173\u771f\u5b9eQ\u503c\u7684\u4fe1\u606f\uff0c\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u5c06\u5de6\u4fa7\u7684\u503c\u79fb\u52a8\u5230\u66f4\u63a5\u8fd1\u53f3\u4fa7\u7684\u503c\u3002\u6211\u4eec\u901a\u8fc7\u6700\u5c0f\u5316\u65f6\u5dee\u5e73\u65b9\u8bef\u5dee($$\\delta^2_{td}$$)\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u5176\u4e2d$$\\delta^{td}$$\u5b9a\u4e49\u4e3a\uff1a\n\\Delta_{td}=r+\\Gamma q(s^\\Prime\uff0ca^\\Prime)-q(s\uff0ca)\u6211\u4eec\u5728\u8868\u683c\u73af\u5883\u4e2d\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u65b9\u5f0f(\u5176\u4e2d$$\\alpha$$\u662f\u5b66\u4e60\u7387)\u5177\u6709\u4ee5\u4e0b\u66f4\u65b0\u89c4\u5219\uff1a\nQ(s\uff0ca)\\leftarrow\\alpha(r_{t+1}+\\Gamma q(s^\\\u7d20\u6570\uff0ca^\\\u7d20\u6570))+(1-\\alpha)q(s\uff0ca)\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u66f4\u65b0\u79f0\u4e3a\u81ea\u4e3e\uff0c\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e00\u4e2aQ\u503c\u6765\u66f4\u65b0\u53e6\u4e00\u4e2aQ\u503c\u3002\n\u6211\u4eec\u5c06\u4f7f\u7528\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406(CLT)\u4f5c\u4e3a\u4e86\u89e3Q\u503c\u4f55\u65f6\u6b63\u6001\u5206\u5e03\u7684\u57fa\u7840\u3002\u56e0\u4e3aQ\u503c\u662f\u6837\u672c\u603b\u548c\uff0c\u6240\u4ee5\u968f\u7740\u6837\u672c\u5927\u5c0f\u7684\u589e\u52a0\uff0c\u5b83\u4eec\u5e94\u8be5\u770b\u8d77\u6765\u8d8a\u6765\u8d8a\u5448\u6b63\u6001\u5206\u5e03\u3002\u7136\u800c\uff0c\u6211\u4eec\u8981\u6307\u51fa\u7684\u7b2c\u4e00\u4e2a\u7ec6\u5fae\u5dee\u522b\u662f\uff0c\u5956\u52b1\u5fc5\u987b\u4ece\u65b9\u5dee\u6709\u9650\u7684\u5206\u5e03\u4e2d\u62bd\u6837\u3002\u56e0\u6b64\uff0c\u5982\u679c\u62a5\u916c\u662f\u62bd\u6837\u5206\u5e03\uff0c\u5982\u67ef\u897f\u6216L&amp\uff1bEacutevy\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u80fd\u5047\u8bbeQ\u503c\u662f\u6b63\u6001\u5206\u5e03\u7684\u3002\n\u5426\u5219\uff0c\u5f53\u6709\u6548\u65f6\u95f4\u6b65\u6570$$\\Widdetilde{N}$$\u8f83\u5927\u65f6\uff0cQ\u503c\u8fd1\u4f3c\u4e3a\u6b63\u6001\u5206\u5e03\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u6709\u6548\u65f6\u95f4\u6b65\u6570\u770b\u4f5c\u662f\u5168\u6837\u672c\u7684\u6570\u76ee\u3002\u3002\u6b64\u6307\u6807\u7531\u4e09\u4e2a\u56e0\u7d20\u7ec4\u6210\uff1a\n$$\\xi$$-\u7a00\u758f\u6027\uff1a\u6211\u4eec\u5c06\u7a00\u758f\u6027\u5b9a\u4e49\u4e3a\u65f6\u95f4\u6b65\u6570\uff0c\u5e73\u5747\u800c\u8a00\uff0c\u5728Google Colab\u7b14\u8bb0\u672c\u4e2d\u6536\u5230\u975e\u96f6\u5956\u52b1\u4e4b\u95f4\u80af\u5b9a\u4f1a\u6536\u5230\u96f6\u5956\u52b1\u3002\u6211\u4eec\u8fd0\u884c\u6a21\u62df\u663e\u793a\uff0c$$\\xi$$\u51cf\u5c11\u4e86$$\\frac{1}{\\xi+1}$$\uff1a\u5728\u7b14\u8bb0\u672c\u4e2d\u8fdb\u884c\u5b9e\u9a8c\u3002\u5f53\u5b58\u5728\u7a00\u758f\u6027\u65f6\uff0c\u6211\u4eec\u4f1a\u4e22\u5931\u6837\u672c(\u56e0\u4e3a\u5b83\u4eec\u59cb\u7ec8\u4e3a\u96f6)\u3002\u56e0\u6b64\uff0c\u968f\u7740$$\\xi$$\u7684\u589e\u52a0\uff0c$$\\widetilde{N}$$\u51cf\u5c11\u3002\n$$\\Gamma$$-\u6298\u6263\u7cfb\u6570\uff1a\u968f\u7740$$\\Gamma$$\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u76f8\u5bf9\u4e8e\u9065\u8fdc\u7684\u5956\u52b1\uff0c\u4ee3\u7406\u5546\u66f4\u91cd\u89c6\u5373\u65f6\u5956\u52b1\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u80fd\u5c06\u8fdc\u7a0b\u5956\u52b1\u89c6\u4e3a\u5b8c\u6574\u6837\u672c\u3002\u56e0\u6b64\uff0c\u968f\u7740$$\\Gamma$$\u7684\u589e\u52a0\uff0c$$\\widetilde{N}$$\u4e5f\u4f1a\u589e\u52a0\u3002\n\u6211\u4eec\u5c06\u603b\u56de\u62a5\u5b9a\u4e49\u4e3a\u8d34\u73b0\u7684\u672a\u6765\u56de\u62a5\u7684\u603b\u548c\uff0c\u5176\u4e2d\u8d34\u73b0\u56e0\u5b50$$\\\u03b3$$\u53ef\u4ee5\u91c7\u7528$$0$$(\u8fd1\u89c6)\u548c$$1$$(\u8fdc\u89c6)\u4e4b\u95f4\u7684\u4efb\u4f55\u503c\u3002\u5b83\u6709\u52a9\u4e8e\u5c06\u7ed3\u679c\u5206\u5e03$$G_t$$\u89c6\u4e3a\u52a0\u6743\u6df7\u5408\u5206\u5e03\u3002\nG_t=r_{t+1}+\\Gamma r_{t+2}+\\Gamma^2 r_{t+3}+...+\\Gamma^{N-1}r_{t+N}\u5f53\u6211\u4eec\u8bbe\u7f6e$$\\Gamma\\lt 1$$\u65f6\uff0c\u5e95\u5c42\u5206\u5e03\u7684\u6df7\u5408\u6743\u91cd\u4ece\u7b49\u6743\u53d8\u4e3a\u65f6\u95f4\u52a0\u6743\uff0c\u5176\u4e2d\u5373\u65f6\u65f6\u95f4\u6b65\u957f\u7684\u6743\u91cd\u8f83\u9ad8\u3002\u5f53$$\\Gamma=0$$\u65f6\uff0c\u8fd9\u7b49\u540c\u4e8e\u4ec5\u4ece\u4e00\u4e2a\u65f6\u95f4\u6b65\u91c7\u6837\uff0cCLT\u5c06\u4e0d\u8d77\u4f5c\u7528\u3002\u4f7f\u7528\u6ed1\u5757\u67e5\u770b$$\\Gamma$$\u5bf9\u6df7\u5408\u6743\u91cd\u7684\u5f71\u54cd\uff0c\u5e76\u6700\u7ec8\u67e5\u770b\u6df7\u5408\u5206\u5e03\u3002\n$$\\Gamma$$=\u3002\n\u6211\u4eec\u7ed3\u5408\u4e0a\u8ff0\u56e0\u7d20\u6765\u6b63\u5f0f\u5b9a\u4e49\u6709\u6548\u65f6\u95f4\u6b65\u957f\u7684\u6570\u91cf\uff1a\\widetilde{N}=\\frac{1}{\\xi+1}\\sum_{i=0}^{N-1}\\Gamma^{i}\u4e0b\u9762\u6211\u4eec\u76f4\u89c2\u5730\u6f14\u793a\u6bcf\u4e2a\u56e0\u7d20\u5982\u4f55\u5f71\u54cdQ\u503c\u7684\u6b63\u6001\u6027\u3002\u6211\u4eec\u5c06Q\u503c\u7f29\u653e$$\\widetilde{N}$\uff0c\u56e0\u4e3a\u5426\u5219\u968f\u7740\u6709\u6548\u65f6\u95f4\u6b65\u6570\u7684\u589e\u52a0\uff0cQ\u503c\u7684\u5206\u5e03\u4f1a\u8d8a\u6765\u8d8a\u5411\u53f3\u79fb\u52a8\uff0c\u8fd9\u4f1a\u626d\u66f2\u89c6\u89c9\u3002\uff1a\n\u5f53\u4ee3\u7406\u8003\u8651\u7684\u6240\u6709\u5956\u52b1\u5747\u4e3a0\u65f6\uff0c\u8fc7\u5ea6\u7a00\u758f\uff0c\u518d\u52a0\u4e0a\u4f4e\u8d34\u73b0\u7387\u6216\u4f4e\u65f6\u95f4\u6b65\u6570\uff0c\u5c06\u5bfc\u81f4\u72c4\u62c9\u514b\u589e\u91cf\u51fd\u6570(Dirac Delta Function)\u3002\n\u5728\u7b14\u8bb0\u672c\u4e2d\u8fdb\u884c\u5b9e\u9a8c\u5bf9\u4e8e\u5177\u6709\u7ec8\u7aef\u72b6\u6001\u7684\u73af\u5883\uff0c\u4e0a\u8ff0\u53ef\u89c6\u5206\u6790\u4e2d\u6709\u4e00\u4e2a\u8b66\u544a\u3002\u968f\u7740\u5ea7\u5e2d\u5411\u7ec8\u7aef\u72b6\u6001\u79fb\u52a8\uff0c$$N$$\u5c06\u9010\u6e10\u53d8\u5c0f\uff0cQ\u503c\u5c06\u770b\u8d77\u6765\u66f4\u4e0d\u5448\u6b63\u6001\u5206\u5e03\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u8f83\u5927\u7684$$\\Gamma$$\uff0c\u5bf9\u4e8e\u5bc6\u96c6\u5956\u52b1\u73af\u5883\u4e2d\u7684\u5927\u591a\u6570\u5dde\u6765\u8bf4\uff0c\u5047\u8bbeQ\u503c\u8fd1\u4f3c\u4e3a\u6b63\u6001\u5206\u5e03\u662f\u5408\u7406\u7684\u3002\n\u6211\u4eec\u5728\u672c\u8282\u7684\u5f00\u5934\u6307\u51fa\uff0c\u53ea\u6709\u5f53\u6211\u4eec\u5047\u8bbeQ\u503c\u662f\u6b63\u6001\u5206\u5e03\u65f6\uff0c\u4ee5\u4e0b\u89e3\u91ca\u624d\u5728\u7406\u8bba\u4e0a\u662f\u5408\u7406\u7684\u3002\u6211\u4eec\u9996\u5148\u4f7f\u7528\u8d1d\u53f6\u65af\u5b9a\u7406\u5b9a\u4e49\u4e00\u822c\u66f4\u65b0\u89c4\u5219\uff1a\n\\text{\u540e\u9a8c}\\proto\\text{\u4f3c\u7136}\\\u6b21\\text{\u5148\u9a8c}\u5728\u4f7f\u7528\u9ad8\u65af\u65f6\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u540e\u9a8cA\u9ad8\u65af\u4e0e\u81ea\u8eab\u5171\u8f6d\u7684\u89e3\u6790\u89e3\uff0c\u8fd9\u5927\u5927\u7b80\u5316\u4e86\u8d1d\u53f6\u65af\u66f4\u65b0\u8fc7\u7a0b\uff0c\u800c\u4e0d\u662f\u8ba1\u7b97\u540e\u9a8c\u79ef\u5206\uff0c\u800c\u662f\u95ed\u5408\u5f62\u5f0f\u7684\u8868\u8fbe\u5f0f\u3002\uff1a\n\\MU=\\frac{\\sigma^2_1}{\\sigma^2_1+\\sigma^2_2}\\Mu_2+\\frac{\\sigma^2_2}{\\sigma^2_1+\\sigma^2}\\Mu_1\\sigma^2=\\frac{\\sigma^2_1\\sigma^2_}{\\sigma^2_1+\\sigma^2_2}\u901a\u8fc7\u67e5\u770b\u989c\u8272\u7f16\u7801\u7684\u6bd4\u8f83\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u786e\u5b9a\u6027Q-Learning\u7b49\u4ef7\u4e8e\u4f7f\u7528Bayes&#39\u66f4\u65b0\u5e73\u5747\u503c\uff1a\n\\BEGIN{Aligned}&amp\uff1b\\COLOR{GREEN}\\MU&AMP\uff1b\\COLOR{\u9ed1\u8272}=&amp\uff1b&amp\uff1b\\color{orange}\\frac{\\sigma^2_1}{\\sigma^2_1+\\sigma^2_2}&amp\uff1b&amp\uff1b\\COLOR{RED}\\MU_2&amp\uff1b&amp\uff1b\\COLOR{\u9ed1\u8272}+&amp\uff1b&amp\uff1b\\color{purple}\\frac{\\sigma^2_2}{\\sigma^2_1+\\sigma^2_2}&amp\uff1b\\color{Blue}\\mu1&amp\uff1b\\&amp\uff1b\\color{green}q(s\uff0ca)&amp\uff1b\\color{Black}=&amp\uff1b&amp\uff1b\\color{range}\\alpha&amp\uff1b&amp\uff1b\\color{red}(r_{t+1}+\\Gamma q(s^\\Prime\uff0ca^\\Prime))&amp\uff1b&amp\uff1b\\color{Black}+&amp\uff1b&amp\uff1b\\color{purse}(1-\\alpha)&amp\uff1b&amp\uff1b\\color{Blue}q(s\uff0ca)&amp\uff1b\\end{aligned}\u8fd9\u5bf9Q-Learning\u7684\u786e\u5b9a\u6027\u5b9e\u73b0(\u5176\u4e2d$$\\alpha$$\u662f\u8d85\u53c2\u6570)\u6709\u4ec0\u4e48\u542f\u793a\uff1f\u7531\u4e8e\u6211\u4eec\u5728\u786e\u5b9a\u6027Q-Learning\u4e2d\u6ca1\u6709\u5bf9Q\u503c\u7684\u65b9\u5dee\u8fdb\u884c\u5efa\u6a21\uff0c\u56e0\u6b64$$\\\u03b1$$\u4e0d\u663e\u5f0f\u5730\u4f9d\u8d56\u4e8eQ\u503c\u7684\u786e\u5b9a\u6027\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06$$\\\u03b1$$\u89e3\u91ca\u4e3a\u8be5\u4ee3\u7406\u5728\u5176\u5148\u524d\uff0c$$Q(s\uff0ca)$$\u4e0e\u53ef\u80fd\u6027\uff0c$$r+\\\u03b3Q(s^\\\u7d20\u6570\uff0ca^\\\u7d20\u6570)$$\u7684\u6bd4\u7387\u3002\u6211\u4eec\u7684\u5ea6\u91cf\u662f$$r+\\\u03b3q(s^\\\u7d20\u6570\uff0ca^\\\u7d20\u6570)$$\uff0c\u56e0\u4e3a$$r$$\u662f\u76f4\u63a5\u4ece\u73af\u5883\u4e2d\u7ed9\u51fa\u7684\u4fe1\u606f\u3002\u6211\u4eec\u5c06\u6982\u7387\u8868\u793a\u4e3a\u6b64\u5ea6\u91cf\u4e0a\u7684\u5206\u5e03\uff1a$$\\\u6570\u5b66{N}\\Left(\\Mu_{r+\\Gamma Q(s^\\Prime\uff0ca^\\Prime)}\uff0c\\sigma^2_{r+\\Gamma Q(s^\\Prime\uff0ca^\\Prime)}\\Right)$$\u3002\u3002\u5bf9\u4e8e\u786e\u5b9a\u6027Q-Learning\uff0c\u8fd9\u4e2a\u6bd4\u7387\u901a\u5e38\u662f\u6052\u5b9a\u7684\uff0c\u5e76\u4e14$$Q(s\uff0ca)$$\u4e2d\u7684\u4e0d\u786e\u5b9a\u6027\u4e0d\u4f1a\u968f\u7740\u6211\u4eec\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u800c\u6539\u53d8\u3002\n\u5982\u679c\u6211\u4eec\u4fdd\u6301$$\\alpha$$\u4e0d\u53d8\uff0c\u5728\u5f15\u64ce\u76d6\u4e0b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5c31\u5728\u524d\u4e00\u4e2a\u65f6\u95f4\u6b65\u7684\u540e\u9a8c\u6210\u4e3a\u5f53\u524d\u65f6\u95f4\u6b65\u7684\u5148\u9a8c\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u65b9\u5dee\u589e\u52a0$$\\sigma^2_{\\text{previous}_{(t-1)}}*\\alpha$$\u5f53$$\\alpha$$\u4fdd\u6301\u4e0d\u53d8\u65f6\uff0c\u5148\u524d\u7684\u65b9\u5dee\u9690\u5f0f\u7ecf\u5386\u4ee5\u4e0b\u8f6c\u6362\uff1a$$\\sigma^2_{\\text{previous}_{(T)}}=\\sigma^2_{\\text{postal}_{(t-1)}}+\\sigma^2_{\\text{previous}_{(t-1)}}*\\alpha$$\u3002\u6d3e\u751f\u8ba9\u6211\u4eec\u9996\u5148\u8bf4\u660e$$\\Alpha=\\frac{\\sigma^2_\\text{prior}}{\\sigma^2_\\text{prior}+\\sigma^2_\\TEXT{\u53ef\u80fd\u6027}}$$\uff0c\u8fd9\u53ef\u4ee5\u4ece\u6b63\u6587\u4e2d\u7684\u989c\u8272\u7f16\u7801\u6bd4\u8f83\u4e2d\u63a8\u5bfc\u51fa\u6765\u3002\u7ed9\u5b9a\u66f4\u65b0\u89c4\u5219$$\\sigma^2_{\\Text{\u540e\u9a8c}_{(T)}}=\\FRAC{\\sigma^2_{\\Text{\u4e4b\u524d}_{(T)}}\\\u6b21\\sigma^2_{\\text{likelihood}_{(t)}}}{\\sigma^2_{\\text{prior}_{(t)}}+\\sigma^2_{\\Text{\u53ef\u80fd\u6027}_{(T)}$$\uff0c\u6211\u4eec\u77e5\u9053$$\\sigma^2_{\\text{\u540e\u53d1}_{(T)}}\\lt\\sigma^2_{\\text{\u4e4b\u524d}_{(T)}}$$\u6211\u4eec\u8fd8\u77e5\u9053\u66f4\u65b0\u89c4\u5219\u4ee5\u8fd9\u6837\u4e00\u79cd\u65b9\u5f0f\u5de5\u4f5c\uff1a$$\\sigma^2_{\\text{\u4e4b\u524d}_{(T)}}=\\sigma^2_{\\text{\u540e\u53d1}_{(t-1)}}$\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u5047\u8bbe$$\\sigma^2_\\text{\u4ee5\u524d}_{(T)}}\\lt\\sigma^2_{\\text{\u4e4b\u524d}_{(t-1)}}$$\uff0c\u6211\u4eec\u53ef\u4ee5\u58f0\u660e$$\\sigma^2_{\u4e4b\u524d}_{(T)}}\\lt\u3002\u8fd9\u610f\u5473\u7740$$\\alpha_{(T)}\\neq\\alpha_{(t-1)}$$\u4e3a\u4e86\u4f7f$$\\alpha_{(T)}=\\alpha_{(t-1)}$$\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0$$\\sigma^2_{\\text{\u540e\u9a8c}_{(t-1)}}$$\uff0c\u7136\u540e\u5b83\u624d\u4f1a\u53d8\u4e3a$$\\sigma^2_{\\text{\u4e4b\u524d}_{(T)}}$$\u3002\u6211\u4eec\u6c42\u89e3\u5982\u4e0b\u91d1\u989d\uff1a$$\\BEGIN{ALIGNED}\\sigma^2_{\\Text{Postal}_{(t-1)}}+X&amp\uff1b=\\sigma^2_{Text{Previous}_{(t-1)}}\\\\FRAC{\\sigma^2_{\\Text{Pre}_{(t-1)}\\x\\sigma^2_\\text{likelihood}}{\\sigma^2_{\\text{prior}_{(t-1)}}+\\sigma^2_{\u53ef\u80fd\u6027}}+X&amp\uff1b=\\sigma^2_{\\Text{\u4e4b\u524d}_{(t-1)}}\\\\X&amp\uff1b=\\sigma^2_{\\Text{\u4e4b\u524d}_{(t-1)}}\\Left(1-\\frac{\\sigma^2_\\text{likelihood}}{\\sigma^2_{\\text{prior}_{(t-1)}}+\\sigma^2_\\Text{\u53ef\u80fd\u6027}}\\\u53f3)\\\\X&amp\uff1b=\\sigma^2_{\\text{\u4e4b\u524d}_{(t-1)}}*\\alpha\\end{aligned}$$\u3002\u8fd9\u4f7f\u5f97\u4f3c\u7136\u548c\u5148\u9a8c\u4e4b\u95f4\u7684\u4e0d\u786e\u5b9a\u6027\u6bd4\u7387\u4fdd\u6301\u6052\u5b9a\u3002\u53e6\u4e00\u79cd\u89e3\u91ca\u662f\uff0c\u5148\u9a8c\u548c\u4f3c\u7136\u7684\u65b9\u5dee\u90fd\u5728\u4ee5\u4fdd\u6301\u5b83\u4eec\u4e4b\u95f4\u7684\u6bd4\u7387\u6052\u5b9a\u7684\u65b9\u5f0f\u9012\u51cf\u3002\u7136\u800c\uff0c\u6211\u4eec\u8ba4\u4e3a\uff0c\u5047\u8bbe\u62bd\u6837\u62a5\u916c\u7684\u65b9\u5dee\u4f1a\u968f\u7740\u4ee3\u7406\u4eba\u5728\u5176\u5148\u9a8c\u4fe1\u606f\u4e2d\u53d8\u5f97\u66f4\u52a0\u786e\u5b9a\u800c\u4e0d\u65ad\u51cf\u5c0f\uff0c\u8fd9\u662f\u4e0d\u5408\u7406\u7684\u3002\u3002\u4e0b\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u5c06\u5e38\u89c4\u8d1d\u53f6\u65af\u66f4\u65b0\u4e0e\u5e38\u91cf$$\\alpha$$\u66f4\u65b0\u8fdb\u884c\u6bd4\u8f83\u6765\u53ef\u89c6\u5316\u8fd9\u79cd\u89e3\u91ca\uff1a\n\u5bf9\u4e8e\u4f7f\u7528\u8d1d\u53f6\u65af\u89c4\u5219\u7684\u6bcf\u6b21\u66f4\u65b0\uff0c\u6211\u4eec\u4f7f\u7528\u6700\u8fd1\u8ba1\u7b97\u7684\u540e\u9a8c\u4f5c\u4e3a\u65b0\u7684\u5148\u9a8c\u3002\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86\u5f53\u6211\u4eec\u4fdd\u6301$$\\alpha$$\u6052\u5b9a\u65f6\uff0c\u5728\u5f15\u64ce\u76d6\u4e0b\u4f1a\u53d1\u751f\u4ec0\u4e48\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u4fdd\u6301\u6052\u5b9a\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u8fd8\u4f1a\u8870\u51cf$$\\alpha$$\uff0c\u4f7f\u4ee3\u7406\u4eba\u5728\u968f\u540e\u7684\u6bcf\u4e2a\u65f6\u95f4\u6b65\u51cf\u5c11\u5bf9\u65b0\u4fe1\u606f\u7684\u4f9d\u8d56(\u9690\u542b\u5730\u53d8\u5f97\u66f4\u786e\u5b9a)\u3002\u867d\u7136\u786e\u5b9a\u6027Q-Learning\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u4f9d\u8d56\u4e8e\u542f\u53d1\u5f0f\u65b9\u6cd5\u6765\u521b\u5efa\u8870\u51cf\u65f6\u95f4\u8868\uff0c\u4f46\u662f\u8d1d\u53f6\u65afQ-Learning\u5185\u7f6e\u4e86\u5b83\uff1a\n\\alpha=\\frac{\\sigma^2_{q(s\uff0ca)}}{\\sigma^2_{q(s\uff0ca)}+\\sigma^2_{r+\\Gamma q(s^\\Prime\uff0ca^\\Prime)}}\u5f53\u6211\u4eec\u7684\u4ee3\u7406\u66f4\u65b0\u5176\u5bf9\u4e16\u754c\u7684\u4fe1\u5ff5\u65f6\uff0c\u5b83\u5c06\u81ea\u7136\u5730\u521b\u5efa\u4e00\u4e2a\u8870\u53d8\u65f6\u95f4\u8868\uff0c\u8be5\u65f6\u95f4\u8868\u4e0e\u5176\u5148\u524d\u7684\u786e\u5b9a\u6027\u76f8\u5bf9\u5e94\u3002\u968f\u7740\u4e0d\u786e\u5b9a\u6027\u7684\u51cf\u5c11\uff0c\u5b66\u4e60\u7387\u4e5f\u968f\u4e4b\u964d\u4f4e\u3002\u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e2a\u72b6\u6001-\u52a8\u4f5c\u5bf9\u7684\u5b66\u4e60\u7387\u90fd\u662f\u5b9a\u5236\u7684\uff0c\u56e0\u4e3a\u53ef\u4ee5\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u53d8\u5f97\u66f4\u6709\u4fe1\u5fc3\nQ\u503c\u91c7\u6837\uff1a\u6211\u4eec\u4eceQ\u503c\u5206\u5e03\u4e2d\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u9009\u62e9\u91c7\u6837Q\u503c\u6700\u5927\u7684\u52a8\u4f5c\u3002\u8fd9\u79cd\u5f62\u5f0f\u7684\u63a2\u7d22\u5728Q-\u5b66\u4e60\u7684\u60c5\u51b5\u4e0b\u79f0\u4e3aQ\u503c\u62bd\u6837\uff0c\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u79f0\u4e3aThompson\u62bd\u6837\u3002\n\u8fd1\u89c6-VPI\uff1a\u6211\u4eec\u7528\u5b8c\u7f8e\u4fe1\u606f\u7684\u503c(VPI)$$\\text{VPI}(s\uff0ca)=\\int^\\infty_{-\\infty}\\text{ain}_{s\uff0ca}(X)pr(\\mu{s\uff0ca}=x)dx$$\u6765\u91cf\u5316\u653f\u7b56\u6539\u8fdb\u7684\u8fd1\u89c6\u89c6\u56fe\uff0c\u8fd9\u53ef\u4ee5\u76f4\u89c2\u5730\u63cf\u8ff0\u4e3a\u5bf9\u5f53\u524d\u6700\u4f73\u64cd\u4f5c\u7684\u9884\u671f\u6539\u8fdb\u3002\u3002\u5b83\u662f\u77ed\u89c6\u7684\uff0c\u56e0\u4e3a\u5b83\u53ea\u8003\u8651\u5f53\u524d\u65f6\u95f4\u6b65\u957f\u7684\u6539\u8fdb\u3002\u6211\u4eec\u9009\u62e9\u6700\u5927\u5316$$\\mu{s\uff0ca}+\\text{vpi}(s\uff0ca)$$\u7684\u64cd\u4f5c\u3002\n\u901a\u8fc7\u4e0e\u4e0a\u9762\u7684\u89c6\u89c9\u4ea4\u4e92\uff0c\u4eba\u4eec\u53ef\u80fd\u4f1a\u60f3\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u63a8\u65ad\u53e6\u4e00\u4e2a\u968f\u673a\u7b56\u7565\u7684\u52d8\u63a2\u53c2\u6570\u662f\u4ec0\u4e48\uff0c\u5373Q\u503c\u62bd\u6837\uff0c\u5b83\u6ca1\u6709\u660e\u786e\u5b9a\u4e49$$\\varepsilon$$\u3002\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u63a2\u8ba8\u8fd9\u4e2a\u95ee\u9898\u3002\n\u4e0e\u6211\u4eec\u663e\u5f0f\u5b9a\u4e49$$\\varepsilon$$\u4f5c\u4e3a\u52d8\u63a2\u8d85\u53c2\u6570\u7684\u786e\u5b9a\u6027Q-Learning\u76f8\u53cd\uff0c\u5f53\u6211\u4eec\u4f7f\u7528Q\u503c\u91c7\u6837\u65f6\uff0c\u5b58\u5728\u4e00\u4e2a\u9690\u5f0f\u03b5$$\\HAT{\\varepsilon}$$\u3002\u5728\u5b9a\u4e49$$\\hat{\\varepsilon}$$\u4e4b\u524d\uff0c\u6211\u4eec\u5c06\u53bb\u6389\u4e00\u4e9b\u7b26\u53f7\u3002\u8ba9\u5b9a\u4e49\u4e24\u4e2a\u6982\u7387\u5206\u5e03\uff0c$$x_1\\sim\\Mathcal{N}(\\MU_1\uff0c\\sigma^2_1)$$\u548c$$x_2\\sim\\Mathcal{N}(\\MU_2\uff0c\\sigma^2_2)$$\u3002\u8981\u8ba1\u7b97\u62bd\u6837\u503c$$x_1\\gt x_2$$\u7684\u6982\u7387\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u516c\u5f0f\uff0c\u5176\u4e2d$$\\\u03c6$$\u8868\u793a\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff1a\n\\BEGIN{ALIGNED}&amp\uff1b\\MU=\\MU_1-\\MU_2\\\\&amp\uff1b\\sigma=\\sqrt{\\sigma^2_1+\\sigma^2_2}\\\\&amp\uff1bPr(x_1\\gt x_2)=1-\\Phi\\Left(\\frac{-\\\u00b5}{\\sigma}\\right)\\end{aligma}\u4f7f\u7528\u6b64\u516c\u5f0f\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8ba1\u7b97\u53c2\u8003\u64cd\u4f5c$$\\hat{a}$$\u76f8\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u64cd\u4f5c\u91c7\u6837\u8f83\u5927Q\u503c\u7684\u6982\u7387\u3002\u5982\u679c\u6211\u4eec\u5bf9Agent\u53ef\u4ee5\u505a\u51fa\u7684\u6bcf\u4e2a\u52a8\u4f5c(\u4e0d\u5305\u62ec\u53c2\u8003\u52a8\u4f5c)\u8fd9\u6837\u505a\uff0c\u5e76\u8ba1\u7b97\u8054\u5408\u6982\u7387\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u5230\u4e86$$\\HAT{a}$$\u7684\u91c7\u6837Q\u503c\u5927\u4e8e\u7ed9\u5b9a\u72b6\u6001\u4e0b\u7684\u6240\u6709\u5176\u4ed6\u52a8\u4f5c\u7684\u6982\u7387\uff0c\u5219\u4e00\u4e2a\u52a8\u4f5c\u7684Q\u503c\u5e94\u8be5\u72ec\u7acb\u4e8e\u8be5\u72b6\u6001\u4e0b\u7684\u5176\u4ed6Q\u503c\u3002\u8fd9\u662f\u56e0\u4e3a\u4e00\u6b21\u53ea\u80fd\u6267\u884c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5e76\u4e14\u6211\u4eec\u901a\u5e38\u5c06Q\u5b66\u4e60\u5e94\u7528\u4e8eMDP\uff0c\u5176\u4e2d\u9a6c\u5c14\u53ef\u592b\u5c5e\u6027\u6210\u7acb(\u5373\u5386\u53f2\u65e0\u5173\u7d27\u8981)\u3002\u56e0\u6b64\uff0c\u8981\u8ba1\u7b97\u8054\u5408\u6982\u7387\uff0c\u53ea\u9700\u5c06\u8fb9\u9645\u6982\u7387\u76f8\u4e58\u5373\u53ef\u3002\uff1a\n\\bar{P}_{\\hat{a}}=\\prod_{a}^{\\mathcal{A}}pr(x_{\\hat{a}}\\gt x_a)\uff0c\\quad\\text{for}\uff0c\\\uff0ca\\neq\\hat{a}\u7136\u540e\u6211\u4eec\u4f1a\u627e\u5230\u5177\u6709\u6700\u5927$$\\bar{P}_{a}$$\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u4ece&#39\uff1b\u5982\u679c\u4f7f\u7528\u6b63\u6001\u5206\u5e03\uff0c\u5219$$\\text{arg}\\max{\\bar{P}_{a}}$$\u6070\u597d\u5bf9\u5e94\u4e8e\u5e73\u5747\u503c\u6700\u5927\u7684Q\u503c\u3002\u3002\nA_{max}=\\text{arg}\\max{\\bar{P}_{a}}\uff0c\\quad\\forall\\\uff0c\\\uff0ca\\in\\mathcal{A}\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u9664\u5229\u7528\u64cd\u4f5c\u4e4b\u5916\u7684\u6240\u6709\u64cd\u4f5c\u7684\u6700\u5927Q\u503c\u8fdb\u884c\u91c7\u6837\u7684\u6982\u7387\u6c42\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u5c06\u83b7\u5f97\u4ee5\u4e0b\u6982\u7387\uff1a\n\\hat{\\varepsilon}=\\frac{1}{C}\\sum_{a}^{\\mathcal{A}}\\bar{P}_{a}\uff0c\\quad\\text{for}\uff0c\\a\\neq a_{max}\u6211\u4eec\u73b0\u5728\u5c06\u7406\u8bba\u4ed8\u8bf8\u5b9e\u8df5\uff01\u901a\u8fc7\u5bf9\u5b66\u4e60\u8fc7\u7a0b\u7684\u8003\u5bdf\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5c06\u8d1d\u53f6\u65af\u89c4\u5219\u5e94\u7528\u4e8eQ-Learning\u662f\u4e00\u4e2a\u5173\u952e\u7684\u6311\u6218\u3002\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u5173\u6ce8\u7684\u662f\u53d1\u6563\u7684Q\u503c\u5206\u5e03\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4ee3\u7406\u5bf9\u6b21\u4f18\u7b56\u7565\u53d8\u5f97\u6709\u4fe1\u5fc3\u3002\n\u4f5c\u4e3a\u91d1\u878d\u5e02\u573a\u7684\u7814\u7a76\u4eba\u5458\uff0c\u6211\u4eec\u5728\u8bbe\u8ba1\u4e86\u5177\u6709\u76f8\u4f3c\u7279\u5f81\u7684\u5b50\u7c7b\u95ee\u9898\u540e\uff0c\u8bbe\u8ba1\u4e86\u73af\u5883\u3002\u8fd9\u4e9b\u5370\u5237\u673a\u3002\n.", "note_en": "Recent work by Dabney et al. suggests that the brain represents reward predictions as probability distributions   Experiments were conducted on mice using single-unit recordings from the ventral tegmental area.  . This contrasts against the widely adopted approach in reinforcement learning (RL) of modelling single scalar quantities (expected values). In fact, by using distributions we are able to quantify uncertainty in the decision-making process. Uncertainty is especially important in domains where making a mistake can result in the inability to recover   Examples of such domains include autonomous vehicles, healthcare, and the financial markets. . Research in risk-aware reinforcement learning has emerged to address such problems  . However, another important application of uncertainty, which we focus on in this article, is efficient exploration of the state-action space.\n    The purpose of this article is to clearly explain Q-Learning from the perspective of a Bayesian. As such, we use a small grid world and a simple extension of tabular Q-Learning to illustrate the fundamentals. Specifically, we show how to extend the deterministic Q-Learning algorithm to model the variance of Q-values with Bayes&#39; rule. We focus on a sub-class of problems where it is reasonable to assume that Q-values are normally distributed and derive insights when this assumption holds true. Lastly, we demonstrate that applying Bayes&#39; rule to update Q-values comes with a challenge: it is vulnerable to early exploitation of suboptimal policies.\n  This article is largely based on the seminal work from Dearden et al.  . Specifically, we expand on the assumption that Q-values are normally distributed and evaluate various Bayesian exploration policies. One key distinction is that we model $$\\mu$$ and $$\\sigma^2$$, while the authors of the original Bayesian Q-Learning paper model a distribution over these parameters. This allows them to quantify uncertainty in their parameters as well as the expected return - we only focus on the latter.\n    Since Dearden et al. model a distribution over the parameters, they can sample from this distribution and the resulting dispersion in Q-values is known as  epistemic uncertainty. Essentially, this uncertainty is representative of the &#34;knowledge gap&#34; that results from limited data (i.e. limited observations). If we close this gap, then we are left with irreducible uncertainty (i.e. inherent randomness in the environment), which is known as  aleatoric uncertainty  .    One can argue that the line between epistemic and aleatoric uncertainty is rather blurry. The information that you feed into your model will determine how much uncertainty can be reduced. The more information you incorporate about the underlying mechanics of how the environment operates (i.e. more features), the less aleatoric uncertainty there will be.    It is important to note that inductive bias also plays an important role in determining what is categorized as epistemic vs aleatoric uncertainty for your model.     Important Note about Our Simplified Approach:    Since we only use $$\\sigma^2$$ to represent uncertainty, our approach does not distinguish between epistemic and aleatoric uncertainty. Given enough interactions, the agent will close the knowledge gap and $$\\sigma^2$$ will only represent aleatoric uncertainty. However, the agent still uses this uncertainty to explore. This is problematic because the whole point of exploration is to gain knowledge, which indicates that we should only explore using epistemic uncertainty.\n    Since we are modelling $$\\mu$$ and $$\\sigma^2$$, we begin by evaluating the conditions under which it is appropriate to assume Q-values are normally distributed.\n          Temporal Difference (TD) learning is the dominant paradigm used to learn value functions in reinforcement learning  . Below we will quickly summarize a TD learning algorithm for Q-values, which is called Q-Learning. First, we will write Q-values as follows  :\n   \\overbrace{Q_\\pi(s,a)}^\\text{current Q-value} = \\overbrace{R_s^a}^\\text{expected reward for (s,a)} + \\overbrace{\\gamma Q_\\pi(s^{\\prime},a^{\\prime})}^\\text{discounted Q-value at next timestep}   We will precisely define Q-value as the expected value of the total return from taking action $$a$$ in state $$s$$ and following policy $$\\pi$$ thereafter. The part about $$\\pi$$ is important because the agent&#39;s view on how good an action is depends on the actions it will take in subsequent states. We will discuss this further when analyzing our agent in the game environment.\n  For the Q-Learning algorithm, we sample a reward $$r$$ from the environment, and estimate the Q-value for the current state-action pair $$q(s,a)$$ and the next state-action pair $$q(s^{\\prime},a^{\\prime})$$   For Q-Learning, the next action $$a^{\\prime}$$ is the action with the largest Q-value in that state: $$\\max_{a^{\\prime}} q(s^{\\prime}, a^{\\prime})$$. . We can represent the sample as:\n   q(s,a) = r + \\gamma q{(s^\\prime,a^\\prime)}   The important thing to realize is that the left side of the equation is an estimate (current Q-value), and the right side of the equation is a combination of information gathered from the environment (the sampled reward) and another estimate (next Q-value). Since the right side of the equation contains more information about the true Q-value than the left side, we want to move the value of the left side closer to that of the right side. We accomplish this by minimizing the squared Temporal Difference error ($$\\delta^2_{TD}$$), where $$\\delta_{TD}$$ is defined as:\n   \\delta_{TD} = r + \\gamma q(s^\\prime,a^\\prime) - q(s,a)   The way we do this in a tabular environment, where $$\\alpha$$ is the learning rate, is with the following update rule:\n   q(s,a) \\leftarrow \\alpha(r_{t+1} + \\gamma q(s^\\prime,a^\\prime)) + (1 - \\alpha) q(s,a)   Updating in this manner is called bootstrapping because we are using one Q-value to update another Q-value.\n    We will use the Central Limit Theorem (CLT) as the foundation to understand when Q-values are normally distributed. Since Q-values are sample sums, then they should look more and more normally distributed as the sample size increases  . However, the first nuance that we will point out is that rewards must be sampled from distributions with finite variance. Thus, if rewards are sampled distributions such as Cauchy or L&amp;eacutevy, then we cannot assume Q-values are normally distributed.\n    Otherwise, Q-values are approximately normally distributed when the number of   effective timesteps $$\\widetilde{N}$$ is large   We can think of effective timesteps as the number of  full samples. . This metric is comprised of three factors:\n  $$\\xi$$ -  Sparsity: We define sparsity as the number of timesteps, on average, a reward of zero is deterministically received in between receiving non-zero rewards   In the Google Colab notebook, we ran simulations to show that $$\\xi$$ reduces the effective number of timesteps by $$\\frac{1}{\\xi + 1}$$:   Experiment in a  Notebook  . When sparsity is present, we lose samples (since they are always zero).  Therefore, as $$\\xi$$ increases, $$\\widetilde{N}$$ decreases.\n  $$\\gamma$$ -  Discount Factor: As $$\\gamma$$ gets smaller, the agent places more weight on immediate rewards relative to distant ones, which means that we cannot treat distant rewards as full samples. Therefore, as $$\\gamma$$ increases, so does $$\\widetilde{N}$$.\n    We will define the total return as the sum of discounted future rewards, where the discount factor $$\\gamma$$ can take on any value between $$0$$ (myopic) and $$1$$ (far-sighted). It helps to think of the resulting distribution $$G_t$$ as a weighted mixture distribution.\n   G_t = r_{t+1} + \\gamma r_{t+2} + \\gamma^2 r_{t+3} + ... + \\gamma^{N-1} r_{t+N}   When we set $$\\gamma \\lt 1$$, the mixture weights for the underlying distributions change from equal weight to time-weighted, where immediate timesteps have a higher weight. When $$\\gamma = 0$$, then this is equivalent to sampling from only one timestep and CLT would not hold. Use the slider to see the effect $$\\gamma$$ has on the mixture weights, and ultimately the mixture distribution.\n    $$\\gamma$$ =\n We combine the factors above to formally define the number of effective timesteps:   \\widetilde{N} = \\frac{1}{\\xi + 1}\\sum_{i=0}^{N-1}\\gamma^{i}   Below we visually demonstrate how each factor affects the normality of Q-values   We scale the Q-values by $$\\widetilde{N}$$ because otherwise the distribution of Q-values moves farther and farther to the right as the number of effective timesteps increases, which distorts the visual. :\n      Excessive sparsity, coupled with a low discount rate or low number of timesteps, will result in a Dirac delta function when all rewards the agent considers are 0.\n     Experiment in a  Notebook       There is a caveat in the visual analysis above for environments that have a terminal state. As the agent moves closer to the terminal state, then $$N$$ will progressively get smaller and Q-values will look less normally distributed. Nonetheless, it is reasonable to assume that Q-values are approximately normally distributed for most states in  dense reward environments if we use a large $$\\gamma$$.\n      We preface this section by noting that the following interpretations are only theoretically justified when we assume Q-values are normally distributed. We begin by defining the general update rule using Bayes&#39; Theorem:\n   \\text{posterior} \\propto \\text{likelihood} \\times \\text{prior}   When using Gaussians, we have an analytical solution for the posterior   A Gaussian is conjugate to itself, which simplifies the Bayesian updating process significantly; instead of computing integrals for the posterior, we have closed-form expressions  . :\n   \\mu = \\frac{\\sigma^2_1}{\\sigma^2_1 + \\sigma^2_2}\\mu_2 + \\frac{\\sigma^2_2}{\\sigma^2_1 + \\sigma^2_2}\\mu_1    \\sigma^2 = \\frac{\\sigma^2_1\\sigma^2_2}{\\sigma^2_1 + \\sigma^2_2}   By looking at a color-coded comparison, we can see that deterministic Q-Learning is equivalent to updating the mean using Bayes&#39; rule:\n   \\begin{aligned} &amp;\\color{green}\\mu&amp; &amp;\\color{black}=&amp; &amp;\\color{orange}\\frac{\\sigma^2_1}{\\sigma^2_1 + \\sigma^2_2}&amp; &amp;\\color{red}\\mu_2&amp; &amp;\\color{black}+&amp; &amp;\\color{purple}\\frac{\\sigma^2_2}{\\sigma^2_1 + \\sigma^2_2}&amp; &amp;\\color{blue}\\mu_1&amp; \\\\ \\\\ &amp;\\color{green}q(s,a)&amp; &amp;\\color{black}=&amp; &amp;\\color{orange}\\alpha&amp; &amp;\\color{red}(r_{t+1} + \\gamma q(s^\\prime,a^\\prime))&amp; &amp;\\color{black}+&amp; &amp;\\color{purple}(1 - \\alpha)&amp; &amp;\\color{blue}q(s,a)&amp; \\end{aligned}   What does this tell us about the deterministic implementation of Q-Learning, where $$\\alpha$$ is a hyperparameter? Since we don&#39;t model the variance of Q-values in deterministic Q-Learning, $$\\alpha$$ does not  explicitly depend on the certainty in Q-values. Instead, we can interpret $$\\alpha$$ as being the ratio of how  implicitly certain the agent is in its prior, $$q(s,a)$$, relative to the likelihood, $$r + \\gamma q(s^\\prime,a^\\prime)$$   Our measurement is $$r + \\gamma q(s^\\prime,a^\\prime)$$ since $$r$$ is information given to us directly from the environment. We represent our likelihood as the distribution over this measurement: $$\\mathcal{N}\\left(\\mu_{r + \\gamma q(s^\\prime,a^\\prime)}, \\sigma^2_{r + \\gamma q(s^\\prime,a^\\prime)}\\right)$$. . For deterministic Q-Learning, this ratio is generally constant and the uncertainty in $$q(s,a)$$ does not change as we get more information.\n  What happens &#34;under the hood&#34; if we keep $$\\alpha$$ constant? Right before the posterior from the previous timestep becomes the prior for the current timestep, we increase the variance by $$\\sigma^2_{\\text{prior}_{(t-1)}} * \\alpha$$   When $$\\alpha$$ is held constant, the variance of the prior implicitly undergoes the following transformation: $$\\sigma^2_{\\text{prior}_{(t)}} = \\sigma^2_{\\text{posterior}_{(t-1)}} + \\sigma^2_{\\text{prior}_{(t-1)}} * \\alpha$$.      Derivation   Let us first state that $$\\alpha = \\frac{\\sigma^2_\\text{prior}}{\\sigma^2_\\text{prior} + \\sigma^2_\\text{likelihood}}$$, which can be deduced from the color-coded comparison in the main text.   Given the update rule $$ \\sigma^2_{\\text{posterior}_{(t)}} = \\frac{\\sigma^2_{\\text{prior}_{(t)}} \\times \\sigma^2_{\\text{likelihood}_{(t)}}}{\\sigma^2_{\\text{prior}_{(t)}} + \\sigma^2_{\\text{likelihood}_{(t)}}} $$, we know that $$\\sigma^2_{\\text{posterior}_{(t)}} \\lt \\sigma^2_{\\text{prior}_{(t)}}$$   We also know that the update rule works in such a way that $$\\sigma^2_{\\text{prior}_{(t)}} = \\sigma^2_{\\text{posterior}_{(t-1)}}$$   Therefore, we can state that $$\\sigma^2_{\\text{prior}_{(t)}} \\lt \\sigma^2_{\\text{prior}_{(t-1)}}$$ if we assume $$\\sigma^2_\\text{likelihood}$$ does not change over time. This means that $$\\alpha_{(t)} \\neq \\alpha_{(t-1)}$$   In order to make $$\\alpha_{(t)} = \\alpha_{(t-1)}$$, we need to increase $$\\sigma^2_{\\text{posterior}_{(t-1)}}$$ before it becomes $$\\sigma^2_{\\text{prior}_{(t)}}$$. We solve for this amount below:    $$ \\begin{aligned} \\sigma^2_{\\text{posterior}_{(t-1)}} + X &amp;= \\sigma^2_{\\text{prior}_{(t-1)}} \\\\ \\frac{\\sigma^2_{\\text{prior}_{(t-1)}} \\times \\sigma^2_\\text{likelihood}}{\\sigma^2_{\\text{prior}_{(t-1)}} + \\sigma^2_{likelihood}} + X &amp;= \\sigma^2_{\\text{prior}_{(t-1)}} \\\\ X &amp;= \\sigma^2_{\\text{prior}_{(t-1)}} \\left(1 - \\frac{\\sigma^2_\\text{likelihood}}{\\sigma^2_{\\text{prior}_{(t-1)}} + \\sigma^2_\\text{likelihood}} \\right) \\\\ X &amp;= \\sigma^2_{\\text{prior}_{(t-1)}} * \\alpha \\end{aligned} $$ . This keeps the uncertainty ratio between the likelihood and the prior constant   An alternative interpretation is that the variance for the prior and likelihood are both decreasing in such a way that keeps the ratio between them constant. However, we do not think it is reasonable to assume that the variance of the sampled reward would constantly decrease as the agent becomes more certain in its prior. . Below we visualize this interpretation by comparing the &#34;regular&#34; Bayesian update to the constant $$\\alpha$$ update:\n  For each update using Bayes&#39; rule, we use the most recently calculated posterior as our new prior.\n        Starting $$\\alpha$$ =       Now that we know what happens under the hood when we hold $$\\alpha$$ constant, it is worth noting that not everyone holds it constant. In practice, researchers also decay $$\\alpha$$ for the agent to rely less on new information (implicitly becoming more certain) for each subsequent timestep  . Although deterministic Q-Learning largely depends on heuristics to create a decay schedule, Bayesian Q-Learning has it built in:\n   \\alpha = \\frac{\\sigma^2_{q(s,a)}}{\\sigma^2_{q(s,a)} + \\sigma^2_{r + \\gamma q(s^\\prime,a^\\prime)}}   As our agent updates its belief about the world it will naturally create a decay schedule that corresponds to how certain it is in its prior. As uncertainty decreases, so does the learning rate. Note that the learning rate is bespoke for each state-action pair because it is possible to become more confident in specific state-action pairs faster than others   Some reasons include visiting those state-action pairs more often than others, or simply because they are inherently less noisy. .\n          There are many ways we can use a distribution over Q-values to explore as an alternative to the $$\\varepsilon$$-greedy approach. Below we outline a few, and evaluate each in the  final section of this article.\n  Epsilon-Greedy: We set $$\\varepsilon$$ as a hyperparameter. It represents the probability of selecting a random action (i.e. deviating from selecting the action with the highest Q-value).\n  Bayes-UCB: We select the actions with the largest right tails, using some confidence interval (we use 95% in our analysis)   Since we model Q-value distributions as Gaussians, to calculate the 95% confidence interval we use $$\\mu_{q(s,a)} + \\sigma_{q(s,a)} \\times 2$$.   . Essentially, we are selecting the action that has the highest potential Q-value   There is also a deterministic implementation of Upper Confidence Bound, where the bonus is a function of the number of timesteps that have passed as well as the number of times the agent has visited a specific state-action pair  . .\n  Q-Value Sampling: We sample from the Q-value distributions and choose the action with the largest sampled Q-value. This form of exploration is known as Q-value sampling in the case of Q-Learning   and Thompson sampling in the general case  .\n  Myopic-VPI: We quantify a myopic view of policy improvement with  value of perfect information (VPI)   $$\\text{VPI}(s,a) = \\int^\\infty_{-\\infty}\\text{Gain}_{s,a}(x)Pr(\\mu_{s,a} = x)dx$$, which can be intuitively described as the expected improvement over the current best action. . It is &#34;myopic&#34; because it only considers the improvement for the current timestep. We select the action that maximizes $$\\mu_{s,a} + \\text{VPI}(s,a)$$.\n              By interacting with the visual above, one might wonder if we can infer what the &#34;exploration parameter&#34; is for the other stochastic policy, Q-value sampling, which does not explicitly define $$\\varepsilon$$. We explore this question in the next section.\n      In contrast to deterministic Q-Learning, where we explicitly define $$\\varepsilon$$ as the exploration hyperparameter, when we use Q-value sampling there is an implicit epsilon $$\\hat{\\varepsilon}$$. Before defining $$\\hat{\\varepsilon}$$, we will get some notation out of the way. Let&#39;s define two probability distributions, $$x_1 \\sim \\mathcal{N}(\\mu_1, \\sigma^2_1)$$ and $$x_2 \\sim \\mathcal{N}(\\mu_2, \\sigma^2_2)$$. To calculate the probability that we sample a value $$x_1 \\gt x_2$$, we can use the following equation, where $$\\Phi$$ represents the cumulative distribution function  :\n   \\begin{aligned} &amp;\\mu = \\mu_1 - \\mu_2 \\\\ &amp;\\sigma = \\sqrt{\\sigma^2_1 + \\sigma^2_2} \\\\ &amp;Pr(x_1 \\gt x_2) = 1 - \\Phi\\left(\\frac{-\\mu}{\\sigma}\\right) \\end{aligned}   With this equation, we can now calculate the probability of sampling a larger Q-value for a reference action $$\\hat{a}$$ relative to another action. If we do this for each action that an agent can make (excluding the reference action) and calculate the joint probability, then we get the probability that the sampled Q-value for $$\\hat{a}$$ is larger than all other actions   In a given state, the Q-value for one action should be independent of the other Q-values in that state. This is because you can only take one action at a time, and we generally apply Q-learning to MDPs, where the Markov property holds (i.e. history does not matter). Thus, to calculate the joint probability, it is simply a multiplication of the marginal probabilities. :\n   \\bar{P}_{\\hat{a}} = \\prod_{a}^{\\mathcal{A}}Pr(x_{\\hat{a}} \\gt x_a), \\quad \\text{for} \\,\\, a \\neq \\hat{a}   We then find the action with the largest $$\\bar{P}_{a}$$ because that is the action that we would select if we were not exploring   Since we&#39;re using normal distributions, $$\\text{arg}\\max{\\bar{P}_{a}}$$ happens to correspond to the Q-value with the largest mean. .\n   a_{max} = \\text{arg}\\max{\\bar{P}_{a}}, \\quad \\forall \\,\\, a \\in \\mathcal{A}   Then, if we sum up the probabilities of sampling the largest Q-value, for all actions except the exploitation action, then we get the probability that we will explore:\n   \\hat{\\varepsilon} = \\frac{1}{C}\\sum_{a}^{\\mathcal{A}}\\bar{P}_{a}, \\quad \\text{for} \\,\\, a \\neq a_{max}           We will now put the theory into practice! By inspecting the learning process, we can see that there is a key challenge in applying Bayes&#39; rule to Q-Learning. Specifically, we focus on diverging Q-value distributions, which can cause agents to become confident in suboptimal policies.\n      As researchers in the financial markets, we designed the environment after a sub-class of problems that share similar characteristics. These pr\n......", "posttime": "2020-10-29 10:37:07", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8d1d\u53f6\u65af,perspective,sigma", "title": "\u8d1d\u53f6\u65af\u89c6\u89d2\u4e0b\u7684Q-\u5b66\u4e60", "title_en": "A Bayesian Perspective on Q-Learning", "transed": 1, "url": "https://brandinho.github.io/bayesian-perspective-q-learning/", "via": "", "real_tags": ["\u8d1d\u53f6\u65af", "sigma"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031895, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u5e76\u4e0d\u7ecf\u5e38\u6709\u673a\u4f1a\u5728\u9ad8\u9886\u6bdb\u8863\u4e0a\u53d1\u8868\u8fd9\u6837\u7684\u6f14\u8bb2\uff0c\u6240\u4ee5\u8981\u7cfb\u597d\u5b89\u5168\u5e26\u3002\u6570\u4e0d\u6e05\u7684\u51e0\u4e2a\u6708\u6765\uff0c\u6211\u4eec\u4e00\u76f4\u5728\u6084\u6084\u5730\u5de5\u4f5c\uff0c\u4ee5\u6572\u5b9a\u7ec6\u8282\u3002\u4eca\u5929\uff0c\u6211\u975e\u5e38\u5174\u594b\u5730\u5411\u5927\u5bb6\u4ecb\u7ecdSparkFun\u00e9la Carte\uff0c\u6216ALC\uff0c\u8fd9\u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u5bb6\u4e0d\u9700\u8981EE\u5b66\u4f4d\u7684\u7535\u8def\u677f\u6784\u5efa\u670d\u52a1\u3002\n\u6211\u548c\u4e0b\u4e00\u4e2a\u4e66\u5446\u5b50\u4e00\u6837\u559c\u6b22\u710a\u63a5\uff0c\u4f46\u6709\u65f6\u5236\u9020\u4e00\u4e2a\u8bbe\u5907\u7684\u500d\u6570\u53ef\u80fd\u771f\u7684\u5f88\u75db\u82e6\u3002\u8fd9\u5c31\u662fALC\u7684\u7528\u6b66\u4e4b\u5730\u3002\nALC\u662f\u4e3a\u61c2\u5f97\u65f6\u95f4\u4ef7\u503c\u7684\u4e13\u4e1a\u4eba\u58eb\u63d0\u4f9b\u7684\u5236\u9020\u670d\u52a1\u3002\u4f60\u6709\u8fc7\u51e0\u6b21\uff1a\n\u5207\u65ad\u548c\u5265\u79bb\u7535\u7ebf\uff0c\u70b9\u5bf9\u70b9\u710a\u63a5\u63a5\u7ebf\u677f\uff0c\u628a\u6240\u6709\u4e1c\u897f\u90fd\u56fa\u5b9a\u5728\u4f17\u6240\u5468\u77e5\u7684\u9762\u5305\u677f\u4e0a\uff0c\u56db\u4e2a\u5c0f\u65f6\u540e\uff0c\u4f60\u5c31\u4f1a\u610f\u8bc6\u5230\u4f60\u53ea\u6709\u4e94\u4e2a\u8bbe\u5907\u8981\u505a\u4e86\uff1f\n\u53d1\u73b0\u81ea\u5df1\u6709\u4e00\u4e2a\u5f88\u68d2\u7684\u60f3\u6cd5\uff0c\u4f46\u4e0d\u786e\u5b9a\u5982\u4f55\u5c06\u5176\u4ed8\u8bf8\u5b9e\u8df5\uff1f\n\u5982\u679c\u60a8\u53ef\u4ee5\u7528SparkFun\u63a5\u7ebf\u677f\u6784\u5efa\u60a8\u7684\u60f3\u6cd5\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5728\u51e0\u5468\u5185\u5c06\u4e00\u5757\u5b8c\u5168\u7ec4\u88c5\u597d\u7684\u5b9a\u5236\u63a5\u7ebf\u677f\u9001\u8d27\u4e0a\u95e8\u3002ALC\u662f\u4e00\u4e2a\u70b9\u51fb\u5f0f\u5de5\u5177\uff0c\u53ef\u4ee5\u5c06\u4e00\u7cfb\u5217\u6280\u672f\u653e\u5230\u79d1\u7f57\u62c9\u591a\u5dde\u8fd9\u91cc\u7684\u4e00\u5757\u5b8c\u5168\u7ec4\u88c5\u7684\u7535\u8def\u677f\u4e0a\u3002\u5728\u5927\u65e5\u5b50\u4e4b\u524d\u4e0d\u518d\u6709\u6df1\u591c\u710a\u63a5\u4f1a\u8bae\uff1b\u5229\u7528\u6211\u4eec\u7684\u8bbe\u8ba1\u3001\u6211\u4eec\u7684\u7535\u8def\u6280\u672f\u548c\u6211\u4eec\u7684\u673a\u5668\uff0c\u4e3a\u60a8\u91cf\u8eab\u5b9a\u505a\u4e13\u4e1a\u7684\u8bbe\u5907\u3002\n\uff1fLa Carte\u662f\u57fa\u4e8e\u5757\u7684\u3002ALC\u5757\u5305\u542b\u8981\u6dfb\u52a0\u5230\u7535\u8def\u677f\u7684\u6a21\u5757\uff0c\u4ee5\u53ca\u6709\u5173\u7f51\u7edc\u3001\u7c7b\u3001\u8fde\u63a5\u9650\u5236\u548c\u5176\u4ed6\u7535\u6c14\u8bbe\u8ba1\u9700\u6c42\u548c\u7ea6\u675f\u7684\u4fe1\u606f\u3002\u901a\u8fc7\u5305\u542b\u6240\u6709\u8fd9\u4e9b\u4fe1\u606f\uff0cALC\u80fd\u591f\u6d88\u9664\u7528\u6237\u5bf9\u901a\u5e38\u53ea\u6709\u5927\u91cf\u8bd5\u9a8c\u548c\u9519\u8bef\u7684\u6280\u672f\u6709\u6df1\u5165\u4e86\u89e3\u7684\u9700\u8981\u3002SparkFun\u5728\u8fd9\u65b9\u9762\u5df2\u7ecf\u6709\u8fd120\u5e74\u7684\u5386\u53f2\u4e86\uff1b\u6211\u4eec\u76f4\u63a5\u77e5\u9053\u5728\u4e00\u5757\u5c0fIC\u4e0a\u641e\u7838PCB\u6216\u8df3\u7ebf\u662f\u4ec0\u4e48\u611f\u89c9\u3002\u8ba9\u6211\u4eec\u6d88\u9664\u8fd9\u79cd\u632b\u6298\u611f\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u56de\u5230\u60a8\u66f4\u5927\u7684\u9879\u76ee\u4e0a\u6765\u4e86\u3002\n\u8981\u4f7f\u7528ALC\u521b\u5efa\u7535\u8def\u677f\uff0c\u53ea\u9700\u5728\u60a8\u7684\u8bbe\u8ba1\u4e2d\u9009\u62e9\u6240\u9700\u7684\u5404\u79cd\u6a21\u5757\uff0c\u7cfb\u7edf\u5c31\u4f1a\u6839\u636e\u60a8\u7684\u8981\u6c42\u8ba1\u7b97\u51fa\u5176\u4f59\u7684\u6a21\u5757\uff0c\u4ece\u800c\u786e\u4fdd\u7535\u8def\u677f\u5177\u6709\u826f\u597d\u7684\u7535\u5b66\u6027\u80fd\u3002\n\u9009\u62e9\u60a8\u7684\u7ec4\u4ef6\u3002\u6211\u4eec\u4eca\u5929\u670985\u4e2a\u4f20\u611f\u5668\u3001\u6267\u884c\u5668\u3001\u65e0\u7ebf\u7535\u3001\u5f00\u5173\u548cLED\u53ef\u4f9b\u4f7f\u7528\uff0c\u5e76\u8ba1\u5212\u5f88\u5feb\u63a8\u51fa\u6210\u5806\u7684\u65b0\u6a21\u5757\u3002ALC\u5c06\u786e\u4fdd\u60a8\u9009\u62e9\u7684\u6240\u6709\u6a21\u5757\u90fd\u4e0e\u60a8\u5f53\u524d\u7684\u8bbe\u8ba1\u517c\u5bb9\u3002\n\u6dfb\u52a0\u8fde\u63a5\u5668\u3002\u53ef\u4ee5\u6dfb\u52a0\u7ecf\u5178\u7684PTH\u63a5\u5934\u3001\u9501\u5b58\u7aef\u5b50\u6216\u4efb\u610f\u6570\u91cf\u7684\u7aef\u5b50\uff0c\u4f7f\u60a8\u7684\u8bbe\u8ba1\u53d8\u5f97\u975e\u5e38\u7075\u6d3b\u3002\n\u9009\u62e9\u60a8\u5c06\u5982\u4f55\u4e3a\u60a8\u7684\u7535\u8def\u677f\u4f9b\u7535\u3002\u5899\u9762\u3001\u592a\u9633\u80fd\u3001\u7535\u6c60\uff0c\u751a\u81f3\u6c7d\u8f66\u7535\u6e90\u90fd\u6709\u4f9b\u5e94\u3002\u8fd9\u4f1a\u544a\u8bc9\u7cfb\u7edf\u5728\u9047\u5230\u7535\u6e90\u9650\u5236\u4e4b\u524d\uff0c\u60a8\u53ef\u4ee5\u5411\u4e3b\u677f\u6dfb\u52a0\u591a\u5c11\u7ec4\u4ef6\u3002\n\u5c31\u8fd9\u4e48\u7b80\u5355\uff0c\u611f\u89c9\u66f4\u50cf\u662f\u9009\u8d2d\u96f6\u4ef6\uff0c\u800c\u4e0d\u662f\u8bbe\u8ba1\u7535\u8def\u677f\u3002\n\u8bbe\u8ba1\u8d39-\u6240\u6709\u65b0\u8ba2\u5355\u90fd\u8981\u6536\u53d6949\u7f8e\u5143\u7684\u8bbe\u8ba1\u8d39\u3002\u5bf9\u4e8e\u4f01\u4e1a\u6765\u8bf4\uff0c\u8fd9\u6bd4\u540c\u7b49\u7684DIY\u7535\u8def\u677f\u8bbe\u8ba1\u5e08\u8981\u4f4e\u5f97\u591a\uff0c\u7edd\u5bf9\u6bd4\u96c7\u4f63\u627f\u5305\u5546\u6216\u5458\u5de5\u4e3a\u4f60\u8bbe\u8ba1\u7535\u8def\u677f\u7684\u6210\u672c\u8981\u4f4e\u5f97\u591a\uff0c\u800c\u4e14\u663e\u7136\u6bd4\u8bd5\u56fe\u81ea\u5df1\u8bbe\u8ba1\u7535\u8def\u677f\u66f4\u6709\u6548\u7387\u3002\u6211\u4eec\u4e00\u76f4\u5728\u7528\u5b83\u6765\u8fd0\u884c\u65b0\u7684\u4ea7\u54c1\u521b\u610f\uff0c\u4ee4\u4eba\u60ca\u8bb6\u7684\u662f\uff0c\u5b83\u4e3a\u6211\u4eec\u8282\u7701\u4e86\u5927\u91cf\u7684\u539f\u7406\u56fe\u548c\u786c\u4ef6\u9519\u8bef\u3002\n\u5982\u679c\u4f60\u53d1\u73b0\u81ea\u5df1\u5728\u60f3\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u7b80\u5355\u7684\u4e1c\u897f\u8981\u82b1\u8fd9\u4e48\u591a\u94b1(\u6bd5\u7adf\u5b83\u53ea\u662f\u5757\u800c\u5df2\uff01)\u3002\u90a3\u6211\u4eec\u5c31\u5b8c\u6210\u6211\u4eec\u7684\u4efb\u52a1\u4e86\uff01\u8bbe\u8ba1\u6700\u597d\u7684\u754c\u9762\u662f\u90a3\u4e9b\u60a8\u6ca1\u6709\u6ce8\u610f\u5230\u7684\u754c\u9762\u3002\u6211\u4eec\u82b1\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u5c06\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u8fc7\u7a0b\u6d53\u7f29\u6210\u5c3d\u53ef\u80fd\u6700\u4f73\u7684\u7528\u6237\u4f53\u9a8c\u3002\n\u8bbe\u8ba1\u6587\u4ef6-\u6240\u6709ALC\u8ba2\u5355\u90fd\u5305\u62ecGerber\u6587\u4ef6\u548c\u539f\u7406\u56fePDF\u7684\u53ef\u4e0b\u8f7d\u7248\u672c\u3002\u5982\u679c\u60a8\u9700\u8981Eagle\u6e90\u6587\u4ef6(BRD\u548cSCH)\u6765\u7f16\u8f91\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u5355\u72ec\u8d2d\u4e70\uff0c\u4ef7\u683c\u4e3a150\u7f8e\u5143\uff1b\u8fd9\u4e9b\u6587\u4ef6\u5df2\u53d1\u9001\u5e76\u51c6\u5907\u597d\u5236\u9020\u3002\n\u5c31\u8fd9\u6837\u3002\u8fd9\u662f\u6ca1\u6709\u5305\u62ec\u5728\u6bcf\u80a1\u8463\u4e8b\u4f1a\u4ef7\u683c\u4e2d\u7684\u4ec5\u6709\u7684\u4e24\u9879\u8d39\u7528\u3002\n\u6211\u4eec\u6536\u5230\u7684\u5173\u4e8eALC\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u662f\uff1a\u201c\u4e3a\u4ec0\u4e48\u6211\u4e0d\u80fd\u79fb\u52a8\u79ef\u6728\uff1f\u201d\u867d\u7136\u6211\u4eec\u7edd\u5bf9\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4e00\u79cd\u5de5\u5177\uff0c\u8ba9\u4f60\u53ef\u4ee5\u6df1\u5165\u5230MIL\uff0c\u4f46\u5df2\u7ecf\u6709\u5f88\u591a\u5de5\u5177\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff1aUpverter\u3001KiCad\u3001Eagle\u3001Altium\u3001Orcad\u3001Pads\u7b49\u7b49\u3002\u76ee\u524d\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u754c\u9762\u7684\u91cd\u70b9\u653e\u5728\u5c3d\u53ef\u80fd\u7b80\u5355\u7684\u4f7f\u7528\u4e0a\u3002\u5c06\u5757\u653e\u7f6e\u5728\u7535\u8def\u677f\u4e0a\u65f6\uff0cALC\u4f1a\u8003\u8651\u8be5\u5757\u7684\u9700\u6c42\u4ee5\u53ca\u7535\u8def\u677f\u4e0a\u7684\u6240\u6709\u5176\u4ed6\u5757\uff0c\u4ee5\u786e\u5b9a\u5176\u6700\u4f73\u4f4d\u7f6e\u3002\u8fd9\u79cd\u4f18\u5316\u4f7fALC\u80fd\u591f\u4e3a\u60a8\u5904\u7406\u6240\u6709\u75d5\u8ff9\u548c\u5176\u4ed6\u7535\u6c14\u9700\u6c42\u3002\nSparkFun\u4e0d\u662f\u53e6\u4e00\u5bb6\u5408\u540c\u5236\u9020\u5546-\u6211\u4eec\u662f\u4e16\u754c\u4e0a\u4ec5\u6709\u7684\u51e0\u5bb6\u62e5\u6709\u6700\u65b0\u4f20\u611f\u5668\u3001\u96be\u4ee5\u627e\u5230\u7684IC\u3001\u96c6\u6210\u5b83\u4eec\u7684\u6280\u672f\u4ee5\u53ca\u5c06\u5b83\u4eec\u710a\u63a5\u5728\u4e00\u8d77\u7684\u5de5\u5177\u7684\u516c\u53f8\u4e4b\u4e00\u3002\u8fd9\u5c31\u662f\u6211\u4eec\u6bcf\u5929\u90fd\u5728\u505a\u7684\u4e8b\uff01\u73b0\u5728\u6211\u4eec\u60f3\u8ba9\u60a8\u4eab\u53d7\u6240\u6709\u8fd9\u4e9b\u77e5\u8bc6\u7684\u597d\u5904\u3002\u6240\u4ee5\u4e0b\u6b21\u4f60\u60f3\uff0c\u201c\u6211\u600e\u4e48\u624d\u80fd\u627e\u5230\u4eba\u6765\u8bbe\u8ba1\u90a3\u5757\u7535\u8def\u677f\u5462\uff1f\u201d--\u60f3\u4e00\u60f3\u201cLa Carte\u201d\u5427\u3002\n\u4eceALC\u4e3b\u9875\u5f00\u59cb\uff0c\u4f46\u4e0d\u8981\u5fd8\u8bb0\u70b9\u51fb\u6211\u4eec\u7684\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u3002\u6211\u4eec\u5df2\u7ecf\u8986\u76d6\u4e86\u5c3d\u53ef\u80fd\u591a\u7684\u57fa\u5730\uff0c\u4f46\u662f\u5982\u679c\u60a8\u8fd8\u6709\u4ec0\u4e48\u95ee\u9898\uff0c\u8bf7\u5728ALC\u8bba\u575b\u4e0a\u544a\u8bc9\u6211\u4eec\u3002\n\u6211\u4eec\u5f88\u5174\u594b\uff0c\u770b\u7740\u4eba\u4eec\u521b\u9020\u7684\u4e1c\u897f\u4e5f\u5f88\u6709\u8da3\u3002\u4f46\u8fd9\u53ea\u662f\u4e2a\u5f00\u59cb\uff01\u8bf7\u4eca\u5929\u5f00\u5de5\uff0c\u4f46\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6708\u91cc\u518d\u6765\u62a5\u5230\u3002\u6211\u4eec\u6709\u66f4\u591a\u7684\u4e1c\u897f\u8981\u5206\u4eab\u3002\n\u4e3a\u4e86\u9f13\u52b1\u60a8\u5c1d\u8bd5ALC\uff0c\u6211\u4eec\u5728\u665a\u4e0a11\u70b959\u5206\u4e4b\u524d\u5bf9\u6240\u6709\u65b0\u8ba2\u5355\u63d0\u4f9b\u8bbe\u8ba1\u8d3950%\u7684\u6298\u6263\u30022020\u5e7412\u670831\u65e5\uff0c\u4fc3\u9500\u4ee3\u7801\uff1aALCSPARKFUN50", "note_en": "It\u2019s not often I get to give &#34;turtleneck&#34; sorts of talks so buckle up. For too many months to count, we\u2019ve been working quietly to iron out the details. Today, it\u2019s with great excitement that I tell you about  SparkFun \u00c0 La Carte, or ALC, the world\u2019s first board building service  without the need for an EE degree.\n  I like soldering just as much as the next nerd but there are times when it can be really painful to build multiples of a device. That&#39;s where ALC comes in...\n ALC is a manufacturing service for professionals who understand the value of their time. How many times have you:\n Cut and stripped wires, point-to-point soldered breakout boards, anchored everything to the proverbial breadboard, and after four hours sat back to realize you only had  five more devices to build?\n Found yourself with a great idea, but unsure of how to bring it to life?\n    If you can build your idea with SparkFun breakout boards, you can have a fully assembled, custom board delivered to your door in a few weeks. ALC is the point-and-click tool to get a bunch of technologies onto a single board, fully assembled, right here in Colorado. No more late night soldering sessions before the big day; leverage our designs, our circuit know-how, and our machines to have a professional device made just for you.\n  \u00c0 La Carte is based on blocks. An ALC block contains the module to be added to the board along with information about nets, classes, connection restrictions, and other electrical design needs and constraints. By including all of this information, ALC is able to remove the need for users to have intimate knowledge of a technology that usually only comes with lots of trial and error. SparkFun has been doing this for nearly 20 years; we know firsthand what it&#39;s like to mess up a PCB or fight jumpers on a small IC. Let us remove that frustration so that you can get back to your larger project.\n To create a board with ALC, simply select the various blocks you need on your design and the system figures out the rest as you go, ensuring an electrically sound board.\n  Select your components. We have 85 sensors, actuators, radios, switches and LEDs available today, and piles of new blocks planned to release soon. ALC will ensure all blocks chosen are compatible with your current design as you go.\n Add connectors. The classic PTH header, a latching terminal or any number of terminals can be added to make your design really flexible.\n Pick how you\u2019re going to power your board. Wall, solar, battery, even car power are all available. This tells the system how many components you can add to your board before you may run into power constraints.\n It\u2019s as simple as that, and feels more like shopping for parts than designing a board.\n        Design fee - There\u2019s a $949 design fee on all new orders. For businesses, this is much lower than you\u2019ll find with comparable do-it-yourself board designers, definitely less expensive than hiring a contractor or employee to design the board for you, and clearly more efficient than trying to do it on your own. We\u2019ve been using it to run new product ideas and it\u2019s amazing how much it saves us in schematic and hardware mistakes.\n If you find yourself wondering why it costs so much for something that seems so simple (it\u2019s just blocks, after all!) then we\u2019ve done our job! The best designed interfaces are the ones you don\u2019t notice. We\u2019ve spent a tremendous amount of time boiling down a very complex process into the best user experience possible.\n Design files - All ALC orders include a downloadable version of the Gerber files and PDF of the schematic. If you need the Eagle source files (BRD and SCH) to edit the design, they can be purchased separately for $150; these files are routed and ready for manufacture.\n That\u2019s it. Those are the only two fees not included in the per board price.\n  The number one question we\u2019ve received about ALC is: \u201cWhy can\u2019t I move the blocks around?\u201d While we could absolutely design a tool that allows you to poke and prod down to the mil, there are already piles of tools that do that: Upverter, KiCad, EAGLE, Altium, Orcad, Pads, it goes on. For now, we want to focus the interface on being as simple to use as possible. When a block is placed on the board, ALC takes into account the needs of that block, as well as all the other blocks on the board, to determine its optimal placement. This optimization is what allows ALC to take care of all the traces and other electrical needs for you.\n  SparkFun is not another contract manufacturer - we\u2019re one of the only companies in the world that has the latest sensors, hard-to-find ICs, the know-how to integrate them, and the tools to solder it all together. It\u2019s  what we do, every day! Now we want to enable you to enjoy the benefits of all that knowledge. So the next time you think, \u201cHow am I going find someone to design that board?\u201d - think \u00c0 La Carte instead.\n  Start with the main  ALC page but don\u2019t forget to hit up our  FAQs. We\u2019ve covered as many bases as possible but if there\u2019s something you still have questions about, please  let us know in the ALC forum.\n We\u2019re excited and it\u2019s been a lot of fun watching what people create. But this is just the beginning! Please kick the tires today but check back in over the coming months. We\u2019ve got a lot more to share.\n To encourage you to give ALC a try, we\u2019re offering  50% off the design fee on all new orders through 11:59 p.m. on 12/31/2020 with promocode:  ALCSPARKFUN50", "posttime": "2020-10-29 10:36:41", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "carte,la,alc", "title": "SparkFun\uff1fLa Carte(\u70b9\u83dc)", "title_en": "SparkFun \u00c0 La Carte", "transed": 1, "url": "https://www.sparkfun.com/news/3422", "via": "", "real_tags": ["carte", "la", "alc"]}, {"category": "", "categoryclass": "", "imagename": "83c1b2577f10726d1f2c99bb39edbb99.jpg", "infoid": 1031894, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u52a0\u62ff\u5927\u65b0\u65af\u79d1\u820d\u7701\u653f\u5e9c\u53d1\u7ed9\u5c45\u6c11\u7684\u4e00\u5c01\u4fe1\uff0c\u8b66\u544a\u8be5\u7701\u6709\u4e00\u7fa4\u72fc\u7fa4\u900d\u9065\u6cd5\u5916\uff0c\u8fd9\u5c01\u4fe1\u662f\u52a0\u62ff\u5927\u519b\u65b9\u4eba\u5458\u4f2a\u9020\u7684\uff0c\u4f5c\u4e3a\u4e00\u9879\u8131\u8f68\u7684\u5ba3\u4f20\u8bad\u7ec3\u4efb\u52a1\u7684\u4e00\u90e8\u5206\u3002\n\u8fd9\u5c01\u4fe1\u544a\u8bc9\u5c45\u6c11\u8981\u8b66\u60d5\u7701\u7ea7\u548c\u8054\u90a6\u653f\u5e9c\u91cd\u65b0\u5f15\u5165\u8be5\u5730\u533a\u7684\u72fc\uff0c\u5e76\u8b66\u544a\u8fd9\u4e9b\u52a8\u7269\u73b0\u5728\u5b89\u7eb3\u6ce2\u5229\u65af\u5c71\u8c37\u6f2b\u6b65\u3002\u8fd9\u5c01\u4fe1\u540e\u6765\u516c\u4e4b\u4e8e\u4f17\uff0c\u5728\u5c45\u6c11\u4e2d\u5f15\u53d1\u4e86\u62c5\u5fe7\u548c\u8d28\u7591\uff0c\u4f46\u540e\u6765\u88ab\u65b0\u65af\u79d1\u820d\u7701\u653f\u5e9c\u8d34\u4e0a\u4e86\u201c\u5047\u201d\u7684\u6807\u7b7e\uff0c\u56e0\u4e3a\u653f\u5e9c\u5e76\u4e0d\u77e5\u9053\u519b\u65b9\u662f\u8fd9\u8d77\u9a97\u5c40\u7684\u5e55\u540e\u9ed1\u624b\u3002\n\u52a0\u62ff\u5927\u519b\u961f\u5411\u672c\u62a5\u8bc1\u5b9e\uff0c\u8bad\u7ec3\u8fd8\u5305\u62ec\u4f7f\u7528\u626c\u58f0\u5668\u53d1\u51fa\u72fc\u7684\u58f0\u97f3\u3002\n\u8fd9\u5c01\u5047\u4fe1\u662f\u519b\u65b9\u6b63\u5728\u6d4b\u8bd5\u7684\u65b0\u6280\u80fd\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u519b\u65b9\u6b63\u5728\u78e8\u7ec3\u5728\u56fd\u5185\u5916\u53d1\u8d77\u5ba3\u4f20\u4efb\u52a1\u7684\u4e13\u4e1a\u77e5\u8bc6\u3002\u8fd9\u5c01\u4fe1\u662f\u7531\u9884\u5907\u5f79\u90e8\u961f\u54c8\u5229\u6cd5\u514b\u65af\u6b65\u67aa(Halifax Rifles)\u7684\u4fe1\u606f\u6218\u4e13\u5bb6\u5f00\u53d1\u7684\u3002\n\u4ed6\u4eec\u4e0d\u4ec5\u4f2a\u9020\u4e86\u65b0\u65af\u79d1\u820d\u7701\u56fd\u571f\u6797\u4e1a\u90e8\u91ce\u751f\u52a8\u7269\u90e8\u7684\u6807\u5fd7\uff0c\u8fd8\u5c06\u8fd9\u5c01\u4fe1\u5f52\u548e\u4e8e\u4e00\u540d\u771f\u6b63\u7684\u65b0\u65af\u79d1\u820d\u7701\u653f\u5e9c\u96c7\u5458\uff0c\u5c3d\u7ba1\u4ed6\u4eec\u6ca1\u6709\u8fd9\u6837\u505a\u7684\u8bb8\u53ef\u3002*\u636e\u672c\u62a5\u8ffd\u8e2a\uff0c\u4fe1\u4e0a\u7684\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u662f\u52a0\u62ff\u5927\u73af\u5883\u90e8\u4e00\u540d\u5458\u5de5\u7684\u5de5\u4f5c\u53f7\u7801\uff0c\u8fd9\u540d\u5458\u5de5\u4f3c\u4e4e\u4e5f\u662f\u52a0\u62ff\u5927\u519b\u961f\u7684\u9884\u5907\u5f79\u4eba\u5458\u3002\u5982\u679c\u5c45\u6c11\u4eec\u62c5\u5fc3\u72fc\u7684\u8bdd\uff0c\u4ed6\u4eec\u4f1a\u6253\u8fd9\u4e2a\u53f7\u7801\u3002\n\u52a0\u62ff\u5927\u519b\u961f\u4e0a\u5468\u5411\u65b0\u65af\u79d1\u820d\u7701\u653f\u5e9c\u900f\u9732\u4e86\u8fd9\u5c01\u5047\u4fe1\u80cc\u540e\u7684\u89d2\u8272\uff0c\u7136\u540e\u5728\u5468\u672b\u5411\u5f53\u5730\u65b0\u95fb\u5a92\u4f53\u62ab\u9732\u4e86\u8fd9\u5c01\u5047\u4fe1\u80cc\u540e\u7684\u89d2\u8272\u3002\u5a92\u4f53\u62a5\u9053\u8bf4\uff0c\u8fd9\u5c01\u4fe1\u662f\u519b\u65b9\u5de5\u4f5c\u4eba\u5458\u5199\u7684\uff0c\u4f46\u4e0d\u77e5\u9053\u539f\u56e0\u3002\n\u4e13\u95e8\u7814\u7a76\u519b\u4e8b\u5ba3\u4f20\u7684\u7f8e\u56fd\u5df4\u5fb7\u5b66\u9662\u6559\u6388Emma Briant\u79f0\uff0c\u52a0\u62ff\u5927\u519b\u961f\u7684\u6240\u4f5c\u6240\u4e3a\u4e25\u91cd\u8fdd\u53cd\u4e86\u9053\u5fb7\u89c4\u8303.\u201c\u8fd9\u592a\u8fc7\u5206\u4e86\uff0c\u201dBriant\u8bf4.\u3002\u201c\u5f53\u4f60\u5f00\u59cb\u7528\u865a\u5047\u4fe1\u606f\u7784\u51c6\u81ea\u5df1\u7684\u516c\u4f17\uff0c\u5e76\u8bd5\u56fe\u64cd\u7eb5\u4ed6\u4eec\u65f6\uff0c\u8fd9\u662f\u4e00\u6761\u975e\u5e38\u5371\u9669\u7684\u9053\u8def\u3002\u201d\n\u5e03\u8d56\u6069\u7279\u8bf4\uff0c\u8fd9\u4e00\u6b3a\u9a97\u4e0e\u72fc\u65e0\u5173\uff1b\u8fd9\u5f88\u53ef\u80fd\u662f\u4e3a\u4e86\u6d4b\u8bd5\u519b\u65b9\u8bd5\u56fe\u7528\u865a\u5047\u4fe1\u606f\u64cd\u7eb5\u4eba\u53e3\u7684\u6280\u80fd\u3002\u5979\u8865\u5145\u8bf4\uff1a\u201c\u4f60\u5f00\u59cb\u6563\u5e03\u8c23\u8a00\uff0c\u8bf4\u72fc\u7fa4\u900d\u9065\u6cd5\u5916\uff0c\u7136\u540e\u4f60\u5c31\u4f1a\u770b\u5230\u516c\u4f17\u7684\u53cd\u5e94\u3002\u201d\nSCL\u7684\u627f\u5305\u5546\u4e5f\u5c1d\u8bd5\u4e86\u7c7b\u4f3c\u7684\u6b3a\u9a97\u884c\u52a8\uff0cSCL\u662f\u4e00\u5bb6\u5ba3\u4f20\u516c\u53f8\uff0c\u66fe\u5728\u963f\u5bcc\u6c57\u548c\u4e9a\u6d32\u5176\u4ed6\u5730\u70b9\u4e3a\u7f8e\u56fd\u548c\u82f1\u56fd\u519b\u961f\u5de5\u4f5c\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u865a\u5047\u4fe1\u606f\u88ab\u4f20\u64ad\u7ed9\u6751\u6c11\uff0c\u4ee5\u8bf4\u670d\u4ed6\u4eec\u4e0d\u8981\u628a\u5b69\u5b50\u9001\u5230\u5b97\u6559\u5b66\u6821\uff0c\u5728\u90a3\u91cc\u4ed6\u4eec\u53ef\u80fd\u4f1a\u53d8\u5f97\u6fc0\u8fdb\u3002\u4f46\u627f\u5305\u5546\u975e\u4f46\u6ca1\u6709\u8bda\u5b9e\uff0c\u53cd\u800c\u7f16\u9020\u4e86\u4e00\u573a\u5ba3\u4f20\u6d3b\u52a8\uff0c\u58f0\u79f0\u604b\u7ae5\u7656\u8005\u5728\u5b97\u6559\u5b66\u6821\u6d3b\u52a8\uff0c\u7236\u6bcd\u4e0d\u5e94\u8be5\u628a\u4ed6\u4eec\u9001\u5230\u90a3\u91cc\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684\u5b69\u5b50\u4f1a\u6709\u88ab\u7325\u4eb5\u7684\u5371\u9669\u3002\n\u56fd\u9632\u90e8\u53d1\u8a00\u4eba\u4e39\u00b7\u52d2\u00b7\u5e03\u8482\u5229\u5c14(Dan Le Bouthillier)\u8868\u793a\uff0c\u8fd9\u5c01\u5047\u4fe1\u5e76\u4e0d\u662f\u8981\u5411\u516c\u4f17\u516c\u5e03\uff0c\u76ee\u524d\u6b63\u5728\u8fdb\u884c\u8c03\u67e5\uff0c\u4ee5\u786e\u5b9a\u8fd9\u662f\u5982\u4f55\u53d1\u751f\u7684\u3002\u8fd9\u5c01\u4fe1\u662f\u5ba3\u4f20\u57f9\u8bad\u7684\u8f85\u52a9\u6750\u6599\u3002Le Bouthillier\u8bf4\uff0c\u4ed6\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u8bbe\u7f6e\u626c\u58f0\u5668\u6765\u4f20\u8f93\u72fc\u7684\u58f0\u97f3\uff0c\u8fd9\u4e00\u70b9\u4e5f\u5c06\u8fdb\u884c\u8c03\u67e5\u3002\n\u4ed6\u8865\u5145\u8bf4\uff0c\u57f9\u8bad\u5021\u8bae\u6ca1\u6709\u9075\u5faa\u65e2\u5b9a\u7684\u5ba1\u6279\u7a0b\u5e8f\uff0c\u4e5f\u6ca1\u6709\u5f97\u5230\u9ad8\u7ea7\u9886\u5bfc\u4eba\u7684\u6279\u51c6\u3002\n\u65b0\u65af\u79d1\u820d\u7701\u7684\u5ba3\u4f20\u57f9\u8bad\u8fdb\u884c\u4e4b\u9645\uff0c\u52a0\u62ff\u5927\u519b\u961f\u6b63\u5728\u589e\u5f3a\u5176\u80fd\u529b\uff0c\u4ee5\u8fdb\u884c\u4fe1\u606f\u6218\u3001\u5f71\u54cd\u884c\u52a8\u548c\u5176\u4ed6\u6b3a\u9a97\u4efb\u52a1\uff0c\u76ee\u6807\u662f\u6d77\u5916\u4eba\u53e3\uff0c\u5982\u6709\u5fc5\u8981\uff0c\u8fd8\u5305\u62ec\u52a0\u62ff\u5927\u516c\u4f17\u3002\n\u5e03\u8d56\u6069\u7279\u5468\u4e00\u900f\u9732\uff0c\u52a0\u62ff\u5927\u519b\u961f\u82b1\u8d39\u4e86100\u591a\u4e07\u7f8e\u5143\u57f9\u8bad\u5176\u516c\u5171\u4e8b\u52a1\u5b98\u5458\uff0c\u5b66\u4e60\u5f71\u54cd\u76ee\u6807\u4eba\u7fa4\u7684\u6280\u80fd\u3002\n\u4eca\u5e747\u6708\uff0c\u672c\u62a5\u62a5\u9053\u4e86\u4e00\u4e2a\u5206\u914d\u7ed9\u52a0\u62ff\u5927\u519b\u4e8b\u60c5\u62a5\u90e8\u95e8\u7684\u5c0f\u7ec4\uff0c\u8be5\u5c0f\u7ec4\u76d1\u6d4b\u5e76\u6536\u96c6\u4e86\u5b89\u5927\u7565\u7701\u4eba\u4eec\u7684\u793e\u4ea4\u5a92\u4f53\u8d26\u6237\u4e2d\u7684\u4fe1\u606f\uff0c\u58f0\u79f0\u8fd9\u79cd\u6570\u636e\u6316\u6398\u662f\u5fc5\u8981\u7684\uff0c\u4ee5\u5e2e\u52a9\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u5728\u957f\u671f\u7597\u517b\u9662\u5de5\u4f5c\u7684\u90e8\u961f\u3002\u8fd9\u6b21\u6536\u96c6\u6d89\u53ca\u516c\u4f17\u5bf9\u7701\u653f\u5e9c\u672a\u80fd\u7167\u987e\u5168\u7701\u8001\u5e74\u4eba\u7684\u8bc4\u8bba\u3002\u8fd9\u4e9b\u6570\u636e\u88ab\u63d0\u4ea4\u7ed9\u5b89\u5927\u7565\u7701\u653f\u5e9c\uff0c\u5e76\u7531\u56e2\u961f\u53d1\u51fa\u8b66\u544a\uff0c\u8fd9\u4ee3\u8868\u7740\u516c\u4f17\u7684\u201c\u8d1f\u9762\u201d\u53cd\u5e94\u3002\n\u672c\u62a5\u540c\u65f6\u62a5\u9053\uff0c\u52a0\u62ff\u5927\u519b\u961f\u7b56\u5212\u4e86\u4e00\u573a\u5ba3\u4f20\u6d3b\u52a8\uff0c\u65e8\u5728\u963b\u6b62\u52a0\u62ff\u5927\u4eba\u5728\u51a0\u72b6\u75c5\u6bd2\u5927\u6d41\u884c\u671f\u95f4\u7684\u516c\u6c11\u6297\u547d\u884c\u4e3a\u3002\u8be5\u8ba1\u5212\u4f7f\u7528\u4e86\u4e0e\u963f\u5bcc\u6c57\u6218\u4e89\u671f\u95f4\u9488\u5bf9\u963f\u5bcc\u6c57\u6c11\u4f17\u7684\u5ba3\u4f20\u7b56\u7565\u7c7b\u4f3c\u7684\u5ba3\u4f20\u7b56\u7565\uff0c\u5305\u62ec\u7528\u6269\u97f3\u5668\u5361\u8f66\u4f20\u9012\u653f\u5e9c\u4fe1\u606f\u3002\u5ba3\u4f20\u884c\u52a8\u4ece\u672a\u4ed8\u8bf8\u5b9e\u65bd\u3002\n\u6b64\u5916\uff0c\u4e00\u4e9b\u52a0\u62ff\u5927\u519b\u5b98\u5efa\u8bae\u521b\u5efa\u865a\u5047\u7684Facebook\u548c\u5176\u4ed6\u793e\u4ea4\u5a92\u4f53\u8d26\u6237\u6765\u8fdb\u884c\u6b3a\u9a97\u884c\u52a8\uff0c\u5e76\u5229\u7528\u52a0\u62ff\u5927\u519b\u961f\u6210\u5458\u3001\u4eb2\u519b\u5b66\u8005\u548c\u9000\u5f79\u9ad8\u7ea7\u519b\u4e8b\u4eba\u5458\u7684\u793e\u4ea4\u5a92\u4f53\u8d26\u6237\u6765\u6311\u6218\u63d0\u51fa\u6709\u5173\u52a0\u62ff\u5927\u519b\u961f\u6709\u4e89\u8bae\u95ee\u9898\u7684\u53cd\u5bf9\u6d3e\u653f\u5ba2\u548c\u8bb0\u8005\u3002\n\u4f46\u519b\u65b9\u5185\u90e8\u7684\u5176\u4ed6\u4eba\u8868\u793a\uff0c\u60c5\u51b5\u5e76\u975e\u5982\u6b64\uff0c\u4ed6\u4eec\u6307\u51fa\uff0c\u65b0\u65af\u79d1\u820d\u7701\u7684\u884c\u52a8\u662f\u4e00\u4e2a\u6700\u597d\u7684\u4f8b\u5b50\uff0c\u56e0\u4e3a\u5f53\u58eb\u5175\u4f2a\u9020\u6587\u4ef6\u65f6\uff0c\u8fd9\u8fdd\u53cd\u4e86\u52a0\u62ff\u5927\u9690\u79c1\u6cd5\u548c\u5211\u6cd5\u3002\n\u8fd9\u5c01\u4f2a\u9020\u7684\u72fc\u4fe1\u7684\u65e5\u671f\u662f9\u67081\u65e5\u300219\u65e5\uff0c\u5728\u56fd\u9632\u53c2\u8c0b\u957f\u4e54\u6069\u00b7\u4e07\u65af(Jon Vance)\u5c06\u519b\u4f1a\u89c1\u519b\u65b9\u9ad8\u7ea7\u9886\u5bfc\u4eba\u4e24\u5929\u540e\uff0c\u4ed6\u89e3\u91ca\u4e86\u201c\u9053\u5fb7\u51b3\u7b56\u7684\u4ef7\u503c\uff0c\u4ee5\u53ca\u901a\u8fc7\u8bda\u5b9e\u900f\u660e\u5730\u505a\u6bcf\u4e00\u4ef6\u4e8b\u6765\u7ef4\u62a4CAF\u4fe1\u8a89\u7684\u91cd\u8981\u6027\u3002\u201d\n\u6ce8\u518c\u4ee5\u63a5\u6536\u6765\u81ea\u90ae\u653f\u5a92\u4f53\u7f51\u7edc\u516c\u53f8(Postmedia Network Inc.)\u65d7\u4e0b\u90e8\u95e8\u6e25\u592a\u534e\u516c\u6c11(Ottawa Citizen)\u7684\u6bcf\u65e5\u5934\u6761\u65b0\u95fb\u3002\n\u4e00\u5c01\u6b22\u8fce\u7535\u5b50\u90ae\u4ef6\u6b63\u5728\u53d1\u9001\u4e2d\u3002\u5982\u679c\u60a8\u6ca1\u6709\u770b\u5230\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u5783\u573e\u6587\u4ef6\u5939\u3002", "note_en": "A letter from the Nova Scotia government sent out to residents to warn about a pack of wolves on the loose in the province was forged by Canadian military personnel as part of a propaganda training mission that went off the rails.\n The letter told residents to be wary of wolves that had been reintroduced into the area by the provincial and federal governments and warned the animals were now roaming the Annapolis Valley. The letter, which later became public, sparked concern and questions among residents but was later branded as \u201cfake\u201d by the Nova Scotia government which didn\u2019t know the military was behind the deception.\n  The training also involved using a loudspeaker to generate wolf sounds, the Canadian Forces confirmed to this newspaper.\n The fake letter was part of new skills being tested by the military as it hones its expertise for launching propaganda missions at home and abroad. The letter was developed by information warfare specialists with the Halifax Rifles, a reserve unit.\n  They not only forged the logo of the Wildlife Division of Nova Scotia\u2019s Department of Lands and Forestry but they also attributed the letter to a real Nova Scotia government employee, even though they didn\u2019t have permission to do so. \u00a0A phone number on the letter, which residents were to call if they had concerns about the wolves, was traced by this newspaper to the work number of an Environment Canada employee, who also appears to be a Canadian Forces reservist.\n The Canadian Forces revealed its role behind the fake letter last week to the Nova Scotia government and then on the weekend to local news media. Media outlets reported military staff had written the letter but didn\u2019t know why.\n Emma Briant, a professor at Bard College in the U.S. who specializes in researching military propaganda, said what the Canadian Forces did was a major violation of ethics.\u00a0\u201cThis is way over the top,\u201d Briant said. \u201cIt\u2019s a very dangerous path when you start targeting your own public with false information and trying to manipulate them.\u201d\n Briant said the deception has nothing to do with wolves; it was likely an exercise in the testing the military\u2019s skills in trying to manipulate the population with false information. \u201cYou start a rumour about wolves on the loose and then you see how the public reacts,\u201d she added.\n Similar deception operations were tried by contractors of SCL, a propaganda company which had worked for the U.S. and British militaries in Afghanistan and other locations in Asia. In those cases, false information was transmitted to villagers to convince them not to send their children to religious schools where they might be radicalized. But instead of being truthful, the contractors concocted an information campaign claiming pedophiles were operating in religious schools and parents shouldn\u2019t send them there because their children would be in danger of being molested.\n  Department of National Defence spokesman Dan Le Bouthillier said the fake letter wasn\u2019t meant to be released to the public and an investigation is underway to determine how that happened. The letter was an aid for the propaganda training. Le Bouthillier said he didn\u2019t know why the loudspeaker was set up to transmit wolf sounds and that will be investigated as well.\n The training initiative did not follow the established approval process and was not okayed by senior leaders, he added.\n The Nova Scotia propaganda training comes as the Canadian Forces spools up its capabilities to conduct information warfare, influence operations and other deception missions aimed at populations overseas and, if necessary, the Canadian public.\n Briant revealed on Monday the Canadian Forces spent more than $1 million in training its public affairs officers in skills to influence targeted populations.\n In July, this newspaper reported a team assigned to a Canadian military intelligence unit monitored and collected information from people\u2019s social media accounts in Ontario, claiming such data-mining was needed to help troops working in long-term care homes during the coronavirus pandemic. The collection involved comments made by the public about the provincial government\u2019s failure in taking care of the elderly in the province. That data was turned over to the Ontario government, with a warning from the team it represented a \u201cnegative\u201d reaction from the public.\n  This newspaper reported at the same time that the Canadian Forces planned a propaganda campaign aimed at heading off civil disobedience by Canadians during the coronavirus pandemic. The plan used similar propaganda tactics to those employed against the Afghan population during the war in Afghanistan, including loudspeaker trucks to transmit government messages. The propaganda operation was never put into action.\n In addition, some Canadian military officers have suggested creating fake Facebook and other social media accounts for carrying out deception operations as well as harnessing social media accounts of Canadian Forces members, military-friendly academics and retired senior military staff to challenge opposition politicians and journalists who raise controversial issues regarding the Canadian Forces.\n  But others inside the military say that isn\u2019t the case, pointing to the Nova Scotia operation as a prime example as it violated Canadian privacy law and the Criminal Code when soldiers forged documents.\n The fake wolf letter was dated Sept. 19, two days after Chief of the Defence Staff Gen. Jon Vance met with senior military leaders to explain \u201cthe value of ethical decision making and the importance of maintaining the credibility of the CAF by being honest and transparent in everything we do.\u201d\n Sign up to receive daily headline news from Ottawa Citizen, a division of Postmedia Network Inc.\n  A welcome email is on its way. If you don&#39;t see it please check your junk folder.", "posttime": "2020-10-29 10:36:12", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u519b\u65b9,military,\u52a0\u62ff\u5927", "title": "\u52a0\u62ff\u5927\u519b\u65b9\u5bf9\u51fa\u8f68\u7684\u52a0\u62ff\u5927\u4eba\u8fdb\u884c\u4e86\u5ba3\u4f20\u4efb\u52a1\u6d4b\u8bd5", "title_en": "Canadian military tested propaganda mission on Canadians that went off the rails", "transed": 1, "url": "https://ottawacitizen.com/news/national/defence-watch/forged-letter-warning-about-wolves-on-the-loose-part-of-canadian-forces-propaganda-campaign-that-went-awry", "via": "", "real_tags": ["\u519b\u65b9", "military", "\u52a0\u62ff\u5927"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031892, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7f16\u5199\u4ee3\u7801\uff0c\u5c06\u5176\u653e\u5728\u529f\u80fd\u6807\u5fd7\u540e\u9762\uff0c\u5e76\u5c06\u5176\u76f4\u63a5\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u3002\u522b\u62c5\u5fc3\uff01\u5b83\u5bf9\u6bcf\u4e2a\u4eba\u90fd\u662f\u9690\u85cf\u7684\u3002\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u5e10\u6237\u6d4b\u8bd5\u5c0f\u90e8\u4ef6\u3002\u5728\u5b50\u5f39\u5934\u5217\u8f66\u4e2d\u9009\u62e9\u60a8\u81ea\u5df1\u7684\u7528\u6237\uff0c\u5e76\u8986\u76d6\u60a8\u5e10\u6237\u7684\u6807\u5fd7\u3002\n\u8be5\u5c0f\u90e8\u4ef6\u73b0\u5728\u5c06\u663e\u793a\u5728\u60a8\u81ea\u5df1\u7684\u5e10\u6237\u4e2d\u3002\u5b83\u5bf9\u5176\u4ed6\u4eba\u6765\u8bf4\u4ecd\u7136\u662f\u9690\u85cf\u7684\u3002\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u8fd9\u90e8\u5206\u7528\u6237\u8986\u76d6\u8be5\u6807\u5fd7\u3002\u4ed6\u4eec\u73b0\u5728\u53ef\u4ee5\u6d4b\u8bd5\u65b0\u7684\u5c0f\u90e8\u4ef6\uff0c\u5e76\u786e\u4fdd\u6240\u6709\u96c6\u6210\u70b9\u90fd\u80fd\u5f88\u597d\u5730\u5de5\u4f5c\u3002\n\u8ba9\u6211\u4eec\u505a\u4e00\u4e2a\u767e\u5206\u6bd4\u90e8\u7f72\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u4fdd\u5728\u5411\u6bcf\u4e2a\u4eba\u90e8\u7f72\u8be5\u529f\u80fd\u65f6\u4e0d\u4f1a\u51fa\u73b0\u610f\u5916\u95ee\u9898\u3002\n\u4fee\u6539\u6bb5\uff0c\u5c06\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u7b5b\u9009\u5668\u66ff\u6362\u4e3a%Split\u30025%\u7684\u7528\u6237\u73b0\u5728\u5c06\u770b\u5230\u804a\u5929\u5c0f\u5de5\u5177\uff0c95%\u7684\u7528\u6237\u5c06\u770b\u5230\u97e9\u5143\u3002\n\u804a\u5929\u5c0f\u90e8\u4ef6\u5df2\u7ecf\u4e0a\u7ebf\u51e0\u5468\u4e86\uff0c\u4e00\u5207\u90fd\u8fd0\u884c\u5f97\u5f88\u597d\u3002\u56e2\u961f\u5df2\u7ecf\u51b3\u5b9a\u4ed6\u4eec\u5e0c\u671b\u5c06\u5c0f\u90e8\u4ef6\u4fdd\u7559\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u56e0\u6b64\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u5b8c\u5168\u5220\u9664\u529f\u80fd\u6807\u5fd7\u3002\u6211\u4eec\u7f16\u8f91\u4ee3\u7801\u4ee5\u5220\u9664\u5c0f\u90e8\u4ef6\u7684\u53ef\u9009\u663e\u793a\uff0c\u5e76\u4eceBullet Train\u4e2d\u5220\u9664\u65d7\u5e1c\u3002", "note_en": "Write your code, place it behind a feature flag and deploy it straight to production. Don&#39;t worry! It&#39;s hidden for everyone.\n You can now test the widget using your own account. Select your own user within Bullet Train and override the flag for your account.\n The widget will now show up for your own account. It&#39;s still hidden for everybody else.\n Now we can override that flag for this segment of users. They can now test out the new widget and make sure all the integration points work nicely.\n Lets do a percentage rollout so that we can be sure that there are no unexpected issues when deploying the feature to everyone.\n Modify the Segment, replacing the emailAddress filter with a % Split. 5% of our users will now see the chat widget and 95% won&#39;t.\n The chat widget has been live for a few weeks, and everything is working nicely. The team have decided that they want to keep the widget in the application, so we can now remove the feature flag entirely. We edit the code to remove the optional display of the widget, and delete the flag from Bullet Train.", "posttime": "2020-10-29 10:35:45", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5f00\u6e90,\u5217\u8f66,train,\u73b0\u5728", "title": "\u5b50\u5f39\u5934\u5217\u8f66\uff1a\u5f00\u6e90\u529f\u80fd\u6253\u4e0a\u4e86\u65d7\u53f7", "title_en": "Bullet Train: Open-source feature flagging", "transed": 1, "url": "https://bullet-train.io", "via": "", "real_tags": ["\u5f00\u6e90", "\u5217\u8f66", "train", "\u73b0\u5728"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031891, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6458\u8981\uff1aNumFOCUS\u53d1\u73b0\u6211\u8fdd\u53cd\u4e86\u4ed6\u4eec\u5728JupyterCon\u7684\u884c\u4e3a\u51c6\u5219(CoC)\uff0c\u56e0\u4e3a\u6211\u7684\u53d1\u8a00\u4e0d\u662f\u201c\u53cb\u597d\u7684\u201d\uff0c\u56e0\u4e3a\u6211\u8bf4Joel Grus\u5173\u4e8eJupyter Notebook\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u8f6f\u4ef6\u5f00\u53d1\u73af\u5883\u7684\u89c2\u70b9\u662f\u201c\u9519\u8bef\u7684\u201d\u3002Joel(\u6211\u975e\u5e38\u5c0a\u91cd\u4ed6\uff0c\u8ba4\u4e3a\u4ed6\u662f\u6570\u636e\u79d1\u5b66\u754c\u7684\u8d44\u4ea7)\u6ca1\u6709\u53c2\u4e0eNumFOCUS\u7684\u884c\u52a8\uff0c\u6ca1\u6709\u88ab\u544a\u77e5\uff0c\u4e5f\u4e0d\u652f\u6301\u5b83\u3002NumFOCUS\u6ca1\u6709\u9075\u5faa\u4ed6\u4eec\u81ea\u5df1\u7684\u6267\u6cd5\u7a0b\u5e8f\uff0c\u8fdd\u53cd\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684COC\uff0c\u8ba9\u6211\u6302\u4e86\u4e00\u4e2a\u591a\u661f\u671f\uff0c\u751a\u81f3\u4e0d\u77e5\u9053\u6211\u88ab\u6307\u63a7\u4e86\u4ec0\u4e48\uff0c\u4e5f\u6ca1\u6709\u7ed9\u6211\u673a\u4f1a\u5728\u7ed3\u675f\u4ed6\u4eec\u7684\u8c03\u67e5\u4e4b\u524d\u63d0\u4f9b\u610f\u89c1\u3002\u6211\u53cd\u590d\u544a\u8bc9\u4ed6\u4eec\u7684\u59d4\u5458\u4f1a\uff0c\u7531\u4e8e\u533b\u7597\u95ee\u9898\uff0c\u6211\u7684\u60c5\u7eea\u5f39\u6027\u76ee\u524d\u5f88\u4f4e\uff0c\u4ed6\u4eec\u5bf9\u6b64\u55e4\u4e4b\u4ee5\u9f3b\uff0c\u56e0\u4e3a\u6211\u8bd5\u56fe\u5fcd\u4f4f\u773c\u6cea(\u4f46\u6ca1\u6709\u6210\u529f)\uff0c\u4ed6\u4eec\u5bf9\u6b64\u4e0d\u5c51\u4e00\u987e\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u8ba9\u6211\u7b4b\u75b2\u529b\u5c3d\uff0c\u5728\u53ef\u9884\u89c1\u7684\u672a\u6765\uff0c\u6211\u5c06\u65e0\u6cd5\u63a5\u53d7\u4efb\u4f55\u6f14\u8bb2\u8bf7\u6c42\u3002\u6211\u652f\u6301\u6df1\u601d\u719f\u8651\u5730\u6267\u884c\u884c\u4e3a\u51c6\u5219\uff0c\u4ee5\u89e3\u51b3\u6027\u522b\u6b67\u89c6\u3001\u79cd\u65cf\u4e3b\u4e49\u548c\u9a9a\u6270\u884c\u4e3a\uff0c\u4f46\u8fd9\u4e0d\u662f\u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\n\u5728\u6211\u6700\u8fd1\u7684JupyterCon\u4e3b\u9898\u6f14\u8bb2\u201c\u6211\u559c\u6b22Jupyter\u7b14\u8bb0\u672c\u201d\u4e2d(\u5982\u679c\u60a8\u6709\u5174\u8da3\u4eb2\u773c\u770b\u770b\uff0c\u8bf7\u5728\u672c\u6587\u5e95\u90e8\u91cd\u65b0\u5f55\u5236)\uff0c\u6211\u8bd5\u56fe\u53cd\u9a73Joel Grus\u6781\u5177\u5f71\u54cd\u529b\u7684JupyterCon\u6f14\u8bb2\u201c\u6211\u4e0d\u559c\u6b22\u7b14\u8bb0\u672c\u201d\u3002Joel\u5728\u4ed6\u7684\u6f14\u8bb2\u4e2d\u58f0\u79f0Jupyter\u5bf9\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u548c\u6559\u5b66\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u9009\u62e9\uff0c\u800c\u6211\u5728\u6211\u7684\u6f14\u8bb2\u4e2d\u58f0\u79f0\u8fd9\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002NumFOCUS\u59d4\u5458\u4f1a\u8ba4\u5b9a\u6211\u8fdd\u53cd\u4e86\u4ed6\u4eec\u7684\u884c\u4e3a\u51c6\u5219\uff0c\u56e0\u4e3a\u6211\u5728\u4e0e\u4e54\u5c14\u7684\u5206\u6b67\u4e2d\u6ca1\u6709\u8868\u73b0\u51fa\u201c\u5584\u610f\u201d\uff0c\u5e76\u201c\u4fae\u8fb1\u201d\u4e86\u4ed6\u3002\u5177\u4f53\u7406\u7531\u5982\u4e0b\uff1a\n\u6211\u4f7f\u7528\u4e86\u4ed6\u7684\u4e00\u4e9b\u5e7b\u706f\u7247(\u6b63\u786e\u5f52\u7c7b)\u548c\u4ed6\u7684\u4e00\u6bb5\u89c6\u9891\u4e2d\u7684\u4e00\u6bb5\u7b80\u77ed\u7247\u6bb5\u6765\u89e3\u91ca\u4e3a\u4ec0\u4e48\u6211\u8ba4\u4e3a\u4ed6\u662f\u9519\u7684\u3002\n\u6211\u8fd8\u88ab\u544a\u77e5\uff0c\u201c\u4f5c\u4e3a\u4e00\u540d\u4e3b\u65e8\u6f14\u8bb2\u8005\u201d\uff0c\u6211\u5c06\u201c\u88ab\u8981\u6c42\u8fbe\u5230\u6bd4\u5176\u4ed6\u4eba\u66f4\u9ad8\u7684\u6807\u51c6\u201d(\u5c3d\u7ba1\u5728\u6211\u6f14\u8bb2\u4e4b\u524d\u6ca1\u6709\u5411\u6211\u4f20\u8fbe\u8fd9\u4e00\u70b9\uff0c\u4e5f\u6ca1\u6709\u88ab\u544a\u77e5\u66f4\u9ad8\u7684\u6807\u51c6\u662f\u4ec0\u4e48)\u3002\n\u884c\u4e3a\u51c6\u5219\u53ef\u4ee5\u662f\u4e00\u4e2a\u6709\u7528\u7684\u5de5\u5177\uff0c\u5982\u679c\u7ecf\u8fc7\u6df1\u601d\u719f\u8651\u5730\u5236\u5b9a\u548c\u5b9e\u65bd\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u6027\u522b\u6b67\u89c6\u3001\u79cd\u65cf\u4e3b\u4e49\u548c\u9a9a\u6270\u95ee\u9898\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u662f\u79d1\u6280\u4f1a\u8bae\u4e0a\u7684\u95ee\u9898\u3002\u9274\u4e8e\u79d1\u6280\u884c\u4e1a\u7684\u591a\u6837\u6027\u95ee\u9898\uff0c\u6211\u4eec\u7ee7\u7eed\u52aa\u529b\u4f7f\u4f1a\u8bae\u66f4\u5177\u5305\u5bb9\u6027\uff0c\u7279\u522b\u662f\u5bf9\u90a3\u4e9b\u6765\u81ea\u8fb9\u7f18\u80cc\u666f\u7684\u4eba\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\u5236\u5b9a\u4e00\u5957\u884c\u4e3a\u51c6\u5219\uff0c\u660e\u786e\u89c4\u5b9a\u7981\u6b62\u66b4\u529b\u5a01\u80c1\u3001\u4e0d\u53d7\u6b22\u8fce\u7684\u6027\u5173\u6ce8\u3001\u53cd\u590d\u9a9a\u6270\u3001\u9732\u9aa8\u7684\u6027\u56fe\u7247\u548c\u5176\u4ed6\u6709\u5bb3\u884c\u4e3a\uff0c\u662f\u89e3\u51b3\u548c\u5236\u6b62\u8fd9\u4e9b\u884c\u4e3a\u7684\u7b2c\u4e00\u6b65\u3002JupyterCon\u4ee3\u7801\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u4e0d\u53ef\u63a5\u53d7\u884c\u4e3a\u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u6ca1\u6709\u4e00\u4e2a\u4e0e\u6211\u6240\u505a\u7684\u5b8c\u5168\u76f8\u4f3c(\u4f8b\u5982\uff0c\u8bf4\u67d0\u4eba\u5728\u67d0\u4e2a\u6280\u672f\u4e3b\u9898\u4e0a\u51fa\u9519\uff0c\u5e76\u89e3\u91ca\u5982\u4f55\u4ee5\u53ca\u4e3a\u4ec0\u4e48)\uff1a\n\u5f20\u8d34(\u6216\u5a01\u80c1\u8981\u5f20\u8d34)\u4ed6\u4eba\u7684\u4e2a\u4eba\u8eab\u4efd\u4fe1\u606f(\u201cdoxing\u201d)\u3002\nCOC\u7684\u6267\u884c\u8fc7\u7a0b\u5305\u62ec\u76f8\u4e92\u51b2\u7a81\u548c\u4e0d\u65ad\u53d8\u5316\u7684\u4fe1\u606f\uff0c\u6211\u6ca1\u6709\u673a\u4f1a\u53d1\u8868\u610f\u89c1\uff0c\u6f2b\u957f\u7684\u7b49\u5f85\u5e26\u6765\u7684\u538b\u529b\uff0c\u6301\u7eed\u65f6\u95f4\u672a\u77e5\uff0c\u6ca1\u6709\u5173\u4e8e\u6211\u88ab\u6307\u63a7\u4ec0\u4e48\u6216\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\u7684\u4fe1\u606f\uff0c\u59d4\u5458\u4f1a\u6210\u5458\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u8fdd\u53cd\u4e86\u4ed6\u4eec\u81ea\u5df1\u7684COC\u3002\n\u6709\u4e24\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u884c\u4e3a\u51c6\u5219\uff0c\u5728\u4e0d\u540c\u7684\u5730\u65b9\u6709\u4e0d\u540c\u7684\u8981\u6c42\u8054\u7cfb\u5728\u4e00\u8d77\n\u5728\u786e\u8ba4\u7b7e\u7ea6\u4e4b\u524d\uff0c\u6ca1\u6709\u4f20\u8fbeCoC\u7684\u5b58\u5728\u6216\u6709\u5173CoC\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\nCOC\u4e13\u5bb6\u5efa\u8bae\u907f\u514d\u5bf9\u793c\u8c8c\u6216\u5176\u4ed6\u5f62\u5f0f\u7684\u201c\u9002\u5f53\u201d\u884c\u4e3a\u7684\u8981\u6c42\uff0c\u4f46\u5e94\u8be5\u5173\u6ce8\u4e00\u7cfb\u5217\u5177\u4f53\u7684\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u4e3a\u3002\u7136\u800c\uff0cJupyterCon CoC\u51e0\u4e4e\u5b8c\u5168\u662f\u4e00\u4e2a\u5b9a\u4e49\u6a21\u7cca\u7684\u201c\u9002\u5f53\u201d\u884c\u4e3a(\u5982\u201c\u6b22\u8fce\u201d\u3001\u201c\u4f53\u8d34\u201d\u548c\u201c\u53cb\u597d\u201d)\u7684\u5217\u8868\u3002\nCOC\u4e13\u5bb6\u5efa\u8bae\u4f7f\u7528\u4fa7\u91cd\u4e8e\u4e0d\u53ef\u63a5\u53d7\u884c\u4e3a\u5217\u8868\u7684COC\u3002\u94fe\u63a5\u5230JupyterCon\u7684\u4e24\u4e2a\u4ee3\u7801\u90fd\u6709\u8fd9\u6837\u7684\u94fe\u63a5\uff0c\u5e76\u4e14\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u4e3a\u793a\u4f8b\u4e2d\u6ca1\u6709\u4e00\u4e2a\u4e0e\u672c\u4f8b\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u6709\u4efb\u4f55\u5173\u8054\u6216\u63a5\u8fd1\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cNumFOCUS\u8fd8\u662f\u53d1\u73b0\u6211\u8fdd\u53cd\u4e86\u89c4\u5b9a\u3002\n\u6211\u5b81\u613f\u6839\u672c\u4e0d\u7528\u5199\u8fd9\u7bc7\u6587\u7ae0\u3002\u7136\u800c\uff0c\u6211\u77e5\u9053\u4eba\u4eec\u4f1a\u95ee\u4e3a\u4ec0\u4e48\u6211\u7684\u6f14\u8bb2\u5728JupyterCon\u7f51\u7ad9\u4e0a\u4e0d\u53ef\u7528\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u6211\u5e94\u8be5\u786e\u5207\u5730\u89e3\u91ca\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6211\u7279\u522b\u62c5\u5fc3\uff0c\u5982\u679c\u53ea\u6709\u90e8\u5206\u4fe1\u606f\uff0c\u53cdCoC\u7684\u4eba\u7fa4\u53ef\u80fd\u4f1a\u8df3\u51fa\u6765\uff0c\u8ba4\u4e3a\u8fd9\u662f\u884c\u4e3a\u51c6\u5219\u666e\u904d\u5b58\u5728\u95ee\u9898\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6216\u8005\u53ef\u80fd\u4f1a\u6307\u51fa\u8fd9\u662f\u201c\u53d6\u6d88\u6587\u5316\u201d\u7684\u4e00\u90e8\u5206(\u8fd9\u4e2a\u6982\u5ff5\u6211\u975e\u5e38\u4e0d\u540c\u610f\uff0c\u56e0\u4e3a\u6240\u8c13\u7684\u201c\u53d6\u6d88\u201d\u5f80\u5f80\u53ea\u662f\u201c\u9762\u4e34\u540e\u679c\u201d)\u3002\u6700\u540e\uff0c\u6211\u53d1\u73b0\uff0c\u8eab\u5904\u884c\u4e3a\u51c6\u5219\u95ee\u9898\u7684\u201c\u53e6\u4e00\u8fb9\u201d\u8ba9\u6211\u5bf9\u8fd9\u4e00\u8fc7\u7a0b\u6709\u4e86\u66f4\u591a\u7684\u6d1e\u5bdf\u529b\uff0c\u6211\u5e94\u8be5\u5206\u4eab\u8fd9\u4e9b\u6d1e\u5bdf\u529b\uff0c\u4ee5\u5e2e\u52a9\u672a\u6765\u7684\u793e\u533a\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\u3002\n\u5bf9\u4e8e\u90a3\u4e9b\u611f\u5174\u8da3\u7684\u4eba\u6765\u8bf4\uff0c\u8fd9\u7bc7\u6587\u7ae0\u7684\u5176\u4f59\u90e8\u5206\u662f\u5bf9\u6240\u53d1\u751f\u4e8b\u60c5\u7684\u76f8\u5f53\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002\n\u6211\u6700\u8fd1\u5728JupyterCon\u4e0a\u505a\u4e86\u4e00\u6b21\u6f14\u8bb2\u3002\u51e0\u5e74\u524d\uff0c\u6211\u7684\u5408\u4f5c\u4f19\u4f34\u745e\u79cb\u5728JupyterCon\u4e0a\u505a\u4e86\u4e00\u6b21\u6f14\u8bb2\uff0c\u7ecf\u5386\u4e86\u4e00\u6bb5\u7f8e\u5999\u7684\u7ecf\u5386\uff0c\u6211\u662fJupyter\u7684\u8d85\u7ea7\u7c89\u4e1d\uff0c\u6240\u4ee5\u6211\u60f3\u652f\u6301\u8fd9\u4e2a\u9879\u76ee\u3002\u8fd9\u4e2a\u4f1a\u8bae\u8fc7\u53bb\u662f\u7531O\u2018Reilly\u7ec4\u7ec7\u7684\uff0c\u6211\u53c2\u52a0\u8fc7\u7684\u4f1a\u8bae\u4ed6\u603b\u662f\u505a\u5f97\u5f88\u597d\uff0c\u4f46\u4eca\u5e74\u7684\u4f1a\u8bae\u6539\u7531NumFOCUS\u8d1f\u8d23\u3002\n\u5728\u6211\u7684\u6f14\u8bb2\u4e2d\uff0c\u6211\u51b3\u5b9a\u4f7f\u7528nbdev\u5c06Jupyter\u4f5c\u4e3a\u4e00\u4e2a\u8bc6\u5b57\u548c\u63a2\u7d22\u6027\u7684\u7f16\u7a0b\u73af\u5883\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u6311\u6218\u662f\uff0c\u4e24\u5e74\u524d\uff0cJoel Grus\u505a\u4e86\u4e00\u573a\u7cbe\u5f69\u7684\u6f14\u8bb2\uff0c\u540d\u4e3a\u201c\u6211\u4e0d\u559c\u6b22\u7b14\u8bb0\u672c\u201d\uff0c\u8fd9\u7bc7\u6f14\u8bb2\u975e\u5e38\u6709\u8bf4\u670d\u529b\uff0c\u4ee5\u81f3\u4e8e\u6211\u53d1\u73b0\u5982\u679c\u6ca1\u6709\u4eba\u544a\u8bc9\u6211\u201c\u4f60\u5e94\u8be5\u770b\u8fd9\u4e2a\u6f14\u8bb2\uff0c\u8fd9\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u7528Jupyter\u7f16\u7a0b\u662f\u4e00\u4e2a\u7cdf\u7cd5\u7684\u60f3\u6cd5\u201d\uff0c\u6211\u51e0\u4e4e\u4e0d\u53ef\u80fd\u8c08\u8bba\u7528Jupyter\u7f16\u7a0b\u7684\u95ee\u9898\u3002\n\u4e54\u5c14\u5728\u6f14\u8bb2\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u5bf9\u6211\u8fdb\u884c\u4e86\u4e00\u4e9b\u8f7b\u677e\u7684\u6316\u82e6\uff0c\u56e0\u4e3a\u6211\u4e8b\u5148\u5df2\u7ecf\u8981\u6c42\u4ed6\u4e0d\u8981\u505a\u8fd9\u6837\u7684\u6f14\u8bb2\u3002\u6240\u4ee5\u6211\u60f3\u6211\u5e94\u8be5\u4e00\u4e3e\u4e24\u5f97\uff0c\u5229\u7528\u8fd9\u4e2a\u673a\u4f1a\u76f4\u63a5\u56de\u590d\u4ed6\u3002\u4e0d\u4ec5\u4ed6\u7684\u6f14\u8bb2\u5f88\u7cbe\u5f69\uff0c\u800c\u4e14\u4ed6\u7684\u5e7b\u706f\u7247\u4e5f\u5f88\u641e\u7b11\uff0c\u6240\u4ee5\u6211\u51b3\u5b9a\u76f4\u63a5\u4f7f\u7528\u4ed6\u7684\u4e00\u4e9b\u5e7b\u706f\u7247(\u5f53\u7136\u662f\u5b8c\u5168\u503c\u5f97\u79f0\u8d5e\u7684)\u76f4\u63a5\u6a21\u4eff\u4ed6\u7684\u6f14\u8bb2\u3002\u8fd9\u6837\uff0c\u6ca1\u6709\u770b\u8fc7\u4ed6\u6f14\u8bb2\u7684\u4eba\u65e2\u53ef\u4ee5\u4eab\u53d7\u7cbe\u5f69\u7684\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u6211\u7684\u56de\u5e94\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u662fJoel\u5982\u4f55\u8bf4\u660e\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u8fd0\u884c\u5355\u5143\u7684\u6311\u6218\uff1a\n\u6211\u5c55\u793a\u4e86\u8fd9\u5f20\u5e7b\u706f\u7247\uff0c\u89e3\u91ca\u8bf4\u8fd9\u662f\u4e54\u5c14\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u770b\u6cd5\uff0c\u7136\u540e\u63a5\u7740\u653e\u4e86\u4e00\u5f20\u5e7b\u706f\u7247\uff0c\u5c55\u793a\u4e86\u6309\u987a\u5e8f\u8fd0\u884c\u6240\u6709\u5355\u5143\u683c\u5b9e\u9645\u4e0a\u662f\u591a\u4e48\u5bb9\u6613\uff1a\n\u6bcf\u5f20\u5e7b\u706f\u7247\u90fd\u5305\u62ec\u4e54\u5c14\u6807\u9898\u5e7b\u706f\u7247\u7684\u4e00\u4e2a\u7247\u6bb5\uff0c\u6211\u89e3\u91ca\u8bf4\uff0c\u5b83\u663e\u793a\u4e86\u54ea\u4e9b\u5e7b\u706f\u7247\u662f\u76f4\u63a5\u4ece\u4ed6\u7684\u6f14\u793a\u6587\u7a3f\u4e2d\u6458\u5f55\u7684\u3002\u6211\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u786e\u4fdd\u6211\u6ca1\u6709\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4fee\u6539\u4ed6\u7684\u4efb\u4f55\u5e7b\u706f\u7247\u3002\u5f53\u6211\u7b2c\u4e00\u6b21\u4ecb\u7ecd\u4ed6\u7684\u6f14\u8bb2\u65f6\uff0c\u6211\u5f62\u5bb9\u4e54\u5c14\u662f\u201c\u4e00\u4f4d\u51fa\u8272\u7684\u6c9f\u901a\u8005\uff0c\u975e\u5e38\u6709\u8da3\uff0c\u800c\u4e14\u662f\u9519\u8bef\u7684\u201d\u3002\u6211\u6ca1\u6709\u5bf9\u4e54\u5c14\u53d1\u8868\u4efb\u4f55\u5176\u4ed6\u8bc4\u8bba(\u5c3d\u7ba1\uff0c\u6839\u636e\u8bb0\u5f55\uff0c\u6211\u8ba4\u4e3a\u4ed6\u5f88\u68d2\uff0c\u5e76\u5f3a\u70c8\u63a8\u8350\u4ed6\u7684\u4e66\u3002\n\u4e00\u5468\u540e\uff0c\u6211\u6536\u5230\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u544a\u8bc9\u6211\u5173\u4e8e\u6211\u7684JupyterCon\u4e3b\u9898\u6f14\u8bb2\u6709\u4e24\u4efdCOC\u62a5\u544a\u3002\u6211\u88ab\u544a\u77e5\uff0c\u201c\u884c\u4e3a\u51c6\u5219\u6267\u884c\u5c0f\u7ec4\u660e\u5929\u5c06\u5f00\u4f1a\u5ba1\u67e5\u8fd9\u4e00\u4e8b\u4ef6\uff0c\u5e76\u5c06\u4e0e\u60a8\u8054\u7cfb\uff0c\u544a\u77e5\u60a8\u62a5\u544a\u7684\u6027\u8d28\uff0c\u5e76\u4e86\u89e3\u60a8\u7684\u89c2\u70b9\u201d\u3002\n\u76f4\u5230\u6211\u88ab\u9080\u8bf7\u53d1\u8a00\uff0c\u63a5\u53d7\u4e86\u9080\u8bf7\uff0c\u5e76\u5b8c\u6210\u4e86\u5728\u7ebf\u6ce8\u518c\uff0cCOC\u624d\u88ab\u63d0\u53ca\u3002\u6211\u5f53\u65f6\u770b\u8fc7\u4e86\uff0c\u6709\u70b9\u7cca\u6d82\u3002\u6211\u6536\u5230\u7684\u7535\u5b50\u90ae\u4ef6\u94fe\u63a5\u5230\u4e86JupyterCon\u7684\u884c\u4e3a\u51c6\u5219\uff0c\u4f46\u8fd9\u53cd\u8fc7\u6765\u5e76\u6ca1\u6709\u63d0\u4f9b\u592a\u591a\u5173\u4e8e\u4ec0\u4e48\u662f\u597d\u7684\u548c\u4e0d\u597d\u7684\u7ec6\u8282\uff0c\u800c\u8fd9\u53cd\u8fc7\u6765\u53c8\u94fe\u63a5\u5230\u4e86\u4e0d\u540c\u7684NumFOCUS\u884c\u4e3a\u51c6\u5219\u3002\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u62a5\u544a\u8fdd\u89c4\u884c\u4e3a\u7684\u94fe\u63a5\uff0c\u8be5\u94fe\u63a5\u4e5f\u94fe\u63a5\u5230NumFOCUS CoC\u5e76\u5c06\u5176\u547d\u540d\u4e3aNumFOCUS CoC\u3002\n\u6211\u62c5\u5fc3\u6211\u505a\u4e86\u4e00\u4e9b\u53ef\u80fd\u88ab\u89c6\u4e3a\u8fdd\u89c4\u7684\u4e8b\u60c5\uff0c\u5e76\u671f\u5f85\u7740\u542c\u53d6\u6709\u5173\u62a5\u544a\u7684\u6027\u8d28\uff0c\u5e76\u6709\u673a\u4f1a\u5206\u4eab\u6211\u7684\u89c2\u70b9\u3002\u4ee4\u6211\u632f\u594b\u7684\u662f\uff0cJupyterCon\u8bb0\u5f55\u4e86\u4ed6\u4eec\u9075\u5faaNumFOCUS\u6267\u884c\u624b\u518c\u3002\u6211\u8fd8\u611f\u5230\u632f\u594b\u7684\u662f\uff0c\u624b\u518c\u4e2d\u6709\u4e00\u4e2a\u90e8\u5206\u662f\u201c\u4e0e\u88ab\u62a5\u544a\u4eba\u5c31\u4e8b\u4ef6\u8fdb\u884c\u6c9f\u901a\u201d\uff0c\u5176\u4e2d\u8bf4\u4ed6\u4eec\u5c06\u201c\u8ba9\u88ab\u62a5\u544a\u4eba\u544a\u8bc9COC\u54cd\u5e94\u56e2\u961f\u4e2d\u4ed6\u4eec\u90a3\u4e00\u8fb9\u7684\u6545\u4e8b\uff1b\u6536\u5230\u4ed6\u4eec\u90a3\u4e00\u8fb9\u6545\u4e8b\u7684\u4eba\u5e94\u8be5\u51c6\u5907\u597d\u5728\u54cd\u5e94\u56e2\u961f\u4f1a\u8bae\u4e0a\u4f20\u8fbe\u8fd9\u4e00\u70b9\u201d\u3002\u6211\u8fd8\u5f88\u9ad8\u5174\u5730\u770b\u5230\uff0c\u5927\u90e8\u5206\u624b\u518c\u548c\u884c\u4e3a\u51c6\u5219\u90fd\u9075\u5faa\u4e86Ada Initiative\u7684\u5efa\u8bae(\u751a\u81f3\u4f7f\u7528\u4e86\u4e00\u4e9b\u63aa\u8f9e)\uff0c\u4ed6\u4eec\u5bf9\u5982\u4f55\u5236\u5b9a\u548c\u5e94\u7528\u884c\u4e3a\u51c6\u5219\u975e\u5e38\u6df1\u601d\u719f\u8651\u3002\n\u4e00\u4e2a\u6311\u6218\u662f\uff0cJupyterCon COC\u662f\u57fa\u4e8eDjango\u7684\uff0c\u5b83\u6709\u975e\u5e38\u7b3c\u7edf\u7684\u6307\u5bfc\u65b9\u9488\uff0c\u6bd4\u5982\u201c\u8981\u6b22\u8fce\u201d\u548c\u201c\u8981\u4f53\u8d34\u201d\uff0c\u4e0d\u540c\u7684\u4eba\u53ef\u4ee5\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u5bf9\u5f85\u8fd9\u4e9b\u51c6\u5219\u3002NumFOCUS\u7684\u51c6\u5219\u8981\u660e\u786e\u5f97\u591a\uff0c\u6709\u4e00\u4e2a\u5177\u4f53\u7684\u201c\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u4e3a\u201d\u6e05\u5355\uff0c\u5c3d\u7ba1\u8be5\u6e05\u5355\u5305\u62ec\u201c\u5176\u4ed6\u4e0d\u9053\u5fb7\u6216\u4e0d\u4e13\u4e1a\u7684\u884c\u4e3a\u201d\uff0c\u8fd9\u662f\u9ebb\u70e6\u7684\uff0c\u56e0\u4e3a\u201c\u4e0d\u4e13\u4e1a\u201d\u53ef\u80fd\u662f\u90a3\u4e9b\u201c\u4e13\u4e1a\u201d\u4eba\u58eb\u8ba4\u4e3a\u8fdd\u53cd\u5176\u7279\u5b9a\u89c4\u8303\u7684\u6240\u6709\u628a\u5173\u673a\u5236\uff0c\u800c\u4e0d\u80fd\u5408\u7406\u5730\u671f\u671b\u56e2\u961f\u5916\u7684\u4eba(\u6bd4\u5982\u6211)\u77e5\u9053\u8fd9\u4e9b\u884c\u4e3a\u3002\n\u74e6\u83b1\u4e3d\u00b7\u5965\u7f57\u62c9(Valerie Aurora)\u5728\u4e00\u7bc7\u51fa\u8272\u7684\u6f14\u8bb2\u4e2d\u8ba8\u8bba\u4e86\u5176\u4e2d\u4e00\u4e9b\u95ee\u9898\uff0c\u5979\u89e3\u91ca\u8bf4\uff0c\u201c\u884c\u4e3a\u51c6\u5219\u5e94\u8be5\u5305\u542b\u201d\u201c\u8bb8\u591a\u4eba\u8ba4\u4e3a\u4f60\u7684\u793e\u533a\u53ef\u4ee5\u63a5\u53d7\u4f46\u4e0d\u80fd\u63a5\u53d7\u7684\u884c\u4e3a\u201d\uff0c\u201c\u5982\u679c\u4f60\u60f3\u5217\u51fa\u826f\u597d\u7684\u884c\u4e3a\u6216\u63cf\u8ff0\u793e\u533a\u7684\u884c\u4e3a\u7406\u60f3\uff0c\u5c31\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u4e2d\u5b8c\u6210\u201d\uff0c\u7279\u522b\u662f\u201c\u4e0d\u8981\u6c42\u793c\u8c8c\u6216\u5176\u4ed6\u5f62\u5f0f\u7684\u2018\u9002\u5f53\u2019\u884c\u4e3a\u201d\u3002\u51e0\u4e4e\u6240\u6709\u7684JupyterCon\u884c\u4e3a\u51c6\u5219\u90fd\u662f\u201c\u9002\u5f53\u201d\u884c\u4e3a\u7684\u6e05\u5355(\u4f8b\u5982\uff0c\u201c\u53cb\u597d\u201d\u3001\u201c\u6b22\u8fce\u201d\u3001\u201c\u5c0a\u91cd\u201d\u7b49)\u3002\u867d\u7136\u66f4\u5e7f\u6cdb\u548c\u66f4\u4e3b\u89c2\u7684\u4ef7\u503c\u89c2\uff0c\u5982\u201c\u53cb\u5584\u201d\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4f1a\u8bae\u4ef7\u503c\u89c2\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u662f\u5426\u751a\u81f3\u5982\u4f55\u901a\u8fc7\u884c\u4e3a\u51c6\u5219\u6765\u6267\u884c\u8fd9\u4e9b\u4ef7\u503c\u89c2\u8fd8\u4e0d\u592a\u6e05\u695a\u3002\n\u627f\u8bfa\u7684\u7535\u8bdd\u53d1\u751f\u5728\u7b2c\u4e8c\u5929\u3002\u4e0d\u8fc7\uff0c\u8be5\u540d\u4ee3\u8868\u544a\u8bc9\u6211\uff0c\u4ed6\u4eec\u5f53\u65f6\u4e0d\u4f1a\u544a\u77e5\u6211\u8be5\u62a5\u544a\u7684\u6027\u8d28\uff0c\u4e5f\u4e0d\u4f1a\u8bd5\u56fe\u4e86\u89e3\u6211\u5f53\u65f6\u7684\u89c2\u70b9\u3002\u6211\u95ee\u4e3a\u4ec0\u4e48\u6539\u53d8\u8ba1\u5212\u3002\u8be5\u4ee3\u8868\u89e3\u91ca\u8bf4\uff0c\u4ed6\u4eec\u5df2\u7ecf\u53ec\u5f00\u4e86\u59d4\u5458\u4f1a\u4f1a\u8bae\uff0c\u5e76\u51b3\u5b9a\u7b49\u5230\u4ed6\u4eec\u4e0e\u4e24\u540d\u8bb0\u8005\u4ea4\u8c08\u540e\u518d\u8bf4\u3002\n\u6211\u76ee\u77aa\u53e3\u5446\u3002\u8fd9\u4f4d\u4ee3\u8868\u751a\u81f3\u4e0d\u80fd\u627f\u8bfa\u4ed6\u4eec\u4ec0\u4e48\u65f6\u5019\u4f1a\u7ed9\u6211\u56de\u7535\u8bdd\uff0c\u4e5f\u4e0d\u80fd\u544a\u8bc9\u6211\u4e0b\u4e00\u6b65\u4f1a\u53d1\u751f\u4ec0\u4e48\u3002\u6211\u544a\u8bc9\u4ed6\u4eec\uff0c\u6211\u8ba4\u4e3a\u544a\u8bc9\u522b\u4eba\u4ed6\u4eec\u6709\u4e00\u4efd\u8fdd\u89c4\u62a5\u544a\uff0c\u4f46\u968f\u540e\u4e0d\u8bf4\u662f\u4ec0\u4e48\uff0c\u6216\u8005\u4ed6\u4eec\u4f55\u65f6\u6216\u662f\u5426\u80fd\u591f\u63d0\u4f9b\u4ed6\u4eec\u7684\u60c5\u51b5\uff0c\u6216\u8005\u4e3a\u4e0b\u4e00\u6b65\u63d0\u4f9b\u4efb\u4f55\u65f6\u95f4\u6846\u67b6\uff0c\u90fd\u662f\u6b8b\u5fcd\u7684\u3002\u6211\u544a\u8bc9\u4ed6\u4eec\uff0c\u6211\u7684\u60c5\u7eea\u5f39\u6027\u4e0d\u9ad8\uff0c\u56e0\u4e3a\u6211\u4e00\u76f4\u5728\u5904\u7406\u5177\u6709\u6311\u6218\u6027\u7684\u5bb6\u5ead\u5065\u5eb7\u95ee\u9898\uff0c\u6211\u5e0c\u671b\u4ed6\u4eec\u5c06\u6765\u80fd\u8003\u8651\u6539\u53d8\u5bf9\u5176\u4ed6\u4eba\u7684\u505a\u6cd5\uff0c\u8fd9\u6837\u4ed6\u4eec\u5c31\u4e0d\u5fc5\u50cf\u6211\u90a3\u6837\u5904\u7406\u65e0\u9650\u671f\u548c\u6666\u6da9\u7684\u6307\u63a7\u3002\n\u8fd9\u4f4d\u4ee3\u8868\u89e3\u91ca\u8bf4\uff0c\u6211\u201c\u81f3\u5c11\u8ba9\u4e24\u4e2a\u4eba\u611f\u5230\u4e0d\u8212\u670d\u201d\u3002\u6211\u544a\u8bc9\u4ed6\u4eec\u6211\u771f\u7684\u8ba4\u4e3a\u8fd9\u4e0d\u516c\u5e73\u3002\u6211\u4eec\u4e0d\u5e94\u8be5\u5bf9\u522b\u4eba\u7684\u611f\u53d7\u8d1f\u8d23\u3002\u4f5c\u4e3a\u975e\u66b4\u529b\u6c9f\u901a\u7684\u5021\u5bfc\u8005\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u5e94\u8be5\u5206\u4eab\u6211\u4eec\u5bf9\u4ed6\u4eba\u8a00\u884c\u7684\u53cd\u5e94\uff0c\u4f46\u4e0d\u5e94\u8be5\u56e0\u4e3a\u8fd9\u4e9b\u611f\u53d7\u800c\u8d23\u602a\u522b\u4eba\u3002\u6b64\u5916\uff0c\u5982\u679c\u8981\u6c42\u8c08\u8bdd\u8ba9\u4eba\u611f\u5230\u8212\u670d\uff0c\u90a3\u5c31\u5e94\u8be5\u6e05\u695a\u5730\u4f20\u8fbe\u548c\u8bb0\u5f55\u4e0b\u6765(NumFOCUS\u4e24\u8005\u90fd\u6ca1\u6709\u505a\u5230)\u3002\n\u4e0b\u4e00\u901a\u7535\u8bdd\u53c8\u8fc7\u4e86\u4e00\u5468\u624d\u6253\u6765(\u6211\u5df2\u7ecf\u5b89\u6392\u597d\u4e86\u968f\u65f6\u89c1\u9762)\u3002\u5f53\u6211\u8bfb\u5230\u8fd9\u6b21\u901a\u8bdd\u7684\u76ee\u7684\u662f\u201c\u8ba8\u8bba\u6211\u4eec\u7684\u8c03\u67e5\u7ed3\u679c\u201d\u65f6\uff0c\u6211\u611f\u5230\u9707\u60ca\u3002\u6211\u65e0\u6cd5\u7406\u89e3\uff0c\u5982\u679c\u6ca1\u6709\u6211\u7684\u4efb\u4f55\u610f\u89c1\uff0c\u4ed6\u4eec\u600e\u4e48\u80fd\u5b8c\u6210\u8c03\u67e5\u5e76\u5f97\u51fa\u7ed3\u679c\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u6211\u8fd8\u662f\u540c\u610f\u4e86\u8fd9\u4e2a\u7535\u8bdd\uff1b\u6211\u60f3\u6211\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u62e8\u8fdb\u53bb\uff0c\u542c\u5230\u7ed3\u679c\uff0c\u7136\u540e\u6211\u5c31\u5b8c\u6210\u4e86\u3002\n\u6709\u4e00\u901a\u7535\u8bdd\uff0c\u6211\u60ca\u8bb6\u5730\u53d1\u73b0\u81ea\u5df1\u9762\u5bf9\u7684\u662f\u56db\u4e2a\u4eba\u3002\u4e4b\u524d\u7684\u7535\u8bdd\u53ea\u6709\u4e00\u4e2a\uff0c\u7a81\u7136\u95f4\u4eba\u6570\u8fdc\u8fdc\u8d85\u8fc7\u4e86\u6211\uff0c\u8fd9\u8ba9\u6211\u611f\u5230\u975e\u5e38\u5bb3\u6015\u3002\u5176\u4e2d\u4e00\u4f4d\u4ee3\u8868\u4e00\u5f00\u59cb\u5c31\u544a\u8bc9\u6211\u786e\u5207\u7684\u53d1\u73b0\u662f\u4ec0\u4e48\u3002\u8bb0\u8005\u4eec\u58f0\u79f0\uff0c\u59d4\u5458\u4f1a\u4e5f\u540c\u610f\uff0c\u786e\u5b9e\u5b58\u5728\u8fdd\u53cd\u884c\u4e3a\u51c6\u5219\u7684\u884c\u4e3a\uff0c\u7279\u522b\u662f\u5728\u672a\u80fd\u201c\u5584\u5f85\u4ed6\u4eba\u201d\u548c\u201c\u4fae\u8fb1\u4ed6\u4eba\u201d\u65b9\u9762\u3002\n\u6211\u76ee\u77aa\u53e3\u5446\u3002\u6211\u8ba4\u4e3a\u4e54\u5c14\u5f88\u68d2\uff0c\u800c\u4e14\u6211\u77e5\u9053\u4ed6\u5e76\u4e0d\u4ecb\u610f\u88ab\u79f0\u4e3a\u201c\u9519\u8bef\u7684\u201d(\u81ea\u4ece\u6211\u548c\u4ed6\u786e\u8ba4\u4e86\u90a3\u4e2a\u7535\u8bdd\u4e4b\u540e)\u3002\u6211\u80af\u5b9a\u6ca1\u6709\u4fae\u8fb1\u4ed6\u3002\u6211\u8bf4\uff0c\u6211\u8ba4\u4e3a\u4ed6\u7684\u7f16\u7801\u65b9\u6cd5\u662f\u6b21\u4f18\u7684\uff0c\u7279\u522b\u662f\u5b83\u5c06\u53d7\u76ca\u4e8e\u4f7f\u7528Jupyter\u3002\u6211\u7ed9\u4ed6\u770b\u4e86\u4e00\u6bb5\u4ed6\u73b0\u573a\u7f16\u7a0b\u7684\u7247\u6bb5\u6765\u8bc1\u660e\u8fd9\u4e00\u70b9\u3002\u6211\u53d1\u73b0\u4ee4\u4eba\u9707\u60ca\u7684\u662f\uff0c\u59d4\u5458\u4f1a\u7684\u90e8\u5206\u8c03\u67e5\u7ed3\u679c\u4f1a\u58f0\u79f0\u6211\u4e3a\u4ec0\u4e48\u8981\u653e\u6620\u7279\u5b9a\u7684\u5e7b\u706f\u7247\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u4ed6\u4eec\u751a\u81f3\u90fd\u6ca1\u6709\u95ee\u8fc7\u3002\u6211\u4e0d\u60f3\u8bcb\u6bc1Joel\u7684\u540d\u58f0\uff0c\u6211\u4e5f\u4e0d\u8ba4\u4e3a\u6211\u8ba4\u4e3a\u4ed6\u7684\u7f16\u7801\u8bbe\u7f6e\u662f\u6b21\u4f18\u7684\u89c2\u70b9\u5e94\u8be5\u88ab\u8ba4\u4e3a\u662f\u5bf9\u4ed6\u6027\u683c\u7684\u8f7b\u89c6\u3002\n\u96be\u9053\u53ef\u4ee5\u8bf4\u6211\u4e0d\u662f\u201c\u5584\u826f\u7684\u201d\u5417\uff1f\u6211\u60f3\u662f\u53ef\u4ee5\u7684\u3002\u6211\u505a\u4e86\u4e2a\u6076\u641e\u3002\u5728\u67d0\u4e9b\u65b9\u9762\uff0c\u8fd9\u662f\u53cb\u5584\u7684-\u5b83\u8868\u660e(\u6211\u660e\u786e\u5730\u8bf4\u4e86\u8fd9\u4e00\u70b9)\uff0c\u6211\u8ba4\u4e3a\u4ed6\u7684\u6f14\u8bb2\u5f88\u7cbe\u5f69\uff0c\u5f88\u6709\u5f71\u54cd\u529b\uff0c\u4ee5\u81f3\u4e8e\u6211\u82b1\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u7814\u7a76\u5b83\uff0c\u5c3d\u6211\u6240\u80fd\u5730\u5904\u7406\u7b11\u8bdd\u548c\u7ed3\u6784\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u786e\u5b9e\u8bf4\u8fc7\u4ed6\u662f\u9519\u7684\uff0c\u5e76\u8bd5\u56fe\u901a\u8fc7\u5728\u5e7b\u706f\u7247\u4e0a\u76f4\u63a5\u6307\u51fa\u4ed6\u6240\u72af\u7684\u9519\u8bef\u6765\u5c55\u793a\u4ed6\u6240\u72af\u7684\u9519\u8bef\uff0c\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4e0d\u53cb\u597d\u7684\uff0c\u4f46NumFOCUS\u59d4\u5458\u4f1a\u4f3c\u4e4e\u4e0d\u540c\u610f\u3002\u5c31\u6211\u4e2a\u4eba\u800c\u8a00\uff0c\u6211\u4e0d\u8ba4\u4e3a\u6211\u662f\u5728\u4fae\u8fb1\u4ed6\u3002\u8fa9\u8bba\u67d0\u4eba\u5e76\u8bf4\u4ed6\u4eec\u662f\u9519\u7684\uff0c\u800c\u4e0d\u8bf4\u4ed6\u4eec\u662f\u574f\u4eba\u6216\u8bf4\u4ed6\u4eec\u672c\u4eba\u7684\u574f\u8bdd\uff0c\u8fd9\u662f\u5f88\u6709\u53ef\u80fd\u7684\u3002JupyterCon COC\u751a\u81f3\u63d0\u5230\u4e86\u8fd9\u4e00\u70b9\uff1a\u201c\u5f53\u6211\u4eec\u610f\u89c1\u4e0d\u4e00\u81f4\u65f6\uff0c\u8bd5\u7740\u7406\u89e3\u4e3a\u4ec0\u4e48\u3002\u793e\u4f1a\u548c\u6280\u672f\u4e0a\u7684\u5206\u6b67\u65f6\u6709\u53d1\u751f\uff0cJupyter\u4e5f\u4e0d\u4f8b\u5916\u3002\n\u4e0e\u6211\u88ab\u6307\u63a7\u7684\u76f8\u6bd4\uff0cJupyter\u548cNumFOCUS\u4ee3\u7801\u4e0a\u63d0\u4f9b\u7684\u4f8b\u5b50\u4e4b\u95f4\u5b58\u5728\u7740\u5de8\u5927\u7684\u5dee\u5f02\u3002\u4ee5\u4e0b\u662f\u6765\u81eaNumFOCUS\u7684\u201c\u4e0d\u53ef\u63a5\u53d7\u884c\u4e3a\u201d\u6392\u884c\u699c\uff1a\n\u4e66\u9762\u6216\u53e3\u5934\u8bc4\u8bba\uff0c\u5176\u6548\u679c\u662f\u6839\u636e\u67d0\u4e00\u7279\u5b9a\u7fa4\u4f53\u7684\u6210\u5458\u8d44\u683c\u800c\u5c06\u5176\u6392\u9664\u5728\u5916\uff0c\u5305\u62ec\u7ecf\u9a8c\u6c34\u5e73\u3001\u6027\u522b\u3001\u6027\u522b\u8ba4\u540c\u548c\u8868\u8fbe\u3001\u6027\u53d6\u5411\u3001\u6b8b\u75be\u3001\u795e\u7ecf\u7c7b\u578b\u3001\u4e2a\u4eba\u5916\u8868\u3001\u4f53\u578b\u3001\u79cd\u65cf\u3001\u6c11\u65cf\u3001\u5e74\u9f84\u3001\u5b97\u6559\u6216\u56fd\u7c4d\n\u672a\u7ecf\u53d1\u4ef6\u4eba\u540c\u610f\uff0c\u5171\u4eab\u79c1\u4eba\u5185\u5bb9\uff0c\u5982\u79c1\u4e0b\u6216\u975e\u516c\u5f00\u53d1\u9001\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6216\u76f4\u63a5\u6d88\u606f\u5386\u53f2\u8bb0\u5f55\u3002\n\u5728\u88ab\u8981\u6c42\u505c\u6b62\u540e\u7ee7\u7eed\u53d1\u8d77\u4e0e\u67d0\u4eba\u7684\u4e92\u52a8(\u5982\u62cd\u7167\u3001\u5f55\u97f3\u3001\u6d88\u606f\u6216\u5bf9\u8bdd)\u3002\n\u672a\u7ecf\u660e\u786e\u8bb8\u53ef\uff0c\u53d1\u5e03(\u6216\u5a01\u80c1\u8981\u53d1\u5e03)\u4ed6\u4eba\u7684\u4e2a\u4eba\u8eab\u4efd\u4fe1\u606f(Doxing\uff1f\uff1f)\uff0c\u4f8b\u5982\u7269\u7406\u6216\u7535\u5b50\u5730\u5740\u3002\n\u8fd9\u4e9b\u90fd\u662f\u6211\u5f3a\u70c8\u540c\u610f\u5e94\u8be5\u505c\u6b62\u7684\u884c\u4e3a\uff0c\u793e\u4f1a\u5e94\u8be5\u56e2\u7ed3\u8d77\u6765\u652f\u6301\u8fd9\u4e00\u70b9\u3002\u4f46\u8fd9\u4e9b\u90fd\u4e0d\u662fNumFOCUS\u59d4\u5458\u4f1a\u5728\u672c\u6848\u4e2d\u5173\u6ce8\u7684\u884c\u4e3a\uff0c\u4e5f\u4e0d\u662f\u6211\u88ab\u53d1\u73b0\u8fdd\u53cdCoC\u7684\u90e8\u5206\u3002\n\u6211\u4e0d\u77e5\u9053\u8fd9\u91cc\u53d1\u751f\u4e86\u4ec0\u4e48--\u4e3a\u4ec0\u4e48\u6709\u4e9b\u4eba\u51b3\u5b9a\u4f7f\u7528\u4e00\u79cd\u663e\u7136\u662f\u4e3a\u4e86\u4fdd\u62a4\u4eba\u4eec\u514d\u53d7\u6027\u522b\u6b67\u89c6\u3001\u66b4\u529b\u3001\u79cd\u65cf\u4e3b\u4e49\u548c\u6050\u5413\u800c\u7f16\u5199\u7684\u4ee3\u7801\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u3002\u6211\u77e5\u9053\uff0c\u4eca\u5e74\u6211\u5021\u5bfc\u7684\u666e\u904d\u8499\u9762\u5df2\u7ecf\u6811\u654c\u65e0\u6570\uff0c\u56e0\u6b64\u4e0d\u5f97\u4e0d\u5e94\u5bf9\u6301\u7eed\u4e0d\u65ad\u7684\u9a9a\u6270\uff0c\u751a\u81f3\u6b7b\u4ea1\u5a01\u80c1\u3002\u8fd1\u5e74\u6765\uff0c\u7531\u4e8e\u6211\u8bd5\u56fe\u5c06\u4eba\u5de5\u667a\u80fd\u6c11\u4e3b\u5316\uff0c\u6211\u4e5f\u6536\u5230\u4e86\u4e00\u4e9b\u4eba\u7684\u5f88\u591a\u8fb1\u9a82\uff0c\u6765\u81ea\u90a3\u4e9b\u611f\u5230\u81ea\u5df1\u7684\u7279\u6743\u5730\u4f4d\u53d7\u5230\u5a01\u80c1\u7684\u4eba\u3002\n\u5f53\u4ed6\u4eec\u544a\u8bc9\u6211\u62a5\u544a\u548c\u4ed6\u4eec\u53d1\u73b0\u6211\u8fdd\u53cd\u4e86\u884c\u4e3a\u51c6\u5219\u540e\uff0c\u4ed6\u4eec\u95ee\u6211\u662f\u5426\u6709\u4ec0\u4e48\u8981\u8bf4\u7684\u3002\u6211\u544a\u8bc9\u4ed6\u4eec\u6211\u6ca1\u6709\u3002\u6211\u53ea\u662f\u5728\u601d\u60f3\u4e0a\u4e3a\u4ed6\u4eec\u6240\u8bf4\u7684\u7535\u8bdd\u5185\u5bb9\u505a\u597d\u4e86\u51c6\u5907\uff1a\u901a\u77e5\u6211\u8c03\u67e5\u7ed3\u679c\u3002\u6211\u544a\u8bc9\u4ed6\u4eec\uff0c\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u4f1a\u6709\u4ec0\u4e48\u7528\u5904\uff0c\u56e0\u4e3a\u4ed6\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u8c03\u67e5\u5e76\u5f97\u51fa\u4e86\u4ed6\u4eec\u7684\u7ed3\u8bba\u3002\u6211\u6ca1\u6709\u60c5\u7eea\u4e0a\u7684\u5f39\u6027\u6765\u53c2\u4e0e\u8ba8\u8bba\uff0c\u6211\u544a\u8bc9\u4e86\u4ed6\u4eec\u8fd9\u4e00\u70b9\u3002\u4e00\u4e2a\u4eba\u968f\u540e\u54af\u54af\u5730\u7b11\u4e86\u8d77\u6765\uff0c\u5f53\u6211\u52aa\u529b\u5fcd\u4f4f\u773c\u6cea\u65f6\uff0c\u4ed6\u5f00\u59cb\u957f\u7bc7\u5927\u8bba\u5730\u8c08\u5230\u6211\u7684\u4e0b\u4e00\u9636\u6bb5\u662f\u5982\u4f55\u5e2e\u52a9\u4ed6\u4eec\u51b3\u5b9a\u4e0b\u4e00\u6b65\u7684\u3002\n\u6211\u5df2\u7ecf\u544a\u8bc9\u59d4\u5458\u4f1a\u6211\u4e0d\u80fd\u8fdb\u884c\u8ba8\u8bba\u3002NumFOCUS\u7684\u201c\u4e0d\u53ef\u63a5\u53d7\u7684\u884c\u4e3a\u201d\u4e4b\u4e00\u662f\uff1a\u201c\u5728\u88ab\u8981\u6c42\u505c\u6b62\u4e4b\u540e\uff0c\u7ee7\u7eed\u53d1\u8d77\u4e0e\u67d0\u4eba\u7684\u4e92\u52a8(\u5982\u62cd\u7167\u3001\u5f55\u97f3\u3001\u6d88\u606f\u6216\u5bf9\u8bdd)\u3002\u201d\u56e0\u4e3a\u4ed6\u4e0d\u7406\u776c\u6211\u7684\u8bf7\u6c42\uff0c\u6211\u6253\u65ad\u4e86\u4ed6\uff0c\u91cd\u590d\u8bf4\u6211\u4e0d\u80fd\u7ee7\u7eed\u4e86\uff0c\u7136\u540e\u7ec8\u6b62\u4e86\u901a\u8bdd\u3002\u6211\u771f\u7684\u4e0d\u60f3\u8ba9\u4e00\u4e2a\u7531\u6211\u4e0d\u8ba4\u8bc6\u7684\u4eba\u7ec4\u6210\u7684\u59d4\u5458\u4f1a\u770b\u7740\u6211\u54ed\u6ce3\u3002\n\u6211\u662f\u4e00\u540d\u72ec\u7acb\u7684\u81ea\u7b79\u8d44\u91d1\u7684\u7814\u7a76\u4eba\u5458\u3002\u6211\u6ca1\u6709\u6cd5\u5f8b\u56e2\u961f\u3001\u901a\u8baf\u56e2\u961f\u6216\u540c\u4e8b\u6765\u652f\u6301\u6211\u3002\u6211\u662f\u4f1a\u8bae\u4e0a\u7f55\u89c1\u7684\u4ee3\u8a00\u4eba\uff0c\u4f1a\u8bae\u4e3b\u8981\u7531\u6765\u81ea\u5927\u516c\u53f8\u3001\u8d44\u91d1\u96c4\u539a\u7684\u5927\u5b66\u548c\u70ed\u95e8\u521d\u521b\u516c\u53f8\u7684\u4eba\u7ec4\u6210\u3002\n\u4f3c\u4e4eNumFOCUS\u7684\u653f\u7b56\u5e76\u4e0d\u662f\u4e3a\u4e86\u8003\u8651\u88ab\u6307\u63a7\u4eba\u7684\u6743\u5229\u548c\u5fc3\u7406\u5065\u5eb7\u800c\u8bbe\u8ba1\u7684\u3002\u4ed6\u4eec\u7684\u653f\u7b56\u662f\u201c\u5c3d\u5feb\u8ba9\u88ab\u4e3e\u62a5\u7684\u4eba\u77e5\u9053\u6709\u5173\u4e8e\u4ed6\u4eec\u7684\u6295\u8bc9(\u5728\u54cd\u5e94\u5c0f\u7ec4\u4f1a\u8bae\u4e4b\u524d)\u201d\uff0c\u5728\u63a5\u8fd1\u88ab\u544a\u65f6\uff0c\u4ed6\u4eec\u5e94\u8be5\u8bf4\u2018\u8fd9\u79cd\u884c\u4e3a\u4e0d\u9002\u5408\u6211\u4eec\u7684\u6d3b\u52a8/\u4f1a\u8bae\u2019\uff0c\u4ed6\u4eec\u5e94\u8be5\u201c\u5f3a\u8c03\u8fd9\u79cd\u884c\u4e3a\u7684\u7ed3\u679c/\u5f71\u54cd\uff0c\u5e94\u8be5\u505c\u6b62/\u505c\u6b62\u201d\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u8be5\u6587\u4ef6\u7684\u8bb8\u591a\u90e8\u5206\uff0c\u5305\u62ec\u8fd9\u4e00\u90e8\u5206\uff0c\u90fd\u662f\u6709\u7f6a\u7684\uff0c\u5e76\u4e14\u6ca1\u6709\u663e\u793a\u51fa\u5bf9\u88ab\u544a\u7684\u4efb\u4f55\u8003\u8651\u3002\u8fd9\u79cd\u4ee3\u7801\u7684\u8bef\u7528\u548c\u6b66\u5668\u5316\u7684\u53ef\u80fd\u6027\u4ee4\u4eba\u62c5\u5fe7\u3002\n\u4e3a\u4e86\u652f\u6301\u793e\u533a\uff0c\u6211\u5c3d\u91cf\u8ba9\u81ea\u5df1\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u53c2\u52a0\u516c\u5171\u6f14\u8bb2\u6d3b\u52a8\u3002\u7136\u800c\uff0c\u6f5c\u5728\u7684\u6210\u672c\u592a\u9ad8\u4e86\uff0c\u5bf9\u6211\u4e2a\u4eba\u6765\u8bf4\u4e5f\u6ca1\u6709\u4ec0\u4e48\u771f\u6b63\u7684\u597d\u5904\uff0c\u6240\u4ee5\u6211\u4e0d\u6307\u671b\u5c06\u6765\u4f1a\u63a5\u53d7\u9080\u8bf7\uff0c\u81f3\u5c11\u5728\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\u4e0d\u4f1a\u3002\u6211\u5f53\u7136\u4f1a\u5b8c\u6210\u6211\u5df2\u7ecf\u505a\u51fa\u7684\u90a3\u4e9b\u627f\u8bfa\u3002\n\u6211\u65e0\u6cd5\u5e94\u4ed8NumFOCUS CoC\u6d41\u7a0b\u3002\u867d\u7136\u6211\u76ee\u524d\u5e76\u4e0d\u5904\u4e8e\u5904\u7406\u8fd9\u7c7b\u4e8b\u60c5\u7684\u6700\u4f73\u4f4d\u7f6e\uff0c\u4f46\u6211\u6bd4\u8bb8\u591a\u4eba\u8fc7\u5f97\u90fd\u8981\u597d\u5f97\u591a\u3002\u9996\u5148\uff0c\u6211\u662f\u4e00\u4e2a\u767d\u4eba\uff0c\u987a\u4ece\uff0c\u76f4\u7537\uff0c\u6211\u5728\u751f\u6d3b\u4e2d\u53d6\u5f97\u4e86\u4e00\u4e9b\u6210\u529f\uff0c\u8fd9\u5e2e\u52a9\u4e86\u6211\u7684\u81ea\u4fe1\u3002\u6211\u5728\u7ecf\u6d4e\u4e0a\u4e5f\u662f\u72ec\u7acb\u7684\uff0c\u4e0d\u9700\u8981\u6709\u5f71\u54cd\u529b\u7684NumFOCUS\u7ec4\u7ec7\u7684\u6279\u51c6\u6216\u652f\u6301\u3002\u9762\u5bf9\u540c\u6837\u7684\u60c5\u51b5\uff0c\u8bb8\u591a\u4eba\u5f88\u53ef\u80fd\u4f1a\u611f\u5230\u88ab\u8feb\u63a5\u53d7\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5373\u4f7f\u8fd9\u662f\u4ed6\u4eec\u65e0\u6cd5\u5f88\u597d\u5730\u5e94\u5bf9\u7684\u60c5\u611f\u8d1f\u62c5\u3002\u8bb8\u591a\u6ca1\u6709\u4ece\u6211\u7684\u7279\u6743\u4e2d\u53d7\u76ca\u7684\u4eba\u53ef\u80fd\u751a\u81f3\u6ca1\u6709\u610f\u8bc6\u5230\u4ed6\u4eec\u6709\u80fd\u529b\u8bf4\u201c\u4e0d\u201d\u3002\u59d4\u5458\u4f1a\u8ba4\u4e3a\u6211\u6709\u8db3\u591f\u7684\u7cbe\u795e\u51c6\u5907\u901a\u8fc7\u89c6\u9891\u9762\u5bf9\u56db\u4e2a\u6211\u4e0d\u8ba4\u8bc6\u7684\u4eba\uff0c\u56e0\u4e3a\u4ed6\u4eec\u544a\u8bc9\u6211\u6211\u7684\u201c\u8fdd\u89c4\u884c\u4e3a\u201d\uff0c\u5e76\u8981\u6c42\u6211\u5e2e\u52a9\u4ed6\u4eec\u51b3\u5b9a\u4e0b\u4e00\u6b65\u7684\u884c\u52a8\u3002\u9650\u5236NumFOCUS\u4f1a\u8bae\u6f14\u8bb2\u8005\u4ec5\u9650\u4e8e\u90a3\u4e9b\u51c6\u5907\u597d\u5e76\u80fd\u591f\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\u7684\u4eba\uff0c\u53ef\u80fd\u4f1a\u6781\u5927\u5730\u9650\u5236NumFOCUS\u4f1a\u8bae\u7684\u591a\u6837\u6027\u3002NumFOCUS\u6700\u8fd1\u201c\u641e\u7838\u4e86\u201d\uff0c\u8981\u63d0\u9ad8\u5176\u793e\u533a\u7684\u591a\u6837\u6027\uff0c\u8fd8\u6709\u5f88\u591a\u5de5\u4f5c\u8981\u505a\u3002\u6539\u8fdb\u5176\u884c\u4e3a\u51c6\u5219\u548c\u6267\u884c\u8fc7\u7a0b\uff0c\u4ee5\u6ee1\u8db3\u5176\u8981\u6c42\u4ed6\u4eba\u7684\u5584\u826f\u3001\u516c\u5e73\u3001\u5c0a\u91cd\u548c\u4f53\u8d34\u7684\u7406\u60f3\uff0c\u53ef\u80fd\u6709\u52a9\u4e8e\u671d\u7740\u8fd9\u4e2a\u65b9\u5411\u53d1\u5c55\u3002\n\u6211\u4e0d\u5e0c\u671b\u8fd9\u79cd\u60c5\u51b5\u963b\u6b62\u6211\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u6211\u7528\u5b8c\u5168\u76f8\u540c\u7684\u5e7b\u706f\u7247\u548c\u7d20\u6750\u5236\u4f5c\u4e86\u4e00\u4efd\u65b0\u7684\u6f14\u8bb2\u7684\u72ec\u7acb\u5f55\u97f3\u3002\u4e0d\u8fc7\uff0c\u8fd9\u4e24\u6b21\u6f14\u8bb2\u6211\u90fd\u6ca1\u6709\u4f7f\u7528\u811a\u672c\uff0c\u6240\u4ee5\u63aa\u8f9e\u4e0d\u4f1a\u5b8c\u5168\u76f8\u540c\u3002\u4e0b\u9762\u662f\u89c6\u9891\u3002PowerPoint\u5e7b\u706f\u7247\u662f\u3002\n.", "note_en": "Summary: NumFOCUS found I violated their Code of Conduct (CoC) at JupyterCon because my talk was not \u201ckind\u201d, because I said Joel Grus was \u201cwrong\u201d regarding his opinion that Jupyter Notebook is not a good software development environment. Joel (who I greatly respect, and consider an asset to the data science community) was not involved in NumFOCUS\u2019s action, was not told about it, and did not support it. NumFOCUS did not follow their own enforcement procedure and violated their own CoC, left me hanging for over a week not even knowing what I was accused of, and did not give me an opportunity to provide input before concluding their investigation. I repeatedly told their committee that my emotional resilience was low at the moment due to medical issues, which they laughed about and ignored, as I tried (unsuccessfully) to hold back tears. The process has left me shattered, and I won\u2019t be able to accept any speaking requests for the foreseeable future. I support the thoughtful enforcement of Code of Conducts to address sexist, racist, and harassing behavior, but that is not what happened in this case.\n  In my recent JupyterCon keynote, \u201cI Like Jupyter Notebooks\u201d (re-recording provided at the bottom of this post, if you\u2019re interested in seeing it for yourself), I sought to offer a rebuttal to Joel Grus\u2019 highly influential JupyterCon presentation \u201c I Don\u2019t Like Notebooks\u201d. Joel claimed in his talk that Jupyter is a poor choice for software development and teaching, and I claimed in my talk that it is a good choice. The NumFOCUS committee found me guilty of violating their code of conduct for having not been \u201ckind\u201d in my disagreement with Joel, and for \u201cinsulting\u201d him. The specific reasons given were that:\n I used some of his slides (properly attributed) and a brief clip from one of his videos to explain why I thought he was wrong\n  I was also told that \u201cas a keynote speaker\u201d I would \u201cbe held to a higher standard than others\u201d (although this was not communicated to me prior to my talk, nor what that higher standard is)\n Code of Conducts can be a useful tool, when thoughtfully created and thoughtfully enforced, to address sexism, racism, and harassment, all of which have been problems at tech conferences. Given the  diversity issues in the tech industry, it is important that we continue the work of making conferences more inclusive, particularly to those from marginalized backgrounds. Having a code of conduct with explicit rules against violent threats, unwelcome sexual attention, repeated harassment, sexually explicit pictures, and other harmful behavior is the first step towards addressing and stopping those behaviors. The JupyterCon code provides the following examples of unacceptable behavior, none of which are at all similar to what I did (i.e. saying that someone was wrong on a technical topic, and explaining how and why):\n Posting (or threatening to post) other people\u2019s personally identifying information (\u201cdoxing\u201d)\n  The CoC enforcement process involved conflicting &amp; changing information, no opportunity for me to give input, the stress of a long wait of unknown duration with no information about what I was accused of or what would happen next, and the committee members violated their own CoC during the process\n There were two totally different Codes of Conduct with different requirements linked in different places\n  The existence of, or details about, the CoC were not communicated prior to confirmation of the engagement\n CoC experts recommend avoiding requirements of politeness or other forms of \u201cproper\u201d behavior, but should focus on a specific list of unacceptable behaviors. The JupyterCon CoC, however, is nearly entirely a list of \u201cproper\u201d behaviors (such as \u201cBe welcoming\u201d, \u201cBe considerate\u201d, and \u201cBe friendly\u201d) that are vaguely defined\n CoC experts recommend using a CoC that focuses on a list of unacceptable behaviors. Both the codes linked to JupyterCon have such a link, and none of the unacceptable behavior examples are in any way related or close to what happened in this case. But NumFOCUS nonetheless found me in violation.\n I would rather not have to write this post at all. However I know that people will ask about why my talk isn\u2019t available on the JupyterCon site, so I felt that I should explain exactly what happened. In particular, I was concerned that if only partial information became available, the anti-CoC crowd might jump on this as an example of problems with codes of conduct more generally, or might point at this as part of \u201ccancel culture\u201d (a concept I vehemently disagree with, since what is referred to as \u201ccancellation\u201d is often just \u201cfacing consequences\u201d). Finally, I found that being on the \u201cother side\u201d of a code of conduct issue gave me additional insights into the process, and that it\u2019s important that I should share those insights to help the community in the future.\n  The rest of this post is a fairly detailed account of what happened, for those that are interested.\n  I recently gave a talk at  JupyterCon. My partner Rachel gave a  talk at JupyterCon a couple of years ago, and had a wonderful experience, and I\u2019m a huge fan of Jupyter, so I wanted to support the project. The conference used to be organized by O\u2019Reilly, who have always done a wonderful job of conferences I\u2019ve attended, but this year the conference was instead handled by  NumFOCUS.\n For my talk, I decided to focus on Jupyter as a literate and  exploratory programming environment, using  nbdev. One challenge, however, is that two years earlier Joel Grus had given a brilliant presentation called  I Don\u2019t Like Notebooks which had been so compelling that I have found it nearly impossible to talk about programming in Jupyter without being told \u201cyou should watch this talk which explains why programming in Jupyter is a terrible idea\u201d.\n Joel opened and closed his presentation with some light-hearted digs at me, since I\u2019d asked him ahead of time  not to do such a presentation. So I thought I\u2019d kill two birds with one stone, and take the opportunity to respond directly to him. Not only was his presentation brilliant, but his slides were hilarious, so I decided to directly parody his talk by using (with full credit of course) some of his slides directly. That way people that hadn\u2019t seen his talk could both get to enjoy the fantastic content, and also understand just what I was responding to. For instance, here\u2019s how Joel illustrated the challenge of running cells in the right order:\n  I showed that slide, explaining that it\u2019s Joel\u2019s take on the issue, and then followed up with a slide showing how easy it actually is to run all cells in order:\n  Every slide included a snippet from Joel\u2019s title slide, which, I explained, showed which slides were directly taken from his presentation. I was careful to ensure I did not modify any of his slides in any way. When first introducing his presentation, I described Joel as \u201ca brilliant communicator, really funny, and wrong\u201d. I didn\u2019t make any other comments about Joel (although, for the record, I think he\u2019s awesome, and highly recommend  his book.\n  A week later, I received an email telling me that two CoC reports were filed regarding my JupyterCon keynote presentation. I was told that \u201cThe Code of Conduct Enforcement Team is meeting tomorrow to review the incident and will be contacting you to inform you of the nature of the report and to understand your perspective\u201d.\n The CoC wasn\u2019t mentioned at all until after I\u2019d been invited to speak, had accepted, and had completed the online registration. I had reviewed it at that time, and had been a bit confused. The email I received linked to a  JupyterCon Code of Conduct, but that in turn didn\u2019t provide much detail about what is and isn\u2019t OK, and that in turn linked to a different  NumFOCUS Code of Conduct. A link was also provided to  report violations, which also linked to and named the NumFOCUS CoC.\n I was concerned that I had done something which might be viewed as a violation, and looked forward to hearing about the nature of the report and having a chance to share my perspective. I was heartened that JupyterCon documented that they follow the  NumFOCUS Enforcement Manual. I was also heartened that the manual has a section \u201cCommunicate with the Reported Person about the Incident\u201d which says they will \u201cLet the reported person tell someone on the CoC response team their side of the story; the person who receives their side of the story should be prepared to convey it at the response team meeting\u201d. I was also pleased to see that much of the manual and code of conduct followed the advice (and even used some wording from) the brilliant folks at the  Ada Initiative, who are extremely thoughtful about how to develop and apply codes of conduct.\n One challenge is that the JupyterCon CoC is based on Django\u2019s, which has very general guidelines such as \u201cBe welcoming\u201d and \u201cBe considerate\u201d, which can be taken by different people in different ways. The NumFOCUS code is much clearer, with a specific list of \u201cUnacceptable behaviors\u201d, although that list includes \u201cOther unethical or unprofessional conduct\u201d, which is troublesome, since \u201cunprofessional\u201d can be catch-all gate-keeping mechanism for whatever those in the \u201cprofession\u201d deem to be against their particular norms, and which those outside the in-group (like me) can\u2019t be reasonably be expected to know.\n Some of these issues are discussed in  an excellent presentation from Valerie Aurora, who explains that \u201ca code of conduct should contain\u201d \u201cbehaviors which many people think are acceptable but are unacceptable in your community\u201d, and that \u201cIf you want to list good behaviors or describe the community ideal of behavior, do it in a separate document\u201d, and in particular \u201cDo not require politeness or other forms of \u2018proper\u2019 behavior\u201d. Pretty much  all of the JupyterCon code of conduct is a list of forms of \u2018proper\u2019 behavior (e.g. \u201cbe friendly\u201d, \u201cbe welcoming\u201d, \u201cbe respectful\u201d, etc.) While broader and more subjective values, such as \u201cbe kind\u201d, can be useful as part of a conference\u2019s values, it is less clear if or even how they should be enforced via a code of conduct.\n   The promised call happened the next day. However, the representative told me that they would  not be informing me of the nature of the report at that time, and would not be seeking to understand my perspective at that time. I asked why the change of plans. The representative explained that they had had a committee meeting and had decided to wait until they had spoken to the two reporters.\n I was stunned. The representative could not even commit to a time when they would get back to me, or tell me what would be happening next. I told them that I thought that telling someone that they had a violation report, but then not saying what it is, or when or whether they would be able to provide their side of the story, or providing any time-frame for any next step was cruel. I told them that my emotional resilience was not high, since I\u2019ve been dealing with challenging family health issues, and that I hoped they would consider changing their approach for other people in the future, so they wouldn\u2019t have to deal with an open-ended and obscure charge like I did.\n The representative explained that I had \u201cmade at least two people feel uncomfortable\u201d. I told them that I really didn\u2019t think that was fair. We shouldn\u2019t be held responsible for other people\u2019s feelings. As a proponent of  Nonviolent Communication I believe that we should  share how we feel in reaction to the words or deeds of others, but should not  blame others for these feelings. Furthermore, if it is a requirement that talks make people feel comfortable, that should be clearly communicated and documented (NumFOCUS did neither).\n The next call did not happen for another week (I had made myself available to meet any time). I was shocked to read that the purpose of the call would be to \u201cdiscuss the results of our investigation\u201d. I could not understand how they could have completed their investigation and have results, without any input from me. Nonetheless, I agreed to the call; I figured that all I needed to do was dial in, hear the results, and I was done.\n  One the call, I was surprised to find myself facing four people. The previous call had been with just one, and suddenly being so greatly outnumbered made me feel very intimidated. One of the representatives started by telling me exactly what the finding was. The reporters claimed, and the committee agreed, that there had indeed been a code of conduct violation, specifically in failing to be \u201ckind to others\u201d and in \u201cinsulting others\u201d.\n I was stunned. I think Joel is great, and I know for a fact that he doesn\u2019t mind being called \u201cwrong\u201d (since the call I checked with him). I most certainly did not insult him. I said that I think his approach to coding is sub-optimal, and specifically that it would benefit from using Jupyter. I showed a clip of him live coding to demonstrate that. I found it shocking that part of the findings of the committee would be a claim as to  why I showed a particular slide, especially considering they never even asked. I have no desire to discredit Joel, and I don\u2019t think that my view that his coding setup is sub-optimal should be considered a slight on his character.\n Could it be argued that I was not \u201ckind\u201d. I guess it could. I did a parody. In some ways, this  is kind \u2013 it shows that (and I explicitly said this) that I think his presentation is brilliant and highly influential, to the extent that I put in a significant amount of time studying it and working with the jokes and structure as best as I could. On the other hand, I did indeed say he is wrong, and tried to show the errors he made by pointing them out directly on his slides; I don\u2019t think that\u2019s unkind, but it seems that NumFOCUS committee disagrees. Personally, I don\u2019t think it can be argued I was insulting him. It\u2019s quite possible to debate someone and say they\u2019re wrong, without claiming they\u2019re a bad person or saying mean things about their person. The JupyterCon CoC even mentions this: \u201cWhen we disagree, try to understand why. Disagreements, both social and technical, happen all the time and Jupyter is no exception\u201d.\n There is a huge disparity between the examples that are provided on the Jupyter and NumFOCUS codes compared to what I was being charged with. Here\u2019s the list from NumFOCUS of \u201cunacceptable behaviors\u201d:\n Written or verbal comments which have the effect of excluding people on the basis of membership in a specific group, including level of experience, gender, gender identity and expression, sexual orientation, disability, neurotype, personal appearance, body size, race, ethnicity, age, religion, or nationality\n  Sharing private content, such as emails sent privately or non-publicly, or direct message history, without the sender\u0092s consent\n Continuing to initiate interaction (such as photography, recording, messaging, or conversation) with someone after being asked to stop\n  Publishing (or threatening to post) other people\u0092s personally identifying information (\u0093doxing\u0094), such as physical or electronic addresses, without explicit permission\n   These are behaviors that I strongly agree should be stopped, and the community should unite to stand behind this. But these are not the behaviors that the NumFOCUS committee focused on in this case, or in the sections of the CoC that I was found to have violated.\n I have no idea what happened here \u2013 why some people decided to use a code that was, apparently, written to protect people from sexism, violence, racism, and intimidation, in this way. I know that I\u2019ve made many enemies this year with my advocacy of universal masking, and have had to deal with constant harassment and even death threats as a result. I\u2019ve also received a lot of abuse over recent years from some due to my attempts to democratize AI, from those who have felt their privileged positions threatened.\n  After they told me of the reports and their finding that I had violated the code of conduct, they asked if I had anything to say. I told them I didn\u2019t. I\u2019d only mentally prepared myself for what they said the call was about: to inform me of the findings. I told them I didn\u2019t think it would be that useful, since they\u2019d already completed their investigation and made their findings. I didn\u2019t have a emotional resilience to engage in a discussion, and I told them that. One person then chuckled in response, and as I struggled to hold back tears he started talking at some length about how the next phase is for me to help them decide on next steps.\n I had already told the committee that I wasn\u2019t able to have a discussion. One of the NumFOCUS \u201cunacceptable behaviors\u201d is: \u201cContinuing to initiate interaction (such as photography, recording, messaging, or conversation) with someone after being asked to stop.\u201d Since he was ignoring my request, I interrupted him, repeated that I couldn\u2019t carry on, and terminated the call. I really didn\u2019t feel like having a committee of people I didn\u2019t know watch me sobbing.\n I\u2019m an independent, self-funded researcher. I don\u2019t have a legal team, a comms team, or colleagues to support me. I\u2019m a rare kind of voice at conferences, which are mainly populated by people from big companies, well-funded universities, and hot startups.\n It seems that perhaps the NumFOCUS policy just is not designed to consider the rights and mental health of people that are accused. Their policy says \u201cAs soon as possible, let the reported person know that there is a complaint about them (before the response team meeting)\u201d, and that in approaching the accused, they should say \u2018This behavior isn\u2019t appropriate for our event/meetup\u2019, and they should \u201cEmphasize the result/impact of the behavior and that it should cease/stop\u201d. In short, many parts of the document, including this one, assume guilt, and do not show any consideration for the accused. The potential for misuse and weaponization of such a code is of concern.\n I\u2019ve tried to make myself available for public speaking events when I can, in order to support the community. However, the potential cost is too great, and there is no real upside for me personally, so I don\u2019t expect to be accepting invitations in the future, at least not for quite a while. I will of course complete those commitments I\u2019ve already made.\n I was not able to cope with the NumFOCUS CoC process. Although I\u2019m not in the best position at the moment to handle something like that, I\u2019m much better off than many. For one thing, I\u2019m a white, cis, straight male, and I have had some success in my life which has helped my self-confidence. I\u2019m also financially independent, and do not need the approval or support of the influential NumFOCUS organization. Many people, facing the same situation, may well feel forced to go along with the process, even if it is an emotional burden they are not well able to deal with. Many people who do not benefit from the privilege I have may not even realize they have the ability to say \u201cno\u201d. It was assumed by the committee that I\u2019d have the mental toughness to be ready to face, via video, four people I didn\u2019t know, as they told me of my \u201cviolations\u201d and demanded I help them decide on next steps. Limiting NumFOCUS conference speakers to only those ready and able to handle such a situation may significantly limit the diversity of NumFOCUS conferences. NumFOCUS recently \u201c screwed up badly\u201d and has a lot of  work  to do to improve diversity in its community. Improving its Code of Conduct and enforcement process to meet the ideals of kindness, fairness, respect, and consideration that it demands of others, may help in this direction.\n I don\u2019t want this situation to stop my work from being available, so I\u2019ve created a new independent recording of the talk, using the exact same slides and material. However I didn\u2019t use a script for either talk, so the wording won\u2019t be identical. The video is below. The PowerPoint slides are  \n......", "posttime": "2020-10-29 10:35:05", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u8fdd\u53cd,code", "title": "\u6211\u8fdd\u53cd\u4e86\u884c\u4e3a\u51c6\u5219", "title_en": "I Violated a Code of Conduct", "transed": 1, "url": "https://www.fast.ai/2020/10/28/code-of-conduct/", "via": "", "real_tags": ["\u8fdd\u53cd", "code"]}, {"category": "", "categoryclass": "", "imagename": "7cf484ceeae6bc7fc2161eddc603cd15.jpg", "infoid": 1031890, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u6211\u4eec\u975e\u5e38\u9ad8\u5174\u80fd\u53d1\u5e03Pyston v2\uff0c\u5b83\u662fPython\u7f16\u7a0b\u8bed\u8a00\u7684\u4e00\u4e2a\u66f4\u5feb\u3001\u9ad8\u5ea6\u517c\u5bb9\u7684\u5b9e\u73b0\u3002\u5728\u6211\u4eec\u7684\u5b8f\u89c2\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u7248\u672c2\u6bd4\u80a1\u7968Python3.8\u5feb20%\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u53ef\u80fd\u4f1a\u5728\u60a8\u7684\u4ee3\u7801\u4e0a\u8fd0\u884c\u5f97\u66f4\u5feb\u3002Pyston v2\u53ef\u4ee5\u964d\u4f4e\u670d\u52a1\u5668\u6210\u672c\u3001\u51cf\u5c11\u7528\u6237\u5ef6\u8fdf\u5e76\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u6548\u7387\u3002\nPyston v2\u6613\u4e8e\u90e8\u7f72\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u6b63\u5728\u5bfb\u627e\u66f4\u597d\u7684Python\u6027\u80fd\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u82b15\u5206\u949f\u65f6\u95f4\u5c1d\u8bd5\u4e00\u4e0bPyston\u3002\u8fd9\u6837\u505a\u662f\u52a0\u5feb\u9879\u76ee\u901f\u5ea6\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u4e4b\u4e00\u3002\n\u5728\u51e0\u4e4e\u6ca1\u6709\u7f3a\u70b9\u7684\u60c5\u51b5\u4e0b\uff0cPyston v2\u5728\u8bb8\u591a\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\u63d0\u4f9b\u4e86\u663e\u8457\u7684\u52a0\u901f\u3002\u6211\u4eec\u7684\u91cd\u70b9\u4e00\u76f4\u653e\u5728Web\u670d\u52a1\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\uff0c\u4f46Pyston v2\u5728\u5176\u4ed6\u5de5\u4f5c\u8d1f\u8f7d\u548c\u6d41\u884c\u57fa\u51c6\u4e0a\u7684\u901f\u5ea6\u4e5f\u66f4\u5feb\u3002\n\u6211\u4eec\u7684\u56e2\u961f\u6784\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u516c\u5171Python\u5b8f\u57fa\u51c6\u6d4b\u8bd5\u5957\u4ef6\uff0c\u7528\u4e8e\u6d4b\u91cf\u51e0\u4e2a\u5e38\u7528Python\u9879\u76ee\u7684\u6027\u80fd\u3002\u8be5\u5957\u4ef6\u4e2d\u7684\u57fa\u51c6\u6d4b\u8bd5\u6bd4\u5176\u4ed6Python\u5957\u4ef6\u4e2d\u7684\u57fa\u51c6\u6d4b\u8bd5\u66f4\u5927\uff0c\u8fd9\u4f7f\u5f97\u5b83\u4eec\u66f4\u6709\u53ef\u80fd\u4ee3\u8868\u771f\u5b9e\u4e16\u754c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5c3d\u7ba1\u8fd9\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u6bd4\u5176\u4ed6\u9879\u76ee\u66f4\u4f4e\u7684\u6807\u9898\u6570\u5b57\uff0c\u4f46\u6211\u4eec\u76f8\u4fe1\u5b83\u53ef\u4ee5\u4e3a\u5b9e\u9645\u7528\u4f8b\u5e26\u6765\u66f4\u597d\u7684\u52a0\u901f\u3002Pyston v2\u5728\u5fae\u57fa\u51c6\u6d4b\u8bd5\u4e0a\u4ecd\u7136\u8868\u73b0\u51fa\u66f4\u5feb\u7684\u6027\u80fd\uff0c\u5728chaos.py\u548cnbody.py\u7b49\u6d4b\u8bd5\u4e2d\u7684\u901f\u5ea6\u662f\u6807\u51c6Python\u7684\u4e24\u500d\u3002\n[1]\u9884\u70ed\u65f6\u95f4\u5b9a\u4e49\u4e3a\u57fa\u51c6\u6d4b\u8bd5\u8fbe\u5230\u5cf0\u503c\u6027\u80fd\u768495%\u4e4b\u524d\u7684\u65f6\u95f4\uff1b\u5982\u679c\u65e0\u6cd5\u4e0e\u566a\u58f0\u533a\u5206\uff0c\u5219\u6807\u8bb0\u4e3a\u201cn/a\u201d\u3002\u5ef6\u8fdf\u6d4b\u91cf\u4ec5\u8003\u8651\u9884\u70ed\u540e\u884c\u4e3a\u3002[2]Mypy\u548cPyTorch\u4e0d\u652f\u6301\u4ece\u6e90\u4ee3\u7801\u81ea\u52a8\u6784\u5efa\u5176C\u6269\u5c55\uff0c\u56e0\u6b64\u8fd9\u4e9bPyston\u7f16\u53f7\u4f7f\u7528\u6211\u4eec\u7684\u4e0d\u5b89\u5168\u517c\u5bb9\u6a21\u5f0f[3]PyPy\u57fa\u51c6\u6d4b\u8bd5\u5957\u4ef6\u5df2\u4fee\u6539\u4e3a\u4ec5\u8fd0\u884c\u4e0ePython3.8\u517c\u5bb9\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002\n\u5728\u6211\u4eec\u7684\u76ee\u6807\u57fa\u51c6\u6d4b\u8bd5(djangocms+flaskblogging)\u4e2d\uff0cPyston v2\u5728\u6bcf\u4e2a\u8fdb\u7a0b\u4ec5\u591a\u4f7f\u7528\u51e0\u5146\u5b57\u8282\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u5747\u5ef6\u8fdf\u52a0\u901f1.22\u500d\uff0cP99\u5ef6\u8fdf\u63d0\u9ad81.18\u500d\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u6295\u5165\u65f6\u95f4\u6765\u4f18\u5316\u5176\u4ed6\u57fa\u51c6\u3002\n\u201cp99\u5ef6\u8fdf\u201d\u662f\u54cd\u5e94\u65f6\u95f4\u5206\u5e03\u7684\u7b2c99\u4e2a\u767e\u5206\u4f4d\u6570\uff0c\u662fWeb\u670d\u52a1\u4e0a\u4e0b\u6587\u4e2d\u5e38\u7528\u7684\u5ea6\u91cf\u6807\u51c6\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u6d1e\u5bdf\u901a\u8fc7\u53d6\u5e73\u5747\u503c\u800c\u4e22\u5931\u7684\u7528\u6237\u4f53\u9a8c\u3002PyPy\u5728djangocms\u4e0a\u7684\u9ad8p99\u5ef6\u8fdf\u6765\u81ea\u5468\u671f\u6027\u7684\u5ef6\u8fdf\u5cf0\u503c\uff0c\u5927\u6982\u662f\u56e0\u4e3a\u5783\u573e\u6536\u96c6\u6682\u505c\u3002CPython\u548cPyston\u90fd\u663e\u793a\u51fa\u5468\u671f\u6027\u7684\u5c16\u5cf0\uff0c\u5927\u6982\u6765\u81ea\u5b83\u4eec\u7684\u5468\u671f\u6536\u96c6\u5668\uff0c\u4f46\u5b83\u4eec\u7684\u9891\u7387\u90fd\u8f83\u4f4e\uff0c\u5e45\u5ea6\u4e5f\u5c0f\u5f97\u591a\u3002\nMypy\u548cPyTorch\u57fa\u51c6\u6d4b\u8bd5\u663e\u793a\u4e86Pyston v2\u7684\u81ea\u7136\u8fb9\u754c\u3002\u8fd9\u4e24\u4e2a\u57fa\u51c6\u6d4b\u8bd5\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5728C\u6269\u5c55\u4e2d\u5b8c\u6210\u7684\uff0c\u800cC\u6269\u5c55\u4e0d\u53d7\u6211\u4eec\u7684Python\u52a0\u901f\u7684\u5f71\u54cd\u3002\u6211\u4eec\u672c\u673a\u652f\u6301C API\uff0c\u5e76\u4e14\u6ca1\u6709\u6a21\u62df\u5c42\uff0c\u56e0\u6b64\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u63d0\u4f9b\u5bf9mypy\u6027\u80fd\u7684\u5c0f\u5e45\u63d0\u5347\uff0c\u5e76\u4e14\u4e0d\u4f1a\u964d\u4f4epytorch\u6216numpy\u7684\u6027\u80fd\u3002\u60a8\u7684\u6536\u76ca\u5c06\u53d6\u51b3\u4e8e\u60a8\u6df7\u5408\u4f7f\u7528Python\u548cC\u6269\u5c55\u5de5\u4f5c\u3002\n\u6211\u4eec\u8ba1\u5212\u5728\u672a\u6765\u7684\u535a\u5ba2\u6587\u7ae0\u4e2d\u66f4\u8be6\u7ec6\u5730\u4ecb\u7ecd\uff0c\u4f46\u6211\u4eec\u5728Pyston v2\u4e2d\u4f7f\u7528\u7684\u4e00\u4e9b\u6280\u672f\u5305\u62ec\uff1a\n\u7531\u4e8ePyston\u662fCPython\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u6211\u4eec\u76f8\u4fe1\u5b83\u662f\u5f53\u4eca\u53ef\u7528\u7684\u6700\u517c\u5bb9\u7684\u66ff\u4ee3Python\u5b9e\u73b0\u4e4b\u4e00\u3002\u5b83\u652f\u6301\u4e0eCPython\u76f8\u540c\u7684\u6240\u6709\u529f\u80fd\u548cC API\u3002\n\u867d\u7136Pyston\u5728\u7406\u8bba\u4e0a\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u5b9e\u9645\u4e0a\u4efb\u4f55\u65b0\u7684Python\u5b9e\u73b0\u90fd\u6709\u4e00\u4e9b\u4e34\u65f6\u7684\u517c\u5bb9\u6027\u969c\u788d\u3002\u8bf7\u67e5\u770b\u6211\u4eec\u7684\u7ef4\u57fa\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f\u3002\nPyston v2.0\u7acb\u5373\u4ee5\u9884\u6784\u5efa\u5305\u7684\u5f62\u5f0f\u63d0\u4f9b\u3002\u76ee\u524d\u6211\u4eec\u6709\u9488\u5bf9Ubuntu 18.04\u548c20.04x86_64\u7684\u5305\u3002\u5982\u679c\u60a8\u5e0c\u671b\u652f\u6301\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8bf7\u5728\u6211\u4eec\u7684\u95ee\u9898\u8ddf\u8e2a\u5668\u4e2d\u63d0\u4ea4\u95ee\u9898\uff0c\u8ba9\u6211\u4eec\u77e5\u9053\u8fd9\u4e00\u70b9\u3002\n\u8bd5\u7528Pyston\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u5b89\u88c5\u6211\u4eec\u7684\u8f6f\u4ef6\u5305\uff0c\u7528pyston3\u66ff\u6362python3\uff0c\u7136\u540e\u7528pip-pyston3 install\u91cd\u65b0\u5b89\u88c5\u60a8\u7684\u4f9d\u8d56\u9879(\u5c3d\u7ba1\u6709\u5173setuptools\u7684\u5df2\u77e5\u95ee\u9898\uff0c\u8bf7\u53c2\u9605\u6211\u4eec\u7684wiki)\u3002\u5982\u679c\u60a8\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u81ea\u52a8\u6784\u5efa\uff0c\u5219\u66f4\u6539\u5e94\u8be5\u53ea\u9700\u51e0\u884c\u3002\n\u6211\u4eec\u7684\u8ba1\u5212\u662f\u5728\u672a\u6765\u5c06\u4ee3\u7801\u5f00\u6e90\uff0c\u4f46\u662f\u7531\u4e8e\u7f16\u8bd1\u5668\u9879\u76ee\u5f88\u6602\u8d35\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u518d\u6709\u5584\u610f\u7684\u4f01\u4e1a\u8d5e\u52a9\uff0c\u6240\u4ee5\u5728\u6211\u4eec\u5b8c\u5584\u6211\u4eec\u7684\u5546\u4e1a\u6a21\u5f0f\u671f\u95f4\uff0c\u5b83\u76ee\u524d\u662f\u5173\u95ed\u6e90\u4ee3\u7801\u7684\u3002\n\u6211\u4eec\u6b63\u5728\u4e3a\u5f00\u53d1\u4eba\u5458\u8bbe\u8ba1Pyston\uff0c\u5e76\u4e50\u4e8e\u542c\u53d6\u60a8\u7684\u9700\u6c42\u548c\u7ecf\u9a8c\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u4e0d\u548c\u8c10\u670d\u52a1\u5668\uff0c\u60a8\u53ef\u4ee5\u5728\u90a3\u91cc\u4e0e\u6211\u4eec\u804a\u5929\u3002\u5982\u679c\u60a8\u60f3\u8981\u5546\u4e1a\u652f\u6301\u7684Pyston\u7248\u672c\uff0c\u8bf7\u7ed9\u6211\u4eec\u53d1\u7535\u5b50\u90ae\u4ef6\u3002\n\u6211\u4eec\u5df2\u7ecf\u9488\u5bf9\u51e0\u4e2a\u7528\u4f8b\u5bf9Pyston\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u4f46\u6211\u4eec\u6e34\u671b\u542c\u5230\u65b0\u7684\u7528\u4f8b\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u5b83\u66f4\u6709\u76ca\u5904\u3002\u5982\u679c\u60a8\u9047\u5230\u4efb\u4f55\u95ee\u9898\u6216\u5b9e\u4f8b\uff0cPyston\u6ca1\u6709\u50cf\u9884\u671f\u7684\u90a3\u6837\u63d0\u4f9b\u5e2e\u52a9\uff0c\u8bf7\u8ba9\u6211\u4eec\u77e5\u9053\uff01\n\u6211\u4eec\u5728Dropbox\u8bbe\u8ba1\u4e86Pyston v1\u6765\u52a0\u901fPython\u7684Web\u670d\u52a1\u5de5\u4f5c\u8d1f\u8f7d\u3002\u9879\u76ee\u7ed3\u675f\u540e\uff0c\u6211\u4eec\u56e2\u961f\u4e2d\u7684\u4e00\u4e9b\u4eba\u96c6\u601d\u5e7f\u76ca\uff0c\u5982\u679c\u6211\u4eec\u518d\u505a\u4e00\u6b21\uff0c\u6211\u4eec\u4f1a\u5982\u4f55\u4e0d\u540c\u5730\u505a\u8fd9\u4ef6\u4e8b\u3002\u57282020\u5e74\u521d\uff0c\u6211\u4eec\u6709\u8db3\u591f\u591a\u7684\u4e1c\u897f\u53ef\u4ee5\u6210\u7acb\u4e00\u5bb6\u516c\u53f8\uff0c\u5168\u804c\u4ece\u4e8bPyston\u7684\u5de5\u4f5c\u3002\nPyston v2\u7684\u7075\u611f\u6765\u81ea\u4e8e\u6700\u521d\u7684Pyston v1\uff0c\u4f46\u4ece\u6280\u672f\u4e0a\u8bb2\u4e0e\u4e4b\u65e0\u5173\u3002\n\u6211\u4eec\u7684\u4f7f\u547d\u662f\u8ba9Python\u53d8\u5f97\u66f4\u5feb\uff0c\u6211\u4eec\u6709\u5f88\u591a\u60f3\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u8fd9\u610f\u5473\u7740\u6211\u4eec\u6b63\u5728\u79ef\u6781\u5bfb\u627e\u52a0\u5165\u56e2\u961f\u7684\u4eba\u3002\u5982\u679c\u4f60\u60f3\u53c2\u4e0e\u8fdb\u6765\uff0c\u8bf7\u544a\u8bc9\u6211\u4eec\u3002\u5426\u5219\uff0c\u8bf7\u7ee7\u7eed\u5173\u6ce8\u672a\u6765\u7684\u7248\u672c\uff0c\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb\u6211\u4eec\uff01", "note_en": "We\u2019re very excited to release Pyston v2, a faster and highly compatible implementation of the Python programming language. Version 2 is 20% faster than stock Python 3.8 on our macrobenchmarks. More importantly, it is likely to be faster on your code. Pyston v2 can reduce server costs, reduce user latencies, and improve developer productivity.\n Pyston v2 is easy to deploy, so if you\u2019re looking for better Python performance, we encourage you to take five minutes and  try Pyston. Doing so is one of the easiest ways to speed up your project.\n  Pyston v2 provides a noticeable speedup on many workloads while having few drawbacks. Our focus has been on web serving workloads, but Pyston v2 is also faster on other workloads and popular benchmarks.\n Our team put together a new  public Python macrobenchmark suite that measures the performance of several commonly-used Python projects. The benchmarks in this suite are larger than those found in other Python suites, making them more likely to be representative of real-world applications. Even though this gives us a lower headline number than other projects, we believe it translates to better speedups for real use cases. Pyston v2 still shows sped-up performance on microbenchmarks, being twice as fast as standard Python on tests like chaos.py and nbody.py.\n   [1] Warmup time is defined as time until the benchmark reached 95% of peak performance; if it was not distinguishable from noise it is marked \u201cn/a\u201d. Only post-warmup behavior is considered for latency measurement. [2] mypy and PyTorch don\u2019t support automatically building their C extensions from source, so these Pyston numbers use our unsafe compatibility mode [3] The PyPy benchmark suite was modified to only run the benchmarks that are compatible with Python 3.8\n  In our targeted benchmarks (djangocms + flaskblogging), Pyston v2 provides an average 1.22x speedup for mean latency and an 1.18x improvement for p99 latency while using a just few more megabytes per process. We have not yet invested time in optimizing the other benchmarks.\n \u201cp99 latency\u201d is the upper 99th percentile of the response-time distribution, and is a common metric used in web serving contexts since it can provide insight into user experience that is lost by taking an average. PyPy\u2019s high p99 latency on djangocms comes from periodic latency spikes, presumably from garbage collection pauses. CPython and Pyston both exhibit periodic spikes, presumably from their cycle collectors, but they are both less frequent and much smaller in magnitude.\n The mypy and PyTorch benchmarks show a natural boundary of Pyston v2. These benchmarks both do the bulk of their work in C extensions which are unaffected by our Python speedups. We natively support the C API and do not have an emulation layer, so we are still able to provide a small boost to mypy performance and do not degrade pytorch or numpy performance. Your benefit will depend on your mix of Python and C extension work.\n  We\u2019re planning on going into more detail in future blog posts, but some of the techniques we use in Pyston v2 include:\n   Since Pyston is a fork of CPython, we believe it is one of the most compatible alternative Python implementations available today. It supports all the same features and C API that CPython does.\n While Pyston is identically functional in theory, in practice there are some temporary compatibility hurdles for any new Python implementation. Please see  our wiki for details.\n  Pyston v2.0 is  immediately available as a pre-built package. Currently, we have packages for Ubuntu 18.04 and 20.04 x86_64. If you would like support for a different OS, let us know by filing an issue in our  issue tracker.\n Trying out Pyston is as simple as installing our package, replacing  python3 with  pyston3, and reinstalling your dependencies with  pip-pyston3 install (though see our  wiki for a known issue about setuptools). If you already have an automated build set up, the change should be just a few lines.\n Our plan is to open-source the code in the future, but since compiler projects are expensive and we no longer have benevolent corporate sponsorship, it is currently closed-source while we iron out our business model.\n  We are designing Pyston for developers and love to hear about your needs and experiences. So, we\u2019ve set up a  Discord server where you can chat with us. If you\u2019d like a commercially-supported version of Pyston, please  send us an email.\n We\u2019ve optimized Pyston for several use cases but are eager to hear about new ones so that we can make it even more beneficial. If you run into any problems or instances where Pyston does not help as much as expected, please let us know!\n  We designed Pyston v1 at Dropbox to speed up Python for its web serving workloads. After the project ended, some of us from the team brainstormed how we would do it differently if we were to do it again. In early 2020, enough pieces were in place for us to start a company and work on Pyston full-time.\n Pyston v2 is inspired by but is technically unrelated to the original Pyston v1 effort.\n  We\u2019re on a mission to make Python faster and have plenty of ideas to do so. That means we\u2019re actively looking for people to join the team.  Let us know if you\u2019d like to get involved. Otherwise stay tuned for future releases and reach out if you have any questions!", "posttime": "2020-10-29 10:34:42", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "python,pyston,v2", "title": "Pyston v2\uff1a\u66f4\u5feb\u7684Python", "title_en": "Pyston v2: Faster Python", "transed": 1, "url": "https://blog.pyston.org/2020/10/28/pyston-v2-20-faster-python/", "via": "", "real_tags": ["python", "pyston", "v2"]}, {"category": "", "categoryclass": "", "imagename": "022ae1f163e3837faf7572f4d1b4761b.png", "infoid": 1031889, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u7f57(MCMC)\u662f\u4e00\u7c7b\u529f\u80fd\u5f3a\u5927\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u4ece\u5df2\u77e5\u76f4\u5230(\u672a\u77e5)\u5f52\u4e00\u5316\u5e38\u6570\u7684\u6982\u7387\u5206\u5e03\u4e2d\u8fdb\u884c\u62bd\u6837\u3002\u4f46\u662f\u5728\u6211\u4eec\u6df1\u5165\u7814\u7a76MCMC\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u6765\u8003\u8651\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u60a8\u53ef\u80fd\u9996\u5148\u60f3\u8981\u8fdb\u884c\u91c7\u6837\u3002\n\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u662f\uff1a\u53ea\u8981\u4f60\u5bf9\u6837\u672c\u672c\u8eab\u611f\u5174\u8da3(\u4f8b\u5982\uff0c\u5728\u8d1d\u53f6\u65af\u63a8\u7406\u4e2d\u63a8\u65ad\u672a\u77e5\u53c2\u6570)\uff0c\u6216\u8005\u4f60\u9700\u8981\u5b83\u4eec\u6765\u8fd1\u4f3c\u51fd\u6570\u7684\u671f\u671b\u503cw.r.t\u3002\u5bf9\u4e8e\u6982\u7387\u5206\u5e03(\u4f8b\u5982\uff0c\u4ece\u7edf\u8ba1\u7269\u7406\u4e2d\u7684\u5fae\u6001\u5206\u5e03\u8ba1\u7b97\u70ed\u529b\u5b66\u91cf)\uff0c\u6709\u65f6\u53ea\u6709\u6982\u7387\u5206\u5e03\u7684\u6a21\u5f0f\u662f\u4e3b\u8981\u611f\u5174\u8da3\u7684\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u901a\u8fc7\u6570\u503c\u4f18\u5316\u83b7\u5f97\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5168\u62bd\u6837\u3002\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u9664\u4e86\u6700\u57fa\u672c\u7684\u6982\u7387\u5206\u5e03\u5916\uff0c\u5bf9\u4efb\u4f55\u6982\u7387\u5206\u5e03\u8fdb\u884c\u62bd\u6837\u90fd\u662f\u4e00\u9879\u8270\u5de8\u7684\u4efb\u52a1\u3002\u9006\u53d8\u6362\u62bd\u6837\u662f\u4ece\u6982\u7387\u5206\u5e03\u4e2d\u62bd\u6837\u7684\u4e00\u79cd\u57fa\u672c\u65b9\u6cd5\uff0c\u4f46\u9700\u8981\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\uff0c\u800c\u7d2f\u79ef\u5206\u5e03\u51fd\u6570\u53c8\u9700\u8981\u77e5\u9053\u901a\u5e38\u672a\u77e5\u7684\u5f52\u4e00\u5316\u5e38\u6570\u3002\u73b0\u5728\u539f\u5219\u4e0a\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u6570\u503c\u79ef\u5206\u6765\u83b7\u5f97\u5f52\u4e00\u5316\u5e38\u6570\uff0c\u4f46\u968f\u7740\u7ef4\u6570\u7684\u589e\u52a0\uff0c\u8fd9\u5f88\u5feb\u5c31\u4e0d\u53ef\u884c\u4e86\u3002\u62d2\u7edd\u62bd\u6837\u4e0d\u9700\u8981\u5f52\u4e00\u5316\u5206\u5e03\uff0c\u4f46\u6709\u6548\u5730\u5b9e\u73b0\u5b83\u9700\u8981\u5927\u91cf\u5173\u4e8e\u5174\u8da3\u5206\u5e03\u7684\u77e5\u8bc6\uff0c\u800c\u4e14\u5b83\u5f3a\u70c8\u5730\u53d7\u5230\u7ef4\u6570\u8bc5\u5492\u7684\u5f71\u54cd\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u7684\u6548\u7387\u968f\u7740\u53d8\u91cf\u6570\u91cf\u7684\u589e\u52a0\u800c\u8fc5\u901f\u4e0b\u964d\u3002\u8fd9\u5c31\u662f\u5f53\u4f60\u9700\u8981\u4e00\u79cd\u667a\u80fd\u7684\u65b9\u6cd5\u4ece\u4f60\u7684\u5206\u5e03\u4e2d\u83b7\u5f97\u5177\u6709\u4ee3\u8868\u6027\u7684\u6837\u672c\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u9700\u8981\u77e5\u9053\u5f52\u4e00\u5316\u5e38\u6570\u3002\nMCMC\u7b97\u6cd5\u5c31\u662f\u8fd9\u6837\u4e00\u7c7b\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u8ffd\u6eaf\u5230Metropolis\u7b49\u4eba\u7684\u4e00\u7bc7\u5f00\u521b\u6027\u7684\u8bba\u6587\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u7b2c\u4e00\u4e2aMCMC\u7b97\u6cd5\uff0c\u76f8\u5e94\u5730\u79f0\u4e3aMetropolis\u7b97\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u4e8c\u7ef4\u786c\u7403\u7cfb\u7edf\u7684\u72b6\u6001\u65b9\u7a0b\u3002\u5b9e\u9645\u4e0a\uff0c\u4ed6\u4eec\u6b63\u5728\u5bfb\u627e\u4e00\u79cd\u901a\u7528\u7684\u65b9\u6cd5\u6765\u8ba1\u7b97\u7edf\u8ba1\u7269\u7406\u4e2d\u51fa\u73b0\u7684\u671f\u671b\u503c\u3002\n\u5728\u8fd9\u7bc7\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u4ecb\u7ecd\u4e86MCMC\u91c7\u6837\u7684\u57fa\u7840\u77e5\u8bc6\uff1b\u5728\u968f\u540e\u7684\u6587\u7ae0\u4e2d\uff0c\u6211\u5c06\u4ecb\u7ecd\u51e0\u4e2a\u91cd\u8981\u7684\u3001\u65e5\u76ca\u590d\u6742\u548c\u5f3a\u5927\u7684MCMC\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u89e3\u51b3\u4e86\u4eba\u4eec\u5728\u4f7f\u7528Metropolis-Hastings\u7b97\u6cd5\u65f6\u7ecf\u5e38\u9762\u4e34\u7684\u4e0d\u540c\u56f0\u96be\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u60a8\u5c06\u5bf9\u8fd9\u4e9b\u6311\u6218\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u8fd9\u4e9b\u6311\u6218\u6709\u4e00\u4e2a\u575a\u5b9e\u7684\u7406\u89e3\u3002\u540c\u65f6\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u4f5c\u4e3aMonad-Bayes\u7cfb\u5217\u4e2dMCMC\u65b9\u6cd5\u7684\u53c2\u8003\u3002\u6b64\u5916\uff0c\u6211\u5e0c\u671b\u63d0\u4f9b\u7684\u7b14\u8bb0\u672c\u4e0d\u4ec5\u80fd\u6fc0\u53d1\u60a8\u63a2\u7d22\u5404\u79cd\u53c2\u6570/\u6982\u7387\u5206\u5e03\u7684MCMC\u7b97\u6cd5\u884c\u4e3a\u7684\u5174\u8da3\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u5b9e\u73b0\u548c\u7406\u89e3\u6211\u6240\u4ecb\u7ecd\u7684\u7b97\u6cd5\u57fa\u672c\u7248\u672c\u7684\u6709\u7528\u6269\u5c55\u7684\u57fa\u7840\u3002\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u91c7\u6837\u4e86\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770bMCMC\u7684\u6838\u5fc3\uff1a\u9a6c\u5c14\u53ef\u592b\u94fe\u3002\u4ec0\u4e48\u662f\u9a6c\u5c14\u53ef\u592b\u94fe\uff1f\u5728\u6ca1\u6709\u6240\u6709\u6280\u672f\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\uff0c\u9a6c\u5c14\u53ef\u592b\u94fe\u662f\u67d0\u4e2a\u72b6\u6001\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u968f\u673a\u72b6\u6001\u5e8f\u5217\uff0c\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e2d\uff0c\u4e0b\u4e00\u4e2a\u9009\u62e9\u67d0\u4e2a\u72b6\u6001\u7684\u6982\u7387\u53ea\u53d6\u51b3\u4e8e\u94fe\u4e2d\u7684\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0d\u53d6\u51b3\u4e8e\u4e4b\u524d\u7684\u5386\u53f2\uff1a\u5b83\u662f\u65e0\u8bb0\u5fc6\u7684\uff0c\u5728\u4e00\u5b9a\u6761\u4ef6\u4e0b\uff0c\u9a6c\u5c14\u53ef\u592b\u94fe\u5728\u4e00\u5b9a\u6570\u91cf\u7684\u72b6\u6001\u4e4b\u540e\u6536\u655b\u5230\u552f\u4e00\u7684\u5e73\u7a33\u72b6\u6001\u5206\u5e03\u3002\u4ece\u8fd9\u4e2a\u6570\u5b57\u5f00\u59cb\uff0c\u9a6c\u5c14\u53ef\u592b\u94fe\u4e2d\u7684\u72b6\u6001\u6839\u636e\u4e0d\u53d8\u5206\u5e03\u5206\u5e03\u3002\n\u4e3a\u4e86\u4ece\u5206\u5e03\u03c0(X)\\pi(X)\u03c0(X)\u4e2d\u91c7\u6837\uff0cMCMC\u7b97\u6cd5\u6784\u9020\u5e76\u6a21\u62df\u5176\u5e73\u7a33\u5206\u5e03\u4e3a\u03c0(X)\\pi(X)\u03c0(X)\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u8fd9\u610f\u5473\u7740\uff0c\u5728\u521d\u59cb\u201c\u8001\u5316\u201d\u9636\u6bb5\u4e4b\u540e\uff0c\u8be5\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u72b6\u6001\u662f\u6309\u7167\u03c0(X)\\pi(X)\u03c0(X)\u5206\u5e03\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u5b58\u50a8\u72b6\u6001\u5c31\u53ef\u4ee5\u4ece\u03c0(X)\\pi(X)\u03c0(X)\u4e2d\u83b7\u5f97\u6837\u672c\u3002\n\u51fa\u4e8e\u8bf4\u6559\u7684\u76ee\u7684\uff0c\u73b0\u5728\u8ba9\u6211\u4eec\u540c\u65f6\u8003\u8651\u79bb\u6563\u7684\u72b6\u6001\u7a7a\u95f4\u548c\u79bb\u6563\u7684\u201c\u65f6\u95f4\u201d\u3002\u8868\u5f81\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u5173\u952e\u91cf\u662f\u8f6c\u79fb\u7b97\u5b50T(xi+1|xi)T(xi+1}|xi)T(xi+1\u200b|xi\u200b)\uff0c\u5b83\u7ed9\u51fa\u4e86\u4f60\u5728\u67d0\u4e00\u65f6\u523b\u5904\u4e8e\u72b6\u6001xi+1x{i+1}xi+1\u200b\u7684\u6982\u7387\u3002\u5047\u8bbe\u94fe\u5728\u65f6\u95f4i i\u5904\u5904\u4e8e\u72b6\u6001xi x_i x i\u200b\uff0c\u5219i+1i+1i+1\u3002\n\u73b0\u5728\uff0c\u4e3a\u4e86\u597d\u73a9(\u4e5f\u662f\u4e3a\u4e86\u8bf4\u660e)\uff0c\u8ba9\u6211\u4eec\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u552f\u4e00\u5e73\u7a33\u5206\u5e03\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\u3002\u6211\u4eec\u5c06\u4ece\u4e00\u4e9b\u7ed8\u56fe\u7684\u5bfc\u5165\u548c\u8bbe\u7f6e\u5f00\u59cb\uff1a\n\u9a6c\u5c14\u53ef\u592b\u94fe\u5c06\u5728\u7531\u4e09\u79cd\u5929\u6c14\u72b6\u6001\u7ec4\u6210\u7684\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u4e0a\u8df3\u8dc3\uff1a\n\u5728\u79bb\u6563\u72b6\u6001\u7a7a\u95f4\u4e2d\uff0c\u8f6c\u6362\u8fd0\u7b97\u7b26\u53ea\u662f\u4e00\u4e2a\u77e9\u9635\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u5217\u548c\u884c\u5bf9\u5e94\u4e8e\u6674\u5929\u3001\u591a\u4e91\u548c\u4e0b\u96e8\u7684\u5929\u6c14\u3002\u6211\u4eec\u4e3a\u6240\u6709\u8f6c\u6362\u6982\u7387\u9009\u62e9\u6216\u591a\u6216\u5c11\u5408\u7406\u7684\u503c\uff1a\n\u8fd9\u4e9b\u884c\u8868\u793a\u94fe\u5f53\u524d\u53ef\u80fd\u5904\u4e8e\u7684\u72b6\u6001\u4ee5\u53ca\u94fe\u53ef\u80fd\u8f6c\u6362\u5230\u7684\u5217\u3002\u5982\u679c\u6211\u4eec\u5c06\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u4e00\u4e2a\u201c\u65f6\u95f4\u201d\u6b65\u9aa4\u4f5c\u4e3a\u4e00\u4e2a\u5c0f\u65f6\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u662f\u6674\u5929\uff0c\u90a3\u4e48\u5728\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u5c0f\u65f6\u91cc\u670960%\u7684\u53ef\u80fd\u6027\u4fdd\u6301\u6674\u6717\uff0c30%\u7684\u53ef\u80fd\u6027\u5728\u4e0b\u4e00\u4e2a\u5c0f\u65f6\u6211\u4eec\u4f1a\u6709\u591a\u4e91\u7684\u5929\u6c14\uff0c\u53ea\u670910%\u7684\u53ef\u80fd\u6027\u5728\u4e4b\u524d\u6674\u6717\u4e4b\u540e\u7acb\u5373\u4e0b\u96e8\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u6bcf\u4e00\u884c\u7684\u603b\u548c\u5fc5\u987b\u662f1\u3002\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u6bcf\u4e2a\u72b6\u6001\u7684\u7ecf\u9a8c\u6982\u7387\u4f5c\u4e3a\u94fe\u957f\u7684\u51fd\u6570\u6765\u76d1\u63a7\u9a6c\u5c14\u53ef\u592b\u94fe\u5411\u5176\u5e73\u7a33\u5206\u5e03\u7684\u6536\u655b\uff1a\nDef Despine(ax\uff0cspines=(&#39\uff1btop&#39\uff1b\uff0c&#39\uff1bleft&#39\uff1b\uff0c&#39\uff1bright&#39\uff1b))\uff1a\u5bf9\u4e8e\u810a\u690e\u4e2d\u7684\u810a\u690e\uff1aax.spines[spines].SET_Visible(False)Figure\uff0cax=PLT.subplots()width=1000offsets=range(1\uff0cn_step\uff0c5)for i\uff0c\u679a\u4e3e\u4e2d\u7684\u6807\u7b7e(State_Space)\uff1aax.lot(\u504f\u79fb\uff0c[np.\u3002SUM(STATES[\uff1aOFFSET]==I)/\u504f\u79fb\u91cf\u7684\u504f\u79fb\u91cf]\uff0cLABEL=LABEL)ax.SET_xlabel(&#34\uff1b\u6b65\u6570&#34\uff1b)ax.SET_ylabel(&#34\uff1b\u4f3c\u7136\u5ea6&#34\uff1b)ax.Legend(FRAMON=FALSE)Despine(ax\uff0c(&#39\uff1btop&#39\uff1b\uff0c&#39\uff1bright&#39\uff1b))plt.show()\u3002\n\u8fd9\u5f88\u6709\u8da3\uff0c\u4f46\u56de\u5230\u91c7\u6837\u4efb\u610f\u6982\u7387\u5206\u5e03\u03c0\\pi\u03c0\uff0c\u5b83\u53ef\u4ee5\u662f\u79bb\u6563\u7684\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f1a\u7ee7\u7eed\u8ba8\u8bba\u8f6c\u79fb\u77e9\u9635T T\uff0c\u4e5f\u53ef\u4ee5\u662f\u8fde\u7eed\u7684\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cT\u5c06\u662f\u8f6c\u79fb\u6838\uff0c\u4ece\u73b0\u5728\u5f00\u59cb\uff0c\u6211\u4eec\u8003\u8651\u7684\u662f\u8fde\u7eed\u5206\u5e03\uff0c\u4f46\u8fd9\u91cc\u7ed9\u51fa\u7684\u6240\u6709\u6982\u5ff5\u90fd\u8f6c\u79fb\u5230\u79bb\u6563\u7684\u60c5\u51b5\u3002\n\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8bbe\u8ba1\u8f6c\u6362\u6838\uff0c\u5373\u4e0b\u4e00\u4e2a\u72b6\u6001\u5df2\u7ecf\u4ece\u03c0\\pi\u03c0\u4e2d\u63d0\u53d6\u51fa\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u505a\u4e86\uff0c\u5c31\u50cf\u6211\u4eec\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\u5c06\u2026\u4e00\u6837\u3002Well\u2026\u3002\u7acb\u5373\u4ece\u03c0\\pi\u03c0\u83b7\u53d6\u6837\u672c\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u8981\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u4ece\u03c0\\pi\u03c0\u83b7\u53d6\u6837\u672c\uff0c\u4f46\u6211\u4eec\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5426\u5219\u60a8\u4e0d\u4f1a\u9605\u8bfb\u672c\u6587\uff0c\u5bf9\u5417\uff1f\n\u4e00\u79cd\u7ed5\u8fc7\u6b64\u95ee\u9898\u7684\u65b9\u6cd5\u662f\u5c06\u8f6c\u79fb\u6838T(xi+1|xi)T(xi+1}|xi)T(xi+1\u200b|xi\u200b)\u5206\u6210\u4e24\u90e8\u5206\uff1a\u63d0\u8bae\u6b65\u9aa4\u548c\u63a5\u53d7/\u62d2\u7edd\u6b65\u9aa4\uff0c\u8be5\u63d0\u8bae\u6b65\u9aa4\u4ee5\u63d0\u8bae\u5206\u5e03Q(xi+1|xi)Q(xi+1}|xi)Q(x\u3002I+1\u200b|x i\u200b)\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4e2d\u53d6\u6837\u94fe\u7684\u53ef\u80fd\u7684\u4e0b\u4e00\u79cd\u72b6\u6001\uff0c\u9664\u4e86\u53ef\u4ee5\u4ece\u4e2d\u53d6\u6837\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\u8fd9\u4e2a\u5206\u5e03\u3002\u4f46,\u3002Said\u63a5\u53d7/\u62d2\u7edd\u6b65\u9aa4\u662f\u8f6c\u6362\u6838\u7684\u7b2c\u4e8c\u90e8\u5206\uff0c\u7528\u4e8e\u6821\u6b63\u4eceq\u2260\u03c0q\\neq\\pi q\ue020\u200b=\u03c0\u5f97\u51fa\u7684\u5efa\u8bae\u72b6\u6001\u6240\u5f15\u5165\u7684\u9519\u8bef\u3002\u5b83\u6d89\u53ca\u8ba1\u7b97\u63a5\u53d7\u6982\u7387p a c(x i+1|x i)p_\\mathm{acc}(x<sub>i</sub>/p<sub>i</sub>)\u3002\u8be5\u6b65\u9aa4\u5305\u62ec\u8ba1\u7b97\u63a5\u53d7\u6982\u7387p a c(x i+1|x i)p_\\mathm{acc}(x<sub>i</sub>/p<sub>i</sub>)\u3002\u5b83\u5305\u62ec\u8ba1\u7b97\u63a5\u53d7\u6982\u7387p a c(xi+1|x i)p_\\mathm{acc\u3002_{i+1}|xi_i)p a c c\u200b(xi+1\u200b|xi\u200b)\uff0c\u5e76\u63a5\u53d7\u5177\u6709\u8be5\u6982\u7387\u7684\u63d0\u8baexi+1 x_{i+1}xi+1\u200b\u4f5c\u4e3a\u94fe\u4e2d\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\u4eceT()\u7ed8\u5236\u4e0b\u4e00\u4e2a\u72b6\u6001xi+1 x_{i+1}xi i+1\u200b(\u3002\u7136\u540e\u5982\u4e0b\u8fdb\u884cxi+1|xi)T(xi_{i+1}|xi_i)T(xi+1\u200b|xi\u200b)\uff1a\u9996\u5148\uff0c\u4eceq(xi+1|xi)q(xi+1}|xi)q(xi+1\u200b|xi)q(xi+1\u200b|xi\u200b)\u4e2d\u63d0\u53d6\u51fa\u4e00\u4e2a\u5efa\u8bae\u72b6\u6001xi+1x{i+1}xi+1 acc\uff0c\u5e76\u4ee5\u6982\u7387p a c(xi+1|xi)p\\mathm{acc}\u63a5\u53d7\u3002(x_{i+1}|x_i)p a c c\u200b(xi+1\u200b|x i\u200b)\u6216\u4ee5\u6982\u73871\u2212p a c c(x_i+1|xi)1-p_\\mathm{acc}(x\\_i+1}|xi_i)1\u2212p a c\u200b(xi+1|xi\u200b)\u88ab\u62d2\u7edd\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5f53\u524d\u72b6\u6001\u88ab\u590d\u5236\u4e3a\u4e0b\u4e00\u72b6\u6001\u3002\nT(xi+1|xi)=q(xi+1|xi)\u00d7p a c c(xi+1|xi)\u3002T(x_{i+1}|x_i)=q(x_{i+1}|x_i)\\x p_\\mathm{acc}(x_{i+1}|x_i)\\\\text\u3002T(xi+1\u200b|xi\u200b)=q(xi+1\u200b|xi\u200b)\u00d7p a c c\u200b(xi+1\u200b|xi\u200b)\u3002\u9a6c\u5c14\u53ef\u592b\u94fe\u5177\u6709\u03c0\\pi\u03c0\u4f5c\u4e3a\u5176\u5e73\u7a33\u5206\u5e03\u7684\u4e00\u4e2a\u5145\u5206\u6761\u4ef6\u662f\u7b26\u5408\u8be6\u7ec6\u5e73\u8861\u7684\u8f6c\u79fb\u6838\uff0c\u6216\u8005\u5728\u7269\u7406\u5b66\u6587\u732e\u4e2d\uff0c\u662f\u5fae\u89c2\u53ef\u9006\u6027\uff1a\n\u03c0(Xi)T(xi+1|xi)=\u03c0(xi+1)T(xi|xi+1)\\pi(Xi)T(xi+1}|xi)=\\pi(xi+1})T(xi|xi+1})\u03c0(xi\u200b)T(xi+1\u200b|xi\u200b)=\u3002\u03c0(x i+1\u200b)T(x i\u200b|x i+1\u200b)\u8fd9\u610f\u5473\u7740\u5904\u4e8e\u72b6\u6001x i x_i x i\u200b\u5e76\u8f6c\u53d8\u5230x i+1x_{i+1}x i+1\u200b\u7684\u6982\u7387\u5fc5\u987b\u7b49\u4e8e\u53cd\u5411\u8fc7\u7a0b\u7684\u6982\u7387\uff0c\u5373\u5904\u4e8ex_i+1x_i+1}x_i+1\u72b6\u6001\u5e76\u8f6c\u6362\u5230x_i_i x_i\u200b\u72b6\u6001\uff0c\u5927\u591a\u6570MCMC\u7b97\u6cd5\u7684\u8f6c\u6362\u6838\u90fd\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u3002\n\u4e3a\u4e86\u4f7f\u4e24\u90e8\u5206\u8fc7\u6e21\u6838\u9075\u5faa\u8be6\u7ec6\u5e73\u8861\uff0c\u6211\u4eec\u9700\u8981\u6b63\u786e\u9009\u62e9p a c c p\\mathm{acc}p a c c\u200b\uff0c\u8fd9\u610f\u5473\u7740\u5fc5\u987b\u6821\u6b63\u4ece/\u5230x i+1 x_{i+1}x i+1\u200b\u6216x i x_i x i\u200b\u7684\u6982\u7387\u6d41\u4e2d\u7684\u4efb\u4f55\u4e0d\u5bf9\u79f0\u3002Metropolis-Hastings\u4f7f\u7528Metropolis-Hastings\u6807\u51c6\uff1a\nP a c c(xi+1|xi)=m in{1\uff0c\u03c0(xi+1)\u00d7q(xi|xi+1)\u03c0(Xi)\u00d7q(xi+1|xi)}n\u3002P_\\mathm{acc}(x_{i+1}|x_i)=\\mathm{min}\\Left\\{1\uff0c\\frac{\\pi(x_{i+1})\\x q(x_i|x_{i+1})}{\\pi(X_I)\\x q(x_{i+1}|x_i)}\\right\\}\\\\text\u3002P a c c\u200b(xi+1\u200b|xi\u200b)=m in n{1\uff0c\u03c0(x i\u200b)\u00d7Q(x i+1\u200b|x i\u200b)\u03c0(xi+1\u200b)\u00d7Q(x i\u200b|xi+1\u200b)\u200b}))\u3002\u8fd9\u91cc\u662f\u9b54\u672f\u53d1\u751f\u7684\u5730\u65b9\uff1a\u6211\u4eec\u77e5\u9053\u03c0\\pi\u03c0\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u5e38\u6570\uff0c\u4f46\u8fd9\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u672a\u77e5\u7684\u5e38\u6570\u5728p a c c p\\mathm{acc}p a c\u200b\u7684\u8868\u8fbe\u5f0f\u4e2d\u88ab\u62b5\u6d88\u4e86\uff01\u6b63\u662fp a c c p\\mathm{acc}p a c\u200b\u7684\u8fd9\u4e2a\u6027\u8d28\u4f7f\u5f97\u57fa\u4e8eMetropolis-Hastings\u7684\u7b97\u6cd5\u9002\u7528\u4e8e\u975e\u6b63\u89c4\u5316\u5206\u5e03\u3002\u901a\u5e38\uff0c\u4f7f\u7528\u5177\u6709q(xi|xi+1)=q(xi+1|xi)q(xi|xi+1})=q(xi+1}|xi)q(xi\u200b|xi+1\u200b)=q(xi+1|xi\u200b)\u7684\u5bf9\u79f0\u5efa\u8bae\u5206\u5e03\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cMetropolis-Hastings\u7b97\u6cd5\u7b80\u5316\u4e3a1953\u5e74\u5f00\u53d1\u7684\u539f\u59cb\u4f46\u4e0d\u592a\u901a\u7528\u7684Metropolis\u7b97\u6cd5\u3002\nP a c c(xi+1|x\n\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u6240\u6709\u8fd9\u4e9b\u6574\u5408\u5230\u6211\u4eec\u771f\u6b63\u7b80\u77ed\u7684Metropolis-Hastings\u62bd\u6837\u6b65\u9aa4\u4e2d\uff1a\nDef SAMPLE_MH(x_old\uff0clog_prob\uff0cstepsize)\uff1ax_new=proposal(x_old\uff0cstepsize)#\u8fd9\u91cc\u6211\u4eec\u786e\u5b9a\u662f\u5426\u63a5\u53d7\u65b0\u72b6\u6001\uff1a#\u6211\u4eec\u4ece[0\uff0c1]\u5747\u5300\u62bd\u53d6\u4e00\u4e2a\u968f\u673a\u6570\uff0c\u5e76\u5c06\u5176\u4e0e\u63a5\u53d7\u6982\u7387Accept=nP.Random()&lt\uff1bp_acc(x_new\uff0cx_old\uff0clog_prob)if Accept\uff1aReturn Accept\uff0cx_new Else\uff1aReturn Accept\uff0cx_old\u3002\n\u9664\u4e86\u9a6c\u5c14\u53ef\u592b\u94fe\u4e2d\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001x_new\u6216x_old\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u8fd4\u56deMCMC\u79fb\u52a8\u662f\u5426\u88ab\u63a5\u53d7\u3002\u8fd9\u5c06\u5141\u8bb8\u6211\u4eec\u8ddf\u8e2a\u63a5\u53d7\u7387\u3002\u8ba9\u6211\u4eec\u901a\u8fc7\u7f16\u5199\u4e00\u4e2a\u8fed\u4ee3\u8c03\u7528SAMPLE_MH\u4ece\u800c\u5efa\u7acb\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u51fd\u6570\u6765\u5b8c\u6210\u6211\u4eec\u7684\u5b9e\u73b0\uff1a\nDef build_MH_chain(init\uff0cstepsize\uff0cn_total\uff0clog_prob)\uff1an_Accept=0 chain=[init]for_in range(N_Total)\uff1aAccept\uff0cstate=Sample_MH(chain[-1]\uff0clog_prob\uff0cstepsize)chain.\u8ffd\u52a0(\u72b6\u6001)n_Accept+=Accept Accept_Rate=n_Accept/Float(N_Total)\u8fd4\u56de\u94fe\uff0cAccept_Rate\u3002\n\u73b0\u5728\u60a8\u53ef\u80fd\u4f1a\u5f88\u5174\u594b\u5730\u770b\u5230\u8fd9\u4e00\u70b9\u7684\u5b9e\u9645\u64cd\u4f5c\u3002\u4e0b\u9762\uff0c\u8ba9\u6211\u4eec\u5bf9\u6b65\u957f\u548cn_total\u53c2\u6570\u8fdb\u884c\u4e00\u4e9b\u6709\u89c1\u5730\u7684\u731c\u6d4b\uff1a\nCHAIN\uff0cACCEPTION_RATE=BUILD_MH_CHAIN(NP.array([2.0])\uff0c3.0,10000\uff0cLOG_PROB)CHAIN=[STATE FOR STATE\uff0cIN CHAIN]PRINT(&#34\uff1b\u63a5\u53d7\u7387\uff1a{\uff1a.3f}&#34\uff1b\u3002Format(Accept_Rate))LAST_STATES=&#34\uff1b\uff0c&#34\uff1b.Join(&#34\uff1b{\uff1a.5f}&#34\uff1b\u3002\u94fe\u4e2d\u72b6\u6001\u7684\u683c\u5f0f(\u72b6\u6001)[-10\uff1a])\u6253\u5370(&#34\uff1b\u94fe\u7684\u6700\u540e\u5341\u4e2a\u72b6\u6001\uff1a&#34\uff1b+LAST_STATES)\u3002\n\u5408\u683c\u7387\uff1a0.722\u94fe\u6761\u6700\u8fd1\u5341\u79cd\u72b6\u6001\uff1a-0.84962\u3001-0.84962\u3001-0.84962\u3001-0.08692\u30010.92728\u3001-0.46215\u30010.08655\u3001-0.33841\u3001-0.33841\u3001-0.33841\u3002\n\u597d\u7684\u3002\u90a3\u4e48\u8fd9\u4e2a\u5de5\u4f5c\u505a\u4e86\u5417\uff1f\u6211\u4eec\u8fbe\u5230\u4e86\u5927\u7ea671%\u7684\u63a5\u53d7\u7387\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u72b6\u6001\u94fe\u3002\u6211\u4eec\u5e94\u8be5\u6254\u6389\u94fe\u8fd8\u6ca1\u6709\u6536\u655b\u5230\u5b83\u7684\u7a33\u5b9a\u5206\u5e03\u7684\u6700\u521d\u51e0\u4e2a\u72b6\u6001\u3002\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e0b\u6211\u4eec\u753b\u7684\u72b6\u6001\u662f\u5426\u5b9e\u9645\u4e0a\u662f\u6b63\u6001\u5206\u5e03\uff1a\n\u5b9a\u4e49PLOT_SAMPLES(CHAIN\uff0cLOG_PROB\uff0cAX\uff0cOrientation=&#39\uff1b\u5782\u76f4&#39\uff1b\uff0cNormize=True\uff0cxlims=(-5\uff0c5)\uff0cLegend=True)\uff1a\u4ecescipy.Integrate\u5bfc\u5165quad ax.hist(CHAIN\uff0cBINS=50\uff0cDensity=True\uff0cLabel=&#34\uff1bMCMC Samples&#34\uff1b\uff0cOrientation=Orientation)#\u5982\u679c\u5f52\u4e00\u5316\uff0c\u6211\u4eec\u6570\u503c\u8ba1\u7b97PDF\u7684\u5f52\u4e00\u5316\u5e38\u6570\uff1az\uff0c_=quad(lambda x\uff1anp.exp(log_prob(X))\uff0c-np.inf\uff0cnp.inf)\u5426\u5219\uff1az=1.0 xses=np.linspace(xlims[0]\uff0cxlims[1]\uff0c1000)yses=[np.exp(log_prob(X))/Z for x in xse]if Orientation==&#39\uff1b\u6c34\u5e73&#39\uff1b\u7528\u6cd5\uff1a(yses\uff0cxses)=(xses\uff0cyses)ax.lot(xses\uff0cyses\uff0clabel=&#34\uff1btrue Distribution&#34\uff1b)\u5982\u679c\u56fe\u4f8b\uff1aax.legend(frame on=false)fig\uff0cax=plt.subplots()lot_sample(chain[500\uff1a]\uff0clog_prob\uff0cax)Despine(Ax)ax.set_yticks(())plt.show()\u3002\n\u73b0\u5728\uff0c\u53c2\u6570stepsize\u548cn_total\u6709\u4ec0\u4e48\u95ee\u9898\uff1f\u6211\u4eec\u5c06\u9996\u5148\u8ba8\u8bba\u6b65\u957f\uff1a\u5b83\u786e\u5b9a\u5efa\u8bae\u72b6\u6001\u4e0e\u94fe\u7684\u5f53\u524d\u72b6\u6001\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u56e0\u6b64\uff0c\u5b83\u662f\u5efa\u8bae\u5206\u5e03q q\u7684\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u63a7\u5236\u9a6c\u5c14\u53ef\u592b\u94fe\u91c7\u53d6\u7684\u968f\u673a\u6b65\u957f\u6709\u591a\u5927\u3002\u5982\u679c\u6b65\u957f\u592a\u5927\uff0c\u5efa\u8bae\u72b6\u6001\u901a\u5e38\u4f4d\u4e8e\u5206\u5e03\u7684\u5c3e\u90e8\uff0c\u6982\u7387\u8f83\u4f4e\u3002Metropolis-Hastings\u91c7\u6837\u5668\u62d2\u7edd\u5927\u591a\u6570\u8fd9\u4e9b\u79fb\u52a8\uff0c\u8fd9\u610f\u5473\u7740\u63a5\u53d7\u7387\u964d\u4f4e\uff0c\u6536\u655b\u901f\u5ea6\u53d8\u6162\u3002\u60a8\u81ea\u5df1\u770b\u4e00\u4e0b\uff1a\nDef sample_and_display(init_state\uff0cstepsize\uff0cn_total\uff0cn_burnin\uff0clog_prob)\uff1achain\uff0cAccept_Rate=build_MH_chain(init_state\uff0cstepsize\uff0cn_total\uff0clog_prob)print(&#34\uff1b\u63a5\u53d7\u7387\uff1a{\uff1a.3f}&#34\uff1b\u3002FORMAT(Accept_Rate))\u56fe\uff0cax=PLT.subplots()PLOT_SAMPLES([STATE FOR STATE\uff0cin chain[n_burnin\uff1a]]\uff0cLOG_PROB\uff0cAX)Despine(AX)ax.set_yticks(())PLT.show()SAMPLE_AND_DISPLAY(NP.array([2.0])\uff0c30,10000,500\uff0cLOG_PROB)\u3002\n\u4e0d\u662f\u5f88\u9177\uff0c\u5bf9\u5427\uff1f\u73b0\u5728\u4f60\u53ef\u80fd\u8ba4\u4e3a\u6700\u597d\u7684\u505a\u6cd5\u662f\u9009\u62e9\u4e00\u4e2a\u5f88\u5c0f\u7684\u6b65\u957f\u3002\u7ed3\u679c\u53d1\u73b0\uff0c\u8fd9\u4e5f\u4e0d\u662f\u592a\u806a\u660e\uff0c\u56e0\u4e3a\u90a3\u6837\u9a6c\u5c14\u53ef\u592b\u94fe\u53ea\u4f1a\u975e\u5e38\u6162\u5730\u63a2\u7d22\u6982\u7387\u5206\u5e03\uff0c\u56e0\u6b64\u4e5f\u4e0d\u4f1a\u50cf\u8c03\u6574\u597d\u7684\u6b65\u957f\u90a3\u6837\u5feb\u901f\u6536\u655b\uff1a\n\u65e0\u8bba\u60a8\u5982\u4f55\u9009\u62e9\u6b65\u957f\u53c2\u6570\uff0c\u9a6c\u5c14\u53ef\u592b\u94fe\u6700\u7ec8\u90fd\u4f1a\u6536\u655b\u5230\u5b83\u7684\u5e73\u7a33\u5206\u5e03\u3002\u4f46\u8fd9\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u6211\u4eec\u6a21\u62df\u9a6c\u5c14\u53ef\u592b\u94fe\u7684\u65f6\u95f4\u7531n_total\u53c2\u6570\u8bbe\u7f6e-\u5b83\u53ea\u51b3\u5b9a\u6211\u4eec\u5c06\u5f97\u5230\u591a\u5c11\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe(\u4ee5\u53ca\u6837\u672c)\u7684\u72b6\u6001\u3002\u5982\u679c\u94fe\u6536\u655b\u5f88\u6162\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0n_total\uff0c\u4ee5\u4fbf\u8ba9\u9a6c\u5c14\u79d1\u592b\u94fe\u6709\u8db3\u591f\u7684\u65f6\u95f4\u5fd8\u8bb0\u5176\u521d\u59cb\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u4fdd\u6301\u6700\u5c0f\u7684\u6b65\u957f\uff0c\u5e76\u901a\u8fc7\u589e\u52a0n_total\u6765\u589e\u52a0\u6837\u672c\u6570\uff1a\n\u6709\u4e86\u8fd9\u4e9b\u8003\u8651\uff0c\u6211\u7ed3\u675f\u4e86\u672c\u7cfb\u5217\u7684\u7b2c\u4e00\u7bc7\u535a\u5ba2\u6587\u7ae0\uff0c\u6211\u5e0c\u671b\u60a8\u73b0\u5728\u7406\u89e3Metropolis-Hastings\u7b97\u6cd5\u80cc\u540e\u7684\u76f4\u89c9\u3001\u5b83\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u4e3a\u4ec0\u4e48\u5b83\u662f\u4ece\u60a8\u5728\u91ce\u5916\u53ef\u80fd\u9047\u5230\u7684\u975e\u6807\u51c6\u6982\u7387\u5206\u5e03\u4e2d\u62bd\u6837\u7684\u4e00\u4e2a\u6781\u5176\u6709\u7528\u7684\u5de5\u5177\u3002\n\u6211\u5f3a\u70c8\u5efa\u8bae\u60a8\u5c1d\u8bd5\u4f7f\u7528\u6b64\u7b14\u8bb0\u672c\u4e2d\u63d0\u4f9b\u7684\u4ee3\u7801-\u8fd9\u6837\uff0c\u60a8\u5c31\u53ef\u4ee5\u4e86\u89e3\u7b97\u6cd5\u5728\u5404\u79cd\u60c5\u51b5\u4e0b\u662f\u5982\u4f55\u8fd0\u884c\u7684\uff0c\u5e76\u52a0\u6df1\u60a8\u5bf9\u5b83\u7684\u7406\u89e3\u3002\u7ee7\u7eed\u5c1d\u8bd5\u975e\u5bf9\u79f0\u63d0\u6848\u5206\u5e03\uff01\u5982\u679c\u60a8\u6ca1\u6709\u76f8\u5e94\u5730\u8c03\u6574\u63a5\u53d7\u6807\u51c6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u5982\u679c\u60a8\u8bd5\u56fe\u4ece\u53cc\u5cf0\u5206\u5e03\u4e2d\u91c7\u6837\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u60a8\u80fd\u60f3\u51fa\u4e00\u79cd\u81ea\u52a8\u8c03\u6574\u6b65\u957f\u7684\u65b9\u6cd5\u5417\uff1f\u8fd9\u91cc\u6709\u54ea\u4e9b\u9677\u9631\uff1f\u5c1d\u8bd5\u4e00\u4e0b\u3002\n.", "note_en": "Markov chain Monte Carlo (MCMC) is a powerful class of methods to sample from probability distributions known only up to an (unknown) normalization constant. But before we dive into MCMC, let\u2019s consider why you might want to do sampling in the first place.\n The answer to that is: whenever you\u2019re either interested in the samples themselves (for example, inferring unknown parameters in Bayesian inference) or you need them to approximate expected values of functions w.r.t. to a probability distribution (for example, calculating thermodynamic quantities from the distribution of microstates in statistical physics).Sometimes, only the mode of a probability distribution is of primary interest. In this case, it\u2019s obtained by numerical optimization so full sampling is not necessary.\n It turns out that sampling from any but the most basic probability distributions is a difficult task. Inverse transform sampling is an elementary method to sample from probability distributions, but requires the cumulative distribution function, which in turn requires knowledge of the, generally unknown, normalization constant.Now in principle, you could just obtain the normalization constant by numerical integration, but this quickly gets infeasible with an increasing number of dimensions. Rejection sampling does not require a normalized distribution, but efficiently implementing it requires a good deal of knowledge about the distribution of interest, and it suffers strongly from the curse of dimension, meaning that its efficiency decreases rapidly with an increasing number of variables.That\u2019s when you need a smart way to obtain representative samples from your distribution which doesn\u2019t require knowledge of the normalization constant.\n MCMC algorithms are a class of methods which do exactly that.These methods date back to a  seminal paper by Metropolis et al., who developed the first MCMC algorithm, correspondingly called  Metropolis algorithm, to calculate the equation of state of a two-dimensional system of hard spheres. In reality, they were looking for a general method to calculate expected values occurring in statistical physics.\n In this blog post, I introduce the basics of MCMC sampling; in subsequent posts I\u2019ll cover several important, increasingly complex and powerful MCMC algorithms, which all address different difficulties one frequently faces when using the Metropolis-Hastings algorithm. Along the way, you will gain a solid understanding of these challenges and how to address them.Also, this serves as a reference for MCMC methods in the context of the  monad-bayes series.Furthermore, I hope the provided notebooks will not only spark your interest in exploring the behavior of MCMC algorithms for various parameters/probability distributions, but also serve as a basis for implementing and understanding useful extensions of the basic versions of the algorithms I present.\n  Now that we know why we want to sample, let\u2019s get to the heart of MCMC: Markov chains.What is a Markov chain? Without all the technical details, a Markov chain is a random sequence of states in some state space in which the probability of picking a certain state next depends only on the current state in the chain and not on the previous history: it is memory-less.Under certain conditions, a Markov chain has a unique stationary distribution of states to which it converges after a certain number of states. From that number on, states in the Markov chain are distributed according to the invariant distribution.\n In order to sample from a distribution       \u03c0 ( x ) \\pi(x)    \u03c0 ( x ), a MCMC algorithm constructs and simulates a Markov chain whose stationary distribution is       \u03c0 ( x ) \\pi(x)    \u03c0 ( x ), meaning that, after an initial \u201cburn-in\u201d phase, the states of that Markov chain are distributed according to       \u03c0 ( x ) \\pi(x)    \u03c0 ( x ).We thus just have to store the states to obtain samples from       \u03c0 ( x ) \\pi(x)    \u03c0 ( x ).\n For didactic purposes, let\u2019s for now consider both a discrete state space and discrete \u201ctime\u201d.The key quantity characterizing a Markov chain is the transition operator       T (  x  i + 1 \u2223  x i ) T(x_{i+1}|x_i)    T (  x         i + 1 \u200b    \u2223  x        i \u200b    ) which gives you the probability of being in state        x  i + 1 x_{i+1}     x         i + 1 \u200b    at time       i + 1 i+1    i  +    1 given that the chain is in state        x i x_i     x        i \u200b    at time       i i    i.\n Now just for fun (and for illustration), let\u2019s quickly whip up a Markov chain which has a unique stationary distribution.We\u2019ll start with some imports and settings for the plots:\n  The Markov chain will hop around on a discrete state space which is made up from three weather states:\n  In a discrete state space, the transition operator is just a matrix.Columns and rows correspond, in our case, to sunny, cloudy, and rainy weather.We pick more or less sensible values for all transition probabilities:\n  The rows indicate the states the chain might currently be in and the columns the states the chains might transition to.If we take one \u201ctime\u201d step of the Markov chain as one hour, then, if it\u2019s sunny, there\u2019s a 60% chance it stays sunny in the next hour, a 30% chance that in the next hour we will have cloudy weather, and only a 10% chance of rain immediately after it had been sunny before.This also means that each row has to sum up to one.\n   We can monitor the convergence of our Markov chain to its stationary distribution by calculating the empirical probability for each of the states as a function of chain length:\n def  despine (ax , spines = ( &#39;top&#39; ,  &#39;left&#39; ,  &#39;right&#39; ) ) :  for spine  in spines : ax .spines [spine ] .set_visible ( False )fig , ax  = plt .subplots ( )width  =  1000offsets  =  range ( 1 , n_steps ,  5 ) for i , label  in  enumerate (state_space ) : ax .plot (offsets ,  [np . sum (states [ :offset ]  == i )  / offset  for offset  in offsets ] , label =label )ax .set_xlabel ( &#34;number of steps&#34; )ax .set_ylabel ( &#34;likelihood&#34; )ax .legend (frameon = False )despine (ax ,  ( &#39;top&#39; ,  &#39;right&#39; ) )plt .show ( )\n   So that\u2019s lots of fun, but back to sampling an arbitrary probability distribution       \u03c0 \\pi    \u03c0.It could either be discrete, in which case we would keep talking about a transition matrix       T T    T, or be continuous, in which case       T T    T would be a transition  kernel.From now on, we\u2019re considering continuous distributions, but all concepts presented here transfer to the discrete case.\n If we could design the transition kernel in such a way that the next state is already drawn from       \u03c0 \\pi    \u03c0, we would be done, as our Markov chain would\u2026 well\u2026 immediately sample from       \u03c0 \\pi    \u03c0.Unfortunately, to do this, we need to be able to sample from       \u03c0 \\pi    \u03c0, which we can\u2019t.Otherwise you wouldn\u2019t be reading this, right?\n A way around this is to split the transition kernel       T (  x  i + 1 \u2223  x i ) T(x_{i+1}|x_i)    T (  x         i + 1 \u200b    \u2223  x        i \u200b    ) into two parts:a proposal step and an acceptance/rejection step.The proposal step features a proposal distribution       q (  x  i + 1 \u2223  x i ) q(x_{i+1}|x_i)    q (  x         i + 1 \u200b    \u2223  x        i \u200b    ), from which we can sample possible next states of the chain.In addition to being able to sample from it, we can choose this distribution arbitrarily. But, one should strive to design it such that samples from it are both as little correlated with the current state as possible and have a good chance of being accepted in the acceptance step.Said acceptance/rejection step is the second part of the transition kernel and corrects for the error introduced by proposal states drawn from       q \u2260 \u03c0 q \\neq \\pi    q             \ue020  \u200b    =    \u03c0.It involves calculating an acceptance probability        p  a c c (  x  i + 1 \u2223  x i ) p_\\mathrm{acc}(x_{i+1}|x_i)     p         a c c \u200b    (  x         i + 1 \u200b    \u2223  x        i \u200b    ) and accepting the proposal        x  i + 1 x_{i+1}     x         i + 1 \u200b    with that probability as the next state in the chain.Drawing the next state        x  i + 1 x_{i+1}     x         i + 1 \u200b    from       T (  x  i + 1 \u2223  x i ) T(x_{i+1}|x_i)    T (  x         i + 1 \u200b    \u2223  x        i \u200b    ) is then done as follows:first, a proposal state        x  i + 1 x_{i+1}     x         i + 1 \u200b    is drawn from       q (  x  i + 1 \u2223  x i ) q(x_{i+1}|x_i)    q (  x         i + 1 \u200b    \u2223  x        i \u200b    ).It is then accepted as the next state with probability        p  a c c (  x  i + 1 \u2223  x i ) p_\\mathrm{acc}(x_{i+1}|x_i)     p         a c c \u200b    (  x         i + 1 \u200b    \u2223  x        i \u200b    ) or rejected with probability       1 \u2212  p  a c c ( x _  i + 1 \u2223  x i ) 1-p_\\mathrm{acc}(x\\_{i+1}|x_i)    1  \u2212     p         a c c \u200b    ( x _  i  +  1 \u2223  x        i \u200b    ), in which case the current state is copied as the next state.\n        T (  x  i + 1 \u2223  x i ) = q (  x  i + 1 \u2223  x i ) \u00d7  p  a c c (  x  i + 1 \u2223  x i ) \u00a0. T(x_{i+1}|x_i)=q(x_{i+1} | x_i) \\times p_\\mathrm{acc}(x_{i+1}|x_i) \\ \\text .    T (  x         i + 1 \u200b    \u2223  x        i \u200b    )  =    q (  x         i + 1 \u200b    \u2223  x        i \u200b    )  \u00d7     p         a c c \u200b    (  x         i + 1 \u200b    \u2223  x        i \u200b    ) \u00a0  . A sufficient condition for a Markov chain to have       \u03c0 \\pi    \u03c0 as its stationary distribution is the transition kernel obeying  detailed balance or, in the physics literature,  microscopic reversibility:\n       \u03c0 (  x i ) T (  x  i + 1 \u2223  x i ) = \u03c0 (  x  i + 1 ) T (  x i \u2223  x  i + 1 ) \\pi(x_i) T(x_{i+1}|x_i) = \\pi(x_{i+1}) T(x_i|x_{i+1})    \u03c0 (  x        i \u200b    ) T (  x         i + 1 \u200b    \u2223  x        i \u200b    )  =    \u03c0 (  x         i + 1 \u200b    ) T (  x        i \u200b    \u2223  x         i + 1 \u200b    ) This means that the probability of being in a state        x i x_i     x        i \u200b    and transitioning to        x  i + 1 x_{i+1}     x         i + 1 \u200b    must be equal to the probability of the reverse process, namely, being in state       x _  i + 1 x\\_{i+1}    x _  i  +  1 and transitioning to        x i x_i     x        i \u200b   .Transition kernels of most MCMC algorithms satisfy this condition.\n For the two-part transition kernel to obey detailed balance, we need to choose        p  a c c p_\\mathrm{acc}     p         a c c \u200b    correctly, meaning that is has to correct for any asymmetries in probability flow from / to        x  i + 1 x_{i+1}     x         i + 1 \u200b    or        x i x_i     x        i \u200b   .Metropolis-Hastings uses the Metropolis acceptance criterion:\n        p  a c c (  x  i + 1 \u2223  x i ) =  m i n  { 1 ,   \u03c0 (  x  i + 1 ) \u00d7 q (  x i \u2223  x  i + 1 )  \u03c0 (  x i ) \u00d7 q (  x  i + 1 \u2223  x i ) } \u00a0. p_\\mathrm{acc}(x_{i+1}|x_i) = \\mathrm{min} \\left\\{1, \\frac{\\pi(x_{i+1}) \\times q(x_i|x_{i+1})}{\\pi(x_i) \\times q(x_{i+1}|x_i)} \\right\\} \\ \\text .     p         a c c \u200b    (  x         i + 1 \u200b    \u2223  x        i \u200b    )  =     m i n    { 1 ,           \u03c0 (  x        i \u200b    )  \u00d7  q (  x         i + 1 \u200b    \u2223  x        i \u200b    )       \u03c0 (  x         i + 1 \u200b    )  \u00d7  q (  x        i \u200b    \u2223  x         i + 1 \u200b    ) \u200b      }  \u00a0  . Now here\u2019s where the magic happens:we know       \u03c0 \\pi    \u03c0 only up to a constant, but it doesn\u2019t matter, because that unknown constant cancels out in the expression for        p  a c c p_\\mathrm{acc}     p         a c c \u200b   !It is this property of        p  a c c p_\\mathrm{acc}     p         a c c \u200b    which makes algorithms based on Metropolis-Hastings work for unnormalized distributions.Often, symmetric proposal distributions with       q (  x i \u2223  x  i + 1 ) = q ( x _  i + 1 \u2223  x i ) q(x_i|x_{i+1})=q(x\\_{i+1}|x_i)    q (  x        i \u200b    \u2223  x         i + 1 \u200b    )  =    q ( x _  i  +  1 \u2223  x        i \u200b    ) are used, in which case the Metropolis-Hastings algorithm reduces to the original, but less general Metropolis algorithm developed in 1953 and for which\n        p  a c c (  x  i + 1 \u2223  x i ) =  m i n  { 1 ,   \u03c0 (  x  i + 1 )  \u03c0 (  x i ) } \u00a0. p_\\mathrm{acc}(x_{i+1}|x_i) = \\mathrm{min} \\left\\{1, \\frac{\\pi(x_{i+1})}{\\pi(x_i)} \\right\\} \\ \\text .     p         a c c \u200b    (  x         i + 1 \u200b    \u2223  x        i \u200b    )  =     m i n    { 1 ,           \u03c0 (  x        i \u200b    )       \u03c0 (  x         i + 1 \u200b    ) \u200b      }  \u00a0  .        T (  x  i + 1 \u2223  x i ) =  {      q (  x  i + 1 \u2223  x i ) \u00d7  p  a c c (  x  i + 1 \u2223  x i )    :  x  i + 1 \u2260  x i ;         1 \u2212 \u222b d  x  i + 1 \u00a0 q (  x  i + 1 \u2223  x i ) \u00d7  p  a c c (  x  i + 1 \u2223  x i )    :  x  i + 1 =  x i . T(x_{i+1}|x_i) = \\begin{cases} q(x_{i+1}|x_i) \\times p_\\mathrm{acc}(x_{i+1}|x_i) &amp;: x_{i+1} \\neq x_i \\text ; \\\\\\\\ 1 - \\int \\mathrm{d}x_{i+1} \\ q(x_{i+1}|x_i) \\times p_\\mathrm{acc}(x_{i+1}|x_i) &amp;: x_{i+1} = x_i\\text . \\end{cases}    T (  x         i + 1 \u200b    \u2223  x        i \u200b    )  =             \u23a9    \u23aa    \u23aa    \u23a8    \u23aa    \u23aa    \u23a7 \u200b             q (  x         i + 1 \u200b    \u2223  x        i \u200b    )  \u00d7   p         a c c \u200b    (  x         i + 1 \u200b    \u2223  x        i \u200b    )       1  \u2212     d  x         i + 1 \u200b    \u00a0 q (  x         i + 1 \u200b    \u2223  x        i \u200b    )  \u00d7   p         a c c \u200b    (  x         i + 1 \u200b    \u2223  x        i \u200b    ) \u200b            :   x         i + 1 \u200b                \ue020  \u200b    =   x        i \u200b     ;    :   x         i + 1 \u200b     =   x        i \u200b     . \u200b      All right, now that we know how Metropolis-Hastings works, let\u2019s go ahead and implement it.First, we set the log-probability of the distribution we want to sample from\u2014without normalization constants, as we pretend we don\u2019t know them. Let\u2019s work for now with a standard normal distribution:\n  Next, we choose a symmetric proposal distribution. Generally, including information you have about the distribution you want to sample from in the proposal distribution will lead to better performance of the Metropolis-Hastings algorithm.A naive approach is to just take the current state       x x    x and pick a proposal from       U ( x \u2212  \u0394 2 , x +  \u0394 2 ) \\mathcal{U}(x-\\frac{\\Delta}{2}, x+\\frac{\\Delta}{2})     U ( x  \u2212              2        \u0394 \u200b     ,  x  +              2        \u0394 \u200b     ), that is, we set some step size       \u0394 \\Delta    \u0394 and move left or right a maximum of        \u0394 2 \\frac{\\Delta}{2}              2        \u0394 \u200b     from our current state:\n def  proposal (x , stepsize ) :  return np .random .uniform (low =x  -  0.5  * stepsize , high =x  +  0.5  * stepsize , size =x .shape )\n   Now, we piece all this together into our really brief implementation of a Metropolis-Hastings sampling step:\n def  sample_MH (x_old , log_prob , stepsize ) : x_new  = proposal (x_old , stepsize )  # here we determine whether we accept the new state or not:  # we draw a random number uniformly from [0,1] and compare  # it with the acceptance probability accept  = np .random .random ( )  &lt; p_acc (x_new , x_old , log_prob )  if accept :  return accept , x_new  else :  return accept , x_old\n Apart from the next state in the Markov chain,  x_new or  x_old, we also return whether the MCMC move was accepted or not.This will allow us to keep track of the acceptance rate.Let\u2019s complete our implementation by writing a function that iteratively calls  sample_MH and thus builds up the Markov chain:\n def  build_MH_chain (init , stepsize , n_total , log_prob ) : n_accepted  =  0 chain  =  [init ]  for _  in  range (n_total ) : accept , state  = sample_MH (chain [ - 1 ] , log_prob , stepsize ) chain .append (state ) n_accepted  += accept acceptance_rate  = n_accepted  /  float (n_total )  return chain , acceptance_rate\n  Now you\u2019re probably excited to see this in action.Here we go, taking some informed guesses at the  stepsize and  n_total arguments:\n chain , acceptance_rate  = build_MH_chain (np .array ( [ 2.0 ] ) ,  3.0 ,  10000 , log_prob )chain  =  [state  for state ,  in chain ] print ( &#34;Acceptance rate: {:.3f}&#34; . format (acceptance_rate ) )last_states  =  &#34;, &#34; .join ( &#34;{:.5f}&#34; . format (state )  for state  in chain [ - 10 : ] ) print ( &#34;Last ten states of chain: &#34;  + last_states )\n Acceptance rate: 0.722Last ten states of chain: -0.84962, -0.84962, -0.84962, -0.08692, 0.92728, -0.46215, 0.08655, -0.33841, -0.33841, -0.33841\n All right.So did this work?We achieved an acceptance rate of around 71% and we have a chain of states.We should throw away the first few states during which the chain won\u2019t yet have converged to its stationary distribution.Let\u2019s check whether the states we drew are actually normally distributed:\n def  plot_samples (chain , log_prob , ax , orientation = &#39;vertical&#39; , normalize = True , xlims = ( - 5 ,  5 ) , legend = True ) :  from scipy .integrate  import quad ax .hist (chain , bins = 50 , density = True , label = &#34;MCMC samples&#34; , orientation =orientation )  # we numerically calculate the normalization constant of our PDF  if normalize : Z , _  = quad ( lambda x : np .exp (log_prob (x ) ) ,  -np .inf , np .inf )  else : Z  =  1.0 xses  = np .linspace (xlims [ 0 ] , xlims [ 1 ] ,  1000 ) yses  =  [np .exp (log_prob (x ) )  / Z  for x  in xses ]  if orientation  ==  &#39;horizontal&#39; :  (yses , xses )  =  (xses , yses ) ax .plot (xses , yses , label = &#34;true distribution&#34; )  if legend : ax .legend (frameon = False )fig , ax  = plt .subplots ( )plot_samples (chain [ 500 : ] , log_prob , ax )despine (ax )ax .set_yticks ( ( ) )plt .show ( )\n   Now, what\u2019s up with the parameters  stepsize and  n_total?We\u2019ll discuss the step size first: it determines how far away a proposal state can be from the current state of the chain.It is thus a parameter of the proposal distribution       q q    q and controls how big the random steps are which the Markov chain takes.If the step size is too large, the proposal state will often be in the tails of the distribution, where probability is low.The Metropolis-Hastings sampler rejects most of these moves, meaning that the acceptance rate decreases and convergence is much slower.See for yourself:\n def  sample_and_display (init_state , stepsize , n_total , n_burnin , log_prob ) : chain , acceptance_rate  = build_MH_chain (init_state , stepsize , n_total , log_prob )  print ( &#34;Acceptance rate: {:.3f}&#34; . format (acceptance_rate ) ) fig , ax  = plt .subplots ( ) plot_samples ( [state  for state ,  in chain [n_burnin : ] ] , log_prob , ax ) despine (ax ) ax .set_yticks ( ( ) ) plt .show ( )sample_and_display (np .array ( [ 2.0 ] ) ,  30 ,  10000 ,  500 , log_prob )\n   Not as cool, right?Now you could think the best thing to do is do choose a tiny step size.Turns out that this is not too smart either because then the Markov chain will explore the probability distribution only very slowly and thus again won\u2019t converge as rapidly as with a well-adjusted step size:\n    No matter how you choose the step size parameter, the Markov chain will eventually converge to its stationary distribution.But it may take a looooong time.The time we simulate the Markov chain for is set by the  n_total parameter\u2014it simply determines how many states of the Markov chain (and thus samples) we\u2019ll end up with.If the chain converges slowly, we need to increase  n_total in order to give the Markov chain enough time to forget its initial state.So let\u2019s keep the tiny step size and increase the number of samples by increasing  n_total:\n      With these considerations, I conclude the first blog post of this series.I hope you now understand the intuition behind the Metropolis-Hastings algorithm, its parameters, and why it is an extremely useful tool to sample from non-standard probability distributions you might encounter out there in the wild.\n I highly encourage you to play around with the code provided in  this notebook\u2014this way, you can learn how the algorithm behaves in various circumstances and deepen your understanding of it.Go ahead and try out a non-symmetric proposal distribution!What happens if you don\u2019t adjust the acceptance criterion accordingly?What happens if you try to sample from a bimodal distribution?Can you think of a way to automatically tune the stepsize?What are pitfalls here?Try it\n......", "posttime": "2020-10-29 10:34:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9a6c\u5c14\u53ef\u592b,chain,\u72b6\u6001", "title": "\u9a6c\u5c14\u53ef\u592b\u94fe\u8499\u7279\u5361\u7f57(MCMC)\u62bd\u6837\uff0c\u7b2c1\u90e8\u5206\uff1a\u57fa\u7840\u77e5\u8bc6", "title_en": "Markov Chain Monte Carlo (MCMC) Sampling, Part 1: The Basics", "transed": 1, "url": "https://www.tweag.io/blog/2019-10-25-mcmc-intro1/", "via": "", "real_tags": ["\u9a6c\u5c14\u53ef\u592b", "chain", "\u72b6\u6001"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1031888, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u51e0\u4e2a\u6708\u524d\uff0c\u6211\u5199\u4e86\u4e00\u7bc7\u5173\u4e8eSPA\u6a21\u5f0f\u5982\u4f55\u672a\u80fd\u7b80\u5316Web\u5f00\u53d1\u7684\u6587\u7ae0\u3002\u6211\u8bd5\u56fe\u5b9a\u4e49\u7684SPA\u6a21\u5f0f(Single-Page Apps)\u662f\u5173\u4e8eReaction\u6a21\u578b\u7684\uff0c\u8be5\u6a21\u578b\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u8fd8\u6db5\u76d6\u4e86Vue\u3001ANGLE\u548c\u5176\u4ed6\u524d\u7aef\u6846\u67b6\u7684\u6a21\u578b\u3002\n\u5c31\u50cf\u4efb\u4f55\u6279\u8bc4\u4e00\u6837\uff0c\u5b83\u4e5e\u6c42\u5f00\u5904\u65b9\uff0c\u800c\u6211\u6ca1\u6709\u5f00\u5904\u65b9\uff0c\u53ea\u662f\u6307\u7740\u50cfRails\u548cDjango\u8fd9\u6837\u7684\u670d\u52a1\u5668\u7aef\u6846\u67b6\u3002\u4f46\u6211\u8ba4\u4e3a\u6709\u4e00\u4e9b\u8d8b\u52bf\u5f00\u59cb\u5f62\u6210\u3002\u6211\u5df2\u7ecf\u6392\u4e86\u4e00\u4e9b\u65f6\u95f4\u6765\u771f\u6b63\u6df1\u5165\u7814\u7a76\u8fd9\u4e9b\u6846\u67b6\uff0c\u4f46\u50cf\u5728\u516c\u56ed\u91cc\u6563\u6b65\u8fd9\u6837\u7684\u4e8b\u60c5\u5df2\u7ecf\u88ab\u4f18\u5148\u8003\u8651\u4e86\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u662f\u4e00\u6b21\u76db\u5927\u7684\u53c2\u89c2\u3002\n\u6211\u4e3b\u8981\u8c08\u8bba\u7684\u662fRemix\u3001Redwood JS\u548cBlitz.js\uff0c\u4e0d\u8fc7\u6211\u786e\u4fe1\u5728\u65e0\u53cd\u5e94\u9886\u57df\u4e5f\u6709\u7c7b\u4f3c\u7684\u52aa\u529b\u3002Js\u51e0\u4e4e\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\uff0c\u4f46\u636e\u6211\u6240\u77e5\uff0c\u5b83\u5bf9\u6570\u636e\u5c42\u4ecd\u7136\u6ca1\u6709\u610f\u89c1\uff0c\u5927\u591a\u6570\u4f7f\u7528Next.js\u7684\u7ad9\u70b9\u4ecd\u5c06\u4f7f\u7528\u5355\u72ec\u7684API\u5806\u6808\u3002\u4f46\u8fd9\u53ef\u80fd\u4f1a\u6539\u53d8\uff0c\u56e0\u4e3a\u6240\u6709\u8fd9\u4e9b\u90fd\u5728\u5feb\u901f\u53d1\u5c55\u3002\n\u6709\u8da3\u7684\u662f\uff0cRemix\u3001Redwood\u548cNeXT\u90fd\u5f97\u5230\u4e86\u516c\u53f8\u6216\u57fa\u91d1\u4f1a\u7684\u652f\u6301\uff0c\u800c\u95ea\u7535\u6218\u7684\u76ee\u6807\u662f\u5f88\u65e9\u5c31\u6210\u4e3a\u8d5e\u52a9\u5546\u8d44\u52a9\u7684\u9879\u76ee\u3002\u6211\u8ba4\u4e3a\uff0c\u8fd9\u4e9b\u9879\u76ee\u8bd5\u56fe\u907f\u5f00\u65e9\u5148\u5f00\u653e\u6e90\u7801\u7684\u201c\u516c\u5730\u60b2\u5267\u201d\u5931\u8d25\uff0c\u5373\u8d85\u8d1f\u8377\u5de5\u4f5c\u548c\u65e0\u62a5\u916c\u7684\u7ef4\u62a4\u4eba\u5458\u4e3a\u5927\u91cf\u7528\u6237\u63d0\u4f9b\u670d\u52a1\uff0c\u6700\u7ec8\u8017\u5c3d\u5e76\u653e\u5f03\u8be5\u9879\u76ee\u3002\n\u4ee5Remix\u4e3a\u4f8b\uff0c\u5b83\u5c06\u6570\u636e\u52a0\u8f7d\u4e0e\u8def\u7531\u91cd\u65b0\u6346\u7ed1\u5728\u4e00\u8d77\uff0c\u7136\u540e\u7ed9\u51fa\u4e86\u4e00\u4e2a\u76f8\u5f53\u60ca\u4eba\u7684\u627f\u8bfa\uff0c\u5373\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u63d0\u53d6\u5ba2\u6237\u7aef\u6570\u636e\u3002\u8fd9\u4e9b\u6846\u67b6\u5728\u72b6\u6001\u4ee3\u7801\u548c\u7f13\u5b58\u7b56\u7565\u4e0a\u4e5f\u662f\u56fa\u6267\u5df1\u89c1\u7684\u3002Redwood JS\u4f7f\u7528GraphQL\u548cPrisma\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u7c7b\u4f3cORM\u7684\u754c\u9762\u3002\n\u4f5c\u4e3a\u80cc\u666f\uff0cRemix\u5f97\u5230\u4e86Reaction\u57f9\u8bad\u4eba\u5458\u7684\u652f\u6301\uff0c\u4ed6\u4eec\u4e5f\u662fReaction Router\u7684\u6210\u5458\uff0c\u8fd9\u662f\u60a8\u5728\u6ca1\u6709\u52a0\u5165Facebook\u56e2\u961f\u7684\u60c5\u51b5\u4e0b\u6240\u80fd\u83b7\u5f97\u7684\u6700\u591a\u7684Reaction\u8840\u7edf\u3002Redwood\u7531\u666e\u96f7\u65af\u987f-\u6c83\u7eb3\u98ce\u9669\u6295\u8d44\u516c\u53f8(Preston-Werner Ventures)\u8fd0\u8425\uff0c\u5176\u521b\u59cb\u4eba\u6c64\u59c6\u00b7\u666e\u96f7\u65af\u987f-\u6c83\u7eb3(Tom Preston-Werner)\u662fGitHub\u7684\u521b\u59cb\u4eba\u3002Next.js\u662f\u7531Vercel\uff0cNe\u00e9Zeit\u8d5e\u52a9\u548c\u5927\u529b\u63a8\u5e7f\u7684\u3002\n\u503c\u5f97\u4e00\u63d0\u7684\u662fTurbolinks\u3002\u6211\u76f4\u5230\u4eca\u5e74\u624d\u4f7f\u7528\u5b83\uff0c\u663e\u7136\u4e4b\u524d\u5b83\u6709\u95ee\u9898\uff0c\u4f46Turbolinks 5\u7684\u91cd\u70b9\u662f\uff1a\u5728\u6ca1\u6709\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u5408\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u81f3\u5c11\u9700\u8981\u505a\u4ec0\u4e48\u624d\u80fd\u83b7\u5f97SPA\u4f53\u9a8c\uff1f\n\u56e0\u6b64\uff0c\u5b83\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684JavaScript\u5e93\uff0c\u5b83\u4f4d\u4e8e\u73b0\u6709\u7684\u670d\u52a1\u5668\u5448\u73b0\u7684\u5e94\u7528\u7a0b\u5e8f\u4e4b\u4e0a\uff0c\u5e76\u7528\u7c7b\u4f3c\u4e8eSPA\u7684\u90e8\u5206\u9875\u9762\u52a0\u8f7d\u66ff\u6362\u5b8c\u6574\u7684\u9875\u9762\u52a0\u8f7d\u3002\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u52a0\u8f7d\u9875\u9762\uff0c\u800c\u662f\u4f7f\u7528Ajax\u52a0\u8f7d\u9875\u9762\uff0c\u66ff\u6362\u9875\u9762\u5185\u5bb9\uff0c\u5e76\u4e14\u5ba2\u6237\u7aef\u5bfc\u822a\u66f4\u65b0\u60a8\u7684URL\u3002\u57fa\u672c\u4e0a\uff0c\u5b83\u53ef\u4ee5\u9632\u6b62\u5b9e\u9645\u9875\u9762\u8fc7\u6e21\u7684\u201c\u7728\u773c\u201d\uff0c\u5e76\u8282\u7701\u5b8c\u5168\u52a0\u8f7d\u65b0\u9875\u9762\u7684\u6240\u6709\u5176\u4ed6\u6210\u672c\u3002Turbolinks\u662f\u4eceRuby on rails\u9879\u76ee\u884d\u751f\u51fa\u6765\u7684\uff0c\u5728Rails\u4e0a\u5de5\u4f5c\u5f97\u5f88\u597d\uff0c\u4f46\u5e76\u4e0d\u9700\u8981\u5b83\u3002\n\u5c31\u7528\u6237\u4f53\u9a8c\u6539\u8fdb\u7684\u91cd\u91cf\u6bd4\u800c\u8a00\uff0cTurbolinks\u662f\u4e00\u4e2a\u4f7c\u4f7c\u8005\uff1a\u5b83\u51e0\u4e4e\u6ca1\u6709\u589e\u52a0\u590d\u6742\u6027\uff0c\u800c\u4e14\u5bf9\u7528\u6237\u4f53\u9a8c\u7684\u5927\u5e45\u6539\u5584\u53ea\u4ea7\u751f\u4e86\u5f88\u5c0f\u7684\u5f71\u54cd\u3002\n\u8fd9\u4e9b\u662f\u6700\u8fa3\u7684\u65b0\u89e3\u51b3\u65b9\u6848\u3002\u4e3b\u8981\u7ade\u4e89\u8005\u662fLaravel Livewire(PHP\u7248)\u3001Sumulus Reflex(Ruby on rails\u7248)\u548cPhoenix LiveView(\u51e4\u51f0\u7f51\u4e0a\u7684Elixir\u7248)\u3002\n\u8fd9\u91cc\u7684\u91cd\u70b9\u662f\uff1a\u5982\u679c\u60a8\u4e0d\u9700\u8981\u7f16\u5199\u4efb\u4f55JavaScript\u4f1a\u600e\u4e48\u6837\uff1f\u5b83\u6709\u70b9\u50cf\u662f\u5728\u201c\u4e3a\u4ec0\u4e48\u201d\u7684art&amp\uff1b&amp\uff1bcode Talk\u4e2d\u5bf9JavaScript\u7684\u6279\u8bc4\uff0c\u5373Web\u5f00\u53d1\u662f\u901a\u5e38\u5fc5\u987b\u7528\u4e09\u79cd(\u6216\u66f4\u591a)\u8bed\u8a00\u7f16\u5199\u7684\u552f\u4e00\u4e00\u79cd\u8bed\u8a00\u3002\u8fd9\u4e9b\u8bed\u8a00\u8fd8\u4fdd\u7559\u4e86\u5927\u90e8\u5206\u201c\u5ba2\u6237\u7aef\u201d\u903b\u8f91\uff0c\u5c06\u5176\u5168\u90e8\u653e\u5728\u670d\u52a1\u5668\u7aef\u3002\n\u4ed6\u4eec\u662f\u600e\u4e48\u505a\u5230\u8fd9\u4e00\u70b9\u7684\uff1f\u55ef\uff0c\u6709\u5f88\u591aWebSocket\uff0c\u6bd4\u5982Reflex\u548cLiveView\uff0c\u4ee5\u53ca\u975e\u5e38\u7d27\u5bc6\u8026\u5408\u7684\u670d\u52a1\u5668\u4ea4\u4e92\u3002\u6b63\u5982\u60a8\u5728LiveView\u6f14\u793a(\u6211\u5f3a\u70c8\u63a8\u8350)\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u4e9b\u6846\u67b6\u7684\u64cd\u4f5c\u6709\u70b9\u50cf\u524d\u7aef\u7684\u53cd\u5e94\u5f0fDOM\u5e93-\u5728\u5176\u4e2d\uff0c\u6846\u67b6\u8ba1\u7b97\u51fa\u4ece\u4e00\u79cd\u72b6\u6001\u8f6c\u6362\u5230\u53e6\u4e00\u79cd\u72b6\u6001\u7684\u6700\u5c0f\u6b65\u9aa4-\u53ea\u662f\u8fd9\u4e9b\u6b65\u9aa4\u662f\u5728\u670d\u52a1\u5668\u7aef\u8ba1\u7b97\u7684\uff0c\u7136\u540e\u901a\u5e38\u5728\u5ba2\u6237\u7aef\u5e94\u7528\u3002\u4ed6\u4eec\u8fd8\u5728\u670d\u52a1\u5668\u7aef\u8fdb\u884c\u4e86\u66f4\u591a\u7684\u6570\u636e\u5b58\u50a8\u548c\u72b6\u6001\u7ba1\u7406\uff0c\u56e0\u4e3a\u8bb8\u591a\u539f\u672c\u4e0d\u4f1a\u6301\u4e45\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u4e0a\u7684\u4ea4\u4e92\u73b0\u5728\u81f3\u5c11\u5df2\u7ecf\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4e86\u901a\u4fe1\u3002\n\u8fd9\u4e9b\u6846\u67b6\u4ee4\u4eba\u5174\u594b\uff0c\u800c\u4e14\u975e\u5e38\u9006\u5411\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0e\u201c\u524d\u7aef\u52a0\u4e0d\u53ef\u77e5\u7684API\u5c42\u201d\u6a21\u5f0f\u622a\u7136\u76f8\u53cd\uff0c\u800c\u4e14\u5b83\u4eec\u8fd8\u5168\u5fc3\u5168\u610f\u5730\u63a5\u53d7\u6bcf\u4e2a\u4eba\u90fd\u8bd5\u56fe\u907f\u514d\u7684\u4e8b\u60c5\uff1a\u670d\u52a1\u5668\u4e0a\u7684\u53ef\u53d8\u72b6\u6001\u3002\n\u8fd9\u4e9b\u901a\u5e38\u662f\u5bf9\u4e0a\u8ff0\u529f\u80fd\u7684\u201c\u8865\u5145\u201d\uff0c\u4f46\u5b83\u4eec\u786e\u5b9e\u503c\u5f97\u5927\u58f0\u75be\u547c\uff0c\u56e0\u4e3a\u6211\u8ba4\u4e3a\u5927\u91cf\u7684\u524d\u7aef\u7f16\u7a0b\u95ee\u9898\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u5c11\u91cf\u7684JavaScript\u63d0\u793a\u5373\u53ef\u3002\u4f46\u662f\u4e3b\u8981\u7684\u6ce8\u610f\u4e8b\u9879\u662f\uff0c\u4ed6\u4eec\u5047\u8bbe\u60a8\u4e86\u89e3JavaScript\u548cDOM\uff0c\u8fd9\u4e24\u4e2a\u4e0d\u4e00\u5b9a\u662f\u901a\u7528\u6280\u80fd\u3002\u8bb8\u591a\u5728REACTION\u4e0a\u957f\u5927\u7684\u5f00\u53d1\u4eba\u5458\u5728\u539f\u751f\u6d4f\u89c8\u5668API\u4e0a\u83b7\u5f97\u4e86\u4e00\u4e2a\u771f\u6b63\u7684\u76f2\u70b9\u3002\n\u6211\u770b\u8fc7\u7684\u4e3b\u8981\u6709SIMPLICAL(\u51fa\u81eaRuby on rails\u9635\u8425)\u3001Alpine\u548chtmlx\u3002\u5b83\u4eec\u90fd\u5f88\u5c0f\uff0c\u5728\u73b0\u6709\u9875\u9762\u4e0a\u5de5\u4f5c\u5f97\u5f88\u597d\u3002\u6211\u8ba4\u4e3a--\u706b\u7130\u6765\u4e86--Web\u7ec4\u4ef6\u4e5f\u9002\u5408\u8fd9\u4e2a\u6e10\u8fdb\u5f0f\u589e\u5f3a\u7684\u9886\u57df\uff01\u5982\u679c\u4f60\u53ea\u4f7f\u7528\u597d\u7684Web\u7ec4\u4ef6--\u53ea\u6709GitHub\u7f16\u5199\u7684\u7ec4\u4ef6\u624d\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7ecf\u9a8c\u6cd5\u5219--\u90a3\u4e48\u5b83\u4eec\u5c31\u80fd\u80dc\u4efb\u6539\u5584\u73b0\u6709\u9759\u6001UI\u7684\u4efb\u52a1\u3002\u8fd9\u5c31\u662f\u60a8\u5f00\u59cb\u4f7f\u7528Web\u7ec4\u4ef6\u4f5c\u4e3a\u6210\u719f\u524d\u7aef\u6846\u67b6\u7684\u66ff\u4ee3\u4ea7\u54c1\u7684\u5730\u65b9\uff0c\u800c\u8fd9\u4f3c\u4e4e\u662f\u4e8b\u60c5\u53d8\u5f97\u5371\u9669\u7684\u5730\u65b9\u3002\n\u8fd9\u4e9b\u6846\u67b6\u62e5\u6709\u5728\u6df1\u5ea6\u6539\u8fdb\u7684Web\u5806\u6808\u4e0a\u8fd0\u884c\u7684\u5962\u4f88\uff0c\u8be5\u5806\u6808\u5177\u6709FETCH()\u548cMutationWatch\u7b49\u57fa\u672c\u7ec4\u4ef6\u3002\u8fd9\u4e9b\u4e1c\u897f\u4ee5\u524d\u662f\u6e10\u8fdb\u5f0f\u589e\u5f3a\u6846\u67b6\u5b9e\u7528\u7a0b\u5e8f\u7684\u6838\u5fc3\uff0c\u73b0\u5728\u5b83\u4eec\u53ef\u4ee5\u4ec5\u4ec5\u662f\u8fd9\u4e9b\u6846\u67b6\u6784\u5efa\u7684\u5b9e\u7528\u7a0b\u5e8f\u3002\n\u6211\u6562\u80af\u5b9a\uff0c\u5916\u9762\u8fd8\u6709\u5176\u4ed6\u7684\u6a21\u5f0f\uff01\u4f46\u8fd9\u4e9b\u6f6e\u6d41\u73b0\u5728\u770b\u8d77\u6765\u90fd\u5f88\u5f3a\u5927\uff0c\u770b\u5230\u4e00\u4e9b\u771f\u6b63\u4e0d\u540c\u7684\u3001\u5bcc\u6709\u5192\u9669\u7cbe\u795e\u548c\u5e38\u8bc6\u7684\u65b9\u6cd5\u5f00\u59cb\u6d8c\u73b0\uff0c\u8fd9\u662f\u4e00\u4ef6\u4ee4\u4eba\u7740\u8ff7\u7684\u4e8b\u60c5\u3002", "note_en": "A few months ago, I  wrote an article about how the SPA pattern has failed to simplify web development. The  SPA pattern (Single-Page Apps), I tried to define, was about the React model, which also covers, to a large extent, the model of Vue, Angular, and other frontend frameworks.\n Like any critique, it begs for a prescription and I didn\u2019t give one, other than gesturing toward server-side frameworks like Rails and Django. But I think there are some trends starting to form. I had queued up some time to  really dive into the frameworks, but things like  walking in parks have taken priority, so here\u2019s just a grand tour.\n  Primarily I\u2019m talking about  Remix,  RedwoodJS, and  Blitz.js, though I\u2019m sure there are similar efforts in the non-React world that are relevant.  Next.js  almost falls into this category, but as far as I can tell, it\u2019s still unopinionated about the data layer and most sites that use Next.js are still going to use a separate API stack. But that\u2019s subject to change, because all of these are moving fast.\n It\u2019s interesting to note that Remix, Redwood, and Next are all backed by companies or foundations, and that Blitz is aiming early on to be a  sponsor-funded project. These projects, I think, are trying to sidestep the \u201ctragedy of the commons\u201d failures of earlier open source, wherein overworked and unpaid maintainers service a large userbase and eventually burn out and abandon the project.\n To take Remix as an example, it re-ties data loading with routes, and then gives the pretty amazing promise of  no client side data fetching by default. These frameworks are also  opinionated about status codes and caching strategies. RedwoodJS automatically creates an  ORM-like interface using GraphQL and Prisma.\n As context, Remix is backed by the folks from  React Training, who are also the folks from  React Router, which is as much React pedigree as you can get without joining the team at Facebook. Redwood is run by  Preston-Werner Ventures, of  Tom Preston-Werner, a GitHub founder. Next.js is sponsored and heavily promoted by  Vercel, ne\u00e9 Zeit.\n  It\u2019s worthwhile to just mention  Turbolinks. I didn\u2019t use it until this year, and apparently there were issues with it before, but the pitch for Turbolinks 5 is:  what is the bare minimum you need to do to get the SPA experience without any cooperation from your application?\n So it\u2019s a tiny JavaScript library that sits on top of an existing server-rendered application and replaces full pageloads with SPA-like partial pageloads. Instead of loading a page from scratch, pages are loaded with AJAX, page contents are replaced, and client-side navigation updates your URLs. Basically, it prevents the \u2018blink\u2019 of real page transitions and saves on all othe sorts of costs of fully loading a new page. Turbolinks was spawned from the  Ruby on Rails project, and works great with Rails but doesn\u2019t require it.\n In terms of power-to-weight for user experience improvements, Turbolinks is a standout: it adds very little complexity and a tiny size impact for a big user experience improvement.\n  These are the spiciest new solution. The main contenders are  Laravel Livewire (in PHP),  Stimulus Reflex (for Ruby on Rails), and  Phoenix LiveView (on Phoenix, in Elixir).\n The pitch here is:  what if you didn\u2019t have to write any JavaScript? It sort of hearkens back to the critique of JavaScript in  _why\u2019s ART &amp;&amp; CODE talk, that web development is the only kind where you normally have to write in three (or more) languages. These languages also most remnants of \u201cclient-side\u201d logic, putting it all on the server side.\n How do they do this? Well, a lot of WebSockets, in the case of Reflex and LiveView, as well as very tightly coupled server interactions. As you can see in the  LiveView demo, which I highly recommend, these frameworks tend to operate sort of like reactive DOM libraries on the front end \u2013 in which the framework figures out minimal steps to transform from one state to another - except those steps are computed on the server side and then generically applied on the client side. They also do a lot more data storage &amp; state management on the server-side, because a lot of those interactions which wouldn\u2019t be persisted to the server are now at least communicated to the server.\n These frameworks are exciting, and also extremely contrarian, because they are the polar opposite of the \u201cfrontend plus agnostic API layer\u201d pattern, and they also wholeheartedly embrace the thing everyone tries to avoid: mutable state on the server.\n  These are typically used \u201cin addition\u201d to the above, but they certainly deserve a shout-out because I think a wide swath of frontend-programming concerns actually only need a tiny hint of JavaScript. But the main caveat is that  they assume that you know JavaScript and the DOM, which are not necessarily universal skills anymore. A lot of developers growing up on React have acquired a real blind spot for native browser APIs.\n The main ones I\u2019ve looked at are  Stimulus (out of the Ruby on Rails camp),  Alpine, and  htmlx. They\u2019re all tiny, and work great in  existing pages. I think \u2013 and here come the flames \u2013  Web Components also fit into this sphere of progressive enhancement! If you just use good web components -  only ones that GitHub writes is a good rule of thumb - then they can fit the role of just improving an existing static UI. It\u2019s where you start to use Web Components as an apples-to-apples replacement for full-fledged frontend frameworks is where things seem to get dicey.\n These frameworks have the luxury of operating on a deeply improved web stack, one with fundamental components like  fetch() and  MutationObserver. These things were previously at the core of the utility of progressive enhancement frameworks, and now they can just be the utilities that those frameworks build on.\n  I\u2019m sure that there are additional patterns out there! But these currents all seem strong right now, and it\u2019s fascinating to see some really divergent and adventurous \u2013 and common-sense \u2013 approaches start to crop up.", "posttime": "2020-10-29 10:33:40", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6c34\u7597,spas,\u6846\u67b6", "title": "\u5982\u679c\u4e0d\u662f\u6c34\u7597\u4e2d\u5fc3\uff0c\u90a3\u662f\u4ec0\u4e48\uff1f", "title_en": "If Not SPAs, What?", "transed": 1, "url": "https://macwright.com/2020/10/28/if-not-spas.html", "via": "", "real_tags": ["\u6c34\u7597", "spas", "\u6846\u67b6"]}, {"category": "", "categoryclass": "", "imagename": "3a216151403551e6e90309921828d1e5.jpg", "infoid": 1031887, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u5217\u6602\u5c3c\u5fb7\u00b7\u7f57\u6208\u4f50\u592b(Leonid Rogozov)\u662f\u4e00\u540d\u82cf\u8054\u5168\u79d1\u533b\u751f\uff0c\u66fe\u57281960-1961\u5e74\u53c2\u52a0\u8fc7\u7b2c\u516d\u6b21\u82cf\u8054\u5357\u6781\u63a2\u9669\u961f\u3002\u4ed6\u662f\u552f\u4e00\u4e00\u540d\u9a7b\u624e\u5728Novolazarevskaya\u8f66\u7ad9\u7684\u533b\u751f\uff0c\u5728\u90a3\u91cc\u671f\u95f4\uff0c\u4ed6\u60a3\u4e0a\u4e86\u9611\u5c3e\u708e\uff0c\u8fd9\u610f\u5473\u7740\u4ed6\u4e0d\u5f97\u4e0d\u7ed9\u81ea\u5df1\u505a\u9611\u5c3e\u5207\u9664\u672f\uff0c\u8fd9\u662f\u4e00\u4e2a\u8457\u540d\u7684\u81ea\u6211\u624b\u672f\u6848\u4f8b\u3002\n1961\u5e74\uff0c\u7f57\u6208\u4f50\u592b\u9a7b\u624e\u5728\u5357\u6781\u6d32\u65b0\u5efa\u7684\u4fc4\u7f57\u65af\u57fa\u5730\u3002\u5230\u5f53\u5e743\u6708\uff0c\u7531\u4e8e\u6781\u5730\u7684\u51ac\u5929\uff0c\u91cc\u9762\u768412\u4e2a\u4eba\u4e0e\u5916\u754c\u9694\u7edd\u4e86\u30021961\u5e744\u670829\u65e5\u65e9\u6668\uff0c\u7f57\u6208\u4f50\u592b\u51fa\u73b0\u5168\u8eab\u865a\u5f31\u3001\u6076\u5fc3\u548c\u4e2d\u5ea6\u53d1\u70e7\uff0c\u540e\u6765\u53f3\u4e0b\u8179\u75bc\u75db\u3002\n\u4ed6\u7684\u75c7\u72b6\u5f88\u5178\u578b\uff1a\u4ed6\u60a3\u4e86\u6025\u6027\u9611\u5c3e\u708e\u3002\u201c\u82f1\u56fd\u533b\u5b66\u6742\u5fd7\u201d\u62a5\u9053\u8bf4\uff1a\u201c\u4ed6\u77e5\u9053\u5982\u679c\u4ed6\u60f3\u6d3b\u4e0b\u6765\uff0c\u4ed6\u5fc5\u987b\u63a5\u53d7\u624b\u672f\u3002\u201d\u201c\u4f46\u4ed6\u5f53\u65f6\u5904\u5728\u4e00\u4e2a\u65b0\u5efa\u7acb\u7684\u5357\u6781\u6b96\u6c11\u5730\u7684\u8fb9\u754c\u6761\u4ef6\u4e0b\uff0c\u5373\u5c06\u8fdb\u5165\u6781\u591c\u3002\u4ea4\u901a\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u56e0\u4e3a\u66b4\u98ce\u96ea\uff0c\u5750\u98de\u673a\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u4ed6\u662f\u57fa\u5730\u91cc\u552f\u4e00\u7684\u533b\u751f\u3002\u7f57\u6208\u4f50\u592b\u5728\u65e5\u8bb0\u4e2d\u5199\u9053\uff1a\n\u201c\u6211\u597d\u50cf\u5f97\u4e86\u9611\u5c3e\u708e\u3002\u6211\u5bf9\u6b64\u4fdd\u6301\u6c89\u9ed8\uff0c\u751a\u81f3\u5fae\u7b11\u3002\u4e3a\u4ec0\u4e48\u8981\u5413\u552c\u6211\u7684\u670b\u53cb\uff1f\u8c01\u80fd\u5e2e\u4e0a\u5fd9\u5462\uff1f\u6781\u5730\u63a2\u9669\u5bb6\u4e0e\u533b\u5b66\u7684\u552f\u4e00\u9082\u9005\u5f88\u53ef\u80fd\u662f\u5750\u5728\u7259\u533b\u7684\u6905\u5b50\u4e0a\u201c\u3002\n\u6240\u6709\u53ef\u7528\u7684\u4fdd\u5b88\u6cbb\u7597\u90fd\u5f97\u5230\u4e86\u5e94\u7528(\u6297\u751f\u7d20\uff0c\u5c40\u90e8\u964d\u6e29)\uff0c\u4f46\u60a3\u8005\u7684\u4e00\u822c\u60c5\u51b5\u8d8a\u6765\u8d8a\u5dee\uff1a\u4f53\u6e29\u4e0a\u5347\uff0c\u5455\u5410\u53d8\u5f97\u66f4\u52a0\u9891\u7e41\u3002\n\u201c\u6211\u6628\u665a\u4e00\u591c\u6ca1\u7761\u3002\u75bc\u5f97\u8981\u547d\uff01\u66b4\u98ce\u96ea\u5e2d\u5377\u6211\u7684\u7075\u9b42\uff0c\u50cf\u4e00\u767e\u53ea\u72fc\u4e00\u6837\u54c0\u53f7\u3002\u4ecd\u7136\u6ca1\u6709\u660e\u663e\u7684\u75c7\u72b6\u8868\u660e\u7a7f\u5b54\u8feb\u5728\u7709\u776b\uff0c\u4f46\u4e00\u79cd\u4e0d\u7965\u7684\u538b\u8feb\u611f\u7b3c\u7f69\u7740\u6211\u2026\u3002\u5c31\u662f\u8fd9\u4e2a\uff0c\u2026\u3002\u6211\u5fc5\u987b\u60f3\u6e05\u695a\u552f\u4e00\u53ef\u80fd\u7684\u51fa\u8def\uff1a\u7ed9\u81ea\u5df1\u52a8\u624b\u672f\u2026\u3002\u8fd9\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u2026\u3002\u4f46\u6211\u4e0d\u80fd\u8896\u624b\u65c1\u89c2\uff0c\u653e\u5f03\u3002\u201c\u3002\n\u7f57\u6208\u4f50\u592b\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u81ea\u5df1\u505a\u624b\u672f\u3002\u884c\u52a8\u4e8e\u5f53\u5730\u65f6\u95f45\u67081\u65e5\u51cc\u66682\u70b9\u5728\u4e00\u540d\u53f8\u673a\u548c\u6c14\u8c61\u5b66\u5bb6\u7684\u5e2e\u52a9\u4e0b\u5f00\u59cb\uff0c\u4ed6\u4eec\u6b63\u5728\u63d0\u4f9b\u4eea\u5668\uff0c\u624b\u6301\u955c\u5b50\u89c2\u5bdf\u4e0d\u53ef\u76f4\u63a5\u770b\u5230\u7684\u533a\u57df\uff0c\u800c\u7f57\u6208\u4f50\u592b\u5219\u5904\u4e8e\u534a\u5367\u4f4d\uff0c\u534a\u8f6c\u5411\u5de6\u4fa7\u3002\n30-40\u5206\u949f\u540e\uff0c\u7531\u4e8e\u5168\u8eab\u865a\u5f31\u548c\u7729\u6655\uff0c\u7f57\u6208\u4f50\u592b\u5f00\u59cb\u77ed\u6682\u4f11\u606f\u3002\u6700\u540e\uff0c\u4ed6\u5207\u9664\u4e86\u53d7\u4e25\u91cd\u5f71\u54cd\u7684\u9611\u5c3e\u3002\u4ed6\u5728\u8179\u8154\u5185\u4f7f\u7528\u4e86\u6297\u751f\u7d20\uff0c\u5e76\u7f1d\u5408\u4e86\u4f24\u53e3\u3002\u624b\u672f\u672c\u8eab\u6301\u7eed\u4e861\u5c0f\u65f645\u5206\u949f\u3002\u4e2d\u9014\uff0c\u5e2e\u52a9\u5c0f\u7ec4\u62cd\u6444\u4e86\u884c\u52a8\u7684\u7167\u7247\u3002\n\u201c\u6211\u5de5\u4f5c\u65f6\u6ca1\u6709\u6234\u624b\u5957\u3002\u5f88\u96be\u770b\u6e05\u3002\u955c\u5b50\u6709\u5e2e\u52a9\uff0c\u4f46\u4e5f\u6709\u963b\u788d--\u6bd5\u7adf\uff0c\u5b83\u662f\u5728\u5012\u7740\u770b\u4e1c\u897f\u3002\u6211\u4e3b\u8981\u9760\u89e6\u6478\u6765\u5de5\u4f5c\u3002\u51fa\u8840\u76f8\u5f53\u4e25\u91cd\uff0c\u4f46\u6211\u4e0d\u7740\u6025--\u6211\u52aa\u529b\u5de5\u4f5c\u3002\u6253\u5f00\u8179\u819c\uff0c\u6211\u5f04\u4f24\u4e86\u76f2\u80a0\uff0c\u4e0d\u5f97\u4e0d\u7f1d\u5408\u3002\u7a81\u7136\uff0c\u6211\u7684\u8111\u6d77\u91cc\u95ea\u8fc7\u8fd9\u6837\u4e00\u4e2a\u5ff5\u5934\uff1a\u8fd9\u91cc\u6709\u66f4\u591a\u7684\u4f24\u5458\uff0c\u6211\u6ca1\u6709\u6ce8\u610f\u5230\u3002\u2026\u3002\u6211\u53d8\u5f97\u8d8a\u6765\u8d8a\u865a\u5f31\uff0c\u6211\u7684\u5934\u5f00\u59cb\u65cb\u8f6c\u3002\u6bcf\u96944-5\u5206\u949f\uff0c\u6211\u4f11\u606f20-25\u79d2\u3002\n\u7ec8\u4e8e\u5230\u4e86\uff0c\u88ab\u8bc5\u5492\u7684\u9644\u5c5e\u7269\uff01\u6211\u60ca\u6050\u5730\u6ce8\u610f\u5230\u5b83\u5e95\u90e8\u7684\u6df1\u8272\u6c61\u6e0d\u3002\u8fd9\u610f\u5473\u7740\u53ea\u8981\u518d\u591a\u4e00\u5929\uff0c\u5b83\u5c31\u4f1a\u7834\u88c2\u548c\u2026\u3002\u5728\u5207\u9664\u9611\u5c3e\u7684\u6700\u7cdf\u7cd5\u65f6\u523b\uff0c\u6211\u53d1\u4e86\u4e00\u53e5\u8bdd\uff1a\u6211\u7684\u5fc3\u810f\u505c\u6b62\u8df3\u52a8\uff0c\u660e\u663e\u653e\u6162\u4e86\u901f\u5ea6\uff1b\u6211\u7684\u624b\u6478\u8d77\u6765\u50cf\u6a61\u80f6\u4e00\u6837\u3002\u55ef\uff0c\u6211\u60f3\uff0c\u7ed3\u5c40\u4f1a\u5f88\u7cdf\u7cd5\u3002\u5269\u4e0b\u7684\u5c31\u662f\u5207\u9664\u9611\u5c3e\u2026\u3002\u7136\u540e\u6211\u610f\u8bc6\u5230\uff0c\u57fa\u672c\u4e0a\uff0c\u6211\u5df2\u7ecf\u5f97\u6551\u4e86\u3002\u201c\u3002\n\u672f\u540e\u8179\u819c\u708e\u4f53\u5f81\u53caRogozov\u4e00\u822c\u60c5\u51b5\u9010\u6e10\u6539\u5584\u30025\u5929\u540e\u4f53\u6e29\u6062\u590d\u6b63\u5e38\uff0c7\u5929\u540e\u62c6\u7ebf\u3002\u5927\u7ea6\u4e24\u5468\u540e\uff0c\u4ed6\u6062\u590d\u4e86\u6b63\u5e38\u7684\u5de5\u4f5c\u3002\u8fd9\u6b21\u81ea\u6211\u624b\u672f\u6fc0\u53d1\u4e86\u5f53\u65f6\u82cf\u8054\u516c\u4f17\u7684\u60f3\u8c61\u529b\u30021961\u5e74\uff0c\u4ed6\u88ab\u6388\u4e88\u52b3\u52a8\u7ea2\u65d7\u52cb\u7ae0\u3002\n\u7f57\u6208\u4f50\u592b\u7684\u81ea\u6211\u64cd\u4f5c\u4ecd\u7136\u662f\u51b3\u5fc3\u548c\u4eba\u7c7b\u751f\u547d\u610f\u5fd7\u7684\u5178\u8303\u3002\u5728\u540e\u6765\u7684\u51e0\u5e74\u91cc\uff0c\u7f57\u6208\u4f50\u592b\u672c\u4eba\u62d2\u7edd\u4e00\u5207\u7f8e\u5316\u4ed6\u7684\u884c\u4e3a\u3002\u5f53\u6709\u4eba\u5411\u4ed6\u63d0\u51fa\u8fd9\u6837\u7684\u60f3\u6cd5\u65f6\uff0c\u4ed6\u901a\u5e38\u4f1a\u5fae\u7b11\u7740\u56de\u7b54\u8bf4\uff1a\u201c\u5de5\u4f5c\u548c\u5176\u4ed6\u5de5\u4f5c\u4e00\u6837\uff0c\u751f\u6d3b\u548c\u5176\u4ed6\u5de5\u4f5c\u4e00\u6837\u3002\u201d\n1962\u5e7410\u6708\uff0c\u7f57\u6208\u4f50\u592b\u56de\u5230\u5217\u5b81\u683c\u52d2\uff0c\u5f00\u59cb\u5728\u4ed6\u7684\u6bcd\u6821\u653b\u8bfbMD\u5b66\u4f4d\u30021966\u5e749\u6708\uff0c\u4ed6\u4e3a\u4e00\u7bc7\u9898\u4e3a\u201c\u5207\u9664\u98df\u7ba1\u6cbb\u7597\u98df\u7ba1\u764c\u201d\u7684MD\u8bba\u6587\u8fa9\u62a4\u3002\u540e\u6765\uff0c\u4ed6\u5728\u5723\u5f7c\u5f97\u5821\u7684\u591a\u5bb6\u533b\u9662\u62c5\u4efb\u533b\u751f\u3002\n1986\u5e74\u81f32000\u5e74\uff0c\u4ed6\u62c5\u4efb\u5723\u5f7c\u5f97\u5821\u80ba\u7ed3\u6838\u75c5\u7814\u7a76\u6240\u5916\u79d1\u4e3b\u4efb\uff0c\u7f57\u6208\u4f50\u592b\u4e8e2000\u5e74\u56e0\u80ba\u764c\u5728\u4fc4\u7f57\u65af\u5723\u5f7c\u5f97\u5821\u53bb\u4e16\uff0c\u4eab\u5e7466\u5c81\u3002", "note_en": "Leonid Rogozov was a Soviet general practitioner who took part in the sixth Soviet Antarctic Expedition in 1960\u20131961. He was the only doctor stationed at the Novolazarevskaya Station and, while there, developed appendicitis, which meant he had to perform an appendectomy on himself, a famous case of self-surgery.\n In 1961, Rogozov was stationed at a newly constructed Russian base in Antarctica. The 12 men inside were cut off from the outside world by the polar winter by March of that year. On the morning of 29 April 1961, Rogozov experienced general weakness, nausea, and moderate fever, and later pain in the lower right portion of the abdomen.\n His symptoms were classic: he had acute appendicitis. \u201cHe knew that if he was to survive he had to undergo an operation\u201d, the British Medical Journal recounted. \u201cBut he was in the frontier conditions of a newly founded Antarctic colony on the brink of the polar night. Transportation was impossible. Flying was out of the question, because of the snowstorms. And there was one further problem: he was the only physician on the base\u201d. Rogozov wrote in his diary:\n \u201cIt seems that I have appendicitis. I am keeping quiet about it, even smiling. Why frighten my friends? Who could be of help? A polar explorer\u2019s only encounter with medicine is likely to have been in a dentist\u2019s chair\u201d.\n  All the available conservative treatment was applied (antibiotics, local cooling), but the patient\u2019s general condition was getting worse: his body temperature rose, vomiting became more frequent.\n \u201cI did not sleep at all last night. It hurts like the devil! A snowstorm whipping through my soul, wailing like a hundred jackals. Still no obvious symptoms that perforation is imminent, but an oppressive feeling of foreboding hangs over me\u2026 This is it\u2026 I have to think through the only possible way out: to operate on myself\u2026It\u2019s almost impossible\u2026but I can\u2019t just fold my arms and give up\u201d.\n Rogozov had no option but to perform the operation on himself. The operation started at 02:00 local time on the first day of May with the help of a driver and meteorologist, who were providing instruments and holding a mirror to observe areas not directly visible, while Rogozov was in a semi-reclining position, half-turned to his left side.\n After 30-40 minutes Rogozov started to take short breaks because of general weakness and vertigo. Finally he removed the severely affected appendix. He applied antibiotics in the peritoneal cavity and closed the wound. The operation itself lasted an hour and 45 minutes. Partway through, the helping team took photographs of the operation.\n  \u201cI worked without gloves. It was hard to see. The mirror helps, but it also hinders\u2014after all, it\u2019s showing things backwards. I work mainly by touch. The bleeding is quite heavy, but I take my time\u2014I try to work surely. Opening the peritoneum, I injured the blind gut and had to sew it up. Suddenly it flashed through my mind: there are more injuries here and I didn\u2019t notice them\u2026 I grow weaker and weaker, my head starts to spin. Every 4-5 minutes I rest for 20-25 seconds.\n Finally, here it is, the cursed appendage! With horror I notice the dark stain at its base. That means just a day longer and it would have burst and\u2026 At the worst moment of removing the appendix I flagged: my heart seized up and noticeably slowed; my hands felt like rubber. Well, I thought, it\u2019s going to end badly. And all that was left was removing the appendix\u2026 And then I realized that, basically, I was already saved\u201d.\n After the operation gradual improvement occurred in the signs of peritonitis and in the general condition of Rogozov. Body temperature returned to normal after five days, and the stitches were removed seven days after the operation. He resumed his regular duties in about two weeks.The self-surgery captured the imagination of the Soviet public at the time. In 1961 he was awarded Order of the Red Banner of Labour.\n  Rogozov\u2019s self operation remains an example of determination and the human will for life. In later years Rogozov himself rejected all glorification of his deed. When thoughts like these were put to him, he usually answered with a smile and the words: \u201cA job like any other, a life like any other\u201d.\n In October 1962 Rogozov returned to Leningrad and started working on an MD at his alma mater. In September 1966 he defended an MD thesis titled \u201cResection of the esophagus for treating esophageal cancer\u201d. He later worked as a doctor in various hospitals in Saint Petersburg.\n From 1986 to 2000 he served as the head of the surgery department of Saint Petersburg Research Institute for Tubercular Pulmonology.\u00a0Rogozov died in 2000, aged 66, in Saint Petersburg, Russia, from lung cancer.", "posttime": "2020-10-29 10:33:19", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5217\u6602\u5c3c,rogozov,\u7f57\u6208", "title": "1961\u5e74\uff0c\u5357\u6781\u6d32\u7684\u5217\u6602\u5c3c\u5fb7\u00b7\u7f57\u6208\u4f50\u592b\u533b\u751f\u4e3a\u81ea\u5df1\u505a\u9611\u5c3e\u5207\u9664\u624b\u672f\u3002", "title_en": "Dr. Leonid Rogozov operating himself to remove his appendix in Antarctica, 1961", "transed": 1, "url": "https://rarehistoricalphotos.com/leonid-rogozov-appendix-1961/", "via": "", "real_tags": ["\u5217\u6602\u5c3c", "rogozov", "\u7f57\u6208"]}, {"category": "", "categoryclass": "", "imagename": "d72fd0997d738ca860b87f549eac0243.gif", "infoid": 1031886, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u968f\u7740\u4eba\u4eec\u5e74\u9f84\u7684\u589e\u957f\uff0c\u4ed6\u4eec\u7ecf\u5e38\u5931\u53bb\u5b66\u4e60\u65b0\u4e8b\u7269\u6216\u53c2\u4e0e\u65e5\u5e38\u6d3b\u52a8\u7684\u52a8\u529b\u3002\u5728\u4e00\u9879\u5bf9\u8001\u9f20\u7684\u7814\u7a76\u4e2d\uff0c\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7684\u795e\u7ecf\u79d1\u5b66\u5bb6\u73b0\u5728\u5df2\u7ecf\u786e\u5b9a\u4e86\u5bf9\u7ef4\u6301\u8fd9\u79cd\u52a8\u673a\u81f3\u5173\u91cd\u8981\u7684\u5927\u8111\u56de\u8def\u3002\n\u8fd9\u6761\u7ebf\u8def\u5bf9\u4e8e\u5b66\u4e60\u505a\u51fa\u9700\u8981\u8bc4\u4f30\u7279\u5b9a\u884c\u52a8\u5e26\u6765\u7684\u6210\u672c\u548c\u56de\u62a5\u7684\u51b3\u7b56\u5c24\u5176\u91cd\u8981\u3002\u7814\u7a76\u4eba\u5458\u8868\u660e\uff0c\u4ed6\u4eec\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u6fc0\u6d3b\u8fd9\u4e00\u56de\u8def\u6765\u589e\u5f3a\u8001\u5e74\u5c0f\u9f20\u4ece\u4e8b\u8fd9\u7c7b\u5b66\u4e60\u7684\u52a8\u673a\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6291\u5236\u8be5\u56de\u8def\u6765\u964d\u4f4e\u52a8\u673a\u3002\n\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u6559\u6388\u3001\u9ea6\u6208\u6587\u8111\u7814\u7a76\u6240\u6210\u5458\u5b89\u00b7\u683c\u96f7\u6bd4\u5c14(Ann Graybiel)\u8bf4\uff1a\u201c\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\uff0c\u6211\u4eec\u66f4\u96be\u5bf9\u4e8b\u7269\u62b1\u6709\u79ef\u6781\u8fdb\u53d6\u7684\u6001\u5ea6\u3002\u201d\u201c\u8fd9\u79cd\u79ef\u6781\u53c2\u4e0e\u5bf9\u6211\u4eec\u7684\u793e\u4f1a\u798f\u7949\u548c\u5b66\u4e60\u90fd\u5f88\u91cd\u8981--\u5982\u679c\u4f60\u4e0d\u53c2\u52a0\u5e76\u53c2\u4e0e\u5176\u4e2d\uff0c\u5c31\u5f88\u96be\u5b66\u4e60\u3002\u201d\n\u683c\u96f7\u8d1d\u5c14\u662f\u8fd9\u9879\u7814\u7a76\u7684\u8d44\u6df1\u4f5c\u8005\uff0c\u8be5\u7814\u7a76\u53d1\u8868\u5728\u4eca\u5929\u7684\u201c\u7ec6\u80de\u201d\u6742\u5fd7\u4e0a\u3002\u8fd9\u7bc7\u8bba\u6587\u7684\u4e3b\u8981\u4f5c\u8005\u662f\u524d\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7814\u7a76\u79d1\u5b66\u5bb6\u4e9a\u5386\u5c71\u5927\u00b7\u5f17\u91cc\u5fb7\u66fc(Alexander Friedman)\uff0c\u73b0\u5728\u662f\u5fb7\u514b\u8428\u65af\u5927\u5b66\u57c3\u5c14\u5e15\u7d22\u5206\u6821(University Of Texas At El Paso)\u7684\u52a9\u7406\u6559\u6388\uff0c\u4ee5\u53ca\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7814\u7a76\u79d1\u5b66\u5bb6\u827e\u7c73\u4e3d\u00b7\u8d6b\u65af\u514b(Emily Hueske)\u3002\n\u7eb9\u72b6\u4f53\u662f\u57fa\u5e95\u795e\u7ecf\u8282\u7684\u4e00\u90e8\u5206\uff0c\u57fa\u5e95\u795e\u7ecf\u8282\u662f\u4e0e\u4e60\u60ef\u5f62\u6210\u3001\u63a7\u5236\u968f\u610f\u8fd0\u52a8\u3001\u60c5\u7eea\u548c\u6210\u763e\u6709\u5173\u7684\u5927\u8111\u4e2d\u5fc3\u7684\u96c6\u5408\u3002\u51e0\u5341\u5e74\u6765\uff0c\u683c\u96f7\u6bd4\u5c14\u7684\u5b9e\u9a8c\u5ba4\u4e00\u76f4\u5728\u7814\u7a76\u5206\u5e03\u5728\u6574\u4e2a\u7eb9\u72b6\u4f53\u7684\u79f0\u4e3a\u7eb9\u72b6\u4f53\u7684\u7ec6\u80de\u7c07\u3002\u683c\u96f7\u6bd4\u5c14\u5728\u5f88\u591a\u5e74\u524d\u5c31\u53d1\u73b0\u4e86\u7eb9\u72b6\u4f53\uff0c\u4f46\u5b83\u4eec\u7684\u529f\u80fd\u4e00\u76f4\u662f\u4e2a\u8c1c\uff0c\u90e8\u5206\u539f\u56e0\u662f\u5b83\u4eec\u5728\u5927\u8111\u4e2d\u592a\u5c0f\u3001\u592a\u6df1\uff0c\u5f88\u96be\u7528\u529f\u80fd\u78c1\u5171\u632f\u6210\u50cf(FMRI)\u5bf9\u5176\u8fdb\u884c\u6210\u50cf\u3002\n\u8fd1\u5e74\u6765\uff0c\u5f17\u91cc\u5fb7\u66fc\u3001\u683c\u96f7\u8d1d\u5c14\u548c\u5305\u62ec\u9ebb\u7701\u7406\u5de5\u5b66\u9662\u7814\u7a76\u5458\u80af-\u4e00\u00b7\u963f\u4f69\u96f7\u8482\u5728\u5185\u7684\u540c\u4e8b\u4eec\u53d1\u73b0\uff0c\u7eb9\u72b6\u4f53\u5728\u4e00\u79cd\u88ab\u79f0\u4e3a\u63a5\u8fd1-\u907f\u514d\u51b2\u7a81\u7684\u51b3\u7b56\u4e2d\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\u3002\u8fd9\u4e9b\u51b3\u5b9a\u5305\u62ec\uff0c\u5f53\u7ed9\u51fa\u65e2\u6709\u79ef\u6781\u56e0\u7d20\u53c8\u6709\u6d88\u6781\u56e0\u7d20\u7684\u9009\u9879\u65f6\uff0c\u9009\u62e9\u662f\u5c06\u597d\u4e8b\u4e0e\u574f\u4e8b\u4e00\u8d77\u5e26\u8d70\uff0c\u8fd8\u662f\u540c\u65f6\u907f\u514d\u4e24\u8005\u517c\u800c\u6709\u4e4b\u3002\u8fd9\u7c7b\u51b3\u5b9a\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c\u5fc5\u987b\u9009\u62e9\u662f\u5426\u63a5\u53d7\u4e00\u4efd\u85aa\u6c34\u66f4\u9ad8\u4f46\u53c8\u88ab\u8feb\u79bb\u5f00\u5bb6\u4eba\u548c\u670b\u53cb\u7684\u5de5\u4f5c\u3002\u8fd9\u6837\u7684\u51b3\u5b9a\u5f80\u5f80\u4f1a\u5f15\u8d77\u6781\u5927\u7684\u7126\u8651\u3002\n\u5728\u4e00\u9879\u76f8\u5173\u7684\u7814\u7a76\u4e2d\uff0c\u683c\u96f7\u6bd4\u5c14\u7684\u5b9e\u9a8c\u5ba4\u53d1\u73b0\u7eb9\u72b6\u4f53\u8fde\u63a5\u5230\u9ed1\u8d28\u7684\u7ec6\u80de\uff0c\u9ed1\u8d28\u662f\u5927\u8111\u4e3b\u8981\u7684\u591a\u5df4\u80fa\u751f\u4ea7\u4e2d\u5fc3\u4e4b\u4e00\u3002\u8fd9\u4e9b\u7814\u7a76\u5bfc\u81f4\u7814\u7a76\u4eba\u5458\u5047\u8bbe\uff0c\u7eb9\u72b6\u4f53\u53ef\u80fd\u626e\u6f14\u7740\u5b88\u95e8\u4eba\u7684\u89d2\u8272\uff0c\u5b83\u5438\u6536\u6765\u81ea\u5927\u8111\u76ae\u5c42\u7684\u611f\u89c9\u548c\u60c5\u7eea\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u6574\u5408\u8d77\u6765\uff0c\u4ee5\u4ea7\u751f\u5982\u4f55\u884c\u52a8\u7684\u51b3\u5b9a\u3002\u7136\u540e\uff0c\u8fd9\u4e9b\u6d3b\u52a8\u53ef\u4ee5\u88ab\u4ea7\u751f\u591a\u5df4\u80fa\u7684\u7ec6\u80de\u6fc0\u6d3b\u3002\n\u7814\u7a76\u4eba\u5458\u540e\u6765\u53d1\u73b0\uff0c\u6162\u6027\u538b\u529b\u5bf9\u8fd9\u4e00\u56de\u8def\u548c\u8fd9\u79cd\u60c5\u7eea\u5316\u51b3\u7b56\u6709\u91cd\u5927\u5f71\u54cd\u3002\u57282017\u5e74\u5bf9\u5927\u9f20\u548c\u5c0f\u9f20\u8fdb\u884c\u7684\u4e00\u9879\u7814\u7a76\u4e2d\uff0c\u4ed6\u4eec\u8868\u660e\uff0c\u538b\u529b\u8fc7\u5927\u7684\u52a8\u7269\u66f4\u6709\u53ef\u80fd\u9009\u62e9\u9ad8\u98ce\u9669\u3001\u9ad8\u56de\u62a5\u7684\u9009\u62e9\uff0c\u4f46\u5b83\u4eec\u53ef\u4ee5\u901a\u8fc7\u64cd\u7eb5\u7535\u8def\u6765\u963b\u6b62\u8fd9\u79cd\u5f71\u54cd\u3002\n\u5728\u8fd9\u9879\u65b0\u7684\u7ec6\u80de\u7814\u7a76\u4e2d\uff0c\u7814\u7a76\u4eba\u5458\u5f00\u59cb\u8c03\u67e5\u7eb9\u72b6\u4f53\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u5c0f\u9f20\u5b66\u4f1a\u4e86\u5982\u4f55\u505a\u51fa\u8fd9\u7c7b\u51b3\u5b9a\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4ed6\u4eec\u6d4b\u91cf\u548c\u5206\u6790\u4e86\u7eb9\u72b6\u4f53\u7684\u6d3b\u52a8\uff0c\u56e0\u4e3a\u5c0f\u9f20\u5b66\u4f1a\u4e86\u5728\u79ef\u6781\u548c\u6d88\u6781\u7ed3\u679c\u4e4b\u95f4\u505a\u51fa\u9009\u62e9\u3002\n\u5728\u5b9e\u9a8c\u4e2d\uff0c\u8001\u9f20\u542c\u5230\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u97f3\u8c03\uff0c\u5176\u4e2d\u4e00\u79cd\u4f34\u968f\u7740\u5956\u52b1(\u7cd6\u6c34)\uff0c\u53e6\u4e00\u79cd\u4f34\u968f\u7740\u8f7b\u5ea6\u538c\u6076\u7684\u523a\u6fc0(\u4eae\u5149)\u3002\u8001\u9f20\u9010\u6e10\u4e86\u89e3\u5230\uff0c\u5982\u679c\u5b83\u4eec\u5728\u542c\u5230\u7b2c\u4e00\u58f0\u65f6\u8214\u66f4\u591a\u7684\u55b7\u5634\uff0c\u5b83\u4eec\u4f1a\u5f97\u5230\u66f4\u591a\u7684\u7cd6\u6c34\uff0c\u5982\u679c\u5b83\u4eec\u5728\u7b2c\u4e8c\u58f0\u4e2d\u8214\u5f97\u66f4\u5c11\uff0c\u5149\u7ebf\u5c31\u4e0d\u4f1a\u90a3\u4e48\u4eae\u4e86\u3002\n\u5b66\u4e60\u6267\u884c\u8fd9\u7c7b\u4efb\u52a1\u9700\u8981\u4e3a\u6bcf\u4e00\u9879\u6210\u672c\u548c\u6bcf\u4e00\u9879\u5956\u52b1\u5206\u914d\u4ef7\u503c\u3002\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u5f53\u5c0f\u9f20\u5b66\u4f1a\u8fd9\u9879\u4efb\u52a1\u65f6\uff0c\u7eb9\u72b6\u4f53\u5c0f\u4f53\u8868\u73b0\u51fa\u6bd4\u7eb9\u72b6\u4f53\u5176\u4ed6\u90e8\u5206\u66f4\u9ad8\u7684\u6d3b\u52a8\uff0c\u800c\u4e14\u8fd9\u79cd\u6d3b\u52a8\u4e0e\u5c0f\u9f20\u5bf9\u8fd9\u4e24\u79cd\u97f3\u8c03\u7684\u884c\u4e3a\u53cd\u5e94\u6709\u5173\u3002\u8fd9\u8868\u660e\u7eb9\u72b6\u4f53\u53ef\u80fd\u662f\u8d4b\u4e88\u7279\u5b9a\u7ed3\u679c\u4e3b\u89c2\u4ef7\u503c\u7684\u5173\u952e\u3002\n\u201c\u4e3a\u4e86\u751f\u5b58\uff0c\u4e3a\u4e86\u505a\u4efb\u4f55\u4f60\u6b63\u5728\u505a\u7684\u4e8b\u60c5\uff0c\u4f60\u9700\u8981\u4e0d\u65ad\u5730\u5b66\u4e60\u3002\u4f60\u9700\u8981\u4e86\u89e3\u4ec0\u4e48\u5bf9\u4f60\u6709\u597d\u5904\uff0c\u4ec0\u4e48\u5bf9\u4f60\u6709\u574f\u5904\uff0c\u201c\u5f17\u91cc\u5fb7\u66fc\u8bf4\u3002\n\u201c\u4e00\u4e2a\u4eba\uff0c\u6216\u8005\u8fd9\u4e2a\u6848\u4f8b\u4e2d\u7684\u4e00\u53ea\u8001\u9f20\uff0c\u53ef\u80fd\u4f1a\u975e\u5e38\u770b\u91cd\u56de\u62a5\uff0c\u4ee5\u81f3\u4e8e\u53ef\u80fd\u4ed8\u51fa\u4ee3\u4ef7\u7684\u98ce\u9669\u88ab\u538b\u5012\uff0c\u800c\u53e6\u4e00\u4e2a\u4eba\u5219\u53ef\u80fd\u5e0c\u671b\u907f\u514d\u6210\u672c\uff0c\u4ece\u800c\u6392\u9664\u6240\u6709\u56de\u62a5\u3002\u201d\u8fd9\u4e9b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u4eba\u7684\u5b66\u4e60\u662f\u62a5\u916c\u9a71\u52a8\u578b\u7684\uff0c\u800c\u53e6\u4e00\u4e9b\u4eba\u5219\u662f\u6210\u672c\u9a71\u52a8\u578b\u7684\u3002\u201cHueske\u8bf4\u3002\n\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u4f20\u9012\u6765\u81ea\u524d\u989d\u53f6\u76ae\u8d28\u4fe1\u53f7\u7684\u6291\u5236\u6027\u795e\u7ecf\u5143\u5e2e\u52a9\u7eb9\u72b6\u4f53\u63d0\u9ad8\u5176\u4fe1\u566a\u6bd4\uff0c\u8fd9\u6709\u52a9\u4e8e\u4ea7\u751f\u5f53\u8001\u9f20\u8bc4\u4f30\u9ad8\u6210\u672c\u6216\u9ad8\u56de\u62a5\u9009\u9879\u65f6\u770b\u5230\u7684\u5f3a\u70c8\u4fe1\u53f7\u3002\n\u63a5\u4e0b\u6765\uff0c\u7814\u7a76\u4eba\u5458\u53d1\u73b0\uff0c\u5728\u5e74\u9f84\u8f83\u5927\u7684\u8001\u9f20(13\u523021\u4e2a\u6708\u4e4b\u95f4\uff0c\u5927\u81f4\u76f8\u5f53\u4e8e60\u5c81\u4ee5\u4e0a\u7684\u4eba)\u4e2d\uff0c\u8001\u9f20\u5b66\u4e60\u8fd9\u79cd\u7c7b\u578b\u7684\u6210\u672c\u6548\u76ca\u5206\u6790\u7684\u53c2\u4e0e\u5ea6\u4e0b\u964d\u4e86\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u4e0e\u5e74\u8f7b\u8001\u9f20\u76f8\u6bd4\uff0c\u5b83\u4eec\u7684\u7eb9\u72b6\u4f53\u6d3b\u52a8\u6709\u6240\u4e0b\u964d\u3002\u7814\u7a76\u4eba\u5458\u5728\u4ea8\u5ef7\u987f\u75c5\u7684\u5c0f\u9f20\u6a21\u578b\u4e2d\u53d1\u73b0\u4e86\u7c7b\u4f3c\u7684\u52a8\u529b\u4e27\u5931\uff0c\u4ea8\u5ef7\u987f\u75c5\u662f\u4e00\u79cd\u5f71\u54cd\u7eb9\u72b6\u4f53\u53ca\u5176\u7eb9\u72b6\u4f53\u7684\u795e\u7ecf\u9000\u884c\u6027\u75be\u75c5\u3002\n\u5f53\u7814\u7a76\u4eba\u5458\u4f7f\u7528\u57fa\u56e0\u9776\u5411\u836f\u7269\u6765\u589e\u5f3a\u7eb9\u72b6\u4f53\u7684\u6d3b\u6027\u65f6\uff0c\u4ed6\u4eec\u53d1\u73b0\u8001\u9f20\u53d8\u5f97\u66f4\u6295\u5165\u5230\u4efb\u52a1\u7684\u6267\u884c\u4e2d\u3002\u76f8\u53cd\uff0c\u6291\u5236\u7eb9\u72b6\u4f53\u6d3b\u52a8\u4f1a\u5bfc\u81f4\u8131\u79bb\u3002\n\u9664\u4e86\u6b63\u5e38\u7684\u4e0e\u5e74\u9f84\u76f8\u5173\u7684\u4e0b\u964d\u5916\uff0c\u8bb8\u591a\u7cbe\u795e\u5065\u5eb7\u969c\u788d\u8fd8\u4f1a\u626d\u66f2\u8bc4\u4f30\u4e00\u9879\u884c\u52a8\u7684\u6210\u672c\u548c\u56de\u62a5\u7684\u80fd\u529b\uff0c\u4ece\u7126\u8651\u548c\u6291\u90c1\u5230\u521b\u4f24\u540e\u5e94\u6fc0\u969c\u788d(PTSD)\u7b49\u75be\u75c5\u3002\u4f8b\u5982\uff0c\u6291\u90c1\u7684\u4eba\u53ef\u80fd\u4f4e\u4f30\u4e86\u6f5c\u5728\u7684\u6709\u76ca\u7ecf\u5386\uff0c\u800c\u60a3\u6709\u6bd2\u763e\u7684\u4eba\u53ef\u80fd\u9ad8\u4f30\u4e86\u6bd2\u54c1\uff0c\u4f46\u4f4e\u4f30\u4e86\u4ed6\u4eec\u7684\u5de5\u4f5c\u6216\u5bb6\u5ead\u7b49\u4e1c\u897f\u3002\n\u7814\u7a76\u4eba\u5458\u76ee\u524d\u6b63\u5728\u7814\u7a76\u53ef\u80fd\u523a\u6fc0\u8fd9\u4e00\u56de\u8def\u7684\u836f\u7269\u6cbb\u7597\uff0c\u4ed6\u4eec\u5efa\u8bae\uff0c\u901a\u8fc7\u751f\u7269\u53cd\u9988\u8bad\u7ec3\u60a3\u8005\u589e\u5f3a\u8fd9\u4e00\u56de\u8def\u7684\u6d3b\u52a8\uff0c\u53ef\u80fd\u4f1a\u63d0\u4f9b\u53e6\u4e00\u79cd\u6f5c\u5728\u7684\u65b9\u6cd5\u6765\u6539\u5584\u4ed6\u4eec\u7684\u6210\u672c\u6548\u76ca\u8bc4\u4f30\u3002\n\u5f17\u91cc\u5fb7\u66fc\u8bf4\uff1a\u201c\u5982\u679c\u4f60\u80fd\u627e\u51fa\u5956\u52b1\u548c\u6210\u672c\u7684\u4e3b\u89c2\u8bc4\u4f30\u80cc\u540e\u7684\u4e00\u79cd\u673a\u5236\uff0c\u5e76\u4f7f\u7528\u4e00\u79cd\u73b0\u4ee3\u6280\u672f\u6765\u64cd\u7eb5\u5b83\uff0c\u65e0\u8bba\u662f\u7cbe\u795e\u4e0a\u7684\u8fd8\u662f\u751f\u7269\u53cd\u9988\u7684\uff0c\u60a3\u8005\u90fd\u53ef\u80fd\u80fd\u591f\u6b63\u786e\u5730\u6fc0\u6d3b\u4ed6\u4eec\u7684\u7535\u8def\u3002\u201d\n\u8fd9\u9879\u7814\u7a76\u7531CHDI\u57fa\u91d1\u4f1a\u3001\u8428\u514b\u65af\u00b7\u5361\u74e6\u8bfa\u57fa\u91d1\u4f1a\u3001\u56fd\u7acb\u536b\u751f\u7814\u7a76\u9662\u3001\u5357\u5e0c\u00b7\u5362\u91cc\u00b7\u9a6c\u514b\u65af\u5bb6\u5ead\u57fa\u91d1\u4f1a\u3001\u5df4\u8d6b\u66fc-\u65bd\u7279\u52b3\u65af\u00b7\u8fea\u65af\u6258\u5c3c\u4e9a\u548c\u5e15\u91d1\u68ee\u57fa\u91d1\u4f1a\u3001\u5a01\u5ec9\u00b7N\u00b7\u548c\u4f2f\u5c3c\u65af\u00b7E\u00b7\u73ed\u666e\u65af\u57fa\u91d1\u4f1a\u3001\u897f\u8499\u65af\u793e\u4ea4\u5927\u8111\u4e2d\u5fc3\u3001\u514b\u91cc\u65af\u6c40\u00b7R\u00b7\u666e\u96f7\u65af\u66fc\u548c\u6770\u897f\u5361\u00b7J\u00b7\u666e\u91cc\u5b89\u201813\u57fa\u91d1\u4f1a\u3001\u8fc8\u514b\u5c14\u00b7\u65af\u8482\u8d39\u5c14\u548c\u7f57\u4f2f\u7279\u00b7\u5df4\u514b\u65af\u987f\u8d44\u52a9\u3002", "note_en": "As people age, they often lose their motivation to learn new things or engage in everyday activities. In a study of mice, MIT neuroscientists have now identified a brain circuit that is critical for maintaining this kind of motivation.\n This circuit is particularly important for learning to make decisions that require evaluating the cost and reward that come with a particular action. The researchers showed that they could boost older mice\u2019s motivation to engage in this type of learning by reactivating this circuit, and they could also decrease motivation by suppressing the circuit.\n \u201cAs we age, it\u2019s harder to have a get-up-and-go attitude toward things,\u201d says Ann Graybiel, an Institute Professor at MIT and member of the McGovern Institute for Brain Research. \u201cThis get-up-and-go, or engagement, is important for our social well-being and for learning \u2014 it\u2019s tough to learn if you aren\u2019t attending and engaged.\u201d\n Graybiel is the senior author of the study, which appears today in  Cell. The paper\u2019s lead authors are Alexander Friedman, a former MIT research scientist who is now an assistant professor at the University of Texas at El Paso, and Emily Hueske, an MIT research scientist.\n  The striatum is part of the basal ganglia \u2014 a collection of brain centers linked to habit formation, control of voluntary movement, emotion, and addiction. For several decades, Graybiel\u2019s lab has been studying clusters of cells called striosomes, which are distributed throughout the striatum. Graybiel discovered striosomes many years ago, but their function had remained mysterious, in part because they are so small and deep within the brain that it is difficult to image them with functional magnetic resonance imaging (fMRI).\n In recent years, Friedman, Graybiel, and colleagues including MIT research fellow Ken-ichi Amemori have discovered that striosomes  play an important role in a type of decision-making known as approach-avoidance conflict. These decisions involve choosing whether to take the good with the bad \u2014 or to avoid both \u2014 when given options that have both positive and negative elements. An example of this kind of decision is having to choose whether to take a job that pays more but forces a move away from family and friends. Such decisions often provoke great anxiety.\n In a  related study, Graybiel\u2019s lab found that striosomes connect to cells of the substantia nigra, one of the brain\u2019s major dopamine-producing centers. These studies led the researchers to hypothesize that striosomes may be acting as a gatekeeper that absorbs sensory and emotional information coming from the cortex and integrates it to produce a decision on how to act. These actions can then be invigorated by the dopamine-producing cells.\n The researchers later discovered that chronic stress has a major impact on this circuit and on this kind of emotional decision-making. In a  2017 study performed in rats and mice, they showed that stressed animals were far more likely to choose high-risk, high-payoff options, but that they could block this effect by manipulating the circuit.\n In the new  Cell study, the researchers set out to investigate what happens in striosomes as mice learn how to make these kinds of decisions. To do that, they measured and analyzed the activity of striosomes as mice learned to choose between positive and negative outcomes.\n During the experiments, the mice heard two different tones, one of which was accompanied by a reward (sugar water), and another that was paired with a mildly aversive stimulus (bright light). The mice gradually learned that if they licked a spout more when they heard the first tone, they would get more of the sugar water, and if they licked less during the second, the light would not be as bright.\n Learning to perform this kind of task requires assigning value to each cost and each reward. The researchers found that as the mice learned the task, striosomes showed higher activity than other parts of the striatum, and that this activity correlated with the mice\u2019s behavioral responses to both of the tones. This suggests that striosomes could be critical for assigning subjective value to a particular outcome.\n \u201cIn order to survive, in order to do whatever you are doing, you constantly need to be able to learn. You need to learn what is good for you, and what is bad for you,\u201d Friedman says.\n \u201cA person, or this case a mouse, may value a reward so highly that the risk of experiencing a possible cost is overwhelmed, while another may wish to avoid the cost to the exclusion of all rewards. And these may result in reward-driven learning in some and cost-driven learning in others,\u201d Hueske says.\n The researchers found that inhibitory neurons that relay signals from the prefrontal cortex help striosomes to enhance their signal-to-noise ratio, which helps to generate the strong signals that are seen when the mice evaluate a high-cost or high-reward option.\n  Next, the researchers found that in older mice (between 13 and 21 months, roughly equivalent to people in their 60s and older), the mice\u2019s engagement in learning this type of cost-benefit analysis went down. At the same time, their striosomal activity declined compared to that of younger mice. The researchers found a similar loss of motivation in a mouse model of Huntington\u2019s disease, a neurodegenerative disorder that affects the striatum and its striosomes.\n When the researchers used genetically targeted drugs to boost activity in the striosomes, they found that the mice became more engaged in performance of the task. Conversely, suppressing striosomal activity led to disengagement.\n In addition to normal age-related decline, many mental health disorders can skew the ability to evaluate the costs and rewards of an action, from anxiety and depression to conditions such as PTSD. For example, a depressed person may undervalue potentially rewarding experiences, while someone suffering from addiction may overvalue drugs but undervalue things like their job or their family.\n The researchers are now working on possible drug treatments that could stimulate this circuit, and they suggest that training patients to enhance activity in this circuit through biofeedback could offer another potential way to improve their cost-benefit evaluations.\n \u201cIf you could pinpoint a mechanism which is underlying the subjective evaluation of reward and cost, and use a modern technique that could manipulate it, either psychiatrically or with biofeedback, patients may be able to activate their circuits correctly,\u201d Friedman says.\n The research was funded by the CHDI Foundation, the Saks Kavanaugh Foundation, the National Institutes of Health, the Nancy Lurie Marks Family Foundation, the Bachmann-Strauss Dystonia and Parkinson\u2019s Foundation, the William N. and Bernice E. Bumpus Foundation, the Simons Center for the Social Brain, the Kristin R. Pressman and Jessica J. Pourian \u201913 Fund, Michael Stiefel, and Robert Buxton.", "posttime": "2020-10-29 10:32:54", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u6709\u52a9\u4e8e,helps,\u7eb9\u72b6\u4f53", "title": "\u7814\u7a76\u6709\u52a9\u4e8e\u89e3\u91ca\u4e3a\u4ec0\u4e48\u5b66\u4e60\u52a8\u673a\u4f1a\u968f\u7740\u5e74\u9f84\u7684\u589e\u957f\u800c\u4e0b\u964d", "title_en": "Study helps explain why motivation to learn declines with age", "transed": 1, "url": "https://news.mit.edu/2020/why-learn-motivate-age-decline-1027", "via": "", "real_tags": ["\u6709\u52a9\u4e8e", "helps", "\u7eb9\u72b6\u4f53"]}]
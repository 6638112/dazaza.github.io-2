[{"category": "", "categoryclass": "", "imagename": "", "infoid": 1068678, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "KVM\uff08\u57fa\u4e8e\u5185\u6838\u7684\u865a\u62df\u673a\uff09\u662f\u57fa\u4e8eLinux\u7684\u4e91\u73af\u5883\u7684De-Facto\u6807\u51c6\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u3002\u5728Azure\u4e4b\u5916\uff0c\u51e0\u4e4e\u6240\u6709\u5927\u578b\u4e91\u548c\u6258\u7ba1\u63d0\u4f9b\u5546\u90fd\u5728KVM\u4e4b\u4e0a\u8fd0\u884c\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a\u4e91\u4e2d\u7684\u4e00\u4e2a\u57fa\u672c\u5b89\u5168\u8fb9\u754c\u4e4b\u4e00\u3002\n    \u5728\u672c\u535a\u5ba2\u6587\u7ae0\u4e2d\uff0c\u6211\u63cf\u8ff0\u4e86\u7279\u5b9a\u4e8ekVM\u7684AMD\u4ee3\u7801\u4e2d\u7684\u6f0f\u6d1e\uff0c\u5e76\u8ba8\u8bba\u4e86\u5982\u4f55\u5c06\u6b64\u9519\u8bef\u53d8\u6210\u5b8c\u6574\u7684\u865a\u62df\u673a\u8f6c\u4e49\u3002\u636e\u6211\u6240\u77e5\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u516c\u5f00\u5199\u4f5cKVM\u8bbf\u5ba2\u5230\u4e3b\u673a\u7a81\u7834\uff0c\u4e0d\u4f9d\u8d56\u4e8eQEMU\u7b49\u7528\u6237\u7a7a\u95f4\u7ec4\u4ef6\u4e2d\u7684\u9519\u8bef\u3002\u8ba8\u8bba\u7684\u9519\u8bef\u88ab\u5206\u914d\u4e86CVE-2021-29657\uff0c\u5f71\u54cd\u4e86\u5185\u6838\u7248\u672cV5.10-RC1\u81f3V5.12-RC6\uff0c\u5e76\u57282021\u5e743\u6708\u5e95\u88ab\u4fee\u8865\u3002\u7531\u4e8e\u8be5\u9519\u8bef\u4ec5\u5728V5.10\u4e2d\u88ab\u89e3\u91ca\uff0c\u5e76\u4e14\u5728\u5927\u7ea65\u4e2a\u6708\u540e\u53d1\u73b0\uff0c\u5927\u591a\u6570\u771f\u5b9e\u7684KVM\u90e8\u7f72\u4e0d\u5e94\u53d7\u5230\u5f71\u54cd\u3002\u6211\u4ecd\u7136\u8ba4\u4e3a\u8fd9\u4e2a\u95ee\u9898\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u6848\u4f8b\u7814\u7a76\uff0c\u53ef\u4ee5\u5728\u4e3aKVM\u5efa\u7acb\u7a33\u5b9a\u7684\u5ba2\u4eba\u5230\u4e3b\u7ba1\u9003\u751f\u7684\u5de5\u4f5c\u4e2d\uff0c\u5e0c\u671b\u8fd9\u4e2a\u5199\u4f5c\u80fd\u591f\u52a0\u5f3a\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u59a5\u534f\u4e0d\u4ec5\u662f\u7406\u8bba\u95ee\u9898\u7684\u60c5\u51b5\u3002\n    \u5728\u6f5c\u5165\u9519\u8bef\u548c\u5265\u524a\u4e4b\u524d\uff0c\u6211\u5f00\u59cb\u7b80\u77ed\u6982\u8ff0KVM\u7684\u4f53\u7cfb\u7ed3\u6784\u3002\n     KVM\u662f\u4e00\u79cd\u57fa\u4e8eLinux\u7684\u5f00\u6e90\u7ba1\u7406\u7a0b\u5e8f\uff0c\u652f\u6301X86\uff0cARM\uff0cPowerPC\u548cS / 390\u4e0a\u7684\u786c\u4ef6\u52a0\u901f\u865a\u62df\u5316\u3002\u4e0e\u5176\u4ed6\u5927\u5f00\u6e90\u7ba1\u7406\u7a0b\u5e8fXen\u76f8\u6bd4\uff0cKVM\u4e0eLinux\u5185\u6838\u6df1\u5ea6\u96c6\u6210\uff0c\u5e76\u5728\u5176\u8c03\u5ea6\uff0c\u5185\u5b58\u7ba1\u7406\u548c\u786c\u4ef6\u96c6\u6210\u4e0a\u6784\u5efa\uff0c\u4ee5\u63d0\u4f9b\u6709\u6548\u7684\u865a\u62df\u5316\u3002\n    KVM\u5b9e\u73b0\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u5185\u6838\u6a21\u5757\uff08kvm.ko plus kvm-intel.ko\u6216kvm-amd.ko\u4e0a\u7684x86\uff09\uff0c\u5c06\u4f4e\u7ea7IOCTL\u7684API\u516c\u5f00\u5230/ dev / kvm\u8bbe\u5907\u4e0a\u7684\u7528\u6237\u7a7a\u95f4\u8fdb\u7a0b\u3002\u4f7f\u7528\u6b64API\uff0c\u7528\u6237\u7a7a\u95f4\u8fdb\u7a0b\uff08\u901a\u5e38\u79f0\u4e3aVMM for Virtual Machine Manager\uff09\u53ef\u4ee5\u521b\u5efa\u65b0\u7684VM\uff0c\u5206\u914dVCPU\u548c\u5185\u5b58\uff0c\u4ee5\u53ca\u62e6\u622a\u5185\u5b58\u6216IO\u8bbf\u95ee\uff0c\u4ee5\u63d0\u4f9b\u5bf9\u6a21\u62dfD\u6216\u865a\u62df\u5316\u611f\u77e5\u786c\u4ef6\u8bbe\u5907\u7684\u8bbf\u95ee\u3002 QEMU\u4e00\u76f4\u662f\u57fa\u4e8eKVM\u7684\u865a\u62df\u5316\u7684\u6807\u51c6\u7528\u6237\u7a7a\u95f4\u9009\u62e9\u5f88\u957f\u65f6\u95f4\uff0c\u4f46\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u4e2d\uff0cLKVM\uff0cCROSVM\u6216\u97ad\u70ae\u7b49\u66ff\u4ee3\u65b9\u6848\u5df2\u7ecf\u5f00\u59cb\u53d8\u5f97\u6d41\u884c\u3002\n    \u867d\u7136KVM\u5bf9\u5355\u72ec\u7684\u7528\u6237\u7a7a\u95f4\u7ec4\u4ef6\u7684\u4f9d\u8d56\u53ef\u80fd\u4f3c\u4e4e\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u597d\u5904\uff1aKVM\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\u6bcf\u4e2aVM\u90fd\u67091\uff1a1\u6620\u5c04\u5230Linux\u8fc7\u7a0b\uff0c\u4f7f\u5176\u4f7f\u7528\u6807\u51c6\u7684Linux\u5de5\u5177\u53ef\u7ba1\u7406\u3002\n    \u4f8b\u5982\uff0c\u8fd9\u610f\u5473\u7740\u5609\u5bbe\uff06\uff0339; s\u5b58\u50a8\u5668\u53ef\u4ee5\u901a\u8fc7\u8f6c\u50a8\u5176\u7528\u6237\u7a7a\u95f4\u8fc7\u7a0b\u7684\u5206\u914d\u5185\u5b58\u6216\u53ef\u4ee5\u8f7b\u677e\u5730\u5e94\u7528CPU\u65f6\u95f4\u548c\u5185\u5b58\u7684\u8d44\u6e90\u9650\u5236\u6765\u68c0\u67e5\u3002\u6b64\u5916\uff0cKVM\u53ef\u4ee5\u5c06\u5927\u591a\u6570\u4e0e\u8bbe\u5907\u4eff\u771f\u76f8\u5173\u7684\u5de5\u4f5c\u5378\u8f7d\u5230Userspace\u7ec4\u4ef6\u3002\u5728\u4e0e\u4e2d\u65ad\u5904\u7406\u76f8\u5173\u7684\u51e0\u4e2a\u6027\u80fd\u654f\u611f\u8bbe\u5907\u4e4b\u5916\uff0c\u53ef\u4ee5\u5728\u7528\u6237\u4f69\u7eb3\u4e2d\u5b9e\u73b0\u6240\u6709\u590d\u6742\u7684\u4f4e\u7ea7\u4ee3\u7801\uff0c\u7528\u4e8e\u63d0\u4f9b\u865a\u62df\u78c1\u76d8\uff0c\u7f51\u7edc\u6216GPU\u8bbf\u95ee\u6743\u9650\u3002 \n\u5728\u67e5\u770b\u4e0eKVM\u76f8\u5173\u7684\u516c\u4f17\u64b0\u5199\u76f8\u5173\u7684\u6f0f\u6d1e\u5e76\u5229\u7528\u5b83\u53d8\u5f97\u6e05\u695a\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u662f\u4e00\u4e2a\u660e\u667a\u7684\u51b3\u5b9a\u3002\u5927\u591a\u6570\u62ab\u9732\u7684\u6f0f\u6d1e\u548c\u6240\u6709\u516c\u5171\u5229\u7528\u5f71\u54cdQEMU\u53ca\u5176\u5bf9\u6a21\u62df/\u534a\u865a\u62df\u5316\u8bbe\u5907\u7684\u652f\u6301\u3002\n    \u5c3d\u7ba1KVM\u7684\u5185\u6838\u653b\u51fb\u8868\u9762\u660e\u663e\u5c0f\u4e8e\u7531\u9ed8\u8ba4\u7684QEMU\u914d\u7f6e\u6216\u7c7b\u4f3c\u7684\u7528\u6237\u7a7a\u95f4VMMS\u66b4\u9732\u7684\u653b\u51fb\uff0c\u4f46KVM\u6f0f\u6d1e\u5177\u6709\u4f7f\u5176\u5bf9\u653b\u51fb\u8005\u975e\u5e38\u6709\u4ef7\u503c\u7684\u4f18\u52bf\uff1a\n \u867d\u7136\u7528\u6237\u7a7a\u95f4VMMS\u53ef\u4ee5\u662fSandboxed\u4ee5\u51cf\u5c11VM Breakout\u7684\u5f71\u54cd\uff0c\u4f46\u6ca1\u6709\u6b64\u7c7b\u9009\u9879\u53ef\u7528\u4e8eKVM\u672c\u8eab\u3002\u4e00\u65e6\u653b\u51fb\u8005\u80fd\u591f\u5728\u4e3b\u673a\u5185\u6838\u7684\u4e0a\u4e0b\u6587\u4e2d\u5b9e\u73b0\u4ee3\u7801\u6267\u884c\uff08\u6216\u7c7b\u4f3c\u5f3a\u5927\u7684\u57fa\u8bed\uff09\uff0c\u7cfb\u7edf\u5b8c\u5168\u6cc4\u9732\u3002\n \u7531\u4e8eQEMU\u7684\u5b89\u5168\u5386\u53f2\u7a0d\u5dee\uff0c\u65b0\u7684\u7528\u6237\u7a7a\u95f4VMMS\uff0c\u5982CROSVM\u6216Firecracker\u90fd\u4ee5Rust\uff0c\u4e00\u79cd\u5185\u5b58\u5b89\u5168\u8bed\u8a00\u7f16\u5199\u3002\u5f53\u7136\uff0c\u7531\u4e8eKVM API\u7684\u9519\u8bef\u6216\u9519\u8bef\u4f7f\u7528\uff0c\u4ecd\u7136\u5b58\u5728\u975e\u8bb0\u5fc6\u5b89\u5168\u6f0f\u6d1e\u6216\u95ee\u9898\uff0c\u4f46\u4f7f\u7528RECT\u6709\u6548\u5730\u9632\u6b62\u4e86\u8fc7\u53bb\u5728\u57fa\u4e8eC\u7684\u7528\u6237\u7a7a\u95f4VMMS\u4e2d\u53d1\u73b0\u7684\u5927\u591a\u6570\u9519\u8bef\u3002\n \u6700\u540e\uff0c\u7eafKVM\u5229\u7528\u53ef\u4ee5\u9488\u5bf9\u4f7f\u7528\u4e13\u6709\u6216\u91cd\u578b\u7528\u6237\u7a7a\u95f4VMM\u7684\u76ee\u6807\u3002\u867d\u7136\u5927\u4e91\u63d0\u4f9b\u5546\u516c\u5f00\u7684\u865a\u62df\u5316\u5806\u6808\u6ca1\u6709\u8be6\u7ec6\u63cf\u8ff0\uff0c\u4f46\u53ef\u4ee5\u5b89\u5168\u5730\u5047\u8bbe\u5b83\u4eec\u4e0d\u4f9d\u8d56\u4e8e\u672a\u4fee\u6539\u7684QEMU\u7248\u672c\uff0c\u4ee5\u83b7\u5f97\u5176\u751f\u4ea7\u5de5\u4f5c\u8d1f\u8f7d\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cKVM\u7684\u8f83\u5c0f\u7684\u4ee3\u7801\u57fa\u7840\u4f7f\u5f97\u91cd\u5927\u4fee\u6539\u4e0d\u592a\u53ef\u80fd\uff08\u5e76\u4e14KVM\u7684\u8d21\u732e\u8005\u5217\u8868\u70b9\u5728\u5b58\u5728\u65f6\uff0c\u5728\u4e0a\u6e38\u7684\u4e0a\u6e38\u4fee\u6539\u65f6\uff09\u3002\n      \u8003\u8651\u5230\u8fd9\u4e9b\u4f18\u52bf\uff0c\u6211\u51b3\u5b9a\u82b1\u4e00\u4e9b\u65f6\u95f4\u4e3akvm\u6f0f\u6d1e\u8fdb\u884c\u72e9\u730e\uff0c\u8fd9\u53ef\u80fd\u53d8\u6210\u5ba2\u4eba\u5230\u4e3b\u673a\u9003\u751f\u3002\u5728\u8fc7\u53bb\uff0c\u6211\u53d6\u5f97\u4e86\u4e00\u4e9b\u6210\u529f\uff0c\u5728\u82f1\u7279\u5c14CPU\u4e0a\u627e\u5230\u4e86KVM\u652f\u6301\u5d4c\u5957\u865a\u62df\u5316\u7684\u6f0f\u6d1e\uff0c\u56e0\u6b64\u56de\u987e\u4e86AMD\u7684\u76f8\u540c\u529f\u80fd\u4f3c\u4e4e\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u8d77\u70b9\u3002\u8fd9\u66f4\u4e3a\u771f\u5b9e\uff0c\u56e0\u4e3a\u8fd1\u671fAMD\u7684\u5e02\u573a\u4efd\u989d\u7684\u589e\u52a0\u610f\u5473\u7740KVM\u7684AMD\u5b9e\u65bd\u7a81\u7136\u6210\u4e3a\u4e00\u4e2a\u6bd4\u8fc7\u53bb\u51e0\u5e74\u66f4\u6709\u8da3\u7684\u76ee\u6807\u3002\n    \u5d4c\u5957\u865a\u62df\u5316\uff0cVM\uff08\u540d\u4e3aL1\uff09\u7684\u80fd\u529b\u5c06\u5d4c\u5957\u7684\u8bbf\u5ba2\uff08L2\uff09\uff08L2\uff09\uff0c\u4e5f\u662f\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u7684\u5229\u57fa\u7279\u5f81\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u786c\u4ef6\u6539\u8fdb\uff0c\u51cf\u5c11\u4e86\u5176\u5f00\u9500\u548c\u8d8a\u6765\u8d8a\u591a\u7684\u5ba2\u6237\u9700\u6c42\uff0c\u5b83\u53d8\u5f97\u66f4\u52a0\u5e7f\u6cdb\u3002\u4f8b\u5982\uff0cMicrosoft\u4e25\u91cd\u63a8\u52a8\u57fa\u4e8e\u865a\u62df\u5316\u7684\u5b89\u5168\u6027\uff0c\u4f5c\u4e3a\u8f83\u65b0\u7684Windows\u7248\u672c\u7684\u4e00\u90e8\u5206\uff0c\u9700\u8981\u5d4c\u5957\u865a\u62df\u5316\u6765\u652f\u6301\u4e91\u6258\u7ba1\u7684Windows\u5b89\u88c5\u3002 KVM\u9ed8\u8ba4\u652f\u6301AMD\u548cIntel\u4e0a\u7684\u5d4c\u5957\u865a\u62df\u5316\uff0c\u56e0\u6b64\u5982\u679c\u7ba1\u7406\u5458\u6216\u7528\u6237\u7a7a\u95f4VMM\u672a\u660e\u786e\u7981\u7528\u5b83\uff0c\u5219\u5b83\u662f\u6076\u610f\u6216\u53d7\u635fVM\u7684\u653b\u51fb\u66f2\u9762\u7684\u4e00\u90e8\u5206\u3002 \nAMD\u7684\u865a\u62df\u5316\u6269\u5c55\u540d\u4e3aSVM\uff08\u5bf9\u4e8e\u5b89\u5168\u865a\u62df\u673a\uff09\uff0c\u4e3a\u4e86\u652f\u6301\u5d4c\u5957\u865a\u62df\u5316\uff0c\u4e3b\u673a\u7ba1\u7406\u7a0b\u5e8f\u9700\u8981\u62e6\u622a\u5176\u8bbf\u5ba2\u6267\u884c\u7684\u6240\u6709SVM\u6307\u4ee4\uff0c\u6a21\u62df\u5176\u884c\u4e3a\u5e76\u5c06\u5176\u4e0e\u5e95\u5c42\u786c\u4ef6\u540c\u6b65\u4fdd\u6301\u72b6\u6001\u3002\u6b63\u5982\u60a8\u53ef\u80fd\u60f3\u8c61\u7684\u90a3\u6837\uff0c\u5bf9\u590d\u6742\u903b\u8f91\u7f3a\u9677\u7684\u5de8\u5927\u6f5c\u529b\u6765\u5b9e\u73b0\u8fd9\u4e00\u6b63\u786e\u7684\u56f0\u96be\uff0c\u4f7f\u5176\u6210\u4e3a\u624b\u52a8\u4ee3\u7801\u5ba1\u67e5\u7684\u5b8c\u7f8e\u76ee\u6807\u3002\n     \u5728\u8fdb\u5165KVM CodeBase\u548c\u6211\u53d1\u73b0\u7684\u9519\u8bef\u4e4b\u524d\uff0c\u6211\u60f3\u5feb\u901f\u4ecb\u7ecdAMD SVM\u5982\u4f55\u4f7f\u9057\u8ff9\u7684\u5176\u4f59\u90e8\u5206\u66f4\u5bb9\u6613\u7406\u89e3\u3002 \uff08\u5bf9\u4e8e\u5f7b\u5e95\u7684\u6587\u6863\uff0c\u8bf7\u53c2\u9605AMD64\u67b6\u6784\u7a0b\u5e8f\u5458\u624b\u518c\uff0c\u7b2c2\u5377\uff1a\u7cfb\u7edf\u7f16\u7a0b\u7b2c15\u7ae0\u3002\uff09SVM\u5982\u679c\u901a\u8fc7\u5728EFER MSR\u4e2d\u8bbe\u7f6eSVME\u4f4d\uff0c\u8bf7\u652f\u63016\u4e2a\u65b0\u6307\u4ee4\u5230X86-64\u3002\u8fd9\u4e9b\u6307\u4ee4\u6700\u6709\u8da3\u7684\u662fVMRUN\uff08\u56e0\u4e3a\u5b83\u7684\u540d\u5b57\u8868\u660e\uff09\u8d1f\u8d23\u8fd0\u884cGuest VM\u3002 VMRUN\u901a\u8fc7rax\u5bc4\u5b58\u5668\u6307\u5411\u540d\u4e3a\u201c\u865a\u62df\u673a\u63a7\u5236\u5757\u201d\uff08vmcb\uff09\u7684\u6570\u636e\u7ed3\u6784\u7684\u9875\u9762\u5bf9\u9f50\u7684\u7269\u7406\u5730\u5740\uff0c\u8be5rax\u5bc4\u5b58\u5668\u91c7\u7528\u9690\u5f0f\u53c2\u6570\uff0c\u8be5\u6570\u636e\u7ed3\u6784\uff08vmcb\uff09\u63cf\u8ff0\u4e86VM\u7684\u72b6\u6001\u548c\u914d\u7f6e\u3002\n    VMCB\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u9996\u5148\uff0c\u72b6\u6001\u4fdd\u5b58\u533a\u57df\u5b58\u50a8\u6240\u6709\u8bbf\u5ba2\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5305\u62ec\u6bb5\u548c\u63a7\u5236\u5bc4\u5b58\u5668\u3002\u5176\u6b21\uff0c\u63cf\u8ff0VM\u914d\u7f6e\u7684\u63a7\u5236\u533a\u57df\u3002\u63a7\u5236\u533a\u57df\u63cf\u8ff0\u4e3aVM\u542f\u7528\u7684\u865a\u62df\u5316\u7279\u5f81\uff0c\u8bbe\u7f6e\u622a\u53d6\u7684VM\u52a8\u4f5c\u4ee5\u89e6\u53d1VM\u9000\u51fa\uff0c\u5e76\u5b58\u50a8\u4e00\u4e9b\u57fa\u672c\u914d\u7f6e\u503c\uff0c\u4f8b\u5982\u7528\u4e8e\u5d4c\u5957\u5206\u9875\u7684\u9875\u9762\u8868\u5730\u5740\u3002\n    \u5982\u679cVMCB\u6b63\u786e\u51c6\u5907\uff08\u5e76\u4e14\u6211\u4eec\u5c1a\u672a\u5728VM\u4e2d\u8fd0\u884c\uff09\uff0c\u5219VMRUN\u5c06\u9996\u5148\u5c06\u4e3b\u673a\u72b6\u6001\u4fdd\u5b58\u5728\u540d\u4e3aHOSS SAVE\u533a\u57df\u7684\u5185\u5b58\u533a\u57df\u4e2d\uff0c\u901a\u8fc7\u5c06\u7269\u7406\u5730\u5740\u5199\u5165VM_HSAVE_PA MSR\u6765\u914d\u7f6e\u5176\u5730\u5740\u3002\u4fdd\u5b58\u4e3b\u673a\u72b6\u6001\u540e\uff0c\u5c06CPU\u5207\u6362\u5230VM\u4e0a\u4e0b\u6587\uff0c\u53ea\u6709\u5728\u4e00\u4e2a\u539f\u56e0\u6216\u53e6\u4e00\u4e2a\u539f\u56e0\u89e6\u53d1VM Exit\u540e\uff0cvmrun\u4ec5\u8fd4\u56de\u3002\n    SVM\u7684\u4e00\u4e2a\u6709\u8da3\u65b9\u9762\u662fVM Exit\u540e\u7684\u5927\u91cf\u72b6\u6001\u6062\u590d\u5fc5\u987b\u7531\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5b8c\u6210\u3002\u53d1\u751fVM\u9000\u51fa\u540e\uff0c\u4ec5\u6062\u590dRIP\uff0cRSP\u548cRAX\uff0c\u6062\u590d\u5230\u5148\u524d\u7684\u4e3b\u673a\u503c\uff0c\u5e76\u4e14\u6240\u6709\u5176\u4ed6\u901a\u7528\u5bc4\u5b58\u5668\u4ecd\u5305\u542b\u8bbf\u5ba2\u503c\u3002\u6b64\u5916\uff0c\u5b8c\u6574\u7684\u4e0a\u4e0b\u6587\u4ea4\u6362\u673a\u9700\u8981\u624b\u52a8\u6267\u884cVMSAVE / VMLOAD\u6307\u4ee4\uff0c\u8be5\u6307\u4ee4\u4fdd\u5b58/\u52a0\u8f7d\u989d\u5916\u7684\u7cfb\u7edf\u5bc4\u5b58\u5668\uff08FS\uff0cSS\uff0cLDTR\uff0cStar\uff0cLSTAR ...\uff09\u3002\n    \u5bf9\u4e8e\u5d4c\u5957\u865a\u62df\u5316\u5de5\u4f5c\uff0cKVM\u62e6\u622aVMRUN\u6307\u4ee4\u7684\u6267\u884c\uff0c\u5e76\u6839\u636eVMCB\u51c6\u5907\u7684L1\u8bbf\u5ba2\uff08\u79f0\u4e3akVM\u672f\u8bed\u4e2d\u7684VMCB12\uff09\u521b\u5efa\u81ea\u5df1\u7684VMCB\u3002\u5f53\u7136\uff0cKVM\u4e0d\u80fd\u76f8\u4fe1\u5ba2\u6237\u63d0\u4f9bvmcb12\uff0c\u5e76\u4e14\u9700\u8981\u4ed4\u7ec6\u9a8c\u8bc1\u6700\u7ec8\u4ee5\u6765\u4f20\u9012\u7ed9\u786c\u4ef6\u7684\u771f\u5b9eVMCB\u7684\u6240\u6709\u5b57\u6bb5\uff08\u79f0\u4e3avmcb02\uff09\u3002\n    AMD\u4e0a\u7684\u5927\u591a\u6570KVM\u7528\u4e8e\u5d4c\u5957\u865a\u62df\u5316\u7684\u4ee3\u7801\u5728ARCH / X86 / KVM / SVM /\u5d4c\u5957\u4e2d\u5b9e\u73b0.C\uff0c\u62e6\u622a\u5d4c\u5957\u8bbf\u5ba2\u7684\u4ee3\u7801\u5728Nested_svm_vmrun\u4e2d\u5b9e\u73b0\uff1a \n*\u4fdd\u5b58\u65e7\u7684VMCB\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u9009\u62e9\u6211\u4eec\u7684\u4fdd\u5b58\uff0c\u4f46\u53ef\u4ee5\n      \u8be5\u529f\u80fd\u9996\u5148\u57281\uff08\u7f16\u7801\u6837\u672c\u4e2d\u6807\u8bb0\uff09\u4e2d\u7684\u5f53\u524d\u6d3b\u52a8\u7684VMCB\uff08SVM-\uff06gt; VCMB\uff09\u4e2d\u7684rax\u7684\u503c\u3002\u5bf9\u4e8e\u4f7f\u7528\u5d4c\u5957\u5206\u9875\u7684\u8bbf\u5ba2\uff08\u73b0\u5728\u662f\u73b0\u5728\u552f\u4e00\u7684\u76f8\u5173\u914d\u7f6e\uff09Rax\u5305\u542b\u4e00\u4e2a\u5ba2\u6237\u7269\u7406\u5730\u5740\uff08GPA\uff09\uff0c\u5b83\u9700\u8981\u9996\u5148\u5c06\u5176\u8f6c\u6362\u4e3a\u4e3b\u673a\u7269\u7406\u5730\u5740\uff08HPA\uff09\u3002 KVM_VCPU_MAP\uff082\uff09\u8d1f\u8d23\u6b64\u8f6c\u6362\uff0c\u5e76\u5c06\u5e95\u5c42\u9875\u9762\u6620\u5c04\u5230\u53ef\u901a\u8fc7KVM\u76f4\u63a5\u8bbf\u95ee\u7684\u4e3b\u673a\u865a\u62df\u5730\u5740\uff08HVA\uff09\u3002\n    vmcb\u6620\u5c04\u540e\uff0c\u5c06indested_vmcb_checks\u8c03\u75283\u4e2d\u7684\u67d0\u4e9b\u57fa\u672c\u9a8c\u8bc1\u3002\u4e4b\u540e\uff0c\u5c06\u5b58\u50a8\u5728SVM-\uff06gt\u4e2d\u7684L1 Guest\u4e0a\u4e0b\u6587\u3002VMCB\u88ab\u590d\u5236\u5230\u4e3b\u673a\u4fdd\u5b58\u533a\u57dfSVM-\uff06gt;\u5d4c\u5957\u3002\u5728KVM\u4e4b\u524d\u901a\u8fc7\u8c03\u7528Enter_svm_guest_mode\uff084\uff09\u8fdb\u5165\u5d4c\u5957\u7684guatern never\u4e4b\u524d\u3002\n         \u67e5\u770bEnter_svm_guest_Mode\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230KVM\u5c06VMCB12\u63a7\u5236\u533a\u57df\u76f4\u63a5\u590d\u5236\u5230SVM-\uff06GT;\u5d4c\u5957.DCL\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5bf9\u590d\u5236\u503c\u8fdb\u884c\u4efb\u4f55\u8fdb\u4e00\u6b65\u68c0\u67e5\u3002\n  \u719f\u6089\u53cc\u91cd\u83b7\u53d6\u6216\u4f7f\u7528\u65f6\u95f4\u4f7f\u7528\u65f6\u95f4\u6f0f\u6d1e\u7684\u8bfb\u8005\u53ef\u80fd\u5df2\u7ecf\u770b\u5230\u4e86\u4e00\u4e2a\u6f5c\u5728\u7684\u95ee\u9898\uff1aindested_svm_vmrun\u5f00\u5934\u7684\u547c\u53eb\u5bf9vmcb\u7684\u526f\u672c\u6267\u884c\u6240\u6709\u68c0\u67e5\u7684indapt_vmcb_check\u5b58\u50a8\u5728\u8bbf\u5ba2\u5185\u5b58\u4e2d\u3002\u8fd9\u610f\u5473\u7740\u5177\u6709\u591a\u4e2aCPU\u5185\u6838\u7684\u8bbf\u5ba2\u53ef\u4ee5\u5728indested_vmcb_checks\u9a8c\u8bc1\u540e\u4fee\u6539VMCB\u4e2d\u7684\u5b57\u6bb5\uff0c\u4f46\u5728\u5b83\u4eec\u88ab\u590d\u5236\u5230SVM-\uff06gt\u4e4b\u524d;\u5d4c\u5957\u3002\u5728load_nested_vmcb_control\u4e2d\u5d4c\u5957\u3002\n    \u8ba9\u6211\u4eec\u6765\u770b\u770bNested_vmcb_checks\uff0c\u770b\u770b\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u7ed5\u8fc7\u4ec0\u4e48\u6837\u7684\u68c0\u67e5\uff1a\n         \u4e4d\u4e00\u770b\uff0c\u8fd9\u770b\u8d77\u6765\u5f88\u65e0\u5bb3\u3002 Control-\uff06gt; ASID\u672a\u4f7f\u7528\u4efb\u4f55\u4f4d\u7f6e\uff0c\u6700\u540e\u4e00\u6b21\u68c0\u67e5\u4ec5\u5bf9\u4e0d\u652f\u6301\u5d4c\u5957\u5206\u9875\u7684\u7cfb\u7edf\u76f8\u5173\u3002\u4f46\u662f\uff0c\u7b2c\u4e00\u4e2a\u68c0\u67e5\u7ed3\u679c\u662f\u975e\u5e38\u6709\u8da3\u7684\u3002 \n\u51fa\u4e8eME\u672a\u77e5\u7684\u539f\u56e0\uff0cSVM VMCB\u5305\u542b\u4e00\u4f4d\u4f4d\uff0c\u5176\u5728\u5ba2\u5ea7\u5185\u90e8\u6267\u884c\u65f6\u542f\u7528\u6216\u7981\u7528VMRUN\u6307\u4ee4\u7684\u62e6\u622a\u3002\u6e05\u9664\u8be5\u4f4d\u5b9e\u9645\u4e0a\u5e76\u975e\u5b9e\u9645\u652f\u6301\u786c\u4ef6\u5e76\u5bfc\u81f4\u7acb\u5373vmexit\uff0c\u56e0\u6b64indested_vmcb_check_controls\u4e2d\u7684\u6821\u9a8c\u53ea\u4f1a\u590d\u5236\u6b64\u884c\u4e3a\u3002\u5f53\u6211\u4eec\u901a\u8fc7\u53cd\u590d\u7ffb\u8f6c\u62e6\u622a_VmRun\u4f4d\u7684\u503c\u6765\u7ade\u4e89\u548c\u7ed5\u8fc7\u68c0\u67e5\u65f6\uff0c\u6211\u4eec\u6700\u7ec8\u53ef\u4ee5\u5728SVM-\uff06gt;\u5d4c\u5957.ctl\u4e2d\u5305\u542b0\u4ee3\u66ff\u62e6\u622a_Vmrun\u4f4d\u7684\u60c5\u51b5\u3002\u8981\u4e86\u89e3\u6211\u4eec\u9996\u6b21\u9700\u8981\u4e86\u89e3\u5d4c\u5957vmexit\u7684\u5f71\u54cd\uff0c\u8bf7\u53c2\u89c1kvm\uff1a\n    \u4e3bSVM\u9000\u51fa\u5904\u7406\u7a0b\u5e8f\u662fArch / x86 / kvm / svm.c\u4e2d\u7684\u51fd\u6570handle_exit\uff0c\u53ea\u8981\u53d1\u751fvmexit\u5c31\u4f1a\u8c03\u7528\u3002\u5f53KVM\u6b63\u5728\u8fd0\u884c\u5d4c\u5957\u7684\u8bbf\u5ba2\u65f6\uff0c\u9996\u5148\u5fc5\u987b\u68c0\u67e5\u9000\u51fa\u662f\u5426\u5e94\u7531\u81ea\u8eab\u6216L1\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5904\u7406\u3002\u4e3a\u6b64\uff0c\u5b83\u8c03\u7528unteed_svm_exit_handled\uff085\uff09whi ch\u5c06\u8fd4\u56denested_exit_done\uff0c\u5982\u679cvmexit\u5c06\u7531L1\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5904\u7406\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u901a\u8fc7L0\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u8fdb\u884c\u8fdb\u4e00\u6b65\u5904\u7406\uff1a\n           indested_svm_exit_handled\u9996\u6b21\u8c03\u7528nested_svm_intercept\uff086\uff09\u4ee5\u67e5\u770b\u662f\u5426\u5e94\u8be5\u5904\u7406\u9000\u51fa\u3002\u5f53\u6211\u4eec\u901a\u8fc7\u5728L2 Guest\u4e2d\u6267\u884cVMRUN\u89e6\u53d1EXIT\u65f6\uff0c\u6267\u884c\u9ed8\u8ba4\u60c5\u51b5\uff087\uff09\u4ee5\u67e5\u770bSVM-\uff06gt\u4e2d\u7684\u62e6\u622a\u5668_Vmrun\u4f4d\u662f\u5426\u8bbe\u7f6e\u3002\u901a\u5e38\uff0c\u8fd9\u5e94\u8be5\u59cb\u7ec8\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u51fd\u6570\u8fd4\u56deNested_exit_done\u4ee5\u89e6\u53d1\u4eceL2\u5230L1\u7684\u5d4c\u5957VM\u9000\u51fa\uff0c\u5e76\u8ba9L1\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u5904\u7406\u51fa\u53e3\uff088\uff09\u3002 \uff08\u4ee5\u8fd9\u79cd\u65b9\u5f0fKVM\u652f\u6301\u65e0\u9650\u5d4c\u5957\u7684\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\uff09\u3002\n    \u4f46\u662f\uff0c\u5982\u679cL1\u5ba2\u6237\u5229\u7528\u4e0a\u8ff0SVM-\uff06gt\u6240\u63cf\u8ff0\u7684\u7ade\u4e89\u6761\u4ef6;\u5d4c\u5957.ctl\u4e0d\u4f1a\u6709\u62e6\u622a\u5668\uff0c\u5e76\u4e14VM Exit\u5c06\u7531KVM\u672c\u8eab\u5904\u7406\u3002\u8fd9\u5bfc\u81f4\u7b2c\u4e8c\u6b21\u8c03\u7528indest_svm_vmrun\uff0c\u540c\u65f6\u4ecd\u5728L2 Guest\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u3002 Nested_svm_vmrun\u672a\u5199\u5165\u4ee5\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u76f2\u76ee\u5730\u8986\u76d6\u5b58\u50a8\u5728SVM-\uff06gt\u4e2d\u7684L1\u4e0a\u4e0b\u6587;\u5d4c\u5957.HSAVE\u4f7f\u7528\u5f53\u524d\u6d3b\u52a8\u7684SVM-\uff06GT\u7684\u6570\u636e; VMCB\u5305\u542bL2 Guest\u7684\u6570\u636e\uff1a\n     *\u4fdd\u5b58\u65e7\u7684VMCB\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u9700\u8981\u9009\u62e9\u6211\u4eec\u7684\u4fdd\u5b58\uff0c\u4f46\u53ef\u4ee5\n    \u8fd9\u6210\u4e3a\u4e00\u4e2a\u5b89\u5168\u95ee\u9898\uff0c\u56e0\u4e3a\u578b\u53f7\u7279\u5b9a\u5bc4\u5b58\u5668\uff08MSR\uff09\u62e6\u622a\u88ab\u5d4c\u5957\u7684\u8bbf\u5ba2\u5904\u7406\uff1a\n  SVM\u4f7f\u7528\u6743\u9650\u4f4d\u56fe\u6765\u63a7\u5236VM\u53ef\u4ee5\u8bbf\u95ee\u54ea\u4e9bMSR\u3002\u4f4d\u56fe\u662f\u4e00\u4e2a8KB\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2aMSR\u4e24\u4e2a\u4f4d\uff0c\u5176\u4e2d\u4e00\u4e2a\u63a7\u5236\u8bfb\u53d6\u8bbf\u95ee\u548c\u53e6\u4e00\u4e2a\u5199\u8bbf\u95ee\u3002\u5728\u8be5\u4f4d\u7f6e\u4e2d\u76841\u4f4d\u610f\u5473\u7740\u63a5\u5165\u88ab\u62e6\u622a\u5e76\u89e6\u53d1VM\u51fa\u53e3\uff0c0\u6bd4\u7279\u8868\u793aVM\u5177\u6709\u76f4\u63a5\u8bbf\u95eeMSR\u3002\u4f4d\u56fe\u7684HPA\u5730\u5740\u5b58\u50a8\u5728VMCB\u63a7\u5236\u533a\u57df\u4e2d\uff0c\u5bf9\u4e8e\u6b63\u5e38\u7684L1 KVM Guest\uff0c\u4e00\u65e6\u521b\u5efaVCPU\uff0c\u9875\u9762\u5c31\u4f1a\u5206\u914d\u5e76\u56fa\u5b9a\u5230\u5185\u5b58\u4e2d\u3002 \n\u5bf9\u4e8e\u5d4c\u5957\u7684\u8bbf\u5ba2\uff0cMSR\u6743\u9650\u4f4d\u56fe\u5b58\u50a8\u5728SVM-\uff06gt\u4e2d;\u5d4c\u5957.msrpm\u53ca\u5176\u7269\u7406\u5730\u5740\u88ab\u590d\u5236\u5230\u6d3b\u52a8\u7684VMCB\u4e2d\uff08\u5728SVM-\uff06gt; vmcb-\uff06gt; control.msrpm_base_pa\uff09\u4e2d\uff0c\u800c\u5d4c\u5957guest\u865a\u62df\u673a\u8fd0\u884c\u3002\u4f7f\u7528\u6240\u63cf\u8ff0\u7684\u53cc\u91cd\u8c03\u7528inested_svm_vmrun\uff0c\u6076\u610f\u5ba2\u6237\u673a\u53ef\u4ee5\u5c06\u6b64\u503c\u590d\u5236\u5230svm-\uff06gt;\u6267\u884cCopy_vmcb_Control_area\u65f6\uff0c\u5c06\u6b64\u503c\u590d\u5236\u5230SVM-\uff06gt;\u5d4c\u5957.hsave vmcb\u3002\u8fd9\u5f88\u6709\u8da3\uff0c\u56e0\u4e3aKVM\u7684HSAVE\u533a\u57df\u901a\u5e38\u4ec5\u5305\u542bL1 Guest\u4e0a\u4e0b\u6587\u6240\u4ee5SVM-\uff06gt;\u5d4c\u5957.hsave.msrpm_base_pa\u901a\u5e38\u6307\u5411Pinned VCPU\u7684MSR\u4f4d\u56fe\u9875\u9762\u3002\n      \u81ea\u63d0\u4ea4\u201c2FCF4876\uff1aKVM\uff1aNSVM\uff1a\u4ece\u53bb\u5e7410\u6708\u5f00\u59cb\u5d4c\u5957\u72b6\u6001\u7684\u9700\u6c42\u5206\u914d\u201d\uff0cSVM-\uff06GT;\u5f53\u5ba2\u6237\u66f4\u6539MSR_EFER\u5bc4\u5b58\u5668\u7684SVME\u4f4d\u65f6\uff0c\u52a8\u6001\u5206\u914d\u5e76\u91ca\u653e\u5d4c\u5957.MSRPM\uff1a\n       \u5bf9\u4e8e\u201c\u7981\u7528SVME\u201d\u6848\u4f8b\uff0cKVM\u5c06\u9996\u5148\u8c03\u7528svm_leave_\uff0c\u4ee5\u5f3a\u5236\u7559\u4e0b\u6f5c\u529b\n  \u5d4c\u5957\u5ba2\u4eba\u7136\u540e\u91ca\u653eSVM-\uff06gt;\u5d4c\u5957\u6570\u636e\u7ed3\u6784\uff08\u5305\u62ecMSR\u6743\u9650\u4f4d\u56fe\u7684\u5907\u4efd\u9875\u9762\uff09\u5728SVM_FREE_\u5df2\u88ab\u4e2d\u3002\u6b63\u5982SVM_LEAVE_NESTED\u8ba4\u4e3asvm-\uff06gt;\u5d4c\u5957.hsave\u5305\u542bl1 guest\u865a\u62df\u673a\u7684\u4fdd\u5b58\u4e0a\u4e0b\u6587\uff0c\u5b83\u53ea\u662f\u5c06\u5176\u63a7\u4ef6\u533a\u57df\u590d\u5236\u5230\u771f\u5b9e\u7684vmcb\uff1a\n           svm-\uff06gt;\u5d4c\u5957 - \uff06gt; msrpm\u3002\u4e00\u65e6\u5b8c\u6210\u4e86SVM_FREE_\u5df2\u5b8c\u6210\u5e76\u4e14KVM\u901a\u8fc7\u63a7\u5236\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0cCPU\u5c06\u4f7f\u7528\u91ca\u653e\u9875\u9762\u8fdb\u884c\u5176MSR\u6743\u9650\u68c0\u67e5\u3002\u5982\u679c\u9875\u9762\u91cd\u590d\u4f7f\u7528\u5e76\u5c06\u5176\u90e8\u5206\u8986\u76d6\u4e3a\u96f6\uff0c\u5219\u8fd9\u4e3a\u5ba2\u6237\u63d0\u4f9b\u4e86\u5bf9\u4e3b\u673aMSR\u7684\u8bbf\u95ee\u6743\u9650\u3002\n    \u4e3a\u4e86\u603b\u7ed3\uff0c\u6076\u610f\u5ba2\u4eba\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u5f97\u4e3b\u673aMSRS\uff1a\n \u53cd\u590d\u5c1d\u8bd5\u4f7f\u7528VMRUN\u6307\u4ee4\u542f\u52a8L2\u8bbf\u5ba2\uff0c\u540c\u65f6\u5728\u7b2c\u4e8c\u4e2aCPU\u6838\u5fc3\u4e0a\u7ffb\u8f6cIntercept_vmrun\u4f4d\u3002 \n\u5982\u679cvmrun\u6210\u529f\uff0c\u8bf7\u5c1d\u8bd5\u4f7f\u7528vmrun\u7684\u53e6\u4e00\u4e2a\u8c03\u7528\u6765\u542f\u52a8\u201cL3\u201d\u6765\u5bbe\u3002\u5982\u679c\u8fd9\u5931\u8d25\uff0c\u6211\u4eec\u5728\u6b65\u9aa42\u4e2d\u5931\u53bb\u4e86\u6bd4\u8d5b\uff0c\u5e76\u4e14\u5fc5\u987b\u518d\u8bd5\u4e00\u6b21\u3002\u5982\u679cvmrun\u6210\u529f\uff0c\u6211\u4eec\u5df2\u6210\u529f\u8986\u76d6SVM-\uff06gt;\u5d4c\u5957.HSAVE\u4e0e\u6211\u4eec\u7684L2\u4e0a\u4e0b\u6587\u3002\n \u6e05\u9664MSR_efer\u4e2d\u7684SVME\u4f4d\uff0c\u540c\u65f6\u4ecd\u5728\u201cL3\u201d\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u3002\u8fd9\u4f7f\u5f97\u73b0\u5728\u6b63\u5728\u6267\u884c\u7684L2 Guest\u865a\u62df\u673a\u4f7f\u7528\u7684MSR\u6743\u9650\u4f4d\u56fe\u5907\u4efd\u9875\u9762\u3002\n \u7b49\u5230KVM\u4e3b\u673a\u91cd\u7528\u5907\u4efd\u9875\u9762\u3002\u8fd9\u5c06\u53ef\u80fd\u6e05\u9664\u5168\u90e8\u6216\u67d0\u4e9b\u4f4d\uff0c\u4f7f\u8bbf\u5ba2\u8bbf\u95ee\u4e3b\u673aMSR\u3002\n    \u5f53\u6211\u6700\u521d\u53d1\u73b0\u5e76\u62a5\u544a\u8fd9\u79cd\u6f0f\u6d1e\u65f6\uff0c\u6211\u611f\u5230\u975e\u5e38\u76f8\u4fe1\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684MSR\u8bbf\u95ee\u5e94\u8be5\u6216\u591a\u6216\u5c11\u7b49\u4e8e\u4e3b\u673a\u4e0a\u7684\u5b8c\u6574\u4ee3\u7801\u6267\u884c\u3002\u867d\u7136\u6211\u7684\u611f\u89c9\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5230\u8fbe\u90a3\u91cc\u4ecd\u7136\u82b1\u4e86\u6211\u591a\u5468\u7684\u5229\u7528\u53d1\u5c55\u3002\u5728\u4e0b\u4e00\u8282\u4e2d\uff0c\u6211\u5c06\u63cf\u8ff0\u5c06\u6b64\u539f\u8bed\u8f6c\u4e3a\u4e3b\u673a\u8f6c\u4e49\u7684\u6b65\u9aa4\u3002\n     \u5047\u8bbe\u6211\u4eec\u7684\u8bbf\u5ba2\u53ef\u4ee5\u83b7\u5f97\u5bf9\u4efb\u4f55MSR\u7684\u5b8c\u5168\u4e0d\u53d7\u9650\u5236\u7684\u8bbf\u95ee\u6743\u9650\uff08\u8fd9\u53ea\u662f\u51ed\u501fInit_On_Alloc = 1\u662f\u6700\u73b0\u4ee3\u5316\u5206\u5e03\u7684\u9ed8\u8ba4\u503c\uff09\uff0c\u6211\u4eec\u5982\u4f55\u5728KVM\u4e3b\u673a\u7684\u4e0a\u4e0b\u6587\u4e2d\u5347\u7ea7\u5b83\u5728\u8fd0\u884c\u4efb\u610f\u4ee3\u7801\u4e2d\uff1f\u8981\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u9700\u8981\u67e5\u770b\u73b0\u4ee3AMD\u7cfb\u7edf\u652f\u6301\u54ea\u79cdMSR\u3002\u67e5\u770b\u6700\u8fd1AMD\u5904\u7406\u5668\u7684BIOS\u548cKernel\u5f00\u53d1\u4eba\u5458\u6307\u5357\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u5e7f\u6cdb\u7684MSR\uff0c\u4ee5\u4f17\u6240\u5468\u77e5\u7684\u548c\u5e7f\u6cdb\u4f7f\u7528\u7684\u8bf8\u5982EFER\uff08\u6269\u5c55\u529f\u80fd\u542f\u7528\u5bc4\u5b58\u5668\uff09\u6216LSTAR\uff08SYSCALL\u76ee\u6807\u5730\u5740\uff09\u4ee5\u5f88\u5c11\u4f7f\u7528\u4e0eSMI_ON_IO_TRAP\uff08\u53ef\u7528\u4e8e\u5728\u8bbf\u95ee\u7279\u5b9aIO\u7aef\u53e3\u8303\u56f4\u65f6\u751f\u6210\u7cfb\u7edf\u7ba1\u7406\u6a21\u5f0f\u4e2d\u65ad\uff09\u3002\n  \u67e5\u770b\u5217\u8868\uff0c\u50cfLSTAR\u6216Kernel_GSBase\u8fd9\u6837\u7684\u591a\u4e2a\u5bc4\u5b58\u5668\u4f3c\u4e4e\u662f\u6709\u8da3\u7684\u76ee\u6807\uff0c\u7528\u4e8e\u91cd\u5b9a\u5411\u4e3b\u673a\u5185\u6838\u7684\u6267\u884c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b9e\u9645\u4e0a\u542f\u7528\u4e86\u5bf9\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u4e0d\u53d7\u9650\u5236\u7684\u8bbf\u95ee\uff0c\u4f46\u662f\u5728vmexit\u4e4b\u540e\uff0c\u5b83\u4eec\u4f1a\u81ea\u52a8\u5c06\u5176\u6062\u590d\u5230\u6709\u6548\u72b6\u6001\uff0c\u4ee5\u4fbf\u4fee\u6539\u5b83\u4eec\u4e0d\u4f1a\u5bfc\u81f4\u4e3b\u673a\u884c\u4e3a\u4e2d\u7684\u4efb\u4f55\u66f4\u6539\u3002\n    \u6b64\u524d\uff0c\u6211\u4eec\u4e4b\u524d\u63d0\u5230\u7684\u4e00\u4e2aMSR\u4f3c\u4e4e\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u79cd\u76f4\u63a5\u5b9e\u73b0\u4ee3\u7801\u6267\u884c\u7684\u65b9\u5f0f\uff1a\u5b58\u50a8\u4e3b\u673a\u4fdd\u5b58\u533a\u57df\u7269\u7406\u5730\u5740\u7684VM_HSAVE_PA\uff0c\u7528\u4e8e\u5728\u53d1\u751fvmexit\u65f6\u6062\u590d\u4e3b\u673a\u4e0a\u4e0b\u6587\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u63a7\u4ef6\u4e0b\u5c06\u6b64MSR\u6307\u5411\u5185\u5b58\u4f4d\u7f6e\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u591f\u4f2a\u9020\u6076\u610f\u4e3b\u673a\u4e0a\u4e0b\u6587\u5e76\u5728VMexit\u540e\u6267\u884c\u81ea\u5df1\u7684\u4ee3\u7801\u3002 \nAMD\u975e\u5e38\u6e05\u695a\u7684\u662f\uff0c\u8f6f\u4ef6\u4e0d\u5e94\u8be5\u4ee5\u4efb\u4f55\u65b9\u5f0f\u89e6\u6478\u4e3b\u673a\u4fdd\u5b58\u533a\u57df\uff0c\u5e76\u4e14\u5b58\u50a8\u5728\u8be5\u533a\u57df\u4e2d\u7684\u6570\u636e\u4f9d\u8d56\u4e8eCPU\uff1a\u201c\u5904\u7406\u5668\u5b9e\u73b0\u53ef\u4ee5\u5728\u6307\u5411\u7684\u5185\u5b58\u533a\u57df\u4e2d\u4ec5\u5b58\u50a8\u90e8\u5206\u6216\u8005\u4e3b\u72b6\u6001\u901a\u8fc7vm_hsave_pa msr\uff0c\u53ef\u4ee5\u5728\u9690\u85cf\u7684\u7247\u4e0a\u5b58\u50a8\u5668\u4e2d\u5b58\u50a8\u4e00\u4e9b\u6216\u6240\u6709\u4e3b\u673a\u72b6\u6001\u3002\u4e0d\u540c\u7684\u5b9e\u73b0\u53ef\u4ee5\u9009\u62e9\u4fdd\u5b58\u4e3b\u673a\u6bb5\u5bc4\u5b58\u5668\u7684\u9690\u85cf\u90e8\u5206\u4ee5\u53ca\u9009\u62e9\u5668\u3002\u7531\u4e8e\u8fd9\u4e9b\u539f\u56e0\uff0c\u8f6f\u4ef6\u4e0d\u5f97\u4f9d\u8d56\u4e3b\u673a\u72b6\u6001\u4fdd\u5b58\u533a\u57df\u7684\u683c\u5f0f\u6216\u5185\u5bb9\uff0c\u4e5f\u4e0d\u4f1a\u901a\u8fc7\u4fee\u6539\u4e3b\u673a\u4fdd\u5b58\u533a\u57df\u7684\u5185\u5bb9\u6765\u5c1d\u8bd5\u66f4\u6539\u4e3b\u673a\u72b6\u6001\u3002 \u201c\uff08AMD64\u67b6\u6784\u7a0b\u5e8f\u5458\u624b\u518c\uff0c\u7b2c2\u5377\uff1a\u7cfb\u7edf\u7f16\u7a0b\uff0c\u7b2c477\u9875\uff09\u3002\u4e3a\u4e86\u52a0\u5f3a\u91cd\u70b9\uff0c\u4e3b\u673a\u4fdd\u5b58\u533a\u57df\u7684\u683c\u5f0f\u65e0\u8bc1\u3002\n \u968f\u7740\u4efb\u4f55\u95ee\u9898\u5bfc\u81f4\u7acb\u5373\u5904\u7406\u5668\u5173\u95ed\uff0c\u8c03\u8bd5\u6d89\u53ca\u65e0\u6548\u4e3b\u673a\u72b6\u6001\u7684\u95ee\u9898\u975e\u5e38\u4e4f\u5473\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u6211\u4e0d\u786e\u5b9a\u662f\u5426\u5728VM\u5185\u90e8\u8fd0\u884c\u65f6\u91cd\u5199VM_HSAVE_PA MSR\u751a\u81f3\u53ef\u4ee5\u5de5\u4f5c\u3002\u5728\u6b63\u5e38\u8fd0\u884c\u671f\u95f4\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u8986\u76d6\u4e86MSR\uff0c\u53ea\u4f1a\u5bfc\u81f4\u7acb\u5373\u5d29\u6e83\u3002\n \u5373\u4f7f\u6211\u4eec\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u5ba2\u4eba\u4e2d\u521b\u5efa\u6709\u6548\uff08\u4f46\u6076\u610f\uff09\u4e3b\u673a\u4fdd\u5b58\u533a\u57df\uff0c\u6211\u4eec\u4ecd\u7136\u9700\u8981\u67d0\u79cd\u65b9\u5f0f\u6765\u8bc6\u522b\u5176\u4e3b\u673a\u7269\u7406\u5730\u5740\uff08HPA\uff09\u3002\u7531\u4e8e\u6211\u4eec\u7684\u8bbf\u5ba2\u4f7f\u7528\u5d4c\u5957\u5206\u9875\u542f\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8bbf\u5ba2\u4e2d\u770b\u5230\u7684\u7269\u7406\u5730\u5740\uff08GPAS\uff09\u4ecd\u7136\u662f\u4e00\u4e2a\u6e90\u4e8eHPA\u7b49\u6548\u7684\u5730\u5740\u3002\n    \u5728\u82b1\u4e00\u4e9b\u65f6\u95f4\u6eda\u52a8\u5230AMD\u7684\u6587\u6863\u4e4b\u540e\uff0c\u6211\u4ecd\u7136\u51b3\u5b9aVM_HSAVE_PA\u4f3c\u4e4e\u662f\u6700\u4f73\u7684\u524d\u8fdb\u65b9\u5411\uff0c\u5e76\u51b3\u5b9a\u4e00\u4e2a\u63a5\u4e00\u4e2a\u5730\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\n    \u5728\u503e\u5012\u5728AMD EPYC 7351P CPU\u4e0a\u8fd0\u884c\u7684\u666e\u901aKVM Guest\u7684\u4e3b\u673a\u4fdd\u5b58\u533a\u57df\u540e\uff0c\u7b2c\u4e00\u4e2a\u95ee\u9898\u5f88\u5feb\u5c31\u4f1a\u6d88\u5931\uff1a\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e3b\u673a\u4fdd\u5b58\u533a\u57df\u5177\u6709\u4e0e\u666e\u901aVMCB\u76f8\u540c\u7684\u5e03\u5c40\uff0c\u53ea\u6709\u51e0\u4e2a\u76f8\u5173\u5b57\u6bb5\u521d\u59cb\u5316\u3002\u751a\u81f3\u66f4\u597d\uff0c\u521d\u59cb\u5316\u7684\u5b57\u6bb5\u5305\u62ec\u5728AMD\u624b\u518c\u4e2d\u8bb0\u5f55\u7684\u6240\u6709\u5df2\u4fdd\u5b58\u7684\u4e3b\u673a\u4fe1\u606f\uff0c\u56e0\u6b64\u62c5\u5fc3A\n...... ", "note_en": "KVM (for Kernel-based Virtual Machine) is the de-facto standard hypervisor for Linux-based cloud environments. Outside of Azure, almost all large-scale cloud and hosting providers are running on top of KVM, turning it into one of the fundamental security boundaries in the cloud.\n    In this blog post I describe a   vulnerability \u00a0in KVM\u2019s AMD-specific code and discuss how this bug can be turned into a full virtual machine escape.  To the best of my knowledge, this is the first public writeup of a KVM guest-to-host breakout that does not rely on bugs in user space components such as QEMU. The discussed bug was assigned CVE-2021-29657, affects kernel versions  v5.10-rc1 to v5.12-rc6 \u00a0and was patched at the end of   March \u00a02021 . \u00a0As the bug only became exploitable in v5.10 and was discovered roughly 5 months later, most real world deployments of KVM should not be affected. I still think the issue is an interesting case study in the work required to build a stable guest-to-host escape against KVM and hope that this writeup can strengthen the case that hypervisor compromises are not only theoretical issues.\n    I start with a short overview of KVM\u2019s architecture, before diving into the bug and its exploitation.\n     KVM is a Linux based open source hypervisor supporting hardware accelerated virtualization on x86, ARM, PowerPC and S/390. In contrast to the other big open source hypervisor Xen, KVM is deeply integrated with the Linux Kernel and builds on its scheduling, memory management and hardware integrations to provide efficient virtualization.\n    KVM is implemented as one or more kernel modules (kvm.ko plus kvm-intel.ko or kvm-amd.ko on x86) that expose a low-level IOCTL-based   API \u00a0to user space processes over the /dev/kvm device. Using this API, a user space process (often called VMM for Virtual Machine Manager) can create new VMs, assign vCPUs and memory, and intercept memory or IO accesses to provide access to  emulate d or virtualization-aware hardware devices.   QEMU \u00a0has been the standard user space choice for KVM-based virtualization for a long time, but in the last few years alternatives like   LKVM ,   crosvm \u00a0or   Firecracker \u00a0have started to become popular.\n    While KVM\u2019s reliance on a separate user space component might seem complicated at first, it has a very nice benefit: Each VM running on a KVM host has a 1:1 mapping to a Linux process, making it managable using standard Linux tools.\n    This means for example, that a guest&#39;s memory can be inspected by dumping the allocated memory of its user space process or that resource limits for CPU time and memory can be applied easily. Additionally, KVM can offload most work related to device emulation to the userspace component. Outside of a couple of performance-sensitive devices related to interrupt handling, all of the complex low-level code for providing virtual disk, network or GPU access can be implemented in userspace.\n    When looking at public writeups of KVM-related vulnerabilities and exploits it becomes clear that this design was a wise decision. The large majority of disclosed vulnerabilities and all publicly available exploits affect QEMU and its support for emulated/paravirtualized devices.\n    Even though KVM\u2019s kernel attack surface is significantly smaller than the one exposed by a default QEMU configuration or similar user space VMMs, a KVM vulnerability has advantages that make it very valuable for an attacker:\n Whereas user space VMMs can be sandboxed to reduce the impact of a VM breakout, no such option is available for KVM itself. Once an attacker is able to achieve code execution (or similarly powerful primitives like write access to page tables) in the context of the host kernel, the system is fully compromised.\n Due to the somewhat poor security history of QEMU, new user space VMMs like crosvm or Firecracker are written in Rust, a memory safe language. Of course, there can still be non-memory safety vulnerabilities or problems due to incorrect or buggy usage of the KVM APIs, but using Rust effectively prevents the large majority of bugs that were discovered in C-based user space VMMs in the past.\n Finally, a pure KVM exploit can work against targets that use proprietary or heavily modified user space VMMs. While the big cloud providers do not go into much detail about their virtualization stacks publicly, it is safe to assume that they do not depend on an unmodified QEMU version for their production workloads. In contrast, KVM\u2019s smaller code base makes heavy modifications unlikely (and KVM\u2019s contributor list points at a strong tendency to upstream such modifications when they exist).\n      With these advantages in mind, I decided to spend some time hunting for a KVM vulnerability that could be turned into a guest-to-host escape. In the past, I had   some success \u00a0with finding vulnerabilities in KVM\u2019s support for nested virtualization on Intel CPUs so reviewing the same functionality for AMD seemed like a good starting point. This is even more true, \u00a0because the recent increase of AMD\u2019s market share in the server segment means that KVM\u2019s AMD implementation is suddenly becoming a more interesting target than it was in the last years.\n    Nested virtualization, the ability for a VM (called L1) to spawn nested guests (L2), was also a niche feature for a long time. However, due to hardware improvements that reduce its overhead and increasing customer demand it\u2019s becoming more widely available. For example, Microsoft is heavily pushing for   Virtualization-based Security \u00a0as part of newer Windows versions, requiring nested virtualization to support cloud-hosted Windows installations. KVM enables support for nested virtualization on both AMD \u00a0and \u00a0Intel by default, so if an administrator or the user space VMM does not explicitly disable it, it\u2019s part of the attack surface for a malicious or compromised VM.\n    AMD\u2019s virtualization extension is called SVM (for Secure Virtual Machine) and in order to support nested virtualization, the host hypervisor needs to intercept all SVM instructions that are executed by its guests, emulate their behavior and keep its state in sync with the underlying hardware. As you might imagine, implementing this correctly is quite difficult with a large potential for complex logic flaws, making it a perfect target for manual code review.\n     Before diving into the KVM codebase and the bug I discovered, I want to quickly introduce how AMD SVM works to make the rest of the post easier to understand. (For a thorough documentation see   AMD64 Architecture Programmer\u2019s Manual, Volume 2: System Programming Chapter 15 .) SVM adds support for 6 new instructions to x86-64 if SVM support is enabled by setting the SVME bit in the EFER MSR. The most interesting of these instructions is  VMRUN , which (as its name suggests) is responsible for running a guest VM.  VMRUN  takes an implicit parameter via the RAX register pointing to the page-aligned physical address of a data structure called \u201cvirtual machine control block\u201d (VMCB), which describes the state and configuration of the VM.\n    The VMCB is split into two parts: First, the State Save area, which stores the values of all guest registers, including segment and control registers. Second, the Control area which describes the configuration of the VM. The Control area describes the virtualization features enabled for a VM, \u00a0sets which VM actions are intercepted to trigger a VM exit  and \u00a0stores some fundamental configuration values such as the page table address used for   nested paging .\n    If the VMCB is correctly prepared (and we are not already running in a VM), VMRUN will first save the host state in a memory region called the host save area, whose address is configured by writing a physical address to the VM_HSAVE_PA MSR. Once the host state is saved, the CPU switches to the VM context and VMRUN only returns once a VM exit is triggered for one reason or another.\n    An interesting aspect of SVM is that a lot of the state recovery after a VM exit has to be done by the hypervisor. Once a VM exit occurs, only RIP, RSP and RAX are restored to the previous host values and all other general purpose registers still contain the guest values. In addition, a full context switch requires manual execution of the VMSAVE/VMLOAD instructions which save/load additional system registers (FS, SS, LDTR, STAR, LSTAR \u2026) from memory.\n    For nested virtualization to work, KVM intercepts execution of the VMRUN instruction and creates its own VMCB based on the VMCB the L1 guest prepared (called vmcb12 in KVM terminology). Of course, KVM can\u2019t trust the guest provided vmcb12 and needs to carefully validate all fields that end up in the real VMCB that gets passed to the hardware (known as vmcb02).\n    Most of the KVM\u2019s code for nested virtualization on AMD is implemented in   arch/x86/kvm/svm/nested.c \u00a0and the code that intercepts VMRUN instructions of nested guests is implemented in  nested_svm_vmrun :\n           * Save the old vmcb, so we don&#39;t need to pick what we save, but can\n      The function first fetches the value of RAX out of the currently active vmcb ( svm-&gt;vcmb ) in  1  (numbers are marked in the code samples) . For guests using nested paging (which is the only relevant configuration nowadays) RAX contains a guest physical address (GPA), which needs to be translated into a host physical address (HPA) first.  kvm_vcpu_map \u00a0( 2 ) takes care of this translation and maps the underlying page to a host virtual address (HVA) that can be directly accessed by KVM.\n    Once the VMCB is mapped,  nested_vmcb_checks \u00a0is called for some basic validation in  3 . Afterwards, the L1 guest context which is stored in  svm-&gt;vmcb \u00a0is copied into the host save area  svm-&gt;nested.hsave \u00a0before KVM enters the nested guest context by calling  enter_svm_guest_mode \u00a0( 4 ) .\n         Looking at  enter_svm_guest_mode \u00a0we can see that KVM copies the vmcb12 control area directly into svm-&gt;nested.ctl and does not perform any further checks on the copied value.\n  Readers familiar with double fetch or Time-of-Check-to-Time-of-Use vulnerabilities might already see a potential issue here: The call to  nested_vmcb_checks \u00a0at the beginning of  nested_svm_vmrun \u00a0performs all of its checks on a copy of the VMCB that is stored in guest memory. This means that a guest with multiple CPU cores can modify fields in the VMCB after they are verified in  nested_vmcb_checks , but before they are copied to svm-&gt;nested.ctl in  load_nested_vmcb_control .\n    Let\u2019s look at  nested_vmcb_checks  to see what kind of checks we can bypass with this approach:\n         At first glance this looks pretty harmless.  control-&gt;asid \u00a0isn\u2019t used anywhere and the last check is only relevant for systems where nested paging isn\u2019t supported. However, the first check turns out to be very interesting.\n    For reasons unknown to me, SVM VMCBs contain a bit that enables or disables interception of the VMRUN instruction when executed inside a guest. Clearing this bit isn\u2019t actually supported by hardware and results in an immediate VMEXIT, so the check in  nested_vmcb_check_controls \u00a0simply replicates this behavior. \u00a0When we race and bypass the check by repeatedly flipping the value of the INTERCEPT_VMRUN bit, we can end up in a situation where svm-&gt;nested.ctl contains a 0 in place of the INTERCEPT_VMRUN bit. To understand the impact we first need to see how nested vmexit\u2019s are handled in KVM:\n    The main SVM exit handler is the function  handle_exit \u00a0in   arch/x86/kvm/svm.c , which is called whenever a VMexit occurs. When KVM is running a nested guest, it first has to check if the exit should be handled by itself or the L1 hypervisor. To do this it calls the function  nested_svm_exit_handled \u00a0( 5 ) whi ch will return  NESTED_EXIT_DONE if the vmexit will be handled by the L1 hypervisor and no further processing by the L0 hypervisor is needed :\n           nested_svm_exit_handled \u00a0first calls  nested_svm_intercept (6) \u00a0to see if the exit should be handled. When we trigger an exit by executing VMRUN in a L2 guest, the default case is executed ( 7 )  to see if the INTERCEPT_VMRUN bit in svm-&gt;nested.ctl is set.  Normally, this should always be the case and the function returns NESTED_EXIT_DONE to trigger a nested VM exit from L2 to L1 and to let the L1 hypervisor handle the exit ( 8 ). (This way KVM supports infinite nesting of hypervisors).\n    However, if the L1 guest exploited the race condition described above svm-&gt;nested.ctl won\u2019t have the INTERCEPT_VMRUN bit set and the VM exit will be handled by KVM itself. This results in a second call to  nested_svm_vmrun \u00a0while still running inside the L2 guest context.  nested_svm_vmrun \u00a0isn\u2019t written to handle this situation and will blindly overwrite the L1 context stored in  svm-&gt;nested.hsave \u00a0with data from the currently active  svm-&gt;vmcb \u00a0which contains data for the L2 guest:\n     * Save the old vmcb, so we don&#39;t need to pick what we save, but can\n    This becomes a security issue due to the way Model Specific Register (MSR) intercepts are handled for nested guests:\n  SVM uses a permission bitmap to control which MSRs can be accessed by a VM. The bitmap is a 8KB data structure with two bits per MSR, one of which controls read access and the other write access. A 1 bit in this position means the access is intercepted and triggers a vm exit, a 0 bit means the VM has direct access to the MSR. The HPA address of the bitmap is stored in the VMCB control area and for normal L1 KVM guests, the pages are allocated and pinned into memory as soon as a vCPU is created.\n    For a nested guest, the MSR permission bitmap is stored in  svm-&gt;nested.msrpm \u00a0and its physical address is copied into the active VMCB (in  svm-&gt;vmcb-&gt;control.msrpm_base_pa ) while the nested guest is running. Using the described double invocation of  nested_svm_vmrun , a malicious guest can copy this value into the  svm-&gt;nested.hsave \u00a0VMCB when  copy_vmcb_control_area \u00a0is executed. This is interesting because the KVM\u2019s hsave area normally only contains data from the L1 guest context so  svm-&gt;nested.hsave.msrpm_base_pa \u00a0would normally point to the pinned vCPU-specific MSR bitmap pages.\n      Since commit \u201c  2fcf4876: KVM: nSVM: implement on demand allocation of the nested state \u201d from last October, svm-&gt;nested.msrpm is dynamically allocated and freed when a guest changes the SVME bit of the MSR_EFER register:\n       For the \u201cdisable SVME\u201d case, KVM will first call  svm_leave_nested \u00a0to forcibly leave potential\n  nested guests and then free the  svm-&gt;nested \u00a0data structures (including the backing pages for the MSR permission bitmap) in  svm_free_nested . As  svm_leave_nested \u00a0believes that  svm-&gt;nested.hsave \u00a0contains the saved context of the L1 guest, it simply copies its control area to the real VMCB:\n           svm-&gt;nested-&gt;msrpm . Once  svm_free_nested \u00a0is finished and KVM passes control back to the guest, the CPU will use the freed pages for its MSR permission checks. This gives a guest unrestricted access to host MSRs if the pages are reused and partially overwritten with zeros.\n    To summarize, a malicious guest can gain access to host MSRs using the following approach:\n Repeatedly try to launch a L2 guest using the VMRUN instruction while flipping the INTERCEPT_VMRUN bit on a second CPU core.\n If VMRUN succeeds, try to launch a \u201cL3\u201d guest using another invocation of VMRUN. If this fails, we have lost the race in step 2 and must try again. If VMRUN succeeds we have successfully overwritten  svm-&gt;nested.hsave \u00a0with our L2 context.\n Clear the SVME bit in MSR_EFER while still running in the \u201cL3\u201d context. This frees the MSR permission bitmap backing pages used by the L2 guest who is now executing again.\n Wait until the KVM host reuses the backing pages. This will potentially clear all or some of the bits, giving the guest access to host MSRs.\n    When I initially discovered and reported this vulnerability, I was feeling pretty confident that this type of MSR access should be more or less equivalent to full code execution on the host. While my feeling turned out to be correct, getting there still took me multiple weeks of exploit development. In the next section I\u2019ll describe the steps to turn this primitive into a guest-to-host escape.\n     Assuming our guest can get full unrestricted access to any MSR (which is only a question of timing thanks to init_on_alloc=1 being the default for most modern distributions), how can we escalate this into running arbitrary code in the context of the KVM host? To answer this question we first need to look at what kind of MSRs are supported on a modern AMD system. Looking at the   BIOS and Kernel Developer\u2019s Guide \u00a0for recent AMD processors we can find a wide range of MSRs starting with well known and widely used ones such as EFER (the Extended Feature Enable Register) or LSTAR (the syscall target address) to rarely used ones like SMI_ON_IO_TRAP (can be used to generate a System Management Mode Interrupt when specific IO port ranges are accessed).\n  Looking at the list, several registers like LSTAR or KERNEL_GSBASE seem like interesting targets for redirecting the execution of the host kernel. Unrestricted access to these registers is actually  enabled by default , however they are automatically restored to a valid state by KVM after a vmexit so modifying them does not lead to any changes in host behavior.\n    Still, there is one MSR that we previously mentioned and that seems to give us a straightforward way to achieve code execution: The VM_HSAVE_PA that stores the physical address of the host save area, which is used to restore the host context when a vmexit occurs. If we can point this MSR at a memory location under our control we should be able to fake a malicious host context and execute our own code after a vmexit.\n     AMD is pretty clear about the fact that software should not touch the host save area in any way and that the data stored in this area is CPU-dependent: \u201c Processor implementations may store only part or none of host state in the memory area pointed to by VM_HSAVE_PA MSR and may store some or all host state in hidden on-chip memory. Different implementations may choose to save the hidden parts of the host\u2019s segment registers as well as the selectors. For these reasons, software must not rely on the format or contents of the host state save area, nor attempt to change host state by modifying the contents of the host save area. \u201d (AMD64 Architecture Programmer\u2019s Manual, Volume 2: System Programming, Page 477). To strengthen the point, the format of the host save area is undocumented.\n Debugging issues involving an invalid host state is very tedious as any issue leads to an immediate processor shutdown. Even worse, I wasn\u2019t sure if rewriting the VM_HSAVE_PA MSR while running inside a VM can even work. It\u2019s not really something that should happen during normal operation so in the worst case scenario, overwriting the MSR would just lead to an immediate crash.\n Even if we can create a valid (but malicious) host save area in our guest, we still need some way to identify its host physical address (HPA). Because our guest runs with nested paging enabled, physical addresses that we can see in the guest (GPAs) are still one address translation away from their HPA equivalent.\n    After spending some time scrolling through AMD\u2019s documentation, I still decided that VM_HSAVE_PA seems to be the best way forward and decided to tackle these problems one by one.\n    After dumping the host save area of a normal KVM guest running on an AMD EPYC 7351P CPU, the first problem goes away quickly: As it turns out, the host save area has the same layout as a normal VMCB with only a couple of relevant fields initialized. Even better, the initialized fields include all the saved host information documented in the AMD manual so the fear that a\n......", "posttime": "2021-06-30 01:39:17", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u9003\u751f,escape,kvm", "title": "\u4e00\u4e2aEPYC\u9003\u751f\uff1a\u6848\u4f8b\u7814\u7a76KVM\u7a81\u7834 ", "title_en": "An EPYC escape: Case-study of a KVM breakout", "transed": 1, "url": "https://googleprojectzero.blogspot.com/2021/06/an-epyc-escape-case-study-of-kvm.html", "via": "", "real_tags": ["\u9003\u751f", "escape", "kvm"]}, {"category": "", "categoryclass": "", "imagename": "", "infoid": 1068677, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e25\u91cd\u7684\u6025\u6027\u547c\u5438\u7efc\u5408\u5f81\u51a0\u72b6\u75c5\u6bd22\uff08SARS-COV-2\uff09\u4fe1\u4f7fRNA\uff08mRNA\uff09\u7684\u75ab\u82d7\u5728\u9884\u9632\u51a0\u72b6\u75c5\u6bd2\u75be\u75c52019\u5e741-5\u4e2d\u6709\u6548\u301c95\uff05\u3002\u4eba\u7c7b\u75ab\u82d7\u8bf1\u5bfc\u7684\u6297\u4f53\u5206\u6ccc\u6297\u4f53\uff08PBS\uff09\u548c\u751f\u53d1\u4e2d\u5fc3\uff08GC\uff09B\u7ec6\u80de\u7684\u52a8\u6001\u4ecd\u7136\u5c1a\u4e0d\u6e05\u695a\u3002\u6211\u4eec\u5728\u63a5\u53d7\u4e24\u5242BNT162B2\u768414\u4e2a\u60a3\u8005\u768414\u4e2a\u4e2a\u4f53\u4e2d\u68c0\u67e5\u4e86\u5916\u5468\u8840\uff08n = 41\uff09\u4e2d\u7684\u6297\u539f\u7279\u5f02\u6027B\u7ec6\u80de\u53cd\u5e94\uff0c\u5e76\u572814\u4e2a\u60a3\u6709\u4e24\u79cd\u5242\u91cf\u7684BNT162B2\uff0c\u7f16\u7801\u5168\u957fSARS-COV-2\u98d9\u5347\u7684mRNA\u7684\u75ab\u82d7\uff08S \uff09\u57fa\u56e01.\u5faa\u73afIgG-\u548cIgA\u5206\u6cccPBS\u9776\u5411\u7b2c\u4e8c\u514d\u75ab\u540e\u4e00\u5468\u8fbe\u5230\u7684S\u86cb\u767d\uff0c\u7136\u540e\u5728\u4e09\u5468\u540e\u6301\u7eed\u4e0b\u964d\u3002\u8fd9\u4e9bPB\u53cd\u5e94\u524d\u9762\u7684\u8840\u6e05\u6297\u8840\u6e05\u6297\u672b\u671f\u548c\u4e2d\u548c\u6297\u4f53\u7684\u6700\u5927\u6c34\u5e73\uff0c\u4ee5\u65e9\u671f\u5faa\u73af\u7684SARS-COV-2\u83cc\u682a\u4ee5\u53ca\u65b0\u51fa\u73b0\u7684\u53d8\u4f53\uff0c\u7279\u522b\u662f\u5728\u5148\u524d\u611f\u67d3\u7684\u4e2a\u4f53\u4e2d\uff0c\u5176\u4ea7\u751f\u4e86\u6700\u5f3a\u5927\u7684\u8840\u6676\u53cd\u5e94\u7684SARS-COV-2 \u3002\u901a\u8fc7\u68c0\u67e5\u6392\u51fa\u814b\u7a9dLNS\u7684\u7ec6\u9488\u5438\u6c14\u7269\uff08FNA\uff09\uff0c\u6211\u4eec\u9274\u5b9a\u4e86\u5728\u539f\u53d1\u6027\u514d\u75ab\u540e\u91c7\u6837\u7684\u6240\u6709\u53c2\u4e0e\u8005\u4e2d\u62df\u5408S\u86cb\u767d\u7684GC B\u7ec6\u80de\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u589e\u5f3a\u540e\uff0c\u5728\u8fd9\u4e9b\u6392\u51fa\u7684LNS\u4e2d\u6301\u7eed\u9ad8\u9891\u7387\u7684S\u7ed3\u5408GC B\u7ec6\u80de\u548cPBS\u5728\u589e\u5f3a\u5242\u514d\u75ab\u540e\u81f3\u5c1112\u5468\u3002 S\u7ed3\u5408GC B\u7ec6\u80de\u884d\u751f\u7684\u5355\u514b\u9686\u6297\u4f53\u4e3b\u8981\u9776\u5411S\u86cb\u767d\u7684\u53d7\u4f53\u7ed3\u5408\u7ed3\u6784\u57df\uff0c\u5176\u514b\u9686\u8f83\u5c11\u4e0eN-\u672b\u7aef\u7ed3\u6784\u57df\u6216\u4e0e\u4eba\u8d1d\u66ff\u59a5\u8461\u8404\u75c5\u6bd2OC43\u548cHKU1\u5171\u7528\u7684\u8868\u4f4d\u3002\u4e0e\u4ec5\u8bc6\u522bSARS-COV-2 S\u86cb\u767d\u7684\u90a3\u4e9b\uff0c\u540e\u8005\u4ea4\u53c9\u53cd\u5e94\u6027B\u7ec6\u80de\u514b\u9686\u5177\u6709\u66f4\u9ad8\u6c34\u5e73\u7684\u4f53\u91cd\u7a81\u53d8\uff0c\u8868\u660e\u5b58\u50a8\u5668B\u7ec6\u80de\u6765\u6e90\u3002\u6211\u4eec\u7684\u7814\u7a76\u8868\u660e\uff0c\u57fa\u4e8eSARS-COV-2 mRNA\u7684\u4eba\u7c7b\u75ab\u82d7\u63a5\u79cd\u8bf1\u5bfc\u6301\u7eed\u7684GC B\u7ec6\u80de\u53cd\u5e94\uff0c\u4ece\u800c\u80fd\u591f\u4ea7\u751f\u5f3a\u5927\u7684\u4f53\u6db2\u514d\u75ab\u529b\u3002\n       \n     \u901a\u8fc7\u63d0\u4ea4\u8bc4\u8bba\uff0c\u60a8\u540c\u610f\u9075\u5b88\u6211\u4eec\u7684\u6761\u6b3e\u548c\u793e\u533a\u6307\u5357\u3002\u5982\u679c\u60a8\u53d1\u73b0\u6ee5\u7528\u7684\u4e1c\u897f\u6216\u4e0d\u9075\u5b88\u6211\u4eec\u7684\u6761\u6b3e\u6216\u6307\u5357\uff0c\u8bf7\u5c06\u5176\u6807\u8bb0\u4e3a\u4e0d\u5408\u9002\u3002 ", "note_en": "Severe Acute Respiratory Syndrome Coronavirus 2 (SARS-CoV-2) messenger RNA (mRNA)-based vaccines are ~95% effective in preventing coronavirus disease 2019 1\u20135. The dynamics of antibody secreting plasmablasts (PBs) and germinal centre (GC) B cells induced by these vaccines in humans remain unclear. We examined antigen-specific B cell responses in peripheral blood (n=41) and draining lymph nodes (LNs) in 14 individuals who received two doses of BNT162b2, an mRNA-based vaccine encoding full-length SARS-CoV-2 spike (S) gene 1. Circulating IgG- and IgA-secreting PBs targeting the S protein peaked one week after the second immunization then declined, becoming undetectable three weeks later. These PB responses preceded maximal levels of serum anti-S binding and neutralizing antibodies to an early circulating SARS-CoV-2 strain as well as emerging variants, especially in individuals previously infected with SARS-CoV-2, who produced the most robust serologic responses. By examining fine needle aspirates (FNAs) of draining axillary LNs, we identified GC B cells that bound S protein in all participants sampled after primary immunization. Remarkably, high frequencies of S-binding GC B cells and PBs were sustained in these draining LNs for at least twelve weeks after the booster immunization. S-binding GC B cell-derived monoclonal antibodies predominantly targeted the receptor binding domain of the S protein, with fewer clones binding to the N-terminal domain or to epitopes shared with the S proteins of the human betacoronaviruses OC43 and HKU1. The latter cross-reactive B cell clones had higher levels of somatic hypermutation compared to those that only recognized SARS-CoV-2 S protein, suggesting a memory B cell origin. Our studies demonstrate that SARS-CoV-2 mRNA-based vaccination of humans induces a persistent GC B cell response, enabling the generation of robust humoral immunity.\n       \n     By submitting a comment you agree to abide by our  Terms and  Community Guidelines. If you find something abusive or that does not comply with our terms or guidelines please flag it as inappropriate.", "posttime": "2021-06-30 01:39:04", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u73b0\u4ee3,moderna,\u7ec6\u80de", "title": "\u8f89\u745e\u548c\u73b0\u4ee3\u75ab\u82d7\u53ef\u80fd\u4f1a\u4ea7\u751f\u6301\u4e45\u7684\u514d\u75ab\u529b ", "title_en": "Pfizer and Moderna vaccines may produce lasting immunity", "transed": 1, "url": "https://www.nature.com/articles/s41586-021-03738-2", "via": "", "real_tags": ["\u73b0\u4ee3", "moderna", "\u7ec6\u80de"]}, {"category": "", "categoryclass": "", "imagename": "531433d761c1a7605241fd4ed24dff00.jpg", "infoid": 1068676, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u7531\u4e8e\u56fd\u4f1a\u4e89\u8bba\u57fa\u7840\u8bbe\u65bd\u6761\u4f8b\u8349\u6848\u7684\u89c4\u6a21\u4ee5\u53ca\u5982\u4f55\u652f\u4ed8\u5b83\uff0c\u5f88\u5c11\u5173\u6ce8\u6700\u4ee4\u4eba\u56f0\u60d1\u7684\u95ee\u9898\u4e4b\u4e00\uff1a\u4e3a\u4ec0\u4e48\u8981\u82b1\u8d39\u66f4\u591a\u5730\u5efa\u7acb\u7f8e\u56fd\u7684\u8fd0\u8f93\u7f51\u7edc\u800c\u4e0d\u662f\u5176\u4f59\u7684\u4e16\u754c\uff1f\n \u57286\u6708\u521d\u7684\u4e00\u6b21\u91c7\u8bbf\u4e2d\uff0cTransports\u79d8\u4e66Pete Buttigieg\u627f\u8ba4\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u9664\u4e86\u9700\u8981\u8fdb\u4e00\u6b65\u7814\u7a76\u5b83\u4e4b\u5916\uff0c\u4ed6\u6ca1\u6709\u63d0\u4f9b\u4efb\u4f55\u89e3\u51b3\u65b9\u6848\u3002\n Biden\u7684\u539f\u59cb\u57fa\u7840\u8bbe\u65bd\u63d0\u6848\u5305\u62ec6210\u4ebf\u7f8e\u5143\u7684\u9053\u8def\uff0c\u94c1\u8def\u548c\u6865\u6881\u3002\u4ed6\u7684\u8ba1\u5212\u4e0d\u4ec5\u88ab\u5217\u4e3a\u57fa\u7840\u8bbe\u65bd\u8ba1\u5212\uff0c\u800c\u4e14\u6709\u52a9\u4e8e\u5e94\u5bf9\u6c14\u5019\u5371\u673a\u7684\u8ba1\u5212\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u90e8\u5206\uff0c\u8ba9\u66f4\u591a\u7684\u7f8e\u56fd\u4eba\u901a\u8fc7\u6279\u91cf\u8f6c\u8ba9\u6765\u66f4\u5bb9\u6613\u3002\u62dc\u767b\u8ba1\u5212\u6307\u51fa\uff0c\u201c\u7f8e\u56fd\u843d\u540e\u4e8e\u52a0\u62ff\u5927\uff0cU.K.\u548c\u6fb3\u5927\u5229\u4e9a - \u5728\u9002\u5f53\u7684\u57fa\u7840\u8bbe\u65bd\u7684\u51c6\u65f6\u4ea4\u4ed8\u4e2d\uff0c\u201d\u4f46\u4f4e\u4f30\u4e86\u95ee\u9898\u3002\n \u8fd9\u4e9b\u9879\u76ee\u4e0d\u4ec5\u662f\u6602\u8d35\u7684\uff0c\u5dde\u548c\u5730\u65b9\u751a\u81f3\u751a\u81f3\u90fd\u4e0d\u8bd5\u56fe\u5efa\u7acb\u7279\u522b\u96c4\u5fc3\u52c3\u52c3\u7684\u9879\u76ee\u3002\u7f8e\u56fd\u662f\u4e16\u754c\u4e0a\u6700\u6602\u8d35\u7684\u56fd\u5bb6\uff0c\u4ee5\u5efa\u7acb\u50cf\u7ebd\u7ea6\u5e02\u5730\u94c1\uff0c\u534e\u76db\u987f\u5730\u94c1\u6216\u829d\u52a0\u54e5\u201cL\u201d\u8fd9\u6837\u7684\u5feb\u901f\u94c1\u8def\u8fc7\u5883\u57fa\u7840\u8bbe\u65bd\u3002\u8fd9\u4e0e\u56fd\u5bb6\u901a\u5e38\u907f\u514d\u96a7\u9053\u5de5\u7a0b\uff0c\u8fd9\u4e9b\u9879\u76ee\u901a\u5e38\u662f\u4efb\u4f55\u65b0\u7684\u5730\u94c1\u7ebf\u6700\u590d\u6742\u548c\u6602\u8d35\u7684\u90e8\u5206\u3002\u6839\u636e\u8fc7\u5883\u8d39\u7528\u9879\u76ee\uff0c\u6210\u672c\u9ad8\u4e8e\u7f8e\u56fd\u7684\u4e94\u4e2a\u56fd\u5bb6\u201c\u5efa\u8bbe\u9879\u76ee\u8d85\u8fc780\uff05\u7684\u96a7\u9053......\u800c\u5728\u7f8e\u56fd\uff0c\u603b\u8f68\u9053\u957f\u5ea6\u768437\uff05\u53ea\u6709\u96a7\u9053\u3002\u201d\n   \u6ca1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u539f\u56e0\u3002\u4e13\u5bb6\u5bf9\u653f\u5e9c\u6536\u96c6\u66f4\u591a\u6570\u636e\uff0c\u4f46\u95ee\u9898\u7684\u590d\u6742\u6027\u4e3a\u590d\u6742\u7684\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u4e86\u590d\u6742\u7684\u89e3\u51b3\u65b9\u6848\u3002\u4ecd\u7136\u8d4c\u6ce8\u5f88\u9ad8\u3002\u7ebd\u7ea6\u7814\u7a76\u4eba\u5458\u6307\u51fa\u4e86\u5927\u89c4\u6a21\u7684\u7ecf\u6d4e\u80a1\u4efd\uff0c\u6307\u51fa\u7684\u7814\u7a76\u8868\u660e\uff0c\u5efa\u7b51\u5bc6\u96c6\u7684\u57ce\u5e02\u8fc7\u5883\u7f51\u7edc\u53ef\u80fd\u5c06\u603b\u7ecf\u6d4e\u589e\u957f\u7387\u63d0\u9ad810\uff05\u3002\n \u76ee\u6807\u5927\u4e8e\u5355\u4e00\u8f7b\u8f68\u7ebf\u6216\u624b\u63a8\u8f66;\u8fd9\u662f\u5173\u4e8e\u521b\u5efa\u8fc7\u5883\u7f51\u7edc\uff0c\u8ba9\u4eba\u4eec\u4ece\u5bb6\u91cc\u5bfc\u822a\u5230\u52aa\u529b\u73a9\u800d\uff0c\u4ee5\u4fbf\u653e\u5f03\u4ed6\u4eec\u7684\u6c7d\u8f66\uff0c\u4ece\u800c\u51cf\u5c11\u6c61\u67d3\u548c\u62e5\u5835\u3002\u8fd9\u8fd8\u4e0d\u591f\uff0c\u6700\u5bcc\u6709\u7684\u56fd\u5bb6\u53ef\u4ee5\u627f\u62c5\u6bcf\u9694\u51e0\u5341\u5e74\u6765\u5efa\u7acb\u4e00\u4e2a\u6216\u4e24\u4e2a\u8fc7\u5883\u9879\u76ee\u3002\u964d\u4f4e\u6210\u672c\u81f3\u5173\u91cd\u8981\u5b9e\u73b0\u4f34\u968f\u8fc7\u5883\u9879\u76ee\u7684\u6c14\u5019\u548c\u7ecf\u6d4e\u6548\u76ca\u3002\n   \u7f8e\u56fd\u7684\u57fa\u7840\u8bbe\u65bd\u6210\u672c\u95ee\u9898\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8e\u8fc7\u5883\uff0c\u5b83\u4e5f\u662f\u56fd\u5bb6\u7684\u9ad8\u901f\u516c\u8def\u3002 \n\u7ebd\u7ea6\u7f8e\u8054\u50a8\u94f6\u884c\u548c\u5e03\u6717\u5927\u5b66\u7814\u7a76\u4eba\u5458\u7684\u7814\u7a76\u8868\u660e\uff0c\u5efa\u8bbe1990\u5e74\u81f32008\u5e74\u95f4\u5efa\u8bbe\u201c\u5dde\u9645\u516c\u8def\u5df7\u9053\u201d\u7684\u6210\u672c\u3002\u65b0\u7684\u5efa\u8bbe - \u6269\u5927\u548c\u5efa\u8bbe\u4ea4\u6c47\u5904\u548c\u5efa\u8bbe\u65b0\u7684\u9053\u8def - \u662f\u5728\u54ea\u91cc\u7814\u7a76\u4eba\u5458\u4e4b\u4e00\uff0c\u7ecf\u6d4e\u5b66\u5bb6Matthew Turner\u4e4b\u4e00\uff0c\u8c0e\u8a00\u7684\u5927\u90e8\u5206\u95ee\u9898\u8c0e\u8a00\u3002 \uff08\u50cfResurfacing\u4e00\u6837\u7684\u201c\u91cd\u5ea6\u7ef4\u62a4\u201d\u7684\u6210\u672c\u4e5f\u5728\u589e\u52a0\uff0c\u4f46\u7279\u7eb3\u8868\u793a\uff0c\u8fd9\u51e0\u4e4e\u5b8c\u5168\u8fbe\u5230\u67d0\u4e9b\u94fa\u8def\u6750\u6599\u4ef7\u683c\u4e0a\u6da8\u3002\uff09\n \u4e54\u6cbb\u534e\u76db\u987f\u5927\u5b66\u7684\u7ecf\u6d4e\u5b66\u5bb6Leah Brooks\u8fd8\u7814\u7a76\u4e86\u516c\u8def\u95ee\u9898\u3002\u5979\u7684\u7814\u7a76\u53d1\u73b0\uff0c\u5404\u56fd\u572820\u4e16\u7eaa80\u5e74\u4ee3\u572820\u4e16\u7eaa80\u5e74\u4ee3\u572820\u4e16\u7eaa80\u5e74\u4ee3\u5efa\u9020\u4e86\u4e00\u82f1\u91cc\u7684\u9ad8\u901f\u516c\u8def\u3002\n \u201c\u5dde\u9645\u516c\u8def\u7cfb\u7edf\u7684\u5927\u5c40\u662f\uff0c\u6211\u4eec\u770b\u5230\u4e86\u76f8\u5bf9\u5408\u7406\u7684\u6210\u672c[\u4ece20\u4e16\u7eaa50\u5e74\u4ee3\u4e2d\u671f]\u5230\u4e86\u5927\u7ea670\u5e74\u4ee3\u65e9\u671f\uff0c\u7136\u540e\u5728\u6b64\u540e\u7684\u6210\u672c\u5f88\u5927\uff0c\u201d\u5e03\u9c81\u514b\u65af\u89e3\u91ca\u8bf4\u3002\n   \u5f53\u8c08\u5230\u6279\u91cf\u8f6c\u62b5\u65f6\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u4e3b\u8981\u9879\u76ee\u5dde\uff0c\u4e0e\u5176\u56fd\u9645\u540c\u884c\u76f8\u6bd4\uff0c\u6f84\u6e05\u3002 ENO\u8fd0\u8f93\u4e2d\u5fc3\u5728\u6700\u8fd1\u7684\u62a5\u544a\u4e2d\u7ed8\u5236\u4e86\u4e00\u4e2a\u4ee4\u4eba\u6cae\u4e27\u7684\u56fe\u7247\uff1a\u6bcf\u82f1\u91cc\u7684\u57fa\u7840\uff0c\u7f8e\u56fd\u7684\u8fc7\u5883\u94c1\u8def\u9879\u76ee\u662f\u4e16\u754c\u4e0a\u6700\u6602\u8d35\u7684\u3002\u5728\u7ebd\u7ea6\uff0c\u7b2c\u4e8c\u5927\u9053\u5730\u94c1\u6bcf\u82f1\u91cc26\u4ebf\u7f8e\u5143\uff0c\u65e7\u91d1\u5c71\u4e2d\u592e\u5730\u94c1\u6bcf\u82f1\u91cc920\u4e07\u7f8e\u5143\uff0c\u6d1b\u6749\u77f6\u7d2b\u7ebf\u53608\u4ebf\u7f8e\u5143\u3002\n \u76f8\u6bd4\u4e4b\u4e0b\uff0c\u54e5\u672c\u54c8\u6839\u6bcf\u82f1\u91cc\u76843.23\u4ebf\u7f8e\u5143\u5efa\u9020\u4e86\u4e00\u4e2a\u9879\u76ee\uff0c\u5df4\u9ece\u548c\u9a6c\u5fb7\u91cc\u5206\u522b\u4e3a\u6bcf\u82f1\u91cc1.6\u4ebf\u7f8e\u5143\u548c3.2\u4ebf\u7f8e\u5143\u7684\u9879\u76ee\u3002\u8fd9\u4e9b\u662f\u6210\u672c\u5de8\u5927\u5dee\u5f02\u3002\n Paul Lewis\u662f\u6069\u79d1\u4e2d\u5fc3\u7684\u653f\u7b56\u548c\u91d1\u878d\u526f\u603b\u88c1\uff0c\u5d29\u6e83\u4e86\uff1a\u201c\u7f8e\u56fd\u5bf9\u8463\u4e8b\u4f1a\u7684\u96a7\u9053\u9879\u76ee\u5177\u6709\u975e\u5e38\u91cd\u8981\u7684\u4f18\u8d28\uff0c\u5e76\u4e3a[\u5730\u4e0a]\u9879\u76ee\u7565\u6709\u6ea2\u4ef7\u3002\u201d\n \u7814\u7a76\u4eba\u5458\u5df2\u7ecf\u6392\u9664\u4e86\u4e00\u4e9b\u66f4\u660e\u663e\u7684\u6f5c\u5728\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e9b\u9879\u76ee\u5728\u7f8e\u56fd\u6210\u672c\u4e0a\u6da8\u3002 \n\u7531\u4e8e\u8fc7\u5883\u7814\u7a76\u5458Alon Levy\u5728Niskanen Center\u7684\u4e00\u4efd\u62a5\u544a\u4e2d\u5199\u9053\uff0c\u201c\u8fd9\u4e0d\u662f\u6211\u4eec\u7684\u8d22\u5bcc\uff1a\u56fd\u6c11GDP\u4eba\u5747GDP\u4e0e\u5176\u5730\u94c1\u5efa\u8bbe\u6210\u672c\u4e4b\u95f4\u6ca1\u6709\u76f8\u5173\u6027\u3002\u5b83\u4e5f\u4e0d\u662f\u5173\u4e8e\u5730\u8d28\u56e0\u7d20\u7684\uff1a\u9879\u76ee\u6210\u672c\u80cc\u540e\u7684\u6700\u5927\u56e0\u7d20\u662f\u5b83\u6240\u5728\u7684\u56fd\u5bb6\uff0c\u5373\u4f7f\u5728\u4e0d\u540c\u7684\u5730\u8d28\u4e0a\u4e5f\u662f\u76f8\u5f53\u4e00\u81f4\u7684......\u8fd9\u7eaf\u7cb9\u662f\u673a\u6784\u3002\u201c\n \u5f53\u8c08\u5230\u9053\u8def\u548c\u5927\u90e8\u5206\u9ad8\u6210\u672c - \u201c\u65b0\u5efa\u65bd\u5de5\u4f4d\u201d - \u5373\u4f7f\u4ed6\u201c\u4e0d\u77e5\u9053\u90a3\u4e9b\u4ef7\u683c\u6b63\u5728\u589e\u52a0\uff0c\u201d\u4ed6\u53ef\u4ee5\u201c\u6d88\u9664\u5f88\u591a\u4e1c\u897f\u201d\u3002\u7279\u7eb3\u89e3\u91ca\u4e86\u5e73\u8054\u7684\u5171\u540c\u7406\u8bba\uff0c\u6216\u8005\u6211\u4eec\u6b63\u5728\u5efa\u9020\u9053\u8def\u7684\u65b9\u5f0f\u6216\u6211\u4eec\u6784\u5efa\u5b83\u4eec\u7684\u65b9\u5f0f\uff08\u4f8b\u5982\uff0c\u5728\u66f4\u591a\u57ce\u5e02\u533a\u57df\uff09\u4e0d\u652f\u6301\u7edf\u8ba1\u8bc1\u636e\u3002\n  1999\u5e74\uff0c\u6211\u642c\u5230\u9a6c\u91cc\u5170\u5dde\u8499\u54e5\u9a6c\u5229\u53bf\u3002\u5b98\u5458\u4e00\u76f4\u5728\u8003\u8651\u5728\u8fd9\u4e00\u70b9\u4e0a\u56f4\u7ed5\u5168\u53bf\u5efa\u9020\u94c1\u8def\u7ebf\u3002 20\u591a\u5e74\u540e\uff0c\u7d2b\u7ebf\u53ea\u670940\uff05\u7684\u5efa\u9020\uff0c\u636e\u534e\u76db\u987f\u90ae\u62a5\u79f0\uff0c\u9884\u7b97\u8d85\u8fc7\u4e86\u6570\u4ebf\u7f8e\u5143\u3002\n \u4f5c\u4e3a\u8de8\u5883\u884c\u52a8\u59d4\u5458\u4f1a\uff0c\u5bcc\u88d5\u76f4\u6d41\u96ea\u6a47\u5c4b\u7684\u5c45\u6c11\u5f52\u6863\uff0c\u96ea\u4f5b\u5170\u8ffd\u9010\u7684\u5c45\u6c11\u5bfc\u81f4\u4e86\u51e0\u5341\u5e74\u6765\uff0c\u5bf9\u6297\u8f7b\u8f68\u9879\u76ee\uff0c\u8fd9\u5c06\u4f7f\u6574\u4e2a\u5730\u533a\u6709\u76ca\u4e8e\u6574\u4e2a\u5730\u533a\uff0c\u8fd9\u5c06\u662f\u201c\u5fae\u5c0f\u7684\u900f\u660e\u65e0\u810a\u690e\u52a8\u7269\u201c\u53ef\u80fd\u5b58\u5728\u98ce\u9669\u3002 \u201c\u5f53\u6ca1\u6709\u53d1\u73b0\u6fd2\u5371\u7684Amphipods\u65f6\uff0c\u201d\u6279\u8bc4\u8005\u8f6c\u5411\u5176\u4ed6\u8bba\u70b9\u3002\u7136\u800c\uff0c\u5bf9\u54e5\u4f26\u6bd4\u4e9a\u4e61\u6751\u4ff1\u4e50\u90e8\u7684\u6f5c\u5728\u4f24\u5bb3\u7684\u6f5c\u5728\u4f24\u5bb3\u4ee5\u53ca\u516c\u4f17\u610f\u89c1\u8d2c\u4f4e\u7684\u6f5c\u5728\u5371\u5bb3\u7684\u6f5c\u5728\u5371\u5bb3\u5728\u4e0d\u90a3\u4e48\u5bcc\u88d5\u7684\u793e\u533a\u4e2d\u7684\u9700\u6c42\u4f7f\u5f97\u660e\u786e\u7684\u662f\uff0c\u8bb8\u591a\u6240\u8bf4\u7684\u4ee4\u4eba\u62c5\u5fe7\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u662f\u73af\u5883\u6216\u8d22\u52a1\u3002\n \u53e4\u65af\u5854\u6c83\u6258\u96f7\u65af\uff0c\u5f53\u5730\u79fb\u6c11\u6743\u5021\u5bfc\u96c6\u56e2Casa\u7684\u6267\u884c\u8463\u4e8b\u544a\u8bc9\u5df4\u5c14\u7684\u6469\u592a\u9633\uff1a\u201c\u73b0\u5728\uff0c\u4e3a\u56fd\u5185\u5de5\u4eba\u53bb\u8d1d\u585e\u65af\u8fbe\u5de5\u4f5c\uff0c\u9700\u8981\u4e24\u4e2a\u5c0f\u65f6\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e58\u5750\u4e86\u4e09\u8f86\u516c\u5171\u6c7d\u8f66\uff0c\u201d\u4ed6\u8bf4\u3002 \u201c\u5728\u7d2b\u7ebf\u4e0a\uff0c\u5b83\u5c06\u572815\u523020\u5206\u949f\u4e4b\u95f4\u3002\u201d\n \u4efb\u4f55\u91cd\u5927\u9879\u76ee\u90fd\u4f1a\u5bf9\u67d0\u4e9b\u4eba\u7684\u5371\u5bb3\u4ea7\u751f\u5371\u5bb3 - \u5efa\u8bbe\u53ef\u4ee5\u963b\u788d\u4ea4\u901a\uff0c\u65b0\u7684\u7ed3\u6784\u53ef\u4ee5\u963b\u788d\u4f60\u7684\u95e8\u5eca\uff0c\u5408\u7406\u7684\u4eba\u4eec\u540c\u610f\u7684\u4e8b\u60c5\u4ee4\u4eba\u70e6\u607c\u6216\u6602\u8d35\u3002\u4f46\u8fd0\u8f93\u9879\u76ee\u5fc5\u987b\u53bb\u67d0\u4e2a\u5730\u65b9\uff0c\u53ea\u6709\u4e00\u4e2a\u4eba\u8981\u770b\u4f4f\u623f\u5e02\u573a\uff0c\u4ee5\u4e86\u89e3\u5141\u8bb8\u4e2a\u522b\u516c\u6c11\u56e0\u771f\u5b9e\u6216\u5236\u9020\u7684\u5371\u5bb3\u800c\u8131\u8f68\u9879\u76ee\u7684\u6210\u672c\u3002\n   \u4e54\u6cbb\u534e\u76db\u987f\u5927\u5b66\u7ecf\u6d4e\u5b66\u5bb6\u5e03\u9c81\u514b\u65af\u89e3\u91ca\u8bf4\uff0c\u7d2b\u7ebf\u7684\u60c5\u51b5\u53ef\u80fd\u4f1a\u89e3\u91ca\u6211\u4eec\u5728\u51e0\u5341\u5e74\u4e2d\u770b\u5230\u7684\u8bb8\u591a\u6210\u672c\u589e\u52a0\u3002\u5979\u79f0\u8fd9\u79cd\u73b0\u8c61\u662f\u4ec0\u4e48\uff1f \u201c\u6211\u4eec\u79f0\u4e4b\u4e3a\u516c\u6c11\u58f0\u97f3\u7684\u5d1b\u8d77\u3002\u201d \n\u5e03\u9c81\u514b\u65af\u6392\u9664\u4e86\u201c\u5b8c\u5168\u5408\u7406\u7684\u89e3\u91ca\u201d\uff0c\u5982\u652f\u4ed8\u5de5\u4eba\uff0c\u6216\u8005\u5728\u9ad8\u901f\u516c\u8def\u6750\u6599\u7684\u6210\u672c\u589e\u52a0\u5230\u63a8\u52a8\u5927\u90e8\u5206\u6210\u672c\u589e\u52a0\u3002\u76f8\u53cd\uff0c\u5979\u8bf4\uff0c\u53f8\u6cd5\uff0c\u6cd5\u5b9a\u548c\u884c\u653f\u53d8\u9769 - \u7279\u522b\u662f1970\u5e74\u56fd\u5bb6\u73af\u5883\u653f\u7b56\u6cd5\uff08NEPA\uff09\u7684\u901a\u8fc7\uff0c\u5bfc\u81f4\u516c\u6c11\u7684\u6743\u529b\u589e\u52a0\u3002\n \u5982\u679c\u5b83\u963b\u6b62\u653f\u5e9c\u91c7\u53d6\u6709\u5bb3\u884c\u52a8\uff0c\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898 - \u867d\u7136\u5b83\u63d0\u9ad8\u4e86\u4e0e\u8bc9\u8bbc\u8fdb\u884c\u8bc9\u8bbc\u7684\u6210\u672c\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u4ef6\u597d\u4e8b\uff01\u6709\u65f6\u6210\u672c\u6b63\u5728\u4e0a\u5347\uff0c\u56e0\u4e3a\u6211\u4eec\u6b63\u5728\u652f\u4ed8\u6709\u4ef7\u503c\u7684\u4e1c\u897f\uff0c\u4f8b\u5982\u66f4\u9ad8\u7684\u5b89\u5168\u6807\u51c6\u548c\u7535\u68af\u7b49\u53ef\u8bbf\u95ee\u6027\u57fa\u7840\u8bbe\u65bd\u3002\n \u4f46\u5f80\u5f80\uff0c\u6211\u4eec\u53ea\u662f\u4e3a\u5bcc\u88d5\u7684\u4e2a\u4eba\u4ed8\u51fa\u4ee3\u4ef7\u5bf9\u5176\u4ed6\u4eba\u53d1\u6325\u504f\u597d\u3002\n Nepa\u8981\u6c42\u201c\u4e3b\u8981\u8054\u90a6\u884c\u52a8\u201d\u7684\u73af\u5883\u5f71\u54cd\u9648\u8ff0\uff08EIS\uff09\u53ef\u4ee5\u201c\u663e\u7740\u5f71\u54cd\u201d\u73af\u5883\uff0c\u5199\u4e0bNiskanen Center\u7684\u8fb9\u7f18\u6797\u5973\u548c\u585e\u7f2a\u5c14\u54c8\u8499\u5fb7\u3002\u8bc9\u8bbc\u5df2\u7ecf\u8f6c\u53d8\u4e3a\u5e9e\u7136\u5927\u7269\u4e00\u5ea6\u5408\u7406\u7684\u8981\u6c42\uff1a\n EIS\u53ef\u4ee5\u7b80\u79f0\u4e3a10\u9875......\u4f46\u662f]\u5728\u8bc9\u8bbc\u538b\u529b\u4e0b\uff0c\u6cd5\u5f8b\u7684\u9700\u6c42\u589e\u957f\u66f4\u52a0\u7e41\u91cd\uff1a\u4eca\u5929\u7684\u5e73\u5747EIS\u8d85\u8fc7600\u9875\uff0c\u52a0\u4e0a\u901a\u5e38\u8d85\u8fc71000\u9875\u7684\u9644\u5f55\u3002\u5e73\u5747EIS\u73b0\u5728\u9700\u89814\u5c81\u624d\u80fd\u5b8c\u6210; 2010\u5e74\u81f32017\u5e74\u95f4\uff0c\u572817\u5c81\u6216\u4ee5\u4e0a\u7684\u5ef6\u8bef\u540e\u5b8c\u6210\u4e86\u56db\u9879\u6b64\u7c7b\u9648\u8ff0\u3002\u5e76\u8bb0\u4f4f\uff0c\u5728EIS\u901a\u8fc7\u6cd5\u5f8b\u624b\u518c\u65b9\u9762\u53d6\u5f97\u4e86\u4e00\u4e2a\u9879\u76ee\uff0c\u6ca1\u6709\u5730\uff0c\u6ca1\u6709\u5730\u9762\uff0c\u8fd9\u5305\u62ec\u9700\u8981\u8054\u90a6\u8bb8\u53ef\u7684\u8054\u90a6\u9879\u76ee\u548c\u79c1\u4eba\u9879\u76ee\u3002\n \u201c\u4e00\u65e6\u5efa\u9020\u8fc7\u7a0b\u5f00\u59cb\uff0c\u4eba\u4eec\u62b1\u6028\u3002\u8fd9\u4e9b\u6295\u8bc9\u5bfc\u81f4\u8bc9\u8bbc\uff0c\u201c\u7ebd\u7ea6\u6559\u6388\u548c\u8fc7\u5883\u7814\u7a76\u5458Eric Goldwyn\u89e3\u91ca\u9053\u3002\u5373\u4f7f\u57282018\u5e74\u7684\u7ebd\u7ea6\u5e02\uff0c\u6240\u6709\u62a5\u544a\u7684\u65c5\u884c\u4e2d\u768462\uff05\u90fd\u662f\u901a\u8fc7\u8fc7\u5883\uff0c\u9a91\u81ea\u884c\u8f66\u6216\u6563\u6b65\u6240\u5236\u4f5c\u7684\uff0c\u7b2c\u4e8c\u5927\u9053\u5730\u94c1\u9879\u76ee\u56f0\u6270\u7740\u5f53\u5730\u4eba\u7684\u7834\u574f\u3002\n \u52a0\u5dde\u516c\u5171\u653f\u7b56\u975e\u8425\u5229\u7ec4\u7ec7\u7684\u523a\u6fc0\u8ba4\u4e3a\uff0c\u5176\u56fd\u5bb6\u7684\u73af\u5883\u4fdd\u62a4\u6cd5\uff08CEQA\uff09\u901a\u5e38\u4e0d\u6070\u5f53\u5730\u4f7f\u7528\uff0c\u5ef6\u8fdf\u6216\u505c\u6b62\u8fc7\u5883\u548c\u53ef\u6301\u7eed\u7684\u8fd0\u8f93\u9879\u76ee\uff0c\u8fd9\u4e9b\u9879\u76ee\u5c06\u4e3a\u73af\u5883\u6709\u4e86\u91cd\u5927\u6548\u76ca\u3002\u201c\u4f5c\u4e3a\u57ce\u5e02\u89c4\u5212\u5e08\u548cUCLA\u4f4f\u623f\u7814\u7a76\u5458\u5728\u5927\u897f\u6d0b\u4e2d\u88ab\u8bb0\u5f55\u5728\u5927\u897f\u6d0b\uff0cCEQA\u8bc9\u8bbc\u4e2d\u6709\u201c\u8428\u514b\u62c9\u95e8\u6258\u7684\u8d2b\u56f0\u4f4f\u623f\uff0c\u5723\u5730\u4e9a\u54e5\u7684\u592a\u9633\u80fd\u7535\u573a\uff0c\u4ee5\u53ca\u65e7\u91d1\u5c71\u7684\u8fc7\u5883\u3002\u4ec5\u4ec5\u8bc9\u8bbc\u7684\u5a01\u80c1\u8db3\u4ee5\u963b\u6b62\u5c0f\u9879\u76ee - \u7279\u522b\u662f\u623f\u5c4b - \u4ece\u7b2c\u4e00\u540d\u5f00\u59cb\u3002\u201c \n\u201c\u6709\u4ee4\u4eba\u9707\u60ca\u7684\u4f8b\u5b50\uff0c\u201d\u65af\u666e\u5c14\u7684\u4ea4\u901a\u653f\u7b56\u4e3b\u4efb\u52b3\u62c9\u6258\u514b\u592b\u544a\u8bc9\u6211\u3002 \u201c\u4e00\u4e2a\u4eba\u8d77\u8bc9\u65e7\u91d1\u5c71\u81ea\u884c\u8f66\u8ba1\u5212\uff0c\u5728\u505c\u8f66\u4e8f\u635f\u4e0a\uff0c\u57fa\u672c\u4e0a\u5360\u670934\u82f1\u91cc\u7684\u81ea\u884c\u8f66\u8f66\u9053\u3002\u5728\u9a91\u81ea\u884c\u8f66\u7684\u540c\u65f6\u78b0\u649e\u671f\u95f4\uff0c\u8d85\u8fc72,000\u4eba\u53d7\u4f24\u3002\u201c\n \u5728Tolkoff\u7684\u4f8b\u5b50\u4e2d\uff0c\u56fd\u5bb6\u7684\u73af\u5883\u4fdd\u62a4\u6cd5\u88ab\u7528\u6765\u634d\u536b\u505c\u8f66\u573a\u3002\n  \u4e3a\u4e86\u5f04\u6e05\u695a\u7f8e\u56fd\u7684\u8fc7\u5883\u6210\u672c\u95ee\u9898\u7684\u6839\u672c\u539f\u56e0\uff0cNYU\u7814\u7a76\u4eba\u5458Goldwyn\uff0cAlon Levy\u548cElif Ensari\u770b\u7740\u6ce2\u58eb\u987f\uff0c\u7eff\u7ebf\u5ef6\u4f38\uff08GLX\uff09\u5df2\u7ecf\u5728\u4f5c\u54c1\u4e2d\u4e09\u5341\u5e74\u3002 4.3\u82f1\u91cc\u8f7b\u8f68\u9879\u76ee\u4f30\u8ba12012\u5e74 - \u52302015\u5e74\uff0c2012\u5e74\u7684\u4ef7\u683c\u8fbe\u52301112\u4ebf\u7f8e\u5143\uff0c\u8be5\u6570\u5b57\u51e0\u4e4e\u589e\u52a0\u4e86\u4e24\u500d\u3002\u4e0d\u51fa\u6240\u6599\uff0c\u9879\u76ee\u88ab\u6401\u7f6e\u3002\n \u201c\u8fd9\u662f\u4e00\u4e2a\u5982\u6b64\u70e6\u607c\u7684\u4e8b\u60c5\u4e4b\u4e00\u662f\uff0c\u6ca1\u6709\u53ea\u662f\u4e00\u4e2a\u660e\u663e\u7684\u4e1c\u897f\uff0c\u201d\u7ebd\u7ea6\u5dde\u52a9\u7406\u6559\u6388\u7684\u52a9\u7406\u6559\u6388\uff0c\u57c3\u514b\u00b7\u6208\u5fb7\u6c83\u4f0a\u544a\u8bc9\u6c83\u514b\u65af\u3002\n \u4f46\u7814\u7a76\u4eba\u5458\u80fd\u591f\u786e\u5b9a\u7eff\u8272\u7ebf\u8def\u53d1\u751f\u7684\u4e8b\u60c5\u7684\u539f\u56e0\uff1a\u4e24\u79cd\u4e0d\u540c\u7684\u4eba\u4e4b\u95f4\u7684\u66f2\u6298\uff0c\u8fd9\u4e24\u79cd\u4e0d\u540c\u7684\u673a\u6784\uff0c\u51e0\u4e4e\u6ca1\u6709\u7ba1\u7406\u5927\u578b\u9879\u76ee\u548c\u987e\u95ee\u7684\u7ecf\u9a8c\uff0c\u8fd9\u662f\u4e00\u4e2a\u5141\u8bb8\u5229\u76ca\u76f8\u5173\u8005\u6602\u8d35\u7684\u60f3\u6cd5\u88ab\u6dfb\u52a0\u5230\u9879\u76ee\u4e2d\u7684\u5956\u9879\u65b9\u6cd5\u968f\u7740\u9879\u76ee\u62d6\u7d2f\u7684\u62d6\u7d2f\u548c\u8fd0\u8f93\u671f\u6743\u7684\u9700\u6c42\u589e\u52a0\uff0c\u8303\u56f4\u201c\u5373\u4f7f\u662f\u4e0d\u5207\u5b9e\u9645\u7684\uff0c\u201d\u548c\u516c\u4f17\u538b\u529b\u4e5f\u589e\u52a0\u3002\n   \u867d\u7136\u6ce2\u58eb\u987f\u7684\u6210\u672c\u8d85\u652f\u662f\u6781\u7aef\u7684\uff0c\u5373\u4f7f\u662f\u7f8e\u56fd\uff0c\u751a\u81f3\u5bf9\u7f8e\u56fd\u800c\u8a00\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b66\u4e60\u7684\u7ecf\u9a8c\u6559\u8bad\u662f\u7531\u4e13\u5bb6Vox\u4e0e\u4e4b\u4ea4\u8c08\u7684\u4eba\u3002\n \u7f8e\u56fd\u5728\u5efa\u9020\u8fc7\u5883\u65b9\u9762\u4e0d\u592a\u5584\u4e8e\u5ec9\u4ef7\u7684\u4e00\u4e2a\u539f\u56e0\u662f\u5b83\u4e0d\u7ec3\u4e60\u3002 \n\u201c\u5982\u679c\u4f60\u770b\u4e00\u4e0b\u5df4\u9ece\u6216\u9996\u5c14\u6216\u4e0a\u6d77\uff0c\u4ed6\u4eec\u5df2\u7ecf\u5efa\u7acb\u4e86[\u8fc7\u5883]\u51e0\u5341\u5e74\u6765\u7684\u4e0d\u95f4\u65ad\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7ebd\u7ea6\u57281940\u5e74\u4e4b\u524d\u4ee5Breakneck\u8282\u594f\u5efa\u7acb\u4e86\u5b83\u7684\u5730\u94c1\uff0c\u7136\u540e\u51b7\u5374\u4e86\u5b83\uff0c\u201cGoldwyn\u89e3\u91ca\u8bf4\u3002\n \u4ee3\u7406\u5546\u4e0d\u5e38\u89c4\u8d1f\u8d23\u5efa\u8bbe\u65b0\u4e8b\u7269\uff0c\u6240\u4ee5\u6bcf\u6b21\u90fd\u8fd9\u6837\u505a\uff0c\u5b83\u5c31\u8fd4\u56de\u5230\u7ed8\u56fe\u677f\u4e0a\u3002\n \u201c\u51e0\u4e4e\u4e0e\u6bcf\u4e2a\u57ce\u5e02\u90fd\u6709\u4e00\u4e2a\u5b66\u4e60\u66f2\u7ebf\uff0c\u5f53\u4ed6\u4eec\u5f15\u5165\u94c1\u8def\u65f6\uff0c\u56e0\u4e3a\u4f60\u6ca1\u6709\u5173\u4e8e\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\u7684\u5f53\u5730\u77e5\u8bc6\u57fa\u7840\uff0c\u201dUC Berkeley\u6cd5\u5f8b\u4e2d\u5fc3\u7684\u6c14\u5019\u8ba1\u5212\u4e3b\u4efbEthan Elkind\u89e3\u91ca\u8bf4\uff0c\u80fd\u91cf\u548camp;\u73af\u5883\u3002 \u201c\u8fd9\u662f\u5426\u5728\u5efa\u8bbe\u65b9\u9762\u6216\u76d1\u7763\u65b9\u9762\u6216\u516c\u5171\u7ba1\u7406\u65b9\u9762\u3002\u5f53\u4ed6\u4eec\u8bd5\u56fe\u5b8c\u6210\u4ed6\u4eec\u7684\u7b2c\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u4f60\u4f1a\u770b\u5230\u5f88\u591a\u57ce\u5e02\u7eca\u5012\u4e86\u5927\u95e8\u3002\u201c\n \u7136\u540e\u5728\u591a\u4e2a\u53f8\u6cd5\u7ba1\u8f96\u533a\u8de8\u8d8a\u5efa\u7b51\u7269\u7684\u590d\u6742\u6027\u3002\u8054\u90a6\u653f\u5e9c\u5f80\u5f80\u4e3a\u4e00\u4e2a\u9879\u76ee\u63d0\u4f9b\u8d44\u91d1\uff0c\u8be5\u9879\u76ee\u9700\u8981\u591a\u4e2a\u57ce\u5e02\u6216\u53bf\u7684\u534f\u8c03\uff0c\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u5b8c\u6210\u591a\u91d1\u8fbe\u5229\u9879\u76ee\uff0c\u4e0e\u4ed6\u4eec\u53ef\u80fd\u4ee5\u524d\u53ef\u80fd\u5b8c\u6210\u7684\u4e00\u9879\uff0c\u901a\u5e38\u6ca1\u6709\u660e\u786e\u754c\u5b9a\u7684\u9886\u5bfc\u8005 - \u8fd9\u5c31\u50cf\u6700\u5177\u529f\u80fd\u5931\u8c03\u7684\u96c6\u56e2\u9879\u76ee\u66fe\u7ecf\u3002\n Elkind\u6307\u51fa\uff0c\u5373\u4f7f\u8054\u90a6\u653f\u5e9c\u4e0e\u4e00\u4e2a\u53f8\u6cd5\u7ba1\u8f96\u533a\u5408\u4f5c\uff0c\u5b83\u53ef\u80fd\u4f1a\u53d8\u5f97\u51cc\u4e71\uff0c\u6307\u51fa\u201cFarragut North\u548cFarragut West Stations\u7684\u5b58\u5728[\u5728\u534e\u76db\u987f\u7279\u533a\u7684West Stations\uff08\u5728\u534e\u76db\u987f\u7279\u533a\uff09\u7684\u5b58\u5728 - \u5e94\u8be5\u662f\u4e00\u7ad9\uff0c\u4f46\u8054\u90a6\u653f\u5e9c\u4e0d\u4f1a\u4ea4\u51fa\u8fd9\u4e2a\u5305\u88f9\u4e3a\u4e00\u4e2a\u7edf\u4e00\u7ad9\u63d0\u4f9b\u7684\u5305\u88f9\u3002\u201c\n   \u6b64\u5916\uff0c\u8fd9\u4e9b\u673a\u6784\u5f80\u5f80\u662f\u4eba\u4eec\u53ef\u4ee5\u4f53\u9a8c\uff0c\u5728\u8fc7\u7a0b\u7684\u6bcf\u4e2a\u6b65\u9aa4\u4e2d\u521b\u9020\u74f6\u9888\uff1a\u201c\u8fd9\u4e9b\u9879\u76ee\u7684\u6027\u8d28\u662f\u4f60\u5f97\u5230\u4e86\u5173\u4e8e'\u5e94\u8be5\u4f7f\u7528\u8fd9\u4e2aCCTV\u63a5\u7ebf\u7684\u95ee\u9898\u7684\u95ee\u9898 - \u4f60\u9700\u8981\u5feb\u901f\u56de\u5e94\u7684\u4ebaGoldwyn\u89e3\u91ca\u8bf4\uff0c\u6210\u4e3a\u4e00\u7cfb\u5217\u4e3b\u9898[\u8981\u4fdd\u6301\u9879\u76ee\u79fb\u52a8]\u7684\u4e13\u9898\u3002\n Levy\u5f3a\u8c03\u4e86\u7f8e\u56fd\u673a\u6784\u7684\u5931\u8d25\uff0c\u8f6c\u5411\u4e16\u754c\u5176\u4ed6\u5730\u533a\uff0c\u4e86\u89e3\u4ed6\u4eec\u6240\u505a\u7684\u66f4\u597d\uff1a\u201c\u8ba9\u66f4\u591a\u8fd9\u4e9b\u89c4\u5212\u7ba1\u7406\u8005\u8bf4\u6211\u4eec\u9700\u8981\u66f4\u5fb7\u8bed\uff0c\u66f4\u6709\u610f\u5927\u5229\uff0c\u66f4\u745e\u5178\uff0c\u97e9\u56fd - \u8fd9\u771f\u7684\u5f88\u96be\uff0c\u201c \u4ed6\u4eec\u8bf4\u3002 \u201c\u7f8e\u56fd\u5bf9\u5176\u4ed6\u56fd\u5bb6\u7684\u5b66\u4e60\u975e\u5e38\u7cdf\u7cd5\u3002\u5982\u679c\u7f8e\u56fd\u7684\u67d0\u4e9b\u4e1c\u897f\u4e0d\u8d77\u4f5c\u7528[\u548c]\u5728\u5176\u4ed6\u56fd\u5bb6\u5de5\u4f5c\uff0c\u4eba\u4eec\u5e76\u6ca1\u6709\u771f\u6b63\u7684\u8bfe\u7a0b\u3002\u201c \n\u8fc7\u5883\u673a\u6784\u548c\u5730\u65b9\u653f\u5e9c\u6709\u65f6\u4e5f\u4f1a\u8bd5\u56fe\u62a2\u5148\u516c\u4f17\u5c48\u670d\uff0c\u5728\u6b64\u8fc7\u7a0b\u4e2d\u4e3a\u81ea\u5df1\u521b\u9020\u66f4\u591a\u7684\u5de5\u4f5c\u3002\u4f8b\u5982\uff0c\u6ce2\u58eb\u987f\u7eff\u7ebf\u5efa\u8bae\u5728\u4e0b\u534810\u70b9\u81f3\u4e0a\u53487\u70b9\u4e4b\u95f4\u8fdb\u884c\u9650\u5236\u5efa\u8bbe\uff0c\u5e76\u8981\u6c42\u4ea4\u901a\u4e0d\u65ad\u6d41\u52a8\u3002\u4f46\u968f\u7740\u8fc7\u6e21\u7684\u6210\u672c\u7814\u7a76\u4eba\u5458\u6240\u6307\u51fa\u7684\uff0c\u201c\u5f53\u4ed6\u4eec\u5fc5\u987b\u82b1\u8d39\u7b2c\u4e00\u5c0f\u65f6\u7684\u73ed\u6b21\u8bbe\u5b9a\u4e1c\u897f\u65f6\uff0c\u201d\u52b3\u52a8\u8005\u7684\u52b3\u52a8\u8005\u5c31\u4e0d\u90a3\u4e48\u5bcc\u6709\u6210\u6548\uff0c\u6700\u540e\u4e00\u5c0f\u65f6\u7834\u574f\u4e86\u63a9\u76d6\u7684\u4e8b\u5b9e\uff0c\u5373\u6b63\u5728\u8fdb\u884c\u4e3b\u8981\u7684\u5efa\u7b51\u9879\u76ee\u3002 ...... [i]\u4f0a\u65af\u5766\u5e03\u5c14\uff0c\u8fd0\u8f93\u5efa\u8bbe\u9879\u76ee\u6bcf\u592924\u5c0f\u65f6\u8fd0\u884c\u3002\u201c\u5728\u4e03\u5e74\uff08\u7eff\u7ebf\u76844.3\u82f1\u91cc\u9879\u76ee\u7684\u9884\u671f\u6301\u7eed\u65f6\u95f4\uff09\u4e2d\uff0c\u4f0a\u65af\u5766\u5e03\u5c14\u5efa\u4e8e\u8d85\u8fc712\u82f1\u91cc\u7684\u5730\u94c1\u3002\n \u201c\u5728\u7f8e\u56fd\uff0c\u6211\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u56fd\u5bb6\u4e0d\u662f\u975e\u5e38\u63a5\u53d7\u7684\u4e2d\u65ad\uff0c\u201dGoldwyn\u544a\u8bc9Vox\u3002\u5728\u6d1b\u6749\u77f6\uff0c\u5efa\u9020\u7d2b\u7ebf\u7684\u5de5\u4eba\u53ea\u80fd\u5de5\u4f5c\u5468\u672b - \u7136\u540eCovid-19\u51fb\u4e2d\uff0c\u7559\u4e0b\u7559\u5728\u5bb6\u5ead\u8ba2\u5355\uff0c\u4f7f\u4ed6\u4eec\u6210\u4e3a24/7\u7684\u5de5\u4f5c\u3002\u7ed3\u679c\uff1f\n   \u6bd5\u7adf\u8fd9\u6b21\u8c08\u8bba\u7684\u6210\u672c\u8d85\u652f\u548c\u8fc7\u5ea6\u652f\u51fa\u5404\u79cd\u9879\u76ee\u540e\uff0c\u60a8\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u7f8e\u56fd\u5728\u8fd0\u8f93\u65b9\u9762\u6b63\u5728\u82b1\u8d39\u592a\u591a\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6839\u636eBrookings\u5927\u90fd\u5e02\u653f\u7b56\u8ba1\u5212\u7684\u4e00\u4efd\u62a5\u544a\uff0c\u8be5\u56fd\u7684\u8fc7\u5883\u652f\u51fa\u201c\u5728\u8fc7\u53bb10\u5e74\u4e2d\uff0c\u201d\u901a\u80c0\u8c03\u6574\u6761\u6b3e\u201c\u4e0b\u964d\u4e8699\u4ebf\u7f8e\u5143\u3002\u4e0e\u7c7b\u4f3c\u56fd\u5bb6\u76f8\u6bd4\uff0c\u7f8e\u56fd\u5728\u516c\u5171\u57fa\u7840\u8bbe\u65bd\u4e0a\u82b1\u8d39\u4e86\u76f8\u5bf9\u8f83\u5c11\u7684GDP\uff081.5\uff05\uff09\uff0c\u800c\u82f1\u56fd\u5219\u82b1\u8d392\uff05\uff0c\u6cd5\u56fd2.4\uff05\uff0c\u6fb3\u5927\u5229\u4e9a3.5\uff05\u3002\n \u95ee\u9898\u4ece\u6839\u672c\u4e0a\u8bb2\uff0c\u7f8e\u56fd\u5bf9\u5176\u5efa\u7acb\u7684\u4e1c\u897f\u5f88\u5c11\u3002\n \u201c\u7531\u4e8e\u6b63\u786e\u7684\u539f\u56e0\uff0c\u4e0d\u8981\u9519\u8fc7\u8fd9\u91cc\u7684\u5927\u5956\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u6b63\u786e\u7684\u5730\u65b9\u5efa\u7acb\u6b63\u786e\u7684\u57fa\u7840\u8bbe\u65bd\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u7f3a\u4e4f\u8d44\u91d1\uff0c\u201cBrookings\u5927\u90fd\u4f1a\u653f\u7b56\u8ba1\u5212\u7814\u7a76\u5458\u4e89\u8bba\u201d\u3002 \u201c\u6211\u4eec\u9700\u8981\u4ee5\u67d0\u79cd\u65b9\u5f0f\u8c08\u8bba\u57fa\u7840\u8bbe\u65bd\u6548\u7387\u548c\u9879\u76ee\u4ea4\u4ed8\uff0c\u4f46\u8fd9\u91cc\u4e5f\u6709\u66f4\u5927\u7684\u6545\u4e8b\u3002\u201d\n \u7b2c\u4e00\u6b65\u662f\u66f4\u591a\u7684\u6570\u636e\u3002\u6211\u4eec\u5bf9\u6210\u672c\u7684\u7814\u7a76\u53d7\u5230\u6536\u96c6\u7684\u5f88\u5c11\u7684\u4e8b\u5b9e\u9650\u5236\uff0c\u4ee5\u5f04\u6e05\u695a\u9879\u76ee\u7684\u6bcf\u4e2a\u90e8\u5206\u5b9e\u9645\u6210\u672c\u3002\u5982\u679c\u4e00\u4e2a\u9879\u76ee\u83b7\u5f97\u8054\u90a6\u8d44\u91d1\uff0c\u8981\u6c42\u5b83\u4e3a\u8054\u90a6\u653f\u5e9c\u63d0\u4f9b\u4e86\u4e00\u9879\u9010\u9879\u6210\u672c\u6e05\u5355\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b65\u3002\n   \u201c\u7b2c\u4e00\u4e2a\u5c31\u50cf\u662f\u6700\u826f\u6027\u7684\u4e8b\u60c5\uff0c\u54ea\u4e2a\u662f\u4f60\u5e94\u8be5\u544a\u8bc9\u6211\u4eec\u5b83\u5b8c\u6210\u7684\u9879\u76ee\u6210\u672c\u662f\u591a\u5c11\uff0c\u201d\u5e03\u9c81\u514b\u65af\u544a\u8bc9vox\u3002 \u201c\u6b64\u523b\uff0c\u8054\u90a6\u516c\u8def\u7ba1\u7406\u5c40\u4e0d\u77e5\u9053\u5efa\u7acb\u9ad8\u901f\u516c\u8def\u7684\u4efb\u4f55\u5355\u72ec\u90e8\u5206\u7684\u6210\u672c\u662f\u591a\u5c11\u3002\u201d \n\u8fd9\u4e0d\u662f\u4e00\u4e2a\u65b0\u7684\u60f3\u6cd5\u3002\u968f\u77402017\u5e74\u74e6\u5c14\u65af\u00b7yglesias\u62a5\u9053\uff0c\u201c\u6709\u4eba\u5728\u7f8e\u56fd\u7684\u5929\u7a7a\u9ad8\u4ea4\u901a\u65bd\u5de5\u6210\u672c\u4e2d\u6740\u6b7b\u4e86\u56fd\u4f1a\u8be2\u95ee\u201d\uff0c\u6ca1\u6709\u89e3\u91ca\u3002\n \u4e5f\u6709\u7f8e\u56fd\u9014\u4e2d\u9700\u8981\u7b80\u5316\u5f00\u53d1\u8fc7\u5883\u9879\u76ee\u7684\u8fc7\u7a0b\u3002\u5218\u6613\u65af\u5411\u6211\u89e3\u91ca\u8bf4\uff0c\u6b27\u6d32\u76d1\u7ba1\u673a\u6784\u7ecf\u5e38\u9707\u60ca\uff0c\u5373\u7f8e\u56fd\u7684\u8fc7\u5883\u673a\u6784\u5fc5\u987b\u901a\u8fc7\u81ea\u5df1\u7684\u8fdb\u7a0b\u6765\u83b7\u5f97\u6388\u6743\u5173\u95ed\u8857\u9053\u6216\u51c6\u5907\u5efa\u7b51\u533a\u57df\u3002\n \u201c\u6211\u4eec\u5728\u7f8e\u56fd\u4f7f\u7528\u7684\u5f88\u591a[\u8fdb\u7a0b]\u592a\u6162\u6216\u8fc7\u4e8e\u7e41\u7410\u548c\u8fc7\u65f6\u3002\u5218\u6613\u65af\u89e3\u91ca\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u66f4\u5bb9\u6613\u6784\u5efa\u66f4\u591a\u66f4\u597d\u7684\u8fc7\u5883\u9879\u76ee\u3002\n \u4f46\u524a\u51cf\u5b98\u50da\u673a\u6784\u5e76\u4e0d\u610f\u5473\u7740\u524a\u51cf\u653f\u5e9c\u9884\u7b97 - \u540c\u65f6\u7b80\u5316\u8fdb\u5165\u53d1\u5c55\u9879\u76ee\u7684\u89c4\u5219\u548c\u6761\u4f8b\uff0c\u7f8e\u56fd\u7684\u8fd0\u8f93\u673a\u6784\u9700\u8981\u5728\u5185\u90e8\u5de5\u4f5c\u4eba\u5458\uff0c\u4ee5\u51cf\u5c11\u6602\u8d35\u7684\u627f\u5305\u5546\u5e76\u5efa\u7acb\u5236\u5ea6\u77e5\u8bc6\u3002\n \u8f6c\u5411\u5176\u4ed6\u56fd\u5bb6\u53ef\u4ee5\u5c55\u793a\u5982\u4f55\u5b9e\u73b0\u5168\u56fd\u7684\u4e00\u4e9b\u8fc7\u5883\u76ee\u6807\uff08\u4f8b\u5982\uff0c\u73af\u5883\u4fdd\u62a4\uff09\u800c\u6ca1\u6709\u8fc7\u9ad8\u7684\u6210\u672c - \u5f81\u6536\u867d\u7136\u7f8e\u56fd\u94fa\u5e73\u4e86\u6602\u8d35\u7684\u8bc9\u8bbc\uff0c\u4f46\u610f\u5927\u5229\u7684\u540c\u7b49\u8054\u90a6\u73af\u5883\u6cd5\u201c\u7531\u884c\u653f\u52a0\u5f3a\u72b6\u6001\u3002\u201d\n \u6ca1\u6709\u9b54\u6cd5\u6309\u94ae\u6216\u5355\u4e00\u7684\u76d1\u7ba1\u4fee\u590d\uff0c\u5c06\u7f8e\u56fd\u653e\u5728\u672a\u6765\u7684\u8def\u5f84\u4e0a\uff0c\u53ef\u901a\u8fc7\u53ef\u8bbf\u95ee\uff0c\u4e30\u5bcc\uff0c\u7ecf\u6d4e\u9ad8\u6548\u7684\u8fc7\u5883\u3002\u4f46\u662f\uff0c\u4e0e\u4f0a\u9f99\u9e9d\u9999\u7684Hyperloop\u68a6\u60f3\u6216\u9ad8\u901f\u8f68\u9053\u4f20\u64ad\u4e4b\u7c7b\u7684\u770b\u4f3c\u672a\u6765\u4e3b\u4e49\u7684\u8fd0\u8f93\u5f62\u5f0f\u7684\u516c\u5171\u8ff7\u604b\uff0c\u8be5\u56fd\u8bc1\u660e\u4e86\u63a8\u52a8\u5b98\u50da\u548c\u6cd5\u5f8b\u83ab\u62c9\u65af\u7684\u4ef7\u503c\u3002\n   \u6570\u767e\u4e07\u4eba\u8f6c\u5411Vox\uff0c\u4e86\u89e3\u65b0\u95fb\u4e2d\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u7684\u4f7f\u547d\u4ece\u672a\u6bd4\u8fd9\u4e00\u523b\u66f4\u91cd\u8981\uff1a\u901a\u8fc7\u4e86\u89e3\u6765\u8d4b\u4e88\u3002\u6211\u4eec\u8bfb\u8005\u7684\u8d22\u52a1\u8d21\u732e\u662f\u652f\u6301\u6211\u4eec\u8d44\u6e90\u5bc6\u96c6\u578b\u5de5\u4f5c\u7684\u5173\u952e\u90e8\u5206\uff0c\u5e76\u5e2e\u52a9\u6211\u4eec\u4e3a\u6240\u6709\u4eba\u63d0\u4f9b\u65b0\u95fb\u3002\u8bf7\u8003\u8651\u4eca\u5929\u4e3avox\u63d0\u4f9b\u8d21\u732e\uff0c\u4ece3\u7f8e\u5143\u7684\u4ef7\u683c\u4e0b\u964d\u3002 ", "note_en": "As Congress argues over the size of the infrastructure bill and how to pay for it, very little attention is being devoted to one of the most perplexing problems: Why does it cost so much more to build transportation networks in the US than in the rest of the world?\n In an  interview in early June, Transportation Secretary Pete Buttigieg acknowledged the problem, but he offered no solutions except the need to study it further.\n Biden\u2019s original infrastructure proposal included  $621 billion for roads, rail, and bridges. His plan is billed not only as an infrastructure plan but one that would help respond to the climate crisis. A big part of that is making it easier for more Americans to travel by mass transit. The Biden plan noted that \u201cAmerica lags its peers \u2014 including Canada, the U.K., and Australia \u2014 in the on-time and on-budget delivery of infrastructure,\u201d but that understates the problem.\n Not only are these projects inordinately expensive, states and localities are not even attempting to build particularly ambitious projects. The US is the sixth-most expensive country in the world to build rapid-rail transit infrastructure like the New York City Subway, the Washington Metro, or the Chicago \u201cL.\u201d And that\u2019s with the nation often avoiding tunneling projects, which are often the most complicated and expensive parts of any new metro line. According to the Transit Costs Project, the five countries with higher costs than the US \u201care building projects that are more than 80 percent tunneled ... [whereas in the US] only 37 percent of the total track length is tunneled.\u201d\n   There\u2019s no one simple reason for this. Experts are clamoring for the government to collect more data, but the complexity of the problem lends itself to complex solutions. Still, the stakes are high. NYU researchers  noted the massive economic stakes, pointing to studies that show that building dense urban transit networks could increase aggregate economic growth by roughly 10 percent.\n The goal is bigger than a single light rail line or a trolley; it\u2019s about creating transit networks that allow people to navigate from home to work to play easily enough to give up their cars, thereby reducing pollution and congestion. It\u2019s not enough that the nation\u2019s richest states can afford to build one or two transit projects every couple of decades. Bringing down costs is paramount to achieve the climate and economic benefits that accompany transit projects.\n   America\u2019s infrastructure cost problem isn\u2019t just confined to transit, it\u2019s also the country\u2019s highways.\n Research by New York Federal Reserve Bank and Brown University researchers reveals that the cost to construct a \u201clane mile of interstate increased five-fold\u201d between 1990 and 2008. New construction \u2014 widening and building interchanges and building new sections of road altogether \u2014 is where the bulk of the problem lies, says one of the researchers, economist Matthew Turner. (The cost of \u201cheavy maintenance\u201d like resurfacing increased as well, but Turner said that\u2019s due almost entirely to the rise in the price of certain paving materials.)\n Leah Brooks, an economist at George Washington University, also studied the highway problem. Her  research finds that states spent nearly three times as much to build a mile of highway in the 1980s as they did in the early \u201860s.\n \u201cBig picture for the interstate highway system is that we saw relatively reasonable cost increases [from the mid 1950s] to about the early \u201870s and then pretty substantial cost increases thereafter,\u201d Brooks explained.\n   And when it comes to mass transit, looking closer at the major projects states have attempted in comparison with their international counterparts is clarifying. The Eno Center for Transportation  painted a dismal picture in its  recent report: On a per mile basis, America\u2019s transit rail projects are some of the most expensive in the world. In New York, the Second Avenue Subway cost $2.6 billion per mile, in San Francisco the Central Subway cost $920 million per mile, in Los Angeles the Purple Line cost $800 million per mile.\n In contrast, Copenhagen built a project at just $323 million per mile, and Paris and Madrid did their projects for $160 million and $320 million per mile, respectively. These are massive differences in cost.\n Paul Lewis, vice president of policy and finance at the Eno Center, broke it down: \u201cThe US has a pretty big premium for tunnel projects across the board and a slight premium for [above-ground] projects.\u201d\n Researchers have ruled out some of the more obvious potential explanations for why these projects cost more in the US.\n As transit researcher Alon Levy writes in a  report for the Niskanen Center, \u201cThis is not about our wealth: there is no correlation between a country\u2019s GDP per capita and its subway construction costs. Nor is it about geological factors: the biggest factor behind a project\u2019s cost is what country it is in, and costs are fairly consistent even across different geologies ... This is purely institutional.\u201d\n And when it comes to roads and the bulk of the high costs \u2014 \u201cthe new construction bit\u201d \u2014 Turner says even though he has  \u201cno idea why those prices are increasing,\u201d he can \u201celiminate a lot of things.\u201d Turner explains that common theories like  unions or  the way we\u2019re building roads or  where we\u2019re  building them (for example, in more urban areas) are not supported by statistical evidence.\n  I moved to Montgomery County, Maryland, in 1999. Officials  had been thinking about building a rail line across the county for more than a decade at that point. More than 20 years later, the Purple Line is only 40 percent built and has run hundreds of millions of dollars over budget,  according to the Washington Post.\n As the Action Committee for Transit, a local pro-transit organization,  documented, residents of the wealthy DC suburb of Chevy Chase have led a decades-long crusade against the light rail project,  which will benefit the entire region, by claiming that a \u201ctiny transparent invertebrate\u201d might be at risk. \u201cWhen no endangered amphipods were found,\u201d the detractors turned to other arguments. However, repeated references to the potential harm to the Columbia Country Club and also a public comment disparaging the needs of people in less affluent communities makes clear that much of the stated concern was likely never environmental or financial.\n Gustavo Torres, executive director of a local immigration rights advocacy group CASA  told the Baltimore Sun: \u201cRight now, for a domestic worker to go to Bethesda to work, it takes two hours because they take three buses,\u201d he said. \u201cOn the Purple Line, it is going to take between 15 and 20 minutes.\u201d\n Any major project will incur harms on some group of people \u2014 construction can impede traffic, new structures can obstruct a view from your porch, things that reasonable people would agree are annoying or costly. But transportation projects have to go somewhere , and  one only has to look at the housing market to see the costs of allowing individual citizens to derail projects due to real or fabricated harms.\n   Brooks, the George Washington University economist, explained that the case of the Purple Line might explain many of the cost increases we\u2019ve seen over the decades. What does she call this phenomenon? \u201cWe call this the rise of citizen voice.\u201d\n Brooks ruled out the \u201cperfectly reasonable explanations\u201d like paying workers more or the increased cost of highway materials as driving much of the cost increase. Instead, she says, judicial, statutory, and administrative changes \u2014 in particular the passage of the National Environmental Policy Act (NEPA) in 1970 \u2014 have led to increased power for citizens.\n This isn\u2019t inherently an issue \u2014 while it raises costs to engage with lawsuits, if it stops the government from taking harmful action, that could be a good thing! Sometimes costs are rising because we\u2019re paying for something valuable, for instance higher safety standards and accessibility infrastructure like elevators.\n But often, we\u2019re just paying for wealthy individuals to exert their preferences over everyone else.\n NEPA required environmental impact statements (EIS) for \u201cmajor federal actions\u201d that could \u201csignificantly affect\u201d the environment,  write the Niskanen Center\u2019s Brink Lindsey and Samuel Hammond. Lawsuits have turned what were once reasonable requirements into behemoths:\n An EIS could be as short as 10 pages ... [but]  under the pressure of litigation the law\u2019s demands grew ever more onerous: Today the average EIS runs more than 600 pages, plus appendices that typically exceed 1,000 pages. The average EIS now takes 4.5 years to complete; between 2010 and 2017, four such statements were completed after delays of 17 years or more. And remember, no ground can be broken on a project until the EIS has made it through the legal gauntlet \u2013 and this includes both federal projects and private projects that require a federal permit.\n \u201cOnce the construction process starts, people complain. And those complaints lead to lawsuits,\u201d NYU professor and transit researcher Eric Goldwyn explains. Even in New York City where in 2018,  62 percent of all reported trips were made by transit, biking, or walking, the Second Avenue Subway project was plagued with disruptions by locals.\n SPUR, a California public policy nonprofit, argues that its state\u2019s environmental protection law (CEQA) \u201cis often used inappropriately to delay or stop transit and sustainable transportation projects that would have significant benefit to the environment.\u201d As city planner and UCLA housing researcher Nolan Gray  documented in the Atlantic, CEQA lawsuits have \u201cimperiled  infill housing in Sacramento,  solar farms in San Diego, and  transit in San Francisco. The mere threat of a lawsuit is enough to stop small projects\u2014especially housing\u2014from starting in the first place.\u201d\n \u201cThere are egregious examples of this,\u201d SPUR\u2019s transportation policy director Laura Tolkoff told me. \u201cOne person sued the San Francisco bicycle plan over parking losses which basically held up 34 miles of bike lanes for over four years. Over 2,000 individuals were  injured during that same time period due to collision while riding their bicycle.\u201d\n In Tolkoff\u2019s example, the state\u2019s environmental protection law was being used to defend a parking lot.\n  To try and figure out the root causes of America\u2019s transit costs problem, NYU researchers \tGoldwyn, Alon Levy, and Elif Ensari  looked to Boston, where the Green Line Extension (GLX) has been in the works for three decades. The 4.3-mile light rail project was estimated to cost $1.12 billion in 2012 \u2014 by 2015, that number had nearly tripled. Unsurprisingly, the project was put on hold.\n \u201cOne of the things that is so vexing about this issue is that there\u2019s not just one obvious thing,\u201d Eric Goldwyn, an assistant professor at NYU and a member of the Transit Costs Project, told Vox.\n But the researchers were able to identify a few reasons for what happened to the Green Line: Jockeying between two different understaffed agencies with little experience managing large projects and consultants, a laissez-faire approach to allowing stakeholders\u2019 expensive ideas to be added to the project scope \u201ceven if impractical,\u201d and  public pressure for more as the project dragged on and the demand for transit options increased.\n   While Boston\u2019s cost overruns were extreme, even for the US, the lessons learned in this case study are ones repeated by the experts Vox spoke with.\n One reason the US isn\u2019t very good at building transit cheaply is that it doesn\u2019t practice.\n \u201cIf you look at Paris or Seoul or Shanghai, they\u2019ve been building [transit] pretty much nonstop for decades now. New York, on the other hand, built its subway at a breakneck pace until 1940 and then cooled it,\u201d Goldwyn explained.\n Agencies aren\u2019t routinely in charge of building new things, so every time they do, it\u2019s back to the drawing board.\n \u201cThere\u2019s a learning curve, almost with every city, when they\u2019re introducing rail, because you don\u2019t have a local knowledge base on how to do this,\u201d explained Ethan Elkind, director of the climate program at UC Berkeley\u2019s Center for Law, Energy &amp; the Environment. \u201cWhether that\u2019s on the construction side or the oversight side or public management side. You do see a lot of cities stumble out of the gate when they\u2019re trying to get their first projects done.\u201d\n Then there\u2019s the complexity of building across multiple jurisdictions. The federal government often provides funding for a project that requires multiple cities or counties to coordinate, all to complete a multibillion-dollar project unlike one they\u2019ve probably ever accomplished before, often without a clearly defined leader \u2014 it\u2019s like the most dysfunctional group project ever.\n Elkind noted that even when the federal government works with a single jurisdiction, it can get messy, pointing to  \u201cthe existence of both Farragut North and Farragut West stations [in Washington, DC] \u2014 there was supposed to be one station but  the federal government wouldn\u2019t hand over this parcel that would have provided for one unified station.\u201d\n   Further, these agencies are often understaffed, creating bottlenecks at  every step of the process: \u201cThe nature of these projects is that you get questions about like \u2018should I use this CCTV wiring or that one\u2019 \u2014 you need people who can respond quickly and be expert enough on an array of topics [to keep the project moving],\u201d Goldwyn explained.\n Levy highlighted the failure of American institutions to turn to other parts of the world to learn what they are doing better: \u201cGetting more of these planning managers to say we need to be more German, more Italian, more Swedish, Korean \u2014 that\u2019s really hard,\u201d they said. \u201cThe United States is so bad at learning from other countries. If something in America doesn\u2019t work [and] in other countries it does work, people don\u2019t really course-correct.\u201d\n Transit agencies and local governments also  sometimes try to preempt public outcry, creating more work for themselves in the process. The Boston Green Line, for instance, proposed limiting construction to between 10 pm and 7 am and  required that traffic keep flowing. But as the transit costs researchers noted, \u201claborers are less productive when they have to spend the first hour of their shift setting things up and the last hour breaking things down to mask the fact that there is a major construction project underway. ... [I]n Istanbul, transit construction projects run 24 hours a day.\u201d In the span of seven years (the expected duration of the Green Line\u2019s 4.3-mile project), Istanbul built over 12 miles of subway.\n \u201cHere in the United States, we as a country are not very accepting of disruption,\u201d Goldwyn told Vox. In Los Angeles, workers constructing the Purple Line could only work weekends \u2014 then  Covid-19 hit, and stay-at-home orders made it possible for them to work 24/7. The result?\n   After all this talk of cost overruns and inordinate spending on various projects, you might think that the US is spending way too much on transportation. In fact, according to a  report by the Brookings Metropolitan Policy Program, the nation\u2019s transit spending \u201cfell by $9.9 billion in inflation-adjusted terms\u201d over the last 10 years. In comparison with similar countries, America spends a relatively small amount of its GDP (1.5 percent) on public infrastructure, while the UK spends 2 percent, France 2.4 percent, and Australia 3.5 percent.\n The problem is fundamentally that the US is  getting very little for what it builds.\n \u201cDon\u2019t miss the bigger prize here, which is, are we building the right infrastructure, in the right places, for the right reasons. We\u2019re not lacking money here,\u201d Adie Tomer, Brookings Metropolitan Policy Program fellow, argued. \u201cWe need to somehow talk about infrastructure efficiency and project delivery, but there\u2019s also a bigger story here too.\u201d\n Step one is  more data. The research we have on cost is limited by the fact that very little data is collected to figure out what each portion of a project actually cost. If a project is getting federal money, requiring that it provide an itemized list of costs to the federal government is a first step.\n   \u201cThe first is like the most benign thing, which is you should tell us how much a project costs when it\u2019s done,\u201d Brooks told Vox. \u201cAt the moment, the Federal Highway Administration doesn\u2019t know how much it costs to build any individual section of the highway.\u201d\n This isn\u2019t a new idea. As Matt Yglesias  reported for Vox in 2017, \u201csomeone killed a congressional inquiry into America\u2019s sky-high transit construction costs\u201d with no explanation.\n There are also myriad ways the US needs to streamline the process for developing transit projects. Lewis explained to me that European regulators were often shocked that American transit agencies have to go through their own process to get authorization to shut down a street or prepare an area for construction.\n \u201cA lot of the [processes] that we use here in the United States are too slow or too cumbersome and outdated. We need to make it easier to build more and better transit projects,\u201d Lewis explained.\n But cutting down on bureaucracy doesn\u2019t mean slashing government budgets \u2014 while simplifying the rules and regulations that go into developing projects, American transit agencies need to be staffed up in-house to reduce reliance on expensive contractors and build up institutional knowledge.\n Turning to other countries can show how to accomplish some of the country\u2019s transit goals (environmental protection, for instance) without exorbitant costs \u2014 Levy  writes that while the US paves the way for expensive lawsuits, Italy\u2019s equivalent federal environmental law \u201cis enforced by the administrative state.\u201d\n There is no magic button or single regulatory fix that will put the US on the path to a future with accessible, plentiful, and cost-efficient transit. But public fascination with seemingly futuristic forms of transportation like Elon Musk\u2019s  hyperloop dream or a network of high-speed rail crisscrossing the country proves the value of pushing through the bureaucratic and legal morass.\n   Millions turn to Vox to understand what\u2019s happening in the news. Our mission has never been more vital than it is in this moment: to empower through understanding. Financial contributions from our readers are a critical part of supporting our resource-intensive work and help us keep our journalism free for all.  Please consider making a contribution to Vox today from as little as $3.", "posttime": "2021-06-30 01:38:16", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u7f8e\u56fd,\u94c1\u8def,rail,\u9879\u76ee", "title": "\u4e3a\u4ec0\u4e48\u9053\u8def\uff0c\u94c1\u8def\u548c\u57fa\u7840\u8bbe\u65bd\u5728\u7f8e\u56fd\u5efa\u9020\u8fd9\u4e48\u591a\uff1f ", "title_en": "Why do roads, rail, and infrastructure cost so much to build in the US?", "transed": 1, "url": "https://www.vox.com/22534714/rail-roads-infrastructure-costs-america", "via": "", "real_tags": ["\u7f8e\u56fd", "\u94c1\u8def", "rail", "\u9879\u76ee"]}, {"category": "", "categoryclass": "", "imagename": "6164c4993bd86fc13540748cb722bd4e.png", "infoid": 1068675, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "Keyboardio\u6b63\u5728\u4e3aKickstarter\u63d0\u4f9b\u952e\u76d8\u578b\u53f7100\u7684\u8d44\u91d1\uff01 \u4e00\u4e2a\u952e\u76d8\uff0c\u5c31\u50cf\u4f60\u4e00\u6837 ", "note_en": "Keyboardio is raising funds for The Keyboardio Model 100 on Kickstarter!  A keyboard that works the way you do", "posttime": "2021-06-30 01:37:28", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u952e\u76d8,keyboardio", "title": "\u952e\u76d8\u578b\u53f7100 ", "title_en": "The Keyboardio Model 100", "transed": 1, "url": "https://www.kickstarter.com/projects/keyboardio/model-100", "via": "", "real_tags": ["\u952e\u76d8"]}, {"category": "", "categoryclass": "", "imagename": "40c7c3aacde1ba6d5a3e44a562c58935.jpg", "infoid": 1068674, "ip": "", "isanchordig": 1, "ischecked": 1, "isdelete": 0, "isneo": 1, "mark": "", "name": "", "note": "\u4e00\u4e2a\u65b0\u7684\u62a5\u544a\u53d1\u73b0\uff0c\u793e\u4ea4\u7f51\u7edc\u4ecd\u7136\u65e0\u6cd5\u89e3\u51b3\u5173\u4e8eCovid-19\u7684\u5728\u7ebf\u9519\u8bef\u4fe1\u606f\u4f20\u64ad\u3002\n  \u6765\u81ea\u5168\u7403\u516c\u6c11\u7ec4\u7ec7Avaaz\u7684\u521d\u6b65\u7814\u7a76\u8868\u660eFacebook\uff0cInstagram\uff0cTwitter\u548cYouTube\u5e76\u672a\u963b\u6b62\u5728\u5927\u6d41\u884c\u671f\u95f4\u5171\u4eab\u865a\u5047\u8c23\u8a00\u3002\n \u81ea\u5168\u7403\u536b\u751f\u5371\u673a\u5f00\u59cb\u4ee5\u6765\uff0c\u6240\u6709\u5e73\u53f0\u90fd\u627f\u8bfa\u6709\u5173\u51a0\u72b6\u75c5\u6bd2\u7684\u53ef\u9760\u4fe1\u606f\u5728\u5176\u5e73\u53f0\u4e0a\u5171\u4eab\u3002\n   \u4f46\u968f\u7740\u6b27\u6d32\u9762\u4e34\u7740\u53ef\u80fd\u7684\u7b2c\u4e09\u6ce2\u611f\u67d3\uff0cAvaaz\u8bf4\uff06\uff0334;\u6ca1\u6709\uff06\uff0334;\u5927\u79d1\u6280\u516c\u53f8\u6b63\u5728\u6709\u6548\u5730\u904f\u5236Covid-19\u7684\u8513\u5ef6\u3002\n \uff06\uff0334;\u5b83\u7684\u75b2\u60eb\u4e0d\u582a\uff0c\u4f46\u662f\uff0c\u6ca1\u6709\u4e00\u4e2a\u6280\u672f\u5e73\u53f0\uff0c\u904f\u5236\u6c61\u67d3\u4ed6\u4eec\u5e73\u53f0\u7684\u6709\u6bd2\u8c0e\u8a00\uff0c\uff06\uff0334;\u5362\u5361\u00b7\u5c3c\u79d1\u7279\u62c9\u8bf4\uff0cAvaaz\u7ade\u9009\u603b\u76d1\u3002\n \u4e16\u754c\u536b\u751f\u7ec4\u7ec7\uff08WHO\uff09\u5148\u524d\u5df2\u7ecf\u8b66\u544a\u8fc7Covid-19\uff06\uff0334; infodemast\uff06\uff0334;\u8fd9\u5a01\u80c1\u8981\u7834\u574f\u5bf9\u5065\u5eb7\u5371\u673a\u7684\u5168\u7403\u53cd\u5e94\u3002\n Avaaz\u547c\u5401\u793e\u4ea4\u7f51\u7edc\u548c\u6b27\u76df\uff0c\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u89e3\u51b3Covid-19\u9519\u8bef\u4fe1\u606f\uff0c\u4ee5\u4e0e\u6c14\u5019\u53d8\u5316\u7c7b\u4f3c\u3002 \n\uff06\uff0334;\u6211\u4eec\u8feb\u5207\u9700\u8981\u4e00\u4e2a\uff06\uff0339;\u5df4\u9ece\u7684\u4e0d\u8bda\u5b9e\u534f\u8bae\uff06\uff0339;\uff0c\uff06\uff0334;\u5c3c\u79d1\u7279\u62c9\u8bf4\uff0c\uff06\uff0334;\u4f46\u8fd9\u8981\u6c42\u5927\u578b\u6280\u672f\u5e73\u53f0\u540c\u610f\u5177\u6709\u6709\u610f\u4e49\u627f\u8bfa\u548c\u53ef\u8861\u91cf\u884c\u52a8\u7684\u5f3a\u5927\u5b9e\u8df5\u51c6\u5219\u3002\uff06\uff0334;\n  \u6b27\u6d32\u59d4\u5458\u4f1a\u7684\u526f\u603b\u88c1V\u00f5raJourov\u00e1\u652f\u6301\u6765\u81eaAvaaz\u7684\u7535\u8bdd\u3002\n \uff06\uff0334;\u6211\u4eec\u5fc5\u987b\u6709\u5de5\u5177\u53ef\u4ee5\u60e9\u7f5a\u53c2\u4e0e\u7684\u4eba\u53ef\u4ee5\u88ab\u8bc1\u660e[\u4f20\u64ad\u4e0d\u73b0\u5b9e]\uff0c\uff06\uff0334; Jourova\u5468\u56db\u63a8\u6587\u3002\n Eurolews\u8054\u7cfb\u4e86Facebook  - \u5b83\u4e5f\u62e5\u6709Instagram  -  Twitter\u548cYouTube\uff06\uff0339;\u8c37\u6b4c\u7684\u7236\u6bcd\u516c\u53f8\uff0c\u4ee5\u56de\u590d\u8be5\u7814\u7a76\u3002\n   \u5728\u4ed6\u4eec\u7684\u7814\u7a76\u4e2d\uff0cAvaaz\u53d1\u73b0\u4e86240\u4ef6\u5173\u4e8eCovid-19\u7684\u4e8b\u5b9e\u68c0\u67e5\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u5b83\u6b63\u5728Facebook\uff0cInstagram\uff0cTwitter\u548cYouTube\u4e0a\u4f20\u64ad\u3002\n \u636e\u62a5\u9053\uff0c\u6b64\u5185\u5bb9\u5df2\u88ab\u4eba\u559c\u6b22\uff0c\u5171\u4eab\uff0c\u5e76\u8bc4\u8bba\u8d85\u8fc7280\u4e07\u6b21\u3002\n \uff06\uff0334;\u5927\u56db\u79d1\u6280\u5e73\u53f0\u672a\u80fd\u5728\u672c\u7814\u7a76\u4e2d\u7814\u7a76\u768437\uff05\u7684Covid-19 Disinformation\u542b\u91cf\u6837\u672c\u884c\u4e8b\uff0c\uff0334; Avaaz\u8865\u5145\u9053\u3002 \n\u603b\u4f53\u800c\u8a00\uff0cYoutube\u88ab\u8ba4\u4e3a\u662fAvaaz\u8868\u793a\uff0c\u60a8\u662f\u6700\u7cdf\u7cd5\u7684\u793e\u4ea4\u7f51\u7edc\uff0c\u5373\u5728\u8be5\u7814\u7a76\u5206\u6790\u7684youtube\u4e0a\u8d85\u8fc792\uff05\u7684\u8bef\u5dee\u4e2d\u6ca1\u6709\u91c7\u53d6\u884c\u52a8\u3002\n Twitter\u4e5f\u4ee4\u4eba\u6cae\u4e27\uff0c\u672a\u80fd\u89e3\u51b3AVAAZ\u53d1\u73b0\u768474\uff05\u7684Covid-19 Falsities\uff0c\u800cFacebook\uff0827\uff05\uff09\u548cInstagram\uff087\uff05\uff09\u4e5f\u5ffd\u7565\u4e86\u4e00\u4e9b\u9519\u8bef\u4fe1\u606f\u3002\n   \u89c6\u9891\u5171\u4eab\u5e73\u53f0\u8868\u793a\uff0c\u6b64\u524d\u8868\u793a\u5b83\u7981\u6b62\u4e86\u5173\u4e8e\u63d0\u51faA\uff06\uff0334\u7684\u51a0\u72b6\u75c5\u6bd2\u7684\u5185\u5bb9;\u4e25\u91cd\u5371\u5bb3\u5371\u5bb3\u7684\u98ce\u9669\uff06\uff0334;\u6216\u8005\u7531\u4e16\u536b\u7ec4\u7ec7\u548c\u5f53\u5730\u536b\u751f\u5f53\u5c40\u63d0\u4f9b\u7684\u77db\u76fe\u7684\u533b\u7597\u4fe1\u606f\u3002\n \uff06\uff0334; Youtube\u5728\u5e73\u53f0\u4e0a\u6709\u7981\u6b62\u6709\u5bb3\u548c\u8bef\u5bfc\u533b\u7597\u6216\u5065\u5eb7\u76f8\u5173\u5185\u5bb9\u7684\u957f\u671f\u653f\u7b56\uff0c\uff06\uff0334;\u53d1\u8a00\u4eba\u544a\u8bc9\u6b27\u6d32\u6b66\u8d38\u5dde\u3002\n \uff06\uff0334;\u6211\u4eec\u7ee7\u7eed\u8fc5\u901f\u91c7\u53d6\u884c\u52a8\uff0c\u4ee5\u66f4\u65b0\u4e0eCovid-19\u76f8\u5173\u7684\u653f\u7b56\uff0c\u4ee5\u66f4\u597d\u5730\u6ee1\u8db3\u6211\u4eec\u5728YouTube\u4e0a\u770b\u5230\u7684\u6311\u6218\u3002\u9664\u4e86\u53bb\u9664\u8fdd\u89c4\u5185\u5bb9\u5916\uff0c\u6211\u4eec\u8fd8\u63d0\u51fa\u4e86\u6743\u5a01\u4fe1\u606f\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u3002\uff06\uff0334;\n Avaaz\u6307\u51fa\uff0c\u4e8b\u5b9e\u4e0a\u68c0\u67e5\u89c6\u9891\u662f\uff06\uff0334;\u66f4\u56f0\u96be\uff06\uff0334;\u800c\u4e0d\u662facce-checking\u7684\u4e66\u9762\u5e16\u5b50\u6216\u56fe\u50cf\uff0c\u4f46\u662fYoutube\u5df2\u7ecf\u6709\u4e86\uff06\uff0334;\u5145\u8db3\u7684\u65f6\u95f4\uff06\uff0334;\u627e\u5230\u89e3\u51b3\u65b9\u6848\u3002\n Youtube\u8868\u793a\uff0c\u4ed6\u4eec\u7684\u56e2\u961f\u5df2\u7ecf\u5220\u9664\u4e86\u8d85\u8fc790\u4e07\u4e2a\u89c6\u9891\u4e0e\uff06\uff0334\u76f8\u5173\u7684\u89c6\u9891;\u5371\u9669\u6216\u8bef\u5bfc\u6027\u7684Covid-19\u533b\u7597\u4fe1\u606f\u3002\uff06\uff0334; \nFacebook\u8fd8\u8868\u793a\uff0c\u5b83\u5206\u4eab\u4e86\uff06\uff0334\u7684\u76ee\u6807;\u51cf\u5c11\u4e86\u8bef\u5bfc\u7684\u4f20\u64ad\uff06\uff0334;\uff0c\u5e76\u6279\u8bc4\u4e86\u65b0\u7684\u7814\u7a76\u3002\n \uff06\uff0334; Avaaz\u7684\u5206\u6790\u6ca1\u6709\u8003\u8651\u5230\u6211\u4eec\u4eceFacebook\u548cInstagram\u4e2d\u5220\u9664\u7684\u8d85\u8fc71800\u4e07\u4ef6\u5185\u5bb9\uff0c\u4ee5\u8fdd\u53cd\u6211\u4eec\u7684Covid-19\u4ee5\u6765\u81ea\u5927\u6d41\u884c\u5f00\u59cb\u4ee5\u6765\u7684\u75ab\u82d7\u9519\u8bef\u4fe1\u606f\u653f\u7b56;\u4e00\u5bb6\u516c\u53f8\u53d1\u8a00\u4eba\u8868\u793a\u3002\n \uff06\uff0334;\u6211\u4eec\u8fd8\u6807\u6709\u6211\u4eec\u7684\u4e8b\u5b9e\u7f51\u7edc\u68c0\u67e5\u5408\u4f5c\u4f19\u4f34\u76841.67\u4ebf\u4ef6Covid-19\u5185\u5bb9\u989d\u5b9a\u5047\u3002\uff06\uff0334;\n \uff06\uff0334;\u6ca1\u6709\u50cf\u6211\u4eec\u8fd9\u6837\u7684\u8282\u76ee\u7684\u73a9\u5177\u4e66\uff0c\u6211\u4eec\u4e0d\u65ad\u52aa\u529b\u6539\u8fdb\u5b83\uff0c\uff06\uff0334;\u53d1\u8a00\u4eba\u8865\u5145\u9053\u3002\n Avaaz\uff06\uff0339;\u7814\u7a76\u53d1\u73b0\uff0cFacebook\u4e0a\u7684Covid-19\u9519\u8bef\u4fe1\u606f\u5df2\u6536\u5230\u6bd4\u4efb\u4f55\u5176\u4ed6\u5e73\u53f0\u66f4\u6709\u4e92\u52a8\u3002\n   \u4ee5\u524d\u4e3a\u4ed6\u4eec\u7684\u7b97\u6cd5\u5f15\u7528\u4e86\u793e\u4ea4\u7f51\u7edc\uff0c\u63a8\u8350\u7ed9\u7528\u6237\u7684\u65b0\u5185\u5bb9\u548c\u4e3b\u9898\uff0c\u5e76\u65e8\u5728\u5c06\u5b83\u4eec\u4fdd\u7559\u5728\u5e73\u53f0\u4e0a\u3002\n \u4ee5\u524d\u7684\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u8fd8\u63a8\u52a8\u4e86\u793e\u4ea4\u5a92\u4f53\u7528\u6237\uff0c\u65e8\u5728\u7eb3\u5165\u542b\u6709\u5371\u9669\u7684\u9634\u8c0b\u7406\u8bba\u548c\u9519\u8bef\u4fe1\u606f\u7684\u5185\u5bb9\u3002 \n\u4f46Avaaz\u7684\u62a5\u544a\u8fd8\u53d1\u73b0\uff0c\u79d1\u6280\u516c\u53f8\u6ca1\u6709\u4ee5\u4e0d\u540c\u8bed\u8a00\u540c\u6837\u5730\u89e3\u51b3\u9519\u8bef\u4fe1\u606f\u3002  \u62a5\u544a\u79f0\uff0c\u672a\u91c7\u53d6\u8fd1\u4e00\u534a\uff0849\uff05\uff09\u7684\u4e8b\u5b9e\u4e0a\u68c0\u67e5\u7684MISINOMAGANGS\u4ee5\u4e3b\u8981\u7684\u975e\u82f1\u5f0f\u6b27\u5f0f\u8bed\u8a00\u7684\u8bef\u5bfc\u5185\u5bb9\u3002  Avaaz\u8bf4\uff0c\u8fd9\u4e0e\u82f1\u8bed\u76f8\u6bd4\uff0c\u53ea\u670929\uff05\u7684Covid-19\u9519\u8bef\u4fe1\u606f\u6ca1\u6709\u89e3\u51b3\u3002  \u672c\u96c6\u56e2\u8868\u793a\uff0c\u5927\u591a\u6570\u5173\u4e8e\u610f\u5927\u5229\u4eba\uff0884\uff05\uff09\u548c\u8461\u8404\u7259\u8bed\uff0862\uff05\uff09\u7684Covid-19\u7684\u9519\u8bef\u4fe1\u606f\u5c1a\u672a\u91c7\u53d6\u884c\u52a8\u3002  \u4e0e\u6b64\u540c\u65f6\uff0c\u897f\u73ed\u7259\u8bed\u548c\u5fb7\u56fd\u53d1\u8a00\u4eba\u5728\u7ebf\u6700\u53d7\u4fdd\u62a4\uff0c\u5206\u522b\u7f3a\u4e4f\u7f3a\u4e4f20\uff05\u548c21\uff05\u7684\u9519\u8bef\u5185\u5bb9\u7684\u63aa\u65bd\u3002  Twitter\u8868\u793a\uff0c\u5728\u6b27\u6d32\u6b27\u5143\u7684\u58f0\u660e\u4e2d\uff0c\u4ed6\u4eec\u6b63\u5728\u52a0\u5feb\u4ed6\u4eec\u5168\u7403\u52aa\u529b\u53bb\u9664Covid-19\u9519\u8bef\u4fe1\u606f\u3002  \uff06\uff0334;\u5c3d\u53ef\u80fd\u901a\u8fc7\u53ef\u9760\uff0c\u6743\u5a01\u7684\u5065\u5eb7\u4fe1\u606f\uff0c\u5728\u63a8\u7279\u4e0a\u5f88\u5bb9\u6613\u8bbf\u95ee\uff0c\u8fd9\u662f\u6211\u4eec\u5728\u5168\u7403\u5927\u6d41\u884c\u7684\u4e2d\u95f4\u7684\u4f18\u5148\u7ea7\uff0c\uff06\uff0334; \u4e00\u5bb6\u516c\u53f8\u53d1\u8a00\u4eba\u8868\u793a\u3002 \n\uff06\uff0334;\u81eaCovid-19\u5f00\u59cb\u4ee5\u6765\uff0c\u6211\u4eec\u5df2\u7ecf\u6269\u5927\u5e76\u63d0\u9ad8\u4e86\u6211\u4eec\u5bf9\u8fd9\u4e9b\u52aa\u529b\u7684\u6295\u8d44\u3002 \u6211\u4eec\u5df2\u7ecf\u5220\u9664\u4e86\u8d85\u8fc722,400\u540d\u63a8\u6587\uff0c\u5e76\u6311\u6218\u5168\u74031170\u4e07\u4e2a\u5e10\u6237\u3002\uff06\uff0334;  Avaaz\u8fd8\u6307\u51fa\uff0cTwitter\u548cYouTube\u7684\u504f\u597d\u662f\u6d88\u9664\u9519\u8bef\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u6807\u8bb0\u5b83\uff0c\u53ef\u80fd\u4f1a\u6210\u4e3a\u8a00\u8bed\u81ea\u7531\u7684\u98ce\u9669\u3002 ", "note_en": "Social networks are still failing to tackle the spread of online misinformation about COVID-19, a new report has found.\n  Preliminary research from global civic organisation Avaaz suggests that Facebook, Instagram, Twitter, and YouTube have not prevented the sharing of false rumours during the pandemic.\n Since the start of the global health crisis, all platforms have pledged that reliable information about the coronavirus is shared on their platforms.\n   But as Europe faces a possible third wave of infections, Avaaz says that &#34;none&#34; of the big tech companies are effectively curbing the spread of COVID-19 disinformation.\n &#34;It&#39;s exhausting to keep saying this, but none of the tech platforms are doing enough to curb the toxic lies polluting their platforms,&#34; said Luca Nicotra, Campaign Director at Avaaz.\n The World Health Organization (WHO) has previously warned about a COVID-19 &#34;infodemic&#34; that threatens to undermine the global response to the health crisis.\n Avaaz has called on social networks, and the European Union, to tackle COVID-19 misinformation in a similar way to climate change.\n  &#34;We urgently need a &#39;Paris Agreement for Disinformation&#39;,&#34; said Nicotra, &#34;but that requires the Big Tech platforms to agree on a strong Code of Practice that has meaningful commitments and measurable action.&#34;\n  V\u011bra Jourov\u00e1, the European Commission&#39;s Vice-President for Values and Transparency, has supported the calls from Avaaz.\n &#34;We must have tools to punish those whose involvement can be proven [of spreading disinformation],&#34; Jourova tweeted on Thursday.\n Euronews has contacted Facebook -- which also owns Instagram -- Twitter, and YouTube&#39;s parent company Google for a response to the study.\n   In their study, Avaaz found 240 pieces of fact-checked misinformation about COVID-19 that were spreading on Facebook, Instagram, Twitter, and Youtube.\n This content had reportedly been liked, shared, and commented on more than 2.8 million times.\n &#34;The big four tech platforms are failing to act on 37% of the COVID-19 disinformation content sample studied in this research,&#34; Avaaz added.\n Overall, YouTube was found to be the worst social network for acting on COVID-19 misinformation, Avaaz said, where over 92% of the misinformation on YouTube analysed by the study had not been acted on.\n Twitter also fared poorly, failing to tackle 74% of the COVID-19 falsities found by Avaaz, while Facebook (27%) and Instagram (7%) had also neglected to remove some misinformation.\n   The video-sharing platform said previously stated that it banned content about the coronavirus that posed a &#34;serious risk of egregious harm&#34; or contradicted medical information given by the WHO and local health authorities.\n &#34;YouTube has long-standing policies prohibiting harmful and misleading medical or health-related content on the platform,&#34; a spokesperson told Euronews.\n &#34;We have continued to act quickly to update our policies related to COVID-19 to better meet the challenges we are seeing on YouTube. In addition to removing violative content, we raise up authoritative information to provide users with additional context.&#34;\n Avaaz noted that fact-checking videos is &#34;more difficult&#34; than fact-checking written posts or images, but said YouTube had had &#34;ample time&#34; to find a solution.\n YouTube said their teams had removed more than 900,000 videos related to &#34;dangerous or misleading COVID-19 medical information.&#34;\n   Facebook has also stated that it shares the goal of &#34;reducing the spread of misinformation&#34;, and has criticised the new study.\n &#34;Avaaz\u2019s analysis does not take into account the more than 18 million pieces of content that we\u2019ve removed from Facebook and Instagram for violating our COVID-19 and vaccine misinformation policies since the beginning of the pandemic,&#34; said a company spokesperson.\n &#34;We\u2019ve also labeled more than 167 million pieces of COVID-19 content rated false by our network of fact checking partners.&#34;\n &#34;There is no playbook for a program like ours and we\u2019re constantly working to improve it,&#34; the spokesperson added.\n Avaaz&#39;s study found that COVID-19 misinformation on Facebook had received more interactions than on any other platform.\n   Social networks have previously been cited for their algorithms, which recommend new content and topics to users and aim to keep them on the platforms.\n Previous studies have said that these algorithms also push social media users towards content containing dangerous conspiracy theories and misinformation.\n But the report by Avaaz has also found that tech companies are not tackling misinformation equally in different languages.\n Nearly half (49%) of fact-checked misinformation content in major non-English European languages is not acted upon, the report claimed.\n That compares to English, where only 29% of COVID-19 misinformation is not tackled, Avaaz said.\n  The group said that most of the misinformation spreading about COVID-19 in Italian (84%) and Portuguese (62%) had not been actioned.\n Meanwhile, Spanish and German speakers were most protected online with measures lacking for only 20% and 21% of false content, respectively.\n In a statement to Euronews, Twitter said that they were accelerating their worldwide efforts to remove COVID-19 misinformation.\n &#34;Making certain that reliable, authoritative health information is easily accessible on Twitter has been a priority long before we were in the midst of a global pandemic,&#34; said a company spokesperson.\n &#34;Since the beginning of COVID-19, we\u2019ve expanded and increased our investment in those efforts. We\u2019ve removed more than 22,400 Tweets and challenged 11.7 million accounts worldwide.&#34;\n Avaaz also noted that the preference of Twitter and Youtube to remove misinformation, rather than label it, could become a risk to freedom of speech.", "posttime": "2021-06-30 01:36:52", "source_domain": "news.ycombinator.com", "source_name": "Hacker News", "tags": "\u5df4\u9ece,paris,avaaz", "title": "\u201c\u6211\u4eec\u8feb\u5207\u9700\u8981\u201d\u5df4\u9ece\u7684\u8bfd\u8c24\u534f\u8bae\u201c\u201d ", "title_en": "\u201cWe urgently need a 'Paris Agreement for Disinformation' \u201c", "transed": 1, "url": "https://www.euronews.com/2021/06/24/social-networks-still-failing-to-tackle-covid-19-misinformation-report-claims", "via": "", "real_tags": ["\u5df4\u9ece", "paris", "avaaz"]}]